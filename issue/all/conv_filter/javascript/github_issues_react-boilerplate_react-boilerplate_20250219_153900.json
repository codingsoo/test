[
  {
    "number": 596,
    "title": "Change output DIR and name",
    "created_at": "2016-06-23T17:26:22Z",
    "closed_at": "2016-06-23T18:51:27Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/react-boilerplate/react-boilerplate/issues/596",
    "body": "Hi there,\n\nIs there are way to change the output directory and filename for the app?\n\nI'm trying to use it as part of a WordPress plugin, and want to standardise filenames\n",
    "comments_url": "https://api.github.com/repos/react-boilerplate/react-boilerplate/issues/596/comments",
    "author": "joneslloyd",
    "comments": [
      {
        "user": "mxstbr",
        "created_at": "2016-06-23T17:36:51Z",
        "body": "I think what you're looking for is in `internals/webpack/webpack.base.babel.js`, specifically the `output` property. :+1:\n"
      },
      {
        "user": "joneslloyd",
        "created_at": "2016-06-23T18:00:12Z",
        "body": "Perfect, thanks!\n"
      },
      {
        "user": "lock[bot]",
        "created_at": "2018-05-30T10:47:31Z",
        "body": "This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.\n"
      }
    ]
  },
  {
    "number": 454,
    "title": "State variables.",
    "created_at": "2016-06-02T15:58:46Z",
    "closed_at": "2016-06-04T13:34:20Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/react-boilerplate/react-boilerplate/issues/454",
    "body": "Hello. As far as I understand, state is structured in some kind of substates. For example, in sample application there is async  `HomePage` reducer, which adds `home` variable to state (in addition to `global` and `route`). In this  `home` object only username is stored. When you are loading repositories,  you should load data and show spinner while loading (setting `state.global.loading` variable to `true`). \n\nI understand, that `loading` variable should be global for whole application. Because of it, you need to get access in one reducer to both `loading`and `userData.repositories` variables . That is why you handle `LOAD_REPOS` action on application level (in `App/reducer` not in `HomePage/reducer`). And that is why you have to keep HomePage specific info ( `userData.repositories` variable ) in `state.global`, not in `state.home`. Am I right?\n\nIf I am right, let us imagine, that I have some `BlogPage` container (generated by your generator), which adds `blogPage` section in state. I need to retrieve list of blogs from API and show spinner while I am loading it. For that purpose I need something like this:\n\n```\nfunction blogPageReducer(state = initialState, action) {\n  switch (action.type) {\n    case LOAD_BLOGS:\n          return  state.set('loading', true).\n            setIn(['blogData'],['blogs'],false);\n    case BLOGS_LOADED:\n          return state.setIn(['blogData', 'blogs'], action.blogs)\n                      .set('loading', false);\n    default:\n      return state;\n  }\n}\n```\n\n But as I understand, I can not do this, because I do not know, how to get access to `state.global.loading` variable from '`BlogPage/reducer`'. Only  `blogPage` object is passed in reducer function. That is why I also need to handle `LOAD_BLOGS` in `App/reducer` and add my `blogData` object (with list of blogs) in `state.global` object. Is it normal? How can I get access to `state.global.loading` from '`BlogPage/reducer`'? \n",
    "comments_url": "https://api.github.com/repos/react-boilerplate/react-boilerplate/issues/454/comments",
    "author": "Stalso",
    "comments": [
      {
        "user": "kunal-mandalia",
        "created_at": "2016-06-02T19:46:19Z",
        "body": "I've been fiddling around with this too...was able to get access to state values via the store e.g.\n\n`store.getState().get('global').get('currentUser') // returns false by default, as per app's initial state`\n\nNot sure if this is best practice (I'm sure someone out there can tell us). ~~So in your case if store isn't available, just import it.~~\n"
      },
      {
        "user": "tylerle",
        "created_at": "2016-06-03T20:26:49Z",
        "body": "@kunal-mandalia we don't have store from BlogPage/reducer? How can I get store object from BlogPage/reducer?\n"
      },
      {
        "user": "mxstbr",
        "created_at": "2016-06-04T13:34:20Z",
        "body": "The missing piece here is that with Redux, you can **react to an action with multiple reducers**.\n\nThat means in your `blogPageReducer` you handle the `LOAD_BLOGS` action with `setIn(['blogData'],['blogs'],false);`, and in the `appReducer` you handle the `LOAD_BLOGS` action with `state.set('loading', true)`! The same goes for the `BLOGS_LOADED` action.\n\nHope that answers the question, let me know if you have any more!\n"
      },
      {
        "user": "Stalso",
        "created_at": "2016-06-04T15:10:30Z",
        "body": "Thank you.  It answers the question.  But you hold your `repositories` array in `global` variable of state?  For simplicity? \n"
      },
      {
        "user": "mxstbr",
        "created_at": "2016-06-04T16:26:27Z",
        "body": "Yes, mostly for simplicity since this is a tiny example app!\n"
      },
      {
        "user": "Stalso",
        "created_at": "2016-06-04T16:29:13Z",
        "body": "Thank you Max.  Your template is cool.  I am. Net and Asp. Net developer,  who decided to learn something new,  and your template is awesome starting point \n"
      },
      {
        "user": "mxstbr",
        "created_at": "2016-06-04T16:36:10Z",
        "body": "Thanks, great to hear! Let me know how you get along!\n"
      },
      {
        "user": "Stalso",
        "created_at": "2016-06-04T16:45:37Z",
        "body": "It is is rather unusual for me.  All this node and especially react stuff is some kind of chaos for me,  after structured and rather static .Net world.  Also I am confused with the leak of normal debug (like we do it in  Visual Studio).  But this is funny.  Maybe someday (I believe in it)  Asp.Net Core will become the best backend and with React will become a future of Web \n"
      },
      {
        "user": "lock[bot]",
        "created_at": "2018-05-30T12:47:11Z",
        "body": "This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.\n"
      }
    ]
  }
]