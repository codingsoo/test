[
  {
    "number": 6443,
    "title": "Order Guarantees with the Async API",
    "created_at": "2025-02-18T17:09:07Z",
    "closed_at": "2025-02-19T09:56:35Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/redisson/redisson/issues/6443",
    "body": "Hey,\nI\u2019m wondering if the following example guarantees execution order:\n```\nRBucket<String> bucket = redisson.getBucket(\"key\");\n\nbucket.setAsync(\"value\"); // Fire SET without waiting\nRFuture<String> future = bucket.getAsync(); \n\nfuture.thenAccept(System.out::println); \n```\nDoes SET always execute before GET, even though SET wasn\u2019t explicitly awaited?\n\n",
    "comments_url": "https://api.github.com/repos/redisson/redisson/issues/6443/comments",
    "author": "barshaul",
    "comments": [
      {
        "user": "mrniko",
        "created_at": "2025-02-19T08:58:52Z",
        "body": "Hi,\n\nNo, due to the asynchronous nature of the connections handling. \n\nTo achieve that you can create a Redisson instance with `\u0441onnectionPoolSize = 1`."
      },
      {
        "user": "barshaul",
        "created_at": "2025-02-19T09:56:35Z",
        "body": "Ack, that answers my question. Thanks! "
      },
      {
        "user": "mrniko",
        "created_at": "2025-02-19T10:50:04Z",
        "body": "@barshaul \n\nTo achieve that you can create a Redisson instance with `\u0441onnectionPoolSize = 1`"
      }
    ]
  },
  {
    "number": 6315,
    "title": "Redisson is shutdown",
    "created_at": "2024-12-04T02:54:58Z",
    "closed_at": "2024-12-04T09:40:48Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/redisson/redisson/issues/6315",
    "body": "### Redisson Version\r\n3.13.2\r\n\r\n### What is the Actual behavior?\r\nan error is reported by refreshing the local cache through Redis when the k8s pod is destroyed\r\n\r\n### Redisson configuration\r\n\r\n\r\n    @Bean\r\n    public StringRedisTemplate stringRedisTemplateMenu() {\r\n        StringRedisTemplate template = new StringRedisTemplate();\r\n        template.setConnectionFactory(redissonMenuConnectionFactory());\r\n        return template;\r\n    }\r\n    @Bean\r\n    public RedisConnectionFactory redissonMenuConnectionFactory() {\r\n        return new RedissonConnectionFactory(redissonMenu());\r\n    }\r\n    @Bean(destroyMethod = \"shutdown\")\r\n    public RedissonClient redissonMenu() {\r\n        if (StringUtils.isBlank(redissonMenuProperties.getSingleServerConfig().getPassword())) {\r\n            redissonMenuProperties.getSingleServerConfig().setPassword(null);\r\n        }\r\n        Config config = null;\r\n        try {\r\n            config = Config.fromJSON(JSON.toJSONString(redissonMenuProperties));\r\n        } catch (Exception e) {\r\n            log.error(\"spring.redisson-menu \u914d\u7f6e\u5f02\u5e38:{}\", e.getMessage(), e);\r\n            throw new BaseBizException(BaseErrorEnum.UNKNOW_SYSTEM_ERROR, \"spring.redisson-menu \u914d\u7f6e\u8bfb\u53d6\u5f02\u5e38\");\r\n        }\r\n        config.setCodec(new org.redisson.client.codec.StringCodec());\r\n        return Redisson.create(config);\r\n    }\r\n\r\n### Additional information\r\n`nested exception is org.redisson.RedissonShutdownException: Redisson is shutdown org.springframework.dao.InvalidDataAccessApiUsageException: Redisson is shutdown; nested exception is org.redisson.RedissonShutdownException: Redisson is shutdown\\n\\tat org.redisson.spring.data.connection.RedissonExceptionConverter.convert(RedissonExceptionConverter.java:48)\\n\\tat org.redisson.spring.data.connection.RedissonExceptionConverter.convert(RedissonExceptionConverter.java:35)\\n\\tat org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)\\n\\tat org.redisson.spring.data.connection.RedissonConnection.transform(RedissonConnection.java:217)\\n\\tat org.redisson.spring.data.connection.RedissonConnection.syncFuture(RedissonConnection.java:212)\\n\\tat org.redisson.spring.data.connection.RedissonConnection.sync(RedissonConnection.java:378)\\n\\tat org.redisson.spring.data.connection.RedissonConnection.read(RedissonConnection.java:759)\\n\\tat org.redisson.spring.data.connection.RedissonConnection.get(RedissonConnection.java:493)\\n\\tat org.springframework.data.redis.connection.DefaultStringRedisConnection.get(DefaultStringRedisConnection.java:404)\\n\\tat org.springframework.data.redis.core.DefaultValueOperations$1.inRedis(DefaultValueOperations.java:57)\\n\\tat org.springframework.data.redis.core.AbstractOperations$ValueDeserializingRedisCallback.doInRedis(AbstractOperations.java:60)\\n\\tat org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:228)\\n\\tat org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:188)\\n\\tat org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:96)\\n\\tat org.springframework.data.redis.core.DefaultValueOperations.get(DefaultValueOperations.java:53)\\n ...`\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/redisson/redisson/issues/6315/comments",
    "author": "LHH7049",
    "comments": [
      {
        "user": "mrniko",
        "created_at": "2024-12-04T06:30:24Z",
        "body": "This is an expected behavior since pod is shutdown."
      },
      {
        "user": "LHH7049",
        "created_at": "2024-12-04T09:40:48Z",
        "body": "> This is an expected behavior since pod is shutdown.\r\n\r\nfine, thanks"
      }
    ]
  },
  {
    "number": 5893,
    "title": "RLocalCachedMap local cache use?",
    "created_at": "2024-05-21T09:09:24Z",
    "closed_at": "2024-05-22T11:38:02Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/redisson/redisson/issues/5893",
    "body": "if the data change on redis server\uff0ccan we get the new data in local cache? or the server will info client the change?\r\n",
    "comments_url": "https://api.github.com/repos/redisson/redisson/issues/5893/comments",
    "author": "KYV365",
    "comments": [
      {
        "user": "mrniko",
        "created_at": "2024-05-21T12:30:52Z",
        "body": "pubsub message should be send after change if data updated without Redisson client."
      },
      {
        "user": "KYV365",
        "created_at": "2024-05-22T01:47:46Z",
        "body": "> pubsub message should be send after change if data updated without Redisson client.\r\n\r\nbut the new data can not get by method cachedValues()"
      },
      {
        "user": "mrniko",
        "created_at": "2024-05-22T05:32:33Z",
        "body": "you need to set `syncStrategy = UPDATE` local cache setting"
      },
      {
        "user": "KYV365",
        "created_at": "2024-05-22T07:23:58Z",
        "body": "> you need to set `syncStrategy = UPDATE` local cache setting\r\n\r\nthanks for your reply"
      }
    ]
  },
  {
    "number": 5882,
    "title": "Here\u2019s the issue we encountered with `redisson-3.11.5.jar`",
    "created_at": "2024-05-20T02:52:53Z",
    "closed_at": "2024-05-21T06:06:27Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/redisson/redisson/issues/5882",
    "body": "\r\nOur service connects to the SLB (Server Load Balancer) using a domain name, which maps through a port to the Redis server nodes.\r\n\r\nFor example:\r\n- Service IP --> Domain A:2700 --> EIP (10.75.10.20):27000 --> Redis server: 10.65.10.30:27000\r\n\r\nThe Redis sentinel nodes are:\r\n- 10.65.10.30:27000\r\n- 10.65.10.40:27000\r\n- 10.65.10.50:27000\r\n\r\nRedisson performs two types of checks: `scheduleSentinelDNSCheck` and `scheduleChangeCheck`. These checks result in the following situations:\r\n\r\n- `redis://10.75.10.20:27000 added`\r\n- `redis://10.75.10.20:27000 was down`\r\n- `redis://10.65.10.30:27000 added`\r\n- `redis://10.65.10.30:27000 was down`\r\n\r\nThis causes a polling effect, even though they ultimately point to the correct sentinel nodes.\r\n\r\n### How to Resolve This Issue\r\n",
    "comments_url": "https://api.github.com/repos/redisson/redisson/issues/5882/comments",
    "author": "githuailoveyou",
    "comments": [
      {
        "user": "githuailoveyou",
        "created_at": "2024-05-20T03:09:59Z",
        "body": "scheduleSentinelDNSCheck will add 10.75.10.20 to the sentinels.\r\nscheduleChangeCheck (when it uses 10.65.10.30:27000 to connect and retrieve other sentinels: redis://10.65.10.20:27000, redis://10.75.10.40:27000 and add 10.65.10.30:27000 to a newUris list to form a new set of three sentinels) will remove 10.75.10.20 from the sentinels.\r\n\r\n"
      },
      {
        "user": "mrniko",
        "created_at": "2024-05-20T06:58:52Z",
        "body": "because 10.65.10.30 doesn't have 10.75.10.20 in sentinel list. You can verify this by setting `trace` logging level for `org.redisson` package and check returned sentinels list by each sentinel."
      },
      {
        "user": "githuailoveyou",
        "created_at": "2024-05-20T08:06:50Z",
        "body": "Yes, it seems that Redisson doesn't fully support this SLB-based connection method, right? Although it doesn't directly impact business functionality, it does lead to continuous adjustments in the sentinels variable, otherwise we'll keep seeing \"down added\" occurrences. Now, the issue we're facing is that the service logs continue to record these changes persistently. How should I address this? Should we consider abandoning the use of SLB?"
      },
      {
        "user": "mrniko",
        "created_at": "2024-05-20T08:17:31Z",
        "body": "Does it mean that with SLB the same Redis node has two IPs ? one is defined in sentinel configs and another is used for SLB?"
      },
      {
        "user": "mrniko",
        "created_at": "2024-05-20T08:20:16Z",
        "body": "Did you try `natMapper` setting ? to resolve EIP to a real Redis node IP"
      },
      {
        "user": "githuailoveyou",
        "created_at": "2024-05-20T08:35:08Z",
        "body": "> Does it mean that with SLB the same Redis node has two IPs ? one is defined in sentinel configs and another is used for SLB?\r\n\r\n\"Yes, the reason we use SLB (Server Load Balancer) is because we have multiple Redis instances deployed on the same machine, each with 2 IP addresses.\r\n\r\nAll services are connected via domain names. Most of the Redis instances are in master-slave mode to ensure failover. Therefore, we adopt the SLB approach. We dynamically modify the server addresses under the SLB port after detecting master-slave switches.\""
      },
      {
        "user": "githuailoveyou",
        "created_at": "2024-05-20T08:38:30Z",
        "body": "> Did you try `natMapper` setting ? to resolve EIP to a real Redis node IP\r\n\r\nCan't make your own turn?  We don't really want to change the code"
      },
      {
        "user": "mrniko",
        "created_at": "2024-05-20T09:09:31Z",
        "body": "Unfortunately, it's a specific case. You can define natMapper like below.\r\n\r\n```java\r\n                .setNatMapper(new NatMapper() {\r\n                    @Override\r\n                    public RedisURI map(RedisURI uri) {\r\n                        if (uri.getHost().equals(\"10.75.10.20\")) {\r\n                            return new RedisURI(uri.getScheme(), \"10.65.10.20\", uri.getPort());\r\n                        }\r\n                        ...\r\n                    }\r\n                })\r\n```"
      },
      {
        "user": "githuailoveyou",
        "created_at": "2024-05-20T09:14:36Z",
        "body": "> \u4e0d\u5e78\u7684\u662f\uff0c\u8fd9\u662f\u4e00\u4e2a\u5177\u4f53\u6848\u4f8b\u3002\u60a8\u53ef\u4ee5\u50cf\u4e0b\u9762\u4e00\u6837\u5b9a\u4e49 natMapper\u3002\r\n> \r\n> ```java\r\n>                 .setNatMapper(new NatMapper() {\r\n>                     @Override\r\n>                     public RedisURI map(RedisURI uri) {\r\n>                         if (uri.getHost().equals(\"10.75.10.20\")) {\r\n>                             return ew RedisURI(uri.getScheme(), \"10.65.10.20\", uri.getPort());\r\n>                         }\r\n>                         ...\r\n>                     }\r\n>                 })\r\n> ```\r\n\r\nthank you"
      },
      {
        "user": "mrniko",
        "created_at": "2024-05-21T06:06:25Z",
        "body": "Another solution is to use `org.redisson.api.HostNatMapper` implementation.\r\n\r\n```java\r\nMap<String, String> map = new HashMap<>();\r\nmap.put(\"10.75.10.20\", \"10.65.10.20\");\r\n\r\nconfig.setNatMapper(new HostNatMapper(map))\r\n```"
      }
    ]
  },
  {
    "number": 5830,
    "title": "Issue with Kryo5Codec in combination with org.springframework.cache.support.NullValue",
    "created_at": "2024-04-30T10:11:54Z",
    "closed_at": "2024-12-23T11:00:39Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/redisson/redisson/issues/5830",
    "body": "Hi,\r\n\r\nI'm currently having an issue with the Spring Cache implementation in combination with Redisson. \r\nThe JCacheCache class provided by Redisson extends `org.springframework.cache.support.AbstractValueAdaptingCache`. In the method `protected Object fromStoreValue(@Nullable Object storeValue)` of the class AbstractValueAdaptingCache, there is an if condition, that check if the storeValue is equal to NullValue.INSTANCE using ==. \r\n\r\n```\r\nprotected Object fromStoreValue(@Nullable Object storeValue) {\r\n\tif (this.allowNullValues && storeValue == NullValue.INSTANCE) {\r\n\t\treturn null;\r\n\t}\r\n\treturn storeValue;\r\n}\r\n```\r\n\r\nThis condition evaluated to false in my case, because the instance of storeValue was not the same instance as NullValue.INSTANCE. Reason is the deserialisation, that was done by Kryo. It seems, that Kryo changes the constructor to \"public\" using reflections and creates a new instance by calling the constructor. It does not call the \"readResolve()\" method of NullValue class, which would return NullValue.INSTANCE.\r\nIs this a known issue? The only solution I came up with is extending the Kryo5Codec and adding a custom Serializer for NullValue.class. Is there another way to fix this issue?\r\n\r\nBest regards",
    "comments_url": "https://api.github.com/repos/redisson/redisson/issues/5830/comments",
    "author": "MrKanister2000",
    "comments": [
      {
        "user": "mrniko",
        "created_at": "2024-04-30T12:12:56Z",
        "body": "> The JCacheCache class provided by Redisson\r\n\r\nSorry, Redisson doesn't implement such class"
      },
      {
        "user": "MrKanister2000",
        "created_at": "2024-04-30T13:07:27Z",
        "body": "> Sorry, Redisson doesn't implement such class\r\n\r\nYep sry, my bad. I got confused with the class names. JCacheCache is part of the Spring package. \r\nNevertheless, the `org.redisson.jcache.JCache` class returns a new instance of NullValue from the cache, because of the Kryo deserialization issue I described. Any hint how to fix this?\r\n"
      },
      {
        "user": "mrniko",
        "created_at": "2024-04-30T13:18:30Z",
        "body": "Can you add the code below into org.redisson.codec.Kryo5Codec#createKryo method and say if it works?\r\n\r\n```java\r\nif (com.esotericsoftware.kryo.util.Util.isClassAvailable(\"org.springframework.cache.support.NullValue\")) {\r\n   kryo.addDefaultSerializer(Class.forName(\"org.springframework.cache.support.NullValue\"), new JavaSerializer());\r\n}\r\n```"
      },
      {
        "user": "MrKanister2000",
        "created_at": "2024-04-30T14:06:05Z",
        "body": "Yes, it works, thanks. Do you see any trade-offs (like performance) when using the JavaSerializer?\r\n\r\nMy first solution was extending the Kryo5Codec class:\r\n\r\n```\r\npublic class MyKryo5Codec extends Kryo5Codec {\r\n\r\n    @Override\r\n    protected Kryo createKryo(ClassLoader classLoader) {\r\n        Kryo kryo = super.createKryo(classLoader);\r\n\r\n        kryo.addDefaultSerializer(NullValue.class, new NullValueSerializer(kryo, NullValue.class));\r\n\r\n        return kryo;\r\n    }\r\n}\r\n```\r\n\r\nand creating a custom NullValueSerializer:\r\n\r\n```\r\npublic class NullValueSerializer extends FieldSerializer<NullValue> {\r\n\r\n    public NullValueSerializer(Kryo kryo, Class type) {\r\n        super(kryo, type);\r\n    }\r\n\r\n    @Override\r\n    public NullValue read(Kryo kryo, Input input, Class type) {\r\n        return (NullValue) NullValue.INSTANCE;\r\n    }\r\n}\r\n```\r\n\r\nBut your solution has a way smaller footprint than mine."
      },
      {
        "user": "mrniko",
        "created_at": "2024-05-01T05:08:01Z",
        "body": "Thanks for testing. In your example Spring become a required dependency because of explicit NullValue class definition which I would like to avoid. It would be great if you rewrite it without explicit NullValue definition."
      }
    ]
  },
  {
    "number": 5333,
    "title": "an RedisNodeNotFoundException was encountered when using redisson",
    "created_at": "2023-09-26T08:15:54Z",
    "closed_at": "2023-10-13T05:47:06Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/redisson/redisson/issues/5333",
    "body": "\r\n#server version\r\nredis server : 5.0.14\r\n#redisson client version\r\n3.13.6\r\n#describ\r\n    private volatile Map<String, RedissonClient> redissonClientMap = null;\r\n\r\nbefore our app link redis sentinel nodes,now our app will change link redis cluster nodes,implementation method is our app has a map to store two RedissonClient\r\none redisson client link redis sentinel nodes,another redisson client link redis cluster nodes, the map switcher is a key to routing a RedissonClient\r\nbut when we change key route to redis cluster nodes,After after a few minutes,app sometimes will print log \r\n\r\n\tNode for slot: 1712 hasn't been discovered yet. Check cluster slots coverage using CLUSTER NODES command. Increase value of retryAttempts and/or retryInterval settings.org.redisson.client.RedisNodeNotFoundException: Node for slot: 1712 hasn't been discovered yet. Check cluster slots coverage using CLUSTER NODES command. Increase value of retryAttempts and/or retryInterval settings.\r\n\tat org.redisson.connection.MasterSlaveConnectionManager.createNodeNotFoundFuture(MasterSlaveConnectionManager.java:579)\r\n\tat org.redisson.connection.MasterSlaveConnectionManager.connectionReadOp(MasterSlaveConnectionManager.java:563)\r\n\tat org.redisson.command.RedisExecutor.getConnection(RedisExecutor.java:644)\r\n\tat org.redisson.command.RedisExecutor.execute(RedisExecutor.java:116)\r\n\tat org.redisson.command.RedisExecutor$2.run(RedisExecutor.java:244)\r\n\tat io.netty.util.HashedWheelTimer$HashedWheelTimeout.expire(HashedWheelTimer.java:668)\r\n\tat io.netty.util.HashedWheelTimer$HashedWheelBucket.expireTimeouts(HashedWheelTimer.java:743)\r\n\tat io.netty.util.HashedWheelTimer$Worker.run(HashedWheelTimer.java:471)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n\r\nguided by logs,when we invoke CLUSTER NODES command, the redis cluster nodes status is health\r\n\r\ntip:sometimes the app will print the following warning level logs\r\n[2023-09-12 22:47:33.978][INFO][698][redisson-netty-5-14] traceLogId:[null] dstTraceId:[] TxId:[] SpanId:[] call [org.redisson.cluster.ClusterConnectionManager][checkSlotsMigration] 294 slots removed from\r\n\r\n\r\n\r\nhow to solve this RedisNodeNotFoundException,because it affects normal business logic,thanks help me\r\n",
    "comments_url": "https://api.github.com/repos/redisson/redisson/issues/5333/comments",
    "author": "repeatthink123yuchao",
    "comments": [
      {
        "user": "mrniko",
        "created_at": "2023-09-26T08:19:42Z",
        "body": "incorrect slots added,slots removed messages in Redis Cluster mode fixed in 3.23.4 version. Can you try it?"
      },
      {
        "user": "repeatthink123yuchao",
        "created_at": "2023-09-26T08:35:29Z",
        "body": "> incorrect slots added,slots removed messages in Redis Cluster mode fixed in 3.23.4 version. Can you try it?\r\n\r\nwe increased the redisson version number from 3.11.1 to 3.13.6, but the problem(removed/added/RedisNodeNotFoundException) still exists,\r\nand the problem(removed/added) does not affect normal business logic,but the RedisNodeNotFoundException is fatal,the RedisNodeNotFoundException affects normal business logic and intolerable\r\ncan you help me see how to solve this RedisNodeNotFoundException?\r\n\r\n\r\n\r\n\r\n#slave\r\n011fd2e3aae7e69fc636bd1744642ed14bf0a1a7 132.18.54.81:36421@46421 slave 9831b60c5422cc961b05cb5d7bcd0cc7a1b7db4e 0 1693492105000 28 connected\r\nc0419f9492793b3c74aa4b1eb083ff34278b5a6f 132.18.54.80:36421@46421 slave f3db2e899fd14bfd2feae35e9191fbee478691df 0 1693492106255 29 connected\r\nd577fe7c71839dccd8bb315dfedd1724632111fe 132.18.54.79:36421@46421 slave b08aebda64e150fb181ff219d42ac487b8f7d7d6 0 1693492108258 30 connected\r\n5b3f227a49333b7e801a5af9436557ae764e7920 132.18.54.78:36421@46421 slave b8448e2164cb778dc345570a75380ee185b11afa 0 1693492104000 31 connected\r\n955cc718b66cdee9c8b954e57ef4509c6547b8c4 132.18.54.72:36421@46421 slave 9bfa406d12fbe4c0e62b5fc2f89a73ff0d19b5d4 0 1693492102000 33 connected\r\nba3b09daae54d1ebe566df5ca3a81f223782a302 132.18.54.103:36421@46421 slave 1d00caa09fbd95d4ad41641e6bb3245e4914c51e 0 1693492103000 34 connected\r\n5fa0c68c0026523f00c0ccbc133608adfdb636ce 132.18.54.102:36421@46421 slave ccddafeae47a5bd158186cbb200a1b987b495583 0 1693492109058 35 connected\r\n55b1dc3b3df8c5d59f7c8ad98fcad1d3f9405027 132.18.54.101:36421@46421 slave 3f0b3ba5f1c788f128c6acc0a0cd571d4369e00c 0 1693492103000 36 connected\r\n2e02ed575914c7f73b7c84a51a1bd26d9ec2c91b 132.18.54.81:36420@46420 slave 1e1120e053191601c89fd13df61e3b4e2d134736 0 1693492099000 37 connected\r\nc69eac6ebaa7ff5fd507e78a99e727622dfc8ab3 132.18.54.80:36420@46420 slave 4e148762f55cebbf868d7470d08a8d5a40ae6c5f 0 1693492109058 38 connected\r\n0d16b771126d4ae678d4fd7e3ddaa731633894b5 132.18.54.79:36420@46420 slave 8f3b44a94478da8b13c2f6af5f29531188b89128 0 1693492102000 39 connected\r\nd74232d907bcc9fed8358f5aec3ad235ddce0d70 132.18.54.78:36420@46420 slave 2ba474e9dff15d0eadc321f176d9b00c4be003db 0 1693492112264 40 connected\r\ne818ec452949eea5d9bf555dac71d419060bc106 132.18.54.72:36420@46420 slave 4232dcc072f4d85fbbd1bb3c9db4a7adc8d94418 0 1693492104000 42 connected\r\ne202c2c6b70941929f64af0817415c361aff81a3 132.18.54.103:36420@46420 slave 3032dc89587eb306f483d48830b26234daefde0d 0 1693492109259 43 connected\r\n1b6fb1c857c2ea338c43dafa66eae2524286d6e2 132.18.54.102:36420@46420 slave 0047baedc6bfe230e6349a53e5fab107df4d5539 0 1693492101247 44 connected\r\n9c7bd034a843b2dbadb9a444d3f173b570d6f247 132.18.54.101:36420@46420 slave 523e0488ddcb9458fc9973d813d2221f554ff0ab 0 1693492101047 45 connected\r\naf217275cad115c62eacfdc7f83895e1ef84c94d 132.18.54.81:36419@46419 slave 191ba25cd354b2569fa8e2f66a6c46b111e51472 0 1693492106000 46 connected\r\nb391f09b3060559c4788df01e1748525159905bb 132.18.54.73:36419@46419 slave 83272084566a40203df40f211cd3ab4cbd8dbaff 0 1693492104000 47 connected\r\n0415bf16cf7d1c68fdcc0809e53cee6a52490fcf 132.18.54.101:36419@46419 myself,slave 64ee11fa98839f32835b4c353c7b19b5d52f4273 0 1693492105000 48 connected\r\n668e91b0faea4bbec903c2e38331c65d67d5792c 132.18.54.78:36419@46419 slave 00ad2de54a96130ddfc3e00cd8a2b36b9ae54a47 0 1693492103000 50 connected\r\ne16f19c158fcece008187abad13f1007ea5c713f 132.18.54.102:36419@46419 slave 7c7bbaec4ec51da66454c049e782181d3ea027a6 0 1693492106000 51 connected\r\n02ad5435c83076fa6f32d39ae3517d84bbb49814 132.18.54.80:36419@46419 slave df25fb86078cd9bd3b10e2bfd16a22d3b0068766 0 1693492103000 52 connected\r\nabaa6870de92564ef8559fa21bb09586caa61e83 132.18.54.103:36419@46419 slave be76a5ad93584314d29f1ef3df38c1d2f214cb5e 0 1693492108057 53 connected\r\n12f5809cbe0cdc6f9a20f8b79421e69650b01c65 132.18.54.79:36419@46419 slave 4295acbd0ec852e4d15f0a7a333613769fd8c616 0 1693492109000 54 connected\r\n589f646ac44fd61e36af58cde5bf15190e353a2c 132.18.54.72:36419@46419 slave 8805ecc5cc2eed1d3d116054d7225601e8cf52b5 0 1693492108000  connected\r\nded38affee582fe80208547a08c3656777eb621d 132.18.54.73:36421@46421 slave a60bd125a894c2293b97c8533c27ca265dc04fde 0 1693492104251 8 connected\r\n5644e2eac432138794416b812cdee1a83ca5659b 132.18.54.73:36420@46420 slave fade84654be507439b00fee41e96a565c3115dc7 0 1693492106000 25 connected\r\n#master\r\nccddafeae47a5bd158186cbb200a1b987b495583 132.18.54.101:36424@46424 master - 0 1693492101000 1 connected 0-606\r\n1d00caa09fbd95d4ad41641e6bb3245e4914c51e 132.18.54.102:36424@46424 master - 0 1693492108000 2 connected 607-1213\r\n9bfa406d12fbe4c0e62b5fc2f89a73ff0d19b5d4 132.18.54.103:36424@46424 master - 0 1693492106000 3 connected 1214-1819\r\n83272084566a40203df40f211cd3ab4cbd8dbaff 132.18.54.72:36424@46424 master - 0 1693492109000 4 connected 1820-2426\r\nb8448e2164cb778dc345570a75380ee185b11afa 132.18.54.73:36424@46424 master - 0 1693492107000 5 connected 2427-3033\r\nb08aebda64e150fb181ff219d42ac487b8f7d7d6 132.18.54.78:36424@46424 master - 0 1693492098000 6 connected 3034-3640\r\nf3db2e899fd14bfd2feae35e9191fbee478691df 132.18.54.79:36424@46424 master - 0 1693492109000 7 connected 3641-4247\r\na60bd125a894c2293b97c8533c27ca265dc04fde 132.18.54.80:36424@46424 master - 0 1693492107000 8 connected 4248-4854\r\n523e0488ddcb9458fc9973d813d2221f554ff0ab 132.18.54.81:36424@46424 master - 0 1693492106000 9 connected 4855-5460\r\n0047baedc6bfe230e6349a53e5fab107df4d5539 132.18.54.101:36423@46423 master - 0 1693492107000 10 connected 5461-6067\r\n3032dc89587eb306f483d48830b26234daefde0d 132.18.54.102:36423@46423 master - 0 1693492105000 11 connected 6068-6674\r\n4232dcc072f4d85fbbd1bb3c9db4a7adc8d94418 132.18.54.103:36423@46423 master - 0 1693492111000 12 connected 6675-7281\r\n2ba474e9dff15d0eadc321f176d9b00c4be003db 132.18.54.72:36423@46423 master - 0 1693492107000 13 connected 7282-7888\r\n8f3b44a94478da8b13c2f6af5f29531188b89128 132.18.54.73:36423@46423 master - 0 1693492111061 14 connected 7889-8494\r\n4e148762f55cebbf868d7470d08a8d5a40ae6c5f 132.18.54.78:36423@46423 master - 0 1693492099000 15 connected 8495-9101\r\n9831b60c5422cc961b05cb5d7bcd0cc7a1b7db4e 132.18.54.79:36423@46423 master - 0 1693492110260 16 connected 9102-9708\r\n64ee11fa98839f32835b4c353c7b19b5d52f4273 132.18.54.80:36423@46423 master - 0 1693492111262 17 connected 9709-10315\r\n7c7bbaec4ec51da66454c049e782181d3ea027a6 132.18.54.81:36423@46423 master - 0 1693492110000 18 connected 10316-10922\r\nbe76a5ad93584314d29f1ef3df38c1d2f214cb5e 132.18.54.101:36422@46422 master - 0 1693492104000 19 connected 10923-11528\r\n00ad2de54a96130ddfc3e00cd8a2b36b9ae54a47 132.18.54.102:36422@46422 master - 0 1693492107000 20 connected 11529-12135\r\n4295acbd0ec852e4d15f0a7a333613769fd8c616 132.18.54.103:36422@46422 master - 0 1693492103000 21 connected 12136-12742\r\ndf25fb86078cd9bd3b10e2bfd16a22d3b0068766 132.18.54.72:36422@46422 master - 0 1693492102000 22 connected 12743-13349\r\n8805ecc5cc2eed1d3d116054d7225601e8cf52b5 132.18.54.73:36422@46422 master - 0 1693492106000 23 connected 13350-13956\r\n1e1120e053191601c89fd13df61e3b4e2d134736 132.18.54.78:36422@46422 master - 0 1693492111061 24 connected 13957-14563\r\nfade84654be507439b00fee41e96a565c3115dc7 132.18.54.79:36422@46422 master - 0 1693492107000 25 connected 14564-15169\r\n191ba25cd354b2569fa8e2f66a6c46b111e51472 132.18.54.80:36422@46422 master - 0 1693492111061 26 connected 15170-15776\r\n3f0b3ba5f1c788f128c6acc0a0cd571d4369e00c 132.18.54.81:36422@46422 master - 0 1693492105253 27 connected 15777-16383\r\n"
      },
      {
        "user": "mrniko",
        "created_at": "2023-09-26T13:22:44Z",
        "body": "RedisNodeNotFoundException may arise if node was removed due to rare issue in topology handling. It was fixed in 3.23.4."
      },
      {
        "user": "repeatthink123yuchao",
        "created_at": "2023-09-27T01:18:22Z",
        "body": "> RedisNodeNotFoundException may arise if node was removed due to rare issue in topology handling. It was fixed in 3.23.4.\r\n\r\nI'll try it first and get back to you with the test results later. \r\n\r\nthank you "
      },
      {
        "user": "repeatthink123yuchao",
        "created_at": "2023-10-13T04:10:52Z",
        "body": "> RedisNodeNotFoundException may arise if node was removed due to rare issue in topology handling. It was fixed in 3.23.4.\r\n\r\nThank you very much, this problem is solved"
      }
    ]
  },
  {
    "number": 5298,
    "title": "How to successfully use Live Objects ?",
    "created_at": "2023-09-08T21:31:58Z",
    "closed_at": "2023-09-13T08:13:57Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/redisson/redisson/issues/5298",
    "body": "I'm having difficulty with two different parts of the Live Objects feature of Redisson:\r\n\r\n1. Storing a nested `Map<String, String>` as a field of an '@REntity`\r\n2. Using a condition to `find()` instances that I know are stored.\r\n\r\nHere's my live object class (I'm using Lombok, hence the @Getter, etc annotations):\r\n```java\r\n@RequiredArgsConstructor\r\n@NoArgsConstructor(access = PROTECTED)\r\n@REntity(codec = StringCodec.class)\r\npublic class Manifest {\r\n\r\n\t@RId(generator = UUIDGenerator.class)\r\n\t@Getter\r\n\tprivate String id;\r\n\r\n\t@RIndex\r\n\t@Getter\r\n\tprivate String jobId;\r\n\r\n\t@RIndex\r\n\t@Getter\r\n\tprivate String rootFolder;\r\n\r\n\t@RCascade(ALL)  // Not sure this is needed, it doesn't seem to make any difference\r\n\tprivate Map<String, String> entries = new HashMap<>();\r\n\r\n\r\n\tpublic void add(String path, String hash) {\r\n\t\tentries.put(path, hash);\r\n\t}\r\n\r\n\t@Transient\r\n\tpublic int getSize() {\r\n\t\treturn entries.size();\r\n\t}\r\n\r\n}\r\n```\r\n\r\nI'm using this code to initially create and store the live object:\r\n```java\r\n\tRLiveObjectService liveObjects = redisson.getLiveObjectService();\r\n\tvar manifest = new Manifest(jobID, rootPath);\r\n\tmanifest = liveObjects.persist(manifest);\r\n\tliveObjects.asLiveObject(manifest).expire(Duration.ofMinutes(60));\r\n```\r\n\r\nElsewhere I use this code to get the object by ID and add data to its `entries` map:\r\n```java\r\n\tManifest manifest = liveObjects.get(Manifest.class, id);\r\n\tmanifest.add(path, hash);\r\n```\r\n\r\nSomewhere else, I use this code to find the object:\r\n```java\r\n\tpublic static Condition jobIDEquals(String jobID) {\r\n\t\treturn Conditions.eq(\"jobId\", jobID);\r\n\t}\r\n\r\n\tCollection<Manifest> manifests = liveObjects.find(Manifest.class, jobIDEquals(jobID));\r\n```\r\n\r\nWith the code above, the two problems are:\r\n1. The `manifests` collection is empty, even though I can inspect my Redis server (using RedisInsight) and see the hashes stored there with matching `jobId` values.\r\n2. If I load one of the objects directly by its `id`, the `entries` Map is always empty, _even after_ having added values to it. I see in RedisInsight that the value of `entries` is `org.redisson.RedissonReference@7623beea`, but there is no other key in Redis that corresponds to that reference.\r\n\r\nWhat am I doing wrong?",
    "comments_url": "https://api.github.com/repos/redisson/redisson/issues/5298/comments",
    "author": "eric-creekside",
    "comments": [
      {
        "user": "mrniko",
        "created_at": "2023-09-09T04:47:34Z",
        "body": "You need to define getters and constructors explicitly"
      },
      {
        "user": "eric-creekside",
        "created_at": "2023-09-10T21:52:06Z",
        "body": "That solved some of the problems, thanks. I strongly suggest you make this clear in the documentation and examples that Live Objects can not use getters/setters/constructors that are generated by byte-code tools. Lombok is very popular and commonly used. It could save other users a lot of time knowing to avoid using it in their `@REntity` objects."
      },
      {
        "user": "eric-creekside",
        "created_at": "2023-09-10T21:59:48Z",
        "body": "As I tested more, I was still seeing the situation where values I had added to my nested `entries` `Map<>` were not getting persisted, so when a later process loaded the objects with `find()`, `entries` was empty. I discovered that my `Manifest.add()` method had to use the getter to reference `entities`. Specifically, this code did *not* work:\r\n```java\r\n\tpublic void add(String path, String hash) {\r\n\t\tentries.put(path, hash);\r\n\t}\r\n```\r\nbut this code does work:\r\n```java\r\n\tpublic void add(String path, String hash) {\r\n\t\tgetEntries().put(path, hash);\r\n\t}\r\n```\r\n\r\nI think this is another opportunity to improve the documentation and examples by making it clear that collection fields of the live object have to be de-referenced from the proxy in order to have their contents persisted.\r\n\r\nIf possible, it would be good to also detect that situation at runtime and log a warning."
      },
      {
        "user": "mrniko",
        "created_at": "2023-09-13T08:13:57Z",
        "body": "Follow statement added to the documentation: `Getters/setters/constructors can't be generated by byte-code tools like Lombok. Additional methods should use getters and not fields. `"
      }
    ]
  },
  {
    "number": 5285,
    "title": "RSorted Map comparator not working correctly",
    "created_at": "2023-08-30T07:29:11Z",
    "closed_at": "2023-10-04T17:44:37Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/redisson/redisson/issues/5285",
    "body": "Trying to create a sorted map with a custom comparator for duplicate detection. For some reason  comparator is set, however duplicates are getting added to the sorted set.  \r\n\r\npublic class RedissonMessagingMgrTest {\r\n\r\n    private static MessagingMgr mgr = null;\r\n\r\n    @BeforeAll\r\n    public static void setUp() {\r\n       try {\r\n          mgr = new RedissonMessagingMgr(\"127.0.0.1\",6379,\"nishi\");\r\n       }\r\n       catch (Exception exception) {\r\n          exception.printStackTrace();\r\n       }\r\n    }\r\n\r\n    @Test\r\n    public void  testPublishNoDupQueue100() {\r\n        String queueName = \"NoDupQueue100\";\r\n        int msgCount=1;\r\n        boolean isPublished = false;\r\n        String str = \"This is my string as bytes\";\r\n        \r\n        mgr.createNoDupQueue(queueName, new TestMsgComparator());\r\n        byte[] bytes = null;\r\n        int i=0;\r\n        for ( i=0;i<msgCount;i++) {\r\n            str =  str + i;\r\n            bytes = str.getBytes();\r\n            TestMsg msg = new TestMsg(i,bytes, System.currentTimeMillis() );\r\n            isPublished = mgr.publishNoDupQueue(queueName,msg);\r\n        }\r\n        isPublished = mgr.publishNoDupQueue(queueName,new TestMsg(0,bytes, System.currentTimeMillis()));  \r\n        assertFalse(isPublished,\"No Duplicates Allowed\");\r\n    }\r\n\r\n}\r\n   \r\nMy Comparator class is as below:-\r\n\r\nimport java.util.Comparator;\r\n\r\npublic class TestMsgComparator implements Comparator<TestMsg> {\r\n    \r\n    @Override\r\n    public int compare(TestMsg a, TestMsg b)\r\n    {\r\n        return a.number  - b.number;\r\n    }\r\n}\r\n\r\nThe sorted set will contain objects of TestMsg\r\n\r\npublic class TestMsg implements PubSubMessage,  Serializable {\r\n    private byte[] data;\r\n    public int number;\r\n    private long timestamp;\r\n\r\n    public TestMsg(int number, byte[] data, long ts) {\r\n        this.number = number;\r\n        this.data = data;\r\n        this.timestamp = ts;\r\n    }\r\n\r\n    public long getNumber() {\r\n        return number;\r\n    }\r\n\r\n    public byte[] getData() {\r\n        return data;\r\n    }\r\n\r\n    public long getSortedScore() {\r\n        return timestamp;\r\n    } \r\n}\r\n\r\npublic class RedissonMessagingMgr implements MessagingMgr {\r\n\r\n   private static Logger log = LoggerFactory.getLogger(RedissonMessagingMgr.class);\r\n   private RedissonClient client = null;\r\n\r\n   public RedissonMessagingMgr(String host, int port, String password) throws \r\n   ConnectException {\r\n      log.info(\"[IN] RedissonMessagingMgr Constructor\");\r\n      Config config = new Config();\r\n      StringBuilder messagingAddress = new StringBuilder(\"redis://\");\r\n      messagingAddress.append(host).append(\":\").append(Integer.toString(port));\r\n      config.useSingleServer().setAddress(messagingAddress.toString());\r\n      config.useSingleServer().setPassword(password);\r\n      config.setNettyThreads(0);\r\n      \r\n      log.info(\"[OUT] RedissonCache Constructor\");\r\n   }\r\n}\r\n\r\npublic boolean createNoDupQueue(String name,Comparator comp ) {\r\n      boolean returnValue = false;\r\n      //RScoredSortedSet<PubSubMessage> sortedset = client.getScoredSortedSet(name);\r\n      RSortedSet<PubSubMessage> sortedset = client.getSortedSet(name);\r\n      \r\n      System.out.println(\"Comparator:\"+sortedset.comparator().getClass().getName());\r\n\r\n      try {\r\n         boolean set = sortedset.trySetComparator(comp);\r\n         System.out.println(\"Comparator:\"+sortedset.comparator().getClass().getName());\r\n\r\n      }\r\n      catch(RedisException exception) {\r\n         // ignoring the exception and invoking trySetComparator multiple time will raise this \r\n         // exception.\r\n         exception.printStackTrace();\r\n      }\r\n      if (sortedset != null)  {\r\n         returnValue = true;\r\n      }\r\n      return returnValue;\r\n   }\r\n\r\npublic boolean publishNoDupQueue(String queueName,PubSubMessage message) {\r\n      RScoredSortedSet<PubSubMessage> noDupQueue = client.getScoredSortedSet(queueName);\r\n      return noDupQueue.add(message.getSortedScore(),message);\r\n   }\r\n}",
    "comments_url": "https://api.github.com/repos/redisson/redisson/issues/5285/comments",
    "author": "nkant17",
    "comments": [
      {
        "user": "mrniko",
        "created_at": "2023-08-30T11:24:42Z",
        "body": "Unable to reproduce.\r\n\r\n```java\r\n    public static class TestMsg {\r\n\r\n        int number;\r\n\r\n        String str;\r\n\r\n        public TestMsg(int number, String str) {\r\n            this.number = number;\r\n            this.str = str;\r\n        }\r\n\r\n        public int getNumber() {\r\n            return number;\r\n        }\r\n\r\n        public String getStr() {\r\n            return str;\r\n        }\r\n\r\n        @Override\r\n        public String toString() {\r\n            return \"TestMsg{\" +\r\n                    \"number=\" + number +\r\n                    \", str='\" + str + '\\'' +\r\n                    '}';\r\n        }\r\n    }\r\n\r\n    public static class TestMsgComparator implements Comparator<TestMsg> {\r\n\r\n        @Override\r\n        public int compare(TestMsg a, TestMsg b)\r\n        {\r\n            return a.number  - b.number;\r\n        }\r\n    }\r\n\r\n    @Test\r\n    public void test12() {\r\n        RSortedSet<TestMsg> set = redisson.getSortedSet(\"set\");\r\n\r\n        set.trySetComparator(new TestMsgComparator());\r\n        set.add(new TestMsg(1, \"1\"));\r\n        set.add(new TestMsg(1, \"2\"));\r\n        set.add(new TestMsg(3, \"3\"));\r\n        set.add(new TestMsg(4, \"4\"));\r\n\r\n        assertThat(set).containsExactly(new TestMsg(1, \"1\"), new TestMsg(3, \"3\"), new TestMsg(4, \"4\"));\r\n    }\r\n```"
      },
      {
        "user": "nkant17",
        "created_at": "2023-10-04T17:44:53Z",
        "body": "Working now"
      }
    ]
  },
  {
    "number": 4988,
    "title": "RedisBusyException when running load tests",
    "created_at": "2023-04-25T00:21:31Z",
    "closed_at": "2023-05-02T07:27:25Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/redisson/redisson/issues/4988",
    "body": "```\r\n`\r\nWARN  [2023-04-25 00:10:45,507] org.redisson.client.RedisBusyException: BUSY Redis is busy running a script. You can only call SCRIPT KILL or SHUTDOWN NOSAVE.. channel: [id: 0x99c796a7, L:/10.240.0.18:34142 - R:10.240.0.74/10.240.0.74:6379] data: CommandData [promise=java.util.concurrent.CompletableFuture@51438d95[Not completed, 1 dependents], command=(EVAL), params=[local currentTime = tonumber(table.remove(ARGV, 1)); local ttl = table.remove(ARGV, 1); local ttlNumber = tonumber(ttl); local maxSize = tonumber(redis.call('hget', KEYS[8], 'max-size'));local mode = redis.call('hget', KEYS[8], 'mode'); for i, value in ipairs(ARGV) do if i % 2 == 0 then local key = ARGV[i-1];local v = redis.call('hget', KEYS[1], key);local exists = false;if v ~= false then    local t, val = struct.unpack('dLc0', v);    local expireDate = 92233720368547758;    local expireDateScore = redis.call('zscore', KEYS[2], key);    if expireDateScore ~= false then        expireDate = tonumber(expireDateScore)    end;    if t ~= 0 then        local expireIdle = redis.call('zscore', KEYS[3], key);        if expireIdle ~= false then            expireDate = math.min(expireDate, tonumber(expireIdle))        end;    end;    if expireDate > tonumber(currentTime) then        exists = true;    end;end;if ttlNumber > 0 then     redis.call('zadd', KEYS[2], ttl, key); else     redis.call('zr..., 8, mht_collector, redisson__timeout__set:{mht_collector}, redisson__idle__set:{mht_collector}, redisson_map_cache_created:{mht_collector}, redisson_map_cache_updated:{mht_collector}, redisson__map_cache__last_access__set:{mht_collector}, redisson_map_cache_removed:{mht_collector}, {mht_collector}:redisson_options, ...], codec=org.redisson.codec.SerializationCodec]`\r\n```\r\n\r\nWe seem to get these RedisBusyExceptions at some point whenever we run load tests. On elastic cache side of things we have enough memory and CPU. So we are not bottlenecked by those. Our only doubt is network bandwidth. Any idea for what reasons this exception gets thrown?  \r\n",
    "comments_url": "https://api.github.com/repos/redisson/redisson/issues/4988/comments",
    "author": "formanojhr",
    "comments": [
      {
        "user": "mrniko",
        "created_at": "2023-05-02T07:27:25Z",
        "body": "You need to run redis slowlog command to realize which script is running too slow."
      },
      {
        "user": "formanojhr",
        "created_at": "2023-05-02T19:19:10Z",
        "body": "thanks @mrniko  that is exactly what we did. Might be good to add to your general documentation"
      }
    ]
  },
  {
    "number": 4890,
    "title": "Switching from Redis 4 to 6, will Redisson have compatibility issues?",
    "created_at": "2023-02-22T13:23:12Z",
    "closed_at": "2023-02-23T07:23:53Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/redisson/redisson/issues/4890",
    "body": "Hi team, \r\n\r\nWe are going to upgrade Redis 4 to Redis 6. I would like to ask team if there will be compatibility issues between Redission and Redis 6 after upgrading 4 to 6. Or do you know of any known Redission incompatibilities due to Redis 6 upgrades?\r\nAccording to redission documentation, Redission supports Redis 4 and 6. Does this mean that we don't need to modify any client code? \r\n\r\nMany thanks for your support!",
    "comments_url": "https://api.github.com/repos/redisson/redisson/issues/4890/comments",
    "author": "yunbozhang-msft",
    "comments": [
      {
        "user": "mrniko",
        "created_at": "2023-02-23T07:23:49Z",
        "body": "Hi,\r\n\r\nRedisson is fully compatible with 3.x up to 7.0.x version. No code modification is needed."
      },
      {
        "user": "yunbozhang-msft",
        "created_at": "2023-02-28T05:22:03Z",
        "body": "Thank you!"
      }
    ]
  },
  {
    "number": 4768,
    "title": "Classfile version 61 (Java17) change intended?",
    "created_at": "2022-12-29T15:48:50Z",
    "closed_at": "2023-01-06T07:28:19Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/redisson/redisson/issues/4768",
    "body": "Is it an intended or accidental change to publish redisson compiled with java17 target and thus break everyone not yet lucky enough to be on 17?\r\nIf so, wouldn't a change like this be good to be documented as incompatible in the release notes?\r\n\r\nAlso i was expecting such a drastic thing to be a major, rather than a minor change (in terms of SemVer).",
    "comments_url": "https://api.github.com/repos/redisson/redisson/issues/4768/comments",
    "author": "uweschaefer",
    "comments": [
      {
        "user": "mrniko",
        "created_at": "2022-12-30T05:34:28Z",
        "body": "Can you point on that class? All classes of 3.19.0 version compiled with java 8 target. Checked it with javap\r\n\r\n```\r\npublic class org.redisson.Redisson implements org.redisson.api.RedissonClient\r\n  minor version: 0\r\n  major version: 52\r\n```\r\n"
      },
      {
        "user": "uweschaefer",
        "created_at": "2023-01-09T17:54:44Z",
        "body": "my bad. I rechecked all classes from 3.18,19.0 and 19.1... Don't know what i saw... :blush: "
      }
    ]
  },
  {
    "number": 4674,
    "title": "Expire RRateLimiter",
    "created_at": "2022-11-15T08:22:44Z",
    "closed_at": "2022-11-17T07:52:58Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/redisson/redisson/issues/4674",
    "body": "I want to delete RRateLimiter hash from redis, post rate interval is over. e.g. I set rate interval of 10 sec then hash must be removed post 10 sec.\r\nIs there any built in api for this functinality exists? ",
    "comments_url": "https://api.github.com/repos/redisson/redisson/issues/4674/comments",
    "author": "pat246",
    "comments": [
      {
        "user": "mrniko",
        "created_at": "2022-11-17T07:52:56Z",
        "body": "You need to use `expire()` method"
      },
      {
        "user": "pat246",
        "created_at": "2022-11-17T12:41:16Z",
        "body": "Thanks.\r\nActually we are using redisson 3.12.x version, hence I was unable to call `expire()` method. However as workaround I've tried to expire using `RMap`  with expiry value of \"rate interval\" as below\r\n\r\n\r\n`RRateLimiter limiter = redisson.getRateLimiter(name);`\r\n`RMap<Object, Object> keyMap = redisson.getMap(name);`\r\n`keyMap.expire(10, TimeUnit.SECONDS); // 10 sec is rate interval of limitter`"
      }
    ]
  },
  {
    "number": 4670,
    "title": "How to set cache properties for Hibernate scond level cache?",
    "created_at": "2022-11-13T08:38:42Z",
    "closed_at": "2022-12-12T06:04:47Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/redisson/redisson/issues/4670",
    "body": "I'm working on a Java spring project where I have multiple entities to be cached using `@Cache` annotation, ex:\r\n`@Cache(usage = CacheConcurrencyStrategy.READ_WRITE ,region = \"cache1\")`\r\n\r\nI have set ` spring.jpa.properties.hibernate.cache.region.factory_class` to be RedissonRegionFactory\r\n\r\nAs I'm using Redis cache as Hibernate second Level cache, I want a way to customize the properties of each cache region in a Java class, by properties I mean the TTL and maxEntriesLocalHeap.\r\n\r\n",
    "comments_url": "https://api.github.com/repos/redisson/redisson/issues/4670/comments",
    "author": "AseelAbushhadeh",
    "comments": [
      {
        "user": "OdaybatLFC",
        "created_at": "2022-11-15T08:48:17Z",
        "body": "Hello @AseelAbushhadeh , what I have done in my project is configure each cached entity with my own configuration class. I am also open to hear if there is another way of achieving this."
      },
      {
        "user": "mrniko",
        "created_at": "2022-11-17T07:51:33Z",
        "body": "@OdaybatLFC \r\n\r\nWhy can't you use spring.jpa.properties.hibernate.cache... settings?\r\n\r\n```java\r\nspring.jpa.properties.hibernate.cache.redisson.entity.expiration.time_to_live=\r\nspring.jpa.properties.hibernate.cache.redisson.entity.expiration.max_idle_time=\r\nspring.jpa.properties.hibernate.cache.redisson.collection.expiration.time_to_live=\r\nspring.jpa.properties.hibernate.cache.redisson.collection.expiration.max_idle_time=\r\n```"
      },
      {
        "user": "AseelAbushhadeh",
        "created_at": "2022-11-17T10:37:03Z",
        "body": "thanks for the suggestion, I can use it but this will apply to all caches, I want to customize the properties for each entity cache individually.\r\n\r\n> @OdaybatLFC\r\n> \r\n> Why can't you use spring.jpa.properties.hibernate.cache... settings?\r\n> \r\n> ```java\r\n> spring.jpa.properties.hibernate.cache.redisson.entity.expiration.time_to_live=\r\n> spring.jpa.properties.hibernate.cache.redisson.entity.expiration.max_idle_time=\r\n> spring.jpa.properties.hibernate.cache.redisson.collection.expiration.time_to_live=\r\n> spring.jpa.properties.hibernate.cache.redisson.collection.expiration.max_idle_time=\r\n> ```\r\n\r\n"
      },
      {
        "user": "mrniko",
        "created_at": "2022-11-17T11:24:26Z",
        "body": "You can specify region name as well.\r\n```\r\nspring.jpa.properties.hibernate.cache.redisson.my_object.eviction.max_entries=\r\nspring.jpa.properties.hibernate.cache.redisson.my_object.expiration.time_to_live=\r\nspring.jpa.properties.hibernate.cache.redisson.my_object.expiration.max_idle_time=\r\n\r\nspring.jpa.properties.hibernate.cache.redisson.my_collection.expiration.time_to_live=\r\nspring.jpa.properties.hibernate.cache.redisson.my_collection.expiration.max_idle_time=\r\n```"
      },
      {
        "user": "AseelAbushhadeh",
        "created_at": "2022-11-17T12:16:45Z",
        "body": "> You can specify region name as well.\r\n> \r\n> ```\r\n> spring.jpa.properties.hibernate.cache.redisson.my_object.eviction.max_entries=\r\n> spring.jpa.properties.hibernate.cache.redisson.my_object.expiration.time_to_live=\r\n> spring.jpa.properties.hibernate.cache.redisson.my_object.expiration.max_idle_time=\r\n> \r\n> spring.jpa.properties.hibernate.cache.redisson.my_collection.expiration.time_to_live=\r\n> spring.jpa.properties.hibernate.cache.redisson.my_collection.expiration.max_idle_time=\r\n> ```\r\n\r\nThanks it works!! \r\nHoping I can find a way to do that in a java class."
      }
    ]
  },
  {
    "number": 4667,
    "title": "Regarding definition of nettyThreads",
    "created_at": "2022-11-11T04:35:33Z",
    "closed_at": "2023-03-27T13:09:55Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/redisson/redisson/issues/4667",
    "body": "`nettyThreads` is defined as _Threads amount shared between all internal redis clients used by Redisson._\r\n\r\nFor e.g. my application connects to 3 different Redis clusters (2 sentinel based clusters, 1 multi-master cluster), all of them are initialized with different connections pool sizes and nettyThreads size. Should I keep  `nettyThreads` same across the redis clients here? ",
    "comments_url": "https://api.github.com/repos/redisson/redisson/issues/4667/comments",
    "author": "rgampa",
    "comments": [
      {
        "user": "mrniko",
        "created_at": "2023-03-27T13:09:55Z",
        "body": "You can define shared EventLoopGroup through `eventLoopGroup` setting to use a single netty threads pool."
      },
      {
        "user": "rgampa",
        "created_at": "2023-03-27T17:02:30Z",
        "body": "Thanks for the tip."
      }
    ]
  },
  {
    "number": 4644,
    "title": "Unable to write command into connection! ",
    "created_at": "2022-11-01T09:00:28Z",
    "closed_at": "2022-11-28T06:02:50Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/redisson/redisson/issues/4644",
    "body": "Hello, when I used the API RBatch provided by Redison (version: 3.15.6) to add data to Redis, Redison prompted the following error:\r\nUnable to write command into connection!  Node source: NodeSource [slot=null, addr=null, redisClient=null, redirect=null, entry=MasterSlaveEntry [masterEntry=[freeSubscribeConnectionsAmount=1, freeSubscribeConnectionsCounter=value:50:queue:0, freeConnectionsAmount=23, freeConnectionsCounter=value:63:queue:0, freezeReason=null, client=[addr=redis://], nodeType=MASTER, firstFail=0]]], connection:  RedisConnection@186126  [redisClient=[addr=redis://], channel=[id: 0xffb, ], currentCommand=null], command: null, params: null after 3 retry attempts\"\r\nI used a timed task. I called this method once an hour to add 4000 pieces of data to Redis. After testing for a week, this error occurred six times in total. I hope someone can help me answer this question. What should I do?",
    "comments_url": "https://api.github.com/repos/redisson/redisson/issues/4644/comments",
    "author": "white-balls",
    "comments": [
      {
        "user": "mrniko",
        "created_at": "2022-11-28T06:02:50Z",
        "body": "Try to increase nettyThreads amount."
      },
      {
        "user": "white-balls",
        "created_at": "2022-11-28T08:41:17Z",
        "body": "> Try to increase nettyThreads amount.\r\nOK, thank you for your reply"
      }
    ]
  },
  {
    "number": 4606,
    "title": "Does Redisson client auto-recovers in case of master failover in Redis cluster mode",
    "created_at": "2022-10-17T21:57:29Z",
    "closed_at": "2022-10-18T08:58:29Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/redisson/redisson/issues/4606",
    "body": "Using latest Redisson 3.17.x and Redis 7.x versions. \r\n\r\nEarlier we were using Redis sentinel mode where Redisson supports in case of failovers. Now we are migrating to Redis cluster mode with multiple masters, so does Redission auto recovers in case of master failover by Redis cluster bus or manual failover by Redis DBA? ",
    "comments_url": "https://api.github.com/repos/redisson/redisson/issues/4606/comments",
    "author": "rgampa",
    "comments": [
      {
        "user": "mrniko",
        "created_at": "2022-10-18T08:58:29Z",
        "body": "Yes"
      },
      {
        "user": "rgampa",
        "created_at": "2022-10-18T16:10:56Z",
        "body": "Thanks @mrniko for prompt reply."
      }
    ]
  },
  {
    "number": 4585,
    "title": "Redisson Client creating more connections to Redis (Elastic cache cluster) than expected",
    "created_at": "2022-10-07T05:29:34Z",
    "closed_at": "2022-10-07T06:16:24Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/redisson/redisson/issues/4585",
    "body": "We are using Redisson client(**3.11.5 version**) for distributed lock use-case.\r\nWe are using 8 primary and 8 replica in AWS Elastic cache.\r\nRedisson is a singleton object in our Java application instance.\r\n\r\nWe are noticing Redisson client creating more than max connections configured.  Noticed that 24K+ active connections were created from single application instance\r\nMax master connections configured was 1000.\r\n\r\n{code}\r\n\r\n@Bean\r\npublic Redisson clusterServerRedisson() {\r\n        final StringBuilder serverAddress = new StringBuilder()\r\n                .append(\"rediss://\")\r\n                .append(this.environment.getRequiredProperty(RedisPropertyConstants.REDIS_HOST))\r\n                .append(\":\")\r\n                .append(this.environment.getRequiredProperty(RedisPropertyConstants.REDIS_PORT, Integer.class));\r\n        final String redisPassword = this.environment.getRequiredProperty(RedisPropertyConstants.REDIS_PASSWORD);\r\n\r\n        final Config config = new Config();\r\n\r\n        final ClusterServersConfig clusterServersConfig = config.useClusterServers();\r\n        clusterServersConfig.addNodeAddress(serverAddress.toString());\r\n        if (StringUtils.isNotBlank(redisPassword)) {\r\n            clusterServersConfig.setPassword(redisPassword);\r\n        }\r\n        // Redis cluster scan interval in milliseconds.\r\n        clusterServersConfig.setScanInterval(this.environment.getRequiredProperty(RedisPropertyConstants.REDIS_REDISSON_CLUSTER_SCAN_INTERVAL_TIMEOUTMILLIS, int.class));\r\n\r\n        // Redis 'master' node maximum connection pool size\r\n        clusterServersConfig.setMasterConnectionPoolSize(this.environment.getRequiredProperty(RedisPropertyConstants.REDIS_REDISSON_CONNECTION_MAX_POOL_SIZE, int.class));\r\n\r\n        // Redis 'master' node minimum idle connection amount for each master node\r\n        clusterServersConfig.setMasterConnectionMinimumIdleSize(this.environment.getRequiredProperty(RedisPropertyConstants.REDIS_REDISSON_CONNECTION_MIN_IDLE_SIZE, int.class));\r\n\r\n        // Timeout in milliseconds during connecting to any Redis server.\r\n        clusterServersConfig.setConnectTimeout(this.environment.getRequiredProperty(RedisPropertyConstants.REDIS_REDISSON_CONNECTION_TIMEOUTMILLIS, int.class));\r\n\r\n        // Operation timeout - counter starts once command has been sent to the redis server\r\n        // Redis server response timeout in milliseconds. Starts to countdown when Redis command was succesfully sent.\r\n        clusterServersConfig.setTimeout(this.environment.getRequiredProperty(RedisPropertyConstants.REDIS_REDISSON_OP_TIMEOUTMILLIS, int.class));\r\n\r\n        clusterServersConfig.\r\n        // For connection failures outside of the (jedis) pool\r\n        clusterServersConfig.setRetryAttempts(this.environment.getRequiredProperty(RedisPropertyConstants.REDIS_REDISSON_CONNECTION_MAX_RETRY_COUNT, int.class));\r\n        clusterServersConfig.setRetryInterval(this.environment.getRequiredProperty(RedisPropertyConstants.REDIS_REDISSON_CONNECTION_RETRY_DELAYMILLIS, int.class));\r\n\r\n        // Since we use redis primarily as a messaging conduit (PubSub), we tune the following items\r\n        clusterServersConfig.setSubscriptionsPerConnection(\r\n                this.environment.getRequiredProperty(RedisPropertyConstants.REDIS_REDISSON_SUBSCRIPTION_PER_CONNECTION_SIZE, int.class));\r\n        clusterServersConfig.setSubscriptionConnectionPoolSize(\r\n                this.environment.getRequiredProperty(RedisPropertyConstants.REDIS_REDISSON_SUBSCRIPTION_CONNECTION_MAX_POOL_SIZE, int.class));\r\n\r\n        clusterServersConfig.setClientName(this.environment.getRequiredProperty(RedisPropertyConstants.REDIS_REDISSON_CONNECTION_NAME, String.class));\r\n\r\n        return (Redisson)Redisson.create(config);\r\n    }\r\n\r\n{code}\r\n## Redisson Client for Redis\r\nredis.redisson.cluster.scan.interval.timeoutMillis=30000\r\nredis.redisson.connection.name=MY-APP-REDISSON-POOL\r\nredis.redisson.connection.max.pool.size=1000\r\nredis.redisson.connection.max.retry.count=10\r\nredis.redisson.connection.min.idle.size=100\r\nredis.redisson.connection.retry.delayMillis=1500\r\nredis.redisson.connection.timeoutMillis=60000\r\nredis.redisson.idle.connection.timeoutMillis=10000\r\nredis.redisson.lock.timeoutMillis=10000\r\nredis.redisson.op.timeoutMillis=30000\r\nredis.redisson.subscription.connection.max.pool.size=50\r\nredis.redisson.subscription.per.connection.size=10\r\n\r\n\r\npublic class RedisLock implements DistributableLock {\r\n\r\n    private final RedisConfigManager redisConfigManager;\r\n    private final Redisson redisson;\r\n\r\n    public RedisLock(final Redisson redisson) {\r\n        this.redisson = this.redisConfigManager.getRedisson();\r\n    }\r\n\r\n    @Override\r\n    public void acquireLock(final Object object) {\r\n        getLockInstance(object).lock(this.redisConfigManager.getLockTimeoutInMillis(), TimeUnit.MILLISECONDS);\r\n    }\r\n\r\n    @Override\r\n    public void releaseLock(final Object object) {\r\n        getLockInstance(object).unlock();\r\n    }\r\n\r\n    @Override\r\n    public boolean tryWriteLock(final Object object) {\r\n        return getReadWriteLockInstance(object).writeLock().tryLock();\r\n    }\r\n\r\n    @Override\r\n    public void acquireReadLock(final Object object) {\r\n        getReadWriteLockInstance(object).readLock().lock();\r\n    }\r\n\r\n    @Override\r\n    public void releaseReadLock(final Object object) {\r\n        getReadWriteLockInstance(object).readLock().unlock();\r\n    }\r\n\r\n    @Override\r\n    public void acquireWriteLock(final Object object) {\r\n        getReadWriteLockInstance(object).writeLock().lock(this.redisConfigManager.getLockTimeoutInMillis(), TimeUnit.MILLISECONDS);\r\n    }\r\n\r\n    @Override\r\n    public void releaseWriteLock(final Object object) {\r\n         getReadWriteLockInstance(object).writeLock().unlock();\r\n    }\r\n\r\n    private RLock getLockInstance(final Object object) {\r\n        Assert.notNull(object, \"Cannot lock or unlock a null object\");\r\n\r\n        final RLock rLock = this.redisson.getLock(Integer.toString(object.hashCode()));\r\n        if (rLock == null) {\r\n            throw new IllegalStateException(\"Cannot get lock instance.\");\r\n        }\r\n        return rLock;\r\n    }\r\n\r\n    private RReadWriteLock getReadWriteLockInstance(final Object object) {\r\n        Assert.notNull(object, \"Cannot lock or unlock a null object\");\r\n\r\n        final RReadWriteLock rwLock = this.redisson.getReadWriteLock(Integer.toString(object.hashCode()));\r\n        if (rwLock == null) {\r\n            throw new IllegalStateException(\"Cannot get read write lock instance.\");\r\n        }\r\n        return rwLock;\r\n    }\r\n\r\n}\r\n\r\n\r\nAny help would be highly appreciable. Thanks in advance.",
    "comments_url": "https://api.github.com/repos/redisson/redisson/issues/4585/comments",
    "author": "samanthjain",
    "comments": [
      {
        "user": "mrniko",
        "created_at": "2022-10-07T06:16:24Z",
        "body": "Multiple problems with connections were resolved since 3.11.5. Especially in versions 3.12.2, 3.13.3, 3.14.1... You need to update to the latest version."
      },
      {
        "user": "samanthjain",
        "created_at": "2022-10-07T20:38:28Z",
        "body": "> Multiple problems with connections were resolved since 3.11.5. Especially in versions 3.12.2, 3.13.3, 3.14.1... You need to update to the latest version.\r\n\r\nThank you. Realy, Appreciate your quick response. we will try with newer version 3.17.7."
      }
    ]
  },
  {
    "number": 4284,
    "title": "What difference from `readAllEntrySet` and `getAll` in `RMap`",
    "created_at": "2022-05-10T12:57:00Z",
    "closed_at": "2022-05-10T13:15:01Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/redisson/redisson/issues/4284",
    "body": "Hi~ Community:\r\n    When I want to use `hmget` command in redis, I found `rMap.getAll(\"\")`, it returns all fields, so what difference from `readAllEntrySet` and `getAll` in `RMap`?\r\n",
    "comments_url": "https://api.github.com/repos/redisson/redisson/issues/4284/comments",
    "author": "xdshent",
    "comments": [
      {
        "user": "mrniko",
        "created_at": "2022-05-10T13:01:52Z",
        "body": "`getAll` methods allows to load map by specified keys. Whereas `readAllEntrySet` loads all map entries."
      },
      {
        "user": "xdshent",
        "created_at": "2022-05-10T13:14:57Z",
        "body": "> `getAll` methods allows to load map by specified keys. Whereas `readAllEntrySet` loads all map entries.\r\n\r\nthx! @mrniko "
      }
    ]
  },
  {
    "number": 4281,
    "title": "Redis is changed to access with password, and trylock takes more time",
    "created_at": "2022-05-10T09:47:28Z",
    "closed_at": "2022-05-12T06:58:11Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/redisson/redisson/issues/4281",
    "body": "Redis used to access without password, and then upgraded to access with password. It was found that trylock took more than one second\u3002\r\nredisson version is 3.16.0\r\nThe configuration is as follows\uff1a\r\n`config.useClusterServers()\r\n                    .setPassword(password)\r\n                    .setScanInterval(2000)\r\n                    .addNodeAddress(xxxxx);\r\n            return Redisson.create(config);`\r\nso, I tried to reduce the reission version to 3.11.6, and the time consumption decreased significantly\r\nI don't know what caused this. Is it the wrong way to use the new version?\r\n",
    "comments_url": "https://api.github.com/repos/redisson/redisson/issues/4281/comments",
    "author": "XTUxiongda",
    "comments": [
      {
        "user": "mrniko",
        "created_at": "2022-05-10T10:02:24Z",
        "body": "It was caused by introduction of WAIT command to sync with slaves. It seems that sync takes much time in your case."
      },
      {
        "user": "XTUxiongda",
        "created_at": "2022-05-10T10:24:28Z",
        "body": "> It was caused by introduction of WAIT command to sync with slaves. It seems that sync takes much time in your case.\r\nIs there any way to solve it? I found this problem after version 3.14.1. Or can I only use the old version, and the new version all has this problem?\r\n"
      },
      {
        "user": "XTUxiongda",
        "created_at": "2022-05-10T10:27:39Z",
        "body": "And My waittime input parameter is 0\r\n"
      },
      {
        "user": "mrniko",
        "created_at": "2022-05-10T12:59:24Z",
        "body": "Could you set `TRACE` logging level for `org.redisson` package and share output?"
      },
      {
        "user": "XTUxiongda",
        "created_at": "2022-05-10T13:34:54Z",
        "body": "[basic-porter-tadata-xxx.xx.xx.xx-0000] 2022-05-10 21:30:16.221 TRACE 20100 [redisson-netty-2-4] [CommandEncoder.java:112] channel: [id: 0x5eda2625, L:/xxx.xx.xx.xx:58206 - R:xxx.xx.xx.xx/xxx.xx.xx.xx:7002] message: *2\r\n$7\r\nCLUSTER\r\n$5\r\nNODES\r\n\r\n[basic-porter-tadata-xxx.xx.xx.xx-0000] 2022-05-10 21:30:16.235 TRACE 20100 [redisson-netty-2-4] [CommandDecoder.java:113] reply: $775\r\na45ecb9201e0bf48665ed7e5a9846cbe6d753165 xxx.xx.xx.xx:7006@17006 slave f5d943dbd5806937e204ee35ea5f6aa65e46a6ca 0 1652189413455 6 connected\r\nf5d943dbd5806937e204ee35ea5f6aa65e46a6ca xxx.xx.xx.xx:7003@17003 master - 0 1652189414000 3 connected 10923-16383\r\n40e866c9d83596f7d50ff09ee92370f580c9add9 xxx.xx.xx.xx:7001@17001 master - 0 1652189415465 1 connected 0-5460\r\nf226329e04bda39971a532552f18a32bb2c1b7a8 xxx.xx.xx.xx:7005@17005 slave ced813a2fd0db10432dbc999befd3709ac2234a2 0 1652189414460 5 connected\r\neccdd6be867c3fc36a27f2c1cc105c98c2d08879 xxx.xx.xx.xx:7004@17004 slave 40e866c9d83596f7d50ff09ee92370f580c9add9 0 1652189414000 1 connected\r\nced813a2fd0db10432dbc999befd3709ac2234a2 xxx.xx.xx.xx:7002@17002 myself,master - 0 1652189413000 2 connected 5461-10922\r\n\r\n, channel: [id: 0x5eda2625, L:/xxx.xx.xx.xx:58206 - R:xxx.xx.xx.xx/xxx.xx.xx.xx:7002], command: CommandData [promise=RedissonPromise [promise=ImmediateEventExecutor$ImmediatePromise@44c15e70(incomplete)], command=(CLUSTER NODES), params=[], codec=null]\r\n[basic-porter-tadata-xxx.xx.xx.xx-0000] 2022-05-10 21:30:16.236 DEBUG 20100 [redisson-netty-2-4] [ClusterConnectionManager.java:466] cluster nodes state got from xxx.xx.xx.xx/xxx.xx.xx.xx:7002:\r\na45ecb9201e0bf48665ed7e5a9846cbe6d753165 xxx.xx.xx.xx:7006@17006 slave f5d943dbd5806937e204ee35ea5f6aa65e46a6ca 0 1652189413455 6 connected\r\nf5d943dbd5806937e204ee35ea5f6aa65e46a6ca xxx.xx.xx.xx:7003@17003 master - 0 1652189414000 3 connected 10923-16383\r\n40e866c9d83596f7d50ff09ee92370f580c9add9 xxx.xx.xx.xx:7001@17001 master - 0 1652189415465 1 connected 0-5460\r\nf226329e04bda39971a532552f18a32bb2c1b7a8 xxx.xx.xx.xx:7005@17005 slave ced813a2fd0db10432dbc999befd3709ac2234a2 0 1652189414460 5 connected\r\neccdd6be867c3fc36a27f2c1cc105c98c2d08879 xxx.xx.xx.xx:7004@17004 slave 40e866c9d83596f7d50ff09ee92370f580c9add9 0 1652189414000 1 connected\r\nced813a2fd0db10432dbc999befd3709ac2234a2 xxx.xx.xx.xx:7002@17002 myself,master - 0 1652189413000 2 connected 5461-10922\r\n\r\n[basic-porter-tadata-xxx.xx.xx.xx-0000] 2022-05-10 21:30:17.313 DEBUG 20100 [http-nio-8080-exec-3] [ClusterConnectionManager.java:751] slot 2875 for sync_tadata_lock\r\n[basic-porter-tadata-xxx.xx.xx.xx-0000] 2022-05-10 21:30:17.314 DEBUG 20100 [http-nio-8080-exec-3] [ClusterConnectionManager.java:751] slot 2875 for sync_tadata_lock\r\n[basic-porter-tadata-xxx.xx.xx.xx-0000] 2022-05-10 21:30:17.314 TRACE 20100 [redisson-netty-2-5] [CommandEncoder.java:112] channel: [id: 0x1dd4250d, L:/xxx.xx.xx.xx:58207 - R:xxx.xx.xx.xx/xxx.xx.xx.xx:7001] message: *6\r\n$4\r\nEVAL\r\n$339\r\nif (redis.call('exists', KEYS[1]) == 0) then redis.call('hincrby', KEYS[1], ARGV[2], 1); redis.call('pexpire', KEYS[1], ARGV[1]); return nil; end; if (redis.call('hexists', KEYS[1], ARGV[2]) == 1) then redis.call('hincrby', KEYS[1], ARGV[2], 1); redis.call('pexpire', KEYS[1], ARGV[1]); return nil; end; return redis.call('pttl', KEYS[1]);\r\n$1\r\n1\r\n$16\r\nsync_tadata_lock\r\n$6\r\n600000\r\n$40\r\n8f9cbb23-40dd-4457-a13a-6f8041461ba5:194\r\n\r\n[basic-porter-tadata-xxx.xx.xx.xx-0000] 2022-05-10 21:30:17.315 TRACE 20100 [redisson-netty-2-5] [CommandEncoder.java:112] channel: [id: 0x1dd4250d, L:/xxx.xx.xx.xx:58207 - R:xxx.xx.xx.xx/xxx.xx.xx.xx:7001] message: *6\r\n$4\r\nEVAL\r\n$339\r\nif (redis.call('exists', KEYS[1]) == 0) then redis.call('hincrby', KEYS[1], ARGV[2], 1); redis.call('pexpire', KEYS[1], ARGV[1]); return nil; end; if (redis.call('hexists', KEYS[1], ARGV[2]) == 1) then redis.call('hincrby', KEYS[1], ARGV[2], 1); redis.call('pexpire', KEYS[1], ARGV[1]); return nil; end; return redis.call('pttl', KEYS[1]);\r\n$1\r\n1\r\n$16\r\nsync_tadata_lock\r\n$6\r\n600000\r\n$40\r\n8f9cbb23-40dd-4457-a13a-6f8041461ba5:194\r\n*3\r\n$4\r\nWAIT\r\n$1\r\n1\r\n$4\r\n1000\r\n\r\n[basic-porter-tadata-xxx.xx.xx.xx-0000] 2022-05-10 21:30:17.332 TRACE 20100 [redisson-netty-2-5] [CommandDecoder.java:113] reply: $-1\r\n, channel: [id: 0x1dd4250d, L:/xxx.xx.xx.xx:58207 - R:xxx.xx.xx.xx/xxx.xx.xx.xx:7001], command: CommandsData [commands=[CommandData [promise=RedissonPromise [promise=ImmediateEventExecutor$ImmediatePromise@5dfb7633(incomplete)], command=(EVAL), params=[if (redis.call('exists', KEYS[1]) == 0) then redis.call('hincrby', KEYS[1], ARGV[2], 1); redis.call(..., 1, sync_tadata_lock, 600000, 8f9cbb23-40dd-4457-a13a-6f8041461ba5:194], codec=org.redisson.client.codec.LongCodec], CommandData [promise=RedissonPromise [promise=ImmediateEventExecutor$ImmediatePromise@ee60138(incomplete)], command=(WAIT), params=[1, 1000], codec=org.redisson.client.codec.StringCodec]]]\r\n[basic-porter-tadata-xxx.xx.xx.xx-0000] 2022-05-10 21:30:18.255 TRACE 20100 [redisson-netty-2-4] [CommandEncoder.java:112] channel: [id: 0x5eda2625, L:/xxx.xx.xx.xx:58206 - R:xxx.xx.xx.xx/xxx.xx.xx.xx:7002] message: *2\r\n$7\r\nCLUSTER\r\n$5\r\nNODES\r\n\r\n[basic-porter-tadata-xxx.xx.xx.xx-0000] 2022-05-10 21:30:18.271 TRACE 20100 [redisson-netty-2-4] [CommandDecoder.java:113] reply: $775\r\na45ecb9201e0bf48665ed7e5a9846cbe6d753165 xxx.xx.xx.xx:7006@17006 slave f5d943dbd5806937e204ee35ea5f6aa65e46a6ca 0 1652189416468 6 connected\r\nf5d943dbd5806937e204ee35ea5f6aa65e46a6ca xxx.xx.xx.xx:7003@17003 master - 0 1652189414000 3 connected 10923-16383\r\n40e866c9d83596f7d50ff09ee92370f580c9add9 xxx.xx.xx.xx:7001@17001 master - 0 1652189415465 1 connected 0-5460\r\nf226329e04bda39971a532552f18a32bb2c1b7a8 xxx.xx.xx.xx:7005@17005 slave ced813a2fd0db10432dbc999befd3709ac2234a2 0 1652189416000 5 connected\r\neccdd6be867c3fc36a27f2c1cc105c98c2d08879 xxx.xx.xx.xx:7004@17004 slave 40e866c9d83596f7d50ff09ee92370f580c9add9 0 1652189417471 1 connected\r\nced813a2fd0db10432dbc999befd3709ac2234a2 xxx.xx.xx.xx:7002@17002 myself,master - 0 1652189415000 2 connected 5461-10922\r\n\r\n, channel: [id: 0x5eda2625, L:/xxx.xx.xx.xx:58206 - R:xxx.xx.xx.xx/xxx.xx.xx.xx:7002], command: CommandData [promise=RedissonPromise [promise=ImmediateEventExecutor$ImmediatePromise@3c593bb7(incomplete)], command=(CLUSTER NODES), params=[], codec=null]\r\n[basic-porter-tadata-xxx.xx.xx.xx-0000] 2022-05-10 21:30:18.272 DEBUG 20100 [redisson-netty-2-4] [ClusterConnectionManager.java:466] cluster nodes state got from xxx.xx.xx.xx/xxx.xx.xx.xx:7002:\r\na45ecb9201e0bf48665ed7e5a9846cbe6d753165 xxx.xx.xx.xx:7006@17006 slave f5d943dbd5806937e204ee35ea5f6aa65e46a6ca 0 1652189416468 6 connected\r\nf5d943dbd5806937e204ee35ea5f6aa65e46a6ca xxx.xx.xx.xx:7003@17003 master - 0 1652189414000 3 connected 10923-16383\r\n40e866c9d83596f7d50ff09ee92370f580c9add9 xxx.xx.xx.xx:7001@17001 master - 0 1652189415465 1 connected 0-5460\r\nf226329e04bda39971a532552f18a32bb2c1b7a8 xxx.xx.xx.xx:7005@17005 slave ced813a2fd0db10432dbc999befd3709ac2234a2 0 1652189416000 5 connected\r\neccdd6be867c3fc36a27f2c1cc105c98c2d08879 xxx.xx.xx.xx:7004@17004 slave 40e866c9d83596f7d50ff09ee92370f580c9add9 0 1652189417471 1 connected\r\nced813a2fd0db10432dbc999befd3709ac2234a2 xxx.xx.xx.xx:7002@17002 myself,master - 0 1652189415000 2 connected 5461-10922\r\n\r\n[basic-porter-tadata-xxx.xx.xx.xx-0000] 2022-05-10 21:30:18.826 TRACE 20100 [redisson-netty-2-5] [CommandDecoder.java:113] reply: :0\r\n, channel: [id: 0x1dd4250d, L:/xxx.xx.xx.xx:58207 - R:xxx.xx.xx.xx/xxx.xx.xx.xx:7001], command: CommandsData [commands=[CommandData [promise=RedissonPromise [promise=ImmediateEventExecutor$ImmediatePromise@5dfb7633(success)], command=(EVAL), params=[if (redis.call('exists', KEYS[1]) == 0) then redis.call('hincrby', KEYS[1], ARGV[2], 1); redis.call(..., 1, sync_tadata_lock, 600000, 8f9cbb23-40dd-4457-a13a-6f8041461ba5:194], codec=org.redisson.client.codec.LongCodec], CommandData [promise=RedissonPromise [promise=ImmediateEventExecutor$ImmediatePromise@ee60138(incomplete)], command=(WAIT), params=[1, 1000], codec=org.redisson.client.codec.StringCodec]]]\r\n[basic-porter-tadata-xxx.xx.xx.xx-0000] 2022-05-10 21:30:18.827 DEBUG 20100 [redisson-netty-2-5] [RedisExecutor.java:522] connection released for command null and params null from slot NodeSource [slot=null, addr=null, redisClient=null, redirect=null, entry=MasterSlaveEntry [masterEntry=[freeSubscribeConnectionsAmount=1, freeSubscribeConnectionsCounter=value:50:queue:0, freeConnectionsAmount=24, freeConnectionsCounter=value:64:queue:0, freezeReason=null, client=[addr=redis://xxx.xx.xx.xx:7001], nodeType=MASTER, firstFail=0]]] using connection RedisConnection@1915911582 [redisClient=[addr=redis://xxx.xx.xx.xx:7001], channel=[id: 0x1dd4250d, L:/xxx.xx.xx.xx:58207 - R:xxx.xx.xx.xx/xxx.xx.xx.xx:7001], currentCommand=null]\r\n\r\n"
      },
      {
        "user": "XTUxiongda",
        "created_at": "2022-05-12T01:13:05Z",
        "body": "@mrniko can you help me on this queston? thank you very much. i really want to know the reason."
      },
      {
        "user": "mrniko",
        "created_at": "2022-05-12T06:13:29Z",
        "body": "I reproduce your case only if masterauth is not set for slave nodes."
      },
      {
        "user": "XTUxiongda",
        "created_at": "2022-05-12T06:49:45Z",
        "body": "> I reproduce your case only if masterauth is not set for slave nodes.\r\n\r\nthank you very much !  That's why. "
      }
    ]
  },
  {
    "number": 4065,
    "title": "How to use 'zAdd'?",
    "created_at": "2022-01-10T09:22:53Z",
    "closed_at": "2022-01-11T07:26:11Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/redisson/redisson/issues/4065",
    "body": "How to use 'RedisZSetCommands.zAdd(byte[] key, double score, byte[] value)'?\r\nnot implemented\uff1f",
    "comments_url": "https://api.github.com/repos/redisson/redisson/issues/4065/comments",
    "author": "Jabwin",
    "comments": [
      {
        "user": "mrniko",
        "created_at": "2022-01-10T10:55:47Z",
        "body": "It's implemented in all versions. Starting from Spring Data Redis 2.5.0 it's routed to `zAdd(byte[] key, double score, byte[] value, ZAddArgs args)` method. Which is also implemented."
      },
      {
        "user": "Jabwin",
        "created_at": "2022-01-11T01:25:50Z",
        "body": "Thank you!"
      }
    ]
  },
  {
    "number": 4046,
    "title": "Reads only happening from Master Node for Redis Cache in Elastic Cache replicated mode",
    "created_at": "2021-12-23T11:38:40Z",
    "closed_at": "2021-12-26T08:32:43Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/redisson/redisson/issues/4046",
    "body": "We are using the clustered connection in aws for redis, but the read is always happening from the primary node.\r\n\r\nThe versions we are using:\r\n\r\nRedis engine in aws  : 4.0.10\r\n\r\nClient:\r\n                       <dependency>\r\n\t\t\t\t<groupId>org.redisson</groupId>\r\n\t\t\t\t<artifactId>redisson</artifactId>\r\n\t\t\t\t<version>3.16.6</version>\r\n\t\t\t</dependency>\r\n\r\n\r\nConfig:\r\nURL: aws cluster url\r\nfinal int poolSize = Runtime.getRuntime().availableProcessors() * 2 + 2;\r\n\t\tConfig config = new Config();\r\n\t\tconfig\r\n\t\t\t.useClusterServers()\r\n\t\t\t.setScanInterval(2000)\r\n\t\t\t.addNodeAddress(redisUrl)\r\n\t\t\t.setMasterConnectionPoolSize(poolSize)\r\n\t\t\t.setMasterConnectionMinimumIdleSize(poolSize)\r\n\t\t\t.setSlaveConnectionPoolSize(poolSize)\r\n\t\t\t.setSlaveConnectionMinimumIdleSize(poolSize)\r\n\t\t\t\t.setReadMode(ReadMode.SLAVE);\r\n\r\n\t\tconfig.setCodec(codec);\r\n\t\tredissonClient = Redisson.create(config);\r\n\r\n\r\nCache read:\r\n\r\n                final RMap<String, Config> cache = this.redissonClient.getMap(CONFIG_CACHE);\r\n\t\tif (cache.isEmpty()) {\r\n\t\t\tlog.info(\"found Config cache empty... reloading from database\");\r\n\t\t\treloadPartnerConfig();\r\n\t\t}\r\n\t\treturn cache.get(apiKey);\r\n\r\n\r\n@mrniko  Could you check this once you have some time. I am sure you can provide a relevant answer very fast.\r\n",
    "comments_url": "https://api.github.com/repos/redisson/redisson/issues/4046/comments",
    "author": "rjvharidas",
    "comments": [
      {
        "user": "mrniko",
        "created_at": "2021-12-23T11:45:49Z",
        "body": "please share log with `trace` logging level for `org.redisson` package."
      },
      {
        "user": "mrniko",
        "created_at": "2021-12-23T17:32:02Z",
        "body": "EVAL script uses write command so it's executed on master. You can use RMapCache.getWithTTLOnly() if idleTimeout is not defined."
      },
      {
        "user": "rjvharidas",
        "created_at": "2021-12-26T08:32:43Z",
        "body": "Thanks @mrniko , we have moved to  RMapCache.getWithTTLOnly() and now i can see the data is loading from read replica."
      },
      {
        "user": "formanojhr",
        "created_at": "2023-04-26T03:45:11Z",
        "body": "@mrniko is this issue also in cluster mode? for read replicas. I assume yes."
      }
    ]
  },
  {
    "number": 3989,
    "title": " ERR Error running script (call to f_0fd7cdd6c1224471b29d6f7fc503462f3b252f12): @user_script:1: user_script:1: bad argument #2 to 'unpack' (data string too short",
    "created_at": "2021-11-26T18:24:24Z",
    "closed_at": "2021-11-30T06:09:02Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/redisson/redisson/issues/3989",
    "body": "I am unable to understand this error. Please help.\r\n` Execution exception[[RedisException: ERR Error running script (call to f_0fd7cdd6c1224471b29d6f7fc503462f3b252f12): @user_script:1: user_script:1: bad argument #2 to 'unpack' (data string too short) . channel: [id: 0xd4089e92, L:/10.212.134.41:60921 - R:core-dev-redis.6cbkbd.0001.aps1.cache.amazonaws.com/192.168.2.46:6379] command: (EVAL), params: [local result = {}; local idleKeys = {}; local res; if (#ARGV == 4) then  res = redis.call('hscan', K..., 3, ALLUS_XXX, redisson__timeout__set:{ALLUS_XXX}, redisson__idle__set:{ALLUS_XXX}, 1637948919729, 0, 10]]]\\\r\n`\r\n\r\nI am trying to read using `getMapCache(ALLUS_XXX)`\r\n\r\nalso, in redis cli if I do `hgetall ALLUS_XXX`.  This is the output\r\n\r\n```\r\n 1) \"3\"\r\n 2) \"{\\\"ev\\\":\\\"Q\\\",\\\"sym\\\":\\\"XXX\\\",\\\"bx\\\":\\\"3\\\",\\\"ax\\\":\\\"21\\\",\\\"bp\\\":331.27,\\\"ap\\\":331.3,\\\"bs\\\":2,\\\"as\\\":1,\\\"t\\\":\\\"1637948895747\\\",\\\"q\\\":\\\"42893371\\\",\\\"z\\\":3}\"\r\n 3) \"2\"\r\n 4) \"{\\\"ev\\\":\\\"Q\\\",\\\"sym\\\":\\\"XXX\\\",\\\"bx\\\":\\\"2\\\",\\\"ax\\\":\\\"19\\\",\\\"bp\\\":330.03,\\\"ap\\\":330.13,\\\"bs\\\":2,\\\"as\\\":3,\\\"t\\\":\\\"1637949585689\\\",\\\"q\\\":\\\"46053648\\\",\\\"z\\\":3}\"\r\n 5) \"12\"\r\n 6) \"{\\\"ev\\\":\\\"Q\\\",\\\"sym\\\":\\\"XXX\\\",\\\"bx\\\":\\\"12\\\",\\\"ax\\\":\\\"11\\\",\\\"bp\\\":329.91,\\\"ap\\\":330.25,\\\"bs\\\":1,\\\"as\\\":12,\\\"t\\\":\\\"1637949676507\\\",\\\"q\\\":\\\"46258127\\\",\\\"z\\\":3}\"\r\n 7) \"9\"\r\n 8) \"{\\\"ev\\\":\\\"Q\\\",\\\"sym\\\":\\\"XXX\\\",\\\"bx\\\":\\\"9\\\",\\\"ax\\\":\\\"15\\\",\\\"bp\\\":330.43,\\\"ap\\\":330.44,\\\"bs\\\":3,\\\"as\\\":3,\\\"t\\\":\\\"1637949113455\\\",\\\"q\\\":\\\"43838492\\\",\\\"z\\\":3}\"\r\n 9) \"15\"\r\n10) \"{\\\"ev\\\":\\\"Q\\\",\\\"sym\\\":\\\"XXX\\\",\\\"bx\\\":\\\"15\\\",\\\"ax\\\":\\\"12\\\",\\\"bp\\\":330.34,\\\"ap\\\":330.37,\\\"bs\\\":2,\\\"as\\\":4,\\\"t\\\":\\\"1637949549028\\\",\\\"q\\\":\\\"45809932\\\",\\\"z\\\":3}\"\r\n11) \"10\"\r\n12) \"{\\\"ev\\\":\\\"Q\\\",\\\"sym\\\":\\\"XXX\\\",\\\"bx\\\":\\\"10\\\",\\\"ax\\\":\\\"12\\\",\\\"bp\\\":330.26,\\\"ap\\\":330.37,\\\"bs\\\":1,\\\"as\\\":2,\\\"t\\\":\\\"1637949585833\\\",\\\"q\\\":\\\"46055016\\\",\\\"z\\\":3}\"\r\n13) \"18\"\r\n14) \"{\\\"ev\\\":\\\"Q\\\",\\\"sym\\\":\\\"XXX\\\",\\\"bx\\\":\\\"18\\\",\\\"ax\\\":\\\"11\\\",\\\"bp\\\":330.15,\\\"ap\\\":330.25,\\\"bs\\\":2,\\\"as\\\":12,\\\"t\\\":\\\"1637949683953\\\",\\\"q\\\":\\\"46258667\\\",\\\"z\\\":3}\"\r\n15) \"1\"\r\n16) \"{\\\"ev\\\":\\\"Q\\\",\\\"sym\\\":\\\"XXX\\\",\\\"bx\\\":\\\"1\\\",\\\"ax\\\":\\\"17\\\",\\\"bp\\\":330.21,\\\"ap\\\":330.31,\\\"bs\\\":4,\\\"as\\\":1,\\\"t\\\":\\\"1637949583379\\\",\\\"q\\\":\\\"46033150\\\",\\\"z\\\":3}\"\r\n17) \"11\"\r\n18) \"{\\\"ev\\\":\\\"Q\\\",\\\"sym\\\":\\\"XXX\\\",\\\"bx\\\":\\\"11\\\",\\\"ax\\\":\\\"12\\\",\\\"bp\\\":329.91,\\\"ap\\\":330.2,\\\"bs\\\":4,\\\"as\\\":1,\\\"t\\\":\\\"1637949688637\\\",\\\"q\\\":\\\"46259504\\\",\\\"z\\\":3}\"\r\n19) \"7\"\r\n20) \"{\\\"ev\\\":\\\"Q\\\",\\\"sym\\\":\\\"XXX\\\",\\\"bx\\\":\\\"7\\\",\\\"ax\\\":\\\"11\\\",\\\"bp\\\":330.15,\\\"ap\\\":330.25,\\\"bs\\\":2,\\\"as\\\":12,\\\"t\\\":\\\"1637949684316\\\",\\\"q\\\":\\\"46258719\\\",\\\"z\\\":3}\"\r\n21) \"20\"\r\n22) \"{\\\"ev\\\":\\\"Q\\\",\\\"sym\\\":\\\"XXX\\\",\\\"bx\\\":\\\"20\\\",\\\"ax\\\":\\\"12\\\",\\\"bp\\\":330.11,\\\"ap\\\":330.26,\\\"bs\\\":1,\\\"as\\\":1,\\\"t\\\":\\\"1637949586232\\\",\\\"q\\\":\\\"46058248\\\",\\\"z\\\":3}\"\r\n23) \"19\"\r\n24) \"{\\\"ev\\\":\\\"Q\\\",\\\"sym\\\":\\\"XXX\\\",\\\"bx\\\":\\\"19\\\",\\\"ax\\\":\\\"11\\\",\\\"bp\\\":329.91,\\\"ap\\\":330.25,\\\"bs\\\":2,\\\"as\\\":12,\\\"t\\\":\\\"1637949676537\\\",\\\"q\\\":\\\"46258138\\\",\\\"z\\\":3}\"\r\n25) \"8\"\r\n26) \"{\\\"ev\\\":\\\"Q\\\",\\\"sym\\\":\\\"XXX\\\",\\\"bx\\\":\\\"8\\\",\\\"ax\\\":\\\"11\\\",\\\"bp\\\":330.06,\\\"ap\\\":330.25,\\\"bs\\\":1,\\\"as\\\":12,\\\"t\\\":\\\"1637949685035\\\",\\\"q\\\":\\\"46258880\\\",\\\"z\\\":3}\"\r\n27) \"17\"\r\n28) \"{\\\"ev\\\":\\\"Q\\\",\\\"sym\\\":\\\"XXX\\\",\\\"bx\\\":\\\"17\\\",\\\"ax\\\":\\\"17\\\",\\\"bp\\\":329.37,\\\"ap\\\":330.16,\\\"bs\\\":2,\\\"as\\\":2,\\\"t\\\":\\\"1637949606270\\\",\\\"q\\\":\\\"46241118\\\",\\\"z\\\":3}\"\r\n29) \"21\"\r\n30) \"{\\\"ev\\\":\\\"Q\\\",\\\"sym\\\":\\\"XXX\\\",\\\"bx\\\":\\\"21\\\",\\\"ax\\\":\\\"12\\\",\\\"bp\\\":330.9,\\\"ap\\\":331.09,\\\"bs\\\":1,\\\"as\\\":1,\\\"t\\\":\\\"1637949581667\\\",\\\"q\\\":\\\"46012327\\\",\\\"z\\\":3}\"\r\n```\r\n\r\n\r\nThis is easlily reproducible,\r\n1. ` HMSET ALLUS_XXX 1 \"{\\\"ev\\\":\\\"Q\\\",\\\"sym\\\":\\\"XXX\\\",\\\"bx\\\":\\\"1\\\",\\\"ax\\\":\\\"20\\\",\\\"bp\\\":157.2,\\\"ap\\\":157.21,\\\"bs\\\":5,\\\"as\\\":1,\\\"t\\\":\\\"1637949207844\\\",\\\"q\\\":\\\"60303179\\\",\\\"z\\\":3}\"`\r\n2. Now try to access this using redisson `getMapCache(\"ALLUS_XXX\").readAllEntrySet()`",
    "comments_url": "https://api.github.com/repos/redisson/redisson/issues/3989/comments",
    "author": "ashwinreal",
    "comments": [
      {
        "user": "mrniko",
        "created_at": "2021-11-27T05:38:02Z",
        "body": "use the same codec for data store and reading"
      },
      {
        "user": "ashwinreal",
        "created_at": "2021-11-27T08:21:47Z",
        "body": "> use the same codec for data store and reading\r\n\r\nWhat is the codec when we add keys using redis-cli  and want to read using redisson  @mrniko ?  I tried a few at random did not work"
      },
      {
        "user": "SplotyCode",
        "created_at": "2021-11-27T09:15:05Z",
        "body": "Have you tried StringCodec?"
      },
      {
        "user": "ashwinreal",
        "created_at": "2021-11-27T09:17:17Z",
        "body": " @mrniko  @SplotyCode i have tried both\r\n` redisService.client.getMapCache(key, StringCodec.INSTANCE ).readAllEntrySet()\r\n      redisService.client.getMapCache(key, ByteArrayCodec.INSTANCE ).readAllEntrySet()\r\n`"
      },
      {
        "user": "ashwinreal",
        "created_at": "2021-11-27T12:05:07Z",
        "body": "I feel this should not be hard to do , there should be a codec already defined for this ... all I am trying to do is `HMSET test_key 1 \"123\"\r\n` \r\nand then read this using redission. Somehow I am not getting any of the codecs to work for this use case . \r\nDo I need to define a custom codec for this ? Pls suggest @mrniko @SplotyCode "
      },
      {
        "user": "ashwinreal",
        "created_at": "2021-11-28T16:16:26Z",
        "body": "@mrniko @SplotyCode I am really stuck here . Any suggestions pls ?"
      },
      {
        "user": "mrniko",
        "created_at": "2021-11-29T05:48:07Z",
        "body": "you can insert/update RMapCache entries only through its API or try RMap object"
      },
      {
        "user": "ashwinreal",
        "created_at": "2021-11-30T18:27:34Z",
        "body": "yes, this works \r\n`client.getMap(key, StringCodec.INSTANCE).readAllEntrySet`\r\nThanks @mrniko "
      },
      {
        "user": "chanhengseang3",
        "created_at": "2024-06-25T06:29:38Z",
        "body": "I got this error after added StringCodec.INSTANCE\r\n`redissonClient.getBoundedBlockingQueue(\"key\", StringCodec.INSTANCE)`\r\n```\r\ncom.esotericsoftware.kryo.KryoException: Encountered unregistered class ID: 65\r\n\tat com.esotericsoftware.kryo.util.DefaultClassResolver.readClass(DefaultClassResolver.java:159)\r\n\tat com.esotericsoftware.kryo.Kryo.readClass(Kryo.java:758)\r\n\tat com.esotericsoftware.kryo.Kryo.readClassAndObject(Kryo.java:869)\r\n\tat org.redisson.codec.Kryo5Codec$4.decode(Kryo5Codec.java:144)\r\n\tat org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:433)\r\n\tat org.redisson.client.handler.CommandDecoder.decodeList(CommandDecoder.java:490)\r\n\tat org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:442)\r\n\tat org.redisson.client.handler.CommandDecoder.decodeCommand(CommandDecoder.java:216)\r\n\tat org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:144)\r\n\tat org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:120)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:529)\r\n\tat io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:366)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)\r\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.base/java.lang.Thread.run(Thread.java:840)\r\n```"
      }
    ]
  },
  {
    "number": 3925,
    "title": "Redisson client injects weird characters at the beginning of strings",
    "created_at": "2021-10-29T12:01:41Z",
    "closed_at": "2021-10-29T12:28:17Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/redisson/redisson/issues/3925",
    "body": "I'm using Redisson client to publish String messages on a topic, but for some reasons, the published messages always contain some weird characters at the beginning:\r\n\r\neg: when I publish the string \"{\"event\":\"notification\"}\" at the redis level I end up with this: \"\\x04>\\x18{\"event\":\"notification\"}\"\r\n\r\n1) \"pmessage\"\r\n2) \"*\"\r\n3) \"active_project_users:1\"\r\n4) \"\\x04>\\x18{\\\"event\\\":\\\"notification\\\"}\"\r\n\r\nAny idea how I can make those weird chars go away?\r\n\r\nMy java code looks like this:\r\n\r\n private void publish(String channel, String message) {       \r\n        RTopic topic = redissonClient.getTopic(channel);\r\n        topic.publish(\"{\\\"event\\\":\\\"notification\\\"}\");\r\n    }\r\nI'm using redis:3.2 & radisson-spring-boot-starter 3.16.1\r\n\r\nThanks",
    "comments_url": "https://api.github.com/repos/redisson/redisson/issues/3925/comments",
    "author": "ghevge",
    "comments": [
      {
        "user": "mrniko",
        "created_at": "2021-10-29T12:28:17Z",
        "body": "default codec is MarshallingCodec. You need to define StringCodec if you want data stored as plain text."
      },
      {
        "user": "ghevge",
        "created_at": "2021-10-29T12:44:10Z",
        "body": "Thanks!"
      }
    ]
  },
  {
    "number": 3860,
    "title": "How does PING influences the BATCH command?",
    "created_at": "2021-10-04T09:42:08Z",
    "closed_at": "2021-10-05T08:23:34Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/redisson/redisson/issues/3860",
    "body": "I'm doing a batch command in the following way:\r\n\r\n```\r\n...\r\n  final RBatch rBatch = redissonClient.createBatch();\r\n        for (final String key : keys) {\r\n            rBatch.getMap(key, StringCodec.INSTANCE).getAsync(fieldName);\r\n        }\r\n  final List<?> responses = rBatch.execute().getResponses();\r\n ...\r\n```\r\nFrom time to time we get the following Timeout exception:\r\n```\r\norg.redisson.client.RedisResponseTimeoutException: Redis server response timeout (20 ms) occured after 0 retry attempts. Increase nettyThreads and/or timeout settings. Try to define pingConnectionInterval setting. Command: null, params: null\r\n```\r\n\r\nI'm wondering about the *Try to define pingConnectionInterval setting.* in the WARN message. We use the default setting for PING (the 30s interval). What is the meaning of that sentence in the message? Is the PING necessary? Could we disable the PING?  How does the PING influences the batch command? Any suggestions how this WARN can be avoided?\r\n\r\n\r\nRedis: 5.0.5\r\nRedisson: 3.16.3\r\n",
    "comments_url": "https://api.github.com/repos/redisson/redisson/issues/3860/comments",
    "author": "mircea-pop",
    "comments": [
      {
        "user": "mrniko",
        "created_at": "2021-10-04T11:33:26Z",
        "body": "I think in your case it's just a network delay due to response size."
      },
      {
        "user": "mircea-pop",
        "created_at": "2021-10-04T13:04:58Z",
        "body": "so the message in this case is not specific, but rather a \"catch all\" approach.\r\nThanks!"
      },
      {
        "user": "mircea-pop",
        "created_at": "2021-10-04T13:06:12Z",
        "body": "would it be OK to completely disable the PING? is there some documentation on how the PING influences the connection pool?"
      },
      {
        "user": "mrniko",
        "created_at": "2021-10-05T07:59:57Z",
        "body": "yes, you can disable PING. It's recommended only if your Redis setup is behind of proxy and it doesn't propagate connection interruptions."
      },
      {
        "user": "mircea-pop",
        "created_at": "2021-10-05T08:23:34Z",
        "body": "thank you! "
      }
    ]
  },
  {
    "number": 3754,
    "title": "Is there any guideline for upgrading the middle value of a version",
    "created_at": "2021-08-02T05:14:11Z",
    "closed_at": "2021-08-05T07:43:14Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/redisson/redisson/issues/3754",
    "body": "Will it be an incompatible version when I upgrade from 3.11.x to 3.15.x?\r\nIs there any reason or guideline for the version value?",
    "comments_url": "https://api.github.com/repos/redisson/redisson/issues/3754/comments",
    "author": "ieiayaobb",
    "comments": [
      {
        "user": "mrniko",
        "created_at": "2021-08-02T08:28:20Z",
        "body": "There is no such guideline. No API breaking changes were made since 3.11.0 version."
      },
      {
        "user": "ieiayaobb",
        "created_at": "2021-08-05T07:43:14Z",
        "body": "I see, thanks.\r\nClose this PR"
      }
    ]
  },
  {
    "number": 3654,
    "title": "Is order of Operations in a RBatch guaranteed?",
    "created_at": "2021-06-11T06:09:58Z",
    "closed_at": "2021-06-14T07:58:49Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/redisson/redisson/issues/3654",
    "body": "Sorry if this is obvious, but i did not find any documentstion about this:\r\n\r\nIf i am using **RBatch** and create let's say a Bucket from it, and call setAsync on the bucket 100 times before executing the batch, is the order of the operations in the batch guaranteed to be the order in which\r\n```\r\nsetAsync(Object)\r\n```\r\nhas been called?\r\n\r\nIn other words, is there any way i could end up with anything but the last value i set to the bucket after the RBatch is executed? For instance if the Marshalling of the 99th value took some time?\r\n\r\nBucket is just an example here, i am also using RMaps the same way.",
    "comments_url": "https://api.github.com/repos/redisson/redisson/issues/3654/comments",
    "author": "uweschaefer",
    "comments": [
      {
        "user": "uweschaefer",
        "created_at": "2021-06-27T18:51:10Z",
        "body": "Thanks for answering, @mrniko \r\n\r\nis there an example somewhere? i fail to understand how RLock helps me in this case.\r\nOr did you refer to RedissonFairLock ?\r\n\r\nthx\r\n\r\nPS: One important thing i realized i failed to mention:\r\n\r\nall setAsync(Object) calls **come from the same Thread**.\r\njust like `stringList.stream().forEach(myStringBucket::setAsync);`"
      },
      {
        "user": "mrniko",
        "created_at": "2021-06-29T07:46:43Z",
        "body": "In batch list of operations is always ordered. But RBatch object isn't thread-safe."
      },
      {
        "user": "uweschaefer",
        "created_at": "2021-06-29T09:15:21Z",
        "body": "Thanks, this is very good news."
      }
    ]
  },
  {
    "number": 3626,
    "title": "Will RLOS indexed based querying work in cluster enabled Redis?",
    "created_at": "2021-05-28T05:46:43Z",
    "closed_at": "2021-05-28T05:49:18Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/redisson/redisson/issues/3626",
    "body": "When we use cluster enabled Redis like AWS EC, it's possible that objects gets stored on different shards. Will the indexed based querying still work here?",
    "comments_url": "https://api.github.com/repos/redisson/redisson/issues/3626/comments",
    "author": "mayurgoenka",
    "comments": [
      {
        "user": "mrniko",
        "created_at": "2021-05-28T05:49:13Z",
        "body": "Sharded index supported only in PRO version."
      },
      {
        "user": "mayurgoenka",
        "created_at": "2021-05-28T05:51:10Z",
        "body": "I really appreciate the quick turnaround. You are doing a great job @mrniko. Thanks a lot!"
      },
      {
        "user": "mrniko",
        "created_at": "2021-05-28T06:02:53Z",
        "body": "@mayurgoenka \r\n\r\nThank you!"
      },
      {
        "user": "mayurgoenka",
        "created_at": "2021-06-02T13:15:33Z",
        "body": "Hi @mrniko , \r\nI see that the index is created in the following fashion:\r\n`\"redisson_live_object_index:{com.org.application.MyLiveObject}:index_field:<some_hash>\"`\r\n\r\nI see that we are using hash tag : `{com.org.application.MyLiveObject}` for storing all indices belonging to same class inside same keyslot.\r\n\r\nIn my use case, m trying to store billions of objects of the same class MyLiveObject and there are multiple indices as well. It's obvious that this won't fit in the same keyslot and will need sharding.\r\n\r\nYour comment, \"Sharded index supported only in PRO version.\", does this mean that the index itself will also get sharded across nodes and above use case will still work in PRO version? Same hashtag `{com.org.application.MyLiveObject}` won't be used in PRO version for indices?\r\n\r\nSorry for the repeated query, but just want to make sure before I finalise my design.\r\n\r\nHope my query is clear."
      },
      {
        "user": "mrniko",
        "created_at": "2021-06-02T13:30:41Z",
        "body": "Hi @mayurgoenka, \r\n\r\n> does this mean that the index itself will also get sharded across nodes and above use case will still work in PRO version\r\n\r\nIn this case name will be different to distribute evenly across all Redis master nodes.\r\n\r\n> Same hashtag {com.org.application.MyLiveObject} won't be used in PRO version for indices?\r\n\r\nThis name still will be present in key, but without braces.\r\n"
      },
      {
        "user": "mayurgoenka",
        "created_at": "2021-06-02T13:42:13Z",
        "body": "Thank you @mrniko , this means that I can safely use RLOS for huge data in redis clustered mode.\r\n\r\n\r\nAnother query is, are there any plans for supporting batch operations and transactions with RLOS objects? "
      },
      {
        "user": "mrniko",
        "created_at": "2021-06-02T14:03:16Z",
        "body": "What kind of batch / transaction operations over RLOS do you need? Could you describe some use cases?"
      },
      {
        "user": "mayurgoenka",
        "created_at": "2021-06-02T14:45:49Z",
        "body": "Suppose I want to merge 1000s of Live objects into redis cache, like a batch update OR batch insert. I see that we do have rlos.persist(list) but I not sure if its using pipelining inside or not? Also, rlos.merge(list) is what I was primarily looking for. \r\nThese operations are mainly required for warming up the cache in my use case.\r\n\r\n\r\nTransactions could be required when I want to update 2 different Live objects together or not do them at all. Live objects here can be of same class or different classes.\r\nI need this in my use case because there's a parent-child type of relationship in my application, where if I delete the parent object, child object also needs to get deleted."
      },
      {
        "user": "mrniko",
        "created_at": "2021-06-08T10:27:07Z",
        "body": "`org.redisson.api.RLiveObjectService#persist(T...)` method stores object in a batch. `merge()` method for multiple object isn't implemented yet.\r\n\r\nAs for transactions, I can recommend you to use RLock object."
      },
      {
        "user": "mayurgoenka",
        "created_at": "2021-06-09T05:58:26Z",
        "body": "yes, thank you for the response @mrniko , appreciate it."
      }
    ]
  },
  {
    "number": 3601,
    "title": "RTopic -ERR only (P)SUBSCRIBE / (P)UNSUBSCRIBE / QUIT allowed in this context",
    "created_at": "2021-05-10T03:09:25Z",
    "closed_at": "2021-05-10T06:15:37Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/redisson/redisson/issues/3601",
    "body": "Did I use Rtopic incorrectly?\r\nCode:\r\n```\r\n void pubEvent(){\r\n  RTopic topic = redissonClient.getTopic(\"test-topic\")\r\n  topic.publish(new Event(\"hello world\"))\r\n}\r\n\r\n void subEvent(){\r\n   RTopic topic = redissonClient.getTopic(\"test-topic\")\r\n   topic.addListener(new MessageListener<Event>(){\r\n            @Override\r\n            public void onMessage(CharSequence channel, Event event) {\r\n                log.debug(\"channel:{},Event :{}\", channel, event);\r\n            }\r\n  })\r\n}\r\n\r\n public static void main(String[] args){\r\n             Executors.newSingleThreadScheduledExecutor().scheduleWithFixedDelay(this::pubEvent, 1000, 10000, TimeUnit.MILLISECONDS);\r\n             subEvent();\r\n             Thread.sleep(1000000);\r\n }\r\n```\r\n\r\nConfig:\r\n```\r\nspring:\r\n  redis:\r\n    redisson:\r\n      config: |\r\n        singleServerConfig:\r\n          address: \"redis://localhost:6379\"\r\n          connectTimeout: 30000\r\n          pingConnectionInterval: 10000\r\n        codec: !<org.redisson.codec.JsonJacksonCodec> {}\r\n```\r\n\r\nError:\r\n```\r\n2021-05-10 10:56:48.237 ERROR 10184 --- [isson-timer-4-1] o.r.c.handler.PingConnectionHandler      : Unable to send PING command over channel: [id: 0x6657975f, L:/2.0.1.49:54140 - R:/172.19.13.25:6379]\r\norg.redisson.client.RedisException: ERR only (P)SUBSCRIBE / (P)UNSUBSCRIBE / QUIT allowed in this context. channel: [id: 0x6657975f, L:/2.0.1.49:54140 - R:/172.19.13.25:6379] command: (PING), params: []\r\n\tat org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:343) ~[redisson-3.14.1.jar:3.14.1]\r\n\tat org.redisson.client.handler.CommandPubSubDecoder.decodeCommand(CommandPubSubDecoder.java:83) ~[redisson-3.14.1.jar:3.14.1]\r\n\tat org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:117) ~[redisson-3.14.1.jar:3.14.1]\r\n\tat org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:102) ~[redisson-3.14.1.jar:3.14.1]\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:501) ~[netty-codec-4.1.51.Final.jar:4.1.51.Final]\r\n\tat io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:366) ~[netty-codec-4.1.51.Final.jar:4.1.51.Final]\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276) ~[netty-codec-4.1.51.Final.jar:4.1.51.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]\r\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]\r\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[netty-transport-4.1.51.Final.jar:4.1.51.Final]\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[netty-common-4.1.51.Final.jar:4.1.51.Final]\r\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.51.Final.jar:4.1.51.Final]\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) [netty-common-4.1.51.Final.jar:4.1.51.Final]\r\n\tat java.lang.Thread.run(Thread.java:748) [na:1.8.0_262]\r\n````",
    "comments_url": "https://api.github.com/repos/redisson/redisson/issues/3601/comments",
    "author": "facelezzzz",
    "comments": [
      {
        "user": "facelezzzz",
        "created_at": "2021-05-10T03:24:18Z",
        "body": "maybe redis version problem"
      },
      {
        "user": "mrniko",
        "created_at": "2021-05-10T06:07:23Z",
        "body": "yes, usage is correct. which Redis vendor do you use?"
      },
      {
        "user": "facelezzzz",
        "created_at": "2021-05-10T06:15:22Z",
        "body": "The redis of our qa environment is version 2.8, and there is no problem after upgrading to 4.0\r\nthx"
      }
    ]
  },
  {
    "number": 3580,
    "title": "Async lock thread affinity",
    "created_at": "2021-04-27T07:42:51Z",
    "closed_at": "2021-05-12T08:01:55Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/redisson/redisson/issues/3580",
    "body": "Hi,\r\n\r\nI'm working on a kotlin micronaut web app which is attempting to be fully async and we're using redisson for distributed locks.\r\n\r\nI'm somewhat unclear on how to exactly use it correctly.\r\n\r\nThe official documentation says `RLock object behaves according to the Java Lock specification. It means only lock owner thread can unlock it otherwise IllegalMonitorStateException would be thrown. Otherwise consider to use RSemaphore object.` which sounds weird as in an async context, executing on a specific threads is never guaranteed.\r\n\r\nThe code I'm using for now, in a kotlin suspendable func, is like this:\r\n``` kotlin\r\nval lock = rediClinet.getLock(\"lock_name)\r\ntry {\r\n    (lock.lockAsync(50, TimeUnit.SECONDS) as CompletionStage<Void>).await()\r\n    //fancy kotlin async code here.\r\n}\r\nfinally {\r\n    (lock.unlockAsync() as CompletionStage<Void>).await()\r\n}\r\n```\r\n\r\nThe unlock line is not guaranteed to execute on the same thread as the lockAsync line.\r\n\r\nThanks!",
    "comments_url": "https://api.github.com/repos/redisson/redisson/issues/3580/comments",
    "author": "ghost",
    "comments": [
      {
        "user": "mrniko",
        "created_at": "2021-05-11T05:12:28Z",
        "body": "Hi,\r\n\r\nuse `unlockAsync(threadId)` method instead."
      },
      {
        "user": "ghost",
        "created_at": "2021-05-12T07:41:42Z",
        "body": "But what do use as `threadId` ?\r\nAny numbers as long as I use the same number across acquire/release methods?"
      },
      {
        "user": "mrniko",
        "created_at": "2021-05-12T07:58:15Z",
        "body": "you need to pass the same id to `lockAsync()` and `unlockAsync()` methods. It might be any id."
      },
      {
        "user": "ghost",
        "created_at": "2021-05-12T08:01:55Z",
        "body": "ok, thanks.\r\n\r\nmust say this is a very unexpected design for an distributed lock."
      }
    ]
  },
  {
    "number": 3546,
    "title": "Object not added in RSet",
    "created_at": "2021-04-12T08:04:23Z",
    "closed_at": "2021-04-13T05:43:13Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/redisson/redisson/issues/3546",
    "body": "In the below code, we are facing intermittent issues where` System.out.println(\"Your Ids: \"+ids1)` is not printed when we add something and RedissionSet reference doesn't contain anything even after adding objects to it.\r\n```\r\nfinal Set<String> homeIds = platformCache.getSet(Home.fetchProductCacheKey(productId));\r\n\r\nList<String> getIds = callToDb.getProductId(productId);\r\n\r\nfor(String ids : getIds) {\r\nhomeIds.add(ids);\r\n}\r\n\r\nfor(String ids1: homeIds) { // This for loop is not run since homeids were empty sometimes.\r\nSystem.out.println(\"Your Ids: \"+ids1);\r\n}\r\n\r\n```\r\n\r\nAre we doing anything wrong? Any help will be appreciated.",
    "comments_url": "https://api.github.com/repos/redisson/redisson/issues/3546/comments",
    "author": "vipul1231",
    "comments": [
      {
        "user": "mrniko",
        "created_at": "2021-04-12T08:53:19Z",
        "body": "Try ReadMode.MASTER setting"
      },
      {
        "user": "vipul1231",
        "created_at": "2021-04-12T10:10:54Z",
        "body": "I believe this setting will move reading data to master node ?. This will increase traffic to my master node. Please correct me if I am wrong."
      },
      {
        "user": "mrniko",
        "created_at": "2021-04-12T12:43:20Z",
        "body": "This issue happens due to replication lag between slave/master nodes."
      },
      {
        "user": "vipul1231",
        "created_at": "2021-04-13T05:43:13Z",
        "body": "Ok thanks. Closing this issue."
      }
    ]
  },
  {
    "number": 3544,
    "title": "Why ExpirationEntry use LinkedHashMap to save threadId",
    "created_at": "2021-04-09T09:28:20Z",
    "closed_at": "2021-04-13T02:50:39Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/redisson/redisson/issues/3544",
    "body": "Reddison watchDog strategy use timerTask to increase key expiration time while set the lock success\r\n\r\n    private void renewExpiration() {\r\n        ExpirationEntry ee = EXPIRATION_RENEWAL_MAP.get(getEntryName());\r\n        if (ee == null) {\r\n            return;\r\n        }\r\n        \r\n        Timeout task = commandExecutor.getConnectionManager().newTimeout(new TimerTask() {\r\n            @Override\r\n            public void run(Timeout timeout) throws Exception {\r\n                ExpirationEntry ent = EXPIRATION_RENEWAL_MAP.get(getEntryName());\r\n                if (ent == null) {\r\n                    return;\r\n                }\r\n                Long threadId = ent.getFirstThreadId();\r\n                if (threadId == null) {\r\n                    return;\r\n                }\r\n                \r\n                RFuture<Boolean> future = renewExpirationAsync(threadId);\r\n                ......\r\n       }\r\n   }\r\n\r\n  First use **entryName** to get ExpirationEntry object. For the same entryName, other threads can't get the key because locked(ps: same thread can get and counter++)\uff0cso why use LinkedHashMap to save thread if there only have one thread?\r\n\r\n`public static class ExpirationEntry {\r\n\r\n        private final Map<Long, Integer> threadIds = new LinkedHashMap<>();\r\n        private volatile Timeout timeout;\r\n\r\n        public ExpirationEntry() {\r\n            super();\r\n        }\r\n\r\n        public synchronized void addThreadId(long threadId) {\r\n            Integer counter = threadIds.get(threadId);\r\n            if (counter == null) {\r\n                counter = 1;\r\n            } else {\r\n                counter++;\r\n            }\r\n            threadIds.put(threadId, counter);\r\n        }\r\n}`",
    "comments_url": "https://api.github.com/repos/redisson/redisson/issues/3544/comments",
    "author": "yukerui",
    "comments": [
      {
        "user": "mrniko",
        "created_at": "2021-04-12T13:14:20Z",
        "body": "in case of readwrite lock there are might be multiple read locks."
      },
      {
        "user": "yukerui",
        "created_at": "2021-04-13T02:50:36Z",
        "body": "> in case of readwrite lock there are might be multiple read locks.\r\n\r\nUnderstood, thank you for your reply"
      }
    ]
  },
  {
    "number": 3493,
    "title": "Transaction in Redis Live Object Service",
    "created_at": "2021-03-16T21:14:11Z",
    "closed_at": "2021-03-18T06:56:07Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/redisson/redisson/issues/3493",
    "body": "Hi,\r\n\r\nIs it possible to perform transaction on Redis Live Object?\r\nI want write a new instance of MyClass - only if new instance is newer than previous one. \r\nI need method similar to 'merge' in RMap. \r\n\r\n    @REntity\r\n    public class MyClass {\r\n\r\n        @RId\r\n        private String key;\r\n\r\n        @RIndex\r\n        public Date createDate;\r\n\r\n        @RIndex\r\n        public String externalValue;\r\n     }\r\n\r\nSo I need to compare dates of old and new objects and then save new object only if it newer. It has be executed in one transaction. In other thread someone can update fields in this object.",
    "comments_url": "https://api.github.com/repos/redisson/redisson/issues/3493/comments",
    "author": "bbartekb",
    "comments": [
      {
        "user": "mrniko",
        "created_at": "2021-03-17T08:46:35Z",
        "body": "Wrap this function with RLock object with name based on object id."
      },
      {
        "user": "bbartekb",
        "created_at": "2021-03-17T21:33:02Z",
        "body": "Thank you for your response!\r\n\r\nIt works for me with tryLock()\r\n\r\n    public void updateLiveObjectEntry(MyClass myObject) {\r\n        RLiveObjectService rLiveObjectService = getRedissonConnection().getClient().getLiveObjectService();\r\n        RLock lock = getRedissonConnection().getClient().getLock(myObject.getKey());\r\n\r\n        try {\r\n            lock.tryLock(10, TimeUnit.SECONDS);\r\n            if (myObject.getCreateDate().after(rLiveObjectService.get(MyClass.class, myObject.getKey()).getCreateDate())) {\r\n                rLiveObjectService.merge(myObject);\r\n            }\r\n        } catch (InterruptedException e) {\r\n        } finally {\r\n            lock.unlock();\r\n        }\r\n    }\r\n    \r\nIs my solution correct? \r\nI think this lock is not connected with my LiveObject, so myObject entry is not locked. It will be work if in all usage I use method updateLiveObjectEntry().\r\n    "
      },
      {
        "user": "mrniko",
        "created_at": "2021-03-18T05:31:12Z",
        "body": "you can use follow lock name: `String lockName = MyClass.class.getName() + \":\" + myObject.getKey()`. If you have any doubts about the key uniqueness with different Object classes."
      },
      {
        "user": "bbartekb",
        "created_at": "2021-03-18T06:56:07Z",
        "body": "Ok, thank you."
      }
    ]
  },
  {
    "number": 3476,
    "title": "Caused by: java.lang.ClassNotFoundException: com.fasterxml.jackson.core.TSFBuilder",
    "created_at": "2021-03-14T23:59:36Z",
    "closed_at": "2021-03-16T16:49:49Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/redisson/redisson/issues/3476",
    "body": "keep getting this error when i try this\r\nConfig.fromYAML(PropertiesUtil.getResourceAsFile(REDISSON_RESOURCE_NAME));\r\n\r\nthe exception is \r\nCaused by: java.lang.NoClassDefFoundError: com/fasterxml/jackson/core/TSFBuilder\r\n\tat org.redisson.config.ConfigSupport.<init>(ConfigSupport.java:92)\r\n\tat org.redisson.config.Config.fromYAML(Config.java:661)\r\n\tat org.redisson.config.Config.fromYAML(Config.java:657)\r\n\r\nwhen I try to look at the code can't find usage for TSFBuilder at class ConfigSupport",
    "comments_url": "https://api.github.com/repos/redisson/redisson/issues/3476/comments",
    "author": "wdaas",
    "comments": [
      {
        "user": "mrniko",
        "created_at": "2021-03-15T04:57:00Z",
        "body": "Check for absence of two jackson libs in classpath with different versions"
      },
      {
        "user": "wdaas",
        "created_at": "2021-03-16T16:49:38Z",
        "body": "thanks @mrniko \r\n\r\nthe problem was that redis 3.14.0 have dependency to jackson-dataformat-yaml.jar and it import version 2.11.1\r\nbut in our project we work with Jackson-core 2.7.6 .\r\n\r\nby add explicitly at mvn file dependency for version 2.7.6 for jackson-dataformat-yaml.jar we fix the issue."
      }
    ]
  },
  {
    "number": 3464,
    "title": "redis\u91cd\u542f\u4e4b\u540e\u67d0\u4e9b\u670d\u52a1\u5668\u8fde\u63a5redis\u4e00\u76f4\u6ca1\u6062\u590d\u62a5MasterConnectionPool no available Redis entries\u9519\u8bef",
    "created_at": "2021-03-10T18:30:43Z",
    "closed_at": "2021-03-25T08:20:37Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/redisson/redisson/issues/3464",
    "body": "Caused by: org.redisson.client.RedisConnectionException: MasterConnectionPool no available Redis entries.  Disconnected hosts: [/1**.**.**.**]\r\n\tat org.redisson.connection.pool.ConnectionPool.get(ConnectionPool.java:198)\r\n\tat org.redisson.connection.pool.MasterConnectionPool.get(MasterConnectionPool.java:31)\r\n\tat org.redisson.connection.MasterSlaveEntry.connectionWriteOp(MasterSlaveEntry.java:535)\r\n\tat org.redisson.connection.SingleEntry.connectionReadOp(SingleEntry.java:45)\r\n\tat org.redisson.connection.MasterSlaveConnectionManager.connectionReadOp(MasterSlaveConnectionManager.java:807)\r\n\tat org.redisson.command.CommandAsyncService.async(CommandAsyncService.java:496)\r\n\tat org.redisson.command.CommandAsyncService.readAsync(CommandAsyncService.java:351)\r\n\tat org.redisson.RedissonBucket.getAsync(RedissonBucket.java:102)\r\n\tat org.redisson.RedissonBucket.get(RedissonBucket.java:97)\r\n\t... 146 more\r\n\r\n\r\nredisson\u914d\u7f6e\r\n.setFailedAttempts(1).setConnectTimeout(300).setRetryAttempts(0).setTimeout(100);",
    "comments_url": "https://api.github.com/repos/redisson/redisson/issues/3464/comments",
    "author": "cclouds",
    "comments": [
      {
        "user": "cclouds",
        "created_at": "2021-03-10T18:58:08Z",
        "body": "version\r\n3.6.0"
      },
      {
        "user": "mrniko",
        "created_at": "2021-03-11T06:03:45Z",
        "body": "Update to 3.6.5 version."
      },
      {
        "user": "cclouds",
        "created_at": "2021-03-11T06:13:17Z",
        "body": "> Update to 3.6.5 version.\r\n\r\nThank you"
      }
    ]
  },
  {
    "number": 3398,
    "title": "org.redisson.api.RAtomicLong#expireAt(long)  Cause the value to be deleted  ",
    "created_at": "2021-02-03T07:55:21Z",
    "closed_at": "2021-02-03T07:59:08Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/redisson/redisson/issues/3398",
    "body": "Redisson:3.15.0\r\nredis:4.0.9\r\n\r\norg.redisson.api.RAtomicLong#expireAt(long)\r\nCannot find the key of aKey after execution\r\n\r\nWhy is this ?\r\n\r\njava code\r\n```\r\n        Config config = new Config();\r\n        config.useSingleServer()\r\n                .setAddress(\"redis://127.0.0.1:6379\")\r\n                .setDatabase(0);\r\n        RedissonClient redissonClient = Redisson.create(config);\r\n\r\n        String aKey = \"aKey\";\r\n        RAtomicLong aAtomic = redissonClient.getAtomicLong(aKey);\r\n        long aValue0 = aAtomic.get();\r\n        LOG.info(\"aKey-value0[{}]\", aValue0);\r\n\r\n        aAtomic.incrementAndGet();\r\n        long aValue1 = aAtomic.get();\r\n        LOG.info(\"aKey-value1[{}]\", aValue1);\r\n        aAtomic.expireAt(1000 * 60 * 60);\r\n\r\n        long aValue2 = aAtomic.get();\r\n        LOG.info(\"aKey-value2[{}]\", aValue2);\r\n\r\n        LOG.info(\"---------------------------------------------------------\");\r\n\r\n        String bKey = \"bKey\";\r\n        RAtomicLong bAtomic = redissonClient.getAtomicLong(bKey);\r\n        long bValue0 = bAtomic.get();\r\n        LOG.info(\"bKey-value0[{}]\", bValue0);\r\n\r\n        bAtomic.incrementAndGet();\r\n        bAtomic.expire(10, TimeUnit.HOURS);\r\n\r\n        long bValue1 = bAtomic.get();\r\n        LOG.info(\"bKey-value1[{}]\", bValue1);\r\n\r\n        LOG.info(\"---------------------------------------------------------\");\r\n\r\n        String cKey = \"cKey\";\r\n        RAtomicLong cAtomic = redissonClient.getAtomicLong(cKey);\r\n        long cValue0 = cAtomic.get();\r\n        LOG.info(\"cKey-value0[{}]\", cValue0);\r\n\r\n        cAtomic.incrementAndGet();\r\n\r\n        long cValue1 = cAtomic.get();\r\n        LOG.info(\"cKey-value1[{}]\", cValue1);\r\n\r\n        redissonClient.shutdown();\r\n```\r\nlog...\r\n```\r\n15:45:35.913 [main] INFO org.redisson.Version - Redisson 3.15.0\r\n15:45:36.804 [redisson-netty-2-17] INFO org.redisson.connection.pool.MasterPubSubConnectionPool - 1 connections initialized for /127.0.0.1:6379\r\n15:45:36.817 [redisson-netty-2-17] INFO org.redisson.connection.pool.MasterConnectionPool - 24 connections initialized for /127.0.0.1:6379\r\n15:45:36.877 [main] INFO RedissonClient - aKey-value0[0]\r\n15:45:36.880 [main] INFO RedissonClient - aKey-value1[1]\r\n15:45:36.881 [main] INFO RedissonClient - aKey-value2[0]\r\n15:45:36.881 [main] INFO RedissonClient - ---------------------------------------------------------\r\n15:45:36.882 [main] INFO RedissonClient - bKey-value0[0]\r\n15:45:36.886 [main] INFO RedissonClient - bKey-value1[1]\r\n15:45:36.887 [main] INFO RedissonClient - ---------------------------------------------------------\r\n15:45:36.887 [main] INFO RedissonClient - cKey-value0[0]\r\n15:45:36.889 [main] INFO RedissonClient - cKey-value1[1]\r\n```\r\n",
    "comments_url": "https://api.github.com/repos/redisson/redisson/issues/3398/comments",
    "author": "NoSugarIce",
    "comments": [
      {
        "user": "mrniko",
        "created_at": "2021-02-03T07:59:08Z",
        "body": "Because `expireAt()` method accepts date in milliseconds."
      },
      {
        "user": "NoSugarIce",
        "created_at": "2021-02-03T08:10:28Z",
        "body": "> Because `expireAt()` method accepts date in milliseconds.\r\n\r\n@mrniko Thanks, I realized the problem when I saw the code comments a few minutes after issuing the question ."
      }
    ]
  },
  {
    "number": 3390,
    "title": "RBatch response order with cluster env ?",
    "created_at": "2021-01-28T16:31:38Z",
    "closed_at": "2021-02-05T06:19:16Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/redisson/redisson/issues/3390",
    "body": "> In cluster environment batch executed in map\\reduce way. It aggregates commands for each node and sends them simultaneously, then result got from each node added to common result list.\r\n\r\n```\r\n\r\n    /**\r\n     * Executes all operations accumulated during async methods invocations.\r\n     * <p>\r\n     * If cluster configuration used then operations are grouped by slot ids\r\n     * and may be executed on different servers. Thus command execution order could be changed\r\n     *\r\n     * @return List with result object for each command\r\n     * @throws RedisException in case of any error\r\n     *\r\n     */\r\n    BatchResult<?> execute() throws RedisException;\r\n```\r\n\r\nRead above tips, I was not sure about responses order for origin commands.\r\nCould you help me make sure about this?\r\n\r\n1.When commands send group by slots, but I want know responses order is right with original commands?\r\n\r\n\r\nthx~ ",
    "comments_url": "https://api.github.com/repos/redisson/redisson/issues/3390/comments",
    "author": "waylink",
    "comments": [
      {
        "user": "mrniko",
        "created_at": "2021-01-29T07:03:15Z",
        "body": "You'll always get correct response, but in cluster environment result in BatchResult can have different order."
      },
      {
        "user": "waylink",
        "created_at": "2021-01-29T07:12:57Z",
        "body": "> You'll always get correct response, but in cluster environment result in BatchResult can have different order.\r\n\r\n~~in cluster env result in batchResult have different order.~~\r\n\r\nHow to understand ?  in cluster env"
      },
      {
        "user": "mrniko",
        "created_at": "2021-01-31T09:37:01Z",
        "body": "result has different order since single request spliced into different requests and executed concurrently on different Redis nodes. If keys of such commands don't belong to the same master node."
      },
      {
        "user": "waylink",
        "created_at": "2021-01-31T10:13:27Z",
        "body": "> result has different order since single request spliced into different requests and executed concurrently on different Redis nodes. If keys of such commands don't belong to the same master node.\r\n\r\nall right.\r\n\r\nInvoker always get correct response in cluster env.\r\n\r\nOnly warning : BatchResult[] has different order for execute in cluster env."
      },
      {
        "user": "mrniko",
        "created_at": "2021-02-05T06:19:14Z",
        "body": "It's better to attach handler to each command executed in RBatch rather than use result list:\r\n\r\n```java\r\n\t\tRBatch batch = client.createBatch(batchOptions);\r\n\t\tfor (int i = 0; i < 10; i++) {\r\n\t\t\tString key = \"\" + i;\r\n                        RFuture<Object> t = batch.getBucket(key).getAsync();\r\n                        t.whenComplete((res, ex) -> {\r\n                \r\n                       });\r\n\t\t}\r\n\t\tbatch.execute();\r\n```"
      }
    ]
  },
  {
    "number": 3374,
    "title": "time_to_live and max_idle_time doesn't work in redisson as 2 level cache in hibernate",
    "created_at": "2021-01-22T10:31:32Z",
    "closed_at": "2021-01-23T05:12:18Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/redisson/redisson/issues/3374",
    "body": "Hello everybody,\r\nI try to use Redisson  as second level cache in my jpa spring boot application it works fine i see that it cache entities in redis it just i need to set a time to live and time to idle on cache entries i use this configuration below but it doesn't work:\r\n\r\n`spring.jpa.properties.hibernate.cache.use_second_level_cache=true\r\nspring.cache.type=redis\r\n\r\nhibernate.cache.redisson.entity.expiration.time_to_live=1000\r\nhibernate.cache.redisson.entity.expiration.max_idle_time=1000\r\nhibernate.cache.redisson.collection.expiration.time_to_live=1000\r\nhibernate.cache.redisson.collection.expiration.max_idle_time=1000\r\n\r\nspring.jpa.properties.hibernate.cache.region.factory_class=org.redisson.hibernate.RedissonRegionFactory\r\nspring.jpa.properties.hibernate.cache.redisson.config=redisson/redisson-dev.yaml\r\nspring.jpa.properties.hibernate.cache.redisson.fallback=true\r\nspring.jpa.properties.javax.persistence.sharedCache.mode=ENABLE_SELECTIVE\r\n\r\nserver.port=8888\r\nspring.datasource.url=jdbc:h2:mem:testdb\r\nspring.datasource.driverClassName=org.h2.Driver\r\nspring.datasource.username=sa\r\nspring.datasource.password=\r\n\r\nspring.jpa.database-plateform=org.hibernate.dialect.H2Dialect\r\nspring.jpa.hibernate.ddl-auto=update\r\nspring.h2.console.enabled=true\r\nlogging.level.org.hibernate.SQL=DEBUG\r\nlogging.level.org.hibernate.type=TRACE\r\n`\r\n\r\ni use  redisson-hibernate-53  as dependancy\r\n\r\nAny help on this will help ,thank you.\r\n  \r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/redisson/redisson/issues/3374/comments",
    "author": "yeagerrrr",
    "comments": [
      {
        "user": "mrniko",
        "created_at": "2021-01-22T12:07:55Z",
        "body": "I think spring config file doesn't pickup custom hibernate settings used by Redisson. Try to define them in hibernate config xml file"
      },
      {
        "user": "yeagerrrr",
        "created_at": "2021-01-22T12:32:22Z",
        "body": "it works !!!!!\r\ni just use : \r\n\r\nspring.jpa.properties.hibernate.cache.redisson.entity.expiration.time_to_live=1000\r\nspring.jpa.properties.hibernate.cache.redisson.entity.expiration.max_idle_time=1000\r\nspring.jpa.properties.hibernate.cache.redisson.collection.expiration.time_to_live=1000\r\nspring.jpa.properties.hibernate.cache.redisson.collection.expiration.max_idle_time=1000\r\n\r\nintead of : \r\n\r\nhibernate.cache.redisson.entity.expiration.time_to_live=1000\r\nhibernate.cache.redisson.entity.expiration.max_idle_time=1000\r\nhibernate.cache.redisson.collection.expiration.time_to_live=1000\r\nhibernate.cache.redisson.collection.expiration.max_idle_time=1000\r\n\r\n@mrniko thank you very much for your answer \ud83d\udc4d "
      },
      {
        "user": "mrniko",
        "created_at": "2021-01-23T05:12:18Z",
        "body": "I'm closing this"
      }
    ]
  },
  {
    "number": 3304,
    "title": "Why does the first IP of the cluster automatically change to the intranet IP?",
    "created_at": "2020-12-22T02:34:40Z",
    "closed_at": "2020-12-28T07:13:49Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/redisson/redisson/issues/3304",
    "body": "This is my configration file\r\n```yml\r\nspring:\r\n  redis:\r\n    timeout: 10000\r\n    cluster:\r\n      nodes:\r\n        - 120.79.8.153:7000\r\n        - 120.79.8.153:7001\r\n        - 120.79.8.153:7002\r\n        - 120.79.8.153:7003\r\n        - 120.79.8.153:7004\r\n        - 120.79.8.153:7005\r\n```\r\nThis is my log. note that the ip of port 7000 has changed,\r\n```log\r\na0eb8a93e3ce9a3ac2d15c73a9d8c3bf7064904d 120.79.8.153:7002@17002 master - 0 1608603104000 3 connected 10923-16383\r\ndfc494ff70a7b10af271a8e132899c47e771fecc 120.79.8.153:7004@17004 slave 20e35d1e53f766ae93a7158f5e8ff4ac379ef8a0 0 1608603105000 1 connected\r\n422579dc30a3aa20cc2cc2e119f893691dcfdca7 120.79.8.153:7005@17005 slave 645a4f040a4bb12b91aa52c23373c4b5acc7c84b 0 1608603105945 2 connected\r\n20e35d1e53f766ae93a7158f5e8ff4ac379ef8a0 172.18.40.70:7000@17000 myself,master - 0 1608603106000 1 connected 0-5460\r\nc295c0f4b6bac3cc3b883e73dd53826cb9a48204 120.79.8.153:7003@17003 slave a0eb8a93e3ce9a3ac2d15c73a9d8c3bf7064904d 0 1608603104944 3 connected\r\n645a4f040a4bb12b91aa52c23373c4b5acc7c84b 120.79.8.153:7001@17001 master - 0 1608603106947 2 connected 5461-10922\r\n```\r\nWhen I test the code on my computer, I always get an error: Can't connect to master: redis://172.18.40.70:7000 with slot ranges: [[0-5460]]",
    "comments_url": "https://api.github.com/repos/redisson/redisson/issues/3304/comments",
    "author": "HeyChiang",
    "comments": [
      {
        "user": "HeyChiang",
        "created_at": "2020-12-22T07:07:50Z",
        "body": "Hello\uff0cIs anybody here?"
      },
      {
        "user": "mrniko",
        "created_at": "2020-12-22T08:12:45Z",
        "body": "because you have this ip in cluster configuration 172.18.40.70. Check your Redis cluster config"
      },
      {
        "user": "HeyChiang",
        "created_at": "2020-12-22T08:55:17Z",
        "body": "you're right. \r\n\r\nWhen I used `redis-cli --cluster create`, it automatically changed the server's external network ip to internal network ip.\r\n\r\nIt's strange."
      },
      {
        "user": "Ljia-ncu",
        "created_at": "2020-12-27T15:10:08Z",
        "body": "just replace the intranet ip within nodes.conf of all nodes with the public ip.\r\ne.g.\r\nsed -i 's/172.18.40.70/120.79.8.153/g' /node-${port}/data/nodes.conf"
      }
    ]
  },
  {
    "number": 3242,
    "title": "isHeldByCurrentThread() goes wrong",
    "created_at": "2020-11-24T08:34:22Z",
    "closed_at": "2020-12-02T11:10:03Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/redisson/redisson/issues/3242",
    "body": "org.redisson.client.RedisException: Unexpected exception while processing command\r\n\tat org.redisson.command.CommandAsyncService.convertException(CommandAsyncService.java:338)\r\n\tat org.redisson.command.CommandAsyncService.get(CommandAsyncService.java:140)\r\n\tat org.redisson.RedissonObject.get(RedissonObject.java:90)\r\n\tat org.redisson.RedissonLock.isHeldByThread(RedissonLock.java:523)\r\n\tat org.redisson.RedissonLock.isHeldByCurrentThread(RedissonLock.java:517)\r\n\tat com.hikvision.ga.vnsc.mls.modules.distribute.redis.RedissonDistributedLocker.unlock(RedissonDistributedLocker.java:49)\r\n\tat com.hikvision.ga.vnsc.mls.modules.distribute.redis.RedissLockUtil.unlock(RedissLockUtil.java:30)\r\n\tat com.hikvision.ga.vnsc.mls.modules.privilege.handler.CountHandler.updateCurrentLink(CountHandler.java:776)\r\n\tat com.hikvision.ga.vnsc.mls.modules.privilege.handler.CountHandler.updateSingleCurrentLink(CountHandler.java:530)\r\n\tat com.hikvision.ga.vnsc.mls.modules.privilege.handler.CountHandler.updateCountByRegister(CountHandler.java:481)\r\n\tat com.hikvision.ga.vnsc.mls.modules.notifier.DefaultNotifier.updateLinkEurl(DefaultNotifier.java:251)\r\n\tat com.hikvision.ga.vnsc.mls.modules.notifier.DefaultNotifier.notify(DefaultNotifier.java:137)\r\n\tat com.hikvision.ga.vnsc.mls.modules.notifier.DefaultNotifier$$FastClassBySpringCGLIB$$b3dd79bb.invoke(<generated>)\r\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\r\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)\r\n\tat com.hikvision.ga.vnsc.mls.modules.notifier.DefaultNotifier$$EnhancerBySpringCGLIB$$a14831d5.notify(<generated>)\r\n\tat com.hikvision.ga.vnsc.mls.modules.module.media.handler.AbstractMessageHandler.notify(AbstractMessageHandler.java:174)\r\n\tat com.hikvision.ga.vnsc.mls.modules.module.media.handler.RegisterReqHandler.getResponse(RegisterReqHandler.java:140)\r\n\tat com.hikvision.ga.vnsc.mls.modules.module.media.handler.RegisterReqHandler.lambda$doHandle$0(RegisterReqHandler.java:75)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\r\n\tat java.base/java.lang.Thread.run(Thread.java:834)\r\nCaused by: java.lang.NullPointerException: null\r\n\tat org.redisson.client.handler.CommandEncoder.encode(CommandEncoder.java:131)\r\n\tat org.redisson.client.handler.CommandEncoder.encode(CommandEncoder.java:100)\r\n\tat org.redisson.client.handler.CommandEncoder.encode(CommandEncoder.java:56)\r\n\tat io.netty.handler.codec.MessageToByteEncoder.write(MessageToByteEncoder.java:107)\r\n\tat org.redisson.client.handler.CommandEncoder.write(CommandEncoder.java:76)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeWrite0(AbstractChannelHandlerContext.java:716)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeWrite(AbstractChannelHandlerContext.java:708)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.write(AbstractChannelHandlerContext.java:791)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.write(AbstractChannelHandlerContext.java:701)\r\n\tat io.netty.handler.codec.MessageToByteEncoder.write(MessageToByteEncoder.java:120)\r\n\tat org.redisson.client.handler.CommandBatchEncoder.write(CommandBatchEncoder.java:45)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeWrite0(AbstractChannelHandlerContext.java:716)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeWrite(AbstractChannelHandlerContext.java:708)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.write(AbstractChannelHandlerContext.java:791)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.write(AbstractChannelHandlerContext.java:701)\r\n\tat io.netty.channel.ChannelDuplexHandler.write(ChannelDuplexHandler.java:115)\r\n\tat org.redisson.client.handler.CommandsQueue.write(CommandsQueue.java:97)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeWrite0(AbstractChannelHandlerContext.java:716)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeWriteAndFlush(AbstractChannelHandlerContext.java:763)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.write(AbstractChannelHandlerContext.java:789)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.writeAndFlush(AbstractChannelHandlerContext.java:757)\r\n\tat io.netty.channel.DefaultChannelPipeline.writeAndFlush(DefaultChannelPipeline.java:1031)\r\n\tat io.netty.channel.AbstractChannel.writeAndFlush(AbstractChannel.java:298)\r\n\tat org.redisson.client.handler.CommandsQueue.sendData(CommandsQueue.java:123)\r\n\tat org.redisson.client.handler.CommandsQueue.write(CommandsQueue.java:100)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeWrite0(AbstractChannelHandlerContext.java:716)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeWrite(AbstractChannelHandlerContext.java:708)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.access$1700(AbstractChannelHandlerContext.java:56)\r\n\tat io.netty.channel.AbstractChannelHandlerContext$AbstractWriteTask.write(AbstractChannelHandlerContext.java:1102)\r\n\tat io.netty.channel.AbstractChannelHandlerContext$WriteAndFlushTask.write(AbstractChannelHandlerContext.java:1149)\r\n\tat io.netty.channel.AbstractChannelHandlerContext$AbstractWriteTask.run(AbstractChannelHandlerContext.java:1073)\r\n\tat io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:416)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:515)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:918)\r\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)",
    "comments_url": "https://api.github.com/repos/redisson/redisson/issues/3242/comments",
    "author": "VicQwz",
    "comments": [
      {
        "user": "mrniko",
        "created_at": "2020-11-24T10:55:33Z",
        "body": "check lock name for null value"
      },
      {
        "user": "VicQwz",
        "created_at": "2020-12-02T11:09:58Z",
        "body": "Thanks a lot"
      }
    ]
  },
  {
    "number": 3229,
    "title": "redisson-spring-boot-starter\uff0c version 3.13.6  ",
    "created_at": "2020-11-21T08:11:30Z",
    "closed_at": "2020-11-22T14:02:09Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/redisson/redisson/issues/3229",
    "body": "\r\n<groupId>org.redisson</groupId>\r\n<artifactId>redisson-spring-boot-starter</artifactId>\r\n<version>3.13.6</version>\r\n\r\nWhen I use the following command, an exception is thrown\uff0cI tried a lot of high version, the error message is the same.\r\nI use the  version: 3.5.5, It is work. so why the high version doesn't work ?\r\n\r\ngeo.radiusWithDistance(lon, lat, 3, GeoUnit.KILOMETERS, GeoOrder.ASC, 10);\r\n\r\nException in thread \"main\" org.redisson.client.RedisException: ERR unknown command 'GEORADIUS_RO'. channel: [id: 0x85a94190, L:/127.0.0.1:52892 - R:/127.0.0.1:6379] command: (GEORADIUS_RO)\r\n",
    "comments_url": "https://api.github.com/repos/redisson/redisson/issues/3229/comments",
    "author": "seart",
    "comments": [
      {
        "user": "mrniko",
        "created_at": "2020-11-22T14:01:50Z",
        "body": "GEORADIUS_RO is used to read data from Redis slave. You need to update to Redis to 3.2.10 version or higher to get it work."
      },
      {
        "user": "seart",
        "created_at": "2020-11-24T06:01:13Z",
        "body": "> GEORADIUS_RO is used to read data from Redis slave. You need to update to Redis to 3.2.10 version or higher to get it work.\r\n\r\nthanks\uff0cI thought 13 was bigger than 2 \uff0c but it was smaller than 2"
      }
    ]
  },
  {
    "number": 3108,
    "title": "RMap's values(pattern) doesn't seem to work on a simple test",
    "created_at": "2020-10-07T13:18:25Z",
    "closed_at": "2020-11-11T08:12:17Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/redisson/redisson/issues/3108",
    "body": "The following simple test doesn't seem to work:\r\n```@Test\r\n    public void test() {\r\n\r\n        String mapName = UUID.randomUUID().toString();\r\n        RMap<String, String> map = redissonClient.getMap(mapName, JsonJacksonCodec.INSTANCE);\r\n\r\n        try {\r\n            map.put(\"prefix_1_1_\", \"1\");\r\n            map.put(\"prefix_1_2_\", \"2\");\r\n            map.put(\"prefix_2_3_\", \"3\");\r\n            map.put(\"prefix_2_4_\", \"4\");\r\n\r\n            Collection<String> entries = map.values(\"prefix*\");\r\n\r\n            assertThat(entries).hasSize(4);\r\n        } finally {\r\n            redissonClient.getMap(mapName).delete();\r\n        }\r\n    }\r\n```\r\nVersion of redisson is 3.13.4\r\nI'm pretty sure I'm missing something here so didn't post it as a bug",
    "comments_url": "https://api.github.com/repos/redisson/redisson/issues/3108/comments",
    "author": "peterlitvak",
    "comments": [
      {
        "user": "mrniko",
        "created_at": "2020-10-07T14:33:27Z",
        "body": "You need to use StringCodec for map keys."
      },
      {
        "user": "peterlitvak",
        "created_at": "2020-10-07T14:42:31Z",
        "body": "Does it mean I need to create my own codec with JsonJacksoCodec for the values (since I need values to be JSON encoded objects) and StringCodec for the keys?"
      },
      {
        "user": "mrniko",
        "created_at": "2020-10-07T14:43:39Z",
        "body": "You can use CompositeCodec to use StringCodec for keys and JsonJacksonCodec for values"
      },
      {
        "user": "peterlitvak",
        "created_at": "2020-10-07T14:44:19Z",
        "body": "Thank you!"
      }
    ]
  },
  {
    "number": 2897,
    "title": "Strange characters on value when read data in other language",
    "created_at": "2020-07-06T18:45:50Z",
    "closed_at": "2020-07-07T11:43:46Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/redisson/redisson/issues/2897",
    "body": "Hey there!\r\n\r\nI was wondering if it's possible to perform a simple operation like we do on Redis StackExchange (c#) client:\r\n\r\n```\r\nIDatabase db = redis.GetDatabase();\r\nstring value = \"abcdefg\";\r\nvar expires = 1000;\r\ndb.StringSet(\"mykey\", value, expires);\r\n...\r\nstring value = db.StringGet(\"mykey\");\r\nConsole.WriteLine(value); // writes: \"abcdefg\r\n```\r\n\r\nRight now I'm using a Map but I would like to make it simple as this example on C#. \r\n\r\n```\r\n    override fun put(collection: String, key: String, value: String, expiresInSeconds: Long) {\r\n        logger.info(\"Storing key $key into collection $collection\")\r\n        val cacheMap = getMapCache(collection)\r\n\r\n        cacheMap.put(key, value, 3600, TimeUnit.SECONDS)\r\n    }\r\n\r\n    private fun getMapCache(collection: String) = redissonClient.getMapCache<String, String>(\"any\", StringCodec())\r\n```\r\n\r\nWhen I try to retrieve values fro other clients like C# or Python, I got some strange characters on value like `????????\ufffd\u0003??????myvalue`.\r\n\r\nIs there any option to clear/remove those characters on Redisson and store it as plain string?\r\n\r\nIs there any option to store it simple as we do in C#?",
    "comments_url": "https://api.github.com/repos/redisson/redisson/issues/2897/comments",
    "author": "daviddelucca",
    "comments": [
      {
        "user": "mrniko",
        "created_at": "2020-07-07T04:37:33Z",
        "body": "Here is how you can do the same with Redisson:\r\n\r\n```java\r\nRBucket b = redisson.getBucket(\"mykey\", StringCodec.INSTANCE);\r\nb.set(\"value\", 1, TimeUnit.SECONDS);\r\n\r\nb.get(); // = \"value\"\r\n```\r\n\r\n> When I try to retrieve values fro other clients like C# or Python, I got some strange characters on value like ????????\ufffd\ufffd??????myvalue.\r\n\r\nBecause default Redisson codec is `MarshallingCodec`"
      },
      {
        "user": "daviddelucca",
        "created_at": "2020-07-07T09:12:38Z",
        "body": "Is possible to remove those characters or create a custom codec?\r\n\r\n"
      },
      {
        "user": "mrniko",
        "created_at": "2020-07-07T11:20:56Z",
        "body": "You can use StringCodec instead"
      },
      {
        "user": "daviddelucca",
        "created_at": "2020-07-07T11:43:54Z",
        "body": "Thank you very much!"
      }
    ]
  },
  {
    "number": 2888,
    "title": "Set Redisson config using AWS ElastiCache as Clustered Mode",
    "created_at": "2020-07-02T23:45:55Z",
    "closed_at": "2020-07-03T17:05:54Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/redisson/redisson/issues/2888",
    "body": "Hey there!\r\n\r\nWhat is the proper way to configure Redisson when you have a AWS ElastiCache Redis running as Clustered Mode? I have tried to set using it as follows:\r\n\r\n```\r\n    val nodeAddress = \"redis://test-rest-encryption-0001-001.p0vefj.0001.use1.cache.amazonaws.com:6379\" \r\n    val config = Config()\r\n    val configCluster = config.useClusterServers().addNodeAddress(nodeAddress)\r\n    val client = Redisson.create(config)\r\n```\r\n\r\nNode endpoint: test-rest-encryption-0001-001.p0vefj.0001.use1.cache.amazonaws.com\r\nConfiguration endpoint: test-rest-encryption.p0vefj.clustercfg.use1.cache.amazonaws.com\r\n\r\nFor `nodeAddress`, I have tried to use configuration endpoint and node endpoint but fails in both case (connection timed out):\r\n\r\n```\r\n21:04:39.542 [main] WARN  o.r.cluster.ClusterConnectionManager - connection timed out: test-rest-encryption-0001-001.p0vefj.0001.use1.cache.amazonaws.com/172.31.19.41:6379\r\nException in thread \"main\" org.redisson.client.RedisConnectionException: Can't connect to servers!\r\n\tat org.redisson.cluster.ClusterConnectionManager.<init>(ClusterConnectionManager.java:144)\r\n\tat org.redisson.config.ConfigSupport.createConnectionManager(ConfigSupport.java:237)\r\n\tat org.redisson.Redisson.<init>(Redisson.java:117)\r\n\tat org.redisson.Redisson.create(Redisson.java:156)\r\n\tat aus.web.SessionManagerApplicationKt.main(SessionManagerApplication.kt:23)\r\nCaused by: io.netty.channel.ConnectTimeoutException: connection timed out: test-rest-encryption-0001-001.p0vefj.0001.use1.cache.amazonaws.com/172.31.19.41:6379\r\n\tat io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe$1.run(AbstractNioChannel.java:261)\r\n\tat io.netty.util.concurrent.PromiseTask.runTask(PromiseTask.java:98)\r\n\tat io.netty.util.concurrent.ScheduledFutureTask.run(ScheduledFutureTask.java:170)\r\n\tat io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:164)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:500)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)\r\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.base/java.lang.Thread.run(Thread.java:834)\r\n```\r\n\r\nAm I missing something?\r\n\r\n",
    "comments_url": "https://api.github.com/repos/redisson/redisson/issues/2888/comments",
    "author": "daviddelucca",
    "comments": [
      {
        "user": "mrniko",
        "created_at": "2020-07-03T05:28:56Z",
        "body": "Is your application located in the same security group?"
      },
      {
        "user": "daviddelucca",
        "created_at": "2020-07-03T09:04:12Z",
        "body": "Yes, it\u2019s in the same SG!\r\n\r\nDo you usually use configuration endpoint or node endpoint? I have read in docs about to use node endpoint but it throws the same exception \ud83d\ude1e\r\n\r\n\r\n"
      },
      {
        "user": "daviddelucca",
        "created_at": "2020-07-03T16:44:10Z",
        "body": "@mrniko I have figured part of the problem: the client throws an exception if I try to connect to cluster with option `Encryption in-transit` enabled. Does this client support Encryption in-transit and Encryption at-rest?\r\n\r\nI'm using version 3.5.6"
      },
      {
        "user": "mrniko",
        "created_at": "2020-07-03T17:04:01Z",
        "body": "use rediss:// prefix for SSL connection. And select latest Redisson version for new projects."
      },
      {
        "user": "daviddelucca",
        "created_at": "2020-07-03T17:05:54Z",
        "body": "Solved! It was the prefix!\r\n"
      }
    ]
  },
  {
    "number": 2842,
    "title": "How to retrieve DelayedQueue by name using getDelayedQueue",
    "created_at": "2020-06-17T02:39:53Z",
    "closed_at": "2020-06-17T14:42:38Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/redisson/redisson/issues/2842",
    "body": "Want to understand how to retrieve delayed queue (RDelayedQueue) by name using getDelayedQueue method on org.redisson.api.RedissonClient. \r\n\r\nDoes it require to call redissonClient.getDelayedQueue(destinationQueue) every time before queuing a message as below or retrieve queue once and use it for every message queuing ?\r\n\r\nRDelayedQueue..offer(message, delayInMillisFromCurrent, TimeUnit.MILLISECONDS);",
    "comments_url": "https://api.github.com/repos/redisson/redisson/issues/2842/comments",
    "author": "anilkonduru",
    "comments": [
      {
        "user": "mrniko",
        "created_at": "2020-06-17T04:52:10Z",
        "body": "No, you can store RDelayedQueue instance and use it."
      },
      {
        "user": "anilkonduru",
        "created_at": "2020-06-17T14:42:38Z",
        "body": "@mrniko Thanks, that helps."
      }
    ]
  },
  {
    "number": 2782,
    "title": "How to configure scheduling times? ",
    "created_at": "2020-05-19T03:56:55Z",
    "closed_at": "2020-05-19T05:29:49Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/redisson/redisson/issues/2782",
    "body": "When using the periodic scheduling method\uff08e.g. RScheduledExecutorService.scheduleAtFixedRate\uff09, I want to stop scheduling after a specified number of times. What should I do?\r\nThanks!",
    "comments_url": "https://api.github.com/repos/redisson/redisson/issues/2782/comments",
    "author": "hgqapp",
    "comments": [
      {
        "user": "mrniko",
        "created_at": "2020-05-19T05:29:49Z",
        "body": "You can implement this logic right in the task.\r\n\r\n```java\r\nclass RunnableTask implements Runnable {\r\n\r\n    @RInject\r\n    private RedissonClient redissonClient;\r\n\r\n    @RInject\r\n    private String taskId;\r\n\r\n    public void run() {\r\n         if (redissonClient.getAtomicLong(\"\").incrementAndGet() == 10) {\r\n              redissonClient.getExecutorService(\"\").cancelTask(taskId);\r\n         }\r\n    }\r\n}\r\n```"
      },
      {
        "user": "hgqapp",
        "created_at": "2020-05-19T06:04:34Z",
        "body": "@mrniko Thanks, your answer is very useful to me."
      }
    ]
  },
  {
    "number": 2766,
    "title": "RScoredSortedSet.entryRange() can't get entry list under redis cluster\uff1f ",
    "created_at": "2020-05-13T14:38:36Z",
    "closed_at": "2020-05-13T17:16:13Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/redisson/redisson/issues/2766",
    "body": "### Redisson version\uff1a3.7.5\r\n### **I created a redis cluster of three masters and three slaves in the virtual machine.**\r\n\r\n192.168.10.139 master  0-5460\r\n192.168.10.140 master  5461-10922\r\n192.168.10.141 master  10923-16383\r\n192.168.10.142 slave\r\n192.168.10.143 slave \r\n192.168.10.144 slave\r\n\r\n### **I want to test whether the scoresortedset supports clustering.So I wrote a unit test class**\r\n\r\n\r\n\r\n@Before\r\n    public void setUp(){\r\n        Config config = new Config();\r\n        config.useClusterServers()\r\n                .setPassword(\"123456\")\r\n                .setScanInterval(2000) // \u96c6\u7fa4\u72b6\u6001\u626b\u63cf\u95f4\u9694\u65f6\u95f4\uff0c\u5355\u4f4d\u662f\u6beb\u79d2\r\n                .addNodeAddress(\"redis://192.168.10.139:6379\", \"redis://192.168.10.140:6379\")\r\n                .addNodeAddress(\"redis://192.168.10.141:6379\", \"redis://192.168.10.142:6379\")\r\n                .addNodeAddress(\"redis://192.168.10.143:6379\", \"redis://192.168.10.144:6379\");\r\n        redissonClient = Redisson.create(config);\r\n    }\r\n\r\n@Test\r\n    public void redisClusterTest(){\r\n        RScoredSortedSet<String> set = redissonClient.getScoredSortedSet(\"xuyikai\");\r\n        for(int i=1;i<=10;i++){\r\n            boolean isAdd = set.tryAdd(i, \"key\uff1a\" + i);\r\n            log.info(\"isAdd:{}\",isAdd);\r\n        }\r\n        log.info(\"set size:{}\",set.size());\r\n        Collection<ScoredEntry<String>> scoredEntries = set.entryRange(0,10);\r\n        for (ScoredEntry<String> entry : scoredEntries) {\r\n            String key = entry.getValue();\r\n            Double score = entry.getScore();\r\n            log.info(\"key:{},score:{}\",key,score);\r\n        }\r\n    }\r\n\r\n### **I found that the key and score can be inserted normally in the scoreportedset, but when I try to read the size of the current scoreportedset, I find that the return value is 0.**\r\n### **This is the output\uff1a**\r\n\r\n\r\n2020-05-13 22:29:17,531 [main] INFO  org.redisson.Version# logVersion : 41 - Redisson 3.7.5\r\n2020-05-13 22:29:18,230 [main] INFO  o.r.cluster.ClusterConnectionManager# <init> : 120 - Redis cluster nodes configuration got from 192.168.10.139/192.168.10.139:6379:\r\n3d1cc11809e1e057a0f4347df55ac5497035bc59 192.168.10.142:6379@16379 slave e1d330c89353464f871e4fe37ed2bb744e26d9f1 0 1589380157345 4 connected\r\ned84d533c89be5b453349be85ea62236b7e388fd 192.168.10.140:6379@16379 master - 0 1589380157553 2 connected 5461-10922\r\ne1d330c89353464f871e4fe37ed2bb744e26d9f1 192.168.10.141:6379@16379 master - 0 1589380156277 3 connected 10923-16383\r\nc699c611bb722a38588acd51a561755598fbdda7 192.168.10.139:6379@16379 myself,master - 0 1589380156000 1 connected 0-5460\r\n68a78c982c84cc39fb0a500be9007cf08df2d1eb 192.168.10.143:6379@16379 slave c699c611bb722a38588acd51a561755598fbdda7 0 1589380157000 5 connected\r\n0bf30336b5397e3172bbc39827375bfbadbd500e 192.168.10.144:6379@16379 slave ed84d533c89be5b453349be85ea62236b7e388fd 0 1589380157764 6 connected\r\n\r\n2020-05-13 22:29:18,252 [redisson-netty-1-2] INFO  o.r.cluster.ClusterConnectionManager# operationComplete : 244 - slaves: [redis://192.168.10.143:6379] added for slot ranges: [[0-5460]]\r\n2020-05-13 22:29:18,256 [redisson-netty-1-5] INFO  o.r.cluster.ClusterConnectionManager# operationComplete : 244 - slaves: [redis://192.168.10.144:6379] added for slot ranges: [[5461-10922]]\r\n2020-05-13 22:29:18,275 [redisson-netty-1-7] INFO  o.r.cluster.ClusterConnectionManager# operationComplete : 244 - slaves: [redis://192.168.10.142:6379] added for slot ranges: [[10923-16383]]\r\n2020-05-13 22:29:18,291 [redisson-netty-1-5] INFO  o.r.c.p.MasterPubSubConnectionPool# operationComplete : 144 - 1 connections initialized for 192.168.10.141/192.168.10.141:6379\r\n2020-05-13 22:29:18,298 [redisson-netty-1-12] INFO  o.r.c.pool.PubSubConnectionPool# operationComplete : 144 - 1 connections initialized for 192.168.10.144/192.168.10.144:6379\r\n2020-05-13 22:29:18,299 [redisson-netty-1-2] INFO  o.r.c.pool.PubSubConnectionPool# operationComplete : 144 - 1 connections initialized for 192.168.10.142/192.168.10.142:6379\r\n2020-05-13 22:29:18,299 [redisson-netty-1-11] INFO  o.r.c.p.MasterPubSubConnectionPool# operationComplete : 144 - 1 connections initialized for 192.168.10.140/192.168.10.140:6379\r\n2020-05-13 22:29:18,343 [redisson-netty-1-8] INFO  o.r.c.pool.PubSubConnectionPool# operationComplete : 144 - 1 connections initialized for 192.168.10.143/192.168.10.143:6379\r\n2020-05-13 22:29:18,345 [redisson-netty-1-9] INFO  o.r.c.pool.MasterConnectionPool# operationComplete : 144 - 32 connections initialized for 192.168.10.140/192.168.10.140:6379\r\n2020-05-13 22:29:18,345 [redisson-netty-1-1] INFO  o.r.c.pool.MasterConnectionPool# operationComplete : 144 - 32 connections initialized for 192.168.10.139/192.168.10.139:6379\r\n2020-05-13 22:29:18,346 [redisson-netty-1-10] INFO  o.r.c.p.MasterPubSubConnectionPool# operationComplete : 144 - 1 connections initialized for 192.168.10.139/192.168.10.139:6379\r\n2020-05-13 22:29:18,348 [redisson-netty-1-10] INFO  o.r.cluster.ClusterConnectionManager# operationComplete : 267 - master: redis://192.168.10.139:6379 added for slot ranges: [[0-5460]]\r\n2020-05-13 22:29:18,352 [redisson-netty-1-2] INFO  o.r.c.pool.SlaveConnectionPool# operationComplete : 144 - 32 connections initialized for 192.168.10.144/192.168.10.144:6379\r\n2020-05-13 22:29:18,352 [redisson-netty-1-3] INFO  o.r.c.pool.SlaveConnectionPool# operationComplete : 144 - 32 connections initialized for 192.168.10.142/192.168.10.142:6379\r\n2020-05-13 22:29:18,352 [redisson-netty-1-5] INFO  o.r.c.pool.MasterConnectionPool# operationComplete : 144 - 32 connections initialized for 192.168.10.141/192.168.10.141:6379\r\n2020-05-13 22:29:18,352 [redisson-netty-1-9] INFO  o.r.cluster.ClusterConnectionManager# operationComplete : 267 - master: redis://192.168.10.140:6379 added for slot ranges: [[5461-10922]]\r\n2020-05-13 22:29:18,354 [redisson-netty-1-5] INFO  o.r.cluster.ClusterConnectionManager# operationComplete : 267 - master: redis://192.168.10.141:6379 added for slot ranges: [[10923-16383]]\r\n2020-05-13 22:29:18,357 [redisson-netty-1-7] INFO  o.r.c.pool.SlaveConnectionPool# operationComplete : 144 - 32 connections initialized for 192.168.10.143/192.168.10.143:6379\r\n2020-05-13 22:29:18,371 [main] INFO  com.mbkj.mall.RedisClusterTest# redisClusterTest : 65 - isAdd:true\r\n2020-05-13 22:29:18,372 [main] INFO  com.mbkj.mall.RedisClusterTest# redisClusterTest : 65 - isAdd:true\r\n2020-05-13 22:29:18,373 [main] INFO  com.mbkj.mall.RedisClusterTest# redisClusterTest : 65 - isAdd:true\r\n2020-05-13 22:29:18,374 [main] INFO  com.mbkj.mall.RedisClusterTest# redisClusterTest : 65 - isAdd:true\r\n2020-05-13 22:29:18,375 [main] INFO  com.mbkj.mall.RedisClusterTest# redisClusterTest : 65 - isAdd:true\r\n2020-05-13 22:29:18,376 [main] INFO  com.mbkj.mall.RedisClusterTest# redisClusterTest : 65 - isAdd:true\r\n2020-05-13 22:29:18,377 [main] INFO  com.mbkj.mall.RedisClusterTest# redisClusterTest : 65 - isAdd:true\r\n2020-05-13 22:29:18,378 [main] INFO  com.mbkj.mall.RedisClusterTest# redisClusterTest : 65 - isAdd:true\r\n2020-05-13 22:29:18,379 [main] INFO  com.mbkj.mall.RedisClusterTest# redisClusterTest : 65 - isAdd:true\r\n2020-05-13 22:29:18,381 [main] INFO  com.mbkj.mall.RedisClusterTest# redisClusterTest : 65 - isAdd:true\r\n2020-05-13 22:29:18,382 [main] INFO  com.mbkj.mall.RedisClusterTest# redisClusterTest : 68 - set size:0\r\n\r\n### **I tried distributed lock under this condition. It seems that there is no problem, so I am confused about the above problems**\r\n### **I hope you can answer my question, thank you**\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/redisson/redisson/issues/2766/comments",
    "author": "xuyikai1",
    "comments": [
      {
        "user": "mrniko",
        "created_at": "2020-05-13T17:16:13Z",
        "body": "Seems there is a replication lag between master and slave. You may try to use `readMode=Master` to avoid this. RLock is always use Redis master."
      },
      {
        "user": "xuyikai1",
        "created_at": "2020-05-14T08:17:45Z",
        "body": "Thank you for your answer. As you said, it solved the problem"
      }
    ]
  },
  {
    "number": 2740,
    "title": "Idle connection is not killed after timeout",
    "created_at": "2020-04-30T00:54:00Z",
    "closed_at": "2020-04-30T20:47:35Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/redisson/redisson/issues/2740",
    "body": "clusterServersConfig:\r\n  idleConnectionTimeout: 30000\r\n  pingTimeout: 1000\r\n  subscriptionConnectionMinimumIdleSize: 1\r\n  subscriptionConnectionPoolSize: 10\r\n  slaveConnectionMinimumIdleSize: 1\r\n  slaveConnectionPoolSize: 2\r\n  masterConnectionMinimumIdleSize: 3\r\n  masterConnectionPoolSize: 4\r\n  pingConnectionInterval: 0\r\n  keepAlive: true\r\n\r\nI use the above settings. The connections is always 2 event the idle time is bigger than 20 seconds.\r\n`id=134 addr=172.18.0.1:43642 fd=19 name=MerchantDataService age=1278 idle=1278 flags=r db=0 sub=0 psub=0 multi=-1 qbuf=0 qbuf-free=0 obl=0 oll=0 omem=0 events=r cmd=readonly\r\nid=135 addr=172.18.0.1:43696 fd=20 name=MerchantDataService age=1278 idle=1278 flags=r db=0 sub=0 psub=0 multi=-1 qbuf=0 qbuf-free=0 obl=0 oll=0 omem=0 events=r cmd=readonly`\r\n\r\nDid I miss something?\r\n\r\nBtw, for the connections in master node, it always 4 and no connection is closed after idleConnectionTimeout.\r\n",
    "comments_url": "https://api.github.com/repos/redisson/redisson/issues/2740/comments",
    "author": "stevenli1217",
    "comments": [
      {
        "user": "mrniko",
        "created_at": "2020-04-30T06:03:20Z",
        "body": "Redisson opens additional connection per node to retrieve topology information"
      },
      {
        "user": "stevenli1217",
        "created_at": "2020-04-30T20:47:35Z",
        "body": "Thank you!"
      }
    ]
  },
  {
    "number": 2726,
    "title": "Question about retryAttempts&retryInterval",
    "created_at": "2020-04-24T03:04:00Z",
    "closed_at": "2020-04-24T07:09:36Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/redisson/redisson/issues/2726",
    "body": "In our environment, we see randomly long time access due to some commands go to 1 time or 2 times retry.  ~1500ms(retryInterval) passed after connection acquired but not able to send command and go to attempt. \r\n\r\nRestart Redis server will recover it. \r\n\r\nI wonder to know:\r\n1. In which possible scenarios Redis command can't be sent to Redis server, and enter retry mode?\r\n2. Why restart Redis server can recover?",
    "comments_url": "https://api.github.com/repos/redisson/redisson/issues/2726/comments",
    "author": "empty117",
    "comments": [
      {
        "user": "mrniko",
        "created_at": "2020-04-24T05:14:21Z",
        "body": "> In which possible scenarios Redis command can't be sent to Redis server, and enter retry mode?\r\n\r\nIf connection became broken due to network issue or Redis CPU 100% spike.\r\nTry to set `pingConnectionInterval` setting"
      },
      {
        "user": "empty117",
        "created_at": "2020-04-24T05:29:48Z",
        "body": "@mrniko : What's the usage to set \"pingConnectionInterval\"?\r\nI am sure Redis CPU is not 100% spike. About connections, i set like this:\r\n -  idleConnectionTimeout: 10000\r\n - masterConnectionMinimumIdleSize: 32\r\n - masterConnectionPoolSize: 256\r\n\r\nWhat i understood is if load is not quite high, connection number will back to 32 in case some connections got ldel time more than 10s. But i see connection number  is keeping more than 200 even in very free time."
      },
      {
        "user": "mrniko",
        "created_at": "2020-04-24T05:57:16Z",
        "body": "> But i see connection number is keeping more than 200 even in very free time.\r\n\r\nI sure that these connections weren't used for more than 10s? connection pool use them in round robin."
      },
      {
        "user": "empty117",
        "created_at": "2020-04-24T06:05:02Z",
        "body": "@mrniko : When Redisson startup, how many connections will be established? masterConnectionMinimumIdleSize: 32 or masterConnectionPoolSize: 256?\r\n\r\nI suppose \"pingConnectionInterval\" is used to detect broken connections. If this was set, in each connection, redisson will regularly execute PING command. Will it impact the connection IDLE time?\r\n\r\nFor instance: If i set pingConnectionInterval=5000, idleConnectionTimeout=10000, Does it mean connection will never been IDEL timeout?"
      },
      {
        "user": "mrniko",
        "created_at": "2020-04-24T06:08:35Z",
        "body": "> If this was set, in each connection, redisson will regularly execute PING command. Will it impact the connection IDLE time?\r\n\r\nIt shouldn't since PingConnectionHandler doesn't use conneciton pool"
      },
      {
        "user": "empty117",
        "created_at": "2020-04-24T07:09:36Z",
        "body": "thanks, clear to me now."
      }
    ]
  },
  {
    "number": 2724,
    "title": "RBlockingQueue\u5ef6\u65f6\u961f\u5217\u5230\u671f\u4e0d\u80fdpoll\u5230\u503c\u3002\u662f\u4e0d\u662f\u6211\u7684\u4f7f\u7528\u65b9\u5f0f\u6709\u95ee\u9898\u3002",
    "created_at": "2020-04-23T10:36:43Z",
    "closed_at": "2020-09-23T14:36:21Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/redisson/redisson/issues/2724",
    "body": "\u7528offer\u7684\u5f62\u5f0f\u653e\u5165\u5ef6\u65f6\u961f\u5217\uff0c\u518d\u7528poll\u7684\u5f62\u5f0f\u53d6\u503c\u3002\u73b0\u5728\u51fa\u73b0\u7684\u73b0\u8c61\u662f\uff0c\u6709\u65f6\u5019\u5230\u8fc7\u671f\u65f6\u95f4\uff0c\u4f46\u662f\u6ca1\u6709\u53d6\u5230\u503c\uff0c\u9700\u8981\u518d\u6b21\u5f80\u91ccoffer\u7684\u65f6\u5019\u624d\u4f1a\u53d6\u5230\u503c\u503c\u3002\r\n//\u5b58\u7684\u4ee3\u7801\r\n        RBlockingQueue<QueueTask> blockingFairQueue = redisson.getBlockingQueue(task.getQueueName());\r\n        RDelayedQueue<QueueTask> delayedQueue = redisson.getDelayedQueue(blockingFairQueue);\r\n        delayedQueue.offer(task, task.getDelayTime(), task.getTimeUnit() == null ? TimeUnit.MINUTES : task.getTimeUnit());\r\n        delayedQueue.destroy();\r\n\r\n//\u53d6\u7684\u4ee3\u7801\uff1a\r\nwhile (true){\r\n                RBlockingQueue<QueueTask> blockingFairQueue = redisUtils.getRedisson().getBlockingQueue(queueName);\r\n                    task = blockingFairQueue.poll(1,TimeUnit.MINUTES);\r\n            }\r\n\r\n//\u914d\u7f6e\u7684\u96c6\u7fa4\u6a21\u5f0f\r\nconfig.useClusterServers().setScanInterval(2000).addNodeAddress(newNodes.toArray(new String[0]))\r\n                    .setSubscriptionConnectionMinimumIdleSize(subscriptionConnectionMinimumIdleSize)\r\n                    .setSubscriptionConnectionPoolSize(subscriptionConnectionPoolSize)\r\n                    .setSubscriptionsPerConnection(subscriptionsPerConnection)\r\n                    .setClientName(clientName)\r\n                    .setRetryAttempts(retryAttempts)\r\n                    .setRetryInterval(retryInterval)\r\n                    .setTimeout(timeout)\r\n                    .setConnectTimeout(connectTimeout)\r\n                    .setIdleConnectionTimeout(idleConnectionTimeout)\r\n                    .setPassword(password)\r\n                    .setMasterConnectionPoolSize(masterConnectionPoolSize)\r\n                    .setMasterConnectionMinimumIdleSize(masterConnectionMinimumIdleSize)\r\n                    .setSlaveConnectionPoolSize(slaveConnectionPoolSize)\r\n                    .setSlaveConnectionMinimumIdleSize(slaveConnectionMinimumIdleSize);\r\n\r\n//\u5355\u70b9\u6a21\u5f0f\u914d\u7f6e\r\nconfig.useSingleServer().setAddress(address)\r\n                    .setConnectionMinimumIdleSize(connectionMinimumIdleSize)\r\n                    .setConnectionPoolSize(connectionPoolSize)\r\n                    .setDatabase(database)\r\n                    .setDnsMonitoringInterval(dnsMonitoringInterval)\r\n                    .setSubscriptionConnectionMinimumIdleSize(subscriptionConnectionMinimumIdleSize)\r\n                    .setSubscriptionConnectionPoolSize(subscriptionConnectionPoolSize)\r\n                    .setSubscriptionsPerConnection(subscriptionsPerConnection)\r\n                    .setClientName(clientName)\r\n                    .setRetryAttempts(retryAttempts)\r\n                    .setRetryInterval(retryInterval)\r\n                    .setTimeout(timeout)\r\n                    .setConnectTimeout(connectTimeout)\r\n                    .setIdleConnectionTimeout(idleConnectionTimeout)\r\n                    .setPassword(password);\r\n\r\nredisson\u7248\u672c\uff1a3.11.4",
    "comments_url": "https://api.github.com/repos/redisson/redisson/issues/2724/comments",
    "author": "LionsArmstrong",
    "comments": [
      {
        "user": "mrniko",
        "created_at": "2020-04-23T11:19:15Z",
        "body": "It's happening since delayed elements transfered on Redisson side"
      },
      {
        "user": "LionsArmstrong",
        "created_at": "2020-04-24T01:47:38Z",
        "body": "\u5982\u4f55\u907f\u514d\u6b64\u7c7b\u95ee\u9898\u7684\u53d1\u751f\u5462\uff1f\u964d\u4f4e\u5ef6\u8fdf\u65f6\u95f4\u5417\uff1f\u4e1a\u52a1\u5ef6\u65f6\u65f6\u95f4\u4e3a30\u523090\u5206\u949f\u4e0d\u7b49\u7684\u3002\u73b0\u5728\u6570\u636e\u7684\u4f7f\u7528\u91cf\u4e0d\u662f\u5f88\u5927\u3002\u7ecf\u5e38\u4f1a\u53d1\u751f\u8fd9\u6837\u7684\u95ee\u9898\u3002"
      },
      {
        "user": "LionsArmstrong",
        "created_at": "2020-04-24T01:48:35Z",
        "body": "How to avoid such problems? Reduce delay time? The service delay time varies from 30 to 90 minutes. Now the amount of data used is not very large. Such problems often occur."
      },
      {
        "user": "zcs100",
        "created_at": "2020-05-30T14:35:12Z",
        "body": "@LionsArmstrong \u6211\u4e5f\u9047\u5230\u4e86\u76f8\u540c\u7684\u95ee\u9898\uff0c\u8fd0\u884c\u4e2d\u4f1a\u6709\u4e22\u6d88\u606f\u7684\u60c5\u51b5\uff0c\u73b0\u5728\u89e3\u51b3\u4e86\u5417\uff1f\u80fd\u5206\u4eab\u4e00\u4e0b\u5417"
      },
      {
        "user": "ManaStuDent",
        "created_at": "2020-06-30T05:53:50Z",
        "body": "\u9047\u5230\u540c\u6837\u7684\u95ee\u9898\u5728 2.15.2 \u7248\u672c\u4e2d\uff0c\u6211\u8fd9\u91cc\u548c Springmvc \u6574\u5408\u65f6\u9047\u5230\u7684\u95ee\u9898\uff0cJunit \u5355\u5143\u6d4b\u8bd5\u7684\u65f6\u5019\u5c31\u6ca1\u6709\u95ee\u9898\uff0c\u5728\u4f7f\u7528 Springmvc \u4e2d\u4f7f\u7528 @PostConstruct \u6ce8\u89e3\u4e3a\u6d88\u8d39\u8005\u5f00\u542f\u4e00\u4e2a Thread \u7ebf\u7a0b\u65f6\uff0c\u751f\u4ea7\u8005\u53d1\u9001\u5355\u4e2a\u6d88\u606f\u540e\uff0c\u6d88\u8d39\u8005\u6709\u65f6\u5019\u80fd\u6d88\u8d39\u5230\uff0c\u6709\u65f6\u5019\u6d88\u8d39\u4e0d\u5230\uff0c\u4f46\u662f\u5f53\u751f\u4ea7\u8005\u8fde\u7eed\u53d1\u9001\u591a\u4e2a\u6d88\u606f\uff0c\u6d88\u8d39\u8005\u5c31\u4e00\u5b9a\u80fd\u591f\u6d88\u8d39\u5230\u3002"
      },
      {
        "user": "1186792881",
        "created_at": "2020-08-13T08:15:01Z",
        "body": "I also encountered the same problem, how to solve it"
      },
      {
        "user": "Yorkehan",
        "created_at": "2020-08-16T14:10:29Z",
        "body": "I also encountered the same problem, how to solve it"
      },
      {
        "user": "serical",
        "created_at": "2020-08-29T03:27:06Z",
        "body": "I also encountered the same problem, how to solve it\r\n\r\n"
      },
      {
        "user": "534519560",
        "created_at": "2020-09-23T08:33:25Z",
        "body": "\u4f7f\u7528\u8fd9\u6837\u7684\u65b9\u5f0f\u6dfb\u52a0\u5143\u7d20\u8bd5\u8bd5\u770b,\u6211\u8fd9\u6837\u5c31\u6b63\u5e38\u4e86\r\n`    queue.offer(task, 5, TimeUnit.SECONDS);\r\n        Thread.sleep(1);\r\n        queue.destroy();`"
      },
      {
        "user": "LionsArmstrong",
        "created_at": "2020-11-09T07:00:01Z",
        "body": "@zcs100 @1186792881 @ManaStuDent \u53ef\u4ee5\u5c1d\u8bd5\u4e00\u4e0b\uff0c\u4ee5\u4e0b\u65b9\u5f0f\u3002\u57fa\u672c\u53ef\u4ee5\u89e3\u51b3\u5ef6\u65f6\u83b7\u53d6\u4e0d\u5230\u6570\u636e\u7684\u95ee\u9898\u3002\r\nRBlockingQueue<QueueTask> blockingFairQueue = redisUtils.getRedisson().getBlockingQueue(queueName);\r\nredisUtils.getRedisson().getDelayedQueue(blockingFairQueue);\r\ntask = blockingFairQueue.poll(1,TimeUnit.MINUTES);"
      },
      {
        "user": "xrayw",
        "created_at": "2020-11-10T03:13:48Z",
        "body": "@LionsArmstrong  \u8001\u54e5, \u662f\u8bf4\u4e2d\u95f4\u8981\u52a0\u4e00\u4e2agetDelayedQueue()\u7684\u65e0\u7528\u4ee3\u7801\u624d\u53ef\u4ee5\u907f\u514d? \u8fd9\u662f\u4ec0\u4e48\u539f\u7406\u554a \ud83d\ude04 "
      },
      {
        "user": "serical",
        "created_at": "2020-11-10T13:05:54Z",
        "body": "\u6211\u73b0\u5728\u662f\u8fd9\u4e48\u89e3\u51b3\u7684\ud83d\ude02\r\n```java\r\n    @PostConstruct\r\n    public void init() {\r\n        // 1\u79d2\u949f\u5237\u65b0\u5ef6\u8fdf\u961f\u5217\u4e00\u6b21\r\n        final Timer timer = new Timer();\r\n        timer.schedule(new TimerTask() {\r\n            @Override\r\n            public void run() {\r\n                refresh();\r\n            }\r\n        }, 1000, 1000);\r\n    }\r\n\r\n    /**\r\n     * \u91cd\u542f\u5237\u65b0\u5ef6\u8fdf\u961f\u5217\r\n     */\r\n    private void refresh() {\r\n        RDelayedQueue<String> imageSuitRetryQueue = redissonClient.getDelayedQueue(redissonClient.getBlockingQueue(\"key\"));\r\n        imageSuitRetryQueue.destroy();\r\n    }\r\n```"
      },
      {
        "user": "astorage",
        "created_at": "2020-11-20T03:14:42Z",
        "body": "> @zcs100 @1186792881 @ManaStuDent \u53ef\u4ee5\u5c1d\u8bd5\u4e00\u4e0b\uff0c\u4ee5\u4e0b\u65b9\u5f0f\u3002\u57fa\u672c\u53ef\u4ee5\u89e3\u51b3\u5ef6\u65f6\u83b7\u53d6\u4e0d\u5230\u6570\u636e\u7684\u95ee\u9898\u3002\r\n> RBlockingQueue blockingFairQueue = redisUtils.getRedisson().getBlockingQueue(queueName);\r\n> redisUtils.getRedisson().getDelayedQueue(blockingFairQueue);\r\n> task = blockingFairQueue.poll(1,TimeUnit.MINUTES);\r\n\r\n\u51fa\u73b0\u8fd9\u4e2a\u95ee\u9898\u73b0\u8c61\u7684\u539f\u7406\u662f\u4ec0\u4e48\uff1f\u662f\u53d1\u9001\u7aef\u5ef6\u8fdf\u6ca1\u6709\u53d1\u9001\uff0c\u8fd8\u662f\u63a5\u53d7\u65b9\u7684\u95ee\u9898\uff1f"
      },
      {
        "user": "LionsArmstrong",
        "created_at": "2021-02-09T01:28:21Z",
        "body": "@astorage \r\n\r\n> > @zcs100 @1186792881 @ManaStuDent \u53ef\u4ee5\u5c1d\u8bd5\u4e00\u4e0b\uff0c\u4ee5\u4e0b\u65b9\u5f0f\u3002\u57fa\u672c\u53ef\u4ee5\u89e3\u51b3\u5ef6\u65f6\u83b7\u53d6\u4e0d\u5230\u6570\u636e\u7684\u95ee\u9898\u3002\r\n> > RBlockingQueue blockingFairQueue = redisUtils.getRedisson().getBlockingQueue(queueName);\r\n> > redisUtils.getRedisson().getDelayedQueue(blockingFairQueue);\r\n> > task = blockingFairQueue.poll(1,TimeUnit.MINUTES);\r\n> \r\n> \u51fa\u73b0\u8fd9\u4e2a\u95ee\u9898\u73b0\u8c61\u7684\u539f\u7406\u662f\u4ec0\u4e48\uff1f\u662f\u53d1\u9001\u7aef\u5ef6\u8fdf\u6ca1\u6709\u53d1\u9001\uff0c\u8fd8\u662f\u63a5\u53d7\u65b9\u7684\u95ee\u9898\uff1f\r\n\r\nredis\u91cc\u9762\u6709\u6570\u636e\uff0c\u63a5\u6536\u65b9\u76d1\u542c\u65ad\u4e86\u3002\u4f46\u662f\u8fd8\u6ca1\u6709\u629b\u51fa\u4efb\u4f55\u5f02\u5e38\u3002\u5c31\u662f\u4e00\u76f4\u90fd\u5728\u76d1\u542c\uff0c\u4f46\u662f\u63a5\u6536\u4e0d\u5230\u6570\u636e\u3002\u7b49\u53d1\u9001\u7aef\u518d\u53d1\u9001\u65b0\u7684\u6570\u636e\u7684\u65f6\u5019\uff0c\u63a5\u53d7\u65b9\u5c31\u80fd\u63a5\u53d7\u4e4b\u524d\u7684\u6570\u636e\u3002\u4f46\u662f\u65f6\u95f4\u5df2\u7ecf\u8d85\u65f6\u4e86\u3002"
      },
      {
        "user": "huangwenyi10",
        "created_at": "2021-05-12T02:24:37Z",
        "body": "delayedQueue.destroy();   \u6ce8\u91ca\u6389\u8fd9\u53e5\uff0c\u5e94\u8be5\u5c31\u6ca1\u95ee\u9898\u4e86"
      }
    ]
  },
  {
    "number": 2613,
    "title": "In a frequent job , sometime lock.tryLock() can not get lock",
    "created_at": "2020-02-25T15:10:58Z",
    "closed_at": "2020-02-28T05:28:28Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/redisson/redisson/issues/2613",
    "body": "\t\t<dependency>\r\n\t\t\t<groupId>org.redisson</groupId>\r\n\t\t\t<artifactId>redisson-spring-boot-starter</artifactId>\r\n\t\t\t<version>2.15.2</version>\r\n\t\t</dependency>\r\nIn a spring boot 1.5.6 application , We have a new job which is running every 30 seconds and try to acquire lock to do something . In recent days the job has tried to acquire one specific lock cause of business , We found from 00:13 on Feb 24  the job can not get the lock but after 15:03 the job can get the lock again . The operation on this lock only in this job . \r\nthe code on the lock as below :\r\n\r\n        boolean res = lock.tryLock();\r\n        if (res) {\r\n            try {\r\n                ...\r\n            } finally {\r\n                if (lock.isHeldByCurrentThread())\r\n                    lock.unlock();\r\n            }\r\n        } else {\r\n            LockUtils.logLockError(lockName, amount, null, \"consume balance\");\r\n            msg = String.format(\"acquire merchant account lock (%s)failed\", lockName);\r\n        }\r\n\r\nThanks\r\n\r\n\r\n\r\n\r\n ",
    "comments_url": "https://api.github.com/repos/redisson/redisson/issues/2613/comments",
    "author": "mi13chael",
    "comments": [
      {
        "user": "mrniko",
        "created_at": "2020-02-25T15:13:50Z",
        "body": "I would recommend to remove `if (lock.isHeldByCurrentThread())` this check since unlock should be invoked in any case."
      },
      {
        "user": "mi13chael",
        "created_at": "2020-02-25T15:17:55Z",
        "body": "I think if the lock acquired in another thread , unlock should be invoked in that thread .\r\n"
      },
      {
        "user": "mrniko",
        "created_at": "2020-02-25T15:46:19Z",
        "body": "I don't see any other reason except dealy in code execution between braces."
      },
      {
        "user": "mrniko",
        "created_at": "2020-02-25T15:47:33Z",
        "body": "> I think if the lock acquired in another thread , unlock should be invoked in that thread .\r\n\r\nall the more you don't need to add this check."
      },
      {
        "user": "mi13chael",
        "created_at": "2020-02-26T02:10:47Z",
        "body": "Thanks , I already had this update in the job , will see what happened in the future. \r\n"
      },
      {
        "user": "mi13chael",
        "created_at": "2020-02-26T02:12:33Z",
        "body": "That is a point to catch who is operating the lock in the meantime."
      },
      {
        "user": "mi13chael",
        "created_at": "2020-02-28T05:28:28Z",
        "body": "the situation have not happened again . "
      }
    ]
  },
  {
    "number": 2576,
    "title": "How to know if RedissonMap is created at redis end ",
    "created_at": "2020-02-07T09:29:53Z",
    "closed_at": "2020-02-07T09:32:08Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/redisson/redisson/issues/2576",
    "body": "Is there a way to know if a map with given name is created at redis end. As per understanding, org.redisson.api.RedissonClient.getMap(java.lang.String name) always gives new RedissonMap and only creates interacts with redis when one does any map operations like get/put. \r\nWhich means Using org.redisson.api.RedissonClient.getMap(java.lang.String name) will not send any request to redis ?\r\nSo how can i know that if a map with given name already exists at redis end using any of the redisson apis? ",
    "comments_url": "https://api.github.com/repos/redisson/redisson/issues/2576/comments",
    "author": "SushmaReddyLoka",
    "comments": [
      {
        "user": "mrniko",
        "created_at": "2020-02-07T09:32:08Z",
        "body": "use `RMap.isExists` method"
      },
      {
        "user": "SushmaReddyLoka",
        "created_at": "2020-02-07T09:34:45Z",
        "body": "Thanks for the response. Along with it can you confirm if my understanding about getMap api is correct ? "
      },
      {
        "user": "mrniko",
        "created_at": "2020-02-07T13:33:49Z",
        "body": "> gives new RedissonMap and only creates interacts with redis when one does any map operations like get/put.\r\n\r\nYes, RMap is fully stateless on Redisson side."
      }
    ]
  },
  {
    "number": 2538,
    "title": "\u6570\u636e\u7c7b\u578b\u95ee\u9898",
    "created_at": "2020-01-13T07:40:33Z",
    "closed_at": "2020-01-13T08:12:31Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/redisson/redisson/issues/2538",
    "body": "\u6211\u7528spring\u4e2d\u7684@cacheable\u65f6\uff0c\u4ece\u6570\u636e\u5e93\u4e2d\u53d6\u51fa\u6765\u51c6\u5907\u5e8f\u5217\u5316\u5b58\u5230redis\u4e2d\u7684\u6570\u636e\u662fByte\u7c7b\u578b\uff0c\u4f46\u662f\u518d\u4eceredis\u4e2d\u67e5\u51fa\u6765\u8fd4\u56de\u7684\u5374\u662fInteger\uff0c\u8fd9\u4e2a\u662f\u9700\u8981\u4fee\u6539redisson\u7684\u6570\u636e\u5e8f\u5217\u5316\u65b9\u5f0f\u5417\uff1f\u6211\u8bd5\u4e86\u4e00\u4e0b\u5305\u88c5\u7c7bShort\u3001Byte\u90fd\u4f1a\u53d8\u6210Integer\uff0cCharacter\u4f1a\u53d8\u6210String\uff0cFloat\u4f1a\u53d8\u6210Double\u3002",
    "comments_url": "https://api.github.com/repos/redisson/redisson/issues/2538/comments",
    "author": "MarionSong",
    "comments": [
      {
        "user": "mrniko",
        "created_at": "2020-01-13T08:06:07Z",
        "body": "Which codec do you use?"
      },
      {
        "user": "MarionSong",
        "created_at": "2020-01-13T08:10:45Z",
        "body": "JsonJacksonCodec"
      },
      {
        "user": "mrniko",
        "created_at": "2020-01-13T08:12:31Z",
        "body": "Switch to FST, KryoCodec or SerializationCodec"
      },
      {
        "user": "MarionSong",
        "created_at": "2020-01-13T09:01:23Z",
        "body": "thank you \uff0cI switch to SerializationCodec"
      }
    ]
  },
  {
    "number": 2532,
    "title": "\u5173\u4e8eredisson\u7684watchdog\u91cd\u8fde\u673a\u5236",
    "created_at": "2020-01-09T09:03:59Z",
    "closed_at": "2020-01-10T08:44:45Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/redisson/redisson/issues/2532",
    "body": "\u6700\u8fd1\u5c06redisson\u7248\u672c\u5347\u5230\u4e863.11.5\uff0c\u7136\u540e\u6d4b\u8bd5\u4e86\u4e00\u4e0bredisson\u7684\u91cd\u8fde\u673a\u5236\uff0c\u7136\u540e\u51fa\u73b0\u4e86\u4e00\u4e2a\u5947\u602a\u7684\u73b0\u8c61\u3002\u5728Linux\u4e0a\u90e8\u7f72redis\u96c6\u7fa4\uff0c\u7136\u540e\u5728\u672c\u5730Windows\u4e0a\u8fdb\u884c\u8fde\u63a5\u6d4b\u8bd5\u3002\u5982\u679c\u4f7f\u7528\u5728Linux\u4e0a\u4f7f\u7528iptables\u5207\u65ad\u8fde\u63a5\uff0c\u5728\u8fde\u63a5\u6062\u590d\u540e\u4e0d\u53ef\u7528\u8fde\u63a5\u4f1a\u91cd\u8fde\uff1b\u4f46\u5982\u679c\u5728Windows\u4e0a\u4f7f\u7528IP\u5b89\u5168\u7b56\u7565\u6765\u5207\u65ad\u8fde\u63a5\uff0c\u5728\u8fde\u63a5\u6062\u590d\u540e\uff0c\u4e0d\u53ef\u7528\u8fde\u63a5\u6ca1\u6709\u91cd\u8fde\u3002\u8bf7\u95ee\u4e00\u4e0b\uff0c\u8fd9\u4e24\u79cd\u65b9\u5f0f\u4e4b\u95f4\u6709\u4ec0\u4e48\u4e0d\u4e00\u6837\u7684\u5730\u65b9\u5417\uff1f",
    "comments_url": "https://api.github.com/repos/redisson/redisson/issues/2532/comments",
    "author": "ShosinnFuYW",
    "comments": [
      {
        "user": "mrniko",
        "created_at": "2020-01-10T07:08:24Z",
        "body": "Did you try to set `setPingConnectionInterval` setting to handle such cases?"
      },
      {
        "user": "ShosinnFuYW",
        "created_at": "2020-01-10T08:44:37Z",
        "body": "> \r\n> \r\n> Did you try to set `setPingConnectionInterval` setting to handle such cases?\r\nThank you,it works fine!\r\n"
      }
    ]
  },
  {
    "number": 2524,
    "title": "Deserialization the object from redis to RList throws InvocationTargetException",
    "created_at": "2020-01-07T09:19:40Z",
    "closed_at": "2020-01-07T09:21:26Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/redisson/redisson/issues/2524",
    "body": "Deserialization the object from redis to RList throws InvocationTargetException\r\n\r\nredisson:3.12.0\r\nfst:2.56\r\n1.8.0_152\r\n\r\nstacktrace:\r\n\r\n`\r\nCaused by: java.lang.reflect.InvocationTargetException: null\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.redisson.command.RedisExecutor.getCodec(RedisExecutor.java:681)\r\n\t... 109 common frames omitted\r\nCaused by: java.lang.NoSuchMethodError: org.nustaq.serialization.FSTConfiguration.getJsonFieldNames()Lorg/nustaq/serialization/coders/FSTJsonFieldNames;\r\n\tat org.redisson.codec.FstCodec.copy(FstCodec.java:201)\r\n\tat org.redisson.codec.FstCodec.<init>(FstCodec.java:190)\r\n\t... 114 common frames omitted\r\n`\r\n\r\n",
    "comments_url": "https://api.github.com/repos/redisson/redisson/issues/2524/comments",
    "author": "fengzhenxing",
    "comments": [
      {
        "user": "mrniko",
        "created_at": "2020-01-07T09:21:26Z",
        "body": "`java.lang.NoSuchMethodError: org.nustaq.serialization.FSTConfiguration.getJsonFieldNames`\r\n\r\nmake sure you have latest version of fst codec in classpath"
      },
      {
        "user": "fengzhenxing",
        "created_at": "2020-01-07T09:26:47Z",
        "body": "@mrniko yes. The lastest fst codec version is 2.57.Thanks"
      },
      {
        "user": "mrniko",
        "created_at": "2020-01-07T09:28:20Z",
        "body": "Unable to reproduce it."
      },
      {
        "user": "fengzhenxing",
        "created_at": "2020-01-07T09:29:40Z",
        "body": "@mrniko I add the lastest fst codec version,then throws NPE.\r\n\r\nstacktrace:\r\n\r\n`\r\njava.io.IOException: java.lang.NullPointerException\r\n\tat org.nustaq.serialization.FSTObjectInput.readObject(FSTObjectInput.java:247)\r\n\tat org.redisson.codec.FstCodec$1.decode(FstCodec.java:250)\r\n\tat org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:368)\r\n\tat org.redisson.client.handler.CommandDecoder.decodeCommand(CommandDecoder.java:196)\r\n\tat org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:134)\r\n\tat org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:104)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:493)\r\n\tat io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:366)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:271)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:377)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:363)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:355)\r\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:377)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:363)\r\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)\r\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.lang.NullPointerException: null\r\n\tat org.nustaq.serialization.FSTObjectInput.readObjectWithHeader(FSTObjectInput.java:357)\r\n\tat org.nustaq.serialization.FSTObjectInput.readObjectInternal(FSTObjectInput.java:331)\r\n\tat org.nustaq.serialization.FSTObjectInput.readObject(FSTObjectInput.java:311)\r\n\tat org.nustaq.serialization.FSTObjectInput.readObject(FSTObjectInput.java:245)\r\n\t... 24 common frames omitted\r\n`"
      },
      {
        "user": "mrniko",
        "created_at": "2020-01-07T09:30:35Z",
        "body": "is there code example to reproduce it?"
      },
      {
        "user": "fengzhenxing",
        "created_at": "2020-01-07T09:35:01Z",
        "body": "Here is some example code:\r\n\r\n`\r\nRList<ExampleObject> serviceUserList = redisson.getList(key);\r\n`\r\nif I add  new properties in ExampleObject,then throws NPE. The properties of exampleObject stored in redis is not equals"
      },
      {
        "user": "mrniko",
        "created_at": "2020-01-07T09:36:56Z",
        "body": "> if I add new properties in ExampleObject,then throws NPE. The properties of exampleObject stored in redis is not equals\r\n\r\nConsider to use JacksonCodec for this purpose."
      },
      {
        "user": "fengzhenxing",
        "created_at": "2020-01-07T09:38:19Z",
        "body": "yes,I replace the type of codec so it works.\r\n\r\n"
      }
    ]
  },
  {
    "number": 2510,
    "title": "\u8bf7\u95ee\u5982\u4f55\u52a8\u6001\u5207\u6362\u670d\u52a1\u5668\u5730\u5740",
    "created_at": "2020-01-02T09:45:17Z",
    "closed_at": "2020-01-03T06:40:51Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/redisson/redisson/issues/2510",
    "body": "```\r\n@Value(\"${spring.redis.addresses}\")\r\nprivate String addresses;\r\n\r\n@Bean\r\npublic RedissonClient redissonClient() {\r\n            Config config = new Config();\r\n            String[] addressList = addresses.split(\",\");\r\n            config.useClusterServers().addNodeAddress(addressList);\r\n            return Redisson.create(config);\r\n}\r\n```\r\n\r\naddresses\u5730\u5740\u53d1\u751f\u53d8\u5316,redisson\u5982\u4f55\u611f\u77e5\u5230?",
    "comments_url": "https://api.github.com/repos/redisson/redisson/issues/2510/comments",
    "author": "laomolaomo",
    "comments": [
      {
        "user": "mrniko",
        "created_at": "2020-01-03T06:40:51Z",
        "body": "This feature is not supported. Redisson config is immutable."
      },
      {
        "user": "laomolaomo",
        "created_at": "2020-01-03T07:19:56Z",
        "body": "thank you very much"
      }
    ]
  },
  {
    "number": 2488,
    "title": "java.lang.ClassNotFoundException: org.springframework.data.redis.connection.RedisStreamCommands ",
    "created_at": "2019-12-18T02:04:35Z",
    "closed_at": "2019-12-18T07:28:00Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/redisson/redisson/issues/2488",
    "body": "Hello \r\n         I just submitted two questions that didn't work. The reason is that I pressed the wrong key(ctrl + enter on windows). I'm sorry to be embarrassed. My problem is that I use springboot version 2.1.11.RELEASE and the redisson-spring-boot-starter version is 3.11.  .6, the error is the same as the title. I checked issue 2478 and suggested that he downgrade to redisson-spring-data-21. If it is redisson-spring-boot-starter, what version should he downgrade to?",
    "comments_url": "https://api.github.com/repos/redisson/redisson/issues/2488/comments",
    "author": "LayJustDoIt",
    "comments": [
      {
        "user": "mrniko",
        "created_at": "2019-12-18T07:27:57Z",
        "body": "You need to downgrade to redisson-spring-data-21 only"
      },
      {
        "user": "LayJustDoIt",
        "created_at": "2019-12-19T11:30:55Z",
        "body": "> You need to downgrade to redisson-spring-data-21 only\r\n\r\nYes, I tried to downgrade to this version and the program runs normally, thank you for your suggestions"
      }
    ]
  },
  {
    "number": 1706,
    "title": "What is the best practice for setting local caches ttl against Redis caches?",
    "created_at": "2018-10-30T07:35:33Z",
    "closed_at": "2018-10-31T12:15:57Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/redisson/redisson/issues/1706",
    "body": "Is it correct if Redis cache ttl is the same as timeToLiveInMillis for local cache?\r\n\r\nMY_CACHE: \r\n ttl: 300000\r\n maxIdleTime: 300000\r\n maxSize: 1000\r\n \r\n localCacheOptions:\r\n    evictionPolicy: \"LRU\"\r\n    reconnectionStrategy: \"CLEAR\"\r\n    syncStrategy: \"INVALIDATE\"\r\n    writeMode: \"WRITE_THROUGH\"\r\n    cacheSize: 1000\r\n    timeToLiveInMillis: 300000\r\n    maxIdleInMillis: 300000",
    "comments_url": "https://api.github.com/repos/redisson/redisson/issues/1706/comments",
    "author": "bkoroliuk-amplify",
    "comments": [
      {
        "user": "mrniko",
        "created_at": "2018-10-30T08:12:59Z",
        "body": "Do you use RMapCache and RLocalCachedMapCache under the same name?"
      },
      {
        "user": "bkoroliuk-amplify",
        "created_at": "2018-10-30T08:54:09Z",
        "body": "> Do you use RMapCache and RLocalCachedMapCache under the same name?\r\n\r\nyes"
      },
      {
        "user": "mrniko",
        "created_at": "2018-10-30T08:55:39Z",
        "body": "That's a bad idea, since compatibility between these objects is not guaranteed."
      },
      {
        "user": "bkoroliuk-amplify",
        "created_at": "2018-10-30T08:58:34Z",
        "body": "What about this setup? (max ttl for local caches)\r\n```\r\nMY_CACHE:\r\nttl: 300000\r\nmaxIdleTime: 300000\r\nmaxSize: 1000\r\n\r\nlocalCacheOptions:\r\nevictionPolicy: \"LRU\"\r\nreconnectionStrategy: \"CLEAR\"\r\nsyncStrategy: \"INVALIDATE\"\r\nwriteMode: \"WRITE_THROUGH\"\r\ncacheSize: 1000\r\ntimeToLiveInMillis: 0\r\nmaxIdleInMillis: 0\r\n```\r\n"
      },
      {
        "user": "mrniko",
        "created_at": "2018-10-30T09:04:48Z",
        "body": "That config looks correct. What is your concerns about it?"
      },
      {
        "user": "bkoroliuk-amplify",
        "created_at": "2018-10-31T12:15:57Z",
        "body": "@mrniko No concerns, thank you"
      },
      {
        "user": "mrniko",
        "created_at": "2018-10-31T12:16:26Z",
        "body": "@bkoroliuk-amplify \r\n\r\nYou're welcome!"
      }
    ]
  },
  {
    "number": 1687,
    "title": "Default values for local cache in RedissonSpringLocalCachedCacheManager",
    "created_at": "2018-10-23T14:46:37Z",
    "closed_at": "2018-10-24T17:45:39Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/redisson/redisson/issues/1687",
    "body": "What are default values for the mentioned below properties?\r\nAre these values from LocalCachedMapOptions::defaults()?\r\nI see that local caches work, but only ttl, idle and maxSize are defined.\r\n```\r\n localCacheOptions:\r\n    evictionPolicy: \"LRU\"\r\n    reconnectionStrategy: \"CLEAR\"\r\n    syncStrategy: \"UPDATE\"\r\n    writeMode: \"WRITE_THROUGH\"\r\n    cacheSize: 1000\r\n    timeToLiveInMillis: 300000\r\n    maxIdleInMillis: 300000\r\n```",
    "comments_url": "https://api.github.com/repos/redisson/redisson/issues/1687/comments",
    "author": "bkoroliuk-amplify",
    "comments": [
      {
        "user": "mrniko",
        "created_at": "2018-10-24T14:39:26Z",
        "body": "> What are default values for the mentioned below properties?\r\n\r\nevictionPolicy = NONE,\r\nreconnectionStrategy = NONE,\r\nsyncStrategy = INVALIDATE\r\nwriteMode = WRITE_THROUGH\r\ncacheSize = 0\r\ntimeToLiveInMillis = 0\r\nmaxIdleInMillis = 0\r\n\r\n> Are these values from LocalCachedMapOptions::defaults()?\r\n\r\nNo, seems config instance had been changed further in code."
      },
      {
        "user": "bkoroliuk-amplify",
        "created_at": "2018-10-24T17:45:39Z",
        "body": "Oh, I see, thanks for help"
      }
    ]
  }
]