[
  {
    "id": "https://github.com/react-boilerplate/react-boilerplate/issues/596",
    "source": {
      "issue_number": 596
    },
    "initial_question": {
      "title": "Change output DIR and name",
      "body": "Hi there,\n\nIs there are way to change the output directory and filename for the app?\n\nI'm trying to use it as part of a WordPress plugin, and want to standardise filenames\n"
    },
    "satisfaction_conditions": [
      "Application output files can be directed to a custom directory",
      "Output filenames can be customized",
      "Configuration changes persist across builds"
    ],
    "created_at": "2016-06-23T17:26:22Z"
  },
  {
    "id": "https://github.com/react-boilerplate/react-boilerplate/issues/454",
    "source": {
      "issue_number": 454
    },
    "initial_question": {
      "title": "State variables.",
      "body": "Hello. As far as I understand, state is structured in some kind of substates. For example, in sample application there is async  `HomePage` reducer, which adds `home` variable to state (in addition to `global` and `route`). In this  `home` object only username is stored. When you are loading repositories,  you should load data and show spinner while loading (setting `state.global.loading` variable to `true`). \n\nI understand, that `loading` variable should be global for whole application. Because of it, you need to get access in one reducer to both `loading`and `userData.repositories` variables . That is why you handle `LOAD_REPOS` action on application level (in `App/reducer` not in `HomePage/reducer`). And that is why you have to keep HomePage specific info ( `userData.repositories` variable ) in `state.global`, not in `state.home`. Am I right?\n\nIf I am right, let us imagine, that I have some `BlogPage` container (generated by your generator), which adds `blogPage` section in state. I need to retrieve list of blogs from API and show spinner while I am loading it. For that purpose I need something like this:\n\n```\nfunction blogPageReducer(state = initialState, action) {\n  switch (action.type) {\n    case LOAD_BLOGS:\n          return  state.set('loading', true).\n            setIn(['blogData'],['blogs'],false);\n    case BLOGS_LOADED:\n          return state.setIn(['blogData', 'blogs'], action.blogs)\n                      .set('loading', false);\n    default:\n      return state;\n  }\n}\n```\n\n But as I understand, I can not do this, because I do not know, how to get access to `state.global.loading` variable from '`BlogPage/reducer`'. Only  `blogPage` object is passed in reducer function. That is why I also need to handle `LOAD_BLOGS` in `App/reducer` and add my `blogData` object (with list of blogs) in `state.global` object. Is it normal? How can I get access to `state.global.loading` from '`BlogPage/reducer`'? \n"
    },
    "satisfaction_conditions": [
      "Multiple reducers must be able to respond to the same action",
      "Global application state must be accessible when needed",
      "State updates must maintain proper data isolation between components",
      "Loading state changes must be synchronized with data fetch operations",
      "State structure must support both global and component-specific data"
    ],
    "created_at": "2016-06-02T15:58:46Z"
  }
]