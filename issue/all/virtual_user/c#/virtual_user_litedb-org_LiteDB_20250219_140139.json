[
  {
    "id": "https://github.com/litedb-org/LiteDB/issues/2319",
    "source": {
      "issue_number": 2319
    },
    "initial_question": {
      "title": "[QUESTION] Cannot delete using predicate",
      "body": "Tried to search issues and other people seem to have this working but I cannot.\r\n\r\n```\r\npublic void DeletePackage(string identifier)\r\n{\r\n    var db = _database.GetCollection<ExtensionManifest>(\"packages\");\r\n    db.Delete(x => x.Identifier == identifier)\r\n}\r\n```\r\n\r\nError is\r\n```\r\nCS1660\tCannot convert lambda expression to type 'BsonValue' because it is not a delegate type\r\n```"
    },
    "satisfaction_conditions": [
      "Method accepts string parameter and uses it for filtering"
    ],
    "created_at": "2023-05-06T00:46:45Z"
  },
  {
    "id": "https://github.com/litedb-org/LiteDB/issues/2060",
    "source": {
      "issue_number": 2060
    },
    "initial_question": {
      "title": "How to map constructor using fluent mapping",
      "body": "Hi there,\r\n\r\nFirst I want to say that I've searched for a solution, but didn't found one. So, I'm having some difficulty to map a constructor using the fluent mapping. For example, I have a class, \"User\", it have a constructor with 2 parameters, something like `User(string username, ProfileRole profileRole)`. How can I map it using the fluent mapping?"
    },
    "satisfaction_conditions": [
      "Constructor with parameters must be successfully mapped for deserialization",
      "Complex parameter types must be properly deserialized",
      "Mapping configuration must be recognized by LiteDB's serialization system"
    ],
    "created_at": "2021-08-23T11:42:00Z"
  },
  {
    "id": "https://github.com/litedb-org/LiteDB/issues/2054",
    "source": {
      "issue_number": 2054
    },
    "initial_question": {
      "title": "[QUESTION] FIND/QUERY throw exception",
      "body": "I'm a begginer in C#. Just started using LiteDB in one of my project.\r\n\r\nMy class:\r\n```\r\n  public class KeyValueObject\r\n    {\r\n        [BsonId]\r\n        public ObjectId id;\r\n        public string keyName;\r\n        public object dataValue;\r\n        public long lastUpdated;\r\n    }\r\n```\r\nI'm inserting document. It's working fine.\r\n```\r\n        public void Store(string name, object value)\r\n        {\r\n            Console.WriteLine(Collection().Insert(new KeyValueObject { keyName = name,  dataValue = value }).ToString());\r\n        }\r\n```\r\n\r\nI've a problem here, coll.Find thows exception \"Member keyName not found on BsonMapper for type LocalDBStoreLibrary.KeyValueObject.\"\r\n```\r\n   public KeyValueObject Find(string name)\r\n        {\r\n            var coll = Collection();\r\n            var res = coll.FindOne(x => x.keyName == name);\r\n            if (res != null)\r\n                return (KeyValueObject)res;\r\n            else\r\n                return null;\r\n        }\r\n```\r\n\r\nWhat am I missing? How do I solve it?"
    },
    "satisfaction_conditions": [
      "The LiteDB mapper must be configured to handle field-based data members",
      "The existing data model structure using fields must remain functional"
    ],
    "created_at": "2021-08-11T11:02:49Z"
  },
  {
    "id": "https://github.com/litedb-org/LiteDB/issues/2044",
    "source": {
      "issue_number": 2044
    },
    "initial_question": {
      "title": "[QUESTION] does LiteDB support C# 9 record?",
      "body": "C#9 records are finally the immutable type that we needed in C#.\r\nSince it's syntax is game changing, does refit supports serializing/deserializing such objects ?"
    },
    "satisfaction_conditions": [
      "LiteDB must successfully serialize and deserialize C# 9 record objects",
      "Record types must be defined using property syntax rather than primary constructor syntax",
      "Record properties must be defined with get/init accessors",
      "Record class must include a parameterless constructor"
    ],
    "created_at": "2021-07-29T13:55:19Z"
  },
  {
    "id": "https://github.com/litedb-org/LiteDB/issues/1948",
    "source": {
      "issue_number": 1948
    },
    "initial_question": {
      "title": "[QUESTION] How get items filtered by many parameters in Array?",
      "body": "For example there is some shops and they have some products. Every product have array of string parameters.\r\nHow can i selection shops by product parameters? All params must be in one product.\r\n\r\nShop1\r\n{\r\n\t\"_id\" : 1,\r\n\t\"products\":\r\n\t[\r\n\t\t{\r\n\t\t\"name\":phone,\r\n\t\t\"params\":[\"black\",\"small\",\"Germany\"]\r\n\t\t},\r\n\t\t{\r\n\t\t\"name\":tablet \r\n\t\t\"params\":[\"blue\",\"big\",\"China\"]\t\r\n\t\t},\r\n\t\t{\r\n\t\t\"name\":apple \r\n\t\t\"params\":[\"red\",\"big\",\"Sweet\"]\r\n\t\t}\r\n\t]\r\n}\r\nShop2\r\n{\r\n\t\"_id\" : 2,\r\n\t\"products\":\r\n\t[\r\n\t\t{\r\n\t\t\"name\":phone,\r\n\t\t\"params\":[\"green\",\"small\",\"France\"]\r\n\t\t},\r\n\t\t{\r\n\t\t\"name\":book \r\n\t\t\"params\":[\"red\",\"big\",\"China\"]\t\r\n\t\t},\r\n\t\t{\r\n\t\t\"name\":pumpkin \r\n\t\t\"params\":[\"yellow\",\"big\",\"Sweet\"]\r\n\t\t}\r\n\t]\r\n}\t\t\r\n\r\n\r\n\r\nOne shop is one BsonDocument. I make like this:\t\r\n\t\r\nusing (var db = new LiteDatabase(DBname))\r\n{\r\n\tstring Query=products[*].params[*] ANY LIKE('red') AND products[*].params[*] ANY LIKE('sweet');\r\n\tdb.GetCollection(Name).Find(BsonExpression.Create(Query)));\r\n}\t\t\r\n\r\nI get result Shop1 and Shop2.\r\nIn shop 1 red and sweet is apple. in shop 2 red is book, sweet is pumpkin.\r\nBUT I want get only Shop1 with apple, where all params is in one product.\r\nSomething like this:\r\n\r\nstring Query=products[*].params[*] ANY (LIKE('red') AND LIKE('sweet'));\t"
    },
    "satisfaction_conditions": [
      "Query must return only shops where all specified parameters exist within the SAME product",
      "Query must support multiple parameter matching within an array field",
      "Query results must filter at the shop document level"
    ],
    "created_at": "2021-02-28T21:33:57Z"
  },
  {
    "id": "https://github.com/litedb-org/LiteDB/issues/1941",
    "source": {
      "issue_number": 1941
    },
    "initial_question": {
      "title": "int Upsert(IEnumerable<T> entities);",
      "body": "Hi, \r\n\r\nShall this method return the number of records either inserted or updated successfully ? \r\nI detect a 0 return value meanwhile a record updated. "
    },
    "satisfaction_conditions": [
      "Method returns an integer value that accurately reflects the number of newly inserted records only",
      "Return value of 0 is valid when only updates occur",
      "Method must handle both insert and update operations for the provided entities",
      "Method must process all entities in the provided IEnumerable<T>"
    ],
    "created_at": "2021-02-23T10:49:22Z"
  },
  {
    "id": "https://github.com/litedb-org/LiteDB/issues/1875",
    "source": {
      "issue_number": 1875
    },
    "initial_question": {
      "title": "How to query by GUID field",
      "body": "For example\r\n\r\npublic class Test\r\n{\r\n  public Guid Key {get; set;}\r\n}\r\n\r\nTest test = new Test() { Key = new Guid(\"1eb2c168-ea2c-4692-b492-1309671c093a\") }\r\n\r\nI've tried to query the collection using the expression $.Key = '1eb2c168-ea2c-4692-b492-1309671c093a' but this returns no records.\r\n\r\nIs there a special syntax required to query GUID columns?\r\n\r\nThanks\r\n\r\n\r\n"
    },
    "satisfaction_conditions": [
      "Query syntax correctly handles GUID data type",
      "Query syntax maintains GUID type integrity",
      "Query accepts GUID values in standard format"
    ],
    "created_at": "2020-11-17T08:28:50Z"
  },
  {
    "id": "https://github.com/litedb-org/LiteDB/issues/1842",
    "source": {
      "issue_number": 1842
    },
    "initial_question": {
      "title": "[QUESTION] How do you DeleteMany efficiently",
      "body": "I've looked through the documentation and there is a lot of information about querying and indexes to query things efficiently, but I don't see a lot of information about deleting things efficiently.\r\n\r\nI'm trying to DeleteMany from a LiteDb database, but even relatively small deletes of 3000 items takes 10-20 seconds. Right now I am just experimenting with smaller data sets, but I plan to scale things up to much larger data sets, but I'm concerned that if the performance scales as well, then some of my deletion operations may take 30 minutes or more.\r\n\r\nI'm trying to make a generic database implementation using LiteDB, and below is the code that I'm using for deleting from the database\r\n\r\n```csharp\r\npublic void Delete<T>(IEnumerable<T> items)\r\n{\r\n    //Gets the collection name based on type. Will throw an exception if we don't support the type used.\r\n    var collectionName = getCollectionNameAndThrowIfNotSupported<T>();\r\n    //Gets the connection string. We are only specifying Filename, ReadOnly, and the Connection is shared\r\n    var connectionString = getConnectionString(read_only: false);\r\n    using (var db = new LiteDatabase(connectionString))\r\n    {\r\n        var collectionExists = db.CollectionExists(collectionName);\r\n        if (!collectionExists)\r\n            return; //no collection exists, so there is nothing to delete\r\n\r\n        //converting items to a hash set to help find matches more quickly\r\n        var hashedItems = items.ToHashSet();\r\n\r\n        var collection = db.GetCollection<T>(collectionName);\r\n        //This is the line that I have the most questions about. Is there a better way of writing this line to be more efficient?\r\n        collection.DeleteMany(x => hashedItems.Contains(x));\r\n    }\r\n}\r\n``` \r\n\r\nI thought that `Contains` would check if the items are equal, and for my objects that are being stored in LiteDb I am overriding `Equals` and `GetHashCode` and for two items to be equal I am only checking if the `ObjectId`s are equal.\r\n\r\nFrom the documentation it would appear that if you have an `ObjectId Id` that this will automatically get indexed, but am I missing something in my `DeleteMany` predicate that would help take advantage of indexes? Is there something that can be done to make this process faster?"
    },
    "satisfaction_conditions": [
      "Delete operation execution time decreases significantly compared to original implementation",
      "Delete operation maintains data integrity when removing multiple items",
      "Delete operation properly handles object identification",
      "Operation maintains transactional consistency"
    ],
    "created_at": "2020-10-12T21:17:59Z"
  },
  {
    "id": "https://github.com/litedb-org/LiteDB/issues/1820",
    "source": {
      "issue_number": 1820
    },
    "initial_question": {
      "title": "Can't delete a specific document in V4.1.4",
      "body": "I have a collection with several documents I can't delete using Collection.Delete whether I delete by bson id or query.\r\n\r\nFor these certain documents I get KeyNotFoundException errors.\r\n\r\nI also tried deleting these documents from LiteDB.Shell.exe and LiteDB Viewer, get the same error and it crashes the tools.\r\n\r\nThese same documents are returned in queries and otherwise behave like normal object documents.\r\n\r\nI can somewhat work around it but would really like to delete them.\r\n\r\nI'm looking for a recommendation on a quick work around.\r\n\r\nI suppose I could exclude select these documents drop and copy the good docs to a new instance of the collection. But would not want to have to do that all the time or codify it. \r\n\r\nNote: I just downgraded to V4 to eliminate file locking issues from a network file share in V5. In V5 after upgrading the db file from V4, I had no problems deleting these same documents using DeleteMany in V5."
    },
    "satisfaction_conditions": [
      "Problem documents become deletable after database maintenance",
      "Database maintains data integrity after fix",
      "Solution works within V4.1.4 constraints",
      "Fix can be applied without requiring database recreation",
      "KeyNotFoundException errors are resolved"
    ],
    "created_at": "2020-09-16T21:40:22Z"
  },
  {
    "id": "https://github.com/litedb-org/LiteDB/issues/1802",
    "source": {
      "issue_number": 1802
    },
    "initial_question": {
      "title": "[QUESTION] Setting Subdocument fields in a Query",
      "body": "I want to change values in a subdocument field from null to empty strings and here's my Query in LiteDB Studio.\r\n\r\n```\r\nUPDATE\r\nusers\r\nSET\r\nCharacter.AppTransactions = \"\"\r\nWHERE\r\nCharacter.AppTransactions = null\r\n```\r\n\r\nBut I get this error\r\n```\r\nUnexpected token `.` in position 29.\r\n\r\nUPDATE  users  SET  Character.AppTransaction\r\n-----------------------------^\r\n```\r\n\r\nSeems we are unable to use valid JSON paths to update subdocuments? Is there a Query that would let me do this operation?\r\n\r\nThanks\r\nBenz"
    },
    "satisfaction_conditions": [
      "Query successfully updates subdocument fields from null to empty string",
      "Query syntax is compatible with LiteDB's subdocument update rules",
      "Original document structure is preserved",
      "Query correctly identifies documents where the subdocument field is null"
    ],
    "created_at": "2020-08-26T08:29:39Z"
  },
  {
    "id": "https://github.com/litedb-org/LiteDB/issues/1794",
    "source": {
      "issue_number": 1794
    },
    "initial_question": {
      "title": "[QUESTION] Object reference error. Am I doing something wrong?",
      "body": "This is my code, written for a Discord bot:\r\n```cs\r\nusing (var db = new LiteDatabase(@\"database\\Profile.db\"))\r\n                {\r\n                    var collection = db.GetCollection<Profile>(\"Profile\");\r\n                    long? result = collection.FindOne(x => x.userId == Context.User.Id).gold;\r\n                    if (result != null)\r\n                    {\r\n                        await Context.Channel.SendMessageAsync($\"You have {result.Value.ToString(\"N0\")}G.\");\r\n                    }\r\n                    else\r\n                    {\r\n                        await Context.Channel.SendMessageAsync($\"You aren't registered. Write `!register` to start!\");\r\n                    }\r\n                }\r\n```\r\nIf there are no results found the program throws an \"Object reference not set to an instance of an object.\" (`System.NullReferenceException`) error.\r\nWhat am I doing wrong?\r\n\r\nThanks,\r\nb1sergiu"
    },
    "satisfaction_conditions": [
      "No NullReferenceException occurs when no matching profile is found",
      "Correct message flow is maintained for both existing and non-existing profiles",
      "Profile's gold value is safely accessed only when profile exists",
      "Database query results are properly null-checked"
    ],
    "created_at": "2020-08-18T10:34:08Z"
  },
  {
    "id": "https://github.com/litedb-org/LiteDB/issues/1779",
    "source": {
      "issue_number": 1779
    },
    "initial_question": {
      "title": "[QUESTION] Get collection size or how can calculate the collection size Version 5",
      "body": "Hello,\r\n\r\ngive a function how can read the collection size out of the box?\r\n\r\nor\r\n\r\nHow can the calculate this? \r\nIn the version 4 i have claculate this about the singel documents with \"GetBytesCount(true)\" but this is not working on liteDB 5.\r\n\r\nI switch liteDB 4.1.4 to 5.0.8.\r\n\r\nHave you an Idee? Thank you\r\n"
    },
    "satisfaction_conditions": [
      "Returns the total storage size of a specified collection",
      "Distinguishes between data and index storage",
      "Works with LiteDB version 5.x",
      "Returns size measurement in bytes"
    ],
    "created_at": "2020-08-06T14:45:47Z"
  },
  {
    "id": "https://github.com/litedb-org/LiteDB/issues/1769",
    "source": {
      "issue_number": 1769
    },
    "initial_question": {
      "title": "Upgraded from V4 to V4 - simple Find(Query.All()) stopped working",
      "body": "Searched for this but found nothing.\r\n\r\nProblem:\r\n\r\nThis works fine in V4, fails to produce usable results in V5. \r\n\r\nThis pretty basic operation has been upgraded to V5. Data file has been upgraded using LiteDB Studio.\r\n\r\n               using (var db = new LiteDatabase(@ConfigDBConnection))\r\n                {\r\n                    var items = db.GetCollection<Item>(collection);\r\n\r\n                    var results = items.Find(Query.All());\r\n\r\n                }\r\n\r\nNew LiteDatabase produces what looks like a valid LiteDB.LiteDatabase reference.\r\n\r\nGetCollection returns a seemingly valid object reference to the right type: \"LiteDB.LiteCollection<AIMFacTool.Item>\"\r\n\r\nV5 Query.All produces an unusable \"System.Linq.Enumerable.WhereSelectEnumerableIterator<LiteDB.BsonDocument, AIMFacTool.Item>\" and an error in the ResultsView of \"Error The function evaluation requires all threads to run.\"\r\n\r\nWhereas V4 produces a usable \"LiteDB.LiteCollection<AIMFacTool.Item>\" object.\r\n\r\nI am hoping there is a workaround or alternative I can use, otherwise I will have to revert back to V4.\r\n\r\nAm looking forward to using LiteDB Studio though so I am keeping my hopes up that this is an easy fix.\r\n\r\nThanks in advance for your help.\r\n"
    },
    "satisfaction_conditions": [
      "Query results must be accessible and iterable in the application code",
      "Code must execute without errors when running outside the debugger",
      "Query functionality must maintain compatibility with existing data after upgrade",
      "Results must contain all expected records from the collection"
    ],
    "created_at": "2020-07-29T20:42:08Z"
  },
  {
    "id": "https://github.com/litedb-org/LiteDB/issues/1767",
    "source": {
      "issue_number": 1767
    },
    "initial_question": {
      "title": "Just upgraded a project from V4 to latest V5 getting \"Cannot convert lambda expression to type 'BsonValue' because it is not a delegate type\"",
      "body": "I just upgraded a C# project reference from LiteDB 4 to latest v5.0.8. First converted data file using LiteDB Studio. Still worked.\r\n\r\nChange the C# project reference to v5 and now get a compiler error:\r\n\r\n\"Cannot convert lambda expression to type 'BsonValue' because it is not a delegate type\"\r\n\r\non this Collection Delete method statement that was previously working.\r\n\r\n`using (var db = new LiteDatabase(@DBConnection))\r\n{\r\n                    var requests = db.GetCollection<Request>(\"Request\");\r\n                    requests.Delete(x => x.CreateDate < deletedate);                    \r\n }`\r\n\r\nI'm not an expert in Lambda, LINQ or BSON.\r\n\r\nDidn't find any obvious answers.\r\n\r\nI'm looking for an easy fix. Please advise. Thx."
    },
    "satisfaction_conditions": [
      "Code successfully deletes records matching specified criteria",
      "Code compiles without BsonValue type conversion errors",
      "Solution maintains compatibility with LiteDB v5",
      "Existing data structure and types remain unchanged"
    ],
    "created_at": "2020-07-28T18:11:40Z"
  },
  {
    "id": "https://github.com/litedb-org/LiteDB/issues/1757",
    "source": {
      "issue_number": 1757
    },
    "initial_question": {
      "title": "How can i get the autoid from a poco record",
      "body": "Hi,\r\nI have a class:\r\npublic class x\r\n{\r\npublic string a {get;set;}\r\npublic string b {get;set;}\r\n}\r\n\r\ninsertion is:\r\nx record = new x();\r\nrecord.a=\"a\";\r\nrecord.b =\"b\";\r\nILiteCollection<x> collection = db.GetCollection<x>(\"records\");\r\ncollection.Insert(record);\r\n\r\nget records:\r\nILiteCollection<x> collection = db.GetCollection<x>(\"records\");\r\nList<x> records = collection.FindAll().ToList();\r\nforeach (x record in records)\r\n{\r\nDebug(x.a); // fine\r\nDebug(x.b); // fine\r\n\r\nBsonValue id;\r\n// how can i get the id for delete the record?\r\n\r\n//collection.delete(id);\r\n}\r\n\r\nthx"
    },
    "satisfaction_conditions": [
      "Record must be uniquely identifiable for deletion",
      "Deletion operation must be able to execute successfully",
      "Solution must work within LiteDB's document storage model",
      "Record identification method must persist across queries"
    ],
    "created_at": "2020-07-16T10:13:22Z"
  },
  {
    "id": "https://github.com/litedb-org/LiteDB/issues/1743",
    "source": {
      "issue_number": 1743
    },
    "initial_question": {
      "title": "[QUESTION] Accessing nested objects in LiteDB v5",
      "body": "Refer #1926 - not resolved "
    },
    "satisfaction_conditions": [
      "Property data is accessible after retrieval from database",
      "Object mapping configuration allows nested object deserialization",
      "Data integrity is maintained between storage and retrieval",
      "Solution is compatible with LiteDB v5's object mapping system"
    ],
    "created_at": "2020-07-03T06:16:59Z"
  },
  {
    "id": "https://github.com/litedb-org/LiteDB/issues/1717",
    "source": {
      "issue_number": 1717
    },
    "initial_question": {
      "title": "[QUESTION] How to see how much space a particular collection takes?",
      "body": "How to see how much space a particular collection takes? And what is the place occupied in general, if it is not a collection."
    },
    "satisfaction_conditions": [
      "Returns accurate storage space measurement for a specified collection",
      "Provides results in a measurable unit of storage",
      "Can identify and measure specific named collections"
    ],
    "created_at": "2020-06-10T11:01:13Z"
  },
  {
    "id": "https://github.com/litedb-org/LiteDB/issues/1716",
    "source": {
      "issue_number": 1716
    },
    "initial_question": {
      "title": "[QUESTION] LiteDb v5 Query Api Group By Issue",
      "body": "Hi!\r\nI am trying to execute a LiteDB (v5) query but facing the problem with Group By.\r\n\r\nI am building my expression in C# like that:\r\nvar r1 = collection.Query()\r\n\t\t        .GroupBy(\"Age\")\r\n\t\t        .Select(\"{Key: @Key,Max: Max(Id)}\").\r\n\t\t        ToArray();\r\nHere I want to get the maximum Id of the person in each age group.\r\n\r\nIt results in the following SQL:\r\n\r\nSELECT {Key:@Key,Max:MAX($.Id)}\r\nFROM Person\r\nGROUP BY $.Age\r\n\r\nHowever, the engine throws this exception:\r\n\r\n'Field 'Id' is invalid in the select list because it is not contained in either an aggregate function or the GROUP BY clause.'\r\n\r\nCould you please explain how to use aggregate functions with Group By?\r\n\r\nI was able to use only Count(*) or Max(@Key).\r\n\r\nPS. I thought I might need to use 'Include' function to add the Id field into the groups, but GROUP BY doesn't allow me to do it.\r\n"
    },
    "satisfaction_conditions": [
      "Query successfully executes GROUP BY with aggregate function on non-grouped field",
      "Query returns maximum Id value for each age group",
      "Syntax follows LiteDB v5's query syntax rules",
      "Query maintains proper reference to fields within aggregate functions"
    ],
    "created_at": "2020-06-09T23:41:33Z"
  },
  {
    "id": "https://github.com/litedb-org/LiteDB/issues/1696",
    "source": {
      "issue_number": 1696
    },
    "initial_question": {
      "title": "[QUESTION] EnsureIndex on empty collection",
      "body": "Is it OK to call EnsureIndex on empty collection - at database creation time, to register index fields, or there must be at least one data entry in collection?"
    },
    "satisfaction_conditions": [
      "Index creation succeeds on empty collection",
      "Collection is created if non-existent"
    ],
    "created_at": "2020-05-27T13:02:14Z"
  },
  {
    "id": "https://github.com/litedb-org/LiteDB/issues/1674",
    "source": {
      "issue_number": 1674
    },
    "initial_question": {
      "title": "[QUESTION] POCO classes having a Guid Id",
      "body": "Most of the data I'm dealing with has a Guid as unique identifier. When I'm trying to add an object that has a property called Id of type System.Guid to LiteDB I'm stopped by \r\n\r\n> System.InvalidCastException: 'Unable to cast object of type 'System.Guid' to type 'System.Int32'.'\r\n\r\nIs there any way to get this done? I can't change the object model."
    },
    "satisfaction_conditions": [
      "The system must successfully store objects containing Guid type Id fields in LiteDB",
      "The return value from Insert operation must be handled with the correct data type",
      "The original object model must remain unchanged",
      "The Id field must be properly indexed in the database"
    ],
    "created_at": "2020-05-08T14:29:25Z"
  },
  {
    "id": "https://github.com/litedb-org/LiteDB/issues/1666",
    "source": {
      "issue_number": 1666
    },
    "initial_question": {
      "title": "Selection a random document from a collection",
      "body": "Hello,\r\nI am quite new to LiteDB, but my first impression is enthusiastic. I am trying to investigate its capabilities, which is not always easy, since the documentation is still somewhat sparse.\r\nMy first issue is as follows: I need to select random elements from a collection, how can I do it? The Query class does not seem to provide for such a possibility, is there any (in SQLite I would use ORDER BY RANDOM or so)?\r\nThanks, F."
    },
    "satisfaction_conditions": [
      "Returns a single random document from the collection",
      "Distribution appears random across multiple executions",
      "Works with existing LiteDB collection",
      "Returns null/default when collection is empty"
    ],
    "created_at": "2020-05-02T19:44:00Z"
  },
  {
    "id": "https://github.com/litedb-org/LiteDB/issues/1659",
    "source": {
      "issue_number": 1659
    },
    "initial_question": {
      "title": "[QUESTION] How to create a query/expression with a NOT clause",
      "body": "In LiteDB v4 you could construct a query (using the API) like the following:\r\n\r\n`\r\nvar query = Query.Not(someOtherQuery);\r\n`\r\n\r\nIn LiteDB v5 that option no longer exists.  Is there a method that I am missing that replaces that functionality?  I would have expected to see something like this:\r\n\r\n`\r\nvar bsonExpression = Query.Not(someOtherBsonExpression);\r\n`\r\n"
    },
    "satisfaction_conditions": [
      "Expression produces logical negation of the original query",
      "Expression is compatible with LiteDB v5 syntax",
      "Expression accepts existing BsonExpressions as input"
    ],
    "created_at": "2020-04-27T21:57:15Z"
  },
  {
    "id": "https://github.com/litedb-org/LiteDB/issues/1655",
    "source": {
      "issue_number": 1655
    },
    "initial_question": {
      "title": "[QUESTION] How to properly delete file from filestorage so that db size also reduces?",
      "body": "Currently when i delete file stored in filestorage, the size of db file does not reduce. I use code as below for\r\n```\r\npublic bool deleteById(string id)\r\n        {\r\n            using (var flowDB = new LiteDatabase(dbName))\r\n            {\r\n                // first delete any files stored for this\r\n                flowDB.BeginTrans();\r\n                var col = flowDB.GetCollection<FlowFileModel>(COLLECTION_NAME);\r\n                var result = col.Find(x => x.Id == id).First<FlowFileModel>();\r\n                flowDB.FileStorage.Delete(result.StoredFileId);\r\n                flowDB.Commit();\r\n\r\n                // delete the object\r\n                var ret = flowDB.GetCollection<FlowFileModel>(COLLECTION_NAME)\r\n                               .Delete(id);\r\n                return ret;\r\n            }\r\n        }\r\n```\r\n\r\nNow the issue is when i see the objects and associated file in LiteDB studio it is gone. But after closing the application the db size remains as it was with file before. Am i missing something?"
    },
    "satisfaction_conditions": [
      "File is no longer accessible through database queries",
      "Changes persist after application restart",
      "Database maintains integrity during deletion process"
    ],
    "created_at": "2020-04-25T15:20:23Z"
  },
  {
    "id": "https://github.com/litedb-org/LiteDB/issues/1646",
    "source": {
      "issue_number": 1646
    },
    "initial_question": {
      "title": "In memory database with encryption, persisting to file system",
      "body": "I want to use LiteDB to create an in-memory database with encryption and once it has been build I want to persist it to disk.\r\n\r\nIf I use a memorystream to persist it, I cannot specify a password.\r\nIf I use :memory: to create it, I cannot persist it.\r\n\r\nAny hints on how to do this ?"
    },
    "satisfaction_conditions": [
      "Database must be initially created in memory",
      "Database content must be encrypted",
      "Database must be persistable to the file system",
      "Encryption must be maintained when persisting to disk",
      "Database operations must be possible while in memory"
    ],
    "created_at": "2020-04-21T07:51:26Z"
  },
  {
    "id": "https://github.com/litedb-org/LiteDB/issues/1643",
    "source": {
      "issue_number": 1643
    },
    "initial_question": {
      "title": "[QUESTION]",
      "body": " I'm a newbie in LiteDB. I make an asp.net mvc project to interact with a LiteDB file. All function is ok, but the data only save in DB-log.db file. DB.db file don't change. \r\n Please help me how to commit data from log file to main db file.\r\n Thanks!"
    },
    "satisfaction_conditions": [
      "Data must be successfully transferred from log file to main database file",
      "Database checkpoint operation must complete successfully",
      "Solution works within normal application operation"
    ],
    "created_at": "2020-04-20T06:16:04Z"
  },
  {
    "id": "https://github.com/litedb-org/LiteDB/issues/1625",
    "source": {
      "issue_number": 1625
    },
    "initial_question": {
      "title": "How filter result by reference column?",
      "body": "Hi.\r\nThis is not work:\r\n\r\n`var result = db.GetCollection<Product>(\"products\").Include(x => x.Category).Find(x => x.Category.Id == 14).ToList();`\r\n\r\nI receive empty result. \r\nThis work:\r\n\r\n`var result = db.GetCollection<Product>(\"products\").Include(x => x.Category).FindAll().Where(x => x.Category.Id == 14).ToList();`\r\n\r\nWhat I am doing wrong? How to filter products by category?\r\n```\r\n[BsonRef(\"categories\")]\r\npublic Category Category { get; set; }\r\n```"
    },
    "satisfaction_conditions": [
      "Database queries with reference filtering must return correct results regardless of using Include()",
      "Reference relationships in the database must be properly maintained",
      "Query performance should be optimized",
      "Database schema must correctly reflect the intended data model"
    ],
    "created_at": "2020-04-11T20:08:56Z"
  },
  {
    "id": "https://github.com/litedb-org/LiteDB/issues/1620",
    "source": {
      "issue_number": 1620
    },
    "initial_question": {
      "title": "[QUESTION] How can I store an array of strings in this database?",
      "body": "I don`t wanna create new class to do this. \r\nI need fast way to store and read array of strings and nothing else.\r\n\r\nIs there a method to do this?\r\nIf not, are there plans to add?\r\n\r\n"
    },
    "satisfaction_conditions": [
      "Must store multiple string values in the database without requiring a custom class definition",
      "Must provide both write and read operations for the string array data",
      "Must maintain data persistence between program executions",
      "Must handle multiple strings as discrete elements that can be retrieved individually",
      "Must provide a simple, direct interface for data operations"
    ],
    "created_at": "2020-04-07T18:34:05Z"
  },
  {
    "id": "https://github.com/litedb-org/LiteDB/issues/1594",
    "source": {
      "issue_number": 1594
    },
    "initial_question": {
      "title": "[QUESTION] How do you load a encrypted db from System.IO.Stream?",
      "body": "First of all, thank you, LiteDB is AWESOME!!\r\n\r\nI have a database in a dll stored as an EmbeddedResource. It is encrypted with a password.\r\nHow do I load it as a stream and pass it the password?.\r\n\r\nIf it is a file from disk, I can do this:\r\n``` csharp\r\nvar connectionString=\"Filename=C:\\database.db;Password=1234\";\r\nvar db = new LiteDatabase(connectionString);\r\n```\r\nBut I want to stream the EmbeddedResource directly without copying it to disk.\r\n```csharp\r\nvar stream = GetAssembly().GetManifestResourceStream(\"MyApp.database.db\");\r\nvar db = new LiteDatabase(stream); // how do I specify the password???\r\n```"
    },
    "satisfaction_conditions": [
      "Database stream must be successfully decrypted using provided password",
      "Database must be loaded directly from embedded resource stream without disk operations",
      "LiteDB instance must be successfully initialized from the decrypted stream",
      "Solution must maintain compatibility with encrypted database format"
    ],
    "created_at": "2020-03-27T14:46:55Z"
  },
  {
    "id": "https://github.com/litedb-org/LiteDB/issues/1584",
    "source": {
      "issue_number": 1584
    },
    "initial_question": {
      "title": "[QUESTION] How do I fetch a list of KeyValuePair from db?",
      "body": "For example I have `List<KeyValuePair<string, Rectangle>> listName` that I can write and update in the db. When I am checking with LiteStudio I can see that the list has been written correctly but when I fetch the list i get the number of elements in the list but the Key and the Value are empty"
    },
    "satisfaction_conditions": [
      "Collection element count matches stored data"
    ],
    "created_at": "2020-03-21T20:48:12Z"
  },
  {
    "id": "https://github.com/litedb-org/LiteDB/issues/1579",
    "source": {
      "issue_number": 1579
    },
    "initial_question": {
      "title": "[QUESTION] How to Backup a LiteDB",
      "body": "May I know how to backup a LiteDB?\r\nOr 'rollback' to previously commits.\r\nOr use Export json file is the best option?\r\n\r\n(Because I am inserting data to LiteDB. But sometimes I just insert some improper JSON...)\r\n\r\nThanks!"
    },
    "satisfaction_conditions": [
      "Database file integrity is maintained during backup",
      "Backup can be performed without data loss",
      "Active database operations are properly handled during backup",
      "Database is in a consistent state before backup"
    ],
    "created_at": "2020-03-19T02:13:17Z"
  },
  {
    "id": "https://github.com/litedb-org/LiteDB/issues/1573",
    "source": {
      "issue_number": 1573
    },
    "initial_question": {
      "title": "Filtering on child field using substring",
      "body": "Hello,\r\n\r\nWhen I execute the following SQL which filters documents on a parent field, the query seems to get the correct result.\r\n\r\nselect $ from Patients WHERE substring($.nameFirst,0,1) ALL = 'd'\r\n\r\nHowever, when I use the following SQL on a child field using substring I do not get any result.\r\n \r\nselect $ from Patients WHERE substring($.Tumors[*].dateOfDiagnosis,0,4) ALL = '2018'\r\n\r\nWhat am I doing wrong?"
    },
    "satisfaction_conditions": [
      "Query must correctly handle array/collection fields",
      "Query must successfully filter based on year prefix matching",
      "Query syntax must be compatible with the database's handling of array fields"
    ],
    "created_at": "2020-03-15T19:35:16Z"
  },
  {
    "id": "https://github.com/litedb-org/LiteDB/issues/1572",
    "source": {
      "issue_number": 1572
    },
    "initial_question": {
      "title": "IN() in SQL",
      "body": "Hello,\r\n\r\nI found that the following executes fine \r\n\r\nselect $ from Patients WHERE $.Tumors[*].primarySite ALL  IN ('C447')\r\n\r\nHowever, if I add more values to the list like this I get syntax error on the comma separating the values. \r\n\r\nselect $ from Patients WHERE $.Tumors[*].primarySite ALL  IN ('C447','C500')\r\n\r\nWhat is the correct syntax for specifying a list of values? "
    },
    "satisfaction_conditions": [
      "Query syntax accepts multiple values in the IN clause",
      "Query maintains the ALL comparison functionality",
      "Query successfully executes without syntax errors"
    ],
    "created_at": "2020-03-15T10:53:51Z"
  },
  {
    "id": "https://github.com/litedb-org/LiteDB/issues/1555",
    "source": {
      "issue_number": 1555
    },
    "initial_question": {
      "title": "[QUESTION] Any API to include data on deployment",
      "body": "```\r\npublic class Customer\r\n{\r\n    public ObjectId CustomerId { get; set; }\r\n    public CustomerType type  { get; set; }\r\n    public string Name { get; set; }\r\n    public DateTime CreateDate { get; set; }\r\n    public List<Phone> Phones { get; set; }\r\n    public bool IsActive { get; set; }\r\n}\r\n\r\npublic class CustomerType\r\n{\r\n    public ObjectId Id { get; set; }\r\n    public string Type{ get; set; }\r\n\r\n}\r\n```\r\n\r\nI wanted to include default data for Customer type while deploying the WPF app. Any API for that?\r\nId Type\r\n1 Loyal\r\n2 Normal\r\n\r\n\r\n"
    },
    "satisfaction_conditions": [
      "Default CustomerType data must be available when application first runs",
      "Data persistence must prevent duplicate initialization"
    ],
    "created_at": "2020-03-11T06:49:14Z"
  },
  {
    "id": "https://github.com/litedb-org/LiteDB/issues/1528",
    "source": {
      "issue_number": 1528
    },
    "initial_question": {
      "title": "[QUESTION]",
      "body": "In version 4.x, I used the function GetIndexes() of the LiteCollection<T> to view the existing indexes. This allowed me to view the existing indexes and drop them automatically if the where absolute in older collections.\r\nBut in version 5 this functionality is missing in the ILiteCollection<T>. Is there a way to get the existing indexes (I only need the names of the indexes)?"
    },
    "satisfaction_conditions": [
      "Access to index metadata must be provided",
      "Index names must be retrievable",
      "Solution must work with LiteDB version 5",
      "Index information must be queryable by collection"
    ],
    "created_at": "2020-03-03T09:29:09Z"
  },
  {
    "id": "https://github.com/litedb-org/LiteDB/issues/1484",
    "source": {
      "issue_number": 1484
    },
    "initial_question": {
      "title": "[QUESTION] How to filter by referenced collection primary key?",
      "body": "Let's take next relation\r\n```csharp\r\nclass Child\r\n{\r\n   int Id {get;set;}\r\n}\r\nclass Owner\r\n{\r\n    int Id {get;set;}\r\n    Child Child {get;set;}\r\n}\r\n```\r\nWhich is registered in next way\r\n```csharp\r\nDatabase.Mapper.Entity<Child>()\r\n     .Id(e => e.Id, false);\r\nDatabase.Mapper.Entity<Owner>()\r\n     .DbRef(e => e.Child)\r\n     .Id(e => e.Id, false);\r\n```\r\nOn this point I understand, Owner document will contain only id of child document.\r\nBut how should I filter Owner documents by Child id?\r\nI can use next code:\r\n```csharp\r\nCollection\r\n    .Include(o => o.Child)\r\n    .Find(Query.EQ($\"{nameof(Owner.Child)}.{nameof(Child.Id)}\", new BsonValue(idValue))))\r\n```\r\nBut is it the best way to do filter by referenced document id? Because code above requires Include, when I don't really need child document, except of Id.\r\nAlso, how should I ensure index for it?\r\n\r\nThanks.\r\n"
    },
    "satisfaction_conditions": [
      "Query successfully filters Owner documents by Child ID",
      "Query executes without requiring Child document inclusion",
      "Query maintains correct relationship between Owner and Child entities",
      "Query syntax is compatible with the existing database mapping configuration"
    ],
    "created_at": "2020-02-16T22:23:51Z"
  },
  {
    "id": "https://github.com/litedb-org/LiteDB/issues/1477",
    "source": {
      "issue_number": 1477
    },
    "initial_question": {
      "title": "[QUESTION] Delete after upgrade to 5.X",
      "body": "With version 4.X I was able to delete entries with:\r\n\r\ncol.Delete(Query.EQ(\"_id\", toDelete.Id));\r\n\r\nThis doesn't work with 5.X. So what is the best approach with 5.X to delete records? I didn't find anything in the documentation?"
    },
    "satisfaction_conditions": [
      "Records can be deleted using their ID value",
      "Multiple deletion methods are supported",
      "Deletion operations successfully reduce collection count",
      "Deletion can be performed using predicates or queries"
    ],
    "created_at": "2020-02-14T11:02:00Z"
  },
  {
    "id": "https://github.com/litedb-org/LiteDB/issues/1474",
    "source": {
      "issue_number": 1474
    },
    "initial_question": {
      "title": "[QUESTION] Using Memory Stream in v5",
      "body": "Hi,\r\n\r\nWith migration to v5 there are some breaking changes (there is no Shrink method, no access to Engine etc) and there is no documentation how to migrate from v4.\r\nIn v4, I used MemoryStream to load data from file and pass it to the LiteRepository, and after when I finished working with LiteDB I was saving the MemoryStream to disk as byte array in a file. And afterwards when reloading the MemoryStream from the file, the LiteDB contained my objects.\r\nNow, it seems that MemoryStream does not contains all data necessary to recreate the LiteRepository the next time when it is reloaded from disk. The way that is used to use LiteDB is not longer valid?\r\n\r\nHow can I retrieve the Data that is stored in the LiteRepository (initialized by MemoryStream) and save it on disk? "
    },
    "satisfaction_conditions": [
      "Database state must be complete when saved to disk",
      "Memory stream handling must account for WAL (Write-Ahead Logging)",
      "Database instances must maintain data consistency when accessing the same stream",
      "All database changes must be properly checkpointed before saving"
    ],
    "created_at": "2020-02-13T17:45:07Z"
  },
  {
    "id": "https://github.com/litedb-org/LiteDB/issues/1462",
    "source": {
      "issue_number": 1462
    },
    "initial_question": {
      "title": "[QUESTION] disable creation of LiteDB-log",
      "body": "when I create a database (let's call him \"DB\"), it's created me a file DB.db and DB-log.db.\r\nhow I can create a database without the log file?\r\n\r\nthe c# code is:\r\n`var db = new LiteDatabase(@\"DB.db\");`"
    },
    "satisfaction_conditions": [
      "Database operations maintain ACID compliance"
    ],
    "created_at": "2020-02-10T11:50:40Z"
  },
  {
    "id": "https://github.com/litedb-org/LiteDB/issues/1453",
    "source": {
      "issue_number": 1453
    },
    "initial_question": {
      "title": "[QUESTION] How to correctly set a shared connection?",
      "body": "Hi all, I am on v5.0.1 and I don't understand how to set the connection as shared. I have tried with both Mode=Shared and Connection=Shared but if I open the database in LiteDB Studio and then in my app or the opposite, I receive an exception stating that the file is already opened in another process.\r\n\r\nCan you tell me what is the correct way of setting the connection as shared?\r\nThanks in advance"
    },
    "satisfaction_conditions": [
      "Connection mode must be properly configured for shared access"
    ],
    "created_at": "2020-02-08T21:13:07Z"
  },
  {
    "id": "https://github.com/litedb-org/LiteDB/issues/1450",
    "source": {
      "issue_number": 1450
    },
    "initial_question": {
      "title": "[QUESTION] What's the equivalent for db.GetCollection<Command>(\"commands\").Include(new string[] { \"$.Package\", \"$.Command\", \"$.Command.Package\" }) in version 5?",
      "body": "Hi there!\r\n\r\nI have migrated LiteDB from version 4 to 5 and face the problem that `Include()` doesnt' accept a string **ARRAY** argument anymore.\r\n\r\nSo far, I have used\r\n`db.GetCollection<Command>(\"commands\").Include(new string[] { \"$.Package\", \"$.Command\", \"$.Command.Package\" })`\r\n\r\n`Command` is an abstract class and there are different implementations of it. I save all of them in one collection. Some of them have DBRefs to other objects, some of them have not. That's the reason why I cannot use\r\n\r\n`db.GetCollection<Command>(\"commands\").Include(t => t.Package)`\r\n\r\nbecause the abstract class `Command` does not have a `Package` property.\r\n\r\nWhat's the correct way in version 5 to include the DbRefs (and even nested DBRefs) in this scenario with abstract classes?\r\n\r\nLooking forward to your answer. Thank you!"
    },
    "satisfaction_conditions": [
      "Multiple DBRef paths must be successfully included in a single query",
      "Query must work with abstract base classes",
      "Nested DBRef relationships must be properly resolved",
      "Query must be compatible with LiteDB version 5",
      "All specified reference paths must be loaded in the correct order"
    ],
    "created_at": "2020-02-07T16:34:17Z"
  },
  {
    "id": "https://github.com/litedb-org/LiteDB/issues/1282",
    "source": {
      "issue_number": 1282
    },
    "initial_question": {
      "title": "[question] [bug] which simbol to use for naming reserved collections in my application?",
      "body": "Hi,\r\nCollection name starting with \"_\" is used to naming reserved collection inside LiteDB engine.\r\n\r\n[bug]\r\nIf i create a collection named \"$col\" directly, i recieve an exeption: \"invalid format \"$col\".\r\nBut if, for example, i create a collection named \"col\" and i rename it as \"$col\", everything works fine. Is this a bug?\r\n\r\n[question]\r\nNow i know that can be used only letters, numbers and _\r\nWhich starting simbol can i use to identify my reserved collections instead \"$\"?\r\nCan use \"_\" too? I think it could be dangerous.\r\nIf it is possible, i prefer to avoid numbers.\r\n\r\nThanks\r\n"
    },
    "satisfaction_conditions": [
      "Collection names must follow valid naming pattern rules",
      "System reserved collections must be distinguishable from user collections",
      "Reserved collection naming convention must not conflict with system prefixes",
      "Special collection naming conventions must be documented and clear"
    ],
    "created_at": "2019-08-13T13:54:13Z"
  },
  {
    "id": "https://github.com/litedb-org/LiteDB/issues/671",
    "source": {
      "issue_number": 671
    },
    "initial_question": {
      "title": "Qual a quantidade total de armazenamento",
      "body": "Ol\u00e1 Maur\u00edcio. Em primeiro lugar meus parab\u00e9ns pela sua iniciativa, aud\u00e1cia e qualidade do seu projeto.\r\nJ\u00e1 havia ouvido falar do LiteDB mas n\u00e3o havia utilizado e ap\u00f3s ter contato com ele achei formid\u00e1vel.\r\nAinda n\u00e3o efetuei testes com grande massa de dados mas gostaria de saber qual o limite de armazenamento do banco de dados e, com grande volume de dados o banco onera o desempenho da aplica\u00e7\u00e3o?\r\nO LiteDB para aplica\u00e7\u00f5es simples e m\u00e9dias pode ser a grande solu\u00e7\u00e3o para desenvolvedores .NET, j\u00e1 que \u00e9 100% C#, no qual desenvolvo e nos traz o poder de manipular os dados inteiramente dentro das aplica\u00e7\u00f5es.\r\n\r\nParab\u00e9ns,\r\n\r\nMarcelo Henrique"
    },
    "satisfaction_conditions": [
      "Database must handle large file sizes without technical limitations",
      "Performance must remain efficient with large data volumes",
      "Index-based queries must maintain reasonable performance as data grows",
      "Response must address concurrent write operations handling"
    ],
    "created_at": "2017-08-01T14:06:44Z"
  },
  {
    "id": "https://github.com/litedb-org/LiteDB/issues/543",
    "source": {
      "issue_number": 543
    },
    "initial_question": {
      "title": "IncludeFields not including ",
      "body": "If I understand correctly, it should return level one props and fill them?\r\nI have a post with category, but it works only if I put real inlude on collection..\r\n\r\nLitedb 3.1.0\r\nNetcoreapp1.1\r\n```csharp\r\npublic class BEntity\r\n{\r\n\tpublic BEntity()\r\n\t{\r\n\t\tDateCreated = DateTime.Now;\r\n\t}\r\n\tpublic int ID { get; set; }\r\n\tpublic DateTime DateCreated { get; set; }\r\n\tpublic DateTime DateChanged { get; set; }\r\n\tpublic int Count { get; set; } //for paging\t\t\t\t\t\t\t\r\n\r\n}\r\n  public class Post : BEntity\r\n    {\r\n        public string Title { get; set; }\r\n        public string Content { get; set; }\r\n        public List<Category> Categories { get; set; }     \r\n    }\r\npublic class Category: BEntity\r\n{\r\n\tpublic string Name { get; set; }\r\n\tpublic List<Post> Posts { get; set; }\r\n}\r\nvar mapper = new BsonMapper();\r\n\tmapper.IncludeFields = true;\r\n\tmapper.IncludeNonPublic = true;\r\n\tmapper.Entity< Post >().Index(x => x.Title).Index(x => x.Content)\r\n\t.Index(x => x.Slug)\r\n\t.DbRef(x => x.Categories, \"category\")\r\n\t.DbRef(x => x.Comments, \"comment\")\r\n\t.DbRef(x => x.Tags, \"tag\");\r\n\t//dbpost\r\n\tmapper.Entity< Category >()\r\n\t.Index(x => x.Name);\r\n\r\n\tusing (var db = new LiteDatabase(@\"C:\\\\data.db\", mapper))\r\n\t//using (var db = new LiteDatabase(path))\r\n\t{\r\n\t\r\n\t\t//DROP FIRST\r\n\t\t//db.DropCollection(\"post\");\r\n\t\t//db.DropCollection(\"category\");\r\n\t\t//db.DropCollection(\"tag\");\r\n\t\t\t//db.Shrink();\r\n\t\t// Get customer collection\r\n\t\tvar col = db.GetCollection<Post>(\"post\");//.Include(c=>c.Categories).Include(s=>s.Tags); //it works only with include\r\n\t\tvar catcol = db.GetCollection<Category>(\"category\");\r\n\r\n...\r\n```"
    },
    "satisfaction_conditions": [
      "Referenced entities must be explicitly included when querying data",
      "IncludeFields setting must correctly handle field-level serialization",
      "Referenced entities must be properly initialized and saved before being referenced",
      "DbRef mappings must be correctly configured for entity relationships"
    ],
    "created_at": "2017-03-21T16:17:39Z"
  },
  {
    "id": "https://github.com/litedb-org/LiteDB/issues/528",
    "source": {
      "issue_number": 528
    },
    "initial_question": {
      "title": "I have to reference specific dll when I want to read a collection !",
      "body": "Can i read a collection and ignore the _type  format? in that case, I can read a collection without reference the dll witch the source type of the collection items."
    },
    "satisfaction_conditions": [
      "Collection data must be readable without requiring the original type's DLL",
      "Data must be convertible between document format and class hierarchy",
      "Type information handling must be configurable"
    ],
    "created_at": "2017-03-12T14:38:42Z"
  },
  {
    "id": "https://github.com/litedb-org/LiteDB/issues/523",
    "source": {
      "issue_number": 523
    },
    "initial_question": {
      "title": "[Question] FileStore, Transactions and data corruption?",
      "body": "If I understand correctly:\r\n1. Journal is being written only when commiting a transaction.\r\n2. FileStore does not supports transactions\r\n\r\nDoes it mean that file store writes/deletion might lead to the db file corruption (if interrupted in the worst moment) because of lack of journaling?\r\n\r\nOr is the page-mechanism designed the way these are safe operations? And in the worst case we will end up with some unlinked pages?"
    },
    "satisfaction_conditions": [
      "Database file integrity must be maintained even if operations are interrupted",
      "Partial file writes must not corrupt the database",
      "Failed operations must be recoverable or cleanly removable",
      "Large file operations must be handled in manageable chunks",
      "File write operations must maintain consistency through atomic operations"
    ],
    "created_at": "2017-03-08T23:30:11Z"
  },
  {
    "id": "https://github.com/litedb-org/LiteDB/issues/518",
    "source": {
      "issue_number": 518
    },
    "initial_question": {
      "title": "\"Collection  exceeded the maximum limit of indices: 16\"",
      "body": "Don\u00b4t know why I get this error message when I try to find documents in my collection, \r\nI try with:\r\n```\r\nvar results = col.Find(Query.StartsWith(\"FullName\", \"Hapa\"));\r\nvar namer = col.Find(a => a.FullName.StartsWith(\"Hapa\"));\r\n```\r\n\r\nwhen I do a col.FindAll or col.Count all data I have saved is there, \r\nmaybe I do something wrong with the index? I tried with col.EnsureIndex(test.FullName); "
    },
    "satisfaction_conditions": [
      "Existing data must remain accessible",
      "Index management operations must be available"
    ],
    "created_at": "2017-03-02T20:42:40Z"
  },
  {
    "id": "https://github.com/litedb-org/LiteDB/issues/517",
    "source": {
      "issue_number": 517
    },
    "initial_question": {
      "title": "Invalid connection string when using shared mode",
      "body": "Hi, \r\nI am trying to open the database in shared mode. However I am getting this error:\r\n`Unhandled exception: LiteDB.LiteException: Invalid connection string value type for [mode]`  \r\n\r\nThis is how I access the database:  \r\n\r\n```cs\r\nusing (var db = new LiteDatabase(\"Filename=Database.db;Mode=Shared\"))\r\n{\r\n  ...\r\n}\r\n```\r\n\r\nI am using .net core 1.1."
    },
    "satisfaction_conditions": [
      "Database connections must be established without connection string errors",
      "Database access must work within .NET Core platform limitations",
      "Database instance management must prevent concurrent access conflicts",
      "Database connection must remain stable throughout application lifecycle"
    ],
    "created_at": "2017-03-02T15:53:42Z"
  },
  {
    "id": "https://github.com/litedb-org/LiteDB/issues/508",
    "source": {
      "issue_number": 508
    },
    "initial_question": {
      "title": "[Question]Update data without deletion",
      "body": "Hello, I load my data in chunks, because I don't want to keep entire collection in memory. The problem is that the database stores only the last chunk. I assume this is because whenever I do Update it replaces the collection. How can I insert more data into an existing collection?\r\n\r\nThis is the code I use:\r\n```\r\npublic bool Add(T document)\r\n        {\r\n            using (var db = DbLite.GetDatabase())\r\n            {\r\n                var documents = db.GetCollection(typeof(T).Name);\r\n\r\n                var bsonDoc = db.ToDocument(document);\r\n\r\n                if (documents.FindById(document.Id) != null)\r\n                    return documents.Update(db.ToDocument(document));\r\n                \r\n                documents.Insert(bsonDoc);\r\n            }\r\n\r\n            return true;\r\n        }\r\n```"
    },
    "satisfaction_conditions": [
      "Data from multiple chunks must persist in the collection",
      "Database operations must handle both new and existing records correctly",
      "Database version must be compatible with required operations"
    ],
    "created_at": "2017-02-26T14:54:15Z"
  },
  {
    "id": "https://github.com/litedb-org/LiteDB/issues/504",
    "source": {
      "issue_number": 504
    },
    "initial_question": {
      "title": "Question - How to change database password after it's creation",
      "body": "Greetings @mbdavid,\r\n\r\nit seems that I won't give u peace soon, hehehehe.\r\n\r\nonce again, thank you for liteDB, it's a wonderful tool, it fits perfectly my research project.\r\n\r\nI have a question this time: Is it possible to change the database password after it's creation?\r\n\r\nWhy?\r\n\r\nExample:\r\n\r\nEach user has it's own database. So, the database is created with user password. When user change it's password, I'd like to change the password of the database too.\r\n\r\nIs it possible? If the answer is yes, how?\r\n\r\nThank u.\r\n\r\n[].\r\nRegards,\r\n\r\n@rmszc81"
    },
    "satisfaction_conditions": [
      "Password change can be performed on existing database"
    ],
    "created_at": "2017-02-25T03:33:09Z"
  },
  {
    "id": "https://github.com/litedb-org/LiteDB/issues/500",
    "source": {
      "issue_number": 500
    },
    "initial_question": {
      "title": "DateTime.Kind property is not preserved",
      "body": "```\r\npublic class Ax {\r\n    [BsonIndex] public DateTime Time { get; set; }\r\n}\r\n\r\nusing (var db = new LiteDatabase(\"temp.db\")) {     \r\n    LiteCollection<Ax> col = db.GetCollection<Ax>(\"Ax\");\r\n    DateTime now = DateTime.UtcNow;\r\n    Console.WriteLine(now.Kind);//\r\n    col.Insert(new Ax {Time = DateTime.UtcNow});\r\n    Console.WriteLine(col.FindOne(x => true).Time.Kind);\r\n}\r\n```\r\n\r\nThis gives output: \r\n`Utc`\r\n`Local`\r\n\r\nWhich is not correct. \r\n\r\nAny thoughts?"
    },
    "satisfaction_conditions": [
      "Consistent behavior with BSON date serialization standards",
      "Special date values (MinValue/MaxValue) must be handled correctly",
      "Retrieved DateTime values must maintain temporal equivalence"
    ],
    "created_at": "2017-02-23T03:38:34Z"
  },
  {
    "id": "https://github.com/litedb-org/LiteDB/issues/474",
    "source": {
      "issue_number": 474
    },
    "initial_question": {
      "title": "Query using multikey index (where products are an array of embedded documents)",
      "body": "Hello\r\n\r\nI have an issue with embedded documents. As per below sample I'm able to index and search by embedded documents but Find returns nothing.\r\n\r\n> // Query using multikey index (where products are an array of embedded documents)\r\n> var results = col.Find(Query.GT(\"Products.Price\", 100))\r\n\r\nHere is the complete code to test:\r\n\r\n\r\n        public class Customer\r\n        {\r\n            public class Phone\r\n            {\r\n                public string Number { get; set; }\r\n            }\r\n            public int Id { get; set; }\r\n            public string Name { get; set; }\r\n            public Phone[] Phones { get; set; }\r\n            public bool IsActive { get; set; }\r\n        }\r\n\r\n        static void Main(string[] args)\r\n        {\r\n            // Open database (or create if doesn't exist)\r\n            using (var db = new LiteDatabase(@\"MyData.db\"))\r\n            {\r\n                // Get a collection (or create, if doesn't exist)\r\n                var col = db.GetCollection<Customer>(\"customers\");\r\n\r\n                // Create your new customer instance\r\n                var customer = new Customer\r\n                {\r\n                    Name = \"John Doe\",\r\n                    Phones = new Customer.Phone[] { new Customer.Phone { Number = \"8000-0000\" } , new Customer.Phone { Number = \"9000-0000\" }},\r\n                    IsActive = true\r\n                };\r\n\r\n                // Insert new customer document (Id will be auto-incremented)\r\n                col.Insert(customer);\r\n\r\n                col.EnsureIndex(\"Phones.Number\");\r\n\r\n                var results = col.Find(Query.EQ(\"Phones.Number\", \"8000-0000\")); // returns no documents\r\n            }\r\n        }\r\n"
    },
    "satisfaction_conditions": [
      "Query successfully retrieves documents with matching values in nested array elements",
      "Data model structure allows proper indexing of nested array fields",
      "Database index properly supports querying of nested array fields",
      "Query syntax correctly references nested array field paths"
    ],
    "created_at": "2017-02-10T00:20:53Z"
  },
  {
    "id": "https://github.com/litedb-org/LiteDB/issues/460",
    "source": {
      "issue_number": 460
    },
    "initial_question": {
      "title": "Question : How can i insert complex entities to db?",
      "body": "Hi @mbdavid,\r\n\r\nI think, i understand all concepts about document database. Because of that i start to use LiteDB in my project. I implement my simple entities first insert, update etc working fine. But i'm stuck about my complex entities. I produce sample console application which is below. I tried many ways for insert entities to db but i received an exception in every situation. Could you please help me about that problem.\r\n\r\n* Am i missing something? Because every exception from LiteDB is null reference exception and they don't have any inner exception because of that i don't understand what is the problem. Is there a way to catch inner exceptions?\r\n* How can i save my TradingHours entity to db in one step?\r\n* If not possible one step insert how can i save to db simply?\r\n\r\n```\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Globalization;\r\nusing LiteDB;\r\n\r\nnamespace LiteDBTest\r\n{\r\n    public class TradingHours\r\n    {\r\n        public TradingHours()\r\n        {\r\n\r\n        }\r\n\r\n        public TradingHours(string name, TimeZoneInfo timeZoneInfo)\r\n            : this()\r\n        {\r\n            Name = name;\r\n            TimeZoneInfo = timeZoneInfo;\r\n        }\r\n\r\n        public TradingHours(string name, TimeZoneInfo timeZoneInfo, IEnumerable<Session> sessions, IEnumerable<Holiday> holidays)\r\n            : this(name, timeZoneInfo)\r\n        {\r\n            Sessions = sessions;\r\n            Holidays = holidays;\r\n        }\r\n\r\n        public int Id { get; set; }\r\n        public string Name { get; set; }\r\n        public TimeZoneInfo TimeZoneInfo { get; set; }\r\n        public IEnumerable<Session> Sessions { get; set; }\r\n        public IEnumerable<Holiday> Holidays { get; set; }\r\n    }\r\n\r\n    public class Session\r\n    {\r\n        public Session()\r\n        {\r\n\r\n        }\r\n\r\n        public Session(TradingHours tradingHours)\r\n            : this()\r\n        {\r\n            TradingHours = tradingHours;\r\n        }\r\n\r\n        public Session(TradingHours tradingHours, DayOfWeek startDay, TimeSpan startTime, DayOfWeek endDay, TimeSpan endTime, bool endOfDay)\r\n            : this(tradingHours)\r\n        {\r\n            StartDay = startDay;\r\n            StartTime = startTime;\r\n            EndDay = endDay;\r\n            EndTime = endTime;\r\n            EndOfDay = endOfDay;\r\n        }\r\n\r\n        public int Id { get; set; }\r\n        public TradingHours TradingHours { get; set; }\r\n        public DayOfWeek StartDay { get; set; }\r\n        public TimeSpan StartTime { get; set; }\r\n        public DayOfWeek EndDay { get; set; }\r\n        public TimeSpan EndTime { get; set; }\r\n        public bool EndOfDay { get; set; }\r\n    }\r\n\r\n    public class Holiday\r\n    {\r\n        public Holiday()\r\n        {\r\n\r\n        }\r\n\r\n        public Holiday(TradingHours tradingHours)\r\n            : this()\r\n        {\r\n            TradingHours = tradingHours;\r\n        }\r\n\r\n        public Holiday(TradingHours tradingHours, string name, HolidayType type, DateTime date, TimeSpan startTime, TimeSpan endTime)\r\n            : this(tradingHours)\r\n        {\r\n            Name = name;\r\n            Type = type;\r\n            Date = date;\r\n            StartTime = startTime;\r\n            EndTime = endTime;\r\n        }\r\n\r\n        public int Id { get; set; }\r\n        public TradingHours TradingHours { get; set; }\r\n        public string Name { get; set; }\r\n        public HolidayType Type { get; set; }\r\n        public DateTime Date { get; set; }\r\n        public TimeSpan StartTime { get; set; }\r\n        public TimeSpan EndTime { get; set; }\r\n    }\r\n\r\n    public enum HolidayType\r\n    {\r\n        FullDay,\r\n        LateOpen,\r\n        EarlyClose\r\n    }\r\n\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            BsonMapper.Global.Entity<TradingHours>()\r\n                .Id(e => e.Id)\r\n                .Index(e => e.Name, true)\r\n                .DbRef(e => e.Sessions, \"Sessions\")\r\n                .DbRef(e => e.Holidays, \"Holidays\");\r\n\r\n            BsonMapper.Global.Entity<Session>()\r\n                .Id(e => e.Id)\r\n                .Index(e => e.TradingHours)\r\n                .DbRef(e => e.TradingHours, \"TradingHours\");\r\n\r\n            BsonMapper.Global.Entity<Holiday>()\r\n                .Id(e => e.Id)\r\n                .Index(e => e.TradingHours)\r\n                .DbRef(e => e.TradingHours, \"TradingHours\");\r\n\r\n            BsonMapper.Global.RegisterType(\r\n                (timeSpan) => timeSpan.Ticks,\r\n                (bsonValue) => TimeSpan.FromTicks(bsonValue.AsInt64));\r\n\r\n            BsonMapper.Global.RegisterType(\r\n                (cultureInfo) => cultureInfo.Name,\r\n                (bsonValue) => CultureInfo.GetCultureInfo(bsonValue.AsString));\r\n\r\n            BsonMapper.Global.RegisterType(\r\n                (timeZoneInfo) => timeZoneInfo.Id,\r\n                (bsonValue) => TimeZoneInfo.FindSystemTimeZoneById(bsonValue.AsString));\r\n\r\n            using (var database = new LiteDatabase(AppDomain.CurrentDomain.BaseDirectory + \"Data.db\"))\r\n            {\r\n                var tradingHoursCollection = database.GetCollection<TradingHours>(\"TradingHours\");\r\n                var sessionCollection = database.GetCollection<Session>(\"Sessions\");\r\n                var holidayCollection = database.GetCollection<Holiday>(\"Holidays\");\r\n\r\n                if (tradingHoursCollection.FindOne(tradingHours => tradingHours.Name == \"US Equities Regular\") == null)\r\n                {\r\n                    var tradingHours = new TradingHours(\"US Equities Regular\", TimeZoneInfo.FindSystemTimeZoneById(\"Eastern Standard Time\"));\r\n\r\n                    var sessions = new List<Session>\r\n                    {\r\n                        new Session(tradingHours, DayOfWeek.Monday, new TimeSpan(9, 30, 0), DayOfWeek.Monday, new TimeSpan(16, 0, 0), true),\r\n                        new Session(tradingHours, DayOfWeek.Tuesday, new TimeSpan(9, 30, 0), DayOfWeek.Tuesday, new TimeSpan(16, 0, 0), true),\r\n                        new Session(tradingHours, DayOfWeek.Wednesday, new TimeSpan(9, 30, 0), DayOfWeek.Wednesday, new TimeSpan(16, 0, 0), true),\r\n                        new Session(tradingHours, DayOfWeek.Thursday, new TimeSpan(9, 30, 0), DayOfWeek.Thursday, new TimeSpan(16, 0, 0), true),\r\n                        new Session(tradingHours, DayOfWeek.Friday, new TimeSpan(9, 30, 0), DayOfWeek.Friday, new TimeSpan(16, 0, 0), true)\r\n                    };\r\n\r\n                    var holidays = new List<Holiday>\r\n                    {\r\n                        new Holiday(tradingHours, \"New Year's Day\", HolidayType.FullDay, new DateTime(2016, 1, 1), TimeSpan.Zero, TimeSpan.Zero),\r\n                        new Holiday(tradingHours, \"Martin Luther King, Jr. Day\", HolidayType.FullDay, new DateTime(2016, 1, 18), TimeSpan.Zero, TimeSpan.Zero),\r\n                        new Holiday(tradingHours, \"President's Day\", HolidayType.FullDay, new DateTime(2016, 2, 15), TimeSpan.Zero, TimeSpan.Zero),\r\n                        new Holiday(tradingHours, \"Good Friday\", HolidayType.FullDay, new DateTime(2016, 3, 25), TimeSpan.Zero, TimeSpan.Zero),\r\n                        new Holiday(tradingHours, \"Memorial Day\", HolidayType.FullDay, new DateTime(2016, 5, 30), TimeSpan.Zero, TimeSpan.Zero),\r\n                        new Holiday(tradingHours, \"Independence Day\", HolidayType.FullDay, new DateTime(2016, 7, 4), TimeSpan.Zero, TimeSpan.Zero),\r\n                        new Holiday(tradingHours, \"Labor Day\", HolidayType.FullDay, new DateTime(2016, 9, 5), TimeSpan.Zero, TimeSpan.Zero),\r\n                        new Holiday(tradingHours, \"Thanksgiving\", HolidayType.FullDay, new DateTime(2016, 11, 24), TimeSpan.Zero, TimeSpan.Zero),\r\n                        new Holiday(tradingHours, \"Thanksgiving\", HolidayType.EarlyClose, new DateTime(2016, 11, 25), TimeSpan.Zero, new TimeSpan(13, 0, 0)),\r\n                        new Holiday(tradingHours, \"Christmas Day\", HolidayType.FullDay, new DateTime(2016, 12, 15), TimeSpan.Zero, TimeSpan.Zero)\r\n                    };\r\n\r\n                    using (var transaction = database.BeginTrans())\r\n                    {\r\n                        try\r\n                        {\r\n                            tradingHours.Sessions = new List<Session>(sessions);\r\n                            tradingHours.Holidays = new List<Holiday>(holidays);\r\n                            tradingHoursCollection.Insert(tradingHours);\r\n                            transaction.Commit();\r\n                        }\r\n                        catch (Exception)\r\n                        {\r\n                            transaction.Rollback();\r\n                            throw;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n```"
    },
    "satisfaction_conditions": [
      "Database references must be unidirectional between related entities",
      "All related entities must be successfully persisted to database",
      "Related entities must be retrievable through queries",
      "Transaction integrity must be maintained during complex inserts",
      "Custom type mappings must handle all non-standard data types"
    ],
    "created_at": "2017-02-05T23:12:34Z"
  },
  {
    "id": "https://github.com/litedb-org/LiteDB/issues/450",
    "source": {
      "issue_number": 450
    },
    "initial_question": {
      "title": "Issue with Collection Insert()",
      "body": "First of all, let me say well done on releasing v3.0.0. And here is me saying it: Well Done! :)\r\n\r\nThink I may have raised this before, but I have an interface issue with Insert().\r\n\r\nBasically, both the Upsert() and Update() variants returns true on success. While Insert() has no return type and throws instead.\r\n\r\nThis is means that, if I want to have appropriate behaviour in my app (without it throwing out) I either have to wrap the Insert() call in a try catch block, or query whether the document exists before hand."
    },
    "satisfaction_conditions": [
      "Document insertion operation must be handled without unhandled exceptions reaching the application layer",
      "Operation result must be deterministically knowable",
      "Solution must maintain data consistency",
      "Operation must handle potential duplicate key scenarios"
    ],
    "created_at": "2017-02-02T09:22:16Z"
  },
  {
    "id": "https://github.com/litedb-org/LiteDB/issues/408",
    "source": {
      "issue_number": 408
    },
    "initial_question": {
      "title": "v3.0.0 - beta3 - Question regarding the Fluent Mapper with Index",
      "body": "I'm quite new to LiteDB and this seems kinda strange to me.\r\n\r\nWhy does the Fluent Mapper throw a `ArgumentNullException` here:\r\n```\r\nBsonMapper.Global.Entity<TesBase>()\r\n\t.Id(x => x.Id)\r\n\t.Index(x => x.Value)\r\n\t.Index(x => x.Embed.Import) // <= Problematic line\r\n\t;\r\n```\r\n\r\nwhile this works perfectly:\r\n```\r\nvar audioLogEntries = db.GetCollection<TesBase>(\"base\");\r\naudioLogEntries.EnsureIndex(x => x.Embed.Import);\r\n```\r\n\r\nUsed classes:\r\n```\r\nclass TesBase\r\n{\r\n\tpublic int Id { get; set; }\r\n\tpublic string Value { get; set; }\r\n\r\n\tpublic TesEmbed Embed { get; set; } = new TesEmbed();\r\n}\r\n\r\nclass TesEmbed\r\n{\r\n\tpublic string Import { get; set; }\r\n}\r\n```"
    },
    "satisfaction_conditions": [
      "Property path resolution must respect object hierarchy boundaries",
      "Index creation must be successful for nested properties",
      "Error handling must provide clear indication when property paths are invalid",
      "Nested property indexing must be achievable through at least one supported method"
    ],
    "created_at": "2017-01-01T20:15:28Z"
  },
  {
    "id": "https://github.com/litedb-org/LiteDB/issues/375",
    "source": {
      "issue_number": 375
    },
    "initial_question": {
      "title": "Question - Is v3 backward compatible with v2 data?",
      "body": "Is v3 backward compatible with v2 data?\r\n\r\nIf I use v2 initially, could I upgrade to v3 later and will it read the data files generated by v2 seemlessly? Or would there be a migration proceedure?"
    },
    "satisfaction_conditions": [
      "Data migration path exists between versions",
      "Migration process is documented",
      "Migration can be initiated through explicit methods",
      "Original data structure differences are addressed"
    ],
    "created_at": "2016-12-11T10:44:45Z"
  },
  {
    "id": "https://github.com/litedb-org/LiteDB/issues/358",
    "source": {
      "issue_number": 358
    },
    "initial_question": {
      "title": "Maximum collection size?",
      "body": "LiteDB looks great, although I'm slightly concerned about the 2GB file size limit in terms of future scalability for my application.\r\n\r\nAm I correct in thinking that the maximum collection size on disk will be limited to 2GB? Are there any long term plans to extend this? Or is it hard limit for the foreseeable future?\r\n\r\nCheers"
    },
    "satisfaction_conditions": [
      "Clarification of the actual storage size limitations",
      "Distinction between file storage and datafile limits",
      "Quantification of the maximum supported database size",
      "Addresses scalability concerns"
    ],
    "created_at": "2016-12-04T05:09:29Z"
  },
  {
    "id": "https://github.com/litedb-org/LiteDB/issues/344",
    "source": {
      "issue_number": 344
    },
    "initial_question": {
      "title": "v3 DropCollection?",
      "body": "Hello,\r\n\r\nhow to drop a collection in v3?\r\n\r\nv2 had LiteDatabase.DropCollection but to me it looks lie that is gone?\r\n\r\nRegards,\r\n  Dirk"
    },
    "satisfaction_conditions": [
      "Collection must be completely removed from the database",
      "Operation must be compatible with LiteDB v3",
      "Method must be accessible through the database interface",
      "Operation must maintain database consistency"
    ],
    "created_at": "2016-11-21T09:59:59Z"
  },
  {
    "id": "https://github.com/litedb-org/LiteDB/issues/329",
    "source": {
      "issue_number": 329
    },
    "initial_question": {
      "title": "Help wanted about searching a substring in an array of strings",
      "body": "Hi,\r\n\r\nI could not find any answer to this. Let's say we have this data structure:\r\n```\r\npublic class Data\r\n{\r\n  public Data() { }\r\n\r\n  [DataMember(Name = \"Id\")]\r\n  public string Id { get; set; }\r\n\r\n  [DataMember(Name = \"Comments\")]\r\n  public List<string> Comments { get; set; }\r\n}\r\n```\r\n\r\nWhen I want to find a substring in `Id`, I do:\r\n```\r\nvar collection = database.GetCollection<Data>(\"myCollection\");\r\nvar results = collection.Find(Query.Contains(\"_id\", \"my substring\"));\r\n```\r\n\r\nBut I cannot do the same in `Comments`. The following request returns nothing:\r\n```\r\nvar collection = database.GetCollection<Data>(\"myCollection\");\r\nvar results = collection.Find(Query.Contains(\"Comments\", \"my substring\"));\r\n```\r\n\r\nHow to search inside an array of strings?"
    },
    "satisfaction_conditions": [
      "Query successfully finds substring matches within array elements",
      "Query works with the existing Data structure without modifications",
      "Results include all documents where any array element contains the substring",
      "Query returns empty result only when no matches exist",
      "Performance considerations are addressed for large collections"
    ],
    "created_at": "2016-10-31T09:53:13Z"
  },
  {
    "id": "https://github.com/litedb-org/LiteDB/issues/308",
    "source": {
      "issue_number": 308
    },
    "initial_question": {
      "title": ".ToString() in  Lambda Query for Collection.Find()",
      "body": "I have a collection items when i query using a lambda expression with a .ToString() it cause an exception. For example:\n`var y = items.Find(x => x.Year.ToString() == \"1993\");   // Year is int`\nThe exception is : **\"Property 'Year.ToString(' was not mapped into BsonDocument\"**\n"
    },
    "satisfaction_conditions": [
      "Query must successfully compare integer field with string value",
      "Query must be compatible with MongoDB/BsonDocument mapping",
      "Query must maintain data type consistency in the database layer"
    ],
    "created_at": "2016-09-23T17:55:59Z"
  },
  {
    "id": "https://github.com/litedb-org/LiteDB/issues/271",
    "source": {
      "issue_number": 271
    },
    "initial_question": {
      "title": "query with order",
      "body": "Hey, the documentation is really good but after having read it all I still wonder how to query  collections in a specific order efficiently. \nLimiting a query mostly only makes sense if you can specify the order. For instance I want to limit my query to get the first 100 docs or the last hundred of a collection according to a query. I can currently apply .OrderByDescending(x=>x.Id) on a query result but this would not be executed by the query engine, right?\n"
    },
    "satisfaction_conditions": [
      "Query results must be returned in the specified order (ascending or descending)",
      "Query performance must be efficient when using ordering and limits",
      "Ordering must work correctly with other query operations (like filtering)",
      "The solution must clearly indicate whether ordering is handled at the index/database level or in-memory",
      "Limit operations must respect the specified order when retrieving results"
    ],
    "created_at": "2016-08-12T14:44:24Z"
  },
  {
    "id": "https://github.com/litedb-org/LiteDB/issues/270",
    "source": {
      "issue_number": 270
    },
    "initial_question": {
      "title": "Why string end with \"\\r\\n\" be trimmed?",
      "body": "I found this in a project.For 2 days, I can't find the problem.\nThe test code:\n\n```\np = new Person\n{\n    Name = \"\u5f20\u7acb\",\n    Age = 31,\n    Sex = 1,\n    Description = \"\u4e00\u4e2a\u8f6f\u4ef6\u5de5\u7a0b\u5e08\\r\\n\"\n};\n\nConsole.WriteLine(\"name:{0}\", p.Name);\nConsole.WriteLine(\"age:{0}\", p.Age);\nConsole.WriteLine(\"sex:{0}\", p.Sex);\nConsole.WriteLine(\"description:{0}\", p.Description);\n\nusing (var conn = new LiteDB.LiteDatabase(\"test3.db\"))\n{\n    var col = conn.GetCollection<Person>(\"p3\");\n    col.Insert(p);\n}\n\nusing (var conn = new LiteDB.LiteDatabase(\"test3.db\"))\n{\n    var col = conn.GetCollection<Person>(\"p3\");\n    var ps = col.FindAll();\n    foreach(var p1 in ps)\n    {\n        Console.WriteLine(\"name:{0}\", p1.Name);\n        Console.WriteLine(\"age:{0}\", p1.Age);\n        Console.WriteLine(\"sex:{0}\", p1.Sex);\n        Console.WriteLine(\"description:{0}\", p1.Description);\n    }\n}\n\nConsole.WriteLine(\"------------------------------------\");\n```\n"
    },
    "satisfaction_conditions": [
      "String values must preserve trailing whitespace characters (\\r\\n) when stored and retrieved from the database",
      "Database mapper configuration must be modified to prevent automatic whitespace trimming"
    ],
    "created_at": "2016-08-12T05:23:48Z"
  },
  {
    "id": "https://github.com/litedb-org/LiteDB/issues/228",
    "source": {
      "issue_number": 228
    },
    "initial_question": {
      "title": "Exception : Invalid transaction on top of stack",
      "body": "Hello,\n\nI just started using your DB. Seems it is exactly what I was looking, simple, NoSQL.\nI tried to use LiteDB in a windows service  with multiple threads accessing the DB.\nThe service is something similar to a job scheduler, and tasks are stored in the DB.\n\nAt the very beginning of the app when DB access (read or write) are done, I get the following exception :\n\n```\n\nType : System.ArgumentException, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\n        Message : Invalid transaction on top of stack\n        Source : LiteDB\n        HelpLink :\n        Data : None\n        Additional Infos :\n            ParamName : null\n\n        StackTrace :\n             at LiteDB.TransactionService.popTopTransaction(LiteTransaction trans)\n             at LiteDB.TransactionService.Complete(LiteTransaction trans)\n             at LiteDB.LiteTransaction.Commit()\n             at LiteDB.LiteTransaction.Dispose()\n             at LiteDB.DbEngine.<Find>d__9.System.IDisposable.Dispose()\n             at LiteDB.DbEngine.<Find>d__9.MoveNext()\n             at LiteDB.LiteCollection`1.<Find>d__34.MoveNext()\n             at System.Linq.Buffer`1..ctor(IEnumerable`1 source)\n             at System.Linq.OrderedEnumerable`1.<GetEnumerator>d__1.MoveNext()\n             at System.Linq.Enumerable.FirstOrDefault[TSource](IEnumerable`1 source)\n             at xxxxxxxxxxxxxxxxx\n```\n\nIs the LiteDatabase thread-safe ? Because I'm sharing the LiteDatabase instance on all threads.\nShould I do differently ?\n\nThanks for your help.\n\nLuc\n"
    },
    "satisfaction_conditions": [
      "Performance impact must be acceptable for a job scheduler service"
    ],
    "created_at": "2016-07-27T10:10:00Z"
  },
  {
    "id": "https://github.com/litedb-org/LiteDB/issues/224",
    "source": {
      "issue_number": 224
    },
    "initial_question": {
      "title": "Query with EndsWith",
      "body": "Hi\nIt is not possible to run a query with \"EndsWith\"\n\n```\nvar tmp = reg.Find(x => x.Name.EndsWith(\"P\"));\ntmp.ForEach(x => Console.WriteLine(x.Name));\n```\n"
    },
    "satisfaction_conditions": [
      "Query must successfully filter documents by string ending pattern",
      "Query must utilize database indexing capabilities",
      "Results must maintain data consistency with the original string ending pattern"
    ],
    "created_at": "2016-07-26T17:43:28Z"
  },
  {
    "id": "https://github.com/litedb-org/LiteDB/issues/91",
    "source": {
      "issue_number": 91
    },
    "initial_question": {
      "title": "OnVersionUpdate called before Mapper Initialized from ctor",
      "body": "When Using OnVersionUpdate we need to register custom type one more time.\nOnVersionUpdate is called from base(connectionString), before myDb ctor.\nIt's not that easy to solve...\nI don't mind calling UpdateDatabaseVersion() manually or override a method where I can init the mapper only once.\n\n``` C#\npublic myDb(string connectionString) : base(connectionString)\n{\n//Called Second\n    Mapper.RegisterType(TimeSpanToBson, BsonToTimeSpan);\n}\n protected override void OnVersionUpdate(int newVersion)\n    {\n// Called First\n        Mapper.RegisterType(TimeSpanToBson, BsonToTimeSpan);\n        switch (newVersion)\n        {\n            case 1:\n            [...]\n        }\n    }\n```\n"
    },
    "satisfaction_conditions": [
      "Type registration must persist through version update operations"
    ],
    "created_at": "2015-12-23T08:29:22Z"
  },
  {
    "id": "https://github.com/litedb-org/LiteDB/issues/51",
    "source": {
      "issue_number": 51
    },
    "initial_question": {
      "title": "Implement OnUpdate or OnCommit triggers",
      "body": "Hi,\nI wrote an application that can send updates from editor to client. i want implement an db check organism in the client that check db last modify date before install it. can i use db file modified date for this kind of work?\nor How can I use global update trigger in the editor for each change like these:\n\n```\npublic class AppData : LiteDatabase {\n    public AppData()\n        : base(DataStore.ConnectionString) { }\n\n        protected override void Commit() {\n            var cl = this.GetCollection<DbInfo>(\"db\");\n            var dbi = cl.FindById(0);\n            dbi.ModifiedOn = DateTime.UtcNow;\n            cl.Update(area);\n            base.Commit()\n        }\n    }\n```\n\nEnglish isn\u2019t my first language, so please excuse any mistakes.\n"
    },
    "satisfaction_conditions": [
      "Detect database modifications reliably",
      "Support client-side validation before installation",
      "Provide consistent modification detection across editor and client"
    ],
    "created_at": "2015-08-19T04:48:30Z"
  },
  {
    "id": "https://github.com/litedb-org/LiteDB/issues/48",
    "source": {
      "issue_number": 48
    },
    "initial_question": {
      "title": "Huge Memory & CPU Usage",
      "body": "Hello,\n\nI compared three versions of a test application. I saved a lot (10^7) objects of a type with three properties of type double.\nThe first version was coded with saving to a file with json serialization (Newtonsoft Json). The second was with litedb. The third with simply saving to a txt-File (File.WriteAllLines).\n\nCode LiteDB:\n\n```\n// Open database (or create if not exits)\nusing(var db = new LiteDatabase(@\".\\LiteDB.db\"))\n{\n    // Get customer collection\n    var col = db.GetCollection<Node>(\"nodes\");\n    col.Insert(nodes);\n}\n```\n\nThe results are:\n\n| Version | Memory Usage | Disk Space Usage | Time Needed [ms] |\n| --- | --- | --- | --- |\n| Newtonsoft Json | ~500MB | 673MB | 68,630ms |\n| LiteDB | ~6 675MB | 3 476MB | 497,464ms |\n| Text File | ~500MB | 950MB | 38,913ms |\n\nIs there a faster way of saving bigger datas?\n"
    },
    "satisfaction_conditions": [
      "All 10^7 objects with their double properties must be successfully persisted",
      "Storage solution must remain functional with large datasets (10^7+ objects)",
      "Data must be persistently stored and retrievable after program termination"
    ],
    "created_at": "2015-08-13T12:26:10Z"
  },
  {
    "id": "https://github.com/litedb-org/LiteDB/issues/37",
    "source": {
      "issue_number": 37
    },
    "initial_question": {
      "title": "how can i order in db ",
      "body": "Hi : Mauricio \nthanks for your project first .\ni have a doubt that why there is no order in Find\n\n```\nIEnumerable<T> Find(Query query, int skip = 0, int limit = int.MaxValue)\n```\n\nfor example , i want take latest 100 docs , i have a field \"AddedTime\"\n the normal way is  order by AddedTime desc  then skip 0 and  take(limit) 100 ,that's what  i needed .\nbut without order ,the take is no sence .\n\nwhat should i do ?\n"
    },
    "satisfaction_conditions": [
      "Query results must be retrievable in a sorted order based on document fields",
      "Pagination functionality (skip/limit) must work correctly with ordered results",
      "Performance optimization must be possible through indexed fields",
      "Solution must support both filtered and ordered queries",
      "Results must be compatible with LINQ operations for further processing"
    ],
    "created_at": "2015-05-25T16:38:22Z"
  }
]