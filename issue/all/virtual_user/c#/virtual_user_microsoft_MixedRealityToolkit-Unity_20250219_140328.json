[
  {
    "id": "https://github.com/microsoft/MixedRealityToolkit-Unity/issues/3250",
    "source": {
      "issue_number": 3250
    },
    "initial_question": {
      "title": "Two pointers active in scene occasionally",
      "body": "## Overview\r\nThis one is a little hard to track. But every now and then I have two cursors / pointers in my scene active. One is the DefaultCursor I assigned to the Gaze provider on the camera and the other one is my mouse basically in 3D space. I can then use the mouse to select UI elements e.g. but the gaze cursor won't do anything.\r\n\r\n## Expected Behavior\r\nNot sure what to expect here to be fair. The least I'd expect is, that the mouse pointer is available always when I hit play and not sometimes because it is handy for selecting things and testing in editor.\r\n\r\n## Actual Behavior\r\nMouse pointer is sometimes not available and only restarting play mode until it appears will help.\r\n\r\n## Unity Editor Version\r\n2018.3.0f1\r\n\r\n## Mixed Reality Toolkit Release Version\r\nmrtk_development"
    },
    "satisfaction_conditions": [
      "Clear cursor focus behavior after window/focus changes",
      "Predictable cursor timeout behavior",
      "Compatible with both VR and non-VR development workflows"
    ],
    "created_at": "2018-12-10T09:20:01Z"
  },
  {
    "id": "https://github.com/microsoft/MixedRealityToolkit-Unity/issues/2034",
    "source": {
      "issue_number": 2034
    },
    "initial_question": {
      "title": "The frame rate is very low.",
      "body": "## Overview\r\nFPS is very low even in the basic example scenes on the screen. In UNITY we have the settings for the MIXEDREALITY development environment. What do I need to set more in the example scene to maintain 60 fps?....\r\n\r\n## Expected Behavior\r\n.\r\n## Actual Behavior\r\n.\r\n## Steps to reproduce\r\n_(Links to sample github project preferred)_\r\n.\r\n## Unity Editor Version\r\n2017.2.1P2\r\n## Mixed Reality Toolkit Release Version\r\n2017.2.1.4-RC2"
    },
    "satisfaction_conditions": [
      "Build configuration settings are optimized for performance",
      "Solution works with basic example scenes",
      "Compatible with Mixed Reality development environment"
    ],
    "created_at": "2018-05-02T17:50:32Z"
  },
  {
    "id": "https://github.com/microsoft/MixedRealityToolkit-Unity/issues/1961",
    "source": {
      "issue_number": 1961
    },
    "initial_question": {
      "title": "Duplication of Holotoolkit camera when switching scenes",
      "body": "When switching to a scene that already includes a mixed reality camera, the camera is duplicated. Solution included.\r\n\r\n## Expected Behavior- Each scene has only one mixed reality camera\r\n\r\n## Actual Behavior-Mixed Reality camera is duplicated when a new scene that already includes one is loaded\r\n\r\n## Steps to reproduce\r\n-create two scenes, each with a mixed reality camera.\r\n-run the application in the unity editor\r\n-go to second scene\r\n-messages \r\n\r\n## Unity Editor Version- 2017.3\r\n\r\n## Mixed Reality Toolkit Release Version-2017.2.1.3\r\n\r\n## Solution- The code in the Awake() method of the Singleton class destroys the script but not the object to which it is attached. I corrected the problem with the following code.\r\n\r\n```\r\nprotected virtual void Awake()\r\n        {\r\n            if (IsInitialized && instance != this)\r\n            {\r\n                if (Application.isEditor)\r\n                {\r\n                   //DestroyImmediate(this);replaced\r\n                    DestroyImmediate(gameObject);\r\n                }\r\n                else\r\n                {\r\n                   // Destroy(this);replaced\r\n                    Destroy(gameObject);\r\n                }\r\n\r\n                Debug.LogErrorFormat(\"Trying to instantiate a second instance of singleton class {0}. Additional Instance was destroyed\", GetType().Name);\r\n            }\r\n```\r\nIf there is a better solution, let me know.\r\n"
    },
    "satisfaction_conditions": [
      "Only one mixed reality camera exists per scene during runtime",
      "Duplicate camera instances are properly cleaned up",
      "Solution works in both editor and built application"
    ],
    "created_at": "2018-04-16T19:22:19Z"
  },
  {
    "id": "https://github.com/microsoft/MixedRealityToolkit-Unity/issues/1866",
    "source": {
      "issue_number": 1866
    },
    "initial_question": {
      "title": "World Anchor Usage",
      "body": "Is it okay to call world anchor api to attach or remove anchor frequently ? Does attach & remove anchor has any performance effect?\r\nUse case: User is moving a hologram. I want to attach anchor once user does finger remove gesture. If user again presses finger, to move hologram i should remove world anchor and repeat the same.\r\n\r\nShould world anchor attach & remove be tied to UI like button clicked to remove or to user actions like finger press gesture (while doing some action)."
    },
    "satisfaction_conditions": [
      "World Anchor operations must not cause noticeable performance degradation",
      "Anchors must properly maintain object position stability when not being moved",
      "Anchor management must reliably respond to user interaction state changes",
      "Solution must scale appropriately with multiple anchored objects",
      "Anchor usage must align with object's expected mobility"
    ],
    "created_at": "2018-03-23T09:04:50Z"
  },
  {
    "id": "https://github.com/microsoft/MixedRealityToolkit-Unity/issues/1489",
    "source": {
      "issue_number": 1489
    },
    "initial_question": {
      "title": "What's with the name of the stabilization branch?",
      "body": " v2017.2.0.1-Stabilization?\r\n\r\nI thought we were dropping the v prefix on the releases?\r\n\r\nAlso, shouldn't it be 2017.2.1.0 as it'll most likely reflect the new release Unity will have by the time we approve it?"
    },
    "satisfaction_conditions": [
      "Branch name remains flexible for future version changes",
      "Branch name and release tag can be independently managed"
    ],
    "created_at": "2017-12-08T04:52:16Z"
  },
  {
    "id": "https://github.com/microsoft/MixedRealityToolkit-Unity/issues/1261",
    "source": {
      "issue_number": 1261
    },
    "initial_question": {
      "title": "Scene: GrabMechanics doesn't seem to work",
      "body": "Machine: Windows 10 Fall Creators update, Unity: 2017.2. I tried this scene (GrabMechanics) in the editor, and compiled to debug, and in neither one can I pick up and control anything. Should this scene still work? And if not, I wonder if anybody has a quick answer why not? There isn't much in the scene to begin with!\r\n"
    },
    "satisfaction_conditions": [
      "Object interaction must be triggered through direct physical contact between controller and object",
      "Grasp button must be used for interaction instead of trigger",
      "Controller visualization must render correctly"
    ],
    "created_at": "2017-10-30T05:46:17Z"
  },
  {
    "id": "https://github.com/microsoft/MixedRealityToolkit-Unity/issues/1253",
    "source": {
      "issue_number": 1253
    },
    "initial_question": {
      "title": "Tagalong Script not working as intended",
      "body": "Device: HoloLens\r\n\r\nI have added the Tagalong script to a GameObject. It follows me, but it always stays behind me, when I walk away. How can I make it stay inside my Field of View?"
    },
    "satisfaction_conditions": [
      "GameObject follows user movement"
    ],
    "created_at": "2017-10-28T07:30:43Z"
  },
  {
    "id": "https://github.com/microsoft/MixedRealityToolkit-Unity/issues/1040",
    "source": {
      "issue_number": 1040
    },
    "initial_question": {
      "title": "Stuck between master and RC Beta branch",
      "body": "Hi, \r\n\r\nI'm completely clueless on how to find a way to get to work with the MRTK and Hololens.\r\nI finally got to work my dev env ( meaning VS17 or Unity + MRTK managin both to deploy and build the app).  \r\nBUT ! When I use the master branch with Unity 2017.1.1.f1 I'm stuck with\r\n ```Error! RenderTexture.GenerateMips failed: render texture does not have mip maps (set useMipMap to true).```\r\n that's freaking annoying because it floods my console a lot and could even lower performances.\r\n\r\nOn the other hand, with Unity 2017.2.0f1 (RC) and beta branch, I'm being told my target device ( Hololens isn't up to date) ` DEP3321: To deploy this application, your deployment target should be running Windows Universal Runtime version 10.0.16288.0 or higher. You currently are running version 10.0.14393.1715. Please update your OS, or change your deployment target to a device with the appropriate version.\tGTS_Demo`\r\nI'm already running Insider on it and it's up to date :(\r\n(Latest SDK and insider update installed on the dev computer)\r\n\r\n\r\nAnd finally, master branch MRTK with a beta Unity doesn't work, as I understand API changed a lot.\r\n\r\nI know this is not bug related but I'm starting to loose hope on finding a stable dev environment...  Plus Unity forums and  Microsoft Hololens forums never have shown very helpful\r\n\r\nThanks a lot in advance !"
    },
    "satisfaction_conditions": [
      "Windows build target version matches HoloLens OS capabilities"
    ],
    "created_at": "2017-09-28T14:56:38Z"
  },
  {
    "id": "https://github.com/microsoft/MixedRealityToolkit-Unity/issues/913",
    "source": {
      "issue_number": 913
    },
    "initial_question": {
      "title": "Holotoolkit Remote Mapping cannot send meshes",
      "body": "I tried to build RemoteMapping and I can see the wireframe mesh appear in my HoloLens but can not get any meshes sent from Hololens to Unity. I wonder if there is something wrong with my server IP. Does anyone know what address should I put in Server IP? I just use the IPv4 address of wireless LAN adapter Wi-Fi. If I use the correct address, is there any other issue may cause this situation?\r\n\r\nWhat I have done:\r\n1. Build the scene as shown in test scenes.\r\n2. Enable the SpatialPerception,InternetClientServer, PrivateNetworkClientServer, and Microphone capabilities.\r\n3. Check the state of connection port is Listening.\r\n\r\nAnything missing?"
    },
    "satisfaction_conditions": [
      "Required system permissions are properly configured",
      "Wireframe mesh visualization appears in HoloLens"
    ],
    "created_at": "2017-08-31T03:42:02Z"
  },
  {
    "id": "https://github.com/microsoft/MixedRealityToolkit-Unity/issues/898",
    "source": {
      "issue_number": 898
    },
    "initial_question": {
      "title": "How to launch Unity UWP app as 2D instead of Mixed Reality Portal",
      "body": "Anyone know how to prevent a Unity App build as a UWP from launching in the Mixed Reality Portal if running on a local machine?"
    },
    "satisfaction_conditions": [
      "Application launches in standard 2D desktop mode",
      "Mixed Reality Portal does not automatically launch with the application"
    ],
    "created_at": "2017-08-28T21:08:16Z"
  },
  {
    "id": "https://github.com/microsoft/MixedRealityToolkit-Unity/issues/588",
    "source": {
      "issue_number": 588
    },
    "initial_question": {
      "title": "Problem with ReflectionExtensions and why is it needed?",
      "body": "Hello,\r\n\r\nI faced an issue with holotoolkit today on Unity 5.5.1.f1\r\nI had a line of code in one of my scripts that was \r\n`FieldInfo[] fieldArray = GetType().GetFields(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance);`\r\n\r\nAnd when adding holotoolkit, the ReflectionExtensions raised an error when trying to build, due to the GetFields method returning an IEnumerable instead of an array in the extension.\r\nI temporarily fixed the problem by doing this :\r\n`#if UNITY_METRO && !UNITY_EDITOR\r\n        FieldInfo[] fieldArray = GetType().GetFields(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance).ToArray();\r\n#else\r\n        FieldInfo[] fieldArray = GetType().GetFields(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance);\r\n#endif`\r\nas I need my code to be able to work with and without holotoolkit. But I was wondering why this extension is needed ? I guess it was useful at some point or on older versions of Unity maybe ? Or did I miss a detail somewhere ?\r\n\r\nThanks"
    },
    "satisfaction_conditions": [
      "Code must compile and build successfully in both HoloToolkit and non-HoloToolkit environments",
      "Reflection functionality must return correct field information in expected format",
      "No namespace conflicts between HoloToolkit and existing code",
      "Maintains backward compatibility with existing code dependencies"
    ],
    "created_at": "2017-03-24T14:11:16Z"
  }
]