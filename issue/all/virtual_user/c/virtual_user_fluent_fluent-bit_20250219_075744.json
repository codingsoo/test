[
  {
    "id": "https://github.com/fluent/fluent-bit/issues/1266",
    "source": {
      "issue_number": 1266
    },
    "initial_question": {
      "title": "Null output does not drop events",
      "body": "## Bug Report\r\n\r\n**Describe the bug**\r\n\r\nCatch-all `null` output does not seem to drop events.\r\n\r\n**To Reproduce**\r\n\r\nUsing a simple configuration with a `tail` input:\r\n\r\n```\r\n[SERVICE]\r\n    Flush 5\r\n    Daemon False\r\n    Log_Level debug\r\n\r\n[INPUT]\r\n    Name tail\r\n\r\n    Path /tmp/test/*.log\r\n\r\n    Path_Key source\r\n    Tag event\r\n\r\n[OUTPUT]\r\n    Name null\r\n    Match *\r\n\r\n[OUTPUT]\r\n    Name stdout\r\n    Match *\r\n```\r\n\r\nAppending a line to e.g. `/tmp/test/foo.log` results in it appearing in stdout.\r\n\r\n**Expected behavior**\r\n\r\nEverything should be dropped.\r\n\r\n**Your Environment**\r\n\r\n* Version used: 1.0.6\r\n* Operating System and version: CentOS 7"
    },
    "satisfaction_conditions": [
      "The configuration must handle multiple output plugins correctly",
      "The solution must be implementable within the logging service's configuration system"
    ],
    "created_at": "2019-04-09T19:27:55Z"
  },
  {
    "id": "https://github.com/fluent/fluent-bit/issues/802",
    "source": {
      "issue_number": 802
    },
    "initial_question": {
      "title": "filter_parser: wrong timestamp parsing",
      "body": "## Bug Report\r\n\r\n**Describe the bug**\r\nI use fluent-bit for parsing logs from eventrouter which is allocated in Kubernetes cluster v1.8.13. \r\n\r\n**To Reproduce**\r\n- Input logs looks like this\r\n```\r\n{\"log\":\"{\\\"verb\\\":\\\"UPDATED\\\",\\\"event\\\":{\\\"metadata\\\":{\\\"name\\\":\\\"fluent-bit-nrkd5.1557a59f93ed30bd\\\",\\\"namespace\\\":\\\"maintenance\\\",\\\"selfLink\\\":\\\"/api/v1/namespaces/maintenance/events/fluent-bit-nrkd5.1557a59f93ed30bd\\\",\\\"uid\\\":\\\"c0814efc-c0c1-11e8-b37c-000d3a0c13e0\\\",\\\"resourceVersion\\\":\\\"34652239\\\",\\\"creationTimestamp\\\":\\\"2018-09-25T12:51:42Z\\\"},\\\"involvedObject\\\":{\\\"kind\\\":\\\"Pod\\\",\\\"namespace\\\":\\\"maintenance\\\",\\\"name\\\":\\\"fluent-bit-nrkd5\\\",\\\"uid\\\":\\\"7485af76-c0ba-11e8-b37c-000d3a0c13e0\\\",\\\"apiVersion\\\":\\\"v1\\\",\\\"resourceVersion\\\":\\\"34626284\\\",\\\"fieldPath\\\":\\\"spec.containers{fluent-bit}\\\"},\\\"reason\\\":\\\"BackOff\\\",\\\"message\\\":\\\"Back-off restarting failed container\\\",\\\"source\\\":{\\\"component\\\":\\\"kubelet\\\",\\\"host\\\":\\\"k8s-agentpool-18576138-1\\\"},\\\"firstTimestamp\\\":\\\"2018-09-25T12:51:42Z\\\",\\\"lastTimestamp\\\":\\\"2018-09-25T14:01:42Z\\\",\\\"count\\\":108,\\\"type\\\":\\\"Warning\\\"},\\\"old_event\\\":{\\\"metadata\\\":{\\\"name\\\":\\\"fluent-bit-nrkd5.1557a59f93ed30bd\\\",\\\"namespace\\\":\\\"maintenance\\\",\\\"selfLink\\\":\\\"/api/v1/namespaces/maintenance/events/fluent-bit-nrkd5.1557a59f93ed30bd\\\",\\\"uid\\\":\\\"c0814efc-c0c1-11e8-b37c-000d3a0c13e0\\\",\\\"resourceVersion\\\":\\\"34649881\\\",\\\"creationTimestamp\\\":\\\"2018-09-25T12:51:42Z\\\"},\\\"involvedObject\\\":{\\\"kind\\\":\\\"Pod\\\",\\\"namespace\\\":\\\"maintenance\\\",\\\"name\\\":\\\"fluent-bit-nrkd5\\\",\\\"uid\\\":\\\"7485af76-c0ba-11e8-b37c-000d3a0c13e0\\\",\\\"apiVersion\\\":\\\"v1\\\",\\\"resourceVersion\\\":\\\"34626284\\\",\\\"fieldPath\\\":\\\"spec.containers{fluent-bit}\\\"},\\\"reason\\\":\\\"BackOff\\\",\\\"message\\\":\\\"Back-off restarting failed container\\\",\\\"source\\\":{\\\"component\\\":\\\"kubelet\\\",\\\"host\\\":\\\"k8s-agentpool-18576138-1\\\"},\\\"firstTimestamp\\\":\\\"2018-09-25T12:51:42Z\\\",\\\"lastTimestamp\\\":\\\"2018-09-25T13:50:09Z\\\",\\\"count\\\":98,\\\"type\\\":\\\"Warning\\\"}}\\n\",\"stream\":\"stdout\",\"time\":\"2018-09-25T14:01:42.888266344Z\"}\r\n```\r\n- Fluent bit config\r\n```\r\n[SERVICE]\r\n    Flush             1\r\n    Log_Level         info\r\n    Daemon            off\r\n    Parsers_File      parsers.conf\r\n\r\n[INPUT]\r\n    Name              exec \r\n    Tag               dummy.*\r\n    Command           cat /fluent-bit/etc/test.log\r\n    Interval_Sec      5\r\n    Parser            json_with_decoder\r\n\r\n[FILTER]\r\n    Name              parser\r\n    Match             dummy.*\r\n    Key_name          log\r\n    Parser            simple_json_with_time\r\n\r\n[FILTER]\r\n    Name              stdout\r\n    Match             *\r\n\r\n[OUTPUT]\r\n    Name              null\r\n    Match             *\r\n\r\n```\r\nParsers\r\n```\r\n[PARSER]\r\n    Name              simple_json_with_time\r\n    Format            json\r\n    Time_Key          time\r\n    Time_Format       %Y-%m-%dT%H:%M:%S %z\r\n    Decode_Field_As   json       log\r\n[PARSER]\r\n    Name              json_with_decoder\r\n    Format            json\r\n    Time_Key          time\r\n    Time_Format       %Y-%m-%dT%H:%M:%S %z\r\n    Time_Keep         On\r\n    Decode_Field_As   escaped    log              \r\n```\r\n- Output\r\n```\r\n[0] dummy.*: [1475.705376256, {\"verb\"=>\"UPDATED\", \"event\"=>{\"metadata\"=>{\"name\"=>\"fluent-bit-mw775.15576d223f61d4fc\", \"namespace\"=>\"maintenance\", \"selfLink\"=>\"/api/v1/namespaces/maintenance/events/fluent-bit-mw775.15576d223f61d4fc\", \"uid\"=>\"c189410a-c0c1-11e8-836d-000d3a0c1b95\", \"resourceVersion\"=>\"34652236\", \"creationTimestamp\"=>\"2018-09-25T12:51:44Z\"}, \"involvedObject\"=>{\"kind\"=>\"Pod\", \"namespace\"=>\"maintenance\", \"name\"=>\"fluent-bit-mw775\", \"uid\"=>\"07927047-6f03-11e8-98ad-000d3a0c13e0\", \"apiVersion\"=>\"v1\", \"resourceVersion\"=>\"34453649\"}, \"reason\"=>\"FailedSync\", \"message\"=>\"Error syncing pod\", \"source\"=>{\"component\"=>\"kubelet\", \"host\"=>\"k8s-agentpool-18576138-11\"}, \"firstTimestamp\"=>\"2018-09-24T19:36:31Z\", \"lastTimestamp\"=>\"2018-09-25T14:01:41Z\", \"count\"=>93, \"type\"=>\"Warning\"}, \"old_event\"=>{\"metadata\"=>{\"name\"=>\"fluent-[2018/09/25 18:17:14] [ warn] [parser:json_with_decoder] Invalid time format %Y-%m-%dT%H:%M:%S %z for '2018-09-25T14:01:42.888266344Z'.\r\n```\r\n**Expected behavior**\r\nTrue time parsing\r\n\r\n**Your Environment**\r\n<!--- Include as many relevant details about the environment you experienced the bug in -->\r\n* Version used: fluent/fluent-bit:0.14.3\r\n* Docker version: 18.06.1-ce\r\n"
    },
    "satisfaction_conditions": [
      "Timestamp parsing successfully processes logs with nanosecond precision timestamps in ISO 8601 format",
      "Maintains the original timestamp precision in parsed output"
    ],
    "created_at": "2018-09-27T12:20:40Z"
  },
  {
    "id": "https://github.com/fluent/fluent-bit/issues/714",
    "source": {
      "issue_number": 714
    },
    "initial_question": {
      "title": "Warning for TimeFormat even though it is correct",
      "body": "the log for fluent-bit is full of warning about invalid time format , but checking the date received and format it seems it is correct .\r\n\r\nI could not tell why it is doing so \r\n\r\n```\r\n    [PARSER]\r\n        Name        springboot\r\n        Format      regex\r\n        Regex       /^(?<date>[0-9]+-[0-9]+-[0-9]+\\s+[0-9]+:[0-9]+:[0-9]+.[0-9]+)\\s+\\[(?<user_name>.*)\\]\\s+(?<log_level>[Aa]lert|ALERT|[Tt]race|TRACE|[Dd]ebug|DEBUG|[Nn]otice|NOTICE|[Ii]nfo|INFO|[Ww]arn?(?:ing)?|WARN?(?:ING)?|[Ee]rr?(?:or)?|ERR?(?:OR)?|[Cc]rit?(?:ical)?|CRIT?(?:ICAL)?|[Ff]atal|FATAL|[Ss]evere|SEVERE|EMERG(?:ENCY)?|[Ee]merg(?:ency)?)\\s+(?<pid>[0-9]+)\\s+---\\s+\\[(?<thread>.*)\\]\\s+(?<class_name>.*)\\s+:\\s+(?<message>.*)$/\r\n        Time_Key    date\r\n        Time_Format %Y-%m-%d %H:%M:%S.$L\r\n```\r\n\r\n```\r\n[2018/08/11 15:02:30] [ warn] [parser:springboot] Invalid time format %Y-%m-%d %H:%M:%S.$L for '2018-08-11 15:02:30.975'.\r\n[2018/08/11 15:02:33] [ warn] [parser:springboot] Invalid time format %Y-%m-%d %H:%M:%S.$L for '2018-08-11 15:02:33.367'.\r\n[2018/08/11 15:02:34] [ warn] [parser:springboot] Invalid time format %Y-%m-%d %H:%M:%S.$L for '2018-08-11 15:02:34.535'.\r\n[2018/08/11 15:02:36] [ warn] [parser:springboot] Invalid time format %Y-%m-%d %H:%M:%S.$L for '2018-08-11 15:02:36.598'.\r\n[2018/08/11 15:02:37] [ warn] [parser:springboot] Invalid time format %Y-%m-%d %H:%M:%S.$L for '2018-08-11 15:02:37.900'.\r\n[2018/08/11 15:02:39] [ warn] [parser:springboot] Invalid time format %Y-%m-%d %H:%M:%S.$L for '2018-08-11 15:02:39.347'.\r\n[2018/08/11 15:02:41] [ warn] [parser:springboot] Invalid time format %Y-%m-%d %H:%M:%S.$L for '2018-08-11 15:02:41.120'.\r\n[2018/08/11 15:02:42] [ warn] [parser:springboot] Invalid time format %Y-%m-%d %H:%M:%S.$L for '2018-08-11 15:02:42.420'.\r\n[2018/08/11 15:02:42] [ warn] [parser:springboot] Invalid time format %Y-%m-%d %H:%M:%S.$L for '2018-08-11 15:02:42.617'.\r\n[2018/08/11 15:02:45] [ warn] [parser:springboot] Invalid time format %Y-%m-%d %H:%M:%S.$L for '2018-08-11 15:02:45.014'.\r\n[2018/08/11 15:02:46] [ warn] [parser:springboot] Invalid time format %Y-%m-%d %H:%M:%S.$L for '2018-08-11 15:02:46.981'.\r\n[2018/08/11 15:02:47] [ warn] [parser:springboot] Invalid time format %Y-%m-%d %H:%M:%S.$L for '2018-08-11 15:02:47.722'.\r\n```"
    },
    "satisfaction_conditions": [
      "Log entries are successfully stored in the target database",
      "Parser regex pattern matches the complete log entry structure"
    ],
    "created_at": "2018-08-16T09:55:55Z"
  },
  {
    "id": "https://github.com/fluent/fluent-bit/issues/572",
    "source": {
      "issue_number": 572
    },
    "initial_question": {
      "title": "Nanoseconds missing when using forward input",
      "body": "Hello,\r\n\r\nI have been struggling with a curious situation where Docker container logs miss the nanosecond piece of timestamp when using `in_forward`. \r\n\r\n#### Failling scenario\r\n\r\n##### fluent-bit.conf:\r\n```\r\n[SERVICE]\r\n    Flush 1\r\n    Daemon Off\r\n    Log_Level info\r\n\r\n[INPUT]\r\n    Name forward\r\n    Host 0.0.0.0\r\n    Port 24224\r\n\r\n[OUTPUT]\r\n    Name stdout\r\n    Match *\r\n```\r\n\r\nWhen running a Docker image with this setup, the nanosecond precision is converted to 0s:\r\n```\r\n[0] e667dc543a03: [1524598344.000000000, {\"container_id\"=>\"e667dc543a034403e743a4b715aa345c3ab36bc5211696ad423c2be09643b230\", \"container_name\"=>\"/determined_poincare\", \"source\"=>\"stdout\", \"log\"=>\"frame=51\"}]\r\n[1] e667dc543a03: [1524598344.000000000, {\"container_id\"=>\"e667dc543a034403e743a4b715aa345c3ab36bc5211696ad423c2be09643b230\", \"container_name\"=>\"/determined_poincare\", \"source\"=>\"stdout\", \"log\"=>\"fps=0.0\"}]\r\n[2] e667dc543a03: [1524598344.000000000, {\"log\"=>\"stream_0_0_q=0.0\", \"container_id\"=>\"e667dc543a034403e743a4b715aa345c3ab36bc5211696ad423c2be09643b230\", \"container_name\"=>\"/determined_poincare\", \"source\"=>\"stdout\"}]\r\n[3] e667dc543a03: [1524598344.000000000, {\"container_id\"=>\"e667dc543a034403e743a4b715aa345c3ab36bc5211696ad423c2be09643b230\", \"container_name\"=>\"/determined_poincare\", \"source\"=>\"stdout\", \"log\"=>\"bitrate=   0.2kbits/s\"}]\r\n[4] e667dc543a03: [1524598344.000000000, {\"container_id\"=>\"e667dc543a034403e743a4b715aa345c3ab36bc5211696ad423c2be09643b230\", \"container_name\"=>\"/determined_poincare\", \"source\"=>\"stdout\", \"log\"=>\"total_size=48\"}]\r\n[5] e667dc543a03: [1524598344.000000000, {\"log\"=>\"out_time_ms=1920000\", \"container_id\"=>\"e667dc543a034403e743a4b715aa345c3ab36bc5211696ad423c2be09643b230\", \"container_name\"=>\"/determined_poincare\", \"source\"=>\"stdout\"}]\r\n[6] e667dc543a03: [1524598344.000000000, {\"container_name\"=>\"/determined_poincare\", \"source\"=>\"stdout\", \"log\"=>\"out_time=00:00:01.920000\", \"container_id\"=>\"e667dc543a034403e743a4b715aa345c3ab36bc5211696ad423c2be09643b230\"}]\r\n```\r\n\r\nDuring several tests, I've noticed that if I change `in_forward` to `in_tail` and point the path to the actual container log (i.e. without using `--log-driver fluentd` option) the precision is there:\r\n\r\n#### Working scenario\r\n\r\n##### fluent-bit.conf:\r\n```\r\n[SERVICE]\r\n    Flush 1\r\n    Daemon Off\r\n    Log_Level info\r\n\r\n[INPUT]\r\n    Name tail\r\n    Path /var/lib/docker/containers/<DOCKER_CONTAINER_ID>/*.log\r\n\r\n[OUTPUT]\r\n    Name stdout\r\n    Match *\r\n```\r\n\r\nWith this config, nanosecond precision is printed as expected:\r\n\r\n```\r\n[0] tail.0: [1524598700.422911026, {\"log\"=>\"{\"log\":\"[mp4 @ 0x7f102d2730a0] Using AVStream.codec to pass codec parameters to muxers is deprecated, use AVStream.codecpar instead.\\n\",\"stream\":\"stderr\",\"time\":\"2018-04-24T19:37:47.267283855Z\"}\"}]\r\n[1] tail.0: [1524598700.422927803, {\"log\"=>\"{\"log\":\"frame=51\\n\",\"stream\":\"stdout\",\"time\":\"2018-04-24T19:37:47.795611724Z\"}\"}]\r\n[2] tail.0: [1524598700.422929512, {\"log\"=>\"{\"log\":\"fps=0.0\\n\",\"stream\":\"stdout\",\"time\":\"2018-04-24T19:37:47.795682825Z\"}\"}]\r\n[3] tail.0: [1524598700.422930957, {\"log\"=>\"{\"log\":\"stream_0_0_q=0.0\\n\",\"stream\":\"stdout\",\"time\":\"2018-04-24T19:37:47.795689101Z\"}\"}]\r\n[4] tail.0: [1524598700.422932435, {\"log\"=>\"{\"log\":\"bitrate=   0.2kbits/s\\n\",\"stream\":\"stdout\",\"time\":\"2018-04-24T19:37:47.795694113Z\"}\"}]\r\n[5] tail.0: [1524598700.422933923, {\"log\"=>\"{\"log\":\"total_size=48\\n\",\"stream\":\"stdout\",\"time\":\"2018-04-24T19:37:47.795698881Z\"}\"}]\r\n[6] tail.0: [1524598700.422935424, {\"log\"=>\"{\"log\":\"out_time_ms=1920000\\n\",\"stream\":\"stdout\",\"time\":\"2018-04-24T19:37:47.795703697Z\"}\"}]\r\n[7] tail.0: [1524598700.422936884, {\"log\"=>\"{\"log\":\"out_time=00:00:01.920000\\n\",\"stream\":\"stdout\",\"time\":\"2018-04-24T19:37:47.795708405Z\"}\"}]\r\n```\r\n\r\nIs there anything I'm missing? I am currently running fluent-bit v0.12.18 in a Docker container.\r\n\r\nThanks in advance!"
    },
    "satisfaction_conditions": [
      "Log timestamps must include nanosecond precision",
      "Docker logging configuration must support sub-second precision",
      "Logging system must be version-compatible",
      "Timestamp precision must be preserved through the entire logging pipeline"
    ],
    "created_at": "2018-04-24T19:41:21Z"
  },
  {
    "id": "https://github.com/fluent/fluent-bit/issues/434",
    "source": {
      "issue_number": 434
    },
    "initial_question": {
      "title": "How to use in_systemd_plugin",
      "body": "I want to collect log messages from the Journald daemon on Linux environments, and I find that the Systemd/Journald input plugin has been developed. Yesterday, I got the latest source code from Github. But when I try to use that input plugin, the fluent-bit.conf is as flowing:\r\n/---------------------------------------------------------------------------------/\r\n[INPUT]\r\n    Name systemd\r\n    Path /home/xh/Desktop/logdata/journal/*\r\n    Tag  k8s-system\r\n\r\n[OUTPUT]\r\n    Name  stdout\r\n    Match *\r\n/---------------------------------------------------------------------------------/\r\n\r\nI got the following error log:\r\n\r\n/---------------------------------------Error------------------------------------------/\r\nInput plugin 'systemd' cannot be loaded\r\n/---------------------------------------------------------------------------------/\r\n\r\nSo I try to find out why got this, I find that \r\n     1.  fluent-bit.c     \r\n                   /* Create configuration context */\r\n                   config = flb_config_init();\r\n\r\n     2.  flb_config.c  \r\n                   /* Register plugins */\r\n                   flb_register_plugins(config);\r\n\r\n     3.   flb_plugin.h\r\n     \r\nThe flb_plugin.h is produced during compling period according to flb_plugin.h.in.\r\nDuring the compling, I got this \r\n/---------------------------------------------------------------------------------/\r\n-- Could NOT find Journald (missing: JOURNALD_LIBRARY JOURNALD_INCLUDE_DIR) \r\n/---------------------------------------------------------------------------------/\r\n\r\nthen I further to find that in Findjournal.cmake\r\n/----------------------------------------------------------------------------------------------------/\r\nfind_package(PkgConfig)\r\npkg_check_modules(PC_JOURNALD QUIET systemd)\r\n\r\n/----------------------------------------------------------------------------------------------------------/\r\n\r\nIn fact\uff0cI find that the package pkg-config is existed , so find_package(PkgConfig) is true.\r\n\r\nIf I use pkg_check_modules(PC_JOURNALD REQUIRED systemd),  I find the systemd are existed.\r\n/----------------------------------------------------------------------------------------------------------/\r\n-- Checking for module 'systemd'\r\n--   Found systemd, version 229\r\n/----------------------------------------------------------------------------------------------------------/\r\n And the PC_JOURNALD_FOUND ia assigned 1. But PC_JOURNALD_CFLAGS_OTHER, PC_JOURNALD_INCLUDEDIR, PC_JOURNALD_INCLUDE_DIRS, PC_JOURNALD_LIBDIR and PC_JOURNALD_LIBRARY_DIRS are not assigned. \r\n\r\nMy OS is Ubuntu 16.04. The cmake version is 3.9.4. The pkg-config version is 0.29.1. The systemd version is 229. \r\n\r\nSo I hope someone can tell me how to do, if I want to use in_systemd_plugin. Thanks very much!\r\n\r\n\r\n"
    },
    "satisfaction_conditions": [
      "Required systemd development dependencies must be installed",
      "Build system must correctly detect systemd/journald libraries",
      "Configuration file must specify valid systemd input parameters"
    ],
    "created_at": "2017-11-16T08:43:27Z"
  },
  {
    "id": "https://github.com/fluent/fluent-bit/issues/359",
    "source": {
      "issue_number": 359
    },
    "initial_question": {
      "title": "How do in_tail deal with Scroll log",
      "body": "I am sorry to trouble you again \u00b7\u00b7\r\nI have a little test with in_tail a scrolling log and find a problem:\r\n\r\n- first I touch a log file by `echo aaa > a.log` and run flb\r\n```\r\n./fluent-bit-dev -i tail -p path=$(pwd)/a.log -o stdout\r\n```\r\n\r\n- then append content by echo \r\n\r\n```\r\necho bbb >> a.log\r\necho ccc >> a.log\r\necho ddd >> a.log\r\n```\r\nsince now out put is correct\r\n```\r\nFluent-Bit v0.12.0\r\nCopyright (C) Treasure Data\r\n\r\n[2017/08/17 03:33:49] [ info] [engine] started\r\n[0] tail.0: [1502940829.966728341, {\"log\"=>\"aaa\"}]\r\n[0] tail.0: [1502940841.515776656, {\"log\"=>\"bbb\"}]\r\n[0] tail.0: [1502940850.129314776, {\"log\"=>\"ccc\"}]\r\n[0] tail.0: [1502940856.325415717, {\"log\"=>\"ddd\"}]\r\n```\r\n- then I clean flie and append other  content\r\n```\r\necho eee > a.log \r\necho fff >> a.log\r\n```\r\nNow can't get new record, like docker log if limit the log's max-size and max-file it will do a similar operation, so there is any way to deal with it?"
    },
    "satisfaction_conditions": [
      "System must detect file content clearing events",
      "System must handle file rename operations correctly"
    ],
    "created_at": "2017-08-17T03:50:52Z"
  }
]