[
  {
    "number": 934,
    "title": "dispatch(action) calls reducer twice but this.props.function not",
    "created_at": "2015-10-22T18:15:07Z",
    "closed_at": "2015-10-22T18:21:31Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/reduxjs/redux/issues/934",
    "body": "Hello,\nI got a strange problem and I have no idea what causes this.\nThe approach that I am using is the mapStateToProps / mapDispatchToProps.\n\nThe strang thing is:\n- When I call the action through the function I am passing in through mapDispatchToProps, the reducer gets only called once.\n- When I am using the this.props.dispatch(action) the reducer gets called twice.\n\nThe logger shows that the state is changed to true but then the reducers gets called again and its set back to false again.\n\nFor better understanding, here's the code a code sample.\n\nAction creator:\n\n``` typescript\n//../actions/shellActions\nimport { TOGGLE_SIDEBAR } from '../constants/actionTypes';\nexport function toggleNavigation() {\n    return {\n        type: TOGGLE_SIDEBAR\n    }\n}\n```\n\nReducer\n\n``` typescript\n//../reducers/navigationReducer\nimport { TOGGLE_SIDEBAR } from '../constants/actionTypes';\n\nexport default function toggleSidebar(state:boolean=false, action:any) {\n    let hideSidebar = !state;\n    switch (action.type) {        \n        case TOGGLE_SIDEBAR:\n            return hideSidebar;\n        default:\n            return state;\n    }\n}\n\n//../reducers/rootReducer\nimport { default as toggleSidebar } from './navigationReducer';\n\nconst rootReducer: Redux.Reducer = combineReducers({\n    toggleSidebar: toggleSidebar\n});\n\nexport default rootReducer;\n```\n\nContainer\n\n``` typescript\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { toggleNavigation } from '../actions/shellActions';\n\nclass App extends React.Component<any, any> {\n    constructor(props) {\n        super(props);\n    }\n\n    onToggle() {\n        //this.props.toggleNavigation(); This gets called once\n        this.props.dispatch(toggleNavigation()); // This gets called twice\n    }\n\n    render() {\n        return (\n            <div className={ isSidebarVisible ? \"body-container\" : \"body-container sidebar-open\"}>\n                <button onClick={ this.onToggle.bind(this) }>Toggle</button>\n\n            </div>\n        );\n    }\n}\n\n\nfunction mapStateToProps(state: RootState):AppProp {\n    return {\n        isSidebarVisible: state.toggleSidebar\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    const actions: AppProp = {\n        dispatch: dispatch,\n        toggleNavigation: toggleNavigation\n    };\n\n    return bindActionCreators(actions, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n```\n\nMaybe I did something wrong.\nThanks\n",
    "comments_url": "https://api.github.com/repos/reduxjs/redux/issues/934/comments",
    "author": "datoml",
    "comments": [
      {
        "user": "gaearon",
        "created_at": "2015-10-22T18:21:31Z",
        "body": "If you're using `bindActionCreators` and `mapDispatchToProps`, the action creators _are already bound_. There is no need to call `dispatch()` on their return values. The whole point of `bindActionCreators()` is _not_ to call `dispatch()`. You should either `bindActionCreators()` and call them as is, or not use it, and call `dispatch()`.\n"
      }
    ]
  },
  {
    "number": 1318,
    "title": "replaceReducer() should throw if argument is not a function ",
    "created_at": "2016-01-30T09:01:40Z",
    "closed_at": "2016-01-30T09:35:54Z",
    "labels": [
      "enhancement",
      "help wanted"
    ],
    "url": "https://github.com/reduxjs/redux/issues/1318",
    "body": "This is an easy one, please feel free to send a PR.\nWe want to add a `typeof` check in `replaceReducer` just like we have when the store is created. \n",
    "comments_url": "https://api.github.com/repos/reduxjs/redux/issues/1318/comments",
    "author": "gaearon",
    "comments": [
      {
        "user": "Andersos",
        "created_at": "2016-01-30T09:25:02Z",
        "body": "Hello @gaearon, I tried making a pull request for this in #1320 . Do you want me to also try and make a test for the case?\n"
      }
    ]
  }
]