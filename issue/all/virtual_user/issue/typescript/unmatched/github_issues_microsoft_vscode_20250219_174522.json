[
  {
    "number": 2091,
    "title": "Ctrl-Up and Ctrl-Down don't advance cursor when hits page limit",
    "created_at": "2016-01-18T17:03:05Z",
    "closed_at": "2017-11-22T15:12:33Z",
    "labels": [
      "help wanted",
      "feature-request",
      "editor-core"
    ],
    "url": "https://github.com/microsoft/vscode/issues/2091",
    "body": "I use the Ctrl-Up and Ctrl-Down feature very often, so I can scroll a limited amount of distance without losing my place. This has the advantage of allowing me to use the mouse less for view adjustment.\n\nI've noticed that there is a difference between how this behaves in the full Visual Studio and in Code. In Visual Studio, when you use Ctrl-Up/Down and the view moves such that the cursor is at the limit of the screen, then the editor will advance the cursor such that it remains on the last line visible. Code, however, does not do this, so the next time you hit a key (e.g. a cursor key without pressing Ctrl) then the view resets back to the line you were originally on which is quite jarring.\n",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/2091/comments",
    "author": "fractos",
    "comments": [
      {
        "user": "rob3c",
        "created_at": "2016-02-19T17:12:10Z",
        "body": "First of all, I just wanted to say it's great to finally have keyboard scrolling in VS Code! That said, this unexpected behavior can be quite frustrating for some of us as it breaks your flow when coding in addition to not matching the feature in other editors.\n\nHowever, I can see how others might like the current behavior so they can scroll a bit to see some code for reference and then snap back to the original context that's possibly offscreen (maybe that's why the original author did it that way?)\n\nPerhaps this is best made into a configuration flag instead of just 'fixing' it as a bug?\n"
      },
      {
        "user": "rob3c",
        "created_at": "2016-03-31T16:10:28Z",
        "body": "I think it should still be labeled a bug, as the current behavior doesn't allow for you to remain in the newly-scrolled screen without using the mouse to put focus in the new position. This is because the cursor stays put even when it completely scrolls out of view. Since this is all about keyboard navigation, then requiring the mouse seems counter to the spirit of it.\n\nMost editors have the cursor follow along at the top or bottom of the screen (depending on scroll direction) when scrolling beyond the current view. In that way, there's no jarring snap back to another location off-screen when you start moving the cursor with arrow keys again or start typing.\n\nHowever, some editors additionally allow you to hit ESC to snap back to the original position in the cases where you're scrolling just to take a peek instead of wanting to stay in the new location.\n"
      },
      {
        "user": "rob3c",
        "created_at": "2016-05-10T17:25:56Z",
        "body": "@alexandrudima I can understand this may not be a high priority item and hasn't been addressed yet, even though it's quite frustrating for some of us on a daily basis. However, would you mind explaining why you removed the bug label in light of my previous comment?\n"
      },
      {
        "user": "Tyriar",
        "created_at": "2016-05-12T06:16:21Z",
        "body": "@rob3c it's not a bug as it's working as intended currently, making this configurable would be adding functionality rather than fixing it.\n\nThis is probably the sort of thing we'd accept a PR for because of the priority of it, @alexandrudima do you want to add the help wanted label?\n"
      },
      {
        "user": "rob3c",
        "created_at": "2016-06-07T19:48:09Z",
        "body": "In addition to Visual Studio, it would also provide the same behavior as in many other editors like Sublime Text, Notepad++, etc.\n\nJetBrains editors (IntelliJ IDEA, WebStorm, etc.) use the current VSCode behavior by default. It's clear that they've recognized it as non-obvious and disorienting for many users since they attempt to make it less jarring by leading the eye with a smooth reverse scrolling animation back to the offscreen cursor position. They also offer separate \"move if necessary\" versions of each up/down scroll command to get the behavior desired in this thread.\n"
      },
      {
        "user": "Bill-Stewart",
        "created_at": "2016-09-19T21:42:50Z",
        "body": "I like that we now have `editorScroll` function for scrolling up and down with `revealCursor` parameter set to `true`. However I would like to disable the behavior of how the cursor jumps to the first non-whitespace character of the next line when scrolling down or previous line when scrolling up. I will open a separate issue for my idea.\n"
      },
      {
        "user": "alexdima",
        "created_at": "2017-11-22T15:12:33Z",
        "body": "To keep the number of issues in our inbox at a manageable level, we're closing issues that have been on the backlog for a long time but haven't gained traction: we look at the number of votes the issue has received and the number of duplicate issues filed. Thank you for your time and understanding.\r\n\r\nP.S. If you disagree and feel that this issue is crucial: we're happy to listen and to reconsider.\r\n\r\n---\r\n\r\nFor this particular issue, the following \"workaround\" exists (in `keybindings.json`). e.g. for going down:\r\n\r\n```\r\n    {\r\n        \"key\": \"ctrl+down\",\r\n        \"command\": \"editorScroll\",\r\n        \"args\": {\r\n            \"to\": \"down\",\r\n            \"by\": \"line\",\r\n            \"revealCursor\": true\r\n        }\r\n    }\r\n```\r\n"
      },
      {
        "user": "fractos",
        "created_at": "2017-11-22T15:19:20Z",
        "body": "@alexandrudima Pretty much ideal with the workaround, for me (although when scrolling up the cursor stays on the penultimate line for some reason). Anyway - thanks for posting that!"
      },
      {
        "user": "ghost",
        "created_at": "2017-11-23T22:14:47Z",
        "body": "Just tried the workaround:\r\n\r\n```\r\n\t{\r\n\t\t\"key\": \"ctrl+up\",\r\n\t\t\"command\": \"editorScroll\",\r\n\t\t\"when\": \"editorTextFocus\",\r\n\t\t\"args\": \r\n\t\t{\r\n\t\t\t\"to\": \"up\",\r\n\t\t\t\"by\": \"line\",\r\n\t\t\t\"revealCursor\": true\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"key\": \"ctrl+down\",\r\n\t\t\"command\": \"editorScroll\",\r\n\t\t\"when\": \"editorTextFocus\",\r\n\t\t\"args\": \r\n\t\t{\r\n\t\t\t\"to\": \"down\",\r\n\t\t\t\"by\": \"line\",\r\n\t\t\t\"revealCursor\": true\r\n\t\t}\r\n\t}\r\n```\r\n\r\nUp works fine; down sometimes scrolls several lines than stops as if it has reached the end of the file; most of the time down does not respond at all.\r\n\r\nVisual Studio Code version: 1.18.1, 2017-11-16\r\n\r\n* Happens in a js file with folded functions; without folding seems to work fine."
      }
    ]
  }
]