[
  {
    "number": 540,
    "title": "Comprehensive marble tests for concatMap",
    "created_at": "2015-10-15T14:03:47Z",
    "closed_at": "2015-10-26T20:27:56Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/ReactiveX/rxjs/issues/540",
    "body": "(I didn't find tests for concatMap, maybe we should have it)\n",
    "comments_url": "https://api.github.com/repos/ReactiveX/rxjs/issues/540/comments",
    "author": "staltz",
    "comments": [
      {
        "user": "staltz",
        "created_at": "2015-10-19T11:07:20Z",
        "body": "Found a potential bug.\n\nRxJS 4 does this:\n\n``` js\nvar e1 = hot(    '--a---b---c---|');\nvar inner = cold(  '-1-2-3-4|    ');\nvar expected =   '---1-2#        ';\n\nvar result = e1.concatMap(value => {\n  if (value === 'b') {\n    throw 'error';\n  }\n  return inner;\n});\n```\n\nwhile RxJS Next does this:\n\n``` js\nvar e1 = hot(    '--a---b---c---|');\nvar inner = cold(  '-1-2-3-4|    ');\nvar expected =   '---1-2-3-4#    ';\n\nvar result = e1.concatMap(value => {\n  if (value === 'b') {\n    throw 'error';\n  }\n  return inner;\n});\n```\n\nIf we are to mirror RxJS 4's functionality, then it's a bug. But we might also be redefining how concatMap should work.\n\nFeedback? @blesh ?\n"
      },
      {
        "user": "trxcllnt",
        "created_at": "2015-10-20T21:31:25Z",
        "body": "@staltz not a bug, just an artifact of changing the default scheduling model from trampolining to recursive. Try your first example in Rx 4 using the ImmediateScheduler and you'll get the same results as the Rx Next example.\n"
      }
    ]
  }
]