[
  {
    "number": 993,
    "title": "How to run Clr and Core jobs at the same time?",
    "created_at": "2018-12-29T14:11:17Z",
    "closed_at": "2018-12-30T17:08:01Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/dotnet/BenchmarkDotNet/issues/993",
    "body": "Hi\r\n\r\nFirst I tried to run Core and Clr jobs on .net core project but in this case only Core job finished successfully.\r\n\r\n``` ini\r\n\r\nBenchmarkDotNet=v0.11.3, OS=Windows 10.0.17134.472 (1803/April2018Update/Redstone4)\r\nIntel Core i7-5500U CPU 2.40GHz (Broadwell), 1 CPU, 4 logical and 2 physical cores\r\n.NET Core SDK=2.2.100\r\n  [Host] : .NET Core 2.2.0 (CoreCLR 4.6.27110.04, CoreFX 4.6.27110.04), 64bit RyuJIT\r\n  Core   : .NET Core 2.2.0 (CoreCLR 4.6.27110.04, CoreFX 4.6.27110.04), 64bit RyuJIT\r\n\r\n\r\n```\r\n|  Method |  Job | Runtime |     Mean |    Error |   StdDev |   Median |\r\n|-------- |----- |-------- |---------:|---------:|---------:|---------:|\r\n| Replace |  Clr |     Clr |       NA |       NA |       NA |       NA |\r\n| Replace | Core |    Core | 20.38 us | 1.389 us | 4.095 us | 18.77 us |\r\n\r\nBenchmarks with issues:\r\n  StringBenchmark.Replace: Clr(Runtime=Clr)\r\n\r\nWhen I checked logs and I found message that project is not compatible with net 472:\r\n\r\n// Build Exception: Standard output: \r\n   Restoring packages for C:\\Dev\\TheCodeManual\\StringPerformance\\StringPerformanceComparison\\bin\\Release\\netcoreapp2.2\\68bc1c9b-f1a8-4730-8f05-3d8e1e81d768\\BenchmarkDotNet.Autogenerated.csproj...\r\n  Restore completed in 72.18 ms for C:\\Dev\\TheCodeManual\\StringPerformance\\StringPerformanceComparison\\StringPerformanceComparison.csproj.\r\nC:\\Dev\\TheCodeManual\\StringPerformance\\StringPerformanceComparison\\bin\\Release\\netcoreapp2.2\\68bc1c9b-f1a8-4730-8f05-3d8e1e81d768\\BenchmarkDotNet.Autogenerated.csproj : error NU1201: Project StringPerformanceComparison is not compatible with net472 (.NETFramework,Version=v4.7.2). Project StringPerformanceComparison supports: netcoreapp2.2 (.NETCoreApp,Version=v2.2)\r\nC:\\Dev\\TheCodeManual\\StringPerformance\\StringPerformanceComparison\\bin\\Release\\netcoreapp2.2\\68bc1c9b-f1a8-4730-8f05-3d8e1e81d768\\BenchmarkDotNet.Autogenerated.csproj : error NU1201: Project StringPerformanceComparison is not compatible with net472 (.NETFramework,Version=v4.7.2) / win7-x64. Project StringPerformanceComparison supports: netcoreapp2.2 (.NETCoreApp,Version=v2.2)\r\n  Restore failed in 194.61 ms for C:\\Dev\\TheCodeManual\\StringPerformance\\StringPerformanceComparison\\bin\\Release\\netcoreapp2.2\\68bc1c9b-f1a8-4730-8f05-3d8e1e81d768\\BenchmarkDotNet.Autogenerated.csproj.\r\n\r\n\r\nSo I tried slightly different approach. I created full .NET framework console app and check what happens. It ended in similar fashion but this time Clr job finished successfully.\r\n\r\n``` ini\r\n\r\nBenchmarkDotNet=v0.11.3, OS=Windows 10.0.17134.472 (1803/April2018Update/Redstone4)\r\nIntel Core i7-5500U CPU 2.40GHz (Broadwell), 1 CPU, 4 logical and 2 physical cores\r\n  [Host] : .NET Framework 4.7.2 (CLR 4.0.30319.42000), 32bit LegacyJIT-v4.7.3260.0\r\n  Clr    : .NET Framework 4.7.2 (CLR 4.0.30319.42000), 32bit LegacyJIT-v4.7.3260.0\r\n\r\n\r\n```\r\n|  Method |  Job | Runtime |     Mean |     Error |   StdDev |\r\n|-------- |----- |-------- |---------:|----------:|---------:|\r\n| Replace |  Clr |     Clr | 16.49 us | 0.6754 us | 1.981 us |\r\n| Replace | Core |    Core |       NA |        NA |       NA |\r\n\r\nBenchmarks with issues:\r\n  StringBenchmark.Replace: Core(Runtime=Core)\r\n\r\n\r\nAnd this time there were confilcts with resolving proper dependencies due to different versons:\r\n\r\n// Build Exception: Standard output: \r\n Microsoft (R) Build Engine version 15.9.20+g88f5fadfbe for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 45.65 ms for C:\\Dev\\TheCodeManual\\StringPerformance\\StringPerformanceComparisonFull\\bin\\Release\\f30272d9-c3c3-4011-8f75-7264f756e91d\\BenchmarkDotNet.Autogenerated.csproj.\r\nC:\\Program Files\\dotnet\\sdk\\2.2.100\\Microsoft.Common.CurrentVersion.targets(2110,5): warning MSB3277: Found conflicts between different versions of \"System.Collections.Immutable\" that could not be resolved.  These reference conflicts are listed in the build log when log verbosity is set to detailed. [C:\\Dev\\TheCodeManual\\StringPerformance\\StringPerformanceComparisonFull\\bin\\Release\\f30272d9-c3c3-4011-8f75-7264f756e91d\\BenchmarkDotNet.Autogenerated.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.100\\Microsoft.Common.CurrentVersion.targets(2110,5): warning MSB3277: Found conflicts between different versions of \"System.Reflection.Metadata\" that could not be resolved.  These reference conflicts are listed in the build log when log verbosity is set to detailed. \r\n\r\nDid I do something worng or there is an issue on dotnetbenchmark side?",
    "comments_url": "https://api.github.com/repos/dotnet/BenchmarkDotNet/issues/993/comments",
    "author": "kmadof",
    "comments": [
      {
        "user": "adamsitnik",
        "created_at": "2018-12-30T17:08:01Z",
        "body": "Hi @kmadof \r\n\r\n```log\r\nProject StringPerformanceComparison is not compatible with net472 (.NETFramework,Version=v4.7.2). Project StringPerformanceComparison supports: netcoreapp2.2 (.NETCoreApp,Version=v2.2)\r\n```\r\n\r\nTo run projects for .NET and .NET Core the project that defines benchmarks must target both frameworks. In your case it should be:\r\n\r\n```xml\r\n<TargetFrameworks>netcoreapp2.2;net472</TargetFrameworks>\r\n```\r\n\r\nPlease feel free to reopen the issue if it does not help."
      }
    ]
  },
  {
    "number": 841,
    "title": "parse error in the follow ",
    "created_at": "2018-07-24T09:24:33Z",
    "closed_at": "2018-07-24T09:58:58Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/dotnet/BenchmarkDotNet/issues/841",
    "body": "I want to use BenchmarkDotNet to known the difference between Enum Attribute and property\r\nso I use this test \r\n```C#\r\nnamespace EnumAndProperty\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            BenchmarkRunner.Run<GetTextClass>();\r\n           \r\n            Console.ReadLine();\r\n        }\r\n\r\n    }\r\n    public class GetTextClass\r\n    {\r\n        [Benchmark]\r\n        public void GetTextByAttribute()\r\n        {\r\n            for (int i = 0; i < 10; i++)\r\n            {\r\n                Console.WriteLine(MetaEnum.TestEnum.Default.GetDescription() + i);\r\n            }\r\n        }\r\n        [Benchmark]\r\n        public void GetTextByProperty()\r\n        {\r\n            for (int i = 0; i < 10; i++)\r\n            {\r\n                Console.WriteLine(MetaEnum.Test + i);\r\n            }\r\n        }\r\n    }\r\n    public class MetaEnum\r\n    {\r\n        public enum TestEnum\r\n        {\r\n            /// <summary>\r\n            /// \u9ed8\u8ba4\r\n            /// <remarks>\u503c\u4e3a1</remarks>\r\n            /// </summary>\r\n            [Description(\"\u9ed8\u8ba4\")]\r\n            Default = 1,\r\n        }\r\n        public const string Test = \"\u6d4b\u8bd5\";\r\n    }\r\n    public static class EnumHelper\r\n    {\r\n        /// <summary>\r\n        /// \u83b7\u5f97\u679a\u4e3e\u8bbe\u5b9a\u7684\u503c\r\n        /// </summary>\r\n        /// <typeparam name=\"T\">\u679a\u4e3e\u503c\u7684\u7c7b\u578b\uff0c\u4e00\u822c\u4e3a<see cref=\"Int32\"/></typeparam>\r\n        /// <param name=\"enumValue\"></param>\r\n        /// <returns>\u679a\u4e3e\u5bf9\u5e94\u7684\u503c</returns>\r\n        public static T GetValue<T>(this Enum enumValue)\r\n        {\r\n            return (T)Convert.ChangeType(enumValue, enumValue.GetTypeCode());\r\n        }\r\n\r\n        /// <summary>\r\n        /// \u83b7\u53d6\u7279\u6027 (DescriptionAttribute) \u7684\u8bf4\u660e\uff1b\u5982\u679c\u672a\u4f7f\u7528\u8be5\u7279\u6027\uff0c\u5219\u8fd4\u56de\u679a\u4e3e\u7684\u540d\u79f0\u3002\r\n        /// </summary>\r\n        /// <param name=\"enumValue\"></param>\r\n        /// <returns></returns>\r\n        public static string GetDescription(this Enum enumValue)\r\n        {\r\n            FieldInfo fieldInfo = enumValue.GetType().GetField(enumValue.ToString());\r\n            DescriptionAttribute[] attrs =\r\n                fieldInfo.GetCustomAttributes(typeof(DescriptionAttribute), false) as DescriptionAttribute[];\r\n\r\n            return attrs.Length > 0 ? attrs[0].Description : enumValue.ToString();\r\n        }\r\n\r\n\r\n    }\r\n}\r\n```\r\nand i always get the error\r\n**parse error in the follow line**\r\nmy BenchmarkDotNet version is 0.11.0.0\r\nI use visual studio 2017 and .NET 4.6.1 in windows 10 pro 1803\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/BenchmarkDotNet/issues/841/comments",
    "author": "wangshuai-007",
    "comments": [
      {
        "user": "AndreyAkinshin",
        "created_at": "2018-07-24T09:32:58Z",
        "body": "@w371987114, you benchmark can't use `Console.WriteLine` calls because BenchmarkDotNet uses it for communication between the host process and the benchmark runner process. Why do you need it?"
      },
      {
        "user": "AndreyAkinshin",
        "created_at": "2018-07-24T09:58:58Z",
        "body": "BenchmarkDotNet prints progress messages automatically."
      }
    ]
  }
]