[
  {
    "number": 3250,
    "title": "Two pointers active in scene occasionally",
    "created_at": "2018-12-10T09:20:01Z",
    "closed_at": "2019-01-02T23:20:46Z",
    "labels": [
      "Question",
      "Input System - General"
    ],
    "url": "https://github.com/microsoft/MixedRealityToolkit-Unity/issues/3250",
    "body": "## Overview\r\nThis one is a little hard to track. But every now and then I have two cursors / pointers in my scene active. One is the DefaultCursor I assigned to the Gaze provider on the camera and the other one is my mouse basically in 3D space. I can then use the mouse to select UI elements e.g. but the gaze cursor won't do anything.\r\n\r\n## Expected Behavior\r\nNot sure what to expect here to be fair. The least I'd expect is, that the mouse pointer is available always when I hit play and not sometimes because it is handy for selecting things and testing in editor.\r\n\r\n## Actual Behavior\r\nMouse pointer is sometimes not available and only restarting play mode until it appears will help.\r\n\r\n## Unity Editor Version\r\n2018.3.0f1\r\n\r\n## Mixed Reality Toolkit Release Version\r\nmrtk_development",
    "comments_url": "https://api.github.com/repos/microsoft/MixedRealityToolkit-Unity/issues/3250/comments",
    "author": "FejZa",
    "comments": [
      {
        "user": "StephenHodgson",
        "created_at": "2018-12-10T16:27:34Z",
        "body": "Make sure that if you focus out of the editor to click back into the game window to get your cursor back.\r\n\r\nThere is a time out on the cursor and it will disappear after it's not in use for a few seconds.  If you click during this time it should recenter on the gaze."
      },
      {
        "user": "StephenHodgson",
        "created_at": "2018-12-10T16:29:54Z",
        "body": "Still thinking about how to support customizing the input experience. Ideally I think that having the mouse input by default is the way to go (even in vr, and it works on the HoloLens with Holographic Emulation as well!) but we've got to keep in mind that the MRTK is cross platform and a standalone platform target is valid."
      }
    ]
  },
  {
    "number": 2034,
    "title": "The frame rate is very low.",
    "created_at": "2018-05-02T17:50:32Z",
    "closed_at": "2018-05-03T19:06:01Z",
    "labels": [
      "Question",
      "No Repro"
    ],
    "url": "https://github.com/microsoft/MixedRealityToolkit-Unity/issues/2034",
    "body": "## Overview\r\nFPS is very low even in the basic example scenes on the screen. In UNITY we have the settings for the MIXEDREALITY development environment. What do I need to set more in the example scene to maintain 60 fps?....\r\n\r\n## Expected Behavior\r\n.\r\n## Actual Behavior\r\n.\r\n## Steps to reproduce\r\n_(Links to sample github project preferred)_\r\n.\r\n## Unity Editor Version\r\n2017.2.1P2\r\n## Mixed Reality Toolkit Release Version\r\n2017.2.1.4-RC2",
    "comments_url": "https://api.github.com/repos/microsoft/MixedRealityToolkit-Unity/issues/2034/comments",
    "author": "lgs777",
    "comments": [
      {
        "user": "pwroff",
        "created_at": "2018-05-03T08:19:12Z",
        "body": "I would reccomend you to check your VS build mode. If it is in Debug it will be extremely low, try to use Release mode for debugging and Master mode for deploy. Hope it helps."
      }
    ]
  },
  {
    "number": 1961,
    "title": "Duplication of Holotoolkit camera when switching scenes",
    "created_at": "2018-04-16T19:22:19Z",
    "closed_at": "2018-04-17T15:41:50Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/microsoft/MixedRealityToolkit-Unity/issues/1961",
    "body": "When switching to a scene that already includes a mixed reality camera, the camera is duplicated. Solution included.\r\n\r\n## Expected Behavior- Each scene has only one mixed reality camera\r\n\r\n## Actual Behavior-Mixed Reality camera is duplicated when a new scene that already includes one is loaded\r\n\r\n## Steps to reproduce\r\n-create two scenes, each with a mixed reality camera.\r\n-run the application in the unity editor\r\n-go to second scene\r\n-messages \r\n\r\n## Unity Editor Version- 2017.3\r\n\r\n## Mixed Reality Toolkit Release Version-2017.2.1.3\r\n\r\n## Solution- The code in the Awake() method of the Singleton class destroys the script but not the object to which it is attached. I corrected the problem with the following code.\r\n\r\n```\r\nprotected virtual void Awake()\r\n        {\r\n            if (IsInitialized && instance != this)\r\n            {\r\n                if (Application.isEditor)\r\n                {\r\n                   //DestroyImmediate(this);replaced\r\n                    DestroyImmediate(gameObject);\r\n                }\r\n                else\r\n                {\r\n                   // Destroy(this);replaced\r\n                    Destroy(gameObject);\r\n                }\r\n\r\n                Debug.LogErrorFormat(\"Trying to instantiate a second instance of singleton class {0}. Additional Instance was destroyed\", GetType().Name);\r\n            }\r\n```\r\nIf there is a better solution, let me know.\r\n",
    "comments_url": "https://api.github.com/repos/microsoft/MixedRealityToolkit-Unity/issues/1961/comments",
    "author": "Mustellinus",
    "comments": [
      {
        "user": "StephenHodgson",
        "created_at": "2018-04-17T13:43:25Z",
        "body": "> create two scenes, each with a mixed reality camera.\r\n\r\nWell there's your problem. The expected workflow requires a main master scene and additive loading of your additional scenes.\r\n\r\nIf you don't like that workflow, then you can _optionally_ disable don't destroy on load, but it's not recommended."
      }
    ]
  },
  {
    "number": 1866,
    "title": "World Anchor Usage",
    "created_at": "2018-03-23T09:04:50Z",
    "closed_at": "2019-04-11T20:15:25Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/microsoft/MixedRealityToolkit-Unity/issues/1866",
    "body": "Is it okay to call world anchor api to attach or remove anchor frequently ? Does attach & remove anchor has any performance effect?\r\nUse case: User is moving a hologram. I want to attach anchor once user does finger remove gesture. If user again presses finger, to move hologram i should remove world anchor and repeat the same.\r\n\r\nShould world anchor attach & remove be tied to UI like button clicked to remove or to user actions like finger press gesture (while doing some action).",
    "comments_url": "https://api.github.com/repos/microsoft/MixedRealityToolkit-Unity/issues/1866/comments",
    "author": "Shubham7694",
    "comments": [
      {
        "user": "calebcannon",
        "created_at": "2018-03-23T21:18:57Z",
        "body": "We've been using WorldAnchors pretty extensively with zero problems.  When unlocking an object for positioning (e.g., using HandDraggable), we delete the anchor immediately and recreate it when the drag operation is completed. I've yet to see a single side effect, even in scenes with dozens of anchors.\r\n\r\nThe only time we don't use anchors is when an object is expected to be more active than not: UI elements with Tagalong components, remote user avatars, etc."
      }
    ]
  },
  {
    "number": 1489,
    "title": "What's with the name of the stabilization branch?",
    "created_at": "2017-12-08T04:52:16Z",
    "closed_at": "2017-12-08T06:25:12Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/microsoft/MixedRealityToolkit-Unity/issues/1489",
    "body": " v2017.2.0.1-Stabilization?\r\n\r\nI thought we were dropping the v prefix on the releases?\r\n\r\nAlso, shouldn't it be 2017.2.1.0 as it'll most likely reflect the new release Unity will have by the time we approve it?",
    "comments_url": "https://api.github.com/repos/microsoft/MixedRealityToolkit-Unity/issues/1489/comments",
    "author": "StephenHodgson",
    "comments": [
      {
        "user": "keveleigh",
        "created_at": "2017-12-08T06:17:27Z",
        "body": "I copied the tag from your release draft. Certainly that can change between now and then.\r\n\r\nIf a new Unity release happens, we can address that. The branch name doesn't lock us into a tag.\r\n\r\nI mistakenly kept the `v` this time, but, again, the branch name doesn't lock us into a release tag."
      }
    ]
  },
  {
    "number": 1261,
    "title": "Scene: GrabMechanics doesn't seem to work",
    "created_at": "2017-10-30T05:46:17Z",
    "closed_at": "2017-11-06T16:20:52Z",
    "labels": [
      "Question",
      "Platform - VR"
    ],
    "url": "https://github.com/microsoft/MixedRealityToolkit-Unity/issues/1261",
    "body": "Machine: Windows 10 Fall Creators update, Unity: 2017.2. I tried this scene (GrabMechanics) in the editor, and compiled to debug, and in neither one can I pick up and control anything. Should this scene still work? And if not, I wonder if anybody has a quick answer why not? There isn't much in the scene to begin with!\r\n",
    "comments_url": "https://api.github.com/repos/microsoft/MixedRealityToolkit-Unity/issues/1261/comments",
    "author": "erichfrazer",
    "comments": [
      {
        "user": "keveleigh",
        "created_at": "2017-10-30T15:57:11Z",
        "body": "Yep, I ran this the other day to help somebody else figure it out. The problem he was running into: are you pointing at the objects to interact or actually reaching out, intersecting the blocks with your block hands, and then interacting? They were trying to point and click, but actually \"grabbing\" the objects is the way this sample works.\r\n\r\nAnother thing to check is to make sure you're pressing the right button. If I remember correctly, this scene works with the grasp button, not the trigger.\r\n\r\nLet me know if it still doesn't work for you!"
      },
      {
        "user": "erichfrazer",
        "created_at": "2017-10-30T16:33:27Z",
        "body": "Oop, Grab does work, you DO have to reach out and grab it w/ the chunky block. Well, this is a relief. And yeah, I'm not used to using the Grasp button. You may close this.\r\n\r\nOne thing I can't figure out is where MotionController.cs went. I see the visualizer script file, but the MotionController base script is gone. Has this been replaced with a different set of mechanics for input control? and recently?\r\n"
      },
      {
        "user": "keveleigh",
        "created_at": "2017-10-30T16:36:23Z",
        "body": "There's MotionControllerVisualizer and MotionControllerInfo, which contains the data about the model and animation parameters. I don't believe there's ever been a MotionController script like you describe. The controller controls are routed through InputManager events. Are you perhaps thinking of a script in the MRDL/HUX?"
      },
      {
        "user": "hridpath",
        "created_at": "2017-11-03T22:18:09Z",
        "body": "I am using the Motion Controllers from Dell. I can click and change the active controll to the controller but when I focus on an object and click the Grasp button nothing happens. Do I physically need to move the controller to the object?\r\n"
      },
      {
        "user": "hridpath",
        "created_at": "2017-11-03T22:42:30Z",
        "body": "Sorry to say that even moving the controller to touch/pass through did  not work. I am getting the GLTF material for my controller. I move the controller into position and click/grasp the grab button on the side of the controller. nada\r\nPS. I am running in editor viewing on HMD"
      },
      {
        "user": "hridpath",
        "created_at": "2017-11-03T23:10:35Z",
        "body": "I just tried to force the use of the alternate models and still no interactions.\r\n"
      },
      {
        "user": "keveleigh",
        "created_at": "2017-11-04T00:55:24Z",
        "body": "Looks like there was a bug introduced with the prefab changes in the recent visualizer update. PR incoming with a fix."
      }
    ]
  },
  {
    "number": 1253,
    "title": "Tagalong Script not working as intended",
    "created_at": "2017-10-28T07:30:43Z",
    "closed_at": "2017-10-30T11:37:02Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/microsoft/MixedRealityToolkit-Unity/issues/1253",
    "body": "Device: HoloLens\r\n\r\nI have added the Tagalong script to a GameObject. It follows me, but it always stays behind me, when I walk away. How can I make it stay inside my Field of View?",
    "comments_url": "https://api.github.com/repos/microsoft/MixedRealityToolkit-Unity/issues/1253/comments",
    "author": "eluchsinger",
    "comments": [
      {
        "user": "StephenHodgson",
        "created_at": "2017-10-28T16:39:08Z",
        "body": "Try the `SphereBasedTagalong` and reduce it's radius to something like 0.1 and move it out about 2 meters in front of you."
      }
    ]
  },
  {
    "number": 1040,
    "title": "Stuck between master and RC Beta branch",
    "created_at": "2017-09-28T14:56:38Z",
    "closed_at": "2017-10-05T09:47:53Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/microsoft/MixedRealityToolkit-Unity/issues/1040",
    "body": "Hi, \r\n\r\nI'm completely clueless on how to find a way to get to work with the MRTK and Hololens.\r\nI finally got to work my dev env ( meaning VS17 or Unity + MRTK managin both to deploy and build the app).  \r\nBUT ! When I use the master branch with Unity 2017.1.1.f1 I'm stuck with\r\n ```Error! RenderTexture.GenerateMips failed: render texture does not have mip maps (set useMipMap to true).```\r\n that's freaking annoying because it floods my console a lot and could even lower performances.\r\n\r\nOn the other hand, with Unity 2017.2.0f1 (RC) and beta branch, I'm being told my target device ( Hololens isn't up to date) ` DEP3321: To deploy this application, your deployment target should be running Windows Universal Runtime version 10.0.16288.0 or higher. You currently are running version 10.0.14393.1715. Please update your OS, or change your deployment target to a device with the appropriate version.\tGTS_Demo`\r\nI'm already running Insider on it and it's up to date :(\r\n(Latest SDK and insider update installed on the dev computer)\r\n\r\n\r\nAnd finally, master branch MRTK with a beta Unity doesn't work, as I understand API changed a lot.\r\n\r\nI know this is not bug related but I'm starting to loose hope on finding a stable dev environment...  Plus Unity forums and  Microsoft Hololens forums never have shown very helpful\r\n\r\nThanks a lot in advance !",
    "comments_url": "https://api.github.com/repos/microsoft/MixedRealityToolkit-Unity/issues/1040/comments",
    "author": "drenghel",
    "comments": [
      {
        "user": "jessemcculloch",
        "created_at": "2017-09-28T15:06:40Z",
        "body": "Hey Andre,\r\n\r\nThe generate mipmaps error is benign, you can ignore it, although like you mentioned, it fills the logs and is annoying.\r\n\r\nThe issue you are running into with 2017.2 is a pretty easy fix.  On the unity build settings window, you probably have the build target set to \"latest installed\" where as HoloLens is at version 15063. If you set that to match, it should solve that problem."
      },
      {
        "user": "jessemcculloch",
        "created_at": "2017-09-28T15:59:51Z",
        "body": "Yes and no. It needs to be installed for some of the API's for the Immersive Headsets and Motion Controllers to compile. But the OS on the HoloLens itself is only at 15063."
      },
      {
        "user": "drenghel",
        "created_at": "2017-09-28T16:06:56Z",
        "body": "Noted !\r\nBut as I expected something else doesn't work.\r\nI'm attempting to build&run the SpatialUnderstanding scene. But it crashed my Unity or throws an exception in VS or crashes on Hololens. Is it an known issue ? I can't get to work any spatial visualization since this morning ^^\""
      },
      {
        "user": "jessemcculloch",
        "created_at": "2017-09-28T18:12:59Z",
        "body": "Did you grab the pre-release of Dev_Unity_2017.2 from the releases page, or did you just download the raw code from the branch this morning?"
      },
      {
        "user": "drenghel",
        "created_at": "2017-09-29T12:40:07Z",
        "body": "My bad, forgot to answer.\r\nYup I did :)\r\nAnd there is more I never managed to get to work SpatialMapping from MRTK, even in the 'old' version.\r\nI check `drawVisualMeshes` but never show a thing ( So I used the Unity vanilla component )"
      }
    ]
  },
  {
    "number": 913,
    "title": "Holotoolkit Remote Mapping cannot send meshes",
    "created_at": "2017-08-31T03:42:02Z",
    "closed_at": "2017-10-28T01:34:06Z",
    "labels": [
      "Question",
      "Platform - HoloLens - First Gen"
    ],
    "url": "https://github.com/microsoft/MixedRealityToolkit-Unity/issues/913",
    "body": "I tried to build RemoteMapping and I can see the wireframe mesh appear in my HoloLens but can not get any meshes sent from Hololens to Unity. I wonder if there is something wrong with my server IP. Does anyone know what address should I put in Server IP? I just use the IPv4 address of wireless LAN adapter Wi-Fi. If I use the correct address, is there any other issue may cause this situation?\r\n\r\nWhat I have done:\r\n1. Build the scene as shown in test scenes.\r\n2. Enable the SpatialPerception,InternetClientServer, PrivateNetworkClientServer, and Microphone capabilities.\r\n3. Check the state of connection port is Listening.\r\n\r\nAnything missing?",
    "comments_url": "https://api.github.com/repos/microsoft/MixedRealityToolkit-Unity/issues/913/comments",
    "author": "mengruoshan",
    "comments": [
      {
        "user": "angelaHillier",
        "created_at": "2017-08-31T22:00:05Z",
        "body": "It's been a while since I've tried this (I now use the Windows Device Portal for capturing meshes instead), but have you opened port 11000 in your firewall? Another common problem is when the wrong element has focus in the Editor (make sure that the 'Game view' has focus when saving.\r\n\r\nHere's the relevant excerpt from the SpatialMapping Readme:\r\nThe RemoteMapping scene uses the SpatialMapping and RemoteMapping prefabs to send spatial mapping data between the HoloLens and the app running in the Unity editor. To run this test, you must first open port 11000 on your firewall and then set the IPv4 address of your PC in the 'RemoteMeshTarget' and 'RemoteMeshSource' components. You can then build and deploy to the HoloLens. Once you see the wireframe mesh appear in your HoloLens, press the 'play' button in Unity to run the app in Editor. Ensure that the 'Game view' has focus, and then press the 'N' key (RemoteMappingKey) to switch to using the network as the spatial mapping source in the Editor. Once you are confident that you have a good mesh, say the 'Send Meshes' (SendMeshesKeyword) to send the meshes from the HoloLens to the Unity Editor. Press the 'S' key (SaveFileKey) to save the mesh to your PC. Press the 'play' button to stop the app from running in the Unity editor. Now, press 'play' one more time to restart the app. This time, press the 'L' key (LoadFileKey) to load the mesh that you previously saved into the Editor."
      },
      {
        "user": "mengruoshan",
        "created_at": "2017-09-03T13:03:59Z",
        "body": "@angelaHillier \r\nI checked the state of the port 11000 is listening. Is that correct? If not, what state of the port is expected?\r\n"
      }
    ]
  },
  {
    "number": 898,
    "title": "How to launch Unity UWP app as 2D instead of Mixed Reality Portal",
    "created_at": "2017-08-28T21:08:16Z",
    "closed_at": "2017-08-28T23:58:48Z",
    "labels": [
      "Question",
      "Platform - VR"
    ],
    "url": "https://github.com/microsoft/MixedRealityToolkit-Unity/issues/898",
    "body": "Anyone know how to prevent a Unity App build as a UWP from launching in the Mixed Reality Portal if running on a local machine?",
    "comments_url": "https://api.github.com/repos/microsoft/MixedRealityToolkit-Unity/issues/898/comments",
    "author": "StephenHodgson",
    "comments": [
      {
        "user": "StephenHodgson",
        "created_at": "2017-08-28T22:21:37Z",
        "body": "I'd like to launch the UWP app as a normal application on desktop, but instead it launches the Mixed Reality Portal and then runs in the portal."
      },
      {
        "user": "jessemcculloch",
        "created_at": "2017-08-28T22:25:08Z",
        "body": "How are you launching it?  Via the start menu, or when you run it in debug mode in Visual Studio, or when you are hitting play in Unity?"
      },
      {
        "user": "StephenHodgson",
        "created_at": "2017-08-28T22:38:52Z",
        "body": "Via Start Menu."
      },
      {
        "user": "jessemcculloch",
        "created_at": "2017-08-28T22:46:17Z",
        "body": "Interesting, I have not seen this.  Let me try to replicate"
      },
      {
        "user": "jessemcculloch",
        "created_at": "2017-08-28T23:16:32Z",
        "body": "Hate to ask a dumb question, but you don't have Virtual Reality Enabled in the player settings, do you?"
      },
      {
        "user": "StephenHodgson",
        "created_at": "2017-08-28T23:58:47Z",
        "body": "@jessemcculloch that was the right question to be asking!  Thanks!\r\n\r\nThat was it!"
      }
    ]
  },
  {
    "number": 588,
    "title": "Problem with ReflectionExtensions and why is it needed?",
    "created_at": "2017-03-24T14:11:16Z",
    "closed_at": "2017-04-11T08:46:43Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/microsoft/MixedRealityToolkit-Unity/issues/588",
    "body": "Hello,\r\n\r\nI faced an issue with holotoolkit today on Unity 5.5.1.f1\r\nI had a line of code in one of my scripts that was \r\n`FieldInfo[] fieldArray = GetType().GetFields(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance);`\r\n\r\nAnd when adding holotoolkit, the ReflectionExtensions raised an error when trying to build, due to the GetFields method returning an IEnumerable instead of an array in the extension.\r\nI temporarily fixed the problem by doing this :\r\n`#if UNITY_METRO && !UNITY_EDITOR\r\n        FieldInfo[] fieldArray = GetType().GetFields(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance).ToArray();\r\n#else\r\n        FieldInfo[] fieldArray = GetType().GetFields(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance);\r\n#endif`\r\nas I need my code to be able to work with and without holotoolkit. But I was wondering why this extension is needed ? I guess it was useful at some point or on older versions of Unity maybe ? Or did I miss a detail somewhere ?\r\n\r\nThanks",
    "comments_url": "https://api.github.com/repos/microsoft/MixedRealityToolkit-Unity/issues/588/comments",
    "author": "flonou",
    "comments": [
      {
        "user": "flonou",
        "created_at": "2017-03-31T11:18:37Z",
        "body": "So you proposed to move these extensions to a namespacen which should help. But are they all still needed in the end ? It doesn't seem like it to me"
      },
      {
        "user": "StephenHodgson",
        "created_at": "2017-04-07T20:03:32Z",
        "body": "Did moving to the new namespace fix this issue?\r\n\r\nI think keeping this class around is a good idea, because there are others that use this.  It's just a tool for convenience. "
      },
      {
        "user": "flonou",
        "created_at": "2017-04-11T08:46:43Z",
        "body": "Yes the move to the new namespace fixed the issue"
      }
    ]
  }
]