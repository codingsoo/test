[
  {
    "number": 8019,
    "title": "How to \"concatenate\" rows into 1 list with groupby",
    "created_at": "2021-04-21T16:48:29Z",
    "closed_at": "2021-04-22T12:48:23Z",
    "labels": [
      "question",
      "Python"
    ],
    "url": "https://github.com/rapidsai/cudf/issues/8019",
    "body": "I am trying to concatenate multiple rows into one single list after a _groupby_.\r\n\r\nWith _Pandas_, I can do this:\r\n\r\n```\r\ndf = pd.DataFrame({'A': [1,1,2,2,2,2,3],'B':['a','b','c','d','e','f','g']})\r\ndf = df.groupby('A')['B'].apply(list)\r\n\r\nA\r\n-------------------\r\n1          [a, b]\r\n2    [c, d, e, f]\r\n3             [g]\r\n```\r\n\r\nIs there any equivalent solutions using _cudf_?\r\n\r\nI tried the following without success\r\n\r\n```\r\ngdf = gdf.groupby('A')['B'].apply(list)\r\n\r\n**TypeError: Series object is not iterable. Consider using `.to_arrow()`, `.to_pandas()` or `.values_host` if you wish to iterate over the values.**\r\n```\r\n\r\n```\r\ngdf = gdf.groupby('A')['B'].apply(lambda x : list(x))\r\n\r\n**TypeError: Series object is not iterable. Consider using `.to_arrow()`, `.to_pandas()` or `.values_host` if you wish to iterate over the values.**\r\n```\r\n```\r\ngdf = gdf.groupby('A')['B'].apply(lambda x : x.to_arrow())\r\n\r\n**TypeError: cannot concatenate object of type <class 'pyarrow.lib.StringArray'>**\r\n```\r\n\r\n```\r\ngdf = gdf.groupby('A').agg({'B': lambda x: list(x)})\r\n\r\n**TypeError: 'type' object is not iterable**\r\n```\r\n\r\nAny suggestions? Thanks!\r\n\r\n",
    "comments_url": "https://api.github.com/repos/rapidsai/cudf/issues/8019/comments",
    "author": "gfiameni",
    "comments": [
      {
        "user": "beckernick",
        "created_at": "2021-04-21T17:07:01Z",
        "body": "You can use the `agg` API. `df.groupby('A')['B'].agg(list)` or `df.groupby('A').agg({\"B\":list})`"
      }
    ]
  },
  {
    "number": 5445,
    "title": "[QST] Lots of package conflicts when installing cuDF on Ubuntu machine",
    "created_at": "2020-06-11T04:30:03Z",
    "closed_at": "2020-08-27T18:56:15Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/rapidsai/cudf/issues/5445",
    "body": "I am trying to install the RAPIDS cuDF package on my Ubuntu machine using conda.\r\n\r\nRunning the command\r\n\r\n    conda install -c nvidia -c rapidsai -c numba -c conda-forge -c defaults cudf\r\n\r\nor\r\n\r\n    conda install -c rapidsai -c nvidia -c numba -c conda-forge cudf=0.13 python=3.7 cudatoolkit=10.2\r\n\r\nboth gives the following messages\r\n\r\n```\r\nCollecting package metadata (current_repodata.json): done\r\nSolving environment: failed with initial frozen solve. Retrying with flexible solve.\r\nSolving environment: failed with repodata from current_repodata.json, will retry with next repodata source.\r\nCollecting package metadata (repodata.json): done\r\nSolving environment: failed with initial frozen solve. Retrying with flexible solve.\r\nSolving environment: | \r\nFound conflicts! Looking for incompatible packages.\r\nThis can take several minutes.  Press CTRL-C to abort.\r\n```\r\n\r\nThis took a really long time, before attempting to estimate conflicts 172 packages \r\n\r\n\r\n> Examining conflict for dask-core pickleshare backcall python_abi osqp mkl_random cloudpickle cvxpy-base psutil libtiff fastparquet python-snappy pillow fsspec pexpect pytz et_xmlfile heapdict wcwidth qt traitlets mkl-service pyqt libxml2 setuptools numba cython beautifulsoup4 multiprocess cycler sip pyyaml fastcache fontconfig pyopenssl cudf cx_oracle prompt_toolkit gstreamer numexpr msgpack-python wrapt markupsafe llvmlite future sortedcontainers urllib3 numpy-base jedi distributed pycparser protobuf pytables dill hmmlearn mysql-connector-python locket chardet xz ipython_genutils joblib gst-plugins-base matplotlib sqlalchemy python jdcal xlrd mock click matplotlib-base peewee ptyprocess zstd openpyxl jinja2 ipython tblib decorator wheel nose pysocks cytoolz partd numpy scikit-learn pyparsing h5py tornado python-dateutil pygments ecos soupsieve cffi blosc parso ppft mkl_fft dask kiwisolver cvxopt patsy zict cryptography pytorch ninja pox typing_extensions pathos packaging multitasking statsmodels certifi bottleneck requests yfinance bokeh pymysql pip sExamining conflict for dask-core pickleshare backcall python_abi osqp mkl_random cloudpickle cvxpy-base psutil libtiff fastparquet python-snappy pillow fsspec pexpect pytz et_xmlfile heapdict wcwidth qt traitlets mkl-service pyqt libxml2 setuptools numba cython beautifulsoup4 multiprocess cycler sip pyyaml fastcache fontconfig pyopenssl cudf cx_oracle prompt_toolkit gstreamer numexpr msgpack-python wrapt markupsafe llvmlite future sortedcontainers urllib3 numpy-base jedi distributed pycparser protobuf pytables dill hmmlearn mysql-connector-python locket chardet xz ipython_genutils joblib gst-plugins-base matplotlib sqlalchemy python jdcal xlrd mock click matplotlib-base peewee ptyprocess zstd openpyxl jinja2 ipython tblib decorator wheel nose pysocks cytoolz partd numpy scikit-learn pyparsing h5py tornado python-dateutil pygments ecos soupsieve cffi blosc parso ppft mkl_fft dask kiwisolver cvxopt patsy zict cryptography pytorch ninja pox typing_extensions pathos packaging multitasking statsmodels certifi bottleneck requests yfinance bokeh pymysql pip sExamining conflict for dask-core pickleshare backcall python_abi osqp mkl_random cloudpickle cvxpy-base psutil libtiff libpng fastparquet python-snappy pillow freetype fsspec pexpect pytz et_xmlfile heapdict wcwidth qt glib traitlets mkl-service pyqt libxml2 setuptools numba cython beautifulsoup4 multiprocess cycler sip pyyaml fastcache fontconfig pyopenssl cudf cx_oracle prompt_toolkit gstreamer numexpr msgpack-python wrapt markupsafe llvmlite future sortedcontainers urllib3 numpy-base jedi distributed pycparser protobuf pytables dill hmmlearn mysql-connector-python locket chardet ipython_genutils joblib gst-plugins-base matplotlib sqlalchemy python jdcal xlrd mock click matplotlib-base peewee ptyprocess zstd openpyxl jinja2 ipython tblib decorator wheel nose pysocks cytoolz partd libprotobuf numpy scikit-learn pyparsing h5py tornado dbus python-dateutil pygments ecos soupsieve cffi blosc parso ppft mkl_fft zlib dask kiwisolver cvxopt hdf5 patsy zict cryptography pytorch ninja pox typing_extensions pathos packaging multitasking statsmodels certifi botExamining conflict for dask-core pickleshare backcall python_abi osqp mkl_random cloudpickle cvxpy-base psutil libtiff libpng fastparquet python-snappy pillow freetype fsspec pexpect pytz et_xmlfile heapdict wcwidth qt glib traitlets mkl-service pyqt libxml2 setuptools numba cython beautifulsoup4 multiprocess cycler sip pyyaml fastcache fontconfig pyopenssl cudf cx_oracle prompt_toolkit gstreamer numexpr msgpack-python wrapt markupsafe llvmlite future sortedcontainers urllib3 numpy-base jedi distributed pycparser protobuf pytables dill hmmlearn mysql-connector-python locket chardet ipython_genutils joblib gst-plugins-base matplotlib sqlalchemy python jdcal xlrd mock click matplotlib-base peewee ptyprocess zstd openpyxl jinja2 ipython tblib decorator wheel nose pysocks cytoolz partd libprotobuf numpy scikit-learn pyparsing h5py tornado dbus python-dateutil pygments ecos soupsieve cffi blosc parso ppft mkl_fft zlib dask kiwisolver cvxopt hdf5 patsy zict cryptography pytorch ninja pox typing_extensions pathos packaging multitasking statsmodels certifi botExamining conflict for dask-core pickleshare backcall python_abi osqp mkl_random cloudpickle cvxpy-base psutil fastparquet python-snappy pillow fsspec pexpect pytz et_xmlfile heapdict wcwidth qt traitlets mkl-service pyqt numba setuptools cython beautifulsoup4 multiprocess cycler sip pyyaml fastcache pyopenssl cudf cx_oracle prompt_toolkit numexpr msgpack-python wrapt markupsafe llvmlite future sortedcontainers urllib3 numpy-base jedi distributed pycparser protobuf pytables dill hmmlearn mysql-connector-python locket chardet ipython_genutils joblib matplotlib sqlalchemy python sqlite jdcal xlrd mock click matplotlib-base peewee ptyprocess openpyxl jinja2 ipython tblib decorator wheel nose pysocks cytoolz partd numpy scikit-learn pyparsing h5py tornado python-dateutil pygments ecos soupsieve cffi parso ppft mkl_fft dask kiwisolver cvxopt patsy zict cryptography pytorch ninja pox typing_extensions pathos packaging multitasking statsmodels certifi bottleneck requests yfinance bokeh pymysql pip scipy cvxpy arch scs toolz pandas idna six olefile thrift:   2Examining conflict for dask-core pickleshare backcall python_abi osqp mkl_random cloudpickle cvxpy-base psutil fastparquet python-snappy pillow fsspec pexpect pytz et_xmlfile heapdict wcwidth qt traitlets mkl-service pyqt numba setuptools cython beautifulsoup4 multiprocess cycler sip pyyaml fastcache pyopenssl cudf cx_oracle prompt_toolkit numexpr msgpack-python wrapt markupsafe llvmlite future sortedcontainers urllib3 numpy-base jedi distributed pycparser protobuf pytables dill hmmlearn mysql-connector-python locket chardet ipython_genutils joblib matplotlib sqlalchemy python sqlite jdcal xlrd mock click matplotlib-base peewee ptyprocess openpyxl jinja2 ipython tblib decorator wheel nose pysocks cytoolz partd numpy scikit-learn pyparsing h5py tornado python-dateutil pygments ecos soupsieve cffi parso ppft mkl_fft dask kiwisolver cvxopt patsy zict cryptography pytorch ninja pox typing_extensions pathos packaging multitasking statsmodels certifi bottleneck requests yfinance bokeh pymysql pip scipy cvxpy arch scs toolz pandas idna six olefile thrift:   2Examining conflict for dask-core pickleshare backcall python_abi osqp mkl_random cloudpickle cvxpy-base psutil fastparquet python-snappy pillow fsspec pexpect pytz et_xmlfile heapdict wcwidth qt traitlets mkl-service pyqt numba setuptools cython beautifulsoup4 multiprocess cycler sip pyyaml readline fastcache pyopenssl cudf cx_oracle prompt_toolkit numexpr msgpack-python wrapt markupsafe llvmlite future sortedcontainers urllib3 numpy-base jedi distributed pycparser protobuf pytables dill hmmlearn mysql-connector-python locket chardet ipython_genutils joblib matplotlib sqlalchemy python jdcal xlrd mock click matplotlib-base peewee ptyprocess openpyxl jinja2 ipython tblib decorator wheel nose pysocks cytoolz partd numpy scikit-learn pyparsing h5py tornado python-dateutil pygments ecos soupsieve cffi parso ppft mkl_fft dask kiwisolver cvxopt patsy zict cryptography pytorch ninja pox typing_extensions pathos packaging multitasking statsmodels certifi bottleneck requests yfinance bokeh pymysql pip scipy cvxpy arch scs toolz pandas idna six olefile thrift:  Examining conflict for dask-core pickleshare backcall python_abi osqp mkl_random cloudpickle cvxpy-base psutil fastparquet python-snappy pillow fsspec pexpect pytz et_xmlfile heapdict wcwidth qt traitlets mkl-service pyqt numba setuptools cython beautifulsoup4 multiprocess cycler sip pyyaml readline fastcache pyopenssl cudf cx_oracle prompt_toolkit numexpr msgpack-python wrapt markupsafe llvmlite future sortedcontainers urllib3 numpy-base jedi distributed pycparser protobuf pytables dill hmmlearn mysql-connector-python locket chardet ipython_genutils joblib matplotlib sqlalchemy python jdcal xlrd mock click matplotlib-base peewee ptyprocess openpyxl jinja2 ipython tblib decorator wheel nose pysocks cytoolz partd numpy scikit-learn pyparsing h5py tornado python-dateutil pygments ecos soupsieve cffi parso ppft mkl_fft dask kiwisolver cvxopt patsy zict cryptography pytorch ninja pox typing_extensions pathos packaging multitasking statsmodels certifi bottleneck requests yfinance bokeh pymysql pip scipy cvxpy arch scs toolz pandas idna six olefile thrift:  Examining conflict for dask-core pickleshare backcall python_abi openssl osqp mkl_random cloudpickle cvxpy-base psutil fastparquet python-snappy pillow fsspec pexpect pytz et_xmlfile heapdict wcwidth qt traitlets mkl-service pyqt numba setuptools cython beautifulsoup4 multiprocess cycler sip pyyaml fastcache pyopenssl cudf cx_oracle prompt_toolkit numexpr msgpack-python wrapt markupsafe llvmlite future sortedcontainers urllib3 numpy-base jedi distributed pycparser protobuf pytables dill hmmlearn mysql-connector-python locket chardet ipython_genutils joblib matplotlib sqlalchemy python jdcal xlrd mock click matplotlib-base peewee ptyprocess openpyxl jinja2 ipython tblib decorator wheel nose pysocks cytoolz partd numpy scikit-learn pyparsing h5py tornado python-dateutil pygments ecos soupsieve cffi parso ppft mkl_fft mysql-connector-c dask kiwisolver cvxopt patsy zict cryptography pytorch ninja pox typing_extensions pathos packaging multitasking statsmodels certifi bottleneck requests yfinance bokeh pymysql pip scipy cvxpy arch scs toolz pandas idna six Examining conflict for dask-core pickleshare backcall python_abi openssl osqp mkl_random cloudpickle cvxpy-base psutil fastparquet python-snappy pillow fsspec pexpect pytz et_xmlfile heapdict wcwidth qt traitlets mkl-service pyqt numba setuptools cython beautifulsoup4 multiprocess cycler sip pyyaml fastcache pyopenssl cudf cx_oracle prompt_toolkit numexpr msgpack-python wrapt markupsafe llvmlite future sortedcontainers urllib3 numpy-base jedi distributed pycparser protobuf pytables dill hmmlearn mysql-connector-python locket chardet ipython_genutils joblib matplotlib sqlalchemy python jdcal xlrd mock click matplotlib-base peewee ptyprocess openpyxl jinja2 ipython tblib decorator wheel nose pysocks cytoolz partd numpy scikit-learn pyparsing h5py tornado python-dateutil pygments ecos soupsieve cffi parso ppft mkl_fft mysql-connector-c dask kiwisolver cvxopt patsy zict cryptography pytorch ninja pox typing_extensions pathos packaging multitasking statsmodels certifi bottleneck requests yfinance bokeh pymysql pip scipy cvxpy arch scs toolz pandas idna six olefile thrift:\r\n\r\nand finding lots of conflicts, such as the following  \r\n\r\n```\r\nPackage typing_extensions conflicts for:\r\nanaconda/linux-64::bokeh==2.0.2=py37_0 -> typing_extensions[version='>=3.7.4']\r\ndefaults/noarch::dask==2.9.2=py_0 -> bokeh[version='>=1.0.0'] -> typing_extensions[version='>=3.7.4']\r\n\r\nPackage cryptography-vectors conflicts for:\r\ndefaults/linux-64::pymysql==0.9.3=py37_0 -> cryptography -> cryptography-vectors[version='2.3.*|2.3.1.*']\r\nanaconda/linux-64::urllib3==1.25.8=py37_0 -> cryptography[version='>=1.3.4'] -> cryptography-vectors[version='2.3.*|2.3.1.*']\r\n\r\nPackage hdf5 conflicts for:\r\nanaconda/linux-64::pytables==3.5.2=py37h71ec239_1 -> hdf5[version='>=1.10.4,<1.10.5.0a0']\r\nanaconda/linux-64::h5py==2.9.0=py37h7918eee_0 -> hdf5[version='>=1.10.4,<1.10.5.0a0']The following specifications were found to be incompatible with your CUDA driver:\r\n\r\n  - feature:/linux-64::__cuda==10.2=0\r\n  - feature:|@/linux-64::__cuda==10.2=0\r\n\r\nYour installed CUDA driver is: 10.2\r\n```\r\n\r\n`conda list cudf` shows that cuDF is still not installed. \r\n\r\nIs there a better `conda` command to run to install cuDF?\r\n\r\n**System Environment**\r\n\r\n- Nvidia driver 440.33.01 \r\n- CUDA Version 10.2.89\r\n- cudatoolkit 10.2.89 \r\n- Python 3.7.4\r\n- conda 4.8.3\r\n- Ubuntu 18.04\r\n- Nvidia 2080 Ti\r\n",
    "comments_url": "https://api.github.com/repos/rapidsai/cudf/issues/5445/comments",
    "author": "athenawisdoms",
    "comments": [
      {
        "user": "kkraus14",
        "created_at": "2020-06-11T04:51:15Z",
        "body": "@athenawisdoms could you dump the output of `conda list` here? Alternatively, if creating a new environment is an option I'd suggest taking that route and doing:\r\n\r\n```\r\nconda create --name rapids -c rapidsai -c nvidia -c conda-forge -c defaults python=3.7 cudatoolkit=10.2 cudf=0.14\r\n```\r\n\r\nNOTE: 0.14 just released so upgraded cudf to 0.14 in the command, but feel free to roll it back if needed."
      },
      {
        "user": "kkraus14",
        "created_at": "2020-06-11T17:25:07Z",
        "body": "The things that stick out to me from your environment are `pandas`, `dask`, `dask-core`, and `distributed`.\r\n\r\nWe currently require `pandas >=0.25.3,<1.0.0a0`, `dask >=2.15.0`, `dask-core >=2.15.0`, `distributed >=2.15.0`.\r\n\r\nThere's also likely a lot of conflicts coming from trying to move from defaults to conda-forge in your environment where you could try:\r\n```\r\nconda install -c nvidia -c rapidsai -c numba -c defaults -c conda-forge \"cudf\" \"pandas\" \"dask\" \"distributed\"\r\n```"
      }
    ]
  },
  {
    "number": 4810,
    "title": "[QST] cuDF Query is too slow",
    "created_at": "2020-04-06T08:37:42Z",
    "closed_at": "2020-04-07T03:54:54Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/rapidsai/cudf/issues/4810",
    "body": "Hi All,\r\n\r\nI recently ported a script to use cuDF dataframes in place of pandas dataframes. On comparing the time taken by API calls, I found panda APIs to be doing much better. Honestly, I am confused by seeing such results. I am not sure if I have done it correctly, as this is my first time using cuDF. For your reference:\r\n\r\n1. temp = cudf_df.query('Id == @i')\r\nThe Id column is int64 type, dataframe contains around 12 rows.\r\nThis query took:  **0:00:01.262744**\r\n\r\n\r\n2. temp=pandas_df[pandas_df['Id']==i]  \r\nThe Id column is int64 type, dataframe contains data identical to cudf dataframe.\r\nThis query took:  **0:00:00.006388**\r\n\r\n**System Configuration**\r\ncuDF package version: cudf-cuda100  0.6.1 \r\nNVIDIA CUDA toolkit version:  CUDA Version 10.0.130 with CUDA Patch Version 10.0.130.1\r\nGPU Name: Titan RTX\r\nOperating System: Linux\r\nArchitecture: x86_64\r\nDistribution: Ubuntu\r\nVersion: 18.04.3 \r\n\r\ncudf query API is almost 200 times slower. Could someone please point me in the right direction? \r\nThanks in advance!\r\n",
    "comments_url": "https://api.github.com/repos/rapidsai/cudf/issues/4810/comments",
    "author": "GoyalMansi",
    "comments": [
      {
        "user": "harrism",
        "created_at": "2020-04-06T10:19:30Z",
        "body": "thanks for your question! You probably need thousands of rows minimum to see a speedup. For small data frames, the overhead of launching a kernel on the GPU will be larger than the overhead of calling a function on the CPU. 12 rows is miniscule."
      },
      {
        "user": "kkraus14",
        "created_at": "2020-04-07T04:01:58Z",
        "body": "@GoyalMansi additionally it looks like you installed an old version of cuDF via pip as opposed to the latest version from conda. Would highly recommend installing from conda if/when you try cuDF again!"
      }
    ]
  }
]