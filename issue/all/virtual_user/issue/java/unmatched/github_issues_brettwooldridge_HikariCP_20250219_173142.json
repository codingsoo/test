[
  {
    "number": 474,
    "title": "com.zaxxer.hikari.pool.PoolInitializationException: Exception during pool initialization: Communications link failure",
    "created_at": "2015-10-28T07:25:12Z",
    "closed_at": "2015-10-28T07:37:22Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/brettwooldridge/HikariCP/issues/474",
    "body": "Hi brettwooldridge, I'm using HikariCP as MySQL'dataSource with Spring Boot recently, but found some problems.\nThis is my hikari config in application.yml:\n\n```\nhikari:\n    poolName: HikariCP\n    minimumIdle: 5\n    maximumPoolSize: 25\n    connectionTimeout: 30000\n    idleTimeout: 30000\n    connectionTestQuery: SELECT 1\n    dataSourceClassName: com.mysql.jdbc.jdbc2.optional.MysqlDataSource\n    dataSourceProperties:\n        url: jdbc:mysql://127.0.0.1:13206/reactive?characterEncoding=UTF-8\n        user: test\n        password: test1234\n        ## Only for mysql\n        cachePrepStmts: true\n        prepStmtCacheSize: 300\n        prepStmtCacheSqlLimit: 2048\n```\n\nAnd the corresponding Java Bean is:\n\n```\n/**\n * provide url, user, password by calling addDataSourceProperty method\n */\n@Bean\n    public DataSource dataSource() {\n        HikariConfig configuration = new HikariConfig();\n        configuration.setPoolName(poolName);\n        configuration.setMinimumIdle(minimumIdle);\n        configuration.setMaximumPoolSize(maximumPoolSize);\n        configuration.setConnectionTimeout(connectionTimeout);\n        configuration.setIdleTimeout(idleTimeout);\n        configuration.setConnectionTestQuery(connectionTestQuery);\n        configuration.setDataSourceClassName(dataSourceClassName);\n\n        configuration.addDataSourceProperty(\"url\", url);\n        configuration.addDataSourceProperty(\"user\", user);\n        configuration.addDataSourceProperty(\"password\", password);\n        configuration.addDataSourceProperty(\"cachePrepStmts\", cachePrepStmts);\n        configuration.addDataSourceProperty(\"prepStmtCacheSize\", prepStmtCacheSize);\n        configuration.addDataSourceProperty(\"prepStmtCacheSqlLimit\", prepStmtCacheSqlLimit);\n\n        return new HikariDataSource(configuration);\n    }\n```\n\nIn this case, the connection pool works fine. When I use other configuration, exception occurred, as following:\n\n```\nhikari:\n    poolName: HikariCP\n    jdbcUrl: jdbc:mysql://127.0.0.1:13206/reactive?characterEncoding=UTF-8\n    username: test\n    password: test1234\n    minimumIdle: 5\n    maximumPoolSize: 25\n    connectionTimeout: 30000\n    idleTimeout: 30000\n    connectionTestQuery: SELECT 1\n    dataSourceClassName: com.mysql.jdbc.jdbc2.optional.MysqlDataSource\n    dataSourceProperties:\n        ## Only for mysql\n        cachePrepStmts: true\n        prepStmtCacheSize: 300\n        prepStmtCacheSqlLimit: 2048\n\n/**\n * provide jdbcUrl, username, password instead of calling addDataSourceProperty method\n */\n@Bean\n    public DataSource dataSource() {\n        HikariConfig configuration = new HikariConfig();\n        configuration.setPoolName(poolName);\n        configuration.setJdbcUrl(jdbcUrl);\n        configuration.setUsername(username);\n        configuration.setPassword(password);\n        configuration.setMinimumIdle(minimumIdle);\n        configuration.setMaximumPoolSize(maximumPoolSize);\n        configuration.setConnectionTimeout(connectionTimeout);\n        configuration.setIdleTimeout(idleTimeout);\n        configuration.setConnectionTestQuery(connectionTestQuery);\n        configuration.setDataSourceClassName(dataSourceClassName);\n\n        configuration.addDataSourceProperty(\"cachePrepStmts\", cachePrepStmts);\n        configuration.addDataSourceProperty(\"prepStmtCacheSize\", prepStmtCacheSize);\n        configuration.addDataSourceProperty(\"prepStmtCacheSqlLimit\", prepStmtCacheSqlLimit);\n\n        return new HikariDataSource(configuration);\n    }\n```\n\nThe **exception** information is:\n\n```\nThe last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.\n    at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:571)\n    at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)\n    at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:331)\n    ... 30 more\nCaused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/github/dolphineor/springboot/configure/JpaConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is com.zaxxer.hikari.pool.PoolInitializationException: Exception during pool initialization: Communications link failure\n\nThe last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.\n    at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:599)\n    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1123)\n    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1018)\n    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:510)\n    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)\n    at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:305)\n    at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)\n    at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:301)\n    at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\n    at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1192)\n    at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)\n    at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)\n    at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:543)\n    ... 32 more\nCaused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is com.zaxxer.hikari.pool.PoolInitializationException: Exception during pool initialization: Communications link failure\n\nThe last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.\n    at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:189)\n    at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)\n    ... 44 more\nCaused by: com.zaxxer.hikari.pool.PoolInitializationException: Exception during pool initialization: Communications link failure\n\nThe last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.\n    at com.zaxxer.hikari.pool.HikariPool.initializeConnections(HikariPool.java:581)\n    at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:152)\n    at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:73)\n    at com.github.dolphineor.springboot.configure.JpaConfig.dataSource(JpaConfig.java:80)\n    at com.github.dolphineor.springboot.configure.JpaConfig$$EnhancerBySpringCGLIB$$20918aa0.CGLIB$dataSource$1(<generated>)\n    at com.github.dolphineor.springboot.configure.JpaConfig$$EnhancerBySpringCGLIB$$20918aa0$$FastClassBySpringCGLIB$$cf46bcfb.invoke(<generated>)\n    at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)\n    at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:318)\n    at com.github.dolphineor.springboot.configure.JpaConfig$$EnhancerBySpringCGLIB$$20918aa0.dataSource(<generated>)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:497)\n    at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)\n    ... 45 more\nCaused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure\n\nThe last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n    at java.lang.reflect.Constructor.newInstance(Constructor.java:422)\n    at com.mysql.jdbc.Util.handleNewInstance(Util.java:404)\n    at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:983)\n    at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:339)\n    at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2252)\n    at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2285)\n    at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2084)\n    at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:795)\n    at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:44)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n    at java.lang.reflect.Constructor.newInstance(Constructor.java:422)\n    at com.mysql.jdbc.Util.handleNewInstance(Util.java:404)\n    at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:400)\n    at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:327)\n    at com.mysql.jdbc.jdbc2.optional.MysqlDataSource.getConnection(MysqlDataSource.java:422)\n    at com.mysql.jdbc.jdbc2.optional.MysqlDataSource.getConnection(MysqlDataSource.java:134)\n    at com.zaxxer.hikari.pool.HikariPool.addConnection(HikariPool.java:496)\n    at com.zaxxer.hikari.pool.HikariPool.initializeConnections(HikariPool.java:565)\n    ... 58 more\nCaused by: java.net.ConnectException: connection refused\n    at java.net.PlainSocketImpl.socketConnect(Native Method)\n    at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\n    at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\n    at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\n    at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\n    at java.net.Socket.connect(Socket.java:589)\n    at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:214)\n    at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:298)\n    ... 74 more\n```\n\nThe network's solution is setting MySQL's wait_timeout and interactive_timeout, but it doesn't work.\n\ndolphineor.\n",
    "comments_url": "https://api.github.com/repos/brettwooldridge/HikariCP/issues/474/comments",
    "author": "conchz",
    "comments": [
      {
        "user": "brettwooldridge",
        "created_at": "2015-10-28T07:30:21Z",
        "body": "@dolphineor In the second case, you don't need:\n\n```\ndataSourceClassName: com.mysql.jdbc.jdbc2.optional.MysqlDataSource\n```\n\nThe `jdbcUrl` entry alone is sufficient.  If you get a driver not found error, you can add `driverClassName`, but it shouldn't be necessary.\n\nNOTE: you can still use `dataSourceProperties` even without a `dataSourceClassName`.\n"
      }
    ]
  },
  {
    "number": 351,
    "title": "How do I import the source to IntelliJ IDEA?",
    "created_at": "2015-07-22T04:53:57Z",
    "closed_at": "2015-07-22T05:30:05Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/brettwooldridge/HikariCP/issues/351",
    "body": "I import the source to IntelliJ IDEA as maven project. But,  **`hikaricp-java6` module can not refer to the sources of  `hikaricp-common`.**\n\nHow do I import the source to IntelliJ IDEA and compile the source?\n\nThanks a lot.\n",
    "comments_url": "https://api.github.com/repos/brettwooldridge/HikariCP/issues/351/comments",
    "author": "diguage",
    "comments": [
      {
        "user": "brettwooldridge",
        "created_at": "2015-07-22T05:30:05Z",
        "body": "It's a huge pain in the ass.  I recommend using the `dev` branch, it's much cleaner -- a single module.\n"
      }
    ]
  },
  {
    "number": 327,
    "title": "I configurate the `poolName`, but throw Exception",
    "created_at": "2015-06-17T06:46:43Z",
    "closed_at": "2015-06-17T06:50:55Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/brettwooldridge/HikariCP/issues/327",
    "body": "I first use HikariCP. And my configuration file is as follows:\n\n```\ndataSourceClassName=com.mysql.jdbc.jdbc2.optional.MysqlDataSource\ndataSource.url=${dataSource.url}\ndataSource.user=${dataSource.user}\ndataSource.password=${dataSource.password}\ndataSource.poolName=${dataSource.poolName}\ndataSource.cachePrepStmts=${dataSource.cachePrepStmts}\ndataSource.prepStmtCacheSize=${dataSource.prepStmtCacheSize}\ndataSource.prepStmtCacheSqlLimit=${dataSource.prepStmtCacheSqlLimit}\n```\n\nBut the code throws exception as follows:\n\n```\nException in thread \"main\" java.lang.RuntimeException: java.beans.IntrospectionException: Method not found: setPoolName\n    at com.zaxxer.hikari.util.PropertyBeanSetter.setProperty(PropertyBeanSetter.java:134)\n    at com.zaxxer.hikari.util.PropertyBeanSetter.setTargetFromProperties(PropertyBeanSetter.java:63)\n    at com.zaxxer.hikari.pool.PoolUtilities.initializeDataSource(PoolUtilities.java:103)\n    at com.zaxxer.hikari.pool.BaseHikariPool.<init>(BaseHikariPool.java:156)\n    at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:60)\n    at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:48)\n    at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:80)\n    at com.abc.main(DataAddressServer.java:40)\nCaused by: java.beans.IntrospectionException: Method not found: setPoolName\n    at java.beans.PropertyDescriptor.<init>(PropertyDescriptor.java:110)\n    at com.zaxxer.hikari.util.PropertyBeanSetter.setProperty(PropertyBeanSetter.java:125)\n    ... 7 more\n\n```\n\nThen I configurate it in the code as follows:\n\n``` java\nHikariConfig hikariConfig = new HikariConfig(\"/database.properties\");\nhikariConfig.setMetricRegistry(MetricUtils.METRICS);\nHikariDataSource dataSource = new HikariDataSource(hikariConfig);\ndataSource.setPoolName(\"MyPool\");\n\n```\n\nBad luck. It do not work.\n\nThe option `maxLifetime` is as the `poolName`.\n\nHow do I configurate it ?\n",
    "comments_url": "https://api.github.com/repos/brettwooldridge/HikariCP/issues/327/comments",
    "author": "diguage",
    "comments": [
      {
        "user": "brettwooldridge",
        "created_at": "2015-06-17T06:50:55Z",
        "body": "`poolName` and `maxLifetime` are not DataSource properties, they are HikariCP properties.  So this:\n\n``` ini\ndataSourceClassName=com.mysql.jdbc.jdbc2.optional.MysqlDataSource\npoolName=${dataSource.poolName}\nmaxLifetime=900000\ndataSource.url=${dataSource.url}\ndataSource.user=${dataSource.user}\ndataSource.password=${dataSource.password}\n...\n```\n"
      }
    ]
  }
]