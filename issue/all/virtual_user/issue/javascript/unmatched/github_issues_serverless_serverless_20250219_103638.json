[
  {
    "number": 11451,
    "title": "Serverless tries to remove unused role",
    "created_at": "2022-10-18T07:01:38Z",
    "closed_at": "2022-10-18T12:49:49Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/serverless/serverless/issues/11451",
    "body": "### Are you certain it's a bug?\n\n- [X] Yes, it looks like a bug\n\n### Is the issue caused by a plugin?\n\n- [X] It is not a plugin issue\n\n### Are you using the latest v3 release?\n\n- [X] Yes, I'm using the latest v3 release\n\n### Is there an existing issue for this?\n\n- [X] I have searched existing issues, it hasn't been reported yet\n\n### Issue description\n\nI used to have IAM roles created by Serverless Framework, called `events-dev-eu-central-1-lambdaRole`. I replaced it with manually created roles `dev-event-processing-deployment-role` (for deploy) and `dev-event-processing-execution-role` (for execution):\r\n```\r\n  iam:\r\n    # role assumed by account, Jenkins and CloudFormation to deploy resources\r\n    deploymentRole: dev-event-processing-deployment-role\r\n\r\n    # Lambda execution role\r\n    role: dev-event-processing-execution-role\r\n```\r\n\r\nI expected Serverless to just use a new role and do not touch the old one - it should have no knowledge about it. However, upon deploy I get an error:\r\n```\r\nError:\r\nDELETE_FAILED: IamRoleLambdaExecution (AWS::IAM::Role)\r\nAPI: iam:DeleteRolePolicy User: arn:aws:sts::590463175157:assumed-role/dev-event-processing-deployment-role/AWSCloudFormation is not authorized to perform: iam:DeleteRolePolicy on resource: role events-dev-eu-central-1-lambdaRole because no identity-based policy allows the iam:DeleteRolePolicy action\r\n```\r\n\r\nThis can be reproduced with any toy example: create \"hello world\" function with autogenerated IAM role, replace with manually created one without `iam:DeleteRolePolicy`, try to update.\n\n### Service configuration (serverless.yml) content\n\n```yaml\nN/A\n```\n\n\n### Command name and used flags\n\nserverless deploy\n\n### Command output\n\n```shell\nDeploying events to stage dev (eu-central-1)\r\n\r\n\u2716 Stack events-dev failed to deploy (75s)\r\nEnvironment: linux, node 18.6.0, framework 3.22.0 (local), plugin 6.2.2, SDK 4.3.2\r\nCredentials: Local, \"dev\" profile\r\nDocs:        docs.serverless.com\r\nSupport:     forum.serverless.com\r\nBugs:        github.com/serverless/serverless/issues\r\n\r\nError:\r\nDELETE_FAILED: IamRoleLambdaExecution (AWS::IAM::Role)\r\nAPI: iam:DeleteRolePolicy User: arn:aws:sts::590463175157:assumed-role/dev-event-processing-deployment-role/AWSCloudFormation is not authorized to perform: iam:DeleteRolePolicy on resource: role events-dev-eu-central-1-lambdaRole because no identity-based policy allows the iam:DeleteRolePolicy action\n```\n\n\n### Environment information\n\n```shell\nFramework Core: 3.22.0 (local)\r\nPlugin: 6.2.2\r\nSDK: 4.3.2\n```\n",
    "comments_url": "https://api.github.com/repos/serverless/serverless/issues/11451/comments",
    "author": "j-adamczyk",
    "comments": [
      {
        "user": "medikoo",
        "created_at": "2022-10-18T10:03:30Z",
        "body": "@j-adamczyk by referencing _external_ role you've stated that there's no need for Serverless to create one for you, and it's the reason it was removed from the deployment stack (in result removed after deployment)."
      },
      {
        "user": "j-adamczyk",
        "created_at": "2022-10-18T11:24:34Z",
        "body": "Ok, but I do not want it to be deleted. It is still used by other Serverless deployments, just not by this particular one, that's why this is a problem. Even if I have Serverless permissions, it still would not be able to delete this role, as it is in use by other services. I don't think that this is the right behavior, as this way there is no way (at least that I know of) to use Serverless for this, but rather I have to fix all of this manually."
      },
      {
        "user": "medikoo",
        "created_at": "2022-10-18T12:44:50Z",
        "body": "> Ok, but I do not want it to be deleted. It is still used by other Serverless deployments, just not by this particular one, that's why this is a problem\r\n\r\nThis role should not be used by anything outside of the created stack. I think the problem here is, that you've created a dependency that should not exist, and CF stack is not aware of."
      }
    ]
  },
  {
    "number": 11038,
    "title": "Migrating from x86_64 to arm64 Graviton2 processor not updated ",
    "created_at": "2022-05-05T20:04:33Z",
    "closed_at": "2022-05-15T00:12:28Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/serverless/serverless/issues/11038",
    "body": "### Are you certain it's a bug?\n\n- [X] Yes, it looks like a bug\n\n### Is the issue caused by a plugin?\n\n- [X] It is not a plugin issue\n\n### Are you using the latest version?\n\n- [X] Yes, I'm using the latest version\n\n### Is there an existing issue for this?\n\n- [X] I have searched existing issues, it hasn't been reported yet\n\n### Issue description\n\nWe tried to migrate our development env's lambda workload from x86_64 to arm64 Graviton2 processor using a serverless framework. serverless deployment was successful but the processor configuration was not changed. still it was using x86 processor. When I tried to change it manually on the AWS console, it was saying \r\n```\r\nIf the function uses a compiled language, or the function size exceeds the code editor storage limit (3 MB), you must upload a .zip file archive (or .jar file) when you change the architecture. Uploading a new .zip file package overwrites the existing code.\r\n```\r\n Is there any alternative way to override this? or how to change/migrate the processor without recreating/rebuilding the code?\r\n\r\n```\r\nprovider:\r\n  name: aws\r\n  runtime: nodejs12.x\r\n  timeout: 90\r\n  memorySize: 1024\r\n  tracing: ture\r\n  architecture: arm64\r\n```\r\n\r\nFYI: if the code is less than 3MB and if it is not a zip file, I can change the processor using `sls deploy`\n\n### Service configuration (serverless.yml) content\n\n```yaml\nN/A\n```\n\n\n### Command name and used flags\n\nN/A\n\n### Command output\n\n```shell\nserverless --deploy --stage flux\n```\n\n\n### Environment information\n\n```shell\nsh-4.2# serverless --version\r\nFramework Core: 2.18.0\r\nPlugin: 4.4.2\r\nSDK: 2.3.2\r\nComponents: 3.4.6\r\nsh-4.2#\n```\n",
    "comments_url": "https://api.github.com/repos/serverless/serverless/issues/11038/comments",
    "author": "pbalajiips",
    "comments": [
      {
        "user": "medikoo",
        "created_at": "2022-05-06T10:54:17Z",
        "body": "> We tried to migrate our development env's lambda workload from x86_64 to arm64 Graviton2 processor using a serverless framework. serverless deployment was successful but the processor configuration was not changed. still it was using x86 processor\r\n\r\n@pbalajiips I'm not able to reproduce that. (1) I've created a simple service with no `provider.architecture` setting, (2) deployed (3) in AWS console it shown `x86_64` at architecture (4) added `provider.architecture: arm64` (5) deployed (6) in AWS it shows as expected `arm64` setting.\r\n\r\nPlease minimise your setup to confirm where exactly is the issue, but this feature in Framework (no plugins involved) seems to work without issues"
      },
      {
        "user": "medikoo",
        "created_at": "2022-05-06T10:55:23Z",
        "body": "@pbalajiips actually you're using highly outdated version (you've checked _Yes, I'm using the latest version_ but that's not true).\r\n\r\nPlease upgrade"
      }
    ]
  },
  {
    "number": 10614,
    "title": "Issue while upgrading Serverless version with @3.0.1 and @3.0.0",
    "created_at": "2022-02-01T09:34:49Z",
    "closed_at": "2022-02-01T11:12:41Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/serverless/serverless/issues/10614",
    "body": "### Are you certain it's a bug?\n\n- [X] Yes, it looks like a bug\n\n### Is the issue caused by a plugin?\n\n- [X] It is not a plugin issue\n\n### Are you using the latest version?\n\n- [X] Yes, I'm using the latest version\n\n### Is there an existing issue for this?\n\n- [X] I have searched existing issues, it hasn't been reported yet\n\n### Issue description\n\nIssue while upgrading the Serverless version with @3.0.1 and @3.0.0\r\nHi Team,\r\n\r\nI was facing issue while upgrading Serverless version with @3.0.1 and @3.0.0.\r\nPFB snapshot's of error message\r\nserverless@3.0.1\r\nimage\r\n\r\nIn jenkins-deploy phase, we are facing below issue while upgrading the serverless version\r\n\r\n19:42:13 Environment: linux, node 12.14.1, framework 3.0.1 (local), plugin 6.0.0, SDK 4.3.0\r\n19:42:13 Credentials: Local, environment variables\r\n19:42:13 Docs: docs.serverless.com\r\n19:42:13 Support: forum.serverless.com\r\n19:42:13 Bugs: github.com/serverless/serverless/issues\r\n19:42:13\r\n19:42:13 Error:\r\n19:42:13 When external API Gateway resource is imported via \"provider.apiGateway.restApiId\", property \"provider.tracing.apiGateway\" is ineffective.\r\n19:42:13\r\n19:42:13 3 deprecations found: run 'serverless doctor' for more details\r\n19:42:13 make: *** [Makefile.deployServerless:25: deploy] Error 1\r\n[Pipeline] }\r\n[Pipeline] // withFolderProperties\r\n[Pipeline] }\r\n[Pipeline] // stage\r\n[Pipeline] }\r\n[Pipeline] // maskPasswords\r\n[Pipeline] createSummary\r\n[Pipeline] sh (hid\r\n\r\nserverless@3.0.0\r\nimage\r\n\r\n13:36:30 Environment: linux, node 12.14.1, framework 3.0.0 (local), plugin 6.0.0, SDK 4.3.0\r\n13:36:30 Credentials: Local, environment variables\r\n13:36:30 Docs: docs.serverless.com\r\n13:36:30 Support: forum.serverless.com\r\n13:36:30 Bugs: github.com/serverless/serverless/issues\r\n13:36:30\r\n13:36:30 Error:\r\n13:36:30 When external API Gateway resource is imported via \"provider.apiGateway.restApiId\", property \"provider.tracing.apiGateway\" is ineffective.\r\n13:36:30\r\n13:36:30 3 deprecations found: run 'serverless doctor' for more details\r\n13:36:31 make: *** [Makefile.deployServerless:25: deploy] Error 1\r\n[Pipeline] }\r\n[Pipeline] // withFolderProperties\r\n[Pipeline] }\r\n[Pipeline] // stage\r\n[Pipeline] }\r\n[Pipeline] // maskPasswords\r\n[Pipeline] createSummary\r\n\r\nPlease give me any suggestions and do the needful, to fix the issue\n\n### Service configuration (serverless.yml) content\n\n```yaml\nN/A\n```\n\n\n### Command name and used flags\n\nN/A\n\n### Command output\n\n```shell\nN/A\n```\n\n\n### Environment information\n\n```shell\nnpm install --save-dev serverless@3.0.1\r\nnpm WARN deprecated querystring@0.2.1: The querystring API is considered Legacy. new code should use the URLSearchParams API instead.\r\n\r\n> serverless@3.0.1 postinstall C:\\Users\\M1055983\\Documents\\GitHub\\eos-enterprise-owner-services\\node_modules\\serverless\r\n> node ./scripts/postinstall.js\r\n\r\nServerless Framework successfully installed!\r\n\r\nTo start your first project run \u201cserverless\u201d.\r\nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.2 (node_modules\\@serverless\\dashboard-plugin\\node_modules\\chokidar\\node_modules\\fsevents):\r\nnpm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {\"os\":\"darwin\",\"arch\":\"any\"} (current: {\"os\":\"win32\",\"arch\":\"x64\"})\r\nnpm WARN eslint-plugin-node@5.2.1 requires a peer of eslint@>=3.1.0 but none is installed. You must install peer dependencies yourself.\r\nnpm WARN serverless-plugin-aws-alerts@1.4.0 requires a peer of serverless@^1.12.0 but none is installed. You must install peer dependencies yourself.\r\nnpm WARN serverless-plugin-split-stacks@1.9.3 requires a peer of serverless@1 but none is installed. You must install peer dependencies yourself.\r\nnpm WARN serverless-prune-plugin@1.6.0 requires a peer of serverless@1 || 2 but none is installed. You must install peer dependencies yourself.\r\nnpm WARN serverless-webpack@5.5.4 requires a peer of serverless@1 || 2 but none is installed. You must install peer dependencies yourself.\r\nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@2.1.3 (node_modules\\fsevents):\r\nnpm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.1.3: wanted {\"os\":\"darwin\",\"arch\":\"any\"} (current: {\"os\":\"win32\",\"arch\":\"x64\"})\r\nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.13 (node_modules\\watchpack-chokidar2\\node_modules\\fsevents):\r\nnpm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.13: wanted {\"os\":\"darwin\",\"arch\":\"any\"} (current: {\"os\":\"win32\",\"arch\":\"x64\"})\r\nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@2.3.2 (node_modules\\watchpack\\node_modules\\fsevents):\r\nnpm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {\"os\":\"darwin\",\"arch\":\"any\"} (current: {\"os\":\"win32\",\"arch\":\"x64\"})\r\n\r\n+ serverless@3.0.1\r\nadded 8 packages from 5 contributors, removed 170 packages, updated 5 packages, moved 2 packages and audited 1916 packages in 40.238s\r\n\r\n99 packages are looking for funding\r\n  run `npm fund` for details\r\n\r\nfound 4 vulnerabilities (2 moderate, 2 high)\r\n  run `npm audit fix` to fix them, or `npm audit` for details\n```\n",
    "comments_url": "https://api.github.com/repos/serverless/serverless/issues/10614/comments",
    "author": "SaitejaChavva",
    "comments": [
      {
        "user": "SaitejaChavva",
        "created_at": "2022-02-01T09:42:39Z",
        "body": "13:36:30 Error:\r\n13:36:30 When external API Gateway resource is imported via \"provider.apiGateway.restApiId\", property \"provider.tracing.apiGateway\" is ineffective.\r\n13:36:30\r\n13:36:30 3 deprecations found: run 'serverless doctor' for more details\r\n13:36:31 make: *** [Makefile.deployServerless:25: deploy] Error 1"
      },
      {
        "user": "SaitejaChavva",
        "created_at": "2022-02-01T09:45:31Z",
        "body": "@medikoo Yes error message is clear, But how to fix the issue, I need suggestion's"
      },
      {
        "user": "medikoo",
        "created_at": "2022-02-01T09:49:28Z",
        "body": "> But how to fix the issue, I need suggestion's\r\n\r\nRemove `provider.tracing.apiGateway` setting from configuration"
      }
    ]
  },
  {
    "number": 6887,
    "title": "Ignore 200 CF resource limit",
    "created_at": "2019-10-25T15:12:45Z",
    "closed_at": "2019-11-13T17:44:29Z",
    "labels": [
      "question",
      "cat/deployment"
    ],
    "url": "https://github.com/serverless/serverless/issues/6887",
    "body": "Hello,\r\n\r\nWould it be possible to ignore the CF resource limit validation? I\u2019ve managed to increase the limit from 200 to 500 resources (through AWS support), but the deploy still fails because it looks like the framework also validates locally the number of resources in a stack.\r\n\r\nThank you.",
    "comments_url": "https://api.github.com/repos/serverless/serverless/issues/6887/comments",
    "author": "celicoo",
    "comments": [
      {
        "user": "medikoo",
        "created_at": "2019-10-25T15:16:06Z",
        "body": "@celicoo 200 resources per stack is a fixed, not adjustable, limit on AWS grounds (also I don't think framework implies any extra validation on that).\r\n\r\nI believe you've increased some other limit (e.g. maximum number of stacks)"
      }
    ]
  },
  {
    "number": 6824,
    "title": "`npm run test-ci` fails with  lib/classes/PluginManager.test.js",
    "created_at": "2019-10-12T08:21:24Z",
    "closed_at": "2019-10-15T17:28:20Z",
    "labels": [
      "question",
      "cat/plugin"
    ],
    "url": "https://github.com/serverless/serverless/issues/6824",
    "body": "# Bug Report\r\n\r\n## Description\r\n\r\nWhen I run `npm run test-ci` with the latest commit aba4e09c7be7e1c89b14728428f0f1a3bf9ccbbb, it fails and shows following message:\r\n\r\n```\r\n  105 passing (8s)\r\n  1 failing\r\n\r\n  1) PluginManager\r\n       #loadAllPlugins()\r\n         should throw an error when trying to load unknown plugin:\r\n\r\n      AssertionError: expected [Function] to throw 'ServerlessError' but 'TypeError: Cannot read property \\'realPath\\' of null' was thrown\r\n      + expected - actual\r\n\r\n      -TypeError: Cannot read property 'realPath' of null\r\n      +ServerlessError\r\n      \r\n      at Context.it (lib/classes/PluginManager.test.js:710:74)\r\n      at process._tickCallback (internal/process/next_tick.js:61:11)\r\n\r\n\r\n\r\nlib/classes/PluginManager.test.js failed\r\n\r\nnpm ERR! code ELIFECYCLE\r\nnpm ERR! errno 1\r\nnpm ERR! serverless@1.54.0 test-isolated: `mocha-isolated`\r\nnpm ERR! Exit status 1\r\nnpm ERR! \r\nnpm ERR! Failed at the serverless@1.54.0 test-isolated script.\r\nnpm ERR! This is probably not a problem with npm. There is likely additional logging output above.\r\n\r\nnpm ERR! A complete log of this run can be found in:\r\nnpm ERR!     /Users/akito/.npm/_logs/2019-10-12T07_00_32_589Z-debug.log\r\nnpm ERR! code ELIFECYCLE\r\nnpm ERR! errno 1\r\nnpm ERR! serverless@1.54.0 test-ci: `npm run prettier-check-updated && npm run lint-updated && npm run test-isolated`\r\nnpm ERR! Exit status 1\r\nnpm ERR! \r\nnpm ERR! Failed at the serverless@1.54.0 test-ci script.\r\nnpm ERR! This is probably not a problem with npm. There is likely additional logging output above.\r\n```\r\n\r\nCommit 050cb90684c03559fd484c89fb13ab380b3c263a may be related to this issue.\r\nWhen I run the same command with the previous commit, 4d9006bcdf783f96ca89c4901947c7159ea64121, it gets success.",
    "comments_url": "https://api.github.com/repos/serverless/serverless/issues/6824/comments",
    "author": "kdnakt",
    "comments": [
      {
        "user": "medikoo",
        "created_at": "2019-10-14T07:52:21Z",
        "body": "@kdnakt ensure to update dependencies with `npm install` (error is like you've pulled new changes but didn't update the dependencies)"
      }
    ]
  },
  {
    "number": 6008,
    "title": "Template validation error: Template format error: Unresolved resource dependencies [xxxxx] in the Resources block of the template",
    "created_at": "2019-04-08T20:34:22Z",
    "closed_at": "2019-04-09T09:29:08Z",
    "labels": [
      "question",
      "cat/deployment"
    ],
    "url": "https://github.com/serverless/serverless/issues/6008",
    "body": "when running in CLoudformation template designer it looks fine but when creating a stack i keep getting the same Error Here is the code \r\n----------------------------------------------------------------------\r\n{\r\n    \"AWSTemplateFormatVersion\": \"2010-09-09\",\r\n    \"Description\": \"\",\r\n    \"Metadata\": {\r\n\r\n    },\r\n    \"Parameters\": {\r\n\r\n    },\r\n    \"Mappings\": {\r\n\r\n    },\r\n    \"Conditions\": {\r\n\r\n    },\r\n    \"Resources\": {\r\n        \"myVPC\": {\r\n          \"Type\": \"AWS::EC2::VPC\",\r\n          \"Properties\": {\r\n            \"CidrBlock\": \"10.0.0.0/16\",\r\n            \"EnableDnsSupport\": \"true\",\r\n            \"EnableDnsHostnames\": \"ture\",\r\n            \"Tags\": [{ \"Key\": \"Name\", \"Value\":  \"myVPC\" }]\r\n          }\r\n        },\r\n        \"InternetGateway\": {\r\n          \"Type\": \"AWS::EC2::InternetGateway\",\r\n          \"Properties\": {\r\n            \"Tags\": [{ \"Key\": \"Name\", \"Value\":  \"InternetGateway\" }]\r\n          }\r\n        },\r\n        \"VPCGatewayAttachment\": {\r\n          \"Type\": \"AWS::EC2::VPCGatewayAttachment\",\r\n          \"Properties\": {\r\n            \"VpcId\": { \"Ref\": \"myVPC\" },\r\n            \"InternetGatewayId\": { \"Ref\": \"InternetGateway\" }\r\n          }\r\n        },\r\n        \"EC2SubnetA\": {\r\n          \"Type\": \"AWS::EC2::Subnet\",\r\n          \"Properties\": {\r\n            \"AvailabilityZone\": \"us-east-2a\",\r\n            \"MapPublicIpOnLaunch\": \"true\",\r\n            \"VpcId\": { \"Ref\": \"myVPC\" },\r\n            \"CidrBlock\": \"10.0.10.0/20\",\r\n            \"Tags\": [{ \"Key\": \"Name\", \"Value\":  \"EC2SubnetA\" }]\r\n          }\r\n        },\r\n        \"RDSSubnetA\": {\r\n          \"Type\": \"AWS::EC2::Subnet\",\r\n          \"Properties\": {\r\n            \"AvailabilityZone\": \"us-east-2b\",\r\n            \"VpcId\": { \"Ref\": \"myVPC\" },\r\n            \"CidrBlock\": \"10.0.43.0/20\",\r\n            \"Tags\": [{ \"Key\": \"Name\", \"Value\":  \"RDSSubnetA\" }]\r\n          }\r\n        },\r\n        \"RDSSubnetB\": {\r\n          \"Type\": \"AWS::EC2::Subnet\",\r\n          \"Properties\": {\r\n            \"AvailabilityZone\": \"us-east-2b\",\r\n            \"VpcId\": { \"Ref\": \"myVPC\" },\r\n            \"CidrBlock\": \"10.0.66.0/20\",\r\n            \"Tags\": [{ \"Key\": \"Name\", \"Value\":  \"RDSSubnetB\" }]\r\n          }\r\n        },\r\n        \"RDSDBSubnetGroupA\": {\r\n           \"Type\": \"AWS::RDS::DBSubnetGroup\",\r\n           \"Properties\": {\r\n              \"DBSubnetGroupDescription\": \"This is the Gorup of Subnets\",\r\n              \"SubnetIds\": [\r\n                  { \"Ref\": \"RDSSubnetA\" },\r\n                  { \"Ref\": \"RDSSubnetB\" }\r\n                 ],\r\n              \"Tags\": [ { \"Key\": \"Name\", \"Value\":  \"RDSDBSubnetGroupA\" } ]\r\n           }\r\n        },\r\n        \"RouteTable\": {\r\n          \"Type\": \"AWS::EC2::RouteTable\",\r\n          \"Properties\": {\r\n            \"VpcId\": { \"Ref\": \"myVPC\" },\r\n            \"Tags\": [{ \"Key\": \"Name\", \"Value\": \"RouteTable\" }]\r\n          }\r\n        },\r\n        \"InternetRoute\": {\r\n          \"Type\": \"AWS::EC2::Route\",\r\n          \"DependsOn\": \"VPCGatewayAttachment\",\r\n          \"Properties\": {\r\n            \"RouteTableId\": { \"Ref\": \"RouteTable\" },\r\n            \"DestinationCidrBlock\": \"0.0.0.0/0\",\r\n            \"GatewayId\": { \"Ref\": \"InternetGateway\" }\r\n          }\r\n        },\r\n        \"EC2SubnetARouteTableAssociation\": {\r\n          \"Type\": \"AWS::EC2::SubnetRouteTableAssociation\",\r\n          \"Properties\": {\r\n            \"SubnetId\": { \"Ref\": \"EC2SubnetA\" },\r\n            \"RouteTableId\": { \"Ref\": \"RouteTable\" }\r\n          }\r\n        },\r\n        \"RDSSubnetARouteTableAssociation\": {\r\n          \"Type\": \"AWS::EC2::SubnetRouteTableAssociation\",\r\n          \"Properties\": {\r\n            \"SubnetId\": { \"Ref\": \"RDSSubnetA\" },\r\n            \"RouteTableId\": { \"Ref\": \"Routetable\" }\r\n          }\r\n        },\r\n        \"RDSSubnetBRouteTableAssociation\": {\r\n          \"Type\": \"AWS::EC2::SubnetRouteTableAssociation\",\r\n          \"Properties\": {\r\n            \"SubnetId\": { \"Ref\": \"RDSSubnetB\" },\r\n            \"RouteTableId\": { \"Ref\": \"Routetable\" }\r\n          }\r\n        },\r\n        \"RDSSecurityGroup\" : {\r\n          \"Type\" : \"AWS::EC2::SecurityGroup\",\r\n          \"Properties\" : {\r\n            \"GroupDescription\" : \"This is the SG for RDS\",\r\n            \"SecurityGroupIngress\" : [\r\n              {\r\n                \"IpProtocol\": \"tcp\",\r\n                \"FromPort\": 3306,\r\n                \"ToPort\": 3306,\r\n                \"CidrIp\": \"0.0.0.0/0\"\r\n              }\r\n            ],\r\n            \"SecurityGroupEgress\" : [\r\n              {\r\n                \"IpProtocol\": \"-1\",\r\n                \"CidrIp\": \"0.0.0.0/0\"\r\n              }\r\n            ],\r\n            \"VpcId\" : { \"Ref\": \"myVPC\" },\r\n            \"Tags\" :  [ { \"Key\": \"Name\", \"Value\":  \"RDSSecurityGroup\" } ]\r\n          }\r\n        },\r\n        \"EC2SecurityGroup\" : {\r\n          \"Type\" : \"AWS::EC2::SecurityGroup\",\r\n          \"Properties\" : {\r\n            \"GroupDescription\" : \"This is the SG for EC2\",\r\n            \"SecurityGroupIngress\" : [\r\n              {\r\n                \"IpProtocol\": \"tcp\",\r\n                \"FromPort\": 22,\r\n                \"ToPort\": 22,\r\n                \"CidrIp\": \"0.0.0.0/0\"\r\n              }\r\n            ],\r\n            \"SecurityGroupEgress\" : [\r\n              {\r\n                \"IpProtocol\": \"-1\",\r\n                \"CidrIp\": \"0.0.0.0/0\"\r\n              }\r\n            ],\r\n            \"VpcId\" : { \"Ref\": \"myVPC\" },\r\n            \"Tags\" :  [ { \"Key\": \"Name\", \"Value\":  \"EC2SecurityGroup\" } ]\r\n          }\r\n        },\r\n        \"RDSInstanceA\": {\r\n           \"Type\": \"AWS::RDS::DBInstance\",\r\n           \"Properties\": {\r\n             \"AllocatedStorage\": \"7\",\r\n             \"DBInstanceClass\": \"db.t2.micro\",\r\n             \"AllowMajorVersionUpgrade\": \"false\",\r\n             \"AutoMinorVersionUpgrade\": \"false\",\r\n             \"BackupRetentionPeriod\": \"7\",\r\n             \"DBInstanceIdentifier\": \"RDStest\",\r\n             \"DBName\": \"thisRDS\",\r\n             \"VPCSecurityGroups\": [ { \"Ref\": \"RDSSecurityGroup\" } ],\r\n             \"DBSubnetGroupName\":  { \"Ref\": \"RDSDBSubnetGroupA\" } ,\r\n             \"Engine\": \"MYSQL\",\r\n             \"EngineVersion\": \"5.7.22\",\r\n             \"MasterUsername\": \"Kevin\",\r\n             \"MasterUserPassword\": \"kevin12345\",\r\n             \"MultiAZ\": \"false\",\r\n             \"Port\": \"3306\",\r\n             \"PubliclyAccessible\": \"false\",\r\n             \"StorageEncrypted\": \"false\",\r\n             \"StorageType\": \"gp2\",\r\n             \"Tags\": [ { \"Key\": \"Name\", \"Value\":  \"RDSDBInstanceA\" } ]\r\n          }\r\n        },\r\n        \"EC2InstanceA\": {\r\n            \"Type\": \"AWS::EC2::Instance\",\r\n            \"Properties\": {\r\n                \"KeyName\": \"mykey\",\r\n                \"ImageId\": \"ami-02bcbb802e03574ba\",\r\n                \"InstanceType\": \"t2.micro\",\r\n                \"Monitoring\": \"false\",\r\n                \"SecurityGroupIds\" : [{ \"Ref\": \"EC2SecurityGroup\" }],\r\n                \"SubnetId\" : {  \"Ref\": \"EC2SubnetA\" },\r\n                \"Tags\": [\r\n                   {\r\n                      \"Key\": \"Name\",\r\n                      \"Value\": \"EC2InstanceA\"\r\n                  }\r\n              ],\r\n              \"UserData\": {\r\n                  \"Fn::Base64\": {\r\n                      \"Fn::Join\": [\r\n                          \"\",\r\n                          [\r\n                              \"#!/bin/bash -ex\\n\",\r\n                              \"sudo yum install -y mysql\\n\",\r\n                              \"sudo yum install -y httpd\\n\"\r\n\r\n                          ]\r\n                      ]\r\n                  }\r\n              }\r\n      }\r\n              }\r\n    },\r\n    \"Outputs\": {\r\n\r\n    }\r\n}\r\n",
    "comments_url": "https://api.github.com/repos/serverless/serverless/issues/6008/comments",
    "author": "sajjad207",
    "comments": [
      {
        "user": "herebebogans",
        "created_at": "2019-04-09T00:07:57Z",
        "body": "Looks like an issue with inconsistent case\r\n\r\n`\"Ref\": \"Routetable\"`\r\n\r\nand\r\n\r\n`\"Ref\": \"RouteTable\"`"
      }
    ]
  },
  {
    "number": 5958,
    "title": "lambda environments wont reupdate if you delete one of them in lambda console.",
    "created_at": "2019-03-26T20:38:43Z",
    "closed_at": "2019-03-27T10:12:50Z",
    "labels": [
      "question",
      "cat/deployment"
    ],
    "url": "https://github.com/serverless/serverless/issues/5958",
    "body": "\r\n- What went wrong?\r\nI cannot reupdate environments variables if you previosly delete one of them in AWS lambda console. It seems if you modify the environments directly in the console, CloudFormation cannot detect any change in the CloudFormation stack template so nothing is happen if you deploy again the function.\r\n\r\n- How to reproduce?\r\nDeploy a project(pyton 2.7) with some environments variables.  Then go to aws lambda console and delete it directly and save the function. Now try to deploy the project again (sls deploy -s test for example) and you will see your environments does not upload anymore.\r\n\r\n- What was the config you used?\r\n```\r\nservice: internal-invitation\r\n\r\nprovider:\r\n  name: aws\r\n  runtime: python2.7\r\n  region: eu-west-1\r\n  role: arn:aws:iam::awsrole:role/service-role/bitLambdaRole\r\n  environment:\r\n    CAMPAIGN_TABLE: ${self:custom.stage}_pax_campaigns\r\n    INFLUENCERS_TABLE: ${self:custom.stage}_pax_influencers\r\n    PAYMENT_TABLE: ${self:custom.stage}_pax_payments\r\n    DAY_FEE: 1\r\n    ENDPOINT_ACCEPT_REJECT_CAMPAIGN: ${self:custom.api_path.campaign}\r\n    INFLUENCER_EMAIL_INVITATION_QUEUE: ${self:custom.INFLUENCER_EMAIL_INVITATION_QUEUE}\r\n    SENDER: \"Binfluencer <admin@binfluencer.es>\"\r\n    COPY_EMAIL: \"contacto@binfluencer.io\"\r\n    CHAT_ID: ${self:custom.CHAT_ID}\r\n    LINKADIA_NETWORK_DOMAIN: ${self:custom.LINKADIA_NETWORK_DOMAIN}\r\n    LINKADIA_API_KEY: ${self:custom.LINKADIA_API_KEY}\r\n    ELASTIC_ENDPOINT: ${self:custom.ELASTIC_ENDPOINT}\r\n    MAX_NUMBER_MESSAGES: ${self:custom.MAX_NUMBER_MESSAGES}\r\n\r\n\r\ncustom:\r\n  stage: ${opt:stage, self:provider.stage}\r\n  stages:\r\n    - dev\r\n    - test\r\n    - prod\r\n  vpc:\r\n    securityGroupIds:\r\n    - sg-0afd7ad8c72c5addd\r\n    - sg-29e54451\r\n    subnetIds:\r\n    - subnet-5f20eb05\r\n    - subnet-ef9f1689\r\n    - subnet-7c069f34\r\n    - subnet-0e5fd584d0bbe9293\r\n  api_path: ${file(stages/${self:custom.stage}.yml):api_path}\r\n  CHAT_ID: ${file(stages/${self:custom.stage}.yml):CHAT_ID}\r\n  LINKADIA_NETWORK_DOMAIN: ${file(stages/${self:custom.stage}.yml):LINKADIA_NETWORK_DOMAIN}\r\n  INFLUENCER_EMAIL_INVITATION_QUEUE: ${file(stages/${self:custom.stage}.yml):INFLUENCER_EMAIL_INVITATION_QUEUE}\r\n  LINKADIA_API_KEY: ${file(stages/${self:custom.stage}.yml):LINKADIA_API_KEY}\r\n  ELASTIC_ENDPOINT: ${file(stages/${self:custom.stage}.yml):ELASTIC_ENDPOINT}\r\n  MAX_NUMBER_MESSAGES: ${file(stages/${self:custom.stage}.yml):MAX_NUMBER_MESSAGES}\r\n\r\n\r\nplugins:\r\n  - serverless-python-requirements\r\n  - serverless-dir-config-plugin\r\n  - serverless-stage-manager\r\n\r\n```\r\nsimilar issue: #3007 ",
    "comments_url": "https://api.github.com/repos/serverless/serverless/issues/5958/comments",
    "author": "sleiter88",
    "comments": [
      {
        "user": "pmuens",
        "created_at": "2019-03-27T10:12:50Z",
        "body": "Hey @sleiter88 thanks for opening \ud83d\udc4d\r\n\r\nThe Serverless Framework should be the only tool touching the deployments. Manual intervention would bring the deployment into an inconsistent state since the framework has no clue what has changed and why it changed.\r\n\r\nYou shouldn't run into any issues if you only use the Serverless Framework to manage and update your deployments."
      }
    ]
  },
  {
    "number": 4341,
    "title": "Stack with id XX does not exist",
    "created_at": "2017-10-04T03:34:48Z",
    "closed_at": "2017-10-11T09:36:38Z",
    "labels": [
      "bug",
      "help wanted"
    ],
    "url": "https://github.com/serverless/serverless/issues/4341",
    "body": "# This is a Bug Report \r\n\r\n## Description\r\nI had an issue with my AWS serverless stack and I ended up deleting the CloudFormation stack. When I went to redeploy, I assumed it would just recreate the stack if it didn't exist, but it died. I then removed the project from the serverless platform too.\r\n\r\nI cannot deploy it now at all, even if I rename it, use a different AWS profile, use a different region or a different stage.\r\n\r\n\r\n## Additional Data\r\n\r\n> Serverless Error ---------------------------------------\r\n>  \r\n>   Stack with id job-advertiser-dev does not exist\r\n>  \r\n>   Get Support --------------------------------------------\r\n>      Docs:          docs.serverless.com\r\n>      Bugs:          github.com/serverless/serverless/issues\r\n>      Forums:        forum.serverless.com\r\n>      Chat:          gitter.im/serverless/serverless\r\n>  \r\n>   Your Environment Information -----------------------------\r\n>      OS:                     darwin\r\n>      Node Version:           8.6.0\r\n>      Serverless Version:     1.23.0",
    "comments_url": "https://api.github.com/repos/serverless/serverless/issues/4341/comments",
    "author": "jswift",
    "comments": [
      {
        "user": "horike37",
        "created_at": "2017-10-04T09:23:04Z",
        "body": "Thank you for reporting @jswift \ud83d\udc4d \r\n\r\n>I ended up deleting the CloudFormation stack. \r\n\r\nDid you delete the stack directly on AWS management console?\r\nIf so, You can't control the service via `serverless deploy` since the S3 bucket for the deployment has been left(Your service was broken). You needed to delete the service via `serverless remove`.\r\n\r\nYou might want to look for the deployment bucket,  which name would include `-serverlessdeploymentbucket-`. You could deploy again if you remove it once manually.\r\n\r\nP.S\r\nOne of the concepts of Serverless Framework is that it makes it possible to control any serverless services via only command line \ud83d\udc4d "
      }
    ]
  },
  {
    "number": 4244,
    "title": "Unresolved config variables when passed to plugin",
    "created_at": "2017-09-11T14:28:43Z",
    "closed_at": "2017-09-11T16:12:00Z",
    "labels": [
      "bug",
      "help wanted"
    ],
    "url": "https://github.com/serverless/serverless/issues/4244",
    "body": "# This is a Bug Report\r\n\r\n## Description\r\nVariables in the `serverless.yml` are not resolved when passed in to my custom plugin.\r\n\r\n### What went wrong?\r\n```yaml\r\nservice: test-service\r\n\r\nplugins:\r\n  - myCustomPlugin\r\n\r\ncustom:\r\n  myPluginConfig:\r\n    name: ${opt:stage}-${self:service}\r\n```\r\n\r\nIn my plugin class constructor, `serverless.service.custom.myPluginConfig.name` is an actual string that holds `${opt:stage}-${self:service}`\r\n\r\n### What did you expect should have happened?\r\nThe config variables to be resolved.\r\n\r\n## Additional Data\r\n\r\n* ***Serverless Framework Version you're using***: 1.21.1",
    "comments_url": "https://api.github.com/repos/serverless/serverless/issues/4244/comments",
    "author": "b04zdotcom",
    "comments": [
      {
        "user": "horike37",
        "created_at": "2017-09-11T14:46:20Z",
        "body": "Thank you for opening this issue @boazdejong !\r\nCould you share your plugins source code or tell us the place which is stored so that taking a look into it?"
      },
      {
        "user": "b04zdotcom",
        "created_at": "2017-09-11T14:57:51Z",
        "body": "@horike37 Sorry, but that's not possible. It is not part of an open source project.\r\n\r\nI don't think the issue is related to the plugin though. It's just a class that receives unresolved variables as part of the `serverless` parameter."
      },
      {
        "user": "HyperBrain",
        "created_at": "2017-09-11T15:01:44Z",
        "body": "@boazdejong I think the reason is, that you fetch them in your plugin's constructor. The constructor should only setup the hooks and commands of the plugin, but not access this.serverless.service at that time.\r\n\r\nYou would do the validation and evaluation of you plugin's configuration at a `validate` method, that you call from the very first location within your hooks. That's the only location, where it is guaranteed that the service has been setup correctly.\r\n\r\nPlease also check other plugins, for how they work or some of the internal plugins."
      }
    ]
  },
  {
    "number": 4203,
    "title": "S3 bucket event does not create bucket as documented",
    "created_at": "2017-09-05T01:44:22Z",
    "closed_at": "2017-09-05T04:02:08Z",
    "labels": [
      "bug",
      "help wanted"
    ],
    "url": "https://github.com/serverless/serverless/issues/4203",
    "body": "# This is a Bug Report\r\n\r\n## Description\r\n\r\nFor bug reports:\r\n* What went wrong?\r\nCreating an S3 event didn't create the S3 bucket as documented.  The lambda is there but no S3 bucket at all.\r\n\r\n* What did you expect should have happened?\r\nThe S3 bucket would be created as documented.\r\n\r\n* What was the config you used?\r\n```\r\nservice: my-service\r\nprovider:\r\n  name: aws\r\n  runtime: java8\r\n  profile: myprofile\r\n  region: us-west-2\r\n  stage: dev\r\npackage:\r\n  artifact: build/distributions/my-service-1.0-SNAPSHOT.zip\r\nfunctions:\r\n  myService:\r\n    handler: codes.rik.myservice.MyServiceHandler\r\n    events:\r\n          - s3:\r\n            bucket: photos\r\n```\r\n\r\nSimilar or dependent issues:\r\n* #3851\r\n\r\n## Additional Data\r\n\r\n* ***Serverless Framework Version you're using***: 1.21.0\r\n* ***Operating System***: OS X\r\n",
    "comments_url": "https://api.github.com/repos/serverless/serverless/issues/4203/comments",
    "author": "rikbrown",
    "comments": [
      {
        "user": "horike37",
        "created_at": "2017-09-05T02:59:48Z",
        "body": "Thank you for opening up this issue @rikbrown  \ud83d\ude0a\r\n\r\nSeems that the indent under `- s3` go wrong. that need more space.\r\nCould you fix the serverless.yml syntax as follow and try again?\r\n\r\n```yaml\r\n- s3:\r\n    bucket: photos\r\n```"
      },
      {
        "user": "rikbrown",
        "created_at": "2017-09-05T04:02:08Z",
        "body": "You're right: this was YAML indentation related.  Sigh, sorry.\r\nI'll close this report, but if there's any future change you'd consider to at least be more defensive over this (\"hey, you're an idiot like Rik who didn't indent properly, this isn't gonna work\") I'd +1 it.\r\n\r\nCheers."
      }
    ]
  },
  {
    "number": 4052,
    "title": "Adding Kinesis stream as a event trigger for lambda function not working",
    "created_at": "2017-08-07T01:02:55Z",
    "closed_at": "2017-08-07T01:18:41Z",
    "labels": [
      "bug",
      "help wanted"
    ],
    "url": "https://github.com/serverless/serverless/issues/4052",
    "body": " I am trying to add a kinesis stream as the event course:\r\n\r\nhere is the snippet from serverless.yml\r\n\r\n    functions:\r\n      Foo:\r\n        handler: handler.foo\r\n        events:\r\n          - stream:\r\n            arn: arn:aws:kinesis:us-east-1:783995676505:stream/search-helper\r\n            batchSize: 100\r\n            startingPosition: LATEST\r\n            enabled: false\r\n\r\n(note: the kinesis stream already exist in the system)\r\n\r\nThe deployment via \"serverless deploy\" is successful HOWEVER the trigger does not get added to the function configuration.\r\n\r\nI checked the yml file using a yml validatior and there are no errors. This looks straightforward enough and i have played around for hours. Either this is a bug or I am not doing something right here ?\r\n\r\n",
    "comments_url": "https://api.github.com/repos/serverless/serverless/issues/4052/comments",
    "author": "runtimeZero",
    "comments": [
      {
        "user": "horike37",
        "created_at": "2017-08-07T01:14:53Z",
        "body": "Thank you for opening up this issue @runtimeZero :blush:\r\n \r\nSeems that the indent under `- stream` go wrong. It would be needed more spaces.\r\nCould you fix the serverless.yml syntax as follw and try again?\r\n\r\n```yaml\r\nfunctions:\r\n  Foo:\r\n    handler: handler.foo\r\n    events:\r\n      - stream:\r\n          arn: arn:aws:kinesis:us-east-1:783995676505:stream/search-helper\r\n          batchSize: 100\r\n          startingPosition: LATEST\r\n          enabled: false\r\n```"
      },
      {
        "user": "warnerpinz",
        "created_at": "2018-04-28T08:08:41Z",
        "body": "Why the enabled property is set to false?"
      }
    ]
  }
]