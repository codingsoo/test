[
  {
    "number": 11553,
    "title": "Error: 'import' and 'export' may appear only with 'sourceType: module', When running sls deploy",
    "created_at": "2022-11-25T16:34:24Z",
    "closed_at": "2022-11-26T00:38:51Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/serverless/serverless/issues/11553",
    "body": "### Are you certain it's a bug?\n\n- [x] Yes, it looks like a bug\n\n### Is the issue caused by a plugin?\n\n- [X] It is not a plugin issue\n\n### Are you using the latest v3 release?\n\n- [X] Yes, I'm using the latest v3 release\n\n### Is there an existing issue for this?\n\n- [X] I have searched existing issues, it hasn't been reported yet\n\n### Issue description\n\nrunning a deploy throws an Error: 'import' and 'export' may appear only with 'sourceType: module'.\r\n\r\nTrying setting \"sourceType\" to \"module\" and it didn't work.\n\n### Service configuration (serverless.yml) content\n\n```yaml\nservice: nest-serverless-lambda\r\n\r\nplugins:\r\n - 'serverless-plugin-typescript'\r\n - serverless-plugin-optimize\r\n - serverless-offline\r\n - serverless-webpack\r\n\r\nprovider:\r\n name: aws\r\n runtime: nodejs14.x\r\n\r\nfunctions:\r\n oa-staging-backend:\r\n   handler: packages/backend/src/app/lambda.handler\r\n   events:\r\n     - http:\r\n         method: any\r\n         path: /{any+}\n```\n\n\n### Command name and used flags\n\nsls deploy --verbose --debug \"*\"\n\n### Command output\n\n```shell\nlifecycle:command:invoke:hook: [17]   > before:package:createDeploymentArtifacts\r\nlifecycle:command:invoke:hook: [17]   < before:package:createDeploymentArtifacts\r\nOptimize: starting engines\r\nOptimize: nest-serverless-lambda-dev-oa-staging-backend\r\naws: [1] { Error: connect EHOSTDOWN 169.254.169.254:80 - Local (172.20.10.8:65007)\r\n    at internalConnect (net.js:934:16)\r\n    at defaultTriggerAsyncIdScope (internal/async_hooks.js:452:18)\r\n    at net.js:1022:9\r\n    at processTicksAndRejections (internal/process/task_queues.js:77:11)\r\n  message: 'Missing credentials in config, if using AWS_CONFIG_FILE, set AWS_SDK_LOAD_CONFIG=1',\r\n  errno: -64,\r\n  code: 'CredentialsError',\r\n  syscall: 'connect',\r\n  address: '169.254.169.254',\r\n  port: 80,\r\n  time: 2022-11-25T16:30:10.671Z,\r\n  originalError:\r\n   { message: 'Could not load credentials from any providers',\r\n     errno: -64,\r\n     code: 'CredentialsError',\r\n     syscall: 'connect',\r\n     address: '169.254.169.254',\r\n     port: 80,\r\n     time: 2022-11-25T16:30:10.671Z,\r\n     originalError:\r\n      { message: 'EC2 Metadata roleName request returned error',\r\n        errno: -64,\r\n        code: 'EHOSTDOWN',\r\n        syscall: 'connect',\r\n        address: '169.254.169.254',\r\n        port: 80,\r\n        time: 2022-11-25T16:30:10.671Z,\r\n        originalError:\r\n         { errno: -64,\r\n           code: 'EHOSTDOWN',\r\n           syscall: 'connect',\r\n           address: '169.254.169.254',\r\n           port: 80,\r\n           message: 'connect EHOSTDOWN 169.254.169.254:80 - Local (172.20.10.8:65007)' } } } }\r\nlifecycle:command:invoke:hook: [17]   > before:package:createDeploymentArtifacts\r\nlifecycle:command:invoke:hook: [1] > before:deploy:deploy\r\n\r\n\u2716 Stack nest-serverless-lambda-dev failed to deploy (89s)\r\nprocess: handle error\r\nprocess: finalize { error:\r\n   { [SyntaxError: 'import' and 'export' may appear only with 'sourceType: module']\r\n     message: \"'import' and 'export' may appear only with 'sourceType: module'\",\r\n     line: 1,\r\n     column: 1,\r\n     annotated:\r\n      \"\\n/Users/bassel/oa-monorep/.build/node_modules/@nestjs/axios/node_modules/axios/index.js:1\\nimport axios from './lib/axios.js';\\n^\\nParseError: 'import' and 'export' may appear only with 'sourceType: module'\",\r\n     stream:\r\n      Labeled {\r\n        _readableState:\r\n         ReadableState {\r\n           objectMode: true,\r\n           highWaterMark: 16,\r\n           buffer: BufferList { length: 0 },\r\n           length: 0,\r\n           pipes:\r\n            Labeled {\r\n              _readableState: [ReadableState],\r\n              readable: true,\r\n              [domain]: null,\r\n              _events: [Object: null prototype],\r\n              _eventsCount: 8,\r\n              _maxListeners: undefined,\r\n              _writableState: [WritableState],\r\n              writable: true,\r\n              allowHalfOpen: true,\r\n              _options: [Object],\r\n              _wrapOptions: [Object],\r\n              _streams: [Array],\r\n              length: 1,\r\n              label: 'sort',\r\n              [Symbol(kCapture)]: false,\r\n              _writev: null,\r\n              [writableHighWaterMark]: [Getter],\r\n              [destroyed]: [Getter/Setter] },\r\n           pipesCount: 1,\r\n           flowing: true,\r\n           ended: false,\r\n           endEmitted: false,\r\n           reading: true,\r\n           sync: false,\r\n           needReadable: true,\r\n           emittedReadable: false,\r\n           readableListening: false,\r\n           resumeScheduled: false,\r\n           destroyed: false,\r\n           defaultEncoding: 'utf8',\r\n           awaitDrain: 0,\r\n           readingMore: false,\r\n           decoder: null,\r\n           encoding: null },\r\n        readable: true,\r\n        [domain]: null,\r\n        _events:\r\n         [Object: null prototype] {\r\n           end: [ [Function], [Function], [Function], [length]: 3 ],\r\n           finish: { [Function: bound onceWrapper] [length]: 0, [name]: 'bound onceWrapper', listener: [Function] },\r\n           error: { [Function (anonymous)] [length]: 1, [name]: '', [arguments]: null, [caller]: null, [prototype]: [Object] },\r\n           data: { [Function: ondata] [length]: 1, [name]: 'ondata', [prototype]: [Object] },\r\n           _mutate: { [Function: bound onceWrapper] [length]: 0, [name]: 'bound onceWrapper', listener: [Function] } },\r\n        _eventsCount: 5,\r\n        _maxListeners: undefined,\r\n        _writableState:\r\n         WritableState {\r\n           objectMode: true,\r\n           highWaterMark: 16,\r\n           finalCalled: false,\r\n           needDrain: false,\r\n           ending: false,\r\n           ended: false,\r\n           finished: false,\r\n           destroyed: false,\r\n           decodeStrings: true,\r\n           defaultEncoding: 'utf8',\r\n           length: 1,\r\n           writing: true,\r\n           corked: 0,\r\n           sync: false,\r\n           bufferProcessing: false,\r\n           onwrite: { [Function (anonymous)] [length]: 1, [name]: '', [prototype]: [Object] },\r\n           writecb: { [Function: nop] [length]: 0, [name]: 'nop', [prototype]: [Object] },\r\n           writelen: 1,\r\n           bufferedRequest: null,\r\n           lastBufferedRequest: null,\r\n           pendingcb: 1,\r\n           prefinished: false,\r\n           errorEmitted: false,\r\n           bufferedRequestCount: 0,\r\n           corkedRequestsFree: CorkedRequest { next: null, entry: null, finish: [Function] },\r\n           [buffer]: [Getter] },\r\n        writable: true,\r\n        allowHalfOpen: true,\r\n        _options: { objectMode: true },\r\n        _wrapOptions: { objectMode: true },\r\n        _streams:\r\n         [ DestroyableTransform {\r\n             _readableState: [ReadableState],\r\n             readable: true,\r\n             [domain]: null,\r\n             _events: [Object: null prototype],\r\n             _eventsCount: 4,\r\n             _maxListeners: undefined,\r\n             _writableState: [WritableState],\r\n             writable: true,\r\n             allowHalfOpen: true,\r\n             _transformState: [Object],\r\n             _destroyed: false,\r\n             _transform: [Function],\r\n             [Symbol(kCapture)]: false,\r\n             _writev: null,\r\n             [writableHighWaterMark]: [Getter],\r\n             [destroyed]: [Getter/Setter] },\r\n           [length]: 1 ],\r\n        length: 1,\r\n        label: 'syntax',\r\n        [Symbol(kCapture)]: false,\r\n        _writev: null,\r\n        [writableHighWaterMark]: [Getter],\r\n        [destroyed]: [Getter/Setter] } },\r\n  shouldBeSync: undefined,\r\n  telemetryData: undefined,\r\n  shouldSendTelemetry: undefined }\r\nEnvironment: darwin, node 14.19.0, framework 3.25.0, plugin 6.2.2, SDK 4.3.2\r\nDocs:        docs.serverless.com\r\nSupport:     forum.serverless.com\r\nBugs:        github.com/serverless/serverless/issues\r\n\r\nError:\r\n'import' and 'export' may appear only with 'sourceType: module'\r\nauth: start with cached data: {}, expires NaN\r\nauth: resolved data from config: {}\r\nauth: mode: null\r\ntelemetry: payload { ciName: null,\r\n  isTtyTerminal: true,\r\n  cliName: 'serverless',\r\n  command: 'deploy',\r\n  commandOptionNames: [ 'verbose', 'debug', 'stage', 'region', [length]: 4 ],\r\n  console: { isAuthenticated: false },\r\n  dashboard: { userId: null, orgUid: undefined },\r\n  firstLocalInstallationTimestamp: 1669305495,\r\n  frameworkLocalUserId: 'cde0c610-6c10-11ed-8287-49d5a986a63d',\r\n  installationType: 'global:npm',\r\n  isAutoUpdateEnabled: false,\r\n  isUsingCompose: false,\r\n  notificationsMode: 'on',\r\n  timestamp: 1669393812432,\r\n  timezone: 'Asia/Beirut',\r\n  triggeredDeprecations: [ [length]: 0 ],\r\n  versions: { serverless: '3.25.0', '@serverless/dashboard-plugin': '6.2.2' },\r\n  commandDurationMs: 93817,\r\n  hasLocalCredentials: false,\r\n  npmDependencies:\r\n   [ '@emotion/react',\r\n     '@emotion/server',\r\n     '@fortawesome/fontawesome-svg-core',\r\n     '@fortawesome/free-regular-svg-icons',\r\n     '@fortawesome/free-solid-svg-icons',\r\n     '@fortawesome/react-fontawesome',\r\n     '@mantine/core',\r\n     '@mantine/form',\r\n     '@mantine/hooks',\r\n     '@mantine/next',\r\n     '@mantine/notifications',\r\n     '@nestjs/axios',\r\n     '@nestjs/common',\r\n     '@nestjs/config',\r\n     '@nestjs/core',\r\n     '@nestjs/passport',\r\n     '@nestjs/platform-express',\r\n     '@prisma/client',\r\n     'amazon-cognito-identity-js',\r\n     'aws-amplify',\r\n     'aws-lambda',\r\n     'aws-serverless-express',\r\n     'core-js',\r\n     'jwks-rsa',\r\n     'next',\r\n     'passport',\r\n     'passport-jwt',\r\n     'react',\r\n     'react-dom',\r\n     'reflect-metadata',\r\n     'regenerator-runtime',\r\n     'rxjs',\r\n     'tslib',\r\n     'zod',\r\n     '@nestjs/schematics',\r\n     '@nestjs/swagger',\r\n     '@nestjs/testing',\r\n     '@nrwl/cli',\r\n     '@nrwl/cypress',\r\n     '@nrwl/eslint-plugin-nx',\r\n     '@nrwl/jest',\r\n     '@nrwl/js',\r\n     '@nrwl/linter',\r\n     '@nrwl/nest',\r\n     '@nrwl/next',\r\n     '@nrwl/node',\r\n     '@nrwl/react',\r\n     '@nrwl/web',\r\n     '@nrwl/workspace',\r\n     '@testing-library/react',\r\n     '@types/aws-serverless-express',\r\n     '@types/jest',\r\n     '@types/node',\r\n     '@types/passport-jwt',\r\n     '@types/react',\r\n     '@types/react-dom',\r\n     '@typescript-eslint/eslint-plugin',\r\n     '@typescript-eslint/parser',\r\n     'babel-jest',\r\n     'babel-preset-es2015',\r\n     'class-validator',\r\n     'cypress',\r\n     'eslint',\r\n     'eslint-config-next',\r\n     'eslint-config-prettier',\r\n     'eslint-plugin-cypress',\r\n     'eslint-plugin-import',\r\n     'eslint-plugin-jsx-a11y',\r\n     'eslint-plugin-react',\r\n     'eslint-plugin-react-hooks',\r\n     'jest',\r\n     'jest-environment-jsdom',\r\n     'nx',\r\n     'plugin',\r\n     'prettier',\r\n     'prisma',\r\n     'react-test-renderer',\r\n     'sass',\r\n     'serverless-offline',\r\n     'serverless-plugin-optimize',\r\n     'serverless-plugin-typescript',\r\n     'serverless-webpack',\r\n     'ts-jest',\r\n     'ts-node',\r\n     'typescript',\r\n     [length]: 85 ],\r\n  config:\r\n   { configValidationMode: 'warn',\r\n     provider: { name: 'aws', runtime: 'nodejs14.x', stage: 'dev', region: 'us-east-1' },\r\n     variableSources: [ [length]: 0 ],\r\n     plugins:\r\n      [ 'serverless-plugin-typescript', 'serverless-plugin-optimize', 'serverless-offline', 'serverless-webpack', [length]: 4 ],\r\n     functions: [ { url: false, runtime: 'nodejs14.x', events: [ [Object], [length]: 1 ] }, [length]: 1 ],\r\n     resources: { general: [ [length]: 0 ] },\r\n     paramsCount: 0 },\r\n  isConfigValid: true,\r\n  didCreateService: false,\r\n  commandUsage: {} }\n```\n\n\n### Environment information\n\n```shell\nFramework Core: 3.25.0\r\nPlugin: 6.2.2\r\nSDK: 4.3.2\n```\n",
    "comments_url": "https://api.github.com/repos/serverless/serverless/issues/11553/comments",
    "author": "basselabbara",
    "comments": [
      {
        "user": "medikoo",
        "created_at": "2022-11-25T16:39:43Z",
        "body": "@basselabbara this looks as problem related to one of the used plugins. Please report at given plugin repository"
      },
      {
        "user": "basselabbara",
        "created_at": "2022-11-25T16:55:32Z",
        "body": "@medikoo Can you tell which plugin?\r\n"
      },
      {
        "user": "ahmadissa",
        "created_at": "2022-12-12T04:52:14Z",
        "body": "@basselabbara try it without serverless-plugin-optimize"
      },
      {
        "user": "basselabbara",
        "created_at": "2022-12-13T14:31:38Z",
        "body": "@ahmadissa I already had to do it that way and it worked so I created an issue on the plugin's issue page. So far no response so I guess I'm gonna have to move on without optimize."
      },
      {
        "user": "m16khb",
        "created_at": "2023-01-11T02:38:03Z",
        "body": "If you want to use axios while using optimization, you can exclude the relevant modules from optimization.\r\nex:\r\n```\r\ncustom:\r\n  optimize:\r\n    external:\r\n      [\r\n        'axios',\r\n        'form-data',\r\n        'combined-stream',\r\n        'delayed-stream',\r\n        'mime-types',\r\n        'mime-db',\r\n        'asynckit',\r\n        'proxy-from-env',\r\n        'follow-redirects',\r\n      ]\r\n    includePaths:\r\n      [\r\n        'node_modules/axios',\r\n        'node_modules/form-data',\r\n        'node_modules/combined-stream',\r\n        'node_modules/delayed-stream',\r\n        'node_modules/mime-types',\r\n        'node_modules/mime-db',\r\n        'node_modules/asynckit',\r\n        'node_modules/proxy-from-env',\r\n        'node_modules/follow-redirects',\r\n      ]\r\n```"
      }
    ]
  },
  {
    "number": 9753,
    "title": "Unable to override `service` using command option",
    "created_at": "2021-07-15T15:41:35Z",
    "closed_at": "2021-07-17T14:57:35Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/serverless/serverless/issues/9753",
    "body": "In my previous projects I was configuring the name of the service using a command option. This let my team each deploy their own stack using a unique CF stack name. This was done by setting `service: ${opt:serviceName, 'default-service-name'}`.\r\n\r\nSince version 2.32.0, when attempting this, the commands fail with the following error: `Cannot resolve serverless.yml: \"service\" property is not accessible (configured behind variables which cannot be resolved at this stage)`.\r\n\r\nIf I switch to using an environment variable instead of a command options (`${opt:....` to ${env:....`) then it will succeed.\r\n\r\n<details>\r\n<summary><code>serverless.yml</code></summary>\r\n\r\n```yaml\r\nservice: ${opt:serviceName, 'hermes'}\r\nframeworkVersion: '2'\r\nvariablesResolutionMode: 20210326\r\n\r\nprovider:\r\n  name: aws\r\n  runtime: go1.x\r\n  lambdaHashingVersion: 20201221\r\n  memorySize: 512\r\n  versionFunctions: false\r\n  logRetentionInDays: 14\r\n  tracing:\r\n    apiGateway: true\r\n    lambda: 'Active'\r\n  deploymentBucket:\r\n    blockPublicAccess: true\r\n    name: catalog.${self:provider.region}.deploys\r\n  iam:\r\n    role:\r\n      statements:\r\n        - Effect: Allow\r\n          Action:\r\n            - xray:PutTraceSegments\r\n            - xray:PutTelemetryRecords\r\n          Resource: \"*\"\r\n  environment:\r\n    SERVICE_NAME: ${self:service}\r\n\r\nplugins:\r\n  - serverless-go-plugin\r\n\r\nfunctions:\r\n  hello:\r\n    handler: function/hello/main.go\r\n    events:\r\n      - httpApi:\r\n          path: /hello\r\n          method: get\r\n```\r\n</details>\r\n\r\n<!--\r\nQ3: Provide (in below placeholder) FULL name and output of the command that exposes the problem.\r\n       Note: Ensure SLS_DEBUG=* env var for verbose debug output\r\n-->\r\n\r\n<details>\r\n<summary><b><code>serverless deploy --serviceName dev1-hermes</code> output</b></summary>\r\n\r\n```\r\n Serverless Error ----------------------------------------\r\n\r\n  Cannot resolve serverless.yml: \"service\" property is not accessible (configured behind variables which cannot be resolved at this stage)\r\n\r\n  Get Support --------------------------------------------\r\n     Docs:          docs.serverless.com\r\n     Bugs:          github.com/serverless/serverless/issues\r\n     Issues:        forum.serverless.com\r\n\r\n  Your Environment Information ---------------------------\r\n     Operating System:          darwin\r\n     Node Version:              14.15.3\r\n     Framework Version:         2.44.0\r\n     Plugin Version:            5.2.0\r\n     SDK Version:               4.2.3\r\n     Components Version:        3.11.0\r\n```\r\n\r\n</details>\r\n\r\n\r\n<b>Installed version</b>\r\n\r\n```\r\nServerless: Running \"serverless\" installed locally (in service node_modules)\r\nFramework Core: 2.52.0 (local)\r\nPlugin: 5.4.3\r\nSDK: 4.2.3\r\nComponents: 3.13.4\r\n```\r\n",
    "comments_url": "https://api.github.com/repos/serverless/serverless/issues/9753/comments",
    "author": "SkippyZA",
    "comments": [
      {
        "user": "medikoo",
        "created_at": "2021-07-16T09:38:50Z",
        "body": "@SkippyZA In latest versions to introduce solid CLI params validation, we've stopped supporting free form CLI params injection, and new variables resolver (to which you've completely switched via `variablesResolutionMode: 20210326`) doesn't recognize them in variables resolution)\r\n\r\nInsteead please rely on environment variables as e.g.:\r\n\r\n```\r\nSERVICE_NAME=dev1-hermes sls deploy output\r\n```\r\n\r\n```serverless.yml\r\nservice: ${env:SERVICE_NAME, 'hermes'}\r\n...\r\n```\r\n"
      }
    ]
  },
  {
    "number": 9715,
    "title": "Unable to configure provisioned concurrency 0",
    "created_at": "2021-07-07T15:25:12Z",
    "closed_at": "2021-07-08T12:43:30Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/serverless/serverless/issues/9715",
    "body": "<!--\r\nQ1: Describe the problem (use case) that needs to be solved:\r\n-->\r\n\r\nWhen using `configValidationMode: error` and provisioned concurrency is set to 0 for some function, an error is thrown requiring:\r\n```\r\nConfiguration error at 'functions.authorizer.provisionedConcurrency': should be >= 1\r\n```\r\n\r\n### Use case description\r\n\r\nThis would be useful in cases where provisioned concurrency is only desired for certain stage deployments.  It allows the provisioned concurrency configuration to be conditional.\r\n\r\n<!--\r\nQ2: Propose a solution (e.g. provide configuration example)\r\n-->\r\n\r\n### Proposed solution\r\n\r\nAllow provisioned concurrency 0 - it currently works without `configValidationMode: error`, which is useful in cases where provisioned currency is only desired for certain stage deployments.  It allows the provisioned concurrency configuration to be conditional.\r\n\r\n```\r\nfunctions:\r\n  authorizer:\r\n    handler: handler\r\n    provisionedConcurrency: ${self:custom.config.authorizer-provisioned-concurrency}\r\n```\r\n",
    "comments_url": "https://api.github.com/repos/serverless/serverless/issues/9715/comments",
    "author": "jackmuskopf",
    "comments": [
      {
        "user": "medikoo",
        "created_at": "2021-07-07T16:31:08Z",
        "body": "@jackmuskopf if you don't want to setup `provisionedConcurrency` but for some technical reason need to keep property in configuration, simply set it to `null`"
      },
      {
        "user": "jackmuskopf",
        "created_at": "2021-07-08T12:21:40Z",
        "body": "@medikoo Using `null` works with `configValidationMode: error` but leads me to a different concern: using `null` fails with\r\n\r\n```\r\n  Cannot resolve serverless.yml: Variables resolution errored with:\r\n    - Cannot resolve variable at \"functions.authorizer.provisionedConcurrency\": Value not found at \"self\" \r\nsource\r\n```\r\n\r\nwhen using `variablesResolutionMode: 20210326`, which like `configValidationMode: error` looks like it will become default in the next major release.  Maybe I can use `configValidationMode: warn` after the next major release.\r\n\r\n "
      },
      {
        "user": "medikoo",
        "created_at": "2021-07-08T12:31:34Z",
        "body": "@jackmuskopf if you want to accept _no value_ as valid resolution value, you need to explicitly configure a fallback to `null` as:\r\n\r\n```\r\n ${self:custom.config.authorizer-provisioned-concurrency, null}\r\n```"
      }
    ]
  },
  {
    "number": 7480,
    "title": "Can't deploy to AWS China regions",
    "created_at": "2020-03-18T09:45:09Z",
    "closed_at": "2020-03-24T13:17:01Z",
    "labels": [
      "question",
      "help wanted"
    ],
    "url": "https://github.com/serverless/serverless/issues/7480",
    "body": "# Bug Report\r\n\r\n## Description\r\n\r\n1. What did you do?\r\ncreate an simple lambda function using aws-nodejs sample. \r\nDeploy the application using sls deploy.\r\n\r\n1. What happened?\r\n\r\nReceived error saying security token is invalid. I did have IAM admin AK/SK configured for AWS China regions. \r\n\r\n```bash\r\n8c85909aaff7:serverless-aws-nodejs sunhua$ aws sts get-caller-identity --profile china --region cn-northwest-1\r\n{\r\n    \"Account\": \"xxxxxxxxxxxxx\",\r\n    \"UserId\": \"AIDAOUZ3VMBZOM4GMPZ7E\",\r\n    \"Arn\": \"arn:aws-cn:iam::xxxxxxxxxxxxx:user/admin\"\r\n}\r\n8c85909aaff7:serverless-aws-nodejs sunhua$ sls deploy --profile china --region cn-northwest-1\r\nServerless: Packaging service...\r\nServerless: Excluding development dependencies...\r\n\r\n  Serverless Error ---------------------------------------\r\n\r\n  The security token included in the request is invalid.\r\n\r\n  Get Support --------------------------------------------\r\n     Docs:          docs.serverless.com\r\n     Bugs:          github.com/serverless/serverless/issues\r\n     Issues:        forum.serverless.com\r\n\r\n  Your Environment Information ---------------------------\r\n     Operating System:          darwin\r\n     Node Version:              12.16.1\r\n     Framework Version:         1.66.0\r\n     Plugin Version:            3.5.0\r\n     SDK Version:               2.3.0\r\n     Components Version:        2.22.3\r\n\r\n\r\n```\r\n1. What should've happened?\r\n\r\nThe deploy should succeed. \r\n\r\n1. What's the content of your `serverless.yml` file?\r\n\r\n```\r\n\r\nservice: projects\r\n\r\nprovider:\r\n  name: aws\r\n  runtime: nodejs12.x\r\n\r\n  stage: dev\r\n  region: cn-northwest-1\r\n  endpointType: REGIONAL\r\n\r\nfunctions:\r\n  hello:\r\n    handler: handler.hello\r\n\r\n\r\n```\r\n\r\n\r\n1. What's the output you get when you use the `SLS_DEBUG=*` environment variable (e.g. `SLS_DEBUG=* serverless deploy`)\r\n\r\n```\r\nServerless: Load command interactiveCli\r\nServerless: Load command config\r\nServerless: Load command config:credentials\r\nServerless: Load command config:tabcompletion\r\nServerless: Load command config:tabcompletion:install\r\nServerless: Load command config:tabcompletion:uninstall\r\nServerless: Load command create\r\nServerless: Load command install\r\nServerless: Load command package\r\nServerless: Load command deploy\r\nServerless: Load command deploy:function\r\nServerless: Load command deploy:list\r\nServerless: Load command deploy:list:functions\r\nServerless: Load command invoke\r\nServerless: Load command invoke:local\r\nServerless: Load command info\r\nServerless: Load command logs\r\nServerless: Load command metrics\r\nServerless: Load command print\r\nServerless: Load command remove\r\nServerless: Load command rollback\r\nServerless: Load command rollback:function\r\nServerless: Load command slstats\r\nServerless: Load command plugin\r\nServerless: Load command plugin\r\nServerless: Load command plugin:install\r\nServerless: Load command plugin\r\nServerless: Load command plugin:uninstall\r\nServerless: Load command plugin\r\nServerless: Load command plugin:list\r\nServerless: Load command plugin\r\nServerless: Load command plugin:search\r\nServerless: Load command config\r\nServerless: Load command config:credentials\r\nServerless: Load command rollback\r\nServerless: Load command rollback:function\r\nServerless: Load command upgrade\r\nServerless: Load command uninstall\r\nServerless: Load command login\r\nServerless: Load command logout\r\nServerless: Load command generate-event\r\nServerless: Load command test\r\nServerless: Load command dashboard\r\nServerless: Load command output\r\nServerless: Load command output:get\r\nServerless: Load command output:list\r\nServerless: Load command param\r\nServerless: Load command param:get\r\nServerless: Load command param:list\r\nServerless: Invoke deploy\r\nServerless: Invoke package\r\nServerless: Invoke aws:common:validate\r\nServerless: Invoke aws:common:cleanupTempDir\r\nServerless: Packaging service...\r\nServerless: Excluding development dependencies...\r\nServerless: Invoke aws:package:finalize\r\nServerless: Invoke aws:common:moveArtifactsToPackage\r\nServerless: Invoke aws:common:validate\r\nServerless: Invoke aws:deploy:deploy\r\nServerless: [AWS cloudformation 403 1.528s 0 retries] describeStacks({ StackName: 'projects-dev' })\r\n\r\n  Serverless Error ---------------------------------------\r\n\r\n  ServerlessError: The security token included in the request is invalid.\r\n      at /Users/sunhua/.nvm/versions/node/v12.16.1/lib/node_modules/serverless/lib/plugins/aws/provider/awsProvider.js:331:27\r\n      at processTicksAndRejections (internal/process/task_queues.js:97:5)\r\n\r\n  Get Support --------------------------------------------\r\n     Docs:          docs.serverless.com\r\n     Bugs:          github.com/serverless/serverless/issues\r\n     Issues:        forum.serverless.com\r\n\r\n  Your Environment Information ---------------------------\r\n     Operating System:          darwin\r\n     Node Version:              12.16.1\r\n     Framework Version:         1.66.0\r\n     Plugin Version:            3.5.0\r\n     SDK Version:               2.3.0\r\n     Components Version:        2.22.3\r\n```\r\n\r\n",
    "comments_url": "https://api.github.com/repos/serverless/serverless/issues/7480/comments",
    "author": "bnusunny",
    "comments": [
      {
        "user": "medikoo",
        "created_at": "2020-03-23T03:23:56Z",
        "body": "@bnusunny thanks for report. Such error happens if security token as provided in AWS credentials is outdated. Are you sure your credentials configuration is up to date?"
      },
      {
        "user": "bnusunny",
        "created_at": "2020-03-23T13:54:04Z",
        "body": "@medikoo Yes, I'm sure my credential is up to date. As you can see in the following tests. I can use aws cli to get back my IAM identity, and immediately after that, I do the deployment, it fails. \r\n\r\nUser accounts in AWS China regions and global regions are completed seperated. AWS China region's IAM credentials can only be used in AWS China regions. If serverless cli sent the request to AWS global regions, the request would fail.  \r\n\r\n```bash\r\n\r\n8c85909aaff7:serverless-aws-nodejs sunhua$ aws sts get-caller-identity --profile china --region cn-northwest-1\r\n{\r\n    \"Account\": \"xxxxxxxxxxxxx\",\r\n    \"UserId\": \"AIDAOUZ3VMBZOM4GMPZ7E\",\r\n    \"Arn\": \"arn:aws-cn:iam::xxxxxxxxxxxxx:user/admin\"\r\n}\r\n8c85909aaff7:serverless-aws-nodejs sunhua$ sls deploy --profile china --region cn-northwest-1\r\nServerless: Packaging service...\r\nServerless: Excluding development dependencies...\r\n\r\n  Serverless Error ---------------------------------------\r\n\r\n  The security token included in the request is invalid.\r\n\r\n  Get Support --------------------------------------------\r\n     Docs:          docs.serverless.com\r\n     Bugs:          github.com/serverless/serverless/issues\r\n     Issues:        forum.serverless.com\r\n\r\n  Your Environment Information ---------------------------\r\n     Operating System:          darwin\r\n     Node Version:              12.16.1\r\n     Framework Version:         1.66.0\r\n     Plugin Version:            3.5.0\r\n     SDK Version:               2.3.0\r\n     Components Version:        2.22.3\r\n\r\n\r\n\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
      },
      {
        "user": "medikoo",
        "created_at": "2020-03-24T00:18:34Z",
        "body": "Thanks @bnusunny for futher clarifications. It's probably an issue with hardcoded AWS partition (`:aws:` token) sowewhere.\r\n\r\nWe'll try to look into it shortly. Otherwise if anyone has quick idea where's the source of a problem PR with a fix is welcome!"
      },
      {
        "user": "drexler",
        "created_at": "2020-03-24T11:51:17Z",
        "body": "@bnusunny  i see you deploying with `sls deploy --profile china --region cn-northwest-1`\r\n\r\ndoes the following work for you?: \r\n`sls deploy --aws-profile china --region cn-northwest-1`"
      }
    ]
  },
  {
    "number": 7228,
    "title": "Adding Kinesis stream as a trigger for lambda",
    "created_at": "2020-01-16T22:49:11Z",
    "closed_at": "2020-01-17T16:43:01Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/serverless/serverless/issues/7228",
    "body": "I am trying to add a kinesis stream as an event trigger, below is the snippet from serverless.yml\r\n\r\n```\r\n    events:\r\n      - stream:\r\n          type: kinesis\r\n          streamName: helper\r\n          arn: arn:aws:kinesis:us-east-1:737373737505:stream/helper\r\n          bisectBatchOnFunctionError: true\r\n          batchSize: 11\r\n          maximumRetryAttempts: 10\r\n          startingPosition: LATEST\r\n          parallelizationFactor: 10\r\n          enabled: true \r\n```\r\nNote: The kinesis stream already exist in the system\r\n\r\nThe deployment  is successful but some of the configuration is ignored, didn't find it in the generated  CFT as well.\r\n\r\nBelow is the generated CFT for the trigger:\r\n```\r\n  OrderEventSourceMappingKinesisHelper\r\n    Type: 'AWS::Lambda::EventSourceMapping'\r\n    DependsOn: IamRoleLambdaExecution\r\n    Properties:\r\n      BatchSize: 11\r\n      EventSourceArn: 'arn:aws:kinesis:us-east-1:737373737505:stream/helper'\r\n      FunctionName: !GetAtt \r\n        - ProcessorLambdaFunction\r\n        - Arn\r\n      StartingPosition: LATEST\r\n      Enabled: 'True'\r\n```\r\nBelow is the details of the added trigger:\r\n```\r\n**Details**\r\nBatch size: 11\r\nBatch window: None\r\nConcurrent batches per shard: 1\r\nLast processing result: No records processed\r\nMaximum age of record: 604800\r\nOn-failure destination:\r\n{\r\n  \"onFailure\": {}\r\n}\r\nRetry attempts: 10000\r\nSplit batch on error: No\r\n```\r\n\r\nparallelizationFactor & bisectBatchOnFunctionError are ignored, did I miss anything or is it a bug?\r\n\r\n",
    "comments_url": "https://api.github.com/repos/serverless/serverless/issues/7228/comments",
    "author": "rohitkaruturi",
    "comments": [
      {
        "user": "medikoo",
        "created_at": "2020-01-17T11:49:41Z",
        "body": "@rohitkaruturi are you sure, you rely on latest version of a Serverless? Support for those properties was added very recently"
      }
    ]
  },
  {
    "number": 6803,
    "title": "The CloudFormation template is invalid: Template format error: Number of resources, 202, is greater than maximum allowed",
    "created_at": "2019-10-08T10:06:35Z",
    "closed_at": "2019-10-08T12:28:26Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/serverless/serverless/issues/6803",
    "body": "# Bug Report\r\n\r\n## Description\r\nI opened a ticket within AWS Support and they have increased our CF Stack limit to 500 resources. Even though the limit was increased, Serverless is still throwing the error in the title.\r\n\r\nObviously our limit is not 200 anymore but 500 instead and Serverless keeps telling that the It is still 200, why? \r\n\r\nHow can I use Serverless with more than 200 resources now that the limit has been increased?\r\n\r\n\r\n1. What did you do?\r\n   sls deploy\r\n1. What happened?\r\n   The CloudFormation template is invalid: Template format error: Number of resources, 202, is greater than maximum allowed\r\n1. What should've happened?\r\n    Successfully deploy\r\n1. What's the content of your `serverless.yml` file?\r\n     Does not matter\r\n1. What's the output you get when you use the `SLS_DEBUG=*` environment variable (e.g. `SLS_DEBUG=* serverless deploy`)\r\n    Serverless: Packaging service...\r\nServerless: Excluding development dependencies...\r\nServerless: Uploading CloudFormation file to S3...\r\nServerless: Uploading artifacts...\r\nServerless: Uploading service dialog-manager.zip file to S3 (10.66 MB)...\r\nServerless: Validating template...\r\nUnhandled rejection Error: The CloudFormation template is invalid: Template format error: Number of resources, 202, is greater than maximum allowed, 200\r\n    at provider.request.catch.error (/usr/local/lib/node_modules/serverless/lib/plugins/aws/deploy/lib/validateTemplate.js:19:13)\r\n    at tryCatcher (/usr/local/lib/node_modules/serverless/node_modules/bluebird/js/release/util.js:16:23)\r\n    at Promise._settlePromiseFromHandler (/usr/local/lib/node_modules/serverless/node_modules/bluebird/js/release/promise.js:517:31)\r\n    at Promise._settlePromise (/usr/local/lib/node_modules/serverless/node_modules/bluebird/js/release/promise.js:574:18)\r\n    at Promise._settlePromise0 (/usr/local/lib/node_modules/serverless/node_modules/bluebird/js/release/promise.js:619:10)\r\n    at Promise._settlePromises (/usr/local/lib/node_modules/serverless/node_modules/bluebird/js/release/promise.js:695:18)\r\n    at _drainQueueStep (/usr/local/lib/node_modules/serverless/node_modules/bluebird/js/release/async.js:138:12)\r\n    at _drainQueue (/usr/local/lib/node_modules/serverless/node_modules/bluebird/js/release/async.js:131:9)\r\n    at Async._drainQueues (/usr/local/lib/node_modules/serverless/node_modules/bluebird/js/release/async.js:147:5)\r\n    at Immediate.Async.drainQueues (/usr/local/lib/node_modules/serverless/node_modules/bluebird/js/release/async.js:17:14)\r\n    at runCallback (timers.js:810:20)\r\n    at tryOnImmediate (timers.js:768:5)\r\n    at processImmediate [as _immediateCallback] (timers.js:745:5)\r\n\r\nSimilar or dependent issues:\r\n\r\n- #5999\r\n",
    "comments_url": "https://api.github.com/repos/serverless/serverless/issues/6803/comments",
    "author": "marcosoftinova",
    "comments": [
      {
        "user": "medikoo",
        "created_at": "2019-10-08T10:11:42Z",
        "body": "Serverless message refers to _Maximum number of resources that you can declare in your AWS CloudFormation template_, which is hard set to 200 (it's not possible to lift it even after contacting support).\r\n\r\nI believe what you have lifted is _Maximum number of AWS CloudFormation stacks that you can create_, which indeed is possible to upgrade by contacting the support.\r\n"
      }
    ]
  },
  {
    "number": 6590,
    "title": "remove a stage try to delete the whole stack instead",
    "created_at": "2019-08-26T07:53:59Z",
    "closed_at": "2019-08-26T09:07:28Z",
    "labels": [
      "question",
      "cat/deployment"
    ],
    "url": "https://github.com/serverless/serverless/issues/6590",
    "body": "# This is a Bug Report\r\n\r\n## Description\r\nDeploying an application on two stages, dev/prod, work without any problem.\r\n\r\n- What went wrong?\r\nIf you tried to delete a stage, `slss` will attempt to **remove the whole stack** instead of just removing the specific stage, and will return the following error.\r\n\r\n```shell\r\n  An error occurred: ServerlessDeploymentBucket - The bucket you tried to delete is not empty (Service: Amazon S3; Status Code: 409; Error Code: BucketNotEmpty; Request ID: 12B385E70DA48DA6; S3 Extended Request ID: fpZ8su8p6ZfHHZVFk71C1RK2tCWdS3sxWOLL2VPrpfrT4pSQBt64scKHzabba0PMtLsGgfnsZ6w=).\r\n```\r\nFor sure the bucket is not empty, since it has the other staging data.\r\n\r\n- What did you expect should have happened?\r\nThe specific stage should be removed only and the stack should stay.\r\n\r\n- What was the config you used?\r\n```yml\r\nservice: myApi\r\n\r\nprovider:\r\n    name: aws\r\n    region: us-east-1\r\n    runtime: provided\r\n    stage: ${opt:stage, 'dev'}\r\n    stackName: my-api # Use a custom name for the CloudFormation stack\r\n    apiName: my-api # Use a custom name for the API Gateway API\r\n    apiKeys: # List of API keys to be used by your service API Gateway REST API\r\n      - name: APIKey-${opt:stage, \"dev\"}\r\n        description: The API Key\r\n    apiGateway: # Optional API Gateway global config\r\n      apiKeySourceType: HEADER # Source of API key for usage plan. HEADER or AUTHORIZER.\r\ndeployment\r\n    usagePlan: # Optional usage plan configuration\r\n      quota:\r\n        limit: 5000\r\n        offset: 2\r\n        period: MONTH\r\n      throttle:\r\n        burstLimit: 200\r\n        rateLimit: 100\r\n```\r\n\r\n- What stacktrace or error message from your provider did you see?\r\n```\r\nThe bucket you tried to delete is not empty (Service: Amazon S3; Status Code: 409; Error Code: BucketNotEmpty; Request ID: 12B385E70DA48DA6; S3 Extended Request ID: fpZ8su8p6ZfHHZVFk71C1RK2tCWdS3sxWOLL2VPrpfrT4pSQBt64scKHzabba0PMtLsGgfnsZ6w=)\r\n```\r\n\r\n## Additional Data\r\n\r\n- **_Serverless Framework Version you're using_**:\r\n```shell\r\n  Your Environment Information ---------------------------\r\n     Operating System:          darwin\r\n     Node Version:              11.15.0\r\n     Framework Version:         1.50.0\r\n     Plugin Version:            1.3.8\r\n     SDK Version:               2.1.0\r\n```\r\n- **_Operating System_**:\r\nmacOs 10.14.6\r\n",
    "comments_url": "https://api.github.com/repos/serverless/serverless/issues/6590/comments",
    "author": "zaherg",
    "comments": [
      {
        "user": "pmuens",
        "created_at": "2019-08-26T09:07:28Z",
        "body": "Hey @linuxjuggler thanks for opening \ud83d\udc4d\r\n\r\nThe Serverless Framework creates a single, self-contained stack for every stage. Given that it's the expected behavior that the whole stage-stack is deleted when you do a `serverless remove`."
      }
    ]
  },
  {
    "number": 6355,
    "title": "Remove trailing & leading quotes from env refs",
    "created_at": "2019-07-10T11:12:31Z",
    "closed_at": "2019-07-10T12:46:30Z",
    "labels": [
      "question",
      "cat/dx"
    ],
    "url": "https://github.com/serverless/serverless/pull/6355",
    "body": "## What did you implement:\r\nThis PR removes straling and leading `\"` or `'` from env variables. This was not a problem for function cloud formation template definition but was so for resources.\r\n\r\nIf you had en env like so `export TEST_ENV=\"abcdefg?a\"` the quotes would be escaped in the resource CF template json as `Value: \"\\\"abcdefg?a\\\"\"`.\r\n\r\n## How did you implement it:\r\n\r\n`getValueFromEnv` now calls `getValueFromString` if the value is a string\r\n\r\n## How can we verify it:\r\n\r\nTry use an env value surrounded by quotes and use that somewhere in your resources, ie:\r\n```yaml\r\nresources:\r\n  Resources:\r\n    DBCluster:\r\n      Type: \"AWS::DocDB::DBCluster\"\r\n      DeletionPolicy: Delete\r\n      Properties:\r\n        DBClusterIdentifier: ${self:custom.dbClusterName}\r\n        MasterUsername: rvadmin\r\n        MasterUserPassword: ${env:DB_PASSWORD}\r\n```\r\n## Todos:\r\n\r\n_**Note: Run `npm run test-ci` to run all validation checks on proposed changes**_\r\n\r\n- [X] Write tests and confirm existing functionality is not broken.  \r\n       **Validate via `npm test`**\r\n- [X] Write documentation\r\n- [X] Ensure there are no lint errors.  \r\n       **Validate via `npm run lint-updated`**  \r\n       _Note: Some reported issues can be automatically fixed by running `npm run lint:fix`_\r\n- [X] Ensure introduced changes match Prettier formatting.  \r\n       **Validate via `npm run prettier-check-updated`**  \r\n       _Note: All reported issues can be automatically fixed by running `npm run prettify-updated`_\r\n- [X] Make sure code coverage hasn't dropped\r\n- [X] Provide verification config / commands / resources\r\n- [X] Enable \"Allow edits from maintainers\" for this PR\r\n- [X] Update the messages below\r\n\r\n**_Is this ready for review?:_** YES  \r\n**_Is it a breaking change?:_** NO\r\n",
    "comments_url": "https://api.github.com/repos/serverless/serverless/issues/6355/comments",
    "author": "richarddd",
    "comments": [
      {
        "user": "richarddd",
        "created_at": "2019-07-10T11:42:24Z",
        "body": "> > If you had en env like so export TEST_ENV=\"abcdefg?a\" the quotes would be escaped in the resource CF template json as Value: \"\"abcdefg?a\"\".\r\n> \r\n> In this case `TEST_ENV` will originally resolve to `abcdefg?a` (no quotes, and there's nothing to strip).\r\n> To have value quoted it'll have to be exported as `export TEST_ENV=\"\\\"abcdefg?a\\\"\"`.\r\n> \r\n> Generally if someone put quotes into env var values, it's either intentional, or some error in env variables setup.\r\n> \r\n> I have an impression that with that we're interfering too far, and may accidentally trim values which were not meant to be stripped\r\n> \r\n> Can you share more light on your use case?\r\n\r\nWell that really depends on how you see it. Imaging you want a string or some other value with special characters as an env variable. You would enclose it in quotes. For instance:\r\n```bash\r\nexport VARIABLE=\"AAA?BBB&CC_C\"\r\necho $VARIABLE\r\n````\r\nWhich is far more common than escaping all the values (for readability):\r\n```bash\r\nexport VARIABLE=AAA?BBB\\&CC\\_C\r\necho $VARIABLE\r\n```\r\nThis PR will only strip \"surrounding\" quotes.\r\n\r\n"
      },
      {
        "user": "medikoo",
        "created_at": "2019-07-10T11:56:49Z",
        "body": "> This PR will only strip \"surrounding\" quotes.\r\n\r\nIn cases you mention, there seem no surrounding quotes to strip\r\n\r\n```bash\r\n$ export VARIABLE=\"AAA?BBB&CC_C\"\r\n$ echo $VARIABLE\r\nAAA?BBB&CC_C\r\n```"
      },
      {
        "user": "richarddd",
        "created_at": "2019-07-10T11:59:53Z",
        "body": "> > This PR will only strip \"surrounding\" quotes.\r\n> \r\n> In cases you mention, there are no surrounding quotes to strip\r\n> \r\n> ```shell\r\n> $ export VARIABLE=\"AAA?BBB&CC_C\"\r\n> $ echo $VARIABLE\r\n> AAA?BBB&CC_C\r\n> ```\r\n\r\nTry adding that to your serverless.yml and you'll get a `value: \"\\\"AAA?BBB&CC_C\\\"\"` inside CloudFormation, which is probably unintentional. IMO it should behave same as `echo` in bash :)"
      },
      {
        "user": "medikoo",
        "created_at": "2019-07-10T12:02:54Z",
        "body": "> Try adding that to your serverless.yml and you'll get a value: \"\\\"AAA?BBB&CC_C\\\"\" inside CloudFormation, which is probably unintentional. IMO it should behave same as echo in bash :)\r\n\r\nhmm.. can you post some example of env configuration in serverless.yml, that resolves with unwanted quotes (?)"
      },
      {
        "user": "richarddd",
        "created_at": "2019-07-10T12:46:30Z",
        "body": "> > Try adding that to your serverless.yml and you'll get a value: \"\"AAA?BBB&CC_C\"\" inside CloudFormation, which is probably unintentional. IMO it should behave same as echo in bash :)\r\n> \r\n> hmm.. can you post some example of env configuration in serverless.yml, that resolves with unwanted quotes (?)\r\n\r\nYou are correct, my mistake! Must have been something else which caused the extra quotes to be interpreted! Will close this PR \ud83d\udc4d "
      }
    ]
  },
  {
    "number": 4402,
    "title": "Turn of SLS_DEBUG",
    "created_at": "2017-10-20T20:41:21Z",
    "closed_at": "2017-10-20T21:28:53Z",
    "labels": [
      "question",
      "help wanted"
    ],
    "url": "https://github.com/serverless/serverless/issues/4402",
    "body": "This is probably a super simple issue to be resolved, but I can't turn off SLS_DEBUG to save my life. I turned it on by submitting `export SLS_DEBUG=*` via terminal. I have tried to use `export SLS_DEBUG=false` but that doesn't prevent the logs from continuing. How do I resolve this? It has to be easier than the amount of time I have spent trying to figure this out.\r\n\r\nThanks.",
    "comments_url": "https://api.github.com/repos/serverless/serverless/issues/4402/comments",
    "author": "chasebleyl",
    "comments": [
      {
        "user": "RafalWilinski",
        "created_at": "2017-10-20T21:20:11Z",
        "body": "@chasebleyl I guess `unset` is the command that you're looking for \ud83d\ude04 \r\n\r\nTry this:\r\n```bash\r\nunset SLS_DEBUG\r\n```\r\n\r\nLet me know if it helps."
      }
    ]
  },
  {
    "number": 4368,
    "title": "  Serverless Error ---------------------------------------        An error occurred while provisioning your stack: S3BucketServerlesschatbotdevuploadsyourinitialshere      - serverless-chatbot-dev-uploads-your-initials-here      already exists.",
    "created_at": "2017-10-09T17:02:48Z",
    "closed_at": "2017-10-09T19:32:17Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/serverless/serverless/issues/4368",
    "body": "I've got this issue:\r\n  Serverless Error ---------------------------------------\r\n \r\n     An error occurred while provisioning your stack: S3BucketServerlesschatbotdevuploadsyourinitialshere\r\n     - serverless-chatbot-dev-uploads-your-initials-here\r\n     already exists.\r\n\r\nAny ideas? ",
    "comments_url": "https://api.github.com/repos/serverless/serverless/issues/4368/comments",
    "author": "rachelwu11",
    "comments": [
      {
        "user": "RafalWilinski",
        "created_at": "2017-10-09T18:47:48Z",
        "body": "Hi @rachelwu11 \r\n\r\nHave you tried renaming your stack and running `serverless deploy` again?"
      },
      {
        "user": "rachelwu11",
        "created_at": "2017-10-09T19:22:50Z",
        "body": "Hey @RafalWilinski , @DavidWells he helped me out. If the custom variable was called uploadBucket, then there was a conflict. so i've renamed it to be bucket, and it worked. Thanks a lot. :)\r\n      \r\n     UPLOAD_BUCKET: ${self:custom.bucket\r\n      bucket: ${self:service}-${self:provider.stage}-uploads-xw"
      }
    ]
  },
  {
    "number": 3323,
    "title": "Having an event only for prod stage",
    "created_at": "2017-03-03T06:42:51Z",
    "closed_at": "2017-03-16T06:58:36Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/serverless/serverless/issues/3323",
    "body": "# This is a Bug Report\r\n\r\n## Description\r\n\r\nI'm would like to use a schedule event on a function but only on the production stage. I'm trying to do something like that : \r\n\r\n    functions:\r\n        myfunction:\r\n            handler: myfunction.handler\r\n                stage: production\r\n                    events:\r\n                         - schedule: cron(0 15 * * ? *)\r\n\r\nIs there a way to do that ? Thanks a lot \r\n\r\n## Additional Data\r\n\r\n* ***Serverless Framework Version you're using***: 1.5.1\r\n* ***Operating System***: OS X 10.12\r\n",
    "comments_url": "https://api.github.com/repos/serverless/serverless/issues/3323/comments",
    "author": "chrishiste",
    "comments": [
      {
        "user": "andymac4182",
        "created_at": "2017-03-03T10:51:03Z",
        "body": "I believe you could use the variable system to load nothing into events for every stage other than production."
      },
      {
        "user": "chrishiste",
        "created_at": "2017-03-13T00:23:54Z",
        "body": "Hello again, I've been trying to use the variable system but even though it seems really powerful I couldn't find a way to do what you said. It seems that there is no way to do an if statement like : \r\nif ${opt:stage} == 'prod', I could also do it from JS and references it like they show in the doc but then I don't know which stage I'm deploying too. Did you already do something similar ? Sorry, I'm fairly new to Serverless "
      },
      {
        "user": "buggy",
        "created_at": "2017-03-13T08:02:20Z",
        "body": "@chrishiste I don't have time to test it at the moment but it will look something like:\r\n\r\n```yaml\r\ncustom:\r\n  stage: \"${opt:stage, self:provider.stage}\"\r\n  prod:\r\n    schedule:\r\n       - schedule: cron(0 15 * * ? *)\r\n  dev:\r\n    schedule:\r\n\r\nfunctions:\r\n    myfunction:\r\n        handler: myfunction.handler\r\n            stage: production\r\n                events: ${self:custom.${self:custom.stage}.schedule}        \r\n```\r\n\r\nThat way it loads `custom.prod.schedule` when you're on deploying to production and `custom.dev.schedule` when you're deploying to development."
      },
      {
        "user": "chrishiste",
        "created_at": "2017-03-16T06:58:06Z",
        "body": "THANKS A LOT! I didn't really understood the variable system until now\r\n\r\nIf anyone is looking to do something similar that's how I did it : \r\n\r\n```yaml\r\ncustom:\r\n  stage: \"${opt:stage, self:provider.stage}\"\r\n    prod:\r\n      schedule: cron(0 15 * * ? *)\r\n   dev:\r\n      schedule:\r\n\r\nfunctions:\r\n   myFunction:\r\n     handler: myFunction.handler\r\n     events:\r\n       - schedule: ${self:custom.${self:custom.stage}.schedule}\r\n```\r\n\r\nJust make sure you pass \"--stage\" and not \"-s\"\r\n"
      },
      {
        "user": "oligirling",
        "created_at": "2019-06-10T18:52:54Z",
        "body": "Could also use `enabled` to turn them on or off for different stages\r\n\r\n```\r\nfunctions:\r\n  fetch:\r\n    handler: handler.fetch\r\n    events:\r\n    - schedule:\r\n        rate: rate(1 minute)\r\n        enabled: ${self:custom.scheduleEnabled.${self:provider.stage}}\r\n\r\ncustom:\r\n  scheduleEnabled:\r\n    prod: true\r\n    dev: false\r\n    local: false\r\n```"
      },
      {
        "user": "juanilarregui",
        "created_at": "2019-07-15T04:54:06Z",
        "body": "> Could also use `enabled` to turn them on or off for different stages\r\n> \r\n> ```\r\n> functions:\r\n>   fetch:\r\n>     handler: handler.fetch\r\n>     events:\r\n>     - schedule:\r\n>         rate: rate(1 minute)\r\n>         enabled: ${self:custom.scheduleEnabled.${self:provider.stage}}\r\n> \r\n> custom:\r\n>   scheduleEnabled:\r\n>     prod: true\r\n>     dev: false\r\n>     local: false\r\n> ```\r\n\r\nIs this confirmed to work, with booleans? Because it seems that booleans are not allowed, giving `Trying to populate non string value into a string...` error."
      },
      {
        "user": "arliber",
        "created_at": "2019-11-24T08:41:17Z",
        "body": "@juanilarregui I have a similar issue when I write `enabled: false` it does deploy but I can see that the CloudWatch event is still enabled in the AWS Console. \r\n\r\nHave you found a way to make it work?"
      },
      {
        "user": "oligirling",
        "created_at": "2019-11-26T10:33:36Z",
        "body": "I dont seem to get any issues with the code I posted above. Could you post a copy of what your doing?"
      },
      {
        "user": "steadweb",
        "created_at": "2020-04-15T11:01:53Z",
        "body": "> Could also use `enabled` to turn them on or off for different stages\r\n> \r\n> ```\r\n> functions:\r\n>   fetch:\r\n>     handler: handler.fetch\r\n>     events:\r\n>     - schedule:\r\n>         rate: rate(1 minute)\r\n>         enabled: ${self:custom.scheduleEnabled.${self:provider.stage}}\r\n> \r\n> custom:\r\n>   scheduleEnabled:\r\n>     prod: true\r\n>     dev: false\r\n>     local: false\r\n> ```\r\n\r\nThis doesn't disable the schedule, it deploys though."
      }
    ]
  },
  {
    "number": 8457,
    "title": "Refactor: Clear \"that = this\" pattern from codebase",
    "created_at": "2020-10-30T11:31:13Z",
    "closed_at": "2020-11-02T10:29:40Z",
    "labels": [
      "good first issue",
      "refactor",
      "help wanted"
    ],
    "url": "https://github.com/serverless/serverless/issues/8457",
    "body": "<!-- \u26a0\ufe0f\u26a0\ufe0f Acknowledge ALL below remarks -->\r\n<!-- \u26a0\ufe0f\u26a0\ufe0f Request may not be processed if it doesn't meet outlined criteria -->\r\n\r\n<!-- \u26a0\ufe0f\u26a0\ufe0f Search existing issues to avoid creating duplicates  -->\r\n<!-- \u26a0\ufe0f\u26a0\ufe0f Plugin enhancements should be proposed at plugin repository, not here -->\r\n\r\n<!-- \u26a0\ufe0f\u26a0\ufe0f Answer ALL required questions below -->\r\n\r\n<!--\r\nQ1: Describe the problem (use case) that needs to be solved\r\n-->\r\n\r\n### Use case description\r\n\r\n`that = this` Resembles questionable and heavily outdated pattern.\r\n\r\nIt was used before we had arrow functions, to maintain access to `this` across nested function references, with arrow functions `this` is shared and cases can be referenced directly\r\n\r\n<!--\r\nQ2: Propose solution (e.g. provide configuration example)\r\n\r\nNote: This is optional, remove this section if you do not wish to propose anything at this point\r\n-->\r\n\r\n### Proposed solution\r\n\r\nSimply remove `const that = this` and replace all `that` references with `this` (mind eventual non-arrow function expressions which rely on top level `that` if there are any upgrade them to arrow functions)\r\n",
    "comments_url": "https://api.github.com/repos/serverless/serverless/issues/8457/comments",
    "author": "medikoo",
    "comments": [
      {
        "user": "medikoo",
        "created_at": "2020-11-02T13:21:57Z",
        "body": "@MatthewBerk it's simply about searching for `that = this` and clearing this out.\r\n\r\nAnyway it was already perfectly addressed by @telenord you may check the PR"
      }
    ]
  },
  {
    "number": 5942,
    "title": "Custom authorizer for websockets connection not passing claims to next function and calling $disconnect rather than $connect",
    "created_at": "2019-03-20T19:23:17Z",
    "closed_at": "2019-05-21T23:12:18Z",
    "labels": [
      "enhancement",
      "help wanted",
      "cat/lambda"
    ],
    "url": "https://github.com/serverless/serverless/issues/5942",
    "body": "# This is a Bug Report\r\n\r\n## Description\r\n\r\nI have a custom authoriser function in front of a websocket connection function, which is successful but does not pass or trigger the actual connection function it sits in front of.\r\n\r\nI have tried to return the value, resolve it as a promise or, what I'd expect to work, pass it as a value in the callback.\r\n\r\n**serverless.yml**\r\n\r\n```\r\ncustomAuthoriser:\r\n  handler: handler.customAuthoriser\r\n  cors: true\r\nconnectionHandler:\r\n  handler: handler.connectionHandler\r\n  events:\r\n    - websocket:\r\n        route: $connect\r\n        authorizer:\r\n          name: customAuthoriser\r\n          identitySource:\r\n            - 'route.request.querystring.Authorizer'\r\n    - websocket:\r\n        route: $disconnect\r\n```\r\n\r\n**connectionHandler.js**\r\n\r\n```\r\nexport async function customAuthoriser(event, context, callback) {\r\n  console.log('enter customAuthoriser');\r\n  let someErr;\r\n  let claims;\r\n\r\n  return new Promise((resolve, reject) => {\r\n\r\n      // do some stuff to get claims\r\n\r\n      if (someErr) {\r\n          reject(someErr);\r\n      }\r\n\r\n      // doesn't work\r\n      callback(null, claims);\r\n\r\n      // doesn't work\r\n      resolve(claims);\r\n\r\n      // also doesn't work\r\n      return claims;\r\n  });\r\n}\r\n```\r\n\r\n**connectionHandler.js**\r\n\r\n```\r\n// this never gets hit\r\nexport async function connectionHandler(event, context, callback) {\r\n  console.log('enter connectionHandler');\r\n\r\n  // if it ever gets called, I'd expect this to have a value\r\n  console.log(event.requestContext.authorizer.claims.sub);\r\n}\r\n```\r\n\r\n**client.ts**\r\n\r\n```\r\nimport {webSocket, WebSocketSubjectConfig} from 'rxjs/webSocket';\r\n\r\nprivate subject: Subject;\r\n\r\nprivate setupWebsockets(token: string) {\r\n  const subjectConfig: WebSocketSubjectConfig<any> = {\r\n    url: `wss://abcd1234.execute-api.ap-southeast-1.amazonaws.com/pre?Authorizer=${token}`\r\n  };\r\n  this.subject = webSocket(subjectConfig);\r\n\r\n  this.subject.subscribe(\r\n    (msg) => console.log('message received: ' + msg),\r\n    (err) => console.error(err),\r\n    () => console.log('complete')\r\n  );\r\n}\r\n```\r\n\r\n## Additional Data\r\n\r\n* ***Serverless Framework Version you're using***: 1.39.1\r\n* ***Operating System***: N/A\r\n* ***Stack Trace***: N/A\r\n* ***Provider Error messages***: N/A",
    "comments_url": "https://api.github.com/repos/serverless/serverless/issues/5942/comments",
    "author": "mrowles",
    "comments": [
      {
        "user": "mrowles",
        "created_at": "2019-03-25T18:57:59Z",
        "body": "@eahefnawy Yep! Which isn't/wasn't supported for Websockets out of the box as of 1.39.1. So I rolled my own custom Cognito one. However, not sure if it matters what the auth is, looks like this might be a problem beyond that."
      },
      {
        "user": "mrowles",
        "created_at": "2019-04-02T07:00:32Z",
        "body": "I've updated, this is actually triggering (as of `serverless@1.40.0`) but still no claims passed over.\r\n\r\nI've just realised that it seems as though my client code is actually triggering the `$disconnect` routeKey for some weird reason...I don't even know how, because you're not allowed to specify a customAuthoriser on the `$disconnect` path (which I haven't):\r\n\r\n**Lambda Request Context**\r\n```\r\nrequestContext: { routeKey: '$disconnect' }\r\n```"
      },
      {
        "user": "mrowles",
        "created_at": "2019-04-03T19:02:41Z",
        "body": "I have even tried separating the `$connect` & `$disconnect` handlers and it keeps sending it to the $disconnect:\r\n\r\n```\r\n  connectHandler:\r\n    handler: handler.connectHandler\r\n    events:\r\n      - websocket:\r\n          route: $connect\r\n          authorizer:\r\n            name: customAuthoriser\r\n            identitySource:\r\n              - 'route.request.querystring.Authorizer'\r\n  disconnectHandler:\r\n    handler: handler.disconnectHandler\r\n    events:\r\n      - websocket:\r\n          route: $disconnect\r\n```\r\n\r\nI have even tried a different client websocket library to no avail:\r\n\r\n```\r\nimport {ClientOptions, SubscriptionClient} from 'subscriptions-transport-ws';\r\nimport {WebSocketLink} from 'apollo-link-ws';\r\n\r\nprivate setupWebsockets(token: string) {\r\n    const url = `wss://abcd1234.execute-api.ap-southeast-2.amazonaws.com/pre?Authorizer=${token}`;\r\n    const subscriptionClientOptions: ClientOptions = {\r\n        reconnect: true\r\n    };\r\n\r\n    const subscriptionClient = new SubscriptionClient(url, subscriptionClientOptions);\r\n\r\n    const link = new WebSocketLink(subscriptionClient);\r\n}\r\n```\r\n\r\nI'm either doing something wrong, or this is a genuine bug."
      },
      {
        "user": "Denjul",
        "created_at": "2019-04-23T07:36:09Z",
        "body": "> I have even tried separating the `$connect` & `$disconnect` handlers and it keeps sending it to the $disconnect:\r\n\r\n\r\nWe have the same result as you, for some reason a Custom Authoriser trigger Disconnect rather then Connect. We also tried to split connect and disconnect to separate handlers but to no avail, it still trigger disconnect.\r\n\r\n**UPDATE:**\r\nIt was our fault. When i rewrote our custom authorizer to async await rather than promise().then() it started to work. The fault was probably something like the lambda terminated before the callback(null, policy) had finnished."
      },
      {
        "user": "mrowles",
        "created_at": "2019-05-19T08:02:55Z",
        "body": "@Denjul I have tried everything, including switching to async await - still bloody called disconnect \ud83d\ude05. Are you just doing a `callback(null, claims)` or something else? I can confirm that the lambda is running through it's entirety correctly (with a return statement), but just passing onto `$disconnect`"
      },
      {
        "user": "Denjul",
        "created_at": "2019-05-21T12:10:27Z",
        "body": "@mrowles We do:\r\n```\r\n      callback(null,\r\n        generateAllow(\r\n          authClaims.sub,\r\n          methodArn,\r\n          {\r\n            organizationId,\r\n            profileId: authClaims.sub,\r\n          }\r\n        ));\r\n```\r\nAnd methodArn we get from `  const {\r\n    methodArn\r\n  } = event;`  (event from lambda)\r\n\r\nYou can skip the `          {\r\n            organizationId,\r\n            profileId: authClaims.sub,\r\n          }` in generateAllow(), It's data we want when that socket connection trigger other lambdas.\r\n\r\n```\r\nconst generateAllow = (principalId, resource, claims) => generatePolicy(\r\n  principalId,\r\n  'Allow',\r\n  resource,\r\n  claims\r\n);\r\n\r\nconst generatePolicy = (principalId, effect, resource, claims) => {\r\n  const authResponse = {};\r\n  authResponse.principalId = principalId;\r\n  if (effect && resource) {\r\n    const policyDocument = {};\r\n    policyDocument.Version = '2012-10-17'; // default version\r\n    policyDocument.Statement = [];\r\n    const statementOne = {};\r\n    statementOne.Action = 'execute-api:Invoke'; // default action\r\n    statementOne.Effect = effect;\r\n    statementOne.Resource = resource;\r\n    policyDocument.Statement[0] = statementOne;\r\n    authResponse.policyDocument = policyDocument;\r\n  }\r\n  authResponse.context = claims;\r\n  return authResponse;\r\n};\r\n\r\n\r\n```\r\n\r\nHope it solves your problem"
      },
      {
        "user": "mrowles",
        "created_at": "2019-05-21T23:12:23Z",
        "body": "This was awesome @Denjul! I was missing the policy effect being passed back. Thanks for the assistance :)"
      }
    ]
  },
  {
    "number": 5664,
    "title": "Bug: Rollback fails due to timestamp parsing error",
    "created_at": "2019-01-08T16:09:45Z",
    "closed_at": "2019-01-28T11:30:57Z",
    "labels": [
      "bug",
      "help wanted",
      "cat/deployment"
    ],
    "url": "https://github.com/serverless/serverless/issues/5664",
    "body": "# This is a Bug Report\r\n\r\n## Description\r\n\r\n* What went wrong?\r\nReceiving _Range Error: Invalid time value_ when trying to rollback (with correct timestamp).\r\nE.g. _sls rollback -t 1546961025152_\r\n\r\n* What did you expect should have happened?\r\nRollback should have been successful\r\nLooks like since this.options.timestamp is a string, the wrong constructor of Date is called, and it's expecting a date string.\r\nI was able to make this work by changing line 68 of _serverless\\lib\\plugins\\aws\\rollback\\index.js_ to\r\n\r\n      const date = new Date(Number(this.options.timestamp));\r\n\r\n* What was the config you used?\r\nAny, including the aws-java-gradle template\r\n\r\n* What stacktrace or error message from your provider did you see?\r\n  \r\nSimilar or dependent issues:\r\n\r\n## Additional Data\r\n\r\n* ***Serverless Framework Version you're using***: 1.35.1\r\n* ***Operating System***: Windows 10 Enterprise (10.0.17134)\r\n* ***Stack Trace***:\r\n\r\n      RangeError: Invalid time value\r\n          at Date.toISOString (<anonymous>)\r\n          at provider.request.then (C:\\Users\\<username>\\AppData\\Roaming\\npm\\node_modules\\serverless\\lib\\plugins\\aws\\rollback\\index.js:69:65)\r\n      From previous event:\r\n          at AwsRollback.setStackToUpdate (C:\\Users\\<username>\\AppData\\Roaming\\npm\\node_modules\\serverless\\lib\\plugins\\aws\\rollback\\index.js:59:8)\r\n      From previous event:\r\n          at Object.rollback:rollback [as hook] (C:\\Users\\<username>\\AppData\\Roaming\\npm\\node_modules\\serverless\\lib\\plugins\\aws\\rollback\\index.js:40:12)\r\n          at BbPromise.reduce (C:\\Users\\<username>\\AppData\\Roaming\\npm\\node_modules\\serverless\\lib\\classes\\PluginManager.js:391:55)\r\n      From previous event:\r\n          at PluginManager.invoke (C:\\Users\\<username>\\AppData\\Roaming\\npm\\node_modules\\serverless\\lib\\classes\\PluginManager.js:391:22)\r\n          at PluginManager.run (C:\\Users\\<username>\\AppData\\Roaming\\npm\\node_modules\\serverless\\lib\\classes\\PluginManager.js:422:17)\r\n          at variables.populateService.then.then (C:\\Users\\<username>\\AppData\\Roaming\\npm\\node_modules\\serverless\\lib\\Serverless.js:157:33)\r\n          at runCallback (timers.js:705:18)\r\n          at tryOnImmediate (timers.js:676:5)\r\n          at processImmediate (timers.js:658:5)\r\n          at process.topLevelDomainCallback (domain.js:120:23)\r\n      From previous event:\r\n          at Serverless.run (C:\\Users\\<username>\\AppData\\Roaming\\npm\\node_modules\\serverless\\lib\\Serverless.js:144:8)\r\n          at serverless.init.then (C:\\Users\\<username>\\AppData\\Roaming\\npm\\node_modules\\serverless\\bin\\serverless:44:28)\r\n\r\n* ***Provider Error messages***:\r\n",
    "comments_url": "https://api.github.com/repos/serverless/serverless/issues/5664/comments",
    "author": "ldani7492",
    "comments": [
      {
        "user": "luanmuniz",
        "created_at": "2019-01-16T12:55:52Z",
        "body": "@ldani7492 Can you check if the PR i've just created fix your issue? "
      }
    ]
  },
  {
    "number": 3696,
    "title": "CodeSHA256 is different from current CodeSHA256 in $LATEST",
    "created_at": "2017-05-26T19:56:47Z",
    "closed_at": "2017-05-29T06:41:19Z",
    "labels": [
      "bug",
      "help wanted"
    ],
    "url": "https://github.com/serverless/serverless/issues/3696",
    "body": "# This is a Bug Report\r\n\r\n## Description\r\n\r\nFor bug reports:\r\n* What went wrong?\r\n\r\nAfter upgrading to Serverless 1.14.0, I'm now getting:\r\n\r\n```\r\nServerless: Deployment failed!\r\n \r\n  Serverless Error ---------------------------------------\r\n \r\n     An error occurred while provisioning your stack: SaveAttachmentLambdaVersionXX\r\n     - CodeSHA256 (XX)\r\n     is different from current CodeSHA256 in $LATEST (XX).\r\n     Please try again with the CodeSHA256 in $LATEST..\r\n```\r\n\r\n* What did you expect should have happened?\r\n\r\nNew deployment should have succeeded\r\n\r\n* What was the config you used?\r\n\r\nDeploying to AWS. Using serverless-plugins-typescript to compile TS to a .build folder before deployment.\r\n\r\n* What stacktrace or error message from your provider did you see?\r\n\r\n```\r\nServerlessError: An error occurred while provisioning your stack: SaveSearchLambdaVersionXXX- CodeSHA256 (XXX) is different from current CodeSHA256 in $LATEST (XXX). Please try again with the CodeSHA256 in $LATEST..\r\n    at provider.request.then (/Users/cmmoyer/.nvm/v6.10.1/lib/node_modules/serverless/lib/plugins/aws/lib/monitorStack.js:109:33)\r\nFrom previous event:\r\n    at AwsDeploy.monitorStack (/Users/cmmoyer/.nvm/v6.10.1/lib/node_modules/serverless/lib/plugins/aws/lib/monitorStack.js:26:12)\r\n    at provider.request.then (/Users/cmmoyer/.nvm/v6.10.1/lib/node_modules/serverless/lib/plugins/aws/lib/updateStack.js:88:30)\r\nFrom previous event:\r\n    at AwsDeploy.update (/Users/cmmoyer/.nvm/v6.10.1/lib/node_modules/serverless/lib/plugins/aws/lib/updateStack.js:88:8)\r\nFrom previous event:\r\n    at AwsDeploy.BbPromise.bind.then (/Users/cmmoyer/.nvm/v6.10.1/lib/node_modules/serverless/lib/plugins/aws/lib/updateStack.js:105:12)\r\nFrom previous event:\r\n    at AwsDeploy.updateStack (/Users/cmmoyer/.nvm/v6.10.1/lib/node_modules/serverless/lib/plugins/aws/lib/updateStack.js:99:8)\r\nFrom previous event:\r\n    at Object.aws:deploy:deploy:updateStack [as hook] (/Users/cmmoyer/.nvm/v6.10.1/lib/node_modules/serverless/lib/plugins/aws/deploy/index.js:99:10)\r\n    at BbPromise.reduce (/Users/cmmoyer/.nvm/v6.10.1/lib/node_modules/serverless/lib/classes/PluginManager.js:234:55)\r\nFrom previous event:\r\n    at PluginManager.invoke (/Users/cmmoyer/.nvm/v6.10.1/lib/node_modules/serverless/lib/classes/PluginManager.js:234:22)\r\n    at PluginManager.spawn (/Users/cmmoyer/.nvm/v6.10.1/lib/node_modules/serverless/lib/classes/PluginManager.js:246:17)\r\n    at AwsDeploy.BbPromise.bind.then (/Users/cmmoyer/.nvm/v6.10.1/lib/node_modules/serverless/lib/plugins/aws/deploy/index.js:85:48)\r\nFrom previous event:\r\n    at Object.deploy:deploy [as hook] (/Users/cmmoyer/.nvm/v6.10.1/lib/node_modules/serverless/lib/plugins/aws/deploy/index.js:81:10)\r\n    at BbPromise.reduce (/Users/cmmoyer/.nvm/v6.10.1/lib/node_modules/serverless/lib/classes/PluginManager.js:234:55)\r\n    at runCallback (timers.js:666:20)\r\n    at tryOnImmediate (timers.js:639:5)\r\n    at processImmediate [as _immediateCallback] (timers.js:611:5)\r\nFrom previous event:\r\n    at PluginManager.invoke (/Users/cmmoyer/.nvm/v6.10.1/lib/node_modules/serverless/lib/classes/PluginManager.js:234:22)\r\n    at PluginManager.run (/Users/cmmoyer/.nvm/v6.10.1/lib/node_modules/serverless/lib/classes/PluginManager.js:253:17)\r\n    at variables.populateService.then (/Users/cmmoyer/.nvm/v6.10.1/lib/node_modules/serverless/lib/Serverless.js:100:33)\r\nFrom previous event:\r\n    at Serverless.run (/Users/cmmoyer/.nvm/v6.10.1/lib/node_modules/serverless/lib/Serverless.js:87:74)\r\n    at serverless.init.then (/Users/cmmoyer/.nvm/v6.10.1/lib/node_modules/serverless/bin/serverless:23:50)\r\n```\r\n\r\n\r\n## Additional Data\r\n\r\n* ***Serverless Framework Version you're using***: 1.14.0\r\n* ***Operating System***: darwin (macOS 10.12.4)\r\n* ***Stack Trace***: See above\r\n* ***Provider Error messages***: CodeSHA256 (XX)\r\n     is different from current CodeSHA256 in $LATEST (XX)\r\n* ***Node Version***: v6.10.1\r\n",
    "comments_url": "https://api.github.com/repos/serverless/serverless/issues/3696/comments",
    "author": "kopertop",
    "comments": [
      {
        "user": "scott-martin",
        "created_at": "2017-05-26T20:03:30Z",
        "body": "Also just started seeing this. I'm on serverless 1.13.2, using the serverless webpack plugin also."
      },
      {
        "user": "scott-martin",
        "created_at": "2017-05-26T20:23:03Z",
        "body": "Upgrade to 1.14 did not fix it.\r\nDowngrade down to 1.11 also did not fix it."
      },
      {
        "user": "ncloward",
        "created_at": "2017-05-26T20:24:48Z",
        "body": "Started seeing this as well...  serverless 1.14.0, also using `serverless-webpack`.  I see the same error in the CloudFormation stack event:\r\n```\r\nCodeSHA256 (xx) is different from current CodeSHA256 in $LATEST (xx). Please try again with the CodeSHA256 in $LATEST.\r\n```"
      },
      {
        "user": "evaneaston",
        "created_at": "2017-06-06T14:59:44Z",
        "body": "FWIW, we've been seeing this failure a lot more frequently over the past several days.  We're on 1.5 right now and not able to move up to latest quite yet.  As others have said, retrying once or twice takes care of it."
      },
      {
        "user": "thomaswmanion",
        "created_at": "2017-08-24T19:55:07Z",
        "body": "Did anyone actually figure out what the problem generally seems to be when this error occurs?\r\n\r\nIt's hard to believe that AWS has some batch job that runs once a day that magically fixes all the SHA problems. Maybe they do?"
      },
      {
        "user": "thomaswmanion",
        "created_at": "2017-08-24T21:49:59Z",
        "body": "Adding `versionFunctions: false` to the provider property of serverless.yml is a possible workaround."
      },
      {
        "user": "jedkcanderson",
        "created_at": "2018-09-11T16:10:20Z",
        "body": "I just ran into this myself because I we had to workaround permissions issues in the built zip by unzipping, chmodding, and then rezipping.  I created a script to update the SHAs in the json files, the primary guts of which are:\r\n\r\n```\r\n# Fix perms in built zip\r\nmkdir package-temp\r\nmkdir deploy-temp\r\nunzip -d package-temp/ .serverless/group-api.zip\r\nrm .serverless/group-api.zip\r\ncp .serverless/* deploy-temp/\r\nchmod o+r package-temp/*\r\nzip -j deploy-temp/group-api.zip package-temp/*\r\n\r\n# Update SHA hash in json files\r\nsha=$(openssl dgst -sha256 -binary deploy-temp/group-api.zip | openssl enc -base64)\r\necho CodeSHA256 is ${sha}\r\nsed -i \"s/\\\"CodeSha256\\\": \\\".*\\\"/\\\"CodeSha256\\\": \\\"${sha}\\\"/g\" deploy-temp/*.json\r\n\r\n# Deploy fixed zip/json files\r\n./node_modules/.bin/serverless deploy --package deploy-temp\r\n```"
      },
      {
        "user": "madguy02",
        "created_at": "2019-08-24T09:46:13Z",
        "body": "I have also been hitting this issue a lot more frequently , but updating the stack does not seem to fix it, versionFunction: false does not allow you to update your lambda functions. Any solutions ?"
      },
      {
        "user": "unfor19",
        "created_at": "2019-11-28T01:56:44Z",
        "body": "For me, it happened because I used the same filename in `artifact` for two functions\r\nSo I renamed the ZIP files ... and now it works\r\n\r\nThe issue:\r\n```\r\nfunctions:\r\n  statusBadge:\r\n    handler: index.handler\r\n    package:\r\n      artifact: ./services/commit-badges/dist/dist.zip\r\n...\r\n\r\nfunctions:\r\n  statusBadge:\r\n    handler: index.handler\r\n    package:\r\n      artifact: ./services/status-badges/dist/dist.zip\r\n```\r\n\r\nSolution:\r\n```\r\nfunctions:\r\n  statusBadge:\r\n    handler: index.handler\r\n    package:\r\n      artifact: ./services/commit-badges/dist/dist_commit_badges.zip\r\n...\r\n\r\nfunctions:\r\n  statusBadge:\r\n    handler: index.handler\r\n    package:\r\n      artifact: ./services/status-badges/dist/dist_status_badges.zip\r\n```"
      },
      {
        "user": "jsnanigans",
        "created_at": "2020-11-26T11:23:42Z",
        "body": "I found a solution by updating the permissions in was IAM:\r\n\r\n### Debugging:\r\nWhen running the deploy command add the `--verbose` option, this gave me this:\r\n```\r\nCloudFormation - CREATE_FAILED - AWS::Lambda::Version - XXX\r\n```\r\n\r\n### Solution:\r\nIn IAM I gave my Policy that is attached to the user that is authenticated with the `aws configure` command full access to Lambda. I would absolutely not advise you to do the same if this is production code, instead, you should find the specific Access setting that is needed, I think it's in `Permissions Management` somewhere.\r\nNow that line has changed to:\r\n```\r\nCloudFormation - CREATE_COMPLETE - AWS::Lambda::Version - XXX\r\n```"
      },
      {
        "user": "corydorning53",
        "created_at": "2020-12-04T01:33:18Z",
        "body": "I get this error when trying to overwrite the serverless generated zip files in a separate pipeline job (due to lack of immutability in serverless [see #4715]). anyone solved for this?\r\n\r\nI package my functions individually so I can't specify the artifact via `--artifact`"
      },
      {
        "user": "hardik-muchhadiya",
        "created_at": "2022-11-02T07:14:31Z",
        "body": "give zip file name different for lambda function . issue will  fix .\r\n"
      },
      {
        "user": "appetiser-apps-daryl-teo",
        "created_at": "2023-03-23T13:05:42Z",
        "body": "Having encountered this with my own local plugin - the issue was that SLS was doing a SHA on the old artifact prior to the build, which would then generate a new artifact with a different SHA when uploaded.\r\n\r\nUsing the lifecycle hook `package:init` instead of `package:compileFunctions` fixed the issue for me."
      }
    ]
  }
]