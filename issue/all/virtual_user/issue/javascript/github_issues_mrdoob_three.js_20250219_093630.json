[
  {
    "number": 27985,
    "title": "BatchedMesh: `deleteGeometry` - how to re-activate?",
    "created_at": "2024-03-24T14:56:28Z",
    "closed_at": "2024-03-26T13:34:38Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/27985",
    "body": "### Description\r\n\r\nWhen I call `deleteGeometry` the instance is marked as inactive\r\nBut how can I use this already allocated space in the buffers again? \r\n- `addGeometry` will not re-use available space ad the moment\r\n- calling `setGeometry` will not activate the instance again\r\n\r\n### Solution\r\nKeep track of freed space / search all inactive holes and try to re-use it when calling `addGeometry`\r\n\r\n### Alternatives\r\n- User code keeps track of freed space and `setGeometry` will also set `active[index] true` \r\n- `setVisibleAt` also sets `active` to true again\r\n- add `setActiveAt` + an API to query available space at index x (could be a generator method or some mechanism to prevent accidental mutation of internal state)\r\n\r\n### Additional context\r\n\r\n_No response_",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/27985/comments",
    "author": "marwie",
    "comments": [
      {
        "user": "gkjohnson",
        "created_at": "2024-03-25T06:54:40Z",
        "body": "This was mentioned in #27897 but if you want to show the geometry again why are you using `deleteGeometry`? In the future the \"active\" state should be used in the \"optimize\" function to identify and compress sections of the geometry buffers that are no longer in use.\r\n\r\nI know I mention in the other issue that it might be okay if it's set to true but realistically if the geometry has been \"optimized\" it will not be possible to set the geometry visible again and the given Id should be considered inaccessible if the geometry has been \"deleted\". In the long run applications should not be using \"delete\" if they want to use the geometry id again."
      },
      {
        "user": "marwie",
        "created_at": "2024-03-25T13:25:53Z",
        "body": "But couldn't the state `active=false` still be used for optimization if/when setGeomtry sets state to true again if we agree on that `setGeometry` effectively communicates an intention of this instance being active / the instance being actively used?\r\nI mean: what's the reason for *not* being able to re-activate an instance? If\r\n\r\nRight now I think due to the lack of a way to optimize the buffers maybe there shouldnt be no deleteGeometry call at all (or I shouldn't use it at all) since it does just punch holes in the buffers that can not be re-used - instead I should just change it to `setVisible(false)` and keep track of \"available space\" (I already do that by now)\r\n\r\nRegarding optimization a bit offtopic maybe:\r\nI'd also be curious how to deal with changed IDs? Would `addGeometry` return an handle/id that can still be used after optimization (because BatchedMesh has a mapping internally of `geometryId <> index`) ?"
      },
      {
        "user": "gkjohnson",
        "created_at": "2024-03-25T14:56:16Z",
        "body": "> But couldn't the state active=false still be used for optimization if/when setGeomtry sets state to true again\r\n\r\nIt's no more optimized than just setting visible to false. Again, I'm still not understanding why you're using deleteGeometry instead of setVisible in this case if you need to re-enable it.\r\n\r\n> if we agree on that setGeometry effectively communicates an intention of this instance being active / the instance being actively used?\r\n\r\nOnce the geometry has been \"compressed\" (ie the active geometry shifted to take the space used by the inactive geometry) then no, that id will not be able to be used anymore and it's likely the functions should throw an error if a now-deleted id is used. It would be confusing to differentiate between deleted-but-still-present and deleted-forever ids.\r\n\r\n> Right now I think due to the lack of a way to optimize the buffers maybe there shouldnt be no deleteGeometry call at all\r\n\r\nI agree that the function doesn't have a lot of value over setVisibleAt, at the moment, but we shouldn't encourage people to use it in an unintended way. If anything the function should just be commented out and removed from the API until someone implements an \"optimize\" function.\r\n\r\n> I'd also be curious how to deal with changed IDs? Would addGeometry return an handle/id that can still be used after optimization (because BatchedMesh has a mapping internally of geometryId <> index) ?\r\n\r\nYes. Part of the \"optimize\" step needs to involve remapping ids to the updated geometry indices and fixes the triangle and vertex ranges."
      },
      {
        "user": "marwie",
        "created_at": "2024-03-25T15:06:34Z",
        "body": "I have both cases where instances can be deleted or just be hidden. \r\nI'll change my code to just use visible for now - no problem. \r\n\r\n> Once the geometry has been \"compressed\" (ie the active geometry shifted to take the space used by the inactive geometry) then no, that id will not be able to be used anymore and it's likely the functions should throw an error if a now-deleted id is used. It would be confusing to differentiate between deleted-but-still-present and deleted-forever ids.\r\n\r\nHow am I then able to get the ids/indices for already added instances if the previously returned instance id is now invalid? I'm talking about cases where we have `active [true, true, false, true]` and `addGeometry` returned ids for `[0, 1, 2, 3]` - when I now call optimize the array becomes `[true, true, true]` and suddenly ID 3 is invalid even tho it wasn't deleted (?) - am I understanding this right? \r\n\r\nBut perhaps the `addGeometry` would in this case not directly return the index in the internal array but another identifier that stays valid. \r\n\r\n> If anything the function should just be commented out and removed from the API until someone implements an \"optimize\" function.\r\n\r\nThat was what I meant with `maybe there shouldnt be no deleteGeometry call at all` since it cannot be used in a meaningful way right now."
      },
      {
        "user": "gkjohnson",
        "created_at": "2024-03-25T15:24:33Z",
        "body": "> But perhaps the addGeometry would in this case not directly return the index in the internal array but another identifier that stays valid.\r\n\r\nThis is what I intended above. If Id 2 is deleted, then geometry 3 is shifted to the left into position 2, and id 3 now refers to the geometry in the position that was for id 2. Ids for undeleted geometry should not become invalid. This mapping needs to be retained internally:\r\n\r\n> Yes. Part of the \"optimize\" step needs to involve remapping ids to the updated geometry indices and fixes the triangle and vertex ranges.\r\n\r\n\r\n"
      },
      {
        "user": "gkjohnson",
        "created_at": "2024-03-25T15:29:04Z",
        "body": "> Should I update the PR to comment out deleteGeometry instead?\r\n\r\nI'm fine with this - it should be removed from the docs, too, which may be the more important change."
      }
    ]
  },
  {
    "number": 20294,
    "title": "OrbitControls: disable in mousedown, no events triggered in mousemove",
    "created_at": "2020-09-08T17:41:27Z",
    "closed_at": "2020-09-08T17:53:06Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/20294",
    "body": "In r120, disabling orbit controls on mousedown no longer triggers mousemove events when dragging. To reproduce add the following code to misc_controls_orbit.html. This worked in the last several releases. Thanks.\r\n\r\n```\r\nrenderer.domElement.addEventListener('mousemove', ()=>{\r\n   console.log('mousemove');\r\n});\r\nrenderer.domElement.addEventListener('mousedown', (e)=>{\r\n   controls.enabled = false;\r\n});\r\nrenderer.domElement.addEventListener('mouseup', ()=>{\r\n   controls.enabled = true;\r\n});\t\t\r\n```\r\n\r\n\r\n\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/20294/comments",
    "author": "joshua-gould",
    "comments": [
      {
        "user": "Mugen87",
        "created_at": "2020-09-08T17:46:24Z",
        "body": "`OrbitControls` was moved to the Pointer Events API with `r120`. Please try to register your mouse event listeners on the respective counterparts (e.g.`pointerdown`, `pointermove` etc.)."
      }
    ]
  },
  {
    "number": 20058,
    "title": "GLTFLoader: Alpha mode should default to Blend when material color has transparency",
    "created_at": "2020-08-12T17:04:20Z",
    "closed_at": "2020-08-13T11:20:09Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/20058",
    "body": "##### Description of the problem\r\nSome software exports GLTFs without setting alpha mode, even in materials with transparency. Blender correctly renders these materials as transparent, but the GLTFLoader defaults to opaque even when an alpha < 1.0 is specified in the material.\r\n\r\n##### Suggested solution\r\nWhen alpha < 1.0, if no `alphaMode` is specified, default to `BLEND` rather than `OPAQUE`.",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/20058/comments",
    "author": "diegoescala",
    "comments": [
      {
        "user": "donmccurdy",
        "created_at": "2020-08-12T17:27:27Z",
        "body": "The glTF specification is pretty specific that when alphaMode=OPAQUE, any transparency in the baseColorTexture or baseColorFactor must be ignored by implementations. I think it would be necessary to report bugs to software exporting alpha < 1, without setting alpha mode. Do you have an example?"
      },
      {
        "user": "diegoescala",
        "created_at": "2020-08-12T17:32:36Z",
        "body": " Yes, OnShape does not appear to be setting the flag when exporting.\r\n"
      },
      {
        "user": "WestLangley",
        "created_at": "2020-08-12T18:11:23Z",
        "body": ">When alpha < 1.0, if no alphaMode is specified, default to BLEND rather than OPAQUE.\r\n\r\nAccording to glTF spec 2.0, the `alphaMode` property specifies how alpha is interpreted -- not the other way around.\r\n\r\nAlso, `alphaMode` is not required, and defaults to `OPAQUE`.\r\n"
      },
      {
        "user": "WestLangley",
        "created_at": "2020-08-12T18:51:01Z",
        "body": ">I fail to see the logic behind defaulting to opaque when a material is clearly transparent\r\n\r\nIt is not always so clear. Transparency can be set in the alpha channel of the texture. The loader is not expected to discern that."
      }
    ]
  },
  {
    "number": 19475,
    "title": "why  function intersectObject  deleted  \"if ( object.visible === false ) return;\"?",
    "created_at": "2020-05-27T09:38:41Z",
    "closed_at": "2020-05-27T10:19:35Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/19475",
    "body": "\tfunction intersectObject( object, raycaster, intersects, recursive ) {\r\n               \r\n\r\n>  if ( object.visible === false ) return;\r\n\r\n\t\tif ( object.layers.test( raycaster.layers ) ) {\r\n\r\n\t\t\tobject.raycast( raycaster, intersects );\r\n\r\n\t\t}\r\n\r\n\t\tif ( recursive === true ) {\r\n\r\n\t\t\tvar children = object.children;\r\n\r\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n........................................................................................................................................................................",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/19475/comments",
    "author": "Arkitoy",
    "comments": [
      {
        "user": "Mugen87",
        "created_at": "2020-05-27T09:54:22Z",
        "body": "This was discussed and decided here: #14700\r\n\r\n`Raycaster` no longer evaluates `Object3D.visible`. You now have to use layers to filter out unwanted objects."
      }
    ]
  },
  {
    "number": 19082,
    "title": "threejs.org broken for IE11",
    "created_at": "2020-04-08T10:38:57Z",
    "closed_at": "2020-04-08T11:03:38Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/19082",
    "body": "Hi,\r\n\r\nnot sure if this is the right place to post this issue. Feel free to point me to the correct place if not :)\r\n\r\nWhen opening the site, the layout is all over the place and the examples don't work at all.\r\nTested with IE11, version 11.0.9600.19650.\r\n\r\n\r\nCheers.\r\n\r\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/19082/comments",
    "author": "vector3",
    "comments": [
      {
        "user": "Mugen87",
        "created_at": "2020-04-08T10:52:25Z",
        "body": "Yes, the examples do not work in IE11 anymore since they are using ES6 modules now. The homepage itself uses the CSS grid property which is not fully supported by IE11."
      },
      {
        "user": "vector3",
        "created_at": "2020-04-08T11:01:00Z",
        "body": "Hm, ok. I used to open the examles page on ie11 just to validate that some functionality/rendering feature works correctly on that browser. I guess I have to find another way to quickly check then."
      },
      {
        "user": "Mugen87",
        "created_at": "2020-04-08T11:02:41Z",
        "body": "Yes, IE 11 support will not be added back. It's actually best to not use this browser anymore if possible."
      }
    ]
  },
  {
    "number": 13990,
    "title": "Is the behavior of CanvasRenderer and WebGLRenderer exactly the same except for performance?",
    "created_at": "2018-05-04T09:03:00Z",
    "closed_at": "2018-05-06T18:11:26Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/13990",
    "body": "I'm using three.js with nodejs to do server side rendering(without GPU), and what I want is to generate a thumbnail of a 3D mesh. \r\n\r\nRight now I can generate thumbnail using CanvasRenderer, but I'm wondering if the images rendered by these two methods are consistent? or if there is API supported by WebGLRenderer whereas isn't supported by CanvasRenderer?\r\n\r\nThanks and with best regards.",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/13990/comments",
    "author": "daveying",
    "comments": [
      {
        "user": "Mugen87",
        "created_at": "2018-05-04T09:22:37Z",
        "body": "> Right now I can generate thumbnail using CanvasRenderer, but I'm wondering if the images rendered by these two methods are consistent?\r\n\r\nNo, they are not. `CanvasRenderer` uses a CanvasRenderingContext2D wheres as `WebGLRenderer` uses `WebGLRenderingContext`. Since `CanvasRenderer` is unable to work with shaders, both renderers produce a different visual output."
      }
    ]
  },
  {
    "number": 12000,
    "title": "Status of Multiple Materials",
    "created_at": "2017-08-21T14:35:01Z",
    "closed_at": "2017-08-22T10:57:09Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/12000",
    "body": "I don't know if multiple materials is now supported in any way?\r\n\r\nMultiMaterial has been deprecated - but I cannot find any documentation or help on how to create a custom mesh (NOT a CUBE) with multiple materials - or how my faceVertexUvs structure has to look or how to get this working..\r\n\r\nAny help or links please?",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/12000/comments",
    "author": "cybafelo",
    "comments": [
      {
        "user": "imjasonmiller",
        "created_at": "2017-08-22T10:36:42Z",
        "body": "I might not understand correctly what you are trying to achieve, but supplying an array should work? Upon using `THREE.MultiMaterial` a warning should be logged to console, which reads:\r\n\r\n> THREE.MultiMaterial has been removed. Use an Array instead.\r\n\r\nExample:\r\n\r\n```\r\nconst geo = new THREE.BoxGeometry( 1, 1, 1 );\r\nconst mat = [\r\n    new THREE.MeshBasicMaterial({ color: 0xFF00FF }),\r\n    new THREE.MeshBasicMaterial({ color: 0x00FF00 }),\r\n    new THREE.MeshBasicMaterial({ color: 0xFF00FF }),\r\n    new THREE.MeshBasicMaterial({ color: 0x00FF00 }),\r\n    new THREE.MeshBasicMaterial({ color: 0xFF00FF }),\r\n    new THREE.MeshBasicMaterial({ color: 0x00FF00 }),\r\n];\r\nconst mesh = new THREE.Mesh( geo, mat ); \r\n```\r\n\r\nI'm using this for my own custom mesh."
      },
      {
        "user": "Mugen87",
        "created_at": "2017-08-22T10:57:08Z",
        "body": "As @imjasonmiller said, the only difference should be the usage of a plain array object instead of an instance of `THREE.MultiMaterial`.  The setup of material indices in the geometries has not changed."
      }
    ]
  },
  {
    "number": 9926,
    "title": "When calling .updateMatrixWorld,  .matrixWorldInverse not updated automatically, is this a bug?",
    "created_at": "2016-10-24T11:54:19Z",
    "closed_at": "2016-10-26T21:55:17Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/9926",
    "body": "##### Description of the problem\n\nAs title\n##### Three.js version\n- [x] r81\n  ##### Browser\n- [x] All of them\n  ##### OS\n- [x] All of them\n  ##### Hardware Requirements (graphics card, VR Device, ...)\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/9926/comments",
    "author": "ash0080",
    "comments": [
      {
        "user": "mrdoob",
        "created_at": "2016-10-24T18:29:26Z",
        "body": "Is not a bug. `matrixWorldInverse` is only updated at render time.\nMaybe it shouldn't be a public property...\n"
      },
      {
        "user": "ash0080",
        "created_at": "2016-10-25T06:07:28Z",
        "body": "hmm.. \nfirst of all, I am using a manually update renderer.\nThe problem I encountered was when I match a 2D position(in a 2D canvas) to the 3D space, the camera's matrixWorldInverse alway return the expected value in the \"next frame\" , so 2D position updating always one frame behind the 3D position updating, after enforcing .updateMatrixWorld, and .matrixWorldInverse.getInverse, seems everything fine.\n\nbut I am not sure this is the correct solution. If the matrixWorldInverse updated at the same time of rendering as you say, maybe update the 2D draw after new frame of rendering is the right way.\n\nbut if I move a camera, maybe updating the matrixWorld and matrixWorldInverse immediately is a more institutional design.\n\nAnyway, thank you for explaining my curious\n"
      },
      {
        "user": "mrdoob",
        "created_at": "2016-10-26T21:55:17Z",
        "body": "> after enforcing .updateMatrixWorld, and .matrixWorldInverse.getInverse, seems everything fine. but I am not sure this is the correct solution. \n\nI think that's the correct solution.\n"
      }
    ]
  },
  {
    "number": 7305,
    "title": "r72: MeshNormalMaterial and FlatShading",
    "created_at": "2015-10-07T18:20:03Z",
    "closed_at": "2018-02-10T15:46:33Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/7305",
    "body": "It looks like the `shading` parameter has been removed from MeshNormalMaterial in r72. I really liked the look of it and was wondering if there was some other way to accomplish it?\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/7305/comments",
    "author": "mikecao",
    "comments": [
      {
        "user": "WestLangley",
        "created_at": "2015-10-07T18:36:30Z",
        "body": "@mikecao Is your geometry `THREE.Geometry` or `THREE.BufferGeometry`?\n"
      },
      {
        "user": "WestLangley",
        "created_at": "2015-10-07T19:05:50Z",
        "body": "If your geometry is `THREE.Geometry` you can do something like this.\n\n``` javascript\ngeometry.computeFaceNormals(); // if it does not have them\n\nfor ( var i = 0; i < geometry.faces.length; i ++ ) {\n\n    geometry.faces[ i ].vertexNormals = []; // remove vertex normals\n\n}\n\ngeometry = new THREE.BufferGeometry().fromGeometry( geometry ); // will use face normals, since vertex normals are not present\n\nvar mesh = new THREE.Mesh( geometry, new THREE.MeshNormalMaterial() );\n```\n\n@mrdoob Perhaps a `computeFlatVertexNormals()` would be handy method to add. (Note, for indexed-BufferGeometry, such a method would have to restructure the geometry itself.)\n\n...or add to `ExplodeModifier` support for `BufferGeometry`.\n"
      },
      {
        "user": "Mugen87",
        "created_at": "2018-02-10T15:46:33Z",
        "body": "`Geometry.computeFlatVertexNormals()` was added with #9222"
      }
    ]
  },
  {
    "number": 5850,
    "title": "Loader files should be out of \"example\" folder",
    "created_at": "2015-01-03T23:16:45Z",
    "closed_at": "2015-01-04T02:25:54Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/5850",
    "body": "Hi all!\nI need to use the OBJMTLLoader.js file.\nI downloaded the .zip with the \"mrdoob-three.js-ca14c79\" folder inside, and, when I find the OBJMTLLoader.js file, it was into the \"example\" folder.\nWhy is that?\nWhen I download a library, the first step is \"remove the example folder\".\n\nShould this files be into the src or build library?!.\nI can't feel confident with this file if it is into the example folder. It sound like: \"This is just an example, don't use it\".\n\nShould I use the /examples/js/loaders/OBJMTLLoader.js on my website?\n\nSee you!\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/5850/comments",
    "author": "BrodaNoel",
    "comments": [
      {
        "user": "mrdoob",
        "created_at": "2015-01-04T00:49:57Z",
        "body": "If all the loaders where in src, three.min.js would end up being 2mb+.\n"
      }
    ]
  },
  {
    "number": 5637,
    "title": "Blender exporter can't export the material without scene selected",
    "created_at": "2014-11-15T17:47:35Z",
    "closed_at": "2014-11-17T06:29:41Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/5637",
    "body": "I just tried the blender exporter in dev branch. In the options, when checking the geometry and material with scene unchecked, then only the geometry was exported, and the material not. When i checked the geometry and material and scene, the whole scene was exported, including geometry and materials.\nMy expectation is:\nif (only geometry is checked) export geometry;\nif (geometry and material are checked) export mesh;\nif (geometry and material and scene are checked) export scene.\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/5637/comments",
    "author": "loliconer",
    "comments": [
      {
        "user": "repsac",
        "created_at": "2014-11-15T22:12:30Z",
        "body": "Trying using the `Face Materials` option when only exporting geometry.\n"
      },
      {
        "user": "loliconer",
        "created_at": "2014-11-16T03:29:31Z",
        "body": "Thanks, it does export materials when using <code>Face Materials</code>. But it only works for <code>Geometry</code>, not for <code>BufferGeometry</code>.\n"
      },
      {
        "user": "repsac",
        "created_at": "2014-11-16T20:31:46Z",
        "body": "To the best of my knowledge BufferGeometryLoader does not have materials support like the JSONLoader. I also believe that BufferGeometry does not support uv layers.\n\nI have considered making the material option a per-object property instead of one global setting for a whole scene. This would better support a scene that has a mix of nodes that do use face mapping and those that do not.\n"
      }
    ]
  },
  {
    "number": 4158,
    "title": "small typo in MorphAnimMesh",
    "created_at": "2013-11-30T23:56:21Z",
    "closed_at": "2013-12-03T01:56:43Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/4158",
    "body": "Noticed a small typo on line 79 in MorphAnimMesh.js. \n\n``` javascript\nif ( ! firstAnimation ) firstAnimation = label;\n```\n\nshould probably be\n\n``` javascript\nif ( ! geometry.firstAnimation ) firstAnimation = label;\n```\n\nI have been porting a lot of three.js code to dart lately, and every now and then I notice small typos in some files.  Until now I've just corrected them and forgot about it, but then I thought it would be better if I report it here. I understand that some dead code is placed there deliberately for debugging purposes, but there is some obvious out of place code as well.\n\nSomething else I've noticed is that you always declare every variable at the top of functions. In some of the bigger functions the top looks very cluttered. Isn't it better practice to declare them as locally as possible? \n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/4158/comments",
    "author": "ghost",
    "comments": [
      {
        "user": "mrdoob",
        "created_at": "2013-12-02T06:03:22Z",
        "body": "> Noticed a small typo on line 79 in MorphAnimMesh.js. \n> \n> ``` javascript\n> if ( ! firstAnimation ) firstAnimation = label;\n> ```\n> \n> should probably be\n> \n> ``` javascript\n> if ( ! geometry.firstAnimation ) firstAnimation = label;\n> ```\n\nUhm, no... I think that code is correct.\n\n> Something else I've noticed is that you always declare every variable at the top of functions. In some of the bigger functions the top looks very cluttered. Isn't it better practice to declare them as locally as possible?\n\nYes. That was a preemptive optimisation that ended up being not very scalable. I'm cleaning these from time to time.\n"
      }
    ]
  },
  {
    "number": 4028,
    "title": "Can I rely on scene.__objectsAdded & scene__objectsRemoved ?",
    "created_at": "2013-10-28T21:51:10Z",
    "closed_at": "2013-10-30T11:14:47Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/4028",
    "body": "I would like to rely on `scene.__objectsAdded` & `scene__objectsRemoved` (I'm creating a custom CSS renderer)\n\nHowever, I noticed that @mrdoob has mentioned he intends to remove these eventually (#3840):\n\n> @mrdoob: I actually want to remove __objects, __objectsAdded and __objectsRemoved altogether at some point. These were \"premature\" optimisations for WebGLRenderer. \n\n(scene.__objects was already removed). If `scene.__objectsAdded` & `scene__objectsRemoved`  are removed in the future, would they be replaced with an equivalent API? I don't mind relying on these if it just means a simple api-change later down the line... otherwise, if I rely on them now and they are removed completely later on, I could end up having to make a lot of changes to my code.  \n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/4028/comments",
    "author": "speigg",
    "comments": [
      {
        "user": "mrdoob",
        "created_at": "2013-10-28T23:07:08Z",
        "body": "Why do you need those? The current CSS3DRenderer managed to handle the add/remove changes using events.\n"
      },
      {
        "user": "speigg",
        "created_at": "2013-10-29T00:43:01Z",
        "body": "Hmmm.... I wanted to maintain several lists of objects used in certain ways in the scenegraph... but you're right, I can set these lists up in my constructors (or other methods) with the add/remove events. That's probably even more elegant anyways! My only other concern is you have also mentioned you weren't sure about keeping the event system. I sure hope you decide to keep it, I find it very useful! \n"
      },
      {
        "user": "mrdoob",
        "created_at": "2013-10-30T11:14:47Z",
        "body": "Yeah. It's indeed useful. But sometimes I wonder if a callback system would be more efficient.\n"
      },
      {
        "user": "speigg",
        "created_at": "2013-12-01T08:47:18Z",
        "body": "So I've tried to implement what I described in this thread using just the add/remove events as you suggested, and I've hit several stumbling blocks. The intention of the code below is to maintain a list of all the `<arbitrary THREE.Object3D subclass>` which are contained in a given scene:\n\n``` javascript\n\n  // in the  <arbitrary THREE.Object3D subclass> constructor\n\n  // if added to scene\n    this.addEventListener( 'added', function ( event ) {\n\n        var scene = this;\n        while ( scene.parent !== undefined ) {\n            scene = scene.parent;\n        }\n\n        if ( scene !== undefined && scene instanceof THREE.Scene )  {\n            scene.__mySpecialObjects = scene.__mySpecialObjects || []\n            if (scene.__mySpecialObjects.indexOf(this) === -1) scene.__mySpecialObjects.push(this)\n            this.__scene = scene\n        }  \n\n    });\n\n    // if removed from scene\n    this.addEventListener( 'removed', function ( event ) {\n\n        if (this.__scene) {\n            var i = this.__scene.__mySpecialObjects.indexOf(this)\n            if ( i !== -1 ) this.__scene.__mySpecialObjects.splice(i, 1)\n            this.__scene = null\n        }\n\n    });\n```\n\nHere are some of the issues: \n- I had to repeat some of the logic in Object3D in order to determine which (if any) scene the object was actually added to. This works but it breaks the DRY principle. \n- No way of knowing which scene the object was removed from unless I saved a reference to that scene in association with the object (in this case I stored a reference to the scene directly on the object in a `__scene` property). This also works but it feels sloppy :)\n- Biggest Issue: I am unable to maintain a list when the object is indirectly added to the scene, as following: \n\n``` javascript\nvar o = new THREE.Object3D()\nvar x = new MySpecialObject3D()\no.add(x) // <--- not part of scene yet\nmyScene.add(o)  // <-- x is indirectly added to scene, but 'added' event is not dispatched on x\n```\n- Also, this approach will only work for classes that I define myself. I can't, for example, easily maintain a list for a built-in three.js type (without traversing the whole scenegraph, or relying on `scene.__objectsAdded` or `scene.__objectsRemoved`).\n\nMy proposed solution is to dispatch `addedToScene` and `removedFromScene` events (or similar events) from `THREE.Scene.prototype.__addObject` and `THREE.Scene.prototype.__removeObject`, respectively. I believe this would be all that is needed for me to accomplish what I'm trying to do (and it would allow me to keep track of types that I haven't declared myself). In some ways, this isn't very different than relying on the `scene.__objectsAdded` and `scene.__objectsRemoved` arrays directly, but it seems that using events would be more flexible / future-proof. \n\nWhat do you think @mrdoob ? \n"
      },
      {
        "user": "mrdoob",
        "created_at": "2013-12-02T04:46:37Z",
        "body": "> My proposed solution is to dispatch `addedToScene` and `removedFromScene` events\n\nThat sounds good to me :)\n"
      },
      {
        "user": "speigg",
        "created_at": "2013-12-02T07:15:03Z",
        "body": "I submitted a PR with the following two lines added right before the recursive sections of `__addObject` and `__removeObject`: \n\n``` javascript\nthis.dispatchEvent( { type: 'addedToScene', object: object } );\n\n...\n\nthis.dispatchEvent( { type: 'removedFromScene', object: object } );\n```\n\nI also thought about dispatching the event on the object, which may be more convenient in some situations:\n\n``` javascript\nthis.dispatchEvent( { type: 'addedToScene', object: object } );\nobject.dispatchEvent( { type: 'addedToScene', scene: this } );\n\n...\n\nthis.dispatchEvent( { type: 'removedFromScene', object: object } );\nobject.dispatchEvent( { type: 'removedFromScene', scene: this } );\n```\n\nBut dispatching the event on the scene is the most useful, and I didn't want to add more than necessary to the PR :) \n"
      },
      {
        "user": "mrdoob",
        "created_at": "2013-12-03T06:30:05Z",
        "body": "I thought `addedToScene` and `removedFromScene` were going to be dispatched from the object actually. Also, it would probably be better to name the `Scene` events as `objectAdded` and `objectRemoved` \n"
      },
      {
        "user": "speigg",
        "created_at": "2013-12-09T04:53:33Z",
        "body": "Alright, I'll go ahead and push those changes to the pull request\n"
      }
    ]
  },
  {
    "number": 3155,
    "title": "TrackballControls.js need to upgrade?",
    "created_at": "2013-03-03T17:50:24Z",
    "closed_at": "2013-03-03T17:56:27Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/3155",
    "body": "Hi, I'm updating my software to version 56 of three.js, but TrackballControls.js seems not to work.\n\nCan also need an update?\n\nThank you very much for this great library.\nOscar.\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/3155/comments",
    "author": "mdrorum",
    "comments": [
      {
        "user": "mrdoob",
        "created_at": "2013-03-03T17:56:09Z",
        "body": "Yes. You need to update TrackballControls with the one you'll find in the r56 repo.\n"
      }
    ]
  },
  {
    "number": 2912,
    "title": "tessels on contacting edges  with three.js",
    "created_at": "2013-01-10T14:44:09Z",
    "closed_at": "2013-01-10T16:08:54Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/2912",
    "body": "when I displays a model made \u200b\u200bwith multiple meshes, the meshs contacting edges show black marks depending on the angle of vision ... that it comes from my file or display? how to remedy this problem?\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/2912/comments",
    "author": "lauraneb",
    "comments": [
      {
        "user": "mrdoob",
        "created_at": "2013-01-10T15:45:28Z",
        "body": "I suspect it's a precision issue. Instead of this:\n\n``` javascript\nnew THREE.PerspectiveCamera( 60, window.innerWidth / window.innerHeight, 0.01, 3000 );\n```\n\ntry this:\n\n``` javascript\nnew THREE.PerspectiveCamera( 60, window.innerWidth / window.innerHeight, 1, 1000 );\n```\n"
      }
    ]
  },
  {
    "number": 2573,
    "title": "archShape, add point",
    "created_at": "2012-10-30T10:45:06Z",
    "closed_at": "2012-10-31T10:05:17Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/2573",
    "body": "Hi, is it possible to \"add more points\".\n\nLike a parametter to tell the arc how many segment we want to have in the circle.\n\nI use is like that :\n\n```\narcShape.absarc( 0, 0, orbit, 0, Math.PI*2, true );\n```\n\nOr should I use another way to draw my circle ? Because that way there's way too few points.\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/2573/comments",
    "author": "fabien-h",
    "comments": [
      {
        "user": "zz85",
        "created_at": "2012-10-31T01:40:53Z",
        "body": "Are you using THREE.Shape or something? Right now, points are not defined when creating the path, but you can pass in the number of points when extract the page - eg. `shape.getPoints( divisions )`\n"
      }
    ]
  },
  {
    "number": 2361,
    "title": "Problem with scale.x = 0",
    "created_at": "2012-08-29T07:43:04Z",
    "closed_at": "2012-08-30T10:29:38Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/2361",
    "body": "Hi\nAccording to working with THREE.js, a new problem occurs. Warning, Matrix3.getInverse(): determinant == 0, occurs  in Google chromes console when I enter scale.x = 0 for a mesh.\n\nWould you please let me know the solution?\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/2361/comments",
    "author": "Erfans",
    "comments": [
      {
        "user": "ironbane",
        "created_at": "2012-08-29T21:39:51Z",
        "body": "Why do you need `scale.x = 0` for?\n"
      },
      {
        "user": "Erfans",
        "created_at": "2012-08-30T06:56:45Z",
        "body": "Because I didn't find any other way to change size of mesh (or geometry) during animation process. I used Tween and scale to  disappear mesh gradually.\n`new TWEEN.Tween( mesh.scale ).to({y: 0},time).easing( TWEEN.Easing.Quadratic.EaseInOut).start()`\n"
      },
      {
        "user": "Erfans",
        "created_at": "2012-08-30T07:07:45Z",
        "body": "I found a way to jump over the problem by adding this code,\n`tween.onComplete(function(){ mesh.visible = false; });`\nBut totally `scale.x = 0` need to fix for other probable usage.\n"
      },
      {
        "user": "ironbane",
        "created_at": "2012-08-30T07:32:22Z",
        "body": "Why not scale the mesh to a very low value, like 0.00001? The matrix determinant should stay intact.\n"
      },
      {
        "user": "Erfans",
        "created_at": "2012-08-30T08:04:46Z",
        "body": "Yes, I could use it however there is a bug in `Matrix3.getInverse()` that i wanted to report it.\nThanks ironban\n"
      }
    ]
  },
  {
    "number": 2075,
    "title": "ray.intersectObject(s) requires intersected objects to be in the scene.",
    "created_at": "2012-06-19T00:26:58Z",
    "closed_at": "2012-06-20T03:31:57Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/2075",
    "body": "I am not sure this is a bug, but I have a use case where I have a rectangular plane made of many (~50x50) rectangular tiles.  I want to do the standard intersection of a ray to determine human interaction.  \n\nTo avoid intersecting my ray with hundreds of rectangles, I wanted to compute the intersection with the larger rectangle (not rendered or actually part of the scene).  \n\nI discovered that unless the rectangle was part of the scene, ray.intersectObject will not return an intersecting object!\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/2075/comments",
    "author": "meawoppl",
    "comments": [
      {
        "user": "mrdoob",
        "created_at": "2012-06-19T01:17:23Z",
        "body": "Hmmm... is the rectangle moved, rotated or scaled?\n"
      },
      {
        "user": "WestLangley",
        "created_at": "2012-06-19T01:46:49Z",
        "body": "Here is a guess... Try calling `largeRectangle.updateMatrixWorld()` prior to checking for intersections. This routine would be called for you if the large recgtangle were part of the scene.\n"
      },
      {
        "user": "meawoppl",
        "created_at": "2012-06-19T02:48:27Z",
        "body": "@mrdoob it certainly was moved.  rect.position.x and rect.position.y have certainly been changed.  \n\n@WestLangley I am certain I have cast rays where the rect would have previously intersected.  I will test and report back in a few.   \n"
      },
      {
        "user": "mrdoob",
        "created_at": "2012-06-19T17:58:41Z",
        "body": "``` javascript\nlargeRectangle.updateMatrix();\nlargeRectangle.updateMatrixWorld();\n```\n"
      }
    ]
  },
  {
    "number": 1977,
    "title": "Object3D.lookAt different from Camera.lookAt?",
    "created_at": "2012-05-24T13:28:11Z",
    "closed_at": "2012-05-24T16:21:01Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/1977",
    "body": "Hi,\n\nI just noticed that Camera.lookAt and Object3D lookAt do not use the same code (meaning they switch eye and target parameters).\nIt may be a dumb question but it seems illogical to me. Can you try to explain why?\n\nThanks.\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/1977/comments",
    "author": "gcasalis",
    "comments": [
      {
        "user": "WestLangley",
        "created_at": "2012-05-24T16:04:50Z",
        "body": "It is because `object.lookAt()` rotates the object so its _positive_ z-axis points toward the target, while `camera.lookAt()` rotates the camera so its _negative_ z-axis points toward the target.\n"
      }
    ]
  },
  {
    "number": 1956,
    "title": "Drawing a simple (open) line",
    "created_at": "2012-05-21T13:39:38Z",
    "closed_at": "2012-05-21T15:53:34Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/1956",
    "body": "After upgrading to r49 I'm getting errors on some very simple code that draws an open line that goes through several points.\n\nOld code that worked:\n\n``` js\nvar g = new THREE.Geometry();\ng.vertices = [\n    new THREE.Vertex(new THREE.Vector3(0,0,0)),\n    new THREE.Vertex(new THREE.Vector3(150,0,0))\n];\nvar line = new THREE.Line(g, new THREE.LineBasicMaterial({ color : 0x0000ff }));\nscene.add(line);\n```\n\nNow returns:\n\n``` js\nTHREE.Vertex has been DEPRECATED. Use THREE.Vector3 instead.\nTypeError: this.vertices[c].length is not a function\n```\n\nMy current workaround is to do:\n\n``` js\nvar points = [\n    new THREE.Vector3(0,0,0),\n    new THREE.Vector3(150,0,0)\n];\nvar g = new THREE.Shape(points).createPointsGeometry();\n```\n\nBut that creates a closed shape.\n\nWhat's the canonical way of drawing a simple, open, line?\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/1956/comments",
    "author": "yuvadm",
    "comments": [
      {
        "user": "ColasMarko",
        "created_at": "2012-05-21T15:23:14Z",
        "body": "``` javascript\nvar g = new THREE.Geometry();\ng.vertices = [\n    new THREE.Vector3(0,0,0),\n    new THREE.Vector3(150,0,0)\n];\nvar line = new THREE.Line(g, new THREE.LineBasicMaterial({ color : 0x0000ff }));\nscene.add(line);\n```\n\nShould work fine, Vertex has been removed and you must use Vector3 instead.\n"
      }
    ]
  },
  {
    "number": 1943,
    "title": "window.ondrop texture",
    "created_at": "2012-05-19T01:05:16Z",
    "closed_at": "2012-05-19T11:31:12Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/1943",
    "body": "I'm trying to create a script that allows users to drop their own texture on my model, but i am a little stuck here.\n\nMy code so far:\n\n``` javascript\nwindow.ondrop = function( event ){\n    event.preventDefault();\n\n    for (i = 0; i < event.dataTransfer.files.length; i ++){\n        var file = event.dataTransfer.files[ i ];\n        var extention =  file.name.split( '.' ).pop();\n        if (extention == 'jpg') loadImage( file );\n    }\n}\n\nfunction loadImage( file ){\n    var reader = new FileReader();\n    reader.readAsDataURL( file );\n    reader.onload = function( event ){\n\n        var img = new Image();\n        img.src = event.currentTarget.result;\n        img.onload = function(){\n\n            var material = new THREE.MeshBasicMaterial( { map: new THREE.Texture( img ) } );\n            //var material = new THREE.MeshBasicMaterial( { color: new THREE.Color( 0xffffff ), wireframe: true } ); //< This works!\n            three.object.material = material;\n\n        }\n    }\n}\n```\n\nAfter i drop an image on my window, and the script applies the new material on my model, my model turns black.\nI think this line causes the error\n\n``` javascript\nnew THREE.Texture( img )\n```\n\nBut i can't find a solution anywhere in the documentation.\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/1943/comments",
    "author": "Cappieh",
    "comments": [
      {
        "user": "alteredq",
        "created_at": "2012-05-19T02:34:14Z",
        "body": "Try this (at the end of your callback):\n\n``` javascript\nmaterial.texture.needsUpdate = true;\n```\n"
      }
    ]
  },
  {
    "number": 1933,
    "title": "Background Color",
    "created_at": "2012-05-17T14:45:08Z",
    "closed_at": "2012-05-17T18:28:11Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/1933",
    "body": "I was wondering what the easiest way to have a background color for the canvas. I would like to have say a red background then draw my scene on top of that.  I was thinking of adding a simply polygon the size of the canvas, however the points would then be transformed by the projection matrix etc... and this would affect the drawn polygon.  Am I just missing something here or is there an easier way to do this?\n\nThanks\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/1933/comments",
    "author": "JPac1619",
    "comments": [
      {
        "user": "WestLangley",
        "created_at": "2012-05-17T16:32:28Z",
        "body": "``` css\nbody {\n    background-color: #f00;\n}\u200b\n```\n"
      },
      {
        "user": "JPac1619",
        "created_at": "2012-05-17T16:56:38Z",
        "body": "I don' t think that is what I want.  Sorry I should try to clarify.\n\nI want this to be independent of the html tags for the container (canvas) object passed to a THREE.WebGLRenderer.  I want to actually draw a background that is the size of my container with WebGL for my scene.\n\nIf i just use a body tag that applies to my entire page, not to just the canvas element, unless I am missing something?\n"
      },
      {
        "user": "WestLangley",
        "created_at": "2012-05-17T17:41:44Z",
        "body": "``` javascript\nrenderer.setClearColorHex( 0xff0000, 1 );\n```\n\nor, just for reference,\n\n``` css\n#container  {\n    background-color: #f00;\n}\n```\n\n``` html\n<div id=\"container\">\n```\n\n``` javascript\nvar container = document.getElementById( 'container' );\ncontainer.appendChild( renderer.domElement );\n```\n"
      },
      {
        "user": "JPac1619",
        "created_at": "2012-05-17T18:28:11Z",
        "body": "Yeah I got the\n\n``` css\n#container  {\n    background-color: #f00;\n}\n```\n\nto work\n\n`renderer.setClearColorHex` worked as well, when I used the clearColor parameter to the `WebGLRenderer` it didn't work for some reason. \n\nThanks\n"
      },
      {
        "user": "WestLangley",
        "created_at": "2012-05-17T18:41:24Z",
        "body": "> when I used the clearColor parameter to the WebGLRenderer it didn't work for some reason.\n\nThat is because the default `clearAlpha` is zero.\n\n   renderer = new THREE.WebGLRenderer(  { clearColor: 0xff0000, clearAlpha: 1 }  );\n"
      }
    ]
  },
  {
    "number": 1932,
    "title": "A problem when building a skybox",
    "created_at": "2012-05-17T14:42:51Z",
    "closed_at": "2012-05-18T17:18:14Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/1932",
    "body": "I got problems when building a skybox\nI use a big cube to show the sky\nBut in the cube,I can't see the fog\nIt seems that fog is only at outside of the skybox\nHow to solve the problem?\n\nAnd I think 2000_2000_2000 is not big enough\nAfter I change the size of the cube at 200000_200000_200000\nI can't see the skybox anymore\nI only change the size,why can't I see that?\n\nAll I want is a 'moving' skybox\nfor example,it seems there are some cloud floating in the sky\nMaybe I should rotate the skybox?\nOr I should use ShaderMaterial to do this?\nCan anyone give me some advice,thanks!\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/1932/comments",
    "author": "novemrain",
    "comments": [
      {
        "user": "Iter-Ator",
        "created_at": "2012-05-17T21:48:19Z",
        "body": "> After I change the size of the cube at 200000_200000_200000 I can't see the skybox anymore\n\n``` javascript\nvar camera = new THREE.PerspectiveCamera(\n    75,                                       // Field of view\n    window.innerWidth / window.innerHeight,   // Aspect ratio\n    1,                                        // Near\n    10000                                     // Far\n);\n```\n\nIf an object's distance from the camera does not fall in the range between NEAR and FAR then that object is not rendered.\n"
      },
      {
        "user": "novemrain",
        "created_at": "2012-05-18T02:38:02Z",
        "body": "@adamika2000 \nYou are right\nI can see the skybox after I change the FAR of camera\n\nBut In fact the position of skybox and the position of camera are the same (0,0,0)\nso there is no distance between them\nMaybe the whole object should fall in the range between NEAR & FAR if we wanna see it\nthank you\n"
      }
    ]
  },
  {
    "number": 1931,
    "title": "Want to change the height of a cube mesh",
    "created_at": "2012-05-17T14:06:23Z",
    "closed_at": "2012-05-18T07:10:20Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/1931",
    "body": "I have been able to change the height of a cube geometry mesh by using mesh.scale.y however this is unsatisfactory as i only want to increase it upwards or downwards but when I scale it it changes uniformly in both directions upwards and downwards.  Is there a simple way of doing this without scale which requires to update the position adjusting for the bottom or top to make it look like its growing in one direction only.\n\nPS - Couldnt find a forum to post this question in so gave up searching on google and posted it here.  Also would like to thank the Three.js team for this amazing framework as writing straight WebGL which I was doing was a taking too long.\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/1931/comments",
    "author": "akshaysrin",
    "comments": [
      {
        "user": "WestLangley",
        "created_at": "2012-05-17T16:20:35Z",
        "body": "``` javascript\nmesh.scale.y += delta;\nmesh.translateY( delta / 2 );\n```\n"
      },
      {
        "user": "sunseth",
        "created_at": "2016-07-29T22:31:21Z",
        "body": "For anyone stumbling upon this now, a little clarification.\n\n`mesh.scale.y += delta` changes the scale of the mesh, so if the scale is 1 and you add 1, the mesh doubles. \n\n`mesh.translateY()` moves the mesh by a physical distance. So if the y value of the mesh is 5 pixels, adding 1 moves it to 6. \n\nInstead of `translateY(delta/2)`, you should figure out how much the `mesh.scale.y += delta` physically increases/decreases the mesh, then you should translate by half that amount. \n"
      }
    ]
  },
  {
    "number": 1912,
    "title": "Have TrackballControls follow the object",
    "created_at": "2012-05-14T13:55:06Z",
    "closed_at": "2012-05-14T23:56:04Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/1912",
    "body": "I'm using the TrackballControls to create a third person scene where the user can move their character around the scene. However, I'm having trouble updating the camera to follow the character as it moves around. If I'm activating the TrackballControls with the mouse, it stays within the min/max distances I set, but if I just move my character without moving the mouse, my character just moves away, past the max distance.\n\nIs there a way to have the camera follow an object using TrackballControls (e.g. rotate around the object but stay within the max distance if no rotating is going on but the object is moving)?\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/1912/comments",
    "author": "rscottfree",
    "comments": [
      {
        "user": "chandlerprall",
        "created_at": "2012-05-14T14:12:16Z",
        "body": "You can add the camera to the object itself:\n\n``` javascript\nmesh.add( camera );\n```\n\nThis will let the trackball controls move the camera around the object as the object moves within the scene.\n"
      }
    ]
  },
  {
    "number": 1795,
    "title": "Changing Material/Texture of Plane/Cube",
    "created_at": "2012-04-23T16:16:27Z",
    "closed_at": "2012-04-23T18:49:29Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/1795",
    "body": "Hi,\n\nJust want to change the material of a Plane so that I can use it like an animated sprite.\nI know it's probably not the best way to do it but I'm just looking for the most basic way possible for the moment as I am just getting to grips with threejs.\n\nMy code looks a bit like this at the moment:\n\n``` javascript\n var material = new THREE.MeshLambertMaterial({\n            map: textures[0],needsUpdate:true\n                });\n\n         var cube = new THREE.Mesh(new THREE.PlaneGeometry(1,1), material);\n```\n\nlater in the script I call \n\n``` javascript\ncube.material=new THREE.MeshLambertMaterial({\n            map: textures[1],needsUpdate:true\n                });\n```\n\nBut the material does not change.\n\nAm I approaching this in the wrong way?\n\nEdit: The material is being updated (i can see from the console) but it is not being displayed on screen...\n\nThanks\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/1795/comments",
    "author": "chunersplash",
    "comments": [
      {
        "user": "mrdoob",
        "created_at": "2012-04-23T18:21:55Z",
        "body": "What about doing this instead?\n\n``` javascript\ntexture.image = images[1];\ntexture.needsUpdate = true;\n```\n"
      }
    ]
  },
  {
    "number": 1768,
    "title": "Setting center of mesh?",
    "created_at": "2012-04-19T16:36:00Z",
    "closed_at": "2012-04-20T16:21:19Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/1768",
    "body": "Say, a mesh is constructed from a geometry:\n\n``` javascript\nvar mesh = new THREE.Mesh( geometry, material );\n```\n\n Is there a way to set the center of mesh to be the center of `geometry.boundingBox`, so that after `mesh.position.set(0,0,0)`, the center of the `boundingBox` is at (0,0,0)?\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/1768/comments",
    "author": "linzhp",
    "comments": [
      {
        "user": "WestLangley",
        "created_at": "2012-04-20T03:03:49Z",
        "body": "See if `THREE.GeometryUtils.center( geometry )` is what you are looking for.\n"
      }
    ]
  },
  {
    "number": 1763,
    "title": "Control the visibility of part of a mesh?",
    "created_at": "2012-04-19T08:29:28Z",
    "closed_at": "2012-04-19T12:23:23Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/1763",
    "body": "Hi, yet another newbie question.\n\nIs there a viable way to render only selected parts of a mesh, by material id?\n\nThans in advance,\n\n r.\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/1763/comments",
    "author": "resle",
    "comments": [
      {
        "user": "mrdoob",
        "created_at": "2012-04-19T12:02:28Z",
        "body": "You can separate the object in different objects and use:\n\n``` javascript\nmesh.visible = false;\n```\n"
      },
      {
        "user": "resle",
        "created_at": "2012-04-19T12:17:52Z",
        "body": "Thanks Mrdoob. (Thanks for the whole three.js, actually :) )\n\nThis is what I was exactly wondering, to further clarify the issue:\nI used to export from 3dstudio max to a proprietary format of mine. This format kept face structure all in one FBO, and vertex structure in several FBOs, one per material. This way I could apply morph targets animation in one pass and then selectively render \"surfaces\" of the object, \"peeling\" them as needed (the classic example is a human body model with layered pants, shoes, hair etc. etc.)\n\nIs this kind of separation/visibility toggle - the same kind of mechanism?\nThanks a lot,\n\n r.\n"
      },
      {
        "user": "mrdoob",
        "created_at": "2012-04-19T12:20:49Z",
        "body": "Well, until recently we had this check on the webglrenderer:\n\n``` javascript\nif ( material.opacity === 0 ) return;\n```\n\nBut turns out that that made occlusion effects impossible. So if you're not using `dev` then by setting the opacity to 0 will give you what you're after. But now that it's gone in `dev`. maybe a material also needs a `visible` property...\n"
      },
      {
        "user": "alteredq",
        "created_at": "2012-04-19T17:22:20Z",
        "body": "Hmmm, seems it would be useful to have some helper method to break geometry by materials (so that model could be decomposed into multiple objects). This already came up before.\n"
      },
      {
        "user": "resle",
        "created_at": "2012-04-21T17:41:43Z",
        "body": "So making materials invisible actually equates to rendering nothing but some part of a given model, alway in one call?\n"
      },
      {
        "user": "mrdoob",
        "created_at": "2012-04-21T18:00:22Z",
        "body": "Nope, different materials get rendered in different calls.\n"
      },
      {
        "user": "shermanlsh",
        "created_at": "2012-06-13T11:23:00Z",
        "body": "But if I can calculate out some faces in a mesh that should be hidden, how can I do? what I need is to set some faces or a part of a mesh to invisible at run time, the mesh use only one material. thank you\n"
      }
    ]
  },
  {
    "number": 1756,
    "title": "How to highlight a face?",
    "created_at": "2012-04-18T14:48:50Z",
    "closed_at": "2012-04-18T23:25:49Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/1756",
    "body": "I've created a scene with roads in it. Each of my roads was originally drawn as a separate mesh and when the user hovered over one of them I changed the material temporarily to show which road section would be selected if a mouse click is done. This proved to be very slow for rendering.\n\nSo I've merged all my roads into a single mesh. This renders much much faster but I have an issue now with highlighting what the user has hovered over. \n\nI've tried changing face.color but nothing happens. \n\nAny suggestions?\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/1756/comments",
    "author": "ashawthing",
    "comments": [
      {
        "user": "ColasMarko",
        "created_at": "2012-04-18T15:28:20Z",
        "body": "Changing face.color only works with `geometry.dynamic = true;` then set `geometry.__dirtyColors = true\" when you need color to be updated.\n"
      },
      {
        "user": "ashawthing",
        "created_at": "2012-04-18T15:51:17Z",
        "body": "That still doesn't seem to work. I've done the following at setup time:\n\n``` javascript\nvar mesh = new THREE.Mesh(solid, material);\nmesh.geometry.dynamic = true;\nscene.add(mesh);\n```\n\nAnd the following when I ray trace from the mouse to the intersecting object:\n\n``` javascript\nintersects[0].face.color = new THREE.Color(0xf2b640);\nintersects[0].object.geometry.__dirtyColors = true;\n```\n\nI also tried setting dynamic = true on my geometry before I created the mesh (i.e. solid.dynamic = true before my other setup lines) but this stopped the mesh from appearing at all. \n\nCould it be because I have material rendering on my mesh. Do I need to disable that to get face colours instead?\n"
      },
      {
        "user": "ColasMarko",
        "created_at": "2012-04-18T15:58:03Z",
        "body": "Does your material uses the vertexcolor ? if not you won't see any color change.\n"
      },
      {
        "user": "ashawthing",
        "created_at": "2012-04-18T16:00:47Z",
        "body": "Not sure what that means. I created my material like this:\n\n``` javascript\nvar image = new Image();\nimage.onload = function () { texture.needsUpdate = true; };\nimage.src = path;\n\nvar texture = new THREE.Texture(image, new THREE.UVMapping(), THREE.RepeatWrapping, THREE.NearestFilter, THREE.LinearMipMapLinearFilter);\n\nreturn new THREE.MeshLambertMaterial({ map: texture });\n```\n"
      },
      {
        "user": "mrdoob",
        "created_at": "2012-04-18T23:25:49Z",
        "body": "Instead of `true` is should be `THREE.FaceColors`:\n\n``` javascript\nbuildingMaterial.vertexColors = THREE.FaceColors;\n```\n"
      },
      {
        "user": "ashawthing",
        "created_at": "2012-04-21T08:06:09Z",
        "body": "Although I said this works I do have another problem with it that I'd like some help with.\n\nThe face colour is blended onto my textured material, as my texture is a dark grey colour I can't highlight my face with a nice bright clear colour. \n\nIs there any way to temporarily disable the texture for the face when I add the colour?\n"
      },
      {
        "user": "mrdoob",
        "created_at": "2012-04-21T09:30:32Z",
        "body": "What you could do is creating a geometry that has only one face inside. And everytime you rollover face, copy all it's properties to this other face and draw it on top.\n"
      },
      {
        "user": "ashawthing",
        "created_at": "2012-04-24T12:14:39Z",
        "body": "The trouble with that is that I have two faces at exactly the same place and when I move around my scene it seems to be random as to which one is drawn. \n\nI've added the temporary mesh to the end of the scene.\n"
      },
      {
        "user": "mrdoob",
        "created_at": "2012-04-25T02:04:14Z",
        "body": "Try adding `mesh.material.transparent = true` to the mesh that should sit on top.\n"
      },
      {
        "user": "ashawthing",
        "created_at": "2012-04-25T07:08:35Z",
        "body": "I tried that and it puts me back to where I started i.e. the transparent material is blended with the material beneath and the colour becomes darker. It looks exactly the same as using face.color.\n"
      },
      {
        "user": "ColasMarko",
        "created_at": "2012-04-25T08:14:26Z",
        "body": "You can move your face slightly along its normal to prevent zfighting.\n"
      }
    ]
  },
  {
    "number": 1691,
    "title": "Problem with TrackballControls, <select> and Chrome.",
    "created_at": "2012-04-11T09:17:04Z",
    "closed_at": "2012-04-11T12:02:22Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/1691",
    "body": "Hi,\n\nI've a problem in Chrome with the use of TrackballControls and the 'select' HTML component. The mouseDown event listener of theTrackballControls seems to prevent  the 'select' to work. ( no problem with Firefox).\n\nIs there a way to fix this ? \n\nThanks,\nLaurent\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/1691/comments",
    "author": "lchevalier",
    "comments": [
      {
        "user": "mrdoob",
        "created_at": "2012-04-11T11:41:44Z",
        "body": "Hav you tried doing this?\n\n``` javascript\nnew THREE.TrackballControls( camera, renderer.domElement );\n```\n"
      },
      {
        "user": "lchevalier",
        "created_at": "2012-04-11T12:02:21Z",
        "body": "ok ... I'm sorry. \nI used something like that : new THREE.TrackballControls( camera );\n\nOf course, it's working with with the domElement.\n\nThanks.\n"
      }
    ]
  },
  {
    "number": 1669,
    "title": "How to set camera rotating around a line, Not axis X,Y,Z",
    "created_at": "2012-04-09T02:24:40Z",
    "closed_at": "2012-04-09T06:30:01Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/1669",
    "body": "I have define a perspectiveCamera, Now I want the camera to rotate around  x=0, z = -100 , not x=0 , z =0 , But I don't konw how to  achieve it .\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/1669/comments",
    "author": "webgldawn",
    "comments": [
      {
        "user": "worldswidestweb",
        "created_at": "2012-04-09T05:15:47Z",
        "body": "``` javascript\nfunction render() {\n    var timer = 0.0001 * Date.now();\n\n    camera.position.x = 0 + Math.cos( timer ) * 1500;\n    camera.position.z = -100 + Math.sin( timer ) * 1500;\n\n    /// optional\n    camera.lookAt( new THREE.Vector3( 0, 0, -100 ) );\n}\n```\n"
      }
    ]
  },
  {
    "number": 1653,
    "title": "problems with scene.add()",
    "created_at": "2012-04-07T13:52:10Z",
    "closed_at": "2012-04-08T03:13:56Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/1653",
    "body": "I have defined a scene,and added objects to it,such as camera, light,mesh object and so on, but it still give me an error saying a._objectsAdded is undefine in Row300 of  Three.js, I don't know why.\n\nto show my issue clearly , I follow my code:\n\n``` javascript\ninit();\nanimate();\nfunction init(){\n  container = document.createElement(\"div\");\n  document.body.appendChild(container);\n\n  scene = new THREE.Scene();\n\n  camera = new THREE.PerspectiveCamera(70,window.innerWidth/window.innerHeight,1,10000);\n  camera.position.set(0,300,500);\n  scene.add( camera );\n\n  light = new THREE.DirectionalLight(0xffffff,2);\n  light.position.set(1,1,1).normalize;\n  scene.add( light );\n\n  var light = new THREE.DirectionalLight( 0xffffff );\n  light.position.set( -1, -1, -1 ).normalize();\n  scene.add( light );\n\n  var geometry = new THREE.CubeGeometry(200,150,250);\n  var material = new THREE.MeshBasicMaterial({ color:0xb50845}); \n  mesh = new THREE.Mesh(geometry,material);\n  scene.add( mesh );\n\n  renderer = new THREE.WebGLRenderer();\n  renderer.sortObjects = false;\n  renderer.setSize(window.innerWidth,window.innerHeight);\n\n  container.appendChild(renderer.domElement);\n\n  stats = new Stats();\n  stats.domElement.style.position = \"absolute\";\n  stats.domElement.style.top = \"0px\";\n  stats.domElement.style.left = \"0px\";\n\n  container.appendChild(stats.domElement);\n  }\n  //\u6267\u884c\u52a8\u753b\n  function animate(){\n    requestAnimationFrame(animate);\n    render();\n    stats.update();\n  }\n  //\u4f9banimate()\u51fd\u6570\u8c03\u7528\n  var thelta = 0;\n  var radius = 100;\n  function render(){\n\n    thelta += 0.2;\n    camera.position.x = radius * Math.sin(thelta*Math.PI/360);\n    camera.position.y = radius * Math.sin(thelta*Math.PI/360);\n    camera.position.z = radius * Math.cos(thelta*Math.PI/360);\n\n    camera.lookAt( scene.position );\n    renderer.render(camera,scene);\n  }\n```\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/1653/comments",
    "author": "webgldawn",
    "comments": [
      {
        "user": "mrdoob",
        "created_at": "2012-04-07T16:20:30Z",
        "body": "Maybe it's because this\n\n``` javascript\nlight.position.set(1,1,1).normalize;\n```\n\nshould be this?\n\n``` javascript\nlight.position.set(1,1,1).normalize();\n```\n"
      },
      {
        "user": "WestLangley",
        "created_at": "2012-04-07T19:22:53Z",
        "body": "``` javascript\nrenderer.render( scene, camera );\n```\n"
      },
      {
        "user": "webgldawn",
        "created_at": "2012-04-08T03:00:06Z",
        "body": "I change renderer.render(camera,scene); to renderer.render( scene, camera ); now my code runs well, Thank you ! otherwise I hava tried light.position.set(1,1,1).normalize; and light.position.set(1,1,1).normalize(); and they are all ok.\n"
      }
    ]
  },
  {
    "number": 1649,
    "title": "Can't change color of LineBasicMaterial or MeshBasicMaterial",
    "created_at": "2012-04-06T21:46:51Z",
    "closed_at": "2012-04-07T06:01:35Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/1649",
    "body": "(providing example for LineBasicMaterial, but it's the same for MeshBasicMaterial)\n\nI'd like to randomly change the color of some lines every frame, without having to re-create the lines, or creating/associating a new material for them. So I thought to just change the \"color\" property of their material...\n\nI tried a few tricks ( i.e. setting the followings to true: `geometry.dynamic geometry.dirtyColors geometry.__dirtyVertices geometry.__dirtyNormals` ) , but I still can't change the color of a line dynamically.\n\nSee minimal code below.\n\nThe line is drawn with a random color for one frame, and then:\n- using webgl, it's drawn black. I.e. the color created at construction \"sticks\" to the material, and subsequent changes just turn the line black...\n- using the canvas renderer, the changes are disregarded and only the first color sticks.\n\n``` javascript\n    function animate() {\n        requestAnimationFrame( animate );\n        render();\n    }\n\n   var material;\n\n   function render() {\n\n     // setting this to false creates a material\n     // with random color each frame\n     // (which works fine, just to show that\n     // the code has no major flaws)\n     var dynamicMaterialColor = true;\n\n     if (material === undefined || ! dynamicMaterialColor ) {\n       material = new THREE.LineBasicMaterial({\n         color: Math.floor(Math.random() * 16777216),\n       });\n     }\n     // if the material has already been created,\n     // re-use it and just change the color.\n     else {\n       // Attempting to change the color of the material.\n       // Commenting this line below shows that\n       // the first color *does* stick to the material.\n       // It's subsequent changes that turn the line\n       // black.\n       material.color = Math.floor(Math.random() * 16777216);\n     }\n\n    // just creates the geometry of the line. \n    var geometry = new THREE.Geometry();\n     geometry.vertices.push(new THREE.Vertex(new THREE.Vector3(-20, 0, 0)));\n     geometry.vertices.push(new THREE.Vertex(new THREE.Vector3(20, 0, 0)));\n\n    // creates the line object and add to scene\n     var line = new THREE.Line(geometry, material);\n     scene.add(line);\n\n     renderer.render(scene, camera);\n\n     // remove the line from scene, just to be clean\n     scene.remove(scene.objects[0]);\n\n   }\n```\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/1649/comments",
    "author": "davidedc",
    "comments": [
      {
        "user": "WestLangley",
        "created_at": "2012-04-07T04:04:44Z",
        "body": "You are not setting your material color correctly. Try\n\n``` javascript\nmaterial.color.setHex( Math.random() * 0xffffff );\n```\n"
      }
    ]
  },
  {
    "number": 1626,
    "title": "JSON 3.0 model format",
    "created_at": "2012-04-02T18:56:16Z",
    "closed_at": "2012-04-04T15:47:21Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/1626",
    "body": "How do I access a property of my arquvio. JSON from a html page?\n\nthank you!!\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/1626/comments",
    "author": "LeonardoCardia",
    "comments": [
      {
        "user": "LeonardoCardia",
        "created_at": "2012-04-03T15:37:08Z",
        "body": "Hello,\nI have a arquvio inside HTML and have a script that through him I manuciar another external file to my model. Json example:\n\n``` javascript\nif(document.getElementById(\"bones\").checked )\n{    \n\n    // NEED TO TAKE A FIELD OF MY OTHER JSON FILE AND HERE TO CHANGE IT.\n\n} else {\n\n    camera.position.z = 5;\n    console.debug(\"not click\");\n```\n\n``` javascript\n\"materials\": [\n{\n\n\"DbgIndex\" : 0,\n\"DbgName\" : \"genbon\",\n\"colorDiffuse\" : [1.0000, 1.0000, 1.0000],\n\"colorAmbient\" : [0.0000, 0.0000, 0.0000],\n\"colorSpecular\" : [0.1100, 0.1100, 0.1100],\n\"transparency\" : 1.0,\n\"specularCoef\" : 61.0852,\n\"vertexColors\" : false\n},\n```\n\nThe question is, How do I get the field \"colorDiffuse\" for example, and change its value in my script that is inside my html tag.\nAlready grateful for the help.\n\nIt became a little clearer my doubts?\nThank you...\n"
      },
      {
        "user": "mrdoob",
        "created_at": "2012-04-04T01:54:22Z",
        "body": "After loading the geometry and attaching it to a mesh...\n\n``` javascript\nmesh.geometry.materials[0].ambient.setRGB( 1, 0, 0 ); // ambient\nmesh.geometry.materials[0].color.setRGB( 1, 0, 0 ); // diffuse\nmesh.geometry.materials[0].specular.setRGB( 1, 0, 0 ); // specular\n```\n"
      },
      {
        "user": "LeonardoCardia",
        "created_at": "2012-04-04T17:08:56Z",
        "body": "Another hitch,\nFor the same example above, when I do:\n\n``` javascript\nmesh.geometry.materials[0].transparency.set(1.0)\n```\n\nappears an error message saying that my transparency is not defined. WHAT am I doing wrong?\n\nThank you!!!\n"
      },
      {
        "user": "mrdoob",
        "created_at": "2012-04-04T20:53:10Z",
        "body": "It should be\n\n``` javascript\nmesh.geometry.materials[0].opacity = 1.0;\n```\n"
      }
    ]
  },
  {
    "number": 1600,
    "title": "Using two keys as shortcut (FirstPersonControls)",
    "created_at": "2012-03-28T17:11:03Z",
    "closed_at": "2012-04-03T14:46:53Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/1600",
    "body": "I'm doing some modifications in FirstPersonControls to use in my specific problem as discussed at #1466.\n\nNow I need to change onKeyDown and onKeyUp functions. I intend to use two keys as shortcuts, like CTRL + UP to go ahead instead of the UP key only. \n\nCan anyone help me?\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/1600/comments",
    "author": "nathaliaspatricio",
    "comments": [
      {
        "user": "alteredq",
        "created_at": "2012-03-29T16:14:22Z",
        "body": "Something like this: \n- add `keydown`, `keyup` handlers for both CTRL and UP,\n- keep track of each key's state (is it up or down),\n- check state after each key event, \n- do the action if both keys are concurrently down.\n\nI did some multi-key controls before but it's somehow mixed bag with JavaScript. \n\nFor two simultaneously pressed keys it should be ok, for more I was getting random results - sometimes it was working with 4, sometimes with just 2-3 (meaning more keys were simply ignored, you didn't get any events for them). That kinda sucks for games where you often mash tons of keys at once.\n"
      },
      {
        "user": "nathaliaspatricio",
        "created_at": "2012-03-29T17:21:31Z",
        "body": "I made changes both in onKeyUp and onKeyDown functions:\n\n``` javascript\nthis.onKeyDown = function ( event ) {\n\n    switch( event.keyCode ) {\n\n        case 17: /*CTRL*/ \n            this.ctrlPressed = true;\n            break;\n\n        case 38: /*up*/ \n            if(this.ctrlPressed)\n            {\n                this.mouseY = event.pageY - this.viewHalfY;\n                this.ctrlPressed = false;\n            }else{\n                this.moveForward = true; \n            }\n            break;\n\n        case 37: /*left*/ \n            if(this.ctrlPressed)\n            {\n                this.mouseX = event.pageX - this.viewHalfX;\n                this.ctrlPressed = false;\n            }else{\n                this.moveLeft = true; \n            }\n            break;\n\n        case 40: /*down*/ \n            if(this.ctrlPressed)\n            {\n                this.mouseY = - (event.pageY - this.viewHalfY);\n                this.ctrlPressed = false;\n            }else{\n                this.moveBackward = true; \n            }\n            break;\n\n        case 39: /*right*/ \n            if(this.ctrlPressed)\n            {\n                this.mouseX = -( event.pageX - this.viewHalfX);\n                this.ctrlPressed = false;\n            }else{\n                this.moveRight = true; \n            }\n            break;\n\n\n    }\n\n};\n\nthis.onKeyUp = function ( event ) {\n\n    switch( event.keyCode ) {\n\n        case 17: /*CTRL*/ \n            this.mouseX = 0;\n            this.mouseY = 0;\n            this.ctrlPressed = false;\n            break;\n        case 38: /*up*/ \n            this.moveForward = false; \n            break;\n\n        case 37: /*left*/ \n            this.moveLeft = false; \n            break;\n\n        case 40: /*down*/ \n            this.moveBackward = false; \n            break;\n\n        case 39: /*right*/ \n            this.moveRight = false; \n            break;\n\n\n    }\n\n};\n```\n\nBut I'm thinking that it's not the best solution. What do you think about it? \n\nOne problem in my code is when you keep pressed both CTRL and UP: the camera look up and moves forward at same time. But I want only look up without movement.\n"
      },
      {
        "user": "nathaliaspatricio",
        "created_at": "2012-03-29T17:50:05Z",
        "body": "The problem reported in my last post was solved. In onKeyDown function, I just remove the lines containing this.ctrlPressed = false;\n"
      },
      {
        "user": "mrdoob",
        "created_at": "2012-03-31T12:56:15Z",
        "body": "I don't think you need the `this.ctrlPressed` stuff.\n\nThe `KeyboardEvent` in JavaScript already has a `event.ctrlKey` property (boolean).\n\nSo you can just do this:\n\n``` javascript\nthis.onKeyDown = function ( event ) {\n\n    switch( event.keyCode ) {\n\n        case 38: /*up*/ \n            if ( event.ctrlKey ) {\n                this.mouseY = event.pageY - this.viewHalfY;\n            } else {\n                this.moveForward = true; \n            }\n            break;\n\n        case 37: /*left*/ \n            if ( event.ctrlKey ) {\n                this.mouseX = event.pageX - this.viewHalfX;\n            } else {\n                this.moveLeft = true; \n            }\n            break;\n\n        case 40: /*down*/ \n            if ( event.ctrlKey ) {\n                this.mouseY = - event.pageY - this.viewHalfY;\n            } else {\n                this.moveBackward = true; \n            }\n            break;\n\n        case 39: /*right*/ \n            if ( event.ctrlKey ) {\n                this.mouseX = - event.pageX - this.viewHalfX;\n            } else {\n                this.moveRight = true; \n            }\n            break;\n\n    }\n\n};\n\nthis.onKeyUp = function ( event ) {\n\n    switch( event.keyCode ) {\n\n        case 38: /*up*/ \n            this.moveForward = false; \n            break;\n\n        case 37: /*left*/ \n            this.moveLeft = false; \n            break;\n\n        case 40: /*down*/ \n            this.moveBackward = false; \n            break;\n\n        case 39: /*right*/ \n            this.moveRight = false; \n            break;\n\n    }\n\n};\n```\n"
      },
      {
        "user": "nathaliaspatricio",
        "created_at": "2012-04-03T14:36:40Z",
        "body": "Thanks for tell me about the event.ctrlKey. But this didn't work to me. When I released the ctrl key, the camera didn't stop the movement. This a problem to my application. To solve this I put in onKeyUp:\n\n``` javascript\nthis.onKeyUp = function ( event ) {\n\n    switch( event.keyCode ) {\n\n        case 38: /*up*/ \n            this.mouseX = 0;\n            this.mouseY = 0;\n            this.moveForward = false; \n            break;\n\n        case 37: /*left*/ \n            this.mouseX = 0;\n            this.mouseY = 0;\n            this.moveLeft = false; \n            break;\n\n        case 40: /*down*/ \n            this.mouseX = 0;\n            this.mouseY = 0;\n            this.moveBackward = false; \n            break;\n\n        case 39: /*right*/ \n            this.mouseX = 0;\n            this.mouseY = 0;\n            this.moveRight = false; \n            break;\n\n    }\n\n};\n```\n"
      }
    ]
  },
  {
    "number": 1597,
    "title": "dae hierarchy intersectObjects",
    "created_at": "2012-03-28T07:53:49Z",
    "closed_at": "2012-03-30T02:20:56Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/1597",
    "body": "Hi,\n\nI am using ray.intersectObjects  to select objects in a dae\n\n``` javascript\nvar intersects = ray.intersectObjects( dae.children );\n```\n\nIt was working great with a dae with only one \"level\" of hiearchy. But now i have dae where dae.chldren[i] might have chidren of its own.\nAnd intersectObjects doesnt go through children\nI could recursively call intersectObjects on childrens but i wont get the  \"first\" one touched by the ray.\n\nIs there a way to do what i want?\nThank you\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/1597/comments",
    "author": "farfromrefug",
    "comments": [
      {
        "user": "AddictArts",
        "created_at": "2012-03-29T20:13:33Z",
        "body": "Hi farfromrefug,\n\nFirst some assumptions, correct me please if needed. Assuming dae.children is the scene (from THREE.Scene) or the ColladaLoader result.scene since you have used \"dae\". I think you need an array of objects to check, so you need to build it up from the scene, for example a recursive way:\n\n``` JavaScript\nvar intersectList = [];\n\nfunction buildIntersectList(sceneChild, list) {\n  for (var i = 0, il = sceneChild.length; i < il; ++i) {\n    var obj = sceneChild[i];\n    list.push(obj);\n\n    if (obj.children.length > 0) {\n      buildIntersectList(obj.children, list);\n    }\n  }\n}\n\nbuildIntersectList(dae.children, intersectList);\nvar intersects = ray.intersectObjects( intersectList );\n```\n\nDoes that work for you? You may also need to call ray.setPrecision if your geometry is really small and missing intersections. Credit for this really goes to the Kuda project, I just looked at what we did.\n\nBest wishes\n"
      }
    ]
  },
  {
    "number": 1593,
    "title": "How to use matrix for transformation",
    "created_at": "2012-03-27T15:01:16Z",
    "closed_at": "2012-03-31T00:44:05Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/1593",
    "body": "Hello everybody,\n\nI want display an object in my navigator which come from a stl file. I load it and i display it. It is far away on the display, it is not at the center of the frame. When I open my stl file with \"blender\", I remark that my object is not localised at the center of the frame. Indeed, he is at (10,22,30) for example. So, the object in my navigator is at the same position that in \"blender\". So, I translate it with some calculation at the center of the landmark. BUT ^^, I remark that the attribute \"position\" of the object had values (0,0,0) at the initial position (before I translate it at the center of the frame, so (0,0,0) = (10,22,30) in obsolute frame), consequently after the translation, the object has position (-10,-22,-30). When I try to use setRotation(a), to rotate my object, it rotates around HIS origin that is to say (10,22,30) !!! How can I rotate my object on itself ? I would like that the center of the rotation be the center of the frame. I would like a function where I can specify the center of rotation.\n\nDavid\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/1593/comments",
    "author": "lanfeustxiii",
    "comments": [
      {
        "user": "ColasMarko",
        "created_at": "2012-03-27T15:17:42Z",
        "body": "The simpliest way to do that is to \"center\" the pivot of your geometry so that every transformation you'll do to this object will be relative to its center.\n\nRight after loading your geometry center it before creating your `THREE.Mesh` using this code \n`THREE.GeometryUtils.center( geometry );`\n"
      },
      {
        "user": "mrdoob",
        "created_at": "2012-03-27T15:26:52Z",
        "body": "Or...\n\n``` javascript\nmesh.geometry.applyMatrix( new THREE.Matrix4().setTranslation( -10,-22,-30 ) );\n```\n"
      },
      {
        "user": "lanfeustxiii",
        "created_at": "2012-03-28T09:38:07Z",
        "body": "Thanks kovleouf, it's a good idea to do THREE.GeometryUtils.center( geometry ), I tried and objects are at the center of the frame at the obsolute position (0,0,0). But I have an other constraint :/\n\nThanks mrdoob mesh.geometry.applyMatrix( new THREE.Matrix4().setTranslation( -10,-22,-30 ) ) was useful to apply transformation on my objet. :)\n\nBut I have a particular case, indeed my objects have specifics positions compared to others. I have a bone with anatomical points, when I load bones and anatomical points, they are automatically position on the bone at strategic position for future calculations.  If I move everything with THREE.GeometryUtils.center( geometry ) I loose the position of anatomicals points.\nIf I use mesh.geometry.applyMatrix( new THREE.Matrix4().setTranslation( -10,-22,-30 ) ) I keep the relative position of my objects but the position (0,0,0) of my object corresponds to the initial position of it. So when I use this.object.geometry.applyMatrix(this.object.matrix.setRotationY( Math.PI/2) ); I turn around the relative position of the object (0,0,0) and not the absolute position which must be the center of the frame (0,0,0). I need to be able to specify the center of the rotation or to be in the case where the center of rotation is the center of the frame and that my objects keep the relative position to other object. I need to move all objects like a same unity on the center of the frame.\n\nI hope that my explications are clear ^^ \n"
      },
      {
        "user": "mrdoob",
        "created_at": "2012-03-30T03:39:33Z",
        "body": "Then use a dummy object.\n\n``` javascript\nvar dummy = new THREE.Object3D();\ndummy.position.set( -10,-22,-30 );\nscene.add( dummy );\n\ndummy.add( mesh );\n```\n\nNow you can rotate `dummy` and it will rotate the contents as expected.\n"
      },
      {
        "user": "mrdoob",
        "created_at": "2012-03-30T11:40:28Z",
        "body": "Actually, that's wrong. It should be like this:\n\n``` javascript\nvar dummy = new THREE.Object3D();\nscene.add( dummy );\n\nmesh.position.set( -10,-22,-30 );\ndummy.add( mesh );\n```\n\nNow you can rotate `dummy` ;)\n"
      }
    ]
  },
  {
    "number": 1588,
    "title": "Use of TrackballControls and ray.intersectObject together",
    "created_at": "2012-03-25T21:48:26Z",
    "closed_at": "2012-04-09T00:19:04Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/1588",
    "body": "I have been attempting to combine TrackballControls together with object selection using ray.intersectObject, by combining code from the webgl_interactive_draggablecubes example and the webgl_trackballcamera_earth examples. I have been able to get both effects happening but not reliably. For example, in one case the object selection happened when the mouse wasn't quite pointing at the objects. Can anyone point me to an example where these two features are combined, please?\n\nThank you.\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/1588/comments",
    "author": "robertf",
    "comments": [
      {
        "user": "powerslave",
        "created_at": "2012-04-07T03:46:57Z",
        "body": "I had issues with non-exact picking that was caused by incorrect window dimensions. Once I added the window resize event that correctly updates width and height of renderer, camera and trackball controls, picking was fine.\n"
      }
    ]
  },
  {
    "number": 1561,
    "title": "Bounding box with rotation",
    "created_at": "2012-03-21T18:53:52Z",
    "closed_at": "2012-03-26T04:03:08Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/1561",
    "body": "I'm experimenting with collision detection and I'm trying to build AABBs for objects in my game.\n\nShould I be using the computeBoundingBox method from Geometry.js for this purpose? I'm drawing the box as a mesh but it doesn't take rotation into account. I would expect it to resize when I recompute it after the object rotates.\n\nFrom the source code it looks like computeBoundingBox relies on the geometry vertices, but I notice that these don't change with the mesh rotation. \n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/1561/comments",
    "author": "mhluska",
    "comments": [
      {
        "user": "libe",
        "created_at": "2012-03-25T08:11:42Z",
        "body": "Geometry AABB is computed in \"object space\". You need to transform object space AABB in world space AABB if you applied a transform to your objects: \n\nSomething like this should do it:\n\n``` javascript\nfunction unionBBox( b, p )\n{\n    var r = new Object();\n    r.min = b.min.clone();\n    r.max = b.max.clone();\n\n    r.min.x = Math.min( b.min.x, p.x );\n    r.min.y = Math.min( b.min.y, p.y );\n    r.min.z = Math.min( b.min.z, p.z );\n    r.max.x = Math.max( b.max.x, p.x );\n    r.max.y = Math.max( b.max.y, p.y );\n    r.max.z = Math.max( b.max.z, p.z );\n\n    return r;\n}\n\n\nfunction transformBBox(b, matrix) \n{   \n    var ret = new Object();\n    ret.min = matrix.multiplyVector3(new THREE.Vector3(b.min.x, b.min.y, b.min.z));\n    ret.max = matrix.multiplyVector3(new THREE.Vector3(b.min.x, b.min.y, b.min.z));\n\n    ret = unionBBox(ret, matrix.multiplyVector3(new THREE.Vector3(b.max.x, b.min.y, b.min.z)));\n    ret = unionBBox(ret, matrix.multiplyVector3(new THREE.Vector3(b.min.x, b.max.y, b.min.z)));\n    ret = unionBBox(ret, matrix.multiplyVector3(new THREE.Vector3(b.min.x, b.min.y, b.max.z)));\n    ret = unionBBox(ret, matrix.multiplyVector3(new THREE.Vector3(b.min.x, b.max.y, b.max.z)));\n    ret = unionBBox(ret, matrix.multiplyVector3(new THREE.Vector3(b.max.x, b.max.y, b.min.z)));\n    ret = unionBBox(ret, matrix.multiplyVector3(new THREE.Vector3(b.max.x, b.min.y, b.max.z)));\n    ret = unionBBox(ret, matrix.multiplyVector3(new THREE.Vector3(b.max.x, b.max.y, b.max.z)));\n\n    return ret;\n}\n\nvar bboxWorldSpace = transformBBox(mesh.geometry.boundingBox, mesh.matrixWorld);\n```\n"
      },
      {
        "user": "mhluska",
        "created_at": "2012-03-26T17:17:39Z",
        "body": "I ended up writing the code a little differently. I transform the original bounding box then find the AABB of that:\n\n```\nthis.computeWorldSpaceBoundingBox = function (mesh) {\n\n    mesh.geometry.computeBoundingBox();\n\n    var box = mesh.geometry.boundingBox,\n        geom = new THREE.Geometry();\n\n    geom.vertices = [\n        new THREE.Vertex(mesh.matrixWorld.multiplyVector3(new THREE.Vector3(box.min.x, box.min.y, box.min.z))),\n        new THREE.Vertex(mesh.matrixWorld.multiplyVector3(new THREE.Vector3(box.max.x, box.min.y, box.min.z))),\n        new THREE.Vertex(mesh.matrixWorld.multiplyVector3(new THREE.Vector3(box.min.x, box.max.y, box.min.z))),\n        new THREE.Vertex(mesh.matrixWorld.multiplyVector3(new THREE.Vector3(box.min.x, box.min.y, box.max.z))),\n        new THREE.Vertex(mesh.matrixWorld.multiplyVector3(new THREE.Vector3(box.min.x, box.max.y, box.max.z))),\n        new THREE.Vertex(mesh.matrixWorld.multiplyVector3(new THREE.Vector3(box.max.x, box.max.y, box.min.z))),\n        new THREE.Vertex(mesh.matrixWorld.multiplyVector3(new THREE.Vector3(box.max.x, box.min.y, box.max.z))),\n        new THREE.Vertex(mesh.matrixWorld.multiplyVector3(new THREE.Vector3(box.max.x, box.max.y, box.max.z)))\n    ];\n    geom.computeBoundingBox();\n    return geom.boundingBox;\n}\n```\n"
      }
    ]
  },
  {
    "number": 1560,
    "title": "THREE.MeshFaceMaterial support morph targets?",
    "created_at": "2012-03-21T17:16:27Z",
    "closed_at": "2012-03-21T19:31:48Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/1560",
    "body": "Hey,\nJust wondering if MeshFaceMaterial supports morph targets? I'm currently using this code \n\n``` javascript\nvar loader = new THREE.JSONLoader( true );\nloader.load( \"models/bird/bird13.js\", function( geometry ) {\n       geometry.computeMorphNormals();\n       var material = new THREE.MeshFaceMaterial( {  morphTargets: true, morphNormals: true } );\n       mesh1 = new THREE.MorphAnimMesh( geometry, material );\n       mesh1.duration = 3200;\n       morphs.push(mesh1);\n       scene.add(mesh1);\n} );\n```\n\nThe model loads but nothing else. However this code works fine when I use MeshLambertMaterial.\nThanks :)\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/1560/comments",
    "author": "ghost",
    "comments": [
      {
        "user": "alteredq",
        "created_at": "2012-03-21T18:45:44Z",
        "body": "`MeshFaceMaterial` is just pass-through material, it doesn't do anything by itself, just tells renderer to use `geometry.materials` (which are initialized from JSON). \n\nSo to get any visible change in materials that were created from JSON, you need to mess directly with them:\n\n``` javascript\ngeometry.materials[ 0 ].morphTargets = true;\ngeometry.materials[ 0 ].morphNormals = true;\n```\n"
      }
    ]
  },
  {
    "number": 1542,
    "title": "JSONLoader Geometry not being added to the scene.",
    "created_at": "2012-03-19T08:23:00Z",
    "closed_at": "2012-03-20T11:05:27Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/1542",
    "body": "I have used the max exporter to export a simple plane and added this to the scene. That works so far and shows up in the scene. Next I used the obj converter to export a textured cube and tried adding this to scene. The scene loads up but the cube is nowhere to be seen. Here is the code I have been using. \n\n``` javascript\nnew THREE.JSONLoader().load('plane.js', function(geometry){\n\n    var material = new THREE.MeshLambertMaterial(); \n    var mesh = new THREE.Mesh( geometry, material );\n    scene.add( mesh );\n})\n\nvar jsonLoader = new THREE.JSONLoader();\njsonLoader.load( \"obj/example/box.js\", function( geometry ) { createScene( geometry ) } );\n\nfunction createScene( geometry ) {\n\n    var mesh = new THREE.Mesh( geometry, new THREE.MeshFaceMaterial() );\n\n}\n```\n\nAny suggestions? Thanks\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/1542/comments",
    "author": "birkin169",
    "comments": [
      {
        "user": "jokedst",
        "created_at": "2012-03-19T10:10:00Z",
        "body": "Well, you never actually add the box to the scene. Try putting a `scene.add(mesh)` in createScene.\n"
      },
      {
        "user": "chandlerprall",
        "created_at": "2012-03-19T15:18:29Z",
        "body": "For what it's worth, you should also change\n\n``` javascript\njsonLoader.load( \"obj/example/box.js\", function( geometry ) { createScene( geometry ) }  );\n```\n\nto\n\n``` javascript\njsonLoader.load( \"obj/example/box.js\", createScene );\n```\n\nThis will prevent the creation of the unnecessary anonymous function and make the code more readable.\n"
      }
    ]
  },
  {
    "number": 1503,
    "title": "CanvasRenderer.js include...",
    "created_at": "2012-03-14T09:40:15Z",
    "closed_at": "2012-03-24T00:27:23Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/1503",
    "body": "I have checked the Three.js file and I found a CanvasRenderer function inside...\nIf I want to call the CanvasRenderer.js file/include, is it some kind of override?\n\nHow can I imlement the CanvasRenderer.js and not the function inside Three.js?\n\nI'm having the same issue, and I'm trying to implement the same changes...without luck:\n#1440\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/1503/comments",
    "author": "BorisDutkin",
    "comments": [
      {
        "user": "mrdoob",
        "created_at": "2012-03-16T06:29:09Z",
        "body": "You should be able to do something like this:\n\n``` html\n<script src=\"js/Three.js\"></script>\n<script src=\"js/CanvasRenderer.js\"></script>\n```\n"
      }
    ]
  },
  {
    "number": 1489,
    "title": "Cannot add a mesh to two scenes?",
    "created_at": "2012-03-12T07:47:44Z",
    "closed_at": "2012-03-13T13:37:42Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/1489",
    "body": "It seems that if I add a mesh M to both scene A & scene B (with the same set of objects but different lighting), it is rendered only in scene B instead of being shown in both scenes. Do I have to clone the mesh if I want to render it in different scenes? \n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/1489/comments",
    "author": "huanghuan",
    "comments": [
      {
        "user": "WestLangley",
        "created_at": "2012-03-12T13:29:08Z",
        "body": "Yes, you have to clone it. An object cannot have two parents.\n\nHave a look at `Object3D.add( object ).`\n"
      },
      {
        "user": "mrdoob",
        "created_at": "2012-03-31T01:51:02Z",
        "body": "Because every object needs to have a parent object. When adding to the scene1 we're doing `object.parent = scene1`. If you add it to scene2 then `object.parent = scene2`.\n"
      }
    ]
  },
  {
    "number": 1487,
    "title": "what metrics?",
    "created_at": "2012-03-11T19:22:57Z",
    "closed_at": "2012-03-13T14:17:56Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/1487",
    "body": "i have a question what unit of measurement are used for figure coordinates, pixel or something else?\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/1487/comments",
    "author": "vladimir123",
    "comments": [
      {
        "user": "LiquidSnakeX",
        "created_at": "2012-03-13T05:29:50Z",
        "body": "The units in 3D applications usually don't correspond to anything in particular, they're simply there to make relative measurements in your scene, and as far as I know Three.js is the same.\n\nYou can assume a unit can be a centimetre, or a kilometre or anything else you like,\nit's just there to help you keep the sizes of objects consistent in relation to each other.\n"
      }
    ]
  },
  {
    "number": 1432,
    "title": "Scene scaling",
    "created_at": "2012-03-01T19:11:53Z",
    "closed_at": "2012-03-02T10:03:05Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/1432",
    "body": "Hi there,\n\nfirst I'd like to thank for three.js, the library is awesome.\nI'm rather new to it though and I've got a question concerning the scaling of the scene: I couldn't find a scale or the equivalent of the GL_MODELVIEW matrix property in the scene or the camera, and was wondering how I could perform the equivalent of a glScalef to change the scale of all a scene's objects at once. The other option would be to change the scale of each object individually, obviously, but it'd be way easier to just change the model/view matrix.\n\nThanks,\n\nMax\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/1432/comments",
    "author": "Maxweel",
    "comments": [
      {
        "user": "WestLangley",
        "created_at": "2012-03-02T05:23:56Z",
        "body": "Add a dummy `object3D` to the scene, and then add the remaining objects as children of the dummy object. Then scale the dummy object like so:\n\n```\ndummy.scale.set( 2, 2, 2 );\n```\n\nMake sure the camera is a child of the scene, and not a child of the dummy object.\n"
      }
    ]
  },
  {
    "number": 1424,
    "title": "FitAll function implementation",
    "created_at": "2012-02-29T12:43:06Z",
    "closed_at": "2012-03-02T10:25:58Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/1424",
    "body": "Hi, I have a new `THREE.PerspectiveCamera` and a `THREE.TrackballControls` in my scene and I am trying to implement a function that fit all the models in the scene maintaing the camera direction. I am having an hard time to getting this functionality working.\n\nWhat I'm doing is:\n-    Compute scene bounding box\n-    Compute the \"radius\" of that bounding box getting half of its diagonal\n-    Compute an offset that move back the camera from the scene bounding box center that much needed to center a sphere with the \"radius\" of scene bounding box given the camera vertical field of view\n-   Update the camera position\n\nWith this code:\n\n``` javascript\nfunction fitAll()\n{   \n    // Compute world AABB           \n    var aabbMin = new THREE.Vector3();\n    var aabbMax = new THREE.Vector3();\n    for (var m = 0; m < meshes.length; m++) \n    {\n        var geo = meshes[m];\n\n        aabbMin.x = Math.min(aabbMin.x, geo.boundingBox.min.x);\n        aabbMin.y = Math.min(aabbMin.y, geo.boundingBox.min.y);\n        aabbMin.z = Math.min(aabbMin.z, geo.boundingBox.min.z);\n        aabbMax.x = Math.max(aabbMax.x, geo.boundingBox.max.x);\n        aabbMax.y = Math.max(aabbMax.y, geo.boundingBox.max.y);\n        aabbMax.z = Math.max(aabbMax.z, geo.boundingBox.max.z);                 \n    }\n\n    // Compute world AABB center\n    var aabbCenter = new THREE.Vector3();\n    aabbCenter.x = (aabbMax.x + aabbMin.x) * 0.5;\n    aabbCenter.y = (aabbMax.y + aabbMin.y) * 0.5;\n    aabbCenter.z = (aabbMax.z + aabbMin.z) * 0.5;\n\n    // Compute world AABB \"radius\"\n    var diag = new THREE.Vector3();\n    diag = diag.sub(aabbMax, aabbMin);\n    var radius = diag.length() * 0.5;\n\n    // Compute offset needed to move the camera back that much needed to center AABB\n    // camera.fov is the vertical field of view\n    var offset = radius / Math.tan(Math.PI / 180.0 * camera.fov * 0.5);\n\n    // Compute new camera position\n    var dir = camera.matrix.getColumnZ();\n    dir.multiplyScalar(offset); \n    var newPos = new THREE.Vector3();\n    newPos.add(aabbCenter, dir);\n\n    // Update camera\n    camera.position.set( newPos.x, newPos.y, newPos.z );\n    camera.lookAt(aabbCenter);\n}\n\n```\n\nIn another raw OpenGL viewer I wrote this trick worked very well, guess I am missing some three.js stuff. Any tips?\n\nThanks\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/1424/comments",
    "author": "libe",
    "comments": [
      {
        "user": "WestLangley",
        "created_at": "2012-02-29T16:45:01Z",
        "body": "The 'radius' you are using in the 'offset' calculation should be the half-height of the bounding box, not the half-diagonal.\n\nThe camera setback should be computed from the front-face of the bounding box, not it's center.\n\nAnd the bounding box should be oriented to face the camera, not parallel to the axes.\n\nOtherwise, the math looks correct.\n"
      },
      {
        "user": "libe",
        "created_at": "2012-03-02T13:35:35Z",
        "body": "Thanks @WestLangley! Your suggestion made the fit \"center perfect\" but there's another issue with the code above: I had to change the way I update the camera to: \n\n``` javascript\ncamera.position.set( newPos.x, newPos.y, newPos.z );\ncamera.rotationAutoUpdate = false;\ncamera.lookAt(aabbCenter);  \n```\n\nbecause I wanted to rigidly translate the camera orientation.\n\nUnfortunately,  as a side effect how this change, `THREE.TrackballControls` loses the ability to rotate the scene around its center as before: my guess is that its internal rotations are not updated with the new camera position. As an ugly but effective hack I need to recreate `THREE.TrackballControls` on every fitAll command but that's the way it is sometimes...:)\n\n``` javascript\n// Update camera\ncamera.rotationAutoUpdate = false;\ncamera.position.set( newPos.x, newPos.y, newPos.z );\ncamera.lookAt(aabbCenter);  \ncamera.rotationAutoUpdate = true;\ncontrols = new THREE.TrackballControls( camera, renderer.domElement );              \n```\n"
      },
      {
        "user": "libe",
        "created_at": "2012-03-02T15:39:52Z",
        "body": "I post for reference the  fitAll implementation: \n\n``` javascript\n\nfunction fitAll()\n{   \n    // Compute world AABB and radius (approx: better compute BB be in camera space)         \n    var aabbMin = new THREE.Vector3();\n    var aabbMax = new THREE.Vector3();\n    var radius = 0;\n    for (var m = 0; m < meshes.length; m++) \n    {\n        var geo = meshes[m];\n\n        aabbMin.x = Math.min(aabbMin.x, geo.boundingBox.min.x);\n        aabbMin.y = Math.min(aabbMin.y, geo.boundingBox.min.y);\n        aabbMin.z = Math.min(aabbMin.z, geo.boundingBox.min.z);\n        aabbMax.x = Math.max(aabbMax.x, geo.boundingBox.max.x);\n        aabbMax.y = Math.max(aabbMax.y, geo.boundingBox.max.y);\n        aabbMax.z = Math.max(aabbMax.z, geo.boundingBox.max.z);\n    }\n\n    // Compute world AABB center\n    var aabbCenter = new THREE.Vector3();\n    aabbCenter.x = (aabbMax.x + aabbMin.x) * 0.5;\n    aabbCenter.y = (aabbMax.y + aabbMin.y) * 0.5;\n    aabbCenter.z = (aabbMax.z + aabbMin.z) * 0.5;\n\n    // Compute world AABB \"radius\" (approx: better if BB height)\n    var diag = new THREE.Vector3();\n    diag = diag.sub(aabbMax, aabbMin);\n    var radius = diag.length() * 0.5;\n\n    // Compute offset needed to move the camera back that much needed to center AABB (approx: better if from BB front face)\n    var offset = radius / Math.tan(Math.PI / 180.0 * camera.fov * 0.5);\n\n    // Compute new camera position\n    var dir = camera.matrix.getColumnZ();\n    dir.multiplyScalar(offset); \n    var newPos = new THREE.Vector3();\n    newPos.add(aabbCenter, dir);\n\n    // Update camera (ugly hack to reset THREE.TrackballControls)\n    camera.rotationAutoUpdate = false;\n    camera.position.set( newPos.x, newPos.y, newPos.z );\n    camera.lookAt(aabbCenter);  \n    camera.rotationAutoUpdate = true;\n    controls = new THREE.TrackballControls( camera, renderer.domElement );\n    controls.target = aabbCenter;\n}\n\n```\n"
      }
    ]
  },
  {
    "number": 1418,
    "title": "Is there a way to use Nearest Neighbour scaling for textures?",
    "created_at": "2012-02-28T14:40:23Z",
    "closed_at": "2012-02-29T10:11:32Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/1418",
    "body": "I am trying to use pixel art for my models and I'm loading a 16x16 .png for each face of a cube. Textures seem to be scaled using something that looks similar to Photoshop's Bicubic option, and this causes the pixel art to blur. Is there a way I can scale them in a manner more similar to Photoshop's Nearest Neighbour option, and preserve the sharp edges?\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/1418/comments",
    "author": "lavelle",
    "comments": [
      {
        "user": "alteredq",
        "created_at": "2012-02-28T16:47:16Z",
        "body": "For `WebGLRenderer`:\n\n``` javascript\ntexture.minFilter = THREE.NearestFilter;\ntexture.magFilter = THREE.NearestFilter;\n```\n\nFor `CanvasRenderer` this is more complicated and browser-specific but at least to some extent possible. See #1164\n"
      }
    ]
  },
  {
    "number": 1410,
    "title": "Detecting a non dragging click",
    "created_at": "2012-02-27T20:45:01Z",
    "closed_at": "2012-02-27T23:37:29Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/1410",
    "body": "Hi,\nI'm working on a project using Three.js and am currently using the TrackballControls (Until I possibly write my own application specific ones).\n\nThe problem I have is:\nI'm Raycasting to detect any clicks on certain objects in my scene.\nWhen someone clicks one, an info window appears showing info about the object.\nWhat I want to happen then is if they click anywhere (e.g. not registering a intersection with the Ray / the intersects returned is 0) then it closes the info box.\nSounds simple enough except when I click and drag it also hides the info box.\nI need some way to determine between a click and drag for the trackballcontrol and a click just to select nothing.\n\nThanks in advance.\nCode available if needed :)\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/1410/comments",
    "author": "chrisella",
    "comments": [
      {
        "user": "chandlerprall",
        "created_at": "2012-02-27T23:16:47Z",
        "body": "Listen for `onmousedown` event and when it happens store the event's `clientX` and `clientY` parameters. Then listen for `onmouseup` and if the new `clientX` and `clientY` values haven't changed then no dragging happened.\n"
      },
      {
        "user": "chandlerprall",
        "created_at": "2012-02-28T00:34:54Z",
        "body": "Just for the sake of cleaner code & scope, might I suggest using a closure:\n\n``` javascript\n(function() {\n\n    var clientClickX, clientClickY;\n\n    renderer.domElement.addEventListener('mousedown', function(ev){\n        clientClickX = ev.clientX;\n        clientClickY = ev.clientY;\n    }, false);\n\n    renderer.domElement.addEventListener('mouseup', function (ev){\n        if (ev.target == renderer.domElement) {\n            var x = ev.clientX;\n            var y = ev.clientY;\n            // If the mouse moved since the mousedown then don't consider this a selection\n            if( x != clientClickX || y != clientClickY )\n                return;\n\n            var v = new THREE.Vector3((x/window.innerWidth)*2-1, -(y/window.innerHeight)*2+1, 0.5);\n            projector.unprojectVector(v, camera);\n            var ray = new THREE.Ray(camera.position, \n                            v.subSelf(camera.position).normalize());\n            var intersects = ray.intersectObjects(SOLARSIM.OrbitalObjectsMeshes());\n            if (intersects.length > 0) {\n                SOLARSIM.GUI.ShowObjectInfo( intersects[0].object.name );\n            } else {\n                // Nothing Clicked so set the currently selected object to nothing\n                SOLARSIM.CurrentlySelectedPlanet = null;\n                SOLARSIM.GUI.HideObjectInfo();\n            }\n        }\n    }, false);\n\n})();\n```\n"
      },
      {
        "user": "klich3",
        "created_at": "2021-04-15T10:21:26Z",
        "body": "Hi everyone I have same solution for **OrbitController**\r\n\r\n```\r\nconst clickCoords = new THREE.Vector2();\r\nconst controls = new OrbitControls(camera, renderer.domElement);\r\n\r\ncontrols.addEventListener('start', (e) => {\r\n        clickCoords.x = e.target.target.x;\r\n\tclickCoords.y = e.target.target.y;\r\n});\r\n\r\ncontrols.addEventListener('end', (e) => {\r\n\tif (clickCoords.x == e.target.target.x && clickCoords.y == e.target.target.y) return onClickHandler(e);\r\n});\r\n\r\nconst onClickHandler = (event) => {\r\n        //Do someting\r\n}\r\n```\r\n\r\nI hope it will be useful for someone in the future\r\nRegards"
      },
      {
        "user": "bel7aG",
        "created_at": "2022-10-04T18:01:33Z",
        "body": "You can check this with a delay, eg. :\r\n \r\n - save the timestamp for pointer up and down event:\r\n \r\n ```\r\nonPointerDown={() => (pointerDownTimestampRef.current = Date.now())}\r\n onPointerUp={() => (pointerUpTimestampRef.current = Date.now())}\r\n```\r\n\r\n- Substract the up with the down event on your handler\r\n\r\n`const isNearlyAClick = pointerUpTimestampRef.current - pointerDownTimestampRef.current < 100 // in ms`\r\n"
      }
    ]
  },
  {
    "number": 1407,
    "title": "set TextGeometry pivot point",
    "created_at": "2012-02-27T10:29:57Z",
    "closed_at": "2012-02-27T11:12:59Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/1407",
    "body": "Hi, I wonder how can I use the lookAt() method with a TextGeometry.\nI saw only a hack  for positioning a text:\n\n``` javascript\nvar centerOffset = -0.5 * ( textGeo.boundingBox.max.x - textGeo.boundingBox.min.x );\ntextMesh1.position.x = centerOffset;\n```\n\nBut If I use `lookAt()`  with text object It rotates from the bottom-left.\n\nWrapping the `TextGeometry` in a `Object3D` does not help either.. or at least I failed..\n\nIm also interested in setting base point for other geometries.\n\nThanks for helping..\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/1407/comments",
    "author": "zsitro",
    "comments": [
      {
        "user": "ColasMarko",
        "created_at": "2012-02-27T11:01:09Z",
        "body": "Right after generating your TextGeometry you should center the pivot using `THREE.GeometryUtils.center( geometry )`.\n"
      },
      {
        "user": "that-ben",
        "created_at": "2017-05-19T23:56:17Z",
        "body": "Now, you do this with: `textGeo.center();`"
      }
    ]
  },
  {
    "number": 1400,
    "title": "Load image with  Explorer 9",
    "created_at": "2012-02-27T01:03:00Z",
    "closed_at": "2012-03-04T20:39:47Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/1400",
    "body": "Hi,\nI have insert un image into panel, but is not supported by Explorer 9\nthere is another way to load an image into a scene to rotate?\n\nThanks\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/1400/comments",
    "author": "corsaronero",
    "comments": [
      {
        "user": "LiquidSnakeX",
        "created_at": "2012-02-27T18:04:45Z",
        "body": "Could you edit the post to include a sample of your code to make it easier to see what's going on?\n\n(Note that if you're using `THREE.WebGLRenderer`, IE doesn't natively support WebGL)\n"
      },
      {
        "user": "corsaronero",
        "created_at": "2012-02-27T18:09:18Z",
        "body": "Hi, no I using CanvasReader\nI plan to insert an image into the scene with canvas reader with support for IE is possible?\nhow can I do?\n\n``` javascript\nplane = new THREE.PlaneGeometry(850, 400, 1, 1);\nvar mat1 = new THREE.MeshLambertMaterial({\n    map: THREE.ImageUtils.loadTexture('textures/city/01.jpg'), overdraw: true\n});\n\nmesh = new THREE.Mesh(plane, mat1);\nmesh.scale.x = mesh.scale.y = mesh.scale.z = 1;\nmesh.position.z = 220;\n```\n\nThanks!\n"
      },
      {
        "user": "corsaronero",
        "created_at": "2012-02-27T19:31:40Z",
        "body": "``` javascript\n function init() {\n\n                container6 = document.getElementById('topBirds');\n                camera3 = new THREE.PerspectiveCamera(75, SCREEN_WIDTH / SCREEN_HEIGHT, 1, 10000);\n                camera3.position.z = 450;\n\n                scene3 = new THREE.Scene();\n                scene3.add(camera3);\n                 plane = new THREE.PlaneGeometry(850, 400, 1, 1);\n                var mat1 = new THREE.MeshLambertMaterial({\n                    map: THREE.ImageUtils.loadTexture('textures/city/01.jpg'), overdraw: true\n                });\n\n                mesh = new THREE.Mesh(plane, mat1);\n                mesh.scale.x = mesh.scale.y = mesh.scale.z = 1;\n                                mesh.position.z = 220;\n                                scene3.add(mesh);\n                renderer6 = new THREE.CanvasRenderer({ antialias: false });\n                renderer6.setSize(850, 390);\n                container6.appendChild(renderer6.domElement);\n\n\n            }\n\n function animate() {\n\n                requestAnimationFrame(animate);\n\n                render();\n\n            }\n\n            function render() {\n\n                renderer6.render(scene3, camera3);\n\n            }\n```\n"
      },
      {
        "user": "mrdoob",
        "created_at": "2012-03-01T14:26:33Z",
        "body": "Try changing `MeshLambertMaterial` to `MeshBasicMaterial`.\n"
      }
    ]
  },
  {
    "number": 1380,
    "title": "Static light positions in scene ",
    "created_at": "2012-02-22T15:17:46Z",
    "closed_at": "2012-02-22T15:51:13Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/1380",
    "body": "Hi,\n\nI would like to have a light attached to the Camera so that it does not rotate when I rotate the whole scene through `THREE.TrackballControls`. \n\nI am setting up lights like this:\n\n``` javascript\nvar light = new THREE.DirectionalLight( 0xFFFFFF, 1 );\nlight.position.set( -0.65, 0.59, 0.48 ).normalize();\nscene.add( light );\n```\n\nI think the problem is because lights are binded to the scene. In OpenGL I could set them with an identity modelView matrix and have them fixed but not really sure how to do this with three.js. Has anybody had this problem before?\n\nThanks\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/1380/comments",
    "author": "libe",
    "comments": [
      {
        "user": "chandlerprall",
        "created_at": "2012-02-22T15:27:33Z",
        "body": "You can add the light to the camera with `camera.add( light )`. Then the light's `position` is relative to the camera's\n"
      }
    ]
  },
  {
    "number": 1358,
    "title": "smooth shading?",
    "created_at": "2012-02-19T16:53:27Z",
    "closed_at": "2012-02-20T13:09:11Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/1358",
    "body": "Hi \nI have one probem \nI have a balloon created with blender exported three.js\nwhen I load the red balloon is not smooth but has many square\n\nThanx\n\n``` javascript\nvar container = document.getElementById( 'container' );\n\ncamera = new THREE.PerspectiveCamera( 10, window.innerWidth / window.innerHeight, 1, 1000 );\ncamera.position.y = - 6;\ncamera.position.z = 100;\n\nscene = new THREE.Scene();\n\nvar light = new THREE.DirectionalLight(0xffffff);\nlight.position.set(0, 0, 1).normalize();\nscene.add(light);\n\nloader = new THREE.JSONLoader();\nloader.load('obj/balloon-tutorial.js', function (geometry) {\n    geometry.materials[0].shading = THREE.FlatShading;\n\n    mesh = new THREE.Object3D();\n    mesh.position.x = 0;\n    mesh.scale.x = mesh.scale.y = mesh.scale.z = 1;\n    scene.add(mesh);\n    geometry.computeVertexNormals();\n    var part1 = new THREE.Mesh(geometry, new THREE.MeshFaceMaterial());\n\n    mesh.add(part1);\n\n   var part2 = new THREE.Mesh(geometry, new THREE.MeshNormalMaterial({ color: 0xffffff, shading: THREE.FlatShading, overdraw: true }));\n   mesh.add(part2);\n\n});\n\nrenderer = new THREE.WebGLRenderer({ antialias: true });\nrenderer.setSize( window.innerWidth, window.innerHeight );\ncontainer.appendChild( renderer.domElement );\n```\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/1358/comments",
    "author": "corsaronero",
    "comments": [
      {
        "user": "mrdoob",
        "created_at": "2012-02-20T01:10:29Z",
        "body": "Tried with `shading: THREE.SmoothShading`?\n"
      }
    ]
  },
  {
    "number": 1344,
    "title": "How can I specify the up direction when using camera.lookAt?",
    "created_at": "2012-02-16T18:06:38Z",
    "closed_at": "2012-02-17T02:29:59Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/1344",
    "body": "Just wonder how can I specify the up direction (a.k.a. up vector) when using camera.lookAt? Say I positioned my camera to look from point A to point B but I also want to spin the camera around axis AB. How can this be possible without an up vector?\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/1344/comments",
    "author": "huanghuan",
    "comments": [
      {
        "user": "chandlerprall",
        "created_at": "2012-02-16T18:13:50Z",
        "body": "Anything which extends `Object3D`, such as cameras, have an `up` vector. By default it's set to (0,1,0)\n"
      }
    ]
  },
  {
    "number": 1322,
    "title": "Making a cylinder transparent",
    "created_at": "2012-02-14T03:06:01Z",
    "closed_at": "2012-02-14T04:17:28Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/1322",
    "body": "Can I adjust the alpha on a simple geometry like a cylinder?  Let's say I want to push people through a tube (like Futurama) and I want to see into the tube as they pass through (but still see the boundaries of the tube itself).  Can I do this with a Material, or would I need to use a simple Texture?\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/1322/comments",
    "author": "mscongdon",
    "comments": [
      {
        "user": "mrdoob",
        "created_at": "2012-02-14T03:40:58Z",
        "body": "``` javascript\nmesh.material.opacity = 0.5;\n```\n"
      }
    ]
  },
  {
    "number": 1315,
    "title": "using the three.js exporter from Blender directly",
    "created_at": "2012-02-12T06:10:05Z",
    "closed_at": "2012-02-12T15:33:27Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/1315",
    "body": "Hi , guys, how to deploy three.js in 2.61 ? I place io_mesh_threejs into dir `Blender Foundation\\Blender\\2.61\\scripts\\addons\\`, \nrestart blender2.61 and without option in `File -> Export -> Three.js`. pls tell me how to fix it, many thanks.\n\nthreejs version is most updated `r47`.\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/1315/comments",
    "author": "HiZhaoxiaoyang",
    "comments": [
      {
        "user": "fuzihaofzh",
        "created_at": "2012-02-12T06:36:12Z",
        "body": "you should enable File->User Preference->addons  Import-Export three.js meshes  tick it;\n"
      }
    ]
  },
  {
    "number": 1312,
    "title": "How to convert 3D plane corners to 2D screen co-ordinates?",
    "created_at": "2012-02-11T19:45:18Z",
    "closed_at": "2012-02-12T03:31:09Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/1312",
    "body": "Hi, \n\nI'm using an external image material on a PlaneGeometry plane for the floor of my 3D space (i.e. it lies flat, along the z-axis), and I'm adding blocks on top for the 3D elements. As I'm using the CanvasRenderer, the blocks look fine while the floor isn't good enough (I understand the issues with affine transformations which makes this so). \n\nSo, when the user wants to save their view, my intention is to turn off the floor, upload a PNG of just the 3D blocks to the server, then re-render the floor on the server using ImageMagick by distorting the floor image, and then I can add the canvas-rendered block image on top. \n\nThe problem I have is this: I can't figure out how to get the 2D screen co-ordinates of my floor out of the 3D space. If I can get these, then I can pass them to ImageMagick to distort the image appropriately. \n\nAny help is appreciated. Thanks in advance!\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/1312/comments",
    "author": "joloco",
    "comments": [
      {
        "user": "mrdoob",
        "created_at": "2012-02-12T02:04:22Z",
        "body": "Try something like this:\n\n``` javascript\nvar projector = new THREE.Projector();\n\nvar vector = projector.projectVector( geometry.vertices[ 0 ].position.clone(), camera );\nvector.x *= canvas.width;\nvector.y *= canvas.height;\n```\n"
      },
      {
        "user": "joloco",
        "created_at": "2012-02-12T03:31:09Z",
        "body": "Thank you very much, that did the trick! \n\nFor anyone else needing a little more, here's my finished code. The centre of the floor area is located at 0,0,0 and in this snippet I'm finding out the 2D co-ordinate of the bottom-left corner of the floor. (Get rid of the '0-' in the Vector3 to get the bottom-right corner, etc.) \n\n``` javascript\nvar geometry = new THREE.Geometry();\ngeometry.vertices.push( new THREE.Vertex( new THREE.Vector3( 0-(floor_width/2), 0, (floor_length/2) ) ) );\n\nvar projector = new THREE.Projector();\nvar vector = projector.projectVector( geometry.vertices[ 0 ].position.clone(), camera );\n\nvar result = new Object();\nresult.x = Math.floor(vector.x * (renderer.domElement.width/2));\nresult.y = Math.floor(vector.y * (renderer.domElement.height/2));\n```\n"
      },
      {
        "user": "joloco",
        "created_at": "2012-02-12T03:55:20Z",
        "body": "In fact, should anyone else need it, here's the code as a 3D-to-2D point conversion function. It assumes that the renderer is stored in a global variable called 'renderer', and that the camera is also in a global variable, called 'camera'. \n\n``` javascript\nfunction calc2Dpoint(x,y,z) {\n\n    var projector = new THREE.Projector();\n    var vector = projector.projectVector( new THREE.Vector3( x, y, z ), camera );\n\n    var result = new Object();\n    result.x = Math.round(vector.x * (renderer.domElement.width/2));\n    result.y = Math.round(vector.y * (renderer.domElement.height/2));\n\n    return result;\n\n}\n```\n"
      },
      {
        "user": "drewnoakes",
        "created_at": "2012-09-20T20:25:25Z",
        "body": "@joloco, I had to tweak your code slightly to get it working for me. The projected vector seems to range from [1,1] to [-1,-1] in x/y (with the z adjusted to make it a unit vector), where (0,0) is the middle of the screen.\n\nThe change is only slight:\n\n```\nfunction calc2DPoint = function(worldVector)\n{\n    var vector = this.projector.projectVector(worldVector, this.camera);\n    var halfWidth = this.renderer.domElement.width / 2;\n    var halfHeight = this.renderer.domElement.height / 2;\n    return {\n        x: Math.round(vector.x * halfWidth + halfWidth),\n        y: Math.round(-vector.y * halfHeight + halfHeight)\n    };\n}\n```\n\nNotice that I added the halfHeight/Width again after multiplying (to bias it from the center of the screen) and also negated the y component of the resulting vector.\n"
      }
    ]
  },
  {
    "number": 1305,
    "title": "Avoid setting crossOrigin when dealing with data urls",
    "created_at": "2012-02-10T21:51:06Z",
    "closed_at": "2012-02-11T14:33:20Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/1305",
    "body": "Greetings,\n\nin this piece of code, can we avoid setting d.crossOrigin when we are dealing with a data url ?\n\n``` javascript\nTHREE.ImageUtils = {crossOrigin: \"\",loadTexture: function(a, b, c) {\n        var d = new Image, e = new THREE.Texture(d, b);\n        d.onload = function() {\n            e.needsUpdate = !0;\n            c && c(this)\n        };\n        d.crossOrigin = this.crossOrigin;\n        d.src = a;\n        return e\n```\n\nYou can add a check like this:\n\n``` javascript\nif( a.substr(0,4) != \"data\" )\n  d.crossOrigin = this.crossOrigin;\n```\n\nthis does the trick. Otherwise Chrome 17 throws a Cross-origin image load denied by Cross-Origin Resource Sharing policy for a data url.\n\nT.\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/1305/comments",
    "author": "konijn",
    "comments": [
      {
        "user": "mrdoob",
        "created_at": "2012-02-10T23:53:05Z",
        "body": "Hmm... I think you shouldn't use ImageUtils.loadTexture in that case. Just do this:\n\n``` javascript\nvar image = document.createElement( 'img' );\nimage.src = dataurl;\n\nvar texture = new THREE.Texture( image );\ntexture.needsUpdate = true;\n```\n"
      }
    ]
  },
  {
    "number": 1277,
    "title": "rendering datatexture",
    "created_at": "2012-02-08T17:15:38Z",
    "closed_at": "2012-02-08T20:06:24Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/1277",
    "body": "Currently trying to create a datatexture, made up of blue pixels and then applied to a sphere...However, the scene does not render.\n\nIs this a problem with my code? or a bug?\n\nWhen trying to render with a loaded image texture, it works fine (line 4)\n\n``` javascript\nvar textureWidth = 1250;\nvar textureHeight = 625;\n\nsphere = new THREE.SphereGeometry( 500, 60, 40 );\n//map = THREE.ImageUtils.loadTexture( 'img.jpg' );\n\nvar size = textureWidth * textureHeight;\nvar dataColor = new Uint8Array( size * 3 );\nfor (var i = 0; i < size; i ++) {\n    dataColor[ i * 3 ]     = 0;\n    dataColor[ i * 3 + 1 ] = 0;\n    dataColor[ i * 3 + 2 ] = 255;\n}\nmap = new THREE.DataTexture(dataColor, textureWidth, textureHeight, THREE.RGBFormat );\nmap.needsUpdate = true;\n\nmaterial = new THREE.MeshBasicMaterial( { wireframe: false, map: map } )\nmesh = new THREE.Mesh( sphere, material );\nmesh.scale.x = -1;\nscene.add( mesh );\n```\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/1277/comments",
    "author": "gibo",
    "comments": [
      {
        "user": "mrdoob",
        "created_at": "2012-02-08T17:57:04Z",
        "body": "Are you using `CanvasRenderer` or `WebGLRenderer`?\n"
      },
      {
        "user": "alteredq",
        "created_at": "2012-02-08T19:11:32Z",
        "body": "Code looks ok. You could try to use helper from `ImageUtils` instead, just to be sure (`dev` branch):\n\n``` javascript\nvar color = new THREE.Color( 0x0000ff );\nvar map = THREE.ImageUtils.generateDataTexture( width, height, color );\n```\n\nAlso your texture is not power-of-2 sized. I didn't try yet DataTexture that wouldn't be power-of-2 sized. DataTextures use directly typed arrays, it's possible there could be some restrictions.\n"
      }
    ]
  },
  {
    "number": 1254,
    "title": "Rotate a cube around it's edge.",
    "created_at": "2012-02-05T20:33:10Z",
    "closed_at": "2012-02-06T13:49:02Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/1254",
    "body": "Hi, Everybody!\n\nI was asking already about rotations around an arbitrary axis and got clear answers posted in #1219 and #1220.\n\nBut it's still unclear how to rotate a cube around one of it's edges (could anyone to share such a code if it exists).\n\nThere were posted two functions in #1219:\n\n``` javascript\nfunction rotateAroundObjectAxis( object, axis, radians ) { .. }\n```\n\nand\n\n``` javascript\nfunction rotateAroundWorldAxis( object, axis, radians ) { .. }\n```\n\nThey allow me to rotate a cube about an arbitrary axis that goes through the center of it's bounding box.\n\nWhat I need is to rotate an object around an arbitrary axis which is not necessarily goes though the object's center.\n\nHow to do that correctly?\n\nSorry, if I'm a bit annoying about that but I want to implement such a functionality.\n\nThanks.\n\nP.S. It seems that I need a function that looks like:\n\nfunction rotateAroundArbitraryAxis( object, axisDirection, axisBasePoint, radians ) { .. }\n\nby axisBasePoint I mean the point the specified axis goes through.\n\nI read on the Internet that such a rotation should be done in several steps:\n1. translate space so that the rotation axis passes through the origin.\n2. rotate space about the Z axis so that the rotation axis lies in the XZ plane.\n3. rotate space about the Y axis so that the rotation axis lies along Z axis.\n4. perform the desired rotation by Theta about the z axis.\n5. apply the inverse of step (3).\n6. apply the inverse of step (2).\n7. apply the inverse of step (1).\n\nDo I understand it correctly?\n\nHow to perform such an operation with three.js?\n\nI tried to multiply different (translation/rotation) matrices with each other in three.js but did not get the desired result :-(\n\nMany thanks.\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/1254/comments",
    "author": "ghost",
    "comments": [
      {
        "user": "mrdoob",
        "created_at": "2012-02-06T00:07:37Z",
        "body": "What about something like this?\n\n``` javascript\nvar dummy = new THREE.Object3D();\ndummy.position.x = 50;\ndummy.position.z = 50;\nscene.add( dummy );\n\nvar cube = new THREE.Mesh( new THREE.CubeGeometry( 100, 100, 100 ), new THREE.MeshBasicMaterial() );\ncube.position.x = - 50;\ncube.position.z = - 50;\ndummy.add( cube );\n```\n"
      },
      {
        "user": "ghost",
        "created_at": "2012-02-06T13:07:58Z",
        "body": "Thanks for the reply.\n\nUnfortunately, the cube in your example still rotates around it's local axis that goes through it's center no matter what I call:\n\n``` javascript\nfunction rotateAroundObjectAxis( object, axis, radians ) { .. }\n```\n\nor\n\n``` javascript\nfunction rotateAroundWorldAxis( object, axis, radians ) { .. }\n```\n\nWhat I really want to figure out is how to shift the axis of rotation of a particular object.\n\nMany thanks.\n"
      },
      {
        "user": "oosmoxiecode",
        "created_at": "2012-02-06T13:17:27Z",
        "body": "Did you try rotating the dummy/container instead of the cube?\n"
      },
      {
        "user": "mrdoob",
        "created_at": "2012-02-06T13:49:01Z",
        "body": "@oosmoxiecode Uops! Yeah, forgot that on my snippet.\n\n@Landlord Well, it's straightforward to me. It doesn't even require matrices knowledge ;) I guess is just a matter of thinking differently... Either way, internally, the same matrix calculations are happening.\n"
      }
    ]
  },
  {
    "number": 1225,
    "title": "Saving three.js geometry to json format",
    "created_at": "2012-01-31T17:54:37Z",
    "closed_at": "2012-01-31T18:45:34Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/1225",
    "body": "I want to save an object created dynamically in code to the JSON model format.  However, on loading the model back in, half of the faces are not visible.\n\nHere's the code I'm using to save a simple THREE.CubeGeometry object for example:\n\n``` javascript\nsaveGeometryToJSON: function (geometry) {\n    var i,\n        json = {\n            metadata: { \n                formatVersion: 3\n            },\n            scale: 1.000000,\n            materials: [],\n            vertices: [],\n            morphTargets: [],\n            morphColors: [],\n            normals: [],\n            colors: [],\n            uvs: [[]],                  \n            faces: []\n        };\n\n    for (i = 0; i < geometry.vertices.length; i++) {\n        json.vertices.push(geometry.vertices[i].position.x);\n        json.vertices.push(geometry.vertices[i].position.y);\n        json.vertices.push(geometry.vertices[i].position.z);\n    }\n\n    for (i = 0; i < geometry.faces.length; i++) {\n        json.faces.push(0); // bitmask with 3 vectors, and face normals\n\n        json.faces.push(geometry.faces[i].a);\n        json.faces.push(geometry.faces[i].b);\n        json.faces.push(geometry.faces[i].c);\n\n        json.normals.push(geometry.faces[i].normal.x);\n        json.normals.push(geometry.faces[i].normal.y);\n        json.normals.push(geometry.faces[i].normal.z);\n    }\n\n    return JSON.stringify(json);\n}\n```\n\nThis results in a .js file:\n\n``` json\n{\n    \"metadata\": {\n        \"formatVersion\":3\n    },\n    \"scale\":1,\n\n    \"materials\":[],\n    \"vertices\":[5,25,5,5,25,-5,5,-25,5,5,-25,-5,-5,25,-5,-5,25,5,-5,-25,-5,-5,-25,5],\n    \"morphTargets\":[],\n    \"morphColors\":[],\n    \"normals\":[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],\n    \"colors\":[],\n    \"uvs\":[[]],\n    \"faces\":[0,0,2,3,0,4,6,7,0,4,5,0,0,7,6,3,0,5,7,2,0,1,3,6]\n}\n```\n\nWhen loading the file back using the JSONLoader, half of the faces are not displayed.\n\nAny help would be greatly appreciated.\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/1225/comments",
    "author": "bagofjuice",
    "comments": [
      {
        "user": "chandlerprall",
        "created_at": "2012-01-31T17:57:10Z",
        "body": "Faces can be `THREE.Face3` or `THREE.Face4`. `Face4` objects have an additional vertice property, `d`.\n"
      },
      {
        "user": "bagofjuice",
        "created_at": "2012-01-31T18:45:34Z",
        "body": "I didn't notice that some of the faces were Face4 on the 'real' object.  The top 100 or so faces were all Face3.  \n\nThat seems to have solved it.  Thanks.\n"
      },
      {
        "user": "bagofjuice",
        "created_at": "2012-05-14T11:41:46Z",
        "body": "``` javascript\nsaveGeometryToJSON: function (geometry) {\n    var i,\n        json = {\n            metadata: { \n                formatVersion: 3\n            },\n            scale: 1.000000,\n            materials: [],\n            vertices: [],\n            morphTargets: [],\n            morphColors: [],\n            normals: [],\n            colors: [],\n            uvs: [[]],                  \n            faces: []\n        };\n\n    for (i = 0; i < geometry.vertices.length; i++) {\n        json.vertices.push(geometry.vertices[i].position.x);\n        json.vertices.push(geometry.vertices[i].position.y);\n        json.vertices.push(geometry.vertices[i].position.z);\n    }\n\n    for (i = 0; i < geometry.faces.length; i++) {\n        if (geometry.faces[i].d) {\n            json.faces.push(1);\n        } else {\n            json.faces.push(0);                 \n        }\n\n        json.faces.push(geometry.faces[i].a);\n        json.faces.push(geometry.faces[i].b);\n        json.faces.push(geometry.faces[i].c);\n\n        if (geometry.faces[i].d) {\n            json.faces.push(geometry.faces[i].d);\n        }\n\n        json.normals.push(geometry.faces[i].normal.x);\n        json.normals.push(geometry.faces[i].normal.y);\n        json.normals.push(geometry.faces[i].normal.z);\n    }\n\n    return JSON.stringify(json, null, '<br>');\n}\n```\n"
      }
    ]
  },
  {
    "number": 1209,
    "title": "How to determine objects in frustum for Canvas and GL?",
    "created_at": "2012-01-29T07:17:14Z",
    "closed_at": "2012-02-10T02:37:10Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/1209",
    "body": "I am using the WebGLRenderer as the primary and CanvasRenderer as a fallback and wonder how to determine the objects visible in the frustum for both.\n\nThanks much\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/1209/comments",
    "author": "TonyRogersAtWork",
    "comments": [
      {
        "user": "chandlerprall",
        "created_at": "2012-01-29T16:46:52Z",
        "body": "As of `r47` you can use the `THREE.Frustum` object. Looking at the renderer code I believe this will do it:\n\n``` javascript\nvar frustum = new THREE.Frustum;\nfrustum.setFromMatrix( new THREE.Matrix4().multiply( camera.projectionMatrix, camera.matrixWorldInverse ) );\nif ( frustum.contains( your_object )) {\n    [ your code here ]\n}\n```\n"
      },
      {
        "user": "TonyRogersAtWork",
        "created_at": "2012-02-02T19:14:18Z",
        "body": "Thanks!  This helped quite a bit.  I modified frustum.contains() for my purposes because my camera is inside a sphere of objects.  So I calculated the bounding radius and center point of each (Mesh) object then did this:\n\n``` javascript\nfunction inFrustum(center, radius, frustum)\n{\n    var distance;\n    var planes = frustum.planes;\n    for ( var i=0; i<6; i++ )\n    {\n        distance = planes[i].x * center.position.x +\n                      planes[i].y * center.position.y +\n                      planes[i].z * center.position.z +\n                      planes[i].w;\n\n        if (distance < -radius)\n        {\n            return false;\n        }\n    }\n\n    return true;\n}\n```\n"
      }
    ]
  },
  {
    "number": 1202,
    "title": "Rotation property of child objects inside a Collada Scene not working...",
    "created_at": "2012-01-27T21:41:55Z",
    "closed_at": "2012-01-29T17:20:16Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/1202",
    "body": "Hey,\n\nBelow are snippets of code from my experiment and I have found something odd:\n\n``` javascript\nmesh1 = collada.scene;\n\nfunction animate() {\n    var door = mesh1.getChildByName(\"node-door1\", true);\n    //WORKS\n    door.position.y += 0.01;\n    //WORKS\n    door.scale.x += 0.001;\n    //DOESN'T WORK\n    door.rotation.y += 0.01;\n    //WORKS\n    mesh1.rotation.y += 0.01;\n}\n```\n\nAny ideas why position and scale work but rotation doesn't?  You can rotate the Collada scene but not objects within it!\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/1202/comments",
    "author": "jayfield1979",
    "comments": [
      {
        "user": "mrdoob",
        "created_at": "2012-01-28T18:42:10Z",
        "body": "I think it's because `ColladaLoader` sets `mesh.useQuaternion` to `true`. If you don't mind losing the original rotation, try setting it to `false`.\n"
      },
      {
        "user": "hfeist",
        "created_at": "2018-08-21T14:12:53Z",
        "body": "I'd love to see the full script this snippet comes from. I'm trying to find a way to rotate children within a Collada model.\r\n\r\n```js\r\nfunction animate() {\r\n    var door = mesh1.getChildByName(\"node-door1\", true);\r\n    //WORKS\r\n    door.position.y += 0.01;\r\n    //WORKS\r\n    door.scale.x += 0.001;\r\n    //DOESN'T WORK\r\n    door.rotation.y += 0.01;\r\n    //WORKS\r\n    mesh1.rotation.y += 0.01;\r\n}\r\n```"
      },
      {
        "user": "donmccurdy",
        "created_at": "2018-08-21T15:18:33Z",
        "body": "@hfeist could you post to the forum or Stack Overflow? I think this has more to do with your specific model than the script, likely."
      }
    ]
  },
  {
    "number": 1195,
    "title": "camera setting",
    "created_at": "2012-01-27T06:08:58Z",
    "closed_at": "2012-01-30T07:31:37Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/1195",
    "body": "Hi all~\nI made models by using Blender.\nAnd I arranged and rendered them in Blender.\n\nBut the models seems smaller in THREE.js\nI use default blender camera. \nTHREE.js' fov and aspect are same as blender's.\nThe distance of the camera from the model is 4.\nI don't know Three.js' unit is same as Blender's.\nBlender's unit is meter. (4m)\n\nDo I miss something? Do I have to calculate something?\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/1195/comments",
    "author": "AnalogRobot",
    "comments": [
      {
        "user": "WestLangley",
        "created_at": "2012-01-29T21:33:13Z",
        "body": "Is Blender's FOV in the horizontal direction? For Three.js, it is in the vertical direction. If your aspect ratio is greater than one, this could explain the difference.\n\nYou would have to convert from hFOV to vFOV like so:\n\n```\nvFOV = 2 * Math.atan( Math.tan( hFOV / 2 ) / aspect );\n\nhFOV = 2 * Math.atan( Math.tan( vFOV / 2 ) * aspect );\n```\n"
      }
    ]
  },
  {
    "number": 1178,
    "title": "Get rotation angle from PerspectiveCamera w/RollControls",
    "created_at": "2012-01-24T15:58:59Z",
    "closed_at": "2012-05-24T17:13:49Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/1178",
    "body": "Hello,\n\nApologies if this seems obvious but I'm new to Three.js and 3D maths in general.\n\nI'm using RollControls with a standard PerspectiveCamera in my 3D WebGL scene.  I want to be able to get the rotation angle(s) of the camera.\n\nI have tried querying camera.rotation, but it always returns (0,0,0) - presumably because RollControls uses matrices to perform the rotations and movement.\n\nWhat is the best practice for getting x, y, and z rotation angles for the camera in this case?\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/1178/comments",
    "author": "njmcode",
    "comments": [
      {
        "user": "WestLangley",
        "created_at": "2012-01-24T19:06:30Z",
        "body": "```\nrotation.setRotationFromMatrix( camera.matrix )\n```\n\nThe solutions are not unique, however, so beware. That is, in the reverse direction, there are multiple rotation combinations that yield the same matrix.\n\nConsequently, in the forward direction, it is possible for a small change in the matrix to yield a very different rotation vector.\n"
      },
      {
        "user": "njmcode",
        "created_at": "2012-01-24T23:17:36Z",
        "body": "Thanks for your assistance.  I wasn't aware of `setRotationFromMatrix()`, it doesn't appear to be in the docs.  Can you give me an example of its usage?\n\nHere's my use case: I want to create a rotating compass as part of the UI for my game.  An entity is facing North when it has a `rotation.y` of 0.  I want to convert the result of `setRotationFromMatrix()` to a 0-360 degree angle value.\n\nI have tried this:\n\n``` javascript\ndummy = new THREE.Object3D();\nscene.add(dummy);\n\n// following code is called in an update loop\ndummy.rotation.setRotationFromMatrix( camera.matrix );\nvar rad = dummy.rotation.y;\nvar deg = rad * 180 / Math.PI;\n```\n\nIt appears that the `rotation.y` value from `setRotationFromMatrix()` is 0 when facing North OR South, approx. 1.56 when facing West, and approx. -1.56 when facing East.  Is this supposed to be a radians value?  When I convert it to degrees as per the above, I only get a 180 degree range before the degree value starts to return to zero.\n\nThis is a mixture of uncertainty over the Three.js types and my own poor maths, but I appear to be missing something vital.  Any further help will be very much appreciated!\n"
      },
      {
        "user": "WestLangley",
        "created_at": "2012-01-25T01:18:32Z",
        "body": "If all you want is the heading, you should be able to infer that from the `RollControls.forward` vector.\n"
      },
      {
        "user": "njmcode",
        "created_at": "2012-01-25T02:07:31Z",
        "body": "I'm afraid I have no idea how I would do that.  The `RollControls.forward` vector has the following values for each of the cardinal directions (assume a flat travel surface with an 'upright' Y axis and no pitch - think Doom here):\n\n```\n    x   y   z\n\nN   0   0   1\nE  -1   0   0\nS   0   0  -1\nW   1   0   0\n```\n\nGiven the odd way these numbers scale when rotating around the Y axis (which is always 0, as I've said), I really have no idea how I could convert this to a degree angle between 0 and 360.  Apologies again for my lack of understanding, I really appreciate the help.\n"
      },
      {
        "user": "WestLangley",
        "created_at": "2012-01-25T03:25:22Z",
        "body": "The function you need to use is Math.atan2(z, x), which will give you an angle in radians that you can convert to degrees. You will then need to handle each quadrant separately in order to convert those degrees to the correct bearing from North. It will be a little tricky, but you'll only really learn it if you figure it out yourself. ;-)\n"
      }
    ]
  },
  {
    "number": 1140,
    "title": "overrideMimeType not supported in IE9",
    "created_at": "2012-01-19T17:36:24Z",
    "closed_at": "2012-01-20T14:45:38Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/1140",
    "body": "While attempting to load a JSON model, I ran into a scripting error in IE.  It appears they have not implemented XMLHttpRequest.overrideMimeType().  I am able to get around the error using:\n\n``` javascript\nf.open(\"GET\",c,!0);  if (f.overrideMimeType)f.overrideMimeType(\"text/plain; charset=x-user-defined\");  f.setRequestHeader(\"Content-Type\",\"text/plain\");\n```\n\ninstead of\n\n``` javascript\nf.open(\"GET\",c,!0);  f.overrideMimeType(\"text/plain; charset=x-user-defined\");   f.setRequestHeader(\"Content-Type\",\"text/plain\");\n```\n\nI'm not certain if this introduces any new issues with other browsers, but am now able to view a model in IE 9.\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/1140/comments",
    "author": "JGeerWM",
    "comments": [
      {
        "user": "mrdoob",
        "created_at": "2012-01-20T01:16:25Z",
        "body": "This should be fixed in `r47`. What version are you using?\n"
      }
    ]
  },
  {
    "number": 1091,
    "title": "Dynamically updating vertex coordinates on a Mesh' Geometry? ",
    "created_at": "2012-01-12T17:34:19Z",
    "closed_at": "2012-01-13T00:37:03Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/1091",
    "body": "Hi,\n\nIm trying to update the vertex coordinates on the geometry of a (custom) mesh by doing this on some loop callback:\n\n``` javascript\n<meshvar>.geometry.vertices[idx].position.y = someNewYVal;\n```\n\nhowever the render on the screen is not showing the modifications. My question is whether this should work and the error is somewhere else... or is there anything I need to do to 'invalidate' the mesh geometry?\n\nThanks!\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/1091/comments",
    "author": "fabrantes",
    "comments": [
      {
        "user": "chandlerprall",
        "created_at": "2012-01-12T17:39:45Z",
        "body": "You are correct, just missing one piece:\n\n``` javascript\n.geometry.__dirtyVertices = true;\n```\n\nThere are several `__dirty*` flags which aid performance. They keep the renderer from updating every single geometry value unless it is told otherwise.\n"
      },
      {
        "user": "fabrantes",
        "created_at": "2012-01-12T18:29:27Z",
        "body": "It sitll does not work, probably due to my Javascript noobness.\n\nIm doing something like this on startup:\n\n``` javascript\nvar geometry = new Geometry()\ngeometry.vertices = someVerticeArray;\ngeometry.faces = someFaceArray;\ngeometry.boundingSphere = someIntVal;\nthis.floor = new THREE.Mesh(geometry, someMaterial)\nthis.three.scene.add(this.floor);\n```\n\n(floor and three are stored in the class and thus far all works fine)\n\nthen... on the loop callback Im doing\n\n``` javascript\nthis.floor.geometry.vertices[idx].y = someNewYVal;\nthis.floor.geometry.__dirtyVertices = true;\n```\n\nbut nothing happens on the screen.\n\nthe only way it works is if I create a new Geometry and a new Mesh from that Geometry, remove the previous Mesh from the scene and add the new one, something like this, on the loop callback:\n\n``` javascript\nthis.three.scene.remove(this.floor);\nvar geometry = new THREE.Geometry();\ngeometry.vertices = this.floor.geometry.vertices; // the updated vertices\ngeometry.faces = this.floor.geometry.faces;\ngeometry.boundingSphere = Math.max(this.tileCount.x, this.tileCount.y);\nvar mesh = new THREE.Mesh(geometry, this.floorMaterial);\nthis.floor = mesh;\nthis.three.scene.add(this.floor);\n```\n\nCan you spot what Im doing wrong?\n"
      },
      {
        "user": "chandlerprall",
        "created_at": "2012-01-12T18:35:35Z",
        "body": "Ah, sorry about that, one more thing to add when you create the geometry:\n\n``` javascript\ngeometry.dynamic = true;\n```\n"
      },
      {
        "user": "drewnoakes",
        "created_at": "2013-06-01T12:08:53Z",
        "body": "`geometry.__dirtyVertices` no longer exists. What's the new approach. This issue features quite highly in search results on the topic, so it'd be good to include an up to date explanation here.\n"
      },
      {
        "user": "mrdoob",
        "created_at": "2013-06-01T17:16:55Z",
        "body": "It's now `geomety.verticesNeedUpdate`.\n"
      },
      {
        "user": "nvjkmr",
        "created_at": "2016-10-09T16:23:14Z",
        "body": "I've a similar problem. I'm still a noob. I have created a 3D cylinder geometry with a set of 2D points using LatheGeometry class. Now I have a small sphere in the scene. What I want is, when the sphere touches the cylinder, I want a groove in the surface of the cylinder at the point of collision. My question is, if I find the collision point using Raycaster, then how do I get to the point (that I defined in 2D) and change the geometry?\n\nOr do I have to do it in some other way? And another question is, if I get to the point (that I defined in 2D) do I have to redraw the cylinder using LatheGeometry?\n"
      }
    ]
  },
  {
    "number": 1020,
    "title": "drawing a triangle does not work",
    "created_at": "2012-01-04T12:04:55Z",
    "closed_at": "2012-01-04T16:06:46Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/1020",
    "body": "what is wrong in the following in creating a triangle:\nthe triangle does not appear\n\n``` javascript\nvar geometry2 = new THREE.Geometry();\nvar fface = THREE.Face3();\nvar meshmaterial = new THREE.MeshLambertMaterial(\n{\ncolor: 0xff0000\n});\nfor ( var i = 0; i < 3; i ++ ) {\n...\n\nfface.vertices.push(new THREE.Vertex(position));\n}\n\ngeometry2.faces.push(fface);                \nvar mesh = new THREE.Mesh(geometry2, meshmaterial);\nvar group = new THREE.Object3D();\ngroup.add(mesh);\nscene.add( group );\n```\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/1020/comments",
    "author": "msrk",
    "comments": [
      {
        "user": "mrdoob",
        "created_at": "2012-01-04T12:25:24Z",
        "body": "Have you tried doing `mesh.doubleSided = true`?\n"
      },
      {
        "user": "msrk",
        "created_at": "2012-01-04T15:22:01Z",
        "body": "I have tried \nmesh.doubleSided = true;  but the triangle still does not appear\n"
      },
      {
        "user": "mrdoob",
        "created_at": "2012-01-04T15:38:36Z",
        "body": "CanvasRenderer, WebGLRenderer? The more info you share the better.\n"
      },
      {
        "user": "mrdoob",
        "created_at": "2012-01-04T15:42:53Z",
        "body": "Actually. Looking at your code. That's now how you construct triangles...\n\nTake a look at this code:\n\n``` javascript\nvar geometry = new THREE.Geometry();\n\nfor ( var i = 0; i < 100; i ++ ) {\n\n    var v = new THREE.Vector3( Math.random() * 1000 - 500, Math.random() * 1000 - 500, Math.random() * 1000 - 500 );\n\n    var v0 = new THREE.Vertex( new THREE.Vector3( Math.random() * 100 - 50, Math.random() * 100 - 50, Math.random() * 100 - 50 ) );\n    var v1 = new THREE.Vertex( new THREE.Vector3( Math.random() * 100 - 50, Math.random() * 100 - 50, Math.random() * 100 - 50 ) );\n    var v2 = new THREE.Vertex( new THREE.Vector3( Math.random() * 100 - 50, Math.random() * 100 - 50, Math.random() * 100 - 50 ) );\n\n    v0.position.addSelf( v );\n    v1.position.addSelf( v );\n    v2.position.addSelf( v );\n\n    var face = new THREE.Face3( geometry.vertices.push( v0 ) - 1, geometry.vertices.push( v1 ) - 1, geometry.vertices.push( v2 ) - 1 );\n    geometry.faces.push( face );\n\n}\n\ngeometry.computeFaceNormals();\ngeometry.computeCentroids();\n\nmesh = new THREE.Mesh( geometry, new THREE.MeshNormalMaterial() );\nmesh.doubleSided = true;\nscene.add( mesh );\n```\n"
      }
    ]
  },
  {
    "number": 990,
    "title": "OBJ converted to Three is rendered all in black.",
    "created_at": "2011-12-30T21:39:31Z",
    "closed_at": "2011-12-31T17:59:13Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/990",
    "body": "Hi All,\n\nI used convert_obj_three.py (only specified -i & -o).\nWhen rendering the output, everything is in black.\nIf I use MeshNormalMaterial, rainbow-ish colors are used.\nThe code is in the below.\n(If someone can tell me how to upload OBJ data to this forum, I will post it as well)\n\nSo the question is, how do I render the converted OBJ with real textures?\n\nThanks,\nQ\n\n``` html\n<script>\n\n    var SCREEN_WIDTH = window.innerWidth;\n    var SCREEN_HEIGHT = window.innerHeight;\n    var container, stats;\n    var camera, scene, webglRenderer;\n    var zmesh;\n\n    var mouseX = 0, mouseY = 0;\n    var windowHalfX = window.innerWidth / 2;\n    var windowHalfY = window.innerHeight / 2;\n\n    document.addEventListener('mousemove', onDocumentMouseMove, false);\n\n    init();\n    animate();\n\n    function init() {\n        container = document.createElement('div');\n        document.body.appendChild(container);\n\n        camera = new THREE.PerspectiveCamera( 75, SCREEN_WIDTH / SCREEN_HEIGHT, 1, 100000);\n        camera.position.z = 500;\n\n        scene = new THREE.Scene();\n\n        // RENDERER\n\n        try {\n            webglRenderer = new THREE.WebGLRenderer();\n            webglRenderer.setSize(SCREEN_WIDTH, SCREEN_HEIGHT);\n            webglRenderer.domElement.style.position = \"relative\";\n\n            container.appendChild(webglRenderer.domElement);\n\n        } catch(e) {\n            alert(e.toLocaleString());\n        }\n\n        // STATS\n\n        stats = new Stats();\n        stats.domElement.style.position = 'absolute';\n        stats.domElement.style.top = '0px';\n        stats.domElement.zIndex = 100;\n        container.appendChild(stats.domElement);\n\n        var loader = new THREE.JSONLoader();\n        var callback = function (geometry) {createScene(geometry)};\n        loader.load(\"obj/my_city/my_city_0.js\", callback);\n    }\n\n    function createScene(geometry) {\n        zmesh = new THREE.Mesh(geometry, new THREE.MeshFaceMaterial());\n        zmesh.overdraw = true;\n        scene.add(zmesh);\n    }\n\n    function onDocumentMouseMove(event) {\n        mouseX = (event.clientX - windowHalfX);\n        mouseY = (event.clientY - windowHalfY);\n    }\n\n    function animate() {\n        requestAnimationFrame(animate);\n\n        render();\n        stats.update();\n    }\n\n    function render() {\n        camera.position.x += (mouseX - camera.position.x) * .05;\n        camera.position.y += (-mouseY - camera.position.y) * .05;\n\n        camera.lookAt(scene.position);\n\n        webglRenderer.render(scene, camera);\n    }\n\n</script>\n```\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/990/comments",
    "author": "kyunam",
    "comments": [
      {
        "user": "mrdoob",
        "created_at": "2011-12-31T10:48:31Z",
        "body": "Try adding a light into the scene :)\n"
      }
    ]
  },
  {
    "number": 984,
    "title": "Exported model from Blender fails on loading",
    "created_at": "2011-12-29T22:41:42Z",
    "closed_at": "2012-01-02T02:30:40Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/984",
    "body": "I have exported a cube from blender that resulted in the file:\n\n``` json\n{\n    \"metadata\": {\n        \"formatVersion\" : 3,\n        \"generatedBy\"   : \"Blender 2.60 Exporter\",\n        \"vertices\"      : 8,\n        \"faces\"         : 6,\n        \"normals\"       : 8,\n        \"colors\"        : 0,\n        \"uvs\"           : 0,\n        \"materials\"     : 1,\n        \"morphTargets\"  : 0\n    },\n\n    \"scale\" : 1.000000,\n\n    \"materials\": [  {\n    \"DbgColor\" : 15658734,\n    \"DbgIndex\" : 0,\n    \"DbgName\" : \"Material\",\n    \"colorAmbient\" : [0.0, 0.0, 0.0],\n    \"colorDiffuse\" : [0.6400000190734865, 0.6400000190734865, 0.6400000190734865],\n    \"colorSpecular\" : [0.5, 0.5, 0.5],\n    \"shading\" : \"Lambert\",\n    \"specularCoef\" : 50,\n    \"transparency\" : 1.0,\n    \"vertexColors\" : false\n    }],\n\n    \"vertices\": [],\n\n    \"morphTargets\": [],\n\n    \"normals\": [0.577349,0.577349,-0.577349,0.577349,-0.577349,-0.577349,-0.577349,-0.577349,-0.577349,-0.577349,0.577349,-0.577349,0.577349,0.577349,0.577349,-0.577349,0.577349,0.577349,-0.577349,-0.577349,0.577349,0.577349,-0.577349,0.577349],\n\n    \"colors\": [],\n\n    \"uvs\": [[]],\n\n    \"faces\": [35,0,1,2,3,0,0,1,2,3,35,4,7,6,5,0,4,5,6,7,35,0,4,5,1,0,0,4,7,1,35,1,5,6,2,0,1,7,6,2,35,2,6,7,3,0,2,6,5,3,35,4,0,3,7,0,4,0,3,5]\n\n}\n\n```\n\nI have the following loader:\n\n``` javascript\nvar scene;\n    $(document).ready(function(){\n      init();\n    });\n    function init(){\n      container = document.getElementById('container');\n\n      scene = new THREE.Scene();\n\n      var material = new THREE.MeshFaceMaterial();\n      camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 1, 10000 );\n      camera.position.z = 100;\n      scene.add( camera );\n\n      var loader = new THREE.JSONLoader();\n      loader.load({model:'untitled.Cube.js',  callback:createScene});\n      renderer = new THREE.WebGLRenderer();\n      renderer.render(scene, camera)\n      renderer.setSize( window.innerWidth, window.innerHeight );\n      container.appendChild(renderer.domElement);\n\n    }\n    function createScene( geometry ) {\n      console.log(geometry);\n      geometry.materials[0][0].shading = THREE.FlatShading;\n      geometry.materials[0][0].morphTargets = true;\n\n      var material = new THREE.MeshFaceMaterial();\n\n      mesh = new THREE.Mesh( geometry, material );\n      mesh.scale.set(50, 50, 50);\n\n      scene.addObject( mesh );\n    }\n```\n\nThe rest of the code may not really make sense - I'm just starting this but my code is failing on \n\n``` javascript\nloader.load({model:'untitled.Cube.js',  callback:createScene});\n```\n\nIt fails on line `3452` of the un-minified code \n\n``` javascript\nface.centroid.addSelf( this.vertices[ face.a ].position );\n```\n\nUpon introspection, it's clear that vertices is an empty array. Any ideas what's wrong here?\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/984/comments",
    "author": "prasincs",
    "comments": [
      {
        "user": "alteredq",
        "created_at": "2011-12-29T23:15:23Z",
        "body": "Maybe you have unchecked \"vertices\" checkbox in Blender exporter?\n"
      },
      {
        "user": "mrdoob",
        "created_at": "2011-12-31T11:09:54Z",
        "body": "What error are you having now?\nCould you create a live link for the test?\n"
      },
      {
        "user": "alteredq",
        "created_at": "2011-12-31T15:27:35Z",
        "body": "Ah, I didn't look at your code before, just at the model. Seems you based it on some old example (there are no more multimaterials, also loader has simpler API), also you try to use morphs while your model doesn't have any.\n\nTry just this:\n\n``` javascript\nloader.load( 'untitled.Cube.js',  createScene );\n```\n\n...\n\n``` javascript\ngeometry.materials[0].shading = THREE.FlatShading;\n```\n"
      }
    ]
  },
  {
    "number": 975,
    "title": "Geometry instancing?",
    "created_at": "2011-12-28T01:28:52Z",
    "closed_at": "2011-12-28T01:51:24Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/975",
    "body": "I am working on a scene which contains thousands of identical cuboids.  What is my best approach; just build the scene normally or is there something special I can do to take advantage of instancing?  The cuboids move around so the scene is not completely static.\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/975/comments",
    "author": "timothypratley",
    "comments": [
      {
        "user": "chandlerprall",
        "created_at": "2011-12-28T01:37:38Z",
        "body": "WebGL does not support geometry instancing (yet, it is planned for a future version). However, you can (and should) share the geometry object in javascript:\n\n``` javascript\nvar sphere = new THREE.SphereGeometry;\nvar material = new THREE.MeshNormalMaterial, \nvar mesh1 = new THREE.Mesh(sphere, material);\nvar mesh2 = new THREE.Mesh(sphere, material);\n```\n\nEach mesh can then be positioned and rotated independantly while using the same geometry.\n"
      }
    ]
  },
  {
    "number": 972,
    "title": "Modify vertex-positions of Plane?",
    "created_at": "2011-12-27T12:27:25Z",
    "closed_at": "2011-12-31T11:53:38Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/972",
    "body": "Hello, I'm new to Three.js and started playing around with the demos. I've tried to modify the positions of my plane like this:\n\n``` javascript\nvar oGeo = new THREE.PlaneGeometry( 1, 1, 1, 1 );\n\noGeo.vertices[0].position.z =  -0.5;\noGeo.vertices[0].position.y =  0.2;\n```\n\nThat worked for the positioning, but I think my light won't get applied on this plane like it should. There has to be a proper way doing this. Can you help me, please?\n\nWhat I'm actually trying to do is a tilemap with 16x16 planes. I want to be able to modify the y-position of every plane dynamically.\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/972/comments",
    "author": "matthoz",
    "comments": [
      {
        "user": "fabricasapiens",
        "created_at": "2011-12-27T13:42:58Z",
        "body": "So do you encounter a problem with lighting or with modifying the position of (sub)-planes? Do you have working code?\n"
      },
      {
        "user": "matthoz",
        "created_at": "2011-12-27T13:55:53Z",
        "body": "Hi, thanks for your reply. I've just realized, that I didn't modify the geometry after the first scene. It was already modified before the first scene was rendered. I just wanted to post my entire code and saw that this won't work like I wrote in my first posting.\n\nIs there a way to modify the vertex-positions of my plane and recalculate the normal-positions somehow? I think the buffers have to be set again after doing this.\n"
      },
      {
        "user": "fabricasapiens",
        "created_at": "2011-12-27T14:03:22Z",
        "body": "You might use the .dirty flag that when set to true will make Three.js recalculate the normals? If that flag is even still around :)\n"
      },
      {
        "user": "matthoz",
        "created_at": "2011-12-27T14:13:44Z",
        "body": "Mh, I've tried it that way:\n\n``` javascript\nthis.oGeo = new THREE.PlaneGeometry( 1, 1, 1, 1 );\nthis.oGeo.dynamic = true;\nthis.oGeo.__dirtyVertices = true;\nthis.oGeo.__dirtyNormals = true;\n```\n\nWhen I call this, after the first frame:\n\n``` javascript\nthis.oGeo.vertices[0].position.z =  -1.0;\nthis.oGeo.vertices[0].position.y =  1.0;\nthis.oGeo.vertices[0].position.x =  0.0;\n```\n\nThere are no changes :/\n\nEdit:\n\nI've set the boolean dirty-vars directly after modifying the plane and that worked. But the lightning seems to be the same like before (Plane was flat and now one corner is clipped down). The Plane is rotating so that I can see light affecting. Do I have to recalculate the normals by my own or is there some nifty method included? :D\n"
      },
      {
        "user": "fabricasapiens",
        "created_at": "2011-12-27T14:20:21Z",
        "body": "As far as I remember, you need to set dirtyVertices right after you set the vertices manually?\n"
      },
      {
        "user": "matthoz",
        "created_at": "2011-12-27T14:39:15Z",
        "body": "I did (I edited my previous post) and it worked, but the light is definitely not updated. Do I have to recalculate the normals by my own or is there some nifty method included? :D\n"
      },
      {
        "user": "fabricasapiens",
        "created_at": "2011-12-27T14:47:55Z",
        "body": "Did you try to also set \nthis.oGeo.__dirtyNormals = true; right after you updated the vertices?\n"
      },
      {
        "user": "matthoz",
        "created_at": "2011-12-27T14:55:54Z",
        "body": "Yes I did. The code for changing the vertices of that plane:\n\n``` javascript\nthis.oGeo.vertices[0].position.x =  0.0;\nthis.oGeo.vertices[0].position.y =  -0.8;\nthis.oGeo.vertices[0].position.z =  -1.0;\n\nthis.oGeo.vertices[1].position.x =  1.0;\nthis.oGeo.vertices[1].position.y =  -0.8;\nthis.oGeo.vertices[1].position.z =  -1.0;\nthis.oGeo.__dirtyVertices = true;\nthis.oGeo.__dirtyNormals = true;\n```\n\nBut as I wrote, I did not recalculate the normals. Should three.js do this automatically? Should I post the entire code? :S\n"
      },
      {
        "user": "matthoz",
        "created_at": "2011-12-27T15:02:34Z",
        "body": "I've added those two lines:\n\n``` javascript\nthis.oGeo.computeVertexNormals();\nthis.oGeo.computeFaceNormals();\n//...(old)\nthis.oGeo.__dirtyVertices = true;\nthis.oGeo.__dirtyNormals = true;\n```\n\nNow the light seems to be correct. Now I can realize my real-time-modification of those planes. But it really is a very dirty solution, isn't it? Is this the only way to realize real-time modification of Objects? I know that it is possible to do this directly on the shader, but for the start, this is to high for me. Any other hints?\n\nBtw. Thank you very much fabricasapiens\n"
      },
      {
        "user": "chandlerprall",
        "created_at": "2011-12-28T01:26:11Z",
        "body": "After changing vertice positions you must recalculate the normals:\n\n``` javascript\noGeo.computeFaceNormals();\noGeo.computeVertexNormals();\noGeo.__dirtyNormals = true;\n```\n"
      },
      {
        "user": "fabricasapiens",
        "created_at": "2011-12-28T07:47:25Z",
        "body": "If we recalculate the normals and vertices, what does __dirtyNormals = true; do?\n"
      },
      {
        "user": "chandlerprall",
        "created_at": "2011-12-28T15:16:43Z",
        "body": "The WebGLRenderer caches some geometry attributes such as vertice positions, normals, tangents, etc (there are seven I believe) - if you modify one of these then you must tell the renderer that it needs to update its cache by marking the __dirty\\* flag as true.\n"
      },
      {
        "user": "fabricasapiens",
        "created_at": "2011-12-28T15:37:28Z",
        "body": "Sure, but doing both \n\noGeo.computeFaceNormals();\noGeo.computeVertexNormals();\n\nand \n\noGeo.__dirtyNormals = true;\n\nseems redundant. How are these exclusive?\n"
      },
      {
        "user": "chandlerprall",
        "created_at": "2011-12-28T15:58:59Z",
        "body": "The __dirty\\* properties are WebGLRenderer specific, while the compute_Normals methods aren't. If you use the CanvasRenderer then there is no need to use the __dirty_ flags and setting them are just wasted cpu time and memory.\n"
      },
      {
        "user": "fabricasapiens",
        "created_at": "2011-12-28T19:42:36Z",
        "body": "Ok! One last question: are there situations when using WebGL where you would call computeFaceNormals() and computeVertexNormals() but _not_ set __dirtyNormals = true; ?\n"
      },
      {
        "user": "chandlerprall",
        "created_at": "2011-12-28T20:57:36Z",
        "body": "None that I can think of, unless you don't want to display the updated normals right away for some reason.\n"
      },
      {
        "user": "fabricasapiens",
        "created_at": "2011-12-29T07:52:53Z",
        "body": "Hmm, then I'm still confused... What does __dirtyNormals=true do what oGeo.computeFaceNormals(); and oGeo.computeVertexNormals(); do not?\n"
      },
      {
        "user": "matthoz",
        "created_at": "2011-12-29T07:55:45Z",
        "body": "The compute-methods seem to recalculate the stuff and with __dirty\\* vars you tell the renderer to put the recalculated stuff into the buffer again. At least I think it works like this.\n"
      },
      {
        "user": "fabricasapiens",
        "created_at": "2011-12-29T08:01:51Z",
        "body": "Ah ok, and it won't do that automatically to make it possible to recalculate the geometry without yet sending it to the GPU. And setting __dirtyNormals = true; is only needed for WebGLRenderer, since CanvasRenderer obviously does not use any VBOs.\n"
      },
      {
        "user": "murci",
        "created_at": "2014-05-02T21:59:44Z",
        "body": "If you happen to be needing this, be aware that __dirtyVertices and __dirtyNormals\nhave been renamed to \n_verticesNeedUpdate_ and _normalsNeedUpdate_\n(they're properties of the THREE.Geometry object)\n"
      }
    ]
  },
  {
    "number": 902,
    "title": "How can I dynamically change object's opacity?",
    "created_at": "2011-12-14T09:23:22Z",
    "closed_at": "2011-12-14T13:40:12Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/902",
    "body": "This is my object:\n\n``` javascript\nvar object = new THREE.Mesh( geometry, new THREE.MeshLambertMaterial( {  map: THREE.ImageUtils.loadTexture( \"image.png\" ) } ) );\nobject.position.set(2, 3, 1.5);\n```\n\nnow after I've created this object in init(); function, I can directly go to the object and change his position,like this:\n\n``` javascript\nobject.position.x = 15;\n```\n\nNow the question is how can I change the opacity of the texture???\n\nThanks :-)\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/902/comments",
    "author": "BorisDutkin",
    "comments": [
      {
        "user": "alteredq",
        "created_at": "2011-12-14T12:29:39Z",
        "body": "For transparent materials you need first to set `transparent` flag (before first render of the object):\n\n``` javascript\nvar map = THREE.ImageUtils.loadTexture( \"image.png\" );\nvar material = new THREE.MeshLambertMaterial( { map: map, transparent: true } );\nvar object = new THREE.Mesh( geometry, material );\n```\n\nOpacity is material parameter:\n\n``` javascript\nmaterial.opacity = 0.5;\n```\n"
      }
    ]
  },
  {
    "number": 872,
    "title": "makeInvert removal",
    "created_at": "2011-12-08T07:38:21Z",
    "closed_at": "2011-12-08T10:29:25Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/872",
    "body": "Hi!\n\nIs there a reason for the removal of the method makeInvert in Matrix4? I have previously used that to calculate position from local space to a parents space, like this: \n\n``` javascript\nvar childWorldMatrix = childMesh.matrixWorld;\nvar tempParentMatrix = new THREE.Matrix4();\nvar inverse = new THREE.Matrix4();\nTHREE.Matrix4.makeInvert(scene.matrixWorld,inverse);\ntempParentMatrix.multiply(inverse,childWorldMatrix );\nspotLight.position = tempParentMatrix.getPosition();\n```\n\nIs there perhaps a smarter way of doing this? Some build-in function?\n\n/Einar\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/872/comments",
    "author": "inear",
    "comments": [
      {
        "user": "alteredq",
        "created_at": "2011-12-08T10:14:51Z",
        "body": "It wasn't removed, just API changed:\n\n``` javascript\n// equivalent to THREE.Matrix4.makeInvert(scene.matrixWorld,inverse);\ninverse.getInverse( scene.matrixWorld );\n```\n"
      }
    ]
  },
  {
    "number": 856,
    "title": "WebGLRenderer->enableDepthBufferWrite ",
    "created_at": "2011-12-06T18:30:59Z",
    "closed_at": "2011-12-08T12:00:35Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/856",
    "body": "I get an error when using this in R46, the API reference still refers to it, has it been renamed? No mention in the change log?\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/856/comments",
    "author": "renegademaster88",
    "comments": [
      {
        "user": "alteredq",
        "created_at": "2011-12-06T23:41:54Z",
        "body": "This is not anymore global GL state property. Instead depth write is now per-material property (similar to depth test):\n\n``` javascript\nmaterial.depthWrite = false;\nmaterial.depthTest = false;\n```\n"
      }
    ]
  },
  {
    "number": 846,
    "title": "Texture from image part",
    "created_at": "2011-12-05T11:42:20Z",
    "closed_at": "2011-12-05T12:23:00Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/846",
    "body": "Hello.\nI'm new in three.js and I need to create a texture from a part of an image. Can you give me some help?\nI can use the all image in a texture without a problem. but I need to use just a piece of the image.\n\nthanks\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/846/comments",
    "author": "hasousa",
    "comments": [
      {
        "user": "mrdoob",
        "created_at": "2011-12-05T12:06:57Z",
        "body": "You just need to modify the UVs of each vertex.\n"
      },
      {
        "user": "Shawson",
        "created_at": "2012-01-19T22:44:40Z",
        "body": "Hey- how do you edit the UV of each vertex, from within Three?  Looking at the API, a vertex only has a vector position- I can only see UV's attached to faces?  I'm trying to edit the UV's for each vertex for a plane which I build in code?\n"
      },
      {
        "user": "mrdoob",
        "created_at": "2012-01-20T01:43:05Z",
        "body": "Yep. The UVs are in the Face directly. So you would need to edit the UVs of that same vertex in the faces that use it.\n"
      },
      {
        "user": "alteredq",
        "created_at": "2012-01-20T02:01:49Z",
        "body": "Not really, I'm just now messing with docs related to this ;).\n\nUVs are one of attributes which are not in faces, they live in `geometry.faceVertexUvs` array, in most usual case it's in its zeroth subarray `geometry.faceVertexUvs[ 0 ]` (corresponding to UV layer 0).\n\nEach vertex of each face then has corresponding `UV` in this array (organized into 3 or 4 component UV subarrays, each subarray matching face from `geometry.faces`).\n\nThe easiest to see the organization of data is to dump `geometry.faceVertexUvs[ 0 ]` into Chrome console.\n"
      },
      {
        "user": "mrdoob",
        "created_at": "2012-01-20T03:33:00Z",
        "body": "Yes, I explained myself poorly. I meant that the UVs aren't per-vertex but per-vertex-in-face.\n"
      },
      {
        "user": "gero3",
        "created_at": "2012-01-20T08:51:27Z",
        "body": "indeed like this:\n\n``` javascript\nface = geometry.faces[ f ];\n\nvA = this.vertices[ face.a ];\nvB = this.vertices[ face.b ];\nvC = this.vertices[ face.c ];\nvD = this.vertices[ face.d ];\n```\n"
      }
    ]
  },
  {
    "number": 792,
    "title": "updating mesh matrix in webgl_materials_video.html example",
    "created_at": "2011-11-24T03:31:26Z",
    "closed_at": "2011-11-24T13:50:48Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/792",
    "body": "i have a function i took from one of these three.js post to map a physics engine (JigLibJS) to a mesh object:\n\n``` javascript\nfunction JL2THREE(target, pos, dir) {\n    var position = new THREE.Matrix4();\n    position.setTranslation(pos[0], pos[1], pos[2])\n    var rotate = new THREE.Matrix4(dir[0], dir[1], dir[2], dir[3], dir[4], dir[5], dir[6], dir[7], dir[8], dir[9], dir[10], dir[11], dir[12], dir[13], dir[14], dir[15]);\n    position.multiplySelf(rotate);\n    target.matrix = position;\n    target.updateMatrix();\n    target.matrixWorldNeedsUpdate = true;\n}\n```\n\nwhen I use this function in the video.html example, it doesn't seem to change anything.\n\nI setup all the meshes with .matrixAutoUpdate = false flag but still nothing works.\n\nIf i adjust the mesh's position however, it works.   So, `mesh.position.set(pos[0],pos[1],pos[2])` works, but the above code doesn't.\n\nAm I missing something?\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/792/comments",
    "author": "GMTurbo",
    "comments": [
      {
        "user": "mrdoob",
        "created_at": "2011-11-24T05:41:14Z",
        "body": "Almost there! Try removing the `target.updateMatrix();` line.\n"
      }
    ]
  },
  {
    "number": 773,
    "title": "Mapping particles with mesh vertices",
    "created_at": "2011-11-18T16:37:31Z",
    "closed_at": "2011-11-21T10:01:57Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/773",
    "body": "Hi everybody,\n\nI was wondering if it was possible to map vertices from my planeGeometry with particles ? My issue is that I have two seperate things. My ParticleSystem, and my planeGeometry. Is there a way with three.js to say that my planeGeometry is actually a ParticleSystem? Or is my only option is to handle the different things separately?\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/773/comments",
    "author": "olyc3",
    "comments": [
      {
        "user": "alteredq",
        "created_at": "2011-11-19T01:46:34Z",
        "body": "Officially you can't share geometry between two different object types as this messes up with `WebGLRenderer` internals (dirty flags get confused, also different object types could use completely different rendering methods).\n\nHowever, for a particular case of `Mesh` and `ParticleSystem` you can  hack around like this:\n\n``` javascript\nvar geometry = new THREE.PlaneGeometry( 1, 1, 10, 10 );\nvar mesh = new THREE.Mesh( geometry, new THREE.MeshBasicMaterial( { color: 0xffffff } )  );\nscene.add( mesh );\n\nvar geometry2 = new THREE.Geometry();\ngeometry2.vertices = geometry.vertices;\nvar particles = new THREE.ParticleSystem( geometry2, new THREE.ParticleBasicMaterial( { color: 0xff0000, size:10 } ) );\nscene.add( particles );\n```\n"
      },
      {
        "user": "olyc3",
        "created_at": "2011-11-19T10:56:36Z",
        "body": "Does it works with many planeGeometry? Because when I do it like that, my vertices array in each planeGeometry will be the same for every ParticleSystem. Is there a way to change the ModelViewMatrix before creating a PlaneGeometry, so that the vertices contained in my geometry.vertices are at their real coordinates and not only around (0,0,0). For example, if I do something like this in a loop changing coordinates (x,y,z):\n\n```\n    var geometry = new THREE.PlaneGeometry(100, 100, 10, 10);\n    var planeMaterial = new THREE.MeshLambertMaterial({\n        color : 0xFFFFFF,\n        map : THREE.ImageUtils.loadTexture(\"images.jpg\")\n    });\n    var position = new THREE.Vector3(x, y, z);\n    var imgsurf = new THREE.Mesh(geometry, [planeMaterial]);\n    imgsurf.position = position;\n    scene.add(imgsurf);\n\n    var particles = new THREE.Geometry();\n    particles.vertices = geometry.vertices;\n    var particleSystem = new THREE.ParticleSystem(particles, {\n        color : 0xE60066\n    });\n    particleSystem.position = new THREE.Vector3(position);\n    scene.add(particleSystem);\n```\n\nEven if i change the position of my ParticleSystem each vertices arrays in one ParticleSystem are the same. \n"
      },
      {
        "user": "alteredq",
        "created_at": "2011-11-20T17:58:55Z",
        "body": "I'm not sure I understand the question. \n\nGeometries store local vertex coordinates, global coordinates come from applying transforms, where each object has own modelview matrix. So yes, you can have multiple objects (e.g. `Mesh` or `ParticleSystem`) which share the same geometry, but then this geometry is positioned / rotated / scaled in the world differently.\n\nIn context of this example:\n\n``` javascript\nvar geometry = new THREE.PlaneGeometry( 1, 1, 10, 10 );\n\nvar mesh1 = new THREE.Mesh( geometry, new THREE.MeshBasicMaterial( { color: 0xffffff } )  );\nmesh1.position.x = 10;\nscene.add( mesh1 );\n\nvar mesh2 = new THREE.Mesh( geometry, new THREE.MeshBasicMaterial( { color: 0xffffff } )  );\nmesh2.position.x = -10;\nscene.add( mesh2 );\n\nvar geometry2 = new THREE.Geometry();\ngeometry2.vertices = geometry.vertices;\n\nvar particles1 = new THREE.ParticleSystem( geometry2, new THREE.ParticleBasicMaterial( { color: 0xff0000, size:10 } ) );\nparticles1.position.x = 10;\nscene.add( particles1 );\n\nvar particles2 = new THREE.ParticleSystem( geometry2, new THREE.ParticleBasicMaterial( { color: 0xff0000, size:10 } ) );\nparticles2.position.x = -10;\nscene.add( particles2 );\n```\n"
      }
    ]
  },
  {
    "number": 756,
    "title": "How to handle textures in .obj files",
    "created_at": "2011-11-14T16:45:42Z",
    "closed_at": "2011-11-21T16:16:05Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/756",
    "body": "How can I use the texture informations in the .obj files to get coordinates for the texture.jpeg file? \n\nFor me values between 1 and 0.1 like \"vt 0.948307 0.566459\" makes no sense... I expected something like coordinates for the texture JPEG file. Similar to \"vt 454 232\" for the pixel X = 454 Y = 232 in the texture JPEG file. \n\nIn the convert_obj_three.py file is the following part: \n\n```\n        # Texture coordinates in (u,v[,w]) coordinates, w is optional\n        # vt 0.500 -1.352 [0.234]\n        if chunks[0] == \"vt\" and len(chunks) >= 3:\n            u = float(chunks[1])\n            v = float(chunks[2])\n            w = 0\n            if len(chunks)>3:\n                w = float(chunks[3])\n            uvs.append([u,v,w])\n```\n\nBut I can not find the part where the converter uses these informations to extract the color infos from the texture file. Can somebody give me a hint? \n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/756/comments",
    "author": "PaulVincent",
    "comments": [
      {
        "user": "mrdoob",
        "created_at": "2011-11-14T18:51:44Z",
        "body": "0.948307 \\* texture.width = the value you want :)\n"
      },
      {
        "user": "mrdoob",
        "created_at": "2011-11-15T13:10:02Z",
        "body": "1.000780 is ok. As long as you use `THREE.RepeatWrapping` that should work fine.\n"
      }
    ]
  },
  {
    "number": 731,
    "title": "Data values direct from an array in object positions are returned as Radians",
    "created_at": "2011-11-07T09:40:24Z",
    "closed_at": "2011-11-07T17:36:57Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/731",
    "body": "Funky funk, mesh.rotation.y is receiving values as radians and not degree's (hence why that \"Math.PI\" was added)\noriginally the values from the array were (0,90,180,270) degrees with unexpected results, changing them to(0,1,2,3) work as used as Radians.\n\n``` javascript\nloader.load( { model: \"tiles/tile_grass.js\", callback: function( geometry ) {\n    for(var a = 0; a < data.length; a++) {\n        for(var b = 0; b < data[a].length; b++) {\n            //console.debug(a,b,data);\n            var drawTile = data[a][b];\n            if  (tileArray[drawTile] == 3){\n                var rotateTile = dataRotation[a][b];\n                var mesh = new THREE.Mesh( geometry, matTile);\n                mesh.scale.set( 10, 10, 10 );\n                mesh.rotation.y = tileRotArray[rotateTile] * Math.PI;\n                mesh.position.x = b * 160 - tileOffset;\n                mesh.position.z = a * 160 - tileOffset;\n                scene.add(mesh);\n            };\n        }\n    }\n} } );\n```\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/731/comments",
    "author": "robotsuperstar",
    "comments": [
      {
        "user": "mrdoob",
        "created_at": "2011-11-07T13:08:13Z",
        "body": "Should be `* Math.PI / 180` instead of just `* Math.PI`.\n"
      }
    ]
  },
  {
    "number": 723,
    "title": "Create circle camera trajectory",
    "created_at": "2011-11-04T08:48:54Z",
    "closed_at": "2011-11-07T08:28:50Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/723",
    "body": "How can we create PerspectiveCamera and limit it to Circle (S=[0,0,0], r=300, y +- 200) ?\n\nI want to let user rotate around object in in circle trajectory but limit his distance from [0,0,0] to 300 in x*z and +-200 y (so not full Ball)\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/723/comments",
    "author": "smarek",
    "comments": [
      {
        "user": "mrdoob",
        "created_at": "2011-11-04T10:37:23Z",
        "body": "Should be something a long these lines:\n\n``` javascript\nfunction onDocumentMouseDown( event ) {\n\n    event.preventDefault();\n\n    isUserInteracting = true;\n\n    onPointerDownPointerX = event.clientX;\n    onPointerDownPointerY = event.clientY;\n\n    onPointerDownLon = lon;\n    onPointerDownLat = lat;\n\n}\n\nfunction onDocumentMouseMove( event ) {\n\n    if ( isUserInteracting ) {\n\n        lon = ( onPointerDownPointerX - event.clientX ) * 0.1 + onPointerDownLon;\n        lat = ( event.clientY - onPointerDownPointerY ) * 0.1 + onPointerDownLat;\n        render();\n\n    }\n}\n\nfunction onDocumentMouseUp( event ) {\n\n    isUserInteracting = false;\n    render();\n\n}\n\nfunction onDocumentMouseWheel( event ) {\n\n    if ( event.wheelDeltaY ) { // WebKit\n\n        distance -= event.wheelDeltaY * 0.05;\n\n    } else if ( event.wheelDelta ) { // Opera / Explorer 9\n\n        distance -= event.wheelDelta * 0.05;\n\n    } else if ( event.detail ) { // Firefox\n\n        distance -= event.detail * 0.05;\n\n    }\n\n    render();\n\n}\n\nfunction render() {\n\n    lat = Math.max( - 85, Math.min( 85, lat ) );\n    phi = ( 90 - lat ) * Math.PI / 180;\n    theta = lon * Math.PI / 180;\n\n    camera.position.x = distance * Math.sin( phi ) * Math.cos( theta );\n    camera.position.y = distance * Math.cos( phi );\n    camera.position.z = distance * Math.sin( phi ) * Math.sin( theta );\n\n    camera.lookAt( scene.position );\n\n    renderer.render( scene, camera );\n\n}\n```\n"
      }
    ]
  },
  {
    "number": 718,
    "title": "help with intersection test",
    "created_at": "2011-11-02T21:01:15Z",
    "closed_at": "2011-11-02T21:19:59Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/718",
    "body": "I had an intersection that was working fine when my canvas was taking up the whole window in my browser however ever since I have added other elements to the document the intersection is no longer correct, I realize that I might need to use other sizes then the window.innerHeight and width but nothing that I tried really worked.\n\nthis is my intersection code:\n\n``` javascript\nfunction findIntersections(event) {\n    var mouseX = event.clientX / renderer.domElement.width;\n    var mouseY = event.clientY / renderer.domElement.height;\n\n    var vector = new THREE.Vector3(mouseX * 2 - 1, - mouseY * 2 + 1, 0.5 );\n\n    projector.unprojectVector( vector, camera );\n\n        var ray = new THREE.Ray( camera.position, vector.subSelf( camera.position ).normalize() );\n\n    intersects = ray.intersectScene( scene );\n}\n```\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/718/comments",
    "author": "daphnawegner",
    "comments": [
      {
        "user": "mrdoob",
        "created_at": "2011-11-03T06:39:15Z",
        "body": "``` javascript\nvar mouseX = ( event.clientX - renderer.domElement.offsetLeft ) / renderer.domElement.width;\nvar mouseY = ( event.clientY - renderer.domElement.offsetTop ) / renderer.domElement.height;\n```\n\nRight?\n"
      }
    ]
  },
  {
    "number": 682,
    "title": "blending mode and html Background",
    "created_at": "2011-10-24T17:22:49Z",
    "closed_at": "2011-11-03T12:38:40Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/682",
    "body": "Hi,\ni would like to know if there is a way to get a blending mode according with the background html color (an image in html background for example) ?\nI've tried using 'setClearColorHex', but when i set this, all my html background color became red (my image became tint in red).\n\nthanks your answer\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/682/comments",
    "author": "Colir",
    "comments": [
      {
        "user": "alteredq",
        "created_at": "2011-10-24T20:47:45Z",
        "body": "Did you set alpha to zero? That's what second argument in `setClearColor` / `setClearColorHex` is for.\n\nAlso make sure background for `<canvas>` DOM element that hosts WebGL content (`renderer.domElement`) is transparent.\n"
      },
      {
        "user": "Colir",
        "created_at": "2011-10-25T09:15:33Z",
        "body": "yes, all this setting was setup.\n\nrenderer.setClearColorHex ( 0xff0000, 0 );\n\ncanvas{background:transparent;}\n\nBut this tint all my page in red\n"
      },
      {
        "user": "alteredq",
        "created_at": "2011-10-25T09:21:52Z",
        "body": "Why do you use red clear color? \n\nTry black `renderer.setClearColorHex ( 0x000000, 0 );`\n"
      }
    ]
  },
  {
    "number": 615,
    "title": "Exporting Modo/blender obj in three js",
    "created_at": "2011-10-05T19:13:10Z",
    "closed_at": "2011-10-13T01:40:35Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/615",
    "body": "I'm attempting to export a .js file from blender 2.59 using an .obj created in modo. The option to export in .js is locked when using the objs.  Are there limitations to the js exporter? Quad polys or merged verts? \n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/615/comments",
    "author": "rledezma",
    "comments": [
      {
        "user": "mrdoob",
        "created_at": "2011-10-05T20:18:25Z",
        "body": "> The option to export in .js is locked when using the objs.\n\nWhat do you mean with \"the objs\"?\n"
      },
      {
        "user": "jbaicoianu",
        "created_at": "2011-10-06T06:10:31Z",
        "body": "I was going to ask this exact question last night, but when I dug into it it looks like there's a function in `__init__.py`:\n\n```\ndef poll(cls, context):\n    return context.active_object != None\n```\n\nSo basically, if you select an object then the option to export as Three.js format becomes available.  It's a little strange since by default the export script exports all meshes, not just the selected one...but this solved the problem for me.\n"
      },
      {
        "user": "alteredq",
        "created_at": "2011-10-06T19:56:26Z",
        "body": "Ah yes, that's from times when exporter could export just a single mesh, so there had to be one selected.\n\nI guess we should remove this check.\n"
      }
    ]
  },
  {
    "number": 614,
    "title": "Switch between Flat and Smooth Shading in the same scene",
    "created_at": "2011-10-05T16:08:09Z",
    "closed_at": "2011-10-05T20:56:43Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/614",
    "body": "Hi, I noticed that when I have 2 objects with 2 different materials, one using FlatShading and the other using SmoothShading.  The renderer (WebGL) only pays attention to the first material shading value.  I was wondering if this was intended or if I was doing something wrong?\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/614/comments",
    "author": "JPac1619",
    "comments": [
      {
        "user": "alteredq",
        "created_at": "2011-10-05T20:41:57Z",
        "body": "Yup, it's expected. If two objects share the same geometry, only one type of shading is possible (as flat / smooth normals are baked upon first render of the geometry).\n\nIf you want to have both flat and smooth shading you need to have separate geometries.\n"
      }
    ]
  },
  {
    "number": 515,
    "title": "setFaceCulling FRONT & BACK problem ",
    "created_at": "2011-09-09T07:54:42Z",
    "closed_at": "2011-09-09T10:31:59Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/515",
    "body": "Hi everyone, i'm a  stuck with a culling problem. \nI've got some buildings from a file defined by many linear rings. But these linear ring may not have  defined in the counterclockwise order, so some walls have a bad orientation. \nSo my idea was to use the setFaceCulling method of the WebGLRenderer to set the culling to both front and back. (I know, it's not very efficient but use this will solve my problem.)\n\nIn order to do that, I follow the WebGLRenderer usage from the wiki and call \"renderer.setFaceCulling(true,\"ccw\");\" in my program.\nBut that's has no effect, all my object turn invisible :( . \n\nSomeone have an idea? I've missed something? It's a bug?\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/515/comments",
    "author": "qboileau",
    "comments": [
      {
        "user": "mrdoob",
        "created_at": "2011-09-09T09:40:34Z",
        "body": "`mesh.doubleSided = true;`\n"
      }
    ]
  },
  {
    "number": 497,
    "title": "handling clicks on html gui elements vs 3.js graphics",
    "created_at": "2011-09-04T20:22:27Z",
    "closed_at": "2011-09-05T15:44:22Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/497",
    "body": "I know this is more a JS question than 3.js but I thought id ask here because i think other must have had the same problem also. so how would I be able to tell whether an html menu has been clicked vs whether an \"interactive\" cube/object has been clicked? i have 1 onchange event handler for the menu and then im using onmousedown for the interacative cube. is there some event that i can use that lets me handle mouse events using jquery or pure js?\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/497/comments",
    "author": "studioijeoma",
    "comments": [
      {
        "user": "mrdoob",
        "created_at": "2011-09-04T21:09:31Z",
        "body": "I would do this:\n\n``` javascript\nmenu.addEventListener( 'click', onMenuClick, false );\nrenderer.domElement.addEventListener( 'click', onRenderClicked, false );\n\nfunction onMenuClick ( event ) {\n\n    event.stopPropagation(); // this will avoid renderer getting the click event.\n\n    // handle menu click\n\n}\n\nfunction onRenderClicked ( event ) {\n\n    // handle viewport click\n\n}\n```\n"
      },
      {
        "user": "studioijeoma",
        "created_at": "2011-09-04T21:14:22Z",
        "body": "thanks! i was going to look into filtering event.targets but ill try that code now. also i'm having problems with menus events  and the camera trackball events in chrome but not FF. the menus dont open when you click them in chrome and i think it maybe be conflicting with some of the trackball mouse events.\n"
      }
    ]
  },
  {
    "number": 473,
    "title": "Order of the transparent pass",
    "created_at": "2011-08-31T07:18:39Z",
    "closed_at": "2011-08-31T10:49:42Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/473",
    "body": "Hello. \n\nAt the updated revision 43, changed the order of the transparent pass.\nWhy renderer to draw from front to back?\nMy model which include transparent polygon is not be drawn correctly at Revision 43.\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/473/comments",
    "author": "Santarh",
    "comments": [
      {
        "user": "alteredq",
        "created_at": "2011-08-31T09:31:16Z",
        "body": "Do you have set your materials with `transparent: true` flag and have `renderer.sortObjects = true` (this should be default)?\n\nWhat changed was just order for opaque objects, transparent ones are still rendered from back to front.\n\nBefore everything was back to front, so if you only had transparent objects, it didn't really matter if you had `transparent` flag set.\n"
      }
    ]
  },
  {
    "number": 451,
    "title": "JSONLoader and MTL File",
    "created_at": "2011-08-24T12:46:08Z",
    "closed_at": "2011-08-24T18:07:15Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/451",
    "body": "I have broken down the problem into following steps:\n1. I have an obj file and an mtl file associated with it.\n2. I use the python converter script to convert the obj file into the JSON model format as:\n   \n   > > python convert_obj_three.py -i infile.obj -o outfile.js\n\n3.Upon inspecting the newly created outfile.js, I see that the \"materials\" sub-array is populated with the data from the mtl file.\n1. To load this outfile.js model, I use JSONLoader. But all I see is the model being loaded. The material data (from the mtl file) is not being shown.\n\nCan someone please explain how to get this working.\nThanks\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/451/comments",
    "author": "chanakyabhardwajj",
    "comments": [
      {
        "user": "gero3",
        "created_at": "2011-08-24T13:09:19Z",
        "body": "when you load with the JSON Loader, you need to add\n\n```\nvar mesh = new THREE.Mesh( geometry, geometry.material );\n```\n\nor \n\n```\nvar mesh = new THREE.Mesh( geometry, geometry.material[0] );\n```\n\nI think it is the second option\n"
      },
      {
        "user": "chanakyabhardwajj",
        "created_at": "2011-08-24T13:40:39Z",
        "body": "So by using the 2nd option, it would use the first material from the array.\n\nBut in case of multiple materials what should be done? \nShould it be:\n`var mesh = new THREE.Mesh( geometry, geometry.material[0],  geometry.material[1],  geometry.material[2], ...);`\n\nAny pointers?\n"
      },
      {
        "user": "gero3",
        "created_at": "2011-08-24T13:43:03Z",
        "body": "Then you should use the first option but if that doesn't work then the materials probably can't work together\n"
      },
      {
        "user": "chanakyabhardwajj",
        "created_at": "2011-08-24T13:48:33Z",
        "body": "Using the 1st option gives a big error (something related to shader initialisation in the source code).\nAny other suggestions, that might work.\n"
      },
      {
        "user": "gero3",
        "created_at": "2011-08-24T13:59:02Z",
        "body": "```\n var materials =  geometry.material, materials2;\n\n for (var i = 0; i< materials.length;i++){\n     materials2.push(materials[i][0]);\n }\n\n var mesh = new THREE.Mesh( geometry, geometry.material[0] );\n```\n"
      },
      {
        "user": "alteredq",
        "created_at": "2011-08-24T18:01:34Z",
        "body": "Just check examples that are loading some models, `MeshFaceMaterial` was created exactly for this:\n\n``` javascript\nvar mesh = new THREE.Mesh( geometry, new THREE.MeshFaceMaterial() );\n```\n\nThis will make mesh use materials that are specified per face in the JSON file.\n\nIf you use materials array, this will render mesh in multiple passes with these materials.\n"
      }
    ]
  },
  {
    "number": 449,
    "title": "ParticleSystem and Sprite",
    "created_at": "2011-08-24T08:45:13Z",
    "closed_at": "2011-08-25T18:44:57Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/449",
    "body": "Hey guys.\n\nI have a ParticleSystem to draw particles and I'm using sprite to create a large sun in the world. However, there seems to be a problem. \nWhen a particle is drawn over a sprite, the transparent edges of the particle texture get drawn like there's no sun behind it. Simply black edges....\n\nSo basically: Is there a way to draw particles with ParticleSystem that has transparent texture to create a circle in a world with sprites that also has transparent texture without any alpha draw issues?\n\nI hope my question is clear, any feedback would be more than welcome!\n\nThanks!\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/449/comments",
    "author": "ghost",
    "comments": [
      {
        "user": "alteredq",
        "created_at": "2011-08-24T18:29:26Z",
        "body": "Hmmm, this is tricky. Sprites are always rendered last, they are not sorted together with regular objects. \n\nBut in order for transparent objects to work ok, they have to be renderer after objects that are behind them.\n\nYou may try to split your scene into two - first one with everything except particles, second one just with particles - and render them one after another (with manual clearing).\n\nAlso, if nature of your particles allow it (no semi-transparent pixels, just on/off transparency), you may try to use `alphaTest` material parameter instead of transparency. Then sorting is not needed.\n"
      }
    ]
  },
  {
    "number": 402,
    "title": "Attach object to surface on vertex-shaded mesh",
    "created_at": "2011-08-04T21:38:46Z",
    "closed_at": "2011-08-05T09:26:05Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/402",
    "body": "This is not an issue with the engine really, it's more of a question. Is it possible to sync a objects movement with a mesh that has been manipulated through a vertex shader? I have an ocean and wants a floating boat on it's surface. The mesh has a sin-function applied for animated waves. I'm trying to use the same offset-function on the boat, but it wont stick. I just guessing, is it because the vertex-shader changes the vertices from the modelView-perspective and not object-space? Is there a better  way to find the surface-position for any given xz-point?\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/402/comments",
    "author": "inear",
    "comments": [
      {
        "user": "alteredq",
        "created_at": "2011-08-04T22:58:05Z",
        "body": "> I just guessing, is it because the vertex-shader changes the vertices from the modelView-perspective and not object-space? \n\nI guess it depends where you apply your displacement - `position` attribute is in object space. \n\nIf you add offset to it before multiplying with `modelViewMatrix`, it should correspond to adding offset to `geometry.vertices[x].position` (this is before applying object transform to get absolute world position).\n\nIf you want to access world-space position in vertex shader (untainted from camera), you could skip supplied `modelViewMatrix` and use instead separate `objectMatrix` and `viewMatrix`.\n\nThis:\n\n``` glsl\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\n```\n\nIs equivalent to this:\n\n``` glsl\nvec4 mPosition = objectMatrix * vec4( position, 1.0 ); // world space\nvec4 mvPosition = viewMatrix * mPosition;\ngl_Position = projectionMatrix * mvPosition;\n```\n"
      }
    ]
  },
  {
    "number": 394,
    "title": "Rotation matrices",
    "created_at": "2011-08-02T17:24:57Z",
    "closed_at": "2011-08-03T06:53:43Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/394",
    "body": "I have a question: Is it possible to apply a custom rotation/scale matrix to a mesh using built-in functions? I want to do a rotation with scaling at the same time, the math is done but I have to implement it.\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/394/comments",
    "author": "LukasSkywalker",
    "comments": [
      {
        "user": "mrdoob",
        "created_at": "2011-08-02T21:43:39Z",
        "body": "Yup.\n\n``` javascript\nobject.matrixAutoUpdate = false;\nobject.matrix // <-- all for you now.\n```\n"
      }
    ]
  },
  {
    "number": 389,
    "title": "Problem with uniform array",
    "created_at": "2011-07-29T19:41:18Z",
    "closed_at": "2011-07-30T14:23:37Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/389",
    "body": "Hi,\nI'm trying to fill a uniform array of vec3 values but with no result. I've tried the following:\n\n``` javascript\nuniforms = {\n        \"cps\": { type: \"fv\", value: [{ type: \"v3\", value: new THREE.Vector3(30, 30, 0) }, { type: \"v3\", value: new THREE.Vector3(100, 30, 0) }] }\n}\n```\n\nand this:\n\n``` javascript\nuniforms = {\n       \"cps\": { type: \"fv\", value: [new THREE.Vector3(30, 30, 0), new THREE.Vector3(100, 30, 0)] }\n}\n```\n\nI've also tried using other types such as \"v3\" and \"fv3\".\n\nLater in shader I have the following declaration:\nuniform vec3 cps[2];\n\nBut when I try to use the passed coordinates they are always 0,0,0 as if JS did not pass anything to the shader.\n\nHow should I initialize uniform vec3 array from JS using Three.js? Thank you!\nCheers,\n-K\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/389/comments",
    "author": "krychu",
    "comments": [
      {
        "user": "alteredq",
        "created_at": "2011-07-29T22:48:51Z",
        "body": "These uniform types use just straightforward JavaScript arrays (also Typed Arrays should work).\n\nSo for your example something like this:\n\n``` javascript\nuniforms = { \"cps\": { type: \"fv\", value: [ 30, 30, 0, 100, 30, 0 ] } };\n```\n\nFor access in shader like this:\n\n``` glsl\nuniform vec3[2];\n```\n\nOr like this:\n\n``` javascript\nuniforms = { \"cps\": { type: \"fv1\", value: [ 30, 30, 0, 100, 30, 0 ] } };\n```\n\nIf you want to access it in shader like this:\n\n``` glsl\nuniform float[6];\n```\n\n**v2**, **v3**, **v4** are for passing single `Vector2`, `Vector3`, `Vector4`\n"
      }
    ]
  },
  {
    "number": 363,
    "title": "texture loading/binding error",
    "created_at": "2011-07-17T06:41:24Z",
    "closed_at": "2011-07-21T02:47:27Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/363",
    "body": "First of all, many thanks to everyone who's contributed to this!!\n\nI've been running into a snag when loading several textures into a scene with a THREE.WebGLRenderTarget.\n\nWhen I change the webgl_rtt.html example to the following it runs but half the spheres don't show up:\n\n``` javascript\n//line 166\nvar n = 5,\ngeometry = new THREE.SphereGeometry( 10, 64, 32 ),\nmaterial2 = new THREE.MeshLambertMaterial( { color:0xffffff, map: rtTexture } );\nmaterial3 = new THREE.MeshBasicMaterial( { color:0xffffff, map: THREE.ImageUtils.loadTexture( \"textures/lava/lavatile.jpg\") } );\n\nfor( var j = 0; j < n; j++ ) {\n    for( var i = 0; i < n; i++ ) {\n        if((i+j)%2) mesh = new THREE.Mesh( geometry, material2 );\n        else  mesh = new THREE.Mesh( geometry, material3 );\n```\n\nand I see this error in the terminal:\n`ERROR:gles2_cmd_decoder.cc(4021)] glDrawXXX: attempt to access out of range vertices`\n\nHowever, when I swap material3 and material2 I see all the spheres and no error:\n\n``` javascript\nif((i+j)%2) mesh = new THREE.Mesh( geometry, material3 );\nelse  mesh = new THREE.Mesh( geometry, material2 );\n```\n\nIf anyone can shed some light on this I'd appreciate it.\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/363/comments",
    "author": "larsberg",
    "comments": [
      {
        "user": "alteredq",
        "created_at": "2011-07-17T18:49:23Z",
        "body": "Hmmm, I was able to reproduce this behavior (just with a bit different error messages).\n\nProblems is actually not about textures but about using shared geometry for two objects which require different GL buffers because they use materials with different complexities - `MeshLambertMaterial` requires normals (for lighting), `MeshBasicMaterial` does not.\n\nBuffers are lazy initialized on the first use, so when you render as the first one object with more complex material, normals buffer will exist in shared geometry (and it'll not bother object with less complex material later on). But if you do the opposite render order, second object will be missing normals buffer.\n\nWorkarounds are: \n1. be careful about order of creation / initialization to have most complex materials first or \n2. use non-shared geometries for objects which have materials requiring different buffers (besides lit/unlit it's also for example smooth / flat normals).\n"
      }
    ]
  },
  {
    "number": 353,
    "title": "Change ambient and color in mesh phong material.",
    "created_at": "2011-07-14T11:38:08Z",
    "closed_at": "2011-07-14T16:40:55Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/353",
    "body": "I have this code.\n\n``` javascript\nvar DefaultWallOutMaterial = new THREE.MeshPhongMaterial( { ambient: 0xffffff, color: 0xffffff  }  );\n```\n\nBut when i do\n\n``` javascript\nDefaultWallOutMaterial .ambient = 0xF7DBD7;\nDefaultWallOutMaterial .color= 0xF7DBD7;\n```\n\nThe object doesn't update the material with the new color (It appears black).\n\nAny Help please?\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/353/comments",
    "author": "bagg",
    "comments": [
      {
        "user": "mrdoob",
        "created_at": "2011-07-14T11:44:16Z",
        "body": "``` javascript\nDefaultWallOutMaterial.ambient.setHex( 0xF7DBD7 );\nDefaultWallOutMaterial.color.setHex( 0xF7DBD7 );\n```\n\nTip: You can find the type of an object by doing this `console.log( DefaultWallOutMaterial.ambient )`.\n"
      }
    ]
  },
  {
    "number": 263,
    "title": "how to change color of a particle",
    "created_at": "2011-06-14T17:57:39Z",
    "closed_at": "2011-06-16T15:13:30Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/263",
    "body": "hi:\n\ni have...\nvar par = new THREE.Particle( new THREE.ParticleCircleMaterial( { color: 0xffffff } ) );\n\nhow to do a change after?\n\nmd doob... YOU ARE MY HEROOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO!!!!!!!!!!\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/263/comments",
    "author": "djquerynet",
    "comments": [
      {
        "user": "mrdoob",
        "created_at": "2011-06-14T23:21:08Z",
        "body": "``` javascript\npar.materials[ 0 ].color.setHex( 0xff0000 );\n```\n\n^^\n"
      }
    ]
  },
  {
    "number": 237,
    "title": "Distance in PointLight",
    "created_at": "2011-06-04T18:26:29Z",
    "closed_at": "2011-06-05T22:47:41Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/237",
    "body": "I'm just wondering how does the distance parameter in pointlight work. Setting anything above 0 seems to turn off the light and any greater negative values doesn't not seem to change the lighting settings..\n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/237/comments",
    "author": "zz85",
    "comments": [
      {
        "user": "alteredq",
        "created_at": "2011-06-05T15:23:25Z",
        "body": "`Distance` controls linear attenuation of `PointLight`. \n\nIf it's zero then attenuation is switched off and light affects all geometry. If it's `>0` then it tells at which distance from the light vertices get zero light. \n\nAttenuation is linear so vertices just next to light get full light, vertices half the distance get half the light and vertices at and beyond distance get zero light.\n"
      }
    ]
  },
  {
    "number": 155,
    "title": "One question about the script \"convert_obj_three.py\"",
    "created_at": "2011-04-03T12:42:27Z",
    "closed_at": "2011-04-03T19:26:15Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/mrdoob/three.js/issues/155",
    "body": "Hey \n\nI've got one question about the script \"convert_obj_three.py\". \n\nI've tried to convert one .obj with but binary conversion has only created a .js file and not .bin file. Is this normal? \n\n(I've typed this command : python convert_obj_three.py -i infile.obj -o outfile.js)\n\nThanks in advance. \n",
    "comments_url": "https://api.github.com/repos/mrdoob/three.js/issues/155/comments",
    "author": "sofpower",
    "comments": [
      {
        "user": "alteredq",
        "created_at": "2011-04-03T15:47:53Z",
        "body": "If you want to create binary model, you need to add `-t binary` option:\n\n```\npython convert_obj_three.py -i infile.obj -o outfile.js -t binary\n```\n\nThis should create:\n\n```\noutfile.js   (model with just materials in JSON)\noutfile.bin  (binary buffers for the model)\n```\n"
      }
    ]
  }
]