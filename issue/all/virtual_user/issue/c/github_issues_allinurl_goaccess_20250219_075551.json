[
  {
    "number": 2597,
    "title": "Response time format (seconds vs. milliseconds)",
    "created_at": "2023-12-20T09:00:20Z",
    "closed_at": "2023-12-21T08:03:23Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2597",
    "body": "Thanks a bunch for sharing GoAccess. It a great tool which just works! I have a question about response time analysis that I hope someone can help me out solving. \r\n\r\nI have a custom log file with the following format:\r\n\r\n`2023-12-20T08:17:21Z GET 200 260.403 ms 2048 kB 15.36% /list/default`\r\n\r\nI have tried to parse it using the following command:\r\n\r\n`goaccess --datetime-format='%Y-%m-%dT%H:%M:%SZ' --log-format='%x %m %s %T %h %^ %^ %^%r' --no-ip-validation`.\r\n\r\nI end up with something like this:\r\n\r\n```\r\n Hits     h% Vis.      v% Avg. T.S. Cum. T.S. Max. T.S. Mtd     Proto    Data\r\n ---- ------ ---- ------- --------- --------- --------- ------- -------- ----\r\n   17 45.95%    1 100.00%   4.46 mn   1.26 hr   7.46 mn GET     ---      % /list/default\r\n```\r\n\r\nAs I understand the output Average T.S. (time spent?) is reported in minutes but that does not make sense combined with the response time reported in milliseconds. \r\n\r\nI know that `%T` corresponds to \"The time taken to serve the request, in seconds with milliseconds resolution\" but if I switch to `%L` (The time taken to serve the request, in milliseconds as a decimal number) I get `0.00 us` in all time columns. I also tried with. `%n` for good measure but that also yielded `0.00 us`.\r\n\r\nI wonder if it has to do with `.` or `,` is used as decimal separator? but I could not spot any way to configure this in the documentation.\r\n\r\nNotes: Since the log does not have any host name information I (mis)use the `ms` element as the hostname combined with `--no-ip-validation`.",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2597/comments",
    "author": "kasperg",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2023-12-21T01:43:23Z",
        "body": "Great question! It appears that you can accomplish this by utilizing `%L` when splitting the `.` to capture the whole number.\r\n\r\n    goaccess access.log --datetime-format='%Y-%m-%dT%H:%M:%SZ' --log-format='%x %m %s %L.%^ %h %b %^ %^ %U' --no-ip-validation\r\n\r\nLet me know if that helps"
      }
    ]
  },
  {
    "number": 2516,
    "title": "==1975== Format Errors - Verify your log/date/time format",
    "created_at": "2023-06-01T11:42:10Z",
    "closed_at": "2023-06-19T07:46:49Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2516",
    "body": "When using GoAccess to analyze log files, this error showing \"==1975== Format Errors - Verify your log/date/time format\".\r\ncommand:\r\n`/usr/local/bin/goaccess /var/log/httpd/ssl_access_log --log-format='%h %^[%d:%t %^] \"%r\" \"%s\" %b' --date-format=%d/%b/%Y --time-format=%T -o /mnt/redeploy/report.html`\r\napache Logs:\r\n`10.13.35.24 - - [29/May/2023:08:58:23 +0800] \"POST /user-login.html HTTP/1.1\" 200 58`",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2516/comments",
    "author": "zwb993",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2023-06-04T17:01:47Z",
        "body": "I'd run it as:\r\n\r\n    goaccess access.log --log-format=COMMON"
      }
    ]
  },
  {
    "number": 2463,
    "title": "No input data was provided nor there's data to restore when running in a python srcipt",
    "created_at": "2023-02-11T07:24:27Z",
    "closed_at": "2023-02-11T09:15:54Z",
    "labels": [
      "question",
      "log-processing",
      "other"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2463",
    "body": "When I run `cat logs/access.log | /usr/bin/goaccess --log-format='%h [%d:%t %^] \"%r\" %s %b \"%R\" \"%u\" %T' --date-format=%d/%b/%Y --time-format=%T -o html` from shell, it works. \r\n\r\nBut when I run from python , it fails with error: `GoAccess - version 1.7 - Jan 1 2023 03:16:59 Config file: /etc/goaccess/goaccess.conf Fatal error has occurred Error occurred at: src/goaccess.c - initializer - 1471 No input data was provided nor there's data to restore.`\r\n```py\r\n#!/usr/bin/env python3\r\nimport subprocess\r\n\r\n\r\ncmd = '''cat logs/access.log | /usr/bin/goaccess --log-format='%h [%d:%t %^] \"%r\" %s %b \"%R\" \"%u\" %T' --date-format=%d/%b/%Y --time-format=%T -o html\r\n'''\r\ndef runcmd(command):\r\n    ret = subprocess.run(command,shell=True,stdout=subprocess.PIPE,stderr=subprocess.PIPE,encoding=\"utf-8\",timeout=10)\r\n    if ret.returncode == 0:\r\n        return ret.stdout\r\n    return ret.stderr\r\n\r\nprint(runcmd(cmd))\r\n\r\n```",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2463/comments",
    "author": "xiangnanscu",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2023-02-11T16:00:41Z",
        "body": "Did you find the issue? Sounds like you passing `-` to goaccess should solve your issue.\r\n\r\n    /usr/bin/goaccess - --log-format='%h [%d:%t %^] \"%r\" %s %b \"%R\" \"%u\" %T' --date-format=%d/%b/%Y --time-format=%T -o html"
      }
    ]
  },
  {
    "number": 2443,
    "title": "Token '+0000]' doesn't match specifier '%h'",
    "created_at": "2023-01-19T20:42:57Z",
    "closed_at": "2023-01-22T17:04:56Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2443",
    "body": "`mywebsite.net 2.248.91.208 - - [19/Jan/2023:20:25:45 +0000] \"GET /test/ HTTP/1.1\" 200 97 \"-\" \"node-XMLHttpRequest\" \"172.18.0.4:8081\"`\r\n\r\nThis is a standard nginx configuration as far as I know. The error I get is the following:\r\n`Token '+0000]' doesn't match specifier '%h'`",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2443/comments",
    "author": "binarybaron",
    "comments": [
      {
        "user": "wphampton",
        "created_at": "2023-01-20T14:39:17Z",
        "body": "Could you share the command you are running to process the logs? Specifically the `--log-format` option."
      },
      {
        "user": "binarybaron",
        "created_at": "2023-01-20T19:28:57Z",
        "body": "I tried `Common Log Format (CLF) with Virtual Host`"
      },
      {
        "user": "wphampton",
        "created_at": "2023-01-20T19:48:25Z",
        "body": "Like this? `goaccess access.log --log-format=VCOMBINED`"
      },
      {
        "user": "allinurl",
        "created_at": "2023-01-21T22:16:41Z",
        "body": "This should do it:\r\n\r\n    goaccess access.log --log-format='%v %h %^[%d:%t %^] \"%r\" %s %b \"%R\" \"%u\" %^' --date-format=%d/%b/%Y --time-format=%T"
      }
    ]
  },
  {
    "number": 2424,
    "title": "Need help with log format [uwsgi]",
    "created_at": "2022-11-28T11:11:49Z",
    "closed_at": "2022-12-02T09:27:06Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2424",
    "body": "Hello,\r\n\r\nI'm trying to analyze a uwsgi log file.\r\n\r\nGoaccess' log format is quite cryptic... could anybody help me get the right formats for this file? I'd be very grateful!\r\n\r\nI tried the formats suggested in #386, but at least the dates are completely wrong.\r\n\r\nHere are a couple of lines from the file:\r\n\r\n```\r\n[pid: 3492075|app: 0|req: 4282/169885] 54.36.148.22 () {38 vars in 549 bytes} [Mon Nov 28 06:41:16 2022] GET /actus/61476774cb7d6ede781a9b4a => generated 15747 bytes in 24 msecs (HTTP/2.0 200) 2 headers in 82 bytes (1 switches on core 0)\r\n[pid: 3492075|app: 0|req: 4283/169886] 54.36.148.231 () {38 vars in 709 bytes} [Mon Nov 28 06:41:25 2022] GET /resize/uploaded/pictures/4b8ea68f9f6a44c882b7fe0a9e75e621.jpg?v=YUdm_A&w=1024&s=b'Qut9-GQTlTM55BX1xNnZKrGqskA' => generated 122538 bytes in 9 msecs via sendfile() (HTTP/2.0 200) 6 headers in 242 bytes (0 switches on core 0)\r\n[pid: 3492075|app: 0|req: 4284/169887] 185.191.171.21 () {40 vars in 539 bytes} [Mon Nov 28 06:43:31 2022] GET /robots.txt => generated 12511 bytes in 1 msecs (HTTP/1.1 404) 2 headers in 89 bytes (1 switches on core 0)\r\n[pid: 3492075|app: 0|req: 4285/169888] 185.191.171.21 () {40 vars in 677 bytes} [Mon Nov 28 06:43:31 2022] GET /agenda/61b1e344f02ed2de108bc54a => generated 238040 bytes in 206 msecs (HTTP/1.1 200) 2 headers in 83 bytes (2 switches on core 0)\r\n```",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2424/comments",
    "author": "amiguet",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2022-12-02T00:54:39Z",
        "body": "Sorry for the delay. This should do it:\r\n\r\n    goaccess access.log --log-format='%^] %h %^[%x] %m %U %^(%H %s) %^' --datetime-format='%a %b %d %H:%M:%S %Y' --date-spec=min --ignore-panel=OS --ignore-panel=BROWSERS --ignore-panel=REFERRING_SITES"
      },
      {
        "user": "amiguet",
        "created_at": "2022-12-02T09:27:06Z",
        "body": "That seems to work, many thanks! :-)\r\n\r\nI had to prefix the command with\r\n\r\n```\r\nLANG=\"en_US.UTF-8\"\r\n```\r\n\r\nas suggested in #2415 because my local locale (!) doesn't match the locale of the log file.\r\n\r\nBut other than that it works great. Thanks!"
      }
    ]
  },
  {
    "number": 2368,
    "title": "Log Format for Traefik and Docker",
    "created_at": "2022-08-22T04:03:45Z",
    "closed_at": "2022-08-25T18:29:22Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2368",
    "body": "Could I get some assistance with finding the right format for the following setup? I was unable to locate a similar one from previous posts.\r\n\r\n```\r\ntime=\"2022-07-26T10:01:42-04:00\" level=error msg=\"accept tcp [::]:443: use of closed network connection\" entryPointName=websecure\r\ntime=\"2022-07-26T10:01:42-04:00\" level=error msg=\"accept tcp [::]:80: use of closed network connection\" entryPointName=web\r\ntime=\"2022-07-26T10:01:42-04:00\" level=error msg=\"close tcp [::]:80: use of closed network connection\" entryPointName=web\r\ntime=\"2022-07-26T10:01:43-04:00\" level=error msg=\"close tcp [::]:443: use of closed network connection\" entryPointName=websecure\r\ntime=\"2022-07-27T14:55:34-04:00\" level=error msg=\"accept tcp [::]:443: use of closed network connection\" entryPointName=websecure\r\ntime=\"2022-07-27T14:55:34-04:00\" level=error msg=\"accept tcp [::]:80: use of closed network connection\" entryPointName=web\r\ntime=\"2022-07-27T14:55:34-04:00\" level=error msg=\"close tcp [::]:80: use of closed network connection\" entryPointName=web\r\ntime=\"2022-07-27T14:55:34-04:00\" level=error msg=\"close tcp [::]:443: use of closed network connection\" entryPointName=websecure\r\n```",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2368/comments",
    "author": "the-jchusid",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2022-08-23T13:29:00Z",
        "body": "Please try the following (>= v1.6.2):\r\n\r\n    goaccess log --log-format='%^=\"%x\" %^=%e %^[%h]:%^: %U\" %^=%v' --datetime-format='%Y-%m-%dT%H:%M:%S%z' --hour-spec=min --date-spec=min --http-protocol=no --http-method=no --ignore-panel=OS --ignore-panel=BROWSERS --ignore-panel=REFERRING_SITES --ignore-panel=REQUESTS --ignore-panel=REQUESTS_STATIC --ignore-panel=NOT_FOUND --ignore-panel=STATUS_CODES"
      }
    ]
  },
  {
    "number": 2360,
    "title": "debug-file flag",
    "created_at": "2022-08-01T15:52:49Z",
    "closed_at": "2022-08-01T19:24:20Z",
    "labels": [
      "question",
      "command-line options"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2360",
    "body": "Hi,\r\n\r\nI'm running something similar to below, not sure if I'm doing something wrong here but the debug file gets created as \"--debug-file=goaccess.debug\" rather than \"goaccess.debug\". The invalid requests file gets created correctly.\r\n\r\ngoaccess -l --debug-file=goaccess.debug --invalid-requests=goaccess.invalid --no-global-config --ping-interval=15 --config-file=goaccess.conf\r\n\r\nThanks!",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2360/comments",
    "author": "xavier-hernandez",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2022-08-01T17:33:58Z",
        "body": "Looks like you are passing `-l` + `--debug-file` which are the same. I'd do one or the other one but not both:\r\n\r\n    goaccess --debug-file=goaccess.debug --invalid-requests=goaccess.invalid --no-global-config --ping-interval=15 --config-file=goaccess.conf"
      },
      {
        "user": "xavier-hernandez",
        "created_at": "2022-08-01T18:41:35Z",
        "body": "@allinurl thanks that worked. I guess I misunderstood the man page :/\r\n\r\nBy the way, I saw this as well,--ping-interval\u2276secs> . It should be =< . Do you want me to open a separate issue for that?\r\n\r\nThanks."
      }
    ]
  },
  {
    "number": 2326,
    "title": "Please help with my Apache Log format (including request times)",
    "created_at": "2022-05-23T08:48:26Z",
    "closed_at": "2022-05-25T00:22:14Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2326",
    "body": "Hello,\r\n\r\nMy Apache LogFormat was the following:\r\n\r\n    LogFormat \"%{X-Forwarded-For}i %l %u %t \\\"%r\\\"  %>s %b \\\"%{Referer}i\\\" \\\"%{User-Agent}i\\\"\" varnish\r\n    LogFormat \"%{X-Forwarded-For}i %h %l %u %t \\\"%r\\\"  %s %b \\\"%{Referer}i\\\" \\\"%{User-agent}i\\\"\" combined-forwarded\r\n    CustomLog /var/log/httpd/access.log varnish\r\n    ErrorLog /var/log/httpd/error.log \r\n\r\nWith this, I am able to generate report with goaccess without problems, but I am not fetching the response times so the report is being generated without the AVG. TS / CUM. T.S / MAX. T.S that i need.\r\n\r\nI have tried adding the '%D' param in the LogFormat like this:\r\n\r\n    LogFormat \"%{X-Forwarded-For}i %l %u %t %D \\\"%r\\\"  %>s %b \\\"%{Referer}i\\\" \\\"%{User-Agent}i\\\"\" varnish\r\n    LogFormat \"%{X-Forwarded-For}i %h %l %u %t %D \\\"%r\\\"  %s %b \\\"%{Referer}i\\\" \\\"%{User-agent}i\\\"\" combined-forwarded\r\n    CustomLog /var/log/httpd/access.log varnish\r\n    ErrorLog /var/log/httpd/error.log \r\n\r\nIn the /var/log/httpd/access.log I can see this info is now being received, for example:\r\n\r\n10.10.49.139 - - [23/May/2022:10:15:17 +0200] **18598** \"GET /xxxxx/animations.min.css HTTP/1.1\"  200 18468 \"-\" \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:100.0) Gecko/20100101 Firefox/100.0\"\r\n10.10.49.139 - - [23/May/2022:10:15:17 +0200] **22010** \"GET /xxxxx/appart-custom.js HTTP/1.1\"  200 432 \"-\" \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:100.0) Gecko/20100101 Firefox/100.0\"\r\n10.10.49.139 - - [23/May/2022:10:15:17 +0200] **13073** \"GET /xxxxxdist/scripts/main.js HTTP/1.1\"  200 55574 \"-\" \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:100.0) Gecko/20100101 Firefox/100.0\"\r\n\r\nI am not able to generate a valid Goaccess report that includes the (AVG. TS / CUM. T.S / MAX. T.S) - i understand now this values is being fetched with the '%D'.\r\n\r\nPlease anybody can help me with the log-format parsing for my case? It will be high appreciated.\r\n\r\nThanks in advance for help.\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2326/comments",
    "author": "amilhub",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2022-05-23T18:24:59Z",
        "body": "Please try the following, it should do the job:\r\n\r\n    goaccess access.log --log-format='%h %^[%d:%t %^] %D \"%r\" %s %b \"%R\" \"%u\"' --date-format=%d/%b/%Y --time-format=%T\r\n"
      },
      {
        "user": "amilhub",
        "created_at": "2022-05-24T06:44:26Z",
        "body": "Hello,\r\n\r\n==24275== Token '' doesn't match specifier '%s'\r\n==24275== Errores de Formato - Verifique su formato de log/fecha/hora\r\n\r\nWith your log-format suggestion gives me this error (about %s status code), is not being parsed correctly (format errors on log/date/time).\r\n\r\nThank you very much again.\r\n\r\nEDIT: The issue was a \"blank\" space on log file, so with the suggested '--log-format' params it seems working like a charm :)"
      }
    ]
  },
  {
    "number": 2291,
    "title": "[Question] Why does there need to be separate databases for --date-spec?",
    "created_at": "2022-03-10T23:30:29Z",
    "closed_at": "2022-03-31T18:16:14Z",
    "labels": [
      "question",
      "log-processing"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2291",
    "body": "I assumed that I could use the same database when accessing --date-spec=hr when I already created a database with --date-spec=date. I assumed that all the data for --date-spec=hr would be there in the database from --date-spec=date. However, when I try that it does not work and only shows the results from --date-spec=date instead of hourly. I am using output of json.\r\n\r\nIt does work if I create 2 separate databases.\r\n\r\nIs this by design?\r\nI have another feature request for --date-spec=min. I am also curious about that.\r\nI need to generate a report for all three (date, hr, min) and I am trying to find the most efficient way possible.\r\n\r\nThanks",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2291/comments",
    "author": "ggedde",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2022-03-11T01:04:29Z",
        "body": "Good question. When using `--date-spec=<hr|min>`, that data is parsed and stored into the db as specified by that option. In your case, you probably want to create three reports, however, it depends exactly on what you are looking for. If you are mostly interested on the visitors panel metrics, then you could generate it using `--date-spec=min` and then you can post-process the JSON file and strip the date as needed.\r\n\r\nI'm working on #117 as we speak, I'm thinking this would give you more flexibility as you will be able to filter by date ranges and correlate all that data. \r\n"
      },
      {
        "user": "ggedde",
        "created_at": "2022-03-11T02:39:02Z",
        "body": "Thanks @allinurl, creating three different reports and databases is not that big of an issue. So I'll probably keep moving forward with that.\n\nAs far as doing the post process I don't think that'll work for my reports. I am only focused on the unique visitors. If hour 1 has four unique visitors and hour 2 has 3 unique visitors, there's no real way to know for sure how many unique visitors there were for hours 1 and 2 as it could be anything between 4 and 7. This is also the same issue between hours and days and that's why I can't just process off of the hours report to get the days numbers. Let me know if that makes sense or if there is something that I am missing.\n\nThanks"
      },
      {
        "user": "allinurl",
        "created_at": "2022-03-15T00:15:25Z",
        "body": "Makes sense. You will need to have goaccess process the log at the granular level. "
      }
    ]
  },
  {
    "number": 2267,
    "title": "Token for '%b' specifier is NULL",
    "created_at": "2022-01-22T06:55:06Z",
    "closed_at": "2022-01-23T02:21:06Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2267",
    "body": "Example log entries:\r\n`192.168.112.89 - - [22/Jan/2022:00:00:01 +0800] \"GET /app/bed/message/unread?admId=18413&X-ARR-CACHE-HIT=0&X-ARR-LOG-ID=ed1bf584-5da6-4010-9435-7ce111a75131&SERVER-STATUS=200 HTTP/1.1\" 200 192`\r\n\r\nGoaccess version:\r\n`GoAccess - version 1.5.4 - Jan 20 2022 11:47:38` \r\n\r\nSo I start goaccess via:\r\n`LANG='zh_CN.UTF-8' LC_TIME='en_US.UTF-8' goaccess goaccess.log -a -o report.html --log-format='%h %^[%d:%t %^] \"%r\" %s %b \"%R\" \"%u\"\" \"%u\"'  --date-format=%d/%b/%Y --time-format=%H:%M:%S`\r\n\r\nAnd i get a fails msg  about  `Token for '%b' specifier is NULL`.\r\n\r\nIf i chang `%h %^[%d:%t %^] \"%r\" %s %b \"%R\" \"%u\"\" \"%u\"` to `%h %^[%d:%t %^] \"%r\" %s \"%R\" \"%u\"\" \"%u\"` it's work wall.\r\n\r\nSo it's a bug for this version ?\r\n\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2267/comments",
    "author": "snowlyg",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2022-01-22T15:16:08Z",
        "body": "Please try using:\r\n\r\n    goaccess --log-format=COMMON access.log\r\n"
      }
    ]
  },
  {
    "number": 2259,
    "title": "What is this log format?",
    "created_at": "2022-01-07T14:25:40Z",
    "closed_at": "2022-01-07T19:06:54Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2259",
    "body": "I think it's Common Log Format with Virtual Host, but the prefix is throwing me off. Log is rendered like so:\r\n\r\n```log\r\nDec 16 00:00:00 prod.site.com auth-apache-access: 99.99.99.999 9999 - [16/Dec/2021:00:00:00 +0000] \"POST /api/user/ HTTP/1.1\" 200 471 \"-\" \"Python-urllib/3.7\"\r\n```\r\n\r\nHow do I take this into account for the custom format?\r\n\r\nThanks for your time.",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2259/comments",
    "author": "rdhar-test",
    "comments": [
      {
        "user": "0bi-w6n-K3nobi",
        "created_at": "2022-01-07T17:36:23Z",
        "body": "Hi @rdhar-tc \r\n\r\nIt is seems more NCSA Combined with Virtual Host (VCOMBINED).\r\nMaybe you can try this, at `goaccess.conf`:\r\n\r\n`time-format %H:%M:%S`\r\n`date-format %d/%b/%Y`\r\n`log-format %^ %^ %^ %v %^ %h %^[%d:%t %^] \"%r\" %s %b \"%R\" \"%u\"`\r\n\r\nor `--time-format=\"...\"` `--date-format=\"...\"`  `--log-format=\"...\"`, at command-line.\r\n"
      }
    ]
  },
  {
    "number": 2216,
    "title": "`--html-prefs='{\"theme\":\"dark gray\"}'` does not work, maybe?",
    "created_at": "2021-10-24T11:42:46Z",
    "closed_at": "2021-10-25T10:16:58Z",
    "labels": [
      "question",
      "html report"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2216",
    "body": "Hello everyone,\r\n\r\nwe\u2019re having problems with starting `goaccess` with the `dark gray` theme applied by default \u2026\r\n\r\n`goaccess /var/log/nginx/access.log -o /var/www/monitoring/index.html --log-format=COMBINED --real-time-html --html-prefs='{\"theme\":\"dark gray\"}' --ssl-cert=/etc/letsencrypt/live/<domain>/fullchain.pem --ssl-key=/etc/letsencrypt/live/<domain>/privkey.pem --daemon`\r\n\r\nWe tried `--html-prefs='{\"theme\":\"dark gray\"}'`, `--html-prefs='{\"theme\":\"dark-gray\"}'`, `--html-prefs='{\"theme\":\"dark_gray\"}'`, `--html-prefs='{\"theme\":\"darkgray\"}'`, and `--html-prefs='{\"theme\":\"darkGray\"}'` without sucess.\r\n\r\nAny advice, please?",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2216/comments",
    "author": "fooness",
    "comments": [
      {
        "user": "0bi-w6n-K3nobi",
        "created_at": "2021-10-24T23:23:17Z",
        "body": "Hi @fooness \r\n\r\nThe correct form is `{\"theme\":\"dark_gray\"}`.\r\nHowever, the browser can cache your last choice at any report or real-time report that you already seen.\r\nSo, do you need clean cache or create a new profile [at browser] to be sure that your selection was obeyed.\r\n\r\nI hope that could help you.\r\n"
      }
    ]
  },
  {
    "number": 2186,
    "title": "[Help] Need real-time-html report",
    "created_at": "2021-09-20T07:14:29Z",
    "closed_at": "2021-09-22T03:54:44Z",
    "labels": [
      "question",
      "websocket-server"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2186",
    "body": "Recently started using goaccess for our apache base website. We are able to get console running and even was able to generate static HTML page. But again whenever I try to generate report in HTML either static or relatime it shows Websocket interface. Wereas would like to automate a process to generate real-time-html report which runs in background as a daemon or system service. Please can you guide. If this is answered already then please excuse me and share the link for me to refer.   ",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2186/comments",
    "author": "JoelDivekar",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2021-09-21T00:05:07Z",
        "body": "I'm not sure I follow, but if you are interested in running goaccess in the background, you could run it as:\r\n\r\n    goaccess access.log --log-format=COMBINED --daemonize\r\n\r\nOr you could do it through systemd, e.g., #1898 \r\n\r\nLet me know if that helps."
      }
    ]
  },
  {
    "number": 2167,
    "title": "Error Config file: No config file used",
    "created_at": "2021-08-19T08:08:12Z",
    "closed_at": "2021-08-25T07:37:34Z",
    "labels": [
      "question",
      "command-line options"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2167",
    "body": "I'm unable to set my config file for GoAccess permanently.\r\n\r\nIf I run `goaccess access.log -c` and chose the first option everything goes smoothly and I can access the log. If I want to create a real-time webpage, I got the error on the title.\r\n\r\nMy GoAccess conf file is in _/etc/goaccess/goaccess.conf_ and my log is in _/var/log/apache2/access.log_\r\n\r\nHo can I create the dynamic page in my public HTML folder _/var/www/html/report.html_ ?",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2167/comments",
    "author": "NicoCaldo",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2021-08-24T01:45:59Z",
        "body": "Please try setting your config file under `~/.goaccessrc` and setting your options in there (no equal sign within the config file).\r\n\r\nThen you should be able to run it as:\r\n\r\n    # goaccess /var/log/apache2/access.log -o /var/www/html/report.html\r\n\r\nor \r\n\r\n    # goaccess /var/log/apache2/access.log -p ~/.goaccessrc -o /var/www/html/report.html"
      },
      {
        "user": "NicoCaldo",
        "created_at": "2021-08-25T07:37:34Z",
        "body": "It seems that this command worked\r\n\r\n```\r\n# goaccess /var/log/apache2/access.log -p /etc/goaccess/goaccess.conf -o /var/www/html/report.html --real-time-html\r\n```\r\n"
      }
    ]
  },
  {
    "number": 2155,
    "title": "Having a hard time with persistent storage",
    "created_at": "2021-07-28T23:00:59Z",
    "closed_at": "2021-07-29T00:54:34Z",
    "labels": [
      "question",
      "on-disk"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2155",
    "body": "Hey,\r\nI'm running into some issues with persistent storage and live monitoring.\r\nI want to constantly transfer data from my log file to the persistent storage location but also keep already saved logs.\r\nBut somehow every time I launch goaccess with\r\n`--real-time-html --persist --restore`\r\nit doesn't constantly save to my storage location.\r\nIt isn't quite clear to me whether it saves periodically or not at all.\r\nI couldn't really find anything regarding this in the doc.\r\nI'm honestly really confused rn.\r\nI managed to load all of my old log files using `zcat /var/log/apache2/access.log.*.gz | goaccess -a\r\n`\r\nand then `goaccess --persist`\r\nIf you could help me out by telling me wether it will save to my data location would be great.\r\nAlso does running it daemonized have an impact on it?\r\nEdit: config file is setup correctly with a persistent storage location.",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2155/comments",
    "author": "Lennart01",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2021-07-28T23:10:41Z",
        "body": "I'd run it once as:\r\n\r\n    # zcat access.log.*.gz | goaccess access.log.1 - -o report.html --log-format=COMBINED --persist\r\n\r\nand then just keep adding data to the db as:\r\n\r\n    # goaccess access.log -o report.html --log-format=COMBINED --persist --restore\r\n\r\nEvery time the log rotates, access.log would be the newest and you would just keep adding the new data on top it. \r\n\r\nAlso, before you try that, I'd make sure to the delete current runs that you may have persisted before, e.g.,\r\n\r\n    # rm -rf /tmp/*.db\r\n\r\nGive it a shot and let me know how it goes."
      },
      {
        "user": "Lennart01",
        "created_at": "2021-07-28T23:15:05Z",
        "body": "yeah about that.\r\nmy initial question would be whether if I run it with --real-time-html and ---persist will it save only once on execution or also down the line?\r\nand thanks if this doesn't work I will definitely try that."
      },
      {
        "user": "Lennart01",
        "created_at": "2021-07-28T23:26:36Z",
        "body": "If `--real-time-html --persist` doesnt autosave I would just run it once with `--realtime-html` and implement a log rotate hook as described in the guide by Arnaud Rebillout.\r\nI kinda want a live monitoring with live data but also long-term data storage.\r\nIve now managed to get my old logs pulled with the method you described.\r\nIm now running it with `goaccess /var/log/apache2/access.log -o /var/www/html/downloads/report.html --persist --restore --log-format=COMBINED --real-time-html`"
      },
      {
        "user": "allinurl",
        "created_at": "2021-07-28T23:51:47Z",
        "body": "You should be fine, `--real-time-html` doesn't affect anything since a complete parse is done, the only difference is that when using real-time, the response to the browser is much lighter than a full blown report. The data is persisted upon exiting/closing goaccess. e.g., SIGINT - `Ctrl+C`"
      }
    ]
  },
  {
    "number": 2148,
    "title": "X-Forwarded-For field not parsing",
    "created_at": "2021-07-15T13:48:45Z",
    "closed_at": "2021-07-19T22:02:48Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2148",
    "body": "goaccess 1.5.1 macos 11.4\r\n\r\nI am not able to convince goaccess about the X-Forwarded-For field in my logs.  There is nothing special about it:\r\n\r\n```\r\ntest.log:\r\nx.x.x.x - - [15/Jul/2021:14:18:11 +0200] \"GET / HTTP/1.1\" 200 33900 \"-\" \"-\" \"y.y.y.y.y\" 0.137 TLSv1.2\r\n```\r\n\r\n```\r\ngoaccess --log-format='%h %^[%d:%t %^] \"%r\" %s %b \"%R\" \"%u\" ~h{,\" } %T %^' test.log\r\n```\r\n\r\nThis always shows `x.x.x.x` in the \"Visitor Hostnames and IPs\" (not `y.y.y.y`)",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2148/comments",
    "author": "minusf",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2021-07-15T21:42:17Z",
        "body": "For the given log, e.g.,\r\n\r\n```\r\n192.168.0.1 - - [15/Jul/2021:14:18:11 +0200] \"GET / HTTP/1.1\" 200 33900 \"-\" \"-\" \"190.12.12.12\" 0.137 TLSv1.2\r\n192.168.0.1 - - [15/Jul/2021:14:18:11 +0200] \"GET / HTTP/1.1\" 200 33900 \"-\" \"-\" \"10.12.12.12, 21.2.212.2\" 0.137 TLSv1.2\r\n```\r\n\r\nThis should work:\r\n\r\n    goaccess access.log --log-format='%^[%d:%t %^] \"%r\" %s %b \"%R\" \"%u\" ~h{,\" } %T %K' --date-format=%d/%b/%Y --time-format=%T"
      },
      {
        "user": "minusf",
        "created_at": "2021-07-15T22:44:23Z",
        "body": "so `%h` and `~h` are exclusive?  is this mentioned somewhere in the man page? "
      },
      {
        "user": "allinurl",
        "created_at": "2021-07-17T18:41:51Z",
        "body": "Part of it was in the man page, under the specifiers section. I expanded this to hosts as well.\r\n\r\n> Important\r\n> If multiple time served specifiers or hosts are used at the same time, the first option specified in the format string will take priority over the other specifiers."
      },
      {
        "user": "minusf",
        "created_at": "2021-07-17T19:20:42Z",
        "body": "ok, that helps.  but i am still confused becasue `%h != ~h`, one is `host`, the other is `x-forwarded-for`, they might be both just ip numbers but they are specifying 2 entirely different things..  i see that `%x` is already taken but maybe `~X` would be a less confusing specifier for it?"
      },
      {
        "user": "allinurl",
        "created_at": "2021-07-19T21:19:44Z",
        "body": "Good point, the reason it uses `~h` is that whatever is extracted either through `~h` or `%h`, that's what it's going to be put in the hosts panel. "
      }
    ]
  },
  {
    "number": 2117,
    "title": "OpenLiteSpeed Common log format not being detected",
    "created_at": "2021-05-21T02:56:02Z",
    "closed_at": "2021-06-12T06:28:42Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2117",
    "body": "Hello and thanks for reading my issue :D \r\n\r\nI've been experiencing some trouble reading my virtual host access log for anylisis and I've scrapped the whole web in search of answers but I could not find a forum for this tool.\r\n\r\nI changed my virtual host log format from `NCSA extended/combined log format` to `Common Log Format (CLF)` since my results didn't show any unique visitors, 404's, time distributions or even http status codes.  I was using this command: `sudo goaccess vhost.access_log --log-format='\"%h %l %u [%d:%T] \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\" \"%{Host}i\"\"' --date-format=%d/%b/%Y --time-format=%T` When i used NCSA ext/com.\r\n\r\nNow, when trying to parse Common Log Format things get weird, the OpenLiteSpeed documentation shows the exact same expression as the apache documentation which is this one: `\"%h %l %u %t \\\"%r\\\" %>s %b\"` (Note the `\\` used to escape quotations).\r\n\r\nBut when trying to load the new common log format file I get this error:\r\n\r\n```\r\nParsed 10 lines producing the following errors:\r\n\r\nToken 'example.com' doesn't match specifier '%h'\r\nToken 'example.com' doesn't match specifier '%h'\r\n```\r\nMy log file looks like this (CLF):\r\n\r\n```\r\n\"example.com 000.000.000.00 - - [21/May/2021:02:36:14 +0000] \"GET / HTTP/2\" 200 10540\"\r\n```\r\n\r\nI'm using this command: `sudo goaccess vhost.access_log --log-format='\"%h %l %u %t \"%r\" %>s %b\"' --date-format=%d/%b/:Y --time-format=%T` which doesn't work.\r\n\r\nWhat am I doing wrong here? I've checked the documentation and tried a few variants in the log format but no success yet :( is there any way to solve the missing results issue? or am I just wrong in the log format?\r\n\r\nThanks in advance for your response :)\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2117/comments",
    "author": "ghost",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2021-05-21T12:47:40Z",
        "body": "Hello,\r\n\r\nAssuming no quotes around each line, then this should work:\r\n\r\n    sudo goaccess vhost.access_log --log-format='%v %h %^[%d:%t %^] \"%r\" %s %b' --date-format=%d/%b/%Y --time-format=%T\r\n\r\nwith quotes:\r\n\r\n    sudo goaccess vhost.access_log --log-format='\"%v %h %^[%d:%t %^] \"%r\" %s %b\"' --date-format=%d/%b/%Y --time-format=%T"
      },
      {
        "user": "ghost",
        "created_at": "2021-06-12T06:24:39Z",
        "body": "My server logs changed (without prior notice, idk if this came with an OLS update) and now look like this:\r\n\r\n`\"<ip-addr> - - [12/Jun/2021:06:10:42 +0000] \"GET /route/ HTTP/1.1\" 301 0\"`\r\n\r\nI've tried modifying the commands above but I get stuck at parsing the date with this error :(\r\n`Token '-' doesn't match specifier '%h'`\r\n\r\nShould I include the `-` 's in the log format?\r\n"
      },
      {
        "user": "ghost",
        "created_at": "2021-06-12T06:28:42Z",
        "body": "Fixed it. Here is the solution if someone else comes around the same problem:\r\n`--log-format='\"%h - - %^[%d:%t %^] \"%r\" %s %b\"' --date-format=%d/%b/%Y --time-format=%T`"
      }
    ]
  },
  {
    "number": 2060,
    "title": "Hostname doesn't match specifier %h",
    "created_at": "2021-03-22T20:04:53Z",
    "closed_at": "2021-04-02T02:41:28Z",
    "labels": [
      "question",
      "log-processing",
      "command-line options"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2060",
    "body": "ppp-mia-30.shadow.net - - [01/Jul/1995:00:00:41 -0400] \"GET /images/NASA-logosmall.gif HTTP/1.0\" 200 786\r\n\r\nToken 'ppp-mia-30.shadow.net' doesn't match specifier '%h'\r\n\r\nIs it possible to read the hostname without it being ipv4 or ipv6? ",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2060/comments",
    "author": "Alex-C96",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2021-03-23T13:10:36Z",
        "body": "Please try using `--no-ip-validation`."
      }
    ]
  },
  {
    "number": 2043,
    "title": "report not generated",
    "created_at": "2021-02-25T23:03:38Z",
    "closed_at": "2021-03-16T23:48:09Z",
    "labels": [
      "question",
      "html report",
      "websocket-server"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2043",
    "body": "      'lo All,\r\nI've installed GoAccess on my  Debian/Apache2 webserver and am having some trouble getting GoAccess to generate output.\r\n\r\n--TheCommand:\r\ngoaccess /var/log/apache2/other_vhost_access.log -o /f1/websites/80_home/html/goaccess/index.html --log-format=VCOMBINED --real-time-html\r\n--TheOutput:\r\nDaemonized GoAccess: 3438\r\n\r\n\r\n...Yet the file:[/f1/websites/80_home/html/goaccess/index.html]  is never created.\r\nThere is no error text.\r\nthere is no existing ~index.html file\r\n\r\nand ps aux | 3438 yields no output either.\r\n\r\n--TheRequest:\r\nCan any of you lend some insight on how to troubleshoot/resolve this?\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2043/comments",
    "author": "GrepZen",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2021-02-26T00:24:37Z",
        "body": "Please don't daemonize the process and check for any errors you may be getting. Also make sure you can write to that path."
      },
      {
        "user": "GrepZen",
        "created_at": "2021-03-16T23:48:09Z",
        "body": "Allinurl  .. two things\r\n1st ... Thank you so much for the follow up on this.  Time had gotten away from me and this reminder helped me close a task. --Thank You!\r\n2nd ... I ran w/o daemonizing and was able to see errors (log file path) that readily lead to solution.  GoAccess is now performing well and displaying beautifully.  Thank you again!"
      }
    ]
  },
  {
    "number": 2000,
    "title": "Default value of keep-last",
    "created_at": "2021-01-17T09:36:46Z",
    "closed_at": "2021-01-19T01:48:15Z",
    "labels": [
      "question",
      "on-disk",
      "command-line options"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2000",
    "body": "Hello, \r\nwhat is the default value of the **keep-last** parameter, \r\nused in conjunction with **persist = true**?\r\n7 days?\r\ninfinite?\r\n\r\nThank's for your job!",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2000/comments",
    "author": "danilort",
    "comments": [
      {
        "user": "0bi-w6n-K3nobi",
        "created_at": "2021-01-18T14:29:55Z",
        "body": "Hi @danilort \r\n\r\nJust see into your conf `/etc/goaccess/goaccess.conf`.\r\nIf it is commented then it is `zero` == `infinite`, i.e. without any limitation.\r\nDo a simple test, with a few requests for each day, and you will be sure of it.\r\nAnd this parameter is independent of the flag `persit`.\r\n\r\nI hope I've helped.\r\n\r\n"
      },
      {
        "user": "allinurl",
        "created_at": "2021-01-19T01:48:15Z",
        "body": "As @0bi-w6n-K3nobi zero is default which is equal to infinity regardless of persist. \r\n\r\nIf you have any other questions, feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 1948,
    "title": "Goaccess Error occurred at: src/parser.c - read_log - 2730",
    "created_at": "2020-10-27T14:34:22Z",
    "closed_at": "2020-10-28T08:56:43Z",
    "labels": [
      "question",
      "log-processing"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1948",
    "body": "Good day!\r\nI am getting an error when executing the command:\r\n\r\n$ zcat /var/log/nginx/access.log.*.gz | goaccess /var/log/nginx/access.log --log-format=COMBINED\r\n\r\nGoAccess - version 1.4 - Oct 19 2020 14:08:20\r\nConfig file: /usr/local/etc/goaccess/goaccess.conf\r\n\r\nFatal error has occurred\r\nError occurred at: src/parser.c - read_log - 2730\r\nUnable to open the specified log file. Permission denied\r\n\r\nI work with DJANGO and I have failed to implement real-time statistics export.\r\nTherefore, I implemented the export of the report through a script, but when the script is executed, the statistics are displayed for one day.  And I need to display statistics since the start of the web server.\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1948/comments",
    "author": "andrgayday",
    "comments": [
      {
        "user": "0bi-w6n-K3nobi",
        "created_at": "2020-10-27T21:30:34Z",
        "body": "Hi.\r\nI hope that message is clear. Or not? **`\"...  Permission denied\"`**\r\nYour user need permission for read the `LOG`.\r\n\r\nI should too add character **`-`** for read from `PIPE`. I.E:\r\n\r\n `zcat /var/log/nginx/access.log.*.gz | goaccess`**`-`**`/var/log/nginx/access.log --log-format=COMBINED`"
      }
    ]
  },
  {
    "number": 1942,
    "title": "Custom log format",
    "created_at": "2020-10-13T14:12:28Z",
    "closed_at": "2020-10-13T15:12:54Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1942",
    "body": "We use a custom log format that I've been having the hardest time configuring GoAccess to parse. Any help/input would be appreciated.\r\n\r\nhttpd.conf log format;\r\n\r\nLogFormat \"\\\"%{X-Forwarded-For}i\\\" %v %h %l %u %t \\\"%r\\\" %>s %b %D \\\"%{Referer}i\\\" \\\"%{User-Agent}i\\\"\" custom\r\n\r\nlog output example;\r\n\r\n\"70.X.X.X, 90.X.X.X\" test.host.com 172.X.X.X - - [11/Oct/2020:03:12:03 +0000] \"POST /api/rest.php HTTP/1.1\" 200 745 229390 \"-\" \"Amazon CloudFront\"\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1942/comments",
    "author": "route-print",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2020-10-13T14:20:47Z",
        "body": "This should do it:\r\n\r\n    goaccess access.log --log-format='~h{\", } %v %^ %^[%d:%t %^] \"%r\" %s %b %D \"%R\" \"%u\"' --date-format=%d/%b/%Y --time-format=%T"
      }
    ]
  },
  {
    "number": 1826,
    "title": "Hello i get below error while parsing my custom log files as below:",
    "created_at": "2020-06-24T13:39:39Z",
    "closed_at": "2020-06-26T14:36:24Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1826",
    "body": "Parsed 1 lines producing the following errors:\r\nToken '020-06-05 17' doesn't match specifier '%d'\r\n\r\nFormat Errors - Verify your log/date/time format\r\n\r\nInput Log files are as below:\r\n```\r\n2020-06-05 17:54:34:019 [TID 25532][INFO ] Default Logger initialized [casAPIPlatform]^M\r\n2020-06-05 17:54:34:019 [TID 25532][INFO ] ENTER: Config default values [casAPIPlatform]^M\r\n2020-06-05 17:54:34:019 [TID 25532][INFO ] EXIT: Config default values [casAPIPlatform]^M\r\n2020-06-05 17:54:34:019 [TID 25532][INFO ] ENTER: LoadSystemControllers [casAPIPlatform]^M\r\n2020-06-05 17:54:34:019 [TID 25532][INFO ] EXIT: LoadSystemControllers [casAPIPlatform]^M\r\n\r\n```",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1826/comments",
    "author": "cmmanoj",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2020-06-25T01:56:35Z",
        "body": "Is this an access log? Please note that GoAccess requires the following fields:\r\n```\r\na valid IPv4/6 %h\r\na valid date %d\r\nthe request %r\r\n```"
      },
      {
        "user": "cmmanoj",
        "created_at": "2020-06-25T11:18:29Z",
        "body": "This is not Apache or Nginx access log. It is the log file of a customized web server.\r\nDate and all is valid. i believe goaccess should be able to parse any log file is not it.\r\n\r\nAny pointers as to how i parse the log file for below: \r\n\r\n2020-06-05 17:54:34:019 [TID 25532][INFO ] Default Logger initialized [casAPIPlatform]^M\r\n2020-06-05 17:54:34:019 [TID 25532][INFO ] ENTER: Config default values [casAPIPlatform]^M\r\n2020-06-05 17:54:34:019 [TID 25532][INFO ] EXIT: Config default values [casAPIPlatform]^M\r\n "
      },
      {
        "user": "allinurl",
        "created_at": "2020-06-26T13:10:43Z",
        "body": "Sorry there's no much that goaccess can help in here. You need a valid IPv4/6 %h and request."
      }
    ]
  },
  {
    "number": 1791,
    "title": "Help with custom log format with tabs",
    "created_at": "2020-05-27T06:07:37Z",
    "closed_at": "2020-06-01T06:56:57Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1791",
    "body": "Hi, I have a custom log that separates data by tab (TSV log format).\r\nLog is a DNS query.\r\n\r\nThis is a snipped of the log\r\n[2020-05-27 14:47:47]\t10.10.1.1\tbadexample.com\tA\tFORWARD\t24ms\t10.10.1.1:53\r\n\r\nThis is my goaccess.conf \r\n\r\n```\r\ntime-format %H:%M:%S\r\ndate-format %Y-%m-%d\r\nlog-format [%d %t] %h %v %U %^ %^ %^ %^\r\n\r\n```\r\nIt works fine when I manually change tab to space, but can't figure out how to get the tab read by goaccess so interprets the log file.\r\n\r\nThis is what I keep getting when trying to run goaccess\r\n\r\nParsed 1 lines producing the following errors:\r\nToken for '%h' specifier is NULL.\r\nFormat Errors - Verify your log/date/time format\r\n\r\nThanks in advance",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1791/comments",
    "author": "p01acos",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2020-05-28T23:19:43Z",
        "body": "You can always use `\\t` as delimiter. e.g., \r\n\r\n    log-format [%d %t]\\t%h\\t%v\\t%U\\t%^"
      }
    ]
  },
  {
    "number": 1784,
    "title": "Token '92.118.161.13.netsystemsresearch.com' doesn't match specifier '%h' in v1.4",
    "created_at": "2020-05-24T16:09:43Z",
    "closed_at": "2020-05-25T00:43:18Z",
    "labels": [
      "question",
      "log/date/time format",
      "command-line options"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1784",
    "body": "Using Apache  common log format. When running goaccess (v1.4):\r\n/usr/local/bin/goaccess - -o /home/cvmiller/my_report.html --log-format=COMBINED\r\n\r\nI get the error:\r\n```\r\nParsed 1 lines producing the following errors:\r\n\r\nToken '92.118.161.13.netsystemsresearch.com' doesn't match specifier '%h'\r\n\r\nFormat Errors - Verify your log/date/time format\r\n```\r\n\r\nIt seems like the parser is confused by the fact that the hostname begins like an IPv4 address, but is in fact part of a larger hostname. Other hosts which fail with this error are:\r\n```\r\n187.114.156.0.static.host.gvt.net.br\r\nec2-34-223-93-168.us-west-2.compute.amazonaws.com\r\n```\r\nAlso saw this issue  in version 1.3. Built goaccess with the following:\r\n```\r\n ./configure --enable-utf8 --without-libintl-prefix\r\nmake\r\nsudo make install\r\n```\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1784/comments",
    "author": "cvmiller",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2020-05-24T22:41:08Z",
        "body": "You can try using `--no-ip-validation`."
      },
      {
        "user": "allinurl",
        "created_at": "2020-05-25T00:43:18Z",
        "body": "Thanks for reporting that. I did add it to the man page but completely forgot adding it to the `--help`. I just pushed an update upstream.\r\n\r\nClosing this, feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 1761,
    "title": "geoip-database",
    "created_at": "2020-05-08T07:30:39Z",
    "closed_at": "2020-05-09T21:06:05Z",
    "labels": [
      "question",
      "build",
      "command-line options"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1761",
    "body": "configure :\r\n./configure --prefix=$GOACCESS --enable-utf8 --with-getline --with-openssl --enable-geoip=../goaccess/lib/GeoLite2-City.mmdb\r\nsudo make && make install\r\ngoaccess.conf:\r\nlog-format COMBINED\r\nwith-mouse false\r\nreal-time-html true\r\nlog-file /www/wwwlogs/192.168.0.172.log\r\nlog-file /www/wwwlogs/access.log\r\nhttp-method yes\r\nhttp-protocol yes\r\noutput /www/wwwroot/app/public/1.html\r\nreal-os true\r\ngeoip-database ../../lib/GeoLite2-City.mmdb\r\nstatic-file .css\r\n......\r\nstartrun:\r\n\r\nunrecognized option '--geoip-database'",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1761/comments",
    "author": "q5451227",
    "comments": [
      {
        "user": "ajayramaswamy",
        "created_at": "2020-05-09T02:53:29Z",
        "body": "no the correct way is\r\n./configure --enable-debug --enable-geoip=mmdb --enable-utf8 --with-getline --with-openssl\r\n\r\nand then later in the config file /etc/goaccess/goacces.conf\r\nadd\r\n\r\ndb-path /var/cache/goaccess/\r\npersist true\r\nrestore true\r\ngeoip-database /usr/share/GeoIP/GeoLite2-City.mmdb\r\n"
      },
      {
        "user": "allinurl",
        "created_at": "2020-05-09T21:06:05Z",
        "body": "@q5451227 Yes, please run goaccess with the option `--daemonize`"
      }
    ]
  },
  {
    "number": 1711,
    "title": "How to enable on-disk support from development version?",
    "created_at": "2020-03-24T11:13:59Z",
    "closed_at": "2020-03-25T12:23:34Z",
    "labels": [
      "question",
      "on-disk"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1711",
    "body": "When I try to run:\r\n`./configure --enable-utf8 --enable-tcb=btree --with-openssl`\r\n\r\nAnd in the final of the output there is a line `configure: WARNING: unrecognized options: --enable-tcb`\r\n\r\nIf I build the source code without appending `--enable-tcb=btree`, when I try to run:\r\n`goaccess history.log --keep-db-files`\r\n\r\nIt just shows:\r\n`goaccess: unrecognized option '--keep-db-files'`\r\n\r\nBTW I'm using Ubuntu 18.04",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1711/comments",
    "author": "arischow",
    "comments": [
      {
        "user": "arischow",
        "created_at": "2020-03-24T11:40:30Z",
        "body": "OK I checked the git log and I found there's new option named `--keep-last=<NUM>`\r\n\r\nIf I am correct, I should use `--keep-last=<NUM> --persist --restore`."
      },
      {
        "user": "allinurl",
        "created_at": "2020-03-24T12:38:12Z",
        "body": "There are three options. `--persist` `--restore` `--db-path=<dir>` by default it saves all data to /tmp"
      },
      {
        "user": "allinurl",
        "created_at": "2020-03-24T12:43:41Z",
        "body": "BTW, `--keep-last` it's used to only show the last x number of days. e.g., show last 5 days and regardless of how many days it parsed. It does clean up the data that's not within those X days if new data is appended."
      }
    ]
  },
  {
    "number": 1668,
    "title": "Parsing access log date and time in a single variable tab delimited",
    "created_at": "2020-02-12T14:10:42Z",
    "closed_at": "2020-02-13T14:50:40Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1668",
    "body": "Hi all, I'm new to goaccess and I'm trying to my web access log to be inspect:\r\n\r\nthis is my apache log format: \r\n\r\n`LogFormat \"%V\\t%h\\t%{SSL_PROTOCOL}x\\t%{SSL_CIPHER}x\\t%{SSL_CLIENT_S_DN_CN}x\\t%u\\t%{%d/%m/%Y %T %Z}t\\t%{UNIQUE_ID}e\\t%{JSESSIONID}C\\t%H\\t%m\\t%U\\t\\\"%q\\\"\\t%>s\\t%b\\t\\\"%{Referer}i\\\"\\t\\\"%{User-Agent}i\\\"\\t%D\\t%X\\t%I\\t%O\" mycustumlog\r\n`\r\n\r\n\r\nexample output:\r\n\r\n\r\n    www.test.it   192.168.253.176                 -       -       20/01/2020 01:00:47 CET XiTtr38AAAEAAAzn8PkAAABX        7E7E5A44F91C8095E2E6EC57EBD0221E        HTTP/1.1        GET     0       /cms/   \"\"      200     143296  \"-\"     \"Zabbix\"        309722  +       477     147885\r\n\r\n`\r\nI try with:\r\n\r\n`goaccess access.log -o report.html  -p /etc/goaccess/goaccess.conf  --time-format='%H:%M:%S %Z' --date-format='%d/%m/%Y' --log-format='%v\\t%h\\t-\\t-\\t-\\t%d\\t'`\r\n\r\nbut I get:\r\n\r\n```\r\nParsed 1 linesproducing the following errors:\r\n\r\nToken '20/01/2020 01:00:47 CET' doesn't match specifier '%d'\r\n\r\nFormat Errors - Verify your log/date/time format\r\n\r\n```\r\nCould anyone help? \r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1668/comments",
    "author": "ghost",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2020-02-12T15:14:11Z",
        "body": "For this log:\r\n\r\n```\r\nwww.test.it\t192.168.253.176\t-\t-\t20/01/2020 01:00:47 CET\tXiTtr38AAAEAAAzn8PkAAABX\t7E7E5A44F91C8095E2E6EC57EBD0221E\tHTTP/1.1\tGET\t0\t/cms/\t\"\"\t200\t143296\t\"-\"\t\"Zabbix\"\t309722\t+\t477\t147885\r\n```\r\n\r\nThis should work:\r\n\r\n    goaccess access.log --log-format='%v\\t%h\\t%^\\t%^\\t%d %t %^\\t%^\\t%^\\t%H\\t%m\\t%^\\t%U\\t\"%q\"\\t%%s\\t%b\\t^\"%R\"\\r\"%u\"\\t%D\\t%^' --date-format=%d/%m/%Y --time-format=%T"
      }
    ]
  },
  {
    "number": 1664,
    "title": "AWS Beanstalk Custom Access Log Format",
    "created_at": "2020-02-03T18:50:08Z",
    "closed_at": "2020-05-19T00:28:50Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1664",
    "body": "Im trying to figure out how to set the custom access log for Beanstalk\r\n\r\nThe example \r\n\r\n> 172.31.13.163 (45.56.150.80, 172.31.13.163) - - [15/Jan/2020:20:02:40 +0000] \"GET /test?station=25&playtime=cool/playlist.m3u8 HTTP/1.1\" 200 975 \"-\" \"Mozilla/5.0 (Linux; Android 7.1.2; AFTMM Build/NS6268; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/70.0.3538.110 Mobile Safari/537.36\"\r\n\r\nI hope this helps \r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1664/comments",
    "author": "colender",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2020-02-03T23:59:38Z",
        "body": "Please try:\r\n\r\n    goaccess access.log --log-format=COMBINED\r\n"
      },
      {
        "user": "colender",
        "created_at": "2020-02-04T22:38:26Z",
        "body": "How would I be able to get the X-FORWARDED ip the part (45.56.150.80, 172.31.13.163) with COMBINED it doesn't get the ip from the user Im just getting the ip from the server. I have tried to use. \r\n`--log-format= %h (~h{,}) -- [%d:%t %^] \"%m %U %H\" %s %b \"%R\" \"%u\" --date-format=%d/%b/%Y --time-format=%T`\r\n I tried that but I get a %h has been specified error "
      },
      {
        "user": "allinurl",
        "created_at": "2020-02-05T17:26:46Z",
        "body": "Close, this should work:\r\n\r\n    goaccess access.log --log-format='%^ (~h{, }) %^[%d:%t %^] \"%r\" %s %b \"%R\" \"%u\"' --date-format=%d/%b/%Y --time-format=%T"
      }
    ]
  },
  {
    "number": 1596,
    "title": "IIS 8.5 : Token 'server' doesn't match specifier '%m'",
    "created_at": "2019-11-07T13:50:36Z",
    "closed_at": "2019-11-11T18:12:33Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1596",
    "body": "Hello,\r\n\r\nI have the following issue and tried a lot of answers from other threads, but no one did it for me : \r\n\r\nmy log is like that  : \r\n\r\n```\r\n#Software: Microsoft Internet Information Services 8.5\r\n#Version: 1.0\r\n#Date: 2018-10-04 14:09:23\r\n#Fields: date time s-sitename s-computername s-ip cs-method cs-uri-stem cs-uri-query s-port cs-username c-ip cs-version cs(User-Agent) cs(Cookie) cs(Referer) cs-host sc-status sc-substatus sc-win32-status sc-bytes cs-bytes time-taken x-forwarded-for\r\n2018-10-05 06:59:10 W3SVC1261474369 srv-cli-nbr-001 10.82.97.10 GET /Notification.svc/not-seen/_count - 80 - 10.169.7.11 HTTP/1.1 - - - rec-svc-cli-fra 500 19 1346 1376 2138 15 -\r\n2018-10-05 06:59:10 W3SVC1261474369 srv-cli-nbr-001 10.82.97.10 GET /UISetting.svc/Shortcuts - 80 - 10.169.7.10 HTTP/1.1 - - - rec-svc-cli-fra 500 19 1346 1376 2129 0 -\r\n2018-10-05 06:59:10 W3SVC1261474369 srv-cli-nbr-001 10.82.97.10 GET /Notification.svc/list/3 - 80 - 10.169.7.11 HTTP/1.1 - - - rec-svc-cli-fra 500 19 1346 1376 2105 0 -\r\n```\r\n\r\nUnfortunately,  when using  \r\n\r\n.\\goaccess.exe -f u_ex181005_x.log --log-format='%d %t %^ %m-%m-%-%-% %U %q %^ %^ %h %u %^' --date-format=%Y-%m-%d --time-format=%T\r\n\r\nI have this result \r\n\r\n```\r\nParsed 1 linesproducing the following errors:\r\nToken 'srv' doesn't match specifier '%m'\r\nFormat Errors - Verify your log/date/time format\r\n```\r\n\r\nI tried a lot of other log format configurations, but i am stuck here! \r\n\r\nThank you!\r\n\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1596/comments",
    "author": "almoreau",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2019-11-07T15:38:28Z",
        "body": "This should work:\r\n\r\n    goaccess access.log --log-format='%d %t %^ %^ %^ %m %U %q %^ %^ %h %H %u %^ %R %v %s %^ %^ %b %L %^' --date-format=%Y-%m-%d --time-format=%T"
      }
    ]
  },
  {
    "number": 1571,
    "title": "macOS 10.15 nginx access_log Token doesn't match specifier '%d",
    "created_at": "2019-10-16T03:09:16Z",
    "closed_at": "2019-10-17T14:48:03Z",
    "labels": [
      "question",
      "log-processing"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1571",
    "body": "Hello,\r\n\r\n I keep on getting this error no matter what I do:\r\n\r\n`Token '16/Oct/2019' doesn't match specifier '%d'`\r\n\r\nThe command I am using is:\r\n`goaccess test.nginx.com.log -o ../html/report.html --real-time-html --time-format='%H:%M:%S' --date-format='%d/%b/%Y' --log-format=COMMON`\r\n\r\nI tried other methods and it was the same error.example:\r\n`goaccess test.nginx.com.log -o ../html/report.html --real-time-html --time-format='%H:%M:%S' --date-format='%d/%b/%Y' --log-format='%h %^[%d:%t %^] \"%r\" %s %b \"%R\" \"%u\"'`\r\n\r\nAn example log file line:\r\n`127.0.0.1 - - [16/Oct/2019:10:43:04 +0800] \"GET /report.html HTTP/1.1\" 304 0 \"-\" \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36\" \"-\"`\r\n\r\nIn addition,the output of `date ` my terminal is :\r\n`2019\u5e7410\u670816\u65e5 \u661f\u671f\u4e09 11\u65f604\u520636\u79d2 CST`\r\n\r\nThanks in advance ! :)",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1571/comments",
    "author": "huxxhua",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2019-10-17T13:56:21Z",
        "body": "Looks like your access log has english dates while your system locale is set to Chinese. \r\n\r\n    LANG=\"en_US.UTF-8\" bash -c 'goaccess access.log --log-format=COMBINED'"
      }
    ]
  },
  {
    "number": 1536,
    "title": "Trying to exclude a specific user agent (Web Site Monitor)",
    "created_at": "2019-08-20T18:24:35Z",
    "closed_at": "2019-08-24T01:58:24Z",
    "labels": [
      "question",
      "log-processing"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1536",
    "body": "I was reading how you had added the ability to add a list of browsers in a text file, and was trying to use this as a way to omit our uptime requests from the log parsing.\r\n\r\nWe use NodePing, so i created a file called browsers.txt, using your demo file and added a line to the top:\r\nNodePing                                          Crawler\r\n\r\nI was using the following command in bash:\r\n\r\n    bash-4.4$ goaccess /cygdrive/e/temp/goaxess/*.log --log-format='%d %t.%^ ~h{,\" } %e %v %^ %m %U %q %s %^ %^ %L \"%u\" %R %^' --date-format=%Y-%m-%d --time-format=%T --http-protocol=no -o /cygdrive/e/temp/ws_all_report_20190919.html --real-time-html --browsers-file=/cygdrive/e/temp/browsers.txt --ignore-crawlers\r\n\r\nIt still has the same mount of requests over all with or without the last two switches in the command line (I think this is intended to show the total number of requests without filtering the browsers file)\r\n\r\nI am just looking for confirmation that this is the way to execute this type of result\r\n\r\nLet me know what you think",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1536/comments",
    "author": "Gecko483",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2019-08-22T01:43:29Z",
        "body": "Please try setting it as `Crawlers` instead of `Crawler`. Also make sure it is tab delimited e.g.,\r\n\r\n    NodePing\\t\\tCrawlers\r\n\r\nthat is, \r\n\r\n    NodePing\t\tCrawlers"
      }
    ]
  },
  {
    "number": 1435,
    "title": "SSL problem",
    "created_at": "2019-04-24T11:33:05Z",
    "closed_at": "2019-04-25T08:56:09Z",
    "labels": [
      "question",
      "websocket-server"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1435",
    "body": "Hi guys,\r\n\r\nI have installed goaccess but i want to use it with SSL.\r\n\r\nSo far i have installed with --with-openssl and i have this input line \r\n\r\n`find /home/ubuntu/s3/ -cmin -300 -name \"*.log\" -exec cat {} \\; | goaccess -a - --log-format=AWSELB -p /usr/local/etc/goaccess/goaccess.conf -o /var/www/html/index.html --ssl-cert=/home/ubuntu/s3/server.crt --ssl-key=/home/ubuntu/s3/server.key --ws-url=wss://publicipoftheserver:7890`\r\n\r\nThen when i visit my public ip i don't have ssl, even with :7890 and with https:// i only have port 80, and goaccess doesn't show any errors while parsing. Tried to use debug mode but no luck there.\r\nOnly working option is without ssl, port 80, is there anything else i need to look for ?\r\nI am using Ubuntu 16.04.\r\n\r\nThanks guys.",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1435/comments",
    "author": "kenzoawa",
    "comments": [
      {
        "user": "iWoodsman",
        "created_at": "2019-04-24T11:52:43Z",
        "body": "The reason for the ws-url is for live updating. \r\nSo 1. Enable that with \u2014real-time-html\r\n2. You can probably skip the ws-url if the websocket will be on the same host as goaccess (very likely).\r\nNow check it. Note that if you DON\u2019T want the live updates, then there\u2019s no websocket on port 7890 and you can also skip the SSL flags. The static page is served by your existing ssl-configured web server, using its ports. There is a nonzero chance I am wrong about some of this, but this ended up working for me. Oh and obviously, check any firewalls too. "
      },
      {
        "user": "kenzoawa",
        "created_at": "2019-04-24T12:23:38Z",
        "body": "So basically you are saying that i just insert the SSL certs and keys to the apache that is running local and skip the SSL flags .. etc right ?"
      },
      {
        "user": "iWoodsman",
        "created_at": "2019-04-24T12:58:04Z",
        "body": "Correct. The report page itself is a plain old static page served by Apache, and if you have configured Apache for SSL, then the report page will be delivered as such. You only need to explicitly tell goaccess about SSL and certificates if you want the real time HTML data that is transferred between the goaccess websocket and the end-user\u2019s browser to be encrypted. That\u2019s when you specify the cert and the key to goaccess, and if necessary the ws server and port. The latter will default to your apache host, and port 7890.\r\nStrangely, I found that using the ws=wss directive to specify the server and port caused the real time HTML to not work, whereas not specifying that and letting the defaults be used did work, even though what I was specifying were in fact the defaults. \r\n\r\n\r\n\u2014\r\nSent from a mouse-sized keyboard, please forgve typos.\r\n\r\n> On Apr 24, 2019, at 8:23 AM, kenzoawa <notifications@github.com> wrote:\r\n> \r\n> So basically you are saying that i just insert the SSL certs and keys to the apache that is running local and skip the SSL flags .. etc right ?\r\n> \r\n> \u2014\r\n> You are receiving this because you commented.\r\n> Reply to this email directly, view it on GitHub, or mute the thread.\r\n"
      }
    ]
  },
  {
    "number": 1424,
    "title": "syncing logs from elb - live report",
    "created_at": "2019-04-12T15:05:56Z",
    "closed_at": "2019-04-19T10:03:38Z",
    "labels": [
      "question",
      "log-processing",
      "other"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1424",
    "body": "Hey guys, i just tried GoAccess and it works like a charm once you get to know it.\r\n\r\nIt's not a issue but more of a logical question.\r\n\r\nI am successful in parsing the s3/elb logs that are stored there with s3cmd sync command to EC2. \r\nWhat i am trying to do is having that sync from s3 to GoAccess live - incrementally because sync works that way, only new logs are shipped and i want those new ones added to the report, not all of them.\r\n\r\nIf i put the command for report.html it parses the whole folder, not just the new ones that were copied. \r\nHere is the command : \r\n\r\n`find /tmp/s3/ -name \"*.log\" -exec cat {} \\; | goaccess -a --log-format=AWSELB -p /usr/local/etc/goaccess/goaccess.conf -o /var/www/html/report.html --real-time-html`\r\n\r\nIs there any possibility for goaccess to only parse the new logs in real time because my bucket is dozens of gigabytes ? I tried something with crontab but unsuccessful. \r\nThank you guys.",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1424/comments",
    "author": "kenzoawa",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2019-04-13T14:51:05Z",
        "body": "You could use find and see the latest mod files:\r\n\r\n> find . -cmin +<time>\r\n> find . -cmin -<time>\r\n> find . -cmin  <time>\r\n\r\nFor example, the files with last edition in a maximum of 5 minutes, are given by:\r\n\r\n    find  /tmp/s3/ -cmin -5 -name \"*.log\" -exec cat {} \\; | goaccess -a --log-format=AWSELB -p /usr/local/etc/goaccess/goaccess.conf -o /var/www/html/report.html --real-time-html\r\n\r\n\r\n"
      }
    ]
  },
  {
    "number": 1406,
    "title": "[Solved] Processing logs with goaccess and logrotate  - question.",
    "created_at": "2019-03-14T11:08:03Z",
    "closed_at": "2019-03-14T18:56:35Z",
    "labels": [
      "question",
      "html report",
      "log-processing",
      "command-line options"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1406",
    "body": "Hi!\r\n\r\nI am using this command to print real-time html output:\r\ngoaccess /path/to/access.log --log-format=COMBINED -o /path/to/www/root/report.html --real-time-html --real-os --all-static-files --agent-list --http-protocol=yes --http-method=yes --hl-header\r\n\r\nAnd it shows statistics only from one day (current day). There is also files like access.log.12.gz due to logrotate. How can I use all of the data? Also compressed with logrotate.\r\n\r\nThanks in advance!",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1406/comments",
    "author": "AreYouLoco",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2019-03-14T13:51:03Z",
        "body": "Please try using:\r\n\r\n    zcat access.log.*.gz | goaccess access.log --log-format=COMBINED - -o /path/to/www/root/report.html\r\n\r\nAlso note that each active panel has a total of 50 entries in the real-time HTML report instead of the 366 in static mode.  Let me know how that goes."
      },
      {
        "user": "AreYouLoco",
        "created_at": "2019-03-14T18:52:13Z",
        "body": "Yup it works now as expected. Thanks!\r\n\r\nI switched to static pages and your pipe trick and now I can see all the data which is more than disturbing.\r\nWhy people would like to break into my phpmyadmin, why?:D\r\n\r\nIssue marked solved and closed."
      }
    ]
  },
  {
    "number": 1367,
    "title": "How do you extend the number of entries that show within a panel for HTML output?",
    "created_at": "2019-01-29T19:00:17Z",
    "closed_at": "2019-01-29T19:33:27Z",
    "labels": [
      "question",
      "html report"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1367",
    "body": "I've tried the following to limit the generated HTML panels list to just the \"HOSTS\" panel with the hope that it would expand to include more entries, but no such luck:\r\n\r\n```shell\r\ngrep '29/Jan' other_vhosts_access.log | \\\r\n\tgoaccess \\\r\n\t\t--log-format VCOMMON \\\r\n\t\t--agent-list \\\r\n\t\t--all-static-files \\\r\n\t\t--enable-panel=\"HOSTS\" \\\r\n\t\t--ignore-panel=\"REQUESTS\" \\\r\n\t\t--ignore-panel=\"REQUESTS_STATIC\" \\\r\n\t\t--ignore-panel=\"NOT_FOUND\" \\\r\n\t\t--ignore-panel=\"VISITORS\" \\\r\n\t\t--ignore-panel=\"OS\" \\\r\n\t\t--ignore-panel=\"BROWSERS\" \\\r\n\t\t--ignore-panel=\"VISIT_TIMES\" \\\r\n\t\t--ignore-panel=\"VIRTUAL_HOSTS\" \\\r\n\t\t--ignore-panel=\"REFERRERS\" \\\r\n\t\t--ignore-panel=\"REFERRING_SITES\" \\\r\n\t\t--ignore-panel=\"KEYPHRASES\" \\\r\n\t\t--ignore-panel=\"STATUS_CODES\" \\\r\n\t\t--ignore-panel=\"REMOTE_USER\" \\\r\n\t\t--ignore-panel=\"GEO_LOCATION\" \\\r\n\t\t--with-output-resolver \\\r\n\t\t-o SYSTEM_NAME_HERE-2019-01-29.html\r\n```\r\n\r\nI assume I'm doing something wrong, but the entries in the panel appear to be limited to 7 items.\r\n\r\nWhat I'm really trying to accomplish is either a longer listing of top visitors *or* a grouping of visitors by domain instead of via individual IPs or (in my case) by unique FQDN.\r\n\r\nThanks for your help.",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1367/comments",
    "author": "atc0005",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2019-01-29T19:18:23Z",
        "body": "You can set the number of items through the preferences (HTML report) or through your config file, e.g., \r\n\r\n    html-prefs {\"autoHideTables\":true,\"layout\":\"horizontal\",\"perPage\":15,\"theme\":\"darkPurple\"}\r\n\r\nPlease note you may need to reload the report (Ctrl+Shift+r)"
      }
    ]
  },
  {
    "number": 1344,
    "title": "--keep-db-files not available",
    "created_at": "2019-01-04T03:54:43Z",
    "closed_at": "2019-01-04T04:02:09Z",
    "labels": [
      "question",
      "dependencies"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1344",
    "body": "When I want to use --keep-db-files command, it prompts me that it does not exist. When I recompile configure: error:*** Missing development libraries for Tokyo Cabinet Database./configure --enable-utf8 --enable-geoip=legacy --enable-tcb=btree.But when I do./configure --enable-utf8 --enable-geoip=legacy --enable-tcb, it works. Will the btree open",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1344/comments",
    "author": "orange723",
    "comments": [
      {
        "user": "orange723",
        "created_at": "2019-01-04T03:56:20Z",
        "body": "Storage method: in-memory Hash Database (Default) is displayed as follows after successful compilation"
      },
      {
        "user": "allinurl",
        "created_at": "2019-01-04T03:57:44Z",
        "body": "That's right. If `btree` or `memhash` is not specified, it defaults to the main hash tables."
      },
      {
        "user": "orange723",
        "created_at": "2019-01-04T04:02:37Z",
        "body": "> That's right. If `btree` or `memhash` is not specified, it defaults to the main hash tables.\r\n\r\nI want to use --keep-db-files this parameter how should I compile --keep-db-files is based on btree"
      },
      {
        "user": "allinurl",
        "created_at": "2019-01-04T04:05:17Z",
        "body": "This should enable `--keep-db-files` and `--load-from-disk`:\r\n\r\n    $ ./configure --enable-utf8 --enable-geoip=legacy --enable-tcb=btree\r\n    $ make\r\n    # make install\r\n\r\nor to uninstall\r\n\r\n    # make uninstall"
      },
      {
        "user": "orange723",
        "created_at": "2019-01-04T04:09:05Z",
        "body": "> This should enable `--keep-db-files` and `--load-from-disk`:\r\n> \r\n> ```\r\n> $ ./configure --enable-utf8 --enable-geoip=legacy --enable-tcb=btree\r\n> $ make\r\n> # make install\r\n> ```\r\n> or to uninstall\r\n> \r\n> ```\r\n> # make uninstall\r\n> ```\r\nConfigure: error: *** Missing development libraries for Tokyo Cabinet Database\r\n"
      },
      {
        "user": "allinurl",
        "created_at": "2019-01-04T04:22:36Z",
        "body": "Please try:\r\n\r\n    # apt-get install libtokyocabinet-dev\r\n"
      },
      {
        "user": "orange723",
        "created_at": "2019-01-04T04:54:58Z",
        "body": "> Please try:\r\n> \r\n> ```\r\n> # apt-get install libtokyocabinet-dev\r\n> ```\r\n\r\nI'm sorry to reply you so late. I can't find it using yum search using centos7 system"
      },
      {
        "user": "orange723",
        "created_at": "2019-01-04T05:39:02Z",
        "body": "I think I've found a solution. Thank you very much \r\nyum install tokyocabinet-devel ncurses-devel geoip-devel bzip2-devel\r\n./configure --enable-utf8 --enable-geoip=legacy --enable-tcb=btree"
      }
    ]
  },
  {
    "number": 1290,
    "title": "custom log format / additional identifiers",
    "created_at": "2018-11-01T15:36:31Z",
    "closed_at": "2018-11-23T15:49:03Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1290",
    "body": "i'm trying to make goaccess understand my custom log format. basically it's standard apache, but extended by some fields. i've read parser.c to build my own format, but failed to find the following identifiers:\r\n\r\n\r\n```\r\n 127.0.0.1- - [01/Nov/2018:07:48:51 +0000] \"GET / HTTP/1.1\" 302 120 \"-\" \"Mozilla/5.0\" 616 6347 mod_deflate: In:124 Out:102:82pct 62485 0 - localhost\r\n<---------------- A P A C H E  F O R M A T ----------------------------------------->  %I  %O  mod_deflate: In:%IC Out:%OC:%Cpct   %D %k %s   %v\r\n```\r\n%I received bytes (total)\r\n%O sent bytes (total)\r\n%IC compression input bytes\r\n%OC compresseion output bytes\r\n%C compression ratio\r\n%k keepalive requests\r\n%s status \r\n\r\nhere's the apache log format config:\r\n```\r\nLogFormat \"%h %l %u %t \\\"%r\\\" %>s %b \\\"%{Referer}i\\\" \\\"%{User-Agent}i\\\" %I %O mod_deflate: In:%{deflate_in_info}n Out:%{deflate_out_info}n:%{deflate_ratio_info}npct %D %k %X %V\"\r\n```\r\n\r\nin general it would be useful to have a \"ignore\"-identifier, so that we can parse logs, even though some fields are not implemented.",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1290/comments",
    "author": "pille",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-11-02T12:09:01Z",
        "body": "Please try the following:\r\n\r\n    goaccess access.log --log-format='%h %^[%d:%t %^] \"%r\" %s %b \"%R\" \"%u\" %^ %^ %^ %^ %^ %D %^' --date-format=%d/%b/%Y --time-format=%T\r\n"
      }
    ]
  },
  {
    "number": 1276,
    "title": "Parsing timestamps from Traefik",
    "created_at": "2018-10-22T17:12:15Z",
    "closed_at": "2018-10-22T18:05:11Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1276",
    "body": "Example timestamp `2018-10-12T17:20:36.403088507Z`\r\n\r\n`%T` doesn't seem to be able to parse that sort of precision. I tried a few different methods without success.",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1276/comments",
    "author": "ipmb",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-10-22T17:53:21Z",
        "body": "The following format should do it: `2018-10-12T17:20:36.403088507Z` = `%dT%t.%^`"
      }
    ]
  },
  {
    "number": 1275,
    "title": "Need Help with custom nginx access Logs",
    "created_at": "2018-10-20T18:28:16Z",
    "closed_at": "2018-10-21T18:30:51Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1275",
    "body": "Hello guys,\r\nI came across this library and after seeing demo i think its really great, i want to use it, however i couldnt figure out right configuration for my cusom nginx log format.. \r\n\r\nThis is what i have in my nginx conf for custom format. \r\n```\r\n'$remote_addr - $remote_user [$time_local] \"$request\" '\r\n'$status $body_bytes_sent \"$http_referer\" '\r\n'\"$http_user_agent\" \"$http_x_forwarded_for\"';\r\n```\r\nAnd this is how a line of access log look like for me -\r\n```\r\n27.49.201.3 - - [20/Oct/2018:23:45:19 +0530] \"GET /updatefirmware HTTP/1.0\" 200 2 \"-\" \"MyClient\" \"-\"\r\n```\r\n\r\nCan somebody please help me with right configuration for parsing these logs... \r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1275/comments",
    "author": "arihantdaga",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-10-20T19:10:51Z",
        "body": "This should work:\r\n\r\n    goaccess access.log --log-format='%h %^[%d:%t %^] \"%r\" %s %b \"%R\" \"%u\" %^' --date-format=%d/%b/%Y --time-format=%T"
      }
    ]
  },
  {
    "number": 1232,
    "title": "Can't see any User-Agent",
    "created_at": "2018-09-18T07:52:15Z",
    "closed_at": "2018-09-18T21:41:16Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1232",
    "body": "I checked documentation, examples and issue tracker but still haven't realized what I should do to get User-Agent/Browser info - I always see Unknown\r\nMy log sample:\r\n\r\n> 191.207.59.68 - [14/Sep/2018:00:00:01 +0800] 0.003 \"/API/peer/OnLinePing\" 200 80 612 656 \"query\" \"\" \"8080\" \"161443355\" \"1\" \"127.0.0.1:8081\" \"0.002\" \"Mozilla/5.0 (PlayStation 4 6.00) AppleWebKit/605.1.15 (KHTML, like Gecko)\"\r\n> 125.26.31.174 - [14/Sep/2018:00:00:01 +0800] 0.003 \"/API/peer/GetInfo\" 200 206 312 769 \"query\" \"\" \"8080\" \"161443358\" \"1\" \"127.0.0.1:8081\" \"0.003\" \"OTT-iOS\"\r\n> 5.167.160.65 - [14/Sep/2018:00:00:01 +0800] 0.003 \"/API/peer/GetInfo\" 200 206 312 769 \"query\" \"\" \"8080\" \"161443356\" \"1\" \"127.0.0.1:8081\" \"0.003\" \"OTT-iOS\"\r\n> 137.110.51.114 - [14/Sep/2018:00:00:01 +0800] 0.010 \"/API/peer/ReportData\" 200 53 383 615 \"query\" \"\" \"8080\" \"161443363\" \"1\" \"127.0.0.1:8081\" \"0.010\" \"OTT-Android\"\r\n\r\nLog format: %h - [%d:%t %^] %T \"%r\" %s %b %^ %b \"%^\" \"%^\" \"%^\" \"%^\" \"%^\" \"%^\" \"%^\" \"%u\"\r\n\r\nPlease advise how I can fix it.",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1232/comments",
    "author": "zoulja",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-09-18T13:57:24Z",
        "body": "This should do it:\r\n\r\n    goaccess access.log --log-format='%h %^[%d:%t %^] %T \"%U\" %s %^ %^ %b \"%q\" %^ %^ %^ %^ %^ %^ \"%u\"' --date-format=%d/%b/%Y --time-format=%T --http-method=no --http-protocol=no"
      }
    ]
  },
  {
    "number": 1214,
    "title": "cron problem due to missing path",
    "created_at": "2018-08-23T23:25:12Z",
    "closed_at": "2018-08-27T14:28:46Z",
    "labels": [
      "question",
      "command-line options",
      "other",
      "cron"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1214",
    "body": "I try to run this cron job but goaccess can not creat the report,\r\n*/2 * * * * goaccess access.log -a > report.html \r\nalthough when i run this command from my ssh it works fine\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1214/comments",
    "author": "egy1st",
    "comments": [
      {
        "user": "LoZio",
        "created_at": "2018-08-24T09:34:35Z",
        "body": "Mostly due to missing path entries when run via crond.\r\nChech which is the full path of goaccess:  `which goaccess`\r\nYou'll get something like: `/usr/local/bin/goaccess`\r\nIn your cron line use the full path above instead of just `goaccess`.\r\n`*/2 * * * * /usr/local/bin/goaccess access.log -a > report.html`"
      }
    ]
  },
  {
    "number": 1205,
    "title": "I find the value of \"unique visitors\" is not right!",
    "created_at": "2018-08-20T09:44:39Z",
    "closed_at": "2018-08-22T11:47:04Z",
    "labels": [
      "question",
      "log-processing"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1205",
    "body": "env\uff1a\r\nGoAccess - 1.2\r\nubuntu 14.04\r\n\r\nmy goaccess command:\r\n\r\n```\r\ngoaccess -f /srv/logs/access.log -o report.html \r\n```\r\nThe result of \"unique visitors\" is : '10704\"\r\n\r\nBut if I use shell command:\r\n\r\n```\r\ncat /srv/logs/access.log |awk '{print $1}'|sort|uniq -c|wc -l\r\n````\r\nThe result is : \"5025\"\r\n\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1205/comments",
    "author": "Haitianisgood",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-08-20T14:29:38Z",
        "body": "Please note that HTTP requests containing the **same IP**, the **same date**, and the **same user agent** are considered a unique visitor. In your case, I'm assuming you are only taking unique IPs. \r\n\r\nThe unique IPs count should be displayed right above the data column in the Visitors Panel. "
      },
      {
        "user": "Haitianisgood",
        "created_at": "2018-08-21T02:42:46Z",
        "body": "Thank you for you reply!\r\nIn my opinion the \"HTTP requests containing the same IP, the same date, and the same user agent are considered a unique visitor\" should be less than unique IPs. Because it have too many restrictions.\r\n\r\nI think one IP requested two or more API should be one unique visitor,is it right?\r\n"
      },
      {
        "user": "allinurl",
        "created_at": "2018-08-21T11:43:34Z",
        "body": "Not really. Think about a house where all of them go out with the same public IP, but each house member has a different device, e.g., D1 => Chrome, D2 => iPad, D3 => Android Firefox. All of them using the same IP but different agent. Thus IP, Date and Agent = unique visitor."
      }
    ]
  },
  {
    "number": 1199,
    "title": "[One of those] Format Errors - Verify your log/date/time format",
    "created_at": "2018-08-13T19:31:53Z",
    "closed_at": "2018-08-13T20:15:51Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1199",
    "body": "I'm really struggling with log format. I was told the logs were supposed to be w3c but I guess they aren't.\r\n\r\n```\r\n#Fields: date\ttime\tcs-method\tc-ip\tcs-version\tcs-referrer\tcs-user-agent\tfilesize\tcs-bytes\tsc-bytes\ts-ip\ttime-taken\tsc-status\tcs-uri-query\tcs-uri-stem\tx-byte-range\tcomment\r\n```\r\n\r\nex.\r\n\r\n```\r\n2018-07-10\t11:23:12\tGET\tip.ip.ip.ip\thttps\t-\tXtream-Codes IPTV Panel Pro\t4057980\t159\t4058361\tip.ip.ip.ip\t0.033\t200\t-\t/path/to/file.ext\t-\t-\r\n```",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1199/comments",
    "author": "asciifaceman",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-08-13T19:40:34Z",
        "body": "Please try this:\r\n\r\n    goaccess access.log --log-format='%d\\t%t\\t%m\\t%h\\t%^\\t%R\\t%u\\t%b\\t%^\\t%^\\t%v\\t%T\\t%s\\t%^\\t%U\\t%^' --date-format=%Y-%m-%d --time-format=%T"
      }
    ]
  },
  {
    "number": 1183,
    "title": "Piping both outputs to goaccess (multiple pipes)",
    "created_at": "2018-07-26T13:48:22Z",
    "closed_at": "2018-07-27T06:53:55Z",
    "labels": [
      "question",
      "log-processing"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1183",
    "body": "Hello,\r\n\r\nI'm quite new to linux, and found myself stuck trying to pipe two things at the same time from the access_log into the goaccess report. \r\n\r\nFor example:\r\n\r\nI'm trying to pipe statistics only for certain url, like this:\r\ngrep -h -i 'example.com' /var/log/httpd/access_log | goaccess -a -o /usr/local/goaccess/testreport.html -\r\n\r\nBut I also want to, at the same time pipe the statistics for only previous day.\r\nI've seen in the documentation something like: \r\nsed -n '/'$(date '+%d\\/%b\\/%Y' -d 'yesterday')'/,$ p' /var/log/httpd/access_log | goaccess -a -o /usr/local/goaccess/testreport.html -\r\n\r\nIs there a good way to combine both of these options so I can generate html output for only example.com url and only for previous day?",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1183/comments",
    "author": "fractured",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-07-26T14:06:14Z",
        "body": "Great question, you can add additional pipes, e.g.,\r\n\r\n    sed -n '/'$(date '+%d/%b/%Y' -d 'yesterday')'/,$ p' /var/log/httpd/access_log | grep -h -i 'example.com' | goaccess -a -o /usr/local/goaccess/testreport.html -"
      }
    ]
  },
  {
    "number": 1155,
    "title": "Report not showing CUM T.S., AVG T.S., ",
    "created_at": "2018-06-21T12:54:01Z",
    "closed_at": "2018-06-21T16:28:21Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1155",
    "body": "Hey,\r\n\r\nWhen I open the report it looks good but missing the AVG T.S, etc.  Based on research guessing Im not picking the correct options but struggling a bit. Lookin for some advice. \r\n\r\n**Running:**\r\ngoaccess.exe apache_alc_access.log -a -o report.html\r\n\r\n**Log format:**\r\n\r\n1.1.1.1 2.2.2.2 - [19/Jun/2018:03:11:40 -0300] \"POST /api/pam/login HTTP/1.1\" 200 1107 472104 \"-\" \"Jakarta Commons-HttpClient/3.1\"\r\n\r\n**usr/local/etc/config is:**\r\ntime-format %T\r\n\r\ndate-format %d/%b/%Y\r\n\r\nlog-format %h %^[%d:%t %^] \"%r\" %s %b \"%R\" \"%u\"\r\n\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1155/comments",
    "author": "Jameswc5",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-06-21T16:10:32Z",
        "body": "This should work:\r\n\r\n    goaccess access.log --log-format='%h %^[%d:%t %^] \"%r\" %s %b %D \"%R\" \"%u\"' --date-format=%d/%b/%Y --time-format=%T"
      },
      {
        "user": "Jameswc5",
        "created_at": "2018-06-21T16:25:08Z",
        "body": "Perfect! I updated the go-access config file to:\r\n%T\r\n%h %^[%d:%t %^] \"%r\" %s %b %D \"%R\" \"%u\r\n%d/%b/%Y\r\n\r\n"
      }
    ]
  },
  {
    "number": 1106,
    "title": "No date format was found on your conf file",
    "created_at": "2018-05-03T01:45:52Z",
    "closed_at": "2018-05-08T16:31:52Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1106",
    "body": "`Fatal error has occurred\r\nError occured at: src/parser.c - parse_log - 2705\r\nNo date format was found on your conf file.`\r\n\r\nVersion 1.2\r\nFreeBSD 11.1\r\n\r\nIn `/usr/local/etc/goaccess.conf`:\r\n\r\n`time-format %H:%M:%S` \r\n\r\nin `~/.goaccessrc`:\r\n\r\n`time-format %T`\r\n`date-format %d/%b/%Y`\r\n`log_format %h - %^ [%d:%t %^] \"%r\" %s %b \"%R\" \"%u\"`\r\n\r\nSo two time-formats provided, yet I'm getting this error.  ",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1106/comments",
    "author": "daBee",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-05-03T02:26:41Z",
        "body": "Can you try specifying these command line options in-line? e.g.,\r\n\r\n    goaccess access.log --log-format='%h - %^ [%d:%t %^] \"%r\" %s %b \"%R\" \"%u\"' --date-format=%d/%b/%Y --time-format=%T\r\n\r\nor can you please try:\r\n\r\n    goaccess access.log -p /usr/local/etc/goaccess.conf  --no-global-config\r\n\r\n"
      },
      {
        "user": "daBee",
        "created_at": "2018-05-03T10:58:08Z",
        "body": "OK the first one worked.  Reworked my script, and this is what comes back:\r\n\r\n`testy.sh: line 12: unexpected EOF while looking for matching `''\r\n`testy.sh: line 16: syntax error: unexpected end of file`\r\n\r\nLine 12:\r\n\r\ngoaccess $src --log-format='%h - %^ [%d:%t %^] \"%r\" %s %b \"%R\" \"%u\"' --date-format=%d/%b/%Y --time-format=%T --no-query-string --real-os --output=$fname\r\n\r\nSorry, can't Markdown that one.  Not sure how you did that.  "
      },
      {
        "user": "allinurl",
        "created_at": "2018-05-03T11:49:21Z",
        "body": "Can you please post your whole script?"
      },
      {
        "user": "daBee",
        "created_at": "2018-05-04T12:22:09Z",
        "body": "`clear\r\necho \"RF_scripts/admin/goaccess/testy.sh\"\r\n\r\nsrc='/var/log/nginx/src='/var/log/nginx/access_pass1.log'\r\nfname='/home/adminuser/goaccess/'$(date -v -1d +%Y-%m-%B_access_pass1.html)\r\necho $src\r\necho $fname\r\n\r\ngoaccess $src  --log-format='%h - %^ [%d:%t %^] \"%r\" %s %b \"%R\" \"%u\"' --date-format=%d/%b/%Y --time-format=%T --no-query-string --real-os --output=$fname`\r\n\r\nWell, markdown didn't work there either.  "
      },
      {
        "user": "allinurl",
        "created_at": "2018-05-08T15:51:46Z",
        "body": "Please check your `src` variable, there's some extra quotes in there... e.g.,\r\n\r\n```\r\nclear\r\necho \"RF_scripts/admin/goaccess/testy.sh\"\r\n\r\ntoday=$(date -v -1d +%Y-%m-%B)\r\nsrc=/var/log/nginx/access_pass1.log\r\nfname=/home/adminuser/goaccess/$today_access_pass1.html\r\necho $src\r\necho $fname\r\n\r\ngoaccess $src --log-format='%h - %^ [%d:%t %^] \"%r\" %s %b \"%R\" \"%u\"' --date-format=%d/%b/%Y --time-format=%T --no-query-string --real-os --output=$fname\r\n```"
      }
    ]
  },
  {
    "number": 1078,
    "title": "extract all visitors and page views",
    "created_at": "2018-04-10T14:11:56Z",
    "closed_at": "2018-04-15T21:26:42Z",
    "labels": [
      "question",
      "log-processing"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1078",
    "body": "I have a few questions in relation to visitors.\r\nI am trying to find a way to extract some specific info from the logs.\r\n\r\nAs per your docs goaccess reports unique visitors , \r\n1. What are the conditions for a visitor to be considered unique ?\r\n2. is there a way to report the total number of visitors to the site regardless if some of them are double up ( non-unique visitors )\r\n3. In relation to page-views as specified in the docs i tried to use\r\nawk '$7~/\\.html|\\.htm|\\.php/' access.log | goaccess -\r\nMy issue is the hosted site is WordPress and the pages have no extension;\r\n- home page in the logs file is listed as: '/'\r\n- contact page is listed as: '/contact' etc.\r\n\r\nThe above log parsing won't work in this case scenario where the pages or posts don't have an extension, is there a way to extract page views in this case scenario ?\r\n\r\nThank You",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1078/comments",
    "author": "expressmarketing",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-04-11T15:06:15Z",
        "body": "1. Hits/requests having the same IPv4/6, date and user agent are considered a unique visitor.\r\n2. Not exactly, but probably you could deduce this from the Visitors (IPs) panel by looking at how many unique visitors there are for a single IP.\r\n3. To extract page views that don't contain an extension (assuming a COMBINED log format), you could use:\r\n\r\n` ` ` \r\n    awk '$7!~/\\..*$/' access.log | goaccess --log-format=COMBINED -\r\n` ` ` "
      }
    ]
  },
  {
    "number": 1050,
    "title": "Get monthly records with needing to specify day number.",
    "created_at": "2018-03-22T02:15:26Z",
    "closed_at": "2018-04-10T20:45:36Z",
    "labels": [
      "question",
      "log-processing"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1050",
    "body": "If we want to parse only a certain time-frame from DATE a to DATE b, we can do:\r\n`# sed -n '/5\\/Nov\\/2010/,/5\\/Dec\\/2010/ p' access.log | goaccess -a -`\r\n\r\nHow can I do something similar to this, but just get the records for a month?\r\n\r\nExample: everything in `Feb 2010`, so I don't need to calculate whether it is a leap year or how many days are in the month etc etc.",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1050/comments",
    "author": "robertmylne",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-03-22T02:57:34Z",
        "body": "You could simply do:\r\n\r\n    grep 'Mar\\/2018' /var/log/apache2/access.log | goaccess --log-format=COMBINED -\r\n\r\nor you can play also with `date`, e.g. to get only today's entries,\r\n\r\n    grep `date +\"%d/%b\"` /var/log/apache2/access.log | goaccess --log-format=COMBINED -"
      },
      {
        "user": "allinurl",
        "created_at": "2018-03-22T12:23:04Z",
        "body": "Glad to hear that worked:)\r\n\r\nYou can do something like (assuming you have a COMBINED log)\r\n\r\n    awk -F'[: ]' '$5~/06/' /var/log/apache2/access.log | goaccess --log-format=COMBINED -\r\n\r\nThat will match the hour field (fifth) to 06 (6am).\r\n\r\nAnd you can always combine multiple pipes, e.g.,\r\n\r\n    grep 'Mar\\/2018' /var/log/apache2/access.log | awk -F'[: ]' '$5~/06/'  | goaccess --log-format=COMBINED -\r\n\r\nThis should get much easier when #117 is implemented :)"
      },
      {
        "user": "allinurl",
        "created_at": "2018-04-10T20:45:21Z",
        "body": "> Is there a way to do it for multiple files at the same time, like in cPanel it has 2 files one for ssl and one for non ssl. So if the domain has been changed it is spread over multiple log files.\r\n\r\nFor multiple files you can simply cat those files and then grep as above. e.g.,\r\n\r\n    cat /var/log/apache2/access.log /var/log/apache2/access-ssl.log | grep 'Mar\\/2018' | awk -F'[: ]' '$5~/06/'  | goaccess --log-format=COMBINED -"
      }
    ]
  },
  {
    "number": 1034,
    "title": "Custom Apache access log format",
    "created_at": "2018-02-28T21:43:50Z",
    "closed_at": "2019-01-09T14:54:19Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1034",
    "body": "Hello,\r\n\r\nCould you please help me with the configuration of the log format I'm using?\r\n\r\nHere's a line that shows it in the access.log:\r\n\r\n    [28/Feb/2018:09:09:00 +0100] [www.website.com:443] [client 117.201.55.235] \"GET / HTTP/1.1\" 200 62972 \"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:40.0) Gecko/20100101 Firefox/40.1\"\r\n\r\nThank you in advance.",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1034/comments",
    "author": "eibravomacias",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-02-28T21:53:11Z",
        "body": "Please try this:\r\n\r\n    goaccess access.log --log-format='[%d:%t %^] [%v:%^] [%^ %h] \"%r\" %s %b \"%u\"' --date-format=%d/%b/%Y --time-format=%T --ignore-panel=REFERRING_SITES"
      }
    ]
  },
  {
    "number": 1027,
    "title": "Caddy log format",
    "created_at": "2018-02-24T09:54:49Z",
    "closed_at": "2018-02-24T15:59:20Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1027",
    "body": "Hi all,\r\ngreat project first of all :+1: \r\nFollowing getting started section, I have issues configuring log format for Caddy server.\r\n\r\nDefault format in `access.log`:\r\n```\r\n11.11.11.11 - - [24/Feb/2018:10:47:27 +0100] \"GET / HTTP/2.0\" 304 0\r\n11.11.11.11 - - [24/Feb/2018:10:47:28 +0100] \"GET /assets/css/main.css HTTP/2.0\" 304 0\r\n```\r\nI've masked IPv4 but it could be IPv6 as well.\r\n\r\nThanks for your support and have a nice day\r\nmidzer",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1027/comments",
    "author": "midzer",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-02-24T14:29:32Z",
        "body": "Looks like COMMON log format. Please try:\r\n\r\n    goaccess access.log --log-format=COMMON"
      },
      {
        "user": "midzer",
        "created_at": "2018-02-24T15:59:20Z",
        "body": "After upgrading to Official GoAccess Debian & Ubuntu repository, it worked flawlessly with COMMON log format. Thanks @allinurl "
      }
    ]
  },
  {
    "number": 1020,
    "title": "Apache Custom Log Format",
    "created_at": "2018-02-18T18:04:39Z",
    "closed_at": "2018-02-19T20:24:35Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1020",
    "body": "Hello, I can't seem to figure out this custom log format for goaccess:\r\n\r\nApahce LogFormat:\r\n\r\n    \"%{Host}i:%p %a %l %u %t \\\"%r\\\" %>s %O \\\"%{Referer}i\\\" \\\"%{User-Agent}i\\\" %{%s}t %D %P\"\r\n\r\nExample:\r\n\r\n    10.61.244.2:80 10.61.244.1 - - [18/Feb/2018:17:49:27 +0000] \"GET /favicon.ico HTTP/1.1\" 404 502 \"-\" \"Mozilla/5.0 (X11; Linux x86_64; rv:58.0) Gecko/20100101 Firefox/58.0\" 1518976167 207 527\r\n\r\nWhat I tried:\r\nlog-format \"%H:%p %a %l %u %t \"%r\" %s %O \"%R\" \"%u\" \\t%s %D %P\r\n\r\nCan someone help me ?",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1020/comments",
    "author": "TheHitchhiker",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-02-18T19:25:56Z",
        "body": "Please try this:\r\n\r\n    goaccess access.log --log-format='%h: %^[%d:%t %^] \"%r\" %s %b \"%R\" \"%u\" %^ %D %^' --date-format=%d/%b/%Y --time-format=%T"
      }
    ]
  },
  {
    "number": 1017,
    "title": "Nginx Json custom log format",
    "created_at": "2018-02-16T18:10:18Z",
    "closed_at": "2018-02-16T20:22:24Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1017",
    "body": "I am trying to parse our custom nginx log format with the following setup:\r\n```\r\n{\"server_name\": \"$server_name\", \"server_port\": $server_port, \"server_protocol\": \"$server_protocol\", \"http_host\": \"$http_host\", \"remote_addr\": \"$remote_addr\", \"remote_user\": \"$remote_user\", \"time_local\": \"$time_local\", '\r\n                          '\"request\": \"$request\", \"status\": $status, \"body_bytes_sent\": $body_bytes_sent, \"http_referrer\": \"$http_referer\", '\r\n                          '\"http_user_agent\": \"$http_user_agent\", \"request_time\": \"$request_time\", \"http_client_ip\": \"$http_client_ip\", \"http_x_forwarded_for\" : \"$http_x_forwarded_for\"}\r\n```\r\nExample from nginx log:\r\n```\r\n{\"server_name\":` \"domain.*\", \"server_port\": 80, \"server_protocol\": \"HTTP/1.1\", \"http_host\": \"www.example.com\", \"remote_addr\": \"ip_removed\", \"remote_user\": \"-\", \"time_local\": \"15/Feb/2018:14:26:56 -0500\", \"request\": \"GET /example/test/test HTTP/1.1\", \"status\": 200, \"body_bytes_sent\": 21, \"http_referrer\": \"-\", \"http_user_agent\": \"user agent string\", \"request_time\": \"0.015\", \"http_client_ip\": \"-\", \"http_x_forwarded_for\" : \"ip_removed, ip_removed, ip_removed\"}\r\n```\r\n\r\nCurrent formats trying to use:\r\n```\r\ntime-format %H:%M:%S %z\r\ndate-format %d/%b/%Y\r\nlog-format {\"%^\": \"%v\", \"%^\": %^, \"%^\": \"%H\", \"%^\": \"%^\", \"%^\": \"%^\", \"%^\": \"%d:%t\", \"%^\": \"%m %U %H\", \"%^\": %s, \"%^\": %b, \"%^\": \"%R\", \"%^\": \"%u\", \"%^\": \"%T\", \"%^\": \"%h\", \"%^\" : \"%^\"}\r\n```\r\nAny help would be appreciated.",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1017/comments",
    "author": "kmentch",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-02-16T19:10:45Z",
        "body": "Give this a shot:\r\n\r\n    goaccess access.log --log-format='%^ \"%v\"%^:%^:%^:%^: \"%h\"%^: \"%e\"%^: \"%d:%t %^\"%^: \"%r\"%^: %s, %^: %b, %^: \"%R\"%^: \"%u\"%^: \"%T\" %^' --date-format=%d/%b/%Y --time-format=%T"
      }
    ]
  },
  {
    "number": 996,
    "title": "Help with Wildfly 8 access log format",
    "created_at": "2018-01-18T22:26:28Z",
    "closed_at": "2018-01-19T12:52:41Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/996",
    "body": "Hello,\r\nI have been dancing around getting **widlfly** access logs parsing correctly.\r\nI get \"Nothing valid to process. Verify your date/time/log format.\"\r\n\r\nFormat used in generating the access log \r\n\r\n    %h %l %u %t \"%r\" %s %b %D\r\n\r\ncheers\r\n\r\n```\r\nSample logs\r\n===========\r\n127.0.0.1 - - 18/Jan/2018:00:02:32 +0100 \"GET /remita/res/app-resources/custom/css/poster.css HTTP/1.1\" 200 6626 -\r\n127.0.0.1 - - 18/Jan/2018:00:02:32 +0100 \"GET /remita/res/app-resources/custom/js/poster.js HTTP/1.1\" 200 289 -\r\n127.0.0.1 - - 18/Jan/2018:00:02:32 +0100 \"GET /remita/res/app-resources/custom/images/loading.gif HTTP/1.1\" 200 8533 -\r\n127.0.0.1 - - 18/Jan/2018:00:02:32 +0100 \"POST /remita/onepage/api/v1/payment.spa HTTP/1.1\" 200 51127 -\r\n127.0.0.1 - - 18/Jan/2018:00:02:33 +0100 \"GET /remita/res/app-resources/dest/onepage-bundle.min.css?v=1.1.12 HTTP/1.1\" 200 79956 -\r\n127.0.0.1 - - 18/Jan/2018:00:02:33 +0100 \"GET /remita/res/app-resources/dest/onepage-payment-bundle.min.js?v=1.1.12 HTTP/1.1\" 200 183220 -\r\n\r\n```",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/996/comments",
    "author": "mujibishola",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-01-18T22:41:32Z",
        "body": "This should do it:\r\n\r\n    goaccess access.log --log-format='%h %^ %^ %d:%t %^ \"%r\" %s %b %^' --date-format=%d/%b/%Y --time-format=%T --ignore-panel=BROWSERS --ignore-panel=OS --ignore-panel=REFERRING_SITES"
      }
    ]
  },
  {
    "number": 965,
    "title": "View details of per virtual host (filtering)",
    "created_at": "2017-12-11T04:09:54Z",
    "closed_at": "2017-12-15T12:54:55Z",
    "labels": [
      "question",
      "log-processing"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/965",
    "body": "Hi Developers,\r\nThanks for this great application, it really helps me a lot.\r\nThere are many virtual hosting in my server. \r\nIs it possible to view the detail of one selected virtual host ?\r\nThanks.",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/965/comments",
    "author": "ppc52776",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2017-12-11T04:17:35Z",
        "body": "Certainly, awk, grep, sed are your friends for this, e.g. (assuming your vhost is the first field),\r\n\r\n    awk '$1~/dev.domain.com/' access.log | goaccess --log-format=VCOMBINED -\r\n    "
      }
    ]
  },
  {
    "number": 939,
    "title": "Parsing IBM WebSeal 6.1.1 logs (Tivoli Access Manager)",
    "created_at": "2017-11-08T14:10:03Z",
    "closed_at": "2017-11-09T15:34:27Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/939",
    "body": "Hi.\r\nI'm trying to parse IBM WebSeal logs without success,\r\n\r\nThe log record is in this format:\r\n    _ip_address_client_ - _username_ dd/mm/yyyy:hh:mm:ss +0200 \"_url request_\" _status_code_ _bytes_\r\n\r\nNotice that the \"-\" and \"+200\" characters in second and fifth position are fixed\r\n\r\nI've personalized the log-format parameter in this way:\r\n```\r\n%h - %e %d:%t %^ \"%r\" %s %b\r\nand --date-format=%d%b%Y\r\n```\r\n\r\nbut I get the message:\r\n\r\nParsed 10 lines producing the following errors:\r\nToken '_all my original log record_' doesn't match specifier '%h'\r\n.................\r\n.................\r\n\r\nIt would seem that all the entire log record is parsed with %h specifier, without consider every single word. \r\nWhere I am wrong?\r\nThank you.",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/939/comments",
    "author": "FrankieReds",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2017-11-08T15:07:04Z",
        "body": "Can you please post a few lines from your access log so I can take a look? Thanks."
      },
      {
        "user": "FrankieReds",
        "created_at": "2017-11-08T15:41:40Z",
        "body": "Sure.\r\nHere are some lines:\r\n```\r\n10.54.136.177 - C012065 25/Oct/2017:14:11:04 +0200 \"POST /bpm/notification/cometd/connect HTTP/1.1\" 200 58 -\r\n10.54.32.73 - C077062 25/Oct/2017:14:11:35 +0200 \"GET /was85/autenticazione/login.jsp HTTP/1.1\" 200 8227 -\r\n77.43.29.122 - e677350e 25/Oct/2017:14:11:33 +0200 \"POST /wass/LAMPO/lampo?discaricoConfirm HTTP/1.1\" 200 10013 -\r\n```\r\n\r\nThanks."
      },
      {
        "user": "allinurl",
        "created_at": "2017-11-08T16:51:49Z",
        "body": "This should do it:\r\n\r\n    goaccess access.log --log-format='%h %^ %v %d:%t %^ \"%r\" %s %b %^' --date-format=%d/%b/%Y --time-format=%T"
      }
    ]
  },
  {
    "number": 906,
    "title": "Custom log format and GoAccess",
    "created_at": "2017-09-29T17:14:10Z",
    "closed_at": "2017-09-29T18:09:08Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/906",
    "body": "Hello,\r\nI am on this since many hours and i don't understand at all.\r\nI have read many issue in the repository to help me but cannot find any way.\r\n\r\n**Here is a log example :** \r\n\r\n```\r\n165.225.76.111 - https - www.mysite.com - - [2017-09-01T06:27:36+02:00] \"POST /pro/sync?version=5&group_id=75716&code_version=17.1.0&guid_pro=b05318735deb3436af14af1ce55d49d479b8e19a HTTP/1.1\" 200 365 Time Taken 0.013\r\n81.134.4.185 - https - www.mysite.com - - [2017-09-01T06:27:36+02:00] \"POST /pro/sync?version=5&group_id=95649&code_version=17.1.0&guid_pro=5bf2c2c708b868e4ee5d93970f9e5b78d721c1ff HTTP/1.1\" 200 365 Time Taken 0.014\r\n165.225.76.125 - https - www.mysite.com - - [2017-09-01T06:27:37+02:00] \"POST /pro/sync?version=5&group_id=75480&code_version=17.1.0&guid_pro=6dafd16e1ad4bef5bdae6f9497ee1c303f502c71 HTTP/1.1\" 200 365 Time Taken 0.013\r\n213.56.81.46 - https - www.mysite.com - - [2017-09-01T06:27:37+02:00] \"POST /pro/sync?version=5&group_id=85875&code_version=17.1.0&guid_pro=a8f06901108f8e2b6aa575529076c67e7820b7c6 HTTP/1.1\" 200 365 Time Taken 0.013\r\n62.23.147.136 - https - www.mysite.com - - [2017-09-01T06:27:37+02:00] \"POST /pro/sync?version=5&group_id=41659&code_version=17.1.0&guid_pro=b64387e855525e95a8b1d2337444448bf42a358c HTTP/1.1\" 200 365 Time Taken 0.014\r\n62.23.147.136 - https - www.mysite.com - - [2017-09-01T06:27:38+02:00] \"POST /pro/sync?version=5&group_id=85459&code_version=17.1.0&guid_pro=5f65e4f96ed6530c09656cd0afc4aff4a8dd0427 HTTP/1.1\" 200 365 Time Taken 0.012\r\n\r\n```\r\n**Here is my config :** \r\n\r\n```\r\ntime-format %H:%M:%S%^\r\ndate-format %Y-%m-%d\r\nlog-format %h - %^ - %v - %^ - [%dT%t] \\\"%r\\\" %s %b Time Taken %T\r\n```\r\n\r\n**Bug :**\r\n\r\n```\r\nParsed 10 lines producing the following errors:\r\n\r\nToken '06:27:30+02:00' doesn't match specifier '%t'\r\nToken '06:27:30+02:00' doesn't match specifier '%t'\r\nToken '06:27:31+02:00' doesn't match specifier '%t'                                                                                                                                                                                                        Token '06:27:31+02:00' doesn't match specifier '%t'\r\nToken '06:27:31+02:00' doesn't match specifier '%t'\r\nToken '06:27:31+02:00' doesn't match specifier '%t'\r\nToken '06:27:31+02:00' doesn't match specifier '%t'                                                                                                                                                                      Token '06:27:32+02:00' doesn't match specifier '%t'                                                                                                                                                                                                                         Token '06:27:32+02:00' doesn't match specifier '%t'\r\nToken '06:27:32+02:00' doesn't match specifier '%t'\r\nFormat Errors - Verify your log/date/time format\r\n```\r\n\r\n\r\nIt works if i use : log-format %h - %^ - %v - %^ - [%dT%^] \\\"%r\\\" %s %b Time Taken %T\r\n\r\nBut i don't have the time distribution and really need it, i am analysing a server crash.",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/906/comments",
    "author": "mikrob",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2017-09-29T17:20:40Z",
        "body": "This should do it:\r\n\r\n    goaccess access.log --log-format='%h %^ %^ %v %^[%dT%t+%^] \"%r\" %s %b %^ %^ %T' --date-format='%Y-%m-%d' --time-format=%T --ignore-panel=OS --ignore-panel=BROWSERS --ignore-panel=REFERERS --ignore-panel=REFERRING_SITES"
      }
    ]
  },
  {
    "number": 892,
    "title": "Token 'HTTPS' doesn't match specifier '%H'",
    "created_at": "2017-09-21T09:03:53Z",
    "closed_at": "2017-09-22T02:06:02Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/892",
    "body": "``` \r\n20170920145951 112.4.154.81 xfzdl2.haowanyou.com /PalaceM2_cn_cn/S180049901/HttpRoot/1.2.6/0_23.pkg?17082918 2177457 120 1046 206 NULL 60003 \"NULL\" \"36992816-\" GET HTTPS hit\r\n ```\r\n\r\n```\r\ngoaccess -f 1.txt --log-format='%x %h %v %U %b %^ %^ %s %R %L \"%u\" %^ %m %H %^' --date-format=%Y%m%d%H%M%S --time-format=%Y%m%d%H%M%S -d -a > test.html\r\n```\r\n\r\nToken 'HTTPS' doesn't match specifier '%H'\r\n\r\nPls help me\r\n\r\nGoAccess - 1.2      ",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/892/comments",
    "author": "hulao6",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2017-09-21T19:27:57Z",
        "body": "Close, however, HTTPS is not a valid protocol, this should do it:\r\n\r\n    goaccess access.log --log-format='%x %h %v %U %b %^ %^ %s %R %L \"%u\" %^ %m %^' --date-format=%Y%m%d%H%M%S --time-format=%Y%m%d%H%M%S --http-protocol=no"
      }
    ]
  },
  {
    "number": 888,
    "title": "Custom nginx log-format and GoAccess",
    "created_at": "2017-09-20T13:19:54Z",
    "closed_at": "2017-09-21T13:45:54Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/888",
    "body": "    log_format main\r\n              '$time_iso8601|$http_x_forwarded_for|$http_host|$request|'\r\n               '$status|$request_time|$body_bytes_sent|$http_referer|'\r\n               '$upstream_addr|$upstream_response_time'\r\n\r\nlog sample\r\n\r\n    2017-09-19T00:00:04+08:00|192.168.0.9|192.168.0.85:8080|GET /UserSystem/ParkingLeaseInformation/v1_2/getParkingLeaseInformationBylicensePlateNumber.do?licensePlateNumber=%E4%BA%ACNE68N8&leaseParkId=476901 HTTP/1.0|200|0.026|686|-|192.168.0.141:8080|0.024\r\n\r\nthank you\r\n\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/888/comments",
    "author": "jingting969",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2017-09-20T13:51:48Z",
        "body": "I see you have `$http_x_forwarded_for` in your second field, how are your IPs delimited on that field?"
      },
      {
        "user": "jingting969",
        "created_at": "2017-09-21T01:43:22Z",
        "body": "This IP is real client IP, who call the api. Only one for `$http_x_forwarded_for`.\r\n\r\n```\r\n2017-09-19T18:13:24+08:00|192.168.0.21|192.168.0.85:8080|POST /UserSystem/UserPlate/v2/queryUserByUserPlate.do HTTP/1.0|200|0.012|35|-|192.168.0.140:8080|0.010\r\n\r\n2017-09-19T18:13:24+08:00|192.168.0.100|192.168.0.85:8080|POST /BackgroundAppExtend/parkingLocation/V1_1/updateParkEmpty.do HTTP/1.0|200|0.004|71|-|192.168.0.11:8080|0.002\r\n\r\n2017-09-19T18:13:24+08:00|192.168.0.101|192.168.0.85:8080|POST /carPark_old/gdExportRecognize/saveGdExportRecognize.shtml HTTP/1.0|200|0.027|177|-|192.168.0.100:8080|0.025\r\n\r\n2017-09-19T18:13:24+08:00|192.168.0.21|192.168.0.85:8080|POST /UserSystem/UserPlate/v2/queryUserByUserPlate.do HTTP/1.0|200|0.009|35|-|192.168.0.141:8080|0.007\r\n```\r\n"
      },
      {
        "user": "allinurl",
        "created_at": "2017-09-21T03:21:16Z",
        "body": "Assuming there's only one IP for that field, this should do it:\r\n\r\n    goaccess access.log --log-format=\"%dT%t+%^|%h|%v|%r|%s|%T|%b|%R|%^\" --date-format=W3C --time-format=%T --ignore-panel=OS --ignore-panel=BROWSERS"
      }
    ]
  },
  {
    "number": 885,
    "title": "Custom Nginx LogFormat and GoAccess",
    "created_at": "2017-09-18T19:51:55Z",
    "closed_at": "2017-09-18T21:31:01Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/885",
    "body": "Hello, i have nginx log file:\r\n\r\n```\r\n'$remote_addr - $remote_user [$time_local] '\r\n'\"$request\" $status $bytes_sent \"$http_referer\" '\r\n'\"$http_user_agent\" \"$uid_got\" \"$uid_set\" $msec '\r\n'adfr=\"$cookie_adfr\" '\r\n'dv=\"$cookie_dv\" dvr=\"$cookie_dvr\" '\r\n'lv=\"$cookie_lv\" lvr=\"$cookie_lvr\" '\r\n'rt=$request_time ut=\"$upstream_response_time\" '\r\n'cs=$upstream_cache_status ua=\"$upstream_addr\" us=\"$upstream_status\"'\r\n```\r\n\r\nLogging example:\r\n\r\n```\r\n10.41.32.104 - - [18/Sep/2017:00:00:02 +0300] \"GET /breaking/current/?project_id=1 HTTP/1.1\" 200 206 \"-\" \"python-requests/2.13.0\" \"-\" \"-\" 1505682002.098 adfr=\"-\" dv=\"-\" dvr=\"-\" lv=\"-\" lvr=\"-\" rt=0.000 ut=\"-\" cs=HIT ua=\"-\" us=\"-\"\r\n10.16.32.116 - - [18/Sep/2017:00:00:02 +0300] \"GET /clusters/info?rubricator_id=1&ids=37189260 HTTP/1.1\" 200 2961 \"-\" \"python-requests/2.13.0\" \"-\" \"-\" 1505682002.133 adfr=\"-\" dv=\"-\" dvr=\"-\" lv=\"-\" lvr=\"-\" rt=0.151 ut=\"0.151\" cs=MISS ua=\"10.16.20.25:8084\" us=\"200\"\r\n```\r\n\r\nGoaccess config:\r\n\r\n```\r\nlog-format %h %^ - [%d:%t] \"%r\" %s %b %^ \"%u\" %^ %^ %^ %^ %^ %^ %^ %^ %T\r\ndate-format %d/%b/%Y\r\ntime-format %H:%M:%S %z\r\n```\r\n\r\nHow I can get `$response_time` in html result? I get Constantly 0.00",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/885/comments",
    "author": "ikrivosheev",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2017-09-18T19:57:23Z",
        "body": "This should do it:\r\n\r\n    goaccess access.log --log-format='%h %^[%d:%t %^] \"%r\" %s %b \"%R\" \"%u\" %^ %^ %^ %^ %^ %^ %^ %^ %^=%T %^' --date-format=%d/%b/%Y --time-format=%T"
      }
    ]
  },
  {
    "number": 870,
    "title": "static files with paremeters should not be in the \"requested files\"",
    "created_at": "2017-08-28T11:15:10Z",
    "closed_at": "2017-08-30T13:35:51Z",
    "labels": [
      "question",
      "log-processing"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/870",
    "body": "```\r\n> goaccess --version\r\nGoAccess - 1.2.\r\n```\r\n```\r\n> lsb_release -a                                                                                                           \r\nNo LSB modules are available.\r\nDistributor ID:\tUbuntu\r\nDescription:\tUbuntu 16.04.3 LTS\r\nRelease:\t16.04\r\nCodename:\txenial\r\n```\r\n\r\nfor example, from my site's recent log, I got:\r\n\r\n```\r\n   2 - Requested Files (URLs)                                                                                                                                                               Total: 366/630\r\n\r\n Hits    h% Vis.    v%   Bandwidth Mtd  Proto    Data\r\n ---- ----- ---- ----- ----------- ---- -------- ----\r\n 316  8.86%   11 0.39%     0.0   B HEAD HTTP/1.1 /\r\n 147  4.12%   80 2.81%    1.33 MiB GET  HTTP/1.1 /\r\n 112  3.14%   30 1.05%  339.14 KiB GET  HTTP/1.1 /feed\r\n 64   1.80%   33 1.16%  245.41 KiB GET  HTTP/1.1 /wp-login.php\r\n 63   1.77%   61 2.14%   35.56 KiB GET  HTTP/1.1 /wp-includes/js/comment-reply.min.js?ver=4.8.1\r\n 61   1.71%   59 2.07%   37.18 KiB GET  HTTP/1.1 /wp-content/themes/twentytwelve/js/navigation.js?ver=20140711\r\n 61   1.71%   59 2.07%   43.09 KiB GET  HTTP/1.1 /wp-includes/js/wp-embed.min.js?ver=4.8.1\r\n```\r\n\r\nThose files like `xxx.js?ver=x.y.z` should not be recognized as requested files, they are actually static files too.",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/870/comments",
    "author": "chrisyue",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2017-08-28T12:10:29Z",
        "body": "Please  use `--all-static-files`"
      },
      {
        "user": "allinurl",
        "created_at": "2017-08-29T17:06:25Z",
        "body": "Please use:\r\n\r\n    goaccess access.log --all-static-files --static-file=.eot\r\n\r\nor uncomment your static extensions from your config file.\r\n"
      }
    ]
  },
  {
    "number": 849,
    "title": "Can't create log-format for IIS logs",
    "created_at": "2017-07-21T10:35:43Z",
    "closed_at": "2017-07-21T12:21:55Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/849",
    "body": "I cannot create log-format for IIS logs:\r\n\r\n```\r\n2017-07-18 00:09:01 172.18.40.65 GET /healthcheck.html - 443 - 172.18.1.11 ELB-HealthChecker/2.0 - 200 0 0 0\r\n2017-07-18 00:09:07 172.18.40.65 GET /healthcheck.html - 443 - 172.18.5.124 ELB-HealthChecker/2.0 - 200 0 0 1\r\n2017-07-18 00:09:32 172.18.40.65 GET /healthcheck.html - 443 - 172.18.1.11 ELB-HealthChecker/2.0 - 200 0 0 0\r\n```\r\n\r\nI've tried to find any solutions for that, but all of the options, whose I found, isn't help.",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/849/comments",
    "author": "veniaminshi",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2017-07-21T11:48:39Z",
        "body": "Can you please describe each of the fields? Thanks."
      },
      {
        "user": "veniaminshi",
        "created_at": "2017-07-21T12:08:49Z",
        "body": "DATE - TIME - IP of machine with IIS - HTTP method - site page (like /allinurl/goaccess/issues/849) - PORT - IP of machine from where request was arrived - browser or program from where request was arrived - HTTP status - substatus - win32-status"
      },
      {
        "user": "allinurl",
        "created_at": "2017-07-21T12:15:09Z",
        "body": "Please try:\r\n\r\n    goaccess access.log --log-format='%d %t %^ %m %U %^ %^ %^ %h %u %^ %s %^' --date-format=%Y-%m-%d --time-format=%T --http-protocol=no"
      }
    ]
  },
  {
    "number": 776,
    "title": "shell_exec does not work correctly when using \"awk\" before generating report",
    "created_at": "2017-05-18T08:05:09Z",
    "closed_at": "2017-05-19T02:49:11Z",
    "labels": [
      "question",
      "html report",
      "log-processing"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/776",
    "body": "Hi Support,\r\n\r\nI'm facing the problem with \"awk\" and \"goaccess\"\r\n\r\n**My PHP script**:\r\n```\r\n$cmd = \"awk '$7 ~ /schedule/' /var/logs/httpd/access_log* | goaccess -a -o /var/www/html/log/generate_report.html\"\r\n$output = shell_exec($cmd);\r\n```\r\n\r\n**Error Log**:\r\n\r\n> AH01215: awk: cmd. line:1: (FILENAME=/var/logs/httpd/access_log-20170508 FNR=126) fatal: print to \"standard output\" failed (Broken pipe)\r\n\r\nThis issue only happens when output of \"awk\" is input of \"goaccess\", because when I use \r\nanother \"awk\" instead of \"goaccess\", it still works well. Ex:\r\n\r\n    $cmd = \"awk '$7 ~ /schedule/' /var/logs/httpd/access_log* | awk '{gsub(/[\\/]+/,\"/\",$7); print }'\"\r\n\r\nSo, there is any way to fix this issue? Thank you so much.\r\n\r\nLooking forward to knowing your response.\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/776/comments",
    "author": "nhochong",
    "comments": [
      {
        "user": "nhochong",
        "created_at": "2017-05-18T10:48:40Z",
        "body": "Hi Support,\r\n\r\nThank you so much for your contribute.\r\n\r\nI have resolved this issue by myself.\r\n\r\nMy solution: write filtered record to a new file before generating the report from the new file.\r\n\r\nScript:\r\n\r\n```\r\n// Filter logs\r\n$cmd = \"awk '$7 ~ /schedule/' /var/logs/httpd/access_log* > /var/logs/httpd/filtered_log\"\r\nshell_exec($cmd);\r\n```\r\n\r\n// Generate report\r\n```\r\n$cmd = \"goaccess /var/logs/httpd/filtered_log -a -o /var/www/html/log/generate_report.html\"\r\nshell_exec($cmd);\r\n```\r\n\r\nLet me know if you have a better solution for this :)\r\n\r\nThanks again."
      },
      {
        "user": "allinurl",
        "created_at": "2017-05-18T11:44:11Z",
        "body": "Using\r\n\r\n```\r\n$cmd = \"awk '$7 ~ /schedule/' /var/logs/httpd/access_log* | goaccess -a -o /var/www/html/log/generate_report.html\"\r\n$output = shell_exec($cmd);\r\n```\r\n\r\nwhat output do you get? Also please try adding a single dash `-` to let goaccess know it should read from a pipe. e.g., \r\n\r\n    $cmd = \"awk '$7 ~ /schedule/' /var/logs/httpd/access_log* | goaccess -a -o /var/www/html/log/generate_report.html -\""
      },
      {
        "user": "allinurl",
        "created_at": "2017-05-19T12:06:11Z",
        "body": "@nhochong Glad that worked :) Running it through shell_exec and awk probably does not give you a terminal and thus the dash is needed."
      }
    ]
  },
  {
    "number": 762,
    "title": "Custom log format with XFF and tab/space delimited",
    "created_at": "2017-05-07T05:26:26Z",
    "closed_at": "2017-05-07T17:43:34Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/762",
    "body": "Hi @allinurl \r\n\r\nWhat's the right log format for the following access log. I have tried many but still not worked. \r\n\r\n    [03/May/2017:23:58:18 -0400]\t127.0.0.1\t127.0.0.1\t200\t4876\tGET /appQuery?query=monitorServer HTTP/1.0\t273\t-\t-\r\n\r\nFormat:\r\n\r\n    LogFormat in apache config: \"%t   %{X-Forwarded-For}i %a  %>s %D  %r  %B  %{Referer}i %{User-Agent}i\" combined\r\n\r\nGoaccess verion 1.2\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/762/comments",
    "author": "thushan85",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2017-05-07T13:22:25Z",
        "body": "It looks like you have a mix of spaces and tabs delimiting the log. I'd recommend using a consistent format. However, this should do it:\r\n\r\n    goaccess access.log --log-format='[%d:%t %^]\\t~h{\\t}\\t%s\\t%D\\t%m %U %H\\t%b\\t%R\\t%u' --date-format=%d/%b/%Y --time-format=%T"
      }
    ]
  },
  {
    "number": 755,
    "title": "Session expiration when counting unique visitors",
    "created_at": "2017-05-02T22:12:52Z",
    "closed_at": "2017-05-02T22:34:31Z",
    "labels": [
      "question",
      "documentation"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/755",
    "body": "What duration does goaccess consider as 1 session when counting visitors?",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/755/comments",
    "author": "szepeviktor",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2017-05-02T22:26:58Z",
        "body": "HTTP requests containing the same IP, the same date, and the same user agent are considered a unique visitor. There's no concept of session when counting unique visitors."
      },
      {
        "user": "allinurl",
        "created_at": "2017-05-02T22:33:30Z",
        "body": "That's correct. Just note that the hits counter can be more than 2 if there are static files when loading the site."
      },
      {
        "user": "MIvanchev",
        "created_at": "2024-06-14T17:22:31Z",
        "body": "Hey, I just wanna ask, because this is relevant for me right now, would you consider adding support for an option which specifies a timeout separating unique visits? I.e. <n> seconds/minutes/hours between visits triggers a new unique visit."
      },
      {
        "user": "allinurl",
        "created_at": "2024-06-14T17:38:52Z",
        "body": "@MIvanchev #2669 appears to be the same request. What are your thoughts on that?"
      },
      {
        "user": "MIvanchev",
        "created_at": "2024-06-14T23:53:42Z",
        "body": "@allinurl Yes, it appears to be semantically the same, only difference being @jlmenut wanted a longer period and I need a shorter one. IMO there is also a somewhat problematic issue with the current approach if the requests start arriving around midnight. Considering the general interest I'll meditate a bit on your proposed solution and think about how to extend it."
      }
    ]
  },
  {
    "number": 729,
    "title": "How to enable real-time stats starting from today",
    "created_at": "2017-04-10T05:38:07Z",
    "closed_at": "2017-04-10T16:16:01Z",
    "labels": [
      "question",
      "documentation",
      "html report",
      "terminal output",
      "log-processing"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/729",
    "body": "How i can generate live report from today? if i specify `-f access.log`, it will just read from this file, I need something like this:\r\n\r\n    grep \u2014no-filename $(date +\"%d/%b/%Y\") access.log --real-time-html\r\n\r\nis this possible?",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/729/comments",
    "author": "askart",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2017-04-10T15:22:09Z",
        "body": "It is possible if you are using v1.2. You can run something like: \r\n\r\n    tail -f -n +0 /var/log/apache2/access.log | grep `date +\"%d/%b\"` --line-buffered | goaccess --log-format=VCOMBINED -o report.html --real-time-html"
      }
    ]
  },
  {
    "number": 703,
    "title": "goaccess v1.2 does not work at all from a crontab",
    "created_at": "2017-03-27T08:12:40Z",
    "closed_at": "2017-03-27T14:21:04Z",
    "labels": [
      "question",
      "log-processing"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/703",
    "body": "Hi,\r\n\r\nsince v1.2 my crontab dont work at all .\r\n\r\nThe log of the crontab display the help of goaccess instead of dealing with my log file\r\n\r\nhere is my crontab \r\n\r\n    0 1 \t* * *  root /bin/zcat /var/log/nginx/service.log.*.gz |/usr/bin/goaccess -g -a -o /path/to/report.html\r\n\r\nwhen I run that by hand it's working fine.",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/703/comments",
    "author": "foxmask",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2017-03-27T12:11:37Z",
        "body": "Please make sure to use a single dash `-`, e.g.,\r\n\r\n    /bin/zcat /var/log/nginx/service.log.*.gz |/usr/bin/goaccess -g -a -o /path/to/report.html -"
      }
    ]
  },
  {
    "number": 625,
    "title": "How to run two or more real-time-html instances of GoAccess",
    "created_at": "2017-01-16T07:29:41Z",
    "closed_at": "2017-01-17T12:47:53Z",
    "labels": [
      "question",
      "documentation",
      "html report",
      "websocket-server"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/625",
    "body": "Hello. When I run these codes , it runs with no error but it isnt refreshing new coming logs.\r\nWhat is the problem with my config?\r\nFirst:\r\n\r\n    /usr/local/bin/goaccess -f /data/goaccess/log.1 -o /var/www/html/log1.html --real-time-html --ws-url=192.168.1.2 --port=9926\r\nSecond:\r\n\r\n    /usr/local/bin/goaccess -f /data/goaccess/log.2 -o /var/www/html/log2.html --real-time-html --ws-url=192.168.1.2 --port=9927\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/625/comments",
    "author": "fahrettin89",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2017-01-16T16:23:31Z",
        "body": "To run multiple instances, you need to ensure the following:\r\n\r\n1. Run each instance on a different port `--port`.\r\n2. Different pipes (FIFOs) `--fifo-in=/path/in.1 --fifo-out=/path/out.1`.\r\n3. (Optionally) **IFF** you are using the on-disk storage, then you will need different path where the DB files are stored `--db-path=/path/instance1/`.\r\n\r\n**Examples**:\r\n\r\n    goaccess /prod/access.log -o /var/www/html/prod.html --real-time-html --ws-url=192.168.1.2 --port=7890 --fifo-in=/tmp/prod.in --fifo-out=/tmp/prod.out\r\n\r\nAND\r\n\r\n    goaccess /dev/access.log -o /var/www/html/dev.html --real-time-html --ws-url=192.168.1.2 --port=7891 --fifo-in=/tmp/dev.in --fifo-out=/tmp/dev.out\r\n\r\n**Note**:\r\n\r\nIssue #575 reported that `--fifo-out` and `--fifo-in` options were not taking the new params. It has been fixed. "
      },
      {
        "user": "fahrettin89",
        "created_at": "2017-01-17T07:37:25Z",
        "body": "Hello,\r\n\r\nThank you for your help. What do you mean by \"options were not taking new parameters\"? Is \"--port=\" new parameter? On last stable version,I run above commands and it didn't give any error but generated dev.html, it created prod.in and prod.out files with 0 bytes also not refreshing with new coming logs.\r\n\r\nI will build development version and try. And get back to you.\r\n\r\nI also run below command;\r\n\r\n    /usr/local/bin/goaccess -f /data/goaccess/log.1 -o /var/www/html/log1.html --ws-url=192.168.1.2 --port=7891 --html-report-title=Goaccess --ignore-panel=NOT_FOUND --ignore-panel=OS --ignore-panel=REFERRING_SITES --ignore-panel=STATUS_CODES"
      },
      {
        "user": "SeaMonkey82",
        "created_at": "2019-10-28T02:43:31Z",
        "body": "I'm able to run real-time for both of my sites individually, but when I try doing them at the same time using the instructions above, the second one just hangs at 'Parsing. . . [0] [0/s]'. CTRL+C won't stop the process either.\r\n\r\nHere are my commands:\r\n`zcat -f /var/log/apache2/www.site1.access.log.*.gz | goaccess /var/log/apache2/www.site1.access.log -a -d -o /var/www/html/site1.html --real-time-html --ignore-crawlers --ws-url=192.168.0.3 --port=7890 --fifo-in=/tmp/site1.in --fifo-out=/tmp/site1.out`\r\n\r\n`zcat -f /var/log/apache2/www.site2.access.log.*.gz | goaccess /var/log/apache2/www.site2.access.log -a -d -o /var/www/html/site2.html --real-time-html --ignore-crawlers --ws-url=192.168.0.3 --port=7891 --fifo-in=/tmp/site2.in --fifo-out=/tmp/site2.out`"
      },
      {
        "user": "allinurl",
        "created_at": "2019-10-28T13:50:07Z",
        "body": "@SeaMonkey82 I'm guessing you are using the on-disk storage. You will need different path where the DB files are stored `--db-path=/path/instance1/`."
      },
      {
        "user": "SeaMonkey82",
        "created_at": "2019-10-28T16:07:35Z",
        "body": "> @SeaMonkey82 I'm guessing you are using the on-disk storage. \r\n\r\nNope.  Neither in the commands nor the conf file.\r\n\r\n"
      },
      {
        "user": "karlicoss",
        "created_at": "2020-03-17T19:50:13Z",
        "body": "Had same issue while running goaccess (not even `--real-time-html`, just one-off htmls). Seems that it's indeed using on-disk storage, but that's the default (at least in Ubuntu?), so it's not obvious :)\r\nFixed by generating unique tmp dir in the wrapper script and passing to `--db-path` \r\n"
      },
      {
        "user": "allinurl",
        "created_at": "2020-03-17T19:53:25Z",
        "body": "@karlicoss Thanks for sharing that. I'm very close to release the replacement for TC, so hopes this will be easier."
      }
    ]
  },
  {
    "number": 551,
    "title": "goacces cron job not working",
    "created_at": "2016-10-20T17:14:43Z",
    "closed_at": "2016-10-24T13:42:01Z",
    "labels": [
      "question",
      "html report",
      "cron"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/551",
    "body": "Hello! If i run sh manually, output files was created and updated, but from cron job is not. How cat i fix it?\n\nmy `crontab`:\n\n```\n*/5 * * * * /home/monitoring/go_update.sh >> /home/monitoring/crontab.log\n```\n\nmy `go_update.sh`:\n\n```\n#!/bin/sh\necho \"start\"\nnow=$(date +\"%T\")\necho \"Current time : $now\"\nzcat /home/monitoring/logs-store/localway-prod-portal/localway-prod-portal.*.gz | goaccess -p /home/monitoring/.goaccessrc -a\necho \"finish\"\n```\n\n`cat crontab.log`:\n\n```\nstart\nCurrent time : 20:05:01\nfinish\n```\n\npart of `~/.goaccessrc`:\n\n```\noutput-format /home/monitoring/goaccess/index.html\noutput-format /home/monitoring/goaccess/status.json\n```\n\nThanx a lot!\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/551/comments",
    "author": "etomarat",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2016-10-20T17:24:00Z",
        "body": "Can you please try using absolute paths, e.g. (assuming goaccess is under: `/usr/bin`):\n\n```\nzcat /home/monitoring/logs-store/localway-prod-portal/localway-prod-portal.*.gz | /usr/bin/goaccess -p /home/monitoring/.goaccessrc -a\n```\n"
      },
      {
        "user": "allinurl",
        "created_at": "2016-10-20T17:25:05Z",
        "body": "Also, make sure the script is executable. \n\n```\nchmod +x /home/monitoring/go_update.sh\n```\n"
      }
    ]
  },
  {
    "number": 548,
    "title": "Configuring custom log format with milliseconds resolution",
    "created_at": "2016-10-19T12:32:30Z",
    "closed_at": "2016-10-20T01:50:33Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/548",
    "body": "This is configuration in /etc/goaccess.conf:\r\n\r\n```\r\nlog-format %h %^[%d:%t %^] \"%r\" %s %b \"%R\" \"%u\" %^%L\r\ndate-format %d/%b/%Y\r\ntime-format %H:%M:%S\r\n```\r\n\r\n```\r\n10.180.115.175 - 0022222 [17/Oct/2016:06:47:21 +0800] \"GET /hjsdfjsd/test.git/info/refs?service=git-upload-pack HTTP/1.1\" 200 310 \"-\" \"git/1.9.0.msysgit.1\"0.401\r\n10.74.174.126 - - [17/Oct/2016:06:47:21 +0800] \"GET /ghgh/Service.git/info/refs?service=git-upload-pack HTTP/1.1\" 200 1432 \"-\" \"git/2.5.3.windows.1\"0.031\r\n```\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/548/comments",
    "author": "asu126",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2016-10-19T13:33:38Z",
        "body": "This should work:\n\n```\n%h %^[%d:%t %^] \"%r\" %s %b \"%R\" \"%u\"%T\n```\n"
      }
    ]
  },
  {
    "number": 533,
    "title": "Puzzled with custom nginx format",
    "created_at": "2016-10-05T16:24:30Z",
    "closed_at": "2016-10-06T13:29:23Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/533",
    "body": "Hi, I am totally puzzled why I always get \"no valid hits found\"\n\n```\n62.XXX.XXX.XXX - nginxCookie_www=VMgzClZLGttaiR6FAw2BAg==; nginxCookie_session=5deaf50a604c4eb3a651989508a295767d6e5f4a - 05/Oct/2016:06:53:12 +0200 - 200 - \"POST /api/FOO HTTP/1.1\" - \"-\" - \"Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko\" - \"-\"\n```\n\nand as format:\n\n```\n | Log Format - [c] to add/edit format         \n | %h - %^ - %d:%t - %s - %r - %^ - \\\"%u\\\" - %^\n | Date Format - [d] to add/edit format        \n | %d/%b/%Y                                                                              \n | Time Format - [t] to add/edit format        \n | %H:%M:%S %z                                 \n```\n\nI checked and retried and tried and rechecked a lot of variantions on the format strings. Any advice greatly appreciated!\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/533/comments",
    "author": "huehnerhose",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2016-10-05T16:33:42Z",
        "body": "Can I ask you which field is the size of the response (bytes)? or if you can post your web server's log format would be great. Thanks\n"
      },
      {
        "user": "huehnerhose",
        "created_at": "2016-10-06T06:09:49Z",
        "body": "I am afraid I don't have this field. Is it essential for goaccess to analyze the logs? I didn't see it in the documentation as required. (No doubt it would be a \"nice\" bit of information...)\n"
      },
      {
        "user": "allinurl",
        "created_at": "2016-10-06T11:53:57Z",
        "body": "It's not required, but handy :) This should work (feel free to replace `\"%R\"` with `%^` if it's not the referrer):\n\n```\n%h %^ %^ %^ %^ %d:%t %^ %^ %s %^ \"%r\" %^ \"%R\" %^ \"%u\"\n%d/%b/%Y\n%H:%M:%S\n```\n"
      },
      {
        "user": "allinurl",
        "created_at": "2016-10-06T13:29:23Z",
        "body": "Glad that worked \u2014 That's right, you could consider dashes as fields. However, it is possible to do some skipping like moving to the next char such as:\n\n```\n%h %^; %^ %^ %d:%t %^ %^ %s %^ \"%r\" %^ \"%R\" %^ \"%u\"\n```\n\nThat assumes your log format has always a `;` at that position.\n"
      }
    ]
  },
  {
    "number": 493,
    "title": "Invalid line in JSON output",
    "created_at": "2016-08-15T11:40:19Z",
    "closed_at": "2016-08-15T23:36:44Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/493",
    "body": "my JSON outputs have \"Parsing... [102] [0/s]\" in the beginning of the file. Is there anyway to get rid of that.\n(Server Ubuntu 15.04/NGINX)\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/493/comments",
    "author": "mihitha",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2016-08-15T15:03:39Z",
        "body": "Y may use `--no-progress`. You can find the details on the man page.\n"
      }
    ]
  },
  {
    "number": 488,
    "title": "Log format, a headbreaker",
    "created_at": "2016-08-05T13:56:54Z",
    "closed_at": "2016-08-05T14:35:36Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/488",
    "body": "Hi,\n\nGiven the following config:\n`time-format %H:%M:%S %z`\n`date-format %d/%b/%Y`\n`log-format %h %d:%t \"%r\" %s %b %v \"%u\"`\n\nAnd the following log line:\n\n> 81.71.121.51 05/Aug/2016:15:37:28 +0200 \"GET / HTTP/2.0\" 200 1672 mydomain.nl \"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36\"\n\nWhat is wrong with the log format? Not seeing what I've defined wrong here. Using latest stable on debian. It gives me the message \"Nothing valid to process. Verify your date/time/log format.\"\n\nThanks for your effort!\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/488/comments",
    "author": "martijndeb",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2016-08-05T14:22:13Z",
        "body": "Great question. The parser looks for the next character after `%t`, since it's a space, then it cuts of the time before the timezone (e.g., `15:37:28`). Usually you can do this if you have a square bracket or some unique identifier, for example:\n\n```\n81.71.121.51 [05/Aug/2016:15:37:28 +0200]\n```\n\nYou could use `[%d:%t]` and have `%z` in your time-format variable.\n\nIn your case, please try this:\n\n```\nlog-format %h %d:%t %^ \"%r\" %s %b %v \"%u\"\ndate-format %d/%b/%Y\ntime-format %T\n```\n"
      }
    ]
  },
  {
    "number": 479,
    "title": "What's the meaning of \"Processed Time\"?",
    "created_at": "2016-07-26T10:11:31Z",
    "closed_at": "2016-07-27T01:19:42Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/479",
    "body": "Hi,\n   about the html file,what's the meaning of \"Processed Time\"?\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/479/comments",
    "author": "weiboyiyou",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2016-07-26T12:19:56Z",
        "body": "The amount of time it took to parse and process the log.\n"
      }
    ]
  },
  {
    "number": 445,
    "title": "Custom log date and time format for my  log with multiple IPs",
    "created_at": "2016-06-17T17:44:21Z",
    "closed_at": "2016-06-21T18:45:29Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/445",
    "body": "Hi,\ni am unable to parse the log with the format that i have.\nCan you please suggest me the suitable time,log and date format for it.\n\nHere is the log.\n\n```\n[16/Jun/2016:01:59:57 -0400] \"10.210.101.4 115.28.162.132, 60.210.20.244, 10.233.174.212, 50.19.124.104, 10.210.101.4\" \"HTTPS://www.h.com/day/hot/gb/en/res/book?met=rRt&qAt=1&qChd=0&qCiD=21&qCiMy=59886&qCoD=31&qCoMy=553856&qGRM=0&qPSt=0&qRRSrt=rt&qRf=rr&qRmP=K.O.T.X&qRms=1&qRpn=1&qRpp=12&qSHp=1&qSlH=CYPCG&qHtlC=CYPCG&qSmP=3&qSrt=sBR&qWch=0&srb_u=1\" 218 366204 489250 \"-\" \"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/43.0.2357.124 Safari/537.36\" \"Country_Code=geor=47,country_code=CN,region_code=ZJ,city=HANGZHOU,lat=30.26,long=120.17,timezone=GMT+8,continent=AS,throughput=vhigh,bw=2000,asnum=37963,location_id=0\" \"CD480243C97EFEE1C8D398DD14E8A48D\"\n```\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/445/comments",
    "author": "che23",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2016-06-17T19:09:50Z",
        "body": "Can you please describe the log format? Which one would be the client's IP?\n"
      },
      {
        "user": "che23",
        "created_at": "2016-06-20T15:06:29Z",
        "body": "Hi,\n\nBelow is the  log format which I have in my conf file\n\n```\nLogFormat \"%t \\\"%h %{X-FORWARDED-FOR}i\\\" \\\"%{X-IHG-REQUEST-PROTOCOL}i://%{Host}i%U%q\\\" %>s %B %D \\\"%{Referer}i\\\" \\\"%{User-Agent}i\\\" \\\"%{X-AKAMAI-EDGESCAPE}i\\\" \\\"%{JSESSIONID}e\\\" \" accessip\n```\n"
      },
      {
        "user": "allinurl",
        "created_at": "2016-06-20T15:31:38Z",
        "body": "If you are using `%{X-FORWARDED-FOR}` and the amount of IPs on that field varies, then so far you won't be able to parse it. This is on the to-do list and is part of issue  #78.\n\nIf it's a fixed number of IPs, then you you should be able to parse it with the current version of goaccess.\n"
      },
      {
        "user": "che23",
        "created_at": "2016-06-21T17:38:15Z",
        "body": "Hi, \nThe link of IP's as the connection routes through Akamai CDN. Can we at least parse out the first IP? That would be the client IP whereas everything else is just Akamai nodes.\n"
      },
      {
        "user": "allinurl",
        "created_at": "2016-06-21T17:55:53Z",
        "body": "This works:\n\n```\nlog-format [%d:%t %^] \"%h %^\" \"%U\" %s %b %D \"%R\" \"%u\" %^\ndate-format %d/%b/%Y\ntime-format %H:%M:%S\nhttp-protocol no\nhttp-method no\n```\n\nor \n\n```\ngoaccess -f access.log --log-format='[%d:%t %^] \"%h %^\" \"%U\" %s %b %D \"%R\" \"%u\" %^' --date-format='%d/%b/%Y' --time-format='%H:%M:%S' --http-protocol=no --http-method=no\n```\n"
      },
      {
        "user": "che23",
        "created_at": "2016-06-22T17:57:51Z",
        "body": "Hi,\nWill we be able to parse the second IP from that list of ip addresses on the log?\n"
      },
      {
        "user": "allinurl",
        "created_at": "2016-06-22T18:03:00Z",
        "body": "@che23 you can parse any IP as long as there's a fixed number of them. e.g., `\"%^ %h %^\"`\n"
      }
    ]
  },
  {
    "number": 382,
    "title": "Avoiding special run to initialize on-disk store?",
    "created_at": "2016-03-01T15:32:56Z",
    "closed_at": "2016-03-07T14:35:15Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/382",
    "body": "If I understand correctly, right now this is needed for incremental parsing:\n\n```\ngoaccess -f first.log --keep-db-files\n```\n\nFollowed by:\n\n```\ngoaccess -f next.log --load-from-disk --keep-db-files\ngoaccess -f another.log --load-from-disk --keep-db-files\n```\n\nIs there a way to avoid the first invocation, and just have the store initialized if it doesn't exist already?\n\nIf not, is this a reasonable way of initializing the store?\n\n```\ngoaccess -f /dev/null --db-path=/path/to/db  --keep-db-files\n```\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/382/comments",
    "author": "bard",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2016-03-01T16:00:10Z",
        "body": "I'm not sure I follow the use case, however, you should be able to do the following against the `first.log`\n\n```\ngoaccess -f first.log --load-from-disk --keep-db-files\n```\n\nIf you just want to initialize the store, you could run goaccess as you posted above.\n\n```\ngoaccess -f /dev/null --keep-db-files\n```\n\nJust make sure you have a valid date/time/format in your config file so it won't complain about it.\n"
      },
      {
        "user": "bard",
        "created_at": "2016-03-03T19:57:05Z",
        "body": "> I'm not sure I follow the use case, however, you should be able to do the following against the first.log\n> \n> ```\n> goaccess -f first.log --load-from-disk --keep-db-files\n> ```\n\nWith `first.log` I meant to say that this would be the first time that goaccess is run, so db files wouldn't exist, and if I understand the man page correctly, they need to exist before goaccess can be invoked with `--load-from-disk`, no?\n\n```\n       --load-from-disk\n              Load previously stored data from disk. Database files need to exist. See keep-db-files.\n```\n"
      },
      {
        "user": "allinurl",
        "created_at": "2016-03-03T20:03:56Z",
        "body": "You can run goaccess for the first with `--load-from-disk`. e.g.,\n\n```\ngoaccess -f first.log --load-from-disk --keep-db-files\n```\n\nIn fact, you can run goaccess as:\n\n```\ngoaccess -f first.log\n```\n\nIt will create the database files even if they don't exist. Passing `--load-from-disk` for the first time, it's like a no-op.\n"
      }
    ]
  },
  {
    "number": 309,
    "title": "Configuring and compiling GoAccess on FreeBSD 10.1",
    "created_at": "2015-10-04T13:00:23Z",
    "closed_at": "2015-10-04T19:40:34Z",
    "labels": [
      "question",
      "build"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/309",
    "body": "Hello guys. I am running Freebsd 10.1. I am trying to compile Goaccess with geoIp support.\nWhen I do the configure with geoIP I get:\n\n```\nchecking for GeoIP_new in -lGeoIP... no\nconfigure: error: *** Missing development files for the GeoIP library\n```\n\nI have the geoip port installed (net/GeoIP)\n\n```\nroot@e5-2620v3x2:/tmp/goaccess-0.9.4 # /usr/local/bin/geoiplookup -f /usr/local/share/GeoIP/GeoLiteCity.dat 8.8.8.8\nGeoIP City Edition, Rev 1: US, CA, California, Mountain View, 94040, 37.386002, -122.083801, 807, 650\n```\n\nCan someone please tell me how to make it work with geoip ?\nIf I install the goaccess port from freebsd it's version 0.8.5 and it doesn't have geoip support\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/309/comments",
    "author": "dorin21id",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2015-10-04T14:58:34Z",
        "body": "Try the following:\n\n```\n# pkg install GeoIP glib pkgconf\n# /usr/local/bin/geoipupdate.sh\n# setenv LDFLAGS -L/usr/local/lib\n# ./configure --enable-geoip\n# make\n# make install\n```\n"
      },
      {
        "user": "allinurl",
        "created_at": "2015-10-04T19:15:27Z",
        "body": "Just configured and compiled in FreeBSD 10.1 and the steps above worked fine.\n"
      },
      {
        "user": "dorin21id",
        "created_at": "2015-10-04T19:30:10Z",
        "body": "Damn it. Still the same :( \n\n```\n[root@e5-2620v3x2 /tmp/goaccess-0.9.4]# /usr/local/bin/geoipupdate.sh\nFetching GeoIP.dat and GeoIPv6.dat...\n/usr/local/share/GeoIP/GeoIPupdate.4KwoRT/GeoI100% of  441 kB  840 kBps 00m01s\n/usr/local/share/GeoIP/GeoIPupdate.pPQiNn/GeoI100% of  712 kB  836 kBps 00m01s\n[root@e5-2620v3x2 /tmp/goaccess-0.9.4]# set env LDFLAGS -L/usr/local/lib\n[root@e5-2620v3x2 /tmp/goaccess-0.9.4]# ./configure --enable-geoip\nchecking for a BSD-compatible install... /usr/bin/install -c\nchecking whether build environment is sane... yes \nchecking for a thread-safe mkdir -p... ./install-sh -c -d\nchecking for gawk... no\nchecking for mawk... no\nchecking for nawk... nawk\nchecking whether make sets $(MAKE)... yes \nchecking for gcc... no\nchecking for cc... cc\nchecking whether the C compiler works... yes \nchecking for C compiler default output file name... a.out\nchecking for suffix of executables...\nchecking whether we are cross compiling... no\nchecking for suffix of object files... o\nchecking whether we are using the GNU C compiler... yes \nchecking whether cc accepts -g... yes \nchecking for cc option to accept ISO C89... none needed\nchecking for style of include used by make... GNU \nchecking dependency style of cc... gcc3\nchecking whether cc understands -c and -o together... yes \nchecking for pthread_create in -lpthread... yes \nchecking build system type... x86_64-unknown-freebsd10.1\nchecking host system type... x86_64-unknown-freebsd10.1\nchecking whether to build with rdynamic for GNU ld... yes \nchecking for GeoIP_new in -lGeoIP... no\nconfigure: error: *** Missing development files for the GeoIP library\n[root@e5-2620v3x2 /tmp/goaccess-0.9.4]#\n```\n"
      },
      {
        "user": "allinurl",
        "created_at": "2015-10-04T19:33:33Z",
        "body": "Make sure is `setenv LDFLAGS -L/usr/local/lib` and not `set env...`\n"
      }
    ]
  },
  {
    "number": 308,
    "title": "Nothing valid to process: something wrong with my logformat?",
    "created_at": "2015-10-02T21:34:08Z",
    "closed_at": "2015-10-02T22:02:40Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/308",
    "body": "Hi,\n\nI am trying the following line with these settings, but keep receiving the \"Nothing valid to process\" error. I am probably overlooking something.\n\n**Settings:**\n\n```\ntime-format %T\ndate-format %d/%b/%Y\nlog-format %v %h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-agent}i\"\n```\n\n**Log excerpt:**\n\n```\nhostname.com 66.249.64.111 - - [02/Oct/2015:23:32:07 +0200] \"GET /some/obscured/path.jpg HTTP/1.1\" 200 31476 \"-\" \"Googlebot-Image/1.0\"\n```\n\nWould really appreciate some help. Thanks in advance!\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/308/comments",
    "author": "arondeparon",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2015-10-02T21:38:26Z",
        "body": "It looks like it's a \"NCSA Combined Log Format with Virtual Host\". The following should work:\n\n```\nlog-format %^ %h %^[%d:%t %^] \"%r\" %s %b \"%R\" \"%u\"\ndate-format %d/%b/%Y\ntime-format %H:%M:%S\n```\n\nLet me know how it goes!\n"
      },
      {
        "user": "arondeparon",
        "created_at": "2015-10-02T22:02:40Z",
        "body": "Thanks! I managed to get it working now, with a slight tweak:\n\n```\nlog-format %v %h %^[%d:%t %^] \"%r\" %s %b \"%R\" \"%u\"\n```\n"
      }
    ]
  },
  {
    "number": 249,
    "title": "pattern matching ",
    "created_at": "2015-05-12T10:21:39Z",
    "closed_at": "2015-05-16T18:56:32Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/249",
    "body": "I am having logs of all servers on logentries and when I try to open it with goaccess it gives me wrong statistics. I want goaccess pattern for logentries log.\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/249/comments",
    "author": "aakash21",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2015-05-12T16:36:20Z",
        "body": "Can you please elaborate more about this? What results are you getting and what's supposed to look like? Thanks\n"
      },
      {
        "user": "aakash21",
        "created_at": "2015-05-12T19:05:49Z",
        "body": "i have all my nginx logs downloaded from logentries of my production server and now i am trying to analyse the stats with goaccess but it shows value of total requests and failed requests equal. The result must be different.So i want the log format so that i can get my stats right.\n"
      },
      {
        "user": "allinurl",
        "created_at": "2015-05-12T20:08:28Z",
        "body": "Can you post a few lines from your access log as well as the log and date format from your goaccess config file?\n"
      },
      {
        "user": "aakash21",
        "created_at": "2015-05-13T04:19:40Z",
        "body": "```\n<14>1 2015-05-12T05:04:05.814315Z ip-10-0-1-170 Nginx-Access-Log - - - hostname=XXXXXX appname=Nginx-Access-Log 10.0.1.248 - - [12/May/2015:10:34:05 +0530] \"GET /rest/getShowsList?start=0&limit=15 HTTP/1.1\" 200 5653 \"-\" \"Dalvik/1.6.0 (Linux; U; Android 4.4.4; GT-I9060I Build/KTU84P)\"\n<14>1 2015-05-12T05:04:05.814339Z ip-10-0-1-170 Nginx-Access-Log - - - hostname=XXXXX appname=Nginx-Access-Log 10.0.1.248 - - [12/May/2015:10:34:05 +0530] \"GET /rest/getexclusivedevicestatus HTTP/1.1\" 200 55 \"-\" \"Dalvik/1.6.0 (Linux; U; Android 4.4.3; D5322 Build/19.1.1.C.0.56)\"\n```\n\nthese are logs from the logentries. \nthis are formats which i have used  but can not get results.\n\n```\nlog-format \"%h %l %u %t \\\"%r\\\" %>s %b\"\nlog-format %h %^[%d:%t %^] \"%r\" %s %b \"%R\" \"%u\"\n```\n"
      },
      {
        "user": "allinurl",
        "created_at": "2015-05-15T03:33:16Z",
        "body": "Using goaccess >= v0.9:\n\n```\nlog-date %d/%b/%Y\nlog-time %H:%M:%S\nlog-format %^ %^ %^ %^ %^ %^ %^ %^ %^ %h %^[%d:%t %^] \"%r\" %s %b \"%R\" \"%u\"\n```\n\nRun goaccess as:\n\n```\ngoaccess -f access.log -p /path/to/goaccess.conf\n```\n"
      }
    ]
  },
  {
    "number": 208,
    "title": "Log format config help",
    "created_at": "2015-01-21T00:06:36Z",
    "closed_at": "2015-01-21T04:13:45Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/208",
    "body": "I'm just playing with goaccess for a simple home server that I have, but I can't seem to get the log format configuration to recognize my log.  I'm using gunicorn behind an nginx proxy, which forwards the real IP ahead.  A sample entry in my log (the first IP is always 127.0.0.1 as that is nginx forwarding the request to gunicorn):\n\ngunicorn log format: \n\n```\n%(h)s %(l)s %(u)s %(t)s \u201c%(r)s\u201d %(s)s %(b)s \u201c%(f)s\u201d \u201c%(a)s\u201d \"%({X-Real-IP}i)s\"\n```\n\n```\n127.0.0.1 - - [16/Jan/2015:14:30:15 -0800] \"GET /bars/ HTTP/1.0\" 200 2660 \"-\" \"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.99 Safari/537.36\" \"192.168.1.100\"\n```\n\n> %^ %^ %^ [%d:%^] \"%r\" %s %b %^ \"%u\" \"%h\"\n\nThat is the formatting I came up with, but it goaccess can't find any entries.  Any ideas?\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/208/comments",
    "author": "bwainstock",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2015-01-21T00:45:32Z",
        "body": "Barry, the following should do it:\n\n```\nlog-format %^[%d:%^] \"%r\" %s %b \"%R\" \"%u\" \"%h\"\ndate-format %d/%b/%Y\n```\n\nLet me know how that goes. Thanks\n"
      },
      {
        "user": "allinurl",
        "created_at": "2015-01-21T01:21:58Z",
        "body": "It does parse the sample log you posted above. Are you using v0.8.5? This is how I ran it:\n\n```\ngoaccess -f log --log-format='%^[%d:%^] \"%r\" %s %b \"%R\" \"%u\" \"%h\"' --date-format='%d/%b/%Y'\n```\n"
      }
    ]
  },
  {
    "number": 5,
    "title": "can't parse custom logs",
    "created_at": "2013-08-05T21:06:50Z",
    "closed_at": "2013-08-07T13:22:10Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/5",
    "body": "I'm trying to get goaccess working. Already take some time on docs and examples but without success.\n\nBasically i have log lines like:\n\n```\n10031488_71334 xpto.domain.com 88.103.999.999 - - [16/Jun/2013:15:03:26 +0000] \"GET / HTTP/1.1\" 500 5624 \"-\" \"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:12.0) Gecko/20100101 Firefox/12.0\" -\n```\n\nand already compile goaccess and create a conf file:\n\n```\ncat ~/.goaccessrc\ndate_format %d/%b/%Y:%T %z\nlog_format %^ %^ %h - - [$d] \"%r\" %s %b \"%R\" \"%u\" %^\n```\n\nThen i got:\n\n```\n./goaccess -a -f miniout.log\nGoAccess - version 0.6 - Aug  5 2013 20:20:16\nAn error has occurred\nError occured at: goaccess.c - render_screens - 358\nMessage: Nothing valid to process.\n```\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/5/comments",
    "author": "abgit",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2013-08-05T21:31:03Z",
        "body": "The following should do it. Just make sure you have a valid IP. (88.103.999.999 won't let you parse the log)\n\nlog_format %^ %^ %h %^[%d:%^] \"%r\" %s %b \"%R\" \"%u\"\ndate_format %d/%b/%Y\n"
      },
      {
        "user": "abgit",
        "created_at": "2013-08-05T21:44:25Z",
        "body": "Now it works as expected. Thanks.\n- about valid ip: 88.103.999.999 was just a obuscation. valid ip's are always used;\n- btw, if ip is not valid, goaccess aborts parsing or just ignores log entry with invalid ip?\n- just an idea that can be usefull to others: this log format is the one used by rackspace. because you have amazon-couldfront log format option in log format configuration wizard, maybe you could add this rackspace-akamai format too :)\n"
      },
      {
        "user": "allinurl",
        "created_at": "2013-08-05T21:48:09Z",
        "body": "@abgit goaccess will ignore the entry and take it as an invalid request. \nI can add the Rackspace format too, do you know if they have some documentation about this that I can refer to?\n"
      },
      {
        "user": "abgit",
        "created_at": "2013-08-06T08:59:44Z",
        "body": "I don't find docs about log format but i know that rackspace has 2 log formats because i'm using their services from some time.\n- rackspace loadbalancers log:\n  10031488_71334 xpto.domain.com 88.103.999.999 - - [16/Jun/2013:15:03:26 +0000] \"GET / HTTP/1.1\" 500 5624 \"-\" \"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:12.0) Gecko/20100101 Firefox/12.0\" 10.201.201.5:80\n- rackspace cdn log:\n  5.3.56.7 - - [18/Jun/2013:19:50:09 +0000] \"GET /1123123a07d61231233a-8d685f5f11665a311231230a1cc93333.r66.cf6.rackcdn.com/ HTTP/1.1\" 404 363 \"-\" \"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:12.0) Gecko/20100101 Firefox/12.0\" \"-\"\n\nBalancer log format preprends balancerid and domain and at end adds internal httpserver node ip and port, rackspace cdn sounds like standard format.\n"
      },
      {
        "user": "allinurl",
        "created_at": "2013-08-07T13:16:45Z",
        "body": "Seems like the CDN can be parsed using the NCSA Combined Log Format. I'll add the Load Balancer format to the predefined options.\n"
      }
    ]
  }
]