[
  {
    "number": 2539,
    "title": "[QUESTION] - Starting a new project using LiteDB",
    "created_at": "2024-09-06T12:42:29Z",
    "closed_at": "2024-09-14T11:25:25Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/2539",
    "body": "Hello @mbdavid,\r\n\r\nIt's been some years that I had some interesting talks with you. Last time, you shared to me about faturin, remember? Well, maybe not, you're a very busy guy and this was quite long ago, but it's ok, understandable.\r\n\r\nStill, I'm coming back to you for one very important question:\r\n\r\n\"I'm planning to start a new project of my own (again), using LiteDB (again). What do you say about that?\"\r\n\r\nI'm asking this for one reason: you mentioned that the future of LiteDB is uncertain AND you're not sure if LiteDB will be maintained in the long term.\r\n\r\nPlease advise!\r\n\r\n(Enquanto isso, vamos vivendo, eu continuo morando no Vietnã, como estão as coisas aí no Brasil?)\r\n\r\nBest!\r\n@rmszc",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/2539/comments",
    "author": "rmszc81",
    "comments": [
      {
        "user": "marss72",
        "created_at": "2024-09-08T16:42:49Z",
        "body": "LiteDB got some new maintainers, including @JKamsker and @pictos. This does not mean @mbdavid stopped maintaining this project completely (I hope so). This is a great project and will probably not be discontinued without any severe reason.\r\n\r\n_If it ever gets discontinued, I'm sure someone will fork this repository and continue maintaining this project, making at least security updates and bug fixes._"
      },
      {
        "user": "rmszc81",
        "created_at": "2024-09-09T05:58:31Z",
        "body": "hello @marss72, @JKamsker, @pictos, @mbdavid,\r\n\r\nOk, I got the point, but still, the idea is to start a new commercial project.\r\n\r\nMy concern is that, after some months, LiteDB will just become one of the many archived projects in github.\r\n\r\nThat's all.\r\n\r\nThanks for quick response.\r\n\r\nBest!"
      },
      {
        "user": "pictos",
        "created_at": "2024-09-13T21:56:59Z",
        "body": "@rmszc81 we don't have plans to archive this project... In fact our plans is to move it to a org, right now the project is under Mauricio's personal account, and expand to have tools and extensions on this org.\r\n\r\nKeep in mind that we do it for free, so things will not be at the speed that users want. Right now, I know that Mauricios is busy with some personal and work tasks, so it will take a while until the public can see our progress.\r\n\r\nThat said, you can use Litedb on your project! "
      },
      {
        "user": "rmszc81",
        "created_at": "2024-09-14T11:25:25Z",
        "body": "Hello (boa tarde) @pictos,\r\nThank you very much for making it clear.\r\n(obrigado por esclarecer).\r\n\r\nBest!\r\n(Forte abraço!)\r\n@rmszc81 "
      },
      {
        "user": "pictos",
        "created_at": "2024-09-14T13:11:45Z",
        "body": "No worries @rmszc81, glad that I could help (:"
      }
    ]
  },
  {
    "number": 2516,
    "title": "[QUESTION] Save :memory: to disk?",
    "created_at": "2024-07-01T19:22:56Z",
    "closed_at": "2024-07-07T09:09:16Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/2516",
    "body": "My desire is to use LiteDB as an in-memory DB so that I may have the advantage in performance. However when my app shuts down I would like to save. Then when the app starts, reload from disk and operate in memory from there.\r\n\r\nI am using the latest v5.\r\n\r\nI feel like there is a simple way to do this. I just can't seem to find an explicit example.\r\n\r\nCould you provide some guidance on how to achieve this?",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/2516/comments",
    "author": "lxman",
    "comments": [
      {
        "user": "JKamsker",
        "created_at": "2024-07-02T09:29:14Z",
        "body": "You can use memorystream and save that to disk."
      },
      {
        "user": "lxman",
        "created_at": "2024-07-07T09:09:16Z",
        "body": "Thank you! That works."
      }
    ]
  },
  {
    "number": 2445,
    "title": "[QUESTION] Should I keep the DB open during continuous INSERT operations?",
    "created_at": "2024-03-09T09:51:21Z",
    "closed_at": "2024-11-21T01:23:42Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/2445",
    "body": "My application requires to continuously add data to a Collection, one time per second, for a theoretically infinite amount of time.\r\n\r\nEach insertion is made by calling my method `DatabaseOperations:Add()`. Internally, it performs the following operations:\r\n\r\n```\r\npublic class DatabaseOperations\r\n{\r\n  private LiteDatabase db;\r\n\r\n  public void Add(SessionItem session, DataItem item) \r\n  {\r\n    // 1: Get one item from a \"Session\" collection\r\n    var collection = db.GetCollection<SessionItem>();\r\n    var session = collection.Query().Where(s => s.Id == session.SourceDbId).FirstOrDefault();\r\n    \r\n    // 2: Get the Records collection (where the new data will be added)\r\n    var records = db.GetCollection<DataItem>();\r\n    item.Session = session; // assign the parent session to the item\r\n    records.Insert(item);\r\n  }\r\n}\r\n```\r\n\r\nYou see, `db` is the reference to the database and it is initialized at startup like this:\r\n\r\n`this.db = new LiteDatabase(this.GetDbPath());`\r\n\r\nMeaning, the referenced DB is always \"open\" during app lifecycle.\r\nConsidering that I will call Add() in a loop, one time per second, is it the correct way? Or should I discard the global reference and do this:\r\n\r\n```\r\n  public void Add(SessionItem session, DataItem item) \r\n  {\r\n      using (var db = new LiteDatabase(this.GetDbPath()))  // use a local reference\r\n      {\r\n        // 1: Get one item from a \"Session\" collection\r\n        var collection = db.GetCollection<SessionItem>();\r\n        var session = collection.Query().Where(s => s.Id == session.SourceDbId).FirstOrDefault();\r\n        \r\n        // 2: Get the Records collection (where the new data will be added)\r\n        var records = db.GetCollection<DataItem>();\r\n        item.Session = session; // assign the parent session to the item\r\n        records.Insert(item);\r\n    }\r\n  }\r\n```\r\n\r\nMy only concern is that, this way, I will perform open/close operations at every iteration... isn't it too I/O intensive?",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/2445/comments",
    "author": "alessandrofrancesconi",
    "comments": [
      {
        "user": "Joy-less",
        "created_at": "2024-11-21T01:23:42Z",
        "body": "It's up to you. I would personally use the second approach (create and dispose a new connection for every query) since global references to a LiteDB connection prevent the engine from cleaning up the log file. There isn't a large performance impact to this approach (to my knowledge). If creating a new connection for each query, ensure you are using the `Shared` connection mode.\r\n\r\nClosing due to the age of this issue, please re-open if you still have questions."
      }
    ]
  },
  {
    "number": 2431,
    "title": "[QUESTION] How to encrypt existing database file?",
    "created_at": "2024-02-20T14:13:42Z",
    "closed_at": "2024-02-20T22:47:56Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/2431",
    "body": "If .NET app has already created a database file without a password, is it possible to add a password and encrypt the database file?\r\nI've tried to add a password to a connection string and it didn't work for me.",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/2431/comments",
    "author": "oblomingo",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2024-02-20T22:47:56Z",
        "body": "Hi @oblomingo,\r\n\r\nYou can use Rebuild command with a new password. After rebuild, you need add in your connection string your new password"
      }
    ]
  },
  {
    "number": 2350,
    "title": "[QUESTION] Export CRUD statements?",
    "created_at": "2023-07-27T16:02:00Z",
    "closed_at": "2024-06-06T04:54:28Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/2350",
    "body": "Is it possible to save CRUD statements as a string, json or something else, for then to execute the actual command, maybe using .Execute(), on another machine?\r\n\r\nI've been tinkering with the idea of building a server that handles the actual database and for clients to send commands and get updates from the server.\r\n\r\nMy idea was to have all clients export their CRUD statements as a string, json or something else, send it to the server which then does the actual processing and later update the clients with a status message.\r\n\r\nI'm completely new to networking projects like these, but the above is the gist of what I want to do. I'm looking into NetworkStream and Sockets in general.\r\n\r\nSo my question is, besides being able to export/save CRUD statements, if there would be a better way to expose the database to several clients at once?",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/2350/comments",
    "author": "Amplificator",
    "comments": [
      {
        "user": "JKamsker",
        "created_at": "2024-06-06T04:54:29Z",
        "body": "Originally, this seems to be the plan; it would be possible. You can give it SQL strings, and it returns a serializable BSON document.\r\n\r\nBut actually hooking it up to a wire protocol... well, I am sure you can do that without changing anything in LiteDB itself."
      }
    ]
  },
  {
    "number": 2338,
    "title": "[QUESTION] AOT Compilation support for .NET 7.0+ and newer",
    "created_at": "2023-07-04T14:10:22Z",
    "closed_at": "2023-07-05T19:14:05Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/2338",
    "body": "At the moment, AOT compilation is not supported for LiteDB (Linq expressions not support compilation in AOT builds, and reflections, as I understand it, are not supported).\r\nDo you plan to somehow launch AOT support at least at an experimental level?",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/2338/comments",
    "author": "GiaNTizmO",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2023-07-04T17:20:14Z",
        "body": "Hi @GiaNTizmO,\r\n\r\nCurrent v5.x will have no more major updates, only security issues. I'm working in months on new version with no LINQ expression needs for BsonExpression resolution. Also, Reflection used in LiteDB do not use \"Emit\" to generate code. So, I think when this new version came out will be possible compile in AOT support.\r\n "
      },
      {
        "user": "GiaNTizmO",
        "created_at": "2023-07-05T19:14:05Z",
        "body": "> Hi @GiaNTizmO,\r\n> \r\n> Current v5.x will have no more major updates, only security issues. I'm working in months on new version with no LINQ expression needs for BsonExpression resolution. Also, Reflection used in LiteDB do not use \"Emit\" to generate code. So, I think when this new version came out will be possible compile in AOT support.\r\n\r\nOkay. Thank you and all contributors for this awesome db!"
      },
      {
        "user": "Pulse-Git",
        "created_at": "2023-07-15T18:36:53Z",
        "body": "@mbdavid is there any ETA planned?"
      },
      {
        "user": "mbdavid",
        "created_at": "2023-07-17T15:15:16Z",
        "body": "Hi @Pulse-Git, my plans is release first beta Set/1..... and my goal is realase final in Oct/30 (my birthday present 😄)"
      },
      {
        "user": "vvolkgang",
        "created_at": "2024-01-29T13:59:08Z",
        "body": "@mbdavid hey! 👋🏾 Any recent developments on the AOT front? "
      },
      {
        "user": "WCKYWCKF",
        "created_at": "2024-07-23T21:23:03Z",
        "body": "@mbdavid Hey! How's the AOT progressing?"
      }
    ]
  },
  {
    "number": 2319,
    "title": "[QUESTION] Cannot delete using predicate",
    "created_at": "2023-05-06T00:46:45Z",
    "closed_at": "2023-05-08T20:14:48Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/2319",
    "body": "Tried to search issues and other people seem to have this working but I cannot.\r\n\r\n```\r\npublic void DeletePackage(string identifier)\r\n{\r\n    var db = _database.GetCollection<ExtensionManifest>(\"packages\");\r\n    db.Delete(x => x.Identifier == identifier)\r\n}\r\n```\r\n\r\nError is\r\n```\r\nCS1660\tCannot convert lambda expression to type 'BsonValue' because it is not a delegate type\r\n```",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/2319/comments",
    "author": "timheuer",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2023-05-08T19:19:11Z",
        "body": "Hi @timheuer,\r\n\r\n`Delete` method must be used with an `BsonValue` (accepts only `_id` value).\r\n\r\nIf you don't know the `_id` you can try `DeleteMany` with an expression (your expression is a valid expression).\r\n\r\nTip: if you have too many documents in this collection or query/delete/update by this identifier, create an index on this field and you will not loose performance..\r\n"
      },
      {
        "user": "timheuer",
        "created_at": "2023-05-08T20:14:48Z",
        "body": "This is excellent @mbdavid thank you."
      }
    ]
  },
  {
    "number": 2174,
    "title": "Memory allocation",
    "created_at": "2022-04-25T12:24:19Z",
    "closed_at": "2022-04-28T11:34:39Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/2174",
    "body": "For the sake of interest, I decided to test the creation of a connection to the database. Tell me, why does it take so much memory? Creating a connection should consume as few resources as possible (for example, EF Core). In this case, a very strong load on the GC is obtained.\r\n\r\nCode:\r\n```\r\n    [Benchmark]\r\n    public void LiteDatabase()\r\n    {\r\n        using var db = new LiteDatabase(@\"MyData1.db\");\r\n    }\r\n    \r\n    [Benchmark]\r\n    public void LiteRepository()\r\n    {\r\n        using var db = new LiteRepository(@\"MyData1.db\");\r\n    }\r\n```\r\n\r\nResult:\r\n\r\n```\r\n|         Method |     Mean |   Error |  StdDev |   Gen 0 |   Gen 1 |   Gen 2 | Allocated |\r\n|--------------- |---------:|--------:|--------:|--------:|--------:|--------:|----------:|\r\n|   LiteDatabase | 337.0 us | 5.64 us | 5.00 us | 30.7617 | 30.7617 | 30.7617 |    120 KB |\r\n| LiteRepository | 334.0 us | 3.35 us | 2.79 us | 30.7617 | 30.7617 | 30.7617 |    120 KB |\r\n```\r\n",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/2174/comments",
    "author": "FoxTes",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2022-04-25T13:47:55Z",
        "body": "Hi @FoxTes,\r\n\r\nWhen you create a new `LiteDatabase` instance (or `LiteRepository`, because `LiteRepository` is only a pattern over `LiteDatabase`) initialize an initial memory allocation with 80K for page cache. This memory allocation grows according new page reads (take a look on `MemoryCache.cs`).\r\n\r\nI agree that connections should consume few resource (like in EF Core), but `LiteDabase` is the database engine (not only the connection).\r\n\r\nThanks for your review and tests, I'm re-writing database engine to be more memory efficient in next version and possible use EF Core as data provider."
      },
      {
        "user": "FoxTes",
        "created_at": "2022-04-25T14:02:43Z",
        "body": "Thank you for the detailed answer.\r\n\r\nI was just unpleasantly surprised when I decided to use this library. In the standard approach, the life of the \"context\" should be as small as possible and every time we create it (from the latest optimizations, the use of `dbContextPool`). In the case of your library, the re-creation loads GC very heavily.\r\n\r\nPS. I'm waiting for integration with EF."
      }
    ]
  },
  {
    "number": 2060,
    "title": "How to map constructor using fluent mapping",
    "created_at": "2021-08-23T11:42:00Z",
    "closed_at": "2021-09-13T15:06:25Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/2060",
    "body": "Hi there,\r\n\r\nFirst I want to say that I've searched for a solution, but didn't found one. So, I'm having some difficulty to map a constructor using the fluent mapping. For example, I have a class, \"User\", it have a constructor with 2 parameters, something like `User(string username, ProfileRole profileRole)`. How can I map it using the fluent mapping?",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/2060/comments",
    "author": "nunonux",
    "comments": [
      {
        "user": "lbnascimento",
        "created_at": "2021-09-09T18:00:34Z",
        "body": "@nunonux You could do something like this:\r\n\r\n```C#\r\nBsonMapper.Global.Entity<Sample>().Ctor(x => new User(x[\"Username\"], BsonMapper.Global.Deserialize<ProfileRole>(x[\"ProfileRole\"])));\r\n```\r\n\r\nThe constructor mapping is only meant for simple cases (e.g. using the construtor that takes an `int` and a `string` instead of the parameterless constructor). If you need to pass complex types and enums to the constructor, it's probably best to create custom serializer and deserializer with `BsonMapper.Global.RegisterType<T>(...)`."
      },
      {
        "user": "nunonux",
        "created_at": "2021-09-13T15:06:24Z",
        "body": "Thanks for the reply. \r\nThis worked for me. "
      }
    ]
  },
  {
    "number": 2054,
    "title": "[QUESTION] FIND/QUERY throw exception",
    "created_at": "2021-08-11T11:02:49Z",
    "closed_at": "2021-08-11T13:46:52Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/2054",
    "body": "I'm a begginer in C#. Just started using LiteDB in one of my project.\r\n\r\nMy class:\r\n```\r\n  public class KeyValueObject\r\n    {\r\n        [BsonId]\r\n        public ObjectId id;\r\n        public string keyName;\r\n        public object dataValue;\r\n        public long lastUpdated;\r\n    }\r\n```\r\nI'm inserting document. It's working fine.\r\n```\r\n        public void Store(string name, object value)\r\n        {\r\n            Console.WriteLine(Collection().Insert(new KeyValueObject { keyName = name,  dataValue = value }).ToString());\r\n        }\r\n```\r\n\r\nI've a problem here, coll.Find thows exception \"Member keyName not found on BsonMapper for type LocalDBStoreLibrary.KeyValueObject.\"\r\n```\r\n   public KeyValueObject Find(string name)\r\n        {\r\n            var coll = Collection();\r\n            var res = coll.FindOne(x => x.keyName == name);\r\n            if (res != null)\r\n                return (KeyValueObject)res;\r\n            else\r\n                return null;\r\n        }\r\n```\r\n\r\nWhat am I missing? How do I solve it?",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/2054/comments",
    "author": "valvenetbabu",
    "comments": [
      {
        "user": "lbnascimento",
        "created_at": "2021-08-11T13:09:18Z",
        "body": "@valvenetbabu By default, the LiteDB mapper only serializes properties. If you want it to store fields too, you must run `BsonMapper.Global.IncludeFields = true`."
      },
      {
        "user": "valvenetbabu",
        "created_at": "2021-08-11T13:49:06Z",
        "body": "@lbnascimento  Thank you. That was it, now it's ok. "
      }
    ]
  },
  {
    "number": 2044,
    "title": "[QUESTION] does LiteDB support C# 9 record?",
    "created_at": "2021-07-29T13:55:19Z",
    "closed_at": "2021-07-30T13:13:49Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/2044",
    "body": "C#9 records are finally the immutable type that we needed in C#.\r\nSince it's syntax is game changing, does refit supports serializing/deserializing such objects ?",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/2044/comments",
    "author": "roubachof",
    "comments": [
      {
        "user": "lbnascimento",
        "created_at": "2021-07-29T14:11:38Z",
        "body": "@roubachof Given that records are merely syntatic sugar and are implemented using regular objects, the LiteDB mapper shouldn't have any issues serializing them. If you find a bug or weird behavior, you can open an issue."
      },
      {
        "user": "roubachof",
        "created_at": "2022-06-01T08:50:00Z",
        "body": "To follow-up this question. \r\n**WARNING** LiteDB has a **limited** C# 9 record support.\r\nIt doesn't support primary contructors, so you will have to type this:\r\n\r\n```csharp\r\npublic record TourInfo()\r\n{\r\n    public int Id { get; init; }\r\n    public Sector? Sector { get; init; }\r\n    public Collector Collector { get; init; }\r\n    public TourState TourState { get; init; }\r\n    public string? Name { get; init; }\r\n    public DateTime Date { get; init; }\r\n    public List<int> SortedCollectionIdList { get; init; }\r\n}\r\n```\r\n\r\ninstead of this:\r\n\r\n```csharp\r\npublic record TourInfo(\r\n        int Id,\r\n        Sector? Sector,\r\n        Collector Collector,\r\n        TourState TourState,\r\n        string? Name,\r\n        DateTime Date,\r\n        List<int> SortedCollectionIdList);\r\n```"
      }
    ]
  },
  {
    "number": 2034,
    "title": "[QUESTION] ODBC Support?",
    "created_at": "2021-07-19T08:52:48Z",
    "closed_at": "2021-07-29T20:59:57Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/2034",
    "body": "I am really into the project but I need to possibility to use ODBC interface cause other apps are using this database. I saw there was a question here #830 but was closed without a answer.",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/2034/comments",
    "author": "lgund",
    "comments": [
      {
        "user": "lbnascimento",
        "created_at": "2021-07-27T17:36:34Z",
        "body": "@lgund LiteDB does not support ODBC and currently there are no plans to support it. Personally, I don't think it makes much sense in the context of an embedded document store."
      }
    ]
  },
  {
    "number": 2030,
    "title": "[QUESTION] how to update array field only?",
    "created_at": "2021-07-15T10:21:04Z",
    "closed_at": "2021-07-26T17:57:28Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/2030",
    "body": "{\r\n    \"name\": \"John\",\r\n    \"age\": 13,\r\n    \"items\":[1,2,3]\r\n}\r\ndb.Execute($\"update collection set items=???? where _id = {myid}\").\r\n\r\nand any way to append data to items ?\r\neg: db.Execute($\"update collection set items.append(?????) where _id = {myid}\").",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/2030/comments",
    "author": "xibaoning",
    "comments": [
      {
        "user": "lbnascimento",
        "created_at": "2021-07-15T14:10:58Z",
        "body": "@xibaoning This should work: `update collection set items = CONCAT(items, [4,5,6]) where _id = {myid}`."
      }
    ]
  },
  {
    "number": 2022,
    "title": "[QUESTION] How to delete an entry from a collection and update the database?",
    "created_at": "2021-07-04T08:16:46Z",
    "closed_at": "2021-07-19T07:53:58Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/2022",
    "body": "Current code:\r\n\r\n```csharp\r\n/// <summary>\r\n/// Remove entries that are not present in ids\r\n/// </summary>\r\npublic static List<ulong> Trim(List<ulong> ids)\r\n{\r\n    using (var db = new LiteDatabase($\"{AppContext.BaseDirectory}Data.db\"))\r\n    {\r\n        // Get collection\r\n        var col = db.GetCollection<LilyraUser>(\"lilyrausers\");\r\n        // Get list of users\r\n        var users = col.FindAll();\r\n\r\n        // Create return list\r\n        var deleted = new List<ulong>();\r\n        // Foreach user in the database..\r\n        foreach (var user in users)\r\n        {\r\n            // If the user id isn't present in \"ids\"\r\n            if (!ids.Contains(user.Id))\r\n            {\r\n                // Delete\r\n                deleted.Add(user.Id);\r\n                col.Delete(user.Id);\r\n            }\r\n        }\r\n\r\n        // Return deleted ids;\r\n        return deleted;\r\n    };\r\n}\r\n```\r\n\r\nNo matter how many times i run the function, it keeps returning 30 entries (in my use case).\r\nSo I can only assume they're not actually being deleted.\r\n\r\nEdit: I think I know why, it's updating the collection variable but it's not actually updating the database itself, not sure how to do that though.\r\n\r\nAm I doing something wrong?\r\nThank you.",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/2022/comments",
    "author": "NotAkitake",
    "comments": [
      {
        "user": "lbnascimento",
        "created_at": "2021-07-07T18:12:39Z",
        "body": "@Akitakek By any chance, are the ids of these 30 remaining entries greater than `long.MaxValue` (9223372036854775807)?"
      },
      {
        "user": "NotAkitake",
        "created_at": "2021-07-07T18:23:58Z",
        "body": "```\r\n180574360459935745, 191169158807814144, 207358761671720960, 223736077788119040, 242683787882790912, 285890131955548160, 320530192709844992, 364501380762959872, 376141189415436289, 394299162834763777, 425740125717397515, 496752341857468416, 539820622121795635, 617752993441382464, 632494262931423242, 639233686574858278, 670483337713811476, 692316673096679465, 704735068068905031, 726141314177171506, 740791396901978242, 764339672356225064, 771708394591354922, 807434479332229153, 814518777026445336, 816723378072977490, 834820140923093032, 853321652200013846, 855706831970893834, 858834073962545183\r\n```\r\n\r\nThese are the IDs it's trying to delete but can't.\r\nSo I guess the response to that is no, because they're one less digit than the max."
      },
      {
        "user": "lbnascimento",
        "created_at": "2021-07-08T13:54:43Z",
        "body": "@Akitakek LiteDB does not natively suport `UInt64`, but it supports `Int64` and `Double`. What is happening is that C# is implicitly casting the id to `Double` when you call `col.Delete(...)`, and apparently `Double` is losing precision at such magnitudes (just try `Convert.ToDouble(180574360459935745).ToString(\"N0\")` and you'll see it becomes 180574360459936000). Why C# is opting to implicitly cast it to `Double` instead of `Int64` is beyond me.\r\n\r\nThe easiest fix would be to simply change your id field to `Int64` (given that's how LiteDB will store your `UInt64` anyway). If that is not possible, you must be careful to always explicitly cast your `UInt64` to `Int64` when using any method that takes a `BsonValue` as id."
      },
      {
        "user": "NotAkitake",
        "created_at": "2021-07-11T14:35:39Z",
        "body": "> \r\n> \r\n> @Akitakek LiteDB does not natively suport `UInt64`, but it supports `Int64` and `Double`. What is happening is that C# is implicitly casting the id to `Double` when you call `col.Delete(...)`, and apparently `Double` is losing precision at such magnitudes (just try `Convert.ToDouble(180574360459935745).ToString(\"N0\")` and you'll see it becomes 180574360459936000). Why C# is opting to implicitly cast it to `Double` instead of `Int64` is beyond me.\r\n> \r\n> The easiest fix would be to simply change your id field to `Int64` (given that's how LiteDB will store your `UInt64` anyway). If that is not possible, you must be careful to always explicitly cast your `UInt64` to `Int64` when using any method that takes a `BsonValue` as id.\r\n\r\nBut how come that it works for essentially everything else I've used it for with litedb, just not col.Delete(), doesn't make much sense to me?\r\nI'll try the casting in this function at least, and see if that fixes it and report on it."
      },
      {
        "user": "NotAkitake",
        "created_at": "2021-07-19T07:53:51Z",
        "body": "Coming back to it now, seems like that was indeed the issue.\r\n\r\nThat said this issue only seems to be a problem when trying to delete, the rest of the time it's perfectly fine."
      }
    ]
  },
  {
    "number": 1970,
    "title": "How to add DbRef on BsonDocument [QUESTION]",
    "created_at": "2021-03-28T19:53:11Z",
    "closed_at": "2021-04-05T18:40:40Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1970",
    "body": "### I am trying to achive the following\r\n\r\n```\r\nclass Child{\r\n   public string Id {get;set;}\r\n  \r\n  [DbRef]\r\n  public string Parent Parent {get;set;}\r\n}\r\n```\r\n\r\nusing BsonDocument\r\n\r\n```\r\n var doc = new BsonDocument();\r\ndoc.Add(\"Parent\", new Parent()); //how to make it dbref instead of normal object\r\n?\r\n```",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1970/comments",
    "author": "ahmed-hararaa",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2021-03-31T17:52:42Z",
        "body": "Hi @maxvodoo, if you use `DbRef` you should use your own `Child` class with mapping (using `BsonMapper`). Use `LiteDatabase` to get `GetCollection<Child>()`\r\n\r\nIf you want use `BsonDocument` you need implement this reference:\r\n\r\n`doc.Add(\"Parent\", new BsonDocument { [\"$id\"] = idParent, [\"$ref\"] = \"parent_collection_name\" });`\r\n"
      }
    ]
  },
  {
    "number": 1965,
    "title": "[QUESTION] How use Index of Array?",
    "created_at": "2021-03-22T19:10:57Z",
    "closed_at": "2021-05-27T15:13:57Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1965",
    "body": "I have data:\r\nShop1\r\n{\r\n\"_id\" : 1,\r\n\"products\":\r\n[\r\n{\r\n\"name\":phone,\r\n\"params\":[\"black\",\"small\",\"Germany\"]\r\n},\r\n{\r\n\"name\":tablet\r\n\"params\":[\"blue\",\"big\",\"China\"]\r\n},\r\n{\r\n\"name\":apple\r\n\"params\":[\"red\",\"big\",\"Sweet\"]\r\n}\r\n]\r\n}\r\nShop2\r\n{\r\n\"_id\" : 2,\r\n\"products\":\r\n[\r\n{\r\n\"name\":phone,\r\n\"params\":[\"green\",\"small\",\"France\"]\r\n},\r\n{\r\n\"name\":book\r\n\"params\":[\"red\",\"big\",\"China\"]\r\n},\r\n{\r\n\"name\":pumpkin\r\n\"params\":[\"yellow\",\"big\",\"Sweet\"]\r\n}\r\n]\r\n}\r\n\r\nI made index: col.EnsureIndex(\"Index\", \"$.products[*].params\"); It look like: MAP($.products[*]=>@.params).\r\nHow can i use index in query?\r\nSelect $ From DBname WHERE $.products[*].params ANY Like 'red' => return 2 results but \r\nSelect $ From DBname WHERE Index ANY Like 'red' => return 0 result",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1965/comments",
    "author": "tivial19",
    "comments": [
      {
        "user": "lbnascimento",
        "created_at": "2021-04-07T13:40:08Z",
        "body": "@tivial19 It is not possible to use indexes explicitly. They are used internally to speed up certain queries."
      }
    ]
  },
  {
    "number": 1963,
    "title": "[QUESTION]How get not root items filtered by many parameters in Array?",
    "created_at": "2021-03-20T16:42:07Z",
    "closed_at": "2021-03-22T16:22:47Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1963",
    "body": "For example there is some shops and they have some products. Every product have array of string parameters.\r\nHow can i select products by some product parameters? All params must be in one product.\r\n\r\nShop1\r\n{\r\n\"_id\" : 1,\r\n\"products\":\r\n[\r\n{\r\n\"name\":phone,\r\n\"params\":[\"black\",\"small\",\"Germany\"]\r\n},\r\n{\r\n\"name\":tablet\r\n\"params\":[\"blue\",\"big\",\"China\"]\r\n},\r\n{\r\n\"name\":apple\r\n\"params\":[\"red\",\"big\",\"Sweet\"]\r\n}\r\n]\r\n}\r\nShop2\r\n{\r\n\"_id\" : 2,\r\n\"products\":\r\n[\r\n{\r\n\"name\":phone,\r\n\"params\":[\"green\",\"small\",\"France\"]\r\n},\r\n{\r\n\"name\":book\r\n\"params\":[\"red\",\"big\",\"China\"]\r\n},\r\n{\r\n\"name\":pumpkin\r\n\"params\":[\"yellow\",\"big\",\"Sweet\"]\r\n}\r\n]\r\n}\r\n\r\nOne shop is one BsonDocument. I make like this:\r\n\r\nstring CMD=\"SELECT products FROM DBname WHERE  COUNT(products[params any like 'red' and params any like 'sweet']) > 0\";\r\nusing (var db = new LiteDatabase(DBname))\r\n{\r\n    var result = db.Execute(CMD).ToArray();\r\n}\r\n\r\nThe result is ALL products from shop1 (in shop1 there is red and sweet apple), but i want to get only  like 'red' and like 'sweet' products. This is only one apple.\r\nHow can i get select products by my filter? ",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1963/comments",
    "author": "tivial19",
    "comments": [
      {
        "user": "lbnascimento",
        "created_at": "2021-03-22T13:21:03Z",
        "body": "@tivial19 Try this: `SELECT products[params any like 'red' and params any like 'sweet'] FROM DBname WHERE COUNT(products[params any like 'red' and params any like 'sweet']) > 0`\r\n\r\nYou can actually omit the `WHERE` clause, but then you'll apply the `products[params any like 'red' and params any like 'sweet']` projection for every product, even the ones that don't match the predicate, and you'll end up with a lot of empty arrays."
      },
      {
        "user": "tivial19",
        "created_at": "2021-03-22T16:21:14Z",
        "body": "lbnascimento, I find another way without empty arrays:  SELECT *.products[params any like 'red' and params any like 'sweet'] FROM DBname;\r\nIt will return one BsonDocument with one key and one value as BsonArray of products. \r\nThe same is\r\nusing (var db = new LiteDatabase(DBname))\r\n{\r\n   var Qq = db.GetCollection(ColName).Query().\r\n   Select(BsonExpression.Create(\"*.products[params any like 'red' and params any like 'sweet']\")).ToArray();\r\n }\r\nIt will return Array of BsonDocuments of products. "
      }
    ]
  },
  {
    "number": 1948,
    "title": "[QUESTION] How get items filtered by many parameters in Array?",
    "created_at": "2021-02-28T21:33:57Z",
    "closed_at": "2021-03-01T19:15:28Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1948",
    "body": "For example there is some shops and they have some products. Every product have array of string parameters.\r\nHow can i selection shops by product parameters? All params must be in one product.\r\n\r\nShop1\r\n{\r\n\t\"_id\" : 1,\r\n\t\"products\":\r\n\t[\r\n\t\t{\r\n\t\t\"name\":phone,\r\n\t\t\"params\":[\"black\",\"small\",\"Germany\"]\r\n\t\t},\r\n\t\t{\r\n\t\t\"name\":tablet \r\n\t\t\"params\":[\"blue\",\"big\",\"China\"]\t\r\n\t\t},\r\n\t\t{\r\n\t\t\"name\":apple \r\n\t\t\"params\":[\"red\",\"big\",\"Sweet\"]\r\n\t\t}\r\n\t]\r\n}\r\nShop2\r\n{\r\n\t\"_id\" : 2,\r\n\t\"products\":\r\n\t[\r\n\t\t{\r\n\t\t\"name\":phone,\r\n\t\t\"params\":[\"green\",\"small\",\"France\"]\r\n\t\t},\r\n\t\t{\r\n\t\t\"name\":book \r\n\t\t\"params\":[\"red\",\"big\",\"China\"]\t\r\n\t\t},\r\n\t\t{\r\n\t\t\"name\":pumpkin \r\n\t\t\"params\":[\"yellow\",\"big\",\"Sweet\"]\r\n\t\t}\r\n\t]\r\n}\t\t\r\n\r\n\r\n\r\nOne shop is one BsonDocument. I make like this:\t\r\n\t\r\nusing (var db = new LiteDatabase(DBname))\r\n{\r\n\tstring Query=products[*].params[*] ANY LIKE('red') AND products[*].params[*] ANY LIKE('sweet');\r\n\tdb.GetCollection(Name).Find(BsonExpression.Create(Query)));\r\n}\t\t\r\n\r\nI get result Shop1 and Shop2.\r\nIn shop 1 red and sweet is apple. in shop 2 red is book, sweet is pumpkin.\r\nBUT I want get only Shop1 with apple, where all params is in one product.\r\nSomething like this:\r\n\r\nstring Query=products[*].params[*] ANY (LIKE('red') AND LIKE('sweet'));\t",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1948/comments",
    "author": "tivial19",
    "comments": [
      {
        "user": "lbnascimento",
        "created_at": "2021-03-01T13:58:29Z",
        "body": "@tivial19 The following expression should work:\r\n\r\n`COUNT($.products[@.params any like 'red' and @.params any like 'sweet']) > 0`"
      },
      {
        "user": "tivial19",
        "created_at": "2021-03-01T16:02:36Z",
        "body": "Leonardo Nascimento, yes it work. Thank you very much for help."
      }
    ]
  },
  {
    "number": 1946,
    "title": "Signed [BsonId]",
    "created_at": "2021-02-25T11:35:13Z",
    "closed_at": "2021-02-25T21:13:10Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1946",
    "body": "Even though I aim to ensure the Key property hashes the Id property on my entity object, I witness different Id values coming in and out of the DB. Is `BsonId` ignored upon insert even in a blank DB or why are there multiple entities with the same Key and different Ids ?\r\n\r\n\r\n```\r\n        #region Member\r\n        [BsonId]\r\n        public long Id { get; set; }\r\n\r\n        [BsonField]\r\n        public string Key { get; set; }\r\n```\r\n\r\n\r\nAnd the ctor : \r\n\r\n\r\n\r\n```\r\n        public ctor(string key) : this()\r\n        {\r\n            Id = key.GetHashCode();\r\n\r\n            Key = key;\r\n```",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1946/comments",
    "author": "sigmarsson",
    "comments": [
      {
        "user": "lbnascimento",
        "created_at": "2021-02-25T13:18:55Z",
        "body": "@sigmarsson I could not reproduce the issue. What OS, runtime and LiteDB version are you running? Are you sure that there isn't a piece of code somewhere that overwrites `Id`? Are you able to reproduce this in a simple test case or it only happens in your application?"
      },
      {
        "user": "sigmarsson",
        "created_at": "2021-02-25T21:13:10Z",
        "body": "#@K there is bug in the library in this context. .GetHashCode() has fooled me. This is not a real hash function on a string I am sure. \r\n\r\n`**Id = key.GetHashCode();**`\r\n\r\nIt yields miscellaneous values for the same string. "
      }
    ]
  },
  {
    "number": 1941,
    "title": "int Upsert(IEnumerable<T> entities);",
    "created_at": "2021-02-23T10:49:22Z",
    "closed_at": "2021-02-24T14:38:02Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1941",
    "body": "Hi, \r\n\r\nShall this method return the number of records either inserted or updated successfully ? \r\nI detect a 0 return value meanwhile a record updated. ",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1941/comments",
    "author": "sigmarsson",
    "comments": [
      {
        "user": "lbnascimento",
        "created_at": "2021-02-23T17:17:02Z",
        "body": "@sigmarsson The `int Upsert(...)` overload returns the number of _inserted_ records. So, if it returned 0, it means that all of the records in the `IEnumerable<T>` were updated and none needed to be inserted."
      },
      {
        "user": "sigmarsson",
        "created_at": "2021-02-24T14:38:02Z",
        "body": "Cool. ic. & no negative values. you throw ex in case of problems. "
      }
    ]
  },
  {
    "number": 1875,
    "title": "How to query by GUID field",
    "created_at": "2020-11-17T08:28:50Z",
    "closed_at": "2020-11-18T02:19:04Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1875",
    "body": "For example\r\n\r\npublic class Test\r\n{\r\n  public Guid Key {get; set;}\r\n}\r\n\r\nTest test = new Test() { Key = new Guid(\"1eb2c168-ea2c-4692-b492-1309671c093a\") }\r\n\r\nI've tried to query the collection using the expression $.Key = '1eb2c168-ea2c-4692-b492-1309671c093a' but this returns no records.\r\n\r\nIs there a special syntax required to query GUID columns?\r\n\r\nThanks\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1875/comments",
    "author": "ghost",
    "comments": [
      {
        "user": "lbnascimento",
        "created_at": "2020-11-17T17:11:19Z",
        "body": "@sysmirror `$.Key = GUID('1eb2c168-ea2c-4692-b492-1309671c093b')` should work."
      },
      {
        "user": "ghost",
        "created_at": "2020-11-18T02:19:04Z",
        "body": "> @sysmirror `$.Key = GUID('1eb2c168-ea2c-4692-b492-1309671c093b')` should work.\r\n\r\nThat worked. Thanks\r\n\r\n"
      }
    ]
  },
  {
    "number": 1842,
    "title": "[QUESTION] How do you DeleteMany efficiently",
    "created_at": "2020-10-12T21:17:59Z",
    "closed_at": "2020-10-13T16:32:09Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1842",
    "body": "I've looked through the documentation and there is a lot of information about querying and indexes to query things efficiently, but I don't see a lot of information about deleting things efficiently.\r\n\r\nI'm trying to DeleteMany from a LiteDb database, but even relatively small deletes of 3000 items takes 10-20 seconds. Right now I am just experimenting with smaller data sets, but I plan to scale things up to much larger data sets, but I'm concerned that if the performance scales as well, then some of my deletion operations may take 30 minutes or more.\r\n\r\nI'm trying to make a generic database implementation using LiteDB, and below is the code that I'm using for deleting from the database\r\n\r\n```csharp\r\npublic void Delete<T>(IEnumerable<T> items)\r\n{\r\n    //Gets the collection name based on type. Will throw an exception if we don't support the type used.\r\n    var collectionName = getCollectionNameAndThrowIfNotSupported<T>();\r\n    //Gets the connection string. We are only specifying Filename, ReadOnly, and the Connection is shared\r\n    var connectionString = getConnectionString(read_only: false);\r\n    using (var db = new LiteDatabase(connectionString))\r\n    {\r\n        var collectionExists = db.CollectionExists(collectionName);\r\n        if (!collectionExists)\r\n            return; //no collection exists, so there is nothing to delete\r\n\r\n        //converting items to a hash set to help find matches more quickly\r\n        var hashedItems = items.ToHashSet();\r\n\r\n        var collection = db.GetCollection<T>(collectionName);\r\n        //This is the line that I have the most questions about. Is there a better way of writing this line to be more efficient?\r\n        collection.DeleteMany(x => hashedItems.Contains(x));\r\n    }\r\n}\r\n``` \r\n\r\nI thought that `Contains` would check if the items are equal, and for my objects that are being stored in LiteDb I am overriding `Equals` and `GetHashCode` and for two items to be equal I am only checking if the `ObjectId`s are equal.\r\n\r\nFrom the documentation it would appear that if you have an `ObjectId Id` that this will automatically get indexed, but am I missing something in my `DeleteMany` predicate that would help take advantage of indexes? Is there something that can be done to make this process faster?",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1842/comments",
    "author": "trockefeller-pathway",
    "comments": [
      {
        "user": "lbnascimento",
        "created_at": "2020-10-13T14:59:25Z",
        "body": "@trockefeller-pathway Basically, what `DeleteMany` does is to run a query to get the id of all documents that match the predicate and, after that, it deletes these documents by their ids. What is actually happening is that `x => hashedItems.Contains(x)` is being converted into a `BsonExpression`, which involves serializing all the items in `hashedItems`, and executed for every document in the query. So, not very efficient.\r\n\r\nDeleting by id is always faster. Given your situation, I believe the fastest way to delete many documents would be something like this (assuming your class has an Id field):\r\n```C#\r\ndb.BeginTrans();\r\nforeach(var item in items)\r\n{\r\n\tcollection.Delete(BsonMapper.Global.Serialize(item)[\"_id\"]);\r\n}\r\ndb.Commit();\r\n```"
      },
      {
        "user": "trockefeller-pathway",
        "created_at": "2020-10-13T15:20:14Z",
        "body": "@lbnascimento in my LiteDb objects I have a `public ObjectId Id { get; }` property. I don't explicitly have a private _id field. Do I need to explicitly create this field, or does it automatically get created because of my public Id property?"
      },
      {
        "user": "trockefeller-pathway",
        "created_at": "2020-10-13T15:32:23Z",
        "body": "@lbnascimento I was able to test the code you suggested, and it did work to delete the items I was needing to, and it was at least 100x faster than how I was doing it previously. Thank you."
      },
      {
        "user": "lbnascimento",
        "created_at": "2020-10-13T15:37:33Z",
        "body": "@trockefeller-pathway The id property in your object always becomes \"_id\" in the mapped `BsonDocument`, which is why I used it after the `BsonMapper.Serialize<T>(T obj)` call. I did this because your method is generic, so you can't simply do something like `collection.Delete(item.Id)`.\r\n\r\nThere are other ways to solve your problem, of course. You could get the Id field by reflection, but that's exactly what `BsonMapper` does. You could also make all of your data classes implement an interface that has a public property Id, which would allow you to use `collection.Delete(item.Id)`, but I think it would be over-engineering and it would only work if you own all of your data classes."
      }
    ]
  },
  {
    "number": 1840,
    "title": "How can I increase document size limit",
    "created_at": "2020-10-10T06:09:08Z",
    "closed_at": "2020-11-23T15:30:16Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1840",
    "body": "I want to increase the document size limit to 4MB.\r\nI am thinking of forking the project and changing settings.\r\nWhere should I remove the limitation of 1MB for document size",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1840/comments",
    "author": "VarunSaiTeja",
    "comments": [
      {
        "user": "lbnascimento",
        "created_at": "2020-10-13T13:54:04Z",
        "body": "@VarunSaiTeja The current version of LiteDB supports documents up to 16MB after BSON serialization."
      }
    ]
  },
  {
    "number": 1836,
    "title": "[QUESTION] Best practices when using Xamarin.Forms",
    "created_at": "2020-10-08T10:36:27Z",
    "closed_at": "2020-10-08T19:31:18Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1836",
    "body": "Hey guys. I would be grateful if someone can provide a small guide hot to use LiteDB v 5 in Xamarin.Forms - cause with the implementation i have now - i see that my db is not being disposed and the log file grows. All articles out there on the web are about v 4, so it would be cool to know how to add litedb v 5 to a xamarin app correctly. I can share my current implementation. Thanks in advance!",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1836/comments",
    "author": "themronion",
    "comments": [
      {
        "user": "lbnascimento",
        "created_at": "2020-10-08T19:31:18Z",
        "body": "Duplicate of #1837, closed."
      }
    ]
  },
  {
    "number": 1835,
    "title": "I think LiteDB should join the .Net Foundation, what do you think?",
    "created_at": "2020-10-07T17:21:46Z",
    "closed_at": "2020-10-08T06:20:11Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1835",
    "body": "@mbdavid Have you considered joining the .Net Foundation?",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1835/comments",
    "author": "maikebing",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2020-10-07T23:40:31Z",
        "body": "Hi @maikebing, I totaly agree. I will try to submit LiteDB to .NET Foundation.... will be great to be part of this. \r\n\r\nLast year I tried to be MVP but LiteDB project/community was not enougth for MVP 🤕 "
      },
      {
        "user": "maikebing",
        "created_at": "2020-10-08T01:58:01Z",
        "body": "I think LiteDB is a very good project. I hope it can join as soon as possible. "
      }
    ]
  },
  {
    "number": 1831,
    "title": "[QUESTION] Beginner - Trying to find obtain a value from LiteDB",
    "created_at": "2020-09-27T10:30:47Z",
    "closed_at": "2020-09-29T13:07:20Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1831",
    "body": "Hello\r\nIt is my first time using LiteDB and I am stuck. I am trying to read an int from my LiteDB.\r\n\r\n`var iLatestID = MainDB_Coll.FindOne(Query.All(\"iID\", 1));`\r\n`if (iLatestID == null)`\r\n`{`\r\n`    MessageBox.Show(\"NULL\");`\r\n`    DatabaseTemplate.iID = 1;`\r\n`}`\r\n`else`\r\n`{`\r\n`    MessageBox.Show(int.Parse(iLatestID.ToString()).ToString()); //PROBLEM`\r\n`    DatabaseTemplate.iID = int.Parse(iLatestID.ToString()) + 1;`\r\n`}`\r\n\r\nSeems like `int.Parse(iLatestID.ToString()).ToString()` returns a false string...\r\nWhy ?? :/ :/\r\n\r\nThank you for your time",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1831/comments",
    "author": "PeterMay",
    "comments": [
      {
        "user": "lbnascimento",
        "created_at": "2020-09-28T13:54:49Z",
        "body": "@Gavenatore I didn't understand exactly what your issue is, but I see a few things wrong with your code. You're assuming that `FindOne(expr)` returns an int, or an string that can be parsed to an int, which is not true. It returns an entire document, either mapped back to your original C# class if you're using a \"typed\" `LiteCollection`, or a `BsonDocument` if you're not using a \"typed\" `LiteCollection`.\r\n\r\nI could help you further if you better explained your issue and if you explained what you're trying to achieve."
      },
      {
        "user": "PeterMay",
        "created_at": "2020-09-28T15:15:03Z",
        "body": "Oh I am sorry. My bad...\r\nTo put it simply. I have successful created a \"typed\" LiteCollection with 2 \"columns\". \r\n\r\niID and sName.\r\nThen I added 3 records.\r\n\r\n1st record: 0 George\r\n2nd record: 1 Paul\r\n3rd record: 2 Mary\r\n\r\nI want to read from the last record, the iID."
      },
      {
        "user": "lbnascimento",
        "created_at": "2020-09-28T15:28:57Z",
        "body": "@Gavenatore If you're using a typed `LiteCollection<T>`, `FindOne(expr)` returns an object of type `T`. So, you access its fields just like you would on a regular C# object."
      },
      {
        "user": "PeterMay",
        "created_at": "2020-09-28T16:17:59Z",
        "body": "Huh, it was much simpler than I thought.\r\nSorry for the novice question thread and thank you for your time."
      }
    ]
  },
  {
    "number": 1828,
    "title": "About running the test.",
    "created_at": "2020-09-23T11:57:38Z",
    "closed_at": "2020-09-30T09:37:01Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1828",
    "body": "I want to test some examples in LiteDB/LiteDB.Tests/Engine to  understand part of the underlying calls of litedb.\r\nSo how to generate an exe file that uses the examples in LiteDB/LiteDB.Tests/Engine to debug step by step to view the call,instead of a dll file？\r\nThanks.",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1828/comments",
    "author": "weishuo2",
    "comments": [
      {
        "user": "toumir",
        "created_at": "2020-09-23T13:16:18Z",
        "body": "@weishuo2  clone the LiteDB project to you computer, add it to your project and reference it, that all, you can now debug the LiteDB step by step "
      }
    ]
  },
  {
    "number": 1820,
    "title": "Can't delete a specific document in V4.1.4",
    "created_at": "2020-09-16T21:40:22Z",
    "closed_at": "2020-09-17T17:07:31Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1820",
    "body": "I have a collection with several documents I can't delete using Collection.Delete whether I delete by bson id or query.\r\n\r\nFor these certain documents I get KeyNotFoundException errors.\r\n\r\nI also tried deleting these documents from LiteDB.Shell.exe and LiteDB Viewer, get the same error and it crashes the tools.\r\n\r\nThese same documents are returned in queries and otherwise behave like normal object documents.\r\n\r\nI can somewhat work around it but would really like to delete them.\r\n\r\nI'm looking for a recommendation on a quick work around.\r\n\r\nI suppose I could exclude select these documents drop and copy the good docs to a new instance of the collection. But would not want to have to do that all the time or codify it. \r\n\r\nNote: I just downgraded to V4 to eliminate file locking issues from a network file share in V5. In V5 after upgrading the db file from V4, I had no problems deleting these same documents using DeleteMany in V5.",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1820/comments",
    "author": "chucksullivancvs",
    "comments": [
      {
        "user": "lbnascimento",
        "created_at": "2020-09-17T13:57:09Z",
        "body": "@chucksullivancvs You could try running `db.Shrink()`. Also, I would like for you to send me this data file if possible (if it's not too big and doesn't contain sensitive information, of course)."
      },
      {
        "user": "chucksullivancvs",
        "created_at": "2020-09-17T15:57:41Z",
        "body": "@lbnascimento - thx Leonardo. That worked. I did a db.Shrink first from LiteDB.Shell.exe and that fixed the KeyNotFoundException because I was then able to delete the items. I added a db.Shrink to my delete method so hopefully that will mitigate the issue going forward. \r\n\r\nAs usual, thanks for the quick and meaningful response. LiteDB is a great, simple to use component for when a client-server db is not practical. It is serving me well. Keep up the good work guys, it is much appreciated.\r\n"
      }
    ]
  },
  {
    "number": 1817,
    "title": "File in use issues in V5",
    "created_at": "2020-09-15T15:52:57Z",
    "closed_at": "2020-09-17T17:07:49Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1817",
    "body": "I am using LiteDB in a simple desktop app that uses 2 shared db files on an EMC Isilon (CIFS and NFS) file share.\r\n\r\nI upgraded to V5 recently, largely to use LiteDB Studio and for a couple of features like DeleteMany.\r\n\r\nNow my users are continually getting transient \"file in use\" errors trying the read or update the files. Error msgs include.\r\n\r\n\"The process cannot access the file .. because it is being used by another process\"\r\n\"Access to the path is denied\"\r\n\r\nAll LiteDB access is done inside Using blocks. I do a db.Commit() after each transaction.\r\n\r\nI  open/connected to  the file in LiteDB Studio and queried it using Direct mode. When I disconnect I got the \"Access to the path is denied\" error. Next time I tried in Shared mode and got the access denied just trying to connect to file.\r\n\r\nThe locked condition seems to persist for an indeterminant period of time even when no one accesses the file.\r\n\r\nHas anyone seen this behavior and/or have a way to work around it?\r\n\r\nI am having a hard time determining if is enviornmental or something I am doing wrong.\r\n\r\nI never saw this in the same environment in 18 months of using LiteDB V4.",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1817/comments",
    "author": "chucksullivancvs",
    "comments": [
      {
        "user": "chucksullivancvs",
        "created_at": "2020-09-15T16:42:51Z",
        "body": "Also, I notice that a file with the same name as the data.db file with \"-log.db\" appended to it. If I rename or delete the -log file the file lock seems to clear. I understand this to be the temp transaction file and should be cleaned up automatically which apparently is not happening.\r\n\r\nWould it be \"safe\" to check for and delete this file as a mitigation? Or might that cause more problems than it solves?\r\n"
      },
      {
        "user": "lbnascimento",
        "created_at": "2020-09-16T14:31:50Z",
        "body": "@chucksullivancvs LiteDB v5.0.x does not support network shares. This is because the Shared mode uses an OS-wide mutex to synchronize file access, which obviously doesn't work over the network. v4 used file locks, which are implemented by network file systems, but it has problems of its own.\r\n\r\nI suggest you stay at v4 until we release v5.1, which will use lock files to synchronize file access and, therefore, should work with network shares."
      },
      {
        "user": "chucksullivancvs",
        "created_at": "2020-09-16T20:38:18Z",
        "body": "@lbnascimento - thx. i gone ahead and downgraded to 4.1.4. was pretty easy. just had to get rid ofthe Commit() and rewrite the DeleteMany. So far so good on that. new issue though I will post seperately"
      }
    ]
  },
  {
    "number": 1814,
    "title": "[QUESTION] Updating Sub document",
    "created_at": "2020-09-09T17:17:19Z",
    "closed_at": "2020-09-22T17:13:50Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1814",
    "body": "Is there a way to update or add a sub object without getting the whole array?\r\nOr do you need to put everything in separate collections? And make simple objects? I may have thousands of objects in the array, and if I add or remove one of them, I don't want to get all",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1814/comments",
    "author": "Avatarchik",
    "comments": [
      {
        "user": "lbnascimento",
        "created_at": "2020-09-09T18:05:13Z",
        "body": "@Avatarchik If you have large arrays and intend to frequently include and remove objects from it, it is recommended to store these objects in their own collection, keeping only a reference in the original object."
      }
    ]
  },
  {
    "number": 1812,
    "title": "What is the position of a page when it is on disk?",
    "created_at": "2020-09-08T09:27:14Z",
    "closed_at": "2020-09-09T01:17:45Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1812",
    "body": "I noticed that in BasepPage, page is uniquely identified by pageID. When I close the created database, the data will be written to the SSD as files. So when I open it next time, how is the data loaded into a page again? In other words, after these pages are placed on the SSD, what is used to identify their location (to read it from SSD to memory next time)?\r\nCould you tell me the answer or relevant code file names?",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1812/comments",
    "author": "weishuo2",
    "comments": [
      {
        "user": "lbnascimento",
        "created_at": "2020-09-08T15:01:00Z",
        "body": "@weishuo2 For v5, pages are 8192-byte chunks in the data file, so they can be identified by their position. Page 0 will be at bytes 0-8191, page 1 at 8192-16383 and so on.\r\n\r\nUnless your data file is encrypted, then bytes 0-8191 are for internal usage and the actual (encrypted) datafile starts at byte 8192."
      }
    ]
  },
  {
    "number": 1811,
    "title": "[QUESTION] Does connection string support links?",
    "created_at": "2020-09-07T14:23:56Z",
    "closed_at": "2020-09-09T12:09:09Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1811",
    "body": "What if I prefer to store my db file in a cloud, how should I provide connection string if possible?",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1811/comments",
    "author": "a-a-k",
    "comments": [
      {
        "user": "lbnascimento",
        "created_at": "2020-09-08T14:10:30Z",
        "body": "@a-a-k This is currently not supported. LiteDB only supports local files."
      }
    ]
  },
  {
    "number": 1808,
    "title": "Saving and loading dictionary",
    "created_at": "2020-09-05T16:23:41Z",
    "closed_at": "2020-09-08T14:00:02Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1808",
    "body": "I am trying to store a complete Dictionary and retrieve it, but on loading I get pair of [null,0]\r\n\r\n```\r\nConcurrentDictionary<string, short> Tags = new ConcurrentDictionary<string, short>();\r\nTags.TryAdd(\"test\", 1);\r\n//save\r\nusing (var db = new LiteDatabase(path))\r\n{\r\n\tvar tagsList = Tags.ToList();\r\n\tdb.DropCollection(\"Tags\");\r\n\tvar dbCollection = db.GetCollection<KeyValuePair<string, short>>(\"Tags\");\t\r\n\tdbCollection.Insert(tagsList); //Tried also dbCollection.InsertBulk(tagsList);\r\n\tdbCollection.EnsureIndex(x => x.Key);\r\n}\r\n//load\r\nTags.Clear();\r\nusing (var db = new LiteDatabase(path))\r\n{\r\n\tvar dbCollection = db.GetCollection<KeyValuePair<string, short>>(\"Tags\");\r\n\tvar tagslist = dbCollection.FindAll().ToList();\r\n\tforeach (var t in tagslist) // (int i=0; i< tagslist.Count(); i++)\r\n\t{\r\n\t\tTags.TryAdd(t.Key, t.Value);\r\n\t}\t\r\n}\r\n\r\n```",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1808/comments",
    "author": "milos12345",
    "comments": [
      {
        "user": "lbnascimento",
        "created_at": "2020-09-08T14:00:02Z",
        "body": "@milos12345 This issue has been fixed in the master and its fix will be present in the next incremental release.\r\n\r\nIn the meantime, using `KeyValuePair<string, int>` should work (LiteDB will convert the `short` to `int` upon storage anyway)."
      }
    ]
  },
  {
    "number": 1802,
    "title": "[QUESTION] Setting Subdocument fields in a Query",
    "created_at": "2020-08-26T08:29:39Z",
    "closed_at": "2020-08-26T14:39:25Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1802",
    "body": "I want to change values in a subdocument field from null to empty strings and here's my Query in LiteDB Studio.\r\n\r\n```\r\nUPDATE\r\nusers\r\nSET\r\nCharacter.AppTransactions = \"\"\r\nWHERE\r\nCharacter.AppTransactions = null\r\n```\r\n\r\nBut I get this error\r\n```\r\nUnexpected token `.` in position 29.\r\n\r\nUPDATE  users  SET  Character.AppTransaction\r\n-----------------------------^\r\n```\r\n\r\nSeems we are unable to use valid JSON paths to update subdocuments? Is there a Query that would let me do this operation?\r\n\r\nThanks\r\nBenz",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1802/comments",
    "author": "NongBenz",
    "comments": [
      {
        "user": "lbnascimento",
        "created_at": "2020-08-26T13:54:26Z",
        "body": "@NongBenz The only way to update subdocuments in an update query is ti recreate the structure of the original document. Something like this:\r\n\r\n```SQL\r\nUPDATE users SET\r\n{\r\n\t_id: $._id,\r\n\tName: $.Name,\r\n\t...,\r\n\tCharacters:\r\n\t{\r\n\t\tAppTransactions: '',\r\n\t\tSubField2: $.Characters.SubField2,\r\n\t\t...\r\n\t}\r\n}\r\nWHERE $.Characters.AppTransactions = null\r\n```"
      },
      {
        "user": "NongBenz",
        "created_at": "2020-08-26T14:39:25Z",
        "body": "Thanks for the reply - Think it'll be easier to edit and upsert back to the DB using managed code instead of Queries.\r\n\r\nCheers\r\nBenz"
      }
    ]
  },
  {
    "number": 1794,
    "title": "[QUESTION] Object reference error. Am I doing something wrong?",
    "created_at": "2020-08-18T10:34:08Z",
    "closed_at": "2020-10-22T17:00:43Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1794",
    "body": "This is my code, written for a Discord bot:\r\n```cs\r\nusing (var db = new LiteDatabase(@\"database\\Profile.db\"))\r\n                {\r\n                    var collection = db.GetCollection<Profile>(\"Profile\");\r\n                    long? result = collection.FindOne(x => x.userId == Context.User.Id).gold;\r\n                    if (result != null)\r\n                    {\r\n                        await Context.Channel.SendMessageAsync($\"You have {result.Value.ToString(\"N0\")}G.\");\r\n                    }\r\n                    else\r\n                    {\r\n                        await Context.Channel.SendMessageAsync($\"You aren't registered. Write `!register` to start!\");\r\n                    }\r\n                }\r\n```\r\nIf there are no results found the program throws an \"Object reference not set to an instance of an object.\" (`System.NullReferenceException`) error.\r\nWhat am I doing wrong?\r\n\r\nThanks,\r\nb1sergiu",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1794/comments",
    "author": "b1sergiu",
    "comments": [
      {
        "user": "lbnascimento",
        "created_at": "2020-08-18T13:54:11Z",
        "body": "@b1sergiu I believe you're missing the null-conditional operator after the call to `FindOne`: \r\n```C#\r\nlong? result = collection.FindOne(x => x.userId == Context.User.Id)?.gold\r\n```"
      },
      {
        "user": "b1sergiu",
        "created_at": "2020-10-22T17:00:43Z",
        "body": "Thanks for the answer and sorry for the late reply!"
      }
    ]
  },
  {
    "number": 1789,
    "title": "[QUESTION] Calling ToArray() causes query to fail with Null Object Reference error",
    "created_at": "2020-08-11T03:35:34Z",
    "closed_at": "2020-08-11T19:11:06Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1789",
    "body": "```\r\n\r\n            var tester = userGenerator.Generate();\r\n\r\n            var testerId = context\r\n                .LiteDatabase\r\n                .GetCollection<User>()\r\n                .Insert(tester);\r\n\r\n\r\n            messages.ForEach((item) => item.User = context\r\n            .LiteDatabase\r\n            .GetCollection<User>()\r\n            .FindById(testerId));\r\n\r\n            context.LiteDatabase\r\n                .GetCollection<LogMessage>()\r\n                .InsertBulk(messages);\r\n//this is ok\r\n            var results = context\r\n                .LiteDatabase\r\n                .GetCollection<LogMessage>()\r\n                .Include(x => x.User)\r\n                .Find(Query.EQ(\"$.User.$id\", 102));\r\n//this fails\r\n            var test5 = context\r\n                .LiteDatabase\r\n                .GetCollection<LogMessage>()\r\n                .Find(Query.EQ(\"$.User.$id\", 102))\r\n                .ToArray();\r\n\r\n```\r\n\r\nException\r\n\r\n```\r\n   at LiteDB.BsonMapper.Deserialize(Type type, BsonValue value)\r\n   at LiteDB.BsonMapper.<>c__DisplayClass51_0.<RegisterDbRefItem>b__1(BsonValue bson, BsonMapper m)\r\n   at LiteDB.BsonMapper.DeserializeObject(EntityMapper entity, Object obj, BsonDocument value)\r\n   at LiteDB.BsonMapper.Deserialize(Type type, BsonValue value)\r\n   at LiteDB.LiteQueryable`1.<ToEnumerable>b__27_2(BsonDocument x)\r\n   at System.Linq.Enumerable.SelectEnumerableIterator`2.ToArray()\r\n   at System.Linq.Enumerable.ToArray[TSource](IEnumerable`1 source)\r\n   at liteDbSample.Program.<Main>d__1.MoveNext() in C:\\azurerepos\\Arcstone Internal - Development\\serilog.sinks.webapi\\src\\sample\\liteDb\\Program.cs:line 107\r\n```",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1789/comments",
    "author": "weirdyang",
    "comments": [
      {
        "user": "lbnascimento",
        "created_at": "2020-08-11T14:23:40Z",
        "body": "@captmomo I believe you're using `DbRef` for the property `User` in `LogMessage`. In that case, you should always run `Include`, unless you don't need to retrieve that field in a particular query (you'll have better performance in this case).\r\n\r\nTo make it clearer:\r\n* `DbRef` tells LiteDB to store this sub-object in a separate collection (by default, LiteDB would store it as an embedded document in the same collection);\r\n* `Include` tells LiteDB to resolve the reference upon retrieval (so you can avoid using it if you know you won't use the sub-object in a particular query)."
      }
    ]
  },
  {
    "number": 1787,
    "title": "[QUESTION] Querying DateTime throws exception after updating to 5.0.9",
    "created_at": "2020-08-10T14:35:22Z",
    "closed_at": "2020-08-10T15:50:54Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1787",
    "body": "I just updated to LiteDB 5.0.9 (from 5.0.8) and I'm getting a strange exception\r\n```\r\nSystem.InvalidCastException : Unable to cast object of type 'System.DateTime' to type 'System.Nullable`1[System.DateTimeOffset]'.\r\n   at lambda_method(Closure , Object , Object )\r\n   at LiteDB.BsonMapper.DeserializeObject(EntityMapper entity, Object obj, BsonDocument value)\r\n   at LiteDB.BsonMapper.Deserialize(Type type, BsonValue value)\r\n   at LiteDB.LiteQueryable`1.<ToEnumerable>b__27_2(BsonDocument x)\r\n   at System.Linq.Enumerable.SelectEnumerableIterator`2.MoveNext()\r\n   at System.Linq.Enumerable.WhereEnumerableIterator`1.ToArray()\r\n   at System.Linq.Buffer`1..ctor(IEnumerable`1 source)\r\n   at System.Linq.OrderedEnumerable`1.ToList()\r\n   at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)\r\n```\r\n\r\nMy model has 3 nullable DateTimeOffsets but seems to work in 5.0.8. Any idea what could make it fail. I read in the release notes about custom serializers. But not sure if it has anything to do with my problem.",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1787/comments",
    "author": "mregni",
    "comments": [
      {
        "user": "lbnascimento",
        "created_at": "2020-08-10T15:50:54Z",
        "body": "@mregni This issue has been fixed in the master and its fix will be present in the next incremental release."
      }
    ]
  },
  {
    "number": 1784,
    "title": "How to create an index on a nested array?",
    "created_at": "2020-08-08T14:58:36Z",
    "closed_at": "2020-08-24T15:18:08Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1784",
    "body": "Hi,\r\n\r\ni've an object that is something like this \r\n```\r\npublic class Entry {\r\n      public string Word {get; set;}\r\n      public IEnumerable<Meaning> Meanings {get; set;}\r\n}\r\npublic class Meaning {\r\n     public string Info {get; set;}\r\n     public IEnumerable<Reference> References {get; set;}\r\n}\r\npublic class Reference{\r\n     public string Index {get; set;}\r\n     publi IEnumerable<string> Texts{get; set;}\r\n}\r\n```\r\nand i'm trying to understand how can i create an index on the text property.\r\nMy guess after reading about expressions it's something like this\r\n` entriesCollection.EnsureIndex(\"texts\", \"$Entry.Meanings[*].References[*].Text[*]\");`\r\nbut i'm really not sure.\r\n\r\nCan someone put me in the right direction?\r\n",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1784/comments",
    "author": "tomthebearded",
    "comments": [
      {
        "user": "lbnascimento",
        "created_at": "2020-08-10T13:10:43Z",
        "body": "@tomthebearded Something like `entriesCollection.EnsureIndex(\"texts\", \"$.Entry.Meanings[*].References[*].Text\");` should work fine."
      },
      {
        "user": "tomthebearded",
        "created_at": "2020-08-10T17:51:27Z",
        "body": "@lbnascimento thank you! "
      },
      {
        "user": "tomthebearded",
        "created_at": "2020-08-23T15:37:11Z",
        "body": "Hi @lbnascimento .\r\n\r\nI had the time only now to try your suggestion.\r\nI removed the Entry node because that's the type of the collection.\r\n\r\nMy code now looks like this\r\n\r\n```\r\nvar entriesCollection = db.GetCollection<Entry>(Constants.EntryCollection);\r\nentriesCollection.EnsureIndex(x => x.Word);\r\nentriesCollection.EnsureIndex(\"reference_word\", \"$.Senses[*].References[*].Word\");\r\n```\r\n\r\nAnd this is the Entry object\r\n\r\n```\r\npublic class Entry {\r\n      public string Word {get; set;}\r\n      public IEnumerable<Sense> Senses{get; set;}\r\n}\r\npublic class Sense{\r\n     public IEnumerable<Reference> References {get; set;}\r\n}\r\npublic class Reference{\r\n     public string Word {get;set;}\r\n}\r\n```\r\n\r\nWhen the second EnsureIndex is called i get the exception\r\n\r\n`LiteDB.LiteException: 'Right parameter must be a scalar expression in function.'`\r\n\r\nIs it possible that having an index on a property of an object inside nested array inside another nested array is not supported?\r\n\r\nI've also tried to create this index \r\n\r\n`\r\nentriesCollection.EnsureIndex(\"reference\", \"$.Senses[*].References[*]\");\r\n`\r\n\r\nand the exception is the same.\r\n\r\n"
      },
      {
        "user": "lbnascimento",
        "created_at": "2020-08-24T13:55:15Z",
        "body": "@tomthebearded `entriesCollection.EnsureIndex(\"reference_word\", \"$.Senses[*].References[*].Word\")` should work, but I found a bug in the expression parsing. I'll be working on a fix."
      },
      {
        "user": "lbnascimento",
        "created_at": "2020-08-24T15:18:08Z",
        "body": "@tomthebearded This issue has been fixed in the master and its fix will be present in the next incremental release."
      },
      {
        "user": "tomthebearded",
        "created_at": "2020-08-24T15:19:58Z",
        "body": "@lbnascimento super quick! awesome!\r\n\r\nthank you very much!"
      }
    ]
  },
  {
    "number": 1779,
    "title": "[QUESTION] Get collection size or how can calculate the collection size Version 5",
    "created_at": "2020-08-06T14:45:47Z",
    "closed_at": "2020-08-07T12:37:16Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1779",
    "body": "Hello,\r\n\r\ngive a function how can read the collection size out of the box?\r\n\r\nor\r\n\r\nHow can the calculate this? \r\nIn the version 4 i have claculate this about the singel documents with \"GetBytesCount(true)\" but this is not working on liteDB 5.\r\n\r\nI switch liteDB 4.1.4 to 5.0.8.\r\n\r\nHave you an Idee? Thank you\r\n",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1779/comments",
    "author": "foxshooter",
    "comments": [
      {
        "user": "lbnascimento",
        "created_at": "2020-08-06T15:40:10Z",
        "body": "@foxshooter If you want to read the total size occupied by a collection, you can do it with the following command:\r\n\r\n```C#\r\nint bytes = db.Execute(\"select SUM(*.usedBytes) from $dump where pageType = 'Data' and collection = 'collection'\").Single()[\"usedBytes\"];\r\n```\r\n\r\nIt's a bit convoluted, but it works fine. Of couse, you need to change the collection name in the query. We'll consider adding a property to the `LiteCollection` that gets this count."
      },
      {
        "user": "foxshooter",
        "created_at": "2020-08-07T08:00:57Z",
        "body": "@lbnascimento Thank you.\r\nCan you explain why pageType='Data' and which Type can use?\r\n\r\nIf I leave out the type='Data' then the size is bigger."
      },
      {
        "user": "lbnascimento",
        "created_at": "2020-08-07T12:35:26Z",
        "body": "@foxshooter If you leave out the `pageType='Data'`, this will also include Index pages."
      },
      {
        "user": "foxshooter",
        "created_at": "2020-08-07T12:37:16Z",
        "body": "@lbnascimento okay, \r\nThank you!\r\n\r\nYou helped me a lot."
      }
    ]
  },
  {
    "number": 1769,
    "title": "Upgraded from V4 to V4 - simple Find(Query.All()) stopped working",
    "created_at": "2020-07-29T20:42:08Z",
    "closed_at": "2020-07-31T15:28:03Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1769",
    "body": "Searched for this but found nothing.\r\n\r\nProblem:\r\n\r\nThis works fine in V4, fails to produce usable results in V5. \r\n\r\nThis pretty basic operation has been upgraded to V5. Data file has been upgraded using LiteDB Studio.\r\n\r\n               using (var db = new LiteDatabase(@ConfigDBConnection))\r\n                {\r\n                    var items = db.GetCollection<Item>(collection);\r\n\r\n                    var results = items.Find(Query.All());\r\n\r\n                }\r\n\r\nNew LiteDatabase produces what looks like a valid LiteDB.LiteDatabase reference.\r\n\r\nGetCollection returns a seemingly valid object reference to the right type: \"LiteDB.LiteCollection<AIMFacTool.Item>\"\r\n\r\nV5 Query.All produces an unusable \"System.Linq.Enumerable.WhereSelectEnumerableIterator<LiteDB.BsonDocument, AIMFacTool.Item>\" and an error in the ResultsView of \"Error The function evaluation requires all threads to run.\"\r\n\r\nWhereas V4 produces a usable \"LiteDB.LiteCollection<AIMFacTool.Item>\" object.\r\n\r\nI am hoping there is a workaround or alternative I can use, otherwise I will have to revert back to V4.\r\n\r\nAm looking forward to using LiteDB Studio though so I am keeping my hopes up that this is an easy fix.\r\n\r\nThanks in advance for your help.\r\n",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1769/comments",
    "author": "chucksullivancvs",
    "comments": [
      {
        "user": "lbnascimento",
        "created_at": "2020-07-29T21:07:52Z",
        "body": "I'm not sure why you call the result of the `LiteCollection.Find` method unusable. This class `WhereSelectEnumerableIterator<T>` is an internal C# class, and it implements `IEnumerable<T>`, so you can use it in many ways, like iterating with a `foreach` loop and calling `ToList()` or `ToArray()`.\r\n\r\nAlso, the `The function evaluation requires all threads to run` error is related to a limitation of the Visual Studio debugger for multi-threaded code, it has nothing to do with LiteDB itself and should never happen when running it without a debugger attached."
      },
      {
        "user": "chucksullivancvs",
        "created_at": "2020-07-30T16:08:28Z",
        "body": "Perhaps I should have said \"I don't know how to use it\" which is really what I was trying to say.\r\n\r\nCasting the result to a List solved the problem, as in:\r\n\r\n                    var items = db.GetCollection<Item>(collection);\r\n                    var results = items.Find(Query.All());\r\n                    results = results.ToList();\r\n                    return results;\r\n\r\nI did not have to do this in V4 and did not find anything in the documentation that mentioned this change in behavior.\r\n\r\nThanks again Leonardo.\r\n\r\nLiteDB is a great little tool and overall I have had good success using it.\r\n\r\nKeep up the good work!"
      }
    ]
  },
  {
    "number": 1767,
    "title": "Just upgraded a project from V4 to latest V5 getting \"Cannot convert lambda expression to type 'BsonValue' because it is not a delegate type\"",
    "created_at": "2020-07-28T18:11:40Z",
    "closed_at": "2020-08-14T16:37:49Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1767",
    "body": "I just upgraded a C# project reference from LiteDB 4 to latest v5.0.8. First converted data file using LiteDB Studio. Still worked.\r\n\r\nChange the C# project reference to v5 and now get a compiler error:\r\n\r\n\"Cannot convert lambda expression to type 'BsonValue' because it is not a delegate type\"\r\n\r\non this Collection Delete method statement that was previously working.\r\n\r\n`using (var db = new LiteDatabase(@DBConnection))\r\n{\r\n                    var requests = db.GetCollection<Request>(\"Request\");\r\n                    requests.Delete(x => x.CreateDate < deletedate);                    \r\n }`\r\n\r\nI'm not an expert in Lambda, LINQ or BSON.\r\n\r\nDidn't find any obvious answers.\r\n\r\nI'm looking for an easy fix. Please advise. Thx.",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1767/comments",
    "author": "chucksullivancvs",
    "comments": [
      {
        "user": "lbnascimento",
        "created_at": "2020-07-28T18:28:07Z",
        "body": "@chucksullivancvs There was a small change in the delete syntax for v5: the method `LiteCollection.Delete` is now only used when you want to delete a single document by its id. For other usage, you should use `DeleteMany`."
      },
      {
        "user": "chucksullivancvs",
        "created_at": "2020-07-28T18:39:54Z",
        "body": "Thanks Leonardo for the quick reply. I had just found the DeleteMany and was looking into it,\r\n\r\nThat worked!\r\n\r\nChanged to this and it compiled and worked.\r\n\r\n                  requests.DeleteMany(x => x.CreateDate < deletedate);    \r\n\r\nNow on to the next upgrade issues...\r\n\r\nChuck"
      },
      {
        "user": "gbthakkar",
        "created_at": "2022-05-21T07:24:18Z",
        "body": "Hi,\r\nI am little late here.\r\nThe answer definately solved the issue for chucksullivancvs . But there is sitution where we want to delete one record(document) in collection based on ID.\r\nLike\r\npublic class Service\r\n    {\r\n        public int Id { get; set; }\r\n        public string Name { get; set; } = \"\";\r\n        public bool IsActive { get; set; }=true;\r\n    }\r\nNow what should be the code to delete one service based on ID. Because BsonValue is known to me in this case.\r\n"
      },
      {
        "user": "chucksullivancvs",
        "created_at": "2022-05-23T12:26:37Z",
        "body": "Good to know. Thx for your consideration."
      }
    ]
  },
  {
    "number": 1760,
    "title": "Does LiteDb support asynchronous operations?",
    "created_at": "2020-07-21T08:21:43Z",
    "closed_at": "2020-08-03T14:03:02Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1760",
    "body": "LiteDB is a pretty good option, but it doesn't seem to support asynchronous operations, right? If there is more that choice, it would be more perfect.",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1760/comments",
    "author": "ghost",
    "comments": [
      {
        "user": "lbnascimento",
        "created_at": "2020-07-21T13:32:30Z",
        "body": "@mincasoft LiteDB does not currently support asynchronous operations."
      }
    ]
  },
  {
    "number": 1758,
    "title": "Object Property List(of Object) - .contains not working",
    "created_at": "2020-07-16T21:38:45Z",
    "closed_at": "2020-07-18T19:00:26Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1758",
    "body": "Consider the below:\r\n\r\n```\r\npublic class mRom\r\n\tpublic property Name as String\r\nend class\r\n\r\npublic class mGames\r\n\t<BsonRef(\"mRoms\")>\r\n\tpublic property AllRoms as List(of mRom)\r\nend class\r\n\r\nugame = db.Collections.mGames.Include(Function(x) x.AllRoms).FindById(ssGameId)\r\nIf Not ugame.AllRoms.Contains(rom) Then ugame.AllRoms.Add(rom)\r\n```\r\n\r\nThis is to review AllRoms and add `rom` to the list if an instance of `rom` isn't already in the list. HOwever, I get duplicate entries. \r\n\r\nThe `.Contains` function never detects the presence of `rom`, even if it is already in the collection. \r\n\r\nWhat am I doing wrong?",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1758/comments",
    "author": "stigzler",
    "comments": [
      {
        "user": "lbnascimento",
        "created_at": "2020-07-17T14:39:05Z",
        "body": "A few comments: \r\n\r\n1. Your classes don't have id fields. It is strongly recommended for all classes to be inserted in a LiteDB collection to have id fields (I don't even know how you're using `FindById` without it).\r\n\r\n2. You're using `BsonRef`, which is used to indicate that a subobject (or a list of subobjects) is to be stored in another collection. This creates a reference, which is resolved upon retrieval. However, you still have to manually insert the real objects in the referenced collection. In your example, you would have to insert `rom` to the collection of roms, add it to `ugame.AllRoms` and then update `ugame` in the games collection.\r\n\r\n3. You may run into problems due to the `Contains` method using the default equality, which is reference equality. You could either override the `Equals` method in your class or change it to `Any`: `ugame.AllRoms.Any(Function(x) x.Name = rom.Name)`"
      },
      {
        "user": "stigzler",
        "created_at": "2020-07-18T19:00:26Z",
        "body": "Thanks @lbnascimento \r\n\r\nOn 1 + 2, the code I post was just an illustration, so that wasn't the issue. However, point 3 worked a treat! Thank you."
      }
    ]
  },
  {
    "number": 1757,
    "title": "How can i get the autoid from a poco record",
    "created_at": "2020-07-16T10:13:22Z",
    "closed_at": "2020-07-16T15:17:45Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1757",
    "body": "Hi,\r\nI have a class:\r\npublic class x\r\n{\r\npublic string a {get;set;}\r\npublic string b {get;set;}\r\n}\r\n\r\ninsertion is:\r\nx record = new x();\r\nrecord.a=\"a\";\r\nrecord.b =\"b\";\r\nILiteCollection<x> collection = db.GetCollection<x>(\"records\");\r\ncollection.Insert(record);\r\n\r\nget records:\r\nILiteCollection<x> collection = db.GetCollection<x>(\"records\");\r\nList<x> records = collection.FindAll().ToList();\r\nforeach (x record in records)\r\n{\r\nDebug(x.a); // fine\r\nDebug(x.b); // fine\r\n\r\nBsonValue id;\r\n// how can i get the id for delete the record?\r\n\r\n//collection.delete(id);\r\n}\r\n\r\nthx",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1757/comments",
    "author": "BobMcKay",
    "comments": [
      {
        "user": "lbnascimento",
        "created_at": "2020-07-16T14:15:37Z",
        "body": "@BobMcKay The first (and recommended) way would be to add a `ObjectId Id { get; set; }` field to your class. If that is not possible, you could simply store the value returned by the `Insert` method (it returns the id of the inserted document). If that is not possible, your best option would probably be to use `DeleteMany` instead of `Delete`: `collection.DeleteMany(r => r.a == x.a && r.b == x.b)`."
      },
      {
        "user": "BobMcKay",
        "created_at": "2020-07-16T15:17:45Z",
        "body": "@lbnascimento Thank you for the fast response.\r\nthe ObjectId field is the solution. Next time i will read the docs more carefully. :)"
      }
    ]
  },
  {
    "number": 1755,
    "title": "[QUESTION] Why would I ever insert or update versus upsert all the time ?",
    "created_at": "2020-07-10T10:41:31Z",
    "closed_at": "2020-07-13T15:09:33Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1755",
    "body": "Is there a reason that I would insert or update versus upsert by default all the time ?",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1755/comments",
    "author": "stephenhauck",
    "comments": [
      {
        "user": "lbnascimento",
        "created_at": "2020-07-10T14:53:56Z",
        "body": "@stephenhauck Running Insert or Update should have better performance than Upsert (Upsert works by trying to update, and inserting if it fails). Also, Insert is \"safer\" because you don't run the risk of overwriting an existing document (by setting the wrong id) when you wanted to insert a new one.\r\n\r\nOther than that, I don't see any reason."
      },
      {
        "user": "nightroman",
        "created_at": "2020-07-10T15:09:56Z",
        "body": "I think Update is a very different operation comparing to \"Upsert update\".\r\nUpdate is supposed to change the specified fields.\r\nUpsert replaces the whole document, if it exists.\r\nOr am I missing something?"
      },
      {
        "user": "lbnascimento",
        "created_at": "2020-07-10T15:22:20Z",
        "body": "@nightroman Both `Update` and `Upsert` replace the entire document. In fact, they call the same method in the engine (`LiteEngine.UpdateDocument(...)`).\r\n\r\nLiteDB does not currently support updating only certain fields of a document. We are thinking of ways to implement it, but it seems to be a challenge, given the current architecture of LiteDB."
      },
      {
        "user": "stephenhauck",
        "created_at": "2020-07-10T16:32:57Z",
        "body": "Replacing works just fine .. spend time on other aspects that need attention would be my suggestion.\r\nI am just used to a database that knows it has an \"oid\" and simply updates or inserts or like SQLite replace into.\r\n\r\nThanks"
      }
    ]
  },
  {
    "number": 1752,
    "title": "Can I create a database in memory as I have no file storage",
    "created_at": "2020-07-09T23:28:25Z",
    "closed_at": "2020-07-13T15:09:43Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1752",
    "body": "I need a light weight database engine for an Azure function I am writing.  As I have file storage I can't create a database in a file location.    Is it possible to just create a database in memory (Like SQLLite)\r\n\r\ncheers\r\nGreg",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1752/comments",
    "author": "GregObleshchuk",
    "comments": [
      {
        "user": "lbnascimento",
        "created_at": "2020-07-10T13:39:24Z",
        "body": "@GregObleshchuk Yes, you can create an in-memory database with `var db = new LiteDatabase(\":memory:\")` or `var db = new LiteDatabase(new MemoryStream())`."
      }
    ]
  },
  {
    "number": 1743,
    "title": "[QUESTION] Accessing nested objects in LiteDB v5",
    "created_at": "2020-07-03T06:16:59Z",
    "closed_at": "2020-07-03T14:33:47Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1743",
    "body": "Refer #1926 - not resolved ",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1743/comments",
    "author": "panther142",
    "comments": [
      {
        "user": "lbnascimento",
        "created_at": "2020-07-03T13:43:46Z",
        "body": "@panther142 This is happening because the `Transactions` attribute in `Holdings` is read-only. The transactions are being stored correctly (that is why you see them in LiteDB.Studio), but they are not being returned because the mapper looks for a public setter and doesn't find one.\r\n\r\nThe simplest solution would be to add a public setter. If that is not possible in your scenario, you could create a custom constructor and add `BsonCtorAttribute` to it so that the mapper knows to use it."
      },
      {
        "user": "panther142",
        "created_at": "2020-07-03T13:58:00Z",
        "body": "Thanks for your reply @lbnascimento - would you be so kind as to provide a small code example for both options please?"
      },
      {
        "user": "lbnascimento",
        "created_at": "2020-07-03T14:15:36Z",
        "body": "@panther142 If you want to add a public setter to the `Transactions ` property in `Holdings`, just add `set;` after `get;` in its declaration. If you want to make a custom constructor, it would be something like this:\r\n\r\n```C#\r\npublic Holdings(int id, BsonArray transactions)\r\n{\r\n        var mapper = BsonMapper.Global;\r\n        Id = id;\r\n        Transactions = transactions.Select(x => mapper.Deserialize<Transactions>(x)).ToList();\r\n}\r\n```"
      },
      {
        "user": "panther142",
        "created_at": "2020-07-03T14:33:47Z",
        "body": "Thanks for your help!"
      }
    ]
  },
  {
    "number": 1739,
    "title": "[QUESTION] How to use the GROUP BY with HAVING in LiteDB v5",
    "created_at": "2020-07-01T20:17:02Z",
    "closed_at": "2020-07-13T15:33:07Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1739",
    "body": "I want to do a database request using GROUP BY clause like follows:\r\n\r\n`SELECT $, SHA, count(*) c FROM picturedata GROUP BY SHA HAVING @c > 1;`\r\n\r\nThe result is \"no result\" even though I have datasets which have the same String for the attribute SHA.\r\nThe desired output is an array of all objects in the picturedata collection having a value for SHA that is repeated.\r\n\r\nI am not able to figure out from any documentation on the internet on how to write a valid clause with GROUP BY and also not with GROUP BY and HAVING together. \r\n\r\nCan anybody post an example on using and building a right syntax for this type of request? That would really help me. \r\n",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1739/comments",
    "author": "eschlot",
    "comments": [
      {
        "user": "lbnascimento",
        "created_at": "2020-07-02T14:13:02Z",
        "body": "@eschlot You got a few things wrong:\r\n\r\n- You cannot use `SELECT $` with `GROUP BY` because `$` refers to the current document being iterated through *before* grouping. If you want to retrieve an array of all documents that were grouped, use `*`;\r\n- The field `SHA` is the grouping expression, and due to a limitation in LiteDB, you can only access the grouping expression in your projection by using the special field `@key`;\r\n- Given that the `SELECT` clause is the last one to be processed, you cannot use aliases in the `HAVING` clause (I believe the same is true even for relational databases)\r\n\r\nSo, I think your query would look something like this: `SELECT * AS items, @key, count(*) AS c FROM picturedata GROUP BY SHA HAVING count(*) > 1`."
      }
    ]
  },
  {
    "number": 1738,
    "title": "[V4] Prevent a field from being updated with Upsert ?",
    "created_at": "2020-07-01T17:21:41Z",
    "closed_at": "2020-07-13T15:33:11Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1738",
    "body": "Hi,\r\nWhen adding a new document I always use **Upsert** because I don't know if it's already in the db and I don't want to check for each document if it exists or not because I can add tens of thousand documents in a batch.\r\nMy document has a \"Date Added\" property which tells when the document has been added to the database.\r\n\r\nMy problem is that this property gets updated every time when it should stick to its original value.\r\nIs there a way to do this kind of behavior?\r\n\r\nThanks.",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1738/comments",
    "author": "ju2pom",
    "comments": [
      {
        "user": "lbnascimento",
        "created_at": "2020-07-01T18:56:49Z",
        "body": "@ju2pom There's currently no way to make `Update` or `Upsert` ignore certain fields when updating. They always replace the entire document.\r\n\r\nA feature like this is being considered for future versions."
      }
    ]
  },
  {
    "number": 1732,
    "title": "[QUESTION] Automatically Insert new Entities",
    "created_at": "2020-06-26T07:37:14Z",
    "closed_at": "2020-06-29T13:53:59Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1732",
    "body": "I am having some trouble to understand what is possible and what isn't with LiteDB. We are saving some entities in our database that have references of other entities. For example:\r\n\r\npublic class InvoiceLine : IEquatable<InvoiceLine>\r\n{\r\n    [BsonRef(\"BillingAccount\")] public BillingAccount Account { get; private set; }\r\n\r\n[BsonRef(\"Employee\")] public Employee Employee { get; private set; }\r\n\r\npublic Amount Amount { get; private set; }\r\n}\r\n\r\nSo when I save an invoiceLine that has an existing Employee and a BillingAccount everything works as expected. But when I save an InvoiceLine with an Employee that does not exist I would expect that LiteDB inserts that Employee into the correct collection and saves the newly added reference.\r\nSadly it seems like it saves a reference with the id \"0\", meaning none is created. I checked that with lite studio and there is no new entity created besides the InvoiceLine with faulty references.\r\n\r\nIs there anything I have to add to create new entities automatically or is this not supported by LiteDB?",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1732/comments",
    "author": "JoshuaWegener",
    "comments": [
      {
        "user": "lbnascimento",
        "created_at": "2020-06-26T15:16:45Z",
        "body": "@JoshuaWegener The `BsonRef` attribute is only used to create references upon storage and resolve references upon retrieval. Insertions and updates to the referenced collection still have to be done manually."
      }
    ]
  },
  {
    "number": 1731,
    "title": "[QUESTION] Sharing the database between processes on Android?",
    "created_at": "2020-06-25T12:14:05Z",
    "closed_at": "2020-06-29T13:54:03Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1731",
    "body": "We need to share a LiteDB database between 2 processes on Android, but if we try to use `Connection = ConnectionType.Shared`, we get the error \"Shared mode is not supported in platforms that do not implement named mutex\".  SQLite allows multiple processes to share a single-file DB on Android so it's obviously possible... why can't LiteDB do it?",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1731/comments",
    "author": "jez9999",
    "comments": [
      {
        "user": "lbnascimento",
        "created_at": "2020-06-25T13:26:03Z",
        "body": "@jez9999 Shared mode currently uses a system-wide mutex to control file access. If the platform doesn't implement system-wide mutex, there's not much that can be currently done. However, the shared mode will be completely reworked for the next major release, and a version that uses lock files is currently in testing."
      }
    ]
  },
  {
    "number": 1728,
    "title": "[QUESTION] Best practice for lifetime of LiteDatabase?",
    "created_at": "2020-06-23T17:24:57Z",
    "closed_at": "2020-07-13T15:49:32Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1728",
    "body": "The docs on the website give an example of creating `LiteDatabase` in a `using` block:\r\n\r\n`using(var db = new LiteDatabase(@\"C:\\Temp\\MyData.db\")) { ... }`\r\n\r\nBut in our application, we're going to be using `LiteDatabase` in lots of different places.  Is it best practice for us to create just one instance of `LiteDatabase` and get that instance from a service that has lifetime scope over our application, or to instantiate a new instance in a `using` block each time we want to use LiteDB?",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1728/comments",
    "author": "jez9999",
    "comments": [
      {
        "user": "lbnascimento",
        "created_at": "2020-06-24T14:55:10Z",
        "body": "@jez9999 If keeping the file locked indefinitely is not an issue for you, then it should be fine keeping a live instance of `LiteDatabase` throughout the life cycle of your application. Making sure it is disposed on shutdown is good practice, but technically not necessary. If you're dealing with large amounts of data and experience performance loss or large log files, just run a checkpoint every once in a while."
      }
    ]
  },
  {
    "number": 1717,
    "title": "[QUESTION] How to see how much space a particular collection takes?",
    "created_at": "2020-06-10T11:01:13Z",
    "closed_at": "2020-06-11T05:55:04Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1717",
    "body": "How to see how much space a particular collection takes? And what is the place occupied in general, if it is not a collection.",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1717/comments",
    "author": "SKProCH",
    "comments": [
      {
        "user": "lbnascimento",
        "created_at": "2020-06-10T15:04:35Z",
        "body": "@SKProCH The query `select count(*) from $dump where Collection = 'mycollection'` will return the number of pages in use for `mycollection`. Each page is currently 8kB."
      },
      {
        "user": "SKProCH",
        "created_at": "2020-06-11T05:55:04Z",
        "body": "Thanks"
      }
    ]
  },
  {
    "number": 1716,
    "title": "[QUESTION] LiteDb v5 Query Api Group By Issue",
    "created_at": "2020-06-09T23:41:33Z",
    "closed_at": "2020-06-11T02:13:14Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1716",
    "body": "Hi!\r\nI am trying to execute a LiteDB (v5) query but facing the problem with Group By.\r\n\r\nI am building my expression in C# like that:\r\nvar r1 = collection.Query()\r\n\t\t        .GroupBy(\"Age\")\r\n\t\t        .Select(\"{Key: @Key,Max: Max(Id)}\").\r\n\t\t        ToArray();\r\nHere I want to get the maximum Id of the person in each age group.\r\n\r\nIt results in the following SQL:\r\n\r\nSELECT {Key:@Key,Max:MAX($.Id)}\r\nFROM Person\r\nGROUP BY $.Age\r\n\r\nHowever, the engine throws this exception:\r\n\r\n'Field 'Id' is invalid in the select list because it is not contained in either an aggregate function or the GROUP BY clause.'\r\n\r\nCould you please explain how to use aggregate functions with Group By?\r\n\r\nI was able to use only Count(*) or Max(@Key).\r\n\r\nPS. I thought I might need to use 'Include' function to add the Id field into the groups, but GROUP BY doesn't allow me to do it.\r\n",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1716/comments",
    "author": "oleg-chibikov",
    "comments": [
      {
        "user": "lbnascimento",
        "created_at": "2020-06-10T14:48:21Z",
        "body": "@oleg-chibikov Just replace `MAX($.Id)` with `MAX(*.Id)` and it should work"
      },
      {
        "user": "oleg-chibikov",
        "created_at": "2020-06-11T02:13:11Z",
        "body": "Thank you! It works."
      },
      {
        "user": "1nfected",
        "created_at": "2023-07-19T06:06:47Z",
        "body": "> @oleg-chibikov Just replace `MAX($.Id)` with `MAX(*.Id)` and it should work\r\n\r\nThis is such an important piece of info, which should definitely be a part of the documentation."
      }
    ]
  },
  {
    "number": 1696,
    "title": "[QUESTION] EnsureIndex on empty collection",
    "created_at": "2020-05-27T13:02:14Z",
    "closed_at": "2020-05-28T12:52:07Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1696",
    "body": "Is it OK to call EnsureIndex on empty collection - at database creation time, to register index fields, or there must be at least one data entry in collection?",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1696/comments",
    "author": "abrca",
    "comments": [
      {
        "user": "lbnascimento",
        "created_at": "2020-05-27T14:02:10Z",
        "body": "@abrca It is perfectly fine to call `EnsureIndex` for a possibly non-existent collection, it will be created if it doesn't exist."
      },
      {
        "user": "abrca",
        "created_at": "2020-05-28T12:52:05Z",
        "body": "Thank you"
      }
    ]
  },
  {
    "number": 1689,
    "title": "Iterating over query result",
    "created_at": "2020-05-16T21:42:41Z",
    "closed_at": "2020-05-20T14:21:39Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1689",
    "body": "Hi,\r\n\r\nI am executing SQL and iterating over result set with data reader. I am finding that if SQL returns more than 45,000 matches the loop still stops at 45,000. Is there a limit to how many results can be returned? Can I increase the limit?\r\n\r\n                   IBsonDataReader rdr = db.Execute(sql);\r\n                    int i = 0;\r\n                    \r\n                    while (rdr.Read())\r\n                    {\r\n                        BsonDocument patientDoc = new BsonDocument();                        \r\n                        patientDoc[\"_id\"] = rdr[\"_id\"].AsObjectId;\r\n                        _dicSeachResultIds.Add(i, patientDoc);\r\n                        i++;\r\n                    }",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1689/comments",
    "author": "sanjeevbaral",
    "comments": [
      {
        "user": "sanjeevbaral",
        "created_at": "2020-05-16T22:48:57Z",
        "body": "Never mind! The database had gotten somehow corrupted. I dropped and re-built collection and now the count looks good. Not sure what caused it to get corrupted."
      },
      {
        "user": "lbnascimento",
        "created_at": "2020-05-20T14:21:39Z",
        "body": "@sanjeevbaral I'm going to close this issue, if you get corruption again please open another issue."
      }
    ]
  },
  {
    "number": 1687,
    "title": "[QUESTION] Weird behavior when performing multiple upserts in a for loop",
    "created_at": "2020-05-15T15:15:43Z",
    "closed_at": "2020-05-16T02:44:39Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1687",
    "body": "```C#\r\n    public class Employee\r\n    {\r\n        public int Id { get; set; }\r\n        public string Name { get; set; }\r\n        public int Salary { get; set; }\r\n        public DateTime Birthday { get; set; }\r\n        public string ContactNumber { get; set; }\r\n        public byte[] Image { get; set; }\r\n        public string[] Categories { get; set; }\r\n        public WorkTime[] workTime { get; set; }\r\n    }\r\n\r\n\r\n    public class WorkTime\r\n    {\r\n        public DateTime Date { get; set; }\r\n        public DateTime StartTime { get; set; }\r\n        public DateTime EndTime { get; set; }\r\n        \r\n    }\r\n\r\n    private void btnClear_Click(object sender, EventArgs e)\r\n    {\r\n            Employee[] employees = colEmployee.FindAll().ToArray();\r\n            \r\n            foreach (Employee employee in employees)\r\n            {\r\n                employee.workTime = null;\r\n                colEmployee.Upsert(employee);\r\n                Thread.Sleep(10);\r\n            }\r\n    }\r\n```\r\n\r\nI don't understand the reason why I need to add ``Thread.Sleep(10)`` or ``MessageBox.Show()`` for it to properly remove all workTime in each employees, considering ``Upsert()`` is a synchronous function and will only return when the database is updated.\r\n\r\nIf there's no ``Thread.Sleep(10);``, it sometimes only clear part of workTime in each employees, and rarely clear all workTime in each employees.",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1687/comments",
    "author": "tingyus995",
    "comments": [
      {
        "user": "lbnascimento",
        "created_at": "2020-05-15T17:23:15Z",
        "body": "@tingyus995 I ran some tests and could not reproduce the issue. Could you provide more info (like LiteDB version, platform/framework and OS) and the datafile you're using?"
      },
      {
        "user": "tingyus995",
        "created_at": "2020-05-16T02:43:21Z",
        "body": "After some more testing and reading documentation, I found that I forgot to call ``LiteDatabase.Dispose()`` throughout my app.\r\n\r\nThus, the changes aren't flushed to the disk after multiple upserts (operations).\r\n\r\nHowever, if there's only one operation (e.g. one upsert, one insert) the changes seem to be immediately written to the disk. That's the reason why I ignore ``LiteDatabase.Dispose()`` until near the end of the project I'm doing."
      }
    ]
  },
  {
    "number": 1683,
    "title": "[QUESTION] How to store via object",
    "created_at": "2020-05-13T18:02:30Z",
    "closed_at": "2020-05-13T19:18:20Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1683",
    "body": "Using 5.0.8\r\n\r\nPorting some XML serialization code for a class which holds essentially a dictionary of objects (though the objects are wrapped in a class). It currently stores a type for every value which isn't a string and uses that during deserialization. I wasn't clear if there was a built-in way to do this in LiteDB.\r\n\r\nI'm currently writing a custom mapper for this and going to follow the same scheme of storing types, but would love it if someone could point out a simpler way. The objects may be any built-in type or some smaller custom types. It *seems* like I could do something with BsonDocument, but I'm not quite sure how to tackle it.",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1683/comments",
    "author": "matelich",
    "comments": [
      {
        "user": "lbnascimento",
        "created_at": "2020-05-13T18:19:05Z",
        "body": "@matelich Could you provide more info on what you're trying to do? Some examples of your XML serialization code would be nice."
      },
      {
        "user": "matelich",
        "created_at": "2020-05-13T19:18:20Z",
        "body": "Naturally, I discovered BsonMapper.ToDocument and ToObject about 10 minutes after posting. I think they will do the job.\r\n\r\nThanks, @lbnascimento!"
      }
    ]
  },
  {
    "number": 1680,
    "title": "[QUESTION] Will the database often corrupted after bulk insert data ",
    "created_at": "2020-05-12T09:24:37Z",
    "closed_at": "2020-06-13T16:10:03Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1680",
    "body": "db version 5.0.7\r\nRaspberry pi raspbian\r\n.net core 3.1\r\n\r\nWhen i try insert a record it throw:\r\n\r\nLiteDB.LiteException: Invalid Index on 203. Full zero: False. Page Type: Empty. Prev/Next: 4294967295/442. UniqueID: 4. ShareCounter: -1. ",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1680/comments",
    "author": "mwkldeveloper",
    "comments": [
      {
        "user": "GW-FUB",
        "created_at": "2020-05-12T13:26:55Z",
        "body": "I got the same problem. I'm inserting some hundreds of datasets into the database and call DeleteAll() & Insert() when reloading.\r\n\r\nThe first time inserting into the empty database works great. Also reading. But when updating or sometimes also reading data the database gets corrupted. This happens in an unregular pattern (at least I haven't found any so far).\r\n\r\nHere is one of my exceptions:\r\n\r\n```\r\nLiteDB.LiteException: Invalid Data on 15. Full zero: False. Page Type: Index. Prev/Next: 4294967295/4294967295. UniqueID: 4497. ShareCounter: 1. \r\n  at LiteDB.Engine.DataPage..ctor (LiteDB.Engine.PageBuffer buffer) [0x00017] in <805b6841a9694a12b73a9471c608085e>:0 \r\n  at LiteDB.Engine.BasePage.ReadPage[T] (LiteDB.Engine.PageBuffer buffer) [0x000b7] in <805b6841a9694a12b73a9471c608085e>:0 \r\n  at LiteDB.Engine.Snapshot.ReadPage[T] (System.UInt32 pageID, LiteDB.Engine.FileOrigin& origin, System.Int64& position, System.Int32& walVersion) [0x000c2] in <805b6841a9694a12b73a9471c608085e>:0 \r\n  at LiteDB.Engine.Snapshot.GetPage[T] (System.UInt32 pageID, LiteDB.Engine.FileOrigin& origin, System.Int64& position, System.Int32& walVersion) [0x0003c] in <805b6841a9694a12b73a9471c608085e>:0 \r\n  at LiteDB.Engine.Snapshot.GetPage[T] (System.UInt32 pageID) [0x00000] in <805b6841a9694a12b73a9471c608085e>:0 \r\n  at LiteDB.Engine.DataService+<Read>d__5.MoveNext () [0x00020] in <805b6841a9694a12b73a9471c608085e>:0 \r\n  at LiteDB.Engine.BufferReader.MoveFordward (System.Int32 count) [0x00041] in <805b6841a9694a12b73a9471c608085e>:0 \r\n  at LiteDB.Engine.BufferReader.Read (System.Byte[] buffer, System.Int32 offset, System.Int32 count) [0x0004f] in <805b6841a9694a12b73a9471c608085e>:0 \r\n  at LiteDB.Engine.BufferReader.ReadNumber[T] (System.Func`3[T1,T2,TResult] convert, System.Int32 size) [0x0004a] in <805b6841a9694a12b73a9471c608085e>:0 \r\n  at LiteDB.Engine.BufferReader.ReadInt32 () [0x00000] in <805b6841a9694a12b73a9471c608085e>:0 \r\n  at LiteDB.Engine.BufferReader.ReadDocument (System.Collections.Generic.HashSet`1[T] fields) [0x00000] in <805b6841a9694a12b73a9471c608085e>:0 \r\n  at LiteDB.Engine.DatafileLookup.Load (LiteDB.Engine.PageAddress rawId) [0x00018] in <805b6841a9694a12b73a9471c608085e>:0 \r\n  at LiteDB.Engine.DatafileLookup.Load (LiteDB.Engine.IndexNode node) [0x00007] in <805b6841a9694a12b73a9471c608085e>:0 \r\n  at LiteDB.Engine.BasePipe+<LoadDocument>d__6.MoveNext () [0x0004a] in <805b6841a9694a12b73a9471c608085e>:0 \r\n  at LiteDB.Engine.QueryPipe+<Select>d__2.MoveNext () [0x000dd] in <805b6841a9694a12b73a9471c608085e>:0 \r\n  at LiteDB.Engine.QueryExecutor+<>c__DisplayClass10_0+<<ExecuteQuery>g__RunQuery|0>d.MoveNext () [0x002fa] in <805b6841a9694a12b73a9471c608085e>:0 \r\n  at LiteDB.BsonDataReader.Read () [0x00023] in <805b6841a9694a12b73a9471c608085e>:0 \r\n  at LiteDB.LiteQueryable`1+<ToDocuments>d__26[T].MoveNext () [0x0005f] in <805b6841a9694a12b73a9471c608085e>:0 \r\n  at System.Linq.Enumerable+SelectEnumerableIterator`2[TSource,TResult].ToList () [0x0002d] in /Library/Frameworks/Xamarin.iOS.framework/Versions/Current/src/Xamarin.iOS/external/corefx/src/System.Linq/src/System/Linq/Select.cs:161 \r\n  at System.Linq.Enumerable.ToList[TSource] (System.Collections.Generic.IEnumerable`1[T] source) [0x0000e] in /Library/Frameworks/Xamarin.iOS.framework/Versions/Current/src/Xamarin.iOS/external/corefx/src/System.Linq/src/System/Linq/ToCollection.cs:30 \r\n[Stacktrace of my code is left out ...]\r\n```"
      },
      {
        "user": "lbnascimento",
        "created_at": "2020-05-20T14:22:21Z",
        "body": "@mwkldeveloper @GW-FUB Could you provide your datafiles?"
      },
      {
        "user": "GW-FUB",
        "created_at": "2020-05-20T14:48:15Z",
        "body": "@lbnascimento Unfortunately not. I made a downgrade to v4 and all of the old files are gone now."
      },
      {
        "user": "jjxtra",
        "created_at": "2020-06-04T00:49:07Z",
        "body": "Do you get this error on Ubuntu or Windows?"
      },
      {
        "user": "mwkldeveloper",
        "created_at": "2020-06-04T04:01:25Z",
        "body": "After upgrade LiteDb to v5.0.8, the problem seems fixed."
      },
      {
        "user": "meeety",
        "created_at": "2021-07-26T10:02:55Z",
        "body": "It looks like I got the same issue on 5.0.8, I just posted a new comment under #1940 "
      },
      {
        "user": "ccornici",
        "created_at": "2022-01-31T19:37:29Z",
        "body": "Same here, I had about 100 items which I deleted via smth like `DELETE mycollectionname` from LiteDB Studio, and now I constantly get this error in code:\r\n`LiteDB.LiteException: 'Invalid Data on 304. Full zero: False. Page Type: Empty. Prev/Next: 4294967295/317. UniqueID: 4. ShareCounter: 1. '`"
      }
    ]
  },
  {
    "number": 1674,
    "title": "[QUESTION] POCO classes having a Guid Id",
    "created_at": "2020-05-08T14:29:25Z",
    "closed_at": "2020-05-10T00:26:16Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1674",
    "body": "Most of the data I'm dealing with has a Guid as unique identifier. When I'm trying to add an object that has a property called Id of type System.Guid to LiteDB I'm stopped by \r\n\r\n> System.InvalidCastException: 'Unable to cast object of type 'System.Guid' to type 'System.Int32'.'\r\n\r\nIs there any way to get this done? I can't change the object model.",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1674/comments",
    "author": "ssteiner",
    "comments": [
      {
        "user": "lbnascimento",
        "created_at": "2020-05-08T16:07:08Z",
        "body": "@ssteiner Could you post more info about the object you're trying to store? `Guid` is supported natively by LiteDB, there shouldn't be any issues."
      },
      {
        "user": "ssteiner",
        "created_at": "2020-05-08T16:50:37Z",
        "body": "Here's the object I'm trying to store\r\n\r\n```csharp\r\n    public class PluginConfiguration\r\n    {\r\n        public Guid Id { get; set; }\r\n\r\n        public string Name { get; set; }\r\n\r\n        public SpecialConfiguration SpecialConfig { get; set; }\r\n        \r\n    }\r\n\r\n    public class SpecialConfiguration\r\n    {\r\n        public string Value1 { get; set; }\r\n\r\n        public string Value2 { get; set; }\r\n    }"
      },
      {
        "user": "lbnascimento",
        "created_at": "2020-05-08T17:04:42Z",
        "body": "@ssteiner This class is perfectly fine, I just tested it and it works fine. Could you show me how you're opening the datafile, the collection and inserting the object?"
      },
      {
        "user": "ssteiner",
        "created_at": "2020-05-08T17:09:05Z",
        "body": "@lbnascimento sure thing - here's how I'm trying to insert. Note I commented out the EnsureIndex because I first though maybe that's what's tripping it up, but it happens either way.\r\n\r\n```csharp\r\nprivate string databaseFile = @\"c:\\temp\\litedb.db\";\r\n\r\ninternal void AddConfig(PluginConfiguration config)\r\n        {\r\n            using (var db = new LiteDatabase(databaseFile))\r\n            {\r\n                var configs = db.GetCollection<PluginConfiguration>(nameof(PluginConfiguration));\r\n                //configs.EnsureIndex(x => x.Id);\r\n                int nbRows = configs.Insert(config);\r\n            }\r\n        }"
      },
      {
        "user": "lbnascimento",
        "created_at": "2020-05-08T17:22:03Z",
        "body": "@ssteiner The error is happening because you're attributing the result of the `Insert` to an `int`. `Insert` returns the Id of the inserted document, which is a `Guid` in your case."
      },
      {
        "user": "ssteiner",
        "created_at": "2020-05-08T17:46:51Z",
        "body": "@lbnascimento : Ahh, I see. While I have you, do I need the EnsureIndex in this case or is it automatically indexed on Id?"
      },
      {
        "user": "lbnascimento",
        "created_at": "2020-05-08T17:52:05Z",
        "body": "@ssteiner It is not needed, the Id field is always indexed."
      }
    ]
  },
  {
    "number": 1673,
    "title": "[QUESTION] Nested Document DBRef",
    "created_at": "2020-05-07T22:19:31Z",
    "closed_at": "2020-05-08T18:00:28Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1673",
    "body": "Is it possible to define a DBRef on a nested property of a document?\r\n\r\nex:\r\n```csharp\r\nclass Document {\r\n  public SubDocument Sub { get; set; }\r\n}\r\n\r\nclass SubDocument {\r\n  public SomeRef Ref { get; set; }\r\n}\r\n\r\nclass SomeRef {\r\n  public Int32 Id { get; set; }\r\n}\r\n```\r\nI'm wanting the Ref property to be a DBRef.  When trying to do this with the fluent mapper:\r\n```csharp\r\nmapper.Entity<Document>().DbRef(x => x.Sub.Ref)\r\n```\r\nI get an error that `Parameter Member \"Sub.Ref\" not found in type \"Document\"`.\r\n",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1673/comments",
    "author": "lilasquared",
    "comments": [
      {
        "user": "lbnascimento",
        "created_at": "2020-05-08T01:41:49Z",
        "body": "@lilasquared This is not supported. The Id field must always be in the \"top-level\" object - either explicitly or through inheritance.\r\n\r\nMaybe I could help you further if you explained what you're trying to achieve."
      },
      {
        "user": "lilasquared",
        "created_at": "2020-05-08T02:21:44Z",
        "body": "I figured as much.  I am trying to persist a linked list / tree type structure which is very nested but also referencing entities that exist in a different collection.  Not sure how to persist it with LiteDB yet.  Might need to break out the components into other entities."
      },
      {
        "user": "lilasquared",
        "created_at": "2020-05-08T18:00:28Z",
        "body": "I think i'm getting there by flattening out the structure a bit, closing this."
      }
    ]
  },
  {
    "number": 1670,
    "title": "[QUESTION] How to properly work with JSONString",
    "created_at": "2020-05-05T16:46:48Z",
    "closed_at": "2020-05-20T14:45:39Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1670",
    "body": "Hello.\r\n\r\nI have a JSON of a class and I want to save it into the database.\r\nWhat I am currently doing \r\n\r\n\r\n    var database = new new LiteDatabase(\"demo.db\");\r\n    string JSON = \"{\"foo\":\"bar\", \"fooInt\" : 2}\";\r\n    BsonValue bson = JsonSerializer.Deserialize(JSON);\r\n    MyClass myObj = BsonMapper.Global.Deserialize<MyClass>(bson);\r\n    using (database)\r\n    {\r\n        var myClassCollection = database.GetCollection<MyClass>(\"objects\");\r\n        myClassCollection.Insert(myObj);\r\n    }\r\n\r\n\r\nI think there is a better way. Especially the steps where I transform a string to a BSON then to a MyClass.\r\n\r\nWhat do you recommend me to do ? \r\n\r\nThank you\r\n",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1670/comments",
    "author": "Morgan-6Freedom",
    "comments": [
      {
        "user": "lbnascimento",
        "created_at": "2020-05-05T17:24:10Z",
        "body": "@Thomas-6freedom If you don't need to work with a class and just want to insert the JSON in a collection, you can use untyped collections:\r\n\r\n```C#\r\nvar database = new LiteDatabase(\"demo.db\");\r\nstring JSON = \"{\\\"foo\\\":\\\"bar\\\", \\\"fooInt\\\" : 2}\";\r\nBsonDocument doc = JsonSerializer.Deserialize(JSON) as BsonDocument;\r\nusing (database)\r\n{\r\n    var myClassCollection = database.GetCollection(\"objects\");\r\n    myClassCollection.Insert(doc);\r\n}\r\n```"
      }
    ]
  },
  {
    "number": 1666,
    "title": "Selection a random document from a collection",
    "created_at": "2020-05-02T19:44:00Z",
    "closed_at": "2020-05-04T19:11:23Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1666",
    "body": "Hello,\r\nI am quite new to LiteDB, but my first impression is enthusiastic. I am trying to investigate its capabilities, which is not always easy, since the documentation is still somewhat sparse.\r\nMy first issue is as follows: I need to select random elements from a collection, how can I do it? The Query class does not seem to provide for such a possibility, is there any (in SQLite I would use ORDER BY RANDOM or so)?\r\nThanks, F.",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1666/comments",
    "author": "FrancescaY",
    "comments": [
      {
        "user": "lbnascimento",
        "created_at": "2020-05-04T16:55:49Z",
        "body": "@FrancescaY There's no specific funcionality for querying a random document. You could do something like this:\r\n\r\n```C#\r\nvar rnd = new Random();\r\nvar offset = rnd.Next(0, col.Count());\r\nvar result = col.Query().Limit(1).Offset(offset).SingleOrDefault();\r\n```"
      },
      {
        "user": "FrancescaY",
        "created_at": "2020-05-04T18:46:24Z",
        "body": "Thanks a lot Leonardo, this is really easy. Best, Francesca."
      }
    ]
  },
  {
    "number": 1664,
    "title": "[QUESTION] Upgrade v4 to v5 Issue",
    "created_at": "2020-05-01T14:16:26Z",
    "closed_at": "2020-05-04T18:00:36Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1664",
    "body": "After using the latest master to build LiteDB for the issues that were fixed in the last commit we have come across a big problem. (This would also appear to happen with the latest stable NuGet release)\r\n\r\nWe have an upgrade section to take our app's previous v4 database to v5 by calling:\r\n\r\n```\r\n_upgraded = LiteDB.Engine.LiteEngine.Upgrade(_litedb4Path, _liteDBPassword);\r\n```\r\n\r\nThis runs successfully and the application restarts, however from this point forward, access to the database is extremely slow and the main database file does not get updated at all. Only the .log file gets updated.\r\n\r\nIf a new database is created this problem does not exist, the .log file appears and then disappears and the main database file gets updated. The performance is as expected.\r\n\r\nNote: This also happens with the connection string containing upgrade=true and no manual upgrade being performed.",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1664/comments",
    "author": "DanTwomey",
    "comments": [
      {
        "user": "lbnascimento",
        "created_at": "2020-05-04T13:38:44Z",
        "body": "@DanTwomey Have you tried running Checkpoint manually?"
      },
      {
        "user": "lbnascimento",
        "created_at": "2020-05-04T18:00:26Z",
        "body": "@DanTwomey I found the issue: the auto-checkpoint was disabled during upgrade and was not re-enabled, which meant that the changes in the log file would only be commited to the datafile when `Checkpoint` was manually called.\r\n\r\nI made a commit that fixes this issue, and a release should be out soon, but in the meantime you can just run `db.Pragma(\"CHECKPOINT\", 1000)` once for every affected datafile and it should be fixed."
      }
    ]
  },
  {
    "number": 1659,
    "title": "[QUESTION] How to create a query/expression with a NOT clause",
    "created_at": "2020-04-27T21:57:15Z",
    "closed_at": "2020-04-28T12:47:56Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1659",
    "body": "In LiteDB v4 you could construct a query (using the API) like the following:\r\n\r\n`\r\nvar query = Query.Not(someOtherQuery);\r\n`\r\n\r\nIn LiteDB v5 that option no longer exists.  Is there a method that I am missing that replaces that functionality?  I would have expected to see something like this:\r\n\r\n`\r\nvar bsonExpression = Query.Not(someOtherBsonExpression);\r\n`\r\n",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1659/comments",
    "author": "jonlipsky",
    "comments": [
      {
        "user": "lbnascimento",
        "created_at": "2020-04-27T23:41:52Z",
        "body": "@jonlipsky There's no explicit `NOT` operator currently. You could do something like this:\r\n\r\n```C#\r\nBsonExpression expr2 = string.Format(\"({0})=false\", expr1.Source);\r\n```\r\n\r\nIt's a bit convoluted, but it works perfectly."
      },
      {
        "user": "jonlipsky",
        "created_at": "2020-04-28T12:47:56Z",
        "body": "That worked great.  Thanks!"
      }
    ]
  },
  {
    "number": 1656,
    "title": "[QUESTION] LiteDB 5 System.IO.IOException: The process cannot access the file because it is being used by another process",
    "created_at": "2020-04-27T12:48:55Z",
    "closed_at": "2020-04-29T16:06:50Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1656",
    "body": "We currently have a client application which consists of a Windows Service and a WPF application, both utilising LiteDB and targeting .Net Framework 4.8.\r\n\r\n\r\nThe windows service runs under the local system account and the WPF app runs under the user's account.\r\n\r\n\r\nWe made the choice to upgrade from 4.1.4 to 5.0.7 in the hopes that concurrency was better supported.\r\n\r\n\r\nBoth WPF app and win service access the same LiteDB (read and write) with connection=shared using the below connection string:\r\n\r\n\r\n```\"Filename=C:\\temp\\Test-v5.db;password=pass1234;connection=shared\"```\r\n\r\n```\r\nusing (var db = new LiteDatabase(@\"Filename=C:\\temp\\Test-v5.db;password=pass1234;connection=shared\"))\r\n{\r\n\t...\r\n}\r\n```\r\n\r\nWe seem to have come across a breaking issue however and can't seem to find anyone else having the same/similar issue or anything else that could fix it.\r\n\r\nThe service frequently polls the database to handle and process data that has been inserted by the WPF app with both read and write operations.\r\nThe WPF app also reads and writes to the database but on a more sporadic time frame based on user interaction.\r\n\r\nDespite both applications accessing the database in the same way and both specifying connection=shared, we are getting exceptions from both as they appear to be clashing.\r\n\r\n\r\n\r\n\r\n```\r\n\"System.IO.IOException: The process cannot access the file 'C:\\temp\\Test-v5.db' because it is being used by another process.\r\n   at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath)\r\n   at System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost)\r\n   at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options)\r\n   at LiteDB.Engine.FileStreamFactory.GetStream(Boolean canWrite, Boolean sequencial)\r\n   at LiteDB.Engine.StreamPool.<>c__DisplayClass3_0.<.ctor>b__0()\r\n   at System.Lazy`1.CreateValue()\r\n   at System.Lazy`1.LazyInitValue()\r\n   at System.Lazy`1.get_Value()\r\n   at LiteDB.Engine.DiskService..ctor(EngineSettings settings, Int32[] memorySegmentSizes)\r\n   at LiteDB.Engine.LiteEngine..ctor(EngineSettings settings)\r\n   at LiteDB.SharedEngine.OpenDatabase()\r\n   at LiteDB.SharedEngine.Query(String collection, Query query)\r\n   at LiteDB.LiteQueryable`1.<ToDocuments>d__26.MoveNext()\r\n   at System.Linq.Enumerable.WhereSelectEnumerableIterator`2.MoveNext()\r\n   at System.Linq.Buffer`1..ctor(IEnumerable`1 source)\r\n   at System.Linq.OrderedEnumerable`1.<GetEnumerator>d__1.MoveNext()\r\n   at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)\r\n   at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)\r\n   at Pixel_Upload_Service.UploadService.GetPendingJobsFromLiteDB(Boolean _allJobs) in D:\\Users\\Daniel\\Desktop\\LiteDB v5 Test\\Upload Service\\UploadService.cs:line 2654\"\r\n```\r\n\r\nAs a side note when testing this issue and trying to figure out what was going on, we found that we did not get any exceptions with two WPF apps reading and writing from the same database, however as soon as we swap one WPF app out for a Windows Service, we start getting exceptions.\r\n\r\n\r\nDoes anyone know how we can stop this happening?",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1656/comments",
    "author": "DanTwomey",
    "comments": [
      {
        "user": "lbnascimento",
        "created_at": "2020-04-27T13:48:28Z",
        "body": "@DanTwomey Could you try with the latest master?"
      },
      {
        "user": "DanTwomey",
        "created_at": "2020-04-27T14:45:22Z",
        "body": "@lbnascimento This seems to have worked, don't seem to be getting the exceptions any more but will keep an eye out.\r\n\r\nDo you have an ETA on a NuGet release?\r\nIf not I assume this is stable enough to go into production?"
      },
      {
        "user": "lbnascimento",
        "created_at": "2020-04-27T17:31:29Z",
        "body": "@DanTwomey Next incremental release should be out soon, no ETA though. However, if you check the commits since the latest release, most of them are fixes for specific issues in the mapper. No internal changes to the engine were made (other than the fix for this issue, which was very simple)."
      },
      {
        "user": "DanTwomey",
        "created_at": "2020-04-28T09:17:16Z",
        "body": "@lbnascimento \r\n\r\nI seem to still be getting System IO Exceptions with the latest Master, If the WIndows Service is running and accessing the database first and then the WPF app launches and attempts to use the database I get a System IO Exception.\r\n\r\nIf I launch the WPF app first, then start the service, I don't get any exceptions and I can continue to close and re-launch the WPF app with no issues. \r\n\r\nI had both of these exceptions from the WPF App whilst the service was started first:\r\n\r\n```\r\n\"System.IO.IOException: The process cannot access the file 'C:\\temp\\Test-v5.db' because it is being used by another process.\r\n   at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath)\r\n   at System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost)\r\n   at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options)\r\n   at LiteDB.Engine.FileStreamFactory.GetStream(Boolean canWrite, Boolean sequencial) in D:\\Users\\Daniel\\Downloads\\LiteDB-master\\LiteDB-master\\LiteDB\\Engine\\Disk\\StreamFactory\\FileStreamFactory.cs:line 43\r\n   at LiteDB.Engine.StreamPool.<>c__DisplayClass3_0.<.ctor>b__0() in D:\\Users\\Daniel\\Downloads\\LiteDB-master\\LiteDB-master\\LiteDB\\Engine\\Disk\\StreamFactory\\StreamPool.cs:line 29\r\n   at System.Lazy`1.CreateValue()\r\n   at System.Lazy`1.LazyInitValue()\r\n   at System.Lazy`1.get_Value()\r\n   at LiteDB.Engine.StreamPool.get_Writer() in D:\\Users\\Daniel\\Downloads\\LiteDB-master\\LiteDB-master\\LiteDB\\Engine\\Disk\\StreamFactory\\StreamPool.cs:line 35\r\n   at LiteDB.Engine.DiskService..ctor(EngineSettings settings, Int32[] memorySegmentSizes) in D:\\Users\\Daniel\\Downloads\\LiteDB-master\\LiteDB-master\\LiteDB\\Engine\\Disk\\DiskService.cs:line 59\r\n   at LiteDB.Engine.LiteEngine..ctor(EngineSettings settings) in D:\\Users\\Daniel\\Downloads\\LiteDB-master\\LiteDB-master\\LiteDB\\Engine\\LiteEngine.cs:line 115\r\n   at LiteDB.SharedEngine.OpenDatabase() in D:\\Users\\Daniel\\Downloads\\LiteDB-master\\LiteDB-master\\LiteDB\\Client\\Shared\\SharedEngine.cs:line 55\r\n   at LiteDB.SharedEngine.Query(String collection, Query query) in D:\\Users\\Daniel\\Downloads\\LiteDB-master\\LiteDB-master\\LiteDB\\Client\\Shared\\SharedEngine.cs:line 138\r\n   at LiteDB.LiteQueryable`1.ExecuteReader() in D:\\Users\\Daniel\\Downloads\\LiteDB-master\\LiteDB-master\\LiteDB\\Client\\Database\\LiteQueryable.cs:line 238\r\n   at LiteDB.LiteQueryable`1.<ToDocuments>d__26.MoveNext() in D:\\Users\\Daniel\\Downloads\\LiteDB-master\\LiteDB-master\\LiteDB\\Client\\Database\\LiteQueryable.cs:line 246\r\n   at System.Linq.Enumerable.WhereSelectEnumerableIterator`2.MoveNext()\r\n   at System.Linq.Enumerable.FirstOrDefault[TSource](IEnumerable`1 source)\r\n   at LiteDB.LiteCollection`1.FindOne(BsonExpression predicate) in D:\\Users\\Daniel\\Downloads\\LiteDB-master\\LiteDB-master\\LiteDB\\Client\\Database\\Collections\\Find.cs:line 73\r\n   at LiteDB.LiteCollection`1.FindOne(Expression`1 predicate) in D:\\Users\\Daniel\\Downloads\\LiteDB-master\\LiteDB-master\\LiteDB\\Client\\Database\\Collections\\Find.cs:line 88\r\n   at Helpers.JobHelper.GetJobFromLiteDB(String _jobId) in D:\\Users\\Daniel\\Desktop\\LiteDB v5 Test\\Helpers\\JobHelper.cs:line 79\"\r\n```\r\n\r\nMutex exception I wasn't getting yesterday:\r\n\r\n```\r\n\"System.UnauthorizedAccessException: Access to the path 'Global\\C26B5942FD8ABA8D203C8DC30C8BE263EFB29177.Mutex' is denied.\r\n   at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath)\r\n   at System.Threading.Mutex.MutexTryCodeHelper.MutexTryCode(Object userData)\r\n   at System.Runtime.CompilerServices.RuntimeHelpers.ExecuteCodeWithGuaranteedCleanup(TryCode code, CleanupCode backoutCode, Object userData)\r\n   at System.Threading.Mutex.CreateMutexWithGuaranteedCleanup(Boolean initiallyOwned, String name, Boolean& createdNew, SECURITY_ATTRIBUTES secAttrs)\r\n   at System.Threading.Mutex..ctor(Boolean initiallyOwned, String name, Boolean& createdNew, MutexSecurity mutexSecurity)\r\n   at System.Threading.Mutex..ctor(Boolean initiallyOwned, String name)\r\n   at LiteDB.SharedEngine..ctor(EngineSettings settings) in D:\\Users\\Daniel\\Downloads\\LiteDB-master\\LiteDB-master\\LiteDB\\Client\\Shared\\SharedEngine.cs:line 26\r\n   at LiteDB.ConnectionString.CreateEngine() in D:\\Users\\Daniel\\Downloads\\LiteDB-master\\LiteDB-master\\LiteDB\\Client\\Structures\\ConnectionString.cs:line 116\r\n   at LiteDB.LiteDatabase..ctor(ConnectionString connectionString, BsonMapper mapper) in D:\\Users\\Daniel\\Downloads\\LiteDB-master\\LiteDB-master\\LiteDB\\Client\\Database\\LiteDatabase.cs:line 53\r\n   at LiteDB.LiteDatabase..ctor(String connectionString, BsonMapper mapper) in D:\\Users\\Daniel\\Downloads\\LiteDB-master\\LiteDB-master\\LiteDB\\Client\\Database\\LiteDatabase.cs:line 36\r\n   at Helpers.LiteDBHelper.GetDeviceFromLiteDB() in D:\\Users\\Daniel\\Desktop\\LiteDB v5 Test\\Helpers\\LiteDBHelper.cs:line 109\"\r\n```"
      },
      {
        "user": "DanTwomey",
        "created_at": "2020-04-28T09:27:26Z",
        "body": "Some more info that could be useful:\r\n\r\nIf I run the WPF App as Administrator (Right click -> Run As Administrator) there are no exceptions from the WPF App, without elevation, I get the exceptions straight away."
      },
      {
        "user": "lbnascimento",
        "created_at": "2020-04-28T13:33:40Z",
        "body": "@DanTwomey Could you test with the latest master? I made some changes, I believe it is working now."
      },
      {
        "user": "DanTwomey",
        "created_at": "2020-04-29T10:39:41Z",
        "body": "@lbnascimento \r\n\r\nThe changes seem to have fixed the issue with the Mutex being used by both applications, both are now able to read and write to the database, however we are now randomly getting this exception:\r\n\r\n```\r\n\"System.Threading.AbandonedMutexException: The wait completed due to an abandoned mutex.\r\n   at System.Threading.WaitHandle.InternalWaitOne(SafeHandle waitableSafeHandle, Int64 millisecondsTimeout, Boolean hasThreadAffinity, Boolean exitContext)\r\n   at System.Threading.WaitHandle.WaitOne(Int32 millisecondsTimeout, Boolean exitContext)\r\n   at System.Threading.WaitHandle.WaitOne()\r\n   at LiteDB.SharedEngine.OpenDatabase() in D:\\Users\\Daniel\\Downloads\\LiteDB-master\\LiteDB-master\\LiteDB\\Client\\Shared\\SharedEngine.cs:line 64\r\n   at LiteDB.SharedEngine.Query(String collection, Query query) in D:\\Users\\Daniel\\Downloads\\LiteDB-master\\LiteDB-master\\LiteDB\\Client\\Shared\\SharedEngine.cs:line 157\r\n   at LiteDB.LiteQueryable`1.ExecuteReader() in D:\\Users\\Daniel\\Downloads\\LiteDB-master\\LiteDB-master\\LiteDB\\Client\\Database\\LiteQueryable.cs:line 238\r\n   at LiteDB.LiteQueryable`1.<ToDocuments>d__26.MoveNext() in D:\\Users\\Daniel\\Downloads\\LiteDB-master\\LiteDB-master\\LiteDB\\Client\\Database\\LiteQueryable.cs:line 246\r\n   at System.Linq.Enumerable.WhereSelectEnumerableIterator`2.MoveNext()\r\n   at System.Linq.Enumerable.FirstOrDefault[TSource](IEnumerable`1 source)\r\n   at LiteDB.LiteCollection`1.FindOne(BsonExpression predicate) in D:\\Users\\Daniel\\Downloads\\LiteDB-master\\LiteDB-master\\LiteDB\\Client\\Database\\Collections\\Find.cs:line 73\r\n   at LiteDB.LiteCollection`1.FindOne(Expression`1 predicate) in D:\\Users\\Daniel\\Downloads\\LiteDB-master\\LiteDB-master\\LiteDB\\Client\\Database\\Collections\\Find.cs:line 88\r\n   at Pixel_Upload_Service.Helpers.JobHelper.GetJobFromLiteDB(String _jobId) in H:\\Repos\\Upload Service\\Helpers\\JobHelper.cs:line 29\"\r\n```\r\n\r\nOnce this exception happens in the service, the WPF app will infinitely wait on the first collection.FindOne() and never continue until the service has been restarted.\r\n\r\nUnfortunately we cannot yet find a way to force this issue to reproduce consistently to give any steps."
      },
      {
        "user": "lbnascimento",
        "created_at": "2020-04-29T16:06:49Z",
        "body": "@DanTwomey I made a commit that should fix the AbandonedMutexException problem, try it and see if it works for you. I'm going to close this issue, since the original issue was solved. If the problem persists if you have another problem, please open another issue."
      }
    ]
  },
  {
    "number": 1655,
    "title": "[QUESTION] How to properly delete file from filestorage so that db size also reduces?",
    "created_at": "2020-04-25T15:20:23Z",
    "closed_at": "2020-04-27T04:24:25Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1655",
    "body": "Currently when i delete file stored in filestorage, the size of db file does not reduce. I use code as below for\r\n```\r\npublic bool deleteById(string id)\r\n        {\r\n            using (var flowDB = new LiteDatabase(dbName))\r\n            {\r\n                // first delete any files stored for this\r\n                flowDB.BeginTrans();\r\n                var col = flowDB.GetCollection<FlowFileModel>(COLLECTION_NAME);\r\n                var result = col.Find(x => x.Id == id).First<FlowFileModel>();\r\n                flowDB.FileStorage.Delete(result.StoredFileId);\r\n                flowDB.Commit();\r\n\r\n                // delete the object\r\n                var ret = flowDB.GetCollection<FlowFileModel>(COLLECTION_NAME)\r\n                               .Delete(id);\r\n                return ret;\r\n            }\r\n        }\r\n```\r\n\r\nNow the issue is when i see the objects and associated file in LiteDB studio it is gone. But after closing the application the db size remains as it was with file before. Am i missing something?",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1655/comments",
    "author": "ranjanpr",
    "comments": [
      {
        "user": "zmira",
        "created_at": "2020-04-25T22:19:26Z",
        "body": "have you tried rebuilding the database, using `flowDB.Rebuild();` before returning?"
      },
      {
        "user": "ranjanpr",
        "created_at": "2020-04-27T04:24:13Z",
        "body": "Thanks @zmira . It worked after adding `flowDB.Rebuild();` as you said before returning."
      }
    ]
  },
  {
    "number": 1649,
    "title": "[QUESTION] Update record without overwriting unspecified fields",
    "created_at": "2020-04-21T21:41:26Z",
    "closed_at": "2020-05-20T14:46:11Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1649",
    "body": "Let's say I have a `Person` object:\r\n\r\n```json\r\n{\r\n    \"name\": \"John\",\r\n    \"age\": 13\r\n}\r\n```\r\n\r\nThis object is stored in a LiteDB collection. If I call `Update` on this object with the following:\r\n```json\r\n{\r\n    \"age\": 15\r\n}\r\n```\r\n`\"name\"` will be overridden back to null.\r\nIs there any way to bypass this, or will I have to do it manually?",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1649/comments",
    "author": "ghost",
    "comments": [
      {
        "user": "lbnascimento",
        "created_at": "2020-04-22T15:57:56Z",
        "body": "@TheAb03 If you class has an id (as it should, because the resulting document will have an id anyway) and you're willing to use SQL syntax, you could do something like `db.Execute($\"update collection set age = 15 where _id = {myid}\")`."
      }
    ]
  },
  {
    "number": 1646,
    "title": "In memory database with encryption, persisting to file system",
    "created_at": "2020-04-21T07:51:26Z",
    "closed_at": "2020-04-22T18:56:08Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1646",
    "body": "I want to use LiteDB to create an in-memory database with encryption and once it has been build I want to persist it to disk.\r\n\r\nIf I use a memorystream to persist it, I cannot specify a password.\r\nIf I use :memory: to create it, I cannot persist it.\r\n\r\nAny hints on how to do this ?",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1646/comments",
    "author": "mvdzwaan",
    "comments": [
      {
        "user": "lbnascimento",
        "created_at": "2020-04-22T18:06:15Z",
        "body": "@mvdzwaan Something like this should work:\r\n```C#\r\nvar stream = new MemoryStream();\r\nvar aesStream = new LiteDB.Engine.AesStream(\"mypassword\", stream);\r\n\r\nusing (var db = new LiteDatabase(aesStream))\r\n{\r\n    //do whatever you want\r\n}\r\n\r\nusing (var fs = File.Create(\"C:\\\\Temp\\\\outputfile.db\"))\r\n{\r\n    stream.Seek(0, SeekOrigin.Begin);\r\n    stream.CopyTo(fs);\r\n}\r\n```"
      },
      {
        "user": "mvdzwaan",
        "created_at": "2020-04-22T18:56:07Z",
        "body": "thanks"
      }
    ]
  },
  {
    "number": 1643,
    "title": "[QUESTION]",
    "created_at": "2020-04-20T06:16:04Z",
    "closed_at": "2020-04-22T17:53:19Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1643",
    "body": " I'm a newbie in LiteDB. I make an asp.net mvc project to interact with a LiteDB file. All function is ok, but the data only save in DB-log.db file. DB.db file don't change. \r\n Please help me how to commit data from log file to main db file.\r\n Thanks!",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1643/comments",
    "author": "hvson",
    "comments": [
      {
        "user": "lbnascimento",
        "created_at": "2020-04-20T15:06:15Z",
        "body": "@hvson While auto-checkpoint is supposed to run eventually (by default, every time the log file reaches 8MB), it might not happen if your application is always using the datafile.\r\n\r\nTry running a `db.Checkpoint()` every once in a while."
      },
      {
        "user": "hvson",
        "created_at": "2020-04-21T00:44:30Z",
        "body": "Thanks @lbnascimento. That's solve my problem. Thank a lot!"
      },
      {
        "user": "TigerHix",
        "created_at": "2020-06-02T05:38:10Z",
        "body": "This should be in the documentation. Suffered a lot of strange data loss and just knew this was the cause."
      }
    ]
  },
  {
    "number": 1638,
    "title": "[QUESTION] Many to Many relation in LiteDB. Is it possible or use other approach?",
    "created_at": "2020-04-17T11:18:06Z",
    "closed_at": "2020-09-10T15:36:00Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1638",
    "body": "Using LiteDB I have the following Pocos:\r\n\r\n```\r\npublic class Post { \r\n  public ObjectId Id { get; set; }\r\n  public String Title { get; set; }\r\n  public String Content { get; set; }\r\n}\r\n\r\npublic class Tag { \r\n  public ObjectId Id { get; set; }\r\n  public String Name { get; set; }\r\n}\r\n```\r\n\r\nEach Post can have many Tags and each Tag can be used in many Posts.\r\n\r\nIs it possible to create a Many to Many relation in LiteDB?\r\n\r\nMy idea would be create a new POCO named PostTag:\r\n\r\n```\r\npublic class PostTag { \r\n  public ObjectId PostId { get; set; }\r\n  public ObjectId TagId { get; set; }\r\n}\r\n```\r\n\r\nAnd then update the Post and Tag Pocos to the following:\r\n\r\n```\r\npublic class Post { \r\n  public ObjectId Id { get; set; }\r\n  public String Title { get; set; }\r\n  public String Content { get; set; }\r\n  public List<PostTag> { get; set; }\r\n}\r\n\r\npublic class Tag { \r\n  public ObjectId Id { get; set; }\r\n  public String Name { get; set; }\r\n  public List<PostTag> { get; set; }\r\n}\r\n```\r\n\r\nI am not sure if this makes sense. Should I simply use the following?\r\n\r\n```\r\npublic class Post { \r\n  public ObjectId Id { get; set; }\r\n  public String Title { get; set; }\r\n  public String Content { get; set; }\r\n  public List<Tag> { get; set; }\r\n}\r\n```\r\n\r\nAnd what if I need all Tags used in posts?\r\n\r\nI would get all tags in all posts and create a list with unique names?",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1638/comments",
    "author": "mdmoura",
    "comments": [
      {
        "user": "lbnascimento",
        "created_at": "2020-04-17T15:07:29Z",
        "body": "@mdmoura I recommend storing each class in its collection and a list of tags as `BsonRef` in every post.\r\n\r\n```C#\r\npublic class Post\r\n{\r\n    public ObjectId Id { get; set; }\r\n    public String Title { get; set; }\r\n    public String Content { get; set; }\r\n\r\n    [BsonRef(\"tags\")]\r\n    public List<Tag> Tags { get; set; }\r\n}\r\n\r\npublic class Tag\r\n{\r\n    public ObjectId Id { get; set; }\r\n    public String Name { get; set; }\r\n}\r\n```\r\n\r\nThis would allow you to efficiently list all posts, list all ags and list all tags in a Post. If you wanted to list all Posts with a specific tag, you could just get the id of the tag you're searching and do something like `postsCollection.Find(x => x.Tags.Count(x => x.Id == myTag) > 0)` even without the Include, which is more efficient.\r\n"
      },
      {
        "user": "mdmoura",
        "created_at": "2020-04-18T00:40:10Z",
        "body": "@lbnascimento I tried the following but got really strange results:\r\n\r\n            BsonMapper mapper = BsonMapper.Global;\r\n            \r\n            mapper.Entity<Post>().DbRef(x => x.Tags, \"tags\");\r\n\r\n            List<Post> model = new List<Post> {\r\n              new Post {\r\n                Title = \"First Post\",\r\n                Slug = \"first-post\",\r\n                Tags = new List<Tag> { \r\n                  new Tag { Name = \"Book\", Slug = \"book\" },\r\n                  new Tag { Name = \"Europe\", Slug = \"europe\" } \r\n                },\r\n              },\r\n              new Post {\r\n                Title = \"Second Post\",\r\n                Slug = \"second-post\",\r\n                Tags = new List<Tag> { \r\n                  new Tag { Name = \"Travel\", Slug = \"travel\" },\r\n                  new Tag { Name = \"Europe\", Slug = \"europe\" } \r\n                }\r\n              }\r\n            };\r\n            ILiteCollection<Tag> tags = database.GetCollection<Tag>(\"tags\");\r\n            tags.EnsureIndex(x => x.Slug);\r\n            tags.InsertBulk(data.SelectMany(x => x.Tags));\r\n\r\n            ILiteCollection<Post> posts = database.GetCollection<Post>(\"posts\");\r\n            posts.EnsureIndex(x => x.Slug);\r\n            posts.InsertBulk(data);\r\n\r\n            var a = tags.FindAll();\r\n\r\n            var b = posts.Include(x => x.Tags).Find(x => x.Tags.Count(x => x.Slug == \"book\") > 0);\r\n\r\nWhen I check `a` I have 4 tags: Book, Europe, Travel, Europe. Shouldn't Europe appear only once?\r\n\r\nAnd when I check `b` I have the two posts ... The second post should not be returned because it does not have the tag with slightly \"book\".\r\n\r\nWhat am I missing? Am I inserting the data incorrectly?\r\n\r\n\r\n"
      },
      {
        "user": "mdmoura",
        "created_at": "2020-04-18T18:06:18Z",
        "body": "@lbnascimento I also tried the following:\r\n\r\n    posts.Include(x => x.Tags).Find(x => x.Tags.Select(x => x.Slug).Any(x => x == \"book\"));\r\n\r\nAnd this returns an empty list ...\r\n\r\nI think something might be wrong when using filters with child collections. No?"
      },
      {
        "user": "mdmoura",
        "created_at": "2020-04-18T18:26:29Z",
        "body": "@lbnascimento The following query returns the one post, as expected, that contaoins  a Tag with slug book:\r\n\r\n           var a = lessons.Include(x => x.Topics).FindAll()\r\n                        .Where(x => x.Topics.Count(x => x.Slug == \"book\") > 0)\r\n                        .ToList();\r\n\r\nThe following return all record like it wasn't filtered.\r\n\r\n           var b= lessons.Include(x => x.Topics)\r\n                       .Find(x => x.Topics.Count(x => x.Slug == \"book\") > 0)\r\n                       .ToList();\r\n\r\nAny idea why?\r\n                       \r\n                                    \r\n"
      },
      {
        "user": "zmira",
        "created_at": "2020-04-18T22:35:31Z",
        "body": "@mdmoura `a` will apply an in-memory filter (.NET LINQ), after retrieving all items from `litedb`, whereas `b` will attempt to apply the filter while retrieving the desired items from `litedb`.\r\n\r\nHave you tried the below?\r\n```C#\r\nvar c = lessons.Include(x => x.Topics)\r\n                   .Find(\"Topics[*].Slug ANY = @0\", \"book\")\r\n                   .ToList();\r\n```"
      },
      {
        "user": "lbnascimento",
        "created_at": "2020-04-20T14:24:04Z",
        "body": "@mdmoura Regarding `a`, what I believe is happening is that you're using autoid for tags (by not setting an Id value for your tags, LiteDB creates one automatically upon insertion) and it doesn't know that the \"Europe\" tag in the first post and the \"Europe\" tag in the same post are actually the same, and ends up inserting it twice. Try creating the tags beforehand and attributing them to each post.\r\n\r\nRegarding `b`, there was a small bug with Linq-to-BsonExpression mapping, which I fixed in the master. There is also a limitation in the mapping regarding nested Linq expressions with the same parameter name (I believe this limitation was undocumented, I'll update the documentation). So, if you use our latest master and change your Linq to `Find(x => x.Tags.Count(y => y.Slug == \"book\") > 0)`, it should work.\r\n\r\nUsing `Find(\"Tags[*].Slug any = 'book'\")`, simliar to what @zmira proposed, should work too.\r\n\r\n"
      }
    ]
  },
  {
    "number": 1631,
    "title": "[QUESTION] Can LiteCollection be used in Concurrency?",
    "created_at": "2020-04-14T08:53:51Z",
    "closed_at": "2020-04-14T14:23:36Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1631",
    "body": "**Code to Reproduce**\r\n```\r\nprotected async virtual Task<IEnumerable<T>> ReadAllItems<T>(LiteCollection<T> collection)\r\n{\r\n    return await Task.Run(() =>\r\n    {\r\n          return collection.FindAll().ToList();\r\n     });\r\n}\r\n```\r\n\r\nI am getting the collection objection once and passing it to the above method. calling above method multiple times causing the error SIGSEGV.\r\n\r\nWanted to confirm if we support LiteCollection in concurrency?",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1631/comments",
    "author": "sanjiv-saini",
    "comments": [
      {
        "user": "lbnascimento",
        "created_at": "2020-04-14T14:23:36Z",
        "body": "@sanju-singh I'm going to close this, since it is a duplicate of #1627. Let's keep all future discussions there."
      }
    ]
  },
  {
    "number": 1625,
    "title": "How filter result by reference column?",
    "created_at": "2020-04-11T20:08:56Z",
    "closed_at": "2020-04-14T16:07:56Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1625",
    "body": "Hi.\r\nThis is not work:\r\n\r\n`var result = db.GetCollection<Product>(\"products\").Include(x => x.Category).Find(x => x.Category.Id == 14).ToList();`\r\n\r\nI receive empty result. \r\nThis work:\r\n\r\n`var result = db.GetCollection<Product>(\"products\").Include(x => x.Category).FindAll().Where(x => x.Category.Id == 14).ToList();`\r\n\r\nWhat I am doing wrong? How to filter products by category?\r\n```\r\n[BsonRef(\"categories\")]\r\npublic Category Category { get; set; }\r\n```",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1625/comments",
    "author": "fu-hsi",
    "comments": [
      {
        "user": "lbnascimento",
        "created_at": "2020-04-13T14:09:56Z",
        "body": "@fu-hsi Your first example should be working. Could you provide us the datafile you're using?"
      },
      {
        "user": "fu-hsi",
        "created_at": "2020-04-13T14:15:13Z",
        "body": "Hi.\r\nNow I use Repository-Pattern because of this, but I will try again and give you more details soon."
      },
      {
        "user": "fu-hsi",
        "created_at": "2020-04-13T16:19:43Z",
        "body": "```\r\n    public class Category\r\n    {\r\n        [BsonId]\r\n        public int Id { get; set; }\r\n        public string Name { get; set; }\r\n    }\r\n```\r\n\r\n```\r\n    public class Product\r\n    {\r\n        [BsonId]\r\n        public int Id { get; set; }\r\n\r\n        [BsonRef(\"categories\")]\r\n        public Category Category { get; set; }\r\n\r\n        public string Name { get; set; }\r\n    }\r\n```\r\n\r\nData in database:\r\n```\r\n[\r\n  {\r\n    \"Id\": 1,\r\n    \"Category\": {\r\n      \"Id\": 1,\r\n      \"Name\": \"Kategoria 12.04.2020 08:57:22\"\r\n    },\r\n    \"Name\": \"Produkt 12.04.2020 08:57:26\",\r\n  }\r\n]\r\n```\r\nNot working (with Include):\r\n```\r\nvar result = db.GetCollection<Product>(\"products\").Include(x => x.Category).Find(x => x.Category.Id == 1).ToList();\r\n```\r\n\r\nWorking (without Include):\r\n```\r\nvar result = db.GetCollection<Product>(\"products\").Find(x => x.Category.Id == 1).ToList();\r\n```"
      },
      {
        "user": "lbnascimento",
        "created_at": "2020-04-13T16:30:25Z",
        "body": "@fu-hsi The `Category` data was inserted incorrectly: it was inserted as a subdocument of `Product` instead of a reference to another collection. You should remove this entry, insert the categories in a separate collection (if you haven't already) and then insert the product data again (the existence of `BsonRefAttribute` should be enough for it to be inserted correctly this time)."
      },
      {
        "user": "fu-hsi",
        "created_at": "2020-04-13T16:37:42Z",
        "body": "This is only data dump from result variable.\r\nInsert query:\r\n\r\n```\r\nproducts.Insert(new Product { Name = \"Produkt \" + DateTime.Now, Category = category });\r\n```\r\nData from LiteDB Studio:\r\n\r\n```\r\n/* 1 */\r\n{\r\n  \"_id\": 1,\r\n  \"Category\": \r\n  {\r\n    \"$id\": 1,\r\n    \"$ref\": \"categories\"\r\n  },\r\n  \"Name\": \"Produkt 12.04.2020 08:57:26\",\r\n}\r\n```"
      },
      {
        "user": "lbnascimento",
        "created_at": "2020-04-14T16:07:56Z",
        "body": "@fu-hsi This issue has been fixed and its fix is already available in version 5.0.7."
      },
      {
        "user": "fu-hsi",
        "created_at": "2020-04-14T16:17:59Z",
        "body": "Yes, it is OK now, thanks!"
      }
    ]
  },
  {
    "number": 1624,
    "title": "[QUESTION] Could you please release the recent fixes and changes?",
    "created_at": "2020-04-09T16:56:48Z",
    "closed_at": "2020-04-10T16:02:20Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1624",
    "body": "Could you please release the recent fixes and changes? v5 is officially not beta but production and every reported bug or issue is a show stopper for some users.\r\n\r\nDo not get this as a complain please. The project is amazing and the team response too. Just do not hold the available fixes for long please, if it is technically possible.\r\n\r\nIf it is not technically possible, could you share your pain points? We/users may help perhaps.\r\n\r\nThank you for your great work.",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1624/comments",
    "author": "nightroman",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2020-04-09T18:32:32Z",
        "body": "Hi @nightroman, current version has 14 days and only 47 downloads (in nuget couter)... and we are already working in 5.1 \"single datafile\" version.\r\n\r\nTomorrow I release next 5.0.6."
      },
      {
        "user": "nightroman",
        "created_at": "2020-04-09T18:40:08Z",
        "body": "I think it does not matter how many days passed since the last release or how many downloads happened. If a user reports a bug and it is fixed and tests pass it should be released. What is the reason to hold it?\r\n\r\nNB But if we pay attention to these numbers then I find them worrying or at least interesting, 30 days old release has 3,766 download and 14 days old release 47 (it's probably larger, NuGet does not update it often).\r\n"
      },
      {
        "user": "nightroman",
        "created_at": "2020-04-09T18:47:09Z",
        "body": "Also, people keep posting issues about already fixed bugs. The answer \"this is already fixed and will be available in the next incremental release\" is quite common. These cases could be avoided, at least for \"up to date users\"."
      }
    ]
  },
  {
    "number": 1621,
    "title": "[QUESTION] Why is the max index string/binary length 1021, not 1023?",
    "created_at": "2020-04-08T05:35:57Z",
    "closed_at": "2020-04-14T15:26:14Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1621",
    "body": "The latest master supports longer indexes, the maximum length is 1023. This is really great.\r\n\r\nBut in fact the maximum string (and probably binary) length is 1021 (try and see errors on 1022 or 1023). Why is this?\r\n\r\nAs far as I understand these two \"difference\" bytes are data type and length bytes packed together.\r\nAnd presumably they may encode the length 1023, right? Then why to limit the allowed length to 1021?\r\n\r\nP.S. If this limit 1021 is really required then it should be documented explicitly. Because the documented \"1023 after serialization\" is less helpful. It is not clear what the actual string/binary length is. Developers may want to know the exact actual limit for checks in applications before serializing and getting exceptions.",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1621/comments",
    "author": "nightroman",
    "comments": [
      {
        "user": "lbnascimento",
        "created_at": "2020-04-08T15:22:40Z",
        "body": "@nightroman You are correct: in practice, string and binary lengths in index entries are limited to 1021 bytes. I will update the documentation to reflect this limitation."
      },
      {
        "user": "nightroman",
        "created_at": "2020-04-08T16:19:36Z",
        "body": "I am still curious why? Two bytes of packed type and length may keep the length info up to 1023, right? "
      },
      {
        "user": "nightroman",
        "created_at": "2020-04-08T16:30:16Z",
        "body": "And there is a bug / inconsistent checks:\r\n\r\nIn here the key length is limited by 1023:\r\n        \r\n        public static void WriteIndexKey(this BufferSlice buffer, BsonValue value, int offset)\r\n        {\r\n            ENSURE(value.GetBytesCount(false) <= MAX_INDEX_KEY_LENGTH, \"index key must have less than 1023 bytes\");\r\n\r\nBut in these two places it is limited by 1021:\r\n\r\n        public void Insert(IEnumerable<KeyValuePair<BsonValue, PageAddress>> items, int order, BufferSlice buffer)\r\n                var keyLength = GetKeyLength(item.Key);\r\n                if (keyLength > MAX_INDEX_KEY_LENGTH) throw LiteException.InvalidIndexKey($\"Sort key must be less than {MAX_INDEX_KEY_LENGTH} bytes.\");\r\n\r\n\r\n        private IndexNode AddNode(CollectionIndex index, BsonValue key, PageAddress dataBlock, byte level, IndexNode last)\r\n        {\r\n            // get a free index page for head note\r\n            var bytesLength = IndexNode.GetNodeLength(level, key, out var keyLength);\r\n\r\n            // test for index key maxlength (length must fit in 1 byte)\r\n            if (keyLength > MAX_INDEX_KEY_LENGTH) throw LiteException.InvalidIndexKey($\"Index key must be less than {MAX_INDEX_KEY_LENGTH} bytes.\");\r\n"
      },
      {
        "user": "nightroman",
        "created_at": "2020-04-08T16:33:31Z",
        "body": "Either the first check should be corrected or the last two. I think it is better to correct the last two checks. I still have no answer why 1021 is the limit, not 1023 (which fits to 2 bytes together with type)."
      }
    ]
  },
  {
    "number": 1620,
    "title": "[QUESTION] How can I store an array of strings in this database?",
    "created_at": "2020-04-07T18:34:05Z",
    "closed_at": "2020-04-08T08:11:42Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1620",
    "body": "I don`t wanna create new class to do this. \r\nI need fast way to store and read array of strings and nothing else.\r\n\r\nIs there a method to do this?\r\nIf not, are there plans to add?\r\n\r\n",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1620/comments",
    "author": "riksking",
    "comments": [
      {
        "user": "lbnascimento",
        "created_at": "2020-04-07T19:32:37Z",
        "body": "@riksking I took the code you mentioned in #1597 and modified it:\r\n\r\n```C#\r\npublic static void WriteToExistDb(IEnumerable<string> chunk, string pathToDb, string tableName)\r\n{\r\n\tusing (var testDb = new LiteDatabase(pathToDb))\r\n\t{\r\n\t\tvar col = testDb.GetCollection(tableName);\r\n\t\tforeach (var str in chunk)\r\n\t\t{\r\n\t\t\tcol.Insert(new BsonDocument { [\"value\"] = str });\r\n\t\t}\r\n\t}\r\n}\r\n\r\npublic static IEnumerable<string> ReadFromExistDb(string pathToDb, sting tableName)\r\n{\r\n\tusing (var testDb = new LiteDatabase(pathToDb))\r\n\t{\r\n\t\tvar col = testDb.GetCollection(tableName);\r\n\t\tforeach(var doc in col.FindAll())\r\n\t\t{\r\n\t\t\tyield return doc[\"value\"].AsString;\r\n\t\t}\r\n\t}\r\n}\r\n```"
      },
      {
        "user": "riksking",
        "created_at": "2020-04-08T06:42:22Z",
        "body": "@lbnascimento Thanks a lot.\r\nIt seems to me that it would be nice if it were possible to save primitive types without casting to a type BsonDocument. More precisely, that it should be implemented inside LiteDb. \r\nAs for example, this is implemented with an implicit identifier, which is created automatically if it is not in the specified type."
      }
    ]
  },
  {
    "number": 1601,
    "title": "[QUESTION] AutoId Int32 cast to Boolean?",
    "created_at": "2020-03-30T11:11:25Z",
    "closed_at": "2020-03-30T11:59:49Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1601",
    "body": "Hello, I have a weird issue in my existing .Net Core 2.0 project with LiteDb (version 5.0.5),\r\nI'm getting error while trying to do an Insert operation on document: \"Unable to cast object of type 'System.Int32' to type 'System.Boolean'.\"\r\nStackTrace:  \"   at LiteDB.BsonValue.op_Implicit(BsonValue value)\\r\\n\"\r\n\r\nThis is somehow caused while trying to cast Id property of my POCO class:\r\n ```\r\n public class EditorDocument\r\n    {\r\n        public int Id { get; set; }\r\n        public string DisplayedName { get; set; }\r\n    }\r\n```\r\nThis is my insertion:\r\n```\r\nvar test = new EditorDocument\r\n{\r\n       DisplayedName = \"test\",\r\n};\r\nthis.liteDatabase.GetCollection<EditorDocument>().Insert(test);\r\n```\r\n\r\nthis.liteDatabase is defined as \r\n`public LiteDatabase LiteDatabase { get; set; }`\r\nand the Insert snippet is inside a service (injected using IoC container)\r\n\r\nI also tried to explicitly tell that Id should be [BsonId]. I have the same issue with Guid type, the problem with conversion to System.Boolean still occurs. Could anyone give me a hint why is there such error?\r\n\r\nEdit: without defining Id property Ii'm still getting System.InvalidCastException: 'Unable to cast object of type 'LiteDB.ObjectId' to type 'System.Boolean'.' which is very strange. I guess this is due to some bad naming convention or db configuration which I'm not aware of...",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1601/comments",
    "author": "jacekard",
    "comments": [
      {
        "user": "jacekard",
        "created_at": "2020-03-30T11:59:49Z",
        "body": "Okay, so I resolved this issue and will explain it for reference. The problem isn't in inserting actually. My function looked like this:\r\npublic **bool** Add(EditorDocument testScript)\r\n {\r\n       return this.liteDb.GetCollection<EditorDocument().Insert(test);\r\n }\r\nAnd apparently Insert is returning Id of a new document and I wanted to return bool value (indicating success or not). So this was the issue."
      },
      {
        "user": "sburgara",
        "created_at": "2021-10-16T07:34:24Z",
        "body": "You Sir, saved my life! Thank you!"
      }
    ]
  },
  {
    "number": 1594,
    "title": "[QUESTION] How do you load a encrypted db from System.IO.Stream?",
    "created_at": "2020-03-27T14:46:55Z",
    "closed_at": "2020-03-31T00:36:32Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1594",
    "body": "First of all, thank you, LiteDB is AWESOME!!\r\n\r\nI have a database in a dll stored as an EmbeddedResource. It is encrypted with a password.\r\nHow do I load it as a stream and pass it the password?.\r\n\r\nIf it is a file from disk, I can do this:\r\n``` csharp\r\nvar connectionString=\"Filename=C:\\database.db;Password=1234\";\r\nvar db = new LiteDatabase(connectionString);\r\n```\r\nBut I want to stream the EmbeddedResource directly without copying it to disk.\r\n```csharp\r\nvar stream = GetAssembly().GetManifestResourceStream(\"MyApp.database.db\");\r\nvar db = new LiteDatabase(stream); // how do I specify the password???\r\n```",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1594/comments",
    "author": "koddek",
    "comments": [
      {
        "user": "lbnascimento",
        "created_at": "2020-03-27T15:11:13Z",
        "body": "@koddek You can do something like this:\r\n```C#\r\nvar aesStream = new LiteDB.Engine.AesStream(\"mypassword\", stream);\r\nvar db = new LiteDatabase(aesStream);\r\n```"
      },
      {
        "user": "koddek",
        "created_at": "2020-03-31T00:36:23Z",
        "body": "Thank you for your help @lbnascimento. It worked."
      }
    ]
  },
  {
    "number": 1586,
    "title": "[QUESTION] Method ToUniversalTime() in DateTime are not supported",
    "created_at": "2020-03-23T09:41:51Z",
    "closed_at": "2020-03-24T13:15:44Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1586",
    "body": "I filter data by DateTime.Today.ToUniversalTime(), it's working  on 4.1.4 but not 5.0.4. \r\n\r\nError messaage : Method ToUniversalTime() in DateTime are not supported when convert to BsonExpression (DateTime.Today.ToUniversalTime()).\r\n\r\n\r\n\tdb.Query<Order>().Where(p => p.OrderDateUtc > DateTime.Today.ToUniversalTime())\r\n\r\n======\r\n\r\n\t   at LiteDB.LinqExpressionVisitor.VisitMethodCall(MethodCallExpression node)\r\n\t   at System.Linq.Expressions.MethodCallExpression.Accept(ExpressionVisitor visitor)\r\n\t   at LiteDB.LinqExpressionVisitor.VisitAsPredicate(Expression expr, Boolean ensurePredicate)\r\n\t   at LiteDB.LinqExpressionVisitor.VisitBinary(BinaryExpression node)\r\n\t   at System.Linq.Expressions.BinaryExpression.Accept(ExpressionVisitor visitor)\r\n\t   at System.Linq.Expressions.ExpressionVisitor.Visit(Expression node)\r\n\t   at System.Linq.Expressions.ExpressionVisitor.VisitLambda[T](Expression`1 node)\r\n\t   at LiteDB.LinqExpressionVisitor.VisitLambda[T](Expression`1 node)\r\n\t   at System.Linq.Expressions.Expression`1.Accept(ExpressionVisitor visitor)\r\n\t   at System.Linq.Expressions.ExpressionVisitor.Visit(Expression node)\r\n\t   at LiteDB.LinqExpressionVisitor.Resolve(Boolean predicate)\r\n\t   at LiteDB.BsonMapper.GetExpression[T,K](Expression`1 predicate)\r\n\t   at LiteDB.LiteQueryable`1.Where(Expression`1 predicate)",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1586/comments",
    "author": "alonstar",
    "comments": [
      {
        "user": "lbnascimento",
        "created_at": "2020-03-23T13:35:23Z",
        "body": "@alonstar I'm going add the Linq-to-BsonExpression mapping for `ToUniversalTime()` later. In the meantime, you can just store the value in a variable before using it in the query:\r\n\r\n```C#\r\nvar todayUtc = DateTime.Today.ToUniversalTime();\r\nvar result = col.Find(p => p.OrderDateUtc > todayUtc);\r\n```"
      }
    ]
  },
  {
    "number": 1584,
    "title": "[QUESTION] How do I fetch a list of KeyValuePair from db?",
    "created_at": "2020-03-21T20:48:12Z",
    "closed_at": "2020-03-23T17:09:47Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1584",
    "body": "For example I have `List<KeyValuePair<string, Rectangle>> listName` that I can write and update in the db. When I am checking with LiteStudio I can see that the list has been written correctly but when I fetch the list i get the number of elements in the list but the Key and the Value are empty",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1584/comments",
    "author": "Mbogdan95",
    "comments": [
      {
        "user": "lbnascimento",
        "created_at": "2020-03-23T14:12:43Z",
        "body": "@Mbogdan95 Is there any specific reason you're not using `Dictionary<string, Rectangle>`?"
      },
      {
        "user": "Mbogdan95",
        "created_at": "2020-03-23T17:09:47Z",
        "body": "@lbnascimento no particular reason but changing from `List<KeyValuePair<string, Rectangle>>` to `Dictionary<string, Rectangle>` seems to have solved the problem. Thank you for this!\r\n\r\n"
      }
    ]
  },
  {
    "number": 1579,
    "title": "[QUESTION] How to Backup a LiteDB",
    "created_at": "2020-03-19T02:13:17Z",
    "closed_at": "2020-03-20T01:37:12Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1579",
    "body": "May I know how to backup a LiteDB?\r\nOr 'rollback' to previously commits.\r\nOr use Export json file is the best option?\r\n\r\n(Because I am inserting data to LiteDB. But sometimes I just insert some improper JSON...)\r\n\r\nThanks!",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1579/comments",
    "author": "josephinenewbie",
    "comments": [
      {
        "user": "lbnascimento",
        "created_at": "2020-03-19T13:26:50Z",
        "body": "@josephinenewbie There is no way to rollback a commited transaction - however, an uncommited transaction can be manually rolled back and it will be discarded if the datafile is abruptly closed (process crashed, power loss etc.).\r\n\r\nRegarding backup, there is no specific functionality for it. Making copies of the datafile should be fine for most purposes."
      },
      {
        "user": "josephinenewbie",
        "created_at": "2020-03-20T01:37:12Z",
        "body": "@lbnascimento \r\nThank you so much :) that's reasonable. "
      },
      {
        "user": "HolyOne",
        "created_at": "2021-08-16T13:58:15Z",
        "body": "Can I copy litedb file while my website is running?\r\nWill it always create a working copy of the database? O is there a chance for it to be broken if there are write operations on the website while copying?"
      },
      {
        "user": "lbnascimento",
        "created_at": "2021-08-16T16:43:56Z",
        "body": "@HolyOne You can't simply copy the file while it's open by LiteDB. You have to make sure the file is closed and that the log file is empty by running `db.Checkpoint()` before copying the file."
      }
    ]
  },
  {
    "number": 1573,
    "title": "Filtering on child field using substring",
    "created_at": "2020-03-15T19:35:16Z",
    "closed_at": "2020-03-16T20:47:34Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1573",
    "body": "Hello,\r\n\r\nWhen I execute the following SQL which filters documents on a parent field, the query seems to get the correct result.\r\n\r\nselect $ from Patients WHERE substring($.nameFirst,0,1) ALL = 'd'\r\n\r\nHowever, when I use the following SQL on a child field using substring I do not get any result.\r\n \r\nselect $ from Patients WHERE substring($.Tumors[*].dateOfDiagnosis,0,4) ALL = '2018'\r\n\r\nWhat am I doing wrong?",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1573/comments",
    "author": "sanjeevbaral",
    "comments": [
      {
        "user": "lbnascimento",
        "created_at": "2020-03-16T16:54:56Z",
        "body": "@sanjeevbaral `substring` can only be used with scalar expressions (expressions that evaluate to a single value), and `$.Tumors[*].dateOfDiagnosis` is an enumerable expression (it evaluates to all the dates of diagnosis).\r\n\r\nYou could use `select $ from Patients WHERE $.Tumors[*].dateOfDiagnosis ALL like '2018%'`."
      },
      {
        "user": "sanjeevbaral",
        "created_at": "2020-03-16T20:20:58Z",
        "body": "Thanks!"
      }
    ]
  },
  {
    "number": 1572,
    "title": "IN() in SQL",
    "created_at": "2020-03-15T10:53:51Z",
    "closed_at": "2020-03-16T20:47:36Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1572",
    "body": "Hello,\r\n\r\nI found that the following executes fine \r\n\r\nselect $ from Patients WHERE $.Tumors[*].primarySite ALL  IN ('C447')\r\n\r\nHowever, if I add more values to the list like this I get syntax error on the comma separating the values. \r\n\r\nselect $ from Patients WHERE $.Tumors[*].primarySite ALL  IN ('C447','C500')\r\n\r\nWhat is the correct syntax for specifying a list of values? ",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1572/comments",
    "author": "sanjeevbaral",
    "comments": [
      {
        "user": "lbnascimento",
        "created_at": "2020-03-16T16:40:22Z",
        "body": "@sanjeevbaral You should use `select $ from Patients WHERE $.Tumors[*].primarySite ALL IN ['C447','C500']`"
      },
      {
        "user": "sanjeevbaral",
        "created_at": "2020-03-16T20:20:15Z",
        "body": "Thank you!"
      }
    ]
  },
  {
    "number": 1570,
    "title": "Object InnerList auto incremented id",
    "created_at": "2020-03-14T18:21:31Z",
    "closed_at": "2020-03-25T17:22:57Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1570",
    "body": "Hi, please explain how to auto increment sub object ids.\r\n\r\nI have two classes(model), and one class for saving data.  \r\n```\r\npublic class Author\r\n{\r\n    public int Id { get; set; }\r\n    public string Name { get; set; }\r\n    public List<Post> Posts { get; set; } = new List<Post>();\r\n}\r\n```\r\n```\r\npublic class Posts \r\n{\r\n    public int Id { get; set; }\r\n    public string Title { get; set; }\r\n}\r\n```\r\n```\r\npublic static class DataAccess \r\n{\r\n    static DataAccess()\r\n    {\r\n        //Line below also doesn't help\r\n        //BsonMapper.Global.Entity<Post>().Id(x => x.Id, true); \r\n    }\r\n    public static void UpsertAuthor(Author author)\r\n    {\r\n        using (var db = new LiteDatabase(AppSettings.DbPath))\r\n        {\r\n            var authors = db.GetCollection<Author>(\"authors\");\r\n            authors.Insert(author);\r\n            //PostId's here is not incremeted. All inner objects have Id == 0\r\n        }\r\n    }\r\n}\r\n```\r\nSo how to auto increment Id's of inner list?\r\nAlso I've tried to mark Post.Id with [BsonId] attribute, this doesn't help as well. \r\nLiteDb  v5.0.4\r\n",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1570/comments",
    "author": "oleksiivasylenko",
    "comments": [
      {
        "user": "lbnascimento",
        "created_at": "2020-03-16T16:21:03Z",
        "body": "@oleksiivasylenko The auto-incremented id only works for the root document. Ids are used as unique identifiers inside a collection, and embedded documents are not stored in a collection of their own, so they don't need an id.\r\n\r\nIf you really want auto-incrementing id in inner objects, you can either implement it manually or use `BsonRef`"
      }
    ]
  },
  {
    "number": 1563,
    "title": "[QUESTION]Index values must have less than 255 bytes after upgrate to v5",
    "created_at": "2020-03-13T07:10:07Z",
    "closed_at": "2020-03-16T06:29:51Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1563",
    "body": "I updates library to version 5.\r\nWhen I open a database created in version 4 with upgrade=true flag I get an error\r\n\"Index key must be less than 255 bytes\"\r\nIn the documentation is written for v4, \"Index values must have at most 512 bytes\"\r\nFor v5 \"Index values must have less than 255 bytes\"\r\nI have a lot of clients who will lose data, because it is impossible to update the database\r\nWhat can be done",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1563/comments",
    "author": "ambyte",
    "comments": [
      {
        "user": "lbnascimento",
        "created_at": "2020-03-13T18:51:52Z",
        "body": "@ambyte Are there any custom indexes in the datafile (that is, an index over a field other than `_id`)?\r\n\r\nIf the error is happening on a custom index, I might create a way to upgrade the datafile without the indexes, which would circumvent the limitation. However, if the error is happening on an id index, I'm not sure what could be done (and index keys shouldn't be this long anyway, it would hurt performance a lot)."
      },
      {
        "user": "ambyte",
        "created_at": "2020-03-16T06:29:51Z",
        "body": "Thank you, upgrade=DataOnly solved the problem, the database update goes without errors"
      }
    ]
  },
  {
    "number": 1559,
    "title": "[QUESTION] Issue with upgrading to version 5",
    "created_at": "2020-03-12T18:06:34Z",
    "closed_at": "2020-03-13T21:59:21Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1559",
    "body": "Hello,\r\n\r\nI'm currently using version 4 of LiteDb on a Xamarin project and I'm looking to upgrade it to version 5 but having an issue where when I read a collection, my objects come back as null.\r\n\r\nHere's one such exmaple:\r\n\r\n```cs\r\npublic class UserCache\r\n{\r\n    [BsonId]\r\n    public ObjectId Id { get; set; } = ObjectId.NewObjectId(); // this is populated\r\n\r\n    public DateTime DateCreated { get; set; } = DateTime.Now; // this is populated\r\n\r\n    public User UserData { get; set; } // this comes back as null\r\n\r\n    [BsonCtorAttribute]\r\n    public UserCache(User userData)\r\n    {\r\n        UserData = userData;\r\n    }\r\n}\r\n```\r\n\r\nI did setup a mapper but that didn't seem to help either\r\n\r\n```cs\r\nvar mapper = BsonMapper.Global;\r\n\r\nmapper.Entity<UserCache>()\r\n    .Id(x => x.Id)\r\n    .Field(x => x.UserData, \"UserData\");\r\n```\r\n\r\nI'm clearly missing something but I'm not exactly sure what.\r\n\r\nI appreciate the help.",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1559/comments",
    "author": "eman1986",
    "comments": [
      {
        "user": "lbnascimento",
        "created_at": "2020-03-12T18:40:06Z",
        "body": "@eman1986 The parameters in the constructor annotated by `BsonCtorAttributes` must be of symple types (this is not in the documentation, I'll add it).\r\n\r\nGiven that all the properties in `UserCache` have public setters, you don't need to use `BsonCtorAttribute` anyway. Just remove this constructor - or, if you need it for something else, remove the attribute and create a parameterless constructor that does nothing."
      },
      {
        "user": "eman1986",
        "created_at": "2020-03-13T15:24:20Z",
        "body": "It wasn't working before I added that as currently with version 4 I didn't have a constructor setup.\r\n\r\nI added it because I thought I needed it."
      },
      {
        "user": "lbnascimento",
        "created_at": "2020-03-13T17:21:32Z",
        "body": "@eman1986 If no `BsonCtor` is found by the mapper, it then tries to use a parameterless constructor (or the default constructor, if there is no explicitly defined constructor). This will only work if your properties have public setters.\r\n\r\nYour example class has public setters, so it should work with a parameterless/default constructor. In fact, I just tested it and it works fine."
      },
      {
        "user": "eman1986",
        "created_at": "2020-03-13T18:37:10Z",
        "body": "do I need a mapper for it to work? I didn't have one for v4"
      },
      {
        "user": "lbnascimento",
        "created_at": "2020-03-13T19:10:41Z",
        "body": "@eman1986 No mapper should be necessary."
      },
      {
        "user": "eman1986",
        "created_at": "2020-03-13T20:01:14Z",
        "body": "I tried it again and I'm still seeing my type be null"
      },
      {
        "user": "lbnascimento",
        "created_at": "2020-03-13T20:09:59Z",
        "body": "@eman1986 Could you send me the datafile you're using?"
      },
      {
        "user": "eman1986",
        "created_at": "2020-03-13T21:59:21Z",
        "body": "I took a little more time debugging the xamarin app, and it seems like there's another process that may be the root cause. I don't think it's anything related to LiteDb itself now."
      }
    ]
  },
  {
    "number": 1555,
    "title": "[QUESTION] Any API to include data on deployment",
    "created_at": "2020-03-11T06:49:14Z",
    "closed_at": "2020-03-14T13:09:58Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1555",
    "body": "```\r\npublic class Customer\r\n{\r\n    public ObjectId CustomerId { get; set; }\r\n    public CustomerType type  { get; set; }\r\n    public string Name { get; set; }\r\n    public DateTime CreateDate { get; set; }\r\n    public List<Phone> Phones { get; set; }\r\n    public bool IsActive { get; set; }\r\n}\r\n\r\npublic class CustomerType\r\n{\r\n    public ObjectId Id { get; set; }\r\n    public string Type{ get; set; }\r\n\r\n}\r\n```\r\n\r\nI wanted to include default data for Customer type while deploying the WPF app. Any API for that?\r\nId Type\r\n1 Loyal\r\n2 Normal\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1555/comments",
    "author": "meteorsnows",
    "comments": [
      {
        "user": "lbnascimento",
        "created_at": "2020-03-11T18:18:38Z",
        "body": "@meteorsnows Sorry, I didn't understand your question. Could you explain what you're trying to do?"
      },
      {
        "user": "meteorsnows",
        "created_at": "2020-03-13T16:01:49Z",
        "body": "I am trying to include default data for CustomerType Table at first installed for WPF app\r\n\r\nId Type\r\n1 Loyal\r\n2 Normal\r\n\r\nInstead of following:\r\n>   // Create your new customer instance\r\n>     var customer = new CustomerType\r\n>     { \r\n>         Type = \"Loyal\", \r\n>     };\r\n>     col.Insert(customer);\r\n\r\n\r\n\r\n\r\n"
      },
      {
        "user": "lbnascimento",
        "created_at": "2020-03-13T17:41:43Z",
        "body": "@meteorsnows There is no specific collection initialization functionality. You would have to do it manually, something like this:\r\n\r\n```C#\r\nvar types = db.GetCollection<CustomerType>();\r\nif(types.Count() == 0)\r\n{\r\n\ttypes.Insert(new CustomerType { Type = \"Loyal\" });\r\n\ttypes.Insert(new CustomerType { Type = \"Normal\" });\r\n}\r\n```"
      },
      {
        "user": "meteorsnows",
        "created_at": "2020-03-14T13:09:58Z",
        "body": "Okie, fair enough. \r\nGood enough for me."
      }
    ]
  },
  {
    "number": 1548,
    "title": "[QUESTION]Find with enum consts has wrong behavior when BsonMapper.Global.EnumAsInteger = false",
    "created_at": "2020-03-09T16:20:43Z",
    "closed_at": "2020-03-09T19:05:48Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1548",
    "body": "**Version**\r\n5.0.3\r\n\r\n**Describe the bug**\r\nWhen BsonMapper.Global.EnumAsInteger = false, then Find method does wrong behavior.\r\n\r\n**Code to Reproduce**\r\n```\r\nvar db = new LiteDbDatabase();\r\n\r\n//This will return nothing because the linq expression will cast the enum value MyEnum.A to integer\r\n//As the mapper option EnumAsInteger is false, enum values is stored as string,\r\n//and the Find method below takes a comparsion between string and int, result always be false\r\nvar data = db.GetCollection<MyClass>().Find(x => x.Flag == MyEnum.A).ToList();\r\n```\r\n",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1548/comments",
    "author": "holyping",
    "comments": [
      {
        "user": "lbnascimento",
        "created_at": "2020-03-09T19:05:48Z",
        "body": "@holyping This is not a bug, but a current limitation of the mapper: LINQ expressions are only supported if `EnumAsInteger = true`. I will update the documentation to state this more clearly."
      },
      {
        "user": "lbnascimento",
        "created_at": "2020-03-18T00:30:25Z",
        "body": "@holyping This issue was solved in the master branch and should be present in the next incremental release."
      }
    ]
  },
  {
    "number": 1542,
    "title": "Querying an array of documents nested within a field",
    "created_at": "2020-03-08T11:52:30Z",
    "closed_at": "2020-03-10T12:40:39Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1542",
    "body": "I am new to LiteDB and have been trying it for a few days and loving it. However, I have run into a problem. I have a collection that contains an array of documents in one of the fields. I am trying to run a query that involves querying a certain field in the nested document array. What is the syntax? From one of the examples given for queries, I tried \r\n\r\nvar test = collection.Find(Query.EQ(\"Tumors[*].site\", 'C400'));\r\n\r\nThe above gives me the error - \r\nLeft expression `($.Tumor[*]=>@.site)` returns more than one result. Try use ANY or ALL before operant.\r\n\r\n\"Tumors\" field contains an array of documents that has \"site\" as one of the fields. The array of documents is created using BsonArray. Did I create the array incorrectly? I am not sure how to use ANY or ALL with the above query. Or I misunderstood the query syntax?",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1542/comments",
    "author": "sanjeevbaral",
    "comments": [
      {
        "user": "sanjeevbaral",
        "created_at": "2020-03-08T13:41:02Z",
        "body": "Figured out. I just had to look through questions answered earlier. You may want to update the page that shows query examples. I needed \r\n\r\nvar test = collection.Find(Query.EQ(\"Tumors[*].site ALL\", \"C400\"));"
      },
      {
        "user": "lbnascimento",
        "created_at": "2020-03-09T17:29:39Z",
        "body": "@sanjeevbaral Query static methods are not recommended anymore, they might be marked as deprecated in a future version.\r\n\r\nYou could use `collection.Find(\"Tumors[*].site ALL = 'C400'\")` or, if you prefer SQL syntax, `db.Execute(\"select $ from collection where $.Tumors[*].site ALL = 'C400'\")`."
      },
      {
        "user": "sanjeevbaral",
        "created_at": "2020-03-10T12:40:39Z",
        "body": "Thank you! Both worked beautifully!"
      }
    ]
  },
  {
    "number": 1532,
    "title": "[QUESTION] Can't load a document based on a model that has a collection in its constructor.",
    "created_at": "2020-03-04T18:04:10Z",
    "closed_at": "2020-03-12T19:51:52Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1532",
    "body": "**Version**\r\nv5.0.3\r\n**Steps To Recreate**\r\n1. use the given code in LinqPad\r\n2. adjust the db paths.\r\n3. uncomment the code to create a person and save it to db.\r\n4. comment the code to create a person\r\n5. now try to load a person using the constructor with the list\r\n6. it throws.\r\n7. comment out that constructor and try to load a person wit the constructor that does not have the list.\r\n8. it successfully loads the person.\r\n9. so the problem is found when the constructor has a collection as a parameter\r\n\r\n**Describe the bug**\r\nI am trying to load a person from the litedb database. \r\nif I use a constructor that has a list, the app throws an exception saying that it can't find a parameterless constructor. When I remove the list from the constructor, it loads fine. So I think that there's a bug when loading any type of collection in the constructor. I tried string[], List<string>, IEnumerable<string> and they all threw.\r\n\r\n\r\n**Code to Reproduce**\r\n``` csharp\r\nvoid Main()\r\n{\r\n//\tvar person = new Person(\"1\", \"John Doe\", new List<string> { \"Gaming\", \"Coding\", \"Learning\" });\r\n//\tAddPerson(person);\r\n\r\n\tvar p = LoadPerson(\"1\");\r\n\tp.Dump();\r\n}\r\n\r\nvoid AddPerson(Person person)\r\n{\r\n\tusing (var db = new LiteDatabase(@\"%username%\\Desktop\\tmp_databases\\people.db\"))\r\n\t{\r\n\t\tvar collection = db.GetCollection<Person>();\r\n\t\tcollection.Upsert(person);\r\n\t}\r\n}\r\n\r\nPerson LoadPerson(string id)\r\n{\r\n\tusing (var db = new LiteDatabase(@\"%username%\\Desktop\\tmp_databases\\people.db\"))\r\n\t{\r\n\t\tvar collection = db.GetCollection<Person>();\r\n\t\treturn collection.FindById(id);\r\n\t}\r\n}\r\n\r\npublic class Person\r\n{\r\n        // loads the persion when using this constructor\r\n\t//public Person(string id, string name)\r\n\t//{\r\n\t//\tId = id;\r\n\t//\tName = name;\r\n\t//\tHobbies = new List<string>();\r\n\t//}\r\n\r\n         // trows exception when trying to load a person with this constructor. Even if I use [BsonCtor] it still throws\r\n        [BsonCtor]\r\n\tpublic Person(string id, string name, List<string> hobbies)\r\n\t{\r\n\t\tId = id;\r\n\t\tName = name;\r\n\t\tHobbies = hobbies;\r\n\t}\r\n\r\n\tpublic string Id { get; }\r\n\tpublic string Name { get; }\r\n\tpublic int Age { get; }\r\n\tpublic List<string> Hobbies { get; }\r\n}\r\n```\r\n\r\n**Expected behavior**\r\nI should be able to load a person with a public or internal constructor once all my parameters are supported by LiteDb and once the constructor is decorated with [BsonCtor]. This is a must-have feature especially for loading immutable objects from a database. Thank you very much for adding it and the other great work done in v5.   \"JsonConstructorAttribute\" <= this is awesome.\r\n\r\n**Get Exception**\r\nthrew exception: \r\n    LiteDB.LiteException: Failed to create instance for type 'AppLibrary.Models.Person' from assembly 'AppLibrary.Models.Person, AppLibrary, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'. Checks if the class has a public constructor with no parameters. ---> System.ArgumentException: Type 'AppLibrary.Models.Person' does not have a default constructor (Parameter 'type')\r\n**Screenshots/Stacktrace**\r\nIf applicable, add screenshots/stacktrace\r\n",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1532/comments",
    "author": "koddek",
    "comments": [
      {
        "user": "lbnascimento",
        "created_at": "2020-03-05T17:01:13Z",
        "body": "@koddek This is not exactly a bug, but a limitation of how the BSON deserialization works. It converts BSON types to equivalent .NET types, however there is no .NET equivalent to a BSON array, so arrays are converted to our `BsonArray` class. You would have to do something like this for your constructor to work:\r\n\r\n```C#\r\n[BsonCtor]\r\npublic Person(string id, string name, BsonArray hobbies)\r\n{\r\n    Id = id;\r\n    Name = name;\r\n    Hobbies = hobbies.Select(x => x.AsString).ToList();\r\n}\r\n```\r\n\r\nWe realize this is not ideal and we're thinking of ways to improve it. Also, we're reviewing our documentation to make this limitation clearer."
      }
    ]
  },
  {
    "number": 1528,
    "title": "[QUESTION]",
    "created_at": "2020-03-03T09:29:09Z",
    "closed_at": "2020-03-03T14:05:18Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1528",
    "body": "In version 4.x, I used the function GetIndexes() of the LiteCollection<T> to view the existing indexes. This allowed me to view the existing indexes and drop them automatically if the where absolute in older collections.\r\nBut in version 5 this functionality is missing in the ILiteCollection<T>. Is there a way to get the existing indexes (I only need the names of the indexes)?",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1528/comments",
    "author": "Fleximinded",
    "comments": [
      {
        "user": "lbnascimento",
        "created_at": "2020-03-03T13:50:57Z",
        "body": "@filipgeens You can list indexes by querying the `$indexes` system collection. You can open it as if it were a regular collection: `var col = db.GetCollection(\"$indexes\")`.\r\n\r\nEach document returned has the following structure:\r\n\r\n```javascript\r\n{\r\n   \"collection\":\"Customers\",\r\n   \"name\":\"_id\",\r\n   \"expression\":\"$._id\",\r\n   \"unique\":true,\r\n   \"maxLevel\":19\r\n}\r\n```\r\n\r\nYou can use filters too. For example, if you wanted only the indexes for the collection `Customers`, you can use `col.Find(\"$.collection = 'Customers'\")`."
      },
      {
        "user": "Fleximinded",
        "created_at": "2020-03-03T13:55:05Z",
        "body": "Great! Thx"
      }
    ]
  },
  {
    "number": 1525,
    "title": "Index length limit",
    "created_at": "2020-03-02T08:55:55Z",
    "closed_at": "2020-03-02T13:45:26Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1525",
    "body": "It says: _Index values must have less than 512 bytes (after BSON serialization)._\r\n\r\nQuestions:\r\nI get this exception: LiteDB.LiteException: 'Index key must be less than 255 bytes.' Which is correct?\r\nWhen index is multikey index, should this limit apply to individual element or whole multikey? Multikey  ['a','b','c'] has length 3 or 1 as each is 1 byte?",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1525/comments",
    "author": "mitja-p",
    "comments": [
      {
        "user": "lbnascimento",
        "created_at": "2020-03-02T12:48:42Z",
        "body": "@mitja-p The correct value is 255 (the lenght of the index key must fit in a byte). I will fix the documentation.\r\n\r\nRegarding your question, your example `[\"a\", \"b\", \"c\"]` takes 32 bytes after BSON serialization. This is because it is stored as the following document: `{\"0\": \"a\", \"1\":\"b\", \"2\":\"c\"}`. Each element takes 9 bytes  (2 bytes for the key string, 2 bytes for the value string (because of the trailing `\\0`) and a 5-byte overhead because string is a variable-length type) and there's also another 5-byte overhead for the document itself, adding up to 32 bytes.\r\n\r\nIf this answers your question, please close the issue."
      }
    ]
  },
  {
    "number": 1508,
    "title": "[QUESTION] Does the power interruption of the execution Rebuild()(V5) or Shrink()(V4) cause the file to be damaged",
    "created_at": "2020-02-24T01:27:56Z",
    "closed_at": "2020-02-28T00:48:14Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1508",
    "body": "I use LiteDB V4 and V5 in some project. I want to know if the database will be damaged due to power failure when I delete records and execute  Rebuild()(V5) or Shrink()(V4). And what if V5 using use in-memory log file?",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1508/comments",
    "author": "yaozhong-OMEC",
    "comments": [
      {
        "user": "lbnascimento",
        "created_at": "2020-02-27T17:48:31Z",
        "body": "@yaozhong-OMEC Both LiteDB v4 and v5 implement the ACID properties, so the datafile will not be corrupted in case of a power failure. When the datafile is opened, if a log file is found, commited transactions in the log file are written to the datafile and uncommited transactions are discarded.\r\n\r\nHowever, this is **not** the case with in-memory log. In this scenario, power failure in the middle of a checkpoint operation would result in data corruption.\r\n\r\nIf this answers your question, please close the issue."
      }
    ]
  },
  {
    "number": 1486,
    "title": "[QUESTION] Can I use LiteDB V5 do not create or delete log file (GMP or 21crf) ?",
    "created_at": "2020-02-18T03:26:09Z",
    "closed_at": "2020-02-21T03:52:48Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1486",
    "body": "I use LiteDB V5 for data file to store data. In some cases, we do not have permission to delete any files (GMP or 21crf) in the directory. This temporary log file will cause some exceptions. Does it have solution?",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1486/comments",
    "author": "yaozhong-OMEC",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2020-02-18T17:37:06Z",
        "body": "You can use in-memory log file. But be careful, if occurs any error during checkpoint process can (and will) corrupt your datafile. At this point, to do this, you must work only with `LiteEngine` class because this option are not available in `LiteDatabase`."
      },
      {
        "user": "yaozhong-OMEC",
        "created_at": "2020-02-19T08:13:58Z",
        "body": "Thanks. Will the option be available in `LiteDatabase` in the future?"
      },
      {
        "user": "mbdavid",
        "created_at": "2020-02-19T13:35:19Z",
        "body": "Yes, will be part of 5.1 (will be release next month)"
      }
    ]
  },
  {
    "number": 1484,
    "title": "[QUESTION] How to filter by referenced collection primary key?",
    "created_at": "2020-02-16T22:23:51Z",
    "closed_at": "2020-02-17T19:57:25Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1484",
    "body": "Let's take next relation\r\n```csharp\r\nclass Child\r\n{\r\n   int Id {get;set;}\r\n}\r\nclass Owner\r\n{\r\n    int Id {get;set;}\r\n    Child Child {get;set;}\r\n}\r\n```\r\nWhich is registered in next way\r\n```csharp\r\nDatabase.Mapper.Entity<Child>()\r\n     .Id(e => e.Id, false);\r\nDatabase.Mapper.Entity<Owner>()\r\n     .DbRef(e => e.Child)\r\n     .Id(e => e.Id, false);\r\n```\r\nOn this point I understand, Owner document will contain only id of child document.\r\nBut how should I filter Owner documents by Child id?\r\nI can use next code:\r\n```csharp\r\nCollection\r\n    .Include(o => o.Child)\r\n    .Find(Query.EQ($\"{nameof(Owner.Child)}.{nameof(Child.Id)}\", new BsonValue(idValue))))\r\n```\r\nBut is it the best way to do filter by referenced document id? Because code above requires Include, when I don't really need child document, except of Id.\r\nAlso, how should I ensure index for it?\r\n\r\nThanks.\r\n",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1484/comments",
    "author": "maxkatz6",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2020-02-17T13:07:54Z",
        "body": "Hi @maxkatz6, if you don't need to include you can filter by `$id` key. Like this:\r\n\r\n```\r\ncollection.Query()\r\n    .Where(\"$.Child.$id = @0\", idValue)\r\n    .ToList()\r\n```"
      },
      {
        "user": "maxkatz6",
        "created_at": "2020-02-17T19:57:25Z",
        "body": "@mbdavid thanks!\r\nI will try it"
      }
    ]
  },
  {
    "number": 1478,
    "title": "Delete all items from collection",
    "created_at": "2020-02-14T14:34:18Z",
    "closed_at": "2020-03-02T21:32:00Z",
    "labels": [
      "bug",
      "question",
      "fixed"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1478",
    "body": "With LiteDB v4 is was used to write `Delete(Query.All())`. This doesn't work with v5 anymore. Also using `DeleteMany(_ => true)` gets me an exception.\r\n\r\nHow can I delete all entries from a collection?",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1478/comments",
    "author": "GW-FUB",
    "comments": [
      {
        "user": "JensSchadron",
        "created_at": "2020-02-14T22:24:04Z",
        "body": "@GW-FUB Not completely sure how it's supposed to be, but this does the job 🙂\r\n```csharp\r\nclass Program\r\n{\r\n\tstatic void Main(string[] args)\r\n\t{\r\n\t\tusing var db = new LiteDatabase(new MemoryStream());\r\n\t\tvar col = db.GetCollection<TestClass>();\r\n\t\tcol.Insert(new TestClass());\r\n\t\tcol.Insert(new TestClass());\r\n\r\n\t\tConsole.WriteLine($\"{nameof(TestClass)} collection contains {col.Count()} item(s)\\n\");\r\n\r\n\t\tConsole.WriteLine($\"Deleting item(s) in collection {nameof(TestClass)}\\n\");\r\n\t\tcol.DeleteMany(\"1=1\");\r\n\r\n\t\tConsole.WriteLine($\"{nameof(TestClass)} collection contains {col.Count()} item(s)\\n\");\r\n\t}\r\n\r\n\tclass TestClass\r\n\t{\r\n\t\tpublic ObjectId Id { get; set; }\r\n\t\tpublic string Data { get; set; }\r\n\t}\r\n}\r\n```"
      },
      {
        "user": "mbdavid",
        "created_at": "2020-03-02T14:22:40Z",
        "body": "Hi @JensSchadron, I just add support for unary parameter as predicate in LINQ converter."
      },
      {
        "user": "JensSchadron",
        "created_at": "2020-03-02T21:32:00Z",
        "body": "@mbdavid I tested it and it seems to work indeed. Therefor I'll close this issue.\r\n\r\n@GW-FUB Not sure if you're still interested in this, but you can now also pass `_ => true` to the `DeleteMany()` method."
      }
    ]
  },
  {
    "number": 1477,
    "title": "[QUESTION] Delete after upgrade to 5.X",
    "created_at": "2020-02-14T11:02:00Z",
    "closed_at": "2020-02-17T07:30:40Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1477",
    "body": "With version 4.X I was able to delete entries with:\r\n\r\ncol.Delete(Query.EQ(\"_id\", toDelete.Id));\r\n\r\nThis doesn't work with 5.X. So what is the best approach with 5.X to delete records? I didn't find anything in the documentation?",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1477/comments",
    "author": "gnimor",
    "comments": [
      {
        "user": "JensSchadron",
        "created_at": "2020-02-14T22:32:58Z",
        "body": "Hi @gnimor \r\nHere's a sample that (hopefully answers your question.\r\n```csharp\r\nclass Program\r\n{\r\n\tstatic void Main(string[] args)\r\n\t{\r\n\t\tusing var db = new LiteDatabase(new MemoryStream());\r\n\t\tvar col = db.GetCollection<TestClass>();\r\n\t\t\r\n\t\tvar instance = new TestClass\r\n\t\t{\r\n\t\t\tId = Guid.NewGuid(),\r\n\t\t\tData = \"My data\"\r\n\t\t};\r\n\t\tcol.Insert(instance);\r\n\r\n\t\tConsole.WriteLine($\"{nameof(TestClass)} collection contains {col.Count()} item(s)\");\r\n\r\n\t\tConsole.WriteLine($\"Deleting item by id in collection {nameof(TestClass)}\");\r\n\t\t// Delete specific item by id\r\n\t\tcol.Delete(instance.Id);\r\n\r\n\t\tConsole.WriteLine($\"{nameof(TestClass)} collection contains {col.Count()} item(s)\\n\");\r\n\t\t\r\n\t\t// Inserting item again\r\n\t\tcol.Insert(instance);\r\n\r\n\t\tConsole.WriteLine($\"{nameof(TestClass)} collection contains {col.Count()} item(s)\");\r\n\r\n\t\tConsole.WriteLine($\"Deleting item by id in collection {nameof(TestClass)}\");\r\n\t\t// Delete using predicate lambda\r\n\t\tcol.DeleteMany(item => item.Data == \"My data\");\r\n\t\t// or delete using Bson expressions\r\n\t\tcol.DeleteMany(Query.StartsWith(nameof(instance.Data), instance.Data));\r\n\r\n\t\tConsole.WriteLine($\"{nameof(TestClass)} collection contains {col.Count()} item(s)\");\r\n\t}\r\n\r\n\tclass TestClass\r\n\t{\r\n\t\tpublic Guid Id { get; set; }\r\n\t\tpublic string Data { get; set; }\r\n\t}\r\n}\r\n```\r\n\r\nAs you can see in the sample, you could either delete a specific item by it's Id using the `col.Delete(<id>)` method, or you could use the DeleteMany method which accepts predicates and BSON expressions.\r\n\r\nIf this answers your question, please close the issue 🙂 "
      },
      {
        "user": "gnimor",
        "created_at": "2020-02-17T07:30:40Z",
        "body": "This works as expected"
      }
    ]
  },
  {
    "number": 1475,
    "title": "[QUESTION] How to use paging effectively in V5 ",
    "created_at": "2020-02-14T00:26:59Z",
    "closed_at": "2020-03-02T17:13:17Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1475",
    "body": "LiteDB is convenient and effective and I can't help but continue using it in the mobile app. \r\nIn V4, I have created index and use engine.FindAll to get all results and then page the collection with Linq-to-Object  Skip.\r\n\r\nUsers have to get the next page with Pull-to-Refresh  because the pagination of search results doesn't show on the mobile screen. \r\n\r\nIt is the drawback that app will hit the db with engine.FindAll repeatedly even if  the query parameters are the same and the page number is only different.\r\n\r\nHow can I use the paging effectively except in-memory in V5?\r\n\r\nAnother question: Is there any tutorial for use of LinqKit's PredicateBuilder in V5? \r\n\r\nThanks for  respectable team and great work",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1475/comments",
    "author": "GitOffice",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2020-02-15T13:10:45Z",
        "body": "Hi @GitOffice, in v5 you can use `Query()` fluent API to do that. v5 has a power query engine that implement some in-database features (not present in v4) like Multiples Where/OrderBy/Skip/Limit/GroupBy/Select... it's much more flexiable than v4"
      },
      {
        "user": "lbnascimento",
        "created_at": "2020-02-27T13:48:19Z",
        "body": "@GitOffice, one way to do it would be using the `Query` method in `LiteCollection`.\r\n\r\n```C#\r\nvar col = db.GetCollection(\"customers\");\r\n\r\nvar query = col.Query();\r\nvar resultsPage = query.Limit(entriesPerPage).Offset((pageNumber - 1) * entriesPerPage).ToEnumerable();\r\n```\r\n\r\nThe query will only be run when `ToEnumerable` is called, so you can call it multiple times with different limit and offset values.\r\nIf there is an index over the filter expression, the index will be used and only the desired documents will be accessed (in my example, no filter expression is present, which means the query will use the index over the `_id` field).\r\n\r\nIs this answers your question, please close the issue."
      },
      {
        "user": "sgf",
        "created_at": "2023-07-28T09:28:08Z",
        "body": "> @GitOffice, one way to do it would be using the `Query` method in `LiteCollection`.\r\n> \r\n> ```cs\r\n> var col = db.GetCollection(\"customers\");\r\n> \r\n> var query = col.Query();\r\n> var resultsPage = query.Limit(entriesPerPage).Offset((pageNumber - 1) * entriesPerPage).ToEnumerable();\r\n> ```\r\n> \r\n> The query will only be run when `ToEnumerable` is called, so you can call it multiple times with different limit and offset values. If there is an index over the filter expression, the index will be used and only the desired documents will be accessed (in my example, no filter expression is present, which means the query will use the index over the `_id` field).\r\n> \r\n> Is this answers your question, please close the issue.\r\n\r\nbut how get the total page count or total-items count?"
      }
    ]
  },
  {
    "number": 1474,
    "title": "[QUESTION] Using Memory Stream in v5",
    "created_at": "2020-02-13T17:45:07Z",
    "closed_at": "2020-02-15T18:08:31Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1474",
    "body": "Hi,\r\n\r\nWith migration to v5 there are some breaking changes (there is no Shrink method, no access to Engine etc) and there is no documentation how to migrate from v4.\r\nIn v4, I used MemoryStream to load data from file and pass it to the LiteRepository, and after when I finished working with LiteDB I was saving the MemoryStream to disk as byte array in a file. And afterwards when reloading the MemoryStream from the file, the LiteDB contained my objects.\r\nNow, it seems that MemoryStream does not contains all data necessary to recreate the LiteRepository the next time when it is reloaded from disk. The way that is used to use LiteDB is not longer valid?\r\n\r\nHow can I retrieve the Data that is stored in the LiteRepository (initialized by MemoryStream) and save it on disk? ",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1474/comments",
    "author": "Soruk",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2020-02-15T13:32:49Z",
        "body": "LiteDB v5 works quit different from v4 in this aspect. In v4 you had a single file only (with no temp data). v5 needs temp (log file) to implement WAL. When you initialize a database with MemoryStream, another memory stream are created to store data log (pages changes). This new memory stream contains changes only and when get 1000 pages, this file are copied into original data file. This command can be called by `Checkpoint` method too. After a checkpoint, your datafile contains all your data an log file are clear. This checkpoin also occurs when you close database.\r\n"
      },
      {
        "user": "nightroman",
        "created_at": "2020-02-15T14:18:14Z",
        "body": "Given I create a database instance A using\r\n\r\n```csharp\r\n    public LiteDatabase(Stream stream, BsonMapper mapper = null)\r\n```\r\n\r\nIs that correct that I should not open another database instance B using the same stream until I close A? (Because, my thinking, A and B will create different WAL streams instead of using the same).\r\n "
      },
      {
        "user": "Soruk",
        "created_at": "2020-02-15T17:23:33Z",
        "body": "Hi @mbdavid thanks for the explanation.\r\nWith the `Checkpoint()` method, my use case works well again."
      },
      {
        "user": "JensSchadron",
        "created_at": "2020-02-15T18:08:31Z",
        "body": "Hi @Soruk , I'm closing this issue as I believe it has been resolved. If it isn't the case, please reopen this issue :slightly_smiling_face: "
      }
    ]
  },
  {
    "number": 1462,
    "title": "[QUESTION] disable creation of LiteDB-log",
    "created_at": "2020-02-10T11:50:40Z",
    "closed_at": "2020-02-15T13:21:28Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1462",
    "body": "when I create a database (let's call him \"DB\"), it's created me a file DB.db and DB-log.db.\r\nhow I can create a database without the log file?\r\n\r\nthe c# code is:\r\n`var db = new LiteDatabase(@\"DB.db\");`",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1462/comments",
    "author": "asakl",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2020-02-10T19:42:21Z",
        "body": "This temp file are required in LiteDB v5 because it's used as WAL (write ahead log). All databases needs this to implement of ACID. This file are deleted when you close database."
      },
      {
        "user": "asakl",
        "created_at": "2020-02-11T15:59:48Z",
        "body": "OK thanks. \r\nbut, even when i close my program entirely it's still there... \r\nthe file can risk my data? (like, if it's a private info)"
      },
      {
        "user": "rickguedes",
        "created_at": "2020-02-11T20:53:16Z",
        "body": "It seems it's only deleted when you call Dispose() in you database"
      },
      {
        "user": "mbdavid",
        "created_at": "2020-02-12T17:02:46Z",
        "body": "You always should call Dispose() on LiteDatabase after use. If not, you will not close file connections"
      },
      {
        "user": "asakl",
        "created_at": "2020-02-13T22:46:44Z",
        "body": "OK, thank you very much!"
      },
      {
        "user": "DinoChan",
        "created_at": "2020-02-18T03:08:54Z",
        "body": "In some cases, we do not have permission to delete any files (GMP or 21crf) in the directory. This temporary log file will cause some exceptions. Is there really no way to disable log files?"
      },
      {
        "user": "AntonyNET",
        "created_at": "2020-03-12T14:37:57Z",
        "body": "Hi!\r\nI open DB on my app start and dispose it when app closed.\r\nSometimes my app crashs and when i start it next time i have no data that i save. \r\nHow i can flush changes from log file to main DB? log file is 7GB already"
      },
      {
        "user": "lbnascimento",
        "created_at": "2020-03-12T14:46:24Z",
        "body": "@AntonyNET Just run a checkpoint operation after opening the datafile (actually, it should automatically run checkpoint when opening a datafile)"
      },
      {
        "user": "challamzinniagroup",
        "created_at": "2021-02-16T02:56:24Z",
        "body": "@lbnascimento  Sorry to drag up an old post - but can you explain a little further about the checkpoint operation (or point me to the docs section, if such a section exists)? I am using LiteDB on an API that is always on. I wrap the connection in `using` statements so they are always disposed. Yet I recently revisited an old project and the db file shows a last updated timestamp of 8 months ago, while the log file shows last updated of today and is over 3GB in size. So the log file is clearly not being merged back into the db file, nor is it being deleted.\r\n\r\nAny more info you could provide would be appreciated.\r\n\r\nThanks!"
      }
    ]
  },
  {
    "number": 1461,
    "title": "[QUESTION] Do Exists and Count \"Need indexes on query expression\", as comments tell?",
    "created_at": "2020-02-10T03:58:12Z",
    "closed_at": "2020-02-10T19:55:56Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1461",
    "body": "Do collection methods `Exists` and `Count` \"Need indexes on query expression\", as comments tell?\r\n\r\nXML documentation code comments tell:\r\n\r\n`Exists`:\r\n\r\n> Returns true if query returns any document. This method does not deserialize any document.\r\n> Needs indexes on query expression\r\n\r\n`Count`:\r\n\r\n> Count documents matching a query. This method does not deserialize any document.\r\n> Needs indexes on query expression\r\n\r\nWhat does \"Needs indexes on query expression\" mean?\r\nMy tests show that indexes are not *required*.\r\nAre these comments out of date perhaps?\r\n",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1461/comments",
    "author": "nightroman",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2020-02-10T19:45:01Z",
        "body": "Is this about v4 or v5?"
      },
      {
        "user": "nightroman",
        "created_at": "2020-02-10T19:48:24Z",
        "body": "v5 and the current source code (with these doc comment) from master"
      },
      {
        "user": "mbdavid",
        "created_at": "2020-02-10T19:50:02Z",
        "body": "hummm... so it´s old documentation (required for v4). I will update XML documentation"
      }
    ]
  },
  {
    "number": 1457,
    "title": "[QUESTION] {\"This operation is not supported for a relative URI.\"}",
    "created_at": "2020-02-08T23:07:23Z",
    "closed_at": "2020-02-12T18:30:17Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1457",
    "body": "I'm getting this error, my code is:\r\n\r\n\r\n`private bool InsertBotConfigToDb(string path)\r\n        {\r\n\r\n                var stream = new StreamReader(path).ReadToEnd();\r\n            // Open data file (or create if not exits)\r\n            using (var db = new LiteDatabase(Server.MapPath(\"~/db.db\")))\r\n            {\r\n                // Get customer collection\r\n                var col = db.GetCollection<BotConfig>(\"botconfigs\");\r\n\r\n                var config = JsonConvert.DeserializeObject<BotConfig>(stream);\r\n\r\n                // Insert new customer document\r\n                col.Insert(1, config);\r\n\r\n\r\n                //var result = col.Find(x => x.Name.StartsWith(\"Jo\"));\r\n            }\r\n            return true;\r\n        }`",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1457/comments",
    "author": "mbaletic",
    "comments": [
      {
        "user": "JensSchadron",
        "created_at": "2020-02-08T23:24:01Z",
        "body": "Hi @mbaletic,\r\nCan you show us what the result is of `Server.MapPath(\"~/db.db\")`?\r\nAlso, could you provide us with the version of LiteDB you're utilizing?"
      },
      {
        "user": "mbaletic",
        "created_at": "2020-02-08T23:32:50Z",
        "body": "C:\\\\Users\\\\user\\\\source\\\\repos\\\\project\\\\project\\\\db.db\r\n\r\nLatest version from nuget"
      },
      {
        "user": "mbaletic",
        "created_at": "2020-02-09T10:08:48Z",
        "body": "What's weird is that Db is working in console application but on my MVC app it doesn't."
      },
      {
        "user": "mbaletic",
        "created_at": "2020-02-09T15:26:00Z",
        "body": "Help!!!"
      },
      {
        "user": "mbdavid",
        "created_at": "2020-02-10T19:47:36Z",
        "body": "Did you try to put this path fixed in LiteDatabase creation? This folder has permission on IIS?"
      },
      {
        "user": "mbaletic",
        "created_at": "2020-02-11T20:33:57Z",
        "body": "Yes and yes"
      },
      {
        "user": "JensSchadron",
        "created_at": "2020-02-11T21:04:04Z",
        "body": "Could you provide us with the stacktrace of the exception?\r\nAlso, it might speed things up if we could get some minimal code that easily reproduces your exception as I can't seem to reproduce your issue."
      },
      {
        "user": "JensSchadron",
        "created_at": "2020-02-12T18:34:25Z",
        "body": "@mbaletic does this mean your issue has been resolved?"
      }
    ]
  },
  {
    "number": 1455,
    "title": "[QUESTION] Can't get collection of interface",
    "created_at": "2020-02-08T22:33:06Z",
    "closed_at": "2020-02-12T16:09:03Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1455",
    "body": "Hi!\r\n\r\nIn version 4.1.4 I was able to get interface collection like\r\n```\r\njobsDb.GetCollection<IJob>(\"jobs\");\r\n```\r\nIn version 5.0.1 I can't do this - it needs type, not interface.\r\n\r\nWhy? How to fix it?",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1455/comments",
    "author": "moabtools",
    "comments": [
      {
        "user": "JensSchadron",
        "created_at": "2020-02-11T17:05:42Z",
        "body": "Hi @moabtools \r\n\r\nI've tried to reproduce your issue, however... I didn't find anything that could be wrong.\r\nYou can find the code that I used below (tested against v5.0.2 though) :)\r\n\r\n```csharp\r\nclass Program\r\n{\r\n    static void Main(string[] args)\r\n    {\r\n        using var db = new LiteDatabase(\"test.db\");\r\n        var collection = db.GetCollection<IFruit>();\r\n        collection.Insert(new Apple{Amount = 2});\r\n        collection.Insert(new Lemon{ExpiryDate = DateTimeOffset.Now.AddDays(2)});\r\n\r\n        var fruitSalad = collection.FindAll().ToList();\r\n        \r\n        Debugger.Break();\r\n    }\r\n}\r\n\r\ninterface IFruit\r\n{\r\n    [BsonId]\r\n    Guid Id { get; set; }\r\n}\r\n\r\nclass Apple : IFruit\r\n{\r\n    public Guid Id { get; set; }\r\n    public string Type => nameof(Apple);\r\n    \r\n    public int Amount { get; set; }\r\n}\r\n\r\nclass Lemon : IFruit\r\n{\r\n    public Guid Id { get; set; }\r\n    public string Type => nameof(Lemon);\r\n    \r\n    public DateTimeOffset ExpiryDate { get; set; }\r\n}\r\n```\r\n\r\nInspecting the fruitsalad list gives us 1 Apple and 1 lemon object with the correct properties.\r\nCan you let us know if you still have the same issue on 5.0.2? If not, you can close the issue :)"
      },
      {
        "user": "moabtools",
        "created_at": "2020-02-12T16:09:02Z",
        "body": "Sorry, it was urgent and I temporary moved to Mongo :) So, if you checked it - I think it works now."
      }
    ]
  },
  {
    "number": 1453,
    "title": "[QUESTION] How to correctly set a shared connection?",
    "created_at": "2020-02-08T21:13:07Z",
    "closed_at": "2020-02-08T22:14:36Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1453",
    "body": "Hi all, I am on v5.0.1 and I don't understand how to set the connection as shared. I have tried with both Mode=Shared and Connection=Shared but if I open the database in LiteDB Studio and then in my app or the opposite, I receive an exception stating that the file is already opened in another process.\r\n\r\nCan you tell me what is the correct way of setting the connection as shared?\r\nThanks in advance",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1453/comments",
    "author": "darcome",
    "comments": [
      {
        "user": "JensSchadron",
        "created_at": "2020-02-08T22:07:51Z",
        "body": "@darcome Here's a working example of how to run LiteDB in Shared connection mode\r\n```csharp\r\nclass Program\r\n{\r\n\tstatic async Task Main(string[] args)\r\n\t{\r\n\t\tawait Task.WhenAll(\r\n\t\t\tAction(),\r\n\t\t\tAction());\r\n\t}\r\n\r\n\tprivate static async Task Action()\r\n\t{\r\n\t\tusing var db = new LiteDatabase(@\"Filename=database.db;Password='1234';connection=shared\");\r\n\t\tawait Task.Delay(1000);\r\n\t}\r\n}\r\n```\r\n\r\nIf you prefer using a connectionString object instead of a literal string, you can also replace the string with something like this\r\n```csharp\r\nnew ConnectionString(@\"database.db\")\r\n{\r\n\tPassword = \"1234\",\r\n\tConnection = ConnectionType.Shared\r\n};\r\n```\r\n"
      },
      {
        "user": "darcome",
        "created_at": "2020-02-08T22:14:36Z",
        "body": "@JensSchadron THank you very much! It worked like a charm!"
      },
      {
        "user": "djarvis",
        "created_at": "2020-10-19T13:36:02Z",
        "body": "I see that I cannot use shared mode when I also specify Upgrade=true?"
      },
      {
        "user": "TerenceWallace",
        "created_at": "2021-08-03T04:14:39Z",
        "body": "I cannot get it to work using two separate instances of LiteDB.Studio 'Check Shared' nothing works. (v. 5.0.11)"
      },
      {
        "user": "lbnascimento",
        "created_at": "2021-08-03T14:07:48Z",
        "body": "@TerenceWallace Are you getting any specific error? It should work if both instances are opened in shared mode."
      },
      {
        "user": "TerenceWallace",
        "created_at": "2021-08-03T16:11:22Z",
        "body": "> \r\n> \r\n> @TerenceWallace Are you getting any specific error? It should work if both instances are opened in shared mode.\r\n\r\nYes, I am getting \"The process cannot access the file \"....{filename.db}\" because it is being used by another process.  In both instances (i.e. [Instance 1] running VS in debug mode; [Instance 2] running by double clicking the LiteDB.Studio.exe)  the \"Shared\" box is checked.\r\n\r\nI can send the full solution file to view it for yourself.\r\n"
      },
      {
        "user": "lbnascimento",
        "created_at": "2021-08-03T18:33:16Z",
        "body": "@TerenceWallace Do you get this error for both instances? Or does the first instance open the file successfully and the second one fails?"
      },
      {
        "user": "TerenceWallace",
        "created_at": "2021-08-03T19:35:41Z",
        "body": "Only the second instance fails.  The first instance works fine without any issues."
      },
      {
        "user": "lbnascimento",
        "created_at": "2021-08-03T20:43:41Z",
        "body": "@TerenceWallace This is weird. You can send the solution and the datafile to me at lbnascimento@inf.ufrgs.br"
      },
      {
        "user": "TerenceWallace",
        "created_at": "2021-08-04T14:37:22Z",
        "body": "I have emailed you the solution.  Thanks for looking into it any feedback is appreciated. "
      },
      {
        "user": "lbnascimento",
        "created_at": "2021-08-04T18:54:03Z",
        "body": "@TerenceWallace The project you sent me uses a very old version of LiteDB.Studio. It should work fine in the latest version."
      },
      {
        "user": "TerenceWallace",
        "created_at": "2021-08-04T19:41:15Z",
        "body": "@lbnascimento is v5.0.11 the very old version?  The files come directly from that version.  Only, the files are compiled using the .NET 4.6 Framework.  \r\n\r\nUnfortunately, we are not a Web 2.0 company and do not rush to the latest 'bells & whistles' of MS Framework(s).  \r\n\r\nIF your saying that the latest (.NET, CORE 3.**, etc.) is a requirement for LiteDB then I can understand that this will not work for us.  "
      },
      {
        "user": "lbnascimento",
        "created_at": "2021-08-04T19:56:17Z",
        "body": "@TerenceWallace v5.0.11 is the latest version of LiteDB. You're running a very old version of LiteDB.**Studio**, which apparently has a bug when opening datafiles in shared mode."
      },
      {
        "user": "TerenceWallace",
        "created_at": "2021-08-04T19:59:54Z",
        "body": "Confirmed. It works perfectly now.  Thank you.  "
      }
    ]
  },
  {
    "number": 1450,
    "title": "[QUESTION] What's the equivalent for db.GetCollection<Command>(\"commands\").Include(new string[] { \"$.Package\", \"$.Command\", \"$.Command.Package\" }) in version 5?",
    "created_at": "2020-02-07T16:34:17Z",
    "closed_at": "2020-02-07T19:59:12Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1450",
    "body": "Hi there!\r\n\r\nI have migrated LiteDB from version 4 to 5 and face the problem that `Include()` doesnt' accept a string **ARRAY** argument anymore.\r\n\r\nSo far, I have used\r\n`db.GetCollection<Command>(\"commands\").Include(new string[] { \"$.Package\", \"$.Command\", \"$.Command.Package\" })`\r\n\r\n`Command` is an abstract class and there are different implementations of it. I save all of them in one collection. Some of them have DBRefs to other objects, some of them have not. That's the reason why I cannot use\r\n\r\n`db.GetCollection<Command>(\"commands\").Include(t => t.Package)`\r\n\r\nbecause the abstract class `Command` does not have a `Package` property.\r\n\r\nWhat's the correct way in version 5 to include the DbRefs (and even nested DBRefs) in this scenario with abstract classes?\r\n\r\nLooking forward to your answer. Thank you!",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1450/comments",
    "author": "loebi-ch",
    "comments": [
      {
        "user": "lbnascimento",
        "created_at": "2020-02-07T18:04:49Z",
        "body": "@loebi-ch There's an overload of `Include` that takes a `BsonExpression` as argument, and strings are implicitly converted to `BsonExpression`, so you can simply use `db.GetCollection<Command>(\"commands\").Include(\"$.Package\")` for your first include. This should work for abstract classes with no issues, even if some of the subclasses don't have a `Package` property.\r\n\r\nRegarding the rest of your question, could you post your classes (or a simplified version of them) and some usage? If `$.Command` is a reference from an instance of `Command` to another, it won't work because LiteDB does not support circular references (in fact, it should not work in v4 too)."
      },
      {
        "user": "loebi-ch",
        "created_at": "2020-02-07T19:34:28Z",
        "body": "Thank you @lbnascimento for your very fast response.\r\n\r\nI wrote \"I have migrated LiteDB from version 4 to 5 and face the problem that Include() doesn't accept a string argument anymore.\" Actually I meant \"STRING ARRAY\".\r\n\r\nSo before in version 4 I used a string array like this:\r\n\r\n`db.GetCollection<Command>(\"commands\").Include(new string[] { \"$.Package\", \"$.Command\", \"$.Command.Package\" })`\r\n\r\nDoes the correct new approach in version 5 looks like this:\r\n\r\n`db.GetCollection<Command>(\"commands\").Include(\"$.Package, $.Command, $.Command.Package\")`\r\n\r\nA string instead of a string array? And can I just comma separate it, or do I have to use multiple includes like\r\n\r\n`db.GetCollection<Command>(\"commands\").Include(\"$.Package\").Include(\"$.Command\").Include(\"$.Command.Package\")`\r\n\r\nActually there is no rest in my question... but I see your confusion because in my example I have used `$.Command` in db.GetCollection<Command>(\"commands\")... but forget about this, there are no circular references and I understood that this is not supported."
      },
      {
        "user": "lbnascimento",
        "created_at": "2020-02-07T19:40:42Z",
        "body": "@loebi-ch You have to make multiple calls to `Include`, in the same order that you used to place the expressions in the string array. So yes, it would look something like `db.GetCollection<Command>(\"commands\").Include(\"$.Package\").Include(\"$.Command\").Include(\"$.Command.Package\")`.\r\n\r\nWe are considering creating a new overload to `Include` that takes a `params BsonExpression[]` as input in the next incremental release."
      },
      {
        "user": "loebi-ch",
        "created_at": "2020-02-07T19:59:12Z",
        "body": "Thank you!"
      }
    ]
  },
  {
    "number": 1308,
    "title": "How to filter using SQL syntax",
    "created_at": "2019-09-01T18:50:57Z",
    "closed_at": "2019-09-05T20:26:30Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1308",
    "body": "Hi there, I have a quick question.\r\n\r\nI'm trying out the new v5-aplha version. From what I understand this should support a new SQL-like query syntax? But the documentation it still a bit scarce about this.\r\n\r\nIs it possible to use a SQL-like query from code? For exmaple, something like:\r\n\r\n```\r\nusing (var db = new LiteDatabase(\"test.db\"))\r\n{\r\n    var result = db.Query(\"SELECT $ FROM Books WHERE Title = 'Acme'\");\r\n}\r\n```\r\n\r\nThanks in advance.",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1308/comments",
    "author": "chinookproject",
    "comments": [
      {
        "user": "JensSchadron",
        "created_at": "2019-09-05T19:57:10Z",
        "body": "Hi @chinookproject,\r\n\r\nI'm glad to inform you that you were really close to it.\r\nThe code you need to is something like this (which gives you a list of BsonDocuments).\r\n```csharp\r\nusing (var db = new LiteDatabase(new MemoryStream()))\r\n{\r\n    using (var bsonReader = db.Execute(\"SELECT $ FROM Books WHERE  Title = 'Acme'\"))\r\n    {\r\n        var output = new List<BsonValue>();\r\n\r\n        while (bsonReader.Read())\r\n        {\r\n            output.Add(bsonReader.Current);\r\n        }\r\n\r\n        return output;\r\n    }\r\n}\r\n```\r\n\r\nPlease note though that you will still need to do the conversion from BsonDocuments to actual class objects yourself (unless there's some way I don't know about yet).\r\n\r\nI think this answers your question so I'm going to close the issue. If it hasn't, feel free to re-open the issue and tell what's still missing. (Please also note that v5 is still in the beta stage and documentation isn't finished yet) 🙂 "
      }
    ]
  },
  {
    "number": 1286,
    "title": "Could you tell us when can we get a stable V5 version of LiteDB?",
    "created_at": "2019-08-15T00:54:29Z",
    "closed_at": "2019-09-05T20:28:16Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1286",
    "body": "",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1286/comments",
    "author": "DEVBOX10",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2019-08-15T14:38:15Z",
        "body": "Hi @mrscript21, there is no fixed date yet. I released alpa version and have plans to release beta before september. Then, I will wait for community do more tests in real-life and get some feedbacks before stable version. This may occurs in 2 or 3 months"
      },
      {
        "user": "stephenhauck",
        "created_at": "2019-08-15T19:03:31Z",
        "body": "@mrscript21 , as I am new to LiteDB and coming from another object database can you tell me what features in version 5 you are looking forward to the most so that I can keep them in mind as compared with the current release I am working with ?"
      },
      {
        "user": "DEVBOX10",
        "created_at": "2019-08-17T13:59:42Z",
        "body": "@mbdavid, First of all, thanks for the answer. That could help me for coming schedule how to adopt V5 of LiteDB.\r\n\r\n"
      },
      {
        "user": "DEVBOX10",
        "created_at": "2019-08-17T14:07:56Z",
        "body": "Hi @stephenhauck.\r\nWell, I am also new to LiteDB but as I found this repo and LiteDB, I was happy to wish to try it.\r\nI could say what I liked from LiteDB.\r\nFirst is .NET based and even adopted .NET Core newest APIs set such.\r\nSecond is just single .dll file to offer db features much attractive point too.\r\nThird as I think, in many cases, local db, and lightweight db such features need to be considered for many applications.\r\nWe see SQLite and some others keep going on such purposes.\r\nThat is why I really consider to adopt LiteDB but would like to see more improvement with coming V5 release too.\r\nThanks."
      },
      {
        "user": "JensSchadron",
        "created_at": "2019-08-20T13:12:16Z",
        "body": "v5 also has a more visually appealing tooling called LiteDB.Studio. It's currently only available for Windows, but I'm working on a Mac version as well."
      },
      {
        "user": "JensSchadron",
        "created_at": "2019-09-05T20:28:16Z",
        "body": "I'm going to close this \"issue\" to make sure we don't lose sight of older reported issues 🙂 "
      }
    ]
  },
  {
    "number": 1282,
    "title": "[question] [bug] which simbol to use for naming reserved collections in my application?",
    "created_at": "2019-08-13T13:54:13Z",
    "closed_at": "2019-08-14T06:54:55Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1282",
    "body": "Hi,\r\nCollection name starting with \"_\" is used to naming reserved collection inside LiteDB engine.\r\n\r\n[bug]\r\nIf i create a collection named \"$col\" directly, i recieve an exeption: \"invalid format \"$col\".\r\nBut if, for example, i create a collection named \"col\" and i rename it as \"$col\", everything works fine. Is this a bug?\r\n\r\n[question]\r\nNow i know that can be used only letters, numbers and _\r\nWhich starting simbol can i use to identify my reserved collections instead \"$\"?\r\nCan use \"_\" too? I think it could be dangerous.\r\nIf it is possible, i prefer to avoid numbers.\r\n\r\nThanks\r\n",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1282/comments",
    "author": "alemik",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2019-08-13T17:44:11Z",
        "body": "Hi @alemik, are you using v4 or v5? There are some difference in versions.\r\n\r\nI found a bug (in v5) in this nameing checking - will fix"
      },
      {
        "user": "mbdavid",
        "created_at": "2019-08-13T20:48:33Z",
        "body": "Here v5 name validation:\r\n\r\n- Names should be a word: `[a-z]_$` (case insensitive)\r\n- Names should not starts with `$` (reserved for system collections)\r\n\r\nSystem collection are \"virtual collections\", is not concrete data (like `$transactions` returns all open transactions) or \"functions\" (like `$file_csv('c:\\temp\\data.csv')` to read data from CSV file as a collection)\r\n\r\nCollections that starts with `_` are normal user collections. Need attention only for FileStorage: file storage need 2 user collections to store data and, by default, names are `_files` and `_chunks` (this names can be changed is used with `GetStorage` method)."
      },
      {
        "user": "alemik",
        "created_at": "2019-08-14T06:54:55Z",
        "body": "Thanks @mbdavid \r\nI'm still using V4 and waiting for V5 stable release.\r\nFor now i will use _ with care."
      }
    ]
  },
  {
    "number": 1250,
    "title": "Multithreaded data reading",
    "created_at": "2019-07-12T10:12:20Z",
    "closed_at": "2019-07-29T00:58:26Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/1250",
    "body": "If I have five tables and each table has 140,000 data, and now five threads are going to read the data in full, why does the time consumption increase",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/1250/comments",
    "author": "linxiua",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2019-07-25T01:38:04Z",
        "body": "Hi @MaoqingWang, in v5, each thread will use a exclusive `FileStream` instance. In v4, all threads use same FileStream instance. You will see a great performance improve in this way."
      },
      {
        "user": "JensSchadron",
        "created_at": "2019-07-28T20:44:22Z",
        "body": "@MaoqingWang does this answer? If so, could you close the issue?"
      }
    ]
  },
  {
    "number": 869,
    "title": "When will we get ver 5 beta or alpha? also will you ever open a discord?",
    "created_at": "2018-01-16T11:27:00Z",
    "closed_at": "2019-07-31T21:00:59Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/869",
    "body": "I just want to try out ver 5 of the lib and A discord would be nice for more general talking.",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/869/comments",
    "author": "Moar-Chan",
    "comments": [
      {
        "user": "Moar-Chan",
        "created_at": "2018-01-16T11:27:26Z",
        "body": "How do i assign issue as question?"
      },
      {
        "user": "mbdavid",
        "created_at": "2018-01-16T12:47:47Z",
        "body": "Hi @Moar-Chan, I had a Label called \"question\" but I don't use too much.\r\n\r\nAbout v5, no idea yet about beta - It's just because I didn't know well all thinks that I want implement in this new version.\r\n\r\nSometimes it's hard  to know what people expect from a native embedded database and what is possible (for me) develop. I want create a twitter poll about some features that sound nice to me but I know well if anyone want this.\r\n\r\nBut tell me, what you read about v5 that make you question this?"
      },
      {
        "user": "Moar-Chan",
        "created_at": "2018-01-16T18:51:32Z",
        "body": "I just thought about general speed but also the db .exe thing might be cool."
      },
      {
        "user": "JensSchadron",
        "created_at": "2019-07-31T21:00:59Z",
        "body": "@Moar-Chan Wanted to let you know that v5 will be released in the very near future (if no issues come up). The labels can sadly only be assigned by david (and myself since a week). I'll close this issue as well as I'm doing some cleaning in the issue list. If you've some more questions, you can also let us know something through the gitter (link in the README) or create another issue."
      }
    ]
  },
  {
    "number": 671,
    "title": "Qual a quantidade total de armazenamento",
    "created_at": "2017-08-01T14:06:44Z",
    "closed_at": "2020-02-05T17:39:27Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/671",
    "body": "Olá Maurício. Em primeiro lugar meus parabéns pela sua iniciativa, audácia e qualidade do seu projeto.\r\nJá havia ouvido falar do LiteDB mas não havia utilizado e após ter contato com ele achei formidável.\r\nAinda não efetuei testes com grande massa de dados mas gostaria de saber qual o limite de armazenamento do banco de dados e, com grande volume de dados o banco onera o desempenho da aplicação?\r\nO LiteDB para aplicações simples e médias pode ser a grande solução para desenvolvedores .NET, já que é 100% C#, no qual desenvolvo e nos traz o poder de manipular os dados inteiramente dentro das aplicações.\r\n\r\nParabéns,\r\n\r\nMarcelo Henrique",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/671/comments",
    "author": "mhnegrao",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2017-08-01T18:17:26Z",
        "body": "Olá Marcelo, obrigado. E que bom poder escrever em portugues :)\r\n\r\nCara, não existe limitação de tamanho no LiteDB, ele se comporta bem para qualquer tamanho. Já tive relato de pessoas falando em um único arquivo de 60Gb sem nenhum problema. Se as buscas são feitas por indice, a complexiadade o O(log(n)), ou seja, mesmo que aumente muito a quantidade de registros a quantidade de passos para encontrar um registro pouco é afetada.\r\n\r\nO grande desafio tem sido a questão da concorrência de escrita. A gestão de lock de disco e de thread tem me tirado o sono, pois é bem complexa e ainda não cheguei na solução ideal. Estou trabalhando na branch `dev` que, a principio, deve corrigir alguns problemas em relação a isso. Em breve deve pedir ajuda ao pessoas para uma bateria de testes maior (o pessoal tem muita criatividade nisso :)\r\n\r\nAbraço,"
      },
      {
        "user": "mhnegrao",
        "created_at": "2017-08-01T19:24:45Z",
        "body": "Muito Obrigado pela resposta Maurício!!!\r\nDependendo de mim, seu projeto vai longe!!!! 😉\r\nÉ bom ver um brasileiro mostrando sua qualificações e ter reconhecimento internacional.\r\nSe eu tiver mais dúvidas , lhe procuro.\r\n\r\nAbraços!\r\n"
      }
    ]
  },
  {
    "number": 590,
    "title": "How does LiteDB respond to changes to class definitions?",
    "created_at": "2017-04-28T20:55:59Z",
    "closed_at": "2017-05-01T14:24:32Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/590",
    "body": "I'm considering LiteDB because RDBMS upgrading is cumbersome and I want to be able to change my schema easily.   How does LiteDB handle changes to class definitions?   If a document's fields does not match the class fields in my query, does it raise an error, or just ignore?\r\n\r\n",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/590/comments",
    "author": "mludlum",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2017-04-29T16:03:08Z",
        "body": "Hi @mludlum, take a look here #524 and here #328 - LiteDB, in this aspect, works as MongoDB data structure."
      },
      {
        "user": "mludlum",
        "created_at": "2017-05-01T14:24:32Z",
        "body": "Thanks @mbdavid!\r\n\r\nSummary:  New or removed fields are handled gracefully. Changing datatype of existing field can be converted in code by (e.g.) using db.Engine.UserVersion to track your db versions.  When renaming class fields, use BsonField attribute to differentiate between storage name and class field name.\r\n"
      }
    ]
  },
  {
    "number": 589,
    "title": "Valid Database file",
    "created_at": "2017-04-27T09:55:55Z",
    "closed_at": "2020-02-05T14:29:02Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/589",
    "body": "It is possible to check if file is valid?\r\nFor ex:\r\nLiteDatabase ldb = new LiteDatabase(\"some_wrong_file.swf\");\r\n",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/589/comments",
    "author": "shai-benshimol",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2017-05-04T22:49:12Z",
        "body": "Hi @shai-benshimol, if you use LiteEngine ctor, datadase will be open at this time (not as lazy as LiteDatabase) and will be validate. "
      },
      {
        "user": "lbnascimento",
        "created_at": "2020-02-05T14:29:02Z",
        "body": "Hi! With the objective of organizing our issues, we are closing old unsolved issues. Please check the latest version of LiteDB and open a new issue if your problem/question/suggestion still applies. Thanks!"
      }
    ]
  },
  {
    "number": 584,
    "title": "How to include nth level reference entity ?",
    "created_at": "2017-04-20T18:04:08Z",
    "closed_at": "2020-02-05T14:28:37Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/584",
    "body": "I have a object \"User\" . Now my user class has a entity \"Role\" . Role class has two more sub entities \"Navigation\" and \"Action\".So while querying I can include \"Role\" but how to include child entities of \"Role\".\r\n\r\nclass User\r\n{\r\n\r\n> Role Role{get;set;}\r\n\r\n}\r\nclass Role \r\n{\r\n\r\n> Action Actions{get;set;}\r\nNavigation Navigations{get;set;}\r\n\r\n}\r\n\r\n> _collection.Include(x => x.Roles).Include(x => x.State).Find(query);\r\nSo it only gives user and role but navigation and action both are empty.",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/584/comments",
    "author": "DebPattanaik",
    "comments": [
      {
        "user": "DebPattanaik",
        "created_at": "2017-04-21T02:14:34Z",
        "body": "I tried something below ,it's fetching all required no of records but all fields are blank only id field is populated .\r\n\r\n> return _collection.Include(x => x.Roles).Include(\"Roles.Navigations\").Include(x => x.State).Find(query);"
      },
      {
        "user": "mbdavid",
        "created_at": "2017-04-23T21:18:40Z",
        "body": "Hi @DebPattanaik, LiteDB supports only first level of includes. For more leves, try use `Include(Action<T>)` as here: #561 "
      },
      {
        "user": "lbnascimento",
        "created_at": "2020-02-05T14:28:37Z",
        "body": "Hi! With the objective of organizing our issues, we are closing old unsolved issues. Please check the latest version of LiteDB and open a new issue if your problem/question/suggestion still applies. Thanks!"
      }
    ]
  },
  {
    "number": 564,
    "title": "Serialization of ExpandoObject throws null-pointer exception",
    "created_at": "2017-04-06T13:40:13Z",
    "closed_at": "2020-02-05T14:27:37Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/564",
    "body": "Here is the test:\r\n\r\n```c#\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Dynamic;\r\nusing System.Linq;\r\nusing System.Text;\r\nusing System.Threading.Tasks;\r\nusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\nusing Microsoft.Xrm.Sdk;\r\n\r\nnamespace LiteDB.Tests.Document\r\n{\r\n    [TestClass]\r\n    public class ComplexTypeTest\r\n    {\r\n        [TestMethod]\r\n        public void ComplexType_Test()\r\n        {\r\n            var mapper = new BsonMapper();\r\n            var o = new ExpandoObject();\r\n\r\n            var result = mapper.ToDocument(o);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nAnd stack trace:\r\n\r\n```\r\n   at LiteDB.BsonMapper.ToDocument[T](T entity) in C:\\Workspace\\shytikov\\LiteDB\\LiteDB\\Mapper\\BsonMapper.Serialize.cs:line 29\r\n   at LiteDB.Tests.Document.ComplexTypeTest.ComplexType_Test() in C:\\Workspace\\shytikov\\LiteDB\\LiteDB.Tests\\Mapper\\ComplexTypeTest.cs:line 21\r\n```",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/564/comments",
    "author": "shytikov",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2017-04-08T15:40:14Z",
        "body": "Hi @shytikov, LiteDB was written in NET3.5, so there is no support for `ExpandoObject` or any `dynamic`. If you wants works with generic entity, try use `BsonDocument`."
      },
      {
        "user": "pwen090",
        "created_at": "2019-05-21T22:30:42Z",
        "body": "Is this still the case? "
      },
      {
        "user": "lbnascimento",
        "created_at": "2020-02-05T14:27:37Z",
        "body": "Hi! With the objective of organizing our issues, we are closing old unsolved issues. Please check the latest version of LiteDB and open a new issue if your problem/question/suggestion still applies. Thanks!"
      }
    ]
  },
  {
    "number": 562,
    "title": "search find complex prop - question",
    "created_at": "2017-04-05T07:20:25Z",
    "closed_at": "2018-01-11T12:56:34Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/562",
    "body": "Hi, \r\none question:\r\nwhat do i need to do in order to get find results on complex prop,\r\nwhich it seems it doesn't  find it (either case sensitive or insesitive)?:\r\n\r\naka\r\n> col.Find(x=>x.Categories.Any(c=>c.Name.Contains(\"node\"))).Dump();\r\nor\r\n> col.Find(x=>x.Categories.Any(c=>c.Name.ToLower().Contains(\"node\"))).Dump(); //throws exception\r\n\r\nlinqpad:\r\n```csharp\r\npublic class BEntity\r\n{\r\n\tpublic BEntity()\r\n\t{\r\n\t\tDateCreated = DateTime.Now;\r\n\t}\r\n\tpublic int ID { get; set; }\r\n\tpublic DateTime DateCreated { get; set; }\r\n\tpublic DateTime DateChanged { get; set; }\r\n\tpublic int Count { get; set; } //for paging\r\n\t\t\t\t\t\t\t\t   //  public bool Deleted { get; set; }\r\n\r\n}\r\n public class Post : BEntity\r\n    {\r\n\r\n        public string Title { get; set; }\r\n        public string Content { get; set; }     \r\n\r\n        public List<Category> Categories { get; set; }\r\n    }\r\n   public class Category: BEntity\r\n{\r\n\tpublic string Name { get; set; }\r\n\t\r\n}\r\nvoid Main()\r\n{\r\nvar mapper = new BsonMapper();// BsonMapper.Global;\r\n\t//mapper.IncludeFields = true;\r\n\t//mapper.IncludeNonPublic = true;\r\n\tmapper.Entity<Post>().Index(x => x.Title).Index(x => x.Content)\t\r\n\t.DbRef(x => x.Categories, \"category\");\r\n\t//dbpost\t\r\n\tmapper.Entity<Category>()\r\n\t.Index(x => x.Name);\r\n         \r\n      string path =@\"data.db\";\r\n\r\n\tusing (var db = new LiteDatabase(path, mapper))\r\n\t//using (var db = new LiteDatabase(path))\r\n\t{\r\n               var col = db.GetCollection<Post>(\"post\").Include((c)=>c.Categories).Include(s=>s.Tags);\r\n\t\tvar catcol = db.GetCollection<Category>(\"category\");\r\n                 using (var dbb = new LiteRepository(path))\r\n\t\t{\r\n\t\t\tdbb.Query<Post>().Include(s=>s.Categories).Where(x => x.Categories.Any(c=>c.Name.Contains(\".net\")))\r\n\t\t\t.ToList().Dump();\r\n                 }\r\n\t\t//col.FindAll().Dump();\r\n        col.Find(x=>x.Categories.Any(c=>c.Name.Contains(\"node\"))).Dump();\r\n\t\tcatcol.FindAll().Dump();\r\n     }\r\n }\r\n\r\n\r\n```",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/562/comments",
    "author": "Jacknq",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2017-04-06T12:03:28Z",
        "body": "Hi @Jack85, using `Find` method from `LiteCollection` the litedb engine always use an index to find document. Can be use multiple indexes to do that. When you write some Linq expression it´s converter to `Query` object.\r\nThis conversion is not simple and it´s implemented only basic instructions. If you check `QueryVisitor` class, it´s possible check this conversion.\r\nWhen you query data using index it´s not possible change data inside already made index, like use `ToLower()` because inside index key, you name field are stored using normal case.\r\nYou can create your own index using `ToLower` method and than query this.\r\n```\r\nBsonMapper.Global.Entity<Person>()\r\n    .Index(\"nameLowerCase\", x => x.Name.ToLower());\r\n\r\ncol.Find(Query.Contains(\"nameLowerCase\", myVar));\r\n```"
      },
      {
        "user": "Jacknq",
        "created_at": "2017-04-06T12:11:15Z",
        "body": "Good,  \r\nAnd when i want to do it more generic way just to filter that complex prop like ef is doin ,passing that expresion? Is there a way? \r\nI saw some getter func in api on index. "
      },
      {
        "user": "mbdavid",
        "created_at": "2017-04-06T12:56:29Z",
        "body": "If you want more complex queries it will not use an index (like in sql server or any database). All data must be read to checked if pass in your filter. So, it´s just use linq to object, like:\r\n\r\n```\r\ncol\r\n    .Find(x => x.Age >= 40)\r\n    .Where(x => x.Children.Count(z => z.Age < 18));\r\n```\r\n\r\nInside `Find`, filter using index, inside `Where` filter using simple object compare values."
      },
      {
        "user": "Jacknq",
        "created_at": "2017-04-06T15:32:49Z",
        "body": "So you are sayng there is no way to use index in expression like \r\n> X. Children. Any(y=>y. Name. Contains? \r\n\r\nJust to filter nice way.. "
      },
      {
        "user": "mbdavid",
        "created_at": "2017-04-06T17:24:57Z",
        "body": "No, its not possible filter this, using an index. You always need, in this case, test all documents (or already sub filtered documents). "
      },
      {
        "user": "Jacknq",
        "created_at": "2017-04-06T20:42:07Z",
        "body": "Ok, thanks. \r\nThen i think this could be cool feature request,  to filter like this on indexed fields for level1 props. \r\nI think lot of problems coming from that there is find and where separately."
      },
      {
        "user": "Jacknq",
        "created_at": "2017-04-07T07:08:25Z",
        "body": "so this one did the trick, catch was to filterout nulls\r\n```\r\ncol.Find(x=>x.ID>0).Where(x=>x.Categories!=null \r\n&& x.Categories.Any(c=>c.Name.Contains(\".net\"))).Dump();\r\n```\r\nwhich forces me and brings me to more generic version (without using index)\r\n` IEnumerable<TEntity> f = col.FindAll().Where(predicate.Compile()); `"
      },
      {
        "user": "mbdavid",
        "created_at": "2017-04-07T22:32:26Z",
        "body": "Use `x.ID > 0` did not filer any document (will return all documents) so it's not needed. Using `FindAll()` you will get all documents an filter all of them by your `Func`. It's could be bad solution for generic way if you have lots of documents."
      },
      {
        "user": "Jacknq",
        "created_at": "2017-04-08T09:34:55Z",
        "body": "Yes,  i would expect\r\n` find`\r\nto know how to do it,  this is relatively clear straightforward search on level1 prop where clause.\r\nMongo db doin stuff like\r\n> db.coll.find({'fieldA.fieldA2': { $elemMatch:{ text:\"ciao\"} }})\r\n\r\nAlso knows how to do it without caling out special index, in our case it should be expression"
      }
    ]
  },
  {
    "number": 561,
    "title": "Nested Includes, how to query?",
    "created_at": "2017-04-03T20:15:24Z",
    "closed_at": "2017-04-03T20:32:03Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/561",
    "body": "This was apparently done in 3.x, yet I haven't found an example of it in the Wiki or any of the issues.\r\n\r\n```c#\r\npublic class Book\r\n{\r\n    [BsonId] public string Id { get; set; }\r\n    public List<Author> Authors { get; set; }\r\n}\r\n\r\npublic class Author\r\n{\r\n    public string Role { get; set; }\r\n    [BsonRef(\"users\")] public User User { get; set; }\r\n}\r\n\r\npublic class User \r\n{\r\n    [BsonId] public string Id { get; set; }\r\n    public string Name { get; set; }\r\n}\r\n```\r\n\r\nI want to query books and get the full User object. How is this possible? I've tried:\r\n\r\n1. `books.Include(x => x.Authors[0].User).FindById(id);`\r\n2. `books.Include(\"Authors.User\").FindById(id);`\r\n\r\nBoth return only the user's `Id` (i.e. no inclusion). Any hints or suggestions would be appreciated.",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/561/comments",
    "author": "freezy",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2017-04-03T20:23:57Z",
        "body": "Hi @freezy, there is no nested includes for List. In this case it´s better use `Include(Action<T>)`, so you can define your function, likes:\r\n\r\n`books.Include(x => x.Authors.ForEach(z => z.User = users.FindById(z.User.UserId))`"
      },
      {
        "user": "freezy",
        "created_at": "2017-04-03T20:25:39Z",
        "body": "Thanks for the quick response! Would this be a possible feature in the future?"
      },
      {
        "user": "mbdavid",
        "created_at": "2017-04-03T20:28:27Z",
        "body": "I tried to this but was not easy to be done because. In this case, need be deserialized many subdocuments per document and it´s not easy to detect this. Thats why I added this `Include` using an `Action`."
      },
      {
        "user": "freezy",
        "created_at": "2017-04-03T20:32:03Z",
        "body": "Alright, thanks for the info!"
      },
      {
        "user": "ghost",
        "created_at": "2019-01-12T18:42:26Z",
        "body": "Hy,\r\nI try to achieve the same thing, but I didn't get it to work. I already tried the example above with the suggested function (but I guess it should be z.User.Id instead of z.User.UserId):\r\nbooks.Include(x => x.Authors.ForEach(z => z.User = users.FindById(z.User.UserId)) \r\n\r\nBut I get the error message (Cannot convert lambda expression to 'string' because it's not a delegate type)\r\n\r\nIs this sample still valid with the version 4.1.4.0?"
      },
      {
        "user": "HernanMartielli",
        "created_at": "2023-11-24T20:07:21Z",
        "body": "Could anyone solve this?"
      }
    ]
  },
  {
    "number": 554,
    "title": "Error \"Invalid format: Collection\" when doing Upsert",
    "created_at": "2017-03-29T02:57:27Z",
    "closed_at": "2020-02-05T14:27:04Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/554",
    "body": "I am trying to do an \"Collection.Upsert\" on the following POCO class. [There are other classes like this where upsert works fine!. Only this class fails]. The error is: **Error \"Invalid format: Collection\" when doing Upsert**\r\n____________________\r\npublic class Order : BindableBase\r\n    {\r\n        public Order()\r\n        {\r\n            this.OrderItems = new List<string>();\r\n        }\r\n        public int Id { get; set; }\r\n        [BsonRef(\"OrderMaster\")]\r\n        public OrderMaster OrderMaster { get; set; }\r\n        public List<string> OrderItems { get; set; }\r\n    }\r\n_____________________\r\nStack trace:\r\n\r\n> Invalid format: Collection\r\n  at LiteDB.CollectionService.Add (System.String name) [0x0002b] in <b99fd1821def4ff9a5794b6636ed75ad>:0 \r\n  at LiteDB.LiteEngine.GetCollectionPage (System.String name, System.Boolean addIfNotExits) [0x00035] in <b99fd1821def4ff9a5794b6636ed75ad>:0 \r\n  at LiteDB.LiteEngine.Transaction[T] (System.String collection, System.Boolean addIfNotExists, System.Func`2[T,TResult] action) [0x00006] in <b99fd1821def4ff9a5794b6636ed75ad>:0 \r\n\r\n> \r\n\r\nThank you for the help..",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/554/comments",
    "author": "pattisapu01",
    "comments": [
      {
        "user": "xied75",
        "created_at": "2017-03-29T16:06:30Z",
        "body": "When you paste code block, you can use three back tick to quote it.\r\n\r\nAre your other working collections all derived from BindableBase?"
      },
      {
        "user": "mbdavid",
        "created_at": "2017-03-30T09:49:25Z",
        "body": "What collection name are you using when you call `GetCollection`?"
      },
      {
        "user": "rafaelmlourenco",
        "created_at": "2017-05-04T16:44:14Z",
        "body": "I add a similar problem. I was using a GUID string to name collections. Then I realised that Collection naming can not include '-' character. I then replaced the '-' for a '_'. But it didn't make it for me. Still had the problem. Finally I decided to shorten the name (it now has 7 characters) and, hurray, it is working."
      },
      {
        "user": "ftamminga",
        "created_at": "2017-06-23T13:26:32Z",
        "body": "I have the same problem and I think I know where the problem lies.\r\nIf a collection name exceeds 30 positions, it fails!\r\n\r\nCould you please increase the limit of the name, or at least generate some kind of error...\r\n"
      },
      {
        "user": "alexandervantrijffel",
        "created_at": "2017-07-03T12:02:53Z",
        "body": "The 30 characters limitation for a collection name is very restrictive. This does not allow me to store an instance of a class with a name like TransformationPlannerSagaStateMachine. This fails:\r\n\r\n```\r\nvar collection = db.GetCollection<TSaga>();\r\ncollection.Insert(context.Saga);\r\n```\r\n\r\nCan the name limit be increased?\r\n\r\n"
      },
      {
        "user": "MrSmoke",
        "created_at": "2017-07-27T04:30:15Z",
        "body": "I think it should be at minimum 32 characters, that way we can use guids (without -) and/or MD5 the content as the collection name "
      },
      {
        "user": "leek9",
        "created_at": "2017-07-27T18:21:17Z",
        "body": "Length limitation of 30 verified. So basically this code\r\n`db.GetCollection<T>(\"AAAA5AAA10AAA15AAA20AAA25AAA30A\").Insert(data);`\r\nwill get you this error:\r\n>    at LiteDB.CollectionService.Add(String name)\r\n   at LiteDB.LiteEngine.GetCollectionPage(String name, Boolean addIfNotExits)\r\n   at LiteDB.LiteEngine.Transaction[T](String collection, Boolean addIfNotExists, Func`2 action)\r\n   at LiteDB.LiteEngine.Insert(String collection, IEnumerable`1 docs)\r\n   at LiteDB.LiteCollection`1.Insert(IEnumerable`1 docs)\r\n"
      },
      {
        "user": "mbdavid",
        "created_at": "2017-08-03T19:25:33Z",
        "body": "Hi @MrSmoke and @leek9 changed in dev branch a14b8e6 - 60 char max length. Will be available in next major version 3.5"
      },
      {
        "user": "corelgott",
        "created_at": "2017-11-09T07:38:42Z",
        "body": "It still seems to be limites to 30 charaters in version 4.0\r\n`LiteDB/LiteDB/Engine/Structures/CollectionIndex.cs`\r\n`public static Regex IndexPattern = new Regex(@\"^[\\w](\\.?[\\w\\$][\\w-]*){0,29}$\", RegexOptions.Compiled);`\r\n\r\nAdditionally the limit in `LiteDB/LiteDB/Engine/Pages/CollectionPage.cs` seems to play a role here:\r\n`public static Regex NamePattern = new Regex(@\"^[\\w-]{1,36}$\", RegexOptions.Compiled);`"
      },
      {
        "user": "mbdavid",
        "created_at": "2017-11-10T12:32:13Z",
        "body": "Hi @corelgott, humm... really strange. I think that I change in twice and, when git request a merge (in vim) i just do :wq 😄 I will back to 60 in both cases"
      },
      {
        "user": "vanufryiuk",
        "created_at": "2017-12-11T12:32:16Z",
        "body": "Hi @mbdavid, it would be really nice to have this issue fixed in the NuGet package.\r\nDo you have any plans to deliver a new release in the nearest future?"
      },
      {
        "user": "mbdavid",
        "created_at": "2017-12-11T12:38:08Z",
        "body": "Hi @vanufryiuk, soon... maybe this week :) I'm will release v4.0.1 before v4.1 that I'm working in another branch."
      },
      {
        "user": "syaifuri",
        "created_at": "2017-12-19T12:48:03Z",
        "body": "Shit, almost 2 days do debugging the code, finally find the cause of \"exception: invalid format\" is due to character over than 30.\r\ni use version runtime : v4.0.30319"
      },
      {
        "user": "mbdavid",
        "created_at": "2017-12-19T12:57:56Z",
        "body": "Upgrade do 4.1, it´s fixed now in 60 chars (at limit of 3000 for all collections names)"
      },
      {
        "user": "RenniePet",
        "created_at": "2018-04-07T00:15:31Z",
        "body": "It would be nice with more explicit error messages than just \"Invalid format\". For example \"Name too long\" and \"Invalid character in name\" and ..."
      },
      {
        "user": "lbnascimento",
        "created_at": "2020-02-05T14:27:04Z",
        "body": "Hi! With the objective of organizing our issues, we are closing old unsolved issues. Please check the latest version of LiteDB and open a new issue if your problem/question/suggestion still applies. Thanks!"
      }
    ]
  },
  {
    "number": 551,
    "title": "Encryption password limitations",
    "created_at": "2017-03-28T05:22:27Z",
    "closed_at": "2019-07-29T18:11:43Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/551",
    "body": "Are there any limitations to the password that can be used to encrypt the database?\r\nFor example, any special characters that are not permitted, spaces etc, or length requirements?",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/551/comments",
    "author": "dgodwin1175",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2017-03-28T11:38:33Z",
        "body": "Hi @dgodwin1175, there is not limit that I know. LiteDB used SHA1 to hash your password, so it's support any char. And than use `Aes` class to encrypt your data pages."
      }
    ]
  },
  {
    "number": 548,
    "title": "How to do paging (limit, skip) with Find and Query LINQ code?",
    "created_at": "2017-03-25T14:43:58Z",
    "closed_at": "2020-02-05T14:26:49Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/548",
    "body": "I see that limit and skip are supported in the shell, but I could not find any documentation on how to achieve this using LINQ.  Is this possible?  If so, a sample would be greatly appreciate.  If not, any idea when this would be added?  This is a very necessary feature for us.  Thanks.",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/548/comments",
    "author": "softwareguy74",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2017-03-25T19:31:13Z",
        "body": "Hi @softwareguy74, you can specify Limit/Skip in `Find` method on `LiteCollection` or in `LiteQueryable`:\r\n\r\n```\r\nusing(var db = new LiteRepository(...))\r\n{\r\n    db.Query<MyClass>()\r\n        .Where(x => x.Id > 10)\r\n        .Skip(10)\r\n        .Limit(10)\r\n        .ToList()\r\n}\r\n```"
      },
      {
        "user": "softwareguy74",
        "created_at": "2017-03-27T16:35:43Z",
        "body": "But I think this start performing badly as the data set gets larger and larger.  Is there an alternative to using skip?  Since I'm assuming skip still requires the engine to scan over all the records.  I have read articles that MongoDB performs slowing using skip on large data sets as well."
      },
      {
        "user": "mbdavid",
        "created_at": "2017-03-28T11:36:40Z",
        "body": "Skip will scan not over documents, but index keys only (that why is diferent than call Skip from IEnumerable).\r\nI didn't know any other option to do this, if you have any article about that, share here to read more about it."
      },
      {
        "user": "lbnascimento",
        "created_at": "2020-02-05T14:26:49Z",
        "body": "Hi! With the objective of organizing our issues, we are closing old unsolved issues. Please check the latest version of LiteDB and open a new issue if your problem/question/suggestion still applies. Thanks!"
      }
    ]
  },
  {
    "number": 547,
    "title": "Strange System.InvalidCastException on insert 3.1.0, vs 2017, net4.6.2",
    "created_at": "2017-03-24T21:35:53Z",
    "closed_at": "2020-02-05T14:26:42Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/547",
    "body": "I'm don't understand why exception happens on last insert\r\n\r\n```C#\r\nusing LiteDB;\r\n\r\nnamespace WindowsFormsApp122\r\n{\r\n public class dbTestItem\r\n {\r\n  [BsonId] \r\n  public int Id { get; set; }\r\n  public int SomeValue { get; set; }\r\n }\r\n\r\n public static class dbTestItemHelper\r\n {\r\n  public static bool New(this dbTestItem inItem, LiteRepository inLt)\r\n  {\r\n   return inLt.Insert(inItem);\r\n  }\r\n }\r\n\r\n static class Program\r\n {\r\n  static void Main()\r\n  {\r\n   var s = Path.Combine(AppDomain.CurrentDomain.BaseDirectory, \"TestDb\");\r\n   if (File.Exists(s)) File.Delete(s);\r\n   using (var db = new LiteRepository(s)) \r\n   {\r\n    db.Insert(new dbTestItem()); // ok\r\n    var wtfitem = new dbTestItem();\r\n    wtfitem.New(db); // fail: System.InvalidCastException\r\n   }\r\n  }\r\n }\r\n}\r\n```",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/547/comments",
    "author": "wu20177",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2017-03-24T22:34:05Z",
        "body": "Please. paste error stack strace to be simple to identify the problem"
      },
      {
        "user": "xied75",
        "created_at": "2017-03-24T23:26:41Z",
        "body": "@mbdavid What is the ```wtfitem.New(db)``` doing here? Is the ```New``` an extension method? Didn't see this before"
      },
      {
        "user": "mbdavid",
        "created_at": "2017-03-25T00:08:13Z",
        "body": "Yes, New is an extension method. I don't get why this code are not working...."
      },
      {
        "user": "xied75",
        "created_at": "2017-03-25T00:29:21Z",
        "body": "Sorry I didn't see the middle of the code, I thought the **New** is LiteDB's extension method which I never see before. :(\r\n\r\nSeems the report is correct, here is the stack:\r\n\r\n```\r\nSystem.InvalidCastException: Unable to cast object of type 'System.Int32' to type 'System.Boolean'.\r\n   at LiteDB.BsonValue.op_Implicit(BsonValue value)\r\n   at App1.dbTestItemHelper.New(Customer inItem, LiteRepository inLt)\r\n   at App1.MainPage.MainPage_Loaded(Object sender, RoutedEventArgs e)\r\n```\r\n\r\nType **Customer** is from your example code; In fact the Insert does work, I can see the data in the db file (as json format:)\r\n\r\n```json\r\n{\r\n    \"_id\": 1,\r\n    \"Name\": \"John Doe\",\r\n    \"Age\": 39,\r\n    \"Phones\": [\r\n        \"8000-0000\",\r\n        \"9000-0000\"\r\n    ],\r\n    \"IsActive\": true\r\n}\r\n```"
      },
      {
        "user": "wu20177",
        "created_at": "2017-03-25T09:20:11Z",
        "body": "Exception: Specified cast is not valid.\r\n> LiteDB.BsonValue.op_Implicit(BsonValue value)\r\n> WindowsFormsApp122.dbTestItemHelper.New(dbTestItem inItem, LiteRepository inLt)\r\nFirst [insert] work and on second [via extension method] fail"
      },
      {
        "user": "fdipuma",
        "created_at": "2017-03-28T14:31:35Z",
        "body": "Your problem lies here:\r\n```\r\n  public static bool New(this dbTestItem inItem, LiteRepository inLt)\r\n  {\r\n   return inLt.Insert(inItem);\r\n  }\r\n```\r\n`inLt.Insert(inItem)` returns the Id of the inserted object, which is of course an `int`, not a `bool`. The implicit casting to `bool` will fail for this reason."
      },
      {
        "user": "mbdavid",
        "created_at": "2017-03-28T14:33:53Z",
        "body": "Hi @fdipuma, you right! I didnt get it. Insert returns `BsonValue` that contains implicit converter to bool/int/.... "
      },
      {
        "user": "lbnascimento",
        "created_at": "2020-02-05T14:26:42Z",
        "body": "Hi! With the objective of organizing our issues, we are closing old unsolved issues. Please check the latest version of LiteDB and open a new issue if your problem/question/suggestion still applies. Thanks!"
      }
    ]
  },
  {
    "number": 545,
    "title": " Error:The read lock is being released without being held.",
    "created_at": "2017-03-23T02:28:43Z",
    "closed_at": "2017-03-24T22:20:21Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/545",
    "body": "I'm using litedb in uwp , and I wrapped a Litedatabase instance in a DBManager class.\r\nIn any case i need operation database ,i will use the db instance without using staments\r\n\r\nvar db = DBManger.GetDB();\r\nvar collection = db.GetCollection<T>(CollectionName);\r\ncollection.find\r\ncollection.delete \r\n....\r\n\r\nand a concurrency error occured,so what is the right way to work with multithread,can someone supply an example?\r\n",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/545/comments",
    "author": "swordream",
    "comments": [
      {
        "user": "swordream",
        "created_at": "2017-03-23T11:22:08Z",
        "body": "found the problem,\r\nseems can't use async/await "
      },
      {
        "user": "mbdavid",
        "created_at": "2017-03-24T22:20:21Z",
        "body": "Hi @swordream, current version do not support async/await. Only sync operations. It's on my plans to next version async support."
      },
      {
        "user": "janstafa",
        "created_at": "2017-05-13T17:21:41Z",
        "body": "Hi David, I am getting the same error:\r\n\r\nSystem.Threading.SynchronizationLockException: The write lock is being released without being held. at System.Threading.ReaderWriterLockSlim.ExitWriteLock () [0x0002a] in <63992662b765477a898ef49cdcc99ee2>:0 at LiteDB.LockService.<ThreadWrite>b__17_2 () [0x00000] in <fd3cfe54fa504c7989678d84ffcd090b>:0 at LiteDB.LockService+<>c__DisplayClass11_0.<Reserved>b__0 () [0x0000b] in <fd3cfe54fa504c7989678d84ffcd090b>:0 at LiteDB.LockControl.Dispose () [0x00008] in <fd3cfe54fa504c7989678d84ffcd090b>:0 at LiteDB.LiteCollection`1[T].Insert (T document) [0x00075] in <fd3cfe54fa504c7989678d84ffcd090b>:0 at CacheProvider.InsertToCache (Data data) [0x0002f] in <0b0c1287d0f3439c815d09e4c543b346>:0\r\n\r\nI am using lock but still getting the error when using it from multithread:\r\nHow should I use it then? \r\nThanks\r\nJan\r\n\r\n\r\npublic bool InsertToCache(Data data)\r\n        {\r\n            try\r\n            {\r\n                lock (Lock)\r\n                {\r\n                    var col = _db?.GetCollection<Data>(_collectionName);\r\n                    col?.Insert(data);\r\n                    return true;\r\n                }\r\n            }\r\n            catch (Exception exception)\r\n            {\r\n                Log.Error(exception, \"Error inserting entity to cache.\");\r\n            }\r\n\r\n            return false;\r\n        }\r\n"
      }
    ]
  },
  {
    "number": 544,
    "title": "System.IO.FileSystem error",
    "created_at": "2017-03-22T12:11:14Z",
    "closed_at": "2019-07-28T23:34:30Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/544",
    "body": "I get this error:\r\n\"Could not load file or assembly 'System.IO.FileSystem, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The located assembly's manifest definition does not match the assembly reference. (Exception from HRESULT: 0x80131040)\"\r\n\r\nProject: windows 10 UWP\r\nVersion: LiteDB 3.1.0\r\n\r\nCode sample:\r\nusing (var db = new LiteDatabase(@\"KeyValues.db\"))\r\n                {\r\n                    // Get customer collection\r\n                    var keyValues = db.GetCollection<KeyValue>(\"keyvalues\");\r\n///on the next line below the exception is thrown\r\n                    var keyV = keyValues?.FindOne(kv => kv.Key.Equals(keyValue.Key, StringComparison.OrdinalIgnoreCase));\r\n                    if (keyV == null)\r\n                    {\r\n                        //insert\r\n                        keyValues.Insert(keyValue);\r\n                    }\r\n                    else\r\n                    {\r\n                        //update\r\n                        keyValues.Update(keyValue);\r\n                    }\r\n                    keyValues.EnsureIndex(k => k.Key);\r\n\r\n                    return true;\r\n                }",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/544/comments",
    "author": "Harmen70",
    "comments": [
      {
        "user": "xied75",
        "created_at": "2017-03-22T13:14:42Z",
        "body": "What does your project.json look like? I just quickly done a sample app with VS 2017 with LiteDB 3.10 and it works alright. Please provide more details."
      },
      {
        "user": "mbdavid",
        "created_at": "2017-03-24T22:21:31Z",
        "body": "Hi @xied75, can you post this tips to works in UWP? I can edit Wiki page about portable version"
      },
      {
        "user": "xied75",
        "created_at": "2017-03-24T23:53:00Z",
        "body": "@mbdavid I didn't do anything special at all, just create a blank UWP app and nuget LiteDB v3.1 and that's it, I even copied your example as is and everything works fine. \r\n\r\ne.g. This is the project.json\r\n\r\n```\r\n{\r\n  \"dependencies\": {\r\n    \"Microsoft.NETCore.UniversalWindowsPlatform\": \"5.2.2\",\r\n    \"LiteDB\": \"3.1.0\"\r\n  },\r\n  \"frameworks\": {\r\n    \"uap10.0\": {}\r\n  },\r\n  \"runtimes\": {\r\n    \"win10-arm\": {},\r\n    \"win10-arm-aot\": {},\r\n    \"win10-x86\": {},\r\n    \"win10-x86-aot\": {},\r\n    \"win10-x64\": {},\r\n    \"win10-x64-aot\": {}\r\n  }\r\n}\r\n```\r\n\r\nAnd this is the MainPage.xaml.cs\r\n\r\n```csharp\r\nusing System.IO;\r\nusing LiteDB;\r\nusing Windows.Storage;\r\nusing Windows.UI.Xaml;\r\nusing Windows.UI.Xaml.Controls;\r\n\r\nnamespace App1\r\n{\r\n    /// <summary>\r\n    /// An empty page that can be used on its own or navigated to within a Frame.\r\n    /// </summary>\r\n    public sealed partial class MainPage : Page\r\n    {\r\n        static string ConnectionString = Path.Combine(ApplicationData.Current.LocalFolder.Path, \"MyData.db\");\r\n\r\n        public MainPage()\r\n        {\r\n            InitializeComponent();\r\n            Loaded += MainPage_Loaded;\r\n        }\r\n\r\n        private void MainPage_Loaded(object sender, RoutedEventArgs e)\r\n        {\r\n            // Open database (or create if doesn't exist)\r\n            using (var db = new LiteDatabase(ConnectionString))\r\n            {\r\n                // Get customer collection\r\n                var col = db.GetCollection<Customer>(\"customers\");\r\n\r\n                // Create your new customer instance\r\n                var customer = new Customer\r\n                {\r\n                    Name = \"John Doe\",\r\n                    Phones = new string[] { \"8000-0000\", \"9000-0000\" },\r\n                    Age = 39,\r\n                    IsActive = true\r\n                };\r\n\r\n                // Create unique index in Name field\r\n                col.EnsureIndex(x => x.Name, true);\r\n\r\n                // Insert new customer document (Id will be auto-incremented)\r\n                col.Insert(customer);\r\n\r\n                // Update a document inside a collection\r\n                customer.Name = \"Joana Doe\";\r\n\r\n                col.Update(customer);\r\n\r\n                // Use LINQ to query documents (will create index in Age field)\r\n                var results = col.Find(x => x.Age > 20);\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n"
      },
      {
        "user": "linhnd",
        "created_at": "2017-03-27T10:11:51Z",
        "body": "It seems this lib requires  \"Microsoft.NETCore.UniversalWindowsPlatform\": \"5.2.2\". Just update the NETCore via nuget and you'll see the magic"
      },
      {
        "user": "JensSchadron",
        "created_at": "2019-07-28T23:34:30Z",
        "body": "@Harmen70 I'm closing this as it seems like your issue has been resolved. Feel free to re-open it, if you feel like this is still the case on newer versions."
      }
    ]
  },
  {
    "number": 543,
    "title": "IncludeFields not including ",
    "created_at": "2017-03-21T16:17:39Z",
    "closed_at": "2017-04-07T06:38:01Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/543",
    "body": "If I understand correctly, it should return level one props and fill them?\r\nI have a post with category, but it works only if I put real inlude on collection..\r\n\r\nLitedb 3.1.0\r\nNetcoreapp1.1\r\n```csharp\r\npublic class BEntity\r\n{\r\n\tpublic BEntity()\r\n\t{\r\n\t\tDateCreated = DateTime.Now;\r\n\t}\r\n\tpublic int ID { get; set; }\r\n\tpublic DateTime DateCreated { get; set; }\r\n\tpublic DateTime DateChanged { get; set; }\r\n\tpublic int Count { get; set; } //for paging\t\t\t\t\t\t\t\r\n\r\n}\r\n  public class Post : BEntity\r\n    {\r\n        public string Title { get; set; }\r\n        public string Content { get; set; }\r\n        public List<Category> Categories { get; set; }     \r\n    }\r\npublic class Category: BEntity\r\n{\r\n\tpublic string Name { get; set; }\r\n\tpublic List<Post> Posts { get; set; }\r\n}\r\nvar mapper = new BsonMapper();\r\n\tmapper.IncludeFields = true;\r\n\tmapper.IncludeNonPublic = true;\r\n\tmapper.Entity< Post >().Index(x => x.Title).Index(x => x.Content)\r\n\t.Index(x => x.Slug)\r\n\t.DbRef(x => x.Categories, \"category\")\r\n\t.DbRef(x => x.Comments, \"comment\")\r\n\t.DbRef(x => x.Tags, \"tag\");\r\n\t//dbpost\r\n\tmapper.Entity< Category >()\r\n\t.Index(x => x.Name);\r\n\r\n\tusing (var db = new LiteDatabase(@\"C:\\\\data.db\", mapper))\r\n\t//using (var db = new LiteDatabase(path))\r\n\t{\r\n\t\r\n\t\t//DROP FIRST\r\n\t\t//db.DropCollection(\"post\");\r\n\t\t//db.DropCollection(\"category\");\r\n\t\t//db.DropCollection(\"tag\");\r\n\t\t\t//db.Shrink();\r\n\t\t// Get customer collection\r\n\t\tvar col = db.GetCollection<Post>(\"post\");//.Include(c=>c.Categories).Include(s=>s.Tags); //it works only with include\r\n\t\tvar catcol = db.GetCollection<Category>(\"category\");\r\n\r\n...\r\n```",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/543/comments",
    "author": "Jacknq",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2017-03-28T11:47:05Z",
        "body": "Hi @Jack85, includes can be using where you are querying data. In you example you can:\r\n\r\n```\r\nvar col = db.GetCollection<Post>(\"post\");\r\n\r\nvar r = col.Include(x => x.Caetgories).FindAll().ToList();\r\n```\r\n\r\nNow `r` contains all posts and each post contains all categories. But, to this works, you must add categories inside a post before insert. Like this:\r\n\r\n```\r\nvar p = new Post { ... }\r\np.Categories.Add(new Category { Id = 1 });\r\np.Categories.Add(new Category { Id = 2 });\r\ncol.Insert(p);\r\n```"
      },
      {
        "user": "Jacknq",
        "created_at": "2017-03-28T12:25:40Z",
        "body": "yes I know that worked, but that field set \r\n`mapper.IncludeFields = true;`\r\nshould do that includes for me for level 1 all entities that I then call without specific include?"
      },
      {
        "user": "mbdavid",
        "created_at": "2017-03-28T12:28:40Z",
        "body": "By default, only properties from your class are converted to \"BSON document field\". If you se \"IncludeFields\" alse fields from your class will be converted to \"BSON document field\"."
      },
      {
        "user": "Jacknq",
        "created_at": "2017-03-28T12:31:44Z",
        "body": "Ok, so that field is about saving entities, not getting them.. I thought there is a switch that I can simple put true and it includes level1 related data."
      }
    ]
  },
  {
    "number": 542,
    "title": "Error when installing from nuget in xamarin project",
    "created_at": "2017-03-21T14:59:22Z",
    "closed_at": "2019-07-28T23:31:46Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/542",
    "body": "I am using vs2017 and xamarin.forms project, and this error showed when i start to install\r\n\"Could not install package 'LiteDB 3.1.0'. You are trying to install this package into a project that targets '.NETPortable,Version=v4.5,Profile=Profile111', but the package does not contain any assembly references or content files that are compatible with that framework. For more information, contact the package author\"\r\n\r\nSo I assume it's the cause of vs2017? Not sure if there is future update for this version?\r\nbtw  thanks for this great db. ",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/542/comments",
    "author": "charleypeng",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2017-03-28T11:49:16Z",
        "body": "Hi @charleypeng, LiteDB v3.1 is was compiled in vs2017. To works with xamarin, you must reference LiteDB as a NetStandard reference.\r\n"
      }
    ]
  },
  {
    "number": 539,
    "title": "Question: Collection names.  Length and total?",
    "created_at": "2017-03-19T00:27:50Z",
    "closed_at": "2020-02-05T14:26:29Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/539",
    "body": "Is the 3000 bytes limit of a Collection name the total byte limit for a single collection in a single database?  Or we only have 3000 bytes total for a combination of all the names of all collections in a single database?\r\n\r\nThis basically comes to about 30 characters in length for the name.  Can we expand this significantly?  We would like to use our class names as the collection names, and they can run up to 80-100 characters in length sometimes.\r\n\r\nIf the collection name is being used for storage with individual properties or something, is it possible to allow an \"alias\" collection name that we can put in a large string and allow us to get the collection by that alias?\r\n\r\nThanks",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/539/comments",
    "author": "dfarrNTST",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2017-03-19T13:01:57Z",
        "body": "Hi @dfarrNTST,\r\n\r\n3000 bytes for all collection names is limited becase all collections names (and link pointer, +6 bytes) must been stored in header page (each page has 4069 bytes). So it's not possible be larger than this.\r\n\r\nAbout 30 chars per collection it's just an pattern represented here: `^[\\w-]{1,30}$` (CollectionPage.cs)\r\n\r\nIn v3.1, it's possible now write your own ResolveCollectionName function based on your `<T>` type. Using this, now it's possible pass `null` in collection names (in LiteDatabse or LiteRepository) to use this convention. For this, try:\r\n\r\n`BsonMapper.Global.ResolveCollectionName = (type) => .....`"
      },
      {
        "user": "lbnascimento",
        "created_at": "2020-02-05T14:26:29Z",
        "body": "Hi! With the objective of organizing our issues, we are closing old unsolved issues. Please check the latest version of LiteDB and open a new issue if your problem/question/suggestion still applies. Thanks!"
      }
    ]
  },
  {
    "number": 530,
    "title": "Ints seem to be matching as strings",
    "created_at": "2017-03-14T12:04:52Z",
    "closed_at": "2020-02-05T14:21:56Z",
    "labels": [
      "question",
      "need review"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/530",
    "body": "My class has the following property\r\n\r\n            public int[] Identity { get; set; }\r\n\r\nWhen I do the following\r\n```\r\n            IEnumerable<Pete> instances =\r\n              collection.Find(x => x.Identity[0] == 1 && x.Identity[1] == 1);\r\n```\r\nIt returns results where Identity[0] == 101 or 201 or 301 etc.",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/530/comments",
    "author": "mrpmorris",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2017-03-14T13:53:05Z",
        "body": "Hi @mrpmorris, index in arrays are not based on positions. When you create an index in an array, you can only search a value in a group of values, like:\r\n\r\n`col.Find(\"Identity\", 1)` will returns all documents where Identity contains an `1` element in any position.\r\n\r\nIf you need search in fixed positions, you can:\r\n\r\n1) Find documents where has `1` in any position and than, using Linq to object, filter again, like `collection.Find(\"Identity\", 1).Where(x => x.Identity[0] && x.Identity[1])`\r\n\r\n2) Create virtual fields indexed, like\r\n\r\n```\r\nBsonMapper.Global.Entity<MyClass>()\r\n    .Index(\"FirstIdentity\", x => x.Identity[0])\r\n    .Index(\"SecondIdentity\", x=> x.Identity[1]);\r\n\r\ncollection.Find(x => x.FirstIdentity == 1 && x.SecondIdentity == 1);\r\n```\r\n"
      },
      {
        "user": "mrpmorris",
        "created_at": "2017-03-14T21:01:42Z",
        "body": "Is there another way of achieving this? My identities are arrays of integers, so when I search for 1 in index[0] (the most significant bits) I am going to get a massive number of 1's from the next 3 lower significant bits."
      },
      {
        "user": "mbdavid",
        "created_at": "2017-03-14T21:32:46Z",
        "body": "Indexes keys in array do not store positions. So if you want search using a fixed position in your array you must create an exclusive index per position (like \"Identity_0\", \"Identity_3\", ....)"
      },
      {
        "user": "mrpmorris",
        "created_at": "2017-03-15T16:34:21Z",
        "body": "But why is it matching like string.Contains instead of a Int.Equals?"
      },
      {
        "user": "lbnascimento",
        "created_at": "2020-02-05T14:21:56Z",
        "body": "Hi! With the objective of organizing our issues, we are closing old unsolved issues. Please check the latest version of LiteDB and open a new issue if your problem/question/suggestion still applies. Thanks!"
      }
    ]
  },
  {
    "number": 529,
    "title": "New LiteRepository  use  EnsureIndex ?",
    "created_at": "2017-03-14T03:13:15Z",
    "closed_at": "2017-03-15T21:11:11Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/529",
    "body": "",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/529/comments",
    "author": "261231437",
    "comments": [
      {
        "user": "261231437",
        "created_at": "2017-03-14T03:13:27Z",
        "body": "New LiteRepository  use  EnsureIndex ?"
      },
      {
        "user": "261231437",
        "created_at": "2017-03-14T03:41:03Z",
        "body": " [BsonIndex(true)]   Insert  unique  no effect"
      },
      {
        "user": "mbdavid",
        "created_at": "2017-03-14T18:14:59Z",
        "body": "Hi @261231437, yes, LiteRepository works with LiteDatabase. \r\n\r\nBut, if you already created this this index (running a query, per example) without unique setting, this model attribute will not work because you already has this normal index. In this case, you need use `repo.Engine.EnsureIndex(...)` method."
      }
    ]
  },
  {
    "number": 528,
    "title": "I have to reference specific dll when I want to read a collection !",
    "created_at": "2017-03-12T14:38:42Z",
    "closed_at": "2017-03-13T01:13:39Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/528",
    "body": "Can i read a collection and ignore the _type  format? in that case, I can read a collection without reference the dll witch the source type of the collection items.",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/528/comments",
    "author": "newbe36524",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2017-03-12T17:13:27Z",
        "body": "Yes, you can use `GetCollection(name)` and use `BsonDocument` as your data manipulation."
      },
      {
        "user": "newbe36524",
        "created_at": "2017-03-15T14:21:10Z",
        "body": "Yes, I can use AsDocument property and deserialize it as json like. Many Thanks."
      },
      {
        "user": "newbe36524",
        "created_at": "2017-03-15T14:43:06Z",
        "body": "and i failed !  how can I deserialize a BsonDocument to a super class which is be in inherit by the collection item.\r\nI insert type A into a collection and I get collection in type B.Type A inherit from type B."
      },
      {
        "user": "mbdavid",
        "created_at": "2017-03-15T14:48:16Z",
        "body": "If you want convert class to/from BsonDocument you always need use `BsonMapper`.\r\n\r\n```\r\nvar m = new BsonMapper();\r\n\r\nvar doc = (your bson document)\r\n\r\nvar obj = m.ToObject<MyClassType>(doc);\r\n```\r\n\r\nIf your document contains `_type` you can just removed from BsonDocument"
      },
      {
        "user": "newbe36524",
        "created_at": "2017-05-14T14:34:50Z",
        "body": "it work well ! many thanks  !"
      }
    ]
  },
  {
    "number": 523,
    "title": "[Question] FileStore, Transactions and data corruption?",
    "created_at": "2017-03-08T23:30:11Z",
    "closed_at": "2017-03-09T18:38:20Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/523",
    "body": "If I understand correctly:\r\n1. Journal is being written only when commiting a transaction.\r\n2. FileStore does not supports transactions\r\n\r\nDoes it mean that file store writes/deletion might lead to the db file corruption (if interrupted in the worst moment) because of lack of journaling?\r\n\r\nOr is the page-mechanism designed the way these are safe operations? And in the worst case we will end up with some unlinked pages?",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/523/comments",
    "author": "mkosieradzki",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2017-03-09T11:09:08Z",
        "body": "Yes, journal writes only when commiting. The steps are:\r\n\r\n1) Write all dirty pages to journal (write original data)\r\n2) Update all dirty pages do datafile\r\n3) Clean journal file\r\n\r\nIf any problem occurs during step 1, next connection will just delete journal file. If any problem occurs during step 2, all journal file will be restored into datafile.\r\n\r\nBut, to do this, I need keep all dirty pages in memory (cache). So, to store files it´s complicated to store all file in memory, so I split file in chunks. Each chunk are in a transaction (each chunk has 1mb). So, to write new file inside storage, these are the steps:\r\n\r\n1) Write file header descriptor (in _files collection) with Length = 0\r\n2) Slipt file in chunk. Each chunk in a transaction (in _chunk collection)\r\n3) Update header descriptor to Length = final_file_length\r\n\r\nSo, there are, at least, 3 transactions here. If any problem occurs during spliting file, you will get only part (or none) of file in chunks, but your descriptor still in 0 bytes length. You just need delete any file with FileLength = 0.\r\nDatafile will not be corrupted, only this file will be unfinished.\r\n"
      },
      {
        "user": "mkosieradzki",
        "created_at": "2017-03-09T12:20:53Z",
        "body": "@mbdavid Thanks a lot for clarification this is exactly as I hoped it works based on #486 ...\r\n\r\nAFAIK chunks are 255KiB not 1mb :).\r\n\r\nI am currently implementing an alternative API (async-friendly) for file storing based on your low level API.\r\n\r\nBTW. Do you consider rewriting API and locking to be async-friendly inside the LiteEngine in the next version?"
      },
      {
        "user": "mbdavid",
        "created_at": "2017-03-09T14:34:02Z",
        "body": "Hi @mkosieradzki, yes 256 and not 1mb (1mb it´s max document size).\r\n\r\nNext major version (v4) will be .NET45/NetStandard 2.0 only and will works async too. Thats my goal :)"
      },
      {
        "user": "mkosieradzki",
        "created_at": "2017-03-09T14:53:57Z",
        "body": "@mbdavid\r\nYeah! That's great news!"
      }
    ]
  },
  {
    "number": 522,
    "title": "InsertBulk?",
    "created_at": "2017-03-06T12:13:00Z",
    "closed_at": "2017-03-07T10:11:04Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/522",
    "body": "I saw this is missing from the current code.\r\n\r\nI'm getting around this by just wrapping my Insert loop in a transaction (like I would with SQLite), is that correct to get the best bulk performance?\r\n\r\nAlso doing Upsert in a transaction as well.",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/522/comments",
    "author": "adamhathcock",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2017-03-06T12:50:36Z",
        "body": "Hi @adamhathcock, when you use `collection.Insert(IEnumerable<T> documents)` you are already using inside a transaction / bulk operation."
      }
    ]
  },
  {
    "number": 518,
    "title": "\"Collection  exceeded the maximum limit of indices: 16\"",
    "created_at": "2017-03-02T20:42:40Z",
    "closed_at": "2017-03-07T10:11:04Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/518",
    "body": "Don´t know why I get this error message when I try to find documents in my collection, \r\nI try with:\r\n```\r\nvar results = col.Find(Query.StartsWith(\"FullName\", \"Hapa\"));\r\nvar namer = col.Find(a => a.FullName.StartsWith(\"Hapa\"));\r\n```\r\n\r\nwhen I do a col.FindAll or col.Count all data I have saved is there, \r\nmaybe I do something wrong with the index? I tried with col.EnsureIndex(test.FullName); ",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/518/comments",
    "author": "mattiaspalm",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2017-03-05T00:18:12Z",
        "body": "Hi, every time you do run Find using different fields you are creating new index in collection. LiteDB limit in 16 indexes per collection. To see all indexes, in shell tool run `db.yourcol.indexes`. You can drop indexes using `db.yourcol.dropIndex fieldname`"
      },
      {
        "user": "mattiaspalm",
        "created_at": "2017-03-07T11:10:38Z",
        "body": "thank you, I made new index in an iteration so I guess it was a lot more than 16 "
      }
    ]
  },
  {
    "number": 517,
    "title": "Invalid connection string when using shared mode",
    "created_at": "2017-03-02T15:53:42Z",
    "closed_at": "2017-03-11T22:12:37Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/517",
    "body": "Hi, \r\nI am trying to open the database in shared mode. However I am getting this error:\r\n`Unhandled exception: LiteDB.LiteException: Invalid connection string value type for [mode]`  \r\n\r\nThis is how I access the database:  \r\n\r\n```cs\r\nusing (var db = new LiteDatabase(\"Filename=Database.db;Mode=Shared\"))\r\n{\r\n  ...\r\n}\r\n```\r\n\r\nI am using .net core 1.1.",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/517/comments",
    "author": "onurhb",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2017-03-02T16:40:59Z",
        "body": "Hi @onurhb, there is not Shared mode in netstandard. NetStandard do not support FileStream.Lock/Unlock methods (at least in v1.6... it´s on roadmap to v2).\r\nIn NetStandard you must use Exclusive mode only. Try use a single instance only (it´s support multi-thread)."
      },
      {
        "user": "onurhb",
        "created_at": "2017-03-02T18:17:03Z",
        "body": "Adding it to the dependency injection as singleton works:\r\n`services.AddSingleton<IDatabaseRepository, DatabaseRepository>();`\r\nFor some reason, I was using AddTransient which creates one instance per object. This fixes my problem. Thanks for reply. \r\n"
      },
      {
        "user": "sgrassie",
        "created_at": "2017-09-04T15:02:59Z",
        "body": "Any thoughts on this now that netstandard2.0 has been released?"
      },
      {
        "user": "mbdavid",
        "created_at": "2017-09-04T16:00:38Z",
        "body": "@sgrassie, I'm thinking in update to v4 final release. I will remove 1.3 support to add only 2.0"
      }
    ]
  },
  {
    "number": 513,
    "title": "Can I use group by?",
    "created_at": "2017-02-28T05:55:57Z",
    "closed_at": "2017-03-11T22:09:03Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/513",
    "body": "Can I use group by?",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/513/comments",
    "author": "261231437",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2017-02-28T23:33:55Z",
        "body": "Hi, LiteDB doesnt native group by support, but you always can do Linq to Object GroupBy expression after Find method."
      }
    ]
  },
  {
    "number": 512,
    "title": "Unable to cast object of type 'LiteDB.HeaderPage' to type 'LiteDB.IndexPage'",
    "created_at": "2017-02-27T13:26:35Z",
    "closed_at": "2017-03-11T22:09:03Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/512",
    "body": "Hello!\r\nI had tried to migrate from LiteDb-3.0.0 beta 2 version to 3.0.1 and i had saw this exception \r\n\r\nException thrown: 'System.InvalidCastException' in LiteDB.dll\r\nUnable to cast object of type 'LiteDB.HeaderPage' to type 'LiteDB.IndexPage'\r\n\r\nFor resolving it i set uprage flag  to true and used LiteEngine.Upgrade method without any results.\r\nDo you have any idea?",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/512/comments",
    "author": "Vakterman",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2017-02-27T14:15:55Z",
        "body": "Hi @Vakterman, sorry about that. I made some changed from beta2 to final version and I dont realize that could be a problem from beta users.\r\n\r\nThere is not upgrade process from beta to final v3. You must export your data (using v3-beta) and import again using v3. Some like that:\r\n\r\n```C#\r\n// to export, using v3-beta DLL (or any other LiteDB version)\r\nvar data = new BsonDocument();\r\nforeach(var name in db.GetCollectionNames())\r\n{\r\n    data[name] = new BsonArray(db.GetCollection(name).FindAll());\r\n}\r\nFile.WriteAllText(@\"C:\\Temp\\dump-data.json\", JsonSerializer.Serialize(data));\r\n\r\n// to import, using v3 DLL\r\nvar data = JsonSerializer.Deserialize(File.ReadAllText(@\"C:\\Temp\\dump-data.json\")).AsDocument;\r\nforeach(var name in data.Keys)\r\n{\r\n    db.GetCollection(name).Insert(data[name].AsArray.Select(x => x.AsDocument));\r\n}\r\n```\r\n\r\n\r\n"
      },
      {
        "user": "Vakterman",
        "created_at": "2017-02-27T14:26:18Z",
        "body": "Thank you very much! It is very usefull.\r\n\r\nBut not applicable for my solution, because it is complex migration.\r\nI will try to find appropriate way for resolving it in my projects."
      },
      {
        "user": "Vakterman",
        "created_at": "2017-03-01T12:47:03Z",
        "body": "Also one question about it. Could you explain, how to distinguish two different file format ?\r\nI mean - how to define latest file format version and beta 2 format.\r\nI need it for deviding it from C#   code end avoiding exceptions."
      },
      {
        "user": "mbdavid",
        "created_at": "2017-03-01T21:29:21Z",
        "body": "It's just a single Enum in BsonType that I added (Decimal type) + re-order (I complete forgot that this are storaged in indexes). I only detect the problem when I write Upgrade (from v2) code. "
      }
    ]
  },
  {
    "number": 509,
    "title": "Rebuild index on existing collection",
    "created_at": "2017-02-27T09:47:20Z",
    "closed_at": "2020-02-05T14:21:45Z",
    "labels": [
      "suggestion",
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/509",
    "body": "Let's say if I have a collection and I add new index only newly added or updated documents get indexed. Is there any simple way to re-index all the documents in collection?",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/509/comments",
    "author": "vlad-k4k",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2017-02-27T13:34:04Z",
        "body": "No, when you create an index all existing documents will be indexed (like in any rdbms). In fact, there is no need to rebuild index. But, if you want, you must drop all indexes + ensure all indexes again (except _id primery key)"
      },
      {
        "user": "lbnascimento",
        "created_at": "2020-02-05T14:21:45Z",
        "body": "Hi! With the objective of organizing our issues, we are closing old unsolved issues. Please check the latest version of LiteDB and open a new issue if your problem/question/suggestion still applies. Thanks!"
      }
    ]
  },
  {
    "number": 508,
    "title": "[Question]Update data without deletion",
    "created_at": "2017-02-26T14:54:15Z",
    "closed_at": "2017-03-11T22:12:21Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/508",
    "body": "Hello, I load my data in chunks, because I don't want to keep entire collection in memory. The problem is that the database stores only the last chunk. I assume this is because whenever I do Update it replaces the collection. How can I insert more data into an existing collection?\r\n\r\nThis is the code I use:\r\n```\r\npublic bool Add(T document)\r\n        {\r\n            using (var db = DbLite.GetDatabase())\r\n            {\r\n                var documents = db.GetCollection(typeof(T).Name);\r\n\r\n                var bsonDoc = db.ToDocument(document);\r\n\r\n                if (documents.FindById(document.Id) != null)\r\n                    return documents.Update(db.ToDocument(document));\r\n                \r\n                documents.Insert(bsonDoc);\r\n            }\r\n\r\n            return true;\r\n        }\r\n```",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/508/comments",
    "author": "fcin",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2017-02-26T18:01:16Z",
        "body": "Hi @fcin, try:\r\n\r\n```\r\npublic bool Add(T document)\r\n{\r\n    using (var db = DbLite.GetDatabase())\r\n    {\r\n        return db.GetCollection<T>(typeof(T).Name).Upsert(document);\r\n    }\r\n}\r\n```"
      },
      {
        "user": "fcin",
        "created_at": "2017-02-26T19:33:24Z",
        "body": "Turns out I had 2.0.4 version, that's why I couldn't find Upsert method. Thank you. It certainly helped. \r\n\r\nThe only problem is that now I get NullReferenceException in checking if collection exists in other method This seems to be a very simple code, so I don't think I messed it up, Could you take a look at it?\r\n@mbdavid  I don't really know what could be the cause of it. I tried to follow the stacktrace, but I don't it doesn't look like it's my code's fault.\r\n\r\n```\r\npublic IEnumerable<T> GetAll()\r\n        {\r\n            using (var db = DbLite.GetDatabase())\r\n            {\r\n                if (!db.CollectionExists(typeof (T).Name)) // Throws NullReferenceException\r\n                    return null;\r\n\r\n                var documents = db.GetCollection(typeof(T).Name);\r\n                return documents.FindAll().Select(x => (T)db.Mapper.ToObject(typeof(T), x)).ToList();\r\n            }\r\n        }\r\n```\r\n\r\n```\r\nSystem.NullReferenceException was unhandled by user code\r\n  HResult=-2147467261\r\n  Message=Object reference not set to an instance of an object.\r\n  Source=LiteDB\r\n  StackTrace:\r\n       at LiteDB.StreamExtensions.<>c__DisplayClass4_0.<TryLock>b__0()\r\n       at LiteDB.FileHelper.TryExec(Action action, TimeSpan timeout)\r\n       at LiteDB.StreamExtensions.TryLock(FileStream stream, Int64 position, Int64 length, TimeSpan timeout)\r\n       at LiteDB.FileDiskService.Lock(LockState state, TimeSpan timeout)\r\n       at LiteDB.LockService.LockShared()\r\n       at LiteDB.LockService.Shared()\r\n       at LiteDB.LiteEngine.GetCollectionNames()\r\n       at LiteDB.LiteDatabase.CollectionExists(String name)\r\n       at DrawMe.Core.Repositories.DmRepository`1.GetAll() in F:\\Obrazki\\C#\\DrawMe\\DrawMe\\DrawMe.Core\\Repositories\\DmRepository.cs:line 50\r\n       at DrawMe.Core.Repositories.CachedDmRepository`1.GetAll() in F:\\Obrazki\\C#\\DrawMe\\DrawMe\\DrawMe.Core\\Repositories\\CachedDmRepository.cs:line 62\r\n       at DrawMe.BasicDocumentExplorer.ViewModels.DocumentListExplorerViewModel.Update() in F:\\Obrazki\\C#\\DrawMe\\DrawMe\\DrawMe.BasicDocumentExplorer\\ViewModels\\DocumentListExplorerViewModel.cs:line 49\r\n       at DrawMe.BasicDocumentExplorer.ViewModels.DocumentListExplorerViewModel..ctor(IDmRepository`1 dmRepository, IEventAggregator eventAggregator, ILanguageManager langManager) in F:\\Obrazki\\C#\\DrawMe\\DrawMe\\DrawMe.BasicDocumentExplorer\\ViewModels\\DocumentListExplorerViewModel.cs:line 44\r\n```\r\n  InnerException: \r\n"
      },
      {
        "user": "fcin",
        "created_at": "2017-03-08T08:46:16Z",
        "body": "Nevermind, I was disposing it, that's why I got `NullReferenceException`. This issue can be closed."
      }
    ]
  },
  {
    "number": 504,
    "title": "Question - How to change database password after it's creation",
    "created_at": "2017-02-25T03:33:09Z",
    "closed_at": "2017-03-02T06:12:52Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/504",
    "body": "Greetings @mbdavid,\r\n\r\nit seems that I won't give u peace soon, hehehehe.\r\n\r\nonce again, thank you for liteDB, it's a wonderful tool, it fits perfectly my research project.\r\n\r\nI have a question this time: Is it possible to change the database password after it's creation?\r\n\r\nWhy?\r\n\r\nExample:\r\n\r\nEach user has it's own database. So, the database is created with user password. When user change it's password, I'd like to change the password of the database too.\r\n\r\nIs it possible? If the answer is yes, how?\r\n\r\nThank u.\r\n\r\n[].\r\nRegards,\r\n\r\n@rmszc81",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/504/comments",
    "author": "rmszc81",
    "comments": [
      {
        "user": "falahati",
        "created_at": "2017-02-25T10:58:33Z",
        "body": "After opening the database,\r\n\r\n`database.Engine.Shrink(newPassword);`"
      },
      {
        "user": "rmszc81",
        "created_at": "2017-03-02T06:12:52Z",
        "body": "Solved.\r\n\r\nThank you."
      }
    ]
  },
  {
    "number": 500,
    "title": "DateTime.Kind property is not preserved",
    "created_at": "2017-02-23T03:38:34Z",
    "closed_at": "2017-03-11T22:09:03Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/500",
    "body": "```\r\npublic class Ax {\r\n    [BsonIndex] public DateTime Time { get; set; }\r\n}\r\n\r\nusing (var db = new LiteDatabase(\"temp.db\")) {     \r\n    LiteCollection<Ax> col = db.GetCollection<Ax>(\"Ax\");\r\n    DateTime now = DateTime.UtcNow;\r\n    Console.WriteLine(now.Kind);//\r\n    col.Insert(new Ax {Time = DateTime.UtcNow});\r\n    Console.WriteLine(col.FindOne(x => true).Time.Kind);\r\n}\r\n```\r\n\r\nThis gives output: \r\n`Utc`\r\n`Local`\r\n\r\nWhich is not correct. \r\n\r\nAny thoughts?",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/500/comments",
    "author": "aviadmini",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2017-02-24T12:26:32Z",
        "body": "Hi @aviadmini, BSON specs has no information about how date was storage and always convert to UTC.\r\n\r\n```\r\npublic static readonly DateTime UnixEpoch = new DateTime(1970, 1, 1, 0, 0, 0, DateTimeKind.Utc);\r\n\r\n// serialize\r\nvar date = (DateTime)value.RawValue;\r\n// do not convert to UTC min/max date values - #19\r\nvar utc = (date == DateTime.MinValue || date == DateTime.MaxValue) ? date : date.ToUniversalTime();\r\nvar ts = utc - BsonValue.UnixEpoch;\r\nwriter.Write(Convert.ToInt64(ts.TotalMilliseconds));\r\n\r\n// deserialize\r\nvar ts = reader.ReadInt64();\r\n\r\n// catch specific values for MaxValue / MinValue #19\r\nif (ts == 253402300800000) return DateTime.MaxValue;\r\nif (ts == -62135596800000) return DateTime.MinValue;\r\n\r\nreturn BsonValue.UnixEpoch.AddMilliseconds(ts).ToLocalTime();\r\n```\r\n\r\nSo, deserialization always convert to you date to LocalTime to be more common. If you works wih UTC you must use ToUniversalTime()."
      },
      {
        "user": "aviadmini",
        "created_at": "2017-02-24T14:42:16Z",
        "body": "Ok @mbdavid that makes sense"
      }
    ]
  },
  {
    "number": 494,
    "title": "Virtual index fields",
    "created_at": "2017-02-20T12:30:44Z",
    "closed_at": "2017-03-01T00:18:09Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/494",
    "body": "Virtual index fields mentioned in v3.0.0-beta but nothing in doco. Could we have a sample?",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/494/comments",
    "author": "vlad-k4k",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2017-02-20T12:42:18Z",
        "body": "Virtual fields are Func that you can create to create an index based on this result, like this:\r\n\r\n```\r\nBsonMapper.Global.Entity<Order>()\r\n    .DbRef(x => x.Customer) // will not include customer inside order document\r\n    .Index(\"CustomerName\", x => x.Customer.Name); // but create a search for customer name\r\n\r\n// and than you can:\r\n\r\norders.Find(Query.EQ(\"CustomerName\", \"John\"))\r\n```"
      },
      {
        "user": "vlad-k4k",
        "created_at": "2017-02-20T22:30:34Z",
        "body": "That looking good, thanks. One more question - if I add new index to existing collection is there any way to re-index the whole collection on that index?"
      },
      {
        "user": "mbdavid",
        "created_at": "2017-02-27T14:36:35Z",
        "body": "Hi @vlad-k4k, I miss this question... sorry. I anwser in your new issue. As I told, there is not re-index, but in virtual indexes could be an exception.... why?\r\n\r\nWell, virtual indexes are based only in entity mapper. So, if you open your datafile in an external app (like Shell) there is no virtual mapper, and all insert/update data will not be indexed."
      },
      {
        "user": "vlad-k4k",
        "created_at": "2017-02-27T22:05:01Z",
        "body": "@mbdavid may I suggest to have an API function to re-index? As for new indexes for existing collection or if indexing logic changed (in case of virtual index) the index become 'corrupted' - not correlating to the actual data."
      },
      {
        "user": "mbdavid",
        "created_at": "2017-03-01T00:18:09Z",
        "body": "Yes @vlad-k4k, make sense... it's on my list. I marked as suggention in your other issue about this."
      }
    ]
  },
  {
    "number": 493,
    "title": "EnsureIndex of Dectionary",
    "created_at": "2017-02-20T04:19:50Z",
    "closed_at": "2017-03-11T22:09:03Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/493",
    "body": "Hello David,\r\n\r\nIs it posibole to ensureIndex of collection dictionaty?\r\n\r\nDict<int,User> => ensureIndex of User.Email",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/493/comments",
    "author": "shai-benshimol",
    "comments": [
      {
        "user": "RytisLT",
        "created_at": "2017-02-20T08:25:52Z",
        "body": "What have you tried?"
      },
      {
        "user": "mbdavid",
        "created_at": "2017-02-20T10:40:26Z",
        "body": "You always ensureindex / query using strings only, like:\r\n\r\n`EnsureIndex(\"User.Email\")`\r\n\r\n`Find(Query.EQ(\"User.Email\", \"john.doe@email.com\"))`\r\n\r\nLINQ works only in strong typed classs."
      }
    ]
  },
  {
    "number": 491,
    "title": "Question: Is v3 backwards compatible?",
    "created_at": "2017-02-16T14:10:09Z",
    "closed_at": "2017-03-11T22:09:03Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/491",
    "body": "Hi.\r\n\r\nBefore upgrading from v2.0.4 to v3.0.1 (due to db file locking issue), I want to know if version 3.0.1 is compatible with db files created with v2.0.4?\r\n\r\nBest regards",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/491/comments",
    "author": "vkocjancic",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2017-02-16T15:35:30Z",
        "body": "Hi @vkocjancic, each new datafile version are not compatible with previous one. Keep compatible is some really-really complicated, so I prefer implement \"complete new version\". But, all version use same concept (collections/documents). So, you can always \"export/import\" data as JSON in a simple command like:\r\n\r\n```\r\n// export to JSON string (or a file)\r\nvar json = JsonSerializer.Serialize(new BsonArray(db.GetCollection(\"mycol\").FindAll()));\r\n\r\n// import from JSON\r\ndb.GetCollection(\"mycol\").Insert(JsonSerializer.Deserialize(json).AsArray.ToArray());\r\n```\r\n\r\nI´m thinking in create an CLI command line to import/export any version to any version."
      },
      {
        "user": "vkocjancic",
        "created_at": "2017-02-16T19:38:00Z",
        "body": "Hi @mbdavid.\r\nI get that backwards compatibility is difficult. But, if v3 is incompatible with v2, is there a chance we get proper file locking in v2? \r\nCurrently it locks up every few days in real time environment with low traffic."
      },
      {
        "user": "vkocjancic",
        "created_at": "2017-02-17T21:26:10Z",
        "body": "@mbdavid The import example does not work in version 3.0.1. Insert demands IEnumerable of BsonDocument."
      },
      {
        "user": "mbdavid",
        "created_at": "2017-02-17T22:56:36Z",
        "body": "No problem, each element is a Document in this array\r\n```\r\n// import from JSON\r\ndb.GetCollection(\"mycol\").Insert(JsonSerializer.Deserialize(json).AsArray.ToArray().Select(x => x.AsDocument));\r\n```\r\n\r\nAbout this locking problem in v2, v3 works complete diferent way so it's difficult to know. Is your enviorment multi process or a single process (like and website)? Are you using transactions? If you working in a single process enviroment/no transaction try works with a single instance of LiteDatabase (kepping in static var)\r\n\r\n\r\n"
      },
      {
        "user": "vkocjancic",
        "created_at": "2017-02-17T23:32:54Z",
        "body": "Hi. \r\nIt is a simple website with simple CMS and product catalogue. No transactions are used. The process is multithreaded though, as multiple request can come at the same time."
      },
      {
        "user": "mbdavid",
        "created_at": "2017-02-17T23:46:09Z",
        "body": "If is a single process (IIS) in a multithread concurrent requests, you can use single instance of LiteDatabase (that are thread safe in v3) is much faster. But, your datafile will always keep opened (in shared mode) an will close only when application pool recicle."
      },
      {
        "user": "vkocjancic",
        "created_at": "2017-02-20T07:22:43Z",
        "body": "Yeah, but application pool never recycles. It helps with reducing performance hits for first time users after restart."
      }
    ]
  },
  {
    "number": 489,
    "title": "Storing nested Dictionary<string, object>",
    "created_at": "2017-02-15T13:17:38Z",
    "closed_at": "2020-02-05T14:21:32Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/489",
    "body": "Hello,\r\n\r\nPlease consider the following simple scenario:\r\n\r\n```\r\nvar document = new Dictionary<string, object>()\r\n{\r\n\t{ \"Id\", new Guid(\"f3378da5-9a0d-4857-9418-7991187aa58b\") },\r\n\t{ \"Name\", \"John Doe\" },\r\n\t{ \"Nested\", new Dictionary<string, object>()\r\n\t\t{\r\n\t\t\t{ \"Prop\", \"Value\" }\r\n\t\t}\r\n\t}\r\n};\r\n\r\nusing (var db = new LiteDatabase(@\"temp.db\"))\r\n{\r\n\tvar collection = db.GetCollection<Dictionary<string, object>>(\"MyCollection\");\r\n\r\n\tcollection.Insert(new BsonValue(document[\"Id\"]), document);\r\n}\r\n```\r\n\r\nThrows \"Index was outside the bounds of the array.\" at BsonMapper.Serialize.cs `var itemType = type.GetGenericArguments()[1];` since `type` is a `System.Object`.\r\n\r\nAny ideas?? Thank you in advance.",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/489/comments",
    "author": "superware",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2017-02-15T23:28:25Z",
        "body": "Try convert your Dictionary<string, object> to BsonDocument (that inherits from `IDictionary<string, BsonValue>`), and than get collection like `db.GetCollection(\"MyCollection\")`"
      },
      {
        "user": "superware",
        "created_at": "2017-02-17T06:37:47Z",
        "body": "Hello @mbdavid,\r\n\r\nThank you for your prompt response, can you please clarify? I'm just trying to insert a Dictionary<string, object> to the db. Convert how and why?\r\n\r\nThanks again."
      },
      {
        "user": "mbdavid",
        "created_at": "2017-02-17T22:52:48Z",
        "body": "You cannot use Dictionary as base class in collection. If you want store schemeless structure using Dictionary, you need some like this:\r\n\r\n```\r\npublic class Entity\r\n{\r\n    public int Id { get; set; }\r\n    public Dictionary<string, object> Data { get; set; } = new Dictionary<string, object>();\r\n}\r\n```\r\n\r\nOr, as I wrote, using BsonDocument, like:\r\n\r\n```\r\nvar doc = new BsonDocument\r\n{\r\n    { \"_id, 123 },\r\n    { \"key\", value },\r\n    { \"embedded\", new BsonDocument { .... }\r\n}\r\n```\r\n\r\n"
      },
      {
        "user": "jlVidal",
        "created_at": "2017-02-18T01:48:17Z",
        "body": "@mbdavid so just to clarify.. Currently LiteDb doesn't support save a multi-level dictionary? For example have a POCO class with a property type `Dictionary<string,object>`, and one of the pairs of that dictionary be another dictionary."
      },
      {
        "user": "mbdavid",
        "created_at": "2017-02-18T11:54:29Z",
        "body": "Hi @jlVidal, now I get it, mading some tests here I understand the problem.\r\n\r\nWhen you create Dictionary<string, object>, your value is \"object\" type and not specific type value. When this value is a simple/direct convert, like string or int, works fine. But if is another dictionary or array will get error.\r\n\r\nI will evaluate this situation to see if is possible fix.\r\n"
      },
      {
        "user": "mbdavid",
        "created_at": "2017-02-18T12:32:06Z",
        "body": "Ok, I made some changes that works now. But are not 100% because to reproduce original dictionary, serialization must store `_type` in each nested object. I made as default, when deserialize and Bson Document to an \"object\", convert to \"Dictionary<string, object>\""
      },
      {
        "user": "mbdavid",
        "created_at": "2017-02-18T12:33:13Z",
        "body": "```\r\nvar mapper = new BsonMapper();\r\n\r\n// map dictionary to bsondocument\r\nvar dict = new Dictionary<string, object>\r\n{\r\n    [\"_id\"] = 1,\r\n    [\"MyString\"] = \"This is string\",\r\n    [\"Nested\"] = new Dictionary<string, object>()\r\n    {\r\n        [\"One\"] = 1,\r\n        [\"Two\"] = 2,\r\n        [\"Nested2\"] = new Dictionary<string, object>()\r\n        {\r\n            [\"Last\"] = true\r\n        }\r\n    },\r\n    [\"Array\"] = new string[] { \"one\", \"two\" }\r\n};\r\n\r\nvar doc = mapper.ToDocument(dict);\r\nvar nobj = mapper.ToObject<Dictionary<string, object>>(doc);\r\n\r\nAssert.AreEqual(dict[\"_id\"], nobj[\"_id\"]);\r\nAssert.AreEqual(dict[\"MyString\"], nobj[\"MyString\"]);\r\nAssert.AreEqual(((Dictionary<string, object>)dict[\"Nested\"])[\"One\"], ((Dictionary<string, object>)nobj[\"Nested\"])[\"One\"]);\r\nAssert.AreEqual(((string[])dict[\"Array\"])[0], ((object[])nobj[\"Array\"])[0].ToString());\r\n```"
      },
      {
        "user": "jlVidal",
        "created_at": "2017-02-20T18:52:39Z",
        "body": "@mbdavid  Thanks for the quick reply, I temporarily solved the issue doing:\r\n\r\n         LiteDB.BsonMapper.Global.RegisterType<IDictionary<string, object>>(a =>\r\n             {\r\n                 return new BsonDocument(a.ToDictionary(b => b.Key, BsonValueFactory));\r\n             }, b =>\r\n             {\r\n                 return new Dictionary<string, object>(((BsonDocument)b), StringComparer.OrdinalIgnoreCase);\r\n             });\r\n            return new object();\r\n        }\r\n\r\n        public BsonValue BsonValueFactory(KeyValuePair<string, object> a)\r\n        {\r\n            var innerDict = a.Value as IDictionary<string, object>;\r\n            if (innerDict == null)\r\n            {\r\n                return new BsonValue(a.Value);\r\n            }\r\n\r\n            var serialized = new BsonDocument(innerDict.ToDictionary(b => b.Key, BsonValueFactory));\r\n            return serialized;\r\n        }"
      },
      {
        "user": "lbnascimento",
        "created_at": "2020-02-05T14:21:32Z",
        "body": "Hi! With the objective of organizing our issues, we are closing old unsolved issues. Please check the latest version of LiteDB and open a new issue if your problem/question/suggestion still applies. Thanks!"
      }
    ]
  },
  {
    "number": 487,
    "title": "Import/Export",
    "created_at": "2017-02-15T07:20:14Z",
    "closed_at": "2020-02-05T14:21:27Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/487",
    "body": "Hi,\r\n\r\nIs there a way to import/export the contents of the database from a file?  If so, could you provide an example?\r\nFailing this, I can write my own, but something built in to litedb would be very helpful.\r\n\r\nThanks.",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/487/comments",
    "author": "dgodwin1175",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2017-02-15T09:28:24Z",
        "body": "Simple way\r\n\r\n```\r\nvar json = JsonSerializer.Serialize(new BsonArray(db.Engine.Find(\"mycol\")));\r\n\r\ndb.Engine.Insert(\"mycol\", JsonSerializer.Deserialize(json).AsArray.ToArray());\r\n```"
      },
      {
        "user": "lbnascimento",
        "created_at": "2020-02-05T14:21:27Z",
        "body": "Hi! With the objective of organizing our issues, we are closing old unsolved issues. Please check the latest version of LiteDB and open a new issue if your problem/question/suggestion still applies. Thanks!"
      }
    ]
  },
  {
    "number": 486,
    "title": "v3 db file corruption when interrupting bulk insert ",
    "created_at": "2017-02-15T07:04:50Z",
    "closed_at": "2017-03-11T22:09:03Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/486",
    "body": "Hi.\nI have a console application that make a bulk insert with journaling and without transaction. during the run I just press control-c. the db file became unaccessable and  casting error from empty page to header page is thrown.\n\na- is this a bug or expected behaviour?\nb- how can I recover the database after that? assuming a corruption happened after deployment for this reason or any other reasons.\n\n\nthank you a lot ",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/486/comments",
    "author": "far100",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2017-02-15T09:31:32Z",
        "body": "Hi @far100, yes, it's excpected. In Storage, files are saved in chuncks document. Transactions are not supported in storage because use too many memory.\r\n\r\nIf you check you file and are with Length = 0, an error occurs during write. But, database datafile are not corrupted, only this file (must be excluded)"
      },
      {
        "user": "far100",
        "created_at": "2017-02-15T11:51:16Z",
        "body": "thank you for your quick response.\nand sorry for my misleading issue title.\n\nthe bulk insert is for strongly typed classes and not file storage.\n "
      },
      {
        "user": "mbdavid",
        "created_at": "2017-02-15T11:53:11Z",
        "body": "I just update nuget with a new version that check if your are using FileStorage in transaction. If you try now, you will get an exception showing this."
      }
    ]
  },
  {
    "number": 485,
    "title": "AutoIncrement integer Id causing errors",
    "created_at": "2017-02-15T02:01:12Z",
    "closed_at": "2017-03-11T22:09:03Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/485",
    "body": "I was experience some weird/random errors, then I stop to write some tests and the error that I'm getting now is:\r\n\r\n> \r\n> 6LiteException4 \r\n> Cannot insert duplicate key in unique index 'Id'. The duplicate value is '(null)' \r\n> \r\n\r\nI'm using LiteDb 3.0.0.\r\n\r\n```\r\nvoid Main()\r\n{\r\n\tstring filePath = @\"c:\\temp\\temp.db\";\r\n\t\r\n\tvar db = new LiteDatabase(filePath);\r\n\t\r\n\tLiteDB.BsonMapper.Global.Entity<Submission>().Id(a => a.Id, true);\r\n\t\r\n\tvar col = db.GetCollection<Submission>(\"submissions\");\r\n\t\r\n\tcol.EnsureIndex(\"Guid\", true);\r\n\tcol.EnsureIndex(\"Id\", true);\r\n\t\r\n\tvar obj1 = Newtonsoft.Json.JsonConvert.DeserializeObject<Submission>(@\"{\r\n\t  \"\"dictValues\"\": { \r\n\t      \"\"firstName\"\" : \"\"Hello1\"\"\r\n\t  }\r\n\t}\");\r\n\t\r\n\tcol.Insert(obj1);\r\n\tvar totalRecords = col.Count().Dump(\"Total Records\");\r\n\t\r\n\tvar obj2 = Newtonsoft.Json.JsonConvert.DeserializeObject<Submission>(@\"{\r\n\t  \"\"dictValues\"\": { \r\n\t      \"\"firstName\"\" : \"\"Hello2\"\"\r\n\t  }\r\n\t}\");\r\n\t\r\n\tcol.Insert(obj2);\r\n\t\r\n\ttotalRecords = col.Count().Dump(\"Total Records\");\r\n\t\r\n\tvar something = col.Find(Query.All(\"Id\",0), 0, 50).ToArray();\r\n\tif (something.Length <= 0) {\r\n\t\t\"No records were found\".Dump();\r\n\t} else{\r\n\tsomething.Length.Dump(\"Last By Id\");\r\n\tsomething.Select(a => Newtonsoft.Json.JsonConvert.SerializeObject(a, Newtonsoft.Json.Formatting.Indented)).Dump();\r\n\t}\r\n}\r\n\r\npublic class Submission \r\n    {\r\n\t\tprivate Guid _guid;\r\n\t    public virtual Guid Guid\r\n        {\r\n            get\r\n            {\r\n                if (_guid == Guid.Empty)\r\n                {\r\n                    _guid = Guid.NewGuid();\r\n                }\r\n                return _guid;\r\n            }\r\n            set\r\n            {\r\n                _guid = value;\r\n            }\r\n        }\r\n\t\t\r\n\t   private int _id;\r\n        public int Id\r\n        {\r\n            get { return _id; }\r\n            set\r\n            {\r\n                _id = value;\r\n               \r\n            }\r\n        }\r\n\t\r\n        private Dictionary<string, object> _submissionValues;\r\n\r\n        public Submission()\r\n        {\r\n            _submissionValues = new Dictionary<string, object>(StringComparer.OrdinalIgnoreCase);\r\n        }\r\n\r\n        public Dictionary<string, object> DictValues\r\n        {\r\n            get { return _submissionValues = (_submissionValues ?? new Dictionary<string, object>(StringComparer.OrdinalIgnoreCase)); }\r\n            set\r\n            {\r\n                _submissionValues = value;\r\n            }\r\n        }\r\n\r\n        }\r\n\r\n```",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/485/comments",
    "author": "jlVidal",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2017-02-15T10:23:52Z",
        "body": "Remove: `col.EnsureIndex(\"Id\", true);` - Id index are auto-created when you insert first document."
      }
    ]
  },
  {
    "number": 482,
    "title": "TTL index",
    "created_at": "2017-02-14T11:43:52Z",
    "closed_at": "2017-03-11T22:12:59Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/482",
    "body": "Hi, \r\nis there any way how to create a TTL index like in MongoDb or I have to implement a logic to remove old records myself?\r\nThanks,,\r\nJan",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/482/comments",
    "author": "janstafa",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2017-02-17T23:03:30Z",
        "body": "Hi @janstafa, TTL indexes works in background process, deleting records when get defined age. But LiteDB works as an embedded document and there is no background process to be automatic.\r\n\r\nI think you can create same extension method to collection that remove data using an conventional date index but you will need call when you want, not in automatic way.\r\n\r\nRegards,"
      }
    ]
  },
  {
    "number": 474,
    "title": "Query using multikey index (where products are an array of embedded documents)",
    "created_at": "2017-02-10T00:20:53Z",
    "closed_at": "2017-02-11T10:27:57Z",
    "labels": [
      "bug",
      "question",
      "fixed"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/474",
    "body": "Hello\r\n\r\nI have an issue with embedded documents. As per below sample I'm able to index and search by embedded documents but Find returns nothing.\r\n\r\n> // Query using multikey index (where products are an array of embedded documents)\r\n> var results = col.Find(Query.GT(\"Products.Price\", 100))\r\n\r\nHere is the complete code to test:\r\n\r\n\r\n        public class Customer\r\n        {\r\n            public class Phone\r\n            {\r\n                public string Number { get; set; }\r\n            }\r\n            public int Id { get; set; }\r\n            public string Name { get; set; }\r\n            public Phone[] Phones { get; set; }\r\n            public bool IsActive { get; set; }\r\n        }\r\n\r\n        static void Main(string[] args)\r\n        {\r\n            // Open database (or create if doesn't exist)\r\n            using (var db = new LiteDatabase(@\"MyData.db\"))\r\n            {\r\n                // Get a collection (or create, if doesn't exist)\r\n                var col = db.GetCollection<Customer>(\"customers\");\r\n\r\n                // Create your new customer instance\r\n                var customer = new Customer\r\n                {\r\n                    Name = \"John Doe\",\r\n                    Phones = new Customer.Phone[] { new Customer.Phone { Number = \"8000-0000\" } , new Customer.Phone { Number = \"9000-0000\" }},\r\n                    IsActive = true\r\n                };\r\n\r\n                // Insert new customer document (Id will be auto-incremented)\r\n                col.Insert(customer);\r\n\r\n                col.EnsureIndex(\"Phones.Number\");\r\n\r\n                var results = col.Find(Query.EQ(\"Phones.Number\", \"8000-0000\")); // returns no documents\r\n            }\r\n        }\r\n",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/474/comments",
    "author": "vlad-k4k",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2017-02-10T23:07:07Z",
        "body": "Hi @vlad-k4k, do not use nested classes. I made same example here:\r\n\r\n```\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Text;\r\nusing System.Threading.Tasks;\r\nusing LiteDB;\r\n\r\nnamespace Test474\r\n{\r\n    public class Customer\r\n    {\r\n        public int Id { get; set; }\r\n        public string Name { get; set; }\r\n        public Phone[] Phones { get; set; }\r\n        public bool IsActive { get; set; }\r\n    }\r\n\r\n    public class Phone\r\n    {\r\n        public string Number { get; set; }\r\n    }\r\n\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            // Open database (or create if doesn't exist)\r\n            using (var db = new LiteDatabase(@\"MyData.db\"))\r\n            {\r\n                // Get a collection (or create, if doesn't exist)\r\n                var col = db.GetCollection<Customer>(\"customers\");\r\n\r\n                // Create your new customer instance\r\n                var customer = new Customer\r\n                {\r\n                    Name = \"John Doe\",\r\n                    Phones = new Phone[] { new Phone { Number = \"8000-0000\" }, new Phone { Number = \"9000-0000\" } },\r\n                    IsActive = true\r\n                };\r\n                \r\n                // Insert new customer document (Id will be auto-incremented)\r\n                col.Insert(customer);\r\n\r\n                var r1 = col.FindOne(Query.EQ(\"Phones.Number\", \"8000-0000\"));\r\n\r\n                Console.WriteLine(r1.Name);\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nBut I found a bug here: when using array [] it's not working Linq expression like\r\n`col.FindOne(x => x.Phones[0].Number == \"8000-000\"`\r\n(works fine with List<T>)\r\n\r\nI'm fixing this, thanks"
      },
      {
        "user": "vlad-k4k",
        "created_at": "2017-02-11T02:06:43Z",
        "body": "Awesome thanks. Also I didn't realize this feature in v3.x.x only"
      }
    ]
  },
  {
    "number": 467,
    "title": "Null reference on Update",
    "created_at": "2017-02-07T22:01:34Z",
    "closed_at": "2020-02-05T14:21:10Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/467",
    "body": "Hello, \r\n\r\nI have a simple class \r\n\r\n   [Serializable]\r\n    public class UserProfile\r\n    {\r\n        [BsonIndex]\r\n        public Guid UserId { get; set; }\r\n\r\n        [BsonRef(\"devices\")]\r\n        public List<string> Devices { get; set; }\r\n    }\r\n\r\nwhich I would like to retrieve, change and save. Retrieving is OK:\r\n\r\n`string deviceid = \"123456\";`\r\n`var profiles = database.GetCollection<UserProfile>(\"profiles\").Include(p => p.Devices);`\r\n`var profile = profiles.Find(p => p.UserId.Equals(profileId)).FirstOrDefault();`\r\n\r\n`if (!profile.Devices.Contains(deviceId))\r\n   profile.Devices.Add(deviceId); `\r\n\r\n//-- up to here everything is OK, object has a GUID and one string\r\n\r\n`profiles.Update(profile);` // <----- this fails with a null ref exception\r\n\r\nWhy does the update fail? Thank you\r\n\r\n",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/467/comments",
    "author": "rudolf-kajan",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2017-02-07T23:18:26Z",
        "body": "You cannot use DbRef in List<string>. DbRef must be used in external collection references (complex datatyles with id).\r\n\r\nIn this example, i beleave you must use embedded document: just remove [BsonRef] attribute"
      },
      {
        "user": "rudolf-kajan",
        "created_at": "2017-02-08T08:45:54Z",
        "body": "Thank you for the suggestion, but if I remove the [BsonRef(\"devices\")] attribute from List<string> Devices I get the error: \"Invalid BSON data type 'Null' on field '_id'.\"\r\n\r\n\r\nthen if I change my class to \r\n\r\n[Serializable]\r\n    public class UserProfile\r\n    {        \r\n        [BsonId]\r\n        public Guid Id { get; set; }\r\n        public List<string> Devices { get; set; }\r\n    }\r\n\r\nI still get the null reference exception on profiles.Update(profile)\r\n"
      },
      {
        "user": "lbnascimento",
        "created_at": "2020-02-05T14:21:10Z",
        "body": "Hi! With the objective of organizing our issues, we are closing old unsolved issues. Please check the latest version of LiteDB and open a new issue if your problem/question/suggestion still applies. Thanks!"
      }
    ]
  },
  {
    "number": 463,
    "title": "Shrink to possible minimum size",
    "created_at": "2017-02-06T13:49:29Z",
    "closed_at": "2017-02-10T22:28:59Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/463",
    "body": "If you upload a file (lets say 66mb), delete file and shrink, you dont get to original size of the database without that file.  In my case from 26kb to 66mb back to 40kb.\r\nIf I open it I see still lots of null entries that could be deleted. correct?",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/463/comments",
    "author": "Jacknq",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2017-02-07T19:31:20Z",
        "body": "Did you drop collection or delete all documents? Because if you only delete only you still storing collection infor (like name and indexes definitios). If you drop collection you will get minimal file size: 8k"
      },
      {
        "user": "Jacknq",
        "created_at": "2017-02-07T19:36:31Z",
        "body": "I did insert , delete file and shrink db. Drop collection on all files doesnt make sense,  you can have ot her files in db you dont want to delete. But generaly i dont know if i need any metadata of deleted records. "
      },
      {
        "user": "mbdavid",
        "created_at": "2017-02-07T19:49:06Z",
        "body": "try drop collection to check if datafile backs to original size. Collection metadata is not too relevant because it's auto-created when you do your first insert"
      },
      {
        "user": "Jacknq",
        "created_at": "2017-02-08T07:51:11Z",
        "body": "Ok.\r\nMy point here was that it should be possible - same as when you delete files on your disk it removes exactly so many bites you added, shrink after delete  that you get to original size without dropping collections. "
      }
    ]
  },
  {
    "number": 462,
    "title": "Removed API LiteDatabase.Run breaked LiteDBViewer",
    "created_at": "2017-02-06T10:17:18Z",
    "closed_at": "2017-03-11T22:10:56Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/462",
    "body": "Since LiteDatabase.Run was removed from V3 there's no way for LiteDBViewer to easily execute a string query on a database. Would it be possible to restore this functionality in v3?",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/462/comments",
    "author": "RytisLT",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2017-02-07T20:17:35Z",
        "body": "Hi @CaptBrick, now all shell commands are inside shell tool. It was better to remove from there to litedb keep simple. If you need this commands, please get from shell project."
      }
    ]
  },
  {
    "number": 461,
    "title": "Missing dump functionality in v3",
    "created_at": "2017-02-06T09:16:04Z",
    "closed_at": "2020-02-05T14:20:57Z",
    "labels": [
      "suggestion",
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/461",
    "body": "Hi,\r\n\r\nwe are using the v2 of LiteDB and created some dumps of the database to have a predefined input for some unit-/component testing. During the setup of the unit test we load a `dump` file manually and call \r\n`liteDatabase.Run(textLine)` for all lines in the file.\r\n\r\nNow with version 3 it seems that the dump command is no longer existing and that the Run method was removed from the LiteDatabase. Is there any other way how we can \"manually\" fill the database from a text\r\nfile?\r\n\r\nRegards \r\n   sitofabi",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/461/comments",
    "author": "sitofabi",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2017-02-07T20:33:20Z",
        "body": "Hi @sitofabi, in v3 all shell commands are removed and now are only in shell too. Now If you want fill your datafile, you can just read json file as BsonArray and insert all data collection, like this:\r\n\r\n```\r\nvar docs = JsonSerializer.DeserializeArray(File.ReadAllText(\"your-file.json\"));\r\n\r\nusing(var db = new LiteEngine(\"your-datafile.db\"))\r\n{\r\n    db.Insert(\"your-collection\", docs);\r\n}\r\n```\r\n"
      },
      {
        "user": "mahdi-ninja",
        "created_at": "2017-02-08T02:20:10Z",
        "body": "Hey @mbdavid,\r\n\r\nMay I ask why? These shell commands are really useful in automation. Can you please bring them back?\r\n\r\nAlso if they are not going to come back, at least remove them from the \"help full\" in LiteDB.Shell.exe. I wasted a couple of hours trying to understand why these commands don't work then I saw this message."
      },
      {
        "user": "mbdavid",
        "created_at": "2017-02-10T22:35:41Z",
        "body": "Hi @mahdi-ninja, added in my backlog to evaluate. I remove just to be clear/easy to mantain core lib. Let me ask if your automation are basicly \"import/export\" data? Because its much easy to create command to dump/import from core lib than all shell parser/commands."
      },
      {
        "user": "mahdi-ninja",
        "created_at": "2017-02-10T23:53:30Z",
        "body": "@mbdavid Yes, I used it mostly for import/export, upgrading databases and changing their passwords (to use different passwords for different environments)."
      },
      {
        "user": "jkmuka",
        "created_at": "2017-04-30T02:15:50Z",
        "body": "I also used the dump command to easily view everything in the DB, would like to see it added back."
      },
      {
        "user": "lbnascimento",
        "created_at": "2020-02-05T14:20:57Z",
        "body": "Hi! With the objective of organizing our issues, we are closing old unsolved issues. Please check the latest version of LiteDB and open a new issue if your problem/question/suggestion still applies. Thanks!"
      }
    ]
  },
  {
    "number": 460,
    "title": "Question : How can i insert complex entities to db?",
    "created_at": "2017-02-05T23:12:34Z",
    "closed_at": "2017-02-10T23:49:02Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/460",
    "body": "Hi @mbdavid,\r\n\r\nI think, i understand all concepts about document database. Because of that i start to use LiteDB in my project. I implement my simple entities first insert, update etc working fine. But i'm stuck about my complex entities. I produce sample console application which is below. I tried many ways for insert entities to db but i received an exception in every situation. Could you please help me about that problem.\r\n\r\n* Am i missing something? Because every exception from LiteDB is null reference exception and they don't have any inner exception because of that i don't understand what is the problem. Is there a way to catch inner exceptions?\r\n* How can i save my TradingHours entity to db in one step?\r\n* If not possible one step insert how can i save to db simply?\r\n\r\n```\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Globalization;\r\nusing LiteDB;\r\n\r\nnamespace LiteDBTest\r\n{\r\n    public class TradingHours\r\n    {\r\n        public TradingHours()\r\n        {\r\n\r\n        }\r\n\r\n        public TradingHours(string name, TimeZoneInfo timeZoneInfo)\r\n            : this()\r\n        {\r\n            Name = name;\r\n            TimeZoneInfo = timeZoneInfo;\r\n        }\r\n\r\n        public TradingHours(string name, TimeZoneInfo timeZoneInfo, IEnumerable<Session> sessions, IEnumerable<Holiday> holidays)\r\n            : this(name, timeZoneInfo)\r\n        {\r\n            Sessions = sessions;\r\n            Holidays = holidays;\r\n        }\r\n\r\n        public int Id { get; set; }\r\n        public string Name { get; set; }\r\n        public TimeZoneInfo TimeZoneInfo { get; set; }\r\n        public IEnumerable<Session> Sessions { get; set; }\r\n        public IEnumerable<Holiday> Holidays { get; set; }\r\n    }\r\n\r\n    public class Session\r\n    {\r\n        public Session()\r\n        {\r\n\r\n        }\r\n\r\n        public Session(TradingHours tradingHours)\r\n            : this()\r\n        {\r\n            TradingHours = tradingHours;\r\n        }\r\n\r\n        public Session(TradingHours tradingHours, DayOfWeek startDay, TimeSpan startTime, DayOfWeek endDay, TimeSpan endTime, bool endOfDay)\r\n            : this(tradingHours)\r\n        {\r\n            StartDay = startDay;\r\n            StartTime = startTime;\r\n            EndDay = endDay;\r\n            EndTime = endTime;\r\n            EndOfDay = endOfDay;\r\n        }\r\n\r\n        public int Id { get; set; }\r\n        public TradingHours TradingHours { get; set; }\r\n        public DayOfWeek StartDay { get; set; }\r\n        public TimeSpan StartTime { get; set; }\r\n        public DayOfWeek EndDay { get; set; }\r\n        public TimeSpan EndTime { get; set; }\r\n        public bool EndOfDay { get; set; }\r\n    }\r\n\r\n    public class Holiday\r\n    {\r\n        public Holiday()\r\n        {\r\n\r\n        }\r\n\r\n        public Holiday(TradingHours tradingHours)\r\n            : this()\r\n        {\r\n            TradingHours = tradingHours;\r\n        }\r\n\r\n        public Holiday(TradingHours tradingHours, string name, HolidayType type, DateTime date, TimeSpan startTime, TimeSpan endTime)\r\n            : this(tradingHours)\r\n        {\r\n            Name = name;\r\n            Type = type;\r\n            Date = date;\r\n            StartTime = startTime;\r\n            EndTime = endTime;\r\n        }\r\n\r\n        public int Id { get; set; }\r\n        public TradingHours TradingHours { get; set; }\r\n        public string Name { get; set; }\r\n        public HolidayType Type { get; set; }\r\n        public DateTime Date { get; set; }\r\n        public TimeSpan StartTime { get; set; }\r\n        public TimeSpan EndTime { get; set; }\r\n    }\r\n\r\n    public enum HolidayType\r\n    {\r\n        FullDay,\r\n        LateOpen,\r\n        EarlyClose\r\n    }\r\n\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            BsonMapper.Global.Entity<TradingHours>()\r\n                .Id(e => e.Id)\r\n                .Index(e => e.Name, true)\r\n                .DbRef(e => e.Sessions, \"Sessions\")\r\n                .DbRef(e => e.Holidays, \"Holidays\");\r\n\r\n            BsonMapper.Global.Entity<Session>()\r\n                .Id(e => e.Id)\r\n                .Index(e => e.TradingHours)\r\n                .DbRef(e => e.TradingHours, \"TradingHours\");\r\n\r\n            BsonMapper.Global.Entity<Holiday>()\r\n                .Id(e => e.Id)\r\n                .Index(e => e.TradingHours)\r\n                .DbRef(e => e.TradingHours, \"TradingHours\");\r\n\r\n            BsonMapper.Global.RegisterType(\r\n                (timeSpan) => timeSpan.Ticks,\r\n                (bsonValue) => TimeSpan.FromTicks(bsonValue.AsInt64));\r\n\r\n            BsonMapper.Global.RegisterType(\r\n                (cultureInfo) => cultureInfo.Name,\r\n                (bsonValue) => CultureInfo.GetCultureInfo(bsonValue.AsString));\r\n\r\n            BsonMapper.Global.RegisterType(\r\n                (timeZoneInfo) => timeZoneInfo.Id,\r\n                (bsonValue) => TimeZoneInfo.FindSystemTimeZoneById(bsonValue.AsString));\r\n\r\n            using (var database = new LiteDatabase(AppDomain.CurrentDomain.BaseDirectory + \"Data.db\"))\r\n            {\r\n                var tradingHoursCollection = database.GetCollection<TradingHours>(\"TradingHours\");\r\n                var sessionCollection = database.GetCollection<Session>(\"Sessions\");\r\n                var holidayCollection = database.GetCollection<Holiday>(\"Holidays\");\r\n\r\n                if (tradingHoursCollection.FindOne(tradingHours => tradingHours.Name == \"US Equities Regular\") == null)\r\n                {\r\n                    var tradingHours = new TradingHours(\"US Equities Regular\", TimeZoneInfo.FindSystemTimeZoneById(\"Eastern Standard Time\"));\r\n\r\n                    var sessions = new List<Session>\r\n                    {\r\n                        new Session(tradingHours, DayOfWeek.Monday, new TimeSpan(9, 30, 0), DayOfWeek.Monday, new TimeSpan(16, 0, 0), true),\r\n                        new Session(tradingHours, DayOfWeek.Tuesday, new TimeSpan(9, 30, 0), DayOfWeek.Tuesday, new TimeSpan(16, 0, 0), true),\r\n                        new Session(tradingHours, DayOfWeek.Wednesday, new TimeSpan(9, 30, 0), DayOfWeek.Wednesday, new TimeSpan(16, 0, 0), true),\r\n                        new Session(tradingHours, DayOfWeek.Thursday, new TimeSpan(9, 30, 0), DayOfWeek.Thursday, new TimeSpan(16, 0, 0), true),\r\n                        new Session(tradingHours, DayOfWeek.Friday, new TimeSpan(9, 30, 0), DayOfWeek.Friday, new TimeSpan(16, 0, 0), true)\r\n                    };\r\n\r\n                    var holidays = new List<Holiday>\r\n                    {\r\n                        new Holiday(tradingHours, \"New Year's Day\", HolidayType.FullDay, new DateTime(2016, 1, 1), TimeSpan.Zero, TimeSpan.Zero),\r\n                        new Holiday(tradingHours, \"Martin Luther King, Jr. Day\", HolidayType.FullDay, new DateTime(2016, 1, 18), TimeSpan.Zero, TimeSpan.Zero),\r\n                        new Holiday(tradingHours, \"President's Day\", HolidayType.FullDay, new DateTime(2016, 2, 15), TimeSpan.Zero, TimeSpan.Zero),\r\n                        new Holiday(tradingHours, \"Good Friday\", HolidayType.FullDay, new DateTime(2016, 3, 25), TimeSpan.Zero, TimeSpan.Zero),\r\n                        new Holiday(tradingHours, \"Memorial Day\", HolidayType.FullDay, new DateTime(2016, 5, 30), TimeSpan.Zero, TimeSpan.Zero),\r\n                        new Holiday(tradingHours, \"Independence Day\", HolidayType.FullDay, new DateTime(2016, 7, 4), TimeSpan.Zero, TimeSpan.Zero),\r\n                        new Holiday(tradingHours, \"Labor Day\", HolidayType.FullDay, new DateTime(2016, 9, 5), TimeSpan.Zero, TimeSpan.Zero),\r\n                        new Holiday(tradingHours, \"Thanksgiving\", HolidayType.FullDay, new DateTime(2016, 11, 24), TimeSpan.Zero, TimeSpan.Zero),\r\n                        new Holiday(tradingHours, \"Thanksgiving\", HolidayType.EarlyClose, new DateTime(2016, 11, 25), TimeSpan.Zero, new TimeSpan(13, 0, 0)),\r\n                        new Holiday(tradingHours, \"Christmas Day\", HolidayType.FullDay, new DateTime(2016, 12, 15), TimeSpan.Zero, TimeSpan.Zero)\r\n                    };\r\n\r\n                    using (var transaction = database.BeginTrans())\r\n                    {\r\n                        try\r\n                        {\r\n                            tradingHours.Sessions = new List<Session>(sessions);\r\n                            tradingHours.Holidays = new List<Holiday>(holidays);\r\n                            tradingHoursCollection.Insert(tradingHours);\r\n                            transaction.Commit();\r\n                        }\r\n                        catch (Exception)\r\n                        {\r\n                            transaction.Rollback();\r\n                            throw;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n```",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/460/comments",
    "author": "aytacasan",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2017-02-06T00:04:14Z",
        "body": "Hi @aytacasan,\r\n\r\nIf you are using DbRefs you need choose between: 1 ThradingHour has multiple Sessions (and Holidays) or 1 Session/Holliday has 1 ThradingHour- not both.\r\n\r\nTry first insert all your Sessions/Holliday without any relation with ThradingHour. Than, insert your ThradingHour. Like: \r\n\r\n```\r\n// insert many sessions/hollidays\r\nsessionCollection.Insert(tradingHours.Sessions);\r\nholidayCollection.Insert(tradingHours.Holidays);\r\n\r\n// and now insert you treading hour\r\ntradingHoursCollection.Insert(tradingHours);\r\n```\r\n\r\nYou final database will be:\r\n```\r\nSession Collection:\r\n[\r\n    { _id: 1, StartDay: \"Monday\", StartTime: \".....\" .... },\r\n    { _id: 2, StartDay: \"Tuesday\", StartTime: \".....\" .... },\r\n    ...\r\n]\r\n\r\nHolidays Collection:\r\n[\r\n    { _id: 1, Name: \"New Year's Day\", .... },\r\n    { _id: 2, Name: \"Martin Luther King, Jr. Day\", .... },\r\n   ....\r\n]\r\n\r\nThradingHour Collection:\r\n[\r\n    { \r\n        _id: 1,\r\n        Name: \"US Equities Regular\",\r\n        ...\r\n        Sessions: [ { $id: 1, $ref: \"Sessions\" }, { $id: 2, $ref: \"Sessions\" }, { $id: 3, $ref: \"Sessions\" }, ...]\r\n        Holidays: [ { $id: 1, $ref: \"Holidays\" }, { $id: 2, $ref: \"Holidays\" }, { $id: 3, $ref: \"Holidays\" }, ...]\r\n    }\r\n]\r\n"
      },
      {
        "user": "aytacasan",
        "created_at": "2017-02-06T14:13:07Z",
        "body": "Hi @mbdavid,\r\n\r\nI see when i want to use DBRef i have to select one side of relation for use it. In your code you selected to add DBRef to TradingHours. But i need to opposite and change my sample console application according to this. Here is the mappings;\r\n\r\n```\r\n            BsonMapper.Global.Entity<TradingHours>()\r\n                .Id(e => e.Id)\r\n                .Index(e => e.Name, true)\r\n                .Ignore(e => e.Sessions)\r\n                .Ignore(e => e.Holidays);\r\n\r\n            BsonMapper.Global.Entity<Session>()\r\n                .Id(e => e.Id)\r\n                .Index(e => e.TradingHours)\r\n                .DbRef(e => e.TradingHours, \"TradingHours\");\r\n\r\n            BsonMapper.Global.Entity<Holiday>()\r\n                .Id(e => e.Id)\r\n                .Index(e => e.TradingHours)\r\n                .DbRef(e => e.TradingHours, \"TradingHours\");\r\n```\r\n\r\nI can easily inserting all records like below;\r\n\r\n```\r\n                    using (var transaction = database.BeginTrans())\r\n                    {\r\n                        try\r\n                        {\r\n                            tradingHoursCollection.Insert(tradingHours);\r\n                            sessionCollection.Insert(sessions);\r\n                            holidayCollection.Insert(holidays);\r\n                            transaction.Commit();\r\n                        }\r\n                        catch (Exception)\r\n                        {\r\n                            transaction.Rollback();\r\n                            throw;\r\n                        }\r\n                    }\r\n```\r\n\r\nDatabase will be;\r\n\r\n```\r\nThradingHour Collection:\r\n[\r\n    { \r\n        _id: 1,\r\n        Name: \"US Equities Regular\",\r\n        ...\r\n    }\r\n]\r\n\r\nSession Collection:\r\n[\r\n    { _id: 1, TradingHours: { $id: 1, $ref: \"TradingHours\" }, StartDay: \"Monday\", StartTime: \".....\" .... },\r\n    { _id: 2, TradingHours: { $id: 1, $ref: \"TradingHours\" }, StartDay: \"Tuesday\", StartTime: \".....\" .... },\r\n    ...\r\n]\r\n\r\nHolidays Collection:\r\n[\r\n    { _id: 1, TradingHours: { $id: 1, $ref: \"TradingHours\" }, Name: \"New Year's Day\", .... },\r\n    { _id: 2, TradingHours: { $id: 1, $ref: \"TradingHours\" }, Name: \"Martin Luther King, Jr. Day\", .... },\r\n   ....\r\n]\r\n```\r\n\r\nNow i want to read records separately;\r\n\r\n* Because there is no DBRef in TradingHours entity we can not use Include directive so we have to fill Sessions and Holidays lists manually.  I'm using below code and it's working, but is this right way? or can you recommend any other more appropriate way?\r\n\r\n```\r\n                var USERTH = tradingHoursCollection.FindOne(tradingHours => tradingHours.Name == \"US Equities Regular\");\r\n                USERTH.Sessions = new List<Session>(sessionCollection.Find(session => session.TradingHours.Id == USERTH.Id));\r\n                USERTH.Holidays = new List<Holiday>(holidayCollection.Find(session => session.TradingHours.Id == USERTH.Id));\r\n```\r\n\r\n* There is queries and notes below about read Sessions. Do you have something to add?\r\n\r\nWhen we have TradingHours instance, we can not query via TradingHours instance : `sessionCollection.Include(session => session.TradingHours).Find(session => session.TradingHours == USERTH);`\r\nWhen we have TradingHours Name, We can not query via TradingHours.Name despite use of Include directive : `sessionCollection.Include(session => session.TradingHours).Find(session => session.TradingHours.Name == \"US Equities Regular\");`\r\nOnly we can query from Id : `sessionCollection.Include(session => session.TradingHours).Find(session => session.TradingHours.Id == USERTH.Id);`\r\n\r\n* In session entity's map there is `.Index(e => e.TradingHours)` then i'm calling `sessionCollection.EnsureIndex(sc => sc.TradingHours);` actually i expected to create this index before run any query like that: {\"slot\":1,\"field\":\"TradingHours.$id\",\"unique\":false} but i can't. How can i create this index via fluent api? When i try `.Index(e => e.TradingHours.Id)` i'm receiving an error.\r\n\r\nBest Regards"
      },
      {
        "user": "mbdavid",
        "created_at": "2017-02-07T20:28:25Z",
        "body": "For now it's your best way to populate tradingHours with sessions and holidays.\r\n\r\n```\r\n var USERTH = tradingHoursCollection.FindOne(tradingHours => tradingHours.Name == \"US Equities Regular\");\r\nUSERTH.Sessions = new List<Session>(sessionCollection.Find(session => session.TradingHours.Id == USERTH.Id));\r\nUSERTH.Holidays = new List<Holiday>(holidayCollection.Find(session => session.TradingHours.Id == USERTH.Id));\r\n```\r\n\r\nIt's on my plans support custom user Action<T> in includes, so user can add some like this\r\n\r\n```\r\ntradingHoursCollection\r\n    .Include(x => x.Sessions = sessionCollection.Find(z => z.TradingHours.Id == x.Id))\r\n    .FindAll();\r\n```\r\n\r\nYes, you can't query from session information about tradingHours, becase there is not index, in Sessions. If you need query you will need duplicate your tradingHours name information in session.\r\n\r\n- Indexes are created only when run first time. If you need run before, use `EnsureIndex` method after you open your database"
      },
      {
        "user": "aytacasan",
        "created_at": "2017-02-08T02:13:49Z",
        "body": "Hi @mbdavid,\r\n\r\n* I saw your sample code at codeproject and you used user action for include directive like you said. But i think it was supported in some old versions of LiteDB. If you support it again with new versions this will be awesome. Is it necessary to open new issue about that by me or you prefer handle it by yourself?\r\n\r\nAlso there is a issue that you labeled suggestion and add to backlog for version 3.1. Can i labeled it closed or suggestion issues must handle by you?\r\n\r\n* Thanks @mbdavid i know if i'm not use EnsureIndex for force index creation, indexes will be create when first query. Actually i want to learn that in my previous post's sample code, how can i write that code; \"create index for TradingHours.Id\" with fluent api? When i try it '.Index(e => e.TradingHours.Id)' receiving an error. Yes i know if i'm not write anything, when i run query according DBRef property index will be create auto but i just wondered.\r\n\r\nBest Regards"
      },
      {
        "user": "mbdavid",
        "created_at": "2017-02-10T23:49:02Z",
        "body": "Hi @aytacasan I will close to keep simple to track."
      }
    ]
  },
  {
    "number": 454,
    "title": "File stored in FileStorage but not updating",
    "created_at": "2017-02-04T08:45:56Z",
    "closed_at": "2017-02-04T22:14:10Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/454",
    "body": "I am trying to write and updating the file. While creating a new file, it is working fine but when i update the file by calling Upload method with with memoryStream, The original get file empty in FileStorage instead of updating.\r\n\r\nI also tried to delete and re-create the file but that has the same behavior. following is my code, please tell me if i am missing something.\r\n\r\n```\r\nprivate void Write(byte[] buffer, int index, int len, bool isFirstWrite)\r\n{\r\n\tvar fsinfo = _db.FileStorage.FindById(_name);\r\n\tif (fsinfo != null)\r\n\t{\r\n\t\tMemoryStream memoryStream = new MemoryStream();\r\n\r\n\t\tConsole.WriteLine($\"{fsinfo.Id} already exist with lenth of {fsinfo.Length}\");\r\n\t\tfsinfo.CopyTo(memoryStream);\r\n\t\t//memoryStream.Position = memoryStream.Length;\r\n\t\tmemoryStream.Position = index;\r\n\t\tConsole.WriteLine($\"MemorySteam lenth: {memoryStream.Length} before writing\");\r\n\t\tmemoryStream.Write(buffer, 0, len);\r\n\t\tmemoryStream.Flush();\r\n\t\t//_db.FileStorage.Delete(_name);\r\n\t\tConsole.WriteLine($\"MemorySteam lenth: {memoryStream.Length} after writing and flush\");\r\n\t\tfsinfo = _db.FileStorage.Upload(_name, _name, memoryStream);\r\n\t\tmemoryStream.Close();\r\n\t\tConsole.WriteLine($\"{_name} lenth {fsinfo.Length} after flush\");\r\n\t}\r\n\telse\r\n\t{\r\n\t\tusing (LiteFileStream fileStream = _db.FileStorage.OpenWrite(_name, _name))\r\n\t\t{\r\n\t\t\tConsole.WriteLine($\"Opened a new file:{_name} to write.\");\r\n\t\t\tfileStream.Write(buffer, 0, len);\r\n\t\t\tfileStream.Flush();\r\n\t\t\tConsole.WriteLine($\"{_name} lenth {fileStream.Length} after flush\");\r\n\t\t}\r\n\t}\r\n}\r\n```",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/454/comments",
    "author": "sheryever",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2017-02-04T11:37:27Z",
        "body": "Hi @sheryever, try position you MemoryStream to 0 before call Upload method. LiteDB doesnt touch in start position. If you write on MemoryStream and flush(), position in on end and when you call Upload there is no more bytes to write."
      },
      {
        "user": "sheryever",
        "created_at": "2017-02-04T22:14:10Z",
        "body": "@mbdavid Thanks that worked"
      }
    ]
  },
  {
    "number": 450,
    "title": "Issue with Collection Insert()",
    "created_at": "2017-02-02T09:22:16Z",
    "closed_at": "2017-02-10T22:27:59Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/450",
    "body": "First of all, let me say well done on releasing v3.0.0. And here is me saying it: Well Done! :)\r\n\r\nThink I may have raised this before, but I have an interface issue with Insert().\r\n\r\nBasically, both the Upsert() and Update() variants returns true on success. While Insert() has no return type and throws instead.\r\n\r\nThis is means that, if I want to have appropriate behaviour in my app (without it throwing out) I either have to wrap the Insert() call in a try catch block, or query whether the document exists before hand.",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/450/comments",
    "author": "kuiperzone",
    "comments": [
      {
        "user": "kuiperzone",
        "created_at": "2017-02-03T04:16:35Z",
        "body": "Thinking about this, I could understand why you might not be keen to change it. It might cause an issue for apps using try-catch to detect failure."
      },
      {
        "user": "mbdavid",
        "created_at": "2017-02-04T11:30:22Z",
        "body": "But Upsert returns true if insert and false if update (when using single document). And Update returns true when found and update document and false if not found document.\r\n\r\nIn both cases there is no exceptions. If you compare with relation database is the same: INSERT can throw duplicate key exception but UPDATE only update founded rows, so there is no exception on this.\r\n"
      },
      {
        "user": "kuiperzone",
        "created_at": "2017-02-04T16:10:33Z",
        "body": ">But Upsert returns true if insert and false if update (when using single document).\r\n\r\nYes, I've just realised. :)\r\n\r\nI think my question is not all that relevant.\r\n\r\nOne last question, though in terms of performance, is better to check exists before calling Insert or catch the exception? (My thinking is to try-catch.)"
      },
      {
        "user": "mbdavid",
        "created_at": "2017-02-04T16:20:33Z",
        "body": "It's better call Insert and test duplicate exception an than Update.\r\n\r\nor\r\n\r\nUpdate first, if returns false, than Insert.\r\n\r\nIn both cases it's better inside an transaction. You can choose what you beleave that you will have most: Inserts or Updates? "
      }
    ]
  },
  {
    "number": 448,
    "title": "Which platforms does it support?",
    "created_at": "2017-01-31T14:01:44Z",
    "closed_at": "2017-02-11T18:32:30Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/448",
    "body": "Currently, I am trying to build for WSA in Unity, and, like other dlls, it is not compatible with the version of .NET used.\r\nOne of the problems is that some methods from System.IO don't work in .NET version of WSA.\r\nSo my question is: which platforms does it support? Specifically talking about Unity, does it support Android, IOS, WebGL?",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/448/comments",
    "author": "NatsXDLageg",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2017-01-31T15:38:00Z",
        "body": "Hi @NatsXDLageg, LiteDB v3 supports .net35 and netstandard1.4 platforms. For unity, current version of litedb seams not working because use Reflection.Emit. But, you can download for now from Unity3D branch.\r\n\r\nI never work with unity, but as lot of users here says, it´s possible to run in any mobile platform ."
      },
      {
        "user": "kuiperzone",
        "created_at": "2017-02-02T09:16:34Z",
        "body": "Has there been any use or testing with .Net Core or mono?"
      },
      {
        "user": "mbdavid",
        "created_at": "2017-02-11T18:32:30Z",
        "body": "@kuiperzone, I use LiteDB only in net full, but it's compatible with net standard."
      }
    ]
  },
  {
    "number": 442,
    "title": "Question - How to query array of strings",
    "created_at": "2017-01-25T21:11:57Z",
    "closed_at": "2017-02-04T11:40:47Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/442",
    "body": "Hi.\r\n\r\nI am using LiteDB 2.0.4.\r\nIn one collection, I have array of strings. How do I query that array for one value or part of it?\r\n\r\nI have tried Query.In, but that doesn't work. Neither does Query.Contains.",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/442/comments",
    "author": "vkocjancic",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2017-01-26T02:19:10Z",
        "body": "Hi, only v3 support array multikey index. Use:\r\n\r\nQuery.EQ(\"array\", value)\r\nQuyer.StartsWith(\"array\", value)\r\n"
      },
      {
        "user": "vkocjancic",
        "created_at": "2017-01-28T11:16:41Z",
        "body": "Yes, but v3 is in beta.\r\n\r\nQuery.EQ and Query.StartsWith do not seem to work on array fields in v2."
      },
      {
        "user": "mbdavid",
        "created_at": "2017-01-28T18:06:57Z",
        "body": "No, v3 was released last week.\r\n\r\nIn v2/1, arrays are indexed are single object, so you need search all object (all items in array). In v3, arrays are splited values and each value are an index key, so it's possible search for a individual value."
      },
      {
        "user": "vkocjancic",
        "created_at": "2017-01-28T19:20:17Z",
        "body": "Excellent. Will update then. Is DB file compatible?\r\n\r\nOK, but in case of v2, shouldn't Query.Contains then find a value in array of strings? It does not. "
      },
      {
        "user": "mbdavid",
        "created_at": "2017-01-29T19:07:13Z",
        "body": "Is not how v2 works. When you are index an array, all items inside this array are indexed as a single \"value\" (array type). So, even Contains will not find single result inside an array.\r\n\r\nThat was I changed in v3, to index all itens inside and array. So each value can be searched."
      }
    ]
  },
  {
    "number": 435,
    "title": "File concurrency.",
    "created_at": "2017-01-24T00:44:52Z",
    "closed_at": "2017-03-11T22:09:35Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/435",
    "body": "Hi there,\r\n\r\nI am new to LiteDB and I would like the clarify what you mean by \"file concurrency\"?\r\n\r\nI understand it is thread safe, i.e. multiple threads from the same application can use the same instance of the database safely. I am in a situation however where I need two independent processes to work on the same database file at the same time - is this long longer possible?\r\n\r\nRegards.",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/435/comments",
    "author": "sBoff",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2017-01-24T09:30:01Z",
        "body": "Hi @sBoff, current v3 support both thread concurrency and file concurrency (multiple instances/process using same datafile) in net35 version. In my first v3 beta version I removed multiprocess access but add back in v3 release after this issue #332. Wiki are not updated yet.\r\n\r\nIf you are running in netstandard, only LiteDB must open file as exclusive access (netstandard doesn't support lock file).\r\n"
      },
      {
        "user": "sBoff",
        "created_at": "2017-01-24T18:48:03Z",
        "body": "Fantastic, thank you very much!"
      }
    ]
  },
  {
    "number": 431,
    "title": "Quick question about primary _id",
    "created_at": "2017-01-18T15:45:01Z",
    "closed_at": "2017-01-20T01:14:11Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/431",
    "body": "If I have my own struct type which is implicitly convertable to and from the long type, can I use it as the primary _id index in a collection?",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/431/comments",
    "author": "kuiperzone",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2017-01-18T17:43:54Z",
        "body": "Yes, you can. You can use any datatype as primary key. The only rule is that your BSON converted data can be larger than 250 bytes."
      }
    ]
  },
  {
    "number": 427,
    "title": "The process cannot access the file because it is being used by another process.",
    "created_at": "2017-01-15T08:56:47Z",
    "closed_at": "2017-01-20T01:14:27Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/427",
    "body": "I installed the latest pre-released nuget (beta-3) and am getting this error:\r\n\r\n```\r\nAn exception of type 'System.IO.FileLoadException' occurred in mscorlib.ni.dll but was not handled in user code.\r\n\r\nAdditional information: The process cannot access the file because it is being used by another process. (Exception from HRESULT: 0x80070020)\r\n```\r\n\r\nStack Trace:\r\n```\r\n\"at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\\r\\n   \r\nat System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n  \r\nat System.Runtime.CompilerServices.TaskAwaiter.GetResult()\\r\\n   \r\nat BreadPlayer.Service.DatabaseService.<CreateDB>d__9.MoveNext()\"\r\n```\r\n\r\nI have this code:\r\n\r\n```csharp\r\n public virtual async void CreateDB()\r\n        {\r\n            try\r\n            {\r\n                var disk = new FileDiskService(ApplicationData.Current.LocalFolder.Path + @\"\\breadplayer.db\", new FileOptions() { FileMode = FileMode.Exclusive, Journal= true });\r\n                db = new LiteDatabase(disk);                \r\n                    tracks = db.GetCollection<Mediafile>(\"tracks\");\r\n                    playlists = db.GetCollection<Playlist>(\"playlists\");\r\n                    recent = db.GetCollection<Mediafile>(\"recent\");\r\n                    tracks.EnsureIndex(t => t.Title);\r\n                    tracks.EnsureIndex(t => t.LeadArtist);                \r\n            }\r\n            catch(Exception)\r\n            {\r\n                await ApplicationData.Current.ClearAsync(); //clear all files i.e. reset player.\r\n                CreateDB(); //create the DB again.\r\n            }\r\n        }\r\n```",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/427/comments",
    "author": "thecodrr",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2017-01-15T12:00:42Z",
        "body": "Hi @theweavrs, seams you are open datafile with an non-closed instance in memory. You are opening your datafile in exclusive mode, so you can't open another instance (file are in exclusive mode)"
      },
      {
        "user": "thecodrr",
        "created_at": "2017-01-15T17:39:53Z",
        "body": "@mbdavid So what do you suggest?"
      },
      {
        "user": "mbdavid",
        "created_at": "2017-01-15T17:49:37Z",
        "body": "If you want use exclusive mode you can always create a new instance of LiteDatabase. You need store your instance in a static variable, so you can re-using without open new."
      },
      {
        "user": "jeeshenlee",
        "created_at": "2020-10-29T06:08:31Z",
        "body": "Try to add \";connection=shared\" to your connection string. It works for me."
      }
    ]
  },
  {
    "number": 425,
    "title": "Question - multi-thread performance",
    "created_at": "2017-01-12T08:41:00Z",
    "closed_at": "2017-01-15T18:28:57Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/425",
    "body": "Currently, my project is multi-process where each process is single threaded. On each collection, there is always one writer but there may be several reader processes. I create a separate LiteDatabase instance for each collection in each process, however, I know that LiteDatabase is designed to be shared amongst threads.\r\n\r\nSo my question is ...\r\n\r\nIf I were switch my project design so that readers were combined into one multi-threaded process (rather than separate processes) which shared a common LiteDatabase instance, would there be a signficant performance benefit?\r\n\r\n(Note that the writer process would remain a separate process writing periodically to the collection, at the same time as the readers were acessing it.)\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/425/comments",
    "author": "kuiperzone",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2017-01-15T12:24:53Z",
        "body": "Hi @kuiperzone,\r\n\r\nShared some instance for all your readers are better solution. All threads using same instance will be consume same pages in cache, so will avoid all disk reading process for same page. To qualify how much better depends a lot of you use. "
      },
      {
        "user": "kuiperzone",
        "created_at": "2017-01-15T13:39:34Z",
        "body": "Thanks that helps. Now I know it's probably worth doing. :)"
      }
    ]
  },
  {
    "number": 412,
    "title": "[Question] Key value mode?",
    "created_at": "2017-01-03T18:35:06Z",
    "closed_at": "2017-01-10T17:16:41Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/412",
    "body": "What's the most high-performance way to use LiteDB as a Key-Value store? I would like something similar to the Key value store of Redis, but I still want to be using LiteDB.\r\n\r\nI would like to know the most efficient and fastest way to store extremely large key value lookup tables (A `Dictionary` would not suffice, as the datasets are extremely large). I cannot load the entire table into memory, but I want to use LiteDB to access in a key-value way.\r\n\r\nThanks",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/412/comments",
    "author": "nictaylr",
    "comments": [
      {
        "user": "henon",
        "created_at": "2017-01-03T22:25:14Z",
        "body": "I would suggest using a Collection<BsonDocument> and store BsonDocuments where in doc[\"_id\"] you assign your key and doc[\"value\"] you store your value. May mbdavid correct me if there is a better way."
      },
      {
        "user": "ghost",
        "created_at": "2017-01-03T22:26:10Z",
        "body": "@mbdavid ?"
      },
      {
        "user": "mbdavid",
        "created_at": "2017-01-03T23:36:05Z",
        "body": "Hi @nictaylr, to help you I need to know:\r\n\r\n- What is you key? An string? Can be any other (like GUID)?\r\n- How long is each value? More than 1 Mb\r\n- Do you have massive deletes/updates?\r\n- Your inserts are in batch or one-by-one?\r\n- Is your app single/multi thread? single/multi process?"
      },
      {
        "user": "nictaylr",
        "created_at": "2017-01-04T07:15:58Z",
        "body": "@mbdavid \r\n- Key is a `string` for now.\r\n- Values will likely be over 1MB\r\n- Massive? If you mean large numbers of delete/updates, **yes**\r\n- Batch inserts (Insert thousands of values at a time)\r\n- Multi threaded, single process, uses a thread pool. (should I use ACID transactions?\r\n\r\nThanks"
      },
      {
        "user": "mbdavid",
        "created_at": "2017-01-04T09:11:47Z",
        "body": "Using LiteDB, if your document (value) are over than 1Mb you must use FileStorage.\r\n\r\nBut you will have same problems with this option: you will need serialize your class by your own, insert/update/delete are made in chuncks (no transaction).\r\n\r\nAnother way is change document size const in your forked version. Than you can change max document size and still using a simple collection.\r\nYou can use batch insertrs, but if each document use more than 1Mb your process will consume a lot of memory. All changes (data/index pages) stay in a Dictionary, in memory, during all transaction/batch. Only when write this pages will be clear.\r\nIf you want speed, disable journal\r\nIn you particular use, I beleave that is better to keep one instance of LiteDatabase per thread. But keep open this instance and not inside a small `using` statments. Each open/close instance will be open/close datafile (the slowest part of LiteDB)\r\n\r\nThis is the fast way using LiteDB. But is LiteDB the best solution for you? I really don't know. Store large documents are not an easy job. Consume a lot of memory."
      },
      {
        "user": "henon",
        "created_at": "2017-01-04T12:08:51Z",
        "body": "@mbdavid: and just for completeness sake, if you had small values?"
      },
      {
        "user": "mbdavid",
        "created_at": "2017-01-04T15:25:36Z",
        "body": "@henon, basicaly my description was to \"normal\" documents size (less than 2000 bytes). More than this, LiteDB will use \"extend\" pages that works fine but is not best solution (in speed).\r\n\r\nBig documents, more than 1Mb (in my first LiteDB version was 256kb!!) I do not recommend to use. It´s because each document will consume a lot of memory to read/write (any change on document needs write all document again). If you document is too big maybe it´s better redesign you model."
      },
      {
        "user": "nphamvn",
        "created_at": "2021-12-03T04:50:49Z",
        "body": "Where can I have a sample of use LiteDB as a Key-Value store, please? My value is very small, just some text."
      }
    ]
  },
  {
    "number": 408,
    "title": "v3.0.0 - beta3 - Question regarding the Fluent Mapper with Index",
    "created_at": "2017-01-01T20:15:28Z",
    "closed_at": "2017-01-01T21:03:06Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/408",
    "body": "I'm quite new to LiteDB and this seems kinda strange to me.\r\n\r\nWhy does the Fluent Mapper throw a `ArgumentNullException` here:\r\n```\r\nBsonMapper.Global.Entity<TesBase>()\r\n\t.Id(x => x.Id)\r\n\t.Index(x => x.Value)\r\n\t.Index(x => x.Embed.Import) // <= Problematic line\r\n\t;\r\n```\r\n\r\nwhile this works perfectly:\r\n```\r\nvar audioLogEntries = db.GetCollection<TesBase>(\"base\");\r\naudioLogEntries.EnsureIndex(x => x.Embed.Import);\r\n```\r\n\r\nUsed classes:\r\n```\r\nclass TesBase\r\n{\r\n\tpublic int Id { get; set; }\r\n\tpublic string Value { get; set; }\r\n\r\n\tpublic TesEmbed Embed { get; set; } = new TesEmbed();\r\n}\r\n\r\nclass TesEmbed\r\n{\r\n\tpublic string Import { get; set; }\r\n}\r\n```",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/408/comments",
    "author": "Splamy",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2017-01-01T20:40:13Z",
        "body": "It's happend because you are modeling `TesBase` and not `TesEmbeded`. When you write `x.Embeded.Import` mapper try find `Import` property in `TesBase` and not found.\r\n\r\nIn this case, you must use `EnsureIndex` or do nothing - indexes are auto-created when you run any query. Explicit indexes are useful only when you want create unique index (default index are not unique) or a virtual field, like `.Index(\"myindex\", (item) => item.FuncOverDocumnet());`"
      },
      {
        "user": "Splamy",
        "created_at": "2017-01-01T21:03:06Z",
        "body": "Ah, thank you!"
      }
    ]
  },
  {
    "number": 407,
    "title": "v3.0.0 - Latest - Bug with Query.LT() and Query.LTE()",
    "created_at": "2016-12-31T19:35:41Z",
    "closed_at": "2017-01-10T17:16:41Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/407",
    "body": "Find call with Query.LT() and Query.LTE() are not working for me (whereas GT and GTE work fine).\r\n\r\nHere's what I'm doing:\r\n\r\nI create a collection and insert 3 documents with _id values: 10, 20, 30\r\n\r\nI call:\r\n\r\n`return _liteCollection.FindOne(Query.LTE(\"_id\", 22));`\r\n\r\nHowever, **it returns document with ID of 10 (not 20).**\r\n\r\nThe same problem occurs with Find() as well as FindOne().",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/407/comments",
    "author": "kuiperzone",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2016-12-31T21:02:17Z",
        "body": "Using FindOne are right the result, but using Find must return both. Are not returning?"
      },
      {
        "user": "kuiperzone",
        "created_at": "2016-12-31T21:10:17Z",
        "body": "With Find(), I was only interested in the first value on the iterator. The first one is incorrect, it is the same value returned by FindOne(). I simply tried using Find() because FindOne() wasn't giving the correct one. So it seems the same problem applies to both.\r\n"
      },
      {
        "user": "mbdavid",
        "created_at": "2016-12-31T21:47:40Z",
        "body": "By default, query runs in asc order. So, 10 is first value found that are less than 22. If you want 20 as first value, try use desc irder in Query"
      },
      {
        "user": "kuiperzone",
        "created_at": "2017-01-01T05:03:22Z",
        "body": "I'm wondering about the usefulness in the way you describe that LTE and LT works. What I mean is, if LTE run in ascending order and simply returns the first value is finds, then surely to is always equivalent to simply returning the first value in the entire collection?\r\n\r\nNot sure I understand, but in any case, yes, I want to search backward and find the first value LTE and LT a given id value in descending order. I've tried the following, but it doesn't seem to work either:\r\n\r\n```\r\nreturn _liteCollection.FindOne(Query.And(\r\n                        Query.All(\"_id\", Query.Descending), Query.LTE(\"_id\", id)));\r\n```\r\n\r\n**I sure could do with an example here of how to do it?**"
      },
      {
        "user": "mbdavid",
        "created_at": "2017-01-01T12:12:52Z",
        "body": "Ops, sorry, I thought there was such functionality. LT/E works only in Asc order (as GT/E too). \r\n\r\n```\r\nforeach (var node in indexer.FindAll(index, Query.Ascending))\r\n{\r\n\tvar diff = node.Key.CompareTo(_value);\r\n\r\n\tif (diff == 1 || (!_equals && diff == 0)) break;\r\n\r\n\tif (node.IsHeadTail(index)) yield break;\r\n\r\n\tyield return node;\r\n}\r\n```\r\n\r\n"
      },
      {
        "user": "kuiperzone",
        "created_at": "2017-01-01T12:21:34Z",
        "body": "OK. Thanks for getting back to me.\r\n\r\nBut I'm wondering what useful purpose it could possibly serve?\r\n\r\nAs I say, if LT/E runs in ascending order and simply returns the first value that is LT/E to the id, then surely the result **will always be** the first value in the collection.\r\n"
      },
      {
        "user": "kuiperzone",
        "created_at": "2017-01-01T12:28:52Z",
        "body": "In other words:\r\n\r\n`_liteCollection.FindOne(Query.LTE(\"_id\", ANY_VALUE)); = _liteCollection.FindById(_liteCollection.Min())`"
      },
      {
        "user": "mbdavid",
        "created_at": "2017-01-01T12:58:02Z",
        "body": "Yes, it's the same result. But only because FindOne is just a FirstOrDefault from Find. I will do some tests in mongodb to see how they works on this."
      },
      {
        "user": "mbdavid",
        "created_at": "2017-01-01T16:45:07Z",
        "body": "Here some tests made with mongodb\r\n\r\n```\r\n> db.col1.insert ({\"_id\":10})\r\nWriteResult({ \"nInserted\" : 1 })\r\n> db.col1.insert ({\"_id\":20})\r\nWriteResult({ \"nInserted\" : 1 })\r\n> db.col1.insert ({\"_id\":30})\r\nWriteResult({ \"nInserted\" : 1 })\r\n> db.col1.find ({_id:{$lt:22}})\r\n{ \"_id\" : 10 }\r\n{ \"_id\" : 20 }\r\n> db.col1.findOne ({_id:{$lt:22}})\r\n{ \"_id\" : 10 }\r\n> db.col1.find ({_id:{$lt:22}}).sort({_id:-1})\r\n{ \"_id\" : 20 }\r\n{ \"_id\" : 10 }\r\n```\r\n\r\nMongo use same logic, but has sort options. In LiteDB you must use OrderBy LINQ.\r\n"
      },
      {
        "user": "kuiperzone",
        "created_at": "2017-01-01T16:52:33Z",
        "body": "```\r\n> db.col1.find ({_id:{$lt:22}})\r\n{ \"_id\" : 10 }\r\n{ \"_id\" : 20 }\r\n```\r\n\r\nAhh! I understand now. I see the use of LT/E, although it's not what I expected. Sorry, I'm not familiar with MongoDB -- LiteDB is my introduction to NoSQL.\r\n\r\nThank you for looking into it!\r\n"
      }
    ]
  },
  {
    "number": 397,
    "title": "[question] multiple small databases or one large database?",
    "created_at": "2016-12-25T03:21:58Z",
    "closed_at": "2017-01-15T12:39:48Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/397",
    "body": "Is it recommended to use **multiple small databases or one large database**?\r\nEither way, I will be storing many (hundreds to thousands) of `LiteCollection` sized from 100MB to 1GB.\r\n\r\nWhich way will get me optimal performance, and is LiteDB affected in any way by the filesize?\r\n\r\nFinally, what is the reason for recommending using a different database for each user? I thought that I could just store users and references to their data in a single database, which will be easier than setting up a different database for each user.",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/397/comments",
    "author": "ghost",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2016-12-25T14:40:20Z",
        "body": "Hi @0xFireball,\r\n\r\nI prefer multiple small databases. But it's just me, not because LiteDB. \"Small\" files are simple to copy, deploy, backup, delete, .... \r\n\r\nLiteDB has no problems with big collections, it's quite fast. Of course, some operation can be slower when you have big collections, like `create index` or `update all`. It's very difficult because you will need change a lot of pages in memory before write on disk. It's lock you file during this process. But if you basic operation will be insert/update one/delete one/querying... no problems. LiteDB uses skip lists to index data, it's O(log n) complexity (100.000 or 1.000.000 documets are only 1 step between)\r\n\r\nI recommended \"one database per user\" because I write LiteDB for that 😄. I was looking for an embedded database to write an account web application where each user had an database. Each user can encrypt your own datafile. Each user can read/write only your own data. When user unsubscribe, it's just delete 1 file in my server. It's all user data in a \"self contained\" single file. To setup was easy: each user (email) are hashed using SHA1 and it's datafile name.\r\n\r\nI didnt found a no-sql database for that, so, I wrote LiteDB..."
      },
      {
        "user": "sergiorykov",
        "created_at": "2016-12-25T14:52:49Z",
        "body": "@mbdavid Every file system has limitation on the number of files in folder where it's API is responsive enough. If you have 10000 users you will need to write a wrapper which will divide all those files on subfolders with several houndred files each.\r\n\r\nCan you describe in brief business context where it'll be really useful? Or add to wiki super-duper-happy-use cases as NancyFX has?\r\n\r\nActually we use LiteDB in one of our products and have **DB per Bounded Context** - it really simplified maintenance processes."
      },
      {
        "user": "mbdavid",
        "created_at": "2016-12-25T16:00:19Z",
        "body": "Yes, you need create many subfolders to store all datafiles. You can use some like this:\r\n\r\nUsername:  `user1`\r\nSHA1: `b3daa77b4c04a9551b8781d03191fe098f325e67`\r\nDatabase: `C:\\Storage\\b\\3\\b3daa77b4c04a9551b8781d03191fe098f325e67.db`\r\n\r\nIt's create 2 levels of folders based on first 2 chars from SHA1. Will have, at max, 36 folder with 36 subfolder each (1.296 folders). Using about 200 files per folder, you can have 260.000 users.\r\n\r\nOne database per user also are cool to limit disk size per user. You can create different plans with different storage sizes. Also, using per user datafile you will not have problems with write concurrency.\r\n"
      },
      {
        "user": "sergiorykov",
        "created_at": "2016-12-25T17:49:39Z",
        "body": "Thank you for clarification! "
      },
      {
        "user": "rkanani108",
        "created_at": "2020-10-15T03:50:12Z",
        "body": "@mbdavid / @sergiorykov \r\nIs there any sample code available that show how to create & manage database for individual users?"
      }
    ]
  },
  {
    "number": 381,
    "title": "How to implement nested Include in beta 3",
    "created_at": "2016-12-16T19:14:02Z",
    "closed_at": "2016-12-19T13:33:01Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/381",
    "body": "Hi,\r\nTo my understanding you implemented some way to nest multiple level of include (according to past issues). \r\nI have this situation : \r\n\r\n```\r\npublic ClassA {\r\n    int id {get; set;}\r\n    List<ClassB> myB {get; set;}\r\n}\r\n\r\npublic ClassB {\r\n    int idB {get; set;}\r\n    List<ClassC> myC {get; set;}\r\n}\r\n\r\npublic ClassC {\r\n   int idC  {get; set;}\r\n   ClassD myD  {get; set;}\r\n}\r\n\r\npublic ClassD {\r\n    int idD  {get; set;}\r\n    string name  {get; set;}\r\n}\r\n```\r\n\r\nI need to select all elements in classA but i need to get the name stored in ClassD. How would I do that?",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/381/comments",
    "author": "dayus20",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2016-12-16T22:14:04Z",
        "body": "I'm still working on this syntax on dev branch;\r\n\r\n`col.Include(x => x.myB[0].myC[0].myD)`\r\n"
      },
      {
        "user": "dayus20",
        "created_at": "2016-12-19T13:33:01Z",
        "body": "ok, thanks for the info. For now i'm using for loop to get my data."
      },
      {
        "user": "freezy",
        "created_at": "2017-04-03T14:28:31Z",
        "body": "Does `col.Include(\"myB.myC.myD\")` currently (3.1.0) work?"
      }
    ]
  },
  {
    "number": 377,
    "title": "Running insert on one thread and delete on another throws exception",
    "created_at": "2016-12-12T16:03:53Z",
    "closed_at": "2016-12-13T10:12:03Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/377",
    "body": "Hi David,\r\nI am not sure if I am using LiteDB correctly but I wanna use it as a simple persisted cache in my desktop .NET 4.5 windows service app. I will be adding records from one thread and then I will run another thread which will select all records and then process them in the application and then delete from the cache. I tried this scenario with LiteDB but I am getting random exceptions in different part of the code.\r\n\r\nThe exceptions are as follows and they are appearing randomly:\r\n\r\n1. Invalid transaction on top of stack\r\n2. Unable to cast object of type 'LiteDB.HeaderPage' to type 'LiteDB.CollectionPage'.\r\n3. This transaction is cancelled due to an aborted transaction\r\n4. Unable to cast object of type 'LiteDB.CollectionPage' to type 'LiteDB.HeaderPage'.\r\n\r\nHere is the example:\r\n``` \r\nusing System;\r\nusing System.Threading;\r\nusing System.Threading.Tasks;\r\nusing LiteDB;\r\n\r\nnamespace ConsoleApplication2\r\n{       // Create your POCO class\r\n    public class Customer\r\n    {\r\n        public int Id { get; set; }\r\n        public string Name { get; set; }\r\n        public string[] Phones { get; set; }\r\n        public bool IsActive { get; set; }\r\n    }\r\n\r\n    class Program\r\n    {\r\n        public static LiteDatabase _db;\r\n        static void Main(string[] args)\r\n        {\r\n            using (var db = new LiteDatabase(@\"C:\\Temp\\MyData.db\"))\r\n            {\r\n                // Get a collection (or create, if doesn't exist)\r\n                var col = db.GetCollection<Customer>(\"customers\");\r\n        \r\n                Task.Factory.StartNew(() =>\r\n                {\r\n                    while (true)\r\n                    {\r\n                        var customer = new Customer\r\n                        {\r\n                            Name = \"John Doe\",\r\n                            Phones = new string[] { \"8000-0000\", \"9000-0000\" },\r\n                            IsActive = true\r\n                        };\r\n\r\n                        // Insert new customer document (Id will be auto-incremented)\r\n                        col.Insert(customer);\r\n                    }\r\n                });\r\n\r\n\r\n                Task.Factory.StartNew(() =>\r\n                {\r\n                    while (true)\r\n                    {\r\n                        var results = col.FindAll();\r\n\r\n                        foreach (var customer in results)\r\n                        {\r\n                            col.Delete(customer.Id);\r\n                        }\r\n                    }\r\n                });\r\n\r\n\r\n                Thread.Sleep(TimeSpan.FromHours(1));\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nI guess I have some issue with the code or maybe I didnt understand purpose of LiteDb so please let me know how to fix it.\r\nThanks,\r\nJan\r\n\r\n",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/377/comments",
    "author": "janstafa",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2016-12-12T22:40:24Z",
        "body": "Hi, LiteDB v1/v2 are not safe thread. If you want use you must lock statment (read and write operations).\r\n\r\nCurrent v3-beta supports multi-thread and my dev branch will support multi-process too."
      },
      {
        "user": "janstafa",
        "created_at": "2016-12-13T10:12:03Z",
        "body": "Hi David,\r\nthanks for the reply. I didnt realise that I am using version 2. I will get version 3 and test it.\r\nThanks,\r\nJan"
      }
    ]
  },
  {
    "number": 375,
    "title": "Question - Is v3 backward compatible with v2 data?",
    "created_at": "2016-12-11T10:44:45Z",
    "closed_at": "2016-12-15T17:57:12Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/375",
    "body": "Is v3 backward compatible with v2 data?\r\n\r\nIf I use v2 initially, could I upgrade to v3 later and will it read the data files generated by v2 seemlessly? Or would there be a migration proceedure?",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/375/comments",
    "author": "kuiperzone",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2016-12-11T11:10:46Z",
        "body": "LiteDB uses a new datafile structure, V7. So, will be not compatible with any older version.\r\n\r\nBut, I wrote some migration. It's possible call `LiteEngine.Upgrade` do convert V6 to V7 datafile or use `upgrade=true` on connection string"
      },
      {
        "user": "kuiperzone",
        "created_at": "2016-12-11T11:15:33Z",
        "body": "Good stuff!"
      }
    ]
  },
  {
    "number": 366,
    "title": "Insert with unique int Id in multithread app",
    "created_at": "2016-12-07T10:02:00Z",
    "closed_at": "2016-12-07T15:18:55Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/366",
    "body": "My code. Is Ok this not direct way ? (Simple and work, but how can I do it right?)\r\n```C#\r\n public void InsertDoc(Doc doc)\r\n  {\r\n    using (var db = new LiteDatabase(m_fn))\r\n    {\r\n      var docs = db.GetCollection<Doc>(DALNames.docs);\r\n      using (db.BeginTrans())\r\n      {\r\n        doc.Id = docs.Max(x => x.Id) + 1;\r\n        doc.IID = doc.Id;\r\n        docs.Insert(doc);\r\n      }\r\n      this.docs = docs;\r\n    }\r\n    if (this.docs.Find(x => x.Id == doc.Id).ToList().Count == 0)\r\n    {\r\n      System.Threading.Thread.Sleep(doc.Id % 5);\r\n      InsertDoc(doc);\r\n    }\r\n  }\r\n```",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/366/comments",
    "author": "qart2003",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2016-12-07T11:30:03Z",
        "body": "Current version still not supporting multithread to auto-increment Id in `int` datatype. But I'm implementing another way to get next id. This will be available in next release.\r\n\r\n```c#\r\nmapper.RegisterAutoId<int>(\r\n    v => v == 0,\r\n    (db, col) =>\r\n    {\r\n        var seq = \"_sequence\";\r\n        db.BeginTrans();\r\n        var next = 0;\r\n        try\r\n        {\r\n            var current = db.Find(seq, Query.EQ(\"_id\", col)).FirstOrDefault();\r\n\r\n            if (current == null)\r\n            {\r\n                db.Insert(seq, new BsonDocument { { \"_id\", col }, { \"value\", 1 } });\r\n                next = 1;\r\n            }\r\n            else\r\n            {\r\n                next = current[\"value\"] = current[\"value\"].AsInt32 + 1;\r\n                db.Update(seq, current);\r\n            }\r\n\r\n            db.Commit();\r\n        }\r\n        catch (Exception)\r\n        {\r\n            db.Rollback();\r\n            throw;\r\n        }\r\n\r\n        return next;\r\n    }\r\n);\r\n```"
      },
      {
        "user": "qart2003",
        "created_at": "2016-12-07T12:54:14Z",
        "body": "Thanks. I got 3.0 beta. What it mean threadsafe? My around are 150 users in internal workflow of company.\r\nProbably I should using ReaderWriterLockSlim for every crud operation or no? (with 3.0 version)"
      },
      {
        "user": "mbdavid",
        "created_at": "2016-12-07T13:22:49Z",
        "body": "Hi @qart2003, in v3 you can share same LiteDatabase instance across threads (no process). LiteDB use ReadWriterLockSlim to control lock access. Take a look in this issue thread #332 "
      },
      {
        "user": "qart2003",
        "created_at": "2016-12-07T15:01:57Z",
        "body": "Thanks, it is great"
      },
      {
        "user": "qart2003",
        "created_at": "2016-12-08T10:02:37Z",
        "body": "Hi @mbdavid I placed in bin directory of small web app (phonebook of workers or company) dll v3.0 and got halt site. I thinking it means some errors are present in LiteDB v3.0. I reviewed error directory it has Application_error Exception in html format but not found something useful about LiteDB. (Only simple code with read collection and show it)"
      }
    ]
  },
  {
    "number": 365,
    "title": "last_inserted_id()",
    "created_at": "2016-12-07T04:16:14Z",
    "closed_at": "2017-01-15T12:39:48Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/365",
    "body": "How can i get the last inserted id? ",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/365/comments",
    "author": "shai-benshimol",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2016-12-07T11:13:25Z",
        "body": "You can get from `Insert` method, like:\r\n\r\n```\r\nvar id = col.Insert(new Customer { ... });\r\n```\r\n\r\nor from document\r\n\r\n```\r\nvar cust = new Customer { .... }\r\ncol.Insert(col);\r\nConsole.Log(col.Id);\r\n```\r\n"
      }
    ]
  },
  {
    "number": 358,
    "title": "Maximum collection size?",
    "created_at": "2016-12-04T05:09:29Z",
    "closed_at": "2016-12-04T15:49:12Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/358",
    "body": "LiteDB looks great, although I'm slightly concerned about the 2GB file size limit in terms of future scalability for my application.\r\n\r\nAm I correct in thinking that the maximum collection size on disk will be limited to 2GB? Are there any long term plans to extend this? Or is it hard limit for the foreseeable future?\r\n\r\nCheers",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/358/comments",
    "author": "kuiperzone",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2016-12-04T11:18:08Z",
        "body": "Hi @kuiperzone, 2GB file size limit is \"per file in FileStorage\" not per \"datafile\". Each physical datafile supports UInt.MaxValue * PageSize (4096) =~16 TB"
      },
      {
        "user": "kuiperzone",
        "created_at": "2016-12-04T11:25:15Z",
        "body": "Excellent. Thanks for clarifying."
      }
    ]
  },
  {
    "number": 344,
    "title": "v3 DropCollection?",
    "created_at": "2016-11-21T09:59:59Z",
    "closed_at": "2016-11-21T12:33:13Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/344",
    "body": "Hello,\r\n\r\nhow to drop a collection in v3?\r\n\r\nv2 had LiteDatabase.DropCollection but to me it looks lie that is gone?\r\n\r\nRegards,\r\n  Dirk",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/344/comments",
    "author": "gmwilhelm",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2016-11-21T10:53:25Z",
        "body": "I will back thsi method again to LiteDatabase. You can use db.Engine.DropCollection"
      },
      {
        "user": "gmwilhelm",
        "created_at": "2016-11-21T10:58:12Z",
        "body": "Thanks for the answer.\r\n\r\nCan you please explain what the difference is between LiteDatabase and LiteEngine?\r\n\r\nWhat is the preferred usage of both?\r\n\r\nRegards,\r\n  Dirk\r\n"
      },
      {
        "user": "mbdavid",
        "created_at": "2016-11-21T12:10:47Z",
        "body": "Hi @gmwilhelm, LiteEngine is like \"the server side\" of LiteDB. It´s responsable with all low layer data access. LiteDatabase use a instance of LiteEngine to access all method plus add all \"mapper\" things: Serialize/Deserialize, Cross References, AutoId, Linq queries and all this things. So, when you use LiteDatase, you are just using LiteEngine with support to POCO classes (LiteEngine works only with BsonDocuments)\r\n\r\nI will add again this operations in LiteDatabase just to be compatible with v2 version, but basicly will call the same method from LiteEngine. LiteEngine is not new, exists in v2 but aren't public to user. Now, in v3, if you want works only with LiteEngine it´s possible.\r\n\r\nI will try explain better in new wiki update."
      }
    ]
  },
  {
    "number": 338,
    "title": "Database file compatibility",
    "created_at": "2016-11-14T12:36:56Z",
    "closed_at": "2016-11-15T18:45:02Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/338",
    "body": "I have one question: Are database files (created with the same version of LiteDB) supposed to be binary compatible? Or in other words: If I create a db with a normal windows desktop application, should this db be usable by a UWP app using LiteDB.Core?\r\n\r\nI was assuming this somehow, but first experiments showed this not to be the case. Since I couldn't finde a statement about this in the documentation, I now ask this question here.\r\n\r\nThanks for the great work.\r\n\r\nCheers, Stefan",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/338/comments",
    "author": "Friendship7",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2016-11-14T15:44:05Z",
        "body": "Hi @Friendship7,\n\nAssuming that you are using v2.x version and no database encryption, the answer is yes, must be compatible. Almost all source are the same, including file format. If you are using encryption, AES has different implementations in each platform.\nIf you are creating a multiplatform app, consider use only LiteDB.Core which are compatible with all platforms (LiteDB.Core.dll are PCL library)\n\nIn next v3 there is no more LiteDB.Core and LiteDB will be netstandard1.4 (no more multi-platform separate dll). \n"
      },
      {
        "user": "Friendship7",
        "created_at": "2016-11-15T18:45:02Z",
        "body": "Thanks for the fast reply. It's good to know that the db files should be usable on all platforms. \n"
      }
    ]
  },
  {
    "number": 336,
    "title": "Import collection to another db",
    "created_at": "2016-11-13T14:39:00Z",
    "closed_at": "2016-11-20T11:02:50Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/336",
    "body": "I need to import collection from db1 and export to db2..\r\n\r\nWhat is the best practice to do that?",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/336/comments",
    "author": "shai-benshimol",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2016-11-13T19:19:07Z",
        "body": "Just find/insert one for other, like\n\n```\nusing(var db1 = new LiteDatabase(...))\nusing(var db2 = new LiteDatabase(...))\n{\n    var from = db1.GetCollection(\"col\");\n    var to = db2.GetCollection(\"col\");\n\n    to.Insert(from.FindAll());\n}\n```\n"
      }
    ]
  },
  {
    "number": 329,
    "title": "Help wanted about searching a substring in an array of strings",
    "created_at": "2016-10-31T09:53:13Z",
    "closed_at": "2016-10-31T15:50:56Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/329",
    "body": "Hi,\r\n\r\nI could not find any answer to this. Let's say we have this data structure:\r\n```\r\npublic class Data\r\n{\r\n  public Data() { }\r\n\r\n  [DataMember(Name = \"Id\")]\r\n  public string Id { get; set; }\r\n\r\n  [DataMember(Name = \"Comments\")]\r\n  public List<string> Comments { get; set; }\r\n}\r\n```\r\n\r\nWhen I want to find a substring in `Id`, I do:\r\n```\r\nvar collection = database.GetCollection<Data>(\"myCollection\");\r\nvar results = collection.Find(Query.Contains(\"_id\", \"my substring\"));\r\n```\r\n\r\nBut I cannot do the same in `Comments`. The following request returns nothing:\r\n```\r\nvar collection = database.GetCollection<Data>(\"myCollection\");\r\nvar results = collection.Find(Query.Contains(\"Comments\", \"my substring\"));\r\n```\r\n\r\nHow to search inside an array of strings?",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/329/comments",
    "author": "real-felix",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2016-10-31T11:47:14Z",
        "body": "Hi @Boiethios, in current v2 there is not index in arrays (named Multi Key Index). So, to this query works you need full collection scan: some like this:\n\n```\ncollection.FindAll().Where(x => x.Comments.Any(z => z.Contains(\"substring\"));\n```\n\nIn v3 (`dev` branch under dev) multi key index was implemented. So, you can do full index scan (not best solution, but much better than full scan solution).\n\n```\ncollection.Find(Query.Contains(\"Comments\", \"substring\"));\n// there is no Linq expression support yet\n```\n\nBut, if you will have lots of documents that you need do this kind of search, I recommend to use \"full text search\". It's a special king of index used for this situations. LiteDB doest implement yet (I try once in `fts` branch, but did do sequence). You can take a look on Lucene.NET, a super index library.\n"
      },
      {
        "user": "real-felix",
        "created_at": "2016-10-31T15:50:56Z",
        "body": "Thank you for your help. The collection is small so I can do a full scan without problem. You have done a great job btw.\n"
      }
    ]
  },
  {
    "number": 318,
    "title": "LiteCollection.Delete(Query) does not match id",
    "created_at": "2016-10-10T09:43:12Z",
    "closed_at": "2016-11-20T21:45:36Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/318",
    "body": "I expected the following two lines to do basically the same thing, yet LiteCollection.Delete(Query) does not delete anything and  LiteCollection.Delete(BsonValue) does\n\ncollection.Delete(Query.EQ(\"Id\", @event.Id)); //nothing gets deleted\ncollection.Delete(@event.Id); //one item deleted, as expected\n\nEvent.Id is a Guid, event was inserted like this:\n\ncollection.Insert(@event);\ncollection.EnsureIndex(e => e.Id, new IndexOptions() { Unique = true });\n",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/318/comments",
    "author": "RytisLT",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2016-10-10T12:57:01Z",
        "body": "Hi @CaptBrick, Id is a special field. So, when LiteDB convert your class to Document, your Id field (or any field marked as BsonId) use `_id`. In this case, you can use:\n\n`collection.Delete(Query.EQ(\"_id\", 123));`\n"
      },
      {
        "user": "nerai",
        "created_at": "2016-10-12T02:00:15Z",
        "body": "I've tripped over this behavior myself in the past. I was able to solve it rather quickly, but found it pretty confusing. I believe it would be sensible to make `Id` less of a special case, and let it behave just like other fields.\n\nThis would also be a good time to get rid of the case that a column which is not the primary key happens to be named `_id`, which seems like a problem. Sorry that I have not checked this scenario myself -- I don't have my equipment ready at the moment. Either way, it is quite confusing and hard to tell what behavior should be expected. Example:\n\n```\nclass Foo {\n    [BsonId] public int x {get;set;}\n    [BsonIndex] public int _id {get;set;}\n}\n```\n"
      },
      {
        "user": "mbdavid",
        "created_at": "2016-10-13T13:12:38Z",
        "body": "@nerai, I believe in this case LiteDB will throw an duplicate key exception (in Dictionary) or override you x property with _id property (as _id field). I used `_id` to be more MongoDB like. Primary key is a special unique index. I need this index to update/delete any document.\n"
      },
      {
        "user": "RytisLT",
        "created_at": "2016-10-14T08:58:42Z",
        "body": "@nerai +1 It is really confusing \n"
      }
    ]
  },
  {
    "number": 313,
    "title": "Question: Does LiteDb loads everything in memory?",
    "created_at": "2016-10-02T04:02:12Z",
    "closed_at": "2016-10-19T16:48:43Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/313",
    "body": "I couldn't find a clear answer to whether LiteDb loads everything at once.\n\nI'm building a game which needs a database for storing game state data, which will be a big database.\nIs LiteDb suited for this need?\n\nThanks\n",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/313/comments",
    "author": "raizam",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2016-10-02T12:49:31Z",
        "body": "Hi @raizam, No. LiteDB is not a plain json file that needs load everything to memory. Documents are storaged in fragmented data pages (each page has 4096 bytes). Every page loaded are keep in memory until reach 5000 pages, when a recycle process clear pages.\n\nAnd yes, you can use for gaming. LiteDB keeps working in 3.5 for Unity support. If you need better performance, try not work with big documents. Fragment you document in several collections and load gradual only when you need.\n"
      },
      {
        "user": "raizam",
        "created_at": "2016-10-03T10:06:48Z",
        "body": "Thanks for the answer, this is clear to me.\nI was wondering if LiteDb is more like a cache, just like Redis is.\n\nI'll give a try then\n"
      }
    ]
  },
  {
    "number": 309,
    "title": "How to include properties of collection items?",
    "created_at": "2016-09-24T16:43:01Z",
    "closed_at": "2016-11-20T21:48:14Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/309",
    "body": "I try to implement an object hierarchy where `class A` has a property of type `List<B>`, and `class B` has a property of type `class C`. I also add a `DbRef` from `B` to `C`. When I try to query a collection of type `class A` I cannot create a `LiteCollection<A>` that somehow includes the \"B.C\" values. The only workaround I found is querying the `class A` instances first and loading all `class C` values manually after that. I do not know if this is really not possible or I just did not find the solution.\n\n``` C#\n// Class hierarchy\nclass A\n{\n    public int Id { get; set; }\n    public List<B> B { get; set; }\n}\nclass B\n{\n    public int Id { get; set; }\n    public C C { get; set; }\n}\nclass C\n{\n    public int Id { get; set; }\n    public string Value { get; set; }\n}\n\n// Add DbRef from B to C\nBsonMapper.Global.Entity<B>().DbRef(x => x.C, \"c\");\n\n// Problem: did not find a way to include B.C in collectionA\nvar collectionA = db.GetCollection<A>(\"a\");\nvar collectionC = db.GetCollection<C>(\"C\");\n\n// Workaround: load b.C values manually\nforeach (var a in collectionA.FindAll())\n{\n    foreach (var b in a.B)\n    {\n        b.C = collectionC.FindById(b.C.Id);\n    }\n}\n```\n",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/309/comments",
    "author": "gergokissz",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2016-09-24T16:54:58Z",
        "body": "Hi @kisc85, `DbRef` support only basic document references. In your case, there is no built-in solution with `DbRef`. I'm writing next version and I will review this LiteDB dbrefs because it's a cool feature :) I will try implement this \"in list\" reference and deep include too like in #149 \n"
      },
      {
        "user": "gergokissz",
        "created_at": "2016-09-24T17:24:39Z",
        "body": "Hi @mbdavid! Thanks for the quick answer and congratulations to the LiteDB project! :)\n"
      }
    ]
  },
  {
    "number": 308,
    "title": ".ToString() in  Lambda Query for Collection.Find()",
    "created_at": "2016-09-23T17:55:59Z",
    "closed_at": "2016-09-24T12:47:45Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/308",
    "body": "I have a collection items when i query using a lambda expression with a .ToString() it cause an exception. For example:\n`var y = items.Find(x => x.Year.ToString() == \"1993\");   // Year is int`\nThe exception is : **\"Property 'Year.ToString(' was not mapped into BsonDocument\"**\n",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/308/comments",
    "author": "MoamenMohamed",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2016-09-24T12:31:27Z",
        "body": "Hi @MoamenMohamed, there is not index functions supports. If you want create an index based on a function returns, create a field like this:\n\n```\npublic string YearString { get { return this.Year.ToString(); } }\n```\n\nAnd than use as `items.Find(x => x.YearString == \"1993\")`\n"
      },
      {
        "user": "MoamenMohamed",
        "created_at": "2016-09-24T12:36:09Z",
        "body": "Thanks, that is exactly what i did.  \n"
      },
      {
        "user": "mbdavid",
        "created_at": "2016-09-24T12:39:26Z",
        "body": "Just to know, next version will support virtual function field in BsonMapper, some like this:\n\n`db.Entity<Customer>().Index(\"year-fn\", (b) => b.Year.ToString());`\n\nSo, you query will be: `items.Find(\"year-fn\", \"1993\")`\n"
      },
      {
        "user": "MoamenMohamed",
        "created_at": "2016-09-24T12:46:19Z",
        "body": "That is great, I really love using LiteDB.\n"
      }
    ]
  },
  {
    "number": 294,
    "title": "Xamarin ios integration build error",
    "created_at": "2016-09-02T05:54:23Z",
    "closed_at": "2016-09-06T12:52:52Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/294",
    "body": "Hi,\n\nI want to integrate LiteDB into Xamarin app containing ios & android platform. I have downloaded the source code of LiteDB and given reference of LiteDB.Core.dll into PCL library. However, when I build the source code for xamarin ios it gives below error: \n\n**Error :** \nFailed to resolve \"System.Int32 System.Runtime.InteropServices.Marshal::GetHRForException(System.Exception)\" reference from \"System.Runtime.InteropServices, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" \n\n**Configuration:**\nXamarin Version: 4.1.1.3\nXamarin iOs Version: 9.8.1.4\nLiteDB.Core Version: 2.0.2.0\niOS SDK Version : 9.2\n\n(Please note it working fine with android).\n",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/294/comments",
    "author": "romil-zealous",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2016-09-06T12:30:32Z",
        "body": "Hi @shahromil88, did you reference LiteDB.Core and specific LiteDB.Platform for iOS? LiteDB.Core is a same dll for all platforms, but need a specific LiteDB.Platform.dll that changes in each platform.\n"
      },
      {
        "user": "romil-zealous",
        "created_at": "2016-09-06T12:52:52Z",
        "body": "Hi @mbdavid, I think it is my mistake in assigning references to my project. It is working fine now.\n\nThank you for the prompt response.\n"
      }
    ]
  },
  {
    "number": 290,
    "title": "contains words",
    "created_at": "2016-08-29T11:52:32Z",
    "closed_at": "2016-11-20T11:52:49Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/290",
    "body": "Hii,\n\nI need query for searching words in description.\n",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/290/comments",
    "author": "shai-benshimol",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2016-08-30T00:17:28Z",
        "body": "Hi @shai-benshimol, if you need contains query, there is no index used. So, just do\n\n`col.FindAll().Where(x => x.Name.Contains(\"john\")).ToList()`\n"
      }
    ]
  },
  {
    "number": 276,
    "title": "No release note for 1.05 available via NuGet",
    "created_at": "2016-08-18T11:04:51Z",
    "closed_at": "2016-08-22T22:02:52Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/276",
    "body": "There is a 1.05 version available in NuGet but no release notes.\n\nWhat are the changes between 1.04 and 1.05 and are there any breaking changes?\n",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/276/comments",
    "author": "tjmoore",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2016-08-18T12:15:47Z",
        "body": "Hi @tjmoore, I forgot to make this release notes here in github. But 1.0.5 it´s just minor bugfixes from 1.0.4 and has no break changes\n"
      }
    ]
  },
  {
    "number": 275,
    "title": "LiteDB as in-process caching",
    "created_at": "2016-08-18T10:31:20Z",
    "closed_at": "2016-11-20T21:32:01Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/275",
    "body": "Hi @mbdavid,\nCan we use for in-process caching?. Can we use same instance across multiple threads for concurrent reads?.\n\nThanks,\nImran.\n",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/275/comments",
    "author": "toimransyed",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2016-08-18T12:17:52Z",
        "body": "For now, no. Current version of litefb are not thread safe, so you must open/close LiteDatabase instance. LiteDB supports concurrent open instances.\n\nI´m working on dev branch to complete change this: single instance supporting multi thread and no concurrent instances open same file. \n"
      },
      {
        "user": "henon",
        "created_at": "2016-08-18T13:23:52Z",
        "body": "Hey @mbdavid,\nAs it is now, it is very practical for multiple processes to share one db file. Are you going to leave this option or not?\n"
      },
      {
        "user": "mbdavid",
        "created_at": "2016-08-19T00:36:08Z",
        "body": "Hi @henon, that the idea. For now, LiteDB supports multi process access but no multi thread. Works fine but have a lot of problem with that: it's quite slow (open/close file all times), concurreny fails (corrupting datafile), no cache support....\nUsing a single instance database I will open once (in exclusive mode), no other instances can access (so, no corrupt datafile), use `lock` operations to multi thread support, support cached pages... it's will works more like a \"server based dbms\". And, if you don't wat use like this, can still using `using` statment and avoiding databased open.\n\nBut it's only in plans... I'm just writing my README.md to help me.\n"
      },
      {
        "user": "nerai",
        "created_at": "2016-08-22T19:37:54Z",
        "body": "Hi @mbdavid, just to make sure I've understood you correctly: Let's say I've got one process with two threads. Both threads create a new, private instance of LiteDatabase for themselves. Is that a supported scenario?\n"
      },
      {
        "user": "mbdavid",
        "created_at": "2016-08-22T22:02:28Z",
        "body": "Hi @nerai, current version support this way: One process, two thread, each thread open/close datafile using `using(...)` statment. Do not share LiteDatabase instance across multiple threads.\n\nIn next major version will be \"thread-safe\". One process, ONE single LiteDatabase instance, MANY threads using same LiteDatabase instance (this way is much more simple to controls over current implementation and make much more sense in local/mobile/desktop apps).\n"
      },
      {
        "user": "Workshop2",
        "created_at": "2016-08-23T19:42:26Z",
        "body": "@mbdavid when would this version be available?\n"
      },
      {
        "user": "mbdavid",
        "created_at": "2016-08-23T23:27:04Z",
        "body": "Hi @Workshop2, no plans yet. I need think about this before start coding. I organizing source code yet, to be more modular and be simple to mantain.\n"
      },
      {
        "user": "mbdavid",
        "created_at": "2016-11-20T21:32:01Z",
        "body": "Hi guys, new v3-beta was released. So now, my recomendation is use single-instance of LiteDatabase across threads. I will update documnetation in few weeks\n"
      }
    ]
  },
  {
    "number": 274,
    "title": "Error on insert in collection ",
    "created_at": "2016-08-15T22:35:25Z",
    "closed_at": "2016-11-20T21:30:43Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/274",
    "body": "Not is possible convert a object from type 'LiteDB.EmptyPage' on type 'LiteDB.HeaderPage'. \n",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/274/comments",
    "author": "AugustoDeveloper",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2016-08-18T12:19:08Z",
        "body": "This error occurs in a specific datafile? Is this datafile in same version of Litedb dll?\n"
      },
      {
        "user": "mbdavid",
        "created_at": "2016-11-20T21:30:43Z",
        "body": "This issue was resolved in v3-beta. Thanks\n"
      }
    ]
  },
  {
    "number": 273,
    "title": "Drop collection bug?",
    "created_at": "2016-08-15T12:52:35Z",
    "closed_at": "2016-08-22T21:57:31Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/273",
    "body": "Db file size remains the same Before and after i dropped collection\n",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/273/comments",
    "author": "shai-benshimol",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2016-08-15T12:56:06Z",
        "body": "Hi @shai-benshimol, It´s normal. All empty space will be reused in next insert documents. If you want reduce file size, use shrink() [this operation has a bug in current nuget version - use master branch source]\n"
      }
    ]
  },
  {
    "number": 271,
    "title": "query with order",
    "created_at": "2016-08-12T14:44:24Z",
    "closed_at": "2016-08-22T21:57:20Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/271",
    "body": "Hey, the documentation is really good but after having read it all I still wonder how to query  collections in a specific order efficiently. \nLimiting a query mostly only makes sense if you can specify the order. For instance I want to limit my query to get the first 100 docs or the last hundred of a collection according to a query. I can currently apply .OrderByDescending(x=>x.Id) on a query result but this would not be executed by the query engine, right?\n",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/271/comments",
    "author": "henon",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2016-08-12T14:51:21Z",
        "body": "When you query in a collection using an index, you are using an order (index order). So, this is used to limit/skip.\n\nLiteDB implements `skip list` indexes. So you query `Query.EQ(\"Age\", 12)` database will search using Age index, that are in order asc (or desc, if you want).\n"
      },
      {
        "user": "henon",
        "created_at": "2016-08-12T14:53:01Z",
        "body": "Thanks! I got it. \n"
      },
      {
        "user": "henon",
        "created_at": "2016-08-12T15:01:03Z",
        "body": "How do I configure the index order i.e. to Descending ?\n"
      },
      {
        "user": "mbdavid",
        "created_at": "2016-08-12T15:52:00Z",
        "body": "Query with Desc order only when all rows are selected:\n\n`Query.All(Query.Descending)` (desc by _id index)\n`Query.All(\"Name\", Query.Descending)` (desc by Name index)\n\nAll others cases are not supported (or even has no sense, like Equals)\n"
      },
      {
        "user": "henon",
        "created_at": "2016-08-12T19:26:00Z",
        "body": "Cool. Since this was not intuitive to me, I allowed myself to extend the docu on page Queries with the following example. Correct me if I am wrong.\n\n// find top 100 oldest persons aged between 20 and 30\nvar results = collection.Find(Query.And(Query.All(\"Age\", Query.Descending), Query.Between(\"Age\", 20, 30)), limit:100);\n"
      },
      {
        "user": "mbdavid",
        "created_at": "2016-08-22T21:57:18Z",
        "body": "Hi @henon, sorry for a long delay. This way not works. If you wants this order, you must OrderBy using linq.\n\n`collection.Find(Query.Between(\"Age\", 20, 30)).OrderBy(x => x.Age).Take(10);`\n\nThe \"hard\" query part are executed using index (finding all 20-30 yo). Linq will order and limit to 10.\n"
      },
      {
        "user": "henon",
        "created_at": "2016-08-25T04:55:06Z",
        "body": "sorry to open this up again, but I did try this out before I posted, so I am curious why you say it does not work. was I lucky and got the correct result? what is wrong with the way I built the query? I just want to understand.\n"
      },
      {
        "user": "mbdavid",
        "created_at": "2016-08-26T13:11:42Z",
        "body": "Hi @henon, you right. Your code is correct. Query.And use Except Linq operation. So, when you findAll using Age index, your NodeIndex returns in Age desc order.\n"
      }
    ]
  },
  {
    "number": 270,
    "title": "Why string end with \"\\r\\n\" be trimmed?",
    "created_at": "2016-08-12T05:23:48Z",
    "closed_at": "2016-08-12T14:01:17Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/270",
    "body": "I found this in a project.For 2 days, I can't find the problem.\nThe test code:\n\n```\np = new Person\n{\n    Name = \"张立\",\n    Age = 31,\n    Sex = 1,\n    Description = \"一个软件工程师\\r\\n\"\n};\n\nConsole.WriteLine(\"name:{0}\", p.Name);\nConsole.WriteLine(\"age:{0}\", p.Age);\nConsole.WriteLine(\"sex:{0}\", p.Sex);\nConsole.WriteLine(\"description:{0}\", p.Description);\n\nusing (var conn = new LiteDB.LiteDatabase(\"test3.db\"))\n{\n    var col = conn.GetCollection<Person>(\"p3\");\n    col.Insert(p);\n}\n\nusing (var conn = new LiteDB.LiteDatabase(\"test3.db\"))\n{\n    var col = conn.GetCollection<Person>(\"p3\");\n    var ps = col.FindAll();\n    foreach(var p1 in ps)\n    {\n        Console.WriteLine(\"name:{0}\", p1.Name);\n        Console.WriteLine(\"age:{0}\", p1.Age);\n        Console.WriteLine(\"sex:{0}\", p1.Sex);\n        Console.WriteLine(\"description:{0}\", p1.Description);\n    }\n}\n\nConsole.WriteLine(\"------------------------------------\");\n```\n",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/270/comments",
    "author": "lidanger",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2016-08-12T13:19:53Z",
        "body": "Hi @lidanger, It´s a default in BsonMapper. Try:\n\n`BsonMapper.Global.TrimWhitespace = false;`\n"
      },
      {
        "user": "lidanger",
        "created_at": "2016-08-12T14:01:17Z",
        "body": "all right\n"
      }
    ]
  },
  {
    "number": 252,
    "title": "Exception running example",
    "created_at": "2016-08-06T12:46:05Z",
    "closed_at": "2016-08-22T21:53:23Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/252",
    "body": "Hello all, \nIm facing some troubles runnig your simple example, when I reach the foreach loop\nCan you help me please?\n\n```\n  using (var db = new LiteDatabase(@\"C:\\Temp\\MyData.db\")) {\n    // Get a collection (or create, if doesn't exist)\n    var col = db.GetCollection<Customer>(\"customers\");\n\n    // Create your new customer instance\n    var customer = new Customer\n      {\n      Name = \"John Doe\",\n      Phones = new string[] { \"8000-0000\", \"9000-0000\" },\n      IsActive = true\n      };\n\n    // Insert new customer document (Id will be auto-incremented)\n    col.Insert(customer);\n\n    // Update a document inside a collection\n    customer.Name = \"Joana Doe\";\n\n    col.Update(customer);\n\n    // Index document using document Name property\n    col.EnsureIndex(x => x.Name);\n\n    // Use LINQ to query documents\n    var results = col.Find(x => x.Name.StartsWith(\"Jo\"));\n\n    foreach (Customer item in results) {\n\n      }\n```\n\nException:\n\nLiteDB.LiteException was unhandled\n  ErrorCode=202\n  HResult=-2146233088\n  Message=Failed to create instance for type 'LiteDBTestConsole.Program+Customer' from assembly 'LiteDBTestConsole.Program+Customer, LiteDBTestConsole, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'. Checks if the class has a public constructor with no parameters\n  Source=LiteDB\n  StackTrace:\n       em LiteDB.Reflection.CreateInstance(Type type)\n       em LiteDB.BsonMapper.Deserialize(Type type, BsonValue value)\n       em LiteDB.BsonMapper.ToObject(Type type, BsonDocument doc)\n       em LiteDB.BsonMapper.ToObject[T](BsonDocument doc)\n       em LiteDB.LiteCollection`1.<Find>d__34.MoveNext()\n       em LiteDBTestConsole.Program.Main(String[] args)\n       em System.AppDomain._nExecuteAssembly(RuntimeAssembly assembly, String[] args)\n       em System.AppDomain.ExecuteAssembly(String assemblyFile, Evidence assemblySecurity, String[] args)\n       em Microsoft.VisualStudio.HostingProcess.HostProc.RunUsersAssembly()\n       em System.Threading.ThreadHelper.ThreadStart_Context(Object state)\n       em System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\n       em System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\n       em System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state)\n       em System.Threading.ThreadHelper.ThreadStart()\n  InnerException: \n",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/252/comments",
    "author": "nmfpacheco",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2016-08-06T12:59:09Z",
        "body": "Hi @nmfpacheco, is you Customer class a public class (no inner class) with a public constructor with no parameter?\n"
      },
      {
        "user": "nmfpacheco",
        "created_at": "2016-08-06T13:55:02Z",
        "body": "Hi @mbdavid , \nYou are right. Customer class was a inner class.... It is solved now, Thanks!!!\n"
      },
      {
        "user": "jotalanusse",
        "created_at": "2021-04-27T04:24:54Z",
        "body": "I hate to bump old issues, but i just can't make this work...\r\n```java\r\npublic class Audio\r\n    {\r\n        public Guid Id { get; }\r\n        public string Path { get; }\r\n\r\n        public Audio(Guid id, string path)\r\n        {\r\n            Id = id;\r\n            Path = path;\r\n        }\r\n    }\r\n\r\npublic class Sound\r\n    {\r\n        public Guid Id { get; }\r\n        [BsonField(\"audio\")]\r\n        [BsonRef(\"audio\")]\r\n        public Audio Audio { get; set; }\r\n\r\n        public Sound(Guid id, Audio audio)\r\n        {\r\n            Id = id;\r\n            Audio = audio;\r\n        }\r\n    }\r\n\r\nILiteCollection<Sound> soundCollection = db.GetCollection<Sound>(\"sound\");\r\n\r\nsoundCollection.Insert(new Sound(Guid.NewGuid(), new Audio(Guid.NewGuid(), \"path1\")));\r\nsoundCollection.Insert(new Sound(Guid.NewGuid(), new Audio(Guid.NewGuid(), \"path2\")));\r\n\r\nList<Sound> allSounds = new List<Sound>();\r\nallSounds.AddRange(soundCollection.FindAll().ToList());\r\n```\r\n\r\nException:\r\n\r\n```\r\nPrism.Ioc.ContainerResolutionException\r\n  HResult=0x80131500\r\n  Message=An unexpected error occurred while resolving 'SoundMod.ViewModels.MainWindowViewModel'\r\n  Source=Prism.Unity.Wpf\r\n  StackTrace:\r\n   at Prism.Unity.UnityContainerExtension.Resolve(Type type, ValueTuple`2[] parameters)\r\n   at Prism.Unity.UnityContainerExtension.Resolve(Type type)\r\n   at Prism.PrismInitializationExtensions.<>c.<ConfigureViewModelLocator>b__0_0(Object view, Type type)\r\n   at Prism.Mvvm.ViewModelLocationProvider.AutoWireViewModelChanged(Object view, Action`2 setDataContextCallback)\r\n   at Prism.Mvvm.ViewModelLocator.AutoWireViewModelChanged(DependencyObject d, DependencyPropertyChangedEventArgs e)\r\n   at System.Windows.DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs e)\r\n   at System.Windows.FrameworkElement.OnPropertyChanged(DependencyPropertyChangedEventArgs e)\r\n   at System.Windows.DependencyObject.NotifyPropertyChange(DependencyPropertyChangedEventArgs args)\r\n   at System.Windows.DependencyObject.UpdateEffectiveValue(EntryIndex entryIndex, DependencyProperty dp, PropertyMetadata metadata, EffectiveValueEntry oldEntry, EffectiveValueEntry& newEntry, Boolean coerceWithDeferredReference, Boolean coerceWithCurrentValue, OperationType operationType)\r\n   at System.Windows.DependencyObject.SetValueCommon(DependencyProperty dp, Object value, PropertyMetadata metadata, Boolean coerceWithDeferredReference, Boolean coerceWithCurrentValue, OperationType operationType, Boolean isInternal)\r\n   at System.Windows.DependencyObject.SetValue(DependencyProperty dp, Object value)\r\n   at Prism.Mvvm.ViewModelLocator.SetAutoWireViewModel(DependencyObject obj, Nullable`1 value)\r\n   at Prism.Common.MvvmHelpers.AutowireViewModel(Object viewOrViewModel)\r\n   at Prism.PrismApplicationBase.Initialize()\r\n   at Prism.PrismApplicationBase.InitializeInternal()\r\n   at Prism.PrismApplicationBase.OnStartup(StartupEventArgs e)\r\n   at System.Windows.Application.<.ctor>b__1_0(Object unused)\r\n   at System.Windows.Threading.ExceptionWrapper.InternalRealCall(Delegate callback, Object args, Int32 numArgs)\r\n   at System.Windows.Threading.ExceptionWrapper.TryCatchWhen(Object source, Delegate callback, Object args, Int32 numArgs, Delegate catchHandler)\r\n   at System.Windows.Threading.DispatcherOperation.InvokeImpl()\r\n   at System.Windows.Threading.DispatcherOperation.InvokeInSecurityContext(Object state)\r\n   at MS.Internal.CulturePreservingExecutionContext.CallbackWrapper(Object obj)\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n--- End of stack trace from previous location ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n   at MS.Internal.CulturePreservingExecutionContext.Run(CulturePreservingExecutionContext executionContext, ContextCallback callback, Object state)\r\n   at System.Windows.Threading.DispatcherOperation.Invoke()\r\n   at System.Windows.Threading.Dispatcher.ProcessQueue()\r\n   at System.Windows.Threading.Dispatcher.WndProcHook(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam, Boolean& handled)\r\n   at MS.Win32.HwndWrapper.WndProc(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam, Boolean& handled)\r\n   at MS.Win32.HwndSubclass.DispatcherCallbackOperation(Object o)\r\n   at System.Windows.Threading.ExceptionWrapper.InternalRealCall(Delegate callback, Object args, Int32 numArgs)\r\n   at System.Windows.Threading.ExceptionWrapper.TryCatchWhen(Object source, Delegate callback, Object args, Int32 numArgs, Delegate catchHandler)\r\n   at System.Windows.Threading.Dispatcher.LegacyInvokeImpl(DispatcherPriority priority, TimeSpan timeout, Delegate method, Object args, Int32 numArgs)\r\n   at MS.Win32.HwndSubclass.SubclassWndProc(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam)\r\n   at MS.Win32.UnsafeNativeMethods.DispatchMessage(MSG& msg)\r\n   at System.Windows.Threading.Dispatcher.PushFrameImpl(DispatcherFrame frame)\r\n   at System.Windows.Threading.Dispatcher.PushFrame(DispatcherFrame frame)\r\n   at System.Windows.Threading.Dispatcher.Run()\r\n   at System.Windows.Application.RunDispatcher(Object ignore)\r\n   at System.Windows.Application.RunInternal(Window window)\r\n   at System.Windows.Application.Run()\r\n   at SoundMod.App.Main()\r\n\r\n  This exception was originally thrown at this call stack:\r\n    System.Linq.Expressions.Expression.New(System.Type)\r\n    LiteDB.Reflection.CreateClass(System.Type)\r\n    LiteDB.Reflection.CreateInstance(System.Type)\r\n\r\nInner Exception 1:\r\nResolutionFailedException: Resolution failed with error: Exception has been thrown by the target of an invocation.\r\n\r\nFor more detailed information run Unity in debug mode: new UnityContainer().AddExtension(new Diagnostic())\r\n\r\nInner Exception 2:\r\nTargetInvocationException: Exception has been thrown by the target of an invocation.\r\n\r\nInner Exception 3:\r\nLiteException: Failed to create instance for type 'SoundMod.Sound' from assembly 'SoundMod.Sound, SoundMod, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'. Checks if the class has a public constructor with no parameters.\r\n\r\nInner Exception 4:\r\nArgumentException: Type 'SoundMod.Sound' does not have a default constructor (Parameter 'type')\r\n```\r\n\r\nI also tried using `[BsonCtor]` on the Sound constructor but I really don't know what might be causing this error. Any help is really appreciated!\r\n\r\nEDIT:\r\n\r\nSo the problem seems to be that the constructor of Sound has Audio as a parameter, so how can I make it work?\r\nHow can I make LiteDB return a List<Sound> that also retrieves and generates from the DB the Audio object each Sound object contains?"
      }
    ]
  },
  {
    "number": 247,
    "title": "Query question",
    "created_at": "2016-08-05T07:57:42Z",
    "closed_at": "2016-08-22T21:52:55Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/247",
    "body": "How can i get collections **\"order by date(time) desc\"** somthing like:\n**select \\* from some_table order by date desc**\n",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/247/comments",
    "author": "shai-benshimol",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2016-08-05T12:38:01Z",
        "body": "Create an index in this field and run:\n\n`col.Find(Query.All(\"date\", Query.Descending));`\n\nWill return all docs using this desc order\n"
      }
    ]
  },
  {
    "number": 245,
    "title": "Can I ask a concurrency question?",
    "created_at": "2016-08-04T09:18:44Z",
    "closed_at": "2016-11-20T21:35:46Z",
    "labels": [
      "bug",
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/245",
    "body": "I found LiteDB supports multiple connections on same data file,but it seems not perfect.\nThe test program like this:\n\n```\nusing System;\nusing System.Collections.Generic;\nusing System.Diagnostics;\nusing System.Linq;\nusing System.Text;\nusing System.Threading;\n\nnamespace Test2\n{\n    public class Person\n    {\n        public string Name { get; set; }\n        public int Age { get; set; }\n        public int Sex { get; set; }\n    }\n\n    class Program\n    {\n        static log4net.ILog logger;\n\n        static void Main(string[] args)\n        {\n            AppDomain.CurrentDomain.UnhandledException += CurrentDomain_UnhandledException;\n\n            log4net.Config.XmlConfigurator.Configure(new System.IO.FileInfo(\"log4net.config\"));\n\n            logger = log4net.LogManager.GetLogger(\"main\");\n\n            TestLiteDb();\n\n            Console.ReadLine();\n        }\n\n        private static void CurrentDomain_UnhandledException(object sender,\n            UnhandledExceptionEventArgs e)\n        {\n            System.IO.File.AppendAllText(\"exception.log\",\n                string.Format(\"未知异常{0}\\r\\n\", e.ExceptionObject));\n            running = false;\n        }\n\n        static void TestLiteDb()\n        {\n            running = true;\n\n            for (int i = 0; i < 5; i++)\n            {\n                Thread thread = new Thread(insertWork);\n                thread.Start();\n            }\n            for (int i = 0; i < 5; i++)\n            {\n                Thread thread = new Thread(readWork);\n                thread.Start();\n            }\n\n            DateTime begin = DateTime.Now;\n            while (running)\n            {\n                if (DateTime.Now >= begin.AddMinutes(10))\n                {\n                    running = false;\n                    break;\n                }\n            }\n        }\n\n        static bool running;\n\n        static void insertWork()\n        {\n            logger.Info(\"创建存储线程成功\");\n\n            var watch = new Stopwatch();\n            int nCount = 0;\n            Random rand = new Random(DateTime.Now.Millisecond);\n\n            while (running)\n            {\n                watch.Start();\n\n                using (var conn = new LiteDB.LiteDatabase(\"test2.db\"))\n                {\n                    var col = conn.GetCollection<Person>(\"china\");\n                    var p = new Person\n                    {\n                        Name = \"张工\" + rand.Next().ToString(),\n                        Age = (int)(rand.NextDouble() * 70),\n                        Sex = rand.Next() % 2\n                    };\n                    col.Insert(p);\n                    logger.InfoFormat(\"存储信息，姓名:{0}\\t年龄:{1}\\t性别:{2}\", p.Name, p.Age,\n                                p.Sex == 0 ? \"女\" : \"男\");\n                }\n\n                watch.Stop();\n                nCount++;\n\n                Thread.Sleep(1000);\n            }\n\n            logger.InfoFormat(\"写操作平均用时{0}毫秒\", watch.ElapsedMilliseconds / nCount);\n        }\n\n        static void readWork()\n        {\n            logger.Info(\"创建读取线程成功\");\n\n            var watch = new Stopwatch();\n            int nCount = 0;\n            Random rand = new Random(DateTime.Now.Millisecond);\n\n            while (running)\n            {\n                watch.Start();\n\n                using (var conn = new LiteDB.LiteDatabase(\"test2.db\"))\n                {\n                    var col = conn.GetCollection<Person>(\"china\");\n                    var ps = col.Find(p => p.Age == (int)(rand.NextDouble() * 70));\n                    if (ps != null)\n                    {\n                        foreach (var p in ps)\n                        {\n                            logger.InfoFormat(\"读取信息，姓名:{0}\\t年龄:{1}\\t性别:{2}\", p.Name,\n                                p.Age, p.Sex == 0 ? \"女\" : \"男\");\n                        }\n                    }\n\n                    watch.Stop();\n                    nCount++;\n\n                    Thread.Sleep(1000);\n                }\n            }\n\n            logger.InfoFormat(\"读操作平均用时{0}毫秒\", watch.ElapsedMilliseconds / nCount);\n        }\n    }\n}\n```\n\nAfter running about one minute, a timeout exception is throwed.\nSo is there any application scenarios?\n",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/245/comments",
    "author": "lidanger",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2016-08-04T12:34:33Z",
        "body": "Try put Thread.Sleep(1000) in readWork() outsite `using`. Keeping a read connection open will block write operation. LiteDB support N concurrency read instances at same time, when when 1 needs write must be open in exclusive mode.\n"
      },
      {
        "user": "lidanger",
        "created_at": "2016-08-05T00:11:46Z",
        "body": "Yes,it's my fault.Thank you!\n"
      },
      {
        "user": "lidanger",
        "created_at": "2016-08-05T04:39:50Z",
        "body": "I modified the code,but the program still gives exceptions sometimes.\n\nThe modified code:\n\n```\nstatic void TestLiteDb()\n{\n    using (var conn = new LiteDB.LiteDatabase(\"text2.db\"))\n    {\n        var col = conn.GetCollection<Person>(\"china\");\n        col.Insert(new Person\n        {\n            Name = \"张工松\",\n            Age = 43,\n            Sex = 1\n        });\n    }\n\n    running = true;\n\n    for (int i = 0; i < 5; i++)\n    {\n        Thread thread = new Thread(insertWork);\n        thread.Start();\n    }\n    for (int i = 0; i < 5; i++)\n    {\n        Thread thread = new Thread(readWork);\n        thread.Start();\n    }\n\n    DateTime begin = DateTime.Now;\n    while (running)\n    {\n        if (DateTime.Now >= begin.AddHours(1))\n        {\n            running = false;\n            break;\n        }\n\n        Thread.Sleep(100);\n    }\n}\n\nstatic bool running;\n\nstatic void insertWork()\n{\n    logger.Info(\"创建存储线程成功\");\n\n    var watch = new Stopwatch();\n    int nCount = 0;\n    Random rand = new Random(DateTime.Now.Millisecond);\n\n    while (running)\n    {\n        var p = new Person\n        {\n            Name = \"张工\" + rand.Next().ToString(),\n            Age = (int)(rand.NextDouble() * 70),\n            Sex = rand.Next() % 2\n        };\n\n        watch.Start();\n\n        using (var conn = new LiteDB.LiteDatabase(\"test2.db\"))\n        {\n            var col = conn.GetCollection<Person>(\"china\");\n\n            col.Insert(p);\n        }\n\n        watch.Stop();\n        nCount++;\n\n        logger.InfoFormat(\"存储信息，姓名:{0}\\t年龄:{1}\\t性别:{2}\", p.Name, p.Age,\n            p.Sex == 0 ? \"女\" : \"男\");\n\n        Thread.Sleep(1000);\n    }\n\n    logger.InfoFormat(\"写操作平均用时{0}毫秒\", watch.ElapsedMilliseconds / nCount);\n}\n\nstatic void readWork()\n{\n    logger.Info(\"创建读取线程成功\");\n\n    var watch = new Stopwatch();\n    int nCount = 0;\n    Random rand = new Random(DateTime.Now.Millisecond);\n\n    while (running)\n    {\n        var list = new List<Person>();\n\n        watch.Start();\n\n        using (var conn = new LiteDB.LiteDatabase(\"test2.db\"))\n        {\n            var col = conn.GetCollection<Person>(\"china\");\n            var ps = col.Find(p => p.Age == (int)(rand.NextDouble() * 70));\n            if (ps != null)\n            {\n                list.AddRange(ps);\n            }\n        }\n\n        watch.Stop();\n        nCount++;\n\n        foreach (var p in list)\n        {\n            logger.InfoFormat(\"读取信息，姓名:{0}\\t年龄:{1}\\t性别:{2}\", p.Name,\n                p.Age, p.Sex == 0 ? \"女\" : \"男\");\n        }\n\n        Thread.Sleep(1000);\n    }\n\n    logger.InfoFormat(\"读操作平均用时{0}毫秒\", watch.ElapsedMilliseconds / nCount);\n}\n```\n"
      },
      {
        "user": "mbdavid",
        "created_at": "2016-08-05T12:45:46Z",
        "body": "You exception is about timeout? I will made a unit test to check this.\n"
      },
      {
        "user": "lidanger",
        "created_at": "2016-08-06T00:16:10Z",
        "body": "Timeout and deserialize failure.\n"
      },
      {
        "user": "mbdavid",
        "created_at": "2016-11-20T21:35:46Z",
        "body": "Hi @lidanger, v3 was released and now support multi-thread in a single LiteDatabase instance.\n"
      }
    ]
  },
  {
    "number": 244,
    "title": "A strange problem with nesting class",
    "created_at": "2016-08-04T09:01:31Z",
    "closed_at": "2016-08-05T00:15:06Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/244",
    "body": "**Test environment:**\nLiteDB Version: 2.0\n.Net Framework:4.0\nOperating System:Windows 10.0.10586 x64\n\n**The test program like this:**\n\n```\nusing Modbus.Utility;\nusing System;\nusing System.Collections.Generic;\nusing System.Diagnostics;\nusing System.Linq;\nusing System.Text;\nusing System.Threading;\n\nnamespace Test2\n{\n    class Program\n    {\n        static log4net.ILog logger;\n\n        static void Main(string[] args)\n        {\n            log4net.Config.XmlConfigurator.Configure(new System.IO.FileInfo(\"log4net.config\"));\n\n            logger = log4net.LogManager.GetLogger(\"main\");\n\n            TestLiteDb2();\n\n            Console.ReadLine();\n        }\n\n        public class Person\n        {\n            public string Id { get; set; }\n            public string Name { get; set; }\n            public int Age { get; set; }\n            public int Sex { get; set; }\n\n            public Person()\n            {\n                Id = Guid.NewGuid().ToString(\"N\");\n            }\n        }\n\n        static void TestLiteDb2()\n        {\n            using (var conn = new LiteDB.LiteDatabase(\"test.db\"))\n            {\n                var col = conn.GetCollection<Person>(\"p2\");\n                col.Insert(new Person\n                {\n                    Age = 20,\n                    Name = \"adfas\",\n                    Sex = 1\n                });\n            }\n\n            using (var conn = new LiteDB.LiteDatabase(\"test.db\"))\n            {\n                var col = conn.GetCollection<Person>(\"p2\");\n                var ps = col.Find(p => p.Age == 20);\n                foreach (var p in ps)\n                {\n                    logger.InfoFormat(\"读取信息，姓名:{0}\\t年龄:{1}\\t性别:{2}\", p.Name, p.Age,\n                        p.Sex == 0 ? \"女\" : \"男\");\n                }\n            }\n        }\n    }\n}\n```\n\n**And it gives an exception like this:**\n\nLiteDB.LiteException: Failed to create instance for type 'Test2.Program+Person' from assembly 'Test2.Program+Person, Test2, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'. Checks if the class has a public constructor with no parameters\n   在 LiteDB.Reflection.CreateInstance(Type type)\n   在 LiteDB.BsonMapper.Deserialize(Type type, BsonValue value)\n   在 LiteDB.BsonMapper.ToObject[T](BsonDocument doc)\n   在 LiteDB.LiteCollection`1.<Find>d__34.MoveNext()\n   在 Test2.Program.TestLiteDb2() 位置 E:\\DJWryWater\\代码\\Test2\\Program.cs:行号 91\n   在 Test2.Program.Main(String[] args) 位置 E:\\DJWryWater\\代码\\Test2\\Program.cs:行号 48\n   在 System.AppDomain._nExecuteAssembly(RuntimeAssembly assembly, String[] args)\n   在 System.AppDomain.ExecuteAssembly(String assemblyFile, Evidence assemblySecurity, String[] args)\n   在 Microsoft.VisualStudio.HostingProcess.HostProc.RunUsersAssembly()\n   在 System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\n   在 System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\n   在 System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state)\n   在 System.Threading.ThreadHelper.ThreadStart()\n\n**Non nesting class performs OK.**\n",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/244/comments",
    "author": "lidanger",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2016-08-04T12:29:34Z",
        "body": "Yes, classes must be non nested. LiteDB (in this version) used Reflection.Emit that can initialize this kind of class.\n"
      }
    ]
  },
  {
    "number": 243,
    "title": "How to select and then remove n rows from collection",
    "created_at": "2016-08-04T02:54:08Z",
    "closed_at": "2016-08-22T21:52:44Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/243",
    "body": "Hi there,\nI am newbie here. I want to select and then remove n rows (random or by created time) from collection? How to do this?\nThank you!\n",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/243/comments",
    "author": "takaaptech",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2016-08-04T12:28:06Z",
        "body": "Hi @takaaptech, delete command from collection can be used with document _id or any `Query`. There is no needs to select before delete.\n\n``` C#\nvar col = db.GetCollection<YourClass>(\"collection\");\n\ncol.Delete(x => x.Created < DateTime.Now);\n```\n"
      },
      {
        "user": "takaaptech",
        "created_at": "2016-08-05T02:01:53Z",
        "body": "Hi @mbdavid, Thanks for your quickly answer! In my case, i have a collection with have 10.000 rows. Each time, i need to select exactly 20 rows for processing and then delete them from collection. \nFor now, i am using this:\n\n```\n        var data_return = new List<RowClass>();\n        using (LiteDatabase db = new LiteDatabase(@\"db\"))\n        {\n            // Get a collection (or create, if doesn't exist)\n            var col = db.GetCollection<RowClass>(\"Collection\");\n            var data_list = col.Find(Query.All(), 0, 20);\n\n            foreach (var row in data_list) \n            {\n                col.Delete(row.Id);\n                data_return.Add(row);\n            }\n            db.Dispose();\n        }\n        return data_return;\n```\n\nIs this ok or we can using something better?\n"
      },
      {
        "user": "mbdavid",
        "created_at": "2016-08-06T13:04:36Z",
        "body": "I recommend to you transform your data_list in an `List<T>` before loop. \n"
      },
      {
        "user": "sanjiv-saini",
        "created_at": "2020-04-11T03:13:44Z",
        "body": "> I recommend to you transform your data_list in an `List<T>` before loop.\r\n\r\n@mbdavid , could you please explain the reason behind it?"
      }
    ]
  },
  {
    "number": 240,
    "title": "Stack overflow error",
    "created_at": "2016-08-03T03:57:58Z",
    "closed_at": "2016-12-09T12:42:53Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/240",
    "body": "I am not quite sure what caused this to happen, this is the first time this has happened. It caused the Unity game to crash. Here's the stack trace for the crash. Any thoughts? Am I doing something wrong?\n\n0x00007FFB77D16DCC (mono) mono_get_exception_stack_overflow\n0x000000001DC94100 (Mono JIT Code) (wrapper managed-to-native) System.IO.MonoIO:Write (intptr,byte[],int,int,System.IO.MonoIOError&)\n0x00000000053F32FC (Mono JIT Code) [/Users/builduser/buildslave/mono/build/mcs/class/corlib/System.IO/FileStream.cs:1035] System.IO.FileStream:FlushBuffer (System.IO.Stream) \n0x00000000053F781F (Mono JIT Code) [/Users/builduser/buildslave/mono/build/mcs/class/corlib/System.IO/FileStream.cs:1054] System.IO.FileStream:FlushBuffer () \n0x000000001DC92DC5 (Mono JIT Code) [/Users/builduser/buildslave/mono/build/mcs/class/corlib/System.IO/FileStream.cs:697] System.IO.FileStream:WriteInternal (byte[],int,int) \n0x000000001DC9292D (Mono JIT Code) [/Users/builduser/buildslave/mono/build/mcs/class/corlib/System.IO/FileStream.cs:662] System.IO.FileStream:Write (byte[],int,int) \n0x000000001DC92340 (Mono JIT Code) LiteDB.FileDiskService:WriteJournal (uint,byte[])\n0x000000001DC9213A (Mono JIT Code) LiteDB.TransactionService:<.ctor>b__4_0 (LiteDB.BasePage)\n0x000000001DC91D73 (Mono JIT Code) LiteDB.CacheService:SetPageDirty (LiteDB.BasePage)\n0x000000001DC91C72 (Mono JIT Code) LiteDB.PageService:SetDirty (LiteDB.BasePage)\n0x000000000546F981 (Mono JIT Code) LiteDB.PageService:GetPage<object> (uint,bool)\n0x000000001DC9FC8A (Mono JIT Code) LiteDB.DataService:Update (LiteDB.CollectionPage,LiteDB.PageAddress,byte[])\n0x000000001DC9BAB0 (Mono JIT Code) LiteDB.DbEngine/<>c__DisplayClass20_0:<Update>b__0 (LiteDB.CollectionPage)\n0x000000001DC91118 (Mono JIT Code) LiteDB.DbEngine:WriteTransaction<int> (string,bool,System.Func`2<LiteDB.CollectionPage, int>)\n0x000000001DC9B75F (Mono JIT Code) LiteDB.DbEngine:Update (string,System.Collections.Generic.IEnumerable`1<LiteDB.BsonDocument>)\n0x000000001DC9B602 (Mono JIT Code) LiteDB.LiteCollection`1<object>:Update (System.Collections.Generic.IEnumerable`1<object>)\n0x000000001DCA6A66 (Mono JIT Code) [C:\\Users\\Jesse\\Documents\\repos\\Unity\\exile\\client\\Assets_Code\\Database\\DatabaseManager.cs:181] DatabaseManager/<UpdateAsync>c__AnonStorey5B:<>m__69 () \n0x0000000005397E8B (Mono JIT Code) (wrapper runtime-invoke) object:runtime_invoke_void__this__ (object,intptr,intptr,intptr)\n0x00007FFB77E04E7F (mono) mono_set_defaults\n0x00007FFB77D584B5 (mono) mono_runtime_invoke\n0x00007FFB77D83273 (mono) mono_thread_interruption_request_flag\n0x00007FFB77E375AD (mono) unity_mono_method_is_generic\n0x00007FFB9FE48102 (KERNEL32) BaseThreadInitThunk\n",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/240/comments",
    "author": "emrys90",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2016-08-03T23:45:51Z",
        "body": "What platform are you running? Has permission on this directory? When this happing?\n"
      },
      {
        "user": "emrys90",
        "created_at": "2016-08-03T23:50:48Z",
        "body": "This is running on Windows 10 in a standalone build from Unity3d. Permissions aren't a problem I don't think since this is a random error that has only occurred once. I've been reading/writing thousands of records without an issue. My best guess for what this maybe is that this error was on something that I do async. Could there be an issue if this was running async and then something not async interacts with the database? Deletes a model that the async is trying to update? Or anything along those lines.\n"
      },
      {
        "user": "mbdavid",
        "created_at": "2016-08-04T00:02:29Z",
        "body": "It's not a good pratice do this. Are you are using async operations in same LiteDatabase instance? If you need async operation, use `lock`. LiteDB is not thread safe (only process safe - needs one LiteDatabase instance per use).\n"
      },
      {
        "user": "emrys90",
        "created_at": "2016-08-04T00:06:39Z",
        "body": "Yes, it's the same instance. Can I instantiate a new LiteDatabase for each async operation with them using the same database file? Using lock wouldn't be the base case for my usage, it would lock the main thread. In a game anything getting held up for more than a couple milliseconds does not cause a good user experience. Some of these async calls take 600 milliseconds, so too much to lock the main thread over.\n"
      },
      {
        "user": "mbdavid",
        "created_at": "2016-08-04T00:12:28Z",
        "body": "You can use same instance for each async operation. LiteDatabase class is very lightweight. All lock operation are made using `FileStream` ShareMode. Each read/write operation Open/DoWork/Close datafile. Only if you need a full transactions then database will keep opended during Begin/Commit.\nSo, is safe having 2 async operation using 2 LiteDatabase instances - but it's not safe to have only 1 instance.\n"
      },
      {
        "user": "emrys90",
        "created_at": "2016-08-04T00:20:41Z",
        "body": "I'm not entirely sure what you mean. The async operation I am doing is updating a list of sometimes as much as 8,000 models. That is a transaction I believe with the Update method that takes an ienumurable, so if I understand you correctly that would lock the main thread if I used locks.\n"
      },
      {
        "user": "mbdavid",
        "created_at": "2016-08-04T00:24:30Z",
        "body": "If you use async calls to write on database, only this async task will be locked during write operation. If another async tasks try write on disk too, this will wait first finish. But both are async tasks from your main thread.\n"
      },
      {
        "user": "emrys90",
        "created_at": "2016-08-04T00:25:57Z",
        "body": "What if I am also writing to the database in the main thread though?\n"
      },
      {
        "user": "mbdavid",
        "created_at": "2016-08-04T00:27:58Z",
        "body": "Only one written execution at a time, no matter which thread is\n"
      },
      {
        "user": "emrys90",
        "created_at": "2016-08-04T00:29:55Z",
        "body": "Okay. What if the async thread does not do batch updates? If it loops through and updates one model at a time. If the main thread then updates a model in a separate instance of a LiteDB, will it cause the async thread to pause and let the main thread finish?\n"
      },
      {
        "user": "mbdavid",
        "created_at": "2016-08-04T00:36:26Z",
        "body": "Yes, but this async task will be extremly expensive because if you need update 8000 documents, will be 8000 operations: open datafile, load data pages, update, clear cache, write journal, write final file, delete journal, close datafile. It's not possible use 2 datafiles (to avoid write locks)?\n"
      },
      {
        "user": "emrys90",
        "created_at": "2016-08-04T00:40:25Z",
        "body": "The problem is that in the same collection that I am updating I could also be interacting with it on the main thread, so splitting it into two data files wouldn't fix the issue since I still need to interact with it.\n\nFor the most part, I haven't seemed to have any issues besides this one crash with doing things async and sync with the same LiteDB instance. Is there a particular scenario about doing this that's unsafe? If so, I could take precautions to avoid that. If it's some combination of things that caused the crash, I could work out a way to avoid that as well.\n"
      },
      {
        "user": "mbdavid",
        "created_at": "2016-08-04T00:50:13Z",
        "body": "If you use different instances you will not have this problem. But, using some instance it's very unsafe: you can corrupt your datafile. In you case, I recommend to use diferent instances: in async operation do blocks of update (not 1 or 8000 at same time, use small packages, like 50~200). Need to be faster? do not use journal, use BsonDocument insted POCO class (map POCO to BsonDocument is quite expansive), keep you document small (less than 2000 bytes) avoiding extened pages.\n"
      },
      {
        "user": "emrys90",
        "created_at": "2016-08-04T00:56:21Z",
        "body": "Okay. Can you give examples of what could cause it to be corrupted though? For example, is it safe to use the same instance if I am not modifying the same collection? Or can that still corrupt data?\n"
      },
      {
        "user": "mbdavid",
        "created_at": "2016-08-04T01:32:34Z",
        "body": "Yes, can sill corrupt use different collections (but's in this case are very unlikely). LiteDB use pages to store data. This pages goes to memory and updates in memory during a write operations. When finish, all changed pages are persisted to disk. \n"
      },
      {
        "user": "emrys90",
        "created_at": "2016-08-04T02:11:37Z",
        "body": "So what would you recommend as a way to update thousands of documents without blocking the main thread, to continue allowing inserts/updates/deletes from within the main thread? Basically I don't really care how long it takes for the async task to complete. It's not important for that to be finished in any decent timeframe, but the main thread I can't let it be blocked.\n"
      },
      {
        "user": "mbdavid",
        "created_at": "2016-08-04T12:40:34Z",
        "body": "Use a static variable `bool UseAsync` to control this. When `UseAsync = true` async task can use datafile and need to check in every command (can be use a Transaction to avoid open/close datafile). When main thread needs exclusive, set UseAsync = false and use in main thread\n"
      }
    ]
  },
  {
    "number": 233,
    "title": "Invalid database version in v2.0.0-rc2 ",
    "created_at": "2016-07-29T13:15:38Z",
    "closed_at": "2016-08-04T12:41:46Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/233",
    "body": "In v2.0.0-rc2 you have changed db version and now I get an error\nLiteDB.LiteException: Invalid database version: 5\nBefore that I used v2.0.0-rc\n\nWhat I must do for fix it?\n",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/233/comments",
    "author": "ambyte",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2016-07-29T14:37:45Z",
        "body": "Hi @ambyte, datafile change in this last RC2 version (from RC and beta). So, I update internal file version check.\nTo upgrade, use LiteDB.Shell (from RC) to export data and with LiteDB.Shell (from RC2) use to import in another datafile.\n\nIn shell RC/Beta, use:\n\n```\nopen beta-rc.db\ndump > mydump.dmp\n```\n\nIn shell RC2\n\n```\nopen new-datafile.db\ndump < mydump.dmp\n```\n\nI will add this in wiki documentation.\n"
      },
      {
        "user": "negue",
        "created_at": "2016-08-01T15:37:27Z",
        "body": "Haven't ran into this kind of issue, but what if the database version changes from LiteDB2.0 to 2.X , and I upgrade my app to it, how to migrate then?\n\nI don't know if its possible but maybe we need an self migrating option without using LiteDB.Shell, for example, on Android its impossible to run the LiteDB.Shell.exe \n"
      },
      {
        "user": "mbdavid",
        "created_at": "2016-08-01T16:44:50Z",
        "body": "@negue, this will not happen (or, at lease, if anyone found a bug that needs change). \n\nFrom rc to final release, an issue posted about DateTime field indexed, I found a \"little\" bug that I fixed. In this case, datafile must be updated. In a 2.X scenario, will force me to write a \"fix datafile\". It´s a very hard job, but I will need do if any problem in data structure are found.\n\nTo next major version (v3) datafile will be changed again (to support anothers types of indexes). An portable update will be made.\n"
      }
    ]
  },
  {
    "number": 230,
    "title": "Not null constraint",
    "created_at": "2016-07-27T20:45:24Z",
    "closed_at": "2016-08-04T12:41:46Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/230",
    "body": "Is there anyway to mark a field as not allowing null/empty values?\n",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/230/comments",
    "author": "emrys90",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2016-07-28T17:22:30Z",
        "body": "Hi @emrys90, LiteDB has no schema validation. I think you can use native .NET DataAnnotations for that.\n"
      },
      {
        "user": "emrys90",
        "created_at": "2016-07-28T17:35:35Z",
        "body": "Would you happen to know the performance hit of that offhand? Any chance of this becoming something that is supported, maybe a config setting on the database that does the data annotations validator?\n"
      }
    ]
  },
  {
    "number": 228,
    "title": "Exception : Invalid transaction on top of stack",
    "created_at": "2016-07-27T10:10:00Z",
    "closed_at": "2016-08-04T12:41:46Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/228",
    "body": "Hello,\n\nI just started using your DB. Seems it is exactly what I was looking, simple, NoSQL.\nI tried to use LiteDB in a windows service  with multiple threads accessing the DB.\nThe service is something similar to a job scheduler, and tasks are stored in the DB.\n\nAt the very beginning of the app when DB access (read or write) are done, I get the following exception :\n\n```\n\nType : System.ArgumentException, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\n        Message : Invalid transaction on top of stack\n        Source : LiteDB\n        HelpLink :\n        Data : None\n        Additional Infos :\n            ParamName : null\n\n        StackTrace :\n             at LiteDB.TransactionService.popTopTransaction(LiteTransaction trans)\n             at LiteDB.TransactionService.Complete(LiteTransaction trans)\n             at LiteDB.LiteTransaction.Commit()\n             at LiteDB.LiteTransaction.Dispose()\n             at LiteDB.DbEngine.<Find>d__9.System.IDisposable.Dispose()\n             at LiteDB.DbEngine.<Find>d__9.MoveNext()\n             at LiteDB.LiteCollection`1.<Find>d__34.MoveNext()\n             at System.Linq.Buffer`1..ctor(IEnumerable`1 source)\n             at System.Linq.OrderedEnumerable`1.<GetEnumerator>d__1.MoveNext()\n             at System.Linq.Enumerable.FirstOrDefault[TSource](IEnumerable`1 source)\n             at xxxxxxxxxxxxxxxxx\n```\n\nIs the LiteDatabase thread-safe ? Because I'm sharing the LiteDatabase instance on all threads.\nShould I do differently ?\n\nThanks for your help.\n\nLuc\n",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/228/comments",
    "author": "ldubrois",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2016-07-27T11:33:26Z",
        "body": "Hi @ldubrois, no, it's not thread-safe. Reusing same LiteDatabase instance in different threads/tasks causes invalid states. Try use one instance per thread (LiteDB support multiple concurrency instances).\n"
      },
      {
        "user": "ldubrois",
        "created_at": "2016-07-27T12:42:39Z",
        "body": "Thanks for your quick answer.\nAs a very quick fix on my issue, I've added a lock on the LiteDatabase to get it working.\n\nI assume creating a new LiteDatabase instance per request will be too heavy, I will search a way to maintain a LiteDatabase instance per thread and dispose it nicely when the thread exit.\n\nThanks again.\n"
      },
      {
        "user": "mbdavid",
        "created_at": "2016-07-27T13:00:56Z",
        "body": "It´s not heavy. LiteDatabase instance is just a simple layer of `DbEngine` class. Havy operation is initialize `BsonMapper`, so it´s importat to keep this in a single instance (by default, using BsonMapper.Global is single static instance).\n\nIf you have lots of read operation, you need lock them too. In this case, use multiple instances of LiteDatabase is better way. This current version keeps datafile always closed and open only when need execute an disk operation.\n\nI had a old version with lock in all operations. But had some bugs and I gave up. Maybe for `2.1` release I try add this again.\n"
      }
    ]
  },
  {
    "number": 224,
    "title": "Query with EndsWith",
    "created_at": "2016-07-26T17:43:28Z",
    "closed_at": "2016-08-02T11:30:59Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/224",
    "body": "Hi\nIt is not possible to run a query with \"EndsWith\"\n\n```\nvar tmp = reg.Find(x => x.Name.EndsWith(\"P\"));\ntmp.ForEach(x => Console.WriteLine(x.Name));\n```\n",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/224/comments",
    "author": "bencz",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2016-07-26T17:47:17Z",
        "body": "Hi @bencz, because there is not index that catch EndsWith (I think in no one database). So, when you don't have an index (using in Find(predicate)) you need use a non-indexed query:\n\n`var tmp = reg.FindAll().Where(x => x.Name.EndsWith(\"P\"));`\n"
      },
      {
        "user": "bencz",
        "created_at": "2016-07-27T14:32:01Z",
        "body": "Hi @mbdavid, thanks!\nuse the findall, if I have a 'table' with a lot of documents.... it's not a good idea...\nI can do something different... just save the last chars of field name, and create a index in this field and query based in this field...\n"
      },
      {
        "user": "mbdavid",
        "created_at": "2016-07-27T14:34:26Z",
        "body": "Yes, you can create a get only property with ends of name, index this property and quering using indexed query. \n"
      },
      {
        "user": "bencz",
        "created_at": "2016-08-02T11:30:59Z",
        "body": "Thanks!\nI did this!!\n"
      }
    ]
  },
  {
    "number": 223,
    "title": "Updating Sub document",
    "created_at": "2016-07-26T16:19:35Z",
    "closed_at": "2016-08-04T12:41:46Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/223",
    "body": "I have no idea how to update a sub document in Lite DB. For example, I have a document like this one.\n\n`{\n    \"name\": \"user1\",\n    \"Addr\": \"Address\",\n    \"service\": [{\n        \"name\": \"Service1\",\n        \"type\": \"Service type1\"\n    }, {\n        \"name\": \"service2\",\n        \"type\": \"service type2\"\n    }]\n}`\n\nI want to add or remove services to the customer.  I have no idea how to do it.\n",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/223/comments",
    "author": "anishpsla",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2016-07-26T17:52:07Z",
        "body": "Hi @anishpsla, you cannot access sub document only. You must read your document \"User\", insert/update \"Services\" and save \"User\" again. Something like this:\n\n```\npublic class User\n{\n    public string Name { get; set; }\n    public string Addr { get; set; }\n    public List<Service> Service { get; set; }\n}\n\npublic class Service\n{\n    public string Name { get; set; }\n    public string Type { get; set; }\n}\n\nvar u = users.FindById(123);\n\nu.Services.Add(new Service { Name = \"s1\", Type = \"t1\" });\n\nusers.Update(u);\n```\n"
      },
      {
        "user": "anishpsla",
        "created_at": "2016-07-27T18:28:44Z",
        "body": "``` javascript\n            using (var db = new LiteDatabase(@\"MyData.db\"))\n            {\n                var CustomerTbl = db.GetCollection<Customer_model>(\"customer\");\n                var cus = CustomerTbl.FindById(cusid);\n                cus.Service.Add(new CusService { Name = \"BB\", Type=\"Test\"});\n                CustomerTbl.Update(cus);\n            }\n```\n\nCausing \n\n> NullReferenceException: Object reference not set to an instance of an object.\n\nError on line\n\n> cus.Service.Add(new CusService { Name = \"BB\", Type=\"Test\"});\n"
      },
      {
        "user": "mbdavid",
        "created_at": "2016-07-27T18:32:40Z",
        "body": "Post your `Customer_model` class to check if has an ID identifacation, and how you are inserting your customer.\n"
      },
      {
        "user": "anishpsla",
        "created_at": "2016-07-28T06:50:17Z",
        "body": "Customer_mode class have id of type integer. Also 'cus' variable have data in it. the next line causing problem.\n"
      },
      {
        "user": "mbdavid",
        "created_at": "2016-07-28T17:29:34Z",
        "body": "Can you post an gist unit test of this problem? I will need debug this code to know where problem is.\n"
      },
      {
        "user": "anishpsla",
        "created_at": "2016-07-28T18:24:11Z",
        "body": "Thanks for your help. Finally, I find the solution. Here is the raw, code\n\n``` c#\nusing (var db = new LiteDatabase(@\"MyData.db\"))\n            {\n                var CustomerTbl = db.GetCollection<Customer_model>(\"customer\");\n                List<CusService> test = new List<CusService>();\n                var ResultSet = CustomerTbl.Find(x => x.Id.Equals(23));\n                foreach (var result in ResultSet)\n                {\n                    test = result.Service;\n                }\n                var test13 = new CusService { Name = \"CA\", Type = \"123\" };\n                test.Add(test13);\n\n                var CustomerInfo = new Customer_model\n                {\n                    Id=23,\n                    Name = \"asdfsd\",\n                    Addr = \"sdfsd\",\n                    Service = test\n                };\n                CustomerTbl.Update(CustomerInfo);\n            }\n```\n"
      }
    ]
  },
  {
    "number": 168,
    "title": "query based on object in object",
    "created_at": "2016-05-04T07:56:47Z",
    "closed_at": "2016-07-09T18:34:23Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/168",
    "body": "Hello\nI have some objects stored in a LiteDB database. I'm trying to get a result of all CostBasisTradeSessionObjects that include Marked objects with a particular name, MarkedNameString. I find the Marked object easily enough, but I dont now how to query for object in object. \n\n`public string Marked\n{\n        public ObjectId MarkedId { get; set; }\n        public String Name { get; set; }\n}\n\npublic class CostBasisTradeSessionObject\n    {\n        public ObjectId CostBasisTradeSessionId { get; set; }\n        public bool IsActive { get; set; }\n        public DateTime SessionStarted { get; set; }\n        public DateTime SessionClosed { get; set; }\n        public Marked Marked { get; set; }\n    }\n\n using (var db = new LiteDatabase(@\"CostBasesTradeSessionsDatabase.db\"))\n            {\n                var costBasisTradeSessionObjects = db.GetCollection<CostBasisTradeSessionObject>(\"costBasisTradeSessionObjects\");\n\n```\n            Marked marked = db.GetCollection<Marked>(\"markeds\").Find(Query.EQ(\"Name\", \"<MarkedNameString>\")).Single();\n        }\n```\n\n`\n\nSo I try to get an result with CostBasisTradeSessionObject objects that includes the marked object returned in var marked.\n\nSo I tried a couple of things\nvar cb = costBasisTradeSessionObjects.Include(x => x.Marked).Equals(marked);\nand justing jusing the MarkedNameString directory\nvar results = costBasisTradeSessionObjects.(Query.(\"Marked.name\", \"MarkedNameString\"));\nor\nvar results = costBasisTradeSessionObjects.Find(x => x.Marked.Name.Equals(\"MarkedNameString\"));\nbut all the things I tried return an empty result or dont work. \n\nRegards\n",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/168/comments",
    "author": "trondkristiansen",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2016-07-09T18:34:23Z",
        "body": "Hi @trondkristiansen, if your Marked object is a reference in CostBasisTradeSessionObject there is no index available (there is not \"Name\" field CostBasisTradeSessionObject). To fix this, use Marked as an embedded document.\n"
      }
    ]
  },
  {
    "number": 166,
    "title": "Feature Request: Control Serialization Mapping Programmaticlly without Attributes",
    "created_at": "2016-05-03T00:04:54Z",
    "closed_at": "2016-07-23T22:09:09Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/166",
    "body": "We got pretty far into evaluating LiteDB and we hit a road block when we couldn't configure what fields are serialized using code mapping and could only do it via attributes.   Empty attributes would be fine we can create our own empty attributes that are part of our namespace, and they are just tags that are checked by string name instead of specific type.\n\nExamples for attribute issue would be ReShaper, where I can create their empty attributes and the namespace and exact type doesn't matter. What matters is the class name only. This allows for not having to have a ReSharper assembly in your code.\n\nAs for programmatically mapping without using attributes the reasoning is the same. We have a model assembly that we don't allow any dependencies other than the BCL.  \n\nWe have used Entity Framework and MongoDB which both have great support for mapping with code instead of attributes so that the mapping logic is separate from the model object. Makes sharing the model objects much cleaner.\n",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/166/comments",
    "author": "CreepyGnome",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2016-07-09T18:25:21Z",
        "body": "Hi @CreepyGnome, after a long time while, I'm backing to this project. LiteDB 2 (in master branch) supports fluent mapper, as you can see here:\n\n```\nusing(var db = new LiteDatabase(@\"MyData.db\"))\n{\n    db.Mapper.Entity<Customer>()\n        .Key(x => x.CustomerKey)\n        .Map(x => x.Name, \"customer_name\")\n        .Ignore(x => x.Age)\n        .Index(x => x.Name, unique);\n\n}\n```\n"
      },
      {
        "user": "CreepyGnome",
        "created_at": "2016-07-09T19:20:50Z",
        "body": "Are you saying it is not released or that it has been released for a long time, I am not sure as to your meaning? \n\nIf this is released where is this feature documented? We couldn't find anything stating how to do that when we were evaluating LiteDB. \n\nIf it isn't released when will it be released? And will it be documented? \n"
      },
      {
        "user": "mbdavid",
        "created_at": "2016-07-09T19:28:00Z",
        "body": "This feature is present in v2, that are not release yet. Wiki documentation are not updated yet.\n\nYou can download master branch and see some unit test to see how works. My plans are release (in nuget) as soon I update wiki.\n"
      }
    ]
  },
  {
    "number": 144,
    "title": "What is the optimal number of documents for LiteDB",
    "created_at": "2016-03-11T21:57:38Z",
    "closed_at": "2016-07-23T17:38:59Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/144",
    "body": "What is the optimal number of documents for LiteDB which it can operate with relatively good performance and when it's better no use another Server DB solution?\n\nBTW: how do I mark an issue as a question here?\n",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/144/comments",
    "author": "idansh",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2016-03-14T23:08:36Z",
        "body": "Hi @idansh, I saw your question on StackOverflow now and I created and filter using `litedb` tag to anwser there. There in github only I can mark an issue as a question.\n\nAbout your question: LiteDB is an young embedded database made basicly by me. I still working to keep better and more stable as possible. The main problem in LiteDB is not the size of database or how many documents are you storing. You can have 1 milion documents and search using an index reading no more than 15 disk pages (60K) in less than 200ms.\n\nLiteDB is my second database. FileDB, my first try, use some conecpts but much more basic (works for store files only). In FileDB I have databases with more than 3gb size and 4 year in production working fine.\n\nRight now, the main problem here is concurrency. It's hard job keep file consistent with many processes/thread reading/writing. This is my priority now to fix as much as possible any concurrency problem and delivery a stable 2.0 version.\n\nSo, don't worry to much about database size or number of documents. Keep low (or zero) concurrency, work if small documents (or use FileStorage) and small transactions (do not insert 100.000 document at once).\n"
      }
    ]
  },
  {
    "number": 105,
    "title": "Version 2.0.0 release date",
    "created_at": "2016-01-21T11:00:28Z",
    "closed_at": "2016-07-23T22:12:14Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/105",
    "body": "Hello.\n\nWhen do you expect official release for 2.0?\n",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/105/comments",
    "author": "rokolab",
    "comments": [
      {
        "user": "a44281071",
        "created_at": "2016-01-22T01:38:57Z",
        "body": "I'm following it's progress closely, too.\n"
      },
      {
        "user": "mbdavid",
        "created_at": "2016-01-22T17:59:19Z",
        "body": "Hi! My initial plans was release v2 in jan/31. This release will be only to fix bugs founded in current rc and update all documentation. But, #96 issue is bit complicated to resolve... and It´s very important to fix. So maby I will need more one or two weeks.\n"
      },
      {
        "user": "rokolab",
        "created_at": "2016-01-22T20:04:48Z",
        "body": "Great. Tyt :+1: \n"
      },
      {
        "user": "mbdavid",
        "created_at": "2016-07-23T22:12:14Z",
        "body": "After a long time, now it's official: 31/07 :smile: \n"
      }
    ]
  },
  {
    "number": 104,
    "title": "AutoId for custom types with 2.0.0-rc",
    "created_at": "2016-01-21T09:20:46Z",
    "closed_at": "2016-07-23T17:48:24Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/104",
    "body": "Hi,\nHow can I configure `AutoId` for custom types with v2.0.0-rc?\n\nAs I can see, `BsonMapper.RegisterAutoId` method has been removed by 4952b03e and `LiteCollection.SetAutoId` does not handle custom types too.\n",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/104/comments",
    "author": "sergey-oleynik",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2016-01-22T17:56:15Z",
        "body": "Hi @remember664, yes, was removed... basicly because I thouth was not usable PER data type... maybe more usable PER collection. So for this v2 version, I only removed.\n\nDid you have plans to use in another datatype diferent than ObjectId, Guid or Int?\n"
      },
      {
        "user": "sergey-oleynik",
        "created_at": "2016-01-24T12:31:42Z",
        "body": "@mbdavid,\nI'm using `long` to support maximum documents count per collection(`UInt.MaxValue`).\nFor this case, I decided to generate ids from my code(by performance reason), but it's would be great to handle `long` out of box.\nAlso in other solutions `_id` can be a complex type.\n\nAnd I have one more question: is `Documents per collections: UInt.MaxValue` a hard limitation or it can be increased? \n"
      },
      {
        "user": "mbdavid",
        "created_at": "2016-01-25T21:41:46Z",
        "body": "Is your `long` _id sequencial or random? Current sequencial implementation are no concurrent safe and I didn't find an correct way to implement that (according my code structure). Now I'm using `max(_id) + 1` wicth is very fast by using index (but needs read, at least, 1 `IndexPage`). Another way that I try implement is using an \"oracle sequence\" like in `CollectionPage`. It's faster but I dont like too much (if I insert an document with future _id when this _id cames, will throw duplicate key).\n\nAbout collection limit count, I found this:\n    - `UInt DocumentCount` in `CollectionPage` class\n    - `int Count(name, query)` in `Aggregate.cs` class (in this case is worst, limited in `int`). It's ease no fix, adding and `LongCount` as `List<T>` do.\n\nThe problem to change to `long` in `CollectionPage` is that all file structure will change - current datafile will not work.\n"
      },
      {
        "user": "sergey-oleynik",
        "created_at": "2016-01-27T08:50:01Z",
        "body": "@mbdavid,\nThanks for description. I use `long` sequence and handle thread-safe by custom code(in current case, I don't need ability to insert entity with exact id)\n"
      }
    ]
  },
  {
    "number": 91,
    "title": "OnVersionUpdate called before Mapper Initialized from ctor",
    "created_at": "2015-12-23T08:29:22Z",
    "closed_at": "2016-01-02T06:03:29Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/91",
    "body": "When Using OnVersionUpdate we need to register custom type one more time.\nOnVersionUpdate is called from base(connectionString), before myDb ctor.\nIt's not that easy to solve...\nI don't mind calling UpdateDatabaseVersion() manually or override a method where I can init the mapper only once.\n\n``` C#\npublic myDb(string connectionString) : base(connectionString)\n{\n//Called Second\n    Mapper.RegisterType(TimeSpanToBson, BsonToTimeSpan);\n}\n protected override void OnVersionUpdate(int newVersion)\n    {\n// Called First\n        Mapper.RegisterType(TimeSpanToBson, BsonToTimeSpan);\n        switch (newVersion)\n        {\n            case 1:\n            [...]\n        }\n    }\n```\n",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/91/comments",
    "author": "kgallerin",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2015-12-23T14:55:08Z",
        "body": "Hi @techrising, are you using lastest version? In v2 use `OnModelCreating` override method to register custom mappings. Get lastest version from `master` branch.\n"
      },
      {
        "user": "kgallerin",
        "created_at": "2016-01-02T06:03:29Z",
        "body": "Switched to the v2 RC and it works.\nThanks,\n"
      }
    ]
  },
  {
    "number": 87,
    "title": "How to delete a record?",
    "created_at": "2015-12-06T13:28:11Z",
    "closed_at": "2015-12-14T12:20:14Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/87",
    "body": "It seems there is little document about how to delete a record!\n\n```\n        string key = DbHelper.GetCollectionName(typeof(T).FullName);//here to delete the . in name\n        using (var liteDb = new LiteDB.LiteDatabase(AppBase.AppContext.Current.DbName))\n        {\n            var op = liteDb.GetCollection<T>(key);\n            var value=new LiteDB.BsonValue(id);//id is an int parameter passed in\n            return op.Delete(value);\n        }\n```\n\nI used it like this and it return a false value.\nand I don't know why it fails.\nSo please give me some help.\nThanks.\n",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/87/comments",
    "author": "Skysper",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2015-12-06T21:19:28Z",
        "body": "Hi @Skysper, your code are correct. To delete is call `col.Delete(id)`. Did you try test before is record exists (using `col.Exists(Query.EQ(\"_id\", id))`)? Can you write a small unit test code to reproduce the problem?\n"
      },
      {
        "user": "Skysper",
        "created_at": "2015-12-07T03:24:36Z",
        "body": "There is something wrong with my code.I do the test,It's OK now.Thanks very much. @mbdavid \n"
      }
    ]
  },
  {
    "number": 85,
    "title": "No way to change LiteCollection type",
    "created_at": "2015-11-21T03:30:21Z",
    "closed_at": "2016-01-09T13:16:11Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/85",
    "body": "Previously, I would use LiteCollection.Database to get the same named collection with a different type, but this accessor has been removed in the 2.0.0 beta. The behavior itself was used for passing a collection without knowing the particular type to be stored _within_ said collection. I assume this would be a \"be sure this is safe\" sort of thing, but it would be equivalent to casting, after all. Any ideas of what to do instead (without passing the full database), or can such a feature be added?\n",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/85/comments",
    "author": "Dessix",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2015-11-23T12:06:53Z",
        "body": "Hi @Dessix, I didn't undestand why you could get same collection with diferent type. LiteCollection.Database was the same reference of initial LiteDatabase instance. Now, in v2, LiteCollection doesnt need LiteDatabase anymore, because uses only DbEngine (a new low layer of database). In DbEngine there is not strong type entity classes, only `BsonDocument`. But you can still use:\n\n```\nvar db = new LiteDatabase(\"...\");\nvar col1 = db.GetCollection<Customer>(\"customer\");\nvar col2 = db.GetCollection<Person>(\"customer\");\nvar col3 = db.GetCollection(\"customer\"); // same as GetCollection<BsonDocument>()\n...\n```\n"
      },
      {
        "user": "a44281071",
        "created_at": "2015-12-14T02:03:00Z",
        "body": "I think something about LiteDB:\n1. this is based mongodb, and more simple, but we use it efficient.\n2. BsonDocument, it has dynamic schema, like mongodb, but not like C#, it must have a choose: \"I use this in Strongly Typed Language\". But not: \"First, I can use it by BsonDocument\". So it's more important to achieve Strongly Type in same document.\n3. Sorry for chaos of language. I think mongodb use field \"_type\" for strongly type, like field \"_id\".\nthanks...\n"
      }
    ]
  },
  {
    "number": 51,
    "title": "Implement OnUpdate or OnCommit triggers",
    "created_at": "2015-08-19T04:48:30Z",
    "closed_at": "2015-08-19T12:51:59Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/51",
    "body": "Hi,\nI wrote an application that can send updates from editor to client. i want implement an db check organism in the client that check db last modify date before install it. can i use db file modified date for this kind of work?\nor How can I use global update trigger in the editor for each change like these:\n\n```\npublic class AppData : LiteDatabase {\n    public AppData()\n        : base(DataStore.ConnectionString) { }\n\n        protected override void Commit() {\n            var cl = this.GetCollection<DbInfo>(\"db\");\n            var dbi = cl.FindById(0);\n            dbi.ModifiedOn = DateTime.UtcNow;\n            cl.Update(area);\n            base.Commit()\n        }\n    }\n```\n\nEnglish isn’t my first language, so please excuse any mistakes.\n",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/51/comments",
    "author": "nildarar",
    "comments": [
      {
        "user": "nildarar",
        "created_at": "2015-08-19T12:43:54Z",
        "body": "I found some properties in `db.GetDatabaseInfo()` useful for this kind of work.\n\n```\nchangeID\nfileLength\nlastPageID\n```\n"
      },
      {
        "user": "mbdavid",
        "created_at": "2015-08-19T12:44:50Z",
        "body": "Hi @nildarar,\n\nI don´t think that override `Commit` method is a good ideia. Internal, this method just call `transaction.Commit()`, so this will works only with explicit `Commit` call (not implicit).\n\nYou ca use Last file modified date because only open and run queries didn´t change data file.\n"
      },
      {
        "user": "mbdavid",
        "created_at": "2015-08-19T12:46:46Z",
        "body": "Yes, you can use `GetDatabaseInfo()` too, but here has no DateTime to know when was last modified.\n\n`changeID` is a counter that increment after each commit\n`fileLenth` and `lastPageID` is total size/last page used - it´s not indicate if has any changes.\n"
      },
      {
        "user": "nildarar",
        "created_at": "2015-08-19T12:50:26Z",
        "body": "thanks @mbdavid.\nLiteDB can have a good future, thanks for sharing it.\n"
      }
    ]
  },
  {
    "number": 48,
    "title": "Huge Memory & CPU Usage",
    "created_at": "2015-08-13T12:26:10Z",
    "closed_at": "2015-08-22T13:40:45Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/48",
    "body": "Hello,\n\nI compared three versions of a test application. I saved a lot (10^7) objects of a type with three properties of type double.\nThe first version was coded with saving to a file with json serialization (Newtonsoft Json). The second was with litedb. The third with simply saving to a txt-File (File.WriteAllLines).\n\nCode LiteDB:\n\n```\n// Open database (or create if not exits)\nusing(var db = new LiteDatabase(@\".\\LiteDB.db\"))\n{\n    // Get customer collection\n    var col = db.GetCollection<Node>(\"nodes\");\n    col.Insert(nodes);\n}\n```\n\nThe results are:\n\n| Version | Memory Usage | Disk Space Usage | Time Needed [ms] |\n| --- | --- | --- | --- |\n| Newtonsoft Json | ~500MB | 673MB | 68,630ms |\n| LiteDB | ~6 675MB | 3 476MB | 497,464ms |\n| Text File | ~500MB | 950MB | 38,913ms |\n\nIs there a faster way of saving bigger datas?\n",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/48/comments",
    "author": "KeKl",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2015-08-13T23:32:27Z",
        "body": "Hi @KeKl, thanks for your comment.\n\nPerformance and memory use drops in LiteDB when you are working with huge mass of data. This reason is because LiteDB implement a full transaction and journal backup save. Transactions are memory only (thats why use too many memory) and journal write in disk twice.\n\nTo works fast with huge data in LiteDB, try to use:\n\n``` C#\nusing(var db = new LiteDatabase(@\"filename=.\\LiteDB.db; journal=false\"))\n{\n    var col = db.GetCollection<Node>(\"nodes\");\n    col.InsertBulk(nodes);\n}\n```\n- `nodes` var must returns and `IEnumerable<Node>` and will be better if uses `yield return`\n\nThis code must run fast, but never as Newtonsoft or Text File. LiteDB implements indexes (at least _id index), data in pages, and has a much more complex data structure.\n\nI have some plans to remove some features (like transactions and journals) in prior be simple, less memory usage and faster.\n"
      },
      {
        "user": "KeKl",
        "created_at": "2015-08-22T13:40:45Z",
        "body": "Hi @mbdavid,\n\nthank you for your answer.\n\nI tested also your implementation. It´s faster.\n\nThank you!\n\nRegards,\nKevin\n"
      }
    ]
  },
  {
    "number": 43,
    "title": "LiteDB.ObjectId cannot be cast to System.String",
    "created_at": "2015-07-12T19:55:02Z",
    "closed_at": "2015-07-26T22:59:20Z",
    "labels": [
      "bug",
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/43",
    "body": "Hello everyone,\n\nI have a one-to-many relationship and i want to model the relations independent so i use three collections. \n\none: the one-object\nsecond: the n-objects\nthird: a link-collection\n\nfurthermore i want to use Strings as primary-Key ( Guid )\n\nHere my example, I have no idea to fix the classcast-Exception. Maybe one of you can help me ? I am out of ideas\n\nThank you much\nMartin.\n\n---\n\n<code>\n\nusing GraphDMS.Core.Model.Core;\nusing LiteDB;\nusing System;\nusing System.Collections.Generic;\n\nnamespace testcase\n{\n\npublic class InfoElement\n{\n    public InfoElement() {}\n\n```\n    [BsonId]\n    public string Id { get; set; }       // Guid.toString()\n    public string Name { get; set; }\n```\n\n}\n\n// many : colChildren\n\npublic class InfoElementItem\n{\n    public InfoElementItem() {}\n\n```\n    [BsonId]\n    public string Id { get; set; }       // Guid.toString()\n    public string Name { get; set; }\n```\n\n}\n\n   public class LinkWrapper\n    {\n       public LinkWrapper() { }\n\n```\n    [BsonId]\n    public string Id { get; set; }\n    public string InfoElementId { get; set; }\n\n    public List<String> FkListInfoElementItem { get; set; }\n\n\n}\n\n\n\nclass Program\n{\n\n    static void Main(string[] args)\n    {\n\n\n        // Open database (or create if not exits)\n        using (var db = new LiteDatabase(@\"C:\\temp\\test.db\"))\n        {\n\n            InfoElement ie = new InfoElement();\n            ie.Id = Guid.NewGuid().ToString();\n\n            db.BeginTrans();\n\n\n            var colInfoElementList = db.GetCollection<InfoElement>(\"InfoElementList\");\n            colInfoElementList.Insert(ie);\n\n            var colInfoElementItemList = db.GetCollection<InfoElementItem>(\"InfoElementItemList\");\n\n            InfoElementItem uno = new InfoElementItem();\n            uno.Id = Guid.NewGuid().ToString();\n            colInfoElementItemList.Insert(uno);\n\n            InfoElementItem dos = new InfoElementItem();\n            dos.Id = Guid.NewGuid().ToString();\n            colInfoElementItemList.Insert(dos);\n\n            // link some kids\n\n            var colLinkWrapper = db.GetCollection<LinkWrapper>(\"LinkWrapperList\");\n\n            LinkWrapper link = new LinkWrapper();\n            link.InfoElementId = ie.Id;\n\n            link.FkListInfoElementItem = new List<String>();\n            link.FkListInfoElementItem.Add(uno.Id);\n            link.FkListInfoElementItem.Add(dos.Id);\n\n            colLinkWrapper.Insert(link);\n\n            db.Commit();\n\n\n        }\n\n        // query \n\n        using (var db = new LiteDatabase(@\"C:\\temp\\test.db\"))\n        {\n\n\n\n            var colInfoElementList = db.GetCollection<InfoElement>(\"InfoElementList\");\n            var colLinkWrapper = db.GetCollection<LinkWrapper>(\"LinkWrapperList\");\n\n            colLinkWrapper.EnsureIndex(x => x.InfoElementId);\n\n            foreach (InfoElement element in colInfoElementList.FindAll())\n            {\n                // {\"Das Objekt des Typs \\\"LiteDB.ObjectId\\\" kann nicht in Typ \\\"System.String\\\" umgewandelt werden.\"}\n                // LiteDB.ObjectId cannot be cast to System.String\n\n                foreach (var tagElement in colLinkWrapper.Find(Query.EQ(\"InfoElementId\", element.Id)))\n                {\n                    // here i want todo some stuff \n                    Console.WriteLine(\"I want to come here!\");\n                }\n            }\n        }\n\n\n    }\n\n}\n```\n\n}\n\n</code>\n",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/43/comments",
    "author": "mschwehl",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2015-07-13T12:50:00Z",
        "body": "Hi @mschwehl, I found the problem:\n\nWhen you insert `LinkWrapper` you do not set `Id` value, so LiteDB creates a new `Id` using `ObjectId`.\n\n```\nLinkWrapper link = new LinkWrapper();\nlink.Id = Guid.NewGuid().ToString(); // Missing here!\nlink.InfoElementId = ie.Id;\n```\n\nI will keep this issue open to fix this. The LiteDB must throw an error when you have an entity with `Id` but you don´t initialize.\n"
      },
      {
        "user": "engineering87",
        "created_at": "2020-12-26T16:21:07Z",
        "body": "Hi everyone,\r\ngot similar exception:\r\n\r\n`Unable to cast object of type 'LiteDB.ObjectId' to type 'System.Boolean'`\r\n\r\nI'm trying to insert this custom class that adds simple the property Id:\r\n\r\n`[BsonId]\r\npublic ObjectId Id { get; } = ObjectId.NewObjectId();`\r\n\r\nAny ideas?\r\n\r\nThanks"
      }
    ]
  },
  {
    "number": 42,
    "title": "System.IO.FileNotFoundException",
    "created_at": "2015-06-17T10:38:37Z",
    "closed_at": "2015-11-03T18:18:51Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/42",
    "body": "When to call\nusing (var db = new LiteDatabase(SettingsManager.DbFilePath))\n\nan error occurs\nA first chance exception of type 'System.IO.FileNotFoundException' occurred in mscorlib.dll\n\nbut despite that, everything works\n",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/42/comments",
    "author": "ambyte",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2015-06-17T12:41:24Z",
        "body": "Hi @ambyte? This DbFilePath is in local machine? It´s a valid path? Are directory exists? When you open a database that do not exists datafile, LiteDB creates a new data file.\n"
      },
      {
        "user": "ambyte",
        "created_at": "2015-06-18T06:04:02Z",
        "body": "Hi\nYes, DbFilePath is in local machine, path is valid and the directory is exists.\nYes, LiteDB creates a new data file.\nAll works fine, just in the debug window appears this error.\n\nI understood the reason.\nIn the constructor LiteDatabase in line this.Recovery.TryRecovery() LiteDb try open journal file, but it is missing, and in class RecoveryService in method OpenExclusiveFile this error appears.\nBut i don`t disable journaling. Write permissions to the folder have.\n"
      },
      {
        "user": "blackholeearth",
        "created_at": "2024-10-21T21:59:06Z",
        "body": "in my case directories did not exist. so\r\n\r\n            var fulldir = System.IO.Path.GetDirectoryName(dbFilePath);\r\n            System.IO.Directory.CreateDirectory(fulldir); \r\n            using (var db = new LiteDatabase(dbFilePath))\r\n           {"
      }
    ]
  },
  {
    "number": 40,
    "title": "If delete a collection, database size is not reduced. Why?",
    "created_at": "2015-06-09T13:03:25Z",
    "closed_at": "2015-06-10T10:06:33Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/40",
    "body": "",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/40/comments",
    "author": "ambyte",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2015-06-09T15:59:14Z",
        "body": "Hi @ambyte, LiteDB do not reduce disk space because It´s needs a shrink process to do that. When you delete a collection the space allocated are not in sequence on end of file. All data are in logic pages (with 4096 bytes each) inside data file.\n\nBut, all deleted pages will be reused in next add documents and datafile will grow only when there is not more empty pages in datafile.\n\nIn future version LiteDB will have a shirink operation that can be compact datafile. This operation is not automatic. If you see all databases (nosql or relation) do the same way.\n"
      }
    ]
  },
  {
    "number": 37,
    "title": "how can i order in db ",
    "created_at": "2015-05-25T16:38:22Z",
    "closed_at": "2015-07-26T23:00:18Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/litedb-org/LiteDB/issues/37",
    "body": "Hi : Mauricio \nthanks for your project first .\ni have a doubt that why there is no order in Find\n\n```\nIEnumerable<T> Find(Query query, int skip = 0, int limit = int.MaxValue)\n```\n\nfor example , i want take latest 100 docs , i have a field \"AddedTime\"\n the normal way is  order by AddedTime desc  then skip 0 and  take(limit) 100 ,that's what  i needed .\nbut without order ,the take is no sence .\n\nwhat should i do ?\n",
    "comments_url": "https://api.github.com/repos/litedb-org/LiteDB/issues/37/comments",
    "author": "JsonSong89",
    "comments": [
      {
        "user": "mbdavid",
        "created_at": "2015-05-25T16:43:59Z",
        "body": "Hi @178220709,\n\nIf you want take your lasted 100 docs using indexes, you can:\n\n1) Create an index on `AddedTime`\n2) Run `collection.Find(Query.All(\"AddedTime\", Query.Descending), 0, 100);\n\nNow you will list all yor documents in `AddedTime` desc order and get only 100 first.\n"
      },
      {
        "user": "JsonSong89",
        "created_at": "2015-05-26T07:16:23Z",
        "body": "Hi:  Mauricio \nthanks for you reply. \n\nthis is a little strange that order and query together\nand there is a overload \n\n```\nIEnumerable<T> Find(Expression<Func<T, bool>> predicate, int skip = 0, int limit = int.MaxValue)\n```\n\ncan i do my above example by this function?\nlooks like if i need order in db, i can't use linq ?\n\nhow about this function \n\n```\nIEnumerable<TEntity> Find(Expression<Func<TEntity, bool>> predicate, Dictionary<string,int> orderKeys, int skip = 0, int limit = int.MaxValue)\n```\n\nand we use \n\n```\nvar orderKeys = new Dictionary<string, int>()\n            {\n                {\"AddedTime\", Query.Descending},\n                {\"OtherFiled\", Query.Ascending}\n            };\n```\n\nto control the order \n"
      },
      {
        "user": "mbdavid",
        "created_at": "2015-05-26T19:26:35Z",
        "body": "Hi @178220709,\n\nThanks for your idea, but LiteDB doesn´t have order operations (like a relation database). LiteDB has only indexed fields that can be used to Find results in ASC or DESC order (use a skip-list index structure). The only way to get a sorted data (using an index) is when you get operation like `All`, `>´, ´<´ so I start searching data from begin to end (ASC) or end to begin (DESC). But it´s not the same of sort your document results.\n\nAnd why LiteDB has no internal order operations? Because .NET has implemented this operations in linq-to-object. `Find` method returns an `IEnumerable<T>` so you can run any local (non-indexed) linq operation in results only (like Order/GroupBy/Distinct).\n\n`col.Find(x => x.FirstName == \"John\").OrderBy(x => x.LastName)`\n"
      },
      {
        "user": "JsonSong89",
        "created_at": "2015-05-28T05:25:59Z",
        "body": "oh! \ni guess i know the means of LiteDB.\nbecause this is the local db , the cost of  data transport is less than other service dbms .\nafter the filter , as much as possible,we should use linq to object in memory?\neven ,we use Query.All immediaty , and do every operation in memory(when data is not very large)?\n"
      },
      {
        "user": "mbdavid",
        "created_at": "2015-05-28T16:36:21Z",
        "body": "You right, local db has no network and all operations must be executed in local machine.\n\nThe only optimization that can be do it is filter. So, `Find` operation use indexed document field. This is valid optimation. When you use `Query.All` and than implement a `Where` linq, it´s more expensive because you need read all data pages and deserialize all documento only to know if match with your clause.\n\nSo, my recomendation is: always use `Find` (when possible) and then use normal `Linq` implementation.\n"
      }
    ]
  }
]