[
  {
    "number": 60175,
    "title": "[Blazor] Component named \"Text\" can't be used directly inside a code block",
    "created_at": "2025-02-03T15:24:31Z",
    "closed_at": "2025-02-03T15:36:52Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/60175",
    "body": "### Is there an existing issue for this?\n\n- [x] I have searched the existing issues\n\n### Describe the bug\n\nGreetings!\nWe have a component called Text\nIt's simple.\n\n```\n<span class=\"@CssClass\">\n    @ChildContent\n</span>\n```\n\nWhen we use it, for example, in an `if` block.\n\n```\n@if (!string.IsNullOrWhiteSpace(SubTitle))\n{\n    <Text Size=\"@Sizes.L\">\n        @SubTitle\n    </Text>\n    \n}\n```\n\nWe get a compilation error\n`Error RZ1023 : \"<text>\" and \"</text>\" tags cannot contain attributes`\nBut if we wrap this component, for example, in a div, or use the full class name, everything is ok.\n```\n@if (!string.IsNullOrWhiteSpace(SubTitle))\n{\n    <div>\n        <Text  Size=\"@Sizes.L\">\n            @SubTitle\n        </Text>\n    </div>\n}\n```\n\n### Expected Behavior\n\nInside the `if` block, I use a component called `Text` and everything works correctly\n\n### Steps To Reproduce\n\n_No response_\n\n### Exceptions (if any)\n\n`Error RZ1023 : \"<text>\" and \"</text>\" tags cannot contain attributes`\n\n### .NET Version\n\n9.0.102\n\n### Anything else?\n\n_No response_",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/60175/comments",
    "author": "PeskovV",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2025-02-03T15:32:13Z",
        "body": "@PeskovV thanks for contacting us.\n\nThis is by design. Text is a reserved keyword in the razor language."
      },
      {
        "user": "PeskovV",
        "created_at": "2025-02-03T15:36:32Z",
        "body": "Thank you very much for your reply"
      }
    ]
  },
  {
    "number": 58023,
    "title": "RenderMode names really hard to explain and confused a lot beginners.",
    "created_at": "2024-09-23T03:04:58Z",
    "closed_at": "2024-09-23T14:17:13Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/58023",
    "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Is your feature request related to a problem? Please describe the problem.\n\nFor example:\r\nInteractiveServer = prerender +   InteractiveServer(prerender:false). \r\nnull = prerender/SSR\r\n\r\nThese are hard to explain to new programmers  and not good for attract people to use blazor.\n\n### Describe the solution you'd like\n\nIt would be better if the names are more clearly to understand. Such as:\r\n1. SSR\r\n2. Server   :   mode that without prerender\r\n3. WASM   :  mode that without prerender\r\n4. MixServer   : (= SSR + Server).\r\n5. MixWASM   : (= SSR + WASM).\r\n6. MixAuto   :   (= SSR + Server + WASM)\r\n\n\n### Additional context\n\n_No response_",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/58023/comments",
    "author": "FireTruck007",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2024-09-23T14:17:13Z",
        "body": "@FireTruck007 thanks for contacting us.\r\n\r\nThere's a learning curve to every concept and it's not clear to us that your proposal is better to the current framework implementation. In addition to that, this is not something that we can act on, as even if we wanted to change it, it would result in more confusion and bigger problems at that point."
      }
    ]
  },
  {
    "number": 57884,
    "title": "Blazor Minify JSON",
    "created_at": "2024-09-16T05:57:14Z",
    "closed_at": "2024-09-17T10:36:52Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/57884",
    "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Is your feature request related to a problem? Please describe the problem.\n\n_No response_\n\n### Describe the solution you'd like\n\nWould be great to have a built in feature to minify json files in Blazor before they are served to clients.\r\nThank you.\n\n### Additional context\n\n_No response_",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/57884/comments",
    "author": "Beblia",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2024-09-16T10:08:43Z",
        "body": "@Beblia thanks for contacting us.\r\n\r\nThis is not a feature that we are considering any time soon. In general, minification doesn't offer a lot of benefits when compression is applied to the response, which as of .NET 9.0 happens for all assets in the app automatically."
      },
      {
        "user": "Beblia",
        "created_at": "2024-09-29T01:22:25Z",
        "body": "Got it. Thank you."
      }
    ]
  },
  {
    "number": 57472,
    "title": "Blazor - Offer a way to force browsers to reload bundle.scp.css files",
    "created_at": "2024-08-22T21:38:04Z",
    "closed_at": "2024-08-23T12:42:51Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/57472",
    "body": "### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Is your feature request related to a problem? Please describe the problem.\r\n\r\nWhen re-publishing a Blazor app the browser will try and use the cached versions of all bundle.scp.css files, leading to styling issues when they are out of date. Because these are being loaded via the my-app.styles.css file, via an @import statement, I can't find a way to force reload them. Even if you apply a query parameter to the style sheet from index.html, something like my-app.styles.css?v1.1, the bundle.scp.css files will still load from the browser cache first.\r\n\r\n### Describe the solution you'd like\r\n\r\nAllow users to append a query string on imported bundle.scp.css files, something like \"bundle.scp.css?v1.1\". The extra query parameter will force the browser to reload the file.\r\n\r\n### Additional context\r\n\r\n_No response_",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/57472/comments",
    "author": "jofford",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2024-08-23T08:48:20Z",
        "body": "@jofford thanks for contacting us.\r\n\r\nThis has already been implemented in .NET 9.0 through fingerprinting the files."
      }
    ]
  },
  {
    "number": 57022,
    "title": ".NET 8 Blazor Web App Scoped Dependency Injection Behavior",
    "created_at": "2024-07-26T13:20:21Z",
    "closed_at": "2024-07-27T19:13:59Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/57022",
    "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Describe the bug\n\nStart with the standard Blazor Web App template.\r\nCreate a new \"service\" class and add it as scoped in program.cs, as such\r\n\r\n`builder.Services.AddScoped<MyService>();\r\n`\r\n\r\nUpon first navigation to the home page, a new instance of MyService is created--during pre-rendering. Another, seperate instance is created on the client. This second instance is then re-used for any additonal navigation from the client, until any page is refreshed--at which point, two instances are created again.\r\n\r\nThis would seem to me to be a bug. Why isn't the instance created during pre-rendering passed into the client?\r\n\r\nNote that for a singleton dependency, the single instance created on the server is, indeed, passed to the client. \r\n\n\n### Expected Behavior\n\nI would expect that a scoped dependency instantiated on the server would be used on the client. This works as expected for singletons.\r\n\r\nThe current behavior is completely unintuitive. \n\n### Steps To Reproduce\n\nStandard .NET 8 Blazor Web App template.\r\nObserve a scoped dependency be instantiated twice for every server request.\n\n### Exceptions (if any)\n\n_No response_\n\n### .NET Version\n\n8\n\n### Anything else?\n\n_No response_",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/57022/comments",
    "author": "donnykwitty",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2024-07-26T14:40:12Z",
        "body": "@donnykwitty thanks for contacting us.\r\n\r\nNot a bug, by design. Different render modes have different DI scopes. Especially, when we talk about Webassembly where the client runs effectively in a separate process."
      },
      {
        "user": "donnykwitty",
        "created_at": "2024-07-26T17:08:39Z",
        "body": "@javiercn I understand different render modes have different DI scopes. But please explain why the situation I've described would be by *design*. Why would you *design* it in such a way that a \"scoped\" dependency would be different while pre-rendering on the server? Why wouldn't you *prefer* to have the same instance of a \"scoped\" dependency be used on both the server & the client. Is there a technical reason for this? Somehow sharing the same instance for singletons works. Why not for scoped items?"
      },
      {
        "user": "donnykwitty",
        "created_at": "2024-07-28T01:32:10Z",
        "body": "Eventually--if more people start using Blazor--you'll hear from others, and you'll realize this isn't a good \"design\"."
      }
    ]
  },
  {
    "number": 56890,
    "title": "Static SSR sets null to an array property of a model for EditForm when submit.",
    "created_at": "2024-07-19T08:20:46Z",
    "closed_at": "2024-08-09T14:10:59Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/56890",
    "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Describe the bug\n\nAn array property of an object set to EditForm.Model is set correctly when the component is firstly rendered in the server.\r\n\r\nWhen, however, a user submits the form, the array property is set to null while others are correctly set.\r\nAs a result, the rendering process throws Null Reference exception where the array property is referenced for rendering.\r\n\r\nThis happens only when Static SSR; InteractiveServer works correctly.\r\nWhen it happens, browser's devtool shows, in network tap, that the form data is sent correctly when user clicks on submit button like;\r\n...\r\nInput.Title = some texts\r\nInput.Values[0] = true\r\nInput.Values[1] = true\r\n\r\nif the user checks on the first two inputs.\n\n### Expected Behavior\n\nan array property of an object should be bound correctly in Static SSR, too.\n\n### Steps To Reproduce\n\nProgram.cs\r\n```\r\n// ...\r\n        // this also adds Antiforgery services.\r\n        builder.Services.AddRazorComponents()\r\n            .AddInteractiveServerComponents();\r\n\r\n// ...\r\n\r\n        app.MapRazorComponents<App>()\r\n            .AddInteractiveServerRenderMode();\r\n// ...\r\n```\r\n\r\nA routable component.\r\n```\r\n@page \"/my-page\"\r\n@implements IDisposable\r\n\r\n<EditForm method=\"post\" Enhance EditContext=\"@editContext\" FormName=\"my_form\" OnValidSubmit=\"HandleSubmitAsync\">\r\n    <div class=\"mb-3\">\r\n        <label for=\"model-title\">Title</label>\r\n        <InputText @bind-Value=\"Input!.Title\" id=\"model-title\" \r\n            class=\"form-control\" autocomplete=\"off\" />\r\n        <div>\r\n            <ValidationMessage For=\"() => Input.Title\" />\r\n        </div>\r\n    </div>\r\n    @*Null exception is thrown *@\r\n    @for (int i = 0; i < Input!.Values.Length; i++)\r\n    {\r\n      var index = i;\r\n      <div class=\"form-check form-check-inline\">\r\n        <InputCheckbox @bind-Value=\"@Input!.Values[index]\"\r\n                class=\"form-check-input\" id=\"@($\"value-{index}\")\" autocomplete=\"off\" />\r\n        <label class=\"form-check-label\" for=\"@($\"value-{index}\")\">Value @index</label>\r\n      </div>\r\n    }\r\n    <div>\r\n       <ValidationMessage For=\"() => Input.Values\" />\r\n    </div>\r\n   <button class=\"btn btn-primary\" type=\"submit\">Submit</button>\r\n</EditForm>\r\n\r\n@code {\r\n   [SupplyParameterFromForm] public InputModel? Input { get; set; }\r\n   private EditContext? editContext;\r\n   private ValidationMessageStore? messageStore;\r\n   protected override void OnInitialized()\r\n   {\r\n      Input ??= new();\r\n      editContext = new(Input);\r\n      editContext.OnValidationRequested += HandleValidationRequested;\r\n      messageStore = new(editContext);\r\n   }\r\n\r\n   private async Task HandleSubmitAsync()\r\n   {\r\n      // some asynchronous jobs.\r\n   }\r\n\r\n   private void HandleValidationRequested(object? sender,  ValidationRequestedEventArgs args)\r\n   {\r\n      messageStore?.Clear();\r\n      // validation works\r\n   }\r\n\r\n   public void Dispose()\r\n   {\r\n       if (editContext is not null)\r\n       {\r\n           editContext.OnValidationRequested -= HandleValidationRequested;\r\n       }\r\n   }\r\n\r\n   public class InputModel\r\n   {\r\n      public string Title { get; set; } = \"\";\r\n      public bool[] Values {get; set;} = [ true, false, false, false, false, false, true];\r\n   }\r\n}\r\n```\n\n### Exceptions (if any)\n\nNullRefereceException\n\n### .NET Version\n\n8.0.303\n\n### Anything else?\n\nasp.net core 8.0.7\r\nIDE : VS 2022 17.10.4\r\nBrowser: Google Chrome 126.0.6478.128 (64bit)",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/56890/comments",
    "author": "BigSquareHasNoEdge",
    "comments": [
      {
        "user": "BigSquareHasNoEdge",
        "created_at": "2024-07-19T15:29:28Z",
        "body": "Sorry. This is not completed."
      },
      {
        "user": "javiercn",
        "created_at": "2024-08-09T14:10:18Z",
        "body": "This is by design.\r\n\r\nElements in a collection need to be contiguous for binding and starting from 0. If you need to use a non-contiguous range of elements (like is your case) you should use a dictionary instead."
      }
    ]
  },
  {
    "number": 56708,
    "title": "PageTitle component added in BuildRenderTree do not update the \"title\".",
    "created_at": "2024-07-10T00:04:28Z",
    "closed_at": "2024-07-10T10:59:32Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/56708",
    "body": "### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Describe the bug\r\n\r\nThe page title is not updated from a `PageTitle` component, added to a component in `BuildRenderTree`.\r\n\r\n### Expected Behavior\r\n\r\nThe `title` in the `head` should be updated with the text.\r\n\r\n### Steps To Reproduce\r\n\r\n`dotnet new blazor`\r\n\r\nAdd `Render.razor.cs` to the `Pages` directory:\r\n\r\n```\r\nusing System;\r\nusing Microsoft.AspNetCore.Components;\r\nusing Microsoft.AspNetCore.Components.Rendering;\r\nusing Microsoft.AspNetCore.Components.Web;\r\nnamespace Test.Components.Pages;\r\n\r\n[Route(\"/render\")]\r\npublic class Render : ComponentBase {\r\n\r\n    protected override void OnAfterRender(bool firstRender) {\r\n        if (firstRender) {\r\n            StateHasChanged();\r\n        }\r\n    }\r\n\r\n    protected override void BuildRenderTree(RenderTreeBuilder builder) {\r\n        base.BuildRenderTree(builder);\r\n\r\n        // Add PageTitle component\r\n        builder.OpenComponent<PageTitle>(0);\r\n        builder.AddContent(1, \"Test Title Here\");\r\n        builder.CloseComponent();\r\n\r\n        // Add other components or content here\r\n        builder.OpenElement(2, \"div\");\r\n        builder.AddContent(3, \"Content of Component A\");\r\n        builder.CloseElement();\r\n    }\r\n}\r\n```\r\n\r\nAdd the `render` page to the menu in `NavMenu.razor`.\r\n\r\n`dotnet run`\r\n\r\nNotice that the page title is updated on all the other pages, but not the \"/render\" page.\r\nWhen navigating to the `render` page, the `title` is emptied/cleared.\r\n\r\n### Exceptions (if any)\r\n\r\n_No response_\r\n\r\n### .NET Version\r\n\r\n8.0.303\r\n\r\n### Anything else?\r\n\r\n_No response_",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/56708/comments",
    "author": "rpc-scandinavia",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2024-07-10T08:07:15Z",
        "body": "@rpc-scandinavia thanks for contacting us.\r\n\r\nThere's no difference between compiled razor code and handcrafted rendertrees. We suggest you look at the generated razor code for another component where it works to spot the differences between the generated code and your code."
      },
      {
        "user": "rpc-scandinavia",
        "created_at": "2024-07-10T10:57:30Z",
        "body": "@javiercn, I did not think of looking in the generated file.\r\nThis works:\r\n\r\n```\r\n// Add PageTitle component\r\nbuilder.OpenComponent<PageTitle>(0);\r\nbuilder.AddAttribute(1, \"ChildContent\", (RenderFragment)((builder2) => {\r\n    builder2.AddContent(2, \"Test Title Here\");\r\n}));\r\nbuilder.CloseComponent();\r\n```\r\n\r\nThis don't work:\r\n\r\n```\r\n// Add PageTitle component\r\nbuilder.OpenComponent<PageTitle>(0);\r\nbuilder.AddContent(1, \"Test Title Here\");\r\nbuilder.CloseComponent();\r\n```\r\n\r\nNormally you use the component like this: `<PageTitle>Test Title Here</PageTitle>`, so I assumed that the title text should be added with `AddContent`.\r\n\r\nThank you for the hint."
      }
    ]
  },
  {
    "number": 55997,
    "title": "Better UX - show \"loading\" (anything) while app is starting up the .NET WebAssembly runtime (for AutoRender, prerender false) ",
    "created_at": "2024-05-31T13:57:54Z",
    "closed_at": "2024-06-01T11:49:41Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/55997",
    "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Is your feature request related to a problem? Please describe the problem.\n\nIs there any way how to show some animation or anything while cached WASM is starting up? I found solution to force downloading resources every time so it can be render by server first but it costs resources of course.\n\n### Describe the solution you'd like\n\nI would like to have option to display loading animation on component level while WASMis starting up.\n\n### Additional context\n\n_No response_",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/55997/comments",
    "author": "Laftek",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2024-05-31T17:49:20Z",
        "body": "@Laftek thanks for contacting us.\r\n\r\nYou should already be able to do this with CSS by wrapping your webassembly component in a `div` and having an animation run on the div when the element is empty if you aren't prerendering.\r\n\r\nIf you are prerendering, you can render different content during prerendering.\r\n\r\nIf you want to do this completely in Blazor, create a component wrapper and have that component render your component."
      },
      {
        "user": "Laftek",
        "created_at": "2024-05-31T18:01:32Z",
        "body": "Thank you @javiercn for suggestions. What can I use as reference element for if statement? Is there any API for wasm to be “loaded”?\r\n\r\nAlso could you point me to some resources regarding prerendering different content? It sounds interesting. Is there out of box blazor solution or you meant some custom javascript script?"
      },
      {
        "user": "javiercn",
        "created_at": "2024-05-31T19:28:15Z",
        "body": "@Laftek just HTML and CSS\r\n```\r\n<div class=\"my-class\"></div>\r\n\r\n<style>\r\n.my-class:not(:has(*)) {\r\n   background-image: url(\"data:....\");\r\n}\r\n</style>\r\n```\r\n\r\nThe moment that the wasm component renders inside the div the styles stop being applicable."
      },
      {
        "user": "Laftek",
        "created_at": "2024-06-01T11:49:42Z",
        "body": "Thanks @javiercn . Works like a charm!"
      }
    ]
  },
  {
    "number": 55273,
    "title": "Blazor.registerCustomEventType doesn't work with static SSR",
    "created_at": "2024-04-22T12:01:42Z",
    "closed_at": "2024-04-22T16:45:50Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/55273",
    "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Describe the bug\n\nBlazor.registerCustomEventType doesn't look working with static SSR\n\n### Expected Behavior\n\nIt is expected that Blazor.addEventListener handler is called after as a custom event was registered with Blazor.registerCustomEventType.\n\n### Steps To Reproduce\n\n```\r\nfunction FireCustomEvent(elem) { \r\n    const event = new CustomEvent(\"customevent\", { bubbles: true, detail: elem });\r\n    elem.dispatchEvent(event);\r\n}\r\n\r\nBlazor.registerCustomEventType('customevent', {\r\n    browserEventName: 'customevent',\r\n    createEventArgs: event => {\r\n        return { 'prop1': 1 };\r\n    }\r\n});\r\n\r\n// it doesn't work\r\nBlazor.addEventListener('customevent', function () {\r\n    console.log('???? customevent event handled with Blazor ????');\r\n});\r\n```\n\n### Exceptions (if any)\n\n_No response_\n\n### .NET Version\n\n8.0.100\n\n### Anything else?\n\n_No response_",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/55273/comments",
    "author": "sgarnovsky",
    "comments": [
      {
        "user": "SteveSandersonMS",
        "created_at": "2024-04-22T16:45:50Z",
        "body": "It looks like you're triggering a DOM event by calling `elem.dispatchEvent(event)`\r\n\r\nWith that being the case, you would receive the event notification by using the DOM event listener API, `elem.addEventListener(...)`.\r\n\r\nYou cannot use `Blazor.addEventListener` for that because `Blazor.addEventListener` is for listening to Blazor's events, which are not DOM events. So simply change to use `elem.addEventListener(...)` and it should work.\r\n\r\nThe use of these DOM events is completely independent of Blazor."
      },
      {
        "user": "sgarnovsky",
        "created_at": "2024-04-22T19:35:47Z",
        "body": "> You cannot use `Blazor.addEventListener` for that because `Blazor.addEventListener` is for listening to Blazor's events, which are not DOM events. So simply change to use `elem.addEventListener(...)` and it should work.\r\n> \r\n> The use of these DOM events is completely independent of Blazor.\r\n\r\nYes, sure, it works with elem.addEventListener fine.\r\n\r\nMaybe, I missed the main point to ask if Blazor.registerCustomEventType can be used with Blazor static SSR. \r\nReally, I didn't find a sample how to dispatch a custom Blazor event with static SSR.\r\n\r\n\r\n"
      },
      {
        "user": "SteveSandersonMS",
        "created_at": "2024-04-22T19:40:45Z",
        "body": "> Really, I didn't find a sample how to dispatch a custom Blazor event with static SSR.\r\n\r\nStatic SSR produces HTML from your server only, so the only event handlers would be those written in JavaScript. If you want to handle events with .NET code, you'll need to use an interactive rendermode. That's the key difference between static and interactive rendering."
      },
      {
        "user": "sgarnovsky",
        "created_at": "2024-04-22T19:58:12Z",
        "body": "> Static SSR produces HTML from your server only, so the only event handlers would be those written in JavaScript. If you want to handle events with .NET code, you'll need to use an interactive rendermode. That's the key difference between static and interactive rendering.\r\n\r\nThank you for the confirmation. \r\nIt means the Blazor static SSR doesn't work with Blazor.registerCustomEventType. \r\nI.e. there is no way to dispatch a registered custom blazor event in this Blazor app mode."
      },
      {
        "user": "SteveSandersonMS",
        "created_at": "2024-04-23T08:36:20Z",
        "body": "> I.e. there is no way to dispatch a registered custom blazor event in this Blazor app mode.\r\n\r\nRight, because there's nothing to dispatch it to. Once the page has finished rendering statically, your code has finished running."
      },
      {
        "user": "sgarnovsky",
        "created_at": "2024-04-23T19:42:19Z",
        "body": "> Once the page has finished rendering statically, your code has finished running.\r\n\r\nAt some point, it is not a quite right statement. \r\nBlazor SSR renders the static html content, but a client-side code continues running and can do a lot of things.\r\nFor example, Blazor has a client-side \"enhancedload\" event dispatching and I've just assumed I could create a custom event at the Blazor level too instead of using a browser document level custom event."
      }
    ]
  },
  {
    "number": 55232,
    "title": "Resumable State Machine for Blazor",
    "created_at": "2024-04-20T06:26:52Z",
    "closed_at": "2024-04-21T12:24:15Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/55232",
    "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Is your feature request related to a problem? Please describe the problem.\n\nIt's related to a problem :\r\n```Rendering components can trigger more rendering in those components```\r\nSometimes I can not control things or it would break my workflows so the components would be updated to contain nothing when it's reloading then when the items are fetched it lists the items again, therefore reloading my component causes the stuffs on screen to be 'flashing', I can fix the problem myself but the most simple solution I can think of is this feature I am suggesting\n\n### Describe the solution you'd like\n\nTwo methods are introduced in Blazor : Resume & Pause\r\nI can ```Pause``` Blazor so anything happening is not going to be updated to the browser, I can manually ```Resume``` Blazor if I desire stuffs on screen to be updated\n\n### Additional context\n\nIt should be a global method for the entire 'Blazor' framework not just for the component",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/55232/comments",
    "author": "Xyncgas",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2024-04-21T09:11:15Z",
        "body": "@Xyncgas thanks for contacting us.\r\n\r\nThis scenario is already possible PersistentComponentState is the solution for these cases. We don't plan to introduce adhoc method to the component model for this.\r\n\r\nIf you want a different solution, you can implement it in your own component base class. We definitely do not plan to let users control things like this outside of their own components."
      },
      {
        "user": "Xyncgas",
        "created_at": "2024-04-21T12:24:01Z",
        "body": "thanks"
      }
    ]
  },
  {
    "number": 55082,
    "title": "Questions about Blazor component disposal",
    "created_at": "2024-04-11T14:35:04Z",
    "closed_at": "2024-04-16T17:10:44Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/55082",
    "body": "This is a continuation of prematurely closed #54876.\r\n\r\nIs it possible for Dispose to be called _between_ OnInit, OnInitAsync, OnParametersSet, and OnParametersSetAsync, or only _after_ those methods are called? If it can be called between them, then (for example) OnParametersSet would always have to check whether the component is disposed.\r\n\r\ncc: @guardrex \r\ncc: @javiercn ",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/55082/comments",
    "author": "kjkrum",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2024-04-16T17:10:44Z",
        "body": "Thanks for raising this.\r\nThis depends very much on your application code.\r\nIf you do expect that the component can be disposed during initialization, then you should expect that it may be disposed during OnParametersSet."
      },
      {
        "user": "kjkrum",
        "created_at": "2024-04-17T15:19:24Z",
        "body": "@mkArtakMSFT It was already established in the first prematurely-closed question that it cannot be disposed _during_ OnParametersSet, as Dispose and OnParametersSet are called on the same thread. I only expect that the component can be disposed during initialization because the docs say it can but say nothing else. By saying that it depends on my application code, are you asserting that it does not happen because of user interaction or navigation?"
      }
    ]
  },
  {
    "number": 54888,
    "title": "One Dll File In Wasm",
    "created_at": "2024-04-01T21:33:44Z",
    "closed_at": "2024-04-02T18:44:40Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/54888",
    "body": "### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Describe the solution you'd like\r\n\r\nI would like to request a new feature for the blazor that addresses two issues related to downloading assemblies.\r\n\r\n1. Single File Assembly Download: Currently, when multiple people simultaneously request the assemblies, it can put a heavy load on the server. To alleviate this, I propose providing a single file, such as a zip or rar file, containing all the required assemblies for download. This way, instead of each user making individual requests for each assembly, they can download the consolidated file, reducing the server load significantly.\r\n\r\n2. Fast Download Option: In addition to the single file download, I would also like to suggest implementing a fast download method that can take advantage of the user's network maximum speed. Currently, the standard GET request for downloading files may not utilize the full network bandwidth, resulting in slower download speeds. By introducing a dedicated fast download option, users can enjoy faster download speeds, especially when they have a high-speed internet connection.\r\n\r\nI understand that modifying the JavaScript code of Blazor may not be the recommended approach, as it can lead to compatibility issues. Therefore, I believe implementing these features at the server level would be more appropriate.\r\n\r\nTo summarize the following features to be considered for implementation:\r\n\r\n1. Provide a single file (zip or rar) containing all the required assemblies for download, reducing server load when multiple users request the assemblies simultaneously.\r\n2. Implement a fast download option that maximizes the user's network speed, allowing for faster downloads, especially for users with high-speed internet connections.\r\n3. Make the fast download option configurable via a service option, giving users the flexibility to enable or disable it based on their requirements.\r\n\r\n### Additional context\r\n\r\n_No response_",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/54888/comments",
    "author": "wisamidris7",
    "comments": [
      {
        "user": "wisamidris7",
        "created_at": "2024-04-01T22:34:02Z",
        "body": "> 2.Implement a fast download option\r\n\r\nBy option i mean option for us developer\r\n"
      },
      {
        "user": "javiercn",
        "created_at": "2024-04-02T10:26:55Z",
        "body": "@wisamidris7 thanks for contacting us.\r\n\r\nWe are not planning to do this. We've already tried some of your suggestions and we know don't work, but even if we haven't you don't provide any empirical proof to any of your claims, so I hope you understand that we don't plan to do any significant work if we don't know it'll pay off.\r\n\r\nAs for your two proposals:\r\n1) Will hurt caching dramatically. You can already achieve something like this if you AoT your app.\r\n2) This will definitely make the download slower and prevent the browser from performing streaming decompression among other optimizations which will likely result in a worse time to interactive even if you could get the download to happen faster (which I highly doubt)."
      },
      {
        "user": "wisamidris7",
        "created_at": "2024-04-02T18:44:40Z",
        "body": "I understand it!"
      }
    ]
  },
  {
    "number": 54852,
    "title": "InputText crash if mistyped attribute",
    "created_at": "2024-03-30T19:25:28Z",
    "closed_at": "2024-04-02T10:33:17Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/54852",
    "body": "### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Describe the bug\r\n\r\nIf I use the incorrect text: @bind-value, there is a crash:\r\n\r\n<InputText @bind-value=\"Model.Choice1\" />\r\n\r\nThe fix is to use the correct text: @bind-Value\r\n\r\n<InputText @bind-Value=\"Model.Choice1\" />\r\n\r\nHowever should it crash? \r\n\r\n\r\n\r\n### Expected Behavior\r\n\r\nI expect it to ignore the incorrectly typed @bind-value as InputText uses @bind-Value\r\n\r\n### Steps To Reproduce\r\n\r\n_No response_\r\n\r\n### Exceptions (if any)\r\n\r\n_No response_\r\n\r\n### .NET Version\r\n\r\n.net 8.0\r\n\r\n### Anything else?\r\n\r\n_No response_",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/54852/comments",
    "author": "AJ1000",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2024-04-02T10:33:17Z",
        "body": "@AJ1000 thanks for contacting us.\r\n\r\nThat's expected. `@bind` is only syntactic sugar that gets lowered to `Value=\"_value\"` and `ValueChanged=(newValue => _value = newValue)`.\r\n\r\nThe component contract is `SetParametersAsync(ParameterView parameters)` which is essentially an `IDictionary<string, object>`.\r\n\r\nThe error you are seeing is because your component extends ComponentBase which calls `SetParametersAsync` which has logic on it to throw an exception if it can't assing a parameter.\r\n\r\nThis behavior is by design, if you want to change it you can override SetParametersAsync in your component and apply the parameters yourself.\r\n\r\nWe don't plan to change this behavior as it would be a breaking change and would result in apps silently failing when there are issues like the one described above that would simply get ignored and produce the wrong result instead of throwing an error."
      }
    ]
  },
  {
    "number": 54548,
    "title": "Multiple ways to short-circuit pipeline is a poor design and should be reconsidered",
    "created_at": "2024-03-15T02:01:23Z",
    "closed_at": "2024-03-18T14:03:32Z",
    "labels": [
      "question",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved",
      "design-proposal",
      "area-hosting"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/54548",
    "body": "## Summary\r\n\r\nHaving the ability to call Run on the pipeline is confusing because you can have multiple calls to it and get no error, and the last element in the pipeline is effectively a Run anyway. Run has no logical difference to Use if the middleware in the Use call short-circuits. I propose removing Run because it can cause Use calls to be skipped and there is no error to inform the programmer of this issue.\r\n\r\n## Motivation and goals\r\n\r\n- Simplify the framework by reducing the number of methods that can be called\r\n- Remove ambiguity as to which should be used\r\n- Avoid silent pitfalls\r\n\r\n## Risks / unknowns\r\n\r\nThe risk is that is a breaking change, some might be using the Run call.\r\n\r\n## Examples\r\n\r\nThere are two ways to short-circuit:\r\n\r\nBy not calling `next.Invoke()`...\r\n\r\n```\r\napp.Use(async (context, next) =>\r\n{\r\n    // Do something\r\n    // Don't call await next.Invoke();\r\n});\r\n```\r\n\r\nAnd by calling `app.Run` instead of `app.Use` like so...\r\n\r\n```\r\napp.Run(async (context) =>\r\n{\r\n    // Do something\r\n});\r\n```\r\n\r\nRun is signalling to the programmer that no more pipeline elements will execute, whereas app.Use may or may not short-circuit. If Run is intended, why not just order the pipeline correctly so that the last item in the chain is the last item? The naming of Run is also ambiguous with the later call to Run which looks visually unappealing as if it were a bug when it isn't.",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/54548/comments",
    "author": "PonchoPowers",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2024-03-17T13:11:59Z",
        "body": "@BonnieSoftware thanks for contacting us.\r\n\r\nThis is not a direction we plan to take. It's a huge breaking change and we haven't received significant feedback about it to justify it, and even so, we would prioritize backwards compatibility over \"poor design\" (a value judgement that we and others don't necessarily share)."
      },
      {
        "user": "PonchoPowers",
        "created_at": "2024-03-17T13:44:18Z",
        "body": "If people don't necessarily share the same view, what view do they share, how is `app.Run` of a good design, what use is it?"
      },
      {
        "user": "PonchoPowers",
        "created_at": "2024-03-18T18:03:03Z",
        "body": "I feel quite strongly about this, the issue should be reopened, in all the codebases in Github, the only time it is ever used is in tests relating to itself, the odd bit of debugging, and examples showing it can be used. In all of these cases `app.Use` could have simply been used. Github has 28 million public repositories. Therefore, how big of a breaking change is this really?\r\n\r\nIt particularly looks good when used like so, as the following isn't at all confusing...\r\n\r\n```\r\napp.Run();\r\napp.Run();\r\n```\r\n\r\nAlso, could you please answer my earlier question about what use it is, if even possible?"
      }
    ]
  },
  {
    "number": 54263,
    "title": "Blazor Component (using RenderMode Interactive Server) - Incorrect Behavior on Navigating between pages, Component is not re-created",
    "created_at": "2024-02-28T20:01:31Z",
    "closed_at": "2024-02-29T17:44:51Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/54263",
    "body": "### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Describe the bug\r\n\r\nI have 2 pages, Page1, Page2. Both pages use the same Counter component with render mode: interactive server that is specified on the Counter components. \r\n\r\n`<Counter @rendermode=\"InteractiveServer\"></Counter>`\r\n\r\nNOTE: The Counter component inside its mark up does not specify render mode.\r\nEach page also contains a navigation link to the other page.\r\n\r\nWhen a user is on Page1 and increments the counter and then navigates (using anchor link) to Page 2 (that has also a Counter) the count is retained from Page1. Then, incrementing Counter on Page2 continues the count. When user navigates back Page1 (using anchor link) the count is now the sum of counts from Page1 and Page2.\r\n\r\n### Expected Behavior\r\n\r\nI expect the component to be re-created and its state reset once a user navigates to another page from current page.\r\nThat does not happen. The counter component appears to live (and retain its state) across page navigations using an anchor tag.\r\n\r\n_If this is the correct behavior for an interactive server side component using web socket connection in an SSR page then how can we re-use components across pages without retaining component state?_\r\n\r\n### Steps To Reproduce\r\n\r\nCreate a sample SSR blazor app, select interactivity per component. \r\nCreate 2 pages.\r\nPlace Counter component on both pages.\r\nNOTE: Remove from the Counter component the \"@rendermode InteractiveServer\", instead place render modes explicitly where you use the counter on each page as:\r\n\r\n`<Counter @rendermode=\"InteractiveServer\"></Counter>`\r\n\r\nAdd this mark up to navigate between the pages:\r\n\r\n`<a href=\"/Page2\">Go to page 2</a>`\r\n\r\n`<a href=\"/Page1\">Go to page 1</a>`\r\n\r\nGo to page 1, increment counter, use link to go to page 2 (observe the count is from page 1). Increment counter again and go back to page 1 (observe the count continues from page 2).\r\n\r\n### Exceptions (if any)\r\n\r\n_No response_\r\n\r\n### .NET Version\r\n\r\n.net 8 Blazor SSR Interactive Server\r\n\r\n### Anything else?\r\n\r\n_No response_",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/54263/comments",
    "author": "htmlsplash",
    "comments": [
      {
        "user": "htmlsplash",
        "created_at": "2024-02-28T22:29:21Z",
        "body": "UPDATE: Interesting observation\r\n\r\nIf I inject into the SSR Page1 (or Page2) current user accessed from current Http context (which changes between page requests by me logging-out from User1 and logging-in as User2 before going from Page1 to Page2) and pass that to the Counter component as a parameter, that triggers/forces the component to be re-created and the component state is reset.\r\n\r\nThis behavior is opposite to the re-use of the component across pages behavior reported above."
      },
      {
        "user": "mkArtakMSFT",
        "created_at": "2024-02-29T17:44:51Z",
        "body": "Thanks for contacting us. This behavior is by design and it's done to optimize DOM manipulations. The framework tries to retain as much of the content in the page as possible, so that only minimal changes are applied. In your case, you don't want this behavior, and you can control that by applying the `@key` directive to the `Counter` components on each page, specifying different values, so that the DOM Merging algorithm doesn't think that they're the same component to be preserved."
      },
      {
        "user": "htmlsplash",
        "created_at": "2024-02-29T19:09:39Z",
        "body": "Thanks, that resolved the issue. I don't want to be a party pooper but I think this is a dangerous default. \r\n\r\nImagine a page (Page1) with many components and then another unrelated page (Page10) has also many components but one of these components is the same as on Page1. This will result in the component (and its state) to appear on Page10 (from Page1). \r\nTo make matters worse, consider an example of user page navigation that is considered a normal flow: \r\n\r\nPage1, Page2, Page3. \r\n\r\nBut in a rare case when the user performs some action that allows them to navigate like this: \r\n\r\nPage1, Page10, Page2, Page3.\r\n\r\nNow you have this rare bug surface itself on the site because when going from Page1 to Page10, or from Page10 to Page1 will share the same component with its state.\r\n\r\nWith the workaround solution (in a framework were component re-use is common) and to avoid this default sharing behavior is to specify a key on every component placed on page at all times.  Otherwise, inadvertently, you might end up with undesired behavior. I wonder if could better then this?\r\n\r\n"
      }
    ]
  },
  {
    "number": 54105,
    "title": "Blazor Web Assembly + Hybrid: HttpClient Upload Progress with ProgressableStreamContent",
    "created_at": "2024-02-18T20:49:55Z",
    "closed_at": "2024-02-21T11:00:11Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/54105",
    "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Describe the bug\n\nHttpClient buffers the whole request stream, when having a ProgressableStreamContent that writes the source stream in chunks to the request stream.\r\n\r\nThe request starts after the completion of SerializeToStreamAsync() method, so it renders progress reporting useless.\r\n\r\nIf this is by design, are there any workarounds?\n\n### Expected Behavior\n\nThe request should start after the first FlushAsync(), so that progress reporting can work\n\n### Steps To Reproduce\n\n`public class ProgressableStreamContent : HttpContent\r\n    {\r\n        private readonly HttpContent content; \r\n        public event EventHandler<Progress2EventArgs> ProgressChanged;\r\n\r\n        public ProgressableStreamContent(HttpContent content)\r\n        {\r\n            try\r\n            {\r\n\r\n                this.content = content ?? throw new ArgumentNullException(nameof(content));\r\n\r\n                foreach (var header in content.Headers)\r\n                {\r\n                    Headers.Add(header.Key, header.Value);\r\n                }\r\n\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n\r\n            }\r\n        }\r\n \r\n        protected override async Task SerializeToStreamAsync(Stream stream, System.Net.TransportContext? context)\r\n        {\r\n            var buffer = new byte[1024 * 64 * 1];\r\n            TryComputeLength(out long size);\r\n            var uploaded = 0L;\r\n\r\n            using (var s = await content.ReadAsStreamAsync())\r\n            {\r\n                while (true)\r\n                {\r\n                    var length = await s.ReadAsync(buffer, 0, buffer.Length);\r\n                    if (length == 0) break;\r\n \r\n                    await stream.WriteAsync(buffer, 0, length);\r\n                    await stream.FlushAsync();\r\n\r\n                    uploaded += length;\r\n                     \r\n                    ProgressChanged?.Invoke(this, new Progress2EventArgs(uploaded, size));\r\n                }\r\n\r\n                ProgressChanged?.Invoke(this, new Progress2EventArgs(uploaded, size));\r\n            }\r\n\r\n        }\r\n\r\n        protected override bool TryComputeLength(out long length)\r\n        {\r\n            length = content.Headers.ContentLength.GetValueOrDefault();\r\n            return true;\r\n        }\r\n\r\n        protected override void Dispose(bool disposing)\r\n        {\r\n            if (disposing)\r\n            {\r\n                content.Dispose();\r\n            }\r\n            base.Dispose(disposing);\r\n        }\r\n    }`\n\n### Exceptions (if any)\n\n_No response_\n\n### .NET Version\n\n8\n\n### Anything else?\n\n_No response_",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/54105/comments",
    "author": "drmaven",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2024-02-19T11:19:14Z",
        "body": "@drmaven thanks for contacting us.\r\n\r\nThis is by design. Streaming the request body is not generally supported on the underlying web apis (only Chrome/Edge support it as of recently), so any request body needs to be completely buffered before it can be sent."
      }
    ]
  },
  {
    "number": 53995,
    "title": "Expose JavaScript interoperability Initialization Status in Blazor",
    "created_at": "2024-02-13T13:28:53Z",
    "closed_at": "2024-02-14T12:20:40Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/53995",
    "body": "### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Is your feature request related to a problem? Please describe the problem.\r\n\r\n_No response_\r\n\r\n### Describe the solution you'd like\r\n\r\nCurrently, in Blazor, there is no direct way to determine when the JavaScript interop has been initialized. There is a private field, \"IsInitialized\" in IJSRuntime, which holds this information internally, developers do not have direct access to it. As a result, we are forced to rely on workarounds, such as using reflection\r\n`\r\nif (((bool)jSRuntime.GetType().GetProperty(\"IsInitialized\")!.GetValue(jSRuntime)!) == true) {\r\n    // JavaScript interop is initialized\r\n}\r\n`\r\nI'm curious about why this field is private and what alternative methods exist to determine whether jSRuntime is initialized. I understand that we can address this issue by using OnAfterRender(bool firstRender). However, in certain cases, such as when implementing extension methods that receive jSRuntime as a parameter, we lack access to component lifecycles. Therefore, I'm wondering if there is a way to obtain this information through a property.\r\nThanks!\r\n\r\n### Additional context\r\n\r\n_No response_",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/53995/comments",
    "author": "sherviniv",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2024-02-14T06:55:59Z",
        "body": "@sherviniv thanks for contacting us.\r\n\r\n> However, in certain cases, such as when implementing extension methods that receive jSRuntime as a parameter, we lack access to component lifecycles\r\n\r\nYou can write your own helper method `TryInvokeAsync<TResult>(string name, ...)` that wraps InvokeAsync and catches the exception.\r\n\r\nThe reason we don't provide an API to check is that it will not be correct, for example we could have an IsAvailable property or method that can be used to check, but in a Blazor server context, it can happen that you check, and just at that point the connection breaks and results in an error, which is misleading.\r\n\r\nThe only accurate way to do JS interop is to try and perform it and catch any exception that might occur.\r\n\r\nThere is an API planned for 9.0 that simplifies determining the render mode the component is currently running, and we'll likely provide something like `IsInteractive` that will help a lot along those lines, but beyond that, we are unlikely to provide such api directly inside JSRuntime because we can't guarantee its available without trying to actually invoke the method.\r\n\r\n> `if (((bool)jSRuntime.GetType().GetProperty(\"IsInitialized\")!.GetValue(jSRuntime)!) == true) { // JavaScript interop is initialized }`\r\n\r\nThis is completely unsupported and not something we recommend."
      },
      {
        "user": "sherviniv",
        "created_at": "2024-02-14T12:20:40Z",
        "body": "I appreciate your fast response @javiercn!\r\n\r\n> There is an API planned for 9.0 that simplifies determining the render mode the component is currently running, and we'll likely provide something like IsInteractive that will help a lot along those lines,\r\n\r\nCool,  seems like there are lots of cool features in .Net 9! This stuff may help other folks migrate from other frameworks like Angular and React to Blazor much more conveniently. As a simple example, In this case, in Angular is it possible to define an interceptor and handle requests based on status for example(showing an error message in a toast when there is status 400).\r\n"
      }
    ]
  },
  {
    "number": 53516,
    "title": "[Question][Blazorhybrid] How can i use Custom Elements in blazor Hybrid application?",
    "created_at": "2024-01-21T09:03:39Z",
    "closed_at": "2024-01-22T13:00:12Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "design-proposal"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/53516",
    "body": "in .net maui how can i register custom elements in BlazorWebView?",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/53516/comments",
    "author": "sajjadarashhh",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2024-01-22T13:00:12Z",
        "body": "@sajjadarashhh thanks for contacting us.\r\n\r\nCustom Elements are only supported in Blazor Server and WebAssembly. There is no support for them in Webview scenarios."
      },
      {
        "user": "sajjadarashhh",
        "created_at": "2024-01-22T13:11:16Z",
        "body": "> @sajjadarashhh thanks for contacting us.\n> \n> Custom Elements are only supported in Blazor Server and WebAssembly. There is no support for them in Webview scenarios.\n\nOh, this bad 🤧😱\nHow can i use some thing like that in blazor web view?\nI used Custom elements in d3.js to generate organization chart 😅\nAnd in blazor WebApps that works very fine \nNow i need that in maui\nDo you have any idea about it?"
      }
    ]
  },
  {
    "number": 53040,
    "title": " NavigationException when attempting to navigate after submitting a form #49143  still continue",
    "created_at": "2023-12-28T09:02:36Z",
    "closed_at": "2024-01-03T05:10:53Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/53040",
    "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Describe the bug\n\nNavigationException when attempting to navigate after submitting a form\r\nSame at #49143\n\n### Expected Behavior\n\n_No response_\n\n### Steps To Reproduce\n\n_No response_\n\n### Exceptions (if any)\n\n_No response_\n\n### .NET Version\n\n_No response_\n\n### Anything else?\n\n_No response_",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/53040/comments",
    "author": "SenerDemiral",
    "comments": [
      {
        "user": "SenerDemiral",
        "created_at": "2023-12-31T17:52:23Z",
        "body": "It is working on without debugging mode."
      },
      {
        "user": "samusaran",
        "created_at": "2024-01-02T10:30:05Z",
        "body": "I have the same issue but without any form.\r\nI'm just navigating to a fake route (that I handle with a catch-all) inside `OnInitializedAsync()`\r\n\r\nRunning without a debugger solves the issue.\r\n\r\nThe exception happens here:\r\n```\r\n    protected override void NavigateToCore(string uri, NavigationOptions options)\r\n    {\r\n        Log.RequestingNavigation(_logger, uri, options);\r\n\r\n        if (_jsRuntime == null)\r\n        {\r\n            var absoluteUriString = ToAbsoluteUri(uri).ToString();\r\n            throw new NavigationException(absoluteUriString);\r\n        }\r\n```\r\n\r\nIt seems that `_jsRuntime` is null when a debugger is attached."
      },
      {
        "user": "javiercn",
        "created_at": "2024-01-02T11:00:55Z",
        "body": "@SenerDemiral thanks for contacting us.\r\n\r\nThat's expected. You have set your debugger to break on first chance exceptions. The exception is thrown and caught by the framework, and is the mechanism the server uses to transform the navigation into a redirect."
      },
      {
        "user": "SenerDemiral",
        "created_at": "2024-01-03T05:10:53Z",
        "body": "Thank you."
      },
      {
        "user": "samusaran",
        "created_at": "2024-01-03T08:25:48Z",
        "body": "I don't think this is closed. There are clearly some regressions/changes to how nav manager works.\r\n\r\nI have an entire set of pages that just don't work on NET 8 due to infinite redirects.\r\n\r\nShould I create a new ticket then?\r\n\r\nThank you"
      }
    ]
  },
  {
    "number": 53020,
    "title": "Razor compiler emits neither warning nor error when binding against non-existent property.",
    "created_at": "2023-12-27T11:54:45Z",
    "closed_at": "2023-12-27T13:05:36Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/53020",
    "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Describe the bug\n\nHere's the example:\r\n```\r\n<InputText @bind-SomethingNonExistent=\"Value\"></InputText>\r\n```\n\n### Expected Behavior\n\nI'd expect that Razor emits a warning or an error as it does when binding against a property which does not have a corresponding callback parameter.\n\n### Steps To Reproduce\n\n_No response_\n\n### Exceptions (if any)\n\n_No response_\n\n### .NET Version\n\n_No response_\n\n### Anything else?\n\n_No response_",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/53020/comments",
    "author": "voroninp",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2023-12-27T13:05:37Z",
        "body": "@voroninp thanks for contacting us.\r\n\r\nThis is by design. `@bind` is just syntactic sugar over `attribute=Value` and `attributechanged=\"(value => _attribute = value)\"`. In the case of `ComponentBase`, attributes are represented as Properties, but this is not true in the general case, which would make throwing an error/warning incorrect in these situations."
      },
      {
        "user": "voroninp",
        "created_at": "2023-12-27T13:26:53Z",
        "body": "@javiercn So, for the components which inherit from `ComponentBase` it's still reasonable to have a warning, isn't it?"
      }
    ]
  },
  {
    "number": 53008,
    "title": "Blazor 8 Render mode breaks migrations over 3rd party components. ",
    "created_at": "2023-12-25T22:30:21Z",
    "closed_at": "2023-12-27T09:51:18Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/53008",
    "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Describe the bug\n\nNew render-mode approach in Blazor 8 breaks 3rd party component libraries (like IgniteUI for Blazor) that depend on initializer scripts (what you referred to in another issue as \"classic\" initializers).\r\n\r\nI end up with the following warning in the devtools console and app is broken. \r\n\r\n`Initializer '<IgniteUI path>' will be ignored because multiple runtimes are available. use 'before(Web|WebAssembly|Server)Start' and 'after(Web|WebAssembly|Server)Started?' instead.)`\r\n\r\nModifying our own components is fine, but we have zero to no control over 3rd party components. So this is a pretty big breaking change that prevents migration. Staying on net7 is not really an option because other components, including desktop and business logic libraries migrate to 8. \r\n\r\n\n\n### Expected Behavior\n\nA way to force Blazor 8 to behave in net7 compatible way for Server or WASM modes, which will load appropriate initializers. \n\n### Steps To Reproduce\n\nStart Blazor 8 app, any mode, add Infragistics IgniteUI for Blazor and try to do anything with initializers (chart for example). Nothing will work because initializers will be ignored. \n\n### Exceptions (if any)\n\nn/a\n\n### .NET Version\n\n8.0.100\n\n### Anything else?\n\nn/a",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/53008/comments",
    "author": "the-black-wolf",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2023-12-26T12:17:33Z",
        "body": "@the-black-wolf thanks for contacting us.\r\n\r\nThis is a requirement Blazor web imposes on `initializers` and it's by design, since there might be multiple components rendering in different contexts.\r\n\r\nThere's already an option `enableClassicInitializers` that you can pass to `Blazor.start` to turn on classic initializers for Blazor Web.\r\n\r\nAlternatively, you can write an initializer in the app, import the `classic` initializer and invoke the appropriate method calls in the right contexts\r\n\r\n```js\r\nimport { beforeStarts, afterStarted } from `./classic-initalizer.js`\r\n\r\nexport function beforeWebStarts(options) {\r\n  beforeStarts(options);\r\n...\r\n```\r\n\r\n> So this is a pretty big breaking change that prevents migration. Staying on net7 is not really an option because other components, including desktop and business logic libraries migrate to 8.\r\n\r\nIt's not a breaking change because you need to migrate from Blazor Server/WebAssembly to Blazor web (which is a new scenario) for this to be a problem. \r\n\r\nYou can still upgrade from 7.0 and 8.0 and keep using blazor.server.js and blazor.webassembly.js without changes.\r\n\r\n\r\n"
      },
      {
        "user": "the-black-wolf",
        "created_at": "2023-12-27T09:51:18Z",
        "body": "@javiercn thanks for the tip on classic initializers. I did it, but unfortunately it did not fix the problem. However, I now think that Ignite itself is not compatible with net80, so its not really solvable by you. Their classic initializers do get called, but rendering produces no output (but it does in net70). I'll escalate this to their support. Again, thanks for your quick response. "
      }
    ]
  },
  {
    "number": 52826,
    "title": "In Blazor, give the user the ability to use CSS Isolation but without using .razor file",
    "created_at": "2023-12-14T19:46:36Z",
    "closed_at": "2023-12-15T09:56:24Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/52826",
    "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Is your feature request related to a problem? Please describe the problem.\n\nBlazor CSS Isolation limitation.\r\n\r\nIn our application, some of our components do not have .razor files.\r\nInstead we have .razor.cs code behinds and we override BuildRenderTree() to render the component. We would like to use CSS Isoloation without having .razor file (but that's not possible).\r\nReason we do not have .razor file is because it does not allow us to override BuildRenderTree(). The compiler generated BuildRenderTree() semantics bite us/come up again once more. \r\n\r\nCurrently, we resort to having .css file inside www folder but that file has to be explicitly referenced. It would be better if the component automatically brings its local styles when it is used (via using CSS Isolation)\n\n### Describe the solution you'd like\n\nBe able to add SomeComponent.razor.css to a component named: SomeComponent.razor.cs (without having/using SomeComponent.razor file).\r\n\n\n### Additional context\n\n_No response_",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/52826/comments",
    "author": "htmlsplash",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2023-12-15T09:56:10Z",
        "body": "@htmlsplash thanks for contacting us.\r\n\r\nThis is not something we plan to do, and something that you can already do yourself. The CSS isolation support in Blazor involves generating a unique identifier that is shared between the transformed Blazor code and the associated CSS.\r\n\r\nSince you are writing c#, you can directly choose whatever value you want to use and add the attributes manually, as well as apply those in the relevant CSS rules.\r\n\r\nIt might be possible for you to integrate in the MSBuild pipeline so that the CSS gets added to the project bundle, but that's not an officially supported scenario and not something we plan to support."
      }
    ]
  },
  {
    "number": 52825,
    "title": "Telegram miniapp (TMA) developmet via blazor",
    "created_at": "2023-12-14T18:06:59Z",
    "closed_at": "2023-12-15T09:51:42Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/52825",
    "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Is your feature request related to a problem? Please describe the problem.\n\nCurrently we can write TMA using javascript it's just a web app, meanwhile we can develop webapp already using blazor, but there is not a way yet to create a project in visual studio for using blazor for TMA\n\n### Describe the solution you'd like\n\nLet's support developing TMA on visual studio using blazor by letting people create a 'telegram mini app using blazor' project\n\n### Additional context\n\n_No response_",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/52825/comments",
    "author": "Xyncgas",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2023-12-15T09:51:42Z",
        "body": "@Xyncgas thanks for contacting us.\r\n\r\nThis is not a direction we plan to go in. For these types of projects its best to look for a community project or start your own one."
      }
    ]
  },
  {
    "number": 52818,
    "title": "[Blazor Web Discussion] Clarify Data Access for auto mode",
    "created_at": "2023-12-14T14:45:10Z",
    "closed_at": "2023-12-14T15:47:26Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/52818",
    "body": "### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Is your feature request related to a problem? Please describe the problem.\r\n\r\nWe have the auto render mode now. But for WASM, we can't get access to EFCore DbContext, we still need to do CURD stuff through API call. What I'm doing now, is to create a common interface for data access. And implement it for both modes:\r\n```csharp\r\npublic interface IFileService\r\n{\r\n    public File GetFileById(int id);\r\n}\r\n\r\npublic sealed class ServerFileService : IFileService\r\n{\r\n    public File GetFileById(int id) => //use EFCore\r\n}\r\n\r\npublic sealed class WasmFileService : IFileService\r\n{\r\n    public File GetFileById(int id) => //api request\r\n}\r\n\r\n//I have to implement API too\r\napp.MapGet(\"files/{id:int}\", GetFileById)\r\n```\r\nThis brings huge duplication.\r\n\r\n### Describe the solution you'd like\r\n\r\nIs above the right way?\r\nI know an alt is to use API for both modes. But WASM uses `HttpClient` as fetch through browser which we can let it include cookies to pass authentication. When we use server side `HttpClient` to send request to server itself, how can we identify the user. We have to implement token-based authentication too?\r\nAll these things make the auto mode very complex. Are there any other advantages for using auto mode besides avoiding waiting WASM Runtime, saving server circuits connections, and providing SSR?\r\nI hope there can be an official suggestion or add some stuff into official docs.\r\n\r\n### Additional context\r\n\r\n_No response_",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/52818/comments",
    "author": "Kumima",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2023-12-14T15:43:42Z",
        "body": "@Kumima thanks for contacting us.\r\n\r\nThis is currently the right way to do it, it's an area that we plan to make future improvements, but essentially if you choose auto, you need to implement the data access for both server, and webassembly.\r\n\r\nIt's essentially what you had to do in previous Blazor versions."
      },
      {
        "user": "Kumima",
        "created_at": "2023-12-14T15:47:26Z",
        "body": "Thanks for the quick reply. Glad to hear there is a plan to improve."
      },
      {
        "user": "AmBplus",
        "created_at": "2024-01-14T21:10:03Z",
        "body": "This is still not clear to me , create two endpoint for each request , to check every time this is a wasm or server , and many other stuff like this , this like you create a half tools for create a web app , in outside you will see a very good presentation, that's tell we have create a auto mode to resolve your problem in server side and wasm , but still not have a clear way to send a simple request , it's a very very basic feature of every web app , but still in blazor auto render mode not have a clear way to do it , I hope soon this problem"
      }
    ]
  },
  {
    "number": 52708,
    "title": "Catch-all route at the root level doesn't work any more in .NET 8",
    "created_at": "2023-12-10T14:51:53Z",
    "closed_at": "2023-12-11T13:36:05Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/52708",
    "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Describe the bug\n\nI have an application with very few pages, where one is mainly active and catches all the remaining URLs as a part of its logic. In .NET 7, It was enough to annotate that page with `@page \"/{*pageRoute}\"` and declare the corresponding parameter `[Parameter] public string? PageRoute { get; set; }`. But it stopped working when I upgraded to .NET 8 (Blazor United) and started showing a white screen and an exception in the browser's console.\n\n### Expected Behavior\n\nIt should catch the rest of the URLs that didn't match with other routes .\n\n### Steps To Reproduce\n\n1. Create a net .NET 8 Blazor United app with interactive web assembly with pre-rendering turned OFF.\r\n2. Delete pages but the Index.\r\n3. Annotate the Index page with `@page \"/{*pageRoute}\"` and declare a parameter for it `[Parameter] public string? PageRoute { get; set; }`\r\n4. Run the app; you should see a white screen with an error in the console.\n\n### Exceptions (if any)\n\n```\r\nblazor.web.js:1  Error: One or more errors occurred. ('<' is an invalid start of a value. LineNumber: 0 | BytePositionInLine: 0.)\r\n    at Jn (marshal-to-js.ts:349:18)\r\n    at Ul (marshal-to-js.ts:306:28)\r\n    at 00b1e8b6:0x1faca\r\n    at 00b1e8b6:0x1bf8b\r\n    at 00b1e8b6:0xf172\r\n    at 00b1e8b6:0x1e7e4\r\n    at 00b1e8b6:0x1efda\r\n    at 00b1e8b6:0xcfec\r\n    at 00b1e8b6:0x440ad\r\n    at e.<computed> (cwraps.ts:338:24)\r\ncallEntryPoint @ blazor.web.js:1\r\n```\n\n### .NET Version\n\n8.0.100\n\n### Anything else?\n\nIt works if the catch-all wildcard is not placed at the root level but after a URI segment.\r\nWe need a way to allow routes without explicitly listing them in razor pages.",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/52708/comments",
    "author": "gdar91",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2023-12-11T13:28:07Z",
        "body": "@gdar91 thanks for contacting us.\r\n\r\nIn .NET 8.0 routing is integrated with ASP.NET Core routing, what's happening is that your route is \"too general\" and is intercepting requests for files. You need to add `:nonfile` to the route to avoid capturing paths with an extension."
      },
      {
        "user": "gdar91",
        "created_at": "2023-12-11T13:36:06Z",
        "body": "> @gdar91 thanks for contacting us.\r\n> \r\n> In .NET 8.0 routing is integrated with ASP.NET Core routing, what's happening is that your route is \"too general\" and is intercepting requests for files. You need to add `:nonfile` to the route to avoid capturing paths with an extension.\r\n\r\nThank you, it worked with `:nonfile`. I changed the attribute to this: `@page \"/{*pageRoute:nonfile}\"`."
      }
    ]
  },
  {
    "number": 51516,
    "title": "Question: Why Microsoft.jQuery.Unobtrusive.Ajax 3.2.6 is deprecated?",
    "created_at": "2023-10-19T16:36:03Z",
    "closed_at": "2023-11-01T17:27:15Z",
    "labels": [
      "question",
      "area-ui-rendering"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/51516",
    "body": "### Package Id\n\nMicrosoft.jQuery.Unobtrusive.Ajax\n\n### Package Version(s)\n\n3.3.6\n\n### Additional details\n\nI am not sure why you would deprecate Microsoft.jQuery.Unobtrusive.Ajax package when .NET 4.8 is still supported? Isn't this package used by 4.8's ASP.NET MVC 5?\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/51516/comments",
    "author": "alfaromeo90210",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2023-11-01T04:48:30Z",
        "body": "Thanks for bringing this up to our attention. I think that was unintentional, and was done as part of ASP.NET Core 3.x package deprecation. I'll double check this to confirm tomorrow and if so, will remove the deprecation."
      },
      {
        "user": "mkArtakMSFT",
        "created_at": "2023-11-01T17:27:15Z",
        "body": "This should be fixed now."
      }
    ]
  },
  {
    "number": 51476,
    "title": "Blazor Identity with Global RenderMode",
    "created_at": "2023-10-18T19:16:37Z",
    "closed_at": "2023-10-19T07:46:30Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/51476",
    "body": "### Is there an existing issue for this?\n\n- [x] I have searched the existing issues\n\n### Describe the bug\n\nMaking a new Blazor WebApp in RC2, if you select individual accounts and Global Interactive server mode:\r\n\r\n1) The template does not automatically add `@rendermode=\"RenderMode.InteractiveServer\"` to the App.razor Routes and Head Outlet components. This only occurs when using the new identity pages, when they are excluded, the rendermode is automatically added.\r\n\r\n2) When you manually add the global rendermode in, the identity pages begin giving Null Reference Exceptions in several locations. For example: visiting the Register Page throws a null reference exception in StatusMessage.razor @ line 28: `private string? MessageFromCookie => HttpContext.Request.Cookies[IdentityRedirectManager.StatusCookieName];`\r\n\r\nRemoving the global rendermode from the Routes component stops the exceptions, but then eliminates the needed functionality.\n\n### Expected Behavior\n\nThe expected behavior was to be able to use the Interactive Server Render Mode globally with the new razor identity pages.\n\n### Steps To Reproduce\n\n1. Create a new blazor web app in RC2.\r\n2. Select 'Individual Accounts' for Authentication Type.\r\n3. Select 'Server' for Interactivity Type.\r\n4. Select 'Global' for Interactivity Location.\r\n5. Add `@rendermode=\"RenderMode.InteractiveServer\" ` to the HeadOutlet and Routes components in /Components/App.razor.\r\n6. Run the application.\r\n7. Navigate to Register or Login pages.\n\n### Exceptions (if any)\n\nSystem.NullReferenceException\r\n  HResult=0x80004003\r\n  Message=Object reference not set to an instance of an object.\r\n  Source=BlazorApp1\r\n  StackTrace:\r\n   at BlazorApp1.Components.Identity.StatusMessage.get_MessageFromCookie() in F:\\BlazorApp1\\BlazorApp1\\Components\\Identity\\StatusMessage.razor:line 28\r\n\n\n### .NET Version\n\n.NET8 RC2\n\n### Anything else?\n\n_No response_",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/51476/comments",
    "author": "IamRewt",
    "comments": [
      {
        "user": "Kumima",
        "created_at": "2023-10-19T06:51:55Z",
        "body": "This will be fixed in next GA version. If you enable the Global RenderMode as Server, the project template for now will make all the pages rendered as server, which means there will be no HttpContext. You can check issue #51134 to preview the change. The Account pages will be rendered static even if you enable the global rendermode. Account pages rely on SignInManager which needs the HttpContext, so they have to be rendered as Static."
      },
      {
        "user": "javiercn",
        "created_at": "2023-10-19T07:46:22Z",
        "body": "@Kumima answer is correct here.\r\n\r\n/cc @halter73 "
      },
      {
        "user": "cactusoft",
        "created_at": "2023-11-02T20:41:26Z",
        "body": "Found the same issue, good to see it will be fixed in GA. I was having trouble figuring out a workaround."
      },
      {
        "user": "mabulla",
        "created_at": "2023-12-01T08:20:17Z",
        "body": "Found A workaround where you can leave everything on Interactive, but if you navigate to the /Account-Pages you switch to a Static or \"null\" Rendermode.\r\n\r\nJust add or change those lines in your \r\n> App.razor\r\n```\r\n<HeadOutlet @rendermode=\"@RenderModeForPage\" />\r\n\r\n<Routes @rendermode=\"@RenderModeForPage\" />\r\n\r\n@code {\r\n\r\n    private IComponentRenderMode? RenderModeForPage => HttpContext.Request.Path.StartsWithSegments(\"/Account\")\r\n        ? null\r\n        : InteractiveServer;\r\n}\r\n```\r\n\r\nSideeffect is that when you want to use your ThemeSwitcher or any other interactive component declared in your MainLayout.razor they wont work anymore, so its best to remove or comment out this Line from your \r\n> AccountLayout.razor\r\n```\r\n@layout OpenSmartInfo.Server.Components.Layout.MainLayout\r\n```\r\n\r\nso that only the content from your /Account-Pages gets rendered without the now noninteractive \"interactive\" components.\r\n\r\n\r\nAnd to make it look a little prettier you can add some css in AccountLayout.razor in a style-tag like so:\r\n```\r\n<style>\r\n    body {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    width: 80%;\r\n    margin: auto;\r\n    height: 100vh;\r\n    justify-content: center;}\r\n</style>\r\n```\r\nto center everything.\r\n\r\nIn my /Account-Pages i then removed the \"col\"- and \"row\"-classes from the divs and added a cancel-button. \r\nFor reference my \r\n> Register.razor\r\n```\r\n<PageTitle>Register</PageTitle>\r\n\r\n<h1>Register</h1>\r\n\r\n<div>\r\n    <div>\r\n        <StatusMessage Message=\"@Message\" />\r\n        <EditForm Model=\"Input\" asp-route-returnUrl=\"@ReturnUrl\" method=\"post\" OnValidSubmit=\"RegisterUser\" FormName=\"register\">\r\n            <DataAnnotationsValidator />\r\n            <h2>Create a new account.</h2>\r\n            <hr />\r\n            <ValidationSummary class=\"text-danger\" role=\"alert\" />\r\n            <div class=\"form-floating mb-3\">\r\n                <InputText @bind-Value=\"Input.Email\" class=\"form-control\" autocomplete=\"username\" aria-required=\"true\" placeholder=\"name@example.com\" />\r\n                <label for=\"email\">Email</label>\r\n                <ValidationMessage For=\"() => Input.Email\" class=\"text-danger\" />\r\n            </div>\r\n            <div class=\"form-floating mb-3\">\r\n                <InputText type=\"password\" @bind-Value=\"Input.Password\" class=\"form-control\" autocomplete=\"new-password\" aria-required=\"true\" placeholder=\"password\" />\r\n                <label for=\"password\">Password</label>\r\n                <ValidationMessage For=\"() => Input.Password\" class=\"text-danger\" />\r\n            </div>\r\n            <div class=\"form-floating mb-3\">\r\n                <InputText type=\"password\" @bind-Value=\"Input.ConfirmPassword\" class=\"form-control\" autocomplete=\"new-password\" aria-required=\"true\" placeholder=\"password\" />\r\n                <label for=\"confirm-password\">Confirm Password</label>\r\n                <ValidationMessage For=\"() => Input.ConfirmPassword\" class=\"text-danger\" />\r\n            </div>\r\n            <button type=\"submit\" class=\"w-100 btn btn-lg btn-primary\">Register</button>\r\n            <button class=\"w-100 btn btn-lg btn-primary\" onclick=\"window.history.go(-1); return false;\">Cancel</button>\r\n        </EditForm>\r\n    </div>\r\n    <div >\r\n        <section>\r\n            <br />\r\n            <h3 style=\"text-align:center;\">Use another service to register.</h3>\r\n            <hr />\r\n            <ExternalLoginPicker />\r\n        </section>\r\n    </div>\r\n</div>\r\n```"
      },
      {
        "user": "Stonne",
        "created_at": "2023-12-16T08:20:41Z",
        "body": "thanks Mabulla you saved my day thumbs up!!.\r\nHowever In App.razor I had to add   :  @inject IHttpContextAccessor HttpContextAccessor\r\nand in the code block   : private HttpContext HttpContext => HttpContextAccessor.HttpContext; \r\nbefore \r\n private IComponentRenderMode? RenderModeForPage => HttpContext.Request.Path.StartsWithSegments(\"/Account\")\r\n        ? null\r\n        : InteractiveServer;\r\n\r\n\r\n"
      }
    ]
  },
  {
    "number": 50494,
    "title": "BLAZOR: Increase Debouce Time For Render",
    "created_at": "2023-09-02T20:08:09Z",
    "closed_at": "2023-09-13T19:31:34Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/50494",
    "body": "When I Maked A For Loop With 100 times and it Render One Time But When Delay Just 100 milliseconds it render 100 render\r\n\r\nAnd here Other Example\r\n\r\n```razor\r\n<button @onclick=\"OnClickHandler\">CLick Here</button>\r\n\r\n@code {\r\n    public int curruntCoutner = 0;\r\n    [Parameter]\r\n    public EventCallback<int> OnClickChanged { get; set; }\r\n    [Parameter]\r\n    public int OnClick { get; set; }\r\n    [Parameter]\r\n    public EventCallback<int> OnClick2Changed { get; set; }\r\n    [Parameter]\r\n    public int OnClick2 { get; set; }\r\n\r\n    public async Task OnClickHandler()\r\n    {\r\n        curruntCoutner++;\r\n        await OnClickChanged.InvokeAsync(curruntCoutner);\r\n        await Task.Delay(100);\r\n        await OnClick2Changed.InvokeAsync(curruntCoutner);\r\n    }\r\n}\r\n```\r\n\r\nCan I Edit The Debouce Of The Blazor Like\r\n\r\n```c#\r\nbuilder.Services.AddRazorComponents(e =>\r\n{\r\n       e.RenderDebouce = 500;\r\n});\r\n```\r\n\r\n Or I Think What Will Be Better Is\r\n\r\n```c#\r\npublic class SomeComponent : ComponentBase\r\n{\r\npublic override int DebouceOfTheRender() => 500;\r\n}\r\n```\r\n\r\nAnd Thanks",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/50494/comments",
    "author": "wisamidris7",
    "comments": [
      {
        "user": "wisamidris7",
        "created_at": "2023-09-02T20:10:48Z",
        "body": "This Will Increase The Render Speed When Having Many Events From Everyplace Like\r\n\r\n```c#\r\n<button @onclick=\"OnClickHandler\" @onfocus=\"OnFocusHandler\">CLick Here</button>\r\n\r\n@code {\r\n    public int curruntCoutner = 0;\r\n    [Parameter]\r\n    public EventCallback<int> OnClickChanged { get; set; }\r\n    [Parameter]\r\n    public int OnClick { get; set; }\r\n    [Parameter]\r\n    public EventCallback<int> OnClick2Changed { get; set; }\r\n    [Parameter]\r\n    public int OnClick2 { get; set; }\r\n\r\n    public async Task OnClickHandler()\r\n    {\r\n        curruntCoutner++;\r\n        await OnClickChanged.InvokeAsync(curruntCoutner);\r\n    }\r\n    public async Task OnFocusHandler()\r\n    {\r\n        var someValue = HttpClient.Get...;\r\n        await OnClick2Changed.InvokeAsync(someValue);\r\n    }\r\n}\r\n```\r\nThis Will Render Two Times So This Will Be So Useful"
      },
      {
        "user": "javiercn",
        "created_at": "2023-09-04T14:00:29Z",
        "body": "> When I Maked A For Loop With 100 times and it Render One Time But When Delay Just 100 milliseconds it render 100 render\r\n\r\nIt's not super clear what your ask here is. But likely the behavior you are seeing is by design. All renders that happen synchronously are batched on the same render batch, so calling render 100 times will be the same as calling it once.\r\nThere will only be 1 UI update.\r\n\r\nIf you are using `Task.Delay` or similar within your own loop (and calling StateHasChanged) then there will be 100 renders because there are 100 synchronous render batches in between your renders.\r\n\r\nThis behavior already exist on the framework and we don't plan to provide anything on ComponentBase to achieve it, since its trivial to do in your own code."
      },
      {
        "user": "wisamidris7",
        "created_at": "2023-09-13T19:31:34Z",
        "body": "thanks"
      }
    ]
  },
  {
    "number": 49792,
    "title": "Separate Attributes from Microsoft.AspNetCore.Components.DataAnnotations.Validation",
    "created_at": "2023-08-02T07:39:27Z",
    "closed_at": "2023-08-02T16:47:51Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/49792",
    "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Is your feature request related to a problem? Please describe the problem.\n\nWhen using the attributes from Microsoft.AspNetCore.Components.DataAnnotations.Validation, e.g. [ValidateComplexType] in a separate 'data' project that only contains models, a few more (in this case unnecessary) packages need to be referenced.\n\n### Describe the solution you'd like\n\nI suggest moving the attribute declarations to a separate nuget package.\n\n### Additional context\n\n_No response_",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/49792/comments",
    "author": "mdeppe42",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2023-08-02T16:47:51Z",
        "body": "@mdeppe42 thanks for contacting us.\r\n\r\nWe are not planning to go in this direction, as it increases our footprint and maintenance cost."
      }
    ]
  },
  {
    "number": 49488,
    "title": "Order of action filters is not respected when using synchronous and asynchronous filters",
    "created_at": "2023-07-18T12:35:56Z",
    "closed_at": "2023-08-30T10:27:09Z",
    "labels": [
      "question",
      "area-mvc",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/49488",
    "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Describe the bug\n\nI have an `ApiController` with an `IAsyncActionFilter` that does some validation and adds errors to `ModelStateDictionary`. When executing the action I have noticed that the action is executed even when the `ModelState` has errors. \r\nAfter a lot of digging i noticed that the in-box `ModelStateInvalidFilter` executes before my async filter even when it should be executed after based on `IOrderedFilter.Order` property.\n\n### Expected Behavior\n\nOne would expect that the filters execute according to their order, so that they could be combined to extend default pipeline without having to copy all the synchronous filters' functionality.\n\n### Steps To Reproduce\n\nAdding these filters to pipeline results in \r\n```\r\nSync before\r\nAsync before\r\nAsync after\r\nSync after\r\n```\r\nwhich is clearly wrong.\r\n\r\n```c#\r\ninternal sealed class SyncFilter : IActionFilter, IOrderedFilter\r\n{\r\n    public int Order => 0;\r\n\r\n    public void OnActionExecuted(ActionExecutedContext context)\r\n    {\r\n        Console.WriteLine(\"Sync after\");\r\n    }\r\n\r\n    public void OnActionExecuting(ActionExecutingContext context)\r\n    {\r\n        Console.WriteLine(\"Sync before\");\r\n    }\r\n}\r\n\r\ninternal sealed class AsyncFilter : IAsyncActionFilter, IOrderedFilter\r\n{\r\n    public int Order => -1;\r\n\r\n    public async Task OnActionExecutionAsync(ActionExecutingContext context, ActionExecutionDelegate next)\r\n    {\r\n        Console.WriteLine(\"Async before\");\r\n        await next();\r\n        Console.WriteLine(\"Async after\");\r\n    }\r\n}\r\n```\n\n### Exceptions (if any)\n\n_No response_\n\n### .NET Version\n\n_No response_\n\n### Anything else?\n\n_No response_",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/49488/comments",
    "author": "ithline",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2023-08-24T13:58:38Z",
        "body": "@ithline thanks for contacting us.\r\n\r\nFilters are nested within each other like onion layers, so filters with higher priority (smaller order) execute closer to the action than those with a higher order.\r\n\r\nFrom the description you are providing, everything is working as expected and the behavior is by design."
      }
    ]
  },
  {
    "number": 49266,
    "title": "IActionResult and IAsyncDisposable",
    "created_at": "2023-07-07T17:26:39Z",
    "closed_at": "2023-07-10T16:22:02Z",
    "labels": [
      "question",
      "area-mvc",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/49266",
    "body": "I came across this nasty problem in our codebase involving WebSocket code and am cleaning it up.\r\n\r\nThe cleanup would be easy if this works:\r\n\r\n````\r\npublic class MyCustomAction : IActionResult, IAsyncDisposable {\r\n     public MyCustomAction(...) { /* a few lines of code */\r\n\r\n    public Task ExecuteAsync(ActionContext context) {\r\n        /* ten thousand lines of code */\r\n    }\r\n\r\n    public ValueTask DisposeAsync() {\r\n        /* One line of code */\r\n    }\r\n}\r\n````\r\n\r\nThe documentation is not clear and normal descent through the codebase doesn't work because of heavy use of reflection.\r\n\r\nI suppose I could do:\r\n\r\n````\r\npublic class MyActionWrapper : IActionResult {\r\n    private IActionResult result;\r\n    public MyActionWrapper(IActionResult result) { this.result = result; }\r\n    public async Task ExecuteAsync(ActionContext context) {\r\n        try { return await result.ExecutAsync(context); }\r\n        finally { await ((IAsyncDisposable)result).DisposeAsync(); }\r\n    }\r\n}\r\n````\r\n\r\nBut again it's not clear if this works or not because it's impossible to tell if an IActionResult returned to asp.net core executes immediately or if there's a case where it does not execute.",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/49266/comments",
    "author": "jhudsoncedaron",
    "comments": [
      {
        "user": "mitchdenny",
        "created_at": "2023-07-10T04:01:52Z",
        "body": "I'm not entirely sure what the issue is that you are describing?"
      },
      {
        "user": "ghost",
        "created_at": "2023-07-10T04:02:11Z",
        "body": "Hi @jhudsoncedaron. We have added the \"Needs: Author Feedback\" label to this issue, which indicates that we have an open question for you before we can take further action. This issue will be closed automatically in 7 days if we do not hear back from you by then - please feel free to re-open it if you come back to this issue after that time."
      },
      {
        "user": "mitchdenny",
        "created_at": "2023-07-10T04:05:22Z",
        "body": "Are you asking whether we call `Dispose(...)` or `DisposeAsync(...)` on your custom defined `IActionResult` - the answer is no."
      },
      {
        "user": "jhudsoncedaron",
        "created_at": "2023-07-10T14:06:37Z",
        "body": "@mitchdenny : Probing determined it does not. It's not really clear if this is an oversight or design choice. Either way, an `IActionResult` that needs to ensure cleanup happens (in order to unroot other objects) seems to be a hard problem."
      },
      {
        "user": "javiercn",
        "created_at": "2023-07-10T14:17:11Z",
        "body": "@jhudsoncedaron thanks for contacting us.\r\n\r\nYou can use `httpContext.Response.RegisterForDispose(Async)` to make sure anything you use in the result implementation is disposed at the end of the request."
      },
      {
        "user": "jhudsoncedaron",
        "created_at": "2023-07-10T16:22:02Z",
        "body": "I can't tell if I should have found it from the docs or if I need to refile as a docs issue. Any guesses?"
      }
    ]
  },
  {
    "number": 48903,
    "title": "Blazor SSR forms redirect and antiforgery tokens?",
    "created_at": "2023-06-19T19:14:02Z",
    "closed_at": "2023-06-20T14:37:54Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/48903",
    "body": "Could Blazor team give some insights for these questions our team has been wondering related to Blazor SSR in preview 5?\r\n\r\nQ1. How do we do a redirect after a form post? I tried using NavigationManager but it throws a NavigationException. In Razor Pages we return a Redirect IActionResult, is there some corresponding method here?\r\n\r\nQ2. Will antiforgery tokens be automatically handled by the framework in form posts? And if not, how should they be handled since there is no @Html.AntiForgeryToken() taghelper?",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/48903/comments",
    "author": "Markz878",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2023-06-20T14:11:31Z",
        "body": "> Q1. How do we do a redirect after a form post? I tried using NavigationManager but it throws a NavigationException. In Razor Pages we return a Redirect IActionResult, is there some corresponding method here?\r\n\r\nYou can use navigation manager to perform the redirect.\r\n\r\n> Q2. Will antiforgery tokens be automatically handled by the framework in form posts? And if not, how should they be handled since there is no @Html.AntiForgeryToken() taghelper?\r\n\r\nAntiforgery validation will be built-in. It's not there yet."
      },
      {
        "user": "Markz878",
        "created_at": "2023-06-20T14:37:28Z",
        "body": "Okay, thanks for the answer, looking forward to these features working!"
      }
    ]
  },
  {
    "number": 48748,
    "title": "Blazor WebAssembly not caching in browser",
    "created_at": "2023-06-13T06:09:15Z",
    "closed_at": "2023-06-13T10:30:43Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/48748",
    "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Describe the bug\n\nBlazor WebAssembly is caching libraries to browser's Cache Storage only on localhost access.\r\n\r\nWhen i was starting to develop WASM project, i've inspected browser cache to make sure that dotnet and other libraries are cached and next startups are faster (sha checks, returned statuses 204, cache is used). This works well. But after publishing the project to IIS hosting and accessing the page over the internet, libraries are never stored in browser cache. So effectively, libraries are always downloaded. Running browser on the same machine where the IIS is located works and libraries are cached (same as running browser directly from VS in development). I've tried this on default projects in .net6 and .net7 and the behaviour is the same.\r\n\r\nI must be missing something basic here...\n\n### Expected Behavior\n\nLibraries are cached to browser regardless if the page is accessed localy or remotely over the internet.\n\n### Steps To Reproduce\n\nIn VS:\r\n\r\n- create new \"Blazor WebAssembly App\"\r\n- check off \"Configure for HTTPS\"\r\n- publish (i'm using just the directory publish with manual copy of files to created web page on iis)\n\n### Exceptions (if any)\n\n_No response_\n\n### .NET Version\n\n7.0.302\n\n### Anything else?\n\n_No response_",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/48748/comments",
    "author": "ns6000",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2023-06-13T10:18:52Z",
        "body": "@ns6000 thanks for contacting us.\r\n\r\nCaching depends on the caching APIs that are only available in secure context. We don't do caching over HTTP because the APIs are not available."
      },
      {
        "user": "ns6000",
        "created_at": "2023-06-13T10:30:43Z",
        "body": "Thank you, understood. It will be accessible over HTTPS only in the real world production deployment so it's not a problem.\r\n\r\nJust a humble suggestion, I think this could be mentioned somewhere in the docs (if it's not already and I missed it)."
      }
    ]
  },
  {
    "number": 47585,
    "title": "Support DisplayNameAttribute on record properties",
    "created_at": "2023-04-06T09:49:55Z",
    "closed_at": "2023-04-10T14:00:46Z",
    "labels": [
      "question",
      "area-mvc",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/47585",
    "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Is your feature request related to a problem? Please describe the problem.\n\nIn MVC/RazorPages it's typical to create viewmodels which are page-specific.\r\n\r\nNow that we have records, this is easier than ever, and is scoped to a particular page, e.g.\r\n````cs\r\npublic class OrderModel : PageModel\r\n{\r\n\r\n  public record ProductVM(int Id, string Name, double Price, string WebsiteUrl);\r\n\r\n  //...\r\n}\r\n````\r\n\r\nBut we cannot use `DisplayNameAttribute` for those properties, e.g.:\r\n````cs\r\npublic record ProductVM(int Id, string Name, double Price, [DisplayName(\"Website\")]string WebsiteUrl); \r\n````\r\n\r\nError:\r\n> Attribute 'DisplayName' is not valid on this declaration type. It is only valid on 'class, method, property, indexer, event' declarations. csharp(CS0592)\n\n### Describe the solution you'd like\n\nPlease support such annotations for records.\n\n### Additional context\n\n_No response_",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/47585/comments",
    "author": "lonix1",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2023-04-10T10:59:23Z",
        "body": "@lonix1 thanks for contacting us.\r\n\r\nYou can already do this with the `[property:` prefix to put the attribute on the property."
      }
    ]
  },
  {
    "number": 47390,
    "title": "question about blazor United?",
    "created_at": "2023-03-24T04:12:09Z",
    "closed_at": "2023-03-24T10:09:55Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/47390",
    "body": "Hello 👋\r\ni have question about blazor United.\r\nif blazer United project have database like mysql or sql server to make some crud operations...etc\r\n,if i change the render mode from server to auto and the website in next few visiting well running in wasm is the website still can call the database ??",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/47390/comments",
    "author": "Ali1Jamal",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2023-03-24T10:02:43Z",
        "body": "@Ali1Jamal thanks for contacting us.\r\n\r\nWe are actively exploring this area, but it is too early to tell. That said, our goal is to reduce the boilerplate as much as possible. I want to be clear, however, that you'll never run the server code that calls the database from the browser. At best, the call will be handled in the server automatically in a transparent way subject to some restrictions that are to be defined."
      }
    ]
  },
  {
    "number": 47098,
    "title": "[Blazor] Using event callbacks in backing classes",
    "created_at": "2023-03-08T18:03:55Z",
    "closed_at": "2023-03-09T13:38:07Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/47098",
    "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Is your feature request related to a problem? Please describe the problem.\n\n(Apologies if this question is already covered, I have searched but I am sure I could have missed something obvious.)\r\n\r\nWe are developing a Blazor hosted web assembly application and some of our razor pages have become so large that we are creating backing services to manage their state. These services are singletons that will be injected into a razor page or component. We were wondering if we should use EventCallback to notify the razor pages when the state in the service has updated. However, all of the documentation I could find explicitly discussed the EventCallbacks being used when a child component needs a parent components method to be executed.\r\n\r\nWe have considered using the standard EventHandler instead of an EventCallback, however we would prefer to use the EventCallback if possible due to the benefits that they provide when working with razor pages.\n\n### Describe the solution you'd like\n\nWe would like to know if it goes against best practices to use EventCallback to notify a razor component or page of changes in a service that is injected into the component or page.\n\n### Additional context\n\n_No response_",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/47098/comments",
    "author": "LisavB",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2023-03-09T13:12:21Z",
        "body": "@LisavB thanks for contacting us.\r\n\r\nThe main benefit of an `EventCallback` over a plain delegate is that if the target of the delegate implements `IHandleEvent` we will call `HandleEventAsync` which, in the common case, with `ComponentBase` will result in between 1 or 2 renders depending on whether the handler completes synchronously or asynchronously.\r\n\r\nIt is hard to give guidance without a concrete scenario, but I would say at least that if your communication were between types that are not components, there is not value in using `EventCallback`.\r\n\r\nIn general, we are not prescriptive about these matters, as long as you understand the impact and the benefits/drawbacks that you get, and decide it works for you/your team, that is enough."
      },
      {
        "user": "LisavB",
        "created_at": "2023-03-09T13:38:07Z",
        "body": "Thanks for the answer @javiercn, I'll take this back to my team to discuss."
      }
    ]
  },
  {
    "number": 46702,
    "title": "MAUI over the web?",
    "created_at": "2023-02-16T07:57:26Z",
    "closed_at": "2023-02-16T17:01:34Z",
    "labels": [
      "question",
      "External",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/46702",
    "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Is your feature request related to a problem? Please describe the problem.\n\n_No response_\n\n### Describe the solution you'd like\n\nI love Blazor as I really hate JavaScript and typescript  call me old fashioned but c# is the most powerful tool on the planet go look it up if your not convinced.\r\nAnd zi love XAMl and I have built extremely complex uis with it that would simply be impossible to do with HTML. So how about having a rendering engine for xanl in the browser as we had for browser apps. I never actually used that before in my Web dev but I never heard they were bad. So it would seem a simple thing to do to either translate the xaml to HTML or embedd the xaml engine in the browser.\r\nMaybe they only reason why this has not been done is politics? Maybe Microsoft is so terrified of its response to silverlight and I was so disappointed that they dropped LightSwitch. I also build generic GUI and business frameworks that allow busines users to build guis and developers to implement the functions. I started a PhD on this but it's on hold now as the tool I was using got discontinued.\n\n### Additional context\n\nSorry if this question is too left field and if anyone is interested I can send my papers. I also have built a generic ML framework based on ML.Net for any ML problem.",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/46702/comments",
    "author": "acrigney",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2023-02-16T10:07:31Z",
        "body": "@acrigney thanks for contacting us.\r\n\r\nThis is not something our team will work on. We suggest you file this issue on the Maui repo instead."
      }
    ]
  },
  {
    "number": 46359,
    "title": "route with product/detail/{id?}-{persionKey?}-{sex?}-{price?} not work",
    "created_at": "2023-01-31T15:15:06Z",
    "closed_at": "2023-02-07T15:51:26Z",
    "labels": [
      "question",
      "area-mvc",
      "feature-routing",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/46359",
    "body": "The route of my razor page project is written as product/detail/{id?} - {persionKey?} - {sex?} - {price?}, which will report that the optional parameter must end with \"/\"\r\n\r\nI get error like this:\r\n\r\nRoutePatternException: An optional parameter must be at the end of the segment. In the segment '{id?}-{persionKey?}-{sex?}-{price?}', optional parameter 'id' is followed by '-'.\r\n\r\nIs there any way to rewrite the route and write \"/\" as \"-\"?\r\n\r\nMy razor page version is .net 6.0\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/46359/comments",
    "author": "dfengpo",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2023-02-06T17:50:27Z",
        "body": "@lmxin123 thanks for contacting us.\r\n\r\nOptional parameters are not supported in complex segments."
      }
    ]
  },
  {
    "number": 46044,
    "title": "Unexpected parent component rerendering",
    "created_at": "2023-01-11T22:54:01Z",
    "closed_at": "2023-01-12T14:53:20Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/46044",
    "body": "### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Describe the bug\r\n\r\nWhile playing around with some code I noticed a behaviour I wasn't expecting. Here is the code in question:\r\n\r\n### Parent Component\r\n\r\n```razor\r\n@page \"/\"\r\n\r\n<button @onclick=\"ShowPrompt\">Click me</button>\r\n\r\n@if (_showPrompt)\r\n{\r\n    <SurveyPrompt Title=\"Testing\" OnClose=\"Close\" />\r\n}\r\n\r\n@code {\r\n    private bool _showPrompt;\r\n\r\n    private void ShowPrompt() => _showPrompt = true;\r\n    private void Close() => _showPrompt = false;\r\n}\r\n```\r\n\r\n### Child Component\r\n\r\n```razor\r\n<div class=\"alert alert-secondary mt-4\">\r\n    <strong>@Title</strong>\r\n    <button @onclick=\"OnClose\">Close</button>\r\n</div>\r\n\r\n@code {\r\n    [Parameter] public string? Title { get; set; }\r\n    [Parameter] public Action OnClose { get; set; }\r\n}\r\n```\r\n\r\nWhen clicking the Close button in the child component, the child component causes a re-render in the parent component and is hidden. This is unexpected as that should only occur when either the child components parameter type is `EventCallback` or the handler in the parent calls `StateHasChanged`. \r\n\r\nChanging the child components code to this results in the expected behaviour and the child component isn't hidden.\r\n\r\n```razor\r\n<div class=\"alert alert-secondary mt-4\">\r\n    <strong>@Title</strong>\r\n    <button @onclick=\"() => OnClose()\">Close</button>\r\n</div>\r\n\r\n@code {\r\n    [Parameter] public string? Title { get; set; }\r\n    [Parameter] public Action OnClose { get; set; }\r\n}\r\n```\r\n\r\nI don't know if this is a bug or not but it's not what I was expecting and I can't work it out. \r\n\r\n### Expected Behavior\r\n\r\nChild components shouldn't cause re-renders of parents without defining parameters of type `EventCallback` or parent handlers calling `StateHasChanged`\r\n\r\n### Steps To Reproduce\r\n\r\nUpdate the `Index` component in a new Blazor project to the following code:\r\n\r\n```razor\r\n@page \"/\"\r\n\r\n<button @onclick=\"ShowPrompt\">Click me</button>\r\n\r\n@if (_showPrompt)\r\n{\r\n    <SurveyPrompt Title=\"Testing\" OnClose=\"Close\" />\r\n}\r\n\r\n@code {\r\n    private bool _showPrompt;\r\n\r\n    private void ShowPrompt() => _showPrompt = true;\r\n    private void Close() => _showPrompt = false;\r\n}\r\n```\r\n\r\nUpdate the code for the `SurveyPrompt` component to the following:\r\n\r\n```razor\r\n<div class=\"alert alert-secondary mt-4\">\r\n    <strong>@Title</strong>\r\n    <button @onclick=\"OnClose\">Close</button>\r\n</div>\r\n\r\n@code {\r\n    [Parameter] public string? Title { get; set; }\r\n    [Parameter] public Action OnClose { get; set; }\r\n}\r\n```\r\n\r\nClicking the button in the index component shows the survey prompt. Clicking the Close button in the SurveyPrompt hides the Survey prompt. However, no StateHasChanged call has been issues.\r\n\r\n### Exceptions (if any)\r\n\r\n_No response_\r\n\r\n### .NET Version\r\n\r\n7.0.101\r\n\r\n### Anything else?\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/46044/comments",
    "author": "chrissainty",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2023-01-12T13:55:57Z",
        "body": "Thanks for bringing this up @chrissainty.\r\n\r\nThis is an existing and rather obscure Blazor behavior. We try really hard to detect when the target of a delegate is a component that implements IHandleEvent.\r\n\r\nWhat's happening is that the delegate you pass to `OnClose` is being pass-through to an event handler `@onclick` in the component.\r\n\r\nAs a result, we are constructing an EventCallback with `OnClose` as the target delegate. Since the event callback detects that `Delegate.Target` implements `IHandleEvent`, it routes the event through it, and since the parent component extends ComponentBase it triggers a render on the parent.\r\n\r\nThis is by design as we do not have a way to know, and the recommendation in this scenario is to do what you did to achieve your expected behavior, which is to call the parameter within a lambda.\r\n\r\nIn general, this is not a problem because most people desire the parent component to re-render (which is why it is the default behavior) and why in most cases the event is raised inside another method on the child component instead of being passed through directly.\r\n\r\nI hope this helps clarify things.\r\n\r\n"
      },
      {
        "user": "chrissainty",
        "created_at": "2023-01-12T14:53:20Z",
        "body": "This makes sense. Thanks for the explaination @javiercn 👍 "
      }
    ]
  },
  {
    "number": 45607,
    "title": "Blazor Server - Html Source Blazor Info",
    "created_at": "2022-12-15T12:51:13Z",
    "closed_at": "2022-12-15T16:59:26Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved",
      "feature-blazor-server"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/45607",
    "body": "I am using Blazor Server. It shows the following information in each html output. Can I turn this display of information on or off?\r\n\r\n`<!--Blazor:{\"sequence\":1,\"type\":\"server\",\"prerenderId\":\"27a768f8d34b40efaa24370d7e4146ad\",\"descriptor\":\"CfDJ8A5VzMEeZxVNtV1i8tox076ysU67NXXehnicXlH5TEeVv0iEJP32/AiNvDJqOgroXtAxzk1Rju1ub0J3ovn68kgyB8rxLXQ\\u002BO4uOqAcLYKRZGC30V7okM9Ty3FYGIcYsX3gXhCCdzSwd6WA8RO7RN/d4\\u002B1rGF9dxJeyLIsn5o8NB46ZXHoD3EQJjUiXW0BdGl9zyTFhqeUaBV12mgOvill72AbP\\u002BJBzMy1GlET/bW4qVYDJT3Xobok/gXlgNP3SsKo/MD2YxtArQJx/dQjab8T6FEaw1Ap2sE6nvgk3nQ24bberWWsDXHRmyHNzKtfa2l0YcYUYdoNRdEZACpEOarPgGJC81cdBE3ioENQhddnf\\u002BseH4XTAcvrdT58gXgigPCISeB9pKqIMBrYvNyV\\u002Bi8qUd82LhhKdjpTyf51fKXAZm\"}-->`",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/45607/comments",
    "author": "Taiizor",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2022-12-15T14:04:54Z",
        "body": "@Taiizor thanks for contacting us.\r\n\r\nThat's the marker we use to identify where we need to render the components within the page, without it, we can't render a Blazor component on to the page."
      },
      {
        "user": "Taiizor",
        "created_at": "2022-12-15T16:29:37Z",
        "body": "> @Taiizor thanks for contacting us.\r\n> \r\n> That's the marker we use to identify where we need to render the components within the page, without it, we can't render a Blazor component on to the page.\r\n\r\nYes, I know that, but I don't want it to appear only in the source code (html source). Is this possible?"
      },
      {
        "user": "javiercn",
        "created_at": "2022-12-15T16:55:26Z",
        "body": "@Taiizor no, it is not possible."
      },
      {
        "user": "Taiizor",
        "created_at": "2022-12-15T16:59:23Z",
        "body": "> @Taiizor no, it is not possible.\r\n\r\nOh, got it. thx for everything.."
      }
    ]
  },
  {
    "number": 44867,
    "title": "A question about closures and render fragments.",
    "created_at": "2022-11-03T19:19:26Z",
    "closed_at": "2022-11-07T17:40:43Z",
    "labels": [
      "question",
      "area-blazor",
      "feature-rendering"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/44867",
    "body": "### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Is your feature request related to a problem? Please describe the problem.\r\n\r\nI'm trying to poke around blazor and I'm curious how RenderFragment's delegate/closure mechanics work:\r\n``` razor\r\n<div>\r\n    @RenderRadio();\r\n</div>\r\n\r\n@code {\r\n\r\n    private RenderFragment RenderRadio()\r\n    {\r\n        var isChecked = false;\r\n        void Check()\r\n        {\r\n            isChecked = !isChecked;\r\n        }\r\n\r\n        return @<label>\r\n                   <input type=\"radio\" class=\"peer absolute w-0 h-0\" @onclick=\"Check\"/>\r\n                   <span class=\"w-4 h-4 inline-block bg-white border-black border border-solid rounded-[50%]\r\n                                @If(isChecked, \"border-red-900 border-[5px]\")\">\r\n                   </span>\r\n               </label>;\r\n    }\r\n}\r\n```\r\n\r\nEven though in debug isChecked is mutated to true/false, markup is never updated. Is this because component get's rerendered and RenderRadio() get's called again?\r\n\r\nI'm curious what is the way to kind of create a markup from render fragment and just \"let it live\".\r\nFor example, this works in React via hooks like useState. I'm wondering if I can do this in Blazor too.\r\n\r\nCaching RenderFragment in a field works (component gets updated), but to me personally this is not really ideal.\r\n``` razor\r\n<div>\r\n    @SingleRadioCachedInField\r\n</div>\r\n\r\n@code {\r\n\r\n    private RenderFragment SingleRadioCachedInField = null!;\r\n\r\n    protected override void OnParametersSet()\r\n    {\r\n        SingleRadioCachedInField = RenderRadio();\r\n    }\r\n\r\n    private RenderFragment RenderRadio()\r\n    {\r\n        var isChecked = false;\r\n        void Check()\r\n        {\r\n            isChecked = !isChecked;\r\n        }\r\n\r\n        return @<label>\r\n                   <input type=\"radio\" class=\"peer absolute w-0 h-0\" @onclick=\"Check\"/>\r\n                   <span class=\"w-4 h-4 inline-block bg-white border-black border border-solid rounded-[50%]\r\n                                @If(isChecked, \"border-red-900 border-[5px]\")\">\r\n                   </span>\r\n               </label>;\r\n    }\r\n}\r\n```\r\n\r\nMoving this code to real component works too.\r\n\r\nWhat didn't work: \r\n``` razor\r\n<div>\r\n    @RenderRadio()\r\n    @RenderRadio()\r\n</div>\r\n\r\n@code {\r\n\r\n    private RenderFragment RenderRadio()\r\n    {\r\n        return @<label>\r\n                   @code {\r\n                       bool isChecked = false;\r\n                       void Check()\r\n                       {\r\n                           isChecked = !isChecked;\r\n                       }\r\n                   }\r\n                   <input type=\"radio\" class=\"peer absolute w-0 h-0\" @onclick=\"Check\"/>\r\n                   <span class=\"w-4 h-4 inline-block bg-white border-black border border-solid rounded-[50%]\r\n                            @If(isChecked, \"border-red-900 border-[5px]\")\">\r\n                   </span>\r\n               </label>;\r\n    }\r\n}\r\n```\r\n\r\nThis just reuses fields from parent component so isn't really useful\r\n\r\n### Describe the solution you'd like\r\n\r\nI'd like to understand if I can use closures to create an inline micro components that persist state (like full fledged components) instead of creating new classes.\r\n\r\nMaybe a some kind of trick can be used like a custom component + custom delegate combo or something like that?\r\n\r\n### Additional context\r\n\r\n_No response_",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/44867/comments",
    "author": "En3Tho",
    "comments": [
      {
        "user": "En3Tho",
        "created_at": "2022-11-06T21:04:25Z",
        "body": "I guess I can rephase it like \"can there be functional components\"?\n\nLike smaller ones within one file. Sometimes  you really don't want to have bunch of files with super small stuff inside."
      },
      {
        "user": "TanayParikh",
        "created_at": "2022-11-07T17:40:43Z",
        "body": "Two things of note here would be you aren't calling `StateHasChanged`, and you'd be creating a new closure on every re-render. We aren't sure if what you're trying to achieve here would directly work. You'd have to dig deeper into closure mechanics in C# to come up with a solution. "
      }
    ]
  },
  {
    "number": 44846,
    "title": "Compiler warning when StateHasChanged is called from OnAfterRender",
    "created_at": "2022-11-02T15:42:03Z",
    "closed_at": "2022-11-03T14:53:13Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/44846",
    "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Is your feature request related to a problem? Please describe the problem.\n\nIn order to force re-render the component, we had state changes in `OnAfterRender`, in order to display them , there was a call to `this.StateHasChanged();`.\r\n\r\nThis is causing a never-ending loop of renders. With server-side rendered app this \"worked\" - the app did not crash and it was hard to spot that something wrong was going on.\r\n\r\nIn webassembly app, the page crashed because of the render loop.\r\n\r\n```csharp\r\n protected override void OnAfterRender(bool firstRender)\r\n{\r\n    base.OnAfterRender(firstRender);\r\n\r\n    // some possible changes to state\r\n\r\n    this.StateHasChanged();\r\n}\r\n```\n\n### Describe the solution you'd like\n\nCompiler should show a warning when there's a possibility of never-ending loop in the rendering cycle.\r\n\r\nIs it possible to detect call to `StateHasChanged` in `OnAfterRender`?\n\n### Additional context\n\n_No response_",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/44846/comments",
    "author": "karpikpl",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2022-11-03T10:04:01Z",
        "body": "@karpikpl thanks for contacting us.\r\n\r\nThe developer is responsible for avoiding infinite render loops in the same way it is responsible for avoiding infinite loops or infinite recursion in regular C# code.\r\n\r\nThe compiler can't (and won't) in general infer when a component renders in an infinite loop or whether that is desirable behavior."
      },
      {
        "user": "karpikpl",
        "created_at": "2022-11-03T14:53:13Z",
        "body": "ok, thanks. That makes sense. \r\nI was hoping that maybe there's something in blazor that can analyze the rendering flows or just in general show warning when `StateHasChanged` is in `OnAfterRender`.\r\nBut I agree that ultimately, it's a developer responsibility.\r\n\r\nIn case of server-side rendered Blazor that was very hard to catch, due to the nature of how renders are scheduled, not instant"
      }
    ]
  },
  {
    "number": 44375,
    "title": "Dynamic blazor",
    "created_at": "2022-10-05T02:17:59Z",
    "closed_at": "2022-10-05T06:48:39Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/44375",
    "body": "### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Is your feature request related to a problem? Please describe the problem.\r\n\r\nI am trying to render a fragment from a markup string, it's contains event but not work.\r\n\r\n```razor\r\n\r\n@((MarkupString)content)\r\n@code {\r\n    string content = \"<div @onclick=Go>Go Go</div>\";\r\n    void Go(){  content = \"new content\"; StateHasChanged(); }\r\n}\r\n```\r\n\r\nContent rendered correct but event didn't work.\r\n\r\n### Describe the solution you'd like\r\n\r\nDynamic component to render markupstring with event callback.\r\n\r\n### Additional context\r\n\r\n_No response_",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/44375/comments",
    "author": "thanhnntq",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2022-10-05T06:48:39Z",
        "body": "@thanhnntq thanks for contacting us.\r\n\r\nThat won't work. The compiler runs at build time, what you are looking for would require the compiler to run at runtime and it is not something we plan to support."
      },
      {
        "user": "thanhnntq",
        "created_at": "2022-10-05T10:51:01Z",
        "body": "It's very cute future, why not plan to support it? It can make blazor more flexible."
      },
      {
        "user": "javiercn",
        "created_at": "2022-10-05T11:49:20Z",
        "body": "@thanhnntq Running the compiler at runtime and generating the necessary code is an incredibly big effort. We know this because we do it in MVC/Razor pages with the Runtime Compilation feature. We simply do not think that the future is worth the cost and we rather focus our resources in other areas that can benefit more people."
      }
    ]
  },
  {
    "number": 44338,
    "title": "does Blazor support  Multi Page Applications (MPA)?",
    "created_at": "2022-10-03T18:57:22Z",
    "closed_at": "2022-10-04T14:19:31Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/44338",
    "body": "i want use C#  as client script in Multi Page Applications (MPA) .\r\n\r\nbut the documentation less information about MPA.\r\n\r\n\r\nWhat is Blazor + MPA? \r\nBlazor + MPA= C# both in server and client,and the client every page with independent  page request to the server.\r\n\r\nif support,how to do ?\r\n\r\n\r\n`I've looked into existing issues, but there is no clear answer. Almost all previous issues were closed with no clear results, so I had to open a new one.`",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/44338/comments",
    "author": "sgf",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2022-10-04T10:21:19Z",
        "body": "@sgf thanks for contacting us.\r\n\r\nYou can render components statically from MVC/Razor pages (if by MPA you mean traditionally server rendered applications). However, we do not have concrete components to deal with forms like we do for MVC/Web API, so you would need to create those yourself.\r\n\r\nWhen rendering static markup, you won't get access to common Blazor functionality like event handlers or `@bind` but you can render a form statically and post the data to a controller in the same way MVC does it."
      },
      {
        "user": "sgf",
        "created_at": "2022-10-04T14:19:31Z",
        "body": "> @sgf thanks for contacting us.\r\n> \r\n> You can render components statically from MVC/Razor pages (if by MPA you mean traditionally server rendered applications). However, we do not have concrete components to deal with forms like we do for MVC/Web API, so you would need to create those yourself.\r\n> \r\n> When rendering static markup, you won't get access to common Blazor functionality like event handlers or `@bind` but you can render a form statically and post the data to a controller in the same way MVC does it.\r\n\r\nThanks, So the conclusion is that MPA is not currently supported.\r\n\r\n"
      }
    ]
  },
  {
    "number": 42892,
    "title": "[Blazor] Question: can i call .net static methods in afterStarted of JavaScript initializers?",
    "created_at": "2022-07-25T11:21:19Z",
    "closed_at": "2022-07-25T15:15:55Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved",
      "feature-blazor-jsinterop"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/42892",
    "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Describe the bug\n\nThe input parameter `blazor` of afterStarted does not have the `invokeMethodAsync` method, which I want to call the static method of layout.\r\nFor example, I want to read timezoneOffset from the browser (`return new Date().getTimezoneOffset();`) and then call the. net static method to assign a value to a global static variable (TimezoneOffset). Other components can then read this variable directly.\n\n### Expected Behavior\n\n_No response_\n\n### Steps To Reproduce\n\n_No response_\n\n### Exceptions (if any)\n\n_No response_\n\n### .NET Version\n\n6.0.400-preview.22330.6\n\n### Anything else?\n\n_No response_",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/42892/comments",
    "author": "capdiem",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2022-07-25T13:34:25Z",
        "body": "@capdiem thanks for contacting us.\r\n\r\nThe Blazor parameter passed to `onAfterStarted` is the Blazor object itself, you need to use `DotNet` which is exposed as a global variable on the window."
      },
      {
        "user": "capdiem",
        "created_at": "2022-07-25T15:15:55Z",
        "body": "Thank you so much. I forgot this."
      }
    ]
  },
  {
    "number": 42870,
    "title": "blazor: using open/close region vs passing int sequence numbers to component creator method",
    "created_at": "2022-07-22T15:53:18Z",
    "closed_at": "2022-07-25T16:24:19Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/42870",
    "body": "I see that generic components in `razor.g.cs` files are rendered using generated internal methods like `TypeInference.CreateMyComp_1` and for these methods `int`  sequence numbers (`int seq, int __seq0`) are being passed to be used for the `builder`.\r\n\r\nWould it be the same if I use an open/close region inside this TypeInference CreateComp method, so I don't have to pass sequence numbers ?\r\nAre there any downsides to using open region so that's why sequence numbers are being passed as parameters ?\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/42870/comments",
    "author": "omuleanu",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2022-07-25T15:55:27Z",
        "body": "@omuleanu thanks for contacting us.\r\n\r\nI don't remember being a major difference, other than the fact that the \"sequence\" doesn't work how many folks think. There might be a small improvement for the diffing logic, but I can't remember the details of if and why.\r\n\r\n@SteveSandersonMS might have the details."
      },
      {
        "user": "SteveSandersonMS",
        "created_at": "2022-07-25T16:15:31Z",
        "body": "> Are there any downsides to using open region so that's why sequence numbers are being passed as parameters ?\r\n\r\nI think the only reason why the generated code does this is for the extremely small performance gain of not having to call `OpenRegion` and `CloseRegion` (which are super cheap, but a method call still uses some instructions). We only bother with such a minor optimization because it's generated code and therefore no humans have to use up their brain cycles writing it.\r\n\r\nIf you're writing your own code, I would definitely not try to recreate this tiny optimization unless you are in some surprising case where it somehow makes a noticeable difference."
      }
    ]
  },
  {
    "number": 42804,
    "title": "Allow @ref be used with existing declaration syntax, instead of having to declare it seperately",
    "created_at": "2022-07-19T07:06:17Z",
    "closed_at": "2022-07-19T12:02:10Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/42804",
    "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Is your feature request related to a problem? Please describe the problem.\n\nWould be nice if I can :\r\n<Element @ref=\"Element K\" style=\"background-color:purple;\"/>\r\n<div @onclick=\"()=>{do something with K}\"/>\r\n\r\ninstead of :\r\n@code{\r\nElement K;\r\n}\r\n<Element @ref=\"Element K\" style=\"background-color:purple;\"/>\r\n<div @onclick=\"()=>{do something with K}\"/>\n\n### Describe the solution you'd like\n\n^\n\n### Additional context\n\n_No response_",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/42804/comments",
    "author": "Xyncgas",
    "comments": [
      {
        "user": "Xyncgas",
        "created_at": "2022-07-19T07:20:01Z",
        "body": "Of course you can also just declare :\r\n```\r\n@code{\r\nElement K = new();\r\n}\r\n//Then use K\r\n```\r\nwould be nice if I can declare it with @ref\r\n\r\nDo you think it's a good idea? Leave a comment below please. Don't forget to follow me on github, I am creating lot things with .NET, come check out my BlazorCL component library it can do a lot of stuffs"
      },
      {
        "user": "javiercn",
        "created_at": "2022-07-19T09:50:58Z",
        "body": "@Xyncgas thanks for contacting us.\r\n\r\nWe don't want to put declarations inside the Markup body, that created great complexity in the compiler for little benefit. There are reasons why we can't autogenerate the `@ref` fields that are explained in similar issues, and we don't plan to address for the time being."
      },
      {
        "user": "Xyncgas",
        "created_at": "2022-07-19T12:02:08Z",
        "body": "Thank you"
      }
    ]
  },
  {
    "number": 42709,
    "title": "Blazor :StateHasChanged() Throws Exception When Called By Executing Background Tasks",
    "created_at": "2022-07-13T09:29:36Z",
    "closed_at": "2022-07-13T10:41:22Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/42709",
    "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Describe the bug\n\nThe exception message I got was :\r\n```\r\nThe current thread is not associated with the Dispatcher. Use InvokeAsync() to switch execution to the Dispatcher when triggering rendering or component state\r\n```\r\n\r\nThe scenario was :\r\n```\r\n        UpdateNotifier = async () =>\r\n        {\r\n            await Task.Delay(1);\r\n            //Some Works, for example this background task detected an update in the databae\r\n            try\r\n            {\r\n                StateHasChanged();\r\n            }\r\n            catch (Exception e)\r\n            {\r\n                int b = 5;\r\n            }\r\n        };\r\n```\r\nBeing executed by :\r\n```\r\nprotected List<Func<Task>>? Worker = default;\r\n    private bool WorkerStarted = false;\r\n    protected void StartWorker(int millisec)\r\n    {\r\n        if (!WorkerStarted)\r\n        {\r\n            int Interval = millisec; WorkerStarted = true;\r\n            _ = Task.Run(async delegate { while (WorkerStarted) { \r\n                //if (Worker != default) \r\n                { await Task.WhenAll(Worker.AsEnumerable().Translate(e=>e())); } \r\n                await Task.Delay(Interval); } });\r\n        }\r\n    }\r\n```\n\n### Expected Behavior\n\nStateHasChanged() should allow me to refresh the component from a background task right?\n\n### Steps To Reproduce\n\n_No response_\n\n### Exceptions (if any)\n\n^\n\n### .NET Version\n\n6.0.400-preview.22301.10\n\n### Anything else?\n\n_No response_",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/42709/comments",
    "author": "Xyncgas",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2022-07-13T10:41:22Z",
        "body": "@Xyncgas thanks for contacting us.\r\n\r\nthat is by design. You need to dispatch the call to the Blazor syncrhornization context via InvokeAsync"
      }
    ]
  },
  {
    "number": 42644,
    "title": "MVC View Not Found when running application directly",
    "created_at": "2022-07-10T12:46:50Z",
    "closed_at": "2022-07-11T14:57:00Z",
    "labels": [
      "question",
      ":heavy_check_mark: Resolution: By Design",
      "area-mvc",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/42644",
    "body": "### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Describe the bug\r\n\r\nMVC Razor view is not found when running as a standalone application, but found when running under VS or `dotnet run`.\r\n\r\nI have a case when the startup process of an ASP.NET Core 2.2 application occurs inside a library. The application calls that library to build and run the host.\r\n\r\nThe setup code in the library adds the application itself as an ApplicationPart to ASP.NET Core MVC, so that the application could define ASP.NET Core MVC controllers and views as well.\r\n\r\nThe problem I'm facing is that a view defined in the application is found when running from visual studio or using \r\n\r\n    dotnet run application.csproj\r\n\r\nbut is not found when running the application's `.exe` file alone.\r\n\r\nBoth the library and the application have an additional views assembly (autogenerated) with the names of `LibraryName.Views.dll` and `ApplicationName.Views.dll` and both of them contains all the views inside.\r\n\r\nThe application is targeting .NET Framework 4.8\r\n\r\n\r\n\r\n### Expected Behavior\r\n\r\nThe views that are defined in the application should be found regardless I'm running the .exe file directly.\r\n\r\n### Steps To Reproduce\r\n\r\n- Create an ASP.NET Core 2.2 application targeting net48 (WebApplication1).\r\n  ```xml\r\n  <Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>net48</TargetFramework>\r\n    <DebugType>full</DebugType>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore\" Version=\"2.2.0\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Mvc\" Version=\"2.2.0\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <ProjectReference Include=\"..\\ClassLibrary1\\ClassLibrary1.csproj\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n  \r\n\r\n- Create a class library targeting net48 (ClassLibrary1)\r\n  ```xml\r\n  <Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n\r\n  <PropertyGroup>\r\n\t  <OutputType>Library</OutputType>\r\n\t  <TargetFramework>net48</TargetFramework>\r\n  </PropertyGroup>\r\n\t<ItemGroup>\r\n\t\t<PackageReference Include=\"Microsoft.AspNetCore\" Version=\"2.2.0\" />\r\n\t\t<PackageReference Include=\"Microsoft.AspNetCore.Mvc\" Version=\"2.2.0\" />\r\n\t</ItemGroup>\r\n</Project>\r\n  \r\n- Add the startup logic in ClassLibrary1\r\n\r\n  ```csharp\r\n  public static class Class1\r\n    {\r\n        public static IWebHostBuilder ConfigureMyCustomWeb(this IWebHostBuilder builder)\r\n        {\r\n            builder.UseStartup<Startup>()\r\n                ;\r\n            return builder;\r\n        }\r\n    }\r\n\r\n  public class Startup\r\n    {\r\n        public void ConfigureServices(IServiceCollection services)\r\n        {\r\n            services\r\n                .AddMvc()\r\n                .AddApplicationPart(Assembly.GetEntryAssembly())\r\n                .SetCompatibilityVersion(CompatibilityVersion.Version_2_2);\r\n        }\r\n\r\n        public void Configure(IApplicationBuilder app, IHostingEnvironment env)\r\n        {\r\n            if (env.IsDevelopment())\r\n            {\r\n                app.UseDeveloperExceptionPage();\r\n            }\r\n            else\r\n            {\r\n                app.UseExceptionHandler(\"/Home/Error\");\r\n            }\r\n\r\n            app.UseMvc();\r\n        }\r\n    }\r\n  \r\n\r\n- Use the above method from th application's Program.cs\r\n  ```cs\r\n  WebHost.CreateDefaultBuilder(args)\r\n                .ConfigureMyCustomWeb()\r\n                .Build().Run();\r\n  ```\r\n- Add a view to WebApplication1 under Views\\Home\\Index.cshtml and a controller under Controllers\\HomeController.cs\r\n- Run the application (WebApplication1.exe)\r\n- Navigate to application's ip+port witness the exception\r\n  - Running the application from within visual studio will not produce this error.\r\n\r\n### Exceptions (if any)\r\n\r\n_No response_\r\n\r\n### .NET Version\r\n\r\n6.0.201\r\n\r\n### Anything else?\r\n\r\nASP.NET Core Version: 2.2\r\n.NET Framework 4.8 (Both the class library and the web application)\r\nVS 2022\r\n\r\nSome logging of the process. The Controller's name is \"HomeController\".\r\n\r\n**Working** (dotnet run):\r\n```log\r\nApplication started. Press Ctrl+C to shut down.\r\ninfo: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor[1]\r\n      Executing ViewResult, running view Index.\r\ndbug: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor[2]\r\n      The view path '/Views/Home/Index.cshtml' was found in 8167.5568ms.\r\ninfo: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor[4]\r\n      Executed ViewResult - view Index executed in 10570.57ms.\r\n```\r\n\r\n**Not working** (application's .exe file)\r\n```log\r\n...\r\nApplication started. Press Ctrl+C to shut down.\r\ninfo: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor[1]\r\n      Executing ViewResult, running view Index.\r\nfail: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor[3]\r\n      The view 'Index' was not found. Searched locations: /Views/Home/Index.cshtml, /Views/Shared/Index.cshtml, /Pages/Shared/Index.cshtml\r\n```\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/42644/comments",
    "author": "MaorBM",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2022-07-11T14:56:47Z",
        "body": "@MaorBM thanks for contacting us.\r\n\r\nRunning the .exe file from the build output folder is not a gesture web applications support. You can either run from Visual Studio or use `dotnet run` to do so, otherwise many local environment settings are not setup correctly (like the ContentRoot folder)\r\n\r\nIf you want to run the app from its host (the exe) you need to first publish the application.\r\n\r\nThat said, in addition to that, .NET 2.2 is out of support, so even if there is a bug, it is not something that we would address. We recommend you either use .NET 2.1 (LTS, which is still supported on .NET Framework) or upgrade to a newer version using .NET Core."
      },
      {
        "user": "MaorBM",
        "created_at": "2022-07-11T19:01:20Z",
        "body": "@javiercn thanks for the reply.\r\nI did published it before running the host (exe).\r\nI will try it on .NET 2.1 and post another issue if the problem persists. (upgrading to a newer version is not an option at the moment)."
      }
    ]
  },
  {
    "number": 42598,
    "title": "Microsoft.AspNetCore.Components.WebAssembly.Rendering.WebAssemblyRenderer[100]       Unhandled exception rendering component: The given key was not present in the dictionary.",
    "created_at": "2022-07-06T17:27:58Z",
    "closed_at": "2022-07-07T13:21:12Z",
    "labels": [
      "question",
      "External",
      "area-blazor",
      "feature-blazor-wasm",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/42598",
    "body": "### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Describe the bug\r\n\r\nWhen I delete a item from the MudTable and did call below lines it was throwing error.\r\n```\r\nawait InvokeAsync(StateHasChanged);\r\nawait Table.ReloadServerData();\r\nMudDialog.Cancel();\r\n```\r\n\r\nrazor code:\r\n\r\n\r\n`<MudTable ServerData=\"@(new Func<TableState, Task<TableData<Employee>>>(GetData))\"\r\n          Breakpoint=\"Breakpoint.None\" Elevation=\"0\" Striped=\"true\" Class=\"mud-border single-action-button-table\" @ref=_table>\r\n    <ToolBarContent>\r\n        @if (@Title)\r\n        {\r\n            <MudText Typo=\"Typo.h6\">In review</MudText>\r\n        }\r\n        <MudTablePager InfoFormat=\"@($\"Showing {infoFormat}\")\" />\r\n    </ToolBarContent>\r\n    <HeaderContent>\r\n        <MudTh>Submitted</MudTh>\r\n        <MudTh>Status</MudTh>\r\n        <MudTh>Address</MudTh>\r\n        <MudTh Class=\"button-td-1\">Cancel</MudTh>\r\n    </HeaderContent>\r\n    <RowTemplate>\r\n        <MudTd DataLabel=\"Submitted\">@context.CreatedOnUtc?.ToDateTime().ToPacificDateString()</MudTd>\r\n        <MudTd DataLabel=\"Status\">\r\n            <div class=\"status-container in-review\">\r\n                <MudIcon Icon=\"@Icons.Material.Filled.Circle\" Title=\"Status\" />\r\n                In review\r\n             </div>\r\n        </MudTd>\r\n        <MudTd DataLabel=\"Address\">@context.Supply.UnparsedAddress</MudTd>\r\n        <MudTd DataLabel=\"Cancel listing\" Class=\"button-td-1\">\r\n            <MudIconButton OnClick=\"@(() => OpenCancelConfirmationDialog(context))\" Icon=\"@Icons.Material.Filled.Cancel\" aria-label=\"Cancel\" Color=\"Color.Primary\" />\r\n        </MudTd>\r\n    </RowTemplate>\r\n    <NoRecordsContent>\r\n        No Data\r\n    </NoRecordsContent>\r\n    <PagerContent>\r\n        <MudTablePager PageSizeOptions=\"@_pageSizeOption\" InfoFormat=\"@($\"Showing {infoFormat}\")\" RowsPerPageString=\"Properties per page\" />\r\n    </PagerContent>\r\n</MudTable>`\r\n\r\nError : \r\nMicrosoft.AspNetCore.Components.WebAssembly.Rendering.WebAssemblyRenderer[100]\r\n      Unhandled exception rendering component: The given key '{ \"id\": 123456,..............,}' was not present in the dictionary.\r\n   at System.Collections.Generic.Dictionary`2[[, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[MudBlazor.MudTr, MudBlazor, Version=6.0.11.0, Culture=neutral, PublicKeyToken=null]].get_Item(SupplyLead key)\r\n   at MudBlazor.TableContext`1[[Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]].Remove(MudTr row, Object item)\r\n   at MudBlazor.MudTr.Dispose()\r\n   at Microsoft.AspNetCore.Components.Rendering.ComponentState.TryDisposeInBatch(RenderBatchBuilder batchBuilder, Exception& exception)\r\n\r\n### Expected Behavior\r\n\r\n_No response_\r\n\r\n### Steps To Reproduce\r\n\r\n_No response_\r\n\r\n### Exceptions (if any)\r\n\r\n_No response_\r\n\r\n### .NET Version\r\n\r\n6.0\r\n\r\n### Anything else?\r\n\r\n_No response_",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/42598/comments",
    "author": "jkanamarlapudi",
    "comments": [
      {
        "user": "jkanamarlapudi",
        "created_at": "2022-07-06T21:34:25Z",
        "body": "So anyone looking at this one yet ?"
      },
      {
        "user": "javiercn",
        "created_at": "2022-07-07T13:20:59Z",
        "body": "@jkanamarlapudi thanks for contacting us.\r\n\r\nThat seems like an issue with the third-party component you are using. We would suggest you file an issue in their repo directly so that they can help you."
      },
      {
        "user": "jkanamarlapudi",
        "created_at": "2022-07-07T14:17:36Z",
        "body": "@javiercn  we are just using mudblazor component MudTable that's it."
      },
      {
        "user": "javiercn",
        "created_at": "2022-07-07T14:55:32Z",
        "body": "@jkanamarlapudi this issue tracker is for issues related to the Blazor framework itself, we don't handle issues with third-party components. From what I can see in the callstack the issue you are having is originated somewhere in MudBlazor, hence why we are recommending you follow up with them."
      },
      {
        "user": "jkanamarlapudi",
        "created_at": "2022-07-07T14:57:01Z",
        "body": "ok will do that one. thank you."
      }
    ]
  },
  {
    "number": 42607,
    "title": "You plan to use TagHelper in Blazor",
    "created_at": "2022-07-02T22:56:24Z",
    "closed_at": "2022-07-08T10:22:54Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved",
      "untriaged"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/42607",
    "body": "You plan to use TagHelper in Blazor\r\nThe TagHelpers really help us, we avoid writing HTML which is redundant\r\nExample if you have changed the name of a Property in a model\r\n‘ class EntityModel\r\n[DisplayName(name=`` Full Name``)]\r\nPublic string Name {get,set}’\r\nWithout TagHelper you have to do it manually in several components.\r\nI understand you can't pass the TagHelper logic into the client browser, but if rendering is two-step\r\nFirst compilation to render TagHelper in the Rasor component\r\nThe second to render up Rasor component at client.\r\nThank you and good day",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/42607/comments",
    "author": "Diaz15h",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2022-07-08T10:22:47Z",
        "body": "@Diaz15h thanks for contacting us.\r\n\r\nWe don't have plans to support tag helpers in components in the near future. Tag helpers are rendered at runtime, so we can't do a \"two-phase\" compilation where we compile the tag helper into a string and then put that string into the component because that happens at build time."
      }
    ]
  },
  {
    "number": 42493,
    "title": "How to set SignInScheme in an application using Microsoft.AspNetCore.Authentication.OpenIdConnect on multiple IDPs",
    "created_at": "2022-06-29T22:02:55Z",
    "closed_at": "2022-06-30T17:38:34Z",
    "labels": [
      "question",
      "area-auth",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/42493",
    "body": "My application uses Microsoft.AspNetCore.Authentication.OpenIdConnect  (version 6.0.6) to work with multiple Identity providers. It is getting \"System.InvalidOperationException: The SignInScheme for a remote authentication handler cannot be set to itself.\". How should the SignInScheme be properly set in this situation to avoid the error? (not setting SignInScheme in my code gives me the same error)\r\n\r\n```\r\n            foreach (var section in _configuration.GetChildren())\r\n            {\r\n                var options = new MicrosoftIdentityOptions();\r\n                section.Bind(options);\r\n\r\n                if (options.ClientId.IsNullOrEmpty())\r\n                    continue; // Skip sections that are not for OpenID Connect.\r\n\r\n                var scheme = section.Key;\r\n\r\n                services.AddAuthentication(scheme)\r\n                        .AddOpenIdConnect(scheme, openIdConnectOptions =>\r\n                        {\r\n                            openIdConnectOptions.ClientId = options.ClientId;\r\n                            openIdConnectOptions.ClientSecret = options.ClientSecret;\r\n                            openIdConnectOptions.Authority = options.Authority;\r\n                            openIdConnectOptions.ResponseType = OpenIdConnectResponseType.Code;\r\n                            openIdConnectOptions.GetClaimsFromUserInfoEndpoint = true;\r\n                            openIdConnectOptions.SignInScheme = scheme;\r\n                        });\r\n            }\r\n```\r\n\r\n```\r\n      An unhandled exception has occurred while executing the request.\r\n      System.InvalidOperationException: The SignInScheme for a remote authentication handler cannot be set to itself.  If it was not explicitly set, the AuthenticationOptions.DefaultSignInScheme or DefaultScheme is used.\r\n         at Microsoft.AspNetCore.Authentication.RemoteAuthenticationOptions.Validate(String scheme)\r\n         at Microsoft.AspNetCore.Authentication.AuthenticationBuilder.<>c__DisplayClass4_0`2.<AddSchemeHelper>b__1(TOptions o)\r\n         at Microsoft.Extensions.Options.ValidateOptions`1.Validate(String name, TOptions options)\r\n         at Microsoft.Extensions.Options.OptionsFactory`1.Create(String name)\r\n         at Microsoft.Extensions.Options.OptionsMonitor`1.<>c__DisplayClass10_0.<Get>b__0()\r\n         at System.Lazy`1.ViaFactory(LazyThreadSafetyMode mode)\r\n         at System.Lazy`1.ExecutionAndPublication(LazyHelper executionAndPublication, Boolean useDefaultConstructor)\r\n         at System.Lazy`1.CreateValue()\r\n         at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.InitializeAsync(AuthenticationScheme scheme, HttpContext context)\r\n         at Microsoft.AspNetCore.Authentication.AuthenticationHandlerProvider.GetHandlerAsync(HttpContext context, String authenticationScheme)\r\n         at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n```",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/42493/comments",
    "author": "WenningQiu",
    "comments": [
      {
        "user": "HaoK",
        "created_at": "2022-06-29T23:10:14Z",
        "body": "SignInScheme needs to be set to a cookie authentication if you are setting this property.  You don't need to set this property if you don't have any cookies you want to persist the claims identity to.  "
      },
      {
        "user": "HaoK",
        "created_at": "2022-06-29T23:12:03Z",
        "body": "What are you trying to do in terms of your auth setup, ideally for SignInScheme, you would configure all of your remoteAuthentication schemes to have the same SignInScheme which would be a cookie, so your app would just check if the cookie exists, if so, the app is authenticated, and the cookie is just the persisted state/claims from whichever remote OIDC the user authenticated with.  Does that make sense?"
      },
      {
        "user": "WenningQiu",
        "created_at": "2022-06-30T03:22:35Z",
        "body": "Thanks @HaoK. \r\n\r\nSo I was able to get past the error by adding Cookie Authentication as below. But I have to explicitly set SignInScheme, otherwise I would get the same error. Does that look right?\r\n\r\n\r\n```\r\n            foreach (var section in _configuration.GetChildren())\r\n            {\r\n                var options = new MicrosoftIdentityOptions();\r\n                section.Bind(options);\r\n\r\n                if (options.ClientId.IsNullOrEmpty())\r\n                    continue; // Skip sections that are not for OpenID Connect.\r\n\r\n                var scheme = section.Key;\r\n                var cookieScheme = $\"{scheme}Cookie\";\r\n\r\n                services.AddAuthentication()\r\n                        .AddCookie(cookieScheme)\r\n                        .AddOpenIdConnect(scheme, openIdConnectOptions =>\r\n                        {\r\n                            openIdConnectOptions.ClientId = options.ClientId;\r\n                            openIdConnectOptions.ClientSecret = options.ClientSecret;\r\n                            openIdConnectOptions.Authority = options.Authority;\r\n                            openIdConnectOptions.ResponseType = OpenIdConnectResponseType.Code;\r\n                            openIdConnectOptions.GetClaimsFromUserInfoEndpoint = true;\r\n                            openIdConnectOptions.SignInScheme = cookieScheme;\r\n                        });\r\n            }\r\n```"
      },
      {
        "user": "HaoK",
        "created_at": "2022-06-30T17:38:34Z",
        "body": "Yep that looks fine, you can also just set DefaultSignInScheme on authenticationOptions once to cookieScheme as a small cleanup"
      }
    ]
  },
  {
    "number": 42316,
    "title": "Blazor RCL Routing Override in Hosting App throws NullReferenceException: Object reference not set to an instance of an object",
    "created_at": "2022-06-21T02:21:20Z",
    "closed_at": "2022-06-21T09:36:47Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved",
      "feature-blazor-routing"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/42316",
    "body": "### Is there an existing issue for this?\n\n- [x] I have searched the existing issues\n\n### Describe the bug\n\nWhen a components in an RCL and another in the hosting application have the same routing path a NullReferenceException is thrown, like:\r\n\r\n`@page \"/Notifications\"`\n\n### Expected Behavior\n\nThe component in the hosting application should take priority over the one in the RCL assembly.\n\n### Steps To Reproduce\n\n-  Create a Blazor Server App\r\n- Add a Page under Pages/Notifications with a `@page \"/Notifications\"` directive\r\n- Create a Razor Class Library\r\n- Add to the RCL a page under Pages/Notifications with a `@page \"/Notifications\"` directive\r\n- Add a reference to the Razor Class Library in the Blazor Server App\r\n- Update the App.razor file in the Blazor Server App to add the AdditionalAssemblies attribute to the Router tag: \r\n`<Router AdditionalAssemblies=\"GetAdditionalAssemblies()\">`, and add to the code:\r\n```\r\n@code {\r\n    private Assembly[] GetAdditionalAssemblies()\r\n    {\r\n        return new Assembly[]{ typeof(RCLAssembly.Pages.Notifications.Index).Assembly };\r\n    }\r\n}\r\n```\n\n### Exceptions (if any)\n\nNullReferenceException: Object reference not set to an instance of an object.\r\n\r\n> Microsoft.AspNetCore.Components.Routing.Router.Refresh(bool isNavigationIntercepted)\r\n> Microsoft.AspNetCore.Components.Routing.Router.SetParametersAsync(ParameterView parameters)\r\n> Microsoft.AspNetCore.Components.Rendering.HtmlRenderer.HandleException(Exception exception)\r\n> Microsoft.AspNetCore.Components.RenderTree.Renderer.HandleExceptionViaErrorBoundary(Exception error, ComponentState errorSourceOrNull)\r\n> Microsoft.AspNetCore.Components.RenderTree.Renderer.AddToPendingTasks(Task task, ComponentState owningComponentState)\r\n> Microsoft.AspNetCore.Components.Rendering.ComponentState.SupplyCombinedParameters(ParameterView directAndCascadingParameters)\r\n> Microsoft.AspNetCore.Components.Rendering.ComponentState.SetDirectParameters(ParameterView parameters)\r\n> Microsoft.AspNetCore.Components.RenderTree.RenderTreeDiffBuilder.InitializeNewComponentFrame(ref DiffContext diffContext, int frameIndex)\r\n> Microsoft.AspNetCore.Components.RenderTree.RenderTreeDiffBuilder.InitializeNewSubtree(ref DiffContext diffContext, int frameIndex)\r\n> Microsoft.AspNetCore.Components.RenderTree.RenderTreeDiffBuilder.InsertNewFrame(ref DiffContext diffContext, int newFrameIndex)\r\n> Microsoft.AspNetCore.Components.RenderTree.RenderTreeDiffBuilder.InsertNewFrame(ref DiffContext diffContext, int newFrameIndex)\r\n> Microsoft.AspNetCore.Components.RenderTree.RenderTreeDiffBuilder.AppendDiffEntriesForRange(ref DiffContext diffContext, int oldStartIndex, int oldEndIndexExcl, int newStartIndex, int newEndIndexExcl)\r\n> Microsoft.AspNetCore.Components.RenderTree.RenderTreeDiffBuilder.ComputeDiff(Renderer renderer, RenderBatchBuilder batchBuilder, int componentId, ArrayRange<RenderTreeFrame> oldTree, ArrayRange<RenderTreeFrame> newTree)\r\n> Microsoft.AspNetCore.Components.Rendering.ComponentState.RenderIntoBatch(RenderBatchBuilder batchBuilder, RenderFragment renderFragment, out Exception renderFragmentException)\r\n> Microsoft.AspNetCore.Components.RenderTree.Renderer.ProcessRenderQueue()\r\n> Microsoft.AspNetCore.Components.Rendering.HtmlRenderer.HandleException(Exception exception)\r\n> Microsoft.AspNetCore.Components.RenderTree.Renderer.ProcessRenderQueue()\r\n> Microsoft.AspNetCore.Components.RenderTree.Renderer.ProcessPendingRender()\r\n> Microsoft.AspNetCore.Components.RenderTree.Renderer.AddToRenderQueue(int componentId, RenderFragment renderFragment)\r\n> Microsoft.AspNetCore.Components.ComponentBase.StateHasChanged()\r\n> Microsoft.AspNetCore.Components.ComponentBase.CallOnParametersSetAsync()\r\n> Microsoft.AspNetCore.Components.ComponentBase.RunInitAndSetParametersAsync()\r\n> Microsoft.AspNetCore.Components.Rendering.HtmlRenderer.HandleException(Exception exception)\r\n> Microsoft.AspNetCore.Components.RenderTree.Renderer.HandleExceptionViaErrorBoundary(Exception error, ComponentState errorSourceOrNull)\r\n> Microsoft.AspNetCore.Components.RenderTree.Renderer.AddToPendingTasks(Task task, ComponentState owningComponentState)\r\n> Microsoft.AspNetCore.Components.Rendering.ComponentState.SupplyCombinedParameters(ParameterView directAndCascadingParameters)\r\n> Microsoft.AspNetCore.Components.Rendering.ComponentState.SetDirectParameters(ParameterView parameters)\r\n> Microsoft.AspNetCore.Components.RenderTree.Renderer.RenderRootComponentAsync(int componentId, ParameterView initialParameters)\r\n> Microsoft.AspNetCore.Components.Rendering.HtmlRenderer.CreateInitialRenderAsync(Type componentType, ParameterView initialParameters)\r\n> Microsoft.AspNetCore.Components.Rendering.HtmlRenderer.RenderComponentAsync(Type componentType, ParameterView initialParameters)\r\n> Microsoft.AspNetCore.Components.Rendering.RendererSynchronizationContext+<>c__11<TResult>+<<InvokeAsync>b__11_0>d.MoveNext()\r\n> Microsoft.AspNetCore.Mvc.ViewFeatures.StaticComponentRenderer.PrerenderComponentAsync(ParameterView parameters, HttpContext httpContext, Type componentType)\r\n> Microsoft.AspNetCore.Mvc.ViewFeatures.ComponentRenderer.PrerenderedServerComponentAsync(HttpContext context, ServerComponentInvocationSequence invocationId, Type type, ParameterView parametersCollection)\r\n> Microsoft.AspNetCore.Mvc.ViewFeatures.ComponentRenderer.RenderComponentAsync(ViewContext viewContext, Type componentType, RenderMode renderMode, object parameters)\r\n> Microsoft.AspNetCore.Mvc.TagHelpers.ComponentTagHelper.ProcessAsync(TagHelperContext context, TagHelperOutput output)\r\n> Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner.<RunAsync>g__Awaited|0_0(Task task, TagHelperExecutionContext executionContext, int i, int count)\r\n> WebPx.Sutz.App.Admin.Pages.Shared.Amanda.Pages_Shared_Amanda__Host.ExecuteAsync() in _Host.cshtml\r\n> +\r\n> <component type=\"@appType\" render-mode=\"ServerPrerendered\" />\r\n> Microsoft.AspNetCore.Mvc.Razor.RazorView.RenderPageCoreAsync(IRazorPage page, ViewContext context)\r\n> Microsoft.AspNetCore.Mvc.Razor.RazorView.RenderPageAsync(IRazorPage page, ViewContext context, bool invokeViewStarts)\r\n> Microsoft.AspNetCore.Mvc.Razor.RazorView.RenderAsync(ViewContext context)\r\n> Microsoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor.ExecuteAsync(ViewContext viewContext, string contentType, Nullable<int> statusCode)\r\n> Microsoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor.ExecuteAsync(ViewContext viewContext, string contentType, Nullable<int> statusCode)\r\n> Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResultFilterAsync>g__Awaited|30_0<TFilter, TFilterAsync>(ResourceInvoker invoker, Task lastTask, State next, Scope scope, object state, bool isCompleted)\r\n> Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResultExecutedContextSealed context)\r\n> Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.ResultNext<TFilter, TFilterAsync>(ref State next, ref Scope scope, ref object state, ref bool isCompleted)\r\n> Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeResultFilters()\r\n> Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, object state, bool isCompleted)\r\n> Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)\r\n> Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(ref State next, ref Scope scope, ref object state, ref bool isCompleted)\r\n> Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeFilterPipelineAsync()\r\n> Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n> Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n> Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n> Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n> Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n> Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)\n\n### .NET Version\n\n6.0.6\n\n### Anything else?\n\nASP.NET Core 6.0\r\nVisual Studio 2022 17.1.0",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/42316/comments",
    "author": "jlchavez",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2022-06-21T09:36:47Z",
        "body": "@jlchavez thanks for contacting us.\r\n\r\nOverriding routes from RCL is not a behavior we support in Blazor applications. WRT to the null reference exception, that's something we have addressed in .NET 7.0."
      },
      {
        "user": "jlchavez",
        "created_at": "2022-06-21T22:16:10Z",
        "body": "It seems the criteria should be the same as in Razor Pages, if it has a use case on .net core under one paradigm, it should be usefull on the other one, that's why I usually don't ask for features just consistency on what Microsoft develops. For the rest I build it my self. I know the trend since .net core inception is DRY 2.0 = Do Repeat Yourself, and you go with it.\r\n\r\nFixing bugs shouldn't be scheduled once a year, but well, it's the bargain of open source, \"AS IS\"."
      }
    ]
  },
  {
    "number": 42301,
    "title": "[Blazor] Actions in for loop, i always at end loop value",
    "created_at": "2022-06-20T13:33:16Z",
    "closed_at": "2022-06-20T15:05:53Z",
    "labels": [
      "question",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/42301",
    "body": "### Is there an existing issue for this?\n\n- [x] I have searched the existing issues\n\n### Describe the bug\n\nLet's make a simple example to be clearer than text.\r\n\r\n```\r\n@for (int i = 0; i < 10; i++)\r\n{\r\n   <button @onclick=@(() => OnClick(i))>@i</button>\r\n}\r\n```\r\n\r\nThe `OnClick` method will always recieve `10` (the end loop value), no matter which button is clicked.\r\n\r\nI've found a workaround by storing the value in a local variable :\r\n```\r\n@for (int i = 0; i < 10; i++)\r\n{\r\n   var curValue = i;\r\n   <button @onclick=@(() => OnClick(curValue))>@i</button>\r\n}\r\n```\r\n\r\nI think we shouldn't take care of storing the loop variable in a local variable.\r\n\r\n\r\nPS : Couln't find an explicit title\n\n### Expected Behavior\n\n_No response_\n\n### Steps To Reproduce\n\n_No response_\n\n### Exceptions (if any)\n\n_No response_\n\n### .NET Version\n\nNET6\n\n### Anything else?\n\n_No response_",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/42301/comments",
    "author": "Bisjob",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2022-06-20T15:05:27Z",
        "body": "@Rizov74 thanks for contacting us.\r\n\r\nYou need to use a `foreach` loop or capture the index variable inside the loop.\r\n\r\nThe issue is that the scope of the `for loop` variable expands the loop contents and when you use constructs that translate into delegates (like render fragments) that causes the loop variable to be captured. To prevent that from happening, you need to do something like this:\r\n```csharp\r\nfor(var i = 0; i < 10; i++)\r\n{\r\n  var index = i;\r\n}\r\n```\r\nAnd use index within the rest of your code.\r\n\r\nIt is an unfortunate behavior of the interaction between Blazor and the C# compiler, but it is not something we plan to change, as Blazor never transforms the code the user generates (it only transpiles it to C#)\r\n"
      }
    ]
  },
  {
    "number": 41586,
    "title": "BuilderRenderTree doesn't create \"checked\" attribute for input",
    "created_at": "2022-05-09T15:31:43Z",
    "closed_at": "2022-05-09T16:36:22Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/41586",
    "body": "Hi\r\nWhen you using BuildRenderTree to create a checkbox component, its can not create \"checked\" attribute, but value of component are correct and there is no issue with binding value.\r\n\r\nSample:\r\n<input type=\"checkbox\" checked />\r\nBuildRenderTree doesn't create checked attribute.\r\n\r\nsample code:\r\n```\r\nprotected override void BuildRenderTree(RenderTreeBuilder builder)\r\n{\r\n\tint seq = 0;\r\n\tbuilder.OpenElement(++seq, \"input\");\r\n\tbuilder.AddAttribute(++seq, \"type\", \"checkbox\");\r\n\r\n\t//its not work\r\n\tbuilder.AddAttribute(++seq, \"checked\");\r\n\t//its not work too\r\n\t//builder.AddAttribute(++seq, \"checked\", true);\r\n\t//its not work too\r\n\t//builder.AddAttribute(++seq, \"checked\", \"true\");\r\n\r\n\t//its cant help\r\n\tbuilder.SetUpdatesAttributeName(\"checked\");\r\n\r\n\tbuilder.CloseElement();\r\n}\r\n```",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/41586/comments",
    "author": "mRizvandi",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2022-05-09T16:35:56Z",
        "body": "@mRizvandi thanks for contacting us.\r\n\r\nYou need to use `value` as Blazor normalizes the attribute for inputs."
      },
      {
        "user": "mRizvandi",
        "created_at": "2022-05-14T09:47:55Z",
        "body": "Hi,\r\nThanks for your attention.\r\n'value' not work properly, input doesn't change with value property.\r\n\r\n//its not work\r\nbuilder.AddAttribute(++seq, \"value\", value);\r\n\r\nThe only way to using correct value of checkbox is using \"checked\" property."
      }
    ]
  },
  {
    "number": 41147,
    "title": "The front end text boxes width is minimized after running them this is happening for next 2 weeks ",
    "created_at": "2022-04-12T10:37:16Z",
    "closed_at": "2022-04-12T22:23:46Z",
    "labels": [
      "question",
      "External",
      "area-mvc"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/41147",
    "body": "### Is there an existing issue for this?\r\n\r\n- [ ] I have searched the existing issues\r\n\r\n### Describe the bug\r\n\r\nIn our dot net project we have used bootstrap for styling the front end but now when we open it the width of text boxes are shorter and the whole front end has been looking strange this is happening 2nd time in a week . We even try to run it on older version but the same problem is seen their . we even try to build new module but this thing is still happening .we dont want to change the front end can you clear the problem \r\n\r\n### Expected Behavior\r\n\r\nWe expect that our front end with bootstrap should run as before there should be no compromise with our frontend . the text boxes should be seen as they should be unexpected behavior should be excluded.\r\n\r\n### Steps To Reproduce\r\n\r\n_No response_\r\n\r\n### Exceptions (if any)\r\n\r\n_No response_\r\n\r\n### .NET Version\r\n\r\n4.7\r\n\r\n### Anything else?\r\n\r\nbootstrap ",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/41147/comments",
    "author": "NameIsShubham",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2022-04-12T15:40:13Z",
        "body": "Thanks for contacting us @NameIsShubham .\r\n\r\nIt looks like this is a question about how to use Bootstrap. We can't tell there is any framework specific issue with ASP.NET Core here. We would suggest you post on Stackoverflow or a similar site to get a better and faster answer to your problem.\r\n\r\nIf you still think this is an issue with ASP.NET Core, provide a minimal repro project with detailed steps on how to reproduce the issue, the concrete behavior you are observing and the expected behavior. Otherwise, we are unable to make progress on this issue with the current information."
      },
      {
        "user": "ghost",
        "created_at": "2022-04-12T15:50:42Z",
        "body": "Hi @NameIsShubham. We have added the \"Needs: Author Feedback\" label to this issue, which indicates that we have an open question for you before we can take further action. This issue will be closed automatically in 7 days if we do not hear back from you by then - please feel free to re-open it if you come back to this issue after that time."
      },
      {
        "user": "TanayParikh",
        "created_at": "2022-04-12T22:23:11Z",
        "body": "Hello @NameIsShubham, thanks for contacting us. It appears you're using .NET Framework 4.7. Please note, this repo is specifically for ASP.NET Core. If you believe this is an issue with .NET Framework, please report it within the Visual Studio `Report a Problem` dialogue so it may be directed to the appropriate team."
      }
    ]
  },
  {
    "number": 41011,
    "title": "Nesting AuthorizeView and Authorized components with various roles",
    "created_at": "2022-04-01T17:56:52Z",
    "closed_at": "2022-04-04T11:54:39Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/41011",
    "body": "### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Is your feature request related to a problem? Please describe the problem.\r\n\r\nI would like to have a section of a NavBar component wrapped in an `<AuthorizeView>` tag to limit access to only authorized users, but then use nested `<AuthorizeView Roles=\"admin, user, etc\">` within to show/hide various options within the list, if shown. However, I can't use two `<AuthorizeView>` tags due to context conflicts.\r\n\r\nThis is similar to issue #20294 which was closed.\r\n\r\n### Describe the solution you'd like\r\n\r\nBe able to nest `<AuthorizeView>` tags with more restrictive roles in the inner tags to allow for showing/hiding content and subcontent",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/41011/comments",
    "author": "aterbo",
    "comments": [
      {
        "user": "MariovanZeist",
        "created_at": "2022-04-01T18:44:19Z",
        "body": "Hi @aterbo \r\nYou can nest ``<AuthorizeView>``  tags if you want, but you will have to rename the Context\r\n\r\nLike in this example:\r\n\r\n```razor\r\n<AuthorizeView Policy=\"MyPolicy\">\r\n    Show when MyPolicy is valid\r\n    @context.User                               @*<- just to show that you can access the AuthenticationState variable*@\r\n    <AuthorizeView Policy=\"MySecondPolicy\" Context=SomeOtherName>     @*Here I renamed the Context to SomeOthername  *@\r\n        Show only when MySecondPolicy is valid\r\n        @SomeOtherName.User                      @*<- just to show that you can access the AuthenticationState variable*@\r\n    </AuthorizeView>\r\n</AuthorizeView>\r\n```\r\n\r\nThis is because the ``ChildContent``  of an ``<AuthorizeView>`` component is of type ``RenderFragment<AuthenticationState>`` \r\nFor these generic Renderfragments, Blazor will generate a  variable named ``context`` that you can use to access that ``AuthenticationState``\r\nIf you have nesting components that each have generic render fragments (Like in the example above) you get into a problem that the variable in the nested component is also named ``context``, and that would give a compile error as you can't use 2 different variables with the same name.\r\n\r\nThat's why to get it to work you will have to rename the Context to something else, and you can access that variable using that name (as I did above)\r\n"
      },
      {
        "user": "aterbo",
        "created_at": "2022-04-01T19:13:56Z",
        "body": "Well, that's simple..... Thank you for your help, @MariovanZeist that worked perfectly.\r\n\r\nThis may be room for improvement on the docs. They discuss accessing `context` for various reasons, but not nesting components. Although, that may be repetitive, because had I thought through the `ChildContent` aspect more, it should be treated like any other component where you need to rename context.\r\n\r\nI'm happy to close the issue if this type of documentation change isn't needed."
      },
      {
        "user": "javiercn",
        "created_at": "2022-04-04T11:54:39Z",
        "body": "@aterbo thanks for contacting us.\r\n\r\n@MariovanZeist answer is correct here."
      }
    ]
  },
  {
    "number": 40942,
    "title": "Program.Main.cs for the worker template should not use Company.WebApplication1 for the namespace",
    "created_at": "2022-03-29T21:48:50Z",
    "closed_at": "2022-03-30T08:04:25Z",
    "labels": [
      "question",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved",
      "feature-templates",
      "area-networking"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/40942",
    "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Describe the bug\n\nThe recently added `src\\ProjectTemplates\\Web.ProjectTemplates\\content\\Worker-CSharp\\Program.Main.cs` file should not use `Company.WebApplication1` for the namespace, because background worker services are not 'web applications'. This is the currently checked in code:\r\n\r\n```cs\r\nusing Company.Application1;\r\n\r\nnamespace Company.WebApplication1;\r\n\r\npublic class Program\r\n{\r\n    public static void Main(string[] args)\r\n    {\r\n        IHost host = Host.CreateDefaultBuilder(args)\r\n            .ConfigureServices(services =>\r\n            {\r\n                services.AddHostedService<Worker>();\r\n            })\r\n            .Build();\r\n\r\n        host.Run();\r\n    }\r\n}\r\n```\n\n### Expected Behavior\n\nThe namespace should be something like `Company.BackgroundService1` or something similar to more accurately reflect the nature of the service.\n\n### Steps To Reproduce\n\n_No response_\n\n### Exceptions (if any)\n\n_No response_\n\n### .NET Version\n\n_No response_\n\n### Anything else?\n\n_No response_",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/40942/comments",
    "author": "Treit",
    "comments": [
      {
        "user": "TanayParikh",
        "created_at": "2022-03-29T21:57:28Z",
        "body": "Hi @Treit, thanks for contacting us. Per my understanding the `Company.WebApplication1` namespace is just a placeholder and is overwritten by the templating engine when you actually use the template to create a project. I could be mistaken though, so will leave the issue open so we can get confirmation on that understanding."
      },
      {
        "user": "javiercn",
        "created_at": "2022-03-30T08:04:16Z",
        "body": "@Treit thanks for contacting us.\r\n\r\nWe use that name as a placeholder in all our templates as @TanayParikh suggested. This is an internal implementation detail that doesn't get reflected on the generated projects and that we don't have intention to change, since it makes it harder to make changes across all our templates when needed."
      }
    ]
  },
  {
    "number": 40557,
    "title": "Reporting and Printing In Blazor",
    "created_at": "2022-03-06T04:44:35Z",
    "closed_at": "2022-03-07T10:47:27Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved",
      "feature-blazor-builtin-components"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/40557",
    "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Is your feature request related to a problem? Please describe the problem.\n\n_No response_\n\n### Describe the solution you'd like\n\nBlazor should have **At least basic level of built-in components** \r\nfor Reporting and Printing that can be further extended by developer as per their need like :-\r\n\r\n1. Pdf-Generator And Viewer Components.\r\n2. Fully Bound/Unbound DataGrid Component.\r\n3. Print Preview & Direct Printing Capabilities.\r\n\r\nThease are the main features required for enterprise level of applications..\r\nplease consider\r\n\r\nRegards-\r\nSanjeeb\n\n### Additional context\n\n_No response_",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/40557/comments",
    "author": "hintsofttech",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2022-03-07T10:47:25Z",
        "body": "@hintsofttech thanks for contacting us.\r\n\r\nOur team is focused on delivering a great runtime/framework to build Blazor applications. This is not something we plan to tackle in the near future as there is a rich ecosystem of third party components that we think better supports these scenarios."
      },
      {
        "user": "hintsofttech",
        "created_at": "2022-03-07T11:30:23Z",
        "body": "> third party components\r\n\r\nevery developer don't want to depend on third party controls.\r\nat least basic levels fo components should be built in.."
      }
    ]
  },
  {
    "number": 40311,
    "title": "Similar to MarkupString but for custom components.",
    "created_at": "2022-02-19T06:04:08Z",
    "closed_at": "2022-02-21T12:44:34Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/40311",
    "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Is your feature request related to a problem? Please describe the problem.\n\nI have a requirement to make an App where user can fill a page with components, customize them as he like, and then be able to save that state in a database.\r\nI am aware of Dynamic Components but saving such thing in database is troublesome opposing to just creating everything as a string and saving as a string in database, retrieving as a string etc... you get the idea.\n\n### Describe the solution you'd like\n\nA way to create components at runtime using string.  \n\n### Additional context\n\n_No response_",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/40311/comments",
    "author": "Said1996",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2022-02-21T12:44:31Z",
        "body": "@Said1996 thanks for contacting us.\r\n\r\nThis is not a direction we plan to go in the near future. This would require the runtime to parse and evaluate Razor code at runtime, which is not something we plan to do."
      }
    ]
  },
  {
    "number": 40185,
    "title": "Generate dictionary keys in blazor @bind",
    "created_at": "2022-02-13T09:56:51Z",
    "closed_at": "2022-03-09T20:11:30Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/40185",
    "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Is your feature request related to a problem? Please describe the problem.\n\nI would like to propose that `@bind=\"MyDictionary[keyVariable]\"` creates the key in dictionary, please check the following example\r\n\r\n```\r\n@foreach(var obj in List)\r\n{\r\n    <input @bind=\"Data[obj.Id]\"/>\r\n}\r\n\r\n@code{\r\n    Dictionary<string, string> Data = new ();\r\n}\r\n```\n\n### Describe the solution you'd like\n\nI would like the blazor to dynamically create keys from a @bind\n\n### Additional context\n\n_No response_",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/40185/comments",
    "author": "ctigrisht",
    "comments": [
      {
        "user": "KristofferStrube",
        "created_at": "2022-02-13T21:38:31Z",
        "body": "Bind cares about wheter or not you can get and set the property that is passed to it. We don't have this capability for lists or arrays either. If it were to automatically add the key then that would not be the behaviour I would expect.\r\n\r\nYou can instead achieve this with a custom Class like so:\r\n```razor\r\n@foreach (var obj in List)\r\n{\r\n    <input @bind=\"Data[obj.Id]\" />\r\n}\r\n\r\n@foreach(string s in Data.InternalDict.Values)\r\n{\r\n    <p>@s</p>\r\n}\r\n\r\n@code {\r\n    public AutoAddDict<string, string> Data = new();\r\n\r\n    IEnumerable<Thing> List { get; set; } = Enumerable.Range(0, 5).Select(i => new Thing() { Id = i.ToString() });\r\n\r\n    private class Thing\r\n    {\r\n        public string Id { get; set; }\r\n    }\r\n\r\n    public class AutoAddDict<TKey, Tvalue>\r\n    {\r\n        public Dictionary<TKey, Tvalue> InternalDict { get; } = new();\r\n\r\n        public Tvalue this[TKey key]\r\n        {\r\n            get\r\n            {\r\n                if (!InternalDict.ContainsKey(key))\r\n                {\r\n                    InternalDict.Add(key, default);\r\n                }\r\n                return InternalDict[key];\r\n            }\r\n            set\r\n            {\r\n                InternalDict[key] = value;\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nBut I think this would be nicer to achieve by instead adding some string property to the Thing that you iterate over and then Bind the input to that if possible."
      },
      {
        "user": "javiercn",
        "created_at": "2022-02-14T10:53:20Z",
        "body": "@KristofferStrube answer is correct.\r\n\r\n`@bind` doesn't have any knowledge of whether your property is an array or a dictionary and won't be able to generate specialized code in response. This is not something we plan to change in the short term."
      }
    ]
  },
  {
    "number": 40052,
    "title": "Update project templates to use LibMan",
    "created_at": "2022-02-08T02:32:34Z",
    "closed_at": "2022-02-08T09:49:52Z",
    "labels": [
      "question",
      "area-mvc",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved",
      "feature-templates"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/40052",
    "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Is your feature request related to a problem? Please describe the problem.\n\n_No response_\n\n### Describe the solution you'd like\n\n#5415 Is there any update?\n\n### Additional context\n\n_No response_",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/40052/comments",
    "author": "Varorbc",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2022-02-08T09:49:52Z",
        "body": "@Varorbc thanks for contacting us.\r\n\r\nNothing has changed in this front for the time being"
      }
    ]
  },
  {
    "number": 40027,
    "title": "Blazor WASM: Possible to pass pointer to JavaScript?",
    "created_at": "2022-02-07T10:58:38Z",
    "closed_at": "2022-02-07T13:57:53Z",
    "labels": [
      "question",
      "area-blazor",
      "feature-blazor-wasm",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/40027",
    "body": "I am passing large byte arrays to JavaScript using IJSInProcessObjectReference. However, because of memory and garbage collector issues  (#64047), I am trying to handle memory allocation and deallocation myself with Marshal.AllocHGlobal.\r\n\r\nIs it possible to pass an IntPtr or any other type of pointer (ushort*, byte*, void*) to JavaScript? If I pass it as an IntPtr, it seems like I'm simply getting an integer on the JavaScript side.\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/40027/comments",
    "author": "jahnotto",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2022-02-07T13:57:45Z",
        "body": "@jahnotto thanks for contacting us.\r\n\r\nI would point out a few things. I imagine you are doing unmarshalled interop using the mono bindings APIs. In general, I would stay away from this type of interop as its not guaranteed to be stable and might break in the future.\r\n\r\nPointers are represented as number instances on the JavaScript side. You need to go through the mono APIs to do things like access object members and so on. If you are looking to do something like `pointer.Field` in JavaScript, that's not something I believe is possible."
      }
    ]
  },
  {
    "number": 40021,
    "title": ".Net 6 pass array in query string",
    "created_at": "2022-02-06T16:05:41Z",
    "closed_at": "2022-02-06T18:13:13Z",
    "labels": [
      "question",
      "old-area-web-frameworks-do-not-use"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/40021",
    "body": "### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Describe the bug\r\n\r\nI've asked this question in SO but no answer.\r\nI have an issue with passing string array in query string and I don't know what's happening. here is the request:\r\n```\r\n.../api/customers/todos?customerValue=0&branchId=120&allianceId=1&searchValue=&offset=0&count=14&statuses=one&statuses=two&statuses=three\r\n```\r\nand this is my method:\r\n```\r\npublic async Task<PaginatedResult<TodoVm>> GetTodos(decimal? customerValue, string branchId, \r\n            long? allianceId, string searchValue,\r\n            string[] statuses = null,\r\n            int offset = 0, int count = 20)\r\n        {\r\n            //do some stuff and return response\r\n        }\r\n```\r\nwhen I call the api it gives me this error and cannot bind the statues parameter:\r\n```\r\n{\r\n    \"title\": \"One or more validation errors occurred.\",\r\n    \"status\": 400,\r\n    \"errors\": {\r\n        \"$\": [\r\n            \"The input does not contain any JSON tokens. Expected the input to start with a valid JSON token, when isFinalBlock is true. Path: $ | LineNumber: 0 | BytePositionInLine: 0.\"\r\n        ]\r\n    }\r\n}\r\n```\r\nbut when I use **FromQuery** it works! like this:\r\n```\r\npublic async Task<PaginatedResult<TodoVm>> GetTodos(decimal? customerValue, string branchId, \r\n            long? allianceId, string searchValue,\r\n            [FromQuery(Name = \"statuses\")] string[] statuses = null,\r\n            int offset = 0, int count = 20)\r\n        {\r\n            //do some stuff and return response\r\n        }\r\n```\r\nother parameters will be mapped correctly but for array I have to use FromQuery.\r\nFYI, this is how I add controller in Startup:\r\n```\r\nservices.AddControllers()\r\n            .AddJsonOptions(options =>\r\n            {\r\n                options.JsonSerializerOptions.PropertyNameCaseInsensitive = false;\r\n                options.JsonSerializerOptions.ReferenceHandler = ReferenceHandler.IgnoreCycles;\r\n                options.JsonSerializerOptions.AllowTrailingCommas = false;\r\n            });\r\n```\r\n\r\n### .NET Version\r\n\r\n6.0.100\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/40021/comments",
    "author": "sa-es-ir",
    "comments": [
      {
        "user": "davidfowl",
        "created_at": "2022-02-06T17:02:08Z",
        "body": "Arrays are treated as body parameters in `[ApiController]` unconditionally so you need to specify `[FromQuery]`.\r\n\r\n```C#\r\npublic async Task<PaginatedResult<TodoVm>> GetTodos(decimal? customerValue, string branchId, \r\n            long? allianceId, string searchValue,\r\n            [FromQuery] string[] statuses = null,\r\n            int offset = 0, int count = 20)\r\n        {\r\n            //do some stuff and return response\r\n        }\r\n```\r\n\r\nYou don't need `Name=\"statuses\"` btw."
      },
      {
        "user": "sa-es-ir",
        "created_at": "2022-02-06T17:13:39Z",
        "body": "Ok nice, I asked this because when I remove `statuses` from input parameters I still can get array like this:\r\n```\r\nstring[] statuses=HttpContext.Request.Query[\"statuses\"].ToArray();\r\n```\r\nand I didn't now for array it searches in body for binding values.\r\nThis behavior is for all .net versions? because I think it was ok for .net core 3.1\r\nThanks"
      }
    ]
  },
  {
    "number": 39884,
    "title": "Duplicated client assemblies after publish",
    "created_at": "2022-01-31T07:53:37Z",
    "closed_at": "2022-01-31T10:50:48Z",
    "labels": [
      "question",
      "area-blazor",
      "feature-blazor-wasm",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved",
      "feature-blazor-deployment"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/39884",
    "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Describe the bug\n\nIf i publish a ASP.NET Core hosted web assembly blazor app (using the provided template), then client  assemblies are duplicated in publish folder. Once in wwwroot/_framework folder (with i assume is the right behavior) and once in the publish root folder next to all server assemblies.\n\n### Expected Behavior\n\nAll client assemblies occuring only once in wwwroot/_framework folder after publish.\n\n### Steps To Reproduce\n\n- Create a new ASP.NET Core hosted web assembly blazor app (using the template)\r\n- dotnet publish ./Server.csproj\r\n- Navigate to publish output\n\n### Exceptions (if any)\n\n_No response_\n\n### .NET Version\n\n6.0.101\n\n### Anything else?\n\n_No response_",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/39884/comments",
    "author": "Fabster1993",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2022-01-31T10:18:44Z",
        "body": "@Fabster1993 thanks for contacting us.\r\n\r\nThat's expected and by design. Assemblies in `wwwroot/_framework` are trimmed and meant for consumption on the browser, while assemblies on the publish folder are meant for consumption by the server app, for example, when prerendering the app.\r\n\r\nHope this helps."
      },
      {
        "user": "Fabster1993",
        "created_at": "2022-01-31T10:21:19Z",
        "body": "@javiercn Oh, that makes sense. Thank you for the answer!"
      }
    ]
  },
  {
    "number": 39719,
    "title": "Support for a standard router in the new one or extension of the current one with additional parameters.",
    "created_at": "2022-01-24T08:46:14Z",
    "closed_at": "2022-03-25T20:00:41Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "feature-blazor-routing"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/39719",
    "body": "<!--\r\nThis template is useful to build consensus about whether work should be done, and if so, the high-level shape of how it should be approached. Use this before fixating on a particular implementation.\r\n-->\r\n\r\n## Summary\r\n\r\nI created my router to control subpages, it works only as I set it up. I need to add support for a standard router. The main assumption:\r\nBefore giving the route, it wants to search the database and then display the correct condition, if there is no record in the database, the standard router is started.\r\n\r\n## Motivation and goals\r\n\r\nThis solves seo problems, creates a nice link. Example:\r\ndomain.pl/games/counter-strike -> domain.pl/counter-strike\r\ndomain.pl/player/Alerin -> domain.pl/Alerin\r\nThanks to this, we have nice and short links.\r\n\r\n## Examples\r\n\r\n```cs\r\nusing Microsoft.AspNetCore.Components;\r\nusing Microsoft.AspNetCore.Components.Routing;\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Reflection;\r\nusing System.Threading.Tasks;\r\n\r\n\r\nnamespace Website;\r\n\r\npublic class ConventionRouter : IComponent, IHandleAfterRender, IDisposable\r\n{\r\n    RenderHandle _renderHandle;\r\n    bool _navigationInterceptionEnabled;\r\n    string _location;\r\n\r\n    [Inject] private NavigationManager NavigationManager { get; set; }\r\n    [Inject] private INavigationInterception NavigationInterception { get; set; }\r\n\r\n    [Parameter] public RenderFragment NotFound { get; set; }\r\n    [Parameter] public RenderFragment<RouteData> Found { get; set; }\r\n\r\n    public void Attach(RenderHandle renderHandle)\r\n    {\r\n        _renderHandle = renderHandle;\r\n        _location = NavigationManager.Uri;\r\n        NavigationManager.LocationChanged += HandleLocationChanged;\r\n    }\r\n\r\n    public Task SetParametersAsync(ParameterView parameters)\r\n    {\r\n        parameters.SetParameterProperties(this);\r\n\r\n        if (Found == null)\r\n        {\r\n            throw new InvalidOperationException($\"The {nameof(ConventionRouter)} component requires a value for the parameter {nameof(Found)}.\");\r\n        }\r\n\r\n        if (NotFound == null)\r\n        {\r\n            throw new InvalidOperationException($\"The {nameof(ConventionRouter)} component requires a value for the parameter {nameof(NotFound)}.\");\r\n        }\r\n\r\n        Refresh();\r\n\r\n        return Task.CompletedTask;\r\n    }\r\n\r\n    public Task OnAfterRenderAsync()\r\n    {\r\n        if (!_navigationInterceptionEnabled)\r\n        {\r\n            _navigationInterceptionEnabled = true;\r\n            return NavigationInterception.EnableNavigationInterceptionAsync();\r\n        }\r\n\r\n        return Task.CompletedTask;\r\n    }\r\n\r\n    public void Dispose()\r\n    {\r\n        NavigationManager.LocationChanged -= HandleLocationChanged;\r\n    }\r\n\r\n    private void HandleLocationChanged(object sender, LocationChangedEventArgs args)\r\n    {\r\n        _location = args.Location;\r\n        Refresh();\r\n    }\r\n\r\n    private void Refresh()\r\n    {\r\n        var relativeUri = NavigationManager.ToBaseRelativePath(_location);\r\n        var parameters = ParseQueryString(relativeUri);\r\n\r\n        if (relativeUri.IndexOf('?') > -1)\r\n        {\r\n            relativeUri = relativeUri.Substring(0, relativeUri.IndexOf('?'));\r\n        }\r\n\r\n        var segments = relativeUri.Trim().Split('/', StringSplitOptions.RemoveEmptyEntries);\r\n\r\n\r\n        // domain.com/test\r\n        if (segments.Contains(\"test\") == true)\r\n        {\r\n\r\n            var pageComponentTypes = Assembly.GetExecutingAssembly()\r\n                             .ExportedTypes;\r\n                             //.Where(t => t.IsSubclassOf(typeof(ComponentBase))\r\n                             //            && t.Namespace.Contains(\".Pages\"));\r\n\r\n            var pageType = pageComponentTypes.SingleOrDefault(x => x.Name == \"Contact\");\r\n\r\n            var routeData = new RouteData(pageType,\r\n             parameters);\r\n\r\n\r\n            // Return \"contact\" page\r\n            _renderHandle.Render(Found(routeData));\r\n\r\n            return;\r\n        }\r\n        else\r\n        {\r\n            // RUN standard router\r\n\r\n            _renderHandle.Render(NotFound);\r\n        }\r\n    }\r\n\r\n    private Dictionary<string, object> ParseQueryString(string uri)\r\n    {\r\n        var querystring = new Dictionary<string, object>();\r\n\r\n        foreach (string kvp in uri.Substring(uri.IndexOf(\"?\") + 1).Split(new[] { '&' }, StringSplitOptions.RemoveEmptyEntries))\r\n        {\r\n            if (kvp != \"\" && kvp.Contains(\"=\"))\r\n            {\r\n                var pair = kvp.Split('=');\r\n                querystring.Add(pair[0], pair[1]);\r\n            }\r\n        }\r\n\r\n        return querystring;\r\n    }\r\n}\r\n```\r\n\r\nCan I ask for help how to add a standard router to this or how to get all @page attributes?",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/39719/comments",
    "author": "Alerinos",
    "comments": [
      {
        "user": "SteveSandersonMS",
        "created_at": "2022-01-24T17:17:37Z",
        "body": "The `Router` doesn't expose its routing table, as this isn't an API we've had reasons to make public. You could use reflection to find classes with `RouteAttribute` if you need.\r\n\r\nI'm not sure if it would work for you just to render a standard `Router` from your custom router component. Alternatively you could make your custom router component inherit from `Router` then call `base.SetParametersAsync` or similar to pass through to its default behavior. This might be sufficient but I'm not totally clear.\r\n\r\nIf you have other specific questions please let us know."
      },
      {
        "user": "ghost",
        "created_at": "2022-03-25T20:00:40Z",
        "body": "Thank you for contacting us. Due to a lack of activity on this discussion issue we're closing it in an effort to keep our backlog clean. If you believe there is a concern related to the ASP.NET Core framework, which hasn't been addressed yet, please file a new issue.\n\nThis issue will be locked after 30 more days of inactivity. If you still wish to discuss this subject after then, please create a new issue!"
      }
    ]
  },
  {
    "number": 39653,
    "title": "Standalone (installable) BLAZOR WASM Golden Experience",
    "created_at": "2022-01-20T14:03:14Z",
    "closed_at": "2022-01-20T21:28:13Z",
    "labels": [
      "question",
      "area-blazor",
      "feature-blazor-wasm",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/39653",
    "body": "### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Is your feature request related to a problem? Please describe the problem.\r\n\r\nWe can publish blazor webassembly applications and put it on a server.\r\nBut...\r\n\r\n1. Server cost money.\r\n2. Server management cost developer's money & effort.\r\n3. Server needs to handle people's request (10k/sec/cpu ?)\r\n4. Server can corrupt\r\n5. Server might be the invisible & forgotten part that cause problems in the last mile for application\r\n\r\n### Describe the solution you'd like\r\n\r\nSince blazor-webassembly was working when I was debugging (aka making) the application, I want my product to be able to be delivered as a single file people can download, and then install.\r\n\r\nSince there is nothing 'serving' the application after installation, people can now use my product without internet connection, and there won't be a web server and instead I will focus on building database aside from the app.\r\n\r\nIt doesn't matter if it's done through electron, webview @Eilon, or even ship the webserver and then when people open the app they are opening their default browser to visit a place at localhost, of course showing people localhost might be scuff but we can also hide the address bar in something like electron if we are shipping .NET + webserver + browser, and I much prefer this way making my app in blazor-webassembly then being able to publish as a single installation then people just click and open my web no more loading no more latency until the app stores something in the database by talking to some api and of course that requires internet and the latency is user-opt in it's part of the product's feature that's optional\r\n\r\n### Additional context\r\nBecause I already know I can build applications using blazor-webassembly and technically just need a server to serve all the files with the http headers set correctly for better performance (basically it's a static website --but the content can be dynamic & controlled via c#), it's appealing & encouraging for me to say this can be a new feature for blazor-wasm\r\n\r\nwith this technology, people can download once and run as many times as they want, there wouldn't be a problem for scaling (10k/sec requests becomes 10k/downloads persec which is way easier), and I might even have native filesystems on the root directory where my installation is. Meanwhile webassembly can optimize for speed instead of for size (turning on AOT)",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/39653/comments",
    "author": "Xyncgas",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2022-01-20T14:38:50Z",
        "body": "@Xyncgas thanks for contacting us.\r\n\r\nYou are describing a Progressive Web App, we already have support for this via the standard mechanisms the web platforms offers to do so. You can create a standalone Blazor webassembly application and add support for PWA, that will make the app installable with no need to download files from the server.\r\n\r\nWe don't plan to create any custom experience around installing Blazor webassembly applications since PWAs are the standard functionality the web platforms offers to achieve this."
      },
      {
        "user": "Xyncgas",
        "created_at": "2022-01-20T21:28:13Z",
        "body": "> @Xyncgas thanks for contacting us.\r\n> \r\n> You are describing a Progressive Web App, we already have support for this via the standard mechanisms the web platforms offers to do so. You can create a standalone Blazor webassembly application and add support for PWA, that will make the app installable with no need to download files from the server.\r\n> \r\n> We don't plan to create any custom experience around installing Blazor webassembly applications since PWAs are the standard functionality the web platforms offers to achieve this.\r\n\r\nThanks for answering my question, I have another one though, do you think I can let my users to install blazor-wasm through installer instead of pwa with MAUI (in my understanding, it doesn't involve the web but it looks like the web and it can use blazor syntax too with the experimental mobile-blazor-binding)"
      }
    ]
  },
  {
    "number": 39157,
    "title": "FindByIdAsync requires string instead of int even with ApplicationUser: IdentityUser<int>",
    "created_at": "2021-12-22T17:55:53Z",
    "closed_at": "2021-12-27T16:21:07Z",
    "labels": [
      "question",
      "area-identity",
      ":heavy_check_mark: Resolution: Answered"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/39157",
    "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Describe the bug\n\nI might be seeing this wrong but shouldn't FindByIdAsync accept an int instead of string when ApplicationUser: IdentityUser<int>?\r\n\r\nI'm using var user = await _userManager.Users.FirstOrDefaultAsync(u => u.Id == userId); as an alternative but just wanted to be sure of this.\r\n\r\nThank you!\r\n\r\n\n\n### Expected Behavior\n\n_No response_\n\n### Steps To Reproduce\n\n_No response_\n\n### Exceptions (if any)\n\n_No response_\n\n### .NET Version\n\n.net 6\n\n### Anything else?\n\n_No response_",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/39157/comments",
    "author": "HybridSolutions",
    "comments": [
      {
        "user": "blowdart",
        "created_at": "2021-12-27T14:55:28Z",
        "body": "It's a design decision. String is the lowest common denominator here, as ToString() works for all primitives nicely. Trying to make this more generic, when we simply don't know what key type you might be using would be an api usability nightmare and honestly would make things less usable for most users, and making customizing the user class even more difficult."
      },
      {
        "user": "HybridSolutions",
        "created_at": "2021-12-27T16:20:44Z",
        "body": "> It's a design decision. String is the lowest common denominator here, as ToString() works for all primitives nicely. Trying to make this more generic, when we simply don't know what key type you might be using would be an api usability nightmare and honestly would make things less usable for most users, and making customizing the user class even more difficult.\r\n\r\nok thanks.,"
      }
    ]
  },
  {
    "number": 38316,
    "title": "[question] Because Blazor is single threaded does that mean there is no way to get thread racing issues",
    "created_at": "2021-11-12T01:38:37Z",
    "closed_at": "2021-11-12T13:47:37Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/38316",
    "body": null,
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/38316/comments",
    "author": "Xyncgas",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2021-11-12T13:47:25Z",
        "body": "Thanks for contacting us @Xyncgas.\r\n\r\nIt looks like this is a question about how to use ASP.NET Core. While we do our best to look through all the issues filed here, to get a faster response we suggest posting your questions to StackOverflow using the asp.net-core-blazor tag."
      }
    ]
  },
  {
    "number": 38243,
    "title": "Model binder does not bind properties with private setter",
    "created_at": "2021-11-10T06:47:45Z",
    "closed_at": "2022-01-09T20:00:45Z",
    "labels": [
      "question",
      "old-area-web-frameworks-do-not-use"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/38243",
    "body": "Hi,\r\n\r\nI've a API project built with .NET 6, the models are immutable (POCO classes with private setter properties)\r\n\r\nWhen I call the API from postman and pass the model values; these properties are not bound and their values are still null\r\n\r\nLet's say this is the model/command class:\r\n\r\n```\r\n    public class CreateUserCommand : ICreateCommand<bool>\r\n    {\r\n        public string Name { get; private set; }\r\n    }\r\n```\r\n\r\nand this is the action method:\r\n\r\n```\r\n    [HttpPost]\r\n    public async Task<ActionResult> Post(CreateUserCommand command)\r\n    {\r\n         // do work\r\n        return Ok();\r\n    }\r\n```\r\n\r\nAFAIK, model binder should work with private setters as well but it doesn't so I need to know if I'm missing something here\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/38243/comments",
    "author": "maelmahdy86",
    "comments": [
      {
        "user": "pranavkm",
        "created_at": "2021-11-10T13:55:24Z",
        "body": "> AFAIK, model binder should work with private setters as well\r\n\r\nIt does not. It treats non-public setters as read-only properties. There are some exceptions around collection properties with non-public setters, but in general, you want them to be public. \r\n\r\n> the models are immutable\r\n\r\nHave you considered using a record type? MVC will model bind constructors for record types."
      },
      {
        "user": "maelmahdy86",
        "created_at": "2021-11-10T14:12:50Z",
        "body": "I've considered record types indeed but the problem is that the model is large and the constructor may end up with too many parameters"
      },
      {
        "user": "ghost",
        "created_at": "2022-01-09T20:00:44Z",
        "body": "Thank you for contacting us. Due to a lack of activity on this discussion issue we're closing it in an effort to keep our backlog clean. If you believe there is a concern related to the ASP.NET Core framework, which hasn't been addressed yet, please file a new issue.\n\nThis issue will be locked after 30 more days of inactivity. If you still wish to discuss this subject after then, please create a new issue!"
      }
    ]
  },
  {
    "number": 38164,
    "title": "[asp.net core 7] [Feature Request] Further Compressing Blazor's render html on release build.",
    "created_at": "2021-11-07T20:40:58Z",
    "closed_at": "2021-11-08T13:17:18Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/38164",
    "body": "For example if I am using <div class=\"abc123/> in a for loop, I want to minimize that 'abc123', in order to save memory on browsers",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/38164/comments",
    "author": "Xyncgas",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2021-11-08T13:17:05Z",
        "body": "@Xyncgas thanks for contacting us.\r\n\r\nThis is not something we plan to work on. The cost of implementing such a feature is very high and the hypothetical memory/bandwidth improvements don't justify such an investment.\r\n\r\nYou can replace the values in your example with static variables or a similar mechanism and have those populate at runtime the right value. However that will prevent important optimizations Razor performs on the generated markup, so it will very likely be detrimental."
      }
    ]
  },
  {
    "number": 37926,
    "title": "IJSInProcessRuntime and IJSUnmarshalledRuntime don't work in Blazor Server",
    "created_at": "2021-10-29T11:33:36Z",
    "closed_at": "2021-10-29T14:13:03Z",
    "labels": [
      "question",
      "area-blazor",
      "feature-blazor-wasm",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/37926",
    "body": "The following JSInterop code works blazor Web Assembly but exact same code doesn't work on Blazor Server\r\n```cs\r\npublic static async ValueTask InitAsync(IJSRuntime jsRuntime)\r\n{\r\n            Runtime = jsRuntime as IJSInProcessRuntime; //in server this cast is null but in wasm works fine\r\n            _moduleTask = new(() => Runtime.InvokeAsync<IJSUnmarshalledObjectReference>(\r\n               \"import\", \"./_content/BlazorBindGen/blazorbindgen.js\").AsTask()); \r\n            Module = await _moduleTask.Value;\r\n}\r\n```\r\nI am missing something?",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/37926/comments",
    "author": "sps014",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2021-10-29T13:41:38Z",
        "body": "@sps014 thanks for contacting us.\r\n\r\nThat's by design. Blazor Server runs in a separate process from the Browser. That's why we recommend using IJSRuntime and leaving `IJSUnmarshalledRuntime` as an optional optimization specific to webassembly."
      },
      {
        "user": "sps014",
        "created_at": "2021-10-29T14:07:28Z",
        "body": "> That's by design. Blazor Server runs in a separate process from the Browser. That's why we recommend using IJSRuntime and leaving IJSUnmarshalledRuntime as an optional optimization specific to webassembly.\r\n\r\nI see, but IJSRuntime is limited in functionality and does not contain non async variant of Invoke Methods.\r\nIs there any plan to extend `IJSRuntime` in future to add more capabilities ?\r\n\r\n"
      },
      {
        "user": "javiercn",
        "created_at": "2021-10-29T14:34:43Z",
        "body": "@sps014 IJSRuntime only contains async methods because in general we can't guarantee that there is synchronous communication between the browser and the C# runtime, that's why the default implementation is async only, because that's the minimum all platforms can support.\r\n\r\nThe unmarshalled runtime is specific to webassembly and the communication channel with the browser. There is an IInProcesJSRuntime that offers synchronous variants, but again, only webassembly implements it.\r\n\r\nThe reality is that unless you are doing something very specific you aren't likely going to see any benefits from using the more specific runtimes, so our recommendation is that you rely only on IJSRuntime and only optionally use other JS interop interfaces with a type check ahead of time to ensure its available."
      },
      {
        "user": "sps014",
        "created_at": "2021-10-29T14:56:23Z",
        "body": "thanks"
      }
    ]
  },
  {
    "number": 37719,
    "title": "Webaudio api in blazor",
    "created_at": "2021-10-20T19:47:48Z",
    "closed_at": "2021-10-26T10:36:55Z",
    "labels": [
      "question",
      "area-blazor",
      "feature-blazor-wasm",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved",
      "feature-blazor-jsinterop"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/37719",
    "body": "I would love to have direct access to the webaudio api in blazor without relying on javascript. This would help development of audio-related software a lot easier especially because of the great  tooling for C# (safer and more reliable code) as well as the possible performance increase when not having to pass large arrays over javascript interop (think fx about sending surround sound 11.2 channels 24 bit 192 kHz to have a perhaps extreme case)",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/37719/comments",
    "author": "erikthysell",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2021-10-21T11:33:08Z",
        "body": "@erikthysell thanks for contacting us.\r\n\r\nAny API that Blazor consumes needs to go through JS interop since Webassembly doesn't offer native access to those APIs. We don't plan on building specific API wrappers for individual APIs unless in the future we decide to do this in a programmatic way that we can maintain. For the time being we expect folks in the community to create these interop packages and share them with others."
      },
      {
        "user": "erikthysell",
        "created_at": "2021-10-26T10:36:55Z",
        "body": "OK, thanks for taking the time to reply and explain!"
      }
    ]
  },
  {
    "number": 37695,
    "title": "Blazor WASM - Lazy Loading and Dependency Injection ",
    "created_at": "2021-10-20T02:17:08Z",
    "closed_at": "2021-10-22T02:31:39Z",
    "labels": [
      "question",
      "area-blazor",
      "feature-blazor-wasm",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/37695",
    "body": "Hi,\r\n\r\nI recently started a blazor project and it seems the requirement of the scopes became bigger and bigger so I plan to implement LazyLoading per module. \r\n\r\nI notice that if I do LazyLoading per module, I cannot do dependency injection for the LazyLoaded assemblies due to container being immutable.\r\n\r\nIs there any workaround regarding this ? without having to create a factory class and manually creating your class for dependency.\r\n\r\nRegards,\r\nPaul",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/37695/comments",
    "author": "ympaul",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2021-10-20T16:23:33Z",
        "body": "@davidfowl do you have thoughts on this? Thanks!"
      },
      {
        "user": "javiercn",
        "created_at": "2021-10-21T11:04:29Z",
        "body": "@ympaul thanks for contacting us.\r\n\r\nIn general, this is something you need to organize your app around. We don't offer a way to \"re-build\" the container as it would imply re-instantiating things like singletons and would lead to hard to debug issues. It is also not desirable that the set of DI resolutions change based on a module being injected (I don't think any container does even do this).\r\n\r\nOne way you could go about this would be to have all the contracts for your dependencies centralized in a core assembly that is eagerly load, and use some helper factory type to create a \"stub\" dependency on the DI container that you can fill up with the lazy loaded implementation once you load the assembly.\r\n\r\nThat said, this is not something trivial to do and goes beyond the scope of the answers we can provide here. At least I hope this points you into a direction you can take."
      },
      {
        "user": "ympaul",
        "created_at": "2021-10-22T02:31:39Z",
        "body": "Hi javiercn, \r\n\r\nThank you for your reply.\r\n\r\n> We don't offer a way to \"re-build\" the container as it would imply re-instantiating things like singletons and would lead to hard to debug issues.\r\n\r\nOK, other containers also has same issue.\r\n\r\n> It is also not desirable that the set of DI resolutions change based on a module being injected (I don't think any container does even do this).\r\n\r\nThe module is properly abstracted.\r\n\r\nAnyway, I understand. I just thought blazor wasm is special case since everything is downloaded in client unlike others. \r\n\r\nSince you have provided solution for lazy loading of assemblies, maybe It will have special case with regards to containers and dependency injection.\r\n\r\nAnyway I'll go with multiple blazor apps instead and do prerendering.\r\n\r\n> That said, this is not something trivial to do and goes beyond the scope of the answers we can provide here. At least I hope this points you into a direction you can take.\r\n\r\nYes, Thank you for the effort and time.\r\n\r\nRegards,\r\nPaul"
      }
    ]
  },
  {
    "number": 37235,
    "title": "System.Globalization - RegionInfo.CurrentRegion",
    "created_at": "2021-10-03T17:08:55Z",
    "closed_at": "2021-10-04T21:34:44Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/37235",
    "body": "I'm not sure I'm in the right place, but...\r\n\r\nI am physically in Brazil and changed my browser language to en-US.\r\n\r\nso when I access `RegionInfo.CurrentRegion.Name`, it brings me as a result `US`.",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/37235/comments",
    "author": "drma-tech",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2021-10-04T10:18:03Z",
        "body": "@drma-dev thanks for contacting us.\r\n\r\nI imagine that property reflects the browser language/locale. It's not going to do anything fancy like use geolocation or a similar API to figure out where you are physically present. I imagine the behavior is by design."
      }
    ]
  },
  {
    "number": 37063,
    "title": "Using Speech with Blazor Wasm hosted App (.NET 6 RC1)",
    "created_at": "2021-09-28T12:29:06Z",
    "closed_at": "2021-09-28T18:02:23Z",
    "labels": [
      "question",
      "area-blazor",
      "feature-blazor-wasm",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/37063",
    "body": "```\r\n var config = SpeechConfig.FromSubscription(\"XXXXXXXXXXXXXXXXXX\", \"eastus\");\r\n            config.SpeechSynthesisVoiceName = \"en-US-ChristopherNeural\";\r\n            using var synthesizer = new SpeechSynthesizer(config);\r\n            await synthesizer.SpeakTextAsync(\"Synthesizing directly to speaker output.\");\r\n```\r\n\r\nThe code above works in .NET 6 RC1 console app, but does not work in Blazor Wasm.\r\nIs Azure Speech supported in Blazor Wasm ?\r\n\r\n```\r\nXXXXXV6New.Client.Pages.Org.ManageOrgLocationTerminals[0]\r\n      Error : System.DllNotFoundException: Microsoft.CognitiveServices.Speech.core.dll\r\n         at Microsoft.CognitiveServices.Speech.SpeechConfig.FromSubscription(String subscriptionKey, String region)\r\n         at XXXXXV6New.Client.Pages.Org.ManageOrgLocationTerminals.SayText() in C:\\Users\\admin\\source\\repos\\XXXXXV6NewNew\\XXXXXV6NewNew\\Client\\Pages\\Org\\ManageOrgLocationTerminals.razor.cs:line 75\r\n         at XXXXXV6New.Client.Pages.Org.ManageOrgLocationTerminals.GetOrgLocationTerminals() in C:\\Users\\admin\\source\\repos\\XXXXXV6NewV6New\\XXXXXV6NewNew\\Client\\Pages\\Org\\ManageOrgLocationTerminals.razor.cs:line 398\r\n         at XXXXXV6NewNew.Client.Pages.Org.ManageOrgLocationTerminals.OnInitializedAsync() in C:\\Users\\admin\\source\\repos\\XXXXXV6NewNew\\XXXXXV6NewV6New\\Client\\Pages\\Org\\ManageOrgLocationTerminals.razor.cs:line 147\r\n```",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/37063/comments",
    "author": "nssidhu",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2021-09-28T14:50:04Z",
        "body": "@nssidhu thanks for contacting us.\r\n\r\nIt's not clear what's going on here. Maybe file an issue in the azure sdk repo as they might be able to provide an answer faster? I suspect that if what you are trying to accomplish is for audio to play, it is unlikely that the .NET SDK will work in Blazor webassembly since it's very probable that it uses native APIs to accomplish that which are not available in the browser.\r\n\r\nI would check if there is a browser based SDK to accomplish what you are trying to achieve, and use that via JS interop instead."
      }
    ]
  },
  {
    "number": 36497,
    "title": "Uncaught pause_on_uncaught",
    "created_at": "2021-09-14T14:04:12Z",
    "closed_at": "2021-09-14T14:49:49Z",
    "labels": [
      "question",
      "area-blazor",
      "feature-blazor-wasm",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/36497",
    "body": "After updating to the latest .NET 6 Preview, I get this error each time I start my Blazor WebAssembly application in Google Chrome:\r\n\r\n`Uncaught pause_on_uncaught`\r\n\r\nThe real problem is that I have to open developer tools with F12, and then resume execution, otherwise the page loading appears 'frozen' (and it's also very slow, anyway).\r\nOn the source code side, I can pretty print the javascript code that is executed at that point:\r\n\r\n```\r\n...\r\nmono_wasm_runtime_ready: function() {\r\n        this.mono_wasm_runtime_is_ready = true;\r\n        this._clear_per_step_state();\r\n        this._next_call_function_res_id = 0;\r\n        this._call_function_res_cache = {};\r\n        this._c_fn_table = {};\r\n        this._register_c_fn(\"mono_wasm_send_dbg_command\", \"bool\", [\"number\", \"number\", \"number\", \"number\", \"number\"]);\r\n        this._register_c_fn(\"mono_wasm_send_dbg_command_with_parms\", \"bool\", [\"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"string\"]);\r\n        if (globalThis.dotnetDebugger)\r\n            debugger ;\r\n        else\r\n            console.debug(\"mono_wasm_runtime_ready\", \"fe00e07a-5519-4dfe-b35a-f867dbaf2e28\")\r\n    },\r\n...\r\n```\r\n\r\nExecution is stopped at the line after `<if (globalThis.dotnetDebugger)>`, of course.\r\nThe file is called `dotnet.6.0.0-preview.7.21377.19.js`, so it's easy to understand which version I have.\r\n\r\nTo reproduce, just create an empty 'Blazor Webassembly App' from the template, and select 'ASP.NET Core Hosted' and 'Progressive Web Application'.\r\nI don't know in other combinations, but the error will appear in the console log, although with a basic application it doesn't break.\r\n\r\n**Update**: if I wait enough time (about 10 seconds?) the execution will resume anyway automatically, with or without opening the developer tools... really weird...",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/36497/comments",
    "author": "ABIOLI-COM",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2021-09-14T14:30:15Z",
        "body": "@ABIOLI-COM thanks for contacting us.\r\n\r\nThis is a known issue and is being addressed by the runtime folks."
      },
      {
        "user": "javiercn",
        "created_at": "2021-09-14T14:31:40Z",
        "body": "@lewing @thaystg I know you made a fix for this. Did it make it into RC2?"
      },
      {
        "user": "thaystg",
        "created_at": "2021-09-14T14:36:59Z",
        "body": "Yes."
      },
      {
        "user": "javiercn",
        "created_at": "2021-09-14T14:49:45Z",
        "body": "@thaystg thanks for confirming!"
      }
    ]
  },
  {
    "number": 36447,
    "title": "Is it considerable to align the naming(version) of .NET stacks with .NET 7?",
    "created_at": "2021-09-12T23:22:34Z",
    "closed_at": "2021-09-13T09:52:07Z",
    "labels": [
      "question",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/36447",
    "body": "Hello dear .NET Team and community members.\r\nI would like to ask and was wondering we could expect to see more aligned naming of version of .NET with each coming major release.\r\nTo read many blog posts and Microsoft docs also has mentioned like that 'ASP.NET Core in .NET 5', 'in .NET 6', Blazor, EF Core has following same manner of context.\r\nSince .NET 5 has announced as the first unified .NET as the future of .NET roadmap, TFM(net5.0), for .NET 6(net6.0) such I like it a lot because it looks very clear to understand and more to do.\r\nBut the remains of each stack of .NET to be clear always has to designate which .NET with 'in .NET 5', 'in .NET 6', that means .NET 7 would be same too.\r\nAfter .NET 6 release the GA, I think no more conflicts between .NET and .NET Framework stacks for the versioning. \r\nSo since .NET 7 release cycle, could consider the aligned version of each .NET stack such ASP.NET MVC, WebAPI, Razor, Blazor even WinForm, WPF too.\r\nWe may call most of all the version 7 for each stack except the MAUI.\r\n\r\n.NET 5, 6 (.NET Core 3.1)\r\n- ASP.NET Core MVC, WebAPI, Razor Pages, \r\n- EF Core\r\n- Blazor\r\n- WinForm\r\n- WPF\r\n\r\n.NET Framework\r\n- ASP.NET MVC, WebAPI, WebForm\r\n- EF\r\n- WinForm\r\n- WPF\r\n- As I remember, the last version was MVC5, anyway.\r\n\r\n\r\n.NET 7 (it may no more 'Core' veriant for each stack)\r\n- ASP.NET 7, MVC 7, WebAPI 7, like that\r\n- EF 7\r\n- Blazor 7\r\n- MAUI \r\n- WinForm 7\r\n- WPF 7\r\n\r\nI hope this idea would not bothering much for many folks even before the GA of .NET 6. \r\nThanks.\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/36447/comments",
    "author": "DEVBOX10",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2021-09-13T09:52:06Z",
        "body": "@ScriptBox99 thanks for contacting us.\r\n\r\nThis issue tracker is mostly focused on product issues and not a suitable place for this type of discussions, since it affects the whole ecosystem and not just ASP.NET Core. While our product naming, branding and versioning might change in the future, it is extremely unlikely that will be the case for .NET 6.0.\r\n\r\n/cc: @danroth27 @DamianEdwards @LadyNaggaga "
      }
    ]
  },
  {
    "number": 35218,
    "title": "RazorSourceLineCollection - internal abstract method",
    "created_at": "2021-08-10T10:30:37Z",
    "closed_at": "2021-08-10T10:36:55Z",
    "labels": [
      "question",
      ":heavy_check_mark: Resolution: Answered"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/35218",
    "body": "### Describe the bug\r\nThe class \"RazorSourceLineCollection\" is an abstract class but has declared a internal abstract method.\r\nFor that reason it is not possible to derive from this class because the method can not be overwritten?\r\n\r\nIs there any reason for this?\r\n\r\n### To Reproduce\r\nJust derive from this class and try to overwrite it :-).\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/35218/comments",
    "author": "softwaretirol",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2021-08-10T10:36:40Z",
        "body": "@softwaretirol thanks for contacting us.\r\n\r\nI'm not sure what might be going on there, likely a programming mistake from one of our developers. It doesn't matter since these APIs are not consumed outside of the context of the Razor compiler. These APIs are not meant to be used by third-parties so there is nothing we plan to do to address these issues unless we have to due to changes in requirements."
      }
    ]
  },
  {
    "number": 35153,
    "title": "Invalid Token for ConfirmEmal",
    "created_at": "2021-08-08T08:45:03Z",
    "closed_at": "2021-08-09T20:21:14Z",
    "labels": [
      "question",
      "area-identity"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/35153",
    "body": "Hello! \r\nSometimes i get \"invalid token\" for await _userManager.ConfirmEmailAsync(user, tokenDecode);\r\nIt's come right after how user get success ConfirmEmail. Token in second time as if get HttpUtility.UrlDecode already.\r\nBut in the main i get only one message with success ConfirmEmail.\r\n(ASP.NET Core 5.08)\r\n\r\n```\r\nvar token = await _userManager.GenerateEmailConfirmationTokenAsync(user);\r\nvar htmlToken = HttpUtility.UrlEncode(token);\r\nvar confirmationLink = Url.Action($\"ConfirmUserEmail\", $\"User\", new { token = htmlToken, email = user.Email }, Request.Scheme);\r\n```\r\n```\r\n[AllowAnonymous]\r\n[HttpGet(\"[action]\")]\r\npublic async Task<IActionResult> ConfirmUserEmail(string token, string email)\r\n{\r\n    try\r\n    {\r\n        if (string.IsNullOrEmpty(email) || string.IsNullOrEmpty(token))\r\n             return BadRequest(new { message = \"Incorrect link\" });\r\n        var user = await _userManager.FindByEmailAsync(email);\r\n        if (user == null) return BadRequest(new { message = \"User not found\" });\r\n\r\n        var tokenDecode = HttpUtility.UrlDecode(token);\r\n\r\n        var result = await _userManager.ConfirmEmailAsync(user, tokenDecode);\r\n\r\n        var logMessage = $\"Log email confirmation try{Environment.NewLine}\" +\r\n                         $\"Date: {DateTimeOffset.Now}{Environment.NewLine}\" +\r\n                         $\"User email: {user.Email}{Environment.NewLine}\" +\r\n                         $\"token: {tokenDecode}{Environment.NewLine}\" + \r\n                         $\"Headers:{Environment.NewLine}\";\r\n        logMessage = HttpContext.Request.Headers.Aggregate(logMessage, (current, header) \r\n               => current + $\"{header.Key}: {header.Value} {Environment.NewLine}\");\r\n        logMessage += \"Result: \" + (result.Succeeded ? \"Success\" : \"Failed\") + Environment.NewLine;\r\n        if (!result.Succeeded)\r\n            logMessage += \"Reason: \" + result.Errors.Aggregate(\"\", (current, error) => current + error.Description);\r\n        _logger.LogInformation(LogEvents.WithSendingEmail, logMessage);\r\n\r\n        return Redirect(result.Succeeded ? Url.Content(\"/confirmedEmail\") : Url.Content(\"/error\"));\r\n    }\r\n    catch (Exception exception)\r\n    {\r\n        _logger.LogError(LogEvents.WithSendingEmail, exception, \"\");\r\n        return Redirect(Url.Content(\"/error\"));\r\n    }\r\n}\r\n```\r\nFirst logMessage:\r\n```\r\nLog email confirmation try\r\nDate: 8/8/2021 8:08:58 AM +03:00\r\nUser email: <userEmail>@gmail.com\r\ntoken: CfDJ8GTNMGFQaZhGlXgSrSNRbPNZFf4ESjdOq8O1hzO9jKG8b66k0nCJYH49Ko5BBEJeVNZBvXqrIgp2uE42bN2sj8yfU1flXgWR+CwfcX3M8548EI/l6eyt+hrgqVRw9+GIfSKrtWMcRl4h0UhULk2EPraQe5kESajPQeg7RTz+Izc0JEVqYAhM5TGGRDUlfba79DxeFixE8ulAJ95/7JZPn7L24RzZom8psJ7lNxUjoyDVeN8Jt48/utPBD81sgJJLzA==\r\nHeaders:\r\nConnection: keep-alive\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7\r\nHost: usselectro.so-online.ru\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.131 Safari/537.36\r\nUpgrade-Insecure-Requests: 1\r\nX-Real-IP: 213.87.246.199\r\nX-Original-Proto: http\r\nSec-Fetch-Site: cross-site\r\nSec-Fetch-Mode: navigate\r\nSec-Fetch-User: ?1\r\nSec-Fetch-Dest: document\r\nsec-ch-ua: \"Chromium\";v=\"92\", \" Not A;Brand\";v=\"99\", \"Google Chrome\";v=\"92\"\r\nsec-ch-ua-mobile: ?0\r\nX-Original-For: [::1]:56654\r\nResult: Success\r\n```\r\nSecond right after first:\r\n```\r\nLog email confirmation try\r\nDate: 8/8/2021 8:09:13 AM +03:00\r\nUser email: <userEmail>@gmail.com\r\ntoken: CfDJ8GTNMGFQaZhGlXgSrSNRbPNZFf4ESjdOq8O1hzO9jKG8b66k0nCJYH49Ko5BBEJeVNZBvXqrIgp2uE42bN2sj8yfU1flXgWR CwfcX3M8548EI/l6eyt hrgqVRw9 GIfSKrtWMcRl4h0UhULk2EPraQe5kESajPQeg7RTz Izc0JEVqYAhM5TGGRDUlfba79DxeFixE8ulAJ95/7JZPn7L24RzZom8psJ7lNxUjoyDVeN8Jt48/utPBD81sgJJLzA==\r\nHeaders:\r\nConnection: close\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7\r\nHost: usselectro.so-online.ru\r\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36\r\nUpgrade-Insecure-Requests: 1\r\nX-Real-IP: 31.129.192.164\r\nX-Original-Proto: http\r\nSec-Fetch-Site: none\r\nSec-Fetch-Mode: navigate\r\nSec-Fetch-User: ?1\r\nSec-Fetch-Dest: document\r\nX-Original-For: 127.0.0.1:36098\r\nResult: Failed\r\nReason: Invalid token.\r\n```\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/35153/comments",
    "author": "krumal",
    "comments": [
      {
        "user": "HaoK",
        "created_at": "2021-08-09T20:21:14Z",
        "body": "Right the issue is that the second token is not the same as the first as you point out the +'s have been turned into spaces, so the inputs aren't the same, you'll have to track down where the second request comes from and why its different.  The ConfirmEmail method appears to be working here as far as I can tell, feel free to reopen this if there's something you see that might be due to ConfirmEmail behaving unexpectedly "
      }
    ]
  },
  {
    "number": 34474,
    "title": "Blazor WebAssembly Standalone on ASP.NET Website",
    "created_at": "2021-07-18T10:21:29Z",
    "closed_at": "2021-07-19T10:27:12Z",
    "labels": [
      "question",
      "area-blazor",
      "feature-blazor-wasm",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/34474",
    "body": "Hi,\r\n\r\nI have a solution on VS 2019 with a website project (yes, this is old) and another project with an Blazor WebAssembly Standalone app.\r\n\r\nI'm able to publish the Blazor app inside a folder on the website and see it running on the browser. No problem here.\r\n\r\nWhat i don't know is how to get a development workflow on this scenario. I don't know how to make changes and see the result without publishing or get the debugging features working on the blazor project, etc.\r\n\r\nThe Website also have some .ashx files serving some json-rpc services im willing to use from the Blazor client on the browser.\r\n\r\nI have read Blazor WebAssembly Standalone is server side technology agnostic but i don't know how to get a development workflow on this scenario with an old ASP NET Website.\r\n\r\nCan u help on this with some ideas ? Thanks in advance!\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/34474/comments",
    "author": "eguardiola",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2021-07-19T09:50:27Z",
        "body": "@eguardiola thanks for contacting us.\r\n\r\nThat's not a scenario we support. Blazor WebAssembly is completely server side agnostic (it's just a bunch of files on disk) however the development workflow is not optimized for old ASP.NET projects. A standalone Blazor Webassembly app uses a development server to run during development and that's not something you can easily implement in an old ASP.NET project.\r\n\r\nIf you are willing to spend time on making something like this work, I would recommend the following approach:\r\n* Create the blazor app as a hosted blazor webassembly app.\r\n* On the host server app, use an existing proxy middleware to route unknown requests from the app to your old website project).\r\n* Run both, the app host and the old ASP.NET project.\r\n* Navigate through the site via the Url for the hosted ASP.NET Core host.\r\n\r\nThis is just a suggestion about how I would go about doing this, however there's no guarantee that this works properly nor that it is trivial to implement. This suggestion is based on how our SPA proxy support works, which should also work in this case."
      },
      {
        "user": "eguardiola",
        "created_at": "2021-07-19T10:27:12Z",
        "body": "Thanks for the quick reply. I was intuiting something like the proxy you propose, but I needed a confirmation. \r\n\r\nI assume the proxy idea is the same if you have on the server PHP or Java or another other stuff, right?\r\n\r\nThe app im willing to upgrade to Blazor is using actually GWT (former Google Web Toolkit) for the front end and this technology is supporting every development scenario. The GWT module loader connects to a development server which serves sourcemaps etc... I know Blazor is not running javascript so sourcemaps doesn't make sense.\r\n\r\nVery inspiring answer, thank you very much anyway!"
      }
    ]
  },
  {
    "number": 32517,
    "title": "HUB WSS infinitely work",
    "created_at": "2021-05-08T10:26:49Z",
    "closed_at": "2021-05-11T05:02:22Z",
    "labels": [
      "question",
      "area-signalr",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/32517",
    "body": "Hello everyone.\r\nThe question is, you need hub to give wss data.\r\nWhat problems can there be?\r\n\r\n ```\r\n   public class MyHub : Hub\r\n    {\r\n        public async Task SubscriptionAsync(string ticket)\r\n        {\r\n\t\t\r\n            client.Streams.wss.Subscribe(async response =>\r\n            {\r\n                var data= response.Data;\r\n                await Clients.Group(ticket).SendAsync(\"wssData\", data);  //// <<<< WSS Data Json\r\n            });\r\n\r\n\r\n        }\r\n\t}\r\n```",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/32517/comments",
    "author": "EvgenyPrikhodko",
    "comments": [
      {
        "user": "EvgenyPrikhodko",
        "created_at": "2021-05-08T10:41:52Z",
        "body": "or \r\n```\r\n public async Task SubscriptionAsync(string ticket)\r\n        {\r\n\r\n\t\t\t............. \r\n\t\t\t\r\n            while (true)\r\n            {\r\n                vra trade = response.Data;\r\n                await Clients.Group(ticket).SendAsync(\"wssData\", data);  //// <<<< WSS Data Json\r\n            });\r\n\r\n\r\n        }\r\n```"
      },
      {
        "user": "BrennanConroy",
        "created_at": "2021-05-08T16:04:54Z",
        "body": "Sorry your question is unclear, could you be more specific about what you're asking?"
      },
      {
        "user": "EvgenyPrikhodko",
        "created_at": "2021-05-08T17:45:32Z",
        "body": "There is a task\r\nlike \r\n```\r\nwhile (true)\r\n {\r\n    await Clients.Group(ticket).SendAsync(\"wssData\", data);\r\n});\r\n```"
      },
      {
        "user": "davidfowl",
        "created_at": "2021-05-08T20:27:46Z",
        "body": "Your question isn't clear nor specific but I think you're asking what the implications are if you want to subscribe to a long running stream in a hub method. Is that correct? "
      },
      {
        "user": "EvgenyPrikhodko",
        "created_at": "2021-05-09T02:58:29Z",
        "body": "> Your question isn't clear nor specific but I think you're asking what the implications are if you want to subscribe to a long running stream in a hub method. Is that correct?\r\nYes."
      },
      {
        "user": "BrennanConroy",
        "created_at": "2021-05-10T20:24:54Z",
        "body": "If your hub method is a non streaming invocation, then a long running hub method will block any more hub methods being run from that client. Other than that, it's just the normal \"implications\" of having long running work on a server."
      }
    ]
  },
  {
    "number": 32291,
    "title": "UserManager.GenerateTwoFactorTokenAsync. How to forget old tokens when creating new ones ",
    "created_at": "2021-04-30T08:00:32Z",
    "closed_at": "2021-05-06T17:24:50Z",
    "labels": [
      "question",
      "area-identity",
      ":heavy_check_mark: Resolution: Answered"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/32291",
    "body": "Hello!\r\n\r\nusing the command userManager.GenerateTwoFactorTokenAsync () I create a new TwoFactorToken. How to delete an old token? so that when you try to enter the old token, the system gives an error\r\n\r\nSignInManager.ForgetTwoFactorClientAsync () is not suitable for this.\r\n\r\nAlso, if I log in, enter the TwoFactorCode. Then I log out and try to log in again, then within 10 minutes I can use the old TwoFactorCode \r\n\r\n**Further technical details**\r\n- ASP.NET Core 5\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/32291/comments",
    "author": "abryzgin",
    "comments": [
      {
        "user": "HaoK",
        "created_at": "2021-05-06T17:24:50Z",
        "body": "By default our two factor token providers are not stored in the database, they are either authenticator style TOTP tokens or self signed data protector tokens.  You would have to implement your own token provider and store them somewhere and verify that they are only used once.  But identity does do something similar for the recovery tokens if you want to leverage how we chose to implement it"
      }
    ]
  },
  {
    "number": 32100,
    "title": "Blazor Custom EventHandler",
    "created_at": "2021-04-23T13:24:53Z",
    "closed_at": "2021-04-26T09:29:13Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved",
      "feature-blazor-component-model"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/32100",
    "body": ".Net 5.0 / Blazor WSAM / SDK 5.0.202 x64\r\n\r\nI made a tooltip component with Blazor WASM.\r\nit requires event not supported with Blazor.\r\n\r\nSo I declared custom event handlers:\r\n```csharp\r\n[EventHandler(\"onmouseenter\", typeof(EventArgs), true, true)]\r\n[EventHandler(\"onmouseleave\", typeof(EventArgs), true, true)]\r\npublic static class EventHandlers\r\n{\r\n}\r\n```\r\nIt works fine but things getting harder when making an RCL.\r\n\r\nif custom events aren't in the RCL the RCL doesn't work properly.\r\nbut if event are declared in RCL and in the main project it doesn't work too, there is an error for duplicate declaration.\r\nIs it possible to bypass the double event declaration, or isolate it to their respective project or making RCL using event declaration from the project?\r\n\r\nThanks.\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/32100/comments",
    "author": "Julien-Marpault",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2021-04-23T13:47:03Z",
        "body": "@JulienM28 thanks for contacting us.\r\n\r\nI believe we explicitly don't support overriding custom events. You can \"override\" this event by creating your alternative custom event that targets the same original DOM event."
      },
      {
        "user": "Julien-Marpault",
        "created_at": "2021-04-26T08:23:13Z",
        "body": "This solution is only possible with .Net 6 with the new custom event register function ?"
      },
      {
        "user": "javiercn",
        "created_at": "2021-04-26T08:34:27Z",
        "body": "Yep, this requires 6.0"
      }
    ]
  },
  {
    "number": 32052,
    "title": "Login loop over HTTP with ASP.NET Core Angular template with individual auth",
    "created_at": "2021-04-22T10:07:33Z",
    "closed_at": "2021-04-22T16:04:32Z",
    "labels": [
      "question",
      "area-mvc",
      "feature-spa",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/32052",
    "body": "### Describe the bug\r\nLogin in ASP.NET + Angular + Identity server boilerplate doesn't work over HTTP.\r\n\r\nWhile one can argue that we should be using HTTPS all the time, there are cases where that is just not possible.\r\n\r\n### To Reproduce\r\n1. Create new project ASP.NET Core\r\n    - .NET Core 5\r\n    - Auth Type: Individual Accounts\r\n    - Configure for HTTPS: No\r\n1. Update project debug settings and uncheck `Enable SSL`\r\n1. Start project -> Register -> Create user account\r\n1. Login - you get routed back to the login page after supplying a valid username/password\r\n\r\n\r\n### Further technical details\r\n- ASP.NET Core version: 5\r\n- Include the output of `dotnet --info`\r\n```\r\n7d337295\r\n\r\n.NET SDKs installed:\r\n  5.0.100-preview.6.20318.15 [C:\\Program Files\\dotnet\\sdk]\r\n  5.0.200-preview.21077.7 [C:\\Program Files\\dotnet\\sdk]\r\n  5.0.201 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.26 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.26 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 5.0.0-preview.6.20312.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 5.0.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 5.0.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.26 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 5.0.0-preview.6.20305.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 5.0.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 5.0.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 5.0.0-preview.6.20308.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 5.0.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 5.0.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n```\r\n- The IDE (VS / VS Code/ VS4Mac) you're running on, and its version: VS 2019 Community 16.9.2\r\n\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/32052/comments",
    "author": "Miggleness",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2021-04-22T10:36:13Z",
        "body": "@Miggleness thanks for contacting us.\r\n\r\nWe don't recommend using HTTP for sensitive operations like authentication and as a result this is not something that we support out of the box nor something we have plans to support."
      },
      {
        "user": "Miggleness",
        "created_at": "2021-04-22T14:51:23Z",
        "body": "@javiercn I understand and agree with that.  Could you give a hint where I need to look at to get this to work on HTTP?\r\n\r\nTIA"
      },
      {
        "user": "javiercn",
        "created_at": "2021-04-22T14:56:31Z",
        "body": "@Miggleness unfortunately is not something I can give you an answer of the top of my head, if you are running into these types of issues it likely requires debugging through the authentication flow to understand what's going on and we don't have resources for doing that given that it is not something we support.\r\n\r\nI would suggest starting by looking at the HTTP requests and responses for auth and putting breakpoints to determine where its looping, that's the best I can suggest."
      },
      {
        "user": "Miggleness",
        "created_at": "2021-04-22T16:04:27Z",
        "body": "Thanks @javiercn "
      }
    ]
  },
  {
    "number": 31964,
    "title": "Return value from signalr hub",
    "created_at": "2021-04-20T05:43:05Z",
    "closed_at": "2021-04-20T06:55:19Z",
    "labels": [
      "question",
      "area-signalr",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/31964",
    "body": "Hi All,\r\nIs it ok to return value from signalr hub method?\r\nI'm doing DB update/insert and want to make sure the process completed properly.\r\nThanks!\r\naa",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/31964/comments",
    "author": "avialonn",
    "comments": [
      {
        "user": "davidfowl",
        "created_at": "2021-04-20T06:37:04Z",
        "body": "Yes it is."
      },
      {
        "user": "avialonn",
        "created_at": "2021-04-20T06:55:19Z",
        "body": "Cool Thanks!"
      }
    ]
  },
  {
    "number": 31762,
    "title": "Why there are two SignInResult in ASP.NET Core?",
    "created_at": "2021-04-13T17:13:04Z",
    "closed_at": "2021-04-13T22:04:43Z",
    "labels": [
      "question",
      "area-mvc",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/31762",
    "body": "Why there are two `SignInResult` classes in ASP.NET Core as follows:\r\n\r\n1. `Microsoft.AspNetCore.Identity.SignInResult` \r\n2. `Microsoft.AspNetCore.Mvc.SignInResult`\r\n\r\n`Microsoft.AspNetCore.Identity.SignInResult`  is the return type of `await _signInManager.PasswordSignInAsync()` but what is the use of  `Microsoft.AspNetCore.Mvc.SignInResult`?\r\n\r\nThank you.\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/31762/comments",
    "author": "TanvirArjel",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2021-04-13T17:19:54Z",
        "body": "@TanvirArjel thanks for contacting us.\r\n\r\nMicrosoft.AspNetCore.Mvc.SignInResult is for signing a user with a given authentication scheme (whatever that means is up to the authentication scheme in question, for example, for cookies it will emit the cookie in the response)."
      }
    ]
  },
  {
    "number": 30868,
    "title": "TagBuilder is in the wrong namespace",
    "created_at": "2021-03-12T10:44:18Z",
    "closed_at": "2021-03-15T13:33:48Z",
    "labels": [
      "question",
      "area-mvc",
      "api-suggestion",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/30868",
    "body": "Is the `TagBuilder` class in the wrong namespace?\r\nIt is in the `Microsoft.AspNetCore.Mvc.Rendering` namespace in the `Microsoft.AspNetCore.Mvc.ViewFeatures` assembly, but does the TagBuilder have anything with MVC?\r\n\r\nIt can also be used together with Razor pages. It can also be used outside ASP.NET for things such creating HTML for emails. Maybe it can even be used for creating XML.",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/30868/comments",
    "author": "vanillajonathan",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2021-03-15T13:33:39Z",
        "body": "@vanillajonathan thanks for contacting us.\r\n\r\nRazor pages are part of MVC. We don't plan to change API namespaces since it breaks existing code and there's very limited value. It's also a conscious decision to minimize the number of namespaces we use."
      },
      {
        "user": "vanillajonathan",
        "created_at": "2021-03-15T14:17:31Z",
        "body": "Maybe the `TagBuilder` ought to not even be in the ASP.NET namespace because it useful for non-ASP and non-web things such as creating SVG images or any XML documents.\r\n\r\nMaybe a better place would be the `System.Xml` or the `System.Web` namespace."
      },
      {
        "user": "javiercn",
        "created_at": "2021-03-15T14:37:03Z",
        "body": "> Maybe the `TagBuilder` ought to not even be in the ASP.NET namespace because it useful for non-ASP and non-web things such as creating SVG images or any XML documents.\r\n> \r\n> Maybe a better place would be the `System.Xml` or the `System.Web` namespace.\r\n\r\nWe don't plan to change its current location nor namespace. It's a facility MVC provides for usage within MVC applications. Customers are free to use in whatever context they see fit, however it's not intention to change anything about it that is not required for building ASP.NET Core MVC applications, specially if it breaks existing libraries and customers.\r\n\r\nHope that helps explain our position."
      }
    ]
  },
  {
    "number": 30737,
    "title": "WebUtilities not available in client hosted Blazor WebAssembly",
    "created_at": "2021-03-08T11:33:23Z",
    "closed_at": "2021-03-08T12:42:14Z",
    "labels": [
      "question",
      "area-blazor",
      "feature-blazor-wasm",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/30737",
    "body": "I wanted to use some features of the Microsoft.AspNetCore.WebUtilities namespace in a client-hosted Blazor WebAssembly project (Microsoft.NET.Sdk.BlazorWebAssembly based). Since .NET Core 3 the former WebUtilities repository/project has moved into the aspnetcore repository and I expected it to be part of the shared framework for Blazor WebAssembly. However, the namespace is not available in the shared framework. Am I missing something here?\r\nI don't reference the old 2.2.0 versions from NuGet because of new functionalities that have been added to the namespace (or the QueryHelpers class in specific) in more recent updates.\r\n\r\nA clean code example for my problem is just the basic WebAssembly template itself, it's not possible to use the namespace from there.",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/30737/comments",
    "author": "AlexanderRettkowski",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2021-03-08T12:40:42Z",
        "body": "@AlexanderRettkowski thanks for contacting us.\r\n\r\nBlazor webassembly is not part of the shared framework and doesn't depend on it. Depending on what you are trying to achieve I suggest you replicate the source code within your codebase."
      }
    ]
  },
  {
    "number": 30640,
    "title": "Blazor feature request : inherit components from interface and inject them",
    "created_at": "2021-03-04T06:53:45Z",
    "closed_at": "2021-03-04T14:42:53Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/30640",
    "body": "It would be very useful if we could inherit components from interfaces :\r\n\r\n```\r\npublic interface ITextboxField {\r\n      string Text { get; set;}\r\n} \r\n\r\n```\r\n\r\n**BootstrapTextbox.razor** :\r\n\r\n```\r\n@inherit ITextboxField \r\n\r\n...\r\n\r\n@code{\r\n   [Parameter] public string Text { get; set;}\r\n}\r\n\r\n```\r\n\r\n**MyPage.razor :**\r\n\r\n```\r\n@inject ITextboxField MyTextboxField\r\n\r\n<MyTextboxField  Text=\"something\" />\r\n```\r\n\r\n\r\n\r\n**startup :**\r\n```\r\n\r\nservices.UseBootstrapComponents();\r\nor \r\n\r\nservices.UseMaterialDesignComponents();\r\n\r\n\r\n```\r\n**Bootstrap extension method :**\r\n```\r\nservices.AddScoped<ITextboxField,BootstrapTextbox>();\r\n...\r\n// other controls\r\n\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/30640/comments",
    "author": "navidzehi",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2021-03-04T11:37:45Z",
        "body": "@navidzehi thanks for contacting us.\r\n\r\nThe part about \"Inheriting\" threw me off a bit, but I think I know what you are asking about.\r\n\r\nIt might be possible for you to do this today in two ways:\r\n* Writing and registering your own IComponentActivator, which allows you to have the indirection you are looking for. There might be things that get in your way, like the compiler or other things I can't foresee.\r\n* You might do this in a slightly different way by using a named using `@using Some.Type = MyName` but I'm not sure if the compiler respects that.\r\n  * If that were to be the case, you can just put a bunch of usings like that within a _ViewImports.razor file and should have the effect you are looking for.\r\n\r\nIn general we are not in favor of features like this because they add quite a good amount of overhead to the rendering process (every component needs to be resolved) and this problem can be solved in different ways, like providing different versions of a library and so on.\r\n\r\nIt is not a common requirement to be able to switch CSS frameworks and so on and so it is expected that it requires a bit of work"
      },
      {
        "user": "navidzehi",
        "created_at": "2021-03-04T14:42:53Z",
        "body": "@javiercn thank you for your answer. As you mentioned the _ViewImports.razor can do the job."
      }
    ]
  },
  {
    "number": 30263,
    "title": "Static pages in Blazor",
    "created_at": "2021-02-18T11:13:35Z",
    "closed_at": "2021-02-19T03:39:21Z",
    "labels": [
      "question",
      "area-blazor",
      "feature-blazor-wasm",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/30263",
    "body": "Can i build a static website with C# using blazor , just like building a normal static website using JS,HTML,CSS",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/30263/comments",
    "author": "vishvanathan-k",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2021-02-18T13:54:23Z",
        "body": "@vishvanathan-k thanks for contacting us.\r\n\r\nCan you clarify your question?"
      },
      {
        "user": "vishvanathan-k",
        "created_at": "2021-02-18T14:59:57Z",
        "body": "We all know that we can build a simple static site with **JS , CSS and of course , HTML**\r\nMy questions is that can we build a static pages with **C# instead of JS and CSS , HTML** _(that means strictly no server side scripting)_ "
      },
      {
        "user": "javiercn",
        "created_at": "2021-02-18T15:16:04Z",
        "body": "@vishvanathan-k thanks for clarifying.\r\n\r\nYes, you can use Blazor Webassembly for that. When you publish you app it just becomes a bunch of files on disk that you can host wherever you want, like on github pages."
      }
    ]
  },
  {
    "number": 30259,
    "title": "Performance degradation of aspnet core application after several days of heavy load",
    "created_at": "2021-02-18T04:23:16Z",
    "closed_at": "2021-02-25T03:29:17Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/30259",
    "body": "Hello,\r\n\r\nWe have an aspnet core application running with SDK 3.1-3.1.405 on Centos 7 (it previously used SDK 3.1-3.1.302) with the same behavior.  The application is not compiled as a self contained package.  The SDK is installed separately on the VM.  \r\n\r\nAfter several days of heavy load on the application, we notice degradation where requests begin to take several seconds to complete.  The issue is only resolved by restarting the application.  Interestingly the issue seems to happen on several VMs on or around the same time.\r\n\r\nAfter taking a memory dump and analyzing the clrstack, it seems that almost all threads have a very similar stack as indicated below.  We use a third party graphql library but I am not sure if the issue is related to that or not based on this stack.  I would like to ask your guidance on how to proceed.  Would this possibly be an issue with the in the aspnet core runtime or the graphql library we are using?\r\n\r\n```\r\nOS Thread Id: 0x68da (564)\r\n        Child SP               IP Call Site\r\n00007F9E136CC198 00007fa4cc23ea35 [InlinedCallFrame: 00007f9e136cc198] System.Runtime.CompilerServices.RuntimeHelpers._CompileMethod(System.RuntimeMethodHandleInternal)\r\n00007F9E136CC198 00007fa457a821ed [InlinedCallFrame: 00007f9e136cc198] System.Runtime.CompilerServices.RuntimeHelpers._CompileMethod(System.RuntimeMethodHandleInternal)\r\n00007F9E136CC190 00007FA457A821ED System.Reflection.Emit.DynamicMethod.CreateDelegate(System.Type, System.Object)\r\n00007F9E136CC240 00007FA457A7C226 System.Linq.Expressions.Compiler.LambdaCompiler.Compile(System.Linq.Expressions.LambdaExpression)\r\n00007F9E136CC270 00007FA457A7C151 System.Linq.Expressions.Expression`1[[System.__Canon, System.Private.CoreLib]].Compile(Boolean)\r\n00007F9E136CC2A0 00007FA457B075A4 GraphQL.Types.ComplexGraphType`1[[System.__Canon, System.Private.CoreLib]].Field[[System.Nullable`1[[System.Int32, System.Private.CoreLib]], System.Private.CoreLib]](System.String, System.Linq.Expressions.Expression`1<System.Func`2<System.__Canon,System.Nullable`1<Int32>>>, Boolean, System.Type)\r\n00007F9E136CC300 00007FA457BAE942 Aggregator.Service.GraphQL.GraphTypes.V1.DashboardGraphTypes.IdentityProtectionLiteDataType..ctor()\r\n00007F9E136CC360 00007FA4573A9B60 System.RuntimeType.CreateInstanceDefaultCtor(Boolean, Boolean, Boolean, Boolean)\r\n00007F9E136CC3B0 00007FA457AA0590 GraphQL.Types.Schema.<CreateTypesLookup>b__56_2(System.Type)\r\n00007F9E136CC3C0 00007FA45739AA6B GraphQL.Types.GraphTypesLookup.AddTypeIfNotRegistered(System.Type, GraphQL.Types.TypeCollectionContext)\r\n00007F9E136CC3F0 00007FA45739A7BC GraphQL.Types.GraphTypesLookup.HandleField(System.Type, GraphQL.Types.FieldType, GraphQL.Types.TypeCollectionContext)\r\n00007F9E136CC430 00007FA456A41946 GraphQL.EnumerableExtensions.Apply[[System.__Canon, System.Private.CoreLib]](System.Collections.Generic.IEnumerable`1<System.__Canon>, System.Action`1<System.__Canon>)\r\n00007F9E136CC480 00007FA457A9E583 GraphQL.Types.GraphTypesLookup.AddType(GraphQL.Types.IGraphType, GraphQL.Types.TypeCollectionContext)\r\n00007F9E136CC4D0 00007FA45739A7BC GraphQL.Types.GraphTypesLookup.HandleField(System.Type, GraphQL.Types.FieldType, GraphQL.Types.TypeCollectionContext)\r\n00007F9E136CC510 00007FA456A41946 GraphQL.EnumerableExtensions.Apply[[System.__Canon, System.Private.CoreLib]](System.Collections.Generic.IEnumerable`1<System.__Canon>, System.Action`1<System.__Canon>)\r\n00007F9E136CC560 00007FA457A9E583 GraphQL.Types.GraphTypesLookup.AddType(GraphQL.Types.IGraphType, GraphQL.Types.TypeCollectionContext)\r\n00007F9E136CC5B0 00007FA45739A7BC GraphQL.Types.GraphTypesLookup.HandleField(System.Type, GraphQL.Types.FieldType, GraphQL.Types.TypeCollectionContext)\r\n00007F9E136CC5F0 00007FA456A41946 GraphQL.EnumerableExtensions.Apply[[System.__Canon, System.Private.CoreLib]](System.Collections.Generic.IEnumerable`1<System.__Canon>, System.Action`1<System.__Canon>)\r\n00007F9E136CC640 00007FA457A9E583 GraphQL.Types.GraphTypesLookup.AddType(GraphQL.Types.IGraphType, GraphQL.Types.TypeCollectionContext)\r\n00007F9E136CC690 00007FA45739A7BC GraphQL.Types.GraphTypesLookup.HandleField(System.Type, GraphQL.Types.FieldType, GraphQL.Types.TypeCollectionContext)\r\n00007F9E136CC6D0 00007FA456A41946 GraphQL.EnumerableExtensions.Apply[[System.__Canon, System.Private.CoreLib]](System.Collections.Generic.IEnumerable`1<System.__Canon>, System.Action`1<System.__Canon>)\r\n00007F9E136CC720 00007FA457A9E583 GraphQL.Types.GraphTypesLookup.AddType(GraphQL.Types.IGraphType, GraphQL.Types.TypeCollectionContext)\r\n00007F9E136CC770 00007FA456A41946 GraphQL.EnumerableExtensions.Apply[[System.__Canon, System.Private.CoreLib]](System.Collections.Generic.IEnumerable`1<System.__Canon>, System.Action`1<System.__Canon>)\r\n00007F9E136CC7C0 00007FA457BC0BD2 GraphQL.Types.GraphTypesLookup.Create(System.Collections.Generic.IEnumerable`1<GraphQL.Types.IGraphType>, System.Collections.Generic.IEnumerable`1<GraphQL.Types.DirectiveGraphType>, System.Func`2<System.Type,GraphQL.Types.IGraphType>, GraphQL.Conversion.IFieldNameConverter)\r\n00007F9E136CC810 00007FA457B99016 System.Lazy`1[[System.__Canon, System.Private.CoreLib]].ViaFactory(System.Threading.LazyThreadSafetyMode)\r\n00007F9E136CC850 00007FA457B98B50 System.Lazy`1[[System.__Canon, System.Private.CoreLib]].ExecutionAndPublication(System.LazyHelper, Boolean)\r\n00007F9E136CC890 00007FA457B98A91 System.Lazy`1[[System.__Canon, System.Private.CoreLib]].CreateValue()\r\n00007F9E136CC8B0 00007FA457BC0824 GraphQL.Types.Schema.get_AllTypes()\r\n00007F9E136CC8C0 00007FA457BBE77F GraphQL.Instrumentation.FieldMiddlewareBuilder.ApplyTo(GraphQL.Types.ISchema)\r\n00007F9E136CC8F0 00007FA456A3A3D1 GraphQL.DocumentExecuter+<ExecuteAsync>d__8.MoveNext()\r\n00007F9E136CCA00 00007FA457BBFC24 System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[GraphQL.DocumentExecuter+<ExecuteAsync>d__8, GraphQL]](<ExecuteAsync>d__8 ByRef)\r\n00007F9E136CCA40 00007FA457BBFB6F GraphQL.DocumentExecuter.ExecuteAsync(GraphQL.ExecutionOptions)\r\n00007F9E136CCAF0 00007FA457B50DC5 Aggregator.Service.Controllers.BaseGraphQLController+<ProcessQuery>d__7.MoveNext()\r\n00007F9E136CCB80 00007FA457BBDC34 System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[Aggregator.Service.Controllers.BaseGraphQLController+<ProcessQuery>d__7, Aggregator.Service]](<ProcessQuery>d__7 ByRef)\r\n00007F9E136CCBC0 00007FA457BBF1BD Aggregator.Service.Controllers.BaseGraphQLController.ProcessQuery(Aggregator.Service.Models.GraphQLRequest)\r\n00007F9E136CCC10 00007FA457B5092C Aggregator.Service.Controllers.BaseGraphQLController+<Post>d__4.MoveNext()\r\n00007F9E136CCC50 00007FA457BBDB24 System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[Aggregator.Service.Controllers.BaseGraphQLController+<Post>d__4, Aggregator.Service]](<Post>d__4 ByRef)\r\n00007F9E136CCC90 00007FA457BBDA6D Aggregator.Service.Controllers.BaseGraphQLController.Post(Aggregator.Service.Models.GraphQLRequest)\r\n00007F9E136CCCD0 00007FA455DE3C0E SOS Warning: Loading symbols for dynamic assemblies is not yet supported\r\nDynamicClass.lambda_method(System.Runtime.CompilerServices.Closure, System.Object, System.Object[])\r\n00007F9E136CCCF0 00007FA457B506EA Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor+TaskOfIActionResultExecutor+<Execute>d__0.MoveNext()\r\n00007F9E136CCD30 00007FA457BBF0C4 System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor+TaskOfIActionResultExecutor+<Execute>d__0, Microsoft.AspNetCore.Mvc.Core]](<Execute>d__0 ByRef)\r\n00007F9E136CCD70 00007FA457BBF00C Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor+TaskOfIActionResultExecutor.Execute(Microsoft.AspNetCore.Mvc.Infrastructure.IActionResultTypeMapper, Microsoft.Extensions.Internal.ObjectMethodExecutor, System.Object, System.Object[])\r\n00007F9E136CCDE0 00007FA4569F0121 Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeActionMethodAsync()\r\n00007F9E136CCE40 00007FA4569AD065 Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State ByRef, Scope ByRef, System.Object ByRef, Boolean ByRef)\r\n00007F9E136CCF00 00007FA4569BD592 Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeNextActionFilterAsync()\r\n00007F9E136CCF50 00007FA4569EFB6D Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeNextActionFilterAwaitedAsync()\r\n00007F9E136CCF70 00007FA456A3633B Aggregator.Service.Filters.ValidHeadersFilterAttribute+<OnActionExecutionAsync>d__3.MoveNext()\r\n00007F9E136CD030 00007FA457BBD1C4 System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[Aggregator.Service.Filters.ValidHeadersFilterAttribute+<OnActionExecutionAsync>d__3, Aggregator.Service]](<OnActionExecutionAsync>d__3 ByRef)\r\n00007F9E136CD070 00007FA457BBEC71 Aggregator.Service.Filters.ValidHeadersFilterAttribute.OnActionExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext, Microsoft.AspNetCore.Mvc.Filters.ActionExecutionDelegate)\r\n00007F9E136CD0C0 00007FA4569ACD2F Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State ByRef, Scope ByRef, System.Object ByRef, Boolean ByRef)\r\n00007F9E136CD180 00007FA4569BD592 Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeNextActionFilterAsync()\r\n00007F9E136CD1D0 00007FA4569EFB6D Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeNextActionFilterAwaitedAsync()\r\n00007F9E136CD1F0 00007FA457B12F26 Aggregator.Service.Filters.LogActionFilterAttribute+<OnActionExecutionAsync>d__7.MoveNext()\r\n00007F9E136CD290 00007FA45673713D System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)\r\n00007F9E136CD2E0 00007FA457B3148A System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1+AsyncStateMachineBox`1[[System.Threading.Tasks.VoidTaskResult, System.Private.CoreLib],[Aggregator.Service.Filters.LogActionFilterAttribute+<OnActionExecutionAsync>d__7, Aggregator.Service]].MoveNext(System.Threading.Thread)\r\n00007F9E136CD310 00007FA456739736 System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(System.Runtime.CompilerServices.IAsyncStateMachineBox, Boolean)\r\n00007F9E136CD350 00007FA456738BD0 System.Threading.Tasks.Task.RunContinuations(System.Object)\r\n00007F9E136CD3F0 00007FA4569948C4 System.Threading.Tasks.Task`1[[System.__Canon, System.Private.CoreLib]].TrySetResult(System.__Canon)\r\n00007F9E136CD420 00007FA457ACDE02 Aggregator.Service.Filters.LogActionFilterAttribute+<GetArgumentsStr>d__11.MoveNext()\r\n00007F9E136CD460 00007FA45673713D System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)\r\n00007F9E136CD4B0 00007FA457B1293E System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1+AsyncStateMachineBox`1[[System.__Canon, System.Private.CoreLib],[Aggregator.Service.Filters.LogActionFilterAttribute+<GetArgumentsStr>d__11, Aggregator.Service]].MoveNext(System.Threading.Thread)\r\n00007F9E136CD4F0 00007FA456739736 System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(System.Runtime.CompilerServices.IAsyncStateMachineBox, Boolean)\r\n00007F9E136CD530 00007FA456738BD0 System.Threading.Tasks.Task.RunContinuations(System.Object)\r\n00007F9E136CD5D0 00007FA4569948C4 System.Threading.Tasks.Task`1[[System.__Canon, System.Private.CoreLib]].TrySetResult(System.__Canon)\r\n00007F9E136CD600 00007FA457ACE040 Aggregator.Service.Filters.LogActionFilterAttribute+<GetArguments>d__14.MoveNext()\r\n00007F9E136CD640 00007FA45673713D System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)\r\n00007F9E136CD690 00007FA457B0B76E System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1+AsyncStateMachineBox`1[[System.__Canon, System.Private.CoreLib],[Aggregator.Service.Filters.LogActionFilterAttribute+<GetArguments>d__14, Aggregator.Service]].MoveNext(System.Threading.Thread)\r\n00007F9E136CD6D0 00007FA456739736 System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(System.Runtime.CompilerServices.IAsyncStateMachineBox, Boolean)\r\n00007F9E136CD710 00007FA456738BD0 System.Threading.Tasks.Task.RunContinuations(System.Object)\r\n00007F9E136CD7B0 00007FA4569D1D45 System.Threading.Tasks.Task.FinishSlow(Boolean)\r\n00007F9E136CD7F0 00007FA4569C62D1 System.Threading.Tasks.Task.ExecuteWithThreadLocal(System.Threading.Tasks.Task ByRef, System.Threading.Thread)\r\n00007F9E136CD870 00007FA456736EF9 System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n00007F9E136CDC80 00007fa4ca94b4cf [DebuggerU2MCatchHandlerFrame: 00007f9e136cdc80]\r\n```",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/30259/comments",
    "author": "edavedian",
    "comments": [
      {
        "user": "ShreyasJejurkar",
        "created_at": "2021-02-18T05:46:03Z",
        "body": ">The SDK is installed separately on the VM\r\n\r\nSDK on VM? You just need runtime from my understanding! "
      },
      {
        "user": "edavedian",
        "created_at": "2021-02-18T06:07:15Z",
        "body": "@MCCshreyas Thanks for the comment. We installed SDK to be able to additionally install diagnostic tools like dotnet-dump, dotnet-trace and dotnet-counters using “dotnet tool install” method."
      },
      {
        "user": "davidfowl",
        "created_at": "2021-02-18T06:31:08Z",
        "body": "> graphql library we are using?\n\nBased on the call stack this looks like a possibility. Are you collecting dotnet counters? That will give you basic metrics about the process when can help narrow in on where to look.\n\nIt looks like the graphql library is doing some dynamic expression tree compilation. I don't know if that's taking a long time or not but if a bunch of threads are stuck here it might be a good place to ask the library owner a question "
      },
      {
        "user": "edavedian",
        "created_at": "2021-02-18T06:46:38Z",
        "body": "@davidfowl thank you very much. I will follow up with the library owner but I was just wondering if you might have any insight as to why this issue happens after a few days. Is there any dependency here with JIT by any chance? Could there be a scenario where instead of executing native code the framework starts executing precompiled code and hence the slowdown?"
      },
      {
        "user": "davidfowl",
        "created_at": "2021-02-18T07:05:27Z",
        "body": "I wouldn't jump to that as yet. It's likely something that slowly degrades in the process. Could be a slow algorithm, like something O(N^2) but N starts off small and grows huge after a few days and is happening per request. I'd start with the basics and look at the counts of things (the counters and objects in the memory dump), also ping the team that owns the library in parallel."
      },
      {
        "user": "edavedian",
        "created_at": "2021-02-25T03:29:17Z",
        "body": "Thank you again for your analysis.  This ended up being an issue on our side.  The mvc controllers where request scoped and they were creating the graphql schema each time which was causing the performance issue."
      }
    ]
  },
  {
    "number": 29860,
    "title": "How to pass an optional RenderFragment from a parent component to a child component in Blazor?",
    "created_at": "2021-02-02T21:48:39Z",
    "closed_at": "2021-02-03T19:52:28Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/29860",
    "body": "**Context:**\r\nWe have an Blazor application with the following 3 files:\r\n\r\n - ChildComponent.razor\r\n - ParentComponent.razor\r\n - Test.razor (this is the consumer, which uses the parent component)\r\n\r\n**ChildComponent.razor**\r\n\r\n    <div>\r\n    \t@if(Body != null)\r\n    \t{\r\n    \t\t@Body\r\n    \t}\r\n    \r\n    \t@if(Footer != null)\r\n    \t{\r\n            <div class=\"footer\">\r\n    \t\t    @Footer\r\n            </div>\r\n    \t}\r\n    </div>\r\n    \r\n    @code\r\n    {\r\n    \t[Parameter]\r\n        public RenderFragment Body { get; set; }\r\n    \t\r\n    \t[Parameter]\r\n        public RenderFragment Footer { get; set; }\r\n    }\r\n\r\n\r\n**ParentComponent.razor**\r\n\r\nThe ParentComponent uses the ChildComponent. We want to pass the `ParentFooter` to the Childcomponent´s `Footer`:\r\n    \r\n    <ChildComponent Footer=\"ParentFooter\">\r\n    \t<Body>\r\n    \t\t<p>@Text</p>\r\n    \t</Body>\r\n    </ChildComponent>\r\n    \r\n    @code\r\n    {\r\n    \t[Parameter]\r\n    \tpublic string Text { get; set; }\r\n    \r\n    \t[Parameter]\r\n        public RenderFragment ParentFooter { get; set; }\r\n    }\r\n\r\nThe consuming file is **Test.razor** and looks like this:\r\n\r\n    <ParentComponent Text=\"Hello World\"></ParentComponent>\r\n\r\nWe do not use a `<ParentFooter></ParentFooter>` here, because the footer is optional.\r\n\r\n**Problem:**\r\n\r\nWe get an exception in the browser´s console:\r\n\r\n> Unhandled exception rendering component: Delegate to an instance\r\n> method cannot have null 'this' (Parameter 'this')\r\n\r\n**Possible Solution:**\r\n\r\nIn the file **ParentComponent.razor**, we pass the Footer by an reference and make an `null`-check:\r\n\r\n    <ChildComponent Footer=\"ParentFooter\" @ref=\"m_ChildComponentRef\">\r\n    \t<Body>\r\n    \t\t<p>@Text</p>\r\n    \t</Body>\r\n    </ChildComponent>\r\n    \r\n    @code\r\n    {\r\n    \t[Parameter]\r\n    \tpublic string Text { get; set; }\r\n    \r\n    \t[Parameter]\r\n        public RenderFragment ParentFooter { get; set; }\r\n    \t\r\n    \tprivate ChildComponent m_ChildComponentRef { get; set; }\r\n    \t\r\n    \tprotected override void OnParametersSet()\r\n        {\r\n            base.OnParametersSet();\r\n    \r\n            if (ParentFooter != null)\r\n            {\r\n                m_ChildComponentRef.Footer = ParentFooter;\r\n            }\r\n        }\t\r\n    }\r\n\r\nBut this is is a bad way, because we get an warning:\r\n\r\n> BL0005:Component parameter should not be set outside of its component.\r\n\r\n**Question:** How can we pass an optional RenderFragment to an child component?\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/29860/comments",
    "author": "enetstudio",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2021-02-03T09:48:31Z",
        "body": "@enetstudio thanks for contacting us.\r\n\r\nYou can override `SetParametersAsync` and implement your own logic for dealing with mapping the component parameters to the properties/fields in your class."
      },
      {
        "user": "enetstudio",
        "created_at": "2021-02-03T19:52:20Z",
        "body": "@javiercn,  many thanks for your prompt response. I've already solved all the issues involved. I'll close this issue. Thanks..."
      }
    ]
  },
  {
    "number": 29817,
    "title": "Remove Blazor CascadingParameter binding by type",
    "created_at": "2021-02-01T12:14:45Z",
    "closed_at": "2021-02-05T10:52:51Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved",
      "design-proposal"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/29817",
    "body": "It just doesn't make any sense, makes the code unexpected, and introduces confusion and extra learning curve. Binding should be (like anything else in the world of IT) by name",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/29817/comments",
    "author": "MhAllan",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2021-02-02T08:54:57Z",
        "body": "@MhAllan thanks for contacting us.\r\n\r\nWe appreciate the feedback, however this is not something we plan to change as this is not a common opinion from the community and removing a functionality like this would be a big breaking change.\r\n\r\nDevelopers are not forced to use binding by type and can always leverage binding by name."
      },
      {
        "user": "mrpmorris",
        "created_at": "2021-02-03T08:30:37Z",
        "body": "Type is a very useful way for a parent to pass a reference of itself to children.\r\n\r\nIt's far better for a child to expect a cascading value if type Parent than it is to have both parent and child agree on a string ID. Passing by type will result in a compiler error if wrong, passing by string using the wrong ID will result in a null. "
      },
      {
        "user": "MhAllan",
        "created_at": "2021-02-04T08:54:26Z",
        "body": "Do you see the daily conflicts that will happen just because things will bind behind your back? I am totally against it"
      },
      {
        "user": "mrpmorris",
        "created_at": "2021-02-04T23:25:17Z",
        "body": "Sorry, I don't understand.  What conflicts?"
      },
      {
        "user": "javiercn",
        "created_at": "2021-02-05T10:52:51Z",
        "body": "@MhAllan we appreciate the feedback, but we are not planning on removing existing functionality from the framework since it will be problematic for other users.\r\n\r\nWe haven't received significant feedback that binding by type is problematic and doing what you propose would be costly and a painful breaking change that we don't plan to do as it will unnecessarily cause pain to the vast majority of users that haven't complain about this.\r\n\r\nI hope this helps clarify our motivations."
      }
    ]
  },
  {
    "number": 29676,
    "title": "blazor = native browser caching features",
    "created_at": "2021-01-27T15:15:56Z",
    "closed_at": "2021-01-27T20:22:24Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/29676",
    "body": "Providing solutions for caching data in the browser natively or by some component, such as localstorage, sessionstorage and indexeddb.\r\n\r\nWe already have some solutions made by the community for local and session, but indexeddb the solutions that exist still leave a lot to be desired. And it would be interesting to have extra features, like TTL, encrypt data, etc.",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/29676/comments",
    "author": "drma-tech",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2021-01-27T15:23:12Z",
        "body": "@drma-dev You can already do this with one line of code.\r\n\r\nWe don't intend to provide a shim for all Browser APIs since that implies a high maintenance cost for our team that we can't afford, and we prefer that the community comes up with their own packages to do these types of things.\r\n\r\nSome of this APIs are callable directly from JS interop without need for a wrapper library, but if you prefer it, building a wrapper is trivial. For example, localStorage can be directly called through JSInterop by doing `var data = await JS.InvokeAsync(\"localStorage.get\", \"key\")` similar with other functions as well as for session storage."
      }
    ]
  },
  {
    "number": 29648,
    "title": "Blazor - Save result of razor component to a string",
    "created_at": "2021-01-26T22:03:58Z",
    "closed_at": "2021-01-27T15:00:00Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/29648",
    "body": "### Is your feature request related to a problem? Please describe.\r\nSometimes I have to pass HTML to JavaScript to use it in a JavaScript-enhanced element (Bootstrap \"plugin\"). It would be useful to be able to reuse an existing razor component by saving the output it would render to a string and passing it on to JavaScript.\r\n\r\n### Describe the solution you'd like\r\nGiven a component MyComponent.razor:\r\n```\r\n<h1>@Title</h1>\r\n<p>@Description</p>\r\n\r\ncode {\r\n    [Parameter]\r\n    public string Title { get; set; }\r\n\r\n    [Parameter]\r\n    public string Description { get; set; }\r\n}\r\n```\r\n\r\nSave its output to a string and use like:\r\n```\r\n<div class=\"my-plugin\" data-content=\"@myComponentOutput\"></div>\r\n\r\ncode {\r\n    private string myComponentOutput;\r\n    private MyComponent myComponent;\r\n\r\n    protected override void OnInitialized()\r\n    {\r\n        myComponentOutput = myComponent.GetOutput(Title: \"Hello\", Description: \"Just saying hello\");\r\n    }\r\n}\r\n```",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/29648/comments",
    "author": "mrlife",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2021-01-27T11:34:10Z",
        "body": "@mrlife thanks for contacting us.\r\n\r\nWe don't think this is a direction we plan to take since this greatly interferes with the way Blazor renders and there are alternative ways of achieving this.\r\n\r\nTo give some clarity, it is unlikely that we will ever add something to the framework that lets you render a component reference directly, since that will dramatically interfere with the way the framework works.\r\n\r\nBlazor controls the component lifecycle and that's not something we'll likely change, since it is critical to some of the guarantees the framework offers.\r\n\r\nYou can probably do this yourself today if you want to through JavaScript by rendering the component, grabbing a reference to it, and getting the inner html through javascript to set on the attribute.\r\n\r\nAs an alternative you might be able to leverage something like a `template` element to achieve a similar result using just HTML and DOM APIs."
      },
      {
        "user": "mrlife",
        "created_at": "2021-01-27T15:00:00Z",
        "body": "Thank you! The `template` element is not something I've heard of before and sounds promising for this."
      }
    ]
  },
  {
    "number": 29458,
    "title": "Why it is needed to set normalized username/email each time user updates?",
    "created_at": "2021-01-20T12:28:03Z",
    "closed_at": "2021-01-22T17:27:36Z",
    "labels": [
      "question",
      "area-identity",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/29458",
    "body": "I'm trying to understand workflow of ASP.NET Core Identity to correctly implement UserStore.\r\n\r\nIn `UserManager.UpdateUserAsync(TUser user)`  two methods are called:\r\n```\r\nawait UpdateNormalizedUserNameAsync(user);\r\nawait UpdateNormalizedEmailAsync(user);\r\n```\r\nMethod `UpdateUserAsync` is called from several places such as `AccessFailedAsync` or `RemoveFromRolesAsync`.\r\nWhat purpose of normalized data update in these scenarios?",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/29458/comments",
    "author": "Gendolph",
    "comments": [
      {
        "user": "HaoK",
        "created_at": "2021-01-22T17:27:36Z",
        "body": "Basically the usermanager is responsible for ensuring that the  email/username is normalized before updating the user in the store.  Since the fields are mutable, this is done to guarantee they are consistent correct before the user's data is saved.  "
      }
    ]
  },
  {
    "number": 29443,
    "title": "I want to capture the Browser keypress event and perform certain action [Hot key functionality in Blazor]",
    "created_at": "2021-01-20T05:11:37Z",
    "closed_at": "2021-01-21T08:34:34Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/29443",
    "body": "I want something like if I press F5 then I want to capture this key event and perform certain action In Blazor e.g. want user to directly navigate to certain component on different KeyPress event like F5, Ctrl+shift+F5 etc.\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/29443/comments",
    "author": "Akmo790",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2021-01-20T10:43:27Z",
        "body": "@Akmo790 thanks for contacting us.\r\n\r\nThere shouldn't be anything special about this in Blazor, you could achieve this by subscribing to `@onkeydown` in an element on the document root or by using javascript to attach an event handler within the window with `addEventListener`"
      },
      {
        "user": "En3Tho",
        "created_at": "2021-01-20T12:42:49Z",
        "body": "I think F5 case is not so simple. SO gives some JS answers with disabling F5 first. I think user might just add those as script to index.html. Or is there an option to do it via Blazor?"
      },
      {
        "user": "javiercn",
        "created_at": "2021-01-20T13:46:44Z",
        "body": "@En3Tho I'm not sure you can capture F5, but It's not something you can do in Blazor if it can't be done in the browser."
      },
      {
        "user": "Akmo790",
        "created_at": "2021-01-20T13:54:22Z",
        "body": "Actually i wanted something like, when my application is running in a browser and I click F5 or F10, I should be able to capture the response and perform certain action in blazor server side application for. E.g open s specific page .If it can be javscript can you give a samlle code. "
      },
      {
        "user": "javiercn",
        "created_at": "2021-01-20T14:07:02Z",
        "body": "@Akmo790 I'm not sure how to do it nor if it's possible to do so in the browser. \r\n\r\nWhile we do our best to try and answer every question, this question is not about Blazor anymore and about web programming. \r\n\r\nThis issue tracker is focused on product issues, since we don't have the resources to handle these types of questions, I would suggest you try asking how to do this in JavaScript in Stackoverflow or a similar forum and then apply it to Blazor through the use of JS interop.\r\n\r\nThat said, I think that this is likely not possible to do in the context of a browser (for some key bindings like F5 at least)"
      },
      {
        "user": "Akmo790",
        "created_at": "2021-01-21T08:34:43Z",
        "body": "Ok"
      }
    ]
  },
  {
    "number": 28270,
    "title": "Put Action Method Throws JsonException Unlike Others",
    "created_at": "2020-12-01T06:14:51Z",
    "closed_at": "2020-12-01T21:07:06Z",
    "labels": [
      "question",
      "area-mvc",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/28270",
    "body": "So I have a simple restful api and everything works well except put action method. \r\n\r\nIt gets a simple Hotel object which has three properties: Name, City, and Id. \r\n\r\nAnd here is the code in Hotel Repository layer:\r\n\r\n`public async Task<int> UpdateHotel(Hotel hotel)\r\n    {\r\n        var sql = \"UPDATE Hotels \" +\r\n                    \"SET name = @name, city = @city \" +\r\n                    \"WHERE Id = @id\";\r\n\r\n        var updatedHotel = new Hotel()\r\n        {\r\n            Name = hotel.Name,\r\n            City = hotel.City,\r\n            Id = hotel.Id\r\n        };\r\n\r\n        using (var connection = new SqlConnection(CONNECTION_STRING))\r\n        {\r\n            return await connection.ExecuteAsync(sql, updatedHotel);\r\n        }\r\n    }`\r\n\r\nAfter these lines of code executed and the computer left this method the exception is thrown. \r\n\r\nHere is the error: \r\nSystem.Text.Json.JsonException: A possible object cycle was detected which is not supported. This can either be due to a cycle or if the object depth is larger than the maximum allowed depth of 32.\r\n \r\nDo you know why that is? \r\n\r\nWhen I first debugged the exception was thrown during the execution of the method, in the return statement specifically . I saw I didn’t add any spaces at the ends of the sql strings and I fixed that. After that the current situation is as I describe above. ",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/28270/comments",
    "author": "Atalaybars",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2020-12-01T15:30:43Z",
        "body": "@Atalaybars thanks for contacting us.\r\n\r\nThis question is not about ASP.NET Core but specifically about JSON serialization. In general, serializing graphs of objects is not supported out of the box, you can change that in the configuration `AddMvc().AddJsonOptions(o => ...)`. However, this is something that we discourage you from doing. \r\n\r\nWe recommend that you remove cyclical dependencies from your object model if you plan on serializing it via JSON or create a separate object model composed of DTOs for producing the response and map your models to those DTOs."
      },
      {
        "user": "Atalaybars",
        "created_at": "2020-12-01T21:06:56Z",
        "body": "Thank you!"
      }
    ]
  },
  {
    "number": 28104,
    "title": "System.Text.Json.JsonException: Unlimited loops",
    "created_at": "2020-11-24T07:29:44Z",
    "closed_at": "2020-11-24T12:37:35Z",
    "labels": [
      "question",
      "area-mvc",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/28104",
    "body": "### Describe the bug\r\nI use Entity Framework Core to orm a object,but it has a error when webapi return this object to frontend.\r\nMy Entity:\r\n```C#\r\npublic class User\r\n{\r\n    public string Id{ get; set; }\r\n    public string Name { get; set; }\r\n    public Account Account{ get; set; }\r\n}\r\n\r\npublic class Account \r\n{\r\n    public string Id{ get; set; }\r\n    public string Identifier { get; set; }\r\n    public string UserId { get; set; }\r\n    public User User{ get; set; }\r\n}\r\n```\r\n```\r\nSystem.Text.Json.JsonException: A possible object cycle was detected which is not supported. This can either be due to a cycle or if the object depth is larger than the maximum allowed depth of 64.\r\n   at System.Text.Json.ThrowHelper.ThrowInvalidOperationException_SerializerCycleDetected(Int32 maxDepth)\r\n   at System.Text.Json.JsonSerializer.Write(Utf8JsonWriter writer, Int32 originalWriterDepth, Int32 flushThreshold, JsonSerializerOptions options, WriteStack& state)\r\n   at System.Text.Json.JsonSerializer.WriteAsyncCore(Stream utf8Json, Object value, Type inputType, JsonSerializerOptions options, CancellationToken cancellationToken)\r\n   at Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter.WriteResponseBodyAsync(OutputFormatterWriteContext context, Encoding selectedEncoding)\r\n   at Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter.WriteResponseBodyAsync(OutputFormatterWriteContext context, Encoding selectedEncoding)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.\r\n<InvokeNextResultFilterAsync>g__Awaited|29_0[TFilter,TFilterAsync](ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResultExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.ResultNext[TFilter,TFilterAsync](State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeResultFilters()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.\r\n    <InvokeNextResourceFilter>g__Awaited|24_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.\r\n        <InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.\r\n            <InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.\r\n                <Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)\r\n```\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/28104/comments",
    "author": "scung-cn",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2020-11-24T11:41:25Z",
        "body": "@sbchong thanks for contacting us.\r\n\r\nThis is by design. Cycles are not supported in System.Text.Json (by default at least). You should consider creating DTOs for explicitly producing the JSON response from your API"
      },
      {
        "user": "scung-cn",
        "created_at": "2020-11-24T12:37:32Z",
        "body": "thanks for your  answer!\r\nI used mapper&DTOs in the previous project，so that I have not found this problem."
      }
    ]
  },
  {
    "number": 27806,
    "title": "blazor.razor.css isolation with possibility to programatically change styles",
    "created_at": "2020-11-13T11:19:57Z",
    "closed_at": "2020-11-13T13:46:06Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/27806",
    "body": "### Is your feature request related to a problem? Please describe.\r\nI think that css isolation is a cool feature. What I am missing though is a possibility to change styles programatically the same way I change html code in razor components.\r\n\r\n### Describe the solution you'd like\r\neg. I would like possibility to use something like this in my isolated `razor.css` files.\r\n``` css\r\n.board {\r\n    display: grid;\r\n    grid-template-columns: repeat(6,32px);\r\n    grid-template-rows: repeat(20,32px);\r\n    grid-column-gap: 0;\r\n    border: 2px dashed var(--accent-color,red);\r\n    background-color: @MyColor;  /*MyColor value is injected from code*/    \r\n    background-repeat: no-repeat;\r\n    background-size: contain;\r\n}\r\n```\r\n\r\nThanks",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/27806/comments",
    "author": "suchoss",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2020-11-13T13:26:17Z",
        "body": "@suchoss thanks for contacting us.\r\n\r\nThat's not a feature we plan to support. The support we provide for CSS isolation tries to be as orthogonal as possible as the Razor language, so this is not a direction we plan to take.\r\n\r\nYou can achieve something like what you describe with CSS variables and instead use code (maybe via JS interop) to change the values of the CSS variables at runtime."
      },
      {
        "user": "suchoss",
        "created_at": "2020-11-13T13:46:06Z",
        "body": "@javiercn Thanks for the reply. \r\n\r\nIn my case I will do it through `style='background-color: @MyColor;'` element in tags. It will make my code a bit more messy. But it'll work.\r\n\r\nIn case you change your mind I will be happy to see a feature like this.\r\n\r\nAnyway - thank You for your work.\r\nGood job!"
      }
    ]
  },
  {
    "number": 27692,
    "title": "Blazor Server: don't bind event listener for non-rendered element",
    "created_at": "2020-11-10T20:46:15Z",
    "closed_at": "2020-11-20T14:10:58Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/27692",
    "body": "I'm interested in keeping authorization simple by using the `AuthorizeView` component.  This request is an elaboration of the documentation issue: dotnet/AspNetCore.Docs/issues/20462.\r\n\r\nIn short, say I have Blazor pages, each of which requires authentication and role-based authorization:\r\n```\r\n@page \"/page1\"\r\n@attribute [Authorize]\r\n\r\n<AuthorizeView Role=\"page1\">\r\n    <!-- SECURE CONTENT -->\r\n    <button @onclick=\"SecureAction\">Secure Action</button>\r\n</AuthorizeView>\r\n\r\n@code {\r\n    private void SecureAction()\r\n    {\r\n        // Unauthorized users should not be able to execute this code path\r\n    }\r\n}\r\n```\r\n\r\nIt would be nice if it was impossible for clients to manually trigger the `SecureAction` method.  In this case, because the only element to which it binds is not rendered, no SignalR event listener should be bound.\r\n\r\nI would prefer not to inject the `AuthenticationStateProvider` in every page and guard every protected task/method with it.\r\n\r\nre: @guardrex ",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/27692/comments",
    "author": "shanemikel",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2020-11-11T12:24:25Z",
        "body": "@shanemikel thanks for contacting us.\r\n\r\nI don't believe this is generally possible without integrating authorization with the renderer/dispatching mechanism in a strongly coupled way, which is not something we think we'll do.\r\n\r\nYou could alternatively write a \"protected\" action component that encapsulates the behavior you want.\r\n\r\n```\r\n<ProtectedAction Handler=\"SecureAction\" Context=\"protectedHandler\">\r\n    <!-- SECURE CONTENT -->\r\n    <button @onclick=\"protectedHandler\">Secure Action</button>\r\n</ProtectedAction>\r\n```\r\n\r\nWithin the `ProtectedAction` component you'll have something like this\r\n```\r\n@ChildContent(_protectedHandler);\r\n@code\r\n{\r\n  [Parameter] public EventCallback Handler { get; set; }\r\n  [CascadingParameter] public Task<AuthenticationState> AuthenticationState { get; set; }\r\n\r\n  protected override void OnParametersSet()\r\n  {\r\n    _protectedHandler = ProtectedHandler;\r\n  }\r\n\r\n  private async Task ProtectedHandler()\r\n  {\r\n    var state = await AuthenticationState;\r\n    var authorized = ...\r\n    if(authorized)\r\n    {\r\n      await Handler.InvokeAsync();\r\n    }\r\n  }\r\n}\r\n```"
      },
      {
        "user": "guardrex",
        "created_at": "2020-11-11T13:04:31Z",
        "body": "We could cover this as an **_advanced_** authz pattern ..... but *later*, probably even early next year given all of the work I have to do right now. @javiercn / @mkArtakMSFT ... let me know if you would like to **_avoid_** covering this pattern. I'll close the docs issue if that's the case."
      },
      {
        "user": "pranavkm",
        "created_at": "2020-11-12T19:47:16Z",
        "body": "@shanemikel by default event handlers for non-rendered elements are unable to be invoked. The scenario @javiercn was talking of was that **if** your authorization status changes after an element is rendered, there is a small window (in the order of milliseconds) before a new render that event handlers could be triggered. (\r\n\r\n[Initially authorized] --> [Unauthorized / StateHasChanged] .... You can continue to trigger the event now .... --> [Render](Now it's no longer possible to trigger)\r\n\r\nIf you were concerned about the small window, you could consider using the pattern @javiercn suggested. Most users would not need to worry about this. \r\n\r\n@guardrex I don't think this needs to be documented. \r\n\r\n"
      },
      {
        "user": "shanemikel",
        "created_at": "2020-11-13T00:07:55Z",
        "body": "@pranavkm Oh, that's great!  I actually think that would be a nice addition to the documentation."
      },
      {
        "user": "pranavkm",
        "created_at": "2020-11-13T00:14:09Z",
        "body": "@shanemikel we generally do not document things our framework does not do. I'll defer to @guardrex to make a call here."
      },
      {
        "user": "guardrex",
        "created_at": "2020-11-13T00:17:37Z",
        "body": "> default event handlers for non-rendered elements are unable to be invoked\r\n\r\nWe don't say that ... we only imply it, so I'll add a line to cover it.\r\n"
      },
      {
        "user": "javiercn",
        "created_at": "2020-11-20T14:10:58Z",
        "body": "Closing this issue since the original question was answered."
      }
    ]
  },
  {
    "number": 26898,
    "title": "Cannot use IJsRuntime from Within Identity Framework",
    "created_at": "2020-10-14T18:20:49Z",
    "closed_at": "2020-10-14T21:21:27Z",
    "labels": [
      "question",
      ":heavy_check_mark: Resolution: By Design",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/26898",
    "body": "In Blazor, if I create a button and run this when the form is submitted, JSRuntime works.\r\n\r\n    await jsRuntime.InvokeVoidAsync(\"eval\", \"document.cookie = ''\");\r\n    await signInManager.SignInAsync(user, false, null).ConfigureAwait(false);\r\n\r\nBUT... if I move the jsRuntime line into the Identity processing chain, in this case, in a class overriding CookieAuthenticationHandler, then it throws this error.\r\n\r\n> System.InvalidOperationException: 'JavaScript interop calls cannot be issued at this time. This is because the component is being statically rendered. When prerendering is enabled, JavaScript interop calls can only be performed during the OnAfterRenderAsync lifecycle method.'\r\n\r\nFirst, the error message is wrong because the page is fully rendered. Second, how can I make it work?",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/26898/comments",
    "author": "mysteryx93",
    "comments": [
      {
        "user": "Pilchie",
        "created_at": "2020-10-14T18:48:13Z",
        "body": "Tagging @HaoK and @javiercn for the identity part."
      },
      {
        "user": "javiercn",
        "created_at": "2020-10-14T18:55:41Z",
        "body": "@mysteryx93 thanks for contacting us.\r\n\r\n`IJSRuntime` is not designed to work with the HTTP pipeline in ASP.NET Core. You are trying to execute JS in the context of an HTTP request which is not possible.\r\n\r\nIdentity and Identity UI are designed to work in an HTTP Based context, trying to use them outside of that context is not supported. While individual components might \"work\" we don't recommend their usage outside of a Request/Response pipeline (like in Blazor case).\r\n\r\nThis is not something we plan to change in the future. Our recommendation is to leave the authentication part of the application as a classic request/response web application and rely on redirects for setting up the auth context for the blazor application."
      },
      {
        "user": "mysteryx93",
        "created_at": "2020-10-14T19:46:12Z",
        "body": "Yet I'm so close to making it work. If I can't run IJSRuntime from the HTTP pipeline, is there a way to pull the cookie value out of the HTTP pipeline to access it from the page afterwards? A shared service should be able to achieve that, although it wouldn't be pretty?\r\n\r\nA class registered as Scoped won't be shared between these 2 places... so it won't be that simple."
      },
      {
        "user": "javiercn",
        "created_at": "2020-10-14T19:51:23Z",
        "body": "@mysteryx93 Unfortunately, there is no straightforward answer we can give you for your problem. While we try our best to help everyone, we don't have the resources to address issues around unsupported scenarios. We suggest posting your question to StackOverflow to try and get help"
      }
    ]
  },
  {
    "number": 26599,
    "title": "[Blazor] Component provided as parameter to another component, shortly component wrapper",
    "created_at": "2020-10-05T02:22:20Z",
    "closed_at": "2020-10-06T02:48:31Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/26599",
    "body": "Hello,\r\n\r\nFramework is missing feature to pass component to another component as parameter.\r\n\r\nIf I have one parent component and to child components and I want to call parent with selected child component I can't do now.\r\n\r\nFor example we have modal form and want to display different components inside modal component, e.g. message, error, confirm and etc.\r\n\r\nIf it is possible please provide minimal sample or consider to add this basic feature to framework.\r\n\r\nThank you.",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/26599/comments",
    "author": "Lupusa87",
    "comments": [
      {
        "user": "mrpmorris",
        "created_at": "2020-10-05T07:44:02Z",
        "body": "This is because setting parameters happens before rendering, and child components do not exist until after the parent has rendered.\r\n\r\nTry making you parameter type `Func <T>` instead of `T`. As long as you only access it after a Render (eg user clicks something).\r\n\r\nHowever, having said that, it's still better to have your child components expose an `EventCallback<T>` that the parent subscribes to that is triggered by the child when selected."
      },
      {
        "user": "javiercn",
        "created_at": "2020-10-05T13:23:12Z",
        "body": "@Lupusa87 thanks for contacting us.\r\n\r\n@mrpmorris answer is correct. You can't get a hold to child components until the app has rendered and it is best if you use an EventCallback to notify the parent and do something with the component."
      },
      {
        "user": "Lupusa87",
        "created_at": "2020-10-05T14:57:45Z",
        "body": "I see I did not expained well.\r\n\r\nI am talking about taking whole component and passing it as parameter to another component.\r\n\r\nLet's imagine modal component which is displaying in one case one component and in another case another component.\r\n\r\nI do not talk about renderfragment or anything else.\r\n\r\nI need component wrapper.\r\n\r\nThere should be way to render component inside another component through setting parameter.\r\n\r\nIt should be easy, parent component receiving another component as parameter will add it to rendertree.\r\n\r\n@javiercn @SteveSandersonMS @danroth27 "
      },
      {
        "user": "javiercn",
        "created_at": "2020-10-05T15:16:44Z",
        "body": "@Lupusa87 thanks for the additional details.\r\n\r\nIf you are asking about \"holding on\" to a \"component instance\", passing that as a parameter to some other component, and \"somehow\" inside that component, having it render the \"component instance\" passed as a parameter, that's not something we support and it's not something we'll ever support.\r\n\r\nIn the Blazor model, the framework is in charge of the lifetime of the component, what you propose would break the Blazor rendering model in a very bad way.\r\n\r\nThe best you can do is pass the component type to your modal as T and pass in any additional parameter to the T component instance."
      },
      {
        "user": "SteveSandersonMS",
        "created_at": "2020-10-05T15:17:41Z",
        "body": "@Lupusa87 I think I understand what you're asking for. It sounds like you want to instantiate your own component objects and then render them.\r\n\r\nIf that's the case, this is deliberately not how the rendering system works (not only in Blazor, but also in other diff-based frameworks like React). When a component renders, it provides a *description* of the other components it wants to render inside itself, not the actual component instances themselves. This is how we can be sure that the framework is responsible for the whole lifecycle of components: it chooses when to create them, when lifecycle events like dependency injection and `OnInitialized` etc fire, when to reuse them, and when ultimately to destroy them. It's also how we can guarantee that component instances are only used in one place. If the rendering system accepted existing component instances, it would not be in control over their lifecycle.\r\n\r\nSo, instead of thinking about passing component instances around, you should think at one further level of abstraction and pass around descriptors of what you want. This can be either:\r\n\r\n * Some data from your domain model. Your components can use this data to decide what UI to render.\r\n * Actual descriptors of render output, which is what a `RenderFragment` is. This is basically why `RenderFragment` exists as a concept.\r\n\r\nI know there might be cases where it feels like it would be convenient to \"new\" up a component instance but it would complicate so many other aspects of the rendering pipeline and prevent us from offering the safety guarantees we do offer today. And again for clarification, this is not a unique thing about Blazor - the same applies in React too, for example.\r\n\r\nAs far as I'm aware there shouldn't be any scenarios blocked by this, because `RenderFragment` provides what you need. But if you're unsure how to implement a particular thing please let us know :)"
      },
      {
        "user": "SteveSandersonMS",
        "created_at": "2020-10-05T15:18:02Z",
        "body": "@javiercn Ah, looks like we answered at the same time. Glad our answers were consistent!"
      },
      {
        "user": "Lupusa87",
        "created_at": "2020-10-06T02:48:31Z",
        "body": "Thank you, RenderFragment seems to solve my issue."
      }
    ]
  },
  {
    "number": 25640,
    "title": "Can not use Component references as a Cascading parameters.",
    "created_at": "2020-09-05T02:32:04Z",
    "closed_at": "2020-09-07T14:49:46Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/25640",
    "body": "## Describe the bug\r\n\r\n​\tI am going to implement a Toast function in my Blazor WASM application, I created two Components named as \"ToastComponent\" and \"ToastContainerComponent\", and the ToastContainerComponent provided a Method to pop a new Toast in itself.\r\n\r\n​\tI added the the ToastContainerComponent to DesktopLayout component and hope to catch the reference of ToastContainerComponent and make it as a Cascading parameter, my codes are as below, but it doesn't work, because logs told me that @ref command will be executed after the DesktopLayout component is rendered, so the ToastContainerComponent is transmitted as a Cascading parameter before it's assignmented a reference. So that the cascading parameter of DesktopLayout's Child component are always Null.\r\n\r\n### Code\r\n\r\n#### ComponentContainerComponent.razor\r\n\r\n```\r\n@inject IJSRuntime jsRuntime\r\n\r\n<div class=\"position-fixed p-3\">\r\n\t<ToastComponent AutoHide=\"false\" Icon=\"Icons.Information\" />\r\n    <ToastComponent AutoHide=\"false\" Icon=\"Icons.Question\" />\r\n    <ToastComponent AutoHide=\"false\" Icon=\"Icons.Warning\" />\r\n    <ToastComponent AutoHide=\"false\" Icon=\"Icons.Error\" />\r\n    \r\n    @foreach (var toast in this.ToastSet)\r\n    {\r\n        @toast\r\n    }\r\n</div>\r\n\r\n@code{\r\n    protected ISet<ToastComponent> ToastSet { get; set; } = new HashSet<ToastComponent>();\r\n\r\n    public async Task PopToastAsync(string title, string message, Icons icon, bool autoHide = true, int hideDelay = 3000)\r\n    {\r\n    \tvar toast = new ToastComponent()\r\n        {\r\n        \tTitle = title,\r\n            Message = message,\r\n            Icon = icon,\r\n            AutoHide = autoHide,\r\n            HideDelay = hideDelay,\r\n        };\r\n        this.ToastSet.Add(toast);\r\n\r\n\t\tawait this.jsRuntime.InvokeVoidAsync(\"toasts.popToast\", toast.Id, autoHide, hideDelay);\r\n\t}\r\n}\r\n```\r\n\r\n#### ComponentComponent.razor\r\n\r\n```\r\n<div id=\"@Id\" class=\"toast show\" role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\" style=\"pointer-events:auto;\">\r\n    <div class=\"toast-header\">\r\n        @switch (icon)\r\n        {\r\n            case Icons.Information:\r\n                <span class=\"fas fa-info-circle text-success mr-2\" style=\"font-size:20px;\"></span>\r\n                break;\r\n            case Icons.Question:\r\n                <span class=\"fas fa-question-circle text-primary mr-2\" style=\"font-size:20px;\"></span>\r\n                break;\r\n            case Icons.Warning:\r\n                <span class=\"fas fa-exclamation-circle text-warning mr-2\" style=\"font-size:20px;\"></span>\r\n                break;\r\n            case Icons.Error:\r\n                <span class=\"fas fa-times-circle text-danger mr-2\" style=\"font-size:20px;\"></span>\r\n                break;\r\n            default:\r\n            case Icons.HackSystem:\r\n                <img src=\"/LogoImageSmall.png\" class=\"rounded mr-2\" />\r\n                break;\r\n        }\r\n        <strong class=\"mr-auto\">@title</strong>\r\n        <small class=\"text-muted\">@dateTime.ToLongTimeString()</small>\r\n        <button type=\"button\" class=\"ml-2 mb-1 close\" data-dismiss=\"toast\" aria-label=\"Close\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class=\"toast-body\">\r\n        @message\r\n    </div>\r\n</div>\r\n\r\n@code{\r\n    private DateTime dateTime = DateTime.Now;\r\n    private string title = \"Hack System\";\r\n    private string message = \"Hack System Toast Message.\";\r\n    private Icons icon;\r\n    private bool autoHide = true;\r\n    private int hideDelay = 3000;\r\n\r\n    public string Id { get; protected set; } = Guid.NewGuid().ToString(\"N\");\r\n\r\n    [Parameter]\r\n    public string Title { get => this.title; set => this.title = value; }\r\n\r\n    [Parameter]\r\n    public string Message { get => this.message; set => this.message = value; }\r\n\r\n    [Parameter]\r\n    public Icons Icon { get => this.icon; set => this.icon = value; }\r\n\r\n    [Parameter]\r\n    public bool AutoHide { get => this.autoHide; set => this.autoHide = value; }\r\n\r\n    [Parameter]\r\n    public int HideDelay { get => this.hideDelay; set => this.hideDelay = value; }\r\n}\r\n```\r\n\r\n#### MainLayout.razor\r\n\r\n```\r\n@inherits LayoutComponentBase\r\n\r\n@inject ILogger<DesktopLayout> logger\r\n\r\n<div class=\"container-fluid p-0\">\r\n    <UserStateComponent />\r\n    <ToastContainerComponent @ref=\"ToastContainer\" />\r\n    <CascadingValue Value=@ToastContainer>\r\n        <CascadingValue Value=@TestCascadingValue>\r\n            @Body\r\n        </CascadingValue>\r\n    </CascadingValue>\r\n</div>\r\n\r\n@code{\r\n    private ToastContainerComponent container;\r\n    public ToastContainerComponent ToastContainer\r\n    {\r\n        get\r\n        {\r\n            this.logger.LogWarning(\"Get Value of ToastContainer from DesktopLayout.\");\r\n            return container;\r\n        }\r\n        set\r\n        {\r\n            this.logger.LogWarning(\"Get Value of ToastContainer from DesktopLayout.\");\r\n            this.container = value;\r\n        }\r\n    }\r\n    public string TestCascadingValue { get; set; } = \"I am a cascading parameter of DesktopLayout for testing.\";\r\n}\r\n```\r\n\r\n#### DesktopComponent.razor\r\n\r\n```\r\n@page \"/Desktop\"\r\n@layout DesktopLayout\r\n@attribute [Authorize(Roles = CommonSense.Roles.HackerRole)]\r\n\r\n@inject ILogger<DesktopComponent> logger\r\n\r\n<button class=\"btn btn-primary\" @onclick=\"PopToast\">Pop Toast</button>\r\n<p>@TestCascadingValue</p>\r\n\r\n@code {\r\n    [CascadingParameter]\r\n    private ToastContainerComponent ToastContainer { get; set; }\r\n\r\n    [CascadingParameter]\r\n    private string TestCascadingValue { get; set; }\r\n    \r\n\tprivate async Task PopToast()\r\n\t{\r\n     \t// NullReferenceException thrown here.\r\n\t\tawait this.ToastContainer.PopToastAsync(\"Test\", \"Test Toast\", Icons.Warning, true, 3000);\r\n\t}\r\n}\r\n```\r\n\r\n#### Result\r\n\r\n​\tDesktop component can display text of TestCascadingValue normally, but once I click PopToast button a NullReferenceException will be thrown, because value of ToastContainer is null.\r\n\r\n#### Logs\r\n\r\n​\tCode prints logs as below:\r\n\r\n> Get Value of ToastContainer from DesktopLayout.\r\n>\r\n> Get Value of ToastContainer from DesktopLayout.\r\n\r\n#### Issue\r\n\r\n​    Do I have a better way to use a Componet as a Cascading parameter?\r\n\r\n### Further technical details\r\n\r\n- ASP.NET Core version : .Net 5 Preview 8 Blazor WebAssembly\r\n- Visual Studio 2019 16.8.0 Preview 2.1",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/25640/comments",
    "author": "CuteLeon",
    "comments": [
      {
        "user": "CuteLeon",
        "created_at": "2020-09-05T02:44:24Z",
        "body": "Fine, I found anothor way to \"Lazy\" the reference of ToastContainer like this:\r\n#### MainLayout.razor\r\n\r\n```\r\n@inherits LayoutComponentBase\r\n@inject ILogger<DesktopLayout> logger\r\n\r\n<div class=\"container-fluid p-0\">\r\n    <ToastContainerComponent @ref=\"ToastContainer\" />\r\n    <CascadingValue Value=@GetToastContainer>\r\n    \t@Body\r\n    </CascadingValue>\r\n</div>\r\n\r\n@code{\r\n    private Func<ToastContainerComponent> GetToastContainer { get; set; }\r\n    public ToastContainerComponent ToastContainer { get; set; }\r\n\r\n    protected override void OnInitialized()\r\n    {\r\n        base.OnInitialized();\r\n        this.GetToastContainer = new Func<ToastContainerComponent>(() => this.ToastContainer);\r\n    }\r\n}\r\n```\r\n\r\n#### DesktopComponent.razor\r\n\r\n```\r\n@page \"/Desktop\"\r\n@layout DesktopLayout\r\n@attribute [Authorize(Roles = CommonSense.Roles.HackerRole)]\r\n\r\n@inject ILogger<DesktopComponent> logger\r\n\r\n<button class=\"btn btn-primary\" @onclick=\"PopToast\">Pop Toast</button>\r\n\r\n@code {\r\n    [CascadingParameter]\r\n    private Func<ToastContainerComponent> GetToastContainer { get; set; }\r\n    \r\n\tprivate async Task PopToast()\r\n\t{\r\n     \t// NullReferenceException thrown here.\r\n\t\tawait this.GetToastContainer().PopToastAsync(\"Test\", \"Test Toast\", Icons.Warning, true, 3000);\r\n\t}\r\n}\r\n```\r\n\r\nBut I still want to know what you recommend."
      },
      {
        "user": "javiercn",
        "created_at": "2020-09-07T14:46:44Z",
        "body": "@CuteLeon thanks for contacting us.\r\n\r\nYour lazy load solution is what we recommend since that makes your code independent of the order in which rendering happens."
      },
      {
        "user": "CuteLeon",
        "created_at": "2020-09-07T14:49:46Z",
        "body": "Hi  @javiercn :\r\n    Thanks for your reply!\r\n    Hope this will help others."
      }
    ]
  },
  {
    "number": 24873,
    "title": "[feature request]Compoent tree iterator",
    "created_at": "2020-08-13T13:40:55Z",
    "closed_at": "2020-08-13T23:03:24Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/24873",
    "body": "Compoent tree iterator. ComponentBase provider api like **GetChildBy<T>(string id)**, **GetChildrenBy<T>()**, GetChildAt(int index)**.\r\n\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/24873/comments",
    "author": "srxqds",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2020-08-13T16:46:51Z",
        "body": "@srxqds thanks for contacting us.\r\n\r\nThis is not a functionality we plan to offer at the time, you can use Component reference to access a given rendered component instance from a parent component."
      },
      {
        "user": "srxqds",
        "created_at": "2020-08-13T23:03:24Z",
        "body": "OK"
      }
    ]
  },
  {
    "number": 24054,
    "title": "[Blazor] execute check at high level to redirect to another page",
    "created_at": "2020-07-17T12:03:22Z",
    "closed_at": "2020-07-17T14:08:39Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/24054",
    "body": "hello guys, i have some trouble with my blazor webassembly webapp when the user decide to refresh the page (with f5 for example).\r\n\r\nI can't maintain a stable state concerning my data so if its happen i prefer disconnect him and and redirect him to the login page.\r\n\r\nim able to suscribe to the onload js event and call method of one to my component to disconnect the user, it work. but in this method, if i try to redirect to the login page with the NavigationManager its not work (it stay on the current page, no redirection)\r\n\r\nI try another way, in my layout on the OnInitialized method i check if my user is not connected and if im not on the login page, if its the case i redirect to the login page. It works, but the problem is the current page will run her lifecycle with inconsistend data so it will sometimes crash. So there is a way to do that at another level to be sure the current page will not be loaded ? \r\n\r\nI wait for yours suggestions, don't hesitate if you have better idea to achieve what i want !\r\n\r\nthanks !",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/24054/comments",
    "author": "julienGrd",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2020-07-17T12:58:02Z",
        "body": "@julienGrd thanks for contacting us.\r\n\r\nI would suggest you do this directly within the App.razor component. Wouldn't that be simpler for you than having to deal with the layout and other concerns?"
      },
      {
        "user": "julienGrd",
        "created_at": "2020-07-17T13:56:22Z",
        "body": "> @julienGrd thanks for contacting us.\r\n> \r\n> I would suggest you do this directly within the App.razor component. Wouldn't that be simpler for you than having to deal with the layout and other concerns?\r\n\r\nYes it can be ! how i can do that ? for me the app.razor contains only the main point of the app without code.\r\n\r\nthis is my actual App.razor\r\n````\r\n<Router AppAssembly=\"typeof(Program).Assembly\">\r\n    <Found Context=\"routeData\">\r\n        <RouteView RouteData=\"routeData\" DefaultLayout=\"typeof(Components.Layouts.MainLayout)\" />\r\n    </Found>\r\n    <NotFound>\r\n        <LayoutView Layout=\"@typeof(Components.Layouts.MainLayout)\">\r\n            <Is.Geckos.Blazor.Client.Components.Pages.Main.PageFallBack />\r\n        </LayoutView>\r\n        \r\n    </NotFound>\r\n</Router>\r\n````"
      },
      {
        "user": "javiercn",
        "created_at": "2020-07-17T13:59:16Z",
        "body": "@julienGrd define a `@code` block, inject NavigationManager, check the Url property on it within `OnInitialize` and trigger the navigation?"
      },
      {
        "user": "julienGrd",
        "created_at": "2020-07-17T14:08:39Z",
        "body": "> @julienGrd define a `@code` block, inject NavigationManager, check the Url property on it within `OnInitialize` and trigger the navigation?\r\n\r\nsometimes im really dumb, i was thinking App.razor was kind of special component without code, but it seem to be a classic component with all lifecycle.\r\n\r\nusing the initialized of this component make the job perfectly, thanks for your help, the subject is close"
      }
    ]
  },
  {
    "number": 23687,
    "title": "Blazor doesn't detect state-change when state is changed in between async calls, requiring manual StateHasChanged()",
    "created_at": "2020-07-06T03:13:20Z",
    "closed_at": "2020-07-08T08:54:39Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/23687",
    "body": "### Describe the bug\r\nI have a simple div element inside a component, which has a class set conditionally based on a boolean property on the component:\r\n```\r\n<div class='spinner-container @(!IsLoading ? \"d-none\" : \"\")'>\r\n    <div class=\"spinner-border text-info\" role=\"status\">\r\n        <span class=\"sr-only\">Loading...</span>\r\n    </div>\r\n</div>\r\n```\r\n\r\nThe code looks like this:\r\n\r\n```\r\nbool IsLoading { get; set; }\r\n\r\nasync Task HandleFormSubmit()\r\n{\r\n    try\r\n    {\r\n        await Task.Delay(10);\r\n        IsLoading = true;\r\n        await Task.Delay(5000);\r\n    }\r\n    finally\r\n    {\r\n        IsLoading = false;\r\n    }\r\n}\r\n```\r\n\r\nWhen HandleFormSubmit() is called (which is via an `@onsubmit=\"HandleFormSubmit\"` on a `form` element), the div's class doesn't update to reflect the `IsLoading` state change. If I put an explicit `StateHasChanged()` after `IsLoading = true`, then it does update (but that's a bit... crap).\r\n\r\nThe more interesting bit is, if I move `IsLoading = true;` to before the first `Task.Delay`, Blazor somehow detects the state change and the div's class is updated.\r\n\r\n### To Reproduce\r\nThe above should help reproduce this, but if you can't, then I'll make some time to create a repo for this (sorry, middle of work and a bit busy currently, but didn't want to just ignore/not report this as it seems quite important).\r\n\r\n### Further technical details\r\n- Blazor (Web Assembly) version 3.2\r\n- Include the output of `dotnet --info`\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.301\r\n Commit:    7feb845744\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.301\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.5\r\n  Commit:  65cd789777\r\n\r\n.NET Core SDKs installed:\r\n  2.1.400 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.401 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.504 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.507 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.701 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.101 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.301 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.19 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.19 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.19 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n```",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/23687/comments",
    "author": "SaebAmini",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2020-07-06T13:22:57Z",
        "body": "@SaebAmini thanks for contacting us.\r\n\r\nBlazor only triggers a render within an event handler in two situations. After all the synchronous code has completed and after all the asynchronous code has completed. It can't do better because it doesn't have access to the implementation of the method, only to the task that is returned by the handler.\r\n\r\nTo achieve what you want, I think you just need to setup `IsLoading = true` before the JS interop call, since at that point a render will be triggered. \r\n\r\nIn other situations you need to call state has changed."
      },
      {
        "user": "SaebAmini",
        "created_at": "2020-07-06T22:38:51Z",
        "body": "Thanks for your quick reply @javiercn!\r\n\r\nThis is very interesting and a good gotcha to be aware of.\r\n\r\nSo to confirm, it's because the state-change is happening _in between_ the two async calls, and because the second async call (`Task.Delay`) takes a while to complete, Blazor doesn't detect and trigger a re-render, because you're saying once it encounters the first async call, then _all_ subsequent async calls need to be completed in the method for detection and re-render to happen?\r\n\r\n> Blazor only triggers a render within an event handler in two situations. After all the synchronous code has completed and after all the asynchronous code has completed.\r\n\r\nDo you mean all the synchronous code _before_ the first async call? confirming because there are still plenty of other bits of synchronous code left, even if I move `IsLoading = true` to the top, although they would be synchronous code in async code callbacks."
      },
      {
        "user": "javiercn",
        "created_at": "2020-07-07T09:47:01Z",
        "body": "@SaebAmini It works more or less like this. Your method gets conceptually transformed to something more or less like this:\r\n\r\n```csharp\r\nreturn Task.Delay(10)\r\n  .ContinueWith(t => { IsLoading = true; /* here */ return Task.Delay(5000); })\r\n  .ContinueWith(t => IsLoading = false)\r\n```\r\n\r\nBlazor only receives the returned task from this method. All we do is check whether the task completed (ran synchronously) and trigger a render or whether the task did not complete yet (it is running some async code). In this second case we do something like\r\n```csharp\r\nhandlerTask.ContinueWith(t => StateHasChanged())\r\n```\r\n\r\nWhich triggers the other render after the async work completes. The point is that we can know when the async work starts and when it ends, but there is no way for us to insert StateHasChanged calls at the point marked by the comment above."
      },
      {
        "user": "SaebAmini",
        "created_at": "2020-07-08T08:54:17Z",
        "body": "That makes sense. Thanks a lot for explaining @javiercn"
      }
    ]
  },
  {
    "number": 23362,
    "title": "Make StateHasChanged and InvokeAsync public instead of protected methods in blazor",
    "created_at": "2020-06-25T20:42:26Z",
    "closed_at": "2020-06-29T14:14:38Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/23362",
    "body": "One good purpose of making them public is an extension method can be called that can call either StateHasChanged or even InvokeAsync.  Also, it will allow another scenario where if you have cascading values what you are cascading is yourself, then the child components can call the invokeasync.  There are many cases I found when a child component will run something on a timer but when it needs to change state, the parent needs to change state too.\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/23362/comments",
    "author": "musictopia2",
    "comments": [
      {
        "user": "mrpmorris",
        "created_at": "2020-06-26T07:42:41Z",
        "body": "You don't need to call InvokeAsync on another component. Code executed via that is synchronised across all components.\r\n\r\nAs for updating the parent. The component should expose an EventCallback that the parent can subscribe to. It's better to tell an interested party what happened (fire an event) than to tell it what to do about it (render yourself) "
      },
      {
        "user": "musictopia2",
        "created_at": "2020-06-26T13:27:57Z",
        "body": "There are cases where I want it to do it by itself.  Otherwise, every time in the parent, I have to have extra code for it.  Also, I have found many cases where it was not synchronised across all components.  I had a case where I had the parent that called statehaschanged but it did not fire on all its children unfortunately."
      },
      {
        "user": "mrpmorris",
        "created_at": "2020-06-26T23:09:53Z",
        "body": "A parent won't trigger a render on its children unless it passes parameters into them.\r\n\r\nA child won't cause a render of a parent unless the parent subscribes to an EventCallback that is triggered. \r\n\r\nCould you explain what you are trying to achieve? There might be a better way. "
      },
      {
        "user": "musictopia2",
        "created_at": "2020-06-27T01:35:15Z",
        "body": "What I am trying to achieve is something like this.\r\nI have a cross platform library that does lots of processes.  What should happen is if one of them shows the StateHasChanged, then when the cross platform calls the method, then for every component, it would call its statehaschanged.  I know in xaml in wpf, if there was a notifypropertychanged, then it would just change the property.  However, here, since we don't have that, ideally what should happen is the cross platform has an action delegate that the parent component subscribes to.  Then when the cross platform invokes statehaschanged, it should show it for all children.  If they at least had the 2 methods as public and not protected, then i can use cascading parameters."
      },
      {
        "user": "mrpmorris",
        "created_at": "2020-06-27T09:09:27Z",
        "body": "You are describing state management. Your components should subscribe to the changes in the state they consume and decide if they need to refresh."
      },
      {
        "user": "javiercn",
        "created_at": "2020-06-29T14:14:34Z",
        "body": "@musictopia2 thanks for contacting us.\r\n\r\nThis is not a direction we plan to take, these are breaking changes that we don't plan to make."
      }
    ]
  },
  {
    "number": 23182,
    "title": "How to expose multiple-argument event with EventCallback?",
    "created_at": "2020-06-20T03:09:11Z",
    "closed_at": "2020-06-22T09:48:27Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/23182",
    "body": "The current `EventCallback` only allows a single argument via `EventCallback<TArgs>`. Sometimes, I need to expose events with some arguments. For example, `EventCallback<MouseEventArgs,Foo>`.\r\n\r\nAs I am new to Blazor, it maybe my ignorance. Is there such a feature available? Or should it be the next feature that I can request? \r\n\r\n\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/23182/comments",
    "author": "pstricks-fans",
    "comments": [
      {
        "user": "mrpmorris",
        "created_at": "2020-06-21T13:00:03Z",
        "body": "The standard is to create a class that holds all of the values you wish to pass on. Just like the. NET standard EventArgs approach. "
      },
      {
        "user": "javiercn",
        "created_at": "2020-06-22T09:48:27Z",
        "body": "@pstricks-fans thanks for contacting us. @mrpmorris answer is correct.\r\n\r\nCreate a type for your event handler and add the properties there."
      }
    ]
  },
  {
    "number": 23087,
    "title": "Controller's base `Content` method has no overload for specifying a status code?",
    "created_at": "2020-06-18T14:43:25Z",
    "closed_at": "2020-06-18T15:02:06Z",
    "labels": [
      "question",
      "area-mvc",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/23087",
    "body": "If we ever wanted to return manually a `ContentResult` object, we could do so, and set our desired StatusCode by setting the `StatusCode` property of the object, but when using the `Content` API inherited from our `BaseController`/`Controller` class, we can't do that.\r\n\r\nWhy? Is this intentional?",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/23087/comments",
    "author": "kikaragyozov",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2020-06-18T15:01:44Z",
        "body": "@SpiritBob thanks for contacting us.\r\n\r\nMethods on Controller and ControllerBase are meant to be helpers that cover common scenarios. For `Content` the most common scenario is to return 200. We haven't received requests before for setting the status code when using `Content` and we don't want to clutter Controller and ControllerBase with more methods than they already have.\r\n\r\nIt is very unlikely we add an additional overload unless we hear more demand for it from other customers for the reasons stated above. If you need/want this, I recommend you create your own base class and create a helper method in there or alternatively set the status code after calling the method."
      }
    ]
  },
  {
    "number": 22986,
    "title": "Blazor App HttpClient Property Credentials is not supported.",
    "created_at": "2020-06-16T02:36:02Z",
    "closed_at": "2020-06-16T11:33:43Z",
    "labels": [
      "question",
      "area-blazor",
      "feature-blazor-wasm",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/22986",
    "body": "Sets NetworkCredentials for HttpClient in a Blazor WebAssembly app will throw exception:\r\n```\r\nblazor.webassembly.js:1 crit: Microsoft.AspNetCore.Components.WebAssembly.Rendering.WebAssemblyRenderer[100]\r\n      Unhandled exception rendering component: Property Credentials is not supported.\r\nSystem.PlatformNotSupportedException: Property Credentials is not supported.\r\n  at System.Net.Http.HttpClientHandler.set_Credentials (System.Net.ICredentials value) <0x37096f0 + 0x0000c> in <filename unknown>:0 \r\n```\r\nSteps to reproduce\r\n- Create a new Blazor WebAssembly App targets .Net Core 3.1 (all package versions are 3.2.0)\r\n- Edit method IncrementCount in Counter.razor:\r\n```\r\nprivate void IncrementCount()\r\n    {\r\n        currentCount++;\r\n\r\n        HttpClientHandler sHandler = new HttpClientHandler();\r\n        sHandler.Credentials = new System.Net.NetworkCredential(\"username\", \"password\", null);\r\n        HttpClient client = new HttpClient(sHandler);\r\n    }\r\n```\r\n- Run blazor, navigate to Counter, press button, error is shown in console.\r\n\r\nThat snippet code works fine in blazor server, or any asp net/net core website, or even in console app. \r\nJudging from exception, seems it's intended. Is there any way I can set credentials for HttpClient which is working for Blazor WebAssembly app and all other applications?",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/22986/comments",
    "author": "sassy224",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2020-06-16T10:05:12Z",
        "body": "@sassy224 thanks for contacting us.\r\n\r\nIt is likely that is not supported on the underlying WasmHttpHandler since that's not something you can achieve with the `fetch` APIs.\r\n\r\n/cc:@pranavkm in case he wants to add anything"
      }
    ]
  },
  {
    "number": 22953,
    "title": "TypeScript + Blazor = strange error messages?",
    "created_at": "2020-06-15T13:39:15Z",
    "closed_at": "2020-06-15T14:15:41Z",
    "labels": [
      "question",
      "External",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/22953",
    "body": "\r\n### Describe the bug\r\nI am trying to make TypeScript to work with Blazor, but there is constantly issues with the namespace, and problems around the visibility and compiler.\r\n\r\n### To Reproduce\r\n- Create a blazor project.\r\n- Create two .ts files inside the main wwwroot folder.\r\n- Try to import one to another, and call a function from the last one from the blazor.\r\n\r\nfile MainLayout.razor\r\n```\r\n@inherits LayoutComponentBase\r\n@inject IJSRuntime jSRuntime;\r\n\r\n<div id=\"masterViewDiv\" class=\"cesium-viewer\"></div>\r\n<button @onclick=\"onClick\">sfsdfsaf</button>\r\n<style>\r\n    .cesium-viewer {\r\n        height: 100vh;\r\n        width: 100vw;\r\n        z-index: 1;\r\n        top: 0px;\r\n        left: 0px;\r\n    }\r\n</style>\r\n\r\n@code{\r\n    override protected void OnAfterRender( bool firstRender )\r\n    {\r\n        base.OnAfterRender( firstRender );\r\n\r\n    }\r\n    public void onClick()\r\n    {\r\n        jSRuntime.InvokeVoidAsync( \"test\" );\r\n    }\r\n}\r\n```\r\nfile master.ts\r\n```\r\nmodule master\r\n{\r\n    export function test(): void\r\n    {\r\n        window.alert( \"test\" );\r\n    }\r\n}\r\n\r\n```\r\nfile one.ts\r\n```\r\nimport * as Master from \"master\";\r\n\r\nthis.window[ \"test\" ] = Master .test;\r\n\r\n```\r\n\r\n- and is there some examples/guides which to be followed in order to make TS works with Blazor WebASM ?\r\n\r\n\r\n### Exceptions (if any)\r\n- different types.\r\n\r\n### Further technical details\r\n- ASP.NET Core version : 3.2\r\n- Include the output of `dotnet --info`\r\n- The IDE - VS Pro preview - the latest - automatic updating.\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/22953/comments",
    "author": "BararDiHoumes",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2020-06-15T14:14:05Z",
        "body": "@BararDiHoumes thanks for contacting us.\r\n\r\nThere's nothing specific about making typescript work with Blazor. As long as typescript compiles the files to js and that you reference those from within index.html or _Host.cshtml it should be fine.\r\n\r\nI would check that you can make it work in a plain html file and then move that working solution to Blazor, but there should be no difference."
      }
    ]
  },
  {
    "number": 22932,
    "title": "Blazor Webassembly Dispose called before OnInitializedAsync completes",
    "created_at": "2020-06-14T07:35:30Z",
    "closed_at": "2020-06-15T11:34:21Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/22932",
    "body": "I have a component that \r\n\r\n```\r\nOnInitializedAsync \r\n   await  Task A\r\n   await  Task B\r\n\r\nDispose\r\n\r\n```\r\nWhat I found is the order of calls can be \r\n```\r\n   Task A\r\n   Dispose\r\n   Task B\r\n\r\n```\r\nThis happens because one of my other component will refresh the page. Is that intended?\r\n\r\n3.20",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/22932/comments",
    "author": "imtrobin",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2020-06-15T11:34:21Z",
        "body": "@imtrobin thanks for contacting us.\r\n\r\nThat is perfectly normal and can happen if the component is removed before the async work completes. You should use a cancellation token source and trigger it on dispose to abort any further work."
      }
    ]
  },
  {
    "number": 22852,
    "title": "Raise event when browser is resized.",
    "created_at": "2020-06-11T23:13:26Z",
    "closed_at": "2020-06-15T13:05:21Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/22852",
    "body": "There can be cases where when the browser is resized, then needs to raise an event that somebody can run the code StateHasChanged.\r\nBecause there can be cases where when browser is resized, then the font sizes of something may have to be different.  Its also possible that positionings may change based on the new browser size.  Otherwise, a person still has to use javascript interop since i know that javascript can listen for events for browser size has changed.\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/22852/comments",
    "author": "musictopia2",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2020-06-12T09:25:35Z",
        "body": "@musictopia2 thanks for contacting us.\r\n\r\nThis is not something we currently plan to do in the near future as it can be achieved through JS interop. \r\n\r\nIf you are asking for StateHasChanged to be called on all components when this happens, it is unlikely that we implement such feature. \r\n\r\nYou can write a class that does JS interop, receives a callback and triggers an event when such callback is invoked and allow your components to subscribe to that event when they care about browser size changes."
      }
    ]
  },
  {
    "number": 22208,
    "title": "Error when running blazor wasm in .Net 5.0",
    "created_at": "2020-05-26T05:51:59Z",
    "closed_at": "2020-05-26T10:19:01Z",
    "labels": [
      "question",
      "area-blazor",
      "feature-blazor-wasm",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/22208",
    "body": "I'm not sure if blazor wasm is currently supported in .Net 5.0 preview 4, in which case feel free to close this, but thought I would try it out, as I need some types which are not available in .Net Standard.\r\n\r\nWhen I converted my existing .Net STandard 2.1 blazor application to .Net 5.0 preview 4, it built fine, but when I ran it, I got this error: \r\n\r\n```\r\nblazor.webassembly.js:1 ﻿System.BadImageFormatException: Could not resolve field token 0x0400000c, \r\ndue to: Could not set up parent class, due to: Could not set up parent class, \r\ndue to: Could not set up parent class, due to: Could not load type of field 'Microsoft.JSInterop.JSRuntime:_cancellationRegistrations' (4) \r\ndue to: Could not resolve type with token 0100001c from typeref (expected class 'System.Threading.CancellationTokenRegistration' in assembly 'System.Runtime, Version=4.2.2.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')\r\nassembly:System.Runtime, Version=4.2.2.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a type:System.Threading.CancellationTokenRegistration member:(null)\r\nassembly:Microsoft.JSInterop.dll type:JSRuntime member:(null)\r\nassembly:Microsoft.JSInterop.dll type:JSInProcessRuntime member:(null)\r\nassembly:Microsoft.JSInterop.WebAssembly.dll type:WebAssemblyJSRuntime member:(null)\r\nassembly:Microsoft.AspNetCore.Components.WebAssembly.dll type:DefaultWebAssemblyJSRuntime member:(null)\r\n```",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/22208/comments",
    "author": "YairHalberstadt",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2020-05-26T10:18:46Z",
        "body": "@YairHalberstadt thanks for contacting us.\r\n\r\nBlazor WebAssembly is not currently supported in .NET 5.0. We are working on adding support now that the 3.2 release is out."
      }
    ]
  },
  {
    "number": 22044,
    "title": "How to override default RoleValidator",
    "created_at": "2020-05-20T18:28:56Z",
    "closed_at": "2020-05-27T20:38:31Z",
    "labels": [
      "question",
      "area-identity"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/22044",
    "body": "I trying to override the name validation duplication for the roles, here what I have\r\n\r\nStartup file\r\n\r\n```\r\n services.AddScoped<IRoleValidator<ApplicationRole>, \r\n                                                    WebIdp.Services.RoleValidator<ApplicationRole>>();\r\n\r\n services.AddIdentity<AplicationUser, ApplicationRole>(config =>\r\n                {\r\n                    config.SignIn.RequireConfirmedEmail = false;\r\n                    config.Password.RequiredUniqueChars = 0;\r\n\r\n                })\r\n                .AddRoles<ApplicationRole>()\r\n                .AddDefaultUI(UIFramework.Bootstrap4)\r\n                .AddEntityFrameworkStores<ApplicationDbContext>()\r\n                .AddDefaultTokenProviders()\r\n                .AddErrorDescriber<MultilanguageIdentityErrorDescriber>()\r\n                .AddRoleManager<ApplicationRoleManager>();\r\n```\r\nWhen I debug my code my validator works but when I start creating a new role then I have two validators the default and mine in the rolManager Validators property, then it does my validation but after mine it goes to the next validator and fail, since the manager is tryng to check all the validations that it has.\r\n\r\nI'm using Asp.net core 2.2\r\n\r\nDo I am missing some configuration?\r\n\r\nThanks!!\r\n\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/22044/comments",
    "author": "maykoestevez",
    "comments": [
      {
        "user": "HaoK",
        "created_at": "2020-05-27T19:10:01Z",
        "body": "I guess you might need to remove the existing Rolevalidator from DI in ConfigureServices.  TryAddRoleValidator I would think should have prevented it from registering, you can inspect the services collection in ConfigureServices and ensure only your RoleValidator is registered"
      },
      {
        "user": "maykoestevez",
        "created_at": "2020-05-27T20:00:01Z",
        "body": "I`m trying to add TryAddRoleValidator under AddIdentity, but it said IdentityBuilder' does not contain a definition for 'TryAddRoleValidator.\r\n\r\n\r\n```\r\n         services.AddScoped<IRoleValidator<ApplicationRole>, \r\n                          WebIdp.Services.RoleValidator<ApplicationRole>>();\r\n\r\n            services.AddIdentity<AplicationUser, ApplicationRole>(config =>\r\n                {\r\n                    config.SignIn.RequireConfirmedEmail = false;\r\n                    config.Password.RequiredUniqueChars = 0;\r\n\r\n                })\r\n                \r\n                .AddRoles<ApplicationRole>()\r\n                .AddDefaultUI(UIFramework.Bootstrap4)\r\n                .AddEntityFrameworkStores<ApplicationDbContext>()\r\n                .AddDefaultTokenProviders()\r\n                .AddErrorDescriber<MultilanguageIdentityErrorDescriber>()\r\n                .AddUserManager<ApplicationUserManager>()\r\n                .TryAddRoleValidator<ApplicationRole>()\r\n                .AddRoleManager<ApplicationRoleManager>();\r\n```\r\n\r\nDo I have to install something to use TryAddRoleValidator? I saw that tryAdd feature is available for dotnet 2.2 which is the version I`m using.\r\n\r\nEdit:\r\nI did not remove anything I just did not add the line where I add the custom role validator, but I added now \r\n\r\n"
      },
      {
        "user": "HaoK",
        "created_at": "2020-05-27T20:01:41Z",
        "body": "No what you had before should already work, I meant add the validator like normal before AddIdentity and that should prevent identity from adding the default one.  If that doesn't work, then try removing any service descriptors from the service collection that aren't your role validator"
      },
      {
        "user": "maykoestevez",
        "created_at": "2020-05-27T20:07:02Z",
        "body": "How do I remove those service descriptors? if there are any.\r\nEdit:\r\nI found something on google, is that what you mean?\r\n\r\n```\r\nvar serviceDescriptor = services.FirstOrDefault(descriptor => descriptor.ServiceType ==typeof(IService));\r\nservices.Remove(serviceDescriptor);\r\n```"
      },
      {
        "user": "maykoestevez",
        "created_at": "2020-05-27T20:37:28Z",
        "body": "Thanks @HaoK!!\r\n\r\nLike you mention I remove the default one just to keep my implementation.\r\n   ```\r\nservices.AddScoped<IRoleValidator<ApplicationRole>, ApplicationRoleValidator<ApplicationRole>>();\r\n\r\n            services.AddIdentity<AplicationUser, ApplicationRole>(config =>\r\n                {\r\n                    config.SignIn.RequireConfirmedEmail = false;\r\n                    config.Password.RequiredUniqueChars = 0;\r\n\r\n                })\r\n                \r\n                .AddRoles<ApplicationRole>()\r\n                .AddDefaultUI(UIFramework.Bootstrap4)\r\n                .AddEntityFrameworkStores<ApplicationDbContext>()\r\n                .AddDefaultTokenProviders()\r\n                .AddErrorDescriber<MultilanguageIdentityErrorDescriber>()\r\n                .AddUserManager<ApplicationUserManager>()\r\n                .AddRoleManager<ApplicationRoleManager>();\r\n\r\n                var defaultRoleValidator = services.FirstOrDefault(descriptor => descriptor.ImplementationType ==typeof(RoleValidator<ApplicationRole>));\r\n                services.Remove(defaultRoleValidator);\r\n```\r\n It looks like a work around but is working."
      }
    ]
  },
  {
    "number": 21944,
    "title": "Could IWebAssemblyHostEnvironment be an IHostEnvironment subtype?",
    "created_at": "2020-05-18T10:50:18Z",
    "closed_at": "2020-05-18T14:46:55Z",
    "labels": [
      "question",
      "area-blazor",
      "feature-blazor-wasm",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/21944",
    "body": "I'm trying to get the environment name in Blazor code which could be either Blazor Server or Blazor WebAssembly. At the moment, there isn't a common abstraction to do that.",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/21944/comments",
    "author": "gulbanana",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2020-05-18T11:28:59Z",
        "body": "@gulbanana thanks for contacting us.\r\n\r\nWe don't plan to do that as it would requiring us to take a dependency on additional assemblies, increasing size for little benefit.\r\n\r\nI would suggest/recommend that instead you create your own wrapping abstraction and use it across your code-base, prepopulating it based on data from the environment."
      },
      {
        "user": "gulbanana",
        "created_at": "2020-05-18T14:46:55Z",
        "body": "Unfortunately, that's hard to do because this product is a library to be used from either blazor server or blazor wasm. Keeping the size down seems like a good tradeoff, though."
      }
    ]
  },
  {
    "number": 21826,
    "title": "LoginPage as Razor Component in Blazor WebAssembly",
    "created_at": "2020-05-14T14:38:57Z",
    "closed_at": "2020-05-14T15:37:41Z",
    "labels": [
      "question",
      "area-blazor",
      "feature-blazor-wasm",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/21826",
    "body": "Hi! Is it possible to rewrite scaffolded LoginPage as Razor component and use SignInManager there to authorize user?\r\nNow opening Login page takes more time than usual Razor Comonent.  And needs more efforts to support because actually it's rendered on server side. Could you give some examples or ideas about rewriting Login page as usual Razor component ",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/21826/comments",
    "author": "ghost",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2020-05-14T14:54:27Z",
        "body": "@Sm1le291 thanks for contacting us.\r\n\r\nBlazor webassemby uses ASP.NET Core Identity + Open ID Connect to perform login so a redirect is required unless you are willing to perform the authentication within a pop-up window. Unfortunately, that is a feature we only support for Azure Active Directory (B2C) logins."
      },
      {
        "user": "ghost",
        "created_at": "2020-05-14T15:01:21Z",
        "body": "@javiercn thanks for answer! No problem with redirect)\r\nBut how to get token and set cookies? How to reproduce PasswordSignInAsync method logic on client side? Is it possible? "
      },
      {
        "user": "javiercn",
        "created_at": "2020-05-14T15:09:29Z",
        "body": "@Sm1le291 You would have to define an API endpoint or something like that. Potentially you could set cookies as the response to an API call, but it is not trivial to do in a secure way."
      },
      {
        "user": "ghost",
        "created_at": "2020-05-14T15:28:17Z",
        "body": "@javiercn what exactly happens after entering data into fields is sending login, password and csrf token as a POST query to /Identity/Account/Login and nothing more, if I do so what will be unsafe? \r\nOne more redirect is not a problem for me, problem is supporting two render engines in one project"
      },
      {
        "user": "javiercn",
        "created_at": "2020-05-14T15:33:13Z",
        "body": "@Sm1le291 I haven't threat modeled something like that and It's not something that I can do ad-hoc. What I'm saying is that if you want to rewrite the UI you need to take all steps to ensure your design is secure. That's it."
      },
      {
        "user": "ghost",
        "created_at": "2020-05-14T15:36:34Z",
        "body": "@javiercn I understand, thanks) I already explain that it's possible from our discussion and this is enough for me. "
      }
    ]
  },
  {
    "number": 21573,
    "title": "Is it possible to load template code which is razor code from a file or from sql table in Blazor?",
    "created_at": "2020-05-07T13:21:21Z",
    "closed_at": "2020-05-07T15:50:02Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/21573",
    "body": "Is it possible to render a template code/razor code(which may contain any razor code including if else conditions-swich cases- context- variables-etc.etc) ) from a file or database as string and compile it to executable Razor code at runtime?",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/21573/comments",
    "author": "Rahul-Narayanasamy",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2020-05-07T15:49:59Z",
        "body": "@Rahul-Narayanasamy thanks for contacting us.\r\n\r\nNo, this is not a Blazor feature and is not something we plan to implement. Razor components are compiled to C# clases in your assembly when your project is built and we don't support compiling them at runtime."
      }
    ]
  },
  {
    "number": 21427,
    "title": "DefaultSigningCredentialStore does not exist",
    "created_at": "2020-05-02T18:17:13Z",
    "closed_at": "2020-05-05T14:30:53Z",
    "labels": [
      "question",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/21427",
    "body": "AdSigningCredential public static method creates an ISigningCredentialStore singleton service returning a new DefaultSigningCredentialsStore instance of an non existing class. I gets an error. I discovered the issue testing some new blazor webassembly projects.\r\nThanks.\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/21427/comments",
    "author": "tonibabieka",
    "comments": [
      {
        "user": "tonibabieka",
        "created_at": "2020-05-03T08:45:06Z",
        "body": "It is at Identity level. The IdentityServerConfigurationExtensions AddSigningCredentials public static method creates a new DefaultSigningCredentialsStore an a new DefaultValidationKeysStore, and there is no class to do so."
      },
      {
        "user": "javiercn",
        "created_at": "2020-05-05T14:30:53Z",
        "body": "I believe you have updated your Identity Server to a version that is not compatible with the support we ship.\r\n\r\nClosing this issue as you are mixing incompatible dependencies"
      }
    ]
  },
  {
    "number": 21394,
    "title": "Unknown Razor components should fail to compile",
    "created_at": "2020-05-01T10:19:39Z",
    "closed_at": "2020-05-04T10:31:05Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/21394",
    "body": "As a great believer that compile time error detection is far superior to runtime error detection...\r\n\r\nWhen compiling...\r\n\r\n1.  Razor components that are unknown (e.g. missing a Nuget package or a using statement) should throw a 'doesn't exist in the current context'?\r\n\r\n2.  Unknown Component Razor Attributes (with an upper class first letter) should also throw an 'unknown component attribute error'?",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/21394/comments",
    "author": "Discovery-support",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2020-05-04T10:31:05Z",
        "body": "@Discovery-support thanks for contacting us.\r\n\r\nWe can't distinguish between an unknown component and a custom web component tag or anything similar that you might want to put in your markup, so this is not a direction we plan to take in the near future. "
      }
    ]
  },
  {
    "number": 21354,
    "title": "AddOpenIdConnect in ASP.NET Core WebAPI in context auf Angular-SPA ->WebAPI (single domain)",
    "created_at": "2020-04-30T07:57:34Z",
    "closed_at": "2020-05-08T10:04:43Z",
    "labels": [
      "question",
      "area-auth"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/21354",
    "body": "All samples regarding AddOpenIdConnect-middleware seem to target ASP.NET Core MVC. In contrast we have an SPA that accesses a WebAPI. Both are hosted on the same domain. Is it OK to use AddOpenIdConnect-backed cookie authentication on the WebAPI-level in this scenario or what (negative) implications does this have?\r\n\r\nThanks!\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/21354/comments",
    "author": "Tobias-08",
    "comments": [
      {
        "user": "blowdart",
        "created_at": "2020-04-30T12:33:10Z",
        "body": "If you have a SPA generally we'd recommend JWT tokens rather than cookies, to allow for flexibility and other client types.\r\n\r\nHowever if you know you're never going to write a mobile or desktop app, and you can be sure that all browsers you are going to support have support for SameSite cookies, then yea, you could use cookies if you want, as long as you ensure the cookies are secure (i.e. HTTPS only), http cookies (so you can't access them in a script) and you set the SameSite attribute to be Strict (to avoid CSRF)"
      },
      {
        "user": "Tobias-08",
        "created_at": "2020-05-08T10:04:43Z",
        "body": "OK, thanks."
      }
    ]
  },
  {
    "number": 21320,
    "title": "LocationChangedEventArgs.IsNavigationIntercepted is always false (WASM)",
    "created_at": "2020-04-29T13:51:19Z",
    "closed_at": "2020-04-29T17:33:43Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/21320",
    "body": "No matter how I change the location (I'm changing hash) the `IsNavigationIntercepted`  property is always `false`.\r\n\r\n### Describe the bug\r\n\r\nI expected that manual navigation or calling JS would set `IsNavigationIntercepted` to `true` but I always got `false`.\r\n\r\nMaybe the problem is, I'm changing the hash and not the path (btw if I change the path the page reloads without any notification). Or maybe I failed to set-up navigation properly?\r\n\r\n### To Reproduce\r\n\r\n- Subscribe to `NavigationManager.LocationChanged`\r\n- Update hash by hand in the browser (`IsNavigationIntercepted == false`)\r\n- Change `window.location.hash` (`IsNavigationIntercepted == false`)\r\n- Call `NavigationManager.NavigateTo` (`IsNavigationIntercepted == false`)\r\n\r\n### Further technical details\r\n\r\n- ASP.NET Core 3.1.300-preview-015115\r\n- Windows 10.0.19041\r\n- Chrome 81.0.4044.122\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/21320/comments",
    "author": "shadow-cs",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2020-04-29T15:02:20Z",
        "body": "@shadow-cs thanks for contacting us.\r\n\r\nIn all the cases you are describing the navigation is not intercepted. Navigation is intercepted when a user clicks an `a` link and so on. In the 2 first cases you described, Blazor doesn't have any chance to intercept the navigation at all, and in the 3rd case you are triggering it programmatically, so it is not intercepted."
      }
    ]
  },
  {
    "number": 21313,
    "title": "Disponse FileStream not at time in Action",
    "created_at": "2020-04-29T06:27:27Z",
    "closed_at": "2020-04-29T09:10:48Z",
    "labels": [
      "question",
      "area-mvc",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/21313",
    "body": "### Describe the bug\r\nWhen I return `ControllerBase.File(fileStream,contentType,downloadName) `in `Action`, it warning me **CA2000**. If I use `Using` reserved word, whatever I use `try finally` or let it auto disponse, it throw exception of file has been closed.\r\n\r\n### To Reproduce\r\n\r\n```\r\nstring path = \"[A  Accessible File's Path]\";\r\nstring contentType = \"[File's Type]\"\r\nstring downloadName = \"[Download Name]\"\r\n\r\npublic class DemoController:Controller\r\n{\r\n    public IActionResult GetFileWithoutDisponse()\r\n    {\r\n        var stream = new FileStream(path, FileMode.Open);  // CA2000\r\n        return File(stream, contentType, downloadName);\r\n    }\r\n\r\n    public IActionResult GetFileWithDisponse()\r\n    {\r\n        using var stream = new FileStream(path, FileMode.Open);\r\n        return File(stream, contentType, downloadName); // Exception: File has been close\r\n    }\r\n}\r\n```\r\n\r\n### Further technical details\r\n- ASP.NET Core version: .NET Core 3.1\r\n- Include the output of `dotnet --info`:\r\n\r\n> .NET Core SDK（反映任何 global.json）:\r\n>  Version:   3.1.201\r\n>  Commit:    b1768b4ae7\r\n> \r\n> 运行时环境:\r\n> \r\n> \r\n>  OS Name:     Windows\r\n>  OS Version:  10.0.18363\r\n>  OS Platform: Windows\r\n>  RID:         win10-x64\r\n>  Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.201\\\r\n> \r\n> Host (useful for support):\r\n>   Version: 3.1.3\r\n>   Commit:  4a9f85e9f8\r\n> \r\n> .NET Core SDKs installed:\r\n>   3.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n>   3.1.201 [C:\\Program Files\\dotnet\\sdk]\r\n> \r\n> .NET Core runtimes installed:\r\n>   Microsoft.AspNetCore.All 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n>   Microsoft.AspNetCore.All 2.1.17 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n>   Microsoft.AspNetCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n>   Microsoft.AspNetCore.App 2.1.17 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n>   Microsoft.AspNetCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n>   Microsoft.AspNetCore.App 3.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n>   Microsoft.NETCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n>   Microsoft.NETCore.App 2.1.17 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n>   Microsoft.NETCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n>   Microsoft.NETCore.App 3.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n>   Microsoft.WindowsDesktop.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n>   Microsoft.WindowsDesktop.App 3.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n- The IDE (VS / VS Code/ VS4Mac) you're running on, and it's version: `Microsoft Visual Studio Community 2019 Version 16.5.4`\r\n\r\n- Nuget List:\r\n```\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Http.Abstractions\" Version=\"2.2.0\" />\r\n    <PackageReference Include=\"Microsoft.CodeAnalysis.Common\" Version=\"3.3.1\" />\r\n    <PackageReference Include=\"Microsoft.CodeAnalysis.CSharp\" Version=\"3.3.1\" />\r\n    <PackageReference Include=\"Microsoft.CodeAnalysis.FxCopAnalyzers\" Version=\"2.9.8\">\r\n      <PrivateAssets>all</PrivateAssets>\r\n      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>\r\n    </PackageReference>\r\n    <PackageReference Include=\"Microsoft.CSharp\" Version=\"4.7.0\" />\r\n    <PackageReference Include=\"Microsoft.EntityFrameworkCore\" Version=\"3.1.2\" />\r\n    <PackageReference Include=\"Microsoft.EntityFrameworkCore.Analyzers\" Version=\"3.1.2\" />\r\n    <PackageReference Include=\"Microsoft.EntityFrameworkCore.Design\" Version=\"3.1.2\">\r\n      <PrivateAssets>all</PrivateAssets>\r\n      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>\r\n    </PackageReference>\r\n    <PackageReference Include=\"Microsoft.EntityFrameworkCore.SqlServer\" Version=\"3.1.2\" />\r\n    <PackageReference Include=\"Microsoft.EntityFrameworkCore.Tools\" Version=\"3.1.2\">\r\n      <PrivateAssets>all</PrivateAssets>\r\n      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>\r\n    </PackageReference>\r\n    <PackageReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration\" Version=\"3.1.2\" />\r\n    <PackageReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Contracts\" Version=\"3.1.2\" />\r\n    <PackageReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Core\" Version=\"3.1.2\" />\r\n    <PackageReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Design\" Version=\"3.1.2\" />\r\n    <PackageReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Templating\" Version=\"3.1.2\" />\r\n    <PackageReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Utils\" Version=\"3.1.2\" />\r\n    <PackageReference Include=\"Microsoft.VisualStudio.Web.CodeGenerators.Mvc\" Version=\"3.1.2\" />\r\n    <PackageReference Include=\"Newtonsoft.Json\" Version=\"12.0.3\" />\r\n    <PackageReference Include=\"NPOI\" Version=\"2.5.1\" />\r\n    <PackageReference Include=\"System.Management\" Version=\"4.7.0\" />\r\n```",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/21313/comments",
    "author": "HLSS-Hen",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2020-04-29T09:10:39Z",
        "body": "@HLSS-Hen thanks for contacting us.\r\n\r\nYou should not use `using` within your stream there, and you should simply ignore/supress the warning. If you pass a stream to File, the framework will take care of the disposal after is done with it."
      }
    ]
  },
  {
    "number": 21235,
    "title": "Blazor - creating empty component constructor at runtime and call parameterized constructor",
    "created_at": "2020-04-27T12:25:56Z",
    "closed_at": "2020-04-27T14:24:35Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/21235",
    "body": "Why doesn't Blazor create empty an empty constructor at runtime (so it can render the component) and later calls the parameterized (implemented) constructor using the parameters that are supplied in the HTML-attributes?\r\n\r\nThis way, no [Parameter]-attribute is needed on properties, they can become get-only and therefore don't have a state anymore.\r\n\r\nIt makes the whole component implementation way more clean and clear.",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/21235/comments",
    "author": "Code-Chops",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2020-04-27T14:24:35Z",
        "body": "@Daendel thanks for contacting us.\r\n\r\nBlazor (Razor) just compiles to C#. As such, it can only call a constructor once to initialize a given object (that's how C#/.NET works) and having to call a constructor with a random parameter set makes the implementation way more complex.\r\n\r\nAlso, parameters in a component can change multiple times, so a constructor is not the right place for them. A component can just implement `IComponent` and the only responsibility there is to implement a very generic `SetParametersAsync` method that is called by the framework when the parameters change.\r\n\r\nOnly `ComponentBase` respects the `[Parameter]` attribute."
      }
    ]
  },
  {
    "number": 21226,
    "title": "Checkbox keep checked, after List Updated and StateHasChanged() method is called",
    "created_at": "2020-04-27T06:26:30Z",
    "closed_at": "2020-04-27T15:34:47Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/21226",
    "body": "Hi, I have this code in Blazor :\r\n\r\n```\r\n@foreach (var item in list)\r\n{\r\n <input type=\"checkbox\" @onchange=\"@(e => HandleCheckChanged(e, item.Name))\" checked=\"@item.IsChecked\">\r\n}\r\n\r\nprivate async Task HandleCheckChanged(ChangeEventArgs e, string itemName)\r\n{\r\n   // do something ...\r\n   StateHasChanged();\r\n}\r\n```\r\nif I check a checkbox it calls the HandleCheckChanged and the checkbox is checked\r\nBut if I change the list items the previews checked checkbox is still checked and is not updated based on the new list items.\r\n\r\nfor example suppose that I have a list of ordered numbers {1-20} I follow these steps :\r\n1 : list = GetAll().Where(c => c.Id < 10);\r\n2 : I check the first checkbox (number 1)\r\n3 : list = GetAll().Where(c => c.Id >= 10); (list updated and state has changed)\r\n4 : the problem raises here , checkbox 11 is checked ??? but its value is false\r\nIt seems that DOM does not follow the Component's State ",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/21226/comments",
    "author": "webebox",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2020-04-27T14:40:33Z",
        "body": "@webebox thanks for contacting us.\r\n\r\nSeveral things here, I don't think you need to be calling `StateHasChanged` in your handler. The framework will do that for you automatically. You likely need to use `@key` to have the behavior you want, since otherwise Blazor tries to find the minimal change needed to update the UI and that might not have the effect you expect."
      },
      {
        "user": "webebox",
        "created_at": "2020-04-27T15:34:44Z",
        "body": "Thank you. using @key solved the problem."
      }
    ]
  },
  {
    "number": 21205,
    "title": "[Blazor] Javascript file did not updated automatically after publishing app new version",
    "created_at": "2020-04-25T03:50:53Z",
    "closed_at": "2020-04-26T13:28:38Z",
    "labels": [
      "question",
      "area-blazor",
      "feature-blazor-wasm",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/21205",
    "body": " Hello,\r\n\r\n I am hosting blazor webassembly app on azure storage static website.\r\n\r\n I made some changes in c# side and in javascript interop file.\r\n\r\n Published app and browsed it with chrome, app got updated automatically as expected (some new version changes was applied) but javascript file was same in sources.\r\n\r\n After hard reload js file updated too and everything works well now.\r\n\r\n I can't tell all my users to make hard reload and they do not know when I publish new versions, so this is problem.\r\n\r\n Is there any way browser to get notified that old js files should be removed and new downloaded?\r\n\r\nThank you.\r\n\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/21205/comments",
    "author": "Lupusa87",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2020-04-26T10:10:09Z",
        "body": "@Lupusa87 thanks for contacting us.\r\n\r\nThis is out of Blazor's control and is something that you need to handle with whatever hosting you are using. This is \"standard\" HTTP caching techniques:\r\n* Use ETags when serving the files\r\n* Set a proper cache header when returning the JS responses.\r\n\r\nOther than that if you need something like this, I can thing of a couple alternative strategies:\r\n* Take control of the resource loading with your own service worker. That way you can set the fetch cache options to always force updating the resource.\r\n* Download and insert the script on the page dynamically yourself."
      },
      {
        "user": "Lupusa87",
        "created_at": "2020-04-26T13:28:38Z",
        "body": "@javiercn Thank you, will follow your advices."
      }
    ]
  },
  {
    "number": 21051,
    "title": "Access to IConfiguration at services provisioning time",
    "created_at": "2020-04-21T07:22:40Z",
    "closed_at": "2020-04-21T07:28:45Z",
    "labels": [
      "question",
      "area-blazor",
      "feature-blazor-wasm",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/21051",
    "body": "Currently, in versión 3.2 Preview 4, configuration is built at `WebAssemblyHostBuilder::Build `method, at the same time `ServicesCollection` are 'compiled' into `ServiceProvider`\r\n\r\nIn some cases, `IConfiguration` is needed at services provisioning time. For example:\r\n\r\nI'm using OIDC auth provider. For initialization I'm calling             \r\n```\r\nservices.AddOidcAuthentication(options =>\r\n            {\r\n                options.ProviderOptions = authOptions;\r\n            });\r\n```\r\nAt this point I'll need to get the `Authority` from 'appsettings.json' config file.\r\nIn my opinion, the right way to do this is creating/registering the options with `services.Configure/IConfiguration::Bind` approach.\r\n\r\nAlso, If I try to build configuration with `ConfigurationBuilder::Build` before `WebAssemblyHostBuilder::Build` to access `IConfiguration`, the `MemoryStream` used to store appsettings.json internally gets into a non-reading state and `WebAssemblyHostBuilder::Build` gets and exception.\r\n\r\nTo reproduce:\r\n\r\n```\r\n_ = builder.Configuration.Build();\r\nawait builder.Build().RunAsync();\r\n```\r\n\r\nResult:\r\n\r\n```\r\nSystem.ArgumentException: Stream was not readable.\r\nd.printErr @ blazor.webassembly.js:1\r\nblazor.webassembly.js:1   at System.IO.StreamReader..ctor (System.IO.Stream stream, System.Text.Encoding encoding, System.Boolean detectEncodingFromByteOrderMarks, System.Int32 bufferSize, System.Boolean leaveOpen) <0x2c81400 + 0x00058> in <filename unknown>:0 \r\nd.printErr @ blazor.webassembly.js:1\r\nblazor.webassembly.js:1   at System.IO.StreamReader..ctor (System.IO.Stream stream, System.Boolean detectEncodingFromByteOrderMarks) <0x2c812b0 + 0x00018> in <filename unknown>:0 \r\nd.printErr @ blazor.webassembly.js:1\r\nblazor.webassembly.js:1   at System.IO.StreamReader..ctor (System.IO.Stream stream) <0x2c811e8 + 0x00008> in <filename unknown>:0 \r\nd.printErr @ blazor.webassembly.js:1\r\nblazor.webassembly.js:1   at Microsoft.Extensions.Configuration.Json.JsonConfigurationFileParser.ParseStream (System.IO.Stream input) <0x2c73388 + 0x00046> in <filename unknown>:0 \r\nd.printErr @ blazor.webassembly.js:1\r\nblazor.webassembly.js:1   at Microsoft.Extensions.Configuration.Json.JsonConfigurationFileParser.Parse (System.IO.Stream input) <0x2c6b558 + 0x0000c> in <filename unknown>:0 \r\nd.printErr @ blazor.webassembly.js:1\r\nblazor.webassembly.js:1   at Microsoft.Extensions.Configuration.Json.JsonStreamConfigurationProvider.Load (System.IO.Stream stream) <0x2c6b498 + 0x00004> in <filename unknown>:0 \r\nd.printErr @ blazor.webassembly.js:1\r\nblazor.webassembly.js:1   at Microsoft.Extensions.Configuration.StreamConfigurationProvider.Load () <0x2c6b240 + 0x0002c> in <filename unknown>:0 \r\nd.printErr @ blazor.webassembly.js:1\r\nblazor.webassembly.js:1   at Microsoft.Extensions.Configuration.ConfigurationRoot..ctor (System.Collections.Generic.IList`1[T] providers) <0x2c6a600 + 0x0008c> in <filename unknown>:0 \r\nd.printErr @ blazor.webassembly.js:1\r\nblazor.webassembly.js:1   at Microsoft.Extensions.Configuration.ConfigurationBuilder.Build () <0x2c58e30 + 0x0008e> in <filename unknown>:0 \r\nd.printErr @ blazor.webassembly.js:1\r\nblazor.webassembly.js:1   at Microsoft.AspNetCore.Components.WebAssembly.Hosting.WebAssemblyHostBuilder.Build () <0x2ca79e8 + 0x0000c> in <filename unknown>:0\r\n``` \r\n\r\nThanks!!",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/21051/comments",
    "author": "javitosanchez",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2020-04-21T07:28:45Z",
        "body": "@javitosanchez thanks for contacting us.\r\n\r\nThis was added in the past few days and it will be available in one of our next releases."
      }
    ]
  },
  {
    "number": 21050,
    "title": "Blazor component cyclic dependency unchecked",
    "created_at": "2020-04-21T06:24:07Z",
    "closed_at": "2020-04-21T06:32:01Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/21050",
    "body": "### Components in Blazor are allowed to refer each other\r\nBlazor components are allowed to have cyclic dependency without any compile time error or intellisense warning.\r\n\r\n### To Reproduce\r\nSo I created a new project with BlazorServer. It has three pages as Index, Counter and FetchData. Insert the `<Counter />` component in Index.razor page and `<Index/>` component in Counter.razor page. To my surprise, the project was built successfully but struggling to run on browser.\r\n\r\n### Further technical details\r\n- ASP.NET Core version 3.1\r\n- IDE: VS2019\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/21050/comments",
    "author": "theswanand",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2020-04-21T06:31:26Z",
        "body": "@theswanand thanks for contacting us.\r\n\r\nThat is by design, that problem is untractable in the general case and we don't try to solve it in the same way a compiler doesn't warn you when you have recursive calls that result in an infinite execution."
      }
    ]
  },
  {
    "number": 20995,
    "title": "Blazor template - Startup.cs",
    "created_at": "2020-04-19T09:52:58Z",
    "closed_at": "2020-04-20T10:49:31Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/20995",
    "body": "Hi,\r\n\r\nThe new template has removed the `Startup.cs` and you are resgistering the services inside the main method - I think this needs to change:\r\n* Seporation of concern is very important for maintainability.\r\n* The Blazor template needs to be consistaint with othe ASP projects, which all use `Startup.css`.\r\n\r\nThe tricky thing is that `HttpClient` need a referece to the builder.  \r\nThis is how I have done it:\r\n```csharp\r\n    public class Program\r\n    {\r\n        public static async Task Main(string[] args)\r\n        {\r\n            await CreateHostBuilder(args).Build().RunAsync();\r\n        }\r\n\r\n        public static WebAssemblyHostBuilder CreateHostBuilder(string[] args)\r\n        {\r\n            var builder = WebAssemblyHostBuilder.CreateDefault(args);\r\n            var startup = new Startup(builder);\r\n            startup.ConfigureServices(builder.Services);\r\n            startup.ConfigureComponents(builder.RootComponents);\r\n            return builder;\r\n        }\r\n    }\r\n    public class Startup\r\n    {\r\n        private WebAssemblyHostBuilder builder;\r\n\r\n        public Startup(WebAssemblyHostBuilder builder)\r\n        {\r\n            this.builder = builder;\r\n        }\r\n\r\n        public void ConfigureServices(IServiceCollection services)\r\n        {\r\n            services.AddSingleton(new HttpClient\r\n            {\r\n                BaseAddress = new Uri(builder.HostEnvironment.BaseAddress)\r\n            });\r\n        }\r\n\r\n        public void ConfigureComponents(RootComponentMappingCollection app)\r\n        {\r\n            WebAssemblyHttpMessageHandlerOptions.DefaultCredentials = FetchCredentialsOption.Include;\r\n            app.Add<App>(\"app\");\r\n        }\r\n    }\r\n```",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/20995/comments",
    "author": "LukeTOBrien",
    "comments": [
      {
        "user": "LukeTOBrien",
        "created_at": "2020-04-19T13:57:29Z",
        "body": "I think the best way might be to create an `abstract` class:\r\n```csharp\r\n    public abstract class StartupBase\r\n    {\r\n        public WebAssemblyHostBuilder Builder { get; set; }\r\n\r\n        public abstract void ConfigureComponents(RootComponentMappingCollection app);\r\n        public abstract void ConfigureServices(IServiceCollection services);\r\n    }\r\n```\r\nThen an `Extension`:\r\n```csharp\r\n    public static class BuilderExtensions\r\n    {\r\n        public static WebAssemblyHostBuilder UseStartup<T>(this WebAssemblyHostBuilder builder)\r\n            where T : StartupBase, new()\r\n        {\r\n            var startup = new T();\r\n            startup.Builder = builder;\r\n            startup.ConfigureServices(builder.Services);\r\n            startup.ConfigureComponents(builder.RootComponents);\r\n            return builder;\r\n        }\r\n    }\r\n```\r\nThen use it in `Program.cs`:\r\n```csharp\r\n        public static WebAssemblyHostBuilder CreateHostBuilder(string[] args)\r\n        {\r\n            var builder = WebAssemblyHostBuilder.CreateDefault(args)\r\n                .UseStartup<Startup>();\r\n            return builder;\r\n        }\r\n```"
      },
      {
        "user": "javiercn",
        "created_at": "2020-04-20T10:49:28Z",
        "body": "@LukeTOBrien thanks for contacting us.\r\n\r\nWe intentionally avoided having a startup class in Blazor, since we wanted a simplified model, but you are free to organize your app however you think it is best for you.\r\n\r\nWe don't think that the Blazor bootstrap experience should be consistent with the ASP.NET Core bootstrap experience since they are fundamentally different and optimize for goals."
      }
    ]
  },
  {
    "number": 20979,
    "title": "Calling base.BuildRenderTree(builder) from Customer component",
    "created_at": "2020-04-18T03:52:27Z",
    "closed_at": "2020-04-20T10:16:33Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/20979",
    "body": "### Questions\r\n- Is it required or optional to call `base.BuildRenderTree(builder)` from a custom component? If required,\r\n- Does it have to be in a specific order? In other words, should be located at the very top or bottom?",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/20979/comments",
    "author": "dotnetspark",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2020-04-20T10:16:22Z",
        "body": "@ylr-research thanks for contacting us.\r\n\r\nIf you are inheriting from ComponentBase it is required, otherwise your component won't re-render since ComponentBase makes sure that multiple synchronous calls to StateHasChanged only result in a single render."
      },
      {
        "user": "dotnetspark",
        "created_at": "2020-04-20T14:50:14Z",
        "body": "@javiercn thanks. Does it matter if placed at the beginning or the end?"
      }
    ]
  },
  {
    "number": 20938,
    "title": "[WebAssembly 3.2.0 Preview 4] Cannot consume scoped service 'Microsoft.Extensions.Logging.ILoggerProvider' from singleton 'Microsoft.Extensions.Logging.ILoggerFactory'.",
    "created_at": "2020-04-17T08:21:44Z",
    "closed_at": "2020-04-17T13:04:42Z",
    "labels": [
      "question",
      "area-blazor",
      "feature-blazor-wasm",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/20938",
    "body": "hello guys, since the last webAssembly update i have error at startup of my app.\r\nCannot consume scoped service 'Microsoft.Extensions.Logging.ILoggerProvider' from singleton 'Microsoft.Extensions.Logging.ILoggerFactory'.\r\n\r\nAll my services are injected as scoped, and the problem is when i try to connect my personnalize logger (to call a controller on the log and not just log in the console)\r\n\r\n````\r\nbuilder.Services.AddLogging(b => b\r\n                .AddMyLogger() // Add Blazor.Extensions.Logging.BrowserConsoleLogger\r\n                .SetMinimumLevel(LogLevel.Trace));\r\n\r\npublic static ILoggingBuilder AddMyLogger(this ILoggingBuilder builder)\r\n        {\r\n            builder.Services.TryAddEnumerable(ServiceDescriptor.Scoped<ILoggerProvider, LoggerProvider>());\r\n            builder.Services.Add(ServiceDescriptor.Scoped(typeof(ILogger<>), typeof(MyLoggerImplementation<>)));\r\n            return builder;\r\n        }\r\n\r\npublic class MyLoggerImplementation<T> :  ILogger<T>\r\n````\r\nI try to change the way i connect my  logger, like this, \r\n````\r\n builder.Services.TryAddEnumerable(ServiceDescriptor.Singleton<ILoggerProvider, LoggerProvider>());\r\n````\r\nbut i met others problems\r\n````\r\nCannot consume scoped service 'OneOfMyService' from singleton 'Microsoft.Extensions.Logging.ILoggerProvider'.\r\n````\r\n\r\nso i don't know how to solve this, maybe is not the good way to connect a personalize logger now, i was coding this by taking the code of BrowserConsoleLogger few month ago but i don't know how to do this now.\r\n\r\nthanks for your help !",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/20938/comments",
    "author": "julienGrd",
    "comments": [
      {
        "user": "smartprogrammer93",
        "created_at": "2020-04-17T08:37:54Z",
        "body": "@julienGrd Since ILoggerFactory is a defined as a singleton and depends on ILoggerProvider. you should change ILoggerProvider to be a singleton as well. in Blazor webassembly, singleton and scoped is the same thing. So logically you wont have a problem."
      },
      {
        "user": "javiercn",
        "created_at": "2020-04-17T08:45:26Z",
        "body": "@julienGrd thanks for contacting us.\r\n\r\nYou could inject an IServiceProvider into your service and resolve the scoped dependency there. That should work for Blazor webassembly, but I would suggest you avoid having scoped dependencies in your ILogger."
      },
      {
        "user": "julienGrd",
        "created_at": "2020-04-17T13:04:42Z",
        "body": "OK guys is finally solve it by removing my scoped service to my ilogger implementaton, which is now singleton."
      }
    ]
  },
  {
    "number": 20936,
    "title": "Blazor WASM 3.2 Preview 4 Build",
    "created_at": "2020-04-17T08:15:22Z",
    "closed_at": "2020-04-17T08:48:32Z",
    "labels": [
      "question",
      "area-blazor",
      "feature-blazor-wasm",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/20936",
    "body": "When I do a modification to my solution, if I rebuild, the modification is not applied.\r\n\r\nI have to clean my solution before rebuild.",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/20936/comments",
    "author": "Julien-Marpault",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2020-04-17T08:47:59Z",
        "body": "@JulienM28 thanks for contacting us.\r\n\r\nWe had a rogue package that we uploaded by error. We've since corrected the issue. You need to clean the nuget package caches and run restore again. You can do so with `dotnet nuget locals --clear all` (note, this will wipe all the nuget caches from your machine, alternatively you can go to the ~/.nuget\\packages and remove the Microsoft.AspNetCore.Components.WebAssembly.Build package and restore again)"
      },
      {
        "user": "javiercn",
        "created_at": "2020-04-17T08:48:32Z",
        "body": "If you still have issues after following the guidance, comment on the issue and we'll reevaluate it."
      }
    ]
  },
  {
    "number": 20902,
    "title": "[Blazor][Question] Is authorization on the _blazor endpoint required?",
    "created_at": "2020-04-16T13:28:37Z",
    "closed_at": "2020-08-01T20:01:30Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/20902",
    "body": "Unfortunately I can't find an answer to my question myself, so I like to ask for any advice:\r\n\r\nThe following problem:\r\n\r\nI have a custom authorization handler in my blazor server application. When a request comes in, this authorization is applied to the endpoint of the initial request.\r\nThis initial endpoint request is followed by two more calls to the \"_blazor\" endpoint, the negotiate and websocket upgrade calls.\r\n\r\nMy question now is, should the calls to \"_blazor\" also go through the authorization pipeline? Or is the security guaranteed internally through the negotiation and can I simply set AuthorizationHandlerContext.Succeed for requests on the \"_balzor\" route?\r\n\r\nThanks for any help! 🍪",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/20902/comments",
    "author": "cubed-it",
    "comments": [
      {
        "user": "kmanpro",
        "created_at": "2020-06-02T19:29:53Z",
        "body": "I am wondering the same thing.\r\nIn our case we are using ASPNetCore MVC and integrating blazor into it using razor components.\r\nDo we need to secure the \"_blazor\" endpoint is it already protected?"
      },
      {
        "user": "ghost",
        "created_at": "2020-08-01T20:01:29Z",
        "body": "Thank you for contacting us. Due to a lack of activity on this discussion issue we're closing it in an effort to keep our backlog clean. If you believe there is a concern related to the ASP.NET Core framework, which hasn't been addressed yet, please file a new issue.\n\nThis issue will be locked after 30 more days of inactivity. If you still wish to discuss this subject after then, please create a new issue!"
      }
    ]
  },
  {
    "number": 20775,
    "title": "[Blazor] Slick carousel error",
    "created_at": "2020-04-12T18:43:05Z",
    "closed_at": "2020-06-14T14:00:42Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/20775",
    "body": "Hi,\r\n\r\nI have a slick carousel on my page:\r\n\r\n```\r\n<div class=\"container\">\r\n\t\t<div class=\"row slick-el bg-white border-radius-4 border px-md-5 pt-md-5 mx-0\">\r\n\t\t\t@foreach (var category in this.Categories)\r\n\t\t\t{\r\n\t\t\t\t<div class=\"col-12 px-2\">\r\n\t\t\t\t\t<article class=\"bg-white w-100  px-4 py-4 border-top-width-3 overflow-hidden position-relative align-self-stretch d-flex flex-column justify-content-between mb-4\">\r\n\t\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t\t<div class=\"col-12\">\r\n\t\t\t\t\t\t\t\t<img class=\"img-fluid mx-auto w-100 d-table\" style=\"max-width: 60px;\" src=\"img/@(category.Icon + \".svg\")\">\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div class=\"col-12 text-center\">\r\n\t\t\t\t\t\t\t\t<h3 class=\"min-height bold font-16 color-grey1 mt-3 my-4\">@category.Name</h3>\r\n\t\t\t\t\t\t\t\t<div class=\"d-table mx-auto\">\r\n\t\t\t\t\t\t\t\t\t<a href=\"kategorie/@category.Url\" title=\"@category.Title\" class=\"btn color-grey1 border-color-primary outline font-13 py-2 px-4 text-uppercase\">@SharedLocalizer[\"link.get-more\"].Value</a>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</article>\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t</div>\r\n\t</div>\r\n```\r\nI have a function in a javascript file:\r\n\r\n```\r\nwindow.index = {\r\n\t\tinit: function () {\r\n\t\t\t$('.slick-el').slick({\r\n\t\t\t\tinfinite: true,\r\n\t\t\t\tarrows: false,\r\n\t\t\t\tslidesToShow: 5,\r\n\t\t\t\tslidesToScroll: 5,\r\n\t\t\t\tdots: true,\r\n\t\t\t\tautoplay: true,\r\n\t\t\t\tresponsive: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tbreakpoint: 1200,\r\n\t\t\t\t\t\tsettings: {\r\n\t\t\t\t\t\t\tslidesToShow: 3,\r\n\t\t\t\t\t\t\tslidesToScroll: 3\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tbreakpoint: 800,\r\n\t\t\t\t\t\tsettings: {\r\n\t\t\t\t\t\t\tslidesToShow: 1,\r\n\t\t\t\t\t\t\tslidesToScroll: 1\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t});\r\n\r\n\t\t\t$('.slick-el-1').slick({\r\n\t\t\t\tarrows: true,\r\n\t\t\t\tslidesToShow: 2,\r\n\t\t\t\tslidesToScroll: 2,\r\n\t\t\t\tcenterMode: true,\r\n\t\t\t\tresponsive: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tbreakpoint: 1200,\r\n\t\t\t\t\t\tsettings: {\r\n\t\t\t\t\t\t\tslidesToShow: 1,\r\n\t\t\t\t\t\t\tslidesToScroll: 1\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t\tnextArrow:\r\n\t\t\t\t\t'<i class=\"fa slick-arrow right bg-grey2 icon-circle fa-arrow-right z2 cursor-pointer bg-hover-grey1\"></i>',\r\n\t\t\t\tprevArrow:\r\n\t\t\t\t\t'<i class=\"fa slick-arrow left bg-grey2 icon-circle fa-arrow-left z2 cursor-pointer bg-hover-grey1\"></i>'\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n});\r\n```\r\n\r\nI call this javascript method in server-side method \"OnAfterRenderAsync(bool firstRender)\":\r\n\r\n```\r\nif (firstRender)\r\n\t\t\t{\r\n\t\t\t\tawait this.JsRuntime.InvokeAsync<object>(\"index.init\");\r\n\t\t\t}\r\n```\r\nI got an error: \r\n\r\n> blazor.server.js:8 Uncaught (in promise) TypeError: Cannot read property 'insertBefore' of null\r\n    at s (blazor.server.js:8)\r\n    at Object.t.createAndInsertLogicalContainer (blazor.server.js:8)\r\n    at e.insertMarkup (blazor.server.js:8)\r\n    at e.insertFrame (blazor.server.js:8)\r\n    at e.applyEdits (blazor.server.js:8)\r\n    at e.updateComponent (blazor.server.js:8)\r\n    at Object.t.renderBatch (blazor.server.js:1)\r\n    at e.<anonymous> (blazor.server.js:15)\r\n    at blazor.server.js:15\r\n    at Object.next (blazor.server.js:15)\r\n\r\nI believe the problem could be that the slick script modifies the DOM. ",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/20775/comments",
    "author": "Morhpeuss",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2020-04-13T10:33:27Z",
        "body": "Thanks for contacting us @Morhpeuss \r\n\r\nIt looks like this is a question about how to use ASP.NET Core. While we do our best to look through all the issues filed here, to get a faster response we suggest posting your questions to StackOverflow using the asp.net-core-blazor tag."
      },
      {
        "user": "Morhpeuss",
        "created_at": "2020-04-14T14:36:18Z",
        "body": "Hello,\r\n\r\n@javiercn  I don't think that the problem is \"how to use ASP.NET Core\". I have 19 years of experience with .NET from WebForms /ASP.NET MVC to ASP.NET Core (and other technologies on .NET platform), so I think I know how to use ASP.NET Core. Stackoverflow was the first place where I was looking for a solution.\r\n\r\nThis could be a general problem. If I call the script where I initialize the slick carousel I get the error, If I remove the script's call .. no problem everything works perfectly.\r\n\r\nTherefore I believe that the Blazor has a problem when an \"external\"  script modifies the DOM."
      },
      {
        "user": "Morhpeuss",
        "created_at": "2020-04-14T15:47:47Z",
        "body": "@javiercn  I did a small test, After render, I call very simple javascript:\r\n\r\n`\t$('.slick-el').empty();\r\n\t$('.slick-el').append($('<div>Hi this my div</div>'));`\r\nAs you can see, the script cleans my element and then add an new element. I get exactly same error:\r\n\r\n> Uncaught (in promise) TypeError: Cannot read property 'insertBefore' of null\r\n    at s (blazor.server.js:8)\r\n    at Object.t.createAndInsertLogicalContainer (blazor.server.js:8)\r\n    at e.insertMarkup (blazor.server.js:8)\r\n    at e.insertFrame (blazor.server.js:8)\r\n    at e.applyEdits (blazor.server.js:8)\r\n    at e.updateComponent (blazor.server.js:8)\r\n    at Object.t.renderBatch (blazor.server.js:1)\r\n    at e.<anonymous> (blazor.server.js:15)\r\n    at blazor.server.js:15\r\n    at Object.next (blazor.server.js:15)"
      },
      {
        "user": "Morhpeuss",
        "created_at": "2020-04-15T09:55:04Z",
        "body": "I found where is the problem.\r\n\r\nI called all data services in method OnInitializedAsync, and then  I call the script in method OnAfterRenderAsync. But the method OnAfterRenderAsync doesn't wait for the method OnInitializedAsync. \r\n\r\nThe problem is, that the script modifies the DOM and after the method OnInitializedAsync is finished, Blazor wants to re-render the DOM, the DOM was changed and it throws the exception.\r\n\r\nWhen I moved all loading to the method OnInitialized, all works.\r\n\r\n"
      },
      {
        "user": "ghost",
        "created_at": "2020-06-14T14:00:41Z",
        "body": "Thank you for contacting us. Due to a lack of activity on this discussion issue we're closing it in an effort to keep our backlog clean. If you believe there is a concern related to the ASP.NET Core framework, which hasn't been addressed yet, please file a new issue.\n\nThis issue will be locked after 30 more days of inactivity. If you still wish to discuss this subject after then, please create a new issue!"
      }
    ]
  },
  {
    "number": 20635,
    "title": "There's no (intuitive?) way to render a component in a loop",
    "created_at": "2020-04-08T01:40:01Z",
    "closed_at": "2020-04-08T15:00:15Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/20635",
    "body": "I must be missing something very obvious with blazor... I want to simply render a list containing a component, yet there's no (obvious?) way to reference the iterator (which is a component) for rendering?\r\n\r\nTodoList.razor\r\n```\r\n<input @bind=\"_newTodo\" />\r\n<button @onclick=\"@AddTodoItem\">+</button>\r\n\r\n@foreach (TodoItem todoItem in _todoItems)\r\n{\r\n    // todoItem is a razor component, yet I can't simply render it here?\r\n    // <todoItem />\r\n}\r\n\r\n@code {\r\n    private IList<TodoItem> _todoItems = new List<TodoItem>();\r\n    private string _newTodo;\r\n\r\n    private void AddTodoItem()\r\n    {\r\n        if (!string.IsNullOrWhiteSpace(_newTodo))\r\n        {\r\n            _todoItems.Add(new TodoItem { Title = _newTodo });\r\n            _newTodo = string.Empty;\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nTodoItem.razor\r\n```\r\n<span>@Title</span>\r\n\r\n@code {\r\n    public string Title { get; set; }\r\n}\r\n```",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/20635/comments",
    "author": "trustieee",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2020-04-08T07:59:40Z",
        "body": "@mariocatch thanks for contacting us.\r\n\r\nYou can't create components directly since the framework manages their lifecycle for efficiency. Instead of your code, you do something like this:\r\n\r\nTodoList.razor\r\n```\r\n<input @bind=\"_newTodo\" />\r\n<button @onclick=\"@AddTodoItem\">+</button>\r\n\r\n@foreach (TodoItem todoItem in _todoItems)\r\n{\r\n    // todoItem is a razor component, yet I can't simply render it here?\r\n    // <todoItem Item=todoItem />\r\n}\r\n\r\n@code {\r\n    private IList<ToDoEntry> _todoItems = new List<ToDoEntry>();\r\n    private string _newTodo;\r\n\r\n    private void AddTodoItem()\r\n    {\r\n        if (!string.IsNullOrWhiteSpace(_newTodo))\r\n        {\r\n            _todoItems.Add(new ToDoEntry { Title = _newTodo });\r\n            _newTodo = string.Empty;\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nTodoItem.razor\r\n```\r\n<span>@Entry.Title</span>\r\n\r\n@code {\r\n    [Parameter] Item ToDoEntry Entry { get; set; }\r\n}\r\n```"
      }
    ]
  },
  {
    "number": 20622,
    "title": "Example of  <ValidationMessage /> Inside Component",
    "created_at": "2020-04-07T20:48:36Z",
    "closed_at": "2020-06-07T20:00:45Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/20622",
    "body": "Hi Team,\r\n\r\nHope you're all safe, well and avoiding crazy chaos! :)\r\n\r\nNeed a blazor example of the following\r\nTrying to place    ValidationMessage For=\"@(() => SomeModel.SomeValue)\"\r\nInside another Component. \r\n\r\nCall this one MyInput, its a child inside a EditForm Model=SomeModel on Page1\r\n\r\non Page1 I want to call MyInput param1, 2, etc but not sure how to **pass a @(() => SomeModel.SomeValue) as a parameter into MyInput**\r\n\r\nLooking to get an example of how to do this?  Please let me know if this doesn't make sense :)",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/20622/comments",
    "author": "loganmarshall1",
    "comments": [
      {
        "user": "ghost",
        "created_at": "2020-06-07T20:00:44Z",
        "body": "Thank you for contacting us. Due to a lack of activity on this discussion issue we're closing it in an effort to keep our backlog clean. If you believe there is a concern related to the ASP.NET Core framework, which hasn't been addressed yet, please file a new issue.\n\nThis issue will be locked after 30 more days of inactivity. If you still wish to discuss this subject after then, please create a new issue!"
      }
    ]
  },
  {
    "number": 20606,
    "title": "[Blazor] Run Arbitrary Javascript code with JsRuntime",
    "created_at": "2020-04-07T08:43:29Z",
    "closed_at": "2020-04-07T12:33:50Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/20606",
    "body": "It seems currently JsRuntime only supports calling already defined javascript functions by function name. It will be much better if JsRuntime could execute arbitrary javascript code passed as string.",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/20606/comments",
    "author": "Dzliera",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2020-04-07T09:49:55Z",
        "body": "@Gchkh16 thanks for contacting us.\r\n\r\nThis is already possible, you can call `eval` and pass in whatever string you want. Although I don't recommend using that for the same reasons it is discouraged in other places. If you do it carelessly and using user input, you are opening yourself to XSS"
      }
    ]
  },
  {
    "number": 20585,
    "title": "What's up with blazor.server.js",
    "created_at": "2020-04-06T21:21:20Z",
    "closed_at": "2020-04-07T15:01:02Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/20585",
    "body": "### Describe the bug\r\nI'm trying to develop with netcore3.1. In a fresh boilerplate blazor server app, there is a reference in ```_Host.cshtml``` to ```_framework/blazor.server.js```. Visual Studio highlights this reference and says that it cannot find it. Sure enough, ```_framework``` is not present under ```wwwroot``` in the project.\r\nI did some digging on my system and found that under ```C:\\Users\\michael\\.nuget\\packages\\microsoft.aspnetcore.blazor.build\\3.1.0-preview4.19579.2\\tools\\blazor``` there is a ```blazor.webassembly.js``` but no ```blazor.server.js```.\r\nThe reason that I remark on this is that on another system that I work on, in a similar folder (3.0.0 preview 9) this file is present.\r\nI am having significant difficulties with a project that I am trying to develop where I cannot get components to update properly, and I am wondering if this might be the culprit.\r\n\r\n### Further technical details\r\n- ASP.NET Core version\r\n- Include the output of `dotnet --info`\r\n\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.201\r\n Commit:    b1768b4ae7\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.201\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.3\r\n  Commit:  4a9f85e9f8\r\n\r\n.NET Core SDKs installed:\r\n  2.1.801 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.802 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.401 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.101 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.201 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.17 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.17 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.17 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n- The IDE (VS / VS Code/ VS4Mac) you're running on, and it's version\r\n\r\nVS 16.5.2\r\nVS Code 1.43.2\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/20585/comments",
    "author": "lxman",
    "comments": [
      {
        "user": "danroth27",
        "created_at": "2020-04-07T05:34:37Z",
        "body": "Hi @lxman. The blazor.server.js file is an embedded resource on the Microsoft.AspNetCore.Components.Server.dll assembly, which ships as part of the ASP.NET Core shared framework. While VS does typically try to validate that your script references are actually on disk at the specified path, VS should ignore blazor.server.js, which is included as part of the ASP.NET Core shared framework (it does on my machine). It sounds like something isn't working quite right with your Visual Studio version. Can you try repairing your VS installation?"
      },
      {
        "user": "lxman",
        "created_at": "2020-04-07T15:01:02Z",
        "body": "Hmm, OK, that makes sense. Unfortunately the validation for VS has been a trouble spot for quite some time by my experience. Working with Blazor I constantly get validation errors (red squigglies) yet the program compiles and runs. Annoying, but I'm used to it by now.\r\n\r\nThanks for the info. I'll close this."
      },
      {
        "user": "danroth27",
        "created_at": "2020-04-07T15:43:01Z",
        "body": "> Working with Blazor I constantly get validation errors (red squigglies) yet the program compiles and runs. Annoying, but I'm used to it by now.\r\n\r\nFor Razor files this is a known issue that we are working on addressing with a total revamp of the Razor tooling system. It will take some time to address, but once it's done it should enable a much better, more consistent, and more feature rich experience."
      }
    ]
  },
  {
    "number": 20491,
    "title": "How to add a custom build task to a Blazor WebAssembly project?",
    "created_at": "2020-04-03T07:35:36Z",
    "closed_at": "2020-04-06T15:04:25Z",
    "labels": [
      "question",
      "area-blazor",
      "feature-blazor-wasm",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/20491",
    "body": "I would like to add a custom build task when a Blazor project is compiled in release/debug configuration BEFORE files are packed in the **dist** foder, because at that time it is too late for performing transformations such as dll merging and resources processing. Is this possible? How? I tried adding custom tasks, but they appear to execute AFTER the **dist** folder has been packed. ",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/20491/comments",
    "author": "frankabbruzzese",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2020-04-03T08:54:30Z",
        "body": "@frankabbruzzese thanks for contacting us.\r\n\r\nWe are not sure what you are trying to accomplish, but I would say that the Blazor pipeline is pretty intricate and there is a good chance to break things if you just \"attach\" to it in the middle and start making changes.\r\n\r\nIdeally, any transformation that happens should be after the app has been built/published.\r\n\r\nIf you give us more details on specific things you are trying to accomplish we can possibly give you alternative ways of achieving the same result."
      },
      {
        "user": "frankabbruzzese",
        "created_at": "2020-04-03T09:08:38Z",
        "body": "My main goal is to merge the main assembly with some library dlls. I can do it also after publication, but then I have to update the list of files in blazor.boot.json. Moreover, while updating blazor.boot.json should be quite easy, I am worried that the more aggressive linker policy and dll compression announced for the 3.2 final, might make this processing very hard if done after all assets have been prepared in the dist folder."
      },
      {
        "user": "javiercn",
        "created_at": "2020-04-04T12:24:22Z",
        "body": "@frankabbruzzese thanks for the details. I don't think that type of transformation is something we plan to support in the near future. We ourselves considered things like ILMerge in the past but the reality of it is that it has significant drawbacks like for example breaking assembly identity.\r\n\r\nAs I said, we don't plan to support these types of things within the build pipeline, as it comes as a non trivial support cost for us and we don't see that much value on it."
      }
    ]
  },
  {
    "number": 20455,
    "title": "In Blazor Server 3.1, is it possible to move _Host.cshtml?",
    "created_at": "2020-04-02T16:03:52Z",
    "closed_at": "2020-04-02T19:43:30Z",
    "labels": [
      "question",
      "area-mvc",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/20455",
    "body": "### Is your feature request related to a problem? Please describe.\r\nWe would like to organize code by Feature / Page.  Is it possible to move \"\\Pages\\\\_Host.cshtml\" to \"\\Features\\Host\\\\_Host.cshtml\" ?\r\n\r\n### Describe the solution you'd like\r\nWe would like to move \"\\Pages\\\\_Host.cshtml\" to \"\\Features\\Host\\\\_Host.cshtml\"\r\n\r\n### Additional context\r\nBecause we host our Blazor Server apps a sub sites in IIS onpremise, we already have the href of the base tag set:  `<base` href=\"/PickListWeb/\" `/>`\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/20455/comments",
    "author": "roysurles",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2020-04-02T16:16:55Z",
        "body": "@roysurles thanks for contacting us.\r\n\r\nIt is doable I believe, `_Host.cshtml` is a plain razor page used as the entry point for the server-side blazor app.\r\n\r\n@pranavkm can you answer this since you are more familiar with the area."
      },
      {
        "user": "SteveSandersonMS",
        "created_at": "2020-04-02T17:04:44Z",
        "body": "Yes, in your `Startup.cs`, change the call to `AddRazorPages` to pass a different root directory. Example:\r\n\r\n```cs\r\n            services.AddRazorPages(options =>\r\n            {\r\n                options.RootDirectory = \"/something\";\r\n            });\r\n```"
      },
      {
        "user": "roysurles",
        "created_at": "2020-04-02T19:32:20Z",
        "body": "Worked exactly as described... thanks much!"
      }
    ]
  },
  {
    "number": 20453,
    "title": "Controller in a .dll",
    "created_at": "2020-04-02T14:57:54Z",
    "closed_at": "2020-04-03T09:00:31Z",
    "labels": [
      "question",
      "area-mvc",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/20453",
    "body": "Hi.\r\nI am developing a project in ASP.net Core and I would like to know if I can put the Controller in a dll.\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/20453/comments",
    "author": "Andres10121997",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2020-04-02T15:52:42Z",
        "body": "@XxAndres1012xX thanks for contacting us.\r\n\r\nDo you mean putting a controller in a class library and have the app pick it up automatically?\r\n\r\nThat's supported out of the box."
      },
      {
        "user": "Andres10121997",
        "created_at": "2020-04-02T16:06:34Z",
        "body": "Yes."
      },
      {
        "user": "Andres10121997",
        "created_at": "2020-04-02T16:18:44Z",
        "body": "I think I already solved my problem, I installed the necessary NuGgets in the dll.\r\nSame thanks for the help."
      }
    ]
  },
  {
    "number": 20450,
    "title": "Catch all route precedence incorrect",
    "created_at": "2020-04-02T13:05:41Z",
    "closed_at": "2020-07-17T08:00:54Z",
    "labels": [
      "question",
      "area-mvc"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/20450",
    "body": "```C#\r\nendpoints.MapControllers();\r\nendpoints.MapGet(\"{*path}\", context =>\r\n{\r\n    context.Response.StatusCode = StatusCodes.Status404NotFound;\r\n    return Task.CompletedTask;\r\n});\r\n```\r\n\r\nAlways returns 404 even for valid controller action route",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/20450/comments",
    "author": "davidikin45",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2020-04-02T13:42:14Z",
        "body": "@davidikin45 thanks for contacting us.\r\n\r\nI believe that's going on here is that attribute routes have a lower order than conventional routes, hence the order wins over the precedence.\r\n\r\n/cc: @rynowak to confirm."
      },
      {
        "user": "rynowak",
        "created_at": "2020-04-13T22:15:18Z",
        "body": "@davidikin45 - do you have an example of another route you expect this to match? \r\n\r\nIf you turn logging of `Microsoft` up to `Debug` what kind of log output do you see? Are the 404s coming from your code or from a failure to match anything?"
      },
      {
        "user": "ghost",
        "created_at": "2020-07-17T08:00:53Z",
        "body": "Thank you for contacting us. Due to a lack of activity on this discussion issue we're closing it in an effort to keep our backlog clean. If you believe there is a concern related to the ASP.NET Core framework, which hasn't been addressed yet, please file a new issue.\n\nThis issue will be locked after 30 more days of inactivity. If you still wish to discuss this subject after then, please create a new issue!"
      }
    ]
  },
  {
    "number": 20411,
    "title": "Load Configuration On Application Startup from Backed (Blazor WebAssembly)",
    "created_at": "2020-04-01T14:23:59Z",
    "closed_at": "2020-04-01T15:34:15Z",
    "labels": [
      "question",
      "area-blazor",
      "feature-blazor-wasm",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/20411",
    "body": "We want to load Configuration from the server api and based on this configuration we want to configure our DI. So, we probably need to make a http call. In order to do this http call we need the DI configured so we can get a HttpClient. But DI is not configured, so we can't use HttpClient.\r\n\r\nIt would be nice to use the javascript to make this call, but we can't use IJSRuntime because it is also created after the DI is configured. (#5664, #5664)\r\n\r\nSo, can you provide a nice way that we can load Configuration Options On Application Startup before the DI is configured?\r\n\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/20411/comments",
    "author": "xrkolovos",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2020-04-01T15:33:39Z",
        "body": "@xrkolovos thanks for contacting us.\r\n\r\nYou can new-up an instance of HttpClient and the base url is available on the WebassemblyHostBuilder as part of preview3."
      },
      {
        "user": "javiercn",
        "created_at": "2020-04-01T15:34:06Z",
        "body": "@captainsafia Can you confirm here?"
      },
      {
        "user": "captainsafia",
        "created_at": "2020-04-01T18:11:40Z",
        "body": "Unfortunately, this change is not available in preview3, but it will ship in preview4. The change will allow you to access the `BaseAdress` property from the builder to instantiate an HTTP client (`builders.HostEnvironment.BaseAddress`).\r\n\r\n"
      }
    ]
  },
  {
    "number": 20409,
    "title": "Razor Class Library static files inaccessible in any ASPNETCORE_ENVIRONMENT other than Development",
    "created_at": "2020-04-01T12:27:29Z",
    "closed_at": "2020-04-01T12:33:15Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/20409",
    "body": "Hi,\r\n\r\nI have a Razor Class Library in .NET Core 3.1.0. The RCL has static assets located in wwwroot folder such as js frameworks, css, etc. \r\n\r\nI have a .NET Core 3.1 Web application that references the RCL. When i run the web application the static files within the RCL can be accessed using the path /_content/AreaName/js/...\r\n\r\nThis works fine when then  ASPNETCORE_ENVIRONMENT is Development. If i change it to anything else, e.g. Local, Staging, the web application returns a 404 (Not found) when trying to access the static files.\r\n\r\nIs this an issue/feature?\r\nIs there a workaround?\r\n\r\nAny advice is appreciated.",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/20409/comments",
    "author": "idlemind",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2020-04-01T12:32:57Z",
        "body": "@idlemind thanks for contacting us.\r\n\r\nThe current behavior is by design. RCL is a development time feature, and doesn't exist when the application is published, hence it's only plugged in by default during development.\r\n\r\nIf you want to enable it for a different environment you can call `webHostBuilder.UseStaticWebAssets()` to turn it on unconditionally."
      },
      {
        "user": "idlemind",
        "created_at": "2020-04-01T12:43:22Z",
        "body": "Thank you for the prompt response and workaround."
      }
    ]
  },
  {
    "number": 20306,
    "title": "From 3.1 map routing",
    "created_at": "2020-03-30T10:16:13Z",
    "closed_at": "2020-05-31T20:00:51Z",
    "labels": [
      "question",
      "area-mvc"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/20306",
    "body": "Hello we got an issue that out folders looks like this:\r\n* Areas\r\n  * Basic\r\n   * * Controllers\r\n   * * * Message\r\n   * * * * MessageController.cs\r\n   * * * * AutoReplyController.cs\r\n\r\n\r\nTo access autoreply our routing in MVC looks like:\r\n`routes.MapRoute(\r\n                  name: \"areas\",\r\n                  template: \"{area=Basic}/{controller=Home}/{action=Index}/{id?}/{subid?}\"\r\n                );`\r\n\r\n\r\nAnd in the controller it looks like:\r\n\r\n    [Area(\"Basic\")]\r\n    [Route(\"Basic/Message/AutoReply/[action]\")]\r\n    public class AutoReplyController : MasterController\r\n    {\r\n\r\n\r\nHow do we get this routing with endpoints?\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/20306/comments",
    "author": "MathiasViggo",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2020-03-31T13:06:50Z",
        "body": "@MathiasViggo can you clarify what you are asking?\r\n\r\nAre you asking about how to achieve the same results with attribute routing? You can declare multiple routes in your action, but I'm not sure what you are trying to achieve here."
      },
      {
        "user": "MathiasViggo",
        "created_at": "2020-04-01T09:06:35Z",
        "body": "At the moment we have this, when we tried to go from route to endpoints:\r\n`                endpoints.MapControllerRoute(\r\n                        name: \"default\",\r\n                       pattern: \"{area=Basic}/{controller=Home}/{action=Index}/{id?}/{subid?}\"\r\n                        );`\r\n\r\nBut when i try to access the page:\r\nBasic/Message/Autoreply\r\nIt never reaches the Autoreply controller"
      },
      {
        "user": "ghost",
        "created_at": "2020-05-31T20:00:50Z",
        "body": "Thank you for contacting us. Due to a lack of activity on this discussion issue we're closing it in an effort to keep our backlog clean. If you believe there is a concern related to the ASP.NET Core framework, which hasn't been addressed yet, please file a new issue.\n\nThis issue will be locked after 30 more days of inactivity. If you still wish to discuss this subject after then, please create a new issue!"
      }
    ]
  },
  {
    "number": 20134,
    "title": "Support for Authorization Flow with PKCE",
    "created_at": "2020-03-25T15:58:36Z",
    "closed_at": "2020-03-25T16:12:56Z",
    "labels": [
      "question",
      "area-blazor",
      "feature-blazor-wasm",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/20134",
    "body": "I cannot find a way to configure `CodeChallenge` or `UsePkce` parameter for PKCE auth flow in `Microsoft.AspNetCore.Components.WebAssembly.Authentication.OidcProviderOptions`. Is it possible?\r\nIf not, do you have plans to implement it?\r\n\r\nThanks!\r\nGreat work!\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/20134/comments",
    "author": "javitosanchez",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2020-03-25T16:12:54Z",
        "body": "@javitosanchez thanks for contacting us.\r\n\r\nThe client does this automatically when you set the response type to code."
      }
    ]
  },
  {
    "number": 19891,
    "title": "[Question] Proper way of writing a JSON response in middleware using HttpContext.Response?",
    "created_at": "2020-03-16T17:08:49Z",
    "closed_at": "2020-03-18T07:06:23Z",
    "labels": [
      "question",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved",
      "area-networking"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/19891",
    "body": "```\r\npublic static async Task WriteJsonResponseAsync(this HttpContext context, JsonOptions options, int statusCode, object jsonObject)\r\n{\r\n\t// Serialize using the settings provided\r\n\tusing MemoryStream stream = new MemoryStream();\r\n\tawait JsonSerializer.SerializeAsync(stream, jsonObject, typeof(SomeGenericType), options.JsonSerializerOptions);\r\n\tReadOnlyMemory<byte> readOnlyMemory = new ReadOnlyMemory<byte>(stream.ToArray());\r\n\r\n\t// Set the status code\r\n\tcontext.Response.StatusCode = statusCode;\r\n\r\n\t// Set the content type\r\n\tcontext.Response.ContentType = \"application/json; charset=utf-8\";\r\n\r\n\t// Write the content\r\n\tawait context.Response.Body.WriteAsync(readOnlyMemory);\r\n\tawait context.Response.Body.FlushAsync();\r\n}\r\n```\r\n\r\nIs the above the correct way to do it for UTF8 json content? The `JsonOptions` passed are the default ones used in an ASP.NET Core 3.1 application.\r\n\r\nAlternatively, from IdentityServer's library, do we just do the following:\r\n\r\n```\r\npublic static async Task WriteJsonAsync(this HttpResponse response, string json, string contentType = null)\r\n{\r\n\tresponse.ContentType = (contentType ?? \"application/json; charset=UTF-8\");\r\n\tawait response.WriteAsync(json);\r\n\tawait response.Body.FlushAsync();\r\n}\r\n```\r\n\r\n\r\nI'm not sure which is the more correct way, and which yields the same performance as when ASP.NET Core itself does the heavy lifting (serialization).\r\n\r\nHow is it being done there? Is it using streams like here, or something else entirely? My goal is to do the same heavy-lifting ASP.NET Core 3.1 originally does for serialization of objects.\r\n\r\n\r\nThank you.",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/19891/comments",
    "author": "kikaragyozov",
    "comments": [
      {
        "user": "davidfowl",
        "created_at": "2020-03-16T18:32:21Z",
        "body": "The latter will scale better as content gets larger as you can avoid buffering the entire object in memory first."
      },
      {
        "user": "kikaragyozov",
        "created_at": "2020-03-16T19:49:38Z",
        "body": "@davidfowl Thank you for answering! Is it okay then to use `JsonSerializer.Serialize(Object, Type, JsonSerializerOptions) ` to avoid all of the above streams and what-not in order to create my json string? I'm not sure if that's done in an utf-8 way. The only method that seems to do utf-8 json conversion requires usage of streams?"
      },
      {
        "user": "davidfowl",
        "created_at": "2020-03-17T04:55:10Z",
        "body": "Everything on the JSONSerializer is Utf8 only."
      }
    ]
  },
  {
    "number": 19744,
    "title": "[Question][Blazor] Multiple blazor apps / _Host.cshtml",
    "created_at": "2020-03-10T17:43:39Z",
    "closed_at": "2020-03-12T16:19:27Z",
    "labels": [
      "question",
      "area-blazor",
      "feature-blazor-wasm",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/19744",
    "body": "I am creating system which should display base _Host.cshtml for non-employee users. Base _Host.cshtml has completely different layout, design, css, script files.\r\n\r\n**How to create another like _Host.cshtml file?** Every request starting with \"/admin\" should redirect to this new _Host.cshtml. Also every page will have attribute requesting user policy.\r\n\r\nHow would you solve this? Thanks",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/19744/comments",
    "author": "glararan",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2020-03-11T09:26:28Z",
        "body": "@glararan thanks for contacting us.\r\n\r\n* Create a separate razor page and set the route to \"/Admin\"\r\n* Set the base tag href to \"~/Admin/\"\r\n* Call MapFallbackToPage(\"~/Admin/{*clientroutes:nonfile}\", \"/Admin\")"
      },
      {
        "user": "glararan",
        "created_at": "2020-03-11T09:29:25Z",
        "body": "@javiercn Thanks for reply! You should definitely add this into documentation as an example :)"
      },
      {
        "user": "glararan",
        "created_at": "2020-03-13T15:20:54Z",
        "body": "@javiercn May I ask how should folder structure look like? Kinda figuring out how to get it working. In src directory should be folder \"Admin\"?\r\n\r\nCurrently my file structure looks like\r\nPages/...razor files\r\nPages/Account/..razor files\r\nPages/Admin/Admin.cshtml (page \"/Admin\")\r\nPages/Admin/AdminLayout.razor\r\nPages/Admin/Home/Index.razor (page \"/Admin/Dashboard\")  \r\nPages/Admin/.../...razor files\r\n\r\nNow I get error 500. Not found\r\nPages/Admin/Home/Index.razor page \"/\" result into mismatch. page \"/admin\" results into using _Host.cshtml instead Admin.cshtml\r\n\r\nEDIT: Figured it out.\r\nMoved Pages/Admin/Admin.cshtml to Pages/_Admin.cshtml\r\n\r\nUsed\r\n`MapFallbackToPage(\"~/Admin/{*clientroutes:nonfile}\", \"/_Admin\")`\r\n\r\nPages/Admin/Home/Index.razor\r\n`@page \"/admin\"`"
      },
      {
        "user": "javiercn",
        "created_at": "2020-03-13T15:36:30Z",
        "body": "Pages/Admin/_Host.cshtml for your entry point (set the right href in the base tag) and then you can put .razor pages inside Admin. Like Index.razor and so on."
      }
    ]
  },
  {
    "number": 19669,
    "title": "Blazor Wasm OpenId Connect",
    "created_at": "2020-03-07T01:27:18Z",
    "closed_at": "2020-03-09T12:00:29Z",
    "labels": [
      "question",
      "area-blazor",
      "feature-blazor-wasm",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/19669",
    "body": "Is there any documentation on how to configure a client side Blazor to use authentication and authorization from a token provider like IdentityServer 4?",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/19669/comments",
    "author": "mihaimyh",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2020-03-09T12:00:13Z",
        "body": "@mihaimyh thanks for contacting us.\r\n\r\nWe've actually implemented this in our current milestone and it will be available in the next preview (coming in the following days) so keep an eye on the announcements in the coming weeks.\r\n\r\nHope that helps."
      }
    ]
  },
  {
    "number": 19479,
    "title": "RAZORSDK1006 warning",
    "created_at": "2020-03-01T20:16:34Z",
    "closed_at": "2020-03-02T12:34:42Z",
    "labels": [
      "question",
      "area-mvc"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/19479",
    "body": "### Describe the bug\r\nI have an asp.net project that uses Microsoft.AspNetCore.Mvc package. This generates a compiler warning RAZORSDK1006 warning about Razor language version downgrade. According to the description, this is caused by a reference to Microsoft.AspNetCore.Razor.Design package.\r\n\r\nThis package is referenced by Microsoft.AspNetCore.Mvc package - can it be removed?\r\n\r\n### Further technical details\r\n- Targeting .net core 3.1\r\n- Referenced version of Microsoft.AspnetCore.Mvc is 2.2.0\r\n- IDE is Visual Studio 2019 v16.4.5\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/19479/comments",
    "author": "bstordrup",
    "comments": [
      {
        "user": "rynowak",
        "created_at": "2020-03-01T22:03:36Z",
        "body": "Ideally a 3.1 project wouldn't be referencing MVC 2.2.0 - do you know why that's there? I would try to remove that.\r\n\r\n@pranavkm "
      },
      {
        "user": "bstordrup",
        "created_at": "2020-03-02T06:17:03Z",
        "body": "@rynowak, which version should I be using instead? Microsoft.AspNetCore.Mvc 2.2.0 is the latest available package on NuGet."
      },
      {
        "user": "rynowak",
        "created_at": "2020-03-02T06:22:06Z",
        "body": "Most ASP.NET Core libraries don't ship packages at all as of 3.0 - they are just included in a web project by default.  It should be safe to remove"
      },
      {
        "user": "bstordrup",
        "created_at": "2020-03-02T12:34:42Z",
        "body": "@rynowak, thank you. Removing the packages fixed the issue."
      }
    ]
  },
  {
    "number": 19472,
    "title": "How Can I override the View and use async",
    "created_at": "2020-03-01T08:20:01Z",
    "closed_at": "2020-03-17T15:13:02Z",
    "labels": [
      "question",
      "Needs: Author Feedback",
      "area-mvc"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/19472",
    "body": "In mvc ,I want to override the View() function like this\r\npublic override ViewResult View(string viewName, object model)\r\n\r\nbut it only the synnc version,,How Can I use the async function in it?don't use xxx.Result??????",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/19472/comments",
    "author": "kugarliyifan",
    "comments": [
      {
        "user": "rynowak",
        "created_at": "2020-03-01T22:01:49Z",
        "body": "Can you give us a more complete example of what you're trying to do?"
      }
    ]
  },
  {
    "number": 19463,
    "title": "BuildRenderTree not being called",
    "created_at": "2020-02-29T05:15:56Z",
    "closed_at": "2020-03-01T04:52:19Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/19463",
    "body": "I have a Person.razor component which I wanted to separate the code behind from. After doing so, `BuildRenderTree` method is never called. See below for more information.\r\n\r\n### Customer.razor\r\nThere is no markup intentionally.\r\n\r\n``` C# \r\n@page \"/customer\"\r\n@inherits CustomerBase\r\n```\r\n\r\n### Customer.razor.cs\r\n``` C# \r\n    public class CustomerBase: ComponentBase\r\n    {\r\n        protected override void BuildRenderTree(RenderTreeBuilder builder)\r\n        {\r\n            base.BuildRenderTree(builder);\r\n            builder.AddMarkupContent(0, \"<h1>Person</h1>\");\r\n        }\r\n    }\r\n```",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/19463/comments",
    "author": "yopez83",
    "comments": [
      {
        "user": "rynowak",
        "created_at": "2020-02-29T21:23:48Z",
        "body": "Using `@inherits` in a `.razor` file will inherit from the class you provide, and will **always** override `BuildRenderTree`. \r\n\r\nSo your hierarchy looks like:\r\n\r\n```txt\r\nCustomer::BuildRenderTree(...) (empty)\r\nCustomerBase::BuildRenderTree(...) (overridden by Customer)\r\nComponentBase::BuildRenderTree(...) (abstract)\r\n```\r\n\r\nThe solution to this is just remove `Customer.razor` if you want to define a render method in C#. You can use `[RouteAttribute(...)]` to apply a route."
      },
      {
        "user": "rynowak",
        "created_at": "2020-02-29T21:24:54Z",
        "body": "You also don't need to use inheritance to have a code-behind. Blazor as of 3.1 supports partial classes."
      },
      {
        "user": "yopez83",
        "created_at": "2020-03-01T04:52:12Z",
        "body": "It worked. Thank you @rynowak "
      }
    ]
  },
  {
    "number": 19321,
    "title": "How Can I pass Parent Tag Ref to Child Tag in taghelper",
    "created_at": "2020-02-25T04:59:37Z",
    "closed_at": "2020-02-26T06:12:49Z",
    "labels": [
      "question",
      "area-mvc",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/19321",
    "body": "How Can I pass Parent Tag Ref to Child Tag in taghelper??",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/19321/comments",
    "author": "kugarliyifan",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2020-02-25T07:41:53Z",
        "body": "@kugarliyifan thanks for contacting us.\r\n\r\nI'm not sure if this can be done through the TagHelper context or if it is simply not possible. @NTaylorMullen do you have any idea on how to achieve this?"
      },
      {
        "user": "NTaylorMullen",
        "created_at": "2020-02-25T17:37:16Z",
        "body": "@kugarliyifan `Ref` as in the HTML ref attribute or the actual instance of the parent tag?"
      },
      {
        "user": "kugarliyifan",
        "created_at": "2020-02-26T04:30:22Z",
        "body": "the actual instance of parent tag object\r\n\r\n> @kugarliyifan `Ref` as in the HTML ref attribute or the actual instance of the parent tag?\r\n\r\n"
      },
      {
        "user": "NTaylorMullen",
        "created_at": "2020-02-26T06:12:22Z",
        "body": "> the actual instance of parent tag object\r\n\r\nHmm, out of curiosity why do you want the parent `TagHelper` instance?\r\n\r\nTo do what you're looking for in your parent `TagHelper` have it add itself to the `TagHelperContext.Items` collection and have the child `TagHelper` read it."
      },
      {
        "user": "kugarliyifan",
        "created_at": "2020-02-26T07:05:11Z",
        "body": "emm,,thk ,,I use Items property now"
      }
    ]
  },
  {
    "number": 19114,
    "title": "Client-SignalR on WebAPI without Hub-SignalR in the same solution - how to configure for work? ",
    "created_at": "2020-02-18T07:43:54Z",
    "closed_at": "2020-04-25T20:00:54Z",
    "labels": [
      "question",
      "area-signalr"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/19114",
    "body": "# Issue Title\r\n\r\nClient-SignalR on WebAPI without Hub-SignalR in the same solution - how to configure for work? \r\n\r\n# General\r\nWindows 10\r\ndotnet Core 3.1.1\r\nWebAPI\r\nSignalR \r\n----------\r\nThese are 2 applications Server and WebAPI :\r\nMy architecture has 1) remote WebAPI application and 2) Server that calls WebAPI. They are located at different addresses and perform different tasks. Hub SignalR is located on Server. I need to configure Client on WebAPI so that it informs everyone about the intermediate steps performed so that the server knows.\r\nThe whole day I was looking for how to register Client SignslR as Service (in WebAPI) so that Client SignslR would send messages from Controller on WebAPI to Server (Hub SignalR ).\r\nI would like it to be convenient as with IHubContext, but at least correctly, even if it is not convenient.\r\n\r\nHelp me, plz. Cann't find any sample how use SignalR client on WebAPI\\in controller without Hub in the same project.\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/19114/comments",
    "author": "parad74",
    "comments": [
      {
        "user": "arunranjan1988",
        "created_at": "2020-02-18T11:31:26Z",
        "body": "if  i have load balance then how it works Signal R "
      },
      {
        "user": "BrennanConroy",
        "created_at": "2020-02-18T16:32:35Z",
        "body": "You need to create the connection on the WebAPI and manage passing it to your controller yourself. There is no built in server like `IHubContext` for this. You would need to create your own custom service that wraps a HubConnection if you'd like something similar.\r\n\r\npseudo code:\r\n```c#\r\nclass MyService\r\n{\r\n    private readonly HubConnection _connection;\r\n    public MyService()\r\n    {\r\n        _connection = new HubConnectionBuilder().WithUrl(\"someurl\").Build();\r\n       _connection.On(...);\r\n    }\r\n\r\n    public Task StartAsync()\r\n    {\r\n        return _connection.StartAsync();\r\n    }\r\n\r\n    public Task SendMessage(string message)\r\n    {\r\n        return _connection.SendAsync(\"method\", message);\r\n    }\r\n}\r\n```"
      },
      {
        "user": "parad74",
        "created_at": "2020-02-22T16:24:57Z",
        "body": "BrennanConroy , thank you for confirming that this must works. It helped me.\r\nI continued testing.\r\n\r\nAnd got so result\r\nMy mistake was that in Action in  Controller I returned not  async Task\r\n//NOT WORK\r\n```\r\n[HttpGet]\r\npublic Processes GetProcesses ()\r\n{\r\n//and I called everything synchronously\r\n...\r\n_hubChatConnection.StartAsync();\r\n_hubChatConnection.InvokeAsync(\"SendMessage\", \"_hubSignalRRepository\", \"Processes\");\r\n...\r\n}\r\n```\r\nno messages-error were issued in VisualStudio\r\n//==========================\r\n//Need change to async\\await !\r\n//WORK\r\n```\r\n[ServiceFilter(typeof(ControllerSignalRChatHubFilter))]\r\n[HttpGet]\r\npublic async Task<Processes> GetProcesses()\r\n{\r\n\tProcesses processes = new Processes();\r\n\tprocesses = this._processRepository.GetProcesses();\r\n\ttry\r\n\t{\r\n\tawait this._hubSignalRRepository.HubChatConnection.StartAsync();\r\n\tawait this._hubSignalRRepository.HubChatConnection.InvokeAsync(\"SendMessage\", \"GetProcesses\", \"Count = \" + processes.Count);\r\n\t}\r\n\tcatch (Exception ecx) { this._logger.LogError(ecx.Message, ecx); }\r\n\tfinally { await this._hubSignalRRepository.HubChatConnection.StopAsync();}\r\n\treturn processes;\r\n}\r\n\r\n// add ActionFilter\r\n ControllerSignalRChatHubFilter : Attribute, IActionFilter\r\n...\r\npublic void OnActionExecuting(ActionExecutingContext context)\r\n{\r\n\ttry\r\n\t{\r\n\tif (_hubSignalRRepository.HubChatConnection == null)\r\n\t{\r\n\t_hubSignalRRepository.HubChatConnection = new HubConnectionBuilder()\r\n\t  .WithUrl(_chatHubAddress)\r\n\t  .Build();\r\n\t\t\t\r\n\t_hubSignalRRepository.HubChatConnection.On<string, string>(SignalRHubFunction.ReceiveMessage, (user, message) =>\r\n\t{\r\n\t_logger.LogInformation(\"OnActionExecuting.ControllerSignalRChatHubFilter\" + \" create SignalR Cient \");\r\n\t});\r\n}\r\n}\r\ncatch (Exception ex)\r\n{\r\n}\r\n}\r\n\r\n```\r\n"
      },
      {
        "user": "parad74",
        "created_at": "2020-02-22T16:30:02Z",
        "body": "It works, but I still have question where to do StartAsync \\ StopAsync ?\r\nIn every Action ? This is good practice? "
      },
      {
        "user": "BrennanConroy",
        "created_at": "2020-02-25T16:22:02Z",
        "body": "> In every Action ? This is good practice?\r\n\r\nNo, you should probably do it once at the beginning of your application."
      },
      {
        "user": "ghost",
        "created_at": "2020-04-25T20:00:54Z",
        "body": "Thank you for contacting us. Due to a lack of activity on this discussion issue we're closing it in an effort to keep our backlog clean. If you believe there is a concern related to the ASP.NET Core framework, which hasn't been addressed yet, please file a new issue.\n\nThis issue will be locked after 30 more days of inactivity. If you still wish to discuss this subject after then, please create a new issue!"
      }
    ]
  },
  {
    "number": 18978,
    "title": "Equivalent of the MVC command url.content in Blazor.net webassembly (client side)",
    "created_at": "2020-02-12T15:43:26Z",
    "closed_at": "2020-02-12T15:45:56Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/18978",
    "body": " @foreach (var item in Model)\r\n    {\r\n        string myImgDest = \"~/Images/\" + item.FieldName+ \".jpg\";\r\n @if (item.IndVreComp == 1) --- Based on some condition , i am changing the url src\r\n                {\r\n                    <img src=\"@Url.Content(myImgDest )\" alt=\"my text\" title=\"my title\" />\r\n                }\r\ni am dynamically constructing the \"src\" part of the html <img src in MVC4.\r\nNow i am trying to find the equivalent of the same in **Blazor webassembly client side**. What is the equivalent of this **.url.content**",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/18978/comments",
    "author": "sodeshpa",
    "comments": [
      {
        "user": "rynowak",
        "created_at": "2020-02-12T15:56:25Z",
        "body": "Not sure if you closed this because you found the answer, but here it is...\r\n\r\nIn Blazor all of the templates set `<base href=\"...some path...\" />`. You don't need a feature like `~/`, you can just use a normal relative path `Images/pizza.jpg` and the browser will do the right thing."
      }
    ]
  },
  {
    "number": 18763,
    "title": "Missing ITransportHeartbeat for SignalR Core",
    "created_at": "2020-02-03T21:18:27Z",
    "closed_at": "2020-04-06T20:00:55Z",
    "labels": [
      "question",
      "area-signalr"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/18763",
    "body": "Hi folks!\r\n\r\nFirst issue here, tried to put it in the right place but not quite sure. Apologize if I done it wrong!\r\n\r\nSo, we were looking into monitoring signalR alive connections and found out a legacy code of ours where there was a `ITransportHeartbeat` in signalR for .net framework that was pretty useful for checking hearbeats.\r\n\r\nIs there anything like that in signalR for .net core? Or any approach recommended to check connection heartbeats?",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/18763/comments",
    "author": "mviegas",
    "comments": [
      {
        "user": "analogrelay",
        "created_at": "2020-02-03T22:27:36Z",
        "body": "There isn't a global hook for all connections, but you can hook the heartbeat for each connection with (pseudo-)code like this in your Hub's `OnConnectedAsync`:\r\n\r\n```csharp\r\nvar heartbeat = Context.Features.Get<IConnectionHeartbeatFeature>();\r\nheartbeat.OnHeartBeat(MyAction, /* a state object that will be passed to MyAction, can be null */);\r\n```"
      },
      {
        "user": "mviegas",
        "created_at": "2020-02-04T08:57:19Z",
        "body": "Thanks @anurse. I'll go give it a try later on and come back with some feedback!"
      },
      {
        "user": "mviegas",
        "created_at": "2020-02-05T17:35:47Z",
        "body": "Hey @anurse! We just tried a couple of implementations, but there's something that's still not clear for us: \r\n\r\nWhen is this `OnHeartbeat` method called? We were not able to track that yet."
      },
      {
        "user": "analogrelay",
        "created_at": "2020-02-05T22:19:59Z",
        "body": "> When is this `OnHeartbeat` method called? We were not able to track that yet.\r\n\r\nYou mean the function you provide to `OnHeartbeat`? It should be called at a regular interval (about once a second). Can you post a sample showing how you're registering the callback?"
      },
      {
        "user": "mviegas",
        "created_at": "2020-02-06T13:21:15Z",
        "body": "I did not asked properly, sorry. \r\n\r\nI meant this regular interval that the callback is called. Is it hardcoded by something (if so, by what) or is it configurable?"
      },
      {
        "user": "analogrelay",
        "created_at": "2020-02-06T18:09:43Z",
        "body": "It's hardcoded right now, you can't configure it. Can you provide more details on what you're trying to do in the heartbeat and how you'd like to configure this? You can always create your own heartbeat."
      },
      {
        "user": "mviegas",
        "created_at": "2020-02-06T19:02:22Z",
        "body": "**Our scenario:**\r\n\r\n- Various _clients_: application installed in multiple desktops\r\n- One _server_: a signalR hub in a .NET Core 3.1 webapp with Azure SignalR Service and a Bus to consume some queue.\r\n\r\n**The usage:**\r\n\r\n- When a new signalR connection happens on the _server_, the hub `OnConnected` method does the following:\r\n  - it identifies who connected, i.e. which _client_.\r\n  - once the _client_ is identified, o new queue consumer is created to send to that specific _client_ some messages published to its specific queue. \r\n  - that done, the _client_ receives via signalR each specific message published on its respective queue and can process them.\r\n- Infos about each connected _client_ are persisted in a cache in our _server_, so we can keep track of who is on/off and which _signalR connectionId_ each _client_ has.\r\n- Hub's `OnConnected` method checks our cache and calls `.Abort()` to stop the _client_ connection if a connection for that specific _client_ already exists and is active.\r\n\r\n**Our problem:**\r\n - Due some network latency and windows hibernation, some _clients_ were creating multiple signalR connections with the _server_. The old connections are not dropped, but multiple new are being randomly created. We could measure that by checking the queue consumer count for each _client_: there was supposed to be only one, but there were many of them. And they are only created by the _server_ if a successfull connection with the _client_ is stablished. We also confirmed the number of connections on Azure SignalR Service dashboard.\r\n\r\n**With the OnHeartbeat we were able to:**\r\n- Create a `LatestPing` variable in our cache in order to know when a connection was last active. Checking that, we can clear dispose/disable inactive queue consumers for these old connections, by running a scheduled background service which checks our cache.\r\n\r\n**What is still going on:**\r\n- With the `OnHeartbeat` we are able to manage these connections that are idle for a while, but when some _client_ computer randomly hibernates, some strange thing happens: new connections are created in batch of 3, 4 and our server does not block/abort them."
      },
      {
        "user": "ghost",
        "created_at": "2020-04-06T20:00:55Z",
        "body": "Thank you for contacting us. Due to a lack of activity on this discussion issue we're closing it in an effort to keep our backlog clean. If you believe there is a concern related to the ASP.NET Core framework, which hasn't been addressed yet, please file a new issue.\n\nThis issue will be locked after 30 more days of inactivity. If you still wish to discuss this subject after then, please create a new issue!"
      }
    ]
  },
  {
    "number": 18623,
    "title": "In services.AddMVC(); JsonSerializerOptions.PropertyNamingPolicy is set as JsonNamingPolicy.CamelCase without any hint",
    "created_at": "2020-01-28T13:42:07Z",
    "closed_at": "2020-01-29T17:56:19Z",
    "labels": [
      "question",
      "area-mvc",
      "Needs: Attention :wave:"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/18623",
    "body": "As Title, it may be a pitfall when try to deserialize the Json stream manually.",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/18623/comments",
    "author": "lhrbu",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2020-01-28T17:52:31Z",
        "body": "Thanks for contacting us.\r\nWhat type of `hint` are you referring to? You can always set this explicitly the way you want.\r\n"
      },
      {
        "user": "lhrbu",
        "created_at": "2020-01-29T02:09:17Z",
        "body": "eh, I mean why not just leave the explicitly confiure codes as below in dotnet new project template, so that one can get the point with least surperise.\r\n`services.AddMvc().AddJsonOptions(options => \r\n                options.JsonSerializerOptions.PropertyNamingPolicy =JsonNamingPolicy.CamelCase);`"
      },
      {
        "user": "mkArtakMSFT",
        "created_at": "2020-01-29T17:56:19Z",
        "body": "Thanks for the details. This is not something we plan to make the default.\r\nWe try to avoid adding default configuration to the Startup as that is unnecessary code and community in general likes the current pattern."
      }
    ]
  },
  {
    "number": 18620,
    "title": "Bug on the onclick event",
    "created_at": "2020-01-28T12:13:26Z",
    "closed_at": "2020-01-28T17:45:37Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/18620",
    "body": "I have a blazor server side application(and gRPC server) that has a timer which is second by second updating a page variable with data(int variable) in a gRPC service variable, and makes an invoke state as changed afterwards. \r\nI have a button that is used to increment on the int variable gRPC client, that will get back later after some processing with the number after the increment.\r\nIn the button to make that call i placed  @onclick=\"IncrementNumber(item.Name)\"\r\nWhat happens is that the code is not triggred by the button click but by the timer invoke state changed that is called second by second. So i cannot use the button to increment the number, but the button click is some how being executed because the call is being made every second to the gRPC client that in turn is returning the updated number. This shouldn't occur. The onClick should only run with a click!\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/18620/comments",
    "author": "Ricardoaraujo00",
    "comments": [
      {
        "user": "Ricardoaraujo00",
        "created_at": "2020-01-28T12:52:48Z",
        "body": "Only way i got this to work:\r\n`<button class=\"square\"  @onclick=\"()=>IncrementNumber(item.Name)\">@item.ActualNumber</button>`\r\n\r\nWithout that anonymous function i would have to make a method that returns a EventCallback, but this way i don't have to. If the method didn't had a signature i could do it like int the button counter in the default template, but this way i can't do it like that.\r\n\r\nThe method, just for exemplification.\r\n```\r\npublic void IncrementNumber(string name)\r\n    {\r\n        jsRuntime.InvokeAsync<string>(\"console.log\", \"incrementing on  \" + name);\r\n        person.FirstOrDefault(x=>x.Name==name).ActualNumber = GreeterService1.IncrementNumber(name).Result;\r\n    }\r\n```"
      },
      {
        "user": "mkArtakMSFT",
        "created_at": "2020-01-28T17:45:37Z",
        "body": "Thanks for contacting us, @Ricardoaraujo00.\r\nWe're glad that you've found the error and fixed your code already.\r\nGiven that your example results in a compilation error, we don't think there is any other action for us to take here.\r\nEvent handlers take an event callback and Blazor knows how to convert a method group to an event callback. But when you add a parameter, you're now doing a method invocation, which is not returning an event callback and results in a compilation error. "
      }
    ]
  },
  {
    "number": 18475,
    "title": "Custom router in Razor pages",
    "created_at": "2020-01-21T13:42:45Z",
    "closed_at": "2020-03-24T08:01:57Z",
    "labels": [
      "question",
      "area-mvc"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/18475",
    "body": "In MVC I have a custom router where I look up what controller and action the request should end up in. Is it possible to use a custom router in Razor pages?\r\n\r\nThis is basically how I do it in MVC.\r\n\r\n```c#\r\n    public class DefaultRouter : IRouter\r\n    {\r\n        public DefaultRouter() {\r\n        }\r\n        public VirtualPathData GetVirtualPath(VirtualPathContext context)\r\n        {\r\n            throw new System.NotImplementedException();\r\n        }\r\n\r\n        public Task RouteAsync(RouteContext context)\r\n        {\r\n            context.RouteData.Values[\"Controller\"] = \"Hello\";\r\n            context.RouteData.Values[\"Action\"] = \"World\";\r\n            return Task.CompletedTask;\r\n        }\r\n    }\r\n```\r\n\r\nIs it possible to set some route value to send the request to a specific `PageModel` in Razor pages?",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/18475/comments",
    "author": "marcuslindblom",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2020-01-21T14:02:03Z",
        "body": "@marcuslindblom thanks for contacting us.\r\n\r\n@rynowak or @pranavkm can you help here?\r\n\r\nIt would help if you describe in more detail what you are trying to accomplish so that we might be able to provide an alternative option in case it is not possible."
      },
      {
        "user": "marcuslindblom",
        "created_at": "2020-01-21T14:13:23Z",
        "body": "@javiercn Basically I have a `IDictionary<string, TrieNode>` where the key is the a friendly url and the `TrieNode` has information about the controller and `Id` of the entity to load from the database. The urls are hierarchical and does not have the name of the controller because that information is in the `TrieNode`. A url is constructed by the `h1` on the page and can look something like this. `/always-interactive-lightning-fast-design`. In my router I get the `TrieNode` that matches the path, sets the `Controller` and `Action` in the route data. Now, I would like to do the same thing for Razor pages and route the request to the correct `Page` based on the information in my dictionary."
      },
      {
        "user": "javiercn",
        "created_at": "2020-01-21T14:35:00Z",
        "body": "@marcuslindblom you could try setting the \"page\" in the `RouteData.Values` to the page path, like \"/Index.cshtml\"\r\n\r\nI believe that should work, otherwise I'm not sure what other options exists, but @rynowak will know."
      },
      {
        "user": "marcuslindblom",
        "created_at": "2020-01-21T14:56:51Z",
        "body": "@javiercn @rynowak I tried something like this but it does not execute my router at all.\r\n```c#\r\nusing System.Threading.Tasks;\r\nusing Microsoft.AspNetCore.Builder;\r\nusing Microsoft.AspNetCore.Hosting;\r\nusing Microsoft.AspNetCore.Routing;\r\nusing Microsoft.Extensions.DependencyInjection;\r\nusing Microsoft.Extensions.Hosting;\r\n\r\nnamespace Test2\r\n{\r\n  public class Startup\r\n    {\r\n        public void ConfigureServices(IServiceCollection services)\r\n        {\r\n            services.AddRazorPages();\r\n        }\r\n\r\n        public void Configure(IApplicationBuilder app, IWebHostEnvironment env)\r\n        {\r\n            if (env.IsDevelopment())\r\n            {\r\n                app.UseDeveloperExceptionPage();\r\n            }\r\n\r\n            app.UseHttpsRedirection();\r\n\r\n            app.UseRouting()\r\n                .UseRouter(options => new DefaultRouter(options.DefaultHandler));\r\n\r\n            app.UseEndpoints(endpoints =>\r\n            {\r\n                endpoints.MapRazorPages();\r\n            });\r\n        }\r\n    }\r\n    public class DefaultRouter : IRouter\r\n    {\r\n        private readonly IRouter _next;\r\n        public DefaultRouter(IRouter next) {\r\n            _next = next;\r\n        }\r\n        public VirtualPathData GetVirtualPath(VirtualPathContext context)\r\n        {\r\n            throw new System.NotImplementedException();\r\n        }\r\n\r\n        public async Task RouteAsync(RouteContext context)\r\n        {\r\n            RouteData routeData = new RouteData();\r\n            routeData.Values[\"page\"] = \"Index\";\r\n            context.RouteData = routeData;\r\n            await _next.RouteAsync(context);\r\n        }\r\n    }\r\n}\r\n```"
      },
      {
        "user": "marcuslindblom",
        "created_at": "2020-01-21T15:18:39Z",
        "body": "I forgot to say that I'm developing a CMS so perhaps you can understand more what I'm trying to achieve. I think it's basically a wildcard route where I look for my \"page\" in the database, route it correctly if it exists on the given path, or else I want to forward the request to the next registered router or endpoint. "
      },
      {
        "user": "javiercn",
        "created_at": "2020-01-21T15:55:31Z",
        "body": "@mrpmorris this is not a Blazor question but an ASP.NET Core routing question. That advice doesn't apply here."
      },
      {
        "user": "mrpmorris",
        "created_at": "2020-01-21T15:56:49Z",
        "body": "> \r\n> \r\n> @mrpmorris this is not a Blazor question but an ASP.NET Core routing question. That advice doesn't apply here.\r\n\r\n@javiercn I thought I had the area-blazor filter on, sorry. Deleted :)"
      },
      {
        "user": "mkArtakMSFT",
        "created_at": "2020-01-21T18:00:48Z",
        "body": "@rynowak can you please look into this one? Thanks!"
      },
      {
        "user": "ghost",
        "created_at": "2020-03-24T08:01:56Z",
        "body": "Thank you for contacting us. Due to a lack of activity on this discussion issue we're closing it in an effort to keep our backlog clean. If you believe there is a concern related to the ASP.NET Core framework, which hasn't been addressed yet, please file a new issue.\n\nThis issue will be locked after 30 more days of inactivity. If you still wish to discuss this subject after then, please create a new issue!"
      }
    ]
  },
  {
    "number": 18465,
    "title": "I cannot pass data from background method to blazor page",
    "created_at": "2020-01-20T17:28:12Z",
    "closed_at": "2020-03-24T08:02:00Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/18465",
    "body": "I need need to pass data from a background method that receives data by gRPC, and i need the Blazor page to be updated as soon as information arrives. Like a triggred event.\r\n\r\nRight now i can pass the data through a singleton, wich is not good, but the scooped class cannot be accessed anywhere outside the blazor page. I can also do it with a static class, would that be better?\r\n\r\nThe other problem with this approach is that the UI doesn't get updated when the values change. Only when i navigate forth and back in the browser is when the data passed is displayed. Wich is not good also.\r\n\r\nIs there a way to access the injected and instantiated class of a page and throw in there the new values and get the UI updated?\r\n\r\nI tried with an event  Action in the singleton, triggered by the assessor set, but i can't get to bound a trigger to that event on the singleton to the Blazor page to get the UI updated.\r\n\r\nHow can i do this, anyone knows??",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/18465/comments",
    "author": "Ricardoaraujo00",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2020-01-21T14:09:22Z",
        "body": "@Ricardoaraujo00 thanks for contacting us.\r\n\r\nWe're not sure what you are trying to accomplish here, but here are some options.\r\n\r\nWe're not sure if you are trying to share data that is specific to a given user or global. If the data is global then you can use a singleton and inject that in your component, add an event to your class and subscribe on the component to update the UI.\r\n\r\nIf the data is not global, create a subscription before rendering the page from the server for the first time and pass in a subscription ID to your server-side application as a parameter.\r\n\r\nThen on your application, use that id to register a callback with the singleton for the data that is specific to that user.\r\n\r\nHope this helps."
      },
      {
        "user": "dannygrieve",
        "created_at": "2020-01-21T14:12:51Z",
        "body": "What?"
      },
      {
        "user": "Ricardoaraujo00",
        "created_at": "2020-01-21T16:37:23Z",
        "body": "Hi @javiercn \r\nIn this case the data is global. Please understand that i am a rookie at this and it's not very easy for my to understand some things.\r\n\r\n> We're not sure if you are trying to share data that is specific to a given user or global. If the data is global then you can use a singleton and inject that in your component, add an event to your class and subscribe on the component to update the UI.\r\nI was trying to do just that, but i cannot inject the thread safe singleton in the ConfigureServices on the startup.cs. The compiler throws an error that it has not a valid constructor. So i instantiate it in the Program.Main(). \r\nThe sigleton:\r\n```\r\npublic class ThreadSafeSingletonString\r\n    {\r\n        private static ThreadSafeSingletonString _instance;\r\n        private static readonly object _padlock = new object();\r\n        private ThreadSafeSingletonString() \r\n        {\r\n  \r\n        }\r\n\r\n        public static ThreadSafeSingletonString Instance\r\n        {\r\n            get\r\n            {\r\n                if (_instance == null)\r\n                {\r\n                    lock(_padlock)\r\n                    {\r\n                        if (_instance == null)\r\n                        {\r\n                            _instance = new ThreadSafeSingletonString();\r\n                            _instance.order=\"\";\r\n                        }\r\n                    }\r\n                    \r\n                }\r\n                return _instance;\r\n            }\r\n            set\r\n            {\r\n                _instance.order = value.order;\r\n                _instance.NotifyDataChanged();\r\n            }\r\n        }\r\n        public string order { get; set; }\r\n\r\n        public event Action OnChange;\r\n\r\n        private void NotifyDataChanged() => OnChange?.Invoke();\r\n    }\r\n}\r\n```\r\nThe instantiation:\r\npublic static void Main(string[] args)\r\n    ```\r\n    {\r\n            var tss = ThreadSafeSingletonString.Instance;\r\n            tss.order = \"nome\";\r\n            Console.WriteLine(tss.order);\r\n            CreateHostBuilder(args).Build().Run();\r\n        }\r\n```\r\nIn the Greeter service i give the sigleton new data with this two lines:\r\n```\r\nThreadSafeSingletonString tss =  ThreadSafeSingletonString.Instance;\r\n            tss.order = clientName+\". A nova fila passada por um sigleton é \" + queueNames[0] +\" é daqui\";\r\n```\r\n\r\n```\r\nThe Blazor page:\r\n\r\n```\r\n@page \"/greeter\"\r\n@using BlazorApp1.Data\r\n@inject GrpcService1.GreeterService GreeterService1\r\n@inject AppData appdata1\r\n\r\n\r\n<h1>Grpc Connection</h1>\r\n\r\n<input type=\"text\" @bind=\"@Name\" />\r\n<button @onclick=\"@SayHello\">SayHello</button>\r\n<p>Fila recebida: @Greetmsg</p>\r\n<p>Thread safe sigleton: @threadSafeSingleton.order</p>\r\n\r\n@code {\r\n    string Name;\r\n    string Greetmsg;\r\n    public string fromrefresh;\r\n    ThreadSafeSingletonString threadSafeSingleton = ThreadSafeSingletonString.Instance;\r\n\r\n    protected override void OnInitialized()\r\n    {\r\n        threadSafeSingleton.OnChange += updateOrder();\r\n    }\r\n\r\n    public System.Action updateOrder()\r\n    {\r\n        this.fromrefresh = threadSafeSingleton.order + \" que vem.\";\r\n        Console.WriteLine(\"Passou pelo UpdateName\");\r\n        this.StateHasChanged();\r\n        return StateHasChanged;\r\n    }\r\n\r\n    async Task SayHello()\r\n    {\r\n        this.Greetmsg = await this.GreeterService1.SayHello(this.Name);\r\n    }\r\n\r\n}\r\n```\r\nThe **threadSafeSingleton.OnChange += updateOrder();** doesn't bind to the singleton event.\r\nOr it does but the **public System.Action updateOrder()** isn't executed...\r\n\r\nIf i replace the code in page by the code below it works, but it's not as sleek as it should be.. It was better a reaction to the change event in the singleton.\r\n\r\n```\r\n@code {\r\n    string Name;\r\n    string Greetmsg;\r\n    public string fromrefresh;\r\n    private string Time { get; set; }\r\n    ThreadSafeSingletonString threadSafeSingleton = ThreadSafeSingletonString.Instance;\r\n\r\n    protected override void OnInitialized()\r\n    {\r\n        var timer = new System.Threading.Timer((_) => {\r\n            Time = DateTime.UtcNow.ToString();\r\n            fromrefresh = threadSafeSingleton.order;\r\n            InvokeAsync(StateHasChanged);\r\n        }, null, 0, 1000);\r\n\r\n    }\r\n```"
      },
      {
        "user": "ghost",
        "created_at": "2020-03-24T08:01:59Z",
        "body": "Thank you for contacting us. Due to a lack of activity on this discussion issue we're closing it in an effort to keep our backlog clean. If you believe there is a concern related to the ASP.NET Core framework, which hasn't been addressed yet, please file a new issue.\n\nThis issue will be locked after 30 more days of inactivity. If you still wish to discuss this subject after then, please create a new issue!"
      }
    ]
  },
  {
    "number": 18309,
    "title": "Access IHost across application classes globally",
    "created_at": "2020-01-13T07:30:02Z",
    "closed_at": "2020-03-24T08:02:03Z",
    "labels": [
      "question",
      "area-hosting",
      "area-networking"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/18309",
    "body": "Below is an example code for CreateHostBuilder. Asp.net core host takes care of resolving dependency through constructor and middleware.\r\n\r\nIf we want to resolve it for our custom classes which does not get invoked through controller or the main method, how can we get the instance of the host across applications. Is it a good way to store it as a static variable Or there is some better way to do that?\r\n\r\n```\r\npublic class Program\r\n{\r\n    public static async Task Main(string[] args)\r\n    {\r\n        var host = CreateHostBuilder(args).Build();\r\n\r\n        using (var serviceScope = host.Services.CreateScope())\r\n        {\r\n            var services = serviceScope.ServiceProvider;\r\n\r\n            try\r\n            {\r\n                var serviceContext = services.GetRequiredService<MyScopedService>();\r\n                // Use the context here\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                var logger = services.GetRequiredService<ILogger<Program>>();\r\n                logger.LogError(ex, \"An error occurred.\");\r\n            }\r\n        }\r\n\r\n        await host.RunAsync();\r\n    }\r\n\r\n    public static IHostBuilder CreateHostBuilder(string[] args) =>\r\n        Host.CreateDefaultBuilder(args)\r\n            .ConfigureWebHostDefaults(webBuilder =>\r\n            {\r\n                webBuilder.UseStartup<Startup>();\r\n            });\r\n}\r\n```\r\n\r\n\r\nI need to call var serviceContext = services.GetRequiredService<MyScopedService>();\r\nat various places in my code which does not get called from the controller. \r\nThis is required for my Console applications and Worker Services.\r\n\r\nIs it possible to access the IHost globally and the same instance that got created in startup without keeping that in a static variable in a static class?\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/18309/comments",
    "author": "satyajit-behera",
    "comments": [
      {
        "user": "davidfowl",
        "created_at": "2020-01-13T07:32:25Z",
        "body": "> Is it possible to access the IHost globally and the same instance that got created in startup without keeping that in a static variable in a static class?\r\n\r\nNo. You need to store it in a static if you want to access it later. There can be many hosts running side by side in the same process and we generally avoid statics like that. You can however create your own.\r\n\r\nWhat does your logic look like?"
      },
      {
        "user": "satyajit-behera",
        "created_at": "2020-01-13T07:36:37Z",
        "body": "In the startup, I am storing the serviceProvider in a static variable.\r\n\r\n```\r\npublic static IServiceProvider ServiceProvider \r\n        {\r\n            get \r\n            {\r\n                if (_ServiceProvider == null) throw new NullReferenceException(\"ServiceProvider cannot be null\");\r\n\r\n                return _ServiceProvider;\r\n            }\r\n            set \r\n            { \r\n                _ServiceProvider = value; \r\n            } \r\n        }\r\n```\r\n\r\nAnd whereever required, I am calling this method and other serviceProvider methods.\r\n\r\n`ServiceProvider.GetService<TService>();`\r\n\r\n\r\nIs this approach correct, or there is some better approach?\r\n\r\nThanks for the quick response."
      },
      {
        "user": "ghost",
        "created_at": "2020-03-24T08:02:02Z",
        "body": "Thank you for contacting us. Due to a lack of activity on this discussion issue we're closing it in an effort to keep our backlog clean. If you believe there is a concern related to the ASP.NET Core framework, which hasn't been addressed yet, please file a new issue.\n\nThis issue will be locked after 30 more days of inactivity. If you still wish to discuss this subject after then, please create a new issue!"
      }
    ]
  },
  {
    "number": 18298,
    "title": "Interop and object properties, initial letter casing, bug or by design?",
    "created_at": "2020-01-12T04:57:54Z",
    "closed_at": "2020-01-13T10:58:52Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/18298",
    "body": "I have this in Javascript:\r\n\r\n```\r\n            fttvPlayer.interopTest = function (m) {\r\n                const instance = fttvPlayer.dotnetInstance;\r\n                var issues = instance.invokeMethod('GetIssues');\r\n                console.log(\"In JS, now have \", issues);\r\n                var sendBack = [{ Property1: \"I am Property1\", Property2: 100 }, { property1: \"I am property, a lowercase property\", property2: 99 }];\r\n                console.log(\"in js, about to send back\", sendBack);\r\n                instance.invokeMethod(\"ReceiveIssues\", sendBack);\r\n            };\r\n```\r\n\r\nAnd these are the C# Methods:\r\n\r\n```\r\n    [JSInvokable]\r\n    public object[] GetIssues()\r\n    {\r\n        var x = issues.Select(r =&gt; new { r.IssueId, DisplayStart = r.DisplayStart.TotalSeconds, DisplayEnd = r.DisplayEnd.TotalSeconds, r.Answer }).ToArray();\r\n        Console.WriteLine(\"Sending from C# to JS\");\r\n        Console.WriteLine(System.Text.Json.JsonSerializer.Serialize(x));\r\n        return x;\r\n    }\r\n\r\n    [JSInvokable]\r\n    public void ReceiveIssues(object[] x)\r\n    {\r\n        Console.WriteLine(\"Got back in C# from JS\");\r\n        Console.WriteLine(System.Text.Json.JsonSerializer.Serialize(x));\r\n\r\n    }\r\n```\r\n\r\nHere is the console output:\r\n\r\n```\r\nWASM: Sending from C# to JS\r\nWASM: [{\"IssueId\":10425,\"DisplayStart\":2,\"DisplayEnd\":6,\"Answer\":true},{\"IssueId\":10426,\"DisplayStart\":7,\"DisplayEnd\":12,\"Answer\":false},{\"IssueId\":10427,\"DisplayStart\":15,\"DisplayEnd\":23,\"Answer\":false},{\"IssueId\":10428,\"DisplayStart\":25,\"DisplayEnd\":29,\"Answer\":true},{\"IssueId\":10429,\"DisplayStart\":31,\"DisplayEnd\":36,\"Answer\":false}] \r\n\r\nIn JS, now have \r\n0: {issueId: 10425, displayStart: 2, displayEnd: 6, answer: true}\r\n1: {issueId: 10426, displayStart: 7, displayEnd: 12, answer: false}\r\n2: {issueId: 10427, displayStart: 15, displayEnd: 23, answer: false}\r\n3: {issueId: 10428, displayStart: 25, displayEnd: 29, answer: true}\r\n4: {issueId: 10429, displayStart: 31, displayEnd: 36, answer: false}\r\nlength: 5\r\n__proto__: Array(0)\r\n\r\nin js, about to send back\r\n0: {Property1: \"I am Property1\", Property2: 100}\r\n1: {property1: \"I am property, a lowercase property\", property2: 99}\r\nlength: 2\r\n__proto__: Array(0)\r\n\r\nGot back in C# from JS\r\nWASM: [{\"Property1\":\"I am Property1\",\"Property2\":100},{\"property1\":\"I am property, a lowercase property\",\"property2\":99}]\r\n```\r\n\r\nI'm curious why the property names from C# to JS change from the initial capping in C# to lowercase first letter in JS, but when I send an object back with lowercase properties, those are not uppercased. (If I send the same data back and forth, it stays lowercase in C# on the return, so it's not round-trippable, I set up an example that shows the initial caps are preserved when going from JS to C#.\r\n\r\nI'm wondering why this happens, and if this is maybe a bug. If not, what's the technical reason for it? It took me a while to figure out why my JS logic wasn't working, because it was looking up values by property name and the names didn't match.\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/18298/comments",
    "author": "InsidiousForce",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2020-01-13T10:58:40Z",
        "body": "@LilMinmax thanks for contacting us.\r\n\r\nThe objects are being deserialized as JsonElement instances under the hood, so the behavior you see is by design. JsonElement is a C# representation of the json payload you sent and that has mixed casing."
      },
      {
        "user": "InsidiousForce",
        "created_at": "2020-01-15T04:47:42Z",
        "body": "One last question @javiercn - I'd expect that by default I could round trip data, and there's nothing about JSON that requires the initial character to be lowercase. i.e. this is perfectly valid JSON:\r\n\r\n```\r\n{\r\n\t\"UpperCase\": 100,\r\n\t\"lowerCase\": 200\r\n}\r\n```\r\n\r\nWhen I go from JS to C# everything is as expected. When I go from C# to JS the initial cap situation comes up. Why is that by design vs being able to round trip data?\r\n"
      },
      {
        "user": "InsidiousForce",
        "created_at": "2020-01-15T04:53:45Z",
        "body": "Also, in the JsonElement etc documentation, I see this:\r\n\r\n\"By default, property names and dictionary keys are unchanged in the JSON output, including case.\"\r\n\r\nThis serialization might be using JsonNamingPolicy.CamelCase which seems incorrect.\r\n\r\n"
      }
    ]
  },
  {
    "number": 18263,
    "title": "MapDynamicPageRoute<> How to use?",
    "created_at": "2020-01-10T14:23:47Z",
    "closed_at": "2020-03-24T08:02:09Z",
    "labels": [
      "question",
      "area-mvc"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/18263",
    "body": "I tried using the folowing in startup configure:\r\n``` \r\napp.UseEndpoints(endpoints =>\r\n{\r\n    endpoints.MapDynamicPageRoute<RouteTranslator>(\"{area}/{page}\");\r\n    endpoints.MapDynamicPageRoute<RouteTranslator>(\"{page}\");\r\n});\r\n   ```\r\n\r\nAnd this is the RouteTranslate class:\r\n```\r\n    public class RouteTranslator : DynamicRouteValueTransformer\r\n    {\r\n        public override ValueTask<RouteValueDictionary> TransformAsync(HttpContext httpContext,\r\n            RouteValueDictionary values)\r\n        {\r\n            if (values.ContainsKey(\"area\"))\r\n            {\r\n                switch (values[\"area\"].ToString().ToLower())\r\n                {\r\n                    case \"testalias\":\r\n                        values[\"area\"] = \"test\";\r\n                        break;\r\n                }\r\n            }\r\n\r\n            return new ValueTask<RouteValueDictionary>(values);\r\n        }\r\n\r\n    }\r\n```\r\n\r\nThe page is created as Areas\\Test\\Pages\\Index.cshtml\r\n\r\nGoing to (host)/test/index works\r\ngoing to (host)/testalias/index does not work.\r\n\r\nAm I missing something or is there a bug in this feature?",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/18263/comments",
    "author": "jhermsen",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2020-01-10T15:36:08Z",
        "body": "@jhermsen thanks for contacting us.\r\n\r\n@rynowak @JamesNK do we have docs about this?"
      },
      {
        "user": "ghost",
        "created_at": "2020-03-24T08:02:08Z",
        "body": "Thank you for contacting us. Due to a lack of activity on this discussion issue we're closing it in an effort to keep our backlog clean. If you believe there is a concern related to the ASP.NET Core framework, which hasn't been addressed yet, please file a new issue.\n\nThis issue will be locked after 30 more days of inactivity. If you still wish to discuss this subject after then, please create a new issue!"
      }
    ]
  },
  {
    "number": 18257,
    "title": "Access UIHint attribute from TagHelper",
    "created_at": "2020-01-10T06:06:07Z",
    "closed_at": "2020-01-10T15:49:32Z",
    "labels": [
      "question",
      "area-mvc",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/18257",
    "body": "I use this code in my `TagHelper`:\r\n```c#\r\nModelMetadata metadata = _htmlHelper.MetadataProvider.GetMetadataForProperty(type, Property);\r\n```\r\nbut the `ModelMetadata` does not seem to have eg the `UIHintAttribute`. How can I access this from my helper? I would like to read the presentation layer and controlParameters.",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/18257/comments",
    "author": "marcuslindblom",
    "comments": [
      {
        "user": "marcuslindblom",
        "created_at": "2020-01-10T08:25:35Z",
        "body": "It seems to work like this:\r\n```c#\r\nvar uiHint = ((DefaultModelMetadata)metadata).Attributes.Attributes.OfType<UIHintAttribute>().FirstOrDefault();\r\n```\r\n... but is this the way to do it?"
      },
      {
        "user": "javiercn",
        "created_at": "2020-01-10T15:49:32Z",
        "body": "@marcuslindblom thanks for contacting us.\r\n\r\nI don't see any issue with the way you are doing it (other than the downcast).\r\n\r\nYou can probably get it from `metadata.TypeOrUnderlyingType.Attributes` if you wanted to avoid the downcast.\r\n\r\nHope that helps."
      }
    ]
  },
  {
    "number": 18244,
    "title": "Is there a way in Blazor (interop or other) to show/hide an input date element on selecting a particular option in a select list",
    "created_at": "2020-01-09T19:56:11Z",
    "closed_at": "2020-01-10T17:12:58Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/18244",
    "body": "I have a razor component (Blazor) code snippet as follows:\r\n```\r\n<div class=\"form-group\">\r\n                        <label for=\"status\">Status</label>\r\n                        <InputSelect id=\"AssignmentStatus\" class=\"form-control\" \r\n                                     @bind-Value=\"AssignmentObject.Status\">\r\n                            <option value=\"\">Select</option>\r\n                            @foreach (var status in AssignmentStatusList)\r\n                            {\r\n                                <option value=\"@status\">\r\n                                    @status\r\n                                </option>\r\n                            }\r\n                        </InputSelect>    \r\n </div>\r\n <div class=\"form-group\">\r\n                        <label for=\"dueDate\">Due Date</label>\r\n                        <input type=\"date\" id=\"DueDate\" name=\"math\"  @bind- \r\n                            value=\"@AssignmentObject.DueDate\" />\r\n  </div>\r\n@code{\r\n  List<string> AssignmentStatusList = new List<string>() { \"New\", \"In Progress\", \"Completed\" };\r\n}\r\n```\r\n\r\nWhat I want to do is to hide the input date element if the status \"Completed\" is selected. \r\nThanks in advance.\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/18244/comments",
    "author": "krchome",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2020-01-10T15:42:32Z",
        "body": "Thanks for contacting us @krchome .\r\n\r\nIt looks like this is a question about how to use ASP.NET Core. While we do our best to look through all the issues filed here, to get a faster response we suggest posting your questions to StackOverflow using the asp.net-core-blazor tag.\r\n\r\nYou could use an if around the input type \r\n```razor\r\n@if(AssignmentObject.Status == \"your-option\")\r\n{\r\n<label for=\"dueDate\">Due Date</label>\r\n                        <input type=\"date\" id=\"DueDate\" name=\"math\"  @bind- \r\n                            value=\"@AssignmentObject.DueDate\" />\r\n}\r\n```"
      }
    ]
  },
  {
    "number": 18190,
    "title": "Dotnet Core CLI - Attempt to generate a new proejct results in an error Couldn't find an installed template",
    "created_at": "2020-01-08T15:52:05Z",
    "closed_at": "2020-01-10T15:44:35Z",
    "labels": [
      "question",
      "area-mvc",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/18190",
    "body": "### Describe the bug\r\nWe attempt to generate a new project from the dotnet core cli using the following command:\r\n`dotnet new webapi -au Individual -o webapi_sample_3_1` and this results in the following error:\r\n```\r\nCouldn't find an installed template that matches the input, searching online for one that does...\r\nMatches from template source: NuGet\r\n-----------------------------------\r\nTemplate name \"ASP.NET Core Web API\" (webapi) from author \"Microsoft\" in pack Microsoft.DotNet.Web.ProjectTemplates.2.1\r\n    To use this template, run the following command and try again:\r\n        dotnet new -i Microsoft.DotNet.Web.ProjectTemplates.2.1::2.1.14\r\n\r\nTemplate name \"ASP.NET Core Web API\" (webapi) from author \"Microsoft\" in pack Microsoft.DotNet.Web.ProjectTemplates.2.2\r\n    To use this template, run the following command and try again:\r\n        dotnet new -i Microsoft.DotNet.Web.ProjectTemplates.2.2::2.2.8\r\n\r\nTemplate name \"ASP.NET Core Web API\" (webapi) from author \"Microsoft\" in pack Microsoft.DotNet.Web.ProjectTemplates.3.0\r\n    To use this template, run the following command and try again:\r\n        dotnet new -i Microsoft.DotNet.Web.ProjectTemplates.3.0::3.0.1\r\n\r\n```\r\n\r\n### To Reproduce\r\nRun the following command using dotnet core sdk 3.1.100\r\n``` Bash\r\ndotnet new webapi -au Individual -o webapi_sample_3_1\r\n```\r\n\r\n### Further technical details\r\n- ASP.NET Core version: 3.1.100\r\n- Include the output of `dotnet --info`\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.15\r\n OS Platform: Darwin\r\n RID:         osx.10.15-x64\r\n Base Path:   /usr/local/share/dotnet/sdk/3.1.100/\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  2.1.103 [/usr/local/share/dotnet/sdk]\r\n  2.1.402 [/usr/local/share/dotnet/sdk]\r\n  2.1.403 [/usr/local/share/dotnet/sdk]\r\n  2.1.503 [/usr/local/share/dotnet/sdk]\r\n  2.1.504 [/usr/local/share/dotnet/sdk]\r\n  2.1.505 [/usr/local/share/dotnet/sdk]\r\n  2.2.105 [/usr/local/share/dotnet/sdk]\r\n  3.0.100 [/usr/local/share/dotnet/sdk]\r\n  3.1.100 [/usr/local/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.4 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.5 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.7 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.8 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.9 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.3 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.4 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.5 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.7 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.8 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.9 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.0 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.6 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.4 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.8 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.13 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.14 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n```\r\n- The IDE (VS / VS Code/ VS4Mac) you're running on, and it's version **N/A**\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/18190/comments",
    "author": "antoinecfmws",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2020-01-10T15:44:35Z",
        "body": "@antoinecfmws thanks for contacting us.\r\n\r\nThere is no web api template supporting individual auth (Identity) at this time."
      }
    ]
  },
  {
    "number": 18176,
    "title": "TempDateAttribute doesn't work with private properties",
    "created_at": "2020-01-07T21:28:23Z",
    "closed_at": "2020-01-08T17:45:38Z",
    "labels": [
      "question",
      "area-mvc",
      ":heavy_check_mark: Resolution: Answered"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/18176",
    "body": "I defiend this property in a Razor Page:\r\n```C#\r\n[TempData] DateTime Date { get; set; }\r\n\r\npublic void OnGet()\r\n{\r\n  Date = DateTime.Now;\r\n}\r\n```\r\n\r\nI forgot to use the `public` modifier in the Date property definition, so it became `private`, and the `TempDateAttribute` had no effect!\r\n\r\nI think you should give an error or a warning about this, because I lost some time trying to find out why the `TempData[\"Date\"]` returns null!\r\nThe TempDateAttribute documentation also say nothing about this, which should be fixed.\r\n\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/18176/comments",
    "author": "VBAndCs",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2020-01-08T16:09:12Z",
        "body": "@VBAndCs thanks for contacting us.\r\n\r\nMVC doesn't do reflection over private members (I don't think we do it anywhere) and that's not something that is likely to change.\r\n\r\nI don't think we would write an analyzer for this as each analyzer has an impact on performance however minimal it is, and this is a well-known MVC pattern. You could choose to write one for your projects or as an external library if you wanted to.\r\n\r\nI would suggest you declare your properties using the `prop` snippet that will give you a public property you can simply Tab through."
      },
      {
        "user": "VBAndCs",
        "created_at": "2020-01-08T16:20:26Z",
        "body": "Thanks for your reply.\r\nI want also to ask: Why there is no SessionAttribute to bind properties to Session state?"
      },
      {
        "user": "mkArtakMSFT",
        "created_at": "2020-01-08T17:45:38Z",
        "body": "This is not a common pain point so we don't plan to implement it.\r\n> I want also to ask: Why there is no SessionAttribute to bind properties to Session state?\r\n\r\n"
      },
      {
        "user": "VBAndCs",
        "created_at": "2020-01-08T17:53:46Z",
        "body": "@mkArtakMSFT\r\nJust for reporting:\r\nWe also can mark full-implemented properties with the TempDateAttribute and it will have no effect, and we don't get any error or warning.\r\nThanks."
      }
    ]
  },
  {
    "number": 17886,
    "title": "Blazor Binary message size send from server to client increases",
    "created_at": "2019-12-14T21:30:39Z",
    "closed_at": "2019-12-16T17:23:37Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/17886",
    "body": "### Describe the bug\r\nLet's say we have a list of items. When clicking on a item we want to display a content for that item. We setup an unordered list and when adding an item to list we create a div element that holds an item content but it's visibility is hidden until a user click on a list item. Clicking on another list item causes a current div to hide itself (not remove from DOM but set display attribute to none) and a new div corresponding to a list item to become visible. \r\nWhen adding new list items and clicking on them a binary message size increases. I've read through the documentation and watched Blazor in more depth talk and I can't figure out why? \r\n\r\nLooking at developer tools only thing that changes is display attribute on only two divs, no matter the current list items count. \r\nIf the diffing algorithm works as advertised I would expect the binary message received from server to have a constant size because only two attributes change or am I missing something\r\n\r\nEDIT: \r\nIf you comment out a second foreach loop and click on the li item binary message size increases when adding more items to the list. \r\nWhat is going on? I understand that a click event triggers a render but there are no changes on the DOM and the diffing algorithm shouldn't find any differences between current and new DOM state.\r\n\r\n### To Reproduce\r\nHere is a simple code to reproduce the behaviour\r\n\r\n```\r\n<button @onclick=\"AddTenMore\">Add ten items</button>\r\n<br/>\r\n<br/>\r\n<div style=\"width:400px; float:left\">\r\n    <ul>\r\n        @foreach (var item in Items)\r\n        {\r\n            <li @onclick=\"@(()=>SetActiveItem(item))\">@item.Id</li>\r\n        }\r\n    </ul>\r\n</div>\r\n<div style=\"width:400px; margin-left:250px\">\r\n    @foreach(var item in Items)\r\n    {\r\n        <div @key=\"item.Id\" style=\"display:@GetVisibility(item)\">\r\n            <div>This is content for item <b>@item.Id</b></div>\r\n        </div>\r\n    }\r\n</div>\r\n<br/>\r\n\r\n@code {\r\n    public List<ListItem> Items { get; set; } = new List<ListItem>();\r\n\r\n    private ListItem ActiveItem { get; set; }\r\n\r\n    public void AddTenMore()\r\n    {\r\n        for(var i = 0; i < 10; i++)\r\n        {\r\n            Items.Add(new ListItem()\r\n            {\r\n                Id = Guid.NewGuid().ToString()\r\n            });\r\n        }\r\n    }\r\n\r\n    public string GetVisibility(ListItem item)\r\n    {\r\n        if (ActiveItem == null)\r\n            return \"none\";\r\n        return item == ActiveItem ? \"block\" : \"none\";\r\n    }\r\n\r\n    public void SetActiveItem(ListItem item)\r\n    {\r\n        ActiveItem = item;\r\n    }\r\n\r\n    public class ListItem\r\n    {\r\n        public string Id { get; set; }\r\n    }\r\n}\r\n```\r\n\r\n\r\n### Further technical details\r\n- ASP.NET Core 3.1 in VS\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/17886/comments",
    "author": "partyelite",
    "comments": [
      {
        "user": "monterolebronhg",
        "created_at": "2019-12-15T01:50:04Z",
        "body": "The size is increasing because each time the items are rendered, a new delegate is being created to call the method SetActiveItem.\r\n\r\nIn your case, when you add 10 more items, the delegate in the onclick event is being created for all the items again, not just for the added elements."
      },
      {
        "user": "monterolebronhg",
        "created_at": "2019-12-15T01:57:45Z",
        "body": "This solution works for me:\r\n\r\n```\r\n<button @onclick=\"AddTenMore\">Add ten items</button>\r\n<br />\r\n<br />\r\n<div style=\"width:400px; float:left\">\r\n    <ul>\r\n        @foreach (var item in Items)\r\n        {\r\n            <li @key=\"item.Id\" @onclick=\"item.Action\">@item.Id</li>\r\n        }\r\n    </ul>\r\n</div>\r\n<div style=\"width:400px; margin-left:250px\">\r\n    @foreach (var item in Items)\r\n    {\r\n        <div @key=\"item.Id\" style=\"display:@GetVisibility(item)\">\r\n            <div>This is content for item <b>@item.Id</b></div>\r\n        </div>\r\n    }\r\n</div>\r\n<br />\r\n\r\n@code {\r\n    public List<ListItem> Items { get; set; } = new List<ListItem>();\r\n\r\n    private ListItem ActiveItem { get; set; }\r\n\r\n    public void AddTenMore()\r\n    {\r\n        for (var i = 0; i < 10; i++)\r\n        {\r\n            var item = new ListItem();\r\n\r\n            item.Id = Guid.NewGuid().ToString();\r\n            item.Action = () =>\r\n            {\r\n                SetActiveItem(item);\r\n            };\r\n\r\n            Items.Add(item);\r\n        }\r\n    }\r\n\r\n    public string GetVisibility(ListItem item)\r\n    {\r\n        if (ActiveItem == null)\r\n            return \"none\";\r\n        return item == ActiveItem ? \"block\" : \"none\";\r\n    }\r\n\r\n    public void SetActiveItem(ListItem item)\r\n    {\r\n        ActiveItem = item;\r\n    }\r\n\r\n    public class ListItem\r\n    {\r\n        public string Id { get; set; }\r\n        public Action Action { get; set; }\r\n    }\r\n}\r\n```"
      },
      {
        "user": "jspuij",
        "created_at": "2019-12-15T09:59:24Z",
        "body": "This is because the compiler generates an inner class, that is instantiated at the start of the foreach loop (the nearest scope)  to capture the variables for the lambda:\r\n\r\n```\r\n\r\n[CompilerGenerated]\r\nprivate sealed class <>c__DisplayClass0_0\r\n{\r\n\tpublic ListItem item;\r\n\r\n\tpublic Counter <>4__this;\r\n\r\n\tinternal void <BuildRenderTree>b__0()\r\n\t{\r\n\t\t<>4__this.SetActiveItem(item);\r\n\t}\r\n}\r\n\r\n```\r\nBlazor need to keep references to which methods should be called on callback from JS. In this case this will be the `<BuildRenderTree>b__0()` method on an instance of `<>c__DisplayClass0_0` that is recreated at each render.\r\nThe workaround is the solution as the method is now on the ListItem instance. It does not change anymore on every rerender.\r\n\r\n"
      },
      {
        "user": "jspuij",
        "created_at": "2019-12-15T10:13:23Z",
        "body": "And this is the code in IL where a new instance is created inside the loop and subsequently the <>4__this field and item field are set on the instance:\r\n```\r\n// loop start (head: IL_0131)\r\nIL_00ab: newobj instance void WebApplication2.Pages.Counter/'<>c__DisplayClass0_0'::.ctor()\r\nIL_00b0: stloc.1\r\nIL_00b1: ldloc.1\r\nIL_00b2: ldarg.0\r\nIL_00b3: stfld class WebApplication2.Pages.Counter WebApplication2.Pages.Counter/'<>c__DisplayClass0_0'::'<>4__this'\r\nIL_00b8: ldloc.1\r\nIL_00b9: ldloca.s 0\r\nIL_00bb: call instance !0 valuetype [System.Collections]System.Collections.Generic.List`1/Enumerator<class WebApplication2.Pages.Counter/ListItem>::get_Current()\r\nIL_00c0: stfld class WebApplication2.Pages.Counter/ListItem WebApplication2.Pages.Counter/'<>c__DisplayClass0_0'::item\r\n```"
      },
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-12-16T17:23:37Z",
        "body": "Thanks for contacting us. We believe that the question you've raised have been answered. If you still feel a need to continue the discussion, feel free to reopen it and add your comments."
      }
    ]
  },
  {
    "number": 17847,
    "title": "[FromRoute] binding and Route Template. How to avoid Route Template ?",
    "created_at": "2019-12-13T06:58:22Z",
    "closed_at": "2019-12-13T13:46:18Z",
    "labels": [
      "question",
      "area-mvc",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/17847",
    "body": "When I set [FromRoute] Model, I must set template matching for model binding to works . I would like to avoid template set. Is it possible without template? \r\n\r\n[HttpGet(“Student/{ID}/{Name}”)]\r\npublic string Student([FromRoute]Student s)\r\n{\r\n   \r\n}\r\n\r\nWithout Template\r\n\r\n[HttpGet(“Student”)]\r\npublic string Student([FromRoute]Student s)\r\n{\r\n   \r\n}\r\n\r\nClass Student \r\n{\r\n   ID\r\n   Name\r\n}\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/17847/comments",
    "author": "Ellaiyaraja",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2019-12-13T13:46:18Z",
        "body": "@Ellaiyaraja thanks for contacting us.\r\n\r\nThe behavior you are observing is by design. If you use [FromRoute] it implies that the values for binding to that type come from the route hence they need to be part of the route template.\r\n\r\nIt doesn't make sense to have [FromRoute] without having a matching template for it.\r\n\r\nHope that helps.\r\n\r\nI'm closing this issue as the question has been asnwered."
      }
    ]
  },
  {
    "number": 17845,
    "title": "Class`s namespace in library in name of library`s default namespace not others.",
    "created_at": "2019-12-13T06:23:23Z",
    "closed_at": "2019-12-13T10:27:09Z",
    "labels": [
      "question",
      "feature-platform",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved",
      "area-networking"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/17845",
    "body": "like `OptionsConfigurationServiceCollectionExtensions`  class in `Microsoft.Extensions.Options.ConfigurationExtensions`,why the class`s namespace was _Microsoft.Extensions.DependencyInjection_ and not the 'Microsoft.Extensions.Options.ConfigurationExtensions'?\r\nit has the following confusing:\r\n1:may cause the developer hard to find the real class`s dll in the namespace`s dll.\r\n2:may lead the project`s developer all free to use other`s namespace and may be in a mess in manager of the class`s or library`s namespace.\r\nSo does it mean that the namespace such as this is what we disucssed and all agree to do like this?",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/17845/comments",
    "author": "cjmld5",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2019-12-13T10:26:55Z",
        "body": "@xyz0822 thanks for contacting us.\r\n\r\nThis has been a convention since the inception of asp.net core. We do put some types in special namespaces to support discovery within your startup class without having to pollute Startup.cs with a separate namespace per used primitive.\r\n\r\nThat improves the main use case for these types which is within the app configuration in Startup.cs\r\n\r\n/cc: @davidfowl in case he wants to add something :)"
      }
    ]
  },
  {
    "number": 17795,
    "title": "Blazor: Control how StateHasChanged batches updates to client",
    "created_at": "2019-12-11T23:35:50Z",
    "closed_at": "2019-12-12T17:34:27Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/17795",
    "body": "Blazor server side - .NET Core 3.1 \r\n\r\nI am receiving information in a background thread (socket), and am rendering the information through a Blazor component.  As the frequency of information from the background thread increases, and I issue `StateHasChanged` in my component to reflect the new state on the screen, the results are very \"janky\".  From a high-level, it really just seems like the Blazor internals is buffering a number of states before they get set out to the client.\r\n\r\nIs there any way to force the Blazor/SignalR pipeline to force an update to the client, to avoid what appears to be batching?",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/17795/comments",
    "author": "ghost",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2019-12-12T09:56:44Z",
        "body": "@aaronhudon-ts thanks for contacting us.\r\n\r\nI'm not sure what you mean by \"janky\" as in it might not be updating often enough or it might be updating too often.\r\n\r\nIf it's the first case, we likely send the data as soon as the component gets rendered unless we are already in the middle of a render, in which case the update gets batched with other components update.\r\n\r\nIt might be that you are updating the client too fast and rendering gets paused until the client has acknowledged the render. For that situation you can set CircuitOptions.MaxBufferedUnacknowledgedRenderBatches to a higher value and check if that fixes your issue. \r\n\r\nBe aware that this implies a trade-off between security and responsiveness, so set it to the lowest value that meets your experience and be aware that a higher value means that more memory might be used potentially by individual circuits on peak loads."
      }
    ]
  },
  {
    "number": 17764,
    "title": "How can I access from AuthorizeRouteView.NotAuthorized the url or name of a component .",
    "created_at": "2019-12-11T08:31:14Z",
    "closed_at": "2019-12-12T00:10:27Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/17764",
    "body": "How can I access from AuthorizeRouteView.NotAuthorized the url or name of a page component from which I'm being redirected to a Login component. In other words, when an unauthenticated user tries to access a page component with the Authorize attribute, he should be redirected to a Login component. The code to navigate to the  Login component resides within the AuthorizeRouteView.NotAuthorized property thus:\r\n\r\n        <AuthorizeRouteView RouteData=\"@routeData\" \r\n                                    DefaultLayout=\"@typeof(MainLayout)\">\r\n                <NotAuthorized>\r\n                       NavigationManager.NavigateTo(\"Login\");\r\n                 </NotAuthorized>\r\n                <Authorizing>\r\n                    Wait...\r\n                </Authorizing>\r\n          </AuthorizeRouteView>\r\n\r\nNow, what I want to pass with the login route is the return url; that is the url from which the user is redirected, so that if the login succeed, I can redirect the user to the the page he wanted to access. I could do it, but as shown below, but it smells as a workaround, and I want to know if Blazor has a dedicated feature for this purpose, which I believe many users will need without resorting to workarounds.  This is the code that is supposed to do the job:\r\n    \r\n     @{\r\n          var returnUrl = routeData.PageType.Name.Equals(\"Index\") ? null : routeData.PageType.Name;\r\n                           \r\n          var str = returnUrl == null ? $\"Login/Index\" : $\"Login/{returnUrl}\";\r\n\r\n           NavigationManager.NavigateTo(str);\r\n     }\r\n \r\nNote: routeData.PageType.Name returns values such as Counter and FetchData, which is fine and I can use it as the return url. But it also returns Index, which is not so fine, because I can't use Index as a url...\r\nThis \"Login/Counter\" works, and this \"Login/FetchData\" aslo works, but this \"Login/Index\" does not exist.\r\n\r\nNote also that in the Login component, I define a parameter Property which will accept the return url value passed to the Login component. \r\n\r\nThis should be a common scenario, and that feature is much needed unless I've missed something. Thanks.   ",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/17764/comments",
    "author": "enetstudio",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2019-12-11T11:03:00Z",
        "body": "@enetstudio thanks for contacting us.\r\n\r\nYou could write a \"Redirect\" component and use NavigaionManager.Uri to get the current URI, and then redirect appropriately."
      },
      {
        "user": "enetstudio",
        "created_at": "2019-12-12T00:07:44Z",
        "body": "Thank you very much for your quick and immensely  helpful response. I was well aware of NavigaionManager.Uri property, but I thought that I could not get the current uri as I wrongly believed that the page I was trying to access no longer exists, as a redirection to the App component has occurred. But I guess that  the App component ( and the Router embedded within) are not part of the routing. They are the routing agent themselves, and as long as no new routing (to a routable component)  has taken place, the current uri is that of the page I was trying to access (say, the FetchData page with the Authorize attribute). Am I right in my assumption ? Anyhow I did what you've suggested and it works great. Once again, many thanks..."
      }
    ]
  },
  {
    "number": 17755,
    "title": "Unable to asynchronously load data into Blazor components",
    "created_at": "2019-12-10T22:57:29Z",
    "closed_at": "2019-12-11T17:22:12Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/17755",
    "body": "I started using Blazor recently and was trying to figure out how to asynchronously load data onto the page. Normally I would do this with ajax in javascript, put up a loading message or something and render the data from the server when it was ready. This functionality is suppose to be easily achievable with `OnInitializedAsync`. But regardless of my attempts the page always loads synchronously. Clicking the tab causes the browser to wait until the page is fully loaded from the server. I thought I was doing something wrong with my code, so I decided to load up the default Blazor Server App project and even that is failing to do what its supposed to. The code below is from the FetchData page of the blazor default project, I tweaked the number of elements to render from 5 to 5000 for longer delays to test this.\r\n\r\n_FetchData.razor_\r\n\r\n```\r\n@page \"/fetchdata\"\r\n\r\n@using BlazorApp1.Data\r\n@using System.Diagnostics\r\n@inject WeatherForecastService ForecastService\r\n\r\n<h1>Weather forecast</h1>\r\n\r\n<p>This component demonstrates fetching data from a service.</p>\r\n\r\n@if (forecasts == null)\r\n{\r\n    <p><em>Loading...</em></p>\r\n}\r\nelse\r\n{\r\n    <table class=\"table\">\r\n        <thead>\r\n            <tr>\r\n                <th>Date</th>\r\n                <th>Temp. (C)</th>\r\n                <th>Temp. (F)</th>\r\n                <th>Summary</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            @foreach (var forecast in forecasts)\r\n            {\r\n                <tr>\r\n                    <td>@forecast.Date.ToShortDateString()</td>\r\n                    <td>@forecast.TemperatureC</td>\r\n                    <td>@forecast.TemperatureF</td>\r\n                    <td>@forecast.Summary</td>\r\n                </tr>\r\n            }\r\n        </tbody>\r\n    </table>\r\n}\r\n\r\n@code {\r\n\tprivate WeatherForecast[] forecasts;\r\n\r\n\tprotected override async Task OnInitializedAsync()\r\n\t{\r\n\t\tforecasts = await ForecastService.GetForecastAsync(DateTime.Now);\r\n\t}\r\n}\r\n```\r\n\r\n_WeatherForecastService.cs_\r\n\r\n```\r\nusing System;\r\nusing System.Linq;\r\nusing System.Threading.Tasks;\r\n\r\nnamespace BlazorApp1.Data\r\n{\r\n    public class WeatherForecastService\r\n    {\r\n        private static readonly string[] Summaries = new[]\r\n        {\r\n            \"Freezing\", \"Bracing\", \"Chilly\", \"Cool\", \"Mild\", \"Warm\", \"Balmy\", \"Hot\", \"Sweltering\", \"Scorching\"\r\n        };\r\n\r\n        public Task<WeatherForecast[]> GetForecastAsync(DateTime startDate)\r\n        {\r\n            var rng = new Random();\r\n            return Task.FromResult(Enumerable.Range(1, 5000).Select(index => new WeatherForecast\r\n            {\r\n                Date = startDate.AddDays(index),\r\n                TemperatureC = rng.Next(-20, 55),\r\n                Summary = Summaries[rng.Next(Summaries.Length)]\r\n            }).ToArray());\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n\r\nMy expectation was that the `Loading...` text in FetchData.razor is supposed to display until the call `ForecastService.GetForecastAsync(DateTime.Now)` completes. After which the page re-renders and shows the table with the data. But when clicking the FetchData tab in the app, the browser hangs and waits for the code to fully execute. I'm running this in VS 2019 on Windows 10. Am I missing something? Shouldn't `Loading...` show while the async function executes?",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/17755/comments",
    "author": "k05mang",
    "comments": [
      {
        "user": "YordanYanakiev",
        "created_at": "2019-12-11T08:04:33Z",
        "body": "Maybe it is connected to lack of actual multithreading in Blazor."
      },
      {
        "user": "willdean",
        "created_at": "2019-12-11T08:56:50Z",
        "body": "The problem you're seeing is not with Blazor, it's that `GetForecastAsync` isn't actually asynchronous, so if you increase the `Enumerable.Range` size, it just blocks for longer.\r\n\r\nIf, instead of increasing the size of the enumerable, you change it to this:\r\n\r\n```\r\n        public async Task<WeatherForecast[]> GetForecastAsync(DateTime startDate)\r\n        {\r\n            await Task.Delay(5000);\r\n            var rng = new Random();\r\n            return Enumerable.Range(1, 5).Select(index => new WeatherForecast\r\n            {\r\n                Date = startDate.AddDays(index),\r\n                TemperatureC = rng.Next(-20, 55),\r\n                Summary = Summaries[rng.Next(Summaries.Length)]\r\n            }).ToArray();\r\n        }\r\n```\r\n\r\nYou'll see the effect you're expecting.  In reality, if `GetForecastAsync` was waiting on an async call to a database or a HTTP service, then this would work out OK.\r\n\r\nMaybe the template should be better in this regard?"
      },
      {
        "user": "mrpmorris",
        "created_at": "2019-12-11T09:02:14Z",
        "body": "If this is server-side blazor then I think the prerender will wait for the init code to complete before sending your initial html.\r\n\r\nIf you want to see UI before the days loads, put the call in OnAfterRender when firstRender == true"
      },
      {
        "user": "javiercn",
        "created_at": "2019-12-11T11:08:42Z",
        "body": "@mrpmorris answer is correct. Prerendering will always wait for the async work to complete before producing the HTML output so that it can produce meaningful results. The alternative suggested is a valid option to avoid delaying the rendering until the content has loaded."
      }
    ]
  },
  {
    "number": 17739,
    "title": "Blazor Select binding doesn't bind initial value",
    "created_at": "2019-12-10T17:28:54Z",
    "closed_at": "2019-12-10T18:16:29Z",
    "labels": [
      "question",
      "area-blazor",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/17739",
    "body": "### Describe the bug\r\nIn s/s Blazor, a bound variable which is itself initialised to null does not reflect the initial state of a select box.\r\nThis bug is #10481 and possibly #9716 but these have been closed as dups or fixed, without it actually being fixed.\r\nI'm going to describe it again: I'm seeing it in 3.1, so it's definitely still around.\r\n\r\n### To Reproduce\r\n\r\n* Create a default server-side Blazor project in VS (ASP.Net Core 3.1, VS 16.4)\r\n* On some page of the demo app (I use the counter page) add the following markup:\r\n```\r\n<select @bind=\"SelectionValue\">\r\n    <option>Option A</option>\r\n    <option>Option B</option>\r\n</select>\r\n<button @onclick=\"TestClick\">Test Click</button>\r\n```\r\nand the following code\r\n```\r\n    string SelectionValue {get;set;}\r\n\r\n    void TestClick()\r\n    {\r\n        Console.WriteLine($\"Selection: '{SelectionValue}'\");\r\n    }\r\n```\r\n\r\n* Start the application in such a way as to be able to see the console\r\n* Navigate to the page but don't touch the select box (it will be showing \"Option A\")\r\n* Click on the \"Test Click\" button\r\n* Observe that the bound variable is null (i.e. you get `Selection: ''` printed to the console)\r\n* The only way to actually get \"Option A\" is to change the selection to Option B and then change it back.\r\n\r\nI don't need a work around (it's easy), but this behaviour doesn't feel like the 'principle of least surprise' - it's counter-intuitive that you wouldn't get the displayed value of the selection box in the bound variable.\r\nThe fact that the bug's been closed as fixed/dup previously makes me think this wasn't the original intention that it should work like this.\r\n\r\n### Further technical details\r\n- ASP.NET Core version 3.1.100\r\n- The IDE  VS16.4 on Win10\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/17739/comments",
    "author": "willdean",
    "comments": [
      {
        "user": "SteveSandersonMS",
        "created_at": "2019-12-10T17:50:13Z",
        "body": "This is behaving as expected. Using `@bind` on an input/select writes to your model only when the \"change\" event occurs. It doesn't write to the model just because a `@bind` exists.\r\n\r\nIn this scenario, you shouldn't have the initial value of `SelectionValue` be something that can't be represented by the dropdown, because then you will have this inconsistent state until the user changes the dropdown value. Instead, set the initial value of `SelectionValue` to correspond to one of the entries in the dropdown, and then everything will be consistent.\r\n\r\nHope that makes sense."
      },
      {
        "user": "willdean",
        "created_at": "2019-12-10T18:16:29Z",
        "body": "Thanks Steve."
      }
    ]
  },
  {
    "number": 17731,
    "title": "about name of area attribute case sensitive",
    "created_at": "2019-12-10T09:46:54Z",
    "closed_at": "2019-12-17T20:46:54Z",
    "labels": [
      "question",
      "area-mvc",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/17731",
    "body": "### Is your feature request related to a problem? Please describe.\r\nI am using asp.net core 3.1，create a Area called Admin，I created a homecontroller with the area attribute name set to admin，when i debug with windows，it's ok，but i publish to linux,it's bad。\r\nI know that Linux is case sensitive，but i am browser access case insensitive.\r\n\r\n### Describe the solution you'd like\r\nWhether area name should be case insensitive.\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/17731/comments",
    "author": "whyfate",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2019-12-11T11:32:55Z",
        "body": "@hryh thanks for contacting us.\r\n\r\nWhat you are likely experiencing is an issue when trying to find the view. I would recommend you make the casing of the Area be the same as the one in the folder. Another possibility is that we are lowercasing all the file paths and that might require you to use lowercase letters for area names.\r\n\r\n@pranavkm do you have any thoughts here?"
      },
      {
        "user": "pranavkm",
        "created_at": "2019-12-17T20:46:54Z",
        "body": "As @javiercn noted, case sensitivity typically comes from the OS's file lookup. With runtime compilation, MVC relies on the operating system to perform view lookups. A mismatch in case would result in failure to lookup in a case sensitive OS like Linux. Preserving case consistency across controllers, actions and view file names would be the way to go."
      }
    ]
  },
  {
    "number": 17661,
    "title": "OnAfterRenderAsync still called twice on 3.0.0-preview9.19465.2",
    "created_at": "2019-12-06T16:28:30Z",
    "closed_at": "2019-12-10T17:43:54Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/17661",
    "body": "### Describe the bug\r\nUsing server-side prerendering, if you have the following `OnAfterRenderAsync`:\r\n\r\n```\r\nprotected override async Task OnAfterRenderAsync(bool firstRender)\r\n{\r\n\tif (firstRender)\r\n\t{\r\n\t\tawait MyTask();\r\n\t\tConsole.WriteLine(\"FirstRender\");\r\n\t}\r\n\r\n\tConsole.WriteLine(\"OnAfterRenderAsync\");\r\n}\r\n```\r\n\r\nThen \"OnAfterRenderAsync\" is still written to the console _twice_ even though previously it was stated that starting in preview 9 `OnAfterRenderAsync` would _not_ be called during the prerendering lifecycle at all.\r\n\r\n### To Reproduce\r\n\r\n\r\nCreate a new blazor project with server-side prerendering enabled.\r\n\r\nCreate a component that overrides `OnAfterRenderAsync`\r\n\r\nThat override will be called twice during rendering.\r\n\r\n### Further technical details\r\n- ASP.NET Core version : 3.0.0-preview9.19465.2\r\n- IDE: VS2019 Version 16.3.8\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/17661/comments",
    "author": "Oninaig",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-12-06T17:05:27Z",
        "body": "Thanks for contacting us. \r\nThis should be fixed in the 3.0 RTM release. Please upgrade."
      },
      {
        "user": "javiercn",
        "created_at": "2019-12-06T20:15:45Z",
        "body": "@Oninaig could you upgrade to 3.1.0 RTM and see if it happens there, and in that case, provide a repro project that illustrates the problem?"
      },
      {
        "user": "Oninaig",
        "created_at": "2019-12-06T21:09:39Z",
        "body": "@javiercn I appreciate the quick response but I believe that @mkArtakMSFT is correct in that by default, a fresh out-of-the-box blazor server-side project will not call `OnAfterRenderAsync` twice on a component. \r\n\r\nAfter doing more digging, it appears my actual issue is due to the fact that any `@onclick=` actions (on buttons, for example) _automatically_ call `ShouldRefresh` and since `ShouldRefresh` doesn't have any parameters, its difficult to tell whether or not the call came from a button press or from some other event.\r\n\r\nConsider the following code:\r\n\r\nIn my .razor file:\r\n```\r\n<button class=\"btn btn-primary fas fa-sync\" @onclick=\"RefreshMessages\" disabled=\"@_refreshing\"></button>\r\n\r\n<GridComponent T=\"Events\" Grid=\"@_grid\"></GridComponent>\r\n\r\n\r\n```\r\n\r\nAnd in my code-behind:\r\n```\r\nprotected override bool ShouldRender()\r\n{\r\n\treturn base.ShouldRender();\r\n}\r\n\r\nprotected async Task RefreshMessages()\r\n{\r\n\tif (_grid != null)\r\n\t{\r\n\t\t_refreshing = true;\r\n\t\tawait _grid.UpdateGrid();\r\n\t\t_refreshing = false;\r\n\t}\r\n}\r\n```\r\n\r\nIf the call to `_grid.UpdateGrid();` has its own call to `StateHasChanged()` somewhere in the call stack for itself, it means that I wind up with 2 calls to `ShouldRender` on my parent component and therefore 2 calls to `OnAfterRenderAsync`. One call comes from the button press itself, and another from the child component's own call to `StateHasChanged`.\r\n\r\nI guess what I am really trying to do is to override `ShouldRender` in such a way that I can return `false` if the call to `ShouldRender` came from a simple button press when I know that I will be calling `StateHasChanged` at some point later in the call stack. However, I am worried that simply relying on `_refreshing` might not always give the same result. For example, if I change `ShouldRender` to this:\r\n\r\n```\r\nprotected override bool ShouldRender()\r\n{\r\n\tif (_refreshing)\r\n\t\treturn false;\r\n\telse\r\n\t\treturn base.ShouldRender();\r\n}\r\n```\r\nAm I guaranteed that `ShouldRender` will _always_ be called on the parent component _*before*_ `RefreshMessages` finishes and resets `_refreshing` to `false`?"
      },
      {
        "user": "javiercn",
        "created_at": "2019-12-10T17:43:54Z",
        "body": "> If the call to `_grid.UpdateGrid();` has its own call to `StateHasChanged()` somewhere in the call stack for itself, it means that I wind up with 2 calls to `ShouldRender` on my parent component and therefore 2 calls to `OnAfterRenderAsync`. One call comes from the button press itself, and another from the child component's own call to `StateHasChanged`.\r\n\r\nThat's not true if you are using ComponentBase.\r\n\r\nComponentBase will make sure that only one render gets triggered when multiple calls to StateHasChanged without a render in between, so there will only be a single render and a single OnAfterRender call\r\n"
      }
    ]
  },
  {
    "number": 17551,
    "title": "How to Log Controller/Handler Name From Middleware",
    "created_at": "2019-12-03T17:44:19Z",
    "closed_at": "2019-12-04T17:41:03Z",
    "labels": [
      "question",
      "area-mvc",
      ":heavy_check_mark: Resolution: Answered"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/17551",
    "body": "I want to log (along with other things) the name of the controller that is ultimately invoked.  That seems to require that controllers make an explicit call or use an ActionFilter.  I don't want to encumber controller writers with that.   How can I do this in middleware?   Essentially I want to insert middleware between the endpoints and the controllers.\r\n\r\nAny recommendations?",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/17551/comments",
    "author": "zachwieja",
    "comments": [
      {
        "user": "Kahbazi",
        "created_at": "2019-12-04T16:59:18Z",
        "body": "You can add a middleware after `UseRouting()` and before `UseEndpoints()` and use the endpoint metadata to get the controller name.\r\n\r\n```\r\napp.UseRouting();\r\n\r\napp.Use((context, next) =>\r\n{\r\n    var endpoint = context.GetEndpoint();\r\n    if (endpoint != null)\r\n    {\r\n        var controllerActionDescriptor = endpoint.Metadata.GetMetadata<ControllerActionDescriptor>();\r\n        if (controllerActionDescriptor != null)\r\n        {\r\n            var controllerName = controllerActionDescriptor.ControllerName;\r\n           // you can log controllerName here\r\n        }\r\n    }\r\n\r\n    return next();\r\n});\r\n\r\napp.UseEndpoints(endpoints =>\r\n{\r\n    endpoints.MapControllerRoute(\r\n        name: \"default\",\r\n        pattern: \"{controller=Home}/{action=Index}/{id?}\");\r\n});\r\n```"
      },
      {
        "user": "javiercn",
        "created_at": "2019-12-04T17:41:03Z",
        "body": "@zachwieja thanks for contacting us.\r\n\r\n@Kahbazi answer is correct, that's the appropriate approach."
      },
      {
        "user": "zachwieja",
        "created_at": "2019-12-04T20:59:20Z",
        "body": "Verified.  Thank you."
      }
    ]
  },
  {
    "number": 17429,
    "title": "Blazor. Dynamically created component",
    "created_at": "2019-11-26T20:01:55Z",
    "closed_at": "2020-01-26T20:00:12Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/17429",
    "body": "Hello everyone!\r\nI'm working on a library, which fully generates Blazor-based component type in the runtime(by using Reflection.Emit). It produces type inherited from the ComponentBase, with it's own BuildRenderTree method logic, fields, properties and so on.\r\nI want to render this generated component on some specific route.\r\nAt this moment i'm using approach with additional class component with code like this:\r\n\r\n```\r\n[Route(\"customView\")]\r\n    public class CustomView : ComponentBase\r\n    {\r\n        [Inject]\r\n        public ICustomViewTypeProvider TypeProvider { get; set; }\r\n\r\n        protected override void BuildRenderTree(RenderTreeBuilder builder)\r\n        {\r\n            builder.OpenComponent(0, TypeProvider.GetCustomViewType());\r\n            builder.CloseComponent();\r\n        }\r\n    }\r\n```\r\n\r\nSo, it ships in form of Razor Component library and to use it in the Blazor server side application i need to provide additional parameter to app Router - AdditionalAssemblies=\"new[] { typeof(CustomView).Assembly }\" - \r\nto allow user to navigate to my customView route and see my generated component.\r\n\r\nSo the main question - is how to properly use and render such generated type in the Blazor applications? Any better ways how to handle such flow?",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/17429/comments",
    "author": "Hellevar",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-11-27T17:19:56Z",
        "body": "Thanks for contacting us.\r\n\r\nThis is not a scenario we support at the moment. Hopefully the community can help you out with this, so leaving this issue open for some time in the `Discussions` milestone."
      },
      {
        "user": "ghost",
        "created_at": "2020-01-26T20:00:11Z",
        "body": "Thank you for contacting us. Due to no activity on this issue we're closing it in an effort to keep our backlog clean. If you believe there is a concern related to the ASP.NET Core framework, which hasn't been addressed yet, please file a new issue."
      }
    ]
  },
  {
    "number": 17416,
    "title": "Hosting bundle IIS reset / application pool recycle question",
    "created_at": "2019-11-26T14:04:04Z",
    "closed_at": "2019-12-03T10:50:29Z",
    "labels": [
      "question",
      "feature-iis",
      ":heavy_check_mark: Resolution: Answered",
      "area-networking"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/17416",
    "body": "Hi,\r\nI'm currently working on expanding a setup application that downloads applications and puts them in a IIS folder. Some of the applications are asp. net core which require the hosting bundle to be installed. The setup module will install the bundle if it not found on the found on the target machine(which runs the setup application). When i was testing the bundle installer i saw in the eventlog all the application pools where recycled. \r\n\r\n- Why is this recycle started? \r\n    - Is this due to a IIS reset?  \r\n\r\nThe only thing i could think of was for the environment path that is added for the dotnet.exe location but we install everything in the default folders(C:\\Program Files\\dotnet).  \r\n\r\nThe web.configs for our asp.net core application all have a full path to the dotnet exe path. \r\n\r\n- Is the recycle necessary? \r\n    - Is there a way to turn this recycle off if it not necessary?\r\n\r\nI'm asking this because the customers where the applications are being installed can also have other application running on IIS and we don't want to disturb there process. \r\n\r\nKind regards,\r\n\r\nWalter\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/17416/comments",
    "author": "WalterEbbers",
    "comments": [
      {
        "user": "jkotalik",
        "created_at": "2019-11-26T16:33:31Z",
        "body": "> Why is this recycle started?\r\n\r\nI don't think we explicitly restart IIS/WAS via the hosting bundle. From what I thought, we update the applicationhost.config file, which could trigger restarts based on the application itself. \r\n\r\n> The web.configs for our asp.net core application all have a full path to the dotnet exe path.\r\n\r\nCan you elaborate more on this?\r\n\r\nIn general, we don't recommend installing the hosting bundle while sites are running at the same time. Maybe do red green deployment or something like that instead to installing the bundle while the app isn't running."
      },
      {
        "user": "WalterEbbers",
        "created_at": "2019-11-26T17:27:28Z",
        "body": "> > Why is this recycle started?\r\n> \r\n> I don't think we explicitly restart IIS/WAS via the hosting bundle. From what I thought, we update the applicationhost.config file, which could trigger restarts based on the application itself.\r\n> \r\n> > The web.configs for our asp.net core application all have a full path to the dotnet exe path.\r\n> \r\n> Can you elaborate more on this?\r\n> \r\n> In general, we don't recommend installing the hosting bundle while sites are running at the same time. Maybe do red green deployment or something like that instead to installing the bundle while the app isn't running.\r\n\r\nThnx for the response!\r\n\r\nWhat i meant by the config was the following tag:\r\n` <aspNetCore processPath=\"C:\\Program Files\\dotnet\\dotnet.exe\" arguments=\".\\API.dll\" stdoutLogEnabled=\"true\" stdoutLogFile=\".\\logs\\stdout\" shutdownTimeLimit=\"1\" />`\r\n\r\nBut if the change to the applicationhost.config is necessary, we can give our customers who run the software the chance to perform the install at a moment when its suitable for them, but it would be helpful to us to know that this actually happens or that something else from the installer triggers the recycle. \r\n"
      },
      {
        "user": "analogrelay",
        "created_at": "2019-12-02T23:29:53Z",
        "body": "The hosting bundle installs an IIS module (ANCM) so IIS *has* to restart in order to load it. This is the expected behavior at this time."
      },
      {
        "user": "WalterEbbers",
        "created_at": "2019-12-03T10:50:29Z",
        "body": "@anurse \r\nThank you for the clarification!\r\n"
      }
    ]
  },
  {
    "number": 17361,
    "title": "Blazor @ref for dynamically generated elements",
    "created_at": "2019-11-24T12:56:39Z",
    "closed_at": "2019-11-25T12:43:11Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/17361",
    "body": "I have a scenario where an `@foreach` loop iterates over an externally-provided `List<>` parameter to generate a series of Razor components from a third-party library. After the content is rendered, other interactions trigger certain methods on those components, but I don't see a clean way to use `@ref` to address them.\r\n\r\nI'm going try pointing the `@ref` to a property setter and use that to store `value` in a dictionary but it feels pretty hacky, and I suspect that could leak those references if the component is re-rendered (maybe this calls for `WeakReference<T>`?)",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/17361/comments",
    "author": "MV10",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2019-11-25T12:15:12Z",
        "body": "@MV10 thanks for contacting us.\r\n\r\n@SteveSandersonMS Will an array of element references work here?"
      },
      {
        "user": "SteveSandersonMS",
        "created_at": "2019-11-25T12:43:11Z",
        "body": "This isn't something we specifically set out to support, but yes, you can use a dictionary. For example:\r\n\r\n```razor\r\n@foreach (var id in identifiers)\r\n{\r\n    <SomeComponent @ref=\"myComponents[id]\" />\r\n}\r\n\r\n@code {\r\n    private List<string> identifiers = new List<string> { \"Alpha\", \"Beta\", \"Gamma\" };\r\n    private Dictionary<string, SomeComponent> myComponents = new Dictionary<string, SomeComponent>();\r\n}\r\n```\r\n\r\nThis will initally populate `myComponents` with three entries (for keys alpha/beta/gamma). If you add new items to `identifiers` later and re-render, it will add new entries to `myComponents`.\r\n\r\nThe tricky bit is that it doesn't give any obvious way to *remove* items from `myComponents` if they are removed from the UI. Presumably you can handle that in application code though. If you know you're removing something from `identifiers`, then also delete the corresponding keyed item from `myComponents`."
      }
    ]
  },
  {
    "number": 17299,
    "title": "Set value to @functions defined properties inside Razor views",
    "created_at": "2019-11-21T17:05:18Z",
    "closed_at": "2019-11-21T17:46:38Z",
    "labels": [
      "question",
      "area-mvc",
      "feature-razor-pages"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/17299",
    "body": "I am trying to render a Razor view at runting using the RenderAsync method\r\n\r\n`ViewEngineResult.View.RenderAsync(viewContext)`\r\n\r\nThe view that I am trying to render contains variables defined in a `@functions` block\r\n\r\n\t@{\r\n\t  Layout = null;\r\n\t}\r\n\r\n\t@functions\r\n\t{\r\n\t  public string test { get; set; }\r\n\t}\r\n\r\n\t<!DOCTYPE html>\r\n\r\n\t<html>\r\n\t<head>\r\n\t  <meta name=\"viewport\" content=\"width=device-width\" />\r\n\t  <title>Razor</title>\r\n\t</head>\r\n\t<body>\r\n\t  <h2>WITH VARIABLE</h2>\r\n\t  <strong>VALUE: @test</strong>\r\n\t</body>\r\n\t</html>\r\n\r\nPreviousy, with ASP.NET MVC, I would populate the ViewData with a `key` with the same name of the property and \"under the hood\" the mvc engine did the assignment for me.\r\n\r\nIs this still somehow possible in ASP.NET CORE?",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/17299/comments",
    "author": "sh0uzama",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-11-21T17:46:38Z",
        "body": "Thanks for contacting us, @sh0uzama.\r\nYou can achieve what you want by decorating the `test` property with `ViewDataAttribute` attribute, to enable mapping."
      },
      {
        "user": "sh0uzama",
        "created_at": "2019-11-22T09:17:57Z",
        "body": "Thank you for your quick answer @mkArtakMSFT - but unfortunately this isn't giving the expected result =(\r\n\r\nWith a view like this:\r\n\r\n\t@{\r\n\t  Layout = null;\r\n\t}\r\n\r\n\t@functions\r\n\t{\r\n\t  [ViewData]\r\n\t  public string test { get; set; }\r\n\t}\r\n\r\n\t<!DOCTYPE html>\r\n\t<html>\r\n\t<head>\r\n\t  <meta name=\"viewport\" content=\"width=device-width\" />\r\n\t  <title>Test</title>\r\n\t</head>\r\n\t<body>\r\n\t  <h2>VIEWDATA INJECTION TEST</h2>\r\n\t  <pre>public string test: @test</pre>\r\n\t  <pre>ViewData[\"test\"]: @ViewData[\"test\"]</pre>\r\n\t</body>\r\n\t</html>\r\n\r\nI can get the ViewData[\"test\"] to output the correct result, but unfortunately the property still remains non-populated.\r\n\r\nI guess I can workaround this with a little rewrite of the views, but still I'm curious to understand if there's a way to do it like the old ASP.NET MVC\r\n\r\nIf you have some more info I'll be glad to know them, but in any case thank you for your help!"
      }
    ]
  },
  {
    "number": 17297,
    "title": "Blazor - How to render dynamic content with variables",
    "created_at": "2019-11-21T16:28:57Z",
    "closed_at": "2019-11-21T17:36:51Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/17297",
    "body": "I have a page and would like to insert some dynamic content from a string and also need to add some variables to it. when i do this:\r\n\r\n\r\n```\r\n@DynamicContent\r\n\r\n@code\r\n{\r\n  protected override void OnInitialized()\r\n    {\r\n        var dto = new dto();\r\n        dto.Id = 6;\r\n        dto.Name = \"This is the name of the Dto\";\r\n\r\n        RawHtml = \"<h1> @dto.Id / @dto.Name</h1>\";\r\n        DynamicContent = builder =>\r\n        {\r\n            builder.OpenElement(0, \"rawhtmlname\");\r\n            builder.AddContent(1, RawHtml);\r\n            builder.CloseElement();\r\n        };    \r\n    }\r\n}\r\n```\r\n\r\ni end up with '@dto.Id / @dto.Name' as literal strings instead of the values '6 / This is the name of the Dto'  Is there a way to accomplish this?\r\n\r\n  ",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/17297/comments",
    "author": "mischa71lab",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-11-21T17:36:51Z",
        "body": "Thanks for contacting us.\r\nIt's not clear what is the complexity in your scenario, as pure razor would suffice in this case:\r\n\r\n```razor\r\n<h1> @dto.Id / @dto.Name</h1>\r\n\r\n@code{\r\n...\r\n}\r\n```\r\n\r\nIf there is something more to this please reply with more details."
      },
      {
        "user": "mischa71lab",
        "created_at": "2019-11-22T08:14:43Z",
        "body": "Hello Artak,\r\n\r\nI have a salesorder and am looking for a way to show this with different layouts.\r\nSo i wanted to load and render part of the page from a string from a database.\r\nThis way i can store multiple layouts in a database and change them with a textarea control.\r\nHopes this clearifies things.\r\nThanks\r\n\r\n"
      }
    ]
  },
  {
    "number": 17293,
    "title": "how to access a remote shared folder with credential in asp.net core if you're not using IIS?",
    "created_at": "2019-11-21T14:16:11Z",
    "closed_at": "2020-01-24T20:00:19Z",
    "labels": [
      "question",
      "area-networking"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/17293",
    "body": "How can you read/write to a protected, windows based, network share, if you're not using IIS hosting?",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/17293/comments",
    "author": "Leonardo-Ferreira",
    "comments": [
      {
        "user": "blowdart",
        "created_at": "2019-11-21T15:50:46Z",
        "body": "You either run the kestrel process as a user accounts with rights, or use impersonation in your code to become a user with rights. Note that impersonation does not support async."
      },
      {
        "user": "Leonardo-Ferreira",
        "created_at": "2019-11-25T17:14:51Z",
        "body": "@blowdart would you mind sharing a few more details? would you be able to provide a code sample? bear in mind that some people, like me, host the app on linux"
      },
      {
        "user": "ghost",
        "created_at": "2020-01-24T20:00:14Z",
        "body": "Thank you for contacting us. Due to no activity on this issue we're closing it in an effort to keep our backlog clean. If you believe there is a concern related to the ASP.NET Core framework, which hasn't been addressed yet, please file a new issue."
      }
    ]
  },
  {
    "number": 17289,
    "title": "Blazor - Is any page lifecycle method available to do a some action, when user clicks the browser back or refresh?",
    "created_at": "2019-11-21T09:53:23Z",
    "closed_at": "2019-11-21T15:48:24Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/17289",
    "body": "### Describe the bug\r\nPerform some logic, when the user clicks the browser back or refresh\r\n\r\n### To Reproduce\r\nI want to perform some logic operation, when user clicks the  browser back or refresh while editing the form\r\n\r\nIn javascript, we can achieve this by **window.onbeforeunload** method. Is any possibility available to achieve this same usecase in Blazor ?\r\n\r\n\r\n``` C#\r\n        window.onbeforeunload = function () {\r\n               // Do some logics\r\n        };\r\n```\r\n\r\n### Further technical details\r\n- Blazor - .NET Core 3.1 preview 1 on Windows 10\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/17289/comments",
    "author": "pandiyarajm93",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2019-11-21T15:48:24Z",
        "body": "@pandiyarajm93 thanks for contacting us.\r\n\r\nThat's not something you can do directly in Blazor. You need to use JavaScript to achieve it."
      },
      {
        "user": "mobinseven",
        "created_at": "2019-12-16T13:57:19Z",
        "body": "`onbeforeunload` is not triggered when surfing razor pages. There must be a substitute lifecycle event for razor components which **surprisingly** doesn't exist.\r\nYou may use Dispose() method and it may do the job for you. But it didn't work for me as I needed the unloaded component Uri (Dispose() is triggered when Uri is changed)."
      }
    ]
  },
  {
    "number": 17259,
    "title": "In Blazor creating the Same Element Multiple times in DOM.",
    "created_at": "2019-11-20T13:27:51Z",
    "closed_at": "2019-11-20T13:56:01Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/17259",
    "body": "Is there any possibility of appending the same element multiple times in the DOM. I have tried this below case.\r\n\r\n```\r\n<button @onclick=\"clicked\">Update DOM</button>\r\n\r\n@if(rendered) { \r\n       <div id=\"Random_id\">Showed in DOM</div> \r\n }\r\n\r\n@code{` \r\n\r\n     private bool rendered { get; set; } = false\r\n     \r\n     private void clicked() {\r\n        this.rendered = true;\r\n        this.StateHasChanged();\r\n     }\r\n}\r\n```\r\n\r\nIn this case the same element is not appended in the DOM for multiple times. Any solution for this ?",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/17259/comments",
    "author": "Indrajith-Sync",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2019-11-20T13:55:41Z",
        "body": "@Indrajith-Sync thanks for contacting us.\r\n\r\nYou don't need to call state has changed yourself. Blazor re-renders the entire UI and updates it based on the changes from the previous render (if any).\r\n\r\nIn your case you are simply rendering a single element conditionally, so that's what you will get. If you want to render multiple elements you would have to do something like keeping a counter of elements to render and writing a foreach loop for them.\r\n\r\n```\r\n<button @onclick=\"clicked\">Update DOM</button>\r\n\r\n@foreach(var index in Enumerable.Range(0,elementsNumber)) { \r\n       <div id=\"Random_@(index)\">Showed in DOM</div> \r\n }\r\n\r\n@code{` \r\n\r\n     private int elementsNumber { get; set; } = 0\r\n     \r\n     private void clicked() {\r\n        this.elementsNumber++;\r\n     }\r\n}\r\n```\r\n\r\n"
      },
      {
        "user": "Indrajith-Sync",
        "created_at": "2019-11-20T17:45:27Z",
        "body": "Thank you for your suggestions...! @javiercn"
      }
    ]
  },
  {
    "number": 17257,
    "title": "How Preview the Attachments(File in ",
    "created_at": "2019-11-20T08:56:12Z",
    "closed_at": "2019-11-20T13:58:37Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/17257",
    "body": "### How Display the Bytearray format file in Browser instead of download\r\n\r\n\r\n### Further technical details\r\n- ASP.NET Core 3.0\r\n- Blazor`\r\n- (VS2019) \r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/17257/comments",
    "author": "novfal",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2019-11-20T13:58:37Z",
        "body": "Thanks for contacting us @novfal .\r\n\r\nIt looks like this is a question about how to use Blazor. While we do our best to look through all the issues filed here, to get a faster response we suggest posting your questions to StackOverflow using the asp.net-core-blazor tag."
      }
    ]
  },
  {
    "number": 17251,
    "title": "MarkupString is not being honored in attributes",
    "created_at": "2019-11-20T05:08:28Z",
    "closed_at": "2020-01-31T20:00:17Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/17251",
    "body": "### Describe the bug\r\n\r\nWhen trying to embed a line-break in a `title` attribute, I noticed that it is always encoded even when I use `MarkupString`.\r\n\r\n### To Reproduce\r\n\r\n    <label title=\"AAA&#013;BBB\">Works</label>\r\n    <br/>\r\n    <label title=\"@((MarkupString)\"AAA&#013;BBB\")\">Doesn't Works, the title is still escaped</label>\r\n\r\n\r\n### Further technical details\r\n\r\n```\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp3.0</TargetFramework>\r\n    <LangVersion>8.0</LangVersion>\r\n    <Nullable>enable</Nullable>\r\n    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.EntityFrameworkCore.SqlServer\" Version=\"3.0.0\" />\r\n    <PackageReference Include=\"Microsoft.EntityFrameworkCore.Tools\" Version=\"3.0.0\">\r\n      <PrivateAssets>all</PrivateAssets>\r\n      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>\r\n    </PackageReference>\r\n    <PackageReference Include=\"Microsoft.Extensions.Logging.Debug\" Version=\"3.0.0\" />\r\n    <PackageReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Design\" Version=\"3.0.0\" />\r\n  </ItemGroup>\r\n```\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/17251/comments",
    "author": "Grauenwolf",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2019-11-20T14:15:25Z",
        "body": "@Grauenwolf thanks for contacting us.\r\n\r\nCould you provide more details? Are you prerendering your app?"
      },
      {
        "user": "Grauenwolf",
        "created_at": "2019-11-20T22:24:04Z",
        "body": "Yes, prerendering is enabled. \r\n\r\nI don't know if the bug happens all the time or only during pre/normal rendering. (I'm just starting with this.)"
      },
      {
        "user": "ghost",
        "created_at": "2019-12-02T18:02:06Z",
        "body": "<Deleted by @anurse. We shouldn't be using this flow for issues in Discussions. I'll update the bot.>"
      },
      {
        "user": "Grauenwolf",
        "created_at": "2019-12-02T18:13:41Z",
        "body": "What other details do you need?"
      },
      {
        "user": "analogrelay",
        "created_at": "2019-12-02T18:44:34Z",
        "body": "@Grauenwolf sorry, some automation went a tiny bit agressive ;). Things in the \"Discussions\" milestone shouldn't be getting this workflow applied."
      },
      {
        "user": "ghost",
        "created_at": "2020-01-31T20:00:15Z",
        "body": "Thank you for contacting us. Due to no activity on this issue we're closing it in an effort to keep our backlog clean. If you believe there is a concern related to the ASP.NET Core framework, which hasn't been addressed yet, please file a new issue."
      }
    ]
  },
  {
    "number": 17216,
    "title": "[Razor Pages] String interpolation for @page directive override routes",
    "created_at": "2019-11-19T02:15:47Z",
    "closed_at": "2019-11-19T14:48:44Z",
    "labels": [
      "question",
      "area-mvc"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/17216",
    "body": "I had the idea to save all of my routes in a static class of constants like so:\r\n\r\n```\r\nstatic class Routes\r\n{\r\n    public const string Index = \"/index\";\r\n    public const string Login = \"/account/login\";\r\n    public const string Logout = \"/account/logout\";\r\n    public const string Register = \"/account/register\";\r\n\r\n    // etc. \r\n}\r\n```\r\n\r\nThe idea was to have the route defined in one place and then if I even need to change a route, I will only have to change it in one place. For example, if I have multiple handlers that redirect to the login page, changing the login route would require me to change it at the `@page` directive, and in any IActionResult-returning methods that redirect to the login route (which could exist in many authentication-required pages). \r\n\r\nFirst, let me know if that's just a stupid idea. I'm pretty new to ASP .NET Core.\r\n\r\nIf not, the feature I am requesting is that *string interpolation or some other kind of value passing mechanism would be possible with a page directive*. Visual Studio tells me this syntax is correct but when I try to compile it says \"the 'page' directive expects a string surrounded by double quotes.\".\r\n\r\n```\r\n@page @Routes.Index\r\n```\r\n\r\nI also tried the following and it does not work:\r\n\r\n```\r\n@page $\"{Routes.Index}\"\r\n```\r\n\r\nCould this be a useful feature for code-maintainability? \r\n\r\nEDIT: Typos.\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/17216/comments",
    "author": "cbrit",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2019-11-19T14:48:44Z",
        "body": "@cbrit thanks for contacting us.\r\n\r\nUnfortunately what you are trying to achieve is not possible. Routes are backed by .NET Attributes, which require all parameters to be compile time constants. For that reason, you can't use things like string interpolation in them, as that would require the information for the attribute to be defined at runtime, which is not possible in .NET.\r\n\r\nUsing constant strings is the best it's going to get."
      }
    ]
  },
  {
    "number": 17211,
    "title": "Is it possible to change login url from one place? ",
    "created_at": "2019-11-18T21:25:28Z",
    "closed_at": "2020-05-29T20:00:48Z",
    "labels": [
      "question",
      "area-identity"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/17211",
    "body": "_From @Aleksej-Shherbak on Saturday, November 16, 2019 5:53:24 PM_\r\n\r\nI will describe what I mean here.  By default, Identity has the following login URL: `/Identity/Account/Login`. I would like to change it on just `/Login`. \r\n\r\nAnd I have it done! For this I have added on the `Login.cshtml` file the following code: \r\n```\r\n@page \"/Login\"\r\n```\r\nAnd it works, but after logout I have redirect on the previous URL and 404 error. I have added the following on the `Startup.cs` to avoid this behavior: \r\n```\r\nservices.PostConfigure<CookieAuthenticationOptions>(IdentityConstants.ApplicationScheme,\r\n                opt =>\r\n                {\r\n                    opt.LoginPath = \"/Login\";\r\n                });\r\n``` \r\n\r\nAnd it works. Now I have redirection on  `/Login` after logout.  But if I want change URL again I must replace two places, not one. It's uncomfortable. Is it possible from one place? I tried this: \r\n\r\n```\r\nservices.PostConfigure<CookieAuthenticationOptions>(IdentityConstants.ApplicationScheme,\r\n                opt =>\r\n                {\r\n                    opt.LoginPath = \"/Login\";\r\n                    opt.LogoutPath = \"/Login\";\r\n                });\r\n``` \r\nBut without any effect. \r\nSomebody suggested me to keep login URL in the `appsettings.json` but, I think, it's nonsense. I think, `appsettings.json` is the most unexpected place for URLs. \r\n\r\nAny ideas?     \r\n\r\n_Copied from original issue: dotnet/core#3822_",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/17211/comments",
    "author": "scalablecory",
    "comments": [
      {
        "user": "cbrit",
        "created_at": "2019-11-19T14:27:12Z",
        "body": "Maybe related to my feature request: #17216"
      },
      {
        "user": "blowdart",
        "created_at": "2019-12-04T20:12:05Z",
        "body": "Identity is designed to be in a separate area. I guess you could fudge a route, but that's really an MVC question\r\n\r\n@pranavkm ?"
      },
      {
        "user": "pranavkm",
        "created_at": "2019-12-04T20:20:35Z",
        "body": "@javiercn would have more context here."
      },
      {
        "user": "cbrit",
        "created_at": "2019-12-04T20:25:34Z",
        "body": "I think the question is more a general one than specifically the Login page:\r\n\r\n> But if I want change URL again I must replace two places, not one. It's uncomfortable. Is it possible from one place?\r\n\r\nI believe he's asking if there is a way to hard code a route once and then use a reference to it wherever relevant instead of having to hard code it everywhere. \r\n\r\nEDIT: Tagged the wrong person."
      },
      {
        "user": "ghost",
        "created_at": "2020-05-29T20:00:47Z",
        "body": "Thank you for contacting us. Due to a lack of activity on this discussion issue we're closing it in an effort to keep our backlog clean. If you believe there is a concern related to the ASP.NET Core framework, which hasn't been addressed yet, please file a new issue.\n\nThis issue will be locked after 30 more days of inactivity. If you still wish to discuss this subject after then, please create a new issue!"
      }
    ]
  },
  {
    "number": 17188,
    "title": "cshtml support",
    "created_at": "2019-11-18T08:23:50Z",
    "closed_at": "2019-11-21T17:51:40Z",
    "labels": [
      "question",
      ":heavy_check_mark: Resolution: By Design",
      "area-mvc"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/17188",
    "body": "Using Visual Studio 2019 and ASP .Net core 3.0,\r\nI have a cshtml view containing this code:\r\n\r\n````html\r\n  <input asp-for=\"LastName\" class=\"form-control activable\" placeholder=\"Nom\" @(Model?.LicenseId= =null ? \"disabled\" : string.Empty) />\r\n````\r\n\r\nthis part  \r\n````csharp\r\n@(Model?.LicenseId= =null ? \"disabled\" : string.Empty)\r\n````\r\n\r\nproduces an error in visual studio\r\nThe tag helper 'input' must not have C# in the element's attribute declaration area.\r\n\r\nbut it compiles and work perfectly.\r\n\r\nnotice the = = whiwh is a == but visual studio if modifying it when i use format.\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/17188/comments",
    "author": "Julien-Marpault",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2019-11-18T15:54:19Z",
        "body": "@JulienM28 thanks for contacting us.\r\n\r\nI believe the space between = and = is significant, so seems like formatting is altering the semantics here?\r\n\r\n@NTaylorMullen @ajaybhargavb any ideas?"
      },
      {
        "user": "NTaylorMullen",
        "created_at": "2019-11-18T18:14:11Z",
        "body": "Hey @JulienM28, C# in the attribute / tag declaration is unsupported for TagHelpers. However, I believe you can get the same functionality by changing your code to the following:\r\n\r\n```CSHTML\r\n  <input asp-for=\"LastName\" class=\"form-control activable\" placeholder=\"Nom\" disabled=\"@(Model?.LicenseId == null)\" />\r\n```"
      },
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-11-21T17:51:40Z",
        "body": "Thanks for contacting us. We believe that the question you've raised have been answered. If you still feel a need to continue the discussion, feel free to reopen it and add your comments."
      }
    ]
  },
  {
    "number": 17178,
    "title": "Question: Blazor NavigationManager.LocationChanged Async",
    "created_at": "2019-11-17T12:04:43Z",
    "closed_at": "2019-11-18T15:46:51Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/17178",
    "body": "In general what would be the best method (if any) to call awaitable methods from NavigationManager.LocationChanged, since NavigationManager.LocationChanged is not async? \r\n\r\nIs wrapping the awaitable Task call into Task.Run/Task.WaitAll acceptable? For example something like:\r\n\r\n```\r\nvar task = Task<bool>.Run(async () =>\r\n{\r\n   //Call await method here \r\n    return false;\r\n});\r\n\r\nTask.WaitAll(task);\r\nvar retVal = task.Result;\r\n```\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/17178/comments",
    "author": "chassq",
    "comments": [
      {
        "user": "mrpmorris",
        "created_at": "2019-11-18T14:32:32Z",
        "body": "You can declare your handler method as `async Task`. DotNet won't await the result, but your method will be able to `await` other calls.\r\n\r\n```\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            Console.WriteLine(\"Hello World!\");\r\n\r\n            var p = new Parent();\r\n            p.SomeEvent += (s, e) => Console.WriteLine(\"Observer 1\");\r\n            p.SomeEvent += AsyncHandler;\r\n            p.SomeEvent += (s, e) => Console.WriteLine(\"Observer 2\");\r\n\r\n            p.TriggerSomeEvent();\r\n            Console.ReadLine();\r\n        }\r\n\r\n        public static async void AsyncHandler(object sender, EventArgs e)\r\n        {\r\n            await Task.Delay(1000);\r\n            Console.WriteLine(\"Async observer\");\r\n        }\r\n    }\r\n\r\n    public class Parent\r\n    {\r\n        public event EventHandler<EventArgs> SomeEvent;\r\n\r\n        public void TriggerSomeEvent()\r\n        {\r\n            SomeEvent?.Invoke(this, EventArgs.Empty);\r\n        }\r\n    }\r\n```\r\n\r\nOutput\r\n\r\n1. Hello world!\r\n2. Observer 1\r\n3. Observer 2\r\n4. Async observer"
      },
      {
        "user": "javiercn",
        "created_at": "2019-11-18T15:46:51Z",
        "body": "@chassq thanks for contacting us.\r\n\r\nThere are patterns around this. The best option you have is to encapsulate everything with in a task returning method that takes in a cancellation token as a parameter. Then register a handle in your LocationChange method and do something like this\r\n\r\n```charp\r\nif(_currentTask != null && !_currentTask.IsCompleted){\r\n   _currentCancellation.Cancel();\r\n}\r\n_ currentCancellationToken = new ...\r\n_currentTask = InvokeMyAsyncHandler(_currentCancellationToken)\r\n```\r\n\r\nIn general, do not use async void, and instead capture the existing task within your component and use the cancellation token to stop the work if for example another navigation gets triggered in between.\r\n\r\nI hope this helps."
      },
      {
        "user": "chassq",
        "created_at": "2019-11-18T16:27:57Z",
        "body": "Thank you very much!"
      }
    ]
  },
  {
    "number": 17171,
    "title": "How to invalidate precompiled views cache after adding application part at runtime",
    "created_at": "2019-11-16T16:27:10Z",
    "closed_at": "2019-11-18T17:54:27Z",
    "labels": [
      "question",
      "area-mvc"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/17171",
    "body": "Hi,\r\n\r\nI'm trying to implement loading/unloading extensions at runtime. Currently, I can load/unload the assemblies containing controllers with no problems, I'm using IActionDescriptorChangeProvider to invalidate corresponding cache.\r\n\r\nCould you help me to find a way to invalidate the views cache? Because, if I add the application parts on startup views are resolved. But if I do that later, views can't be found.\r\n\r\nI hope there should be something similar.\r\n\r\nThank you very much.",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/17171/comments",
    "author": "DmitrySikorsky",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2019-11-18T15:52:25Z",
        "body": "@DmitrySikorsky thanks for contacting us.\r\n\r\n`IActionDescriptorChangeProvider` should be the wait to go, you can look in the source-code at pageactiondescriptor provider, they are just actiondescriptor providers."
      },
      {
        "user": "javiercn",
        "created_at": "2019-11-18T17:54:27Z",
        "body": "We've discussed this within the team. This is not something that you can do easily, as application parts need to be loaded before DI gets configured. This is not something that we plan to change in the near future, as it requires a big investment."
      }
    ]
  },
  {
    "number": 17165,
    "title": "How can I host multiple Blazor(WebAssembly) clients in one AspNetCore site",
    "created_at": "2019-11-16T01:48:09Z",
    "closed_at": "2019-11-18T15:47:31Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/17165",
    "body": "I am trying to host two Blazor(WebAssembly) clients with different route in one AspNetCore site,is there any way to do this?\r\n\r\nCould I embed the blazor client files (include blazor dlls) in to different dll,then use EmbeddedFileProvider to provide it. Is this the best way?\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/17165/comments",
    "author": "liyanjie2048",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2019-11-18T15:47:31Z",
        "body": "@liyanjie8712 thanks for contacting us.\r\n\r\nThis is not something that we currently support but something that we might look to support in the future.\r\n\r\nThanks."
      },
      {
        "user": "javiercn",
        "created_at": "2019-11-18T15:47:42Z",
        "body": "/cc: @danroth27 "
      }
    ]
  },
  {
    "number": 17104,
    "title": "Reading HttpContext.ResponseBody in custom middleware",
    "created_at": "2019-11-14T19:14:27Z",
    "closed_at": "2019-11-15T11:19:23Z",
    "labels": [
      "question",
      "area-networking"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/17104",
    "body": "Hello, I'm attempting to write a custom middleware that reads both the request and response body from the http context and logs them.\r\nI've successfully read the request body but for the response body I'm getting the following error:\r\n\r\n```\r\n[2019-11-14 19:08:40 EROR] Microsoft.AspNetCore.Server.Kestrel\r\nConnection id \"\"0HLR96O3GGIOJ\"\", Request id \"\"0HLR96O3GGIOJ:00000001\"\": An unhandled exception was thrown by the application.\r\n{\"EventId\": {\"Id\": 13, \"Name\": \"ApplicationError\"}, \"RequestId\": \"0HLR96O3GGIOJ:00000001\", \"RequestPath\": \"/api/profile\", \"SpanId\": \"|a1767aea-4fbb75086a5ff91d.\", \"TraceId\": \"a1767aea-4fbb75086a5ff91d\", \"ParentId\": \"\"}\r\nSystem.ObjectDisposedException: Cannot access a closed Stream.\r\n   at System.IO.MemoryStream.Seek(Int64 offset, SeekOrigin loc)\r\n   at Common.Logging.HttpContextLoggingMiddleware.GetResponseBody(HttpContext context) in D:\\Documents\\Repositories\\emsa-med-identity-management\\IdentityManagement\\Modules\\Common\\Common\\Common\\Logging\\HttpContextLoggingMiddleware.cs:line 243\r\n   at Common.Logging.HttpContextLoggingMiddleware.Invoke(HttpContext context) in D:\\Documents\\Repositories\\emsa-med-identity-management\\IdentityManagement\\Modules\\Common\\Common\\Common\\Logging\\HttpContextLoggingMiddleware.cs:line 88\r\n   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)\r\n```\r\n\r\nSince I'm replacing the underlying stream it be readable right?\r\nHere is the code I'm using:\r\n\r\n``` C#\r\nvar originalBodyStream = context.Response.Body;\r\n\r\ntry\r\n{\r\n\tvar memoryBodyStream = new MemoryStream();\r\n\r\n\tcontext.Response.Body = memoryBodyStream;\r\n\r\n\tawait this.Next.Invoke(context);\r\n\r\n\tmemoryBodyStream.Seek(0, SeekOrigin.Begin);\r\n\tstring body = await new StreamReader(memoryBodyStream).ReadToEndAsync();\r\n\tmemoryBodyStream.Seek(0, SeekOrigin.Begin);\r\n\r\n\tawait memoryBodyStream.CopyToAsync(originalBodyStream);\r\n\r\n\treturn body;\r\n}\r\nfinally\r\n{\r\n\tcontext.Response.Body = originalBodyStream;\r\n}\r\n```\r\n\r\n### Further technical details\r\n- ASP.NET Core version: 3.0.0\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  7d57652f33\r\n\r\n.NET Core SDKs installed:\r\n  2.1.801 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.401 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App\r\n```\r\n- Visual Studio Community 2019\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/17104/comments",
    "author": "nuno-tiago-reis",
    "comments": [
      {
        "user": "Tratcher",
        "created_at": "2019-11-14T21:02:06Z",
        "body": "@javiercn only use the area-hosting label for items that are actually in the Microsoft.AspNetCore.Hosting package/namespace. Most request processing items belong in area-Servers."
      },
      {
        "user": "Tratcher",
        "created_at": "2019-11-14T21:06:18Z",
        "body": "@nuno-tiago-reis some components used to write to the response body like StreamWriter/StreamReader also dispose the stream unless you pass them a flag not to. In your case you'll need to either change what is disposing the stream or wrap your memory stream to prevent Dispose from being called."
      },
      {
        "user": "nuno-tiago-reis",
        "created_at": "2019-11-15T11:19:23Z",
        "body": "Thanks for your suggestion.\r\n\r\nThanks to it I was able to find out it was the WebMarkupMin middleware that was closing the stream and managed to fix the issue.\r\n\r\nThanks again 👍 "
      }
    ]
  },
  {
    "number": 17010,
    "title": "UseReactDevelopmentServer without UseSpa",
    "created_at": "2019-11-12T06:09:28Z",
    "closed_at": "2019-11-12T13:58:14Z",
    "labels": [
      "question",
      "area-mvc"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/17010",
    "body": "Is it possible to use `UseReactDevelopmentServer` without `UseSpa`? In dev, I want to use the React dev server, but do not want to return /index.html for everything (which is what `UseSpa` does).",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/17010/comments",
    "author": "Daniel15",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2019-11-12T10:51:32Z",
        "body": "@Daniel15 thanks for contacting us.\r\n\r\n@SteveSandersonMS Is this possible?"
      },
      {
        "user": "SteveSandersonMS",
        "created_at": "2019-11-12T13:58:14Z",
        "body": "No, sorry. `UseReactDevelopmentServer` is just one of the ways of configuring `UseSpa`, so you can't use the former without the latter.\r\n\r\nHowever just because you're using `UseSpa` doesn't mean you have to return `/index.html` for everything - you could also put other middleware earlier in ASP.NET Core's pipeline to return different responses."
      }
    ]
  },
  {
    "number": 16967,
    "title": "Blazor: Make it possible to create an instance of ElementReference",
    "created_at": "2019-11-11T09:23:07Z",
    "closed_at": "2019-11-11T13:08:54Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/16967",
    "body": "### Is your feature request related to a problem? Please describe.\r\nNote: I don't currently need this, so low priority.\r\n\r\n`@ref` is used for both referencing to an ElementReference and to a descendant of ComponentBase. This means that if we need a strongly-typed reference to a razor component (for calling C# methods etc from the consuming component) we cannot also pass that reference to JavaScript.\r\n\r\n### Describe the solution you'd like\r\nEither automatically wrap IComponent instances with ElementReference when invoking JavaScript, or add something like `ElementReference.Create(IComponent)` (possibly better, because you cannot know if the consumer is expecting an ElementReference or a DotNetObject reference - unless you made DotNetObject a subclass of ElementReference or something).\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/16967/comments",
    "author": "mrpmorris",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2019-11-11T11:48:30Z",
        "body": "@mrpmorris thanks for contacting us.\r\n\r\nSomething like this should suffice your case I think (if I understood correctly your scenario).\r\n\r\n```razor\r\n<ChildComponent ref=\"MyComponent\">\r\n\r\n@code{\r\n\r\nprivate DotNetObjectReference _myComponentReference;\r\n\r\nprotected override Task OnAfterRenderAsync(bool firstRender)\r\n{\r\n   if(_myComponentReference != null){\r\n       _myComponentReference.Dispose();\r\n   }\r\n   _myComponentRefernece = DotNetObjectReference.Create(MyComponent);\r\n    await JS.InvokeAsync(\"setChildReference\", _myComponentReference)\r\n}\r\n}\r\n\r\npublic void Dispose() => _myComponentReference?.Dispose();\r\n```"
      },
      {
        "user": "mrpmorris",
        "created_at": "2019-11-11T11:55:53Z",
        "body": "Hi @javiercn \r\n\r\nNot quite. Imagine you have some js you use to do something to an element so you need an ElementReference for that.\r\n\r\nBut it's also a razor component with methods you need to call, so you need a reference like `MyComponent MyRef`. \r\n\r\nIt's currently not possible to get an ElementReference for a razor component if you already have a strongly-typed reference. \r\n\r\nLet me know if you need further clarification. \r\n\r\n"
      },
      {
        "user": "javiercn",
        "created_at": "2019-11-11T12:00:27Z",
        "body": "@mrpmorris I'm not sure I understand your scenario.\r\n\r\nWould something like this represent your scenario? (Although it's not possible)\r\n```razor\r\n<ChildComponent ref=\"MyComponent\" ref=\"MyRef\">\r\n```\r\n\r\nWhere you would have a reference to the child component and an \"HtmlReference\" to the component too?"
      },
      {
        "user": "mrpmorris",
        "created_at": "2019-11-11T12:02:32Z",
        "body": "> @mrpmorris I'm not sure I understand your scenario.\r\n> \r\n> Would something like this represent your scenario? (Although it's not possible)\r\n> \r\n> ```\r\n> <ChildComponent ref=\"MyComponent\" ref=\"MyRef\">\r\n> ```\r\n> \r\n> Where you would have a reference to the child component and an \"HtmlReference\" to the component too?\r\n\r\nYes. Ways I can think of are\r\n\r\n1: Multiple refs.\r\n2: Automatically convert IComponent to ElementReference when invoking JS.\r\n3: Allow creation of ElementReference using an IComponent.\r\n\r\n\r\n"
      },
      {
        "user": "javiercn",
        "created_at": "2019-11-11T12:09:23Z",
        "body": "@mrpmorris \r\n\r\nComponents are not elements and are not represented in markup as such. This is fundamentally not possible in Blazor for several reasons.\r\n* Components are just marker comments in the generated HTML.\r\n  * This is fundamental as otherwise they would affect the application styles.\r\n* Components are not required to have a \"root\" element.\r\n  * You can have a component that is defined by a list of HtmlElements, and that's not something we would restrict.\r\n  * There is no 1:1 relationship between component and Html element, so having an \"HtmlReference\" to a component doesn't make sense.\r\n\r\nI know that this is likely not the answer you wanted to receive, but these are fundamental concepts/abstractions of the Blazor application model that we aren't likely to change, as they would impose limitations to existing apps and would be a breaking change."
      },
      {
        "user": "mrpmorris",
        "created_at": "2019-11-11T13:09:21Z",
        "body": "No, that makes perfect sense. Thank you! "
      }
    ]
  },
  {
    "number": 16964,
    "title": "Test server create httpclient doesn't set cookie when server return redirect + setCookie",
    "created_at": "2019-11-11T03:05:53Z",
    "closed_at": "2019-11-11T12:06:55Z",
    "labels": [
      "question",
      "area-mvc"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/16964",
    "body": "### Test server create httpclient doesn't set cookie when server return redirect + setCookie\r\n\r\n### To Reproduce\r\n``` C#\r\n//test client side code\r\nvar clientOptions = new WebApplicationFactoryClientOptions()\r\n {\r\n       AllowAutoRedirect = true,\r\n       HandleCookies = true\r\n };\r\nvar browserClient = _factory.CreateClient(clientOptions);\r\nusing var resp = await browserClient.GetAsync(\"/index\");\r\nresp.EnsureSuccessStatusCode();\r\n\r\n// server side code\r\n[HttpGet]\r\npublic IActionResult Index(){\r\n   Response.Cookies.Append(\".cust.cookie\", \"value\");\r\n   return Redirect(\"/check\")\r\n}\r\n[HttpGet]\r\npublic IActionResult Check(){\r\n    if(Request.Cookies.TryGetValue(\".cust.cookie\", out var value)){\r\n         //todo\r\n    }else{\r\n        throw new Exception(\"there is no cookie...\");\r\n    }\r\n}\r\n```\r\n\r\n### Further technical details\r\n- ASP.NET Core version 3.0\r\nIn source code `WebApplicationFactoryClientOptions`\r\n\r\n```C#\r\ninternal DelegatingHandler[] CreateHandlers()\r\n        {\r\n            return CreateHandlersCore().ToArray();\r\n\r\n            IEnumerable<DelegatingHandler> CreateHandlersCore()\r\n            {\r\n                if (AllowAutoRedirect)\r\n                {\r\n                    yield return new RedirectHandler(MaxAutomaticRedirections);\r\n                }\r\n                if (HandleCookies)\r\n                {\r\n                    yield return new CookieContainerHandler();\r\n                }\r\n            }\r\n        }\r\n```\r\nShould it return `CookieContainerHandler` before `RedirectHandler`\r\n```C#\r\ninternal DelegatingHandler[] CreateHandlers()\r\n        {\r\n            return CreateHandlersCore().ToArray();\r\n\r\n            IEnumerable<DelegatingHandler> CreateHandlersCore()\r\n            {\r\n                if (HandleCookies)\r\n                {\r\n                    yield return new CookieContainerHandler();\r\n                }\r\n                if (AllowAutoRedirect)\r\n                {\r\n                    yield return new RedirectHandler(MaxAutomaticRedirections);\r\n                }\r\n                \r\n            }\r\n        }\r\n```",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/16964/comments",
    "author": "tai-yi",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2019-11-11T11:34:53Z",
        "body": "@tai-yi thanks for contacting us.\r\n\r\nWe will look into this and get back to you."
      },
      {
        "user": "tai-yi",
        "created_at": "2019-11-11T12:06:55Z",
        "body": "@javiercn , after more debugging, `WebApplicationFactoryClientOptions.CreateHandlers()` is correct.\r\n\r\n Because I set wrong `Expires` in `CookieOptions`."
      }
    ]
  },
  {
    "number": 16945,
    "title": "[blazor]how to resolve prerender twice call ?",
    "created_at": "2019-11-09T16:30:01Z",
    "closed_at": "2019-11-11T11:18:02Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/16945",
    "body": "My component is instantiated twice, so ,if i write a lib ,i must avoid/careful use all before onafterrender things? what i can do？\r\n ",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/16945/comments",
    "author": "git-net",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2019-11-10T11:39:45Z",
        "body": "@git-net thanks for contacting us.\r\n\r\nWhen you prerender the component runs\r\nOnInitialized\r\nOnInitializedAsync\r\nOnParametersSet\r\nOnParametersSetAsync\r\n\r\nWhen you don't prerender, the component runs\r\nOnInitialized\r\nOnInitializedAsync\r\nOnParametersSet\r\nOnParametersSetAsync\r\nOnAfterRender\r\nOnAfterRenderAsync\r\n\r\nThe first 4 methods will run twice, as the component is rendered twice, the first time into static html and the second one as an interactive component. You can avoid running code twice if you put it inside OnAfterRender, but otherwise it will run twice. As the component renders twice, is imperative that the same logic runs to produce the initial render."
      },
      {
        "user": "git-net",
        "created_at": "2019-11-11T02:19:00Z",
        "body": "i have some logic that can't run twice,and OnAfterRender looks later.\r\nnow i move some code to OnAfterRender,and check firstrender.\r\n```\r\nif(firstrender) { \r\n  ..... // init code here;  \r\ncomponentInit=true;//\r\nthis.StateHasChanged();\r\n}\r\n```\r\nand change my render code\r\n```\r\nif(componentInit) builder........\r\n```\r\ni means,use (OnAfterRender and firstrender ) do init things, and  force component rerender,is right way?\r\n"
      },
      {
        "user": "git-net",
        "created_at": "2019-11-11T03:34:54Z",
        "body": "constructor run twice too."
      },
      {
        "user": "javiercn",
        "created_at": "2019-11-11T11:17:35Z",
        "body": "@git-net That sounds abut right.\r\n\r\n> constructor run twice too.\r\n\r\nYes, this is expected too, as the app  prerenders, shuts down and then starts again."
      },
      {
        "user": "javiercn",
        "created_at": "2019-11-11T11:17:56Z",
        "body": "I'm closing this issue as the question has been answered and the behavior is by design."
      }
    ]
  },
  {
    "number": 16943,
    "title": "IApplicationBuilder DI is null",
    "created_at": "2019-11-09T11:50:23Z",
    "closed_at": "2019-11-11T13:19:05Z",
    "labels": [
      "question",
      "area-mvc"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/16943",
    "body": "During the project running, I now use rolysn to dynamically generate the assembly and then applicationparts to add the dynamically generated assembly, but the route does not take effect, and I need to add a new datasource under IApplicationBuilder.Properties, but the di IApplicationBuilder object appears to be null",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/16943/comments",
    "author": "wangyue2017",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2019-11-10T11:43:13Z",
        "body": "@wangyue2017 thanks for contacting us.\r\n\r\nCould you provide a minimal repro project that illustrates your issue. From the description you provided we can't understand what you are trying to achieve and what your scenario is."
      },
      {
        "user": "wangyue2017",
        "created_at": "2019-11-11T01:52:20Z",
        "body": "```C#\r\npublic class DynamicService: IDynamicService\r\n    {\r\n        private const string EndpointRouteBuilder = \"__EndpointRouteBuilder\";\r\n        private readonly ApplicationPartManager _partManager;\r\n        private readonly IApplicationBuilder _builder;\r\n        //private readonly ServiceProvider.GetRequiredService<ControllerActionEndpointDataSource>();\r\n        public DynamicService(ApplicationPartManager partManager\r\n            , IApplicationBuilder builder\r\n            )\r\n        {\r\n            _partManager = partManager;\r\n            _builder = builder;\r\n        }\r\n\r\n        public async Task Regiest()\r\n        {\r\n            #region assembly create\r\n            var file = Directory.GetCurrentDirectory() + \"\\\\TestController.txt\";\r\n            string dynamic = \"\";\r\n            using (var read = new StreamReader(file))\r\n            {\r\n                dynamic = read.ReadToEnd();\r\n            }\r\n            var assemblyPath = Path.GetDirectoryName(typeof(object).Assembly.Location);\r\n            var systems = AssemblyLoadContext.Default\r\n                                                .Assemblies\r\n                                                .Where(o => !o.FullName.Contains(\"Anonymously Hosted DynamicMethods Assembly\"))\r\n                                                .Select(o => MetadataReference.CreateFromFile(o.Location)).ToList();\r\n\r\n            var tree = SyntaxFactory.ParseSyntaxTree(dynamic);\r\n            var guid = Guid.NewGuid().ToString();\r\n            var compilation = CSharpCompilation.Create($\"{guid}.dll\", new[] { tree },\r\n                options: new CSharpCompilationOptions(OutputKind.DynamicallyLinkedLibrary).WithOptimizationLevel(OptimizationLevel.Debug),\r\n                references: systems);\r\n\r\n            Assembly compiledAssembly;\r\n            using (var stream = new MemoryStream())\r\n            {\r\n                using (var pdf = new MemoryStream())\r\n                {\r\n                    var compileResult = compilation.Emit(stream, pdf);\r\n                    var assemblyBytes = stream.GetBuffer();\r\n                    var pdbBytes = pdf.GetBuffer();\r\n                    compiledAssembly = Assembly.Load(assemblyBytes, pdbBytes);\r\n                }\r\n            }\r\n            #endregion\r\n\r\n            _partManager.ApplicationParts.Add(new AssemblyPart(compiledAssembly));\r\n\r\n            _partManager.FeatureProviders.Add(new DynamicControllerFeatureProvider());\r\n\r\n            _builder.Properties.Keys[EndpointRouteBuilder] = \r\n\r\n           await Task.CompletedTask;\r\n        }\r\n    }\r\n```\r\n\r\nIApplicationBuilder  is null"
      },
      {
        "user": "davidfowl",
        "created_at": "2019-11-11T07:01:53Z",
        "body": "IApplicationBuilder isn't a service you can access via DI."
      },
      {
        "user": "wangyue2017",
        "created_at": "2019-11-11T07:14:37Z",
        "body": "So？I can only define one static class  \r\n`public static class IApplicationTool\r\n{\r\n     public static IApplicationBuilder ApplicationBuilder { set;get; }\r\n}`\r\n\r\n` public void Configure(IApplicationBuilder app, IWebHostEnvironment env)\r\n        {\r\n            app.UseStaticFiles();\r\n\r\n            app.UseRouting();\r\n\r\n            app.UseHealthChecks(\"/health\", new Microsoft.AspNetCore.Diagnostics.HealthChecks.HealthCheckOptions()\r\n            {\r\n                ResultStatusCodes =\r\n                {\r\n                    [HealthStatus.Healthy] = StatusCodes.Status200OK,\r\n                    [HealthStatus.Degraded] = StatusCodes.Status200OK,\r\n                    [HealthStatus.Unhealthy] = StatusCodes.Status503ServiceUnavailable\r\n                },\r\n                AllowCachingResponses = false\r\n            });\r\n\r\n            app.UseEndpoints(endpoints =>\r\n            {\r\n                endpoints.MapControllers();\r\n            });\r\n          IApplicationTool.ApplicationBuilder=app;\r\n        }`"
      },
      {
        "user": "javiercn",
        "created_at": "2019-11-11T13:19:05Z",
        "body": "I'm still not 100% sure what you are trying to accomplish here.\r\n\r\nI'll give you a few pointers, but this question is more suited for stack-overflow.\r\n* Application parts must be initialized before you try to initialize any service and can't be initialized within a service. There are many things that can/will go wrong if that's the case.\r\n* You seem to be compiling things on the fly, that is not something that we support out of the box and I'm not even sure you'll be able to make it work.\r\n  * Creating an assembly part for the assembly directly is likely the wrong thing to do.\r\n  * You are likely missing things on the generated assembly due to the fact that you are compiling things yourself directly instead of going through the normal SDK compilation flow.\r\n\r\nMy recommendation is that you try to at least compile everything you might need beforehand and simply perform the loading at the last minute.\r\n\r\nIt looks like this is a question about how to use ASP.NET Core. While we do our best to look through all the issues filed here, to get a faster response we suggest posting your questions to StackOverflow using the asp.net-core tag.\r\n\r\nI'm closing this issue as there's no more action for us to take here."
      }
    ]
  },
  {
    "number": 16897,
    "title": "Blazor JS interop and client-side DOM lifetime",
    "created_at": "2019-11-07T16:32:40Z",
    "closed_at": "2019-11-07T17:33:27Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/16897",
    "body": "### Is your feature request related to a problem? Please describe.\r\nI have client-side rendered graphs in a Blazor application where the raw data is sent using JavaScript interop and then converted to SVG elements using d3. I want to re-render my graph when the browser window is resized.\r\n\r\nThe problem is that the `\"resize\"` event is provided globally on `window`. In order for my Blazor component's client-side JavaScript to add the event listener when navigated to and remove it when navigating away, I need some control over the client-side lifetime of the component. I definitely don't want to leak event listeners while the application is running.\r\n\r\nCurrently, all my client-side JavaScript interop entry points start with an `ensureInitialized()` method call that makes sure the event listener is registered on `window` once and to remove the listener, I have implemented `IDisposable` in the Razor component server-side and fire-and-forget one \"last\" JS interop call to remove the listener.\r\n\r\nThat feels both racy and brittle, but it seems to work in practice.\r\n\r\n### Describe the solution you'd like\r\nAs one option to have better guarantees, the components could carry the client-side methods to call when activating / deactivating the DOM:\r\n```razor\r\n<svg @js-interop-onadded=\"Graph.Initialize\" @js-interop-onremoved=\"Graph.Cleanup\">\r\n</svg>\r\n```\r\nwhere the `Graph.Initialize` method is available globally on window like all other JS interop methods. The client-side Blazor library would call those methods as part its DOM manipulation. That way all initialization and cleanup is done before the first and after the last JS interop call from Blazor.\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/16897/comments",
    "author": "Tragetaschen",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2019-11-07T17:20:09Z",
        "body": "@Tragetaschen thanks for contacting us.\r\n\r\nI think what you are doing is just fine. The first OnAfterRender can be used for initialization and IDisposable can be used for removal. As an alternative, you can perform an initial call inside the OnAfterRender and setup a mutation observer so that when your root element gets removed it unregisters from all the events. \r\n\r\nThat way your cleanup logic is setup on the first call.\r\n\r\nThis can also go a bit further and setup a mutation observer to detect when a specific attribute gets applied to any element in the dom tree and run the appropriate logic at that time. That way you can have your data-js-interop-onadded=\"method\" data-js-interop-onremoved=\"method\" applied directly from within the client."
      },
      {
        "user": "javiercn",
        "created_at": "2019-11-07T17:33:27Z",
        "body": "Closing this issue as the question has been answered."
      }
    ]
  },
  {
    "number": 16893,
    "title": "Is 'Synchronous Invoke' possible in server-side blazor?",
    "created_at": "2019-11-07T14:41:29Z",
    "closed_at": "2019-11-07T17:12:07Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/16893",
    "body": "Hi Team,\r\n \r\nIn blazor server-side, we have used 'invokeAsync' and invokemethodasync' for invoking methods and operation asynchronously. is this possible to make operations synchronously in blazor server-side? If it is possible, then it will affect any server-side blazor behaviours? \r\n\r\nCan any one suggest me on this?\r\n\r\n### Further technical details\r\n- ASP.NET Core version sdk 3.1 preview1\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/16893/comments",
    "author": "kmuthukumar23",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2019-11-07T17:12:07Z",
        "body": "@kmuthukumar23 thanks for contacting us.\r\n\r\nNo, it's not possible as the call needs to be sent through the SignalR connection and there's no way to make that synchronous."
      }
    ]
  },
  {
    "number": 16839,
    "title": "How to setup integration tests so that Program.Main gets tested",
    "created_at": "2019-11-05T04:19:28Z",
    "closed_at": "2019-11-06T10:02:58Z",
    "labels": [
      "question",
      "area-mvc"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/16839",
    "body": "The gist of my question is: how to setup integration tests so that Program.Main gets tested, or how to move most of the logic that are generally found in Program.Main to start up so to make Program.Main smaller, hence not so critical if not covered by integration tests. \r\n\r\nDescription:\r\nI can setup an integration test as the following: \r\n\r\n```csharp\r\npublic class WebAPITest : IClassFixture<WebApplicationFactory<Startup>>\r\n{\r\n    private readonly WebApplicationFactory<Startup> _factory;\r\n\r\n    public WebAPITest(WebApplicationFactory<Startup> factory)\r\n    {\r\n        _factory = factory;\r\n    }\r\n\r\n    [Fact]\r\n    public async Task IfConsumerReceives()\r\n    {\r\n        var client = _factory.CreateClient();\r\n        var response = await client.GetAsync(\"/api/v1/items\");\r\n        response.EnsureSuccessStatusCode();\r\n    }\r\n}\r\n```\r\n\r\nwhere I define `Startup` and `Program.Main` as the following: \r\n\r\n```csharp\r\npublic class Program\r\n{\r\n    public static void Main(string[] args)\r\n    {\r\n        var host = HostBuilder(configuration, args).Build();\r\n        host.Run();\r\n    }\r\n\r\n    public static IHostBuilder CreateHostBuilder(string[] args) => \r\n        Host.CreateDefaultBuilder(args)\r\n        .ConfigureWebHostDefaults(builder =>\r\n        {\r\n            builder.UseStartup<Startup>();\r\n        });\r\n\r\n    private static IHostBuilder HostBuilder(IConfiguration configuration, string[] args) =>\r\n        Host.CreateDefaultBuilder(args)\r\n        .ConfigureWebHostDefaults(builder =>\r\n        {\r\n            builder.UseConfiguration(configuration);\r\n            builder.UseStartup<Startup>();\r\n            builder.CaptureStartupErrors(false);\r\n            builder.UseContentRoot(Directory.GetCurrentDirectory());\r\n        }).\r\n        UseServiceProviderFactory(new AutofacServiceProviderFactory());\r\n}\r\n\r\npublic class Startup\r\n{\r\n    public IConfiguration Configuration { get; }\r\n    public ILifetimeScope AutofacContainer { get; private set; }\r\n    public IWebHostEnvironment WebHostingEnvironment { get; private set; }\r\n\r\n    public Startup(IConfiguration configuration, IWebHostEnvironment env)\r\n    {\r\n        Configuration = configuration;\r\n        WebHostingEnvironment = env;\r\n    }\r\n\r\n    public void ConfigureServices(IServiceCollection services)\r\n    {\r\n        services\r\n            .AddMvc(options => options.EnableEndpointRouting = false)\r\n            .SetCompatibilityVersion(CompatibilityVersion.Version_3_0);\r\n        services.AddOptions();\r\n    }\r\n\r\n    public void ConfigureContainer(ContainerBuilder builder)\r\n    {\r\n        //some configs such as: builder.RegisterModule(new AutofacModule());\r\n    }\r\n\r\n    public void Configure(IApplicationBuilder app, IWebHostEnvironment env)\r\n    {\r\n        app.UseHsts();\r\n        app.UseHttpsRedirection();\r\n        app.UseMvc();;\r\n    }\r\n}\r\n```\r\n\r\nI guess `Program.Main` and `Startup` as pretty much how they are commonly setup. \r\n\r\nMy concerns are: \r\n\r\n1. with this setup, integration tests start from `Startup` and `Program.Main` and all the `Host` setup/config is not tested. \r\n\r\n2. Some `Startup` logic may not work without the configs in `Program.Main`. For instance, `autofac` will fail with the following error without `UseServiceProviderFactory(new AutofacServiceProviderFactory()` set in the `Program.Main`, which is not executed when running the integration tests as the given example. \r\n\r\n> Unable to cast object of type 'Microsoft.Extensions.DependencyInjection.ServiceCollection' to type 'Autofac.ContainerBuilder'.\r\n\r\nWhat is the recommended way to setup `Startup`, `Program.Main`, or the integration tests so that `Program.Main` gets in the integration test execution path?\r\n\r\n\r\nPS: I generally end up creating a custom `WebApplicationFactory` where I mostly repeat what is in `Program.Main`, as the following, however, I guess this approach is not super exciting as it does not test the actual `Program.Main`: \r\n\r\n```csharp\r\npublic class WebAPITestApplicationFactory : WebApplicationFactory<Startup>\r\n{\r\n    protected override IHostBuilder CreateHostBuilder()\r\n    {\r\n        return Host.CreateDefaultBuilder()\r\n        .ConfigureWebHostDefaults(builder =>\r\n        {\r\n            builder.UseStartup<Startup>();\r\n        }).\r\n        UseServiceProviderFactory(new AutofacServiceProviderFactory());\r\n    }\r\n}\r\n```\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/16839/comments",
    "author": "nxtx",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2019-11-05T17:11:46Z",
        "body": "@nxtx thanks for contacting us.\r\n\r\nI'm not sure I understand your question. \r\n\r\nWebApplicationFactory will call into your CreateHostBuilder method by default. If you need something else, then you need to override CreateHostBuilder and call it yourself."
      },
      {
        "user": "nxtx",
        "created_at": "2019-11-05T17:31:51Z",
        "body": "@javiercn visual studio fails on the following without any error message; so I am not sure how to set up `Program` as Entry point: \r\n\r\n```\r\npublic class WebAPITest : IClassFixture<WebApplicationFactory<Program>>\r\n```"
      },
      {
        "user": "javiercn",
        "created_at": "2019-11-05T18:03:28Z",
        "body": "@nxtx based on your code I would simply do as follows. Make `private static IHostBuilder HostBuilder(IConfiguration configuration, string[] args)` public\r\n\r\n```csharp\r\npublic class WebAPITestApplicationFactory : WebApplicationFactory<Startup>\r\n{\r\n    protected override IHostBuilder CreateHostBuilder()\r\n    {\r\n        var configuration = ...;\r\n        var args = ...;\r\n        return HostBuilder(configuration, args);\r\n    }\r\n}\r\n```\r\n\r\nAm I missing something here?"
      },
      {
        "user": "nxtx",
        "created_at": "2019-11-05T18:20:49Z",
        "body": "Two points: \r\n- instead of `Startup`, I want to use `Program`, hence get it covered with the integration testss;\r\n- Changing access modifier from `protected` to `public` causes compile-time error:\r\n   > cannot change access modifier when overriding `protected` inherited member `WebApplicationFactory<Startup>.CreateHostBuilder()`. \r\n\r\nPS: visual studio fails when calling the constructor of `WebApplicationFactory<Startup>` or `WebApplicationFactory<Program>` with the following error message: \r\n> The following constructor parameters did not have matching fixture data: WebApplicationFactory`1 factory"
      },
      {
        "user": "kle622",
        "created_at": "2019-11-05T18:39:14Z",
        "body": "Is there any more specific reason why you want to include `Program` as part of the tests? \r\nThe way it helps me to see it is, `Startup` class is the encapsulation of your application and `Program` class is simply a driver in the same way your integration test is a driver."
      },
      {
        "user": "nxtx",
        "created_at": "2019-11-05T18:43:19Z",
        "body": "I would like any possible issues with `Program` (e.g., when my colleagues make PRs) be caught by integration tests. More specifically, recently we forgot to include `UseServiceProviderFactory(new AutofacServiceProviderFactory())` in `HostBuilder` in `Program`, and since we mainly rely on tests to capture issues, we noticed the problem long after our product was released. Hence, we're would like to add integration tests that start test from `Program`. "
      },
      {
        "user": "nxtx",
        "created_at": "2019-11-05T21:24:57Z",
        "body": "A clarification; even with the following `Program` is not tested (e.g., `HostBuilder` is not called): \r\n\r\n```csharp\r\npublic class WebAPITest : IClassFixture<WebAPITestApplicationFactory>\r\n{\r\n    private readonly WebAPITestApplicationFactory _factory;\r\n    public WebAPITest(WebAPITestApplicationFactory factory)\r\n    {\r\n        _factory = factory;\r\n    }\r\n}\r\n\r\npublic class WebAPITestApplicationFactory : WebApplicationFactory<Program>\r\n{\r\n    public WebAPITestApplicationFactory() : base()\r\n    { }\r\n}\r\n```"
      },
      {
        "user": "javiercn",
        "created_at": "2019-11-05T21:48:44Z",
        "body": "We don’t run your program.Main, the convention is to look for CreateHostBuilder as we need access to the host.\r\n\r\nOur recommendation is that you don’t put any logic within the program main itself other than the calls present during project creation.\r\n\r\nAs an alternative add an additional test that doesn’t use WAF and that simply calls your program main to start the app and verify it works."
      },
      {
        "user": "javiercn",
        "created_at": "2019-11-06T10:02:58Z",
        "body": "I'm closing this issue as the question has been answered."
      },
      {
        "user": "nxtx",
        "created_at": "2019-11-06T19:14:58Z",
        "body": "Thanks for the clarification. "
      }
    ]
  },
  {
    "number": 16801,
    "title": "Blazor WebAssembly Routing ❓ and 💡",
    "created_at": "2019-11-04T08:19:17Z",
    "closed_at": "2019-11-04T17:19:06Z",
    "labels": [
      "question",
      "enhancement",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/16801",
    "body": " I like the current routing design, however still have few questions 🙃\r\n\r\n- How to get an overview of the sitemap from a single point?\r\n- How to reuse a component page with a different model but for a different route?\r\n- How to handle nested route? For example:\r\n\r\nuser/XXX/posts\r\nuser/XXX/settings\r\n\r\n```\r\n+------------------+                  +-----------------+\r\n| User             |                  | User            |\r\n| +--------------+ |                  | +-------------+ |\r\n| | posts        | |  +------------>  | | settings    | |\r\n| |              | |                  | |             | |\r\n| +--------------+ |                  | +-------------+ |\r\n+------------------+                  +-----------------+\r\n```\r\nHere is a very rough idea 💡\r\n\r\n```\r\n<Routes AppAssembly=\"@typeof(Program).Assembly\">\r\n   <Guards>\r\n      <Guard from=\"\" to=\"\" do=\"\"></Guard>\r\n   </Guards>\r\n   <Route path=\"user/:id\" component=\"@typeof(User)\" >\r\n      <Route path=\"\" component=\"@typeof(UserHome)\" />\r\n      <Route path=\"posts\" component=\"@typeof(UserPosts)\"/>\r\n      <Route path=\"settings\" component=\"@typeof(UserSettings)\" />\r\n   </Route>\r\n</Routes>\r\n```\r\nWe are composing our application with components, I ❤ it, if we can achieve more with this architect, I believe many developers will buy you a ☕ when meet.",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/16801/comments",
    "author": "jzs11",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2019-11-04T11:17:19Z",
        "body": "@jingzheshan thanks for contacting us.\r\n\r\nThose are not features that our current routing system supports. The best you could do right now/today is to factor your components in a way where its easy to create a routable page with each of the combinations you need."
      },
      {
        "user": "javiercn",
        "created_at": "2019-11-04T17:19:06Z",
        "body": "> * How to get an overview of the sitemap from a single point?\r\n\r\nYou could write a component that reflects over all component types on your assembly that have a [Route] attribute to build a site map for your app.\r\n\r\n> * How to reuse a component page with a different model but for a different route?\r\n\r\nYou could have more than one page directive to define different routes.\r\n\r\n> * How to handle nested route? For example:\r\n\r\nThis is not a current feature we support. We have a separate bug tracking it."
      },
      {
        "user": "jzs11",
        "created_at": "2019-11-04T20:23:28Z",
        "body": "@javiercn thanks for the answer. \r\nI am very excited to see the progress of the Blazor WebAssembly made so far, impressive stuff 👏\r\nLet's push it to next level and I can not wait to see it in production next year 😄\r\n"
      }
    ]
  },
  {
    "number": 16630,
    "title": "In Blazor- Using Tvalue for <CascadingValue> tag to get the component instance in other page.",
    "created_at": "2019-10-29T10:42:28Z",
    "closed_at": "2019-10-29T12:54:48Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/16630",
    "body": "##Description \r\nIs there any possibility of getting the instances of the component to another razor page using the Tvalue in <CascadingValue> Tag.\r\n\r\nFor eg:- \r\n> Page 1\r\n`<CascadingValue TValue=\"test\" />`\r\n\r\n> Page 2\r\nI need to get like the page instance like below.\r\n\r\n`this.test`\r\n\r\nIs this possible in blazor ?\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/16630/comments",
    "author": "Indrajith-Sync",
    "comments": [
      {
        "user": "SteveSandersonMS",
        "created_at": "2019-10-29T12:54:48Z",
        "body": "I'm not sure why you're trying to specify `TValue`. You only need to use `Value`, e.g.:\r\n\r\n```razor\r\n<CascadingValue Value=\"test\">...</CascadingValue>\r\n```"
      }
    ]
  },
  {
    "number": 16583,
    "title": "Blazor. OnParametersSet fires not as expected",
    "created_at": "2019-10-28T11:10:57Z",
    "closed_at": "2019-10-28T11:31:05Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/16583",
    "body": "Hi. It's simply component.\r\n**Index.razor:**\r\n```\r\n@page \"/\"\r\n\r\n<MyCoolComponent>\r\n    <Template>\r\n        <div style=\"background-color:red;height:100px;width:100px;\"></div>\r\n    </Template>\r\n</MyCoolComponent>\r\n\r\n<button @onclick=\"DoNothing\">Do Nothing</button>\r\n\r\n@code {\r\n    private void DoNothing(MouseEventArgs e)\r\n    {\r\n\r\n    }\r\n}\r\n```\r\n\r\n**MyCoolComponent.razor:**\r\n```\r\n@msg\r\n@Template\r\n\r\n@code {\r\n    [Parameter]\r\n    public RenderFragment Template { get; set; }\r\n    string msg;\r\n\r\n    protected override void OnParametersSet()\r\n    {\r\n        msg =$\"OnParametersSet of MyCoolComponent fires every time on click button on Parent Page, \" +\r\n                $\"last time in {DateTime.Now.ToString()}. Why?\";\r\n    }\r\n}\r\n```\r\n\r\nOnParametersSet event of MyCoolComponent fires every time on click button on Parent Page, why?",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/16583/comments",
    "author": "kpolkovnikov",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2019-10-28T11:31:05Z",
        "body": "@kpolkovnikov thanks for contacting us.\r\n\r\nA new render fragment delegate gets created on each render (which happens automatically after the event-handler for `DoNothing` runs.\r\n\r\nBlazor can't determine that the new RenderFragment delegate is equal to the old render fragment delegate and it believes the parameters for the component have changed, thus invoking OnParametersSet with the new RenderFragment instance.\r\n\r\n@SteveSandersonMS can correct me if I'm wrong.\r\n\r\nI'm closing this issue as the question has been answered."
      },
      {
        "user": "SteveSandersonMS",
        "created_at": "2019-10-28T11:36:59Z",
        "body": "You're right @javiercn.\r\n\r\nLonger term I'm hoping we can find some optimizations where we detect common scenarios where the `RenderFragment` actually is the same. I would guess that if the delegate points to the same `MethodInfo` and `Target`, then it has to be the same. In the scenario posted here, since no variables are captured inside the closure, I would expect the `Target` values to be the same.\r\n\r\nIt's also possible that future C# compiler improvements will increase the range of cases where delegates are cached (it does this in a few cases already), so we may get some improvements automatically."
      },
      {
        "user": "kpolkovnikov",
        "created_at": "2019-10-28T11:39:44Z",
        "body": "Thank you for the supersonic answer) Is there a workaround in this scenario to prevent the OnParametersSet event from starting, such as by using @key or otherwise?"
      },
      {
        "user": "SteveSandersonMS",
        "created_at": "2019-10-28T12:07:07Z",
        "body": "@kpolkovnikov You can override `ShouldRender` to put in custom logic to skip rendering if you think it's unnecessary in certain cases."
      },
      {
        "user": "kpolkovnikov",
        "created_at": "2019-10-28T13:15:16Z",
        "body": "Thank you so much, Steve."
      }
    ]
  },
  {
    "number": 16573,
    "title": "Blazor Server Show if websockets are not available",
    "created_at": "2019-10-27T22:56:05Z",
    "closed_at": "2019-10-28T16:15:02Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/16573",
    "body": "It will be nice to display a message to the user if websockets are not enabled or if SignalR connection cannot be established. \r\n\r\nIt will be also nice to redirect the user to another url where Blazor WebAssembly is running. ",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/16573/comments",
    "author": "mihaimyh",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2019-10-28T08:39:26Z",
        "body": "@mihaimyh thanks for contacting us.\r\n\r\nYou can do all these things yourself.\r\n```html\r\n<script src=\"_framework/blazor.server.js\" autostart=\"false\"></script>\r\n    <script>\r\n        (function start() {\r\n            Blazor.start({\r\n                logLevel: 1, // LogLevel.Debug\r\n                configureSignalR: builder => builder.configureLogging(\"debug\") // LogLevel.Debug\r\n            });\r\n        }).then(() => ... )()\r\n```\r\n1. You can configure logging/signalr to know the transport (I believe).\r\n2. If blazor fails to start it will return a failed promise.\r\n3. From the failed promise you can redirect."
      },
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-10-28T16:15:02Z",
        "body": "Thanks for contacting us. We believe that the question you've raised have been answered. If you still feel a need to continue the discussion, feel free to reopen it and add your comments."
      }
    ]
  },
  {
    "number": 15420,
    "title": "[Blazor] Frameless browser window",
    "created_at": "2019-10-25T22:12:12Z",
    "closed_at": "2019-10-28T16:41:36Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/15420",
    "body": "Is it possible to implement a feature in Blazor to make the browser window frameless as in Electron?",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/15420/comments",
    "author": "WillianGruber",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2019-10-28T08:54:36Z",
        "body": "@WillianGruber thanks for contacting us.\r\n\r\nIf you are talking of server-side blazor or client-side blazor, the short answer is no. They run inside a browser and hence the browser UI will always show up.\r\n\r\nThe best you can do is make the browser window/tab full screen with F11 to remove the browser frame.\r\n\r\nI believe we have some ongoing experiments with blazor an electron, but we are still investigating that space."
      },
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-10-28T16:42:34Z",
        "body": "To add to what @javiercn has said above, you can also look at the PWA APIs."
      }
    ]
  },
  {
    "number": 15396,
    "title": "[question] Could we build blazor project into pure js library?",
    "created_at": "2019-10-25T06:37:58Z",
    "closed_at": "2019-10-25T07:49:45Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/15396",
    "body": "While I have seen js interop in blazor. I was wonder that, could we build some C# utility library with blazor but not use any blazor component, and instead build it into pure js/wasm then include it into normal HTML/JS project. Then using `DotNet.invokeMethod` to call it in js file\r\n\r\nIs there a project template for this pattern?",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/15396/comments",
    "author": "Thaina",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2019-10-25T07:49:45Z",
        "body": "@Thaina thanks for contacting us.\r\n\r\nThis is a question better suited for the mono team. \r\n\r\nIn general I don't think it would be practical given that you would need to bring along the runtime and other code for it to work. It would also not be possible to call it with DotNet.invokeMethod as that's not something we've explored."
      }
    ]
  },
  {
    "number": 15395,
    "title": "JavaScript scheduler framework is not being displayed in a page.",
    "created_at": "2019-10-25T04:17:39Z",
    "closed_at": "2019-10-30T09:22:04Z",
    "labels": [
      "question",
      "Needs: Author Feedback",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/15395",
    "body": "There's no scheduler written in Blazor as of the moment that satisfy my requirement and open source or free of use. So I decided to use Syncfusion scheduler (JavaScript Essential 1) written in JavaScript. So now, when I load a certain Blazor component it doesn't load. However, if this is placed inside the _Host.cshtml\r\n\r\n`<div style=\"float: left\" id=\"Schedule1\"></div>`\r\n\r\nIt just load everything. I know this is Blazor intended for Single Page Application and this JS scheduler is not for SPA. But is there a way a can still load or call the Scheduler when the component is loaded?",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/15395/comments",
    "author": "jhunexjun",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2019-10-25T07:54:10Z",
        "body": "@jhunexjun thanks for contacting us.\r\n\r\nWe are not aware of any specific issues concerning your scenario. As long as the component is in _Host.cshtml and not inside the Blazor component or viceversa, then there should be no problems.\r\n\r\nCould you check if it works for you when you take the Blazor component out of the equation? If not, could you provide a link to a github repo with a minimal repro project so that we can help you?"
      },
      {
        "user": "javiercn",
        "created_at": "2019-10-30T09:22:04Z",
        "body": "We are closing this issue as we haven't seen community engagement in a while. If new information is provided we will re-evaluate it."
      }
    ]
  },
  {
    "number": 15383,
    "title": "[Blazor] Proposal: Async wrapper components",
    "created_at": "2019-10-24T18:23:49Z",
    "closed_at": "2019-10-25T16:20:27Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/15383",
    "body": "#### Summary\r\nToday it's not possible to await calls inside markup in blazor, however a very similar effect can be accomplished by wrapping the task in a component that awaits it in `ParametersSetAsync` and then outputs a renderfragment with the result. This approach also enabled rendering other markup while waiting for the task, such as a \"loading\" text.\r\n\r\nI believe it will be very common for people to want to await things in markup, we certainly use it quite a bit, so it would useful to have in the framework.\r\nBesides tasks there is also the async stream support in c#8 and being able to update values as they come in has been very useful for us as well.\r\n\r\nI propose three components to enable this.\r\n\r\n##### AsyncValue \r\nTakes a task<t> used to show a single value in an async fashion\r\n\r\n##### AsyncList\r\nTakes an `IAsyncEnumerable<T>` and appends values as they come in, useful for a log or a chat\r\n\r\n##### AsyncUpdatedValue\r\nTakes an `IAsyncEnumerable<T>` and updates the value in place, useful for a status label or progress bar\r\n\r\n#### Open questions:\r\nIs this even a good idea?\r\nDoes this already exist?\r\nUse a renderfragment for loading or expose a property that can be bound to by the caller?\r\nBetter names?\r\nMultiple components or a single one with configuration properties?\r\nBetter handling of prerendering? \r\n\r\n#### Example\r\n\r\n    @page \"/\"\r\n\r\n    <AsyncValue Source=\"@SomeValue\">\r\n        <LoadingContent>\r\n            <p>Loading</p>\r\n        </LoadingContent>\r\n        <ChildContent>\r\n            <p>@context</p>\r\n        </ChildContent>\r\n    </AsyncValue>\r\n\r\n    <AsyncValue Source=\"@SomeValue\">\r\n        <p>@context</p>\r\n    </AsyncValue>\r\n\r\n    <AsyncUpdatedValue Source=\"@ASequenceOfValues\">\r\n        <p>@context%</p>\r\n    </AsyncUpdatedValue>\r\n\r\n    <ul>\r\n        <AsyncList MaxCount=\"10\" Source=\"@ASequenceOfValues\">\r\n            <li>@context</li>\r\n        </AsyncList>\r\n    </ul>\r\n    <button @onclick=\"GetValue\">GetValue</button>\r\n\r\n\r\n    @code {\r\n        public Task<int> SomeValue { get; set; }\r\n        public IAsyncEnumerable<int> ASequenceOfValues { get; set; }\r\n\r\n        protected override void OnAfterRender(bool firstRender)\r\n        {\r\n            if (firstRender)\r\n            {\r\n                SomeValue = GenerateValue();\r\n                ASequenceOfValues = GenerateValues();\r\n                StateHasChanged();\r\n            }\r\n        }\r\n\r\n        public async Task<int> GenerateValue()\r\n        {\r\n            await Task.Delay(1000);\r\n            return 5;\r\n        }\r\n\r\n        public async Task GetValue()\r\n        {\r\n            SomeValue = GenerateValue();\r\n            ASequenceOfValues = GenerateValues();\r\n        }\r\n\r\n        public async IAsyncEnumerable<int> GenerateValues()\r\n        {\r\n            for (int i = 0; i < 100; i++)\r\n            {\r\n                await Task.Delay(100);\r\n                yield return i;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n#### AsyncValue \r\n\r\n    @typeparam T\r\n\r\n    @if (_loading)\r\n    {\r\n        @LoadingContent\r\n    }\r\n    else\r\n    {\r\n        @ChildContent(_value)\r\n    }\r\n\r\n    @code {\r\n        T _value;\r\n        bool _loading  = true;\r\n\r\n        [Parameter]\r\n        public Task<T> Source { get; set; }\r\n        [Parameter]\r\n        public RenderFragment<T> ChildContent { get; set; }\r\n        [Parameter]\r\n        public RenderFragment LoadingContent { get; set; }\r\n\r\n        protected override async Task OnParametersSetAsync()\r\n        {\r\n            _loading = true;\r\n            if (Source != null)\r\n            {\r\n                _value = await Source;\r\n                _loading = false;\r\n            }\r\n        }\r\n    }\r\n\r\n#### AsyncList\r\n\r\n    @typeparam T\r\n\r\n    @if (_loading)\r\n    {\r\n        @LoadingContent\r\n    }\r\n\r\n    else\r\n    {\r\n        @foreach (var item in _values)\r\n        {\r\n            @ChildContent(item)\r\n        }\r\n    }\r\n\r\n    @code {\r\n        Queue<T> _values = new Queue<T>();\r\n        bool _loading = true;\r\n\r\n        [Parameter]\r\n        public IAsyncEnumerable<T> Source { get; set; }\r\n        [Parameter]\r\n        public int MaxCount { get; set; } = int.MaxValue;\r\n\r\n        [Parameter]\r\n        public RenderFragment<T> ChildContent { get; set; }\r\n        [Parameter]\r\n        public RenderFragment LoadingContent { get; set; }\r\n\r\n        protected override async Task OnParametersSetAsync()\r\n        {\r\n            _loading = true;\r\n            _values.Clear();\r\n\r\n            if (Source != null)\r\n            {\r\n                await foreach (var item in Source)\r\n                {\r\n                    _values.Enqueue(item);\r\n                    _loading = false;\r\n                    if (_values.Count > MaxCount)\r\n                        _values.Dequeue();\r\n                    StateHasChanged();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n#### AsyncUpdatedValue\r\n\r\n    @typeparam T\r\n\r\n    @if (_loading)\r\n    {\r\n        @LoadingContent\r\n    }\r\n    else\r\n    {\r\n        @ChildContent(_value)\r\n    }\r\n\r\n    @code {\r\n        T _value;\r\n        bool _loading = true;\r\n\r\n        [Parameter]\r\n        public IAsyncEnumerable<T> Source { get; set; }\r\n        [Parameter]\r\n        public RenderFragment<T> ChildContent { get; set; }\r\n        [Parameter]\r\n        public RenderFragment LoadingContent { get; set; }\r\n\r\n        protected override async Task OnParametersSetAsync()\r\n        {\r\n            _loading = true;\r\n            if (Source != null)\r\n            {\r\n                await foreach (var item in Source)\r\n                {\r\n                    _value = item;\r\n                    _loading = false;\r\n                    StateHasChanged();\r\n                }\r\n            }\r\n        }\r\n    }",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/15383/comments",
    "author": "aL3891",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2019-10-24T22:42:10Z",
        "body": "@aL3891 Thanks for contacting us.\r\n\r\nBlazor already supports this type of behavior without the need to wrap things inside a component. When you do async work inside a component we call StateHasChanged after the synchronous part has finished running and again later when the asynchronous part finishes running.\r\n\r\nFor example, if you override `OnInitAsync` and do something like this:\r\n\r\n```razor\r\nif(_data == null){\r\n   <p>...Loading</p>\r\n}else{\r\n   @* Show data *@\r\n}\r\n\r\n@code{\r\n  List<string> _data;\r\n  OnInitAsync(){\r\n  \r\n  // A render will be triggered here\r\n  _ data = await GetData()\r\n  // Another render will be triggered here\r\n  }\r\n}\r\n```\r\n\r\nIsn't this what you are looking for?"
      },
      {
        "user": "aL3891",
        "created_at": "2019-10-25T10:57:56Z",
        "body": "Not really, i mean that is also good, but what i wanted to enable was the equivalent of awaiting something inside the markup itself, witch is not supported as far as i understand.\r\n\r\nAlso, doing this with a lot of tasks in a view can get a little verbose in my opinion, especially if i don't want to specify the order in witch they should be awaited. \r\n\r\nHaving IAsyncEnumerable support is also something that would be nice for the same reason, and that also results in a lot of very similar code. StateHasChanged is also necessary here because the async work is not finished, the iteration of the async stream is still going on, but the view should still re-render. At least that seems to be the case from my testing, but perhaps i missed something."
      },
      {
        "user": "javiercn",
        "created_at": "2019-10-25T11:10:59Z",
        "body": "I don't think we plan to introduce something like this on the framework itself. This is a good space for component libraries to fill-in if they feel there is a gap in the experience.\r\n\r\nThe framework goes to great lengths to avoid requiring the user to call state has changed, and for the most parts it succeeds in doing so.\r\n\r\nWith regards to the IAsyncEnumerable I feel that rather than wrapping the component inside another component it's easier to wrap the IAsyncEnumerable in some other IAsyncEnumerable that calls StateHasChanged through an extension method.\r\n\r\n```\r\nprotected Task OnInitializedAsync()\r\n{\r\n    await foreach(var result in GetAsyncEnumerable().WithStateUpdate(this))\r\n    {\r\n        elements.Add(result);\r\n    }\r\n}\r\n```\r\n\r\nIn your async IEnumerable you would call StateHasChanged inside each call to MoveNext() and that would be a potential solution.\r\n"
      },
      {
        "user": "aL3891",
        "created_at": "2019-10-25T15:35:13Z",
        "body": "Fair enough, I thought I'd share it since I've found this approach useful, perhaps it will be useful to someone else as well :)\r\n\r\nWrapping the iasyncenumerale in another one that calls StateUpdateChanged is a good approach and I'll probably use it myself, however the main value of this approach in my opinion is the ability to essentially use async calls directly in the markup without adding intermediate properties to the component.\r\n\r\nOne example for this is a list of users for example, where upon load, each item kicks of an async request for the user name or some other data. Of course this can be solved in alot of different ways but I've found this to be a very clean way to do it."
      },
      {
        "user": "javiercn",
        "created_at": "2019-10-25T15:37:50Z",
        "body": "@aL3891 Rendering in Blazor is sync by design. It needs to be really fast and if it was async, it would be much harder to make it performant."
      },
      {
        "user": "javiercn",
        "created_at": "2019-10-25T16:20:27Z",
        "body": "Thanks for the suggestion.\r\n\r\nWe are closing this issue as we don't plant to include this functionality in the framework."
      },
      {
        "user": "aL3891",
        "created_at": "2019-10-29T10:54:02Z",
        "body": "I know that, but i think a solution like this would enable users to get the best of both worlds by both having the actual rendering to not be async while still semantically \"awaiting\" async code inside the markup.\r\n\r\nNot having that ability at all may lead users to blocking async calls during rendering instead, and that's probably even less performant :) "
      }
    ]
  },
  {
    "number": 15251,
    "title": "Server Side Blazor g.cs files / component compiler optimization, minification",
    "created_at": "2019-10-22T02:54:35Z",
    "closed_at": "2019-10-22T16:50:26Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/15251",
    "body": "When compiling a Blazor solution, the components get compiled to files with extension g.cs.\r\nInside those files there're razor components converted to a rendertree, the problem I found is that the rendertree is polluted with lots and lots of lines like these:\r\n\r\n```\r\n__builder.AddMarkupContent(81, \"\\r\\n                        \");\r\n__builder.AddMarkupContent(18, \"\\r\\n                        \");\r\n__builder.AddContent(31, \"                                \");\r\n\r\n```\r\n\r\nI've checked out some of my components,  and these lines add an extra of up to 50% more calls to the builder, which is a lot.\r\n  One example which I copied these lines from, had 172 calls to the builder from which 58 were only blank spaces and \\r\\n that don't change anything but I presume consume RAM and CPU for nothing useful in the final html output.\r\n\r\n  ```\r\n__builder.AddContent(155, \"    \");\r\n      __builder.CloseElement();\r\n      __builder.AddMarkupContent(156, \"\\r\\n    \");\r\n      __builder.OpenElement(157, \"div\");\r\n      __builder.AddAttribute(158, \"class\", \"col-4\");\r\n      __builder.AddMarkupContent(159, \"\\r\\n        \");\r\n      __builder.OpenElement(160, \"div\");\r\n      __builder.AddAttribute(161, \"class\", \"card\");\r\n      __builder.AddMarkupContent(162, \"\\r\\n            \");\r\n      __builder.AddMarkupContent(163, \"<div class=\\\"card-header\\\">\\r\\n                <h4>Log</h4>\\r\\n            </div>\\r\\n            \");\r\n      __builder.OpenElement(164, \"div\");\r\n      __builder.AddAttribute(165, \"class\", \"card-body\");\r\n      __builder.AddMarkupContent(166, \"\\r\\n                \");\r\n      __builder.OpenComponent<Logger>(167);\r\n      __builder.CloseComponent();\r\n      __builder.AddMarkupContent(168, \"\\r\\n            \");\r\n      __builder.CloseElement();\r\n      __builder.AddMarkupContent(169, \"\\r\\n        \");\r\n      __builder.CloseElement();\r\n      __builder.AddMarkupContent(170, \"\\r\\n    \");\r\n      __builder.CloseElement();\r\n      __builder.AddMarkupContent(171, \"\\r\\n\");\r\n      __builder.CloseElement();\r\n```\r\n\r\nThis is an example,  where probably more cpu & ram is consumed for generating white spaces and indentation than actual useful HTML for the browser, and this is an server side scenario could be a big waste in resources.\r\n\r\nRegards!!",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/15251/comments",
    "author": "chrdlx",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-10-22T16:50:26Z",
        "body": "Thanks for contacting us, @chrdlx.\r\nWe intentionally avoid minification because in many situations customers need to preserve every space they add."
      }
    ]
  },
  {
    "number": 15246,
    "title": "How to insert a new line into a string in Blazor",
    "created_at": "2019-10-21T20:33:59Z",
    "closed_at": "2019-10-24T00:04:04Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/15246",
    "body": "The only way I can think of is using Razor templates. \\r\\n, Envirnoment.Newline, and anything else cannot make the compiler budge.\r\n\r\nHere is a working solution using Razor Template:\r\n\r\n    <p>@resultString</p>\r\n    \r\n    @code {\r\n        RenderFragment resultString =  @<p>Series not found <br />Error message</p>;\r\n                              \r\n    }\r\n\r\nIt is OK to use it like this. Do you know how to do it with using Razor Templates.\r\n\r\nThanks in advance...",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/15246/comments",
    "author": "enet-blazor",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-10-22T16:53:47Z",
        "body": "Thanks for contacting us, @enet-blazor.\r\nThe way you're using is is correct.\r\n\r\n@NTaylorMullen do you have anything else to add here?"
      },
      {
        "user": "NTaylorMullen",
        "created_at": "2019-10-22T17:26:08Z",
        "body": "Blazor tries to maintain the functionality of HTML. Meaning anything that would alter the display of HTML Blazor attempts to maintain; anything else, it reserves the capability to modify the underlying code.\r\n\r\n@enet-blazor I don't fully understand the question I think. Are you hoping that `\\r\\n` would translate into `<br />` automatically behind the scenes for you?"
      },
      {
        "user": "enet-blazor",
        "created_at": "2019-10-24T00:02:47Z",
        "body": "I just thought that '\\r\\n' would be translated to `<br />` as is done in the Razor generated classes.  \r\n\r\nIn my search, I've realized that I can also use MarkupString just like this:\r\n\r\n`MarkupString  resultString = (MarkupString) $\"Series not found <br />Error message\";`\r\n\r\n Many thanks..."
      }
    ]
  },
  {
    "number": 15216,
    "title": "Several migration issues",
    "created_at": "2019-10-21T11:48:34Z",
    "closed_at": "2019-10-21T18:20:51Z",
    "labels": [
      "question",
      "Needs: Author Feedback",
      "area-mvc"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/15216",
    "body": "Hi,\r\n\r\nafter upgrading from 2.2 to 3.0, my Web API has several issues seemingly regarded to conventions changed in version 3.0 which I couldn't find a reference to in the migration docs.\r\n\r\nGeneral info:\r\nAll my controllers are based on a custom `ApiControllerBase` with this code:\r\n```\r\n    [ApiController]\r\n    public abstract class ApiControllerBase : ControllerBase\r\n    {\r\n    }\r\n```\r\nMy expectation is that all controllers which descend from this base controller have standard API controller behavior.\r\n\r\nThese are my issues:\r\n\r\n### GET request routing returns status 400 `A non empty request body is required`\r\n\r\nSource: \r\n```\r\n        [HttpGet]\r\n        [Route(\"{id}\")]\r\n        public async Task<TaskModel> GetByIdAsync(int id, IList<string> extend = null)\r\n        {\r\n            return await _service.GetByIdAsync(id, extend);\r\n        }\r\n```\r\nThis happens because the controller interprets the `extend` parameter to be contained in the request body. In version 2.2, this was correctly interpreted as a query parameter.\r\nMy question: This is a GET request. A GET request shouldn't have a body. Why does this error occur?\r\n\r\n### Unauthorized users get redirected to the login page\r\nOn API controllers, unauthorized users get redirected to the login page when unauthorized, HTML markup is returned with a 200 code. Why aren't 401 responses sent instead?\r\n\r\nThanks for your help!\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/15216/comments",
    "author": "maxmantz",
    "comments": [
      {
        "user": "blowdart",
        "created_at": "2019-10-21T13:41:04Z",
        "body": "_On API controllers, unauthorized users get redirected to the login page when unauthorized, HTML markup is returned with a 200 code. Why aren't 401 responses sent instead?_\r\n\r\nWhat authorization are you using?"
      },
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-10-21T16:57:15Z",
        "body": "Thanks for contacting us, @maxmantz.\r\nFor the `ApiController` marked controllers the complex and collection type parameters are automatically expected to be coming `FromBody`. This behavior was behind a compat flag in 2.2, which in case if you haven't been using it, may come up as a breaking change for you.\r\nYou can force this to work the way you want by decorating these parameters with `[FromQuery]` attribute explicitly."
      },
      {
        "user": "maxmantz",
        "created_at": "2019-10-21T18:20:51Z",
        "body": "@blowdart I'm using IdentityServer4, so this could be related to the usage of that library and not to AspNetCore. I will investigate this further,\r\n\r\n@mkArtakMSFT Thanks for your pointers to the solution. This will fix it for me. "
      }
    ]
  },
  {
    "number": 15210,
    "title": "RefreshSignInAsync in Blazor throws headers related exception",
    "created_at": "2019-10-20T17:54:24Z",
    "closed_at": "2019-10-21T16:30:42Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/15210",
    "body": "### Describe the bug\r\n\r\nAfter updating the user claims, I wanted to refresh the object through RefreshSignInAsync, however this throws an exception since it probably is trying to update the cookies.\r\n\r\n> The response headers cannot be modified because the response has already started\r\n\r\n### To Reproduce\r\nIn a  Blazor server app, call `SignInManager.RefreshSignInAsync` from any method after the app is loaded and the user has signed in.\r\n\r\n### Expected behavior\r\nTo not throw an error and to refresh the the sign in data including claims.\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/15210/comments",
    "author": "jjamid",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2019-10-21T12:00:28Z",
        "body": "@cesee Thanks for contacting us.\r\n\r\n@SteveSandersonMS @HaoK I believe this is because the method is being called outside the request context. Should RefreshSignInAsync work in that scenario?\r\n\r\n"
      },
      {
        "user": "jjamid",
        "created_at": "2019-10-21T13:49:17Z",
        "body": "The first time I encountered a similar problem (trying to write a culture cookie), I managed to work around this problem using JSInterop. Cookies seem to be a pain in blazor..."
      },
      {
        "user": "javiercn",
        "created_at": "2019-10-21T13:58:15Z",
        "body": "@cesee You can't rely on HTTP features as a general rule in server-side Blazor. It is powered by SignalR and there's a reasonable chance you don't have access to a working HTTP context in many situations.\r\n\r\nWRT to SignInManager.RefreshAsync I'll let @HaoK and @SteveSandersonMS comment."
      },
      {
        "user": "HaoK",
        "created_at": "2019-10-21T16:25:57Z",
        "body": "Yeah RefreshAsync is basically working against the http context, it calls authenticate and then sign in using the identity application cookie"
      },
      {
        "user": "jjamid",
        "created_at": "2019-10-21T16:32:06Z",
        "body": "> Yeah RefreshAsync is basically working against the http context, it calls authenticate and then sign in using the identity application cookie\r\n\r\nOk. So you confirmed the reason (I wrote it in the initial report). What is the fix/alternative ? And why was this issue closed ? I didn't get an answer to my request."
      }
    ]
  },
  {
    "number": 15209,
    "title": "Parsing Request Accept header: why is Mvc not using Microsoft.Net.Http.Headers.MediaTypeHeaderValue?",
    "created_at": "2019-10-20T17:37:41Z",
    "closed_at": "2019-10-21T09:24:34Z",
    "labels": [
      "question",
      "area-mvc"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/15209",
    "body": "There seems to be a redundancy in the framework to parse accept headers request. \r\nOn the one hand there's the type `AcceptHeaderParser `in `Microsoft.AspNetCore.Mvc.Formatters `which we used to handle content negotiation, but it has recently been made internal so we had to find another solution.\r\nOn the other hand, there's `Microsoft.Net.Http.Headers.MediaTypeHeaderValue` , which also parses headers, but the results are a bit different, regarding the Quality property parsing. \r\nWhich one are we supposed to use? We switched to `MediaTypeHeaderValue `because it's still public, but they seem to be redundant and do the same work, with some small differences... \r\nI notice that the `DefaultOutputFormatterSelector` is using the internal `Microsoft.AspNetCore.Mvc.Formatters.AcceptHeaderParser` and I was wondering why there's not just one implementation to parse headers.",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/15209/comments",
    "author": "anna-git",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2019-10-21T09:24:14Z",
        "body": "> There seems to be a redundancy in the framework to parse accept headers request.\r\n\r\nThis is due to historical reasons. We optimized the parser on the MVC side to minimize allocations and we had some different requirements due to clients not correctly following the spec.\r\n\r\nThe headers in Microsoft.Net.Http.Headers.MediaTypeHeaderValue follow the spec as close as possible, while the ones MVC uses for parsing are a little bit more permisive and support some invalid constructs like \"*\" or \"*/\" that are known to be sent by some non-conforming clients.\r\n\r\nUsing `Microsoft.Net.Http.Headers.MediaTypeHeaderValue` should be fine for your case"
      },
      {
        "user": "anna-git",
        "created_at": "2019-10-21T10:02:05Z",
        "body": "ok ! Thank you for this crystal clear explanation :)"
      }
    ]
  },
  {
    "number": 15189,
    "title": "Blazor: Change a default binding via BindAttributes.cs ",
    "created_at": "2019-10-19T11:49:36Z",
    "closed_at": "2019-10-28T11:14:15Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/15189",
    "body": "According to BindAttributes.cs it is possible to extend it:\r\n\r\n```\r\n   /// <remarks>\r\n    /// To extend the set of <c>bind</c> attributes, define a public class named\r\n    /// <c>BindAttributes</c> and annotate it with the appropriate attributes.\r\n    /// </remarks> \r\n```\r\n\r\nI was looking for an easy way to change the default binding for text from onchange to oninput globally in my application.\r\n\r\nSo I did this:\r\n\r\n```\r\n    [BindInputElement(\"text\", null, \"value\", \"oninput\", isInvariantCulture: false, format: null)]\r\n    public static class BindAttributes\r\n```\r\n\r\nHowever, this is not working. Is it supposed to work?  \r\n\r\nIf not, what approach you suggest to change one of the default bindings globally? ",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/15189/comments",
    "author": "Postlagerkarte",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2019-10-21T11:53:45Z",
        "body": "@Postlagerkarte Thanks for contacting us.\r\n\r\nI believe using `BindAttributes` only allows adding additional bindings, but not modify existing ones.\r\n\r\n@SteveSandersonMS or @rynowak can confirm."
      },
      {
        "user": "SteveSandersonMS",
        "created_at": "2019-10-28T11:14:15Z",
        "body": "Yes, we don't have a feature of changing the defaults. The recommended approach for this is to define your own \"input\" component that uses whatever conventions you want, and then use that instead of a plain `<input>` element."
      }
    ]
  },
  {
    "number": 15187,
    "title": "Blazor: ElementReference cannot be passed as a Parameter",
    "created_at": "2019-10-19T11:31:29Z",
    "closed_at": "2019-10-21T11:52:13Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/15187",
    "body": "### Describe the bug\r\nWhen trying to pass an ElementReference as a parameter to a component, the Id of the reference is not set.\r\n\r\nBecause the parameter is passed before rendering, but the ElementReference is not valid until after the render, the Id passed is null.\r\n\r\nThe ElementReference Id changing should cause the child component's Parameters to be set again. \r\n\r\n### To Reproduce\r\nIndex.razor\r\n```\r\n@page \"/\"\r\n\r\n<input value=\"A\" class=\"form-control\" />\r\n<input value=\"B\" class=\"form-control\" @ref=PageOneFocusControl />\r\n<input value=\"C\" class=\"form-control\"/>\r\n<AutoFocus Control=PageOneFocusControl @ref=MyAutoFocus/></br/>\r\nReference = @PageOneFocusControl.Id\r\n<button type=\"button\" @onclick=@SetTheReferenceManually>Set the reference manually</button>\r\n\r\n@code {\r\n\tElementReference PageOneFocusControl;\r\n\tAutoFocus MyAutoFocus;\r\n\r\n\tprivate void SetTheReferenceManually()\r\n\t{\r\n\t\tMyAutoFocus.SetControl(PageOneFocusControl);\r\n\t}\r\n}\r\n```\r\n\r\nAutoFocus.razor\r\n```\r\n@inject IJSRuntime JSRuntime\r\n@code {\r\n\t[Parameter]\r\n\tpublic ElementReference Control { get; set; }\r\n\r\n\tpublic void SetControl(ElementReference control)\r\n\t{\r\n\t\tControl = control;\r\n\t}\r\n\r\n\tprotected override void OnParametersSet()\r\n\t{\r\n\t\tSystem.Diagnostics.Debug.WriteLine(\"=============OnParametersSet===========\");\r\n\t\tif (string.IsNullOrEmpty(Control.Id))\r\n\t\t\tSystem.Diagnostics.Debug.WriteLine(\"Control.Id is NULL\");\r\n\t\telse\r\n\t\t\tSystem.Diagnostics.Debug.WriteLine(\"Control.Id is SET CORRECTLY!!!\");\r\n\t}\r\n}\r\n```\r\n\r\n1: Run the app (Client-side blazor app)\r\n2: Note the Id displayed on screen has no value\r\n3: Note the output in the browser console says Control.Id is NULL\r\n4: Click the button to set the parameter manually\r\n5: The Id now displays correctly and the output in the browser console says Control.Id is SET CORRECTLY\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/15187/comments",
    "author": "mrpmorris",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2019-10-21T11:51:40Z",
        "body": "@mrpmorris Thanks for contacting us.\r\n\r\nI believe that's by design. ElementReference instances are only valid after the component in which they are defined has been rendered. If you pass them down to child component I believe there's no guarantee they'll work correctly, as in Blazor components render independently (A parent re-rendering doesn't mean a child re-renders) so you can't know from the child component whether the reference is correct or not.\r\n\r\nTo achieve your scenario, it would make more sense to simply perform a JS Interop call inside the OnAfterRenderAsync method of the parent component to set the focus to the desired form control."
      },
      {
        "user": "mrpmorris",
        "created_at": "2019-10-21T21:37:25Z",
        "body": "I know it is by design, the important part of my report was\r\n\r\n\"The ElementReference Id changing should cause the child component's Parameters to be set again.\"\r\n\r\nObviously there are probably other potential solutions but, whichever way is chosen, it should be possible to pass an ElementReference to a child component. \r\n\r\n"
      },
      {
        "user": "javiercn",
        "created_at": "2019-10-22T10:41:25Z",
        "body": "> \"The ElementReference Id changing should cause the child component's Parameters to be set again.\"\r\n\r\nThat is not how the Blazor rendering model works. \r\n\r\nThe component is responsible to tell Blazor when it needs to be rerendered. Blazor doesn't proactively look for changes in the component state/model to decide when a component needs to be re-rendered."
      },
      {
        "user": "mrpmorris",
        "created_at": "2019-10-22T18:24:16Z",
        "body": "I realise that, that's why I said the child component's Parameters should be set again.\r\n\r\nWhatever the solution is, passing element references as parameters currently does not work.\r\n\r\nIf it is chosen to not be supported, then perhaps a compiler warning could be raised when a [Parameter] ElementReference is declared? That would probably be the best solution - especially if it could have a suggestion to make the parameter `Func<ElementReference>` instead and only read it in OnAfterRender."
      }
    ]
  },
  {
    "number": 15164,
    "title": "How do you add databinding to dynamic components?",
    "created_at": "2019-10-18T18:46:20Z",
    "closed_at": "2019-10-21T11:33:03Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/15164",
    "body": "`RenderFragment` doesn't appear to support data binding from the parent component.  If it's supported, I haven't seen any examples or documentation on it.  The little that I've been able to find suggests using AddAttribute, but there's numerous incarnations and it's unclear what they do and how they differ.  Also, it's unclear whether AddAttribute literally adds another attribute, uses one already defined, or both for the component being rendered. \r\n\r\nThere should be two methods:\r\nAddParameter()\r\nBindToParameter()\r\n\r\nAddAttribute is confusing because it's unclear whether you're you're talking about markup or code.\r\n\r\n```\r\n@foreach (var designObject in ToolService.DesignObjects)\r\n{\r\n    Console.WriteLine(\"Binding MouseCoordinate to DesignObject...\");\r\n    RenderFragment renderFragment = builder =>\r\n    {\r\n        builder.OpenComponent(0, designObject.GetType()); \r\n        builder.AddAttribute(1, \"Coordinate\", designObject.Coordinate);\r\n        builder.CloseComponent();\r\n    };\r\n    <div>\r\n        <div>Before the component</div>\r\n        @renderFragment\r\n        <div>Afterthe component</div>\r\n    </div>\r\n}\r\n\r\n```",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/15164/comments",
    "author": "Joebeazelman",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2019-10-21T11:33:03Z",
        "body": "@Joebeazelman Thanks for contacting us.\r\n\r\nThere is no concept of Parameter in the RenderTree API, there are only attributes on it.\r\n\r\nIf you are referring to `@bind` that is a syntactic sugar provided by Razor to define two attributes. One attribute that provides the value to the component, typically\r\n```csharp\r\nbuilder.AddAttribute(1, \"Coordinate\", () => designObject.Coordinate))\r\n```\r\nAnd another attribute that handles the change event.\r\n```csharp\r\nbuilder.AddAttribute(2, \"change\", newValue => designObject.Coordinate = newValue);\r\n```\r\n(This is all pseudo-code, it's a bit more complicated under the hood).\r\n\r\nOtherwise, the basic overload for AddAttribute should be enough.\r\n"
      },
      {
        "user": "Joebeazelman",
        "created_at": "2019-10-24T16:40:05Z",
        "body": "In the last example you provided, it's interesting to know how Blazor handles Coordinate which is a struct Auto-property. Since structs are value types, it would be interesting to see how it handles this case."
      }
    ]
  },
  {
    "number": 15161,
    "title": "RenderFragment ignores component's initialized values",
    "created_at": "2019-10-18T18:11:31Z",
    "closed_at": "2019-10-21T11:22:27Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/15161",
    "body": "`RenderFragment` ignores my initialized values.  In the following code, everytime there's a mouse click, a new object is created with the mouse coordinates where the click occurred.  During the rendering section in razor, the markup is generated as expected, but the `Coordinate` parameter is zero. The `CustomText` doesn't have this issue.\r\n\r\nThis is clearly a bug since it is unexpected and inconsistent. On a side note, why is `RenderFragment` emitting \"<!--!-->\"?\r\n\r\n```\r\n<div><!--!-->\r\n        <!--!--><div>Before the component</div>\r\n        <!--!--><!--!--><text x=\"0\" y=\"0\">Custom Text</text><!--!-->\r\n        <!--!--><div>Afterthe component</div>\r\n    </div>\r\n```\r\n\r\n```\r\nTextDesignObject.razor\r\n-----------------------\r\n@Markup\r\n\r\n@code\r\n{\r\n        public MarkupString Markup { get; private protected set; }\r\n\r\n        public string Style { get; set;  }\r\n        private PointF _coordinate;\r\n        [Parameter]\r\n        public PointF Coordinate { get => _coordinate; set { Console.WriteLine(\"Coordinate setter called\");  _coordinate = value; } }\r\n\r\n    public string CustomText { get; set; } = \"Custom Text\";\r\n    public string FontStyle { get; }\r\n\r\n    protected override void OnInitialized() {\r\n        var svgString = new string(\"<text x=\" + Coordinate.X + \" y=\" + Coordinate.Y + \">\" + CustomText + \"</text>\");\r\n        Markup = new MarkupString(svgString.ToString());\r\n    }\r\n}\r\n\r\nDesigner.razor\r\n---------------\r\n@foreach (var designObject in ToolService.DesignObjects)\r\n{\r\n    Console.WriteLine(\"Binding MouseCoordinate to DesignObject...\");\r\n    RenderFragment renderFragment = builder =>\r\n    {\r\n        builder.OpenComponent(0, designObject.GetType()); \r\n        builder.CloseComponent();\r\n    };\r\n    <div>\r\n        <div>Before the component</div>\r\n        @renderFragment\r\n        <div>After the component</div>\r\n    </div>\r\n}\r\n\r\n\r\n@code {\r\n    [Parameter]\r\n    // Create a new design object based on selected tool\r\n    private void OnDesignPanelClicked(MouseEventArgs e)\r\n    {\r\n        Console.WriteLine(\"CallingCreateDesignObject...\");\r\n        var designObject = ToolService.SelectedTool.CreateDesignObject();\r\n        if (designObject == null) return;\r\n        \r\n        Console.WriteLine(\"Setting design object to mouse coordinates.\");\r\n        designObject.Coordinate = new PointF((float) e.ClientX,  (float) e.ClientY);\r\n        Console.Write(designObject.Coordinate);\r\n        \r\n        Console.WriteLine(\"Adding new DesignObject\");\r\n        ToolService.DesignObjects.Add(designObject);\r\n    }\r\n}\r\n\r\n```",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/15161/comments",
    "author": "Joebeazelman",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2019-10-21T11:21:41Z",
        "body": "@Joebeazelman Thanks for contacting us.\r\n\r\nYou are not passing in the designObject instance in the render fragment, you are only passing the type.\r\nThe coordinate is the default value because you are not passing it as a parameter inside the RenderFragment (which would be the appropriate way to do it).\r\nThe text is set in the property setter to a default value and its not defined as a parameter, so its value will always be constant.\r\n\r\nYou can't pass in a component instance directly in Blazor as that breaks the Blazor rendering model where Blazor itself is responsible for the lifecycle of the components.\r\n\r\nTo achieve your scenario I suggest you separate your component from your component model and iterate over the list of component models and pass in the parameters to the underlying components from the associated component model.\r\n\r\nI would also suggest (based on what I infer you are trying to do, that you give each component a unique identity using `@key=componentModel.key` which will help the renderer produce a better result according to what you are trying to implement.\r\n\r\nI would also discourage you from using `MarkupString` directly as that will open an attack vector for XSS.\r\n\r\n```\r\nDesigner.razor\r\n---------------\r\n@foreach (var designObject in ToolService.DesignObjects)\r\n{\r\n    RenderFragment renderFragment = builder =>\r\n    {\r\n        builder.OpenComponent(0, designObject.ComponentType);\r\n        builder.SetKey(designObject.Key);\r\n        builder.AddAttribute(1, designObject.Coordinates);\r\n        builder.CloseComponent();\r\n    };\r\n    <div>\r\n        <div>Before the component</div>\r\n        @renderFragment\r\n        <div>After the component</div>\r\n    </div>\r\n}\r\n```\r\n\r\n"
      },
      {
        "user": "javiercn",
        "created_at": "2019-10-21T11:22:27Z",
        "body": "Closing the issue as the behavior is by design and not a bug."
      },
      {
        "user": "Joebeazelman",
        "created_at": "2019-10-23T19:20:13Z",
        "body": "Thanks Javier.  My code is based on what I could find on the web.  It didn't make any sense to me either. I was merely trying to dynamically create a list of polymorphic components.  It was unclear whether Blazor supports it or not, but now it's settled. So dynamic creation isn't supported as a first class citizen as I was expecting.  "
      }
    ]
  },
  {
    "number": 15129,
    "title": "Angular SpaServices hosted in Docker container refresh at runtime",
    "created_at": "2019-10-17T20:20:18Z",
    "closed_at": "2019-10-18T10:01:48Z",
    "labels": [
      "question",
      "area-mvc"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/15129",
    "body": "I have a solution with a docker-compose project it in and a number of services.   One of the services is an Angular 8 project created via the SPA template for Angular and then Dockerfile support added afterwards.   \r\n\r\nI am able to run the project and see that it is working by going to the URI that is published by Docker.  When I make a change to the Angular source in ClientApp/ I would expect that the change is detected and refreshed like it does when not in a Docker environment.  \r\n\r\nThe /app directory in the Container is mapped to the correct directory on the host machine.  So, I can verify that when I make a change I can run 'cat' on file from within the Container shell and see that there is a change. \r\n\r\nEven if I refresh the browser it doesn't get picked up.  I can only get the change if I stop the application and re-run it.\r\n\r\nI would love to see this get some first class support.  \r\n\r\n### Additional context\r\n dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\nRuntime Environment:\r\n OS Name:     debian\r\n OS Version:  10\r\n OS Platform: Linux\r\n RID:         debian.10-x64\r\n Base Path:   /usr/share/dotnet/sdk/3.0.100/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  7d57652f33\r\n\r\n.NET Core SDKs installed:\r\n  3.0.100 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.0 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/15129/comments",
    "author": "clintsinger",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2019-10-18T10:01:48Z",
        "body": "Thanks for contacting us @clintsinger \r\n\r\nCan you include your Dockerfile? If you are using the standard Dockerfile that our tooling generates, what happens is that the application is built and published into the container at which point there is no link between your development files and the files the app uses when running.\r\n\r\nIf you wanted to achieve your scenario, you would need to start an image of the SDK with paths and port mappings to your project and then, with that container running, attach to it to run your application in Development mode with `dotnet run`. (Which is somewhat similar to what the visual studio tooling does today).\r\n\r\nThere is nothing we can do in ASP.NET Core to support this."
      }
    ]
  },
  {
    "number": 15101,
    "title": "bind-* on ICollection not working for HashSet or List",
    "created_at": "2019-10-17T08:21:29Z",
    "closed_at": "2019-12-06T20:00:58Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/15101",
    "body": "We are working on an input element that binds to an ICollection<string>.  Its works fine when we bind an actual ICollection<string> variable to it. But not when the bouded variable is a HashSet<string> or a List<string>. \r\n\r\nWe are using the binding with the EventcallBack. \r\n```\r\n[Parameter] public ICollection<string> TagList { get; set; }\r\n[Parameter] public EventCallback<ICollection<string>> TagListChanged { get; set; }\r\n```\r\nand we call it like this\r\n```\r\n<TagEditor @bind-TagList=\"Model.ICollectionList\" /> // Working\r\n<TagEditor @bind-TagList=\"Model.HashSet\" /> // Not Working\r\n```\r\n\r\n### Describe the bug\r\nThe compiler throwes the following error\r\n> Fehler CS1503 Argument \"2\": Konvertierung von \"Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.HashSet<string>>\" in \"Microsoft.AspNetCore.Components.EventCallback\" nicht möglich. \r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/15101/comments",
    "author": "oiBio",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-10-17T16:41:08Z",
        "body": "Thanks for contacting us, @oiBio .\r\n@pranavkm can you please look into this? Thanks!"
      },
      {
        "user": "ghost",
        "created_at": "2019-12-06T20:00:57Z",
        "body": "Thank you for contacting us. Due to no activity on this issue we're closing it in an effort to keep our backlog clean. If you believe there is a concern related to the ASP.NET Core framework, which hasn't been addressed yet, please file a new issue."
      }
    ]
  },
  {
    "number": 15080,
    "title": "ASP.NET Core 3 React template - Refresh token usage",
    "created_at": "2019-10-16T20:26:44Z",
    "closed_at": "2019-10-21T10:42:07Z",
    "labels": [
      "question",
      "area-mvc"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/15080",
    "body": "Is there any way whatsoever to trigger the usage/issuing of **refresh tokens** from Identity Server with the current **React template** provided in ASP.NET Core 3? I'd love to able to build on top of the current setup instead of starting from scratch in order to use token renewal.  ",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/15080/comments",
    "author": "pkali18",
    "comments": [
      {
        "user": "pranavkm",
        "created_at": "2019-10-17T16:59:10Z",
        "body": "@javiercn could you respond?"
      },
      {
        "user": "brockallen",
        "created_at": "2019-10-18T18:22:24Z",
        "body": "Refresh tokens are not highly recommended for SPAs."
      },
      {
        "user": "javiercn",
        "created_at": "2019-10-21T10:42:07Z",
        "body": "@pkali18 Thanks for contacting us.\r\n\r\n@brockallen is right. We don't recommend using refresh tokens and the templates should be already configured to perform silent access_token token refresh through a hidden iframe, which is the recommended way to support this scenario."
      }
    ]
  },
  {
    "number": 15026,
    "title": "Multiple Client Side Blazor ",
    "created_at": "2019-10-15T18:35:52Z",
    "closed_at": "2019-10-16T16:18:40Z",
    "labels": [
      "question",
      "area-blazor",
      "feature-blazor-wasm"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/15026",
    "body": "I have a Web solution with a WebCore 3.0 razor pages that its huge!. Lets call this the WebCoreAppDefault. I want to implement 3 Blazor projects with different pages. In my Start up files I have configure as this:\r\n\r\napp.UseHttpsRedirection();\r\napp.UseStaticFiles();\r\n\r\napp.UseClientSideBlazorFiles<BlazorApp1.Startup>();\r\napp.UseClientSideBlazorFiles<BlazorApp2.Startup>();\r\napp.UseClientSideBlazorFiles<BlazorApp3.Startup>();\r\napp.UseRouting();\r\n\r\napp.UseAuthorization();`enter code here`\r\n\r\napp.UseEndpoints(endpoints =>\r\n{\r\n    endpoints.MapRazorPages();\r\n    endpoints.MapFallbackToClientSideBlazor<BlazorApp1.Startup>(\"ReportGenerator.html\");\r\n     endpoints.MapFallbackToClientSideBlazor<BlazorApp2.Startup>(\"DashboardConfiguration.html\");\r\n     endpoints.MapFallbackToClientSideBlazor<BlazorApp3.Startup>(\"ClaimsManipulation.html\");\r\n\r\nI do have the startup html file in each project as this: 1.- in the BlazorApp1 I have the ReportGenerator.html file under the wwwroot 1.- in the BlazorApp2 I have the DashboardConfiguration.html file under the wwwroot 1.- in the BlazorApp3 I have the ClaimsManipulation.html file under the wwwroot\r\n\r\nWhen I run my WebCoreAppDefault, I can get to each Blazor file by adding a /ReportGenerator.html, or DashboardConfiguration.html, or ClaimsManipulation.html, and Blazor will load the project, but that's it.\r\n\r\nThe router of the blazor will not load any page, It will said \"Sorry there is nothing at this address\" on the not found. If I can put a link tag to the /Counter page, I can run the counter page without any layouts.\r\n\r\nI believe I have problems after the blazor loads the mono and the dll, to redirect to another page that is not the root or \"/\" page?\r\n\r\nI am trying to redirect in each project to a page that is not page \"/\", How Can I do that?\r\n\r\nI want to understand how I can redirect to a page that is not root? or how to configure the App.razor page to redirect to a ReportGenerator.razor page or DashboardConfiguration.razor page or ClaimsManipulation.razor page as a landing page instead of being force to /\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/15026/comments",
    "author": "pabloarthurrodger",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2019-10-16T10:50:29Z",
        "body": "```csharp\r\nendpoints.MapFallbackToClientSideBlazor<BlazorApp1.Startup>(\"ReportGenerator.html\");\r\nendpoints.MapFallbackToClientSideBlazor<BlazorApp2.Startup>(\"DashboardConfiguration.html\");\r\nendpoints.MapFallbackToClientSideBlazor<BlazorApp3.Startup>(\"ClaimsManipulation.html\");\r\n```\r\n\r\nThis is not going to work well. The reason is that each \"MapFallbackToClientSideBlazor\" captures all routes that are not paths, so the second and third \"MapFallbackToClientSideBlazor\" calls are not going to match any route.\r\n\r\nYou need to instead include some sort of prefix that acts as a discriminator, as follows:\r\n```csharp\r\nendpoints.MapFallbackToClientSideBlazor<BlazorApp1.Startup>(\"/reports/{*path:nonfile}\", \"ReportGenerator.html\");\r\nendpoints.MapFallbackToClientSideBlazor<BlazorApp2.Startup>(\"/dashboard/{*path:nonfile}\",\"DashboardConfiguration.html\");\r\nendpoints.MapFallbackToClientSideBlazor<BlazorApp3.Startup>(\"/claims/{*path:nonfile}\", \"ClaimsManipulation.html\");\r\n```\r\n\r\nThen on each page you load you can load a different blazor app.\r\n"
      }
    ]
  },
  {
    "number": 14987,
    "title": "Version 3.0 : Why not close",
    "created_at": "2019-10-14T15:36:02Z",
    "closed_at": "2019-10-22T17:05:17Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/14987",
    "body": "Hello,\r\n\r\nI am following the different releases of ASP .NET CORE, especially on the Blazor side.\r\nI can see the different milestones. Why is section 3.0.0 not closed and completed?\r\nIs there a particular reason? There has already been an official version for version 3.0.\r\n\r\nThanks for any answer.",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/14987/comments",
    "author": "boukenka",
    "comments": [
      {
        "user": "Pilchie",
        "created_at": "2019-10-22T16:59:17Z",
        "body": "@mkArtakMSFT - you usually do this?  Any reason not to this time?"
      },
      {
        "user": "danroth27",
        "created_at": "2019-10-22T17:05:17Z",
        "body": "The 3.0.0 milestone is now closed."
      }
    ]
  },
  {
    "number": 14980,
    "title": "get IMvcBuilder from AssemblyLoadContext",
    "created_at": "2019-10-14T10:45:59Z",
    "closed_at": "2019-12-06T20:01:04Z",
    "labels": [
      "question",
      "area-mvc"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/14980",
    "body": "Is there any way to get IMvcBuilder from AssemblyLoadContext ? I want to make a plugin system like Wordpress. When the plugin is enabled, I can automatically add my own page to the menu.\r\nIs there any way to solve this problem or has another way to add Add or remove controllers outside of ConfigureServices?",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/14980/comments",
    "author": "j4587698",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2019-10-14T12:11:53Z",
        "body": "@j4587698 thanks for contacting us.\r\n\r\nI'm not sure that's the best way to achieve what you want. Before you implement your own solution I would recommend you look into Orchard core, which has a bunch of facilities like these that can be used to build modular apps like the one it seems you are trying to build."
      },
      {
        "user": "ghost",
        "created_at": "2019-12-06T20:01:03Z",
        "body": "Thank you for contacting us. Due to no activity on this issue we're closing it in an effort to keep our backlog clean. If you believe there is a concern related to the ASP.NET Core framework, which hasn't been addressed yet, please file a new issue."
      }
    ]
  },
  {
    "number": 14974,
    "title": "`dotnet publish` produces executable specific to OS it's executed on",
    "created_at": "2019-10-14T05:12:59Z",
    "closed_at": "2019-10-16T18:11:46Z",
    "labels": [
      "question",
      "feature-platform",
      "area-networking"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/14974",
    "body": "I noticed that Windows hosting the `dotnet publish` gets an EXE file, while Linux (Ubuntu) gets an extensionless executable file named by the assembly. Under assumption that produced DLL and json-config files are actually exactly the same (regardless of where this process executes), shouldn't the process produce entrypoint binaries for all supported operating systems [at the same time]? Maybe I'm not noticing that the behavior that I'm after is actually present? The behavior that I'm noticing might complicate the build-process in certain scenarios. I just wanted to bring it to your attention. Thanks.",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/14974/comments",
    "author": "hlubovac",
    "comments": [
      {
        "user": "davidfowl",
        "created_at": "2019-10-14T05:23:45Z",
        "body": "That's by design, executables are platform specific. The cross platform version of the binary is the .dll file which you can execute with `dotnet MyApp.dll`."
      },
      {
        "user": "hlubovac",
        "created_at": "2019-10-14T05:40:49Z",
        "body": "Thank you.\r\n\r\nBut then, what is their purpose - since the application is launched primarily as `dotnet [path-to-main-assembly]`?\r\n\r\nWhile I do understand that these executables cannot be the same [for all platforms], I still think that the `dotnet build` should produce them all - or not produce any (since they are aliases, anyway). If they are there for some double-clicking convenience or some other purpose that I'm not seeing, then people that rely on them must compile their apps on multile platforms (the same number of times) - if they rely on having that convenience. Perhaps it's technically impossible for any supported platform to produce executables for other platforms, which I wouldn't know..."
      },
      {
        "user": "davidfowl",
        "created_at": "2019-10-14T05:45:05Z",
        "body": "> But then, what is their purpose - since the application is launched primarily as dotnet [path-to-main-assembly]?\r\n\r\n- Easy way to launch (double click)\r\n- A way to distinguish processes when using (ps or task manager on windows)\r\n\r\n> While I do understand that these executables cannot be the same [for all platforms], I still think that the dotnet build should produce them all - or not produce any (since they are aliases, anyway). If they are there for some double-clicking convenience or some other purpose that I'm not seeing, then people that rely on them must compile their apps on multile platforms (the same number of times) - if they rely on having that convenience. Perhaps it's technically impossible for any supported platform to produce executables for other platforms, which I wouldn't know...\r\n\r\nI don't agree. That would be too much bloat, add to my build time and isn't the majority use case. Instead, you can pass the required RIDs you care about to get the executables for those platforms. \r\n"
      },
      {
        "user": "hlubovac",
        "created_at": "2019-10-14T05:52:13Z",
        "body": "I see. You're likely referring to `--runtime` argument, which I didn't have a chance to learn about [until now]. Thank you. I'll read up on RID's."
      },
      {
        "user": "hlubovac",
        "created_at": "2019-10-14T17:10:53Z",
        "body": "Maybe a way to disable producing runtime-specific executables would be nice. :-)\r\n\r\nI tried passing empty/null/false to `--runtime`, hoping to achieve this. It's not a big deal - just more confusing [to me] then without. There is `--self-contained` that relates also (which needs to be set to false, looks like, when `--runtime` is used to achieve equivalents to the default behavior described above, cross-platform)."
      },
      {
        "user": "joshudson",
        "created_at": "2019-10-16T14:41:14Z",
        "body": "To build the launcher you want, build the rid for the launcher you want, keep the launcher, and throw the rest away. If/when the bsd port happens, you will discover your request would try to build two binaries of the same name."
      }
    ]
  },
  {
    "number": 14967,
    "title": "Define a deconstructor for the ActionResult<T> class",
    "created_at": "2019-10-13T15:42:03Z",
    "closed_at": "2019-10-14T16:48:57Z",
    "labels": [
      "question",
      "area-mvc"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/14967",
    "body": "If ActionResult<T> (which is similar to an \"Either<TValue,ActionResult>\")  had a deconstructor that would make handling it (ex: pattern matching) easier.\r\n\r\n### Describe the solution you'd like\r\n`\r\n   public void Deconstruct(out TValue value, out ActionResult result)\r\n        {\r\n            value = Value;\r\n            result = Result;\r\n        }\r\n`\r\nI can't do it myself since the class is sealed.\r\n\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/14967/comments",
    "author": "ofirgeller",
    "comments": [
      {
        "user": "davidfowl",
        "created_at": "2019-10-13T18:38:11Z",
        "body": "What’s the scenario? Unit testing?"
      },
      {
        "user": "ofirgeller",
        "created_at": "2019-10-13T19:45:07Z",
        "body": "That would be one use case, but the one I run into more is one controller action calling another.\r\nI like to let ActionResults that indicate errors be returned right away, and in cases of success do something with the value.\r\n\r\n\r\n\r\n"
      },
      {
        "user": "davidfowl",
        "created_at": "2019-10-13T22:16:47Z",
        "body": "Oh that’s more rare as controllers are called by the framework not by users "
      },
      {
        "user": "ofirgeller",
        "created_at": "2019-10-14T08:03:18Z",
        "body": "Yes, it is more rare, but I find value in doing it, should I advocate with examples?\r\n\r\n  "
      },
      {
        "user": "javiercn",
        "created_at": "2019-10-14T10:15:59Z",
        "body": "@ofirgeller Thanks for contacting us.\r\n\r\nWe don't recommend that you call controller methods from other controller methods, as there are many things in the ambient context that are not setup correctly in that case.\r\n\r\nOur recommendation is that if you need to do something like that, you factor the common code into a shared method that all controller actions can call into."
      },
      {
        "user": "ofirgeller",
        "created_at": "2019-10-14T12:28:38Z",
        "body": "@javiercn @davidfowl , thank you guys for all the great work and for getting back to me.\r\n\r\nI tried coming up with a case where the problem you bring up would be solved by factoring out the code but I can't. If the shared code uses the controller \"Request.Method\" property for example, that would still be set according to the method the framework invoked. which is what I would expect and consider the correct setup.\r\n\r\nCan you please give me an example?\r\n\r\n\r\n\r\n\r\n"
      },
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-10-14T16:48:57Z",
        "body": "Closing as there is no action we plan to take from here."
      },
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-10-14T16:50:01Z",
        "body": "@ofirgeller for your last question we recommend using `StackOverflow`."
      },
      {
        "user": "ofirgeller",
        "created_at": "2019-10-14T21:02:09Z",
        "body": "Even if I were to factor out the code into a shared method in order to avoid having one action call another, I would still like to return an Action<T> from that shared code. So my original requests stands and I thank you all for trying to understand. \r\n\r\nEdit:\r\nFound out Deconstruct also works when defined as an extension method, so I can get around the class being sealed,\r\n\r\nAll the best.\r\n\r\n\r\n\r\n\r\n"
      }
    ]
  },
  {
    "number": 14918,
    "title": "Change default controller based on user is authenticated or not",
    "created_at": "2019-10-11T13:05:15Z",
    "closed_at": "2019-12-06T20:01:06Z",
    "labels": [
      "question",
      "area-mvc"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/14918",
    "body": "What is the preferred way of dealing with default controller name. The idea I have is to route non authenticated users to the home controller and authenticated users to app controller. I want to serve the views using the default path `/` in both cases. Is a route constraint the preferred way? If so, can you point me to an example implementation?",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/14918/comments",
    "author": "marcuslindblom",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2019-10-11T14:02:39Z",
        "body": "@marcuslindblom Thanks for contacting us.\r\n\r\nI would suggest that you simply use separate urls and redirect incoming requests based on whether the user is authenticated or not.\r\n\r\nIf you still want to do this, the best way to achieve it IMO is using attribute routing, adding [HttpGet(\"/\")] to both controllers and using an IActionConstraint to disambiguate the route.\r\n\r\nHope that helps."
      },
      {
        "user": "marcuslindblom",
        "created_at": "2019-10-11T14:43:02Z",
        "body": "@javiercn Ok, so I tried using the `IActionConstraint`like this. I created two constraints, `AnonymousConstraint` and `AuthenticatedConstraint`. This is how I implemented them.\r\n\r\n```c#\r\n  public class AuthenticatedConstraint : Attribute, IActionConstraint\r\n  {\r\n    public int Order => 1;\r\n    public bool Accept(ActionConstraintContext context)\r\n    {\r\n        if (context.RouteContext.HttpContext.User.Identity.IsAuthenticated)\r\n        {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n  }\r\n```\r\n\r\n```c#\r\n  public class AnonymousConstraint : Attribute, IActionConstraint\r\n  {\r\n    public int Order => 1;\r\n    public bool Accept(ActionConstraintContext context)\r\n    {\r\n        if (context.RouteContext.HttpContext.User.Identity.IsAuthenticated)\r\n        {\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n  }\r\n```\r\n\r\nAnd this is how my controllers use the attributes.\r\n\r\n```c#\r\n  public class HomeController : Controller\r\n  {\r\n    [AnonymousConstraint, HttpGet(\"/\")]\r\n    public IActionResult Index() {\r\n      return View();\r\n    }\r\n  }\r\n```\r\n\r\n```c#\r\n  public class AppController : Controller {\r\n    [AuthenticatedConstraint, HttpGet(\"/\")]\r\n    public IActionResult Index() {\r\n      return View();\r\n    }\r\n  }\r\n```\r\n\r\nBut `context.RouteContext.HttpContext.User.Identity.IsAuthenticated` is always false?"
      },
      {
        "user": "javiercn",
        "created_at": "2019-10-11T14:54:03Z",
        "body": "@marcuslindblom Is the user authenticated when it hits the action?"
      },
      {
        "user": "marcuslindblom",
        "created_at": "2019-10-11T15:02:27Z",
        "body": "@javiercn Yes, in the `Index` action the user is authenticated. I use Google authentication is this app. Maybe it has something todo with that?"
      },
      {
        "user": "javiercn",
        "created_at": "2019-10-11T15:10:39Z",
        "body": "Do you have `app.UseAuthentication()` in your Configure method? \r\n\r\nWhat might be happening is that the constaint is being evaluated before UseAuthentication establishes the user on the request.\r\n\r\nIf that's the case, I would go back to my original suggestion and use separate routes and simply redirect from \"/\" to the appropriate place.\r\n\r\n"
      },
      {
        "user": "marcuslindblom",
        "created_at": "2019-10-11T15:19:41Z",
        "body": "@javiercn Ok, so the order of things matter for this to work.\r\n\r\nThis configuration works for me but I don't know if something else stopped working. Do you know if this breaks something else?\r\n\r\n```c#\r\napp.UseAuthentication();\r\n\r\napp.UseRouting();\r\n\r\napp.UseAuthorization();\r\n```\r\n"
      },
      {
        "user": "javiercn",
        "created_at": "2019-10-11T15:37:42Z",
        "body": "I'm not sure of the unintended consequences that might have, so I wouldn't do that before thinking it through. My recommendation is that you go back to my original suggestion.\r\n\r\n@rynowak Any further recommendation here? This is an interesting case I think, because this would have worked in 2.1 if I'm not mistaken, but in 3.0 the constraint gets evaluated much earlier."
      },
      {
        "user": "marcuslindblom",
        "created_at": "2019-10-11T15:47:42Z",
        "body": "I forgot to say that I’m using 3.0.100"
      },
      {
        "user": "marcuslindblom",
        "created_at": "2019-10-11T16:46:26Z",
        "body": "I ended up with this code. Feel free to comment or criticize :)\r\n\r\nUsing this order:\r\n\r\n```c#\r\napp.UseAuthentication();\r\napp.UseRouting();\r\napp.UseAuthorization();\r\n```\r\n\r\nWith the default controller set to `App`:\r\n```c#\r\nendpoints.MapControllerRoute(\r\n    name: \"default\",\r\n    pattern: \"{controller=App}/{action=Index}/{id?}\");\r\n```\r\n\r\nJust adding the `HttpGet` to the `HomeController`:\r\n```c#\r\npublic class HomeController : Controller\r\n{\r\n  [HttpGet(\"/\")]\r\n  public IActionResult Index() {\r\n    return View();\r\n  }\r\n}\r\n```\r\nAdding the `IActionConstraint` only to the `AppController`:\r\n\r\n```c#\r\n[Authorize, AuthenticatedConstraint]\r\npublic class AppController : Controller {\r\n  [HttpGet(\"/\")]\r\n  public IActionResult Index() {\r\n    return View();\r\n  }\r\n}\r\npublic class AuthenticatedConstraint : Attribute, IActionConstraint\r\n{\r\n  public int Order => 1;\r\n  public bool Accept(ActionConstraintContext context)\r\n  {\r\n      if (context.RouteContext.HttpContext.User.Identity.IsAuthenticated)\r\n      {\r\n          return true;\r\n      }\r\n\r\n      return false;\r\n  }\r\n}\r\n```"
      },
      {
        "user": "ghost",
        "created_at": "2019-12-06T20:01:05Z",
        "body": "Thank you for contacting us. Due to no activity on this issue we're closing it in an effort to keep our backlog clean. If you believe there is a concern related to the ASP.NET Core framework, which hasn't been addressed yet, please file a new issue."
      }
    ]
  },
  {
    "number": 14914,
    "title": "What's the Url.Content way to convert virtual realtive path starting with ~ in 3.0 ?",
    "created_at": "2019-10-11T11:58:55Z",
    "closed_at": "2019-10-11T16:29:26Z",
    "labels": [
      "question",
      "area-mvc"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/14914",
    "body": "I need to convert relative path to absolute path in a tag helper, so `~/some/path became => protocol://mydomain.tld/anyvirtualpath/some/path`\r\n\r\nI used this code on 2.2:\r\n```\r\nvar urlHelper = urlHelperFactory.GetUrlHelper(ViewContext);\r\nvar result = urlHelper.Content(\"~/some/path\");\r\n```\r\n\r\nOn 3.0, using endpoint routing, I get an exception if I add IUrlHelperFactory to IoC container because route data is empty. (or something like that)\r\n\r\nBut when trying to accomplish the same goal with LinkGeneration I cannot find a method/way to do what I want.\r\n\r\nSo what's the 3.0 way to convert virtual relative path to absolute paths?",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/14914/comments",
    "author": "Bartmax",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2019-10-11T14:51:31Z",
        "body": "@Bartmax Thanks for contacting us.\r\n\r\nYou can use the `UriHelper.BuildAbsolute` static method to do this as follows\r\n```csharp\r\n            var r = context.Request;\r\n            UriHelper.BuildAbsolute(\r\n                r.Scheme,\r\n                r.Host,\r\n                r.PathBase,\r\n                \"/some/path\");\r\n```\r\n\r\nHope that helps."
      }
    ]
  },
  {
    "number": 14824,
    "title": "asp.net core 3 - Model bindind / MvcOptions.SuppressBindingUndefinedValueToEnumType",
    "created_at": "2019-10-08T14:56:42Z",
    "closed_at": "2019-10-08T16:56:18Z",
    "labels": [
      "question",
      "area-mvc"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/14824",
    "body": "Hi.\r\n\r\nAfter the MvcOptions.SuppressBindingUndefinedValueToEnumType option has been removed in .NET Core 3, what would be the equivalent setting to be able to receive values in the [FromRoute] / [FromQuery] model binding even though they are out of range?",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/14824/comments",
    "author": "Tolitech",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-10-08T16:56:18Z",
        "body": "Thanks for contacting us, @Tolitech.\r\nThe alternative approach is to use `int` values instead. There are no other settings controlling this behavior."
      }
    ]
  },
  {
    "number": 14814,
    "title": "support DataTemplate(like WPF's usage) for Blazor",
    "created_at": "2019-10-08T09:35:25Z",
    "closed_at": "2019-12-06T20:01:14Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/14814",
    "body": "### Is your feature request related to a problem? Please describe.\r\n\r\nI am trying to show some complex data types on my Component.razor but i didn't find a better way to fix it.\r\n\r\n### Describe the solution you'd like\r\n\r\n1. create a base `component.razor`\r\n2. create some child component to Inherite basic component \r\n3. use ValueConverter to show every item with dynamic\r\n3. use them\r\n\r\nIf anyone can provide a `WPF DataTemplate` way to deal it.I think this will be awesome",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/14814/comments",
    "author": "hippieZhou",
    "comments": [
      {
        "user": "ghost",
        "created_at": "2019-12-06T20:01:14Z",
        "body": "Thank you for contacting us. Due to no activity on this issue we're closing it in an effort to keep our backlog clean. If you believe there is a concern related to the ASP.NET Core framework, which hasn't been addressed yet, please file a new issue."
      }
    ]
  },
  {
    "number": 14800,
    "title": "ElementReference causes \"Invalid JSON\" exception when returned to JavaScript",
    "created_at": "2019-10-07T21:51:24Z",
    "closed_at": "2019-10-08T16:48:07Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/14800",
    "body": "### Describe the bug\r\nCalling C# from JavaScript, then JavaScript from C# to obtain ElementReferences, then returning those ElementReferences to C#, Blazor throws an exception:\r\n```\r\nblazor.webassembly.js:1 Uncaught (in promise) Error: System.Text.Json.JsonException: Invalid JSON\r\n  at Microsoft.JSInterop.Infrastructure.DotNetDispatcher.EndInvokeJS (/Microsoft.JSInterop.JSRuntime jsRuntime, System.String arguments) <0x20ed888 + 0x000fc> in <4e424253df194e1299a1044d93a79164>:0 \r\n  at Mono.WebAssembly.Interop.MonoWebAssemblyJSRuntime.EndInvokeJS (/System.String argsJson) <0x20e4a58 + 0x0000a> in <d0b620549c284928acbf6b89d371ca02>:0 \r\n    at Object.callMethod (blazor.webassembly.js:1)\r\n    at Object.endInvokeJSFromDotNet (blazor.webassembly.js:1)\r\n    at blazor.webassembly.js:1\r\n```\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n- .Net Core 3.0.0-100\r\n- dotnet new blazorwasm\r\n\r\nCreate a JavaScript method that creates an element:\r\n```javascript\r\nwindow.CreateElement = (text) => {\r\n  var element = document.createElement(\"span\");\r\n  element.innerText = text;\r\n  return element;\r\n}\r\n```\r\nCreate a [JSInvokable] C# method:\r\n```csharp\r\n[JSInvokable]\r\npublic static async Task<List<ElementReference>> GetElements(){\r\n  List<ElementReference> refs = new List<ElementReference>();\r\n  refs.Add(await JSInterop.InvokeAsync<ElementReference>(\"CreateElement\",\"first\"));\r\n  refs.Add(await JSInterop.InvokeAsync<ElementReference>(\"CreateElement\",\"second\"));\r\n  return refs;\r\n}\r\n```\r\nCreate another JavaScript function that calls the C# method:\r\n```javascript\r\nwindow.Test = async () => {\r\n  var refs = await DotNet.InvokeAsync(\"TestProject\",\"GetElements\");\r\n}\r\n```\r\nInvoke window.Test.\r\n\r\n### Expected behavior\r\nExpect no exception to be thrown, and for the elements created by the CreateElement method to be returned to the Test method.\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/14800/comments",
    "author": "HughPH",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-10-08T16:48:07Z",
        "body": "Thanks for contacting us, @HughPH.\r\n`ElementReference` is a reference to a DOM element that Blazor has rendered. It cannot be used to refer an element rendered by JavaScript as Blazor has no knowledge of it. You can pass the element id from JavaScript to Blazor and then use it as string internally."
      },
      {
        "user": "HughPH",
        "created_at": "2019-10-09T15:54:57Z",
        "body": "@mkArtakMSFT Thanks for the reply, that makes sense. I had expected that Blazor would 'foster'  (temporarily adopt) unknown elements and create a new _internalId for them, keeping them immutable but referable, then 'translate' them back to their JavaScript object references when being passed back across the divide."
      }
    ]
  },
  {
    "number": 14792,
    "title": "Blazor DataTransfer wrapper object ",
    "created_at": "2019-10-07T16:42:26Z",
    "closed_at": "2019-10-08T16:50:30Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/14792",
    "body": "Blazor 3.0:\r\n\r\nI can use the `DragEventArgs` class as parameter to my methods however setting data on some properties has not effect.\r\n\r\ne.g. nearly everything releated to the `DataTransfer` object inside the `DragEventArgs `is not working.\r\n\r\nIs this supposed to work? \r\n\r\nIf support for the DragEventArgs is not yet implemented then why are those properties read/write in the first place? \r\n\r\n\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/14792/comments",
    "author": "Postlagerkarte",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-10-08T16:50:30Z",
        "body": "Thanks for contacting us, @Postlagerkarte.\r\nThe properties of the `DragEventArgs` are writable only for enabling serialization to/from JSON.\r\nThese are not meant to alter state in any way."
      },
      {
        "user": "Postlagerkarte",
        "created_at": "2019-10-08T17:03:29Z",
        "body": "@mkArtakMSFT :  This fact should be documented somewhere. Is this the only EventArgs which is not meant to alter state or are there more?"
      }
    ]
  },
  {
    "number": 14774,
    "title": "Route default values set to empty string when pass null",
    "created_at": "2019-10-06T14:12:20Z",
    "closed_at": "2019-10-07T16:30:35Z",
    "labels": [
      "question",
      "area-mvc"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/14774",
    "body": "I'm using .net core 2.2 and I created a new route with default values and add it to routes like following code: \r\n```\r\nrouteBuilder.Routes.Add(new Route(routeBuilder.DefaultHandler, \"newRoute\", \"/login\",\r\n                new RouteValueDictionary(new\r\n                {\r\n                    controller = \"Customer\",\r\n                    action = \"Login\",\r\n                    area = 1 == 0 ? \"Admin\" : null\r\n                }), new RouteValueDictionary(null), new RouteValueDictionary(null),\r\n                inlineConstraintResolver));\r\n```\r\nBut, when I request the registered route, the area value of ViewLocationExpanderContext object is an empty string isntead of null. I tried that on .net core 2.1 before and it works fine there and because of that I think there is an issue in 2.2. ",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/14774/comments",
    "author": "AliDehghani",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-10-07T16:30:35Z",
        "body": "Thanks for contacting us, @AliDehghani .\r\nIn Routing empty string and `null` are equivalent. So this issue by-design."
      }
    ]
  },
  {
    "number": 14753,
    "title": "Blazor 3.0 official release asyc function with parameter?",
    "created_at": "2019-10-05T05:29:37Z",
    "closed_at": "2019-10-07T16:25:21Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/14753",
    "body": "I am trying to create a async function in Blazor WebAssembly project, in preview 8, this worked:\r\n\r\n```\r\n  <th @onclick=\"@(async ()=> await Sort(column.Name))\">@column.Name</th>\r\n\r\n@code {\r\n    async Task Sort(string column)\r\n    {\r\n        await Http.PostJsonAsync<SelectResult>(\"Data/Get\");\r\n        this.StateHasChanged();\r\n    }\r\n}\r\n```\r\nWith 3.0 final release, it does not work anymore. Compiler complains:\r\nCannot convert lambda expression to type 'object' because it is not a delegate type\t...\\Pages\\Table.razor\r\n\r\nCan you please suggest how to do async event with parameters? Thanks very much.\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/14753/comments",
    "author": "gxomin",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-10-07T16:25:21Z",
        "body": "Thanks for contacting us, @gxomin.\r\nYou should be able to resolve this by adding  `@using Microsoft.AspNetCore.Components.Web` to your .razor file (or _Imports.razor, which is the preferred place for this particular namespace)."
      },
      {
        "user": "mythrz",
        "created_at": "2019-10-16T17:03:44Z",
        "body": "mouse right click \"quick actions\" could be added in these type of errors? \r\nhad the same problem, solved. ty"
      }
    ]
  },
  {
    "number": 14710,
    "title": "[Blazor-WebAssembly] Guidance: How to respond to SignalR events that require using the HttpClient object.",
    "created_at": "2019-10-03T20:24:10Z",
    "closed_at": "2019-10-04T16:21:52Z",
    "labels": [
      "question",
      "area-blazor",
      "feature-blazor-wasm"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/14710",
    "body": "We have a PWA application that is built on top of Blazor (WebAssembly), the application uses SignalR. In the perfect world, we would like the following to ocurr:\r\n\r\n1. Get the SignalR event from JavaScript.\r\n2. From JavaScript we would like to call a .NET function.\r\n3. From within the .NET function we would like to make web-api calls.\r\n\r\nThe problem occurs in point number 3, This is because in order to make the web-api calls we need to obtain a reference to the HttpClient object (as far as I know) and I am not sure how we are supposed to get that reference in this particular scenario.\r\n\r\n What would be the guidance to making this work? More specifically, how do we obtain reference to object managed by the DI infrastructure under this scenario?\r\n\r\nThanks.\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/14710/comments",
    "author": "rxelizondo",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-10-04T16:21:52Z",
        "body": "Thanks for contacting us, @rxelizondo.\r\nWhen you're initializing your object, you can pass HttpClient instance (from the component it's being initialized in) in and store it. Then use that as necessary. FYI: JSInterop can call into instance methods too."
      },
      {
        "user": "rxelizondo",
        "created_at": "2019-10-04T17:25:35Z",
        "body": "@mkArtakMSFT \r\n\r\nThe thing is that the call is being initiated in **_JavaScript_** (from SignalR). At that point you can't call anything other than a **_static .NET method_** because no .NET instance object references exists on that scope.\r\n\r\nSo the question boils down to how do we obtain a reference to the HttpClient object from within the .NET static method call..... in a clean way, not a hacky way.\r\n\r\nBy the way, I realize there may be better ways to achieve what we are trying to do, we are simply exploring the different options at this time.\r\n\r\nThanks.\r\n\r\n"
      }
    ]
  },
  {
    "number": 14704,
    "title": "[Blazor Server] Asynchronous bound parameter change overwrites other parameters",
    "created_at": "2019-10-03T14:50:37Z",
    "closed_at": "2019-10-04T16:31:52Z",
    "labels": [
      "question",
      "Needs: Author Feedback",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/14704",
    "body": "### Problem Description\r\nHello, I'm not sure if it is by design or if it's a genuine bug. If it's by design then it is quite \r\nun-intuitive. In the code presented below (simplified for clarity), when the button is clicked and the click handler is forced to execute asynchronously, after the first `*Changed` event callback invoke, the value of second parameter `IncrementTwo` gets overwritten with initial value, i.e. 0. This makes it impossible to properly handle long-running processes while having more than one bound parameter passed by parent component. For example, I need to disable the button when long-running logic starts and inform the user about the process. To achieve this I need to update a specific boolean flag and force the asynchronous method execution, so that the UI can update immediately.  Later in the process the actual updates of the params need to take place, but the first `*Changed` event call back invocation causes all other parameters' overwrite, effectively preventing me from using more than one parameter.\r\n\r\n### Failing Code\r\n_Index.razor_\r\n```\r\n@page \"/\"\r\n\r\n<Incrementer @bind-IncrementOne=\"incrementOne\" @bind-IncrementTwo=\"incrementTwo\" />\r\n\r\n@code {\r\n    int incrementOne;\r\n    int incrementTwo;\r\n}\r\n```\r\n_Incrementer.razor_\r\n```\r\n<input type=\"number\" @bind=\"IncrementOne\" />\r\n<p>Increment by: @IncrementOne</p>\r\n\r\n<input type=\"number\" @bind=\"IncrementTwo\" />\r\n<p>Increment by: @IncrementTwo</p>\r\n\r\n<button class=\"btn btn-primary\" @onclick=\"Increment\">Click me</button>\r\n\r\n@code {\r\n    [Parameter]\r\n    public int IncrementOne { get; set; }\r\n    [Parameter]\r\n    public EventCallback<int> IncrementOneChanged { get; set; }\r\n\r\n    [Parameter]\r\n    public int IncrementTwo { get; set; }\r\n    [Parameter]\r\n    public EventCallback<int> IncrementTwoChanged { get; set; }\r\n\r\n    async Task Increment()\r\n    {\r\n        await Task.Yield();\r\n        await IncrementOneChanged.InvokeAsync(IncrementOne); // When this line executes, the value of IncrementTwo resets to initial value\r\n        await IncrementTwoChanged.InvokeAsync(IncrementTwo);\r\n    }\r\n}\r\n```\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Enter value of 50 in the first input element\r\n2. Enter value of 100 in the second input element\r\n3. Click the \"Click me\" button\r\n\r\n### Expected behavior\r\n`IncrementOne` has value 50,` IncrementTwo` has value of 100.\r\n\r\n### Actual behavior\r\n`IncrementOne` has value 50 but **`IncrementTwo` has value of 0 (initial value).**\r\n\r\n**.Net Core version 3.0**\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/14704/comments",
    "author": "aventus13",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-10-03T16:36:35Z",
        "body": "Thanks for contacting us.\r\nIt's a bit unclear what your'e trying to do here.\r\nPlease provide more details about your scenario."
      },
      {
        "user": "aventus13",
        "created_at": "2019-10-03T17:02:34Z",
        "body": "Hi @mkArtakMSFT, thanks for your response. Apologies but I'm not sure what exactly is unclear, as I specified replication steps with expected and actual outcome. I'm not sure what I could say without repeating what I already said. Basically you have a parent component which binds two parameters to the child component. Then in child component you have some asynchronous logic which updates both parameters. The expectations is to have both parameters updated with correct values, however as soon as the first event callback is invoked (`await IncrementOneChanged.InvokeAsync(IncrementOne)`), the value of other parameters is overwritten with initial values. So if the value of `IncrementTwo` changed from 0 to 50, after calling `await IncrementOneChanged.InvokeAsync(IncrementOne)` the value of `IncrementTwo` is set back to 0. The above code is solely for quickly demonstrating how to replicate this problem."
      },
      {
        "user": "aventus13",
        "created_at": "2019-10-04T11:14:37Z",
        "body": "Added comment to the code for clarity."
      },
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-10-04T16:31:52Z",
        "body": "Thanks @aventus13.\r\nAfter looking through your sample it seems what's happening here is that the state of the Incrementer component is being set from two different sources (the parent and the component itself). Because of this a \"collision\" happens in the framework and only one of those sources wins. It happens so that in one case the component's state wins and the other case - the parent wins.\r\nWe discourage customers from using this pattern and will eventually come up with an Analyzer to prevent this type of usage."
      }
    ]
  },
  {
    "number": 14702,
    "title": "How to add multiple styles using the IDictionary<string, object> in Blazor attributes ?",
    "created_at": "2019-10-03T13:24:15Z",
    "closed_at": "2019-10-03T15:20:46Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/14702",
    "body": "### Below is the code blow which throws an exception as this key value already exists.\r\n\r\n\"<div @attributes=\"@_Attributes\"></div>\"\r\n\r\n@code {\r\nprivate IDictionary<string, object> _Attributes = new Dictionary<string, object>();\r\n\r\n// This adds to the element\r\n_Attributes.Add(\"style\", \"width:\" + this.width);\r\n\r\n// This throws an exception that the key value already exists\r\n_Attributes.Add(\"style\", \"height:\" + this.height);\r\n}\r\n\r\nCan anyone suggest a solution for this  to achieve in any other way.?\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/14702/comments",
    "author": "Indrajith-Sync",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-10-03T15:20:46Z",
        "body": "Thanks for contacting us, @Indrajith-Sync.\r\nAttribute Splatting (the @attributes directive) is meant to be used for applying different attributes to an  element. In this case you're trying to apply multiple sub-values to the same `style` attribute.\r\nYou have two options here, either concatenate both `width` and `height` pieces into a single string when applying to style (using the attribute splatting technique), or directly set the `style` attribute on the `div`."
      },
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-10-03T15:52:09Z",
        "body": "Here is a sample:\r\n```razor\r\n@page \"/\"\r\n\r\n<h1>Hello, world!</h1>\r\n\r\nWelcome to your new app.\r\n<div @attributes=\"attributes\">option 1</div>\r\n<div style=\"@Style\">option 2</div>\r\n\r\n@code{\r\n    public IDictionary<string, object> attributes = new Dictionary<string, object>();\r\n\r\n    public string Style { get; set; }\r\n    \r\n    public int Width { get; set; } = 300;\r\n    public int Height { get; set; } = 15;\r\n\r\n    protected override void OnInitialized()\r\n    {\r\n        this.Style = $\"width: {Width}px; height: {Height}px; border: 1px solid red;\";\r\n\r\n        this.attributes.Add(\"style\", this.Style);\r\n    }\r\n}\r\n```"
      },
      {
        "user": "Indrajith-Sync",
        "created_at": "2019-10-04T03:06:43Z",
        "body": "Hi @mkArtakMSFT \r\n\r\nThanks it works fine..!"
      }
    ]
  },
  {
    "number": 14699,
    "title": "[Blazor] AuthorizeView Policy=<value> bug when <value> comes from variable",
    "created_at": "2019-10-03T11:31:07Z",
    "closed_at": "2019-10-03T16:14:21Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/14699",
    "body": "### Description\r\nIn **Blazor**, When trying to use tag `AuthorizeView Policy=<some-value>` with property value being a string variable, it does not behave the same as if property value was a raw string.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Using this version of ASP.NET Core '3.0.1'\r\n2. Run this code \r\n```\r\n<AuthorizeView Policy=ADMINS_ONLY >\r\n    <Authorized>\r\n        Authorized...\r\n    </Authorized>\r\n    <NotAuthorized>\r\n        NotAuthorized\r\n    </NotAuthorized>\r\n</AuthorizeView>\r\n\r\n@code {\r\n    private string ADMINS_ONLY = \"AdminsOnly\";\r\n}\r\n```\r\n\r\n3. Should work like this \r\n```\r\n<AuthorizeView Policy=\"AdminsOnly\">\r\n    <Authorized>\r\n        Authorized...\r\n    </Authorized>\r\n    <NotAuthorized>\r\n        NotAuthorized\r\n    </NotAuthorized>\r\n</AuthorizeView>\r\n```\r\n\r\n4. See error\r\n`blazor.server.js:15 [2019-10-03T11:20:53.249Z] Error: There was an unhandled exception on the current circuit, so this circuit will be terminated. For more details turn on detailed exceptions in 'CircuitOptions.DetailedErrors'.`\r\n\r\n### Expected behavior\r\nThe AuthorizeView should call the AuthorizationHandler as provided by the policy setup (in this case: the policy named \"AdminsOnly\").\r\n\r\nUpdate: clearifying area of effect",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/14699/comments",
    "author": "henkla",
    "comments": [
      {
        "user": "rynowak",
        "created_at": "2019-10-03T16:11:24Z",
        "body": "String properties require the `@` to use variable/expressions. My guess is that this is passing the value `ADMINS_ONLY` into your `AuthorizeView` and not `AdminsOnly` as you expect.\r\n\r\nTry:\r\n```html\r\n<AuthorizeView Policy=\"@ADMINS_ONLY\">\r\n```"
      },
      {
        "user": "henkla",
        "created_at": "2019-10-03T16:12:49Z",
        "body": "Wow. That's pretty... dumb of me. Thanks."
      },
      {
        "user": "rynowak",
        "created_at": "2019-10-03T16:14:07Z",
        "body": "no worries 👍 "
      }
    ]
  },
  {
    "number": 14688,
    "title": "CONTRIBUTING.md could use some additional information",
    "created_at": "2019-10-03T01:23:12Z",
    "closed_at": "2019-10-03T15:02:27Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/14688",
    "body": "### Is your feature request related to a problem? Please describe.\r\nI just asked this question on an issue where i am about to provide a PR:\r\n\r\n> What is the procedure for PR's? Does the person, who executes the PR merge, set the branch target or is this supposed to be done by the PR author?\r\n> \r\n> Also if it isn't the author - when creating a branch in my fork can i just checkout -b from master then?\r\n\r\nPerhaps this information could be useful to anyone who is thinking about providing a PR? In another repo i was contributing to for example i was asked to rebase on a certain branch before providing the PR. (Might have been because you could not change the target branch back then)\r\n\r\n\r\n### Describe the solution you'd like\r\nUpdated Docs by someone who can answer these questions, perhaps some FAQ by contributors section?\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/14688/comments",
    "author": "taori",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-10-03T15:02:14Z",
        "body": "Thanks for contacting us, @taori.\r\nWe make decisions regarding where each change should go (which release) during our triage process. And that's what will determine the target branch. In majority of the cases we would accept PRs to the `master` branch, as that's our next big release (as of today it's for 5.0). As for merging, we merge all the PRs - community members can't do that.\r\n\r\nTo summarize - always start from master as that's the most generic case. In some cases, yes, we will ask authors to re-target their PRs so we can speed up the release process for certain changes.\r\nIncluding this in the contributors guideline may be more misleading."
      }
    ]
  },
  {
    "number": 14599,
    "title": "Does Blazor support dynamic rendering of polymorphic components?",
    "created_at": "2019-10-01T02:31:12Z",
    "closed_at": "2019-10-01T16:58:44Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/14599",
    "body": "I've been trying to render a list of components dynamically as demonstrated below:\r\n\r\n```\r\n<ul>\r\n    @foreach (fruit of fruits) \r\n         <li>HOW DO I RENDER FRUIT HERE??? </li> // render the fruit component\r\n</ul>\r\n\r\n@code {\r\n   // Each member in the list is a subtype of Fruit\r\n   var fruits = List<FruitComponent> {\r\n       new PearComponent(),\r\n       new AppleComponent()'\r\n       new BananaComponent(),\r\n       new RasberryComponent()\r\n}\r\n\r\n```\r\n\r\nSo far, I can't find a straight answer officially or unofficially on how to do this. Given the rapid rate of changes, it's difficult to know whether the suggestions I found are even relevant anymore. \r\n\r\nThe most common method suggested is to use conditional markup to determine the component's type and declare the appropriate tag:\r\n\r\n```\r\n<ul>\r\n    @foreach (fruit in fruits)\r\n    {\r\n        switch(fruit)\r\n        {\r\n            case PearComponent p:\r\n                <PearComponent ParameterOfSomeSort=\"p\"></PearComponent>\r\n                <li>Or render pears like this, if you want the li in it</li>\r\n                break;\r\n            case AppleComponent a:\r\n                <AppleComponent></AppleComponent>\r\n                break;\r\n            case BananaComponent b:\r\n                <BananaComponent></BananaComponent>\r\n                break;\r\n            case RaspberryComponent r:\r\n                <RaspberryComponent></RaspberryComponent>\r\n                break;\r\n        }\r\n    }\r\n</ul>\r\n```\r\n\r\nWhile workable, the code is tightly coupled to the FruitComponent subtypes.  Consequently, you can't render a new subtype without code modification. I'll spare you the details of the other approach which emits markup from the code behind. I rather not go back to the old days of ASP.NET Forms Server Control development.\r\n\r\nDoes Blazor even support this as a first class citizen?  It's hard to believe it doesn't as it is a very common use case, especially when DI is baked into dotnetcore. Is there a way to do this, preferably in a declarative way as Vue.js does?\r\n\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/14599/comments",
    "author": "Joebeazelman",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-10-01T16:58:44Z",
        "body": "Thanks for contacting us, @Joebeazelman.\r\nUsing the `switch` approach you have will be our recommendation. We will consider doing something better in this area in the future."
      },
      {
        "user": "chrdlx",
        "created_at": "2019-10-02T11:02:36Z",
        "body": "This is the solution I came to\r\n\r\n```\r\n@page \"/\"\r\n\r\n@foreach (CounterParent counter in components)\r\n{\r\n    RenderFragment renderFragment = (builder) => { builder.OpenComponent(0, counter.GetType()); builder.CloseComponent(); };\r\n    <div>\r\n        <div>Before the component</div>\r\n        @renderFragment\r\n        <div>Afterthe component</div>\r\n    </div>\r\n}\r\n\r\n@code\r\n{\r\n    List<CounterParent> components = new List<CounterParent>() { new CounterParent(), new CounterChild() };\r\n}\r\n```\r\n\r\nI posted it in stackoverflow,  but I share it here maybe for future reference.\r\nRegards!"
      }
    ]
  },
  {
    "number": 14537,
    "title": "Missing namespace: Microsoft.AspNetCore.Mvc.Razor.Extensions.NamespaceDirective",
    "created_at": "2019-09-27T21:07:01Z",
    "closed_at": "2019-09-27T22:55:02Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/14537",
    "body": "Missing namespace: Microsoft.AspNetCore.Mvc.Razor.Extensions.NamespaceDirective\r\n\r\nGetting this error:\r\nCould not load type 'Microsoft.AspNetCore.Mvc.Razor.Extensions.NamespaceDirective' from assembly 'Microsoft.AspNetCore.Mvc.Razor.Extensions, Version=3.0.0.0,\r\n\r\nWhat is the alternative in 3.0 to get pass this error?\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/14537/comments",
    "author": "joetherod",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-09-27T22:40:43Z",
        "body": "Thanks for contacting us, @joetherod.\r\n@ajaybhargavb can you please look into this? Thanks!"
      },
      {
        "user": "ajaybhargavb",
        "created_at": "2019-09-27T22:44:26Z",
        "body": "@joetherod `NamespaceDirective` was moved to `Microsoft.AspNetCore.Razor.Language.Extensions` namespace in 3.0."
      }
    ]
  },
  {
    "number": 14529,
    "title": "App-Layout with Scaffolded Identity",
    "created_at": "2019-09-27T18:54:21Z",
    "closed_at": "2019-12-06T20:01:23Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/14529",
    "body": "When scaffold Identity to an Serverside-Blazor-Templat the UI-Layout and Design is ignored and you get a completely different look when the user want'S to login.\r\n\r\nIs there a easy way to fix this?",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/14529/comments",
    "author": "snmigerl",
    "comments": [
      {
        "user": "blowdart",
        "created_at": "2019-09-27T19:59:29Z",
        "body": "No, the identity components are stand alone because they're not blazor specific and have to work over multiple templates"
      },
      {
        "user": "ghost",
        "created_at": "2019-12-06T20:01:22Z",
        "body": "Thank you for contacting us. Due to no activity on this issue we're closing it in an effort to keep our backlog clean. If you believe there is a concern related to the ASP.NET Core framework, which hasn't been addressed yet, please file a new issue."
      }
    ]
  },
  {
    "number": 14510,
    "title": "[Blazor] Adding a Blazor page named Task.razor breaks compilation",
    "created_at": "2019-09-27T12:38:51Z",
    "closed_at": "2019-09-27T16:18:27Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/14510",
    "body": "### Describe the bug\r\n\r\nBlazor application created from the default blazorserver template fails to compile if it contains a page called Task.razor.\r\n\r\n### To Reproduce\r\n\r\nSteps to reproduce the behavior:\r\n1. Using official .NET Core 3.0 create a new blazor server application by running `dotnet new blazorserver -o BlazorApp1`\r\n2. Add a new page called `Task.razor`.\r\n3. Try to run the application\r\n4. See the following compilation error:\r\n\r\n```\r\nFetchData.razor(42,35): error CS1983: The return type of an async method must be void, Task, Task<T>, a task-like type, IAsyncEnumerable<T>, or IAsyncEnumerator<T>\r\nFetchData.razor(42,35): error CS0508: 'FetchData.OnInitializedAsync()': return type must be 'Task' to match overridden member 'ComponentBase.OnInitializedAsync()'  \r\n```\r\n\r\n### Expected behavior\r\nShould probably build without errors.\r\n\r\n### Additional context\r\n\r\nThis compilation error occurs because `Task.razor` transforms to a class \r\n\r\n```\r\nnamespace BlazorApp1.Page\r\n{\r\n     public class Task : Microsoft.AspNetCore.Components.ComponentBase\r\n     {\r\n     }\r\n}\r\n```\r\n\r\nThis class in turn \"shadows\" `System.Threading.Tasks.Task` which is used in `FetchData.razor`. \r\n\r\nSimilar error happens if one creates a page called `DateTime.razor`:\r\n\r\n```\r\nFetchData.razor(44,69): error CS0117: 'DateTime' does not contain a definition for 'Now' \r\n```\r\n\r\n### Possible fixes:\r\n1. Rename the file. Easy to do. Finding what causes the compilation error is not obvious though.\r\n2. Use fully qualified types or alias them to avoid the conflict. Inconvenient.\r\n3. Generate a backing class name that is less likely to clash with .NET framework classes or application defined types. Something like `TaskComponent`, `TaskRazor` etc.",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/14510/comments",
    "author": "akorchev",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-09-27T16:18:27Z",
        "body": "Thanks for contacting us, @akorchev.\r\nThis is not Blazor specific. The issue will happen in other projects types too. Simply use a different name for the class/component and that will solve the problem."
      },
      {
        "user": "akorchev",
        "created_at": "2019-09-27T16:22:25Z",
        "body": "I am sorry but I think the issue is Blazor specific. I am creating a file called Task.razor and not a class called Task. The Blazor compiler creates a class that conflicts with System.Threading.Tasks.Task. Please reconsider."
      }
    ]
  },
  {
    "number": 14500,
    "title": "Bind Nullable InputCheckbox",
    "created_at": "2019-09-27T06:57:38Z",
    "closed_at": "2019-09-27T16:23:41Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/14500",
    "body": " <InputCheckbox @bind-Value=\"item.bAbo\" />\r\n\r\nbAbo is bool?\r\n\r\nhave read there have been a discussion about that topic, but lost the result\r\n\r\nShould work - doesnt compile on my machine \r\nBlazor final",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/14500/comments",
    "author": "hannespreishuber",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-09-27T16:23:40Z",
        "body": "Thanks for contacting us, @hannespreishuber.\r\nThe `InputCheckbox` doesn't support `bool?` because `null` cannot be represented in an HTML checkbox element."
      }
    ]
  },
  {
    "number": 14489,
    "title": "Blazor (Server-Side) RouteAttribute is broken ?",
    "created_at": "2019-09-26T23:25:36Z",
    "closed_at": "2019-09-30T16:38:31Z",
    "labels": [
      "question",
      "Needs: Author Feedback",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/14489",
    "body": "Hello,\r\nI migrated from preview 7 to release Core 3.0\r\ni have a library with only-class components\r\ni have this `LocationViewModel:ComponentBase` it was working like a charm but not anymore :(\r\n\r\n**My ViewModel:**\r\n```\r\n    [Layout(typeof(LayoutComponent))]\r\n    [Route(\"/location\")]\r\n    public class LocationViewModel : ViewModelBase<Location>\r\n    {}\r\n```\r\n**My Layout:**\r\n```\r\npublic class LayoutComponent : LayoutComponentBase\r\n{\r\n    ...\r\n    Builder.AddContent(1,Body);\r\n    ...\r\n}\r\n```\r\n**My _Host.cshtml**\r\n```\r\n<app>@(await Html.RenderComponentAsync<LayoutComponent>(RenderMode.ServerPrerendered))\r\n</app>\r\n```\r\n\r\n**My app.razor**\r\n```\r\n@using SystemCore.LayoutComponents;\r\n@using Microsoft.AspNetCore.Components.Web;\r\n@using FacilityManagementSystem.ViewModels;\r\n\r\n<Router \r\n        AppAssembly=\"@typeof(Startup).Assembly\" <-- i tried 'App' before , still no use\r\n        AdditionalAssemblies=\"new List<System.Reflection.Assembly>() { typeof(LocationViewModel).Assembly }\"\r\n        >       \r\n    <Found Context=\"routeData\">\r\n        <RouteView RouteData=\"@routeData\" DefaultLayout=\"@typeof(LayoutComponent)\" />\r\n    </Found>\r\n    <NotFound>\r\n        <LayoutView Layout=\"@typeof(LayoutComponent)\">\r\n            <p>Sorry, there's nothing at this address.</p>\r\n        </LayoutView>\r\n    </NotFound>\r\n</Router>\r\n```\r\n\r\nwhat happens is that my `LocationViewModel` does not render when i go to location '~base/location'\r\n\r\ni tried this to check whether my view model has something wrong with it..\r\n**_Host.cshtml** \r\n```\r\n<app>@(await Html.RenderComponentAsync<LocationViewModel>(RenderMode.ServerPrerendered))\r\n</app>\r\n```\r\n**AND IT WORKED !**\r\n\r\nmy assumption is that something is not catching my view model when not rendered directly\r\nplease help as this is so critical to me, sorry for bothering\r\n\r\n---\r\nEdit (1) : there is no error appearing in the browser console BTW",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/14489/comments",
    "author": "moataz1991",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-09-27T16:33:57Z",
        "body": "Thanks for contacting us, @moataz1991.\r\nIt's not clear what is the actual problem here. Please describe your problem in more details."
      },
      {
        "user": "moataz1991",
        "created_at": "2019-09-28T06:29:36Z",
        "body": "my problem is exactly in my custom `LayoutComponent` it is not capturing the url and therfore not rendering the routed component and the `@Body` is always empty  \r\nanyway i returned the default `MainLayout `and removed the `LayoutAttribute `from my ViewModel and now it works like a charm\r\ni just wanted to know why when i set the default layout to be `LayoutComponent `it does not work like `MainLayout `while both inherits from same `LayoutComponentBase`"
      },
      {
        "user": "moataz1991",
        "created_at": "2019-09-28T06:30:10Z",
        "body": "feel free to close the issue :)"
      },
      {
        "user": "moataz1991",
        "created_at": "2019-09-30T22:18:21Z",
        "body": "i solved the problem to the issue !\r\nin-order to use your own custom `LayoutComponent` you have to remove the `DefaultLayout=@MainLayout` from `App.razor` otherwise `renderer` will force `MainLayout` on each component even if it has `LayoutAttribute` with type other than `MainLayout`\r\n\r\nHope it helps..."
      }
    ]
  },
  {
    "number": 14470,
    "title": "Question: Blazor and converting Line of Business (LOB) desktop apps to web apps",
    "created_at": "2019-09-26T14:25:28Z",
    "closed_at": "2019-09-26T16:53:28Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/14470",
    "body": "Question: Blazor and converting Line of Business (LOB) desktop apps to web apps\r\n\r\nWe would like to convert our Line of Business (LOB) desktop apps to web apps, hopefully with the help of Blazor.\r\n\r\nOne concern we have is that users of our desktop apps are used to using the keyboard for navigation (i.e., using the tab or the arrow keys) and selection (enter key).\r\n\r\nFor a list component, for example, they are used to using the TAB and SHIFT-TAB keys for navigating the list items in opposite directions, respectively.\r\n\r\nMost of the Blazor components we've seen do not support such keyboard-based navigation.  Those that do tend to just be wrappers for the underlying javascript implementations that do support such keyboard-based navigation (so why not just use the javascript implementations directly? also, sometimes in order to use JSInterop, the underlying javascript code needs to be rewritten to make it easier to use with Blazor, something we are not keen on doing if we can avoid it).\r\n\r\nWhile we know that there are situations where using JSInterops cannot be avoided, we're trying to investigate how far we can go creating garden variety UI components (that support keyboard navigation) in Blazor without having to use javascript ourselves.\r\n\r\nWe started by prototyping a List component assuming the list items only need to display simple text or strings (complete code below).\r\n\r\nOne reason why many Blazor components currently do not support keyboard navigation is the additional work required. Most implementations use the div and ul html elements for the list container, and li for a list item. All these html elements first need to be made \"focusable\" by adding tabindex=\"0\" attribute settings to them, which we do in our prototype.\r\n\r\nJavascript implementations that support the use of keys for item selection (say, pressing the \"Enter\" key, for example) and navigation then go on to listen for key events and performing other (sometimes tedious) housekeeping tasks (such as where the key is currently located etc.).\r\n\r\nOur Blazor List prototype bypasses some of these tedious housekeeping tasks by just having each list item directly listen to key events themselves, and for \"Enter\"-key-is-down-events, identify themselves (by passing their own specific ItemId) to the EventCallback method of their list container as the newly selected list item.  That EventCallback would then trigger a list re-render which correctly updates the list items' css classes indicating whether a list item is the newly selected item or not.\r\n\r\n\r\nMy questions are: \r\n\r\n(1) Does this approach really work (or are there serious downsides i need to be aware of)?  \r\n\r\n(2) Our list prototype creates \"only\" 10 event listeners, one for each list item.  Is there such a thing as having too many event listeners in a web document? Can we use the same approach to support keyboard navigation and selection of individual cells in a table or grid (i.e., one event listener for each table cell), or that might not be a good idea?\r\n\r\n(3) what might be a better approach (that's hopefully also not labor-intensive)?\r\n\r\n\r\nThank you for helping!\r\n\r\n--------------------------------------------\r\nCODE:\r\n\r\nListTextItem.razor\r\n\r\n```\r\n<li tabindex=\"0\" \r\n    class=\"@CssClass\"\r\n    @onkeydown=\"@(async (e)=> await DoKeyDown(e, ItemId))\">@Text</li>\r\n\r\n@code {\r\n    [Parameter] public int TabIndex { get; set; } = 0;\r\n    [Parameter] public string CssClass { get; set; } = null;\r\n    [Parameter] public RenderFragment ChildContent { get; set; }\r\n    [Parameter] public string Text { get; set; } = \"\";\r\n    [CascadingParameter] public ListContainer ListContainer { get; set; }\r\n    [Parameter] public int ItemId { get; set; }\r\n    [Parameter] public EventCallback<int> OnSelectionChanged { get; set; }\r\n\r\n    protected async Task DoKeyDown(KeyboardEventArgs evt, int itemId)\r\n    {\r\n        switch(evt.Code)\r\n        {\r\n            case \"Enter\":\r\n                await OnSelectionChanged.InvokeAsync(itemId);\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n\r\n    }\r\n}\r\n```\r\n\r\nListContainer.razor\r\n```\r\n<div class=\"my-list-container\">\r\n    <CascadingValue Value=\"this\">\r\n        <ul class=\"my-liststyle-no-bullet\">\r\n            @{ \r\n                int j = 0;\r\n                @foreach (var str in StringItems)\r\n                {\r\n                    j += 1;\r\n                    <ListTextItem ItemId=\"@j\"\r\n                          CssClass=\"@SetItemCssClass(@j)\"\r\n                          Text=\"@str\"\r\n                          OnSelectionChanged=\"@HandleSelectedItemChanged\">@j</ListTextItem>\r\n                }\r\n            }\r\n        </ul>\r\n    </CascadingValue>\r\n</div>\r\n\r\n@code {\r\n    [Parameter] public List<string> StringItems { get; set; } = new List<string>();\r\n    protected string ItemSelectedCssClass = \"my-list-item-selected\";\r\n    protected int SelectedItemId { get; set; } = -1;\r\n\r\n    protected string SetItemCssClass(int itemId)\r\n    {\r\n        return (itemId == SelectedItemId) ? ItemSelectedCssClass : null;\r\n    }\r\n\r\n    public void HandleSelectedItemChanged(int _selectedItemId)\r\n    {\r\n        SelectedItemId=_selectedItemId;\r\n    }\r\n}\r\n```\r\n\r\nIndex.razor\r\n```\r\n@page \"/list1\"\r\n<h3>List Demo</h3>\r\n<ListContainer StringItems=\"@StringList\"></ListContainer>\r\n\r\n@code {\r\n    protected List<string> StringList = new List<string>();\r\n\r\n    protected override void OnInitialized()\r\n    {\r\n        StringList.AddRange(new List<string>()\r\n        {\r\n            \"string1\",\r\n            \"string2\",\r\n            \"string3\",\r\n            \"string4\",\r\n            \"string5\",\r\n      \r\n      \"string6\",\r\n            \"string7\",\r\n            \"string8\",\r\n            \"string9\"\r\n        });\r\n    }\r\n}\r\n```\r\n\r\nmylist.css\r\n\r\n```\r\n.my-liststyle-no-bullet {\r\n    list-style-type: none;\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\n.my-list-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: 10px;\r\n    padding: 10px;\r\n    width: 100px;\r\n    border-width: 2px;\r\n    border-style: solid;\r\n}\r\n\r\n.my-list-item-selected {\r\n    background: rgb(0, 0, 255);\r\n    color: white;\r\n}\r\n\r\n.my-list-item-not-selected {\r\n    background: rgb(0, 0, 0);\r\n    color: black;\r\n}\r\n```\r\n\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/14470/comments",
    "author": "githubfanster",
    "comments": [
      {
        "user": "SteveSandersonMS",
        "created_at": "2019-09-26T16:53:28Z",
        "body": "> (1) Does this approach really work (or are there serious downsides i need to be aware of)?\r\n\r\nYes, using events to respond to keyboard input sounds right to me.\r\n\r\n> (2) Our list prototype creates \"only\" 10 event listeners, one for each list item. Is there such a thing as having too many event listeners in a web document? Can we use the same approach to support keyboard navigation and selection of individual cells in a table or grid (i.e., one event listener for each table cell), or that might not be a good idea?\r\n\r\nYou'll have to try it to verify for sure that your UI perf scales in the way you need. However Blazor automatically uses event delegation for all event handlers, so even if you have a million `@onkeypress` registrations, it will only register a single native JavaScript event for `keypress`, and deals with dispatching callbacks to the right place in .NET for you.\r\n\r\n> (3) what might be a better approach (that's hopefully also not labor-intensive)?\r\n\r\nYour approach sounds fine."
      }
    ]
  },
  {
    "number": 14458,
    "title": "Compiling ASP.NET Core 2.x application while targeting .NET Core 3.0",
    "created_at": "2019-09-26T07:46:09Z",
    "closed_at": "2019-12-06T20:01:28Z",
    "labels": [
      "question",
      "feature-platform",
      "area-networking"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/14458",
    "body": "As the question says, is it possible to Target .NET Core 3.0 while still using ASP.NET Core 2.x? It looks like libraries in ASP.NET Core 2.x is compiled using .NET Standard 2.0. So far i cannot figure out how to get this to work. I have tried explicitly setting the version of \"Microsoft.AspNetCore.App\" package to 2.x but it still was using ASP.NET Core 3.0",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/14458/comments",
    "author": "jinhong-",
    "comments": [
      {
        "user": "davidfowl",
        "created_at": "2019-09-26T08:31:35Z",
        "body": "Possible? Yes. Difficult? Yes. Tested? No. \r\n\r\nWhy?"
      },
      {
        "user": "jinhong-",
        "created_at": "2019-09-26T08:39:49Z",
        "body": "I read that there are a lot of performance improvements in .NET Core 3.0 + improved docker images for container workloads. For me, we have a dependency on OData, which is currently only available in ASP.NET Core 2.1, or 2.2 with backwards compatibility flag enabled.\r\nFrom my understanding, several of the perf improvements are low level APIs, which means that we can reap those benefits by just moving to the .NET 3.0 runtime. Or would it be possible to run a .NET Core 2.x application in .NET Core 3.0 runtime and get those benefits?"
      },
      {
        "user": "ghost",
        "created_at": "2019-12-06T20:01:27Z",
        "body": "Thank you for contacting us. Due to no activity on this issue we're closing it in an effort to keep our backlog clean. If you believe there is a concern related to the ASP.NET Core framework, which hasn't been addressed yet, please file a new issue."
      }
    ]
  },
  {
    "number": 14456,
    "title": "Blazor WASM template missing when building + using from source",
    "created_at": "2019-09-26T07:17:05Z",
    "closed_at": "2019-12-06T20:01:31Z",
    "labels": [
      "question",
      "area-infrastructure",
      "feature-blazor-wasm"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/14456",
    "body": "### Describe the bug\r\nWhen I build aspnetcore from source and then ```source activate.sh``` I get a dotnet that only has the blazor server template, not blazor wasm. If I follow the tutorial instructions from the official site I have both blazor server and wasm templates. As a result I can't 'dotnet new' a blazor wasm project when building from source.\r\n\r\nIf I try to use an existing blazor wasm project w/a from-source build of aspnetcore it doesn't work, but that seems expected.\r\n\r\n### To Reproduce\r\n1. Build from source with build.sh on a master checkout\r\n2. ```source ./activate.sh```\r\n3. ```cd .. ; mkdir blazortest ; cd blazortest ; dotnet new blazorwasm```\r\n\r\n### Expected behavior\r\nIt works\r\n\r\n### Actual behavior\r\n```No templates matched the input template name: blazorwasm```\r\n\r\nAnd the installed templates list contains blazorserver but not blazorwasm.\r\n\r\n### Additional context\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version: 5.0.100-alpha1-013788\r\n Commit: 9df6ca668d\r\n\r\nRuntime Environment:\r\n OS Name: Mac OS X\r\n OS Version: 10.15\r\n OS Platform: Darwin\r\n RID: osx.10.15-x64\r\n Base Path: /Users/katelyngadd/Projects/AspNetCore/.dotnet/sdk/5.0.100-alpha1-13788/\r\n```",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/14456/comments",
    "author": "kg",
    "comments": [
      {
        "user": "ghost",
        "created_at": "2019-12-06T20:01:30Z",
        "body": "Thank you for contacting us. Due to no activity on this issue we're closing it in an effort to keep our backlog clean. If you believe there is a concern related to the ASP.NET Core framework, which hasn't been addressed yet, please file a new issue."
      }
    ]
  },
  {
    "number": 14405,
    "title": "System.InvalidOperationException: The Router component requires a value for the parameter Found.",
    "created_at": "2019-09-25T04:49:21Z",
    "closed_at": "2019-09-25T16:13:57Z",
    "labels": [
      "question",
      "area-blazor",
      "feature-blazor-wasm"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/14405",
    "body": "Create the demo code from Visual Studio 2019 16.3 for Blazor using default template,  and run directly by F5, and then only shows **Loading** text in the page but I saw the error log as below after F12 from browser **(Chrome v77.0)**:\r\n```\r\nblazor.webassembly.js:1 WASM: ﻿Unhandled exception rendering component:\r\nd.printErr @ blazor.webassembly.js:1\r\nblazor.webassembly.js:1 WASM: System.InvalidOperationException: The Router component requires a value for the parameter Found.\r\nd.printErr @ blazor.webassembly.js:1\r\nblazor.webassembly.js:1 WASM:   at Microsoft.AspNetCore.Components.Routing.Router.SetParametersAsync (Microsoft.AspNetCore.Components.ParameterView parameters) <0x1fba750 + 0x00056> in <79f1a91c13df4c50b01e437f9a5bf79e>:0 \r\nd.printErr @ blazor.webassembly.js:1\r\nblazor.webassembly.js:1 WASM:   at Microsoft.AspNetCore.Components.Rendering.ComponentState.SetDirectParameters (Microsoft.AspNetCore.Components.ParameterView parameters) <0x1f39690 + 0x0008e> in <79f1a91c13df4c50b01e437f9a5bf79e>:0 \r\nd.printErr @ blazor.webassembly.js:1\r\nblazor.webassembly.js:1 WASM:   at Microsoft.AspNetCore.Components.RenderTree.RenderTreeDiffBuilder.InitializeNewComponentFrame (Microsoft.AspNetCore.Components.RenderTree.RenderTreeDiffBuilder+DiffContext& diffContext, System.Int32 frameIndex) <0x1f64220 + 0x00082> in <79f1a91c13df4c50b01e437f9a5bf79e>:0 \r\nd.printErr @ blazor.webassembly.js:1\r\nblazor.webassembly.js:1 WASM:   at Microsoft.AspNetCore.Components.RenderTree.RenderTreeDiffBuilder.InitializeNewSubtree (Microsoft.AspNetCore.Components.RenderTree.RenderTreeDiffBuilder+DiffContext& diffContext, System.Int32 frameIndex) <0x1f64030 + 0x00082> in <79f1a91c13df4c50b01e437f9a5bf79e>:0 \r\nd.printErr @ blazor.webassembly.js:1\r\nblazor.webassembly.js:1 WASM:   at Microsoft.AspNetCore.Components.RenderTree.RenderTreeDiffBuilder.InsertNewFrame (Microsoft.AspNetCore.Components.RenderTree.RenderTreeDiffBuilder+DiffContext& diffContext, System.Int32 newFrameIndex) <0x1f63d20 + 0x000c2> in <79f1a91c13df4c50b01e437f9a5bf79e>:0 \r\nd.printErr @ blazor.webassembly.js:1\r\nblazor.webassembly.js:1 WASM:   at Microsoft.AspNetCore.Components.RenderTree.RenderTreeDiffBuilder.AppendDiffEntriesForRange (Microsoft.AspNetCore.Components.RenderTree.RenderTreeDiffBuilder+DiffContext& diffContext, System.Int32 oldStartIndex, System.Int32 oldEndIndexExcl, System.Int32 newStartIndex, System.Int32 newEndIndexExcl) <0x1f63078 + 0x00490> in <79f1a91c13df4c50b01e437f9a5bf79e>:0 \r\nd.printErr @ blazor.webassembly.js:1\r\nblazor.webassembly.js:1 WASM:   at Microsoft.AspNetCore.Components.RenderTree.RenderTreeDiffBuilder.ComputeDiff (Microsoft.AspNetCore.Components.RenderTree.Renderer renderer, Microsoft.AspNetCore.Components.Rendering.RenderBatchBuilder batchBuilder, System.Int32 componentId, Microsoft.AspNetCore.Components.RenderTree.ArrayRange`1[T] oldTree, Microsoft.AspNetCore.Components.RenderTree.ArrayRange`1[T] newTree) <0x1f55d28 + 0x0009e> in <79f1a91c13df4c50b01e437f9a5bf79e>:0 \r\nd.printErr @ blazor.webassembly.js:1\r\nblazor.webassembly.js:1 WASM:   at Microsoft.AspNetCore.Components.Rendering.ComponentState.RenderIntoBatch (Microsoft.AspNetCore.Components.Rendering.RenderBatchBuilder batchBuilder, Microsoft.AspNetCore.Components.RenderFragment renderFragment) <0x1f4b5b0 + 0x000ea> in <79f1a91c13df4c50b01e437f9a5bf79e>:0 \r\nd.printErr @ blazor.webassembly.js:1\r\nblazor.webassembly.js:1 WASM:   at Microsoft.AspNetCore.Components.RenderTree.Renderer.RenderInExistingBatch (Microsoft.AspNetCore.Components.Rendering.RenderQueueEntry renderQueueEntry) <0x1f4ac50 + 0x0004e> in <79f1a91c13df4c50b01e437f9a5bf79e>:0 \r\nd.printErr @ blazor.webassembly.js:1\r\nblazor.webassembly.js:1 WASM:   at Microsoft.AspNetCore.Components.RenderTree.Renderer.ProcessRenderQueue () <0x1f4a2c0 + 0x000b2> in <79f1a91c13df4c50b01e437f9a5bf79e>:0 \r\nd.printErr @ blazor.webassembly.js:1\r\n2localhost/:1 Unchecked runtime.lastError: The message port closed before a response was received.\r\n```\r\n\r\n.NET Core 3.0 installed, Blazor package is preview9",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/14405/comments",
    "author": "teacher-zhou",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-09-25T16:13:56Z",
        "body": "Thanks for contacting us. This is a mismatch between the template package and the runtime you have installed. Most probably the template package is outdated and needs an update."
      }
    ]
  },
  {
    "number": 14366,
    "title": "NavigationManager not encoding url",
    "created_at": "2019-09-24T09:47:52Z",
    "closed_at": "2019-09-24T16:38:24Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/14366",
    "body": "Normally when I navigate to a URL inside my app I would use something like `UriHelper` to encode the URL. But this has been replaced by the `NavigationManager`.\r\n\r\nI am wondering if the `NavigationManager.NavigateTo` should do a `UrlEncode`? \r\n\r\nThe following example code works fine:\r\n\r\n```\r\nNavigationManager.NavigateTo(\"/?search=some criteria | other criteria\");\r\n```\r\nThis will let the application navigate properly. The URL that comes out in the browser will look like this:\r\n\r\n```\r\n/?search=some%20criteria%20|%20other%20criteria\r\n```\r\n\r\nBut, when I copy that URL from the browser and when I paste it into a new window, I then get the following error:\r\n\r\n```\r\n[2019-09-24T09:32:14.420Z] Error: The uris provided are invalid.\r\ne.log @ blazor.server.js:15\r\nblazor.server.js:1 [2019-09-24T09:32:14.421Z] Information: Connection disconnected.\r\nblazor.server.js:1 Uncaught (in promise) Error: Invocation canceled due to the underlying connection being closed.\r\n    at e.connectionClosed (blazor.server.js:1)\r\n    at e.connection.onclose (blazor.server.js:1)\r\n    at e.stopConnection (blazor.server.js:1)\r\n    at e.transport.onclose (blazor.server.js:1)\r\n    at e.close (blazor.server.js:1)\r\n    at e.stop (blazor.server.js:1)\r\n    at e.<anonymous> (blazor.server.js:1)\r\n    at blazor.server.js:1\r\n    at Object.next (blazor.server.js:1)\r\n    at s (blazor.server.js:1)\r\n```\r\n\r\nThis is because the piped character is in the URL. This only fails when pasting the URL directly into the browser.\r\n\r\nThe same thing happends for a few other characters like curly brackets.\r\n\r\nI am not sure if this is a bug? Or am I responsible to do a url encoding before passing the URL to the `NavigateTo`  method?\r\n\r\nIf so, what should I use, siince the `UriHelper` has been replaced?\r\n\r\nRight now the behaviour is not very consistent when navigation through codes works fine, untill you copy paste the URL in the browser.\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/14366/comments",
    "author": "chinookproject",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2019-09-24T15:40:07Z",
        "body": "@chinookproject Thanks for contacting us.\r\n\r\nNavigation manager's responsibility is to perform browser navigation. If you have urls with characters that require encoding you should be responsible for encoding those characters. Navigation manager can't know if the url you gave it was already encoded or not, so if we were to do this, we could cause double-encoding issues.\r\n\r\nWhat I'm trying to say is that NavigationManager can't know in the general case whether it needs to encode or not a given url, so it is up to the developer to do so.\r\n\r\nThat said, maybe this is something we can provide an overload for. @danroth27 @rynowak thoughts?"
      },
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-09-24T16:38:24Z",
        "body": "Thanks for contacting us, @chinookproject.\r\nThis is not something we plan to expose additional API for. You can use `WebUtility.UrlDecode` method you can use to decode it yourself."
      }
    ]
  },
  {
    "number": 14259,
    "title": "[v3.0] When Newtonsoft will be dropped completely?",
    "created_at": "2019-09-23T16:44:45Z",
    "closed_at": "2019-09-24T17:17:07Z",
    "labels": [
      "question",
      "area-mvc"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/14259",
    "body": "_From @dehghani-mehdi on Sunday, September 22, 2019 9:53:41 AM_\r\n\r\nHi,\r\n\r\nI used following command to generate single exe file for my project:\r\n`dotnet publish -r win-x64 -c Release /p:PublishTrimmed=true`\r\n\r\nIn publish directory there are `Newtonsoft.Json.dll` and `Newtonsoft.Json.Bson.dll`. I didn't use `Newtonsoft` at all, so did you drop `Newtonsoft` in v3 or not?\r\n\r\nMaybe `Newtonsoft` is referenced by other packages, am I right? if so, when Microsoft drop `Newtonsoft` from other packages (_`Microsoft.*` and `System.*`_)?\r\n\r\n\r\n_Copied from original issue: dotnet/core#3420_",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/14259/comments",
    "author": "scalablecory",
    "comments": [
      {
        "user": "scalablecory",
        "created_at": "2019-09-23T16:44:46Z",
        "body": "_From @nathan-alden on Monday, September 23, 2019 12:04:59 PM_\r\n\r\n~~You're almost certainly going to need Json.NET now and in the future as Microsoft's own JSON implementation does not support the higher-level abstractions we're all used to (i.e., traversing and modifying a JSON document). Microsoft's implementation, from what I've read and experimented with, is really more about performance than usefulness.~~\r\n\r\nSee comment below."
      },
      {
        "user": "scalablecory",
        "created_at": "2019-09-23T16:44:48Z",
        "body": "_From @dasMulli on Monday, September 23, 2019 12:31:30 PM_\r\n\r\nI think this particular issue is more about how the linker could do a better job breaking apart asp.net core to determine that no user path requires newtonsoft.json - or that the framework may need changes to enable to the linker to break it apart more easily."
      },
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-09-24T17:17:06Z",
        "body": "Thanks for contacting us, @dehghani-mehdi.\r\nThe NewtonSoft.Json library is not part of the shared framework. There should be some other package you reference, which potentially brings the library in. You can find that by examining `project.assets.json` file in the `obj` directory."
      },
      {
        "user": "SimonCropp",
        "created_at": "2019-11-04T03:24:56Z",
        "body": "@mkArtakMSFT if nothing uses any of the types in NewtonSoft, shouldnt it be trimmed when the publish occurs?"
      },
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-11-11T23:54:50Z",
        "body": "> @mkArtakMSFT if nothing uses any of the types in NewtonSoft, shouldn't it be trimmed when the publish occurs?\r\n\r\nit's hard to know whether the app references it or not. You can definitely see whether you explicitly use it or not, but any other API you call (from libraries or the framework) can reference it internally, and that will result the library to be included in the final bits."
      },
      {
        "user": "SimonCropp",
        "created_at": "2019-11-12T00:02:57Z",
        "body": "> it's hard to know whether the app references it or not\r\n\r\nwhy? you can walk through all the assemblies and check their references "
      }
    ]
  },
  {
    "number": 14246,
    "title": "Blazor Server should use absolute paths for blazor.server.js and for connecting to the Blazor hub",
    "created_at": "2019-09-23T06:09:17Z",
    "closed_at": "2019-09-23T22:58:22Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/14246",
    "body": "It looks like Blazor Server is using relative paths in a couple of places that limit when it can be used. This caused some issues when I tried to use Blazor components in an MVC app on any view other than the home page.\r\n\r\nRepro steps:\r\n\r\n- Create an MVC app\r\n- Add `services.AddServerSideBlazor()` to `Startup.ConfigureServices` and `endpoints.MapBlazorHub()` in `Startup.Configure`.\r\n- Add the *blazor.server.js* script to the layout using the script tag we use in the Blazor Server template: `<script src=\"_framework/blazor.server.js\"></script>`\r\n- Add a Razor component to the project with some sort of user interactivity support.\r\n- Add the component to the *Privacy.cshtml* page: `@(await Html.RenderComponentAsync<MyComponent>(RenderMode.ServerPrerendered))`\r\n- Run the app and browser to the Privacy page\r\n\r\nActual result:\r\n- The component is not interactive, because the request for *blazor.server.js* goes to */Home/_framework/blazor.server.js*. \r\n- To work around this issue, update the script tag to use `~/`: `<script src=\"~/_framework/blazor.server.js\"></script>`. **Should we do this everywhere?**\r\n- The component is still not interactive because the SignalR client tries to connect to `/Home/_blazor/`. This seems like a bug we need to fix in *blazor.server.js*?\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/14246/comments",
    "author": "danroth27",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2019-09-23T13:23:54Z",
        "body": "Using base relative paths is deliberate. If you serve components from a different path you can add\r\n```\r\n<base href=\"~/\" />\r\n```\r\nto set the base path correctly.\r\n\r\nAlternatively, you can configure the url explicitly in the blazor signalr options using\r\n```\r\nBlazor.start({\r\n                configureSignalR: builder.UseUrl('@Html.Content(\"/_blazor\")'\r\n            });\r\n```"
      },
      {
        "user": "SteveSandersonMS",
        "created_at": "2019-09-23T14:43:30Z",
        "body": "Yes, you **must** set `<base href>` correctly otherwise other things can't work either (routing). Given correct base href, the relative URLs are correct, so this is by design.\r\n\r\nLeaving open just so it comes up in triage in case there's anything else to say."
      },
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-09-23T16:19:44Z",
        "body": "Closing this as answered."
      },
      {
        "user": "danroth27",
        "created_at": "2019-09-23T22:58:22Z",
        "body": "~~Set the base URI where? On each page for whatever route? ~~\r\n\r\nNevermind! @javiercn and I chatted about it and adding `<base \"~/\" />` to the layout makes it all work great. Yay!"
      }
    ]
  },
  {
    "number": 14201,
    "title": "RenderTreeBuilder injects <!--!--> inside scripts",
    "created_at": "2019-09-20T19:39:56Z",
    "closed_at": "2019-09-24T09:01:50Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/14201",
    "body": "### Describe the bug\r\nWhen executing `RenderTreeBuilder.OpenElement`, Blazor adds an additional `<!--!-->`. When the element is a `script` this results in an invalid script which works in all browsers except Safari.\r\n\r\n### Expected behavior\r\nwhen adding a \"script\" element, Blazor should not emit `<!--!-->`\r\n\r\n### Additional context\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-rc1-014190\r\n Commit:    c4d43f672d\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-rc1-014190\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-rc1-19456-20\r\n  Commit:  8f5d7b1ba4\r\n\r\n.NET Core SDKs installed:\r\n  2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.700-preview-009601 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.700-preview-009618 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.700 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.800-preview-009677 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.800-preview-009696 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.800 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.801 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.802 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.300-preview-010050 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.300-preview-010067 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.300 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.400-preview-010195 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.400-preview-010219 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.400 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.401 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.402 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview7-012821 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview8-013656 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-rc1-014190 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview8.19405.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-rc1.19457.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview8-28405-07 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-rc1-19456-20 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview8-28405-07 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-rc1-19456-20 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/14201/comments",
    "author": "mrpmorris",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2019-09-23T13:56:31Z",
        "body": "@mrpmorris Thanks for contacting us.\r\n\r\nWhile it is technically possible to inject script tags through blazor components (by writing the component in c# or applying a specific attribute in the script tag) it is not something that we encourage nor recommend.\r\n\r\nThe reason for it is that injecting a script does not have the expected effect. Once a script is injected into the DOM, its contents are executed and removing the script doesn't roll back the effects of the script.\r\n\r\nIf you give us an idea of what you are trying to accomplish we might be able to suggest alternative ways of accomplishing the same goal."
      },
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-09-23T16:34:44Z",
        "body": "@SteveSandersonMS I think the argument @javiercn brought up is inline with our current plans. Can you please confirm?"
      },
      {
        "user": "mrpmorris",
        "created_at": "2019-09-24T08:03:59Z",
        "body": "Fluxor has middleware. The script only gets added to the page if the middleware is used.\r\n\r\nFor example, if you use the Redux Dev Tools  middleware only then will the script be included to hook Fluxor up to the browser plugin. \r\n\r\nThe initialisation script is located by a static script in the page and executed. "
      },
      {
        "user": "mrpmorris",
        "created_at": "2019-09-24T08:05:20Z",
        "body": "Perhaps adding // before the tag if inside a script? Or putting the marker before elements instead of inside them? "
      },
      {
        "user": "SteveSandersonMS",
        "created_at": "2019-09-24T09:01:50Z",
        "body": "Yes, @javiercn's statement sounds right to me.\r\n\r\nIf you want to add scripts to the page dynamically, I'd recommend using JS interop to do so. As long as you've already loaded one \"bootstrapping\" JavaScript file, you can call functions in that file to construct and insert additional `<script>` elements."
      },
      {
        "user": "mrpmorris",
        "created_at": "2019-09-24T15:48:16Z",
        "body": "My work around is to render the script with an `id`, and my bootstrapping script locates it, strips out the `<!--!-->` and then does an `eval` on it. That works. It'll do."
      }
    ]
  },
  {
    "number": 14151,
    "title": "Blazor - NavigationManager.Uri is a string not a uri?",
    "created_at": "2019-09-19T14:33:45Z",
    "closed_at": "2019-09-19T16:35:54Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/14151",
    "body": "### Is your feature request related to a problem? Please describe.\r\nNot really a feature.. more of an api consideration.\r\nIn my blazor wasm application,  I need to get the current port from the current url.\r\nI was expecting to be able to do something like `NavigationManager.Uri.Port` however NavigationManager.Uri is a string not Uri.\r\n\r\nOf course I can parse a URI myself from that string but I would rather it was a URI to begin with to avoid having to do this. At the moment I abuse the `ToAbsoluteUri` to get a typed URI rather than string:\r\n\r\n```\r\nNavigationManager.ToAbsoluteUri(\"/\").Port\r\n```\r\n\r\n\r\n### Describe the solution you'd like\r\nWhy not change NavigationManager.Uri to a System.Uri ?\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/14151/comments",
    "author": "dazinator",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-09-19T16:35:54Z",
        "body": "Thanks for contacting us, @dazinator.\r\nWe usually try to avoid exposing `Uri` in APIs."
      }
    ]
  },
  {
    "number": 14144,
    "title": "Blazor String Parameters in event handlers in the new Preview 9, rc.",
    "created_at": "2019-09-19T12:07:15Z",
    "closed_at": "2019-09-19T16:41:37Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/14144",
    "body": "### Is your feature request related to a problem? Please describe.\r\n\r\nHi I just updated from AspNetCore 3.0 Preview 7 to AspNetCore 3.0 RC1 and there the event handler syntax changed significantly.\r\n\r\nThe old version was this:\r\nonclick=@(async ()=> SetPagerSize(\"forward\"))\r\n\r\nI havent found something yet, but is there a way to pass strings as parameters.\r\n\r\nThere passing string parameters was possible \r\n\r\nHow can I pass strings to functions in RC1?\r\n\r\n<button class=\"btn pagebutton btn-secondary\" @onclick=\"(async ()=> NavigateToPage(\"next\"))\">Next</button>\r\n\r\n\r\nsince the content of @onclick= needs to be inside \"\", the string \"next\" will end this string. Is there already a syntax to fix this? When I use '' like in javascript \r\n\r\n### Describe the solution you'd like\r\nNot shure what would be the best soltion, now I extract all my strings to constants. In javascript you can always use '' inside the \"\", but that would violate the C# syntax.\r\n\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/14144/comments",
    "author": "MichaelPeter",
    "comments": [
      {
        "user": "MV10",
        "created_at": "2019-09-19T13:54:28Z",
        "body": "Enclose it with apostrophes:\r\n\r\n`@onclick='(async () => await Foo(\"bar\"))'`"
      },
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-09-19T16:41:08Z",
        "body": "Thanks for contacting us, @MichaelPeter .\r\nThe parser is smart enough to still parse `\"`, even when it seems it's wrapped twice:\r\n```razor \r\n@OnClick=\"@(async ()=> NavigateToPage(\"next\"))\"\r\n```"
      },
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-09-19T16:41:35Z",
        "body": "If this is not working for you, please let us know and we'll look into this further."
      },
      {
        "user": "MichaelPeter",
        "created_at": "2019-09-19T16:53:49Z",
        "body": "Thanks that solved my problem :) "
      }
    ]
  },
  {
    "number": 14131,
    "title": "Is Blazor development is possible (on linux) or someone have worked with Blazor on linux",
    "created_at": "2019-09-19T03:56:30Z",
    "closed_at": "2019-09-19T14:12:36Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/14131",
    "body": "Yesterday I tried Blazor on my windows machine and it's look good. I am interested to use my linux machine for programming web-app using Blazor.\r\n\r\nDo someone have successfully used Blazor on Mac and linux. Most of time I seen demos using VS on Windows machine.\r\n\r\nDid someone tried it practically. ",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/14131/comments",
    "author": "anirugu",
    "comments": [
      {
        "user": "Eilon",
        "created_at": "2019-09-19T04:37:58Z",
        "body": "It works great on Windows, Mac, and Linux. There is nothing OS-specific about developing with it or where it can run."
      },
      {
        "user": "javiercn",
        "created_at": "2019-09-19T14:12:36Z",
        "body": "@anirugu Thanks for contacting us.\r\n\r\n@Eilon answer is correct. \r\n\r\nIf you find something is not working on either Mac or Linux, please file an issue with a repro project and detailed repro steps and we'll investigate.\r\n\r\nThanks!"
      }
    ]
  },
  {
    "number": 14094,
    "title": " In BLAZOR ! How to get the selected range of the content.",
    "created_at": "2019-09-18T10:30:27Z",
    "closed_at": "2019-09-18T16:24:41Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/14094",
    "body": "### Describe the solution you'd like\r\nGetting the range of the selected content from the defined set of contents.\r\n\r\n### Additional context\r\nCan anyone suggest a solution for it ?\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/14094/comments",
    "author": "Indrajith-Sync",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-09-18T16:24:41Z",
        "body": "Thanks for contacting us, @indrajjith.\r\nYou will need to use JSInterop for this. There is no abstraction available in Blazor for doing this at the moment."
      },
      {
        "user": "Indrajith-Sync",
        "created_at": "2019-09-19T05:57:55Z",
        "body": "Thanks  @mkArtakMSFT  will try with the JsInterop."
      }
    ]
  },
  {
    "number": 14008,
    "title": "Oneway binding of an input element typed datetime-local not working",
    "created_at": "2019-09-15T10:46:37Z",
    "closed_at": "2019-09-16T16:17:25Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/14008",
    "body": "`<input type=\"datetime-local\" value=\"@MyDate\" />\r\n@code { DateTime MyDate = DateTime.Now;}\r\n`\r\nDoesn't work, input element is uninitialized.",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/14008/comments",
    "author": "EuroEager2008",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-09-16T16:17:25Z",
        "body": "Thanks for contacting us, @EuroEager2008.\r\nYou can use `ToString` method with explicit format parameter to get the desired outcome."
      }
    ]
  },
  {
    "number": 13895,
    "title": "context.Features.Get<IHttpMaxRequestBodySizeFeature>() is null during test",
    "created_at": "2019-09-11T15:54:52Z",
    "closed_at": "2019-09-16T20:06:06Z",
    "labels": [
      "question",
      "enhancement",
      "area-networking"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/13895",
    "body": "### Describe the bug\r\nWhen writing a XUNIT test for testing for max body sizes, the line\r\n\r\n```C#\r\ncontext.Features.Get<IHttpMaxRequestBodySizeFeature>()\r\n```\r\nthrows a error of \r\n\r\n```\r\nSystem.NullReferenceException: 'Object reference not set to an instance of an object.'\r\n```\r\n\r\n```C#\r\nprivate readonly WebApplicationFactory<XXXX.Startup> _webAppFactory;\r\n\r\n var webAppClient = _webAppFactory\r\n                .WithWebHostBuilder(\r\n                builder =>\r\n                {\r\n                    builder.UseSolutionRelativeContentRoot(@\"..\\..\\\", \"XXXX.sln\");              \r\n                    builder.Configure(app =>\r\n                    {\r\n                        app.Run(async context =>\r\n                        {\r\n                            context.Features.Get<IHttpMaxRequestBodySizeFeature>().MaxRequestBodySize = 100_000_000;\r\n                        });\r\n\r\n                    });\r\n                }\r\n            )\r\n            .CreateClient(clientOptions);\r\n````\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Using this version of ASP.NET Core '...'\r\n2. Run this code '....'\r\n3. With these arguments '....'\r\n4. See error\r\n\r\n### Expected behavior\r\n`context.Features.Get<IHttpMaxRequestBodySizeFeature>()` not to be and be able to set the value of MaxRequestBodySize to a given value\r\n\r\n\r\n### Additional context\r\nAdd any other context about the problem here.\r\nInclude the output of `dotnet --info`\r\n dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.15063\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/13895/comments",
    "author": "rezvanf",
    "comments": [
      {
        "user": "davidfowl",
        "created_at": "2019-09-12T03:33:45Z",
        "body": "That’s fine, check for null and noop if it’s null. Features are optional and this one does not need to be in the test server "
      },
      {
        "user": "Tratcher",
        "created_at": "2019-09-12T16:00:27Z",
        "body": "Wouldn't hurt to add, we are trying to emulate most server behavior."
      },
      {
        "user": "davidfowl",
        "created_at": "2019-09-12T16:07:22Z",
        "body": "Yes but we need to train people that features are optional. It should be null checked "
      },
      {
        "user": "rezvanf",
        "created_at": "2019-09-13T19:24:59Z",
        "body": "Ok I agree about null checking, that makes sense.\r\nIn this particular case the unit test is testing a middleware that set value of the  Get<IHttpMaxRequestBodySizeFeature>().MaxRequestBodySize . We have had to provide a *Test* Startup which overrides the Configure and Configure services.\r\n\r\nThe override configure then uses a mock to set the value \r\n"
      },
      {
        "user": "analogrelay",
        "created_at": "2019-09-16T20:06:06Z",
        "body": "> In this particular case the unit test is testing a middleware that set value of the Get().MaxRequestBodySize . We have had to provide a _Test_ Startup which overrides the Configure and Configure services.\r\n\r\nYep, that's the expected way to test a component like this. The test server doesn't provide the feature but you are welcome to register one yourself prior to testing your code.\r\n\r\nClosing this as I don't believe there is any actionable work on our end at this time."
      }
    ]
  },
  {
    "number": 13848,
    "title": "How to update a dynamic DOM value with particular interval?",
    "created_at": "2019-09-10T08:54:15Z",
    "closed_at": "2019-09-11T16:37:38Z",
    "labels": [
      "question",
      ":heavy_check_mark: Resolution: Duplicate",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/13848",
    "body": "I need dynamic updation of DOM value by using timer of every second.\r\n\r\nI have tried a counter value increment on every second. But in that code, I have get an only the final value of that DOM value. I need every second value in my DOM.\r\n\r\nFind the blazor code below...\r\n\r\n```\r\n<h1>Counter</h1>\r\n\r\n<p>Current count: @currentCount</p>\r\n\r\n<button class=\"btn btn-primary\" @onclick=\"StartLiveUpdate\">Click me</button>\r\n\r\n<button class=\"btn btn-primary\" @onclick=\"StopLiveUpdate\">Stop</button>\r\n\r\n@code {\r\n    private static System.Timers.Timer syncTimer;\r\n    Random random = new Random();\r\n    void StartLiveUpdate()\r\n    {\r\n        syncTimer = new System.Timers.Timer(1000);\r\n\r\n        syncTimer.Elapsed += IncrementCount;\r\n        syncTimer.AutoReset = true;\r\n        syncTimer.Enabled = true;\r\n    }\r\n    void StopLiveUpdate()\r\n    {\r\n        syncTimer.Enabled = false;\r\n        syncTimer.Stop();\r\n    }\r\n    int currentCount = 0;\r\n\r\n    void IncrementCount(Object source, System.Timers.ElapsedEventArgs e)\r\n    {\r\n        currentCount++;\r\n        this.StateHasChanged();\r\n    }\r\n}",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/13848/comments",
    "author": "Arunsanthoshh",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-09-11T16:37:38Z",
        "body": "Thanks for contacting us, @Arunsanthoshh.\r\nWe plan to provide guidance about how to do this as part of #13584 "
      }
    ]
  },
  {
    "number": 13813,
    "title": "Reconnection - components-reconnect-modal",
    "created_at": "2019-09-08T15:09:06Z",
    "closed_at": "2019-09-10T16:52:50Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/13813",
    "body": "**Docs says:**\r\n_When the client detects that the connection has been lost, a default UI is displayed to the user while the client attempts to reconnect. If reconnection fails, the user is provided the option to retry. To customize the UI, define an element with `components-reconnect-modal` as its `id` in the _Host.cshtml Razor page. The client updates this element with one of the following CSS classes based on the state of the connection:\r\n\r\n`components-reconnect-show` – Show the UI to indicate the connection was lost and the client is attempting to reconnect.\r\n`components-reconnect-hide` – The client has an active connection, hide the UI.\r\n`components-reconnect-failed` – Reconnection failed. To attempt reconnection again, call `window.Blazor.reconnect()`._\r\n\r\n### To Reproduce\r\n- Latest .net core preview, lastest VS Preview\r\n- Blazor Server App\r\n\r\nPutting an `<p>` element with `components-reconnect-modal` as its **id** in the _Host.cshtml doesn't seem to get updated with those css classes above.\r\nSo when I switch to `offline` in chrome, I expect the `components-reconnect-show` class to be applied tho this element, but it doesn't.\r\n\r\n### Expected behavior\r\nA clear and concise description of what you expected to happen.\r\n\r\n### Screenshots\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n### Additional context\r\nAdd any other context about the problem here.\r\nInclude the output of `dotnet --info`\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/13813/comments",
    "author": "Legends",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-09-10T16:52:50Z",
        "body": "Thanks for contacting us, @Legends .\r\nSwitching Chrome to `offline` doesn't terminate the connection.\r\nYou can try to close shut down the server to simulate this."
      }
    ]
  },
  {
    "number": 13779,
    "title": "Custom CircuitHandler - overridden method never gets called",
    "created_at": "2019-09-06T19:58:31Z",
    "closed_at": "2019-09-10T17:05:56Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/13779",
    "body": "I have created a simple class which inherits from `CircuitHandler` and it overrides `OnConnectionUpAsync`.\r\nRegistered:\r\n```C#\r\npublic void ConfigureServices(IServiceCollection services) { ...\r\nservices.AddServerSideBlazor(); services.AddScoped<CircuitHandlerComponent>();\r\n..\r\n}\r\n```\r\nAnd injected in a razor page like this: `@inject CircuitHandlerComponent CircuitHandlerComponent`\r\n\r\nNow I hit `F5` in VS, but the problem is , the overridden method never gets called!?",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/13779/comments",
    "author": "Legends",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-09-10T17:03:07Z",
        "body": "Thanks for contacting us.\r\n@Legends, please try to register your handler as a `CircuitHandle`:\r\n``` services.AddScoped<CircuitHandler, CircuitHandlerComponent>();```"
      }
    ]
  },
  {
    "number": 13742,
    "title": "[Blazor] Preview9 - MapFallbackToClientSideBlazor unusable with MapBlazorHub()",
    "created_at": "2019-09-05T22:09:37Z",
    "closed_at": "2019-09-06T16:25:43Z",
    "labels": [
      "question",
      "area-blazor",
      "feature-blazor-wasm"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/13742",
    "body": "### Describe the bug\r\n\r\nFrom Preview9, it seem impossible to load a valid application through **MapFallbackToClientSideBlazor** on a server-side project.\r\n\r\nThis method expect a filename that can be found in the client-side project, like **index.html**\r\nBut as the new **MapBlazorHub** does not accept any starting component anymore, like **MapBlazorHub<App>()** in preview8, the application don't instanciate any App component from the client-side project at startup.\r\n\r\nIt just keep showing \"loading...\"\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Create a Blazor WASM application, ASP.NET Core Hosted checked\r\n2. In the server-side project, in **ConfigureServices** in **Startup.cs**, add **services.AddServerSideBlazor();**\r\n3. In **Configure** use:\r\n\r\n```csharp\r\napp.UseClientSideBlazorFiles<ClientApp.Startup>();\r\n\r\napp.UseEndpoints(endpoints =>\r\n{\r\n\tendpoints.MapBlazorHub();\r\n\tendpoints.MapFallbackToClientSideBlazor<ClientApp.Startup>(\"server_index.html\");\r\n});\r\n```\r\n4. Copy **index.html** in client-side, and past in the same folder with a name **server_index.html**, and replace in the file content, the **blazor.webassembly.js** reference, to **blazor.server.js**\r\n\r\n5. Launch the server-side app in Debug. It is stuck on \"loading...\"\r\n\r\n### Expected behavior\r\n\r\nThe application should launch normally, as we fallbacked on client-side files.\r\n\r\nIn my opinion, it is not working because the server-side implementation expect the component declaration in a _Host.cshtml file or similar, to be invoked with the Html helper since the deprecation of MapBlazorHub generic type declaration, but the client-side logic doesn't have any functionnality to cover this behavior at index.html level.\r\n\r\n### Additional info\r\n\r\nI was expecting to use this in order to have a similar startup file when having to switch between client-side and server-side implementations with my BlazorMobile plugin.\r\n\r\nThis way, being able to use some server-side code for debugging, sharing same html/js/css ressources on each implementations, and also switch easily without thinking between WASM runtime (for iOS, Android, UWP) and .NET Core one (for remote device debugging or Desktop with Electron.NET).\r\n\r\nThe strategy was only to copy/past the index.html file in server_index.html instead, through a MSBuild task, and replace the blazor.webassembly.js reference to blazor.server.js, and fallback on this file in server-side projects, it was a no brainer.\r\n\r\nWith this change, the only workaround i found and that i'm working on for the next release for preview9 is:\r\n\r\n- Copy index.html file with MSBuild, to server_index.cshtml, still on client-side project\r\n- Decorate the file with the \"guessed\" C# code and component type for startup like expected on a server-side project.\r\n- Set the file Property action to \"None\"\r\n- Add the file as a Link reference on any server-side project in a **Pages** folder, with Property action to \"Included\" (Contenu in French)\r\n- Call **MapFallback** to this file, like a regular server-side App starting page.\r\n\r\nIn my opinion it's a lot of overhead, in order to keep HTML/JS/CSS references synced between the two implementation, as i don't have found any alternative at this moment.",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/13742/comments",
    "author": "Daddoon",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-09-06T16:25:43Z",
        "body": "Thanks for contacting us, @Daddoon.\r\nWe've removed support for using Server-side blazor with static HTML partially because of security reasons.\r\nAt the moment client and server startups are somewhat different, which we plan to think about and potentially improve in the future."
      },
      {
        "user": "Daddoon",
        "created_at": "2019-09-06T16:38:54Z",
        "body": "Thanks for your quick reply. I will stand with my MSBuild task then."
      }
    ]
  },
  {
    "number": 13713,
    "title": "Question: How to update EditContext.FieldClass from preview8 to preview9?",
    "created_at": "2019-09-05T13:07:33Z",
    "closed_at": "2019-09-05T16:35:23Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/13713",
    "body": "How can we update `EditContext?.FieldClass(FieldIdentifier)` from preview8 to preview9? Is `EditContext?.FieldCssClass(FieldIdentifier)` the equivalent?",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/13713/comments",
    "author": "SeppPenner",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-09-05T16:35:19Z",
        "body": "Thanks for contacting us, @SeppPenner .\r\nYes, this was renamed to `FieldCssClass`."
      },
      {
        "user": "SeppPenner",
        "created_at": "2019-09-06T07:51:51Z",
        "body": "Ok, thanks for the fast reply :)"
      }
    ]
  },
  {
    "number": 13697,
    "title": "ServerSideBlazor's component inside razor page (Route data) Preview 9",
    "created_at": "2019-09-05T02:44:00Z",
    "closed_at": "2019-09-05T16:48:20Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/13697",
    "body": "Before Preview 9 we could pass a blazor component, the parameters needed for it to work from a razor page.\r\n\r\nFor example, a razor page with the following URL: test.com/{param1} could read the param1 value and pass it to the embedded blazor component for it to work.\r\n\r\nNow with stateful prerendering discarded, what would be the recommended way for a blazor component inside a razor page to read route data?\r\n\r\nThanks & Regards!!",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/13697/comments",
    "author": "chrdlx",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-09-05T16:48:20Z",
        "body": "Thanks for contacting us, @chrdlx.\r\nYou can use NavigationManager inside your component to read URL and make it available to the component. However, we don't have a mechanism to pass parameters to components from pages directly."
      }
    ]
  },
  {
    "number": 13684,
    "title": "Razor Pages - Anchor tag helper not finding named page ",
    "created_at": "2019-09-04T20:11:34Z",
    "closed_at": "2019-12-06T20:01:47Z",
    "labels": [
      "question",
      "area-mvc"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/13684",
    "body": "I have a page with the path \"Orders/Dashboard\" which I have shortened to \"/dashboard\" using the @page directive.\r\n\r\nI tried putting in a link <a asp-page=\"dashboard\">Dashboard</a> but the tag helper isn't resolving the page. However, if I put in <a asp-page=\"/Orders/Dashboard\">Dashboard</a> it'll work fine.\r\n\r\nI noticed that two pages in the same folder will recognize each other using the @page name, but if they are in different folders it no longer works.\r\n\r\nI could be mistaken, but I believe that tag helpers should recognize custom @page names, because then the anchor tag helpers wouldn't need updated when the folder structure of a project changes.\r\n\r\nThanks in advance!\r\n- Paul",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/13684/comments",
    "author": "adexios",
    "comments": [
      {
        "user": "pranavkm",
        "created_at": "2019-09-05T03:03:32Z",
        "body": "I'm assuming you're talking about the value for `asp-page` property of the anchor TagHelper. \r\n\r\n`asp-page` takes either an absolute page name such as `/Orders/Dashboard` or a relative name such as `Dashboard` or `../DifferentDirectory/Dashboard`. Note that the value is always a page name (derived from the path relative to the `/Pages` directory) and not the route which is the value you can optionally specify in `@page \"{route}\"`."
      },
      {
        "user": "ghost",
        "created_at": "2019-12-06T20:01:46Z",
        "body": "Thank you for contacting us. Due to no activity on this issue we're closing it in an effort to keep our backlog clean. If you believe there is a concern related to the ASP.NET Core framework, which hasn't been addressed yet, please file a new issue."
      }
    ]
  },
  {
    "number": 13673,
    "title": "Callback on Http.PutJsonAsync",
    "created_at": "2019-09-04T13:50:41Z",
    "closed_at": "2019-09-04T16:22:43Z",
    "labels": [
      "question",
      ":heavy_check_mark: Resolution: Duplicate",
      "area-blazor",
      "feature-blazor-wasm"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/13673",
    "body": "Is there a callback or return on Http.PutJsonAsync in Blazor? \r\n\r\n### Describe the solution you'd like\r\nA return of HttpResponse?\r\n\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/13673/comments",
    "author": "mylifelineio",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-09-04T16:22:40Z",
        "body": "Thanks for contacting us, @mylifelineio.\r\nWe'll be tracking support for this as part of #11725 "
      }
    ]
  },
  {
    "number": 13579,
    "title": "Why there is no InternalServerErrorObjectResult or ConflictObjectResult?",
    "created_at": "2019-08-30T13:48:13Z",
    "closed_at": "2019-08-30T16:28:32Z",
    "labels": [
      "question",
      "area-mvc"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/13579",
    "body": "I'm trying to return 500 HTTP error with a body from azure function on an external dependency failure I can catch.\r\n\r\nI'm wondering why there are no `InternalServerErrorObjectResult` or `ConflictObjectResult` equivalents for classes in `System.Web.Http` similar to the ones that result classes in `Microsoft.AspNetCore.Mvc` have (e.g. there is `OkResult` and `OkObjectResult`). Is it on purpose? \r\n\r\nFor now, I had to create my own implementation as below:\r\n```\r\npublic class InternalServerErrorObjectResult : ObjectResult\r\n{\r\n    private const int DefaultStatusCode = StatusCodes.Status500InternalServerError;\r\n\r\n    public InternalServerErrorObjectResult(object value)\r\n        : base(value)\r\n    {\r\n        StatusCode = DefaultStatusCode;\r\n    }\r\n}\r\n```",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/13579/comments",
    "author": "Rychu-Pawel",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-08-30T15:24:30Z",
        "body": "Thanks for contacting us, @Rychu-Pawel.\r\nWe have never seen strong ask from community about these adding much value. Writing these classes on your own is definitely the way to go, given it's quite straight forward."
      },
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-08-30T15:27:40Z",
        "body": "However, it seems there is `ConflictResult` available already, and that would result in 409."
      }
    ]
  },
  {
    "number": 13554,
    "title": "ASP.CoreApp / Blazor Crash on OnAfterRenderAsync()",
    "created_at": "2019-08-29T16:30:12Z",
    "closed_at": "2019-08-29T16:35:40Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/13554",
    "body": "### Describe the bug\r\nI tried to override the OnAfterRenderAsync() methode in one of my pages and tried to call the `await base.OnAfterRenderAsync()`\r\nUnfortunatly i forgot the `base.` and since then every time i call this page the i got an 'Access violation' and the program stopped completely. \r\nThe first time i encoutered this problem, my whole VS stopped working and i could not reopen my project. I restarted the computer and deleted the bin / obj-folders - then it worked again.\r\n\r\n```\r\nDas Programm \"[7944] Artemis.WebUI.exe: Programmablaufverfolgung\" wurde mit Code 0 (0x0) beendet.\r\nDas Programm \"[7944] Artemis.WebUI.exe\" wurde mit Code -1073741819 (0xc0000005) 'Access violation' beendet.\r\n```\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Using this version of ASP.NET Core 'SDK 3.0.100-preview8-013656' and the latest Preview of VS \r\n2. Run this code / override any page with this \r\n```\r\n        protected override async Task OnAfterRenderAsync()\r\n        {\r\n            await OnAfterRenderAsync();\r\n        }\r\n```\r\n3. See error when call the page\r\n\r\n### Expected behavior\r\nMaybe a \"normal\" exception with some more details why it crashed... ",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/13554/comments",
    "author": "oiBio",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-08-29T16:35:40Z",
        "body": "Thanks for contacting us, @oiBio.\r\nGiven this is caused by a wrong code, we don't think there is any action here for us."
      }
    ]
  },
  {
    "number": 13513,
    "title": "[Blazor] event handler is not attached to the DOM in layout",
    "created_at": "2019-08-28T14:13:32Z",
    "closed_at": "2019-08-28T16:14:47Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/13513",
    "body": "\r\n\r\n### Describe the bug\r\n``` HTML \r\n@inherits LayoutComponentBase\r\n@inject IDispatcher dispatcher\r\n\r\n<main class=\"scroll-box__wrap\">\r\n    <section class=\"section-login-top-block\">\r\n        <div class=\"site-width site-width-global\">\r\n            <div class=\"container-fluid container-fluid-global\">\r\n                <div class=\"top-block\">\r\n                    <div class=\"logo-login\"><a href=\"/\"><img src=\"./assets/static/logo.svg\" alt=\"\"></a></div>\r\n                    <div class=\"close-block\"><button  class=\"btn btn-transparent btn-close\" @click=\"OnClose\"><span class=\"text\">Cancel</span><span class=\"icon-svg\"><img src=\"./assets/static/icons/icon-close.svg\"></span></button></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </section>\r\n    @Body\r\n</main>\r\n@code{\r\n    private void OnClose()\r\n    {\r\n        Console.WriteLine(\"Closing\");\r\n        dispatcher.Dispatch(new Blazor.Fluxor.Routing.Go(Routes.Root));\r\n        Console.WriteLine(\"Close\");\r\n    }\r\n}\r\n```\r\n\r\nAnd decompiled action \r\n``` C#\r\npublic class LayoutWithoutHeader : LayoutComponentBase\r\n{\r\n    [Inject]\r\n    private IDispatcher dispatcher { get; set; }\r\n\r\n    protected override void BuildRenderTree(RenderTreeBuilder builder)\r\n    {\r\n        builder.OpenElement(0, \"main\");\r\n        builder.AddAttribute(1, \"class\", \"scroll-box__wrap\");\r\n        builder.AddMarkupContent(2, \"\\r\\n    \");\r\n        builder.AddMarkupContent(3, \"<section class=\\\"section-login-top-block\\\">\\r\\n        <div class=\\\"site-width site-width-global\\\">\\r\\n            <div class=\\\"container-fluid container-fluid-global\\\">\\r\\n                <div class=\\\"top-block\\\">\\r\\n                    <div class=\\\"logo-login\\\"><a href=\\\"/\\\"><img src=\\\"./assets/static/logo.svg\\\" alt></a></div>\\r\\n                    <div class=\\\"close-block\\\"><button type=\\\"button\\\" class=\\\"btn btn-transparent btn-close\\\" @click=\\\"OnClose\\\"><span class=\\\"text\\\">Cancel</span><span class=\\\"icon-svg\\\"><img src=\\\"./assets/static/icons/icon-close.svg\\\"></span></button></div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </section>\\r\\n    \");\r\n        builder.AddContent(4, this.Body);\r\n        builder.AddMarkupContent(5, \"\\r\\n\");\r\n        builder.CloseElement();\r\n    }\r\n\r\n    private void OnClose()\r\n    {\r\n        Console.WriteLine(\"Closing\");\r\n        this.dispatcher.Dispatch(new Go(\"/\"));\r\n        Console.WriteLine(\"Close\");\r\n    }\r\n\r\n    public LayoutWithoutHeader()\r\n    {\r\n    }\r\n}\r\n```\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n Use code from above\r\n\r\n### Expected behavior\r\nEvent handler is atached and click works\r\n\r\n### Additional context\r\nBlazor version 3.0.0-preview8.19405.7\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/13513/comments",
    "author": "dimatsaran",
    "comments": [
      {
        "user": "rynowak",
        "created_at": "2019-08-28T14:57:53Z",
        "body": "It should be `@onclick` not `@click`"
      }
    ]
  },
  {
    "number": 13469,
    "title": "EventCallback triggers OnAfterRenderAsync twice",
    "created_at": "2019-08-27T09:00:50Z",
    "closed_at": "2019-08-27T16:40:37Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/13469",
    "body": "We use blazor on a SPA, and we found the a wired behavior on EventCallback. Below shows the code:\r\n```\r\n@page \"/counter\"\r\n@inject IJSRuntime jsRuntime\r\n<h1>Counter</h1>\r\n<p>Current count: @currentCount</p>\r\n<button @onclick=\"IncrementCountAsync\">Call Task Async</button>\r\n<button @onclick=\"IncrementCount\">Call Void Async</button>\r\n@code {\r\n    int currentCount = 0;\r\n    async Task IncrementCountAsync(UIEventArgs e)\r\n    {\r\n        currentCount++;\r\n        await jsRuntime.InvokeAsync<object>(\"console.log\", \"test\");\r\n    }\r\n    async void IncrementCount(UIEventArgs e)\r\n    {\r\n        currentCount++;\r\n        await jsRuntime.InvokeAsync<object>(\"console.log\", \"test\");\r\n    }\r\n    protected override Task OnAfterRenderAsync()\r\n    {\r\n        Console.WriteLine(\"Counter\");\r\n        return base.OnAfterRenderAsync();\r\n    }\r\n}\r\n```\r\nThere are 2 buttons on the view: \"Call Task Async\" and \"Call Void Async\". When clicking \"Call Task Async\", it will output 2 \"Counter\" messages from `OnAfterRenderAsync` method, but if I click \"Call Void Async\" button, only one message output. If I comment out the `await jsRuntime.InvokeAsync<object>(\"console.log\", \"test\")` from `IncrementCountAsync` method, for this monment, only one message output like clicking \"Call Void Async\". It seems that the `await jsRuntime.InvokeAsync<object>(\"console.log\", \"test\")` calls StateHasChanges, but not sure.\r\n\r\nHope someone can help me out of that.\r\n\r\nThanks,\r\nPeter \r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/13469/comments",
    "author": "peteryang023",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-08-27T16:40:37Z",
        "body": "Thanks for contacting us, @peteryangthinkgeo.\r\nWe'll provide documentation covering this as part of the referenced issue.\r\nThis is an expected behavior of using async lifecycle methods. If you want to avoid this behavior you'll have to not use async lifecycle methods instead."
      },
      {
        "user": "peteryang023",
        "created_at": "2019-08-28T02:09:40Z",
        "body": "Thanks for the reply. @mkArtakMSFT"
      }
    ]
  },
  {
    "number": 13391,
    "title": "NotFoundContent component fires OnInitialized method even when there is a matching component",
    "created_at": "2019-08-23T20:57:37Z",
    "closed_at": "2019-08-26T16:50:20Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/13391",
    "body": "### Describe the bug\r\nNotFoundContent @code executes on first page loads and reloads.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Create a new Blazor Web Assembly app using ASP.NET Core 3.0 Preview 8\r\n2. Go to the app.razor, and on the NotFoundContent, put the following\r\n\r\n```\r\n<NotFoundContent>\r\n        @code{\r\n            protected override void OnInitialized()\r\n            {\r\n                Console.WriteLine(\"Not found content\");\r\n            }\r\n        }\r\n    </NotFoundContent>\r\n```\r\n3. Run the app, and you'll see that the OnInitialized code runs on every initial and full reload of the app. So, if you go to the counter page, and reload the page, the OnInitialized method of the NotFoundContent component will run.\r\n\r\n### Expected behavior\r\nNo code from the OnInitialized method from the NotFoundContent should run if there is a component that matches the route. \r\n\r\nContext: I was trying to have some logic to automatically redirect the user to the home page when they hit a 404.",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/13391/comments",
    "author": "gavilanch",
    "comments": [
      {
        "user": "pranavkm",
        "created_at": "2019-08-26T16:50:20Z",
        "body": "@gavilanch the code block you've defined is a block for your `app.razor` which explains why it's initialized as part of executing your application. Your `NotFoundContent` must be a block of Razor markup, not code and you'll see that components inside of it are not initialized when a route is found.\r\n"
      }
    ]
  },
  {
    "number": 13368,
    "title": "RouteOptions.LowercaseUrls should not affect routeValues",
    "created_at": "2019-08-23T06:13:53Z",
    "closed_at": "2019-12-06T20:02:00Z",
    "labels": [
      "question",
      "area-mvc"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/13368",
    "body": "### Is your feature request related to a problem? Please describe.\r\n\r\nI am trying to lowercase my routing URLs but dont want to have lowercased routeValues.\r\n\r\n### Describe the solution you'd like\r\n\r\nWhen setting RouteOptions.LowercaseUrls the URLs of controller names and actions should be lowercased but not the routeValues. \r\n\r\nFor example:\r\n`ItemsController.CreatedAtAction(nameof(Get), new {id = \"ytp30ybm3IE\"}, null);`\r\nreturns `/api/items/ytp30ybm3ie`\r\nbut should return `/api/items/ytp30ybm3IE`\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/13368/comments",
    "author": "prochnowc",
    "comments": [
      {
        "user": "pranavkm",
        "created_at": "2019-08-26T17:00:09Z",
        "body": "Thanks for your issue report @prochnowc. My guess is that changing the behavior at this point would be a breaking change and we would not consider it.\r\n\r\n/cc @rynowak \\ @JamesNK in case they have any suggestions? "
      },
      {
        "user": "prochnowc",
        "created_at": "2019-08-27T06:08:24Z",
        "body": "@pranavkm What do you suggest instead? Decorating my controllers with explicit paths? `api/items` instead of `api/[controller]` ?"
      },
      {
        "user": "ghost",
        "created_at": "2019-12-06T20:02:00Z",
        "body": "Thank you for contacting us. Due to no activity on this issue we're closing it in an effort to keep our backlog clean. If you believe there is a concern related to the ASP.NET Core framework, which hasn't been addressed yet, please file a new issue."
      }
    ]
  },
  {
    "number": 13236,
    "title": "Using RobinHerbots inputmask in ClientSideBlazor",
    "created_at": "2019-08-18T14:33:53Z",
    "closed_at": "2019-12-06T20:02:08Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/13236",
    "body": "\r\nI want to use inpunmask in clientside blazor.  Problem is that two way binding not work.\r\nMy code is folllowing:\r\nI include this js libs:\r\n\r\n    <script src=\"script/jquery-3.4.1.min.js\"></script>\r\n    <script src=\"script/jquery.inputmask.min.js\"></script>\r\n    <script src=\"script/inputmask.binding.js\"></script>\r\n    <script src=\"script/InitMask.js\"></script>\r\n\r\nMy js code:\r\nwindow.datetimeinput =\r\n    {\r\n\r\n    initjs: function () {\r\n            \r\n                //$(\"#phone\").inputmask();\r\n            $(\"#phone\").inputmask(\"99-9999999\");\r\n            \r\n    }\r\n    };\r\n\r\nMy blazor code:\r\n<EditForm Model=\"@model\" OnValidSubmit=\"@(()=>submit(model))\">\r\n<input @bind=\"model.phone\" data-inputmask=\"'mask': '99-9999999'\" />\r\n</EditForm>\r\n\r\n@code{\r\npublic Model model = new Model();\r\n\r\n    public class Model\r\n    {\r\n       \r\n        public string phone { get; set; }\r\n    }\r\n\r\n  \r\n\r\n    protected override async Task OnAfterRenderAsync()\r\n    {\r\n        await js.InvokeAsync<object>(\"datetimeinput.initjs\");\r\n\r\n    }\r\n}",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/13236/comments",
    "author": "toto-tech",
    "comments": [
      {
        "user": "hetis",
        "created_at": "2019-08-18T18:15:00Z",
        "body": "Please help"
      },
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-08-19T16:25:16Z",
        "body": "Thanks for contacting us, @toto-tech.\r\nIf that library directly manipulates the DOM, you're going to have problem with integrating it with Blazor, because it'll interfere with Blazor's diffing logic and result in unexpected (for Blazor) outcomes."
      },
      {
        "user": "toto-tech",
        "created_at": "2019-08-19T18:09:40Z",
        "body": "Thanks for your answer. What can be best practise to mask inputs generally"
      },
      {
        "user": "ghost",
        "created_at": "2019-12-06T20:02:07Z",
        "body": "Thank you for contacting us. Due to no activity on this issue we're closing it in an effort to keep our backlog clean. If you believe there is a concern related to the ASP.NET Core framework, which hasn't been addressed yet, please file a new issue."
      }
    ]
  },
  {
    "number": 13206,
    "title": "Is that any way to support razor's taghelper in winform ",
    "created_at": "2019-08-17T06:31:02Z",
    "closed_at": "2019-08-21T09:42:39Z",
    "labels": [
      "question",
      "area-mvc"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/13206",
    "body": "my project is Winform .net 4.7 and I want to use razor + cef/miniblink to build UI,,so I already Implement to build cshtml file on runtime and cef load the file to show the UI,,,I already reference Microsoft.AspNetCore.Razor.Language 2.2 package\r\n\r\nnow I want to support the tagHelper ,,but in Vs2019/17 when I create the winform project and create a cshtml file,the IDE can't use the @model and @addTaghelper and @inject keyword...\r\n\r\nthe @model keyword I use the @inherits keyword instead,\r\nbut @addTagHelper or @inject ,not anyother keyword can instead ..how can I make the IDE support these keyword???Is that anyother package need to reference",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/13206/comments",
    "author": "kugarliyifan",
    "comments": [
      {
        "user": "pranavkm",
        "created_at": "2019-08-20T03:10:09Z",
        "body": "/cc @NTaylorMullen, any suggestions?\r\n "
      },
      {
        "user": "NTaylorMullen",
        "created_at": "2019-08-20T17:22:04Z",
        "body": "Hey @kugarliyifan, latest Razor does not work in winform projects sadly. This is why you don't get proper Razor directives in your Razor file (the project is treating your files as classic ASP.NET Razor). Sadly there isn't a great way to workaround this limitation without writing your own Visual Studio extension."
      },
      {
        "user": "kugarliyifan",
        "created_at": "2019-08-21T09:42:39Z",
        "body": "> Hey @kugarliyifan, latest Razor does not work in winform projects sadly. This is why you don't get proper Razor directives in your Razor file (the project is treating your files as classic ASP.NET Razor). Sadly there isn't a great way to workaround this limitation without writing your own Visual Studio extension.\r\n\r\nthank you ! may be I need to write some extension for vs,,"
      }
    ]
  },
  {
    "number": 13195,
    "title": " JsonSerializerOptions has no setter",
    "created_at": "2019-08-16T18:54:22Z",
    "closed_at": "2019-08-20T03:08:59Z",
    "labels": [
      "question",
      "area-mvc"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/13195",
    "body": "When I want to set new options with `AddJsonOptions` the `JsonSerializerOptions` is read-only.\r\n```C#\r\npublic static void ConfigureServices(this IServiceCollection services)\r\n{\r\n    services.AddControllers().AddJsonOptions(options =>\r\n    {\r\n        options.JsonSerializerOptions = new JsonSerializerOptions(); // compile error\r\n    });\r\n}\r\n```\r\nSo here I think `AddJsonOptions` is useless and I have to use `Configure` method:\r\n```C#\r\nservices.Configure<JsonSerializerOptions>(options =>\r\n{\r\n    options.IgnoreNullValues = true;\r\n\r\n});\r\n```\r\n\r\n```\r\nASP.NET Core Version: 3.0 Preview 8 \r\n\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview8-013656\r\n Commit:    8bf06ffc8d\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview8-013656\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview8-28405-07\r\n  Commit:  d01b2fb7bc\r\n\r\n.NET Core SDKs installed:\r\n  2.1.800-preview-009696 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.800 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.300 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview6-012264 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview8-013656 [C:\\Program Files\\dotnet\\sdk]\r\n```\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/13195/comments",
    "author": "xsoheilalizadeh",
    "comments": [
      {
        "user": "pranavkm",
        "created_at": "2019-08-16T22:39:01Z",
        "body": "@xsoheilalizadeh you should be able to assign properties to the `JsonSerializerOptions` instance that's passed in to the callback:\r\n\r\n```C#\r\n services.AddControllers().AddJsonOptions(options =>\r\n{\r\n    options.JsonSerializerOptions.IgnoreNullValues = true;\r\n});\r\n```"
      },
      {
        "user": "xsoheilalizadeh",
        "created_at": "2019-08-17T05:19:33Z",
        "body": "It works now thanks. I think it could be like below code by replacing JsonSerializerOptions with JsonOptions, it's shorter and easier to understand.\r\n```c#\r\nservices.AddControllers().AddJsonOptions(options =>\r\n{\r\n    options.IgnoreNullValues = true;\r\n});\r\n```"
      },
      {
        "user": "pranavkm",
        "created_at": "2019-08-20T03:08:59Z",
        "body": "Thanks for the suggestion, but we currently do not have any plans on changing how the options work. Closing this since the original question has been resolved."
      }
    ]
  },
  {
    "number": 13172,
    "title": "Blazor Preview8",
    "created_at": "2019-08-15T17:00:51Z",
    "closed_at": "2019-08-16T16:23:06Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/13172",
    "body": "Old way of mapping (prior to Preview8):    **endpoints.MapBlazorHub();**\r\nNew way on generated sample Server Side App (since Preview8):     **endpoints.MapBlazorHub<App>(selector: \"app\");**\r\n    \r\n\r\nNew way creates the index page via MainLayout.razor twice.\r\nYou can confirm by placing breakpoint  on OnInitialized() in MainLayout file.\r\n\r\nThe app appears to work normally, but all code on the default page is executed twice. This includes DI objects used by the default page (such as DBContexts)\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/13172/comments",
    "author": "MarkTMcp",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-08-16T16:23:06Z",
        "body": "Thanks for contacting us, @MarkTMcp.\r\nThe behavior you're observing is by-design. You can disable pre-rendering and the `OnInitialized` will be called once only."
      }
    ]
  },
  {
    "number": 13167,
    "title": "Blazor app on custom route",
    "created_at": "2019-08-15T14:23:25Z",
    "closed_at": "2019-08-15T16:43:33Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/13167",
    "body": "I am not sure whether this is a bug or my lack of understanding.\r\n\r\nWhat I want to find out is whether it is possible to host a server-side blazor app on a custom route as I want to mix a Blazor app with a normal Razor pages app. So I want Razor pages with their normal routes, and then I want my Blazor app, for example, on the route `/spa`.\r\n\r\nI tried setting the route for the `_Hosts.cshtml` page to `/spa` but that does not affect anything.\r\n\r\nIs there any sample anywhere that shows how to achieve this sort of behaviour?",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/13167/comments",
    "author": "jerriep",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-08-15T16:43:29Z",
        "body": "Thanks for contacting us, @jerriep.\r\nYou can achieve what you want by passing the path (`/spa/{**path:nonfile}`) to the `MapFallbackToPage` call."
      },
      {
        "user": "jerriep",
        "created_at": "2019-08-16T01:12:23Z",
        "body": "Thank you @mkArtakMSFT, that works.\r\n\r\nThe only problem with that is that it requires the Blazor page components to also have a URL that includes `/spa/*`. For example, in the default Blazor template, I need to change the URL of the counter page from `/counter` to `/spa/counter`\r\n\r\nIs there any way yo specify the URL of the Blazor pages to be relative to the root `/spa` path?"
      }
    ]
  },
  {
    "number": 13158,
    "title": "Child Component State is not changed",
    "created_at": "2019-08-15T07:59:43Z",
    "closed_at": "2019-08-15T16:53:29Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/13158",
    "body": "In Blazor server side, I have a child component on a page that has a LoadComponent method inside it, It loads the component data and I call it from the parent component. Before calling LoadComponent I set the ID property of the child component since the LoadComponent uses this ID to load data. The following is the first lines of the Child component:\r\n\r\n```\r\n`[Parameter]\r\n public int DepartmentID { get; set; }\r\n\r\npublic void LoadComponent()\r\n    {        \r\n        GetDepartment(); // uses DepartmentID\r\n        GetAdditionalMeta(); // uses DepartmentID\r\n        GetImage(); // uses DepartmentID\r\n    }\r\n`\r\n```\r\nI call this method from parent component like this:\r\n\r\n```\r\n`public BlazorStore.Pages.Admin.TreePageComponents.AddEditDepartment addEditDepartmentComponent;\r\npublic void NodeChanged(TreeItem item)\r\n    {\r\n        if (item.DepartmentID == 0 && item.CategoryID == 0)\r\n        {\r\n            DepartmentAddMode = true; \r\n            DepartmentEditMode = false; \r\n            DepartmentIDForAddEditComponent = 0; // set DepartmentID of the child component\r\n            StateHasChanged();\r\n            addEditDepartmentComponent.LoadComponent(); // 0\r\n        }\r\n        else if (item.DepartmentID > 0 && item.CategoryID == 0)\r\n        {\r\n            DepartmentEditMode = true;\r\n            DepartmentAddMode = false;\r\n            DepartmentIDForAddEditComponent = item.DepartmentID; // set DepartmentID of the child component\r\n            StateHasChanged();\r\n            addEditDepartmentComponent.LoadComponent();\r\n        }\r\n    }\r\n\r\n`\r\n\r\n```\r\n\r\nwhile the child component's DepartmentID is set, But it reflects after two or more interactions with the component so it is not take effect immediately. \r\nThe component markup in parent is:\r\n\r\n```\r\n`@if  (DepartmentAddMode == true || DepartmentEditMode == true)\r\n        {\r\n            <BlazorStore.Pages.Admin.TreePageComponents.AddEditDepartment @ref=\"@addEditDepartmentComponent\"  DepartmentID=\"@DepartmentIDForAddEditComponent\"\r\n                          DepartmentChanged=\"@(() => { GetTree(); ExpandNodes(); StateHasChanged(); })\">\r\n\r\n            </BlazorStore.Pages.Admin.TreePageComponents.AddEditDepartment>\r\n        }`\r\n```\r\nThe other problem is that I set two boolean variables that are responsible for visibility of the child component before calling the LoadComponent, But when I set them to true and call LoadComponent the addEditDepartmentComponent is still null so I get NullReference exception.\r\n\r\n```\r\nDepartmentEditMode = true; // still component is null\r\nDepartmentAddMode = false;\r\nDepartmentIDForAddEditComponent = item.DepartmentID; \r\nStateHasChanged();\r\naddEditDepartmentComponent.LoadComponent(); // component is null so LoadComponent fails\r\n```\r\n\r\nso I have to comment out the if that shows or hides the component like this:\r\n\r\n```\r\n`@*@if  (DepartmentAddMode == true || DepartmentEditMode == true)\r\n        {*@\r\n            <BlazorStore.Pages.Admin.TreePageComponents.AddEditDepartment @ref=\"@addEditDepartmentComponent\"\r\n                          DepartmentChanged=\"@(() => { GetTree(); ExpandNodes(); StateHasChanged(); })\" DepartmentID=\"@DepartmentIDForAddEditComponent\">\r\n\r\n            </BlazorStore.Pages.Admin.TreePageComponents.AddEditDepartment>\r\n        @*}*@`\r\n```\r\n\r\nSo is it a problem with blazor or there is a way to correct it?",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/13158/comments",
    "author": "ghost",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-08-15T16:53:28Z",
        "body": "Thanks for contacting us, @mg1357.\r\nThe backing fields mapped through the `@ref` are initialized after the component is rendered. You can use the `OnAfterRender` lifecycle event for your custom logic."
      },
      {
        "user": "ghost",
        "created_at": "2019-08-15T18:07:47Z",
        "body": "Exactly what do I do? My custom logic is inside the SelectedNodeChanged of a tree control and inside the parent component. Of course it is not possible to move it to OnAfterRender, If it is possible please inform me how to do this. "
      },
      {
        "user": "ghost",
        "created_at": "2019-08-16T13:25:33Z",
        "body": "I think the better way to solve this problem is, Child component's OnParametersSet that I use now,  But the other way is LoadComponent inside OnAfterRender. But I noticed that when using this method the OnAfterRender is called many times that is also solved with a boolean field that is set to false when LoadComponent is called."
      }
    ]
  },
  {
    "number": 13151,
    "title": "AddAttribute onclick no longer accepts lambda expressions",
    "created_at": "2019-08-15T00:31:27Z",
    "closed_at": "2019-08-15T02:39:03Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/13151",
    "body": "I've been working on a project without updating for a while, but it seems like no one else can contribute with my current setup so I decided to try setting it up with the latest version of Blazor. It's almost working, but I make extensive use of \r\n\r\n`builder.AddAttribute()`\r\n\r\nespecially with buttons. It seems that now the AddAttribute function no longer accepts actions, and when I try to do something like \r\n\r\n`builder.AddAttribute(2, \"onclick\", () => ToggleNavMenu());`\r\n\r\nI get a an error:\r\n\r\n>Error\tCS1660\tCannot convert lambda expression to type bool because it is not a delegate type\t\r\n\r\nIt seems like there is a different way to do it now, but in my searching I couldn't find any examples. \r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/13151/comments",
    "author": "billybillyjim",
    "comments": [
      {
        "user": "rynowak",
        "created_at": "2019-08-15T01:21:50Z",
        "body": "This is intentional. \r\n\r\nCan you give us a little more information about what you're trying to do?"
      },
      {
        "user": "billybillyjim",
        "created_at": "2019-08-15T01:58:30Z",
        "body": "This was just the method I used for implementing all the buttons in my app. So for example button I am currently using in preview5 looks like this:\r\n\r\n```\r\n            builder.OpenElement(7, \"button\");\r\n            builder.AddAttribute(8, \"class\", \"btn btn-primary\");\r\n            builder.AddAttribute(9, \"style\", \"margin:2px;height:2rem;line-height: initial;\");\r\n            builder.AddAttribute(10, \"onclick\", () => Deposit(item, 1));\r\n            builder.AddContent(11, \"1\");\r\n            builder.CloseElement();\r\n```\r\n\r\nI am looking for some way to still be able to call `Depost(item.Key, 1)`  on a button click with a RenderTreeBuilder. "
      },
      {
        "user": "rynowak",
        "created_at": "2019-08-15T02:01:45Z",
        "body": "Sure, so you can still do that, it just requires a little more code.\r\n\r\n```\r\nbuilder.AddAttribute(10, \"onclick\", new Action(() => Deposit(item, 1)));\r\n```\r\n\r\nWe took away some overloads of these methods because we don't think they are getting much usage. No functionality was removed."
      },
      {
        "user": "billybillyjim",
        "created_at": "2019-08-15T02:39:03Z",
        "body": "Ah, that's exactly what I was looking for. Thank you!"
      }
    ]
  },
  {
    "number": 13118,
    "title": "[Blazor] Can not stop Blazor to re-render on events",
    "created_at": "2019-08-14T09:32:59Z",
    "closed_at": "2019-08-14T16:21:35Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/13118",
    "body": "In Blazor an event (such as onclick) triggers blazor to re-render the page. but i can not stop this.\r\nfpr eg if i want to capture the value of the input bpx on \"onkeypress\" event but do not want the state to re-render on every key but only on \"Enter\" key. the StateHasChanged will always be triggerd even if i haven't  reassigned a field. how to stop events from state re-render but rather have option to manually re-render.",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/13118/comments",
    "author": "syedqutub",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-08-14T16:21:28Z",
        "body": "Thanks for contacting us, @syedqutub.\r\nYou can override the `ShouldRender()` method and decide whether you'd like to re-render or not."
      }
    ]
  },
  {
    "number": 12906,
    "title": "Razor components static assets is casesentive when served by docker (linux)",
    "created_at": "2019-08-06T05:58:31Z",
    "closed_at": "2019-08-06T16:35:52Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/12906",
    "body": "I am building a Razor Component library with name OfficeAutomation.Components and i reference its static assets in my main project via link **__content/officeautomation.components/components.js**.\r\nIt works when I debug projects on local IIS Express. But it failed when I published projects to docker with nginx reverse proxy. \r\nOnly when I changed link to **__content/OfficeAutomation.Components/components.js** (casesensitive), then link works again.",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/12906/comments",
    "author": "kennywangjin",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-08-06T16:35:52Z",
        "body": "Thanks for contacting us, @kennywangjin.\r\nThe behavior you're observing is by-design. This depends on the behavior of the underlying file system. "
      }
    ]
  },
  {
    "number": 12838,
    "title": "Blazor simulate back button",
    "created_at": "2019-08-02T15:51:58Z",
    "closed_at": "2019-08-02T16:11:56Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/12838",
    "body": "I am trying to build a \"confirm action\" page and would to have a cancel button that _goes back_ in the navigation stack rather than pushing a new redirect to the previous page. This is because if someone was to then go back in the browser it will redirect them back to the confirm.\r\n\r\nI don't understand how, if possible, to use IUriHelper to perform this action.\r\n\r\nI would like some way of using the IUriHelper to \"navigate back\" rather than forwards to a new page, this is how to have correct back button semantics with native back buttons. Thanks.\r\n\r\n_(I am using blazor server side)_",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/12838/comments",
    "author": "Yen",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-08-02T16:11:55Z",
        "body": "Thanks for contacting us, @Yen .\r\nYou can use JSInterop to directly call the `window.back()` method."
      },
      {
        "user": "Yen",
        "created_at": "2019-08-02T16:33:12Z",
        "body": "Thanks for responding. I understand I can manually call the browser history API to perform this action, but this is not really correct due to this being a work around for an implementation detail. (IUriHelper is the interface for which the implementation could or could not use the browser history API.)\r\n\r\nIs there no intent to support popping the navigation stack in blazor?"
      },
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-08-02T22:10:05Z",
        "body": "We don't have any immediate plans for that:\r\n> Is there no intent to support popping the navigation stack in blazor?"
      }
    ]
  },
  {
    "number": 12824,
    "title": "Is there any way to prevent changing [Parameter] values inside component itself",
    "created_at": "2019-08-02T04:49:46Z",
    "closed_at": "2019-08-02T16:20:22Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/12824",
    "body": "Currently, [Parameter] property must be public and read-writable for passing values into component from parent component.\r\n\r\nWhile it's really dangerous to change these [parameter] values inside component itself because these are external-determined and could cause many unexpected behaviors hard to debug.\r\n\r\nIs it possible to provide some analysis service that could check that these [parameter] values are readonly inside component and settable outside component.",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/12824/comments",
    "author": "kennywangjin",
    "comments": [
      {
        "user": "SeppPenner",
        "created_at": "2019-08-02T07:37:56Z",
        "body": "> Currently, [Parameter] property must be public and read-writable for passing values into component from parent component.\r\n\r\nReally? I'm using parameters as `private` properties successfully, e.g.:\r\n\r\n```razor\r\n@page \"/sample/{someId}/\"\r\n\r\n@code {\r\n[Parameter]\r\n    private string someId { get; set; }\r\n}\r\n```"
      },
      {
        "user": "kennywangjin",
        "created_at": "2019-08-02T08:27:33Z",
        "body": "> > Currently, [Parameter] property must be public and read-writable for passing values into component from parent component.\r\n> \r\n> Really? I'm using parameters as `private` properties successfully, e.g.:\r\n> \r\n> ```\r\n> @page \"/sample/{someId}/\"\r\n> \r\n> @code {\r\n> [Parameter]\r\n>     private string someId { get; set; }\r\n> }\r\n> ```\r\n\r\nI haven't tested with private modifier. but even private modifier could not prevent changes from component inside. "
      },
      {
        "user": "SeppPenner",
        "created_at": "2019-08-02T08:35:30Z",
        "body": "> I haven't tested with private modifier. but even private modifier could not prevent changes from component inside.\r\n\r\nThat's true 😄 "
      },
      {
        "user": "Joe4evr",
        "created_at": "2019-08-02T09:02:23Z",
        "body": "@SeppPenner: That is going to change, though: #12294\r\n\r\n@kennywangjin Best thing to do for enforcing something like this is to write a Roslyn analyzer that flags \"private\" sets as an error."
      },
      {
        "user": "SeppPenner",
        "created_at": "2019-08-02T09:37:52Z",
        "body": "> @SeppPenner: That is going to change, though: #12294 \r\n\r\nGood to know 👍 "
      },
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-08-02T16:20:22Z",
        "body": "Thanks for contacting us.\r\nThere is nothing preventing one from modifying the parameter values."
      }
    ]
  },
  {
    "number": 12796,
    "title": "Allow (Api)Controllers to be marked internal",
    "created_at": "2019-08-01T08:10:41Z",
    "closed_at": "2019-08-01T16:47:55Z",
    "labels": [
      "question",
      ":heavy_check_mark: Resolution: By Design",
      "area-mvc"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/12796",
    "body": "Very often we need to expose a lot more types than needed.\r\n\r\nF.e. when a controller requires a service or repository injected through the constructor, the service/repository or at least their interface needs to be marked as `public`. The interface itself being public is not such a big problem, but the need to make things `public` cascades down through every type used in the interface (models, entities, etc.), which you don't want to make public. Even when an API controller returns a mapped viewmodel, you still have to inject a public interface and expose your internal models. Especially, in modular applications or public/shared libraries, this is a nightmare.\r\n\r\nTherefore, it would be a good idea if controllers could be made `internal` and just work. Currently, there's no reason why anyone would make a controller internal (except if they do it by accident or because it feels logical), so removing this restriction should not be a breaking change.\r\n\r\nI have a prototype working by overriding `ControllerFeatureProvider` by a class where the `IsController` also considers non-public types. While it is working, this causes additional maintenance that one doesn't want in an application.",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/12796/comments",
    "author": "huysentruitw",
    "comments": [
      {
        "user": "Eilon",
        "created_at": "2019-08-01T15:55:06Z",
        "body": "I think that the current extensibility points, which work for exactly this scenario, are exactly what people should use if they have this requirement. I haven't seen this come up frequently, so I think that MVC has struck the right balance between default behaviors vs. extensibility."
      },
      {
        "user": "huysentruitw",
        "created_at": "2019-08-01T16:20:07Z",
        "body": "The problem is that, if we ship modules with internal controllers, we need to tell the consumer to use a custom `ControllerFeatureProvider`, otherwise the endpoints won't work. If, on the other hand, everything is public, the consumer can start using services that are not intended to be used. Which means, if we change the interface of the service, we can potentially break the unwanted API contract."
      },
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-08-01T16:47:55Z",
        "body": "Thanks for contacting us, @huysentruitw.\r\nThe well-established pattern for working with DI is to explose an extension method in your library, which will be the only thing called by consumers, and that'll take care of registering all the necessary services in the DI container. This will also register the `ControllerFeatureProvider`.\r\nGiven this, there is not really anything we will change."
      },
      {
        "user": "huysentruitw",
        "created_at": "2019-08-01T18:07:11Z",
        "body": "Fair enough. Injecting `IServiceProvider` in the constructor of the controller might be a better option then."
      }
    ]
  },
  {
    "number": 12719,
    "title": "Html select reset [value] if options are async loaded",
    "created_at": "2019-07-30T05:12:44Z",
    "closed_at": "2019-07-30T16:43:20Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/12719",
    "body": "select element will always set its value to the first available option if options are loaded async.\r\n\r\n`<select class=\"custom-select\" value=\"@Value\" @onchange=\"OnChange\" @attributes=\"Attributes\">\r\n            @foreach (var item in _items)\r\n            {\r\n                <option @key=\"item.Id\" value=\"@item.Id\">@($\"{item.Department} ({item.Responsible})\")</option>\r\n            }\r\n    }\r\n</select>\r\n@code \r\n{\r\n    [Parameter] int Value { get; set; }\r\n    [Parameter] EventCallback<int> ValueChanged { get; set; }\r\n    [Parameter(CaptureUnmatchedValues = true)] Dictionary<string, object> Attributes { get; set; } = new Dictionary<string, object>();\r\n   IEnumerable<CostCenterDTO> _items = Enumerable.Empty<CostCenterDTO>();\r\n\r\n    protected override async Task OnInitAsync()\r\n    {\r\n        string requestUri = \"/api/costcenters\";\r\n        _items = await Http.GetJsonAsync<IEnumerable<CostCenterDTO>>(requestUri);\r\n    }\r\n\r\n    Task OnChange(UIChangeEventArgs e)\r\n    {\r\n        if (int.TryParse((string)e.Value, out int result) && result > 0)\r\n        {\r\n            return ValueChanged.InvokeAsync(result);\r\n        }\r\n        else\r\n        {\r\n            return Task.CompletedTask;\r\n        }\r\n    }\r\n}\r\n`\r\n\r\nselect will always set its value back to the first option event the [Value] property is set to another one. ",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/12719/comments",
    "author": "kennywangjin",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-07-30T16:43:20Z",
        "body": "Thanks for contacting us, @kennywangjin.\r\nThis is actually by-design as the loading happens asynchronousely. You can simply wrap the whole `select` block in an if to execute only after the data is loaded."
      }
    ]
  },
  {
    "number": 12686,
    "title": "Blazor component with <Form> submit parent page Oninit is called.",
    "created_at": "2019-07-29T12:28:47Z",
    "closed_at": "2019-07-29T16:59:32Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/12686",
    "body": "Not sure if this is a bug or a feature of Blazor, but here it goes. \r\n\r\nIf I have a page with consumes a component which has a html Form Tag and a submit button. The parent pages OnInit is called. Which means that all components on that page potentially gets its original state (same as on page load). \r\n\r\nMy Workaround was to have the button as type button and not submit.\r\n\r\nMy question is should an underlying component with a form trigger a parent page oninit event ? \r\n\r\nI would expect that the component itself would handle the form submit and if needed use StateHasChanged. \r\n\r\nAny thoughts?",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/12686/comments",
    "author": "KennethDotNet",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-07-29T16:24:37Z",
        "body": "Thanks for contacting us, @KennethInfoEasy.\r\nThis is indeed expected. It's not clear what you're actually trying to do here. Feel free to provide more details, and we may be able to show you a better path."
      },
      {
        "user": "KennethDotNet",
        "created_at": "2019-07-29T16:57:43Z",
        "body": "No need to investigate further as this is expected behavior. Thank you for getting back to me so quick @mkArtakMSFT. \r\n"
      }
    ]
  },
  {
    "number": 12665,
    "title": "[Question] How to access a service before building the WebHost?",
    "created_at": "2019-07-28T08:50:40Z",
    "closed_at": "2019-12-06T20:02:27Z",
    "labels": [
      "question",
      "feature-platform",
      "area-networking"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/12665",
    "body": "First on all, this is how I am thinking about the solution. I might be completely wrong; if so, please point me to the right direction.\r\n\r\nI am building an ASP.NET Core 2.2 application that requires a license to enable certain feature; e.g., logging to Elasticsearch or Splunk, connecting to SQL Server or Postgres, or limiting the number of users. This means that the \"Licensing\" service should be initialised and ready to be used (resolvable through the container) before registering more logging providers or deciding which database provider to register; moreover, it should be available (through the container) for the rest of the application to use.\r\n\r\nThe license is a digitally signed text file; i.e., requires some processing to extract the license properties; hence, I do not want to do the work in the constructor. This is what makes it not-straightforward to implement.\r\n\r\nHere is an example that demonstrate how I though about it:\r\n\r\nLet's assume that we have the following `Program.cs`:\r\n\r\n```csharp\r\npublic static class Program\r\n{\r\n    public static async Task Main(string[] args)\r\n    {\r\n        await CreateWebHostBuilder(args).Build().RunAsync();\r\n    }\r\n\r\n    public static IWebHostBuilder CreateWebHostBuilder(string[] args)\r\n    {\r\n        return WebHost\r\n            .CreateDefaultBuilder(args)\r\n            .ConfigureKestrel(options => { options.AllowSynchronousIO = false; })\r\n            .ConfigureLicensing()\r\n            .ConfigureLogging(ConfigureApplicationLogging)\r\n            .UseStartup<Startup>();\r\n    }\r\n\r\n    private static IWebHostBuilder ConfigureLicensing(this IWebHostBuilder hostBuilder)\r\n    {\r\n        return hostBuilder.ConfigureServices(delegate (WebHostBuilderContext context, IServiceCollection services)\r\n        {\r\n            var licensingConfiguration = context.Configuration.GetSection(\"Licensing\");\r\n            services.Configure<LicensingSettings>(licensingConfiguration);\r\n            services.AddSingleton<ILicensingService, LicensingService>();\r\n\r\n            // var licensingService = SomehowGet<ILicensingService>();\r\n            // licensingService.Initialize();\r\n        });\r\n    }\r\n\r\n    private static void ConfigureApplicationLogging(WebHostBuilderContext context, ILoggingBuilder loggingBuilder)\r\n    {\r\n        var loggingConfiguration = context.Configuration.GetSection(\"Logging\");\r\n\r\n        loggingBuilder.AddConfiguration(loggingConfiguration);\r\n\r\n        // var licensingService = SomehowGet<ILicensingService>();\r\n        // if (licensingService.EnableAdvancedLogging)\r\n        //     loggingBuilder.AddElasticsearch(loggingConfiguration);\r\n    }\r\n}\r\n```\r\n\r\nAnd the following `LicensingService.cs`:\r\n\r\n```csharp\r\npublic sealed class LicensingService : ILicensingService\r\n{\r\n    private readonly ILogger<LicensingService> logger;\r\n    private readonly IOptions<LicensingSettings> settings;\r\n\r\n    public LicensingService(ILogger<LicensingService> logger, IOptions<LicensingSettings> settings)\r\n    {\r\n        this.logger = logger;\r\n        this.settings = settings;\r\n    }\r\n\r\n    public bool EnableAdvancedLogging { get; private set; }\r\n    \r\n    public void Initialize()\r\n    {\r\n        // read and process the license file and set EnableAdvancedLogging to some value\r\n        // if something went wrong; e.g., license file is not available, use logger to log the error\r\n    }\r\n}\r\n\r\n```\r\n\r\nAs demonstrated in the example files, `loggingBuilder.AddElasticsearch(loggingConfiguration)` depends on `ILicensingService.EnableAdvancedLogging` that is set when `ILicensingService.Initialize()` is called.\r\n\r\nThe main issue is I cannot leave `LicensingService` initialisation to the container, because calling `ILicensingService.Initialize()` is required to make the service ready.\r\n\r\nThe other issue is, I still need and `ILogger<>` in `LicensingService`, but I will use `LicensingService` to add more logging options later.",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/12665/comments",
    "author": "TheBlueSky",
    "comments": [
      {
        "user": "davidfowl",
        "created_at": "2019-07-28T15:38:22Z",
        "body": "If you need serviced to configure your services then you need 2 dependency injection containers, there's no magic that will allow you to do what you want. "
      },
      {
        "user": "TheBlueSky",
        "created_at": "2019-07-28T18:48:33Z",
        "body": "Thanks a lot, @davidfowl.  Could you kindly point me to the documentation/sample that helps me do this?"
      },
      {
        "user": "TheBlueSky",
        "created_at": "2019-08-03T18:17:03Z",
        "body": "Anyone else who can point me to the documentation/sample about how to configure and use 2 dependency injection containers?"
      },
      {
        "user": "ghost",
        "created_at": "2019-12-06T20:02:27Z",
        "body": "Thank you for contacting us. Due to no activity on this issue we're closing it in an effort to keep our backlog clean. If you believe there is a concern related to the ASP.NET Core framework, which hasn't been addressed yet, please file a new issue."
      }
    ]
  },
  {
    "number": 12619,
    "title": "InputNumber doesn't work with javascript interop (focus, select, etc.)",
    "created_at": "2019-07-26T17:39:17Z",
    "closed_at": "2020-01-31T20:00:21Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/12619",
    "body": "I have a EditForm and i'm trying to set focus on some InputNumber field, unfortunately, it doesn't work, no error is showed neither focus occur...\r\nIf I change the code bellow to a simple `<input @ref=\"myInput\" />` it works.\r\n\r\n```\r\n<EditForm>\r\n        <InputNumber @ref=\"myInput\" />\r\n</EditForm>\r\n\r\n@code\r\n{\r\n        protected InputNumber<int> myInput;\r\n\r\n        [Inject]\r\n        protected MyBrowserInteropInjection MyBrowserInteropInjection{ get; set; }\r\n\r\n        protected async override Task OnInitAsync()\r\n        {\r\n              MyBrowserInteropInjection.Focus(myInput);\r\n        }\r\n}\r\n```",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/12619/comments",
    "author": "alexandrereyes",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-07-29T17:01:00Z",
        "body": "Thanks for contacting us, @alexandrereyes.\r\nJS Interop should happen `OnAfterRender` phase."
      },
      {
        "user": "alexandrereyes",
        "created_at": "2019-07-29T17:04:20Z",
        "body": "Since I disabled server side rendering, OnInit with JsInterop works very good! \r\nBut.....even on OnAfterRender event, the above code doesn't work."
      },
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-07-29T22:18:28Z",
        "body": "Thank you for filing this issue. In order for us to investigate this issue, please provide a minimalistic repro project that illustrates the problem."
      },
      {
        "user": "ghost",
        "created_at": "2019-12-02T18:02:29Z",
        "body": "<Deleted by @anurse. We shouldn't be using this flow for issues in Discussions. I'll update the bot.>"
      },
      {
        "user": "ghost",
        "created_at": "2020-01-31T20:00:20Z",
        "body": "Thank you for contacting us. Due to no activity on this issue we're closing it in an effort to keep our backlog clean. If you believe there is a concern related to the ASP.NET Core framework, which hasn't been addressed yet, please file a new issue."
      }
    ]
  },
  {
    "number": 12611,
    "title": "Blazor: A SSB BlazorComponent without a surranding tag causes an error",
    "created_at": "2019-07-26T14:51:52Z",
    "closed_at": "2019-07-26T16:25:18Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/12611",
    "body": "Using preview7, Creating a SSB tag like this:\r\n\r\n```\r\nhtml {\r\n    color: red;\r\n}\r\n```\r\n**NOTE**: No surrounding tag.\r\n\r\nAnd using it like so in `_Host.cshtml`:\r\n```\r\n<style>@(await Html.RenderComponentAsync<TempStyle>())</style>\r\n```\r\n\r\nThen in the console I see the exception:\r\n\r\n```\r\nblazor.server.js:15 [2019-07-26T14:43:18.806Z] Error: There was an error applying batch 2.\r\ne.log @ blazor.server.js:15\r\nblazor.server.js:15 [2019-07-26T14:43:18.930Z] Error: System.AggregateException: One or more errors occurred. (Error: No element is currently associated with component 0)\r\n ---> Microsoft.AspNetCore.Components.Browser.Rendering.RemoteRendererException: Error: No element is currently associated with component 0\r\n   at Microsoft.AspNetCore.Components.Rendering.Renderer.InvokeRenderCompletedCallsAfterUpdateDisplayTask(Task updateDisplayTask, Int32[] updatedComponents)\r\n   --- End of inner exception stack trace ---\r\n```\r\n\r\nAnd in the DOM:\r\n\r\n```\r\n<style><!-- M.A.C.Component:{\"circuitId\":\"CfDJ8J9-PZZd8S9FlzTyQJlGcyCiHmcuninZxWSgnPld91ydhB_D_Sc6sVXfcscoDcuYJVkaipe2vLdEVtr-2zIyzlUfVWkayedHS06-PiNId0sejALo3hyTSzR_fU35S57whK4EUE1lvcAWQUlqcLvFjwD7awJnHvje8v6j75AoME3L\",\"rendererId\":\"0\",\"componentId\":\"0\"} -->html {\r\n    color: red;\r\n}<!-- M.A.C.Component: 0 --></style>\r\n```\r\n\r\nPS: The reason I need to place the tag in the `style` instead of placing the `style in the tag, is that so I can use the tag both in SSB and CSB (for now I will create two tags to fix this problem). I am going to open a feature request regarding the CSB issue and update this one with that link",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/12611/comments",
    "author": "chanan",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-07-26T16:25:18Z",
        "body": "Thanks for contacting us, @chanan.\r\nThis is not a scenario we've been trying to support. You may be able to achieve what you want by replacing the `RenderComponentAsync` with `RenderStaticComponentAsync` method."
      },
      {
        "user": "chanan",
        "created_at": "2019-07-26T16:39:59Z",
        "body": "Doing that disables the websocket it looks like.\r\n\r\nAre you saying that Blazor won't support two \"blazor\" apps on the same page? (Like you can with React for example)? (PS it does work in CSB just not SSB)"
      }
    ]
  },
  {
    "number": 12563,
    "title": "How to map a complex return type in .net Core client",
    "created_at": "2019-07-25T08:55:05Z",
    "closed_at": "2019-07-29T17:03:06Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/12563",
    "body": "I'm using the .net Core client inside my C# app. My service method returns an IEnumerable of a class, which contains three different properties. In JavaScript, this works fine. In C#, however, I have no idea, how I should format my invoke call. Right now, I tried it with an IEnumerable of a Tupel, which doesn't work:\r\n\r\n```C#\r\nvar ret = await connection.InvokeAsync<IEnumerable<(Guid guid, DateTime timestamp, string sender, string message)>>(\"GetLastNMessages\", count);\r\n```\r\n\r\nIn this case, ret is a list of two, objects, but all four properties are nulled. How would I correctly write this down, so that the client would map everything correctly?",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/12563/comments",
    "author": "AnReZa",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-07-25T16:45:33Z",
        "body": "Thank you for filing this issue. In order for us to investigate this issue, please provide a minimalistic repro project that illustrates the problem."
      },
      {
        "user": "AnReZa",
        "created_at": "2019-07-29T06:39:14Z",
        "body": "Here's the server method:\r\n\r\n```C#\r\npublic IEnumerable<MessageItem> GetLastNMessages(int count) {\r\n    return msgStore.GetLastN(count);\r\n}\r\n\r\npublic IEnumerable<MessageItem> GetLastN(int count) {\r\n    return msgStore.TakeLast(count);\r\n}\r\n\r\npublic class MessageItem {\r\n    public Guid Guid { get; set; }\r\n    public DateTime Timestamp { get; set; }\r\n    public string Sender { get; set; }\r\n    public string Message { get; set; }\r\n}\r\n```\r\n\r\nAt the moment, I worked around the problem by adding a project link to the MessageItem class file from my server project into the client project. But what would be the best practice, if the client is developed by a thirs party? Do I always need to provide a proper class description, or is there an easier way?"
      },
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-07-29T17:03:06Z",
        "body": "Glad you've found a solution for your problem.\r\nAs for your question, no, there is no easier way."
      },
      {
        "user": "AnReZa",
        "created_at": "2019-07-30T06:32:10Z",
        "body": "Thank you!"
      }
    ]
  },
  {
    "number": 12554,
    "title": "Blazor Initialize culture function",
    "created_at": "2019-07-25T00:50:26Z",
    "closed_at": "2019-07-26T16:49:26Z",
    "labels": [
      "question",
      "Docs",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/12554",
    "body": "which method replaces Initializeculture, is that I need to apply translations and I see that the OnInit is not working (recommendations are accepted in any case),\r\n\r\nblazor server side",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/12554/comments",
    "author": "MarvynHarry",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-07-26T16:49:26Z",
        "body": "Thanks for contacting us, @MarvynHarry.\r\nWe'll be writing documentation covering this for the upcoming Preview8 release."
      }
    ]
  },
  {
    "number": 12507,
    "title": "Customized health check options",
    "created_at": "2019-07-24T13:39:45Z",
    "closed_at": "2019-12-06T20:02:34Z",
    "labels": [
      "question",
      "area-healthchecks"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/12507",
    "body": "Hello,\r\n\r\nI have a registered customized health check and a singleton registered service associated::\r\n```\r\n**startup.cs**\r\n  services.AddSingleton<ICustomApiHealthCheckSingleton, CustomHealthChecker>();\r\n\r\nConfigure(....) {\r\nservices.AddHealthChecks()\r\n               .AddCheck<CustomApiHealthCheckValue>(\"CustomApiHealthCheckValue\");\r\n}\r\n```\r\n```\r\n**CustomApiHealthCheckValue.cs**\r\n public class CustomRegisteredToHealthCheckApiHealthCheckValue : IHealthCheck\r\n    {\r\n        private readonly ICustomApiHealthCheckSingleton _healthChecker;\r\n        public CustomApiHealthCheckValue(ICustomApiHealthCheckSingleton checker)\r\n        {\r\n            Startup.IsHcRunning = true;\r\n            _healthChecker = checker;\r\n        }\r\n        public Task<HealthCheckResult> CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken = default(CancellationToken))\r\n        {\r\n            bool isHealthy = _healthChecker.IsApiCheckHealthy();\r\n            \r\n            if (!isHealthy)\r\n            {\r\n                return Task.FromResult(new HealthCheckResult(\r\n                    status: context.Registration.FailureStatus,\r\n                    description: \"He is dead Jim\"));\r\n            }\r\n            return Task.FromResult(HealthCheckResult.Healthy(\"Healthy as a horse\"));\r\n        }\r\n    } \r\n```\r\n```\r\n**ICustomApiHealthCheckSingleton.cs**\r\npublic interface ICustomApiHealthCheckSingleton\r\n    {\r\n        bool IsApiCheckHealthy();\r\n    }\r\n    public class CustomHealthChecker : ICustomApiHealthCheck\r\n    {\r\n        public IConfiguration Configuration { get; }\r\n\r\n        public CustomHealthChecker(IConfiguration configuration)\r\n        {\r\n            Configuration = configuration;\r\n        }\r\n        \r\n        public bool IsApiCheckHealthy()\r\n        {\r\n            using (var webClient = new WebClient())\r\n            {\r\n                IConfigurationSection configurationSection = Configuration.GetSection(\"hCInfo\").GetSection(\"api\").GetSection(\"siteSuccess\");\r\n                \r\n                string rawJson = webClient.DownloadString(configurationSection.Value);\r\n              \r\n                AppCls app = JsonConvert.DeserializeObject<AppCls>(rawJson);\r\n\r\n                if (app.HealthCheckResults.Status == StatusEnum.Up)\r\n                {\r\n                    return true;\r\n                }\r\n                else\r\n                {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n    }\r\n```\r\nMy question: is there a way that I could add multiple customized singleton checks and configure all them to go through the same registered customized health check?\r\n\r\nSince the registered health check is returning true or false, I do not see a way to configure all customized health checks(singleton services) to run through the one registered custom health check, without having them return as a single healthy/unhealthy status as an end result, rather than a series of results.\r\n\r\nDo I need to register a separate custom health check for each of the singleton services I am registering? If so, this would lead to a fair amount of duplicate code.\r\n\r\nAlso, Is there an argument / best practice to follow for registering a singleton service separate from the registered health check vs. only registering a custom health check that returns the healthCheckStatus as well? Thank you.",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/12507/comments",
    "author": "jeran-urban",
    "comments": [
      {
        "user": "rynowak",
        "created_at": "2019-07-24T15:12:08Z",
        "body": "Can you be a little more concrete about your example? The code that's in `ICustomApiHealthCheckSingleton` is what I would expect to see in your health check implementation.\r\n\r\nIf you want to register a single check or multiple checks, that's up to you - choose based on how you want the results to be reported. Do you want to an individual pass/fail for each item or not?"
      },
      {
        "user": "jeran-urban",
        "created_at": "2019-07-24T17:50:41Z",
        "body": "Thank you."
      },
      {
        "user": "ghost",
        "created_at": "2019-12-06T20:02:33Z",
        "body": "Thank you for contacting us. Due to no activity on this issue we're closing it in an effort to keep our backlog clean. If you believe there is a concern related to the ASP.NET Core framework, which hasn't been addressed yet, please file a new issue."
      }
    ]
  },
  {
    "number": 12389,
    "title": "Blazor Feature Request: Support for Pipes formatters",
    "created_at": "2019-07-20T07:33:04Z",
    "closed_at": "2019-07-22T16:21:06Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/12389",
    "body": "It will be good if there is Pipes feature as in Angular\r\n\r\n`<p>The hero's birthday is {{ birthday | date }}</p>`\r\n\r\nThis feature will also be beneficial in Globalization/ Localisation\r\n#9386  Globalisation and Converters\r\n`@bind-globalization` is specific to input element. It will not go too far with other elements like (eg.)div \r\n```\r\n<input type=\"text\" @bind=\"coolnessLevel\" @bind:culture=\"CultureInfo.InvariantCulture\">\r\n  Rate the coolness of Blazor (in a non-locale-specific way)\r\n</input>\r\n```\r\n\r\nOther Pros of Pipes syntax\r\n\r\n- Chainable\r\n- Will work anywhere \r\n    `@value | date: 'MMM dd, yyyy' | uppercase`\r\n     `@value | culture:'en-us'`\r\n      `@value | converter:'default'`\r\nList goes on ...\r\n\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/12389/comments",
    "author": "punjabier",
    "comments": [
      {
        "user": "RemiBou",
        "created_at": "2019-07-22T06:59:05Z",
        "body": "There is already method and extension method in C#. What would be the added value of another syntax ?\r\n\r\n```c#\r\n@value.ToString(\"MMM dd, yyyy\", CultureInfo.InvariantCulture).ToUpper()\r\n```\r\n"
      },
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-07-22T16:21:06Z",
        "body": "Thanks for contacting us. We believe that the question you've raised have been answered. If you still feel a need to continue the discussion, feel free to reopen it and add your comments."
      }
    ]
  },
  {
    "number": 12347,
    "title": " Unable to get request.body value",
    "created_at": "2019-07-19T08:08:51Z",
    "closed_at": "2019-08-08T00:24:50Z",
    "labels": [
      "question",
      "Needs: Author Feedback",
      "area-mvc"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/12347",
    "body": "When using.net MVC's route to match route\r\nA request. Body. Length of a post request whose header is application/x-www-form-urlencoded is 0\r\nThere is a value if routing is not used to match request.body.length",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/12347/comments",
    "author": "JeromeKen",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-07-25T17:01:42Z",
        "body": "Thanks for contacting us, @JeromeKen. It's not clear what are the expectations here as well as what's going wrong. Can you please be more specific about what is the scenario and the issue you're seeing?"
      },
      {
        "user": "pranavkm",
        "created_at": "2019-08-08T00:24:50Z",
        "body": "Feel free to reopen once you have more details to share."
      }
    ]
  },
  {
    "number": 12345,
    "title": "asp.net core + blazor + visual studio code + build error",
    "created_at": "2019-07-19T07:17:52Z",
    "closed_at": "2019-12-06T20:02:42Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/12345",
    "body": "Hi,\r\nI can see the future, it would be the new era of web development by this amazing feature and invention of Blazor. Its really nice and i am sure most of i.t. proffessionals will move to use Blazor for making SPA.\r\n\r\nAlso please solve my prob,\r\nUsing: visual studio code + latest C# extension. \r\nOS: windows 10 - 64bit\r\ni have made .net core app wit blazor, this throws error while i build the app [appname: CodeCoreBlazor]:\r\nError:\r\n\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview6-012264\\Microsoft.Common.CurrentVersion.targets(4552,5): error MSB3027: Could not copy \"D:\\TestProjects\\New folder\\CodeCoreBlazor\\obj\\Debug\\netcoreapp3.0\\CodeCoreBlazor.exe\" to \"bin\\Debug\\netcoreapp3.0\\CodeCoreBlazor.exe\". Exceeded retry count\r\nof 10. Failed. [D:\\TestProjects\\New folder\\CodeCoreBlazor\\CodeCoreBlazor.csproj]\r\n\r\n\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview6-012264\\Microsoft.Common.CurrentVersion.targets(4552,5): error MSB3021: Unable to copy file \"D:\\TestProjects\\New folder\\CodeCoreBlazor\\obj\\Debug\\netcoreapp3.0\\CodeCoreBlazor.exe\" to \"bin\\Debug\\netcoreapp3.0\\CodeCoreBlazor.exe\". The process cannot access the file 'D:\\TestProjects\\New folder\\CodeCoreBlazor\\bin\\Debug\\netcoreapp3.0\\CodeCoreBlazor.exe' because it is being used by another process. [D:\\TestProjects\\New folder\\CodeCoreBlazor\\CodeCoreBlazor.csproj]\r\n\r\nThe build failed. Fix the build errors and run again.\r\n\r\nPlease solve my prob, i have done much r&d on internet, not getting the solution. Thanks.",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/12345/comments",
    "author": "Dharmrajj",
    "comments": [
      {
        "user": "jdvoges",
        "created_at": "2019-07-19T11:19:20Z",
        "body": "It looks like there is a lock on the file. Have you tried restarting Visual studio code? Failing that restarting your computer"
      },
      {
        "user": "Dharmrajj",
        "created_at": "2019-07-19T15:36:53Z",
        "body": "Yes, i have tried restarting the vs code, it works whenever i restart the vs code, but again and again error occurs when i ctrl + shift + build the app.\r\nSo is it only solution that i have to restart vs code everytime when i build the app???"
      },
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-07-19T16:29:57Z",
        "body": "Thanks for contacting us, @Dharmrajj.\r\nIt seems like you end up in a situation where you app is running when you're trying to run the build again.Can you please share a a short video showcasing your scenario from the beginning."
      },
      {
        "user": "Dharmrajj",
        "created_at": "2019-07-19T16:44:58Z",
        "body": "Thanks @jdvoges, @mkArtakMSFT  for replying,\r\n\r\n Yes definitely i will try to upload a short video, as well i am describing here a whole scenario here.\r\n\r\n I open up my blazor app in vs code, then run the command 'dotnet run', it works fine, app runs nicely on browser. \r\n\r\n After that i want to build the app, so just ctrl+shift+build the app, but in terminal it shows these two build error, and yes the app still running in the browser, but it doesnt show any html changes i made on page.\r\n\r\n  So it means that build is Unsucceded, so i choose to restart the vs code, then after run command dotnet run, it works again fine and run the app in browser, but when i tried to build an app which again throws these two build error which i mention above.\r\nThanks"
      },
      {
        "user": "ghost",
        "created_at": "2019-12-06T20:02:41Z",
        "body": "Thank you for contacting us. Due to no activity on this issue we're closing it in an effort to keep our backlog clean. If you believe there is a concern related to the ASP.NET Core framework, which hasn't been addressed yet, please file a new issue."
      }
    ]
  },
  {
    "number": 12300,
    "title": "EndPoint routing breaks with ConsumesAttribute on API base controller ",
    "created_at": "2019-07-18T07:55:59Z",
    "closed_at": "2019-11-10T21:23:24Z",
    "labels": [
      "question",
      "area-mvc"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/12300",
    "body": ".NET Core 2.2.301 runtime\r\n\r\nIn our Web API, we have an abstract base controller class, and all API Controllers inherit from this. We use ApiExplorer for OpenApi support; and in the base controller we used the `ProducesAttribute` and `ConsumesAttribute` attributes to inform ApiExplorer about the _default_ Request and Response body content-types, thereby avoiding the need to use these attributes on every single controller or action method where defaults apply.\r\n\r\n```csharp\r\n[ApiController]\r\n[ApiConventionType(typeof(DefaultApiConventions))] // Added after upgrading to 2.2\r\n[Produces(\"application/json\")]\r\n[Consumes(\"application/json\")]\r\nprotected abstract class ApiControllerBase : ControllerBase {\r\n    //...\r\n}\r\n```\r\n\r\nAfter upgrading to ASP.NET Core 2.2.301, we noticed that many of the API routes were not hit, just giving a 404. When switching off EndpointRouting it seemed to work again.\r\n\r\n**After troubleshooting for a long time I found that when removing the `ConsumesAttribute`  from our base controller, everything started working again.**\r\n\r\nPS! I know that the action methods using HTTP Get do not really \"consume\" anything, but still this techique worked in 2.1, and did not cause any problems for the HTTP Get action methods. It seems to cause problems setting this \"globally\" when using the new EndpointRouting.\r\n\r\nI just wanted to inform about this change in behavior that may be a breaking change with ASP.NET Core 2.2 EndpointRouting for other people using the technique as we did.\r\n\r\nCurrently, unless you use a `ConsumesAttribute` on every action method that expects a request body paylod, the OpenAPI/Swagger documentation will list **all content types for all InputFormatters as request body format.** \r\n\r\nI think ApiExplorer should offer to set the default content-type for request and response bodies in startup configuration. Consider this a feature request - let me know if you want me to create a new feature request issue for this.",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/12300/comments",
    "author": "josundt",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-07-18T16:46:25Z",
        "body": "Thanks for contacting us, @josundt.\r\nEndpoint Routing differs from the \"old\" routing system in many aspects. If you really need the \"working\" behavior, simply disable Endpoint Routing.\r\n@rynowak is this the expected behavior?\r\n\r\n@josundt, as for the second issue:\r\n> Currently, unless you use a ConsumesAttribute on every action method that expects a request body paylod, the OpenAPI/Swagger documentation will list all content types for all InputFormatters as request body format.\r\n\r\nplease file it separately, and we'll review it separately."
      },
      {
        "user": "rynowak",
        "created_at": "2019-11-10T21:23:24Z",
        "body": "The issue with `[Consumes(...)]` and actions without a body has been fixed for 3.0. "
      }
    ]
  },
  {
    "number": 12203,
    "title": "How to increase the file uploading size in Blazor server side hosted application?",
    "created_at": "2019-07-15T17:17:39Z",
    "closed_at": "2019-12-06T20:02:46Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/12203",
    "body": "In ASP.NET Core, we can increase the uploading file size limit by defining the size in maxAllowedContentLength. But how to achieve this in ASP.NET Blazor server-side hosted application?\r\n\r\nCan anyone suggest a possible solution?",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/12203/comments",
    "author": "BerlyChristopher",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-07-15T21:23:48Z",
        "body": "Thanks for contacting us, @BerlyChristopher.\r\nAs of now we haven't defined a story around file-uploads in Blazor Server side apps. We'll do that as part of #12205 \r\n\r\nFor now you can do two things:\r\n1. Use native JavaScript capabilities to upload files to a web service endpoint directly (using fetch, XmlHttpRequest, etc....)\r\n2. Do what has been discussed #11643 - increase the buffer size in `Startup.cs`"
      },
      {
        "user": "ghost",
        "created_at": "2019-12-06T20:02:45Z",
        "body": "Thank you for contacting us. Due to no activity on this issue we're closing it in an effort to keep our backlog clean. If you believe there is a concern related to the ASP.NET Core framework, which hasn't been addressed yet, please file a new issue."
      }
    ]
  },
  {
    "number": 12186,
    "title": "Unable to use FileStreamResult class in blazor project targetted to .netstandard 2.0",
    "created_at": "2019-07-15T13:09:31Z",
    "closed_at": "2019-07-26T23:11:06Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/12186",
    "body": "Bug Description: \r\n\r\nI am working on blazor project, to create an application which is majorly focused on file operations. To write the file response, i use fileStreamResult class in my project. To use this class, i have tried to install the NuGet package Microsoft.AspNetCore.Mvc.NewtonsoftJson version=3.0.0-preview6.19307.2 in my project. On searching in web, i found this class available within this package, only.\r\n\r\nBut, this package is not getting installed. Anyhow, this package is installing successfully with blazor project targetted .netstandard 3.0.\r\n\r\nCould anyone, help me to find the solution to use the fileStreamResult class within project targetted to .netstandard 2.0 ? or let me know any other possible solution available ( any other way to use the fileStreamResult class through other NuGet package in blazor project).\r\n\r\nHope, i described my issue, precisely.!\r\n\r\nWaiting, for the solution from experts ..!\r\n\r\nThanks in Advance.\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/12186/comments",
    "author": "Shameer-Ali",
    "comments": [
      {
        "user": "davidfowl",
        "created_at": "2019-07-16T03:45:05Z",
        "body": "Why are you using FileStreamRest in a Blazor application? Can you post the code?"
      },
      {
        "user": "Shameer-Ali",
        "created_at": "2019-07-16T09:33:19Z",
        "body": "> Why are you using FileStreamRest in a Blazor application? Can you post the code?\r\n\r\nHi @davidfowl ,\r\n\r\nI am building a application which simply do file operations like read, create, delete, download, update. For this, i am using blazor's shared application which comprise of both client-side and server-side project. I build a client-side UI which access files and folders from server-side using ajax calls(i.e, i call server side method to perform file operation like downloading a specific folder). For achieving this case, i need to return a filestream from physical path to the client-side. \r\n\r\nThis is the reason why i use FileStreamResult class in my project. \r\n\r\nFind my code below:\r\n\r\npublic FileStreamResult GettingImageResult(string path, string id, bool allowCompress, ImageSize size, params FileManagerContent[] data)\r\n        {\r\n            try\r\n            {\r\n                AccessPermission PathPermission = GetFilePermission(path);\r\n                if (PathPermission != null && !PathPermission.Read)\r\n                    return null;\r\n                String fullPath = (contentRootPath + path);\r\n                FileStream fileStreamInput = new FileStream(fullPath, FileMode.Open, FileAccess.Read);\r\n                FileStreamResult fileStreamResult = new FileStreamResult(fileStreamInput, \"APPLICATION/octet-stream\");\r\n                return fileStreamResult;\r\n            }\r\n            catch (Exception)\r\n            {\r\n                return null;\r\n            }\r\n        }\r\n"
      },
      {
        "user": "Shameer-Ali",
        "created_at": "2019-07-26T12:43:36Z",
        "body": "Hi @davidfowl ,\r\n\r\nI am waiting for your update. mistakenly closed the thread last time.\r\n"
      },
      {
        "user": "danroth27",
        "created_at": "2019-07-26T23:11:06Z",
        "body": "Hi @Shameer-Ali. The `FileStreamResult` type is specifically for returning a file stream from an MVC action. It is not intended for client-side use in Blazor apps. Starting with .NET Core 3.0, you can only use `FileStreamResult` from an ASP.NET Core project targeting netcoreapp3.0. In your server project you can use `FileStreamResult` to return a file to the Blazor client app in response to an HTTP request, but you can't use `FileStreamResult` directly from the Blazor client app. "
      }
    ]
  },
  {
    "number": 12183,
    "title": "Using Components of an other deployed Blazor Application",
    "created_at": "2019-07-15T11:04:28Z",
    "closed_at": "2019-07-15T16:57:35Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/12183",
    "body": "I'd like to use components of various deployed blazor applications as micro views\r\nin a main single page application where i'm sticking them all together.\r\nI'd dont want to share the assemblies itself. Is this possible with blazor?\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/12183/comments",
    "author": "endeffects",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-07-15T16:57:35Z",
        "body": "Thanks for contacting us, @endeffects.\r\nWe don't have a feature for this. You can always use an IFrame to present content from another website."
      }
    ]
  },
  {
    "number": 12167,
    "title": "What is the CheckAccess pattern in Blazor ?",
    "created_at": "2019-07-14T17:46:29Z",
    "closed_at": "2019-07-14T23:06:57Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/12167",
    "body": "Could you please describe this concept !\r\n\r\nThanks...",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/12167/comments",
    "author": "enetstudio",
    "comments": [
      {
        "user": "rynowak",
        "created_at": "2019-07-14T21:46:40Z",
        "body": "Similar to other UI frameworks, Blazor requires you to be in the correct threading context to access UI and mutable state related to the UI.\r\n\r\nIf you have some work that triggers on a background thread, you'd normally use `InvokeAsync()` on `ComponentBase` to dispatch it to the correct context. \r\n\r\nIf you need to start some work as a result of a Blazor lifecycle method, you are already in the correct context. If you need to start some work as a result of an event handler, you are already in the correct context.\r\n\r\nIf you're in client-side Blazor, there's one thread so you don't really have to think about this.\r\n\r\n*The CheckAccess() pattern* - refers to writing code like the following:\r\n\r\n```C#\r\nif (Dispatcher.CheckAccess())\r\n{\r\n    // You already have access, do what you want\r\n}\r\nelse\r\n{\r\n    // You don't have access, enqueue your work\r\n    Dispatcher.InvokeAsync(() =>\r\n    {\r\n         // Write your code here\r\n    });\r\n}\r\n```\r\n\r\nThis is an advanced optimization for the cases where you are starting work, and you *might not* be in the correct context. This probably isn't necessary for most developers on Blazor to ever think about."
      },
      {
        "user": "enetstudio",
        "created_at": "2019-07-14T23:06:47Z",
        "body": "Thanks so much for this, @rynowak!"
      }
    ]
  },
  {
    "number": 12124,
    "title": "Blazor (server-side) navigating from javascript",
    "created_at": "2019-07-12T15:42:54Z",
    "closed_at": "2019-07-12T16:16:07Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/12124",
    "body": "### Feature request\r\nI need to navigate to another component if something happens on my client side in javascript (click on a path in an embedded svg). If I navigate via `windows.location.href` I make a complete new request. \r\n\r\n### Describe the solution you'd like\r\nI would like to have a javascript method to navigate to another component using blazor.\r\n\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/12124/comments",
    "author": "audacity76",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-07-12T16:16:07Z",
        "body": "Thanks for contacting us, @audacity76.\r\nThis is already possible: you can use `Blazor.navigateTo`."
      }
    ]
  },
  {
    "number": 12087,
    "title": "Endpoint not loaded from ApplicationPart",
    "created_at": "2019-07-11T11:49:23Z",
    "closed_at": "2019-08-02T17:19:33Z",
    "labels": [
      "question",
      "area-mvc"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/12087",
    "body": "### Describe the bug\r\n\r\nUsing AddMvcCore and then adding a ApplicationPart does not populate the EndpointOptions.\r\n\r\nI guess the problem is that the endpoint options are created via AddRouting() which is called inside the AddMvcCore but can't take any further ApplicationParts into account because they can only be added after AddMvcCode.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Using version '2.2.0' of package 'Microsoft.AspNetCore.App'\r\n\r\n2. Code\r\n```\r\n// Setup\r\nservices.AddMvcCore()\r\n        .AddApplicationPart(typeof(AnotherAssemblyType).Assembly)\r\n        .AddControllersAsServices()\r\n        .SetCompatibilityVersion(CompatibilityVersion.Version_2_2);\r\n\r\n// Later\r\nvar controllerFeature = new ControllerFeature();\r\nApplicationPartManager.PopulateFeature(controllerFeature);\r\nvar controllers = controllerFeature.Controllers.ToList();\r\n// controllers => 13\r\n\r\nvar link = LinkGenerator.GetPathByAction(...);\r\n// link => null\r\n// logs: No endpoints found for address Microsoft.AspNetCore.Routing.RouteValuesAddress\r\n```\r\n\r\n### Expected behavior\r\nThe LinkGenerator should generate the link. Better now, the EndpointOptions should get the Endpoints from ApplicationPart which was added after AddMvcCore().\r\n\r\n### Additional context\r\nAdd any other context about the problem here.\r\nInclude the output of `dotnet --info`\r\n\r\n<details>\r\n<summary>dotnet --info</summary>\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.103\r\n Commit:    8edbc2570a\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.103\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.1\r\n  Commit:  878dd11e62\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  1.1.14 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.201 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.300 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.301 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.302 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.400 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.401 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.402 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.503 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.504 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.701 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.103 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.0.16 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.3-servicing-26724-03 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n```\r\n</details>",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/12087/comments",
    "author": "SeriousM",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-07-11T17:55:35Z",
        "body": "Thanks for contacting us, @SeriousM. \r\n@rynowak can you please look into this? Is the behavior the same in 3.0?"
      },
      {
        "user": "rynowak",
        "created_at": "2019-07-20T02:18:36Z",
        "body": "You won't be able to generate links until after `UseEndpoints(...)` runs. Why do you need a URL during `Configure(...)`?"
      },
      {
        "user": "SeriousM",
        "created_at": "2019-07-20T06:02:46Z",
        "body": "In my case it's used in unit tests. I register the required services and controllers and want to generate links in a component depending on the LinkGenerator.\nThe link generator is not depending on a living pipeline so it should be possible.\nI would like to avoid spinning up a testserver instance as it needs unnecessary long for such a small feature (generating links).\nWould you agree? "
      },
      {
        "user": "rynowak",
        "created_at": "2019-07-20T17:35:03Z",
        "body": "> The link generator is not depending on a living pipeline so it should be possible.\r\n> Would you agree?\r\n\r\nNo, it's not a safe assumption in general that something undocumented will work. \r\n\r\nThe endpoints for MVC are registered when you call `MapControllers()` or a similar method. So LinkGenerator will work based on the information provided, but in this case no endpoints have been registered. "
      },
      {
        "user": "SeriousM",
        "created_at": "2019-07-20T19:12:31Z",
        "body": "Can I call that myself? I'm not near a computer right now.. "
      },
      {
        "user": "rynowak",
        "created_at": "2019-08-02T03:37:05Z",
        "body": "If you need to build a list of endpoints, the set of things you'd call is not going to be straightforward unfortunately. The way MVC's discovery process works is really complex."
      },
      {
        "user": "rynowak",
        "created_at": "2019-08-02T03:38:08Z",
        "body": "> I would like to avoid spinning up a testserver instance as it needs unnecessary long for such a small feature (generating links).\r\n\r\nDoes it help if you spin up a test server to initialize this data once, and then use it in the rest of your tests?"
      },
      {
        "user": "SeriousM",
        "created_at": "2019-08-02T05:01:37Z",
        "body": "That's a solution, but with some drawbacks. First it's the time the first tests will need, second the feedback loop on continuous testing in vs2019 and third the complex setup to achieve the discovery process.\nWhat would be required to get the discovery going without test server? "
      },
      {
        "user": "rynowak",
        "created_at": "2019-08-02T05:07:57Z",
        "body": "> What would be required to get the discovery going without test server?\r\n\r\nYou need to run your startup code, that could be using `TestServer` or the regular host builder. That could look like:\r\n```C#\r\n            var host = Program.CreateHostBuilder(args).Build();\r\n            var generator = host.Services.GetRequiredService<LinkGenerator>();\r\n```\r\n\r\n"
      },
      {
        "user": "SeriousM",
        "created_at": "2019-08-02T15:03:46Z",
        "body": "Thank you, I will look into this solution. 👍 "
      },
      {
        "user": "rynowak",
        "created_at": "2019-08-02T17:19:33Z",
        "body": "Closing this. If you need help with something else, don't hesitate to open a new issue. "
      }
    ]
  },
  {
    "number": 12061,
    "title": "[Blazor] Support for wasm blazor integration with existing mvc app",
    "created_at": "2019-07-10T19:50:43Z",
    "closed_at": "2019-07-12T16:42:19Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/12061",
    "body": "### Is your feature request related to a problem? Please describe.\r\nWhile I was experimenting on embedding blazor client side (wasm) in an existing mvc app, it seems that it is close enough to be easily implemented, however some changes are needed to have this scenario supported (in which I am very interested).\r\n\r\nFor example, the following scenario kinda works:\r\n\r\n_**Having 2 projects, an mvc core app and a blazor clientside app**_\r\n\r\n#### Mvc App (references the blazor client project)\r\n```cs\r\n//Startup.cs\r\napp.UseClientSideBlazorFiles<Client.Startup>();\r\n```\r\n```html\r\n<!-- Shared/_Layout.cshtml -->\r\n<head>\r\n  <!-- ... -->\r\n  <base href=\"~/\" />\r\n  <!-- ... -->\r\n</head>\r\n<body>\r\n   <!-- ... -->\r\n   <script src=\"_framework/blazor.webassembly.js\"></script>\r\n</body>\r\n```\r\n```html\r\n<!-- Home/Index.cshtml -->\r\n<counter>Loading ...</counter>\r\n\r\n@*Or using prerendering*@\r\n@*<counter>@(await Html.RenderStaticComponentAsync<Counter>())</counter>*@\r\n```\r\n\r\n#### Blazor Client App\r\n```cs\r\npublic class Startup\r\n{\r\n        public void ConfigureServices(IServiceCollection services)\r\n        {\r\n        }\r\n\r\n        public void Configure(IComponentsApplicationBuilder app)\r\n        {\r\n            app.AddComponent<Counter>(\"counter\");\r\n        }\r\n}\r\n```\r\n\r\n\r\nThis works fine for the Index.cshtml page however if you navigate to an other page (or add another component) you get an exception like this\r\n```\r\nWASM: Error: Could not find any element matching selector 'counter'.\r\n```\r\n\r\n### Describe the solution you'd like\r\nFull support for embedding blazor client-side (wasm) in existing MVC applications. \r\n\r\nIMHO it will help with adoption tremendously and is a very nice alternative for people who do not want to use server-side blazor to do the same thing.\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/12061/comments",
    "author": "stavroskasidis",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-07-12T16:42:19Z",
        "body": "Thanks for contacting us, @stavroskasidis.\r\nYou're not supposed to reference the blazor script in a page, which isn't meant to host a `component`. That's what results in the error you see."
      }
    ]
  },
  {
    "number": 12049,
    "title": "Html.PartialAsync is rendering name of input different with Partial Tag Helper",
    "created_at": "2019-07-10T15:44:24Z",
    "closed_at": "2019-07-11T18:07:33Z",
    "labels": [
      "question",
      "area-mvc"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/12049",
    "body": "### Describe the bug\r\nHtml.PartialAsync is rendering name of input different with ```<partial>``` Tag Helper\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Action return a Parent View with Model as below:\r\n    ```\r\n    public class ParentDataViewModel\r\n    {\r\n        public ChildDataViewModel ChildData01 { get; set; }\r\n        public ChildDataViewModel ChildData02 { get; set; }\r\n        public ChildDataViewModel ChildData03 { get; set; }\r\n    }\r\n    ```\r\n\r\n2. ChildDataViewModel structure\r\n    ```\r\n    public class ChildDataViewModel\r\n    {\r\n        public int Property01 { get; set; }\r\n        public int Property02 { get; set; }\r\n        public int Property03 { get; set; }\r\n    }\r\n    ```\r\n\r\n3. In Parent View, use either one of below to render a partial with ChildDataViewModel as data:\r\n    ```\r\n    @await Html.PartialAsync(\"_ChildPartialView\", Model.ChildData01)\r\n    ```\r\n    Or\r\n    ```\r\n    <partial name=\"_ChildPartialView\" for=\"ChildData01\" />\r\n    ```\r\n\r\n4. The Html.PartialAsync will render 3 inputs as below:\r\n    ```\r\n    <form>\r\n        <input id=\"Property01\" name=\"Property01\" />\r\n        <input id=\"Property02\" name=\"Property02\" />\r\n        <input id=\"Property03\" name=\"Property03\" />\r\n        <button type=\"submit\">Submit</button>\r\n    </form>\r\n    ```\r\n\r\n5. The <partial> Tag Helper will render 3 inputs as below:\r\n    ```\r\n    <form>\r\n        <input id=\"Property01\" name=\"ChildData01.Property01\" />\r\n        <input id=\"Property02\" name=\"ChildData01.Property02\" />\r\n        <input id=\"Property03\" name=\"ChildData01.Property03\" />\r\n        <button type=\"submit\">Submit</button>\r\n    </form>\r\n    ```\r\n\r\n### Expected behavior\r\nThe ```<partial>``` Tag Helper should render input with name of input as same as @Html.PartialAsync.\r\n\r\nThe difference causes changing from Html.PartialAsync to ```<partial>``` will make requested data lost.\r\n\r\n### Additional context\r\n\r\ndotnet --info\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.107\r\n Commit:    2212cac826\r\n```\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/12049/comments",
    "author": "nthanhcong0",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-07-11T18:07:33Z",
        "body": "Thanks for contacting us, @nthanhcong0.\r\nThis is done by-design and the behavior you see in the `PartialTagHelper` is intended. Our recommendation is to favor `<partial>` tag helper over the `Html.PartialAsync`. If you are looking for the exact same behavior from the `<partial />` you can use the `model` property as follows:\r\n```html\r\n<partial model=\"Model.ChildData01\" />\r\n```"
      }
    ]
  },
  {
    "number": 12000,
    "title": "Blazor ValidationMessage Failing",
    "created_at": "2019-07-09T13:00:54Z",
    "closed_at": "2019-07-09T16:19:02Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/12000",
    "body": "I have a setup like below:\r\n\r\n```\r\n<label class=\"control-label\">User</label>\r\n<input class=\"form-control\" @bind=\"@VM.Connector.ConnectorDetails[0]\" />\r\n<ValidationMessage For=\"@(() => VM.Connector.ConnectorDetails.ElementAt(0))\" />\r\n```\r\n\r\nWith `ValidationMessage` I'm getting the following error:\r\n\r\n`ArgumentException: The provided expression contains a MethodCallExpression2 which is not supported. FieldIdentifier only supports simple member accessors (fields, properties) of an object.\r\n`\r\n\r\nHow can I support displaying the error message for the given element in the array?\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/12000/comments",
    "author": "aherrick",
    "comments": [
      {
        "user": "SteveSandersonMS",
        "created_at": "2019-07-09T16:04:36Z",
        "body": "Does the following not work?\r\n\r\n```\r\n<ValidationMessage For=\"@(() => VM.Connector.ConnectorDetails[0])\" />\r\n```\r\n\r\nWhat's the reason why you needed to use `ElementAt`?"
      },
      {
        "user": "aherrick",
        "created_at": "2019-07-09T16:10:15Z",
        "body": "Hey Steve. Not that I'm seeing. With the array accessor I'm seeing:\r\n\r\n`\r\nArgumentException: The provided expression contains a InstanceMethodCallExpression1 which is not supported. FieldIdentifier only supports simple member accessors (fields, properties) of an object.`\r\n"
      },
      {
        "user": "SteveSandersonMS",
        "created_at": "2019-07-09T16:19:02Z",
        "body": "Oh wait, yeah, it can't work.\r\n\r\nThe expression you're providing is to populate a `FieldIdentifier`, which is an `(object, propertyName)` pair. It's essential that we have a meaningful value for `propertyName` since that's the key into the edit context dictionary for that field. It would be bad if we allowed the `propertyName` to be something like `0` (in your example) as that would result in mismatches if items were inserted/deleted from the collection.\r\n\r\nSo instead what you need to do is use a data structure where you have reference-typed objects with fields/properties. For example, `ConnectionDetails` could be a `List<Connector>`, where `Connector` has a property `DetailsText`, and then you'd use:\r\n\r\n```razor\r\n<ValidationMessage For=\"@(() => VM.Connector.ConnectorDetails[0].DetailsText)\" />\r\n```\r\n\r\nThis will work because `VM.Connector.ConnectorDetails[0]` would resolve as an object, and we'd know to use `DetailsText` as the property name."
      },
      {
        "user": "aherrick",
        "created_at": "2019-07-09T18:15:32Z",
        "body": "Thanks for the response! That's unfortunate as I'm not trying to create an object with a property of 1 just to support this situation. Since it can bind successfully to `@VM.Connector.ConnectorDetails[0]` I would assume we could link the validation message as well."
      },
      {
        "user": "aherrick",
        "created_at": "2019-07-10T16:18:21Z",
        "body": "@SteveSandersonMS Is there anyway I can create a unique `FieldIdentifier.FieldName` so on the back end when validation occurs I can distinguish between the following:\r\n\r\n```\r\n    <div class=\"form-group\">\r\n        <label class=\"control-label\">@VM.Parent.Children[0].DataKey</label>\r\n        <InputText class=\"form-control\" @bind-value=\"@VM.Parent.Children[0].DataValue\" />\r\n        <ValidationMessage For=\"@(() => VM.Parent.Children[0].DataValue)\" />\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n        <label class=\"control-label\">@VM.Parent.Children[1].DataKey</label>\r\n        <InputText class=\"form-control\" @bind-value=\"@VM.Parent.Children[1].DataValue\" />\r\n        <ValidationMessage For=\"@(() => VM.Parent.Children[1].DataValue)\" />\r\n    </div>\r\n```\r\n\r\nBoth just register as `DataValue`  so I can't programmatically match the field up to the validation message I'm generating (using FluentValidation)\r\n\r\nThank you!"
      }
    ]
  },
  {
    "number": 11994,
    "title": "Custom validation attribute not firing when value is null (Razor Pages)",
    "created_at": "2019-07-09T05:54:13Z",
    "closed_at": "2019-07-11T18:19:41Z",
    "labels": [
      "question",
      "area-mvc"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/11994",
    "body": "When you create a custom validation attribute and use it on a binded property directly on a Razor page, it won't get fired when the value of the property is null. On the other hand, when you use it on a property inside a class, the attribute will be triggered with a null value.\r\n\r\nSteps to reproduce the behavior:\r\n1. Use ASP.NET Core Version 2.2.300\r\n\r\n2. Create a web project\r\n`dotnet new webapp`\r\n\r\n3. Create a custom validation attribute\r\n``` csharp \r\npublic class MyValidation : ValidationAttribute\r\n    {\r\n        protected override ValidationResult IsValid(object value, ValidationContext validationContext)\r\n        {\r\n            return ValidationResult.Success;\r\n        }\r\n    }\r\n```\r\n\r\n4. Bind a string property inside Index.cshtml.cs and use the custom validation attribute\r\n``` csharp\r\npublic class IndexModel : PageModel\r\n    {\r\n        [MyValidation]\r\n        [BindProperty]\r\n        public string MyProperty { get; set; }\r\n\r\n        public void OnGet()\r\n        {\r\n\r\n        }\r\n\r\n        public IActionResult OnPost()\r\n        {\r\n            if (!ModelState.IsValid)\r\n            {\r\n                return Page();\r\n            }\r\n\r\n            return RedirectToPage(\"Index\");\r\n        }\r\n    }\r\n```\r\n\r\n5. Add a simple form to Index.cshtml\r\n``` html\r\n@page\r\n@model IndexModel\r\n@{\r\n    ViewData[\"Title\"] = \"Home page\";\r\n}\r\n\r\n<form method=\"post\">\r\n    <input type=\"text\" asp-for=\"MyProperty\">\r\n    <input type=\"submit\" value=\"Click me\">\r\n    <span asp-validation-for=\"MyProperty\"></span>\r\n</form>\r\n```\r\n\r\n6. Set a break point inside the _IsValid_ method of the custom validation attribute\r\n\r\n7. Run the application\r\n\r\n8. Put a value into the input and press the submit button (break point hits)\r\n\r\n9. Submit the button without an input value (break point doesn't hit)\r\n\r\n10. Move the string property into a separate model class\r\n``` csharp\r\npublic class MyModel\r\n    {\r\n        [MyValidation]\r\n        public string MyProperty { get; set; }\r\n    }\r\n```\r\n\r\n11. Use the model class as binded property in Index.cshtml.cs\r\n``` csharp\r\npublic class IndexModel : PageModel\r\n    {\r\n        [BindProperty]\r\n        public MyModel MyModel { get; set; }\r\n\r\n        public void OnGet()\r\n        {\r\n\r\n        }\r\n\r\n        public IActionResult OnPost()\r\n        {\r\n            if (!ModelState.IsValid)\r\n            {\r\n                return Page();\r\n            }\r\n\r\n            return RedirectToPage(\"Index\");\r\n        }\r\n    }\r\n```\r\n\r\n12. Adjust the form in Index.cshtml\r\n``` html\r\n@page\r\n@model IndexModel\r\n@{\r\n    ViewData[\"Title\"] = \"Home page\";\r\n}\r\n\r\n<form method=\"post\">\r\n    <input type=\"text\" asp-for=\"MyModel.MyProperty\">\r\n    <input type=\"submit\" value=\"Click me\">\r\n    <span asp-validation-for=\"MyModel.MyProperty\"></span>\r\n</form>\r\n```\r\n\r\n13. Repeat step 7-9 (this time the break point hits also with an empty input)\r\n\r\nExpected behavior:\r\nThe custom attribute will get fired whether the value is null or not.\r\n\r\nAdditional context:\r\nOne would ask why I need to handle null values. In our case a null value is valid if some conditions in the validation context are met.",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/11994/comments",
    "author": "manuelsidler",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-07-11T18:19:41Z",
        "body": "Thanks for contacting us, @manuelsidler.\r\nThis is not how the current validation subsystem works. You must use the `RequiredAttribute` to validate the value is not null first, then only the Validation logic will kick in."
      }
    ]
  },
  {
    "number": 11985,
    "title": "Restricting controller ports in Kestrel",
    "created_at": "2019-07-08T21:38:22Z",
    "closed_at": "2019-12-07T02:00:25Z",
    "labels": [
      "question",
      "area-mvc"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/11985",
    "body": "I'm investigating Kestrel and asp .net core, coming from a legacy stack, and I'm curious if something is possible.\r\n\r\nI want my controllers to listen on `https:443`, and my health checks on `http:80` and`http:8080`. I know how to configure Kestrel to listen on all three ports, but what I don't know is how to restrict my controllers to only listen on `443`.\r\n\r\nSome details:\r\n\r\n- Kestrel, on the edge with no reverse proxy\r\n-  This is a pure REST API with no pages or UI associated\r\n- Currently using attribute-based routing\r\n\r\nIs there a way to do this?",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/11985/comments",
    "author": "msft-mw",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-07-11T18:22:19Z",
        "body": "Thanks for contacting us, @msft-mw.\r\n@rynowak, @glennc can you please look into this? Thanks"
      },
      {
        "user": "ghost",
        "created_at": "2019-12-07T02:00:24Z",
        "body": "Thank you for contacting us. Due to no activity on this issue we're closing it in an effort to keep our backlog clean. If you believe there is a concern related to the ASP.NET Core framework, which hasn't been addressed yet, please file a new issue."
      }
    ]
  },
  {
    "number": 11953,
    "title": "Blazor won't install",
    "created_at": "2019-07-08T10:00:58Z",
    "closed_at": "2019-07-08T16:34:59Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/11953",
    "body": "Error \" This extension is not installable on any currently installed products.\"\r\nMicrosoft.VisualStudio.BlazorExtension.16.0.19307.2.vsix\r\nVisual Studio 2019 - 16.1.5  --    with the ASP.NET and web development workload selected.\r\ndotnet-sdk-3.0.100-preview6-012264-win-x64\r\n\r\nI remember this working before. No idea what to try.  Please suggest.  thanks!\r\n\r\nThe Log:\r\n8/7/2019 5:46:48 PM - Microsoft VSIX Installer\r\n8/7/2019 5:46:48 PM - -------------------------------------------\r\n8/7/2019 5:46:48 PM - vsixinstaller.exe version:\r\n8/7/2019 5:46:48 PM - 16.1.3132\r\n8/7/2019 5:46:48 PM - -------------------------------------------\r\n8/7/2019 5:46:48 PM - Command line parameters:\r\n8/7/2019 5:46:48 PM - C:\\Program Files (x86)\\Microsoft Visual Studio\\Installer\\resources\\app\\ServiceHub\\Services\\Microsoft.VisualStudio.Setup.Service\\VSIXInstaller.exe,C:\\Temp\\Microsoft.VisualStudio.BlazorExtension.16.0.19307.2.vsix\r\n8/7/2019 5:46:48 PM - -------------------------------------------\r\n8/7/2019 5:46:48 PM - Microsoft VSIX Installer\r\n8/7/2019 5:46:48 PM - -------------------------------------------\r\n8/7/2019 5:46:49 PM - Initializing Install...\r\n8/7/2019 5:46:50 PM - Extension Details...\r\n8/7/2019 5:46:50 PM - \tIdentifier         : Microsoft.VisualStudio.BlazorExtension\r\n8/7/2019 5:46:50 PM - \tName               : Blazor\r\n8/7/2019 5:46:50 PM - \tAuthor             : Microsoft\r\n8/7/2019 5:46:50 PM - \tVersion            : 16.0.19307.2\r\n8/7/2019 5:46:50 PM - \tDescription        : Provides Visual Studio support for Blazor\r\n8/7/2019 5:46:50 PM - \tLocale             : en-US\r\n8/7/2019 5:46:50 PM - \tMoreInfoURL        : \r\n8/7/2019 5:46:50 PM - \tInstalledByMSI     : False\r\n8/7/2019 5:46:50 PM - \tSupportedFrameworkVersionRange : [0.0,2147483647.2147483647]\r\n8/7/2019 5:46:50 PM - \r\n8/7/2019 5:46:50 PM - \tSignatureState     : ValidSignature\r\n8/7/2019 5:46:50 PM - \tSignedBy           : Microsoft Corporation\r\n8/7/2019 5:46:50 PM - \tCertificate Info   : \r\n8/7/2019 5:46:50 PM - \t\t-------------------------------------------------------\r\n8/7/2019 5:46:50 PM - \t\t[Subject]       : CN=Microsoft Corporation, OU=OPC, O=Microsoft Corporation, L=Redmond, S=Washington, C=US\r\n8/7/2019 5:46:50 PM - \t\t[Issuer]        : CN=Microsoft Code Signing PCA 2010, O=Microsoft Corporation, L=Redmond, S=Washington, C=US\r\n8/7/2019 5:46:50 PM - \t\t[Serial Number] : 330000026ECE6AE5984BFC96A900000000026E\r\n8/7/2019 5:46:50 PM - \t\t[Not Before]    : 7/9/2018 5:00:30 AM\r\n8/7/2019 5:46:50 PM - \t\t[Not After]     : 7/9/2019 5:00:30 AM\r\n8/7/2019 5:46:50 PM - \t\t[Thumbprint]    : 99B6246883B4B32EA59AE18B36945D205A876800\r\n8/7/2019 5:46:50 PM - \r\n8/7/2019 5:46:50 PM - \tSupported Products : \r\n8/7/2019 5:46:50 PM - \t\tMicrosoft.VisualStudio.Community\r\n8/7/2019 5:46:50 PM - \t\t\tVersion : [16.2,)\r\n8/7/2019 5:46:50 PM - \r\n8/7/2019 5:46:50 PM - \tReferences         : \r\n8/7/2019 5:46:50 PM - \tPrerequisites      : \r\n8/7/2019 5:46:50 PM - \t\t-------------------------------------------------------\r\n8/7/2019 5:46:50 PM - \t\tIdentifier   : Microsoft.VisualStudio.Component.Web\r\n8/7/2019 5:46:50 PM - \t\tName         : ASP.NET and web development tools\r\n8/7/2019 5:46:50 PM - \t\tVersion      : [16.0,)\r\n8/7/2019 5:46:50 PM - \r\n8/7/2019 5:46:50 PM - Signature Details...\r\n8/7/2019 5:46:50 PM - \tExtension is signed with a valid signature.\r\n8/7/2019 5:46:50 PM - \r\n8/7/2019 5:46:50 PM - Searching for applicable products...\r\n8/7/2019 5:46:50 PM - Found installed product - Global Location\r\n8/7/2019 5:46:50 PM - Found installed product - Visual Studio Community 2019\r\n8/7/2019 5:46:50 PM - VSIXInstaller.NoApplicableSKUsException: This extension is not installable on any currently installed products.\r\n   at VSIXInstaller.ExtensionService.GetInstallableData(String vsixPath, String extensionPackParentName, Boolean isRepairSupported, IStateData stateData, IEnumerable`1& skuData)\r\n   at VSIXInstaller.ExtensionPackService.IsExtensionPack(IStateData stateData, Boolean isRepairSupported)\r\n   at VSIXInstaller.ExtensionPackService.ExpandExtensionPackToInstall(IStateData stateData, Boolean isRepairSupported)\r\n   at VSIXInstaller.App.Initialize(Boolean isRepairSupported)\r\n   at VSIXInstaller.App.Initialize()\r\n   at System.Threading.Tasks.Task`1.InnerInvoke()\r\n   at System.Threading.Tasks.Task.Execute()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/11953/comments",
    "author": "enewmen",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-07-08T16:34:57Z",
        "body": "Thanks for contacting us, @enewmen.\r\nThe Blazor VSIX requires VS 16.2 preview version as minimum. Please make sure you install the latest preview release of VS to make it work."
      },
      {
        "user": "enewmen",
        "created_at": "2019-07-08T21:25:17Z",
        "body": "Thanks for the post!  I'm sure I installed the latest version - using the installer.  Next I'll make sure it's v16.2"
      }
    ]
  },
  {
    "number": 11948,
    "title": "[Question] what is the rationale about not using dotnet watch in docker anymore",
    "created_at": "2019-07-08T06:38:07Z",
    "closed_at": "2019-12-07T02:00:33Z",
    "labels": [
      "question",
      "area-commandlinetools"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/11948",
    "body": "in about a year ago I remember when we wanted to run an app in docker for development purpose, we run the app with the `dotnet watch run` and create a folder map from src folder to the docker folder. so in this way when we would change the content of a file in our local, the docker instance would take the changes and rebuild the app. but in recent updates, the template is creating a publish version and run that one. I agree that it's good for production. but why the development version is gone completely? I searched a lot but couldn't find why this changed happened. \r\n\r\nit was something like this:\r\n\r\n```\r\nFROM microsoft/aspnetcore-build:2.0\r\n\r\n# Required inside Docker, otherwise file-change events may not trigger\r\nENV DOTNET_USE_POLLING_FILE_WATCHER 1\r\n\r\n# Set a working dir at least 2 deep. The output and intermediate output folders will be /code/obj and /code/bin\r\nWORKDIR /code/app\r\n\r\n# By copying these into the image when building it, we don't have to re-run restore everytime we launch a new container\r\nCOPY web.csproj .\r\nCOPY NuGet.config .\r\nCOPY Directory.Build.props .\r\nRUN dotnet restore\r\n\r\n# This will build and launch the server in a loop, restarting whenever a *.cs file changes\r\nENTRYPOINT dotnet watch run --no-restore\r\n```\r\nbut now it look like this:\r\n\r\n```\r\nFROM microsoft/dotnet:2.2-aspnetcore-runtime AS base\r\nWORKDIR /app\r\nEXPOSE 80\r\nEXPOSE 443\r\n\r\nFROM microsoft/dotnet:2.2-sdk AS build\r\nWORKDIR /src\r\nCOPY [\"MyProject.csproj\", \"MyProject\"]\r\nCOPY [\"MyProject.Common.csproj\", \"MyProject.Common\"]\r\nRUN dotnet restore \"MyProject.csproj\"\r\nCOPY . .\r\nWORKDIR \"/src/MyProject\"\r\nRUN dotnet build \"MyProject.csproj\" -c Release -o /app\r\n\r\nFROM build AS publish\r\nRUN dotnet publish \"MyProject.csproj\" -c Release -o /app\r\n\r\nFROM base AS final\r\nWORKDIR /app\r\nCOPY --from=publish /app .\r\nENTRYPOINT [\"dotnet\", \"MyProject.dll\"]\r\n```\r\n\r\nnow on each change, we need to publish the app to have a working docker again.\r\n\r\nI saw that the debugging works fine in visual studio with this new approach, but I'm confused about how the visual studio is able to attach to the container and do remote debugging. and more surprise I am about how visual studio is able to debug an application that is published in release mode? definitely the `-c Release` means no PDB and whatsoever. so what is happening in here? and why no more `dotnet watch run`?",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/11948/comments",
    "author": "mhamri",
    "comments": [
      {
        "user": "ghost",
        "created_at": "2019-12-07T02:00:33Z",
        "body": "Thank you for contacting us. Due to no activity on this issue we're closing it in an effort to keep our backlog clean. If you believe there is a concern related to the ASP.NET Core framework, which hasn't been addressed yet, please file a new issue."
      }
    ]
  },
  {
    "number": 11892,
    "title": "Blazor app crashes in use null as @key=\"@...\"",
    "created_at": "2019-07-04T09:26:06Z",
    "closed_at": "2019-07-04T11:06:21Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/11892",
    "body": "### Describe the bug\r\nData sources may contain null as item.\r\n@key feature in this case crashes application.\r\n\r\n### To Reproduce\r\n```\r\n<ul>\r\n    @foreach(var str in DataSource) {\r\n        <li @key=\"@str\">@str</li>\r\n    }\r\n</ul>\r\n\r\n@code {\r\n    string[] DataSource = new string[] { null, \"String 1\", \"String 2\" };\r\n}\r\n```\r\n\r\n### Actual Result\r\n\r\n```\r\nArgumentNullException: Value cannot be null.\r\n Parameter name: value\r\nMicrosoft.AspNetCore.Components.RenderTree.RenderTreeBuilder.SetKey(object value)\r\n```\r\n\r\n### Expected behavior\r\nnull value can't be used as key (since several null item would be indistinguishable), so, key may be ignored for this li elemen. It should not crash app. It should not require workaround.\r\n\r\n### Possible workaround\r\n\r\n```\r\n    @foreach(var str in DataSource) {\r\n        @if(str != null) {\r\n            <li @key=\"@str\">@str</li>\r\n        } else {\r\n            <li>@str</li>\r\n        }\r\n    }\r\n```",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/11892/comments",
    "author": "ZergZe",
    "comments": [
      {
        "user": "SteveSandersonMS",
        "created_at": "2019-07-04T11:06:21Z",
        "body": "This is as expected. If you want to use `key`, you really should find something distinct for each of your items, otherwise it's not meaningful. We throw if you pass `null` because otherwise developers wouldn't realise if they were in a situation where `key` couldn't work.\r\n\r\nIf you want to, you can do something like `@key=\"@(someValue ?? new object())\"` or `@key=\"@(someValue ?? \"fixed value\")\"`, depending on how you want those items to be treated. Using `new object()` would cause the framework to drop and recreate the descendants on each render, whereas using `\"fixed value\"` would cause the keys to be ignored for those items."
      }
    ]
  },
  {
    "number": 11493,
    "title": "[Blazor] Context doesn't exist",
    "created_at": "2019-06-24T10:02:07Z",
    "closed_at": "2019-06-26T10:20:47Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/11493",
    "body": "Hi guys !\r\n\r\nI'm comming to you because i'm facing an issue on Blazor.\r\n\r\nCS0103\tThe name 'context' does not exist in the current context\r\n\r\nI have 3 files (It's little bit like MVVM blazor\r\n\r\nCTableViewModel.cs : \r\n\r\n```\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Threading.Tasks;\r\nusing BlazorWebApp.Client.Helpers;\r\nusing Microsoft.AspNetCore.Components;\r\n\r\nnamespace BlazorWebApp.Client.ViewModels.Shared.Components.Tables\r\n{\r\n    public class CTableViewModel<TItem> : ComponentBaseExtensions\r\n    {\r\n        [Parameter] protected RenderFragment HeaderTemplate { get; set; }\r\n        [Parameter] protected RenderFragment<TItem> RowTemplate { get; set; }\r\n        [Parameter] protected string NoItem { get; set; }\r\n        [Parameter] protected Func<Task<List<TItem>>> RefreshItems { get; set; }\r\n\r\n        protected List<TItem> Items = new List<TItem>();\r\n\r\n        protected override async Task OnParametersSetAsync()\r\n        {\r\n            await base.OnParametersSetAsync();\r\n            await OnRefreshItems();\r\n        }\r\n\r\n        private async Task OnRefreshItems()\r\n        {\r\n            SetIsLoading(true);\r\n            Items = await RefreshItems() ?? new List<TItem>();\r\n            SetIsLoading(false);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nCTableView.razor : \r\n\r\n```\r\n@typeparam TItem\r\n@inherits CTableViewModel<TItem>\r\n\r\n<div class=\"table-responsive\">\r\n    <table class=\"table table-hover\">\r\n        <thead>\r\n        <tr>\r\n            @if (HeaderTemplate != null)\r\n            {\r\n                @HeaderTemplate\r\n            }\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        @foreach (TItem item in Items)\r\n        {\r\n            <tr>\r\n                @RowTemplate(item)\r\n            </tr>\r\n        }\r\n        </tbody>\r\n    </table>\r\n</div>\r\n```\r\n\r\nAnd finally Index.razor : \r\n\r\n```\r\n@layout MainLayout\r\n@page \"/\"\r\n@inherits BlazorWebApp.Client.ViewModels.Pages.Index.IndexViewModel\r\n\r\n<CTableView NoItem=\"Nothing\" RefreshItems=\"@(async () => await GetUsers())\" Items=\"UserAuth\">\r\n    <HeaderTemplate>\r\n        <th class=\"text-center\">Mail</th>\r\n        <th class=\"text-center\">Password</th>\r\n    </HeaderTemplate>\r\n    <RowTemplate>\r\n        <td class=\"text-center\">@context.Email</td>\r\n        <td class=\"text-center\">@context.Password</td>\r\n    </RowTemplate>\r\n</CTableView>\r\n```\r\n\r\nI got this issue since i updated to blazor preview 6.\r\nDo you know why it's happening ? \r\n\r\nDotnet Version : 3.0.100-preview6-012264\r\n\r\nThank you for your kind help ! ",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/11493/comments",
    "author": "RomainAn",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-06-24T17:07:14Z",
        "body": "Thank you for filing this issue. In order for us to investigate this issue, please provide a minimalistic repro project that illustrates the problem."
      },
      {
        "user": "julienGrd",
        "created_at": "2019-06-26T04:22:47Z",
        "body": "You have to explicitely declare the context into a variable, like this (you can name context with a better name if you want)\r\n````\r\n<RowTemplate Context=\"context\">\r\n        <td class=\"text-center\">@context.Email</td>\r\n        <td class=\"text-center\">@context.Password</td>\r\n    </RowTemplate>\r\n````\r\n\r\ngood luck !"
      },
      {
        "user": "RomainAn",
        "created_at": "2019-06-26T10:20:47Z",
        "body": "Hi, thank you for your kind help ! 💯 \r\n\r\nI found the issue, i had to add in the file _Imports.razor : \r\n\r\n```\r\n@* Components *@\r\n@using BlazorWebApp.Client.Views.Shared.Components.Tables\r\n    \r\n@* Components Models *@\r\n@using BlazorWebApp.Client.ViewModels.Shared.Components.Tables\r\n```\r\n\r\nThe funny thing is that the error about the context doens't really makes lot of senses. A compilation error about component not found of something would be more clear in my opinion !\r\n\r\n@julienGrd I don't need to add it, it works !"
      }
    ]
  },
  {
    "number": 11388,
    "title": "I am stuck with the DI_BasePageModel because I already used another base class for my dropdownlist and I cant use more than 1 base class",
    "created_at": "2019-06-19T18:38:20Z",
    "closed_at": "2019-06-19T22:31:25Z",
    "labels": [
      "question",
      "area-mvc"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/11388",
    "body": "I am creating a web application with ASP.NET Razor pages. I am modelling the security aspect around this project but I'm stuck with the CreateModel page of the Contact Model. I had used a base class to populate a dropdown list which I am using in the CreateModel. \r\n\r\nCan you describe a way to use more than one base class in the create model? I am at intermediate skill level in C# and I have read that multiple base classes are not allowed in C# (also in Java). \r\n\r\nPlease help.",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/11388/comments",
    "author": "code2expert",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-06-19T22:31:25Z",
        "body": "Thanks for contacting us, @code2expert.\r\nThis is a C# limitation. You can't have multiple base classes. Consider re-structuring your code."
      }
    ]
  },
  {
    "number": 11326,
    "title": "Post not working in Razor Pages in a Blazor Server Side Project",
    "created_at": "2019-06-18T14:17:57Z",
    "closed_at": "2019-06-25T16:50:00Z",
    "labels": [
      "question",
      "Needs: Author Feedback",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/11326",
    "body": "### Describe the bug\r\nA post does not work in a Razor Page inside a Blazor project! Is that by design?\r\n\r\n### To Reproduce\r\nSimply create a Razor page inside Blazor server side project:\r\n```\r\n    <form method=\"post\" enctype=\"multipart/form-data\">\r\n        <input type=\"file\" asp-for=\"Upload\" />\r\n        <input type=\"submit\" value=\"Enviar\" />\r\n    </form>\r\n```\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/11326/comments",
    "author": "vdandrade",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-06-18T16:49:30Z",
        "body": "Thank you for filing this issue. In order for us to investigate this issue, please provide a minimalistic repro project that illustrates the problem."
      },
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-06-25T16:50:00Z",
        "body": "Hi. We're closing this issue as we have heard no response from you for some time now. If you have more details and are encountering this issue please add a new reply and re-open the issue."
      }
    ]
  },
  {
    "number": 11320,
    "title": " Url.Action does not build expected link using Route Attribute in 2.2",
    "created_at": "2019-06-18T10:38:02Z",
    "closed_at": "2019-12-07T02:00:56Z",
    "labels": [
      "question",
      "area-mvc"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/11320",
    "body": "### Describe the bug\r\nAfter updating to Microsoft.AspNetCore.(Mvc) packages from version 2.1.2 to 2.2.0 some of the urls produced with HtmlHelper ActionLink no longer build the correct link using Route attribute\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Create an AspNetCore.Mvc project with the following code\r\n\r\nController\r\n```\r\npublic IActionResult Index()\r\n{\r\n    return View();\r\n}\r\n\r\n[Route(\"{firstInt:int}/{secondInt:int?}\")]\r\npublic IActionResult Test(int firstInteger, int? secondInteger)\r\n{\r\n    return View(\"Index\");\r\n}\r\n```\r\n\r\nView\r\n```\r\n@Html.ActionLink(\"CorrectLink\", \"Test\", \"Home\", new { firstInt = 1, secondInt = 2, boolean = true })\r\n\r\n@Html.ActionLink(\"WrongLink\", \"Test\", \"Home\", new { firstInt = 1, secondInt = (int?)null, boolean = true })\r\n```\r\n\r\nPackage versions with the expected behaviour\r\n```\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore\" Version=\"2.1.2\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Mvc\" Version=\"2.1.2\" />\r\n  </ItemGroup>\r\n```\r\n\r\nPackage versions with the incorrect behaviour\r\n```\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore\" Version=\"2.2.0\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Mvc\" Version=\"2.2.0\" />\r\n  </ItemGroup>\r\n```\r\n\r\n### Expected behavior\r\nA clear and concise description of what you expected to happen.\r\n\r\nLinks should go to `[host]/1/2?boolean=True` and `[host]/1?boolean=True` respectively, but instead go to `[host]/1/2?boolean=True` and `[host]/Home/Test?firstInt=1&boolean=True`\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/11320/comments",
    "author": "WouterHD",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-06-20T16:46:12Z",
        "body": "Thanks for contacting us, @WouterHD.\r\n@JamesNK can you please confirm this is the expected outcome? Thanks!"
      },
      {
        "user": "JamesNK",
        "created_at": "2019-06-23T08:56:47Z",
        "body": "```\r\n@Html.ActionLink(\"WrongLink\", \"Test\", \"Home\", new { firstInt = 1, secondInt = (int?)null, boolean = true })\r\n\r\n[Route(\"{firstInt:int}/{secondInt:int?}\")]\r\npublic IActionResult Test(int firstInteger, int? secondInteger)\r\n{\r\n    return View(\"Index\");\r\n}\r\n```\r\n\r\nI've done some testing. Results:\r\n\r\n2.1: `/1?boolean=True`\r\n2.2 (no EP routing): `/Home/Test?firstInt=1&boolean=True`\r\n2.2 (EP routing): `<blank>`\r\n3.0: `/Home/Test?firstInt=1&boolean=True`\r\n\r\n@rynowak Results are odd in that there is a break in behavior between traditional routing in 2.1 and 2.2. Do you know why this traditional routing behavior it changed?"
      },
      {
        "user": "ghost",
        "created_at": "2019-12-07T02:00:55Z",
        "body": "Thank you for contacting us. Due to no activity on this issue we're closing it in an effort to keep our backlog clean. If you believe there is a concern related to the ASP.NET Core framework, which hasn't been addressed yet, please file a new issue."
      }
    ]
  },
  {
    "number": 11319,
    "title": "Architecture Documentation",
    "created_at": "2019-06-18T10:36:21Z",
    "closed_at": "2019-12-07T02:00:57Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/11319",
    "body": "I wonder, is there any documentation for contributors on the architecture of ASP.Net Core? The docs folder only contains help on technical issues (how to build, how to deal with the tools, etc.) but no explanation of how the project is structured and how various mechanisms work.\r\n\r\nFor example, is there a document that explains how and where routing works? What part of the code dispatches requests? How do endpoints get stored?\r\n\r\nThis would help not only contributing, but also debugging when it comes to more obscure setups. For example, what is the code that maps an IEndpointRouteBuilder.MapFallbackToPage call to a specific page class? To find out, I have to dive through roughly 8 layers of abstraction, with absolutely no high-level documentation on what these layers do.\r\n\r\nHow do you onboard new developers inside Microsoft? Is it purely based on personal interaction?",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/11319/comments",
    "author": "CornedBee",
    "comments": [
      {
        "user": "ghost",
        "created_at": "2019-12-07T02:00:57Z",
        "body": "Thank you for contacting us. Due to no activity on this issue we're closing it in an effort to keep our backlog clean. If you believe there is a concern related to the ASP.NET Core framework, which hasn't been addressed yet, please file a new issue."
      }
    ]
  },
  {
    "number": 11261,
    "title": "Blazor - control of repeated component",
    "created_at": "2019-06-16T10:22:50Z",
    "closed_at": "2019-06-19T16:57:30Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/11261",
    "body": "I may be asking a dumb question but i need to make sure i'm not missing something here.\r\n\r\nIn a certain list I have a component that is required to repeat itself in a foreach loop.\r\n\r\nI need to control the component in each row seperately, when an operation occurs outside that specific component but in that row.\r\n\r\nIt can obviously achieved by creating a templated row component but I am trying to determine whether that can be done without creating additional components.\r\n\r\n### Some Code\r\n```razor\r\n@foreach (var data in pageModel.list)\r\n{\r\n    @code\r\n    {\r\n        callAttemptComponent callAttemptComponent1;\r\n        statusSelectComponent statusSelectComponent1;\r\n    }\r\n\r\n    <tr>\r\n        <td @onclick=\"@(() => selectedListItem(data))\">#@data.ID</td>\r\n        <td @onclick=\"@(() => selectedListItem(data))\">@data.fullName</td>\r\n        <td>@data.phone</td>\r\n        <td>@data.zipCode</td>\r\n        <td>@data.areaName</td>\r\n        <td><tagsFormat tags=\"@data.wcms_tags\" /></td>\r\n        <td>@Helpers.DateFormat(data.creationDate, \"short-date-time\")</td>\r\n        <td>\r\n            <callAttemptComponent @ref=\"callAttemptComponent1\" @key=\"@data.ID\" leadID=\"@data.ID\" count=\"@data.callAttemptsCount\" btnPressed=\"@callAttemptEvent\" />\r\n        </td>\r\n        <td>\r\n            <statusSelectComponent @ref=\"statusSelectComponent1\" @key=\"@data.ID\" leadStatusList=\"@leadStatusList\" leadID=\"@data.ID\" statusID=\"@data.statusID\" statusChanged=\"@statusChangedEvent\" />\r\n        </td>\r\n    </tr>\r\n}\r\n```",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/11261/comments",
    "author": "aiqoo",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-06-17T16:41:42Z",
        "body": "Thanks for contacting us, @aiqoo.\r\nIt's not really clear what your'e trying to do? Please describe the scenario and the problem you're facing in more details."
      },
      {
        "user": "egil",
        "created_at": "2019-06-17T17:07:39Z",
        "body": "I don't think `@code` is supposed to be nested inside other things on a page or component, is it?"
      },
      {
        "user": "aiqoo",
        "created_at": "2019-06-17T19:25:59Z",
        "body": "Thanks for the help\r\n\r\ni want to initialize the callAttemptComponent\r\nwhen status change inside statusSelectComponent \r\n\r\nIt is a simple and trivial thing when two components are present on a page using an event I change their state,,\r\nBut when I have a pair of components that should affect each other\r\nWhen they are repeated in a loop I can not get control and change their state,\r\n\r\n@code \r\nI was wrong to think\r\nThet @code in the loop its would be set in the scoop every run and that way I would gain control\r\n\r\n```razor\r\n@foreach (var data in pageModel.list)\r\n{\r\n    @code\r\n    {\r\n        callAttemptComponent callAttemptComponent1;\r\n        statusSelectComponent statusSelectComponent1;\r\n    }\r\n}\r\n```"
      },
      {
        "user": "aiqoo",
        "created_at": "2019-06-19T07:47:44Z",
        "body": "I solved this by add an instance of component object to the list and then I assigned to each component a reference of its own.\r\n\r\n**The question is whether it has a price in terms of performance and speed,\r\nAnd is there another way to make a connection between two components that are repeated in foreach?**\r\n"
      },
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-06-19T16:57:30Z",
        "body": "Looks like allowing `@code` in another block is an issue, and I've filed a separate issue to handle that.\r\nComing back to @aiqoo 's question regarding performance, you'll have to measure it for yourself. We have a high-level issue for perf, but it's not specific to a single scenario: #10449 "
      }
    ]
  },
  {
    "number": 11232,
    "title": "Dependency injection of custom IdentityUser class",
    "created_at": "2019-06-14T18:44:43Z",
    "closed_at": "2019-07-15T14:13:26Z",
    "labels": [
      "question",
      "Needs: Author Feedback",
      "area-identity"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/11232",
    "body": "Hi,\r\n\r\nI need help understanding how this could be done.\r\nWhat I am trying to achieve is dependency injection of UserManager<ApplicationUser> service in unreferenced assembly from main project. Everything is working if built in IdentityUser is used as type, but when trying to do the same with custom one, it can't build the service, no mater what I try.\r\n\r\n**Here is the execution chain with the built in IdentityUser class that works fine:**\r\nExecutable project startup class, ConfigureServices method call:\r\n```\r\n public void ConfigureServices(IServiceCollection services)\r\n {     \r\n    // removed other services for brevity\r\n    IdentityServiceLoader.LoadIdentityService(services, Config.GetConnectionString(\"Identity\"));\r\n }\r\n```\r\nExecutable project is referencing library assembly (application layer) containing implementation of LoadIdentityService method.\r\n\r\nLoadIdentityService then loads dynamically another library assembly, containing IIdentityService implementation (infrastructure layer) and calls RegisterIdentityService interface method.\r\n\r\n```\r\n    public sealed class IdentityServiceLoader\r\n    {\r\n        public static void LoadIdentityService(IServiceCollection services, string connectionString)\r\n        {            \r\n            var loader = PluginLoader.CreateFromAssemblyFile(Path.GetFullPath(Const.InfrastructurePath), PluginLoaderOptions.PreferSharedTypes);\r\n            var assembly = loader.LoadDefaultAssembly();\r\n\r\n            var serviceType = assembly.GetExportedTypes().Single(x => typeof(IIdentityService).IsAssignableFrom(x));       \r\n            var service = (IIdentityService)Activator.CreateInstance(serviceType);\r\n\r\n            service.RegisterIdentityService(services, connectionString);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nAnd finally infrastructure layer is implementing identityservice self registration into main project services collection.\r\n\r\n```\r\n     public class IdentityService : IIdentityService\r\n     {\r\n         public void RegisterIdentityService(IServiceCollection services, string connectionString)\r\n         {\r\n            services.AddDbContext<ApplicationIdentityDbContext>(options =>\r\n                options.UseSqlServer(connectionString));\r\n\r\n            services.AddIdentity<IdentityUser, IdentityRole>(options =>\r\n                {\r\n                    options.User.RequireUniqueEmail = true;\r\n                    options.Password.RequireNonAlphanumeric = false;\r\n                })\r\n                .AddEntityFrameworkStores<ApplicationIdentityDbContext>()\r\n                .AddDefaultTokenProviders();         \r\n        }\r\n     }\r\n```\r\n\r\n**The end user of this dependency injection is the identityservice itself**, trying to use the service in its command handler implementation.\r\n```\r\npublic sealed class CreateApplicationUserHandler : ICreateApplicationUserHandler\r\n    {\r\n        private readonly UserManager<IdentityUser> _userManager;\r\n        private readonly IMediator _mediator;\r\n\r\n        public CreateApplicationUserHandler(UserManager<IdentityUser> userManager, IMediator mediator)\r\n        {\r\n            _userManager = userManager;\r\n            _mediator = mediator;\r\n        }\r\n    }\r\n```\r\nIf used instead of IdentityUser with custom ApplicationUser (implemented at identity service assembly) it throws this exception:\r\n> System.AggregateException: 'Some services are not able to be constructed (Error while validating the service descriptor 'ServiceType: MediatR.IRequestHandler`2[Vigab.Application.Actions.Commands.CreateApplicationUserCommand,System.Guid] Lifetime: Transient ImplementationType: Vigab.Infrastructure.IdentityService.Handlers.Commands.CreateApplicationUserHandler': Unable to resolve service for type 'Microsoft.AspNetCore.Identity.UserManager`1[Vigab.Infrastructure.IdentityService.ApplicationUser]' while attempting to activate 'Vigab.Infrastructure.IdentityService.Handlers.Commands.CreateApplicationUserHandler'.)\r\n\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/11232/comments",
    "author": "mmaderic",
    "comments": [
      {
        "user": "blowdart",
        "created_at": "2019-06-17T16:48:55Z",
        "body": "@HaoK thoughts?"
      },
      {
        "user": "HaoK",
        "created_at": "2019-07-02T06:26:19Z",
        "body": "Including the working code isn't as helpful as including the code that is causing the error, can you include that as well?"
      },
      {
        "user": "mmaderic",
        "created_at": "2019-07-12T20:11:27Z",
        "body": "@HaoK  Hi, yes sure. \r\nHere is the non working example with custom ApplicationUser class, extending built in IdentityUser.\r\n_Code snippets 1 and 2 remain the same._\r\n\r\n```\r\npublic class IdentityService : IIdentityService\r\n     {\r\n         public void RegisterIdentityService(IServiceCollection services, string connectionString)\r\n         {\r\n            services.AddDbContext<ApplicationIdentityDbContext>(options =>\r\n                options.UseSqlServer(connectionString));\r\n\r\n            services.AddIdentity<ApplicationUser, IdentityRole>(options =>\r\n                {\r\n                    options.User.RequireUniqueEmail = true;\r\n                    options.Password.RequireNonAlphanumeric = false;\r\n                })\r\n                .AddEntityFrameworkStores<ApplicationIdentityDbContext>()\r\n                .AddDefaultTokenProviders();         \r\n        }\r\n     }\r\n\r\n    public class ApplicationUser : IdentityUser\r\n    {\r\n        public string Name { get; set; }\r\n        public string Surname { get; set; }\r\n    }\r\n```\r\n\r\n```\r\n    public sealed class CreateApplicationUserHandler : ICreateApplicationUserHandler\r\n    {\r\n        private readonly UserManager<ApplicationUser> _userManager;\r\n        private readonly IMediator _mediator;\r\n\r\n        public CreateApplicationUserHandler(UserManager<ApplicationUser> userManager, IMediator mediator)\r\n        {\r\n            _userManager = userManager;\r\n            _mediator = mediator;\r\n        }\r\n    }\r\n```\r\n\r\n\r\n\r\n\r\n\r\n"
      },
      {
        "user": "HaoK",
        "created_at": "2019-07-12T22:44:58Z",
        "body": "Does everything work if you add a reference to the unreferenced assembly that contains the types?"
      },
      {
        "user": "mmaderic",
        "created_at": "2019-07-12T23:14:07Z",
        "body": "It does work if called from ConfigureServices method.\r\n\r\n```\r\npublic void ConfigureServices(IServiceCollection services)\r\n        {       \r\n            var idService = new IdentityService();\r\n            idService.RegisterIdentityService(services, Config.GetConnectionString(\"Identity\"));\r\n        }\r\n```"
      },
      {
        "user": "mmaderic",
        "created_at": "2019-07-13T00:24:12Z",
        "body": "OK I assume now it is dependency injection issue after all.  GetService returns null.\r\n\r\n```\r\n    public sealed class CreateApplicationUserHandler : ICreateApplicationUserHandler\r\n    {\r\n        private readonly UserManager<ApplicationUser> _userManager;\r\n        private readonly IMediator _mediator;\r\n\r\n        public CreateApplicationUserHandler(IServiceProvider provider, IMediator mediator)\r\n        {\r\n            _userManager = (UserManager<ApplicationUser>)provider.GetService(typeof(UserManager<ApplicationUser>));\r\n            _mediator = mediator;\r\n        }\r\n  }\r\n```"
      },
      {
        "user": "mmaderic",
        "created_at": "2019-07-15T14:13:26Z",
        "body": "I have managed to solve the issue. \r\n**The problem is if you want to use service as self implementation from not referenced assembly execution context from main project.**\r\n\r\nFor example:\r\n`services.AddTransient<ApplicationUser>();` will not enable ApplicationUser instance injection, if this service is registered from service itself and not being referenced from main project.  In order to make this work, we need to define interface at any project that is referenced from main project and use the interface registration.\r\n\r\n`services.AddTransient<IApplicationUser, ApplicationUser>();`\r\n\r\nThe same works for UserManager class, where we need to extend the built in UserManager class as partial class and implement custom IUserManager interface. In that case we are able to use custom ApplicationUser class.\r\n\r\n"
      }
    ]
  },
  {
    "number": 11099,
    "title": "UriHelper cannot be used to navigate to non-Blazor URIs in server-side",
    "created_at": "2019-06-11T16:59:52Z",
    "closed_at": "2019-06-13T15:15:58Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/11099",
    "body": "# Repro\r\n\r\nCreate a new server-side Blazor app (with auth).\r\n\r\nTry to use `IUriHelper.NavigateTo(\"Identity/Account/Login\")` (make a button).\r\n\r\nIt will go to the Not Found page instead of doing an actual navigation. However, making an `<a href>` with the same URL will navigate to the login page.\r\n\r\nUsing preview 6",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/11099/comments",
    "author": "rynowak",
    "comments": [
      {
        "user": "pranavkm",
        "created_at": "2019-06-11T18:20:50Z",
        "body": "Does the Router have a `NotFoundContent` set? We specifically choose to show you the NotFoundContent if the navigation was started programatically (via `NavigateTo`) and the route that could not be addressed. \r\n\r\nThe pivot here is that `NavigateTo` is meant for navigating within the component route-space. You could use `NavigateTo(\"...\", force)` to force a browser redirect without the router being involved."
      },
      {
        "user": "rynowak",
        "created_at": "2019-06-13T15:15:58Z",
        "body": "Ah sorry. I'm a blazor noob. Thanks for the help."
      }
    ]
  },
  {
    "number": 10984,
    "title": "[Asp.Net Core 2.1] Decimal ToString with Specific Culture not working...",
    "created_at": "2019-06-07T12:42:56Z",
    "closed_at": "2019-07-15T21:39:17Z",
    "labels": [
      "question",
      "Needs: Author Feedback",
      "area-mvc"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/10984",
    "body": "I had a lot of problems with Culture in Asp.Net Core... I have a web app that need to force a \"fr-CH\" culture, nothing else. Very difficult to do, nothing has worked, and I tried a lot : the browser culture have priority always...\r\n\r\nSo finally, I decided to force it on my own line of codes:\r\n`Decimal rawValue = 45000;`\r\n`string convertedValue = rawValue.ToString(\"C0\", CultureInfo.CreateSpecificCulture(\"fr-CH\"));`\r\n\r\nOn my french browser and Windows 10, I got what I want : \"45 000 CHF\"\r\nOn an english Windows and browser, I got \"45'000 fr.\"\r\n\r\nHow that can be??\r\n\r\nThe problem here is not to check what is the correct result, but that the result change on different systems.\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/10984/comments",
    "author": "BlueBird67",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-06-11T16:56:24Z",
        "body": "Thanks for contacting us, @BlueBird67.\r\nAre you using request localization middleware? If so, by removing it you will ignore the culture info passed from the browser and you can enforce what you have on the server."
      },
      {
        "user": "hishamco",
        "created_at": "2019-07-13T19:05:12Z",
        "body": "@BlueBird67 is this still happen on the latest bits?"
      },
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-07-15T21:39:22Z",
        "body": "Hi. We're closing this issue as we have heard no response from you for some time now. If you have more details and are encountering this issue please add a new reply and re-open the issue."
      }
    ]
  },
  {
    "number": 10980,
    "title": "[SignalR] Access HubContext in Ctor of strongly typed Hub",
    "created_at": "2019-06-07T07:27:31Z",
    "closed_at": "2019-06-11T10:18:41Z",
    "labels": [
      "question",
      "area-signalr"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/10980",
    "body": "Is it/should it be possible to access the `HubContext `in the constructor of a strongly typed hub?\r\nI´m trying to initialize some members of my hub in the ctor with values from `context.items` but the context is null at that time. Is this intended by design?",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/10980/comments",
    "author": "ddweber",
    "comments": [
      {
        "user": "analogrelay",
        "created_at": "2019-06-07T21:51:56Z",
        "body": "Can you post sample code that reproduces the issue? The `Context` property *should* be accessible in `OnConnectedAsync`, but it **would** be null in the constructor."
      },
      {
        "user": "ddweber",
        "created_at": "2019-06-11T10:18:41Z",
        "body": "> The Context property should be accessible in OnConnectedAsync, but it would be null in the constructor.\r\n\r\nOkay, thats the case in my application and all I wanted to clarify :)\r\nThanks for the answer."
      }
    ]
  },
  {
    "number": 10835,
    "title": "Override Blazor hub onconnect/ondisconnect/onreconnect",
    "created_at": "2019-06-04T10:51:52Z",
    "closed_at": "2019-06-07T17:39:50Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/10835",
    "body": "In the Server-side Blazor, I want to set up a reaction to the client connection, disconnection and reconnection. As I understand it, this can be done by overriding the corresponding hub blazor methods. But I can not figure out how to implement it. Is it possible to override the blazor hub (OnConnected/OnDisconnected/OnReconnected) methods? Maybe there are some events or callbacks for these (OnConnected/OnDisconnected/OnReconnected) purposes?\r\n\r\nI need this to correctly handle client shutdown (destroy or re-create objects, etc.)",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/10835/comments",
    "author": "astecenko",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-06-04T16:57:22Z",
        "body": "Thanks for contacting us, @astecenko.\r\nThis is possible today. You can implement a custom `CircuitHandler` and register it. "
      }
    ]
  },
  {
    "number": 10796,
    "title": "Blazor: Calling Javasscript Interop on Program.cs ",
    "created_at": "2019-06-03T20:16:26Z",
    "closed_at": "2019-06-04T10:13:14Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/10796",
    "body": "Hello,\r\n\r\nI need to make a Javascript Interop call on the Program.cs. Please, check my code below:\r\n\r\n    public class Program\r\n    {\r\n        public static void Main(string[] args)\r\n        {\r\n            var host = CreateHostBuilder(args).Build();\r\n            using (var scope = host.Services.CreateScope())\r\n            {\r\n                var js = scope.ServiceProvider.GetRequiredService<IJSRuntime>();\r\n                var lang = js.InvokeAsync<string>(\"myJsFunctions.browserLanguage\").Result;\r\n                CultureInfo.DefaultThreadCurrentCulture = new CultureInfo(lang);                \r\n            }\r\n            host.Run();\r\n        }\r\n\r\n        public static IWebAssemblyHostBuilder CreateHostBuilder(string[] args) =>\r\n            BlazorWebAssemblyHost.CreateDefaultBuilder()\r\n                .UseBlazorStartup<Startup>();\r\n    }\r\n\r\nI've tried all the possible ways to make that async call, but in all the cases the application is not started on the browser, and it freezes on the loading... page.\r\n\r\nAm I doing something wrong? As you can see, I need to catch the browser language before the application is loaded.\r\n\r\nThanks!\r\n\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/10796/comments",
    "author": "rodrigosendin",
    "comments": [
      {
        "user": "3x0dv5",
        "created_at": "2019-06-04T10:02:52Z",
        "body": "Wouldn't it be better on the init of your main page?"
      },
      {
        "user": "SteveSandersonMS",
        "created_at": "2019-06-04T10:13:14Z",
        "body": "There's no guarantee that JS interop will be ready before the Blazor application is started up. You will need to move JS interop calls into a later place. For example, in your `Startup` class:\r\n\r\n```cs\r\npublic void Configure(IComponentsApplicationBuilder app, IJSRuntime jSRuntime)\r\n{\r\n    app.AddComponent<App>(\"app\");\r\n\r\n    _ = jSRuntime.InvokeAsync<object>(\"alert\", \"Hello, world!\");\r\n}\r\n```"
      },
      {
        "user": "SteveSandersonMS",
        "created_at": "2019-06-04T10:14:50Z",
        "body": "> As you can see, I need to catch the browser language before the application is loaded.\r\n\r\nIf you could clarify why you think you have to do it in `Program.cs` and not in a regular component (or in `Startup.cs` if you really want), that would help us to provide better advice."
      },
      {
        "user": "SteveSandersonMS",
        "created_at": "2019-06-04T10:18:56Z",
        "body": "I'm guessing it's because you want to know the language synchronously. If my guess is correct, you can do it like this in `Startup.cs`:\r\n\r\n```cs\r\npublic void Configure(IComponentsApplicationBuilder app, IJSRuntime jSRuntime)\r\n{\r\n    var language = ((IJSInProcessRuntime)jSRuntime).Invoke<string>(\"getBrowserLanguage\");\r\n    Console.WriteLine(\"Your language is: \" + language);\r\n\r\n    app.AddComponent<App>(\"app\");\r\n}\r\n```\r\n\r\n... and the following JS code in `index.html`:\r\n\r\n```html\r\n<script>\r\n    function getBrowserLanguage() {\r\n        return navigator.language;\r\n    }\r\n</script>\r\n```\r\n\r\nAlternatively you could issue a similar interop call from any of your components."
      },
      {
        "user": "rodrigosendin",
        "created_at": "2019-06-04T12:27:59Z",
        "body": "Thanks a lot! That works great, and I've learned two new things:\r\n1. I can inject services on the Startup.Configure Method\r\n2. I can make synchonous JSInterop calls\r\n\r\nSorry if this is not the correct channel for this kind of question. All the answers I found on the web lead me to solve this on the Program.cs, with an async call.\r\n\r\nThank you for your help!"
      }
    ]
  },
  {
    "number": 10755,
    "title": "Blazor add DataContext",
    "created_at": "2019-06-03T05:45:08Z",
    "closed_at": "2019-06-04T10:31:04Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/10755",
    "body": "I personally (and most of my colleagues) prefer using MVVM style programming.\r\nI am currently building a new Blazor app with MVVM in mind and here is what I have:\r\n```razor\r\n@page \"/login\"\r\n@inherits PageBase<AppLoginViewModel>\r\n\r\n<h1>Please Login to continue</h1>\r\n\r\n<form>\r\n    <fieldset disabled=\"@ViewModel.IsBusy\">\r\n        <div class=\"modal-body\">\r\n            <div class=\"form-group\">\r\n                <label for=\"username\">Username</label>\r\n                <input bind=\"@ViewModel.Username\" class=\"form-control\" type=\"text\" id=\"username\" name=\"username\" />\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"password\">Password</label>\r\n                <input bind=\"@ViewModel.Password\" class=\"form-control\" type=\"password\" id=\"password\" name=\"password\" />\r\n            </div>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n            <button type=\"submit\" class=\"btn btn-primary\" disabled=\"@(!ViewModel.CanLogin)\" onclick=\"@ViewModel.OnLoginAsync\">Login</button>\r\n        </div>\r\n    </fieldset>\r\n</form>\r\n```\r\nAs you can see **I have to repeate ViewModel** in every binding like: `@ViewModel.xxx`\r\n\r\n### Describe the solution you'd like\r\nA better approach would be to have an ability to set DataContext/BindingContext of any tag, or even of an entire component.\r\nSo the code above could be written as:\r\n```razor\r\n@page \"/login\"\r\n@inherits PageBase<AppLoginViewModel>\r\n\r\n<h1>Please Login to continue</h1>\r\n\r\n<form dataContext=\"@ViewModel\">\r\n    <fieldset disabled=\"@IsBusy\">\r\n        <div class=\"modal-body\">\r\n            <div class=\"form-group\">\r\n                <label for=\"username\">Username</label>\r\n                <input bind=\"@Username\" class=\"form-control\" type=\"text\" id=\"username\" name=\"username\" />\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"password\">Password</label>\r\n                <input bind=\"@Password\" class=\"form-control\" type=\"password\" id=\"password\" name=\"password\" />\r\n            </div>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n            <button type=\"submit\" class=\"btn btn-primary\" disabled=\"@(!CanLogin)\" onclick=\"@OnLoginAsync\">Login</button>\r\n        </div>\r\n    </fieldset>\r\n</form>\r\n```\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/10755/comments",
    "author": "mgochmuradov",
    "comments": [
      {
        "user": "SteveSandersonMS",
        "created_at": "2019-06-04T10:31:04Z",
        "body": "Thanks for the suggestion.\r\n\r\nThis is not something we're likely do to, because the drawbacks would be too severe, plus the complexity would be too high. Once you're in a `dataContext` region, you'd lose the ability to reference things outside that object (without yet another syntax), plus the compiler would have to become way smarter still to know where to inject the \"data context\" prefix into expressions like `onclick=\"@(() => DoSomething(Name))\"` - would it interpret that as `ViewModel.DoSomething(Name)` or `ViewModel.DoSomething(ViewModel.Name)` or `DoSomething(ViewModel.Name)`? It's too ambiguous.\r\n\r\nAs an alternative, I'd recommend just creating short aliases for things if you want your code to be shorter. For example, define a property like:\r\n\r\n```\r\n    private MyViewModel vm => ViewModel;\r\n```\r\n\r\n... and then all your expressions in the markup can be reduced to `bind=\"@vm.Name\"` etc, without any ambiguity."
      }
    ]
  },
  {
    "number": 10697,
    "title": "Blazor Client Side Project Razor tag InputNumber Visual Studio syntax error",
    "created_at": "2019-05-31T16:34:40Z",
    "closed_at": "2019-05-31T16:45:59Z",
    "labels": [
      "question",
      ":heavy_check_mark: Resolution: By Design",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/10697",
    "body": "In a Blazor Client Side project, the following InputNumber tag causes Visual Studio to display an error.\r\n\r\n`<InputNumber id=\"todoPriorityNumber\" bind-value=\"@newTodo.PriorityNumber\" class=\"form-control\" />`\r\n\r\nThis is the error message.\r\n\r\n```\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tCS0411\tThe type arguments for method 'TypeInference.CreateInputNumber_0(RenderTreeBuilder, int, int, string, int, string, int, object, int, object)' cannot be inferred from the usage. Try specifying the type arguments explicitly.\tBlazorClient1 C:\\Users\\vmtest\\source\\repos\\BlazorClient1\\BlazorClient1\\Pages\\Todo.razor\t1\tActive\r\n```\r\n\r\nHowever, the project can be compiled without error.\r\n\r\nChanging attibute `bind-value` to `bind-Value` (uppercase V) seems make the error going away. However, the bind attribute should not be case sensitive.",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/10697/comments",
    "author": "zzhang2001",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-05-31T16:45:59Z",
        "body": "Thanks for contacting us, @zzhang2001.\r\nThe problem you're facing is because component attributes are case-sensitive. This is by design."
      }
    ]
  },
  {
    "number": 10665,
    "title": "Asp.net core 2.0 Razor Pages doesn't search RootDir\\Shared for layout.",
    "created_at": "2019-05-30T21:45:21Z",
    "closed_at": "2019-05-30T22:03:59Z",
    "labels": [
      "question",
      "area-mvc"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/10665",
    "body": "### Describe the bug\r\nI have a new vanilla asp.net core 2.0 application (asp.net core 2.1 doesn't seem to exhibit this behaviour). \r\nI have some Razor pages under the /Pages directory. When I move them all (including the Shared folder) to live under a new sub directory, and then set the Razor Options \"RootDirectory\" to be this new location, MVC no longer searches in the \"Shared\" folder under this new root directory when finding the layout. \r\n\r\nThe error is:\r\n```\r\nThe layout view '_Layout' could not be located. The following locations were searched:\r\n/Pages/Moogle/_Layout.cshtml\r\n/Views/Shared/_Layout.cshtml\r\n```\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Create a new asp.net core 2.0 project\r\n2. Create this razor pages structure:\r\n\r\n```\r\n/Pages/Shared/_Layout.cshtml\r\n/Pages/Index.cshtml\r\n\r\n```\r\n3. Make sure Index.cshtml uses _Layout.\r\n4. Verify everything works as expected.\r\n5. Move the Shared folder and Index.cshtml into a new parent directory so you end up with this structure:\r\n```\r\n/Pages/Moogle/Shared/_Layout.cshtml\r\n/Pages/Moogle/Index.cshtml\r\n\r\n```\r\n6. Configure Razor Pages options with the new root directory:\r\n\r\n```\r\n                                   .AddRazorPagesOptions((o) =>\r\n                                   {\r\n                                       o.RootDirectory = $\"/Pages/Moogle\";                                       \r\n                                   });\r\n```\r\n\r\n7. Run the application. You'll get the error - it no longer searches the \"Shared\" folder in the new root location when resolving _Layout.\r\n\r\n### Expected behavior\r\nUsing a new root directory should still resolve layouts as before.\r\n\r\n### Screenshots\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n### Additional context\r\nAdd any other context about the problem here.\r\nInclude the output of `dotnet --info`\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/10665/comments",
    "author": "dazinator",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-05-30T22:03:59Z",
        "body": "Thanks for contacting us, @dazinator.\r\nASP.NET Core 2.0 is out of support. You have the option to move to a later version of ASP.NET Core where it's fixed or contact Microsoft support for other support options."
      },
      {
        "user": "dazinator",
        "created_at": "2019-05-30T22:09:14Z",
        "body": "Ah apologies. I commonly mis-remember which versions are on long term support, for some reason I always think 2.0 is the long term support one! I guess it must be 2.1 ;-)"
      }
    ]
  },
  {
    "number": 10658,
    "title": "Cannot rename properties/variables/methods referenced in blazor files in VS 2019",
    "created_at": "2019-05-30T18:34:21Z",
    "closed_at": "2019-05-31T16:55:47Z",
    "labels": [
      "question",
      "External",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/10658",
    "body": "### Describe the bug\r\nCannot rename any C# property/method/variable referenced in Blazor (.razor) files\r\nError happens with 3.0.0-preview5, VS 2019 preview and non preview.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Select a public property in a class used in blazor components\r\n2. Right click and select rename\r\n3. VS2019 will find all the right references\r\n4. Apply \r\n5. \"Changing document <blazor project>/Component1.g.cs is not supported\"\r\n\r\n### Expected behavior\r\nAll references renamed\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/10658/comments",
    "author": "ErikApption",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-05-30T22:01:41Z",
        "body": "Thanks for contacting us, @ErikApption.\r\nThanks for trying out Blazor.\r\n@rynowak do you think this will be resolved when we enable `Partial Class` -es, or is this a pure tooling issue?"
      },
      {
        "user": "rynowak",
        "created_at": "2019-05-30T23:05:58Z",
        "body": "This is a known feature gap in tooling. Razor does not have refactoring/rename support when initiated from another file. "
      }
    ]
  },
  {
    "number": 10631,
    "title": "[Blazor ASP.NET Core hosted] Conditionally launch client side Blazor app.",
    "created_at": "2019-05-29T22:30:04Z",
    "closed_at": "2019-05-31T17:09:06Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/10631",
    "body": "Feature request for `Blazor (ASP.NET Core hosted)` solutions (consisting of a client side Blazor app project plus server side / WebAPI project).\r\n\r\nI have a domain address such as `contoso.com`. When people visit `contoso.com` I would like to detect if the visitor has been authenticated to use my Blazor app and then:\r\n\r\n1) If the visitor has been authenticated, proceed and automatically launch the client side Blazor app.\r\n\r\n2) If the visitor has not  been authenticated, I would like the `contoso.com` endpoint to show a simple webpage with product information where visitors can learn about my app and a big button that the visitor can click to launch the client side Blazor app. \r\n\r\nThe bottom line is that I really don’t want to launch the client side Blazor app when someone is just visiting the `contoso.com` address because the app may take a very long time to load and startup specially in slow phones with bad connections. It is only until the visitor has **explicitly** chosen to launch the app or has **already been authenticated** to the app that I wish the client side Blazor app to be launched.\r\n\r\nI suspect this will be a common scenario for client side Blazor apps, so it would be nice if the functionality was built-in as part of the Blazor infrastructure.\r\n\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/10631/comments",
    "author": "rxelizondo",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-05-31T17:09:06Z",
        "body": "Thanks for contacting us, @rxelizondo.\r\nYou can do this with routing - and designate different endpoints for your authenticated and non-authenticated pages. And sure one of those can be Blazor, and the other - not."
      },
      {
        "user": "rxelizondo",
        "created_at": "2019-05-31T18:14:47Z",
        "body": "@mkArtakMSFT - Thank you very much for your help, however, I am not sure how you can achieve such functionality with routing, but maybe I am missing something, walking through the scenario, it would work something like this:\r\n\r\n1) Visitor enters `contoso.com` in the browser.\r\n2) The request is sent to the server and ASP.NET begins processing it.\r\n3) Because there is no `Controller/Action` specified in `contoso.com`, the default will be `Home/Index`.\r\n4) Assuming that I have implemented the `Home/Index` action, it will then be called by the routing engine.\r\n5) Once `Home/Index` is executing, I can detect if the  user is authenticated or not, if not, I can redirect the request to some informational page, but what happens if the user is authenticated? then what? How do I automatically start the Blazor client side app?\r\n\r\nIs that what you had in mind or did I totally missed the point?\r\n\r\nThanks.\r\n\r\n"
      }
    ]
  },
  {
    "number": 10559,
    "title": "Server-side Blazor, client UI update (push from server)",
    "created_at": "2019-05-27T21:34:11Z",
    "closed_at": "2019-05-31T17:24:32Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/10559",
    "body": "I am wondering what is the best practice in server-side Blazor to update the client UI on some server side event. For example there is a background job running in the server and on some event it's want to update the connected client UI (without refresh from client), previously I was using SignalR for that, but I am not sure it's is the right approach for this on srever-side blazor. ",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/10559/comments",
    "author": "ulkaio",
    "comments": [
      {
        "user": "davidfowl",
        "created_at": "2019-05-28T09:04:20Z",
        "body": "Are you trying to push a UI update to all clients?"
      },
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-05-28T17:15:01Z",
        "body": "Blazor server-side execution context is bound to a single client. If there are two clients - there are two separate execution context. Each one of these can independently fire `StateHasChanged` and that would result the appropriate client to be updated. "
      },
      {
        "user": "rynowak",
        "created_at": "2019-05-28T19:00:28Z",
        "body": "If your code is running on a background thread inside a component, it's pretty easy to update the UI.\r\n\r\n```C#\r\nInvoke(() =>\r\n{\r\n     // Update properties and other state\r\n     .....\r\n    //\r\n    StateHasChanged(); // Trigger UI update\r\n});```\r\n\r\n"
      }
    ]
  },
  {
    "number": 10548,
    "title": "Integrate javascript library in Razor ServerSide ends in endless requests to server",
    "created_at": "2019-05-26T20:05:08Z",
    "closed_at": "2019-05-31T17:26:25Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/10548",
    "body": "I would like to integrate fullcalendar.io into an application written using Blazor ServerSide components.\r\nThe code looks like this:\r\n\r\n```js\r\nwindow.ShowCalendar = (message) => {\r\n        var calendarEl = document.getElementById('calendar');\r\n\r\n        var calendar = new FullCalendar.Calendar(calendarEl, {\r\n          aspectRatio: 1.5,\r\n          header: {\r\n            left: 'prev,next',\r\n            center: 'title',\r\n            right: 'resourceTimelineDay,resourceTimelineWeek,resourceTimelineMonth'\r\n          },\r\n          plugins: [ 'dayGrid', 'resourceTimeline' ],\r\n          defaultView: 'resourceTimelineDay',\r\n          resources: '/api/resources',\r\n          events: '/api/events'\r\n        });\r\n        calendar.render();\r\n      };\r\n```\r\n\r\n```razor\r\n@functions {\r\n    protected override async Task OnAfterRenderAsync()\r\n    {\r\n        await this.JsRuntime.InvokeAsync<string>(\"ShowCalendar\", \"\");\r\n\r\n        StateHasChanged();\r\n    }\r\n}\r\n```\r\n\r\nThe problem is that the api calls are continuously raised.\r\nWhat's the problem?\r\n\r\nI also tried to change it using JSInterop, but without success. Something like this:\r\n\r\n```js\r\nvar calendar = new FullCalendar.Calendar(calendarEl, {\r\n          aspectRatio: 1.5,\r\n          header: {\r\n            left: 'prev,next',\r\n            center: 'title',\r\n            right: 'resourceTimelineDay,resourceTimelineWeek,resourceTimelineMonth'\r\n          },\r\n          plugins: [ 'dayGrid', 'resourceTimeline' ],\r\n          defaultView: 'resourceTimelineDay',\r\n          resources: DotNet.invokeMethodAsync(\"WebApplication.Views\", \"GetResourcesAsync\"),\r\n          events: DotNet.invokeMethodAsync(\"WebApplication.Views\", \"GetEventsAsync\")\r\n        });\r\n```\r\n\r\n```razor\r\n[JSInvokable]\r\n  public static async Task<CalendarEvent[]> GetEventsAsync()\r\n  {\r\n      return ...\r\n  }\r\n\r\n  [JSInvokable]\r\n  public static async Task<CalendarResource[]> GetResourcesAsync()\r\n  {\r\n      return ...\r\n  }\r\n```",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/10548/comments",
    "author": "fleed",
    "comments": [
      {
        "user": "kennywangjin",
        "created_at": "2019-05-27T08:15:09Z",
        "body": "I think you should stop calling `StateHasChanged` in OnAfterRenderAsync! Otherwise You would get infinite rendering: rendering=>OnAfterRenderAsync=>StateHasChanged=>again rendering."
      },
      {
        "user": "fleed",
        "created_at": "2019-05-31T18:09:50Z",
        "body": "Thank you @kennywangjin , that fixed it."
      }
    ]
  },
  {
    "number": 10544,
    "title": "How to convert EventCallback<T> to EventCallback<bool>",
    "created_at": "2019-05-26T11:18:18Z",
    "closed_at": "2019-06-24T21:03:12Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/10544",
    "body": "Blazor has a generic class named EventCallback\r\n\r\nHow can I cast a \r\n`\r\n    protected EventCallback<T> ValueChanged { get; set; }\r\n`\r\nto \r\n`\r\n    EventCallback<bool> BoolChanged\r\n       {\r\n         get\r\n         {\r\n           if (typeof(T) == typeof(bool))\r\n             return ValueChanged; //<== Error needs cast some how?\r\n         }\r\n       }\r\n`",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/10544/comments",
    "author": "enetstudio",
    "comments": [
      {
        "user": "arivera12",
        "created_at": "2019-05-26T18:02:09Z",
        "body": "It seems you don't understand how generics works. When you call EventCallback based on your definition it should expect that you define a type for him. Example `EventCallback<bool>?.Invoke();`. The type `T `should be define somewhere else maybe on the class or in a method. Example `MyClass<T>`. When you call `MyClass `it should prompt you to define what is `T`. Let's say T is is bool so you should call your class like this `MyClass<bool>()`. Does this helps?"
      },
      {
        "user": "enetstudio",
        "created_at": "2019-05-26T22:06:19Z",
        "body": "@arivera12, suppose I've the following components\r\n```\r\n@*Parent.razor*@\r\n\r\n@page \"/Parent\"\r\n\r\n<div>\r\n    <Child Data=\"@Data\" ValueChanged=\"@ValueChanged\">\r\n    </Child>\r\n</div>\r\n\r\n@functions {\r\n    List<Item> Data = new List<Item>();\r\n\r\n    private void ValueChanged(Item item)\r\n    {        \r\n    }\r\n}\r\n```\r\nAnd \r\n\r\n```\r\n@*Child.razor*@\r\n\r\n@typeparam TData\r\n\r\n<div>\r\n    @foreach (var item in Data)\r\n    {\r\n        <button onclick=\"@(() => ValueChanged.InvokeAsync(item))\"></button>\r\n    }\r\n</div>\r\n\r\n@functions {\r\n    [Parameter]\r\n    public IEnumerable<TData> Data { get; set; }\r\n\r\n    [Parameter]\r\n    protected EventCallback<TData> ValueChanged { get; set; }\r\n}\r\n```\r\n\r\n```\r\n// Item.cs\r\npublic class Item\r\n{\r\n     public Item()\r\n     {\r\n\r\n     }\r\n}\r\n```\r\n\r\nAs you can see I've two components, and am using generics(typeparam) with EventCallback...\r\nNow, I want to define EventCallback<bool> property with a get accessor that checks if \r\nthe type of TData is bool, and if it does, coverts the ValueChanged delegate to \r\n`EventCallback<bool>` \r\n\r\n```\r\nEventCallback<bool> BoolChanged { \r\n    get \r\n    { \r\n       if (typeof(TData) == typeof(bool)) return ValueChanged; // Needs conversion, but how\r\n    } \r\n } \r\n\r\n```"
      },
      {
        "user": "arivera12",
        "created_at": "2019-05-26T22:42:19Z",
        "body": "You can use Action instead of EventCallback take note that TData must be define on the child component call like this:\r\n`<Child TData=bool Data=\"@Data\" ValueChanged=\"@ValueChanged\"></Child>`\r\nCan you please explain what is exactly what are you trying to achieve?\r\n"
      },
      {
        "user": "arivera12",
        "created_at": "2019-05-26T22:47:21Z",
        "body": "Please try the below code example and see if its works and achieve what you trying to do.\r\n```\r\n@page \"/Parent\"\r\n\r\n<div>\r\n    <Child TData=bool Data=\"@Data\" ValueChanged=\"@((item) =>ValueChanged(item))\">\r\n    </Child>\r\n</div>\r\n\r\n@functions {\r\n    List<Item> Data = new List<Item>();\r\n\r\n    private void ValueChanged(bool item)\r\n    {        \r\n    }\r\n}\r\n```\r\n\r\n```\r\n@typeparam TData\r\n\r\n<div>\r\n    @foreach (var item in Data)\r\n    {\r\n        var currItem = item;\r\n        <button onclick=\"@(() => ValueChanged?.Invoke(currItem))\"></button>\r\n    }\r\n</div>\r\n\r\n@functions {\r\n    [Parameter]\r\n    public IEnumerable<TData> Data { get; set; }\r\n\r\n    [Parameter]\r\n    protected Action<TData> ValueChanged { get; set; }\r\n}\r\n```"
      },
      {
        "user": "enetstudio",
        "created_at": "2019-05-27T18:58:26Z",
        "body": "@arivera12\r\nThanks for your response\r\nYour suggestion that I use an Action delegate is not compatible with the recommendation of the Blazor team to use EventCallback instead of the Action delegate. However, my question is still remains the same. The reasoning behind this is not entirely clear to me: I saw this question in stackoverflow and am trying to find out if it can be done at all\r\n\r\nAnyhow thanks for your efforts...  "
      },
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-06-24T21:03:12Z",
        "body": "Thanks for contacting us. We believe that the question you've raised have been answered. If you still feel a need to continue the discussion, feel free to reopen it and add your comments."
      },
      {
        "user": "enetstudio",
        "created_at": "2019-06-24T21:38:18Z",
        "body": "The following is the answer to my question above. It is imported from StackOverflow:\r\n\r\nprotected EventCallback<bool> BoolChanged => (EventCallback<bool>)(object)ValueChanged;\r\n\r\nThank you..."
      }
    ]
  },
  {
    "number": 10441,
    "title": "[Question] - Problem with Mvc and Routing",
    "created_at": "2019-05-22T10:39:21Z",
    "closed_at": "2019-05-23T16:40:41Z",
    "labels": [
      "question",
      "area-mvc"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/10441",
    "body": "I want my application to force a user to go through some initial setup wizard (MVC), before the system is operational. I'll deploy it with a setting, `SetupComplete = false` and once they complete the setup wizard, i'll set that setting to true. Once setup is complete, the rest of the system should become operational - by which I mean the other MVC controllers that I have within the application, can now be successfully routed too - but the Setup wizard (SetupController) will no longer be able to be routed to. \r\nOne last thing to note is that in order to perform the setup, The SetupController will redirect the anonymous user to a Login page provided as an MVC Controller in a nuget package. It will present the user with a login screen, and ask them to enter a code that has been written to a file on the server. It uses cookie authentication to log the user in, then redirect back to the SetupController. This means that my SetupController can / will have some MVC actions that require authentication.\r\n\r\nWhilst the system is in `SetupComplete = false` state then:\r\n - I want to limit which MVC controllers can be routed to. \r\n    - SetupController\r\n    - LoginController (in referenced nuget package)\r\n\r\n- If the routes aren't matched, then I'll add a redirect to the middleware pipeline, redirecting to the default route (SetupController's welcome page)\r\n\r\nGiven these constraints the way I have tried to model this, is in the middleware pipeline like so:\r\n\r\n```csharp\r\n  app.UseAuthentication(); // Needed so that I can allow an admin to login and complete setup.\r\n  app.MapWhen((context) =>\r\n            {\r\n                var opts = context.RequestServices.GetRequiredService<IOptions<PlatformSetupOptions>>();\r\n                return !opts.Value.SetupComplete;\r\n            }, (branch) =>\r\n            {\r\n                // Setup wizard not yet complete\r\n                // Default route should map to SetupController Welcome, no other MVC controllers should be routed.\r\n                branch.UseEndpoints(endpoints =>\r\n                {                   \r\n                   // What do I put here so that only my SetupController can be routed to? Requests for other controllers should 404\r\n                });\r\n                // Route not matched - so do response.Redirect() here..\r\n}\r\n\r\n// Back in the default middleware pipeline again..\r\n// Requests should only be allowed to reach this far if PlatformSetupOptions.Value.SetupComplete = true;\r\napp.UseEndpoints(endpoints =>\r\n                {                   \r\n                   // What do I put here so that ALL OTHER (Not SetupController) controllers can be routed to?\r\n                });\r\n```\r\n\r\nI thought about using ApplicationParts, but that seems to be setup in ConfigureServices(), so I can't seem to conditionally use one set of parts / mvc assemblies in my branched pipeline, and another set in my default pipeline (correct me if there is way for me to achieve that). \r\n\r\nSo my current thinking is that, as all MVC Application parts will be available, in the branch of the middleware pipeline for when setup is not yet complete, I need to figure out how to only allow routing to match a subset of them (i.e SetupController). In the default pipeline (after setup is complete) I haven't found a way for enabling routing to match \"all controllers except SetupController\" either. The best I am able to think of in that case, is allow it to be routed to, and then put in logic into my SetupController actions that return a 404 if SetupComplete = true - to mimic as if it doesn't exist. Not very nice in my opinion.\r\n\r\nHow should this feature be modelled in asp.net core? Am I on the right track? Is it possible to model this scenario nicely in asp.net core today?\r\n\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/10441/comments",
    "author": "dazinator",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-05-23T16:40:40Z",
        "body": "Thanks for contacting us, @dazinator.\r\nWhat you're trying to do is very similar to what OrchardCore provides out of the box. You can see how it's done there or even just use OrchardCore for your needs, if that works."
      },
      {
        "user": "dazinator",
        "created_at": "2019-05-24T08:40:06Z",
        "body": "Thanks. I am curious to see how Orchard handles it, so I have raised an issue over there to see if someone can point me to the relevant parts (it's quite a large code base to navigate).\r\n\r\nIn addition, I did figure out one way to handle it in the end. I am not convinced it's the nicest way, as I'd prefer a way that can tap into authorization policies or conventions. Basically using MapWhen() with some custom middleware inserted to only allow requests through for certain whitelisted paths (i.e particular controller actions). \r\n```csharp\r\n   app.UseAuthentication(); // Needed so that I can allow an admin to login and complete setup.\r\n  app.MapWhen((context) =>\r\n            {\r\n                var opts = context.RequestServices.GetRequiredService<IOptions<PlatformSetupOptions>>();\r\n                return !opts.Value.SetupComplete;\r\n            }, (branch) =>\r\n            {\r\n                // Setup not yet complete\r\n                branch.UseSystemSetup(); // my custom middleware to only allow certain-  whitelisted request paths through necessary for system setup functionality. Non approved paths will be redirected to the  /SetupWelcome approved path - handled my MVC part of UseEndPoints() middleware next in pipeline.\r\n\r\n                branch.UseEndpoints(endpoints =>\r\n                {                   \r\n                   endpoints.MapDefaultControllerRoute();\r\n                });                \r\n   }\r\n```\r\n"
      },
      {
        "user": "dazinator",
        "created_at": "2019-09-05T20:12:03Z",
        "body": "I found a nice way to handle this in the end.\r\n\r\nI use a global Mvc ResourceFilter to prevent access to controller endpoints when the status of the system is Setup Incomplete. However I do need some Mvc actions to remain operational in this state (the ones involved in completing the setup process) so I add another Attribute based ResourceFilter above those ones which bypasses the global ResourceFilter allowing them to be accessed when the system setup is incomplete but not when it's complete (I.e the inverse)."
      }
    ]
  },
  {
    "number": 10404,
    "title": "[Question] How to add Custom JsonConverter to Blazor Client application",
    "created_at": "2019-05-20T20:00:02Z",
    "closed_at": "2019-05-22T15:26:12Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/10404",
    "body": "I have created my own custom JsonConverter for custom data structure ... But I can use it only with JsonConvert.DeserializeObject directly\r\nIt would be nice somehow to register in Blazor Client Application Custom JsonConverter\r\nBut using services.AddMvc() it is not possible because is not found anywhere in assembly as extension method\r\n\r\nHow to add custom JsonConverter ?",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/10404/comments",
    "author": "redradist",
    "comments": [
      {
        "user": "SteveSandersonMS",
        "created_at": "2019-05-22T15:26:11Z",
        "body": "It depends what you're trying to do. In what way do you want the framework to make use of your converter?\r\n\r\nIs it when you call HTTP methods like `Http.GetJsonAsync`? If so, that's never going to use Json.NET converters since it doesn't use Json.NET internally. It uses SimpleJSON (which is something we're in process of changing currently - we're moving to the new System.Text.Json library everywhere).\r\n\r\nIf you want to use Json.NET to deserialize HTTP responses, consider replacing calls to `Http.GetJsonAsync` with `Http.GetStringAsync` and passing the string to your chosen deserializer."
      },
      {
        "user": "redradist",
        "created_at": "2019-05-26T12:58:59Z",
        "body": "Okay, thanks !!\r\n\r\nSeems like Http.GetStringAsync is exactly what I want ...\r\nBut I'm curious why you have not added customization point for JsonConverter ?\r\nAlso it is not obvious why you have different Json converter on Server side and Front-End side. On server side it is possible to add option to NewtonsoftJson:\r\n\r\n`services.AddMvc().AddNewtonsoftJson(...);`\r\n\r\nBut on Front-End side it is not possible ( It would be nice to have possibility to add same service on Front-End as on Back-End side ..."
      }
    ]
  },
  {
    "number": 10377,
    "title": "Static Html Helper Not Working",
    "created_at": "2019-05-19T15:29:37Z",
    "closed_at": "2019-05-20T13:36:55Z",
    "labels": [
      "question",
      "area-mvc"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/10377",
    "body": "Hi, \r\nCan someone please tell me how the HtmlHelper class in Net Core MVC can be extended?\r\nWhat I have tried is the following :- \r\nCreate HtmlHelper Static Class. \r\nmethod :- public static string CreateDate(this HtmlHelper,String Message){}\r\n\r\nmethod is not accessible from within the Razor view when i do:\r\n\r\nHtml.\r\n\r\nthe ViewImports does have the helper namespace in as well.\r\n\r\nKind Regards",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/10377/comments",
    "author": "akash3456",
    "comments": [
      {
        "user": "pranavkm",
        "created_at": "2019-05-20T13:36:55Z",
        "body": "The injected `HtmlHelper` is an `IHtmlHelper<T>` instance. You should update the extension method to target this type: `public static string CreateDate<TValue>(this IHtmlHelper<TValue,String Message){}`"
      }
    ]
  },
  {
    "number": 10364,
    "title": "Make EndpointRouting produce verbose logging",
    "created_at": "2019-05-18T11:06:42Z",
    "closed_at": "2019-05-29T17:56:33Z",
    "labels": [
      "question",
      "area-mvc"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/10364",
    "body": "### Is your feature request related to a problem? Please describe.\r\nI am trying to return RedirectToAction() but there something I've misconfigured, so it doesn't work. All information I am getting however is \"InvalidOperationException: No route matches the supplied values.\" I would beg to differ, but looking in the logs, I have no way of knowing what routes ASP.NET Core thinks it has, versus what controller and action it thinks I'm supplying, so I have no way of knowing where to look to find a solution. I mean, at a minimum an error containing the words \"supplied values\" without copying in _the supplied values_ is an affront to humanity, to he honest.\r\n\r\n### Describe the solution you'd like\r\nI would like it if when I have verbose logging enabled I could see the reasoning behind the failure to find a requested route. \r\n\r\n### Describe alternatives you've considered\r\nI have triple checked my configuration and tried to do some logging of my own, but these decisions are made way out of my control. \r\n\r\n### Additional context\r\nI could make up a two valid controllers, and two valid actions trying to do a redirecttoaction from one to the other and it magically not working and show the logs having no information about why. \r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/10364/comments",
    "author": "opinionmachine",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-05-20T17:06:47Z",
        "body": "Please share with us the logs you see so we can try to help you out."
      },
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-05-29T17:56:33Z",
        "body": "Hi. We're closing this issue as we have heard no response from you for some time now. If you have more details and are encountering this issue please add a new reply and re-open the issue."
      }
    ]
  },
  {
    "number": 10324,
    "title": "Create a IStringLocalizer in IStringLocalizerFactory which has access to scoped services from the HTTP request",
    "created_at": "2019-05-17T08:45:11Z",
    "closed_at": "2019-05-20T17:18:11Z",
    "labels": [
      "question",
      "area-mvc"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/10324",
    "body": "### Problem Description\r\n\r\nHi guys,\r\n\r\nI currently face the following issue for which I am looking for a solution and maybe some best practices how this could be solved.\r\n\r\nWith our current setup **Localization** is implemented without any factories and we solely use the non-generic `IStringLocalizer`, `IHtmlLocalizer `and `IViewLocalizer` interfaces to provide our own implementation. \r\n\r\nThe scoped lifecycle was needed in order to have access to some **HttpRequest** related information (e.g tenant).\r\n\r\n```\r\nservices.AddScoped<IStringLocalizer, MyStringLocalizer>();\r\nservices.AddScoped<IHtmlLocalizer, MyHtmlLocalizer>();\r\nservices.AddScoped<IViewLocalizer, MyViewLocalizer>();\r\n```\r\n\r\nThis all works fine and well until there was a requirement to also localize validation message within our implementation of `IValidationAttributeAdapterProvider` which is registered as a singleton.\r\n\r\n```\r\npublic class CustomValidationAttributeAdapterProvider : IValidationAttributeAdapterProvider\r\n{\r\n\tpublic IAttributeAdapter GetAttributeAdapter(ValidationAttribute attribute, IStringLocalizer stringLocalizer)\r\n        {\r\n\t         // The IStringLocalizer instance which is passed in gets initialized by the IStringLocalizerFactory which was preregistered as part of the framework\r\n\t}\r\n}   \r\n```\r\n\r\nAlthough I could implement my own implementation for the `IStringLocalizerFactory`, I don't seem to have a way to pass in some scoped services as part of the Create method to initialize an instance of our `MyStringLocalizer`.\r\n\r\n### Troubleshooting\r\n\r\n- Given the limitation of the `IStringLocalizerFactory` is it somehow possible to close this gap without re-implementing many of the parts of the Localization framework from Microsoft? \r\n\r\nAny input which would help me to solve this issue is very much appreciated.\r\n\r\nThank you in advance!\r\n\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/10324/comments",
    "author": "HansMusterWhatElse",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-05-20T17:18:06Z",
        "body": "Thanks for contacting us, @HansMusterWhatElse.\r\nYou can register your implementations as `singleton` and refer to the `HttpContext` accessor to resolve it.\r\nOther than that the current implementation of the framework for `IStringLocalizer` expects it to be `singleton` and when that changes, things don't work the way they should."
      }
    ]
  },
  {
    "number": 10322,
    "title": "Styled File Upload buttons not working as expected",
    "created_at": "2019-05-17T08:02:02Z",
    "closed_at": "2019-05-22T16:35:39Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/10322",
    "body": "I am not entirely sure if this is a blazor issue or not but I am using client side blazor and trying to create a styled file upload button using the code bellow. When you click on the aperture image it opens the file upload dialog and my C# code correctly puts the image data in the EditItem.EncodedPicture property. To all respects it works and when you click save the image data is pushed to the server and committed to the database. Then when you re-load the page the image appears.\r\n\r\n```\r\n<div class=\"form-group\">\r\n  <label for=\"uploadPhoto\" class=\"form-control text-center\" style=\"height:113px;width:125px\">\r\n  @if (EditItem.EncodedPicture != null)\r\n   {\r\n    <img src=\"@($\"data:image/jpg;base64,{EditItem.EncodedPicture}\")\" width=\"100\" height=\"100\" />\r\n   }\r\n  else if (EditItem.PictureUrl != null)\r\n   {\r\n     <img src=\"@($\"{EditItem.PictureUrl}\")\" width=\"100\" height=\"100\" />\r\n  }\r\n  else\r\n  {\r\n    <i style=\"font-size:76px;\" class=\"oi oi-aperture\" />\r\n   }\r\n  </label>\r\n  <input id=\"uploadPhoto\" ref=\"uploadPhoto\" class=\"collapse\" type=\"file\" accept=\"image/*;capture=camera;.jpg\" onchange=\"@UploadPhoto\" />\r\n</div>\r\n```\r\n\r\nWhat does not appear to work is that after I put the file in the local parameter EditItem.EncodedPicture I call StateHasChanged() so that the page re-renders and displays the image as a preview. This does not work and the page appears to not re-render with the Base64 encoded image. However if I remove the \"collapse\" class from input and click on the default input button to upload the file it all works perfectly. I am not sure why clicking on the label to start the file upload and clicking on the input button should be any different, but it is.",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/10322/comments",
    "author": "owaits",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-05-22T16:35:39Z",
        "body": "Thanks for contacting us, @owaits.\r\nThis doesn't sound like a Blazor issue so we recommend to post this question to `StackOverflow`, as that way you'd probably get faster answer to your question."
      }
    ]
  },
  {
    "number": 10320,
    "title": "On-demand blazor server-side connection ",
    "created_at": "2019-05-17T07:02:16Z",
    "closed_at": "2019-05-22T16:38:07Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/10320",
    "body": "Blazor server-side rendering requires in-time communication between clients and servers.\r\n\r\nCurrently if connection drops, the client will try to re-connect to server immediately. I think it will be better if it can rebuild the connection when the next request starts.\r\n\r\nAlso, communicating with SignalR Core will cause a problem that once a client connect to a server, the connection will stick to a specific server which cannot make use of loading balancer if possible.\r\n\r\nWhat's more, keeping a persistent connection will increase pressure of servers.\r\n\r\nTherfore, I think blazor on server-side rendering should only build connection between client and server on-demand, and if there's a period of inactivity, the connection can be temporary disposed and it can re-connect to server when the next request from client starts. If connection dropped, it should delay re-connection to the next request and connect in the background but not showing a \"connection dropped\" screen.",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/10320/comments",
    "author": "hez2010",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-05-22T16:38:07Z",
        "body": "Thanks for contacting us, @hez2010.\r\nThis won't work for Blazor, as the model Blazor uses allows the server to push data to clients, whenever necessary, which requires active connection all the time."
      }
    ]
  },
  {
    "number": 10254,
    "title": "Anti forgery token of razor page forms within folders not available automatically. ",
    "created_at": "2019-05-15T07:22:48Z",
    "closed_at": "2019-05-20T17:25:57Z",
    "labels": [
      "question",
      "area-mvc"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/10254",
    "body": "",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/10254/comments",
    "author": "solalem",
    "comments": [
      {
        "user": "solalem",
        "created_at": "2019-05-15T07:45:03Z",
        "body": "The default template of Razor Pages UI library creates a folder structure organized by Areas. After adding my Create.cshtml page into a feature folder and adding a form I was expecting the default anti-forgery token to be generated and sent to browsers automatically. Navigating to Feature/Create in a browser and submitting the form creates\r\n`The required antiforgery cookie \".AspNetCore.Antiforgery.MsYT7wU3Kzg\" is not present.`\r\n exception inside VS output window. The browser also shows no cookie with the specified name. I resolved my issue after manually adding `@Html.AntiForgeryToken()` inside my form. I think the default behavior of adding anti-forgery cookies should handle this case too. I can also see this is true for every pages inside child folders of Pages, folders inside Areas and any UI library folders. "
      },
      {
        "user": "pranavkm",
        "created_at": "2019-05-15T14:48:37Z",
        "body": "You might be missing a `_ViewImports.cshtml` in the Feature area that sets up the form tag helper: `@addTagHelper \"*, Microsoft.AspNetCore.Mvc.TagHelpers\"`. "
      },
      {
        "user": "solalem",
        "created_at": "2019-05-16T11:23:04Z",
        "body": "Yes that also did the trick, thank you. But I would expect the project template add that file in the first place. I think, sometimes, people may have the need to share form based pages in UI libraries as well."
      },
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-05-20T17:25:57Z",
        "body": "Thanks for contacting us. We believe that the question you've raised have been answered. If you still feel a need to continue the discussion, feel free to reopen it and add your comments."
      }
    ]
  },
  {
    "number": 10156,
    "title": "Serializing to Json using System.Text.Json does not preserve the case of the property names.",
    "created_at": "2019-05-10T18:49:11Z",
    "closed_at": "2019-05-13T16:37:36Z",
    "labels": [
      "question",
      "area-mvc"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/10156",
    "body": "Creating a new Web API ASP.NET Core 3 project and removing the call to `.AddNewtonsoftJson()`, then changing the `Get()` method on the controller to return an object with properties causes it to return JSON, but with all of the property names converted to camel case.\r\n\r\nThe only option for `SerializerOptions.PropertyNamingPolicy` is `JsonNamingPolicy.CamelCase`; there is no option to not modify the case at all.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Using this version of ASP.NET Core '3.0.0-preview5-19227-01'\r\n2. Create a new ASP.NET Core Web Application\r\n3. Choose API\r\n4. In Startup.cs, remove the call to `.AddNewtonsoftJson()`.\r\n5. In ValuesController.cs, add a class:\r\n```C#\r\n    public class TestModel\r\n    {\r\n        public string MultiWordValue { get; }\r\n\r\n        public TestModel(string value)\r\n        {\r\n            MultiWordValue = value;\r\n        }\r\n    }\r\n```\r\n6. Change the `Get()` method body to `return new TestModel(\"value\");`\r\n7. Run the application and `GET api/values` returns `{\"multiWordValue\":\"value\"}`\r\n\r\n### Expected behavior\r\nI expect it to not change the casing on the property names unless I explicitly ask for that behaviour; barring that, I expect to have a way to tell it to preserve casing: `{\"MultiWordValue\":\"value\"}`\r\n\r\n### Additional context\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview5-011568\r\n Commit:    b487ff10aa\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview5-011568\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview5-27626-15\r\n  Commit:  61f30f5a23\r\n\r\n.NET Core SDKs installed:\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.504 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.600 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.601 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.700-preview-009597 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.700-preview-009601 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.700-preview-009618 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.104 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview5-011568 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview5-19227-01 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview5-27626-15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview5-27626-15 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/10156/comments",
    "author": "JeremyMorton",
    "comments": [
      {
        "user": "JeremyMorton",
        "created_at": "2019-05-10T18:55:44Z",
        "body": "Using `[JsonPropertyName(\"MultiWordValue\")]` on the property does have it use the specified casing, but having to put that Attribute, redundantly, on all properties can be a lot of work that is prone to copy and paste errors/typos."
      },
      {
        "user": "pranavkm",
        "created_at": "2019-05-10T22:08:31Z",
        "body": "MVC expects camel-case JSON input and will camel-case all JSON output by default. To use property's original casing, you can set the `PropertyNamingPolicy` to `null`.\r\n\r\n/cc @steveharter \\ @ahsonkhan "
      }
    ]
  },
  {
    "number": 10000,
    "title": "MissingMethodException: EndpointRoutingApplicationBuilderExtensions.UseRouting",
    "created_at": "2019-05-06T16:42:23Z",
    "closed_at": "2019-05-09T16:53:44Z",
    "labels": [
      "question",
      "area-mvc"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/10000",
    "body": "I have an .NET Core 3, MVC app that runs fine inside of VS 2019.  When I deploy it to a server running IIS, I get the following error page:\r\n\r\n`An error occurred while starting the application.\r\nMissingMethodException: Method not found: 'Microsoft.AspNetCore.Builder.IApplicationBuilder Microsoft.AspNetCore.Builder.EndpointRoutingApplicationBuilderExtensions.UseRouting(Microsoft.AspNetCore.Builder.IApplicationBuilder, System.Action`1<Microsoft.AspNetCore.Routing.IEndpointRouteBuilder>)'.\r\n\r\nResolveROI.ScheduledServices.CrystalQuartz.Startup.Configure(IApplicationBuilder app, IWebHostEnvironment env)\r\n\r\n    MissingMethodException: Method not found: 'Microsoft.AspNetCore.Builder.IApplicationBuilder Microsoft.AspNetCore.Builder.EndpointRoutingApplicationBuilderExtensions.UseRouting(Microsoft.AspNetCore.Builder.IApplicationBuilder, System.Action`1<Microsoft.AspNetCore.Routing.IEndpointRouteBuilder>)'.\r\n        ResolveROI.ScheduledServices.CrystalQuartz.Startup.Configure(IApplicationBuilder app, IWebHostEnvironment env)\r\n\r\n.NET Core 3.0.0-preview4-27615-11 X64 v4.0.0.0    |   Microsoft.AspNetCore.Hosting version 3.0.0-preview4-19216-03    |    Microsoft Windows 6.3.9600    |   Need help? `\r\n\r\nI installed ASP.NET Core/.NET Core 3.0.0-preview4-19216-03 on the server.  I installed NuGet Microsoft.AspNetCore.App 3.0.0-preview3-19153-02.\r\n\r\nHere is my program.cs\r\n`        public static void Main(string[] args)\r\n        {\r\n            CreateHostBuilder(args).Build().Run();\r\n        }\r\n\r\n        public static IHostBuilder CreateHostBuilder(string[] args) =>\r\n            Host.CreateDefaultBuilder(args)\r\n                .ConfigureWebHostDefaults(webBuilder =>\r\n                {\r\n                    webBuilder.UseStartup<Startup>()\r\n                                .UseIIS()\r\n                                .CaptureStartupErrors(true) // the default\r\n                                .UseSetting(\"detailedErrors\", \"true\")\r\n                                .UseContentRoot(Directory.GetCurrentDirectory());\r\n                });\r\n    }\r\n`",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/10000/comments",
    "author": "dpedrelli",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-05-09T16:53:44Z",
        "body": "Thanks for contacting us, @dpedrelli.\r\nThe issue you're facing indicates that the app you're trying to run is compiled against a different runtime than the one available on the machine.\r\nTry to install the same runtime on the target machine."
      }
    ]
  },
  {
    "number": 9993,
    "title": "AuthorizationHandler to have access to ActionArguments",
    "created_at": "2019-05-06T08:41:07Z",
    "closed_at": "2019-05-13T16:42:41Z",
    "labels": [
      "question",
      "area-mvc"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/9993",
    "body": "### Is your feature request related to a problem? Please describe.\r\nI have alot of routes define on my API, some routes have an optional argument via Query String, some are defined in the route itself, and some are sent as part of the payload. \r\n\r\nBecause some are not defined on `[FromRoute]` and are instead defined via `[FromQuery]` and `[FromBody]`, they are not available in the bound model of the action.\r\n\r\n```csharp\r\nprotected override Task HandleRequirementAsync(AuthorizationHandlerContext context, MustHaveResourceAccessRequirement requirement)\r\n{\r\n    if (context.Resource is AuthorizationFilterContext filterContext)\r\n    {\r\n        var request = filterContext.RouteData.Values[\"request\"];\r\n\r\n        ...\r\n    }\r\n}\r\n\r\n...\r\n\r\npublic ActionResult GetResource([FromBody] GetResourceRequest request)\r\n{\r\n    ...\r\n}\r\n```\r\n\r\nI do have access to HttpContext, however that would mean I manually need to go and figure out where the id I need is. Is it in the payload? in the Query? In the Route?!?\r\n\r\nI want to pull the id from the bound model so I can verify if the logged in user has access to that specific piece of content, as lots of different actions can be made on that content or in relation to it, it doesn't always make sense to have it as part of the route. \r\n\r\n### Describe the solution you'd like\r\nTo be given access to the Bound Model similar to what's available in an ActionFilter via the `ActionArguments`.\r\n\r\n### Describe alternatives you've considered\r\nI've sort of figured out how to implement it as an ActionFilter, however this seems more of a hack or work-around, since I've had to go from Authorization Policy to something that isn't an authorization policy... So half the authorization is policy based and the other half is now hacked into an ActionFilter.\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/9993/comments",
    "author": "phillip-haydon",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-05-09T16:58:27Z",
        "body": "Thanks for contacting us, @phillip-haydon.\r\n@blowdart, @HaoK do you have any suggestions here?"
      },
      {
        "user": "HaoK",
        "created_at": "2019-05-09T17:04:37Z",
        "body": "Sounds like this is in the grey area.  From the Authorization side of things, the only thing you get from MVC as you discovered, is the `AuthorizationFilterContext`, which lets you access the `HttpContext` and whatever you can reach from that.  I'm not very familiar with the specifics of how MVC model binding works, but I imagine you can probably get to what you need from the context?  @pranavkm @rynowak any ideas on how he can access the `BoundModel` from the `AuthorizationFilterContext` "
      },
      {
        "user": "rynowak",
        "created_at": "2019-05-09T17:29:17Z",
        "body": "There's no way to do this currently. We intentionally don't run model binding at this stage because we want to avoid doing work when the request is unauthorized."
      },
      {
        "user": "phillip-haydon",
        "created_at": "2019-05-10T01:05:45Z",
        "body": "The first auth when you challenge forms auth or jwt token etc is unauthorised. But any policy run after that returns forbidden as its (i assume) doing resource authorisation at this point. It’s just at this point there are many different ways to interact with the resource so I need to get the identifier from 1 of 3 places. \r\n\r\nIt gets more difficult because I don’t know the name. So in 1 request it may be OrderId and in another a StoryBoardId. Etc. And these could be passed as part of the payload. Or part of the route or query. Once I have the bound model I can easily get the info I need. But it’s getting the bound model that’s difficult. \r\n\r\nI wouldn’t mind an opt in way to force binding earlier to Ensure that what’s binder isn’t bound again.\r\n\r\nI feel like it’s super hacks needing to do this in an action filter. Right now I check in a filter and then set the result to ForbiddenResult which short circuits the execution of the action. It works great. But what bothers me is I have 5 policies but 1 is moved to action filter and it feels completely wrong :(\r\n\r\nI’m prob an edge case here and if it’s not something you want to support that’s cool. I just thought I would raise it and hope you may consider bending your knee to my request, haha. Too much GOT."
      },
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-05-13T16:42:41Z",
        "body": "Thanks for contacting us, @phillip-haydon.\r\nThis is not something we plan to do in the near future."
      }
    ]
  },
  {
    "number": 9943,
    "title": "Support multiple FromRoute and FromQuery per Object",
    "created_at": "2019-05-03T12:26:16Z",
    "closed_at": "2019-12-07T02:01:29Z",
    "labels": [
      "question",
      "area-mvc"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/9943",
    "body": "Using ASP.NET Core 2.2 I have the following ApiController action:\r\n\r\n    [ApiController]\r\n    public class PostController : Controller {\r\n\r\n        [HttpGet(\"posts/{postId:int:min(1)}\")]\r\n        public async Task<IActionResult> GetByPostId([FromQuery]GetByPostIdRequest request {\r\n        \r\n        }\r\n    }\r\n\r\nWhere `GetByPostIdRequest` is the following:\r\n\r\n    public class GetByPostIdRequest {\r\n        [FromRoute]\r\n        public Int32 PostId { get; set; }\r\n        public String LanguageCode { get; set; }\r\n        public IncludeExpression Include { get; set; }\r\n    }\r\n\r\nThe only way all parameters get values are:\r\n1. Have `FromQuery` in action so I there is no `Unsupported Media Type` error\r\n2. Have `FromRoute` inside the Request class to bind the PostId.\r\n\r\nIsn't there another way to do this?\r\n\r\n**Possible Solution**\r\nA suggestion could be to allow multiple attributes for one model (`[FromRoute, FromQuery]`):\r\n\r\n        [HttpGet(\"posts/{postId:int:min(1)}\")]\r\n        public async Task<IActionResult> GetByPostId([FromRoute, FromQuery]GetByPostIdRequest request) {\r\n        }\r\n\r\n    }\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/9943/comments",
    "author": "mdmoura",
    "comments": [
      {
        "user": "mateusvbf",
        "created_at": "2019-05-03T13:06:16Z",
        "body": "Try something like that:\r\n\r\n```\r\n[HttpGet(\"posts/{postId:int:min(1)}\")]\r\npublic async Task<IActionResult> GetByPostId([FromRoute] int postId, [FromQuery]GetByPostIdRequest request) \r\n{\r\n      request.PostId = postId;\r\n}\r\n```"
      },
      {
        "user": "pranavkm",
        "created_at": "2019-05-03T13:50:00Z",
        "body": "I would recommend @mateusvbf's suggestion Alternatively you could use the `ModelBinderAttribute` to indicate that the parameter isn't being deserialized from body. Outside of that, changing the binding source to a different one half way through an object graph isn't something we would support."
      },
      {
        "user": "mdmoura",
        "created_at": "2019-05-03T13:51:22Z",
        "body": "@mateusvbf Sure, that works but imagine a situation where I am using FluentValidation to validate GetByPostIdRequest and during validation of GetByPostIdRequest I need to know postId. \r\n\r\nConsider I am not doing manual validation but automatic validation and adding errors to Model State.\r\n\r\nThen things get a little bit tricky ... am I wrong?\r\n"
      },
      {
        "user": "mdmoura",
        "created_at": "2019-05-03T13:59:30Z",
        "body": "> Alternatively you could use the `ModelBinderAttribute` to indicate that the parameter isn't being deserialized from body.\r\n\r\nYou mean using a custom model binder for GetByPostIdRequest object? \r\n\r\nI added `ModelBinder` attribute to `GetByPostIdRequest` and I got the 415 error.\r\n\r\n```\r\n[HttpGet(\"posts/{postId:int:min(1)}\")]\r\npublic async Task<IActionResult> GetByPostId([ModelBinder]GetByPostIdRequest request) {\r\n      request.PostId = postId;\r\n}\r\n```\r\n\r\nNot sure what you meant ... Could you clarify?"
      },
      {
        "user": "pranavkm",
        "created_at": "2019-05-03T14:13:21Z",
        "body": "Just decorating a parameter with the `ModelBinder` attributes tells MVC that it needs to be model bound and values can come from either Query, Form or Route."
      },
      {
        "user": "phillip-haydon",
        "created_at": "2019-05-09T03:46:15Z",
        "body": "I still don't understand why there is no support for Body/Route/Query out of the box. Having to have multiple arguments on the action is such a hack. ModelBinder doesn't work for a non-form payload."
      },
      {
        "user": "andre-ss6",
        "created_at": "2019-08-28T23:07:10Z",
        "body": "The possible solution provided by the OP would also enable scenarios like the one I described in my issue #13492. Unfortunately though they closed it as something they don't plan to support :("
      },
      {
        "user": "ghost",
        "created_at": "2019-12-07T02:01:28Z",
        "body": "Thank you for contacting us. Due to no activity on this issue we're closing it in an effort to keep our backlog clean. If you believe there is a concern related to the ASP.NET Core framework, which hasn't been addressed yet, please file a new issue."
      }
    ]
  },
  {
    "number": 9782,
    "title": "Add ability to use IgnoreQueryFilters with UserManager",
    "created_at": "2019-04-26T13:31:12Z",
    "closed_at": "2020-10-06T18:49:12Z",
    "labels": [
      "question",
      "enhancement",
      "area-identity",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/9782",
    "body": "Hi there,\r\n\r\nI'm having trouble to use IgnoreQueryFilters  with UserManager, for example I've used HasQueryFilter like this :\r\n` \r\npublic void Configure(EntityTypeBuilder<ApplicationUser> b)\r\n        {  b.HasQueryFilter(e => e.EmailConfirmed); }\r\n`\r\n\r\nWhen I'm trying to find an User by Email (not confirmed yet) : \r\n`\r\n                var user = await _userManager.FindByEmailAsync(request.Email);\r\n` \r\nit returns me null, so I'm not able to do something like this : \r\n`\r\n                var user = await _userManager.IgnoreQueryFilters().FindByEmailAsync(request.Email);\r\n`\r\nDo you have any suggestion what to do in this case?\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/9782/comments",
    "author": "BetimShala",
    "comments": [
      {
        "user": "blowdart",
        "created_at": "2019-05-15T20:19:54Z",
        "body": "@ajcvickers to explain the EF pieces :)"
      },
      {
        "user": "BetimShala",
        "created_at": "2019-05-15T20:45:16Z",
        "body": "I forgot to mention that I am able to do smth like this \r\n`\r\nvar user = await _userManager.Users.IgnoreQueryFilters().FirstOrDefaultAsync(u => u.Email.Equals(request.Email));\r\n`"
      },
      {
        "user": "HaoK",
        "created_at": "2020-10-06T18:49:12Z",
        "body": "Going through users is what you need to do.  The UserManager.Users is an IQueryable"
      }
    ]
  },
  {
    "number": 9748,
    "title": ".NetCore 2.2 not using ViewFeature or IRazorCompiledItemprovider",
    "created_at": "2019-04-25T15:50:25Z",
    "closed_at": "2019-05-13T17:24:52Z",
    "labels": [
      "question",
      "area-mvc"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/9748",
    "body": "_From @ShaZeh on Wednesday, 24 April 2019 03:54:55_\r\n\r\n.NetCore 2.2 not using ViewFeature or IRazorCompiledItemprovider\r\n\r\nI recently made a custom IApplicationFeature for ControllerFeature which is added after adding MVC to the services 👍 \r\n\r\n```c#\r\nservices.AddMvc()\r\n.ConfigureApplicationPartManager(apm =>\r\n {\r\n      apm.FeatureProviders.Add(new CustomControllerProvider(typeof(Startup).Assembly));\r\n  // apm.FeatureProviders.Add(new CustomViewProvider(typeof(Startup).Assembly));\r\n  // apm.ApplicationParts.Add(new CustomRazorViewProvider(typeof(Startup).Assembly)); \r\n})\r\n```\r\n\r\nWhile this appear to work fine for the ControllerFeature, .net core seems to ignore any changes made in in the ViewFeature or RazorCompiledItemProvider.\r\n\r\nWhen using the ViewFeature provider, the code execute PopulateFeature multiple time (for each assembly I am assuming) and even if I clear the entire list of ViewDescriptors, the views appear to load fine as if no changes had been done. \r\n\r\nI thought it was perhaps because the ViewFeature is now marked as obsolete, so I have tried implementing the IRazorCompiledItemProvider as an application part as suggested. However the results are even worse, views are still loaded even if no items are returned by the CompiledItems property.\r\n\r\nI am starting to believe that something silly might have been missed, do we need to do anything unusual within our controllers to obtain the views such as using dependency injection with a specific type or it should just works with the embedded View() method.\r\n\r\nSorry if I might have misunderstood how the feature should work, there is not much documentation about it. I haven't tested adding views yet , perhaps these implementations only support adding elements as opposed to the ControllerFeature which support both adds and removes. It would still be an issue regardless though.\r\n\r\n\r\n\r\n_Copied from original issue: dotnet/core#2629_",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/9748/comments",
    "author": "Eilon",
    "comments": [
      {
        "user": "Eilon",
        "created_at": "2019-04-25T15:50:26Z",
        "body": "_From @Eilon on Wednesday, 24 April 2019 20:01:43_\r\n\r\n@javiercn / @pranavkm - any ideas on this? Should we move this issue to AspNetCore?"
      },
      {
        "user": "Eilon",
        "created_at": "2019-04-25T15:50:26Z",
        "body": "_From @pranavkm on Thursday, 25 April 2019 02:33:38_\r\n\r\n> Should we move this issue to AspNetCore?\r\n\r\nYes please"
      },
      {
        "user": "javiercn",
        "created_at": "2019-04-25T16:28:49Z",
        "body": "@pranavkm will know better. Also, we should kill the obsolete viewfeatureprovider."
      },
      {
        "user": "pranavkm",
        "created_at": "2019-04-25T17:24:20Z",
        "body": "> However the results are even worse, views are still loaded even if no items are returned by the CompiledItems property.\r\n\r\nCould you explain what it is that you're trying to do? That should help us guide you better.\r\n\r\n> Also, we should kill the obsolete viewfeatureprovider.\r\n\r\n@javiercn it's been removed in 3.0.\r\n"
      },
      {
        "user": "ShaZeh",
        "created_at": "2019-04-25T23:27:18Z",
        "body": "Simply removing views from the available collection, it really is a basic use case. Sometimes, an additional library has to modify how certain views are used and to allows that, the ones currently registered have to be removed to prevent conflicting with the newer ones. \r\n\r\nThis works perfectly with controllers but is somehow a problem with views.\r\n\r\nThe reason why it appear to be worse using the new interface is because the collection is not passed over, it is only a read only property and in 2.2, there's isn't any class using this interface. I remember finding the source code for what could be the RazorCompiledItemProvider that will implement interface in a future version and it only seemed to search within the current assembly . With the ViewFeature, all of the views accross all assemblies were already discovered. (It wouldn't be too hard to implement such behavior but the fact that all of that was already implemented prevented the need of creating such code)"
      },
      {
        "user": "ShaZeh",
        "created_at": "2019-04-27T01:21:29Z",
        "body": "After investigating the source code, I ended up using a workaround and implementing an IViewCompilerProvider which does the filtering over there before sending them to the compiler. \r\n\r\nIt makes more sense as well to process them after they have been found since they do not represent the final result.  I still don't understand why the feature would be populated differently for the ViewFeature vs the ControllerFeature though.\r\n\r\nI guess the issue is more trivial now. I can understand that the logic is a little bit different for the views."
      },
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-05-13T17:24:52Z",
        "body": "Thanks for contacting us. We believe that the question you've raised have been answered. If you still feel a need to continue the discussion, feel free to reopen it and add your comments."
      }
    ]
  },
  {
    "number": 9724,
    "title": ".csproj .razor .cshtml reference",
    "created_at": "2019-04-24T18:51:13Z",
    "closed_at": "2019-04-25T13:14:20Z",
    "labels": [
      "question",
      "area-mvc"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/9724",
    "body": "### Is your feature request related to a problem? Please describe.\r\nA clear and concise description of what the problem is.\r\nExample. I'm am trying to do [...] but [...]\r\nas Continue to use Blazor components with .cshtml extension you used to had `<_RazorComponentsInclude>`tag \r\n### Describe the solution you'd like\r\nso if there was way to do that with razor pages and views like so `<_RazorPagesInclude>` & `<_RazorViewsInclude>` would make able to direct those to .razor file extension if user use .cshtml for blazor \r\n\r\n### Describe alternatives you've considered\r\nfor Blazor it could be `<_BlazorInclude>` or `<_BlazorComponentsInclude>` \r\n\r\n### Additional context\r\nThose above would be when using `useMVC();` or have set `useBlazor();` `useRazorPages();`\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/9724/comments",
    "author": "Janisku7",
    "comments": [
      {
        "user": "pranavkm",
        "created_at": "2019-04-25T13:14:20Z",
        "body": "The `_RazorComponentsInclude` flag existed as a stop-gap until tooling support for `.razor` files landed. The RazorSDK eventually stop using the flag. You may use the `RazorComponent` itemgroup to indicate component files and `RazorGenerate` itemgroup to indicate Razor view or Razor page files:\r\n\r\n```xml\r\n<ItemGroup>\r\n   <RazorComponent Include=\"*\\*.foo\" />\r\n   <RazorGenerate Include=\"*\\*.baz\" />\r\n</ItemGroup>\r\n```\r\n\r\nChanging the extension for Razor component files should generally work since there isn't a runtime component that relies on the file extension. MVC's runtime compilation specifically looks for the `.cshtml` extension. You will have to author a custom view engine to reason about this. The Razor compiler hardcodes the `_ViewImports.cshtml` and `_Imports.razor` files. There isn't a way to change these."
      }
    ]
  },
  {
    "number": 9182,
    "title": "When do we get IdentityServer4 working with Razor Components?",
    "created_at": "2019-04-08T22:41:51Z",
    "closed_at": "2019-04-09T16:56:47Z",
    "labels": [
      "question",
      "area-mvc",
      "area-identity"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/9182",
    "body": "Hello Team;\r\nWhen is Razor Component going to be integrated with IdentityServer4, that we can build our app with authenticating user via Razor Component page, where the server side gets token and we can then authorize different parts of our app?\r\n ",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/9182/comments",
    "author": "BenHayat",
    "comments": [
      {
        "user": "danroth27",
        "created_at": "2019-04-09T16:56:47Z",
        "body": "We plan to do work to enable authentication and authorization in 3.0.0-preview6. Currently the thinking is that the out of the box experience will be based on cookie authentication. Integration with IdentityServer4 should also be possible, but we don't currently plan to have an end-to-end template experience for this. "
      }
    ]
  },
  {
    "number": 9158,
    "title": "INodeServices not working on Azure, but working on Localhost",
    "created_at": "2019-04-07T22:33:04Z",
    "closed_at": "2019-04-12T16:17:22Z",
    "labels": [
      "question",
      "area-mvc"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/9158",
    "body": "I'm using asp.net core 2.2 and an instance of INodeServices for interoperability between C# and Node. The problem is that my Node invocation works great on my development environment, but once I push my code to Azure App Service and then execute the invocation (trough an MVC controller), it seems unable to locate the Node code to execute and after waiting a bit, it throws an error.\r\n\r\nI've founded by using Kudu that my node_modules Folder as well as my NodeCode folder dont get copied to the publish directory on deployment unless I configure them to do so by setting the some code on my .csproj file.\r\n\r\nThis doesn't seem to solve the problem, but i think that my NodeCode Folder should be deployed next to my node_nodules because of dependencies.\r\n\r\nAs of right now, the INodeServices invocation works great on my development environment, but once deployed to Azure, it fails after a long wait.\r\n\r\nThanks a lot.\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/9158/comments",
    "author": "DLozanoNavas",
    "comments": [
      {
        "user": "danroth27",
        "created_at": "2019-04-12T16:17:22Z",
        "body": "In general you don't want node_modules to be published with your app. The NPM modules should get restored by Kudu. You may be using an old version of node. Check that your running a reasonably recent version of node in your Azure App Service, and make sure that your package.json file is getting deployed."
      }
    ]
  },
  {
    "number": 8866,
    "title": "Using DPAPI with .net timed out talking to Domain Controller, didn't appear to fail over to another Domain Controller",
    "created_at": "2019-03-27T19:29:45Z",
    "closed_at": "2020-03-30T18:24:41Z",
    "labels": [
      "question",
      "External",
      "area-dataprotection",
      ":heavy_check_mark: Resolution: Answered",
      "Status: Resolved"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/8866",
    "body": "We are using DataProtection to encrypt and decrypt data using a domain user as the key.  Today we had a firewall change that blocked the server from talking to one domain controller. However, we have several others which communication worked fine too.  Using a login of a user that had not hit this server in some time showed extended login times, but logins worked.  The decryption process errored out with a Crypto-NCrypt error code of 0x800706d9 which was \"There are no more endpoints available from the endpoint mapper,\" as well as error code 0x8009002c, which I was never able to find.  What is the expected behavior of these libraries in the case when one Doman Controller is unreachable, and we have many others on our network that are?  Will it fail if it cannot hit the first one it tries, or should it be retrying?",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/8866/comments",
    "author": "Spikeophant",
    "comments": [
      {
        "user": "blowdart",
        "created_at": "2019-03-27T19:35:47Z",
        "body": "That's really weird. @GrabYourPitchforks do you know what should happen? I'd have through it should try for other DCs"
      },
      {
        "user": "Spikeophant",
        "created_at": "2019-03-28T21:01:38Z",
        "body": "I have also opened a ticket with MSFT through official channels through our support contract.  If I hear back on that ticket first and am not under NDA on the response, I will post that here for anyone else curious as to how this works, or who finds this ticket in a future search."
      },
      {
        "user": "GrabYourPitchforks",
        "created_at": "2019-03-30T21:34:15Z",
        "body": "The API invokes `CryptProtectData` and `CryptUnprotectData` under the covers when refreshing the keyring, depending on the key protection mechanism in use. If the account making the call is a managed service account or a domain account (as opposed to a local user account), `CryptProtectData` / `CryptUnprotectData` may end up making calls to the domain controller. Often times these failures are transient and trying the operation again a few minutes later will succeed. This is a standard behavior of Windows DPAPI and isn't really related to the ASP.NET libraries."
      }
    ]
  },
  {
    "number": 8703,
    "title": "UriHelper NavigateTo new tab",
    "created_at": "2019-03-21T14:51:18Z",
    "closed_at": "2019-03-21T17:04:20Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/8703",
    "body": "Hello,\r\n\r\nis it somehow possible (in Blazor) to programatically open a url in new tab? \r\n\r\nBest regards,\r\nThomas",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/8703/comments",
    "author": "TFTomSun",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-03-21T16:37:51Z",
        "body": "Thanks for contacting us, @TFTomSun.\r\n@SteveSandersonMS is this something possible with pure Blazor, or should this be achieved with JSInterop for now?"
      },
      {
        "user": "SteveSandersonMS",
        "created_at": "2019-03-21T17:04:20Z",
        "body": "You'll need to use JS interop for this."
      },
      {
        "user": "TFTomSun",
        "created_at": "2019-03-21T17:10:50Z",
        "body": "Just in case someone else come accross this post...\r\n\r\n```csharp\r\n        public async Task NavigateToUrlAsync(string url, bool openInNewTab)\r\n        {\r\n            if (openInNewTab)\r\n            {\r\n              await JSRuntime.Current.InvokeAsync<object>(\"open\",url,\"_blank\");\r\n            }\r\n            else\r\n            {\r\n                this.UriBuilder.NavigateTo(url);\r\n            }\r\n        }\r\n\r\n\r\n```"
      }
    ]
  },
  {
    "number": 8672,
    "title": "Razor Components project - Controllers in same project or separate project?",
    "created_at": "2019-03-20T08:23:57Z",
    "closed_at": "2019-03-20T15:34:10Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/8672",
    "body": "With a Razor Components project that will need to make use of a SQL Server database, and perform typical CRUD, is it best to:\r\n\r\n**Option A:**\r\nCreate Web API controllers inside of the existing Razor Components project, and set it up to serve Web API requests too? So this way you would have your Razor Components project, and your Web API all as one project.\r\n\r\n**Option B:**\r\nLeave the Razor Components project to behave like a client only, and create a separate Web API project to house any Web API endpoints?\r\n\r\nOr is there another option other than the above which I haven't considered?",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/8672/comments",
    "author": "LaurenceFrost",
    "comments": [
      {
        "user": "rynowak",
        "created_at": "2019-03-20T15:03:48Z",
        "body": "**Option C:**\r\n\r\nIf you're writing a server-side components application you don't need to communicate with your own code through an HTTP API - you're already running on the server.\r\n\r\n"
      },
      {
        "user": "LaurenceFrost",
        "created_at": "2019-03-20T15:25:14Z",
        "body": "> **Option C:**\r\n> \r\n> If you're writing a server-side components application you don't need to communicate with your own code through an HTTP API - you're already running on the server.\r\n\r\nIf I go this route, would this then make life difficult to transition the project over to client-size Blazor if that becomes stable?"
      },
      {
        "user": "rynowak",
        "created_at": "2019-03-20T15:29:38Z",
        "body": "I think that's up to you to judge. Personally, I think the work to make an app run on the client is a super-set (adding HTTP apis).\r\n\r\nOne option would be to build repository abstractions for all of your data access from components - then implement them in a really simple way for now (just a wrapper around your DB). Then when it's time to move to the client, change the implementation to use HTTP."
      },
      {
        "user": "rynowak",
        "created_at": "2019-03-20T15:31:56Z",
        "body": "If your goal is to eventually run on the client with Blazor, then I'd suggest using two projects for now. This will enforce a separation between the code that's going to stay on the server, and the code that's going to move to the client eventually. "
      },
      {
        "user": "LaurenceFrost",
        "created_at": "2019-03-20T15:34:10Z",
        "body": "Thanks very much - that's exactly what I needed to know. Thank you for taking the time to look at it."
      }
    ]
  },
  {
    "number": 8540,
    "title": "cannot get data from response when using HttpClient.GetJsonAsync in AspNetCore MVC",
    "created_at": "2019-03-15T03:00:07Z",
    "closed_at": "2019-03-29T16:47:04Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/8540",
    "body": "When using HttpClient.GetJsonAsync, docList can't get Json data with Object List&lt;Doc&gt;. I set breakpoint in LogsController.cs, it's obvious that ActionResult already has Value. But docList is null. The following code snippet is a part of the webapplication.\r\nHow to get data and use it?\r\nThank you for your support...\r\n\r\nQueryLogs.cshtml\r\n\r\n<pre>\r\n&lt;TextEdit Placeholder=\"PlayerGuid\" bind-text=\"@account\" /&gt;\r\n\r\n&lt;SimpleButton Clicked=\"@(async () =&gt; await GetLogs(account))\" Class=\"form-control\" Color=\"Color.Primary\"&gt;\r\n    Query\r\n&lt;/SimpleButton&gt;\r\n\r\n&lt;table&gt;\r\n    @if (docList == null)\r\n    { &lt;p&gt;there are no doc to display&lt;/p&gt;}\r\n    else\r\n    {\r\n    @foreach (var doc in docList)\r\n    {\r\n        &lt;tbody&gt;\r\n            &lt;tr&gt;\r\n                &lt;td&gt;@doc.account&lt;/td&gt;\r\n                &lt;td&gt;@doc.money_after&lt;/td&gt;\r\n                &lt;td&gt;@doc.money_before&lt;/td&gt;\r\n                &lt;td&gt;@doc.operator_type&lt;/td&gt;\r\n                &lt;td&gt;@doc.item_info&lt;/td&gt;\r\n                &lt;td&gt;@doc.vipLevel&lt;/td&gt;\r\n                &lt;td&gt;@doc.quest_id&lt;/td&gt;\r\n                &lt;td&gt;@doc.weapon_id&lt;/td&gt;\r\n                &lt;td&gt;@doc.zone_id&lt;/td&gt;\r\n                &lt;td&gt;@doc.role_id&lt;/td&gt;\r\n            &lt;/tr&gt;\r\n        &lt;/tbody&gt;}}\r\n\r\n&lt;/table&gt;\r\n\r\n\r\n@functions{\r\n\r\n    List&lt;Doc&gt; docList = new List&lt;Doc&gt;();\r\n    string account;\r\n    string document;\r\n\r\n    public async Task GetLogs(string acc)\r\n    {\r\n        docList = await Http.GetJsonAsync&lt;List&lt;Doc&gt;&gt;(\"api/value/\" + acc);\r\n    }\r\n}\r\n</pre>\r\nLogsController.cs\r\n\r\n<pre>\r\n[HttpGet(\"{param}\")]\r\n[EnableCors(\"CorsPolicy\")]\r\nprivate readonly ElasticClient _client;\r\npublic async Task&lt;ActionResult&lt;List&lt;Doc&gt;&gt;&gt; Search(string param)\r\n{\r\n    return  _client.Search&lt;Doc&gt;(s =&gt; s\r\n        .From(0)\r\n        .Size(10)\r\n        .Query(q =&gt; q.Match(m =&gt; m.Field(f =&gt; f.account).Query(param)))).Documents.ToList&lt;Doc&gt;();     \r\n}\r\n</pre>",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/8540/comments",
    "author": "qwertylb",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-03-20T21:14:56Z",
        "body": "Thanks for contacting us, @qwertylb.\r\nIt's not clear from your example what you're experiencing. Are you getting an error? What is it?"
      },
      {
        "user": "qwertylb",
        "created_at": "2019-03-21T14:23:52Z",
        "body": "> Thanks for contacting us, @qwertylb.\r\n> It's not clear from your example what you're experiencing. Are you getting an error? What is it?\r\n\r\nThere is a project that use ASP.NET MVC and elasticsearch to query logs and represent it. In QueryLogs.cshtml, when i input account and click Query button, it will execute GetLogs method and it can get return value of account from LogsController's method Search. But the return value can not pass to the QueryLogs.cshtml by Http.GetJsonAsync<List<Doc>>(\"api/value/\" + acc). docList is null."
      },
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-03-29T16:47:04Z",
        "body": "@qwertylb, the result of the query in the controller action you're referring to is not null, because it's represented by an asynchornousely executing task. So that's the `Task` object you see. Most probably the task's result ends up being `null` when evaluated, hence you get null when you call it."
      }
    ]
  },
  {
    "number": 8509,
    "title": "How can a backend service communicate with a Razor Component?",
    "created_at": "2019-03-14T15:04:20Z",
    "closed_at": "2019-03-14T16:47:35Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/8509",
    "body": "What is the proper way to let a background process/task raise an event or notification that a Razor Component can consume?\r\n\r\nFor example, if I have a background queue processor, it might make changes to a record through a service class, and the service could raise an event or notification that the entity has changed.\r\n\r\nUsing Angular or other SPA frameworks, it was pretty easy to listen for SignalR hub messages with notifications from the service which would signal to the component to either apply the record change, or signal to the component to pull fresh data.\r\n\r\nWith Razor Components there is no SignalR connection needed to send messages, as they would all be handled server side (only the rendering is passed to the browser), but there should be a generic way to send messages to a component to enable the same kind of functionality you would have using a JS SPA framework with SignalR.\r\n\r\nIs there, or could there be an IComponentHubContext<T> that could be injected into backend services that would let you invoke methods on all component instances (much as you would invoke a SignalR method on a IHubContext<T>) and it would handle calling using the appropriate execution/thread context (as opposed to running it on the thread that the service making the call is currently running on). On Blazor it could push the call to the client to execute, over the existing SignalR hub connection.\r\n\r\nMaybe it could be constrained to calling event handler methods in the component, since such calls wouldn't be able to wait for or use the results of the methods if they had a return type.",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/8509/comments",
    "author": "keithwill",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-03-14T16:47:35Z",
        "body": "Thanks for contacting us, @keithwill.\r\nIt's actually much simpler with Razor Components in ASP.NET Core. You can inject a service you want to listen to directly into the component using the `@inject` directive and subscribe to the event of your interest. When the event fires, the component will handle it and should call the `StateHasChanged()` method to indicate that a UI update is required. That will cause the runtime to do the needful and send UI updates to the browser."
      },
      {
        "user": "keithwill",
        "created_at": "2019-03-14T18:30:29Z",
        "body": "So the events would need to be async delegates if the component event handler needs to do any database or network IO to avoid causing substantial delays in user perception of the event propagation, and its probably not appropriate to do computationally expensive operations in the event handler.\r\n\r\nThanks!"
      },
      {
        "user": "kempcalalo",
        "created_at": "2019-10-23T11:46:21Z",
        "body": "@mkArtakMSFT can you give code snippets as an example? We're trying to do the exact same thing but isn't able to to so. Thanks!"
      }
    ]
  },
  {
    "number": 8476,
    "title": "[Razor Components] How to deal with application restarts?",
    "created_at": "2019-03-13T15:02:54Z",
    "closed_at": "2019-03-22T18:15:53Z",
    "labels": [
      "question",
      "Docs",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/8476",
    "body": "Hello,\r\n\r\nWhen the server has to restart, for example to do a new deployment, how do you deal with this?\r\n\r\n**Since the page state is kept in memory in the server, when the app restarts the state is lost and the page is left broken.**\r\nThe user then has to refresh the page for it to work again.\r\n\r\n- Is there a way to keep this state in a more persistent storage?\r\n- Or do you handle this by automatically refreshing the user's page when it detects there's a new version? \r\n\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/8476/comments",
    "author": "devnixs",
    "comments": [
      {
        "user": "devnixs",
        "created_at": "2019-03-14T10:07:41Z",
        "body": "I'm doing this for now, so the user doesn't stay in a broken page : \r\n```javascript\r\nwindow.addEventListener('unhandledrejection', function(promiseRejectionEvent) {\r\n  if (promiseRejectionEvent.reason.message === \"Cannot send data if the connection is not in the 'Connected' State.\") {\r\n    location.reload();\r\n  }\r\n});\r\n```"
      },
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-03-19T16:22:56Z",
        "body": "Thanks for contacting us, @devnixs.\r\nWe'll come up with a documentation to cover this."
      },
      {
        "user": "javiercn",
        "created_at": "2019-03-19T16:36:38Z",
        "body": "@pranavkm can probably help you here. If you deploy a new version your server will stop and all the state will get lost. The client will loose the connection to the server and will be left trying to reconnect. The reconnection will fail (as the server has rebooted) and at some point we'll stop reconnecting automatically.\r\n\r\nI'm not sure there's anything else you can do other than implementing this yourself. You would need to for example:\r\n* Create an endpoint on your server that you can hit to tell all active sessions they need to persist their state.\r\n* Each session would persist their state (you'll have to implement this)\r\n* Each session would send a message to the client to inform that a new version is going to be deployed.\r\n* The client would wait until the server is back up after the deployment and visit a specific page to allow the server to retrieve the persisted state for the client and restore the app to where it was.\r\n\r\nThis is just a way it could work. We don't provide anything for this out of the box.\r\n\r\n"
      },
      {
        "user": "devnixs",
        "created_at": "2019-03-21T13:28:37Z",
        "body": "Thanks @javiercn.\r\nThis is helpful."
      }
    ]
  },
  {
    "number": 8465,
    "title": "[Razor Components] Programmatically redirect the user",
    "created_at": "2019-03-13T08:33:56Z",
    "closed_at": "2019-03-13T16:41:32Z",
    "labels": [
      "question",
      "area-mvc"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/8465",
    "body": "Hello,\r\n\r\nSo far I haven't found a way to programmatically redirect the user to another page.\r\nHere's what I'm currently doing, but it's hacky:\r\n\r\n```csharp\r\n        private readonly IJSRuntime _jsRuntime;\r\n\r\n        public async Task Redirect(string location)\r\n        {\r\n            if (await IsServerSideRendering())\r\n            {\r\n                _httpContextAccessor.HttpContext.Response.Headers.Add(\"Location\", location);\r\n                _httpContextAccessor.HttpContext.Response.StatusCode = 302;\r\n            }\r\n            else\r\n            {\r\n                await _jsRuntime.InvokeAsync<string>(\"goTo\", location);\r\n            }\r\n        }\r\n```\r\n\r\nAnd then I made a javascript function\r\n```javascript\r\nfunction goTo(location) {\r\n  window.location.href = location;\r\n}\r\n```\r\n\r\nThis works great during the server side rendering, but otherwise, it's not ideal because `window.location.href = location` triggers a full page refresh.\r\n\r\nThanks for your help!",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/8465/comments",
    "author": "devnixs",
    "comments": [
      {
        "user": "julienGrd",
        "created_at": "2019-03-13T11:21:11Z",
        "body": "Hi devnixs, you don't have to redirect through Js but use c# code and inject IUriHelper\r\n\r\n[Inject]\r\nprotected IUriHelper UriHelper { get; set; }\r\n\r\nUsage\r\nthis.UriHelper.NavigateTo(\"your relative page url\");"
      },
      {
        "user": "devnixs",
        "created_at": "2019-03-13T14:57:37Z",
        "body": "Thanks @julienGrd, I'm gonna try this."
      },
      {
        "user": "vertonghenb",
        "created_at": "2019-03-13T15:18:58Z",
        "body": "As an addition :\r\nif it's a MVC controller or page outside of the client router you can use \r\n```cs\r\nthis.UriHelper.NavigateTo(\"/your relative page url\", forceLoad:true);\r\n```\r\nThis would skip internal \"client side\" routing and go to the page. A use case for this would be file downloads from the server."
      },
      {
        "user": "devnixs",
        "created_at": "2019-03-14T10:03:34Z",
        "body": "Just checked and UriHelper.NavigateTo only navigates client-side. This means is does no redirection during the prerendering.\r\n\r\nSo I changed my code to be\r\n\r\n```csharp\r\n\r\n        public async Task Redirect(string location)\r\n        {\r\n            if (await IsServerSideRendering())\r\n            {\r\n                _httpContextAccessor.HttpContext.Response.Headers.Add(\"Location\", location);\r\n                _httpContextAccessor.HttpContext.Response.StatusCode = 302;\r\n            }\r\n            else\r\n            {\r\n                this.UriHelper.NavigateTo(location);\r\n            }\r\n        }\r\n```\r\n\r\nAnd this works great.\r\nClosing this ticket then."
      }
    ]
  },
  {
    "number": 8386,
    "title": "How to create a component of InputText to use in EditForm",
    "created_at": "2019-03-10T13:45:42Z",
    "closed_at": "2019-03-18T16:30:59Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/8386",
    "body": "### Cenario\r\nI'm trying to make a component that uses InputText, but when I edit the textbox, it doesn't update the EditForm Model. This is how i'm trying to do this:\r\n\r\n#### RazorInputTest.razor\r\n    <div class=\"form-group\">\r\n        <label class=\"col-form-label\">@Label</label>\r\n        <InputText Class=\"form-control\" bind-Value=\"@Value\"></InputText>\r\n    </div>\r\n\r\n    @functions{\r\n        [Parameter] string Label { get; set; }\r\n        [Parameter] string Value { get; set; }\r\n        [Parameter] EventCallback<string> ValueChanged { get; set; }\r\n    }\r\n\r\n#### Index.razor\r\n    <span>Name of the category: @category.Name</span>\r\n    <EditForm Model=\"@category\">\r\n        <RazorInputTest bind-Value=\"@category.Name\"/>\r\n    </EditForm>\r\nWhen I edit the input, the span with the \"Name of the category\" doesn't update, but I don't know what I am doing wrong.\r\n\r\n### Objective\r\nI'm doing a set of bootstrap formated components and this is an important part of this project: preformated input-boxes. I want to create components that binds viewmodels, like InputText does inside the EditForm, but InputText inside a component, inside a EditForm inside another component.\r\n\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/8386/comments",
    "author": "medeirosraul",
    "comments": [
      {
        "user": "SteveSandersonMS",
        "created_at": "2019-03-13T19:20:47Z",
        "body": "It won’t update because this code doesn’t trigger ValueChanged anywhere. "
      },
      {
        "user": "rynowak",
        "created_at": "2019-03-13T20:25:19Z",
        "body": "Hi @medeirosraul - what Steve said is right, this won't send change notifications because in `Index.razor` you're attaching a binding to `RazorInputTest.Value`, but nothing is going to invoke `RazorInputTest.ValueChanged`. \r\n\r\nIt's really our intended pattern for you to subclass `InputText` if you want to replace its UI but unfortunately that doesn't work well in preview3 (#8192).\r\n\r\nIf you want a solution to wrap an `InputText`, you'll have to write a little more code.\r\n\r\n\r\n**RazorInputTest.razor**\r\n```\r\n<div class=\"form-group\">\r\n    <label class=\"col-form-label\">@Label</label>\r\n    <InputText Class=\"form-control\" Value=\"@Value\" ValueChanged=\"@ValueChanged\" ValueExpression=\"@ValueExpression\"></InputText>\r\n</div>\r\n\r\n@functions{\r\n    [Parameter] string Label { get; set; }\r\n    [Parameter] string Value { get; set; }\r\n    [Parameter] EventCallback<string> ValueChanged { get; set; }\r\n    [Parameter] Expression<Func<string>> ValueExpression { get; set; }\r\n}\r\n```\r\n\r\nIndex.razor won't have to change."
      },
      {
        "user": "medeirosraul",
        "created_at": "2019-03-16T15:18:33Z",
        "body": "This works, thank you.\r\nSo I think the \"bind\" attribute also sets \"ValueExpression\" when code generated."
      },
      {
        "user": "pjmagee",
        "created_at": "2019-03-16T23:11:58Z",
        "body": "@rynowak What about the input type of password, do we fall back to the standard html input?"
      },
      {
        "user": "SteveSandersonMS",
        "created_at": "2019-03-17T07:01:38Z",
        "body": "@pjmagee Consider inheriting from InputBase directly, e.g.:\r\n\r\n     @inherits InputBase<string>\r\n     <input type=\"password\" bind=\"@CurrentValue\" id=\"@Id\" class=\"@CssClass\" />"
      },
      {
        "user": "raphadesa",
        "created_at": "2019-09-03T06:39:42Z",
        "body": "Hello, the following worked for me:\r\nFile : CustomTextBox.razor\r\n\r\n<InputText @bind-Value=\"@Value\" class=\"form-control\" />\r\n\r\n@code {\r\n    public string _Value;\r\n    [Parameter]\r\n    public string Value\r\n    {\r\n        get\r\n        {\r\n            return _Value;\r\n        }\r\n        set\r\n        {            \r\n            if (_Value != value)\r\n            {                \r\n                ValueChanged.InvokeAsync(value);\r\n            }\r\n            _Value = value;\r\n        }\r\n    }\r\n    [Parameter]\r\n    public EventCallback<string> ValueChanged { get; set; }    \r\n}\r\n\r\n\r\nuse: <CustomTextbox @bind-Value=\"@user.Title\" />"
      }
    ]
  },
  {
    "number": 8160,
    "title": "Support Input arrays without index",
    "created_at": "2019-03-04T15:23:24Z",
    "closed_at": "2019-04-04T16:46:27Z",
    "labels": [
      "question",
      "area-mvc"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/8160",
    "body": "### Is your feature request related to a problem? Please describe.\r\nDynamic form with items which can be added and removed, also on existing lists.\r\n\r\n### Describe the solution you'd like\r\nLike PHP: \r\n```\r\n<input name=\"property[]\" />\r\n<input name=\"property[]\" />\r\n<input name=\"property[]\" />\r\n```\r\n\r\nWith asp.net I tested the following:\r\n```\r\n<input name=\"property[]\" />\r\n<input name=\"property[]\" />\r\n<input name=\"property[]\" />\r\n```\r\n-> empty list\r\n\r\n```\r\n<input name=\"property\" />\r\n<input name=\"property\" />\r\n<input name=\"property\" />\r\n```\r\n-> empty list\r\n\r\n\r\n```\r\n<input name=\"property[0]\" />\r\n<input name=\"property[1]\" />\r\n<input name=\"property[2]\" />\r\n```\r\n-> works fine, but if I remove the mid element via js I must re number all indexes ... this is fragil.\r\n\r\nIf the sequence is broken, for example 0, 2, 3, the array just contains the first zero indexed element. Feels strange..",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/8160/comments",
    "author": "Fruchuxs",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-03-06T23:01:23Z",
        "body": "Thanks for contacting us, @Fruchuxs.\r\n@dougbu, can you please follow up regarding what available options exist. Thanks!"
      },
      {
        "user": "Fruchuxs",
        "created_at": "2019-03-07T08:38:52Z",
        "body": "Another strange behavior:\r\n\r\n```\r\n<input name=\"values\" value=\"1\" />\r\n<input name=\"values\" value=\"2\" />\r\n<input name=\"values\" value=\"3\"  />\r\n\r\npublic IActionResult Action(List<int> values) {\r\n   // values.Count == 3\r\n}\r\n```\r\n\r\nWorks fine, but not with list properties in a model. Here `[index]` is required."
      },
      {
        "user": "dougbu",
        "created_at": "2019-03-08T04:06:04Z",
        "body": "@Fruchuxs could you clarify \"list properties in a model\"? Do you mean for example `List<SomeComplexType>`?\r\n\r\nSeparately, an `index` field or fields can help the list-with-gaps case e.g.\r\n``` html\r\n<input type=\"hidden\" name=\"property.index\" value=\"0;2;3\"/>\r\n<input name=\"property[0]\" />\r\n<input name=\"property[2]\" />\r\n<input name=\"property[3]\" />\r\n```"
      },
      {
        "user": "Fruchuxs",
        "created_at": "2019-03-08T11:09:15Z",
        "body": "> @Fruchuxs could you clarify \"list properties in a model\"? Do you mean for example List<SomeComplexType>?\r\n\r\nYes.\r\nAs an example:\r\n```c#\r\nclass Container {\r\n    public List<Something> Items {get;set;}\r\n}\r\n\r\nclass Something {\r\n    public string Foo {get;set;}\r\n    public int Bar {get;set;}\r\n}\r\n```\r\n\r\n```html\r\n<input type=\"text\" name=\"Container.Something.Foo\">\r\n<input type=\"text\" name=\"Container.Something.Bar\">\r\n\r\n<input type=\"text\" name=\"Container.Something.Foo\">\r\n<input type=\"text\" name=\"Container.Something.Bar\">\r\n\r\n<input type=\"text\" name=\"Container.Something.Foo\">\r\n<input type=\"text\" name=\"Container.Something.Bar\">\r\n```\r\n\r\nResult:\r\n```c#\r\npublic IActionResult Action(Container cnt) {\r\n   var hasAnyItems = cnt.Items.Count.Any(); // is false\r\n}\r\n```\r\n\r\nBut this works:\r\n```html\r\n<input type=\"text\" name=\"FooBar\" value=\"1\">\r\n<input type=\"text\" name=\"FooBar\" value=\"2\">\r\n<input type=\"text\" name=\"FooBar\" value=\"3\">\r\n```\r\n\r\n```c#\r\npublic IActionResult Action(List<int> items) {\r\n   var hasAnyItems = cnt.Items.Count.Any(); // is true\r\n\r\n   foreach(var i in items) {\r\n       Console.WriteLine(i); // Prints 1,2,3\r\n   }\r\n}\r\n```\r\n\r\n> Separately, an index field or fields can help the list-with-gaps case e.g.\r\n\r\n So I need to distribute the possible indexes in a hidden field?\r\n\r\nFor example:\r\n```c#\r\nclass Something {\r\n    public string Foo {get;set;}\r\n    public int Bar {get;set;}\r\n}\r\n```\r\n\r\n```html\r\n<input type=\"hidden\" name=\"Something.Index\" value=\"0;2;3\">\r\n<input type=\"text\" name=\"Something[0].Foo\">\r\n<input type=\"text\" name=\"Something[0].Bar\">\r\n\r\n<input type=\"text\" name=\"Something[2].Foo\">\r\n<input type=\"text\" name=\"Something[2].Bar\">\r\n\r\n<input type=\"text\" name=\"Something[3].Foo\">\r\n<input type=\"text\" name=\"Something[3].Bar\">\r\n```\r\n\r\nIf I understand you correctly, I must say, that this design is just strange. If I got just this:\r\n```html\r\n<input type=\"text\" name=\"Something[0].Foo\">\r\n<input type=\"text\" name=\"Something[0].Bar\">\r\n\r\n<input type=\"text\" name=\"Something[2].Foo\">\r\n<input type=\"text\" name=\"Something[2].Bar\">\r\n\r\n<input type=\"text\" name=\"Something[3].Foo\">\r\n<input type=\"text\" name=\"Something[3].Bar\">\r\n```\r\n\r\nI know which indexes are present by the numbers in the name (0, 2, 3). Buf if I use this HTML Code above (without your index field suggestion), the model binder just binds the first one and ignores the other two values, because the sequence is broken.\r\nIt is also hard and fragile to manage such a index-field with JS."
      },
      {
        "user": "dougbu",
        "created_at": "2019-03-11T04:42:45Z",
        "body": "The feature you're asking for is provided for simple collections e.g. `List<int>` because it's intuitive and hard to get wrong. However, \r\n``` html\r\n<input type=\"text\" name=\"Something[].Bar\">\r\n\r\n<input type=\"text\" name=\"Something[].Foo\">\r\n<input type=\"text\" name=\"Something[].Bar\">\r\n\r\n<input type=\"text\" name=\"Something[].Foo\">\r\n```\r\nis easy to get wrong. Is that 3 `Something`s or 2?\r\n\r\nMuch better to stick with explicit identification of the elements when the elements have complex types.\r\n\r\nIf an `index` property doesn't work for you, I suggest providing separate pages for adding items, removing items, or changing existing items."
      },
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-04-04T16:46:33Z",
        "body": "Thanks for contacting us. We believe that the question you've raised have been answered. If you still feel a need to continue the discussion, feel free to reopen it and add your comments."
      }
    ]
  },
  {
    "number": 7946,
    "title": "More options for configuring services for WebApplicationFactory.",
    "created_at": "2019-02-26T12:04:50Z",
    "closed_at": "2019-02-27T10:07:31Z",
    "labels": [
      "question",
      "area-mvc"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/7946",
    "body": "### Is your feature request related to a problem? Please describe.\r\n \r\nI'm am trying to create integration tests of the controller, but I need to mock some of the dependencies registered in `Startup` class. Currently the only possible option of customisation is via call `builder.ConfigureServices` inside overriden method `ConfigureWebHost`. \r\nHowever, if the set of mocked dependencies changes from test to test it requires creation of multiple descendants of `WebApplicationFactory<TStartup>`.\r\n\r\nThere is one more problem. I use `SimpleInjector` DI container which is stored in property `Container` of `Startup` class. It means I have to access `Startup` class in order to configure registrations of mocks. (I don't want to expose `Container` as a `static` property as it brings potential problems with parallel test runs.)\r\n\r\n### Describe the solution you'd like\r\nI would like `WebApplicationFactory<TStartup>` class to have constructor with this signature and corresponding behaviour:\r\n\r\n```CSharp\r\npublic WebApplicationFactory<TStartup>(\r\n    Action<IServiceCollection, TStartup> configureServices)\r\n```",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/7946/comments",
    "author": "voroninp",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-02-26T17:54:09Z",
        "body": "Thanks for contacting us, @voroninp.\r\n@javiercn, do you have any thoughts regarding this ask?"
      },
      {
        "user": "voroninp",
        "created_at": "2019-02-26T17:59:11Z",
        "body": "I’d ask for one more option. You use `TStartup` for searching the project and I may need to inherit from it to further adjust startup behavior. Would be nice to have this option as well without losing correct path resolution if type of descendant is used as generic argument."
      },
      {
        "user": "javiercn",
        "created_at": "2019-02-27T09:54:14Z",
        "body": "We don't use TStartup to find the project, we use a type on the app assembly, which by convention is startup, but you can use Program and use a custom startup and that should work.\r\n\r\nSo\r\n\r\n```csharp\r\nCustomWAF<TCustomStartup> : WAF<Program>\r\n{\r\n    override ConfigureWebHost(IWebHostBuilder builder) => builder.UseStartup<TCustomStartup>\r\n}\r\n```\r\n\r\nAlso there is a method on the WebApplicationFactory `WithWebHostBuilder` that will create a child factory with your customizations for one off configuration changes."
      },
      {
        "user": "javiercn",
        "created_at": "2019-02-27T10:06:51Z",
        "body": "For simple injector, I'm not sure how it integrates with ASP.NET Core but we have a `ConfigureTestContainer<TContainer>` helper method that you can call to configure it. Provided that simple injector overrides the DI container factory.\r\n\r\nIf not, you can derive from startup and configure the container in the derived class or register the container instance in the asp.net core service collection, and use ConfigureTestServices to retrieve the container from the collection and configure it. (This is a bit hacky, but there are limited options here).\r\n\r\nOtherwise, there's nothing else I can think we can do."
      },
      {
        "user": "javiercn",
        "created_at": "2019-02-27T10:07:31Z",
        "body": "Closing as the question has been answered."
      },
      {
        "user": "voroninp",
        "created_at": "2019-02-27T10:08:47Z",
        "body": "@javiercn Yes, inheriting seems to be the only option as SI does not override the factory."
      },
      {
        "user": "voroninp",
        "created_at": "2019-02-27T10:35:59Z",
        "body": "@javiercn  BTW, how do I get the instance of `CustomStartup`?  =)"
      },
      {
        "user": "javiercn",
        "created_at": "2019-02-27T11:01:23Z",
        "body": "@voroninp You need to hack around this I think.\r\nCreate CustomStartup and override ConfigureServices (make it virtual on Startup) and simply register your startup as a singleton in the service collection.\r\n\r\n```\r\noverride void ConfigureServices(IServiceCollection services)\r\n{\r\n    base.ConfigureServices(services);\r\n    services.TryAddSingleton(this);\r\n}\r\n```\r\n\r\nThen on your tests.\r\n```\r\n    factory.WithWebHostBuilder(builder => builder.ConfigureTestServices(services => {\r\n       var startup = services.Single(s => s.ServiceType == typeof(CustomStartup);\r\n       // Party on\r\n}));\r\n```\r\n\r\nThis should do it, if not, I'm out of ideas here.\r\n"
      },
      {
        "user": "voroninp",
        "created_at": "2019-02-27T11:14:45Z",
        "body": "@javiercn Or just register in regular startup's `ConfigureServices`: `            services.AddSingleton(this.GetType(), this);`\r\n\r\nThis will work for the inherited class as well. \r\nNot sure, but should not this happen automatically? ;-)"
      },
      {
        "user": "javiercn",
        "created_at": "2019-02-27T11:33:19Z",
        "body": "@voroninp I was being more tricky so that you don't have to register your startup class on the DI container in the normal flow. It should be pretty harmless, but there's no need to have that for your app just to run and is a distraction IMO.\r\n\r\nNo, in a normal scenario I can't think why would you want your startup class registered in DI (other than testing, which can be achieved entirely on the test assembly)\r\n"
      }
    ]
  },
  {
    "number": 7854,
    "title": "[Templating][SPA] NPM Package Developer Workflow",
    "created_at": "2019-02-22T13:08:48Z",
    "closed_at": "2019-12-07T02:01:56Z",
    "labels": [
      "question",
      "area-mvc"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/7854",
    "body": "When using the asp.net core 2.1/2.2 Angular Web App Template (File > New Project > Cloud Section > ASP.NET Core Web Application > Angular), I've run into some issues where when a new npm package is added to the project by another developer and the package.json file changes are checked in, then when other developers pull those changes and try to build/run the app, the new package doesn't get installed automatically. The app builds and runs, but the app pukes at the point where the typescript tries to build. In order to make it work you have to run npm install manually so it installs the latest packages.\r\n\r\nMy questions: What is the intended workflow for this scenario? Should the project or visual studio automatically install missing packages at some point?\r\n\r\nOne thing I just noticed is that some of us have the \"Restore On Project Open\" and \"Restore On Save\" options turned off for NPM in Visual Studio. Is this feature required to make the package install functionality automatic with the SPA Angular template?",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/7854/comments",
    "author": "kemmis",
    "comments": [
      {
        "user": "danroth27",
        "created_at": "2019-05-24T16:31:02Z",
        "body": "There is tooling support for NPM in Visual Studio, but it currently it only works if the package.json file is in the root of the project. In the ASP.NET Core SPA templates the package.json file is in the ClientApp folder with the rest of the code generated using the CLI for the corresponding SPA framework. We're investigating if we can update the VS tooling to work with this setup."
      },
      {
        "user": "ghost",
        "created_at": "2019-12-07T02:01:55Z",
        "body": "Thank you for contacting us. Due to no activity on this issue we're closing it in an effort to keep our backlog clean. If you believe there is a concern related to the ASP.NET Core framework, which hasn't been addressed yet, please file a new issue."
      }
    ]
  },
  {
    "number": 7273,
    "title": "Add a [Bool] data annotation",
    "created_at": "2019-02-05T13:25:22Z",
    "closed_at": "2019-02-23T06:52:17Z",
    "labels": [
      "question",
      "area-mvc",
      "feature-model-binding"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/7273",
    "body": "Using dotnet core 2.2, parsing JSON on a REST interface, using [Required] to ensure fields aren't missed.\r\nAlong comes a boolean field. If it's missing from the JSON it silently gets transformed to false, when I want it to throw a 400.\r\n\r\nCurrent workaround is [Range(typeof(bool), \"false\", \"true\")]. What would be neater is [Bool].",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/7273/comments",
    "author": "frank-borkin",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-02-11T05:02:15Z",
        "body": "Thanks for contacting us, @frank-borkin.\r\n@dougbu, do we have an existing mechanism to achieve this?"
      },
      {
        "user": "dougbu",
        "created_at": "2019-02-11T05:12:20Z",
        "body": "When using JSON, use Json.NET attributes e.g. `[JsonProperty(Required = Required.Always)]`. If you were not using `[FromBody]`, our `[BindRequired]` attribute would help in this scenario."
      },
      {
        "user": "frank-borkin",
        "created_at": "2019-02-11T08:10:47Z",
        "body": "@dougbu Am I right that [JsonProperty(Required = Required.Always)] would simply ensure that it was set, but not validate that it's true || false ? Having something which casts any other or no type to true or false is not desired."
      },
      {
        "user": "dougbu",
        "created_at": "2019-02-11T15:29:38Z",
        "body": "@frank-borkin your question was about missing Boolean properties. But, I'm pretty sure Json.NET fails de-serialization when a value cannot be converted. @JamesNK can you confirm?"
      },
      {
        "user": "duzenko",
        "created_at": "2019-02-12T16:05:39Z",
        "body": "Look at the RequiredAttribute source code. For bools it's basically just checking if the field is null.\r\nThe validators run after the JSON is deserialized to C# object and at that point the boolean field is already its default type value - false.\r\nYou should either change your field to `bool?` or use the JSON-specific validation attributes."
      },
      {
        "user": "JamesNK",
        "created_at": "2019-02-12T18:22:32Z",
        "body": "Newtonsoft.Json attempts to convert/coerce values. For example when deserializing a boolean property `true` works and `\"true\"` works. An error will be thrown if the JSON value can't be used."
      },
      {
        "user": "dougbu",
        "created_at": "2019-02-23T06:52:17Z",
        "body": "Thank you for your feedback. We're closing this issue as the questions asked here have been answered."
      }
    ]
  },
  {
    "number": 7189,
    "title": "Q: Please provide sample or guidance on Component Circuit",
    "created_at": "2019-02-01T17:15:49Z",
    "closed_at": "2019-02-04T16:23:05Z",
    "labels": [
      "question",
      "area-mvc"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/7189",
    "body": "I would like to understand the following use case with regards to Component Circuits.\r\n1. The user interface has a number of Components that injected shared state which is displayed in a user friendly format,\r\n2. The Server-Side application has a long running task the monitors for external event/data ie. SerialPort data, and as/when data arrives updates the shared state that is injected into the components\r\n\r\nQ: how would a developer trigger the components that have the shared state injected to render?\r\nQ: do/would components automatically render as state has changed?\r\nQ: is there any consideration that is needed when hold the state with in the DI system?",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/7189/comments",
    "author": "grahamehorner",
    "comments": [
      {
        "user": "muratg",
        "created_at": "2019-02-01T17:23:08Z",
        "body": "cc @danroth27 "
      },
      {
        "user": "danroth27",
        "created_at": "2019-02-04T16:23:05Z",
        "body": "Hi @grahamehorner,\r\n\r\nComponents don't have any automatic mechanism to detect that their state has changed and need to be rendered. As a sort of heuristic, components are rendered in response to UI events specific to that component. But, in general, you need to call the `StateHasChanged` method on the component to signal that it should be rendered.\r\n\r\nSo, to handle you're scenario where state is being updated by some long running task you would need some sort of way to call `StateHasChanged` on the component whenever it's state has been updated. For example, the component might subscribe to an event on a service. When the event is fired the component would update it's state and call `StateHasChanged`.\r\n\r\nI hope this helps!"
      }
    ]
  },
  {
    "number": 7178,
    "title": "When program has been renamed, ConfigureServices fails at AddMvc step",
    "created_at": "2019-02-01T00:18:21Z",
    "closed_at": "2019-02-01T15:02:42Z",
    "labels": [
      "question",
      ":heavy_check_mark: Resolution: By Design"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/7178",
    "body": "### Describe the bug\r\nAddMvc() throws if the file name for the executing assembly doesn't match its assembly name.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Using this version of ASP.NET Core '2.1.2-rtm-30932'\r\n2. Compile this code 'services.AddMvc()', renaming 'program.exe' to 'program2.exe', and then run.\r\n3. With these arguments 'none'\r\n4. See error\r\n\r\n### Expected behavior\r\nService starts normally.\r\n\r\n### Screenshots\r\nCrashes with following exception:\r\nSystem.IO.FileNotFoundException: 'Could not load file or assembly 'Program' or one of its dependencies. The system cannot find the file specified.'\r\n\r\nWith call stack:\r\n```    mscorlib.dll!System.Reflection.RuntimeAssembly.InternalLoadAssemblyName(System.Reflection.AssemblyName assemblyRef, System.Security.Policy.Evidence assemblySecurity, System.Reflection.RuntimeAssembly reqAssembly, ref System.Threading.StackCrawlMark stackMark, System.IntPtr pPrivHostBinder, bool throwOnFileNotFound, bool forIntrospection, bool suppressSecurityChecks)\tUnknown\r\n    mscorlib.dll!System.Reflection.Assembly.Load(System.Reflection.AssemblyName assemblyRef)\tUnknown\r\n    Microsoft.AspNetCore.Mvc.Core.dll!Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager.PopulateDefaultParts(string entryAssemblyName)\tUnknown\r\n    Microsoft.AspNetCore.Mvc.Core.dll!Microsoft.Extensions.DependencyInjection.MvcCoreServiceCollectionExtensions.GetApplicationPartManager(Microsoft.Extensions.DependencyInjection.IServiceCollection services)\tUnknown\r\n    Microsoft.AspNetCore.Mvc.Core.dll!Microsoft.Extensions.DependencyInjection.MvcCoreServiceCollectionExtensions.AddMvcCore(Microsoft.Extensions.DependencyInjection.IServiceCollection services)\tUnknown\r\n    Microsoft.AspNetCore.Mvc.dll!Microsoft.Extensions.DependencyInjection.MvcServiceCollectionExtensions.AddMvc(Microsoft.Extensions.DependencyInjection.IServiceCollection services)\tUnknown\r\n    Program2.exe!Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection services) Line 27\tC#\r\n```\r\n\r\n\r\n### Additional context\r\nAdd any other context about the problem here.\r\nInclude the output of `dotnet --info`\r\n\r\nUsing netframework 462\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/7178/comments",
    "author": "ghost",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-02-01T06:51:14Z",
        "body": "Thanks for contacting us, @aaronla-ms.\r\n@pranavkm, isn't this by-design? Thanks!"
      },
      {
        "user": "pranavkm",
        "created_at": "2019-02-01T15:02:42Z",
        "body": "Unfortunately by design. Renaming the output file doesn't change the deps file \\ assembly metadata which is what MVC uses to perform controller discovery. Building the project with `/p:AssemblyName=Program2` should work end to end."
      }
    ]
  },
  {
    "number": 7119,
    "title": "Cookie And Session ",
    "created_at": "2019-01-30T08:14:47Z",
    "closed_at": "2019-04-19T18:15:34Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/7119",
    "body": "### Is your feature request related to a problem? Please describe.\r\nA clear and concise description of what the problem is.\r\n\r\nI just want to use Session and cookies just like the ASP.NET MVC framework, but the authorization and identity features provided by ASP.NET Core don't allow me to simply use cookies and sessions. I am very annoyed, for the identity and authorization features that come with the framework, and often the permissions and authorization functions are designed by ourselves, rather than using the framework. I think it is as simple as ASP.NET MVC. I hope to provide such a feature!\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/7119/comments",
    "author": "kickgod",
    "comments": [
      {
        "user": "Eilon",
        "created_at": "2019-01-30T17:39:49Z",
        "body": "@kickgod - sorry you were running into some problems. Can you provide more info and code samples that show what you were trying to do, what you expected to happen, and what actually happened?\r\n\r\nSession state is fully supported in ASP.NET Core, and uses a cookie to track the user. Authorization and identity can also use cookies (but a different cookie). Your app can also just create its own cookies for other purposes. Much of this code is very similar (though not identical) so previous versions of ASP.NET."
      },
      {
        "user": "aspnet-hello",
        "created_at": "2019-04-19T18:15:31Z",
        "body": "We periodically close 'discussion' issues that have not been updated in a long period of time.\r\n\r\nWe apologize if this causes any inconvenience. We ask that if you are still encountering an issue, please log a new issue with updated information and we will investigate.\r\n"
      }
    ]
  },
  {
    "number": 6926,
    "title": "Microsoft.AspNetCore.Mvc, .NetStandard and .NetCore versions",
    "created_at": "2019-01-22T17:14:49Z",
    "closed_at": "2019-01-23T12:16:41Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/6926",
    "body": "I understand how .Net Standard and .Net Core relate. However, can you please clarify the relationships between versions of packages like Microsoft.AspNetCore.Mvc and .Net Standard and .Net Core. It would appear that the version numbers for Microsoft.AspNetCore.Mvc seems to track against .Net Core but does that mean there are any dependencies between them or not because Microsoft.AspNetCore.Mvc lists .Net Standard 2.0 as a dependency not .Net Core?\r\n\r\nFor example, if I've got a .Net Core 2.1 application with a project that is using .Net Standard 2.0 and that references Microsoft.AspNetCore.Mvc 2.1.3, what are the implications of updating Microsoft.AspNetCore.Mvc to 2.2.0?",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/6926/comments",
    "author": "darrenlewis1985",
    "comments": [
      {
        "user": "davidfowl",
        "created_at": "2019-01-23T07:15:23Z",
        "body": "In 2.1 and 2.2 the Microsoft.AspNetCore.* packages target .NET Standard and also ship in a the Microsoft.AspNetCore.App shared framework as part .NET Core. When you're using .NET Core there's no need to reference individual packages, it's redundant and they are basically ignored and the shared framework is used instead.\r\n\r\n> For example, if I've got a .Net Core 2.1 application with a project that is using .Net Standard 2.0 and that references Microsoft.AspNetCore.Mvc 2.1.3, what are the implications of updating Microsoft.AspNetCore.Mvc to 2.2.0?\r\n\r\nI assume you mean you have a web application targeting .NET Core 2.1 and a class library targeting .NET Standard 2.0 and using the Microsoft.AspNetCore.Mvc 2.2.0 package? If that's the case, you will get an error if you don't update the application to .NET Core 2.2. "
      },
      {
        "user": "darrenlewis1985",
        "created_at": "2019-01-23T08:47:13Z",
        "body": "Thanks for confirming. I knew System.Net.Http was in the the metapackage but wasn't sure about Microsoft.AspNetCore.* references. It's on our to-do list to switch over to using the metapackage."
      }
    ]
  },
  {
    "number": 6641,
    "title": "Centralized Identity Paths ",
    "created_at": "2019-01-12T13:56:27Z",
    "closed_at": "2019-04-19T18:13:52Z",
    "labels": [
      "question",
      "area-auth"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/6641",
    "body": "I understand how asp.net has changed, and there are a lot of things that are still missing. Is there an easy what to get the Cookie Options programmatically so that I can build links according to the website configuration, and not manually changing it, like we used to have in asp.net webforms.\r\n\r\nI'm pulling the IOptionsMonitor<CookieAuthenticationOptions> from HttpContext.RequestServices but the data is initializes to the asp.net core defaults. So I know I'm missing something.\r\n\r\nDocumentation on sharing cookies between multiple apps on the same domain is ok, but that's just for setting the cookie, but for a SSO site the redirect will be to the main subdomain and integrating the \"domain\" from this settings is useful for testing for \"local redirects\", that either are on the same domain of the login url or the current domain of the request. So a default url is useful in various use cases, like redirecting to the principal domain when login without a redirect url on the query string.\r\n\r\nI'd have to create code for loading it from appsettings.json and I found all these settings basic requeriments for a site, that if we should be included on the primary assemblies by Microsoft.\r\n\r\n¿Any suggestion how could I read those values from the Cookie Authentication Settings?",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/6641/comments",
    "author": "jlchavez",
    "comments": [
      {
        "user": "blowdart",
        "created_at": "2019-01-14T18:07:53Z",
        "body": "I don't understand what you're trying to do here? What sort of links? Where does SSO come into this? Do you mean identity as in user identity, or the asp.net core identity libraries?"
      },
      {
        "user": "jlchavez",
        "created_at": "2019-01-17T03:52:47Z",
        "body": "I'm building a modular online application that should have a single sign on page with cookies  authentication and OpenID for external authentication. So I finally resolved it, by reading how the code was built, finally found and abstracted a way to retrieve the links for the Identity Default UI, so my complaint is how complex is how to retrieve this urls out of the box, and that there are more links than the basic three (Login, Logout and AccessDeniedPath), that are not even included in the configuration, you must change the UI even if you have it on the Identity RCL. So for almost any adjustment you need to do you must scaffold the 27 pages for the Identity UI, and manually find the links or write them. There should be an out of the box solution for handling how to know where are this pages found, even the Default URL that the user will be redirected after login in or login out. Even loading this configuration from appsettings.json is not an easy task, for basic things, and the DefaltUI extension method for configuring it overwrites it, if you set de DefaultIdentity.\r\n\r\nWhen you are developing small sites that must know where to redirect to login to a Single Sign On site, you write code, you recompile, deploy, and it might be \"fast\", but having to develop everything from scratch in all sites or subsites, it's really anoying. I've developed in the last month a couple of things, my first month developing in asp.net core, and had to extend all the basic features.\r\n\r\nI'm also concerned about \"performance\", even if it's not that of a big deal, but if asp.net core is about of performance, then if you're site doesn't need to dynamically generate Identity URLs or any other options, you shouldn't be running the IPostConfigureOptions<CookieAuthenticationOptions> on every request, and an overwrite so that it could be loaded from configuration. Yes, you can remove the DefaultUI, and set all the required features by hand, but this is the way you set \"options\" and give default values for the settings in your application. More complex than in asp.net webforms. \r\n\r\nI've already extended asp.net core to have sitemaps, breadcrumbs, bootstrap tag helpers, for the basic navigation and UI that can be changed without having to rewrite all the html of a site if bootstrap or styles have changed. Building an RCL library is practical, but without localization and writing you URLs everywhere it's not a good practice for maintenance.\r\n\r\nFinally I resolved it this way, registering a service...\r\n\r\n```\r\n    public class AccountManager : IAccountManager\r\n    {\r\n        public AccountManager(IOptionsSnapshot<CookieAuthenticationOptions> cookieOptions)\r\n        {\r\n            this.CookieOptions = cookieOptions.Get(IdentityConstants.ApplicationScheme);\r\n        }\r\n\r\n        private CookieAuthenticationOptions CookieOptions { get; }\r\n\r\n        public string LoginPath => CookieOptions.LoginPath;\r\n\r\n        public string LogoutPath => CookieOptions.LogoutPath;\r\n\r\n        public string AccountPath => SecurityOptions.AccountPath;\r\n    }\r\n```\r\n"
      },
      {
        "user": "Tratcher",
        "created_at": "2019-01-17T22:36:54Z",
        "body": "@HaoK "
      },
      {
        "user": "aspnet-hello",
        "created_at": "2019-04-19T18:13:50Z",
        "body": "We periodically close 'discussion' issues that have not been updated in a long period of time.\r\n\r\nWe apologize if this causes any inconvenience. We ask that if you are still encountering an issue, please log a new issue with updated information and we will investigate.\r\n"
      }
    ]
  },
  {
    "number": 6521,
    "title": "Blazor - Wait with loading after preload animation is done playing",
    "created_at": "2019-01-09T13:07:55Z",
    "closed_at": "2019-01-10T09:44:00Z",
    "labels": [
      "question",
      "area-mvc"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/6521",
    "body": "Is there a way to delay the loading of the first page until after a preload animation is done? I want to replace the boring \"loading...\" with something more neat to look at but can't find a way to force the animation to be done first.",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/6521/comments",
    "author": "Duxez",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-01-09T22:08:00Z",
        "body": "Thanks for contacting us, @Duxez.\r\n@SteveSandersonMS, is there an API being called before the \"loading\" content is about to be replaced by actual content?"
      },
      {
        "user": "SteveSandersonMS",
        "created_at": "2019-01-10T09:44:00Z",
        "body": "> can't find a way to force the animation to be done first.\r\n\r\nThere are various ways you could do that. A simple one would be putting your \"loading\" animation in a full-width-and-height opaque overlay that appears in front of any Blazor-rendered UI, then you can use JS interop to make it disappear (or even fade out) any time you want after your app has started running.\r\n\r\n> is there an API being called before the \"loading\" content is about to be replaced by actual content?\r\n\r\nYes, the `Configure` method in `Startup.cs` is called immediately before the first render."
      }
    ]
  },
  {
    "number": 6479,
    "title": "Cookies not working with Angularjs client but works with postman over .net core WebAPI",
    "created_at": "2019-01-08T12:12:55Z",
    "closed_at": "2019-06-28T16:57:43Z",
    "labels": [
      "question",
      "area-mvc"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/6479",
    "body": "I have AngularJS client connected with ASP.net Core WebAPI (via CORS).I'm storing the value in cookie and passing it from Server to Client. Client doesn't seems to store that cookie, because on subsequent requests i'm not able to find that cookie.\r\nSimilar scenario is working fine in Postman. I can see Cookies(1) in Postman \r\nASP.NET Core WebAPI\r\n\r\nStartup.cs\r\n\r\n```\r\npublic void ConfigureServices(IServiceCollection services)\r\n{\r\n    ... //other configs goes here\r\n    var corsBuilder = new CorsPolicyBuilder();\r\n        corsBuilder.AllowAnyHeader();\r\n        corsBuilder.AllowAnyMethod();\r\n        corsBuilder.AllowAnyOrigin();\r\n        corsBuilder.AllowCredentials();\r\n        services.AddCors(options =>\r\n        {\r\n            options.AddPolicy(\"TestCorsPolicy\", corsBuilder.Build());\r\n        });\r\n        services.Configure<MvcOptions>(options =>\r\n        {\r\n            options.Filters.Add(new CorsAuthorizationFilterFactory(\"TestCorsPolicy\"));\r\n        });\r\n}\r\npublic void Configure(IApplicationBuilder app, IHostingEnvironment env)\r\n{\r\n    var cookiePolicyOptions = new CookiePolicyOptions\r\n        {\r\n            Secure = CookieSecurePolicy.SameAsRequest,\r\n            MinimumSameSitePolicy = SameSiteMode.None\r\n        };\r\n        app.UseCors(\"TestCorsPolicy\");            \r\n        app.UseAuthentication();\r\n        app.UseCookiePolicy(cookiePolicyOptions); \r\n        app.UseHttpsRedirection();\r\n        app.UseMvc();\r\n}\r\n```\r\nCache Set/Get\r\n\r\n```\r\nHttpContext.Response.Cookies.Append(\"Key\", \"-11701\", option);  //Set\r\nHttpContext.Request.Cookies[\"Key\"]; //Get\r\n```\r\n\r\nAngular JS - Post Method\r\n\r\n```\r\nthis.PostApi = function (rowEntity, apiRoute) {\r\n        var def = $q.defer();\r\n        return $http.post(\r\n            apiRoute,\r\n            JSON.stringify(rowEntity),                \r\n            {\r\n                withCredentials: true, // Provided this as well based on another Stackoverflow post\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + getLocalStorageItem(\"Token\")//getLocalStorage(\"Token\"),\r\n                }\r\n            }).then(\r\n                function (response) {\r\n                    def.resolve(response);\r\n                    return def.promise;\r\n                },\r\n                function (error) {\r\n                    // translate the error\r\n                    if (error.status == \"401\") {\r\n                        window.location.href = defaults.sessionExpiredURL;\r\n                        def.reject(error);\r\n                        return def.promise;\r\n                    } else {\r\n                        def.reject(error);\r\n                        return def.promise;\r\n                    }\r\n                });\r\n    }\r\n```\r\n\r\nAngular JS - Config\r\n```\r\nmasterApp.config(function ($httpProvider, localStorageServiceProvider) {        \r\n        $httpProvider.defaults.withCredentials = true;\r\n       \r\n    });\r\n```\r\n\r\nAPI and AngularJS app is deployed behind IIS . I asked my colleague to check with Mobile App, outside of DMZ, and even he is able to get cookies. Seems to be Session is also not working. If either Cookies/Session works, thats fine with me. Thanks\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/6479/comments",
    "author": "vinothvsbe",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-01-08T19:42:40Z",
        "body": "Thanks for contacting us, @vinothvsbe.\r\nCan you see the cookies sent back to the client in the network tab in developer tools of the browser? The fact that the Postman receives the cookies indicates that the service operates just fine."
      },
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-06-28T16:57:55Z",
        "body": "Hi. We're closing this issue as we have heard no response from you for some time now. If you have more details and are encountering this issue please add a new reply and re-open the issue."
      }
    ]
  },
  {
    "number": 6410,
    "title": "antiforgery bad request and hidden 404 result problem",
    "created_at": "2019-01-05T11:21:23Z",
    "closed_at": "2019-07-01T17:42:34Z",
    "labels": [
      "question",
      "area-mvc"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/6410",
    "body": "I recently faced a problem in asp.net core 2.2 (latest version atm)\r\n\r\nI'll describe the scenario that I was able to isolate and reproduce consistently.\r\n1. In Startup.cs have this in `ConfigureServices`:\r\n ```\r\n services.AddMvc(o =>\r\n{               \r\n    o.Filters.Add(new AutoValidateAntiforgeryTokenAttribute());\r\n});\r\n```\r\nand this in the `Configure` method:\r\n```\r\napp.UseStatusCodePagesWithReExecute(\"/Error/HttpError\", \"?statusCode={0}\");\r\n```\r\n2. Now you need to create the `ErrorController` with `HttpError` action and when the statusCode is 404 you need to return a **View** which will **use the _Layout.cshtml** ( !important ), also add `        [IgnoreAntiforgeryToken]` on the `HttpError` action.\r\n\r\n3. In `_Layout.cshtml` you need you need to have `@Html.AntiForgeryToken()` (reason being that you want to use it on ajax post requests)\r\n4. Install `signalr` client library and reference it in `_Layout.cshtml` ( we need a js file with .min.js so that Chrome console will ask for .min.js.map )\r\n5. Delete the signalr `.min.js.map` files if you have them.\r\n6. Add some code in `Home/Index.cshtml` that will do ajax requests, in my example:\r\n```\r\n<script>\r\n    function load() {\r\n        var key = '__RequestVerificationToken';\r\n\r\n        var token = $('[name=\"' + key + '\"]').val();\r\n        var data = [{ name: key, value: token }];\r\n        $.post('@Url.Action(\"GetData\", \"Home\")', data)\r\n            .done(function (res) {\r\n                console.log(res);\r\n                $('#result').append('<p>ok</p>')\r\n            }).fail(function (err) {\r\n                console.log('error', err);\r\n                $('#result').append('<p>error</p>')\r\n            });\r\n    };\r\n\r\n    $(function () {\r\n        load();\r\n\r\n        $(document).click(load);\r\n    });\r\n</script>\r\n\r\n<div id=\"result\">\r\n</div>\r\n```\r\nand dont' forget to add the action in HomeController:\r\n```\r\n        public IActionResult GetData()\r\n        {\r\n            return Json(new { abc = 1 });\r\n        }\r\n```\r\n7. Run the demo (on **IIS Express**) in Google Chrome (Home/Index) and you should be getting \"ok\" lines being appended to the document when clicking on the document, \r\nNow hit F12 to open the chrome console and the browser will try to load the signalr.min.js.map file which doesn't exist, we will get a **404** which returns a view with `_Layout.cshtml` that has `@Html.AntiForgeryToken()` and from now when you click on the document you'll get **400** `bad request` result from the server.\r\n\r\nplease note we won't actually notice the request to `signalr.min.js.map` in the chrome console, it's not visible in the Network tab\r\n\r\nEDIT: \r\nanother way I got this again using:\r\n`app.UseStatusCodePagesWithReExecute` for status code 101 (signalr/synchub, by accident, I never intended to handle 101) \r\nI returned again a View that uses the `_Layout.cshtml` with `@Html.AntiForgeryToken()`, obviously this new token never reached the page content,\r\n and all subsequent requests with the token that is rendered in the page resulted in 400 bad request ",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/6410/comments",
    "author": "omuleanu",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-07-01T17:42:34Z",
        "body": "Thanks for contacting us. We're closing this issue as there was no community involvement here for quite a while now."
      }
    ]
  },
  {
    "number": 6335,
    "title": "IAsyncActionFilter Re-execute action",
    "created_at": "2019-01-03T16:55:24Z",
    "closed_at": "2019-07-01T17:49:34Z",
    "labels": [
      "question",
      "area-mvc"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/6335",
    "body": "I have implemented IAsyncActionFilter as below to try to re-execute the action method after a database error (on insert/update). The idea being that some DB exceptions are actually validation errors. In this case, I am using sql constraints to prevent overlapping dates. The easiest way to check validity is to try to update/insert then catch the error, and return the view with the original data + validation messages. I realise I could do this in the controller code with a try-catch... My controller action has the following code immediately after the signature.\r\n\r\n```\r\n           if (!ModelState.IsValid) {\r\n                return View(\"New\", model);\r\n            }\r\n```\r\n \r\nWhat I would like to do is add errors to the ModelState and re-execute the action. That is what the implementation below is supposed to do.\r\n\r\n```\r\npublic async Task OnActionExecutionAsync(ActionExecutingContext context, ActionExecutionDelegate next) {\r\n\r\n            ActionExecutedContext result = await next();\r\n\r\n            if (result.Exception is DbException && result.ModelState.IsValid) {\r\n                result.ExceptionHandled = true;\r\n                context.ModelState.AddModelError(\"\", result.Exception.Message);\r\n                //  result.Result = null;\r\n                //  result.Exception = default(Exception);\r\n                ActionExecutedContext newresult = await next();\r\n                // context.Result = newresult.Result;\r\n\r\n            }\r\n        }\r\n```\r\n\r\nThe controller code is re-executed but I am clearly missing something as the eventual output a 200 code with no body. What am I missing?\r\n\r\nTIA",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/6335/comments",
    "author": "oferns",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-07-01T17:49:34Z",
        "body": "Thanks for contacting us, @oferns.\r\nThis is not a supported scenario.\r\nYou can achieve this with a custom middleware, which can retry the request as necessary."
      }
    ]
  },
  {
    "number": 5702,
    "title": "@Html.Raw(Html.Partial(\"path\")) does not work",
    "created_at": "2018-12-18T18:10:23Z",
    "closed_at": "2019-07-03T16:56:26Z",
    "labels": [
      "question",
      "area-mvc"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/5702",
    "body": "### Describe the bug\r\nIf I use @Html.Partial(\"someview\"), it works fine and returns the markup.  In my case I need to assign that markup to a javascript variable.  First I tried with just @Html.Raw(Html.Partial(\"path\")), and it does not return markup.  It just returns \"Microsoft.AspNetCore.Mvc.ViewFeatures.Internal.ViewBuffer\" instead of raw markup.\r\n\r\nMy final intention is this:\r\nvar jsMarkup = \"\";\r\njsMarkup = \"@Html.Raw(Html.Partial(\"path\"));\r\n\r\neven from the above the javascript variable \"jsMarkup\" just contains \"Microsoft...ViewBuffer\".  This is the case whether or not I use a js variable.  If I remove \"Html.Raw\" it works, but the markup is not js friendly string obviously.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Using this version of ASP.NET Core '2.1'\r\n2. Run this code '@Html.Raw(Html.Partial(\"path\"))'\r\n3. Will result in:\r\n\r\n\"Microsoft.AspNetCore.Mvc.ViewFeatures.Internal.ViewBuffer\"\r\n\r\n### Expected behavior\r\nHas to render the markup in a raw way.\r\n\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/5702/comments",
    "author": "guywithdoubts",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2018-12-20T17:38:58Z",
        "body": "Thanks for contacting us, @guywithdoubts.\r\n@NTaylorMullen is this expected to work and if so, what should be done?"
      },
      {
        "user": "NTaylorMullen",
        "created_at": "2018-12-20T19:12:41Z",
        "body": "@guywithdoubts the reason it's not working as you intend is because `Html.Partial` returns a complex object (`IHtmlContent`) that is usually unwound when it's rendered by the base page; that being said Html.Raw doesn't understand `IHtmlContent`. If you really want to render your partial s a Raw Html string you'll have to do something like this:\r\n```Razor\r\n@{ \r\n    var partialOutput = await Html.PartialAsync(\"path\");\r\n\r\n    using (var writer = new System.IO.StringWriter())\r\n    {\r\n        partialOutput.WriteTo(writer, HtmlEncoder);\r\n        @Html.Raw(writer.ToString())\r\n    }\r\n}\r\n```"
      }
    ]
  },
  {
    "number": 5131,
    "title": "Creating new app on MAC with dotnet cli with Core3 Preview SDK - CRITICAL PackageReference not added",
    "created_at": "2018-12-15T16:08:32Z",
    "closed_at": "2019-07-08T17:20:03Z",
    "labels": [
      "question",
      "area-mvc"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/5131",
    "body": "MAC\r\ndotnet SDK Core 3 Preview (3.0.100-preview-009812)\r\n\r\nAfter doing this:\r\ndotnet new webapi -o CupcakeApi\r\n\r\nProject does not compile: Fail, Microsoft.\r\n\r\nWorks after manually adding this line to the .csproj file:\r\n```\r\n<ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.App\" />\r\n  </ItemGroup>\r\n```\r\n\r\nTwo words. More Testing.\r\n\r\nThanks",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/5131/comments",
    "author": "atljoseph",
    "comments": [
      {
        "user": "atljoseph",
        "created_at": "2018-12-15T17:55:09Z",
        "body": "Actually that didn't fix it. Still broken. Sad. You give us something to look at it. First time we look at it, the thing doesn't work. Fail. Super Fail for a company like MS. Can't even install the correct Nuget package version >= 3.0.0. Why was that not fixed when installing the 3.0.100 SDK?"
      },
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-07-08T17:19:47Z",
        "body": "Thanks for contacting us, @atljoseph.\r\nClosing as this should be resolved at this point."
      }
    ]
  },
  {
    "number": 4959,
    "title": "Asp Core custom Modelbinder DateTime not working in post",
    "created_at": "2018-12-14T07:33:08Z",
    "closed_at": "2019-02-05T16:21:03Z",
    "labels": [
      "question",
      "area-mvc"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/4959",
    "body": "### Describe the bug\r\nMy custom DateTimeModelBinder is working on HttpGet but not binding on HttpPost (DateTime value is always null ). How can i fix this?\r\n\r\n```csharp\r\n /// <summary>\r\n    /// Нужен для привязки даты формата 31-01-2018 и 31.01.2018 к дате в любой модели\r\n    /// </summary>\r\n    public class DateTimeModelBinder : IModelBinder\r\n    {\r\n\r\n        string[] _customDateFormats = { \"dd.M.yyyy\", \"dd/M/yyyy\", \"dd-M-yyyy\" };\r\n\r\n        private string GetModelName(ModelBindingContext bindingContext)\r\n        {\r\n            // The \"Name\" property of the ModelBinder attribute can be used to specify the\r\n            // route parameter name when the action parameter name is different from the route parameter name.\r\n            // For instance, when the route is /api/{birthDate} and the action parameter name is \"date\".\r\n            // We can add this attribute with a Name property [DateTimeModelBinder(Name =\"birthDate\")]\r\n            // Now bindingContext.BinderModelName will be \"birthDate\" and bindingContext.ModelName will be \"date\"\r\n            if (!string.IsNullOrEmpty(bindingContext.BinderModelName))\r\n            {\r\n                return bindingContext.BinderModelName;\r\n            }\r\n\r\n            return bindingContext.ModelName;\r\n        }\r\n\r\n        public Task BindModelAsync(ModelBindingContext bindingContext)\r\n        {\r\n            if (bindingContext == null)\r\n            {\r\n                throw new ArgumentNullException(nameof(bindingContext));\r\n            }\r\n\r\n            if (bindingContext.ModelType != typeof(DateTime?))\r\n            {\r\n                return Task.CompletedTask;\r\n            }\r\n\r\n            var modelName = GetModelName(bindingContext);\r\n\r\n            var valueProviderResult = bindingContext.ValueProvider.GetValue(modelName);\r\n            if (valueProviderResult == ValueProviderResult.None)\r\n            {\r\n                return Task.CompletedTask;\r\n            }\r\n\r\n            bindingContext.ModelState.SetModelValue(modelName, valueProviderResult);\r\n\r\n            var dateToParse = valueProviderResult.FirstValue;\r\n\r\n            if (string.IsNullOrEmpty(dateToParse))\r\n            {\r\n                return Task.CompletedTask;\r\n            }\r\n\r\n            var dateTime = ParseDate(bindingContext, dateToParse);\r\n\r\n            bindingContext.Result = ModelBindingResult.Success(dateTime);\r\n\r\n            return Task.CompletedTask;\r\n        }\r\n\r\n        private DateTime? ParseDate(ModelBindingContext bindingContext, string dateToParse)\r\n        {\r\n            if (DateTime.TryParseExact(dateToParse, _customDateFormats, CultureInfo.InvariantCulture,DateTimeStyles.None, out DateTime dateValue))\r\n                 return dateValue;\r\n             else\r\n             {\r\n                 bindingContext.ModelState.AddModelError(bindingContext.ModelName, \"Passed date is in incorrect format\");\r\n                 return null;\r\n             }        \r\n        }\r\n    }\r\n}\r\n```",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/4959/comments",
    "author": "vlapenkov",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2018-12-17T15:45:07Z",
        "body": "Thanks for contacting us, @vlapenkov.\r\nCan you please share the code where you configure the model binding and the action?"
      },
      {
        "user": "vlapenkov",
        "created_at": "2018-12-19T15:28:56Z",
        "body": "`DeliveryDate` is always `null`, though i set `{OrderGuid =\"3529d2c5-0296-11e9-9606-d4ae52b5e909\", DeliveryDate=\"12.12.2018\" }` on client and send ajax\r\n``` c#\r\npublic class ChangeOrderViewModel\r\n{\r\n    public Guid OrderGuid { get; set; }\r\n    public DateTime? DeliveryDate { get; set; }\r\n}\r\n\r\n[HttpPost]\r\n[ActionName(\"ChangeOrder\")]\r\npublic async Task<IActionResult> ChangeOrder( [FromBody]ChangeOrderViewModel model )\r\n{\r\n}\r\n```\r\nIn Startup.cs\r\n``` c#\r\nservices.AddMvc(options =>\r\n{\r\n    options.OutputFormatters.Add(new XmlDataContractSerializerOutputFormatter());\r\n    options.ModelBinderProviders.Insert(0, new CustomDateTimeModelBinderProvider());\r\n})\r\n```\r\nthen\r\n``` c#\r\npublic class CustomDateTimeModelBinderProvider : IModelBinderProvider\r\n{\r\n    public IModelBinder GetBinder(ModelBinderProviderContext context)\r\n    {\r\n        if (context.Metadata.ModelType == typeof(DateTime?))\r\n        {\r\n            return new DateTimeModelBinder();\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\r\n```"
      },
      {
        "user": "dougbu",
        "created_at": "2018-12-20T04:29:34Z",
        "body": "@vlapenkov I thought I responded here earlier but don't see my comment.\r\n\r\nIn any case, `[FromBody]` means the _entire_ JSON-formatted boty is handled by the `JsonInputFormatter` and Json.NET. Once model binding calls into input formatting, it's done. Your `CustomDateTimeModelBinderProvider` should never be called. Could you debug to confirm that?\r\n\r\nTo get this scenario to work, send a correctly-formatted `DateTime` value for JSON. Or, move the `DateTime` value into the query string or a route value and add a separate action parameter for it."
      },
      {
        "user": "dougbu",
        "created_at": "2019-02-05T16:21:03Z",
        "body": "@vlapenkov thank you for your feedback. We're closing this issue as the questions asked here have been answered."
      }
    ]
  },
  {
    "number": 4503,
    "title": "asp.net core2.2 Custom Binders For array property not work",
    "created_at": "2018-12-07T14:25:13Z",
    "closed_at": "2019-12-07T02:02:05Z",
    "labels": [
      "question",
      "area-mvc",
      "feature-model-binding"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/4503",
    "body": "show code:\r\naction:\r\n``` c#\r\n        [HttpPost]\r\n        public ActionResult SaveCustomer(Customer customer)\r\n        {\r\n            return View(\"Index\");\r\n        }\r\n\r\n    public class Address\r\n    {\r\n        [ModelBinder(BinderType = typeof(TestBinder))]\r\n        public string Street { get; set; }\r\n        [ModelBinder(BinderType = typeof(TestBinder))]\r\n        public string City { get; set; }\r\n    }\r\n    public class Customer\r\n    {      \r\n        public Address[] Addresses { get; set; }\r\n    }\r\n```\r\n Custom Binders:\r\n``` c#\r\n    public class TestBinder : IModelBinder\r\n    {\r\n        public Task BindModelAsync(ModelBindingContext bindingContext)\r\n        {\r\n            if (bindingContext == null)\r\n            {\r\n                throw new ArgumentNullException(nameof(bindingContext));\r\n            }\r\n            var Name = bindingContext.ModelName;\r\n            var ValueStr = GetValue(bindingContext, Name);\r\n            bindingContext.ModelState.SetModelValue(bindingContext.ModelName, \"Test\", bindingContext.ModelName);\r\n            bindingContext.Result = ModelBindingResult.Success(\"Test\");\r\n            return Task.CompletedTask;\r\n        }\r\n\r\n        private string GetValue(ModelBindingContext context, string name)\r\n        {\r\n            ValueProviderResult result = context.ValueProvider.GetValue(name);\r\n            return result.FirstValue;\r\n        }\r\n    }\r\n```\r\n\r\nBindModelAsync Function is not working...",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/4503/comments",
    "author": "gorillazliuzhe",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-01-16T22:25:13Z",
        "body": "Thanks for contacting us, @gorillazliuzhe.\r\n@dougbu, can you please look into this? Thanks!"
      },
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-04-18T16:32:44Z",
        "body": "@gorillazliuzhe what do you mean by `not working`? Is it not being called or you get an outcome which is not what you expect?"
      },
      {
        "user": "ghost",
        "created_at": "2019-12-07T02:02:04Z",
        "body": "Thank you for contacting us. Due to no activity on this issue we're closing it in an effort to keep our backlog clean. If you believe there is a concern related to the ASP.NET Core framework, which hasn't been addressed yet, please file a new issue."
      }
    ]
  },
  {
    "number": 4632,
    "title": "Unable to use OpenId Connect and Jwt Bearer together in ASP.NET Core 2.1. Error The authentication handler registered for scheme 'Bearer' is 'JwtBearerHandler' which cannot be used for SignInAsync",
    "created_at": "2018-12-06T16:06:23Z",
    "closed_at": "2018-12-13T22:16:10Z",
    "labels": [
      "question",
      "area-auth"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/4632",
    "body": "I have a scenario where:\r\n\r\n1. I have some API endpoints which for I need to use JWT Bearer Token.\r\n2. For other MVC UIs I need to use OpneId Connect.\r\n\r\nThe API part is working, however I'm getting following error when I hit the MVC action method which has `[Authorize]` attribute on it.:\r\n\r\n````csharp\r\nSystem.InvalidOperationException: The authentication handler registered for scheme 'Bearer' is 'JwtBearerHandler' which cannot be used for SignInAsync. The registered sign-in schemes are: Cookies.\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationService.SignInAsync(HttpContext context, String scheme, ClaimsPrincipal principal, AuthenticationProperties properties)\r\n   at Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1.HandleRequestAsync()\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)\r\n````\r\n\r\nHere's my start up:\r\n\r\n````csharp\r\n public void ConfigureServices(IServiceCollection services)\r\n        {\r\n          // other code\r\n            services.AddAuthentication(JwtBearerDefaults.AuthenticationScheme)\r\n                .AddOpenIdConnect(OpenIdConnectDefaults.AuthenticationScheme, options =>\r\n                {\r\n                    options.Authority = $\"{Configuration[\"Oidc:Instance\"]}/{Configuration[\"Oidc:Doamin\"]}/v2.0/\";\r\n                    options.ClientId = Configuration[\"Oidc:ClientId\"];\r\n                    options.CallbackPath = Configuration[\"Oidc:CallbackPath\"];\r\n                    options.ResponseType = OpenIdConnectResponseType.IdToken;\r\n                    options.TokenValidationParameters.ValidateIssuer = true;\r\n                })\r\n                .AddCookie()\r\n                .AddJwtBearer(JwtBearerDefaults.AuthenticationScheme, options =>\r\n                {\r\n                    options.TokenValidationParameters = new TokenValidationParameters\r\n                    {\r\n                        ValidateIssuer = true,\r\n                        ValidateAudience = true,\r\n                        ValidateLifetime = true,\r\n                        ValidateIssuerSigningKey = true,\r\n                        ValidIssuer = Configuration[\"Jwt:Issuer\"],\r\n                        ValidAudience = Configuration[\"Jwt:Issuer\"],\r\n                        IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(Configuration[\"Jwt:Key\"])),\r\n                    };\r\n                    options.ForwardSignIn = OpenIdConnectDefaults.AuthenticationScheme;\r\n                    options.ForwardSignOut = OpenIdConnectDefaults.AuthenticationScheme;\r\n                });\r\n    // other code\r\n````\r\nI assumed `options.ForwardSignIn` whould forward the `SignInAsync` to OpenId but it doesn't.\r\nIs there any other way?",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/4632/comments",
    "author": "iSatishYadav",
    "comments": [
      {
        "user": "blowdart",
        "created_at": "2018-12-06T17:57:18Z",
        "body": "Your problem is here\r\n\r\n`AddAuthentication(JwtBearerDefaults.AuthenticationScheme)`\r\n\r\nYou're telling the authentication layer to use JWT for everything, signin, signout, etc. JWT doesn't have an interactive signin or signout.\r\n\r\nSo, switch it around, the default should be OpenID, and then for your API areas either forward from the ODIC pieces, or use the Scheme parameters in the authorize attribute, or inside your policies."
      }
    ]
  },
  {
    "number": 4445,
    "title": "FromRoute only partially decodes certain values",
    "created_at": "2018-12-05T23:29:48Z",
    "closed_at": "2018-12-07T17:45:33Z",
    "labels": [
      "question",
      "area-mvc"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/4445",
    "body": "The problem I’m having is that we have a code that looks like this:\r\n```\r\n[FromRoute(Name = \"event_name\")]\r\npublic string EventName\r\n{\r\n    get\r\n    {                \r\n        return _eventName;\r\n    }\r\n```\r\nThe following URL gets passed to it:\r\n`something.com/events/0008%20-%2012%2F3%2F2018Existe%20um%20inventario%20incompleto%2C%20deseja%20continar%20%3F%20(Sim)`\r\n\r\n- The encoded value passed through the URL is `0008%20-%2012%2F3%2F2018Existe%20um%20inventario%20incompleto%2C%20deseja%20continar%20%3F%20(Sim)`\r\n- `FromRoute` decodes `EventName` it to `0008 - 12%2F3%2F2018Existe um inventario incompleto, deseja continar ? (Sim)`\r\n- Expected decoded value of `EventName` would be `0008 - 12/3/2018Existe um inventario incompleto, deseja continar ? (Sim)`\r\n\r\nIs there a workaround for that?\r\n\r\n```\r\n<PackageReference Include=\"Microsoft.AspNetCore.Mvc\" Version=\"2.0.0\" />\r\n\r\n#region Assembly Microsoft.AspNetCore.Mvc.Core, Version=2.1.3.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\r\n// .nuget\\packages\\microsoft.aspnetcore.mvc.core\\2.1.3\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Core.dll\r\n#endregion\r\n```",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/4445/comments",
    "author": "nikitagon",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2018-12-05T23:57:45Z",
        "body": "Thanks for contacting us, @nikitagon.\r\n@rynowak, can you please suggest what can be done here? Thanks!"
      },
      {
        "user": "mkArtakMSFT",
        "created_at": "2018-12-07T17:45:33Z",
        "body": "@nikitagon, MVC does not do any decoding of passed route values. The underlying layer, however, does decode some of the values and that's why you see the value of the `EventName` partially decoded. However, slashes are not decoded as they have special meaning.\r\nIf you want to decode slashes in your route value, you'll need to do that manually.\r\nWe could consider adding an option for model binding to automatically decode slashes too, but we haven't heard enough customer feedback with this ask."
      }
    ]
  },
  {
    "number": 5656,
    "title": "Component does not update DOM on a specific scenario",
    "created_at": "2018-11-29T22:25:11Z",
    "closed_at": "2019-04-15T12:57:25Z",
    "labels": [
      "question",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/5656",
    "body": "With the following component I'm trying to apply a transformation to the value in the input. The actual use case is more complicated and makes more sense but this is the simplest repro I could come up with.\r\n\r\nReproduction steps:\r\n\r\n1. Enter a lowercase string in the input, e.g. \"asd\"\r\n1. Result: the string in the input is turned into its uppercase equivalent and the Message is updated correctly.\r\n1. Enter the **same** lowercase string in the input. _Notice that entering any other string works as expected._\r\n\r\nExpected:\r\nThe string in the input **is turned into its uppercase equivalent** and the message is updated correctly.\r\n\r\nActual:\r\nThe string in the input **remains unchanged** and the message is updated correctly.\r\n\r\n```\r\n@page \"/repro\"\r\n<input type=\"text\" bind=\"@RawValue\" />\r\n<div>\r\n    Message: @Message\r\n</div>\r\n@functions\r\n{\r\n    protected string Message { get; set; }\r\n    protected int Count { get; set; }\r\n\r\n    private string _rawValue;\r\n    protected string RawValue\r\n    {\r\n        get => _rawValue;\r\n        set\r\n        {\r\n            _rawValue = value?.ToUpperInvariant();\r\n            Message = $\"_rawValue was set to {_rawValue}. {Count++}\";\r\n            StateHasChanged(); // I don't think this is necessary but I've added it trying to solve the problem. It still doesn't work without this line.\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nIt seems to me there is something wrong but please let me know if it's by design, in which case, could you also please explain how to achieve the behavior I want.",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/5656/comments",
    "author": "rodolfograve",
    "comments": [
      {
        "user": "enetstudio",
        "created_at": "2018-11-30T14:46:52Z",
        "body": "I believe this is by design, or at least this is how things are...\r\n\r\nIf you type the string \"asd\", the two-way binding mechanism store the uppercase string value \"ASD\" in the _rawValue variable, and update the value of the text box to the uppercase string value \"ASD\".\r\nNow, when you erase \"ASD\" and type \"asd\", the value \"asd\" is turned into \"ASD\" once again, and assigned to _rawValue. Blazor sees that the new value is the same as the old value , which means that there is no need to update the text box... "
      },
      {
        "user": "rodolfograve",
        "created_at": "2018-11-30T23:45:44Z",
        "body": "Thanks @enetstudio. That makes sense to me. However, in this case, the end of your sentence should be \"...except that there is\" :-)\r\n\r\nThe actual use case is a currency input in which I convert symbols (like £) to ISO codes like GBP. This works beautifully except when you enter \"gbp\" (which gets transformed into \"GBP\") and then enter \"£\" (which doesn't get transformed into anything.\r\n\r\nAny ideas on how to force Blazor to re-render the control?\r\n\r\nThanks"
      },
      {
        "user": "SteveSandersonMS",
        "created_at": "2019-04-15T12:57:25Z",
        "body": "@enetstudio is correct. The diffing system has no way to know that it should write an update to the DOM, because as far as it knows, the value you're rendering is the same as was last written to the DOM already.\r\n\r\nTo achieve the behavior you want, I'd recommend separating your \"binding\" from your \"value transformation\". If you use `bind-value-oninput`, then Blazor will get a notification on each keystroke, so it will see the intermediate non-transformed values (e.g., lowercase `asd`). Separately, since you only want to transform to uppercase (or convert `£` to `GBP`, etc.) when the user tabs out, put that in an `onblur`:\r\n\r\n```cshtml\r\n<input type=\"text\" bind-value-oninput=\"@RawValue\" onblur=\"@ConvertValue\" />\r\n<div>\r\n    Message: @Message\r\n</div>\r\n@functions\r\n{\r\n    protected string Message { get; set; }\r\n    protected int Count { get; set; }\r\n    protected string RawValue { get; set; }\r\n\r\n    void ConvertValue()\r\n    {\r\n        RawValue = RawValue.ToUpperInvariant();\r\n        Message = $\"RawValue was set to {RawValue}. {Count++}\";\r\n    }\r\n}\r\n```"
      }
    ]
  },
  {
    "number": 5839,
    "title": "Bug: doesn't check duplicated email while changing user's email address",
    "created_at": "2018-11-27T12:28:13Z",
    "closed_at": "2019-01-03T20:45:55Z",
    "labels": [
      "question",
      "area-identity"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/5839",
    "body": "When I call UserManager.SetEmailAsync(), it doesn't validate whether there's duplicated email address in database which could cause more than one users having the same email address.\r\n\r\nIf there're any duplicated email addresses in database, the UserManager.FindByEmailAsync() will not working properly -- it only return one result but not all matching results.\r\n\r\nTherefore, it's necessary to validate duplicated email address while creating user and changing user's email address.",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/5839/comments",
    "author": "hez2010",
    "comments": [
      {
        "user": "blowdart",
        "created_at": "2018-11-29T20:11:31Z",
        "body": "Have you set the RequireUniqueEmail setting in UserOptions? This is off by default. We expect uniqueness on usernames, not emails."
      },
      {
        "user": "hez2010",
        "created_at": "2018-11-30T01:39:23Z",
        "body": "@blowdart \r\nThanks, this fix my problem. \r\nBut I think that the FindByEmailAsync should return an IEnumerable\\<TUser\\>, but not TUser. "
      },
      {
        "user": "blowdart",
        "created_at": "2019-01-03T20:45:55Z",
        "body": "That would be a rather large breaking change I'm afraid, so it's not one we're willing to make."
      },
      {
        "user": "jmatheti",
        "created_at": "2019-03-08T02:39:34Z",
        "body": "> But I think that the FindByEmailAsync should return an IEnumerable<TUser>, but not TUser.\r\n\r\nIf the above is a breaking change, can we atleast have a method in the usermanager to check duplicate email and duplicate username. Currently I have to use `userManager.FindByEmailAsync`  to see if the email already exists before generating the change email token.  This method selects a full user, which is unwanted select queries. \r\n\r\nIt make sense to reject the user request to change email address before generating the token rather sending email and when the user come through the link, `userManager.ChangeEmailAsync` is the one verifying the duplicate emails and its a long process.\r\n"
      }
    ]
  },
  {
    "number": 4230,
    "title": "ASP.NET CORE Web API: Model value is null when doing HTTP Post requests with null Guid",
    "created_at": "2018-11-23T06:11:08Z",
    "closed_at": "2018-11-26T18:58:24Z",
    "labels": [
      "question",
      "area-mvc"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/4230",
    "body": "I'm facing a problem doing post requests via ASP.NET Core Web API. So here's my scenario:\r\n\r\nI'm trying to do a HTTP Post request to an api endpoint with a complex parameter.\r\n\r\n**API Endpoint**\r\n`[HttpPost]\r\n [Route(\"api/createstudent\")]\r\n public async Task<ActionResult> CreateStudent([FromBody]Student student)\r\n    {\r\n        // Service logic\r\n    }`\r\n\r\n**Model**\r\n`public class Student\r\n{\r\n    public Guid StudentId { get; set; }\r\n    public string StudentName { get; set; }\r\n}`\r\n\r\nMy problem is that every time I make a post request to this endpoint the model value is null if I pass below the object.\r\n`{\"studentId\": null,\"studentName\": \"Sam\"}`\r\n\r\nWhereas If I pass empty Guid as below, I am able to get the model.\r\n`{ \"studentId\": \"00000000-0000-0000-0000-000000000000\", \"studentName\": \"Sam\" }`\r\n\r\nIs this a bug in ASP.NET Core 2? As I was able to pass null / Empty Guid for StudentId in .NET Framework WEB API.",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/4230/comments",
    "author": "balukantu",
    "comments": [
      {
        "user": "davidfowl",
        "created_at": "2018-11-25T07:22:54Z",
        "body": "The reason it's failing is because the `Guid` can't be assigned a null value. A simple fix would be to make the StudentId a nullable field (since you want to support it being null).\r\n\r\n```C#\r\npublic class Student\r\n{\r\n    public Guid? StudentId { get; set; }\r\n    public string StudentName { get; set; }\r\n }\r\n```"
      },
      {
        "user": "balukantu",
        "created_at": "2018-11-26T12:03:31Z",
        "body": "Can't we send null value? as I Was able to send the same (null) value in .NET Framework Api."
      },
      {
        "user": "davidfowl",
        "created_at": "2018-11-26T16:41:06Z",
        "body": "GUID's can't be assigned a null value. I'm not sure what ASP.NET Web API did here."
      },
      {
        "user": "davidfowl",
        "created_at": "2018-11-26T16:41:17Z",
        "body": "cc @rynowak @dougbu "
      },
      {
        "user": "dougbu",
        "created_at": "2018-11-26T17:37:08Z",
        "body": "There should be an error in `ModelState` in this scenario. That would be a bug if not.\r\n\r\nOne difference from ASP.NET Web API in this area is that ASP.NET Core MVC will _never_ create a model for a `[FromBody]` parameter or property when the deserializer (Json.NET in this case) encounters an error. (ASP.NET Web API was inconsistent.)\r\n\r\nIIRC the ASP,NET Core reasoning is an API, unlike a view, can't do much with an incomplete model."
      },
      {
        "user": "mkArtakMSFT",
        "created_at": "2018-11-26T18:58:24Z",
        "body": "Thanks for contacting us. We believe that the question you've raised have been answered. If you still feel a need to continue the discussion, feel free to reopen it and add your comments."
      },
      {
        "user": "GusBeare",
        "created_at": "2019-03-06T15:39:48Z",
        "body": "I'm enjoying this same issue. Problem is that for db inserts don't have the Guid yet but I want the model to match the table which has the Guid as the non nullable PK.  The client is JS and I don't really want to try and create a guid with JS so I want to do it in the C# or DB once I've hit the endpoint.\r\n\r\nSending an empty guid string works but is there another way?"
      },
      {
        "user": "GusBeare",
        "created_at": "2019-03-07T11:38:01Z",
        "body": "I thought I'd solved this by adding [JsonIgnore] to the property. That works by enabling theGuid to be empty on post but it breaks the HttpGet because the Guid is left out.\r\n\r\nI've seen fancy methods of with attributes the enable different things for serialise and deserialise but none of them are very elegant.\r\n"
      }
    ]
  },
  {
    "number": 5269,
    "title": "UseWebpackDevMiddleware with latest version of Angular",
    "created_at": "2018-11-20T22:12:01Z",
    "closed_at": "2019-07-08T17:15:55Z",
    "labels": [
      "question",
      "area-mvc",
      "feature-spa"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/5269",
    "body": "Since angular does not use webpack.config.js anymore, it is impossible to make HMR working with only aspnetcore. \r\n\r\nWhen trying to use it it complains that `webpack.config.js` does not exist, but it's not supposed to exist on the latest angular version. ",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/5269/comments",
    "author": "junalmeida",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-07-08T17:15:55Z",
        "body": "Hi. It's been a while this bug has been open. If you haven't resolved it yet and still need help with it, please reopen."
      }
    ]
  },
  {
    "number": 4139,
    "title": "Integer converted to String is deserialized the same as Integer in ApiController",
    "created_at": "2018-11-20T14:34:32Z",
    "closed_at": "2018-11-28T00:02:09Z",
    "labels": [
      "question",
      "area-mvc"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/4139",
    "body": "### Describe the bug\r\nIf the integer is converted to string and returned in ActionResult, it is deserialized as number not string in \r\nHttpResponse.\r\n\r\n### To Reproduce\r\n\r\nWe have tried the following requests with the template API in Visual Studio 2017 (Version 15.9.2). The following requests create the same result : 12\r\n\r\nRequest 1:\r\n`\r\n [HttpGet(\"{id}\")]\r\n        public ActionResult<string> Get(int id)\r\n        {\r\n            return \"12\";\r\n        }\r\n`\r\nRequest 2:\r\n`\r\n[HttpGet(\"{id}/int\")]\r\n        public ActionResult<int> GetInt(int id)\r\n        {\r\n            return 12;\r\n        }\r\n`\r\n\r\nIt causes problems, if the result is used in client side project, we use Angular, and all the methods in string, e.g. split() in JavaScript/TypeScript throws error.\r\n\r\n### Expected behavior\r\nFor Request 1, if the returned value is defined as string, the response should be \r\n\r\n> \"12\"\r\n\r\nFor Request 2, if the returned value is defined as int, the response should be \r\n\r\n> 12\r\n\r\nThanks very much.",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/4139/comments",
    "author": "eastjie",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2018-11-28T00:01:56Z",
        "body": "Thanks for contacting us, @eastjie.\r\nWhat's happening here is that the returned \"12\" text value is being processed by a text formatter. So the response is plan text, rather than JSON.\r\nWhat you can do, to enforce the JSON response is either apply `[Produces(\"application/json\")]` attribute on your action or simply remove the `TextOutputFormatter` from the default list of output formatters configured on MVC options."
      }
    ]
  },
  {
    "number": 3988,
    "title": "automatic compile like Webforms Website",
    "created_at": "2018-11-09T07:33:45Z",
    "closed_at": "2018-11-28T22:20:10Z",
    "labels": [
      "question",
      "area-mvc"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/3988",
    "body": "is there a possibilty to automatically rebuild the / one file on code change like ASP.NET Webforms Website?\r\n\r\nI am thinking of typically real websites, which a small amount of logic, Admin can go to code and change a line Sourcecode in cs/vb with notepad and done. \r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/3988/comments",
    "author": "hannespreishuber",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2018-11-28T22:20:10Z",
        "body": "Thanks for contacting us, @hannespreishuber.\r\nThis is not something we have support for. We do support runtime compilation for `.cshtml` files, but that's it."
      }
    ]
  },
  {
    "number": 3705,
    "title": "EnumSerialization fails when duplicate EnumMember(Value=\"\") exists ",
    "created_at": "2018-10-23T21:29:10Z",
    "closed_at": "2018-12-03T17:50:52Z",
    "labels": [
      "question",
      "area-mvc"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/3705",
    "body": "On .NET Core 2.1.x when a developer inadvertedly duplicates an [EnumValue(\"name\")] in an Enum and serialization of enum is done using StringEnumConverter, WebAPI fails silently and in some cases (in a ServiceFabric App) fails with incomplete chunked response.\r\n\r\nYou can reproduce on a fresh .NET Core API Project with:\r\nModel\\ContentType.cs:\r\n```C#\r\npublic enum ContentType\r\n    {\r\n        [EnumMember(Value = \"type-1\")]\r\n        Type1 = 1,\r\n        [EnumMember(Value = \"type-2\")]\r\n        Type2 = 2,\r\n        [EnumMember(Value = \"type-2\")]\r\n        Type3 = 3,\r\n    }\r\n```\r\n\r\nValuesController:\r\n```C#\r\n[Route(\"api/[controller]\")]\r\n    [ApiController]\r\n    public class ValuesController : ControllerBase\r\n    {\r\n        // GET api/values\r\n        [HttpGet]\r\n        public ActionResult<IEnumerable<ContentType>> Get()\r\n        {\r\n            return new List<ContentType> { ContentType.Type1, ContentType.Type2, ContentType.Type3 };\r\n        }\r\n    }\r\n```\r\n\r\nStartup.cs:\r\n```C#\r\nservices.AddMvc()\r\n                .AddJsonOptions(options =>\r\n                {\r\n                    options.SerializerSettings.Converters.Add(new Newtonsoft.Json.Converters.StringEnumConverter());\r\n                })\r\n                .SetCompatibilityVersion(CompatibilityVersion.Version_2_1);\r\n```\r\n\r\nShould the expected behavior be a runtime exception ?\r\n\r\nIt is my first bug report to .NET Core, so bear with me :)",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/3705/comments",
    "author": "FernandoNunes",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2018-11-28T22:49:55Z",
        "body": "Thanks for contacting us, @FernandoNunes.\r\n@JamesNK any thoughts?"
      },
      {
        "user": "JamesNK",
        "created_at": "2018-11-29T01:34:06Z",
        "body": "A duplicate `EnumMemberAttribute` value will certainly throw an error by Newtonsoft.Json.\r\n\r\nI tested this out in a simple app:\r\n\r\n```cs\r\n// GET api/values\r\n[HttpGet]\r\npublic ActionResult Get()\r\n{\r\n    return Ok(new\r\n    {\r\n        hello = \"World\",\r\n        contentTypes = new ContentType[] { ContentType.Type1, ContentType.Type2 }\r\n    });\r\n}\r\n```\r\n\r\nMVC returned a 200 response even with the serialization error. Is this expected?\r\n\r\n```\r\ninfo: Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor[1]\r\n      Executing ObjectResult, writing value of type '<>f__AnonymousType0`2[[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WebApplication16.Controllers.ContentType[], WebApplication16, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.\r\ninfo: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]\r\n      Executed action WebApplication16.Controllers.ValuesController.Get (WebApplication16) in 156.0603ms\r\nfail: Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware[1]\r\n      An unhandled exception has occurred while executing the request.\r\nSystem.InvalidOperationException: Enum name 'type-2' already exists on enum 'ContentType'.\r\n   at Newtonsoft.Json.Utilities.EnumUtils.InitializeValuesAndNames(Type enumType)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Newtonsoft.Json.Utilities.EnumUtils.TryToString(Type enumType, Object value, Boolean camelCaseText, String& name)\r\n   at Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(JsonWriter writer, Object value, JsonSerializer serializer)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(JsonWriter writer, JsonConverter converter, Object value, JsonContract contract, JsonContainerContract collectionContract, JsonProperty containerProperty)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(JsonWriter writer, Object value, JsonContract valueContract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerProperty)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(JsonWriter writer, IEnumerable values, JsonArrayContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(JsonWriter writer, Object value, JsonContract valueContract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerProperty)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(JsonWriter writer, Object value, JsonObjectContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(JsonWriter writer, Object value, JsonContract valueContract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerProperty)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(JsonWriter jsonWriter, Object value, Type objectType)\r\n   at Newtonsoft.Json.JsonSerializer.SerializeInternal(JsonWriter jsonWriter, Object value, Type objectType)\r\n   at Newtonsoft.Json.JsonSerializer.Serialize(JsonWriter jsonWriter, Object value)\r\n   at Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.WriteObject(TextWriter writer, Object value)\r\n   at Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.WriteResponseBodyAsync(OutputFormatterWriteContext context, Encoding selectedEncoding)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeResultAsync(IActionResult result)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResultFilterAsync[TFilter,TFilterAsync]()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResultExecutedContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.ResultNext[TFilter,TFilterAsync](State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeResultFilters()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()\r\n   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)\r\nwarn: Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware[2]\r\n      The response has already started, the error page middleware will not be executed.\r\nfail: Microsoft.AspNetCore.Server.Kestrel[13]\r\n      Connection id \"0HLILJ96N4250\", Request id \"0HLILJ96N4250:00000001\": An unhandled exception was thrown by the application.\r\nSystem.InvalidOperationException: Enum name 'type-2' already exists on enum 'ContentType'.\r\n   at Newtonsoft.Json.Utilities.EnumUtils.InitializeValuesAndNames(Type enumType)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Newtonsoft.Json.Utilities.EnumUtils.TryToString(Type enumType, Object value, Boolean camelCaseText, String& name)\r\n   at Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(JsonWriter writer, Object value, JsonSerializer serializer)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(JsonWriter writer, JsonConverter converter, Object value, JsonContract contract, JsonContainerContract collectionContract, JsonProperty containerProperty)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(JsonWriter writer, Object value, JsonContract valueContract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerProperty)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(JsonWriter writer, IEnumerable values, JsonArrayContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(JsonWriter writer, Object value, JsonContract valueContract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerProperty)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(JsonWriter writer, Object value, JsonObjectContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(JsonWriter writer, Object value, JsonContract valueContract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerProperty)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(JsonWriter jsonWriter, Object value, Type objectType)\r\n   at Newtonsoft.Json.JsonSerializer.SerializeInternal(JsonWriter jsonWriter, Object value, Type objectType)\r\n   at Newtonsoft.Json.JsonSerializer.Serialize(JsonWriter jsonWriter, Object value)\r\n   at Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.WriteObject(TextWriter writer, Object value)\r\n   at Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.WriteResponseBodyAsync(OutputFormatterWriteContext context, Encoding selectedEncoding)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeResultAsync(IActionResult result)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResultFilterAsync[TFilter,TFilterAsync]()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResultExecutedContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.ResultNext[TFilter,TFilterAsync](State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeResultFilters()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()\r\n   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)\r\ninfo: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]\r\n      Request finished in 330.4632ms 200 application/json; charset=utf-8\r\n```\r\n\r\nIs this situation caused by part of the response already being written when the error happened?"
      },
      {
        "user": "mkArtakMSFT",
        "created_at": "2018-12-03T17:50:52Z",
        "body": "Thank you for your feedback.\r\nWe're closing this issue as the behavior discussed is by design. ASP.NET Core doesn't do response buffering so the status code cannot be updated after the response has started."
      }
    ]
  },
  {
    "number": 5257,
    "title": "Recommendations for injecting appsettings.json configuration into Angular",
    "created_at": "2018-10-17T16:27:22Z",
    "closed_at": "2019-07-22T17:23:26Z",
    "labels": [
      "question",
      "area-mvc",
      "feature-spa"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/5257",
    "body": "Hi all, I'm looking for the best practice in sharing configuration with the Angular client app - for example database connection strings and auth keys. \r\n\r\nI've seen some blogs around using a Controller API and then fetching these from within the Angular app. I've also seen an article suggesting you can inject from the Home controller into the razor page, which then adds fields to the app-root tag, however in the latest template there is no home controller.\r\n\r\nIn Angular you have the environment.ts files, would be interested to hear if there's some good practice around how to share/structure this configuration properly between server and client\r\n\r\nThanks in advance",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/5257/comments",
    "author": "jjgriff93",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-07-22T17:23:26Z",
        "body": "Thanks for contacting us. We're closing this issue as there was no community involvement here for quite a while now."
      }
    ]
  },
  {
    "number": 3620,
    "title": "Is possible have multiple authentication schemes on 2.1?",
    "created_at": "2018-10-12T15:04:11Z",
    "closed_at": "2018-10-17T03:18:17Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/3620",
    "body": "My project was built using ASP.NET Core 1.1. Later, updated to 2.1 and the default scheme overrides all.\r\nI has two authentication schemes Auth0 and a custom authentication logic with cookie-based.\r\nIs it possible to continue using this?",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/3620/comments",
    "author": "luiarhs",
    "comments": [
      {
        "user": "Tratcher",
        "created_at": "2018-10-12T15:34:08Z",
        "body": "How do you determine which one to challenge the user for?"
      },
      {
        "user": "poke",
        "created_at": "2018-10-12T15:48:04Z",
        "body": "Generally yes, you can have as many authentication schemes as you want. You just have to keep in mind that there are just a few default points that activate the authentication stack.\r\n\r\nSo if you have multiple schemes that e.g. handle challenge, then you will need some custom code that invokes that properly.\r\n\r\nIf you share more details about your setup we can probably help you better (although this might be a better fit for Stack Overflow)."
      },
      {
        "user": "luiarhs",
        "created_at": "2018-10-13T02:47:33Z",
        "body": "Thanks! @Tratcher and @poke for theirs answers. My project has two different sites with different authentication methods one by Auth0 and the other by a external service the both methods use Cookies for mantain the sesion. My temporary solution was verify the site and choose the scheme but I think that is inappropriate.\r\n\r\nSome like this:\r\n```cs\r\npublic void ConfigureServices(IServiceCollection services)\r\n{\r\n    RegisterAuthenticationService(services);\r\n    services.AddMvc().SetCompatibilityVersion(CompatibilityVersion.Version_2_1);\r\n}\r\n\r\nprivate void RegisterAuthenticationService(IServiceCollection services)\r\n{\r\n    if(siteOne)\r\n    {\r\n        services.AddAuthentication(options => {\r\n            options.DefaultAuthenticateScheme = CookieAuthenticationDefaults.AuthenticationScheme;\r\n            options.DefaultSignInScheme = CookieAuthenticationDefaults.AuthenticationScheme;\r\n            options.DefaultChallengeScheme = CookieAuthenticationDefaults.AuthenticationScheme;\r\n        })\r\n        .AddCookie()\r\n        .AddOpenIdConnect(\"Auth0\", options => \r\n        {\r\n            ...\r\n        });\r\n     }\r\n     else if (siteTwo)\r\n     {\r\n         services.AddAuthentication(CookieAuthenticationDefaults.AuthenticationScheme)\r\n         .AddCookie(options =>\r\n             options.LoginPath = \"/Login\"\r\n             ...\r\n         );\r\n     }\r\n}\r\n```\r\nIs there another way to resolve it?"
      },
      {
        "user": "Tratcher",
        "created_at": "2018-10-13T03:10:50Z",
        "body": "If they are to unique sites then that seems perfectly reasonable. You wouldn't want the wrong form of auth active in the wrong site."
      }
    ]
  },
  {
    "number": 3547,
    "title": "[Question] Hosting .NET Core app from normal ASP .NET Application",
    "created_at": "2018-09-23T05:56:25Z",
    "closed_at": "2018-12-18T22:16:39Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/3547",
    "body": "Hi,\r\n\r\nIs is possible to boostrap ( host ) a .NET Core Application ( ASP .NET Core WebApi mostly ) from a non-core enviroment? Boostrap from the startup but different port? Is there any drawback/problems with this approach?",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/3547/comments",
    "author": "Chrissx",
    "comments": [
      {
        "user": "Tratcher",
        "created_at": "2018-09-23T06:16:12Z",
        "body": "You mean to host ASP.NET Core from System.Web? No."
      },
      {
        "user": "davidfowl",
        "created_at": "2018-09-24T01:05:36Z",
        "body": "Anything is possible without enough will power but it's completely unsupported."
      },
      {
        "user": "aspnet-hello",
        "created_at": "2018-12-18T22:16:36Z",
        "body": "We periodically close 'discussion' issues that have not been updated in a long period of time.\r\n\r\nWe apologize if this causes any inconvenience. We ask that if you are still encountering an issue, please log a new issue with updated information and we will investigate.\r\n"
      }
    ]
  },
  {
    "number": 3357,
    "title": "System.ArgumentOutOfRangeException: Count cannot be less than zero. Parameter name: count",
    "created_at": "2018-07-25T20:04:09Z",
    "closed_at": "2018-12-06T22:40:54Z",
    "labels": [
      "question",
      "area-mvc",
      "feature-diagnostics",
      "area-middleware"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/3357",
    "body": "_From @nagarjunacts on July 25, 2018 13:8_\n\nMy app hosted in azure had lot of failure on secondary instance. When investigating the app logs we had x number of requests returning 500 and no corresponding exception in application insights. The ones that did made to server returned this error tagged to operation_Id.\r\n\r\n> System.ArgumentOutOfRangeException: Count cannot be less than zero.\r\n> Parameter name: count\r\n>    at System.String.CopyTo(Int32 sourceIndex, Char[] destination, Int32 destinationIndex, Int32 count)\r\n>    at System.IO.StreamWriter.Write(String value)\r\n>    at Microsoft.AspNetCore.Hosting.Views.ErrorPage.<ExecuteAsync>d__6.MoveNext()\r\n> --- End of stack trace from previous location where exception was thrown ---\r\n>    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n>    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n>    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n>    at Microsoft.Extensions.RazorViews.BaseView.<ExecuteAsync>d__29.MoveNext()\r\n> --- End of stack trace from previous location where exception was thrown ---\r\n>    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n>    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n>    at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Frame`1.<ProcessRequestsAsync>d__2.MoveNext()\r\n\r\n\r\nI am not sure if this is an issue, could anyone tell me how to solve this from happening. THis happens intermittently and i believe this brings the app down.\r\n\r\nExtra information\r\n```\r\n{\r\n   \"parsedStack\":[\r\n      {\r\n         \"method\":\"System.String.CopyTo\",\r\n         \"assembly\":\"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\",\r\n         \"level\":0,\r\n         \"line\":0\r\n      },\r\n      {\r\n         \"method\":\"System.IO.StreamWriter.Write\",\r\n         \"assembly\":\"System.Runtime.Extensions, Version=4.2.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\",\r\n         \"level\":1,\r\n         \"line\":0\r\n      },\r\n      {\r\n         \"method\":\"Microsoft.AspNetCore.Hosting.Views.ErrorPage+<ExecuteAsync>d__6.MoveNext\",\r\n         \"assembly\":\"Microsoft.AspNetCore.Hosting, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\",\r\n         \"level\":2,\r\n         \"line\":0\r\n      },\r\n      {\r\n         \"method\":\"System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw\",\r\n         \"assembly\":\"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\",\r\n         \"level\":3,\r\n         \"line\":0\r\n      },\r\n      {\r\n         \"method\":\"System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess\",\r\n         \"assembly\":\"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\",\r\n         \"level\":4,\r\n         \"line\":0\r\n      },\r\n      {\r\n         \"method\":\"System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification\",\r\n         \"assembly\":\"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\",\r\n         \"level\":5,\r\n         \"line\":0\r\n      },\r\n      {\r\n         \"method\":\"Microsoft.Extensions.RazorViews.BaseView+<ExecuteAsync>d__29.MoveNext\",\r\n         \"assembly\":\"Microsoft.AspNetCore.Hosting, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\",\r\n         \"level\":6,\r\n         \"line\":0\r\n      },\r\n      {\r\n         \"method\":\"System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw\",\r\n         \"assembly\":\"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\",\r\n         \"level\":7,\r\n         \"line\":0\r\n      },\r\n      {\r\n         \"method\":\"System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess\",\r\n         \"assembly\":\"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\",\r\n         \"level\":8,\r\n         \"line\":0\r\n      },\r\n      {\r\n         \"method\":\"Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Frame`1+<ProcessRequestsAsync>d__2.MoveNext\",\r\n         \"assembly\":\"Microsoft.AspNetCore.Server.Kestrel.Core, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\",\r\n         \"level\":9,\r\n         \"line\":0\r\n      }\r\n   ],\r\n   \"outerId\":\"0\",\r\n   \"message\":\"Connection id \\\"0HLFGA416MUIK\\\", Request id \\\"0HLFGA416MUIK:00000313\\\": An unhandled exception was thrown by the application.\",\r\n   \"type\":\"System.ArgumentOutOfRangeException\",\r\n   \"id\":\"28060465\",\r\n   \"severityLevel\":\"Error\"\r\n}\r\n```\r\n\r\nThanks\r\n \n\n_Copied from original issue: aspnet/KestrelHttpServer#2753_",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/3357/comments",
    "author": "Tratcher",
    "comments": [
      {
        "user": "Tratcher",
        "created_at": "2018-07-25T20:04:10Z",
        "body": "_From @Eilon on July 25, 2018 17:53_\n\nI wonder if maybe this is really an issue with the diagnostics page?"
      },
      {
        "user": "pacojones",
        "created_at": "2018-11-13T14:50:18Z",
        "body": "Can anyone on earth explain why this was closed without any explanation?!?"
      },
      {
        "user": "Eilon",
        "created_at": "2018-11-13T17:45:46Z",
        "body": "@pacojones - this issue still open."
      },
      {
        "user": "mkArtakMSFT",
        "created_at": "2018-11-28T22:53:47Z",
        "body": "Thanks for contacting us, @pacojones.\r\n@dougbu, can you please look into this? Thanks!"
      },
      {
        "user": "dougbu",
        "created_at": "2018-11-28T23:13:01Z",
        "body": "@nagarjunacts or @pacojones does this issue occur with more recent releases such as 2.0.4, 2.1.3 or 2.2.0-preview3-35497?\r\n\r\nWhat are the failing project's exact dependencies? Ideally, please provide us with a minimal repro project that illustrates the problem -- preferably hosted in a GitHub repo."
      },
      {
        "user": "mkArtakMSFT",
        "created_at": "2018-12-06T22:40:54Z",
        "body": "Hi. We're closing this issue as we have heard no response from you for some time now. If you have more details and are encountering this issue please add a new reply and re-open the issue."
      }
    ]
  },
  {
    "number": 5215,
    "title": "How to upgrade existing project with older template version to latest template version?",
    "created_at": "2018-07-10T16:50:38Z",
    "closed_at": "2019-08-13T22:33:27Z",
    "labels": [
      "question",
      "area-mvc",
      "feature-spa"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/5215",
    "body": "I've just converted my existing Angular .Net Core 2.1 project in VS 2017 15.7.4 to the latest released version of the template (I was using the older version that came installed with VS). I installed the template with _dotnet new --install Microsoft.AspNetCore.SpaTemplates::*_, created a default project and them manually reworked my project by comparing the two. \r\n\r\nMy question is, when version 2.1 is officially released, what is the best way to update my project to include the changes from 2.0.7 to 2.1? Do I need to do the same and compare the changed files or is there a better way?",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/5215/comments",
    "author": "AlejandroFlorin",
    "comments": [
      {
        "user": "bharney",
        "created_at": "2018-09-28T15:48:14Z",
        "body": "Any suggestions for someone who will be going through the same process? I am in the same boat, where I have an older Spa Template structure and would like to upgrade. My primary problem had been upgrading 2.1 `Startup.cs` and `Program.cs`. After adding the 2.1 compatibility flag to startup, everything broke. I tried looking at the .Net Core docs, but the upgrade path from 2.0 to 2.1 does not seem so cut and dry."
      },
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-08-13T22:33:27Z",
        "body": "Thanks for contacting us.\r\nThere is no automated path in doing this. The best suggestion would be to follow the migration guide for each release, where we point out the specific things to be updated/replaced."
      }
    ]
  },
  {
    "number": 3182,
    "title": "Use the same data protection encryption settings in registry on every server in a webfarm",
    "created_at": "2018-06-02T06:27:35Z",
    "closed_at": "2018-08-31T19:10:54Z",
    "labels": [
      "question",
      "area-dataprotection"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/3182",
    "body": "The out-of-the-box solution for using data protection keys in a webfarm is storing them on a unc path and share this over all servers in the webfarm.\r\n\r\nThis feels like a single point of failure, because all servers use the same share, what if this share goes offline or becomes unavailable for some reason? \r\nI know it is possible to create my own mechanism, but it is about security, so it is a risk. Something you rather not customize.\r\n\r\nIt would be a better solution if all servers do not have to depend on other servers for their keys and just share the same encryption settings in registry.",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/3182/comments",
    "author": "vincentkeizer",
    "comments": [
      {
        "user": "Tratcher",
        "created_at": "2018-06-02T11:49:51Z",
        "body": "A primary reason to share a location is so that keys can be rolled easily. Trying to keep them in sync manually across a farm sounds like a pain."
      },
      {
        "user": "vincentkeizer",
        "created_at": "2018-06-04T05:53:52Z",
        "body": "That sounds to me like something you could manage/automate by using a continuous delivery strategy. \r\n"
      },
      {
        "user": "blowdart",
        "created_at": "2018-06-04T19:20:54Z",
        "body": "Remember keys get created by the servers, not centrally. You could of course use a database, but you'd have to write that yourself, and Windows can do mirroring of shares.\r\n\r\nAnd a registry approach isn't cross platform :)"
      },
      {
        "user": "vincentkeizer",
        "created_at": "2018-06-05T10:46:08Z",
        "body": "I understand the registry is not a cross platform approach. \r\nSo the onjly cross platform approach without custom implemations is a unc path? Because I think creating custom code for dataprotection is a risk."
      },
      {
        "user": "blowdart",
        "created_at": "2018-06-05T17:48:28Z",
        "body": "Well there's also azure blob storage, which is an option. I can see your concern about custom code, but you're not creating custom encryption code, all you are doing is creating a storage mechanism, which has two interfaces, one to add a new key and one to get all the keys. Everything else is taken care of for you, including protecting the keys, rotating the keys and so on."
      }
    ]
  },
  {
    "number": 3159,
    "title": "Generalization of the ModelState error messages",
    "created_at": "2018-05-20T19:33:27Z",
    "closed_at": "2018-06-07T16:48:11Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/3159",
    "body": "Hey everyone,\r\nI am making a school project where I want to use localization in the SPA project, not in API.\r\nFor this project I am using dotnet core 2.0.\r\n\r\nThe problem what I actually have is, how to generalize error messages like:\r\n - for invalid input returns 'invalid_input'\r\n - for missing data returns 'required'\r\n\r\nExample JSON:\r\n```\r\n{\r\n  'login': 'required',\r\n  'password': 'too_short'\r\n}\r\n```\r\n\r\nRegards,\r\nTheAifam5",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/3159/comments",
    "author": "TheAifam5",
    "comments": [
      {
        "user": "davidfowl",
        "created_at": "2018-06-06T06:00:33Z",
        "body": "/cc @pranavkm "
      },
      {
        "user": "pranavkm",
        "created_at": "2018-06-06T16:50:07Z",
        "body": "@dougbu \\ @kichalla any suggestions on how you could do this?"
      },
      {
        "user": "dougbu",
        "created_at": "2018-06-06T17:03:40Z",
        "body": "With ASP.NET Core 2.0, the weapon of choice would be `DefaultModelBindingMessageProvider`. Use methods such as `SetValueIsInvalidAccessor(...)` to set the MVC-generated error messages to whatever you want. Can make those changes generally using `MvcOptions.ModelBindingMessageProvider` or can implement `IBindingMetadataProvider` (and use `BindingMetadata.ModelBindingMessageProvider`) to make changes on a per-metadata basis."
      },
      {
        "user": "TheAifam5",
        "created_at": "2018-06-07T12:11:42Z",
        "body": "Thank you. That's kind a useful information for me. I'm gonna check this out today."
      },
      {
        "user": "pranavkm",
        "created_at": "2018-06-07T16:48:11Z",
        "body": "@TheAifam5 feel free to reopen this issue if you have further questions."
      }
    ]
  },
  {
    "number": 3116,
    "title": "[Question] Diagnostics - UseExceptionHandler culture in url",
    "created_at": "2018-05-04T11:49:40Z",
    "closed_at": "2018-11-30T22:34:08Z",
    "labels": [
      "question",
      "area-mvc",
      "feature-diagnostics",
      "area-middleware"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/3116",
    "body": "Hi,\r\n\r\nI've written a middleware that handles localization via url if the culture is not present in the url segment. So `home/about` will be redirected to e.g `sv/home/about`. \r\n\r\nWhen adding the `ExceptionHandleMiddleware` I've a few options and I choose `UseExceptionHandler(\"/error/500\")`.  In the method the `HttpContext.Features.Get<IExceptionHandlerPathFeature>` is always `null`, most likely to the redirect my middleware performs due to the lack of culture. How to I best solve this issue?\r\n\r\n1. Re-write my middleware to **not** delete the related items/features/.... Maybe doing this copy is expensive and that is something I would like to avoid.\r\n2. Add an overload to the `UseExceptionHandler` which allows me to construct the path at runtime. Perhaps `Func<HttpContext, string>` then I can resolve `IRequestCultureFeature` from context and extract the culture and create the correct path. This would be added to the options object\r\n3. Perhaps just make `ExceptionHandlerOptions.PathString` virtual would suffice. This allows for creation of a new options instance that can take `IHttpContextProvider` from which it would be possible to get the current context instance and resolve culture.\r\n\r\n**Edit:** The above concept would also be useful when setting `CallbackPath` in `RemoteAuthenticationOptions` and other similar cases.\r\n\r\nThanks",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/3116/comments",
    "author": "joacar",
    "comments": [
      {
        "user": "Tratcher",
        "created_at": "2018-05-04T18:08:48Z",
        "body": "Have you considered re-ordering your middleware so the localization one is before the exception handler? I assume your localization middleware is less likely to generate exceptions."
      },
      {
        "user": "joacar",
        "created_at": "2018-05-08T15:05:29Z",
        "body": "Yes that would probably be the best option for this case. Reviewed my library and currently it is **not** a middleware, merely methods to handle case when routing is missing the registered identifier: `culture`. So this is currently just tied with routing. Perhaps rewrite as middleware and create extensions methods to register the necessary classes to also have working routing in MVC. Regarding the other cases, I would like an option to provide the culture as format, or by other means, just to reduce the number of redirects.  \r\n\r\n@Tratcher Refactoring and adding the middleware won't fix the redirects, though."
      },
      {
        "user": "Tratcher",
        "created_at": "2018-05-08T15:18:37Z",
        "body": "Any reason you're doing redirects for culture rather than a server side url re-write?"
      },
      {
        "user": "joacar",
        "created_at": "2018-05-08T15:27:11Z",
        "body": "No - just ignorance. My \"middleware\" currently does the follow\r\n\r\n1. Check if the request url contains the culture specific placeholder.\r\n2. If missing, invoke custom method to make a good guess. Otherwise check cookie or other registered providers. \r\n(**If not found add marker** <-- Maybe will be possible then since the redirect won't clear the property bag)\r\n3. Fix url by formatting url according to options.\r\n4. Redirect.\r\n\r\nStep four doesn't add any value as far as I can see since the steps will be short circuit at step 1. Can url re-write suffice as last step?"
      },
      {
        "user": "Tratcher",
        "created_at": "2018-05-08T15:31:02Z",
        "body": "It depends. If you're only trying to fix it up for routing then yes. However it has side effects for things like caching where it could cause cross contamination."
      },
      {
        "user": "mkArtakMSFT",
        "created_at": "2018-11-30T22:34:08Z",
        "body": "Closing this issue as there was no community involvement for quite a while now."
      }
    ]
  },
  {
    "number": 2970,
    "title": "Merch available?",
    "created_at": "2018-03-17T14:46:01Z",
    "closed_at": "2018-07-11T21:11:09Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/2970",
    "body": "Is there any .net core merch specifically for the 2.1 release? Perhaps a T-shirt?",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/2970/comments",
    "author": "SneezeWeeze",
    "comments": [
      {
        "user": "Eilon",
        "created_at": "2018-03-19T05:21:18Z",
        "body": "@DamianEdwards @shanselman @richlander - is there?"
      },
      {
        "user": "SneezeWeeze",
        "created_at": "2018-04-03T03:38:38Z",
        "body": "Chiming in here because I would seriously like to buy multiple pieces. I figure the sooner this is discussed the higher the chances of it getting made if not already in progress. "
      },
      {
        "user": "Eilon",
        "created_at": "2018-04-03T05:21:58Z",
        "body": "@SneezeWeeze sorry I haven't heard or seen anything on this front"
      },
      {
        "user": "aspnet-hello",
        "created_at": "2018-07-11T21:11:06Z",
        "body": "We periodically close 'discussion' issues that have not been updated in a long period of time.\r\n\r\nWe apologize if this causes any inconvenience. We ask that if you are still encountering an issue, please log a new issue with updated information and we will investigate.\r\n"
      }
    ]
  },
  {
    "number": 2832,
    "title": "What is the mean of the Side-by-side app versioning when targeting .NET Core. and does not Full .net support side by side?",
    "created_at": "2018-01-28T19:05:25Z",
    "closed_at": "2018-01-31T20:32:50Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/2832",
    "body": "Hi All, \r\nI want to know what they main when they said What is the mean of the Side-by-side app versioning when targeting .NET Core. and does not Full .net support side by side?",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/2832/comments",
    "author": "WaedJabareen",
    "comments": [
      {
        "user": "davidfowl",
        "created_at": "2018-01-28T19:16:18Z",
        "body": "I can install multiple versions of .NET Core on the same machine and have various applications target those versions of .NET Core. If I have 2 applications A and B, A can target .NET Core 1.1 and B can target .NET Core 2.0.\r\n\r\nThis isn’t possible with .NET Framework today. It’s a Windows component and only one version can exist on the machine at a time. This means that you can’t run one application with .NET Framework 4.6 and 4.7 on the same machine. Every version of .NET Framework replaces the previous one. As a result it’s hard to make changes without breaking existing running applications."
      },
      {
        "user": "glennc",
        "created_at": "2018-01-31T20:32:50Z",
        "body": "Closing this as I think it was answered. You can re-open it, make another issue, or post here again if you need more help."
      },
      {
        "user": "a-patel",
        "created_at": "2018-04-30T12:12:41Z",
        "body": "As per your explanation, \r\nWe cannot host two different applications,  A (NET Framework 4.6) and B (NET Framework 4.7) in IIS same time.\r\nright?\r\n"
      },
      {
        "user": "kolexinfos",
        "created_at": "2018-06-19T07:14:23Z",
        "body": "@davidfowl If you ask me, I think that your statement sounds contradictory, would you mind given another scenario for your .Net Framework explanation, you mentioned in the first sentence that it was not possible, then you went ahead to say it is possible but I think with one application? "
      },
      {
        "user": "davidfowl",
        "created_at": "2018-06-19T07:17:28Z",
        "body": "I’m not sure what you mean? Which part was unclear?"
      },
      {
        "user": "kolexinfos",
        "created_at": "2018-06-19T07:21:33Z",
        "body": "**This isn’t possible with .NET Framework today.**  Negative\r\n\r\n**This means that you can run one application with .NET Framework 4.6 and 4.7 on the same machine** Positive"
      },
      {
        "user": "davidfowl",
        "created_at": "2018-06-19T07:22:41Z",
        "body": "Ah that’s a typo, it should be can’t."
      }
    ]
  },
  {
    "number": 2826,
    "title": "When to use IServiceProviderFactory?",
    "created_at": "2018-01-26T17:23:37Z",
    "closed_at": "2018-01-29T12:03:48Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/2826",
    "body": "What are the scenarios to use the IServiceProviderFactory interface and how would I use it?\r\n\r\nIs this the proper way to create your own ServiceProvider?\r\n\r\n``` cs\r\nusing Microsoft.Extensions.DependencyInjection;\r\nusing System;\r\n\r\nnamespace THNETII.DependencyInjection.Sample\r\n{\r\n    public static partial class Program\r\n    {\r\n        private static IServiceProvider serviceProvider;\r\n\r\n        public static int Main(string[] args)\r\n        {\r\n            var serviceCollection = new ServiceCollection();\r\n            ConfigureServices(serviceCollection);\r\n            ServiceProvider serviceProvider = serviceCollection.BuildServiceProvider();\r\n            var serviceProviderFactory = serviceProvider\r\n                .GetService<IServiceProviderFactory<IServiceCollection>>();\r\n            if (serviceProviderFactory != null)\r\n            {\r\n                serviceProvider.Dispose();\r\n                Program.serviceProvider = serviceProviderFactory\r\n                    .CreateServiceProvider(serviceCollection);\r\n            }\r\n            else\r\n                Program.serviceProvider = serviceProvider;\r\n            return Run(args ?? Array.Empty<string>());\r\n        }\r\n\r\n        private static int Run(string[] args) => 0;\r\n\r\n        private static void ConfigureServices(IServiceCollection serviceCollection) { }\r\n    }\r\n}\r\n```\r\n\r\nIn the code above a `ConfigureServices` method could theoretically add a different implementation for `IServiceProviderFactory` allowing other `IServiceProvider` types to be instatiated. But once I have added an `IServiceProviderFactory` to the service collection, there is no good way to access the factory short of instantiating a default service provider and then replacing it?",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/2826/comments",
    "author": "fredrikhr",
    "comments": [
      {
        "user": "fredrikhr",
        "created_at": "2018-01-28T13:27:45Z",
        "body": "Alternatively, you could create the following `Build`-extension method to replace the `BuildServiceProvider`-method like this:\r\n\r\n``` csharp\r\nusing Microsoft.Extensions.DependencyInjection;\r\nusing System;\r\nusing System.Linq;\r\nusing System.Reflection;\r\n\r\nnamespace DependencyInjectionServiceProviderFactory\r\n{\r\n    public static class ServiceCollectionServiceProviderExtensions\r\n    {\r\n        private static IServiceProvider BuildServiceProvider<TContainerBuilder>(\r\n            IServiceProviderFactory<TContainerBuilder> factory,\r\n            IServiceCollection services)\r\n        {\r\n            var builder = factory.CreateBuilder(services);\r\n            return factory.CreateServiceProvider(builder);\r\n        }\r\n\r\n        private static MethodInfo BuildServiceProviderInfo =\r\n            typeof(ServiceCollectionServiceProviderExtensions)\r\n            .GetMethod(\r\n                nameof(BuildServiceProvider),\r\n                BindingFlags.NonPublic | BindingFlags.Static\r\n                );\r\n\r\n        public static IServiceProvider Build(this IServiceCollection services)\r\n        {\r\n            if (services == null)\r\n            {\r\n                throw new ArgumentNullException(nameof(services));\r\n            }\r\n\r\n            IServiceProvider serviceProvider = null;\r\n            // Create a default ServiceProvider to use to dependency inject\r\n            // services for an injected Service Provider Factory.\r\n            var defaultServiceProvider = services.BuildServiceProvider();\r\n\r\n            /// <summary>\r\n            /// Filter predicate to filter for <see cref=\"ServiceDescriptor\"/>\r\n            /// instances containing <see cref=\"IServiceProviderFactory{}\"/>\r\n            /// as the <see cref=\"ServiceDescriptor.ServiceType\"/>.\r\n            /// </summary>\r\n            bool factoryPredicate(ServiceDescriptor desc)\r\n            {\r\n#if NETSTANDARD1_3\r\n                var t = desc.ServiceType.GetTypeInfo();\r\n#elif NETSTANDARD2_0\r\n                var t = desc.ServiceType;\r\n#endif\r\n                if (t.IsGenericType)\r\n                {\r\n                    var genericDef = t.GetGenericTypeDefinition();\r\n                    return genericDef == typeof(IServiceProviderFactory<>);\r\n                }\r\n                return false;\r\n            }\r\n\r\n            // The last ServiceDescriptor is significant.\r\n            var factoryDescriptor = services.LastOrDefault(factoryPredicate);\r\n            if (factoryDescriptor != null)\r\n            {\r\n                // Get ServiceProviderFactory Instance\r\n                var factoryService = defaultServiceProvider\r\n                    .GetService(factoryDescriptor.ServiceType);\r\n                if (factoryService != null)\r\n                {\r\n                    var miGeneric = BuildServiceProviderInfo;\r\n                    // Construct a generic method for the <code>TContainerBuilder</code>\r\n                    // the ServiceProviderFactory uses.\r\n                    var miConstructed = miGeneric.MakeGenericMethod(\r\n                        factoryDescriptor.ServiceType.GenericTypeArguments\r\n                        );\r\n                    // Invoke the factory to construct a ServiceProvider out of\r\n                    // The current service collection.\r\n                    serviceProvider = (IServiceProvider)miConstructed.Invoke(\r\n                        null,\r\n                        new[] { factoryService, services }\r\n                        );\r\n                    // The default service provider might be disposable\r\n                    if (defaultServiceProvider is IDisposable disp)\r\n                        disp.Dispose();\r\n                }\r\n            }\r\n            return serviceProvider ?? defaultServiceProvider;\r\n        }\r\n    }\r\n}\r\n```"
      },
      {
        "user": "davidfowl",
        "created_at": "2018-01-29T11:37:00Z",
        "body": "Hosting creates 2 service providers to \"solve\" this problem. There's a bootstrapping service provider and the application service provider. The bootstrapping service provider has the `IServiceProviderFactory<TContainer>` and that is resolved to figure out how to construct the concrete IContainer and the IServiceProvider for a particular DI container. We do this so that we can resolve the `IServiceProviderFactory` from a DI container. If you don't need to do this then it isn't important.\r\n\r\nIf you don't want to use 2 containers then you can always new up the IServiceProviderFactory directly. One issue is that since it's generic, it's impossible to store it in a class that isn't generic. "
      },
      {
        "user": "fredrikhr",
        "created_at": "2018-01-29T12:03:48Z",
        "body": "@davidfowl yes, I had a look at Hosting, and that was my understanding as well. My second example comes in large part from filtering out the relevant parts from Hosting.\r\n\r\nThank you! :+1:"
      }
    ]
  },
  {
    "number": 2789,
    "title": "area routing with url segment as parameter ",
    "created_at": "2018-01-17T12:47:15Z",
    "closed_at": "2018-02-07T22:51:16Z",
    "labels": [
      "question",
      "area-mvc"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/2789",
    "body": "I'm trying to create a route for a RESTful API using ASP.NET Core that describes the area/dataset and partition the resource resides in eg. {area}/{partition}/{controller}/{action}/{id?}\r\n\r\nI also need to support the fall back for  {area}/{controller}/{action}/{id?} and {controller}/{action}/{id?}\r\nwhen a {partition} or area/dataset is not supplied is this possible?",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/2789/comments",
    "author": "grahamehorner",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2018-02-07T22:51:16Z",
        "body": "Hi @grahamehorner. It seems you just need to define your routes in an order you want them to be handled. If a request can't be matched with a route, it'll be evaluated against the next one - in the order those have been defined in the Startup class."
      }
    ]
  },
  {
    "number": 2782,
    "title": "Is there any way to read and rewrite the request body in a middleware?",
    "created_at": "2018-01-16T08:25:40Z",
    "closed_at": "2018-01-18T06:50:57Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/2782",
    "body": "If i do it like this,:\r\n```\r\nusing System;\r\nusing System.IO;\r\nusing System.Threading.Tasks;\r\nusing Microsoft.AspNetCore.Http;\r\nusing Microsoft.AspNetCore.Http.Internal;\r\nusing Newtonsoft.Json;\r\n\r\nnamespace WebApplication5.Middleware\r\n{\r\n    public class CryptoMiddleware\r\n    {\r\n        private readonly RequestDelegate _next;\r\n\r\n        public CryptoMiddleware(RequestDelegate next)\r\n        {\r\n            _next = next;\r\n        }\r\n\r\n        public async Task Invoke(HttpContext context)\r\n        {\r\n            var req = context.Request;\r\n            var resp = context.Response;\r\n            var orignalResponseBody = resp.Body;\r\n\r\n            using (var responseStream = new MemoryStream())\r\n            {\r\n                try\r\n                {\r\n                    resp.Body = responseStream;\r\n\r\n                    req.EnableRewind();\r\n                    using (var reader = new StreamReader(req.Body))\r\n                    {\r\n                        var reqData = reader.ReadToEnd();\r\n                    }\r\n\r\n                    var reqPlainObj = new\r\n                    {\r\n                        data = \"plain text\"\r\n                    };\r\n                    var reqPlainString = JsonConvert.SerializeObject(reqPlainObj);\r\n\r\n                    using (var writer = new StreamWriter(req.Body))\r\n                    {\r\n                        writer.Write(reqPlainString);\r\n                    }\r\n\r\n                    await _next(context);\r\n\r\n                    using (var reader = new StreamReader(resp.Body))\r\n                    {\r\n                        var str = reader.ReadToEnd();\r\n                        Console.WriteLine($\"response plain:{str}\");\r\n                    }\r\n\r\n                    var respDataObj = new\r\n                    {\r\n                        data = \"response data\"\r\n                    };\r\n                    var respDataStr = JsonConvert.SerializeObject(respDataObj);\r\n                    \r\n                    using (var writer = new StreamWriter(orignalResponseBody))\r\n                    {\r\n                        writer.Write(respDataStr);\r\n                    }\r\n                }\r\n                finally\r\n                {\r\n                    resp.Body = orignalResponseBody;\r\n                }\r\n            }\r\n           \r\n        }\r\n    }\r\n}\r\n\r\n```\r\nthe paramater in my action is always null.",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/2782/comments",
    "author": "HongyanShen",
    "comments": [
      {
        "user": "Tratcher",
        "created_at": "2018-01-16T16:37:05Z",
        "body": "req.Body should never be written to. If you want to augment it you should replace the stream. Your biggest problem though is that you forgot to rewind the buffer. Add a Seek(0...) or Postion = 0 before calling next.\r\n\r\nYou may have similar problem with your response body. Also, don't augment the response body without clearing the Content-Length response header or updating the Content-Type."
      },
      {
        "user": "HongyanShen",
        "created_at": "2018-01-17T02:08:36Z",
        "body": "@Tratcher thanks a lot,you have saved me from a lot of troubles."
      },
      {
        "user": "hishamco",
        "created_at": "2018-01-17T10:26:01Z",
        "body": "I think this should be closed while it's answered"
      }
    ]
  },
  {
    "number": 2769,
    "title": "Complete example of the correct order of middleware",
    "created_at": "2018-01-11T12:19:41Z",
    "closed_at": "2018-01-12T17:06:40Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/2769",
    "body": "I can't find an example which shows what is the correct order for all the following middleware when used together. It would be nice if there would be a maintained startup.cs containing ALL possible middleware.\r\n\r\nUseStatusCodePagesWithRedirects\r\nUseStaticFiles\r\nUseAuthentication\r\nUseResponseCaching\r\nUseWebSockets\r\nUseSignalR\r\nUseResponseCompression\r\nUseMvc\r\n\r\nWould save a lot of time and errors having it. \r\nThanks!",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/2769/comments",
    "author": "guylando",
    "comments": [
      {
        "user": "Tratcher",
        "created_at": "2018-01-11T16:21:19Z",
        "body": "There is no definitive order, only some relative dependencies between individual components. E.g. StatusCodes should come before components that generate responses without bodies. StaticFiles are often early in the pipeline for efficiency, there can be a lot of them. Auth should come before components that require auth, like MVC. Caching should come before components that generate cacheable responses like MVC. WebSockets should come before components that use them like SignalR. Compression should come before components that generate compressable responses, and after caching if you want to cache the compressed version.\r\n\r\nMaybe what we need to explain is if a middleware handles requests as they arrive, or if it inserts itself to react to responses as they're generated. E.g. caching and compression attach to a request as it comes in and monitor the response to see if they need to react. StaticFiles by contract handles any requests it can immediately."
      },
      {
        "user": "guylando",
        "created_at": "2018-01-11T23:15:29Z",
        "body": "Thanks, Maybe a dependency tree\\graph can be built\\maintained in the documentation instead of one startup.cs because the possibilities are better described in a tree\\graph than in a linear code? Such tree\\graph would probably be very useful for many"
      },
      {
        "user": "Tratcher",
        "created_at": "2018-01-12T05:36:50Z",
        "body": "Even a table might help as a quick reference:\r\n\r\nMiddleware | Ordering\r\n---------------|----------\r\nUseStatusCodePagesWithRedirects | Before components that set status codes\r\nUseAuthentication | Before HttpContext.User is needed. Terminal for OAuth callbacks.\r\nUseResponseCaching | Before components that want caching\r\nUseWebSockets | Before components that want to use WebSockets\r\nUseResponseCompression | Before components that want to use compression\r\nUseStaticFiles | Terminal if a request matches files\r\nUseSignalR | Terminal for matching routes / hubs\r\nUseMvc | Terminal if a request matches routes / controllers & actions\r\n\r\nPossibly sorted by pass through vs terminal. That sorting alone would give you a sense of the ordering."
      },
      {
        "user": "guylando",
        "created_at": "2018-01-12T16:45:04Z",
        "body": "That's great! thanks"
      },
      {
        "user": "Tratcher",
        "created_at": "2018-01-12T17:06:39Z",
        "body": "This issue was moved to aspnet/Docs#5172"
      }
    ]
  },
  {
    "number": 2043,
    "title": "how can get action's customer Attribute in Filter",
    "created_at": "2017-05-26T07:41:55Z",
    "closed_at": "2017-05-27T03:37:42Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/2043",
    "body": "asp.net mvc4  \r\nin myFilterAttribute class OnActionExecuting method\r\nI can do it\r\n```csharp\r\nObject[] actionFilter = context.ActionDescriptor.GetCustomAttributes(typeof(NoFilterAttribute), false);\r\nif (actionFilter.Length > 0)\r\n{\r\n        base.OnActionExecuting(filterContext);\r\n        return;\r\n}\r\n```\r\nbut in asp.net core 1.1\r\ncontext.ActionDescriptor has't GetCustomAttributes method. \r\nI want to get my action exists my customer FilterAttribute, \r\n\r\nI have a One CustomerFilterAttribute register in global. but my some class not  need this Filter\r\nhow can do it.\r\nwho can help me ? thks everybody",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/2043/comments",
    "author": "dinjonya",
    "comments": [
      {
        "user": "rynowak",
        "created_at": "2017-05-26T17:48:17Z",
        "body": "I suggest making your attribute implement the `IFilterMetadata` attribute, then it will be present in `context.Filters`. \r\n\r\nIf this is not possible you should downcast the action descriptor to `ControllerActionDescriptor` and then access the action `MethodInfo` that way."
      },
      {
        "user": "dinjonya",
        "created_at": "2017-05-27T03:37:42Z",
        "body": "I solved it。\r\n```csharp\r\npublic class ApiCallFilterAttribute : IActionFilter\r\n{\r\n        public void OnActionExecuting(ActionExecutingContext context)\r\n        {            \r\n            foreach (var filterDescriptors in context.ActionDescriptor.FilterDescriptors)\r\n            {\r\n                if (filterDescriptors.Filter.GetType() == typeof(NoFilterAttribute))\r\n                {\r\n                    return;\r\n                }\r\n            }\r\n      }\r\n  }\r\n```"
      },
      {
        "user": "dandohotaru",
        "created_at": "2018-11-08T12:30:32Z",
        "body": "I stumbled upon a situation where i needed the produced output from any of the levels a `ProducesAttribute` can be defined and i ended up with something along these lines\r\n\r\n```\r\nvar globalAttributes = context.ApiDescription.ActionDescriptor.FilterDescriptors.Select(p => p.Filter);\r\nvar controlerAttributes = context.MethodInfo?.DeclaringType?.GetCustomAttributes(true);\r\nvar methodAttributes = context.MethodInfo?.GetCustomAttributes(true);\r\nvar produceAttributes = globalAttributes\r\n\t.Union(controlerAttributes)\r\n\t.Union(methodAttributes)\r\n\t.OfType<ProducesAttribute>();\r\n```"
      }
    ]
  },
  {
    "number": 1821,
    "title": "Error at DefaultAntiforgeryTokenSerializer.Deserialize(String serializedToken)",
    "created_at": "2016-11-16T16:26:51Z",
    "closed_at": "2016-12-07T23:46:41Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/1821",
    "body": "I'm getting an error with a very short stack trace. It occurs when I try to login to my .net core web application. Also, I can't seem to reproduce the error on my development environment. It only occurs on my staging environment. I'm having a hard time finding out where this error is coming from or why it's happening. Does anyone have an idea?\r\n\r\n```\r\nat Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTokenSerializer.Deserialize(String serializedToken)\r\nat Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.GetCookieTokenDoesNotThrow(HttpContext httpContext)\r\n```\r\n\r\nNot doing anything special in my Login post.\r\n\r\n        [AllowAnonymous]\r\n        [HttpPost(\"/Login\")]\r\n        public async Task<IActionResult> Login(LoginModel lm, string returnUrl)\r\n        {\r\n            ViewBag.ReturnUrl = returnUrl;\r\n\r\n            var loginResult = await _authManager.SignInAsync(lm.Username, lm.Password);\r\n            if (loginResult.Result == LoginValidationResultType.Ok)\r\n            {\r\n                if (string.IsNullOrWhiteSpace(returnUrl))\r\n                {\r\n                    return Redirect(\"/ew/default.asp?GroupID=23\");\r\n                }\r\n                else\r\n                {\r\n                    return Redirect(returnUrl);\r\n                }\r\n            }\r\n            return View(lm);\r\n        }\r\n\r\nHere's my project.json:\r\n\r\n```\r\n  \"buildOptions\": {\r\n    \"emitEntryPoint\": true,\r\n    \"preserveCompilationContext\": true,\r\n    \"warningsAsErrors\": true\r\n  },\r\n    \"dependencies\": {\r\n      \"MyApp.Services\": \"1.0.0-*\",\r\n      \"Microsoft.AspNetCore.Diagnostics.Elm\": \"0.1.0\",\r\n      \"Microsoft.AspNetCore.Authentication.Cookies\": \"1.0.0\",\r\n      \"Microsoft.AspNetCore.Authorization\": \"1.0.0\",\r\n      \"Microsoft.AspNetCore.Diagnostics\": \"1.0.0\",\r\n      \"Microsoft.AspNetCore.Hosting\": \"1.0.0\",\r\n      \"Microsoft.AspNetCore.Hosting.Abstractions\": \"1.0.0\",\r\n      \"Microsoft.AspNetCore.Http.Extensions\": \"1.0.0\",\r\n      \"Microsoft.AspNetCore.Localization\": \"1.0.0\",\r\n      \"Microsoft.AspNetCore.Mvc\": \"1.0.0\",\r\n      \"Microsoft.AspNetCore.Routing\": \"1.0.0\",\r\n      \"Microsoft.AspNetCore.Server.IISIntegration\": \"1.0.0\",\r\n      \"Microsoft.AspNetCore.Server.Kestrel\": \"1.0.0\",\r\n      \"Microsoft.AspNetCore.Session\": \"1.0.0\",\r\n      \"Microsoft.AspNetCore.StaticFiles\": \"1.0.0\",\r\n      \"Microsoft.Extensions.Caching.SqlServer\": \"1.0.0\",\r\n      \"Microsoft.Extensions.Logging.Console\": \"1.0.0\",\r\n      \"Microsoft.Extensions.Logging.Debug\": \"1.0.0\",\r\n      \"Microsoft.VisualStudio.Web.BrowserLink.Loader\": \"14.0.0\",\r\n      \"Microsoft.AspNetCore.Razor.Tools\": {\r\n        \"version\": \"1.0.0-preview2-final\",\r\n        \"type\": \"build\"\r\n      },\r\n      \"Microsoft.Extensions.Configuration.EnvironmentVariables\": \"1.0.0\",\r\n      \"Microsoft.Extensions.Configuration.Json\": \"1.0.0\",\r\n      \"Microsoft.Extensions.Logging\": \"1.0.0\",\r\n      \"Microsoft.Extensions.Options.ConfigurationExtensions\": \"1.0.0\",\r\n      \"Microsoft.DotNet.ProjectModel\": \"1.0.0-rc4-003206\"\r\n    },\r\n\r\n  \"frameworks\": {\r\n    \"net461\": {}\r\n  },\r\n\r\n  \"runtimeOptions\": {\r\n    \"configProperties\": {\r\n      \"System.GC.Server\": true\r\n    }\r\n  },\r\n\r\n  \"tools\": {\r\n    \"BundlerMinifier.Core\": \"2.0.238\",\r\n    \"Microsoft.AspNetCore.Razor.Tools\": \"1.0.0-preview2-final\",\r\n    \"Microsoft.AspNetCore.Server.IISIntegration.Tools\": \"1.0.0-preview2-final\"\r\n  },\r\n\r\n  \"scripts\": {\r\n    \"postpublish\": \"dotnet publish-iis --publish-folder %publish:OutputPath% --framework %publish:FullTargetFramework%\"\r\n  }\r\n```\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/1821/comments",
    "author": "john-luke-laue",
    "comments": [
      {
        "user": "john-luke-laue",
        "created_at": "2016-11-18T21:28:53Z",
        "body": "I didn't have AntiForgeryValdiation setup. This seems to have resolved the issue.\n\n```\nservices.AddMvc(options =>\n{\n    options.Filters.Add(new AutoValidateAntiforgeryTokenAttribute());\n});\n```\n"
      },
      {
        "user": "john-luke-laue",
        "created_at": "2016-12-06T01:04:16Z",
        "body": "Actually, setting up AntiForgery did not fix the issue..."
      },
      {
        "user": "john-luke-laue",
        "created_at": "2016-12-06T18:24:05Z",
        "body": "I was able to a get a little more information about the error:\r\n\r\nPath: /Login\r\nHTTP Method: GET \r\nException Message: The antiforgery token could not be decrypted. \r\n\r\nThis error was occurring even before I added the AutoValidateAntiforgeryTokenAttribute filter. \r\nWhy would an anti-forgery token need validation on a GET?\r\n"
      },
      {
        "user": "rynowak",
        "created_at": "2016-12-06T18:28:22Z",
        "body": "/cc @dougbu "
      },
      {
        "user": "dougbu",
        "created_at": "2016-12-06T18:42:26Z",
        "body": "@john-luke-laue the `GetCookieTokenDoesNotThrow()` method catches (and logs) all exceptions. What is the impact of the exception you're seeing -- outside debugging sessions?\r\n\r\nSeparately the `AutoValidateAntiforgeryTokenAuthorizationFilter` is added by default these days. Your addition shouldn't have changed much."
      },
      {
        "user": "john-luke-laue",
        "created_at": "2016-12-06T18:50:45Z",
        "body": "@dougbu other than the log, there seems to be no impact. Seems to continue on gracefully and the /Login page is reached."
      },
      {
        "user": "dougbu",
        "created_at": "2016-12-06T19:04:42Z",
        "body": "The behaviour once we enter the Antiforgery system is as-designed.\r\n\r\nBut I'm not sure why it appears Antiforgery is used for a GET request. Since the action method quoted in the original description isn't relevant, I'm guessing invoked `Login()` method has an explicit `[ValidateAntiForgeryToken]`. Is that the case?"
      },
      {
        "user": "john-luke-laue",
        "created_at": "2016-12-06T19:16:49Z",
        "body": "@dougbu Not the case for me. No `[ValidateAntiForgeryToken]`. Just `[AllowAnonymous]`.\r\n\r\n```\r\n[AllowAnonymous]\r\n[HttpGet(\"/Login\", Name = \"Login\")]\r\npublic IActionResult Login(string returnUrl)\r\n{\r\n   //...\r\n}\r\n```\r\n\r\nIf it's working as expected, and doesn't seem to have an impact, can I safely ignore this error?"
      },
      {
        "user": "dougbu",
        "created_at": "2016-12-06T20:36:45Z",
        "body": "> If it's working as expected, and doesn't seem to have an impact, can I safely ignore this error?\r\n\r\nYes, it's safe to ignore catching a first-chance exception in `GetCookieTokenDoesNotThrow()`.\r\n\r\nI forgot something earlier: Calling into the Antiforgery system would be normal for the Login view. Must check for existing tokens when generating / reusing tokens for the response."
      },
      {
        "user": "john-luke-laue",
        "created_at": "2016-12-07T21:53:24Z",
        "body": "@dougbu Does this mean that ASP.NET core automatically puts AntiForgery Validation on the Login view?\r\n\r\nI'm using app.UseCookieAuthentication and I specify the LoginPath, so I guess that's how it knows where my login view is. Would that make sense?\r\n\r\nAlso, it seems to only happen after a user's Authentication Cookie has expired. So they are redirected to GET /Login."
      },
      {
        "user": "dougbu",
        "created_at": "2016-12-07T23:46:41Z",
        "body": "@john-luke-laue MVC includes antiforgery tokens in generated forms by default. That can be overridden but the templates do not do this.\r\n\r\nI'm not sure what you mean in the remainder of your last comment. Suggest they are probably better answered on StackOverflow or through experimentation.\r\n\r\nClosing this issue because your original questions are answered."
      }
    ]
  },
  {
    "number": 1308,
    "title": "Is there a way to create a class library for .NET Core and the normal .NET",
    "created_at": "2016-02-17T09:46:31Z",
    "closed_at": "2016-02-23T17:54:21Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/1308",
    "body": "Hi everyone,\n\nI need a way to build a library that I can use in a WPF-Application and in a .NET Core Web-API. Is there any way to do this?\n\nPaule\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/1308/comments",
    "author": "paule96",
    "comments": [
      {
        "user": "Eilon",
        "created_at": "2016-02-21T19:45:47Z",
        "body": "Sure - create an xproj/project.json, target whichever framework(s) you want, and cross-compile to those frameworks. E.g. target `dnxcore50` and `net451`. In WPF you'd consume the `net451` build, and in .NET Core you'd use the `dnxcore50` target (note that this target is in the process of being changed, but if you use it right now you'll be well-prepared for the future).\n"
      },
      {
        "user": "paule96",
        "created_at": "2016-02-23T17:05:23Z",
        "body": "Okay thx :)\n"
      }
    ]
  },
  {
    "number": 1226,
    "title": "Using Localization in a console application",
    "created_at": "2016-01-11T14:15:26Z",
    "closed_at": "2016-01-19T16:07:08Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/1226",
    "body": "How can we use localization in the console application?\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/1226/comments",
    "author": "alexbocharov",
    "comments": [
      {
        "user": "Eilon",
        "created_at": "2016-01-16T00:25:13Z",
        "body": "@DamianEdwards \n"
      },
      {
        "user": "davidfowl",
        "created_at": "2016-01-19T08:10:34Z",
        "body": "@alexbocharov Can you be more specific\n"
      },
      {
        "user": "alexbocharov",
        "created_at": "2016-01-19T08:16:49Z",
        "body": "@davidfowl It can be used for localization of console applications?  Is there a working example?\n"
      },
      {
        "user": "davidfowl",
        "created_at": "2016-01-19T08:18:16Z",
        "body": "I still don't know what you mean. Our repository has localization middleware. Middleware is for ASP.NET specifically. What features are you looking for that would apply to the console application? What exactly are you trying to localize? \n"
      },
      {
        "user": "alexbocharov",
        "created_at": "2016-01-19T08:22:05Z",
        "body": "I'm doing a console client to work with SignalR. I want to localize the message output\n"
      },
      {
        "user": "DamianEdwards",
        "created_at": "2016-01-19T16:07:07Z",
        "body": "You can just normal .NET localization (e.g. `ResourceManager` and/or resx files with generated static classes). If you like the new `IStringLocalizer` abstraction, you could choose to use that, but it's really intended to work better when using ASP.NET's DI system.\n"
      }
    ]
  },
  {
    "number": 861,
    "title": "ErrorPageOptions in beta6",
    "created_at": "2015-08-24T21:47:28Z",
    "closed_at": "2015-08-28T14:37:04Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/861",
    "body": "After updating the ASP.Net5 WebApp project template to beta6 I have the following issue in Startup.cs:\n\n```\napp.UseErrorPage(ErrorPageOptions.ShowAll);\n```\n\nThis line throws _'ErrorPageOptions' does not contain a definition for 'ShowAll'._ Any idea, how this is handled in beta6?\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/861/comments",
    "author": "manfredk",
    "comments": [
      {
        "user": "manfredk",
        "created_at": "2015-08-24T21:57:34Z",
        "body": "ErrorPageOptions still live in Diagnostics, so I checked it in Object Viewer but couldn't find \"ShowAll\".\n\nAfter reading the intellisense description I solved the problem with:\n\n```\napp.Properties[\"host.AppMode\"] = \"development\";\napp.UseErrorPage();\n```\n\nThis worked and seems to be the way to show all errors in beta6.\n"
      },
      {
        "user": "Tratcher",
        "created_at": "2015-08-25T16:36:43Z",
        "body": "Correct, most of the configuration was removed from EPO. Note you don't need the `app.Properties[\"host.AppMode\"] = \"development\";` line either, that looks like legacy from Katana.  To conditionally include the middleware do something like this:\n\n``` c#\n        public void Configure(IApplicationBuilder app, IHostingEnvironment env)\n        {\n            // Add the following to the request pipeline only in development environment.\n            if (env.IsDevelopment())\n            {\n                app.UseErrorPage();\n            }\n            else\n            {\n                // Add Error handling middleware which catches all application specific errors and\n                // sends the request to the following path or controller action.\n                app.UseErrorHandler(\"/Home/Error\");\n            }\n// ...\n```\n"
      },
      {
        "user": "henkmollema",
        "created_at": "2015-08-27T07:33:47Z",
        "body": "You used to be able to configure which parts of the error page you wanted to show with `ErrorPageOptions`. That has been removed since beta6 and we just show everything by default. The only thing can configure now is the amount of lines of source code before and after the line of code in the exception's stack frame. You can remove the `ErrorPageOptions.ShowAll` as stated above.\n"
      },
      {
        "user": "manfredk",
        "created_at": "2015-08-28T14:37:04Z",
        "body": "thx for the clarification, very helpful.\n"
      }
    ]
  },
  {
    "number": 645,
    "title": "Implicit references",
    "created_at": "2015-05-29T16:49:36Z",
    "closed_at": "2015-06-06T10:26:22Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/645",
    "body": "If an app makes an explicit reference to some assembly in some package, you would expect it to have that package listed in the _project.json_ file. \n\nHowever what happens if there is an implicit reference? The one use-case we have is that the **Hosting:Application** environment variable _may_ be set and this allows an alternative Startup class to be executed when the app starts up. This has nothing to do with the app itself (the environment variable applies to _all_ apps) so the app would not have an entry in the _project.json_ file. However when you try to run the app, it fails because the runtime is trying to find the global Startup class and since there is no entry in the _project.json_ file for the appropriate package the load fails even if the package is available in the _packages_ folder. \n\nThis begs the question on how such corner cases for implicit references should be handled. Ideally there should be a way (env variable etc.) to specify which package contains the assembly containing the global startup. Or am I doing something wrong with my setup?\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/645/comments",
    "author": "sujitdmello",
    "comments": [
      {
        "user": "Tratcher",
        "created_at": "2015-06-04T20:37:23Z",
        "body": "Yeah, that’s not supposed to work. The package directory is not searched by Assembly.Load, packages must be directly or transitively referenced from the project.json. I think it would work if the assembly were in the GAC or in the root application directory.\n"
      },
      {
        "user": "sujitdmello",
        "created_at": "2015-06-05T15:25:53Z",
        "body": "GAC is not a viable options since we are targeting CoreCLR.  And asking each app to package an assembly in their root folder is a bit odd.\n\nI think the Hosting:Application value should contain both the package and assembly name and get resolved by the runtime as a complete unit.\n\nSujit\n"
      },
      {
        "user": "davidfowl",
        "created_at": "2015-06-05T16:37:30Z",
        "body": "We don't have first class support for adding to the dependency closure outside of the project.json file. It's doable with a custom assembly loader, it's also possible to do it if you launch dnx manually and pass in search paths. At that point tho the version resolution has already happened so if your hosting:application and its dependency closure use anything that conflicts with the application, it may fail (but that's no different to what happens today in regular .NET apps). \n\nThe DNX resolves the dependency graph upfront based on your `project.json` (it doesn't load the assemblies, it just resolves them), so for any assemblies you load outside of that, you're on your own.\n"
      },
      {
        "user": "sujitdmello",
        "created_at": "2015-06-05T17:00:28Z",
        "body": "Thanks @Tratcher  @davidfowl  for the explanation. The only issue is that this negates the usage of the Hosting:Application feature. I am not sure how this was intended to be used but if an application has to have a reference to an assembly that it does not actually use, but may get called implicitly by the StartupLoader based on the environment variable, then that design is a bit flawed IMHO.\n"
      },
      {
        "user": "davidfowl",
        "created_at": "2015-06-06T05:35:57Z",
        "body": "> I am not sure how this was intended to be used but if an application has to have a reference to an assembly that it does not actually use.\n\nJust because you don't use the API doesn't mean you aren't \"using\" the package. Applications never call Hosting directly but reference it because it loads within the scope of the user's dependencies.\n"
      },
      {
        "user": "sujitdmello",
        "created_at": "2015-06-06T10:26:22Z",
        "body": "That's fair. Thanks.\n"
      }
    ]
  },
  {
    "number": 573,
    "title": "Can I create a metapackage with no code?",
    "created_at": "2015-05-06T21:03:23Z",
    "closed_at": "2017-12-31T20:38:32Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/573",
    "body": "Forwarded question from a user:\n\nIs there a way to create a metapackage using project.json that doesn't have a dll? If I have no code in my metapackage project, it still creates a dll in the package that's produced.\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/573/comments",
    "author": "rynowak",
    "comments": [
      {
        "user": "davidfowl",
        "created_at": "2015-06-07T03:42:48Z",
        "body": "Not yet. There's a bug on dnx to allow this.\n"
      },
      {
        "user": "aspnet-hello",
        "created_at": "2017-12-31T20:38:32Z",
        "body": "This issue is being closed because it has not been updated in 3 months.\r\n\r\nWe apologize if this causes any inconvenience. We ask that if you are still encountering this issue, please log a new issue with updated information and we will investigate.\r\n"
      }
    ]
  },
  {
    "number": 383,
    "title": "  MusicStore/src/MvcMusicStore/Models/MusicStoreEntities.cs Question",
    "created_at": "2015-03-13T23:38:18Z",
    "closed_at": "2015-03-25T18:23:27Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/383",
    "body": "Just a small question pertaining to MusicStore/src/MvcMusicStore/Models/MusicStoreEntities.cs\non line 8 you have : base(\"name=MusicStoreEntities\") \n\nnow as i understand it, this is not necessary as the derived context is already named \"MusicStoreEntities\", am i correct or have i misunderstood its use?\nthanks.\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/383/comments",
    "author": "danofa",
    "comments": [
      {
        "user": "Eilon",
        "created_at": "2015-03-25T18:15:01Z",
        "body": "@divega @rowanmiller thoughts on this?\n"
      },
      {
        "user": "Eilon",
        "created_at": "2015-03-25T18:16:23Z",
        "body": "Oh actually sorry that's the old MVC Music Store. The original MVC Music Store in that repo (MvcMusicStore) it pretty much an as-is copy of the original, so we deliberately didn't change almost anything in it. The new music store with ASP.NET 5, MVC 6, and EF 7 is called just MusicStore and doesn't have that code.\n"
      },
      {
        "user": "rowanmiller",
        "created_at": "2015-03-25T18:23:27Z",
        "body": "@danofa it's not required but it does force the context to get the connection from the config file. Without that line, if the context didn't load the string from config it would pick another database by convention. I personally also think including it makes it more explicit where the string is coming from.\n"
      }
    ]
  },
  {
    "number": 379,
    "title": "Samples - question",
    "created_at": "2015-03-12T10:26:04Z",
    "closed_at": "2015-07-06T17:44:53Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/379",
    "body": "Are there any samples for Identity using VNext Web API only not the MVC identity sample?\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/379/comments",
    "author": "stephenstroud",
    "comments": [
      {
        "user": "sayedihashimi",
        "created_at": "2015-03-13T02:34:24Z",
        "body": "@rustd do you know?\n"
      },
      {
        "user": "davidfowl",
        "created_at": "2015-03-27T04:36:57Z",
        "body": "@stephenstroud What specifically are you looking for?\n"
      },
      {
        "user": "stephenstroud",
        "created_at": "2015-04-08T09:53:00Z",
        "body": "I was looking for an interface for external API's to register users etc, however, I will create this. Thanks\n"
      }
    ]
  },
  {
    "number": 54953,
    "title": "Cache manifest.webmanifest in PWA",
    "created_at": "2024-04-04T20:15:20Z",
    "closed_at": "2024-12-12T17:15:28Z",
    "labels": [
      "bug",
      "help wanted",
      "area-blazor",
      "feature-pwa",
      "triaged"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/54953",
    "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Describe the bug\n\nAfter file extension change done in #43756, Web Manifest is no longer added to offline cache.\r\nPrior to this change it had json extension which is included.\n\n### Expected Behavior\n\nWeb Manifest should be added to offline cache by default service worker implementation.\n\n### Steps To Reproduce\n\n- Create new project from Blazor template, with PWA option selected.\r\n- Run published app and let service worker install.\r\n- Check if manifest.webmanifest is in offline cache\n\n### Exceptions (if any)\n\n_No response_\n\n### .NET Version\n\n_No response_\n\n### Anything else?\n\nAdding `/\\.webmanifest$/` to `offlineAssetsInclude` in service-worker.published.js should fix this.",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/54953/comments",
    "author": "tomasz-soltysik",
    "comments": [
      {
        "user": "shethaadit",
        "created_at": "2024-11-30T11:16:15Z",
        "body": "Hi @mkArtakMSFT, I will work on this and raise PR soon. Could you please assign this issue to me? :)"
      }
    ]
  },
  {
    "number": 47060,
    "title": "IExceptionHandlerFeature is not available in CustomizeProblemDetails when using UseDeveloperExceptionPage",
    "created_at": "2023-03-06T20:14:28Z",
    "closed_at": "2023-04-11T17:43:42Z",
    "labels": [
      "help wanted",
      "area-middleware"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/47060",
    "body": "### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Describe the bug\r\n\r\nThe IExceptionHandlerFeature is not available in CustomizeProblemDetails when using \"UseDeveloperExceptionPage\". It is, however, available when using \"UseExceptionHandler()\". Is there a reason for this? It would be good to be able to customize the problem details also when using the DeveloperExceptionPage.\r\n\r\n### Expected Behavior\r\n\r\nThe IExceptionHandlerFeature is available when using DeveloperExceptionPage\r\n\r\n### Steps To Reproduce\r\nTry the \"/\" endpoint from swagger.\r\n\r\n```\r\nusing Microsoft.AspNetCore.Diagnostics;\r\n\r\nvar builder = WebApplication.CreateBuilder(args);\r\n\r\nbuilder.Services.AddEndpointsApiExplorer();\r\nbuilder.Services.AddSwaggerGen();\r\n\r\nbuilder.Services.AddProblemDetails(configure =>\r\n    configure.CustomizeProblemDetails = (context) =>\r\n    {\r\n        if (context.HttpContext.Features.Get<IExceptionHandlerFeature>() is IExceptionHandlerFeature exceptionHandlerFeature)\r\n        {\r\n            Console.WriteLine(\"This will not print when using UseDeveloperExceptionPage()\");\r\n        }\r\n    }\r\n);\r\n\r\nvar app = builder.Build();\r\n\r\napp.UseDeveloperExceptionPage();\r\n\r\napp.UseSwagger();\r\napp.UseSwaggerUI();\r\n\r\napp.MapGet(\"/\", () =>\r\n{\r\n    throw new Exception();\r\n});\r\n\r\napp.Run();\r\n```\r\n\r\n### Exceptions (if any)\r\n\r\n_No response_\r\n\r\n### .NET Version\r\n\r\n7.0.201\r\n\r\n### Anything else?\r\n\r\n_No response_",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/47060/comments",
    "author": "bjornen77",
    "comments": [
      {
        "user": "captainsafia",
        "created_at": "2023-03-20T17:05:50Z",
        "body": "> The IExceptionHandlerFeature is not available in CustomizeProblemDetails when using \"UseDeveloperExceptionPage\". It is, however, available when using \"UseExceptionHandler()\". Is there a reason for this? \r\n\r\nThe exception handling middleware has the potential to re-execute the middleware pipeline so the `IExceptionHandlerFeature` is used to store details that need to be persisted across re-executions. We could definitely set it in the developer-exception page but there isn't a strong technically requirement to.\r\n\r\n**Question:** Is there a particular reason you are wanting to use the `IExceptionHandlerFeature`?\r\n\r\nThe only info that you can get in the `IExceptionHandlerFeature` that isn't already in the `ProblemDetailsContext` is the original `Exception` that you access via `IExceptionHandlerFeature.Error`."
      },
      {
        "user": "ghost",
        "created_at": "2023-03-20T17:06:03Z",
        "body": "Hi @bjornen77. We have added the \"Needs: Author Feedback\" label to this issue, which indicates that we have an open question for you before we can take further action. This issue will be closed automatically in 7 days if we do not hear back from you by then - please feel free to re-open it if you come back to this issue after that time."
      },
      {
        "user": "bjornen77",
        "created_at": "2023-03-20T17:38:37Z",
        "body": "I want to be able to customize the problem details extensions property with information from the original exception. The reason is that a receiving application always should be able read the customized information in the problem details response.\r\n\r\nI know that i can create a custom exception handler also for development purposes, but it would be nice to use the built-in one. Also, it would also be more consistent(when \"CustomizeProblemDetails\" is called in both cases)\r\n\r\nI think that it might be easy to set the IExceptionHandlerFeature in the developer-exception-page. I could try to make a PR for it if wanted."
      },
      {
        "user": "captainsafia",
        "created_at": "2023-03-20T17:41:40Z",
        "body": "@bjornen77 Thanks! A PR is definitely welcome. It helps to reuse the existing feature here."
      }
    ]
  },
  {
    "number": 39481,
    "title": "Typing mistake in Analyzers section",
    "created_at": "2022-01-13T04:51:03Z",
    "closed_at": "2022-01-13T18:10:48Z",
    "labels": [
      "help wanted",
      "good first issue",
      "old-area-web-frameworks-do-not-use"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/39481",
    "body": "This issue is about a typing mistake in aspnetcore/src/Analyzers/Readme.md on line 3 (analyers is incorrect, replace with analyzers)",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/39481/comments",
    "author": "krustev03",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2022-01-13T09:55:27Z",
        "body": "@krustev03 thanks for contacting us.\r\n\r\nFeel free to send us a PR with a fix if you want to."
      }
    ]
  },
  {
    "number": 21893,
    "title": "Overloaded UseExceptionHandler method version without parameters doesn't work ",
    "created_at": "2020-05-15T20:43:51Z",
    "closed_at": "2020-06-15T18:31:24Z",
    "labels": [
      "Done",
      "help wanted",
      "good first issue",
      "area-middleware"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/21893",
    "body": "### Describe the bug\r\nThe ExceptionHandlerExtensions class offers several extension methods for using the ExceptionHandlerMiddleware but the usage of its extension method without parameters causes the InvalidOperationException occurs.\r\n\r\n### To Reproduce\r\n<!--\r\n\r\nGot Exceptions? Include both the message and the stack trace\r\n-->\r\n1. Create ASP.NET Core Web Application.\r\n2. Call UseExceptionHandler() method on the IApplicationBuilder in the Configure method in the Startup.cs file.\r\n``` C#\r\npublic void Configure(IApplicationBuilder app, IWebHostEnvironment env)\r\n{\r\n    app.UseExceptionHandler();\r\n    ...\r\n}\r\n```\r\nThe exception:\r\n\r\nSystem.InvalidOperationException: 'An error occurred when configuring the exception handler middleware. Either the 'ExceptionHandlingPath' or the 'ExceptionHandler' option must be set in 'UseExceptionHandler()'.'\r\n\r\nStack trace:\r\n``` C#\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware..ctor(RequestDelegate next, ILoggerFactory loggerFactory, IOptions`1 options, DiagnosticListener diagnosticListener)\r\n   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor, Boolean wrapExceptions)\r\n   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\r\n   at Microsoft.Extensions.Internal.ActivatorUtilities.ConstructorMatcher.CreateInstance(IServiceProvider provider)\r\n   at Microsoft.Extensions.Internal.ActivatorUtilities.CreateInstance(IServiceProvider provider, Type instanceType, Object[] parameters)\r\n   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.<>c__DisplayClass4_0.<UseMiddleware>b__0(RequestDelegate next)\r\n   at Microsoft.AspNetCore.Builder.ApplicationBuilder.Build()\r\n   at Microsoft.AspNetCore.Hosting.GenericWebHostService.<StartAsync>d__31.MoveNext()\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter.GetResult()\r\n   at Microsoft.Extensions.Hosting.Internal.Host.<StartAsync>d__9.MoveNext()\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\n   at Microsoft.Extensions.Hosting.HostingAbstractionsHostExtensions.<RunAsync>d__4.MoveNext()\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at Microsoft.Extensions.Hosting.HostingAbstractionsHostExtensions.<RunAsync>d__4.MoveNext()\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\n   at Microsoft.Extensions.Hosting.HostingAbstractionsHostExtensions.Run(IHost host)\r\n   at WebApplication1.Program.Main(String[] args) in C:\\Users\\Ivan\\source\\repos\\WebApplication1\\WebApplication1\\Program.cs:line 16\r\n```\r\n\r\n### Further technical details\r\nASP.NET Core version: 3.1.2\r\n\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.200\r\n Commit:    c5123d973b\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.200\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.2\r\n  Commit:  916b5cba26\r\n\r\n.NET Core SDKs installed:\r\n  3.1.200 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.16 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.16 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.16 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nThe IDE is Visual Studio Community 2019\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/21893/comments",
    "author": "ivanhoe-k",
    "comments": [
      {
        "user": "Tratcher",
        "created_at": "2020-05-15T21:14:50Z",
        "body": "That overload exists because you can also provide options in ConfigureServices like this:\r\n`services.Configure<ExceptionHandlerOptions>(options => { ... });`\r\n\r\nThe exception could mention that."
      }
    ]
  },
  {
    "number": 21556,
    "title": "Microsoft.AspNetCore.Http.HeaderSegmentCollection.Enumerator.get_Current throws exception",
    "created_at": "2020-05-06T23:02:26Z",
    "closed_at": "2020-06-30T22:05:55Z",
    "labels": [
      "bug",
      "help wanted",
      "good first issue",
      "area-networking"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/21556",
    "body": "Create an intance of HeaderSegmentCollection with a header value that has a trailing space throws an exception:\r\n\r\n``` C#\r\nvar headers = new HeaderDictionary\r\n{\r\n    { HeaderNames.Via, \"value \" },\r\n};\r\n\r\nheaders.GetCommaSeparatedValues(HeaderNames.Via);\r\n```\r\n### Exception\r\nSystem.ArgumentOutOfRangeException: 'Specified argument was out of the range of valid values. (Parameter 'offset')'\r\n\r\n### Stack Trace: \r\n   at Microsoft.Extensions.Primitives.StringSegment.ThrowInvalidArguments(String buffer, Int32 offset, Int32 length)\r\n   at Microsoft.Extensions.Primitives.StringSegment..ctor(String buffer, Int32 offset, Int32 length)\r\n   at Microsoft.AspNetCore.Http.HeaderSegmentCollection.Enumerator.get_Current()\r\n   at Microsoft.AspNetCore.Http.ParsingHelpers.GetHeaderSplit(IHeaderDictionary headers, String key)\r\n   at Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.GetCommaSeparatedValues(IHeaderDictionary headers, String key)\r\n   at \\\r\n\r\n### Further technical details\r\n- ASP.NET Core version: 3.1.3\r\n- Include the output of `dotnet --info`\r\n- The IDE:  VS 2019\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/21556/comments",
    "author": "ghost",
    "comments": [
      {
        "user": "Tratcher",
        "created_at": "2020-05-08T19:43:42Z",
        "body": "That's problematic. Have you noticed this affecting any other code paths?"
      },
      {
        "user": "BrennanConroy",
        "created_at": "2020-05-13T20:35:04Z",
        "body": "Putting in next sprint, @Tratcher if you think this is important or needs backporting let us know.\r\n\r\n(Kestrel trims header values FYI)"
      },
      {
        "user": "Tratcher",
        "created_at": "2020-05-13T21:57:12Z",
        "body": "@pedramrezaei did you encounter this in a real app or only in a test environment?"
      },
      {
        "user": "fstaffa",
        "created_at": "2020-06-15T21:57:12Z",
        "body": "I would like to look into this. Is this issue available for taking? "
      },
      {
        "user": "Tratcher",
        "created_at": "2020-06-15T22:01:29Z",
        "body": "@fstaffa yes, go ahead."
      }
    ]
  },
  {
    "number": 21464,
    "title": "IISRewrite Middleware appendQueryString",
    "created_at": "2020-05-04T16:59:39Z",
    "closed_at": "2020-06-15T21:46:58Z",
    "labels": [
      "bug",
      "help wanted",
      "good first issue",
      "area-middleware"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/21464",
    "body": "### Describe the bug\r\nWhen using the IISRewriteModule, redirects with appendQueryString=\"true\" only work if there is a ? in the redirect url.\r\n\r\n### To Reproduce\r\nWould expect this do work...\r\n```\r\n    <rule name=\"some rule\" stopProcessing=\"true\">\r\n      <match url=\"^resource\" />\r\n      <action type=\"Redirect\" url=\"/product\" redirectType=\"Temporary\" appendQueryString=\"true\" />\r\n    </rule>\r\n```\r\n\r\nTo get this to work, you must append a ? to the action url...\r\n```\r\n    <rule name=\"some rule\" stopProcessing=\"true\">\r\n      <match url=\"^resource\" />\r\n      <action type=\"Redirect\" url=\"/product?\" redirectType=\"Temporary\" appendQueryString=\"true\" />\r\n    </rule>\r\n```\r\n\r\n### Analysis based on source\r\nIn RedirectAction (/Middleware/Rewrite/src/UrlActions/RedirectAction.cs)\r\nIf the url contains a ? (line 72), the request query string is appended to the query string of the url.\r\nThe else only adds the request query string if QueryStringDelete != true\r\n\r\nThe UrlRewriteFileParser (/Middleware/Rewrite/src/IISUrlRewrite/UrlRewriteFileParser.cs) uses the the second constructor (line 222) of RedirectAction which defaults queryStringDelete: true (line 39).\r\n\r\n### Further technical details\r\n- ASP.NET Core version - 3.1.3\r\n- Include the output of `dotnet --info`\r\n- The IDE (VS / VS Code/ VS4Mac) you're running on, and it's version - VS2019 - Version 16.5.4\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/21464/comments",
    "author": "brianchance",
    "comments": [
      {
        "user": "brianchance",
        "created_at": "2020-05-04T18:41:14Z",
        "body": "Since the middleware is supposed to mimic IIS, I tested IIS and it does append the query string when there is not a ? in the url."
      },
      {
        "user": "analogrelay",
        "created_at": "2020-05-06T20:16:15Z",
        "body": "Yeah, that looks like it's a bug. Since you've done a great analysis of the code, would you be interested in contributing a Pull Request with the changes? We're happy to help you out!"
      },
      {
        "user": "fstaffa",
        "created_at": "2020-06-15T21:04:39Z",
        "body": "I would like to implement a fix. Is this issue still free to take?"
      },
      {
        "user": "jkotalik",
        "created_at": "2020-06-15T21:05:47Z",
        "body": "There is already a PR filed, I'm currently working on merging it (requires an announcement as it's a breaking change)."
      },
      {
        "user": "fstaffa",
        "created_at": "2020-06-15T21:33:02Z",
        "body": "Thanks, not sure how I missed the PR"
      }
    ]
  },
  {
    "number": 19530,
    "title": "httpContext.Response.OnStarting lambdas executing in reverse order ",
    "created_at": "2020-03-03T17:05:17Z",
    "closed_at": "2020-03-04T04:12:17Z",
    "labels": [
      "help wanted",
      "Docs",
      "good first issue",
      "area-networking"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/19530",
    "body": "I have a setup where the same cookie might get deleted, set or changed in the same request based on various business logic. As per Microsoft suggestion, I have these cookie updates wrapped up inside OnStarting. In doing so, I have noticed that the lamdas run in the REVERSE order of their registration.\r\n\r\nEg: \r\n```\r\n\r\n            this.HttpContext.Response.OnStarting(\r\n                () =>\r\n                {\r\n                    Console.WriteLine(1);\r\n                    return Task.CompletedTask;\r\n                });\r\n\r\n            this.HttpContext.Response.OnStarting(\r\n               () =>\r\n               {\r\n                   Console.WriteLine(2);\r\n                   return Task.CompletedTask;\r\n               });\r\n\r\n            this.HttpContext.Response.OnStarting(\r\n               () =>\r\n               {\r\n                   Console.WriteLine(3);\r\n                   return Task.CompletedTask;\r\n               });\r\n\r\n            this.HttpContext.Response.OnStarting(\r\n               () =>\r\n               {\r\n                   Console.WriteLine(4);\r\n                   return Task.CompletedTask;\r\n               });\r\n\r\n            this.HttpContext.Response.OnStarting(\r\n               () =>\r\n               {\r\n                   Console.WriteLine(5);\r\n                   return Task.CompletedTask;\r\n               });\r\n\r\n            this.HttpContext.Response.OnStarting(\r\n               () =>\r\n               {\r\n                   Console.WriteLine(6);\r\n                   return Task.CompletedTask;\r\n               });\r\n\r\n            this.HttpContext.Response.OnStarting(\r\n               () =>\r\n               {\r\n                   Console.WriteLine(7);\r\n                   return Task.CompletedTask;\r\n               });\r\n\r\n```\r\n\r\nOutputs:\r\n7\r\n6\r\n5\r\n4\r\n3\r\n2\r\n1\r\n\r\nASP.NET Core version: 3.1",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/19530/comments",
    "author": "mtamrakar",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2020-03-03T17:17:06Z",
        "body": "@anurse I'm not sure `hosting` is the right area for this. Can you please adjust as necessary? Thanks!"
      },
      {
        "user": "Tratcher",
        "created_at": "2020-03-03T17:46:31Z",
        "body": "This is intentional to mirror the middleware pipeline ordering. E.g. The last thing to register is the inner most component in the pipeline and so it gets to look at the response first.\r\n\r\nShould update the doc comments to reflect this.\r\n\r\nThat said, what specific guidance did you get for using OnStarting? It's one of the harder APIs to use correctly, especially with complex interactions like this. You might do better to abstract the cookie handling to centralized logic and restrict to a single OnStarting event to apply the aggregate result."
      },
      {
        "user": "mtamrakar",
        "created_at": "2020-03-03T19:00:12Z",
        "body": "At one point, we were trying solve the \"response has started\" issue and since then wrapped a cookie manager on top of OnStarting. You can imagine how these type of updates could happen from different part of the code which needs to run in sequence.\r\n\r\n```\r\n public void DeleteCookie(string name)\r\n        {\r\n            var httpContext = this.httpContextAccessor.HttpContext;\r\n\r\n            if (httpContext.Request.Cookies.ContainsKey(name))\r\n            {\r\n                httpContext.Response.OnStarting(\r\n                    () =>\r\n                    {\r\n                        httpContext.Response.Cookies.Delete(\r\n                        name);\r\n\r\n                        return Task.CompletedTask;\r\n                    });\r\n            }\r\n```\r\n\r\nIs there any risk of having these updates like this?\r\n```\r\n public void DeleteCookie(string name)\r\n        {\r\n            var httpContext = this.httpContextAccessor.HttpContext;\r\n             httpContext.Response.Cookies.Delete(name);\r\n        }\r\n```"
      },
      {
        "user": "Tratcher",
        "created_at": "2020-03-03T20:40:24Z",
        "body": "Your second example is fine if you check HttpContext.Response.HasStarted first. No cookies can be modified after HasStarted, even with OnStarting."
      },
      {
        "user": "mtamrakar",
        "created_at": "2020-03-04T03:46:29Z",
        "body": "Ideally, when would we ever do the OnStarting registration then?"
      },
      {
        "user": "Tratcher",
        "created_at": "2020-03-04T03:57:22Z",
        "body": "OnStarting is useful for last second sanity checks, not much else."
      },
      {
        "user": "mtamrakar",
        "created_at": "2020-03-04T04:12:17Z",
        "body": "Thank you. I'm closing the issue as OnStarting is doing what it supposed to and I do see that a comment update is in progress to clarify it's execution order.\r\n\r\nI think we will just go with direct updates and handle out of sequence header updates more carefully."
      }
    ]
  },
  {
    "number": 17393,
    "title": "Naming a project \"website-getdonet\" causes ANCM to fail loading the app",
    "created_at": "2019-11-25T21:13:47Z",
    "closed_at": "2020-01-24T20:49:24Z",
    "labels": [
      "help wanted",
      "feature-iis",
      "good first issue",
      "area-networking"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/17393",
    "body": "When I try this locally, here’s the application logs I see:\r\n\r\n```\r\nApplication 'C:\\Users\\prkrishn\\source\\repos\\website-getdotnet\\website-getdotnet\\' failed to start. Exception message:\r\nUnable to find hostfxr directory at C:\\Users\\prkrishn\\source\\repos\\website-getdotnet\\website-getdotnet\\bin\\Debug\\netcoreapp3.1\\host\\fxr\r\nFailed to start application '/LM/W3SVC/2/ROOT', ErrorCode '0x8007023e'.\r\n```\r\n\r\nDifferent app:\r\n```\r\nApplication 'C:\\Users\\prkrishn\\source\\repos\\website-getdotne1\\website-getdotne1\\' started successfully.\r\n```\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/17393/comments",
    "author": "pranavkm",
    "comments": [
      {
        "user": "Tratcher",
        "created_at": "2019-11-25T21:27:21Z",
        "body": "Lol, do we have an EndsWith(\"dotnet\") in there somewhere?"
      },
      {
        "user": "analogrelay",
        "created_at": "2019-12-02T23:34:40Z",
        "body": "Sounds like it. We need to be a little cleverer and look at the trailing path.\r\n\r\nHowever, no customers have reported this yet, so not the highest pri."
      },
      {
        "user": "pranavkm",
        "created_at": "2019-12-02T23:46:47Z",
        "body": "^ This one was customer reported, but I'd agree not the highest priority given it's fairly easy to run in to this."
      },
      {
        "user": "analogrelay",
        "created_at": "2019-12-03T17:03:51Z",
        "body": "Ah, thanks for the context :)"
      },
      {
        "user": "RinoX1",
        "created_at": "2020-01-20T21:26:24Z",
        "body": "I think so"
      },
      {
        "user": "jkotalik",
        "created_at": "2020-01-24T20:49:24Z",
        "body": "This was done! Thanks @newbienewbie"
      }
    ]
  },
  {
    "number": 17357,
    "title": "Blazor bootstrap css nav-item broken",
    "created_at": "2019-11-23T16:42:18Z",
    "closed_at": "2019-11-25T17:17:59Z",
    "labels": [
      "help wanted",
      "area-blazor",
      "good first issue"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/17357",
    "body": "When I create bootstrap nav-item in my project, it looks different than an original bootstrap (first nav-item moves down a little bit).\r\nIt is because you have overwritten nav-item in site.css (template Blazor-Server, ver. 3.1.0-preview-3).\r\nThe NavMenu looks like you intended, however, creating custom navs becomes complicated and confusing.\r\nCould you please fix the project template?\r\nYou can customize NavMenu using custom tags, keeping original bootstrap elements intact.\r\nRegards,\r\nRoman\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/17357/comments",
    "author": "rwolejko",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2019-11-25T12:17:18Z",
        "body": "@rwolejko thanks for contacting us.\r\n\r\nWe will take a look at this. If you have a concrete suggestion we will also accept a PR with a fix if you are willing to make one."
      },
      {
        "user": "rwolejko",
        "created_at": "2019-11-25T15:57:12Z",
        "body": "Sorry for taking your time. I just figured out that I had outdated site.css (I created my project when \r\n3.1.0.preview2 was the actual version). After update, it looks that it has already been fixed.\r\nYou can close my issue.\r\n\r\nRoman"
      }
    ]
  },
  {
    "number": 17285,
    "title": "Signalr Clients.Users Should accept IEnumerable",
    "created_at": "2019-11-21T07:32:23Z",
    "closed_at": "2019-12-19T16:17:31Z",
    "labels": [
      "help wanted",
      "area-signalr",
      "good first issue",
      ":heavy_check_mark: Resolution: Fixed"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/17285",
    "body": "Clients.Users require IReadOnlyList<string>, The problem is we don't need to create read only collection every time we want to send message to multiple users\r\n\r\n### solution\r\nClients.Users takes IEnumerable<string> parameter\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/17285/comments",
    "author": "MhAllan",
    "comments": [
      {
        "user": "analogrelay",
        "created_at": "2019-11-22T19:18:09Z",
        "body": "We do that because it is often re-enumerated by HubLifetimeManagers and `IReadOnlyList` ensures we have a stable enumerable that won't be too costly to re-enumerate.\r\n\r\nHaving said that, I'm not opposed to the idea of creating an extension method or default interface member that takes `IEnumerable` and calls `.ToList` in order to pass it down."
      },
      {
        "user": "Marusyk",
        "created_at": "2019-12-18T23:22:21Z",
        "body": "Can we close it?"
      },
      {
        "user": "analogrelay",
        "created_at": "2019-12-19T16:17:24Z",
        "body": "We can! Thanks for the contribution @Marusyk !"
      }
    ]
  },
  {
    "number": 14993,
    "title": "Change IResponseCache output to ValueTask",
    "created_at": "2019-10-14T17:52:55Z",
    "closed_at": "2019-11-04T19:06:20Z",
    "labels": [
      "help wanted",
      "good first issue",
      "area-middleware"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/14993",
    "body": "In ResponseCaching middleware there's no way to replace `IResponseCache` and in the implementation of it (`MemoryResponseCache`), the async methods are just a wrapper on sync methods. So is it better that the output of the methods be ValueTask? ",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/14993/comments",
    "author": "Kahbazi",
    "comments": [
      {
        "user": "javiercn",
        "created_at": "2019-10-15T12:02:03Z",
        "body": "@Kahbazi Thanks for contacting us.\r\n\r\nThat would be a breaking change, so even if we deemed useful we can't take it until our next major release.\r\n\r\nI'm closing the issue as we wouldn't take a change like this unless there is a clear scenario with performance measurements that justify the change.\r\n\r\n/cc @anurse "
      },
      {
        "user": "Kahbazi",
        "created_at": "2019-10-15T13:27:39Z",
        "body": "Is it a breaking change when both IResponseCache and MemoryResponseCache are internal?"
      },
      {
        "user": "analogrelay",
        "created_at": "2019-10-15T17:12:58Z",
        "body": "Yeah, I'm not clear on what the breaking change issue is. @javiercn can you elaborate? Of course, it doesn't mean for sure that we'd do this change, but I don't think there's a breaking change concern since the type is internal."
      },
      {
        "user": "Kahbazi",
        "created_at": "2019-10-15T17:22:40Z",
        "body": "On the second thought, if there's no plan for the exposing `IResponseCache` the methods could only be sync."
      },
      {
        "user": "analogrelay",
        "created_at": "2019-10-23T16:56:00Z",
        "body": "Given that right now the only implementation of `IResponseCache` is synchronous, and it's an internal interface, I think we'll keep this sync for now. If we find a need to either a) make `IResponseCache` public or b) make an async implementation, we can change the signature then."
      },
      {
        "user": "Kahbazi",
        "created_at": "2019-10-23T19:41:55Z",
        "body": "I'm little confused on why did you close the issue? \r\n\r\n>  I think we'll keep this sync for now\r\n\r\nDo you mean that you want the `IResponseCache` to stay as is or do you want to remove the async methods on `IResponseCache`?"
      },
      {
        "user": "analogrelay",
        "created_at": "2019-10-23T21:22:01Z",
        "body": "Oops, you're right, I missed that there are already async methods on it.\r\n\r\nHaving said that, since this is an internal interface, I think that unless we know of performance improvements from switching to ValueTask, it's probably not worth the cost of the change. If this were a public API then it might make more sense, even if we don't have specific perf data, because *some* implementations might be improved. Of course, if it were public, it would also be subject to concerns about breaking changes.\r\n\r\nI suppose I'm still just not sure of the value of this change. I'm open to being convinced otherwise though :)."
      },
      {
        "user": "analogrelay",
        "created_at": "2019-10-23T21:23:02Z",
        "body": "I suppose we could be clearer by dropping the async methods entirely. That change would make sense to me. The current implementation is sync-only anyway."
      },
      {
        "user": "Kahbazi",
        "created_at": "2019-10-24T06:28:18Z",
        "body": "> I suppose we could be clearer by dropping the async methods entirely. That change would make sense to me. The current implementation is sync-only anyway.\r\n\r\nSo should I remove the async methods?  "
      },
      {
        "user": "analogrelay",
        "created_at": "2019-10-24T17:09:06Z",
        "body": "That would seem to be reasonable. Assuming it doesn't break anything I've missed :)."
      }
    ]
  },
  {
    "number": 14691,
    "title": "Potential dotnet watch performance improvement",
    "created_at": "2019-10-03T04:01:47Z",
    "closed_at": "2020-11-09T20:01:16Z",
    "labels": [
      "help wanted",
      "enhancement",
      "area-commandlinetools"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/14691",
    "body": "In order to speed up dotnet watch, I'm wondering if after the first iteration of the while loop you could begin the process of creating an up-to-date FileSet *before* waiting for a file change event from the user (instead of after).  Calling MsBuild in order to get a list of files can take one or two seconds for even a pretty small number of project dependencies.\r\n\r\n**Relevant file**:  src/Tools/dotnet-watch/src/DotNetWatcher.cs\r\n\r\n### Current steps of 1 iteration of the while loop\r\n1. Call ``await`` on ``fileSetFactory.CreateAsync`` (which calls MsBuild)\r\n2. Call ``fileSetWatcher.GetChangedFileAsync`` which gives back a task that can be used to cancel the iteration early if user edits a file\r\n3. ProcessRunner executes the ProcessSpec for the dotnet build/test/whatever process\r\n4. Before the iteration completes, another call is made to await ``fileSetWatcher.GetChangedFileAsync`` (wait for user to edit something)\r\n\r\n### Proposal\r\nBefore awaiting step 4, start (but do not immediately wait on) a task for fileSetFactory to Create a new FileSet.  Most of the time this task will be finished before the user edits another file and then step 1 of the next while loop iteration can make use of this pre-started task in order to save time:\r\n```C#\r\nwhile (true) {\r\n    processSpec.EnvironmentVariables[\"DOTNET_WATCH_ITERATION\"] = iteration.ToString(CultureInfo.InvariantCulture);\r\n    iteration++;\r\n\r\n    var fileSet = await (preStartedFileSetCreationTaskFromPreviousIteration ?? fileSetFactory.CreateAsync(cancellationToken));\r\n    ...\r\n```\r\n\r\n### Drawbacks\r\nProbably something I'm not thinking of?  There is an edge case where a file edit could fail to cause an early bail-out of the ProcessRunner if:\r\n1. User adds new file X.cs to the project (does not trigger file change event because new file is not yet in the FileSet)\r\n2. User edits some other file that *is* part of the FileSet and kicks off the next while loop iteration\r\n3. User immediately edits X.cs but the edit is not picked up and the current iteration does not get cancelled early like it normally would\r\nThis seems like a pretty minor drawback compared to the current limitation of not detecting new files.\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/14691/comments",
    "author": "CoderNate",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2020-01-28T18:28:05Z",
        "body": "Thanks for contacting us.\r\nDo you have data proving that this will lead to a better performance?"
      },
      {
        "user": "CoderNate",
        "created_at": "2020-01-29T02:28:58Z",
        "body": "Sure I can provide some data.  So ``fileSetFactory`` is an instance of ``MsBuildFileSetFactory`` so we can do a simple test to see how long the ``MsBuildFileSetFactory.CreateAsync`` call takes:\r\n1. Create a blank .NET core console app\r\n2. Add a reference to \"C:\\Program Files\\dotnet\\sdk\\2.2.103\\DotnetTools\\dotnet-watch\\2.2.0\\tools\\netcoreapp2.2\\any\\dotnet-watch.dll\"\r\n3. Implement Microsoft.Extensions.Tools.Internal.IReporter interface with a simple class called ``CustomReporter`` that just logs everything to the console.\r\n4. Run this code:\r\n```cs\r\nusing Microsoft.DotNet.Watcher.Internal;\r\nusing Microsoft.Extensions.Tools.Internal;\r\nfor (var i = 0; i < 2; i++) {\r\n\tvar w = System.Diagnostics.Stopwatch.StartNew();\r\n\tvar fileSetFactory = new MsBuildFileSetFactory(\r\n\t\tnew CustomReporter(),\r\n\t\t@\"C:\\SomeProject\\SomeProject.csproj\",\r\n\t\twaitOnError: true,\r\n\t\ttrace: true);\r\n\tvar set = fileSetFactory.CreateAsync(System.Threading.CancellationToken.None).Result;\r\n\tConsole.WriteLine($\"Calling CreateAsync took {w.Elapsed}\");\r\n}\r\n```\r\nI get this\r\n```\r\nC:\\DotnetWatchTest>dotnet run\r\nRunning MSBuild target 'GenerateWatchList' on 'C:\\SomeProject\\SomeProject.csproj'\r\nStarted 'C:\\Program Files\\dotnet\\dotnet.exe' with process id 42532\r\nProcess id 42532 ran for 1282ms\r\nWatching 314 file(s) for changes\r\nCalling CreateAsync took 00:00:01.3256122\r\nRunning MSBuild target 'GenerateWatchList' on 'C:\\SomeProject\\SomeProject.csproj'\r\nStarted 'C:\\Program Files\\dotnet\\dotnet.exe' with process id 3136\r\nProcess id 3136 ran for 1391ms\r\nWatching 314 file(s) for changes\r\nCalling CreateAsync took 00:00:01.3956035\r\n```\r\n\r\nSo in this case if I typically have pauses of at least 1.4 seconds between dotnet watch being triggered by a file change (seems very likely), then I'm completely removing 1.4 seconds from my wait time on every iteration!"
      },
      {
        "user": "mkArtakMSFT",
        "created_at": "2020-01-29T21:48:25Z",
        "body": "Thanks for the details. Are you interested in sending us a PR for this proposal? We'll happily consider it."
      },
      {
        "user": "mkArtakMSFT",
        "created_at": "2020-01-29T21:49:34Z",
        "body": "We're reviewing community submitted PRs weekly and we will pick yours up in a week, if you send it now."
      },
      {
        "user": "CoderNate",
        "created_at": "2020-01-30T14:30:43Z",
        "body": "In addition to the drawback I already mentioned, this PR also has a slightly different flavor of problem.  Steps:\r\n1. The first iteration is completing and we proactively start creating the next fileset (we'll call it fileset A)\r\n2. The user adds BrandNewFile.cs to the project which doesn't trigger anything (this is no different than how dotnet watch has always worked).\r\n3. The user edits an existing file which *does* get noticed by the file watcher.  This begins the next iteration.\r\n4. The second iteration is completing and we proactively start creating a new fileset (call it fileset B).\r\n5. We call ``fileSetWatcher.GetChangedFileAsync`` using fileset A.\r\n6. **User edits BrandNewFile.cs and nothing happens because that file is not in fileset A.**\r\n\r\nThis can be fixed if it's deemed worth fixing.  We just have to start watching fileset B for changes right away once it's done being built.  That might look something like:\r\n```cs\r\nif (finishedTask == processTask)\r\n{\r\n\tpreStartedFileSetCreationTaskFromPreviousIteration = fileSetFactory.CreateAsync(cancellationToken);\r\n\r\n\t// Now wait for a file to change before restarting process\r\n\tvar fileChangedTask = fileSetWatcher.GetChangedFileAsync(cancellationToken, () => _reporter.Warn(\"Waiting for a file to change before restarting dotnet...\"));\r\n\tvar firstTaskToComplete = await Task.WhenAny(preStartedFileSetCreationTaskFromPreviousIteration, fileChangedTask);\r\n\tif (firstTaskToComplete == preStartedFileSetCreationTaskFromPreviousIteration)\r\n\t{\r\n\t\tusing (var newFileSetWatcher = new FileSetWatcher(preStartedFileSetCreationTaskFromPreviousIteration.Result, _reporter))\r\n\t\t{\r\n\t\t\tawait Task.WhenAny(\r\n\t\t\t\tnewFileSetWatcher.GetChangedFileAsync(cancellationToken),\r\n\t\t\t\tfileChangedTask);\r\n\t\t}\r\n\t}\r\n}\r\n```\r\nUnfortunately that makes the code a little more complicated.  "
      },
      {
        "user": "jkotalik",
        "created_at": "2020-11-09T20:01:16Z",
        "body": "As we changed the way we implement `dotnet watch` to not do an msbuild evaluation, we're going to close this. Feel free to reopen or file a new issues if you find other performance issues."
      }
    ]
  },
  {
    "number": 12867,
    "title": "Razor Component \"Retry\" UI is hidden behind Bootstrap fixed-top navbar when connection is lost",
    "created_at": "2019-08-04T21:48:44Z",
    "closed_at": "2019-12-11T21:15:08Z",
    "labels": [
      "bug",
      "Done",
      "help wanted",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/12867",
    "body": "I am running a mix of Razor Pages and Razor Components.\r\nI have set my Bootstrap 4 Navbar css class as \"fixed-top\".\r\nWhen the SignalR connection to the server is lost, the \"Retry\" UI is partially hidden behind the Navbar making it difficult, if not impossible to read.\r\nSuggested fix, center the UI on both vertical and horizontal axes.\r\nI would have a go at this myslef, or even just add a custom class in for it but I'm still a noob and trying to figure it out :)",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/12867/comments",
    "author": "smadgerano",
    "comments": [
      {
        "user": "smadgerano",
        "created_at": "2019-08-04T22:06:34Z",
        "body": "So I found the css tag to change it if anybody needs it #components-reconnect-modal\r\n\r\nI've added some padding to the top which has helped, but I feel this will be a problem for other people too so I think the default should be changed.\r\n"
      },
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-08-05T16:17:50Z",
        "body": "Thanks for contacting us, @smadgerano.\r\nWould you like to send us a PR with the proposed fix? We'll happily consider it."
      },
      {
        "user": "smadgerano",
        "created_at": "2019-08-06T00:16:51Z",
        "body": "I've never done a pull request, and have no idea about running tests or creating them. I can try to pick some stuff up, but might take a while lol"
      },
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-08-06T01:30:30Z",
        "body": "Absolutely no problem - there is no urgency in regards to this issue, as it doesn't meet the bar for us to tackle immediately. We'll consider it for the 5.0 release."
      },
      {
        "user": "scrossen",
        "created_at": "2019-09-27T14:37:42Z",
        "body": "this code creates a modal box using css to handle reconnect / reload\r\n\r\n\r\n    <div class=\"modal fadecomponents-reconnect-hide \" id=\"components-reconnect-modal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\"\r\n         aria-hidden=\"true\">\r\n\r\n        <!-- Change class .modal-sm to change the size of the modal -->\r\n        <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n\r\n\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header\">\r\n                    <h4 class=\"modal-title w-100\" id=\"myModalLabel\">Lost Connection</h4>\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                        <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                    <div class=\"reconnect-wait\">\r\n                        Connection lost -- please wait, attempting to reconnect\r\n                    </div>\r\n                    \r\n                </div>\r\n                <div class=\"modal-footer reconnect-button\">\r\n                    <input type=\"button\" value=\"Reconnect\" onclick=\"Reconnect()\" />\r\n                    <button type=\"button\" class=\"btn btn-secondary btn-sm\" onclick=\"location.reload()\" >Refresh Page</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n"
      }
    ]
  },
  {
    "number": 12238,
    "title": "Please make EditForm always return its EditContext",
    "created_at": "2019-07-16T13:15:52Z",
    "closed_at": "2020-09-09T19:10:11Z",
    "labels": [
      "Done",
      "help wanted",
      "enhancement",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/12238",
    "body": "### Describe the bug\r\nWhen the `EditForm` component binds through the `Model` property, accessing the `EditContext` property returns `null`. Why not return the `_fixedEditContext`?\r\n\r\n### To Reproduce\r\nI have a component with this EditForm:\r\n\r\n```\r\n<EditForm @ref=\"editForm\"\r\n          OnValidSubmit=\"@Submit\"\r\n          Model=\"@Customer\">\r\n```\r\n\r\nIn its @code I have this:\r\n\r\n```\r\nprivate EditForm editForm;\r\n\r\nprivate bool isInvalid = false;\r\n\r\nprotected  override void OnInit()\r\n{\r\n    if( editForm?.EditContext == null)\r\n  {\r\n    Console.WriteLine(\"??? EditContext is null???\");\r\n  } else\r\n  {\r\n    isInvalid = editForm.EditContext.Validate();\r\n  }\r\n```\r\n\r\n### Expected behavior\r\nI would expect that EditContext has a value, even though not set myself.\r\n\r\n### Additional context\r\nThis is on Blazor Preview 6",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/12238/comments",
    "author": "PeterHimschoot",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-07-16T16:33:47Z",
        "body": "Thanks for contacting us, @PeterHimschoot.\r\nFeel free to send us a PR for this and we'll happily consider it."
      },
      {
        "user": "yasz",
        "created_at": "2019-10-05T04:58:44Z",
        "body": "Please enhance it\r\n"
      },
      {
        "user": "neville-nazerane",
        "created_at": "2019-11-19T06:24:50Z",
        "body": "Is this about initializing the property EditForm to _fixedEditContext? Or will it make sense to ensure EditForm was never assigned? \r\n\r\nI can't tell you why someone will, but what if someone assigns EditForm to null? Will it make sense for EditForm to return null after that point?\r\n\r\n"
      },
      {
        "user": "Blackleones",
        "created_at": "2020-01-28T09:13:55Z",
        "body": "Are there any updates about this bug? Is it going to be fixed soon or we need to find a workaround? "
      },
      {
        "user": "uabarahona",
        "created_at": "2020-03-30T20:44:46Z",
        "body": "I would like to take a look at this if nobody worked or is working on this yet"
      },
      {
        "user": "uabarahona",
        "created_at": "2020-03-31T04:59:37Z",
        "body": "So the fix looks very easy but I would like to discuss more about it, basically we have:\r\n\r\nWe change the EditContext property to something like this\r\n```\r\n[Parameter] public EditContext EditContext \r\n{ \r\n    get{ return _customEditContext ??  _fixedEditContext; }  \r\n    set { _customEditContext = value; } \r\n}\r\n```\r\n\r\nbut we now loose the ability to know whether the EditContext was set explicitly or not, if that is a scenario we would have then, I think it will be better to have a new property `FixedEditContext`\r\n\r\nLet me know your thoughts on this"
      },
      {
        "user": "mwinkler",
        "created_at": "2020-04-29T15:26:26Z",
        "body": "I ran in this issue today, when I try to validate the from without a submit button.\r\nPlease fix this."
      },
      {
        "user": "nunomaia",
        "created_at": "2020-05-06T11:06:42Z",
        "body": "\r\nI have created a new Property in my project to return the current EditContext. This allows me to force form validation without using a submit button. I unfortunately had to duplicate EditForm class in my project to overcome this.\r\n\r\n`public EditContext CurrentEditContext => _fixedEditContext`\r\n\r\n_fixedEditContext is already updated on OnParametersSet. .\r\n\r\n```\r\n\r\n// Update _fixedEditContext if we don't have one yet, or if they are supplying a\r\n// potentially new EditContext, or if they are supplying a different Model\r\n\r\nif (_fixedEditContext == null || EditContext != null || Model != _fixedEditContext.Model)\r\n{\r\n    _fixedEditContext = EditContext ?? new EditContext(Model);\r\n}\r\n```\r\n"
      },
      {
        "user": "chrissainty",
        "created_at": "2020-07-16T10:12:16Z",
        "body": "@SteveSandersonMS Hi Steve, I would like to have a go at this one as part of the July sprint if that's ok?\r\n\r\nIn terms of the solution I've had a read through the comments and had a look through the code. The two proposed options so far are to make `EditContext` non-null and just return `_fixedEditContext`. However, this will break the functionality in `OnParmaetersSet`. The other option would be to add a new parameter to return `_fixedEditContext`.\r\n\r\nAs a third option, I thought we could add an additional field which would look something like:\r\n\r\n`private EditContext? _providedEditContext;`\r\n\r\nThen update the current `EditContext` parameter to look like this:\r\n\r\n```razor\r\n[Parameter]\r\npublic EditContext? EditContext\r\n{\r\n    get => _fixedEditContext;\r\n    set => _providedEditContext = value;\r\n}\r\n```\r\n\r\nThe `OnParametersSet` method could then be updated to use the `_providedEditContext` field:\r\n\r\n```razor\r\nprotected override void OnParametersSet()\r\n{\r\n    if ((_providedEditContext == null) == (Model == null))\r\n    {\r\n        throw new InvalidOperationException($\"{nameof(EditForm)} requires a {nameof(Model)} \" +\r\n            $\"parameter, or an {nameof(EditContext)} parameter, but not both.\");\r\n    }\r\n\r\n    if (OnSubmit.HasDelegate && (OnValidSubmit.HasDelegate || OnInvalidSubmit.HasDelegate))\r\n    {\r\n        throw new InvalidOperationException($\"When supplying an {nameof(OnSubmit)} parameter to \" +\r\n            $\"{nameof(EditForm)}, do not also supply {nameof(OnValidSubmit)} or {nameof(OnInvalidSubmit)}.\");\r\n    }\r\n\r\n    if (_fixedEditContext == null || _providedEditContext != null || Model != _fixedEditContext.Model)\r\n    {\r\n        _fixedEditContext = _providedEditContext ?? new EditContext(Model!);\r\n    }\r\n}\r\n```\r\n\r\nThis would seem to give us everything we're after without breaking existing behavour in `OnParametersSet`, with the cost being an extra field. The user can always retrieve the current `EditContext`, even when it's created via the `Model` parameter. But we don't break the check for developers providing both EditContext and Model.\r\n\r\nWhat do you think?"
      },
      {
        "user": "SteveSandersonMS",
        "created_at": "2020-07-16T11:11:48Z",
        "body": "This sounds great, @chrissainty! Your design looks exactly optimal to me. Do you feel able to proceed with implementing this? Let me know if you think there are other outstanding questions."
      },
      {
        "user": "chrissainty",
        "created_at": "2020-07-16T11:32:26Z",
        "body": "Yep, already done :) \r\n\r\nAre there any tests needed for this? I couldn't find any but I might have just missed them. I'll raise the PR but can add tests if needed."
      },
      {
        "user": "SteveSandersonMS",
        "created_at": "2020-07-16T11:35:43Z",
        "body": "Historically `EditForm` has only been tested via E2E tests since it was originally so trivial there wasn't really anything else to cover.\r\n\r\nHowever it's now aggregating functionality so would justify adding a new unit test class in `src\\Components\\Web\\test\\Forms`. I wouldn't expect you to retrofit unit tests for other behaviors, but something covering the new ones would be good. And then we have a place to cover more stuff in the future too."
      },
      {
        "user": "captainsafia",
        "created_at": "2020-09-09T19:10:10Z",
        "body": "This is closed and will ship in RC1."
      }
    ]
  },
  {
    "number": 11910,
    "title": "Blazor OnAfterRender Recursive Warning",
    "created_at": "2019-07-04T23:44:45Z",
    "closed_at": "2020-01-23T19:49:05Z",
    "labels": [
      "help wanted",
      "enhancement",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/11910",
    "body": "It would be nice to have a warning in the tooling about recursion when using StateHasChanged() in OnAfterRender event.  Should warn only if with the top level of the method not if used in a conditional statement. Not a pressing issue but it would be a nice, oops I didn't mean to have that their anyways notice. Even better for newer users that have no idea that would happen.",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/11910/comments",
    "author": "jbomhold3",
    "comments": [
      {
        "user": "rynowak",
        "created_at": "2019-07-05T00:02:39Z",
        "body": "Want to send a PR for this? "
      },
      {
        "user": "jbomhold3",
        "created_at": "2019-07-05T01:14:19Z",
        "body": "I have never looked at the tooling repo to even know where to start to do a PR for it"
      },
      {
        "user": "mkArtakMSFT",
        "created_at": "2020-01-23T19:49:05Z",
        "body": "Hi. Thanks for contacting us.\r\nWe're closing this issue as there was not much community interest in this ask for quite a while now."
      }
    ]
  },
  {
    "number": 11173,
    "title": "NoFormatter log message does not include ContentTypes from result",
    "created_at": "2019-06-13T07:14:44Z",
    "closed_at": "2019-06-25T22:07:36Z",
    "labels": [
      "bug",
      "Done",
      "help wanted",
      "area-mvc"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/11173",
    "body": "When MVC fails to select an output formatter based on `ObjectResult.ContentTypes` (`Response.ContentType` has not been set), it logs the following warning:\r\n\r\n> No output formatter was found for content type '' to write the response.\r\n\r\nThis is pretty unhelpful and confusing. I suggest the warning also includes the content types considered from the `ObjectResult`.",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/11173/comments",
    "author": "khellang",
    "comments": [
      {
        "user": "rynowak",
        "created_at": "2019-06-13T13:51:22Z",
        "body": "This seems like a good thing to have. Wanna send a PR?"
      },
      {
        "user": "khellang",
        "created_at": "2019-06-13T14:15:01Z",
        "body": "> Wanna send a PR?\r\n\r\nYup 👍 "
      },
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-06-14T03:14:16Z",
        "body": "@ryanbrandenburg please look for a PR to review."
      }
    ]
  },
  {
    "number": 10520,
    "title": "Wire up Authentication with client side Blazor templates",
    "created_at": "2019-05-24T16:18:13Z",
    "closed_at": "2019-06-05T06:57:00Z",
    "labels": [
      ":heavy_check_mark: Resolution: Duplicate",
      "help wanted",
      "enhancement",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/10520",
    "body": "",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/10520/comments",
    "author": "mkArtakMSFT",
    "comments": [
      {
        "user": "danroth27",
        "created_at": "2019-06-05T06:57:00Z",
        "body": "Dup of #10846"
      }
    ]
  },
  {
    "number": 8519,
    "title": "Allow configuration of ValidationVisitor.ValidateComplexTypesIfChildValidationFails via MvcOptions",
    "created_at": "2019-03-14T18:18:25Z",
    "closed_at": "2019-05-21T21:54:50Z",
    "labels": [
      "Done",
      "help wanted",
      "enhancement",
      "area-mvc"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/8519",
    "body": "### Is your feature request related to a problem? Please describe.\r\nConfiguration of ValidationVisitor.ValidateComplexTypesIfChildValidationFails is not currently possible without implementing a custom `IObjectModelValidator`.  Since `DefaultObjectValidator` has internal visibility, it cannot be inherited in user code in order to apply customization of this property, which means that a separate subclass of `ObjectModelValidator` must be created.  While doing so is relatively trivial (including reproducing the current behaviour of `DefaultObjectValidator`), a custom subclass would not inherit any changes made to `DefaultObjectValidator` in the future, making this a somewhat brittle approach.\r\n\r\n### Describe the solution you'd like\r\nThe `MvcOptions` class already contains multiple properties for customizing validation behaviour.  Would it be possible to add support for toggling `ValidateComplexTypesIfChildValidationFails` as well?\r\n\r\n### Describe alternatives you've considered\r\nMaking it possible to inherit from `DefaultObjectValidator` in user code might also be an option here, but it doesn't seem to be particularly consistent with the existing design around customizing validation behaviour.\r\n\r\n### Additional context\r\nN/A\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/8519/comments",
    "author": "bordecal",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-03-21T23:40:27Z",
        "body": "Thanks for contacting us, @bordecal.\r\nCan you please provide more details regarding what you're trying to achive. It's not clear what's the scenario you need this configuration for."
      },
      {
        "user": "bordecal",
        "created_at": "2019-03-26T18:07:52Z",
        "body": "The goal is simply to allow complete validation results to be returned to an endpoint caller under all circumstances, including when a validation failure is in part due to an invalid child object.  Setting `ValidateComplexTypesIfChildValidationFails` to `true` on any `ValidationVisitor` used in controller validation is necessary to accomplish this."
      },
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-03-26T20:44:29Z",
        "body": "That seems reasonable. Would you be willing to send us a PR for this?"
      },
      {
        "user": "bordecal",
        "created_at": "2019-03-27T14:43:28Z",
        "body": "Sure.  Is there anything I should do to indicate that I'm working on it (to avoid having someone else pick it up in parallel)?"
      },
      {
        "user": "bordecal",
        "created_at": "2019-05-01T13:31:32Z",
        "body": "@mkArtakMSFT : Is there anything I need to do to request review of the PR, or will that happen automatically?"
      },
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-05-21T21:55:08Z",
        "body": "Thanks for your contribution, @bordecal!"
      }
    ]
  },
  {
    "number": 7827,
    "title": "[Templating] Difference between react and angular navmenus.",
    "created_at": "2019-02-21T22:40:47Z",
    "closed_at": "2021-10-28T15:02:30Z",
    "labels": [
      "bug",
      "help wanted",
      "area-mvc",
      "feature-spa",
      "severity-nice-to-have",
      "affected-medium"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/7827",
    "body": "In the react navmenu we include the login-menu at the end\r\n```html\r\n<Collapse className=\"d-sm-inline-flex flex-sm-row-reverse\" isOpen={!this.state.collapsed} navbar>\r\n  <ul className=\"navbar-nav flex-grow\">\r\n    <NavItem>\r\n      <NavLink tag={Link} className=\"text-dark\" to=\"/\">Home</NavLink>\r\n    </NavItem>\r\n    <NavItem>\r\n      <NavLink tag={Link} className=\"text-dark\" to=\"/counter\">Counter</NavLink>\r\n    </NavItem>\r\n    <NavItem>\r\n      <NavLink tag={Link} className=\"text-dark\" to=\"/fetch-data\">Fetch data</NavLink>\r\n    </NavItem>\r\n////#if (IndividualLocalAuth)\r\n    <LoginMenu>\r\n    </LoginMenu>\r\n////#endif\r\n  </ul>\r\n</Collapse>\r\n```\r\n\r\n, while in the angular template we include it at the beginning\r\n```html\r\n<div class=\"navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse\" [ngClass]='{\"show\": isExpanded}'>\r\n  <!--#if (IndividualLocalAuth) -->\r\n  <app-login-menu></app-login-menu>\r\n  <!--#endif -->\r\n  <ul class=\"navbar-nav flex-grow\">\r\n    <li class=\"nav-item\" [routerLinkActive]='[\"link-active\"]' [routerLinkActiveOptions]='{ exact: true }'>\r\n      <a class=\"nav-link text-dark\" [routerLink]='[\"/\"]'>Home</a>\r\n    </li>\r\n    <li class=\"nav-item\" [routerLinkActive]='[\"link-active\"]'>\r\n      <a class=\"nav-link text-dark\" [routerLink]='[\"/counter\"]'>Counter</a>\r\n    </li>\r\n    <li class=\"nav-item\" [routerLinkActive]='[\"link-active\"]'>\r\n      <a class=\"nav-link text-dark\" [routerLink]='[\"/fetch-data\"]'>Fetch data</a>\r\n    </li>\r\n  </ul>\r\n</div>\r\n```",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/7827/comments",
    "author": "javiercn",
    "comments": [
      {
        "user": "danroth27",
        "created_at": "2019-04-03T21:49:35Z",
        "body": "@javiercn @blowdart Which milestone should this go in?"
      },
      {
        "user": "blowdart",
        "created_at": "2019-04-04T17:07:26Z",
        "body": "The soonest it can be addressed? It seems a pretty simple fix :)"
      },
      {
        "user": "javiercn",
        "created_at": "2019-04-04T17:10:47Z",
        "body": "It involves CSS, it's not easy :smile. That said, this is more of a code organization issue than it is a visual issue. Visually they both look the same. It's that the elements are in different order due to CSS magic. \r\n\r\nThis bug is to try and make the order the same."
      },
      {
        "user": "javiercn",
        "created_at": "2019-04-04T17:13:49Z",
        "body": "That said, I think the issue might be that:\r\n```\r\n  <!--#if (IndividualLocalAuth) -->\r\n  <app-login-menu></app-login-menu>\r\n  <!--#endif -->\r\n```\r\nNeeds to go inside the ul tag. If not, I don't know whats going on there and it will be a wonderful journey of discovery. I recommend that we give it a try but don't spend a lot of time on it. I would also mark it as up for grabs to see if some hero from the community with more CSS knowledge is up to the task."
      }
    ]
  },
  {
    "number": 7084,
    "title": "Improve healthchecks middleware error message when services not registered",
    "created_at": "2019-01-29T09:55:05Z",
    "closed_at": "2019-03-12T18:33:08Z",
    "labels": [
      "help wanted",
      "area-healthchecks"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/7084",
    "body": "```cs\r\napp.UseRouting(routes =>\r\n{\r\n    routes.MapGet(\"/\", context => context.Response.WriteAsync(\"Hi Contoso!\"))\r\n        .RequireHost(\"contoso.com\");\r\n\r\n    routes.MapGet(\"/\", context => context.Response.WriteAsync(\"Hi AdventureWorks!\"))\r\n        .RequireHost(\"adventure-works.com\");\r\n\r\n    routes.MapHealthChecks(\"/healthz\").RequireHost(\"*:8080\");\r\n});\r\n\r\n```\r\n\r\nError message when services not registered:\r\n\r\n```\r\nInvalidOperationException: Unable to resolve service for type 'Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckService' while attempting to activate 'Microsoft.AspNetCore.Diagnostics.HealthChecks.HealthCheckMiddleware'.\r\n```\r\n\r\nShould also get a friendly error message from `UseHealthChecks`\r\n\r\n@rynowak ",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/7084/comments",
    "author": "JamesNK",
    "comments": [
      {
        "user": "rynowak",
        "created_at": "2019-02-19T19:11:21Z",
        "body": "Want to send a pr?"
      }
    ]
  },
  {
    "number": 6623,
    "title": "[Blazor] Bug in blazor cli `FindClientBinDir`",
    "created_at": "2019-01-11T22:35:08Z",
    "closed_at": "2020-06-19T18:37:05Z",
    "labels": [
      "bug",
      "help wanted",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/6623",
    "body": "### Describe the bug\r\nI prefer use standard project structure, published by @davidfowl , so have sources in src, build output in artifacts folder. \r\nI have client-side blazor app with redefined output path in Directory.build.props, something like this:\r\n\r\n```xml\r\n<AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>\r\n<AppendRuntimeIdentifierToOutputPath>false</AppendRuntimeIdentifierToOutputPath>\r\n<BaseIntermediateOutputPath>$(SolutionDir)artifacts\\obj\\$(MSBuildProjectName)</BaseIntermediateOutputPath>\r\n<OutputPath>$(SolutionDir)artifacts\\bin</OutputPath>\r\n```\r\nBut if I redefine output path `dotnet blazor serve` can't find output assembly.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. `dotnet --version` => `3.0.100-preview-009825`\r\n1. Executing task: `C:\\Program Files\\dotnet\\dotnet.exe blazor serve C:\\work\\BlazorDisasm/src/BlazorDisasm/BlazorDisasm.csproj` output:\r\n\r\n```\r\nApplication startup exception: System.InvalidOperationException: Cannot find bin directory for Blazor app. Neither 'C:\\work\\BlazorDisasm\\src\\BlazorDisasm\\bin\\Debug' nor 'C:\\work\\BlazorDisasm\\src\\BlazorDisasm\\bin\\Release' exists on disk. Make sure the project has been built.\r\n   at Microsoft.AspNetCore.Blazor.Cli.Server.Startup.FindClientBinDir(String clientAppSourceRoot)\r\n   at Microsoft.AspNetCore.Blazor.Cli.Server.Startup.FindClientAssemblyPath(IApplicationBuilder app)\r\n   at Microsoft.AspNetCore.Blazor.Cli.Server.Startup.Configure(IApplicationBuilder app, IConfiguration configuration)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.AspNetCore.Hosting.ConventionBasedStartup.Configure(IApplicationBuilder app)\r\n   at Microsoft.AspNetCore.Hosting.Internal.WebHost.BuildApplication()\r\ncrit: Microsoft.AspNetCore.Hosting.Internal.WebHost[6]\r\n      Application startup exception\r\nSystem.InvalidOperationException: Cannot find bin directory for Blazor app. Neither 'C:\\work\\BlazorDisasm\\src\\BlazorDisasm\\bin\\Debug' nor 'C:\\work\\BlazorDisasm\\src\\BlazorDisasm\\bin\\Release' exists on disk. Make sure the project has been built.\r\n   at Microsoft.AspNetCore.Blazor.Cli.Server.Startup.FindClientBinDir(String clientAppSourceRoot)\r\n   at Microsoft.AspNetCore.Blazor.Cli.Server.Startup.FindClientAssemblyPath(IApplicationBuilder app)\r\n   at Microsoft.AspNetCore.Blazor.Cli.Server.Startup.Configure(IApplicationBuilder app, IConfiguration configuration)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.AspNetCore.Hosting.ConventionBasedStartup.Configure(IApplicationBuilder app)\r\n   at Microsoft.AspNetCore.Hosting.Internal.WebHost.BuildApplication()\r\n```\r\n\r\n### Expected behavior\r\nRunned blazor app.\r\n\r\n### Additional context\r\n\r\n`<DotNetCliToolReference Include=\"Microsoft.AspNetCore.Blazor.Cli\" Version=\"0.7.0\" />`\r\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/6623/comments",
    "author": "vchirikov",
    "comments": [
      {
        "user": "rynowak",
        "created_at": "2019-03-15T16:46:06Z",
        "body": "It looks like we're not honouring some of the MSBuild things. Would you be willing to send a PR for this?"
      },
      {
        "user": "javiercn",
        "created_at": "2020-06-19T18:37:05Z",
        "body": "This is not a thing anymore sin it is all MSBuild based now"
      }
    ]
  },
  {
    "number": 6477,
    "title": "Permanent redirect (301) is not supported in the PrerenderTagHelper",
    "created_at": "2019-01-08T11:59:45Z",
    "closed_at": "2019-02-05T17:22:41Z",
    "labels": [
      "bug",
      "help wanted",
      "area-mvc"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/6477",
    "body": "I was trying to do a 301 redirect from our JavaScript application using SpaServices prerendering. While I was trying to set the RedirectUrl with StatusCode 301 in our JavaScript server-renderer, a 302 redirect was still happening. \r\n\r\n### Investigation\r\nI started looking into the source and I found out that the PrerenderTagHelper is only using the StatusCode from the result if it's not a redirect. If a RedirectUrl was set, the redirect is always a 302 redirect.\r\n\r\n### Solution\r\nThe solution seems to add a check to the **PrerenderTagHelper** that checks if the result contains a 301 StatusCode, in that case do a permanent redirect. This is also how it's already being done for example in **SpaPrerenderingExtensions**.\r\n\r\nSo instead of this:\r\n`\r\nif (!string.IsNullOrEmpty(result.RedirectUrl))\r\n{\r\nViewContext.HttpContext.Response.Redirect(result.RedirectUrl);\r\nreturn;\r\n}`\r\n\r\nIt has to be like this:\r\n`if (!string.IsNullOrEmpty(result.RedirectUrl))\r\n{\r\nvar permanentRedirect = result?.StatusCode == 301;\r\nViewContext.HttpContext.Response.Redirect(result.RedirectUrl, permanentRedirect);\r\nreturn;\r\n}`",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/6477/comments",
    "author": "basschuitema",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-01-08T22:31:11Z",
        "body": "Thanks for bringing this up, @basschuitema.\r\nOne of our team members will look into the PR."
      }
    ]
  },
  {
    "number": 4412,
    "title": "ParameterAttribute Inherited = true",
    "created_at": "2018-12-05T02:07:49Z",
    "closed_at": "2019-09-04T18:09:42Z",
    "labels": [
      "Done",
      "help wanted",
      "enhancement",
      "area-mvc"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/4412",
    "body": "Can 'Inherited' of ParameterAttribute be set to 'true'?\r\nIt is useful to be able to use parameters with inherited classes.",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/4412/comments",
    "author": "nenaaki",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-01-16T22:45:49Z",
        "body": "Thanks for contacting us, @nenaaki.\r\n"
      },
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-01-16T22:46:42Z",
        "body": "@nenaaki, feel free to send a PR for this."
      },
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-09-04T18:09:42Z",
        "body": "Closing as done."
      }
    ]
  },
  {
    "number": 5602,
    "title": "NullReferenceException in resolve-dependencies",
    "created_at": "2018-10-01T09:28:59Z",
    "closed_at": "2020-06-11T23:10:21Z",
    "labels": [
      "bug",
      "help wanted",
      "area-blazor"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/5602",
    "body": "I get the following error when using Blazor.Server on an F# project:\r\n\r\n```\r\nEXEC : error : Object reference not set to an instance of an object. [C:\\Users\\loic.denuziere\\my\\miniblazor\\tests\\server\\server.fsproj]\r\n     at Microsoft.AspNetCore.Blazor.Build.RuntimeDependenciesResolver.AssemblyResolutionContext.<ResolveAssemblies>g__GetAssemblyReferences|13_1(AssemblyEntry current) in /_/src/Microsoft.AspNetCore.Blazor.Build/Core/RuntimeDependenciesResolver.cs:line 103\r\n     at Microsoft.AspNetCore.Blazor.Build.RuntimeDependenciesResolver.AssemblyResolutionContext.<ResolveAssemblies>g__ResolveAssembliesCore|13_0(<>c__DisplayClass13_0& ) in /_/src/Microsoft.AspNetCore.Blazor.Build/Core/RuntimeDependenciesResolver.cs:line 91\r\n     at Microsoft.AspNetCore.Blazor.Build.RuntimeDependenciesResolver.AssemblyResolutionContext.ResolveAssemblies() in /_/src/Microsoft.AspNetCore.Blazor.Build/Core/RuntimeDependenciesResolver.cs:line 82\r\n     at Microsoft.AspNetCore.Blazor.Build.RuntimeDependenciesResolver.ResolveRuntimeDependenciesCore(String entryPoint, String[] applicationDependencies, String[] monoBclDirectories) in /_/src/Microsoft.AspNetCore.Blazor.Build/Core/RuntimeDependenciesResolver.cs:line 46\r\n     at Microsoft.AspNetCore.Blazor.Build.Cli.Commands.ResolveRuntimeDependenciesCommand.<>c__DisplayClass0_0.<Command>b__0() in /_/src/Microsoft.AspNetCore.Blazor.Build/Cli/Commands/ResolveRuntimeDependenciesCommand.cs:line 44\r\nC:\\Users\\loic.denuziere\\.nuget\\packages\\microsoft.aspnetcore.blazor.build\\0.7.0-preview1-20180925.6\\targets\\Blazor.MonoRuntime.targets(538,5): error MSB3073: The command \"dotnet \"C:\\Users\\loic.denuziere\\.nuget\\packages\\microsoft.aspnetcore.blazor.build\\0.7.0-preview1-20180925.6\\targets\\../tools/Microsoft.AspNetCore.Blazor.Build.dll\" resolve-dependencies \"C:\\Users\\loic.denuziere\\my\\miniblazor\\tests\\server\\obj\\Debug\\netcoreapp2.0\\server.dll\" --references \"C:\\Users\\loic.denuziere\\my\\miniblazor\\tests\\server\\obj\\Debug\\netcoreapp2.0\\blazor\\resolve-dependencies.txt\" --base-class-library \"C:\\Users\\loic.denuziere\\.nuget\\packages\\microsoft.aspnetcore.blazor.build\\0.7.0-preview1-20180925.6\\targets\\../tools/mono/bcl/\" --base-class-library \"C:\\Users\\loic.denuziere\\.nuget\\packages\\microsoft.aspnetcore.blazor.build\\0.7.0-preview1-20180925.6\\targets\\../tools/mono/bcl/Facades/\" --output \"C:\\Users\\loic.denuziere\\my\\miniblazor\\tests\\server\\obj\\Debug\\netcoreapp2.0\\blazor\\resolved.assemblies.txt\"\" exited with code 1. [C:\\Users\\loic.denuziere\\my\\miniblazor\\tests\\server\\server.fsproj]\r\n```\r\n\r\nI ran this with a locally built Razor with print debugging to find what was going on, and it seems that the problem is that it can't find `System.Buffers.dll`; it's not copied locally, and it's not in mono's stdlib either. And indeed, the issue disappears if I add this to my project:\r\n\r\n```xml\r\n  <ItemGroup>\r\n    <ReferenceCopyLocalPaths Include=\"$(NuGetPackageRoot)system.buffers/4.5.0/lib/netstandard2.0/System.Buffers.dll\" />\r\n  </ItemGroup>\r\n```",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/5602/comments",
    "author": "Tarmil",
    "comments": [
      {
        "user": "thatnerdyguy",
        "created_at": "2018-10-03T17:01:19Z",
        "body": "I got a similar error a few weeks ago. I was using a project that directly referenced a dll which itself directly referenced System.ServiceModel.Discovery (which isn't supported under .NET Standard). I too had to result to running the tool under the debugger to figure out what was happening.\r\n\r\nFindCandidate() can return null, which means Resolve() can return null, which means GetAssemblyReferences() (or somewhere sooner), needs to do something more reasonable."
      },
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-04-17T16:52:30Z",
        "body": "Thanks for contacting us, @Tarmil.\r\nFeel free to submit a PR and we'd happily consider it, if this is still a problem."
      },
      {
        "user": "pranavkm",
        "created_at": "2020-06-11T23:10:21Z",
        "body": "This code has changed since this issue was filed. If you still think there's an issue here once you've tried out Blazor WASM's GA build, please file a new issue."
      }
    ]
  },
  {
    "number": 3528,
    "title": "IFormFileCollection has no documentation",
    "created_at": "2018-09-11T14:42:00Z",
    "closed_at": "2018-10-26T18:15:10Z",
    "labels": [
      "help wanted",
      "feature-http-abstractions",
      "area-networking"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/3528",
    "body": "There is no XML doc for `IFormFileCollection`, so I had to look up the source code to check whether the indexer returns `null` or throws an exception when the file doesn't exist. Not a huge deal, just a small annoyance. :-)",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/3528/comments",
    "author": "SolalPirelli",
    "comments": [
      {
        "user": "Marusyk",
        "created_at": "2018-10-26T10:17:26Z",
        "body": "Done. Can be closed"
      }
    ]
  },
  {
    "number": 4105,
    "title": "Using 'dotnet user-secrets set' reformats JSON and removes comments",
    "created_at": "2018-07-21T06:12:49Z",
    "closed_at": "2019-01-10T23:39:35Z",
    "labels": [
      "help wanted",
      ":heavy_check_mark: Resolution: Won't Fix",
      "area-commandlinetools"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/4105",
    "body": "First let me state begrudgingly I understand technically JSON doesn't support comments :D\r\n\r\nHowever - Visual Studio supports it just fine. If you edit your user secrets JSON in VS and create comments, it works ok. They load OK as well in the config system when you run your app. Once you go to the CLI and run the following\r\n`\r\ndotnet user-secrets set KeyName KeyValue\r\n`\r\nyour secrets are reformatted and all commented items are lost. I wonder if VS should be consistent and not work with comments in JSON (hence force the user to use some convention like _comment) or the tool shouldn't remove what's in the file. As it stands now they operate a bit differently (and thus just lost a bunch of commented test values). Thoughts?",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/4105/comments",
    "author": "adamtuliper",
    "comments": [
      {
        "user": "natemcmaster",
        "created_at": "2018-07-23T15:52:12Z",
        "body": "The underlying mechanism of user-secrets does not round-trip comments, and it's not something we can easily fix. Exposing the secrets.json file in an editor in VS was something of a 'quick fix'. We intended to create a better editor, but it fell into the backlog. We've been given a few pieces of feedback like this and it is something we are considering addressing in Visual Studio vNext."
      },
      {
        "user": "muratg",
        "created_at": "2019-01-10T23:39:35Z",
        "body": "I don't expect that we'll make changes here. JSON should be considered an implementation detail and shouldn't be relied on."
      },
      {
        "user": "adamtuliper",
        "created_at": "2019-01-11T17:04:13Z",
        "body": "Makes sense, thanks @muratg and @natemcmaster "
      }
    ]
  },
  {
    "number": 5285,
    "title": "Compile hub method invoke as needed",
    "created_at": "2018-03-12T20:55:35Z",
    "closed_at": "2019-08-06T21:33:14Z",
    "labels": [
      "help wanted",
      "Perf",
      "area-signalr"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/5285",
    "body": "Today SignalR will compile invoke code for all methods on a hub the first time the hub is accessed, e.g. if a hub has 1000 methods on it then all 1000 will be compiled at once.\r\n\r\nMVC compiles invoke code as needed, e.g. a lightweight list of actions is calculated for a controller, and then when an action is first used the invoke code is compiled.",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/5285/comments",
    "author": "JamesNK",
    "comments": [
      {
        "user": "analogrelay",
        "created_at": "2018-03-16T21:17:31Z",
        "body": "We think this isn't going to be a big deal for RTM, but we can keep an eye on it with our perf investigations."
      },
      {
        "user": "analogrelay",
        "created_at": "2019-08-06T21:33:14Z",
        "body": "I'm going to close this. We'll always continue evaluating performance and can consider this as a possible improvement when we get there. I don't feel like tracking a bunch of individual perf ideas on GitHub is the most effective structure."
      }
    ]
  },
  {
    "number": 2728,
    "title": "Adding a querystring to a pathstring can end up with a pathstring.",
    "created_at": "2018-01-02T02:58:50Z",
    "closed_at": "2021-10-28T22:42:36Z",
    "labels": [
      "help wanted",
      "enhancement",
      "feature-http-abstractions",
      "severity-minor",
      "affected-very-few",
      "area-networking"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/2728",
    "body": "_From @blowdart on Tuesday, July 7, 2015 1:10:47 PM_\r\n\r\nConsider the following\n\n```\nPathString example = new PathString(\"/Home/\").Add(new QueryString(\"?yousuck=true\"));\n```\n\nThis works because of the implicit string conversions, but you end up with something that is no longer a true PathString, but a path with a querystring embedded in it.\n\r\n\r\n_Copied from original issue: aspnet/HttpAbstractions#342_",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/2728/comments",
    "author": "aspnet-hello",
    "comments": [
      {
        "user": "aspnet-hello",
        "created_at": "2018-01-02T02:58:50Z",
        "body": "_From @Tratcher on Tuesday, July 7, 2015 9:00:04 PM_\r\n\r\nIt's not the `Add` that breaks here, it's the `=`. `PathString.Add(QueryString)` returns a plain `string` (encoded), which is then implicitly converted back to a PathString for the `=` operator.\n"
      },
      {
        "user": "aspnet-hello",
        "created_at": "2018-01-02T02:58:52Z",
        "body": "_From @Tratcher on Tuesday, July 7, 2015 9:01:02 PM_\r\n\r\nSimplified example:\n\n```\nPathString example = \"/Home/?yousuck=true\";\n```\n"
      },
      {
        "user": "aspnet-hello",
        "created_at": "2018-01-02T02:58:53Z",
        "body": "_From @blowdart on Wednesday, July 8, 2015 6:27:24 AM_\r\n\r\nYea, that should probably get rejected, unless you're going to escape the ?, which is probably not what people expect.\n"
      },
      {
        "user": "Tratcher",
        "created_at": "2021-10-28T22:42:36Z",
        "body": "Implicit converters aren't supposed to throw. In the example above the ? does get encoded.\r\n\r\nClosing as this is not actionable, a there's no way for a PathString to store a query."
      }
    ]
  },
  {
    "number": 2692,
    "title": "Middleware exception message is ambiguous",
    "created_at": "2018-01-02T02:15:52Z",
    "closed_at": "2018-02-01T14:22:38Z",
    "labels": [
      "bug",
      "Done",
      "help wanted",
      "feature-http-abstractions",
      "area-networking"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/2692",
    "body": "_From @agegould on Friday, August 25, 2017 4:41:16 AM_\r\n\r\nWhen the framework attempts to locate the 'Invoke' or 'InvokeAsync' method on a middleware class, an exception is thrown if it cannot locate a suitable method, however, the exception message is ambiguous as it does not provide any details of the name of the middleware class that it was attempting to invoke when the exception was thrown. \r\n\r\nAn example of the exception message is provided below:- \r\nNo details of the class name are included, which makes it very difficult to locate the issue.\r\n\r\nAn error occurred while starting the application.\r\nInvalidOperationException: No public 'Invoke' or 'InvokeAsync' method found.\r\nMicrosoft.AspNetCore.Builder.UseMiddlewareExtensions+<>c__DisplayClass4_0.<UseMiddleware>b__0(RequestDelegate next)\r\nInvalidOperationException: No public 'Invoke' or 'InvokeAsync' method found.\r\nMicrosoft.AspNetCore.Builder.UseMiddlewareExtensions+<>c__DisplayClass4_0.<UseMiddleware>b__0(RequestDelegate next)\r\nMicrosoft.AspNetCore.Builder.Internal.ApplicationBuilder.Build()\r\nMicrosoft.AspNetCore.Hosting.Internal.WebHost.BuildApplication()\r\n\r\nShow raw exception details \r\nSystem.InvalidOperationException: No public 'Invoke' or 'InvokeAsync' method found.\r\n\r\n   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.<>c__DisplayClass4_0.<UseMiddleware>b__0(RequestDelegate next)\r\n\r\n   at Microsoft.AspNetCore.Builder.Internal.ApplicationBuilder.Build()\r\n\r\n   at Microsoft.AspNetCore.Hosting.Internal.WebHost.BuildApplication()\r\n\r\n\r\n_Copied from original issue: aspnet/HttpAbstractions#927_",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/2692/comments",
    "author": "aspnet-hello",
    "comments": [
      {
        "user": "aspnet-hello",
        "created_at": "2018-01-02T02:15:52Z",
        "body": "_From @muratg on Monday, October 30, 2017 10:47:49 AM_\r\n\r\n@jkotalik Adding the middleware name to the exception message should be straightforward."
      },
      {
        "user": "muratg",
        "created_at": "2018-01-31T23:03:50Z",
        "body": "Backlogging per @davidfowl's suggestion. We're accepting PRs for this though."
      }
    ]
  },
  {
    "number": 2470,
    "title": "Long running websockets using IIS",
    "created_at": "2018-01-01T22:35:12Z",
    "closed_at": "2021-03-29T16:21:04Z",
    "labels": [
      "bug",
      "help wanted",
      "feature-websockets",
      "area-networking"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/2470",
    "body": "_From @garcus on Thursday, April 20, 2017 6:50:20 AM_\r\n\r\nI have a problem when I have long running websocket connections open and the server is recycled from IIS (or website stopped). I thought I'd handle closing open websockets in a registered ApplicationStopping handler in ApplicationLifetime but it is never called. As long as I have open websockets I have no way of controlling the recycle-process.\r\n\r\nIs this right, or am I missing something? Shouldn't it be possible to either force open websockets to be closed on recycle (as an option) or even better, be able to register a handler with appropriate actions to prevent process from hanging around until all websockets are closed from client side ?\r\n\r\n\r\n\r\n_Copied from original issue: aspnet/WebSockets#169_",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/2470/comments",
    "author": "aspnet-hello",
    "comments": [
      {
        "user": "aspnet-hello",
        "created_at": "2018-01-01T22:35:13Z",
        "body": "_From @Tratcher on Thursday, April 20, 2017 7:56:00 AM_\r\n\r\n@pan-wang @shirhatti "
      },
      {
        "user": "aspnet-hello",
        "created_at": "2018-01-01T22:35:14Z",
        "body": "_From @garcus on Friday, November 10, 2017 10:03:20 AM_\r\n\r\nAny chance of finding a solution to this issue ? A workaround perhaps ? \r\nAt this moment I'm forced to script process kill to be able to deploy new websites as the IIS-stopped websites are kept open by long running websocket connections to the kestrel-process."
      },
      {
        "user": "aspnet-hello",
        "created_at": "2018-01-01T22:35:16Z",
        "body": "_From @pan-wang on Friday, November 10, 2017 10:14:42 AM_\r\n\r\nAs websocket connection holds IIS pipeline, apppool recycling will have to wait for the close of the websocket connection till the apppool shutdown timeout is hit (default 90 seconds). One workaround is to set the timeout value to a smaller value if you have the permission to update IIS apppool settings.\r\n\r\nANCM itself does not listen to IIS AppPool shutdown notification yet and thus will not be able to notify the backend about shutting down.  Will change the design to address this scenario in the future if possible. "
      },
      {
        "user": "davidfowl",
        "created_at": "2021-03-28T21:29:46Z",
        "body": "> ANCM itself does not listen to IIS AppPool shutdown notification yet and thus will not be able to notify the backend about shutting down. Will change the design to address this scenario in the future if possible.\r\n\r\n@jkotalik is this still true with in proc?"
      },
      {
        "user": "jkotalik",
        "created_at": "2021-03-29T16:21:00Z",
        "body": "No, we listen for that."
      }
    ]
  },
  {
    "number": 2429,
    "title": "ExpandoObjectAdapter doesn't play well with JObjects",
    "created_at": "2018-01-01T21:25:35Z",
    "closed_at": "2019-10-07T19:37:59Z",
    "labels": [
      "Done",
      "help wanted",
      "enhancement",
      "area-mvc"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/2429",
    "body": "_From @NicolaasVB on Thursday, September 21, 2017 4:59:13 AM_\r\n\r\nConsider following code snippet (unit test)\r\n\r\n```C#\r\n            var list = new List<string>();\r\n            list.Add(\"[{ 'op': 'add', 'path': '/foo', 'value': {'bar': 'baz'}}]\");\r\n            list.Add(\"[{ 'op': 'add', 'path': '/foo/bar', 'value': 'bazz' }]\");\r\n\r\n            dynamic obj = new ExpandoObject(); //JObject.Parse(\"{}\"); ???\r\n\r\n            foreach (var item in list)\r\n            {\r\n                var patchDocument = JsonConvert.DeserializeObject<JsonPatchDocument>(item);\r\n                patchDocument.ApplyTo(obj);\r\n\r\n                // without the 2 lines below, the second apply will fail, because in the first patch\r\n                // the value on the ExpandoObject is set to a JObject representing {\"bar\": \"baz\"}\r\n                // and ExpandoObjectAdapter can't handle that. It fails when attempting to cast target to IDictionary<string, object>\r\n                JObject intermediate = JObject.FromObject(obj);\r\n                // basically we convert the expandoObject to JObject and back, so that all the JObject values are converted to an ExpandoObject\r\n                obj = intermediate.ToObject<ExpandoObject>();\r\n            }\r\n\r\n            Assert.Equal(\"bazz\", obj.foo.bar);\r\n```\r\n\r\nUnless we apply the 2 hacky lines (converting to JObject and back to ExpandoObject), this snippet will fail (crash even...). The reason for that is explained in comments in the snippet.\r\n\r\nNow, for my question... How I can solve my use case without the use of those 2 hacky lines of code? (we're implementing our take on event sourcing with json patch diffsets, and our replay mechanism applies the json patch documents one by one)\r\n\r\nAlso on a sidenote, why doesn't a JObjectAdapter exist? I mean we're applying JSON patch documents... It would only seem logical that you can apply them to a JObject :-)\r\n\r\n_Copied from original issue: aspnet/JsonPatch#109_",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/2429/comments",
    "author": "aspnet-hello",
    "comments": [
      {
        "user": "aspnet-hello",
        "created_at": "2018-01-01T21:25:36Z",
        "body": "_From @NicolaasVB on Thursday, September 21, 2017 5:13:55 AM_\r\n\r\nOh, I just discovered that if we merge the 2 patch documents in 1, it fails as well, for the same reason\r\n```C#\r\nlist.Add(\"[{ 'op': 'add', 'path': '/foo', 'value': {'bar': 'baz'}}, { 'op': 'replace', 'path': '/foo/bar', 'value': 'bazz' }]\");\r\n``` \r\n\r\nIn this case my dirty hack isn't going to save me!"
      },
      {
        "user": "didii",
        "created_at": "2018-04-20T09:18:09Z",
        "body": "I'm having a similar issue where trying to apply an operation to a nested `JObject` results in the exception\r\n\r\n> JsonPatchException: 'The path segment 'property' is invalid for an array index.'\r\n\r\nwhich is strange since `JObject` isn't really an array and the generation of the operation is correct (via `JsonPatchDocument<T>.Replace`). This happens for JsonPatch 2.0.0 and 2.1.0-preview2-final.\r\n\r\nExample code:\r\n\r\n    [TestClass]\r\n    public class UnitTest1\r\n    {\r\n        [TestMethod]\r\n        public void TestMethod1()\r\n        {\r\n            var someDto = new SomeDto()\r\n            {\r\n                Name = \"A\",\r\n                JObject = new JObject()\r\n            };\r\n            someDto.JObject[\"id\"] = 5;\r\n            someDto.JObject[\"property\"] = \"thisisproperty\";\r\n\r\n            var patch = new JsonPatchDocument<SomeDto>();\r\n            patch.Replace(dto => dto.JObject[\"property\"], \"thisisotherproperty\"); // generates the correct path\r\n            patch.ApplyTo(someDto); // <- throws JsonPatchException\r\n        }\r\n    }\r\n\r\n    public class SomeDto\r\n    {\r\n        public string Name { get; set; }\r\n        public JObject JObject { get; set; }\r\n    }\r\n"
      },
      {
        "user": "mkArtakMSFT",
        "created_at": "2018-11-20T19:04:23Z",
        "body": "Closing this issue as there was no community involvement for quite a while now. If you are still experiencing the issue, please reopen it agian."
      },
      {
        "user": "NicolaasVB",
        "created_at": "2018-11-20T21:01:50Z",
        "body": "Just because I didn't reply here in a while (you guys didn't bother to reply in the first place!!!) doesn't suddenly make this **NOT A BUG**"
      },
      {
        "user": "mkArtakMSFT",
        "created_at": "2018-11-20T22:24:51Z",
        "body": "Thanks for getting back, @NicolaasVB. Wasn't sure it's relevant or not. We'll look into this soon."
      },
      {
        "user": "rynowak",
        "created_at": "2018-11-20T23:44:00Z",
        "body": "This would be a good feature to add, but unfortunately we don't have any real support or tests for `JObject`. Are you interested in helping work on this?"
      },
      {
        "user": "NicolaasVB",
        "created_at": "2018-11-21T07:52:51Z",
        "body": "I'm absolutely interested in helping work on this, but for the next month I probably won't have that much time, as my wife is about to give birth to my first kid.\r\nWhen I find the time though, I'll try to work on it and send a PR."
      },
      {
        "user": "mkArtakMSFT",
        "created_at": "2018-11-21T17:19:30Z",
        "body": "Moving this to Backlog. It's yours, @NicolaasVB, when you'll find time."
      },
      {
        "user": "sfmskywalker",
        "created_at": "2019-08-05T16:46:25Z",
        "body": "I'm running into this issue today, where I have a POCO containing an object property that contains JObject values. The fix seems to be straightforward enough: just add a `JObjectAdapter`. I'll give this a go and submit a PR if it works."
      },
      {
        "user": "sfmskywalker",
        "created_at": "2019-08-06T09:08:22Z",
        "body": "Turns out I submitted my PR too soon - although JObject properties are now correctly handled, there's still the issue as described by the OP. Looking into it some more."
      },
      {
        "user": "sfmskywalker",
        "created_at": "2019-08-06T09:22:55Z",
        "body": "Actually, I take that back - it works! I was testing the old code 😅 "
      },
      {
        "user": "rynowak",
        "created_at": "2019-10-07T19:37:59Z",
        "body": "Done. thanks!"
      }
    ]
  },
  {
    "number": 2427,
    "title": "Patching of readonly collections fails",
    "created_at": "2018-01-01T21:23:51Z",
    "closed_at": "2019-09-20T16:46:56Z",
    "labels": [
      "bug",
      "help wanted",
      "area-mvc"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/2427",
    "body": "_From @MovGP0 on Wednesday, October 25, 2017 2:38:39 AM_\r\n\r\nGiven I have an Entity with an readonly collection like this: \r\n```csharp\r\npublic sealed class MyEntity \r\n{\r\n    public MyEntity()\r\n    {\r\n    }\r\n\r\n    [JsonConstructor]\r\n    public MyEntity(IEnumerable<string> tags)\r\n    {\r\n        Tags = tags?.ToList() ?? new List<string>();\r\n    }\r\n\r\n    [JsonProperty(\"tags\")]\r\n    public ICollection<string> Tags { get; } = new List<string>();\r\n}\r\n```\r\n\r\nThan it is not possible to patch it, besides the property beeing potentially writeable and also serializeable. \r\n\r\n_Copied from original issue: aspnet/JsonPatch#118_",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/2427/comments",
    "author": "aspnet-hello",
    "comments": [
      {
        "user": "mkArtakMSFT",
        "created_at": "2019-09-20T16:46:56Z",
        "body": "Hi. Thanks for contacting us.\r\nWe're closing this issue as there was not much community interest in this ask for quite a while now."
      }
    ]
  },
  {
    "number": 5876,
    "title": "Consider an options to allow setting the \"DisplayName\" of the windows authentication scheme",
    "created_at": "2017-09-01T03:33:10Z",
    "closed_at": "2018-12-19T23:56:06Z",
    "labels": [
      "help wanted",
      "feature-httpsys",
      "area-networking"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/5876",
    "body": "Much like is allowed in the IIS Integration server implementation with `IISOptions.AuthenticationDisplayName`.",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/5876/comments",
    "author": "brockallen",
    "comments": [
      {
        "user": "brockallen",
        "created_at": "2017-09-01T03:59:01Z",
        "body": "Or as another idea -- a simple sample to show how to set the display name when using HttpSys."
      },
      {
        "user": "aspnet-hello",
        "created_at": "2018-12-19T23:56:04Z",
        "body": "Thanks for your feedback. We appreciate your letting us know about the problem you've encountered or suggestion but we are not planning to take further action on this issue because our focus has been on issues with significantly higher customer interest and issues impacting a broad number of customers.\r\n"
      }
    ]
  },
  {
    "number": 5024,
    "title": "SetNamespace does not work when Razor is extended by Mvc",
    "created_at": "2017-08-02T19:06:28Z",
    "closed_at": "2019-09-20T16:43:15Z",
    "labels": [
      "bug",
      "help wanted",
      "area-mvc",
      "feature-razor-pages"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/5024",
    "body": "Today the `builder.SetNamespace(...)` method does not work when registering MVC pieces on `RazorEngine` due to how it attempts to mutate the namespace. Today it tries to add a new document classifier to modify the namespace.\r\n\r\nFor those watching this you can work around this issue by creating a new IR pass that changes the namespace. Example:\r\n\r\n```C#\r\npublic class ChangeNamespacePass : IntermediateNodePassBase, IRazorDocumentClassifierPass\r\n{\r\n    public override int Order => 1100;\r\n\r\n    protected override void ExecuteCore(RazorCodeDocument codeDocument, DocumentIntermediateNode documentNode)\r\n    {\r\n        var @namespace = documentNode.FindPrimaryNamespace();\r\n        @namespace.Content = \"TheNamespaceYouWant\";\r\n    }\r\n}\r\n```",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/5024/comments",
    "author": "NTaylorMullen",
    "comments": [
      {
        "user": "rynowak",
        "created_at": "2017-08-08T04:34:33Z",
        "body": "Given that there's a workaround for this, I propose we stick it in the backlog until someone complains."
      }
    ]
  },
  {
    "number": 4827,
    "title": "We should add a method to stringify a TagHelperAttribute's value.",
    "created_at": "2017-03-27T17:29:34Z",
    "closed_at": "2020-10-14T17:57:17Z",
    "labels": [
      "help wanted",
      "enhancement",
      "area-mvc"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/4827",
    "body": "With the addition of `TagHelperComponent`s you don't get property binding of attribute values so you're forced to introspect on `context.AllAttributes`/`output.Attributes`. If you want to look at an attributes value you then have to write a boat load of complex code to accurately retrieve the value. We should add a method somewhere to enable you to retrieve the string format of a `TagHelperAttribute`.\r\n\r\nCould be an extension method on `TagHelperAttribute` (`GetStringValue()`), could be a protected method on the `TagHelperComponent` base type, could be a static method somewhere. Any of those i'd be fine with.\r\n\r\n/cc @Eilon @DamianEdwards ",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/4827/comments",
    "author": "NTaylorMullen",
    "comments": [
      {
        "user": "DamianEdwards",
        "created_at": "2017-03-27T18:25:55Z",
        "body": "I'm having déjà vu..."
      },
      {
        "user": "NTaylorMullen",
        "created_at": "2018-04-25T17:56:42Z",
        "body": "@mkArtakMSFT we should triage this. It's valuable, I run into cases where this would fix users issues pretty regularly."
      },
      {
        "user": "DamianEdwards",
        "created_at": "2018-04-25T18:09:12Z",
        "body": "@NTaylorMullen do you have an idea of what it would look like and the cost?"
      },
      {
        "user": "NTaylorMullen",
        "created_at": "2018-04-25T18:48:42Z",
        "body": "An extension method `output.Attributes[\"src\"].GetStringValue()`, or the same with an encoder.\r\n\r\nWhere the guts of the impl would be something like:\r\n```C#\r\n// Returns the encoded string value\r\npublic static string GetStringValue(this TagHelperAttribute attribute) => GetStringValue(attribute, HtmlEncoder.Default);\r\n\r\n// Returns the encoded string value\r\npublic static string GetStringValue(this TagHelperAttribute attribute, HtmlEncoder encoder)\r\n{\r\n    var attributeValue = attribute.Value;\r\n    if (attributeValue is string stringValue)\r\n    {\r\n        var encodedStringValue = encoder.Encode(stringValue);\r\n        return encodedStringValue;\r\n    }\r\n    else\r\n    {\r\n        var htmlContent = attributeValue as IHtmlContent;\r\n        if (htmlContent != null)\r\n        {\r\n            var htmlString = htmlContent as HtmlString;\r\n            if (htmlString != null)\r\n            {\r\n                // HtmlString is special, it's ToString unwraps its internal string representation but is ultimately already encoded.\r\n                return htmlString.ToString();\r\n            }\r\n            else\r\n            {\r\n                using (var writer = new StringWriter())\r\n                {\r\n                    htmlContent.WriteTo(writer, encoder);\r\n                    return writer.ToString();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // Unknown attribute value type, just ToString the value directly and assume its encoded (this is what's done in Mvc).\r\n    return attributeValue.ToString();\r\n}\r\n```\r\n\r\nI'd cost it at 1 day (marking with S since there's nothing with a 1 day equivalent cost)"
      },
      {
        "user": "DamianEdwards",
        "created_at": "2018-04-26T03:42:53Z",
        "body": "If it's truly only 1 day, then this seems like a good item to include in 2.2 that could be done in between other work."
      },
      {
        "user": "rynowak",
        "created_at": "2018-04-26T21:34:55Z",
        "body": "😲 "
      },
      {
        "user": "DamianEdwards",
        "created_at": "2018-04-26T21:46:00Z",
        "body": "I don't know what that face means in this context."
      },
      {
        "user": "pranavkm",
        "created_at": "2020-10-14T17:57:17Z",
        "body": "Closing this. We haven't heard customer ask for this and the sample that was listed in the earlier comment should help."
      }
    ]
  },
  {
    "number": 5985,
    "title": "Add/Modify Url Encoding/Decoding for IIS UrlRewrite",
    "created_at": "2016-09-01T16:35:13Z",
    "closed_at": "2022-04-27T23:59:14Z",
    "labels": [
      "help wanted",
      "feature-rewrite-middleware",
      "good first issue",
      "area-middleware"
    ],
    "url": "https://github.com/dotnet/aspnetcore/issues/5985",
    "body": "I didn't implement UrlDecode, a server variable in IISUrlRewrite, because there wasn't a great library (or static method) to do it. Right now I'm using Uri.Encode for encoding, which doesn't have the best perf.\n\nI think we can use Uri.EscapeDataString, but fundamentally I think this should be changed to a different library.\n",
    "comments_url": "https://api.github.com/repos/dotnet/aspnetcore/issues/5985/comments",
    "author": "jkotalik",
    "comments": [
      {
        "user": "vchy1997",
        "created_at": "2021-04-20T15:14:14Z",
        "body": "Hello \r\nThis is my first request, so please forgive me if there are any shortcomings.\r\nI have read the code and the documentation.\r\n\r\n#### The methods that I think need to be used.\r\n1. System.Uri.EscapeUriString(\"\");\r\n2. System.Uri.UnescapeDataString(\"\");\r\n\r\n#### What I think needs to be changed.\r\n1. src\\Middleware\\Rewrite\\src\\UrlEncodeSegment.cs [Modify]\r\n2. src\\Middleware\\Rewrite\\src\\PatternSegments\\UrlDecodeSegment.cs [ADD]\r\n3. src\\Middleware\\Rewrite\\src\\IISUrlRewrite\\InputParser.cs (case UrlDecode/UrlEncode) [Modify]\r\n4. src\\Middleware\\Rewrite\\test\\IISUrlRewrite\\InputParserTests.cs [Modify]\r\n\r\nIf there is no problem, I think I can modify it\r\n\r\nThanks  :smile:\r\n"
      }
    ]
  }
]