[
  {
    "number": 1855,
    "title": "Sending failure",
    "created_at": "2024-12-10T01:42:27Z",
    "closed_at": "2024-12-10T02:00:03Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1855",
    "body": "When doing a SMTP mail send I get an exception: `6.6.0 Error sending message for delivery` \r\nI'm using yahoo mail and when I log into the yahoo UI I do see the emails in the drafts folder. I'm not clear how to go about debugging what might be wrong here. Note: this same mailing code used to be used with a hotmail address successfully so think the code is ok?\r\n\r\nAny help/pointers to look into here would be greatly appreciated.\r\n\r\n```\r\n            private readonly string _host = \"smtp.mail.yahoo.com\";\r\n            private readonly int _port = 587;\r\n\r\n            var email = new MimeMessage();\r\n            email.Sender = MailboxAddress.Parse(_user); \r\n            foreach (string to in mailRequest.To)\r\n                email.To.Add(MailboxAddress.Parse(to));\r\n            email.Subject = mailRequest.Subject;\r\n            var builder = new BodyBuilder();\r\n            builder.HtmlBody = mailRequest.HtmlBody;\r\n            builder.TextBody = mailRequest.TextBody;\r\n            email.Body = builder.ToMessageBody();\r\n            using (var smtp = new SmtpClient())\r\n            {\r\n                smtp.Connect(_host, _port, SecureSocketOptions.StartTls);\r\n                smtp.Authenticate(_user, _pw);\r\n                await smtp.SendAsync(email);\r\n                smtp.Disconnect(true);\r\n            }\r\n\r\n```  ",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1855/comments",
    "author": "jonande",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2024-12-10T01:59:36Z",
        "body": "You should set the From header rather than Sender.\n\nOnly set Sender if it is different from the From address or if the From header contains multiple addresses."
      },
      {
        "user": "jonande",
        "created_at": "2024-12-10T02:08:36Z",
        "body": "Thank you for the assistance!"
      }
    ]
  },
  {
    "number": 1826,
    "title": "Are you able to authorize without providing a password?",
    "created_at": "2024-10-08T09:35:23Z",
    "closed_at": "2024-10-08T12:34:07Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1826",
    "body": "If you've made your own SMTP inhouse server, and made an account without a password - are you able to use `SmtpClient` to successfully authorize within it? Or does the library make assumptions that a password must always be present?\r\n\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1826/comments",
    "author": "kikaragyozov",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2024-10-08T12:33:16Z",
        "body": "The SmtpClient can be used with or without calling the Authenticate() method. In your scenario, you would not want to call the Authenticate() method because you have no username or password."
      },
      {
        "user": "kikaragyozov",
        "created_at": "2024-10-08T12:53:01Z",
        "body": "@jstedfast I did not mention that there's no username. I mentioned that there's a username with no password setup. Will the library handle this case successfully?\r\n\r\nThank you for making an amazing library like this!"
      },
      {
        "user": "jstedfast",
        "created_at": "2024-10-08T13:35:48Z",
        "body": "Then I guess you would use an empty string as your password.\r\n\r\nSMTP servers usually either require username/password or no authentication at all. It is abnormal to require a username without a password."
      }
    ]
  },
  {
    "number": 1808,
    "title": "ImapClient.Authenticate Failed",
    "created_at": "2024-09-01T08:23:06Z",
    "closed_at": "2024-09-01T15:57:48Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1808",
    "body": "I want to read **verification code** from **gmail.com** but get error when calling process **client.Authenticate(email, password);**\r\n\r\n - OS: Windows 11\r\n - .NET Runtime: 8.0.304\r\n - .NET Framework: .NET 8.0\r\n - MailKit: 4.7.1.1 \r\n\r\n```\r\n**Exception**\r\n   at MailKit.Net.Imap.ImapClient.Authenticate(Encoding encoding, ICredentials credentials, CancellationToken cancellationToken)\r\n   at MailKit.MailService.Authenticate(Encoding encoding, String userName, String password, CancellationToken cancellationToken)\r\n   at MailKit.MailService.Authenticate(String userName, String password, CancellationToken cancellationToken)\r\n   at CustomerCardServer.Ext.Mod.Email.GmailManager.ReadVerificationCode(String email, String password) in F:\\2022\\CustomerCard\\CustomerCard\\Server\\PresentationLayer\\Ext\\Mod\\Email\\GmailManager.cs:line 50\r\n\r\n```\r\n**Code Snippets**\r\n```\r\nusing CardData.Ext.Logger;\r\nusing MailKit;\r\nusing MailKit.Net.Imap;\r\nusing MailKit.Search;\r\nusing System.Text.RegularExpressions;\r\n\r\nnamespace CustomerCardServer.Ext.Mod.Email\r\n{\r\n    public class GmailManager\r\n    {\r\n        private static GmailManager? _instance;\r\n        private static object _instanceLocker = new object();\r\n\r\n        private String _imapServer = \"imap.gmail.com\";\r\n        private int _imapPort = 993; // imap over SSL\r\n\r\n        private GmailManager()\r\n        {\r\n        }\r\n\r\n        public static GmailManager GetInstance()\r\n        {\r\n            if (_instance is null)\r\n            {\r\n                lock (_instanceLocker)\r\n                {\r\n                    _instance = new GmailManager();\r\n                }\r\n            }\r\n            return _instance;\r\n        }\r\n\r\n        public String ReadVerificationCode(String email, String password)\r\n        {\r\n            try\r\n            {\r\n                if (String.IsNullOrEmpty(email) || String.IsNullOrEmpty(password))\r\n                {\r\n                    return String.Empty;\r\n                }\r\n\r\n                using (var client = new ImapClient())\r\n                {\r\n                    // Connect to the server\r\n                    client.Connect(_imapServer, _imapPort, true);\r\n\r\n                    // Authenticate\r\n                    //client.AuthenticationMechanisms.Remove(\"XOAUTH2\");\r\n                    //client.AuthenticationMechanisms.Remove(\"NTLM\");\r\n                    client.Authenticate(email, password);  // BUG IN HERE\r\n\r\n                    // Open the inbox\r\n                    var inbox = client.Inbox;\r\n                    inbox.Open(FolderAccess.ReadOnly);\r\n\r\n                    // Search for emails from the specific sender\r\n                    var query = SearchQuery.FromContains(\"noreply@github.com\");\r\n                    var uids = inbox.Search(query);\r\n\r\n                    // Fetch the details of the found messages\r\n                    var messages = inbox.Fetch(uids, MessageSummaryItems.Full | MessageSummaryItems.UniqueId | MessageSummaryItems.InternalDate);\r\n\r\n                    // Define the current time\r\n                    DateTime currentDate = DateTime.UtcNow;\r\n\r\n                    // Filter messages that contain \"Device verification\" in the subject\r\n                    var filteredMessages = messages\r\n                    .Where(msg => msg.NormalizedSubject != null && msg.NormalizedSubject.Contains(\"[GitHub] Please verify your device\", StringComparison.OrdinalIgnoreCase))\r\n                    .OrderByDescending(msg => Math.Abs((msg.Date.DateTime - currentDate).TotalSeconds))\r\n                    .ToList();\r\n\r\n                    if (filteredMessages.Any())\r\n                    {\r\n                        var nearestMessage = filteredMessages.First();\r\n                        var message = inbox.GetMessage(nearestMessage.UniqueId);\r\n\r\n                        // Define the regex pattern to match the verification code\r\n                        string pattern = @\"Verification code:\\s*(\\d+)\";\r\n\r\n                        // Create a Regex object with the specified pattern\r\n                        Regex regex = new Regex(pattern);\r\n\r\n                        // Perform the regex match\r\n                        Match match = regex.Match(message.Body.ToString());\r\n                        if (match.Success)\r\n                        {\r\n                            // Extract the verification code from the match groups\r\n                            return match.Groups[1].Value;\r\n                        }\r\n                    }\r\n\r\n                    // Disconnect and dispose\r\n                    client.Disconnect(true);\r\n                }\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                Log.Exception(ex);\r\n            }\r\n            return String.Empty;\r\n        }\r\n    }\r\n}\r\n\r\n```\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1808/comments",
    "author": "ctechid",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2024-09-01T12:32:34Z",
        "body": "Are you using your normal password  or an app-specific password?\n\nHave you configured gmail to allow \"Less secure apps\"?"
      },
      {
        "user": "ctechid",
        "created_at": "2024-09-01T12:51:55Z",
        "body": "> Are you using your normal password or an app-specific password?\r\n> \r\n> Have you configured gmail to allow \"Less secure apps\"?\r\n\r\nI use normal password.\r\nI set gmail to allow \"Less secure apps\"."
      },
      {
        "user": "jstedfast",
        "created_at": "2024-09-01T15:57:48Z",
        "body": "You have to use an app-specific password. Google won't allow you to use your normal password with GMail over IMAP or SMTP anymore."
      }
    ]
  },
  {
    "number": 1795,
    "title": "ImapClient 'silently' disposes?!?",
    "created_at": "2024-08-15T16:06:38Z",
    "closed_at": "2024-08-23T14:41:01Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1795",
    "body": "@jstedfast I just got a report from a 'new-to-me' real world problem: it appears that there could be situations where `ImapClient` disposes itself (for reason not know to my app) and my app would not know. Please see trace below:\r\n```\r\n2024-08-13 10:16:16:426 (xxxx) Mail.MailClient.MoveToAsync.Exception: mailAccount='aaa.bbb@ccc.com' System.ObjectDisposedException: Cannot access a disposed object.\r\nObject name: 'ImapClient'.\r\n   at MailKit.Net.Imap.ImapFolder.QueueOpenCommand(FolderAccess, CancellationToken)\r\n   at Unusual.Mail.MailClient.MoveToAsync(Mail, MailFolder)\r\n```\r\nMy app works of the assumptions that:\r\n- `ImapClient` would never dispose 'by itself'\r\n- only my app ever would dispose `ImapClient` and hence, should be aware of any 'dispose' cases (unless there really is a bug my code - which of course could be the case)\r\n\r\nAs first step(s) of my analysis I liked to understand:\r\n- is my assumption \"`ImapClient` would never dispose 'by itself'' correct?\r\n- if my assumption is wrong: what would be the best way to trap such as case?\r\n\r\nThanks in advance\r\n\r\nBTW: you might have guessed it ... this again was a MS365 mail account ;-)",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1795/comments",
    "author": "DierkDroth",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2024-08-15T16:28:06Z",
        "body": "> is my assumption \"ImapClient would never dispose 'by itself'' correct?\r\n\r\nYes. ImapClient will never silently (or otherwise) dispose itself.\r\n\r\n> if my assumption is wrong: what would be the best way to trap such as case?\r\n\r\nOof. The bane of every programmer since the dawn of software development.\r\n\r\nI'd probably suggest adding some logging. If you create multiple ImapClient instances, I'd probably subclass ImapClient so that I could add an 'int' or Guid property to uniquely identify each ImapClient (for logging purposes) and then add logging to the .ctor/Dispose methods to see where these are getting called."
      },
      {
        "user": "DierkDroth",
        "created_at": "2024-08-15T16:56:29Z",
        "body": "Thanks @jstedfast \r\n\r\nOk, next step: what would be the best way to detect that `ImapClient` was disposed (which is the problem in the case above, isn't it?!?). There are a couple of properties on `ImapClient`, but none of them would indicate .IsDisposed, no? `ImapClient.IsConnected`? `ImapClient.IsAuthenticated`? Else?"
      },
      {
        "user": "jstedfast",
        "created_at": "2024-08-15T17:22:45Z",
        "body": "Most disposable objects don't have an IsDisposed-like property. A somewhat common practice is often to null out your member variable (if it's part of a class) once you dispose it.\r\n\r\nAnother option is to subclass ImapClient and either add the property to your subclass (and override the `Dispose(bool disposing)` method to update that property value to `true`, or in your case if you are just trying to add logging, you could just override the `Dispose(bool disposing)` method to log that the object got disposed.\r\n\r\nIn general, you shouldn't have to check if an object is disposed in your code because methods that act on that object should never be called to act on a disposed object in the first place (although, obviously, we've all had to debug issues where we were incorrectly operating on a disposed object at some point or another).\r\n\r\n\r\nFor the purpose of short-lived debugging code changes, you could use reflection to check the `ImapClient.disposed` field (of type `bool`).\r\n\r\nIt doesn't have a public accessor, but it might be a quicker/easier solution than subclassing ImapClient to debug this issue."
      },
      {
        "user": "DierkDroth",
        "created_at": "2024-08-15T17:59:22Z",
        "body": "> A somewhat common practice is often to null out your member variable (if it's part of a class) once you dispose it.\r\n\r\nThat's exactly what I'm doing ... which makes me pretty confident `.Dispose` was not triggered by my code.\r\n\r\nSo any of the `ImapClient.IsXXX` properties wouldn't cover what I'm looking for?"
      },
      {
        "user": "jstedfast",
        "created_at": "2024-08-15T18:35:27Z",
        "body": "There's currently no public property that can be used to determine the disposed state"
      },
      {
        "user": "DierkDroth",
        "created_at": "2024-08-15T18:37:49Z",
        "body": "Thanks @jstedfast \r\n\r\nHmm ... I'll look into subclassing `ImapClient` next then ...\r\nActually I'm thinking ... that would not catch cases where **ImapClient**.Dispose would be called for unknown reason. right?"
      },
      {
        "user": "jstedfast",
        "created_at": "2024-08-15T19:15:59Z",
        "body": "If you override `Dispose(bool disposing)`, even the dotnet finalizer will call that.\r\n\r\nSo whether the ImapClient gets disposed due to a finalizer thread or from directly calling client.Dispose() or from a `using` statement, it will all cause the `Dispose(bool disposing)` method to be called."
      },
      {
        "user": "DierkDroth",
        "created_at": "2024-08-16T05:24:20Z",
        "body": "Thanks for clarification @jstedfast.\r\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2024-08-23T14:14:32Z",
        "body": "Have you found anything?"
      },
      {
        "user": "DierkDroth",
        "created_at": "2024-08-23T14:41:01Z",
        "body": "Thanks for reaching out @jstedfast.\r\n\r\nIn a first step I cleared out some code on my end which seemed to be a bit fishy. I wanted to see if this actually would be the cause of trouble.\r\n\r\nI closed his ticket for now and will get back to you if further research would be due..."
      }
    ]
  },
  {
    "number": 1780,
    "title": "How to create MailboxAddress instance with punycode in domain part ?",
    "created_at": "2024-07-22T12:51:30Z",
    "closed_at": "2024-07-26T15:35:33Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1780",
    "body": "Hello,\r\nI have an issue when my smtp server rejects sending emails when _from_ field contains idn address, but works fine in case of punycode value\r\nBut I can't create MimeMessage where MailboxAddress contains punycode, because it always converts punycode into idn\r\nI probably might implement my custom IPunycode which doesn't do any conversion and assign IdnMapping with it, but it can be bad idea since it's static and will be applied everywhere\r\nIs there any workaround here ? ",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1780/comments",
    "author": "aldayneko",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2024-07-26T14:58:40Z",
        "body": "MailKit will use the UTF-8 version of the mailbox address when the SMTP server supports the SMTPUTF8 extension.\r\n\r\nWhen it doesn't, it will use the IDN-encoded version of the mailbox address.\r\n\r\nYou can disable SMTP extensions by doing this:\r\n\r\n```csharp\r\nclient.Capabilities &= ~SmtpCapabilities.UTF8;\r\n```"
      },
      {
        "user": "aldayneko",
        "created_at": "2024-07-26T15:35:16Z",
        "body": "Thanks\r\nbut I got it to work just creating custom IPunycode implementation which simply doesn't do any conversion and it solved my problem"
      }
    ]
  },
  {
    "number": 1778,
    "title": "SearchQuery for Message-ID / References?? ",
    "created_at": "2024-07-20T10:13:07Z",
    "closed_at": "2024-07-21T12:18:51Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1778",
    "body": "Hi, i'm Looking to create a `List<UniqueId>` of any messages where we find `@agy-` in the Message-Id or References field of INBOX emails.\r\n\r\nI note I can do this \r\n\r\n```\r\nvar query = SearchQuery.FromContains(\"anyone@gmail.com\");\r\nvar summariesToMove1 = InboxFolder.Search(SearchOptions.All, query);\r\n```\r\n\r\nBut can we search on `Message-ID` and `References`?",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1778/comments",
    "author": "tinmac",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2024-07-21T12:18:52Z",
        "body": "You can probably do something like this:\r\n\r\n```csharp\r\nvar query = SearchQuery.HeaderContains (\"Message-ID\", \"@agy-\").Or (SearchQuery.HeaderContains (\"References\", \"@agy-\");\r\nvar summariesToMove1 = InboxFolder.Search(query);\r\n```"
      }
    ]
  },
  {
    "number": 1775,
    "title": "New version scheme",
    "created_at": "2024-07-16T08:19:51Z",
    "closed_at": "2024-07-16T14:58:30Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1775",
    "body": "Hi there, I noticed that the version changed from 4.7.1 to 4.7.1.1 - is this intentional? May I ask what's the reason to introduce a new digit?\r\n\r\nBest regards,\r\nGeorg",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1775/comments",
    "author": "cz-dev-ge",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2024-07-16T14:58:30Z",
        "body": "It's a nuget package fix for MailKit 4.7.1 and I didn't want to make a new release of MimeKit (e.g. bumping both versions to 4.7.2), so I just released a fixed nuget package of MailKit and added a digit."
      },
      {
        "user": "cz-dev-ge",
        "created_at": "2024-07-17T11:02:09Z",
        "body": "Ugly but fair enough ;)"
      },
      {
        "user": "jstedfast",
        "created_at": "2024-07-18T01:09:50Z",
        "body": "I tend to stick with 3 digits, if/when you see a fourth digit, it's a packaging fix."
      }
    ]
  },
  {
    "number": 1771,
    "title": "Publish a new version with MimeKit 4.7.1 dependency",
    "created_at": "2024-07-12T06:14:28Z",
    "closed_at": "2024-07-12T17:10:09Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1771",
    "body": "The currently latest published version of MailKit has a dependency on MimeKit 4.7.0 which contains a security vulnerability. Please release a new version of MailKit so that we automatically get the updated MimeKit.",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1771/comments",
    "author": "cremor",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2024-07-12T17:10:09Z",
        "body": "Release v4.7.1"
      }
    ]
  },
  {
    "number": 1766,
    "title": "Virtual-mta value information ",
    "created_at": "2024-07-03T11:52:42Z",
    "closed_at": "2024-07-11T13:44:50Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1766",
    "body": "While using Mailkit to send mail, we are using X-virtual-mta as header now.\r\n\r\nBut not sure about how to get it's value.\r\nDo we need to check with MTA or how to figure out MTA of Mailkit.net.smtp.\r\n\r\nmail message.Headers.Add(\"X-virtual-mta\",\"**VALUE**\");\r\n\r\nAny help on this will be appreciated.",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1766/comments",
    "author": "Bhupendersinghbisht",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2024-07-03T14:44:09Z",
        "body": "I've never even heard of X-Virtual-MTA but it sounds more likely that it's the SMTP server that should be setting that header, not any client."
      }
    ]
  },
  {
    "number": 1761,
    "title": "Can SendAsync complete without throwing, but essentially fail to deliver?",
    "created_at": "2024-06-14T10:10:14Z",
    "closed_at": "2024-06-14T12:45:01Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1761",
    "body": "Can `SendAsync` method complete successfully without throwing an exception, but in reality, something had gone wrong with the e-mail - it was never sent, it's missing in the \"Sent\" folders of the account etc?\r\n\r\nI see that `SendAsync` returns a string. Am I to inspect it for a specific string, to understand if the e-mail was really, successfully sent? Or is this already being done under the hood by the library?\r\n\r\nI can confirm this occurred at least once, when running MailKit 4.3.0.",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1761/comments",
    "author": "kikaragyozov",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2024-06-14T12:02:52Z",
        "body": "Short answer: yes.\n\nSend/SendAsync will complete successfully if they manage to upload the message to the SMTP server without any errors.\n\nBut just because a message is sent successfully doesn't mean it will be delivered successfully.\n\nAlso, it should be noted that SmtpClient will not add the message to your Sent folder. SMTP doesn't have a way to do that.\n\nYou need to use the ImapClient to append the message to the Sent folder.\n\nThe string returned by the SendAsync method is the final response sent by the SMTP server indicating that the message has been successfully queued by the server. The reason that it is returned by MailKit is because some servers include identifiers that can be used for tracing telemetry session data and some developers find that useful."
      },
      {
        "user": "kikaragyozov",
        "created_at": "2024-06-15T07:56:54Z",
        "body": "> Short answer: yes.\r\n> \r\n> Send/SendAsync will complete successfully if they manage to upload the message to the SMTP server without any errors.\r\n> \r\n> But just because a message is sent successfully doesn't mean it will be delivered successfully.\r\n> \r\n> Also, it should be noted that SmtpClient will not add the message to your Sent folder. SMTP doesn't have a way to do that.\r\n> \r\n> You need to use the ImapClient to append the message to the Sent folder.\r\n> \r\n> The string returned by the SendAsync method is the final response sent by the SMTP server indicating that the message has been successfully queued by the server. The reason that it is returned by MailKit is because some servers include identifiers that can be used for tracing telemetry session data and some developers find that useful.\r\n\r\nWeird. I specifically used `SmtpClient` and I do get messages that were sent with it into my \"Sent\" folder. The e-mail is at `outlook.com`?"
      },
      {
        "user": "jstedfast",
        "created_at": "2024-06-15T11:30:44Z",
        "body": "That is very non-standard behavior."
      }
    ]
  },
  {
    "number": 1742,
    "title": "in the sample project of imapidle, is it possible to add a sample method for how to cancel the \"IDLE\" mode. thanks!",
    "created_at": "2024-04-05T16:39:45Z",
    "closed_at": "2024-04-05T21:26:28Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1742",
    "body": "Thanks for your great works in advance!\r\n\r\nI am doing a PoC on a mail client. and seeing how to support \"IDLE\" mode to show the coming emails notification ,flags change,...\r\n\r\nI tested \"ImapIdle\", it is running perfect as the expected. but don't know how to exit the \"IDLE\" mode to serve a user request. Is there any the best practice for the following scenario:\r\n The mail client is running in \"IDLE\" mode, then user want to Fetch and read an email. how to exit the \"IDLE\" mode and execute the \"Fetch\" immediately?\r\n\r\nThanks!",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1742/comments",
    "author": "kenizhou",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2024-04-05T21:26:05Z",
        "body": "You just need to cancel the doneToken. It can literally be done anywhere in your code."
      },
      {
        "user": "kenizhou",
        "created_at": "2024-04-05T23:44:23Z",
        "body": "thanks"
      }
    ]
  },
  {
    "number": 1736,
    "title": "MailKit Login Issue: Stalling on Inbox Access",
    "created_at": "2024-03-24T02:53:51Z",
    "closed_at": "2024-03-24T10:56:04Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1736",
    "body": "I've noticed a strange issue with MailKit. There are two approaches. The first approach gets stuck for several minutes after successful login at this line 'client.Inbox.Open(FolderAccess.ReadWrite);'. The second approach logs in normally.\r\nBad\r\n```\r\nprivate void YaDaZe(object sender, RoutedEventArgs e)\r\n        {\r\n            List<string> acc_list = new List<string>(File.ReadLines(\"./40.txt\"));\r\n            Do_Mails(acc_list);\r\n        }\r\n\r\n        private void Do_Mails(List<string> accounts)\r\n        {\r\n            List<string> tmp_ans;\r\n            List<string> answer = new List<string>();\r\n            string proxy_uri = \"proxy_host\";\r\n            BinarySearchQuery query;\r\n            IList<IMailFolder> folders;\r\n            IList<MailKit.UniqueId> uids;\r\n            DateSearchQuery basequery;\r\n            string tmp_links;\r\n            string form;\r\n            List<string> succeed= new List<string> ();\r\n            List<string> bad_net = new List<string>();\r\n            string aaa = \"proxy_account\";\r\n            string bbb = \"proxy_password\";\r\n            foreach (var acc in accounts)\r\n            {\r\n                Debug.WriteLine($\"Now is {acc}\");\r\n                    string[] parts = acc.Split(':');\r\n                string email, password;\r\n                email = parts[0];\r\n                password = parts[1];\r\n                using (var client = new ImapClient())\r\n                {\r\n                    var credential = new NetworkCredential(aaa, bbb);\r\n                    var socks5_client = new Socks5Client(proxy_uri, 2333, credential);\r\n                    client.ProxyClient = socks5_client;\r\n                    client.CheckCertificateRevocation = false;\r\n                    client.ServerCertificateValidationCallback = (sender, certificate, chain, sslPolicyErrors) => true;\r\n                    try\r\n                    {\r\n                        client.Connect(\"outlook.office365.com\", 993, true);\r\n                        client.Authenticate(email, password);\r\n                    }\r\n                    catch (MailKit.Security.AuthenticationException login_failed)\r\n                    {\r\n                        Debug.WriteLine(\"wrong~\" + login_failed);\r\n                        client.Disconnect(true);\r\n                        continue;\r\n                    }\r\n                    catch (MailKit.Security.SslHandshakeException)\r\n                    {\r\n                        bad_net.Add(acc);\r\n                        client.Disconnect(true);\r\n                        continue;\r\n                    }\r\n                    catch\r\n                    {\r\n                        Debug.WriteLine($\"{acc} something wrong\");\r\n                    }\r\n                    client.Inbox.Open(FolderAccess.ReadWrite);\r\n                    int ccc = client.Inbox.Count();\r\n                    Debug.WriteLine(ccc);\r\n                    Debug.WriteLine($\"we got it{acc}\");\r\n                    succeed.Add(acc);\r\n                    client.Disconnect(true);\r\n                }\r\n            }\r\n            foreach (var sss in succeed)\r\n                Debug.WriteLine(sss);\r\n            Debug.WriteLine($\"wrong is {bad_net.Count()}\");\r\n        }\r\n```\r\n\r\nGood\r\n```\r\nprivate void OneShot(object sender, RoutedEventArgs e)\r\n        {\r\n            string acc = \"mail_acc:mail_pass\"; // 20:57\r\n            ImapClient client;\r\n            Socks5Client socks5_client;\r\n            string proxy_uri = \"proxy_host\";\r\n            using (client = new ImapClient())\r\n            {\r\n            \r\n                var credential = new NetworkCredential(\"proxy_acc\", \"proxy_pass\");\r\n                socks5_client = new Socks5Client(proxy_uri, 2333, credential);\r\n                client.ProxyClient = socks5_client;\r\n                string[] parts = acc.Split(':');\r\n                client.CheckCertificateRevocation = false;\r\n                client.ServerCertificateValidationCallback = (sender, certificate, chain, sslPolicyErrors) => true;\r\n                try\r\n                {\r\n                    client.Connect(\"outlook.office365.com\", 993, true);\r\n                    Debug.WriteLine($\"+++{parts[0]}+++{parts[1]}---has connected\");\r\n                    client.Authenticate(parts[0], parts[1]);\r\n                    Debug.WriteLine($\"+++{parts[0]}+++{parts[1]}---got it\");\r\n                }\r\n                catch\r\n                {\r\n                    Debug.WriteLine($\"{acc} something wrong\");\r\n                    client.Disconnect(true);\r\n                }\r\n                client.Inbox.Open(FolderAccess.ReadOnly);\r\n                int newEmailCount = client.Inbox.Count;\r\n                Debug.WriteLine($\"You have {newEmailCount}\");\r\n                Debug.WriteLine($\"we got it{acc}\");\r\n                client.Disconnect(true);\r\n            }\r\n        }\r\n\r\n\r\n        private void BigShot(object sender, RoutedEventArgs e)\r\n        {\r\n            string[] parts = \"mail_acc:mail_pass\".Split(\":\");\r\n            string host = \"outlook.office365.com\"; // IMAP host for Outlook\r\n            string email = parts[0];\r\n            string password = parts[1];\r\n            string aaa = \"proxy_acc\";\r\n            string bbb = \"proxy_pass\";\r\n            string proxy_uri = \"proxy_host\";\r\n            \r\n            using (var client = new ImapClient())\r\n            {\r\n\r\n                var credential = new NetworkCredential(aaa, bbb);\r\n                var socks5_client = new Socks5Client(proxy_uri, 2333, credential);\r\n                client.ProxyClient = socks5_client;\r\n                client.CheckCertificateRevocation = false;\r\n                client.ServerCertificateValidationCallback = (sender, certificate, chain, sslPolicyErrors) => true;\r\n                try\r\n                {\r\n                    client.Connect(\"outlook.office365.com\", 993, true);\r\n                    Debug.WriteLine($\"+++{email}+++{password}---has connected\");\r\n                    client.Authenticate(email,password);\r\n                    Debug.WriteLine($\"+++{email} +++ {password}---got it\");\r\n                }\r\n                catch\r\n                {\r\n                    Debug.WriteLine($\"something wrong\");\r\n                    client.Disconnect(true);\r\n                }\r\n                client.Inbox.Open(FolderAccess.ReadOnly);\r\n                int newEmailCount = client.Inbox.Count;\r\n                Debug.WriteLine($\"You have {newEmailCount}\");\r\n                Debug.WriteLine($\"we got it{email}\");\r\n                client.Disconnect(true);\r\n            }\r\n        }\r\n```",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1736/comments",
    "author": "Cegazhos",
    "comments": [
      {
        "user": "Cegazhos",
        "created_at": "2024-03-24T02:56:03Z",
        "body": "In the second approach, both functions operate normally. I still haven't figured out where the mistake lies. Even after consulting with ChatGPT, we haven't reached a conclusion."
      },
      {
        "user": "jstedfast",
        "created_at": "2024-03-24T10:55:46Z",
        "body": "Do you know how to use a debugger? If not, this would be the perfect time to learn.\n\nYou'll learn and grow so much more as a software developer if I let you figure this out on your own than if I tell you what mistake you made.\n\nOnce you figure it out, you'll be able to spot this type of bug without needing to run the code in a debugger, before you had your morning coffee or even gotten out of bed yet while looking at the code snippet on your phone's tiny screen and laying in bed.\n\nI'd wish you luck, but I'm confident that you won't need luck because you'll have real skills 😇\n"
      }
    ]
  },
  {
    "number": 1667,
    "title": "Is it supposed to work?",
    "created_at": "2023-11-17T16:19:04Z",
    "closed_at": "2023-11-17T16:41:35Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1667",
    "body": "Trying to connect to an imap server and get the list of messages.\r\n\r\n```\r\n        static void Main(string[] args)\r\n        {\r\n            ImapClient client = new ImapClient(new ProtocolLogger(\"imap.log\"));\r\n            client.Connect(\"imap.one.com\", 993, true);\r\n            client.Authenticate(new NetworkCredential(\"...@....me.uk\", \"...\"));\r\n            foreach (FolderNamespace? n in client.PersonalNamespaces)\r\n            {\r\n                Console.WriteLine($\"Namespace {n.Path}\");\r\n            }\r\n            foreach (IMailFolder f in client.GetFolders(client.PersonalNamespaces[0]))\r\n            {\r\n                Console.WriteLine($\"Folder {f.Name}\");\r\n            }\r\n\r\n            IMailFolder ff = client.GetFolder(client.PersonalNamespaces[0]);\r\n            FolderAccess fa = ff.Open(FolderAccess.ReadWrite);\r\n            IFetchRequest rq = new FetchRequest(MessageSummaryItems.All);\r\n            IList<IMessageSummary> msgs = ff.Fetch(0, ff.Count, rq);\r\n            foreach(IMessageSummary m in msgs)\r\n            {\r\n                Console.WriteLine(m.NormalizedSubject);\r\n            }\r\n        }\r\n```\r\n\r\nBut the `.Fetch` fails with\r\n> `MailKit.Net.Imap.ImapCommandException: 'The IMAP server replied to the 'FETCH' command with a 'BAD' response: Error in IMAP command FETCH: Invalid messageset (0.001 + 0.000 secs).'`\r\n\r\nHere is the log file:\r\n```\r\nConnected to imaps://imap.one.com:993/\r\nS: * OK [CAPABILITY IMAP4rev1 SASL-IR LOGIN-REFERRALS ID ENABLE IDLE LITERAL+ AUTH=PLAIN AUTH=LOGIN] Dovecot ready.\r\nC: A00000000 AUTHENTICATE PLAIN ********\r\nS: A00000000 OK [CAPABILITY IMAP4rev1 SASL-IR LOGIN-REFERRALS ID ENABLE IDLE SORT SORT=DISPLAY THREAD=REFERENCES THREAD=REFS THREAD=ORDEREDSUBJECT MULTIAPPEND URL-PARTIAL CATENATE UNSELECT CHILDREN NAMESPACE UIDPLUS LIST-EXTENDED I18NLEVEL=1 CONDSTORE QRESYNC ESEARCH ESORT SEARCHRES WITHIN CONTEXT=SEARCH LIST-STATUS BINARY MOVE SNIPPET=FUZZY PREVIEW=FUZZY STATUS=SIZE SAVEDATE LITERAL+ NOTIFY QUOTA] Logged in\r\nC: A00000001 NAMESPACE\r\nS: * NAMESPACE ((\"INBOX.\" \".\")) NIL NIL\r\nS: A00000001 OK Namespace completed (0.001 + 0.000 secs).\r\nC: A00000002 LIST \"\" \"INBOX\" RETURN (SUBSCRIBED CHILDREN)\r\nS: * LIST (\\HasChildren) \".\" \"INBOX\"\r\nS: A00000002 OK List completed (0.001 + 0.000 secs).\r\nC: A00000003 LIST \"\" \"INBOX.*\" RETURN (SUBSCRIBED CHILDREN)\r\nS: A00000003 OK List completed (0.001 + 0.000 secs).\r\nC: A00000004 SELECT INBOX (CONDSTORE)\r\nS: * FLAGS (\\Answered \\Flagged \\Deleted \\Seen \\Draft)\r\nS: * OK [PERMANENTFLAGS (\\Answered \\Flagged \\Deleted \\Seen \\Draft \\*)] Flags permitted.\r\nS: * 1 EXISTS\r\nS: * 0 RECENT\r\nS: * OK [UIDVALIDITY 1699716082] UIDs valid\r\nS: * OK [UIDNEXT 5] Predicted next UID\r\nS: * OK [HIGHESTMODSEQ 10] Highest\r\nS: A00000004 OK [READ-WRITE] Select completed (0.001 + 0.000 secs).\r\nC: A00000005 FETCH 1:2 ALL\r\nS: A00000005 BAD Error in IMAP command FETCH: Invalid messageset (0.001 + 0.000 secs).\r\n```\r\n\r\nWhat is wrong?",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1667/comments",
    "author": "rwb196884",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2023-11-17T16:41:35Z",
        "body": "Does accessing an array using `array[array.Count]` work?\r\n\r\nHere's your problem:\r\n\r\n```csharp\r\nff.Fetch(0, ff.Count, rq);\r\n```\r\n\r\nChange that to:\r\n\r\n```csharp\r\nff.Fetch(0, ff.Count - 1, rq);\r\n```"
      },
      {
        "user": "rwb196884",
        "created_at": "2023-11-18T10:27:12Z",
        "body": "Thank you.\r\nI was working from the example C# code and I thought it was a batch size.\r\n\r\nThis might be useful?\r\n\r\n```\r\n    internal class MailkitLogger : IProtocolLogger\r\n    {\r\n        private ILogger<MailkitLogger> _Logger;\r\n        public MailkitLogger(ILogger<MailkitLogger> logger)\r\n        {\r\n            _Logger = logger;\r\n        }\r\n\r\n        public IAuthenticationSecretDetector AuthenticationSecretDetector { get; set; }\r\n\r\n        public void Dispose() { }\r\n\r\n        public void LogClient(byte[] buffer, int offset, int count)\r\n        {\r\n            using (MemoryStream ms = new MemoryStream())\r\n            {\r\n                using (ProtocolLogger l = new ProtocolLogger(ms, true) { AuthenticationSecretDetector = AuthenticationSecretDetector })\r\n                {\r\n                    l.LogClient(buffer, offset, count);\r\n                }\r\n                ms.Flush();\r\n                ms.Position = 0;\r\n                using (StreamReader r = new StreamReader(ms))\r\n                {\r\n                    string msg = r.ReadToEnd();\r\n                    _Logger.LogInformation(msg);\r\n                }\r\n            }\r\n        }\r\n\r\n        public void LogConnect(Uri uri)\r\n        {\r\n            using (MemoryStream ms = new MemoryStream())\r\n            {\r\n                using (ProtocolLogger l = new ProtocolLogger(ms, true) { AuthenticationSecretDetector = AuthenticationSecretDetector })\r\n                {\r\n                    l.LogConnect(uri);\r\n                }\r\n                ms.Flush();\r\n                ms.Position = 0;\r\n                using (StreamReader r = new StreamReader(ms))\r\n                {\r\n                    string msg = r.ReadToEnd();\r\n                    _Logger.LogInformation(msg);\r\n                }\r\n            }\r\n        }\r\n\r\n        public void LogServer(byte[] buffer, int offset, int count)\r\n        {\r\n            using (MemoryStream ms = new MemoryStream())\r\n            {\r\n                using (ProtocolLogger l = new ProtocolLogger(ms, true) { AuthenticationSecretDetector = AuthenticationSecretDetector })\r\n                {\r\n                    l.LogServer(buffer, offset, count);\r\n                }\r\n                ms.Flush();\r\n                ms.Position = 0;\r\n                using (StreamReader r = new StreamReader(ms))\r\n                {\r\n                    string msg = r.ReadToEnd();\r\n                    _Logger.LogInformation(msg);\r\n                }\r\n            }\r\n        }\r\n    }\r\n```"
      },
      {
        "user": "jstedfast",
        "created_at": "2023-11-18T12:52:45Z",
        "body": "Not sure what I could use your code snippet for."
      }
    ]
  },
  {
    "number": 1663,
    "title": "how to get the index of message with unique id of imap",
    "created_at": "2023-11-07T09:46:14Z",
    "closed_at": "2023-11-07T11:58:50Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1663",
    "body": "**Is your feature request related to a problem? Please describe.**\r\nfirst of all, i want to fetch all message by paging use imap, so i can get a unique id from first page, but when i want to read the second page, there maybe some message deleted, so i have to turn the unique id to message index, so that i can fetch the second page from this index.\r\n\r\n**Describe the solution you'd like**\r\nnow i have use this code to get the index of message with unique id.\r\n\r\nIList<IMessageSummary> lastMsg = inbox.Fetch(new List<UniqueId> { new UniqueId(lastUID) }, MessageSummaryItems.UniqueId);\r\n\r\nand get the index like this.\r\n\r\nlastMsg[0].Index\r\n\r\n**Describe alternatives you've considered**\r\ni just want to want that if there have a method to get index directly.\r\n\r\n**Additional context**\r\nAdd any other context or screenshots about the feature request here.\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1663/comments",
    "author": "AlexGeller",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2023-11-07T11:58:32Z",
        "body": "That's the only way"
      }
    ]
  },
  {
    "number": 1656,
    "title": "Multiple recipients - Mail send failure",
    "created_at": "2023-10-25T07:34:23Z",
    "closed_at": "2023-10-25T12:16:39Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1656",
    "body": "Referring to the issue #309, I am trying to understand in which situation the email sending completely fails. I sent an email with 2 recipients, one valid and existent and one \"info@johndoe2023.gr\". The latter domain is non-existent. The message was successfully delivered to the valid email address. ",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1656/comments",
    "author": "pamar1908",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2023-10-25T12:16:39Z",
        "body": "That depends on the server. Some will accept addresses that they know are invalid and others won't."
      }
    ]
  },
  {
    "number": 1651,
    "title": "How to transfer an \"inline\" image via SmtpClient.Send",
    "created_at": "2023-10-02T11:07:02Z",
    "closed_at": "2023-10-02T14:01:16Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1651",
    "body": "I'm trying to send a message with an **inline** image. To do this, I'm using the `BodyBuilder` with the following code:\r\n\r\n    var stream = new FileStream(linkedResource.LocalFilename, FileMode.Open);\r\n    var mimePart = new MimePart()\r\n    {\r\n        Content = new MimeContent(stream),\r\n        ContentId = linkedResource.ContentId,\r\n        ContentTransferEncoding = ContentEncoding.Base64,\r\n        FileName = linkedResource.Filename,\r\n    };\r\n    mimePart.ContentDisposition.IsAttachment = false;\r\n    mimePart.ContentType.MediaType = HtmlParserHelper.GetImageContentTypeByFile(linkedResource.LocalFilename);\r\n    builder.LinkedResources.Add(mimePart;\r\n\r\nUnfortunately, the image will be transffered as an **attachment**. The received mail shows the following headers for this image:\r\n\r\n\tContent-Type: image/png/octet-stream;\r\n\t\tname=449a0b24-fabc-4cab-8c48-a0995b6c5de1.png\r\n\tContent-Id: <d5316e0e5fc04362a7086deae753804f@xyz>\r\n\tContent-Transfer-Encoding: base64\r\n\tContent-Disposition: attachment;\r\n\t\tfilename=449a0b24-fabc-4cab-8c48-a0995b6c5de1.png\r\n\r\nThe `Content-Disposition` is still an attachment, even I set `IsAttachment` to `false`.\r\n\r\nWhat is the correct way to tell the `MimePart` to be sent as `inline`?\r\n\r\nThanks a lot for your answer.",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1651/comments",
    "author": "ghost",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2023-10-02T14:01:16Z",
        "body": "If you are going to use a BodyBuilder, just do this:\r\n\r\n```csharp\r\nvar mimePart = builder.LinkedResources.Add(linkedResource.LocalFilename);\r\nmimePart.ContentDisposition.Disposition = ContentDisposition.Inline;\r\n```\r\n\r\nAlso, the following line of code is creating an invalid Content-Type header:\r\n\r\n```csharp\r\nmimePart.ContentType.MediaType = HtmlParserHelper.GetImageContentTypeByFile(linkedResource.LocalFilename);\r\n```\r\n\r\n... so don't do that. Pay special attention to the ContentType class. It has a Media Type and a *MediaSubtype*. The string returned by your HtmlParserHelper contains both values separated by a `/` which means you end up with an invalid mime-type like `image/png/octet-stream`."
      },
      {
        "user": "ghost",
        "created_at": "2023-10-02T16:32:51Z",
        "body": "Ok, your solution is very easy, thanks a lot for it.\r\n\r\nBut I still get these headers:\r\n\r\n\tContent-Type: image/png/octet-stream;\r\n\t\tname=449a0b24-fabc-4cab-8c48-a0995b6c5de1.png\r\n\tContent-Id: <d5316e0e5fc04362a7086deae753804f@xyz>\r\n\tContent-Transfer-Encoding: base64\r\n\tContent-Disposition: attachment;\r\n\t\tfilename=449a0b24-fabc-4cab-8c48-a0995b6c5de1.png\r\n\r\n... so it's still an *attachment* and not *inline*.\r\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2023-10-02T16:34:52Z",
        "body": "Those headers are definitely NOT from the code snippet that I pasted, they are produced by your old code."
      },
      {
        "user": "ghost",
        "created_at": "2023-10-02T17:00:38Z",
        "body": "Yes, my mistake. Sorry."
      }
    ]
  },
  {
    "number": 1650,
    "title": "Questions to Pop3Client.DeleteMessage",
    "created_at": "2023-10-01T03:52:46Z",
    "closed_at": "2023-10-01T23:19:29Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1650",
    "body": "If I delete a message with `Pop3Client.DeleteMessage`, the message should be marked for deletion, if I'm right.\r\n\r\nAfter this, `Pop3Client.GetMessageCount` still counts this message furthermore. But if I try to receive them again with `Pop3Client.GetMessageHeaders` (with `IList<int>), I can't receive them.\r\n\r\nMy questions:\r\n\r\n- Why will the message be countered furthermore, but I can't get it?\r\n- Is there a way to delete the message completely (immediately) without disconnecting?\r\n\r\nPS\r\nThanks a lot for your great support.",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1650/comments",
    "author": "ghost",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2023-10-01T23:19:29Z",
        "body": "> Why will the message be countered furthermore, but I can't get it?\r\n\r\nThat's just the way the POP3 protocol was designed.\r\n\r\n> Is there a way to delete the message completely (immediately) without disconnecting?\r\n\r\nUnfortunately, no. Again, this is just how the POP3 protocol was designed."
      }
    ]
  },
  {
    "number": 1649,
    "title": "Does ImapFolder.MessageFlagsChanged report the UniqueId constantly?",
    "created_at": "2023-09-30T13:39:40Z",
    "closed_at": "2023-09-30T23:49:25Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1649",
    "body": "I'm using `ImapFolder.Idle` and `ImapFolder.MessageFlagsChanged`.\r\n\r\nOne year before, you told me, not to use the given `UniqueId`, because a lot of servers does not report them.\r\n\r\nDoes this problem still exists, or did you found a way to get it constantly?",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1649/comments",
    "author": "ghost",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2023-09-30T23:49:25Z",
        "body": "I doubt that I told you *not* to use it, I likely told you that it wouldn't generally be set because the vast majority of servers do not provide that information in most cases.\r\n\r\nWhat I said a year ago is still true today and will be true for eternity because the IMAP v4 specification does not require that a server provide that info.\r\n\r\nFrom what I remember having seen a preview of v5 of the IMAP protocol, it is the same for that as well.\r\n\r\nYou can check this by checking MessageFlagsEventArgs.UniqueId.IsValid."
      }
    ]
  },
  {
    "number": 1644,
    "title": "Is this the correct way to combine 4 SearchQuery in AND?",
    "created_at": "2023-09-22T09:06:18Z",
    "closed_at": "2023-09-22T14:13:24Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1644",
    "body": "Is this the correct way to combine 4 SearchQuery in AND?\r\n\r\n`SearchQuery.FromContains(\"sender\").And(SearchQuery.SubjectContains(\"subject\")).And(SearchQuery.SentSince(dateFrom)).And(SearchQuery.SentBefore(dateTo))`\r\n\r\nOr is this other way the correct one?\r\n\r\n```\r\nSearchQuery.And\r\n(\r\n    SearchQuery.FromContains(\"sender\"),\r\n    SearchQuery.And\r\n    (\r\n        SearchQuery.SubjectContains(\"subject\"),\r\n        SearchQuery.And\r\n        (\r\n            SearchQuery.SentSince(dateFrom),\r\n            SearchQuery.SentBefore(dateTo)\r\n        )\r\n    )\r\n);\r\n```",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1644/comments",
    "author": "pralinoid",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2023-09-22T14:13:24Z",
        "body": "They both do the same thing. Both are correct. They will both produce exactly the same tree structure."
      }
    ]
  },
  {
    "number": 1642,
    "title": "Unable to connect to smtp.office365.com",
    "created_at": "2023-09-14T15:43:36Z",
    "closed_at": "2023-09-14T18:14:00Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1642",
    "body": "**Describe the bug**\r\nGot SslHandshakeException when attempt to connect to office 365 smpt server at the stagel of \"ConnectAsync()\"\r\n\r\n**Platform (please complete the following information):**\r\n - OS: Windows\r\n - .NET Runtime: .NET Framework\r\n - .NET Framework: .NET Framework 4.6.1\r\n - MailKit Version:  4.2.0\r\n\r\n**Exception**\r\nIf you got an exception, please include the exception Message *and* StackTrace.\r\n\r\nMailKit.Security.SslHandshakeException\r\n  HResult=0x80131500\r\n  Message=An error occurred while attempting to establish an SSL or TLS connection.\r\n\r\nThe server's SSL certificate could not be validated for the following reasons:\r\n• The server certificate has the following errors:\r\n  • The revocation function was unable to check revocation for the certificate.\r\n\r\n\r\n  Source=MailKit\r\n  StackTrace:\r\n   at MailKit.Net.Smtp.SmtpClient.<ConnectAsync>d__8.MoveNext()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\n   at ConsoleApp1.Program.<Main>d__23.MoveNext() in D:\\Code\\NoSourceControl\\ConsoleApp1\\ConsoleApp1\\Program.cs:line 454\r\n\r\n  This exception was originally thrown at this call stack:\r\n    System.Net.Security.SslState.InternalEndProcessAuthentication(System.Net.LazyAsyncResult)\r\n    System.Net.Security.SslState.EndProcessAuthentication(System.IAsyncResult)\r\n    System.Net.Security.SslStream.EndAuthenticateAsClient(System.IAsyncResult)\r\n    System.Threading.Tasks.TaskFactory<TResult>.FromAsyncCoreLogic(System.IAsyncResult, System.Func<System.IAsyncResult, TResult>, System.Action<System.IAsyncResult>, System.Threading.Tasks.Task<TResult>, bool)\r\n    System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(System.Threading.Tasks.Task)\r\n    System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)\r\n    System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(System.Threading.Tasks.Task)\r\n    MailKit.Net.Smtp.SmtpClient.ConnectAsync(string, int, MailKit.Security.SecureSocketOptions, System.Threading.CancellationToken)\r\n\r\nInner Exception 1:\r\nAuthenticationException: The remote certificate is invalid according to the validation procedure.\r\n\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\nExecute the code snippets.\r\n\r\n\r\n**Expected behavior**\r\nConnect to the smtp server\r\n\r\n**Code Snippets**\r\n\r\n```csharp\r\n            using (var client = new SmtpClient())\r\n            {\r\n                await client.ConnectAsync(\"smtp.office365.com\", 587, SecureSocketOptions.StartTls);\r\n\r\n                await client.DisconnectAsync(true);\r\n            }\r\n```\r\n\r\n**Protocol Logs**\r\nPlease include a protocol log (scrubbed of any authentication data), especially\r\nif you got an exception such as `Syntax error in XYZ. Unexpected token: ...`.\r\n\r\nTo get a protocol log, follow one of the following code snippets:\r\n\r\n\r\n\r\nConnected to smtp://smtp.office365.com:587/?starttls=always\r\nS: 220 AM8P189CA0004.outlook.office365.com Microsoft ESMTP MAIL Service ready at Thu, 14 Sep 2023 15:42:19 +0000\r\nC: EHLO DESKTOP-LOD3TBH\r\nS: 250-AM8P189CA0004.outlook.office365.com Hello [139.28.110.98]\r\nS: 250-SIZE 157286400\r\nS: 250-PIPELINING\r\nS: 250-DSN\r\nS: 250-ENHANCEDSTATUSCODES\r\nS: 250-STARTTLS\r\nS: 250-8BITMIME\r\nS: 250 SMTPUTF8\r\nC: STARTTLS\r\nS: 220 2.0.0 SMTP server ready\r\n\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1642/comments",
    "author": "stevenxi",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2023-09-14T18:14:00Z",
        "body": "The SslHandshakeException explains that it failed because it was unable to check revocation for the certificate (likely the Certificate Authority server that generated the SSL certificate is down or otherwise unreachable right now).\r\n\r\nThis can happen.\r\n\r\nIf you want to avoid revocation checks, you can do this:\r\n\r\n```csharp\r\nusing (var client = new SmtpClient())\r\n{\r\n    client.CheckCertificateRevocation = false;\r\n    await client.ConnectAsync(\"smtp.office365.com\", 587, SecureSocketOptions.StartTls);\r\n\r\n    await client.DisconnectAsync(true);\r\n}\r\n```"
      },
      {
        "user": "stevenxi",
        "created_at": "2023-09-18T08:48:12Z",
        "body": "hi @jstedfast ,\r\n\r\nThanks for the quick response.  Yes it works. \r\nAlthough it's a bit strange, I don't think Microsoft's Office 365 SLL certificate server is down all the time.\r\n\r\n\r\n"
      }
    ]
  },
  {
    "number": 1641,
    "title": "ImapClient CountChange USE",
    "created_at": "2023-09-11T09:07:53Z",
    "closed_at": "2023-09-11T15:45:00Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1641",
    "body": " - .NET Framework: .Net Framework 4.0\r\n - MailKit Version: 1.22.0.0\r\n\r\nHello！\r\n1、I use the ImapClient.Inbox.CountChange event, and after binding it, sometimes it triggers the CountChange event when I receive emails in my inbox, but most of the time, it doesn't (most of the time it doesn't trigger)，\"MessagesArrived\" is the same, sometimes it triggers, but most of the time it doesn't trigger.\r\n\r\n2、When I use client.GetFolder(SpecialFolder.Sent), it can find the folder, but after binding the CountChange, it has never successfully triggered.\r\n\r\n3、How can I resolve the above issues? Due to some reasons, I cannot upgrade the .Net Framework version and Mailkit version in my environment.\r\n\r\nMy c# code：\r\n\r\n```\r\n public Form1()\r\n        {\r\n            InitializeComponent();\r\n            var cts = new CancellationTokenSource();            \r\n            Watch(cts.Token);        \r\n        }\r\n\r\npublic static void Watch(CancellationToken cancellationToken)\r\n        {\r\n            using (var client = ClientCreateAndConnect(cancellationToken))\r\n            {\r\n                while (!cancellationToken.IsCancellationRequested)\r\n                {\r\n                    using (var done = new CancellationTokenSource())\r\n                    {\r\n                        using (var timer = new System.Timers.Timer(9 * 60 * 1000))\r\n                        {\r\n                            timer.Elapsed += (sender, e) => done.Cancel();\r\n                            timer.AutoReset = false;\r\n                            timer.Enabled = true;\r\n                            try\r\n                            {\r\n                                client.Idle(done.Token, cancellationToken);                 \r\n                            }\r\n                            catch (OperationCanceledException)\r\n                            {\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n\r\nprivate static ImapClient ClientCreateAndConnect(CancellationToken token)\r\n        {\r\n            var client = new ImapClient();\r\n            client.Connect(\"xxx.xx.com\", 993, true, token);\r\n            client.ServerCertificateValidationCallback = (s, c, h, e) => true;\r\n            client.Authenticate(\"xx@xx.com\", \"xx\", token); \r\n\r\n            var folder = client.Inbox;\r\n            folder.Open(MailKit.FolderAccess.ReadOnly, token);\r\n            folder.CountChange+= client_CountChanged;\r\n\r\n            var folder2 = client.GetFolder(SpecialFolder.Sent);\r\n            folder2.Open(MailKit.FolderAccess.ReadWrite, token);\r\n            folder2.CountChange+= client_CountChanged;\r\n           \r\n            return client;\r\n        }\r\n\r\npublic static void client_CountChanged(object sender, EventArgs e)\r\n        {\r\n            xxxx；\r\n        }\r\n```\r\n\r\nDear  jstedfast , is there anything wrong with my code? Is there a way to resolve it? Thank you very much!",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1641/comments",
    "author": "aaa19940608",
    "comments": [
      {
        "user": "aaa19940608",
        "created_at": "2023-09-11T10:13:49Z",
        "body": "After logging in, I entered IDLE mode, then sent an email and deleted emails from the outbox, but none of these actions triggered the corresponding events. Below is the log after the operations were completed, but there has been no further log output since entering IDLE mode.\r\n\r\n```\r\nConnected to imaps://xxx.xx.com:993/\r\nS: * OK [CAPABILITY IMAP4 IMAP4rev1 ID AUTH=PLAIN AUTH=LOGIN AUTH=XOAUTH2 NAMESPACE] xx XMIMAP4Server ready\r\nC: A00000000 AUTHENTICATE PLAIN\r\nS: + \r\nC: ADU5Mjk2MjU4NkBxcS5jb20AdmFkeXV3YXBmc21pYmJjaQ==\r\nS: A00000000 OK Success login ok\r\nC: A00000001 CAPABILITY\r\nS: * CAPABILITY IMAP4 IMAP4rev1 XLIST MOVE IDLE XAPPLEPUSHSERVICE NAMESPACE CHILDREN ID UIDPLUS COMPRESS=DEFLATE\r\nS: A00000001 OK CAPABILITY Completed\r\nC: A00000002 NAMESPACE\r\nS: * NAMESPACE ((\"\" \"/\")) NIL NIL\r\nS: A00000002 OK NAMESPACE Success\r\nC: A00000003 LIST \"\" \"INBOX\"\r\nS: * LIST (\\HasNoChildren) \"/\" \"INBOX\"\r\nS: A00000003 OK LIST completed\r\nC: A00000004 XLIST \"\" \"*\"\r\nS: * XLIST (\\NoSelect \\HasChildren) \"/\" \"&xx-\"\r\nS: * XLIST (\\HasNoChildren \\Inbox) \"/\" \"INBOX\"\r\nS: * XLIST (\\HasNoChildren \\Sent) \"/\" \"Sent Messages\"\r\nS: * XLIST (\\HasNoChildren \\Drafts) \"/\" \"Drafts\"\r\nS: * XLIST (\\HasNoChildren \\Trash) \"/\" \"Deleted Messages\"\r\nS: * XLIST (\\HasNoChildren \\Junk) \"/\" \"Junk\"\r\nS: A00000004 OK XLIST completed\r\nC: A00000005 LIST \"\" \"*\"\r\nS: * LIST (\\NoSelect \\HasChildren) \"/\" \"&UXZO1mWHTvZZOQ-\"\r\nS: * LIST (\\HasNoChildren) \"/\" \"INBOX\"\r\nS: * LIST (\\HasNoChildren) \"/\" \"Sent Messages\"\r\nS: * LIST (\\HasNoChildren) \"/\" \"Drafts\"\r\nS: * LIST (\\HasNoChildren) \"/\" \"Deleted Messages\"\r\nS: * LIST (\\HasNoChildren) \"/\" \"Junk\"\r\nS: A00000005 OK LIST completed\r\nC: A00000006 SELECT &UXZO1mWHTvZZOQ-\r\nS: * 0 EXISTS\r\nS: * 0 RECENT\r\nS: A00000006 OK [READ-ONLY] SELECT complete\r\nC: A00000007 SELECT INBOX\r\nS: * 2810 EXISTS\r\nS: * 0 RECENT\r\nS: * OK [UNSEEN 377]\r\nS: * OK [UIDVALIDITY 1433844951] UID validity status\r\nS: * OK [UIDNEXT 4510] Predicted next UID\r\nS: * FLAGS (\\Answered \\Flagged \\Deleted \\Draft \\Seen)\r\nS: * OK [PERMANENTFLAGS (\\* \\Answered \\Flagged \\Deleted \\Draft \\Seen)] Permanent flags\r\nS: A00000007 OK [READ-WRITE] SELECT complete\r\nC: A00000008 SELECT \"Sent Messages\"\r\nS: * 324 EXISTS\r\nS: * 0 RECENT\r\nS: * OK [UIDVALIDITY 1433844951] UID validity status\r\nS: * OK [UIDNEXT 423] Predicted next UID\r\nS: * FLAGS (\\Answered \\Flagged \\Deleted \\Draft \\Seen)\r\nS: * OK [PERMANENTFLAGS (\\* \\Answered \\Flagged \\Deleted \\Draft \\Seen)] Permanent flags\r\nS: A00000008 OK [READ-WRITE] SELECT complete\r\nC: A00000009 IDLE\r\nS: + idling\r\n```\r\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2023-09-11T15:45:00Z",
        "body": "MailKit depends on the server sending an `# EXISTS` event which MailKit then translates into a C# CountChanged event on the folder.\r\n"
      },
      {
        "user": "aaa19940608",
        "created_at": "2023-09-12T01:13:55Z",
        "body": "Are you suggesting that it's an issue with the email server being unstable rather than a problem with my code? Is that correct?"
      },
      {
        "user": "jstedfast",
        "created_at": "2023-09-12T01:31:27Z",
        "body": "Yes"
      },
      {
        "user": "aaa19940608",
        "created_at": "2023-09-12T01:32:31Z",
        "body": "Thank You！   "
      }
    ]
  },
  {
    "number": 1638,
    "title": "`Sender` from a gmail group alias doesn't work?",
    "created_at": "2023-09-08T08:18:55Z",
    "closed_at": "2023-09-08T14:47:30Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1638",
    "body": "**Describe the bug**\r\nI am trying to fix the Sender to a GMAIL group alias but the email is always received from the email alias used in `AuthenticateAsync`\r\n```\r\n                    MimeMessage msg = new MimeMessage() {\r\n                        Sender = MailboxAddress.Parse(\"group@email.com\"),\r\n                        Subject = subject\r\n                    };\r\n```\r\nHow to correctly set up the `Sender` or `From` so that emails received is from my GMAIL group alias?\r\n\r\n**Platform (please complete the following information):**\r\n - OS: [e.g. Windows, Linux, MacOS, iOS, Android, Windows Phone, etc.] Ubuntu 23.04\r\n - .NET Runtime: [e.g. CoreCLR, Mono] CoreCLR\r\n - .NET Framework: [e.g. .Net Core, .NET 4.5, UWP, etc.] .Net Core\r\n - MailKit Version: 4.1.0\r\n\r\n**Exception**\r\nIf you got an exception, please include the exception Message *and* StackTrace.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Go to '...'\r\n2. Click on '....'\r\n3. Scroll down to '....'\r\n4. See error\r\n\r\n**Expected behavior**\r\nA clear and concise description of what you expected to happen.\r\n\r\n**Code Snippets**\r\nIf applicable, add code snippets to help explain your problem.\r\n\r\n```csharp\r\n// Add your code snippet here.\r\n```\r\n\r\n**Protocol Logs**\r\nPlease include a protocol log (scrubbed of any authentication data), especially\r\nif you got an exception such as `Syntax error in XYZ. Unexpected token: ...`.\r\n\r\nTo get a protocol log, follow one of the following code snippets:\r\n\r\n```csharp\r\n// log to a file called 'imap.log'\r\nvar client = new ImapClient (new ProtocolLogger (\"imap.log\"));\r\n```\r\n\r\n```csharp\r\n// log to a file called 'pop3.log'\r\nvar client = new Pop3Client (new ProtocolLogger (\"pop3.log\"));\r\n```\r\n\r\n```csharp\r\n// log to a file called 'smtp.log'\r\nvar client = new SmtpClient (new ProtocolLogger (\"smtp.log\"));\r\n```\r\n\r\nNote: if the protocol log contains sensitive information, feel free to email it to me at\r\njestedfa@microsoft.com instead of including it in the GitHub issue.\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1638/comments",
    "author": "khteh",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2023-09-08T14:47:04Z",
        "body": "The simple answer is that you can't because GMail won't let you. It is overriding the Sender and From headers to stop email spoofing.\n"
      },
      {
        "user": "khteh",
        "created_at": "2023-09-09T05:46:55Z",
        "body": "Does AWS SES support this?"
      },
      {
        "user": "jstedfast",
        "created_at": "2023-09-09T11:07:10Z",
        "body": "Maybe, you'll have to try it."
      },
      {
        "user": "khteh",
        "created_at": "2023-09-16T09:04:42Z",
        "body": "Yes, it works with AWS SES + SNS!"
      }
    ]
  },
  {
    "number": 1631,
    "title": "UniqueIdRange.ToList() doesn't work for large arrays.",
    "created_at": "2023-08-27T07:44:39Z",
    "closed_at": "2023-08-27T11:13:42Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1631",
    "body": "The following code throws an Overflow exception:\r\n`new UniqueIdRange(UniqueId.MinValue, UniqueId.MaxValue).ToList();`\r\nSystem.OverflowException: 'Arithmetic operation resulted in an overflow.'\r\n\r\nThe following code throws an OutOfMemory exception on my laptop:\r\n`new UniqueIdRange(UniqueId.MinValue, new UniqueId(int.MaxValue - 1)).ToList();`\r\n`System.OutOfMemoryException: 'Array dimensions exceeded supported range.'`\r\n\r\nMailKit Version: 4.1.0\r\n\r\nIf `ToList` shouldn't be used then perhaps some other exception would be more appropriate.",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1631/comments",
    "author": "danzuep",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2023-08-27T11:06:30Z",
        "body": "Why are you using ToList() in the first place??\r\n\r\nUniqueIdRange already implements the `IList<UniqueId>` interface and uses way less memory to represent that UID range than a `List<UniqueId>` would, which is why you are getting an OutOfMemoryException. You just tried to allocate 32 gigabytes of memory!!!\r\n\r\nuint.MaxValue * sizeof(UniqueId) = 32 gigabytes "
      },
      {
        "user": "danzuep",
        "created_at": "2023-08-27T11:46:49Z",
        "body": "I have a method that does an IList pattern match on an IEnumerable<UniqueId> for an IMailFolder query, but someone using that method tried to use a UniqueIdRange.ToList() so I thought you might want to know about the Arithmetic OverflowException."
      },
      {
        "user": "jstedfast",
        "created_at": "2023-08-27T12:33:41Z",
        "body": "Unfortunately, I do not have any control over the ToList() method because it is a LINQ extension method."
      }
    ]
  },
  {
    "number": 1622,
    "title": "MDaemon server: errors while using MailKit",
    "created_at": "2023-08-11T07:48:32Z",
    "closed_at": "2023-08-11T11:10:57Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1622",
    "body": "Hello,\r\n\r\nthank you for you hard work, I really love you library!\r\n\r\nUnfortunately I'm facing some errors while reading/sending mails with MailKit. I believe these errors caused by server, but I need to use MDaemon mail server (MDaemon 8.1.1). What do you think about it? Is anything can be done on client side?\r\n\r\nHere is some logs from MDaemon:\r\n\r\n```\r\nError reading from socket!\r\nUnexpected socket closure\r\nSMTP session terminated (Bytes in/out: 0/76)\r\n----------\r\nError reading from socket!\r\nWinsock Error 10053 Software caused a connection abort.\r\nSMTP session terminated (Bytes in/out: 0/76)\r\n----------\r\nError reading from socket!\r\nWinsock Error 10054 Connection was reset by the other side!\r\nSMTP session terminated (Bytes in/out: 0/76)\r\n----------\r\nError reading from socket!\r\nUnexpected socket closure\r\nSMTP session terminated (Bytes in/out: 0/76)\r\n\r\nIMAP:\r\nSocket connection closed by the other side (how rude!)\r\nWinsock Error 10053 Software caused a connection abort.\r\nUnexpected socket closure\r\nIMAP session terminated, (54 bytes)\r\n----------\r\n```\r\n\r\nThis warning is always in MDaemon's log on successful read:\r\n\r\n```\r\nSocket connection closed by the other side (how rude!)\r\nIMAP session terminated, (45945 bytes)\r\n```\r\n\r\nTypically, other client's IMAP log looking like this:\r\n```\r\n<-- pnkl LOGOUT\r\n--> * BYE IMAP engine signing off (no errors)\r\nIMAP session complete, (XXX bytes)\r\n```",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1622/comments",
    "author": "Bykiev",
    "comments": [
      {
        "user": "Bykiev",
        "created_at": "2023-08-11T08:03:23Z",
        "body": "> \r\n> This warning is always in MDaemon's log on successful read:\r\n> \r\n> ```\r\n> Socket connection closed by the other side (how rude!)\r\n> IMAP session terminated, (45945 bytes)\r\n> ```\r\n> \r\n> Typically, other client's IMAP log looking like this:\r\n> \r\n> ```\r\n> <-- pnkl LOGOUT\r\n> --> * BYE IMAP engine signing off (no errors)\r\n> IMAP session complete, (XXX bytes)\r\n> ```\r\n\r\nI think I need to call `Disconnect` method with `true` to send `LOGOUT ` command"
      },
      {
        "user": "jstedfast",
        "created_at": "2023-08-11T11:10:49Z",
        "body": "> I think I need to call Disconnect method with true to send LOGOUT command\n\nThat is the solution to your problems, yes."
      },
      {
        "user": "Bykiev",
        "created_at": "2023-08-11T11:15:19Z",
        "body": "> > I think I need to call Disconnect method with true to send LOGOUT command\r\n> \r\n> That is the solution to your problems, yes.\r\n\r\nSorry, but what about SMTP errors?"
      },
      {
        "user": "jstedfast",
        "created_at": "2023-08-11T14:03:46Z",
        "body": "Same thing."
      }
    ]
  },
  {
    "number": 1612,
    "title": "Setting up email configuration in .net core 6",
    "created_at": "2023-07-27T13:55:26Z",
    "closed_at": "2023-07-27T14:38:12Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1612",
    "body": "Please how can I set up my email configuration using my domain name mailbox e.g info@webhost.com?",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1612/comments",
    "author": "Softkonnectdev",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2023-07-27T14:38:12Z",
        "body": "MailKit doesn't use any configuration, so this question doesn't make sense.\r\n\r\nWhat you will need to do is when you call the `Connect(string hostName, int port, SecureSocketOptions sslOptions)` method with your \"configured\" values, but you'll have to write your own logic for getting those values. Maybe you want to save those values in json or xml or maybe you want to hard-code them or maybe you want to prompt a user."
      }
    ]
  },
  {
    "number": 1611,
    "title": "Handle Envelope-to header",
    "created_at": "2023-07-26T23:34:49Z",
    "closed_at": "2023-07-27T14:29:03Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1611",
    "body": "Does this lib include Envelope-to header in message.To array?\r\nReturn-path: <>\r\nEnvelope-to: email@exmaple.com\r\nDelivery-date: \r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1611/comments",
    "author": "vladtreny",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2023-07-27T14:29:03Z",
        "body": "No, the MimeMessage.To property only includes the `To` header.\r\n\r\nYou can get the list of addresses in the `Envelope-To` header this way:\r\n\r\n```csharp\r\nint index = message.Headers.IndexOf(HeaderId.EnvelopeTo);\r\nif (index >= 0) {\r\n    var addrList = InternetAddressList.Parse(message.Headers[index].RawValue);\r\n}\r\n```"
      }
    ]
  },
  {
    "number": 1609,
    "title": "Pop settings using mailkit",
    "created_at": "2023-07-22T15:13:26Z",
    "closed_at": "2023-07-22T15:50:32Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1609",
    "body": "How can we configure pop3 settings using mailkit or using any api (keep copy on server and enable all mails or enable from now).\r\nJust like we configure manually in gmail web:\r\n=> all settings => forward and imap/pop tab",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1609/comments",
    "author": "usamasarfraz",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2023-07-22T15:50:32Z",
        "body": "All you have to do is *not* call pop3Client.DeleteMessage() and it will stay on the POP3 server.\r\n\r\n\"Enable from now\" and \"Enable all\" are not settings that can be set via the POP3 protocol. They are specific to GMail and can only be set via the website as far as I know."
      }
    ]
  },
  {
    "number": 1604,
    "title": "SMTP Client Send Result",
    "created_at": "2023-07-10T13:45:22Z",
    "closed_at": "2023-07-10T14:26:48Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1604",
    "body": "How do you determine if sending the email was successful?\r\n\r\nThe Send/SendAsync methods return a string, which at the moment for me it returns something like:\r\n`XXXXXXXXXX mail accepted for delivery`.\r\n\r\nAnd I'm pretty sure I've had results like `OK` in the past.\r\n\r\nIs there way to simply know if the message was sent (i.e `true`/`false`) rather than trying to see if result contains 'OK', 'Accepted' etc..\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1604/comments",
    "author": "r-work",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2023-07-10T14:26:48Z",
        "body": "If the method throws an exception, then it failed. If it doesn't throw an exception, then it succeeded."
      },
      {
        "user": "r-work",
        "created_at": "2023-07-10T14:29:34Z",
        "body": "Thanks for the quick reply.\r\nThat should probably be mentioned in the method documentation."
      }
    ]
  },
  {
    "number": 1601,
    "title": "CLR/System.ArgumentNullException",
    "created_at": "2023-07-05T12:25:25Z",
    "closed_at": "2023-07-05T14:18:28Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1601",
    "body": "I'm trying to use your extension for program to copy email, but have a problem. \r\n\r\n w MailKit.Net.Imap.ImapFolder.<SearchAsync>d__304.MoveNext()\r\n   w MailKit.Net.Imap.ImapFolder.Search(SearchOptions options, SearchQuery query, CancellationToken cancellationToken)\r\n\r\nin this code\r\n\r\n```\r\nvar uids = sourceInbox.Search(SearchOptions.All, null).UniqueIds;\r\n\r\n            foreach (var uid in uids)\r\n            {\r\n                var sourceMessage = await sourceInbox.GetMessageAsync(uid);\r\n                await destinationInbox.AppendAsync(sourceMessage);\r\n            }\r\n```\r\n\r\nall method\r\n\r\n\r\n`public async Task CopyEmails()\r\n    {\r\n        using (var sourceClient = new ImapClient())\r\n        using (var destinationClient = new ImapClient())\r\n        {\r\n            await sourceClient.ConnectAsync(sourceServer, sourcePort, SecureSocketOptions.Auto);\r\n            await sourceClient.AuthenticateAsync(sourceUsername, sourcePassword);\r\n\r\n            await destinationClient.ConnectAsync(destinationServer, destinationPort, SecureSocketOptions.Auto);\r\n            await destinationClient.AuthenticateAsync(destinationUsername, destinationPassword);\r\n\r\n            var sourceInbox = sourceClient.Inbox;\r\n            await sourceInbox.OpenAsync(FolderAccess.ReadOnly);\r\n\r\n            var destinationInbox = destinationClient.Inbox;\r\n            await destinationInbox.OpenAsync(FolderAccess.ReadWrite);\r\n\r\n            Console.WriteLine(\"Znaleziono folder INBOX na serwerze źródłowym.\");\r\n            Console.WriteLine(\"Znaleziono folder INBOX na serwerze docelowym.\");\r\n\r\n            var uids = sourceInbox.Search(SearchOptions.All, null).UniqueIds;\r\n\r\n            foreach (var uid in uids)\r\n            {\r\n                var sourceMessage = await sourceInbox.GetMessageAsync(uid);\r\n                await destinationInbox.AppendAsync(sourceMessage);\r\n            }\r\n\r\n            Console.WriteLine(\"Skopiowano wiadomości z folderu INBOX.\");\r\n\r\n            await sourceClient.DisconnectAsync(true);\r\n            await destinationClient.DisconnectAsync(true);\r\n        }\r\n    }\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1601/comments",
    "author": "TomaszMyszak",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2023-07-05T14:04:49Z",
        "body": "Hi Tomasz,\r\n\r\nThe problem is that you are passing `null` as the query argument to the Search() method.\r\n\r\nYou probably want to use `SearchQuery.All` instead of null.\r\n\r\nAlso, since you are using the Async methods for everything else, you might want to use SearchAsync() instead of Search().\r\n\r\nHope that helps."
      }
    ]
  },
  {
    "number": 1594,
    "title": "[Question] Detecting if Account requires oAuth2",
    "created_at": "2023-06-17T19:37:34Z",
    "closed_at": "2023-06-18T14:52:25Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1594",
    "body": "So i was checking outlook account and i have 2 of them. One has OAuth enabled and other is disabled so basically what i want to do is if account has it enabled then i will display browser like thunderbird does for getting the required tokens. Question is how do i detect this stuff? It keeps throwing AuthenticationException with message 'LOGIN failed'. Any help is appreciated.",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1594/comments",
    "author": "abhay991",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2023-06-18T14:52:25Z",
        "body": "You can check if a server supports OAUTH2 by looking at the values in the `*Client.AuthenticationMechanisms` property for `XOAUTH2` or `OAUTH-BEARER` (I think Exchange only supports XOAUTH2 and not OAUTH-BEARER, but that could change at any moment since OAUTH-BEARER is now the official standard).\r\n\r\nIf if contains `OAUTH-BEARER`, you need to use `SaslMechanismOAuthBearer`. If, instead, it only contains `XOAUTH2`, then use `SaslMechanismOAuth2`. If it doesn't contain either of those, then it doesn't support OAUTH2 at all."
      },
      {
        "user": "abhay991",
        "created_at": "2023-06-18T18:11:19Z",
        "body": "That's detecting if server supports oAuth or not but i am using outlook and there are two different accounts on same host one enabled and one not so i need to detect it for specific account instead of server. Thunderbird does this and displays pop up browser if account has oAuth else directly logs you in if it is disabled."
      },
      {
        "user": "jstedfast",
        "created_at": "2023-06-19T14:20:03Z",
        "body": "That's going to be based on the configuration of your Outlook client. There's no way for MailKit to detect that."
      }
    ]
  },
  {
    "number": 1591,
    "title": "S/MIME Signature Incorrect using ECDSA Certificate",
    "created_at": "2023-06-14T13:02:01Z",
    "closed_at": "2023-06-14T13:36:19Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1591",
    "body": "**Describe the bug**\r\nI have attempted to send a signed email message, but various clients have said that the signature is incorrect or the message has been tampered with.\r\n\r\n**Platform (please complete the following information):**\r\n - OS: MacOS\r\n - .NET Runtime: .NET 7\r\n - .NET Framework: .NET Core 7\r\n - MailKit Version: 4.0.0\r\n\r\n**Exception**\r\nNo exceptions thrown\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Run the code snippet below\r\n2. Receive the email in another address\r\n3. See that the signature is somehow incorrect.\r\n\r\n**Expected behavior**\r\nI expected the email, once received, to have a correct signature and validate successfully.\r\n\r\n**Code Snippets**\r\n\r\n```csharp\r\nvar newmsg = new MimeMessage();\r\n        newmsg.To.Add(new MailboxAddress(\"Taylor\", \"<Destination>\"));\r\n        newmsg.From.Add(new SecureMailboxAddress(\"Taylor McCall\", \"<Email>\", \"<Certificate>\"));\r\n        newmsg.Subject = \"Test message Here\";\r\n        var sender = newmsg.From.Mailboxes.FirstOrDefault();\r\n        newmsg.Body = new TextPart(MimeKit.Text.TextFormat.Text);\r\n\r\n        using (var ctx = new WindowsSecureMimeContext())\r\n        {\r\n            newmsg.Body = MultipartSigned.Create(ctx, sender, DigestAlgorithm.Sha256, newmsg.Body);\r\n        }\r\n\r\n        var client = new SmtpClient();\r\n        client.Connect(\"mail.privateemail.com\", 465, MailKit.Security.SecureSocketOptions.SslOnConnect);\r\n        client.Authenticate(\"<Email>\", \"<Password>\");\r\n        client.Send(newmsg);\r\n        client.Disconnect(true);\r\n        client.Dispose();\r\n```\r\n\r\n**Protocol Logs**\r\nNo logs available\r\n\r\n**Additional context**\r\nI have attempted to correct this with a self-signed RSA certificate, but the email client also says that the email has been tampered with or the signature is incorrect.\r\n\r\nPublic certificate and signed emails are available upon request.\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1591/comments",
    "author": "tmccal2",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2023-06-14T13:33:49Z",
        "body": "You need to properly prepare the message for signing such that the SMTP server won't tamper with the message.\r\n\r\nI would recommend the following:\r\n\r\n```csharp\r\nmessage.Prepare (EncodingConstraint.SevenBit);\r\n```\r\n\r\nFor some SMTP servers, you might be able to get away with:\r\n\r\n```csharp\r\nmessage.Prepare (EncodingConstraint.EightBit);\r\n```\r\n\r\nif, for example, the SMTP server supports the 8BITMIME extension."
      },
      {
        "user": "tmccal2",
        "created_at": "2023-06-14T13:40:54Z",
        "body": "It doesn't seem to immediately correct the problem.\r\n\r\nWhere should the prepare method be placed?"
      },
      {
        "user": "jstedfast",
        "created_at": "2023-06-14T13:44:42Z",
        "body": "Before signing the message"
      },
      {
        "user": "tmccal2",
        "created_at": "2023-06-14T14:12:03Z",
        "body": "Setting it after creating the body and before signing the message does not seem to correct the problem."
      },
      {
        "user": "jstedfast",
        "created_at": "2023-06-14T14:13:21Z",
        "body": "Then most likely one of the mail servers that the message is passing through is modifying the message"
      },
      {
        "user": "jstedfast",
        "created_at": "2023-06-14T14:14:14Z",
        "body": "Can you verify the message with MimeKit (before sending the message)?"
      },
      {
        "user": "tmccal2",
        "created_at": "2023-06-14T14:27:08Z",
        "body": "Verification returns true.\r\n\r\nShould the Prepare method set headers? I sent a signed message from my email client and the message returns a valid signature."
      },
      {
        "user": "jstedfast",
        "created_at": "2023-06-14T14:28:59Z",
        "body": "It does not set any headers"
      },
      {
        "user": "tmccal2",
        "created_at": "2023-06-14T14:38:52Z",
        "body": "It may be because I set an empty message body. Having a body in the message seems to solve the problem.\r\n\r\nOf all the face palm moments."
      },
      {
        "user": "tmccal2",
        "created_at": "2023-06-14T14:41:23Z",
        "body": "I should note, however, the the Gmail client still says the message has been tampered with.\r\n\r\nThe apple mail client says valid signature."
      },
      {
        "user": "tmccal2",
        "created_at": "2023-06-14T15:35:09Z",
        "body": "I think it's safe to keep closed. The problem of most clients rejecting signatures is resolved. The remainder appears to be a Gmail or a transport issue."
      }
    ]
  },
  {
    "number": 1577,
    "title": ".AddFlags does not exisit in powershell",
    "created_at": "2023-06-05T14:28:37Z",
    "closed_at": "2023-06-05T14:59:59Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1577",
    "body": "I'm using powershell and the latest version von Mailkit 4.0.0\r\n\r\nI use this code:\r\n`\r\n // client.Connect(\"pop.qq.com\", 995, true);\r\nclient.Connect(\"imap.qq.com\", 993, true);\r\n// Note: since we don't have an OAuth2 token, disable\r\n// the XOAUTH2 authentication mechanism.  \r\nclient.AuthenticationMechanisms.Remove(\"XOAUTH2\");\r\n\r\nclient.Authenticate(\"113729396@qq.com\", \"nathan2013\");\r\nList<UniqueId> Uids = new List<UniqueId> { };\r\nrequest.Uids.ForEach(e=> {\r\nUids.Add(new UniqueId(e));\r\n});\r\n\r\nvar inbox = client.Inbox;\r\ninbox.Open(FolderAccess.ReadWrite);\r\ninbox.AddFlags(Uids,MessageFlags.Deleted, false);\r\n`\r\nI can read all mail from the mailbox, but I cnnot delet any email.\r\n\r\nPowershell tells me, that inbox.AddFlags method does not exist.",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1577/comments",
    "author": "HomeOfSourceCode",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2023-06-05T14:59:59Z",
        "body": "AddFlags is an extension method. You might need to use `inbox.Store(new StoreFlagsRequest (StoreAction.Add, MessageFlags.Deleted));`"
      }
    ]
  },
  {
    "number": 1547,
    "title": "Message index #question",
    "created_at": "2023-04-12T16:28:38Z",
    "closed_at": "2023-04-12T17:00:59Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1547",
    "body": "Hi,\r\n\r\nI apologize if this is a stupid question but I can not find the information I need from the official documentation. I know that if I delete a message it is actually deleted when the client disconnects. I need to know if calling the delete method on a message , this action change the other messages indexes, so incrementing the index and calling get message will return the next message from the box?\r\n\r\nRegards",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1547/comments",
    "author": "HostVanyaD",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2023-04-12T17:00:59Z",
        "body": "Yes, for POP3, calling the Delete method on index 1, 2, then 3 will result in indexes 1, 2, and 3 to be deleted and not 1, 3, and 5.\r\n"
      },
      {
        "user": "HostVanyaD",
        "created_at": "2023-04-13T05:50:25Z",
        "body": "Thanks, for the quick answer!\r\nSo I open the pop3Client start reading messages by index, I delete index 1 message for example, and right after if I want to get the next message I need to call getMessage with index 2, right? I just want to be sure that I will not loose any data or skip an important message."
      },
      {
        "user": "jstedfast",
        "created_at": "2023-04-13T13:36:21Z",
        "body": "Correct"
      }
    ]
  },
  {
    "number": 1537,
    "title": "Cannot use AddFlags on ImapClient.Inbox to delete message",
    "created_at": "2023-03-28T16:39:03Z",
    "closed_at": "2023-03-28T18:20:57Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1537",
    "body": "Hi.\r\n\r\ni just want do read an delete messages with an ImapClient so\r\n\r\nMailKit.Net.Imap.ImapClient clientIMAP = new MailKit.Net.Imap.ImapClient();\r\nAuthenticateAsync(clientIMAP).GetAwaiter().GetResult();  //OAT2 on office\r\nclientIMAP.Inbox.Open(MailKit.FolderAccess.ReadWrite);\r\nvar uids = clientIMAP.Inbox.Search(SearchQuery.All);  // ok access message no pb\r\n...\r\n...\r\n...\r\n\r\n//want to delete\r\nclientIMAP .Inbox.AddFlags   // but AddFlags   not exist on Inbox\r\n\r\nwhat i miss ?\r\n\r\nThanks a lot\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1537/comments",
    "author": "glebourg76",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2023-03-28T18:19:41Z",
        "body": "AddFlags is an extension method in 3.x for compatibility and for simpler use."
      },
      {
        "user": "jstedfast",
        "created_at": "2023-03-28T18:20:27Z",
        "body": "Add a using MailKit; statement at the top of your source code"
      },
      {
        "user": "glebourg76",
        "created_at": "2023-03-28T18:27:53Z",
        "body": "Ha .. great!!!\r\nthx Jeff"
      }
    ]
  },
  {
    "number": 1535,
    "title": "Does the library support send email to only one receiver?",
    "created_at": "2023-03-23T12:51:46Z",
    "closed_at": "2023-03-25T12:49:37Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1535",
    "body": "**Is your feature request related to a problem?**\r\n- No, its not a problem at all.\r\n- Im implementing a lambda to send multiples emails (to individuals receivers) using a queue as trigger. But, when receive the multiples messages, the addresses is appended and some ppl receive email from other.\r\n\r\n**Platform:**\r\n- OS: Linux\r\n- Version: .NET 6\r\n- MailKit Version: 3.6\r\n\r\n**Describe alternatives you've considered**\r\nIm cleaning the list emailAddress after disconnectAsync, but, its not performatic in large scale.\r\n```cs\r\n// Some previews code\r\n...\r\nawait _smtpClient.SendAsync(_email);\r\nawait _smtpClient.DisconnectAsync(true);\r\n\r\n// cleaning the list of addresses\r\nawait Task.Run(() => _email.To.Clear());\r\n...\r\n```\r\n\r\n**Describe the solution you'd like**\r\n```cs\r\n// Some previews code\r\n...\r\n_email.To(MailboxAddress.Parse(to)); // <- as a single receiver.\r\n\r\n// Some code to auth, connect and send the email.\r\n...\r\n```\r\n\r\n**Principal question**\r\nThe library can support it, or is it an feature opened to be developed?\r\n\r\nThanks, guys.",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1535/comments",
    "author": "gabriel-sisjr",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2023-03-23T13:45:46Z",
        "body": "I'm not sure that I understand what you are asking for.\r\n\r\nNormally, if you want to send the same message to multiple people, you would just add multiple mailboxes to the To/Cc/Bcc headers.\r\n\r\n```csharp\r\nmessage.To.Add(new MailboxAddress(\"Joe\", \"joe@example.com\"));\r\nmessage.To.Add(new MailboxAddress(\"Cindy\", \"cindy@example.com\"));\r\n\r\nawait client.SendAsync(message);\r\n```\r\n\r\nIf you want to send to multiple people but you don't want anyone who receives the message to be able to see who the other recipients are/were, then you can use the Blind-Carbon-Copy (aka Bcc) header. A common technique for doing this is:\r\n\r\n```csharp\r\nmessage.To.Add(new GroupAddress(\"undisclosed-recipients\"));\r\nmessage.Bcc.Add(new MailboxAddress(\"Joe\", \"joe@example.com\"));\r\nmessage.Bcc.Add(new MailboxAddress(\"Cindy\", \"cindy@example.com\"));\r\n\r\nawait client.SendAsync(message);\r\n```\r\n\r\nIf, instead, you want to do things the hard way, you can do what you already seem to be doing which is to clear the MimeMessage.To list and add a new recipient to it and send the message again. If you do this, however, you should probably set a new MimeMessage.MessageId value:\r\n\r\n```csharp\r\nusing (var client = new SmtpClient()) {\r\n    await client.ConnectAsync(\"smtp.example.com\", 587, SecureSocketOptions.Auto);\r\n    await client.AuthenticateAsync(\"username\", \"password\");\r\n\r\n    foreach (var recipient in listOfRecipients) {\r\n        message.To.Add(new MailboxAddress(recipient.Name, recipient.EmailAddress));\r\n        message.MessageId = MimeUtils.GenerateMessageId();\r\n\r\n        await client.SendAsync(message);\r\n\r\n        message.To.Clear();\r\n    }\r\n\r\n    await client.DisconnectAsync(true);\r\n}\r\n```\r\n\r\nThe Message-Id header should be (ideally be) unique for every message you send which is why you would need to set a new value every time you modify the message.\r\n\r\n> Im cleaning the list emailAddress after disconnectAsync, but, its not performatic in large scale.\r\n\r\nDo you have performance metrics that you can share? If so, I can take a look at it.\r\n\r\nIn the grand scheme of sending messages, I would imagine it only takes 0.001% of the total time every loop.\r\n\r\n> But, when receive the multiples messages, the addresses is appended and some ppl receive email from other.\r\n\r\nI'd have to examine your code, but I suspect there's a bug somewhere in your code that is causing this and not a bug in MimeKit.\r\n\r\nThe fact that you do:\r\n\r\n```csharp\r\nawait Task.Run(() => _email.To.Clear());\r\n```\r\n\r\nraises eyebrows, honestly. I'm not sure why you are clearing the list in another thread and it makes me suspect that the code snippet you pasted isn't your exact code and that you likely have multiple threads accessing the message and that's why you are having problems."
      }
    ]
  },
  {
    "number": 1528,
    "title": "The IMAP server has unexpectedly disconnected",
    "created_at": "2023-03-08T12:27:56Z",
    "closed_at": "2023-03-08T13:42:14Z",
    "labels": [
      "question",
      "server-bug"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1528",
    "body": "**Describe the bug**\r\ni'm trying to make a little mail client project with vb.net ( I know vb.net is a low language but I'm learning )\r\nI'm having an issue with my btinternet.com email , my connection works well with most of the providers but this site no..\r\nthe confusing part is it works after like 10-20 tries i keep pressing login in my software and eventually it logins\r\n\r\n\r\ni get \"The IMAP server has unexpectedly disconnected\"\r\nand this is the stack track for the error\r\n\r\n**The IMAP server has unexpectedly disconnected.\r\n   at MailKit.Net.Imap.ImapStream.ReadAhead(Int32 atleast, CancellationToken cancellationToken)\r\n   at MailKit.Net.Imap.ImapStream.ReadToken(String specials, CancellationToken cancellationToken)\r\n   at MailKit.Net.Imap.ImapEngine.ReadTokenAsync(Boolean doAsync, CancellationToken cancellationToken)\r\n   at MailKit.Net.Imap.ImapCommand.<StepAsync>d__84.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at MailKit.Net.Imap.ImapEngine.<IterateAsync>d__190.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at MailKit.Net.Imap.ImapEngine.<RunAsync>d__191.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at MailKit.Net.Imap.ImapClient.<AuthenticateAsync>d__103.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at MailKit.Net.Imap.ImapClient.Authenticate(Encoding encoding, ICredentials credentials, CancellationToken cancellationToken)\r\n   at MailKit.MailService.Authenticate(Encoding encoding, String userName, String password, CancellationToken cancellationToken)\r\n   at MailKit.MailService.Authenticate(String userName, String password, CancellationToken cancellationToken)\r\n   at mailfire.Form1.VB$StateMachine_21_Checker.MoveNext()\r\n----------**\r\nIf applicable, add code snippets to help explain your problem.\r\n\r\n```vb.net\r\n//   Using client = New ImapClient()     \r\n                    client.CheckCertificateRevocation = False\r\n                    client.Connect(imp, 993, SecureSocketOptions.Auto)\r\n                    client.Authenticate(login, pass)\r\n```\r\n\r\nmy code is pretty simple \r\n\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1528/comments",
    "author": "johnmartin226",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2023-03-08T13:42:14Z",
        "body": "This just means that your server disconnected you. Since it works for every other server, it probably indicates a server bug that you should contact them about."
      }
    ]
  },
  {
    "number": 1523,
    "title": "how to send AlternateView in mailKit",
    "created_at": "2023-02-28T10:03:09Z",
    "closed_at": "2023-02-28T14:25:41Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1523",
    "body": "I want to send email with AlternateView,  but I fond not how to add AlternateView into mailKit,  \r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1523/comments",
    "author": "sky185959",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2023-02-28T14:25:41Z",
        "body": "AlternateViews just represent normal MimeKit.MimeParts that are children of a MimeKit.MultipartAlternative part.\r\n\r\nIf you only plan to have text/plain and text/html \"alternate views\", you can just use the `BodyBuilder` class to create your message bodies.\r\n\r\nIf you want more flexibility than that, you'll want to understand what order the different views should be in as part of a multipart/alternative. Generally, mail clients will show the *last* part in the multipart/alternative list that they know how to display. So, for example, you would add the text/plain part to the multipart/alternative first and then the text/html part."
      }
    ]
  },
  {
    "number": 1516,
    "title": "Move and set flag Add Flags",
    "created_at": "2023-02-17T10:45:13Z",
    "closed_at": "2023-02-17T13:58:13Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1516",
    "body": "Is there any way to download message attachments and set Seen flag in one loop ? My current code looks like this :\r\n```\r\nfor (int i = 0; inbox.Count > i; i++)\r\n{\r\nvar message = inbox.GetMessage(0);\r\nforeach (var attachment in message.Attachments)\r\n                            {\r\n                                if (!(attachment is MessagePart))\r\n                                {\r\n                                    var part = (MimePart)attachment;\r\n                                    var fileName = part.FileName;\r\n/*\r\n.\r\n.\r\n.\r\nrest of my code to download attachments \r\n*/\r\n}\r\n```\r\nAfter that second loop :\r\n```\r\nforeach (var message in FMiesiac.Fetch(0, -1, MessageSummaryItems.UniqueId))\r\n{\r\n       FMiesiac.AddFlags(message.UniqueId, MessageFlags.Seen, true);\r\n}\r\n```\r\nThis code process 800 - 1200 e-mails so this second loop takes some additional time. Is there any way to download and set this flag in single loop ? \r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1516/comments",
    "author": "pzelektron",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2023-02-17T13:58:13Z",
        "body": "Yea, just call AddFlags() in the same loop as GetMessage()."
      },
      {
        "user": "pzelektron",
        "created_at": "2023-02-17T14:34:31Z",
        "body": "Looks simple but in this first loop message doesn't have property UniqueId required by AddFlags()"
      },
      {
        "user": "jstedfast",
        "created_at": "2023-02-17T14:48:06Z",
        "body": "You can AddFlags() to a message index as well, you don't necessarily need a UniqueId."
      },
      {
        "user": "pzelektron",
        "created_at": "2023-02-17T15:01:40Z",
        "body": "Thanks for helping now its working. For anyone interested in the topic this is the solution :\r\n```\r\nvar message = inbox.GetMessage(0);\r\ninbox.AddFlags(0, MessageFlags.Seen, true);\r\n```\r\n\r\n"
      }
    ]
  },
  {
    "number": 1515,
    "title": "How to filter on exceptions?",
    "created_at": "2023-02-16T06:30:02Z",
    "closed_at": "2023-02-16T13:31:50Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1515",
    "body": "This is not a bug/issue report but rather an inquiry (sorry, did not know where else to put it...):\r\n\r\nHow could I filter in exception? I e.g. have this exception\r\n```\r\nMailKit.Net.Imap.ImapCommandException: The IMAP server replied to the 'UNSELECT' command with a 'NO' response: Server Unavailable. 15\r\n   at MailKit.Net.Imap.ImapFolder.CloseAsync(Boolean expunge, Boolean doAsync, CancellationToken cancellationToken)\r\n   at Unusual.Mail.MailClient.<StartAsync>b__52_0() in C:\\Users\\dierk\\Documents\\unusual-src\\Unusual.Common\\Mail\\MailClient.cs:line 1557\r\n```\r\n... and liked to apply a filter.\r\n\r\nIs there some 'best practice' which could be applied across IMAP/SMTP implementation?\r\n- is the value '15' an error code which I could filter on? How?\r\n- would I need to some text message parsing?\r\n- else?\r\n\r\nThanks in advance",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1515/comments",
    "author": "DierkDroth",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2023-02-16T13:30:59Z",
        "body": "I guess it depends on what pieces of information you want to filter on.\r\n\r\nThe \"Server unavailable. 15\" is, I think, an Exchange error message and I have no idea what the 15 code is or if it is documented anywhere (it's not specified by the IMAP protocol because that text is free-form text that servers can do anything they want with).\r\n\r\nJust keep in mind that if you decide to write some sort of string parser, it will need different handlers for each server (software) and possibly each version of said server software.\r\n\r\nFor `SmtpCommandException`s, I would probably recommend using the `StatusCode` and `ErrorCode` properties.\r\n\r\nFor `ImapCommandException`, you can look at the `Response` property to get the `NO` or `BAD` value an the `ResponseText` to get just the server response text (before it gets combined with some other text in the `Exception.Message` property)."
      },
      {
        "user": "DierkDroth",
        "created_at": "2023-02-16T17:41:31Z",
        "body": "Thanks for your feedback @jstedfast "
      }
    ]
  },
  {
    "number": 1511,
    "title": "Question: Is it possible to search for folders that have at least one e-mail in it?",
    "created_at": "2023-02-08T11:22:05Z",
    "closed_at": "2023-02-08T17:13:05Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1511",
    "body": "Hi,\r\n\r\nI now do this to get all the folders that I need to process.... is it also possible to do some kind of search that only gives me the folders that have at least one e-mail in it so that I don't have to itterate through the folder structure every time?\r\n\r\n```c#\r\n                case MailBoxType.Imap:\r\n                {\r\n                    using var memoryStream = StreamHelpers.Manager.GetStream(\"MailBoxes.GetFolders\");\r\n                    using var protocolLogger = new ProtocolLogger(memoryStream);\r\n                    using var client = new ImapClient(protocolLogger);\r\n\r\n                    try\r\n                    {\r\n                        ConnectAndAuthenticate(client);\r\n                        client.GetFolders(client.PersonalNamespaces[0]);\r\n                        var subFolders = client.GetFolders(client.PersonalNamespaces[0]);\r\n\r\n\r\n                        var rootMailBoxFolder = new MailBoxFolder { Name = \"Root\" };\r\n                        var count = 0;\r\n\r\n                        foreach (var subFolder in subFolders)\r\n                        {\r\n                            count += 1;\r\n\r\n                            var subMailBoxFolder = new MailBoxFolder\r\n                            {\r\n                                Id = subFolder.Id,\r\n                                Name = subFolder.Name,\r\n                                TotalCount = subFolder.Count\r\n                            };\r\n\r\n                            rootMailBoxFolder.AddFolder(subFolder.ParentFolder.Id, subMailBoxFolder);\r\n                        }\r\n\r\n                        return rootMailBoxFolder;\r\n                    }\r\n\r\n                    return result;\r\n                }\r\n```",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1511/comments",
    "author": "Sicos1977",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2023-02-08T17:13:05Z",
        "body": "Unfortunately, the best way to do it is to traverse the subfolders using the GetSubfolders() method that takes a StatusItems argument:\r\n\r\n```csharp\r\nvar subfolders = folder.GetSubfolders(StatusItems.Count);\r\n```\r\n\r\nIf the IMAP server doesn't support the LIST-STATUS extension, MailKit will emulate it by calling the `Status(StatusItems.Count)` method on each folder."
      },
      {
        "user": "Sicos1977",
        "created_at": "2023-02-08T17:38:45Z",
        "body": "Okay to bad it is not possible. I need to migrate a huge amounts of e-mails from a mailbox with a lot of folders to an archive. I do this in chunks and it was a nice bonus if I could just skip te empty folder instead of checking them."
      }
    ]
  },
  {
    "number": 1507,
    "title": "Sending Messages example: disposal of MimeMessage",
    "created_at": "2023-01-19T07:26:57Z",
    "closed_at": "2023-01-19T14:54:35Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1507",
    "body": "Hello.\r\n\r\nIn \"Sending Messages\" I see code:\r\n\r\n**var message = new MimeMessage ();**\r\n\r\nThe MimeMessage class implements IDisposable interface.\r\n\r\nSo I guess there should be something like this:\r\n\r\n**using var message = new MimeMessage ();**\r\n\r\nAm I right?\r\n\r\nIf no - please explain.\r\n\r\nThank you\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1507/comments",
    "author": "harry-flw",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2023-01-19T14:54:30Z",
        "body": "Yes, you would dispose it when you are done with it."
      }
    ]
  },
  {
    "number": 1488,
    "title": "IMAP idle problem with events",
    "created_at": "2022-12-14T15:16:10Z",
    "closed_at": "2022-12-14T16:02:20Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1488",
    "body": "Hi there. I am writing app on UWP. Currently I am trying to know if new messages arrived into inbox. In my Account class I have two IMAPS one for fetching messages and acts with them and second for idling. There is my code snippet:\r\n\r\n``` C#\r\nprivate async Task RunIdleImapsAsync()\r\n{           \r\n    foreach (var account in Accounts ?? new ObservableCollection<Account?>())\r\n    {\r\n        if (account != null && account.IdleImapClient != null && account.IdleImapClient.IsAuthenticated && !account.IdleImapClient.IsIdle)\r\n        {\r\n            var inbox = account.IdleImapClient.Inbox;\r\n            await inbox.OpenAsync(FolderAccess.ReadOnly);\r\n\r\n            inbox.MessageExpunged += OnInboxMessageExpunged;\r\n            var doneToken = new CancellationTokenSource();\r\n            await account.IdleImapClient.IdleAsync(doneToken.Token);\r\n            inbox.MessageExpunged -= OnInboxMessageExpunged;\r\n         }\r\n     }\r\n}\r\n```\r\n\r\nWhat am I doing wrong? My event handler method does not execute",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1488/comments",
    "author": "m1adow",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2022-12-14T16:02:20Z",
        "body": "Whenever you are trying to debug one of these types of issues, it is best to log the IMAP commands/responses to a log file for diagnosis.\r\n\r\nYou can ask MailKit to log these commands/responses by doing this:\r\n\r\n```csharp\r\nvar client = new ImapClient (new ProtocolLogger (\"idle-client.log\"))\r\n```\r\n\r\nThen, once you have that, you need to look at those logs and ask:\r\n\r\n*Did the IMAP server send an `EXPUNGE` notification?*\r\n\r\nIf not, that is your answer.\r\n\r\n100% of the time, the problem is that the IMAP server is not sending an event notification to MailKit's ImapClient and so MailKit obviously can't raise an event that it doesn't know about."
      }
    ]
  },
  {
    "number": 1486,
    "title": "Access Shared mailbox with SaslMechanismOAuth2",
    "created_at": "2022-12-12T08:54:21Z",
    "closed_at": "2022-12-12T15:41:12Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1486",
    "body": "I am implementing email parser console app in asp.net core application from MS Office 365. I am able to access and parse all emails using SaslMechanismOAuth2. But if I am trying to authenticate my shared email id as **SaslMechanismOAuth2(<sharedmailboxid>, <token>)**, it gives error as \"Authaticated but not connected\" exception.\r\n\r\nI would like to know how can I authenticate and access emails from shared mailbox of MS Office 365.\r\n\r\nEarlier I was connecting shared email account using emailid\\sharedemailalias and password. I now wanted to access shared email using SaslMechanismOAuth2(<sharedmailboxid>, <token>)\r\n\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1486/comments",
    "author": "tejaspatel4u",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2022-12-12T15:41:12Z",
        "body": "As far as I know, you would still use `emailid\\sharedemailalias` as the username, the only difference is that you would use the SaslMechanismOAuth2.\r\n\r\nThis question is very specific to the IMAP server you are using and there is no standard mechanism for what you want to do.\r\n\r\nIf that doesn't work, then I can't help you. You'll have to contact customer support for Microsoft Office365."
      },
      {
        "user": "tejaspatel4u",
        "created_at": "2022-12-19T09:11:57Z",
        "body": "Thanks Jeffrey for your time & efforts. We need to give shared mailbox permissions to OAuth app as well and shared mailbox will be accessible."
      }
    ]
  },
  {
    "number": 1481,
    "title": "Stop receiving new messages after a while",
    "created_at": "2022-12-06T14:35:02Z",
    "closed_at": "2023-01-18T17:11:36Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1481",
    "body": "Hi, there!\r\nWhat could be the cause of the problem that after a few days I stop receiving new messages?\r\n\r\nAs an example, I used your IdleClient code with little changes. \r\n\r\nCould the problem be related to that `_trackingUids` at some point in time begins to differ from IMAP server, which is why `_newMessagesArrived` is not set to true. Or could the reason be something else?\r\n\r\nHere's my code\r\n\r\n```csharp\r\npublic class ConnectedEmailClient\r\n{\r\n    public readonly EmailClientInformation EmailClientInformation;\r\n\r\n    private readonly ILogger<ConnectedEmailClient> _logger;\r\n\r\n    private readonly IMessageProcessorFactory _messageProcessorFactory;\r\n\r\n    private readonly ImapClient _imapClient;\r\n\r\n    private readonly FetchRequest _fetchRequest;\r\n\r\n    private readonly CancellationTokenSource _cancel;\r\n\r\n    private readonly List<UniqueId> _trackingUids;\r\n\r\n    private bool _newMessagesArrived;\r\n    private CancellationTokenSource? _done;\r\n\r\n    public ConnectedEmailClient(EmailClientInformation emailClientInformation,\r\n        IMessageProcessorFactory messageProcessorFactory,\r\n        ILogger<ConnectedEmailClient> logger)\r\n    {\r\n        EmailClientInformation = emailClientInformation;\r\n\r\n        _logger = logger;\r\n        _messageProcessorFactory = messageProcessorFactory;\r\n\r\n        _imapClient = new ImapClient\r\n        {\r\n            Timeout = (int)TimeSpan.FromMinutes(1).TotalMilliseconds\r\n        };\r\n\r\n        _fetchRequest = new FetchRequest(MessageSummaryItems.Full | MessageSummaryItems.BodyStructure | MessageSummaryItems.UniqueId);\r\n        _cancel = new CancellationTokenSource();\r\n\r\n        _trackingUids = new List<UniqueId>();\r\n    }\r\n\r\n    public async Task LoginAsync()\r\n    {\r\n        try\r\n        {\r\n            await ReconnectAsync();\r\n        }\r\n        catch (SocketException ex)\r\n        {\r\n            throw new EmailClientConnectionException($\"Failed to connect to {EmailClientInformation.ImapIp}:{EmailClientInformation.ImapPort}.\", ex);\r\n        }\r\n        catch (AuthenticationException ex)\r\n        {\r\n            throw new EmailClientAuthenticationException($\"Failed to authenticate to {EmailClientInformation.ImapIp}:{EmailClientInformation.ImapPort} \" +\r\n                $\"with [Login: {EmailClientInformation.Login} and Password: {EmailClientInformation.Password}]!\", ex);\r\n        }\r\n    }\r\n\r\n    public async Task RunAsync()\r\n    {\r\n        try\r\n        {\r\n            await ReconnectAsync();\r\n        }\r\n        catch (OperationCanceledException)\r\n        {\r\n            await _imapClient.DisconnectAsync(true);\r\n            return;\r\n        }\r\n\r\n        await FetchAndHandleMessageSummariesAsync(processMessages: false);\r\n\r\n        IMailFolder inbox = _imapClient.Inbox;\r\n\r\n        inbox.CountChanged += OnCountChanged;\r\n        inbox.MessageExpunged += OnMessageExpunged;\r\n\r\n        await IdleAsync();\r\n\r\n        inbox.CountChanged -= OnCountChanged;\r\n        inbox.MessageExpunged -= OnMessageExpunged;\r\n\r\n        await _imapClient.DisconnectAsync(true);\r\n    }\r\n\r\n    public void Stop()\r\n    {\r\n        _cancel.Cancel();\r\n    }\r\n\r\n    private async Task ReconnectAsync()\r\n    {\r\n        if (!_imapClient.IsConnected)\r\n        {\r\n            await _imapClient.ConnectAsync(EmailClientInformation.ImapIp, EmailClientInformation.ImapPort, cancellationToken: _cancel.Token);\r\n        }\r\n\r\n        if (!_imapClient.IsAuthenticated)\r\n        {\r\n            await _imapClient.AuthenticateAsync(EmailClientInformation.Login, EmailClientInformation.Password, _cancel.Token);\r\n\r\n            await _imapClient.Inbox.OpenAsync(FolderAccess.ReadOnly, _cancel.Token);\r\n        }\r\n    }\r\n\r\n    private async Task FetchAndHandleMessageSummariesAsync(bool processMessages)\r\n    {\r\n        IList<IMessageSummary> messageSummaries = await FetchMessageSummariesAsync();\r\n\r\n        await HandleFetchedMessagesAsync(messageSummaries, processMessages);\r\n    }\r\n\r\n    private async Task<IList<IMessageSummary>> FetchMessageSummariesAsync()\r\n    {\r\n        do\r\n        {\r\n            try\r\n            {\r\n                return await _imapClient.Inbox.FetchAsync(_trackingUids.Count, -1, _fetchRequest, _cancel.Token);\r\n            }\r\n            catch (ImapProtocolException)\r\n            {\r\n                await ReconnectAsync();\r\n            }\r\n            catch (IOException)\r\n            {\r\n                await ReconnectAsync();\r\n            }\r\n        } while (true);\r\n    }\r\n\r\n    private async Task HandleFetchedMessagesAsync(IList<IMessageSummary> messageSummaries,\r\n        bool processMessages)\r\n    {\r\n        foreach (IMessageSummary message in messageSummaries)\r\n        {\r\n            if (processMessages)\r\n            {\r\n                try\r\n                {\r\n                    using IMessageProcessor messageProcessor = _messageProcessorFactory.Create();\r\n\r\n                    try\r\n                    {\r\n                        await messageProcessor.ProcessAsync(_imapClient, EmailClientInformation.ClientId, message);\r\n                    }\r\n                    catch (Exception ex)\r\n                    {\r\n                        _logger.LogError(ex,\r\n                            \"Can't process a message! EmailClient with [ClientId: {clientId}].\",\r\n                            EmailClientInformation.ClientId);\r\n                    }\r\n                }\r\n                catch (Exception ex)\r\n                {\r\n                    _logger.LogError(ex,\r\n                        \"An error orruced! EmailClient with [ClientId: {clientId}].\",\r\n                        EmailClientInformation.ClientId);\r\n                }\r\n            }\r\n\r\n            _trackingUids.Add(message.UniqueId);\r\n        }\r\n    }\r\n\r\n    private async Task WaitForNewMessagesAsync()\r\n    {\r\n        do\r\n        {\r\n            try\r\n            {\r\n                if (_imapClient.Capabilities.HasFlag(ImapCapabilities.Idle))\r\n                {\r\n                    _done = new CancellationTokenSource(new TimeSpan(0, 9, 0));\r\n\r\n                    try\r\n                    {\r\n                        await _imapClient.IdleAsync(_done.Token, _cancel.Token);\r\n                    }\r\n                    finally\r\n                    {\r\n                        _done.Dispose();\r\n                        _done = null;\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                    await Task.Delay(new TimeSpan(0, 1, 0), _cancel.Token);\r\n                    await _imapClient.NoOpAsync(_cancel.Token);\r\n                }\r\n                break;\r\n            }\r\n            catch (ImapProtocolException)\r\n            {\r\n                await ReconnectAsync();\r\n            }\r\n            catch (IOException)\r\n            {\r\n                await ReconnectAsync();\r\n            }\r\n        } while (true);\r\n    }\r\n\r\n    private async Task IdleAsync()\r\n    {\r\n        do\r\n        {\r\n            try\r\n            {\r\n                await WaitForNewMessagesAsync();\r\n\r\n                if (_newMessagesArrived)\r\n                {\r\n                    await FetchAndHandleMessageSummariesAsync(processMessages: true);\r\n\r\n                    _newMessagesArrived = false;\r\n                }\r\n            }\r\n            catch (OperationCanceledException)\r\n            {\r\n                break;\r\n            }\r\n        } while (!_cancel.IsCancellationRequested);\r\n    }\r\n\r\n    private void OnCountChanged(object? sender, EventArgs e)\r\n    {\r\n        var folder = (ImapFolder)sender!;\r\n\r\n        if (folder.Count > _trackingUids.Count)\r\n        {\r\n            _newMessagesArrived = true;\r\n            _done?.Cancel();\r\n        }\r\n    }\r\n\r\n    private void OnMessageExpunged(object? sender, MessageEventArgs e)\r\n    {\r\n        if (e.Index < _trackingUids.Count)\r\n        {\r\n            _trackingUids.RemoveAt(e.Index);\r\n        }\r\n    }\r\n}\r\n```",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1481/comments",
    "author": "q00Dree",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2022-12-06T17:59:51Z",
        "body": "What you need to do is start logging events so you can try to figure out what is going on. I can't just look at code and know the answer."
      }
    ]
  },
  {
    "number": 1479,
    "title": "You are trying to install this package into a project that targets '.NETFramework,Version=v4.5', but the package does not contain any assembly references or content files that are compatible with that framework",
    "created_at": "2022-12-02T07:00:26Z",
    "closed_at": "2022-12-02T13:31:16Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1479",
    "body": "Trying to Install using NuGet and keep getting the error...\r\n\r\nInstall-Package : Could not install package 'MailKit 3.4.3'. You are trying to install this package into a project that targets '.NETFramework,Version=v4.5', but the package does not contain any assembly references or content files that are compatible with that framework. For more information, contact the package author.\r\n\r\nI seem to have .NET 4.5 frameworks under my 'References', so I'm not sure what's going on here.\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1479/comments",
    "author": "raeldor",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2022-12-02T13:31:16Z",
        "body": "Your project is targeting .NET v4.5 but MailKit no longer supports .NET v4.5 because it is so old that even Microsoft has stopped supporting it.\r\n\r\nThe minimum version of .NET Framework that Microsoft (and MailKit) support right now is v4.6.2 but I would highly recommend updating to .NET 4.8 or better yet, .NET Core 6.0"
      },
      {
        "user": "raeldor",
        "created_at": "2022-12-02T16:03:11Z",
        "body": "Yikes, I guess that's what happens when I let my app fester for a few years.  Appreciate the prompt reply, thank you!"
      },
      {
        "user": "jstedfast",
        "created_at": "2022-12-02T17:01:16Z",
        "body": "Yea, Microsoft dropped support for .NET v4.5.2 back in April (MailKit stopped supporting it in, I think, May).\r\n\r\nAt this point, I would consider .NET Framework <= 4.8.x to be \"Legacy\" and would recommend avoiding it unless you specifically need to for some reason.\r\n\r\nThe .NET Core 6.0 platform is long-term supported (as opposed to .NET 5.0 which has already been dropped)."
      },
      {
        "user": "raeldor",
        "created_at": "2022-12-02T17:05:58Z",
        "body": "Good info, thank you.  I've updated to VS2022, so I'll look at moving to 6.0 then.  Really appreciate the pointers to get me up to speed, thank you."
      }
    ]
  },
  {
    "number": 1453,
    "title": "Move emails between two mailboxes",
    "created_at": "2022-10-24T19:26:05Z",
    "closed_at": "2022-10-24T19:36:21Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1453",
    "body": "**Describe the solution you'd like**\r\nI would like to be able to copy/move messages from one IMAP mailbox to another IMAP mailbox, while keeping the date/time of the original message (for example to backup or to free up space from mailbox A).\r\n\r\n**Describe alternatives you've considered**\r\nAt the moment I download the message from the INBOX of mailbox A and save it in the INBOX of mailbox B, but the new message has the current date and not that of the original message.",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1453/comments",
    "author": "umbertoB67",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2022-10-24T19:36:21Z",
        "body": "You have a couple of options:\r\n\r\n1. Use ImapFolder.CopyTo/MoveTo().\r\n2. Make use of the INTERNALDATE of the message in the source folder:\r\n\r\n```csharp\r\nvar summaries = sourceFolder.Fetch (0, -1, MessageSummaryItems.UniqueId | MessageSummaryItems.InternalDate | MessageSummaryItems.Flags);\r\nforeach (var summary in summaries) {\r\n    var message = sourceFolder.GetMessage (summary.UniqueId);\r\n\r\n    // Old way of doing things:\r\n    destinationFolder.Append (message, summary.Flags.Value, summary.InternalDate.Value);\r\n\r\n    // New API (lets you maintain the keywords as well):\r\n    var request = new AppendRequest (message, summary.Flags.Value, summary.Keywords, summary.InternalDate.Value);\r\n    destinationFolder.Append (request);\r\n}\r\n```"
      },
      {
        "user": "umbertoB67",
        "created_at": "2022-10-24T20:06:10Z",
        "body": "Thank you for your quick answer.\r\nCould I also use this mode to move messages between two different mailboxes or just between folders of the same mailbox?"
      },
      {
        "user": "jstedfast",
        "created_at": "2022-10-24T20:19:21Z",
        "body": "> between two different mailboxes or just between folders of the same mailbox?\r\n\r\nDo you mean 2 different accounts? If you mean 2 different IMAP accounts, then you'll need to use one of the Append() methods (CopyTo/MoveTo only work within the same account)."
      },
      {
        "user": "umbertoB67",
        "created_at": "2022-10-24T20:25:09Z",
        "body": "Yes, I mean two different IMAP accounts (example: from INBOX of userX@domain.com to INBOX of userY@otherdomain.com), but keeping the same date/time of the message in the source mailbox."
      }
    ]
  },
  {
    "number": 1449,
    "title": "Message flag 'seen' does not persist on Exchange server",
    "created_at": "2022-10-17T21:03:45Z",
    "closed_at": "2022-10-17T21:29:11Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1449",
    "body": "Hi, I was tasked with downloading messages from an old Exchange server 2010 (yes you read correctly).\r\nI am able to set the flag to seen and the server seems to acknowledge the request. However next time around this same message (based on uid) has no flags set.\r\n\r\nCode which opens the folder in question and sets the flag:\r\n```\r\nvar folder = await Client.GetFolderAsync(folderPath, CancellationToken);\r\nawait folder.OpenAsync(FolderAccess.ReadWrite, CancellationToken);\r\ntry\r\n{\r\n\tawait folder.RemoveFlagsAsync(uniqueId, MessageFlags.Seen, true);\r\n}\r\nfinally\r\n{\r\n\tawait folder.CloseAsync();\r\n}\r\n```\r\n\r\nProtocol log acknowledging the update:\r\n```\r\nC: A00000009 SELECT INBOX\r\nS: * 4 EXISTS\r\nS: * 0 RECENT\r\nS: * FLAGS (\\Seen \\Answered \\Flagged \\Deleted \\Draft $MDNSent)\r\nS: * OK [PERMANENTFLAGS (\\Seen \\Answered \\Flagged \\Deleted \\Draft $MDNSent)] Permanent flags\r\nS: * OK [UNSEEN 1] Is the first unseen message\r\nS: * OK [UIDVALIDITY 7937] UIDVALIDITY value\r\nS: * OK [UIDNEXT 67167] The next unique identifier value\r\nS: A00000009 OK [READ-WRITE] SELECT completed.\r\nC: A00000010 UID STORE 67162 -FLAGS.SILENT (\\Seen)\r\nS: A00000010 OK STORE completed.\r\nC: A00000011 LOGOUT\r\nS: * BYE Microsoft Exchange Server 2010 IMAP4 server signing off.\r\nS: A00000011 OK LOGOUT completed.\r\n```\r\n\r\nIs there something I am doing wrong?\r\n\r\nThank you.",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1449/comments",
    "author": "Olby2000",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2022-10-17T21:14:36Z",
        "body": "You're removing the Seen flag, but it sounds like you want to *add* it.\r\n\r\nIf you remove the \\Seen flag, there won't be any flags set on it in the next session (which is what you are seeing, right?)"
      },
      {
        "user": "Olby2000",
        "created_at": "2022-10-17T21:22:19Z",
        "body": "Well, that's embarrassing. That's exactly what I was trying to do lol. I guess I got hung up on the semantics because I thought you need to remove \"something\" rather than add to make it read. Appreciate your help. Sorry to bother the mail guru!"
      },
      {
        "user": "jstedfast",
        "created_at": "2022-10-17T21:29:11Z",
        "body": "No problem :-)"
      }
    ]
  },
  {
    "number": 1447,
    "title": "How to encode mail subject and body using UTF-8 encoding in Mailkit?",
    "created_at": "2022-10-13T09:18:30Z",
    "closed_at": "2022-10-13T14:20:43Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1447",
    "body": "In System.Net.Mail.MailMessage library, SubjectEncoding and BodyEncoding options can be used to set encoding for subject and body of the mail.\r\n_System.Net.Mail.MailMessage psuedo code:_\r\n```\r\nvar mailMessage = new MailMessage(new MailAddress(From), recipient)\r\n{\r\n    SubjectEncoding = Encoding.UTF8,\r\n    BodyEncoding = Encoding.UTF8\r\n};\r\n```\r\nAre there similar options to SubjectEncoding and BodyEncoding available in MimeKit.MimeMessage library to encode subject and body?\r\n_Mimekit psuedo code:_\r\n```\r\nvar message = new MimeMessage();\r\nmessage.Subject = \"Howdie\";\r\nmessage.Body = \"Test\";\r\n```\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1447/comments",
    "author": "web-mm",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2022-10-13T14:20:43Z",
        "body": "Yes\r\n\r\nTo set the \"body encoding\", you would construct the message body like this:\r\n\r\n```csharp\r\nvar body = new TextPart (\"plain\");\r\nbody.SetText (Encoding.UTF8, \"This is the message body.\");\r\n\r\nmessage.Body = body;\r\n```\r\n\r\nNote that by default, for message bodies, UTF-8 is used. So if you want UTF-8, then you can even do this:\r\n\r\n```csharp\r\nmessage.Body = new TextPart (\"plain\") {\r\n    Text = \"This is the message body.\"\r\n};\r\n```\r\n\r\nFor headers, you'll need to bypass MimeMessage.Subject:\r\n\r\n```csharp\r\nmessage.Headers.Replace (\"Subject\", Encoding.UTF8, \"This is my subject.\");\r\n```\r\n\r\nYou can also specify an encoding to use for each MailboxAddress:\r\n\r\n```csharp\r\nmessage.To.Add (new MailboxAddress (Encoding.UTF8, \"Name\", \"recipient@example.com\"));\r\n```"
      },
      {
        "user": "web-mm",
        "created_at": "2022-10-14T06:55:17Z",
        "body": "Thanks for detailed answer. I appreciate it."
      }
    ]
  },
  {
    "number": 1443,
    "title": "Attachment only txt ad html files",
    "created_at": "2022-09-29T14:15:19Z",
    "closed_at": "2022-09-29T14:39:36Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1443",
    "body": "Hello! Have a bug and cant figure it out ... what I am doing wrong. When I send zip docx or pdf file in attachments, the file that I recivied is corrupt. Cannot open, or it give me error that file is corrupt. Even jpg, png files wont open. Only txt files comes without a problem.\r\nMaybe someone know what is the problem ?\r\n\r\n       `public async Task<ResponseData> SendEmail(VictimData victimData, SmtpData senderData, LetterData letter)\r\n        {\r\n            ResponseData response = new ResponseData();\r\n            BodyBuilder bodyBuilder = new BodyBuilder();\r\n            string newAttachment = \"\";\r\n            try\r\n            {\r\n                MimeMessage message = new MimeMessage();\r\n                message.From.Add(new MailboxAddress(senderData.senderName, senderData.senderEmail));\r\n                message.To.Add(new MailboxAddress(\"\", victimData.email));\r\n                \r\n                message.ReplyTo.Add(new MailboxAddress(senderData.senderName, senderData.senderEmail));\r\n                message.Subject = letter.subject;\r\n                if (letter.isHtml)\r\n                {\r\n                    bodyBuilder.HtmlBody = letter.body;\r\n                }\r\n                else\r\n                {\r\n                    bodyBuilder.TextBody = letter.body;\r\n                }\r\n\r\n                foreach (var attachment in letter.attachment)\r\n                {\r\n                    newAttachment = ReadAndReplaceAttachment(attachment.filePath, victimData.email, attachment.fileName);\r\n                    bodyBuilder.Attachments.Add(newAttachment);\r\n                    File.Delete(newAttachment);\r\n                    Console.WriteLine(newAttachment);\r\n                }\r\n                message.Body = bodyBuilder.ToMessageBody();\r\n                await client.SendAsync(message);\r\n                response.status = true;\r\n                response.messages = \"\";\r\n                return response;\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                response.messages = ex.Message;\r\n                response.status = false;\r\n                return response;\r\n            }\r\n        }\r\n        private string ReadAndReplaceAttachment(string filePath, string email, string newFileName)\r\n        {\r\n            Replacer replacer = new Replacer();\r\n            string tempFile = Path.Combine(Helpers.tempPath, replacer.DoReplace(newFileName, email));//Path.GetTempPath() + Guid.NewGuid().ToString() + Path.GetExtension(filePath);\r\n            string contentResult = \"\";\r\n\r\n            using (StreamReader sr = File.OpenText(filePath))\r\n            {\r\n                contentResult = sr.ReadToEnd();\r\n                contentResult = replacer.DoReplace(contentResult, email);\r\n                sr.Close();\r\n            }\r\n\r\n            using (var tw = new StreamWriter(tempFile, true))\r\n            {\r\n                tw.Write(contentResult);\r\n            }\r\n\r\n            return tempFile;\r\n        }`",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1443/comments",
    "author": "bugaoleg",
    "comments": [
      {
        "user": "nikola1234-hash",
        "created_at": "2022-09-29T14:24:31Z",
        "body": "If the file you are attaching is malicious, many factors can occur that you get a corrupted file, for example, Windows Defender quarantines the malicious file or smtp server has some kind of antivirus."
      },
      {
        "user": "bugaoleg",
        "created_at": "2022-09-29T14:26:23Z",
        "body": "> If the file you are attaching is malicious, many factors can occur that you get a corrupted file, for example, Windows Defender quarantines the malicious file or smtp server has some kind of antivirus.\r\n\r\nNo, it is not a virus. A simple pdf with one word writet in it ... There is a problem with all binaries files. Jpg,png,zip,docx,pdf and so on ... With txt file all is ok."
      },
      {
        "user": "jstedfast",
        "created_at": "2022-09-29T14:39:36Z",
        "body": "Your code is opening binary files in text mode (`File.OpenText(filePath)`) which is corrupting your jpegs, pdfs, etc (because they aren't text files)."
      }
    ]
  },
  {
    "number": 1441,
    "title": "Mailkit cannot read autogenerated mails from mailbox",
    "created_at": "2022-09-27T14:05:15Z",
    "closed_at": "2022-09-28T13:00:22Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1441",
    "body": "**Describe the bug**\r\nHi, \r\nI hope I'm not bothering you with my question. I ran into a weird bug. I develop an application that extracts information from the client's mailbox. My problem is that once an autogenerated mail arrives in the mailbox, if the Server crashes, Mailkit will not read the mail, it is empty. But if the email comes from a different email address (I tried from my personal and school email address), it reads the email fine.  \r\n\r\n**Platform (please complete the following information):**\r\n - OS: Windows\r\n - .NET Framework: [.NET 4.0, WPF]\r\n - MailKit Version: 3.3.0\r\n\r\n\r\n\r\n```csharp\r\n using (var client = new ImapClient())\r\n                {\r\n                    using (var cancel = new System.Threading.CancellationTokenSource())\r\n                    {\r\n\r\n                        client.Connect(emailParser.ServerName, emailParser.Port, emailParser.IsSSLuse,\r\n                            cancel.Token);\r\n\r\n                        client.Authenticate(emailParser.Username, emailParser.Password, cancel.Token);\r\n\r\n                        var inbox = client.Inbox;\r\n                        inbox.Open(FolderAccess.ReadOnly, cancel.Token);\r\n\r\n                        for (int i = 0; i < inbox.Count; i++)\r\n                        {\r\n                            var message = inbox.GetMessage(i, cancel.Token); \r\n                            MessageBox.Show(message.TextBody);                                                                                \r\n                            \r\n                                }\r\n\r\n                            }\r\n\r\n                        }\r\n\r\n                        client.Disconnect(true, cancel.Token);\r\n```\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1441/comments",
    "author": "DomV-cloud",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2022-09-27T14:11:27Z",
        "body": "I'll need more information:\r\n\r\n* What is the exception you get?\r\n* Change your code to use `using (var client = new ImapClient (new ProtocolLogger (\"imap.log\")))` and then share the log (feel free to anonymize the data)"
      },
      {
        "user": "DomV-cloud",
        "created_at": "2022-09-28T07:15:21Z",
        "body": "Hi,\r\n\r\nException:NullPointerException\r\n\r\nProtocolLogger:\r\n```\r\nConnected to imaps://imap.seznam.cz:993/\r\nS: * OK Seznam IMAP server ready\r\nC: A00000000 CAPABILITY\r\nS: * CAPABILITY XLIST IMAP4rev1 STARTTLS CHILDREN SORT I18NLEVEL=1 UIDPLUS ID\r\nS: A00000000 OK CAPABILITY completed\r\nC: A00000001 LOGIN ******** ********\r\nS: A00000001 OK LOGIN Authentication succeeded\r\nC: A00000002 CAPABILITY\r\nS: * CAPABILITY XLIST IMAP4rev1 STARTTLS CHILDREN SORT I18NLEVEL=1 UIDPLUS ID\r\nS: A00000002 OK CAPABILITY completed\r\nC: A00000003 LIST \"\" \"\"\r\nS: * LIST (\\Noselect) NIL \"\"\r\nS: A00000003 OK LIST complete\r\nC: A00000004 LIST \"\" \"INBOX\"\r\nS: * LIST (\\HasNoChildren) NIL \"INBOX\"\r\nS: A00000004 OK LIST complete\r\nC: A00000005 XLIST \"\" \"*\"\r\nS: * XLIST (\\HasNoChildren) NIL \"INBOX\"\r\nS: * XLIST (\\HasNoChildren \\Sent) NIL \"sent\"\r\nS: * XLIST (\\HasNoChildren \\Drafts) NIL \"drafts\"\r\nS: * XLIST (\\HasNoChildren) NIL \"newsletters\"\r\nS: * XLIST (\\HasNoChildren \\Archive) NIL \"archive\"\r\nS: * XLIST (\\HasNoChildren \\Spam) NIL \"spam\"\r\nS: * XLIST (\\HasNoChildren \\Trash) NIL \"trash\"\r\nS: A00000005 OK XLIST complete\r\nC: A00000006 EXAMINE INBOX\r\nS: * 1 EXISTS\r\nS: * 0 RECENT\r\nS: * FLAGS (\\Seen \\Answered \\Flagged \\Deleted \\Draft \\Recent)\r\nS: * OK [PERMANENTFLAGS (\\Seen \\Answered \\Flagged \\Deleted \\Draft)] Can bee changed permanently\r\nS: * OK [UIDVALIDITY 1] UIDs validity number\r\nS: * OK [UIDNEXT 1174] Predicted next UID\r\nS: * OK [UNSEEN 1] The first unseen message MSN.\r\nS: A00000006 OK [READ-ONLY] EXAMINE completed\r\nTotal messages: 1\r\nRecent messages: 0\r\nC: A00000007 FETCH 1 (BODY.PEEK[])\r\nS: * 1 FETCH (BODY[] {1515}\r\nS: Received: from a43-89.smtp-out.amazonses.com (a43-89.smtp-out.amazonses.com [54.240.43.89])\r\nS:      by email-smtpd9.ko.seznam.cz (Seznam SMTPD 1.3.137) with ESMTP;\r\nS:      Wed, 28 Sep 2022 07:13:26 +0200 (CEST)\r\nS: DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/simple;\r\nS:      s=6gbrjpgwjskckoa6a5zn6fwqkn67xbtw; d=amazonses.com; t=1664342004;\r\nS:      h=MIME-Version:From:To:Date:Subject:Content-Type:Content-Transfer-Encoding:Message-ID:Feedback-ID;\r\nS:      bh=Tf3522dYaPsTT9jF2cD86TCuEtQz5qF452+xNRMN+NQ=;\r\nS:      b=I5Ct+FxJVSh8Ycnnc1iZoMjyRRmvD2v/qPcazMWhdixHlZX+fF/mboARjx3fS0SU\r\nS:      2j2N20NQOYC5FRjV5mbRXgHZiKCU78szIcmkL7LBVNM0Zpj0OwK3+JCTBWn46oynDMZ\r\nS:      RO7cDdJWOrdjBWxjC47y7V6orSaH8X5DpbrHJccM=\r\nS: MIME-Version: 1.0\r\nS: From: \"Smart One s.r.o. Monitoring\" <support@smart1.hostedrmm.com>\r\nS: To: reportssmo@seznam.cz\r\nS: X-Priority: 1\r\nS: Priority: urgent\r\nS: Importance: high\r\nS: Date: Wed, 28 Sep 2022 05:13:24 +0000\r\nS: Subject: Dostupnost serveru!\r\nS: Content-Type: text/html; charset=utf-8\r\nS: Content-Transfer-Encoding: base64\r\nS: Message-ID: <0100018382839396-333e4874-3fe3-4ef8-a494-3337fc7cd7ed-000000@email.amazonses.com>\r\nS: Feedback-ID: 1.us-east-1.ryKZb8SVjogJP0qpNnSWHxlkLJ4dmTjOGGDhWsI1zhM=:AmazonSES\r\nS: X-SES-Outgoing: 2022.09.28-54.240.43.89\r\nS:\r\nS: U1JWLVRFU1QtU21hcnQgT25lIFNVQ0NFU1Mgb24gU21hcnQgT25lIHMuci5vLlxTUlYt\r\nS: VEVTVCBhdCBNYWluIGZvciAgcmVzdWx0IFBJTkcgT0sgMTkyLjE2OC4xLjggLSBQYWNr\r\nS: ZXQgbG9zcyA9IDAlLCBSVEEgPSAwbXMgLi4gU2VydmVyIGplIE9ubGluZTxCUj48QlI+\r\nS: UmVwbHkgdG8gdGhpcyBlbWFpbCB0byBjcmVhdGUgYSBuZXcgdGlja2V0LjxCUj4gQ2xp\r\nS: ZW50SUQ6MSBDb21wdXRlcklEOjg5MQ==\r\nS:\r\nS: )\r\nS: A00000007 OK FETCH completed\r\n\r\nC: A00000008 LOGOUT\r\nS: * BYE Thanks for your visit, have a nice day.\r\nS: A00000008 OK LOGOUT Completed.\r\n```"
      },
      {
        "user": "jstedfast",
        "created_at": "2022-09-28T13:00:22Z",
        "body": "Oh, the problem is that the message doesn't have a `TextBody`, it only has an `HtmlBody`.\r\n\r\nThis line is the problem:\r\n```csharp\r\nMessageBox.Show(message.TextBody);\r\n```\r\n\r\nYou should change that to:\r\n\r\n```csharp\r\nMessageBox.Show(message.TextBody ?? message.HtmlBody ?? string.Empty);\r\n```"
      },
      {
        "user": "DomV-cloud",
        "created_at": "2022-09-28T13:16:52Z",
        "body": "Hi,\r\nThank you so much, it works."
      }
    ]
  },
  {
    "number": 1435,
    "title": "MimeMessage.Envelope would be helpful",
    "created_at": "2022-09-15T16:01:44Z",
    "closed_at": "2022-09-15T18:00:13Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1435",
    "body": "I'm using `MimeMessage.Load` to create a mime message from a file.\r\n\r\nMaybe you can implement the `MimeMessage.Envelope` like you have implemented `MessageSummary.Envelope`?",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1435/comments",
    "author": "ghost",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2022-09-15T18:00:13Z",
        "body": "MimeMessage already has all of the pre-parsed header values as properties so I'm not sure what the point would be?"
      },
      {
        "user": "ghost",
        "created_at": "2022-09-15T18:05:19Z",
        "body": "Yes, I can access to `MimeMessage.Headers[HeaderId.MessageId]`. But this gives me the message id enclosed in &lt; and &gt;. So I have to remove it by myself.\r\n\r\nAdditionally, I have to call `DateUtils.TryParse` for `HeaderId.Date`.\r\n\r\nFor the header lists like `HeaderId.To` and `HeaderId.Bcc` I have more work too.\r\n\r\nI can live with the current solution. But the `Envelope` is the better way. ;-)"
      },
      {
        "user": "jstedfast",
        "created_at": "2022-09-15T19:13:48Z",
        "body": "I recommend taking a look at `MimeMessage.MessageId`, `MimeMessage.Date`, `MimeMessage.To`, etc :-)\r\n\r\nBasically, Envelope's API mimics the subset of the `MimeMessage` API dealing with the commonly accessed headers."
      },
      {
        "user": "ghost",
        "created_at": "2022-09-16T02:17:54Z",
        "body": "GREAT! Thank you.\n"
      }
    ]
  },
  {
    "number": 1433,
    "title": "How long is an Index valid in a ImapClient connection?",
    "created_at": "2022-09-14T19:54:40Z",
    "closed_at": "2022-09-14T21:16:09Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1433",
    "body": "I'm trying to use IDLE notifications with the following code:\r\n\r\n```\r\nimapClient.Idle(new CancellationTokenSource(new TimeSpan(0, 29, 0)).Token, _idleCancelSource.Token);\r\n\r\nmailFolder.MessageFlagsChanged -= FolderMessageFlags_ChangedEvent;\r\n\r\n```\r\n\r\nI receive notifications, if the \"seen\" (\"read\") flag has been changed. But I get only the `Index`, but not the `UniqueId`.\r\n\r\nIs this a further bug of my mail server?\r\n\r\nHow long can I use the `Index`, until it's invalid? I ask, since I'm developing an app with multiple simultaneous `ImapClient` connections. So is `Index` valid between the different connection?",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1433/comments",
    "author": "ghost",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2022-09-14T21:16:09Z",
        "body": "> I receive notifications, if the \"seen\" (\"read\") flag has been changed. But I get only the Index, but not the UniqueId.\r\n> Is this a further bug of my mail server?\r\n\r\nThat's expected, so not a bug in your IMAP server.\r\n\r\nThe index is valid until any client connects to the IMAP server and deletes a message with an index lower than (or equal to) the index you have.\r\n\r\nIn other words, if you are notified that message 100's flags just changed, then that index will point to the correct message until your client or any other client deletes/expunges a message with an index <= 100.\r\n\r\n> So is Index valid between the different connection?\r\n\r\nDepends on what happens between sessions. The messages in an IMAP folder will never be re-ordered by the server, so if your client is the *only* client that ever connects to that server/account, then yes, the index will be the same between sessions. But if there are any other clients, especially ones that you do not control, you best not assume you can rely on that index for very long. The very next IMAP command sent to the server by any client that is connected could cause that index to point to a different message.\r\n\r\nThe way you are expected to deal with this situation is to have a locally cached mapping of indexes to messages and just update the flags in your local cache based on the index at that exact moment in time. It sucks, but it is what it is.\r\n\r\nMy recommendation is that when you receive a MessageFlagsChanged event, your event handler should immediately update your local cache with those flag changes.\r\n\r\nWhen you get a MessageFlagsChanged event, the event args will always contain the `Index` and the new `Flags` & `Keywords`. Those are the only properties that you can depend on being set but they are also all you need (technically).\r\n\r\nI should note that if you subscribe to the MessageExpunged event, you'll get notified when a message is removed from the folder (as long as you remain connected to the IMAP server and that folder is the one selected) which will tell you the index of any message that gets removed.\r\n\r\nSo for example, if we go back to that message index 100 example, if you next get a MessageExpunged event with an index of 50, then it means you'll need to use index 99 instead of index 100 to refer to the message that received the MessageFlagsChanged event.\r\n\r\nHope that helps clarify things."
      },
      {
        "user": "ghost",
        "created_at": "2022-09-15T09:35:47Z",
        "body": "So, if I receive a `MailFolder.MessageFlagsChanged` event without a `UniueId`, I have to stop the `ImapClient.Idle` to use that client to use `uniqueIds = MailFolder.Search(SearchQuery.All)` and  `MailFolder.Fetch(uniqueIds, MessageSummaryItems.Headers | MessageSummaryItems.Flags)` to identify the correct message with the `UniqueId`.\r\n\r\nAfter this, I have to restart the `ImapClient.Idle`.\r\n\r\nAnd if in the meantime a flag will be changed, I don't have a chance to get that information.\r\n\r\nRight?\r\n\r\nThe live is not easy…"
      },
      {
        "user": "jstedfast",
        "created_at": "2022-09-15T11:18:17Z",
        "body": "Why would you need to do all of that?\r\n\r\nYou should already have a list of messages and the message who's should already be in that list. There should be no reason to have to go out and query for the message and its headers/flags/etc.\r\n\r\nConsider this:\r\n\r\n* var messages = folder.Fetch (0, -1, MessageSummaryItems.UniqueId | MessageSummaryItems.Envelope | MessageSummaryItems.Flags)\r\n* client.Idle()\r\n* MessageFlagsChanged event fires\r\n* messages[index].Flags = args.Flags; messages[index].Keywords = args.Keywords\r\n\r\nI think that Fetch() actually returns `IList<IMessageSummary>` and IMessageSummary I think only has getters for all of the fields, but you can either cast to MessageSummary to allow you to set fields or you can copy the data into your own data structure to keep in your cache (e.g. a sqlite database), but the idea is the same.\r\n\r\nAlso FWIW, I would not recommend using MessageSummaryItems.Headers as that is a lot more expensive than MessageSummaryItems.Envelope and Envelope usually contains all of the (pre-parsed!) info that you care about. The only header that I feel it is missing is the `References` header (hence why I have a `MessageSummaryItems.References` enum)."
      },
      {
        "user": "ghost",
        "created_at": "2022-09-15T12:20:10Z",
        "body": "Indeed, I have a list of the messages. But the `Index` inside `MessageFlagsChanged event` maybe is different from the index of my list, since the list was fetched by a different `ImapClient` connection.\r\n\r\nSo I need a `UniqueId` (or maybe a `MessageId`), to identify the correct message inside my list.\r\n\r\nThank you for your hint about `Envelope`!"
      },
      {
        "user": "ghost",
        "created_at": "2022-09-15T12:47:42Z",
        "body": "> The only header that I feel it is missing is the References header\r\n\r\nWhat about `Priority`?"
      },
      {
        "user": "ghost",
        "created_at": "2022-09-15T12:52:48Z",
        "body": "`IMessageSummary.Envelope` is `null` on my end.\r\n\r\nI have the following code:\r\n\r\n```\r\nIList<UniqueId> uniqueIds = mailFolder.Search(SearchQuery.All);\r\nIList<IMessageSummary> messageSummaries = mailFolder.Fetch(uniqueIds, MessageSummaryItems.Headers | MessageSummaryItems.Flags);\r\nforeach (MessageSummary messageSummary in messageSummaries)\r\n    messageSummary.Envelope....\r\n```\r\n\r\n`messageSummary.Headers[HeaderId.From]` shows me the the correct value."
      },
      {
        "user": "jstedfast",
        "created_at": "2022-09-15T13:09:58Z",
        "body": "The MessageSummary.Envelope property only gets populated if you specify MessageSummaryItems.Envelope.\r\n\r\n> What about Priority?\r\n\r\nYea, I guess I can see that as being a valuable header to have. When I originally added the `MessageSummaryItems.References` enum, I did not have an `IFetchRequest` and so there was no way to specify what headers you wanted (hence also why there is a `MessageSummaryItems.Headers`).\r\n\r\nA better way to specify which headers you want would be to do something like this:\r\n\r\n```csharp\r\n// Fetch *ALL* headers (instead of Envelope, maybe because we don't trust the IMAP server's parsing and we want to do our own):\r\nvar fetchRequest = new FetchRequest (MessageSummaryItems.UniqueId | MessageSummaryItems.Flags) {\r\n    Headers = HeaderSet.All\r\n};\r\n```\r\n\r\n```csharp\r\n// Fetch Envelope and References:\r\nvar fetchRequest = new FetchRequest (MessageSummaryItems.UniqueId | MessageSummaryItems.Envelope | MessageSummaryItems.Flags) {\r\n    Headers = HeaderSet.References\r\n};\r\n```\r\n\r\n```csharp\r\n// Fetch Envelope, References, Importance, and *Priority:\r\nvar fetchRequest = new FetchRequest (MessageSummaryItems.UniqueId | MessageSummaryItems.Envelope | MessageSummaryItems.Flags) {\r\n    Headers = new HeaderSet (new HeaderId[] {\r\n        HeaderId.References,\r\n        HeaderId.Importance,\r\n        HeaderId.Priority,\r\n        HeaderId.XPriority,\r\n        HeaderId.XMSMailPriority\r\n    })\r\n};\r\n```\r\n\r\nThe added bonus of the IFetchRequest is that you can also fetch the inverse of the headers you specify (e.g. `FETCH BODY[HEADERS.NOT (<list>)]`):\r\n\r\n```csharp\r\n// Fetch all of the headers except the Received headers\r\nvar fetchRequest = new FetchRequest (MessageSummaryItems.UniqueId | MessageSummaryItems.Envelope | MessageSummaryItems.Flags) {\r\n    Headers = new HeaderSet (new HeaderId[] {\r\n        HeaderId.Received\r\n    }) {\r\n        Exclude = true\r\n    }\r\n};\r\n```"
      },
      {
        "user": "ghost",
        "created_at": "2022-09-15T13:41:36Z",
        "body": "Now, I can terminate the `ImapClient.Idle`.\r\n\r\nBut after this, it's disconnected. Why?"
      },
      {
        "user": "ghost",
        "created_at": "2022-09-15T13:50:01Z",
        "body": "Since you close the connection, there is no save way to get the `UniqueId` from the `MailFolder.MessageFlagsChanged` event.\r\n\r\n> A better way to specify which headers you want would be to do something like this:\r\n\r\nOk, with this, I can reduce the network traffic."
      },
      {
        "user": "ghost",
        "created_at": "2022-09-15T13:52:17Z",
        "body": "Back to the `Index`: If I use multiple `MailFolders`, is the `Index` only valid for one folder, or is it valid over all folders?"
      },
      {
        "user": "jstedfast",
        "created_at": "2022-09-15T14:04:14Z",
        "body": "The index is only valid for the folder it came from (same with UID).\r\n\r\n> Now, I can terminate the ImapClient.Idle.\r\n> But after this, it's disconnected. Why?\r\n\r\nThat's the only way to cancel a request :-("
      },
      {
        "user": "ghost",
        "created_at": "2022-09-15T14:09:17Z",
        "body": "So, to be sure of having the correct `Index`, I have to stop the `ImapClient.Idle` after receiving a `MailFolder.CountChanged` and get the updated List of `Index` <-> `UniqueId`. After that, I can restart the `ImapClient.Idle`."
      },
      {
        "user": "jstedfast",
        "created_at": "2022-09-15T14:13:06Z",
        "body": "That sounds correct, yes."
      },
      {
        "user": "ghost",
        "created_at": "2022-09-15T14:26:32Z",
        "body": "But it's easier, to update all messages, by using only `MessageSummaryItems.UniqueId | MessageSummaryItems.Flags` for the folder of the `MailFolder.MessageFlagsChanged` event.\r\n\r\nWith this, I don't need to get the `UniqueId` from the `Index`.\r\n\r\nBut sometimes, the `MailFolder.MessageFlagsChanged` event reports the `UniqueId` too. Right?"
      },
      {
        "user": "jstedfast",
        "created_at": "2022-09-15T14:29:40Z",
        "body": "Rarely (as in 99% of servers won't), but it's possible."
      },
      {
        "user": "ghost",
        "created_at": "2022-09-15T14:30:47Z",
        "body": "Thanks a lot for you knowledge!"
      }
    ]
  },
  {
    "number": 1432,
    "title": "Does mark MailKit mark received messages automatically as \"seen\" (read)?",
    "created_at": "2022-09-14T13:07:42Z",
    "closed_at": "2022-09-14T14:05:09Z",
    "labels": [
      "question",
      "server-bug"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1432",
    "body": "I'm receiving messages with Imap and this works so far. But after I'm receiving it with `ImapClient.Inbox.Fetch(uniqueIds, MessageSummaryItems.Headers | MessageSummaryItems.Size | MessageSummaryItems.Flags | MessageSummaryItems.BodyStructure);`, they are marked as \"seen\" / \"read\" on the server.\r\n\r\nDoes MailKit sends this flag?\r\n\r\nIs there a way for me, not to send this flag?",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1432/comments",
    "author": "ghost",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2022-09-14T14:04:59Z",
        "body": "MailKit does not automatically mark any messages as read/seen on the server. If the server is doing that, then the server is buggy.\r\n\r\nThe IMAP protocol *does* automatically mark the message as `\\\\Seen` if-and-only-if the client sends a `FETCH BODY[]` request and the way around that is to send `FETCH BODY.PEEK[]` (which is what MailKit does).\r\n\r\nThat said, MailKit's ImapFolder.Fetch() methods never send `FETCH BODY[]` -or- `FETCH BODY.PEEK[]`. Only the `GetMessage(int index)` and `GetMessage(UniqueId uid)` methods send that request (and they only ever send the `BODY.PEEK[]` variant)."
      },
      {
        "user": "ghost",
        "created_at": "2022-09-14T15:32:17Z",
        "body": "Yes, I'm using `ImapFolder.Fetch(uniqueIds, messageSummaryItem)` to receive message.\r\n\r\nInside the protocol, I found this lines:\r\n\r\n```\r\nC: A00000010 UID FETCH 17 (BODY.PEEK[HEADER] BODY.PEEK[TEXT])\r\nS: * 1 FETCH (UID 17 BODY[HEADER] {3675}\r\n```\r\n\r\nDo you believe, this is a server bug?"
      },
      {
        "user": "jstedfast",
        "created_at": "2022-09-14T15:56:27Z",
        "body": "Yes, this is a server bug."
      },
      {
        "user": "jstedfast",
        "created_at": "2022-09-14T15:57:21Z",
        "body": "What server are you using? Often the name of the server software (and version) is printed on the very first line of the log (after the \"Connected to ...\" line)"
      },
      {
        "user": "ghost",
        "created_at": "2022-09-14T16:03:21Z",
        "body": "I'm sorry, but there is no server information."
      },
      {
        "user": "jstedfast",
        "created_at": "2022-09-14T16:03:40Z",
        "body": "Ok, so based on one of your other bug reports, looks like you are connecting to a Perdition IMAP proxy which is probably the source of these bugs."
      },
      {
        "user": "ghost",
        "created_at": "2022-09-14T16:06:58Z",
        "body": "If you believe, there is no bug in MailKit, we should not spend more time about this server."
      },
      {
        "user": "ghost",
        "created_at": "2022-09-14T16:08:11Z",
        "body": "... by the way: The provider of this server don't like my bug reports like you. ;-)"
      }
    ]
  },
  {
    "number": 1431,
    "title": "MailFolder.Search(SearchQuery.All) does not show new mails",
    "created_at": "2022-09-14T13:04:00Z",
    "closed_at": "2022-09-14T15:12:20Z",
    "labels": [
      "question",
      "server-bug"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1431",
    "body": "I'm trying to use IDLE.\r\n\r\nFirst, I read the available message with `MailFolder.Search(SearchQuery.All)`. After this, I receive a new message.\r\n\r\nIf I'm right, the only way to be informed about a new mail is using `MailFolder.CountChanged`. Right?\r\n\r\nI can get these events, but if I run `MailFolder.Search(SearchQuery.All)` after this, I do not get the new mail.\r\n\r\nWhat is my mistake?",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1431/comments",
    "author": "ghost",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2022-09-14T13:59:13Z",
        "body": "It sounds like a bug in the IMAP server.\r\n\r\nBut let me make sure that I am understanding the situation correctly:\r\n\r\nYou do:\r\n\r\n```csharp\r\nvar matches = folder.Search (SearchQuery.All);\r\n```\r\n\r\nThis is returning all of the current messages for you correctly so far.\r\n\r\nAfterward you call `ImapClient.Idle()` and after some time received a CountChanged event signifying a new message has arrived?\r\n\r\nAnd then you do another `folder.Search (SearchQuery.All);` and it returns the exact same results as before?"
      },
      {
        "user": "jstedfast",
        "created_at": "2022-09-14T14:10:19Z",
        "body": "FWIW, you can get an exact log of the IMAP commands being sent by MailKit and their responses by creating the ImapClient like this:\r\n\r\n```csharp\r\nvar client = new ImapClient (new ProtocolLogger (\"imap.log\"));\r\n```\r\n\r\nI think you'll find that very helpful in diagnosing issues like this."
      },
      {
        "user": "ghost",
        "created_at": "2022-09-14T15:06:21Z",
        "body": "Yes, you understood me well.\r\n\r\nI deleted all mails from that mailbox and started my app new with a IDLE, running in separate thread.\r\n\r\nThen I sent a mail to that mailbox, my app detected it and started a new search.\r\n\r\nThis is the protocol of it:\r\n\r\n```\r\nConnected to imap://mail.my-server.xyz:143/?starttls=always\r\nS: * OK [CAPABILITY IMAP4 IMAP4rev1 STARTTLS UIDPLUS CHILDREN NAMESPACE THREAD=ORDEREDSUBJECT THREAD=REFERENCES SORT QUOTA IDLE ACL ACL2=UNION] perdition ready on fd00:dead:beef:1234::10 00041cfa\r\nC: A00000000 STARTTLS\r\nS: A00000000 OK Begin TLS negotiation now\r\nC: A00000001 CAPABILITY\r\nS: * CAPABILITY IMAP4 IMAP4rev1 UIDPLUS CHILDREN NAMESPACE THREAD=ORDEREDSUBJECT THREAD=REFERENCES SORT QUOTA IDLE ACL ACL2=UNION\r\nS: A00000001 OK CAPABILITY\r\nC: A00000002 LOGIN ******** ********\r\nS: * CAPABILITY IMAP4rev1 SASL-IR LOGIN-REFERRALS ID ENABLE IDLE SORT SORT=DISPLAY THREAD=REFERENCES THREAD=REFS THREAD=ORDEREDSUBJECT MULTIAPPEND URL-PARTIAL CATENATE UNSELECT CHILDREN NAMESPACE UIDPLUS LIST-EXTENDED I18NLEVEL=1 CONDSTORE QRESYNC ESEARCH ESORT SEARCHRES WITHIN CONTEXT=SEARCH LIST-STATUS BINARY MOVE SNIPPET=FUZZY PREVIEW=FUZZY STATUS=SIZE SAVEDATE LITERAL+ NOTIFY SPECIAL-USE QUOTA\r\nS: A00000002 OK You are so in\r\nC: A00000003 NAMESPACE\r\nS: * NAMESPACE ((\"INBOX.\" \".\")) NIL NIL\r\nS: A00000003 OK Namespace completed (0.001 + 0.000 secs).\r\nC: A00000004 LIST \"\" \"INBOX\" RETURN (SUBSCRIBED CHILDREN)\r\nS: * LIST (\\HasChildren) \".\" INBOX\r\nS: A00000004 OK List completed (0.001 + 0.000 secs).\r\nC: A00000005 LIST (SPECIAL-USE) \"\" \"*\" RETURN (SUBSCRIBED CHILDREN)\r\nS: * LIST (\\Subscribed \\HasNoChildren \\Trash) \".\" INBOX.Trash\r\nS: * LIST (\\Subscribed \\HasNoChildren \\Junk) \".\" INBOX.spambucket\r\nS: * LIST (\\Subscribed \\HasNoChildren \\Sent) \".\" INBOX.Sent\r\nS: * LIST (\\Subscribed \\HasNoChildren \\Drafts) \".\" INBOX.Drafts\r\nS: A00000005 OK List completed (0.001 + 0.000 secs).\r\nC: A00000006 SELECT INBOX (CONDSTORE)\r\nS: * FLAGS (\\Answered \\Flagged \\Deleted \\Seen \\Draft)\r\nS: * OK [PERMANENTFLAGS (\\Answered \\Flagged \\Deleted \\Seen \\Draft \\*)] Flags permitted.\r\nS: * 0 EXISTS\r\nS: * 0 RECENT\r\nS: * OK [UIDVALIDITY 1662400074] UIDs valid\r\nS: * OK [UIDNEXT 16] Predicted next UID\r\nS: * OK [HIGHESTMODSEQ 51] Highest\r\nS: A00000006 OK [READ-WRITE] Select completed (0.001 + 0.000 secs).\r\nC: A00000007 UID SEARCH RETURN (ALL) ALL\r\nS: * ESEARCH (TAG \"A00000007\") UID\r\nS: A00000007 OK Search completed (0.001 + 0.000 secs).\r\nC: A00000008 UID SEARCH RETURN (ALL) ALL\r\nS: * ESEARCH (TAG \"A00000008\") UID\r\nS: A00000008 OK Search completed (0.001 + 0.000 secs).\r\n\r\n```\r\n\r\nIf I understand the protocol right, my app started the second search as well and didn't get the new received message.\r\n\r\nThen, I terminated my app and started it again.\r\n\r\nI received nearly the same protocol as before, but with this line at the end:\r\n\r\n```\r\nS: A00000006 OK [READ-WRITE] Select completed (0.001 + 0.000 secs).\r\nC: A00000007 UID SEARCH RETURN (ALL) ALL\r\nS: * ESEARCH (TAG \"A00000007\") UID ALL 16\r\nS: A00000007 OK Search completed (0.001 + 0.000 secs).\r\nC: A00000008 UID FETCH 16 (FLAGS BODY.PEEK[HEADER])\r\nS: * 1 FETCH (UID 16 FLAGS () BODY[HEADER] {3671}\r\n\r\n```\r\n… followed by my new mail.\r\n\r\nIf I understood the protocol right, the difference is this line:\r\n`ESEARCH (TAG \"A00000007\") UID ALL 16`\r\n\r\n... the **`16`**\r\n\r\nSo, I believe, you are right: It could be a problem on the server. Do you still believe this too?"
      },
      {
        "user": "jstedfast",
        "created_at": "2022-09-14T15:12:20Z",
        "body": "Yes, it's a server problem."
      },
      {
        "user": "ghost",
        "created_at": "2022-09-14T15:33:34Z",
        "body": "... I find bug everywhere in my life. :-)"
      },
      {
        "user": "jstedfast",
        "created_at": "2022-09-14T16:01:39Z",
        "body": "> ... I find bug everywhere in my life. :-)\r\n\r\nApparently. Yikes. Looks like Perdition IMAP is a POP3/IMAP proxy server.\r\n\r\nMy guess is that:\r\n\r\n1. the server redirecting IMAP commands incorrectly and turning BODY.PEEK requests into BODY requests (hence your messages being auto-marked as `\\Seen`)\r\n2. It is caching SEARCH request/results, hence follow-up SEARCH requests not seeing new messages."
      },
      {
        "user": "ghost",
        "created_at": "2022-09-14T16:05:55Z",
        "body": "For me, it's not important to work with this server. It's just the first server, I tested with MailKit.\r\n\r\nSo for the moment, I will no longer take time for this issue"
      }
    ]
  },
  {
    "number": 1425,
    "title": "How to Download Attachements in DataBase Table  instead of local path",
    "created_at": "2022-09-09T07:25:49Z",
    "closed_at": "2022-09-09T13:07:25Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1425",
    "body": "**Describe the solution you'd like**\r\n How to Download Attachements in DataBase Table  instead of local path , \r\n\r\n```csharp\r\nforeach (UniqueId uniqueId in uids)\r\n{\r\n    MimeMessage message = client.Inbox.GetMessage(uniqueId);\r\n\r\n    foreach (MimeEntity attachment in message.Attachments)\r\n    {\r\n        var fileName = attachment.ContentDisposition?.FileName ?? attachment.ContentType.Name;\r\n        // \r\n        using (var stream = System.IO.File.Create(\"C:/Users/admin/Documents/EmailAttachements/MailKitAttachements/ \" + fileName))\r\n        {\r\n            if (attachment is MessagePart)\r\n            {\r\n                var rfc822 = (MessagePart)attachment;\r\n\r\n                rfc822.Message.WriteTo(stream);\r\n            }\r\n            else\r\n            {\r\n                var part = (MimePart)attachment;\r\n\r\n                part.Content.DecodeTo(stream);\r\n            }\r\n        }\r\n    }\r\n}\r\n```",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1425/comments",
    "author": "CrPrvn",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2022-09-09T13:07:25Z",
        "body": "Database tables allow storing `byte[]`, so instead of writing the attachment content to a file stream, you could write the attachment content to a `MemoryStream` and then use the `MemoryStream.ToArray()` method to get the `byte[]`."
      }
    ]
  },
  {
    "number": 1421,
    "title": "Configure Mailkit in middleware according to the requested domain",
    "created_at": "2022-08-31T17:44:18Z",
    "closed_at": "2022-09-01T08:02:42Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1421",
    "body": "I have an existing api in .net 4 which I am porting to .net 6 I need to configure the mailkit according to the requested domain, is that possible?",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1421/comments",
    "author": "anwarjaved",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2022-08-31T18:24:05Z",
        "body": "I don't know what that even means."
      },
      {
        "user": "anwarjaved",
        "created_at": "2022-09-01T08:02:25Z",
        "body": "> I don't know what that even means.\r\n\r\nI mean to delay loading the Configuration, anyway I found out How I can do it"
      }
    ]
  },
  {
    "number": 1419,
    "title": "Disable Ecliptic Curve algorithms in SMTP client?",
    "created_at": "2022-08-24T10:58:22Z",
    "closed_at": "2022-08-24T12:39:10Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1419",
    "body": "Is there any way to disable the negotiation of the EC algorithms in the SMTP client when checking the server certificate?\r\n\r\nReason, my program runs multiplatform and uses Mono when running on Linux/Mac. The Mono distribution has not yet implemented the EC algorithms?\r\n\r\nThanks",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1419/comments",
    "author": "mcrossley",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2022-08-24T12:39:10Z",
        "body": "If you are using >= net5.0, you can use the SslCipherSuitesPolicy property.\r\n\r\nThat property maps to the SslStream's SslCipherSuitesPolicy so you can specify which cipher suites are allowed that way.\r\n"
      },
      {
        "user": "mcrossley",
        "created_at": "2022-08-24T13:03:21Z",
        "body": "Dah! Still stuck on .Net 4.8 for now :("
      }
    ]
  },
  {
    "number": 1417,
    "title": "Failed to convert the object type \"MimeKit.MimePart\" to the type \"MimeKit.TextPart\"",
    "created_at": "2022-08-22T05:14:47Z",
    "closed_at": "2022-08-22T13:37:08Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1417",
    "body": "Failed to cast the object type \"MimeKit.MimePart\" to the type \"MimeKit.TextPart\".\r\n\r\n```\r\n        client.GetFolder(\"FOLDER\").Open(FolderAccess.ReadOnly);\r\n\r\n        var uids = client.GetFolder(\"FOLDER\").Search(SearchQuery.DeliveredAfter(parseDateTime));\r\n\r\n        var messages = client.GetFolder(\"FOLDER\").Fetch(uids, MessageSummaryItems.Envelope | MessageSummaryItems.BodyStructure);\r\n\r\n        if (messages != null && messages.Count > 0)\r\n        {\r\n            foreach (var msg in messages)\r\n            {\r\n                var body = (TextPart)client.GetFolder(\"FOLDER\").GetBodyPart(msg.UniqueId, msg.BodyParts.First());\r\n```\r\n\r\nOn the last line of the code an error is called (topic name). The catch is that the code works! But for some reason an error popped up when parsing mail for a certain day. How can it be related? Maybe you know another way to get the message body out of the folder?",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1417/comments",
    "author": "konstantinLyang",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2022-08-22T13:37:08Z",
        "body": "Well, the first BodyPart is not always the text body and you are casting whatever it finds to a TextPart which is why you are getting a cast exception.\r\n\r\nThere are 2 convenience properties: TextBody and HtmlBody that, when non-null, use heuristics to get the text/plain and text/html body parts."
      },
      {
        "user": "konstantinLyang",
        "created_at": "2022-08-23T02:34:12Z",
        "body": "Thanks!"
      }
    ]
  },
  {
    "number": 1414,
    "title": "IOException smtp.office365.com",
    "created_at": "2022-08-01T13:26:30Z",
    "closed_at": "2022-08-01T15:04:46Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1414",
    "body": "**Describe the bug**\r\nRecently we started having problems using `smtp.office365.com`\r\nWe are randomly getting SocketException/IOException exceptions\r\n\r\n**Platform (please complete the following information):**\r\n - OS: [Windows server 2019]\r\n - .NET Runtime: [4.7.2]\r\n - .NET Framework: [4.7.2]\r\n - MailKit Version: 2.13.0\r\n\r\n**Exception**\r\nSystem.IO.IOException: An existing connection was forcibly closed by the remote host ---> System.Net.Sockets.SocketException: An existing connection was forcibly closed by the remote host\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at MailKit.Net.NetworkStream.<ReadAsync>d__33.MoveNext() in D:\\src\\MailKit\\MailKit\\Net\\NetworkStream.cs:line 173\r\n   --- End of inner exception stack trace ---\r\n   at MailKit.Net.NetworkStream.<ReadAsync>d__33.MoveNext() in D:\\src\\MailKit\\MailKit\\Net\\NetworkStream.cs:line 182\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at MailKit.Net.Smtp.SmtpStream.<ReadAheadAsync>d__39.MoveNext() in D:\\src\\MailKit\\MailKit\\Net\\Smtp\\SmtpStream.cs:line 260\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at MailKit.Net.Smtp.SmtpStream.<ReadResponseAsync>d__46.MoveNext() in D:\\src\\MailKit\\MailKit\\Net\\Smtp\\SmtpStream.cs:line 456\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at MailKit.Net.Smtp.SmtpClient.<ConnectAsync>d__92.MoveNext() in D:\\src\\MailKit\\MailKit\\Net\\Smtp\\SmtpClient.cs:line 1233\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Uniserve.Core.Mailing.Service.MailingService.<SendEmailAsync>d__8.MoveNext()\r\n\r\n**To Reproduce**\r\nNA\r\n\r\n**Expected behavior**\r\nNo \r\n\r\n**Additional context**\r\nI have been able to find sending logs from Office365 which states the connection does not use TLS when the error occurs.\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1414/comments",
    "author": "Ronosho",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2022-08-01T15:04:40Z",
        "body": "> An existing connection was forcibly closed by the remote host\r\n\r\nThe server is closing your connection for some reason."
      }
    ]
  },
  {
    "number": 1410,
    "title": "Performance issue",
    "created_at": "2022-07-26T15:55:11Z",
    "closed_at": "2022-07-26T17:22:47Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1410",
    "body": "When working with older Gmail accounts, and with it, using search after query, it seems like it's working in following way:\r\nInitially it's gathering message id's of entire folder, then filtering out message id's in regard to it's date.\r\n\r\nCorrect me if I am wrong, but downloading for example 100 emails for today for a new account takes way less time then picking out 100 emails from today with inbox having 3000 emails + over all time.\r\n\r\nIf I am not clear feel free to ask me for some more details.",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1410/comments",
    "author": "M1z23R",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2022-07-26T16:01:56Z",
        "body": "That will all depend on the SEARCH implementation of the server.\r\n\r\nOr am I misunderstanding your question?"
      },
      {
        "user": "M1z23R",
        "created_at": "2022-07-26T16:10:00Z",
        "body": "Well, looking at the code now (Sorry I didn't do it before posting), it's working as it should - asking the server to return messages  SINCE xxx, I believed it was due to something else. But now I am even more confused as to why does it seem to work slower on older (bigger folders) accounts."
      },
      {
        "user": "M1z23R",
        "created_at": "2022-07-26T16:51:06Z",
        "body": "How would I search for messages newer then certain unique ID message ?\r\nSince Uids query requires a list of Uids.\r\n\r\nAll and all, I would like to setup search query to return the same as following: \"SEARCH UID 1000:*\""
      },
      {
        "user": "jstedfast",
        "created_at": "2022-07-26T17:01:34Z",
        "body": "you can use a UniqueIdRange to represent a list of UIDs:\r\n\r\n```csharp\r\nvar range = new UniqueIdRange (new UniqueId (1000), UniqueId.MaxValue);\r\n```"
      },
      {
        "user": "M1z23R",
        "created_at": "2022-07-26T17:22:39Z",
        "body": "Works like a charm, thank you very much."
      }
    ]
  },
  {
    "number": 1406,
    "title": "The SMTP server has unexpectedly disconnected. ",
    "created_at": "2022-07-12T11:38:17Z",
    "closed_at": "2022-07-12T13:43:32Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1406",
    "body": "log:\r\nConnected to smtp://smtphm.qiye.com:25/?starttls=when-available\r\nS: 220 bgpproxy-v6-smtp2-entmail-virt53.hz.org ESMTP ready\r\nC: EHLO [172.19.6.24]\r\nS: 250-bgpproxy-v6-smtp2-entmail-virt53.hz.org\r\nS: 250-PIPELINING\r\nS: 250-8BITMIME\r\nS: 250-AUTH=LOGIN PLAIN\r\nS: 250-AUTH PLAIN LOGIN\r\nS: 250 STARTTLS\r\nC: STARTTLS\r\nS: 220 2.0.0 Start TLS\r\nC: EHLO [172.19.6.24]\r\n\r\nstack:\r\nMailKit.Net.Smtp.SmtpProtocolException: The SMTP server has unexpectedly disconnected.    \r\nat MailKit.Net.Smtp.SmtpStream.ReadAhead(CancellationToken cancellationToken)    \r\nat MailKit.Net.Smtp.SmtpStream.ReadResponse(CancellationToken cancellationToken)    \r\nat MailKit.Net.Smtp.SmtpClient.SendCommand(String command, CancellationToken cancellationToken)    \r\nat MailKit.Net.Smtp.SmtpClient.SendEhlo(Boolean ehlo, CancellationToken cancellationToken)    \r\nat MailKit.Net.Smtp.SmtpClient.Ehlo(CancellationToken cancellationToken)    \r\nat MailKit.Net.Smtp.SmtpClient.Connect(String host, Int32 port, SecureSocketOptions options, CancellationToken cancellationToken)    \r\nat MailKit.MailService.Connect(String host, Int32 port, Boolean useSsl, CancellationToken cancellationToken)    \r\n\r\nHow to judge if the server has responded in time when \"ReadAhead\" is displayed? Does the server not respond in time cause my abnormality?",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1406/comments",
    "author": "noSet",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2022-07-12T13:43:32Z",
        "body": "It's not really that abnormal - the more experience you gain writing network software, the more you appreciate how common this is.\r\n\r\nWhat you need to do is to handle this by reconnecting and retrying whatever you were doing when you got the exception."
      }
    ]
  },
  {
    "number": 1405,
    "title": "Does the Move operation returns correctly the new uids?",
    "created_at": "2022-07-11T14:23:17Z",
    "closed_at": "2022-07-11T16:04:33Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1405",
    "body": "**Describe the bug**\r\nIn case of Aol and Yahoo carriers, the `MoveTo` operation result is not correct. I'm not sure if the issue comes from them or from the Mailkit.\r\nI move **two** messages from the inbox to a custom folder, let's say the uids in inbox are 186 and 187. The move returns the destination uids, which are (lets' say): 22 and 23. So, the 186 became 22 in the destination folder and the 187 became 23. But actually this is not corect, the order should be inverted.\r\nWhen I debug the move operation, this is what I see: (check protocol logs as well below)\r\n```\r\nuniqueIdMap\r\n\tDestination\t{22:23}\r\n\tKeys\t{186:187}\r\n\tSource\t{186:187}\r\n\tValues\t{22:23}\r\n\t\tCount\t2\r\n\t\tSortOrder\tAscending\r\nResults View\r\n\t[0]\t{[{186}, {22}]}\r\n\t[1]\t{[{187}, {23}]}\r\n```\r\n\r\nI checked the same scenario with Gmail, and I found the following:\r\n```\r\nuniqueIdMap\r\n\tDestination\t{9,8}\r\n\tKeys\t{1747,1750}\r\n\tSource\t{1747,1750}\r\n\tValues\t{9,8}\r\n\t\tCount\t2\r\n\t\tSortOrder\tDescending\r\nResults View\r\n\t[0]\t{[{1747}, {9}]}\r\n\t[1]\t{[{1750}, {8}]}\r\n```\r\nSo basically the difference is that the sort order is Descending, and this way it sets correctly the new uids.\r\n\r\n**Platform:**\r\n - OS: Windows\r\n - .NET Runtime: Core 3.1\r\n - MailKit Version: 2.11.1\r\n\r\n**Protocol Logs**\r\n```\r\nC: X00000057 UID MOVE 187:186 xcc\r\nS: * OK [COPYUID 1657263256 186:187 22:23]\r\nS: * 159 EXPUNGE\r\nS: * 159 EXPUNGE\r\nS: X00000057 OK UID MOVE completed\r\n```\r\n\r\nBased on your experience, can I do simply to invert the values order in this case? Or what else could you suggest?",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1405/comments",
    "author": "atiyka",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2022-07-11T14:48:40Z",
        "body": "With the protocol logs you pasted, what makes you think they need to be inverted?"
      },
      {
        "user": "jstedfast",
        "created_at": "2022-07-11T14:50:41Z",
        "body": "also, I would *always* use ascending ordered lists of indexes/uids when communicating with IMAP.\r\n\r\nMost servers handle descending uids/indexes correctly, but some do not."
      },
      {
        "user": "jstedfast",
        "created_at": "2022-07-11T16:04:33Z",
        "body": "Based on the protocol log, the mapping is correct."
      },
      {
        "user": "atiyka",
        "created_at": "2022-07-12T07:35:19Z",
        "body": "> With the protocol logs you pasted, what makes you think they need to be inverted?\r\n\r\nI think, because after the move operation, I fetch the messages from that folder, and in the `IMessageSummary` object the uids appears inverted, so for the message which was 186 and became 22 in the new folder based on the result of the move, currently it says that it has uid 23, and the other message has 22. So based on this I concluded that the move returned the result in a wrong order.\r\n\r\nAnyway, thanks for your answer.\r\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2022-07-12T13:45:15Z",
        "body": "```\r\nS: * OK [COPYUID 1657263256 186:187 22:23]\r\n```\r\n\r\nThe above response is what gives MailKit's ImapClient implementation the UID mapping and as you can see, 186 maps to 22 and 187 maps to 23 according to the IMAP server."
      },
      {
        "user": "atiyka",
        "created_at": "2022-07-13T06:04:58Z",
        "body": "Okay, so I think the problem is on their end... Thank you"
      }
    ]
  },
  {
    "number": 1403,
    "title": "\"The ImapClient is currently busy processing a command in another thread.\"",
    "created_at": "2022-07-07T17:53:24Z",
    "closed_at": "2022-07-07T22:01:33Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1403",
    "body": "I'm getting exception above in a rare race condition and am trying to understand what's going on\r\n\r\n- I'm well aware that at any given point in time only one thread should ever access the MailKit API.\r\n- To avoid threads being locked up I'm using a `semaphore.WaitAsync() `concept. I confirmed by detailed tracing that in fact my code never accesses the MailKit API concurrently.\r\n\r\nHowever, I'm getting exception above. On closer inspection of my traces I found that .OnCountChanged was triggered without .NoOpAsync being called. Since I'm accessing `Inbox.Count` in .CountChanged, I'm suspicious that this might cause the concurrent access - because .CountChanged was triggered outside the 'controlled' .NoOpAsync scope.\r\n\r\nIs it expected that .OnCountChanged/.MessageExpunged/.MessageFlagsChanged are triggered although .NoOpAsync was not called?\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1403/comments",
    "author": "DierkDroth",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2022-07-07T22:01:33Z",
        "body": "The exception message is/can be misleading.\r\n\r\nIf you are calling an IMAP API in an event callback, you'll get the same error.\r\n\r\nBecause of the way that the internal ImapCommands work, events are emitted as data arrives on the socket and so you can't invoke another command in the middle of reading the current command's responses or things would break.\r\n\r\nWhat you need to do is queue a command. You can see how I did it (not necessarily the best way, but it works?) in the ImapClientDemo.\r\n\r\n> Is it expected that .OnCountChanged/.MessageExpunged/.MessageFlagsChanged are triggered although .NoOpAsync was not called?\r\n\r\nYes. CountChanged, MessageSummaryFetched, ModSeqChanged, FlagsChanged, etc can all happen at any time in response to any command."
      },
      {
        "user": "DierkDroth",
        "created_at": "2022-07-08T11:00:59Z",
        "body": "Thanks @jstedfast \r\n\r\nI'll recode the relevant parts of my app to see how it goes..."
      }
    ]
  },
  {
    "number": 1399,
    "title": "Can I use the repo to delete all emails in inbox folder?",
    "created_at": "2022-06-27T20:13:50Z",
    "closed_at": "2022-06-27T20:31:29Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1399",
    "body": "Hello:\r\nI can use the repo to retrieve all emails from inbox by IMAP, which seems to be easy.\r\nBut I can't find any simple way to delete all the email in the inbox folder.  For most of the email servers, the inbox is the only folder.\r\nI have quite a number of emails on different email servers.  So I want to write a simple program I can run every week or every month, it just simply deletes all the emails from inbox folder without reading contents or titles of any emails.\r\nCan you show me some simple code to do this without complicated query statement.\r\nThanks,",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1399/comments",
    "author": "zydjohnHotmail",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2022-06-27T20:31:29Z",
        "body": "```csharp\r\nvar uids = new UniqueIdRange (UniqueId.MinValue, UniqueId.MaxValue);\r\ninbox.AddFlags (uids, MessageFlags.Deleted, true);\r\ninbox.Expunge ();\r\n```"
      },
      {
        "user": "zydjohnHotmail",
        "created_at": "2022-06-27T20:42:12Z",
        "body": "Hello:\r\nThanks for your quick reply.  I have tried your code, but I got the following error:\r\nThe folder is not currently open in read-write mode.\r\nIt seems I have to open the inbox folder with read-write mode.\r\nBut how I can do this?\r\nPlease advise,\r\nThanks,"
      },
      {
        "user": "jstedfast",
        "created_at": "2022-06-27T20:43:41Z",
        "body": "```csharp\r\ninbox.Open(FolderAccess.ReadWrite);\r\nvar uids = new UniqueIdRange (UniqueId.MinValue, UniqueId.MaxValue);\r\ninbox.AddFlags (uids, MessageFlags.Deleted, true);\r\ninbox.Expunge ();\r\n```"
      },
      {
        "user": "zydjohnHotmail",
        "created_at": "2022-06-27T20:49:16Z",
        "body": "OK.\r\nThanks, the code works!\r\nThank you very much for your great job!"
      }
    ]
  },
  {
    "number": 1396,
    "title": "Gmail IMAP Client Folder related commands are currently super slow?",
    "created_at": "2022-06-21T05:42:13Z",
    "closed_at": "2022-06-21T11:43:04Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1396",
    "body": "Previously, it was working great and very fast like retrieving the emails in like 3-5 seconds max with authenticating and opening folder/label as well. Recently I noticed after Gmail decided to stop \"Less Secure Apps\" and now I'm using the password app from Gmail after activating my 2-step verification code feature. It's really super slow now to authenticate or opening the folder! It takes like 2-3 minutes now instead of 3-5 seconds. It's really huge difference! I'm not sure from where exactly is the issue, if it's from Gmail or miss coding it. Or from MailKit itself. Idk need help!\r\n\r\n**Platform (please complete the following information):**\r\n - OS: Windows\r\n - .NET Runtime: CoreCLR\r\n - .NET Framework: .NET Core 6.0\r\n - MailKit Version: 3.3.0\r\n - Project: ASP.NET MVC Core\r\n\r\n**Exception**\r\nIt happened one time only which got this exception randomly after some time: \r\n`Error The IMAP server has unexpectedly disconnected.    at MailKit.Net.Imap.ImapStream.ReadAheadAsync(Int32 atleast, CancellationToken cancellationToken)\\r\\n   at MailKit.Net.Imap.ImapStream.ReadTokenAsync(String specials, CancellationToken cancellationToken)\\r\\n   at MailKit.Net.Imap.ImapCommand.StepAsync(Boolean doAsync)\\r\\n   at MailKit.Net.Imap.ImapEngine.IterateAsync(Boolean doAsync)\\r\\n   at MailKit.Net.Imap.ImapEngine.RunAsync(ImapCommand ic, Boolean doAsync)\\r\\n   at MailKit.Net.Imap.ImapFolder.OpenAsync(ImapCommand ic, FolderAccess access, Boolean doAsync, CancellationToken cancellationToken)\\r\\n   at RichardToolsCore.Controllers.EmailGrabberController.<>c.<<EmailGrabber>b__1_0>d.MoveNext()`\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Just try to connect to Gmail Account via IMAP.\r\n2. Open Folder/Label.\r\n3. Search for emails inside.\r\n\r\nEach step from above will take a lot of time. Event *Disconnecting* from IMAPClient took like 5-10 seconds.\r\n\r\n**Expected behavior**\r\nIt should be way faster than that like usually take 3-5 seconds instead of 2-3 minutes.\r\n\r\n**Code Snippets**\r\nIf applicable, add code snippets to help explain your problem.\r\n\r\n```csharp\r\n                                await GlobalVariables.MailClient.ConnectAsync(\"imap.gmail.com\", 993, true);\r\n                                GlobalVariables.MailClient.AuthenticationMechanisms.Remove(\"XOAUTH2\");\r\n                                await GlobalVariables.MailClient.AuthenticateAsync(\"email@gmail.com\", \"pw\");\r\n                                var aFolder = await GlobalVariables.MailClient.GetFolderAsync(\"LabelX1\");\r\n                                var aFolder2 = await GlobalVariables.MailClient.GetFolderAsync(\"LabelX2\");\r\n                                var LastUniqueId = aFolder.UidNext;\r\n                                await aFolder.OpenAsync(FolderAccess.ReadOnly);\r\n                                await aFolder.CheckAsync();\r\n                                 var range = new UniqueIdRange((UniqueId)LastUniqueId, UniqueId.MaxValue);\r\n                                 foreach (var uid in await aFolder.SearchAsync(range, SearchQuery.NotSeen))\r\n                                {\r\n                                       var message = await aFolder.GetMessageAsync(uid);\r\n                                       //Doing some stuff with the message\r\n                                       await aFolder.AddFlagsAsync(uid, MessageFlags.Seen, true);\r\n                                 }\r\n                                 LastUniqueId = aFolder.UidNext;\r\n                                 \r\n                                  await aFolder2.OpenAsync(FolderAccess.ReadOnly);\r\n                                  var LastUniqueId2 = aFolder2.UidNext;\r\n                                await aFolder2.CheckAsync();\r\n                                 var range = new UniqueIdRange((UniqueId)LastUniqueId2, UniqueId.MaxValue);\r\n                                 foreach (var uid in await aFolder2.SearchAsync(range, SearchQuery.NotSeen))\r\n                                {\r\n                                       var message = await aFolder2.GetMessageAsync(uid);\r\n                                       //Doing some stuff with the message\r\n                                       await aFolder2.AddFlagsAsync(uid, MessageFlags.Seen, true);\r\n                                 }\r\n                                 LastUniqueId2 = aFolder2.UidNext;\r\n```\r\nLooping that code every 3 seconds for some period of time.\r\n\r\n**Protocol Logs**\r\n\r\n> Connected to imaps://imap.gmail.com:993/\r\n> S: * OK Gimap ready for requests from 197.49.123.47 x2mb241876667wmk\r\n> C: A00000000 CAPABILITY\r\n> S: * CAPABILITY IMAP4rev1 UNSELECT IDLE NAMESPACE QUOTA ID XLIST CHILDREN X-GM-EXT-1 XYZZY SASL-IR AUTH=XOAUTH2 AUTH=PLAIN AUTH=PLAIN-CLIENTTOKEN AUTH=OAUTHBEARER AUTH=XOAUTH\r\n> S: A00000000 OK Thats all she wrote! x2mb241876667wmk\r\n> C: A00000001 AUTHENTICATE PLAIN ********\r\n> S: * CAPABILITY IMAP4rev1 UNSELECT IDLE NAMESPACE QUOTA ID XLIST CHILDREN X-GM-EXT-1 UIDPLUS COMPRESS=DEFLATE ENABLE MOVE CONDSTORE ESEARCH UTF8=ACCEPT LIST-EXTENDED LIST-STATUS LITERAL- SPECIAL-USE APPENDLIMIT=35651584\r\n> S: A00000001 OK xyz@gmail.com authenticated (Success)\r\n> C: A00000002 NAMESPACE\r\n> S: * NAMESPACE ((\"\" \"/\")) NIL NIL\r\n> S: A00000002 OK Success [THROTTLED]\r\n> C: A00000003 LIST \"\" \"INBOX\" RETURN (SUBSCRIBED CHILDREN)\r\n> S: * LIST (\\HasNoChildren \\Subscribed) \"/\" \"INBOX\"\r\n> S: A00000003 OK Success [THROTTLED]\r\n> C: A00000004 LIST (SPECIAL-USE) \"\" \"*\" RETURN (SUBSCRIBED CHILDREN)\r\n> S: * LIST (\\All \\HasNoChildren \\Subscribed) \"/\" \"[Gmail]/All Mail\"\r\n> S: * LIST (\\Drafts \\HasNoChildren \\Subscribed) \"/\" \"[Gmail]/Drafts\"\r\n> S: * LIST (\\HasNoChildren \\Sent \\Subscribed) \"/\" \"[Gmail]/Sent Mail\"\r\n> S: * LIST (\\HasNoChildren \\Junk \\Subscribed) \"/\" \"[Gmail]/Spam\"\r\n> S: * LIST (\\Flagged \\HasNoChildren \\Subscribed) \"/\" \"[Gmail]/Starred\"\r\n> S: * LIST (\\HasNoChildren \\Subscribed \\Trash) \"/\" \"[Gmail]/Trash\"\r\n> S: A00000004 OK Success [THROTTLED]\r\n> C: A00000005 LIST \"\" \"[Gmail]\" RETURN (SUBSCRIBED CHILDREN)\r\n> S: * LIST (\\HasChildren \\NonExistent \\Subscribed) \"/\" \"[Gmail]\"\r\n> S: A00000005 OK Success [THROTTLED]\r\n> C: A00000006 LIST \"\" LabelX1 RETURN (SUBSCRIBED CHILDREN)\r\n> S: * LIST (\\HasNoChildren \\Subscribed) \"/\" \"LabelX1\"\r\n> S: A00000006 OK Success [THROTTLED]\r\n> C: A00000007 LIST \"\" LabelX2 RETURN (SUBSCRIBED CHILDREN)\r\n> S: * LIST (\\HasNoChildren \\Subscribed) \"/\" \"LabelX2\"\r\n> S: A00000007 OK Success [THROTTLED]\r\n> C: A00000008 EXAMINE LabelX1 (CONDSTORE)\r\n> S: * FLAGS (\\Answered \\Flagged \\Draft \\Deleted \\Seen $NotPhishing $Phishing)\r\n> S: * OK [PERMANENTFLAGS ()] Flags permitted.\r\n> S: * OK [UIDVALIDITY 16] UIDs valid.\r\n> S: * 997 EXISTS\r\n> S: * 0 RECENT\r\n> S: * OK [UIDNEXT 39502] Predicted next UID.\r\n> S: * OK [HIGHESTMODSEQ 30710793]\r\n> S: A00000008 OK [READ-ONLY] LabelX1 selected. (Success) [THROTTLED]\r\n> C: A00000009 EXAMINE LabelX2 (CONDSTORE)\r\n> S: * FLAGS (\\Answered \\Flagged \\Draft \\Deleted \\Seen $NotPhishing $Phishing)\r\n> S: * OK [PERMANENTFLAGS ()] Flags permitted.\r\n> S: * OK [UIDVALIDITY 18] UIDs valid.\r\n> S: * 2 EXISTS\r\n> S: * 0 RECENT\r\n> S: * OK [UIDNEXT 3] Predicted next UID.\r\n> S: * OK [HIGHESTMODSEQ 30710793]\r\n> S: A00000009 OK [READ-ONLY] LabelX2 selected. (Success) [THROTTLED]\r\n> C: A00000010 SELECT LabelX1 (CONDSTORE)\r\n> S: * FLAGS (\\Answered \\Flagged \\Draft \\Deleted \\Seen $NotPhishing $Phishing)\r\n> S: * OK [PERMANENTFLAGS (\\Answered \\Flagged \\Draft \\Deleted \\Seen $NotPhishing $Phishing \\*)] Flags permitted.\r\n> S: * OK [UIDVALIDITY 16] UIDs valid.\r\n> S: * 997 EXISTS\r\n> S: * 0 RECENT\r\n> S: * OK [UIDNEXT 39502] Predicted next UID.\r\n> S: * OK [HIGHESTMODSEQ 30710793]\r\n> S: A00000010 OK [READ-WRITE] LabelX1 selected. (Success) [THROTTLED]\r\n> C: A00000011 CHECK\r\n> S: A00000011 OK Success [THROTTLED]\r\n> C: A00000012 UID SEARCH RETURN (ALL) UID 39502:* UNSEEN\r\n> S: * ESEARCH (TAG \"A00000012\") UID\r\n> S: A00000012 OK SEARCH completed (Success) [THROTTLED]\r\n> C: A00000013 SELECT LabelX2 (CONDSTORE)\r\n> S: * FLAGS (\\Answered \\Flagged \\Draft \\Deleted \\Seen $NotPhishing $Phishing)\r\n> S: * OK [PERMANENTFLAGS (\\Answered \\Flagged \\Draft \\Deleted \\Seen $NotPhishing $Phishing \\*)] Flags permitted.\r\n> S: * OK [UIDVALIDITY 18] UIDs valid.\r\n> S: * 2 EXISTS\r\n> S: * 0 RECENT\r\n> S: * OK [UIDNEXT 3] Predicted next UID.\r\n> S: * OK [HIGHESTMODSEQ 30710793]\r\n> S: A00000013 OK [READ-WRITE] LabelX2 selected. (Success) [THROTTLED]\r\n> C: A00000014 CHECK\r\n> S: A00000014 OK Success [THROTTLED]\r\n> C: A00000015 UID SEARCH RETURN (ALL) UID 3:* UNSEEN\r\n> S: * ESEARCH (TAG \"A00000015\") UID\r\n> S: A00000015 OK SEARCH completed (Success) [THROTTLED]\r\n> C: A00000016 LOGOUT\r\n> S: * BYE LOGOUT Requested\r\n> S: A00000016 OK 73 good day (Success) [THROTTLED]\r\n\r\nThanks for your time.",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1396/comments",
    "author": "GameHackerPM",
    "comments": [
      {
        "user": "ekalchev",
        "created_at": "2022-06-21T06:22:28Z",
        "body": "Nothing to do with Mailkit. GMail is throttling you connections. This happens when you send too many imap commands in 24 hours or receive too much data. You can google it and find more information. Try with another gmail account and it will work fine."
      },
      {
        "user": "GameHackerPM",
        "created_at": "2022-06-21T06:26:55Z",
        "body": "> Nothing to do with Mailkit. GMail is throttling you connections. This happens when you send too many imap commands in 24 hours or receive too much data. You can google it and find more information.\r\n\r\nThanks for the info, I was doing a lot of researches in the wrong path, but I found it after I just submit the issue! I understood now it's because I'm doing a lot of requests and receiving a lot of emails in 24hrs! I also found @jstedfast submitted an IdleClient which is very good in my situation, but I was wondering with one thing about it. If I have more than 1 folder (Not inbox) I need to open each folder before I try to fetch them in IdleClient, which I think may occur some other issues so far. I tried to do get multiple folders but I see it require a namespace, tbh I don't know what is it yet, but will do more searches about it.\r\n\r\nIs there a way to see my current usage of Google APIs so I can monitor how much I use and with which step exactly do I spam it?!"
      },
      {
        "user": "jstedfast",
        "created_at": "2022-06-21T11:43:04Z",
        "body": "I'm not aware of anywhere to monitor usage, unfortunately and I haven't seen an IMAP protocol extension for it (but new ones come out all the time).\r\n\r\nAs you were hinting at in your question, the IDLE command is really only good for 1 folder at a time.\r\n\r\nThe namespaces are client.PersonalNamespaces, SharedNamespaces, and OtherNamespaces.\r\n\r\nIn most cases, all you ever really see is 1 PersonalNamespace and the others are typically empty. This is the way it is with GMail.\r\n\r\n```csharp\r\nvar root = client.GetFolder (client.PersonalNamespaces[0]);\r\nvar subfolders = root.GetSubfolders ();\r\n```"
      }
    ]
  },
  {
    "number": 1385,
    "title": "Question: Checking for client still connected",
    "created_at": "2022-05-30T15:24:59Z",
    "closed_at": "2022-05-30T15:37:43Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1385",
    "body": "Obviously, connecting on the SmtpClient is relatively expensive so I am attempting to cache the clients so they can be reused. However, when a client is next used, I want to check for it being connected since if not, I can simply discard it and create a new one.\r\n\r\nHowever, I tried this by shutting down a remote mail host on a pod and when my code called `client.IsConnected`, it returned true, attempting to carry on and then, of course, crashed on `Send()`.\r\n\r\nIs there a proper way to check that a client is *still* connected, as opposed to it was connected when I first created it? I saw `NoOp()` but that looks like it would need a try catch and might not be the most efficient way to check the life of the client?\r\n\r\nThanks",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1385/comments",
    "author": "lukos",
    "comments": [
      {
        "user": "ekalchev",
        "created_at": "2022-05-30T15:36:40Z",
        "body": "When you have TCP/IP connection, the only reliable way to check if it is still connected is to send something (or receive but that cannot be forced). NoOp() is the proper way to do it."
      },
      {
        "user": "jstedfast",
        "created_at": "2022-05-30T15:37:43Z",
        "body": "The SmtpClient.IsConnected property only tells you what it thinks the state is w/o doing any I/O to verify (in this way, it behaves much like Socket.IsConnected).\r\n\r\nThe only way to know for sure is to send a command and see if that works and the NOOP command is perfect for that purpose. It's basically just a ping to see if the server is still there and to let the server know that the client is still there."
      }
    ]
  },
  {
    "number": 1384,
    "title": "Reading HtmlBody from e-mail and convert it to a string",
    "created_at": "2022-05-30T11:58:02Z",
    "closed_at": "2022-05-30T15:31:10Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1384",
    "body": "This suggestion from Read Inbox Body Fast #875 doesn't work.\r\n\r\nvar client = new ImapClient();\r\nclient.ServerCertificateValidationCallback = (s, c, h, a) => true;\r\nclient.Connect(imap, Convert.ToInt32(port), true);\r\nclient.Authenticate(email, pass);\r\nvar inbox = client.Inbox;\r\ninbox.Open(FolderAccess.ReadWrite);\r\nvar items = inbox.Fetch(0, -1, MessageSummaryItems.UniqueId | MessageSummaryItems.Size | MessageSummaryItems.Flags | MessageSummaryItems.BodyStructure);\r\nforeach (var item in items) {\r\n    var part = item.HtmlBody ?? item.TextBody;\r\n    var body = (TextPart) inbox.GetBodyPart (item.UniqueId, part);\r\n    var text = body.Text;\r\n}\r\n\r\nI try to read the HTMLBody from an e-mail and then convert it to a string because when I use TextBody some e-mails will have no body value (empty or null). I think it is because some e-mails has text/plain and some has text/html. Is there a new solution that solve the issues of reading a body from an e-mail?\r\n\r\n    var part = item.HtmlBody ?? item.TextBody;\r\n    var body = (TextPart) inbox.GetBodyPart (item.UniqueId, part);\r\n    var text = body.Text;\r\n\r\nThis doens't work for me body has the same value as text. It shows the whole html (tags including body). ",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1384/comments",
    "author": "HendrikBerg",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2022-05-30T15:31:10Z",
        "body": "There are messages that exist that don't have a text/plain body nor a text/html body and you'll have to deal with that by checking for a null `part`.\r\n"
      }
    ]
  },
  {
    "number": 1373,
    "title": "Add Google OAuth AuthorizationCodeWebApp example",
    "created_at": "2022-05-09T20:20:51Z",
    "closed_at": "2022-05-10T12:31:41Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1373",
    "body": "Currently GMailOAuth2.md shows how to authenticate ImapClient with Google through AuthorizationCodeInstalledApp, however there is a note for a web app\r\n\r\n`// Note: For a web app, you'll want to use AuthorizationCodeWebApp instead.`\r\n\r\nWhere as it doesn't really show how to do that. In this case you would have to implement the handler for the redirectUri that is returned should the additional authentication be needed. It is a bit harder and I would love there to be an example explaining how to do that",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1373/comments",
    "author": "Indeedornot",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2022-05-10T12:30:12Z",
        "body": "I don't know how to write a web app which means I wouldn't how how to write a handler for a redirectUri either.\n\nSorry, but you'll have to figure this out on your own.\n\nI'm sure the Google docs on their OAuth library must have some samples you could look over.\n\nThat would be your best bet."
      }
    ]
  },
  {
    "number": 1372,
    "title": "How to use SMTP vis proxy? Any demo?",
    "created_at": "2022-05-06T23:25:43Z",
    "closed_at": "2022-05-07T00:18:54Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1372",
    "body": "I want to send mail via socks5 ,the proxy server require username and  password authentication. \r\nbut something goes wrong  .Is there any demo?\r\n\r\n```csharp\r\nusing (var client = new MailKit.Net.Smtp.SmtpClient())\r\n{\r\n    var string proxyip=\"220.10.10.1\";\t\r\n    var int proxyport=4145;\r\n    var string proxyusername=\"\";  // how to \r\n    var string proxypassword=\"\";\r\n    var socksClient = new Socks5Client(proxyip,proxyport);\r\n    client.ProxyClient = socksClient;\r\n\r\n    client.Connect(\"smtp.mysmtp.com\", 25, false);\r\n    client.Authenticate(\"username@mysmtp.com\", \"password\");\r\n\r\n    client.Send(message);\r\n    client.Disconnect(true);\r\n}\r\n```",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1372/comments",
    "author": "aleylinx",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2022-05-07T00:18:47Z",
        "body": "Well, you need to set the proxy username/passwd on the proxy...\r\n\r\n```csharp\r\nusing (var client = new MailKit.Net.Smtp.SmtpClient())\r\n{\r\n    var string proxyip=\"220.10.10.1\";\t\r\n    var int proxyport=4145;\r\n    var string proxyusername=\"\";  // how to \r\n    var string proxypassword=\"\";\r\n    var socksClient = new Socks5Client(proxyip,proxyport, new NetworkCredential(proxyusername, proxypassword));\r\n    client.ProxyClient = socksClient;\r\n\r\n    client.Connect(\"smtp.mysmtp.com\", 25, false);\r\n    client.Authenticate(\"username@mysmtp.com\", \"password\");\r\n\r\n    client.Send(message);\r\n    client.Disconnect(true);\r\n}\r\n```"
      },
      {
        "user": "aleylinx",
        "created_at": "2022-05-07T01:09:25Z",
        "body": "Thank you sir!  it work！"
      }
    ]
  },
  {
    "number": 1371,
    "title": "Are links in MimeMessage.Subject supported at all?",
    "created_at": "2022-04-30T14:01:30Z",
    "closed_at": "2022-05-11T19:04:11Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1371",
    "body": "Hi,\r\n\r\nA customer just came across an valid/interesting request. He's used to have links in the subjects of his mails. This works nicely e.g. in Outlook where he then could click on that link.\r\n\r\nHowever, MimeMessage.Subject is a plain string. Is there some support for links other than me just parsing the .Subject string and visualize the link by whatever UI means?\r\n\r\nThanks in advance",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1371/comments",
    "author": "DierkDroth",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2022-05-11T19:04:11Z",
        "body": "MIME messages don't have a concept of links in any header or even message bodies.\r\n\r\nYou could put a link there if you wanted to, though. It's just not guaranteed to be supported by any (or all) mail clients that receive the message.\r\n\r\nIf you are implementing the receiving client, then you could just parse the subject looking for http or https URLS or something and linkify them."
      },
      {
        "user": "DierkDroth",
        "created_at": "2022-05-12T04:49:00Z",
        "body": "Thanks for your feedback @jstedfast "
      }
    ]
  },
  {
    "number": 1368,
    "title": "How do I avoid sent emails go to spam?",
    "created_at": "2022-04-25T11:30:04Z",
    "closed_at": "2022-04-25T13:13:49Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1368",
    "body": "**Describe the bug**\r\nUse an existing smtp server to send email.\r\nUse `GenerateMessageId(string domain)` method to generate messageId ending with domain name.\r\n\r\n**Platform (please complete the following information):**\r\n - OS: Windows\r\n - .NET Runtime: CoreCLR\r\n - .NET Framework: ASP.NET Core 6.0\r\n - MailKit Version: 3.2.0\r\n\r\n**Exception**\r\n\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n\r\n\r\n**Expected behavior**\r\nSent emails go to target inbox.\r\n\r\n**Code Snippets**\r\n\r\n\r\n```csharp\r\npublic async Task SendEmailAsync(string email, string subject, string htmlMessage)\r\n{\r\nBegin:\r\n\tif (!_smtpClient.IsConnected)\r\n\t\tConnect();\r\n\tif (!_smtpClient.IsAuthenticated)\r\n\t\tAuthenticate();\r\n\tvar message = new MimeMessage()\r\n\t{\r\n\t\tSubject = subject,\r\n\t\tBody = new TextPart(\"html\") { Text = htmlMessage }\r\n\t};\r\n\tmessage.From.Add(new MailboxAddress(_sender.DisplayName ?? _sender.UserName, _sender.Email));\r\n\tmessage.To.Add(new MailboxAddress(email, email));\r\n\tmessage.MessageId = MimeUtils.GenerateMessageId(_sender.Email[(_sender.Email.IndexOf('@') + 1)..]);\r\n\ttry\r\n\t{\r\n\t\tawait _smtpClient.SendAsync(message);\r\n\t}\r\n\tcatch (SmtpCommandException ex)\r\n\t{\r\n\t\tgoto Begin;\r\n\t}\r\n}\r\n```\r\n\r\n**Protocol Logs**\r\n\r\n\r\n**Additional context**\r\n\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1368/comments",
    "author": "BrandonStudio",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2022-04-25T13:13:18Z",
        "body": "If the messages you are sending end up in the recipient's spam folder, then you need to tweak your messages to not trigger the spam software logic.\n\nI can't help you with that."
      }
    ]
  },
  {
    "number": 1363,
    "title": "How to get new Emails after Login",
    "created_at": "2022-04-22T14:19:03Z",
    "closed_at": "2022-04-25T15:33:14Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1363",
    "body": "Whats the best way of getting new message without using CountChanged?\r\nI'm using a fetch method but many times I get OutOfRangeException Error\r\n\r\nThis is what I use to fetch newest Mails\r\nThe client.Inbox.Count doesnt change\r\nI First connect get the Inbox.Count\r\nAnd then I try to fetch with the count\r\n\r\ninbox.Fetch(client.Inbox.Count - 1, -1, MessageSummaryItems.Full | MessageSummaryItems.UniqueId);\r\n\r\nAny better approaches?",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1363/comments",
    "author": "MarieLare",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2022-04-24T03:18:52Z",
        "body": "Someone could probably write an entire book on this topic.\n\nThe Exception you are getting is likely because the folder Count is 0, so check that before subtracting 1.\n\nAs far as a better approach goes, I would recommend trying to think through how you would synchronize 2 sets of data where the UIDs are the keys.\n\nThat's my first hint.\n\nMy second hint is that client.Inbox.Search(SearchQuery.All) is very useful 😁\n\nI'll try to dig up some code I was working on a while back that illustrates how to do this - or, if I can't find it, I'll provide you with at least a more thorough step-by-step set of directions."
      },
      {
        "user": "MarieLare",
        "created_at": "2022-04-24T17:07:59Z",
        "body": "I check it before. The amount is 2600 or some 2100 on others\r\nWhat about SearchQuery.Recent?\r\nOr it would be better comparing the date and get all INBOX?\r\nSo I fetch everything get the first email check the date if its higher or equal than the day I logged in keep trying?\r\n\r\nOr search all inbox. Get the last message UID and somehow search everything after that UID"
      },
      {
        "user": "jstedfast",
        "created_at": "2022-04-25T15:33:14Z",
        "body": "No.\r\n\r\n```csharp\r\nvar cachedUids = GetAllLocallyCachedUids ();\r\n\r\n// Get the full list of message UIDs in the remote folder.\r\nvar uids = folder.Search (SearchQuery.All);\r\n\r\n// Purge the cache of any messages that no longer exist on the server.\r\nfor (int i = cachedUids.Count - 1; i >= 0; i--) {\r\n\tvar uid = cachedUids[i];\r\n\r\n\tif (!uids.Contains (uid)) {\r\n\t\t// The cached message UID no longer exists on the server.\r\n\t\tRemoveFromCache (uid);\r\n\t\tcachedUids.RemoveAt (i);\r\n\t}\r\n}\r\n\r\n// Fetch the latest FLAGS values for all of our cached messages to keep them synced up with the server.\r\nvar summaries = folder.Fetch (cachedUids, MessageSummaryItems.Flags | MessageSummaryItems.UniqueId);\r\nUpdateCache (summaries);\r\n\r\n// Fetch all the \"new\" messages that we haven't seen before.\r\nsummaries = folder.Fetch (cachedUids.Count, -1, MessageSummaryItems.Full | MessageSummaryItems.UniqueId);\r\nCacheMessages (summaries);\r\n```\r\n"
      },
      {
        "user": "MarieLare",
        "created_at": "2022-05-06T10:57:39Z",
        "body": "How do I make all this?\r\n\r\nGetAllLocallyCachedUids()\r\nRemoveFromCache()\r\nUpdateCache()\r\nCacheMessages()\r\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2022-05-06T17:25:23Z",
        "body": "That all depends on how you are caching your MessageSummary data.\r\n\r\nIf you aren't caching at all, then this is all pointless."
      },
      {
        "user": "MarieLare",
        "created_at": "2022-05-23T08:06:25Z",
        "body": "I do not. I just want to wait for specific email but I dont wanna use Imap idle because it can miss it. Like I call the check function every 5 seconds. But I want only the latest emails that coming at this time. Thats why I needed a way to get only the newest emails"
      },
      {
        "user": "jstedfast",
        "created_at": "2022-05-26T15:17:18Z",
        "body": "@MarieLare When you open an ImapFolder, there is a property called NextUid.\r\n\r\nIf you store that value in your own class, then you'll be able to use that to get the newest messages every time any arrive.\r\n\r\n```csharp\r\nvar folder = client.Inbox;\r\nfolder.Open (FolderAccess.ReadWrite);\r\nvar nextUid = folder.NextUid;\r\n\r\n// wait until new messages arrive\r\n\r\n// Get the latest messages...\r\nvar range = new UniqueIdRange (nextUid, UniqueId.MaxValue)\r\nvar summaries = folder.Fetch (range, items);\r\n\r\n// Update our nextUid value\r\nforeach (var summary in summaries) {\r\n    if (summary.UniqueId >= nextUid)\r\n        nextUid = new UniqueId (summary.UniqueId.Validity, summary.UniqueId.Id + 1);\r\n}\r\n```"
      }
    ]
  },
  {
    "number": 1356,
    "title": "What's the recommended/performant way to use the getStreams method?",
    "created_at": "2022-04-06T19:38:37Z",
    "closed_at": "2022-04-07T12:54:25Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1356",
    "body": "Hi, I found `getStreams` when looking through past issues regarding bulk processing. I'd like to consume around ~30k emails from a folder and am looking for the most performant way to do so!\r\n\r\nCurrently I'm using this pattern:\r\n``` csharp\r\n// using an exact path for the type below as it was the only way to get it to resolve getStreams\r\nMailKit.Net.Imap.IImapFolder all = (IImapFolder)client.GetFolder(SpecialFolder.All);\r\nUniqueIdRange range = new UniqueIdRange(uidMin, uidNext); // predefined range for last 30k\r\nvar refs = all.Search(range, SearchQuery.All);\r\n\r\nIList<Task<MimeMessage>> tasks = new List<Task<MimeMessage>>();\r\nvoid getMessageFromStream(ImapFolder _, int __, UniqueId ___, Stream stream) {\r\n    tasks.Add(MimeMessage.LoadAsync(stream));\r\n}\r\nall.GetStreams(refs, getMessageFromStream);\r\nMimeMessage[] messages = await Task.WhenAll(tasks);\r\n```\r\n\r\nI'm looking to possibly parallelize this; as the callback doesn't require a full IMAP connection since it just parses the message, I figured it shouldn't be an issue to have that be done in large batches of threads. However, I read that the stream is closed when the callback returns, so I'm not sure what the best way to go about this is. Would love some insight here as to how to accomplish this or whether there's a better way to go about this!",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1356/comments",
    "author": "cuuupid",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2022-04-06T22:33:37Z",
        "body": "> However, I read that the stream is closed when the callback returns\r\n\r\nCorrect. The Stream argument is Dispose()'d once the callback returns, so it's important to process it in the callback itself and not defer processing.\r\n\r\nYou probably don't want to have 30,000 messages loaded in RAM anyway because that could be a ton of memory."
      },
      {
        "user": "jstedfast",
        "created_at": "2022-04-07T12:54:25Z",
        "body": "FWIW, the API was designed with the expectation that developers would save the stream to disk and process them later."
      },
      {
        "user": "cuuupid",
        "created_at": "2022-04-08T03:07:10Z",
        "body": "Thanks! We need to serve it up to another process pretty much immediately, so in this case I'll go with the synchronous route."
      }
    ]
  },
  {
    "number": 1355,
    "title": "header tag: Return-Path dont appear in email AWS SES",
    "created_at": "2022-03-31T23:06:44Z",
    "closed_at": "2022-03-31T23:15:57Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1355",
    "body": "**Describe the bug**\r\nDuring sending Email, we added header \"Return-Path\" with value \"ReturnPath@mail.com\". As result tag did not appear in result Email. What is wrong? Did we do something wrong or AWS remove it. pls, help us to understand your part.\r\n\r\n**Platform (please complete the following information):**\r\n - OS: Windows\r\n - .NET Runtime: ASP.NET 4.6.1 \r\n - MailKit Version: 3.1.1\r\n\r\n**Expected behavior**\r\nHeader should consist this attr\r\n\r\n**Code Snippets**\r\nIf applicable, add code snippets to help explain your problem.\r\n\r\n```csharp\r\n            MimeMessage mailMessage = new MimeMessage();\r\n            mailMessage.From.Clear();\r\n            mailMessage.From.Add(new MailboxAddress(\"Test from\", \"From@mail.com\"));\r\n\r\n            mailMessage.To.Add(new MailboxAddress(\"Test To\", \"To@mail.com\"));\r\n\r\n            mailMessage.Headers.Add(\"Return-Path\", MailboxAddress.Parse(\"ReturnPath@mail.com\").ToString());\r\n\r\n            mailMessage.Subject = \"test Message\";\r\n\r\n            var sender = new MailboxAddress(\"Sender@mail.com\");\r\n            mailMessage.Body = ....\r\n\r\n            await _client.SendAsync(mailMessage, sender, cancellationToken).ConfigureAwait(false);\r\n```\r\n\r\n\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1355/comments",
    "author": "Eugene-Lytvynov",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2022-03-31T23:15:57Z",
        "body": "AWS is removing it, but maybe it's removing it because it's not at the top of the headers.\r\n\r\nTry this:\r\n\r\n```csharp\r\nmailMessage.Headers.Insert(0, \"Return-Path\", \"ReturnPath@mail.com\");\r\n```"
      },
      {
        "user": "Eugene-Lytvynov",
        "created_at": "2022-03-31T23:16:32Z",
        "body": "Ok, thanks"
      },
      {
        "user": "Eugene-Lytvynov",
        "created_at": "2022-03-31T23:17:49Z",
        "body": "So, you do not overwrite it, isnt it? I mean the tag. it get to AWS SES without any modification, isnt it?"
      },
      {
        "user": "jstedfast",
        "created_at": "2022-03-31T23:29:01Z",
        "body": "MimeKit/MailKit will not overwrite any headers."
      }
    ]
  },
  {
    "number": 1354,
    "title": "Where do I go if I have a question about MailKit 2_15 that DotNetNuke uses.",
    "created_at": "2022-03-31T17:49:59Z",
    "closed_at": "2022-03-31T20:40:00Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1354",
    "body": "We are trying to get an answer on an older version of MailKit version 2_15 that DNN 09.10.02 (0) is using. The issue we are having is that DNN is sending emails in TXT format and our paperless office solution likes HTML format. The older version of DNN 09.10.01 (0) with MailKit 2_13 sends emails in HTML format. \r\n\r\nIs there a file that we can update in MailKit to have forms emailed out as an HTML format? ",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1354/comments",
    "author": "cunnke",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2022-03-31T20:40:00Z",
        "body": "That doesn't sound like a MailKit issue - MailKit doesn't have any control over whether the message body is in text or html format. That's up to the software that constructs the message *using* MimeKit/MailKit.\r\n\r\nIn other words, MimeKit/MailKit just do what you tell it to do :-)"
      }
    ]
  },
  {
    "number": 1348,
    "title": "Sending Mailkit Uniqueid value from razor",
    "created_at": "2022-03-17T12:58:38Z",
    "closed_at": "2022-03-17T15:43:49Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1348",
    "body": "Hi, thanks for library.\r\nI am using the library in asp.net mvc project.\r\nI created an imap client and listed the mails. \r\nI use this to select one of these messages and see its detail. \r\n`public ActionResult GetMailDetails(UniqueId id, string foldername = \"INBOX\")`\r\n\r\nhow can i send uniqueid value via razor page?\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1348/comments",
    "author": "cgtytpl",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2022-03-17T15:43:49Z",
        "body": "I've never written an ASP.NET app or a razor page, so I don't know, but I imagine you would do it the same as you would a regular int."
      }
    ]
  },
  {
    "number": 1346,
    "title": "Can we have equals operators for content type?",
    "created_at": "2022-03-14T18:08:09Z",
    "closed_at": "2022-03-15T14:59:15Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1346",
    "body": "**Is your feature request related to a problem? Please describe.**\r\nWhen filtering body parts by content type, since there are not enough helper methods, it would be relatively easy to use Linq `Where()` something like `email.BodyParts.Where(bp => bp.ContentType == ContentType.Parse(\"message/delivery-status\"))` but this does not work. This is because it is performing an object comparison which is not what I would expect for a data type like this.\r\n\r\nI can work around it but I have to use `bp.ContentType.ToString() == \"ContentType: message/delivery-status\"` which is quite nasty.\r\n\r\n**Describe the solution you'd like**\r\nIf we had equals operators added to `ContentType` which compared the base type and the sub-type (not sure whether they should be case-sensitive or not) then it would have expected behaviour.\r\n\r\n**Describe alternatives you've considered**\r\nAn alternative is the workaround above.",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1346/comments",
    "author": "lukos",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2022-03-14T18:37:37Z",
        "body": "A better solution is probably to do this:\r\n\r\n```csharp\r\nemail.BodyParts.Where(bp => bp.ContentType.IsMimeType(\"message\", \"delivery-status\"))\r\n```"
      },
      {
        "user": "jstedfast",
        "created_at": "2022-03-14T18:38:51Z",
        "body": "That also allows doing stuff like this:\r\n\r\n```csharp\r\nvar textParts = email.BodyParts.Where(bp => bp.ContentType.IsMimeType(\"text\", \"*\"))\r\n```\r\n\r\nor\r\n\r\n```csharp\r\nvar images = email.BodyParts.Where(bp => bp.ContentType.IsMimeType(\"image\", \"*\"))\r\n```\r\n"
      },
      {
        "user": "lukos",
        "created_at": "2022-03-15T09:18:58Z",
        "body": "That's fine. You can close if you don't think it's worth adding the equals operators."
      }
    ]
  },
  {
    "number": 1345,
    "title": "When creating a folder while using windows forms the form freezes",
    "created_at": "2022-03-09T11:49:17Z",
    "closed_at": "2022-03-09T14:46:31Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1345",
    "body": "Please note: Not sure if this is a bug but we have tried to fixed in on our own with no luck.\r\nWhen creating a folder to move a mail into and while using windows forms the form freezes, the folder gets created but the mail doesn't seem to move to the folder, then I need to restart the app and move it. \r\n\r\n**Platform (please complete the following information):**\r\n - .NET Framework: Net Core\r\n - MailKit Version: v2.15.0\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1345/comments",
    "author": "Zach-BeingIT",
    "comments": [
      {
        "user": "Zach-BeingIT",
        "created_at": "2022-03-09T11:50:47Z",
        "body": "```csharp\r\npublic void MoveMessage(IMessage mail, string folderPath)\r\n{\r\n    var folderNames = folderPath.Replace('\\\\', DirectorySeparator).Split(DirectorySeparator).ToList();\r\n    var rootfolder = Client.GetFolder(RootFolder);\r\n\r\n    MailKit.IMailFolder parentFolder = null, newFolder = null, subFolder = null;\r\n    foreach (var folderName in folderNames)\r\n    {\r\n        if (parentFolder == null)\r\n            parentFolder = Client.GetFolders(RootFolder).FirstOrDefault(f => folderNames.First().Equals(f.Name, StringComparison.OrdinalIgnoreCase));\r\n\r\n        if (parentFolder == null)\r\n            parentFolder = rootfolder.Create(folderNames.First(), isMessageFolder: false);\r\n\r\n        var folder = folderName == folderNames.First()\r\n            ? parentFolder // parent folder\r\n            : subFolder?.GetSubfolders().FirstOrDefault(f => folderName.Equals(f.Name, StringComparison.OrdinalIgnoreCase));\r\n\r\n        if (folder != null && folder.Exists)\r\n        {\r\n            subFolder = folder;\r\n            continue;\r\n        }\r\n\r\n        subFolder = newFolder = subFolder.Create(folderName, isMessageFolder: folderName == folderNames.Last());\r\n        if (newFolder == null)\r\n            throw new Exception(\"Folder could not be created.\");\r\n    }\r\n\r\n    newFolder = newFolder ?? subFolder;\r\n    if (newFolder == null)\r\n        throw new Exception(\"Folder could not be created.\");\r\n\r\n    var mailFolder = Client.GetFolder(BasePath);\r\n    var uniqueId = GetUniqueId(folderPath, mail.ID);\r\n    if (uniqueId != null)\r\n    {\r\n        mailFolder.Open(MailKit.FolderAccess.ReadWrite);\r\n        uniqueId = mailFolder.MoveTo(uniqueId.Value, newFolder);\r\n        mailFolder.Close();\r\n    }\r\n\r\n    if (uniqueId == null)\r\n    {\r\n        cache.Remove(mail.ID);\r\n        return;\r\n    }\r\n\r\n    if (cache.ContainsKey(mail.ID))\r\n        cache[mail.ID] = uniqueId.Value;\r\n    else\r\n        cache.Add(mail.ID, uniqueId.Value);\r\n}\r\n```"
      },
      {
        "user": "jstedfast",
        "created_at": "2022-03-09T14:46:31Z",
        "body": "I would need a call stack of the hang or something.\r\n\r\nThat said, why are you calling synchronous networking code on the UI thread? It's bad practice to do that precisely because you are bound to get hangs like you are getting."
      }
    ]
  },
  {
    "number": 1336,
    "title": "Is there any way to receive emails(webstite contact form) with MailKit ?",
    "created_at": "2022-02-18T19:25:55Z",
    "closed_at": "2022-02-18T19:54:52Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1336",
    "body": null,
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1336/comments",
    "author": "Haykaz-tech",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2022-02-18T19:54:52Z",
        "body": "MailKit provides SMTP, POP3 and IMAP *clients* to connect to SMTP, POP3 and/or IMAP *servers*.\r\n\r\nYou could use MailKit in your ASP.NET contact form to send a message via SMTP.\r\n\r\nYou could also use, for example, the ImapClient to connect to your IMAP mail server to then fetch any messages you receive.\r\n"
      },
      {
        "user": "Haykaz-tech",
        "created_at": "2022-02-18T20:06:59Z",
        "body": "Dear Jeffrey Stedfast, thank you for your quick response. I have asp.net core project. And made email confirmation for registration using MailKit and it is OK.\r\nBut now I am trying to make contact form for the website customers. I don't know how to write the code for asp.net core using MailKit.\r\nDo you have any code examples for that. I am new in programming.\r\nRegards Haykaz."
      },
      {
        "user": "jstedfast",
        "created_at": "2022-02-18T20:19:06Z",
        "body": "You could look at the README to see how to do the basics."
      },
      {
        "user": "Haykaz-tech",
        "created_at": "2022-02-18T20:31:43Z",
        "body": "OK Thank you. I think I can do it with Pop3Client."
      }
    ]
  },
  {
    "number": 1328,
    "title": "Custom DefaultLocalDomain for SmtpClient",
    "created_at": "2022-02-08T17:10:34Z",
    "closed_at": "2022-02-08T17:13:45Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1328",
    "body": "**Is your feature request related to a problem? Please describe.**\r\nI use MailKit in a docker container to send email through SMTP.\r\nI was debugging some issue with an SMTP provider, and I notice that the hostname of the container is present in the raw email \r\n```text\r\nReceived: from container-hostname (unknown [42.42.42.42])\r\n```\r\n\r\n**Describe the solution you'd like**\r\nI would like to know if there is a way to customize the `DefaultLocalDomain` with a personal value without changing the container hostname ?\r\n\r\nIn advance, thank you.",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1328/comments",
    "author": "waldo2188",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2022-02-08T17:13:45Z",
        "body": "You can set SmtpClient.LocalDomain to whatever string you want and that is the (full) string that will be used in the EHLO command (which, presumably, is the string used by the SMTP server to generate the Received header)."
      },
      {
        "user": "waldo2188",
        "created_at": "2022-02-09T09:10:45Z",
        "body": "I didn't see this possibility, you made my day!"
      }
    ]
  },
  {
    "number": 1326,
    "title": "The IMAP server replied to the 'SELECT' command with a 'NO' response: SELECT Arguments invalid",
    "created_at": "2022-02-02T14:18:18Z",
    "closed_at": "2022-02-02T15:02:36Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1326",
    "body": "Hi, Im trying to get Sent folder but im getting this error. Is there anything i can do please ?\r\n\r\n\r\n```\r\nblazor.server.js:1 [2022-02-02T14:14:41.872Z] Error: System.AggregateException: One or more errors occurred. (The IMAP server replied to the 'SELECT' command with a 'NO' response: SELECT Arguments invalid)\r\n ---> MailKit.Net.Imap.ImapCommandException: The IMAP server replied to the 'SELECT' command with a 'NO' response: SELECT Arguments invalid\r\n   at MailKit.Net.Imap.ImapFolder.OpenAsync(ImapCommand ic, FolderAccess access, Boolean doAsync, CancellationToken cancellationToken)\r\n   at MailKit.Net.Imap.ImapFolder.Open(FolderAccess access, CancellationToken cancellationToken)\r\n   at lokalizace.net.Services.EMailService.GetSendedFolder()\r\n   at lokalizace.net.Components.SNDEmailComponent.LoadData()\r\n   at lokalizace.net.Components.SNDEmailComponent.OnAfterRenderAsync(Boolean firstRender)\r\n   --- End of inner exception stack trace ---\r\n```\r\n\r\n```\r\nConnected to imaps://xxxxxxx/\r\nS: * OK IMAP4 ready\r\nC: R00000000 CAPABILITY\r\nS: * CAPABILITY IMAP4rev1 SORT CTHREAD=REFERENCES MULTIAPPEND UNSELECT IDLE CHILDREN NAMESPACE LOGIN-REFERRALS AUTH=PLAIN\r\nS: R00000000 OK completed\r\nC: R00000001 AUTHENTICATE PLAIN\r\nS: + \r\nC: ********\r\nS: R00000001 OK LOGIN Completed\r\nC: R00000002 CAPABILITY\r\nS: * CAPABILITY IMAP4rev1 AUTH=PLAIN AUTH=LOGIN AUTH=GSSAPI UIDPLUS QUOTA ACL NAMESPACE CHILDREN IDLE ID UNSELECT METADATA X-ICEWARP-SERVER X-MOVE MULTISEARCH ESEARCH XLIST CREATE-SPECIAL-USE X-ICEWARP-PRIVATEBUSY X-ICEWARP-PROVISIONS X-ICEWARP-CHANGEPASSWORD X-ICEWARP-DIAL X-ICEWARP-CONDSTORE X-ICEWARP-SEARCHLIMIT X-COLOR STARTTLS\r\nS: R00000002 OK CAPABILITY Completed\r\nC: R00000003 NAMESPACE\r\nS: * NAMESPACE ((\"\" \"/\")) ((\"~\" \"/\")) NIL \r\nS: R00000003 OK NAMESPACE Completed\r\nC: R00000004 LIST \"\" \"INBOX\"\r\nS: * LIST (\\HasNoChildren) \"/\" \"INBOX\"\r\nS: R00000004 OK LIST Completed\r\nC: R00000005 XLIST \"\" \"*\"\r\nS: * XLIST (\\HasNoChildren) \"/\" \"Odstran&ARs-n&AOk- polo&AX4-ky\"\r\nS: * XLIST (\\HasNoChildren \\Sent) \"/\" \"Sent\"\r\nS: * XLIST (\\HasNoChildren \\Noinferiors \\Spam) \"/\" \"Spam\"\r\nS: * XLIST (\\HasNoChildren \\Drafts) \"/\" \"Drafts\"\r\nS: * XLIST (\\HasNoChildren) \"/\" \"INBOX\"\r\nS: * XLIST (\\HasNoChildren \\Trash) \"/\" \"Trash\"\r\nS: * XLIST (\\HasNoChildren) \"/\" \"Odeslan&AOk- polo&AX4-ky\"\r\nS: R00000005 OK XLIST Completed\r\nC: R00000006 EXAMINE \"\"\r\nS: R00000006 NO EXAMINE Arguments invalid\r\n```\r\n\r\nExampleCode\r\n```csharp\r\npublic async Task<MailResponse> GetSendedFolder()\r\n        {\r\n            var messageResponse = new MailResponse();\r\n\r\n            try\r\n            {\r\n                string[] CommonSentFolderNames = { \"Sent\"};\r\n\r\n                var messages = new List<EmailMessage>();\r\n                var smtp = new ImapClient();\r\n                smtp.Connect(_settings.SMTP.host_server, _settings.SMTP.IMAPPort, SecureSocketOptions.Auto);\r\n                smtp.Authenticate(_settings.SMTP.host_username, _settings.SMTP.host_password);\r\n\r\n                var inbox = smtp.GetFolder(smtp.PersonalNamespaces[0]);\r\n                // This is where it failing\r\n                inbox.Open(FolderAccess.ReadWrite);\r\n                var sentFolder = inbox.GetSubfolders(false).FirstOrDefault(x => CommonSentFolderNames.Contains(x.Name));\r\n\r\n                var uids = sentFolder.Search(SearchQuery.All);\r\n                var items = inbox.Fetch(uids, MessageSummaryItems.Full);\r\n                foreach (var item in items)\r\n                {\r\n                  \r\n                    var message = inbox.GetMessage(item.UniqueId);\r\n                    var flag = item.Flags.Value.HasFlag(MessageFlags.Seen);\r\n\r\n                    messages.Add(new EmailMessage\r\n                    {\r\n                        body_html = message.HtmlBody,\r\n                        body_plain = message.TextBody,\r\n                        from_email = message.From[0]?.ToString(),\r\n                        subject = message.Subject,\r\n                        importance = message.Importance.ToString(),\r\n                        message_id = message.MessageId,\r\n                        tom_email = message.To[0]?.ToString(),\r\n                        priority = message.Priority.ToString(),\r\n                        rcv_date = message.Date.DateTime,\r\n                        uid = item.UniqueId,\r\n                        readed = flag\r\n                    });\r\n                }\r\n\r\n                smtp.Disconnect(true);\r\n                messageResponse.messages = messages;\r\n            }\r\n            catch (Exception e)\r\n            {\r\n                Console.WriteLine(e);\r\n                throw;\r\n            }\r\n\r\n            return messageResponse;\r\n        }\r\n```\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1326/comments",
    "author": "michalss",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2022-02-02T15:02:36Z",
        "body": "The problem is this:\r\n\r\n```csharp\r\nvar inbox = smtp.GetFolder(smtp.PersonalNamespaces[0]);\r\n```\r\n\r\nThat's not the Inbox folder, that's the root-level folder (which in most cases is a \"fake\" folder).\r\n\r\nIf you want the Inbox (which is a very special folder in IMAP), you can use `client.Inbox`, or you can do something like this:\r\n\r\n```csharp\r\nvar root = smtp.GetFolder(smtp.PersonalNamespaces[0]);\r\nvar folders = root.GetSubfolders ();\r\n\r\n// Note: the INBOX folder is case-insensitive. Every other folder is case-sensitive.\r\nvar inbox = folders.FirstOrDefault (x => x.FullName.Equals (\"INBOX\", StringComparison.OrdinalIgnoreCase));\r\n```\r\n\r\n-or-\r\n\r\n```csharp\r\nvar root = smtp.GetFolder(smtp.PersonalNamespaces[0]);\r\nvar inbox = root.GetSubfolder (\"INBOX\");\r\n```"
      },
      {
        "user": "jstedfast",
        "created_at": "2022-02-02T15:06:05Z",
        "body": "It's also worth mentioning that you do not need to call `Open(...)` on a folder in order to get a list of subfolders.\r\n\r\nYou only need to `Open(...)` a folder before you can look at the messages within the folder. So, for example, you would need to open a folder before you can Search(), Fetch(), GetMessage(), etc."
      },
      {
        "user": "michalss",
        "created_at": "2022-02-02T15:26:10Z",
        "body": "> It's also worth mentioning that you do not need to call `Open(...)` on a folder in order to get a list of subfolders.\r\n> \r\n> You only need to `Open(...)` a folder before you can look at the messages within the folder. So, for example, you would need to open a folder before you can Search(), Fetch(), GetMessage(), etc.\r\n\r\n\r\n\r\nBut im trying to get Sent folder, i clearly state that in first post.. Can you please then give me full example ? As i said sent folder is im after, not INBOX. Your post did not help me at all actually.. :("
      },
      {
        "user": "michalss",
        "created_at": "2022-02-02T15:34:38Z",
        "body": "Never mind i solve it on my own. Just as refference here is the code\r\n\r\n```csharp\r\n   public async Task<MailResponse> GetSendedFolder()\r\n        {\r\n            var messageResponse = new MailResponse();\r\n\r\n            try\r\n            {\r\n                string[] CommonSentFolderNames = { \"Sent\" };\r\n\r\n                var messages = new List<EmailMessage>();\r\n                var smtp = new ImapClient();\r\n                smtp.Connect(_settings.SMTP.host_server, _settings.SMTP.IMAPPort, SecureSocketOptions.Auto);\r\n                smtp.Authenticate(_settings.SMTP.host_username, _settings.SMTP.host_password);\r\n\r\n                var root = smtp.GetFolder(smtp.PersonalNamespaces[0]);\r\n\r\n                var sentFolder = root.GetSubfolders(false).FirstOrDefault(x => CommonSentFolderNames.Contains(x.Name));\r\n                sentFolder.Open(FolderAccess.ReadWrite);\r\n\r\n                var uids = sentFolder.Search(SearchQuery.All);\r\n                var items = sentFolder.Fetch(uids, MessageSummaryItems.Full);\r\n                foreach (var item in items)\r\n                {\r\n                    var message = sentFolder.GetMessage(item.UniqueId);\r\n                    var flag = item.Flags.Value.HasFlag(MessageFlags.Seen);\r\n\r\n                    messages.Add(new EmailMessage\r\n                    {\r\n                        body_html = message.HtmlBody,\r\n                        body_plain = message.TextBody,\r\n                        from_email = message.From[0]?.ToString(),\r\n                        subject = message.Subject,\r\n                        importance = message.Importance.ToString(),\r\n                        message_id = message.MessageId,\r\n                        tom_email = message.To[0]?.ToString(),\r\n                        priority = message.Priority.ToString(),\r\n                        rcv_date = message.Date.DateTime,\r\n                        uid = item.UniqueId,\r\n                        readed = flag\r\n                    });\r\n                }\r\n\r\n                smtp.Disconnect(true);\r\n                messageResponse.messages = messages;\r\n            }\r\n            catch (Exception e)\r\n            {\r\n                Console.WriteLine(e);\r\n                throw;\r\n            }\r\n\r\n            return messageResponse;\r\n        }\r\n```"
      }
    ]
  },
  {
    "number": 1325,
    "title": "Example how to get UID",
    "created_at": "2022-01-31T20:29:29Z",
    "closed_at": "2022-01-31T20:32:18Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1325",
    "body": "HI, how can i get uid from this code pls ? Im trying to make delete possible but this implementation of imap is kind of strange to me and very confusing.. This below example is nice, shows how to get all info from emails i need, but all other examples are not enough to understand whole functionality. \r\n\r\n```sharp\r\nusing System;\r\n\r\nusing MimeKit;\r\nusing MailKit;\r\nusing MailKit.Search;\r\nusing MailKit.Net.Imap;\r\n\r\nnamespace TestClient {\r\n    class Program\r\n    {\r\n        public static void Main (string[] args)\r\n        {\r\n            using (var client = new ImapClient ()) {\r\n                client.Connect (\"imap.friends.com\", 993, true);\r\n\r\n                client.Authenticate (\"joey\", \"password\");\r\n\r\n                // The Inbox folder is always available on all IMAP servers...\r\n                var inbox = client.Inbox;\r\n                inbox.Open (FolderAccess.ReadOnly);\r\n\r\n                Console.WriteLine (\"Total messages: {0}\", inbox.Count);\r\n                Console.WriteLine (\"Recent messages: {0}\", inbox.Recent);\r\n\r\n                for (int i = 0; i < inbox.Count; i++) {\r\n                    var message = inbox.GetMessage (i);\r\n                    Console.WriteLine (\"Subject: {0}\", message.Subject);\r\n                }\r\n\r\n                client.Disconnect (true);\r\n            }\r\n        }\r\n    }\r\n}\r\n```",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1325/comments",
    "author": "michalss",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2022-01-31T20:32:18Z",
        "body": "```csharp\r\nusing System;\r\n\r\nusing MimeKit;\r\nusing MailKit;\r\nusing MailKit.Search;\r\nusing MailKit.Net.Imap;\r\n\r\nnamespace TestClient {\r\n    class Program\r\n    {\r\n        public static void Main (string[] args)\r\n        {\r\n            using (var client = new ImapClient ()) {\r\n                client.Connect (\"imap.friends.com\", 993, true);\r\n\r\n                client.Authenticate (\"joey\", \"password\");\r\n\r\n                // The Inbox folder is always available on all IMAP servers...\r\n                var inbox = client.Inbox;\r\n                inbox.Open (FolderAccess.ReadOnly);\r\n\r\n                Console.WriteLine (\"Total messages: {0}\", inbox.Count);\r\n                Console.WriteLine (\"Recent messages: {0}\", inbox.Recent);\r\n\r\n                var uids = inbox.Search (SearchQuery.All);\r\n                for (int i = 0; i < uids.Count; i++) {\r\n                    var message = inbox.GetMessage (uids[i]);\r\n                    Console.WriteLine (\"Subject: {0}\", message.Subject);\r\n                }\r\n\r\n                client.Disconnect (true);\r\n            }\r\n        }\r\n    }\r\n}\r\n```"
      },
      {
        "user": "michalss",
        "created_at": "2022-01-31T20:33:49Z",
        "body": "thx you should update your examples in readme as well pls, this is essential information for new incomer's .. :)"
      },
      {
        "user": "davidbuckleyni",
        "created_at": "2022-02-01T03:00:10Z",
        "body": "Actually its not the maui teams fault apple docs dis allow u to get the uid of a users device now and actually state on developer web site should not be used. "
      }
    ]
  },
  {
    "number": 1321,
    "title": "When will you upgrade MailKit package to .net 6?",
    "created_at": "2022-01-14T08:07:20Z",
    "closed_at": "2022-01-14T16:24:36Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1321",
    "body": "**Is your feature request related to a problem? Please describe.**\r\nA clear and concise description of what the problem is. Ex. I'm always frustrated when [...]\r\n\r\n**Describe the solution you'd like**\r\nA clear and concise description of what you want to happen.\r\n\r\n**Describe alternatives you've considered**\r\nA clear and concise description of any alternative solutions or features you've considered.\r\n\r\n**Additional context**\r\nAdd any other context or screenshots about the feature request here.\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1321/comments",
    "author": "vahitbayri",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2022-01-14T14:24:35Z",
        "body": "Is there a real need? A .NET 6.0 app should be able to reference MailKit's .NET 5.0 assemblies."
      },
      {
        "user": "vahitbayri",
        "created_at": "2022-01-14T14:36:59Z",
        "body": "Yes. TFS build pipeline wants MailKit .net 6 package for .net 6 projects to restore package. It is critical for our projects. "
      },
      {
        "user": "jstedfast",
        "created_at": "2022-01-14T15:22:56Z",
        "body": "I've just updated MimeKit to build for net6.0 and will update MailKit to do the same after work."
      },
      {
        "user": "vahitbayri",
        "created_at": "2022-01-14T15:35:09Z",
        "body": "We both use MailKit and MimeKit. We need two. Can you please upgrade mailkit ?"
      },
      {
        "user": "jstedfast",
        "created_at": "2022-01-14T15:49:17Z",
        "body": "I develop MimeKit and MailKit in my spare personal time (I wish Microsoft would pay me to work on these, but they don't).\r\n\r\nLike I said in my previous comment, when I finish with work today, I'll update MailKit to build for net6.0 as well (for a quick hack, you can just add `net6.0` to the `<TargetFrameworks>` XML node in the MailKit.csproj file)."
      },
      {
        "user": "vahitbayri",
        "created_at": "2022-01-14T15:58:41Z",
        "body": "When I clone your repo, l got many errors so I couldnt build it. "
      },
      {
        "user": "jstedfast",
        "created_at": "2022-01-14T16:24:36Z",
        "body": "Donations are appreciated :-)"
      }
    ]
  },
  {
    "number": 1320,
    "title": "POP3Client GetMessage throw Download Exceed",
    "created_at": "2022-01-14T06:39:29Z",
    "closed_at": "2022-01-14T14:23:40Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1320",
    "body": "**Describe the bug**\r\nI turned on a cron task that runs every 5 minutes.\r\nEvery time I do a scheduled task, I reconnect to the pop3 mail service and do the authentication.\r\nThen get the number of emails, and use the index to get the uid and message of each email according to the number of emails. When I call _**GetMessage(int index)**_ it throws an exception\r\n\r\n**Platform (please complete the following information):**\r\n - OS: Windows 10,   Windows Server 2016\r\n - .NET Runtime: [e.g. CoreCLR, Mono]\r\n - .NET Framework: .net  framework 4.8\r\n - MailKit Version: 3.0.0\r\n\r\n**Exception**\r\nMailKit.Net.Pop3.Pop3CommandException: POP3 server did not respond with a +OK response to the RETR command.\r\n   在 MailKit.Net.Pop3.Pop3Client.DownloadContext`1.<DownloadItemAsync>d__13.MoveNext() 位置 D:\\src\\MailKit\\MailKit\\Net\\Pop3\\Pop3Client.cs:行号 2507\r\n--- 引发异常的上一位置中堆栈跟踪的末尾 ---\r\n   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   在 System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter.GetResult()\r\n   在 MailKit.Net.Pop3.Pop3Client.DownloadContext`1.<DownloadAsync>d__14.MoveNext() 位置 D:\\src\\MailKit\\MailKit\\Net\\Pop3\\Pop3Client.cs:行号 2518\r\n--- 引发异常的上一位置中堆栈跟踪的末尾 ---\r\n   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   在 System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   在 MailKit.Net.Pop3.Pop3Client.GetMessage(Int32 index, CancellationToken cancellationToken, ITransferProgress progress) 位置 D:\\src\\MailKit\\MailKit\\Net\\Pop3\\Pop3Client.cs:行号 2905\r\n   在 iPlatform.MailService.controls.uBaseCtrol.DownloadEmail(Boolean filterToday) 位置 D:\\ACIP\\Documents\\Repositories\\iPlatform\\iPlatform.MailService\\controls\\uBaseCtrol.cs:行号 12\r\n\r\n**Code Snippets**\r\nIf applicable, add code snippets to help explain your problem.\r\n\r\n```csharp\r\n                messageCount = pop3Client.GetMessageCount(); \r\n                var guid = string.Empty;\r\n                for (int i = messageCount - 1; i >= 0; i--)\r\n                {\r\n                    try\r\n                    {\r\n                        guid = pop3Client.GetMessageUid(i);\r\n                        LogWorker.Log($\"message guid: {guid}\");\r\n                        if (guids.ContainsKey(guid)) continue;\r\n                \r\n                        var messageModel = new MailBodyModel();\r\n\r\n                        //  throw  exception  by this step\r\n                        var message = pop3Client.GetMessage(i);\r\n\r\n                        .....\r\n                    }\r\n                 }\r\n```\r\n\r\n**Protocol Logs**\r\nC: LIST 3715\r\nS: +OK 3715 79471\r\nC: UIDL 3714\r\nS: +OK 3714 AGoAQQAjE3Rj83HljEAskKoS\r\nC: RETR 3714\r\nS: -ERR Download exceed. msg=3714\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1320/comments",
    "author": "ROMYIM",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2022-01-14T14:23:40Z",
        "body": "That error comes from the POP3 server, not from MailKit. You need to contact the admin of your POP3 server and ask him/her what the issue is.\r\n\r\nI suspect that you have exceeded some limit of the number of times you are allowed to connect and download messages from the POP3 server in a short span of time.\r\n\r\nTry changing your timer to 10 minutes instead of 5 minutes."
      },
      {
        "user": "ROMYIM",
        "created_at": "2022-01-18T01:14:18Z",
        "body": "Thanks for your reply.It is the server limit"
      }
    ]
  },
  {
    "number": 1306,
    "title": "NET6.0 Support",
    "created_at": "2021-12-21T15:37:24Z",
    "closed_at": "2021-12-21T16:19:41Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1306",
    "body": "Is there paned a NET6.0 support in the future?",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1306/comments",
    "author": "tpetzold-ts",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2021-12-21T16:19:41Z",
        "body": "Your .NET 6.0 apps/libraries should be able to use the .NET 5.0 builds of MimeKit/MailKit. It shouldn't be necessary for me to push .NET 6.0 builds for things to work afaik.\r\n\r\nThat said, it would be trivial to add build targets for net6.0 in the .csproj files."
      }
    ]
  },
  {
    "number": 1302,
    "title": "How to receive messages that do not match IList<UniqueId>",
    "created_at": "2021-12-10T13:57:26Z",
    "closed_at": "2021-12-10T15:06:41Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1302",
    "body": "I found in the documentation that can find messages by their uid\r\n`SearchQuery.Uids(IList<UniqueId>);`\r\n\r\nI have a question:\r\nFor example, I will transfer a string from the outside with one or more id and parse it by filling in IList <UniqueId>. And I will only need to receive messages that do not match this list.\r\nMaybe I did not notice such a solution in the documentation, if there is one, I will be grateful for the help",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1302/comments",
    "author": "eugenestepaniuk",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2021-12-10T15:06:41Z",
        "body": "Try this:\r\n\r\n```csharp\r\nSearchQuery.Not(SearchQuery.Uids(IList<UniqueId>));\r\n```"
      }
    ]
  },
  {
    "number": 1300,
    "title": "Can't set connection. System.Net.Sockets.SocketException",
    "created_at": "2021-12-08T18:28:58Z",
    "closed_at": "2021-12-08T18:43:46Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1300",
    "body": "A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond\r\n\r\nThis error happens when code execution reach client.Connect method\r\n\r\nHere Some Code \r\n\r\n public void SendEmail(string email, string subject, string message)\r\n        {\r\n            var emailMessage = new MimeMessage();\r\n\r\n            emailMessage.From.Add(new MailboxAddress(\"administration\", \"SomeEmail\"));\r\n            emailMessage.To.Add(new MailboxAddress(\"\", email));\r\n            emailMessage.Subject = subject;\r\n            emailMessage.Body = new TextPart(MimeKit.Text.TextFormat.Html)\r\n            {\r\n                Text = message\r\n            };\r\n\r\n            using (var client = new SmtpClient())\r\n            {\r\n                client.Connect(\"smtp.gmail.com\", 587, true);\r\n                client.Authenticate(\"some@gmail.com\", \"pass\");\r\n                client.Send(emailMessage);\r\n\r\n                client.Disconnect(true);\r\n            }\r\n        }",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1300/comments",
    "author": "NiceAhah",
    "comments": [
      {
        "user": "NiceAhah",
        "created_at": "2021-12-08T18:37:56Z",
        "body": "smtp host doesn't matter in my case. I just want to send email, but can't"
      },
      {
        "user": "jstedfast",
        "created_at": "2021-12-08T18:43:46Z",
        "body": "This is a networking problem that I can't really help you with.\r\n\r\nBest I can do is provide you some possible things to try looking into:\r\n\r\n1. check whether you have a firewall blocking outbound connections (antivirus software often puts up a firewall too)\r\n2. check whether your network cable is plugged in and/or your wifi has a solid connection\r\n3. make sure that your network routing tables are correct\r\n\r\nFWIW, this is an error that comes from the .NET networking APIs, not MailKit itself."
      }
    ]
  },
  {
    "number": 1299,
    "title": "Does SmtpClient support a truststore like JavaMail when use SSL?",
    "created_at": "2021-12-08T09:31:33Z",
    "closed_at": "2021-12-08T12:36:49Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1299",
    "body": "So that no matter the mail server's certificate is self-signed or not, as long as it is listed in the truststore, a SSL or TLS connection will be established? Thank you.",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1299/comments",
    "author": "fredmafu",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2021-12-08T12:36:20Z",
        "body": "This is handled by .NETs SslStream implementation so yes."
      }
    ]
  },
  {
    "number": 1297,
    "title": "Is it possible to delete multiple messages?",
    "created_at": "2021-12-03T14:30:22Z",
    "closed_at": "2021-12-03T14:38:01Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1297",
    "body": "Found only single delete",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1297/comments",
    "author": "eugenestepaniuk",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2021-12-03T14:38:01Z",
        "body": "The same methods that you found to delete a single message also have overloads that take `IList<int>` and `IList<UniqueId>`, so yes, you can delete multiple messages at a time."
      }
    ]
  },
  {
    "number": 1296,
    "title": "Catch failed message delivery",
    "created_at": "2021-12-03T08:56:32Z",
    "closed_at": "2021-12-03T14:26:03Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1296",
    "body": "Is it possible to determine/wait if a message fails to send for some reason without having to check the sender inbox for failed delivery email notification?\r\n\r\nBelow is a mock of what I am trying to accomplish.\r\n\r\n```\r\nRemote Server returned '550 5.1.2 <testemail@outlook.com>: Recipient address rejected: Domain not found' //\r\n\r\nvoid SendMail(){\r\n    try{\r\n        //send e-mail\r\n        if(failedToSend){\r\n            //log failed delivery\r\n            //reason: email doesn't exist\r\n        }\r\n    }\r\n    catch (failedDeliveryException e){\r\n        //log failed delivery\r\n        //reason: other reasons\r\n    }\r\n\r\n}",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1296/comments",
    "author": "dheoxic",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2021-12-03T14:26:03Z",
        "body": "```csharp\r\ntry {\r\n    client.Send (message);\r\n} catch (Exception ex) {\r\n    // Failed to send message\r\n}\r\n```"
      },
      {
        "user": "dheoxic",
        "created_at": "2021-12-05T10:02:05Z",
        "body": "Doesn't seem to catch failure of delivery in catch block if an email address doesn't exist. All I get is an email notification from outlook that the email was not sent because of non-existing email address. `Recipient address rejected: Domain not found`\r\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2021-12-05T15:04:05Z",
        "body": "Then your only option is to write code that will check your IMAP or POP3 Inbox for bounce messages."
      },
      {
        "user": "dctremblay",
        "created_at": "2022-07-09T16:58:22Z",
        "body": "Have you found a library that does this since then @dheoxic ?"
      },
      {
        "user": "dheoxic",
        "created_at": "2022-07-11T00:12:26Z",
        "body": "The only way is to check for bounce messages, as what's written in the mimekit docs."
      },
      {
        "user": "dctremblay",
        "created_at": "2022-07-11T00:15:08Z",
        "body": "Yup looks like it, I was wondering if there's some mediator/facade library that handles all that logic."
      }
    ]
  },
  {
    "number": 1294,
    "title": "Not able to send email in RELEASE mode",
    "created_at": "2021-12-01T10:25:16Z",
    "closed_at": "2021-12-01T14:46:41Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1294",
    "body": "**Issue**\r\nThe code below works as expected in debug mode, however, it fails in release mode. Type initializer exception is thrown at line  \r\nvar message = new MimeMessage();\r\n\r\nAny solution, I would highly appreciate. \r\n\r\n**Platform (please complete the following information):**\r\n - OS: Windows 10\r\n - .NET Framework: UWP\r\n - MailKit Version: 2.15\r\n\r\n\r\n**Code Snippets**\r\n**var message = new MimeMessage();_**\r\nmessage.From.Add(new MailboxAddress(\"Niraj Wadikar\", \"xxxxxx@gmail.com\"));\r\nmessage.To.Add(new MailboxAddress(\"my name\", myemail@gamil.com));\r\nmessage.Subject = \"Driving Directions For Route\" + \" - \" + RouteName;\r\nmessage.Body = new TextPart(\"plain\")\r\n  {\r\n         Text = @\"Please use this url for driving direction\" + \" : \" + RouteNavigationUrl\r\n  };\r\n\r\nusing (var client = new SmtpClient())\r\n                    {\r\n                        client.Connect(\"smtp.gmail.com\", 465, true);\r\n                        client.Authenticate(\"mymail@gmail.com\", \"password\");\r\n\r\n                        client.Send(message);\r\n                        client.Disconnect(true);\r\n                    }\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1294/comments",
    "author": "NirajW-Infogain",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2021-12-01T14:41:20Z",
        "body": "Am I supposed to guess what the exception is? What framework does UWP target? I don't ship a UWP assembly."
      },
      {
        "user": "jstedfast",
        "created_at": "2021-12-01T14:46:41Z",
        "body": "Most likely the issue is with text encoding initialization which means you are probably not including System.Text.Encoding.CodePages nuget or the assemblies included in that package are not being copied over to your bin directory."
      }
    ]
  },
  {
    "number": 1290,
    "title": "Incorrect context extraction from Attachment",
    "created_at": "2021-11-16T21:53:18Z",
    "closed_at": "2021-11-16T22:06:57Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1290",
    "body": "**Describe the bug**\r\nXml text from a MimePart.Content stream  or MimePart.WriteTo/MimePart.WriteToAsync() is corrupted.\r\n\r\n**Platform (please complete the following information):**\r\n - OS:  Windows 10\r\n - .NET Runtime:  Core\r\n - .NET Framework:  .NET 6\r\n - MailKit Version:  2.15.0\r\n\r\n**Exception**\r\nIf you got an exception, please include the exception Message *and* StackTrace.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n\r\n\r\n**Expected behavior**\r\n// This works to save a corrupted Xml from same attachment:\r\nxmlEntity.WriteToAsync(string fileName);\r\n\r\nshould be... \r\n<NOT_protest_hearing_begin_date>2021-05-20</NOT_protest_hearing_begin_date>\r\n\t<PRP_geo_account_id>68035</PRP_geo_account_id>\r\n\r\n// ... but instead seems to leave MIME line enders scattered between Xml tags\r\n\r\n<NOT_protest_hearing_begin_date>2021-05-20   **=  FOR**</NOT_protest_hearing_begin_date>\r\n        **==**\r\n\t<PRP_geo_account_id>68035</PRP_geo_account_id>\r\n\r\n**Code Snippets**\r\nIf applicable, add code snippets to help explain your problem.\r\n\r\n```csharp\r\n// Add your code snippet here.\r\n```\r\n    // code snippet returns malformed Xml string, where xmlEntity is from Attachment\r\n    using (Stream stream = ((MimePart) xmlEntity).Content.Stream)\r\n    {\r\n        byte[] buffer = new byte[stream.Length];\r\n        stream.Position = 0;\r\n        _ = await stream.ReadAsync(buffer, 0, (int)stream.Length);\r\n        return System.Text.Encoding.UTF8.GetString(buffer);\r\n    }\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1290/comments",
    "author": "Budsy",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2021-11-16T22:06:56Z",
        "body": "Change your code to this:\r\n\r\n```csharp\r\nusing MemoryStream memory = new MemoryStream();\r\n((MimePart)xmlEntity).Content.DecodeToAsync(memory).ConfigureAwait(false);\r\nbyte[] buffer = memory.GetBuffer();\r\nint length = (int)memory.Length;\r\nreturn System.Text.Encoding.UTF8.GetString(buffer, 0, length);\r\n```"
      }
    ]
  },
  {
    "number": 1276,
    "title": "\"Invalid credentials (Failure)\" when trying to authenticate Gmail client",
    "created_at": "2021-10-21T17:04:50Z",
    "closed_at": "2021-10-21T20:04:14Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1276",
    "body": "I have the following code...\r\n\r\n```c#\r\nImapClient client = new();\r\nawait client.ConnectAsync(_options.ImapServer, _options.ImapPort, true);\r\nawait client.AuthenticateAsync(username, password);\r\n```\r\n\r\nThis works fine for most of the Gmail accounts I'm handling, but for one, it throws an exception \"Invalid credentials (Failure)\"\r\n\r\nI have checked and double-checked that the user name and password are correct, and can log in to the Gmail account with them.\r\n\r\nI've checked that \"Enable less secure apps\" is enabled, and that 2-step auth is not enabled. I've compared the settings with other accounts that work with this code, but can't see any difference.\r\n\r\nThe code is running in an ASP.NET Core 5 web site on Windows 10, and uses MailKit version 2.13.0.\r\n\r\nHere is the Imap log (email address changed)...\r\n\r\n```\r\nConnected to imaps://imap.gmail.com:993/\r\nS: * OK Gimap ready for requests from 78.129.212.85 m62mb244108374wme\r\nC: A00000000 CAPABILITY\r\nS: * CAPABILITY IMAP4rev1 UNSELECT IDLE NAMESPACE QUOTA ID XLIST CHILDREN X-GM-EXT-1 XYZZY SASL-IR AUTH=XOAUTH2 AUTH=PLAIN AUTH=PLAIN-CLIENTTOKEN AUTH=OAUTHBEARER AUTH=XOAUTH\r\nS: A00000000 OK Thats all she wrote! m62mb244108374wme\r\nC: A00000001 AUTHENTICATE PLAIN AG1pY2hhZWxsZXZ5QGVsaXRlY2hhbWJlcnMuY28udWsAU2NyYW50b242MTM=\r\nS: A00000001 NO [AUTHENTICATIONFAILED] Invalid credentials (Failure)\r\nC: A00000002 LOGIN me@mydomain.com mypassword\r\nS: A00000002 NO [AUTHENTICATIONFAILED] Invalid credentials (Failure)\r\nConnected to imaps://imap.gmail.com:993/\r\nS: * OK Gimap ready for requests from 78.129.212.85 u22mb323288896wru\r\nC: A00000000 CAPABILITY\r\nS: * CAPABILITY IMAP4rev1 UNSELECT IDLE NAMESPACE QUOTA ID XLIST CHILDREN X-GM-EXT-1 XYZZY SASL-IR AUTH=XOAUTH2 AUTH=PLAIN AUTH=PLAIN-CLIENTTOKEN AUTH=OAUTHBEARER AUTH=XOAUTH\r\nS: A00000000 OK Thats all she wrote! u22mb323288896wru\r\nC: A00000001 AUTHENTICATE PLAIN AG1pY2hhZWxsZXZ5QGVsaXRlY2hhbWJlcnMuY28udWsAU2NyYW50b242MTM=\r\nS: A00000001 NO [AUTHENTICATIONFAILED] Invalid credentials (Failure)\r\nC: A00000002 LOGIN me@mydomain.com mypassword\r\nS: A00000002 NO [AUTHENTICATIONFAILED] Invalid credentials (Failure)\r\n```\r\n\r\nAnyone any ideas what might be causing this?\r\nThanks for any help you can give.\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1276/comments",
    "author": "MrYossu",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2021-10-21T17:53:42Z",
        "body": "This is usually because the GMail account isn't configured to allow \"less secure apps\", but if you already checked that and it's correct, then I don't know what else it could be."
      },
      {
        "user": "MrYossu",
        "created_at": "2021-10-21T18:05:05Z",
        "body": "@jstedfast Is there anything else I can check? Apart from the fact that the client needs the app to access this Gmail account, we are going to be adding plenty more accounts, and I'm bothered that we'll hit the same issue there.\r\n\r\nThanks for the reply."
      },
      {
        "user": "MrYossu",
        "created_at": "2021-10-21T20:04:14Z",
        "body": "@jstedfast Duh, I had logged in to the client's Gmail account and enabled less-secure apps. Before I had chance to run my code and test, he spotted the Google alert and disabled it again!\r\n\r\nAll working now. Sorry to have bothered you."
      }
    ]
  },
  {
    "number": 1264,
    "title": "Is there a point in using DecodeToAsync() or WriteToAsync() for MimeMessage?",
    "created_at": "2021-09-28T16:30:06Z",
    "closed_at": "2021-09-28T17:40:00Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1264",
    "body": "The underlying streams that are being used are either a good old `MemoryStream`, or a `MemoryBlockStream` for the contents of a `MimeMessage`..\r\n\r\nIf I've correctly understood that, both of those variants do sync-over-async for their `async` methods, which the rest of the `MimeKit` library ends up using by wrapping those streams in other kinds of streams, like a `FilteredStream`?\r\n\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1264/comments",
    "author": "kikaragyozov",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2021-09-28T17:40:00Z",
        "body": "Async IO methods don't just apply to the MemoryStream/MemoryBlockStream input data, it *also* applies to the output stream.\r\n\r\nSo if you do a WriteAsync() to a NetworkStream or an SslStream, that immediately has value even if the message body parts are all using MemoryStreams or MemoryBlockStreams.\r\n\r\nSame for DecodeToAsync().\r\n\r\nObviously if you are writing the message or decoding the content of a MimePart to a memory stream, then Async is likely overhead that doesn't gain you anything."
      }
    ]
  },
  {
    "number": 1260,
    "title": "IMAP connection going down after X hours despite ImapClient.NoOpAsync?",
    "created_at": "2021-09-21T11:16:59Z",
    "closed_at": "2021-09-21T12:58:26Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1260",
    "body": "Hi,\r\n\r\nI'm chasing some weird issues at a customer: if the customer tries to send an email after e.g. 2 hours of inactivity then SMTP sending works OK, but if I'm trying to attach the sent email to the SENT folder, I e.g. would get this error\r\n\r\n2021-09-20 13:16:06:706 Imap.C: K00000262 UNSELECT\r\n2021-09-20 13:16:06:823 Imap.S: K00000262 NO Server Unavailable. 15\r\n2021-09-20 13:16:06:823 Imap.S: * BYE Connection closed.\r\n\r\nI'm doing a ImapClient.NoOpAsync every minute to 'keep the IMAP connection alive'.\r\n\r\nWould you have any idea what might be causing the issue?",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1260/comments",
    "author": "DierkDroth",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2021-09-21T12:58:26Z",
        "body": "These things can happen. Servers will drop your connection and you just have to be prepared to retry operations.\r\n\r\nI'm working on the Azure team at Microsoft right now, for example, and we have to retry operations all the time there, too. Every HttpClient call gets wrapped in an internal Retry handler."
      },
      {
        "user": "DierkDroth",
        "created_at": "2021-09-21T15:46:09Z",
        "body": "Thanks @jstedfast. I'll modify my code accordingly..."
      }
    ]
  },
  {
    "number": 1255,
    "title": "SmtpClient throws error: \"connection failed because connected host has failed to respond 142.251.10.108:587'\"",
    "created_at": "2021-09-06T12:00:37Z",
    "closed_at": "2021-09-06T16:20:44Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1255",
    "body": "Hi,\r\n\r\nIn config file I have used this: \r\n\"Host\": \"smtp.gmail.com\",\r\n  \"Port\": 587,\r\n\"UseSSL\": false,\r\n  \"UseStartTLS\": true\r\n\r\nWhile sending mail to my personal gmail id via Mailkit library I have used SmtpClient to send message\r\n\r\nBut when break point hits this line of code below:\r\nclient.Connect(\"smtp.gmail.com\",587, MailKit.Security.SecureSocketOptions.StartTlsWhenAvailable)\r\n\r\nIt throws error like this:\r\nSystem.Net.Internals.SocketExceptionFactory.ExtendedSocketException: 'A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond 142.251.10.108:587'\r\n\r\nI have connected to Open Vpn and turned off anti-virus.\r\n\r\nStack Trace:\r\n   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)\r\n   at MailKit.Net.SocketUtils.ConnectAsync(String host, Int32 port, IPEndPoint localEndPoint, Boolean doAsync, CancellationToken cancellationToken)\r\n   at MailKit.Net.SocketUtils.ConnectAsync(String host, Int32 port, IPEndPoint localEndPoint, Int32 timeout, Boolean doAsync, CancellationToken cancellationToken)\r\n   at MailKit.MailService.ConnectSocket(String host, Int32 port, Boolean doAsync, CancellationToken cancellationToken)\r\n   at MailKit.Net.Smtp.SmtpClient.ConnectAsync(String host, Int32 port, SecureSocketOptions options, Boolean doAsync, CancellationToken cancellationToken)\r\n   at MailKit.Net.Smtp.SmtpClient.Connect(String host, Int32 port, SecureSocketOptions options, CancellationToken cancellationToken)\r\n   at EmailTester.MailRepository.SendEmail(String to, List`1 cc, String subject, String body, List`1 attachments) in D:\\MailRepository.cs:line 66\r\n   at EmailTester.Program.Main(String[] args) in D:\\Program.cs:line 32\r\n\r\n - OS: Windows 10\r\n - .NET Framework:  .NET 4.5\r\n - MailKit Version: V2.15.0\r\n\r\nThanks ",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1255/comments",
    "author": "Yadunandanaacharya",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2021-09-06T16:20:44Z",
        "body": "It means that the .NET Socket library could not connect to whatever host you asked it to connect to.\r\n\r\nWhy it can't connect is something you'll have to figure out on your own. Maybe the server is down or maybe your DNS server is down or maybe your network cable is unplugged. There's a million possibilities and there's no way for me to help you."
      },
      {
        "user": "Yadunandanaacharya",
        "created_at": "2021-09-07T01:53:59Z",
        "body": "Ok, thanks. I'll check them."
      }
    ]
  },
  {
    "number": 1246,
    "title": "Is it possible to avoid logging message content?",
    "created_at": "2021-08-24T12:57:33Z",
    "closed_at": "2021-08-25T14:28:51Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1246",
    "body": "Hi, this is just a question. Sorry if it's something obvious but I'm new to Mailkit and I can´t find a way to do it. I'm creating a SmtpClient with a ProtocolLogger and I'm seeing that the full message content that I sent appears in the log.\r\n\r\nIs it possible in some way to avoid the logging of the message and its headers? Not sure but I think its called the DATA command.",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1246/comments",
    "author": "CristinaHP",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2021-08-24T13:58:03Z",
        "body": "The only way to avoid this right now is if you subclass the ProtocolLogger (or implement your own IProtocolLogger) and filter it out .\r\nWhen I implemented the ProtocolLogger, I saw it as more of a debugging tool than anything else, so I wanted everything."
      },
      {
        "user": "CristinaHP",
        "created_at": "2021-08-25T07:54:56Z",
        "body": "And is it possible to know which command is being sent, so that I can skip DATA command? Or the only way to do that is to read the stream/file in which the ProtocolLogger is writing?"
      },
      {
        "user": "jstedfast",
        "created_at": "2021-08-25T13:22:42Z",
        "body": "You have to read the data :("
      },
      {
        "user": "CristinaHP",
        "created_at": "2021-08-26T13:04:21Z",
        "body": "Ok, thanks for your help and your quick replies!"
      },
      {
        "user": "jstedfast",
        "created_at": "2021-08-26T15:11:17Z",
        "body": "FWIW, the flow will be like this:\r\n\r\n- LogServer (...) - doesn't matter what this buffer is\r\n- LogClient (...) - check if the buffer matches exactly `\"DATA\\r\\n\"`, if so, the next batch of LogClient() calls will be the message data\r\n- LogServer (...) - this will tell the client to go ahead\r\n- LogClient (...) - this will be message data\r\n- LogClient (...)\r\n- LogClient (...)\r\n- LogServer (...) - this will tell the client that the message has been accepted or rejected and you can use this to know when the client is done sending the message"
      },
      {
        "user": "CristinaHP",
        "created_at": "2021-08-27T12:28:09Z",
        "body": "Great thanks!\r\n\r\nThat last LogServer line you say is the one like: \"250 2.0.0 Ok: queued as xxxxx\"?"
      },
      {
        "user": "jstedfast",
        "created_at": "2021-08-27T14:03:19Z",
        "body": "Correct"
      }
    ]
  },
  {
    "number": 1245,
    "title": "Send mail sucessfully but no attachment",
    "created_at": "2021-08-23T16:50:55Z",
    "closed_at": "2021-08-23T19:33:39Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1245",
    "body": "I'm following the steps as documentation says about how to send a email with attachment and the attachment is a pdf file made from a table data by using iTextSharp.  the data converts into the pdf file successfully and it sends ok. However when i check email on webmail, I don't see any attached file. Thanks for help!\r\n\r\nThis is my Code\r\n```\r\n\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.ComponentModel;\r\nusing System.Data;\r\nusing System.Drawing;\r\nusing System.Linq;\r\nusing System.Text;\r\nusing System.Threading.Tasks;\r\nusing System.Windows.Forms;\r\nusing MailKit.Net.Smtp;\r\nusing MailKit;\r\nusing MimeKit;\r\nusing Image = iTextSharp.text.Image;\r\nusing TAN_Lib;\r\nusing System.Data.SqlClient;\r\nusing iTextSharp.text;\r\nusing iTextSharp.text.pdf;\r\n\r\nnamespace GRAutoMail\r\n{\r\n    public partial class Form1 : Form\r\n    {\r\n        public Form1()\r\n        {\r\n            InitializeComponent();\r\n        }\r\n\r\n        private void Form1_Load(object sender, EventArgs e)\r\n        {\r\n\t\t\tDataTable dataTable = new DataTable();\r\n        //dataTable=TAN_Lib.Class1.GetSqlDataTable228(\"GeneRock\", \"SELECT  OP011M1.NAME,(SELECT  INPUT1 FROM OP013M1 AS A2 WHERE (LAB1 = '014') AND (INPUT1 IS NOT NULL) AND (A1.USERID = USERID) AND (A1.RELKEY1 = RELKEY1)) AS '英文姓名',CASE (OP011M1.SEX) WHEN '1' THEN 'Male' WHEN '2' THEN 'Female' else 'Male/Female' END as'性別',convert(varchar, OP011M1.BIRTH, 111) as '生日',OP011M1.ID,(SELECT  INPUT1 FROM OP013M1 AS A2 WHERE (LAB1 = '015') AND (INPUT1 IS NOT NULL) AND (A1.USERID = USERID) AND (A1.RELKEY1 = RELKEY1)) AS '護照號碼',OP011M1.OP_BCODE,OP011M1.SIGN_DATE,OP011M1.SMPLTP_NAM,OP011M1.CHK_DATE,A1.INPUT1,(SELECT  INPUT1 FROM OP013M1 AS A2 WHERE (LAB1 = '009') AND (INPUT1 IS NOT NULL) AND (A1.USERID = USERID) AND (A1.RELKEY1 = RELKEY1)) AS 'CT值',OP011M1.CHK_OPNAME,OP011M1.EMAIL, OP011M1.TEL FROM OP011M1 INNER JOIN OP013M1 AS A1 ON OP011M1.USERID = A1.USERID AND OP011M1.RELKEY1 = A1.RELKEY1 WHERE LAB1='008' AND OP011M1.P1='CV19' and OP_BCODE='\" + Request.QueryString[\"id\"]+\"'\");\r\n        dataTable = TAN_Lib.Class1.GetSqlDataTable228(\"GeneRock\", \"SELECT  OP011M1.NAME,(SELECT  INPUT1 FROM OP013M1 AS A2 WHERE (LAB1 = '014') AND (INPUT1 IS NOT NULL) AND (A1.USERID = USERID) AND (A1.RELKEY1 = RELKEY1)) AS '英文姓名',CASE (OP011M1.SEX) WHEN '1' THEN 'Male' WHEN '2' THEN 'Female' else 'Male/Female' END as'性別',convert(varchar, OP011M1.BIRTH, 111) as '生日',OP011M1.ID,(SELECT  INPUT1 FROM OP013M1 AS A2 WHERE (LAB1 = '015') AND (INPUT1 IS NOT NULL) AND (A1.USERID = USERID) AND (A1.RELKEY1 = RELKEY1)) AS '護照號碼',OP011M1.OP_BCODE,CONVERT(VARCHAR, OP011M1.SIGN_DATE, 23)+' '+CONVERT(VARCHAR(5),OP011M1.OP_TIME) as '檢驗日期',OP011M1.SMPLTP_NAM,CONVERT(VARCHAR, OP011M1.CHK_DATE, 23)+' '+OP011M1.PRT_TIME as '發報日期',A1.INPUT1,(SELECT  INPUT1 FROM OP013M1 AS A2 WHERE (LAB1 = '009') AND (INPUT1 IS NOT NULL) AND (A1.USERID = USERID) AND (A1.RELKEY1 = RELKEY1)) AS 'CT值',OP011M1.CHK_OPNAME,OP011M1.EMAIL, OP011M1.TEL FROM OP011M1 INNER JOIN OP013M1 AS A1 ON OP011M1.USERID = A1.USERID AND OP011M1.RELKEY1 = A1.RELKEY1 WHERE (LAB1='008' or LAB1='010' or LAB1= '012') AND OP011M1.P1='CV19' and id='G222112946'\");\r\n        MemoryStream ms = new MemoryStream();\r\n        using (var inputStream = new FileStream(\"C:\\\\inetpub\\\\wwwroot\\\\Deployment\\\\GeneRock_Report.pdf\", FileMode.Open))\r\n        using (var outputStream = File.Create(\"C:\\\\inetpub\\\\wwwroot\\\\Deployment\\\\\" + dataTable.Rows[0][6].ToString() + \"-CN.pdf\"))\r\n        {\r\n            user_session = outputStream.Name;\r\n         \r\n            PdfReader pdfReader = new PdfReader(inputStream);\r\n            var pdfStamper = new PdfStamper(pdfReader, outputStream);\r\n       \r\n            pdfStamper.SetEncryption(PdfWriter.STRENGTH40BITS, dataTable.Rows[0][4].ToString(), \"a123\", 1);\r\n            //BaseFont chBaseFont = BaseFont.CreateFont(@\"C:\\windows\\fonts\\kaiu.ttf\", BaseFont.IDENTITY_H, BaseFont.NOT_EMBEDDED);\r\n            //BaseFont chBaseFont = BaseFont.CreateFont(@\"C:\\windows\\fonts\\MSJH.TTC,1\", BaseFont.IDENTITY_H, BaseFont.NOT_EMBEDDED);\r\n            BaseFont chBaseFont = BaseFont.CreateFont(\"MHei-Medium\", \"UniCNS-UCS2-H\", BaseFont.NOT_EMBEDDED);\r\n           \r\n            AcroFields acroFields = pdfStamper.AcroFields;\r\n            foreach (string field in acroFields.Fields.Keys)\r\n            {\r\n               \r\n                acroFields.SetFieldProperty(field, \"textfont\", chBaseFont, null);\r\n            }\r\n            acroFields.SetField(\"A1\", dataTable.Rows[0][0].ToString());\r\n            acroFields.SetField(\"A2\", dataTable.Rows[0][1].ToString());\r\n            acroFields.SetField(\"A3\", dataTable.Rows[0][2].ToString());\r\n            acroFields.SetField(\"A4\", dataTable.Rows[0][3].ToString());\r\n            acroFields.SetField(\"A5\", dataTable.Rows[0][4].ToString());\r\n            acroFields.SetField(\"A6\", dataTable.Rows[0][5].ToString());\r\n            acroFields.SetField(\"A7\", dataTable.Rows[0][6].ToString());\r\n            DateTime aDate = DateTime.Now;\r\n            aDate = Convert.ToDateTime(dataTable.Rows[0][7].ToString());\r\n            acroFields.SetField(\"A8\", aDate.ToString(\"yyyy/MM/dd HH:mm\"));\r\n            acroFields.SetField(\"A9\", dataTable.Rows[0][8].ToString());\r\n            aDate = Convert.ToDateTime(dataTable.Rows[0][9].ToString());\r\n            acroFields.SetField(\"A10\", aDate.ToString(\"yyyy/MM/dd HH:mm\"));\r\n\r\n            //< dependency >\r\n            //< groupId > com.itextpdf </ groupId >\r\n            ////< artifactId > itext - asian </ artifactId >\r\n            ////< version > 5.2.0 </ version >\r\n            ////</ dependency>\r\n\r\n            if (dataTable.Rows[0][10].ToString() == \"Positive\")\r\n            {\r\n                acroFields.SetField(\"A12\", dataTable.Rows[0][10].ToString());\r\n\r\n                acroFields.SetField(\"A13\", \"CT=\" + dataTable.Rows[0][11].ToString());\r\n            }\r\n            else\r\n            {\r\n                acroFields.SetField(\"A11\", dataTable.Rows[0][10].ToString());\r\n            }\r\n         \r\n\r\n            var image = iTextSharp.text.Image.GetInstance(@\"C:\\inetpub\\wwwroot\\Deployment\\\" + dataTable.Rows[0][12].ToString() + \".png\");\r\n    \r\n            var pushbuttonField = acroFields.GetNewPushbuttonFromField(\"A14\");\r\n           \r\n            pushbuttonField.Layout = PushbuttonField.LAYOUT_ICON_ONLY;\r\n           \r\n            pushbuttonField.ProportionalIcon = true;\r\n            pushbuttonField.Image = image;\r\n\r\n            acroFields.ReplacePushbuttonField(\"A14\", pushbuttonField.Field);\r\n        \r\n            pdfStamper.SetFullCompression();\r\n    \r\n            pdfStamper.FormFlattening = true;\r\n            pdfStamper.Close();\r\n        }\r\n        System.Net.WebClient wb = new System.Net.WebClient();\r\n        Response.ClearHeaders();\r\n        Response.Clear();\r\n        Response.Expires = 0;\r\n        Response.Buffer = true;\r\n        Response.AddHeader(\"Accept-Language\", \"zh-tw\");\r\n        Response.AddHeader(\"Content-Disposition\", \"Attachment;FileName=\" + System.Web.HttpUtility.UrlEncode(dataTable.Rows[0][6].ToString() + \".pdf\", System.Text.Encoding.UTF8));\r\n        //Response.ContentType = \"Application/pdf\";\r\n        //Response.BinaryWrite(wb.DownloadData(user_session));\r\n        //Response.End();\r\n          \r\n            var message = new MimeMessage();\r\n\r\n     \r\n            message.From.Add(new MailboxAddress(\"info\", \"info@tanbead.com\"));\r\n\r\n     \r\n            message.To.Add(new MailboxAddress(\"Wayne\", \"wayne.yu@tanbead.com\"));\r\n\r\n          \r\n            message.Subject = \"Test Report-XXX\";\r\n\r\n          \r\n            var bodyBuilder = new BodyBuilder();\r\n\r\n      \r\n            bodyBuilder.TextBody = \"文字內容\";\r\n\r\n    \r\n            bodyBuilder.HtmlBody = \"<p> HTML 內容 </p>\";\r\n\r\n           \r\n            //bodyBuilder.Attachments.Add(\"檔案路徑\");\r\n\r\n          \r\n            message.Body = new TextPart(\"plain\")\r\n            {\r\n                Text = @\"Dear sirs,\r\n\r\n The testing result is in attachment.\r\n\r\n\r\n\r\n\r\nRegards,\r\nABC Corps\r\n\r\n\r\n                 \"\r\n            };\r\n\r\n            using (var client = new SmtpClient())\r\n            {\r\n                client.Connect(\"mail.tanbead.com\", 25, false);\r\n\r\n                // Note: only needed if the SMTP server requires authentication\r\n                client.Authenticate(\"account\", \"password\");\r\n\r\n                client.Send(message);\r\n                client.Disconnect(true);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n```\r\nExpected behavior\r\nEmail Message and a Attachment document with proper content and size.\r\n\r\nMy environment:\r\nOS: [Windows 10]\r\nBrowser: [chrome]\r\nVisual Studio 2019 16.9.3\r\nMailkit 2.15.0\r\n\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1245/comments",
    "author": "wante98",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2021-08-23T17:17:33Z",
        "body": "Can you show me where you are adding the PDF attachment?\r\n\r\nLooks like you set the message body to a text/plain part:\r\n\r\n```csharp\r\nmessage.Body = new TextPart(\"plain\")\r\n            {\r\n                Text = @\"Dear sirs,\r\n\r\n The testing result is in attachment.\r\n\r\n\r\n\r\n\r\nRegards,\r\nABC Corps\r\n\r\n\r\n                 \"\r\n            };\r\n```\r\n\r\nIf the message body is a text/plain part, then it can't have attachments.\r\n\r\nMIME is a tree structure, so if you want a text body and an attachment, then you need to pack them into a multipart.\r\n\r\nThe BodyBuilder class is meant to help do this for you, but you aren't using it (and you commented out the line to add an attachment anyway)."
      }
    ]
  },
  {
    "number": 1235,
    "title": "The IMAP server replied to the 'FETCH' command with a 'BAD' response: Error in IMAP command FETCH: Invalid messageset",
    "created_at": "2021-07-18T16:11:07Z",
    "closed_at": "2021-07-18T16:59:55Z",
    "labels": [
      "question",
      "server-bug"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1235",
    "body": "**Describe the bug**\r\nIMailFolder.FetchAsync throws error above on one of my customer's mail servers. The code works perfectly on other mail servers\r\n`await MailFolder.FetchAsync(0, -1, (ulong) MailAccount.HighestModSeq, MessageSummaryItems.UniqueId, cts.Token)`\r\n\r\n**Platform (please complete the following information):**\r\n - OS: Windows\r\n - MailKit Version: latest\r\n\r\n**Exception**\r\nMailKit.Net.Imap.ImapCommandException\r\n  HResult=0x80131500\r\n  Message=The IMAP server replied to the 'FETCH' command with a 'BAD' response: Error in IMAP command FETCH: Invalid messageset (0.001 + 0.000 secs).\r\n  Source=MailKit\r\n  StackTrace:\r\n   at MailKit.Net.Imap.ImapFolder.<FetchAsync>d__233.MoveNext()\r\n\r\nHere is an snippet of the log:\r\nS: A00000006 OK Subscribe completed (0.001 + 0.000 secs).\r\nC: A00000007 LIST \"\" \"INBOX.%\" RETURN (SUBSCRIBED CHILDREN)\r\nS: * LIST (\\Subscribed \\HasNoChildren) \".\" INBOX.Done\r\nS: * LIST (\\Subscribed \\HasNoChildren) \".\" INBOX.spam\r\nS: * LIST (\\Subscribed \\HasNoChildren) \".\" INBOX.Trash\r\nS: * LIST (\\Subscribed \\HasNoChildren) \".\" INBOX.Sent\r\nS: * LIST (\\HasNoChildren) \".\" INBOX.Junk\r\nS: * LIST (\\Subscribed \\HasNoChildren) \".\" INBOX.Drafts\r\nS: * LIST (\\HasNoChildren) \".\" INBOX.Archive\r\nS: A00000007 OK List completed (0.001 + 0.000 secs).\r\nC: A00000008 FETCH 1:* UID (CHANGEDSINCE 0)\r\nS: A00000008 BAD Error in IMAP command FETCH: Invalid messageset (0.001 + 0.000 secs).\r\nC: A00000009 LOGOUT\r\n\r\nAny idea what's going on? \r\n\r\nThanks in advance\r\n\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1235/comments",
    "author": "DierkDroth",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2021-07-18T16:59:55Z",
        "body": "Seems like a bug in the IMAP server. The `seq-range` of `1:*` should ALWAYS be valid even if there are no messages in the folder, but I suspect that this IMAP server breaks in this condition.\r\n\r\nA work-around might be to only issue a FETCH request if `folder.Count > 0`."
      },
      {
        "user": "jstedfast",
        "created_at": "2021-07-18T17:08:31Z",
        "body": "It might also be that the server's error message is misleading and perhaps it is failing due to the modseq value being `0`.\r\n\r\nYou could try something like this:\r\n\r\n```csharp\r\nif ((ulong) MailAccount.HighestModSeq > 0)\r\n    await MailFolder.FetchAsync(0, -1, (ulong) MailAccount.HighestModSeq, MessageSummaryItems.UniqueId, cts.Token);\r\nelse\r\n    await MailFolder.FetchAsync(0, -1, MessageSummaryItems.UniqueId, cts.Token);\r\n```"
      },
      {
        "user": "jstedfast",
        "created_at": "2021-07-18T17:12:45Z",
        "body": "Let me know if neither of those solutions works. It's also *possible* that the server expects the `UID` token to be within parens (it shouldn't, but GMail, for example, expected macos like `ALL` and `FULL` to be within parens even tho that is not required by the spec).\r\n\r\nThe spec allows singleton fetch items to be sent w/o being in parens. E.g. parens are only needed if multiple FETCH items are specified:\r\n\r\n```\r\nfetch           = \"FETCH\" SP sequence-set SP (\"ALL\" / \"FULL\" / \"FAST\" /\r\n                  fetch-att / \"(\" fetch-att *(SP fetch-att) \")\")\r\n```\r\n\r\nIn other words, the server might be broken and expect the following command:\r\n\r\n```\r\nA00000008 FETCH 1:* (UID) (CHANGEDSINCE 0)\r\n```"
      },
      {
        "user": "DierkDroth",
        "created_at": "2021-07-19T08:03:22Z",
        "body": "> It might also be that the server's error message is misleading and perhaps it is failing due to the modseq value being `0`.\r\n> \r\n> You could try something like this:\r\n> \r\n> ```cs\r\n> if ((ulong) MailAccount.HighestModSeq > 0)\r\n>     await MailFolder.FetchAsync(0, -1, (ulong) MailAccount.HighestModSeq, MessageSummaryItems.UniqueId, cts.Token);\r\n> else\r\n>     await MailFolder.FetchAsync(0, -1, MessageSummaryItems.UniqueId, cts.Token);\r\n> ```\r\n\r\nHmm .. this worked on an initial attempt where the test account did no hold any emails. Now I as sent an email to that test account - and \"MailAccount.HighestModSeq > 0\" -  I again get the error\r\nC: A00000008 FETCH 1:* UID (CHANGEDSINCE 1)\r\nS: A00000008 BAD Error in IMAP command FETCH: Invalid messageset (0.001 + 0.000 secs).\r\n\r\nAlso: this appears to be a Dovecot email server"
      },
      {
        "user": "DierkDroth",
        "created_at": "2021-07-19T08:19:33Z",
        "body": "Arrgg ... this drives me nuts: on very next try it appeared to work. Here are the logs:\r\nC: A00000008 FETCH 1:* UID (CHANGEDSINCE 1)\r\nS: * 1 FETCH (UID 1 MODSEQ (2))\r\nA00000008 OK Fetch completed (0.001 + 0.000 secs).\r\n\r\nNot sure what's going on here. Any idea?!?"
      },
      {
        "user": "jstedfast",
        "created_at": "2021-07-19T14:02:27Z",
        "body": "You've just verified that your IMAP server doesn't handle FETCH requests when there are 0 messages in a folder.\r\n\r\nYou can work around this by doing the following:\r\n\r\n```csharp\r\nif (folder.Count > 0) {\r\n    if ((ulong) MailAccount.HighestModSeq > 0)\r\n        return await MailFolder.FetchAsync(0, -1, (ulong) MailAccount.HighestModSeq, MessageSummaryItems.UniqueId, cts.Token);\r\n    else\r\n        return await MailFolder.FetchAsync(0, -1, MessageSummaryItems.UniqueId, cts.Token);\r\n} else {\r\n    return Array.Empty<IMessageSummary>();\r\n}\r\n```"
      },
      {
        "user": "DierkDroth",
        "created_at": "2021-07-19T14:29:54Z",
        "body": "Hmm ... are you sure? This call\r\nC: A00000008 FETCH 1:* UID (CHANGEDSINCE 1)\r\n\r\n... did work as I had an email in the account and did not work right before as I had the same email in the account (please see references above).\r\n\r\nWhat am I missing?"
      },
      {
        "user": "jstedfast",
        "created_at": "2021-07-19T14:55:06Z",
        "body": "If it's not that the folder was empty, then it's just that the server is broken. There's no other explanation I can think of."
      },
      {
        "user": "DierkDroth",
        "created_at": "2021-07-19T14:56:27Z",
        "body": "Hmm ... ok thanks. I'll keep and eye and will get back to you as I had more input on the case."
      }
    ]
  },
  {
    "number": 1232,
    "title": "Web farm Idle",
    "created_at": "2021-07-09T13:30:48Z",
    "closed_at": "2021-07-09T18:39:08Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1232",
    "body": "What is a strategy to collect Imap emails in a multiple server setup.\r\nYou wouldnt have Idle run on many machines right?",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1232/comments",
    "author": "ghendo",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2021-07-09T18:39:08Z",
        "body": "Depends on what your needs are.\r\n\r\nIf your users expect instant notification, then yes, you'll probably want to run IDLE for each IMAP connection.\r\n\r\nOtherwise just periodically spin up a connection, check for new messages, and then disconnect."
      }
    ]
  },
  {
    "number": 1230,
    "title": "IMAP Message Flags Deleted problem",
    "created_at": "2021-07-07T09:04:09Z",
    "closed_at": "2021-07-08T02:27:30Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1230",
    "body": "Hello everyone,\r\n\r\nI don't know this is bug or something else that when i marked email as a deleted ( `client.Inbox.AddFlags(uid, MessageFlags.Deleted, true`  or `client.Inbox.SetFlags(uid, MessageFlags.Deleted, true` ) in Gmail, the message deleting permanently without any `Expunge()`. \r\n\r\nI just want to marked as a deleted ( and move trash folder directly after marked complete). \r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1230/comments",
    "author": "Tonay",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2021-07-08T02:27:30Z",
        "body": "This is a feature of GMail. You can go into your GMail settings in the IMAP/POP3 section and change the behavior of what GMail will do when you mark a message as deleted."
      }
    ]
  },
  {
    "number": 1229,
    "title": "Limitation for connection when sync email ",
    "created_at": "2021-07-05T04:32:37Z",
    "closed_at": "2021-07-08T15:43:31Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1229",
    "body": "**Describe the bug**\r\nWhen I synced email from mail server and got the problem with connection.\r\nLet's say I head around 1000 email folder and after that i got a lot of error related to connection. It seems like that one is a limitionation of mailkit, pls investigate and could you tell me how many email folder that mailkit can work fine?\r\nThanks!\r\n\r\n**Platform (please complete the following information):**\r\n - OS: [e.g. Windows, Linux, MacOS, iOS, Android, Windows Phone, etc.]\r\n - .NET Runtime: [e.g. CoreCLR, Mono]\r\n - .NET Framework: [e.g. .Net Core, .NET 4.5, UWP, etc.]\r\n - MailKit Version: \r\n\r\n**Exception**\r\nIf you got an exception, please include the exception Message *and* StackTrace.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Go to '...'\r\n2. Click on '....'\r\n3. Scroll down to '....'\r\n4. See error\r\n\r\n**Expected behavior**\r\nA clear and concise description of what you expected to happen.\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n**Protocol Logs**\r\nPlease include a protocol log (scrubbed of any authentication data), especially\r\nif you got an exception such as `Syntax error in XYZ. Unexpected token: ...`.\r\n\r\nTo get a protocol log, follow one of the following code snippets:\r\n\r\n```csharp\r\n// log to a file called 'imap.log'\r\nvar client = new ImapClient (new ProtocolLogger (\"imap.log\"));\r\n```\r\n\r\n```csharp\r\n// log to a file called 'pop3.log'\r\nvar client = new Pop3Client (new ProtocolLogger (\"pop3.log\"));\r\n```\r\n\r\n```csharp\r\n// log to a file called 'smtp.log'\r\nvar client = new SmtpClient (new ProtocolLogger (\"smtp.log\"));\r\n```\r\n\r\nNote: if the protocol log contains sensitive information, feel free to email it to me at\r\njestedfa@microsoft.com instead of including it in the GitHub issue.\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1229/comments",
    "author": "suphamba2401",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2021-07-05T13:43:21Z",
        "body": "Seems more like a server issue. MailKit does not have any limitation with the number of folders.\r\n\r\nPost your code and try getting some protocol logs and maybe I can help you diagnose any issues."
      },
      {
        "user": "jstedfast",
        "created_at": "2021-07-08T15:43:30Z",
        "body": "Are you using ImapClient.GetFolders()?\r\n\r\nWhen you use ImapClient.GetFolders(), it will list ALL folders and if you have tons of folders, that could cause the IMAP server to drop the connection (which is what it sounds like is happening to you).\r\n\r\nThis problem is made even worse with IMAP servers such as UW.IMAPd if some folders are symlinks that link back to other folders within the same folder structure because it creates an infinite loop of folders.\r\n\r\nThe way to get around this is to get 1 level of folders at a time like this:\r\n\r\n```csharp\r\nvar toplevel = client.GetFolder (client.PersonalNamespaces[0]);\r\nvar firstLevel = toplevel.GetSubfolders (...);\r\nforeach (var folder in firstLevel) {\r\n    var secondLevel = folder.GetSubfolders (...);\r\n}\r\n```\r\n\r\nAnd just recursively list the folders like that as far as you want to go.\r\n\r\nIf you aren't using ImapClient.GetFolders() or need further assistance, let me know."
      }
    ]
  },
  {
    "number": 1227,
    "title": "An error occurred while attempting to establish an SSL or TLS connection",
    "created_at": "2021-06-23T11:03:04Z",
    "closed_at": "2021-06-24T02:05:34Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1227",
    "body": "I am getting this error when I deploy the application on IIS on another computer.\r\n```An error occurred while attempting to establish an SSL or TLS connection.\r\n\r\nThe server's SSL certificate could not be validated for the following reasons:\r\n• The server certificate has the following errors:\r\n  • The revocation function was unable to check revocation for the certificate.\r\n  • The revocation function was unable to check revocation because the revocation server was offline.\r\n• An intermediate certificate has the following errors:\r\n  • The revocation function was unable to check revocation for the certificate.\r\n  • The revocation function was unable to check revocation because the revocation server was offline.\r\n```\r\n\r\n\r\nI already tried the following but the error gets thrown from time to time (email sending starts working after an hour or two)\r\n1. client.CheckCertificateRevocation = false;\r\n2. client.Connect(\"smtp-mail.outlook.com\", 587, SecureSocketOptions.None/Auto/SslOnConnect/StartTLS);\r\n\r\nIs there any way I can prevent this from happening?",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1227/comments",
    "author": "dheoxic",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2021-06-23T14:05:06Z",
        "body": "What those errors mean is that .NET's SslStream implementation was unable to check the revocation status (I'm sure you figured that part out).\r\n\r\n```csharp\r\nclient.CheckCertificateRevocation = false;\r\n```\r\n\r\nI would have expected the above code snippet to have worked, but I guess it didn't for you for some reason.\r\n\r\nThe next thing I would try, would be to try implementing your own certificate validation callback. Start with something like this:\r\n\r\n```csharp\r\nclient.ServerCertificateValidationCallback = MyCertificateValidationCallback;\r\n```\r\n\r\n```csharp\r\nstatic bool IsUnableToCheckRevocation (X509Chain chain)\r\n{\r\n    foreach (var status in chain.ChainStatus) {\r\n        if (status.Status == X509ChainStatusFlags.NoError || status.Status == X509ChainStatusFlags.OfflineRevocation || status.Status == X509ChainStatusFlags.RevocationStatusUnknown)\r\n            continue;\r\n\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nbool MyCertificateValidationCallback (object sender, X509Certificate certificate, X509Chain chain, SslPolicyErrors sslPolicyErrors)\r\n{\r\n    const SslPolicyErrors mask = SslPolicyErrors.RemoteCertificateNotAvailable | SslPolicyErrors.RemoteCertificateNameMismatch;\r\n\r\n    if (sslPolicyErrors == SslPolicyErrors.None)\r\n        return true;\r\n\r\n    if ((sslPolicyErrors & mask) == 0) {\r\n        // At this point, all that is left is SslPolicyErrors.RemoteCertificateChainErrors\r\n\r\n        // If the problem is a revocation check error, then ignore it.\r\n        if (IsUnableToCheckRevocation (chain))\r\n            return true;\r\n    }\r\n\r\n    return false;\r\n}\r\n```\r\n\r\nFYI: For the Connect() method call, port 587 should use `SecureSocketOptions.StartTls` (or any value *other than* `SecureSocketOptions.SslOnConnect` - `SslOnConnect` should only be used with port 465)."
      },
      {
        "user": "dheoxic",
        "created_at": "2021-06-23T14:50:31Z",
        "body": "I was trying to find a way to just ignore the revocation check error and just proceed with email sending but have no means of checking since this issue happens once/twice a week only, then the email functionality resumes working after an hour or two. I will try to implement your workaround and provide a feedback if the error still persists.\r\n\r\nThank you."
      },
      {
        "user": "jstedfast",
        "created_at": "2021-06-24T02:05:34Z",
        "body": "I'll close this in the meantime, but if you hit the issue again, just give me a poke and I'll do what I can to help you get past it."
      }
    ]
  },
  {
    "number": 1217,
    "title": "Rename attachment file before sending",
    "created_at": "2021-06-14T02:04:58Z",
    "closed_at": "2021-06-14T04:23:57Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1217",
    "body": "How do I rename an attachment before sending?\r\n\r\nI am currently using the code below but is not working. I think I'm missing something after the rename.\r\n\r\n                var msg = new MimeMessage();\r\n                var username = \"username\";\r\n                var password = \"password\";\r\n                var displayname = \"displayname\";\r\n\r\n                var from = new MailboxAddress(displayname, username);\r\n                var to = new MailboxAddress(\"User\", emailto);\r\n\r\n                msg.From.Add(from);\r\n                msg.To.Add(to);\r\n\r\n                msg.Subject = emailsubject;\r\n                var msgbody = new BodyBuilder\r\n                {\r\n                    HtmlBody = string.Format(@\"Message\"),\r\n                    TextBody = \"Message\"\r\n                };\r\n                msgbody.Attachments.Add(Path.Combine(file.directory, \"original name.zip\"));\r\n                foreach(var file in msg.Attachments)\r\n                {\r\n                    file.ContentDisposition.FileName = \"new name.zip\";\r\n                }\r\n                msg.Body = msgbody.ToMessageBody();",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1217/comments",
    "author": "dheoxic",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2021-06-14T15:29:38Z",
        "body": "Try `file.FileName = \"new name.zip\";`\r\n\r\nTechnically, what you are doing is \"correct\", but some mailers use the `name` property on the Content-Type header instead of the `filename` parameter on the Content-Disposition header. The `MimePart.FileName` property sets both."
      }
    ]
  },
  {
    "number": 1203,
    "title": "Gmail - An error occurred while attempting to establish an SSL or TLS connection",
    "created_at": "2021-05-26T15:15:22Z",
    "closed_at": "2021-05-26T15:55:41Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1203",
    "body": "Has anything changed on gmail - reopened an old program that was all working and getting this error on a .Connect( smtp.gmail.com,587)\r\n\r\nHave check that less secure is still on on gmail\r\n\r\nAny ideas before I start looking at it",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1203/comments",
    "author": "kaddrison",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2021-05-26T15:55:41Z",
        "body": "Depending on how old your program was, it might be because GMail changed their SSL certificates.\r\n\r\nThey changed them, I think, in January or February this year."
      }
    ]
  },
  {
    "number": 1193,
    "title": "How does google and outlook append mail in SENT automatically?",
    "created_at": "2021-04-15T09:12:17Z",
    "closed_at": "2021-04-15T15:21:12Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1193",
    "body": "When I send mail using smtp of Gmail or Outlook, it becomes an append automatically in the Sent folder on the server.\r\nbut If other smtp server like justhost ,then justhost does not append email in the sent folder.\r\nWhat is the reason behind this? Would they use imap internally?",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1193/comments",
    "author": "ysunil702",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2021-04-15T15:21:12Z",
        "body": "You have to append the message yourself because the SMTP protocol does not support doing that for you.\r\n\r\nThis doesn't really have anything to do with MailKit."
      },
      {
        "user": "ysunil702",
        "created_at": "2021-04-16T04:41:05Z",
        "body": "Thank you very much @jstedfast "
      }
    ]
  },
  {
    "number": 1192,
    "title": "Will Maintain email conversation on email server as well as local Is it possible? ",
    "created_at": "2021-04-14T11:53:30Z",
    "closed_at": "2021-04-15T15:36:08Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1192",
    "body": "(1)I want it to be updated in the sent folder of the mail server while  i reply to someone or created new email.\r\n\r\n(2)How do I know if I have spammed an email on email server and want it from the imap in local?",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1192/comments",
    "author": "ysunil702",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2021-04-14T17:42:35Z",
        "body": "I don't understand what you are asking in either question.\r\n\r\n1) What do you want updated on the mail server? I don't understand. Do you want the reply message to be appended to the Sent folder when you send the reply? If so, you need to send the message via SmtpCLient and then append the message to the sent folder using an ImapClient (see the ImapFolder.Append method).\r\n\r\n2) What...??? Are you asking how to tell if you've received a message marked as spam? Or are you asking if it's possible to tell if a message you've sent got marked as spam in the recipient's mailbox?"
      },
      {
        "user": "ysunil702",
        "created_at": "2021-04-15T04:49:10Z",
        "body": "Thank you for prompt reply @jstedfast . You understand the first question right. and my second question is \r\nWhen I retrieved  the email from server using IMAP, how will I know if there is a mail with spam?"
      },
      {
        "user": "jstedfast",
        "created_at": "2021-04-15T15:36:08Z",
        "body": "The same way you'd determine if the message was seen/deleted/etc. except that you'd use the IMessageSummary.Keywords property instead of IMessageSummary.Flags and you'd check for a keyword like `\"$Junk\"`.\r\n\r\n```csharp\r\nif (summary.Keywords.Contains (\"$Junk\")) {\r\n    // the message is marked as spam\r\n}\r\n```"
      },
      {
        "user": "ysunil702",
        "created_at": "2021-04-16T04:40:47Z",
        "body": "Thank you very much @jstedfast "
      }
    ]
  },
  {
    "number": 1183,
    "title": "Disconnecting/Connecting",
    "created_at": "2021-03-28T17:34:02Z",
    "closed_at": "2021-03-29T15:28:51Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1183",
    "body": "Is it idiomatic to open and close the connection for every email message sent or could you hold the connection open? Our use case is we are sending out emails in response to messages coming off of rabbit inside an Akka.NET actor and we can hold the connection open. Will this cause issues?",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1183/comments",
    "author": "kstatz12",
    "comments": [
      {
        "user": "kstatz12",
        "created_at": "2021-03-28T22:16:38Z",
        "body": "here is the actor stripped of any handling code \r\n```\r\npublic class CommandHandlerActor : DomainActor\r\n    {\r\n        private SmtpClient _client;\r\n        private ICancelable _pingTask;\r\n        public CommandHandlerActor() : base(Context.GetLogger())\r\n        {\r\n\r\n            ReceiveAsync<Ping>(async m =>\r\n            {\r\n                //This is required to keep the connection alive\r\n                await _client.NoOpAsync();\r\n            });\r\n        }\r\n\r\n        public static Props Props() => Akka.Actor.Props.Create(() => new CommandHandlerActor());\r\n\r\n        private async Task SendEmail(MimeMessage message) => await _client.SendAsync(message);\r\n\r\n        protected override void PreStart()\r\n        {\r\n            //Smtp client Setup\r\n            _client = new SmtpClient();\r\n            _client.Connect(MailOptions.Host, MailOptions.Port);\r\n            _client.Authenticate(MailOptions.UserName, MailOptions.Password);\r\n\r\n            //Create heartbeat scheduler\r\n            _pingTask = Context.System.Scheduler.ScheduleTellRepeatedlyCancelable(\r\n                TimeSpan.FromSeconds(0.1),\r\n                TimeSpan.FromSeconds(30),\r\n                Self,\r\n                new Ping(),\r\n                ActorRefs.NoSender);\r\n        }\r\n\r\n        protected override void PostStop()\r\n        {\r\n            //Scheduler Cleanup\r\n            _pingTask?.Cancel();\r\n\r\n            //SMTP client Cleanup\r\n            _client.Disconnect(true);\r\n            _client.Dispose();\r\n        }\r\n\r\n        private class Ping\r\n        {\r\n            public Ping()\r\n            {\r\n\r\n            }\r\n        }\r\n    }"
      },
      {
        "user": "jstedfast",
        "created_at": "2021-03-29T15:28:51Z",
        "body": "Ideally, if there won't be a long idle time between invocations of the Send/SendAsync methods, then it would be best to keep the connection alive.\r\n\r\nI would say that \"long\" would be more than 10 minutes but this may be dependent upon the SMTP server you are connected to, so you may need to do some experimentation.\r\n\r\nIf you have a bundle of messages to send and can just loop calling Send (or SendAsync), then I would *definitely* keep using the same client connection and I doubt you'll have any issues there."
      }
    ]
  },
  {
    "number": 1174,
    "title": "Mute logging of credentials",
    "created_at": "2021-03-11T17:23:10Z",
    "closed_at": "2021-06-30T18:06:35Z",
    "labels": [
      "enhancement",
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1174",
    "body": "Hi,\r\n\r\nI was wondering if there was any plan to create functionality for muting the ProtocolLogger's logging of credentials during authentication.\r\nIf PLAIN or LOGIN are used, the protocol logger logs the base64 credentials directly to the protocol log. \r\nThere currently is no functionality in place for omitting this information, which is not ideal for any potential collaborative efforts where debugging of ProtocolLogs is needed, but you don't want to share your login information with those debugging it. \r\n\r\nI know ProtocolLog can be extended and fed into IMAP or SMTP clients as parameters, but handling this information from the logger can be tricky. Namely in ImapClient, where there are multiple client-server interactions in Authenticate() after the authentication mechanism that shouldn't be muted (Capabilities, Namespace, Special Folders, etc).\r\n\r\nWould it be possible to implement something like:\r\n- Add a public flag to IProtocolLogger, something like AuthenticationInProgress\r\n- This flag is enabled in Imap/SmtpClient.AuthenticateAsync before the authentication happens, and disabled once it completes.\r\n- Anyone creating their own implementation of Protocol logger could have access to this parameter and simply skip any LogClient operations they so chose while this was in progress.\r\n\r\ni.e. In ImapClient.AuthenticateAsync, lines ~954-970\r\n\r\n```\r\nProtocolLogger.AuthenticationInProgress = true;\r\ntry {\r\n    ic = engine.QueueCommand (cancellationToken, null, command);\r\n    ic.ContinuationHandler = async (imap, cmd, text, xdoAsync) => {\r\n        var challenge = sasl.Challenge (text);\r\n        var buf = Encoding.ASCII.GetBytes (challenge + \"\\r\\n\");\r\n\r\n        if (xdoAsync) {\r\n            await imap.Stream.WriteAsync (buf, 0, buf.Length, cmd.CancellationToken).ConfigureAwait (false);\r\n\t    await imap.Stream.FlushAsync (cmd.CancellationToken).ConfigureAwait (false);\r\n        } else {\r\n            imap.Stream.Write (buf, 0, buf.Length, cmd.CancellationToken);\r\n    \t    imap.Stream.Flush (cmd.CancellationToken);\r\n        }\r\n    };\r\n\r\n    await engine.RunAsync (ic, doAsync).ConfigureAwait (false);\r\n\r\n    ProtocolLogger.AuthenticationInProgress = false;\r\n}\r\ncatch {\r\n    ProtocolLogger.AuthenticationInProgress = false;\r\n    throw;\r\n}\r\n```",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1174/comments",
    "author": "AdamCharron",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2021-03-11T20:39:37Z",
        "body": "I'll think about it."
      },
      {
        "user": "jstedfast",
        "created_at": "2021-03-11T22:31:29Z",
        "body": "I've considered adding this feature for quite a few years at this point. The problem is that I haven't found a clean way of doing it that only hides the secret strings (e.g. the user name and the password).\r\n\r\nIn my opinion, what is needed is the following:\r\n\r\n1. The IProtocolLogger should be modified to have a LogClientSecret() method or else LogClient() should take additional arguments that specify a \"secret range\" (or, actually, it would probably need to be a list of secret ranges).\r\n2. Not all SaslMechanisms should log their base64 challenges as \"secrets\". Only PLAIN and LOGIN likely need this (in addition to the POP3 USER/PASS commands and IMAP's LOGIN command).\r\n\r\nI don't like the AuthenticationInProgress idea because it's not very clean and it still means each logger implementation would have to be able to parse SMTP, POP3 or IMAP commands in order to hide secrets properly. Otherwise it would just blot out the entire command which sucks."
      },
      {
        "user": "AdamCharron",
        "created_at": "2021-03-12T00:21:14Z",
        "body": "Yeah this above case isn't a great solution, it was just a top-of-mind idea to get my point across.\r\nAs for your second point, the reason I asked instead of just doing it in my own code (add a simple string replace to an extended protocol logger's LogClient method) is that even though other mechanisms don't store the password in plaintext, some such as NTML or DIGEST-MD5 store them using a broken hash like MD4/5. This is probably nitpicky, and it all depends where you're comfortable drawing the line, but for those more paranoid/security-sensitive users (hello!) it is still less than ideal and a possible point of compromise if those protocol logs ever get shared."
      },
      {
        "user": "jstedfast",
        "created_at": "2021-06-25T17:39:31Z",
        "body": "I have an idea for how this could work fairly cleanly... stay tuned."
      },
      {
        "user": "jstedfast",
        "created_at": "2021-06-25T21:34:14Z",
        "body": "Not 100% convinced the AuthSecret struct name is the best choice or the name of the interface, but the API seems decent otherwise.\r\n\r\nComments welcome."
      },
      {
        "user": "jstedfast",
        "created_at": "2021-06-30T14:42:52Z",
        "body": "At this point I have unit test coverage for all of the authentication secret detection backends (SMTP, POP3 and IMAP) and test coverage for SmtpClient and Pop3Client but not ImapClient (yet). I'll try to get ImapClient unit tests written tonight if I have free time.\r\n\r\nFeeling pretty confident that it works well now after some fixes I added last night.\r\n\r\nTry giving it a whirl and let me know if it'll work for you."
      }
    ]
  },
  {
    "number": 1173,
    "title": "SMTP: Get UniqueID on sent mail?",
    "created_at": "2021-03-11T13:53:14Z",
    "closed_at": "2021-03-11T20:20:05Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1173",
    "body": "What's the correct way to get the UniqueID of an email which I just have sent?\r\n\r\nWhen sending a mail it would make it to the SENT folder. Hence, I assume it would have a UniqueID?!?",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1173/comments",
    "author": "DierkDroth",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2021-03-11T20:20:05Z",
        "body": "SmtpClient doesn't append it to the Sent folder (it's completely separate and independent from IMAP: and knows nothing about folders).\r\n\r\nWhat you need to do is to use the ImapClient to append the message to the Sent folder. The `IMailFolder.Append (...)` methods will return a UID (if the server supports it).\r\n"
      },
      {
        "user": "DierkDroth",
        "created_at": "2021-03-12T17:20:27Z",
        "body": "Thanks @jstedfast. That helps"
      }
    ]
  },
  {
    "number": 1172,
    "title": "IMAP: custom folder not showing",
    "created_at": "2021-03-10T15:02:41Z",
    "closed_at": "2021-03-27T13:41:13Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1172",
    "body": "Hi,\r\n\r\nHere is how I create a custom folder:\r\n`archiveFolder = await client.Inbox.GetSubfolderAsync(\"Archive\", cts.Token);`\r\n`if (archiveFolder == null)`\r\n`    archiveFolder = await client.GetFolder(client.PersonalNamespaces[0]).CreateAsync(\"Archive\", true, cts.Token);`\r\n`await archiveFolder.SubscribeAsync(cts.Token);`\r\n\r\nCreation appears to be successful since \"Archive\" is reported by `client.GetFolders`.\r\n\r\nHowever, it does not show e.g. in my Outlook client which is connected to the IMAP account. Restarting Outlook makes no difference.\r\n\r\nAny idea what I'm doing wrong?",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1172/comments",
    "author": "DierkDroth",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2021-03-10T15:43:18Z",
        "body": "I was going to recommend subscribing to the Archive folder, but then I noticed you were already doing that...\r\n\r\nI'm not sure :-\\"
      },
      {
        "user": "jstedfast",
        "created_at": "2021-03-27T13:41:13Z",
        "body": "You are doing everything correctly. The problem is with Outlook."
      }
    ]
  },
  {
    "number": 1171,
    "title": "HttpProxyClient: 403 Forbidden Error",
    "created_at": "2021-03-09T17:21:28Z",
    "closed_at": "2021-03-11T20:40:22Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1171",
    "body": "I am trying to connect to my mail server via a HttpProxyClient with following code:\r\n\r\n `            using (var Client = new ImapClient())\r\n            {\r\n                if (Settings.Default.Proxy)\r\n                {\r\n              var credentials = new NetworkCredential(textBoxProxyUser.Text, textBoxProxyPwd.Text);\r\n              Client.ProxyClient = new HttpProxyClient(textBox_ProxyHost.Text, (int)numericUpDownProxyPort.Value, credentials);\r\n               }\r\n                Client.Connect(textBox_ServerIn.Text, (int)numericUpDown_PortIn.Value, MailKit.Security.SecureSocketOptions.SslOnConnect);\r\n`\r\nI get this error message:\r\n\r\n`Informationen über das Aufrufen von JIT-Debuggen\r\nanstelle dieses Dialogfelds finden Sie am Ende dieser Meldung.\r\n\r\nAusnahmetext\r\nMailKit.Net.Proxy.ProxyProtocolException: Failed to connect to secureimap.t-online.de:993: HTTP/1.1 403 Forbidden\r\n   bei MailKit.Net.Proxy.HttpProxyClient.<ConnectAsync>d__2.MoveNext()\r\n--- Ende der Stapelüberwachung vom vorhergehenden Ort, an dem die Ausnahme ausgelöst wurde ---\r\n   bei System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   bei System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   bei MailKit.Net.Proxy.HttpProxyClient.Connect(String host, Int32 port, CancellationToken cancellationToken)\r\n   bei MailKit.Net.Proxy.ProxyClient.Connect(String host, Int32 port, Int32 timeout, CancellationToken cancellationToken)\r\n   bei MailKit.MailService.<ConnectSocket>d__56.MoveNext()\r\n--- Ende der Stapelüberwachung vom vorhergehenden Ort, an dem die Ausnahme ausgelöst wurde ---\r\n   bei System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   bei System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   bei System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   bei MailKit.Net.Imap.ImapClient.<ConnectAsync>d__88.MoveNext()\r\n--- Ende der Stapelüberwachung vom vorhergehenden Ort, an dem die Ausnahme ausgelöst wurde ---\r\n   bei System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   bei System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   bei MailKit.Net.Imap.ImapClient.Connect(String host, Int32 port, SecureSocketOptions options, CancellationToken cancellationToken)\r\n   bei MailKit.MailService.Connect(String host, Int32 port, Boolean useSsl, CancellationToken cancellationToken)\r\n   bei CSVGrabber.ControlPanel.button_test_Click(Object sender, EventArgs e)\r\n   bei System.Windows.Forms.Control.OnClick(EventArgs e)\r\n   bei System.Windows.Forms.Button.OnClick(EventArgs e)\r\n   bei System.Windows.Forms.Button.OnMouseUp(MouseEventArgs mevent)\r\n   bei System.Windows.Forms.Control.WmMouseUp(Message& m, MouseButtons button, Int32 clicks)\r\n   bei System.Windows.Forms.Control.WndProc(Message& m)\r\n   bei System.Windows.Forms.ButtonBase.WndProc(Message& m)\r\n   bei System.Windows.Forms.Button.WndProc(Message& m)\r\n   bei System.Windows.Forms.Control.ControlNativeWindow.OnMessage(Message& m)\r\n   bei System.Windows.Forms.Control.ControlNativeWindow.WndProc(Message& m)\r\n   bei System.Windows.Forms.NativeWindow.Callback(IntPtr hWnd, Int32 msg, IntPtr wparam, IntPtr lparam)\r\n Geladene Assemblys \r\nmscorlib\r\n    Assembly-Version: 4.0.0.0.\r\n    Win32-Version: 4.8.4300.0 built by: NET48REL1LAST_C.\r\n    CodeBase: file:///C:/Windows/Microsoft.NET/Framework/v4.0.30319/mscorlib.dll.\r\n----------------------------------------\r\nCSVGrabber\r\n    Assembly-Version: 1.0.0.0.\r\n    Win32-Version: 1.0.0.0.\r\n    CodeBase: file:///C:/Program%20Files%20(x86)/IISM/CSVGrabber/CSVGrabber.exe.\r\n----------------------------------------\r\nSystem.Windows.Forms\r\n    Assembly-Version: 4.0.0.0.\r\n    Win32-Version: 4.8.4270.0 built by: NET48REL1LAST_C.\r\n    CodeBase: file:///C:/WINDOWS/Microsoft.Net/assembly/GAC_MSIL/System.Windows.Forms/v4.0_4.0.0.0__b77a5c561934e089/System.Windows.Forms.dll.\r\n----------------------------------------\r\nSystem\r\n    Assembly-Version: 4.0.0.0.\r\n    Win32-Version: 4.8.4300.0 built by: NET48REL1LAST_C.\r\n    CodeBase: file:///C:/WINDOWS/Microsoft.Net/assembly/GAC_MSIL/System/v4.0_4.0.0.0__b77a5c561934e089/System.dll.\r\n----------------------------------------\r\nSystem.Drawing\r\n    Assembly-Version: 4.0.0.0.\r\n    Win32-Version: 4.8.3761.0 built by: NET48REL1.\r\n    CodeBase: file:///C:/WINDOWS/Microsoft.Net/assembly/GAC_MSIL/System.Drawing/v4.0_4.0.0.0__b03f5f7f11d50a3a/System.Drawing.dll.\r\n----------------------------------------\r\nSystem.Configuration\r\n    Assembly-Version: 4.0.0.0.\r\n    Win32-Version: 4.8.4190.0 built by: NET48REL1LAST_B.\r\n    CodeBase: file:///C:/WINDOWS/Microsoft.Net/assembly/GAC_MSIL/System.Configuration/v4.0_4.0.0.0__b03f5f7f11d50a3a/System.Configuration.dll.\r\n----------------------------------------\r\nSystem.Core\r\n    Assembly-Version: 4.0.0.0.\r\n    Win32-Version: 4.8.4320.0 built by: NET48REL1LAST_C.\r\n    CodeBase: file:///C:/WINDOWS/Microsoft.Net/assembly/GAC_MSIL/System.Core/v4.0_4.0.0.0__b77a5c561934e089/System.Core.dll.\r\n----------------------------------------\r\nSystem.Xml\r\n    Assembly-Version: 4.0.0.0.\r\n    Win32-Version: 4.8.3761.0 built by: NET48REL1.\r\n    CodeBase: file:///C:/WINDOWS/Microsoft.Net/assembly/GAC_MSIL/System.Xml/v4.0_4.0.0.0__b77a5c561934e089/System.Xml.dll.\r\n----------------------------------------\r\nAccessibility\r\n    Assembly-Version: 4.0.0.0.\r\n    Win32-Version: 4.8.3761.0 built by: NET48REL1.\r\n    CodeBase: file:///C:/WINDOWS/Microsoft.Net/assembly/GAC_MSIL/Accessibility/v4.0_4.0.0.0__b03f5f7f11d50a3a/Accessibility.dll.\r\n----------------------------------------\r\nMailKit\r\n    Assembly-Version: 2.9.0.0.\r\n    Win32-Version: 2.9.0.0.\r\n    CodeBase: file:///C:/Program%20Files%20(x86)/IISM/CSVGrabber/MailKit.DLL.\r\n----------------------------------------\r\nMimeKit\r\n    Assembly-Version: 2.9.0.0.\r\n    Win32-Version: 2.9.1.0.\r\n    CodeBase: file:///C:/Program%20Files%20(x86)/IISM/CSVGrabber/MimeKit.DLL.\r\n----------------------------------------\r\nSystem.Windows.Forms.resources\r\n    Assembly-Version: 4.0.0.0.\r\n    Win32-Version: 4.8.3761.0 built by: NET48REL1.\r\n    CodeBase: file:///C:/WINDOWS/Microsoft.Net/assembly/GAC_MSIL/System.Windows.Forms.resources/v4.0_4.0.0.0_de_b77a5c561934e089/System.Windows.Forms.resources.dll.\r\n----------------------------------------\r\nmscorlib.resources\r\n    Assembly-Version: 4.0.0.0.\r\n    Win32-Version: 4.8.3761.0 built by: NET48REL1.\r\n    CodeBase: file:///C:/WINDOWS/Microsoft.Net/assembly/GAC_MSIL/mscorlib.resources/v4.0_4.0.0.0_de_b77a5c561934e089/mscorlib.resources.dll.\r\n----------------------------------------\r\n\r\n************** JIT-Debuggen **************\r\nUm das JIT-Debuggen (Just-In-Time) zu aktivieren, muss in der\r\nKonfigurationsdatei der Anwendung oder des Computers\r\n(machine.config) der jitDebugging-Wert im Abschnitt system.windows.forms festgelegt werden.\r\nDie Anwendung muss mit aktiviertem Debuggen kompiliert werden.\r\n\r\nZum Beispiel:\r\n\r\n<configuration>\r\n    <system.windows.forms jitDebugging=\"true\" />\r\n</configuration>\r\n\r\nWenn das JIT-Debuggen aktiviert ist, werden alle nicht behandelten\r\nAusnahmen an den JIT-Debugger gesendet, der auf dem\r\nComputer registriert ist, und nicht in diesem Dialogfeld behandelt.\r\n`\r\n\r\nAny clue, what I do wrong?",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1171/comments",
    "author": "muellersjan",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2021-03-09T20:28:22Z",
        "body": "This suggests you used the wrong credentials to authenticate with the proxy server."
      },
      {
        "user": "muellersjan",
        "created_at": "2021-03-09T23:08:46Z",
        "body": "oh, that's a good hint, wasn't really thinking about that... Thanks for the fast reply, I will come back to you as soon as I could test it"
      }
    ]
  },
  {
    "number": 1168,
    "title": "connect to IMAP using proxy",
    "created_at": "2021-03-06T02:35:40Z",
    "closed_at": "2021-03-27T13:40:38Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1168",
    "body": "Hello,\r\n\r\nI want to connect to IMAP using proxy but it's not work!\r\ncode I'm using:\r\n\r\n`using (var client = new ImapClient())\r\n                {\r\n                        client.ProxyClient = new HttpProxyClient(proxyAd, proxyPort);\r\n                        client.Connect(hostName, port , true);\r\n                        client.Authenticate(login, pass);\r\n                      }\r\n                        `\r\n                        \r\nHelp me please",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1168/comments",
    "author": "hossein0939",
    "comments": [
      {
        "user": "suchislife801",
        "created_at": "2021-03-06T03:31:34Z",
        "body": "If this was stackoverflow, I would feel inclined to ask that you **post your error console logs**."
      },
      {
        "user": "jstedfast",
        "created_at": "2021-03-27T13:40:38Z",
        "body": "@hossein0939 I need more information.\r\n\r\nFor example: what, exactly, is the error you are getting?\r\n"
      }
    ]
  },
  {
    "number": 1163,
    "title": ".MessageFlagsChanged not working as expected when mail was marked as 'Unread'",
    "created_at": "2021-03-02T20:10:57Z",
    "closed_at": "2021-03-02T21:02:02Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1163",
    "body": "I see these event args as I marked a mail in my IMAP INBOX folder as 'Unread'\r\n`{MailKit.MessageFlagsChangedEventArgs}\r\n    Flags: None\r\n    Index: 266\r\n    Keywords: Count = 0\r\n    ModSeq: 539\r\n    UniqueId: null\r\n    UserFlags: Count = 0`\r\n    \r\nUnfortunately .UniqueId is not set which makes it impossible to find the matching mail in the local cache. Hence, I could not update the Read/Unread status of that mail in the local cache.\r\n\r\nWhat am I missing?",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1163/comments",
    "author": "DierkDroth",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2021-03-02T21:02:02Z",
        "body": "In general, MessageFlagsChangedEventArgs will not have a UID because the IMAP protocol does not require it and most IMAP servers only send the sequence number of the message.\r\n\r\nIf you are in the process of doing a UID FETCH request, then the UID will be set.\r\n\r\nYou need to have a way of mapping the index of the message to a UID, unfortunately."
      }
    ]
  },
  {
    "number": 1162,
    "title": "CONDSTORE extension: IMailFolder.ModSeqChanged not fired?!?",
    "created_at": "2021-03-02T15:42:42Z",
    "closed_at": "2021-03-03T05:36:34Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1162",
    "body": "I'm working with an IMAP server which has CONDSTORE supported\r\n`client.Capabilities.HasFlag(ImapCapabilities.CondStore) == true`\r\n\r\nHere is my code:\r\nOpening the INBOX folder\r\n`await client.Inbox.OpenAsync(FolderAccess.ReadWrite, cts.Token)`\r\n\r\nFetching the initial set of mails\r\n`await client.Inbox.FetchAsync(0, -1, <highestModSeq>, MessageSummaryItems.UniqueId, cts.Token)`\r\n\r\nSubscribing to .ModSeqChanged\r\n`client.Inbox.ModSeqChanged += (s, e) => messagesArrived = true;`\r\nHowever, that handler is not triggered, even as I'm waiting a couple of minutes after a new mail made it to the INBOX\r\n\r\nI even tried calling\r\n`await client.NoOpAsync(cts.Token);`\r\n... but that didn't help neither\r\n\r\nAny idea what I'm doing wrong?",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1162/comments",
    "author": "DierkDroth",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2021-03-02T16:49:46Z",
        "body": "I'm not sure if mod-seq changes when new mail arrives, it may only change when the flags of a message are changed.\r\n\r\nIf you get a protocol log, does the log contain mod-seq changes that MailKit isn't emitting?"
      },
      {
        "user": "DierkDroth",
        "created_at": "2021-03-02T20:07:03Z",
        "body": "Ah, I see what you're saying. Let me work on that... thanks"
      },
      {
        "user": "DierkDroth",
        "created_at": "2021-03-03T05:36:34Z",
        "body": "OK, I got it working by just using the .CountChanged and .MessageExpunged events.\r\n\r\nBasically the CONDSTORE extension then 'only' makes a difference on system restart to avoid pulling mails again which the system already has seen..\r\n\r\nThanks again for your help"
      }
    ]
  },
  {
    "number": 1159,
    "title": "How to fetch only 'new' messages?",
    "created_at": "2021-02-28T06:04:54Z",
    "closed_at": "2021-02-28T21:33:20Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1159",
    "body": "When restarting the local system it only should read the IMAP messages which it doesn't have in its local cache yet. The target INBOX might hold gazillions of mails (so does the local cache), hence calling MailKit with a list of UniqueIds for mails which are known to the local system yet is not an option. Nor could we assume that the IMAP server would support a particular extension.\r\n\r\nWhat would be the correct way to handle that situation?",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1159/comments",
    "author": "DierkDroth",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2021-02-28T21:33:19Z",
        "body": "You can use `folder.Search (SearchQuery.All)` to get the full list of UIDs that exist on the server and remove the UIDs that your local cache knows about.\r\n\r\nFrom there, you can use `folder.Fetch (uids, ...)` to get the summary info for the messages you don't already have cached.\r\n\r\nNot sure if this is helpful at all, but this past summer I started working on trying to figure out a generic API for caching for IMAP. I never finished and the following code is all untested (so use at your own risk), but my hope is that it will at least provide a starting point for this kind of thing:\r\n\r\nCachedImapClient.cs:\r\n```csharp\r\nusing MailKit;\r\nusing MailKit.Net.Imap;\r\n\r\nnamespace MailKitCache\r\n{\r\n\tpublic class CachedImapClient : ImapClient\r\n\t{\r\n\t\tpublic CachedImapClient (string cacheDir, IProtocolLogger protocolLogger) : base (protocolLogger)\r\n\t\t{\r\n\t\t\tCacheDir = cacheDir;\r\n\t\t}\r\n\r\n\t\tpublic CachedImapClient (string cacheDir) : base ()\r\n\t\t{\r\n\t\t\tCacheDir = cacheDir;\r\n\t\t}\r\n\r\n\t\tprotected override ImapFolder CreateImapFolder (ImapFolderConstructorArgs args)\r\n\t\t{\r\n\t\t\treturn new CachedImapFolder (CacheDir, args);\r\n\t\t}\r\n\r\n\t\tpublic string CacheDir {\r\n\t\t\tget; private set;\r\n\t\t}\r\n\t}\r\n}\r\n```\r\n\r\nCachedImapFolder.cs:\r\n```csharp\r\nusing System;\r\nusing System.IO;\r\nusing System.Text;\r\nusing System.Threading;\r\nusing System.Threading.Tasks;\r\n\r\nusing MailKit;\r\nusing MailKit.Search;\r\nusing MailKit.Net.Imap;\r\n\r\nnamespace MailKitCache\r\n{\r\n\tpublic class CachedImapFolder : ImapFolder\r\n\t{\r\n\t\tconst MessageSummaryItems CachedSummaryItems = MessageSummaryItems.UniqueId | MessageSummaryItems.BodyStructure | MessageSummaryItems.Envelope | MessageSummaryItems.Flags |\r\n\t\t\tMessageSummaryItems.InternalDate | MessageSummaryItems.ModSeq | MessageSummaryItems.References | MessageSummaryItems.Size;\r\n\t\treadonly MessageCache cache;\r\n\r\n\t\tpublic CachedImapFolder (string cacheDir, ImapFolderConstructorArgs args) : base (args)\r\n\t\t{\r\n\t\t\tcache = new MessageCache (this, cacheDir, CachedSummaryItems);\r\n\t\t}\r\n\r\n\t\tprotected override void OnOpened ()\r\n\t\t{\r\n\t\t\tcache.OpenDatabase ();\r\n\t\t\tbase.OnOpened ();\r\n\t\t}\r\n\r\n\t\tprotected override void OnClosed ()\r\n\t\t{\r\n\t\t\tcache.CloseDatabase ();\r\n\t\t\tbase.OnClosed ();\r\n\t\t}\r\n\r\n\t\tprotected override void OnDeleted ()\r\n\t\t{\r\n\t\t\t// TODO: delete the cache\r\n\t\t\tbase.OnDeleted ();\r\n\t\t}\r\n\r\n\t\tprotected override void OnParentFolderRenamed ()\r\n\t\t{\r\n\t\t\t// TODO: move the cache?\r\n\t\t\tbase.OnParentFolderRenamed ();\r\n\t\t}\r\n\r\n\t\tprotected override void OnRenamed (string oldName, string newName)\r\n\t\t{\r\n\t\t\t// TODO: move the cache\r\n\t\t\tbase.OnRenamed (oldName, newName);\r\n\t\t}\r\n\r\n\t\tprotected override Stream CreateStream (UniqueId? uid, string section, int offset, int length)\r\n\t\t{\r\n\t\t\treturn cache.CreateStream (uid, section, offset, length);\r\n\t\t}\r\n\r\n\t\tprotected override Stream CommitStream (Stream stream, UniqueId uid, string section, int offset, int length)\r\n\t\t{\r\n\t\t\treturn cache.CommitStream (stream, uid, section, offset, length);\r\n\t\t}\r\n\t}\r\n}\r\n```\r\n\r\nDbConnectionExtensions.cs:\r\n```csharp\r\nusing System;\r\nusing System.Data;\r\nusing System.Text;\r\nusing System.Threading;\r\nusing System.Data.Common;\r\nusing System.Threading.Tasks;\r\n\r\nnamespace MailKitCache\r\n{\r\n\tpublic static class DbConnectionExtensions\r\n\t{\r\n\t\tstatic void Build (StringBuilder command, DataTable table, DataColumn column, ref int primaryKeys, bool addColumn)\r\n\t\t{\r\n\t\t\tcommand.Append (column.ColumnName);\r\n\t\t\tcommand.Append (' ');\r\n\r\n\t\t\tif (column.DataType == typeof (long) || column.DataType == typeof (int) || column.DataType == typeof (bool)) {\r\n\t\t\t\tcommand.Append (\"INTEGER\");\r\n\t\t\t} else if (column.DataType == typeof (byte[])) {\r\n\t\t\t\tcommand.Append (\"BLOB\");\r\n\t\t\t} else if (column.DataType == typeof (DateTime)) {\r\n\t\t\t\tcommand.Append (\"DATE\");\r\n\t\t\t} else if (column.DataType == typeof (string)) {\r\n\t\t\t\tcommand.Append (\"TEXT\");\r\n\t\t\t} else {\r\n\t\t\t\tthrow new NotImplementedException ();\r\n\t\t\t}\r\n\r\n\t\t\tbool isPrimaryKey = false;\r\n\t\t\tif (table != null && table.PrimaryKey != null && primaryKeys < table.PrimaryKey.Length) {\r\n\t\t\t\tfor (int i = 0; i < table.PrimaryKey.Length; i++) {\r\n\t\t\t\t\tif (column == table.PrimaryKey[i]) {\r\n\t\t\t\t\t\tcommand.Append (\" PRIMARY KEY\");\r\n\t\t\t\t\t\tisPrimaryKey = true;\r\n\t\t\t\t\t\tprimaryKeys++;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (column.AutoIncrement)\r\n\t\t\t\tcommand.Append (\" AUTOINCREMENT\");\r\n\r\n\t\t\tif (column.Unique && !isPrimaryKey)\r\n\t\t\t\tcommand.Append (\" UNIQUE\");\r\n\r\n\t\t\t// Note: Normally we'd want to include NOT NULL, but we can't *add* new columns with the NOT NULL restriction\r\n\t\t\tif (!addColumn && !column.AllowDBNull)\r\n\t\t\t\tcommand.Append (\" NOT NULL\");\r\n\t\t}\r\n\r\n\t\tstatic string GetCreateTableCommand (DataTable table)\r\n\t\t{\r\n\t\t\tvar command = new StringBuilder (\"CREATE TABLE IF NOT EXISTS \");\r\n\t\t\tint primaryKeys = 0;\r\n\r\n\t\t\tcommand.Append (table.TableName);\r\n\t\t\tcommand.Append ('(');\r\n\r\n\t\t\tforeach (DataColumn column in table.Columns) {\r\n\t\t\t\tBuild (command, table, column, ref primaryKeys, false);\r\n\t\t\t\tcommand.Append (\", \");\r\n\t\t\t}\r\n\r\n\t\t\tif (table.Columns.Count > 0)\r\n\t\t\t\tcommand.Length -= 2;\r\n\r\n\t\t\tcommand.Append (')');\r\n\r\n\t\t\treturn command.ToString ();\r\n\t\t}\r\n\r\n\t\tpublic static void CreateTable (this DbConnection connection, DataTable table)\r\n\t\t{\r\n\t\t\tusing (var command = connection.CreateCommand ()) {\r\n\t\t\t\tcommand.CommandText = GetCreateTableCommand (table);\r\n\t\t\t\tcommand.CommandType = CommandType.Text;\r\n\t\t\t\tcommand.ExecuteNonQuery ();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tpublic static async Task CreateTableAsync (this DbConnection connection, DataTable table, CancellationToken cancellationToken)\r\n\t\t{\r\n\t\t\tusing (var command = connection.CreateCommand ()) {\r\n\t\t\t\tcommand.CommandText = GetCreateTableCommand (table);\r\n\t\t\t\tcommand.CommandType = CommandType.Text;\r\n\r\n\t\t\t\tawait command.ExecuteNonQueryAsync (cancellationToken).ConfigureAwait (false);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tstatic string GetAddColumnCommand (DataTable table, DataColumn column)\r\n\t\t{\r\n\t\t\tvar command = new StringBuilder (\"ALTER TABLE \");\r\n\t\t\tint primaryKeys = table.PrimaryKey?.Length ?? 0;\r\n\r\n\t\t\tcommand.Append (table.TableName);\r\n\t\t\tcommand.Append (\" ADD COLUMN \");\r\n\t\t\tBuild (command, table, column, ref primaryKeys, true);\r\n\r\n\t\t\treturn command.ToString ();\r\n\t\t}\r\n\r\n\t\tpublic static void AddTableColumn (this DbConnection connection, DataTable table, DataColumn column)\r\n\t\t{\r\n\t\t\tusing (var command = connection.CreateCommand ()) {\r\n\t\t\t\tcommand.CommandText = GetAddColumnCommand (table, column);\r\n\t\t\t\tcommand.CommandType = CommandType.Text;\r\n\t\t\t\tcommand.ExecuteNonQuery ();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tpublic static async Task AddTableColumnAsync (this DbConnection connection, DataTable table, DataColumn column, CancellationToken cancellationToken)\r\n\t\t{\r\n\t\t\tusing (var command = connection.CreateCommand ()) {\r\n\t\t\t\tcommand.CommandText = GetAddColumnCommand (table, column);\r\n\t\t\t\tcommand.CommandType = CommandType.Text;\r\n\r\n\t\t\t\tawait command.ExecuteNonQueryAsync (cancellationToken).ConfigureAwait (false);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n```\r\n\r\nDbDataReaderExtensions.cs:\r\n```csharp\r\nusing System;\r\nusing System.Data.Common;\r\n\r\nusing MimeKit;\r\nusing MimeKit.Utils;\r\n\r\nusing MailKit;\r\n\r\nnamespace MailKitCache\r\n{\r\n\tpublic static class DbDataReaderExensions\r\n\t{\r\n\t\tpublic static BodyPart GetBodyStructure (this DbDataReader reader, int ordinal)\r\n\t\t{\r\n\t\t\tvar text = reader.GetString (ordinal);\r\n\r\n\t\t\tif (string.IsNullOrEmpty (text))\r\n\t\t\t\treturn null;\r\n\r\n\t\t\tBodyPart.TryParse (text, out var body);\r\n\r\n\t\t\treturn body;\r\n\t\t}\r\n\r\n\t\tpublic static InternetAddressList GetInternetAddressList (this DbDataReader reader, int ordinal)\r\n\t\t{\r\n\t\t\tvar text = reader.GetString (ordinal);\r\n\r\n\t\t\treturn InternetAddressList.Parse (text ?? string.Empty);\r\n\t\t}\r\n\r\n\t\tpublic static MessageFlags GetMessageFlags (this DbDataReader reader, int ordinal)\r\n\t\t{\r\n\t\t\treturn (MessageFlags) reader.GetInt32 (ordinal);\r\n\t\t}\r\n\r\n\t\tpublic static MessageIdList GetReferences (this DbDataReader reader, int ordinal)\r\n\t\t{\r\n\t\t\tvar text = reader.GetString (ordinal);\r\n\t\t\tvar references = new MessageIdList ();\r\n\r\n\t\t\tif (!string.IsNullOrEmpty (text)) {\r\n\t\t\t\tforeach (var msgid in MimeUtils.EnumerateReferences (text))\r\n\t\t\t\t\treferences.Add (msgid);\r\n\t\t\t}\r\n\r\n\t\t\treturn references;\r\n\t\t}\r\n\r\n\t\tpublic static ulong GetUInt64 (this DbDataReader reader, int ordinal)\r\n\t\t{\r\n\t\t\treturn (ulong) reader.GetInt64 (ordinal);\r\n\t\t}\r\n\r\n\t\tpublic static UniqueId GetUniqueId (this DbDataReader reader, int ordinal, uint uidValidity)\r\n\t\t{\r\n\t\t\treturn new UniqueId (uidValidity, (uint) reader.GetInt64 (ordinal));\r\n\t\t}\r\n\t}\r\n}\r\n```\r\n\r\nMessageCache.cs (aka the real meat):\r\n```csharp\r\nusing System;\r\nusing System.IO;\r\nusing System.Data;\r\nusing System.Text;\r\nusing System.Threading;\r\nusing System.Data.Common;\r\nusing System.Data.SQLite;\r\nusing System.Globalization;\r\nusing System.Threading.Tasks;\r\nusing System.Collections.Generic;\r\n\r\nusing MimeKit;\r\nusing MailKit;\r\nusing MailKit.Search;\r\n\r\nnamespace MailKitCache\r\n{\r\n\tpublic class MessageCache : IDisposable\r\n\t{\r\n\t\tstatic readonly DateTime InvalidDateTime = new DateTime (0, DateTimeKind.Utc);\r\n\r\n\t\tstatic readonly DataTable[] DataTables;\r\n\t\tstatic readonly DataTable MessageTable;\r\n\t\tstatic readonly DataTable KeywordsTable;\r\n\t\tstatic readonly DataTable XGMLabelsTable;\r\n\t\t//static readonly DataTable AnnotationsTable;\r\n\t\tstatic readonly DataTable StatusTable;\r\n\r\n\t\tstatic MessageCache ()\r\n\t\t{\r\n\t\t\tMessageTable = CreateMessageTable ();\r\n\t\t\tKeywordsTable = CreateKeywordsTable ();\r\n\t\t\tXGMLabelsTable = CreateXGMLabelsTable ();\r\n\t\t\t//AnnotationsTable = CreateAnnotationsTable ();\r\n\t\t\tStatusTable = CreateStatusTable ();\r\n\r\n\t\t\tDataTables = new DataTable[] {\r\n\t\t\t\tStatusTable, MessageTable, KeywordsTable, XGMLabelsTable /*, AnnotationsTable */\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tstatic DataTable CreateMessageTable ()\r\n\t\t{\r\n\t\t\tvar table = new DataTable (\"MESSAGES\");\r\n\t\t\ttable.Columns.Add (new DataColumn (\"UID\", typeof (long)) { AllowDBNull = false, Unique = true });\r\n\t\t\ttable.Columns.Add (new DataColumn (\"FETCHED\", typeof (int)) { AllowDBNull = false });\r\n\t\t\ttable.Columns.Add (new DataColumn (\"INTERNALDATE\", typeof (DateTime)) { AllowDBNull = true });\r\n\t\t\ttable.Columns.Add (new DataColumn (\"INTERNALTIMEZONE\", typeof (long)) { AllowDBNull = true });\r\n\t\t\ttable.Columns.Add (new DataColumn (\"SIZE\", typeof (long)) { AllowDBNull = true });\r\n\t\t\ttable.Columns.Add (new DataColumn (\"FLAGS\", typeof (int)) { AllowDBNull = true });\r\n\t\t\ttable.Columns.Add (new DataColumn (\"MODSEQ\", typeof (long)) { AllowDBNull = true });\r\n\r\n\t\t\t// ENVELOPE\r\n\t\t\ttable.Columns.Add (new DataColumn (\"DATE\", typeof (DateTime)) { AllowDBNull = true });\r\n\t\t\ttable.Columns.Add (new DataColumn (\"TIMEZONE\", typeof (long)) { AllowDBNull = true });\r\n\t\t\ttable.Columns.Add (new DataColumn (\"SUBJECT\", typeof (string)) { AllowDBNull = true });\r\n\t\t\ttable.Columns.Add (new DataColumn (\"FROM\", typeof (string)) { AllowDBNull = true });\r\n\t\t\ttable.Columns.Add (new DataColumn (\"SENDER\", typeof (string)) { AllowDBNull = true });\r\n\t\t\ttable.Columns.Add (new DataColumn (\"REPLYTO\", typeof (string)) { AllowDBNull = true });\r\n\t\t\ttable.Columns.Add (new DataColumn (\"TO\", typeof (string)) { AllowDBNull = true });\r\n\t\t\ttable.Columns.Add (new DataColumn (\"CC\", typeof (string)) { AllowDBNull = true });\r\n\t\t\ttable.Columns.Add (new DataColumn (\"BCC\", typeof (string)) { AllowDBNull = true });\r\n\t\t\ttable.Columns.Add (new DataColumn (\"INREPLYTO\", typeof (string)) { AllowDBNull = true });\r\n\t\t\ttable.Columns.Add (new DataColumn (\"MESSAGEID\", typeof (string)) { AllowDBNull = true });\r\n\r\n\t\t\t// REFERENCES\r\n\t\t\ttable.Columns.Add (new DataColumn (\"REFERENCES\", typeof (string)) { AllowDBNull = true });\r\n\r\n\t\t\t// BODYSTRUCTURE\r\n\t\t\ttable.Columns.Add (new DataColumn (\"BODYSTRUCTURE\", typeof (string)) { AllowDBNull = true });\r\n\r\n\t\t\t// PREVIEWTEXT\r\n\t\t\ttable.Columns.Add (new DataColumn (\"PREVIEWTEXT\", typeof (string)) { AllowDBNull = true });\r\n\r\n\t\t\t// GMail-specific features\r\n\t\t\ttable.Columns.Add (new DataColumn (\"XGMMSGID\", typeof (long)) { AllowDBNull = true });\r\n\t\t\ttable.Columns.Add (new DataColumn (\"XGMTHRID\", typeof (long)) { AllowDBNull = true });\r\n\r\n\t\t\t// OBJECTID extension\r\n\t\t\ttable.Columns.Add (new DataColumn (\"EMAILID\", typeof (string)) { AllowDBNull = true });\r\n\t\t\ttable.Columns.Add (new DataColumn (\"THREADID\", typeof (string)) { AllowDBNull = true });\r\n\r\n\t\t\t// SAVEDATE extension\r\n\t\t\t//table.Columns.Add(new DataColumn(\"SAVEDATE\", typeof(DateTime)) { AllowDBNull = true });\r\n\t\t\t//table.Columns.Add(new DataColumn(\"SAVEDATETIMEZONE\", typeof(long)) { AllowDBNull = true });\r\n\r\n\t\t\t// Set the UID as the primary key\r\n\t\t\ttable.PrimaryKey = new DataColumn[] { table.Columns[0] };\r\n\r\n\t\t\treturn table;\r\n\t\t}\r\n\r\n\t\tstatic DataTable CreateKeywordsTable ()\r\n\t\t{\r\n\t\t\tvar table = new DataTable (\"KEYWORDS\");\r\n\t\t\ttable.Columns.Add (new DataColumn (\"ROWID\", typeof (int)) { AutoIncrement = true });\r\n\t\t\ttable.Columns.Add (new DataColumn (\"UID\", typeof (long)) { AllowDBNull = false });\r\n\t\t\ttable.Columns.Add (new DataColumn (\"KEYWORD\", typeof (string)) { AllowDBNull = false });\r\n\t\t\ttable.PrimaryKey = new DataColumn[] { table.Columns[0] };\r\n\r\n\t\t\treturn table;\r\n\t\t}\r\n\r\n\t\tstatic DataTable CreateXGMLabelsTable ()\r\n\t\t{\r\n\t\t\tvar table = new DataTable (\"XGMLABELS\");\r\n\t\t\ttable.Columns.Add (new DataColumn (\"ROWID\", typeof (int)) { AutoIncrement = true });\r\n\t\t\ttable.Columns.Add (new DataColumn (\"UID\", typeof (long)) { AllowDBNull = false });\r\n\t\t\ttable.Columns.Add (new DataColumn (\"KEYWORD\", typeof (string)) { AllowDBNull = false });\r\n\t\t\ttable.PrimaryKey = new DataColumn[] { table.Columns[0] };\r\n\r\n\t\t\treturn table;\r\n\t\t}\r\n\r\n\t\tstatic DataTable CreateStatusTable ()\r\n\t\t{\r\n\t\t\tvar table = new DataTable (\"STATUS\");\r\n\t\t\ttable.Columns.Add (new DataColumn (\"ROWID\", typeof (int)) { AllowDBNull = false, Unique = true });\r\n\t\t\ttable.Columns.Add (new DataColumn (\"UIDVALIDITY\", typeof (long)) { AllowDBNull = false });\r\n\t\t\ttable.Columns.Add (new DataColumn (\"UIDNEXT\", typeof (long)) { AllowDBNull = true });\r\n\t\t\ttable.Columns.Add (new DataColumn (\"HIGHESTMODSEQ\", typeof (long)) { AllowDBNull = true });\r\n\r\n\t\t\t//table.Columns.Add (new DataColumn (\"COUNT\", typeof (long)) { AllowDBNull = false });\r\n\t\t\t//table.Columns.Add (new DataColumn (\"RECENT\", typeof (long)) { AllowDBNull = false });\r\n\t\t\t//table.Columns.Add (new DataColumn (\"UNREAD\", typeof (long)) { AllowDBNull = false });\r\n\t\t\t//table.Columns.Add (new DataColumn (\"SIZE\", typeof (long)) { AllowDBNull = false });\r\n\r\n\t\t\t//table.Columns.Add (new DataColumn (\"APPENDLIMIT\", typeof (long)) { AllowDBNull = true });\r\n\t\t\t//table.Columns.Add (new DataColumn (\"MAILBOXID\", typeof (string)) { AllowDBNull = true });\r\n\r\n\t\t\ttable.PrimaryKey = new DataColumn[] { table.Columns[0] };\r\n\r\n\t\t\treturn table;\r\n\t\t}\r\n\r\n\t\tstatic string EncodeFolderName (IMailFolder folder)\r\n\t\t{\r\n\t\t\tvar builder = new StringBuilder ();\r\n\r\n\t\t\tfor (int i = 0; i < folder.FullName.Length; i++) {\r\n\t\t\t\tswitch (folder.FullName[i]) {\r\n\t\t\t\tcase '%': builder.Append (\"%25\"); break;\r\n\t\t\t\tcase '/': builder.Append (\"%2F\"); break;\r\n\t\t\t\tcase ':': builder.Append (\"%3A\"); break;\r\n\t\t\t\tcase '\\\\': builder.Append (\"%5C\"); break;\r\n\t\t\t\tdefault: builder.Append (folder.FullName[i]); break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn builder.ToString ();\r\n\t\t}\r\n\r\n\t\treadonly Dictionary<Stream, string> streams = new Dictionary<Stream, string> ();\r\n\t\treadonly MessageSummaryItems desiredItems;\r\n\t\treadonly IMailFolder folder;\r\n\t\tSQLiteConnection sqlite;\r\n\t\tstring cacheDir;\r\n\r\n\t\tpublic MessageCache (IMailFolder folder, string cacheDir, MessageSummaryItems desiredItems)\r\n\t\t{\r\n\t\t\tthis.cacheDir = Path.Combine (cacheDir, EncodeFolderName (folder));\r\n\t\t\tthis.desiredItems = desiredItems;\r\n\t\t\tthis.folder = folder;\r\n\r\n\t\t\tvar builder = new SQLiteConnectionStringBuilder ();\r\n\t\t\tbuilder.DataSource = Path.Combine (cacheDir, \"index.sqlite\");\r\n\t\t\tbuilder.DateTimeFormat = SQLiteDateFormats.ISO8601;\r\n\r\n\t\t\tsqlite = new SQLiteConnection (builder.ConnectionString);\r\n\r\n\t\t\tfolder.UidNextChanged += OnUidNextChanged;\r\n\t\t\tfolder.UidValidityChanged += OnUidValidityChanged;\r\n\t\t\tfolder.HighestModSeqChanged += OnHighestModSeqChanged;\r\n\r\n\t\t\tfolder.MessageExpunged += OnMessageExpunged;\r\n\t\t\tfolder.MessagesVanished += OnMessagesVanished;\r\n\t\t\tfolder.MessageSummaryFetched += OnMessageSummaryFetched;\r\n\t\t}\r\n\r\n\t\tpublic ulong? HighestModSeq {\r\n\t\t\tget; private set;\r\n\t\t}\r\n\r\n\t\tpublic uint? UidNext {\r\n\t\t\tget; private set;\r\n\t\t}\r\n\r\n\t\tpublic uint UidValidity {\r\n\t\t\tget; private set;\r\n\t\t}\r\n\r\n\t\tvoid ReadStatus (DbDataReader reader)\r\n\t\t{\r\n\t\t\tfor (int i = 0; i < reader.FieldCount; i++) {\r\n\t\t\t\tswitch (reader.GetName (i)) {\r\n\t\t\t\tcase \"UIDVALIDITY\":\r\n\t\t\t\t\tUidValidity = (uint) reader.GetInt64 (i);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"UIDNEXT\":\r\n\t\t\t\t\tif (!reader.IsDBNull (i))\r\n\t\t\t\t\t\tUidNext = (uint) reader.GetInt64 (i);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tUidNext = null;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"HIGHESTMODSEQ\":\r\n\t\t\t\t\tif (!reader.IsDBNull (i))\r\n\t\t\t\t\t\tHighestModSeq = (ulong) reader.GetInt64 (i);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tHighestModSeq = null;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tDbCommand CreateLoadStatusCommand ()\r\n\t\t{\r\n\t\t\tvar command = sqlite.CreateCommand ();\r\n\t\t\tcommand.CommandText = $\"SELECT * FROM {StatusTable.TableName} WHERE ROWID = @ROWID LIMIT 1\";\r\n\t\t\tcommand.Parameters.AddWithValue (\"@ROWID\", 0);\r\n\t\t\tcommand.CommandType = CommandType.Text;\r\n\t\t\treturn command;\r\n\t\t}\r\n\r\n\t\tbool LoadStatus ()\r\n\t\t{\r\n\t\t\tusing (var command = CreateLoadStatusCommand ()) {\r\n\t\t\t\tusing (var reader = command.ExecuteReader ()) {\r\n\t\t\t\t\tif (!reader.Read ())\r\n\t\t\t\t\t\treturn false;\r\n\r\n\t\t\t\t\tReadStatus (reader);\r\n\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tasync Task<bool> LoadStatusAsync (CancellationToken cancellationToken)\r\n\t\t{\r\n\t\t\tusing (var command = CreateLoadStatusCommand ()) {\r\n\t\t\t\tusing (var reader = await command.ExecuteReaderAsync (cancellationToken).ConfigureAwait (false)) {\r\n\t\t\t\t\tif (!await reader.ReadAsync (cancellationToken).ConfigureAwait (false))\r\n\t\t\t\t\t\treturn false;\r\n\r\n\t\t\t\t\tReadStatus (reader);\r\n\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvoid Load ()\r\n\t\t{\r\n\t\t\tforeach (var dataTable in DataTables)\r\n\t\t\t\tsqlite.CreateTable (dataTable);\r\n\r\n\t\t\tif (LoadStatus ())\r\n\t\t\t\treturn;\r\n\r\n\t\t\tSaveStatus ();\r\n\t\t}\r\n\r\n\t\tasync Task LoadAsync (CancellationToken cancellationToken)\r\n\t\t{\r\n\t\t\tforeach (var dataTable in DataTables)\r\n\t\t\t\tawait sqlite.CreateTableAsync (dataTable, cancellationToken).ConfigureAwait (false);\r\n\r\n\t\t\tif (await LoadStatusAsync (cancellationToken).ConfigureAwait (false))\r\n\t\t\t\treturn;\r\n\r\n\t\t\tawait SaveStatusAsync (cancellationToken).ConfigureAwait (false);\r\n\t\t}\r\n\r\n\t\tDbCommand CreateSaveStatusCommand ()\r\n\t\t{\r\n\t\t\tvar command = sqlite.CreateCommand ();\r\n\t\t\tcommand.Parameters.AddWithValue (\"@ROWID\", 0);\r\n\t\t\tcommand.Parameters.AddWithValue (\"@UIDVALIDITY\", (long) UidValidity);\r\n\t\t\tcommand.Parameters.AddWithValue (\"@UIDNEXT\", UidNext.HasValue ? (object) UidNext.Value : null);\r\n\t\t\tcommand.Parameters.AddWithValue (\"@HIGHESTMODSEQ\", HighestModSeq.HasValue ? (object) HighestModSeq.Value : null);\r\n\r\n\t\t\tcommand.CommandText = $\"INSERT OR REPLACE INTO {StatusTable.TableName} (ROWID, UIDVALIDITY, UIDNEXT, HIGHESTMODSEQ) VALUES(@ROWID, @UIDVALIDITY, @UIDNEXT, @HIGHESTMODSEQ)\";\r\n\t\t\tcommand.CommandType = CommandType.Text;\r\n\r\n\t\t\treturn command;\r\n\t\t}\r\n\r\n\t\tvoid SaveStatus ()\r\n\t\t{\r\n\t\t\tusing (var command = CreateSaveStatusCommand ())\r\n\t\t\t\tcommand.ExecuteNonQuery ();\r\n\t\t}\r\n\r\n\t\tasync Task SaveStatusAsync (CancellationToken cancellationToken)\r\n\t\t{\r\n\t\t\tusing (var command = CreateSaveStatusCommand ())\r\n\t\t\t\tawait command.ExecuteNonQueryAsync (cancellationToken).ConfigureAwait (false);\r\n\t\t}\r\n\r\n\t\tasync Task FetchMissingMessageInformationAsync (CancellationToken cancellationToken)\r\n\t\t{\r\n\t\t\t// Get the list of message UIDs that we are missing information for.\r\n\t\t\tvar uids = await GetIncompleteUidsAsync (desiredItems, cancellationToken).ConfigureAwait (false);\r\n\r\n\t\t\t// Fetch the information for the messages that we are missing metadata for.\r\n\t\t\tawait folder.FetchAsync (uids, desiredItems, cancellationToken).ConfigureAwait (false);\r\n\t\t}\r\n\r\n\t\tpublic async Task<FolderAccess> OpenAndResyncAsync (FolderAccess access, CancellationToken cancellationToken)\r\n\t\t{\r\n\t\t\tvar changedSince = HighestModSeq;\r\n\t\t\tvar validity = UidValidity;\r\n\t\t\tvar state = sqlite.State;\r\n\r\n\t\t\tawait OpenDatabaseAsync (cancellationToken).ConfigureAwait (false);\r\n\r\n\t\t\ttry {\r\n\t\t\t\tFolderAccess result;\r\n\t\t\t\tbool resynced;\r\n\r\n\t\t\t\tif (folder.Supports (FolderFeature.QuickResync) && validity > 0 && changedSince.HasValue) {\r\n\t\t\t\t\t// Note: Since we want to resynchronize the entire folder, there is no need to provide a list of known UIDs.\r\n\t\t\t\t\tvar empty = new UniqueIdSet ();\r\n\r\n\t\t\t\t\tresult = await folder.OpenAsync (access, validity, changedSince.Value, empty, cancellationToken).ConfigureAwait (false);\r\n\t\t\t\t\tresynced = true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Note: Either QRESYNC is not available or we don't have anything in our cache (yet).\r\n\t\t\t\t\tresult = await folder.OpenAsync (access, cancellationToken).ConfigureAwait (false);\r\n\t\t\t\t\tresynced = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (result == FolderAccess.None) {\r\n\t\t\t\t\tif (state == ConnectionState.Closed)\r\n\t\t\t\t\t\tCloseDatabase ();\r\n\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (resynced)\r\n\t\t\t\t\treturn result;\r\n\r\n\t\t\t\tvar cachedUids = await GetAllUidsAsync (cancellationToken).ConfigureAwait (false);\r\n\r\n\t\t\t\tif (cachedUids.Count == 0)\r\n\t\t\t\t\treturn result;\r\n\r\n\t\t\t\tif (folder.Supports (FolderFeature.ModSequences) && changedSince.HasValue) {\r\n\t\t\t\t\t// Fetch the latest FLAGS and MODSEQ values for all of our cached messages that have changed since our last known mod-sequence value.\r\n\r\n\t\t\t\t\t// Note: Since we are using a UID FETCH request combined with a CHANGEDSINCE argument, we do not need to explicitly request the UID\r\n\t\t\t\t\t// or MODSEQ items for each message. The server should also send us VANISHED events to notify us of any messages that have been\r\n\t\t\t\t\t// expunged since our last re-sync, so we don't need to explicitly request a full list of UIDs to compare them against what we have\r\n\t\t\t\t\t// in our local cache in order to manually prune messages that no longer exist on the server.\r\n\t\t\t\t\tawait folder.FetchAsync (cachedUids, changedSince.Value, MessageSummaryItems.Flags, cancellationToken).ConfigureAwait (false);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Get the full list of message UIDs in the remote folder.\r\n\t\t\t\t\tvar uids = await folder.SearchAsync (SearchQuery.All, cancellationToken).ConfigureAwait (false);\r\n\r\n\t\t\t\t\t// Purge the cache of any messages that no longer exist on the server.\r\n\t\t\t\t\tfor (int i = cachedUids.Count - 1; i >= 0; i--) {\r\n\t\t\t\t\t\tvar uid = cachedUids[i];\r\n\r\n\t\t\t\t\t\tif (!uids.Contains (uid)) {\r\n\t\t\t\t\t\t\t// The cached message UID no longer exists on the server.\r\n\t\t\t\t\t\t\tawait ExpungeAsync (uid, cancellationToken).ConfigureAwait (false);\r\n\t\t\t\t\t\t\tcachedUids.RemoveAt (i);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Fetch the latest FLAGS and MODSEQ values for all of our cached messages.\r\n\r\n\t\t\t\t\t// Note: Since we are using a UID FETCH request, we don't need to explicitly specify that we also want the UIDs.\r\n\t\t\t\t\tawait folder.FetchAsync (cachedUids, MessageSummaryItems.Flags | MessageSummaryItems.ModSeq, cancellationToken).ConfigureAwait (false);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn result;\r\n\t\t\t} catch (OperationCanceledException) {\r\n\t\t\t\tif (state == ConnectionState.Closed)\r\n\t\t\t\t\tCloseDatabase ();\r\n\t\t\t\tthrow;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tpublic async Task OpenDatabaseAsync (CancellationToken cancellationToken)\r\n\t\t{\r\n\t\t\tif (sqlite.State == ConnectionState.Closed) {\r\n\t\t\t\tawait sqlite.OpenAsync (cancellationToken).ConfigureAwait (false);\r\n\t\t\t\tawait LoadAsync (cancellationToken).ConfigureAwait (false);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tpublic void OpenDatabase ()\r\n\t\t{\r\n\t\t\tif (sqlite.State == ConnectionState.Closed) {\r\n\t\t\t\tsqlite.Open ();\r\n\t\t\t\tLoad ();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tpublic void CloseDatabase ()\r\n\t\t{\r\n\t\t\tif (sqlite.State != ConnectionState.Closed)\r\n\t\t\t\tsqlite.Close ();\r\n\t\t}\r\n\r\n\t\tvoid DropTable (string tableName)\r\n\t\t{\r\n\t\t\tusing (var command = sqlite.CreateCommand ()) {\r\n\t\t\t\tcommand.CommandText = $\"DROP TABLE IF EXISTS {tableName}\";\r\n\t\t\t\tcommand.CommandType = CommandType.Text;\r\n\r\n\t\t\t\tcommand.ExecuteNonQuery ();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tpublic void Clear ()\r\n\t\t{\r\n\t\t\t// TODO: clear message files as well (once that gets implemented)\r\n\t\t\tusing (var transaction = sqlite.BeginTransaction ()) {\r\n\t\t\t\tDropTable (MessageTable.TableName);\r\n\t\t\t\tDropTable (KeywordsTable.TableName);\r\n\t\t\t\tDropTable (XGMLabelsTable.TableName);\r\n\r\n\t\t\t\tsqlite.CreateTable (MessageTable);\r\n\t\t\t\tsqlite.CreateTable (KeywordsTable);\r\n\t\t\t\tsqlite.CreateTable (XGMLabelsTable);\r\n\r\n\t\t\t\ttransaction.Commit ();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tpublic bool TryGetUniqueId (int index, out UniqueId uid)\r\n\t\t{\r\n\t\t\tusing (var command = sqlite.CreateCommand ()) {\r\n\t\t\t\tcommand.Parameters.AddWithValue (\"@INDEX\", (long) index);\r\n\r\n\t\t\t\tcommand.CommandText = $\"SELECT UID FROM {MessageTable.TableName} ORDER BY UID LIMIT 1 OFFSET @INDEX\";\r\n\t\t\t\tcommand.CommandType = CommandType.Text;\r\n\r\n\t\t\t\tusing (var reader = command.ExecuteReader (CommandBehavior.SingleRow)) {\r\n\t\t\t\t\tif (reader.Read ()) {\r\n\t\t\t\t\t\tint column = reader.GetOrdinal (\"UID\");\r\n\r\n\t\t\t\t\t\tif (column != -1) {\r\n\t\t\t\t\t\t\tuid = new UniqueId ((uint) reader.GetInt64 (column));\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tuid = UniqueId.Invalid;\r\n\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tpublic IList<UniqueId> GetAllUids ()\r\n\t\t{\r\n\t\t\tusing (var command = sqlite.CreateCommand ()) {\r\n\t\t\t\tcommand.CommandText = $\"SELECT UID FROM {MessageTable.TableName}\";\r\n\t\t\t\tcommand.CommandType = CommandType.Text;\r\n\r\n\t\t\t\tusing (var reader = command.ExecuteReader ()) {\r\n\t\t\t\t\tvar uids = new UniqueIdSet (SortOrder.Ascending);\r\n\r\n\t\t\t\t\twhile (reader.Read ()) {\r\n\t\t\t\t\t\tint index = reader.GetOrdinal (\"UID\");\r\n\t\t\t\t\t\tvar uid = (uint) reader.GetInt64 (index);\r\n\r\n\t\t\t\t\t\tuids.Add (new UniqueId (uid));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn uids;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tpublic async Task<IList<UniqueId>> GetAllUidsAsync (CancellationToken cancellationToken)\r\n\t\t{\r\n\t\t\tusing (var command = sqlite.CreateCommand ()) {\r\n\t\t\t\tcommand.CommandText = $\"SELECT UID FROM {MessageTable.TableName}\";\r\n\t\t\t\tcommand.CommandType = CommandType.Text;\r\n\r\n\t\t\t\tusing (var reader = await command.ExecuteReaderAsync ().ConfigureAwait (false)) {\r\n\t\t\t\t\tvar uids = new UniqueIdSet (SortOrder.Ascending);\r\n\r\n\t\t\t\t\twhile (await reader.ReadAsync (cancellationToken).ConfigureAwait (false)) {\r\n\t\t\t\t\t\tint index = reader.GetOrdinal (\"UID\");\r\n\t\t\t\t\t\tvar uid = (uint) reader.GetInt64 (index);\r\n\r\n\t\t\t\t\t\tuids.Add (new UniqueId (uid));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn uids;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tpublic async Task<IList<UniqueId>> GetIncompleteUidsAsync (MessageSummaryItems missing, CancellationToken cancellationToken)\r\n\t\t{\r\n\t\t\tusing (var command = sqlite.CreateCommand ()) {\r\n\t\t\t\tcommand.CommandText = $\"SELECT UID FROM { MessageTable.TableName } WHERE FETCHED & @FIELDS != @FIELDS\";\r\n\t\t\t\tcommand.Parameters.AddWithValue (\"@FIELDS\", (int) missing);\r\n\t\t\t\tcommand.CommandType = CommandType.Text;\r\n\r\n\t\t\t\tusing (var reader = await command.ExecuteReaderAsync ().ConfigureAwait (false)) {\r\n\t\t\t\t\tvar uids = new UniqueIdSet (SortOrder.Ascending);\r\n\r\n\t\t\t\t\twhile (await reader.ReadAsync (cancellationToken).ConfigureAwait (false)) {\r\n\t\t\t\t\t\tint index = reader.GetOrdinal (\"UID\");\r\n\t\t\t\t\t\tvar uid = (uint) reader.GetInt64 (index);\r\n\r\n\t\t\t\t\t\tuids.Add (new UniqueId (uid));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn uids;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tDbCommand CreateExpungeMessageCommand (UniqueId uid)\r\n\t\t{\r\n\t\t\tvar command = sqlite.CreateCommand ();\r\n\t\t\tcommand.CommandText = $\"DELETE FROM {MessageTable.TableName} WHERE UID = @UID\";\r\n\t\t\tcommand.Parameters.AddWithValue (\"@UID\", (long) uid.Id);\r\n\t\t\tcommand.CommandType = CommandType.Text;\r\n\t\t\treturn command;\r\n\t\t}\r\n\r\n\t\tDbCommand CreateExpungeKeywordsCommand (UniqueId uid)\r\n\t\t{\r\n\t\t\tvar command = sqlite.CreateCommand ();\r\n\t\t\tcommand.CommandText = $\"DELETE FROM {KeywordsTable.TableName} WHERE UID = @UID\";\r\n\t\t\tcommand.Parameters.AddWithValue (\"@UID\", (long) uid.Id);\r\n\t\t\tcommand.CommandType = CommandType.Text;\r\n\t\t\treturn command;\r\n\t\t}\r\n\r\n\t\tDbCommand CreateExpungeXGMLabelsCommand (UniqueId uid)\r\n\t\t{\r\n\t\t\tvar command = sqlite.CreateCommand ();\r\n\t\t\tcommand.CommandText = $\"DELETE FROM {XGMLabelsTable.TableName} WHERE UID = @UID\";\r\n\t\t\tcommand.Parameters.AddWithValue (\"@UID\", (long) uid.Id);\r\n\t\t\tcommand.CommandType = CommandType.Text;\r\n\t\t\treturn command;\r\n\t\t}\r\n\r\n\t\tpublic void Expunge (UniqueId uid)\r\n\t\t{\r\n\t\t\tusing (var transaction = sqlite.BeginTransaction ()) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tusing (var command = CreateExpungeMessageCommand (uid))\r\n\t\t\t\t\t\tcommand.ExecuteNonQuery ();\r\n\r\n\t\t\t\t\tusing (var command = CreateExpungeKeywordsCommand (uid))\r\n\t\t\t\t\t\tcommand.ExecuteNonQuery ();\r\n\r\n\t\t\t\t\tusing (var command = CreateExpungeXGMLabelsCommand (uid))\r\n\t\t\t\t\t\tcommand.ExecuteNonQuery ();\r\n\r\n\t\t\t\t\ttransaction.Commit ();\r\n\t\t\t\t} catch {\r\n\t\t\t\t\ttransaction.Rollback ();\r\n\t\t\t\t\tthrow;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tpublic async Task ExpungeAsync (UniqueId uid, CancellationToken cancellationToken)\r\n\t\t{\r\n\t\t\tusing (var transaction = sqlite.BeginTransaction ()) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tusing (var command = CreateExpungeMessageCommand (uid))\r\n\t\t\t\t\t\tawait command.ExecuteNonQueryAsync (cancellationToken).ConfigureAwait (false);\r\n\r\n\t\t\t\t\tusing (var command = CreateExpungeKeywordsCommand (uid))\r\n\t\t\t\t\t\tawait command.ExecuteNonQueryAsync (cancellationToken).ConfigureAwait (false);\r\n\r\n\t\t\t\t\tusing (var command = CreateExpungeXGMLabelsCommand (uid))\r\n\t\t\t\t\t\tawait command.ExecuteNonQueryAsync (cancellationToken).ConfigureAwait (false);\r\n\r\n\t\t\t\t\ttransaction.Commit ();\r\n\t\t\t\t} catch {\r\n\t\t\t\t\ttransaction.Rollback ();\r\n\t\t\t\t\tthrow;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tstatic List<string> GetMessageTableColumns (MessageSummaryItems items)\r\n\t\t{\r\n\t\t\tvar columns = new List<string> ();\r\n\r\n\t\t\tif ((items & MessageSummaryItems.UniqueId) != 0)\r\n\t\t\t\tcolumns.Add (\"UID\");\r\n\t\t\tif ((items & MessageSummaryItems.InternalDate) != 0) {\r\n\t\t\t\tcolumns.Add (\"INTERNALDATE\");\r\n\t\t\t\tcolumns.Add (\"INTERNALTIMEZONE\");\r\n\t\t\t}\r\n\t\t\tif ((items & MessageSummaryItems.Size) != 0)\r\n\t\t\t\tcolumns.Add (\"SIZE\");\r\n\t\t\tif ((items & MessageSummaryItems.Flags) != 0)\r\n\t\t\t\tcolumns.Add (\"FLAGS\");\r\n\t\t\tif ((items & MessageSummaryItems.ModSeq) != 0)\r\n\t\t\t\tcolumns.Add (\"MODSEQ\");\r\n\t\t\tif ((items & MessageSummaryItems.Envelope) != 0) {\r\n\t\t\t\tcolumns.Add (\"DATE\");\r\n\t\t\t\tcolumns.Add (\"TIMEZONE\");\r\n\t\t\t\tcolumns.Add (\"SUBJECT\");\r\n\t\t\t\tcolumns.Add (\"FROM\");\r\n\t\t\t\tcolumns.Add (\"SENDER\");\r\n\t\t\t\tcolumns.Add (\"REPLYTO\");\r\n\t\t\t\tcolumns.Add (\"TO\");\r\n\t\t\t\tcolumns.Add (\"CC\");\r\n\t\t\t\tcolumns.Add (\"BCC\");\r\n\t\t\t\tcolumns.Add (\"INREPLYTO\");\r\n\t\t\t\tcolumns.Add (\"MESSAGEID\");\r\n\t\t\t}\r\n\t\t\tif ((items & MessageSummaryItems.References) != 0)\r\n\t\t\t\tcolumns.Add (\"REFERENCES\");\r\n\t\t\tif ((items & (MessageSummaryItems.BodyStructure | MessageSummaryItems.Body)) != 0)\r\n\t\t\t\tcolumns.Add (\"BODYSTRUCTURE\");\r\n\t\t\tif ((items & MessageSummaryItems.PreviewText) != 0)\r\n\t\t\t\tcolumns.Add (\"PREVIEWTEXT\");\r\n\t\t\tif ((items & MessageSummaryItems.GMailMessageId) != 0)\r\n\t\t\t\tcolumns.Add (\"XGMMSGID\");\r\n\t\t\tif ((items & MessageSummaryItems.GMailThreadId) != 0)\r\n\t\t\t\tcolumns.Add (\"XGMTHRID\");\r\n\t\t\tif ((items & MessageSummaryItems.EmailId) != 0)\r\n\t\t\t\tcolumns.Add (\"EMAILID\");\r\n\t\t\tif ((items & MessageSummaryItems.ThreadId) != 0)\r\n\t\t\t\tcolumns.Add (\"THREADID\");\r\n\t\t\t//if ((items & MessageSummaryItems.SaveDate) != 0) {\r\n\t\t\t//\tcolumns.Add(\"SAVEDATE\");\r\n\t\t\t//\tcolumns.Add(\"SAVEDATETIMEZONE\");\r\n\t\t\t//}\r\n\r\n\t\t\treturn columns;\r\n\t\t}\r\n\r\n\t\tstatic DateTimeOffset GetDateTimeOffset (DateTime utc, long timeZone)\r\n\t\t{\r\n\t\t\tvar dateTime = new DateTime (utc.Ticks, DateTimeKind.Unspecified);\r\n\t\t\tvar offset = new TimeSpan (timeZone);\r\n\r\n\t\t\tdateTime = dateTime.Add (offset);\r\n\r\n\t\t\treturn new DateTimeOffset (dateTime, offset);\r\n\t\t}\r\n\r\n\t\tstatic void LoadInternetAddressList (InternetAddressList list, DbDataReader reader, int column)\r\n\t\t{\r\n\t\t\ttry {\r\n\t\t\t\tvar addresses = reader.GetInternetAddressList (column);\r\n\t\t\t\tlist.AddRange (addresses);\r\n\t\t\t\taddresses.Clear ();\r\n\t\t\t} catch {\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvoid LoadMessages (List<IMessageSummary> messages, MessageSummaryItems items, DbDataReader reader, int startIndex)\r\n\t\t{\r\n\t\t\tint index = startIndex;\r\n\r\n\t\t\twhile (reader.Read ()) {\r\n\t\t\t\tvar message = new MessageSummary (index++);\r\n\t\t\t\tvar internalDate = InvalidDateTime;\r\n\t\t\t\t//var saveDate = InvalidDateTime;\r\n\t\t\t\tlong internalTimeZone = -1;\r\n\t\t\t\t//long saveDateTimeZone = -1;\r\n\t\t\t\tvar date = InvalidDateTime;\r\n\t\t\t\tlong timeZone = -1;\r\n\r\n\t\t\t\tmessages.Add (message);\r\n\r\n\t\t\t\tif ((items & MessageSummaryItems.Envelope) != 0)\r\n\t\t\t\t\tmessage.Envelope = new Envelope ();\r\n\r\n\t\t\t\tfor (int i = 0; i < reader.FieldCount; i++) {\r\n\t\t\t\t\tif (reader.IsDBNull (i))\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\tswitch (reader.GetName (i)) {\r\n\t\t\t\t\tcase \"UID\":\r\n\t\t\t\t\t\tmessage.UniqueId = reader.GetUniqueId (i, UidValidity);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"INTERNALDATE\":\r\n\t\t\t\t\t\tinternalDate = reader.GetDateTime (i);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"INTERNALTIMEZONE\":\r\n\t\t\t\t\t\tinternalTimeZone = reader.GetInt64 (i);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"SIZE\":\r\n\t\t\t\t\t\tmessage.Size = (uint) reader.GetInt64 (i);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"FLAGS\":\r\n\t\t\t\t\t\tmessage.Flags = reader.GetMessageFlags (i);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"MODSEQ\":\r\n\t\t\t\t\t\tmessage.ModSeq = reader.GetUInt64 (i);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"DATE\":\r\n\t\t\t\t\t\tdate = reader.GetDateTime (i);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"TIMEZONE\":\r\n\t\t\t\t\t\ttimeZone = reader.GetInt64 (i);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"SUBJECT\":\r\n\t\t\t\t\t\tmessage.Envelope.Subject = reader.GetString (i);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"FROM\":\r\n\t\t\t\t\t\tLoadInternetAddressList (message.Envelope.From, reader, i);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"SENDER\":\r\n\t\t\t\t\t\tLoadInternetAddressList (message.Envelope.Sender, reader, i);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"REPLYTO\":\r\n\t\t\t\t\t\tLoadInternetAddressList (message.Envelope.ReplyTo, reader, i);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"TO\":\r\n\t\t\t\t\t\tLoadInternetAddressList (message.Envelope.To, reader, i);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"CC\":\r\n\t\t\t\t\t\tLoadInternetAddressList (message.Envelope.Cc, reader, i);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"BCC\":\r\n\t\t\t\t\t\tLoadInternetAddressList (message.Envelope.Bcc, reader, i);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"INREPLYTO\":\r\n\t\t\t\t\t\tmessage.Envelope.InReplyTo = reader.GetString (i);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"MESSAGEID\":\r\n\t\t\t\t\t\tmessage.Envelope.MessageId = reader.GetString (i);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"REFERENCES\":\r\n\t\t\t\t\t\tmessage.References = reader.GetReferences (i);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"BODYSTRUCTURE\":\r\n\t\t\t\t\t\tmessage.Body = reader.GetBodyStructure (i);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"PREVIEWTEXT\":\r\n\t\t\t\t\t\tmessage.PreviewText = reader.GetString (i);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"XGMMSGID\":\r\n\t\t\t\t\t\tmessage.GMailMessageId = reader.GetUInt64 (i);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"XGMTHRID\":\r\n\t\t\t\t\t\tmessage.GMailThreadId = reader.GetUInt64 (i);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"EMAILID\":\r\n\t\t\t\t\t\tmessage.EmailId = reader.GetString (i);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"THREADID\":\r\n\t\t\t\t\t\tmessage.ThreadId = reader.GetString (i);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t//case \"SAVEDATE\":\r\n\t\t\t\t\t//\tsaveDate = reader.GetDateTime(i);\r\n\t\t\t\t\t//\tbreak;\r\n\t\t\t\t\t//case \"SAVEDATETIMEZONE\":\r\n\t\t\t\t\t//\tsaveDateTimeZone = reader.GetInt64(i);\r\n\t\t\t\t\t//\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (internalDate != InvalidDateTime)\r\n\t\t\t\t\tmessage.InternalDate = GetDateTimeOffset (internalDate, internalTimeZone);\r\n\r\n\t\t\t\t//if (saveDate != InvalidDateTime)\r\n\t\t\t\t//\tmessage.SaveDate = GetDateTimeOffset(saveDate, saveDateTimeZone);\r\n\r\n\t\t\t\tif (date != InvalidDateTime)\r\n\t\t\t\t\tmessage.Envelope.Date = GetDateTimeOffset (date, timeZone);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvoid LoadKeywords (UniqueId uid, HashSet<string> keywords)\r\n\t\t{\r\n\t\t\tusing (var command = sqlite.CreateCommand ()) {\r\n\t\t\t\tcommand.CommandText = $\"SELECT KEYWORD FROM {KeywordsTable.TableName} WHERE UID = @UID\";\r\n\t\t\t\tcommand.Parameters.AddWithValue (\"@UID\", (long) uid.Id);\r\n\t\t\t\tcommand.CommandType = CommandType.Text;\r\n\r\n\t\t\t\tusing (var reader = command.ExecuteReader ()) {\r\n\t\t\t\t\twhile (reader.Read ()) {\r\n\t\t\t\t\t\tvar column = reader.GetOrdinal (\"KEYWORD\");\r\n\r\n\t\t\t\t\t\tif (column != -1)\r\n\t\t\t\t\t\t\tkeywords.Add (reader.GetString (column));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvoid LoadXGMLabels (UniqueId uid, HashSet<string> labels)\r\n\t\t{\r\n\t\t\tusing (var command = sqlite.CreateCommand ()) {\r\n\t\t\t\tcommand.CommandText = $\"SELECT LABEL FROM {XGMLabelsTable.TableName} WHERE UID = @UID\";\r\n\t\t\t\tcommand.Parameters.AddWithValue (\"@UID\", (long) uid.Id);\r\n\t\t\t\tcommand.CommandType = CommandType.Text;\r\n\r\n\t\t\t\tusing (var reader = command.ExecuteReader ()) {\r\n\t\t\t\t\twhile (reader.Read ()) {\r\n\t\t\t\t\t\tvar column = reader.GetOrdinal (\"LABEL\");\r\n\r\n\t\t\t\t\t\tif (column != -1)\r\n\t\t\t\t\t\t\tlabels.Add (reader.GetString (column));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tpublic List<IMessageSummary> Fetch (int startIndex, int count, MessageSummaryItems items)\r\n\t\t{\r\n\t\t\tvar messages = new List<IMessageSummary> ();\r\n\r\n\t\t\tif (count == 0)\r\n\t\t\t\treturn messages;\r\n\r\n\t\t\tif ((items & (MessageSummaryItems.Flags /*| MessageSummaryItems.Annotations*/)) != 0)\r\n\t\t\t\titems |= MessageSummaryItems.UniqueId;\r\n\r\n\t\t\tusing (var command = sqlite.CreateCommand ()) {\r\n\t\t\t\tvar columns = GetMessageTableColumns (items);\r\n\t\t\t\tvar builder = new StringBuilder (\"SELECT \");\r\n\r\n\t\t\t\tif (columns.Count > 0) {\r\n\t\t\t\t\tforeach (var column in columns)\r\n\t\t\t\t\t\tbuilder = builder.Append (column).Append (\", \");\r\n\r\n\t\t\t\t\tbuilder.Length -= 2;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbuilder.Append (\"UID\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbuilder.Append ($\"FROM {MessageTable.TableName} ORDER BY UID\");\r\n\r\n\t\t\t\tif (count != -1) {\r\n\t\t\t\t\tcommand.Parameters.AddWithValue (\"@LIMIT\", count);\r\n\t\t\t\t\tbuilder.Append (\" LIMIT @LIMIT\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (startIndex > 0) {\r\n\t\t\t\t\tcommand.Parameters.AddWithValue (\"@OFFSET\", startIndex);\r\n\t\t\t\t\tbuilder.Append (\" OFFSET @OFFSET\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcommand.CommandText = builder.ToString ();\r\n\t\t\t\tcommand.CommandType = CommandType.Text;\r\n\r\n\t\t\t\tusing (var reader = command.ExecuteReader ())\r\n\t\t\t\t\tLoadMessages (messages, items, reader, startIndex);\r\n\t\t\t}\r\n\r\n\t\t\tif ((items & MessageSummaryItems.Flags) != 0) {\r\n\t\t\t\tforeach (var message in messages)\r\n\t\t\t\t\tLoadKeywords (message.UniqueId, message.Keywords);\r\n\t\t\t}\r\n\r\n\t\t\tif ((items & MessageSummaryItems.GMailLabels) != 0) {\r\n\t\t\t\tforeach (var message in messages) {\r\n\t\t\t\t\t// FIXME: IMessageSummary.GMailLabels should be a HashSet<string>.\r\n\t\t\t\t\tvar labels = new HashSet<string> ();\r\n\r\n\t\t\t\t\tLoadXGMLabels (message.UniqueId, labels);\r\n\r\n\t\t\t\t\tforeach (var label in labels)\r\n\t\t\t\t\t\tmessage.GMailLabels.Add (label);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn messages;\r\n\t\t}\r\n\r\n\t\tpublic void Insert (UniqueId uid)\r\n\t\t{\r\n\t\t\tusing (var command = sqlite.CreateCommand ()) {\r\n\t\t\t\tcommand.CommandText = $\"INSERT INTO {MessageTable.TableName} OR IGNORE (UID, FETCHED) VALUES(@UID, @FETCHED)\";\r\n\t\t\t\tcommand.Parameters.AddWithValue (\"@FETCHED\", (int) MessageSummaryItems.UniqueId);\r\n\t\t\t\tcommand.Parameters.AddWithValue (\"@UID\", (long) uid.Id);\r\n\t\t\t\tcommand.CommandType = CommandType.Text;\r\n\t\t\t\tcommand.ExecuteNonQuery ();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tobject GetValue (UniqueId uid, IMessageSummary message, string columnName)\r\n\t\t{\r\n\t\t\tswitch (columnName) {\r\n\t\t\tcase \"UID\":\r\n\t\t\t\treturn (long) uid.Id;\r\n\t\t\tcase \"INTERNALDATE\":\r\n\t\t\t\tif (message.InternalDate.HasValue)\r\n\t\t\t\t\treturn message.InternalDate.Value.ToUniversalTime ().DateTime;\r\n\t\t\t\treturn null;\r\n\t\t\tcase \"INTERNALTIMEZONE\":\r\n\t\t\t\tif (message.InternalDate.HasValue)\r\n\t\t\t\t\treturn message.InternalDate.Value.Offset.Ticks;\r\n\t\t\t\treturn null;\r\n\t\t\tcase \"SIZE\":\r\n\t\t\t\tif (message.Size.HasValue)\r\n\t\t\t\t\treturn (long) message.Size.Value;\r\n\t\t\t\treturn null;\r\n\t\t\tcase \"FLAGS\":\r\n\t\t\t\tif (message.Flags.HasValue)\r\n\t\t\t\t\treturn (long) message.Flags.Value;\r\n\t\t\t\treturn null;\r\n\t\t\tcase \"MODSEQ\":\r\n\t\t\t\tif (message.ModSeq.HasValue)\r\n\t\t\t\t\treturn (long) message.ModSeq.Value;\r\n\t\t\t\treturn null;\r\n\t\t\tcase \"DATE\":\r\n\t\t\t\tif ((message.Envelope?.Date.HasValue).HasValue)\r\n\t\t\t\t\treturn message.Envelope.Date.Value.ToUniversalTime ().DateTime;\r\n\t\t\t\treturn null;\r\n\t\t\tcase \"TIMEZONE\":\r\n\t\t\t\tif ((message.Envelope?.Date.HasValue).HasValue)\r\n\t\t\t\t\treturn message.Envelope.Date.Value.Offset.Ticks;\r\n\t\t\t\treturn null;\r\n\t\t\tcase \"SUBJECT\":\r\n\t\t\t\treturn message.Envelope != null ? message.Envelope.Subject : null;\r\n\t\t\tcase \"FROM\":\r\n\t\t\t\treturn message.Envelope?.From.ToString ();\r\n\t\t\tcase \"SENDER\":\r\n\t\t\t\treturn message.Envelope?.Sender.ToString ();\r\n\t\t\tcase \"REPLYTO\":\r\n\t\t\t\treturn message.Envelope?.ReplyTo.ToString ();\r\n\t\t\tcase \"TO\":\r\n\t\t\t\treturn message.Envelope?.To.ToString ();\r\n\t\t\tcase \"CC\":\r\n\t\t\t\treturn message.Envelope?.Cc.ToString ();\r\n\t\t\tcase \"BCC\":\r\n\t\t\t\treturn message.Envelope?.Bcc.ToString ();\r\n\t\t\tcase \"INREPLYTO\":\r\n\t\t\t\treturn message.Envelope?.InReplyTo;\r\n\t\t\tcase \"MESSAGEID\":\r\n\t\t\t\treturn message.Envelope?.MessageId;\r\n\t\t\tcase \"REFERENCES\":\r\n\t\t\t\treturn message.References?.ToString ();\r\n\t\t\tcase \"BODYSTRUCTURE\":\r\n\t\t\t\treturn message.Body?.ToString ();\r\n\t\t\tcase \"PREVIEWTEXT\":\r\n\t\t\t\treturn message.PreviewText;\r\n\t\t\tcase \"XGMMSGID\":\r\n\t\t\t\tif (message.GMailMessageId.HasValue)\r\n\t\t\t\t\treturn (long) message.GMailMessageId.Value;\r\n\t\t\t\treturn null;\r\n\t\t\tcase \"XGMTHRID\":\r\n\t\t\t\tif (message.GMailThreadId.HasValue)\r\n\t\t\t\t\treturn (long) message.GMailThreadId.Value;\r\n\t\t\t\treturn null;\r\n\t\t\tcase \"EMAILID\":\r\n\t\t\t\treturn message.EmailId;\r\n\t\t\tcase \"THREADID\":\r\n\t\t\t\treturn message.ThreadId;\r\n\t\t\t//case \"SAVEDATE\":\r\n\t\t\t//\tif (message.SaveDate.HasValue)\r\n\t\t\t//\t\treturn message.SaveDate.Value.ToUniversalTime().DateTime;\r\n\t\t\t//\treturn null;\r\n\t\t\t//case \"SAVEDATETIMEZONE\":\r\n\t\t\t//\tif (message.SaveDate.HasValue)\r\n\t\t\t//\t\treturn message.SaveDate.Value.Offset.Ticks;\r\n\t\t\t//\treturn null;\r\n\t\t\tdefault:\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvoid UpdateKeywords (UniqueId uid, HashSet<string> keywords)\r\n\t\t{\r\n\t\t\tvar oldKeywords = new HashSet<string> (StringComparer.OrdinalIgnoreCase);\r\n\r\n\t\t\tLoadKeywords (uid, oldKeywords);\r\n\r\n\t\t\tusing (var transaction = sqlite.BeginTransaction ()) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tforeach (var keyword in oldKeywords) {\r\n\t\t\t\t\t\tif (keywords.Contains (keyword))\r\n\t\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\t\tusing (var command = sqlite.CreateCommand ()) {\r\n\t\t\t\t\t\t\tcommand.CommandText = $\"DELETE FROM {KeywordsTable.TableName} WHERE UID = @UID AND KEYWORD = @KEYWORD\";\r\n\t\t\t\t\t\t\tcommand.Parameters.AddWithValue (\"@UID\", (long) uid.Id);\r\n\t\t\t\t\t\t\tcommand.Parameters.AddWithValue (\"@KEYWORD\", keyword);\r\n\t\t\t\t\t\t\tcommand.CommandType = CommandType.Text;\r\n\r\n\t\t\t\t\t\t\tcommand.ExecuteNonQuery ();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tforeach (var keyword in keywords) {\r\n\t\t\t\t\t\tif (oldKeywords.Contains (keyword))\r\n\t\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\t\tusing (var command = sqlite.CreateCommand ()) {\r\n\t\t\t\t\t\t\tcommand.CommandText = $\"INSERT INTO {KeywordsTable.TableName} (UID, KEYWORD) VALUES(@UID, @KEYWORD)\";\r\n\t\t\t\t\t\t\tcommand.Parameters.AddWithValue (\"@UID\", (long) uid.Id);\r\n\t\t\t\t\t\t\tcommand.Parameters.AddWithValue (\"@KEYWORD\", keyword);\r\n\t\t\t\t\t\t\tcommand.CommandType = CommandType.Text;\r\n\r\n\t\t\t\t\t\t\tcommand.ExecuteNonQuery ();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttransaction.Commit ();\r\n\t\t\t\t} catch {\r\n\t\t\t\t\ttransaction.Rollback ();\r\n\t\t\t\t\tthrow;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvoid UpdateXGMLabels (UniqueId uid, HashSet<string> labels)\r\n\t\t{\r\n\t\t\tvar oldLabels = new HashSet<string> (StringComparer.OrdinalIgnoreCase);\r\n\r\n\t\t\tLoadXGMLabels (uid, oldLabels);\r\n\r\n\t\t\tusing (var transaction = sqlite.BeginTransaction ()) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tforeach (var label in oldLabels) {\r\n\t\t\t\t\t\tif (labels.Contains (label))\r\n\t\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\t\tusing (var command = sqlite.CreateCommand ()) {\r\n\t\t\t\t\t\t\tcommand.CommandText = $\"DELETE FROM {XGMLabelsTable.TableName} WHERE UID = @UID AND LABEL = @LABEL\";\r\n\t\t\t\t\t\t\tcommand.Parameters.AddWithValue (\"@UID\", (long) uid.Id);\r\n\t\t\t\t\t\t\tcommand.Parameters.AddWithValue (\"@LABEL\", label);\r\n\t\t\t\t\t\t\tcommand.CommandType = CommandType.Text;\r\n\r\n\t\t\t\t\t\t\tcommand.ExecuteNonQuery ();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tforeach (var label in labels) {\r\n\t\t\t\t\t\tif (oldLabels.Contains (label))\r\n\t\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\t\tusing (var command = sqlite.CreateCommand ()) {\r\n\t\t\t\t\t\t\tcommand.CommandText = $\"INSERT INTO {XGMLabelsTable.TableName} (UID, LABEL) VALUES(@UID, @LABEL)\";\r\n\t\t\t\t\t\t\tcommand.Parameters.AddWithValue (\"@UID\", (long) uid.Id);\r\n\t\t\t\t\t\t\tcommand.Parameters.AddWithValue (\"@LABEL\", label);\r\n\t\t\t\t\t\t\tcommand.CommandType = CommandType.Text;\r\n\r\n\t\t\t\t\t\t\tcommand.ExecuteNonQuery ();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttransaction.Commit ();\r\n\t\t\t\t} catch {\r\n\t\t\t\t\ttransaction.Rollback ();\r\n\t\t\t\t\tthrow;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tpublic void Update (UniqueId uid, IMessageSummary message)\r\n\t\t{\r\n\t\t\tusing (var transaction = sqlite.BeginTransaction ()) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tusing (var command = sqlite.CreateCommand ()) {\r\n\t\t\t\t\t\tvar columns = GetMessageTableColumns (message.Fields & ~MessageSummaryItems.UniqueId);\r\n\t\t\t\t\t\tvar builder = new StringBuilder ($\"INSERT INTO {MessageTable.TableName} (UID, FETCHED\");\r\n\r\n\t\t\t\t\t\tfor (int i = 0; i < columns.Count; i++) {\r\n\t\t\t\t\t\t\tbuilder.Append (\", \");\r\n\t\t\t\t\t\t\tbuilder.Append (columns[i]);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbuilder.Append (\") VALUES(@UID, @FETCHED\");\r\n\t\t\t\t\t\tcommand.Parameters.AddWithValue (\"@UID\", (long) uid.Id);\r\n\t\t\t\t\t\tcommand.Parameters.AddWithValue (\"@FETCHED\", (int) message.Fields);\r\n\r\n\t\t\t\t\t\tfor (int i = 0; i < columns.Count; i++) {\r\n\t\t\t\t\t\t\tvar value = GetValue (uid, message, columns[i]);\r\n\t\t\t\t\t\t\tvar variable = \"@\" + columns[i];\r\n\r\n\t\t\t\t\t\t\tbuilder.Append (\", \");\r\n\t\t\t\t\t\t\tbuilder.Append (variable);\r\n\t\t\t\t\t\t\tcommand.Parameters.AddWithValue (variable, value);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbuilder.Append (\") ON CONFLICT(UID) DO UPDATE SET FETCHED = FETCHED | @FETCHED\");\r\n\r\n\t\t\t\t\t\tfor (int i = 0; i < columns.Count; i++)\r\n\t\t\t\t\t\t\tbuilder.AppendFormat (\", {0} = @{0}\", columns[i]);\r\n\r\n\t\t\t\t\t\tcommand.CommandText = builder.ToString ();\r\n\t\t\t\t\t\tcommand.CommandType = CommandType.Text;\r\n\r\n\t\t\t\t\t\tcommand.ExecuteNonQuery ();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ((message.Fields & MessageSummaryItems.Flags) != 0)\r\n\t\t\t\t\t\tUpdateKeywords (uid, message.Keywords);\r\n\r\n\t\t\t\t\tif ((message.Fields & MessageSummaryItems.GMailLabels) != 0) {\r\n\t\t\t\t\t\tvar labels = new HashSet<string> (message.GMailLabels);\r\n\r\n\t\t\t\t\t\tUpdateXGMLabels (uid, labels);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttransaction.Commit ();\r\n\t\t\t\t} catch {\r\n\t\t\t\t\ttransaction.Rollback ();\r\n\t\t\t\t\tthrow;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// FIXME: we probably don't need this method\r\n\t\tpublic void UpdateFlags (UniqueId uid, MessageFlags flags, HashSet<string> keywords)\r\n\t\t{\r\n\t\t\tusing (var transaction = sqlite.BeginTransaction ()) {\r\n\t\t\t\tusing (var command = sqlite.CreateCommand ()) {\r\n\t\t\t\t\tcommand.CommandText = $\"UPDATE {MessageTable.TableName} SET FLAGS = @FLAGS WHERE UID = @UID\";\r\n\t\t\t\t\tcommand.Parameters.AddWithValue (\"@FLAGS\", (int) flags);\r\n\t\t\t\t\tcommand.Parameters.AddWithValue (\"@UID\", (long) uid.Id);\r\n\t\t\t\t\tcommand.CommandType = CommandType.Text;\r\n\r\n\t\t\t\t\tcommand.ExecuteNonQuery ();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tUpdateKeywords (uid, keywords);\r\n\r\n\t\t\t\ttransaction.Commit ();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// FIXME: we probably don't need this method\r\n\t\tpublic void UpdateModSeq (UniqueId uid, ulong modseq)\r\n\t\t{\r\n\t\t\tusing (var command = sqlite.CreateCommand ()) {\r\n\t\t\t\tcommand.CommandText = $\"UPDATE {MessageTable.TableName} SET MODSEQ = @MODSEQ WHERE UID = @UID\";\r\n\t\t\t\tcommand.Parameters.AddWithValue (\"@MODSEQ\", (long) modseq);\r\n\t\t\t\tcommand.Parameters.AddWithValue (\"@UID\", (long) uid.Id);\r\n\t\t\t\tcommand.CommandType = CommandType.Text;\r\n\r\n\t\t\t\tcommand.ExecuteNonQuery ();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tstatic string GetFileName (UniqueId uid, string section, int offset, int length)\r\n\t\t{\r\n\t\t\tvar fileName = uid.Id.ToString (CultureInfo.InvariantCulture);\r\n\r\n\t\t\tif (!string.IsNullOrEmpty (section))\r\n\t\t\t\tfileName += \".\" + section;\r\n\r\n\t\t\tif (offset != 0)\r\n\t\t\t\tfileName += \".\" + offset.ToString (CultureInfo.InvariantCulture);\r\n\r\n\t\t\treturn fileName;\r\n\t\t}\r\n\r\n\t\tpublic Stream CreateStream (UniqueId? uid, string section, int offset, int length)\r\n\t\t{\r\n\t\t\tvar tmpDir = Path.Combine (cacheDir, \"tmp\");\r\n\r\n\t\t\tif (!Directory.Exists (tmpDir))\r\n\t\t\t\tDirectory.CreateDirectory (tmpDir);\r\n\r\n\t\t\tstring fileName;\r\n\r\n\t\t\tif (uid.HasValue)\r\n\t\t\t\tfileName = GetFileName (uid.Value, section, offset, length);\r\n\t\t\telse\r\n\t\t\t\tfileName = Guid.NewGuid ().ToString ();\r\n\r\n\t\t\tdo {\r\n\t\t\t\tvar path = Path.Combine (tmpDir, fileName);\r\n\r\n\t\t\t\tif (!File.Exists (path)) {\r\n\t\t\t\t\tStream stream;\r\n\t\t\t\t\tbool isFile;\r\n\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tstream = File.Create (path);\r\n\t\t\t\t\t\tisFile = true;\r\n\t\t\t\t\t} catch {\r\n\t\t\t\t\t\tstream = new MemoryStream ();\r\n\t\t\t\t\t\tisFile = false;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tstream.SetLength (length);\r\n\r\n\t\t\t\t\t\tif (stream is FileStream) {\r\n\t\t\t\t\t\t\tlock (streams)\r\n\t\t\t\t\t\t\t\tstreams.Add (stream, path);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\treturn stream;\r\n\t\t\t\t\t} catch {\r\n\t\t\t\t\t\tstream.Dispose ();\r\n\r\n\t\t\t\t\t\tif (isFile && File.Exists (path))\r\n\t\t\t\t\t\t\tFile.Delete (path);\r\n\r\n\t\t\t\t\t\tthrow;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfileName = Guid.NewGuid ().ToString ();\r\n\t\t\t} while (true);\r\n\t\t}\r\n\r\n\t\tstring GetFilePath (UniqueId uid, string section, int offset, int length)\r\n\t\t{\r\n\t\t\tvar fileName = GetFileName (uid, section, offset, length);\r\n\t\t\tvar hex = uid.Id.ToString (\"X8\");\r\n\t\t\tvar dir = cacheDir;\r\n\r\n\t\t\tfor (int i = 0; i < 8; i += 2)\r\n\t\t\t\tdir = Path.Combine (dir, hex.Substring (i, 2));\r\n\r\n\t\t\treturn Path.Combine (dir, fileName);\r\n\t\t}\r\n\r\n\t\tpublic Stream CommitStream (Stream stream, UniqueId uid, string section, int offset, int length)\r\n\t\t{\r\n\t\t\tstring tmpFileName;\r\n\r\n\t\t\tlock (streams) {\r\n\t\t\t\tif (!streams.TryGetValue (stream, out tmpFileName))\r\n\t\t\t\t\treturn stream;\r\n\r\n\t\t\t\tstreams.Remove (stream);\r\n\t\t\t}\r\n\r\n\t\t\tvar path = GetFilePath (uid, section, offset, length);\r\n\t\t\tvar dir = Path.GetDirectoryName (path);\r\n\r\n\t\t\ttry {\r\n\t\t\t\tif (!Directory.Exists (dir))\r\n\t\t\t\t\tDirectory.CreateDirectory (dir);\r\n\r\n\t\t\t\tif (!File.Exists (path))\r\n\t\t\t\t\tFile.Move (tmpFileName, path);\r\n\r\n\t\t\t\tstream.Dispose ();\r\n\t\t\t\tstream = null;\r\n\r\n\t\t\t\treturn File.OpenRead (path);\r\n\t\t\t} catch {\r\n\t\t\t\tif (stream != null) {\r\n\t\t\t\t\tstream.Seek (0, SeekOrigin.Begin);\r\n\t\t\t\t\treturn stream;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthrow;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tpublic bool TryGetStream (UniqueId uid, string section, int offset, int length, out Stream stream)\r\n\t\t{\r\n\t\t\tvar path = GetFilePath (uid, section, offset, length);\r\n\r\n\t\t\tif (File.Exists (path)) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tstream = File.OpenRead (path);\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t} catch {\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tstream = null;\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tvoid OnUidNextChanged (object sender, EventArgs e)\r\n\t\t{\r\n\t\t\tif (UidNext == folder.UidNext?.Id)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tUidNext = folder.UidNext?.Id;\r\n\t\t\tSaveStatus ();\r\n\t\t}\r\n\r\n\t\tvoid OnUidValidityChanged (object sender, EventArgs e)\r\n\t\t{\r\n\t\t\tif (UidValidity == folder.UidValidity)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tClear ();\r\n\r\n\t\t\tUidValidity = folder.UidValidity;\r\n\t\t\tSaveStatus ();\r\n\t\t}\r\n\r\n\t\tvoid OnHighestModSeqChanged (object sender, EventArgs e)\r\n\t\t{\r\n\t\t\tif (HighestModSeq == folder.HighestModSeq)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tHighestModSeq = folder.HighestModSeq;\r\n\t\t\tSaveStatus ();\r\n\t\t}\r\n\r\n\t\tvoid OnMessageExpunged (object sender, MessageEventArgs e)\r\n\t\t{\r\n\t\t\tif (TryGetUniqueId (e.Index, out var uid))\r\n\t\t\t\tExpunge (uid);\r\n\t\t}\r\n\r\n\t\tvoid OnMessagesVanished (object sender, MessagesVanishedEventArgs e)\r\n\t\t{\r\n\t\t\tforeach (var uid in e.UniqueIds)\r\n\t\t\t\tExpunge (uid);\r\n\t\t}\r\n\r\n\t\tvoid OnMessageSummaryFetched (object sender, MessageSummaryFetchedEventArgs e)\r\n\t\t{\r\n\t\t\tUniqueId uid;\r\n\r\n\t\t\tif (e.Message.UniqueId.IsValid)\r\n\t\t\t\tuid = e.Message.UniqueId;\r\n\t\t\telse if (!TryGetUniqueId (e.Message.Index, out uid))\r\n\t\t\t\treturn;\r\n\r\n\t\t\tUpdate (uid, e.Message);\r\n\t\t}\r\n\r\n\t\tpublic void Dispose ()\r\n\t\t{\r\n\t\t\tif (sqlite != null) {\r\n\t\t\t\tCloseDatabase ();\r\n\r\n\t\t\t\tfolder.UidNextChanged -= OnUidNextChanged;\r\n\t\t\t\tfolder.UidValidityChanged -= OnUidValidityChanged;\r\n\t\t\t\tfolder.HighestModSeqChanged -= OnHighestModSeqChanged;\r\n\r\n\t\t\t\tfolder.MessageExpunged -= OnMessageExpunged;\r\n\t\t\t\tfolder.MessagesVanished -= OnMessagesVanished;\r\n\t\t\t\tfolder.MessageSummaryFetched -= OnMessageSummaryFetched;\r\n\r\n\t\t\t\tsqlite.Dispose ();\r\n\t\t\t\tsqlite = null;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n```"
      },
      {
        "user": "jstedfast",
        "created_at": "2021-02-28T21:41:28Z",
        "body": "You'll want to pay close attention to the MessageCache.OpenAndResyncAsync() method and its logic."
      },
      {
        "user": "DierkDroth",
        "created_at": "2021-03-01T05:54:40Z",
        "body": "Thanks @jstedfast for looking into \r\n\r\nTo clarify, what you suggested above\r\n> You can use folder.Search (SearchQuery.All) to get the full list of UIDs that exist on the server and remove the UIDs that your local cache knows about.\r\n> From there, you can use folder.Fetch (uids, ...) to get the summary info for the messages you don't already have cached.\r\n\r\n... basically means mapping the gazillions of mail items on the IMAP server to the gazillions of the mail items in the local cache (which is a DB) on every startup, correct? This unlikely will work for large setups\r\n\r\nAlso:\r\n- I haven't ripped through your code yet, but does it implement the same mapping approach based on mapping UIDs?\r\n- doesn't IMAP provide a logic like \"get me everything since last <UniqueID/MessageID/Timestamp...>\"?"
      },
      {
        "user": "jstedfast",
        "created_at": "2021-03-01T16:05:44Z",
        "body": "> ... basically means mapping the gazillions of mail items on the IMAP server to the gazillions of the mail items in the local cache (which is a DB) on every startup, correct?\r\n\r\nCorrect.\r\n\r\n> This unlikely will work for large setups\r\n\r\nIt has to. There's no other option.\r\n\r\n> Also:\r\n> * I haven't ripped through your code yet, but does it implement the same mapping approach based on mapping UIDs?\r\n\r\nIt maps by UID, yes. The database that I designed (I'm fairly new to databases, so I'm sure it could be a lot better) uses the UID as the primary key.\r\n\r\n> * doesn't IMAP provide a logic like \"get me everything since last <UniqueID/MessageID/Timestamp...>\"?\r\n\r\nIf the IMAP server supports CONDSTORE, then it supports \"get me everything that changed since `<mod-seq>`\", but the core IMAP protocol does not support that so you always need to handle the case where that isn't supported.\r\n\r\nThe MessageCache.OpenAndResyncAsync() method should demonstrate how to do it no matter what extensions are supported by the IMAP server.\r\n\r\nJust a reminder, but the code I pasted above is incomplete (especially the CachedImapFolder class). I hadn't figured out a nice clean way of designing the API or figuring out how it should work when I gave up working on it (had other things on my plate at the time that were more pressing)."
      },
      {
        "user": "DierkDroth",
        "created_at": "2021-03-01T16:10:03Z",
        "body": "Thanks @jstedfast. Let me chew on that..."
      },
      {
        "user": "DierkDroth",
        "created_at": "2021-03-09T12:37:50Z",
        "body": "FYI for anyone who's facing the same challenge. Here is what I did  ... it appears to work:\r\n- if CONDSTORE support present -> no problem, proceed as per above\r\n- else\r\n** get uidNext = IMailFolder.UidNext on opening the folder\r\n** increment uidNext on .CountChanged as count is larger than on last .CountChanged event\r\n** fetch the integer value range (convert them to UniqueId) from uidNext down to priorUidNext  (which you have saved from prior fetch)\r\n    note: not all integers might make up existing UniqueId and throw exceptions when fetching. However, I'm willing to pay that price\r\n"
      }
    ]
  },
  {
    "number": 1158,
    "title": "IMailFolder.Search with UIDs range [x:*] keeps retrieving UID x-1",
    "created_at": "2021-02-26T21:05:00Z",
    "closed_at": "2021-02-27T21:42:41Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1158",
    "body": "Hi,\r\n\r\nI'm developing a method where I connect to an IMAP client and search for new messages using the overload for `Search` that accepts an `IList<UniqueId>` parameter; I need to search for messages with UID greater than the last one I read because the method will be executed in a shared mailbox that is already verified by another application, so I can't change any of the messages I find.\r\n\r\nWhen I run the `Search` method looking for messages with UID greater than the last one I read (let's say `x`), the result keeps retrieving the message with UID `x`, and nothing else, falling in an infinite loop.\r\n\r\nHere is my code:\r\n\r\n```\r\npublic async Task ReadMailBox()\r\n{\r\n    using var client = new ImapClient();\r\n\r\n    try\r\n    {\r\n        await client.ConnectAsync(\"outlook.office365.com\", 993, true);\r\n        await client.AuthenticateAsync(\"username\", \"password\");\r\n        \r\n        var inboxFolder = client.GetFolder(\"Inbox\");\r\n        inboxFolder.Open(FolderAccess.ReadOnly);\r\n\r\n        var query = SearchQuery.SubjectContains(\"MyId\")\r\n            .And(SearchQuery.Seen);\r\n\r\n        uint lastReadId = 0; // will be retrieved from database afterwards\r\n\r\n        var listOfMessageId = SearchMailMessages(inboxFolder, lastReadId, query);\r\n\r\n        while (listOfMessageId.Any())\r\n        {\r\n            foreach (var messageId in listOfMessageId)\r\n            {\r\n                // some code\r\n            }\r\n\r\n            lastReadId = listOfMessageId.Max(x => x.Id);\r\n            // getting 72 here\r\n\r\n            listOfMessageId = SearchMailMessages(inboxFolder, lastReadId, query);\r\n            // getting one-item list, with UID 72 again\r\n        }\r\n    }\r\n    catch (Exception)\r\n    {\r\n        // some log here\r\n        throw;\r\n    }\r\n    finally\r\n    {\r\n        if (client.IsConnected)\r\n        {\r\n            await client.DisconnectAsync(true);\r\n        }\r\n    }\r\n}\r\n\r\nprivate IList<UniqueId> SearchMailMessages(IMailFolder mailFolder, uint? lastMessageId = null, SearchQuery query = null)\r\n{\r\n    var rangeStart = lastMessageId.HasValue ? new UniqueId(lastMessageId.Value + 1) : UniqueId.MinValue;\r\n    \r\n    var range = new UniqueIdRange(rangeStart, UniqueId.MaxValue);\r\n\r\n    if (query == null)\r\n    {\r\n        query = SearchQuery.All;\r\n    }\r\n\r\n    var listOfMessageId = mailFolder.Search(range, query);\r\n\r\n    return listOfMessageId;\r\n}\r\n```\r\n\r\nFor some reason, this seems to happen only when the code is executed and there's no message in the search with UID greater than the last one read.\r\n\r\nThanks in advance!\r\n\r\n**Platform:**\r\n - OS: Windows\r\n - .NET Framework: .NET 5.0\r\n - MailKit Version: 2.10.1 (latest as of this post)",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1158/comments",
    "author": "barbaraacsilva",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2021-02-27T21:42:39Z",
        "body": "According to the spec:\r\n\r\n           Also note that a UID range of 559:* always includes the\r\n           UID of the last message in the mailbox, even if 559 is\r\n           higher than any assigned UID value.  This is because the\r\n           contents of a range are independent of the order of the\r\n           range endpoints.  Thus, any UID range with * as one of\r\n           the endpoints indicates at least one message (the\r\n           message with the highest numbered UID), unless the\r\n           mailbox is empty.\r\n\r\nYou'll probably just have to check if the first value is the lastMessageId value, and if so, ignore it."
      }
    ]
  },
  {
    "number": 1149,
    "title": "Spam",
    "created_at": "2021-02-06T11:05:28Z",
    "closed_at": "2021-02-06T14:26:17Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1149",
    "body": "\r\nHi, \r\nsent messages come to spam . How can i this problem?",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1149/comments",
    "author": "ValSergey",
    "comments": [
      {
        "user": "ValSergey",
        "created_at": "2021-02-06T11:08:27Z",
        "body": "*How can i solve this problem?"
      },
      {
        "user": "jstedfast",
        "created_at": "2021-02-06T14:26:17Z",
        "body": "The only advice I can offer is don't send emails that the spam filtering software on the mail server classifies as spam."
      }
    ]
  },
  {
    "number": 1142,
    "title": "Sending email with MailKit: 5.7.60 SMTP; Client does not have permissions to send as this sender",
    "created_at": "2021-01-22T10:44:07Z",
    "closed_at": "2021-01-23T17:24:47Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1142",
    "body": "Hi,\r\nI'm trying to write an application that will send an email, with already pre-defined text and senders.\r\n\r\nFor testing, I wrote a mini-application that pulls the sender's eMail from Active Directory, authenticates through NSspi and sends the mail. Sending is done via MailKit.\r\n\r\nActually my approximate sending code:\r\n\r\n```\r\nPrivate Sub Button2_Click(sender As Object, e As EventArgs) Handles Button2.Click\r\nDim emailMessage = New MimeMessage()\r\nemailMessage.From.Add(New MailboxAddress(UserPrincipal.Current.Name, UserPrincipal.Current.EmailAddress))\r\n\r\nemailMessage.To.Add(New MailboxAddress(\"\", \"lastname.firstname@email.com\"))\r\nemailMessage.Cc.Add(New MailboxAddress(UserPrincipal.Current.Name, UserPrincipal.Current.EmailAddress))\r\n\r\nemailMessage.Subject = \"Test Mail: Test\"\r\nDim emailBuilder As New BodyBuilder()\r\n\r\nemailBuilder.HtmlBody = String.Format(\"<div>Hi, <br/><br/><br/><br/> \r\n                                          ___________________________________________________________________\r\n                                          <br/><br/>+++ TEST EMAIL +++<br/>\r\n                                          ___________________________________________________________________<br/><br/>\r\n                                          \")\r\n\r\n' Now we just need to set the message body and we're done\r\nemailMessage.Body = emailBuilder.ToMessageBody()\r\n\r\nUsing emailClient = New SmtpClient()\r\n  emailClient.Connect(\"smtp-server.com\", 587, SecureSocketOptions.None)\r\n\r\n  If emailClient.Capabilities.HasFlag(SmtpCapabilities.Authentication) Then\r\n    Dim sasl As SaslMechanismNtlmIntegrated = New SaslMechanismNtlmIntegrated()\r\n    emailClient.Authenticate(sasl)\r\n  End If\r\n\r\n  If emailClient.Capabilities.HasFlag(SmtpCapabilities.Size) Then\r\n    Console.WriteLine(\"The SMTP server has a size restriction on messages: {0}.\", emailClient.MaxSize)\r\n  End If\r\n\r\n  If emailClient.Capabilities.HasFlag(SmtpCapabilities.Dsn) Then\r\n    Console.WriteLine(\"The SMTP server supports delivery-status notifications.\")\r\n  End If\r\n\r\n  If emailClient.Capabilities.HasFlag(SmtpCapabilities.EightBitMime) Then\r\n    Console.WriteLine(\"The SMTP server supports Content-Transfer-Encoding: 8bit\")\r\n  End If\r\n\r\n  If emailClient.Capabilities.HasFlag(SmtpCapabilities.BinaryMime) Then\r\n    Console.WriteLine(\"The SMTP server supports Content-Transfer-Encoding: binary\")\r\n  End If\r\n\r\n  If emailClient.Capabilities.HasFlag(SmtpCapabilities.UTF8) Then\r\n    Console.WriteLine(\"The SMTP server supports UTF-8 in message headers.\")\r\n  End If\r\n\r\n  emailClient.Send(emailMessage)\r\n  emailClient.Disconnect(True)\r\nEnd Using\r\n\r\nEnd Sub\r\n```\r\n\r\n\r\nand the SaslMechanismNtlmIntegrated class\r\n\r\n```\r\nImports MailKit.Security\r\nImports NSspi\r\nImports NSspi.Contexts\r\nImports NSspi.Credentials\r\n\r\nPublic Class SaslMechanismNtlmIntegrated\r\n  Inherits SaslMechanism\r\n\r\n  Enum LoginState\r\n    Initial\r\n    Challenge\r\n  End Enum\r\n\r\n  Private state As LoginState\r\n  Private sspiContext As ClientContext\r\n\r\n  Public Sub New()\r\n    MyBase.New(String.Empty, String.Empty)\r\n  End Sub\r\n\r\n  Public Overrides ReadOnly Property MechanismName As String\r\n    Get\r\n      Return \"NTLM\"\r\n    End Get\r\n  End Property\r\n\r\n  Public Overrides ReadOnly Property SupportsInitialResponse As Boolean\r\n    Get\r\n      Return True\r\n    End Get\r\n  End Property\r\n\r\n  Protected Overrides Function Challenge(ByVal token As Byte(), ByVal startIndex As Integer, ByVal length As Integer) As Byte()\r\n    If IsAuthenticated Then Throw New InvalidOperationException()\r\n    InitializeSSPIContext()\r\n    Dim serverResponse As Byte() = Nothing\r\n    Dim status As SecurityStatus\r\n\r\n    Select Case state\r\n      Case LoginState.Initial\r\n        status = sspiContext.Init(Nothing, serverResponse)\r\n        state = LoginState.Challenge\r\n      Case LoginState.Challenge\r\n        status = sspiContext.Init(token, serverResponse)\r\n        IsAuthenticated = True\r\n      Case Else\r\n        Throw New IndexOutOfRangeException(\"state\")\r\n    End Select\r\n\r\n    Return serverResponse\r\n  End Function\r\n\r\n  Private Sub InitializeSSPIContext()\r\n    If sspiContext IsNot Nothing Then\r\n      Return\r\n    End If\r\n\r\n    Dim credential = New ClientCurrentCredential(PackageNames.Ntlm)\r\n    sspiContext = New ClientContext(credential, String.Empty, ContextAttrib.InitIntegrity Or ContextAttrib.ReplayDetect Or ContextAttrib.SequenceDetect Or ContextAttrib.Confidentiality)\r\n  End Sub\r\n\r\n  Public Overrides Sub Reset()\r\n    state = LoginState.Initial\r\n    MyBase.Reset()\r\n  End Sub\r\nEnd Class\r\n```\r\n\r\n\r\nWhen sending an email I get the following error 5.7.60 SMTP; Client does not have permissions to send as this sender. I do not understand what the problem is, because the authentication occurs through a user who sits in front of the computer and logged into his account.\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1142/comments",
    "author": "igrebel",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2021-01-23T15:38:17Z",
        "body": "It means that the address in the From header probably doesn't match the address used to authenticate."
      },
      {
        "user": "igrebel",
        "created_at": "2021-01-25T07:44:20Z",
        "body": "> It means that the address in the From header probably doesn't match the address used to authenticate.\r\n\r\nHow can it be? "
      },
      {
        "user": "jstedfast",
        "created_at": "2021-01-25T16:30:18Z",
        "body": "UserPrincipal.Current.EmailAddress might not match the username string used by the NtlmIntegrated logic which probably uses the username that the user used to login to their workstation (which is usually not their email address)."
      },
      {
        "user": "igrebel",
        "created_at": "2021-01-26T10:21:52Z",
        "body": "> UserPrincipal.Current.EmailAddress might not match the username string used by the NtlmIntegrated logic which probably uses the username that the user used to login to their workstation (which is usually not their email address).\r\n\r\nHmm, so is there any way to fix that? \r\nAnd the second situation is, I can send the email from two or three accounts the way above (code), but its not working for another users."
      },
      {
        "user": "jstedfast",
        "created_at": "2021-01-26T16:35:17Z",
        "body": "I'm not sure :("
      },
      {
        "user": "jstedfast",
        "created_at": "2021-01-26T16:40:22Z",
        "body": "I'm not sure :("
      },
      {
        "user": "igrebel",
        "created_at": "2021-01-27T08:21:06Z",
        "body": "Is there maybe other AUTH function, which I can use with Active Directory? "
      }
    ]
  },
  {
    "number": 1141,
    "title": "Round Robin",
    "created_at": "2021-01-22T08:21:36Z",
    "closed_at": "2021-01-22T16:16:54Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1141",
    "body": "Could you please advise if MailKit supports Round Robin?",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1141/comments",
    "author": "YuriySamorodov",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2021-01-22T16:16:54Z",
        "body": "Round-robin, as far as I know, is something that servers implement, not clients.\r\n\r\nWhat round-robin means is that a front-end server will forward client connections to an alternate server to handle commands/etc. in order to redistribute traffic such that no 1 server is bogged down by trying to handle too many clients."
      }
    ]
  },
  {
    "number": 1139,
    "title": "I'm getting \"BAD Command Argument Error. 11\" when set \\Seen flag",
    "created_at": "2021-01-20T07:44:19Z",
    "closed_at": "2021-01-20T15:54:46Z",
    "labels": [
      "question",
      "server-bug"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1139",
    "body": "I'm trying to mark as read a mail in my inbox.And I'm getting BAD Command Argument Error. 11 error when i set the flag.\r\n\r\nCAPABILITY from my ProtocolLogger :\r\n**S: * CAPABILITY IMAP4 IMAP4rev1 AUTH=NTLM AUTH=GSSAPI AUTH=PLAIN  STARTTLS UIDPLUS CHILDREN IDLE NAMESPACE LITERAL+**\r\n\r\nError part from my ProtocolLogger :\r\n\r\n**S: A00000013 OK FETCH completed.\r\nC: A00000014 UID STORE 108 FLAGS.SILENT (\\Seen)\r\nS: A00000014 BAD Command Argument Error. 11**\r\n\r\nActually i can run this command with  Exchange server 2015 but we have another server version is 2010.\r\nI need to run this with Exchange Server 2010 too.\r\n\r\nI'm getting uid's like below\r\n`var client = new ImapClient(new ProtocolLogger(\"imap.log\"))`\r\n*\r\n*\r\n*\r\n\r\n```\r\nvar uids = client.Inbox.Search(searchQuery);\r\n                foreach (var uid in uids)\r\n                {\r\n                    var message = client.Inbox.GetMessage(uid);\r\n```\r\n\r\nIt's thrown exception at this line:\r\n`client.Inbox.SetFlags(uid, MessageFlags.Seen, true);\r\n`\r\nAlso i have a same problem with  MessageFlags.Deleted flag too.\r\n\r\n`client.Inbox.SetFlags(uid, MessageFlags.Deleted, true);\r\n`\r\nHow can i fix this problem ? \r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1139/comments",
    "author": "odabas",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2021-01-20T15:54:46Z",
        "body": "That appears to be a server bug.\r\n\r\nYou might be able to work around it by using the index-based SetFlags method (i.e. using an int index rather than a UID).\r\n\r\nThe BAD response is supposed to only be used by the server if the command is malformed (which in this case, it is not)."
      }
    ]
  },
  {
    "number": 1138,
    "title": "MailFaulted event",
    "created_at": "2021-01-18T09:13:48Z",
    "closed_at": "2021-01-18T17:49:18Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1138",
    "body": "**Is your feature request related to a problem? Please describe.**\r\nIf you send a mail by SendAsync and don't want to await the return (you use async so you don't have to), you have to use handlers like ContinueWith Action<Task> and so on. That is uncomfortable for a programmer to use. If it sends, everything is fine, but if the sending does not work, possible exceptions are lost and there is no further handling.\r\n\r\n**Describe the solution you'd like**\r\nIt would be really cool if there was some event handler like the MailSent event, where I can handle my exceptions and so on.\r\n\r\n**Describe alternatives you've considered**\r\nUsing a ContinueWith, but as already written, that is not really nice to use.\r\n\r\n**Additional context**\r\n-",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1138/comments",
    "author": "Taldrit",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2021-01-18T17:49:18Z",
        "body": "This sounds like what you want to do is `await`. You can make your own async wrapper method that awaits MailKit's SendAsync() method, catches the exceptions, and does whatever you need to do."
      }
    ]
  },
  {
    "number": 1131,
    "title": "pop3Client: A connection attempt failed because the connected party...",
    "created_at": "2021-01-12T04:43:41Z",
    "closed_at": "2021-01-12T16:51:37Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1131",
    "body": "I am having this issue in a local machine...\r\n\r\n```\r\ntry{\r\npop3Client.ServerCertificateValidationCallback = (s, c, h, e) => true;\r\npop3Client.Connect(\"pop.gmail.com\", 995, SecureSocketOptions.SslOnConnect);\r\npop3Client.Authenticate(logonName, logonPassword);\r\n}\r\ncatch(Exception e){\r\n}\r\n```\r\n\r\nI am getting the exception:\r\n\"A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond\"\r\n\r\nThe log is:\r\nConnected to pops://pop.gmail.com:995/\r\nS: +OK Gpop ready for requests from 71.59.xx.xxx l13mb529002861qtp\r\nC: CAPA\r\nS: +OK Capability list follows\r\nS: USER\r\nS: RESP-CODES\r\nS: EXPIRE 0\r\nS: LOGIN-DELAY 300\r\nS: TOP\r\nS: UIDL\r\nS: X-GOOGLE-RICO\r\nS: SASL PLAIN XOAUTH2 OAUTHBEARER\r\nS: .\r\nC: AUTH PLAIN\r\nS: + \r\nC: ....base64string.... (decodes to: recent:xxx@domain.com,My-password)\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1131/comments",
    "author": "skdutta-ga",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2021-01-12T16:51:37Z",
        "body": "Looks like the TCP connection timed out. What you need to do is catch exceptions like this one and re-connect and try again.\r\n\r\nThis is a fairly common network error that happens to all network software."
      },
      {
        "user": "skdutta-ga",
        "created_at": "2021-01-27T04:35:08Z",
        "body": "Tried this and still it is not working. I am finding that the Connect call is sometimes giving \"Operation Timed Out\" when I am trying yahoo pop3 account, whereas when I try with Gmail pop it gives error: \r\n\r\n\"A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond\"\r\n\r\nIs there a way to find out what is happening or google just shut off the pop3 access? I already enabled pop3 in settings and enabled the less secure apps."
      },
      {
        "user": "jstedfast",
        "created_at": "2021-01-27T16:41:52Z",
        "body": "You could try setting the client.Timeout property to something larger...\r\n\r\nThe default timeout should be plenty, though.\r\n\r\nYou don't actually need to enable POP3 access in your gmail settings to be able to connect to pop.gmail.com - that server is always up regardless. The setting only enables authentication to work for your account."
      }
    ]
  },
  {
    "number": 1123,
    "title": "Save message with attachment as eml file",
    "created_at": "2020-12-26T01:25:08Z",
    "closed_at": "2020-12-26T20:52:26Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1123",
    "body": "To help me debug your issue, please explain:\r\n- What were you trying to do?\r\n     save a message as eml file\r\n     using WriteTo()\r\n- What happened?\r\n    All ok except attachment which is a stream is not written.\r\n- What did you expect to happen?\r\n    I expected the full message to be written including the attachments streams\r\n- Step-by-step reproduction instructions and/or a simple test case.\r\n    CREATE THE ATTACHMENT\r\n                var attachment = new MimePart()\r\n                {\r\n                    Content = new MimeContent(streamOut),\r\n                    ContentDisposition = new ContentDisposition(ContentDisposition.Attachment),\r\n                    FileName = item.Key,\r\n                    IsAttachment = true\r\n                };\r\n    AFTER ADDING THE ATTACHMENT TO THE MESSAGE\r\n                using (var ms = new MemoryStream())\r\n                {\r\n                    await message.WriteToAsync(ms, false).ConfigureAwait(false);\r\n                    var buffer = ms.ToArray();\r\n                    var str = Encoding.UTF8.GetString(buffer);\r\n                }\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1123/comments",
    "author": "ghendo",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2020-12-26T20:52:20Z",
        "body": "Make sure that you set the `Position` of `streamOut` back to 0."
      }
    ]
  },
  {
    "number": 1114,
    "title": "Can't get body of message in Sent folder - Outlook",
    "created_at": "2020-12-11T18:16:02Z",
    "closed_at": "2020-12-23T16:24:36Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1114",
    "body": "Hi Jeff,\r\n\r\nI have a problem with outlook. When I display TextBody of mail in sent folder, it's empty. But when I tried with Gmail then it showed up\r\nAm I wrong? please tell me :(\r\n\r\nThis is my code:\r\n```\r\npublic async Task GetMails()\r\n{\r\n    var personal = await imapClient.GetFoldersAsync(imapClient.PersonalNamespaces[0]);\r\n    var folder = personal.SingleOrDefault(f => f.Name.ToLower().Contains(\"sent\"));\r\n\r\n    await folder.OpenAsync(FolderAccess.ReadOnly);\r\n\r\n    var messageSummaries = await folder.FetchAsync(0, -1, MessageSummaryItems.UniqueId);\r\n    foreach (var messageSummary in messageSummaries)\r\n    {\r\n        var message = await folder.GetMessageAsync(messageSummary.UniqueId);\r\n        Console.WriteLine(message.From);\r\n        Console.WriteLine(message.TextBody);\r\n    }\r\n}\r\n```\r\n\r\nEnv: Windows - Net 4.8\r\n\r\nThanks.",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1114/comments",
    "author": "namnd19",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2020-12-23T16:24:36Z",
        "body": "Hi @namnd19 \r\n\r\nSorry about the delayed response.\r\n\r\nNot all messages will have a `TextBody`, some might only have an `HtmlBody` and some might even have neither (rare, but possible).\r\n\r\nFor what it's worth, you can improve your code a bit by using Search() to get all of the UIDs instead of Fetch() like this:\r\n\r\n```csharp\r\npublic async Task GetMails()\r\n{\r\n    var personal = await imapClient.GetFoldersAsync(imapClient.PersonalNamespaces[0]);\r\n    var folder = personal.SingleOrDefault(f => f.Name.ToLower().Contains(\"sent\"));\r\n\r\n    await folder.OpenAsync(FolderAccess.ReadOnly);\r\n\r\n    var uids = await folder.SearchAsync(SearchQuery.All);\r\n    foreach (var uid in uids)\r\n    {\r\n        var message = await folder.GetMessageAsync(uid);\r\n        Console.WriteLine(message.From);\r\n        Console.WriteLine(message.TextBody);\r\n    }\r\n}\r\n```\r\n\r\nFetch() is more expensive (especially in terms of bandwidth) than Search() if all you want are the UIDs.\r\n\r\nHope that helps."
      }
    ]
  },
  {
    "number": 1109,
    "title": "Question related to concurrent IMAP connections",
    "created_at": "2020-12-01T14:30:36Z",
    "closed_at": "2020-12-01T16:24:54Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1109",
    "body": "Hey! It's not an issue and my question not straightforward related to `MailKit` (even if I use it). I ask this question because you might got an exclusive experience while developing this library. Hope, you don't mind 🙂 \r\n\r\n---\r\n\r\nI have two thread:\r\n1. Incoming - this thread search `NotDeleted` messages, keep track of what were readed and enqueue new messages next to pipeline. Use: `await ImapClient.Inbox.SearchAsync(SearchQuery.NotDeleted, cancellationToken)`.\r\n2. Outgoing - this thread (after some processing) mark one message per iteration as `Deleted`. Use: `await ImapClient.Inbox.SetFlagsAsync(messageId, MessageFlags.Deleted | MessageFlags.Seen, false, cancellationToken)`.\r\n\r\nI have an issue that second thread works only short period of time right after connection. If second thread had pause for several seconds, `SetFlags` command didn't applied to messages (or it applied and reverted some way, I'm not sure), even if `MailKit` and `dovecot` logs success result:\r\n```\r\nC: B00000006 UID STORE 21 FLAGS (\\Deleted \\Seen)\r\nS: B00000006 OK Store completed (0.001 + 0.000 secs).\r\nC: B00000007 UID STORE 22 FLAGS (\\Deleted \\Seen)\r\nS: * 1 EXPUNGE\r\nS: * 1 EXIST\r\nS: B00000007 OK Store completed (0.001 + 0.000 secs).\r\n```\r\nMessage UID 21 - was processed after initial connect - flag was setted.\r\nMessage UID 22 - was processed after ~5 seconds pause after message UID 21 - didn't get any flags.\r\n\r\nAfter that log both on client and server I see (through `doveadm`) that message with UID 22 doesn't have any flags.. And it breaks my program in some way.\r\n\r\n**BUT**! If I add a call of `await ImapClient.NoOpAsync(cancellationToken)` before `SetFlags` - it immediately got fixed.\r\n\r\nAlso I tested one instance with locking on `SyncRoot` - works perfectly, but locks are banned 😅\r\n\r\n---\r\n\r\nSo, do you know some reasons of such behavior? Or is it IMAP thing that couldn't be fixed without such \"smell\" NoOp call? Or maybe I just use `MailKit` wrong and there is an ability to do it more correct? As I said I have readonly job and writeonly job, both independant and connected through one way task queue.",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1109/comments",
    "author": "kislovs",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2020-12-01T14:46:22Z",
        "body": "Odd.\r\n\r\nBased on the logs, it seems thread 2 successfully set the flags but you are saying that the flags aren't actually set on the server? That might be a server bug (kinda surprised, though, because Dovecot is top-notch as far as IMAP servers go).\r\n\r\nOne thing to keep in mind is that the NOOP command is to keep the connection alive. If a long enough period of idleness passes, the server will drop your connection. According to the IMAP specifications, this time limit is supposed to be >= 30 minutes, but my experience with some servers like GMail is that it's closer to ~10 minutes.\r\n\r\nThat said, the `UID STORE 22 FLAGS (...)` command is succeeding (according to the log) and as you said, it was only ~5 seconds after connecting, so that shouldn't require a NOOP.\r\n"
      },
      {
        "user": "kislovs",
        "created_at": "2020-12-01T14:58:57Z",
        "body": "> Based on the logs, it seems thread 2 successfully set the flags but you are saying that the flags aren't actually set on the server?\r\n\r\nYeah, it is. We temporarily turn off log of IMAP sessions and dovecot got same logs, byte-to-byte. \r\n\r\n> That might be a server bug (kinda surprised, though, because Dovecot is top-notch as far as IMAP servers go).\r\n\r\nI don't actually think that it's dovecot's bug, more likely some race conditions maybe.. (as I said \"maybe reverted somehow\")\r\n\r\n> One thing to keep in mind is that the NOOP command is to keep the connection alive. If a long enough period of idleness passes, the server will drop your connection. According to the IMAP specifications, this time limit is supposed to be >= 30 minutes, but my experience with some servers like GMail is that it's closer to ~10 minutes.\r\nThat said, the UID STORE 22 FLAGS (...) command is succeeding (according to the log) and as you said, it was only ~5 seconds after connecting, so that shouldn't require a NOOP.\r\n\r\nYeah, read in the RFC and XML comments in MailKit 🙂 I think it's not required to be `NoOp`, any read / fetch request to server is  okay maybe (didn't test). \r\n\r\nBoth of my threads work in `while (true)` loop with 1 second (at least for now) delay. And if first is always request to server to check any updates, second does it only when it has work to do (when first enqueue something). So second could have pretty big delay (even minutes). If I add `NoOp` call at the start of iteration in second thread - always works fine. If I track `LastConnectedAt` time and reconnect after 5 minutes of inactivity - it doesn't work. If I do `NoOp` call - it does work. Mystery..."
      },
      {
        "user": "jstedfast",
        "created_at": "2020-12-01T15:13:57Z",
        "body": "Let's assume for the moment that the reason that the `doveadm` command didn't see the flag change to UID 22 is that the dovecot server hadn't (yet) synced the flags to disk (it's not uncommon for IMAP servers to not immediately sync flags and dovecot is confirmed to be an example that does not immediately sync those flags).\r\n\r\nIt *might* be necessary for client connection 1 to send a CHECK command to force dovecot to sync flag changes made by connection 2 in order for connection 1 to see those changes (and for the SEARCH command to return the expected results).\r\n\r\nI'm talking with the dovecot devs right now to try and figure this out."
      },
      {
        "user": "kislovs",
        "created_at": "2020-12-01T15:24:53Z",
        "body": "> Let's assume for the moment that the reason that the doveadm command didn't see the flag change to UID 22 is that the dovecot server hadn't (yet) synced the flags to disk\r\n\r\nUnfortunately, flags didn't appear even in minutes after successful logs, so I don't think it relates to some `not-synced to disk` issues.\r\n\r\n> It might be necessary for client connection 1 to send a CHECK command to force dovecot to sync flag changes made by connection 2 in order for connection 1 to see those changes (and for the SEARCH command to return the expected results).\r\n\r\nIt's okay for connection 1 to see changes in some short period of time, but it is likely stuck with those messages. I could try to add some `Check` (or whatever) requests, because I could easy reproduce on staging `dovecot` instance. So, I could check any guesses tomorrow 🙂 \r\n\r\n> I'm talking with the dovecot devs right now to try and figure this out.\r\n\r\nAmazing, thanks. Hope it could be solved without some \"smell\" `NoOp` call for only opened connection 🙂 "
      },
      {
        "user": "jstedfast",
        "created_at": "2020-12-01T16:24:54Z",
        "body": "It looks like the NOOP command is necessary and causes dovecot to sync flag changes.\r\n\r\nHope that helps, or at least explains why that works...\r\n\r\nI guess I learned something new today as well ;-)"
      }
    ]
  },
  {
    "number": 1106,
    "title": "AuthenticationException:421: 4.3.2 Service not active",
    "created_at": "2020-11-25T07:17:09Z",
    "closed_at": "2020-11-25T12:27:51Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1106",
    "body": "I used SmtpClient to send email a lot time,i have schedule to run job,it's ok!\r\nbut today, i got an error message twice unexpected:\r\n\r\n2020-11-25 08:30:30.1746||FATAL|DataTransfer.Models.Repository.BackgroundRepository|\r\nMailKit.Security.AuthenticationException: 421: 4.3.2 Service not active [TYAPR01CA0229.jpnprd01.prod.outlook.com] ---> MailKit.Net.Smtp.SmtpCommandException: 4.3.2 Service not active [TYAPR01CA0229.jpnprd01.prod.outlook.com]\r\n   --- End of inner exception stack trace ---\r\n   at MailKit.Net.Smtp.SmtpClient.AuthenticateAsync(Encoding encoding, ICredentials credentials, Boolean doAsync, CancellationToken cancellationToken)\r\n   at MailKit.Net.Smtp.SmtpClient.Authenticate(Encoding encoding, ICredentials credentials, CancellationToken cancellationToken)\r\n   at MailKit.MailService.Authenticate(Encoding encoding, String userName, String password, CancellationToken cancellationToken)\r\n\r\n2020-11-25 09:30:30.1631||FATAL|DataTransfer.Models.Repository.BackgroundRepository|\r\nMailKit.Security.AuthenticationException: 421: 4.3.2 Service not active [TYAPR01CA0229.jpnprd01.prod.outlook.com] ---> MailKit.Net.Smtp.SmtpCommandException: 4.3.2 Service not active [TYAPR01CA0229.jpnprd01.prod.outlook.com]\r\n   --- End of inner exception stack trace ---\r\n   at MailKit.Net.Smtp.SmtpClient.AuthenticateAsync(Encoding encoding, ICredentials credentials, Boolean doAsync, CancellationToken cancellationToken)\r\n   at MailKit.Net.Smtp.SmtpClient.Authenticate(Encoding encoding, ICredentials credentials, CancellationToken cancellationToken)\r\n   at MailKit.MailService.Authenticate(Encoding encoding, String userName, String password, CancellationToken cancellationToken)\r\n\r\n**Platform**\r\n - OS: Linux 4.14.152-127.182.amzn2.x86_64\r\n - .NET Runtime: 3.1.401\r\n - MailKit Version: 2.1.2.0\r\n\r\n**Additional context**\r\nComplementary,my email server is hosting office365.com,it send a lot of email to @mjretail.co.jp or others.\r\nit's applicable usually,just  unexpected twice time today.\r\ni don't know it is outlook has some issue or mailkit or others,if you can give me some message,it will grateful!\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1106/comments",
    "author": "RPJack",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2020-11-25T12:27:51Z",
        "body": "SMTP error 421 is a server error that just means that the server is probably rebooting or something."
      }
    ]
  },
  {
    "number": 1103,
    "title": "Best practice for creating a Client",
    "created_at": "2020-11-20T16:07:24Z",
    "closed_at": "2020-11-20T22:31:42Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1103",
    "body": "Hello, \r\nWhat is the best practice for creating a Client? \r\nAs it is disposable am trying to figure out if maybe it should have something similar to HTTP Client.\r\nAm not sure if creating and disposing of a client for each request is an optimal choice. Maybe it should have some sort of life cycle managing Factory for client creation and just inject the client in the service",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1103/comments",
    "author": "Bchir",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2020-11-20T17:50:39Z",
        "body": "> What is the best practice for creating a Client?\r\n\r\nI'm not really sure what you are asking...\r\n\r\n> As it is disposable am trying to figure out if maybe it should have something similar to HTTP Client.\r\n\r\nWhat do you mean?\r\n\r\n> Am not sure if creating and disposing of a client for each request is an optimal choice.\r\n\r\nYou would be correct - that would not be optimal at all!\r\n\r\n> Maybe it should have some sort of life cycle managing Factory for client creation and just inject the client in the service\r\n\r\nThis is too vague for me to understand what you are asking.\r\n\r\nKeep in mind, too, that how you use any of the MailKit client classes all depends on what you intend to do with your application.\r\n"
      },
      {
        "user": "Bchir",
        "created_at": "2020-11-20T18:28:48Z",
        "body": "My intent is to create a using some message broker, and I will be sending any message sent to the queue. \r\nI will be pulling multiple messages in parallel and each message handler has its own service scope.\r\n\r\nWhat I mean by the Factory that controls the lifecycle is a factory will be responsible for the choice between creating a new client or pulling a cached one from a pool of cached clients for example.\r\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2020-11-20T22:31:42Z",
        "body": "The only way it makes sense to keep a pool of ImapClients alive (for example), would be if you intended to re-use the same connection w/ the same account info.\r\n\r\nIf that is the road you decide to take, my recommendation would be that you also periodically invoke NoOp() or NoOpAsync() on the client to keep the connection alive. Otherwise keeping the client object in a cache will be a waste."
      }
    ]
  },
  {
    "number": 1099,
    "title": "IMAP connect error: syntax error / forbids use of this system for unsolicited....",
    "created_at": "2020-11-13T16:23:43Z",
    "closed_at": "2020-11-13T20:44:03Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1099",
    "body": "I'm trying to connect to a Rackspace IMAP server using the following code.\r\n\r\n    using (var client = new ImapClient(new ProtocolLogger(logfile)))\r\n    {\r\n        client.Connect(account.Server, 587, SecureSocketOptions.StartTls);\r\n        client.Authenticate(account.Username, `account.Password);\r\n\r\nI get an error:\r\n**Syntax error in IMAP server greeting. Unexpected token: [atom: 220]**\r\n\r\nThe log file reads:\r\n\r\n_Connected to imap://fakemailserver.com:587/?starttls=always\r\nS: 220 fakemailserver.com ESMTP - VA Code Section 18.2-152.3:1 forbids use of this system for unsolicited bulk electronic mail (Spam)_\r\n\r\nNote: I currently connect to this server successfully with MailSystem.NET library. I'm trying to switch over.\r\n\r\nHow do I resolve this?",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1099/comments",
    "author": "rivdiv",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2020-11-13T20:44:03Z",
        "body": "You are trying to use the ImapClient to connect to an SMTP port.\r\n\r\nEither use an SmtpClient or connect to an IMAP port (143 or 993)."
      },
      {
        "user": "rivdiv",
        "created_at": "2020-11-16T16:07:36Z",
        "body": "Thank you.\r\n\r\nAs a side note, the consistent responses from you seen on different forums, plus the detailed errors and documentation \r\n provided makes this library a pleasure to work with. \r\nThanks."
      }
    ]
  },
  {
    "number": 1096,
    "title": "InReplyTo does not differ if mail was forwarded/replied",
    "created_at": "2020-11-11T10:55:35Z",
    "closed_at": "2020-11-11T13:34:49Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1096",
    "body": "Problem:\r\n- How can i find out if a mail was forwarded?\r\n\r\nCurrently i detect if a mail is a reply by checking String.IsNullOrEmpty(InReplyTo). This is also true, if the mail is not a reply but forwarded. How can i detect only replies? Do i need to apply Regex and check for own mail-address in the mail-text?",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1096/comments",
    "author": "samzuercher",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2020-11-11T13:34:45Z",
        "body": "There's no simple way to check if a message is a reply or a forward.\r\n\r\nSome mail clients set Resent-From/Resent-To/etc headers if they are forwarding a message, but often that is not done.\r\n\r\nMany mail clients will prefix the Subject header with \"Re:\" if it is a reply and \"FW:\" or \"FWD:\" if it is a forwarded message. But again, this is not 100% reliable because it is not required (and on top of that, what if someone forwards a reply?).\r\n\r\nIf you have the message referenced by the In-Reply-To header (or in the References header - should be identical), you can try and use the From/To/Cc headers of each message to try and deduce if it looks like a reply.\r\n\r\nWhy do you care if a message is a reply or a forward?"
      }
    ]
  },
  {
    "number": 1095,
    "title": "Resource temporarily Unavailable while connecting inside Docker on server",
    "created_at": "2020-11-10T15:58:09Z",
    "closed_at": "2020-11-10T17:33:09Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1095",
    "body": "Hi there,\r\nI am using Mailkit to send confirmation email to newly created users in a .netCore Api inside a docker on a cloud server. There is a mail server on the same machine, not inside the docker nor inside its own docker, the mail server is managed with plesk and so is the SSL certificate.\r\n\r\nWhen sending an email on my own machine, either debugging or inside a docker, I tested with 2 different mail server and everything works:\r\n\r\n```c#\r\nusing (var smtp = new MailKit.Net.Smtp.SmtpClient())\r\n                {\r\n                    smtp.ServerCertificateValidationCallback = (s, c, h, e) => true;\r\n                    \r\n                    await smtp.ConnectAsync(HOSTNAME, 465, true);\r\n                    await smtp.AuthenticateAsync(EMAIL, PASSWORD);\r\n                    await smtp.SendAsync(message);\r\n                    await smtp.DisconnectAsync(true);\r\n                }\r\n```\r\n\r\nwhen using on the server, again tested with the local mail server or a remote mail server I get this error:\r\n```\r\nSystem.Net.Internals.SocketExceptionFactory+ExtendedSocketException (00000001, 11): Resource temporarily unavailable\r\n   at System.Net.Dns.InternalGetHostByName(String hostName)\r\n   at System.Net.Dns.ResolveCallback(Object context)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw(Exception source)\r\n   at System.Net.Dns.HostResolutionEndHelper(IAsyncResult asyncResult)\r\n   at System.Net.Dns.EndGetHostAddresses(IAsyncResult asyncResult)\r\n   at System.Net.Dns.<>c.<GetHostAddressesAsync>b__25_1(IAsyncResult asyncResult)\r\n   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at MailKit.Net.SocketUtils.ConnectAsync(String host, Int32 port, IPEndPoint localEndPoint, Boolean doAsync, CancellationToken cancellationToken)\r\n   at MailKit.Net.SocketUtils.ConnectAsync(String host, Int32 port, IPEndPoint localEndPoint, Int32 timeout, Boolean doAsync, CancellationToken cancellationToken)\r\n   at MailKit.MailService.ConnectSocket(String host, Int32 port, Boolean doAsync, CancellationToken cancellationToken)\r\n   at MailKit.Net.Smtp.SmtpClient.ConnectAsync(String host, Int32 port, SecureSocketOptions options, Boolean doAsync, CancellationToken cancellationToken)\r\n```\r\n\r\n**Platform (please complete the following information):**\r\n - OS: Docker on Linux(DigitalOcean)\r\n - .NET Runtime: CoreCLR\r\n - .NET Framework: .NetCore 3.1\r\n - MailKit Version: 2.9.0\r\n\r\nMy guess is a problem to resolve the dns since the problem is triggered with he `.InternalGetHostByName`. All ports on the firewall were opened to test and still the same problem happened.\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1095/comments",
    "author": "mr-aboutin",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2020-11-10T17:33:09Z",
        "body": "This is a problem in the .NET Core libraries. As you have discovered, the problem is with System.Net.Dns.GetHostByNameAsync() which is hitting that error.\r\n\r\nThe only thing I can do is exactly what you can do in your app which is to catch that exception and retry to connect.\r\n\r\nMailKit chooses not to catch it and force a retry itself, because the more appropriate place to handle this error condition is in the app code that sits above MailKit.\r\n\r\nHope that helps!"
      }
    ]
  },
  {
    "number": 1091,
    "title": "Error when try to login yahoo",
    "created_at": "2020-10-27T12:46:05Z",
    "closed_at": "2020-10-27T13:39:35Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1091",
    "body": "so i use the lastest mail kit\r\nthats my code \r\n`                using (var client = new SmtpClient())\r\n                {\r\n                    Console.WriteLine(\"start1\");\r\n                    client.Connect(\"smtp.mail.yahoo.com\", 465, true);\r\n\r\n                    Console.WriteLine(\"start2\");\r\n                    client.Authenticate(\"username\", \"password\");\r\n                    Console.WriteLine(\"start3\");\r\n\r\n                    client.Send(mimeMessage);\r\n                    client.Disconnect(true);\r\n                    Console.WriteLine(\"work\");\r\n                }\r\n`\r\nso its crashing when it come to the client.Authenticate u can check why please?",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1091/comments",
    "author": "gargamelbot",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2020-10-27T13:15:05Z",
        "body": "Is it really \"crashing\"? Or is it just throwing an exception because your username and/or password are wrong?\r\n\r\nDo you have a protocol log or a stack trace of the \"crash\"?"
      },
      {
        "user": "gargamelbot",
        "created_at": "2020-10-27T13:29:42Z",
        "body": "its send exception and close program..."
      },
      {
        "user": "gargamelbot",
        "created_at": "2020-10-27T13:29:52Z",
        "body": "i checked username and pass and it work"
      },
      {
        "user": "gargamelbot",
        "created_at": "2020-10-27T13:29:56Z",
        "body": "MailKit.Net.Smtp.SmtpProtocolException: The SMTP server has unexpectedly disconnected.\r\n   ב-  MailKit.Net.Smtp.SmtpStream.<ReadAheadAsync>d__39.MoveNext() ב- D:\\src\\MailKit\\MailKit\\Net\\Smtp\\SmtpStream.cs:line 260\r\n--- סיום מעקב אחר ערימה ממיקום קודם שבו הוצגה התרעה על חריגה ---\r\n   ב-  System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   ב-  System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   ב-  MailKit.Net.Smtp.SmtpStream.<ReadResponseAsync>d__46.MoveNext() ב- D:\\src\\MailKit\\MailKit\\Net\\Smtp\\SmtpStream.cs:line 456\r\n--- סיום מעקב אחר ערימה ממיקום קודם שבו הוצגה התרעה על חריגה ---\r\n   ב-  System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   ב-  System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   ב-  MailKit.Net.Smtp.SmtpStream.ReadResponse(CancellationToken cancellationToken) ב- D:\\src\\MailKit\\MailKit\\Net\\Smtp\\SmtpStream.cs:line 556\r\n   ב-  MailKit.Net.Smtp.SmtpClient.<SendCommandAsync>d__63.MoveNext() ב- D:\\src\\MailKit\\MailKit\\Net\\Smtp\\SmtpClient.cs:line 434\r\n--- סיום מעקב אחר ערימה ממיקום קודם שבו הוצגה התרעה על חריגה ---\r\n   ב-  System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   ב-  System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   ב-  MailKit.Net.Smtp.SmtpClient.<AuthenticateAsync>d__69.MoveNext() ב- D:\\src\\MailKit\\MailKit\\Net\\Smtp\\SmtpClient.cs:line 757\r\n--- סיום מעקב אחר ערימה ממיקום קודם שבו הוצגה התרעה על חריגה ---\r\n   ב-  System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   ב-  System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   ב-  MailKit.Net.Smtp.SmtpClient.Authenticate(Encoding encoding, ICredentials credentials, CancellationToken cancellationToken) ב- D:\\src\\MailKit\\MailKit\\Net\\Smtp\\SmtpClient.cs:line 860\r\n   ב-  MailKit.MailService.Authenticate(Encoding encoding, String userName, String password, CancellationToken cancellationToken) ב- D:\\src\\MailKit\\MailKit\\MailService.cs:line 1143\r\n   ב-  MailKit.MailService.Authenticate(String userName, String password, CancellationToken cancellationToken) ב- D:\\src\\MailKit\\MailKit\\MailService.cs:line 1259\r\n   ב-  Yahoo_Mail_Scanner_V1.Program.Test() ב- C:\\Users\\User\\source\\repos\\Yahoo Mail Scanner V1\\Yahoo Mail Scanner V1\\Program.cs:line 47"
      },
      {
        "user": "gargamelbot",
        "created_at": "2020-10-27T13:30:09Z",
        "body": "thats the exception"
      },
      {
        "user": "jstedfast",
        "created_at": "2020-10-27T13:39:35Z",
        "body": "That means that Yahoo is closing the connection on you.\r\n\r\nThere's nothing that can be done in MailKit to prevent that. You just have to catch that exception and try again.\r\n\r\nDepending on how often you are connecting, it may be that Yahoo is throttling you because you are connecting too often. If that is the case, try to batch your message sending logic to send multiple messages at a time on a single connection rather than connect-send-disconnect-connect-send-disconnect."
      },
      {
        "user": "gargamelbot",
        "created_at": "2020-10-27T13:51:50Z",
        "body": "it didnt work for me even on first time "
      },
      {
        "user": "jstedfast",
        "created_at": "2020-10-27T14:07:57Z",
        "body": "Then perhaps Yahoo is disconnecting you because your username and password are wrong."
      }
    ]
  },
  {
    "number": 1086,
    "title": "Add IsTransient property to SmtpCommand exceptions",
    "created_at": "2020-09-30T00:19:21Z",
    "closed_at": "2020-09-30T14:28:45Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1086",
    "body": "When sending email over smtp, it is helpful to know if an exception is transient (i.e. greylist, please try again in 180 seconds or this ip is not yet authorized to send mail...) vs. the recipient does not exist (permanent error) and other type of exceptions. Hopefully the smtp status codes returned by the email server could be used to do this in a consistant way without parsing actual text of responses.\r\n\r\nHaving an IsTransient bool property on the SmtpCommandException would be helpful to instruct the caller to retry again later vs giving up and reporting a fatal error.",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1086/comments",
    "author": "jjxtra",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2020-09-30T14:28:45Z",
        "body": "This information is already available on the SmtpCommandException - check the StatusCode property."
      }
    ]
  },
  {
    "number": 1081,
    "title": "HighestModSeq Outlook",
    "created_at": "2020-09-23T18:37:02Z",
    "closed_at": "2020-09-24T01:35:01Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1081",
    "body": "Is it possible to get the HighestModSeq using Outlook? If not, do I really need to go through all the emails in the folder to find which ones have some kind of change?\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1081/comments",
    "author": "MauricioCodeguez",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2020-09-24T01:35:01Z",
        "body": "I'm not sure I understand your question. Outlook is an email client so I'm not sure how you'd even be able to get the HighestModSeq value from it as it probably won't show it to you (if it even supports it).\r\n\r\nAs far as MailKit goes, the whole point of mod-sequence values is so that you don't *have* to go through each message to see if it has a change or not because you can query changes since a particular mod-sequence version."
      }
    ]
  },
  {
    "number": 1079,
    "title": "Is that possiable to send Email locally without a Email Server like outlook.com ?",
    "created_at": "2020-09-22T07:30:54Z",
    "closed_at": "2020-09-22T14:02:13Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1079",
    "body": "**Is your feature request related to a problem? Please describe.**\r\nit's not stable  when send email via outlook.com , because it has some human verification tech, to prevent us send lots of email to many email receiver. Can I send a email without a email server (ps: I own a domain , so technically I can build a email server with my domain )\r\n\r\n\r\n**Describe the solution you'd like**\r\n\r\nsend email without to connect some server\r\n\r\n**Describe alternatives you've considered**\r\n\r\na alternative cross-platform email server that I can use to build a (simple or not ) email server by myself \r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1079/comments",
    "author": "John0King",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2020-09-22T14:02:13Z",
        "body": "No. You don't need to use outlook.com, though. You can use your own mail server."
      },
      {
        "user": "John0King",
        "created_at": "2020-09-22T15:44:19Z",
        "body": "@jstedfast   any recommendation software that I can use to build my mail server ? "
      },
      {
        "user": "jstedfast",
        "created_at": "2020-09-22T19:53:34Z",
        "body": "I work for Microsoft, so I think I'm supposed to tell you to use Exchange ;-)\r\n\r\nHonestly, I don't know - there are plenty of free mail server options."
      }
    ]
  },
  {
    "number": 1071,
    "title": "Accentuation in attachment filename with Outlook 2019",
    "created_at": "2020-09-04T19:37:33Z",
    "closed_at": "2020-09-12T15:23:17Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1071",
    "body": "I am not sure if the bug is with MailKit or Outlook.\r\nWhen is send an attachment with accentuation in filename, the attachment shows with a random number and extension dat.\r\nGMail shows the same email correctly.\r\n\r\n**Platform (please complete the following information):**\r\n - OS: Windows\r\n - .NET Runtime: .NET 4.5\r\n - .NET Framework: .NET 4.5\r\n - MailKit Version: 2.8.0\r\n\r\nSample:\r\n            BodyBuilder builder = new BodyBuilder();\r\n\r\n            foreach (Anexo AnexoEnviar in Enviar.Anexos)\r\n            {\r\n                MimePart anexo = new MimePart();\r\n                anexo.FileName = \"Relatório.pdf\";\r\n                anexo.Content = new MimeContent(File.OpenRead(AnexoEnviar.Arquivo));\r\n                anexo.ContentDisposition = new ContentDisposition(ContentDisposition.Attachment);\r\n                anexo.ContentTransferEncoding = ContentEncoding.Base64;\r\n                builder.Attachments.Add(anexo);\r\n            }\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1071/comments",
    "author": "leodinei",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2020-09-04T19:51:32Z",
        "body": "Remove `anexo.ContentDisposition = new ContentDisposition(ContentDisposition.Attachment);`\r\n\r\nWhen you set the FileName, it creates a ContentDisposition for you."
      }
    ]
  },
  {
    "number": 1068,
    "title": "Sorry, It's just a question",
    "created_at": "2020-09-03T10:03:53Z",
    "closed_at": "2020-09-03T12:17:05Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1068",
    "body": "**I wonder if we had to flaged a message as seen in code?**\r\nI gonna to find out an package to get unread mail, how to check it without update flag in code",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1068/comments",
    "author": "lyhoangnam",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2020-09-03T12:17:05Z",
        "body": "To flag a message as seen, you can use the following code:\r\n\r\n```csharp\r\nfolder.AddFlags (uids, MessageFlags.Seen, true);\r\n```\r\n\r\nNo flags are ever changed automatically, you need to explicitly set them. You don't have to worry about GetMessage(), for example, setting the message as `\\Seen`."
      },
      {
        "user": "lyhoangnam",
        "created_at": "2020-09-03T12:19:23Z",
        "body": "So thank @jstedfast "
      }
    ]
  },
  {
    "number": 1067,
    "title": "Performance test",
    "created_at": "2020-08-31T19:15:48Z",
    "closed_at": "2020-09-01T01:07:18Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1067",
    "body": "Hello,\r\nI am trying to do a stress test of an smtp relay server app that I made based on MimeKit and MailKit but I am not able to perform it correctly. I need to do it so I can establish a plan to scale up the server.\r\nThe most connections that I managed to perform are 70 connections per second on a VM with 1 virtual cpu and 3.75 Gb of RAM in Google cloud engine. I am sending mails from another linux VM with the same capacity using a parallel for loop. The sent messages are logged on another vm (identical to the others) where I use an async task with MessageStore just to write to the logs.\r\nI was wondering if you have any performance data that I can rely on or maybe you could give me some advice on how to do this properly.\r\nThank you very much!",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1067/comments",
    "author": "biapopescu",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2020-09-01T01:07:18Z",
        "body": "You're going to be limited by the number of socket connections you can make from your VM, I would imagine. I'm not sure it's possible to really push a server to the max to find out how many connections it can accept by only using a single client VM. You'd need a bunch of them if the server scales well at all."
      }
    ]
  },
  {
    "number": 1066,
    "title": "MailKit Pop3Client.Count retrieves all emails, not just the number of emails.",
    "created_at": "2020-08-30T08:51:29Z",
    "closed_at": "2020-08-30T12:09:58Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1066",
    "body": "**Describe the bug**\r\nMailKit Pop3Client.Count retrieves all emails, not just the number of emails.\r\n\r\nMy code is as follows\r\n\r\n```\r\nusing (var client = new Pop3Client(new ProtocolLogger(\"d:\\\\pop3.txt\") ))\r\n            {\r\n                client.Connect(emailSettings.PopServer, emailSettings.PopPort, SecureSocketOptions.SslOnConnect);\r\n                client.Authenticate(emailSettings.Username, emailSettings.Password);\r\n\r\n                EmailCount = client.Count();\r\n            }\r\n```\r\n\r\nThe mailbox I am issung this command against has over 1000 emails in it. When examining the created Pop3.txt file I see that the client has correctly issued the ```STAT``` command and recieves the reply ```+OK 1122 50068335```.\r\n\r\nHowever the Client then goes on to retrieves all email, issuing ```RETR``` until all have been downloaded.\r\n\r\nWhen calling the ```client.Count()``` command, all the client needs to do is issue STAT and return the number from the server. Anything further is not necessary and a waste of bandwidth.\r\n\r\n\r\n**Platform (please complete the following information):**\r\n - OS: Windows 10\r\n - .NET: Net Core 3.1\r\n-  Microsoft Visual Studio Community 2019 Version 16.7.2\r\n - MailKit Version: 2.8.0\r\n\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1066/comments",
    "author": "johnmackerras",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2020-08-30T12:09:58Z",
        "body": "The `Count()` method that you are using is a LINQ extension method that iterates over an IEnumerable.\r\n\r\nWhat you want is the `Count` *property* which will not download all messages.\r\n\r\nI can't change the behavior of the LINQ `Count()` method because it exists in System.Linq, not MailKit."
      },
      {
        "user": "johnmackerras",
        "created_at": "2020-09-02T16:39:54Z",
        "body": "Damn those paretheses - thanks. Much faster now."
      }
    ]
  },
  {
    "number": 1065,
    "title": "Encoding with  builder.ToMessageBody ",
    "created_at": "2020-08-29T12:20:08Z",
    "closed_at": "2020-08-29T14:06:38Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1065",
    "body": "Hello\r\nI try to send email with text in attachment. That works well only right now i have an encoding in the builder.ToMessageBody statement that screws up my communication with the customer. In the code example below i try to send an email with text \"my text = my subject and Version=1.0\" as attachment , but when you open the email the text has been altered to \"my text =3D my subject and Version=3D1.0\".  Is there a way to change the encoding? \r\nThanks\r\n\r\nvar message = new MimeMessage();\r\nvar builder = new BodyBuilder();\r\n\r\nbuilder.TextBody = \"\";\r\nvar xmltext =\"my text = my subject and Version=1.0\" ; \r\n\r\nbuilder.Attachments.Add(\"12345.txt\", Encoding.ASCII.GetBytes(xmltext), new ContentType(\"text\", \"plain\"));\r\n \r\nmessage.Body = builder.ToMessageBody();\r\n\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1065/comments",
    "author": "rvandeweyer",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2020-08-29T13:59:04Z",
        "body": "You can set any encoding you want.\r\n\r\n```csharp\r\nvar attachment = (MimePart) builder.Attachments.Add(\"12345.txt\", Encoding.ASCII.GetBytes(xmltext), new ContentType(\"text\", \"plain\"));\r\nattachment.ContentTransferEncoding = ContentEncoding.Base64;\r\n```\r\n\r\nRight now, based on your description, MimeKit is defaulting to QuotedPrintable. Probably because you have 8bit text or one of the lines in your attachment content starts with `\"From \"`."
      },
      {
        "user": "jstedfast",
        "created_at": "2020-08-29T14:06:38Z",
        "body": "FWIW, there's no reason to worry about the =3D stuff. The receiving mail software should be able to decode it just fine."
      }
    ]
  },
  {
    "number": 1062,
    "title": "Is there a way to get Message Seen Flag when using  IMailFolder.GetMessageAsync?",
    "created_at": "2020-08-20T20:11:29Z",
    "closed_at": "2020-08-20T21:40:48Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1062",
    "body": "Hi, \r\nI have the following scenario where I execute the following 2 steps:\r\n1. First I make a search of mails by using IMailFolder.SearchAsync\r\n2. Then For each UniqueId in the list I start downloading each Email by using IMailFolder.GetMessageAsync\r\nIn the second step I would like to know if the message has the Seen Flag (so I can send a command to mark message as Seen) however I couldn`t find any property on the MimeMessage Object which contains the Flags.\r\n\r\nIs there a way to get message Seen flag when using  IFolder.GetMessageAsync without having to send a third command using IFolder.Fetch? \r\n\r\nThanks.",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1062/comments",
    "author": "JuanDavidPaez",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2020-08-20T21:40:48Z",
        "body": "Flags aren't stored on messages, they are external metadata to the message that you need to Fetch() from the folder.\r\n\r\nYou can fetch the flags for all of the uids returned by Search in 1 go, though, so it's less expensive than 1 Fetch per message."
      }
    ]
  },
  {
    "number": 1049,
    "title": "The SMTP server does not support authentication",
    "created_at": "2020-07-22T12:19:30Z",
    "closed_at": "2020-07-22T14:07:04Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1049",
    "body": "Dear @jstedfast,\r\n\r\nNot sure what wrong with my code or smtp server or MailKit. I'm not able to authenticate with smtp servers if I run sample MailKit application from server (tested on many servers - Windows 2012 or 2016). But I'm able to authenticate if I run same Mailkit sample application from my laptop. And then I can the send mail from server if I use another sample application base on \"System.Net.Mail.SmtpClient\" but out of luck if I use with MailKit. I want to use MailKit.\r\n\r\nHere is my Mailkit console application.\r\n\r\n```csharp\r\n// Using\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Text;\r\nusing System.Threading.Tasks;\r\nusing MailKit;\r\nusing MimeKit;\r\nusing MailKit.Net.Smtp;\r\nusing MailKit.Net.Pop3;\r\nusing System.IO;\r\nusing System.Net;\r\nusing System.Net.NetworkInformation;\r\nusing MailKit.Security;\r\n//Code\r\n            MemoryStream _mStream = new MemoryStream();\r\n            SmtpClient _smtpClient = new SmtpClient(new ProtocolLogger(_mStream));\r\n            bool _isAuthenticated = false;\r\n            string _error = string.Empty;\r\n            string _pLog = string.Empty;\r\n\r\n            try\r\n            {\r\n                _smtpClient.ServerCertificateValidationCallback = (s, c, h, e) => true;\r\n                _smtpClient.Connect(\"xxxx-world.com\", 25, false);\r\n                _smtpClient.Authenticate(new  NetworkCredential( \"domain\\\\username\", \"password\"));\r\n// Try with below SaslMechanism but out of luck\r\n// SaslMechanismLogin\r\n// SaslMechanismNtlm\r\n                _isAuthenticated =_smtpClient.IsAuthenticated;\r\n            }\r\n            catch (ServiceNotAuthenticatedException _ex)\r\n            {\r\n                _error += string.Format(\"{0}{1}\", _ex.Message.ToString(), Environment.NewLine);\r\n            }\r\n            catch (Exception _ex)\r\n            {\r\n                _error += string.Format(\"{0}{1}\", _ex.Message.ToString(), Environment.NewLine);\r\n            }\r\n            finally\r\n            {\r\n                _error += string.Format(\"Authentication is {0}{1}\", _isAuthenticated ? \"ok\" : \"faile\", Environment.NewLine);\r\n                _error += string.Format(\"The SMTP server supports secure connection: {0}{1}\",_smtpClient.IsSecure, Environment.NewLine);\r\n\r\n                if (_smtpClient.Capabilities.HasFlag(SmtpCapabilities.Authentication))\r\n                    foreach (string _authenticationMechanisms in _smtpClient.AuthenticationMechanisms)\r\n                        _error += string.Format(\"The SMTP server supports the following SASL mechanisms: {0}{1}\", _authenticationMechanisms, Environment.NewLine);\r\n\r\n                if (_smtpClient.Capabilities.HasFlag(SmtpCapabilities.Pipelining))\r\n                    _error += string.Format(\"The SMTP server supports the following command: {0}{1}\", SmtpCapabilities.Pipelining, Environment.NewLine);\r\n\r\n                if (_smtpClient.Capabilities.HasFlag(SmtpCapabilities.Size))\r\n                    _error += string.Format(\"The SMTP server has a size restriction on messages: {0}{1}\", _smtpClient.MaxSize, Environment.NewLine);\r\n\r\n                if (_smtpClient.Capabilities.HasFlag(SmtpCapabilities.Dsn))\r\n                    _error += string.Format(\"The SMTP server supports delivery-status notifications{0}\", Environment.NewLine);\r\n\r\n                if (_smtpClient.Capabilities.HasFlag(SmtpCapabilities.EightBitMime))\r\n                    _error += string.Format(\"The SMTP server supports Content-Transfer-Encoding: 8bit{0}\", Environment.NewLine);\r\n\r\n                if (_smtpClient.Capabilities.HasFlag(SmtpCapabilities.BinaryMime))\r\n                    _error += string.Format(\"The SMTP server supports Content-Transfer-Encoding: binary{0}\", Environment.NewLine);\r\n\r\n                if (_smtpClient.Capabilities.HasFlag(SmtpCapabilities.UTF8))\r\n                    _error += string.Format(\"The SMTP server supports UTF-8 in message headers{0}\", Environment.NewLine);\r\n\r\n                _smtpClient.Disconnect(true);\r\n                _smtpClient = null;\r\n                using (StreamReader _sReader = new StreamReader(_mStream))\r\n                {\r\n                    _mStream.Position = 0;\r\n                    _pLog = _sReader.ReadToEnd();\r\n                }\r\n            }\r\n\r\n\r\n            if (string.IsNullOrWhiteSpace(_error))\r\n                Console.WriteLine(\"No error\");\r\n            else\r\n                Console.WriteLine(_error);\r\n\r\n            Console.WriteLine(_pLog);\r\n            Console.ReadLine();\r\n```\r\nHere is Console Log and ProtocolLogger Log from server\r\n```\r\nThe SMTP server does not support authentication.\r\nAuthentication is faile\r\nThe SMTP server supports secure connection: False\r\nThe SMTP server supports the following command: Pipelining\r\nThe SMTP server has a size restriction on messages: 157286400\r\nThe SMTP server supports delivery-status notifications\r\nThe SMTP server supports Content-Transfer-Encoding: 8bit\r\nThe SMTP server supports Content-Transfer-Encoding: binary\r\n\r\nConnected to smtp://xxxx-world.com:25/?starttls=when-available\r\nS: 220 xxxx-world.com Microsoft ESMTP MAIL Service ready at Wed, 22 Jul 2020 13:40:36 +0200\r\nC: EHLO [10.xxx.26.129]\r\nS: 250-xxxx-world.com Hello [10.xxx.26.129]\r\nS: 250-SIZE 157286400\r\nS: 250-PIPELINING\r\nS: 250-DSN\r\nS: 250-ENHANCEDSTATUSCODES\r\nS: 250-8BITMIME\r\nS: 250-BINARYMIME\r\nS: 250 CHUNKING\r\nC: QUIT\r\nS: 221 2.0.0 Service closing transmission channel\r\n```\r\nHere is Console Log and ProtocolLogger Log from my laptop\r\n```\r\nAuthentication is ok\r\nThe SMTP server supports secure connection: True\r\nThe SMTP server supports the following SASL mechanisms: NTLM\r\nThe SMTP server supports the following SASL mechanisms: LOGIN\r\nThe SMTP server supports the following command: Pipelining\r\nThe SMTP server has a size restriction on messages: 157286400\r\nThe SMTP server supports delivery-status notifications\r\nThe SMTP server supports Content-Transfer-Encoding: 8bit\r\nThe SMTP server supports Content-Transfer-Encoding: binary\r\n\r\nConnected to smtp://xxxx-world.com:25/?starttls=when-available\r\nS: 220 xxxx-world.com Microsoft ESMTP MAIL Service ready at Wed, 22 Jul 2020 13:37:29 +0200\r\nC: EHLO [172.xx.159.195]\r\nS: 250-xxxx-world.com Hello [172.xx.159.195]\r\nS: 250-SIZE 157286400\r\nS: 250-PIPELINING\r\nS: 250-DSN\r\nS: 250-ENHANCEDSTATUSCODES\r\nS: 250-STARTTLS\r\nS: 250-AUTH NTLM LOGIN\r\nS: 250-8BITMIME\r\nS: 250-BINARYMIME\r\nS: 250 CHUNKING\r\nC: STARTTLS\r\nS: 220 2.0.0 SMTP server ready\r\nC: EHLO [172.xx.159.195]\r\nS: 250-xxxx-world.com Hello [172.xx.159.195]\r\nS: 250-SIZE 157286400\r\nS: 250-PIPELINING\r\nS: 250-DSN\r\nS: 250-ENHANCEDSTATUSCODES\r\nS: 250-AUTH NTLM LOGIN\r\nS: 250-8BITMIME\r\nS: 250-BINARYMIME\r\nS: 250 CHUNKING\r\nC: AUTH LOGIN\r\nS: 334 xxxxx\r\nC: xxxxxx\r\nS: 334 xxxxx\r\nC: xxxxxx\r\nS: 235 2.7.0 Authentication successful\r\nC: QUIT\r\nS: 221 2.0.0 Service closing transmission channel\r\n```\r\nRegards,",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1049/comments",
    "author": "navaddins",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2020-07-22T14:07:04Z",
        "body": "If you look at the logs, see anything that stands out? :-)\r\n\r\nHint: this is the line you are looking for:\r\n\r\n```\r\nS: 250-AUTH NTLM LOGIN\r\n```\r\n\r\nThat only appears in the logs from your laptop.\r\n\r\nSMTP, by default, does not support authentication. Authentication support is an add-on for SMTP servers and not all SMTP servers have authentication support.\r\n\r\nIf the `AUTH` extension isn't present in the `EHLO` response, then the server does not support authentication which is exactly what you are seeing.\r\n\r\nThis isn't a bug. If the server doesn't support authentication, you just don't need to authenticate to send mail.\r\n\r\nIt probably doesn't need to authenticate because it recognizes the server's IP address as safe."
      }
    ]
  },
  {
    "number": 1045,
    "title": "Outlook: Unicode problems in header",
    "created_at": "2020-07-08T15:49:28Z",
    "closed_at": "2020-07-08T19:47:53Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1045",
    "body": "**Describe the bug**\r\nIf a message is sent with a UTF8 or unicode encoding in the subject or in the from/to, outlook will display it as garbage characters. I do use the Encoding.UTF8 as the first parameter of MailboxAddress. GMail also displays it correctly.\r\nIs this an outlook bug or is there something else I can do to ensure that they display it correctly?\r\n```cs\r\n                var msg = new MimeMessage();\r\n\r\n                msg.From.Add(new MailboxAddress(Encoding.UTF8, sender.Name, sender.MailAddress));\r\n                msg.To.Add(new MailboxAddress(Encoding.UTF8, receiver.Name, receiver.MailAddress));\r\n                msg.Subject = subject;\r\n\r\n                var builder = new BodyBuilder() { TextBody = content };\r\n\r\n                if (attachments != null)\r\n                    foreach (var attachment in attachments)\r\n                        builder.Attachments.Add(attachment.Name, attachment.Data);\r\n\r\n                msg.Body = builder.ToMessageBody();\r\n\r\n                var options = FormatOptions.Default.Clone();\r\n\r\n                options.International = true;\r\n                options.AllowMixedHeaderCharsets = true;\r\n\r\n                client.Send(options, msg);\r\n```\r\n\r\n**Platform (please complete the following information):**\r\n - OS: Windows 10 1909 18363.900 and Outlook on Android 10 (possibly elsewhere)\r\n - .NET Runtime: No clue.\r\n - .NET Framework: .NET Core 3.1\r\n - MailKit Version: 2.7.0\r\n\r\n**To Reproduce**\r\nSend mail with the example above where the name is unicode and open Outlook.\r\n\r\n**Expected behavior**\r\nOutlook should display it the same as GMail (which does work on both firefox and GMail app).\r\n\r\n**Screenshots**\r\nN.A. Just the general character mess you get if unicode isn't read properly.\r\n\r\n**Additional context**\r\n-\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1045/comments",
    "author": "Nielsbishere",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2020-07-08T19:47:12Z",
        "body": "Don't use the following code snippet:\r\n\r\n```csharp\r\noptions.International = true;\r\noptions.AllowMixedHeaderCharsets = true;\r\n```\r\n\r\noptions.International tells MimeKit/MailKit not to encode the headers (i.e. it sends raw UTF-8 which probably breaks Outlook) and options.AllowMixedHeaderCharsets tells MimeKit/MailKit to mix-and-match UTF-8, US-ASCII and ISO-8859-1 in the same header. In other words, if the Subject (for example) is really long and needs to be broken up into multiple encoded-word tokens, this option allows MimeKit/MailKit to choose US-ASCII and/or ISO-8859-1 for each individual encoded-word even if you've specified UTF-8, thereby making it *possible* that you end up with a Subject like this:\r\n\r\n```\r\nSubject: =?us-ascii?q?This_is_ascii_?= =?iso-8859-1?q?and_this_is_fran=CAes?= =?utf-8?b?<base64>?=\r\n```\r\n\r\nSome clients do not deal well with this scenario even though the specification requires support for that."
      },
      {
        "user": "Nielsbishere",
        "created_at": "2020-07-09T12:07:18Z",
        "body": "You are right. I saw an if(...) options.International = true; mentioned somewhere on an issue. I guess that introduced this and then I tried fixing it by adding the mixed charsets.\r\nThank you!"
      }
    ]
  },
  {
    "number": 1034,
    "title": "Suddenly  'The IMAP server has unexpectedly disconnected.' constantly appears",
    "created_at": "2020-06-03T11:47:15Z",
    "closed_at": "2020-06-03T12:02:07Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1034",
    "body": "Hi,\r\n\r\nSuddenly, today, I started receviing the  'The IMAP server has unexpectedly disconnected.' error. I'm connecting to a GMail account using OAuth2. It has been working fine for last 2 months but today I have no chance to authenticate.\r\nCredentials are fine because I can use GMail Api to check for a label\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1034/comments",
    "author": "dpinart-uxland",
    "comments": [
      {
        "user": "dpinart-uxland",
        "created_at": "2020-06-03T11:56:19Z",
        "body": "That's weird.\r\nIf I change the gmail account, is working properly. Can't see why a gmail account is not working"
      },
      {
        "user": "jstedfast",
        "created_at": "2020-06-03T12:02:07Z",
        "body": "The error you are seeing just means that the TCP/IP connection is being lost. That could mean a network problem or it could mean that the server is dropping the connection for some reason.\r\n\r\nGMail and other public mail servers will sometimes drop connections if the account is making too many requests in an attempt to throttle that account.\r\n\r\nWhat \"too many requests\" is, as a number, is not something that I have had the time to figure out.\r\n\r\nIf you can use a different account just fine, then that is the likely case.\r\n\r\nHope that answers your question."
      }
    ]
  },
  {
    "number": 1033,
    "title": "Error connecting to Exchange Online on high load",
    "created_at": "2020-06-02T21:15:53Z",
    "closed_at": "2020-06-03T21:08:29Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1033",
    "body": "**Describe the bug**\r\nWe have a \"Smart host\" component that receives emails from exchange online outbound connector, does some processing and then resend it via an inbound connector. Yesterday we were doing some load test on it and we had a lot of failures, more then 2000 of 35000 email failed to be sent to the inbound connector. When debugging we found that the majority of  the errors were cause by the exception bellow. I would like to mention that we create a new SmtpConnection for each email.\r\nSo in the current test we had one connection attempt almost every second\r\n\r\n`System.Net.Internals.SocketExceptionFactory+ExtendedSocketException (00000001, 11): Resource temporarily unavailable\r\n   at IPHostEntry System.Net.Dns.InternalGetHostByName(string hostName)\r\n   at void System.Net.Dns.ResolveCallback(object context)\r\n   at IPHostEntry System.Net.Dns.HostResolutionEndHelper(IAsyncResult asyncResult)\r\n   at IPAddress[] System.Net.Dns.EndGetHostAddresses(IAsyncResult asyncResult)\r\n   at void System.Threading.Tasks.TaskFactory<TResult>.FromAsyncCoreLogic(IAsyncResult iar, Func<IAsyncResult, TResult> endFunction, Action<IAsyncResult> endAction, Task<TResult> promise, bool requiresSynchronization)\r\n   at async Task<Socket> MailKit.Net.SocketUtils.ConnectAsync(string host, int port, IPEndPoint localEndPoint, bool doAsync, CancellationToken cancellationToken)\r\n   at async Task<Socket> MailKit.Net.SocketUtils.ConnectAsync(string host, int port, IPEndPoint localEndPoint, int timeout, bool doAsync, CancellationToken cancellationToken)\r\n   at async Task<Socket> MailKit.MailService.ConnectSocket(string host, int port, bool doAsync, CancellationToken cancellationToken)\r\n   at async Task MailKit.Net.Smtp.SmtpClient.ConnectAsync(string host, int port, SecureSocketOptions options, bool doAsync, CancellationToken cancellationToken)\r\n   at async Task Templafy.EmailSignatureServer.MimeMessageSender.SendMessageAsync(MimeMessage mimeMessage, IMessageTransaction messageTransaction) in /app/d:\\a\\1\\s\\EmailSignatureServer\\MimeMessageSender.cs:line 56`\r\n\r\nThe application runs in .Net Core 3.1 in Kubernets (AKS)\r\n\r\nThanks.",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1033/comments",
    "author": "kurucz09",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2020-06-03T01:53:33Z",
        "body": "Looks like that exception is being thrown inside of the dotnet core class libraries (specifically `Dns.GetHostAddressesAsync (host)`). I'm not sure what I can do about that. Seems the problem is that the DNS server is temporarily unavailable?\r\n\r\nWhen sending such a massive amount of messages, you may want to reconsider creating a new SMTP connection for every single message. That seems inefficient and what *may* be happening is that you are using up all of the sockets on the system.\r\n"
      },
      {
        "user": "kurucz09",
        "created_at": "2020-06-03T20:33:02Z",
        "body": "Thanks for the fast answer.\r\nSo I guess in this case the only thing we can do is implement a custom retry pattern?\r\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2020-06-03T21:08:29Z",
        "body": "Yea, that seems like the best approach."
      }
    ]
  },
  {
    "number": 1028,
    "title": "How get Threads with correct reference count ",
    "created_at": "2020-05-25T22:42:47Z",
    "closed_at": "2020-05-26T16:40:11Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1028",
    "body": "**How can I get message list like in Gmail under 6 sec**\r\nnow I do like this\r\n\r\n```csharp\r\nvar gmailMessages = currentFolder.Fetch(0, -1, MessageSummaryItems.UniqueId |\r\n                                                             MessageSummaryItems.GMailMessageId |\r\n                                                             MessageSummaryItems.GMailThreadId)\r\n                                                            .OrderByDescending(o => o.UniqueId)\r\n                                                            .ToList();\r\n```\r\n**12 sec**\r\n\r\n```csharp\r\n// apply group to get threads\r\nvar groupedList = gmailMessages.GroupBy(g => g.GMailThreadId)\r\n    .Select(s => s.Key.Value)\r\n    .ToList();\r\n//apply paging to reduce ids\r\nvar finalListForMerge = groupedList.Skip(paging.skip).Take(pageSize).ToList();\r\n\r\n//then open all folder to find references as message in Inbox can have referenc in otheer folders\r\nvar allMail = imap.GetFolder(SpecialFolder.All);\r\nallMail.Open(FolderAccess.ReadOnly);\r\n\r\nvar uIds = allMail.Fetch(0, -1, MessageSummaryItems.UniqueId |\r\n    MessageSummaryItems.GMailThreadId)\r\n    .Where(w=> finalListForMerge.Contains(w.GMailThreadId.Value))\r\n    .Select(s => s.UniqueId).ToList();\r\n```\r\n\r\n**14sec***\r\n\r\n```csharp\r\n//get messages by Uis with correct references\r\nvar messageSummary = allMail.Fetch(uIds, MessageSummaryItems.All |\r\n     MessageSummaryItems.References |\r\n     MessageSummaryItems.PreviewText |\r\n     MessageSummaryItems.UniqueId |\r\n     MessageSummaryItems.Flags |\r\n     MessageSummaryItems.GMailLabels |\r\n     MessageSummaryItems.GMailMessageId |\r\n     MessageSummaryItems.GMailThreadId)\r\n     .OrderByDescending(o => o.UniqueId)\r\n     .ToList();\r\n```\r\n\r\n**All takes more then 30 sec in case 40.000 messages in inbox.\r\nWhat is the optimal code to get messages more faster?\r\nThanks**\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1028/comments",
    "author": "SmbatChilingaryan",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2020-05-26T02:19:39Z",
        "body": "The first rule in making something faster is to not fetch the same information over and over again.\r\n\r\nWhy keep fetching stuff from the server instead of fetching stuff once and then filtering what you have locally?"
      },
      {
        "user": "SmbatChilingaryan",
        "created_at": "2020-05-26T05:34:56Z",
        "body": "I'm doing like you say. \r\n1. Fetch (0, -1) then  (get ids takes about 12-16 sec)\r\n2. Group by GmailThreadIds (local)\r\n3. Apply paging (local)\r\nnow I have GmailThreadIds for one page from Inbox folder but with incorrect referenc count right? I need to find all relations for above id's and should search in SpecialFolder.All. SO\r\n4. SpecialFolder.All.Fetch (0, -1) then  (get ids takes about 16-18sec)\r\n5. find All needed uIds from\r\n6.Fetch (uIds, MessageSummaryItems.All |\r\n                         MessageSummaryItems.References ........)\r\n\r\n**my vulnerable point 1 and 4.**\r\nIs it possible to get GmailThreads with correct ref count with another way?\r\n\r\nif yes Please provide an exaple.\r\n\r\nNote* I get this problem when user have more then 40.000 messages.\r\n\r\nThanks."
      },
      {
        "user": "jstedfast",
        "created_at": "2020-05-26T11:22:33Z",
        "body": "Are you writing an email client? If so, why aren't you caching message summaries locally?\r\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2020-05-26T16:31:00Z",
        "body": "My next suggestion would be to do away with trying to treat folders individually and instead just use the `All` folder. You can filter out messages with labels that don't include the label for your particular folder, thereby drastically reducing useless IMAP query traffic.\r\n\r\nIn other words, do something more like this (if you don't want to use caching which I highly recommend you do):\r\n\r\n```csharp\r\nvar allMail = imap.GetFolder(SpecialFolder.All);\r\nallMail.Open(FolderAccess.ReadOnly);\r\n\r\nvar gmailMessages = allMail.Fetch(0, -1, MessageSummaryItems.UniqueId |\r\n                                                             MessageSummaryItems.GMailMessageId |\r\n                                                             MessageSummaryItems.GMailThreadId |\r\n                                                             MessageSummaryItems.GMailLabels)\r\n                                                            .OrderByDescending(o => o.UniqueId)\r\n                                                            .Where(w => w.GMailLabels.Contains(\"CurrentFolderName\"))\r\n                                                            .ToList();\r\n\r\n// apply group to get threads\r\nvar groupedList = gmailMessages.GroupBy(g => g.GMailThreadId)\r\n    .Select(s => s.Key.Value)\r\n    .ToList();\r\n//apply paging to reduce ids\r\nvar finalListForMerge = groupedList.Skip(paging.skip).Take(pageSize).ToList();\r\n\r\nvar uIds = gmailMessages\r\n    .Where(w=> finalListForMerge.Contains(w.GMailThreadId.Value))\r\n    .Select(s => s.UniqueId).ToList();\r\n\r\n//get messages by Uids with correct references\r\nvar messageSummary = allMail.Fetch(uIds, MessageSummaryItems.All |\r\n     MessageSummaryItems.References |\r\n     MessageSummaryItems.PreviewText |\r\n     MessageSummaryItems.UniqueId |\r\n     MessageSummaryItems.Flags |\r\n     MessageSummaryItems.GMailLabels |\r\n     MessageSummaryItems.GMailMessageId |\r\n     MessageSummaryItems.GMailThreadId)\r\n     .OrderByDescending(o => o.UniqueId)\r\n     .ToList();\r\n```\r\n\r\nThat removes an expensive IMAP query which should improve the time it takes to render your message list (caching would make this all faster).\r\n\r\nThen, I would also recommend Fetching the PreviewText separately. Render the message-list *first* without the PreviewText while you have a background thread request that information and when you have it, update the message-list with that info.\r\n"
      }
    ]
  },
  {
    "number": 1020,
    "title": "Filter Undeliverable and Delay Delivery Emails",
    "created_at": "2020-05-11T04:50:07Z",
    "closed_at": "2020-05-11T13:29:00Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1020",
    "body": "**Is your feature request related to a problem? Please describe.**\r\nI am parsing emails from outlook account. In that I am receiving many emails that of Delivery Failure or Delay Delivery from postmaster account of that email domain. \r\n\r\n**Describe the solution you'd like**\r\nIs there any way that I can detect such emails based on its status or email type?\r\n\r\n\r\n**Describe alternatives you've considered**\r\nAs off now I am filtering such emails based on Subject like \"Undeliverable:\" or \"Mail delivery failed : \" or based on the from email address like \"postamaster@domain.com\"\r\n\r\n**Additional context**\r\n\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1020/comments",
    "author": "sumanrajpura",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2020-05-11T13:29:00Z",
        "body": "I would probably need to see an example of a raw message that you are processing, but my guess is that it would have a top-level Content-Type of `multipart/report` with a `report` parameter of `delivery-status`:\r\n\r\n```\r\nContent-Type: multipart/report; report-type=delivery-status; boundary=...\r\n```"
      }
    ]
  },
  {
    "number": 1011,
    "title": "Var Query doesn't work properly",
    "created_at": "2020-04-17T11:00:36Z",
    "closed_at": "2020-04-17T18:15:52Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/1011",
    "body": "Good afternoon good Sir..\r\nSorry to bother you again, i fixed my code completly but can't get the hang upon one small error.\r\nI am trying to fetch every message containing a subject and a specific E-Mail.\r\n\r\n```\r\nvar query = SearchQuery.SubjectContains(subject).And(SearchQuery.FromContains(emailfrom));\r\n                var uids = client.Inbox.Search(query);\r\n```\r\n\r\nAs far as i see it, this should be the correct way of doing it.\r\nUnfortunately - The Program doesn't find any Emails if i do it like that.\r\nWhen i try \"Or\" instead of \"And\" it finds emails containing the subject and dozens of emails from the email i told him, but not when i combine it with And. \r\n\r\nIs there a mistake in my thinking? \r\nI tried to come up with a solution myself and asked some good friends, but everyone told me this looks right so far. Do i need to change something to let it work properly?\r\n\r\nSorry for bothering you again\r\nGreetings\r\n\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/1011/comments",
    "author": "MisterCookie1234",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2020-04-17T12:43:22Z",
        "body": "What does your `emailfrom` string look like? Does it contain the person's name? Or just their email address? Does it contain the `<>`'s?\r\n\r\nThe problem with IMAP SEARCH is that it is implementation-specific, meaning that each server implements string matching differently (this is especially noticeable with email address queries).\r\n\r\nSome servers will match the string you provide in the search query with the decoded header, some will compare with the raw (encoded) header.\r\n\r\nSome servers will match email addresses with the name(s) & address(es) in the From/To/Cc header, some will match only against the addresses and not use the names at all.\r\n\r\nSome servers will match against the name, and if that fails, try matching against the address. This obviously means that if you search for `\"LastName <alias@\"` (because maybe this person uses the same alias across multiple mail servers - gmail.com, yahoo.com, employer.com, etc), it will fail because that string requires being matched against the name & address combined."
      },
      {
        "user": "MisterCookie1234",
        "created_at": "2020-04-17T17:32:42Z",
        "body": "The emailfrom string looks like this:\r\n`<add key=\"emailfrom\" value=\"emailadress@email.net\" />`\r\n\r\nI tried it with the persons name aswell, but switched it back to their email since the name didn't work either. The strange thing occuring is, that it works well with .Or - The program finds every email containing the subject1 and every email from the given emailadress. But whenever i change it to .And - Nothing."
      },
      {
        "user": "jstedfast",
        "created_at": "2020-04-17T18:15:52Z",
        "body": "You could try `SearchQuery.HeaderContains (\"From\", \"emailaddress@email.net\")`"
      },
      {
        "user": "MisterCookie1234",
        "created_at": "2020-04-20T08:32:54Z",
        "body": "Good Morning,\r\n\r\nunfortunately, using HeaderContains, he does not find anything. \r\nHowever tho, i figured out that FromContains only reacts to the Name of the sender \r\n(For Example: IT-as-a-Service, but not for the Email Adresss) but still, \r\nwhenever i change\r\n\r\n`var query = SearchQuery.SubjectContains(\"Test\").Or(SearchQuery.FromContains(IT-as-a-Service));`\r\n\r\nto\r\n\r\n`var query = SearchQuery.SubjectContains(\"Test\").And(SearchQuery.FromContains(IT-as-a-Service));`\r\n\r\nwith the only significant change being replacing the .Or with .And, forcing him to look at FromContains and SubjectContains, he doesn't find any mails, even tho there are lots of Test Mails featuring the right sender and right subject name."
      }
    ]
  },
  {
    "number": 998,
    "title": "[Question] NoOp called in the same time as Send an issue?",
    "created_at": "2020-03-13T15:42:51Z",
    "closed_at": "2020-03-13T15:44:32Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/998",
    "body": "I'm aware that there's no thread-safety for Send, but does that apply in-general to using the `SmtpClient`'s publicly available methods?\r\n\r\nMeaning if one thread is calling say `Send`, `Verify`, `NoOp`, no other thread is allowed to use the object, until the previously called operation completes?\r\n\r\nOr is it only an issue if two threads call the same public method?",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/998/comments",
    "author": "kikaragyozov",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2020-03-13T15:44:31Z",
        "body": "It's a problem if more than 1 thread calls any method on SmtpClient that sends any sort of command to the server."
      }
    ]
  },
  {
    "number": 997,
    "title": "[Question] How to use RCPT TO command from SmtpClient?",
    "created_at": "2020-03-12T12:31:12Z",
    "closed_at": "2020-03-12T13:33:30Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/997",
    "body": "SmtpClient has a method `Verify`, which banks on the server allowing VRFY command for verifying an e-mail address. In the event it's not allowed though, one can try issuing a RCPT TO command to check if such a recipient exists.\r\n\r\nI can do a `NoOp` command very easily from the client, but I don't see a public RcptTo method to do the above.\r\n\r\nAm I missing something here? Do you have plans on adding such a method/extending the usage of the Verify method, if not, could you guide me to implementing it myself? \r\n\r\nThank you!",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/997/comments",
    "author": "kikaragyozov",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2020-03-12T13:33:30Z",
        "body": "`RCPT TO` isn't likely tell you if the mailbox exists these days, it will just say OK to everything you give it.\r\n\r\nIf the server doesn't support VRFY, then it's pretty clear that the server is taking measures to thwart brute force checks by spammers."
      },
      {
        "user": "kikaragyozov",
        "created_at": "2020-03-12T14:08:51Z",
        "body": "Thank you for your reply @jstedfast , but could you perhaps give me some pointers as to how I'd be able to implement this myself?"
      },
      {
        "user": "jstedfast",
        "created_at": "2020-03-12T14:12:57Z",
        "body": "Just look at the code for `VRFY` in SmtpClient.cs and the code that sends `RCPT TO` as part of sending a message."
      },
      {
        "user": "kikaragyozov",
        "created_at": "2020-03-12T14:13:26Z",
        "body": "Thank you as always!"
      }
    ]
  },
  {
    "number": 993,
    "title": "[Question] Should you limit instantiations of SmtpClients, or not?",
    "created_at": "2020-03-06T12:28:23Z",
    "closed_at": "2020-03-06T14:46:25Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/993",
    "body": "I've just moved to using `MailKit`, and I know for a fact that the `SmtpClient` provided by Microsoft ought to be used as a singleton, in handling multiple mail messages.\r\n\r\nScaling would be done then by issuing X such clients, each with its own message queue.\r\n\r\nDo these same rules apply here, or can we aggressively instantiate MailKit's `smtpClients` on a per message sent basis?\r\n\r\n**EDIT**: On a side note, is there a thread-safe Send method? Because the old `SmtpClient` was not thread-safe in sending messages.",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/993/comments",
    "author": "kikaragyozov",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2020-03-06T14:46:25Z",
        "body": "It would probably be better to keep a reference to the SmtpClient in order to send multiple messages before disposing it.\r\n\r\nWhen you dispose a MailKit SmtpClient, you are closing the TCP/IP connection with the server (well, technically, the SmtpClient.Disconnect() method does that if you call that before Dispose(), but if not Dispose() will sever the connection for you).\r\n\r\nConnecting to a remote host over the internet is an expensive process that is best avoided if possible.\r\n\r\nAnd no, SmtpClient is not thread-safe, but you can lock the SmtpClient.SyncRoot property to synchronize your threads."
      },
      {
        "user": "kikaragyozov",
        "created_at": "2020-03-06T15:09:24Z",
        "body": "@jstedfast Is it okay to cache/use a given SmtpClient instance through the whole application's lifetime?"
      },
      {
        "user": "jstedfast",
        "created_at": "2020-03-06T15:23:45Z",
        "body": "Yes, but keep in mind that the connection won't remain connected w/o periodic packets being sent.\r\n\r\nSo you have 2 options:\r\n\r\n1. Keep the connection alive (as best you can) by using SmtpClient.NoOp() every few minutes.\r\n2. Properly handle exceptions in Send() (e.g. SmtpProtocolException) by re-connecting and trying again.\r\n\r\nEither way, you'll want to implement option 2. The question is whether you want to put in the effort for option 1 as well.\r\n\r\nNote: while SmtpClient.IsConnected is a useful property to check, it doesn't test the up-to-the-second state of the TCP/IP connection, that state only gets updated in the Connect() method, the Disconnect() method and as a result of an exception being thrown that is a result of the TCP/IP connection being closed by the server."
      },
      {
        "user": "amudhauday09",
        "created_at": "2020-03-06T16:42:00Z",
        "body": "Your email has been forwarded to Henrico Police as I have unsubscribed long ago from your email chain and still some bad guy is using your email to bully me with unwanted details.\n\nSorry I had to do this as there is no way for me to stop the bad guy hacking me. Just a FYI. \n\nSincere Regards\nAmudhaUday\n\n\nSent from my iPhone\n\n> On Mar 6, 2020, at 10:45 AM, SpiritBob <notifications@github.com> wrote:\n> \n> ﻿\n> Thank you a ton for taking some of your time in completely resolving all my inquiries, @jstedfast !\n> \n> Rather than locking by using SmtpClient.SyncRoot, I'll be implementing my own synchronization handler, coupled with the Task-Parallel-Library.\n> \n> —\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub, or unsubscribe.\n"
      },
      {
        "user": "kikaragyozov",
        "created_at": "2020-03-18T10:25:51Z",
        "body": "@jstedfast When I receive the following exception \"\"An existing connection was forcibly closed by the remote host.\", the `IsConnected` property does not get updated. Although in some exceptions as you've said, it does get updated. Isn't that error tied with the server closing the connection, if so, why wasn't the property updated?\r\n\r\n**EDIT:** Is attempting to do a `NoOp` operation a good alternative to testing if we have a valid established connection with the SMTP server? (If we get an exception, it means we need to re-establish the connection)"
      },
      {
        "user": "jstedfast",
        "created_at": "2020-03-18T13:53:28Z",
        "body": "Yes, a `NOOP` is a great way to check connectivity.\r\n\r\nThe `IsConnected` property should get updated, so there's probably a bug. Do you have the `StackTrace` of the exception? (I'm beginning to think most developers don't know about the `System.Exception.StackTrace` property). Suuuuuuper useful in tracking these types of bugs down ;-)"
      },
      {
        "user": "kikaragyozov",
        "created_at": "2020-03-18T14:21:37Z",
        "body": "@jstedfast Here you go!\r\n\r\n```\r\n{\"An existing connection was forcibly closed by the remote host.\"}\r\n    Data: {System.Collections.ListDictionaryInternal}\r\n    ErrorCode: 10054\r\n    HResult: -2147467259\r\n    HelpLink: null\r\n    InnerException: null\r\n    Message: \"An existing connection was forcibly closed by the remote host.\"\r\n    NativeErrorCode: 10054\r\n    SocketErrorCode: ConnectionReset\r\n    Source: \"System.Private.CoreLib\"\r\n    StackTrace: \"   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1.ConfiguredTaskAwaiter.GetResult()\\r\\n   at MailKit.Net.NetworkStream.<WriteAsync>d__36.MoveNext()\"\r\n    TargetSite: {Void Throw()}\r\n```\r\n\r\nThank you as always for answering so diligently.\r\n\r\n**EDIT:** Some additional context. After this is thrown, `IsConnected` stays true, and actually, a connection appears to exist, because attempting to use `ConnectAsync` yields in an exception, telling me that 'SmtpClient is already connected', which is not true, or if it's true - the connection is clearly invalid.\r\n\r\nThis forced me to make use of the `DisconnectAsync` method, to make sure it is able to do a new connection."
      },
      {
        "user": "kikaragyozov",
        "created_at": "2020-03-18T14:29:58Z",
        "body": "Let me know if you need further information, or if you've narrowed down the cause to this."
      },
      {
        "user": "jstedfast",
        "created_at": "2020-03-18T14:41:27Z",
        "body": "What SmtpClient method were you calling when you got this? `Send()`?"
      },
      {
        "user": "kikaragyozov",
        "created_at": "2020-03-18T14:53:10Z",
        "body": "> What SmtpClient method were you calling when you got this? `Send()`?\r\n\r\n`NoOpAsync()`"
      },
      {
        "user": "jstedfast",
        "created_at": "2020-03-18T15:13:56Z",
        "body": "Thanks. Fixed."
      },
      {
        "user": "kikaragyozov",
        "created_at": "2020-03-18T15:39:45Z",
        "body": "Any estimation as to when the changes will be applied to the `NuGet` package, or they already were?"
      },
      {
        "user": "jstedfast",
        "created_at": "2020-03-18T16:52:47Z",
        "body": "You can grab the latest build always from the link on the main page (myget). I only publish official builds once every few months or when I have major bugfixes to push."
      }
    ]
  },
  {
    "number": 992,
    "title": "Can MailKit Search and Delete Mail that i specified",
    "created_at": "2020-03-04T08:05:21Z",
    "closed_at": "2020-03-04T12:31:30Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/992",
    "body": "For example:\r\n\r\ni want delete the mail A week earlier，include InBox,SendBox ...... etc\r\n\r\nCan MailKit Do it?",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/992/comments",
    "author": "oper1000",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2020-03-04T12:31:30Z",
        "body": "Yes."
      }
    ]
  },
  {
    "number": 988,
    "title": "How bad could it be not calling ImapClient.Disconnect",
    "created_at": "2020-02-26T19:33:31Z",
    "closed_at": "2020-02-26T20:31:08Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/988",
    "body": "I am using Mailkit in a **Web.Api** application to retrieve mails using ImapClient. I used to connect and disconnect the ImapClient on every API call. However it turns to be very slow, so I decided not to disconnect the client and keep a reference to it storing it in **MemoryCache** and use it on every API call.\r\n\r\nOn every API call I am checking if the client is connected and authenticated, if not then connect and authenticate.\r\n\r\n```\r\nif (!client.IsConnected)\r\n{\r\n\tclient.Connect(imapConfig.Server, imapConfig.Port, imapConfig.SSL);\r\n}\r\nif (!client.IsAuthenticated)\r\n{\r\n\tclient.Authenticate(imapConfig.User, imapConfig.Password);\r\n}\r\n````\r\n\r\nI already test it and it works, however I am never calling **ImapClient.Disconnect**. I am thinking on calling disconnect at the very moment the user close or leave the web page, however I think it could happens that for any reason this event never fires causing that the API never calls Disconnect.\r\nAlso, **MemoryCache** could evict the client reference so that a new API call would have to create a new one stablishing a new connection, but the old reference could not be disconnected properly.\r\n\r\nHow bad could it be if my application never calls **ImapClient.Disconnect**? Could it lead to an eventual memory issues error or maybe run out of machine available sockets or connections?\r\n\r\nWhich other approach should I use instead of MemoryCache, to improve speed on IMAP operations.\r\n\r\nThanks",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/988/comments",
    "author": "JuanDavidPaez",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2020-02-26T20:31:08Z",
        "body": "What you're doing is fine, but I would disconnect the client when the user closes or leaves the page so that you free up the socket if it's still active.\r\n\r\nI've never written any ASP.NET web apps, so I can't help you beyond that because I'm not very familiar with how they work."
      },
      {
        "user": "Mos455",
        "created_at": "2022-04-19T15:24:16Z",
        "body": "@JuanDavidPaez  @jstedfast \r\n\r\nProbably a long shot but.. I am trying to implement something similar by caching ImapClient via IMemoryCache but... when retrieving an instance of ImapClient form cache I am getting the following error:\r\n\r\n\"Cannot access a disposed object. Object: ImapClient\"\r\n\r\nAm I missing something here or are we expected to connect each time using the cached object or is there a mechanism to stop disposing the object?\r\n\r\nAny tips/advice would be appreciated.\r\n\r\nThanks!\r\n\r\n  \r\n\r\n\r\n"
      }
    ]
  },
  {
    "number": 987,
    "title": "Unable to parse status code returned by the server",
    "created_at": "2020-02-22T08:32:41Z",
    "closed_at": "2020-02-22T14:58:05Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/987",
    "body": "MailKit.Net.Smtp.SmtpProtocolException: 'Unable to parse status code returned by the server.'\r\n\r\nlog:\r\n\r\nConnected to smtp://xx.xx.com:1800/?starttls=when-available\r\nS: +OK Welcome to MailEnable POP3 Server\r\n\r\nstack:\r\n\r\n   at MailKit.Net.Smtp.SmtpStream.<ReadResponseAsync>d__46.MoveNext()\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at MailKit.Net.Smtp.SmtpStream.ReadResponse(CancellationToken cancellationToken)\r\n   at MailKit.Net.Smtp.SmtpClient.<ConnectAsync>d__74.MoveNext()\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at MailKit.Net.Smtp.SmtpClient.Connect(String host, Int32 port, SecureSocketOptions options, CancellationToken cancellationToken)\r\n   at xx.SendEmailAsync(String email, String subject, String message) in xx\\EmailSender.cs:line 34",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/987/comments",
    "author": "carlhoogstoel",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2020-02-22T14:58:05Z",
        "body": "That's because you are trying to connect to a POP3 server using the SmtpClient.\r\n\r\nYou need to use the Pop3Client to connect to a POP3 server."
      },
      {
        "user": "carlhoogstoel",
        "created_at": "2020-02-22T15:15:05Z",
        "body": "Ok, it is official. I am an idiot:P"
      }
    ]
  },
  {
    "number": 986,
    "title": "Do you have plans to convert this project to dotnet core? As dotnet will be discontinued by Microsoft?",
    "created_at": "2020-02-18T09:38:50Z",
    "closed_at": "2020-02-18T12:26:26Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/986",
    "body": "To help me debug your issue, please explain:\r\n- What were you trying to do?\r\n- What happened?\r\n- What did you expect to happen?\r\n- Step-by-step reproduction instructions and/or a simple test case.\r\n\r\nIf you got an exception, please include the exception Message *and* StackTrace.\r\n\r\nPlease also INCLUDE A PROTOCOL LOG (scrubbed of any authentication data), especially\r\nif you got an exception such as `Syntax error in XYZ. Unexpected token: ...`.\r\nIf you do not include the protocol log, you will make me VERY UNHAPPY.\r\n\r\nWithout a protocol log, I CANNOT fix the issue. I will simply close the bug report.\r\n\r\nTo get a protocol log, follow one of the following code snippets:\r\n\r\n```csharp\r\n// log to a file called 'imap.log'\r\nvar client = new ImapClient (new ProtocolLogger (\"imap.log\"));\r\n```\r\n\r\n```csharp\r\n// log to a file called 'pop3.log'\r\nvar client = new Pop3Client (new ProtocolLogger (\"pop3.log\"));\r\n```\r\n\r\n```csharp\r\n// log to a file called 'smtp.log'\r\nvar client = new SmtpClient (new ProtocolLogger (\"smtp.log\"));\r\n```\r\n\r\nNote: if the protocol log contains sensitive information, feel free to email it to me at\r\njestedfa@microsoft.com instead of including it in the GitHub issue.\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/986/comments",
    "author": "jvveldhuizen",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2020-02-18T12:26:26Z",
        "body": "MimeKit and MailKit already support .NET Core and have for several years now."
      }
    ]
  },
  {
    "number": 985,
    "title": "Question: Is it possible to move a message with IMAP from one inbox to another client inbox?",
    "created_at": "2020-02-11T16:52:40Z",
    "closed_at": "2020-02-11T17:13:21Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/985",
    "body": "Hi there, \r\n\r\nI am just starting with this great library. I am working on an open-source daemon that can simply move all messages from an E-Mail Account A to E-Mail Account B using IMAP.\r\n\r\nI've been using such a tool a long day ago which was not open source and I would like to auto-move several old obsole accounts to one.  \r\n\r\nWhat's the best way to achieve that scenario when iterating the messages and how do I put the message to another client instance inbox?",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/985/comments",
    "author": "svnscha",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2020-02-11T17:13:21Z",
        "body": "Probably something like:\r\n\r\n```csharp\r\nvoid MoveAllMessages (IMailFolder src, IMailFolder dest)\r\n{\r\n    // Fetch the FLAGS and INTERNALDATE metadata for all messages in the `src`\r\n    // folder because we'll want to clone them over to the `dest` folder when we\r\n    // append the messages to it. We'll also want the UniqueId so that we can\r\n    // delete the message from the `src` folder when we are done moving it over\r\n    // to the `dest` folder.\r\n    var items = src.Fetch (0, -1, MessageSummaryItems.UniqueId | MessageSummaryItems.InternalDate | MessageSummaryItems.Flags);\r\n    foreach (var item in items) {\r\n        // ignore deleted messages\r\n        if (item.Flags.Value.HasFlag (MessageFlags.Deleted))\r\n            continue;\r\n\r\n        // get the message from the src folder\r\n        var message = src.GetMessage (item.UniqueId);\r\n\r\n        // append the message to the dest folder, keeping the flags and internal arrival date of the message as well\r\n        dest.Append (message, item.Flags.Value, item.InternalDate.Value);\r\n\r\n        // mark the message for deletion on the src folder\r\n        src.AddFlags (item.UniqueId, MessageFlags.Deleted, true);\r\n    }\r\n\r\n    // expunge the src folder of deleted messages\r\n    src.Expunge ();\r\n}\r\n```"
      },
      {
        "user": "jstedfast",
        "created_at": "2020-02-11T17:16:39Z",
        "body": "Note that you don't necessarily need to or want to clone the INTERNALDATE metadata - this timestamp just represents the arrival timestamp of the message. If you don't pass that along to the destination IMAP server, then the destination IMAP server will use the current date/time as the INTERNALDATE for the message(s) that you append."
      },
      {
        "user": "siara-cc",
        "created_at": "2022-12-28T13:32:20Z",
        "body": "> ```cs\r\n> var message = src.GetMessage (items.UniqueId);\r\n> ```\r\n\r\nThis worked for me. Thank you for making this wonderful library. Just that it should be `item.UniqueId` instead of `items.UniqueId`"
      }
    ]
  },
  {
    "number": 984,
    "title": "How to get the uniqueID of a message？",
    "created_at": "2020-02-11T07:05:12Z",
    "closed_at": "2020-02-11T14:00:03Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/984",
    "body": "**Is your feature request related to a problem? Please describe.**\r\nI have used inbox.getmessage (1) to get message information, but I can't find the one to get uniqueID。\r\n\r\n**Describe the solution you'd like**\r\nvar message = Inbox.GetMessage(1);\r\nstring subject = message.Subject; //Subject\r\n\r\nHow to get uniqueID next？\r\nI need to get this uniqueID for setflags。\r\nBut the uniqueID cannot be obtained by using GetMessage。\r\n\r\n**Describe alternatives you've considered**\r\nA clear and concise description of any alternative solutions or features you've considered.\r\n\r\n**Additional context**\r\nAdd any other context or screenshots about the feature request here.\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/984/comments",
    "author": "pengpengker",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2020-02-11T14:00:03Z",
        "body": "You can actually set flags using message indexes as well, but yes, it is better to use unique id's.\r\n\r\nTo get all of the UniqueIDs in a folder, you can do this:\r\n\r\n```csharp\r\nvar uids = inbox.Search (SearchQuery.All);\r\n```\r\n\r\nYou can then use those UIDs to get the messages:\r\n\r\n```csharp\r\nforeach (var uid in uids) {\r\n    var message = inbox.GetMessage (uid);\r\n}\r\n```\r\n\r\nAnother way to get the UIDs is to ask the folder for the metadata for a set of messages (or, in the example below, *all* of the messages):\r\n\r\n```csharp\r\nvar summaries = inbox.Fetch (0, -1, MessageSummaryItems.UniqueId | MessageSummaryItems.Envelope | MessageSummaryItems.Flags);\r\nforeach (var summary in summaries) {\r\n    // now you can use summary.UniqueId and any other field that you requested in the Fetch()\r\n    // request such as summary.Envelope. You can also use summary.Index which is *always* set.\r\n   Console.WriteLine (\"Message[{0}] has UID={1} and Subject=\\\"{2}\\\" and currently has the following flags set: {3}\", summary.Index, summary.UniqueId, summary.Envelope.Subject, summary.Flags.Value); \r\n}\r\n```\r\n\r\nIn essence, you don't get a UID from a message, you use a UID to *refer* to a message.\r\n\r\nHope that helps."
      },
      {
        "user": "pengpengker",
        "created_at": "2020-02-13T01:52:12Z",
        "body": "Thank You!\r\nIt is very Good!!!"
      }
    ]
  },
  {
    "number": 979,
    "title": "Need your guidance to add ClientCertificates using Mailkit",
    "created_at": "2020-01-23T09:20:35Z",
    "closed_at": "2020-01-23T13:46:06Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/979",
    "body": "This is not an issue, I m new to Mailkit and using Mailkit for the past one week.\r\n\r\nI dont know exactly how to  add a X509Certificate2 present in Windows personal store while connecting with smtpClient in Tsl2 using SmtpClient.ClientCertificates.Add method. \r\n(I have already posted this in MailKit Gitter, but didn't get a response)\r\n\r\nThe server is expecting a secure connection on port 587 in TSL1.2 with the authentication of smartcard certificate present in the store and asking me to type the pincode.\r\n\r\nCan you point me in the right direction to acheive this.\r\n\r\nI'm using visual studio 2017. I could acheive this using built in Windows SmtpClient but as ImapClient is missing in C#, i would like to use MailKit.\r\n\r\nAdvance Thanks and regards.\r\n\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/979/comments",
    "author": "ANANDHASTEVE",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2020-01-23T13:46:06Z",
        "body": "How do you do it using the Windows SmtpClient? Do it the same way with MailKit.\r\n\r\n```csharp\r\nclient.ClientCertificates = new X509Certificate2Collection ();\r\nclient.ClientCertificates.Add (certificate);\r\n```"
      },
      {
        "user": "ANANDHASTEVE",
        "created_at": "2020-01-23T16:46:37Z",
        "body": "Hi Jeffrey, \n\nThank you very much, \nI just resolved it before few hours. \n\n\n// this line is not needed in built-in SmptClient in Windows client . ClientCertificates = new X509Certificate2Collection (); \n// i added just this line directly client . ClientCertificates . Add ( certificate ); \nI should thank you for your prompt response and your Mailkit. \nMerci again Regards. ----- Mail original -----\n\nDe: \"Jeffrey Stedfast\" <notifications@github.com> \nÀ: \"jstedfast/MailKit\" <MailKit@noreply.github.com> \nCc: \"ANANDHASTEVE\" <steve.anandhan@free.fr>, \"Author\" <author@noreply.github.com> \nEnvoyé: Jeudi 23 Janvier 2020 14:46:09 \nObjet: Re: [jstedfast/MailKit] Need your guidance to add ClientCertificates using Mailkit (#979) \n\n\nHow do you do it using the Windows SmtpClient? Do it the same way with MailKit. \nclient . ClientCertificates = new X509Certificate2Collection (); client . ClientCertificates . Add ( certificate ); \n— \nYou are receiving this because you authored the thread. \nReply to this email directly, view it on GitHub , or unsubscribe . \n"
      }
    ]
  },
  {
    "number": 978,
    "title": "Argument 1: Cannot convert from \"MimeKit.MimeMessage\" to \"string\".",
    "created_at": "2020-01-22T15:29:35Z",
    "closed_at": "2020-01-22T15:55:42Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/978",
    "body": "hello, I'm trying to copy part of the text from a REGEX letter , but I have a problem. produces such an error\r\n Argument 1: Cannot convert from \"MimeKit.MimeMessage\" to \"string\".\r\n\r\n```csharp\r\n var a = inbox.GetMessage(UID); // \r\n                    var rsw = new Regex(\"(?i)<p [^>]*?>\\\\s*<em[^>]*?>(.*)</em\");\r\n  string capture2 = rsw.Match(a).Groups[1].Value;\r\n```\r\nI do not quite understand how to fix this.\r\n\r\nif this has nothing to do with your project, then I apologize.\r\nthanks",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/978/comments",
    "author": "NerzOff",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2020-01-22T15:55:42Z",
        "body": "The problem is that you are passing a `MimeMessage` object into `rsw.Match(a)`, but the `Match()` method takes a `string` argument, not a `MimeMessage` argument.\r\n\r\nIt looks like you are trying to use regex to match some HTML of the message body?\r\n\r\nIf so, try something more like this:\r\n\r\n```csharp\r\nvar message = inbox.GetMessage(UID);\r\nvar htmlBody = message.HtmlBody ?? string.Empty;\r\nvar rsw = new Regex(\"(?i)<p [^>]*?>\\\\s*<em[^>]*?>(.*)</em\");\r\nstring capture2 = rsw.Match(htmlBody).Groups[1].Value;\r\n```"
      },
      {
        "user": "NerzOff",
        "created_at": "2020-01-22T16:31:06Z",
        "body": "thank you very much"
      }
    ]
  },
  {
    "number": 975,
    "title": "find uid of the last letter from a person",
    "created_at": "2020-01-21T07:27:40Z",
    "closed_at": "2020-01-21T17:13:30Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/975",
    "body": "hi, how can I find the uid of the last (new) letter from \"sad@sad.com\"?\r\n\r\nI read the documentation, looked at the examples, but still did not understand how to implement this.\r\nI ask for your help. thanks\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/975/comments",
    "author": "NerzOff",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2020-01-21T17:13:30Z",
        "body": "I would suggest using the Search functionality.\r\n\r\n```csharp\r\nvar uids = folder.Search(SearchQuery.FromContains (\"sad@sad.com\").And (SearchQuery.New));\r\nif (uids.Count > 0) {\r\n    var last = uids[uids.Count - 1];\r\n}\r\n```\r\n\r\nNote: `SearchQuery.New` matches messages with the `\\Recent` flag which will only be present in the very first IMAP client session after the message was delivered. If you reconnect later, the `\\Recent` flag will be gone.\r\n\r\nIf you only care about whether the message has been read or not, use `SearchQuery.NotSeen` instead of `SearchQuery.New`."
      }
    ]
  },
  {
    "number": 973,
    "title": "Inline images from window snipping tool not working",
    "created_at": "2020-01-20T09:41:12Z",
    "closed_at": "2020-01-20T15:35:12Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/973",
    "body": "Description:\r\nEmails which contain in the html body an image, which is created by the snipping tool of windows, the the image is received incorrectly.\r\nIn the html its showing: `<img>`, so the rest is missing. In Outlook the image is showing correctly.\r\n\r\nSteps to reproduce:\r\n1. Create an email, and paste in an image in the body which is created by the snipping tool in Windows 10.\r\n2. Send this email.\r\n3. Receive the email with the following code: client.Inbox.GetMessage(MailKit.UniqueId.Parse(0))\r\n\r\nExpected behavior\r\nThe email show with the image.\r\n\r\nDesktop (please complete the following information):\r\n - OS: windows 10\r\n - Browser: chrome\r\n\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/973/comments",
    "author": "tbizot-fullstack",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2020-01-20T15:34:31Z",
        "body": "MimeKit/MailKit don't render messages, so this doesn't appear to make sense as a bug filed against them.\r\n\r\nWhat does the raw message look like and why do you think the problem is with MimeKit/MailKit?\r\n\r\nKeep in mind, as well, that MimeKit/MailKit don't even touch the HTML content, so it's not possible for them to break the HTML."
      }
    ]
  },
  {
    "number": 971,
    "title": "Pop3Client seems not to delete messages on a certain server",
    "created_at": "2020-01-06T16:49:19Z",
    "closed_at": "2020-01-06T16:57:09Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/971",
    "body": "hi \r\nI use a Pop3 email server which does not support TSL authentication and uses port 110.\r\nIn this particular case the method Pop3Client.DeleteMessage(messageIndex) seems neither to delete the message from the server nor move it to trash.\r\nIn contrast on another server (requires TSL and port 995) the method works fine.\r\nIf this helps, below are the problematic server's Capabilities:\r\nMailKit.Net.Pop3.Pop3Capabilities.Pipelining | MailKit.Net.Pop3.Pop3Capabilities.ResponseCodes | MailKit.Net.Pop3.Pop3Capabilities.Top | MailKit.Net.Pop3.Pop3Capabilities.UIDL | MailKit.Net.Pop3.Pop3Capabilities.User.\r\n\r\nAnother external email agent (Opera Mail) manages to delete emails from the problematic server, however not quite as I would hope, ie. it deletes them permanently, rather than moving them to trash.\r\n\r\nAny idea what the problem could be?\r\nMarek",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/971/comments",
    "author": "marekpraski",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2020-01-06T16:55:01Z",
        "body": "How are you disconnecting from the server after deleting the messages?\r\n\r\ne.g. This will delete the messages:\r\n\r\n```csharp\r\nusing (var client = new Pop3Client ()) {\r\n    client.Connect (\"pop.host.com\", 110, false);\r\n    client.Authenticate (\"username\", \"password\");\r\n    for (int i = 0; i < client.Count; i++)\r\n        client.DeleteMessage (i);\r\n\r\n    // without this Disconnect (true) call, the messages will not get deleted\r\n    client.Disconnect (true);\r\n}\r\n```\r\n\r\nBut this will not delete them:\r\n\r\n```csharp\r\nusing (var client = new Pop3Client ()) {\r\n    client.Connect (\"pop.host.com\", 110, false);\r\n    client.Authenticate (\"username\", \"password\");\r\n    for (int i = 0; i < client.Count; i++)\r\n        client.DeleteMessage (i);\r\n}\r\n```\r\n\r\nAlso: With POP3, there is no such thing as a Trash folder, so deleting messages via POP3 cannot move messages there. All a client can do is delete messages.\r\n\r\nKeep in mind that a server can *implement* deletion via POP3 as a \"Move to Trash\" operation, but the client has no control over this."
      },
      {
        "user": "marekpraski",
        "created_at": "2020-01-06T17:38:32Z",
        "body": "well, I DO disconnect the client. It is the same method I use for both servers and as I said, it works for one but does not for the other.\r\nI was not aware of the POP3 limitation with respect to \"move to trash\", thanks for clarifying that. Obviously the other server supports this feature."
      },
      {
        "user": "jstedfast",
        "created_at": "2020-01-06T17:44:34Z",
        "body": "Try getting a protocol log w/ the problematic server. Does it send a QUIT command at the end?"
      },
      {
        "user": "marekpraski",
        "created_at": "2020-01-07T08:43:14Z",
        "body": "hi, sorry for the trouble, there was a bug in my code. After fixing it everything works fine. Thank you"
      }
    ]
  },
  {
    "number": 969,
    "title": "NET Core 3 support?",
    "created_at": "2019-12-25T07:40:24Z",
    "closed_at": "2019-12-25T12:16:49Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/969",
    "body": "Is MailKit NET Core 3 compatible?",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/969/comments",
    "author": "ZedZipDev",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2019-12-25T12:15:09Z",
        "body": "Is there a reason it wouldn't be? As far as I know, .NET Core 3 can use .NETStandard2.0 libraries and MailKit supports .NETStandard2.0, so it should work."
      }
    ]
  },
  {
    "number": 959,
    "title": "Whats special name \"Archive Folder\" for Yahoo IMAP Server",
    "created_at": "2019-12-02T15:22:56Z",
    "closed_at": "2019-12-02T15:51:54Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/959",
    "body": "Hi, i need to move all inbox messages to archive folder on Yahoo Imap Server. But I'm getting this error \"The IMAP server does not support the SPECIAL-USE\". I need to Yahoo Archive Folder special name. I can move all mails to spam with \"Bulk Mail\" folder name. How can i inbox to archive ? Do you have any idea ? Thanks...\r\n\r\nInbox to Spam (is working) : `inbox.MoveTo(UniqueIdRange.All, client.GetFolder(\"Bulk Mail\"));`\r\n\r\nInbox to Archive (error) : `inbox.MoveTo(UniqueIdRange.All, client.GetFolder(SpecialFolder.Archive));`",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/959/comments",
    "author": "emrahaydemir",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2019-12-02T15:51:52Z",
        "body": "`client.GetFolder(SpecialFolder.Archive)` only works if the server supports the `SPECIAL-USE` extension which is an extension where the server tells the client which folder to is the Spam/Archive/Draft/etc folders.\r\n\r\nWithout that extension, the client has to guess which folder is for each of these things.\r\n\r\nMy only suggestion for you is to look for a folder called \"Archive\"."
      }
    ]
  },
  {
    "number": 955,
    "title": "use aws ses(Amazon Simple Email Service) error   501 Invalid MAIL FROM address provided",
    "created_at": "2019-11-21T06:40:04Z",
    "closed_at": "2019-11-21T13:19:45Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/955",
    "body": "Dear Friend\r\nI use mailkit to send aws  ses \r\ncsharp code:\r\n\r\n```csharp\r\n            using (var client = new MailKit.Net.Smtp.SmtpClient(new ProtocolLogger(Program.CreateMailLog())))\r\n            {\r\n\r\n                //25 587\r\n                // String HOST = \"email-smtp.us-west-2.amazonaws.com\";\r\n                // int PORT = 587;\r\n                client.Connect(HOST, PORT, SecureSocketOptions.StartTlsWhenAvailable);\r\n                //SMTP_USERNAME: Replace smtp_username with your Amazon SES SMTP user name.\r\n                // SMTP_PASSWORD: Replace smtp_password with your Amazon SES SMTP user name.\r\n                client.Authenticate(SMTP_USERNAME, SMTP_PASSWORD);\r\n                // client.Authenticate(oauth);\r\n                client.Send(message);\r\n                client.Disconnect(true);\r\n            }\r\n```\r\n\r\nbut is error.\r\nlogs:\r\n```\r\nConnected to smtp://email-smtp.us-west-2.amazonaws.com:587/?starttls=when-available\r\nS: 220 email-smtp.amazonaws.com ESMTP SimpleEmailService-d-B1D75AM90 83qp4IzaerfvF0CNuJJJ\r\nC: EHLO [192.168.1.110]\r\nS: 250-email-smtp.amazonaws.com\r\nS: 250-8BITMIME\r\nS: 250-SIZE 10485760\r\nS: 250-STARTTLS\r\nS: 250-AUTH PLAIN LOGIN\r\nS: 250 Ok\r\nC: STARTTLS\r\nS: 220 Ready to start TLS\r\nC: EHLO [192.168.1.110]\r\nS: 250-email-smtp.amazonaws.com\r\nS: 250-8BITMIME\r\nS: 250-SIZE 10485760\r\nS: 250-STARTTLS\r\nS: 250-AUTH PLAIN LOGIN\r\nS: 250 Ok\r\nC: AUTH PLAIN XXX\r\nS: 235 Authentication successful.\r\nC: MAIL FROM:<myemailname> SIZE=606\r\nS: 501 Invalid MAIL FROM address provided\r\nC: RSET\r\nS: 250 Ok\r\n```\r\n\r\nlogs say my error is 501 Invalid MAIL FROM address provided\r\nbut i don't know what can i do\r\nsomeone has idea of it\r\nBest wish  \r\nRico \r\n\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/955/comments",
    "author": "wkf0660",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2019-11-21T13:19:45Z",
        "body": "You need to set a full email address of the form `user@domain.com`, not just `user`."
      },
      {
        "user": "wkf0660",
        "created_at": "2019-11-22T01:53:16Z",
        "body": "thanks! \r\ni write the full address ,and   is OK "
      }
    ]
  },
  {
    "number": 941,
    "title": "Smtp lifetime",
    "created_at": "2019-10-28T07:12:06Z",
    "closed_at": "2019-10-28T12:42:29Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/941",
    "body": "Hi, I was wondering how should I use `MailKit.Net.Smtp.smptclient` object, and what is the best life-time for `smtpclient` object.\r\nI mean should I use it as a singleton object, or is it ok to use it with c# `using(resource)` pattern?\r\nmy main concern here is how `smtpclient`  object handles underlying network connection, and what should I do in order to avoid socket exhaustion.\r\n\r\nI am asking this since all the tutorials on the web use `smtpclient` with c# `using(resource)` pattern. However, if `smtpclient` is anything like .net `httpclient` this is going to mess things up in production\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/941/comments",
    "author": "FIVIL",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2019-10-28T12:42:29Z",
        "body": "With any of the MailKit Smtp/Pop3/ImapClient classes, a socket is instantiated/connected in the `Connect` method and disconnected/disposed in the `Disconnect` method. The `Dispose` method on each of the Client classes will force a disconnect by calling `Disconnect (false)` but they will just kill the socket rather than sending a \"LOGOUT\" command, so I would definitely recommend calling `Disconnect (true)` before `Dispose` whether you use the `using(resource)` pattern or not.\r\n\r\nThe problem people get into with `HttpClient` is that they dispose the client way too aggressively, not giving the OS time to clean up the disconnected socket(s) before instantiating a new HttpClient and making the next request, e.g.:\r\n\r\n```csharp\r\nfor (int i = 0; i < 1000; i++) {\r\n    using (var new HttpClient ()) {\r\n        // make a request, process it, etc...\r\n    }\r\n}\r\n```\r\n\r\nThis *can* also be a problem with MailKit. For example, if you have 1000 messages you want to send, I would recommend reusing the same SmtpClient instance like this:\r\n\r\n```csharp\r\nusing (var client = new SmtpClient ()) {\r\n    client.Connect (\"smtp.server.com\", 587, SecureSocketOptions.StartTls);\r\n    client.Authenticate (\"username\", \"password\");\r\n\r\n    for (int i = 0; i < 1000; i++) {\r\n        client.Send (messages[i]);\r\n    }\r\n\r\n    client.Disconnect (true);\r\n}\r\n```\r\n"
      },
      {
        "user": "FIVIL",
        "created_at": "2019-10-28T18:49:17Z",
        "body": "Thank you for your detailed answer, one last thing though.\r\nsince I am planning to use this in a web server, which sends emails to users, I was wondering if MailKit Smtp/Pop3/ImapClient classes are thread-safe or should I take care of managing threads and locks??"
      },
      {
        "user": "jstedfast",
        "created_at": "2019-10-28T19:00:16Z",
        "body": "They are not thread-safe."
      }
    ]
  },
  {
    "number": 940,
    "title": "Determine folder message is in",
    "created_at": "2019-10-25T13:10:44Z",
    "closed_at": "2019-10-25T13:41:46Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/940",
    "body": "When I am handling a message, and I decide to add a flag to it, I do not always know which folder it is in, and therefore do not know on which folder to set the flags (MailFolder.AddFlags())\r\n\r\nI would like it if there were a way to obtain the knowledge of which folder the message is in, perhaps by:\r\n1. MimeMessage having an IMailFolder property - folder (message.Folder)\r\n2. ImapClient having a function such as GetMessageFolder(UniqueId uid)\r\n\r\nOtherwise, I will have to somehow keep track of the current location of the message, which would not be as clean.\r\nPerhaps there is already a way for me to get this information that I do not know of. I would appreciate any guidance on the issue.\r\n\r\nThank you\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/940/comments",
    "author": "kkaminker",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2019-10-25T13:41:46Z",
        "body": "You just have to keep track of it yourself."
      },
      {
        "user": "kkaminker",
        "created_at": "2019-10-25T13:42:41Z",
        "body": "Okay, thanks anyway"
      },
      {
        "user": "jstedfast",
        "created_at": "2019-10-25T13:47:33Z",
        "body": "There's a whole ton of problem with doing what you are asking for:\r\n\r\n1. `ImapClient.GetMessageFolder (UniqueId)` cannot possibly work because UIDs are only unique *per folder*, not per server. In other words, you can have a message in Inbox that has a UID of 45 and a different message in your Sent folder with a UID of 45.\r\n2. `MimeMessage` lives in MimeKit which knows nothing about MailKit, which is where `IMailFolder` and `UniqueId` live.\r\n3. Even if I merged MimeKit and MailKit so that `MimeMessage` *could* reference an `IMailFolder`, what happens if the `ImapClient` gets disconnected/disposed while you are still using the `MimeMessage` and then you want to add flags to it? Doing things this way opens a MASSIVE can of worms."
      },
      {
        "user": "kkaminker",
        "created_at": "2019-10-25T13:54:47Z",
        "body": "I see, okay thank you"
      }
    ]
  },
  {
    "number": 937,
    "title": "Pop3 client",
    "created_at": "2019-10-18T09:57:56Z",
    "closed_at": "2019-10-18T11:23:41Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/937",
    "body": "What is login capability used by pop3client by default.\r\n\r\nI would like to login by apop or pop3 as login capabilities as the user request. How can be use these in the  pop3 client for login?",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/937/comments",
    "author": "dayanandm123",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2019-10-18T11:23:41Z",
        "body": "You can check if the POP3 server supports APOP using the following check:\r\n\r\n```csharp\r\nif (client.Capabilities.HasFlag (Pop3Capabilities.Apop))\r\n```\r\n\r\nYou can check if the POP3 server supports the USER/PASS set of login commands using the following check:\r\n\r\n```csharp\r\nif (client.Capabilities.HasFlag (Pop3Capabilities.User))\r\n```\r\n\r\nIf the POP3 server supports APOP, APOP authentication will be used in the Authenticate() method.\r\n\r\nTo disable it, do this:\r\n\r\n```csharp\r\nclient.Capabilities &= ~Pop3Capabilities.Apop;\r\n```\r\n\r\nIf the POP3 server supports *any* SASL mechanisms that MailKit supports, then MailKit will attempt to use the SASL mechanisms *first* and only fall back to `USER`/`PASS` if they fail.\r\n\r\nTo avoid attempting to login using a SASL mechanism, disable them *after* Connect() using:\r\n\r\n```csharp\r\nclient.AuthenticationMechanisms.Remove (\"PLAIN\");\r\nclient.AuthenticationMechanisms.Remove (\"LOGIN\");\r\nclient.AuthenticationMechanisms.Remove (\"CRAM-MD5\");\r\nclient.AuthenticationMechanisms.Remove (\"DIGEST-MD5\");\r\n// etc...\r\n```\r\n\r\n-or-\r\n\r\n```csharp\r\nclient.AuthenticationMechanisms.Clear ();\r\n```\r\n"
      },
      {
        "user": "dayanandm123",
        "created_at": "2019-10-19T12:29:33Z",
        "body": "How can check pop3 capability support by server? As the way possible to check apop and user capabilities "
      },
      {
        "user": "jstedfast",
        "created_at": "2019-10-19T13:27:35Z",
        "body": "Use the code I provided above after connecting to the server."
      }
    ]
  },
  {
    "number": 936,
    "title": "Thread safe SmtpClient",
    "created_at": "2019-10-16T18:07:53Z",
    "closed_at": "2019-10-16T18:30:56Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/936",
    "body": "**Is your feature request related to a problem? Please describe.**\r\nIt would be fantastic to create one instance of SmtpClient and share it across threads.  That way you'd only need to connect and authenticate once, and you could efficiently send many emails across that connection using something like TPL Dataflow.\r\n\r\n**Describe the solution you'd like**\r\nThe HttpClient would be a good model to copy.  Just create a static instance of the client, and multiple threads could call `Send()`\r\n\r\n**Describe alternatives you've considered**\r\nI have a working prototype of sending SMTP email in bulk using multiple threads.  However, each thread has to create its own instance of SmtpClient which is a hassle.\r\n\r\n**Additional context**\r\nAdd any other context or screenshots about the feature request here.\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/936/comments",
    "author": "MikeChristensen",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2019-10-16T18:30:56Z",
        "body": "I welcome pull requests to add such a feature."
      },
      {
        "user": "coader",
        "created_at": "2021-12-13T03:56:44Z",
        "body": "is it thread safe now? not found description in document and pr"
      },
      {
        "user": "jstedfast",
        "created_at": "2021-12-13T11:59:17Z",
        "body": "What are you hoping for with thread safety?\n\nAre you hoping to send multiple messages using the same SmtpClient instance at the exact same time from multiple threads?\n\nIf so, do you have any idea how sockets work? How do you think that would work, exactly?"
      },
      {
        "user": "jstedfast",
        "created_at": "2021-12-13T12:30:45Z",
        "body": "Why do you need MailKit's SmtpClient to be thread safe?\r\n\r\nYou guys are being ridiculous.\r\n\r\nIs List<T> thread safe?\r\n\r\nDid you ever consider just doing your own locking? It's so simple to do:\r\n```csharp\r\nlock (client.SyncRoot) {\r\n    client.Send (message);\r\n}\r\n```\r\nNow you have thread safety."
      },
      {
        "user": "lukos",
        "created_at": "2022-05-31T08:48:09Z",
        "body": "This didn't work for me in the latest version, I don't know if that's because the sync methods are wrappers around async methods and calling GetAwaiter() releases the calling thread and unlocks. \r\n\r\nNet result was a NullReferenceException in `SendAsync()` but I didn't have a line number so I couldn't see exactly what line it was (so the above is an assumption). Unfortunately, it is hard to generate enough traffic locally to force this sorts of errors!\r\n\r\nI am going to try with `SemaphoreSlim` instead."
      },
      {
        "user": "lukos",
        "created_at": "2022-09-15T16:10:42Z",
        "body": "The following basically works with `private SemaphoreSlim clientLock = new SemaphoreSlim(1, 1);`\r\n\r\n```csharp\r\nawait clientLock.WaitAsync(token);\r\ntry\r\n{\r\n    await client.SendAsync(message, token, progress);\r\n}\r\nfinally\r\n{\r\n    clientLock.Release();\r\n}\r\n```\r\n\r\nHowever, you still need to be careful with any other code that is disconnecting or disposing the client but also avoiding excessive locking. For example, I call `NoOp()` before using the client to ensure it is still connected but if this fails, I disconnect the client so it gets removed and not used any more but of course, various threads could already have got through the `Connected` check and are mid-way through `SendAsync()` when this happens and instead of getting a nice error, we get the random NullReferenceException, understandable but not great.\r\n\r\nI need to spend more time carefully locking some more scenarios."
      }
    ]
  },
  {
    "number": 935,
    "title": "Proxy thread safety",
    "created_at": "2019-10-16T15:25:26Z",
    "closed_at": "2019-10-16T15:59:31Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/935",
    "body": "Is the HttpProxyClient thread safe to be used as a single instance by multiple clients in seperate threads, or should each client get their own instance?\r\n\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/935/comments",
    "author": "baxterhemingway",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2019-10-16T15:59:31Z",
        "body": "It's safe to use from multiple threads. All the proxy does is create a connection and return the resulting Socket."
      }
    ]
  },
  {
    "number": 931,
    "title": "Kerberos Support for Mailkit",
    "created_at": "2019-10-10T06:02:41Z",
    "closed_at": "2019-10-10T11:14:51Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/931",
    "body": "**Describe the bug**\r\nI was trying to connect using GSSAPI authenticationMachanism using Mailkit API but not successful with error : Unhandled Exception: System.NotSupportedException: No compatible authentication mechanisms found.\r\nI confirmed that mail server supports Kerberos(GSSAPI) authenticationmechanism see output for supported authenticationmechanisms.\r\n\r\n\r\n**To Reproduce**\r\nsample code:\r\n```\r\n using (var client = new SmtpClient(new ProtocolLogger(\"email.log\", true)))\r\n            {\r\n                client.Connect(host, port, isSSL);\r\n                Console.WriteLine(\"Auth types supported: \");\r\n                foreach (var str in client.AuthenticationMechanisms)\r\n                {\r\n                    Console.WriteLine(str);\r\n                }\r\n                client.ServerCertificateValidationCallback += ValidateCertificate;\r\n                SaslMechanism authtype = null;\r\n                switch (auth)\r\n                {\r\n                    case AuthTypes.NTLM:\r\n                        authtype = new SaslMechanismNtlm(userName, password);//WinServer\r\n                        break;\r\n                    case AuthTypes.LOGIN:\r\n                        authtype = new SaslMechanismLogin(userName, password);//WinServer\r\n                        break;\r\n                    case AuthTypes.PLAIN:\r\n                        authtype = new SaslMechanismPlain(userName, password);//WinServer\r\n                        break;\r\n                    case AuthTypes.CRAM_MD5:\r\n                        authtype = new SaslMechanismCramMd5(userName, password);//WinServer\r\n                        break;\r\n                    case AuthTypes.DIGEST_MD5:\r\n                        authtype = new SaslMechanismDigestMd5(userName, password);//WinServer\r\n                        break;\r\n                    case AuthTypes.KERBEROS:\r\n                        client.AuthenticationMechanisms.Add(\"GSSAPI\");\r\n                        authtype = null;\r\n                        break;\r\n                    default:\r\n                        authtype = null;\r\n                        break;\r\n\r\n                }\r\n                if(authtype != null)\r\n                {\r\n                    client.Authenticate(authtype);\r\n                }\r\n                else\r\n                {\r\n                    client.Authenticate(userName, password);\r\n                }\r\n                \r\n                client.MessageSent += AfterEmailSent;\r\n                \r\n                client.Send(message);\r\n                \r\n                client.Disconnect(true);\r\n            }\r\n```\r\n\r\n**Expected behavior**\r\nFor the authType KERBEROS, I should connect and send email notification. But I see below error\r\nAuth types supported:\r\nNTLM\r\nGSSAPI\r\n\r\nUnhandled Exception: System.NotSupportedException: No compatible authentication mechanisms found.\r\n   at MailKit.Net.Smtp.SmtpClient.<AuthenticateAsync>d__67.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at MailKit.Net.Smtp.SmtpClient.Authenticate(Encoding encoding, ICredentials credentials, CancellationToken cancellationToken)\r\n   at MailKit.MailService.Authenticate(Encoding encoding, String userName, String password, CancellationToken cancellationToken)\r\n   at MailKit.MailService.Authenticate(String userName, String password, CancellationToken cancellationToken)\r\n   at NativeMethodEx.Program.SendMessages(MimeMessage message) in C:\\Users\\blokesh\\source\\repos\\Examples\\NativeMethodEx\\Program.cs:line 253\r\n   at NativeMethodEx.Program.Main(String[] args) in C:\\Users\\blokesh\\source\\repos\\Examples\\NativeMethodEx\\Program.cs:line 85\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n**Desktop (please complete the following information):**\r\n - OS: [e.g. iOS]\r\n - Browser [e.g. chrome, safari]\r\n - Version [e.g. 22]\r\n\r\n**Smartphone (please complete the following information):**\r\n - Device: [e.g. iPhone6]\r\n - OS: [e.g. iOS8.1]\r\n - Browser [e.g. stock browser, safari]\r\n - Version [e.g. 22]\r\n\r\n**Additional context**\r\nBut I confirmed with JavaMail API with sample application for Kerberos case with same mail server. It is successful. \r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/931/comments",
    "author": "lokeshb4u",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2019-10-10T11:14:51Z",
        "body": "Calling `client.AuthenticationMechanisms.Add(\"GSSAPI\");` isn't going to magically create a GSSAPI authentication mechanism.\r\n\r\nYou need to write the code to implement GSSAPI, MailKit does not provide it and I'm not likely to implement it. That said, you could implement it and send me a patch."
      },
      {
        "user": "lokeshb4u",
        "created_at": "2019-10-11T08:58:22Z",
        "body": "Thank you for the confirmation"
      }
    ]
  },
  {
    "number": 930,
    "title": "kerberose authentication type ",
    "created_at": "2019-10-09T17:18:20Z",
    "closed_at": "2019-10-09T17:56:29Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/930",
    "body": "I would like to use Kerberose authentication type as for smtp mail communications with ssl and without ssl.\r\nPlease let me know same has been supported By mailkit, the MS mail servers configured in windows and Linux machines.\r\n\r\nThanks.\r\nDayanand M",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/930/comments",
    "author": "dayanandm123",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2019-10-09T17:56:28Z",
        "body": "What you need to do is subclass `MailKit.Security.SaslMechanism` (e.g. `KerberosSaslMechanism`) and then when you go to authenticate, do this:\r\n\r\n```csharp\r\nclient.Authenticate (new KerberosSaslMechanism (...));\r\n```\r\n"
      },
      {
        "user": "dayanandm123",
        "created_at": "2019-10-10T05:28:51Z",
        "body": "Is it require to implement kerberosesaslmechanism with kerberose authentication related logic?\r\nIs it available in hand from mailkit as we use other AUTH types like plan login md5 etc.."
      },
      {
        "user": "jstedfast",
        "created_at": "2019-10-10T12:19:33Z",
        "body": "> Is it require to implement kerberosesaslmechanism with kerberose authentication related logic?\r\n\r\nNo, you can just use a few `i++`'s and maybe some `var x = 5;`'s. That should totally work.\r\n\r\nI'm being sarcastic, but I guess I just figured the answer to this question was obvious.\r\n\r\n> Is it available in hand from mailkit as we use other AUTH types like plan login md5 etc..\r\n\r\nNo. If it was, I would have just told you how to use it rather than telling you that you'll need to write your own `KerberosSaslMechanism` class."
      }
    ]
  },
  {
    "number": 929,
    "title": "smtp gmail (OAUTH2) not working with scope 'GmailSend'",
    "created_at": "2019-10-09T12:03:49Z",
    "closed_at": "2019-10-09T12:22:05Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/929",
    "body": "I am building an application using smtp gmail OAUTH2 authentication. Below is the sample code.\r\n\r\nUserCredential credential = GoogleWebAuthorizationBroker.AuthorizeAsync(\r\n                        secrets,\r\n                        new[] { GmailService.Scope.GmailSend },\r\n                        \"user\",\r\n                        CancellationToken.None).Result;\r\n\t\t\t\t\t\t\r\nusing (var client = new SmtpClient())\r\n{\r\n\tclient.Connect(\"smtp.gmail.com\", 587);                \r\n\tclient.AuthenticationMechanisms.Clear();\r\n\tclient.AuthenticationMechanisms.Add(\"XOAUTH2\");                \r\n\tvar oauth2 = new SaslMechanismOAuth2(credential.UserId, credential.Token.AccessToken);\r\n\tclient.Authenticate(oauth2);  \r\n}\r\n\r\nWhen I use 'MailGoogleCom' as scope it is authenticating and working fine. I am able to send email.\r\n\r\nWhen I use 'GmailSend' as scope it is giving authenticating error.\r\n\r\nMy only requirement is to use 'GmailSend' as I want to send only email and do not want any other functionality of mail. Also 'GmailSend' has less verification requirements from Google.\r\n\r\nSince my requirement is to send only email, 'GmailSend' should work.\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/929/comments",
    "author": "ghost",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2019-10-09T12:22:05Z",
        "body": "That's not how GMail scopes work, though. I know it seems intuitive that it *should* work that way, and I agree, but it doesn't - GMailSend is only for the GMailSend API, not standard SMTP.\r\n\r\nYou need to use MailGoogleCom since you are logging into mail.google.com"
      }
    ]
  },
  {
    "number": 927,
    "title": "Content Id for mails set to \"multipart/multipart/mixed\" in email message.",
    "created_at": "2019-10-07T10:33:48Z",
    "closed_at": "2019-10-07T12:20:56Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/927",
    "body": "**Describe the bug**\r\nWhen creating a new mail message using the MailKit and Mimekit helpers, when creating a message from a Multipart object, the Content Id is set to \"multipart/multipart/mixed\" instead of the normal \"multipart/mixed\". This happens when creating a MimeMessage object from a Multipart object, and then sending the email.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\nCreate a new outgoing email message using a MimeMessage, instead of using the BodyBuilder helper class. The MimeMessage should be built from a Multipart object using the \"subType\" of \"multipart/mixed\". Adding attachments is optional. \r\nWhen sending the mail and viewing the email as an EML file, the Content Id value is set to \"multipart/multipart/mixed\", instead of the correct \"multipart/mixed\". This can cause issues with certain email servers antispam/antivirus software seeing this message as a \"malformed\" message. This happened in a scenario where the recipient was using MailMarshal.\r\n\r\n**Expected behavior**\r\nContentId should be set to \"multipart/mixed\" in all scenarios.\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n**Desktop (please complete the following information):**\r\n - OS: Windows 10\r\n - Browser All\r\n - Version 2.1.5.1\r\n\r\n**Additional context**\r\nWhen creating a new mail message using the BodyBuilder helper class, the message's Content Id is set correctly.\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/927/comments",
    "author": "eduardk1008",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2019-10-07T12:20:56Z",
        "body": "> The MimeMessage should be built from a Multipart object using the \"subType\" of \"multipart/mixed\".\r\n\r\nSo... `new Multipart (\"multipart/mixed\");` results in `Content-Type: multipart/multipart/mixed`?\r\n\r\nDoctor's orders: take a sip of your morning coffee and then look at that again and tell me why you are getting the result you are getting ;-)\r\n\r\nI'm pretty sure you'll have a \"ah-hah!\" moment, a little light bulb will spark to life and you'll be golden.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nHint: what you want is `new Multipart (\"mixed\");`"
      },
      {
        "user": "eduardk1008",
        "created_at": "2019-10-08T08:37:54Z",
        "body": "Hi there,\r\n\r\nThank you for letting me know!\r\n\r\nI have updated our code to correct this."
      }
    ]
  },
  {
    "number": 926,
    "title": "Yahoo Invalid login Credentials.",
    "created_at": "2019-10-05T07:35:08Z",
    "closed_at": "2019-10-08T13:06:55Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/926",
    "body": "**Describe the bug**\r\nI have this service that connects multiple clients in a foreach to read emails and dump them in sql server. What happens is, it works fine on some and it crashes on some. I don't know what have i done wrong but i am tried of trying and does not seem to understand the problem, then i brain-stromed and the server was generating un-expected sign in emails to my account. I thought maybe it's because i am authenticating it with a third-party App i.e, the service. I created an AppPassword to make it more secure. It doesn't login and the error is Login Invalid Credentials, but when i log in to my web yahoo account it works good. Can't seem to resolve this problem. Help me out.",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/926/comments",
    "author": "msufyanr",
    "comments": [
      {
        "user": "msufyanr",
        "created_at": "2019-10-05T07:35:33Z",
        "body": "@jstedfast  please help."
      },
      {
        "user": "msufyanr",
        "created_at": "2019-10-05T07:54:32Z",
        "body": "@jstedfast  this is the stack trace.\r\n   at MailKit.Net.Imap.ImapClient.<AuthenticateAsync>d__83.MoveNext()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at MailKit.Net.Imap.ImapClient.Authenticate(Encoding encoding, ICredentials credentials, CancellationToken cancellationToken)\r\n   at MailKit.MailService.Authenticate(Encoding encoding, String userName, String password, CancellationToken cancellationToken)\r\n   at MailKit.MailService.Authenticate(String userName, String password, CancellationToken cancellationToken)"
      },
      {
        "user": "jstedfast",
        "created_at": "2019-10-05T13:12:17Z",
        "body": "You're providing credentials that the Yahoo IMAP server doesn't like.\r\n\r\nYou can get a protocol log to see if that provides a clue, but probably not...\r\n\r\n```csharp\r\nusing (var client = new ImapClient (new ProtocolLogger (\"imap.log\"))\r\n```"
      },
      {
        "user": "msufyanr",
        "created_at": "2019-10-07T09:33:06Z",
        "body": "No. I haven't changed anything from the authentication area, it connects sometime and then it throws exception sometime. I don't know why it's happening but whenever i see my service log. Most of the log events consist of invalid login credentials. When i login from the browser it works fine but after some time, it throws exception again. It might be bug living inside of the Core Authentication area. Please look into it.\r\n\r\nHere is a stack trace:\r\nException Message: \r\nLOGIN Invalid credentials\r\nStack Trace: \r\n   at MailKit.Net.Imap.ImapClient.<AuthenticateAsync>d__83.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at MailKit.Net.Imap.ImapClient.Authenticate(Encoding encoding, ICredentials credentials, CancellationToken cancellationToken)\r\n   at AutoErp.CustomerEmailDownloadManager.ImapEmailClientWrapper.DownloadEmail() in \r\n  AutoErp.CustomerEmailDownloadManager.EmailDownLoadManager.StartDownload_CustomerEmails() in \r\nException Source: \r\nMailKit "
      },
      {
        "user": "jstedfast",
        "created_at": "2019-10-07T12:16:33Z",
        "body": "Do you have the IMAP protocol log that I asked you for? Without the protocol log, there's nothing for me to look into."
      },
      {
        "user": "jstedfast",
        "created_at": "2019-10-07T20:49:23Z",
        "body": "FWIW, I have no trouble logging in to a Yahoo! Mail IMAP account using MailKit...\r\n\r\n```\r\nConnected to imaps://imap.mail.yahoo.com:993/\r\nS: * OK [CAPABILITY IMAP4rev1 SASL-IR AUTH=PLAIN AUTH=XOAUTH2 AUTH=OAUTHBEARER ID MOVE NAMESPACE XYMHIGHESTMODSEQ UIDPLUS LITERAL+ CHILDREN X-MSG-EXT OBJECTID] IMAP4rev1 Hello\r\nC: A00000000 AUTHENTICATE PLAIN XXX\r\nS: A00000000 OK AUTHENTICATE completed\r\nC: A00000001 CAPABILITY\r\nS: * CAPABILITY IMAP4rev1 ID MOVE NAMESPACE XYMHIGHESTMODSEQ UIDPLUS LITERAL+ CHILDREN X-MSG-EXT UNSELECT OBJECTID\r\nS: A00000001 OK CAPABILITY completed\r\nC: A00000002 NAMESPACE\r\nS: * NAMESPACE ((\"\" \"/\")) NIL NIL\r\nS: A00000002 OK NAMESPACE completed\r\nC: A00000003 LIST \"\" \"INBOX\"\r\nS: * LIST (\\HasChildren) \"/\" \"Inbox\"\r\nS: A00000003 OK LIST completed\r\n...\r\n```"
      },
      {
        "user": "jstedfast",
        "created_at": "2019-10-08T00:32:13Z",
        "body": "Maybe you can try creating a new Yahoo! Mail account and give me the username/password for that new account so that I can debug the issue?\r\n\r\nDoes your username or password contain non-ASCII characters? How about punctuation characters?\r\n\r\nIf you want me to look into this further, you're going to have to give me *something* to investigate. \"It doesn't work for me\" doesn't help me at all especially when it works just fine for me.\r\n"
      },
      {
        "user": "msufyanr",
        "created_at": "2019-10-08T06:11:54Z",
        "body": "Yes i do have a $ sign in some of the password but i don't think that could cause any issue because a character is a character, it must be parsed exactly and sent to the server."
      },
      {
        "user": "jstedfast",
        "created_at": "2019-10-08T11:21:44Z",
        "body": "What do you think MailKit is doing wrong if you don't think it's passing your password to the server incorrectly?"
      },
      {
        "user": "jstedfast",
        "created_at": "2019-10-08T13:06:55Z",
        "body": "You need to go into your Yahoo! Mail settings and enable \"Allow less-secure apps\".\r\n\r\nEither that or you need to start using OAuth2."
      }
    ]
  },
  {
    "number": 925,
    "title": "A certificate chain processed, but terminated in a root certificate which is not trusted by the trust provider",
    "created_at": "2019-10-04T03:14:37Z",
    "closed_at": "2019-10-04T12:45:43Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/925",
    "body": "MS exchange server(Linux) is connecting from windows client.\r\n\r\nThe ssl mechanism used for connection but there is client certificates(self-signed) is using for server validation .\r\n\r\nCertificate chain info returning always \"A certificate chain processed, but terminated in a root certificate which is not trusted by the trust provider.\\r\\n\", its whether self signed certificates installed at client trusted root or not.\r\n\r\nThanks in advance.",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/925/comments",
    "author": "dayanandm123",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2019-10-04T12:45:43Z",
        "body": "You need to provide your own `client.ServerCertificateValidationCallback` function."
      }
    ]
  },
  {
    "number": 920,
    "title": "Possible issue with Socket.BeginConnect",
    "created_at": "2019-10-01T14:08:27Z",
    "closed_at": "2019-10-02T06:30:00Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/920",
    "body": "I am using MailKit at commit SHA 26818269484b24ed3f629ce55d37f8f42528a67a\r\n\r\nI am not 100% sure this is MailKit issue\r\n\r\nWe've noticed that our SMTP thread was stuck and the logs suggest that probably SmtlClient.ConnectAsync method was blocking the thread.\r\n\r\nI was using synchronously SmtpClient.ConnectAsync(...).GetAwaiter().GetResult(). (This shouldn't deadlock because calling Thead has SynchronizationContext = null)\r\n\r\nI can see ConnectAsync is calling Socket.BeginConnect. Reading the documentation I don't see any hint about timeout for this method. Is it possible BeginConnect not to have default timeout and the code to be blocked indefinitely on BeginConnect?",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/920/comments",
    "author": "ekalchev",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2019-10-01T15:06:25Z",
        "body": "I don't think `Socket.BeginConnect` makes use of the `Socket.*Timeout` properties at all, if that is what you are asking.\r\n\r\nAfaik, BeginConnect *should* return immediately as all it does is initiate an asynchronous Connect request."
      },
      {
        "user": "ekalchev",
        "created_at": "2019-10-01T16:15:24Z",
        "body": "I am using SmtpClient.ConnectAsync(...).GetAwaiter().GetResult(). This will unblock the thread when you actually connect. My question is - if for some reason you can't connect should you get Timeout exception? Or this call will block forever? I can't see anything for timeout in Socket.BeginConnect documentation."
      },
      {
        "user": "ekalchev",
        "created_at": "2019-10-01T16:37:01Z",
        "body": "Nevermind, i ran a few tests. It seems it does timeout as you might expect. "
      },
      {
        "user": "jstedfast",
        "created_at": "2019-10-02T02:07:05Z",
        "body": "Should I close this, then? Or?"
      },
      {
        "user": "ekalchev",
        "created_at": "2019-10-02T06:30:00Z",
        "body": "Yes. If I have more information about that i'll update the issue."
      }
    ]
  },
  {
    "number": 917,
    "title": "Need option to remove sender header from message.",
    "created_at": "2019-09-26T09:32:12Z",
    "closed_at": "2019-09-26T15:19:52Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/917",
    "body": "**Is your feature request related to a problem? Please describe.**\r\nWhen I add the sender ```MailboxAddress``` it changes the MAIL FROM in the envelope but also adds a sender header. The problem is that in some email clients and in particular, Outlook, the client displays something like \"sender@domain.com on behalf of from@domain.com\" or \"Sender <sender@domain.com> on behalf of From <from@domain.com>\". This may be correct but the recipient is often left in doubt as to who the message is really from. Typically the sender is going to be used to handle NDRs programmatically using a VERP (Variable envelope return path) scheme and the alias part of the address could be a GUID.\r\n\r\n**Describe the solution you'd like**\r\nI would like an option to not add the sender header, and only change the MAIL FROM in the envelope. Perhaps adding the sender to the MimeMessage should add the header but adding it in the ```MailTransport.SendAsync``` overload does not?\r\n\r\n**Describe alternatives you've considered**\r\nThe only way I've found to get what I want so far is to extend the SmtpClient and remove the header from the ```Prepare``` method:\r\n\r\n```\r\npublic class ExtendedSmtpClient : SmtpClient\r\n{\r\n\tprotected override void Prepare(FormatOptions options, MimeMessage message, EncodingConstraint constraint, int maxLineLength)\r\n\t{\r\n\t\tmessage.Headers.Remove(HeaderId.Sender);\r\n\r\n\t\tbase.Prepare(options, message, constraint, maxLineLength);\r\n\t}\r\n}\r\n```\r\n\r\nI haven't fully tested this but I'm wondering if there's a better way you could point out to me?\r\n\r\n**Additional context**\r\nAmazon SES modifies the MAIL FROM without adding the sender header so I guess this is considered acceptable practice.\r\n\r\nPlease let me know what you think.\r\nThanks \r\nAndrew",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/917/comments",
    "author": "j055",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2019-09-26T15:19:52Z",
        "body": "Use SmtpClient.Send (message, from, recipients);"
      },
      {
        "user": "j055",
        "created_at": "2019-09-26T21:15:06Z",
        "body": "Doh! I think I tried every combination except the most obvious one! MimeKit and MailKit are outstanding libraries. Thank you."
      },
      {
        "user": "srikarbalmuri",
        "created_at": "2023-10-13T05:21:31Z",
        "body": "Is there a sample code I can use to achieve this feature I am also trying to implement verp"
      },
      {
        "user": "jstedfast",
        "created_at": "2023-10-15T14:37:36Z",
        "body": "@srikarbalmuri \r\n\r\n```csharp\r\nclient.Send (message, from, recipients);\r\n```\r\n"
      }
    ]
  },
  {
    "number": 916,
    "title": "Unable to fetch Text part for email when fetching from Folder other than Inbox",
    "created_at": "2019-09-26T06:16:30Z",
    "closed_at": "2019-09-26T15:18:32Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/916",
    "body": "**Describe the bug**\r\nDoing \r\n`client.Inbox.Fetch() => **Retrieves email with HtmlBody and TextBody**`\r\n\r\nWhereas doing -\r\n```\r\nvar mailFolder = client.GetFolder(\"Sent Items\");\r\nmailFolder.Open(FolderAccess.ReadOnly);\r\nmailFolder.Fetch() => **Retrieves only HtmlBody**\r\n```\r\n\r\nI tried with the same email in both folders. So the email isn't the issue as far as I can see. \r\n\r\nWhen I tried downloading .eml and .msg files for the email and using another library MSGReader, I am able to read the textbody. Even when using MailKit to read .eml file, I can view the textbody. (However .eml files downloaded using MailKit did not have TextBody)\r\n\r\nFurther testing revealed that doing `client.GetFolder(\"Inbox\").Fetch(...)` does not retrieve TextBody but by doing `client.Inbox.Fetch(....)`, TextBody is being retrieved.\r\n\r\n**Expected behavior**\r\nTextBody should also be retrieved when fetching from Folders other than Inbox\r\n\r\n\r\n**Environment**\r\n - Windows 10, Azure app service\r\n - Using dotnet core 2.2 to access outlook.office365.com server using IMAP protocol",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/916/comments",
    "author": "arunnav",
    "comments": [
      {
        "user": "arunnav",
        "created_at": "2019-09-26T06:25:00Z",
        "body": "I've tried using the HtmlTokenizer to parse out Html but it isn't entirely accurate and I would prefer not to use it if I can avoid it. \r\nAlso tried traversing the Message structure, but the text/plain part is not there at all if the message was not fetched from the Inbox."
      },
      {
        "user": "jstedfast",
        "created_at": "2019-09-26T15:18:32Z",
        "body": "Do you think that, perhaps, the exact arguments that you are passing to the Fetch() method might be pertinent information? Or no?"
      },
      {
        "user": "arunnav",
        "created_at": "2019-09-26T15:50:15Z",
        "body": "I tried \r\n- mailFolder.Fetch(0, -1, MessageSummaryItems.Body | MessageSummaryItems.BodyStructure),\r\n- mailFolder.Fetch(0, -1, MessageSummaryItems.All)\r\n\r\nmailFolder.GetMessage(<uid of message>) also returns MimeMessage with no TextPart"
      }
    ]
  },
  {
    "number": 909,
    "title": "install mailkit 2.3.0 without nuget 2.12",
    "created_at": "2019-09-11T14:11:54Z",
    "closed_at": "2019-09-11T14:18:13Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/909",
    "body": "hello. is it even possible to install libraries without nuget? I use VS 2010, but would like to run mailkit 2.3.0 which can only be installed if nuget 2.12 is installed, and since I'm a fool, I can't install nuget 2.12 on VS 2010. thanks for future reply",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/909/comments",
    "author": "NerzOff",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2019-09-11T14:17:57Z",
        "body": "NuGet packages are really just *.zip files with the extension changed to .nupkg. You could download the packages manually, rename the files, and then unzip and look inside to find the correct assembly (`lib/net45/MailKit.dll` and `lib/net45/MimeKit.dll` from the MimeKit nuget package)."
      }
    ]
  },
  {
    "number": 908,
    "title": "The IMAP server did not return the requested message. Office365",
    "created_at": "2019-09-10T19:26:38Z",
    "closed_at": "2019-09-10T21:15:40Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/908",
    "body": "We've experienced the following problem:\r\n\r\n```\r\nMailKit.MessageNotFoundException: The IMAP server did not return the requested message.\r\n   at MailKit.Net.Imap.ImapFolder.GetMessageAsync(UniqueId uid, Boolean doAsync, CancellationToken cancellationToken, ITransferProgress progress)\r\n```\r\n\r\nExamples from protocol log:\r\n```\r\nConnected to imaps://outlook.office365.com:993/     \r\nS: * OK The Microsoft Exchange IMAP4 service is ready. [TABPADIAUAAyADYANQBDAEEAMAAzADcANwAuAEcAQgBSAFAAMgA2ADUALgBQAFIATwBEAC4ATwBVAFQATABPAE8ASwAuAEMATwBNAA==]     \r\nC: J00000000 CAPABILITY     \r\nS: * CAPABILITY IMAP4 IMAP4rev1 AUTH=PLAIN AUTH=XOAUTH2 SASL-IR UIDPLUS ID UNSELECT CHILDREN IDLE NAMESPACE LITERAL+     \r\nS: J00000000 OK CAPABILITY completed.     \r\nC: J00000001 AUTHENTICATE PLAIN AHN5c3RlbS5vcHRpY0Bpc3Mtc2hpcHBpbmcuY29tXGNscy56ZWFib3JuQGlzcy1zaGlwcGluZy5jb20AVElYNEdaOndFQkRPIWFK     \r\nS: J00000001 NO AUTHENTICATE failed.     \r\nC: J00000002 ****** LOGIN INFORMATION HIDEN ****** completed.     \r\nC: J00000003 CAPABILITY     \r\nS: * CAPABILITY IMAP4 IMAP4rev1 AUTH=PLAIN AUTH=XOAUTH2 SASL-IR UIDPLUS MOVE ID UNSELECT CLIENTACCESSRULES CLIENTNETWORKPRESENCELOCATION BACKENDAUTHENTICATE CHILDREN IDLE NAMESPACE LITERAL+     \r\nS: J00000003 OK CAPABILITY completed.     \r\nC: J00000004 NAMESPACE     \r\nS: * NAMESPACE ((\"\" \"/\")) NIL NIL     \r\nS: J00000004 OK NAMESPACE completed.     \r\nC: J00000005 LIST \"\" \"INBOX\"     \r\nS: * LIST (\\Marked \\HasNoChildren) \"/\" INBOX     \r\nS: J00000005 OK LIST completed.    \r\nC: J00000006 SELECT INBOX     \r\nS: * 3 EXISTS     \r\nS: * 1 RECENT     \r\nS: * FLAGS (\\Seen \\Answered \\Flagged \\Deleted \\Draft $MDNSent)     \r\nS: * OK [PERMANENTFLAGS (\\Seen \\Answered \\Flagged \\Deleted \\Draft $MDNSent)] Permanent flags     \r\nS: * OK [UNSEEN 1] Is the first unseen message     \r\nS: * OK [UIDVALIDITY 14] UIDVALIDITY value     \r\nS: * OK [UIDNEXT 7294] The next unique identifier value    \r\nS: J00000006 OK [READ-WRITE] SELECT completed.     \r\nC: J00000007 UID FETCH 7287:7287 (UID INTERNALDATE ENVELOPE BODYSTRUCTURE BODY.PEEK[HEADER.FIELDS (REFERENCES)])     \r\nS: J00000007 OK FETCH completed.     \r\nC: J00000008 UID FETCH 7287 (BODY.PEEK[])     \r\nS: J00000008 OK FETCH completed.     \r\nC: J00000009 LOGOUT     \r\nS: * BYE Microsoft Exchange Server IMAP4 server signing off.     \r\nS: J00000009 OK LOGOUT completed.\r\n```\r\nIt happens only with some particular messages and seems to be persistent for such messages (retries didn't help). Could you please advise what the problem could be?\r\n\r\nMailKit version is v2.1.5.1\r\n\r\nThanks,\r\nAlex\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/908/comments",
    "author": "J-McElroy",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2019-09-10T20:57:11Z",
        "body": "Looks like the message doesn't exist. Is there a reason that you think it does?"
      },
      {
        "user": "J-McElroy",
        "created_at": "2019-09-10T21:08:07Z",
        "body": "Yes, it was successfully moved to another folder after all failed attempts to retrieve it"
      },
      {
        "user": "jstedfast",
        "created_at": "2019-09-10T21:15:40Z",
        "body": "Bug in Exchange server? I don't know but MailKit is making the request and the server is responding with an empty reply according to your log."
      },
      {
        "user": "syjaliha",
        "created_at": "2023-05-25T09:54:14Z",
        "body": "i'm also Getting this error\r\nThe IMAP server did not return the requested message.\r\n\r\nStackTrace\r\n   at MailKit.Net.Imap.ImapFolder.<GetMessageAsync>d__234.MoveNext()\r\n    \r\n   Code \r\n   for (int i = inbox.Count - 1; i >= 0; i--)\r\n                    {\r\n                        var message = inbox.GetMessage(i); // here it goes in exception\r\n                        }\r\n                        \r\n                        "
      },
      {
        "user": "jstedfast",
        "created_at": "2023-05-25T10:39:32Z",
        "body": "That's a server bug that MailKit cannot do anything about "
      },
      {
        "user": "syjaliha",
        "created_at": "2023-05-25T13:45:40Z",
        "body": "> That's a server bug that MailKit cannot do anything about\r\n\r\noky."
      },
      {
        "user": "syjaliha",
        "created_at": "2023-05-25T13:47:19Z",
        "body": "> That's a server bug that MailKit cannot do anything about\r\n\r\nIs there any Other way to Handle this?"
      },
      {
        "user": "jstedfast",
        "created_at": "2023-05-25T13:49:14Z",
        "body": "catch the exception and then move on to the next message?"
      },
      {
        "user": "syjaliha",
        "created_at": "2023-05-25T13:52:45Z",
        "body": "I did But now all messages are going under the Exception ie is from 1st message to last one it gives => The IMAP server did not return the requested message error\r\n"
      },
      {
        "user": "syjaliha",
        "created_at": "2023-05-25T13:53:22Z",
        "body": " try\r\n                        {\r\n                            var message = inbox.GetMessage(i);\r\n}\r\n catch (MessageNotFoundException ex)\r\n                        {\r\n                            Console.WriteLine($\"Message not found at index {i}. Skipping to the next index.\");\r\n                            // Handle the exception appropriately, such as logging or taking alternative actions.\r\n                            continue; // Move to the next iteration of the loop\r\n                        }"
      },
      {
        "user": "jstedfast",
        "created_at": "2023-05-25T15:06:06Z",
        "body": "Try getting a protocol log to see what the server is responding with and I'll take a look, but it's probably just the IMAP server being broken and not sending the message content.\r\n\r\n```csharp\r\nusing var client = new ImapClient (new ProtocolLogger ('imap.log\"));\r\n```"
      },
      {
        "user": "sandraInterad",
        "created_at": "2023-07-10T11:15:57Z",
        "body": "Any progress on this issue? I started to get the same error three weeks ago.\r\n\r\nThe logs look the same as of @J-McElroy:\r\n```\r\nC: E00000007 UID FETCH 1404714 (BODY.PEEK[])\r\nS: E00000007 OK FETCH completed.\r\n```\r\nWhereas a successful log looks something like this:\r\n```\r\nC: F00000007 UID FETCH 1405346 (BODY.PEEK[])\r\nS: * 2992 FETCH (BODY[] {1147464}\r\nS: Received: from PA4PR01MB7225.eurprd03.prod.outlook.com (2603:10a6:102:10b::16)\r\nS:  by DBBPR02MB6908.eurprd03.prod.outlook.com with HTTPS; Mon, 10 Jul 2023\r\nS:  07:06:14 +0000\r\nS: ARC-Seal: i=2; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=pass;\r\n....\r\n```"
      },
      {
        "user": "jstedfast",
        "created_at": "2023-07-10T14:28:30Z",
        "body": "That's a server bug for sure."
      }
    ]
  },
  {
    "number": 907,
    "title": "FetchAsync is not loading list of UniqueIds",
    "created_at": "2019-09-10T16:08:06Z",
    "closed_at": "2019-09-10T16:15:00Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/907",
    "body": "**Describe the bug**\r\n\r\nI'm attempting to load recent messages from a given folder, in this case a user's inbox.  I get a list of unique ids using `folder.SortAsync()` then take that list and call `folder.FetchAsync()`.  `SortAsync` is returning 199 UniqueId values.  When I call fetch, no records are returned.\r\n\r\nHowever, if I request a single UniqueId at a time, it works.  I assume the IMAP server does not support ranges.\r\n\r\nIs there a capability I can look at the determine this behavior?  Also, is there a way to request that Fetch not use ranges?\r\n\r\nUsing MailKit 2.3.0\r\n\r\n**Expected behavior**\r\nI'd expect `FetchAsync` to return the 199 messages.\r\n\r\n**Additional context**\r\n<details><summary>Output from Imap Protocol Logger</summary>\r\n<pre>\r\nS: A00000000 OK [CAPABILITY IMAP4REV1 LITERAL+ UTF8=ALL STARTTLS IDLE NAMESPACE UNSELECT SORT QUOTA ID] User [redacted] authenticated\r\nC: A00000001 NAMESPACE\r\nS: * NAMESPACE ((\"\" \"/\")) NIL NIL\r\nS: A00000001 OK NAMESPACE completed\r\nC: A00000002 LIST \"\" \"INBOX\"\r\nS: * LIST (\\NoInferiors) NIL INBOX\r\nS: A00000002 OK LIST completed\r\nC: A00000003 LIST \"\" \"%\"\r\nS: * LIST (\\NoInferiors) NIL INBOX\r\nS: * LIST (\\Marked) \"/\" mail/SPAM.incoming\r\nS: * LIST (\\UnMarked) \"/\" mail/drafts\r\nS: * LIST (\\UnMarked) \"/\" mail/sent-mail\r\nS: * LIST (\\UnMarked) \"/\" mail/trash\r\nS: * LIST (\\UnMarked) \"/\" \"Junk E-mail\"\r\nS: * LIST (\\UnMarked) \"/\" \"Sent Items\"\r\nS: * LIST (\\UnMarked) \"/\" \"Deleted Items\"\r\nS: * LIST (\\UnMarked) \"/\" Drafts\r\nS: A00000003 OK LIST completed\r\nC: A00000004 LIST \"\" mail\r\nS: A00000004 OK LIST completed\r\nC: A00000005 EXAMINE INBOX\r\nS: * 199 EXISTS\r\nS: * 2 RECENT\r\nS: * OK [UIDVALIDITY 1279810762] UID validity status\r\nS: * OK [UIDNEXT 38448] Predicted next UID\r\nS: * FLAGS (\\Answered \\Flagged \\Deleted \\Draft \\Seen)\r\nS: * OK [PERMANENTFLAGS ()] Permanent flags\r\nS: * OK [UNSEEN 198] first unseen message in mailbox\r\nS: A00000005 OK [READ-ONLY] EXAMINE completed\r\nC: A00000006 UID SORT (REVERSE ARRIVAL) US-ASCII ALL\r\nS: * SORT 38447 38446 38445 38444 38443 38442 38441 38440 38439 38438 38437 38436 38435 38434 38433 38432 38431 38430 38429 38428 38427 38426 38425 38424 38423 38422 38421 38420 38419 38418 38417 38416 38415 38414 38413 38412 38411 38410 38409 38408 38407 38406 38405 38404 38403 38402 38401 38400 38399 38398 38397 38396 38395 38394 38393 38392 38391 38390 38389 38388 38387 38386 38385 38384 38383 38382 38381 38380 38379 38378 38377 38376 38375 38374 38373 38372 38371 38370 38369 38368 38367 38366 38365 38364 38363 38362 38361 38360 38359 38358 38357 38356 38355 38354 38353 38352 38351 38350 38349 38348 38347 38346 38345 38344 38343 38342 38341 38340 38339 38338 38337 38336 38335 38334 38333 38332 38331 38330 38329 38328 38327 38326 38325 38324 38323 38322 38321 38320 38319 38318 38317 38316 38315 38314 38313 38312 38311 38310 38309 38308 38307 38306 38305 38304 38303 38302 38301 38300 38299 38298 38297 38296 38295 38294 38293 38292 38291 38290 38289 38288 38287 38286 38285 38284 38283 38282 38281 38280 38279 38278 38277 38276 38275 38274 38273 38272 38271 38270 38269 38268 38267 38266 38265 38264 38263 38262 38261 38260 38259 38258 38257 38256 38255 38254 38253 38252 38251 38250 38249\r\nS: A00000006 OK UID SORT completed\r\nC: A00000007 UID FETCH 38447:38348 BODY.PEEK[HEADER.FIELDS (TO FROM MESSAGE-ID DATE DELIVERY-DATE SUBJECT REFERENCES IN-REPLY-TO)]\r\nS: A00000007 OK UID FETCH completed\r\n</pre>\r\n</details>\r\n\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/907/comments",
    "author": "rgmills",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2019-09-10T16:15:00Z",
        "body": "The problem seems to be a bug in your IMAP server which cannot handle UIDs in descending order.\r\n\r\nSolution:\r\n\r\n```csharp\r\nvar uids = folder.Search (SearchQuery.All);\r\nvar results = folder.Fetch (uids, ...);\r\nresults.Sort (new OrderBy[] { OrderBy.ReverseArrival });\r\n```"
      },
      {
        "user": "rgmills",
        "created_at": "2019-09-10T16:21:19Z",
        "body": "You're a damned wizard.  Thanks, Jeffrey!"
      },
      {
        "user": "jstedfast",
        "created_at": "2019-09-10T16:49:30Z",
        "body": "No problem :-)"
      },
      {
        "user": "jstedfast",
        "created_at": "2019-09-10T16:53:29Z",
        "body": "On second thought, what IMAP server is this? Do you have the greeting message from the log file?\r\n\r\nI'm wondering if maybe I can start compiling a list of servers that this doesn't work on and add a work-around for.\r\n"
      },
      {
        "user": "rgmills",
        "created_at": "2019-09-10T17:00:44Z",
        "body": "Unsure who the actual author of the IMAP server software is.\r\n\r\nDoes this give you enough information?  Or do you need the hostnames as well?\r\n\r\n```\r\nS: * OK [CAPABILITY IMAP4REV1 LITERAL+ UTF8=ALL STARTTLS SASL-IR AUTH=LOGIN ID] mail37c25 IMAP4rev1 Bigfoot\r\n```\r\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2019-09-10T17:26:07Z",
        "body": "Thanks! That might be good enough. Perhaps the IMAP server is called Bigfoot. I'll have to do some web searching later to see.\r\n\r\nI generally prefer to try and use the info in the line you gave me than hostnames to do this sort of work-around.\r\n"
      }
    ]
  },
  {
    "number": 903,
    "title": "MailKit 2.3.0 - client.Inbox.AddFlags leads to timeout",
    "created_at": "2019-09-02T09:28:51Z",
    "closed_at": "2019-09-02T12:48:51Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/903",
    "body": "Hi,\r\nI try to mark an IMAP-Message \"Seen\". At calling client.Inbox.AddFlags(uid, MessageFlags.Seen, false) an exception is thrown after a timeout of approx. 2mins.\r\n\r\nStrack-Trace:\r\nSystem.IO.IOException: A connection try has failed, as the other side hasn't responded after a certain time span or the established connection was faulty, as the connected host didn't reacted. ---> System.Net.Sockets.SocketException: A connection try has failed, as the other side hasn't responded after a certain time span or the established connection was faulty, as the connected host didn't reacted.\r\n   bei System.Net.Sockets.Socket.Receive(Byte[] buffer, Int32 offset, Int32 size, SocketFlags socketFlags)\r\n   bei MailKit.Net.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)\r\n   --- Ende der internen Ausnahmestapelüberwachung ---\r\n   bei MailKit.Net.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)\r\n   bei System.Net.FixedSizeReader.ReadPacket(Byte[] buffer, Int32 offset, Int32 count)\r\n   bei System.Net.Security._SslStream.StartFrameHeader(Byte[] buffer, Int32 offset, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   bei System.Net.Security._SslStream.StartReading(Byte[] buffer, Int32 offset, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   bei System.Net.Security._SslStream.ProcessRead(Byte[] buffer, Int32 offset, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   bei System.Net.Security.SslStream.Read(Byte[] buffer, Int32 offset, Int32 count)\r\n   bei MailKit.Net.Imap.ImapStream.<ReadAheadAsync>d__59.MoveNext()\r\n--- Ende der Stapelüberwachung vom vorhergehenden Ort, an dem die Ausnahme ausgelöst wurde ---\r\n   bei System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   bei System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   bei MailKit.Net.Imap.ImapStream.<ReadTokenAsync>d__74.MoveNext()\r\n--- Ende der Stapelüberwachung vom vorhergehenden Ort, an dem die Ausnahme ausgelöst wurde ---\r\n   bei System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   bei System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   bei System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   bei MailKit.Net.Imap.ImapCommand.<StepAsync>d__83.MoveNext()\r\n--- Ende der Stapelüberwachung vom vorhergehenden Ort, an dem die Ausnahme ausgelöst wurde ---\r\n   bei System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   bei System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   bei MailKit.Net.Imap.ImapEngine.<IterateAsync>d__170.MoveNext()\r\n--- Ende der Stapelüberwachung vom vorhergehenden Ort, an dem die Ausnahme ausgelöst wurde ---\r\n   bei System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   bei System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   bei MailKit.Net.Imap.ImapEngine.<RunAsync>d__171.MoveNext()\r\n--- Ende der Stapelüberwachung vom vorhergehenden Ort, an dem die Ausnahme ausgelöst wurde ---\r\n   bei System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   bei System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   bei MailKit.Net.Imap.ImapFolder.<ModifyFlagsAsync>d__298.MoveNext()\r\n--- Ende der Stapelüberwachung vom vorhergehenden Ort, an dem die Ausnahme ausgelöst wurde ---\r\n   bei System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   bei System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   bei MailKit.Net.Imap.ImapFolder.AddFlags(IList`1 uids, MessageFlags flags, HashSet`1 keywords, Boolean silent, CancellationToken cancellationToken)\r\n   bei MailKit.MailFolder.AddFlags(IList`1 uids, MessageFlags flags, Boolean silent, CancellationToken cancellationToken)\r\n   bei MailKit.MailFolder.AddFlags(UniqueId uid, MessageFlags flags, Boolean silent, CancellationToken cancellationToken)\r\n   bei progName.ImapEngine.markAsRead(UniqueId uid) in C:\\VisualStudioProjects\\....\\ImapEngine.cs:Zeile 302.\r\n\r\nThe Imap-Protocol has this output:\r\nS: A00000010 OK FETCH completed.\r\nC: A00000011 UID STORE 8209 +FLAGS (\\Seen)\r\nS: * 8209 FETCH (FLAGS (\\Seen) UID 8209)\r\nS: A00000011 OK\r\n--> Timeout\r\n\r\nSo the server is responding with \"A00000011 OK\". After that the exception/timeout occurs.\r\nThanks for your advice!\r\n\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/903/comments",
    "author": "RiCruiser",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2019-09-02T12:48:51Z",
        "body": "Looks like the response never completed.\r\n\r\nBased on the FETCH response, the server appears to send `\"${TAG} OK ${COMMAND} completed.\\r\\n\"`, but in the case of the STORE command, it only sent `\"${TAG} OK\"`.\r\n\r\nSince MailKit is still trying to read from the socket, it tells me that MailKit never got the `\\r\\n` that ends the response and the above response pattern also suggests that the server never sent `\\r\\n`.\r\n\r\nIf this happens every time, I would recommend filing a bug against the server.\r\n\r\nIf this only happened once, then it may just be that the connection was lost or the server software crashed or something before it managed to fully respond."
      }
    ]
  },
  {
    "number": 900,
    "title": "Continuiously wait for new messages ImapIdle",
    "created_at": "2019-09-01T02:27:26Z",
    "closed_at": "2019-09-01T11:49:52Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/900",
    "body": "Hello, this might be a rather stupid question, but i am trying to make an Idle Imap that will run on a separate thread, fetch emails as they come in and add needed data from the received message body to a list, the list will be used by Tasks running in the background.\r\nI have used the ImapIdle.cs sample as my code base, but i am having trouble understanding how to operate with the Cancellation token.\r\nHow do i properly wait for messages to arrive, exit out of the Idle loop, handle the folder messages, and re-enter idle loop upon completion? \r\n\r\nI added some code to show what i have attempted so far\r\ni pretty much just made the cancellation token global and create a task that will fetch messages.\r\nAfter some tweaking, i tried to simply restart the idle thread after cancelling the token, but it i get an error saying that the thread can not be restart.\r\n\r\n```csharp\r\n        public void Start()\r\n        {\r\n            var client = new ImapClient(new ProtocolLogger(Console.OpenStandardError()))\r\n            {\r\n                ServerCertificateValidationCallback = (sender, certificate, chain, sslPolicyErrors) => true\r\n            };\r\n\r\n            \r\n            client.Connect(\"redacted\", 993, true);\r\n            client.Authenticate(\"redacted\", \"redacted\");\r\n\r\n            client.Inbox.Open(FolderAccess.ReadWrite);\r\n\r\n            CancellationTokenSource done = new CancellationTokenSource();\r\n\r\n            var messages = client.Inbox.Fetch(0, -1, MessageSummaryItems.Full | MessageSummaryItems.UniqueId).ToList();\r\n            client.Inbox.MessageExpunged += (sender, e) =>\r\n            {\r\n            };\r\n            var thread = new Thread(IdleLoop);\r\n            thread.Start(new IdleState(client, done.Token));\r\n            client.Inbox.CountChanged += (sender, e) =>\r\n            {\r\n                done.Cancel();\r\n            };\r\n\r\n            thread.Join();\r\n            foreach (var message in client.Inbox.Fetch(0, -1,\r\n                MessageSummaryItems.Full | MessageSummaryItems.UniqueId))\r\n                Console.WriteLine(\"Subject: {0}\", message.Envelope.Subject);\r\n            thread.Start(new IdleState(client, done.Token));\r\n        }\r\n```\r\n\r\nMade another edit, this time i made it work, but i can already see how many flaws there are.\r\n1. Reconnecting is made hard\r\n2.Race conditions when it comes to the cancellation token.\r\nHow can i polish it to make it as clean as possible?\r\n\r\n```csharp\r\n        public void Initialise()\r\n        {\r\n            var client = new ImapClient(new ProtocolLogger(Console.OpenStandardError()))\r\n            {\r\n                ServerCertificateValidationCallback = (sender, certificate, chain, sslPolicyErrors) => true\r\n            };\r\n\r\n            \r\n            client.Connect(\"redacted\", 993, true);\r\n            client.Authenticate(\"redacted\", \"redacted\");\r\n\r\n            client.Inbox.Open(FolderAccess.ReadWrite);\r\n\r\n            \r\n            CancellationTokenSource done = new CancellationTokenSource(); //getting a token\r\n            var thread = new Thread(IdleLoop); // starting initial idle loop\r\n            thread.Start(new IdleState(client, done.Token));\r\n            \r\n\r\n            client.Inbox.MessageExpunged += (sender, e) =>\r\n            {\r\n            };\r\n\r\n            client.Inbox.CountChanged += (sender, e) =>\r\n            {\r\n                done.Cancel(); //canceling token\r\n            };\r\n\r\n            while (true) //this loop will wait for thread to finish, print out new messages, and create a new token + thread variable\r\n            {\r\n                thread.Join();\r\n                foreach (var message in client.Inbox.Fetch(0, -1,\r\n                    MessageSummaryItems.Full | MessageSummaryItems.UniqueId))\r\n                {\r\n                    Console.WriteLine(\"Subject: {0}\", message.Envelope.Subject);\r\n                }\r\n                thread = new Thread(IdleLoop);\r\n                done = new CancellationTokenSource();\r\n                thread.Start(new IdleState(client, done.Token));\r\n            }\r\n        }\r\n```",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/900/comments",
    "author": "TricksterJoe",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2019-09-01T11:49:52Z",
        "body": "Your second implementation has a few issues. One of the things you need to keep in mind when using anonymous delegates is that the variables that you capture when creating those delegates are snapshots in time.\r\n\r\nIn other words, in your second implementation, the `done` token source is a snapshot of the first instance. It doesn't get updated when you create new CancellationTokenSources later, so your `CountChanged` event handler will continue to cancel the very first instance over and over again.\r\n\r\nYou need to make the `done` token source truly global (or, at least, global to a class that this code is all part of).\r\n\r\nTo handle reconnections, that's easy.\r\n\r\nJust have a method that checks that the client is connected/authenticated, and if not, reconnects/re-authenticates.\r\n\r\n```csharp\r\nvoid ReconnectIfNeeded ()\r\n{\r\n    if (!client.IsConnected)\r\n        client.Connect (\"host\", 993, true);\r\n\r\n    if (!client.IsAuthenticated)\r\n        client.Authenticate (\"username\", \"password\");\r\n}\r\n```\r\n\r\nThen, to use it, do this:\r\n\r\n```csharp\r\nIList<IMessageSummary> fetched;\r\n\r\ndo {\r\n    try {\r\n        fetched = client.Inbox.Fetch (0, -1, MessageSummaryItems.Full | MessageSummaryItems.UniqueId);\r\n        break;\r\n    } catch (ImapProtocolException) {\r\n        ReconnectIfNeeded ();\r\n    } catch (IOException) {\r\n        ReconnectIfNeeded ();\r\n    }\r\n} while (true);\r\n\r\nforeach (var message in fetched) {\r\n    Console.WriteLine(\"Subject: {0}\", message.Envelope.Subject);\r\n}\r\n```"
      },
      {
        "user": "jstedfast",
        "created_at": "2019-09-01T15:24:07Z",
        "body": "I rewrote the ImapIdle sample so that it handles reconnecting, etc.\r\n\r\nIt also uses the Async methods now instead of spawning threads and using the old Sync API."
      }
    ]
  },
  {
    "number": 899,
    "title": "Attachment file size showing higher than the actual size",
    "created_at": "2019-08-30T15:20:07Z",
    "closed_at": "2019-08-30T16:05:58Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/899",
    "body": "Hi,\r\nI am trying to check the attachments size before downloading the complete message. For this I have used the MessageSummaryItems.BodyStructure while Fetching the items from inbox. As follows.\r\n\r\n```csharp\r\nvar items = folder.Fetch (ids, MessageSummaryItems.BodyStructure | MessageSummaryItems.UniqueId);\r\nforeach (var item in items) {\r\n    foreach (var attachment in item.Attachments) {\r\n        // 'octets' is just a fancy word for \"number of bytes\"\r\n        var size = attachment.Octets;\r\n\tlog.Info(size);\r\n    }\r\n}\r\n```\r\n\r\nBut, looking at the log, it shows the file size as more than the actual file size. Log comes as follows.\r\n\r\nFound 2 attachments with the mail (UniqueID:5533)\r\nIndividual attachment size for message:5533 is :: 3427408\r\nIndividual attachment size for message:5533 is :: 2875804\r\nTotal size of attachment for message:5533 is 6303212\r\n\r\nBut the actual file size in File Properties shows as 2504642 and 2101546 respectively.\r\n\r\nCan you please help me understand why the size shows more than the actual size when we download it from the email? If this is an expected behavior, is there a way to get the actual file size before downloading the attachments?\r\n\r\nMy requirement is to put a limit on the email attachment size, and ignore those emails if the size is above the limit.",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/899/comments",
    "author": "kbchowdary",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2019-08-30T16:05:58Z",
        "body": "You're confusing attachment size with file size after decoding the attachment content. They are 2 different things.\r\n\r\nThere's no way to get what the decoded content size will be.\r\n\r\nThe best you can do is approximate it, knowing that if the ContentTransferEncoding is \"base64\", you can multiply it by 0.75, but that doesn't account for the MIME headers nor the fact that base64 content gets line-wrapped.\r\n\r\nThat's about the best you can do."
      },
      {
        "user": "kbchowdary",
        "created_at": "2019-08-30T17:13:12Z",
        "body": "Ok thank you for the response. I understood now."
      }
    ]
  },
  {
    "number": 898,
    "title": "The IMAP server has unexpectedly disconnected. Office365",
    "created_at": "2019-08-30T12:30:15Z",
    "closed_at": "2019-08-30T13:34:42Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/898",
    "body": "We've been receiving huge number of errors with the following description starting from August 26th:\r\n```\r\nMailKit.Net.Imap.ImapProtocolException: The IMAP server has unexpectedly disconnected.\r\n   at MailKit.Net.Imap.ImapStream.ReadAheadAsync(Int32 atleast, Boolean doAsync, CancellationToken cancellationToken)\r\n   at MailKit.Net.Imap.ImapStream.ReadTokenAsync(String specials, Boolean doAsync, CancellationToken cancellationToken)\r\n   at MailKit.Net.Imap.ImapCommand.StepAsync(Boolean doAsync)\r\n   at MailKit.Net.Imap.ImapEngine.IterateAsync(Boolean doAsync)\r\n   at MailKit.Net.Imap.ImapEngine.RunAsync(ImapCommand ic, Boolean doAsync)\r\n   at MailKit.Net.Imap.ImapClient.AuthenticateAsync(Encoding encoding, ICredentials credentials, Boolean doAsync, CancellationToken cancellationToken)\r\n```\r\n\r\nExamples from protocol log:\r\n1) IMAP Protocol Log:\r\n\r\n```\r\nConnected to imaps://outlook.office365.com:993/\r\nS: * OK The Microsoft Exchange IMAP4 service is ready. [TABOAFgAUAAyADYANQBDAEEAMAAwADkANQAuAEcAQgBSAFAAMgA2ADUALgBQAFIATwBEAC4ATwBVAFQATABPAE8ASwAuAEMATwBNAA==]\r\nC: L00000000 CAPABILITY\r\nS: * CAPABILITY IMAP4 IMAP4rev1 AUTH=PLAIN AUTH=XOAUTH2 SASL-IR UIDPLUS ID UNSELECT CHILDREN IDLE NAMESPACE LITERAL+\r\nS: L00000000 OK CAPABILITY completed.\r\nC: L00000001 AUTHENTICATE PLAIN XXXXX\r\nS: L00000001 NO AUTHENTICATE failed.\r\nC: L00000002 LOGIN \"account@domain.com\\\\mailbox@domain.com\" password\r\n```\r\n\r\n2)\r\n```\r\nConnected to imaps://outlook.office365.com:993/\r\nS: * OK The Microsoft Exchange IMAP4 service is ready. [TABPADIAUAAyADYANQBDAEEAMAAyADMAOAAuAEcAQgBSAFAAMgA2ADUALgBQAFIATwBEAC4ATwBVAFQATABPAE8ASwAuAEMATwBNAA==]\r\nC: Q00000000 CAPABILITY\r\nS: * CAPABILITY IMAP4 IMAP4rev1 AUTH=PLAIN AUTH=XOAUTH2 SASL-IR UIDPLUS ID UNSELECT CHILDREN IDLE NAMESPACE LITERAL+\r\nS: Q00000000 OK CAPABILITY completed.\r\nC: Q00000001 AUTHENTICATE PLAIN XXXXX\r\n```\r\n\r\nIs it somehow related to Mailkit? Or is it the problem on Office365 side?\r\n\r\nMailKit version is v2.1.5.1\r\n\r\nThanks,\r\nAlex",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/898/comments",
    "author": "J-McElroy",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2019-08-30T13:34:42Z",
        "body": "The problem is that you lost your connection to the server because either the server disconnected you or your network connection went down.\r\n\r\nI get this question a lot (at least twice a week), so maybe I need to write a FAQ entry about this...\r\n\r\nNetwork connections drop. It's inevitable. They drop all the time for all manner of reasons. They are just not reliable no matter how fast your network connection is, no matter how fast your computer is, no matter what OS and/or other software you are using.\r\n\r\nWhen you are writing software that makes use of internet connections, you need to build robustness into your software to handle unexpected disconnects. You *will* hit them and when you do, you need to reconnect and try again. Some software will employ a \"backoff\" strategy where it will reconnect immediately after the first unexpected disconnection and then if that retry fails, wait a few seconds before trying again. If that also fails, exponentially increase that delay (until it reaches some reasonable upper threshold) and keep trying in a loop until it is finally successful and/or prompt the user whether it should even bother trying anymore.\r\n"
      }
    ]
  },
  {
    "number": 897,
    "title": "Remove Keyword Junk not working",
    "created_at": "2019-08-28T15:23:55Z",
    "closed_at": "2019-08-28T16:36:23Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/897",
    "body": "Hello\r\n\r\nI try to enable mark/unmark Junk in my Mailkit implementation in VB.NET\r\n\r\nWhile adding of \"Junk\" is working really fine, removing does simply not work as I checked in IMAP providers webmail\r\n\r\nMy code looks like:\r\n\r\n`Dim myHashSet As New HashSet(Of String)\r\nmyHashSet.Add(pFlag) //i.e. pFlag = Junk`\r\n\r\nfor adding: \r\n`pImapFolder.ImapFolder.AddFlags(New UniqueId(pUID), MessageFlags.None, myHashSet, True)`\r\n\r\nfor removing: \r\n`pImapFolder.ImapFolder.RemoveFlags(New UniqueId(pUID), MessageFlags.None, myHashSet, true)`\r\n\r\nLog of removing:\r\nS: A00000088 OK [READ-WRITE] Select completed (0.000 + 0.000 secs).\r\nC: A00000089 UID STORE 170 -FLAGS.SILENT (Junk)\r\nS: * FLAGS (\\Answered \\Flagged \\Deleted \\Seen \\Draft Junk)\r\nS: * OK [PERMANENTFLAGS (\\Answered \\Flagged \\Deleted \\Seen \\Draft Junk \\*)] Flags permitted.\r\nS: A00000089 OK Store completed (0.001 + 0.000 secs).\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/897/comments",
    "author": "DannyWave",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2019-08-28T16:36:23Z",
        "body": "This appears to be a bug in your IMAP server because the following command is correct:\r\n\r\n```\r\nA00000089 UID STORE 170 -FLAGS.SILENT (Junk)\r\n```\r\n\r\nWhat happens if you try `SetFlags()`?\r\n\r\nYou could change your code to get the current state of the flags of the message (using the results of a prior `Fetch()` request) and then do:\r\n\r\n```csharp\r\nsummary.Keywords.Remove (\"Junk\");\r\nSetFlags (uid, summary.Flags.Value, summary.Keywords, true);\r\n```\r\n"
      }
    ]
  },
  {
    "number": 894,
    "title": "Allow replacing of the To header without updating the Rcpt To.",
    "created_at": "2019-08-19T22:52:32Z",
    "closed_at": "2019-08-20T01:24:15Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/894",
    "body": "I want to use your code to send emails directly to smtp servers. If their are multiple domains that this email needs to go to I don't want the recipient added to the RCPT To header if it does not apply to that server. \r\n\r\nPlease allow a flag when adding the email, that will not send it to the server as a recipient but still list it in the TO header, or allow me to have some sort of header override the TO header either through inheritance or through some sort of replace call to that header, that won't add those emails to recipients.",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/894/comments",
    "author": "Vizeo",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2019-08-20T01:24:15Z",
        "body": "Use the Send or SendAsync method that takes an explicit list of MailboxAddresses to send the message to."
      },
      {
        "user": "Vizeo",
        "created_at": "2019-08-20T01:30:05Z",
        "body": "Does that not also add those recipients to the TO header? I see no indication that it does not."
      },
      {
        "user": "jstedfast",
        "created_at": "2019-08-20T02:06:59Z",
        "body": "It does not. The SmtpClient does not add any headers to the MimeMessage."
      }
    ]
  },
  {
    "number": 890,
    "title": "Hey. Are there plans to support kerberos?",
    "created_at": "2019-08-04T16:05:46Z",
    "closed_at": "2019-08-04T18:06:18Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/890",
    "body": "Hey. Are there plans to support kerberos ?",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/890/comments",
    "author": "offan",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2019-08-04T18:06:18Z",
        "body": "Know of any kerberos libraries for .NET? I don't... and I'm not going to implement it from scratch."
      }
    ]
  },
  {
    "number": 887,
    "title": "Move mails from spam to inbox",
    "created_at": "2019-07-29T13:29:15Z",
    "closed_at": "2019-07-29T14:12:05Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/887",
    "body": "Hi, i need to move all spam mails to inbox. Is that possible with Yahoo ?",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/887/comments",
    "author": "emrahaydemir",
    "comments": [
      {
        "user": "emrahaydemir",
        "created_at": "2019-07-29T13:32:06Z",
        "body": "i can set spam folder for yahoo but i dont know how can i move all mails to inbox. \r\n\r\n`var spamBox = client.GetFolder(\"Bulk Mail\");`"
      },
      {
        "user": "jstedfast",
        "created_at": "2019-07-29T14:11:55Z",
        "body": "```csharp\r\nspamBox.MoveTo (UniqueIdRange.All, client.Inbox);\r\n```"
      }
    ]
  },
  {
    "number": 884,
    "title": "The IMAP server has unexpectedly disconnected on Sort",
    "created_at": "2019-07-23T00:10:19Z",
    "closed_at": "2019-07-26T13:03:48Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/884",
    "body": "Sometimes, when I use Imapfolder.Sort(query, orderBy); I get this message: \"The IMAP server has unexpectedly disconnected\". I notice that this Imap folder has more than 100,000 messages. \r\n\r\nI use these function only for getting UID lists.\r\n\r\nStack error:\r\n\r\n   en MailKit.Net.Imap.ImapStream.<ReadAheadAsync>d__56.MoveNext()\r\n--- Fin del seguimiento de la pila de la ubicación anterior donde se produjo la excepción ---\r\n   en System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   en MailKit.Net.Imap.ImapStream.<ReadTokenAsync>d__71.MoveNext()\r\n--- Fin del seguimiento de la pila de la ubicación anterior donde se produjo la excepción ---\r\n   en System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   en MailKit.Net.Imap.ImapCommand.<StepAsync>d__82.MoveNext()\r\n--- Fin del seguimiento de la pila de la ubicación anterior donde se produjo la excepción ---\r\n   en System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   en MailKit.Net.Imap.ImapEngine.<IterateAsync>d__170.MoveNext()\r\n--- Fin del seguimiento de la pila de la ubicación anterior donde se produjo la excepción ---\r\n   en System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   en MailKit.Net.Imap.ImapEngine.<RunAsync>d__171.MoveNext()\r\n--- Fin del seguimiento de la pila de la ubicación anterior donde se produjo la excepción ---\r\n   en System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   en System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   en MailKit.Net.Imap.ImapFolder.<SortAsync>d__359.MoveNext()\r\n--- Fin del seguimiento de la pila de la ubicación anterior donde se produjo la excepción ---\r\n   en System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   en System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   en MailKit.Net.Imap.ImapFolder.Sort(SearchQuery query, IList`1 orderBy, CancellationToken cancellationToken)\r\n   en EZSafe.Libraries.Shared.MailBox.CMailProcess.lstMessagesAccount(ArrayList varparametros, ArrayList AccountParam) en D:\\MailBox\\CMail.cs:línea 3366\r\n   en MyCargo.Inbox.BindPagedMessage(ArrayList Parameters) en D:\\Inbox.aspx.vb:línea 150\r\n\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/884/comments",
    "author": "juansh20",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2019-07-23T13:38:34Z",
        "body": "Try getting a protocol log to see what the server is saying when it disconnects you:\r\n\r\n```csharp\r\nvar client = new ImapClient (new ProtocolLogger (\"imap.log\"));\r\n```"
      },
      {
        "user": "juansh20",
        "created_at": "2019-08-06T23:53:00Z",
        "body": "Hello,\r\n\r\nThis is the imap.log:\r\n\r\nConnected to imaps://mail.xxxxxxx.xxx:993/\r\nS: * OK [CAPABILITY IMAP4rev1 SASL-IR LOGIN-REFERRALS ID ENABLE IDLE NAMESPACE LITERAL+ AUTH=PLAIN AUTH=LOGIN] Dovecot ready.\r\nC: F00000000 AUTHENTICATE PLAIN AG1yYW1pcmV6QGV6c2hpcC5wZQB5Q3ZiTVduektGQUQ=\r\nS: F00000000 OK [CAPABILITY IMAP4rev1 SASL-IR LOGIN-REFERRALS ID ENABLE IDLE SORT SORT=DISPLAY THREAD=REFERENCES THREAD=REFS THREAD=ORDEREDSUBJECT MULTIAPPEND URL-PARTIAL CATENATE UNSELECT CHILDREN NAMESPACE UIDPLUS LIST-EXTENDED I18NLEVEL=1 CONDSTORE QRESYNC ESEARCH ESORT SEARCHRES WITHIN CONTEXT=SEARCH LIST-STATUS BINARY MOVE SNIPPET=FUZZY NAMESPACE LITERAL+ NOTIFY SPECIAL-USE COMPRESS=DEFLATE QUOTA] Logged in\r\nC: F00000001 NAMESPACE\r\nS: * NAMESPACE ((\"INBOX.\" \".\")) NIL NIL\r\nS: F00000001 OK Namespace completed (0.001 + 0.000 secs).\r\nC: F00000002 LIST \"\" \"INBOX\" RETURN (SUBSCRIBED CHILDREN)\r\nS: * LIST (\\HasChildren) \".\" INBOX\r\nS: F00000002 OK List completed (0.003 + 0.000 + 0.002 secs).\r\nC: F00000003 LIST (SPECIAL-USE) \"\" \"*\" RETURN (SUBSCRIBED CHILDREN)\r\nS: * LIST (\\Subscribed \\HasNoChildren \\UnMarked \\Junk) \".\" INBOX.spam\r\nS: * LIST (\\Subscribed \\HasNoChildren \\UnMarked \\Archive) \".\" INBOX.Archive\r\nS: * LIST (\\Subscribed \\HasNoChildren \\UnMarked \\Drafts) \".\" INBOX.Drafts\r\nS: * LIST (\\Subscribed \\HasNoChildren \\UnMarked \\Trash) \".\" INBOX.Trash\r\nS: * LIST (\\Subscribed \\HasNoChildren \\UnMarked \\Sent) \".\" INBOX.Sent\r\nS: F00000003 OK List completed (0.002 + 0.000 + 0.001 secs).\r\nC: F00000004 EXAMINE INBOX (CONDSTORE)\r\nS: * FLAGS (\\Answered \\Flagged \\Deleted \\Seen \\Draft $MDNSent $Forwarded)\r\nS: * OK [PERMANENTFLAGS ()] Read-only mailbox.\r\nS: * 116866 EXISTS\r\nS: * 0 RECENT\r\nS: * OK [UNSEEN 42247] First unseen.\r\nS: * OK [UIDVALIDITY 1409954669] UIDs valid\r\nS: * OK [UIDNEXT 174217] Predicted next UID\r\nS: * OK [HIGHESTMODSEQ 354038] Highest\r\nS: F00000004 OK [READ-ONLY] Examine completed (0.168 + 0.000 + 0.167 secs).\r\nC: F00000005 UID SORT RETURN () (REVERSE ARRIVAL) US-ASCII ALL\r\n\r\nafter that, I have the message: \"The IMAP server has unexpectedly disconnected\""
      },
      {
        "user": "jstedfast",
        "created_at": "2019-08-07T12:26:15Z",
        "body": "Okay, so what seems to be happening is that when MailKit attempts to send the `F00000005 UID SORT RETURN () (REVERSE ARRIVAL) US-ASCII ALL` command, the server dropped the connection (or you lost your network connection) and MailKit was unable to finish sending it.\r\n\r\nThat's not something that can be fixed in MailKit."
      }
    ]
  },
  {
    "number": 880,
    "title": "Move a message to a new Folder while also updating the Date.",
    "created_at": "2019-07-17T09:13:49Z",
    "closed_at": "2019-07-17T14:31:07Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/880",
    "body": "- What were you trying to do?\r\n\r\nI am currently doing a project, in which, I have to move certain emails to a new folder, but these messages need to have a new date associated when being moved because if they have been in the new folder for longer than a day, I have to move them back.\r\n\r\n- Step-by-step reproduction instructions and/or a simple test case.\r\n\r\nIn order to achieve this I implemented the following solution:\r\n1. Get the message.\r\n2. Add the current date to the Date attribute of the message.\r\n3. Append the message to the new Folder.\r\n4. Delete the message from the previous folder. (I have to do this or else the message will be duplicated.)\r\n\r\n```csharp\r\nvar message = await this.externalMailFolder.GetMessageAsync(messageUniqueId);\r\nmessage.Date = DateTimeOffset.UtcNow;\r\nUniqueId? finalId = await destinationMailFolder.AppendAsync(message);\r\nawait this.externalMailFolder.AddFlagsAsync(messageUniqueId, MailKit.MessageFlags.Deleted, silent:true);\r\nawait this.externalMailFolder.ExpungeAsync();\r\n```\r\n\r\nI was wondering if this is the best way to achieve this or is there a better solution?",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/880/comments",
    "author": "claudiolsmonteiro",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2019-07-17T14:31:07Z",
        "body": "I suppose that's fine, although I would recommend against modifying the Date header.\r\n\r\nI would just use IMAP's concept of `INTERNALDATE` which represents the date that the message was added t the folder.\r\n\r\nWhen you do `folder.Append (message)`, the IMAP server will set the `INTERNALDATE` to the timestamp when the message was appended to said folder which is exactly what it sounds like you want, and best of all it doesn't modify the raw message source.\r\n\r\nTo get at the `INTERNALDATE` later, you can use the `MessageSummaryItems.InternalDate` enum flag in a `folder.Fetch()` request to populate the resulting `MessageSummary.InternalDate` property.\r\n\r\nSome of the `folder.Search` date-based queries also operate on this date value such as the `DeliveredOn`, `DeliveredBefore`, and `DeliveredAfter` search queries. I'm pretty sure that `OlderThan` and `YoungerThan` also use the `INTERNALDATE` metadata."
      },
      {
        "user": "claudiolsmonteiro",
        "created_at": "2019-07-18T11:03:33Z",
        "body": "Thank you for your reply.\r\n\r\nBefore following the steps I wrote in the beginning, I tried the method MoveToAsync and noticed the date was still the same. \r\n\r\nAfter your message, I have tried using the InternalDate and observed that it was also the same as the first delivery date. I then tried using the AppendAsync method that takes a DateTimeOffset as a parameter to no avail.\r\n\r\nI thought it would be a problem related to Gmail's Imap server and decided to try in our company's Imap Server, but had the same results.\r\n\r\nDo you think I might be missing a step?"
      },
      {
        "user": "jstedfast",
        "created_at": "2019-07-18T13:45:09Z",
        "body": "The IMAP `COPY` and `MOVE` commands preserve the `INTERNALDATE` value when copying messages across folders, but `APPEND` should assign a new `INTERNALDATE` to the current date & time (unless you use the `Append()` method that takes a `DateTimeOffset`, in which case it should assign that value as the `INTERNALDATE` value).\r\n\r\nHow are you determining that the `INTERNALDATE` is wrong?\r\n\r\nHere's what the IMAP RFC says:\r\n\r\n```\r\n2.3.3.  Internal Date Message Attribute\r\n\r\n   The internal date and time of the message on the server.  This\r\n   is not the date and time in the [RFC-2822] header, but rather a\r\n   date and time which reflects when the message was received.  In\r\n   the case of messages delivered via [SMTP], this SHOULD be the\r\n   date and time of final delivery of the message as defined by\r\n   [SMTP].  In the case of messages delivered by the IMAP4rev1 COPY\r\n   command, this SHOULD be the internal date and time of the source\r\n   message.  In the case of messages delivered by the IMAP4rev1\r\n   APPEND command, this SHOULD be the date and time as specified in\r\n   the APPEND command description.  All other cases are\r\n   implementation defined.\r\n```\r\n\r\nThen, in the description of the `APPEND` command:\r\n\r\n```\r\n      If a date-time is specified, the internal date SHOULD be set in\r\n      the resulting message; otherwise, the internal date of the\r\n      resulting message is set to the current date and time by default.\r\n```\r\n\r\nKeep in mind that when the internal date is set on the message, it is *NOT* set as part of the message headers, it is set as a metadata attribute in the IMAP server's message storage database, the only way in which to retrieve this information is via the `FETCH` command with `INTERNALDATE` (aka `Fetch (<range>, MessageSummaryItems.InternalDate ...);`"
      },
      {
        "user": "claudiolsmonteiro",
        "created_at": "2019-07-23T11:41:33Z",
        "body": "> Keep in mind that when the internal date is set on the message, it is _NOT_ set as part of the message headers, it is set as a metadata attribute in the IMAP server's message storage database, the only way in which to retrieve this information is via the `FETCH` command with `INTERNALDATE` (aka `Fetch (<range>, MessageSummaryItems.InternalDate ...);`\r\n\r\nI have been testing with an email that was received on 17-07-2019 at 14:40.\r\nI have also tried with both of the following Append methods:\r\n`await destinationMailFolder.AppendAsync(message);`\r\n_and_\r\n`await destinationMailFolder.AppendAsync(message, MessageFlags.Seen, DateTimeOffset.UtcNow);`\r\n\r\nThe problem is that, when I run the following fetch command with the **InternalDate** flag:\r\n`await destinationMailFolder.FetchAsync(0, -1, MessageSummaryItems.UniqueId | MessageSummaryItems.InternalDate);`\r\n\r\nthe _InternalDate_ of the _MessageSummary_ is still set as _17-07-2019 14:40_"
      },
      {
        "user": "jstedfast",
        "created_at": "2019-07-23T13:32:19Z",
        "body": "Can you get protocol logs of the APPEND command and of the FETCH response so I can see what is going on?"
      },
      {
        "user": "claudiolsmonteiro",
        "created_at": "2019-07-23T14:26:29Z",
        "body": "C: A00000010 APPEND InvoicesToProcess {547+}\r\nC: MIME-Version: 1.0\r\nC: Date: Wed, 17 Jul 2019 09:40:08 +0000\r\nC: Message-ID: <CADPgRxcu9at7KdB6-Rj1m6W1iC7sxDBAbndBguNM-Trmb0KrLQ@mail.gmail.com>\r\nC: Subject: teste332\r\nC: From: Test User <testingcside@gmail.com>\r\nC: To: Test User <testingcside@gmail.com>\r\nC: Content-Type: multipart/alternative; boundary=\"000000000000f78cbb058ddd18fe\"\r\nC: \r\nC: --000000000000f78cbb058ddd18fe\r\nC: Content-Type: text/plain; charset=\"UTF-8\"\r\nC: \r\nC: \r\nC: \r\nC: --000000000000f78cbb058ddd18fe\r\nC: Content-Type: text/html; charset=\"UTF-8\"\r\nC: \r\nC: <div dir=\"ltr\"><br></div>\r\nC: \r\nC: --000000000000f78cbb058ddd18fe--\r\nC: \r\nS: * 1 FETCH (UID 1360 MODSEQ (79128) FLAGS ())\r\nS: A00000010 OK [APPENDUID 26 485] (Success)\r\nC: A00000011 SELECT InvoicesToProcess (CONDSTORE)\r\nS: * FLAGS (\\Answered \\Flagged \\Draft \\Deleted \\Seen $NotPhishing $Phishing)\r\nS: * OK [PERMANENTFLAGS (\\Answered \\Flagged \\Draft \\Deleted \\Seen $NotPhishing $Phishing \\*)] Flags permitted.\r\nS: * OK [UIDVALIDITY 26] UIDs valid.\r\nS: * 1 EXISTS\r\nS: * 0 RECENT\r\nS: * OK [UIDNEXT 486] Predicted next UID.\r\nS: * OK [HIGHESTMODSEQ 79154]\r\nS: A00000011 OK [READ-WRITE] InvoicesToProcess selected. (Success)\r\nC: A00000012 FETCH 1:* (UID INTERNALDATE)\r\nS: * 1 FETCH (UID 485 MODSEQ (79128) INTERNALDATE \"17-Jul-2019 09:40:08 +0000\")\r\nS: A00000012 OK Success\r\n\r\nI tried again, this time saving the logs. Hope it helps."
      },
      {
        "user": "jstedfast",
        "created_at": "2019-07-23T16:19:46Z",
        "body": "I was expecting a log of the APPEND command that takes a date argument, but you gave me a log of the APPEND command without a date argument.\r\n\r\nCan you get me the same logs but using `Append (message, MessageFlags.Seen, DateTimeOffset.UtcNow);`?"
      },
      {
        "user": "claudiolsmonteiro",
        "created_at": "2019-07-24T08:43:31Z",
        "body": "Sorry, I only sent this one because they appeared to be the equal.\r\nHere is the one with `Append (message, MessageFlags.Seen, DateTimeOffset.UtcNow);`\r\n\r\nC: A00000010 APPEND InvoicesToProcess (\\Seen) \"23-Jul-2019 14:23:14 +0000\" {547+}\r\nC: MIME-Version: 1.0\r\nC: Date: Wed, 17 Jul 2019 09:40:08 +0000\r\nC: Message-ID: <CADPgRxcu9at7KdB6-Rj1m6W1iC7sxDBAbndBguNM-Trmb0KrLQ@mail.gmail.com>\r\nC: Subject: teste332\r\nC: From: Test User <testingcside@gmail.com>\r\nC: To: Test User <testingcside@gmail.com>\r\nC: Content-Type: multipart/alternative; boundary=\"000000000000f78cbb058ddd18fe\"\r\nC: \r\nC: --000000000000f78cbb058ddd18fe\r\nC: Content-Type: text/plain; charset=\"UTF-8\"\r\nC: \r\nC: \r\nC: \r\nC: --000000000000f78cbb058ddd18fe\r\nC: Content-Type: text/html; charset=\"UTF-8\"\r\nC: \r\nC: <div dir=\"ltr\"><br></div>\r\nC: \r\nC: --000000000000f78cbb058ddd18fe--\r\nC: \r\nS: A00000010 OK [APPENDUID 26 486] (Success)\r\nC: A00000011 SELECT InvoicesToProcess (CONDSTORE)\r\nS: * FLAGS (\\Answered \\Flagged \\Draft \\Deleted \\Seen $NotPhishing $Phishing)\r\nS: * OK [PERMANENTFLAGS (\\Answered \\Flagged \\Draft \\Deleted \\Seen $NotPhishing $Phishing \\*)] Flags permitted.\r\nS: * OK [UIDVALIDITY 26] UIDs valid.\r\nS: * 1 EXISTS\r\nS: * 0 RECENT\r\nS: * OK [UIDNEXT 487] Predicted next UID.\r\nS: * OK [HIGHESTMODSEQ 79204]\r\nS: A00000011 OK [READ-WRITE] InvoicesToProcess selected. (Success)\r\nC: A00000012 FETCH 1:* (UID INTERNALDATE)\r\nS: * 1 FETCH (UID 486 MODSEQ (79201) INTERNALDATE \"17-Jul-2019 09:40:08 +0000\")\r\nS: A00000012 OK Success"
      },
      {
        "user": "jstedfast",
        "created_at": "2019-07-24T11:03:32Z",
        "body": "Ok, seems like a bug in your IMAP server.\r\n\r\nThe INTERNALDATE that the server responds with to the FETCH request should be identical to the date sent in the APPEND command. For some reason, your IMAP server is ignoring the date sent as part of the APPEND command and is overriding it with the Date header value which it should not be doing."
      }
    ]
  },
  {
    "number": 875,
    "title": "Read Inbox Body Fast",
    "created_at": "2019-06-29T20:43:51Z",
    "closed_at": "2019-07-01T19:15:56Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/875",
    "body": "So I'm using ImapClient to Connect into gmail and read all messages as HtmlBody. But it takes too long to read about 2000 emails. Is there any possibility to read it faster?\r\nI used MultiThread but it doesn't allow it needs SyncRoot Lock..So is the same speed.\r\nAny way to read fast HtmlBody of the Inbox?\r\n\r\n```csharp\r\nvar client = new ImapClient();\r\nclient.ServerCertificateValidationCallback = (s, c, h, a) => true;\r\nclient.Connect(imap, Convert.ToInt32(port), true);\r\nclient.Authenticate(email, pass);\r\nvar inbox = client.Inbox;\r\ninbox.Open(FolderAccess.ReadWrite);\r\nvar items = inbox.Fetch(0, -1, MessageSummaryItems.UniqueId | MessageSummaryItems.Size | MessageSummaryItems.Flags);\r\nvar messages = new ConcurrentQueue<IMessageSummary>(items);\r\nfor (int i = 0; i < 50; i++)\r\n    new Thread(new ThreadStart(() => readMessageAsync(inbox))).Start();\r\n```",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/875/comments",
    "author": "nik0s100",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2019-07-01T19:15:53Z",
        "body": "I would recommend changing your code to this:\r\n\r\n```csharp\r\nvar client = new ImapClient();\r\nclient.ServerCertificateValidationCallback = (s, c, h, a) => true;\r\nclient.Connect(imap, Convert.ToInt32(port), true);\r\nclient.Authenticate(email, pass);\r\nvar inbox = client.Inbox;\r\ninbox.Open(FolderAccess.ReadWrite);\r\nvar items = inbox.Fetch(0, -1, MessageSummaryItems.UniqueId | MessageSummaryItems.Size | MessageSummaryItems.Flags | MessageSummaryItems.BodyStructure);\r\nforeach (var item in items) {\r\n    var part = item.HtmlBody ?? item.TextBody;\r\n    var body = (TextPart) inbox.GetBodyPart (item.UniqueId, part);\r\n    var text = body.Text;\r\n}\r\n```"
      },
      {
        "user": "nik0s100",
        "created_at": "2019-07-01T23:38:21Z",
        "body": "Yeah but this way is slow also. No other way to read it faster right?"
      },
      {
        "user": "jstedfast",
        "created_at": "2019-07-02T16:17:28Z",
        "body": "The method I posted above is as fast as you can get unless you open multiple connections to the IMAP server to share the load in downloading the html bodies."
      }
    ]
  },
  {
    "number": 867,
    "title": "How do I know when the message is sent after I receive it successfully",
    "created_at": "2019-06-05T02:25:44Z",
    "closed_at": "2019-06-05T11:30:48Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/867",
    "body": "How do I know when the message is sent after I receive it successfully",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/867/comments",
    "author": "yZuoB",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2019-06-05T11:30:48Z",
        "body": "Well, if you've received it, then I guess it means that it was sent ;-)"
      },
      {
        "user": "yZuoB",
        "created_at": "2019-06-06T06:52:01Z",
        "body": "Thank you, I made an obvious mistake, and there is a specific time in the file that receives the mail.\r\n\r\n\r\n\r\nyaozuobang@163.comt\r\n \r\nFrom: Jeffrey Stedfast\r\nDate: 2019-06-05 19:30\r\nTo: jstedfast/MailKit\r\nCC: yZuoB; Author\r\nSubject: Re: [jstedfast/MailKit] How do I know when the message is sent after I receive it successfully (#867)\r\nWell, if you've received it, then I guess it means that it was sent ;-)\r\n―\r\nYou are receiving this because you authored the thread.\r\nReply to this email directly, view it on GitHub, or mute the thread.\r\n"
      }
    ]
  },
  {
    "number": 856,
    "title": "POP3/IMAP -> Pop3ProtocolException/ImapProtocolException",
    "created_at": "2019-05-09T11:23:32Z",
    "closed_at": "2019-05-09T12:08:34Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/856",
    "body": "**..has unexpectedly disconnected. But server say login or password is invalid.**\r\nGet Exception when authenticating into IMAP/POP3 servers. Servers say my login and password is invalid in protocol log and is okay, but MailKit send Exception.\r\n\r\n**POP3 Protocol Log**\r\n```\r\n[Test] Connecting..\r\nConnected to pop://pop.free.fr:110/?starttls=when-available\r\nS: +OK POP3 ready <1724282838.1557400756@popn2>\r\nC: CAPA\r\nS: +OK Capability list follows\r\nS: TOP\r\nS: USER\r\nS: UIDL\r\nS: SASL EMAIL PLAIN\r\nS: .\r\n[Test] Connected: True\r\n[Test] Authenticating..\r\nC: APOP EMAIL PASSWORD\r\nS: -ERR Invalid login or password\r\nC: AUTH PLAIN\r\nException: The POP3 server has unexpectedly disconnected.\r\n```\r\n\r\n**IMAP Protocol Log**\r\n```\r\n[Test] Connecting..\r\nConnected to imap://imap.free.fr:143/?starttls=when-available\r\nS: * OK IMAP4 ready\r\nC: A00000000 CAPABILITY\r\nS: * CAPABILITY IMAP4REV1 X-NETSCAPE LOGIN-REFERRALS AUTH=PLAIN\r\nS: A00000000 OK completed\r\n[Test] Connected: True\r\n[Test] Authenticating..\r\nC: A00000001 AUTHENTICATE PLAIN\r\nS: +\r\nC: AHBoaWxpZmxvLmxlZ3JhZXRAZnJlZS5mcgB2b2x2aWM=\r\nS: A00000001 NO Invalid login or password\r\nC: A00000002 LOGIN EMAIL PASSWORD\r\nException: The IMAP server has unexpectedly disconnected.\r\n```",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/856/comments",
    "author": "Miraichi",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2019-05-09T12:08:34Z",
        "body": "You got the Pop3ProtocolException/ImapProtocolException because your POP3/IMAP server disconnected when you gave it invalid credentials.\r\n\r\nThis is the expected behavior based on what your server is doing.\r\n\r\n*Most* POP3/IMAP servers will not close the connection just because you've sent invalid credentials, most of the time they will allow multiple attempts to authenticate, but yours apparently does not."
      }
    ]
  },
  {
    "number": 849,
    "title": "ImapProtocolException hides the real error message from server",
    "created_at": "2019-04-18T08:19:07Z",
    "closed_at": "2019-04-18T11:04:57Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/849",
    "body": "Very often I receive such stack trace:\r\n\r\n`MailKit.Net.Imap.ImapProtocolException: Connection closed. 14\r\n   at MailKit.Net.Imap.ImapEngine.IterateAsync(Boolean doAsync)\r\n   at MailKit.Net.Imap.ImapEngine.RunAsync(ImapCommand ic, Boolean doAsync)\r\n   at MailKit.Net.Imap.ImapEngine.GetFolderAsync(String path, Boolean doAsync, CancellationToken cancellationToken)\r\n   at MailKit.Net.Imap.ImapClient.GetFolder(String path, CancellationToken cancellationToken)`\r\n\r\nAnd I can not understand the meaning of the exception only by this message: \"Connection closed. 14\"\r\n\r\nTo understand this exception, I enabled the ProtocolLog:\r\n\r\n> Connected to imaps://outlook.office365.com:993/\r\n> S: * OK The Microsoft Exchange IMAP4 service is ready. [TA********************uAEMATwBNAA==]\r\n> C: A00000000 CAPABILITY\r\n> S: * CAPABILITY IMAP4 IMAP4rev1 AUTH=PLAIN AUTH=XOAUTH2 SASL-IR UIDPLUS ID UNSELECT CHILDREN IDLE NAMESPACE LITERAL+\r\n> S: A00000000 OK CAPABILITY completed.\r\n> C: A00000001 AUTHENTICATE PLAIN AGR*******************F0V2U=\r\n> S: A00000001 NO AUTHENTICATE failed.\r\n> C: A00000002 ****** LOGIN INFORMATION HIDEN ****** completed.\r\n> C: A00000003 CAPABILITY\r\n> S: * CAPABILITY IMAP4 IMAP4rev1 AUTH=PLAIN AUTH=XOAUTH2 SASL-IR UIDPLUS MOVE ID UNSELECT CLIENTACCESSRULES CLIENTNETWORKPRESENCELOCATION BACKENDAUTHENTICATE CHILDREN IDLE NAMESPACE LITERAL+\r\n> S: A00000003 OK CAPABILITY completed.\r\n> C: A00000004 NAMESPACE\r\n> S: A00000004 BAD User is authenticated but not connected.\r\n> C: A00000005 LIST \"\" \"INBOX\"\r\n> S: A00000005 BAD User is authenticated but not connected.\r\n> S: * BYE Connection closed. 14\r\n> C: A00000006 LIST \"\" Inbox\r\n\r\nAnd I saw that there was another message:  \"BAD User is authenticated but not connected. \"\r\n\r\nAnother case, I saw this message \"Connection closed. 14\" in the stack trace, but protocol log shows: \"BAD Request is throttled. Suggested Backoff Time: 93522 milliseconds\":\r\n\r\n> Connected to imaps://outlook.office365.com:993/     \r\n> S: * OK The Microsoft Exchange IMAP4 service is ready. [T****************************==]     \r\n> C: Z00000000 CAPABILITY     \r\n> S: * CAPABILITY IMAP4 IMAP4rev1 AUTH=PLAIN AUTH=XOAUTH2 SASL-IR UIDPLUS ID UNSELECT CHILDREN IDLE NAMESPACE LITERAL+     \r\n> S: Z00000000 OK CAPABILITY completed.     \r\n> C: Z00000001 AUTHENTICATE PLAIN A***************************l     \r\n> S: Z00000001 NO AUTHENTICATE failed.     \r\n> C: Z00000002 ****** LOGIN INFORMATION HIDEN ****** completed.     \r\n> C: Z00000003 CAPABILITY     \r\n> S: * CAPABILITY IMAP4 IMAP4rev1 AUTH=PLAIN AUTH=XOAUTH2 SASL-IR UIDPLUS MOVE ID UNSELECT CLIENTACCESSRULES CLIENTNETWORKPRESENCELOCATION BACKENDAUTHENTICATE CHILDREN IDLE NAMESPACE LITERAL+     \r\n> S: Z00000003 OK CAPABILITY completed.     \r\n> C: Z00000004 NAMESPACE     \r\n> S: Z00000004 BAD Request is throttled. Suggested Backoff Time: 591431 milliseconds     \r\n> S: * BYE Connection closed. 14     \r\n> C: Z00000005 LIST \"\" \"INBOX\"\r\n\r\nThe question is why I see the same message in the stack trace (I mean \"BYE Connection closed. 14 \") for completely different errors: \"not connected\" and \"throttled\"?\r\nIs it a bug?\r\n\r\nI think the correct behavior in my case should be such stack trace: \r\n`MailKit.Net.Imap.ImapProtocolException: User is authenticated but not connected. \r\n   at MailKit.Net.Imap.ImapEngine.IterateAsync(Boolean doAsync)\r\n   at MailKit.Net.Imap.ImapEngine.RunAsync(ImapCommand ic, Boolean doAsync)\r\n   at MailKit.Net.Imap.ImapEngine.GetFolderAsync(String path, Boolean doAsync, CancellationToken cancellationToken)\r\n   at MailKit.Net.Imap.ImapClient.GetFolder(String path, CancellationToken cancellationToken)`\r\n\r\n\r\nOptional: By the way, do you know what does it mean: 'BAD User is authenticated but not connected. '? Should I retry connection? Because it disappears after some time for the same user.\r\n\r\nI use version 2.1.3.\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/849/comments",
    "author": "komanton",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2019-04-18T11:04:57Z",
        "body": "The problem is that the `* BYE` comes *after* the tagged response, so ImapClient doesn't see the `* BYE` until it goes to read the response to the *next* command, so it is impossible to do what you suggest.\r\n\r\nAlso I have no idea what \"User is authenticated but not connected\" means. I suppose that yes, you should reconnect and try again."
      },
      {
        "user": "christophgasser",
        "created_at": "2019-05-17T12:42:39Z",
        "body": "How was that solved? I have exactly the same issue.\r\n\r\nS: B00000001 OK AUTHENTICATE completed.\r\nC: B00000002 CAPABILITY\r\nS: * CAPABILITY IMAP4 IMAP4rev1 AUTH=PLAIN AUTH=XOAUTH2 SASL-IR UIDPLUS MOVE ID UNSELECT CLIENTACCESSRULES CLIENTNETWORKPRESENCELOCATION BACKENDAUTHENTICATE CHILDREN IDLE NAMESPACE LITERAL+\r\nS: B00000002 OK CAPABILITY completed.\r\nC: B00000003 NAMESPACE\r\nS: B00000003 BAD Request is throttled. Suggested Backoff Time: 112857 milliseconds\r\nS: * BYE Connection closed. 14\r\nC: B00000004 LIST \"\" \"INBOX\""
      },
      {
        "user": "jstedfast",
        "created_at": "2019-05-17T14:05:25Z",
        "body": "@christophgasser it's not something that I can fix because the `* BYE` response is not part of the `B00000003` command response, it is part of the `B00000004` response."
      },
      {
        "user": "christophgasser",
        "created_at": "2019-05-17T14:10:53Z",
        "body": "Is this an issue of the bloody O365 or the MailKit then? Thing is, my implementation has been working well, but since sime time, it is not. But I can't tell because it was because of the update to a newer MailKit release or because Microsoft chnaged something on their O365 infrastructure/implementation.\r\n\r\nBR\r\nC"
      },
      {
        "user": "christophgasser",
        "created_at": "2019-05-17T14:16:15Z",
        "body": "Just for completeness: Sometimes it is working, and sometimes it is not. Same code. Same components. \r\nBR\r\nC"
      },
      {
        "user": "jstedfast",
        "created_at": "2019-05-17T14:20:09Z",
        "body": "This is an Office365 issue, not a MailKit issue.\r\n\r\nAccording to the error given in the BYE response, it sounds like your client is hitting the O365 server a little too hard and so O365 is throttling your connection.\r\n\r\nAre you connecting and disconnecting often? Is your client pegging the server with requests for message data?"
      },
      {
        "user": "christophgasser",
        "created_at": "2019-05-17T14:25:22Z",
        "body": "No. No. Not at all. Opening the con. Keeping it open. Doing some mail movements. That's all.\r\nAnd it happens when starting the application and building up the con. No load at that time. Except of the connection request.\r\n\r\nWill have to investigate then.\r\n\r\nBR for your qhick response.\r\nC"
      },
      {
        "user": "jstedfast",
        "created_at": "2019-05-17T14:38:28Z",
        "body": "Is there another program connecting to O365 from your iP address? It doesn't have to be the MailKit client that is flooding the O365 server with requests."
      },
      {
        "user": "christophgasser",
        "created_at": "2019-05-17T15:06:11Z",
        "body": "Not by IMAP. Just all the Outlook clients of the company. But they are not using the same account ;-)\r\n\r\nBR\r\nC"
      }
    ]
  },
  {
    "number": 846,
    "title": "Empty Sender in Envelope object",
    "created_at": "2019-04-15T16:02:28Z",
    "closed_at": "2019-04-15T16:44:14Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/846",
    "body": "Hi, we have encountered an issue with the reading sender from an envelope in the case when the sender doesn't have a hostname. Sender and From properties are NULL in this case.\r\nHere is an exapmle:\r\n```\r\nC: B00000092 UID FETCH 16855:16880 ENVELOPE\r\nS: * 1 FETCH (ENVELOPE (\"Sat, 6 Apr 2019 06:11:46 +0000\" \"SUBJECT\" ((\"NAME\" NIL NIL \".MISSING-HOST-NAME.\")) ((NIL NIL \"NAME\" \".MISSING-HOST-NAME.\")) NIL ((NIL NIL \"TEST\" \"TEST.COM\")) NIL NIL NIL \"<D5EE6C329218A78D@>\") UID 16855)\r\n```\r\nSender and From headers in such emails have the following values\r\n\r\n```\r\nSender: <NAME>\r\nFrom: NAME\r\n```",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/846/comments",
    "author": "SuhovDE",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2019-04-15T16:17:38Z",
        "body": "What version are you using? The latest version of MailKit does not set `Envelope.From` or `Envelope.Sender` to `null`.\r\n\r\nInstead, the latest version provides the following results which I would argue is correct:\r\n\r\n1. `Envelope.Sender` is an `InternetAddressList` with a count of 1, where the 1 address is a `MailboxAddress` with an `Address` value of \"NAME\" and the `Name` property is `null` because there is no name.\r\n2. `Envelope.From` is an empty list because all MailboxAddresses *MUST* have a valid `Address` property, so there's no way to represent that."
      },
      {
        "user": "SuhovDE",
        "created_at": "2019-04-16T08:43:30Z",
        "body": "Confirmed. Cannot replicate with version 2.1.4.0.\r\nThe issue was in version 2.1.2.0. \r\nThank you\r\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2019-04-16T10:34:55Z",
        "body": "Awesome, glad things are working for you now."
      }
    ]
  },
  {
    "number": 844,
    "title": "How can get Emails in Junk E-mail folder",
    "created_at": "2019-04-12T17:07:07Z",
    "closed_at": "2019-04-12T18:17:23Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/844",
    "body": "Hello first this is awesome library, I search example for get the email of the junk folder, How can get emails for the Junk E-mail folder?\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/844/comments",
    "author": "JorgelGtzGtz",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2019-04-12T18:17:22Z",
        "body": "If your IMAP server supports the SPECIAL-USE or XLIST extension, then you can get it like this:\r\n\r\n```csharp\r\nvar junkFolder = client.GetFolder (SpecialFolder.Junk);\r\n```\r\n\r\nIf not, then you'll need to know the full path of the junk folder and get it like this:\r\n\r\n```csharp\r\nvar junkFolder = client.GetFolder (pathToJunkFolder);\r\n```"
      },
      {
        "user": "rakhikarampuri",
        "created_at": "2024-04-12T18:18:22Z",
        "body": "How to get full path of jun folder ?"
      },
      {
        "user": "jstedfast",
        "created_at": "2024-04-12T20:08:28Z",
        "body": "@rakhikarampuri That depends on your IMAP server and where it decided to create it, if it even has a junk folder (not all do).\r\n\r\nYou are going to have to figure that out by yourself, unfortunately, because I do not have an answer for that."
      }
    ]
  },
  {
    "number": 841,
    "title": "The SmtpClient is not connected. (sporadically)",
    "created_at": "2019-04-08T15:10:14Z",
    "closed_at": "2019-04-08T17:01:37Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/841",
    "body": "**Describe the bug**\r\nI'm not convinced this is MailKit bug but since it's the only error in the stack trace I'll have to rely on your experience to tell me if it's MailKit or not.  \r\n\r\nThe host is hosted Outlook 365 (smtp.office365.com).  The problem is sporadic and always works immediately after restarting the app pool on IIS.  This leads be to think maybe I should scope my object differently, currently using Scoped but maybe Singleton?  Or perhaps I should create, connect, Authenticate, and close for each message sent (seems really inefficient).  Do you have any suggestions as to what the cause might be?\r\n\r\nI have the following class which I use to send emails from my .NET Core Web application.\r\n\r\n    public class SmtpEmailProcessor : IEmailProcessor, IDisposable\r\n    {\r\n        private readonly SmtpClient _client = new SmtpClient();\r\n        private readonly EmailSettingsAccessor _emailSettings;\r\n\r\n        public SmtpEmailProcessor(EmailSettingsAccessor emailSettingsAccessor)\r\n        {\r\n            _emailSettings = emailSettingsAccessor;\r\n            _client.Connect(_emailSettings.Host, _emailSettings.Port, SecureSocketOptions.StartTls);\r\n            _client.Authenticate(_emailSettings.UserName, _emailSettings.Password);\r\n        }\r\n\r\n        public async Task SendEmailAsync(EmailDataModel email)\r\n        {\r\n            var emailMessage = ToMimeMessage(email);\r\n            await _client.SendAsync(emailMessage);\r\n        }\r\n\r\n        private MimeMessage ToMimeMessage(EmailDataModel email)\r\n        {\r\n            var mailMessage = new MimeMessage();\r\n            mailMessage.From.Add(new MailboxAddress(_emailSettings.From));\r\n            mailMessage.To.Add(new MailboxAddress(email.SendTo));\r\n            mailMessage.Subject = email.Subject;\r\n            var bodyBuilder = new BodyBuilder\r\n            {\r\n                HtmlBody = email.BodyHTMLVersion\r\n            };\r\n            mailMessage.Body = bodyBuilder.ToMessageBody();\r\n            return mailMessage;\r\n        }\r\n\r\n        public void Dispose()\r\n        {\r\n            _client.Disconnect(quit: true);\r\n            _client.Dispose();\r\n        }\r\n    }\r\n\r\nI configure this class in my .NETCore application as Scoped.\r\n`services.AddScoped<IEmailProcessor, SmtpEmailProcessor>();`\r\n\r\nPeriodically I get the following error:\r\n\r\n\tSystem.IO.IOException: Unable to write data to the transport connection: An existing connection was forcibly closed by the remote host. ---> System.Net.Sockets.SocketException: An existing connection was forcibly closed by the remote host\r\n\t   at System.Net.Sockets.Socket.BeginSend(Byte[] buffer, Int32 offset, Int32 size, SocketFlags socketFlags, AsyncCallback callback, Object state)\r\n\t   at System.Net.Sockets.NetworkStream.BeginWrite(Byte[] buffer, Int32 offset, Int32 size, AsyncCallback callback, Object state)\r\n\t   --- End of inner exception stack trace ---\r\n\t   at System.Net.Sockets.NetworkStream.BeginWrite(Byte[] buffer, Int32 offset, Int32 size, AsyncCallback callback, Object state)\r\n\t   at System.Net.Sockets.NetworkStream.<>c.<WriteAsync>b__59_0(Byte[] bufferArg, Int32 offsetArg, Int32 sizeArg, AsyncCallback callback, Object state)\r\n\t   at System.Threading.Tasks.TaskFactory`1.FromAsyncImpl[TArg1,TArg2,TArg3](Func`6 beginMethod, Func`2 endFunction, Action`1 endAction, TArg1 arg1, TArg2 arg2, TArg3 arg3, Object state, TaskCreationOptions creationOptions)\r\n\t   at System.Threading.Tasks.TaskFactory.FromAsync[TArg1,TArg2,TArg3](Func`6 beginMethod, Action`1 endMethod, TArg1 arg1, TArg2 arg2, TArg3 arg3, Object state)\r\n\t   at System.Net.Sockets.NetworkStream.WriteAsync(Byte[] buffer, Int32 offset, Int32 size, CancellationToken cancellationToken)\r\n\t   at System.IO.Stream.WriteAsync(Byte[] buffer, Int32 offset, Int32 count)\r\n\t   at System.Net.Security.SslStreamInternal.StartWriting(Byte[] buffer, Int32 offset, Int32 count, AsyncProtocolRequest asyncRequest)\r\n\t   at System.Net.Security.SslStreamInternal.ProcessWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncProtocolRequest asyncRequest)\r\n\t   at System.Net.Security.SslStreamInternal.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback asyncCallback, Object asyncState)\r\n\t   at System.Net.Security.SslStream.<>c.<WriteAsync>b__86_0(Byte[] bufferArg, Int32 offsetArg, Int32 sizeArg, AsyncCallback callback, Object state)\r\n\t   at System.Threading.Tasks.TaskFactory`1.FromAsyncImpl[TArg1,TArg2,TArg3](Func`6 beginMethod, Func`2 endFunction, Action`1 endAction, TArg1 arg1, TArg2 arg2, TArg3 arg3, Object state, TaskCreationOptions creationOptions)\r\n\t   at System.Threading.Tasks.TaskFactory.FromAsync[TArg1,TArg2,TArg3](Func`6 beginMethod, Action`1 endMethod, TArg1 arg1, TArg2 arg2, TArg3 arg3, Object state)\r\n\t   at System.Net.Security.SslStream.WriteAsync(Byte[] buffer, Int32 offset, Int32 size, CancellationToken cancellationToken)\r\n\t   at MailKit.Net.Smtp.SmtpStream.<FlushAsync>d__58.MoveNext()\r\n\t--- End of stack trace from previous location where exception was thrown ---\r\n\t   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n\t   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n\t   at MailKit.Net.Smtp.SmtpClient.<FlushCommandQueueAsync>d__59.MoveNext()\r\n\t--- End of stack trace from previous location where exception was thrown ---\r\n\t   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n\t   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n\t   at MailKit.Net.Smtp.SmtpClient.<SendAsync>d__106.MoveNext()\r\n\t--- End of stack trace from previous location where exception was thrown ---\r\n\t   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n\t   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n\t   at Data.SmtpEmailProcessor.<SendEmailAsync>d__3.MoveNext()\r\n\r\n\r\n**Desktop (please complete the following information):**\r\n - Windows Server 2016 Standard\r\n - .NETCore 1.1\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/841/comments",
    "author": "stevenrobertsvortextanalytics",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2019-04-08T17:01:37Z",
        "body": "One thing to keep in mind is that SMTP connections will time out after a period of idleness. How long that time out is depends on the server, but I doubt many will keep it open longer than about 10 minutes.\r\n\r\nAll of the SMTP/POP3/IMAP clients have a method called `NoOp()` which essentially just pings the server with a dummy command to keep the connection alive. What you can do is have a timeout event that has the SmtpClient call that method every few minutes.\r\n\r\nI think that should fix your issue."
      },
      {
        "user": "stevenrobertsvortextanalytics",
        "created_at": "2019-04-08T17:27:39Z",
        "body": "since this is a web app and it is set to Scoped in the DI (per web request) it seems unlikely to have timed out since our web requests only take a few seconds at most.  Should I be creating a new client every time I need it rather than letting DI control this?\r\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2019-04-08T17:34:58Z",
        "body": "I haven't done much with web apps, so I don't really know the architecture, but if the SmtpClient object is being kept alive between web requests, then yes, you're going to want to create/connect a new instance of the SmtpClient for each email you want to send."
      },
      {
        "user": "stevenrobertsvortextanalytics",
        "created_at": "2019-04-08T17:44:23Z",
        "body": "Thank you.  I guess we'll need to add a protocol logger so we can see what's happening., I am suspicious of the built in DI container for Core, especially 1.0.  Thank you for your comments."
      },
      {
        "user": "jstedfast",
        "created_at": "2019-04-08T18:03:24Z",
        "body": "I'm not sure that a protocol logger will help in this case. When an SMTP server drops your connection due to the timeout, it won't send the client any warning - it'll just close the socket."
      }
    ]
  },
  {
    "number": 838,
    "title": "Schedule a message to send at a specific time",
    "created_at": "2019-03-28T05:34:34Z",
    "closed_at": "2019-03-28T12:09:02Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/838",
    "body": "@jstedfast  Can I schedule a message to send at a specific time using mailkit?\r\nif yes...share example\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/838/comments",
    "author": "ysunil702",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2019-03-28T12:09:02Z",
        "body": "No, you have to do that with your own code."
      }
    ]
  },
  {
    "number": 837,
    "title": "How can check if message is meeting ?",
    "created_at": "2019-03-26T15:50:26Z",
    "closed_at": "2019-03-26T16:19:05Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/837",
    "body": "Hello I don't found example for check if message is meeting invitation, could you help me with a example?",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/837/comments",
    "author": "JorgelGtzGtz",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2019-03-26T16:19:05Z",
        "body": "A message that contains a meeting request will have a MIME part with a mime-type of `text/calendar` and typically also have a `method=REQUEST` parameter in the `Content-Type` header.\r\n\r\n```\r\nContent-Type: text/calendar; charset=\"utf-8\"; method=REQUEST\r\n```\r\n\r\nA simple way to check for this would be something like this:\r\n\r\n```csharp\r\nvar meeting = message.BodyParts.OfType<TextPart> (x => {\r\n    return x.ContentType.Parameters.TryGetValue (\"method\", out string method) && method.Equals (\"REQUEST\", StringComparison.OrdinalIgnoreCase);\r\n});\r\n```\r\n\r\nAnd then you could use whatever ical parser you choose to parse the `meeting.Text`, or, if the ical parser of your choosing prefers a Stream-based input, you could do:\r\n\r\n```csharp\r\nusing (var stream = meeting.Content.Open ()) {\r\n    // pass stream to the ical parser\r\n}\r\n```\r\n\r\nHope that helps."
      }
    ]
  },
  {
    "number": 836,
    "title": "SmtpClient.SendAsync not sending mail correctly",
    "created_at": "2019-03-22T12:41:29Z",
    "closed_at": "2019-03-29T17:12:00Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/836",
    "body": "Hi Jeff,\r\n\r\nI'm testing out MailKit and am having a weird issue where SmtpClient.SendAsync isn't sending mail. Send is working fine.\r\n\r\n```\r\n//Test Code\r\nMimeMessage mail = new MimeMessage();\r\nmail.To.Add(new MailboxAddress(\"<<MYADDRESS>>\"));\r\nmail.From.Add(new MailboxAddress(\"<<MYADDRESS>>\"));\r\nmail.Subject = \"Testing Out MailKit\";\r\n\r\nBodyBuilder bb = new BodyBuilder\r\n{\r\nHtmlBody = \"<br /><h2>This is the header</h2><p>Here's a paragraph with some <b>bold</b> text</p><br><br>Bye\",\r\nTextBody = \"Here's the boring plain text version!\"\r\n};\r\n\r\nmail.Body = bb.ToMessageBody();\r\n\r\nusing (SmtpClient smtpClient = new SmtpClient(new ProtocolLogger(\"log.txt\")))\r\n{\r\nawait smtpClient.ConnectAsync(\"<<OURSERVER>>\", 25, SecureSocketOptions.None).ConfigureAwait(false);\r\n\r\nawait smtpClient.SendAsync(mail).ConfigureAwait(false);\r\n\r\nawait smtpClient.DisconnectAsync(true).ConfigureAwait(false);\r\n}\r\n```\r\n\r\nFrom looking at the logs, with SendAsync after _C: Content-Type: multipart/alternative;_, the actual content is not being transmitted.\r\n\r\n\r\nAm I missing something?\r\nThanks!\r\n\r\n\r\nLog using SendAsync (Sending Fails)\r\n\r\n```\r\nConnected to smtp://SERVER:25/\r\nS: 220 MACHINE ESMTP Sendmail 8.14.7/8.14.7; Fri, 22 Mar 2019 12:00:41 GMT\r\nC: EHLO [IP]\r\nS: 250-MACHINE Hello MACHINE [IP], pleased to meet you\r\nS: 250-ENHANCEDSTATUSCODES\r\nS: 250-PIPELINING\r\nS: 250-8BITMIME\r\nS: 250-SIZE 25000000\r\nS: 250-DSN\r\nS: 250-DELIVERBY\r\nS: 250 HELP\r\nC: MAIL FROM:<ADDRESS>\r\nC: RCPT TO:<ADDRESS>\r\nS: 250 2.1.0 <ADDRESS>... Sender ok\r\nS: 250 2.1.5 <ADDRESS>... Recipient ok\r\nC: DATA\r\nS: 354 Enter mail, end with \".\" on a line by itself\r\nC: From: ADDRESS\r\nC: Date: Fri, 22 Mar 2019 12:00:37 +0000\r\nC: Subject: Testing Out MailKit\r\nC: Message-Id: <VC6GDS2527U4.VSHR7DDIZ5UU1@localhost.localdomain>\r\nC: To: ADDRESS\r\nC: MIME-Version: 1.0\r\nC: Content-Type: multipart/alternative; boundary=\"=-XwzQ0WotLdnvdKFuFi+VAA==\"\r\n```\r\n\r\nLog using Send (Sending Succeeds)\r\n\r\n```\r\nConnected to smtp://<<OURSERVER>>:25/\r\nS: 220 MACHINE ESMTP Sendmail 8.14.7/8.14.7; Fri, 22 Mar 2019 12:03:44 GMT\r\nC: EHLO [IP]\r\nS: 250-MACHINE Hello MACHINE [IP], pleased to meet you\r\nS: 250-ENHANCEDSTATUSCODES\r\nS: 250-PIPELINING\r\nS: 250-8BITMIME\r\nS: 250-SIZE 25000000\r\nS: 250-DSN\r\nS: 250-DELIVERBY\r\nS: 250 HELP\r\nC: MAIL FROM:<ADDRESS>\r\nC: RCPT TO:<ADDRESS>\r\nS: 250 2.1.0 <ADDRESS>... Sender ok\r\nS: 250 2.1.5 <ADDRESS>... Recipient ok\r\nC: DATA\r\nS: 354 Enter mail, end with \".\" on a line by itself\r\nC: From: ADDRESS\r\nC: Date: Fri, 22 Mar 2019 12:03:41 +0000\r\nC: Subject: Testing Out MailKit\r\nC: Message-Id: <674RQM3527U4.W7QK1EG9ICQO1@localhost.localdomain>\r\nC: To: ADDRESS\r\nC: MIME-Version: 1.0\r\nC: Content-Type: multipart/alternative; boundary=\"=-ahXvOF9+VHGgrb+ScL1Kww==\"\r\nC: \r\nC: --=-ahXvOF9+VHGgrb+ScL1Kww==\r\nC: Content-Type: text/plain; charset=utf-8\r\nC: \r\nC: Here's the boring plain text version!\r\nC: --=-ahXvOF9+VHGgrb+ScL1Kww==\r\nC: Content-Type: text/html; charset=utf-8\r\nC: Content-Id: <BM4WQM3527U4.2BMWNVVNEMXM3@localhost.localdomain>\r\nC: \r\nC: <br /><h2>This is the header</h2><p>Here's a paragraph with some <b>bold</b> text</p><br><br>Bye\r\nC: --=-ahXvOF9+VHGgrb+ScL1Kww==--\r\nC: \r\nC: .\r\n```",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/836/comments",
    "author": "LSTAR1900",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2019-03-22T17:04:40Z",
        "body": "Here's a test program I wrote up based on your report:\r\n\r\n```csharp\r\nusing System;\r\nusing System.IO;\r\nusing System.Net;\r\nusing System.Text;\r\nusing System.Linq;\r\nusing System.Collections;\r\nusing System.Threading.Tasks;\r\nusing System.Collections.Generic;\r\n\r\nusing MailKit;\r\nusing MimeKit;\r\nusing MimeKit.IO;\r\nusing MailKit.Net.Smtp;\r\nusing MailKit.Security;\r\n\r\nnamespace TestCase\r\n{\r\n    public class Program\r\n    {\r\n        public static void Main ()\r\n        {\r\n            var message = new MimeMessage ();\r\n\t    message.From.Add (new MailboxAddress (\"LastName, FirstName\", \"XXX@XXX\"));\r\n\t    message.To.Add (new MailboxAddress (\"LastName, FirstName\", \"XXX@XXX\"));\r\n\t    message.Subject = \"Testing Out MailKit\";\r\n\r\n\t    var bb = new BodyBuilder {\r\n\t    \tHtmlBody = \"<br /><h2>This is the header</h2><p>Here's a paragraph with some <b>bold</b> text</p><br><br>Bye\",\r\n\t    \tTextBody = \"Here's the boring plain text version!\"\r\n\t    };\r\n\r\n\t    message.Body = bb.ToMessageBody ();\r\n\r\n\t    SendAsync (message).GetAwaiter ().GetResult ();\r\n\t}\r\n\r\n\tstatic async Task SendAsync (MimeMessage message)\r\n\t{\r\n            using (var client = new SmtpClient (new ProtocolLogger (Console.OpenStandardOutput ()))) {\r\n                // For demo-purposes, accept all SSL certificates (in case the server supports STARTTLS)\r\n                client.ServerCertificateValidationCallback = (s, c, h, e) => true;\r\n                await client.ConnectAsync (\"smtp.gmail.com\", 465, true).ConfigureAwait (false);\r\n\t\t\r\n\t\tawait client.AuthenticateAsync (\"XXX@XXX\", \"PASSWORD\").ConfigureAwait (false);\r\n\t\t\r\n\t\tawait client.SendAsync (message).ConfigureAwait (false);\r\n\t\t\r\n                await client.DisconnectAsync (true).ConfigureAwait (false);\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nAnd here's my log of it working fine:\r\n\r\n```\r\nConnected to smtps://smtp.gmail.com:465/\r\nS: 220 smtp.gmail.com ESMTP b3sm4108340qti.33 - gsmtp\r\nC: EHLO [192.168.1.220]\r\nS: 250-smtp.gmail.com at your service, [76.124.193.35]\r\nS: 250-SIZE 35882577\r\nS: 250-8BITMIME\r\nS: 250-AUTH LOGIN PLAIN XOAUTH2 PLAIN-CLIENTTOKEN OAUTHBEARER XOAUTH\r\nS: 250-ENHANCEDSTATUSCODES\r\nS: 250-PIPELINING\r\nS: 250-CHUNKING\r\nS: 250 SMTPUTF8\r\nC: AUTH PLAIN XXXXXX\r\nS: 235 2.7.0 Accepted\r\nC: MAIL FROM:<XXX@XXX>\r\nC: RCPT TO:<XXX@XXX>\r\nS: 250 2.1.0 OK b3sm4108340qti.33 - gsmtp\r\nS: 250 2.1.5 OK b3sm4108340qti.33 - gsmtp\r\nC: DATA\r\nS: 354  Go ahead b3sm4108340qti.33 - gsmtp\r\nC: From: \"LastName, FirstName\" <XXX@XXX>\r\nC: Date: Fri, 22 Mar 2019 12:59:57 -0400\r\nC: Subject: Testing Out MailKit\r\nC: Message-Id: <KUSX25J527U4.2LK3G406TH5U2@Jeffreys-MBP>\r\nC: To: \"LastName, FirstName\" <XXX@XXX>\r\nC: MIME-Version: 1.0\r\nC: Content-Type: multipart/alternative; boundary=\"=-hys9TfMJFLsfikTy2qDb/A==\"\r\nC: \r\nC: --=-hys9TfMJFLsfikTy2qDb/A==\r\nC: Content-Type: text/plain; charset=utf-8\r\nC: \r\nC: Here's the boring plain text version!\r\nC: --=-hys9TfMJFLsfikTy2qDb/A==\r\nC: Content-Type: text/html; charset=utf-8\r\nC: Content-Id: <UGS135J527U4.HVV5UOPTRSSM1@Jeffreys-MBP>\r\nC: \r\nC: <br /><h2>This is the header</h2><p>Here's a paragraph with some <b>bold</b> text</p><br><br>Bye\r\nC: --=-hys9TfMJFLsfikTy2qDb/A==--\r\nC: \r\nC: .\r\nS: 250 2.0.0 OK  1553273999 b3sm4108340qti.33 - gsmtp\r\nC: QUIT\r\nS: 221 2.0.0 closing connection b3sm4108340qti.33 - gsmtp\r\n```\r\n\r\nWhat version are you using? Have you tried upgrading to the latest version?"
      },
      {
        "user": "LSTAR1900",
        "created_at": "2019-03-25T11:41:05Z",
        "body": "I'm using 2.1.3 from NuGet.\r\n\r\nI've tried this in a .NET Core Console Application and SendAsync seems to be working fine.\r\nThe project I was having trouble with was a .NET Core xUnit project.\r\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2019-03-25T14:49:20Z",
        "body": "Make sure that the test is awaiting your test method. What might be happening is that the SmtpClient in your test method is getting disposed by xUnit because your test method is exiting."
      }
    ]
  },
  {
    "number": 835,
    "title": "Search sends outdated results",
    "created_at": "2019-03-21T12:59:38Z",
    "closed_at": "2019-03-21T13:08:04Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/835",
    "body": "I'm working with Gmail requesting Search in while every second. According to imap.log I'm not banned for frequent requests, so I expect Search to return updated results but when a new email arrives, I still receive outdated results. If before calling Search I put Check or Open, Search returns updated results though it doesn't seem like a good idea. Is it an expected behaviour?",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/835/comments",
    "author": "siberianguy",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2019-03-21T13:08:04Z",
        "body": "That sounds like expected behavior.\r\n\r\nDepending on the IMAP server implementation, when you open a folder, the server loads a cache. When a new message arrives, it gets added to the folder by another process (i.e. not the same process that the IMAP client is communicating with) and so the process that is reading the folder on behalf of the client will not immediately know about it until something happens that causes it to re-load the cache.\r\n\r\nThe CHECK command is a way for the client to request that the server re-load the cache. Re-opening the folder has the same effect.\r\n\r\nTypically, the server will eventually catch up and notice the new message anyway, but it may not be immediate.\r\n\r\nDoes that help?"
      }
    ]
  },
  {
    "number": 833,
    "title": "SMTP Client - Capture response from successful SendAsync",
    "created_at": "2019-03-20T22:36:26Z",
    "closed_at": "2019-03-21T11:17:37Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/833",
    "body": "Following successful submission of a message via the SMTP client, I would like the ability to capture the server response for the specific message.\r\n\r\nFor example,  given a successful call\r\n    `await client.SendAsync (message).ConfigureAwait(false);` , \r\n\r\nI would like to capture the server's response, such as\r\n    `250 2.0.0 x2KMTNgW014937 Message accepted for delivery`\r\n\r\nI've seen this as part of the protocol log, but it's only the delivery response that I would like to write to application logs.\r\n\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/833/comments",
    "author": "tvalenta",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2019-03-21T11:17:37Z",
        "body": "You should be able to get that string now if you connect to the `MessageSent` event.\r\n\r\nThe `MessageSentEVentArgs.Response` should be the string you are looking for."
      },
      {
        "user": "tvalenta",
        "created_at": "2019-03-21T21:23:51Z",
        "body": "Thanks for setting me on the right path. I had tried to get this information from a result of SendAsync, and didn't catch that it had to be an event handler. The `MessageSent` event got me what I needed."
      }
    ]
  },
  {
    "number": 832,
    "title": "Textbody return always null",
    "created_at": "2019-03-19T13:02:47Z",
    "closed_at": "2019-03-19T14:12:59Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/832",
    "body": "Hi, I'm trying to read mail using a c# console program with mailkit.\r\nI use this code:\r\n\r\n```\r\nprivate static MimeMessage ReceiveMails()\r\n      {\r\n         MimeMessage message = new MimeMessage();\r\n\r\n         using( var client = new Pop3Client() )\r\n         {\r\n            client.Connect( \"outlook.office365.com\", 995, true );\r\n\r\n            client.Authenticate( \"xxx@yyy.com\", \"xxxxxxx\" );\r\n\r\n            for( int i = 0; i < client.Count; i++ )\r\n            {\r\n               message = client.GetMessage( i );\r\n               Console.WriteLine( \"Body: {0}\", message.TextBody );\r\n            }\r\n\r\n            client.DeleteAllMessages();\r\n            client.Disconnect( true );\r\n            return message;\r\n         }\r\n\r\n      }\r\n```\r\n\r\nWhile mail.Subject always return the correct subject, TextBody always returns null.\r\nI searched the internet for answers but I only found imap examples and by now I can't read my mail body. Thanks!\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/832/comments",
    "author": "mavel72",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2019-03-19T13:24:41Z",
        "body": "Are you sure that these messages *have* a `text/plain` body? Or do they have something else like a `text/html` body?"
      },
      {
        "user": "mavel72",
        "created_at": "2019-03-19T13:30:55Z",
        "body": "I'm writing the mail from Outlook and simply writing a word in the body. I don't know if Outlook send mails with text/plain format. If it is the case, can I try HtmlBody instead? Thank you very much!"
      },
      {
        "user": "mavel72",
        "created_at": "2019-03-19T13:37:06Z",
        "body": "Ok I tried HtmlBody and it gets the body. Thanks for your time."
      },
      {
        "user": "mavel72",
        "created_at": "2019-03-19T13:49:59Z",
        "body": "Anyways, how can I convert html to get only the \"text\" part of htmlbody?"
      },
      {
        "user": "jstedfast",
        "created_at": "2019-03-19T14:12:59Z",
        "body": "Converting HTML into plain text is not a lossless conversion, you're going to lose formatting.\r\n\r\nBut if that's really what you want to do, you can either use the MimeKit.Text.HtmlTokenizer to parse the HTML and just extract out the character data.\r\n\r\nfor example:\r\n\r\n```csharp\r\nusing (var reader = new StringReader (message.HtmlBody)) {\r\n    var tokenizer = new HtmlTokenizer (reader);\r\n    HtmlToken token;\r\n    \r\n    while (tokenizer.ReadNextToken (out token)) {\r\n        switch (token.Kind) {\r\n\tcase HtmlTokenKind.Data:\r\n\t    var text = (HtmlDataToken) token;\r\n            Console.Write (text.Data);\r\n            break;\r\n        case HtmlTokenKind.Tag:\r\n            var tag = (HtmlTagToken) token;\r\n            switch (tag.Id) {\r\n            case HtmlTagId.Br:\r\n            case HtmlTagId.P:\r\n                Console.WriteLine ();\r\n                break;\r\n            }\r\n            break;\r\n    }\r\n}\r\n```"
      },
      {
        "user": "mavel72",
        "created_at": "2019-03-19T14:15:57Z",
        "body": "Thank you very much, I have to send body text to a telegram bot so I need ony plain text."
      },
      {
        "user": "jstedfast",
        "created_at": "2019-03-19T14:26:02Z",
        "body": "Just change your Outlook settings to send plain text instead of HTML"
      },
      {
        "user": "mavel72",
        "created_at": "2019-03-19T14:30:29Z",
        "body": "Thanks!!!"
      }
    ]
  },
  {
    "number": 828,
    "title": "Is this the right way to use Proxy Support?",
    "created_at": "2019-03-10T17:17:17Z",
    "closed_at": "2019-03-10T19:58:20Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/828",
    "body": "So I'm trying to connect via A sock5 port into imap Client. I cant set UserName I get NullReference.\r\nThe current example is with example links none are real host etc..\r\n```\r\nusing (var client = new ImapClient())\r\n{\r\n    client.ProxyClient = new Socks5Client(\"host\", 88);\r\n   client.ProxyClient.ProxyCredentials.UserName = \"username\";\r\n   client.ProxyClient.ProxyCredentials.Password = \"password\";\r\n\r\n   client.ProxyClient.Connect(\"imap.example.com\", 9951);\r\n   client.Authenticate(\"mail\", \"passowrd\");\r\n}\r\n```\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/828/comments",
    "author": "nik0s100",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2019-03-10T19:58:20Z",
        "body": "No.\r\n\r\n```csharp\r\nusing (var client = new ImapClient ()) {\r\n    var credentials = new NetworkCredential (\"username\", \"password\");\r\n    client.ProxyClient = new Socks5Client (\"host\", 88, credentials);\r\n    client.Connect (\"imap.example.com\", 995, SecureSocketOptions.SslOnConnect);\r\n    client.Authenticate (\"username\", \"password\");\r\n}\r\n```"
      },
      {
        "user": "OleksiiShabala",
        "created_at": "2019-03-27T16:48:19Z",
        "body": "Hello Jeffrey,\r\n\r\nis it the same approach for smtp client please?\r\n\r\nThanks."
      },
      {
        "user": "jstedfast",
        "created_at": "2019-03-27T17:29:16Z",
        "body": "Yes, it is the same for all clients."
      }
    ]
  },
  {
    "number": 824,
    "title": "Question: Is it possible to write a message directly in a POP3 mailbox",
    "created_at": "2019-02-28T10:52:49Z",
    "closed_at": "2019-02-28T13:42:51Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/824",
    "body": "I know that it is possible with IMAP (because I already have done that). But is writing a message directly in a mailbox also possible with a POP3Client?",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/824/comments",
    "author": "Sicos1977",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2019-02-28T13:42:51Z",
        "body": "Not possible, POP3 only allows downloading.\r\n\r\nWhat you *could* do is send a message to that mailbox via SMTP."
      }
    ]
  },
  {
    "number": 821,
    "title": "text-only PDFs corrupt when being emailed",
    "created_at": "2019-02-20T23:38:53Z",
    "closed_at": "2019-02-21T02:09:26Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/821",
    "body": "When a text-only (i.e - no image or other binary data) PDF is emailed, the PDF received shows as a blank document. \r\n\r\nWe did a hexadecimal compare of the original and the received PDF, and wherever the original PDF had a 0A (10) byte, the original file had a 0A followed by 1D (13). It appears as though whenever there was a newline in the original PDF, the received PDF had a newline followed by a carriage return. This suggests that Mailkit is treating the PDF as text and adding extra carriage returns, when it should not. \r\n\r\nAs a workaround, you can prevent this behaviour by adding any kind of image (even a 1x1 white pixel) to the PDF and it'll then be emailed correctly. ",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/821/comments",
    "author": "jsultana-jeal",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2019-02-21T02:09:26Z",
        "body": "Make sure to send PDF's as base64 and not quoted-printable.\r\n\r\nThis is up to you to determine."
      }
    ]
  },
  {
    "number": 820,
    "title": "How get full header email after send by SMTP",
    "created_at": "2019-02-19T17:14:33Z",
    "closed_at": "2019-02-19T17:16:28Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/820",
    "body": "Hello, \r\n\r\nI trying to get full header information added by Smtp server when message have been sent inside SmtpClient_MessageSent event. When i read MimeMessage and convert it into a Raw message i can't see some importants Headers informations like DKIM-SIGNATURE or Date and all other added by smtp server. A way to do that ?\r\n\r\nThank.",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/820/comments",
    "author": "ghost",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2019-02-19T17:16:28Z",
        "body": "If you Cc or Bcc yourself and then download the sent message via POP3 or IMAP, I suppose you could get that info, but otherwise, no."
      }
    ]
  },
  {
    "number": 816,
    "title": "ImapClient.FolderCreated, IMailFolder.Subscribed, IMailFolder.Unsubscribed not firing",
    "created_at": "2019-02-08T01:11:22Z",
    "closed_at": "2019-02-08T17:24:50Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/816",
    "body": "Are the above events currently supported? I added handlers for each one to the ImapIdle demo project and tested on several different IMAP servers, but have been unable to get them to fire. No special considerations are mentioned in the documentation. Perhaps support is currently limited?",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/816/comments",
    "author": "pm64",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2019-02-08T17:24:50Z",
        "body": "They are fully supported as far as the IMAP protocol allows them to be.\r\n\r\nIn most cases, those events will only fire when a folder is created, subscribed, or unsubscribed using the same MailKit client.\r\n\r\nIf you watch for those events in a MailKit client and create/subscribe/unsubscribe folders in another client, no matter what implementation those other clients used, you will not get the events because the base IMAP protocol does not support this.\r\n\r\nCheck out the docs on the IMAP NOTIFY extension to see where these events can be emitted when another client makes those state changes on the server."
      }
    ]
  },
  {
    "number": 813,
    "title": "Different authentication mechanisms & capabilities when used on a server",
    "created_at": "2019-02-04T15:35:10Z",
    "closed_at": "2019-02-04T16:43:20Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/813",
    "body": "While using MailKit in a web service (run on an IIS web server) I got the error message `SMTP Server does not support authentication`. It was working on my local machine but now it is not working on the server.\r\n\r\nThe error appears because of the following code lines in MailKit:\r\n\r\n```csharp\r\n\r\nif ((capabilities & SmtpCapabilities.Authentication) == 0)\r\n   throw new NotSupportedException (\"The SMTP server does not support authentication.\");\r\n```\r\n\r\nI figured out that when I use it **locally** I get the following properties:\r\n\r\n**AuthMechanisms:**\r\n`NTLM, LOGIN, GSSAPI`\r\n\r\n**Capabilities:**\r\n`Size, Dsn, EnhancedStatusCodes, Authentication, EightBitMime, Pipelining, BinaryMime, Chunking`\r\n\r\n---\r\n\r\nWhen I use it **on the server** I get the following properties:\r\n\r\n**AuthMechanisms:**\r\n*None*\r\n\r\n**Capabilities:**\r\n`Size, Dsn, EnhancedStatusCodes, EightBitMime, Pipelining, BinaryMime, Chunking`\r\n\r\n**Why are the authentication mechanisms & capabilities different even though I connect the same way locally and on the server?**\r\n\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/813/comments",
    "author": "adrianriepl",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2019-02-04T16:43:20Z",
        "body": "Maybe your SMTP server responds different depending on which network the incoming connection is coming from?\r\n\r\nWho knows. You need to ask your admin."
      },
      {
        "user": "adrianriepl",
        "created_at": "2019-02-04T16:48:23Z",
        "body": "Okay, that's what I thought too but I wasn't sure. Thanks for your help."
      }
    ]
  },
  {
    "number": 811,
    "title": "office365 An existing connection was forcibly closed by the remote host.",
    "created_at": "2019-01-29T23:01:08Z",
    "closed_at": "2019-01-30T12:53:08Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/811",
    "body": "Hey,\r\n\r\nI'm running into the following exception when connecting to an office365 account.\r\n\r\n``2019-01-29 21:28:20.0421 ERROR System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host. ---> System.Net.Sockets.SocketException: An existing connection was forcibly closed by the remote host\r\n   at System.Net.Sockets.Socket.Receive(Byte[] buffer, Int32 offset, Int32 size, SocketFlags socketFlags)\r\n   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)\r\n   at System.Net.FixedSizeReader.ReadPacket(Byte[] buffer, Int32 offset, Int32 count)\r\n   at System.Net.Security._SslStream.StartFrameHeader(Byte[] buffer, Int32 offset, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security._SslStream.StartReading(Byte[] buffer, Int32 offset, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security._SslStream.ProcessRead(Byte[] buffer, Int32 offset, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.Read(Byte[] buffer, Int32 offset, Int32 count)\r\n   at MailKit.Net.Imap.ImapStream.<ReadAheadAsync>d__55.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at MailKit.Net.Imap.ImapStream.<ReadTokenAsync>d__70.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at MailKit.Net.Imap.ImapCommand.<StepAsync>d__79.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at MailKit.Net.Imap.ImapEngine.<IterateAsync>d__170.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at MailKit.Net.Imap.ImapEngine.<RunAsync>d__171.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at MailKit.Net.Imap.ImapEngine.<QueryCapabilitiesAsync>d__175.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at MailKit.Net.Imap.ImapClient.<ConnectAsync>d__89.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at MailKit.Net.Imap.ImapClient.Connect(String host, Int32 port, SecureSocketOptions options, CancellationToken cancellationToken)\r\n   at MailKit.MailService.Connect(String host, Int32 port, Boolean useSsl, CancellationToken cancellationToken)\r\n   at MailKitDemo.Program.IMAPConnect(Action`1 action, EmailSettings set) in D:\\Users\\tvcsa\\OneDrive\\Documents\\Visual Studio 2017\\Projects\\MailKitDemo\\MailKitDemo\\Program.cs:line 28\r\n   at MailKitDemo.Program.<>c__DisplayClass3_0.<Main>b__0(Object x) in D:\\Users\\tvcsa\\OneDrive\\Documents\\Visual Studio 2017\\Projects\\MailKitDemo\\MailKitDemo\\Program.cs:line 67 System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host. ---> System.Net.Sockets.SocketException: An existing connection was forcibly closed by the remote host``\r\n\r\nThis appears to be quite random and it is not always happening :S. Can you please help me try to figure out what is the possible cause of the exception. I've made a simple demo test case in order to reproduce this behaviour\r\n\r\n```csharp\r\nusing MailKit.Net.Imap;\r\nusing System;\r\nusing System.Threading;\r\n\r\nnamespace MailKitDemo\r\n{\r\n    public class EmailSettings\r\n    {\r\n        public string Email { get; set; }\r\n        public string Password { get; set; }\r\n        public string Token { get; set; }\r\n        public string SMTPURL { get; set; }\r\n        public int SMTPPort { get; set; }\r\n        public bool SMTPRequireSSL { get; set; }\r\n        public string IMAPURL { get; set; }\r\n        public int IMAPPort { get; set; }\r\n        public bool IMAPRequireSSL { get; set; }\r\n    }\r\n\r\n    class Program\r\n    {\r\n        protected static NLog.ILogger logger = NLog.LogManager.GetCurrentClassLogger();\r\n\r\n        private static void IMAPConnect(Action<ImapClient> action, EmailSettings set)\r\n        {\r\n            using (var imapClient = new ImapClient())\r\n            {\r\n                imapClient.Connect(set.IMAPURL, set.IMAPPort, set.IMAPRequireSSL);\r\n\r\n                if (string.IsNullOrEmpty(set.Token))\r\n                {\r\n                    imapClient.AuthenticationMechanisms.Remove(\"XOAUTH2\");\r\n                    imapClient.Authenticate(set.Email, set.Password);\r\n                }\r\n                else\r\n                {\r\n                    imapClient.Authenticate(set.Email, set.Token);\r\n                }\r\n\r\n                action(imapClient);\r\n\r\n                imapClient.Disconnect(true);\r\n            }\r\n        }\r\n\r\n        private static void DummyAction(ImapClient client)\r\n        {\r\n            logger.Info(\"DummyAction Executed!\");\r\n        }\r\n\r\n        static void Main(string[] args)\r\n        {\r\n            EmailSettings emailSettings = new EmailSettings\r\n            {\r\n                Email = \"xxx@yyy.com\",\r\n                Password = \"password\",\r\n                IMAPURL = \"outlook.office365.com\",\r\n                IMAPPort = 993,\r\n                IMAPRequireSSL = true\r\n            };\r\n\r\n            ;\r\n\r\n            var timer = new Timer(x => {\r\n                try\r\n                {\r\n                    IMAPConnect(DummyAction, emailSettings);\r\n                } catch(Exception e)\r\n                {\r\n                    logger.Error(e);\r\n                }\r\n            });\r\n            timer.Change(0, 60000);\r\n\r\n            bool exit = false;\r\n            do\r\n            {\r\n                string s = Console.ReadLine();\r\n                switch (s)\r\n                {\r\n                    case \"exit\":\r\n                        exit = true;\r\n                        break;\r\n                }\r\n            } while (!exit);\r\n        }\r\n    }\r\n}\r\n```\r\nSometimes the exception changes to `System.IO.IOException: Unable to read data from the transport connection: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond. ---> System.Net.Sockets.SocketException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond`\r\n\r\nThanks\r\n\r\nBest,\r\nTiago\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/811/comments",
    "author": "tvcsantos",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2019-01-30T12:53:08Z",
        "body": "This is just standard TCP/IP errors when the network is congested. There's no fix for this other than to handle the exception and reconnect and try again."
      }
    ]
  },
  {
    "number": 810,
    "title": "MailKit Pop3 DeleteMessage followed by Disconnect....",
    "created_at": "2019-01-26T01:40:29Z",
    "closed_at": "2019-01-26T02:34:17Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/810",
    "body": "MailKit Pop3 DeleteMessage followed by Disconnect....deletes messages.  Yea.\r\nOn Exchange Server, however, it does not put the 'deleted' message into the deleted folder.\r\nIs there a way to move it to \"deleted' or to another folder?  I know, this is an IMAP function, not Pop3, but hey, I can ask?   I want to find a way to preserve the original email.  \r\n\r\nThe other option is when inbox scanned a second time, not to see previously seen email.",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/810/comments",
    "author": "e-novative",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2019-01-26T02:34:17Z",
        "body": "that's not something that can be done using POP3. You need to use IMAP."
      }
    ]
  },
  {
    "number": 797,
    "title": "ProtocolLogger for applicationLogging",
    "created_at": "2018-12-27T16:39:13Z",
    "closed_at": "2018-12-27T16:52:52Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/797",
    "body": "Answering your query on closed request #796 :\r\nI think it is for tracing out client connection life cycle and looks for smtp commands n exceptions(m using smtp server).\r\nI am trying to ascertain if the placeholders like LogClient & LogServer could be plugged with DAL layer so that whatever is spit out in LogClient & LogServer can be persisted in db. But as I saw a generated log file, I see that these methods are called multiple times during the whole lifecycle so it may not be a good idea to call DAL layer from these methods. I am thinking once the connection is disconnected, I can graze out the entire generated log and persist in one call to db. Any suggestions ?",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/797/comments",
    "author": "coding786",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2018-12-27T16:52:52Z",
        "body": "You don't need to open a new issue every time you respond. I still get notifications (and will still respond) to issues that have been closed.\r\n\r\nThanks."
      }
    ]
  },
  {
    "number": 796,
    "title": "ProtocolLogger for applicationLogging ? ",
    "created_at": "2018-12-27T11:45:12Z",
    "closed_at": "2018-12-27T15:48:27Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/796",
    "body": "I wish to ascertain purpose of ProtocolLogger. Is this used for email server tracing purposes (like connection, mail success/failure) or it can be used for application Logging as well ? \r\n\r\nAs LogClient & LogServer methods are called multiple times during a single mail request response cycle - should these placeholders be used for application local database logging ? ",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/796/comments",
    "author": "coding786",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2018-12-27T15:48:27Z",
        "body": "Can I ask you an honest question? What do YOU think it's for?"
      },
      {
        "user": "coding786",
        "created_at": "2018-12-27T16:36:04Z",
        "body": "I think it is for tracing out client connection life cycle and looks for smtp commands n exceptions(m using smtp server).\r\nI am trying to ascertain if the placeholders like LogClient & LogServer could be plugged with DAL layer so that whatever is spit out in LogClient & LogServer can be persisted in db. But as I saw a generated log file, I see that these methods are called multiple times during the whole lifecycle so it may not be a good idea to call DAL layer from these methods. I am thinking once the connection is disconnected, I can graze out the entire generated log and persist in one call to db. Any suggestions ? "
      },
      {
        "user": "jstedfast",
        "created_at": "2018-12-27T16:52:08Z",
        "body": "Yes, the LogClient and LogServer methods are called multiple times per session (in a typical scenario, at least).\r\n\r\nYou could log to a MemoryStream using the default ProtocolLogger (make sure to pass `true` as the `leaveOpen` parameter) and then write the contents of the MemoryStream to your database once the client connection has been closed."
      }
    ]
  },
  {
    "number": 795,
    "title": "Protocol Logger in Multi-Threaded scenario",
    "created_at": "2018-12-27T11:23:25Z",
    "closed_at": "2018-12-27T15:29:01Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/795",
    "body": "Does ProtocolLogger implementation logs individually on each thread or is logging common for all threads in an app domain by default ? In other words, will all users share the same logging implementation ?\r\n\r\nWhat is the suggestion to use IProtocollogger in multi -thread scenario ?  ",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/795/comments",
    "author": "coding786",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2018-12-27T15:29:01Z",
        "body": "Each instance of a protocol logger is tied to an individual client connection, so there is no need for multi-threaded support because you cannot access a client connection from multiple threads at the same time anyway."
      }
    ]
  },
  {
    "number": 793,
    "title": "Contents of Buffer in LogClient & LogServer Methods",
    "created_at": "2018-12-24T11:51:43Z",
    "closed_at": "2018-12-24T13:36:53Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/793",
    "body": "I am developing a custom implementation of IProtocol Logger.\r\n\r\nHow best can we extract contents of Buffer bytes array into a C# object ? I want to log Buffer information in my custom database from LogClient & LogServer methods. Any samples ? ",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/793/comments",
    "author": "coding786",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2018-12-24T13:36:53Z",
        "body": "I don't have any samples for you, sorry. You'll have to figure that out on your own based on the type of database you are using and how you want to represent that data.\r\n"
      }
    ]
  },
  {
    "number": 791,
    "title": "folder.Open command fails",
    "created_at": "2018-12-19T20:39:52Z",
    "closed_at": "2018-12-19T22:01:23Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/791",
    "body": "I am writing a tool using MailKit to dump an email account from a hosted Exchange server to a MySQL database. I have run into an issue where I cannot access several mailboxes (folders) in the account. The curious thing about this is that all of the other folders work fine and even the problem folders will still open in Outlook. I would suspect some issue with the folders themselves if it weren't for the fact that they open in Outlook.\r\n\r\n**Desktop (please complete the following information):**\r\n - OS: Windows 10\r\n\r\n**Additional context**\r\nProtocol Log:\r\nS: * OK E16DN25B-S1E7 IMAP4 service is ready.\r\nC: A00000000 CAPABILITY\r\nS: * CAPABILITY IMAP4 IMAP4rev1 AUTH=PLAIN STARTTLS SASL-IR UIDPLUS MOVE ID UNSELECT CHILDREN IDLE NAMESPACE LITERAL+\r\nS: A00000000 OK CAPABILITY completed.\r\nC: A00000001 AUTHENTICATE PLAIN AGluZm9fYXJjaGl2ZTFAc3BlY3RyYNvbmljcy5uZXQAN1NxWWZOcXMjZDg=\r\nS: A00000001 OK AUTHENTICATE completed.\r\nC: A00000002 CAPABILITY\r\nS: * CAPABILITY IMAP4 IMAP4rev1 AUTH=PLAIN SASL-IR UIDPLUS MOVE ID UNSELECT CLIENTNETWORKPRESENCELOCATION CHILDREN IDLE NAMESPACE LITERAL+\r\nS: A00000002 OK CAPABILITY completed.\r\nC: A00000003 NAMESPACE\r\nS: * NAMESPACE ((\"\" \"/\")) NIL NIL\r\nS: A00000003 OK NAMESPACE completed.\r\nC: A00000004 LIST \"\" \"INBOX\"\r\nS: * LIST (\\Marked \\HasChildren) \"/\" INBOX\r\nS: A00000004 OK LIST completed.\r\nC: A00000005 LIST \"\" \"%\"\r\nS: * LIST (\\HasNoChildren) \"/\" Calendar\r\nS: * LIST (\\HasChildren) \"/\" Contacts\r\nS: * LIST (\\HasNoChildren \\Trash) \"/\" \"Deleted Items\"\r\nS: * LIST (\\HasNoChildren \\Drafts) \"/\" Drafts\r\nS: * LIST (\\Marked \\HasChildren) \"/\" INBOX\r\nS: * LIST (\\HasNoChildren) \"/\" Journal\r\nS: * LIST (\\HasNoChildren \\Junk) \"/\" \"Junk E-mail\"\r\nS: * LIST (\\HasNoChildren) \"/\" Notes\r\nS: * LIST (\\HasNoChildren) \"/\" Outbox\r\nS: * LIST (\\HasChildren \\Sent) \"/\" \"Sent Items\"\r\nS: * LIST (\\HasNoChildren) \"/\" \"Suggested Contacts\"\r\nS: * LIST (\\HasChildren) \"/\" \"Sync Issues\"\r\nS: * LIST (\\HasNoChildren) \"/\" Tasks\r\nS: A00000005 OK LIST completed.\r\nRoot folder: Sent Items\r\nC: A00000006 LIST \"\" \"Sent Items/%\"\r\nS: * LIST (\\HasNoChildren) \"/\" \"Sent Items/2006\"\r\nS: * LIST (\\HasNoChildren) \"/\" \"Sent Items/2007\"\r\nS: * LIST (\\HasNoChildren) \"/\" \"Sent Items/2008\"\r\nS: * LIST (\\HasNoChildren) \"/\" \"Sent Items/2009\"\r\nS: * LIST (\\HasNoChildren) \"/\" \"Sent Items/2010\"\r\nS: * LIST (\\HasNoChildren) \"/\" \"Sent Items/2011\"\r\nS: * LIST (\\HasNoChildren) \"/\" \"Sent Items/2012\"\r\nS: * LIST (\\HasNoChildren) \"/\" \"Sent Items/2013\"\r\nS: * LIST (\\HasNoChildren) \"/\" \"Sent Items/2014\"\r\nS: A00000006 OK LIST completed.\r\nC: A00000007 EXAMINE \"Sent Items/2008\"\r\nS: A00000007 NO Server Unavailable. 15\r\n\r\nException Details:\r\nMailKit.Net.Imap.ImapCommandException\r\n  HResult=0x80131500\r\n  Message=The IMAP server replied to the 'EXAMINE' command with a 'NO' response: Server Unavailable. 15\r\n  Source=MailKit\r\n  StackTrace:\r\n   at MailKit.Net.Imap.ImapFolder.<OpenAsync>d__21.MoveNext()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at MailKit.Net.Imap.ImapFolder.Open(FolderAccess access, CancellationToken cancellationToken)\r\n   at ImapCopy2.Program.Main(String[] args) in E:\\Documents\\Spectrasonics\\VS_projects\\ImapCopy2\\ImapCopy2\\Program.cs:line 44\r\n\r\nI'm pretty new to IMAP, so I greatly appreciate any help you can give me.\r\n-Lee",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/791/comments",
    "author": "lsamdahl",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2018-12-19T22:01:23Z",
        "body": "```\r\nC: A00000007 EXAMINE \"Sent Items/2008\"\r\nS: A00000007 NO Server Unavailable. 15\r\n```\r\n\r\nBased on the log, I can't tell you why the server is refusing to open that folder, but it is saying you can't open it.\r\n\r\nNormally if a folder is meant to be un-openable, it will have the `\\Noselect` flag on it in the `LIST` response, but yours does not.\r\n\r\nYou'll need to contact your admin to ask why.\r\n\r\nAs for why Outlook works, it's probably because it isn't using IMAP but is instead using the Exchange protocol?"
      }
    ]
  },
  {
    "number": 783,
    "title": "Bounce email handler",
    "created_at": "2018-12-04T05:28:50Z",
    "closed_at": "2018-12-04T12:23:04Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/783",
    "body": "After sending a group of emails I need to have the bounced email messages(delivery failure emails) to go to a specific email address that is different than the \"from email\" address. I tried using: \r\nclient.Send(mimeMessage, new MailboxAddress(\"email_that_bounced_emails_should_go\"), mimeMessage.To.Mailboxes);\r\n\r\nbut that did not work and it sends the delivery failure/bounce message to the from email address. I have gone through the documentation but I am wondering if I am missing something. Is this possible for MailKit? \r\n\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/783/comments",
    "author": "Tilly28",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2018-12-04T12:23:04Z",
        "body": "As far as I can tell from the specifications, the way to specify which address is used by the SMTP server to send delivery notifications to, it is the address used in the `MAIL FROM` command which is exactly what you are already doing with your `new MailboxAddress(\"email_that_bounced_emails_should_go\")`.\r\n\r\nIf that doesn't work, then it might be that your SMTP server is not allowing you to use an address that isn't your account address.\r\n\r\nFor example, if you are sending mail via GMail, they won't let you use an address other than your actual address due to wanting to discourage spammers."
      }
    ]
  },
  {
    "number": 769,
    "title": "Draft messages async, save and edit",
    "created_at": "2018-10-12T23:01:55Z",
    "closed_at": "2018-10-13T00:43:47Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/769",
    "body": "Hello:\r\n\r\nI wonder how can edit and save messages on draft folder?. \r\n\r\nWell, as a common client email, they have an option to save as draft. However, it works when an user clics on a button. how can I save messages like Gmail?. Its process is async, I gues it could be that. Maybe can you orientain me?  \r\n\r\nI think to do it like this:\r\n- When I save a message, I generate an ID using: \r\n\r\nmMessage.MessageId = MimeKit.Utils.MimeUtils.GenerateMessageId();\r\ndraftfolder.Append(mMessage, MessageFlags.Seen, mMessage.Date);\r\n\r\nThe message is save on the draft folder. After that, I have a doubt,When I have to save new changes of the message, do I have to delete this message and generate other id and save it again?. \r\n\r\nWhat would be the correct process in order to have an async process for draft email?\r\n\r\nCan you help me?.\r\n \r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/769/comments",
    "author": "juansh20",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2018-10-13T00:43:47Z",
        "body": "You mostly have it correct:\r\n\r\n```csharp\r\nmMessage.MessageId = MimeKit.Utils.MimeUtils.GenerateMessageId();\r\ndraftfolder.Append(mMessage, MessageFlags.Seen | MessageFlags.Draft);\r\n```\r\n\r\nThe 2 changes I made to your code above are:\r\n\r\n1. Set the \\Draft flag\r\n2. Don't set the INTERNALDATE (aka \"arrived date\") to the message's Date: header value, allow the IMAP server to set it to the current clock date/time value. There's no point in setting it to the message's Date: header.\r\n\r\n> The message is save on the draft folder. After that, I have a doubt,When I have to save new changes of the message, do I have to delete this message and generate other id and save it again?\r\n\r\nYes. You can re-use the same message-id, though. Or you can generate a new one. It doesn't really matter.\r\n\r\n> What would be the correct process in order to have an async process for draft email?\r\n\r\n```csharp\r\nmMessage.MessageId = MimeKit.Utils.MimeUtils.GenerateMessageId();\r\nawait draftfolder.AppendAsync(mMessage, MessageFlags.Seen | MessageFlags.Draft);\r\n```\r\n\r\nI get the feeling that's not what you are trying to ask, but I don't know what else you can mean.\r\n\r\nEither way, I hope that helps."
      }
    ]
  },
  {
    "number": 767,
    "title": "\"Cannot assign requested address\" with GMail from docker",
    "created_at": "2018-10-11T15:40:57Z",
    "closed_at": "2018-10-11T16:51:18Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/767",
    "body": "**Describe the bug**\r\nI have a backend application with microservice architecture. One of microservice is email gateway which is .NET Core 2.1 application with MailKit library. This gateway works well on my developer machine (Windows 10 without docker). But on my staging server with docker infrastructure I get following error when I try to send email via GMail:\r\n\r\n```\r\nSystem.Net.Internals.SocketExceptionFactory+ExtendedSocketException (99): Cannot assign requested address [2a00:1450:400c:c0c::6d]:465\r\n   at System.Net.Sockets.Socket.DoConnect(EndPoint endPointSnapshot, SocketAddress socketAddress)\r\n   at System.Net.Sockets.Socket.Connect(EndPoint remoteEP)\r\n   at System.Net.Sockets.Socket.Connect(IPAddress address, Int32 port)\r\n   at MailKit.Net.Smtp.SmtpClient.ConnectAsync(String host, Int32 port, SecureSocketOptions options, Boolean doAsync, CancellationToken cancellationToken)\r\n   at Dzing.Gateway.Email.Services.EmailService.SendMessageAsync(String to, String templateName, Dictionary`2 arguments, String locale, CancellationToken cancellationToken) in /src/Dzing.Gateway.Email/Services/EmailService.cs:line 42\r\n   at Dzing.Utils.WorkerBase.<>c_DisplayClass29_0`2.<<ConsumeMessage>b_0>d.MoveNext() in /src/Dzing.Utils/WorkerBase.cs:line 117\r\n```\r\n\r\nHere is my gateway code:\r\n\r\n```csharp\r\n            using (var client = new SmtpClient())\r\n            {\r\n                await client.ConnectAsync(this.Configuration.Host, this.Configuration.Port ?? 0, this.Configuration.UseSsl, cancellationToken);\r\n                client.AuthenticationMechanisms.Remove(\"XOAUTH2\");\r\n                if (!string.IsNullOrEmpty(this.Configuration.Username))\r\n                    await client.AuthenticateAsync(this.Configuration.Username, this.Configuration.Password, cancellationToken);\r\n\r\n                var message = new MimeMessage();\r\n                message.From.Add(MailboxAddress.Parse(this.Configuration.From));\r\n                message.To.Add(new MailboxAddress(to));\r\n\r\n                if (string.IsNullOrEmpty(templateName))\r\n                    templateName = _defaultTemplateName;\r\n                if (string.IsNullOrEmpty(locale))\r\n                    locale = _defaultLocale;\r\n\r\n                var template = File.ReadAllText(Path.Combine(AppContext.BaseDirectory, \"Resources\", string.Format(\"{0}.{1}.html\", templateName, locale)));\r\n                var messageBody = template;\r\n                if (arguments != null)\r\n                {\r\n                    foreach (var keyValuePair in arguments)\r\n                        messageBody = messageBody.Replace(string.Format(\"{{{0}}}\", keyValuePair.Key), keyValuePair.Value);\r\n                }\r\n\r\n                message.Body = new TextPart(TextFormat.Html)\r\n                {\r\n                    Text = messageBody\r\n                };\r\n\r\n                var subjectMatch = Regex.Match(template, \"<title>([^<]+)</title>\");\r\n                if (subjectMatch.Success)\r\n                    message.Subject = subjectMatch.Groups[1].Value;\r\n\r\n                await client.SendAsync(message, cancellationToken);\r\n                await client.DisconnectAsync(true, cancellationToken);\r\n            }\r\n```\r\n\r\nAnd here is configuration parameters I use:\r\n\r\n```\r\n    \"Host\": \"smtp.gmail.com\",\r\n    \"Port\": 465,\r\n    \"UseSsl\": true,\r\n    \"Username\": \"...\",\r\n    \"Password\": \"***\",\r\n```\r\n\r\n**To Reproduce**\r\nRun specified code with .NET Core 2.1 application inside docker container on Ubuntu machine.\r\n\r\n**Expected behavior**\r\nNo exception expected.\r\n\r\n**Desktop (please complete the following information):**\r\n - OS: Ubuntu 18.04.1 LTS (GNU/Linux 4.15.0-24-generic x86_64)\r\n - Docker version: 18.03.1-ce, build 9ee9f40\r\n - .NET Core 2.1\r\n - MailKit v2.0.4",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/767/comments",
    "author": "grayver",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2018-10-11T16:04:34Z",
        "body": "Can you write a test application that connects a socket to that server / port and does that work?\r\n\r\nIn other words, try something like this:\r\n\r\n```csharp\r\nusing System;\r\nusing System.Net;\r\nusing System.Text;\r\nusing System.Net.Sockets;\r\nusing System.Net.Security;\r\nusing System.Security.Authentication;\r\n\r\nnamespace SslConnect\r\n{\r\n\tclass Program\r\n\t{\r\n\t\tconst SslProtocols DefaultSslProtocols = SslProtocols.Tls | SslProtocols.Tls11 | SslProtocols.Tls12;\r\n\r\n\t\tpublic static void Main (string[] args)\r\n\t\t{\r\n\t\t\tvar host = \"smtp.gmail.com\";\r\n\t\t\tint port = 465;\r\n\r\n\t\t\tIPAddress[] ipAddresses;\r\n\t\t\tSocket socket = null;\r\n\r\n\t\t\tipAddresses = Dns.GetHostAddressesAsync (host).GetAwaiter ().GetResult ();\r\n\r\n\t\t\tfor (int i = 0; i < ipAddresses.Length; i++) {\r\n\t\t\t\tsocket = new Socket (ipAddresses[i].AddressFamily, SocketType.Stream, ProtocolType.Tcp);\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tsocket.Connect (ipAddresses[i], port);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t} catch {\r\n\t\t\t\t\tsocket.Dispose ();\r\n\t\t\t\t\tsocket = null;\r\n\r\n\t\t\t\t\tif (i + 1 == ipAddresses.Length)\r\n\t\t\t\t\t\tthrow;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (socket == null) {\r\n\t\t\t\tConsole.WriteLine (\"Failed to resolve host: {0}\", host);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tusing (var network = new NetworkStream (socket, true)) {\r\n\t\t\t\tusing (var ssl = new SslStream (network, true)) {\r\n\t\t\t\t\tssl.AuthenticateAsClientAsync (host, null, DefaultSslProtocols, true).GetAwaiter ().GetResult ();\r\n\r\n\t\t\t\t\tvar buffer = new byte[1024];\r\n\t\t\t\t\tint nread;\r\n\r\n\t\t\t\t\tnread = ssl.Read (buffer, 0, buffer.Length);\r\n\r\n\t\t\t\t\tConsole.WriteLine (\"S: {0}\", Encoding.UTF8.GetString (buffer, 0, nread));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n```"
      },
      {
        "user": "grayver",
        "created_at": "2018-10-11T16:44:18Z",
        "body": "Here is what I get:\r\n\r\n```\r\nUnhandled Exception: System.Net.Internals.SocketExceptionFactory+ExtendedSocketException: Cannot assign requested address [2a00:1450:400c:c07::6c]:465\r\n   at System.Net.Sockets.Socket.DoConnect(EndPoint endPointSnapshot, SocketAddress socketAddress)\r\n   at System.Net.Sockets.Socket.Connect(EndPoint remoteEP)\r\n   at System.Net.Sockets.Socket.Connect(IPAddress address, Int32 port)\r\n   at SslConnect.Program.Main(String[] args) in /src/Docker.Test/Program.cs:line 28\r\n```"
      },
      {
        "user": "grayver",
        "created_at": "2018-10-11T16:46:24Z",
        "body": "So, it's not a MailKit problem? It seems to be Dns client doesn't see any IPv4 address and fails while connecting to IPv6 address?"
      },
      {
        "user": "jstedfast",
        "created_at": "2018-10-11T16:51:18Z",
        "body": "Yea, that seems to be the problem."
      },
      {
        "user": "grayver",
        "created_at": "2018-10-11T19:47:21Z",
        "body": "Thanks. It was DigitalOcean issue. They are silently block email activity on my droplet."
      }
    ]
  },
  {
    "number": 758,
    "title": "[Question] 5.7.1 Relaying denied - using SMTP Server without username/password",
    "created_at": "2018-09-20T18:46:38Z",
    "closed_at": "2018-09-20T18:50:03Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/758",
    "body": "I expect that it is obvious if you support sending SMTP without callling `Authenticate()` but I'm finding that an SMTP server I had no problem connecting to with Node.js NodeMailer - is giving me 5.7.1.\r\n\r\nMy flow:\r\n```\r\ntry\r\n{\r\n    \r\n    await _mailTransport.ConnectAsync(_smtpConfiguration.KerioHost, 25, SecureSocketOptions.None);\r\n    await _mailTransport.SendAsync(mimeMessage);\r\n    await _mailTransport.DisconnectAsync(true);\r\n}\r\ncatch (Exception e)\r\n{\r\n    if (_mailTransport.IsConnected)\r\n    {\r\n        await _mailTransport.DisconnectAsync(true);\r\n    }\r\n    _logger.LogError($\"SendKerio Exception: {e.Message}\", e);\r\n}\r\n```",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/758/comments",
    "author": "mcblair",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2018-09-20T18:50:03Z",
        "body": "That will work as long as you don't need a user name and password.\r\n\r\nYou might want to try getting a protocol log to see why the server is rejecting you.\r\n\r\nSee the FAQ.md file for instructions on how to do that."
      },
      {
        "user": "mcblair",
        "created_at": "2018-09-20T18:58:34Z",
        "body": "Thanks, that didn't make things any clearer though. I understand we received the three Auth types CRAM-MD5, DIGEST-MD5 and NTLM from `Connect()` - does that mean one of those three is required?\r\n```\r\nConnected to smtp://x-inmai01.x.com:25/\r\nS: 220 x-inmai01.x.com Kerio Connect 9.2.5 patch 3 ESMTP ready\r\nC: EHLO [10.21.13.191]\r\nS: 250-x-inmai01.x.com\r\nS: 250-AUTH CRAM-MD5 DIGEST-MD5 NTLM\r\nS: 250-SIZE 41943040\r\nS: 250-STARTTLS\r\nS: 250-ENHANCEDSTATUSCODES\r\nS: 250-8BITMIME\r\nS: 250-PIPELINING\r\nS: 250-ETRN\r\nS: 250-DSN\r\nS: 250 HELP\r\nC: MAIL FROM:<x@x.com>\r\nC: RCPT TO:<x@x.com>\r\nS: 250 2.1.0 Sender <x@x.com> ok\r\nS: 550 5.7.1 Relaying to <x.x@x.com> denied (authentication required)\r\nC: RSET\r\nS: 250 2.0.0 Reset state```"
      },
      {
        "user": "jstedfast",
        "created_at": "2018-09-20T19:23:01Z",
        "body": "No, it means that those are the authentication mechanisms that are available.\r\n\r\nI don't know how Node.js could possibly work when the server clearly requires authentication based on the text of the error message.\r\n\r\n*shrug*\r\n"
      }
    ]
  },
  {
    "number": 757,
    "title": "Not able to read Inbox using IMAP client",
    "created_at": "2018-09-18T10:20:50Z",
    "closed_at": "2018-09-18T11:02:57Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/757",
    "body": "I want to read emails & download attachments from my mailbox (a govt. provided service) using MailKit IMAP client.\r\n\r\n- What were you trying to do?\r\n  Read emails using IMAP client.\r\n\r\n- What happened?\r\n     Exception at  **inbox.Open(FolderAccess.ReadOnly);**\r\n**(Exception: MailKit.Net.Imap.ImapCommandException: 'The IMAP server replied to the 'EXAMINE' command with a 'BAD' response: Unrecognised option condstore on Examine')**\r\n\r\n- What did you expect to happen?\r\n  Successfully get the Read access for the inbox.\r\n\r\n- Step-by-step reproduction instructions and/or a simple test case.\r\n\r\n```\r\nusing (var client = new ImapClient(new ProtocolLogger(\"E:\\\\imap.log\")))\r\n            {\r\n                // For demo-purposes, accept all SSL certificates\r\n                client.ServerCertificateValidationCallback = (s, c, h, e) => true;\r\n\r\n                client.Connect(\"mail.gov.in\", 993, true);\r\n\r\n                client.Authenticate(\"XYZ@abc.gov.in\", \"password\");\r\n                // The Inbox folder is always available on all IMAP servers...\r\n\r\n                var inbox = client.Inbox;\r\n               \r\n                **inbox.Open(FolderAccess.ReadOnly);** Crashed here\r\n\r\n                Console.WriteLine(\"Total messages: {0}\", inbox.Count);\r\n                Console.WriteLine(\"Recent messages: {0}\", inbox.Recent);\r\n\r\n                for (int i = 0; i < 3; i++)\r\n                {\r\n                    var message = inbox.GetMessage(i);\r\n                    Console.WriteLine(\"Subject: {0}\", message.Subject);\r\n                }\r\n\r\n                client.Disconnect(true);\r\n            }\r\n```\r\nIf you got an exception, please include the exception Message *and* StackTrace.\r\n\r\n**(Exception: MailKit.Net.Imap.ImapCommandException: 'The IMAP server replied to the 'EXAMINE' command with a 'BAD' response: Unrecognised option condstore on Examine')**\r\n\r\nimap protocol log:\r\n\r\nConnected to imaps://mail.gov.in:993/\r\nS: * OK [CAPABILITY IMAP4rev1 UIDPLUS CHILDREN NAMESPACE SORT QUOTA ACL STARTTLS AUTH=PLAIN] Messaging Multiplexor (Oracle Communications Messaging Server 7.0.5.31.0 64bit (built May  5 2014))\r\nC: A00000000 AUTHENTICATE PLAIN\r\nS: + \r\nC: AGNiaW11bWJhaS5sZWdhbEBjYmkuZ292LmluAEFjYkAyMDE3\r\nS: A00000000 OK User XYZ.gov.in logged in\r\nC: A00000001 CAPABILITY\r\nS: * CAPABILITY IMAP4 IMAP4rev1 ACL RIGHTS=tekx QUOTA LITERAL+ NAMESPACE UIDPLUS CHILDREN BINARY UNSELECT SORT CATENATE URLAUTH LANGUAGE ESEARCH ESORT THREAD=ORDEREDSUBJECT THREAD=REFERENCES ENABLE QRESYNC CONTEXT=SEARCH CONTEXT=SORT WITHIN SASL-IR SEARCHRES METADATA ID XSENDER X-SUN-SORT ANNOTATE-EXPERIMENT-1 X-UNAUTHENTICATE X-SUN-IMAP XUM1 IDLE\r\nS: A00000001 OK Completed\r\nC: A00000002 NAMESPACE\r\nS: * NAMESPACE ((\"\" \"/\")) ((\"Shared Folders/User/\" \"/\")) ((\"Shared Folders/Public/\" \"/\"))\r\nS: A00000002 OK Completed\r\nC: A00000003 LIST \"\" \"INBOX\"\r\nS: * LIST (\\NoInferiors) \"/\" INBOX\r\nS: A00000003 OK Completed\r\nC: A00000004 EXAMINE INBOX (CONDSTORE)\r\nS: A00000004 BAD Unrecognised option condstore on Examine\r\n\r\n\r\nPlease help.",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/757/comments",
    "author": "iincognitioo",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2018-09-18T11:02:57Z",
        "body": "MailKit is using the `(CONDSTORE)` parameter because your IMAP server claims to support the `QRESYNC` extension.\r\n\r\nFrom rfc5162:\r\n\r\n```\r\n   The quick resync IMAP extension is present if an IMAP4 server returns\r\n   \"QRESYNC\" as one of the supported capabilities to the CAPABILITY\r\n   command.\r\n\r\n   Servers supporting this extension MUST implement and advertise\r\n   support for the [ENABLE] IMAP extension.  Also, the presence of the\r\n   \"QRESYNC\" capability implies support for the [CONDSTORE] IMAP\r\n   extension even if the CONDSTORE capability isn't advertised.\r\n```\r\n\r\nAnd from rfc4551:\r\n\r\n```\r\n   A client supporting CONDSTORE extension indicates its willingness to\r\n   receive mod-sequence updates in all untagged FETCH responses by\r\n   issuing:\r\n\r\n      -  a SELECT or EXAMINE command with the CONDSTORE parameter,\r\n      -  a STATUS (HIGHESTMODSEQ) command,\r\n      -  a FETCH or SEARCH command that includes the MODSEQ message data\r\n         item,\r\n      -  a FETCH command with the CHANGEDSINCE modifier, or\r\n      -  a STORE command with the UNCHANGEDSINCE modifier.\r\n```\r\n\r\nSigh. I wish IMAP server developers read and followed the specifications...\r\n\r\nHere's what you can do, since you don't seem to be trying to use the features that CONDSTORE provide:\r\n\r\nAfter authenticating with the IMAP server, add this bit of code:\r\n\r\n```csharp\r\nclient.Capabilities &= ~(ImapCapabilities.QuickResync | ImapCapabilities.CondStore);\r\n```"
      },
      {
        "user": "iincognitioo",
        "created_at": "2018-09-18T11:19:07Z",
        "body": "Thank you so much.... Worked as explained."
      },
      {
        "user": "jstedfast",
        "created_at": "2018-09-18T13:47:44Z",
        "body": "FWIW, any capability advertised by the server can be manually disabled using that trick above.\r\n\r\nGlad it worked for ya :)"
      }
    ]
  },
  {
    "number": 755,
    "title": "ReplyTo is Difficult for me to set",
    "created_at": "2018-09-17T21:41:12Z",
    "closed_at": "2018-09-18T11:07:30Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/755",
    "body": "**Is your feature request related to a problem? Please describe.**\r\nI'm just wanting to be able to set the reply to property in the MimeMessage so that emails that go out will reply to that property. I can't figure out what I would inherit or use to set this as I've been trying a few things and checking documentation for any answers on how to actually set the property.\r\n\r\n**Describe the solution you'd like**\r\nI can set the to addresses, from addresses, message and body, subject... I'd love to be able to set the reply to property as well or at least know how.\r\n\r\n**Describe alternatives you've considered**\r\nTrying to implement and change the code myself. I'm somewhat new at this so I need documentation that tells me how I would set properties like this with only a getter or at least how they were intended to be used and why I can't set them like other properties that I can set.\r\n\r\n**Additional context**\r\nIf there's anything that helps me set this then please refer me and I would really appreciate it.\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/755/comments",
    "author": "DanJ210",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2018-09-18T11:07:30Z",
        "body": "`MimeMessage.ReplyTo` does not have a setter - the way you add ReplyTo addresses is to add them to the existing `MimeMessage.ReplyTo` list. It works exactly the same way as the `From`, `To`, `Cc`, and `Bcc` properties.\r\n\r\nExample:\r\n\r\n```csharp\r\nvar message = new MimeMessage ();\r\nmessage.ReplyTo.Add (new MailboxAddress (\"My Name\", \"my@address.com\"));\r\n```\r\n"
      },
      {
        "user": "DanJ210",
        "created_at": "2018-09-18T13:17:08Z",
        "body": "Oh. So yea that makes a lot of sense and is definitely a super dumb question. I don't know why I didn't realize that.\r\n\r\nThank you."
      },
      {
        "user": "chartierpw",
        "created_at": "2023-03-19T23:39:21Z",
        "body": "I just installed the latest version of Mailkit/Mimekit (3.6.0/3.6.1) and apparently we are still unable to set the reply to address.  This was supposed to be fixed 4+ years ago, no?  I need to be able to set the reply to address, not being able to do this makes Mailkit/Mimekit useless to me.  Is that change going to be made anytime soon?\r\n\r\nR/\r\nPrescott ...."
      },
      {
        "user": "jstedfast",
        "created_at": "2023-03-20T02:26:03Z",
        "body": "You set the Reply-To addresses like this:\n\n    message.ReplyTo.Add(new MailboxAddress(\"name\", \"user@domain.com\"));"
      },
      {
        "user": "chartierpw",
        "created_at": "2023-03-20T02:35:15Z",
        "body": "Ah ... clearly I didn't look close enough.  Thanks for the reply, I was worried for a second as Xamarin was complaining that System.Net.Mail was obsolete and to switch to Mailkit/Mimekit.\r\n\r\nR/\r\nPrescott ...."
      }
    ]
  },
  {
    "number": 754,
    "title": "Authendication",
    "created_at": "2018-09-17T15:30:09Z",
    "closed_at": "2018-09-17T17:13:42Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/754",
    "body": "Hi,\r\n\r\nThis is not a report for a bug but there is no place to ask this issue that I am having. Basically, I just wanted to know whether there's way of authenticating the mailbox user without a password? \r\n\r\n\t\t\t\tclient.Connect (\"imap.friends.com\", 993, true);\r\n\t\t\t\tclient.Authenticate (\"joey\", \"password\");\r\n\r\nMy client has an email policy where the password is expired every 60 days. So this will be an inconvience since the email reader is a windows application which runs every minute. \r\n\r\nThanks.\r\nJay.\r\n\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/754/comments",
    "author": "madu2003",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2018-09-17T15:46:59Z",
        "body": "But he still has a password, right? I don't know how he would gain access to his IMAP account if he doesn't authenticate."
      }
    ]
  },
  {
    "number": 750,
    "title": "Uncachable OperationCanceledException in MailKit.Net.Imap.ImapStream.Poll",
    "created_at": "2018-09-09T19:10:20Z",
    "closed_at": "2018-09-09T19:27:13Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/750",
    "body": "I want to cancel an idle Request. Due to the fact, that the cancellationToken do not  help (as described in #374), I've created the doneToken as a child of the cancellationToken, so it gets fired when the cancellationToken gets fired. But cancelling the cancellingToken crashes the application with an uncatchable exception.\r\n\r\nMinimal example: (Press Ctrl + C to get the error)\r\n```\r\nstatic void Main(string[] args)\r\n        {\r\n            var imapClient = new ImapClient(new ProtocolLogger(System.Console.OpenStandardOutput()));\r\n            imapClient.Connect(imapDomain);\r\n            imapClient.Authenticate(username, password);\r\n\r\n            var cancellationTokenSource = new CancellationTokenSource();\r\n            // Dependend token, to quit when any of the tokens are fired\r\n            var idleDone = CancellationTokenSource.CreateLinkedTokenSource(cancellationTokenSource.Token);\r\n\r\n            Console.CancelKeyPress += (sender, e) =>\r\n            {\r\n                Console.WriteLine(\"Cancel idle.\");\r\n                try\r\n                {\r\n                    cancellationTokenSource.Cancel(); // <-- Crash occures here\r\n                }\r\n                catch (SystemException)\r\n                {\r\n                    Console.WriteLine(\"SystemException Cancel\");\r\n                }\r\n                Console.WriteLine(\"Idle canceled.\");\r\n            };            \r\n\r\n            var inbox = imapClient.Inbox;\r\n            inbox.Open(FolderAccess.ReadOnly);\r\n            inbox.CountChanged += (sender, e) =>\r\n            {\r\n                Console.WriteLine(\"Inbox count changed.\");\r\n                idleDone.Cancel();\r\n            };\r\n\r\n            try\r\n            {\r\n                if (!imapClient.Capabilities.HasFlag(ImapCapabilities.Idle))\r\n                {\r\n                    Console.WriteLine(\"NoOp\");\r\n                    imapClient.NoOp(cancellationTokenSource.Token);\r\n                    WaitHandle.WaitAny(new[] { cancellationTokenSource.Token.WaitHandle, idleDone.Token.WaitHandle });\r\n                }\r\n                else\r\n                {\r\n                    Console.WriteLine(\"Idle\");\r\n                    imapClient.Idle(idleDone.Token, cancellationTokenSource.Token);\r\n                }\r\n            }\r\n            catch (OperationCanceledException)\r\n            {\r\n                Console.WriteLine(\"OperationCanceledException\");\r\n            }\r\n            catch (SystemException)\r\n            {\r\n                Console.WriteLine(\"SystemException\");\r\n            }\r\n\r\n            Console.WriteLine(\"Done\");\r\n        }\r\n```\r\n\r\nOutput:\r\n```\r\nConnected to imap://[--------------------]:143/?starttls=when-available\r\nS: * OK [CAPABILITY IMAP4rev1 LITERAL+ SASL-IR LOGIN-REFERRALS ID ENABLE IDLE STARTTLS LOGINDISABLED] [--------------------]\r\nC: A00000000 STARTTLS\r\nS: A00000000 OK Begin TLS negotiation now.\r\nC: A00000001 CAPABILITY\r\nS: * CAPABILITY IMAP4rev1 LITERAL+ SASL-IR LOGIN-REFERRALS ID ENABLE IDLE AUTH=PLAIN AUTH=LOGIN\r\nS: A00000001 OK Pre-login capabilities listed, post-login capabilities have more.\r\nC: A00000002 AUTHENTICATE PLAIN [--------------------]\r\nS: A00000002 OK [CAPABILITY IMAP4rev1 LITERAL+ SASL-IR LOGIN-REFERRALS ID ENABLE IDLE SORT SORT=DISPLAY THREAD=REFERENCES THREAD=REFS THREAD=ORDEREDSUBJECT MULTIAPPEND URL-PARTIAL CATENATE UNSELECT CHILDREN NAMESPACE UIDPLUS LIST-EXTENDED I18NLEVEL=1 CONDSTORE QRESYNC ESEARCH ESORT SEARCHRES WITHIN CONTEXT=SEARCH LIST-STATUS BINARY MOVE SPECIAL-USE QUOTA] Logged in\r\nC: A00000003 NAMESPACE\r\nS: * NAMESPACE ((\"\" \"/\")) NIL NIL\r\nS: A00000003 OK Namespace completed (0.000 + 0.000 secs).\r\nC: A00000004 LIST \"\" \"INBOX\"\r\nS: * LIST (\\HasChildren) \"/\" INBOX\r\nS: A00000004 OK List completed (0.000 + 0.000 secs).\r\nC: A00000005 LIST (SPECIAL-USE) \"\" \"*\"\r\nS: * LIST (\\Drafts) \"/\" Drafts\r\nS: * LIST (\\Trash) \"/\" Trash\r\nS: * LIST (\\Sent) \"/\" Sent\r\nS: * LIST (\\Junk) \"/\" Spam\r\nS: A00000005 OK List completed (0.000 + 0.000 secs).\r\nC: A00000006 EXAMINE INBOX (CONDSTORE)\r\nS: * FLAGS (\\Answered \\Flagged \\Deleted \\Seen \\Draft)\r\nS: * OK [PERMANENTFLAGS ()] Read-only mailbox.\r\nS: * 0 EXISTS\r\nS: * 0 RECENT\r\nS: * OK [UIDVALIDITY 1534705621] UIDs valid\r\nS: * OK [UIDNEXT 36] Predicted next UID\r\nS: * OK [HIGHESTMODSEQ 92] Highest\r\nS: A00000006 OK [READ-ONLY] Examine completed (0.000 + 0.000 secs).\r\nIdle\r\nC: A00000007 IDLE\r\nS: + idling\r\nCancel idle.\r\n\r\nUnhandled Exception: System.AggregateException: One or more errors occurred. (One or more errors occurred. (The operation was canceled.)) ---> System.AggregateException: One or more errors occurred. (The operation was canceled.) ---> System.OperationCanceledException: The operation was canceled.\r\n   at System.Threading.CancellationToken.ThrowOperationCanceledException()\r\n   at MailKit.Net.Imap.ImapStream.Poll(SelectMode mode, CancellationToken cancellationToken)\r\n   at MailKit.Net.Imap.ImapStream.FlushAsync(Boolean doAsync, CancellationToken cancellationToken)\r\n   at MailKit.Net.Imap.ImapStream.Flush(CancellationToken cancellationToken)\r\n   at MailKit.Net.Imap.ImapClient.IdleComplete(Object state)\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Threading.CancellationTokenSource.ExecuteCallbackHandlers(Boolean throwOnFirstException)\r\n   --- End of inner exception stack trace ---\r\n   at System.Threading.CancellationTokenSource.ExecuteCallbackHandlers(Boolean throwOnFirstException)\r\n   at System.Threading.CancellationTokenSource.ExecuteCallbackHandlers(Boolean throwOnFirstException)\r\n   --- End of inner exception stack trace ---\r\n   at System.Threading.CancellationTokenSource.ExecuteCallbackHandlers(Boolean throwOnFirstException)\r\n   at Mailkit_Idle.Mailkit_Idle_Main.<>c__DisplayClass3_0.<Main>b__0(Object sender, ConsoleCancelEventArgs e) in D:\\Mailkit_Idle\\Mailkit_Idle_Main.cs:line 26\r\n   at System.Console.HandleBreakEvent(ConsoleSpecialKey controlKey)\r\n   at System.ConsolePal.ControlCHandlerRegistrar.BreakEvent(Int32 controlType)\r\nDrücken Sie eine beliebige Taste . . . (German, \"Press any key\")\r\n```\r\n\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/750/comments",
    "author": "ccvca",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2018-09-09T19:27:13Z",
        "body": "You need to catch `AggregateException`"
      },
      {
        "user": "ccvca",
        "created_at": "2018-09-09T19:38:13Z",
        "body": "Thank you, (I mixed up Exception and SystemException as BaseClass). "
      },
      {
        "user": "ccvca",
        "created_at": "2018-09-10T16:52:53Z",
        "body": "Is it possible to change idle that it do not hang up, when _cancellationTokenSource_ is canceled before _done_?\r\n\r\nThis hangs up (Exception from above occured and then everything blocks):\r\n````\r\ncancellationTokenSource.Cancel();\r\nidleDone.Cancel();\r\n```\r\n\r\nThis works fine:\r\n````\r\ncancellationTokenSource.Cancel();\r\nidleDone.Cancel();\r\n```\r\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2018-09-10T18:20:45Z",
        "body": "it's extremely non-trivial to fix (maybe even impossible). If it was fixable, I would have already fixed it :(\r\n\r\nI've looked into trying to fix it before on several occasions and could not find a cure."
      },
      {
        "user": "ccvca",
        "created_at": "2018-09-10T18:26:06Z",
        "body": "Would it be possible to combine both tokens in a single CancellationTokenSource.CreateLinkedTokenSource-Call and use this Token for the rest of the function?\r\nSo cancelling any of the tokens would result in a termination of the function. "
      },
      {
        "user": "jstedfast",
        "created_at": "2018-09-10T19:02:49Z",
        "body": "That was the very first thing I looked into doing, but that won't work."
      }
    ]
  },
  {
    "number": 746,
    "title": "Cannot open mail folder",
    "created_at": "2018-08-22T10:12:57Z",
    "closed_at": "2018-08-22T11:00:52Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/746",
    "body": "I'm using MailKit for some time now getting to IceWarp mail folders. Up till now succesfully! :)\r\n\r\nRecently the storage directrory on the server has been moved to F: (from C:) and also the IceWarp on the server has been updated to newest version. The IP has not changed.\r\n\r\nFrom than I have problem accessing the folders on the client. One folder is called \"odchozi\".\r\nI can connect, authenticate and if I loop through the GetSubfolders I can see that folder.\r\nHowever once I call mailFolder.Open(FolderAccess.ReadOnly) I get an error \"The IMAP server replied to the 'EXAMINE' command with a 'NO' response: EXAMINE Mailbox does not exist\"\r\nIf I call mailFolder.Open(FolderAccess.ReadWrite) I get an error \"The IMAP server replied to the 'SELECT' command with a 'NO' response: SELECT Mailbox does not exist\"\r\n\r\nWe have the IceWarp outsourced and I'm first trying to ask you if you would not know what could be wrong. I'm not sure if maybe some user rights should be applied to the folders on the server?\r\n\r\n=============================\r\n   at MailKit.Net.Imap.ImapFolder.<OpenAsync>d__21.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at MailKit.Net.Imap.ImapFolder.Open(FolderAccess access, CancellationToken cancellationToken)\r\n   at SyncIceWarp.Module1.ProcessMail(ImapClient client, DateTime qDate, MailTypeType messageType) in C:\\Users\\Jitka Maudrová\\Documents\\Visual Studio 2015\\Projects\\Oresi.ICT\\SyncIceWarp\\Module1.vb:line 136\r\n   at SyncIceWarp.Module1.Main(String[] args) in C:\\Users\\Jitka Maudrová\\Documents\\Visual Studio 2015\\Projects\\Oresi.ICT\\SyncIceWarp\\Module1.vb:line 103",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/746/comments",
    "author": "FishTailTea6",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2018-08-22T11:00:52Z",
        "body": "It sounds like the folder doesn't exist anymore.\r\n\r\nIf the server has changed the storage format and if the \"odchozi\" folder did not contain any messages, but was instead a folder that contained other folders, it is entirely possible that this folder is *now* a non-existent \"ghost\" folder.\r\n\r\nHope that helps."
      }
    ]
  },
  {
    "number": 743,
    "title": "Only one usage of each socket address permitted",
    "created_at": "2018-08-08T09:05:59Z",
    "closed_at": "2018-08-09T10:51:40Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/743",
    "body": "We have started getting this error on our web server. We have multiple applications that need to send emails. I believe the error makes sense as only 1 application can use the socket at a time, but do you have any advice for how to allow multiple applications to send emails?\r\n\r\nOur setup has been running ok for some months and we believe we started getting the error after upgrading to `dotnet core 2.1`, but it may also be due to increased load.\r\n\r\nStack trace\r\n```\r\nSystem.Net.Internals.SocketExceptionFactory+ExtendedSocketException (10048): Only one usage of each socket address (protocol/network address/port) is normally permitted\r\nat System.Net.Sockets.Socket.DoConnect(EndPoint endPointSnapshot, SocketAddress socketAddress)\r\nat System.Net.Sockets.Socket.Connect(EndPoint remoteEP)\r\nat System.Net.Sockets.Socket.Connect(IPAddress address, Int32 port)\r\nat MailKit.Net.Smtp.SmtpClient.ConnectAsync(String host, Int32 port, SecureSocketOptions options, Boolean doAsync, CancellationToken cancellationToken)\r\nat CustomAssembly.Services.EmailService.SendAsync(MimeMessage message) in D:\\a\\1\\s\\WinApps\\CustomAssembly\\Services\\EmailService.cs:line 116\r\n```",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/743/comments",
    "author": "jag43",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2018-08-08T16:42:12Z",
        "body": "Are you setting a `SmtpClient.LocalEndPoint`?"
      },
      {
        "user": "jag43",
        "created_at": "2018-08-09T08:59:31Z",
        "body": "No, I'm guessing I should be setting that with a different port for each application?"
      },
      {
        "user": "jag43",
        "created_at": "2018-08-09T10:51:40Z",
        "body": "I've found port 0 which can be used to automatically assign a free port.\r\n\r\nI highly suspect using this with `SmtpClient.LocalEndPoint` this will solve the error, so I will close the issue.\r\n\r\nThank you for nudging me in the right direction!"
      }
    ]
  },
  {
    "number": 736,
    "title": "mailkit socket problem",
    "created_at": "2018-07-16T17:49:14Z",
    "closed_at": "2018-07-16T18:23:09Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/736",
    "body": "i m using this code : \r\n ipAddress = IPAddress.Parse(\"188.165.250.78\");\r\n                    IPEndPoint localEndp = new IPEndPoint(ipAddress,3836);\r\n                    Socket ssocket = new Socket(ipAddress.AddressFamily,SocketType.Stream, ProtocolType.Tcp);\r\n                    ssocket.Connect(ipAddress,3836);\r\n                    client.Connect(ssocket, \"imap-mail.outlook.com\", 993, SecureSocketOptions.SslOnConnect);\r\n\r\n\r\nbut when i run the app they give this : \r\nFailed to authenticate because the remote site has closed the transport stream.  any help ?",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/736/comments",
    "author": "saadmr",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2018-07-16T18:23:09Z",
        "body": "I don't know, you'll have to use a debugger."
      }
    ]
  },
  {
    "number": 732,
    "title": "convert MimeKit.MimeMessage to System.Net.Mail.MailMessage?",
    "created_at": "2018-07-11T04:20:02Z",
    "closed_at": "2018-07-11T10:14:32Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/732",
    "body": "how i can convert MimeKit.MimeMessage to System.Net.Mail.MailMessage?\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/732/comments",
    "author": "lea-lam",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2018-07-11T10:14:32Z",
        "body": "There's no support for that and I don't plan on implementing that (it doesn't make a whole lot of sense to do)."
      }
    ]
  },
  {
    "number": 720,
    "title": "Fetching email",
    "created_at": "2018-06-12T07:55:13Z",
    "closed_at": "2018-06-12T10:03:28Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/720",
    "body": "What is the best way to fetch emails from the inbox? I need to process them by date (the old ones first) and then mark them as read and move them to another folder. Can you explain me how I can do this?\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/720/comments",
    "author": "maiph",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2018-06-12T10:03:28Z",
        "body": "```csharp\r\nusing (var client = new ImapClient ()) {\r\n    client.Connect (host, port, SslSocketOptions.Auto);\r\n    client.Authenticate (username, password);\r\n    client.Inbox.Open (FolderAccess.ReadWrite);\r\n    for (int i = 0; i < client.Inbox.Count; i++) {\r\n        // if you need to process the message contents, you'll need to fetch the message:\r\n        var message = client.Inbox.GetMessage (i);\r\n\r\n        // to mark the message as read:\r\n        client.Inbox.AddFlags (i, MessageFlags.Seen, true);\r\n\r\n        // to move the message to another folder, you first must get the other folder... where is it?\r\n        // first get the top-level folder for your personal namespace\r\n        var personal = client.GetFolder (client.PersonalNamespaces[0]);\r\n        // get the immediate subfolders of this namespace...\r\n        var subfolders = personal.GetSubfolders ();\r\n        // iterate over the list of subfolders. If the folder you are looking for is a subfolder of one of\r\n        // these folders, use GetSubfolders() again to get the next level of folders and iterate over\r\n        // that list and so on until you fold the folder you are looking for.\r\n\r\n        // to move a message to another folder:\r\n        client.Inbox.MoveTo (i, destinationFolder);\r\n    }\r\n\r\n    client.Disconnect (true);\r\n}\r\n```\r\n\r\nIn case it wasn't obvious, it would be more efficient to mark multiple messages as Seen at the same time. The same goes for moving messages to another folder. You should try to batch these types of operations as much as possible."
      }
    ]
  },
  {
    "number": 716,
    "title": "SIGABRT error on mono ",
    "created_at": "2018-06-04T10:04:53Z",
    "closed_at": "2018-06-04T18:41:40Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/716",
    "body": "Hello,\r\nMy application is running on a linux environment with mono and I'm experiencing a SIGABRT error when I fetch messages from a folder with MailKit.\r\n\r\nThe piece of my code is:\r\n```\r\npublic static void MyFetchMethod (string folderName) {\r\n\tusing(var client = new MailKit.Net.Imap.ImapClient()) {\r\n\t\tServicePointManager.ServerCertificateValidationCallback = delegate { return true; };\r\n\t\tclient.Connect(\"imap.gmail.com\", 993, true);\r\n\t\tclient.AuthenticationMechanisms.Remove(\"XOAUTH2\");\r\n\t\tif(client.IsConnected) {\r\n\t\t\tclient.Authenticate(\"xyz\", \"xyz\");\r\n\t\t\tif(client.IsAuthenticated) {\r\n\t\t\t\tvar folders = client.GetFolders(client.PersonalNamespaces[0]);\r\n\t\t\t\tvar folder = folders.FirstOrDefault(f => f.FullName == folderName || f.Name == folderName);\r\n\t\t\t\tif(folder == null) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tfolder.Open(MailKit.FolderAccess.ReadWrite);\r\n\t\t\t\tvar mails = folder.Fetch(0, -1, MailKit.MessageSummaryItems.UniqueId | MailKit.MessageSummaryItems.Envelope);\r\n\t\t\t\tConsole.WriteLine(mails.Count);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n```\r\n\r\nMailKit version: 2.0.4\r\nMono version: 5.2.0.196\r\n\r\nThis is the error message I have:\r\n```\r\n * Assertion at local-propagation.c:562, condition `ins->opcode > MONO_CEE_LAST' not met\r\n Stacktrace:\r\n   at <unknown> <0xffffffff>\r\n   at System.Collections.Generic.Dictionary`2<string, int>.TryInsert (string,int,System.Collections.Generic.InsertionBehavior) [0x00022] in <8cc12864e331436>\r\n   at System.Collections.Generic.Dictionary`2<string, int>.Add (string,int) [0x00000] in <8cc12864e331436b8312c1d41d21bac3>:0\r\n   at MimeKit.Utils.CharsetUtils.AddAliases (System.Collections.Generic.Dictionary`2<string, int>,int,int,string[]) [0x00011] in <cba5649935944ddda32817356f>\r\n   at MimeKit.Utils.CharsetUtils..cctor () [0x0005f] in <cba5649935944ddda32817356f05efa2>:0\r\n   at (wrapper runtime-invoke) object.runtime_invoke_void (object,intptr,intptr,intptr) [0x0001e] in <8cc12864e331436b8312c1d41d21bac3>:0\r\n   at <unknown> <0xffffffff>\r\n   at (wrapper managed-to-native) object.__icall_wrapper_mono_generic_class_init (intptr) [0x00000] in <8cc12864e331436b8312c1d41d21bac3>:0\r\n   at MimeKit.ParserOptions..ctor () [0x00026] in <cba5649935944ddda32817356f05efa2>:0\r\n   at MimeKit.ParserOptions..cctor () [0x00018] in <cba5649935944ddda32817356f05efa2>:0\r\n   at (wrapper runtime-invoke) object.runtime_invoke_void (object,intptr,intptr,intptr) [0x0001e] in <8cc12864e331436b8312c1d41d21bac3>:0\r\n   at <unknown> <0xffffffff>\r\n   at MimeKit.Utils.Rfc2047.DecodeText (byte[]) [0x0000e] in <cba5649935944ddda32817356f05efa2>:0\r\n   at MailKit.Net.Imap.ImapUtils/<ReadNStringTokenAsync>d__19.MoveNext () [0x00181] in <aa0755c2275a4bb580f223e28ea37c31>:0\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<string>.Start<MailKit.Net.Imap.ImapUtils/<ReadNStringTokenAsync>d__19> (MailKit.Net.Imap.Imap>\r\n   at MailKit.Net.Imap.ImapUtils.ReadNStringTokenAsync (MailKit.Net.Imap.ImapEngine,string,bool,bool,System.Threading.CancellationToken) [0x00044] in <aa075>\r\n   at MailKit.Net.Imap.ImapUtils/<ParseEnvelopeAsync>d__34.MoveNext () [0x001ad] in <aa0755c2275a4bb580f223e28ea37c31>:0\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<MailKit.Envelope>.Start<MailKit.Net.Imap.ImapUtils/<ParseEnvelopeAsync>d__34> (MailKit.Net.Im>\r\n   at MailKit.Net.Imap.ImapUtils.ParseEnvelopeAsync (MailKit.Net.Imap.ImapEngine,bool,System.Threading.CancellationToken) [0x00033] in <aa0755c2275a4bb580f2>\r\n   at MailKit.Net.Imap.ImapFolder/<FetchSummaryItemsAsync>d__150.MoveNext () [0x00fd3] in <aa0755c2275a4bb580f223e28ea37c31>:0\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start<MailKit.Net.Imap.ImapFolder/<FetchSummaryItemsAsync>d__150> (MailKit.Net.Imap.ImapFolder/>\r\n   at MailKit.Net.Imap.ImapFolder.FetchSummaryItemsAsync (MailKit.Net.Imap.ImapEngine,MailKit.Net.Imap.ImapCommand,int,bool) [0x00044] in <aa0755c2275a4bb58>\r\n   at MailKit.Net.Imap.ImapEngine/<ProcessUntaggedResponseAsync>d__167.MoveNext () [0x00c21] in <aa0755c2275a4bb580f223e28ea37c31>:0\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<MailKit.Net.Imap.ImapUntaggedResult>.Start<MailKit.Net.Imap.ImapEngine/<ProcessUntaggedRespon>\r\n   at MailKit.Net.Imap.ImapEngine.ProcessUntaggedResponseAsync (bool,System.Threading.CancellationToken) [0x00033] in <aa0755c2275a4bb580f223e28ea37c31>:0\r\n   at MailKit.Net.Imap.ImapCommand/<StepAsync>d__68.MoveNext () [0x00888] in <aa0755c2275a4bb580f223e28ea37c31>:0\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<bool>.Start<MailKit.Net.Imap.ImapCommand/<StepAsync>d__68> (MailKit.Net.Imap.ImapCommand/<Ste>\r\n   at MailKit.Net.Imap.ImapCommand.StepAsync (bool) [0x0002b] in <aa0755c2275a4bb580f223e28ea37c31>:0\r\n   at MailKit.Net.Imap.ImapEngine/<IterateAsync>d__168.MoveNext () [0x000e7] in <aa0755c2275a4bb580f223e28ea37c31>:0\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start<MailKit.Net.Imap.ImapEngine/<IterateAsync>d__168> (MailKit.Net.Imap.ImapEngine/<IterateAs>\r\n   at MailKit.Net.Imap.ImapEngine.IterateAsync (bool) [0x0002b] in <aa0755c2275a4bb580f223e28ea37c31>:0\r\n   at MailKit.Net.Imap.ImapEngine/<RunAsync>d__169.MoveNext () [0x00024] in <aa0755c2275a4bb580f223e28ea37c31>:0\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start<MailKit.Net.Imap.ImapEngine/<RunAsync>d__169> (MailKit.Net.Imap.ImapEngine/<RunAsync>d__1>\r\n * Assertion at local-propagation.c:562, condition `ins->opcode > MONO_CEE_LAST' not met\r\n Stacktrace:\r\n   at <unknown> <0xffffffff>\r\n   at System.Collections.Generic.Dictionary`2<string, int>.TryInsert (string,int,System.Collections.Generic.InsertionBehavior) [0x00022] in <8cc12864e331436>\r\n   at System.Collections.Generic.Dictionary`2<string, int>.Add (string,int) [0x00000] in <8cc12864e331436b8312c1d41d21bac3>:0\r\n   at MimeKit.Utils.CharsetUtils.AddAliases (System.Collections.Generic.Dictionary`2<string, int>,int,int,string[]) [0x00011] in <cba5649935944ddda32817356f>\r\n   at MimeKit.Utils.CharsetUtils..cctor () [0x0005f] in <cba5649935944ddda32817356f05efa2>:0\r\n   at (wrapper runtime-invoke) object.runtime_invoke_void (object,intptr,intptr,intptr) [0x0001e] in <8cc12864e331436b8312c1d41d21bac3>:0\r\n   at <unknown> <0xffffffff>\r\n   at (wrapper managed-to-native) object.__icall_wrapper_mono_generic_class_init (intptr) [0x00000] in <8cc12864e331436b8312c1d41d21bac3>:0\r\n   at MimeKit.ParserOptions..ctor () [0x00026] in <cba5649935944ddda32817356f05efa2>:0\r\n   at MimeKit.ParserOptions..cctor () [0x00018] in <cba5649935944ddda32817356f05efa2>:0\r\n   at (wrapper runtime-invoke) object.runtime_invoke_void (object,intptr,intptr,intptr) [0x0001e] in <8cc12864e331436b8312c1d41d21bac3>:0\r\n   at <unknown> <0xffffffff>\r\n   at MimeKit.Utils.Rfc2047.DecodeText (byte[]) [0x0000e] in <cba5649935944ddda32817356f05efa2>:0\r\n   at MailKit.Net.Imap.ImapUtils/<ReadNStringTokenAsync>d__19.MoveNext () [0x00181] in <aa0755c2275a4bb580f223e28ea37c31>:0\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<string>.Start<MailKit.Net.Imap.ImapUtils/<ReadNStringTokenAsync>d__19> (MailKit.Net.Imap.Imap>\r\n   at MailKit.Net.Imap.ImapUtils.ReadNStringTokenAsync (MailKit.Net.Imap.ImapEngine,string,bool,bool,System.Threading.CancellationToken) [0x00044] in <aa075>\r\n   at MailKit.Net.Imap.ImapUtils/<ParseEnvelopeAsync>d__34.MoveNext () [0x001ad] in <aa0755c2275a4bb580f223e28ea37c31>:0\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<MailKit.Envelope>.Start<MailKit.Net.Imap.ImapUtils/<ParseEnvelopeAsync>d__34> (MailKit.Net.Im>\r\n   at MailKit.Net.Imap.ImapUtils.ParseEnvelopeAsync (MailKit.Net.Imap.ImapEngine,bool,System.Threading.CancellationToken) [0x00033] in <aa0755c2275a4bb580f2>\r\n   at MailKit.Net.Imap.ImapFolder/<FetchSummaryItemsAsync>d__150.MoveNext () [0x00fd3] in <aa0755c2275a4bb580f223e28ea37c31>:0\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start<MailKit.Net.Imap.ImapFolder/<FetchSummaryItemsAsync>d__150> (MailKit.Net.Imap.ImapFolder/>\r\n   at MailKit.Net.Imap.ImapFolder.FetchSummaryItemsAsync (MailKit.Net.Imap.ImapEngine,MailKit.Net.Imap.ImapCommand,int,bool) [0x00044] in <aa0755c2275a4bb58>\r\n   at MailKit.Net.Imap.ImapEngine/<ProcessUntaggedResponseAsync>d__167.MoveNext () [0x00c21] in <aa0755c2275a4bb580f223e28ea37c31>:0\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<MailKit.Net.Imap.ImapUntaggedResult>.Start<MailKit.Net.Imap.ImapEngine/<ProcessUntaggedRespon>\r\n   at MailKit.Net.Imap.ImapEngine.ProcessUntaggedResponseAsync (bool,System.Threading.CancellationToken) [0x00033] in <aa0755c2275a4bb580f223e28ea37c31>:0\r\n   at MailKit.Net.Imap.ImapCommand/<StepAsync>d__68.MoveNext () [0x00888] in <aa0755c2275a4bb580f223e28ea37c31>:0\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<bool>.Start<MailKit.Net.Imap.ImapCommand/<StepAsync>d__68> (MailKit.Net.Imap.ImapCommand/<Ste>\r\n   at MailKit.Net.Imap.ImapCommand.StepAsync (bool) [0x0002b] in <aa0755c2275a4bb580f223e28ea37c31>:0\r\n   at MailKit.Net.Imap.ImapEngine/<IterateAsync>d__168.MoveNext () [0x000e7] in <aa0755c2275a4bb580f223e28ea37c31>:0\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start<MailKit.Net.Imap.ImapEngine/<IterateAsync>d__168> (MailKit.Net.Imap.ImapEngine/<IterateAs>\r\n   at MailKit.Net.Imap.ImapEngine.IterateAsync (bool) [0x0002b] in <aa0755c2275a4bb580f223e28ea37c31>:0\r\n   at MailKit.Net.Imap.ImapEngine/<RunAsync>d__169.MoveNext () [0x00024] in <aa0755c2275a4bb580f223e28ea37c31>:0\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start<MailKit.Net.Imap.ImapEngine/<RunAsync>d__169> (MailKit.Net.Imap.ImapEngine/<RunAsync>d__1>\r\n   at MailKit.Net.Imap.ImapEngine.RunAsync (MailKit.Net.Imap.ImapCommand,bool) [0x00033] in <aa0755c2275a4bb580f223e28ea37c31>:0\r\n   at MailKit.Net.Imap.ImapFolder/<FetchAsync>d__190.MoveNext () [0x00127] in <aa0755c2275a4bb580f223e28ea37c31>:0\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<System.Collections.Generic.IList`1<MailKit.IMessageSummary>>.Start<MailKit.Net.Imap.ImapFolde>\r\n   at MailKit.Net.Imap.ImapFolder.FetchAsync (int,int,MailKit.MessageSummaryItems,bool,System.Threading.CancellationToken) [0x0004d] in <aa0755c2275a4bb580f>\r\n   at MailKit.Net.Imap.ImapFolder.Fetch (int,int,MailKit.MessageSummaryItems,System.Threading.CancellationToken) [0x00000] in <aa0755c2275a4bb580f223e28ea37>\r\n   at MyProject.Application.MyFetchMethod (string) [0x000d3] in <a3348c452e784c8e94234bf25d696527>:0\r\n   at MyProject.Application.Main () [0x00131] in <a3348c452e784c8e94234bf25d696527>:0\r\n   at (wrapper runtime-invoke) object.runtime_invoke_void (object,intptr,intptr,intptr) [0x0004c] in <8cc12864e331436b8312c1d41d21bac3>:0\r\n\r\n Native stacktrace:\r\n         /usr/bin/mono() [0x4b0edb]\r\n         /lib64/libpthread.so.0(+0x13e60) [0x7dd653730e60]\r\n         /lib64/libc.so.6(gsignal+0x110) [0x7dd65339d040]\r\n         /lib64/libc.so.6(abort+0x17a) [0x7dd65339ed0a]\r\n         /usr/bin/mono() [0x68f4b9]\r\n         /usr/bin/mono() [0x6a4be4]\r\n         /usr/bin/mono() [0x6a4d77]\r\n         /usr/bin/mono() [0x47acda]\r\n         /usr/bin/mono() [0x528026]\r\n         /usr/bin/mono() [0x528984]\r\n         /usr/bin/mono() [0x425eca]\r\n         /usr/bin/mono() [0x4b29b7]\r\n         /usr/bin/mono() [0x4b340e]\r\n         [0x40a5478c]\r\n Debug info from gdb:\r\n mono_gdb_render_native_backtraces not supported on this platform, unable to find gdb or lldb\r\n =================================================================\r\n Got a SIGABRT while executing native code. This usually indicates\r\n a fatal error in the mono runtime or one of the native libraries\r\n used by your application.\r\n =================================================================\r\n\r\n```\r\nAnd this is the protocol log (I removed what I considered a sensitive data):\r\n\r\n```\r\nConnected to imaps://imap.gmail.com:993/\r\nS: * OK Gimap ready for requests from XYZ\r\nC: A00000000 CAPABILITY\r\nS: * CAPABILITY IMAP4rev1 UNSELECT IDLE NAMESPACE QUOTA ID XLIST CHILDREN X-GM-EXT-1 XYZZY SASL-IR AUTH=XOAUTH2 AUTH=PLAIN AUTH=PLAIN-CLIENTTOKEN AUTH=OAUTHBEARER AUTH=XOAUTH\r\nS: A00000000 OK Thats all she wrote! i29-v6mb165486711eda\r\nC: A00000001 AUTHENTICATE PLAIN AGRhbWlhbm8uemFuYXJkaUBhbnRoaWxsYS5jb20AQDAwIUFubm9Eb21pbmkyMDE3ITAwQA==\r\nS: * CAPABILITY IMAP4rev1 UNSELECT IDLE NAMESPACE QUOTA ID XLIST CHILDREN X-GM-EXT-1 UIDPLUS COMPRESS=DEFLATE ENABLE MOVE CONDSTORE ESEARCH UTF8=ACCEPT LIST-EXTENDED LIST-STATUS LITERAL- SPECIAL-USE APPENDLIMIT=35651584\r\nS: A00000001 OK XYZ authenticated (Success)\r\nC: A00000002 NAMESPACE\r\nS: * NAMESPACE ((\"\" \"/\")) NIL NIL\r\nS: A00000002 OK Success\r\nC: A00000003 LIST \"\" \"INBOX\"\r\nS: * LIST (\\HasNoChildren) \"/\" \"INBOX\"\r\nS: A00000003 OK Success\r\nC: A00000004 LIST (SPECIAL-USE) \"\" \"*\"\r\nS: * LIST (\\All \\HasNoChildren) \"/\" \"[Gmail]/All Mail\"\r\nS: * LIST (\\Drafts \\HasNoChildren) \"/\" \"[Gmail]/Drafts\"\r\nS: * LIST (\\HasNoChildren \\Sent) \"/\" \"[Gmail]/Sent Mail\"\r\nS: * LIST (\\HasNoChildren \\Junk) \"/\" \"[Gmail]/Spam\"\r\nS: * LIST (\\Flagged \\HasNoChildren) \"/\" \"[Gmail]/Starred\"\r\nS: * LIST (\\HasNoChildren \\Trash) \"/\" \"[Gmail]/Trash\"\r\nS: A00000004 OK Success\r\nC: A00000005 LIST \"\" \"[Gmail]\"\r\nS: * LIST (\\HasChildren \\Noselect) \"/\" \"[Gmail]\"\r\nS: A00000005 OK Success\r\nC: A00000006 LIST \"\" \"*\" RETURN (SUBSCRIBED CHILDREN)\r\nS: * LIST (\\HasNoChildren \\Subscribed) \"/\" \"[Gmail]/All Mail\"\r\nS: * LIST (\\HasNoChildren \\Subscribed) \"/\" \"[Gmail]/Drafts\"\r\nS: * LIST (\\HasNoChildren \\Subscribed) \"/\" \"[Gmail]/Important\"\r\nS: * LIST (\\HasNoChildren \\Subscribed) \"/\" \"[Gmail]/Sent Mail\"\r\nS: * LIST (\\HasNoChildren \\Subscribed) \"/\" \"[Gmail]/Spam\"\r\nS: * LIST (\\HasNoChildren \\Subscribed) \"/\" \"[Gmail]/Starred\"\r\nS: * LIST (\\HasNoChildren \\Subscribed) \"/\" \"[Gmail]/Trash\"\r\nS: A00000006 OK Success\r\nC: A00000007 SELECT Accounts (CONDSTORE)\r\nS: * FLAGS (\\Answered \\Flagged \\Draft \\Deleted \\Seen $NotPhishing $Phishing)\r\nS: * OK [PERMANENTFLAGS (\\Answered \\Flagged \\Draft \\Deleted \\Seen $NotPhishing $Phishing \\*)] Flags permitted.\r\nS: * OK [UIDVALIDITY 17] UIDs valid.\r\nS: * 17 EXISTS\r\nS: * 0 RECENT\r\nS: * OK [UIDNEXT 20] Predicted next UID.\r\nS: * OK [HIGHESTMODSEQ 411050]\r\nS: A00000007 OK [READ-WRITE] Accounts selected. (Success)\r\nC: A00000008 FETCH 1:* (UID ENVELOPE)\r\nS: * 1 FETCH (UID 1 MODSEQ (39451) ENVELOPE (\"Mon, 1 Jun 2015 08:01:42 +0000\" \"XYZ\" ((\"XYZ\" NIL \"XYZ\" \"XYZ\")) ((\"XYZ\" NIL \"XYZ\" \"XYZ\")) ((NIL NIL \"XYZ\" \"XYZ\")) ((NIL NIL \"XYZ\" \"XYZ\")) NIL NIL NIL \"<XYZ>\"))\r\nS: * 2 FETCH (UID 3 MODSEQ (46773) ENVELOPE (\"Mon, 13 Jul 2015 08:44:47 +0000\" \"XYZ\" ((\"XYZ\" NIL \"contac:\r\n\r\n```\r\n\r\nI noticed that the last line in the protocol log seems trimmed.\r\n\r\nDo you think this error is due to a library or mono problem?\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/716/comments",
    "author": "zandam-xrn",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2018-06-04T18:41:40Z",
        "body": "You need to upgrade your mono. I think that was fixed in Mono 5.8 or 5.10"
      }
    ]
  },
  {
    "number": 715,
    "title": "Slow authentication - against Office 365",
    "created_at": "2018-05-28T09:11:31Z",
    "closed_at": "2018-05-30T14:04:33Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/715",
    "body": "I am using MailKit - Xamarin iOS app. Authentication & sending a simple mail against imap for Office 365 taking 20sec. or more. Any idea why? Am I missing anything?\r\n\r\n```csharp\r\n        public void SendEmail(string Response)\r\n        {\r\n            var AccountDetails = ReadAccountDetails();\r\n            string FromMail = AccountDetails.Email;\r\n            string ToMail = (!string.IsNullOrEmpty(AccountDetails.SharedEmail) ? AccountDetails.SharedEmail : AccountDetails.Email);\r\n            string Password = AccountDetails.Password;\r\n            int SmtpPort = AccountDetails.PortNumber;\r\n            string Host = AccountDetails.Server;\r\n            try\r\n            {\r\n                var message = new MimeMessage();\r\n                var builder = new BodyBuilder();\r\n                message.From.Add(InternetAddress.Parse(FromMail));\r\n                message.To.Add(InternetAddress.Parse(ToMail));\r\n                message.Subject =\"Approval\";\r\n                byte[] byteArray = Encoding.UTF8.GetBytes(Response);\r\n                MemoryStream stream = new MemoryStream(byteArray);\r\n                builder.Attachments.Add( \"message.json\" ,stream);\r\n                message.Body = builder.ToMessageBody();\r\n                using (var client = new SmtpClient())\r\n                {\r\n                    client.ServerCertificateValidationCallback = (s, certificate, chain, sslPolicyErrors) => true;\r\n\r\n                    client.Connect(Host, 25, false);\r\n                    client.Authenticate(FromMail, Password);\r\n                    client.Send(message);\r\n                    client.Disconnect(true);\r\n                }\r\n```\r\n\r\n\r\nOn analysis, we found, this part takes time...\r\n\r\n```csharp\r\n                using (var client = new SmtpClient())\r\n                {\r\n                    client.ServerCertificateValidationCallback = (s, certificate, chain, sslPolicyErrors) => true;\r\n                    client.Connect(Host, 25, false);\r\n                    client.Authenticate(FromMail, Password);\r\n                    client.Send(message);\r\n                    client.Disconnect(true);\r\n                }\r\n```",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/715/comments",
    "author": "SarathyEST",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2018-05-30T14:04:32Z",
        "body": "How slow is it? How fast do you expect it to be? Is your expectation realistic? I.e. do other SMTP libraries send the message faster? How much faster? Have you looked at the protocol log to see if maybe the problem is that MailKit has to try multiple AUTH mechanism fallbacks before the server accepts your credentials? If so, have you tried asking MailKit to use the AUTH mechanism that works reliably?"
      },
      {
        "user": "RhodriHuwWilliams",
        "created_at": "2022-01-24T17:52:48Z",
        "body": "Hi, I've got a similar issue - it can take up to 20s to authenticate against my Office365 account. It seems to vary between 2s and 20s. Is this expected? \r\n\r\nI've removed the XOAUTH2 authentication mechanism. LOGIN is the only remaining authentication mechanism."
      },
      {
        "user": "jstedfast",
        "created_at": "2022-01-24T19:40:38Z",
        "body": "Does your Office365 account have tarpit enabled?\r\n\r\nThis is something I just learned about and it turns out that after the first EHLO command, every command that the server receives, it will delay a configurable number of seconds before replying until the client is authenticated.\r\n\r\nIf you are connecting on port 25 or 587, try connecting on port 465. This will save you 2 commands. If your server's tarpit is set to delay 10s for each command, that will solve this."
      },
      {
        "user": "jstedfast",
        "created_at": "2022-01-24T19:42:47Z",
        "body": "In any case, if you are experiencing slowness, it is 100% guaranteed to be the server purposely delaying the client as an anti-spam or anti-DDoS measure."
      },
      {
        "user": "RhodriHuwWilliams",
        "created_at": "2022-01-25T14:46:30Z",
        "body": "Thanks for your reply. No, I don't believe so as I'm using my personal account.\r\n\r\nConnect times out when using port 465 for smtp.office365.com.\r\n\r\nI'll add an option to allow customers to use Microsoft's built in SMTPClient, if they also experience the same delay on authentication with MailKit."
      },
      {
        "user": "jstedfast",
        "created_at": "2022-01-25T15:08:56Z",
        "body": "You could always try getting a protocol log with timestamps to see if you can find the delays there. If everything in the log has more-or-less instant responses, then it probably means the slowness is in the socket connecting.\r\n\r\nTo get a protocol log with timestamps:\r\n\r\n```csharp\r\nvar client = new ImapClient (new ProtocolLogger (\"imap.log\") { LogTimestamps = true });\r\n```"
      },
      {
        "user": "jstedfast",
        "created_at": "2022-01-25T15:35:11Z",
        "body": "FWIW, System.Net.Mail.SmtpClient keeps a connection pool alive so, if you create SmtpClients to send a single message and then dispose it and a few seconds later create another SmtpClient, send a message, etc, then you aren't creating a new TCP/IP connection, you are simply re-using an existing TCP/IP connection.\r\n\r\nIn MailKit, if you use SMtpClient the same way, you are actually creating and closing TCP/IP connections each time.\r\n\r\nYou can do the same with MailKit, but you'd need to \"pool\" the SmtpClients yourself and make sure to call client.NoOp() or NoOpAsync() every few minutes to keep said connection alive.\r\n\r\nI have a feeling this is why people think MailKit is \"slow\" at connecting. They are comparing the time it takes to create a TCP/IP connection (in MailKit) to a dictionary lookup in System.Net.Mail and concluding that MailKit is slow by comparison."
      },
      {
        "user": "RhodriHuwWilliams",
        "created_at": "2022-01-25T17:23:39Z",
        "body": "Thanks. I've added the protocol log with timestamps. This is the authentication part of the log when it took 10 seconds;\r\n\r\n2022-01-25T16:53:21Z S: 250-LO2P123CA0072.outlook.office365.com Hello [82.24.149.111]\r\n2022-01-25T16:53:21Z S: 250-SIZE 157286400\r\n2022-01-25T16:53:21Z S: 250-PIPELINING\r\n2022-01-25T16:53:21Z S: 250-DSN\r\n2022-01-25T16:53:21Z S: 250-ENHANCEDSTATUSCODES\r\n2022-01-25T16:53:21Z S: 250-AUTH LOGIN XOAUTH2\r\n2022-01-25T16:53:21Z S: 250-8BITMIME\r\n2022-01-25T16:53:21Z S: 250-BINARYMIME\r\n2022-01-25T16:53:21Z S: 250-CHUNKING\r\n2022-01-25T16:53:21Z S: 250 SMTPUTF8\r\n2022-01-25T16:53:23Z C: AUTH LOGIN\r\n2022-01-25T16:53:23Z S: 334 VXNlcm5hbWU6\r\n2022-01-25T16:53:23Z C: ********\r\n2022-01-25T16:53:23Z S: 334 UGFzc3dvcmQ6\r\n2022-01-25T16:53:23Z C: ********\r\n2022-01-25T16:53:33Z S: 235 2.7.0 Authentication successful\r\n\r\nOK, thanks for explaining the differences between the two. \r\n\r\nUsing MailKit, rather than System.Net.Mail.SmtpClient, has resolved a few issues that some of our customers have reported recently. It does seem to be more reliable. \r\n\r\nI'll look into changing our emailing process to use a background thread, or move it to the server side."
      },
      {
        "user": "jstedfast",
        "created_at": "2022-01-25T17:53:36Z",
        "body": "Looks like the 10s delay is after the client sends the password.\r\n\r\nThere's also a ~2s delay between when the client received the EHLO response and when it sent the AUTH command. There could be 2 reasons for that:\r\n\r\n1. There's a ~2s delay somehow between `client.Connect (...)` and `client.Authenticate (...)`?\r\n2. The socket wouldn't accept data for ~2s? (not entirely sure if this would be a local OS issue or if it could depend on the server's socket not being ready to accept data - I suspect it'd be local only, but I'm not positive)\r\n"
      },
      {
        "user": "RhodriHuwWilliams",
        "created_at": "2022-01-25T18:12:43Z",
        "body": "Sorry, I may have had a breakpoint on authenticate, which would have caused that 2s delay. This is the log without any breakpoints. It took 30 seconds this time;\r\n\r\n2022-01-25T18:08:00Z Connected to smtp://smtp.office365.com:587/?starttls=when-available\r\n2022-01-25T18:08:00Z S: 220 LO4P123CA0264.outlook.office365.com Microsoft ESMTP MAIL Service ready at Tue, 25 Jan 2022 18:07:59 +0000\r\n2022-01-25T18:08:00Z C: EHLO [192.168.0.44]\r\n2022-01-25T18:08:00Z S: 250-LO4P123CA0264.outlook.office365.com Hello [82.24.149.111]\r\n2022-01-25T18:08:00Z S: 250-SIZE 157286400\r\n2022-01-25T18:08:00Z S: 250-PIPELINING\r\n2022-01-25T18:08:00Z S: 250-DSN\r\n2022-01-25T18:08:00Z S: 250-ENHANCEDSTATUSCODES\r\n2022-01-25T18:08:00Z S: 250-STARTTLS\r\n2022-01-25T18:08:00Z S: 250-8BITMIME\r\n2022-01-25T18:08:00Z S: 250-BINARYMIME\r\n2022-01-25T18:08:00Z S: 250-CHUNKING\r\n2022-01-25T18:08:00Z S: 250 SMTPUTF8\r\n2022-01-25T18:08:00Z C: STARTTLS\r\n2022-01-25T18:08:00Z S: 220 2.0.0 SMTP server ready\r\n2022-01-25T18:08:00Z C: EHLO [192.168.0.44]\r\n2022-01-25T18:08:00Z S: 250-LO4P123CA0264.outlook.office365.com Hello [82.24.149.111]\r\n2022-01-25T18:08:00Z S: 250-SIZE 157286400\r\n2022-01-25T18:08:00Z S: 250-PIPELINING\r\n2022-01-25T18:08:00Z S: 250-DSN\r\n2022-01-25T18:08:00Z S: 250-ENHANCEDSTATUSCODES\r\n2022-01-25T18:08:00Z S: 250-AUTH LOGIN XOAUTH2\r\n2022-01-25T18:08:00Z S: 250-8BITMIME\r\n2022-01-25T18:08:00Z S: 250-BINARYMIME\r\n2022-01-25T18:08:00Z S: 250-CHUNKING\r\n2022-01-25T18:08:00Z S: 250 SMTPUTF8\r\n2022-01-25T18:08:00Z C: AUTH LOGIN\r\n2022-01-25T18:08:00Z S: 334 VXNlcm5hbWU6\r\n2022-01-25T18:08:00Z C: ********\r\n2022-01-25T18:08:00Z S: 334 UGFzc3dvcmQ6\r\n2022-01-25T18:08:00Z C: ********\r\n2022-01-25T18:08:30Z S: 235 2.7.0 Authentication successful\r\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2022-01-25T18:33:29Z",
        "body": "Based on the 30s delay, I'm going to guess that this is because the SMTP server has some anti-DDoS/spam/bot algorithms that are rate-limiting your connections.\r\n"
      }
    ]
  },
  {
    "number": 714,
    "title": "Xamarin iOS - access shared inbox",
    "created_at": "2018-05-26T18:29:52Z",
    "closed_at": "2018-05-27T19:46:09Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/714",
    "body": "I am using this in my VS for MAC - to build a iOS application which needs to read a shared mailbix in an exchange or office 365 server. How can I force the code to change from default inbox to access shared inbox folder?",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/714/comments",
    "author": "SarathyEST",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2018-05-27T19:46:09Z",
        "body": "What you need to do is:\r\n\r\n```csharp\r\nawait client.ConnectAsync(\"outlook.office365.com\", 993, SecureSocketOptions.SslOnConnect);\r\nawait client.AuthenticateAsync(@\"username@yourdomain.com\\sharedmailbox\", \"userpassword\");\r\n```"
      }
    ]
  },
  {
    "number": 711,
    "title": "Authentication failed for  partner.outlook.cn:993   use imap",
    "created_at": "2018-05-23T04:30:04Z",
    "closed_at": "2018-05-23T13:57:15Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/711",
    "body": "this is the log:\r\n\r\nConnected to imaps://partner.outlook.cn:993/\r\nS: * OK The Microsoft Exchange IMAP4 service is ready. [UwBIADIAUABSADAAMQBDAEEAMAAzADkALgBDAEgATgBQAFIAMAAxAC4AcAByAG8AZAAuAHAAYQByAHQAbgBlAHIALgBvAHUAdABsAG8AbwBrAC4AYwBuAA==]\r\nC: A00000000 CAPABILITY\r\nS: * CAPABILITY IMAP4 IMAP4rev1 AUTH=PLAIN AUTH=XOAUTH2 SASL-IR UIDPLUS ID UNSELECT CHILDREN IDLE NAMESPACE LITERAL+\r\nS: A00000000 OK CAPABILITY completed.\r\nC: A00000001 AUTHENTICATE PLAIN AEhSLVJlc3VtZXNAYW1yZXN0LmFzaWEAMTExMTEx\r\nS: A00000001 NO AUTHENTICATE failed.\r\nC: A00000002 LOGIN HR-Resumes@amrest.asia 111111\r\nS: A00000002 NO LOGIN failed.\r\nC: A00000003 LOGOUT\r\nS: * BYE Microsoft Exchange Server IMAP4 server signing off.\r\nS: A00000003 OK LOGOUT completed.\r\nc3VtZXNAYW1yZXN0LmFzaWEAMTExMTEx\r\nS: A00000003 NO AUTHENTICATE failed.\r\nC: A00000004 LOGIN HR-Resumes@amrest.asia 111111\r\nS: A00000004 NO LOGIN failed.\r\nC: A00000005 LOGOUT\r\nS: * BYE Microsoft Exchange Server IMAP4 server signing off.\r\nS: A00000005 OK LOGOUT completed.\r\n\r\n\r\nhow to solve this problem??\r\nwhy turn out this error??",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/711/comments",
    "author": "zousq19910623",
    "comments": [
      {
        "user": "zousq19910623",
        "created_at": "2018-05-23T05:50:33Z",
        "body": "if anyone knows ,pls tell me ,thx."
      },
      {
        "user": "zousq19910623",
        "created_at": "2018-05-23T09:42:09Z",
        "body": "i already try to change the password,but still throw this exception：MailKit.Security.AuthenticationException: LOGIN failed."
      },
      {
        "user": "jstedfast",
        "created_at": "2018-05-23T13:57:15Z",
        "body": "It's failing because you are giving it the wrong user name or the wrong password."
      }
    ]
  },
  {
    "number": 707,
    "title": "IMAP connection losing automatically ",
    "created_at": "2018-05-22T03:54:27Z",
    "closed_at": "2018-05-22T14:19:04Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/707",
    "body": "I was using MailKit to get notification and read new mails. But faced problems when I tried using it for long interval of time.\r\n1. The connection was lost sometimes without any logs ; (ProtocolLogger(Console.OpenStandardError()))\r\n2. The connection was lost with some logs saying \"Outlook signing off \" (Don't have exact error right now)\r\n\r\nSo I am connecting my Outlook office email using MailKit with timer being set as 9 minutes.\r\n\r\nI am not able to figure it out why my connection is losing automatically.",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/707/comments",
    "author": "SumitDobhal",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2018-05-22T14:19:04Z",
        "body": "IMAP servers can disconnect you for any reason at any time. Typically, they will hold a connection open for at least 10 minutes but I have found that to not always hold true. GMail, for example, will almost always kick me off if my client idles for more than somewhere around 9 minutes.\r\n\r\nYou just have to handle re-connecting when that happens.\r\n\r\nThat said, have you tried lowering your interval to, say, 5 minutes instead of 10?"
      },
      {
        "user": "SumitDobhal",
        "created_at": "2018-05-24T09:25:34Z",
        "body": "I tried reducing the interval to 5 minutes I was connected for almost 6 hours . But than IMAP server stopped sending me any events. I understood you said to re-connect again .But what should be the proper way to connect to the IMAP servers again? Is there any exception handling method / event to handle this type of disconnection where the IMAP server stops sending you any response?"
      },
      {
        "user": "jstedfast",
        "created_at": "2018-05-24T13:05:35Z",
        "body": "Yes.\r\n\r\nCatch `ImapProtocolException` exceptions and then you can check `client.IsConnected` to see if you need to reconnect or not.\r\n\r\nI think the `Disconnected` event also gets emitted, but I'm less sure on that offhand."
      },
      {
        "user": "SumitDobhal",
        "created_at": "2018-05-31T06:24:50Z",
        "body": "I tried to do handle the exceptions but still didn't received anything in the exception. \r\nI got this message from the log \"**Microsoft Exchange Server IMAP4 Signing Off**\". \r\nBut still not able to catch the exception."
      },
      {
        "user": "jstedfast",
        "created_at": "2018-05-31T15:49:10Z",
        "body": "You will get an ImapProtocolException the next time you attempt to send a command."
      }
    ]
  },
  {
    "number": 706,
    "title": "Best way to fetch all emails for import processing",
    "created_at": "2018-05-16T06:19:03Z",
    "closed_at": "2018-05-16T14:35:19Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/706",
    "body": "Hi, first I want to say that this is an awesome library. Thank you for putting so much effort into it.\r\n\r\nI have some server process running which needs to import all emails from an IMAP inbox into a database. As I am not familiar with the things I can expect from an arbitrary IMAP server, I am not quite sure about the best way to do it.\r\n\r\nIt is very important that I do not \"miss\" any mail.\r\nI thought about the following algorithm (pseudo-code):\r\n\r\n````\r\nminIndex = 0     // when running first time, just get all mails\r\nsummaries = inbox.Fetch(minIndex, -1, ...)\r\nfor (var i = 0 ; i < summaries.Count; ++i ) {\r\n    if (not yet imported summaries[i].mailId) {\r\n       import(summaries[i]);\r\n    }\r\n\r\n   if (import okay) {\r\n      minIndex = i + 1;       // next time the process starts, fetch after last imported mail\r\n   }\r\n}\r\n`````\r\n\r\nThis assumes the following:\r\n- When fetching index 0 to -1, I get always all emails within the inbox\r\n- Same indices used on fetch will always produce the same result. It is not dependant on sorting etc.\r\n- On new emails, the index used by fetch is incremented. Let an inbox contain mails with indices i_0 .. i_n, then a new mail will have an index i >= i_n + 1.\r\n- A mail will always have the same mail id.\r\n\r\nCan I make these assumptions?\r\nIf not, what would be the right way to retrieve all emails in a reliable way?\r\n\r\nThank you in advance.",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/706/comments",
    "author": "marco-bue",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2018-05-16T14:35:19Z",
        "body": "Indices is the wrong way to track which messages you have seen because another client could delete a message.\r\n\r\nYou need to use the summary.UniqueId combined with the folder.UidValidity value to determine if you've seen a message or not.\r\n\r\nThe folder.UidValidity value should rarely ever change (but can if the server restores from a backup or if another client deletes all messages in the folder, then deletes the folder, and finally recreates said folder... it *might* get a new UidValidity).\r\n\r\nThe summary.UniqueId is the unique identifier for the message in the folder and is the only reliable way to identify them.\r\n\r\nIn order to make sure that the summary.UniqueId value is set, you'll need to pass `MessageSummaryItems.UniqueId` as one of the fields to the `Fetch()` method (these flags can be bitwise-or'd together to request multiple items).\r\n\r\nHope that helps."
      }
    ]
  },
  {
    "number": 705,
    "title": "MailboxAddress comma separated email list",
    "created_at": "2018-05-15T14:19:04Z",
    "closed_at": "2018-05-15T14:21:18Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/705",
    "body": "Unless I am missing it somewhere (let me know if I am!) the MailboxAddress does not support a CSV of emails:\r\n\r\n`email@example.com, email@example.com`\r\n\r\nThis would be very helpful if supported, instead of having to loop through. ",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/705/comments",
    "author": "mackcoding",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2018-05-15T14:21:18Z",
        "body": "What you are looking for is `InternetAddressList` which contains a list of `InternetAddress` (which is the base class for `MailboxAddress`)."
      }
    ]
  },
  {
    "number": 703,
    "title": "Check if mail has attachments",
    "created_at": "2018-05-02T10:27:18Z",
    "closed_at": "2018-05-02T14:17:18Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/703",
    "body": "I am using the below code to get different parts of a message such as \"To\" , \"CC\" ...\r\n\r\n\r\n      var message = `folder.GetMessage(LstUID);\r\n      string` From = `message.From.ToString();\r\n\r\nNow, i was wondering how i could check if a mail contains attachments or not ? I found the below code on StackOverFlow but i fail to combine it with my existing code :(\r\n\r\n     var summary = inbox.Fetch(MessageId,MessageSummaryItems.Body,cancel.Token).FirstOrDefault();  \r\n     var bodyMultiPart = summary.Body as BodyPartMultipart;\r\n     if (bodyMultiPart != null)\r\n     {\r\n     foreach (var bodyPart in bodyMultiPart.BodyParts.Where(x => x is BodyPartBasic))\r\n    {\r\n        BodyPartBasic basicPart = bodyPart as BodyPartBasic;\r\n        if (basicPart.ContentDisposition != null && basicPart.ContentDisposition.IsAttachment)\r\n        {\r\n           //add basic part as attachment\r\n        }               \r\n    }    \r\n    }\r\n\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/703/comments",
    "author": "arn3342",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2018-05-02T14:17:18Z",
        "body": "If you are calling `GetMessage()`, then you could just check `message.Attachments.Any()`"
      }
    ]
  },
  {
    "number": 702,
    "title": "HasCustomFlag seems not working",
    "created_at": "2018-04-20T15:06:07Z",
    "closed_at": "2018-04-20T15:53:27Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/702",
    "body": "I'm able to add custom flags to messages, then I want to be able to query a folder to have only the messages that does not have that specific custom flag.\r\n\r\n` SearchQuery query  = SearchQuery.DoesNotHaveCustomFlag(\"Test\");`\r\n\r\nWhen I issue the query I got an exception.\r\n\r\n```\r\nConnected to imaps://outlook.office365.com:993/\r\nS: * OK The Microsoft Exchange IMAP4 service is ready. [xxxxxx]\r\nC: A00000000 CAPABILITY\r\nS: * CAPABILITY IMAP4 IMAP4rev1 AUTH=PLAIN AUTH=XOAUTH2 SASL-IR UIDPLUS ID UNSELECT CHILDREN IDLE NAMESPACE LITERAL+\r\nS: A00000000 OK CAPABILITY completed.\r\nC: A00000001 AUTHENTICATE PLAIN xxxxxxxxxxx\r\nS: A00000001 OK AUTHENTICATE completed.\r\nC: A00000002 CAPABILITY\r\nS: * CAPABILITY IMAP4 IMAP4rev1 AUTH=PLAIN AUTH=XOAUTH2 SASL-IR UIDPLUS MOVE ID UNSELECT CLIENTACCESSRULES CLIENTNETWORKPRESENCELOCATION BACKENDAUTHENTICATE CHILDREN IDLE NAMESPACE LITERAL+\r\nS: A00000002 OK CAPABILITY completed.\r\nC: A00000003 NAMESPACE\r\nS: * NAMESPACE ((\"\" \"/\")) NIL NIL\r\nS: A00000003 OK NAMESPACE completed.\r\nC: A00000004 LIST \"\" \"INBOX\"\r\nS: * LIST (\\Marked \\HasChildren) \"/\" INBOX\r\nS: A00000004 OK LIST completed.\r\nC: A00000005 LIST \"\" inbox/jarvis/OV000100\r\nS: * LIST (\\HasNoChildren) \"/\" INBOX/Jarvis/OV000100\r\nS: A00000005 OK LIST completed.\r\nC: A00000006 LIST \"\" INBOX/Jarvis\r\nS: * LIST (\\HasChildren) \"/\" INBOX/Jarvis\r\nS: A00000006 OK LIST completed.\r\nC: A00000007 EXAMINE INBOX/Jarvis/OV000100\r\nS: * 2 EXISTS\r\nS: * 0 RECENT\r\nS: * FLAGS (\\Seen \\Answered \\Flagged \\Deleted \\Draft $MDNSent)\r\nS: * OK [PERMANENTFLAGS ()] Permanent flags\r\nS: * OK [UNSEEN 1] Is the first unseen message\r\nS: * OK [UIDVALIDITY 274] UIDVALIDITY value\r\nS: * OK [UIDNEXT 3] The next unique identifier value\r\nS: A00000007 OK [READ-ONLY] EXAMINE completed.\r\nC: A00000008 UID SEARCH UNKEYWORD Test\r\nS: A00000008 BAD Command Argument Error. 11\r\n```\r\n\r\nIs it possible that it happens because the IMAP implementation does not allow searching for custom flags? In that situation it would be nice to have a better error message.\r\n\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/702/comments",
    "author": "alkampfergit",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2018-04-20T15:53:27Z",
        "body": "I don't know why it's failing to be honest. Looks like correct syntax as far as I can tell.\r\n\r\n```\r\nsearch-key      = \"ALL\" / \"ANSWERED\" / \"BCC\" SP astring /\r\n                  \"BEFORE\" SP date / \"BODY\" SP astring /\r\n                  \"CC\" SP astring / \"DELETED\" / \"FLAGGED\" /\r\n                  \"FROM\" SP astring / \"KEYWORD\" SP flag-keyword /\r\n                  \"NEW\" / \"OLD\" / \"ON\" SP date / \"RECENT\" / \"SEEN\" /\r\n                  \"SINCE\" SP date / \"SUBJECT\" SP astring /\r\n                  \"TEXT\" SP astring / \"TO\" SP astring /\r\n                  \"UNANSWERED\" / \"UNDELETED\" / \"UNFLAGGED\" /\r\n                  \"UNKEYWORD\" SP flag-keyword / \"UNSEEN\" /\r\n                    ; Above this line were in [IMAP2]\r\n                  \"DRAFT\" / \"HEADER\" SP header-fld-name SP astring /\r\n                  \"LARGER\" SP number / \"NOT\" SP search-key /\r\n                  \"OR\" SP search-key SP search-key /\r\n                  \"SENTBEFORE\" SP date / \"SENTON\" SP date /\r\n                  \"SENTSINCE\" SP date / \"SMALLER\" SP number /\r\n                  \"UID\" SP sequence-set / \"UNDRAFT\" / sequence-set /\r\n                  \"(\" search-key *(SP search-key) \")\"\r\nflag-keyword    = atom\r\n```\r\n\r\nThe only thing I can think of is that your IMAP server is restricting the keyword value to \"$MDNSent\" since that seems to be the only keyword defined in your INBOX at the moment.\r\n\r\nIt should just accept any atom, though."
      }
    ]
  },
  {
    "number": 698,
    "title": "Not possible to install nuget package (\".NETPortable,Version=v4.5,...)",
    "created_at": "2018-04-12T15:00:41Z",
    "closed_at": "2018-04-12T15:15:36Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/698",
    "body": "Hello,\r\n\r\nI am a newbie in creating apps  and I am developing an Xamarin pcl app and I have to create an app which receives and sends emails. \r\nNow I tried toinstall MailKit, but I allways get the following error:\r\n\r\nSchweregrad\tCode\tBeschreibung\tProjekt\tDatei\tZeile\tUnterdrückungszustand\r\nFehler\t\tDas Paket \"MailKit 2.0.2\" konnte nicht installiert werden. Sie versuchen, dieses Paket in ein Projekt zu installieren, das sich auf \".NETPortable,Version=v4.5,Profile=Profile259\" bezieht, das Paket enthält aber keine Assemblyverweise oder Inhaltsdateien, die mit diesem Framework kompatibel sind. Wenden Sie sich an den Paketersteller, um weitere Informationen zu erhalten.\t\t\t0\t\r\n\r\nI am not sure what I have to change in my app to make it work .... \r\n\r\nThanks for your help,\r\n\r\nEmjay1171\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/698/comments",
    "author": "EmJay1171",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2018-04-12T15:15:36Z",
        "body": "I would recommend avoiding PCL and opt for .NET Core instead. PCL will be a nightmare to use if you are new to using it."
      },
      {
        "user": "EmJay1171",
        "created_at": "2018-04-13T07:40:19Z",
        "body": "Thanks for you help :-) "
      }
    ]
  },
  {
    "number": 694,
    "title": "A call to SSPI failed, see inner exception.",
    "created_at": "2018-04-03T02:25:39Z",
    "closed_at": "2018-04-03T10:57:50Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/694",
    "body": "I am using mailkit version 1.12.0 to get unread mail count.\r\nPlease find below code\r\n\tpublic int GetUnreadMailCountFromInbox()\r\n\t\t{\r\n\t\t\tusing (var client = new ImapClient())\r\n\t\t\t{\r\n\t\t\t\tclient.ServerCertificateValidationCallback = (s, c, h, e) => true;\r\n\t\t\t\tclient.Connect(host, port, false);\r\n\t\t\t\tclient.Authenticate(user, password);\r\n\r\n\t\t\t\tvar inbox = client.Inbox;\r\n\t\t\t\tinbox.Open(FolderAccess.ReadOnly);\r\n\t\t\t\tvar unreadMailcount = inbox.Unread;\r\n\t\t\t\tclient.Disconnect(true);\r\n\t\t\t\treturn unreadMailcount;\r\n\t\t\t}\r\n\t\t}\r\n\r\nI am getting below exception during this method call,\r\nA call to SSPI failed, see inner exception.\r\n- System.Net.Security.SslState.StartSendAuthResetSignal(ProtocolToken message, AsyncProtocolRequest asyncRequest, Exception exception) (0, 0)\r\n- System.Net.Security.SslState.CheckCompletionBeforeNextReceive(ProtocolToken message, AsyncProtocolRequest asyncRequest) (0, 0)\r\n- System.Net.Security.SslState.ProcessReceivedBlob(Byte[] buffer, Int32 count, AsyncProtocolRequest asyncRequest) (0, 0)\r\n- System.Net.Security.SslState.StartReceiveBlob(Byte[] buffer, AsyncProtocolRequest asyncRequest) (0, 0)\r\n- System.Net.Security.SslState.CheckCompletionBeforeNextReceive(ProtocolToken message, AsyncProtocolRequest asyncRequest) (0, 0)\r\n- System.Net.Security.SslState.ProcessReceivedBlob(Byte[] buffer, Int32 count, AsyncProtocolRequest asyncRequest) (0, 0)\r\n- System.Net.Security.SslState.StartReceiveBlob(Byte[] buffer, AsyncProtocolRequest asyncRequest) (0, 0)\r\n- System.Net.Security.SslState.CheckCompletionBeforeNextReceive(ProtocolToken message, AsyncProtocolRequest asyncRequest) (0, 0)\r\n- System.Net.Security.SslState.ProcessReceivedBlob(Byte[] buffer, Int32 count, AsyncProtocolRequest asyncRequest) (0, 0)\r\n- System.Net.Security.SslState.StartReceiveBlob(Byte[] buffer, AsyncProtocolRequest asyncRequest) (0, 0)\r\n- System.Net.Security.SslState.CheckCompletionBeforeNextReceive(ProtocolToken message, AsyncProtocolRequest asyncRequest) (0, 0)\r\n- System.Net.Security.SslState.ProcessReceivedBlob(Byte[] buffer, Int32 count, AsyncProtocolRequest asyncRequest) (0, 0)\r\n- System.Net.Security.SslState.StartReceiveBlob(Byte[] buffer, AsyncProtocolRequest asyncRequest) (0, 0)\r\n- System.Net.Security.SslState.CheckCompletionBeforeNextReceive(ProtocolToken message, AsyncProtocolRequest asyncRequest) (0, 0)\r\n- System.Net.Security.SslState.ProcessReceivedBlob(Byte[] buffer, Int32 count, AsyncProtocolRequest asyncRequest) (0, 0)\r\n- System.Net.Security.SslState.StartReceiveBlob(Byte[] buffer, AsyncProtocolRequest asyncRequest) (0, 0)\r\n- System.Net.Security.SslState.CheckCompletionBeforeNextReceive(ProtocolToken message, AsyncProtocolRequest asyncRequest) (0, 0)\r\n- System.Net.Security.SslState.ForceAuthentication(Boolean receiveFirst, Byte[] buffer, AsyncProtocolRequest asyncRequest) (0, 0)\r\n- System.Net.Security.SslState.ProcessAuthentication(LazyAsyncResult lazyResult) (0, 0)\r\n- MailKit.Net.Imap.ImapClient.Connect(String host, Int32 port, SecureSocketOptions options, CancellationToken cancellationToken) (0, 0)\r\n- MailKit.MailService.Connect(String host, Int32 port, Boolean useSsl, CancellationToken cancellationToken) (0, 0)\r\n- MyProject.Utils.ImapMailClient.GetUnreadMailCount() (0, 0)\r\n\r\nThe message received was unexpected or badly formatted\r\n\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/694/comments",
    "author": "roshanghangare7",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2018-04-03T10:57:50Z",
        "body": "Use `client.Connect(host, port, SecureSocketOptions.None);`"
      }
    ]
  },
  {
    "number": 688,
    "title": "Unilateral response during GetStream or GetStreams",
    "created_at": "2018-03-27T12:12:24Z",
    "closed_at": "2018-03-27T13:49:45Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/688",
    "body": "Is there a mechanism to capture unilateral IMAP responses during GetStream or GetStreams methods. \r\n\r\nP.S. Actually I can see MessageFlagChanged event is raised for unilateral responses for GetStream or GetStreams, however MessageFlagChanged is not raised when you receive unilateral response for Fetch. \r\n\r\nCan you confirm this is how it is supposed to work?",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/688/comments",
    "author": "ekalchev",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2018-03-27T13:49:45Z",
        "body": "That is how it is supposed to work.\r\n\r\nIt's very difficult (impossible?) to determine what FETCH responses are what when you issue a FETCH request, so that data is always returned in the FETCH response."
      }
    ]
  },
  {
    "number": 687,
    "title": "Question: SMTP Exhange AuthenticationChallenge",
    "created_at": "2018-03-27T10:31:25Z",
    "closed_at": "2018-03-27T13:52:42Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/687",
    "body": "Dear Dev,\r\n\r\nAfter MailClient.Connect(Server, Port, None) ..\r\nAt MailClient.Authenticate(Username, Password) it throws the error:\r\n\"A call to Authenticate failed with this message: AuthenticationChallange: someBase64string\"\r\n\r\nHowever I am not yet knowledgeable in how to go about this.\r\nHow to Handle a challenge? I have not yet come across some Example code.\r\n\r\nWould you be so kind as to point me in the right direction?\r\n\r\n\r\nKeep up the good work!\r\nKind regards",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/687/comments",
    "author": "XceSx6",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2018-03-27T13:52:42Z",
        "body": "That error means that you are not sending the correct password."
      }
    ]
  },
  {
    "number": 685,
    "title": "Unilateral response",
    "created_at": "2018-03-27T10:15:28Z",
    "closed_at": "2018-03-27T13:48:17Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/685",
    "body": "Not sure if this an issue or working as designed. This is the raw response\r\n\r\nC: A00000023 FETCH 38:37 (UID FLAGS INTERNALDATE RFC822.SIZE ENVELOPE BODYSTRUCTURE BODY.PEEK[HEADER.FIELDS (IMPORTANCE DELIVERY-DATE)])\r\nS: * 37 FETCH (UID 11882 FLAGS () INTERNALDATE \"16-Mar-2018 14:02:54 +0200\" RFC822.SIZE 5906 ENVELOPE (\"Fri, 16 Mar 2018 15:02:53 +0300\" \"Plain text attachment\" ((NIL NIL \"a.a\" \"a.com\")) ((NIL NIL \"a.a\" \"a.com\")) ((NIL NIL \"a.a\" \"a.com\")) ((\"'a a'\" NIL \"a.a\" \"a.com\")) NIL NIL NIL \"<0afe01d3bd1e$b70011e0$250035a0$@a.com>\") BODYSTRUCTURE (((\"text\" \"plain\" (\"charset\" \"us-ascii\") NIL NIL \"7bit\" 26 8 NIL NIL NIL NIL)(\"text\" \"html\" (\"boundary\" \"----=_NextPart_000_0AFF_01D3BD2F.7A897E20\" \"charset\" \"us-ascii\") NIL NIL \"quoted-printable\" 3980 130 NIL NIL NIL NIL) \"alternative\" (\"boundary\" \"----=_NextPart_001_0134_01D3C5BC.8584E900\") NIL NIL NIL)(\"text\" \"plain\" (\"name\" \"text.txt\" \"charset\" \"us-ascii\") NIL NIL \"7bit\" 13 0 NIL (\"attachment\" (\"filename\" \"text.txt\")) NIL NIL) \"mixed\" (\"boundary\" \"----=_NextPart_000_0133_01D3C5BC.8584E900\") NIL (\"en-us\") NIL) BODY[HEADER.FIELDS (IMPORTANCE DELIVERY-DATE)] {2}\r\nS: \r\nS: )\r\nS: * 38 FETCH (UID 11883 FLAGS () INTERNALDATE \"07-Mar-2018 10:52:34 +0200\" RFC822.SIZE 2548 ENVELOPE (\"Wed, 7 Mar 2018 11:52:34 +0300\" \"test\" ((\"test\" NIL \"test1\" \"a.com\")) ((\"test\" NIL \"test1\" \"a.com\")) ((\"test\" NIL \"test1\" \"a.com\")) ((\"a.a\" NIL \"a.a\" \"a.com\")(NIL NIL \"a.a\" \"a.com\")) NIL NIL NIL \"<AEH8IWVQT3U4.DTNWQR4OCRAN1@DESKTOP-I1FS3O9>\") BODYSTRUCTURE (((\"text\" \"plain\" (\"charset\" \"utf-8\") NIL NIL \"7bit\" 106 5 NIL NIL NIL NIL)(\"text\" \"html\" (\"boundary\" \"----=_NextPart_000_05F3_01D3BB96.7C476AA0\" \"charset\" \"utf-8\") \"<UGJTJWVQT3U4.7R1ZN34I6A7V@DESKTOP-I1FS3O9>\" NIL \"quoted-printable\" 535 23 NIL NIL NIL NIL) \"alternative\" (\"boundary\" \"----=_NextPart_001_013C_01D3C5BC.8C432310\") NIL NIL NIL)(\"application\" \"octet-stream\" (\"name\" \"Untitled attachment 00304.dat\") NIL NIL \"7bit\" 4 NIL (\"attachment\" (\"filename\" \"Untitled attachment 00304.dat\")) NIL NIL) \"mixed\" (\"boundary\" \"----=_NextPart_000_013B_01D3C5BC.8C432310\") NIL NIL NIL) BODY[HEADER.FIELDS (IMPORTANCE DELIVERY-DATE)] {2}\r\nS: \r\nS: )\r\nS: * 29 FETCH (MODSEQ (15845) FLAGS ())\r\nS: * 36 FETCH (MODSEQ (15845) FLAGS ())\r\nS: * 38 FETCH (MODSEQ (15845) FLAGS ())\r\nS: A00000023 OK Fetch completed (0.001 + 0.000 secs).\r\n\r\nI saw MailKit returned total of 4 MailMessageSummaries. We have 5 FETCH responses from the server.\r\nI wonder if Mailkit is merging the two lines for message index 38 in a single MailMessageSummary?\r\n\r\nNot sure why the server is sending unilateral flag response for the message we explicitly requested flags for.\r\n\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/685/comments",
    "author": "ekalchev",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2018-03-27T13:48:17Z",
        "body": "Yes that's what MailKit is doing and yes it's functioning by \"design\".\r\n\r\nThe IMAP specifications allow for servers to return multiple untagged FETCH responses for the same message and the client is expected to merge them.\r\n\r\nFor example, if I request ENVELOPE and BODYSTRUCTURE, the server could respond with 2 untagged FETCH responses - one with the ENVELOPE data and one with the BODYSTRUCTURE data.\r\n\r\nMOST servers will use a single FETCH response per message with all of the requested data, but not all of them will do it all of the time.\r\n\r\nIn this particular case, what is happening is that it is responding to the request with all of the data and the last 3 untagged FETCH responses are flag change events - probably because another client just updated those flags as the server was responding to your request."
      }
    ]
  },
  {
    "number": 684,
    "title": "E-mails do not save in the sent folder. [Question]",
    "created_at": "2018-03-26T07:32:25Z",
    "closed_at": "2018-03-26T15:49:34Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/684",
    "body": "Hello. I use MailKit in my application.\r\nWhen testing using google mail, I did not have any problems.\r\n\r\nHowever, in the final version I will use the linuxpl.com mail client.\r\nThe application correctly sends e-mails from linuxpl.com mail, however it does not save them to the folder sent to linuxpl.com.\r\n```\r\n        using (clientSMTPTwo)\r\n                {\r\n                    clientSMTPTwo.ServerCertificateValidationCallback = (s, c, h, e) => true;\r\n                    await clientSMTPTwo.ConnectAsync(_emailConfigurationToClient.mailSMTPAdres, _emailConfigurationToClient.mailSMTPPort, SecureSocketOptions.SslOnConnect);\r\n                    //clientSMTPOne.AuthenticationMechanisms.Remove(\"XOAUTH2\");\r\n                    await clientSMTPTwo.AuthenticateAsync(_emailConfigurationToClient.mailAdres, _emailConfigurationToClient.mailPassword);\r\n                    await clientSMTPTwo.SendAsync(emailSendTwo);\r\n                    await clientSMTPTwo.DisconnectAsync(true);\r\n                }\r\n```\r\n\r\nMail settings are:\r\nSMTP Port - I tested port 465 and 587.\r\nSMTP Address - s52.linuxpl.com\r\n\r\nThis is what the message looks like:\r\n```\r\n            //emailSendTwo - MimeMessage\r\n            //emailElementsTwo - Multipart\r\n            emailSendTwo.From.Add(new MailboxAddress(_emailConfigurationToClient.mailName, _emailConfigurationToClient.mailAdres));\r\n            emailSendTwo.To.Add(new MailboxAddress(_emailMessageTwo.mailNameTo, _emailMessageTwo.mailAdresTo));\r\n            emailSendTwo.Subject = _emailMessageTwo.mailSubject;\r\n            emailSendTwo.Body = emailElementsTwo;\r\n```\r\n\r\nI would like to ask if the fault is on my side because I configured MailKit incorrectly (Google worked) or on the linuxcom.pl website?\r\n\r\nThanks!",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/684/comments",
    "author": "DawidMusialik",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2018-03-26T15:49:34Z",
        "body": "Well, when you send a message via SMTP, it doesn't get appended to any Sent folder. That's up to you to do using the IMAP protocol.\r\n\r\nIf it works in GMail, it's a bonus feature that GMail apparently implements, but it's not a standard feature.\r\n\r\nHope that helps."
      },
      {
        "user": "DawidMusialik",
        "created_at": "2018-03-26T16:28:58Z",
        "body": "jstedfast, thanks for the answer. I solved the problem. For an amateur like me, it would be useful to write in the documentation as an example of writing an email to the posted directory.\r\n\r\nThanks for your work on MailKit !!!"
      }
    ]
  },
  {
    "number": 683,
    "title": "DeliverAfter returns messages that before the last sync date.",
    "created_at": "2018-03-25T20:20:17Z",
    "closed_at": "2018-03-25T22:40:49Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/683",
    "body": "I am trying to filter out the messages by using Deliever after method like the following:\r\n\r\n```\r\n   if (inbox.IncomingEmailSettings.EmailProtocol == EmailProtocol.IMAP)\r\n            {\r\n                client = new ImapClient();\r\n            }\r\n         using (client)\r\n            {\r\n                client.Connect(inbox.IncomingEmailSettings.HostName, inbox.IncomingEmailSettings.PortNumber, inbox.IncomingEmailSettings.SslSecured);\r\n                client.Authenticate(inbox.Email, inbox.Password);\r\n                var folder = client.Inbox;\r\n                folder.Open(FolderAccess.ReadOnly);\r\n                if (inbox.LastSyncAt == null)\r\n                {\r\n                    uids = client.Inbox.Search(SearchQuery.All);\r\n                }\r\n                else\r\n                {\r\n                    var query = SearchQuery.DeliveredAfter(inbox.LastSyncAt.Value);\r\n                    uids = client.Inbox.Search(query);\r\n                }\r\n\r\n                foreach (var item in uids)\r\n                {\r\n                    var message = folder.GetMessage(item);\r\n                        messageList.Add(message);\r\n\r\n                }\r\n\r\n            }\r\n```\r\nThe method returns data that is not appropriate because it is before the last sync data value ?\r\nAny suggestions to solve this issue.",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/683/comments",
    "author": "AhmedElbatt",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2018-03-25T22:40:49Z",
        "body": "Use the DeliveredAfter search query and then manually filter out the ones before the last-sync date?"
      },
      {
        "user": "AhmedElbatt",
        "created_at": "2018-03-25T22:43:43Z",
        "body": "Do you mean something like that ?\r\nHint: I'm saving the messages first then updating the syncTime, so I am getting the message that delivered after that time.\r\n \r\nvar query = SearchQuery.DeliveredAfter((DateTime)inbox.LastSyncAt.Value);\r\n\r\n             foreach (var item in uids)\r\n                {\r\n                    var message = folder.GetMessage(item);\r\n                    if (inbox.LastSyncAt == null)\r\n                    {\r\n                        messageList.Add(message);\r\n                    }\r\n                    else\r\n                    {\r\n                        if (DateTime.Compare(message.Date.DateTime, inbox.LastSyncAt.Value) > 0)\r\n                        {\r\n                            messageList.Add(message);\r\n                        }\r\n                    }\r\n                }"
      },
      {
        "user": "jstedfast",
        "created_at": "2018-03-26T15:47:19Z",
        "body": "Almost. `message.Date` is the Sent date, not the Received date.\r\n\r\nThe received date can be obtained via the `Fetch()` method if you pass in the `MessageSummaryItems.InternalDate` flag which will allow you to check the `InternalDate` property on the `IMessageSummary`."
      }
    ]
  },
  {
    "number": 682,
    "title": "Get the top EMAIL unique id",
    "created_at": "2018-03-21T22:13:37Z",
    "closed_at": "2018-03-22T16:40:52Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/682",
    "body": "My inbox email count is 2035, but my last(top/newest) email's  unique id is 2110..Is there a way to get the top/last/newest email's uid without retrieveing the entire folder ? ",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/682/comments",
    "author": "arn3342",
    "comments": [
      {
        "user": "ekalchev",
        "created_at": "2018-03-22T09:33:26Z",
        "body": "Try this\r\n\r\nimapFolder.Fetch(imapFolder.Count, -1...\r\nor\r\nimapFolder.Fetch(imapFolder.Count - 1, -1..."
      },
      {
        "user": "arn3342",
        "created_at": "2018-03-22T12:16:14Z",
        "body": "i tried it as follows\r\n\r\nvar summury = folder.fetch(folder.count - 1, -1, MessageSummaryItems.FUll);\r\n    foreach (var sum in summary)\r\n    {\r\n    }\r\n\r\nBut it doesnt work :( It returns 0\r\n"
      },
      {
        "user": "arn3342",
        "created_at": "2018-03-22T13:13:06Z",
        "body": "Ok i got that to work a bit but it returns 3709 whereas my last mai id is 3801 ... why ??"
      },
      {
        "user": "arn3342",
        "created_at": "2018-03-22T13:15:59Z",
        "body": "okey fixed it :)"
      },
      {
        "user": "jstedfast",
        "created_at": "2018-03-22T16:40:52Z",
        "body": "If all you want is the UID of the most recent message in the folder, there's a few ways to do that.\r\n\r\nAs @ekalchev illustrated, you can do that using the Fetch() method:\r\n\r\n```csharp\r\nvar summary = folder.Fetch (folder.Count - 1, folder.Count - 1, MessageSummaryItems.UniqueId).FirstOrDefault ();\r\nvar latestUid = summary != null ? summary.UniqueId : UniqueId.Invalid;\r\n```\r\n\r\nNote above that you need to pass `MessageSummaryItems.UniqueId` to the Fetch() method.\r\n\r\nAnother way is to use the Search() method:\r\n\r\n```csharp\r\nvar all = folder.Search (SearchQuery.All);\r\nvar latestUid = all[all.Count - 1];\r\n```\r\n\r\nIf your server supports `ImapCapabilities.SearchResults`, you can use the following approach:\r\n\r\n```csharp\r\nvar results = folder.Search (SearchOptions.Max, SearchQuery.All);\r\nvar latestUid = results.Max.Value;\r\n```\r\n\r\nMy recommendation would be to use the Fetch() method as I think it'll be cheaper for the server to calculate *and* return a minimum amount of data over the network connection (technically, the SearchResults option is less network traffic, but fewer servers will support this feature and the ones that do might not implement it as efficiently as it could be done).\r\n\r\nThe one caveat with the Fetch() approach is that another client could delete that last message before you get a chance to make that Fetch query, so you'll need to handle cases where it returns nothing."
      }
    ]
  },
  {
    "number": 681,
    "title": "Connection pooling",
    "created_at": "2018-03-21T14:57:42Z",
    "closed_at": "2018-03-21T15:07:39Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/681",
    "body": "Does Mailkit internally use a SMTP connection pool or is really a new connection created per connect call?",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/681/comments",
    "author": "Niklas-Peter",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2018-03-21T15:07:39Z",
        "body": "It's really a new connection created per Connect() call."
      },
      {
        "user": "wasabii",
        "created_at": "2019-06-15T15:50:24Z",
        "body": "@jstedfast I would like to implement pooling, if possible, and am seeking your advise on it.\r\n\r\nSo, SmtpClient owns a connection. And it can multiplex. But is it inherently thread safe? Can multiple threads invoke Send at the same time? Or can Send be invoked multiple times from the same thread, and the result awaited on in a batch? What are the limitations here?\r\n\r\nA cursory reading makes me think it should not be used from multiple threads. But that a single thread can multiplex stuff.\r\n\r\nSo I'm thinking of an object pool indexed by connection/auth information. With a SmtpClient returned and leased. But only for a single user at a time. And then returned to the pool when finished. And said pool leasing needs to do some smart checking to make sure it's still connected, authenticated, etc.\r\n\r\nAnd I'll need to index these pools by connection information. Like connection strings in ADO. So, probably would end up building some sort of SmtpConnectionString concept. Something that can be indexed on.\r\n\r\nDoes this seem right to you?"
      },
      {
        "user": "jstedfast",
        "created_at": "2019-06-15T20:10:00Z",
        "body": "You are correct, it cannot be used from multiple threads.\r\n\r\nI'm not sure it really makes sense to implement connection pooling *inside of* MailKit. I think it probably make sense to implement it *on top of* MailKit, but I'm curious to see what you come up with.\r\n\r\nI would say that the connection string concept would probably work and I would recommend that it take the syntax of a URI: `smtp://user@mail.host.com:587/`\r\n\r\nAre you planning to implement connection pooling for anything other than SMTP?\r\n\r\n\r\n"
      },
      {
        "user": "wasabii",
        "created_at": "2019-06-15T21:31:14Z",
        "body": "Nope. Smtp is all I need for now.\r\n\r\nThat said, if it does belong in MailKit in sure you'd want it extendable to the other clients.\r\n\r\nMy biggest thing to think about right now is authentication methods. Some of these aren't easy to configure in a way that makes sense to be done by the pool."
      },
      {
        "user": "Poltuu",
        "created_at": "2020-01-21T11:22:39Z",
        "body": "Any update on this matter ? I'm looking to implement pooling as well, I'm curious to know if there was any already implemented solution out there."
      },
      {
        "user": "wasabii",
        "created_at": "2020-01-21T18:14:26Z",
        "body": "No. I dropped the project last year. Got pulled onto other things.\r\n\r\nI would have to go back and really take a close look at the ADO.NET design again, because the way they are doing it is probably sufficient. With universal auth and stuff, I'm sure they've thought through the general pattern.\r\n\r\nThe complicated auth methods are still and issue that need to be sorted. SASL, etc. Need a way to index connections by those."
      }
    ]
  },
  {
    "number": 678,
    "title": "149.xxx.xxx.xxx is _my_ address",
    "created_at": "2018-03-20T10:49:25Z",
    "closed_at": "2018-03-20T11:33:52Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/678",
    "body": "\r\nGood day, dear collegues!\r\n\r\nI'm trying to send email using SMTP-server, created by my collegue. I'm using .net core 2.0 this Identity.\r\n\r\nWhen I run my application at debug-mode using my own computer -- it works perfectly.\r\nWhen I run the same app on hosting it throws this exception:\r\n\r\nSmtpCommandException: 149.xxx.xxx.xxx is _my_ address\r\nMailKit.Net.Smtp.SmtpClient.OnSenderNotAccepted(MimeMessage message, MailboxAddress mailbox, SmtpResponse response)\r\n\r\nthe hosting and the smtp-server have the same IP-address and work at the same computer.\r\nI'm sure, that exception of form \"149.xxx.xxx.xxx is _my_ address\" means, that smtp-server thinks, I'm spamer, trying to use its IP to be \"whitelisted\" -- and this server blocks me.\r\n\r\nI've found this:\r\n\r\nHELO is faked interface address\r\nType: forgery\r\nSome spammers put the server's interface address they connect to in their HELO, maybe asuming it is whitelisted or something.\r\ndrop condition = ${if eq{[$interface_address]}{$sender_helo_name}}\r\n     message   = $interface_address is _my_ address\r\n\r\n\r\nBut the same hosting has many other web-applications, they don't have a problem with connection to the local server. \r\n\r\n```csharp\r\n\r\npublic async Task SendEmailAsync(string email, string subject, string message)\r\n        {\r\n            var emailMessage = new MimeMessage();\r\n            emailMessage.From.Add(new MailboxAddress(\"No reply\", \"XX@XXXX.XXX\"));\r\n            emailMessage.To.Add(new MailboxAddress(\"\", email));\r\n            emailMessage.Subject = subject;\r\n            emailMessage.Body = new TextPart(MimeKit.Text.TextFormat.Html)\r\n            {\r\n                Text = message\r\n            };\r\n\r\n            using (var client = new SmtpClient())\r\n            {               \r\n                await client.ConnectAsync(\"localhost\", 25, SecureSocketOptions.None);\r\n                await client.AuthenticateAsync(\"XX@XXXX.XXX\", \"Password\");\r\n                \r\n                await client.SendAsync(emailMessage);                \r\n\r\n                await client.DisconnectAsync(true);\r\n            }\r\n        }\r\n\r\n```\r\n\r\nI tried to use its address instead of \"localhost\". But it throws the same exception.\r\nWhat should I do? How to say a smtp-server that I'm not spamer, that I'm just physically situated on its IP-address, on the same computer?\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/678/comments",
    "author": "ovavadim",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2018-03-20T11:33:52Z",
        "body": "You need to set the `client.LocalDomain` string to the value you want to use in the EHLO.\r\n\r\nThe SMTP server code that youy showed me shows that there's no way for MailKit to get this to work because of *course* it is going to use the same interface address in the EHLO, because that's what is being used! :)"
      },
      {
        "user": "eriknuds",
        "created_at": "2018-05-08T11:41:35Z",
        "body": "Actually ovavadim, I think the server is trying to prevent a mail loop. I believe that was the original intention of the ehlo/helo domain string."
      }
    ]
  },
  {
    "number": 673,
    "title": "Get messages using email address",
    "created_at": "2018-03-12T14:45:11Z",
    "closed_at": "2018-03-12T15:10:55Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/673",
    "body": "I retrieved the sender address using `message.From.ToStroing`. Now,for example,if i have an email address such as `abc@def.com`, is there a way to fetch all the mail summary that came from this specific address ?",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/673/comments",
    "author": "arn3342",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2018-03-12T15:10:55Z",
        "body": "Yes:\r\n\r\n```csharp\r\nvar uids = folder.Search (SearchQuery.FromContains (\"abc@def.com\"));\r\nvar summaries = folder.Fetch (uids, .....);\r\n```\r\n"
      }
    ]
  },
  {
    "number": 670,
    "title": "Athenticate without password.",
    "created_at": "2018-03-09T11:51:16Z",
    "closed_at": "2018-03-09T12:02:35Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/670",
    "body": "Hi\r\n\r\nGreat package for advanced emailing. Thanks!\r\n\r\nI have a customer where the smpt accepts the e-mails, which are coming from our domain containing a sender’s address, which is also in our domain. Is it possible to authenticate the client in such cases? There is no password, only a sender username.\r\n\r\nThanks.",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/670/comments",
    "author": "generik0",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2018-03-09T12:02:35Z",
        "body": "Yes, it's possible. Just don't call Authenticate()."
      }
    ]
  },
  {
    "number": 668,
    "title": "Get summary from mailkit c#",
    "created_at": "2018-03-07T21:21:00Z",
    "closed_at": "2018-03-07T22:01:44Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/668",
    "body": "I am trying to retrieve the emails after a specific ID using `MailKit`.I am using the below code:\r\n\r\n\r\n   ` var range = new UniqueIdRange (new UniqueId ((uint) 2001), UniqueId.MaxValue);\r\n\r\n    foreach (var uid in folder.Search (range, query)) {\r\n    var message = folder.GetMessage (uid);\r\n    }`\r\n\r\nNow my problem is,in such a situation,i don't want to download the entire message,but just the `Summary`(IMessageSummary) because i just want the `From` and `Date` from the summary.I know i can use `message.from` bur i need `summary.From`.Any way to do that ?\r\n\r\nOne last question, i have 2 forms in my winforms app,is it possible to login using `MailKit.Net.ImapClient` from one from and use that login/connection in the second form so that in the 2nd form, i dont need to log in again ?",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/668/comments",
    "author": "arn3342",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2018-03-07T22:01:44Z",
        "body": "Instead of this:\r\n\r\n```csharp\r\nvar range = new UniqueIdRange (new UniqueId ((uint) 2001), UniqueId.MaxValue);\r\n\r\nforeach (var uid in folder.Search (range, query)) {\r\n    var message = folder.GetMessage (uid);\r\n}\r\n```\r\n\r\ndo this:\r\n\r\n```csharp\r\nvar range = new UniqueIdRange (new UniqueId ((uint) 2001), UniqueId.MaxValue);\r\nvar uids = folder.Search (range, query);\r\n\r\nforeach (var summary in folder.Fetch (uids, MessageSummaryItems.Envelope)) {\r\n    // now you can use summary.Envelope to get date or from\r\n}\r\n```\r\n\r\n> One last question, i have 2 forms in my winforms app,is it possible to login using MailKit.Net.ImapClient from one from and use that login/connection in the second form so that in the 2nd form, i dont need to log in again ?\r\n\r\nYes, it's possible. You would do it the same way you would share an integer variable or anything else between 2 forms."
      }
    ]
  },
  {
    "number": 665,
    "title": "reconnect on disconnect?",
    "created_at": "2018-03-06T20:22:43Z",
    "closed_at": "2018-03-06T21:36:26Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/665",
    "body": "I'm using azure an azure webjob to run a continuous job that will (on launch) listen to N imap accounts via oauth.\r\n\r\nRunning locally as console app, it works fine; below is the code that starts the tasks to connect., \r\n\r\n```csharp\r\nstatic void Main()\r\n        {\r\n            var host = new JobHost();\r\n            // The following code ensures that the WebJob will be running continuously\r\n            List<SomeEmailProc> emails = new List<SomeEmailProc>();\r\n            using (someEntities en = new someEntities())\r\n            {\r\n                var mss = en.ValidatedAccounts.ToList();\r\n                foreach (var item in mss)\r\n                {\r\n                    var bk = en.AccountToken.Where(o => o.AccountId == item.Id).FirstOrDefault();\r\n                    if (bk == null || string.IsNullOrEmpty(item.RefreshToken)) continue;\r\n                    Task.Factory.StartNew(() =>\r\n                    {\r\n                        try{\r\n                            emails.Add(new SomeEmailProc(item, bk));\r\n                        }\r\n                        catch { }\r\n                    });\r\n                }\r\n            }\r\n\r\n            host.RunAndBlock();\r\n        }\r\n```\r\n\r\nThe SomeEmailProc - function basically, initializes the client where it will auth with the appropriate folders and the event listeners.\r\n\r\nI need to figure out how to capture the protocol log when its running in the azure webjob space- the output will be truncated on azure webjobs.\r\n\r\nSince I do not yet know if azure is putting it in \"cold mode\" or if the clients are timing out and not connecting - my first question is \"do we need to explicitly handle a disconnect, and do a reconnect on disconnect?\" or is this handled automatically by the client?\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/665/comments",
    "author": "zxed",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2018-03-06T21:36:26Z",
        "body": "You will need to manually re-connect once you've been disconnected. It will not auto-reconnect for you (I considered trying to implement this but it would require MailKit to hold onto the auth credentials which seemed like a bad idea for security reasons).\r\n"
      }
    ]
  },
  {
    "number": 662,
    "title": "Does mailkit support certificate store",
    "created_at": "2018-03-06T16:29:48Z",
    "closed_at": "2018-03-06T17:50:11Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/662",
    "body": "We have a mailkit based imap client for viewing email which works as expected.\r\n\r\nWhen an Anti-Virus client installs it's own certificate and scans SSL connections, it presents it's own certificate and gives us the error 'Remote certificate has errors'.  As documented by yourself we have easily fixed this by referencing the thumbprint of the AV programs certificate (or simply ignoring these errors), however I was wondering is mailkit able to reference the certificate store in the same way Outlook does so we don't need to manually reference the thumbprint?\r\n\r\nThanks,\r\n\r\nJim ",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/662/comments",
    "author": "jimjimbojimbob",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2018-03-06T17:50:11Z",
        "body": "For SSL, MailKit uses `SslStream` which references the SSL Certificate Store in whatever way the standard way is for that system (Windows is different from Linux which is different from MacOS and might differ between Mono and CoreCLR as well).\r\n\r\nI have no idea how Outlook accesses the certificate store(s) on your system, but I imagine it would be the same way that the standard .NET runtime does on Windows (the Mono runtime might be different, I'm not sure).\r\n\r\nOther than the callback that MailKit provides (which is really just a hook into the callback approach that SslStream provides), there's no other way that I know of to control how certificates and/or certificate stores are used.\r\n\r\nProbably not quite the answer you were hoping for, but I hope that helps..."
      }
    ]
  },
  {
    "number": 661,
    "title": "Retrieve inbox messages in reverse order Mailkit.",
    "created_at": "2018-03-06T09:41:41Z",
    "closed_at": "2018-03-06T13:20:47Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/661",
    "body": "Hello, i am using this code to retrieve messages(only FROM and DATE) from my gmail inbox : \r\n\r\n`var inbox = MailKitClient.Inbox;\r\n    inbox.Open(FolderAccess.ReadOnly);\r\n    for (int i = 0; i <= inbox.Count - 1; i++)\r\n    {\r\n        var message = inbox.GetMessage(i);\r\n        Emails Email = new Emails;\r\n        Email.From = message.From.ToString;\r\n        Email.Subject = message.Date.ToString;\r\n        InboxMails.Add(Email);\r\n    }`\r\n\r\nThe problem is,as i am also loading the dates,i can see that the message start coming/retrieving from the last message and eventually to the first. I tried using sort : \r\n\r\n  `inbox.sort(Search.SearchQuery.NotDeleted,Search.OrderBy.ReverseArrival)`\r\n\r\nBut it throws an error saying IMAP SERVER DOESNT SUPPORT SORT or something like that",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/661/comments",
    "author": "arn3342",
    "comments": [
      {
        "user": "ekalchev",
        "created_at": "2018-03-06T12:03:01Z",
        "body": "for (int i = inbox.Count -1; i >= 0; i--)\r\n\r\ntry this"
      },
      {
        "user": "jstedfast",
        "created_at": "2018-03-06T13:20:47Z",
        "body": "As you have discovered, not all IMAP servers support the SORT extension.\r\n\r\nThe way to check for this in the future, is:\r\n\r\n```csharp\r\nif (client.Capabilities.HasFlag (ImapCapabilities.Sort))\r\n{\r\n    // the server supports the SORT command\r\n}\r\n```\r\n\r\nIf the server doesn't support sorting, then all you can do is sort things client-side. @ekalchev 's suggestion is the easiest, but you could also download all of the messages into a list (or an array) and sort the result using `System.Array.Sort()`.\r\n\r\nWhich you choose is up to you.\r\n\r\nHope that helps!"
      },
      {
        "user": "arn3342",
        "created_at": "2018-03-06T13:51:03Z",
        "body": "why was this post closed ?"
      },
      {
        "user": "arn3342",
        "created_at": "2018-03-06T13:57:28Z",
        "body": "for (int i = inbox.Count -1; i >= 0; i--)\r\n\r\nThis doesnt even return a single message\r\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2018-03-06T14:40:56Z",
        "body": "It was closed because it was explained that you could make a loop that walks backwards to get the messages in reverse order."
      },
      {
        "user": "arn3342",
        "created_at": "2018-03-06T14:56:06Z",
        "body": "but that loop doesnt even return a single messge.....any help ?"
      },
      {
        "user": "arn3342",
        "created_at": "2018-03-06T16:14:42Z",
        "body": "any help plz??\r\n"
      },
      {
        "user": "ekalchev",
        "created_at": "2018-03-06T16:16:43Z",
        "body": "try with FolderAccess.ReadWrite\r\ninbox.Open(FolderAccess.ReadWrite)"
      },
      {
        "user": "arn3342",
        "created_at": "2018-03-06T16:24:30Z",
        "body": "Tried that a long ago,didnt work"
      },
      {
        "user": "arn3342",
        "created_at": "2018-03-06T16:28:22Z",
        "body": "Hey, if i have a list)of string) populated with unique id,is it possible to get messgaes(from,date) using the UniqueIds from the list ?"
      }
    ]
  },
  {
    "number": 659,
    "title": "IMapClient.connect takes a very long time",
    "created_at": "2018-03-03T06:54:36Z",
    "closed_at": "2018-03-04T13:48:57Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/659",
    "body": "Hello, I have very simply code like this:\r\n\r\nclient.ServerCertificateValidationCallback = (s, c, h, e) => true;\r\nclient.Timeout = 30000;\r\nemailServer.tokenSource = new CancellationTokenSource();\r\nemailServer.token = tokenSource.Token;\r\nclient.Connect(connectionLine, port, true,emailServer.token);\r\n                \r\n.. and I also have onTimer event each of 30 seconds which checks if connect function is still running, and if yes - it sends cancellation token to Cancel() like this:\r\n\r\npublic void OnTimer(object sender, System.Timers.ElapsedEventArgs args)\r\n        {\r\n            if (emailServer.inReconnection)\r\n                emailServer.tokenSource.Cancel();\r\n\r\nHowever it doesn't work. Sometimes client.Connect() takes 2-3 hours (!!!!) of trying connect to IMAP.YANDEX.RU, then it shows error due to some reason, then connecting again OK. \r\n\r\nHow I can stop the process of connection after 30 seconds of trying? ",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/659/comments",
    "author": "avdegt1976",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2018-03-04T13:48:57Z",
        "body": "What you'll have to do is search StackOverflow.com for how to cancel a Socket.Connect() call in .NET, then implement that yourself. Then, once you have a connected Socket, you can pass it off to `client.Connect(Socket socket, string host, int port, SecureSocketOption sslOptions)`\r\n\r\nI can't easily support cancellation of Socket.Connect() in MailKit."
      },
      {
        "user": "avdegt1976",
        "created_at": "2018-03-08T15:02:01Z",
        "body": "Thanks, but the problem is I have SSL connection, which means no socket available.\r\nWhat if I do asynchronous mode of connection? "
      },
      {
        "user": "jstedfast",
        "created_at": "2018-03-08T15:20:40Z",
        "body": "All connections have a socket, even SSL connections."
      }
    ]
  },
  {
    "number": 656,
    "title": "IMAP /SMTP client connection is very slow",
    "created_at": "2018-02-28T06:59:05Z",
    "closed_at": "2018-02-28T11:56:41Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/656",
    "body": "Yo Jeff,\r\nI'm using your library and loved this...\r\n\r\nNow, I'm facing an issue regarding speed. [ in backend, I'm creating new ImapClient on each operation on server in \"using\" code block  (`using (var client = new ImapClient() { client.connect() })`)]\r\nImap or Smtp client creation and connection with server (using email, password, incoming/outgoing server with ports) and FOLDER opening (by `client.GetFolder()` ) takes much time and makes the overall process much slower.\r\n\r\nIs there a way to speed this up? or any valuable suggestions are highly appreciated.\r\nThank you so much!",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/656/comments",
    "author": "officialrizwanali",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2018-02-28T11:56:40Z",
        "body": "I would recommend keeping the ImapClient reference and not disposing it after each minor usage.\r\n\r\nMost likely this will mean you'll have to stop using it in a `using` statement and instead have some sort of application-level reference to the ImapClient so that you can reuse them over and over again.\r\n\r\nYou will also need to keep the connection alive by invoking client.NoOp() every once in a while (I would recommend calling NoOp() every 5-10 minutes or so).\r\n\r\nFor SMTP, I would recommend queueing a bunch of messages to send and then sending all of them like this:\r\n\r\n```csharp\r\nusing (var client = new SmtpClient ()) {\r\n    client.Connect (.....);\r\n    client.Authenticate (....);\r\n\r\n    for (int i = 0; i < messages.Count; i++)\r\n        client.Send (messages[i]);\r\n\r\n    client.Disconnect (true);\r\n}\r\n```\r\n"
      },
      {
        "user": "officialrizwanali",
        "created_at": "2018-03-01T05:44:00Z",
        "body": "Thank you, got your point.\r\nAnother angle to apply your proposed solution is to apply lazy loading (means when the client is not connected, connect it immediately, else return client)\r\nJust a lil thing to ask more, In my scenario, a user can have multiple accounts even more than 10. How should I maintain clients for multiple accounts (user is free to do any operation on any connected account, e.g. MarkRead on Acc1, Compose in Acc2, Sync in Acc3, all in a go, etc)\r\n\r\nAny better technique to manage alive ImapClient /SMTP client?"
      },
      {
        "user": "jstedfast",
        "created_at": "2018-03-01T14:50:11Z",
        "body": "Have an Account object which stores an SmtpClient and an ImapClient that you can easily look up based on account name or email address or something.\r\n"
      }
    ]
  },
  {
    "number": 655,
    "title": "Auto responder implementation",
    "created_at": "2018-02-28T06:54:06Z",
    "closed_at": "2018-02-28T11:50:17Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/655",
    "body": "Yo Jeff,\r\nLoved your library and explored it much.\r\nNow, my personal mailbox users want the new feature.\r\n-- Auto reponder\r\n\r\nCan you share me some helping resource regarding auto responder implementation in mailbox (which developed based on Mailkit)?",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/655/comments",
    "author": "officialrizwanali",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2018-02-28T11:50:17Z",
        "body": "Well, to implement an auto-responder, you just need to auto-generate MimeMessages that say \"So-and-so is out of the office at this time.\" and send them to anyone who sends your user a new message.\r\n\r\nThere's no need to add any functionality to MailKit for this."
      }
    ]
  },
  {
    "number": 648,
    "title": "Custom IProtocolLogger implementation",
    "created_at": "2018-02-21T19:16:27Z",
    "closed_at": "2018-02-22T15:07:16Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/648",
    "body": "Is it possible to have custom implementation of IProtocolLogger which logs imap commands only, without actual mime part bodies, user, password and etc.\r\n\r\nI would like user to be able to submit their logs for troubleshooting but mime body content makes those logs huge and it contains sensitive user info. Em Client logs are like this and I would like to come up with similar implementation using MailKit.",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/648/comments",
    "author": "ekalchev",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2018-02-22T15:07:16Z",
        "body": "Yes, you can implement your own custom IProtocolLogger.\r\n\r\nIProtocolLogger is just an interface."
      }
    ]
  },
  {
    "number": 646,
    "title": "Stream attachments",
    "created_at": "2018-02-15T07:35:51Z",
    "closed_at": "2018-02-15T12:02:14Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/646",
    "body": "Are stream attachments really streamed to the SMTP server, i. e., without loading the complete stream into memory? This is important to know for me, because I send some emails concurrently (using multiple SmtpClients) each having attachments loaded from a database or the file system as a stream.\r\n\r\n> builder.Attachments.Add(\"myLargeFile.pdf\", File.OpenRead(\"myLargeFile.pdf\"))\r\n\r\nThanks in advance!\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/646/comments",
    "author": "Niklas-Peter",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2018-02-15T12:02:14Z",
        "body": "Yes, they are streamed and the stream needs to be seekable because MailKit may need to measure the size of the message in some cases."
      }
    ]
  },
  {
    "number": 643,
    "title": "Not possible to load NuGet package MailKit",
    "created_at": "2018-02-05T13:55:16Z",
    "closed_at": "2018-02-05T16:10:29Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/643",
    "body": "Hello,\r\n\r\nI tried to load the NuGet package MailKit Version 2.0.1 and I get the following error:\r\n\r\nThe \"MailKit 2.0.1\" package could not be installed. You are trying to install this package into a project that refers to \". NETPortable, Version=v4.5, Profile=Profile259\", but the package does not contain assembly references or content files that are compatible with this framework. For more information, please contact the package manufacturer.\r\n\r\nEs wird versucht, Abhängigkeitsinformationen für das Paket \"MailKit.2.0.1\" bezüglich des Projekts \"SePem300TestApp.Android\" mit dem Ziel \"MonoAndroid,Version=v7.0\" zu erfassen.\r\nDas Erfassen von Abhängigkeitsinformationen hat 5,7 sec gedauert.\r\nEs wird versucht, Abhängigkeiten für das Paket \"MailKit.2.0.1\" mit dem DependencyBehavior \"Lowest\" aufzulösen.\r\nDas Auflösen von Abhängigkeitsinformationen hat 0 ms gedauert.\r\nAktionen zum Installieren des Pakets \"MailKit.2.0.1\" werden aufgelöst.\r\nAktionen zum Installieren des Pakets \"MailKit.2.0.1\" wurden aufgelöst.\r\nDas Paket \"MailKit 2.0.1\" wird aus \"nuget.org\" abgerufen.\r\nInstallationsfehler. Ein Rollback wird ausgeführt...\r\nDas Paket \"MailKit.2.0.1\" ist im Projekt \"SePem300TestApp\" nicht vorhanden.\r\nDas Paket \"MailKit.2.0.1\" ist im Ordner \"D:\\Entwicklung\\TestApp\\packages\" nicht vorhanden.\r\nDas Ausführen von NuGet-Aktionen hat 505,81 ms gedauert.\r\nDas Paket \"MailKit 2.0.1\" konnte nicht installiert werden. Sie versuchen, dieses Paket in ein Projekt zu installieren, das sich auf \".NETPortable,Version=v4.5,Profile=Profile259\" bezieht, das Paket enthält aber keine Assemblyverweise oder Inhaltsdateien, die mit diesem Framework kompatibel sind. Wenden Sie sich an den Paketersteller, um weitere Informationen zu erhalten.\r\nVerstrichene Zeit: 00:00:07.0376147\r\n========== Abgeschlossen ==========\r\n\r\n\r\nWhat can I do load it correctly?\r\n\r\n\r\nThank you very much,\r\n\r\nEmjay71",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/643/comments",
    "author": "MartinJakober",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2018-02-05T16:10:29Z",
        "body": "MailKit doesn't support PCL Profile 259.\r\n\r\nPortable Class Libraries have been deprecated in favor of NET Standard by Microsoft, so I would recommend making the switch away from PCL as you'll find more and more nugets dropping support for PCL as time goes on."
      },
      {
        "user": "MartinJakober",
        "created_at": "2018-02-06T06:26:27Z",
        "body": "Thank you very much for your answer ;-) "
      }
    ]
  },
  {
    "number": 642,
    "title": "Is it possible to make pagination in grid with current selected folder mail list....?",
    "created_at": "2018-02-05T06:12:33Z",
    "closed_at": "2018-02-05T11:59:01Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/642",
    "body": "",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/642/comments",
    "author": "PrasanthSpine",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2018-02-05T11:59:01Z",
        "body": "That's not something that MailKit does for you, that's something your UI developer needs to figure out how to do."
      }
    ]
  },
  {
    "number": 641,
    "title": "Request for POP3 'Fetch' before downloading",
    "created_at": "2018-02-01T13:28:08Z",
    "closed_at": "2018-02-01T15:09:17Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/641",
    "body": "I'm creating an email app that needs to support both IMAP and POP3 protocols. I have a local cache of messages that have already been downloaded. I didn't have much trouble implementing the message synchronization on the IMAP side (thanks for that!). \r\n\r\nFor POP3, checking for messages I've already downloaded is a bit tricky. As I understand it, not all POP3 servers support message UIDs. In that case, I want to fall back to comparing metadata of the message (e.g. Date/Sender/Subject) to check if it has already been downloaded. It seems the only way to get this information is to download the whole message. It would be convenient if you could add something similar to IMailFolder.Fetch to Pop3Client so that I can get the metadata before downloading the whole message. \r\n\r\nYou're the expert, so I'll trust your judgement if that is a reasonable request or not worth the effort. Thank you!",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/641/comments",
    "author": "jernelson7",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2018-02-01T15:09:17Z",
        "body": "IMAP is a far more flexible protocol than POP3. The IMAP and POP3 API's mimic the protocol commands that are available.\r\n\r\nThat said, POP3 does have a HEAD command which gets just the message headers and the Pop3Client has a GetHeaders() method to take advantage of this.\r\n\r\nThat's what I would recommend using.\r\n\r\nHope that helps!"
      },
      {
        "user": "jernelson7",
        "created_at": "2018-02-01T19:36:02Z",
        "body": "Thanks! I think that will work. I was worried about having to parse the headers but I see you have some support for that (e.g. InternetAddress.TryParse)."
      }
    ]
  },
  {
    "number": 638,
    "title": "ModSeq or HighestModSeq value not return",
    "created_at": "2018-01-25T04:39:30Z",
    "closed_at": "2018-01-25T14:12:14Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/638",
    "body": "I'm trying to read recent messages by cache with ModSeq or HighestModSeq\r\nbut the ModSeq of the item or HighestModSeq value is not returned.\r\n\r\ninbox.Open(FolderAccess.ReadOnly, stoppingToken);\r\nmessages = inbox.Fetch(0, -1,\r\n         MessageSummaryItems.ModSeq | MessageSummaryItems.UniqueId).ToList();\r\n        var highestModSeq = inbox.HighestModSeq;\r\n\r\nS: * OK The Microsoft Exchange IMAP4 service is ready.\r\nC: A00000000 CAPABILITY\r\nS: * CAPABILITY IMAP4 IMAP4rev1 AUTH=PLAIN AUTH=NTLM AUTH=GSSAPI UIDPLUS MOVE ID CHILDREN IDLE NAMESPACE LITERAL+\r\nS: A00000000 OK CAPABILITY completed.\r\nC: A00000001 AUTHENTICATE PLAIN\r\nS: +\r\nC: AG5tcwB3anNza2FlbzEh\r\nS: A00000001 OK AUTHENTICATE completed.\r\nC: A00000002 CAPABILITY\r\nS: * CAPABILITY IMAP4 IMAP4rev1 AUTH=PLAIN AUTH=NTLM AUTH=GSSAPI UIDPLUS MOVE ID XPROXY3 CHILDREN IDLE NAMESPACE LITERAL+\r\nS: A00000002 OK CAPABILITY completed.\r\nC: A00000003 NAMESPACE\r\nS: * NAMESPACE ((\"\" \"/\")) NIL NIL\r\nS: A00000003 OK NAMESPACE completed.\r\nC: A00000004 LIST \"\" \"INBOX\"\r\nS: * LIST (\\Marked \\HasNoChildren) \"/\" INBOX\r\nS: A00000004 OK LIST completed.\r\nC: A00000005 EXAMINE INBOX\r\nS: * 42 EXISTS\r\nS: * 42 RECENT\r\nS: * FLAGS (\\Seen \\Answered \\Flagged \\Deleted \\Draft $MDNSent)\r\nS: * OK [PERMANENTFLAGS ()] Permanent flags\r\nS: * OK [UNSEEN 7] Is the first unseen message\r\nS: * OK [UIDVALIDITY 14] UIDVALIDITY value\r\nS: * OK [UIDNEXT 51] The next unique identifier value\r\nS: A00000005 OK [READ-ONLY] EXAMINE completed.\r\nC: A00000006 FETCH 1:* UID\r\nS: * 1 FETCH (UID 2)\r\nS: * 2 FETCH (UID 3)\r\nS: * 3 FETCH (UID 4)\r\nS: * 4 FETCH (UID 5)\r\nS: * 5 FETCH (UID 13)\r\nS: * 6 FETCH (UID 14)\r\nS: * 7 FETCH (UID 15)\r\nS: * 8 FETCH (UID 16)\r\nS: * 9 FETCH (UID 17)\r\nS: * 10 FETCH (UID 18)\r\nS: * 11 FETCH (UID 19)\r\nS: * 12 FETCH (UID 20)\r\nS: * 13 FETCH (UID 21)\r\nS: * 14 FETCH (UID 22)\r\nS: * 15 FETCH (UID 23)\r\nS: * 16 FETCH (UID 24)\r\nS: * 17 FETCH (UID 25)\r\nS: * 18 FETCH (UID 26)\r\nS: * 19 FETCH (UID 27)\r\nS: * 20 FETCH (UID 28)\r\nS: * 21 FETCH (UID 29)\r\nS: * 22 FETCH (UID 30)\r\nS: * 23 FETCH (UID 31)\r\nS: * 24 FETCH (UID 32)\r\nS: * 25 FETCH (UID 33)\r\nS: * 26 FETCH (UID 34)\r\nS: * 27 FETCH (UID 35)\r\nS: * 28 FETCH (UID 36)\r\nS: * 29 FETCH (UID 37)\r\nS: * 30 FETCH (UID 38)\r\nS: * 31 FETCH (UID 39)\r\nS: * 32 FETCH (UID 40)\r\nS: * 33 FETCH (UID 41)\r\nS: * 34 FETCH (UID 42)\r\nS: * 35 FETCH (UID 43)\r\nS: * 36 FETCH (UID 44)\r\nS: * 37 FETCH (UID 45)\r\nS: * 38 FETCH (UID 46)\r\nS: * 39 FETCH (UID 47)\r\nS: * 40 FETCH (UID 48)\r\nS: * 41 FETCH (UID 49)\r\nS: * 42 FETCH (UID 50)\r\nS: A00000006 OK FETCH completed.\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/638/comments",
    "author": "chris-ryu",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2018-01-25T14:12:14Z",
        "body": "Not all IMAP servers support MODSEQ and HIGHESTMODSEQ. Only IMAP servers that support the CONDSTORE extension support it (and it appears yours does not by the CAPABILITY response)."
      }
    ]
  },
  {
    "number": 635,
    "title": "NotSupportedException: No compatible authentication mechanisms found",
    "created_at": "2018-01-17T09:11:09Z",
    "closed_at": "2018-01-17T15:54:48Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/635",
    "body": "Hello,\r\nI was using MailKit 1.4.0 and my code worked fine:\r\n```csharp\r\n            using (var smtpClient = new SmtpClient())\r\n            {\r\n                await smtpClient.ConnectAsync(_configuration.SmtpServer, _configuration.SmtpPort);\r\n                await smtpClient.AuthenticateAsync(_configuration.SmtpUsername, _configuration.SmtpPassword);\r\n\r\n                await smtpClient.SendAsync(message);\r\n                await smtpClient.DisconnectAsync(true);\r\n\r\n            }\r\n```\r\nNow I want to upgrade to MailKit 2.0.1 and I've got an NotSupportedExcetion:\r\n```\r\nNotSupportedException: No compatible authentication mechanisms found.\r\nMailKit.Net.Smtp.SmtpClient+<AuthenticateAsync>d__64.MoveNext()\r\n\r\n\r\nMailKit.Net.Smtp.SmtpClient+<AuthenticateAsync>d__64.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSSO.Core.Mail.Service.EmailService+<SendAsync>d__2.MoveNext() in EmailService.cs\r\n+\r\n                await smtpClient.AuthenticateAsync(_configuration.SmtpUsername, _configuration.SmtpPassword);\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSSOLocalWeb.Controllers.AccountController+<ForgotPassword>d__11.MoveNext() in AccountController.cs\r\n+\r\n            await emailService.SendAsync(emailMessage);\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.Mvc.Internal.ControllerActionInvoker+<InvokeActionMethodAsync>d__12.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Internal.ControllerActionInvoker+<InvokeNextActionFilterAsync>d__10.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nMicrosoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)\r\nMicrosoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(ref State next, ref Scope scope, ref object state, ref bool isCompleted)\r\nMicrosoft.AspNetCore.Mvc.Internal.ControllerActionInvoker+<InvokeInnerFilterAsync>d__14.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeNextResourceFilter>d__22.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(ref State next, ref Scope scope, ref object state, ref bool isCompleted)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeFilterPipelineAsync>d__17.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeAsync>d__15.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Builder.RouterMiddleware+<Invoke>d__4.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Authentication.AuthenticationMiddleware+<Invoke>d__6.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Session.SessionMiddleware+<Invoke>d__9.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nMicrosoft.AspNetCore.Session.SessionMiddleware+<Invoke>d__9.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware+<Invoke>d__7.MoveNext()\r\n```\r\n\r\nI've sent you a protocol log at your email\r\njestedfa@microsoft.com instead of including it in the GitHub issue.\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/635/comments",
    "author": "sheenm",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2018-01-17T15:54:48Z",
        "body": "Ok, so the problem is that NTLM has been disabled as one of the default SASL mechanisms to try automatically. This is because I got too many bug reports of NTLM not working (altho it obviously worked for you) and because when NTLM fails, some servers do not allow fallback to other mechanisms.\r\n\r\nIn MailKit 2.0.1, you can use the following code to login via NTLM:\r\n\r\n```csharp\r\nvar ntlm = new SaslMechanismNtlm (\"username\", \"password\");\r\nclient.Authenticate (ntlm);\r\n```\r\n\r\nHope that helps!\r\n\r\n(I may reconsider adding it back to the list of default auth mechanisms to try now that I know it works at least for some people)"
      },
      {
        "user": "sheenm",
        "created_at": "2018-01-17T23:54:08Z",
        "body": "Yes, It worked!\r\nMany thanks"
      },
      {
        "user": "OzBob",
        "created_at": "2023-01-24T03:07:18Z",
        "body": "For others with the same error message connecting to m365 on Port 25, changing to port 587 removed that error."
      }
    ]
  },
  {
    "number": 632,
    "title": "Is there a way I can covert a Microsoft.Exchange.WebServices.Data.EmailMessage to MineMessage",
    "created_at": "2018-01-16T13:44:53Z",
    "closed_at": "2018-01-16T13:48:59Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/632",
    "body": "I'm using multiple services and want to use MailKit to send email but I also want to include an existing email received by EWS in the format Microsoft.Exchange.WebServices.Data.EmailMessage.\r\n\r\nIs there a way I can covert a Microsoft.Exchange.WebServices.Data.EmailMessage into MineMessage so that I can attach it.\r\n\r\nvar messagepart = new MessagePart {Message = orignalMessage};\r\nmultipart.Add(messagepart);\r\n\r\nI can also use Microsoft.Exchange.WebServices.Data.EmailMessage.MimeContent.Content to get the mime message as Btye[] if there is a way to convert that to a MineMessage.\r\n\r\nRegards,\r\n\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/632/comments",
    "author": "truane",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2018-01-16T13:48:59Z",
        "body": "If you can get the full message as a byte[], then yes:\r\n\r\n```csharp\r\nvar messageData = exchangeEmailMessage.MimeContent.Content;\r\nMimeMessage message;\r\n\r\nusing (var stream = new MemoryStream (messageData, false))\r\n    message = MimeMessage.Load (stream);\r\n```"
      }
    ]
  },
  {
    "number": 630,
    "title": "how to consume system.net settings in the web.config?",
    "created_at": "2018-01-15T11:01:51Z",
    "closed_at": "2018-01-15T12:32:28Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/630",
    "body": "Hi there,\r\n\r\nI'm using ASP.NET 4.5 MVC and would like to use the MailKit, however, how do you use the system.net in my web.config to MailKit? \r\n\r\n```\r\n<system.net>\r\n        <mailSettings>\r\n            <smtp deliveryMethod=\"Network\" from=\"system@company.com\">\r\n                <network host=\"localhost\" />\r\n            </smtp>\r\n        </mailSettings>\r\n    </system.net>\r\n```\r\n\r\nI would just like to use the web.config and would not like to add any literal strings configuration to my codes so that to make things simple and organised.",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/630/comments",
    "author": "rpmansion",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2018-01-15T12:32:28Z",
        "body": "You'll have to write your own custom code to parse web.config to get the values.\r\n\r\nMailKit doesn't parse web.config and never will."
      }
    ]
  },
  {
    "number": 626,
    "title": "Failure sending multiple simultaneous emails",
    "created_at": "2018-01-12T18:16:25Z",
    "closed_at": "2018-01-12T18:51:00Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/626",
    "body": "After upgrading our solution from MailKit 1.x version to 2.0.1 version, we have started to experience errors whenever we attempt to send e-mails on multiple threads at the same time.\r\n\r\nWe receive one of the two following errors:\r\n\r\n> Error reading a response from the SMTP server. => Cannot access a disposed object.\r\n> Object name: 'SslStream'.\r\n\r\n> Error reading a response from the SMTP server. =>  The BeginRead method cannot be called when another read operation is pending.\r\n\r\nIs there any reference on how to properly use new asynchronous APIs?\r\n\r\nThis is code sample from our app:\r\n\r\n    public class MailerProcess\r\n    {\r\n        public static void Run()\r\n        {\r\n             using (SmtpClient client = new SmtpClient())\r\n             {\r\n                   string host = AppSettingsWrapper.Host;\r\n                   string port = AppSettingsWrapper.Port.ToString();\r\n\r\n                   client.Connect(AppSettingsWrapper.Host, AppSettingsWrapper.Port, SecureSocketOptions.Auto);\r\n                   client.Authenticate(AppSettingsWrapper.UserName, AppSettingsWrapper.Password);\r\n                   client.Timeout = AppSettingsWrapper.Timeout;\r\n\r\n \t           List<Task> taskList = new List<Task>();\r\n \r\n                   foreach (MailerJob job in batch)\r\n                   {\r\n                        taskList.Add(SendAsync(client, fm, job.Email));\r\n                   }\r\n\r\n                   Task.WhenAll(taskList).Wait();\r\n\r\n                   if(client.IsConnected)\r\n                   {\r\n                        client.Disconnect(true);\r\n                   }\r\n              }\r\n        }\r\n\r\n        private static async Task SendAsync(SmtpClient client, IFileManager fm, Email email)\r\n        {\r\n            try\r\n            {\r\n                MimeMessage message = new MimeMessage();\r\n\r\n                MailboxAddress from = new MailboxAddress(email.Content.FromDisplayName, email.Content.FromAddress);\r\n                MailboxAddress to = new MailboxAddress(email.Content.ToDisplayName, email.Content.ToAddress);\r\n                message.From.Add(from);\r\n                message.To.Add(to);\r\n\r\n                message.Subject = email.Content.Subject;\r\n\r\n                BodyBuilder bodyBuilder = new BodyBuilder();\r\n                if (email.Content.IsHtmlContent)\r\n                {\r\n                    bodyBuilder.HtmlBody = email.Content.Body;\r\n                }\r\n                else\r\n                {\r\n                    bodyBuilder.TextBody = email.Content.Body;\r\n                }\r\n\r\n                message.Body = bodyBuilder.ToMessageBody();\r\n\r\n                if (client.IsConnected)\r\n                {\r\n                    await client.SendAsync(message);\r\n                }\r\n                return;\r\n            }\r\n            catch (SmtpCommandException se)\r\n            {\r\n                email.StatusMessage = se.Message;\r\n                email.StatusCode = (int)se.StatusCode;\r\n            }\r\n            catch (Exception e)\r\n            {\r\n                email.StatusMessage = e.RecursiveMessage();\r\n            }\r\n        }\r\n    }\r\n\r\nRun method is invoked from .NET Core 2.0 console application.\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/626/comments",
    "author": "atuzovic",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2018-01-12T18:51:00Z",
        "body": "What you want to do is use:\r\n\r\n```csharp\r\nlock (client.SyncRoot) {\r\n     await client.SendAsync (message);\r\n}\r\n```\r\n\r\nHope that helps."
      },
      {
        "user": "atuzovic",
        "created_at": "2018-01-12T19:06:34Z",
        "body": "@jstedfast - Thanks for the quick reply.\r\n\r\nIsn't this preventing code from executing in parallel?"
      },
      {
        "user": "jstedfast",
        "created_at": "2018-01-12T19:40:49Z",
        "body": "Yes, that's exactly the point of it :)\r\n\r\nYou can't send multiple messages over the same socket in parallel."
      },
      {
        "user": "atuzovic",
        "created_at": "2018-01-12T21:13:05Z",
        "body": "@jstedfast Ok, thanks. :)\r\n\r\nSo how can we use multiple sockets? Create new instance of SmtpClient on every thread?"
      },
      {
        "user": "jstedfast",
        "created_at": "2018-01-12T21:27:05Z",
        "body": "Correct."
      },
      {
        "user": "NickSpag",
        "created_at": "2018-01-15T21:22:40Z",
        "body": "Looks like calling await in a lock is illegal? I'm running in to this while trying to optimize a Xamarin.Mac client's full inbox sync. \r\n\r\nI have parallel Tasks (think Task.WhenAll/Any) that do the full processing of a message, and I'm having a hard time determining if the best route is using a shared Semaphore or something like it for the core GetStreamAsync call of each individual message request, or if I should create a handful of ImapClients that each handle a batch of requests synchronously, or a combination of the two. Is the overhead of connecting/authenticating an ImapClient connection worth something like that? \r\n\r\nApologies if this should be its own issue in stackoverflow or some other channel. Thank you for the library!\r\n\r\nedit: I've played around a bit with doing a first pass that gets the text summary, for the purposes of the summary in an inbox list. so far creating the message from a summary envelope and making one GetStreamAsync call, the core of which is throttled by a single-thread SemaphoreSlim, is pretty quick. We'll see if that holds going forward. Planning on a second pass of the messages in the background that would download/cleanse the html part for local persistence and to help with display. "
      }
    ]
  },
  {
    "number": 624,
    "title": "ASP.NET Core 2.0 Trying to send email with O365 account",
    "created_at": "2018-01-06T16:51:18Z",
    "closed_at": "2018-01-06T17:41:36Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/624",
    "body": "Hi \r\nHope some one can point me to what i could be doing wrong. Trying to send email with MailKit using below sample code but seems to fail. I'm using an Office 365 account. \r\n\r\nI've tried different ports, 25, 587, 465, set useSSL to false, true, SecureSocketOptions.StartTls, SecureSocketOptions.StartTlsWhenAvailable. But zero success.\r\n\r\n`client.ServerCertificateValidationCallback = (s, c, h, e) => true;\r\n client.Connect(\"mydomain.mail.protection.outlook.com\", 25, true);\r\nclient.Authenticate(\"username\", \"password\");\r\nclient.Send(message);\r\nclient.Disconnect(true);`\r\n\r\nI've also tried using `client.AuthenticationMechanisms.Remove (\"XOAUTH2\"); ` in the code but make no difference. \r\n\r\nThe error i'm getting is mainly \"The SMTP server does not support authentication\", but sometime \"The handshake failed due to an unexpected packet format.\"\r\n\r\nI have an older web API project where i'm using the .net smtp to connect with above details with no issue. Is this an account setting thing or issue in my code???\r\n\r\nThanks in advance\r\n  ",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/624/comments",
    "author": "Mike-tech",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2018-01-06T17:41:36Z",
        "body": "You need to match the useSsl value with the port otherwise things are bound to fail.\r\n\r\nPort 465 is the *only* port you are *likely* to want to use `useSsl = true` with.\r\n\r\nThat explains the \"unexpected packet format\" error you got.\r\n\r\nThe \"server does not support authentication\" error means precisely that, the server does not support authentication. Which means don't call `client.Authenticate()` :)"
      },
      {
        "user": "Mike-tech",
        "created_at": "2018-01-06T18:19:02Z",
        "body": "Thanks for the pointer for excluding `client.Authenticate()` Wow! I never saw anywhere on the net that this should be excluded. In fact i didn't think this would work without authentication.\r\n\r\nMany thanks for quick response. :)"
      }
    ]
  },
  {
    "number": 620,
    "title": "SMTP credential charset/encoding, what is \"correct\"?",
    "created_at": "2018-01-05T09:19:32Z",
    "closed_at": "2018-01-05T12:33:40Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/620",
    "body": "Hi Jeff,\r\n\r\ntoday I got a problem authenticating against an MS-Exchange SMTP service.\r\nThe username contains a german umlaut which is by default UTF-8/BASE64 encoded by MailKit.\r\nIt seems that Exchange only accepts ISO-8859-1/BASE64 encoded usernames.\r\n\r\nI found an encoding argument in the .Authenticate() method, so I can set this up.\r\nBut what is the \"correct\" approach to do this?\r\nI've never seen a mailclient where I have to configure the encoding to be used for login.\r\nSo I think the client must have a way to determine the correct one on its own.\r\n\r\nBecause MailKit uses UTF-8 as default, I think this is the recommended one, right?\r\nI had some problems fetching this information from the RFCs for my own...\r\nMaybe you can help me out?\r\n\r\nBest regards,\r\nAlexander",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/620/comments",
    "author": "alex-becker-startp",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2018-01-05T12:33:40Z",
        "body": "Typically, mail clients use either UTF8 by default or the locale charset on the user's machine. The problem is the user's locale charset is irrelevant to what the *server's* locale charset is, which is what the server expects the usernames and passwords to be encoded in. The *assumption* is that the user's locale charset in his/her machine is the same as the server's because it is *assumed* that both the user and server are in the same geographic vicinity and likely to be using the same OS and are configured to use the same charset encoding, but that's a lot of assumptions :)\r\n\r\nThere's no way for the client to know which charset to use. 15-20 years ago, UTF-8 wasn't very wide-spread, but these days, if you aren't using unicode, you're a dinosaur."
      }
    ]
  },
  {
    "number": 618,
    "title": "how to get gmail label in mail kit",
    "created_at": "2018-01-05T09:10:44Z",
    "closed_at": "2018-01-05T12:38:38Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/618",
    "body": "how to get total gmail label list in mail kit.\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/618/comments",
    "author": "sour7230",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2018-01-05T12:38:38Z",
        "body": "The same way you get flags, but use MessageSummaryItems.GMailLabels"
      }
    ]
  },
  {
    "number": 613,
    "title": "The ImapClient is currently busy processing a command in another thread",
    "created_at": "2017-12-30T06:19:05Z",
    "closed_at": "2017-12-30T13:28:56Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/613",
    "body": "- **What were you trying to do?**\r\nPreviously in 1.22.0, I was successfully able to listen for notifications without using IDLE and just NoOp. When an event is triggered, I would search the Inbox for any unseen items (if there were any) and if there were new items, it would parse the new messages.\r\n\r\n- **What happened?**\r\nAfter updating to 2.0.0\r\nWhen attempting to Fetch the items in the Inbox, I am getting the following message \r\n\r\n> _The ImapClient is currently busy processing a command in another thread. Lock the SyncRoot property to properly synchronize your threads._\r\n\r\nThis message occurs at the following commands under the EventHandler.\r\n\r\n```csharp\r\npublic static async void OnMessageFlagsChanged(object sender, MessageFlagsChangedEventArgs e)\r\n{\r\n        var folder = (ImapFolder)sender;\r\n            \r\n        IList<IMessageSummary> summaries;\r\n        var query = SearchQuery.SubjectContains(\"New message\").And(SearchQuery.NotSeen);\r\n        var uids = await folder.SearchAsync(query); // <-- This is where it breaks\r\n```\r\n\r\nOddly enough, I downgraded back to 1.22.0, and my issue went away, and everything works as I had expected.\r\n\r\n> Connected to imaps://outlook.office365.com:993/\r\nS: * OK The Microsoft Exchange IMAP4 service is ready. [RABNADUAUABSADIAMQBDAEEAMAAwADIAMgAuAG4AYQBtAHAAcgBkADIAMQAuAHAAcgBvAGQALgBvAHUAdABsAG8AbwBrAC4AYwBvAG0A]\r\nC: A00000000 CAPABILITY\r\nS: * CAPABILITY IMAP4 IMAP4rev1 AUTH=PLAIN AUTH=XOAUTH2 SASL-IR UIDPLUS ID UNSELECT CHILDREN IDLE NAMESPACE LITERAL+\r\nS: A00000000 OK CAPABILITY completed.\r\nC: A00000001 AUTHENTICATE PLAIN AGpmZWxwc0BpbnRlZ3JpdGVsLnVzXHRyYW5zY3JpYmUAQjV1elU5cmU=\r\nS: A00000001 NO AUTHENTICATE failed.\r\nC: A00000002 LOGIN **[INFO REMOVED]**\r\nS: A00000002 OK LOGIN completed.\r\nC: A00000003 CAPABILITY\r\nS: * CAPABILITY IMAP4 IMAP4rev1 AUTH=PLAIN AUTH=XOAUTH2 SASL-IR UIDPLUS MOVE ID UNSELECT CLIENTACCESSRULES CLIENTNETWORKPRESENCELOCATION BACKENDAUTHENTICATE CHILDREN IDLE NAMESPACE LITERAL+\r\nS: A00000003 OK CAPABILITY completed.\r\nC: A00000004 NAMESPACE\r\nS: * NAMESPACE ((\"\" \"/\")) NIL NIL\r\nS: A00000004 OK NAMESPACE completed.\r\nC: A00000005 LIST \"\" \"INBOX\"\r\nS: * LIST (\\Marked \\HasNoChildren) \"/\" INBOX\r\nS: A00000005 OK LIST completed.\r\nC: A00000006 SELECT INBOX\r\nS: * 16 EXISTS\r\nS: * 0 RECENT\r\nS: * FLAGS (\\Seen \\Answered \\Flagged \\Deleted \\Draft $MDNSent)\r\nS: * OK [PERMANENTFLAGS (\\Seen \\Answered \\Flagged \\Deleted \\Draft $MDNSent)] Permanent flags\r\nS: * OK [UIDVALIDITY 14] UIDVALIDITY value\r\nS: * OK [UIDNEXT 114] The next unique identifier value\r\nS: A00000006 OK [READ-WRITE] SELECT completed.\r\nC: A00000007 UID SEARCH SUBJECT \"New message\" UNSEEN\r\nS: * SEARCH\r\nS: A00000007 OK SEARCH completed.\r\nC: A00000008 FETCH 1:* (UID FLAGS INTERNALDATE RFC822.SIZE ENVELOPE BODY)\r\nS: * 1 FETCH (UID 65 FLAGS (\\Seen) INTERNALDATE \"19-Dec-2017 15:55:05 +0000\" **[INFO REMOVED]**\r\nS: A00000008 OK FETCH completed.\r\nC: A00000009 NOOP\r\nS: A00000009 OK NOOP completed.\r\nC: A00000010 NOOP\r\nS: * 16 FETCH (FLAGS ())\r\nS: A00000010 OK NOOP completed.\r\n\r\n> \"   at MailKit.Net.Imap.ImapEngine.QueueCommand(ImapCommand ic)\r\n   at MailKit.Net.Imap.ImapFolder.<SearchAsync>d__323.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at Voicemail_Transcription.EventHandlers.<OnCountChanged>d__1.MoveNext() in C:\\\\Users\\\\jfelps\\\\Documents\\\\Visual Studio 2017\\\\Projects\\\\Voicemail Transcription\\\\Voicemail Transcription\\\\EventHandlers.cs:line 29\"\r\n\r\n> Exception thrown: 'System.InvalidOperationException' in mscorlib.dll\r\nThe ImapClient is currently busy processing a command in another thread. Lock the SyncRoot property to properly synchronize your threads.\r\n\r\nPlease let me know if there is anything more that I need to provide. I have no problem providing my code through email preferably.\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/613/comments",
    "author": "Ceus",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2017-12-30T13:28:56Z",
        "body": "I think you just got lucky with 1.22.\r\n\r\nThe problem is that the ImapClient is not re-entrant. In other words, you cannot send another command while an existing command is currently being processed.\r\n\r\nIn your case, the NOOP command is still being processed when the event is triggered.\r\n\r\nMailKit does not wait for the entire server response to be read before it begins parsing the response and emitting events. Instead, it processes the response as it receives it.\r\n\r\nThe Good:\r\n\r\n1. You get events in real-time.\r\n2. The client doesn't need to read a potentially massive amount of data into RAM first, before processing (thereby taking up huge amounts of resources).\r\n\r\nThe Bad:\r\n\r\n1. Can't send more commands in an event handler.\r\n\r\nThe Solution:\r\n\r\nIn your event handlers, queue your next command(s) to be executed once the existing command completes."
      },
      {
        "user": "jstedfast",
        "created_at": "2017-12-30T13:30:29Z",
        "body": "Ah, wait, the reason it worked in 1.22 was because 1.22 used Task.Run() and locked the SyncRoot itself in the Async() methods.\r\n\r\nNow that 2.0 is fully async, I can't easily do locking around the sync call like in 1.22."
      },
      {
        "user": "jstedfast",
        "created_at": "2017-12-30T13:33:56Z",
        "body": "In other words, this is what 1.22 does:\r\n\r\n```csharp\r\npublic Task<T> DoSomethingAsync ()\r\n{\r\n    return Task.Run (() => {\r\n        lock (SyncRoot) {\r\n            return DoSomething ();\r\n        }\r\n    });\r\n}\r\n```"
      },
      {
        "user": "jstedfast",
        "created_at": "2017-12-30T13:53:16Z",
        "body": "I might have a solution..."
      },
      {
        "user": "jstedfast",
        "created_at": "2017-12-30T14:09:40Z",
        "body": "Nope, that won't work... :("
      },
      {
        "user": "jstedfast",
        "created_at": "2017-12-30T14:20:11Z",
        "body": "I would love for this to work, but I don't think it's possible without moving the ImapEngine's runloop into another thread which I really don't want to do (because it makes things a lot more complex)."
      },
      {
        "user": "Ceus",
        "created_at": "2018-01-07T01:33:58Z",
        "body": "Dang! So, my next update will need to be to Queue the commands that are being called during the Event Handler? I don't have a problem with doing this, I am just unsure about how to go about doing this. Any insight you can give me here?\r\n\r\nI am sorry I am just now seeing this. I don't think I got a notification. Thank you for your assistance!"
      },
      {
        "user": "jstedfast",
        "created_at": "2018-01-07T02:05:19Z",
        "body": "MailKit doesn't provide a command queue that you can use, you'll have to do that yourself.\r\n\r\nWhat you could do is have a `ConcurrentQueue<Action>` or something which your main program's main loop will pop and execute.\r\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2018-01-07T02:15:03Z",
        "body": "Another option is to do something like this:\r\n\r\n```csharp\r\nvoid OnMessageFlagsChanged (object sender, MessageFlagsChangedEventArgs e)\r\n{\r\n    this.flags_changed = true;\r\n}\r\n```\r\n\r\nAnd then, in your NOOP logic:\r\n\r\n```csharp\r\nawait client.NoOpAsync ();\r\nif (this.flags_changed) {\r\n    var query = SearchQuery.SubjectContains(\"New message\").And(SearchQuery.NotSeen);\r\n    var uids = await folder.SearchAsync(query);\r\n}\r\n```\r\n\r\nThat said, I'm not sure why you're using the MessageFlagsChanged event for checking for new mail... MessageFlagsChanged is only emitted when the flags on an existing message change.\r\n\r\nYou want CountChanged if you expect it to mean the potential for new mail to have arrived."
      },
      {
        "user": "Ceus",
        "created_at": "2018-01-07T02:58:20Z",
        "body": "Thank you! I will give your second option a try. I feel like that will do what I need. I will let you know how that goes. :) 👍 "
      },
      {
        "user": "Ceus",
        "created_at": "2018-01-07T03:14:52Z",
        "body": "It appears that this resolved my issue. And I apologize, I didn't see the last bit of your message.\r\n\r\nI am building a transcription service and I wanted the ability to mark an email as unread and for the email to act as normal. I don't actually care about how many messages are in the inbox or anything, just what happens to the new messages that come in or messages that I mark as unread."
      },
      {
        "user": "jstedfast",
        "created_at": "2018-01-07T13:07:54Z",
        "body": "Ah, ok. FWIW, the MessageFlagsChangedEventArgs argument provides information about the index of the message (sadly not the UID since the server does not provide that info) as well as what the new flags for the message are.\r\n\r\nUsing that info to keep track of state would be cheaper than doing a Search().\r\n\r\nFor example:\r\n\r\n```csharp\r\nclass MyMessageInfo\r\n{\r\n    public UniqueId UniqueId;\r\n    public MessageFlags Flags;\r\n\r\n    public MyMessageInfo (UniqueId uid, MessageFLags flags)\r\n    {\r\n        UniqueId = uid;\r\n        Flags = flags;\r\n    }\r\n}\r\n```\r\n\r\n```csharp\r\n// after connecting and opening the folder you are interested in tracking, connect to some events so we can track the state of the server:\r\nfolder.CountChanged += OnCountChanged;\r\nfolder.MessageExpunged += OnMessageExpunged;\r\nfolder.MessageFlagsChanged += OnMessageFlagsChanged;\r\n\r\n// now collect the list of message UIDs and their associated Flags:\r\nthis.messages = folder.Fetch (0, -1, MessageSummaryItems.UniqueId | MessageSummaryItems.Flags | OtherItemsYouCareAbout).Select (x => new MyMessageInfo (x.UniqueId, x.Flags).ToList ();\r\n\r\n// .. some time passes, invoke NoOp:\r\nclient.NoOp ();\r\n\r\nif (this.new_messages) {\r\n    this.new_messages = false;\r\n\r\n    var new_messages = folder.Fetch (this.messages.Count, -1, MessageSummaryItems.UniqueId | MessageSummaryItems.Flags | OtherItemsYouCareAbout).Select (x => new MyMessageInfo (x.UniqueId, x.Flags);\r\n\r\n    this.messages.AddRange (new_messages);\r\n}\r\n```\r\n\r\nThen, in your event handlers, you might have code that looks like this:\r\n\r\n```csharp\r\nvoid OnMessageExpunged (object sender, MessageEventArgs e)\r\n{\r\n    // update our list of messages by removing the index of the message that just got expunged\r\n    this.messages.RemoveAt (e.Index);\r\n}\r\n\r\nvoid OnMessageFLagsChanged (object sender, MessageFlagsChangedEventArgs e)\r\n{\r\n    // update the flags for the message at the specified index\r\n    this.messages[e.Index].Flags = e.Flags;\r\n}\r\n\r\nvoid OnCountChanged (object sender, EventArgs e)\r\n{\r\n    var folder = (ImapFolder) sender;\r\n\r\n    // folder.Count will either be exactly the same as this.messages.Count\r\n    // -or-\r\n    // it will be larger if new messages have arrived\r\n    this.new_messages = folder.Count > messages.Count;\r\n}\r\n```\r\n\r\nNow you can stay in sync with the server and not have to constantly re-Search."
      },
      {
        "user": "dorin7bogdan",
        "created_at": "2019-03-20T17:23:53Z",
        "body": "Hi,\r\n\r\nFrom time to time, while trying to disconnect the ImapClient, I get the following exception:\r\n\r\n`[InvalidOperationException:The ImapClient is currently busy processing a command in another thread. Lock the SyncRoot property to properly synchronize your threads.]<br/> MailKit.Net.Imap.&lt;IterateAsync&gt;d__170.MoveNext() + 435<br/> System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task) + 144<br/> System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) + 84<br/> MailKit.Net.Imap.&lt;RunAsync&gt;d__171.MoveNext() + 530<br/> System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task) + 144<br/> System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) + 84<br/> MailKit.Net.Imap.&lt;DisconnectAsync&gt;d__95.MoveNext() + 676<br/> System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task) + 144<br/> System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) + 84<br/> MailKit.Net.Imap.ImapClient.Disconnect(Boolean quit,CancellationToken cancellationToken) + 501<br/> HS.WinService.Configuration.CustomerEmailAccount.LogoutAndDisconnect() + 182`\r\n\r\nI apologize for missing the protocol details, since the problem occurs in the release version.\r\n\r\nBefore trying to disconnect, we try to stop the idling thread.\r\n```C#\r\n        public void LogoutAndDisconnect()\r\n        {\r\n            try\r\n            {\r\n                if (IsAuthenticated)\r\n                    StopIdling();\r\n\r\n                if (IsConnected)\r\n                    _client.Disconnect(true);\r\n                _client = null;\r\n                _inboxFolder = _processedFolder = _unprocessedFolder = null;\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                EventLogManager.Instance.WriteEntry(EventLogType.Error, ex, string.Format(UNEXPECTED_ERROR, MethodBase.GetCurrentMethod().Name, ChannelCode, InboxFolderName, ex.Message));\r\n            }\r\n        }\r\n        public void ConnectAndLogin()\r\n        {\r\n            if (_client == null)\r\n            {\r\n#if DEBUG\r\n                _client = new ImapClient(new ProtocolLogger(Console.OpenStandardError()));\r\n#else\r\n                _client = new ImapClient();\r\n#endif\r\n                _client.ServerCertificateValidationCallback = delegate { return true; };\r\n            }\r\n\r\n            try\r\n            {\r\n                var ok = TryConnectAndLogin();\r\n                if (!ok)\r\n                {\r\n                    EventLogManager.Instance.WriteEntry(EventLogType.Error, string.Format(LOGIN_FAILED, Username, ChannelCode));\r\n                    LogoutAndDisconnect();\r\n                }\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                var err = string.Format(UNEXPECTED_ERROR, MethodBase.GetCurrentMethod().Name, ChannelCode, InboxFolderName, ex.Message);\r\n                EventLogManager.Instance.WriteEntry(EventLogType.Error, ex, err);\r\n                LogoutAndDisconnect();\r\n            }\r\n        }\r\n        public void StopIdling()\r\n        {\r\n            lock (_syncRoot)\r\n            {\r\n                try\r\n                {\r\n                    if (_isIdle && _done?.IsCancellationRequested != true)\r\n                    {\r\n                        _done.Cancel();\r\n                        _done.Dispose();\r\n                    }\r\n                    // if the thread doesn't end in 30 seconds, then abort it\r\n                    _thread?.Join(30 * 100);\r\n                    if (_thread?.IsAlive == true)\r\n                        _thread.Abort();\r\n                    _thread = null;\r\n                }\r\n                catch (Exception ex)\r\n                {\r\n                    EventLogManager.Instance.WriteEntry(EventLogType.Error, ex, string.Format(UNEXPECTED_ERROR, MethodBase.GetCurrentMethod().Name, ChannelCode, InboxFolderName, ex.Message));\r\n                }\r\n            }\r\n        }\r\n        public void StartIdling(bool connectAndLogin = true)\r\n        {\r\n            lock (_syncRoot)\r\n            {\r\n                if (connectAndLogin)\r\n                    ConnectAndLogin();\r\n                if (IsConnected && IsAuthenticated && !_isIdle)\r\n                {\r\n                    if (InboxFolder == null) // we check the property here, not the field, in order to initialize it if necessary !\r\n                        return;\r\n\r\n                    if (!_inboxFolder.IsOpen)\r\n                    {\r\n                        _inboxFolder.CountChanged -= Folder_CountChanged;\r\n                        _inboxFolder.Open(FolderAccess.ReadWrite);\r\n                        _inboxFolder.CountChanged += Folder_CountChanged;\r\n                    }\r\n\r\n                    _done = new CancellationTokenSource();\r\n                    _thread = new Thread(IdleLoop);\r\n                    _thread.Start(new IdleState(_client, _done.Token));\r\n\r\n                    // the server should answer with \"IDLE accepted, awaiting DONE command\", so we give it max 10 seconds for safety \r\n                    SpinWait.SpinUntil(() => _isIdle, 10 * 1000);\r\n                }\r\n            }\r\n        }\r\n```\r\nWe use the IdleState and IdleLoop taken from your sample ImapIdle.sln:\r\n```C#\r\n        #region - IdleState and IdleLoop\r\n        private class IdleState\r\n        {\r\n            readonly object mutex = new object();\r\n            CancellationTokenSource timeout;\r\n\r\n            /// <summary>\r\n            /// Get the cancellation token.\r\n            /// </summary>\r\n            /// <remarks>\r\n            /// <para>The cancellation token is the brute-force approach to cancelling the IDLE and/or NOOP command.</para>\r\n            /// <para>Using the cancellation token will typically drop the connection to the server and so should\r\n            /// not be used unless the client is in the process of shutting down or otherwise needs to\r\n            /// immediately abort communication with the server.</para>\r\n            /// </remarks>\r\n            /// <value>The cancellation token.</value>\r\n            public CancellationToken CancellationToken { get; private set; }\r\n\r\n            /// <summary>\r\n            /// Get the done token.\r\n            /// </summary>\r\n            /// <remarks>\r\n            /// <para>The done token tells the <see cref=\"Program.IdleLoop\"/> that the user has requested to end the loop.</para>\r\n            /// <para>When the done token is cancelled, the <see cref=\"Program.IdleLoop\"/> will gracefully come to an end by\r\n            /// cancelling the timeout and then breaking out of the loop.</para>\r\n            /// </remarks>\r\n            /// <value>The done token.</value>\r\n            public CancellationToken DoneToken { get; private set; }\r\n\r\n            /// <summary>\r\n            /// Get the IMAP client.\r\n            /// </summary>\r\n            /// <value>The IMAP client.</value>\r\n            public ImapClient Client { get; private set; }\r\n\r\n            /// <summary>\r\n            /// Check whether or not either of the CancellationToken's have been cancelled.\r\n            /// </summary>\r\n            /// <value><c>true</c> if cancellation was requested; otherwise, <c>false</c>.</value>\r\n            public bool IsCancellationRequested\r\n            {\r\n                get\r\n                {\r\n                    return CancellationToken.IsCancellationRequested || DoneToken.IsCancellationRequested;\r\n                }\r\n            }\r\n\r\n            /// <summary>\r\n            /// Initializes a new instance of the <see cref=\"IdleState\"/> class.\r\n            /// </summary>\r\n            /// <param name=\"client\">The IMAP client.</param>\r\n            /// <param name=\"doneToken\">The user-controlled 'done' token.</param>\r\n            /// <param name=\"cancellationToken\">The brute-force cancellation token.</param>\r\n            public IdleState(ImapClient client, CancellationToken doneToken, CancellationToken cancellationToken = default(CancellationToken))\r\n            {\r\n                CancellationToken = cancellationToken;\r\n                DoneToken = doneToken;\r\n                Client = client;\r\n\r\n                // When the user hits a key, end the current timeout as well\r\n                doneToken.Register(CancelTimeout);\r\n            }\r\n\r\n            /// <summary>\r\n            /// Cancel the timeout token source, forcing ImapClient.Idle() to gracefully exit.\r\n            /// </summary>\r\n            void CancelTimeout()\r\n            {\r\n                lock (mutex)\r\n                {\r\n                    if (timeout != null)\r\n                        timeout.Cancel();\r\n                }\r\n            }\r\n\r\n            /// <summary>\r\n            /// Set the timeout source.\r\n            /// </summary>\r\n            /// <param name=\"source\">The timeout source.</param>\r\n            public void SetTimeoutSource(CancellationTokenSource source)\r\n            {\r\n                lock (mutex)\r\n                {\r\n                    timeout = source;\r\n\r\n                    if (timeout != null && IsCancellationRequested)\r\n                        timeout.Cancel();\r\n                }\r\n            }\r\n        }\r\n\r\n        private static void IdleLoop(object state)\r\n        {\r\n            var idle = (IdleState)state;\r\n\r\n            lock (idle.Client.SyncRoot)\r\n            {\r\n                // Note: since the IMAP server will drop the connection after 30 minutes, we must loop sending IDLE commands that\r\n                // last ~29 minutes or until the user has requested that they do not want to IDLE anymore.\r\n                // \r\n                // For GMail, we use a 9 minute interval because they do not seem to keep the connection alive for more than ~10 minutes.\r\n                while (!idle.IsCancellationRequested)\r\n                {\r\n                    using (var timeout = new CancellationTokenSource(new TimeSpan(0, 0, CustomerEmailsConfig.NoopIssueTimeout)))\r\n                    {\r\n                        try\r\n                        {\r\n                            // We set the timeout source so that if the idle.DoneToken is cancelled, it can cancel the timeout\r\n                            idle.SetTimeoutSource(timeout);\r\n\r\n                            if (idle.Client.Capabilities.HasFlag(ImapCapabilities.Idle))\r\n                            {\r\n                                // The Idle() method will not return until the timeout has elapsed or idle.CancellationToken is cancelled\r\n                                idle.Client.Idle(timeout.Token, idle.CancellationToken);\r\n                            }\r\n                            else\r\n                            {\r\n                                // The IMAP server does not support IDLE, so send a NOOP command instead\r\n                                idle.Client.NoOp(idle.CancellationToken);\r\n\r\n                                // Wait for the timeout to elapse or the cancellation token to be cancelled\r\n                                WaitHandle.WaitAny(new[] { timeout.Token.WaitHandle, idle.CancellationToken.WaitHandle });\r\n                            }\r\n                        }\r\n                        catch (OperationCanceledException ex)\r\n                        {\r\n                            // This means that idle.CancellationToken was cancelled, not the DoneToken nor the timeout.\r\n                            EventLogManager.Instance.WriteEntry(EventLogType.Error, ex);\r\n                            break;\r\n                        }\r\n                        catch (ImapProtocolException ex)\r\n                        {\r\n                            // The IMAP server sent garbage in a response and the ImapClient was unable to deal with it.\r\n                            // This should never happen in practice, but it's probably still a good idea to handle it.\r\n                            // \r\n                            // Note: an ImapProtocolException almost always results in the ImapClient getting disconnected.\r\n                            EventLogManager.Instance.WriteEntry(EventLogType.Error, ex);\r\n                            break;\r\n                        }\r\n                        catch (ImapCommandException ex)\r\n                        {\r\n                            // The IMAP server responded with \"NO\" or \"BAD\" to either the IDLE command or the NOOP command.\r\n                            // This should never happen... but again, we're catching it for the sake of completeness.\r\n                            EventLogManager.Instance.WriteEntry(EventLogType.Error, ex);\r\n                            break;\r\n                        }\r\n                        catch (IOException ex)\r\n                        {\r\n                            EventLogManager.Instance.WriteEntry(EventLogType.Error, ex);\r\n                            break;\r\n                        }\r\n                        catch (Exception ex)\r\n                        {\r\n                            EventLogManager.Instance.WriteEntry(EventLogType.Error, ex);\r\n                            break;\r\n                        }\r\n                        finally\r\n                        {\r\n                            // We're about to Dispose() the timeout source, so set it to null.\r\n                            idle.SetTimeoutSource(null);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        #endregion\r\n```\r\nI suspect that sometimes the idle thread cannot be terminated so that the Disconnect fails to be done.\r\nIn this case how to abort the idle thread?\r\n\r\nPlease advise."
      },
      {
        "user": "jstedfast",
        "created_at": "2019-03-20T18:12:33Z",
        "body": "The Idle/IdleAsync methods take 2 CancellationToken arguments: `doneToken` and `cancellationToken`\r\n\r\nWhat I would do is, after cancelling `doneToken` (using your `_done` token source as you are already doing), if the thread doesn't end after your time limit, then try calling `Cancel()` on your `cancellationToken` source and giving it a few more seconds to join.\r\n\r\nThis *may* still fail currently, but I've been working toward making cancel even more solid. I've made changes to SmtpClient so far and once I know that approach works for sure, I'll be adding it to ImapClient and Pop3Client."
      },
      {
        "user": "dorin7bogdan",
        "created_at": "2019-03-20T20:49:23Z",
        "body": "Hi Jstedfast,\r\nThank you for the quick answer.\r\nI defined:  \r\n```private CancellationTokenSource _cancel```\r\nI also fixed the time to join from 30 * 100 to 30 * 1000 to really be 30 seconds, as intended initially.\r\nPlease let me know if this version of StartIdling / StopIdling should be better:\r\n```c#\r\npublic void StopIdling()\r\n{\r\n\tlock (_syncRoot)\r\n\t{\r\n\t\ttry\r\n\t\t{\r\n\t\t\tif (_isIdle && _done?.IsCancellationRequested != true)\r\n\t\t\t{\r\n\t\t\t\t_done.Cancel();\r\n\t\t\t\t_done.Dispose();\r\n\t\t\t}\r\n\t\t\t// if the thread doesn't end in 30 seconds, then use the cancelation token \r\n\t\t\t_thread?.Join(30 * 1000);\r\n\t\t\tif (_thread?.IsAlive == true)\r\n\t\t\t{\r\n\t\t\t\t_cancel?.Cancel();\r\n\t\t\t\t_thread?.Join(30 * 1000);\r\n\t\t\t\t// if the thread doesn't end in 30 seconds, then abort it\r\n\t\t\t\tif (_thread?.IsAlive == true)\r\n\t\t\t\t\t_thread.Abort();\r\n\t\t\t}\r\n\t\t\t_thread = null;\r\n\t\t}\r\n\t\tcatch (Exception ex)\r\n\t\t{\r\n\t\t\tEventLogManager.Instance.WriteEntry(EventLogType.Error, ex, string.Format(UNEXPECTED_ERROR, MethodBase.GetCurrentMethod().Name, ChannelCode, InboxFolderName, ex.Message));\r\n\t\t}\r\n\t}\r\n}\r\npublic void StartIdling(bool connectAndLogin = true)\r\n{\r\n\tlock (_syncRoot)\r\n\t{\r\n\t\tif (connectAndLogin)\r\n\t\t\tConnectAndLogin();\r\n\t\tif (IsConnected && IsAuthenticated && !_isIdle)\r\n\t\t{\r\n\t\t\tif (InboxFolder == null) // we check the property here, not the field, in order to initialize it if necessary !\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (!_inboxFolder.IsOpen)\r\n\t\t\t{\r\n\t\t\t\t_inboxFolder.CountChanged -= Folder_CountChanged;\r\n\t\t\t\t_inboxFolder.Open(FolderAccess.ReadWrite);\r\n\t\t\t\t_inboxFolder.CountChanged += Folder_CountChanged;\r\n\t\t\t}\r\n\r\n\t\t\t_done = new CancellationTokenSource();\r\n\t\t\t_cancel = new CancellationTokenSource();\r\n\t\t\t_thread = new Thread(IdleLoop);\r\n\t\t\t_thread.Start(new IdleState(_client, _done.Token, _cancel.Token));\r\n\r\n\t\t\t// the server should answer with \"IDLE accepted, awaiting DONE command\", so we give it max 10 seconds for safety \r\n\t\t\tSpinWait.SpinUntil(() => _isIdle, 10 * 1000);\r\n\t\t}\r\n\t}\r\n}\r\n```\r\nAdditionally, do you recommend to do something in the catch block or to add a finally block? (in the StopIdling method). For example to abort the _thread if still alive."
      },
      {
        "user": "dorin7bogdan",
        "created_at": "2019-03-20T21:09:06Z",
        "body": "Also, do you think it's better to declare the IdleLoop method as instance method (instead of static)?\r\nI'm asking this because we connect multiple clients (to different mailboxes) and they might rise concurrency issues.\r\nIn other words, there are several instances of the class containing the ImapClient _client field running and idling in parallel.\r\nThank you in advance."
      },
      {
        "user": "jstedfast",
        "created_at": "2019-03-21T11:10:04Z",
        "body": "Your new StopIdling() method looks exactly how I was recommending.\r\n\r\nAs far as adding a finally goes, I've got a few thoughts:\r\n\r\n1. `_done.Cancel ()` has been recently fixed to catch all exceptions inside MailKit, so they should never bubble up to your code.\r\n2. I'm not as sure about `_cancel.Cancel()`, I'm pretty sure that should only cause exceptions on the thread that is actually running the IMAP query, but not 100% confident. If any situations are found that do cause `_cancel.Cancel()` to throw from within MailKit, I would consider that a bug in MailKit.\r\n\r\nThat leaves your `_thread.Join()`'s as potential sources of exceptions which I don't think will be a realistic issue in your code.\r\n\r\nThe only potential problem I see in your StopIdling method right now is that `_done` is only Disposed in 1 code path (only if you are idling *and* the token hasn't already been cancelled). It might be worth moving the Dispose() to a finally clause:\r\n\r\n```csharp\r\n} finally {\r\n    if (_done != null)\r\n        _done.Dispose ();\r\n}\r\n```\r\n\r\nAs far as making IdleLoop an instance vs static, I'm not sure it really matters."
      },
      {
        "user": "dorin7bogdan",
        "created_at": "2019-03-21T15:11:49Z",
        "body": "Hi Jstedfast, thank you so much for the useful suggestions !!!\r\n\r\nI just reproduced a scenario that might be the cause of the problems:\r\n\r\nThe StartIdling method is called on every minute, and as you can see its code from above, based on the _idle flag value it renews the tokens and starts the new _thread.\r\n`private bool _isIdle => _client?.IsIdle == true;`\r\n\r\nSo it seems to be a concurrency issue, when the IdleLoop's timeout just expired (i.e. at 5 min) and at the same time the StartIdling was called.\r\nI could see in the debugger that the _idle flag was false when entering the StartIdling method, and it became true in the middle of the method.\r\nHow could I synchronize the IdleLoop's `while` or `using` block with the StartIlding?\r\n\r\n\r\n\r\n\r\n\r\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2019-03-21T16:10:18Z",
        "body": "I would probably recommend avoiding the use of a boolean variable for this and use a ManualResentEvent instead."
      },
      {
        "user": "dorin7bogdan",
        "created_at": "2019-03-29T16:28:07Z",
        "body": "Hi  Jeffrey,\r\n\r\nI continue on this thread, even if it is not on the same subject.\r\nWhile IDLE looping, sometimes (once a week?) we get a strange exception.\r\nI tried to reproduce on DEV environment but didn't succeed yet.\r\n\r\n`Syntax error in response. Unexpected token: [atom: Server]`\r\n```\r\nImapProtocolException:Syntax error in response. Unexpected token: [atom: Server]]<br/> \r\nMailKit.Net.Imap.&lt;StepAsync&gt;d__79.MoveNext() + 9392<br/> \r\nSystem.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task) + 144<br/> \r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) + 84<br/> \r\nSystem.Runtime.CompilerServices.ConfiguredTaskAwaiter.GetResult() + 49<br/> \r\nMailKit.Net.Imap.&lt;IterateAsync&gt;d__170.MoveNext() + 1878<br/> \r\nSystem.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task) + 144<br/> \r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) + 84<br/> \r\nMailKit.Net.Imap.&lt;RunAsync&gt;d__171.MoveNext() + 530<br/> \r\nSystem.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task) + 144<br/> \r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) + 84<br/> \r\nMailKit.Net.Imap.&lt;IdleAsync&gt;d__100.MoveNext() + 1227<br/> \r\nSystem.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task) + 144<br/> \r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) + 84<br/> \r\nMailKit.Net.Imap.ImapClient.Idle(CancellationToken doneToken,CancellationToken cancellationToken) + 528<br/> \r\nHS.PiPWService.Configuration.CustomerEmailAccount.IdleLoop(Object state) + 391<br/> \r\n```\r\nI know that you fixed similar issues in past.\r\nThe server is Microsoft Exchange IMAP4.\r\nI can give you a DEV sample from starting the IDLE loop:\r\n```\r\nConnected to imaps://dag01.mailserver.local:993/\r\nS: * OK The Microsoft Exchange IMAP4 service is ready.\r\nC: A00000000 CAPABILITY\r\nS: * CAPABILITY IMAP4 IMAP4rev1 AUTH=PLAIN AUTH=NTLM AUTH=GSSAPI UIDPLUS MOVE ID CHILDREN IDLE NAMESPACE LITERAL+\r\nS: A00000000 OK CAPABILITY completed.\r\nC: A00000001 AUTHENTICATE PLAIN\r\nS: +\r\nC: AFBMVU1CRURGT1JEXGNicxxxxxxxxx*****\r\nS: A00000001 OK AUTHENTICATE completed.\r\nC: A00000002 CAPABILITY\r\nS: * CAPABILITY IMAP4 IMAP4rev1 AUTH=PLAIN AUTH=NTLM AUTH=GSSAPI UIDPLUS MOVE ID XPROXY3 CHILDREN IDLE NAMESPACE LITERAL+\r\nS: A00000002 OK CAPABILITY completed.\r\nC: A00000003 NAMESPACE\r\nS: * NAMESPACE ((\"\" \"/\")) NIL NIL\r\nS: A00000003 OK NAMESPACE completed.\r\nC: A00000004 LIST \"\" \"INBOX\"\r\nS: * LIST (\\Marked \\HasNoChildren) \"/\" INBOX\r\nS: A00000004 OK LIST completed.\r\nC: A00000005 LIST \"\" DOrin\r\nS: * LIST (\\HasChildren) \"/\" Dorin\r\nS: A00000005 OK LIST completed.\r\nC: A00000006 LIST \"\" DOrinProcessed\r\nS: * LIST (\\HasNoChildren) \"/\" DorinProcessed\r\nS: A00000006 OK LIST completed.\r\nC: A00000007 LIST \"\" Unprocessed\r\nS: * LIST (\\HasNoChildren) \"/\" Unprocessed\r\nS: A00000007 OK LIST completed.\r\nC: A00000008 SELECT Dorin\r\nS: * 0 EXISTS\r\nS: * 0 RECENT\r\nS: * FLAGS (\\Seen \\Answered \\Flagged \\Deleted \\Draft $MDNSent)\r\nS: * OK [PERMANENTFLAGS (\\Seen \\Answered \\Flagged \\Deleted \\Draft $MDNSent)] Permanent flags\r\nS: * OK [UIDVALIDITY 66] UIDVALIDITY value\r\nS: * OK [UIDNEXT 90] The next unique identifier value\r\nS: A00000008 OK [READ-WRITE] SELECT completed.\r\nC: A00000009 UID SEARCH ALL\r\nS: * SEARCH\r\nS: A00000009 OK SEARCH completed.\r\nC: A00000010 IDLE\r\nS: + IDLE accepted, awaiting DONE command.\r\n\r\n```\r\nPlease advise."
      },
      {
        "user": "jstedfast",
        "created_at": "2019-03-29T16:35:21Z",
        "body": "That log doesn't contain the word `Server` anywhere, so that can't be the correct log.\r\n\r\nThe exception you are getting is because the IMAP response parser is encountering the word `Server` where it doesn't make any sense syntactically."
      },
      {
        "user": "dorin7bogdan",
        "created_at": "2019-05-14T13:41:01Z",
        "body": "Hi Jeffrey,\r\nIs there a way to enable the Imap protocol logging only for main info, without printing all email body / attachments details ?"
      },
      {
        "user": "jstedfast",
        "created_at": "2019-05-14T13:41:34Z",
        "body": "No, there's no way to do that."
      },
      {
        "user": "dorin7bogdan",
        "created_at": "2019-05-14T13:42:14Z",
        "body": "Ok, thank you! Maybe in future versions :)."
      },
      {
        "user": "jstedfast",
        "created_at": "2019-05-14T13:42:22Z",
        "body": "Actually... what you could do is write your own IProtocolLogger implementation that only writes the first line of the command and drops the rest of it."
      },
      {
        "user": "dorin7bogdan",
        "created_at": "2019-05-14T13:58:19Z",
        "body": "Interesting idea, but what do you think if derive from MailKit.ProtocolLogger and override the ``LogServer(byte[] buffer, int offset, int count)`` with call ``base.LogServer(buffer, offset, 100)`` inside?\r\nDo you see any drawbacks here?"
      },
      {
        "user": "jstedfast",
        "created_at": "2019-05-14T14:48:30Z",
        "body": "That won't work because MailKit will chunk the command to the logger, so the buffer does not necessarily contain the full command."
      },
      {
        "user": "dorin7bogdan",
        "created_at": "2019-05-15T12:37:42Z",
        "body": "Hi Jeffrey,\r\nSorry for disturbing you again....\r\nIn fact I need to skip logging the call FETCH BODY command details, since this gets the biggest amount of data.\r\nAnd eventually print only the first and the last line. \r\n**`S: * 1 FETCH (BODY[] {88166}`**\r\n`S: Received: from mailtest.local (...) by`\r\n`S:  mailtest.local (... ) with Microsoft SMTP Server`\r\n`S:  (TLS) id 15.0.1395.4 via Mailbox Transport; Wed, 15 May 2019 06:06:41 -0400`\r\n`S: Received: from mailtest.local (...) by`\r\n`. . . . .`\r\n`. . . . .`\r\n`S: nl7O1f3Rm7r9g5+PhWS/45fU+n88+/jznL1zZ19R1dPjPv7Y6w38479MdnjnPXjnb0w39MhF56d5`\r\n`S: /V6y9UKax/qr/9k=`\r\n`S: `\r\n`S: ------=_NextPart_000_00D6_01D50B1F.1E45A4B0--`\r\n`S:  UID 8)`\r\n**`S: F00000014 OK FETCH completed.`**\r\n\r\nThe existing MailKit.ProtocolLogger code seems quite complex and I'm afraid to adjust it right now.\r\nIf it is possible in future versions, please take in account adding support for this feature.\r\nThank you so much."
      },
      {
        "user": "jstedfast",
        "created_at": "2019-05-15T16:11:37Z",
        "body": "All you need to do is buffer the data before it gets pushed to the underlying log stream:\r\n\r\nWhen LogClient() gets called, append it to the client buffer. When LogServer() gets called, you know the client buffer is complete and then you can print just the first and last lines.\r\n\r\nWhen LogServer() gets called, append it to the client buffer. When LogClient() gets called, you know the server buffer is complete and then you can print just the first and last lines.\r\n"
      },
      {
        "user": "dorin7bogdan",
        "created_at": "2019-05-24T13:49:02Z",
        "body": "Hi Jeffrey,\r\nA small question:\r\nIs it possible to reset the protocol logger file without disconnecting the IMAP client?\r\nI'd like to prevent it from growing too much.\r\nCurrently I cannot manually edit it from Notepad:\r\n> \"The process cannot access the file because it is being used by another process.\"\r\n\r\nThank you."
      }
    ]
  },
  {
    "number": 612,
    "title": "when cloud be support rfc 2445 ",
    "created_at": "2017-12-28T16:48:04Z",
    "closed_at": "2017-12-28T17:14:41Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/612",
    "body": "To help me debug your issue, please explain:\r\n- What were you trying to do?\r\n- What happened?\r\n- What did you expect to happen?\r\n- Step-by-step reproduction instructions and/or a simple test case.\r\n\r\nthis project is very great project.\r\nbut it seems do not support rfc 2445。\r\n\r\nwas there any plan to support that ?\r\nalso there's another is  rfc 2426.",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/612/comments",
    "author": "sgf",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2017-12-28T17:14:41Z",
        "body": "There's no plans to support iCal or vCard. Someone else can do those :)"
      },
      {
        "user": "sgf",
        "created_at": "2017-12-29T01:14:33Z",
        "body": "@jstedfast can u tell what else can do those \r\nand does this project support like .net framework's   MailMessage.AlternateViews ?\r\n🙂"
      },
      {
        "user": "sgf",
        "created_at": "2017-12-29T07:33:58Z",
        "body": "got the way by\r\nConversion of MailMessage to MimeMessage"
      }
    ]
  },
  {
    "number": 610,
    "title": "how to get top 100 mails date descending order",
    "created_at": "2017-12-26T16:59:18Z",
    "closed_at": "2017-12-26T21:27:20Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/610",
    "body": "To help me debug your issue, please explain:\r\n- What were you trying to do?\r\n- What happened?\r\n- What did you expect to happen?\r\n- Step-by-step reproduction instructions and/or a simple test case.\r\n\r\nIf you got an exception, please include the exception Message *and* StackTrace.\r\n\r\nPlease also INCLUDE A PROTOCOL LOG (scrubbed of any authentication data), especially\r\nif you got an exception such as `Syntax error in XYZ. Unexpected token: ...`.\r\nIf you do not include the protocol log, you will make me VERY UNHAPPY.\r\n\r\nWithout a protocol log, I CANNOT fix the issue. I will simply close the bug report.\r\n\r\nTo get a protocol log, follow one of the following code snippets:\r\n\r\n```csharp\r\n// log to a file called 'imap.log'\r\nvar client = new ImapClient (new ProtocolLogger (\"imap.log\"));\r\n```\r\n\r\n```csharp\r\n// log to a file called 'pop3.log'\r\nvar client = new Pop3Client (new ProtocolLogger (\"pop3.log\"));\r\n```\r\n\r\n```csharp\r\n// log to a file called 'smtp.log'\r\nvar client = new SmtpClient (new ProtocolLogger (\"smtp.log\"));\r\n```\r\n\r\nNote: if the protocol log contains sensitive information, feel free to email it to me at\r\njestedfa@microsoft.com instead of including it in the GitHub issue.\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/610/comments",
    "author": "sour7230",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2017-12-26T21:27:20Z",
        "body": "Donations appreciated for answering all of these questions ;-)\r\n\r\n```csharp\r\nvar messages = new List<MimeMessage> ();\r\n\r\nif (client.Capabilities.HasFlag (ImapCapabilities.Sort)) {\r\n    var uids = folder.Sort (SearchQuery.All, new OrderBy[] { OrderBy.ReverseDate });\r\n    for (int i = 0; i < 100 && i < uids.Count; i++)\r\n        messages.Add (folder.GetMessage (uids[i]);\r\n} else {\r\n    var summaries = folder.Fetch (0, -1, MessageSummaryItem.UniqueId | MessageSummaryItem.Envelope);\r\n    var sorted = summaries.Sort (new OrderBy[] { OrderBy.ReverseDate });\r\n    for (int i = 0; i < 100 && i < sorted.Count; i++)\r\n        messages.Add (folder.GetMessage (sorted[i].UniqueId));\r\n}\r\n```"
      }
    ]
  },
  {
    "number": 609,
    "title": "how to  get first ten character of the mail body.",
    "created_at": "2017-12-26T16:10:38Z",
    "closed_at": "2017-12-26T16:35:06Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/609",
    "body": "To help me debug your issue, please explain:\r\n- What were you trying to do?\r\n- What happened?\r\n- What did you expect to happen?\r\n- Step-by-step reproduction instructions and/or a simple test case.\r\n\r\nIf you got an exception, please include the exception Message *and* StackTrace.\r\n\r\nPlease also INCLUDE A PROTOCOL LOG (scrubbed of any authentication data), especially\r\nif you got an exception such as `Syntax error in XYZ. Unexpected token: ...`.\r\nIf you do not include the protocol log, you will make me VERY UNHAPPY.\r\n\r\nWithout a protocol log, I CANNOT fix the issue. I will simply close the bug report.\r\n\r\nTo get a protocol log, follow one of the following code snippets:\r\n\r\n```csharp\r\n// log to a file called 'imap.log'\r\nvar client = new ImapClient (new ProtocolLogger (\"imap.log\"));\r\n```\r\n\r\n```csharp\r\n// log to a file called 'pop3.log'\r\nvar client = new Pop3Client (new ProtocolLogger (\"pop3.log\"));\r\n```\r\n\r\n```csharp\r\n// log to a file called 'smtp.log'\r\nvar client = new SmtpClient (new ProtocolLogger (\"smtp.log\"));\r\n```\r\n\r\nNote: if the protocol log contains sensitive information, feel free to email it to me at\r\njestedfa@microsoft.com instead of including it in the GitHub issue.\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/609/comments",
    "author": "sour7230",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2017-12-26T16:35:06Z",
        "body": "```csharp\r\nvar summaries = folder.Fetch (uids, MessageSumnmaryItems.UniqueId | MessageSummaryItems.BodyStructure);\r\nforeach (var summary in summaries) {\r\n    var textBody = summary.TextBody;\r\n    if (textBody == null)\r\n        continue;\r\n\r\n    string section = textBody == summary.Body ? \"TEXT\" : textBody.PartSpecifier;\r\n\r\n    var content = folder.GetStream (summary.UniqueId, section, 0, 10);\r\n}\r\n```"
      }
    ]
  },
  {
    "number": 607,
    "title": "Could not delete Message from Exchange",
    "created_at": "2017-12-22T12:29:54Z",
    "closed_at": "2017-12-22T18:15:28Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/607",
    "body": "Hi ,\r\n\r\nI am facing delete issue at client. Client is using Office 365. Below is the deletion login i have implemented -\r\n\r\nimapFolder.AddFlags(u, MessageFlags.Deleted, false); -- u is unique message Id\r\nimapFolder.Expunge();\r\n\r\n**Error from Mailkit** - \r\n\r\nat *********.ImapClient_MailKit.MarkMessageForDeletion() in\r\n ..\\ImapClient-MailKit.cs:line 176\r\n\r\nThe IMAP server replied to the 'EXPUNGE' command with a 'NO' response: EXPUNGE failed\r\n\r\n**Mailkit Protocol Log :** Connected to imaps://outlook.office365.com:993/\r\nS: * OK The Microsoft Exchange IMAP4 service is ready. [QgBNADEAUABSADAAMQBDAEEAMAAxADEAMgAuAEkATgBEAFAAUgBEADAAMQAuAFAAUgBPAEQALgBPAFUAVABMAE8ATwBLAC4AQwBPAE0A]\r\nC: A00000000 CAPABILITY\r\nS: * CAPABILITY IMAP4 IMAP4rev1 AUTH=PLAIN AUTH=XOAUTH2 SASL-IR UIDPLUS ID UNSELECT CHILDREN IDLE NAMESPACE LITERAL+\r\nS: A00000000 OK CAPABILITY completed.\r\nC: A00000001 AUTHENTICATE XOAUTH2 dXNlcj1PbmxpbmVAbWF4bGlmZWluc3VyYW5jZS5jb20BYXV0aD1CZWFyZXIgTGluZUAzMzIyAQE=\r\nS: A00000001 NO AUTHENTICATE failed.\r\nC: A00000002 AUTHENTICATE PLAIN AE9ubGluZUBtYXhsaWZlaW5zdXJhbmNlLmNvbQBMaW5lQDMzMjI=\r\nS: A00000002 OK AUTHENTICATE completed.\r\nC: A00000003 CAPABILITY\r\nS: * CAPABILITY IMAP4 IMAP4rev1 AUTH=PLAIN AUTH=XOAUTH2 SASL-IR UIDPLUS MOVE ID UNSELECT CLIENTACCESSRULES CLIENTNETWORKPRESENCELOCATION BACKENDAUTHENTICATE CHILDREN IDLE NAMESPACE LITERAL+\r\nS: A00000003 OK CAPABILITY completed.\r\nC: A00000004 NAMESPACE\r\nS: * NAMESPACE ((\"\" \"/\")) NIL NIL\r\nS: A00000004 OK NAMESPACE completed.\r\nC: A00000005 LIST \"\" \"INBOX\"\r\nS: * LIST (\\Marked \\HasChildren) \"/\" INBOX\r\nS: A00000005 OK LIST completed.\r\nC: A00000006 SELECT INBOX\r\nS: * 41 EXISTS\r\nS: * 41 RECENT\r\nS: * FLAGS (\\Seen \\Answered \\Flagged \\Deleted \\Draft $MDNSent)\r\nS: * OK [PERMANENTFLAGS (\\Seen \\Answered \\Flagged \\Deleted \\Draft $MDNSent)] Permanent flags\r\nS: * OK [UNSEEN 1] Is the first unseen message\r\nS: * OK [UIDVALIDITY 14] UIDVALIDITY value\r\nS: * OK [UIDNEXT 257307] The next unique identifier value\r\nS: A00000006 OK [READ-WRITE] SELECT completed.\r\nC: A00000007 FETCH 1:* UID\r\n\r\nA00000017 OK FETCH completed.\r\nC: A00000018 UID STORE 257271 +FLAGS (\\Deleted)\r\nS: * 43 RECENT\r\nS: * 43 EXISTS\r\nS: * 6 FETCH (FLAGS (\\Deleted \\Recent))\r\nS: A00000018 OK STORE completed.\r\nC: A00000019 UID STORE 257267 +FLAGS (\\Deleted)\r\nS: * 2 FETCH (FLAGS (\\Deleted \\Recent))\r\nS: A00000019 OK STORE completed.\r\nC: A00000020 UID STORE 257269 +FLAGS (\\Deleted)\r\nS: * 4 FETCH (FLAGS (\\Deleted \\Recent))\r\nS: A00000020 OK STORE completed.\r\nC: A00000021 UID STORE 257274 +FLAGS (\\Deleted)\r\nS: * 9 FETCH (FLAGS (\\Deleted \\Recent))\r\nS: A00000021 OK STORE completed.\r\nC: A00000022 UID STORE 257270 +FLAGS (\\Deleted)\r\nS: * 5 FETCH (FLAGS (\\Deleted \\Recent))\r\nS: A00000022 OK STORE completed.\r\nC: A00000023 UID STORE 257268 +FLAGS (\\Deleted)\r\nS: * 3 FETCH (FLAGS (\\Deleted \\Recent))\r\nS: A00000023 OK STORE completed.\r\nC: A00000024 UID STORE 257273 +FLAGS (\\Deleted)\r\nS: * 8 FETCH (FLAGS (\\Deleted \\Recent))\r\nS: A00000024 OK STORE completed.\r\nC: A00000025 UID STORE 257275 +FLAGS (\\Deleted)\r\nS: * 10 FETCH (FLAGS (\\Deleted \\Recent))\r\nS: A00000025 OK STORE completed.\r\nC: A00000026 UID STORE 257272 +FLAGS (\\Deleted)\r\nS: * 7 FETCH (FLAGS (\\Deleted \\Recent))\r\nS: A00000026 OK STORE completed.\r\nC: A00000027 UID STORE 257266 +FLAGS (\\Deleted)\r\nS: * 1 FETCH (FLAGS (\\Deleted \\Recent))\r\nS: A00000027 OK STORE completed.\r\nC: A00000028 EXPUNGE\r\nS: * 33 EXISTS\r\nS: A00000028 NO EXPUNGE failed. \r\n\r\n\r\nIt may be an issue with some rule on particular mail box. Need your confirmation for the same.",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/607/comments",
    "author": "yadavmukul1986",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2017-12-22T12:37:15Z",
        "body": "How would I have any idea? The server doesn't say why it says NO, it just says NO.\r\n\r\nDid you re-open the folder on ReadOnly mode? If not, then I have no idea."
      }
    ]
  },
  {
    "number": 597,
    "title": "POP3 Client",
    "created_at": "2017-12-13T12:42:19Z",
    "closed_at": "2017-12-13T12:59:31Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/597",
    "body": "Hey Jeffrey,\r\nWill use pop3 to get mail, can distinguish between inbox mail and deleted mail? If you can, what to do？",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/597/comments",
    "author": "jdzhang1221",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2017-12-13T12:59:31Z",
        "body": "Pop3 does not include deleted messages in its listing."
      },
      {
        "user": "jdzhang1221",
        "created_at": "2017-12-13T13:08:15Z",
        "body": "thank you for your reply"
      }
    ]
  },
  {
    "number": 595,
    "title": "ImapCommand untagged responses",
    "created_at": "2017-11-30T16:14:20Z",
    "closed_at": "2017-12-01T12:07:41Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/595",
    "body": "Hey Jeffrey,\r\n\r\nI need your advice on this. I don't want to have logic inside IMailFolder untagged response handlers like CountChanged and Expunge but I want to fill a Queue with entries and then work with those as a Batch to avoid executing SQL queries for each event. I am planning to execute my queue right after MoveTo command which should be equal to IMAP OK response (which mark the end of imap command). However I wonder if this will work for MoveTo since in certain condition I can execute two imap commands copy + expunge and I won't be able to execute my queue after copy.\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/595/comments",
    "author": "ekalchev",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2017-11-30T16:33:33Z",
        "body": "Could you explain in more detail what exactly you are trying to do? I'm kind of lost. Maybe a bit more context will help."
      },
      {
        "user": "ekalchev",
        "created_at": "2017-12-01T08:13:32Z",
        "body": "I am moving 10000+ email. That generates 10000 expunge and 10000 exists responses from the server. I have events handlers that hit my database for each response. I would like to optimize that by grouping expunge responses in a batch and then execute them with one query. The problem is I don't know when the command ends. My first guess was right after MoveTo call but sometimes that could be two commands (Copy + Expunge depending if the server support Move imap extension). Do you see a problem to delay execution of untagged responses after Copy+Expunge? My understanding of imap tells me that untagged responses must be evaluated immediatelly after a command completes otherwise the client state won't match server state."
      },
      {
        "user": "jstedfast",
        "created_at": "2017-12-01T12:07:41Z",
        "body": "Yes, you must evaluate untagged responses right away.\r\n\r\nIf you want to reduce Expunge commands, just use the CopyTo() method instead of MoveTo() if/when the server does not support the MOVE extension:\r\n\r\n```csharp\r\nif (client.Capabilities.HasFlag (ImapCapabilities.Move)) {\r\n    folder.MoveTo (uids, targetFolder);\r\n} else {\r\n    folder.CopyTo (uids, targetFolder);\r\n    folder.AddFlags (uids, MessageFlags.Deleted, false);\r\n    folder.Expunge (uids);\r\n}"
      },
      {
        "user": "jstedfast",
        "created_at": "2017-12-01T12:08:55Z",
        "body": "Oh, and also make sure to pass a list of uids to CopyTo and/or MoveTo so that you don't move 1 message at a time."
      }
    ]
  },
  {
    "number": 593,
    "title": "How can I mock the ImapClient.GetFolder() method? (question not an issue)",
    "created_at": "2017-11-28T14:11:13Z",
    "closed_at": "2017-11-28T15:09:11Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/593",
    "body": "I need to test some states which depends on exists folders. So I need to make some fake folders but I can't. Is it possible? Here is my code:\r\n```\r\n// Method under tests\r\n// I need to check this.PersonalFolder state after this method called\r\n        public virtual async Task ValidateMailboxesAsync()\r\n        {\r\n            var subfolders = this.PersonalFolder.GetSubfoldersAsync().Result.Select(x => x.Name).ToArray();\r\n            this.logger.LogDebug($\"Existing subfolders: {string.Join(\",\", subfolders)}\");\r\n            foreach (var mb in MailboxesAll.Where(x => !subfolders.Contains(x)))\r\n            {\r\n                this.logger.LogDebug($\"Creating folder {mb}\");\r\n                await this.PersonalFolder.CreateAsync(mb, true);\r\n            }\r\n        }\r\n\r\n// Test method (may be some foolish things there but I'm actually tired with this so try to imagine the idea)\r\n        [Theory]\r\n        [MemberData(nameof(GetValidFolders))]\r\n        public async Task ValidateMailboxesAsync_TestIsCreatesMissedMailboxes(IMailFolder personalFolder)\r\n        {\r\n            var taskMock = new Mock<MailProcessorTask>(MockBehavior.Loose);\r\n            taskMock.SetupGet(g => g.PersonalFolder).Returns(personalFolder);\r\n            taskMock.Setup(s => s.PersonalFolder.CreateAsync(It.IsAny<string>(), true, CancellationToken.None)).ReturnsAsync(It.IsAny<IMailFolder>());\r\n            taskMock.Setup(s => s.ValidateMailboxesAsync()).CallBase();\r\n\r\n            await taskMock.Object.ValidateMailboxesAsync();\r\n\r\n            taskMock.VerifyGet(g => g.PersonalFolder, Times.AtLeastOnce());\r\n            taskMock.VerifySet(s => s.PersonalFolder.CreateAsync(It.IsAny<string>(), true), Times.AtLeastOnce());\r\n            Assert.Equal(1, 1);\r\n        }\r\n\r\n        private static IEnumerable<object[]> GetValidFolders()\r\n        {\r\n            var clientMock = new Mock<IMailStore>(MockBehavior.Loose);\r\n            clientMock.Setup(s =>\r\n                    s.ConnectAsync(It.IsAny<string>(), It.IsAny<int>(), It.IsAny<bool>(), CancellationToken.None))\r\n                .Returns(Task.CompletedTask);\r\n            clientMock.Setup(s => s.AuthenticateAsync(It.IsAny<string>(), It.IsAny<string>(), CancellationToken.None))\r\n                .Returns(Task.CompletedTask);\r\n            clientMock.Setup(m => m.GetFolder(It.IsAny<string>(), CancellationToken.None)).Returns(It.IsAny<IMailFolder>());\r\n\r\n            clientMock.Object.ConnectAsync(\"a\", 1, true);\r\n            clientMock.Object.AuthenticateAsync(\"b\", \"c\");\r\n\r\n            var folder = clientMock.Object.GetFolder(\"test\", CancellationToken.None);\r\n\r\n            yield return new object[]\r\n            {\r\n                folder.Create(\"r\", true).Create(\"rr\", true).Create(\"rrr\", true)\r\n            };\r\n        }\r\n```\r\nIt doesn't work in any form that I've tried. Please help me to construct.",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/593/comments",
    "author": "a-a-k",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2017-11-28T15:09:10Z",
        "body": "Check out the unit tests that MailKit has for IMAP."
      },
      {
        "user": "a-a-k",
        "created_at": "2017-11-29T08:28:16Z",
        "body": "> Check out the unit tests that MailKit has for IMAP.\r\n\r\nHaven't find any mocks there. Could you target me on right direction?"
      },
      {
        "user": "jstedfast",
        "created_at": "2017-11-29T15:06:16Z",
        "body": "I thought what you needed was a way to mock an IMAP connection for some unit tests. That's what the MailKit unit tests do in ImapCLientTests.cs (and supporting classes in ImapReplayStream, etc).\r\n\r\nIf that's not what you want, I don't know how to help you."
      }
    ]
  },
  {
    "number": 588,
    "title": "Error only when project is published",
    "created_at": "2017-11-15T17:11:18Z",
    "closed_at": "2017-11-15T18:12:00Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/588",
    "body": "Hi,\r\n\r\nI am using an smtp from mailgun and everything works great on my project except when it is published.\r\nWhen i publish the project and then call the same api i get the following error and email is not sent.\r\nPlease help me.\r\nThanks in advance \r\n\r\n at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Net.Security.SslState.InternalEndProcessAuthentication(LazyAsyncResult lazyResult)\r\n    at System.Net.Security.SslState.EndProcessAuthentication(IAsyncResult result)\r\nat System.Net.Security.SslStream.EndAuthenticateAsClient(IAsyncResult asyncResult)\r\n  at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n  at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n at MailKit.Net.Smtp.SmtpClient.Connect(String host, Int32 port, SecureSocketOptions options, CancellationToken cancellationToken)\r\n  at rfaBack.Controllers.EmailController.<sendMail>d__2.MoveNext() in ",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/588/comments",
    "author": "fatjoni",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2017-11-15T18:12:00Z",
        "body": "Sounds like a problem with your setup on your public machine. Perhaps some Root CA certificates not added? Perhaps a firewall issue? You'll have to ask someone else because I don't know what the problem is, all I can tell you is that it's not a MailKit issue."
      }
    ]
  },
  {
    "number": 584,
    "title": "Sent draft not shown in Sent box",
    "created_at": "2017-10-31T11:18:17Z",
    "closed_at": "2017-10-31T13:50:26Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/584",
    "body": "Below is the code to send a message from DRAFT folder. This code sends mail successfully but didn't appear in SENT box.\r\n```\r\nvar msg = MakeNewMimeMessage(/*input data*/);\r\nvar status = MailSmtpClient.SendEmail(msg);\r\nif (status)\r\n{\r\nPermanentDeleteByMessageId(/*message unique_id in 'draft' folder */);\r\n}\r\n```\r\nI tried to REMOVEFLAG of message as to remove \"draft\" flag. but still didn't work.\r\nCan you identify the potential problem?",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/584/comments",
    "author": "officialrizwanali",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2017-10-31T13:50:26Z",
        "body": "Yea, you need to append the message to the Sent folder after sending it.\r\n\r\nSMTP doesn't add the message to the Sent folder."
      }
    ]
  },
  {
    "number": 578,
    "title": "How to use \"SyncRoot\"?",
    "created_at": "2017-10-27T09:53:00Z",
    "closed_at": "2017-10-27T11:01:08Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/578",
    "body": "How can I use \"SyncRoot\" for synchronization of my client and IMAP server?\r\nany helping material you can share.",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/578/comments",
    "author": "officialrizwanali",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2017-10-27T11:01:08Z",
        "body": "The same way you use SyncRoot for standard collections in .NET.\r\n\r\n```csharp\r\nlock (folder.SyncRoot) {\r\n    folder.DoSomething ();\r\n}\r\n```\r\n\r\n```csharp\r\nlock (client.SyncRoot) {\r\n    c lient.DoSOmething ();\r\n}\r\n```"
      },
      {
        "user": "officialrizwanali",
        "created_at": "2017-10-27T11:18:11Z",
        "body": "I had read about the `lock` you mentioned in your writings, but what \"SyncRoot\" actually does?\r\nI guess its used to perform a single operation at a time and blocks all other threads until current operation is completed.\r\nNot getting how this keeps all the things in \"sync\". @jstedfast "
      },
      {
        "user": "jstedfast",
        "created_at": "2017-10-27T11:58:42Z",
        "body": "It’s just a dummy object that is shared between all folders and their client that can be used to synchronize threads if your app is accessing IMAP via multiple threads."
      },
      {
        "user": "officialrizwanali",
        "created_at": "2017-10-27T12:01:20Z",
        "body": "does this locks the whole client object, when one thread locks it?"
      },
      {
        "user": "jstedfast",
        "created_at": "2017-10-27T12:01:53Z",
        "body": "If you create your own class that implements the IList interface, for example, you will notice that you need to implement a SyncRoot property."
      },
      {
        "user": "officialrizwanali",
        "created_at": "2017-10-27T12:03:03Z",
        "body": "thank you!"
      },
      {
        "user": "jstedfast",
        "created_at": "2017-10-27T12:55:31Z",
        "body": "> does this locks the whole client object, when one thread locks it?\r\n\r\nYes. When you lock the SyncRoot on any folder or the client, it prevents any other thread from locking any of the SyncRoots for the same IMAP connection."
      },
      {
        "user": "atiyka",
        "created_at": "2019-11-08T09:22:33Z",
        "body": "Hi @jstedfast , I have a question on this thread. I'm using an ImapClient between threads and couple of times I got the following error: \r\n\r\n> The ImapClient is currently busy processing a command in another thread. Lock the SyncRoot property to properly synchronize your threads.\r\n\r\nWhen I perform an operation on a folder, I just lock the SyncRoot property of that folder, not the client's SyncRoot property. Is it okay/enough? Or I should lock the client when I'm doing any operation?"
      },
      {
        "user": "jstedfast",
        "created_at": "2019-11-08T12:26:21Z",
        "body": "@atiyka \r\n\r\nThe ImapClient.SyncRoot is the same object as the ImapFolder.SyncRoot (assuming the ImapFolder came from the ImapClient), so yes, that is enough.\r\n\r\nThat said, the most common reason most people see that error is not because of locking anymore... the most common reason seems to be because you are trying to invoke an IMAP command from within an IMAP event handler. You cannot do that.\r\n\r\nHere's why:\r\n\r\nIn MailKit, the ImapClient processes the server response and emits those events WHILE IT IS STILL PROCESSING THE COMMAND.\r\n\r\nIn other IMAP client libraries, the ImapClient will read the **entire response** into one big **massive string** before it starts parsing it, but MailKit doesn't do that. It parses the response as it reads it from the socket.\r\n\r\nWhat you need to do in your event handlers is to queue a new command somehow in your program. How you do that depends on how you design your program. Are you using Tasks? If so, you could do `.ContinueWith (...)` on the current running Task."
      },
      {
        "user": "atiyka",
        "created_at": "2019-11-11T14:11:58Z",
        "body": "Thank you very much the response! Yes, I'm using Tasks."
      }
    ]
  },
  {
    "number": 577,
    "title": "Imap Inbox folder returning \"sent\" messages - Gmail",
    "created_at": "2017-10-26T12:02:28Z",
    "closed_at": "2017-10-26T13:00:47Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/577",
    "body": "In Gmail, I'm trying to fetch all inbox messages, but it returns messages that were **answered**. \r\nIs there a way to filter theses messages? I couln't find any method for that in `SearchQuery` class.",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/577/comments",
    "author": "JobaDiniz",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2017-10-26T13:00:47Z",
        "body": "Any of these will work:\r\n\r\n```csharp\r\nvar query = SearchQuery.Not (SearchQuery.HasFlags (MessageFlags.Answered));\r\n\r\n// or\r\n\r\nvar query = SearchQuery.Not (SearchQuery.Answered);\r\n\r\n// or\r\n\r\nvar query = SearchQuery.NotAnswered;\r\n```\r\n"
      }
    ]
  },
  {
    "number": 573,
    "title": "How to Group SearchQuery?",
    "created_at": "2017-10-23T13:24:12Z",
    "closed_at": "2017-10-23T14:17:49Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/573",
    "body": "How to use `SearchQuery` to group conditions, for example:\r\n`FROM (x@email.com OR y@email.com) AND TO (a@a.com OR b@b.com)`\r\n\r\nThe way I see it, there is no way, because `SearchQuery` only contains `And` and `Or` and I can't group things...",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/573/comments",
    "author": "JobaDiniz",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2017-10-23T14:17:49Z",
        "body": "Sure you can.\r\n\r\n```csharp\r\nvar xOrY = SearchQuery.FromContains (\"x@email.com\").Or (SearchQuery.FromContains (\"y@email.com\"));\r\nvar aOrB = SearchQuery.FromContains (\"a@email.com\").Or (SearchQuery.FromContains (\"b@email.com\"));\r\nvar query = xOrY.And (aOrB);\r\n```"
      },
      {
        "user": "jstedfast",
        "created_at": "2017-10-23T14:24:41Z",
        "body": "FWIW, there's also an ImapFolder.Search() method that takes a raw search query string.\r\n\r\nYou might need to cast the IMailFolder to an ImapFolder first, though, since I don't think IMailFolder exposes it.\r\n\r\nThat said, I generally recommend using the SearchQuery API because it's impossible to search for literal strings using the string API (by literal strings I mean the way IMAP defines literal strings)."
      },
      {
        "user": "dhaval-kateliya",
        "created_at": "2023-03-06T10:11:42Z",
        "body": "> \r\nhow can we search using FromContains if we have list or array of address, means dynamic or condition with SearchQuery "
      },
      {
        "user": "jstedfast",
        "created_at": "2023-03-06T12:44:54Z",
        "body": "Like This:\r\n\r\n```csharp\r\nvar query = SearchQuery.FromContains (addresses[0]);\r\nfor (int i = 1; i < addresses.Length; i++)\r\n    query = query.Or (SearchQuery.FromContains (addresses[i]));\r\n\r\nvar uids = folder.Search (query);\r\n```"
      },
      {
        "user": "dhaval-kateliya",
        "created_at": "2023-03-06T12:59:56Z",
        "body": "> Like This:\r\n> \r\n> ```cs\r\n> var query = SearchQuery.FromContains (addresses[0]);\r\n> for (int i = 1; i < addresses.Length; i++)\r\n>     query = query.Or (SearchQuery.FromContains (addresses[i]));\r\n> \r\n> var uids = folder.Search (query);\r\n> ```\r\n\r\nHi, Thanks for reply \r\nI tried the same but gives compile time error for line` query = query.Or (SearchQuery.FromContains (addresses[i]));` as below\r\n`Error\tCS0029\tCannot implicitly convert type 'MailKit.Search.BinarySearchQuery' to 'MailKit.Search.TextSearchQuery'`\r\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2023-03-06T13:58:36Z",
        "body": "Change `var query = ...` to `SearchQuery query = ...`"
      }
    ]
  },
  {
    "number": 570,
    "title": "How to send custom IMAP command?",
    "created_at": "2017-10-13T15:45:31Z",
    "closed_at": "2017-10-13T15:57:56Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/570",
    "body": "I'm trying to improve one of my projects by replacing not very reliable AE.Net.Mail library with the MailKit. However in order to use ModSeq with my IMAP server I have to \"identify\" as a \"firendly\" client using command such as ' {imap tag} x-icewarp-server iwconnector \"x.x.x.yyyy\" ' only then the  server includes HighestModSeq value for folders and allows me to search by it.\r\nIs there an elegant way of doing this with the MailKit ImapClient instance? Thanks!",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/570/comments",
    "author": "AlmightyCZ",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2017-10-13T15:57:56Z",
        "body": "There's no API for doing that, but you can fork MailKit and it should be fairly straight forward to add an API to send that command if you follow the general pattern of other commands.\r\n\r\nIf you have questions, poke me and I'll answer."
      }
    ]
  },
  {
    "number": 569,
    "title": "Web.config support?",
    "created_at": "2017-10-10T08:02:48Z",
    "closed_at": "2017-10-10T15:57:18Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/569",
    "body": "Hi Jeffrey,\r\n\r\nMailKit is a godsend. It enabled me to send a message with implicit SSL, very easily. Thank you!\r\n\r\nSmall question: I'm setting up the SMTP server, SecureSocketOptions, username, password, etc. in code now. I'd prefer doing that in Web.Config. Is this possible? \r\n\r\nSorry if this is answered elsewhere, I have been searching but could not find documentation mentioning whether or not it is supported.\r\n\r\nThank you kindly.\r\n\r\nDiana\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/569/comments",
    "author": "DianaLaa",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2017-10-10T15:57:18Z",
        "body": "You could easily write code to load these properties from your Web.config file. Web.config is just XML.\r\n\r\nHope that helps."
      }
    ]
  },
  {
    "number": 567,
    "title": "Exception \"Unable to read data from the transport connection: An established connection was aborted by the software in your host machine.\"",
    "created_at": "2017-10-09T19:54:20Z",
    "closed_at": "2017-10-09T20:41:10Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/567",
    "body": "I am trying to read emails via IMAP using below code.\r\n\r\nusing (var client = new ImapClient(new ProtocolLogger(\"imap.log\")))\r\n{\r\n                    //accept all SSL certificates\r\n                    client.ServerCertificateValidationCallback = (s, c, h, e) => true;\r\n                    client.Connect (\"mailServer\", 993, true);\r\n                    client.AuthenticationMechanisms.Remove(\"XOAUTH2\");\r\n                    client.Authenticate(\"userId\", \"Password\");\r\n\r\n                    var folder = client.Inbox;\r\n                    IMailFolder ctbtoFolder = null;\r\n                    IMailFolder inFolder = null;\r\n                    IMailFolder processedFolder = null;\r\n\r\n                    IEnumerable<IMailFolder> subFolders = folder.GetSubfolders();\r\n                    foreach (IMailFolder subFolder in subFolders)\r\n                    {\r\n                        //Process folder\r\n                    }     \r\n}\r\n\r\nAt line \"client.Connect(\"mailServer\", 993, true);\" below exception is thrown. I tried removing SSL certificates accepting line. Still the exception is same. And nothing is printed in imap.log file.\r\n\r\nUnable to read data from the transport connection: An established connection was aborted by the software in your host machine.\r\n\r\nHResult -2146232800\r\n\r\nInner exception\r\n   at System.Net.Sockets.Socket.BeginReceive(Byte[] buffer, Int32 offset, Int32 size, SocketFlags socketFlags, AsyncCallback callback, Object state)\r\n   at System.Net.Sockets.NetworkStream.BeginRead(Byte[] buffer, Int32 offset, Int32 size, AsyncCallback callback, Object state)\r\n\r\nStrack Trace\r\n   at System.Net.Sockets.Socket.BeginReceive(Byte[] buffer, Int32 offset, Int32 size, SocketFlags socketFlags, AsyncCallback callback, Object st...\r\n   at System.Net.Sockets.NetworkStream.BeginRead(Byte[] buffer, Int32 offset, Int32 size, AsyncCallback callback, Object state)\r\n   at System.Net.Sockets.NetworkStream.<>c.<ReadAsync>b__58_0(Byte[] bufferArg, Int32 offsetArg, Int32 sizeArg, AsyncCallback callback, Object state)\r\n   at System.Threading.Tasks.TaskFactory`1.FromAsyncImpl[TArg1,TArg2,TArg3](Func`6 beginMethod, Func`2 endFunction, Action`1 endAction, TArg1 arg1, TArg2 arg2, TArg3 arg3, Object state, TaskCreationOptions creationOptions)\r\n   at System.Threading.Tasks.TaskFactory.FromAsync[TArg1,TArg2,TArg3,TResult](Func`6 beginMethod, Func`2 endMethod, TArg1 arg1, TArg2 arg2, TArg3 arg3, Object state)\r\n   at System.Net.Sockets.NetworkStream.ReadAsync(Byte[] buffer, Int32 offset, Int32 size, CancellationToken cancellationToken)\r\n   at System.IO.Stream.ReadAsync(Byte[] buffer, Int32 offset, Int32 count)\r\n   at System.Net.FixedSizeReader.StartReading()\r\n   at System.Net.Security.SslState.StartReceiveBlob(Byte[] buffer, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslState.CheckCompletionBeforeNextReceive(ProtocolToken message, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslState.StartSendBlob(Byte[] incoming, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslState.ForceAuthentication(Boolean receiveFirst, Byte[] buffer, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslState.ProcessAuthentication(LazyAsyncResult lazyResult)\r\n   at System.Net.Security.SslStream.BeginAuthenticateAsClient(String targetHost, X509CertificateCollection clientCertificates, SslProtocols enabledSslProtocols, Boolean checkCertificateRevocation, AsyncCallback asyncCallback, Object asyncState)\r\n   at System.Net.Security.SslStream.<>c__DisplayClass21_0.<AuthenticateAsClientAsync>b__0(AsyncCallback callback, Object state)\r\n   at System.Threading.Tasks.TaskFactory`1.FromAsyncImpl(Func`3 beginMethod, Func`2 endFunction, Action`1 endAction, Object state, TaskCreationOptions creationOptions)\r\n   at System.Threading.Tasks.TaskFactory.FromAsync(Func`3 beginMethod, Action`1 endMethod, Object state)\r\n   at System.Net.Security.SslStream.AuthenticateAsClientAsync(String targetHost, X509CertificateCollection clientCertificates, SslProtocols enabledSslProtocols, Boolean checkCertificateRevocation)\r\n   at MailKit.Net.Imap.ImapClient.Connect(String host, Int32 port, SecureSocketOptions options, CancellationToken cancellationToken)\r\n   at MailKit.MailService.Connect(String host, Int32 port, Boolean useSsl, CancellationToken cancellationToken)\r\n   at ctbto.Parser.EmailReader.ReadMailBox() in W:\\Projects\\CTBTOMonitoring\\ctbto.Parser\\EmailReader.cs:line 36\r\n\r\n\r\nI tried the same code on port 143 with below change.\r\n//client.ServerCertificateValidationCallback = (s, c, h, e) => true;\r\nclient.Connect (\"mailServer\", 143, false);\r\n\r\nThen I receive below exception with imap.log content as \"Connected to imap://mailServer:143/?starttls=when-available\"\r\n\r\nThe IMAP server has unexpectedly disconnected.\r\n   at MailKit.Net.Imap.ImapStream.ReadAhead(Int32 atleast, CancellationToken cancellationToken)\r\n   at MailKit.Net.Imap.ImapStream.ReadToken(String specials, CancellationToken cancellationToken)\r\n   at MailKit.Net.Imap.ImapEngine.Connect(ImapStream stream, CancellationToken cancellationToken)\r\n   at MailKit.Net.Imap.ImapClient.Connect(String host, Int32 port, SecureSocketOptions options, CancellationToken cancellationToken)\r\n   at MailKit.MailService.Connect(String host, Int32 port, Boolean useSsl, CancellationToken cancellationToken)\r\n   at ctbto.Parser.EmailReader.ReadMailBox() in W:\\Projects\\CTBTOMonitoring\\ctbto.Parser\\EmailReader.cs:line 35\r\n\r\nI am working in a Windows 10 Virtual Machine and I have both Firewall and Antivirus Protection disabled. What could be the issue here?",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/567/comments",
    "author": "dushii",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2017-10-09T20:41:10Z",
        "body": "Sounds like your virtual machine is misconfigured for network support."
      }
    ]
  },
  {
    "number": 565,
    "title": "Want to use SSL for sending emails using outlook in smtp mailkit",
    "created_at": "2017-09-27T11:13:48Z",
    "closed_at": "2017-09-27T14:16:57Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/565",
    "body": "I am using the code below for connecting outlook, IMAP works well but when it comes to SMTP it throws error:-\r\n\r\n> using (var smtpClient = new MailKit.Net.Smtp.SmtpClient())\r\n>                 {\r\n>                     try\r\n>                     {\r\n>                             smtpClient.Connect(host, port, true);\r\n>                         smtpClient.Authenticate(fromemail, password);\r\n>                         smtpClient.Send(message);\r\n>                         smtpClient.Disconnect(true);\r\n>                         return String.Empty;\r\n>                     }\r\n\r\n\r\nAbove code is throwing various error such as \"remote forcibly closed the connection\", and sometimes \"handshake failed error\" and sometimes \"A connection took much time to respond\", like these error when I try using different ways based on your posts on google, stack overflows and gits.\r\n\r\nNow I am using this code which is working fine ,\r\n\r\n> using (var smtpClient = new MailKit.Net.Smtp.SmtpClient())\r\n>                 {\r\n>                     try\r\n>                     {\r\n>                         if (host.Contains(\"outlook\"))\r\n>                         {\r\n>                             smtpClient.ServerCertificateValidationCallback = (s, c, h, e) => true;\r\n>                             smtpClient.Connect(host, 587, false);\r\n>                             smtpClient.AuthenticationMechanisms.Remove(\"XOAUTH2\");\r\n>                         }\r\n>                         else\r\n>                         {\r\n>                             smtpClient.Connect(host, port, true);\r\n>                         }\r\n> \r\n>                         smtpClient.Authenticate(fromemail, password);\r\n>                         smtpClient.Send(message);\r\n>                         smtpClient.Disconnect(true);\r\n>                         return String.Empty;\r\n>                     }\r\n\r\n\r\nBut I want to use SSL while sending emails please help me in detail.",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/565/comments",
    "author": "shayazm",
    "comments": [
      {
        "user": "shayazm",
        "created_at": "2017-09-27T11:24:36Z",
        "body": "I cant get the smtp.log file as access is denied at my work place."
      },
      {
        "user": "jstedfast",
        "created_at": "2017-09-27T14:16:57Z",
        "body": "There are 2 types of \"SSL\":\r\n\r\n1. SSL/TLS immediately on connect (i.e. no plain-text commands/responses/greetings are ever sent between client/server)\r\n2. SSL/TLS via the STARTTLS command.\r\n\r\nPort 25 and 587 use mode 2. Port 465 uses mode 1.\r\n\r\nThe Connect() method that takes a `useSsl` refers to type 1 (i.e. `true` means use mode 1 while `false` means use mode 2 if-and-only-if-it-is-available)."
      },
      {
        "user": "osjoberg",
        "created_at": "2017-10-23T09:45:32Z",
        "body": "Just to add a thought:\r\n\r\nI believe the mismatching API design between .NET SmtpClient and MailKits SmtpClient class is causing some confusion for people moving from .NET SmtpClient to MailKit SmtpClient.\r\n\r\n.NET SmtpClient.EnableSsl is not equivalent of MailKits SmtpClient.Connect() useSsl parameter. \r\n- .NET SmtpClient.EnableSsl: true means negotiating SSL/STARTTLS \r\n- MailKit SmtpClient.Connect() useSsl parameter: true means SSL only\r\n\r\nI found a bug in Papercut which uses MailKit which very well may be there because of this confusion. I would have done this mistake as well, to be honest."
      }
    ]
  },
  {
    "number": 562,
    "title": "I don't receive any mail in my custom office 365 mailbox when using mail kit",
    "created_at": "2017-09-07T17:50:40Z",
    "closed_at": "2017-09-07T18:06:18Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/562",
    "body": "- What were you trying to do?\r\n\r\nSending email with mailkit smtpclient using gmail smtp or any other smtp mail service like sendgrid\r\nUsing .net core 1.0.4 and mailkit 1.18.1.1\r\n\r\n- What happened?\r\n\r\nAll mailbox (gmail, abc.com microsoft office 365 bussiness ) receive the email exept all mailbox of a office 365 link to a custom domain. The log show everythings is ok.\r\n\r\n- What did you expect to happen?\r\nReceive the email on my jbouillon@xyz.com account.\r\n\r\n- Step-by-step reproduction instructions and/or a simple test case.\r\nI'm not sure how you can reproduce the problem without my office 365 box.\r\nI have done a simple unit test with the following code : \r\n\r\n```\r\n  var body = \"Hello\";\r\n\r\n            var message = new MimeMessage();\r\n            message.From.Add(new MailboxAddress(\"qc@gmail.com\"));\r\n            message.To.Add(new MailboxAddress(\"jbouillon@xyz.com\"));\r\n            message.Cc.Add(new MailboxAddress(\"jonatanbouillon@abc.com\"));\r\n            message.Cc.Add(new MailboxAddress(\"dev@xyz.com\"));\r\n            message.Cc.Add(new MailboxAddress(\"jb@gmail.com\"));\r\n            message.Subject = \"Subject\";\r\n\r\n            var bodyBuilder = new BodyBuilder { HtmlBody = body };\r\n            message.Body = bodyBuilder.ToMessageBody();\r\n\r\n            using (var client = new SmtpClient(new ProtocolLogger(\"smtp.txt\")))\r\n            {\r\n                // For demo-purposes, accept all SSL certificates (in case the server supports STARTTLS)\r\n                client.ServerCertificateValidationCallback = (s, c, h, e) => true;\r\n\r\n                client.Connect(\"smtp.sendgrid.net\", 587, false);\r\n                client.AuthenticationMechanisms.Remove(\"XOAUTH2\");\r\n\r\n                client.Authenticate(\"apikey\", \"*****\");\r\n\r\n                client.Send(message);\r\n                client.Disconnect(true);\r\n            }\r\n```\r\n\r\nNot exception occur\r\n\r\n```csharp\r\n// log to a file called 'smtp.log'\r\nConnected to smtp://smtp.sendgrid.net:587/?starttls=when-available\r\nS: 220 SG ESMTP service ready at ismtpd0026p1mdw1.sendgrid.net\r\nC: EHLO [192.168.1.101]\r\nS: 250-smtp.sendgrid.net\r\nS: 250-8BITMIME\r\nS: 250-PIPELINING\r\nS: 250-SIZE 31457280\r\nS: 250-STARTTLS\r\nS: 250-AUTH PLAIN LOGIN\r\nS: 250 AUTH=PLAIN LOGIN\r\nC: STARTTLS\r\nS: 220 Begin TLS negotiation now\r\nC: EHLO [192.168.1.101]\r\nS: 250-smtp.sendgrid.net\r\nS: 250-8BITMIME\r\nS: 250-PIPELINING\r\nS: 250-SIZE 31457280\r\nS: 250-STARTTLS\r\nS: 250-AUTH PLAIN LOGIN\r\nS: 250 AUTH=PLAIN LOGIN\r\nC: AUTH PLAIN \r\nS: 235 Authentication successful\r\nC: MAIL FROM:<xxx@gmail.com>\r\nC: RCPT TO:<jbouillon@xyz.com>\r\nC: RCPT TO:<jb@gmail.com>\r\nC: RCPT TO:<jonatanbouillon@abc.com>\r\nC: RCPT TO:<dev@xyz.com>\r\nS: 250 Sender address accepted\r\nS: 250 Recipient address accepted\r\nS: 250 Recipient address accepted\r\nS: 250 Recipient address accepted\r\nS: 250 Recipient address accepted\r\nC: DATA\r\nS: 354 Continue\r\nC: From: qc@gmail.com\r\nC: Date: Thu, 07 Sep 2017 13:21:43 -0400\r\nC: Subject: Subject\r\nC: Message-Id: <81E757FCA2U4.4KW7S4T9QKWO@localhost.localdomain>\r\nC: To: jbouillon@xyz.com, jonatanbouillon@gmail.com\r\nC: Cc: jonatanbouillon@abc.com, dev@xyz.com,\r\nC:  jb@gmail.com\r\nC: MIME-Version: 1.0\r\nC: Content-Type: text/html; charset=utf-8\r\nC: Content-Id: <7F4R57FCA2U4.LCSVYKGLCHYJ2@localhost.localdomain>\r\nC: \r\nC: Hello\r\nC: \r\nC: .\r\nS: 250 Ok: queued as lNoh8TaZQjqn1ExcfkPYYQ\r\nC: QUIT\r\nS: 221 See you later\r\nZC7BII1@localhost.localdomain>\r\nC: \r\nC: Hello\r\nC: \r\nC: .\r\nS: 250 2.0.0 OK 1504803614 g132sm54240qke.11 - gsmtp\r\nC: QUIT\r\nS: 221 2.0.0 closing connection g132sm54240qke.11 - gsmtp\r\n0107qte.71 - gsmtp\r\nC: QUIT\r\nS: 221 2.0.0 closing connection o9sm70107qte.71 - gsmtp\r\nte.73 - gsmtp\r\nouillon@abc.com, dev@xyz.com\r\nC: To: jb@gmail.com\r\nC: MIME-Version: 1.0\r\nC: Content-Type: text/html; charset=utf-8\r\nC: Content-Id: <J9IW680CA2U4.UZJRQOILYXZF1@localhost.localdomain>\r\nC: \r\nC: Hello\r\nC: \r\nC: .\r\nS: 250 2.0.0 OK 1504801648 x189sm1816270qkd.70 - gsmtp\r\nC: QUIT\r\nS: 221 2.0.0 closing connection x189sm1816270qkd.70 - gsmtp\r\naldomain>\r\nC: \r\nC: Hello\r\nC: \r\nC: .\r\nS: 250 2.0.0 OK 1504801403 p64sm2253qkc.25 - gsmtp\r\nC: QUIT\r\nS: 221 2.0.0 closing connection p64sm2253qkc.25 - gsmtp\r\n``",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/562/comments",
    "author": "jobou363",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2017-09-07T18:06:18Z",
        "body": "Well, according to the log file... Google's SMTP server accepted the message. That suggests there's no bug in MailKit.\r\n\r\nMaybe the message is in your spam folder?"
      },
      {
        "user": "jobou363",
        "created_at": "2017-09-07T18:45:37Z",
        "body": "No spam in the spam folder.\r\n\r\nOk, i found the problem is related to text sent as html.\r\n\r\nModifying the text to html fix the problem.\r\n\r\n`var body = \"<html><body>bodys test</body></html>\";`\r\n\r\n"
      }
    ]
  },
  {
    "number": 561,
    "title": "Unable to connect to imaps when setting up TLS ",
    "created_at": "2017-09-06T10:06:31Z",
    "closed_at": "2017-09-06T10:53:38Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/561",
    "body": "So i'm having an issue I am trying to connect to using TLS\r\n\r\nServer name: outlook.office365.com\r\nPort: 993\r\nEncryption method: TLS\r\n\r\nso I am using this to connect to the server \r\n \r\n` _client.Connect( \"outlook.office365.com\", \"993\", SecureSocketOptions.StartTls);`\r\n\r\nBut it fails and the log only contains one line and throws an exception\r\n\r\n> Connected to **imap:**//outlook.office365.com:993/?starttls=always\r\n\r\nBut if use below it connect successfully but need to use TLS\r\n\r\n` _client.Connect( \"outlook.office365.com\", \"993\", SecureSocketOptions.Auto);`\r\n\r\n> Connected to **imaps**://outlook.office365.com:993/\r\n> S: * OK The Microsoft Exchange IMAP4 service is ready. [SABFADEAUAAxADkAMABDAEEAMAAwADEANQAuAEUAVQBSAFAAMQA5ADAALgBQAFIATwBEAC4ATwBVAFQATABPAE8ASwAuAEMATwBNAA==]\r\n> C: C00000000 CAPABILITY\r\n> S: * CAPABILITY IMAP4 IMAP4rev1 AUTH=PLAIN AUTH=XOAUTH2 SASL-IR UIDPLUS ID UNSELECT CHILDREN IDLE NAMESPACE LITERAL+\r\n> S: C00000000 OK CAPABILITY completed.\r\n> C: C00000001 AUTHENTICATE XOAUTH2  ***********************\r\n> S: C00000001 NO AUTHENTICATE failed.\r\n> C: C00000002 AUTHENTICATE PLAIN ***********************\r\n> S: C00000002 OK AUTHENTICATE completed.\r\n> C: C00000003 CAPABILITY\r\n> S: * CAPABILITY IMAP4 IMAP4rev1 AUTH=PLAIN AUTH=XOAUTH2 SASL-IR UIDPLUS MOVE ID UNSELECT CLIENTACCESSRULES CLIENTNETWORKPRESENCELOCATION BACKENDAUTHENTICATE CHILDREN IDLE NAMESPACE LITERAL+\r\n> S: C00000003 OK CAPABILITY completed.\r\n> C: C00000004 NAMESPACE\r\n> S: * NAMESPACE ((\"\" \"/\")) NIL NIL\r\n> S: C00000004 OK NAMESPACE completed.\r\n> C: C00000005 LIST \"\" \"INBOX\"\r\n> S: * LIST (\\Marked \\HasNoChildren) \"/\" INBOX\r\n> S: C00000005 OK LIST completed.\r\n> C: C00000006 SELECT INBOX\r\n> S: * 5 EXISTS\r\n> S: * 2 RECENT\r\n> S: * FLAGS (\\Seen \\Answered \\Flagged \\Deleted \\Draft $MDNSent)\r\n> S: * OK [PERMANENTFLAGS (\\Seen \\Answered \\Flagged \\Deleted \\Draft $MDNSent)] Permanent flags\r\n> S: * OK [UNSEEN 4] Is the first unseen message\r\n> S: * OK [UIDVALIDITY 14] UIDVALIDITY value\r\n> S: * OK [UIDNEXT 626] The next unique identifier value\r\n> S: C00000006 OK [READ-WRITE] SELECT completed.\r\n> C: C00000007 FETCH 1:* (UID FLAGS INTERNALDATE RFC822.SIZE ENVELOPE BODY)\r\n\r\nshould the TLS be going to imaps as well?\r\n\r\nAm I missing something any help would be useful I have removed the  ***********************\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/561/comments",
    "author": "truane",
    "comments": [
      {
        "user": "truane",
        "created_at": "2017-09-06T10:30:32Z",
        "body": "sorry the error using \r\n\r\n`_client.Connect( \"outlook.office365.com\", \"993\", SecureSocketOptions.StartTls);`\r\n\r\nis \r\n```\r\nMailKit.Net.Imap.ImapProtocolException-The IMAP server has unexpectedly disconnected.\r\nat MailKit.Net.Imap.ImapStream.ReadAhead(Int32 atleast, CancellationToken cancellationToken)\r\n   at MailKit.Net.Imap.ImapStream.ReadToken(String specials, CancellationToken cancellationToken)\r\n   at MailKit.Net.Imap.ImapStream.ReadToken(CancellationToken cancellationToken)\r\n   at MailKit.Net.Imap.ImapEngine.Connect(ImapStream stream, CancellationToken cancellationToken)\r\n   at MailKit.Net.Imap.ImapClient.Connect(String host, Int32 port, SecureSocketOptions options, CancellationToken cancellationToken)\r\n```\r\nI have also tried  `\"imaps://outlook.office365.com:993/?starttls=always\"`\r\n\r\n```\r\nException :System.Net.Sockets.SocketException-No such host is known\r\n at System.Net.Dns.GetAddrInfo(String name)\r\n   at System.Net.Dns.InternalGetHostByName(String hostName, Boolean includeIPv6)\r\n   at System.Net.Dns.GetHostAddresses(String hostNameOrAddress)\r\n   at MailKit.Net.Imap.ImapClient.Connect(String host, Int32 port, SecureSocketOptions options, CancellationToken cancellationToken)\r\n```\r\n\r\nI have also used `StartTlsWhenAvailable` on all the above with same results"
      },
      {
        "user": "jstedfast",
        "created_at": "2017-09-06T10:53:37Z",
        "body": "There's 2 ways that a IMAP/POP3/SMTP server can enable SSL/TLS for each protocol.\r\n\r\nWe'll call the first one \"SSL/TLS-wrap\". This is done on a \"high port\" (typically 465 for SMTP/S, 993 for IMAP/S and 995 for POP3/S). What happens here is that the socket is immediately wrapped in an SSL/TLS layer and so a client needs to enable SSL/TLS immediately after establishing a TCP/IP connection, before *any* commands are sent.\r\n\r\nThis mode is represented by `SecureSocketOptions.SslOnConnect`.\r\n\r\nThe second way is via the use of a `STARTTLS` command issued *after* the client connects and reads the server greeting and obtains the list of extensions supported by the server (of which `STARTTLS` is one).\r\n\r\n`SecureSocketOptions.StartTls` tells MailKit that `STARTTLS` is a *requirement* for the client and that if the server doesn't support the `STARTTLS` extension, it should immediately bail.\r\n\r\n`SecureSocketOptions.StartTlsWhenAvailable` is more lax. It will toggle into `STARTTLS` mode only if the server supports it, but if not, it will proceed in plain-text mode w/o error.\r\n\r\nHope that explanation clears things up."
      },
      {
        "user": "truane",
        "created_at": "2017-09-06T11:10:18Z",
        "body": "So let me get this straight even though I want to use TLS i need to set SecureSocketOptions.SslOnConnect and it will still use TLS?\r\n\r\ncan i still use  _client.SslProtocols = SslProtocols.Tls12;"
      },
      {
        "user": "jstedfast",
        "created_at": "2017-09-06T13:39:58Z",
        "body": "Yes and yes.\r\n"
      }
    ]
  },
  {
    "number": 558,
    "title": "Folder.Exists() return exception",
    "created_at": "2017-08-29T19:53:48Z",
    "closed_at": "2017-08-29T23:04:19Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/558",
    "body": "Hello,\r\n\r\nWhen I try to find if the Folder exists it's throws a exception.\r\nAccording with the documentation need to return False if not exists.\r\n\r\nExample:\r\n\r\n        Dim oFolder As ImapFolder\r\n        If (oIMAP.GetFolder(\"MinhaPasta\").Exists() = False) Then\r\n            Console.WriteLine(\"Não existe\")\r\n        Else\r\n            Console.WriteLine(\"Existe. Fazendo importação\")\r\n            ... another code ....\r\n        End If\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/558/comments",
    "author": "clsaad",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2017-08-29T23:04:19Z",
        "body": "There's no Exists() method, it is just a property. You are probably getting a runtime exception?"
      }
    ]
  },
  {
    "number": 552,
    "title": "How do you delete a message using IMAP client?",
    "created_at": "2017-08-18T19:53:23Z",
    "closed_at": "2017-08-18T20:28:50Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/552",
    "body": "I have a need to search for a message based on a unique subject and if i find it, delete the message. How do i accomplish the delete part? searching for messages was self-explanatory. I can't seem to find a way to delete the message once i've found it.\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/552/comments",
    "author": "kirk-quinbar",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2017-08-18T20:28:50Z",
        "body": "What you need to do is to set the `MessageFlags.Deleted` flag on the message via `folder.AddFlags (uid, MessageFlags.Deleted, true);`\r\n\r\nYou may also want to purge the folder of deleted messages using `folder.Expunge ();`"
      }
    ]
  },
  {
    "number": 545,
    "title": "No connection could be made because the target machine actively refused it",
    "created_at": "2017-07-28T07:01:26Z",
    "closed_at": "2017-07-28T17:15:14Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/545",
    "body": "I was trying to connect to the Outlook imap-server, but I got some weird exception I couldnt explain.\r\n\r\n> System.Net.Sockets.SocketException\r\n>   HResult=0x80004005\r\n>   Message = No connection could be made because the target machine actively refused it\r\n>   Source = System\r\n>   StackTrace:\r\n>    System.Net.Sockets.Socket.DoConnect(EndPoint endPointSnapshot, SocketAddress socketAddress)\r\n>    System.Net.Sockets.Socket.Connect(EndPoint remoteEP)\r\n>    System.Net.Sockets.Socket.Connect(IPAddress address, Int32 port)\r\n>    MailKit.Net.Imap.ImapClient.Connect(String host, Int32 port, SecureSocketOptions options, CancellationToken cancellationToken)\r\n>    MailKit.MailService.Connect(String host, Int32 port, Boolean useSsl, CancellationToken cancellationToken)\r\n>    MailBotGui.MB.Monitor_inbox() in C:\\Users\\USER\\documents\\visual studio 2017\\Projects\\MB\\MailBotGui\\MainForm.cs: Line126\r\n>    System.Threading.ThreadHelper.ThreadStart_Context(Object state)\r\n>    System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\r\n>    System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\r\n>    System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n>    System.Threading.ThreadHelper.ThreadStart()\r\n\r\nHere is the code where the exception showed up:\r\n\r\n```\r\nusing (var client = new ImapClient(new ProtocolLogger(\"imap.log\")))\r\n            {\r\n                // For demo-purposes, accept all SSL certificates\r\n                client.ServerCertificateValidationCallback = (s, c, h, e) => true;\r\n\r\n                client.Connect(\"imap-mail.outlook.com\", 993, true);\r\n\r\n                // Note: since we don't have an OAuth2 token, disable\r\n                // the XOAUTH2 authentication mechanism.\r\n                client.AuthenticationMechanisms.Remove(\"XOAUTH2\");\r\n\r\n                client.Authenticate(\"MyUsername\", \"MyPassword\");\r\n\r\n                // The Inbox folder is always available on all IMAP servers...\r\n                var inbox = client.Inbox;\r\n                inbox.Open(FolderAccess.ReadOnly);\r\n\r\n                MessageBox.Show(\"Total messages: \" + inbox.Count);\r\n                MessageBox.Show(\"Recent messages: \" + inbox.Recent);\r\n\r\n                for (int i = 0; i < inbox.Count; i++)\r\n                {\r\n                    var message = inbox.GetMessage(i);\r\n                    MessageBox.Show(\"Subject: \" + message.Subject);\r\n                }\r\n\r\n                client.Disconnect(true);\r\n            }\r\n```\r\n\r\nThis is the line where the exception was thrown:\r\n\r\n`client.Connect(\"imap-mail.outlook.com\", 993, true);`\r\n\r\nFor testing purposes I used the example code.\r\nThe log file that was created contains nothing. It is completly empty.\r\n\r\nI appreciate any help!\r\n\r\nThanks\r\nSimon",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/545/comments",
    "author": "ghost",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2017-07-28T17:15:14Z",
        "body": "The problem is that the server is not accepting connections. That's pretty much the gist of it.\r\n\r\nNothing can be done about it from the client side."
      },
      {
        "user": "abhiquiet",
        "created_at": "2019-04-10T08:44:24Z",
        "body": "Hello every one, \r\nI am trying to connect the pop3 port. \r\nI am able to telnet the server on the port, and also able to connect using the other client application, but when I try to connect using the code, I am getting the same error. \r\n**_No connection could be made because the target machine actively refused it [::ffff:10.123.2.123]:110_**\r\nIPs changed here in the message\r\nI do not know, why is it showing \"::ffff\" before the server IP.\r\nkindly let me know, if I am going wrong somewhere.\r\n\r\nAbhinav Aggarwal \r\n\r\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2019-04-10T11:24:48Z",
        "body": "What is happening is that `Socket.Connect(string host, int port)` is choosing to use the IPv6 IP address instead of the IPv4 address. Most likely your machine has an IPv6 and an IPv4 ethernet interfaces and Socket.Connect() is choosing the wrong one.\r\n\r\nCould you try installing the MailKit package from MyGet (link is on MailKit's main github page toward the top in the Downloads table). What I did a week or 2 ago was to rewrite the connect logic to use `Socket.Connect (IPAddress address, int port)` instead and to try each resolved IP address in sequence until one connects."
      },
      {
        "user": "CirrusShield",
        "created_at": "2019-04-10T16:27:44Z",
        "body": "Hello Jeffrey, same issue here, we downloaded the latest version (MailKit 2.1.3.17) from MyGet and it solved the problem.\r\n\r\nThanks!!\r\n\r\nCamille"
      },
      {
        "user": "jstedfast",
        "created_at": "2019-04-10T18:51:49Z",
        "body": "Awesome, thanks for confirming the fix! I'll try to make time to push an official release later this week (or this weekend).\r\n"
      },
      {
        "user": "ayodejii",
        "created_at": "2020-08-28T12:48:10Z",
        "body": "hi, I'm still having this issue. I am using the latest version of mailkit(version 2.8.0)\r\nThanks."
      },
      {
        "user": "ghost",
        "created_at": "2022-09-07T12:25:38Z",
        "body": "I'm having this issue with 3.4.0\r\nDowngrading tot 3.3.0 solved the issue for me."
      },
      {
        "user": "jstedfast",
        "created_at": "2022-09-07T14:05:30Z",
        "body": "Ah, I went back to `Socket.Connect (string host, int port)` in 3.4.0 to simplify code. Forgot I ever tried this before and it didn't work.\r\n\r\nStill, you'd think that this should work.\r\n\r\nYou should file a bug against the dotnet runtime so that they fix this. It's clearly a bug on their side."
      },
      {
        "user": "ekalchev",
        "created_at": "2022-09-08T07:56:49Z",
        "body": "@jstedfast do you plan to revert this change? I remember we had issues with that in the past."
      },
      {
        "user": "jstedfast",
        "created_at": "2022-09-08T12:21:39Z",
        "body": "Yes, I plan to revert it. I'm also planning a 3.4.1 release to coincide with a 3.4.1 MimeKit release that will be getting some fixes that I am working on for Microsoft (I'm actually getting a chance to work on MimeKit for Microsoft for a few days for once!)"
      },
      {
        "user": "jstedfast",
        "created_at": "2022-09-12T13:57:02Z",
        "body": "Reverted the change and just released MailKit v3.4.1 with the fix."
      }
    ]
  },
  {
    "number": 544,
    "title": "How to dispose attachments ?",
    "created_at": "2017-07-27T02:52:09Z",
    "closed_at": "2017-07-27T17:06:41Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/544",
    "body": "When I have sended email, I found the attachment is not disposed\r\nwhen I open the file,it shows \"it is being used by another process\".\r\nAnyboby can tell me how to dispose attachments?\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/544/comments",
    "author": "huaryliu",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2017-07-27T17:06:41Z",
        "body": "Dispose the stream that you set on the attachment."
      }
    ]
  },
  {
    "number": 540,
    "title": "I am getting this error \"The IMAP server has unexpectedly disconnected.\"",
    "created_at": "2017-07-19T12:26:52Z",
    "closed_at": "2017-07-19T13:58:18Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/540",
    "body": "Message : The IMAP server has unexpectedly disconnected.\r\n\r\nStacktrace:\r\n   at MailKit.Net.Imap.ImapStream.ReadAhead(Int32 atleast, CancellationToken cancellationToken) in D:\\Projects\\CancelCRM\\Cancel\\MailKit\\Net\\Imap\\ImapStream.cs:line 357\r\n   at MailKit.Net.Imap.ImapStream.ReadToken(String specials, CancellationToken cancellationToken) in D:\\Projects\\CRM\\Cancel\\MailKit\\Net\\Imap\\ImapStream.cs:line 737\r\n   at MailKit.Net.Imap.ImapStream.ReadToken(CancellationToken cancellationToken) in D:\\Projects\\CRM\\Cancel\\MailKit\\Net\\Imap\\ImapStream.cs:line 784\r\n   at MailKit.Net.Imap.ImapEngine.ReadToken(CancellationToken cancellationToken) in D:\\Projects\\CRM\\Cancel\\MailKit\\Net\\Imap\\ImapEngine.cs:line 730\r\n   at MailKit.Net.Imap.ImapCommand.Step() in D:\\Projects\\CRM\\Cancel\\MailKit\\Net\\Imap\\ImapCommand.cs:line 661\r\n   at MailKit.Net.Imap.ImapEngine.Iterate() in D:\\Projects\\CRM\\Cancel\\MailKit\\Net\\Imap\\ImapEngine.cs:line 1783\r\n   at MailKit.Net.Imap.ImapEngine.Wait(ImapCommand ic) in D:\\Projects\\CRM\\Cancel\\MailKit\\Net\\Imap\\ImapEngine.cs:line 1803\r\n   at MailKit.Net.Imap.ImapEngine.QueryCapabilities(CancellationToken cancellationToken) in D:\\Projects\\CRM\\Cancel\\MailKit\\Net\\Imap\\ImapEngine.cs:line 1862\r\n   at MailKit.Net.Imap.ImapClient.Authenticate(Encoding encoding, ICredentials credentials, CancellationToken cancellationToken) in D:\\Projects\\CRM\\Cancel\\MailKit\\Net\\Imap\\ImapClient.cs:line 1063\r\n   at MailKit.MailService.Authenticate(String userName, String password, CancellationToken cancellationToken) in D:\\Projects\\CRM\\Cancel\\MailKit\\MailService.cs:line 1045",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/540/comments",
    "author": "shahbazvora",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2017-07-19T13:58:18Z",
        "body": "This happens when the IMAP server drops the connection and can happen at any time if the server is overloaded and drops your connection, if you lose your connection to the internet momentarily, or a variety of other reasons.\r\n\r\nDuring the Authentication stage, it's also possible that the server is disconnecting you due to \"too many\" (or even just 1) bad login attempt.\r\n\r\nIf your server supports NTLM authentication, try disabling that using the following code:\r\n\r\n```csharp\r\nclient.AuthenticationMechanisms.Remove (\"NTLM\");\r\n```\r\n\r\nCall that before authenticating.\r\n\r\nSome users have reported a bug in MailKit's NTLM authentication logic and so I have disabled it in the latest code but I'm not sure if that made it into a release yet."
      }
    ]
  },
  {
    "number": 538,
    "title": "Change Subject of Mail in Folder",
    "created_at": "2017-07-12T14:46:22Z",
    "closed_at": "2017-07-12T15:00:04Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/538",
    "body": "Hi,\r\n\r\nis there a possibility to update the subject of an existing mail?\r\n\r\nI know I can set the subject e.g. \r\n```\r\nvar message = inbox.GetMessage(uid);\r\nmessage.Subject = \"new subject text\";\r\n```\r\n\r\nHowever, is it is possible to save this mail, without creating a new mail?\r\n\r\nThanks in advance",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/538/comments",
    "author": "geisi93",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2017-07-12T15:00:04Z",
        "body": "No, that's not possible."
      }
    ]
  },
  {
    "number": 534,
    "title": "question: How can I tell whether a protocol logger is attached?",
    "created_at": "2017-07-03T14:02:01Z",
    "closed_at": "2017-07-03T14:49:24Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/534",
    "body": "I am reusing an instance of `SmtpClient` and passing it around the app. When logging I need to know if a protocol logger is attached.\r\n\r\nI checked the source, and figured this out:\r\n\r\n    var loggerIsAttached = !(client.ProtocolLogger is NullProtocolLogger);\r\n\r\nBut this isn't documented, so please just let me know if I can safely depend on this behavior?\r\n\r\n---\r\nAlso, is it possible to get the underlying stream? `ProtocolLogger ` doesn't expose it. If you're passing the client around, and you're not near the original callsite, then you won't have a reference to the `MemoryStream`. So would be nice to be able to get it from the client or logger or somewhere?",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/534/comments",
    "author": "grokky1",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2017-07-03T14:49:24Z",
        "body": "Yes, that will work. It's not possible to get the stream from a ProtocolLogger, but you could implement a custom IProtocolLogger that lets you get at it. I mostly just included the default ProtocolLogger class to illustrate how to use it and for the simple debugging cases."
      },
      {
        "user": "lonix1",
        "created_at": "2019-07-16T13:18:29Z",
        "body": "Creating a custom ProtocolLogger just to expose (change private to public) the stream is like reinventing the wheel because the default one is already there and works nicely.\r\n\r\nExposing the stream is very useful for the reasons mentioned by the OP."
      },
      {
        "user": "jstedfast",
        "created_at": "2019-07-16T15:32:26Z",
        "body": "You don't need to reinvent the wheel, just do this:\r\n\r\n```csharp\r\nclass MyProtocolLogger : ProtocolLogger\r\n{\r\n    public MyProtocolLogger (Stream stream) : base (stream)\r\n    {\r\n        MyStream = stream;\r\n    }\r\n\r\n    public Stream MyStream {\r\n        get; private set;\r\n    }\r\n}\r\n```"
      },
      {
        "user": "lonix1",
        "created_at": "2019-07-17T06:17:02Z",
        "body": "I think that's part of what the OP was trying to say, passing in the stream means we need to keep a refrence to it in the container, or something like that (which is what I do).\r\n\r\nWhereas if the underlying logger exposed it then we wouldn't need to, and could do\r\n\r\n````cs\r\npublic MySmtpClient() : base(new ProtocolLogger(new MemoryStream(), leaveOpen:false)) {\r\n````\r\n\r\nand if we need to inspect the logs, we could do\r\n\r\n````cs\r\nsmtpClient.ProtocolLogger.Stream\r\n````"
      }
    ]
  },
  {
    "number": 533,
    "title": "Question: How to get the message headers (like X-....)",
    "created_at": "2017-07-03T08:24:01Z",
    "closed_at": "2017-07-03T13:42:23Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/533",
    "body": "Hi,\r\n\r\nI now use below code to get MessageSummary items to get information about the message. I also want to retrieve the headers. Is it possible to do it somehow in the same call or do I need to use the client.Inbox.GetHeaders(result[0].Index); method on each message?\r\n\r\n```\r\nclient.Inbox.Open(FolderAccess.ReadOnly);\r\n\r\nconst MessageSummaryItems items =\r\n\tMessageSummaryItems.UniqueId |\r\n\tMessageSummaryItems.Flags |\r\n\tMessageSummaryItems.Envelope |\r\n\tMessageSummaryItems.Body |\r\n\tMessageSummaryItems.Size;\r\n\r\nvar fields = new HashSet<HeaderId> {HeaderId.Importance};\r\nvar result = client.Inbox.Count == 0\r\n\t? new IMessageSummary[0]\r\n\t: client.Inbox.Fetch(0, -1, items, fields);\r\n\r\n//var test = client.Inbox.GetHeaders(result[0].Index);\r\n\r\nclient.Inbox.Close();\r\n```",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/533/comments",
    "author": "Sicos1977",
    "comments": [
      {
        "user": "Sicos1977",
        "created_at": "2017-07-03T10:26:05Z",
        "body": "And is it also possible to check if a message has attachments without retrieving the entire message?"
      },
      {
        "user": "jstedfast",
        "created_at": "2017-07-03T13:42:23Z",
        "body": "The `Fetch()` API is really designed to just get back a specified list of named headers and not the full header block of each message. So right now, you'll have to use `GetHeaders()` *unless* you can specify which X- headers you want:\r\n\r\n```csharp\r\nvar fields = new HashSet<string> ({ \"X-Mailer\", \"X-Priority\", \"X-Loop\" });\r\nvar result = folder.Fetch (0, -1, items, fields);\r\n```\r\n\r\nAs far as determining if a message has attachments or not, what you can do is include `MessageSummaryItems.BodyStructure` and then check the `IMessageSummary`'s `Attachments` property like so:\r\n\r\n```csharp\r\nif (item.Attachments.Any ())\r\n```"
      },
      {
        "user": "Sicos1977",
        "created_at": "2017-07-03T16:34:22Z",
        "body": "Thanks"
      },
      {
        "user": "ravikumarjella",
        "created_at": "2018-06-11T15:03:27Z",
        "body": "HI \r\ni followed the same but i am getting headers as null. this is my code : \r\n  var headerFields = new HashSet<string> { \"X-MS-Has-Attach\", \"X-Mailer\", \"X-Priority\", \"X-Loop\" };\r\nvar result = folder.Fetch (0, -1, items, headerFields );"
      }
    ]
  },
  {
    "number": 531,
    "title": "No compatible authentication mechanisms found",
    "created_at": "2017-06-26T14:25:52Z",
    "closed_at": "2017-06-26T16:29:54Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/531",
    "body": "I keep getting \"System.NotSupportedException: No compatible authentication mechanisms found\" when trying to send e-mail out. \r\n\r\nI have tried adding one by one following Authenication mechanisms, but no difference \r\n client.AuthenticationMechanisms.Add(\"AuthLogin\");\r\n client.AuthenticationMechanisms.Add(\"AuthPlain\");\r\n client.AuthenticationMechanisms.Add(\"AuthNTLM\");\r\n client.AuthenticationMechanisms.Add(\"AuthAuto\");\r\n\r\n\r\nfor the sending I am using same code as in example, just replaced server, user, pwd to my own\r\n\r\n\r\nusing (var client = new SmtpClient ()) {\r\n\t\t\t\t// For demo-purposes, accept all SSL certificates (in case the server supports STARTTLS)\r\n\t\t\t\tclient.ServerCertificateValidationCallback = (s,c,h,e) => true;\r\n\r\n\t\t\t\tclient.Connect (\"smtp.friends.com\", 587, false);\r\n\r\n\t\t\t\t// Note: since we don't have an OAuth2 token, disable\r\n\t\t\t\t// the XOAUTH2 authentication mechanism.\r\n\t\t\t\tclient.AuthenticationMechanisms.Remove (\"XOAUTH2\");\r\n\r\n\t\t\t\t// Note: only needed if the SMTP server requires authentication\r\n\t\t\t\tclient.Authenticate (\"joey\", \"password\");\r\n\r\n\t\t\t\tclient.Send (message);\r\n\t\t\t\tclient.Disconnect (true);\r\n\t\t\t}\r\n\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/531/comments",
    "author": "raigol",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2017-06-26T16:29:54Z",
        "body": "And what authentication mechanisms are contained within the AuthenticationMechanisms hash set after you call Connect()?\r\n\r\nNone?\r\n\r\nIf none, then the server doesn't support authentication."
      },
      {
        "user": "jstedfast",
        "created_at": "2017-06-26T16:32:38Z",
        "body": "Also: \"AuthLogin\", \"AuthPlain\", etc. do not match any of the names that need to be used, so of course they don't work :)"
      }
    ]
  },
  {
    "number": 528,
    "title": ".net core bad cyrillic symbols",
    "created_at": "2017-06-23T13:36:05Z",
    "closed_at": "2017-06-23T13:42:52Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/528",
    "body": "Hi!\r\nI am trying to retrieve messages with Pop3Client. In .net core console application there is a problem with cyrillic symbols in MimeMessage objects. Results of last 10 message subjects in console (with Console.OutputEncoding = Encoding.Unicode;):\r\n\r\n> Subject: ðÒÏÓØÂÁ!\r\n> Subject: ïÔÐÒÁ×ËÁ: ëÏÎÃÅÐÃÉÑ E3.Hub 2.0.pptx\r\n> Subject: FW: E3.Series × Wiki. æÏÒÕÍ E3.Series.\r\n> Subject: ðÅÒÅÈÏÄÎÉË OTG c USB ÎÁ micro USB\r\n> Subject: ðÅÞÁÌØÎÁÑ ÄÁÔÁ\r\n> Subject: E3.Series × Wiki. æÏÒÕÍ E3.Series.\r\n> Subject: [Zuken E3 GmbH] ZDE551435 Answer to [Panel Sheets (errors)]\r\n> Subject: Анонс DotNext 2017 Moscow\r\n> Subject: RE: E3.series файл лицензии до 19 июня\r\n> Subject: ïÔÐÕÓË\r\n\r\nThe same code result data in .net framework 4.5.2 console app:\r\n\r\n> Subject: Просьба!\r\n> Subject: Отправка: Концепция E3.Hub 2.0.pptx\r\n> Subject: FW: E3.Series в Wiki. Форум E3.Series.\r\n> Subject: Переходник OTG c USB на micro USB\r\n> Subject: Печальная дата\r\n> Subject: E3.Series в Wiki. Форум E3.Series.\r\n> Subject: [Zuken E3 GmbH] ZDE551435 Answer to [Panel Sheets (errors)]\r\n> Subject: Анонс DotNext 2017 Moscow\r\n> Subject: RE: E3.series файл лицензии до 19 июня\r\n> Subject: Отпуск\r\n\r\n\r\nMethod code is the same:\r\n\r\n```csharp\r\nusing (var client = new Pop3Client(new ProtocolLogger(\"pop3.log\")))\r\n            {\r\n                client.ServerCertificateValidationCallback = (s, c, h, e) => true;\r\n\r\n                client.Connect(\"webhost.pointcad.ru\", 0, true);\r\n                client.AuthenticationMechanisms.Remove(\"XOAUTH2\");\r\n\r\n                client.Authenticate(\"somedomain/somelogin\", \"somepassword\");\r\n\r\n                for (int i = 0; i < 10; i++) \r\n                {\r\n                    var message = client.GetMessage(client.Count - i - 1);\r\n                    \r\n                    Console.WriteLine(\"Subject: {0}\", message.Subject);\r\n                }\r\n                client.Disconnect(true);\r\n            }\r\n```\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/528/comments",
    "author": "bloodyroll",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2017-06-23T13:42:52Z",
        "body": "This suggests the problem is that your .net core installation does not include the proper text encodings. There's nothing MimeKit can do about that.\r\n\r\nTo test my theory, write a simple test program that tries to get a cyrilic encoding such as koi8-r:\r\n\r\n```csharp\r\nvar encoding = System.Text.Encoding.GetEncoding (\"koi8-r\");\r\n```\r\n\r\nMy bet is that you'll get an exception."
      },
      {
        "user": "bloodyroll",
        "created_at": "2017-06-24T09:14:07Z",
        "body": "thank you for help. Need to install System.Text.Encoding.CodePages package and add:\r\n```csharp\r\nEncoding.RegisterProvider(CodePagesEncodingProvider.Instance);"
      },
      {
        "user": "jstedfast",
        "created_at": "2017-06-24T11:24:18Z",
        "body": "Thanks for the update, that will likely be helpful to others that run into this issue on .NET Core :)"
      }
    ]
  },
  {
    "number": 525,
    "title": "Unable to code Connect Method (Socket, String, Int32, SecureSocketOptions, CancellationToken)",
    "created_at": "2017-06-15T20:01:52Z",
    "closed_at": "2017-06-15T20:08:16Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/525",
    "body": "Hello,\r\n\r\nIf I try to use this code to connect an Imap client:\r\n```csharp\r\nSocket tcpSocket = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);\r\nclient.ServerCertificateValidationCallback = (s, c, h, e) => true;\r\nclient.Connect(tcpSocket, mailbox.Host, mailbox.ServerPortNumber, mailbox.UseSsl);\r\nclient.AuthenticationMechanisms.Remove(\"XOAUTH2\");\r\nclient.Authenticate(mailbox.User, mailbox.Password);\r\nvar inbox = client.Inbox;\r\ninbox.Open(FolderAccess.ReadOnly);\r\n```\r\n\r\n\r\nThe **tcpSocket** in the client.Connect statement, gives the error: **Argument 1: cannot convert from 'System.Net.Sockets.Socket' to 'string'**\r\n\r\nI think I am coding this in the correct way, but I am not sure of why the intellisense will not allow me to do that.\r\n\r\nI expected that it would be accepted since the first parameter of the Connect method is typed as a System.Net.Sockets.Socket.\r\n\r\nAny help that you can provide to resolve this issue would be gratefully appreciated.\r\n\r\nThanks,\r\nTony",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/525/comments",
    "author": "Carneno",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2017-06-15T20:05:48Z",
        "body": "Please provide the exact exception message and the StackTrace value. Thanks"
      },
      {
        "user": "jstedfast",
        "created_at": "2017-06-15T20:08:16Z",
        "body": "Oh, I bet the problem is that you are using a `bool` value for `useSsl` and there is no `Connect` method that takes a `Socket` and a `bool` for `useSsl`. You need to replace your `mailbox.UseSsl` with a `SecureSocketOptions` value."
      },
      {
        "user": "Carneno",
        "created_at": "2017-06-15T20:22:59Z",
        "body": "Jeffrey,\r\n\r\nThanks for your quick response and help.\r\n\r\nYes, the problem is I was using a bool value for useSsl.\r\n\r\nIt works now.\r\n\r\nTony"
      }
    ]
  },
  {
    "number": 524,
    "title": "Not able to send an email through office365 ",
    "created_at": "2017-06-14T13:32:29Z",
    "closed_at": "2017-06-14T13:51:50Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/524",
    "body": "Hi there,\r\n\r\nI am trying to send an email through office 365 through mailkit (.net core 1.1) but it is giving me an authentication failed error.\r\n\r\nError: MailKit.Security.AuthenticationException: Authentication failed.\r\n   at MailKit.Net.Smtp.SmtpClient.Authenticate(Encoding encoding, ICredentials credentials, CancellationToken cancellationToken)\r\n   at MailKit.MailService.Authenticate(String userName, String password, CancellationToken cancellationToken)\r\n   at ConsoleApp1.Program.Main(String[] args) in C:\\Users\\kcauc\\OneDrive\\Documents\\Visual Studio 2017\\Projects\\ConsoleApp1\\ConsoleApp1\\Program.cs\r\n\r\nHere is my code: \r\n`                string Subject = \"Hello World - Sending email using ASP.NET Core 1.1\";\r\n                string BodyContent = \"test.\";\r\n\r\n                //Smtp Server \r\n                string SmtpServer = \"smtp.office365.com\";\r\n                //Smtp Port Number \r\n                int SmtpPortNumber = 587;\r\n\r\n                var mimeMessage = new MimeMessage();\r\n                mimeMessage.From.Add(new MailboxAddress(FromAddress));\r\n                mimeMessage.To.Add(new MailboxAddress(ToAddress));\r\n                mimeMessage.Subject = Subject;\r\n                mimeMessage.Body = new TextPart(\"plain\")\r\n                {\r\n                    Text = BodyContent\r\n\r\n                };\r\n\r\n                using (var client = new SmtpClient())\r\n                {\r\n\r\n                    client.Connect(SmtpServer, SmtpPortNumber, false);\r\n                    // Note: only needed if the SMTP server requires authentication \r\n                    // Error 5.5.1 Authentication  \r\n                    client.Authenticate(FromAddress, GetPassword());\r\n                    client.Send(mimeMessage);\r\n                    Console.WriteLine(\"The mail has been sent successfully !!\");\r\n                    Console.ReadLine();\r\n                    client.Disconnect(true);\r\n\r\n                }`\r\n\r\nWhen switching to .Net Framework 4.5, using System.Net.Mail, it works fine.\r\n\r\nBecause of this, I assume the issue is coming from MailKit.\r\n\r\nAny help?\r\n\r\nThanks\r\n\r\nP.S. Yes, the credentials are ok.",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/524/comments",
    "author": "kpcauchi",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2017-06-14T13:51:50Z",
        "body": "Already fixed yesterday. Update your MailKit source code and try again."
      },
      {
        "user": "jstedfast",
        "created_at": "2017-06-14T14:08:57Z",
        "body": "Actually, might not be the same issue. The issue I fixed emitted SmtpCommandException rather than AuthenticationException due to a bug in authmech fallback.\r\n\r\nIf you want this bug to be fixed, send me a protocol log (jestedfa@microsoft.com). Without it, there's nothing I can do."
      },
      {
        "user": "kpcauchi",
        "created_at": "2017-06-14T14:20:19Z",
        "body": "Actually I just found out it works when I do  `client.AuthenticationMechanisms.Remove(\"XOAUTH2\");` before the authenticate.. \r\n\r\nmaybe that's a hint?"
      },
      {
        "user": "jstedfast",
        "created_at": "2017-06-14T14:21:48Z",
        "body": "Yea, you need to do that on servers that support oauth2 unless you are using an oath token."
      }
    ]
  },
  {
    "number": 520,
    "title": "Skipping certificate validation altogether",
    "created_at": "2017-06-09T22:58:44Z",
    "closed_at": "2017-06-10T02:08:04Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/520",
    "body": "I have an application that sits behind a firewall with no internet access. When I connect to an IMAPS server that has a certificate issued by VeriSign, MailKit will go and try to retrieve certificate revocation information (CRL or OCSP), but it will obviously fail.\r\nI use this method to ignore certificate errors:\r\n\r\n`client.ServerCertificateValidationCallback = (sender, certificate, chain, sslPolicyErrors) =>\r\n            {\r\n                return true;\r\n            };`\r\n\r\nWhile this will indeed prevent exceptions caused by lack of CRL/OCSP access, there's a major issue with the approach. This callback only processes the _results_ of certificate validation, thus making me wait for the timeout while the server tries to retrieve revocation data. It is around 1 minute by default, which is a real pain to wait at every connection attempt.\r\n\r\nIs there a way to tell MailKit to skip certificate validation altogether, without even trying to do anything (especially going online)?",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/520/comments",
    "author": "dkekesi",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2017-06-10T02:08:04Z",
        "body": "Is there a way to tell SslStream to skip validation? I haven't seen one. So.... no."
      },
      {
        "user": "jstedfast",
        "created_at": "2017-06-10T02:21:47Z",
        "body": "Found a way."
      },
      {
        "user": "dkekesi",
        "created_at": "2017-06-10T11:45:12Z",
        "body": "Wow, that was fast. Thanks a million. This is **_EXACTLY_** why MailKit/MimeKit is the best. Period."
      },
      {
        "user": "dkekesi",
        "created_at": "2017-06-30T12:49:41Z",
        "body": "Do you plan to make a new release that contains this feature in the near future? Thanks."
      },
      {
        "user": "jstedfast",
        "created_at": "2017-06-30T14:14:27Z",
        "body": "Yes. I'm hoping to make a release this weekend but I'm waiting on some feedback on some patches for NTLM fixes."
      }
    ]
  },
  {
    "number": 518,
    "title": "Imap client.connect not giving exception when using bad port number",
    "created_at": "2017-06-07T14:23:27Z",
    "closed_at": "2017-06-07T15:00:01Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/518",
    "body": "\r\nHello,\r\n\r\nWhen I use this to connect to an IMAP server using SSL and port 993, it works fine.\r\n`try\r\n               {\r\n                    Mailbox mailbox = db.Mailboxes.Find(mbid);\r\n                    int mailboxcount = db.Mailboxes.Count();\r\n                    using (var client = new ImapClient())\r\n                    {\r\n                         client.ServerCertificateValidationCallback = (s, c, h, e) => true;\r\n                         client.Connect(mailbox.Host, mailbox.ServerPortNumber, mailbox.UseSsl);\r\n                         client.AuthenticationMechanisms.Remove(\"XOAUTH2\");\r\n                         client.Authenticate(mailbox.User, mailbox.Password);\r\n                         var inbox = client.Inbox;\r\n                         inbox.Open(FolderAccess.ReadOnly);\r\n`\r\n\r\nIf I change the port number to something like 994, it never gets to the **client.AuthenticationMechanisms.Remove(\"XOAUTH2\");** statement.  It does not execute any of the exception catches.  It just exits the method completely.\r\n\r\nI used the Visual Studio 2017 debugger and it makes it to the **client.Connect(mailbox.Host, mailbox.ServerPortNumber, mailbox.UseSsl);** line, but when I continue execution, it never gives any kind of error message.\r\n\r\nI tried it in IE 11 and Mozilla Firefox.\r\n\r\nIs there a way to catch an exception message for this error?\r\n\r\nThanks,\r\nTony",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/518/comments",
    "author": "Carneno",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2017-06-07T15:00:01Z",
        "body": "Why would you try to connect to port 994?\r\n\r\nAnd yes, it will eventually throw an exception. Same as Socket.Connect() will. It just takes several minutes because of the standard TCP timeout."
      },
      {
        "user": "Carneno",
        "created_at": "2017-06-07T15:15:03Z",
        "body": "Jeffrey,\r\n\r\nThanks for your help.\r\n\r\nI myself would not try to connect to port 994, because I know that the correct port to use is 993, but what if one of my clients puts in the wrong port number by mistake when setting up their mailbox?\r\n\r\nI want to be able to inform them of what the problem is.\r\n\r\nIn my testing I did not wait for the timeout to occur.  I just tested it again and waited for the timeout and it did give an error message.\r\n\r\nThanks,\r\nTony"
      }
    ]
  },
  {
    "number": 517,
    "title": "MoveToAsync and MoveTo inconsistency for MessageExpunged ",
    "created_at": "2017-06-06T10:39:57Z",
    "closed_at": "2017-06-06T12:45:44Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/517",
    "body": "Not an issue. My bad. Please delete.\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/517/comments",
    "author": "ekalchev",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2017-06-06T12:45:44Z",
        "body": "MoveToAsync simply calls MoveTo, so there's no difference.\r\n\r\nIf the event is emitted by the IMAP server, MailKit will emit it as well. If it doesn't, MailKit won't either."
      }
    ]
  },
  {
    "number": 510,
    "title": "Email always comes from client.Authenticate address and not emailMessage.From.Add address",
    "created_at": "2017-05-15T19:48:57Z",
    "closed_at": "2017-05-16T00:45:48Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/510",
    "body": "I am using .NET core trying to send an email.  The email sends but the From address is the one I use to login and not the one I specify in creating the email.  In the scenario below the email comes from example@gmail.com instead of myaddress@gmail.com.\r\n\r\n```csharp\r\npublic class Email\r\n    {\r\n        public string toEmailAddress {get; set;}\r\n        public string fromEmailAddress {get; set;}\r\n        public string subject {get; set;}\r\n        public string message {get; set;}\r\n        public string name {get; set;}\r\n}\r\npublic Email(string toEmailAddress, string fromEmailAddress, string subject, string message)\r\n        {\r\n            this.toEmailAddress = toEmailAddress;\r\n            this.fromEmailAddress = fromEmailAddress;\r\n            this.subject = subject;\r\n            this.message = message;\r\n        }\r\n```\r\n\r\n```csharp\r\nEmail email = new Email(\"myfriend@gmail.com\", \"myaddress@gmail.com\", \"this is subject\", \"this is message\");\r\n```\r\n\r\n```csharp\r\npublic async Task SendEmailAsync(Email email)\r\n        {\r\n            var emailMessage = new MimeMessage();        \r\n            emailMessage.From.Add(new MailboxAddress(email.name, email.fromEmailAddress));\r\n            emailMessage.To.Add(new MailboxAddress(\"\", email.toEmailAddress));\r\n            emailMessage.Subject = email.subject;\r\n            emailMessage.Body = new TextPart(\"plain\") { Text = email.message };\r\n \r\n            using (var client = new SmtpClient())\r\n            {\r\n                await client.ConnectAsync(\"smtp.gmail.com\", 465, SecureSocketOptions.Auto).ConfigureAwait(true);\r\n                client.Authenticate (\"example@gmail.com\", \"password\");\r\n                await client.SendAsync(emailMessage).ConfigureAwait(true);\r\n                await client.DisconnectAsync(true).ConfigureAwait(true);\r\n            }\r\n        }\r\n```\r\n\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/510/comments",
    "author": "ghost",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2017-05-16T00:45:48Z",
        "body": "Gmail is what is replacing the email address in order to prevent spoofing. This isn't something that MailKit has any control over."
      }
    ]
  },
  {
    "number": 509,
    "title": "The address of the sender",
    "created_at": "2017-05-14T10:25:53Z",
    "closed_at": "2017-05-15T00:24:25Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/509",
    "body": "how can I get the sender's address? (from) and compare it with the desired email",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/509/comments",
    "author": "bebravebaby",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2017-05-15T00:24:25Z",
        "body": "Have you checked the From property of the MimeMessage?"
      },
      {
        "user": "bebravebaby",
        "created_at": "2017-05-15T00:34:36Z",
        "body": "\r\nI got an InternetAddress, but I can't get email form email@domen.com"
      },
      {
        "user": "jstedfast",
        "created_at": "2017-05-15T10:37:06Z",
        "body": "InternetAddress is a base class. You need to cast to a MailboxAddress and then use the Address property "
      }
    ]
  },
  {
    "number": 508,
    "title": "MailboxAddress.TryParse",
    "created_at": "2017-05-12T12:56:58Z",
    "closed_at": "2017-05-16T13:18:41Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/508",
    "body": "MailboxAddress address;\r\nMethod MailboxAddress.TryParse(\"-\", out address) return true. Also passing ParserOptions as additional argument doesn't help either.\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/508/comments",
    "author": "StMilan",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2017-05-15T00:29:00Z",
        "body": "I would argue that this is necessary behavior because the parser needs to be forgiving in what it accepts."
      },
      {
        "user": "jstedfast",
        "created_at": "2017-05-15T00:30:14Z",
        "body": "What is the scenario in which you are actually feeding the parser this value expecting it not to work?"
      }
    ]
  },
  {
    "number": 505,
    "title": "Is it OK to connect with Gmail using SMTP to send email while already connected using IMAP?",
    "created_at": "2017-05-04T13:10:20Z",
    "closed_at": "2017-05-04T15:59:08Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/505",
    "body": "This is more of a general question, but I am parsing emails using IMAP for a C# program. I also want to send out some notification emails using SMTP while I am connected to Gmail using IMAP.\r\nI read that IMAP is not useful for sending emails.\r\n\r\nI was wondering if this is OK. I did try it, and it works fine, just something lingering. \r\n\r\n    `  using (var imapClient = new ImapClient())\r\n       {\r\n\t      //connect with IMAP and do stuff..\r\n\r\n\t       using (SmtpClient smtpClient = new SmtpClient())\r\n\t      {\r\n\t\t  //while already connected with IMAP, connect again to send emails\r\n\t\t  smtpClient.Disconnect(true);\r\n\t      }\r\n\t         imapClient.Disconnect(true);\r\n        }`",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/505/comments",
    "author": "maddisn",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2017-05-04T15:59:08Z",
        "body": "Yes. Of course. Why wouldn't it be?"
      },
      {
        "user": "maddisn",
        "created_at": "2017-05-05T14:46:15Z",
        "body": "Thanks, Is there anything that can go bad if you do not disconnect from either the SMTP / IMAP client?"
      },
      {
        "user": "jstedfast",
        "created_at": "2017-05-05T14:55:49Z",
        "body": "nope"
      }
    ]
  },
  {
    "number": 504,
    "title": "is there any documentation for running mailkit on linux based server??",
    "created_at": "2017-05-04T12:44:10Z",
    "closed_at": "2017-05-04T12:57:47Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/504",
    "body": "documentation for running mailkit on linux based server.",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/504/comments",
    "author": "anshulchhabra1991",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2017-05-04T12:57:47Z",
        "body": "Yea, read the documentation for Mono or for dotnet core. MailKit doesn't need any specific linux documentation because there's nothing linux specific at all about it."
      }
    ]
  },
  {
    "number": 502,
    "title": "Unable to write data to the transport connection Exception with Singleton Client",
    "created_at": "2017-05-03T06:46:33Z",
    "closed_at": "2017-05-03T10:17:05Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/502",
    "body": "Hey guys,\r\n\r\nI'm happy using MailKit you did a great job with it.\r\nThere is only one problem that I'm facing when I try to keep the connection open.\r\nI create a SMTP Client Singleton and want to use it as long as the application is running.\r\n```\r\n            _smtpClient = new SmtpClient(new MailProtocolLogger(loggerFactory));\r\n            _smtpClient.Timeout = 60000;\r\n            _smtpClient.AuthenticationMechanisms.Remove(\"XOAUTH2\");\r\n            _smtpClient.ServerCertificateValidationCallback = validateCertificate;\r\n```\r\n\r\n```\r\n            lock (_smtpClient.SyncRoot)\r\n            {\r\n                if (!_smtpClient.IsConnected)\r\n                {\r\n                    try\r\n                    {                    \r\n                        _smtpClient.Connect(_smtpHost, _port, SecureSocketOptions.Auto);                    \r\n                    }\r\n                    catch (Exception ex)\r\n                    {\r\n                        _logger.LogError(10421011, ex, \"Unable to connect to SMTP Client.\");\r\n                        return new EnqueueResult(false, \"Unable to connect to SMTP Client.\");\r\n                    }\r\n                }\r\n            }\r\n\r\n            MimeMessage mimeMessage = new MimeMessage();\r\n\r\n            try\r\n            {\r\n                mimeMessage = (MimeMessage) mailModel.MailMessage;\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                _logger.LogError(10421007, ex, $\"Unable to parse mailMessage to mimeMessage.\");\r\n                //MailMessageQueue.DeadMessagesObservableCollection.Add(mailModel);\r\n                return new EnqueueResult(false, ex.Message);\r\n            }\r\n\r\n            try\r\n            {\r\n                lock (_smtpClient.SyncRoot)\r\n                {\r\n                    _smtpClient.Send(mimeMessage);\r\n                }\r\n\r\n                _logger.LogInformation(10421002, $\"Sent email with subject {mailModel.MailMessage.Subject} successfully to {string.Join(\",\", mailModel.MailMessage.To)}.\");\r\n\r\n                return new EnqueueResult(true);\r\n            }\r\n            catch (ServiceNotConnectedException notConnected)\r\n            {\r\n                _logger.LogCritical(10421010, notConnected, $\"Cannot send mail because the client is not connected to the server.\");\r\n                //MailMessageQueue.DeadMessagesObservableCollection.Add(mailModel);\r\n                return new EnqueueResult(false, notConnected.Message);\r\n            }\r\n            catch (SmtpCommandException stmpCommandEx)\r\n            {\r\n                _logger.LogWarning(10421007, stmpCommandEx, \"SmtpCommandException occurred while trying to send mail.\");\r\n                return new EnqueueResult(false, stmpCommandEx.Message);\r\n            }\r\n            catch (IOException ioEx)\r\n            {\r\n                _logger.LogWarning(10421007, ioEx, \"IOException occurred while trying to send mail.\");\r\n                return new EnqueueResult(false, ioEx.Message);\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                _logger.LogCritical(10421003, ex, $\"Error sending email with smtp host with subject {mailModel.MailMessage.Subject} to {string.Join(\",\", mailModel.MailMessage.To)}.\");\r\n                _logger.LogInformation(10421006, \"Shifting mail message to dead letter queue\");\r\n                //MailMessageQueue.DeadMessagesObservableCollection.Add(mailModel);\r\n                return new EnqueueResult(false, ex.Message);\r\n            }\r\n        }\r\n```\r\n\r\nEvery about 15 minutes (it's not always the same) I get the following exception:\r\n```\r\nException:System.IO.IOException: Unable to write data to the transport connection: An existing connection was forcibly closed by the remote host. ---> System.Net.Sockets.SocketException: An existing connection was forcibly closed by the remote host\r\n```\r\n\r\nCan the SMTP Client be used this way or is there a better recommendation?\r\n\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/502/comments",
    "author": "senj",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2017-05-03T10:17:05Z",
        "body": "It can be used that way, but you'll need to call `client.NoOp()` every few minutes to keep the connection alive. Just be warned that even then, the connection is not *guaranteed* to stay alive as the server can drop you whenever it wants."
      }
    ]
  },
  {
    "number": 493,
    "title": "Cancelling Search or GetMessage causes client to disconnect",
    "created_at": "2017-04-18T19:38:14Z",
    "closed_at": "2017-04-18T21:43:01Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/493",
    "body": "I don't know if it's a bug or just me not grasping the usage of the CancellationToken correctly, since I couldn't find an explanation about it. I'm trying to make a simple mail client, so to show messages in a folder using the `ImapService` I do the following:\r\n\r\n\r\n    static CancellationTokenSource _messagesTaskCts;\r\n    IMailFolder _sourceFolder;\r\n\r\n    async Task<ObservableCollection<MailMessage>> GetMessages()\r\n    {\r\n        try { _messagesTaskCts?.Cancel(); }\r\n        catch (ObjectDisposedException) { /* The implicated task already finished */ }\r\n        \r\n        using (_messagesTaskCts = new CancellationTokenSource())\r\n        {\r\n            var cToken = _messagesTaskCts.Token;\r\n            var messages = new ObservableCollection<MailMessage>();\r\n\r\n            await _sourceFolder.OpenAsync(FolderAccess.ReadOnly).ConfigureAwait(false);\r\n            var uids = (await _sourceFolder.SearchAsync(SearchQuery.All, cToken));\r\n\r\n            foreach (var uid in uids)\r\n            {\r\n                var msg = await _sourceFolder.GetMessageAsync(uid, cToken);\r\n                messages.Add(new MailMessage(msg));\r\n            }\r\n\r\n            return messages;\r\n        }\r\n    }\r\n\r\n\r\nHowever, if one folder is currently trying to retrieve its messages and I want to start retrieving messages from another folder (i.e. cancel current task and start new) I end up getting a `ServiceNotConnectedException.cs` telling me that the client has been disconnected.\r\n\r\nI expected that cancelling the token source would simply terminate the operation (be it `_sourceFolder.SearchAsync` or `_sourceFolder.GetMessageAsync`), but maybe that's not how I'm supposed to use the token?\r\n\r\nUsing MailKit v1.14.2 from NuGet",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/493/comments",
    "author": "Xerillio",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2017-04-18T20:21:36Z",
        "body": "The way that cancellation works is that if a command is already in progress, it has to drop the connection (there's no other way).\r\n\r\nThe convention for doing cancellation should probably look a bit like this from your perspective:\r\n\r\n```csharp\r\ntry {\r\n    client.DoSomethingAsync (..., cancellationToken);\r\n} catch (OperationCanceledException) {\r\n    if (!client.IsConnected) {\r\n        Reconnect ();\r\n    }\r\n}\r\n```\r\n\r\nI should note that the `ImapEngine` always checks cancelation state *before* issuing the command as well, so it's possible that the connection is not dropped if the command hasn't been sent yet, so you should always check `client.IsConnected`."
      },
      {
        "user": "Xerillio",
        "created_at": "2017-04-18T21:10:53Z",
        "body": "Thanks for the quick response, that makes sense now. It also forces me to think about how to handle retrying any task that is using the client when it loses connection."
      },
      {
        "user": "jstedfast",
        "created_at": "2017-04-18T21:43:01Z",
        "body": "Glad that cleared things up :)"
      }
    ]
  },
  {
    "number": 489,
    "title": "Could not load type 'MimeKit.Cryptography.MD5' from assembly ...\" in dotnet core apps",
    "created_at": "2017-04-13T07:10:53Z",
    "closed_at": "2017-04-13T10:31:14Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/489",
    "body": "When I try to use mailkit in dotnetcore `(<TargetFramework>netcoreapp1.1</TargetFramework>)` apps, we get this error.\r\n\r\nI use example code that is in project readme page like following:\r\n\r\n```csharp\r\nusing System;\r\n\r\nusing MailKit.Net.Smtp;\r\nusing MailKit;\r\nusing MimeKit;\r\n\r\nnamespace TestClient {\r\n\tclass Program\r\n\t{\r\n\t\tpublic static void Main (string[] args)\r\n\t\t{\r\n\t\t\tvar message = new MimeMessage ();\r\n\t\t\tmessage.From.Add (new MailboxAddress (\"Joey Tribbiani\", \"joey@friends.com\"));\r\n\t\t\tmessage.To.Add (new MailboxAddress (\"Mrs. Chanandler Bong\", \"chandler@friends.com\"));\r\n\t\t\tmessage.Subject = \"How you doin'?\";\r\n\r\n\t\t\tmessage.Body = new TextPart (\"plain\") {\r\n\t\t\t\tText = @\"Hey Chandler,\r\n\r\nI just wanted to let you know that Monica and I were going to go play some paintball, you in?\r\n\r\n-- Joey\"\r\n\t\t\t};\r\n\r\n\t\t\tusing (var client = new SmtpClient ()) {\r\n\t\t\t\t// For demo-purposes, accept all SSL certificates (in case the server supports STARTTLS)\r\n\t\t\t\tclient.ServerCertificateValidationCallback = (s,c,h,e) => true;\r\n\r\n\t\t\t\tclient.Connect (\"smtp.friends.com\", 587, false);\r\n\r\n\t\t\t\t// Note: since we don't have an OAuth2 token, disable\r\n\t\t\t\t// the XOAUTH2 authentication mechanism.\r\n\t\t\t\tclient.AuthenticationMechanisms.Remove (\"XOAUTH2\");\r\n\r\n\t\t\t\t// Note: only needed if the SMTP server requires authentication\r\n\t\t\t\tclient.Authenticate (\"joey\", \"password\");\r\n\r\n\t\t\t\tclient.Send (message);\r\n\t\t\t\tclient.Disconnect (true);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n```\r\n\r\nI get error in following line\r\n\r\n    client.Authenticate (\"joey\", \"password\");\r\n\r\n\r\nStackTrace:\r\n\r\n    at MailKit.Security.SaslMechanismCramMd5.Challenge(Byte[] token, Int32 startIndex, Int32 length)\\r\\n   at MailKit.Security.SaslMechanism.Challenge(String token)\\r\\n   at MailKit.Net.Smtp.SmtpClient.Authenticate(Encoding encoding, ICredentials credentials, CancellationToken cancellationToken)\\r\\n   at MailKit.MailService.Authenticate(String userName, String password, CancellationToken cancellationToken)\\r\\n   at ConsoleAppMailkit.Program.Main(String[] args) in c:\\\\users\\\\aliriza\\\\documents\\\\visual studio 2017\\\\Projects\\\\ConsoleAppMailkit\\\\ConsoleAppMailkit\\\\Program.cs:line 37",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/489/comments",
    "author": "alirizaadiyahsi",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2017-04-13T10:31:14Z",
        "body": "You need to use MimeKit 1.14.1"
      },
      {
        "user": "marcwmiller",
        "created_at": "2017-04-21T13:06:56Z",
        "body": "I ran into same issue, and had to explicitly add the MimeKit package. Perhaps the MailKit nuget package dependencies need updating?\r\n\r\nFrom: MimeKit (>= 1.14.0)\r\nTo: MimeKit (>= 1.14.1)"
      },
      {
        "user": "jstedfast",
        "created_at": "2017-04-21T13:10:39Z",
        "body": "@marcwmiller thanks, I thought it already depended on 1.14.1\r\n\r\nI guess I forgot to bump it when I made the release."
      },
      {
        "user": "jstedfast",
        "created_at": "2017-04-21T14:40:38Z",
        "body": "I just pushed 1.16 of both MimeKit and MailKit which solves the version dependency issue."
      },
      {
        "user": "marcwmiller",
        "created_at": "2017-04-21T17:20:45Z",
        "body": "Sweet - thx!"
      },
      {
        "user": "andreujuanc",
        "created_at": "2017-05-11T00:49:13Z",
        "body": "I still get the issue with MimeKit :("
      },
      {
        "user": "jstedfast",
        "created_at": "2017-05-11T13:10:05Z",
        "body": "Then you probably don't have 1.16"
      },
      {
        "user": "andreujuanc",
        "created_at": "2017-05-11T20:16:27Z",
        "body": "I do !"
      },
      {
        "user": "jstedfast",
        "created_at": "2017-05-12T13:08:10Z",
        "body": "1.16 of both MimeKit and MailKit? what is the exact error you are getting? What platform?"
      }
    ]
  },
  {
    "number": 488,
    "title": "Invalid local-part at offset 0",
    "created_at": "2017-04-10T15:38:03Z",
    "closed_at": "2017-04-10T15:43:42Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/488",
    "body": "I get a `Invalid local-part at offset 0 (MimeKit.ParseException)` exception at `new MailboxAddress`. Could a leading whitespace cause this exception?\r\n\r\nI have updated via NuGet to the latest version today. Surprisingly with the old version (1.10), the whitespace mail address worked.",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/488/comments",
    "author": "TJDev",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2017-04-10T15:43:42Z",
        "body": "The address string that you pass to `new MailboxAddress` should be in its canonical form.\r\n\r\nSo yes, leading spaces could cause this to fail.\r\n\r\nMimeKit got a bit stricter here because it now also adds support for IDN addresses which means it actually has to parse the strings in order to break the string into its component pieces."
      },
      {
        "user": "TJDev",
        "created_at": "2017-04-10T16:18:47Z",
        "body": "Thank you for your quick reply. 😄 "
      }
    ]
  },
  {
    "number": 484,
    "title": "Imap moveMessages",
    "created_at": "2017-04-03T21:15:10Z",
    "closed_at": "2017-04-03T23:11:10Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/484",
    "body": "Can someone please provide a very basic example of moving messages using IMAP for C#.\r\nI want to login, get the inbox folder, and move all the messages that are READ to a different folder within my gmail account.\r\n\r\nThanks.\r\n\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/484/comments",
    "author": "maddisn",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2017-04-03T23:11:10Z",
        "body": "```csharp\r\nvar uids = client.Inbox.Search (SearchQuery.Seen);\r\nclient.Inbox.Move (uids, otherFolder);\r\n```"
      }
    ]
  },
  {
    "number": 480,
    "title": "Authenticate IMAP",
    "created_at": "2017-03-29T20:50:57Z",
    "closed_at": "2017-03-29T21:14:34Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/480",
    "body": "Hello!\r\n\r\nI have a strange problem with imap connection (troubles with server and/or transport) and it's very hard to connect (many timeouts). BUT if connection was established, it work great and fast.\r\nSo i need to authenticate to many mailboxes (one by one) via same connection (get all mailboxes from exchange database). When I call second auth method (for next mailbox), I have an exception - already authenticated.\r\n\r\nHow can I authenticate to second mailbox (deauthenticate from first) without disconnecting from server?\r\n\r\nYou are great! Thanks.",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/480/comments",
    "author": "ramer",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2017-03-29T21:14:34Z",
        "body": "You can't. IMAP doesn't allow this."
      }
    ]
  },
  {
    "number": 477,
    "title": "where is the Pop3Client class?",
    "created_at": "2017-03-27T03:32:09Z",
    "closed_at": "2017-03-27T10:59:54Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/477",
    "body": "where is the Pop3Client class?",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/477/comments",
    "author": "dengzz",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2017-03-27T10:59:54Z",
        "body": "It's in `MailKit.Net.Pop3`"
      }
    ]
  },
  {
    "number": 475,
    "title": "SMTP with GMAIL",
    "created_at": "2017-03-24T21:40:09Z",
    "closed_at": "2017-03-24T22:32:08Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/475",
    "body": "Dear Sir,\r\nI have this problem :+1: \r\n\r\nIf I use an Gmail account xxx.gmail.com  I am able to connect to gmail server.Not problem\r\nBut if I want to connect to my corpporate gmail account I am not able. I checked the \"let insecure app to connect \" and it is ON. The double check authentification is OFF.\r\nThe corporate account ,managed by gmail its xxx@yyy.com\r\n\r\n\r\nThis is the code I use, wrote in VB.net\r\n\r\n       Dim smtp As New MailKit.Net.Smtp.SmtpClient\r\n\r\n       \r\n        smtp.AuthenticationMechanisms.Remove(\"XOAUTH2\")\r\n\r\n        smtp.Connect(\"smtp.gmail.com\", 587, SecureSocketOptions.StartTls)\r\n\r\n        smtp.Authenticate(User, Password)\r\n\r\n        smtp.Send(mail)\r\n        smtp.Disconnect(True)\r\n\r\nPlease could you tell me something",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/475/comments",
    "author": "santidat",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2017-03-24T22:32:08Z",
        "body": "You might need to login via a web browser from the same machine first.\r\n\r\nI don't know anything else beyond that. I know for a fact it's not a MailKit problem because I have connected fine to a corporate gmail account."
      }
    ]
  },
  {
    "number": 468,
    "title": "Add support for Pop3 to return IList<UniqueId>",
    "created_at": "2017-03-12T19:40:15Z",
    "closed_at": "2017-03-12T19:53:52Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/468",
    "body": "A brief thought, but would it be possible to return `IList<UniqueId>` instead of string?\r\n\r\nThanks!",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/468/comments",
    "author": "justincarman",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2017-03-12T19:53:52Z",
        "body": "No, because POP3 does not define what format UIDs are. THey could be numeric or they could be random strings."
      }
    ]
  },
  {
    "number": 467,
    "title": "Attachment file size",
    "created_at": "2017-03-11T10:03:12Z",
    "closed_at": "2017-03-11T12:49:33Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/467",
    "body": "Hi,\r\n\r\nIs there a method to call to get the size of an attachment when reading emails in?\r\n\r\nsomething like below:\r\n\r\nforeach(var mp in message.Attachments)\r\n{\r\n    long byteSize = mp.attachment.Length;\r\n}\r\n\r\n ",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/467/comments",
    "author": "madu2003",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2017-03-11T12:49:33Z",
        "body": "No, there is not. But you can do this:\r\n\r\n```csharp\r\nforeach (var attachment in message.Attachments) {\r\n    using (var stream = new MeasuringStream ()) {\r\n        var rfc822 = attachment as MessagePart;\r\n        var part = attachment as MimePart;\r\n\r\n        if (rfc822 != null) {\r\n            rfc822.Message.WriteTo (stream);\r\n        } else {\r\n            part.ContentObject.DecodeTo (stream);\r\n        }\r\n\r\n        Console.WriteLine (\"attachment length = {0}\", stream.Length);\r\n    }\r\n}\r\n```\r\n\r\nIn the code snippet above I am using `DecodeTo` instead of `WriteTo` because I am assuming you want the decoded length, not the _encoded_ length. If that's not the case, just swap `DecodeTo` with `WriteTo`.\r\n"
      }
    ]
  },
  {
    "number": 466,
    "title": "Workaround for SendCloud SMTP server",
    "created_at": "2017-03-10T07:47:59Z",
    "closed_at": "2017-03-10T14:08:37Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/pull/466",
    "body": "This PR is to fix the following exception when using MailKit with SendCloud SMTP server (smtp.sendcloud.net).\r\n\r\n>MailKit.Net.Smtp.SmtpCommandException: You already said HELO\r\n>   at MailKit.Net.Smtp.SmtpClient.Ehlo(CancellationToken cancellationToken)\r\n>   at MailKit.Net.Smtp.SmtpClient.Authenticate(Encoding encoding, ICredentials credentials, CancellationToken cancellationToken)",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/466/comments",
    "author": "cnblogs-dudu",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2017-03-10T14:08:37Z",
        "body": "Just set `SmtpClient.QueryCapabilitiesAfterAuthenticating` to `false`"
      }
    ]
  },
  {
    "number": 462,
    "title": "Allowing only secure connections with SecureSocketOptions.Auto?",
    "created_at": "2017-02-23T14:44:39Z",
    "closed_at": "2017-02-23T15:38:00Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/462",
    "body": "I am trying to replace the framework internal SmtpClient in my application with MailKit's SmtpClient and encountered a problem when connecting to an insecure (i.e. no SSL/TLS) mail server using `SecureSocketOptions.Auto`. This results in connection being established insecure.\r\n\r\nIn the framework SmtpClient when setting option `EnableSsl = true`, this scenario leads to a `SmtpException: Server does not support secure connections`, and connection is not established.\r\n\r\nI expected `SecureSocketOptions.Auto` would work the same, i.e. establish only a secure connection and just decide whether a TLS wrapped or STARTTLS upgraded connection would be used.\r\n\r\nIs it possible to achieve this somehow? \r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/462/comments",
    "author": "rhagh",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2017-02-23T15:38:00Z",
        "body": "The equivalent of `EnableSsl` from System.Net.Mail's `SmtpClient` would be `SecureSocketOptions.StartTls`.\r\n\r\nSomething a bit closer to what you want to do could be done like this:\r\n\r\n```csharp\r\nvar options = port == 465 ? SecureSocketOptions.SslOnConnect : SecureSocketOptions.StartTls`\r\n```\r\n\r\nThat's very similar to what MailKit's internal logic is (except that it uses `SecureSocketOptions.StartTlsWhenAvailable`).\r\n\r\nHope that helps."
      },
      {
        "user": "adamfk",
        "created_at": "2018-03-22T19:51:05Z",
        "body": "So if I understand correctly, `SecureSocketOptions.Auto` may initiate an insecure connection if the server doesn't support it?\r\n\r\nThanks for the wonderful library!"
      },
      {
        "user": "jstedfast",
        "created_at": "2018-03-23T14:29:19Z",
        "body": "Correct. If the server doesn't support StartTLS and the port is not the SSL-wrapped port (aka 465), then you will end up with an unencrypted connection."
      },
      {
        "user": "adamfk",
        "created_at": "2018-03-24T02:31:57Z",
        "body": "Would you mind if I made a PR to add your above description to the documentation for `SecureSocketOptions.Auto`.\r\n\r\nI initially had the wrong impression reading: `Allow the MailKit.IMailService to decide which SSL or TLS options to use (default).`"
      },
      {
        "user": "jstedfast",
        "created_at": "2018-03-24T11:07:54Z",
        "body": "No need, I just updated the docs myself."
      }
    ]
  },
  {
    "number": 460,
    "title": "Authentication failed trying to connect to IMAP:4 Exchange server",
    "created_at": "2017-02-15T08:59:43Z",
    "closed_at": "2017-02-15T12:18:46Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/460",
    "body": "Hi ,\r\nI am trying to connect to Microsoft exchange client.  It is giving me Authentication failed. \r\nImap Log \r\nConnected to imaps://outlook.office365.com:993/\r\nS: * OK The Microsoft Exchange IMAP4 service is ready. [UwBOADEAUABSADAAMgBDAEEAMAAwADEANQAuAG4AYQBtAHAAcgBkADAAMgAuAHAAcgBvAGQALgBvAHUAdABsAG8AbwBrAC4AYwBvAG0A]\r\nC: A00000000 CAPABILITY\r\nS: * CAPABILITY IMAP4 IMAP4rev1 AUTH=PLAIN AUTH=XOAUTH2 SASL-IR UIDPLUS MOVE ID UNSELECT CHILDREN IDLE NAMESPACE LITERAL+\r\nS: A00000000 OK CAPABILITY completed.\r\nC: A00000001 AUTHENTICATE PLAIN AHN2Y19hc29wX28zNjVAaWxtbi5vbm1pY3Jvc29mdC5jb21cTUItQVNPUC1ET0MtQVRUQUNILURFVgA9Vk1FbHlrVHNPbjcz\r\nS: A00000001 NO AUTHENTICATE failed.\r\nC: A00000002 LOGIN \"svc_asop_o365@XXX.onmicrosoft.com\\\\MB-XXX-DOC-ATTACH-DEV\" =VMElykTsOn73\r\nS: A00000002 NO LOGIN failed.\r\nC: A00000003 LOGOUT\r\nS: * BYE Microsoft Exchange Server 2016 IMAP4 server signing off.\r\nS: A00000003 OK LOGOUT completed.\r\n\r\nCode Snippet \r\n imapClient.Connect(param.ImapServerHost, param.ImapServerPort,MailKit.Security.SecureSocketOptions.Auto);\r\n                \r\n                 imapClient.AuthenticationMechanisms.Remove(\"XOAUTH2\");\r\n                 imapClient.AuthenticationMechanisms.Remove(\"NTLM\");\r\n                //  imapClient.Connect(param.ImapServerHost, param.ImapServerPort);\r\n                imapClient.Authenticate(param.ImapUsername, param.ImapPassword);\r\n                var inbox = imapClient.GetFolder(param.ImapFolder);\r\n\r\nException found \r\n2017-02-15 12:57:34,217 [1] FATAL XXX.AAAA.Common.EmailHelper [(null)] <(null)> - Application [XXX.ASOP.Common.Driver] LOGIN failed.\r\n\r\nThanks in advance ",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/460/comments",
    "author": "sapreakshay",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2017-02-15T12:18:46Z",
        "body": "An authentication failed exception indicates that you provided the wrong credentials.\r\n\r\nThe log also shows that the server rejected your credentials."
      }
    ]
  },
  {
    "number": 458,
    "title": "Message-Id missing after download",
    "created_at": "2017-02-14T10:11:57Z",
    "closed_at": "2017-02-14T11:41:16Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/458",
    "body": "I am using MailKit to download emails from a POP3 server. To remember which mail I already downloaded I use the Message-Id to identify those. For that I first only ask for the Message-Id header and if its not known, download the message.\r\nThe problem that arises is that sometimes I get a valid Message-Id when getting it from the header, but the downloaded message then has no Message-Id set. This is random bug that I cant really reproduce.\r\n\r\nMy code:\r\n```\r\npublic IEnumberable<MimeMessage> DownloadNewMails()\r\n{\r\n    int startAt = -1;\r\n    int count = _pop3Client.Count;\r\n    for (int i = count - 1; i >= 0; i--) {\r\n        string messageId;\r\n        if (TryGetMessageId( i, out messageId )) { // Valid Message-Id\r\n            if (!_downloadedMessageIds.Contains( messageId )) {\r\n                startAt = i;\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    if (startAt >= 0) {\r\n        for (int i = startAt; i < count; i++) {\r\n            string messageId;\r\n            if (TryGetMessageId( i, out messageId )) { // Valid Message-Id\r\n                yield return _pop3Client.GetMessage( i ); // Message-Id=null\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\npublic bool TryGetMessageId(int id, out string messageId)\r\n{\r\n    messageId = string.Empty;\r\n    var headers = _pop3Client.GetMessageHeaders( id );\r\n    if (headers.Contains( HeaderId.MessageId )) {\r\n        messageId = headers[HeaderId.MessageId];\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n```\r\nAm I doing something wrong? Is this a known issue of Pop3? \r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/458/comments",
    "author": "Mats391",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2017-02-14T11:41:16Z",
        "body": "You can't rely on a Message-Id header existing. It's *supposed* to be there according to the spec, but there's no guarantee that the client that sent the message has added it. If it didn't set one, then it won't exist on the POP3 server.\r\n\r\nIt's possible that when you call GetHeaders() that the server is randomly generating a Message-Id but that when you download the entire message, it isn't. I've seen this behavior with some POP3 servers for other headers (never Message-Id that I've noticed, but I haven't tested them all obviously).\r\n\r\nYou can verify that it's not a bug in MailKit by obtaining a protocol log as suggested in the FAQ and taking a look at the raw message data that gets downloaded.\r\n\r\nI'm 99.9% confident that if the downloaded MimeMessage doesn't have a Message-Id, then neither does the raw message."
      }
    ]
  },
  {
    "number": 456,
    "title": "Email InternalDate",
    "created_at": "2017-02-12T09:40:41Z",
    "closed_at": "2017-02-12T14:13:47Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/456",
    "body": "Hi,\r\n1) When i fetch the message summaries \r\n\r\n`inbox.Fetch(uids, MessageSummaryItems.UniqueId | MessageSummaryItems.Envelope | MessageSummaryItems.InternalDate)`\r\n\r\nInternalDate is the same Date, but i expect \"received\" date from headers:\r\n\r\n```\r\nReceived: by 10.103.85.210 with SMTP id q79csp283698vsg;\r\n        Sat, 11 Feb 2017 18:24:14 -0800 (PST)\r\nX-Received: by 10.200.40.113 with SMTP id 46mr14303764qtr.167.1486866254026;\r\n        Sat, 11 Feb 2017 18:24:14 -0800 (PST)\r\nReceived: from a11-99.smtp-out.amazonses.com (a11-99.smtp-out.amazonses.com. [54.240.11.99])\r\n        by mx.google.com with ESMTPS id y36si4464679qty.52.2017.02.11.18.24.13\r\n        for <...@gmail.com>\r\n        (version=TLS1 cipher=ECDHE-RSA-AES128-SHA bits=128/128);\r\n        Sat, 11 Feb 2017 18:24:13 -0800 (PST)\r\nDate: Sun, 12 Feb 2017 02:24:13 +0000\r\n```\r\n\r\n2) How to get internal date (\"received\") when get message like `inbox.GetMessage(id)`?\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/456/comments",
    "author": "lordofhammsters",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2017-02-12T14:13:47Z",
        "body": "What you can do is request specific header fields (such as Received) like this:\r\n\r\n```csharp\r\nvar fields = new HashSet<string> ();\r\nfields.Add (\"Received\");\r\n\r\ninbox.Fetch (uids, MessageSummaryItems.UniqueId | MessageSummaryItems.Envelope, fields);\r\n```\r\n\r\nAt this point you can access the `Headers` property of each message summary that is returned.\r\n"
      },
      {
        "user": "lordofhammsters",
        "created_at": "2017-02-13T11:41:38Z",
        "body": "Thank you for answer and library!"
      }
    ]
  },
  {
    "number": 455,
    "title": "MailKit loading assembly in MEF based scenario with Caliburn Micro",
    "created_at": "2017-02-10T13:15:51Z",
    "closed_at": "2017-02-10T14:13:18Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/455",
    "body": "I'm downloading plugins from a remote location. The dll's of these plugins are downloaded in their own directory with name and version (e.g; Dllname.1.0.0.0) to make them unique.\r\n\r\nIn a next step these assemblies are loaded into an existing application with .LoadFrom:\r\n`var myAssembly = Assembly.LoadFrom(filename). `\r\nAnd also added to AssemblySource. with:\r\n`AssemblySource.Instance.Add(myAssembly)`\r\n\r\nThis is because they need to be known by the MEF Container and Caliburn Micro to make the IoC / DI working.\r\n\r\nHowever when loading MailKit, this fails because MailKit requires MimeKit. So MimeKit should be loaded first. For some reason during loading the MailKit dll, it needs something from MimeKit which makes it fail.\r\n\r\nWhen I load other dll's that depend on another dll, I don't have this error, which makes me believe that there is some kind of static field or something that gets executed/initialized when loading MailKit that requires MimeKit making it fail.\r\n\r\nIn this way I can't load first MailKit and then MimeKit and after that make some calls.\r\n\r\n(quite hard to explain, it is a complex situation but MailKit has something which does not allow it to load the assembly and make it available to MEF and Caliburn Micro without loading first MimeKit. While other assemblies make this possible.)",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/455/comments",
    "author": "wstaelens",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2017-02-10T13:20:01Z",
        "body": "Could you investigate this and get back to me with a solution? I'd be happy to review your patch(es) and work with you to merge them into mainline MimeKit and/or MailKit.\r\n\r\nYou seem to know a whole lot more about this than I do."
      },
      {
        "user": "wstaelens",
        "created_at": "2017-02-10T13:47:34Z",
        "body": "Plugins and their dll's are downloaded and stored in their own folder. e.g.:\r\n`FtpLib.dll`\r\nis stored in path: \"FtpLib.1.0.4185.25073\". Constructed like this:\r\n`// \"\" + FtpLib + \".\" + 1.0.4185.25073 = \\FtpLib.1.0.4185.25073\\`\r\n\r\nnext a foreach loop gets the filenames and loads them via:\r\n\r\n```\r\nforeach (var fileName in downloadedPlugins) {\r\n  try {\r\n    var localAssembly = Assembly.LoadFrom(fileName);\r\n\r\n    AssemblySource.Instance.Add(localAssembly); // <--- crash is here\r\n } catch {}\r\n}\r\n```\r\n\r\nSo I have for example these **folders**:\r\n```\r\nBouncyCastle.Crypto.1.8.15362.1\r\nMailKit.1.10.2.0\r\nMimeKit.1.10.1.0\r\n```\r\n\r\nBecause I download the files in alphabetical order I first get Bouncy, next I get MailKit and next MimeKit.\r\n\r\nBouncy loads just fine.  but MailKit fails to load because it requires MimeKit. \r\nNow for some reason (and this is probably the problem) during the **AssemblySource.Instance.Add()** the MailKit assembly does/needs/inspects/... something causing it to look for MimeKit. Resulting in an exception and MailKit could not be loaded.\r\n\r\nHowever if I copy/paste the dll from MimeKit to the folder of MailKit (remember their were stored in a separate folder, a bit like packages to make them unique) then MailKit can load because it finds MimeKit (or I've just been lucky all the time).\r\n\r\nThis means I always have to either load MimeKit first or add MimeKit to the same library of MailKit before loading MailKit assembly. The problem is that I can't control the order in which I receive MimeKit or MailKit.\r\n\r\nI download and load other dll's also where I load first a dll that requires another one and lather load the other one, and that does not crash. So there must be \"something\" different with MailKit/MimeKit but I have no clue what exactly it is. (nor can't i create a path or spend hours on it to search for it because of limited time, but I wanted to report it so that this 'issue' is known at least. Currently I'm trying to find all dependencies first and try to sort them as a workaround).\r\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2017-02-10T14:13:17Z",
        "body": "> Now for some reason (and this is probably the problem) during the AssemblySource.Instance.Add() the MailKit assembly does/needs/inspects/... something causing it to look for MimeKit. Resulting in an exception and MailKit could not be loaded.\r\n\r\nMakes sense... because the runtime has no idea where to find the MimeKit.dll. It's not in the GAC and it's not in the same directory (which is how the assembly loader works).\r\n\r\nI don't see how this is a problem with my code."
      }
    ]
  },
  {
    "number": 454,
    "title": "Unable to write data to the transport connection: An established connection was aborted by the software in your host machine",
    "created_at": "2017-02-08T03:19:38Z",
    "closed_at": "2017-02-08T14:19:38Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/454",
    "body": "I keep the SMTP connection for two days. And now I call the send method to send an message. But some errors occured. \r\nError info:Unable to write data to the transport connection: An established connection was aborted by the software in your host machine.\r\n\r\nSo what is the problem? Thanks for your answer ahead.",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/454/comments",
    "author": "RonLiang",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2017-02-08T14:19:37Z",
        "body": "You lost the connection. Reconnect and try again."
      }
    ]
  },
  {
    "number": 453,
    "title": "Connection timeout",
    "created_at": "2017-02-06T07:05:02Z",
    "closed_at": "2017-02-06T11:51:44Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/453",
    "body": "Hi,\r\nWe've been using your code and it's been a great help for us! Thanks!\r\nLately, we got a \"Connection timed out\" exception (see below) when sending an email. Same email can be sent again with success.\r\n\r\nWe work with exchange and gmail, didn't have any connection issues with them, and were wondering whether this is a known issue? OR maybe there is a workaround for this error.\r\n\r\nThank you for your help.\r\n\r\nSmtpSender: Error sending message MailKit.Net.Smtp.SmtpCommandException: 4.4.1 Connection timed out\r\n   at MailKit.Net.Smtp.SmtpClient.ProcessMailFromResponse(SmtpResponse response, MailboxAddress mailbox)\r\n   at MailKit.Net.Smtp.SmtpClient.FlushCommandQueue(MailboxAddress sender, IList`1 recipients, CancellationToken cancellationToken)\r\n   at MailKit.Net.Smtp.SmtpClient.Send(FormatOptions options, MimeMessage message, MailboxAddress sender, IList`1 recipients, CancellationToken cancellationToken, ITransferProgress progress)\r\n   at MailKit.Net.Smtp.SmtpClient.Send(FormatOptions options, MimeMessage message, MailboxAddress sender, IEnumerable`1 recipients, CancellationToken cancellationToken, ITransferProgress progress)\r\n   at MailKit.MailTransport.Send(MimeMessage message, MailboxAddress sender, IEnumerable`1 recipients, CancellationToken cancellationToken, ITransferProgress progress)\r\n   at MailKit.MailTransport.<>c__DisplayClass4_0.<SendAsync>b__0()\r\n   at System.Threading.Tasks.Task.Execute()",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/453/comments",
    "author": "Dafnafrank",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2017-02-06T11:51:44Z",
        "body": "The error is coming from your SMTP server.\r\n\r\n```\r\n4.4.1 Connection timed out\r\n```\r\n\r\nThat's an SMTP server error."
      }
    ]
  },
  {
    "number": 450,
    "title": "The SMTP server has unexpectedly disconnected",
    "created_at": "2017-01-21T10:27:06Z",
    "closed_at": "2017-01-21T13:15:46Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/450",
    "body": "Hey, I'm trying out MailKit, but I'm stuck on the first example from readme. I copy pasted the SMTP example and entered gmail account, that I know works in my Go app:\r\n\r\n`          var m = new MimeMessage ();\r\n            m.From.Add (new MailboxAddress (\"Joey Tribbiani\", \"joey@friends.com\"));\r\n            m.To.Add (new MailboxAddress (\"Mrs. Chanandler Bong\", \"...\"));\r\n            m.Subject = \"How you doin'?\";\r\n\r\n            m.Body = new TextPart (\"plain\") {\r\n                Text = @\"...\" };\r\n\r\n            using (var client = new SmtpClient ()) {\r\n                // For demo-purposes, accept all SSL certificates (in case the server supports STARTTLS)\r\n                client.ServerCertificateValidationCallback = (s,c,h,e) => true;\r\n\r\n                client.Connect (\"smtp.gmail.com\", 465, false);\r\n\r\n                // Note: since we don't have an OAuth2 token, disable\r\n                // the XOAUTH2 authentication mechanism.\r\n                client.AuthenticationMechanisms.Remove (\"XOAUTH2\");\r\n\r\n                // Note: only needed if the SMTP server requires authentication\r\n                client.Authenticate (\"...\", \"...\");\r\n\r\n                client.Send (m);\r\n                client.Disconnect (true);\r\n            }\r\n`\r\n\r\nThis throws:\r\n`Connection id \"0HL21SIP866TI\": An unhandled exception was thrown by the application.\r\nMailKit.Net.Smtp.SmtpProtocolException: The SMTP server has unexpectedly disconnected.`\r\n\r\nafter 10 seconds.\r\n\r\nI don't know what to think about it, I tried even the async methods and the result was same.\r\n\r\nI'm on .Net core 1.1.0, MailKit 1.10.1, Mac OS.",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/450/comments",
    "author": "Xioshock",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2017-01-21T13:15:46Z",
        "body": "The exception says that your server disconnected you. It works fine for me, so I suspect you have some sort of firewall problem or something.\r\n\r\nYou could try getting a ProtocolLog (explained in the FAQ.md file) to see how far it gets before getting the exception. Maybe that will be helpful?"
      },
      {
        "user": "Xioshock",
        "created_at": "2017-01-21T14:42:08Z",
        "body": "It only outputs 1 line from the log: Connected to smtp://smtp.gmail.com:465/\r\n\r\nAnd then it throws the same exception. Maybe it has something to do with the gmail, I can't think of anything that could be wrong..\r\n\r\nLike I said, I'm using the same exact server smtp.gmail.com:465 with the same credentials in my other app, that is build with Go."
      },
      {
        "user": "jstedfast",
        "created_at": "2017-01-21T18:40:21Z",
        "body": "Can you write a simple program that connects to smtp.gmail.com on port 465 using simple sockets?"
      },
      {
        "user": "Xioshock",
        "created_at": "2017-01-21T18:42:14Z",
        "body": "I managed to connect to gmail on port 25 for now. I'll try the 465 later. Thanks for the help."
      }
    ]
  },
  {
    "number": 446,
    "title": "Unsupported search criterion",
    "created_at": "2017-01-01T15:00:03Z",
    "closed_at": "2017-01-01T16:15:22Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/446",
    "body": "It is not your problem, it is problem Imap server mail.ru. But, maybe you can help me? :)\r\nThe IMAP server replied to the 'SEARCH' command with a 'NO' response: Unsupported search criterion: TEXT\r\n```\r\nusing (ImapClient client1 = new ImapClient())\r\n            {\r\n                string mail = \"<e-mail>@mail.ru\";\r\n                string password = \"<password>\";\r\n                string server = \"imap.mail.ru\";\r\n                int port = 993;\r\n                client1.Connect(server, port, true);\r\n                client1.AuthenticationMechanisms.Remove(\"XOAUTH2\");\r\n                client1.Authenticate(mail, password);\r\n                for (int i = 0; i < client1.PersonalNamespaces.Count; i++)\r\n                {\r\n                    var folders = client1.GetFolders(client1.PersonalNamespaces[i]);\r\n                    var query = SearchQuery.MessageContains(\"hello\");\r\n                    for (int j = 0; j < folders.Count; j++)\r\n                    {\r\n                        folders[j].Open(FolderAccess.ReadWrite);\r\n                        var items = folders[j].Search(query); **//error here**\r\n                        if (items.Count > 0)\r\n                        {\r\n                            folders[j].SetFlags(items, MessageFlags.Deleted, false);\r\n                            folders[j].Expunge(items);\r\n                        }\r\n                    }\r\n                }\r\n                client1.Disconnect(true);\r\n            }\r\n```",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/446/comments",
    "author": "Bobruk",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2017-01-01T16:15:22Z",
        "body": "Does something like this work?\r\n\r\n```csharp\r\nvar query = SearchQuery.BodyContains(\"hello\");\r\n```\r\n\r\nIf that works, you could try expanding that to something like:\r\n\r\n```csharp\r\nvar query = SearchQuery.BodyContains(\"hello\").Or(SearchQuery.SubjectContains(\"hello\"));\r\n```\r\n\r\nHope that helps."
      },
      {
        "user": "Bobruk",
        "created_at": "2017-01-01T16:29:38Z",
        "body": "The IMAP server replied to the 'SEARCH' command with a 'NO' response: Unsupported search criterion: BODY\r\nThe IMAP server replied to the 'SEARCH' command with a 'NO' response: Unsupported search criterion: OR"
      },
      {
        "user": "jstedfast",
        "created_at": "2017-01-01T21:55:49Z",
        "body": "sounds like your IMAP server doesn't support searching?"
      },
      {
        "user": "Bobruk",
        "created_at": "2017-01-02T13:26:37Z",
        "body": "It supports, but not all query...\r\nIt supports Unseen, Answered, etc"
      }
    ]
  },
  {
    "number": 445,
    "title": "send attachement from array",
    "created_at": "2017-01-01T07:08:56Z",
    "closed_at": "2017-01-01T16:09:09Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/445",
    "body": "I am testing .Net Core MVC, which does not support System.Net.Mail, Mailkit, works well but can't figure out how to send attachments that I have stored in my database as binary. I used the following in MVC 5:\r\n```\r\nvar mail = new MailMessage();\r\n     mail.Attachments.Add(new Attachment(new MemoryStream(attachment), \r\n     attachmentName, attachmentType));\r\n```\r\nI would appreciate your suggestions. Thank you",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/445/comments",
    "author": "ghost",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2017-01-01T16:09:09Z",
        "body": "This is probably the easiest solution:\r\n\r\n```csharp\r\nvar message = new MimeMessage ();\r\nvar builder = new BodyBuilder ();\r\n\r\nbuilder.Attachments.Add (attachmentName, attachment, ContentType.Parse (attachmentType));\r\n\r\nmessage.Body = builder.ToMessageBody ();\r\n```\r\n\r\nThis assumes that `attachmentName` and `attachmentType` are strings while `attachment` is a `byte[]`."
      },
      {
        "user": "ghost",
        "created_at": "2017-01-01T18:44:45Z",
        "body": "Thank you"
      },
      {
        "user": "caocuongccc",
        "created_at": "2020-11-26T07:22:21Z",
        "body": "Thank man!"
      }
    ]
  },
  {
    "number": 443,
    "title": "BlackList",
    "created_at": "2016-12-25T23:10:27Z",
    "closed_at": "2016-12-25T23:32:39Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/443",
    "body": "How to add an email sender to blacklist using IMAP?",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/443/comments",
    "author": "Bobruk",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2016-12-25T23:32:39Z",
        "body": "IMAP does not know anything about black lists."
      },
      {
        "user": "Bobruk",
        "created_at": "2016-12-25T23:54:12Z",
        "body": "Maybe spam-list?"
      },
      {
        "user": "jstedfast",
        "created_at": "2016-12-26T00:20:08Z",
        "body": "IMAP is just mail storage, it doesn't know anything about spam filtering."
      },
      {
        "user": "Bobruk",
        "created_at": "2016-12-26T00:29:59Z",
        "body": "And POP3? Or SMTP?"
      },
      {
        "user": "jstedfast",
        "created_at": "2016-12-26T13:16:32Z",
        "body": "Nope. They don't know anything about spam either.\r\n\r\nSpam filtering is generally done on the client side after the message(s) have been downloaded."
      },
      {
        "user": "Bobruk",
        "created_at": "2016-12-26T16:57:53Z",
        "body": "Thank you :)"
      }
    ]
  },
  {
    "number": 439,
    "title": "Disable Attachment logging from ProtocolLogger",
    "created_at": "2016-12-19T09:58:26Z",
    "closed_at": "2016-12-19T13:27:57Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/439",
    "body": "Hi, a suggestion for a future feature : i find the ProcotolLogger availability extremely useful, but i think it would be desirable to have an on/off flag in order to enable/disable attachment logging.\r\n\r\nI achieved the same Behavior by implementing a new ProtocolLogger based on the code of the original one, but the final solution is somewhat tricky and i guess a neat solution requires to modify all the calls to the Write methods that in turn call the LogClient method.",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/439/comments",
    "author": "jaggata",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2016-12-19T13:27:57Z",
        "body": "The ProtocolLogger is just a log of exactly what is sent across the wire and at the point where it is logged, it has no context to know if something is an attachment or not.\r\n\r\nThis is not something that can be done."
      }
    ]
  },
  {
    "number": 438,
    "title": "MailKit - Attachment From Stream",
    "created_at": "2016-12-15T21:42:42Z",
    "closed_at": "2016-12-15T21:50:03Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/438",
    "body": "I am using epplus with Memory stream to download excel. Now i want use this stream in attachment can i? i cannot find any example about this.\r\nis there any working example like this\r\n> builder.Attachments.Add(stream,\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",  \"Report.xlsx\" );",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/438/comments",
    "author": "epozsh",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2016-12-15T21:49:45Z",
        "body": "What you can do is something like this:\r\n\r\n```csharp\r\nbuilder.Attachments.Add (\"Report.xslx\", stream);\r\n```\r\n\r\nor (if the above code doesn't get the correct mime-type)\r\n\r\n```csharp\r\nbuilder.Attachments.Add (\"Report.xslx\", stream, new ContentType (\"application\", \"vnd.openxmlformats-officedocument.spreadsheetml.sheet\"));\r\n```\r\n\r\nJust be careful not to dispose the stream until after you have sent the message."
      },
      {
        "user": "epozsh",
        "created_at": "2016-12-16T08:03:18Z",
        "body": "Thank you very much, it does work. i was giving the parameters in wrong way. "
      }
    ]
  },
  {
    "number": 437,
    "title": "Why do you use use InboxCountChanged and not just use new MessagesArrived to tell if new message has arrived?",
    "created_at": "2016-12-09T11:55:07Z",
    "closed_at": "2016-12-09T12:19:39Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/437",
    "body": "Why do you use use InboxCountChanged and not just use new MessagesArrived to tell if new message has arrived?\r\n\r\n// Keep track of messages being expunged so that when the CountChanged event fires, we can tell if it's\r\n // because **new messages** have arrived vs messages being removed (or some combination of the two).",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/437/comments",
    "author": "truane",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2016-12-09T12:19:39Z",
        "body": "The `MessagesArrived` event is emitted whenever the IMAP server sends the client an `EXISTS` event where the number of messages in the folder has increased. Since the `e.Count` value is calculated as `NewMessageCount - OldMessageCount`, it might actually be misleading since you could have a situation such as:\r\n\r\n1. Open a folder, current message count is 10\r\n2. Move a message out of the folder\r\n3. while the message is being moved, you get 2 new messages\r\n4. `MessagesArrived` event is emitted with a `Count` of 1 (10 - 1 + 2 = 11... 11 - 10 = 1)\r\n"
      }
    ]
  },
  {
    "number": 435,
    "title": "Fetching return wrong results when server send flags update",
    "created_at": "2016-12-06T07:03:33Z",
    "closed_at": "2016-12-06T12:12:32Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/435",
    "body": "Hi,\r\nI used the `ImapFolder.Fetch` and realized that sometimes I get too much results.\r\nIt seems that this occurs when the imap server send flag updates , it get handled by the ImapCommand of the fetching.\r\nMeanwhile I check on my side and remove the unwanted summaries.\r\nLog:\r\n\r\n> C: E00000030 UID FETCH 34274:34300 (UID FLAGS INTERNALDATE RFC822.SIZE)\r\nS: * 9941 FETCH (UID 34274 RFC822.SIZE 60593 .................\r\nS: * 9942 FETCH (UID 34275 RFC822.SIZE 15602 .................\r\nS: * 9943 FETCH (UID 34276 RFC822.SIZE 93329 .................\r\nS: * 9944 FETCH (UID 34277 RFC822.SIZE 103569 .................\r\nS: * 9945 FETCH (UID 34278 RFC822.SIZE 14511 .................\r\nS: * 9946 FETCH (UID 34279 RFC822.SIZE 45827 .................\r\nS: * 9947 FETCH (UID 34280 RFC822.SIZE 11467 .................\r\nS: * 9948 FETCH (UID 34281 RFC822.SIZE 44040 .................\r\nS: * 9949 FETCH (UID 34282 RFC822.SIZE 7988 .................\r\nS: * 9950 FETCH (UID 34283 RFC822.SIZE 61967 .................\r\nS: * 9951 FETCH (UID 34284 RFC822.SIZE 23700 .................\r\nS: * 9952 FETCH (UID 34288 RFC822.SIZE 6010 .................\r\nS: * 9953 FETCH (UID 34289 RFC822.SIZE 77416 .................\r\nS: * 9954 FETCH (UID 34291 RFC822.SIZE 62463 .................\r\nS: * 9955 FETCH (UID 34292 RFC822.SIZE 7988 .................\r\nS: * 9956 FETCH (UID 34293 RFC822.SIZE 18832 .................\r\nS: * 9957 FETCH (UID 34297 RFC822.SIZE 10516 .................\r\nS: * 9958 FETCH (UID 34298 RFC822.SIZE 80717 .................\r\nS: * 9959 FETCH (UID 34299 RFC822.SIZE 12205 .................\r\nS: * 9960 FETCH (UID 34300 RFC822.SIZE 15591 .................\r\nS: * 13315 FETCH (UID 39553 MODSEQ (2272449) FLAGS (\\Answered))\r\nS: E00000030 OK Success\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/435/comments",
    "author": "ChenMachluf",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2016-12-06T12:12:32Z",
        "body": "This isn't a bug, it's just the way IMAP works."
      },
      {
        "user": "ChenMachluf",
        "created_at": "2016-12-06T12:54:03Z",
        "body": "Yeah , i know ...\r\nJust when the `ImapEngine` have an active `ImapCommand` , like when u do Fetch.\r\nThe `ImapCommand`  handle this imap event cuz it registered to the Fetch atom.\r\nSo , the Fetch command get \"wrong results\" then what we ask for ,\r\nand the `ImapFolder` didnt get the message  , so no events raised for `MessageFlagsChanged` , `MessageLabelsChanged` and `ModSeqChanged` . \r\n\r\nI know its really a edge case , but maybe we can fix it.\r\nI will be happy to try fix it in a smooth way , if u think it worth it."
      },
      {
        "user": "jstedfast",
        "created_at": "2016-12-06T16:02:20Z",
        "body": "The only solutions to this that I can think of would have a potentially large performance hit due to having to check if the Index or UID is in the list of requested IDs."
      }
    ]
  },
  {
    "number": 432,
    "title": "Not able to send Email through class library using client.SendAsync(message)",
    "created_at": "2016-11-29T13:25:02Z",
    "closed_at": "2016-11-29T13:48:45Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/432",
    "body": "Hi,\r\n\r\nWhen I am executing same script from Console Application's main method emails going through but when I am adding a class library and putting that code inside a method of that class library email not going through below is sample code snippet - \r\n```\r\n\r\npublic void TaskAllocationProcess()\r\n        {\r\n            using (var client = new SmtpClient())\r\n            {\r\n                var watch = System.Diagnostics.Stopwatch.StartNew();\r\n\r\n                // For demo-purposes, accept all SSL certificates (in case the server supports STARTTLS)\r\n                //client.ServerCertificateValidationCallback = (s, c, h, e) => true;\r\n\r\n                client.ConnectAsync(\"xxxxx\", 25, SecureSocketOptions.None);\r\n\r\n                // Note: since we don't have an OAuth2 token, disable\r\n                // the XOAUTH2 authentication mechanism.\r\n                client.AuthenticationMechanisms.Remove(\"XOAUTH2\");\r\n\r\n                // Note: only needed if the SMTP server requires authentication\r\n                client.AuthenticateAsync(\"xxxx\", \"xxxx\");\r\n\r\n                Console.WriteLine(\"Time taken to authenticate - \" + watch.Elapsed);\r\n\r\n                List<Action> actionsList = new List<Action>();\r\n                for (int i = 0; i <= 1; i++)\r\n                {\r\n                    actionsList.Add(() => SenEmail(client));\r\n                    //SenEmail(client);\r\n                }\r\n                Parallel.ForEach<Action>(actionsList, (o => o()));\r\n\r\n                Console.WriteLine(\"Time taken to complete - \" + watch.Elapsed);\r\n            }\r\n\r\n            \r\n\r\n        }\r\n\r\n        private static void SenEmail(SmtpClient client)\r\n        {\r\n            for (int i = 0; i <= 1; i++)\r\n            {\r\n                var message = new MimeMessage();\r\n                message.From.Add(new MailboxAddress(\"xxx\", \"xxx\"));\r\n                message.To.Add(new MailboxAddress(\"xxx\", \"xxx\"));\r\n                message.Subject = \"Threading...100 - Demo\";\r\n\r\n                message.Body = new TextPart(\"plain\")\r\n                {\r\n                    Text = @\"Hey Chandler,\r\n                I just wanted to let you know that Monica and I were going to go play some paintball, you in? -- Joey\"\r\n                };\r\n\r\n                client.SendAsync(message);\r\n         }\r\n }\r\n\r\n```\r\nI am using MailKit first time and don't have so much idea about this, please help me.\r\n\r\nRegards,\r\nKundan Rai",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/432/comments",
    "author": "ghost",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2016-11-29T13:48:45Z",
        "body": "You need to await the SendAsync() method."
      }
    ]
  },
  {
    "number": 429,
    "title": "Window Server 2012:Authentication Failed ",
    "created_at": "2016-11-22T09:17:32Z",
    "closed_at": "2016-11-23T20:06:47Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/429",
    "body": "- I have a problem on window server 2012.\r\n- I am used Gmail, port 587. \r\n- Username/Password have tested on local, its working properly. But when i run on window server 2012, its always show \"Authentication Failed\" error.\r\n- I have also open port 587 (Inbound, Outbound)\r\n\r\nDo you have any suggest? Thank you.",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/429/comments",
    "author": "anhlee24",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2016-11-22T13:54:07Z",
        "body": "So you are running an app on Windows Server 2012 and connecting to smtp.gmail.com:587 using MailKit.Net.Smtp.SmtpClient and you get an `AuthenticationException` when doing `client.Authenticate(username, password);`?\r\n\r\nWhat does the protocol log say?"
      },
      {
        "user": "anhlee24",
        "created_at": "2016-11-23T01:52:46Z",
        "body": "Hi,\r\n\r\nThanks for your reply.\r\nI have found the solution. \r\n- Because i have used Gmail, its working fine on my PC becasue of i have logined Gmail on this PC. \r\n- On the VPS, i have to login again to let Gmail know that this is me. \r\nThe reason is because of Gmail authentication rule.\r\n\r\nThanks again :)"
      },
      {
        "user": "jstedfast",
        "created_at": "2016-11-23T20:06:47Z",
        "body": "Okay, cool."
      },
      {
        "user": "kshyju",
        "created_at": "2016-12-05T03:23:27Z",
        "body": "I am experiencing the same issue when i deploy the code to an azure website. Works fine when i run it locally!. I enabled \"Access to Less secure apps\" in my gmail security settings. Any thoughts @jstedfast ?\r\n"
      },
      {
        "user": "anhlee24",
        "created_at": "2016-12-05T03:26:34Z",
        "body": "@kshyju \r\n\r\nWith VPS, i can open the browser, login and verify to allow access with my VPS IP address. I think you can contact with Azure support to do the same thing. I have not working with Azure before so i can not suggest more idea."
      }
    ]
  },
  {
    "number": 427,
    "title": "Exception : System.IO.IOException: Authentication failed because the remote party has closed the transport stream",
    "created_at": "2016-11-21T06:57:10Z",
    "closed_at": "2016-11-21T12:59:37Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/427",
    "body": "I have trying to read gmail mail but while for intial time it works fine and after some time it gives exception System.IO.IOException: Authentication failed because the remote party has closed the transport stream\r\n\r\nException is throw at line : connect\r\n client.ServerCertificateValidationCallback = (s, c, h, e) => true;\r\n client.AuthenticationMechanisms.Clear();\r\n client.Connect(\"imap.gmail.com\", 993, true);\r\n\r\nDetail exception \r\n\r\nResult1 Message:\t\r\nAssert.Fail failed. Exception System.IO.IOException: Authentication failed because the remote party has closed the transport stream.\r\n   at System.Net.Security.SslState.StartReadFrame(Byte[] buffer, Int32 readBytes, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslState.StartReceiveBlob(Byte[] buffer, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslState.CheckCompletionBeforeNextReceive(ProtocolToken message, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslState.StartSendBlob(Byte[] incoming, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslState.ForceAuthentication(Boolean receiveFirst, Byte[] buffer, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslState.ProcessAuthentication(LazyAsyncResult lazyResult)\r\n   at System.Net.Security.SslStream.AuthenticateAsClient(String targetHost, X509CertificateCollection clientCertificates, SslProtocols enabledSslProtocols, Boolean checkCertificateRevocation)\r\n   at MailKit.Net.Imap.ImapClient.Connect(String host, Int32 port, SecureSocketOptions options, CancellationToken cancellationToken)\r\n   at MailKit.MailService.Connect(String host, Int32 port, Boolean useSsl, CancellationToken cancellationToken)\r\n  \r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/427/comments",
    "author": "vijayinga",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2016-11-21T12:59:37Z",
        "body": "What is happening is that your connection to the IMAP server is timing out. It's not a bug in MailKit."
      }
    ]
  },
  {
    "number": 424,
    "title": "how do I get pop3 messages without removing them from the server?",
    "created_at": "2016-11-09T15:25:22Z",
    "closed_at": "2016-11-09T15:34:45Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/424",
    "body": "in my pop3 app i want the following:\r\n\r\n1. retrieve messages without removing them from the server\r\n2. when i choose to delete a message it should remove it from the server (via my custom browser - this is using the same function above)\r\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/424/comments",
    "author": "ghost",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2016-11-09T15:34:45Z",
        "body": "As long as you don't call `DeleteMessage()`, the message will not be deleted from the server.\n"
      }
    ]
  },
  {
    "number": 419,
    "title": "Cant search in subject having \"&\" ampersand character.",
    "created_at": "2016-11-07T14:28:26Z",
    "closed_at": "2016-11-07T15:53:10Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/419",
    "body": "The search query having \"&\" ampersand character shows no result. Check below piece of code.\r\n{\r\nIMailFolder mailFolder = Client.GetFolder(Client.PersonalNamespaces[0]).GetSubfolder(\"[Gmail]\").GetSubfolder(\"All Mail\");\r\nstring PathSeparator = mailFolder.DirectorySeparator.ToString();\r\nmailFolder.Open(FolderAccess.ReadOnly);\r\nvar query = SearchQuery.SubjectContains(\"test subject & test subject\");\r\nvar uids = mailFolder.Search(query);\r\n}",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/419/comments",
    "author": "jaysb1",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2016-11-07T15:53:10Z",
        "body": "It shows no result because Google's text indexing doesn't handle the &, it has nothing to do with MailKit doing something wrong.\n"
      }
    ]
  },
  {
    "number": 417,
    "title": "Add new custom header field to IMAP message and store it",
    "created_at": "2016-10-27T12:44:34Z",
    "closed_at": "2016-10-27T13:07:31Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/417",
    "body": "I have to read a message from an IMAP Mailbox, add a new header field if not present and store it again in the same Mailbox with the same MessageId.\nHow can I do this?\nDo I have to read message, modify it, delete current message and append the new one?\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/417/comments",
    "author": "maurodx",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2016-10-27T13:07:31Z",
        "body": "Yes.\n"
      }
    ]
  },
  {
    "number": 413,
    "title": "Problem with attachments in some mails",
    "created_at": "2016-10-18T15:31:05Z",
    "closed_at": "2016-10-18T15:43:25Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/413",
    "body": "Some mails I receive as IMAP doesn't have the attachments in the attachments property, but in the BodyParts, how does this work?\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/413/comments",
    "author": "luizfbicalho",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2016-10-18T15:43:25Z",
        "body": "MIME parts only show up in the `Attachments` property if they have a `Content-Disposition` header with a value of `attachment`.\n\nAll MIME parts show up in the `BodyParts` property.\n"
      }
    ]
  },
  {
    "number": 410,
    "title": "HtmlPreviewVisitor : in-line images ",
    "created_at": "2016-10-07T09:41:01Z",
    "closed_at": "2016-10-07T12:01:39Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/410",
    "body": "Hi ,\n\nWhen there are in-line images in emails I am using the following function to save the images in a folder (HtmlPreviewVisitor class). But the images are saved without a file extension. How can I save with the correct file extension? Thanks.\n\n------------------------------------HtmlPreviewVisitor ----------------------------------------\n    public class HtmlPreviewVisitor : MimeVisitor\n    {\n        List<MultipartRelated> stack = new List<MultipartRelated> ();\n        List<MimeEntity> attachments = new List<MimeEntity> ();\n        readonly string tempDir;\n        string body;\n\n```\n    /// <summary>\n    /// Creates a new HtmlPreviewVisitor.\n    /// </summary>\n    /// <param name=\"tempDirectory\">A temporary directory used for storing image files.</param>\n    public HtmlPreviewVisitor (string tempDirectory)\n    {\n        tempDir = tempDirectory;\n    }\n\n    /// <summary>\n    /// The list of attachments that were in the MimeMessage.\n    /// </summary>\n    public IList<MimeEntity> Attachments {\n        get { return attachments; }\n    }\n\n    /// <summary>\n    /// The HTML string that can be set on the BrowserControl.\n    /// </summary>\n    public string HtmlBody {\n        get { return body ?? string.Empty; }\n    }\n\n    protected override void VisitMultipartAlternative (MultipartAlternative alternative)\n    {\n        // walk the multipart/alternative children backwards from greatest level of faithfulness to the least faithful\n        for (int i = alternative.Count - 1; i >= 0 && body == null; i--)\n            alternative[i].Accept (this);\n    }\n\n    protected override void VisitMultipartRelated (MultipartRelated related)\n    {\n        var root = related.Root;\n\n        // push this multipart/related onto our stack\n        stack.Add (related);\n\n        // visit the root document\n        root.Accept (this);\n\n        // pop this multipart/related off our stack\n        stack.RemoveAt (stack.Count - 1);\n    }\n\n    // look up the image based on the img src url within our multipart/related stack\n    bool TryGetImage (string url, out MimePart image)\n    {\n        UriKind kind;\n        int index;\n        Uri uri;\n\n        if (Uri.IsWellFormedUriString (url, UriKind.Absolute))\n            kind = UriKind.Absolute;\n        else if (Uri.IsWellFormedUriString (url, UriKind.Relative))\n            kind = UriKind.Relative;\n        else\n            kind = UriKind.RelativeOrAbsolute;\n\n        try {\n            uri = new Uri (url, kind);\n        } catch {\n            image = null;\n            return false;\n        }\n\n        for (int i = stack.Count - 1; i >= 0; i--) {\n            if ((index = stack[i].IndexOf (uri)) == -1)\n                continue;\n\n            image = stack[i][index] as MimePart;\n            return image != null;\n        }\n\n        image = null;\n\n        return false;\n    }\n\n    // Save the image to our temp directory and return a \"file://\" url suitable for\n    // the browser control to load.\n    // Note: if you'd rather embed the image data into the HTML, you can construct a\n    // \"data:\" url instead.\n    string SaveImage (MimePart image, string url)\n    {\n        string fileName = url.Replace (':', '_').Replace ('\\\\', '_').Replace ('/', '_');\n\n        string path = Path.Combine (tempDir, fileName);\n\n        if (!File.Exists (path)) {\n            using (var output = File.Create (path))\n                image.ContentObject.DecodeTo(output);\n        }\n\n        return \"file://\" + path.Replace ('\\\\', '/');\n    }\n\n    //string SaveImage(MimePart image, string url)\n    //{\n    //    using (var output = new MemoryStream())\n    //    {\n    //        image.ContentObject.DecodeTo(output);\n\n    //        var buffer = output.GetBuffer();\n    //        int length = (int)output.Length;\n\n    //        return string.Format(\"data:{0};base64,{1}\", image.ContentType.MimeType, Convert.ToBase64String(buffer, 0, length));\n    //    }\n    //}\n\n    // Replaces <img src=...> urls that refer to images embedded within the message with\n    // \"file://\" urls that the browser control will actually be able to load.\n    void HtmlTagCallback (HtmlTagContext ctx, HtmlWriter htmlWriter)\n    {\n        if (ctx.TagId == HtmlTagId.Image && !ctx.IsEndTag && stack.Count > 0) {\n            ctx.WriteTag (htmlWriter, false);\n\n            // replace the src attribute with a file:// URL\n            foreach (var attribute in ctx.Attributes) {\n                if (attribute.Id == HtmlAttributeId.Src) {\n                    MimePart image;\n                    string url;\n\n                    if (!TryGetImage (attribute.Value, out image)) {\n                        htmlWriter.WriteAttribute (attribute);\n                        continue;\n                    }\n\n                    url = SaveImage (image, attribute.Value);\n\n                    htmlWriter.WriteAttributeName (attribute.Name);\n                    htmlWriter.WriteAttributeValue (url);\n                } else {\n                    htmlWriter.WriteAttribute (attribute);\n                }\n            }\n        } else if (ctx.TagId == HtmlTagId.Body && !ctx.IsEndTag) {\n            ctx.WriteTag (htmlWriter, false);\n\n            // add and/or replace oncontextmenu=\"return false;\"\n            foreach (var attribute in ctx.Attributes) {\n                if (attribute.Name.ToLowerInvariant () == \"oncontextmenu\")\n                    continue;\n\n                htmlWriter.WriteAttribute (attribute);\n            }\n\n            htmlWriter.WriteAttribute (\"oncontextmenu\", \"return false;\");\n        } else {\n            // pass the tag through to the output\n            ctx.WriteTag (htmlWriter, true);\n        }\n    }\n\n    protected override void VisitTextPart (TextPart entity)\n    {\n        TextConverter converter;\n\n        if (body != null) {\n            // since we've already found the body, treat this as an attachment\n            attachments.Add (entity);\n            return;\n        }\n\n        if (entity.IsHtml) {\n            converter = new HtmlToHtml {\n                HtmlTagCallback = HtmlTagCallback\n            };\n        } else if (entity.IsFlowed) {\n            var flowed = new FlowedToHtml ();\n            string delsp;\n\n            if (entity.ContentType.Parameters.TryGetValue (\"delsp\", out delsp))\n                flowed.DeleteSpace = delsp.ToLowerInvariant () == \"yes\";\n\n            converter = flowed;\n        } else {\n            converter = new TextToHtml ();\n        }\n\n        string text = entity.Text;\n\n        body = converter.Convert (entity.Text);\n    }\n\n    protected override void VisitTnefPart (TnefPart entity)\n    {\n        // extract any attachments in the MS-TNEF part\n        attachments.AddRange (entity.ExtractAttachments ());\n    }\n\n    protected override void VisitMessagePart (MessagePart entity)\n    {\n        // treat message/rfc822 parts as attachments\n         attachments.Add (entity);\n        // entity.Message.WriteTo(new FileStream(@\"E:\\stripped.eml\", FileMode.CreateNew));\n    }\n\n    protected override void VisitMimePart (MimePart entity)\n    {\n        // realistically, if we've gotten this far, then we can treat this as an attachment\n        // even if the IsAttachment property is false.\n        attachments.Add (entity);\n    }\n}\n```\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/410/comments",
    "author": "madu2003",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2016-10-07T12:01:39Z",
        "body": "You might be able to map the mime-type of the `MimePart image` to a file extension and use that?\n\ne.g.\n\n``` csharp\nif (image.ContentType.IsMimeType (\"image\", \"jpeg\"))\n    extensiopn = \".jpg\";\nelse if (image.ContentType.IsMimeType (\"image\", \"gif\"))\n    extension = \".gif\";\nelse if (image.ContentType.IsMimeType (\"image\", \"png\"))\n    extension = \".png\";\n```\n"
      },
      {
        "user": "madu2003",
        "created_at": "2016-10-07T12:13:05Z",
        "body": "Thanks for the quick reply.\n\nBut where exactly should I place this code?\n\nI believe image.ContentObject.DecodeTo(output); is the code which it writes the file to the disk. But how can I add the extension here? \n\n```\nstring SaveImage (MimePart image, string url)\n{\n    string fileName = url.Replace (':', '_').Replace ('\\\\', '_').Replace ('/', '_');\n\n    string path = Path.Combine (tempDir, fileName);\n\n    if (!File.Exists (path)) {\n        using (var output = File.Create (path))\n            image.ContentObject.DecodeTo(output);\n    }\n\n    return \"file://\" + path.Replace ('\\\\', '/');\n}\n```\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2016-10-07T12:23:28Z",
        "body": "Once you have the extension, add it to the end of `fileName`.\n\n`fileName += extension;`\n"
      }
    ]
  },
  {
    "number": 402,
    "title": "The remote certificate is invalid according to the validation procedure",
    "created_at": "2016-09-22T07:10:03Z",
    "closed_at": "2016-09-22T11:01:06Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/402",
    "body": "Hello,\n\nI am trying to connect imap with following code but it gives error as: \nThe remote certificate is invalid according to the validation procedure.\n\nusing (var client = new ImapClient())\n                {\n\n```\n                client.Connect(\"imap.mail.com\", 143,false);\n                client.AuthenticationMechanisms.Remove(\"XOAUTH2\");\n                client.Authenticate(username, password);\n```\n\n}\n\nWhen i add the followin certificate validation code. it does get connected.\n//ServicePointManager.ServerCertificateValidationCallback += (o, c, ch, er) => true;\n\nSo, is it safe to use this approach or is there any better approach for this? \n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/402/comments",
    "author": "praachii",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2016-09-22T11:01:06Z",
        "body": "Depends. Do you care if the server is who it claims to be? If you do, then no.\n\nYou have a few options:\n1. Import the server's certificate into your certificate database (not sure how to do this, so you'll have to use Google) and mark the certificate as trusted.\n2. Write a custom callback that checks the certificate's Thumbprint against a known value.\n\nTo get the Thumbprint, you could write a custom callback that uses Console.WriteLine() or something to print out the value.\n\nThat, of course, assumes that you trust that the server is who it says it is when you connect to get the Thumbprint...\n"
      }
    ]
  },
  {
    "number": 399,
    "title": "Interesting exception when try to log in an unsecure imap server",
    "created_at": "2016-09-15T17:34:01Z",
    "closed_at": "2016-09-15T17:52:03Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/399",
    "body": "Hi,\nMy problem is: my code is just working fine on gmail and other secure servers. When I'm connecting to this unsecure imap(without ssl) server it works on my main pc(even if I use a virtual machine(different ip, directly connected to the network card(diferent mac too), it has win 8.1 and working perfectly with the unsecure server).\n\nBut when I'm try to run my code on a different computer it throw this exception:\n\"A call to SSPI failed, see inner exception.\"\nInner exception: \"The Local Security Authority cannot be contacted\"\n\nAny idea what can cause this? How should I workaround this?\n(Sorry for my English)\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/399/comments",
    "author": "Jonas741",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2016-09-15T17:49:48Z",
        "body": "You are trying to connect with SSL. Show me your call to `client.Connect()`.\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2016-09-15T17:52:03Z",
        "body": "Make sure to use:\n\n``` csharp\nclient.Connect (\"hostname\", port, SecureSocketOptions.None);\n```\n\nUsing this should also work unless the server has a broken STARTTLS implementation:\n\n``` csharp\nclient.Connect (\"hostname\", port, SecureSocketOptions.StartTlsWhenAvailable);\n```\n"
      },
      {
        "user": "Jonas741",
        "created_at": "2016-09-15T18:12:48Z",
        "body": "Thanks it looks like helps.\n\nI have used a simple bool in the client.Connect(\"host\",port,xyz.ssl) like this.\n\nThanks for the quick answer, much appreciated.\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2016-09-15T18:31:00Z",
        "body": "What the bool parameter does is it behaves the same as `SecureSocketOptions.StartTlsWhenAvailable`, so maybe your server advertizes that it supports `STARTTLS` but it's broken or something.\n"
      }
    ]
  },
  {
    "number": 398,
    "title": "HtmlPreviewVisitor",
    "created_at": "2016-09-15T11:40:10Z",
    "closed_at": "2016-09-16T01:06:46Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/398",
    "body": "Hi,\n\nI am trying to get inline images in emails to show in html. HtmlPreviewVisitor works fine in my local machine but when its uploaded to the server it does not seem to work. Image tend to show as cid:image\n\nIs it something to do with ToBase64String in the server?\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/398/comments",
    "author": "madu2003",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2016-09-15T12:32:01Z",
        "body": "It sounds like you aren't replacing the src attribute in the img tags.\n\nI would need to see your source code (and a screenshot of what you are seeing?) to provide any more usefulness.\n"
      },
      {
        "user": "madu2003",
        "created_at": "2016-09-15T13:11:59Z",
        "body": "Hi,\n\nThe following is how I call the function.\n\n``` csharp\nuploadpath = ConfigurationManager.AppSettings[\"testuploadpath\"].ToString();\nvar visitor = new Reader.HtmlPreviewVisitor(uploadpath + message.MessageId);\n```\n\n-----------------------------HtmlPreviewVisitor  Class------------------------------\n\n``` csharp\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.DirectoryServices;\nusing Intandem.Data;\nusing System.Threading;\nusing System.Web;\nusing System.Reflection;\nusing System.Data.SqlClient;\nusing System.Web.Hosting;\nusing System.DirectoryServices.ActiveDirectory;\nusing System.IO;\n\nusing MimeKit;\nusing MimeKit.Text;\nusing MimeKit.Tnef;\n\nnamespace Reader\n{\n    #region HtmlPreviewVisitor\n    /// <summary>\n    /// Visits a MimeMessage and generates HTML suitable to be rendered by a browser control.\n    /// </summary>\n    public class HtmlPreviewVisitor : MimeVisitor\n    {\n        List<MultipartRelated> stack = new List<MultipartRelated> ();\n        List<MimeEntity> attachments = new List<MimeEntity> ();\n        readonly string tempDir;\n        string body;\n\n        /// <summary>\n        /// Creates a new HtmlPreviewVisitor.\n        /// </summary>\n        /// <param name=\"tempDirectory\">A temporary directory used for storing image files.</param>\n        public HtmlPreviewVisitor (string tempDirectory)\n        {\n            tempDir = tempDirectory;\n        }\n\n        /// <summary>\n        /// The list of attachments that were in the MimeMessage.\n        /// </summary>\n        public IList<MimeEntity> Attachments {\n            get { return attachments; }\n        }\n\n        /// <summary>\n        /// The HTML string that can be set on the BrowserControl.\n        /// </summary>\n        public string HtmlBody {\n            get { return body ?? string.Empty; }\n        }\n\n        protected override void VisitMultipartAlternative (MultipartAlternative alternative)\n        {\n            // walk the multipart/alternative children backwards from greatest level of faithfulness to the least faithful\n            for (int i = alternative.Count - 1; i >= 0 && body == null; i--)\n                alternative[i].Accept (this);\n        }\n\n        protected override void VisitMultipartRelated (MultipartRelated related)\n        {\n            var root = related.Root;\n\n            // push this multipart/related onto our stack\n            stack.Add (related);\n\n            // visit the root document\n            root.Accept (this);\n\n            // pop this multipart/related off our stack\n            stack.RemoveAt (stack.Count - 1);\n        }\n\n        // look up the image based on the img src url within our multipart/related stack\n        bool TryGetImage (string url, out MimePart image)\n        {\n            UriKind kind;\n            int index;\n            Uri uri;\n\n            if (Uri.IsWellFormedUriString (url, UriKind.Absolute))\n                kind = UriKind.Absolute;\n            else if (Uri.IsWellFormedUriString (url, UriKind.Relative))\n                kind = UriKind.Relative;\n            else\n                kind = UriKind.RelativeOrAbsolute;\n\n            try {\n                uri = new Uri (url, kind);\n            } catch {\n                image = null;\n                return false;\n            }\n\n            for (int i = stack.Count - 1; i >= 0; i--) {\n                if ((index = stack[i].IndexOf (uri)) == -1)\n                    continue;\n\n                image = stack[i][index] as MimePart;\n                return image != null;\n            }\n\n            image = null;\n\n            return false;\n        }\n\n        // Save the image to our temp directory and return a \"file://\" url suitable for\n        // the browser control to load.\n        // Note: if you'd rather embed the image data into the HTML, you can construct a\n        // \"data:\" url instead.\n        //string SaveImage (MimePart image, string url)\n        //{\n        //    string fileName = url.Replace (':', '_').Replace ('\\\\', '_').Replace ('/', '_');\n\n        //    string path = Path.Combine (tempDir, fileName);\n\n        //    if (!File.Exists (path)) {\n        //        using (var output = File.Create (path))\n        //            image.ContentObject.DecodeTo (output);\n        //    }\n\n        //    return \"file://\" + path.Replace ('\\\\', '/');\n        //}\n\n        string SaveImage(MimePart image, string url)\n        {\n            using (var output = new MemoryStream())\n            {\n                image.ContentObject.DecodeTo(output);\n\n                var buffer = output.GetBuffer();\n                int length = (int)output.Length;\n\n                return string.Format(\"data:{0};base64,{1}\", image.ContentType.MimeType, Convert.ToBase64String(buffer, 0, length));\n            }\n        }\n\n        // Replaces <img src=...> urls that refer to images embedded within the message with\n        // \"file://\" urls that the browser control will actually be able to load.\n        void HtmlTagCallback (HtmlTagContext ctx, HtmlWriter htmlWriter)\n        {\n            if (ctx.TagId == HtmlTagId.Image && !ctx.IsEndTag && stack.Count > 0) {\n                ctx.WriteTag (htmlWriter, false);\n\n                // replace the src attribute with a file:// URL\n                foreach (var attribute in ctx.Attributes) {\n                    if (attribute.Id == HtmlAttributeId.Src) {\n                        MimePart image;\n                        string url;\n\n                        if (!TryGetImage (attribute.Value, out image)) {\n                            htmlWriter.WriteAttribute (attribute);\n                            continue;\n                        }\n\n                        url = SaveImage (image, attribute.Value);\n\n                        htmlWriter.WriteAttributeName (attribute.Name);\n                        htmlWriter.WriteAttributeValue (url);\n                    } else {\n                        htmlWriter.WriteAttribute (attribute);\n                    }\n                }\n            } else if (ctx.TagId == HtmlTagId.Body && !ctx.IsEndTag) {\n                ctx.WriteTag (htmlWriter, false);\n\n                // add and/or replace oncontextmenu=\"return false;\"\n                foreach (var attribute in ctx.Attributes) {\n                    if (attribute.Name.ToLowerInvariant () == \"oncontextmenu\")\n                        continue;\n\n                    htmlWriter.WriteAttribute (attribute);\n                }\n\n                htmlWriter.WriteAttribute (\"oncontextmenu\", \"return false;\");\n            } else {\n                // pass the tag through to the output\n                ctx.WriteTag (htmlWriter, true);\n            }\n        }\n\n        protected override void VisitTextPart (TextPart entity)\n        {\n            TextConverter converter;\n\n            if (body != null) {\n                // since we've already found the body, treat this as an attachment\n                attachments.Add (entity);\n                return;\n            }\n\n            if (entity.IsHtml) {\n                converter = new HtmlToHtml {\n                    HtmlTagCallback = HtmlTagCallback\n                };\n            } else if (entity.IsFlowed) {\n                var flowed = new FlowedToHtml ();\n                string delsp;\n\n                if (entity.ContentType.Parameters.TryGetValue (\"delsp\", out delsp))\n                    flowed.DeleteSpace = delsp.ToLowerInvariant () == \"yes\";\n\n                converter = flowed;\n            } else {\n                converter = new TextToHtml ();\n            }\n\n            string text = entity.Text;\n\n            body = converter.Convert (entity.Text);\n        }\n\n        protected override void VisitTnefPart (TnefPart entity)\n        {\n            // extract any attachments in the MS-TNEF part\n            attachments.AddRange (entity.ExtractAttachments ());\n        }\n\n        protected override void VisitMessagePart (MessagePart entity)\n        {\n            // treat message/rfc822 parts as attachments\n             attachments.Add (entity);\n            // entity.Message.WriteTo(new FileStream(@\"E:\\stripped.eml\", FileMode.CreateNew));\n        }\n\n        protected override void VisitMimePart (MimePart entity)\n        {\n            // realistically, if we've gotten this far, then we can treat this as an attachment\n            // even if the IsAttachment property is false.\n            attachments.Add (entity);\n        }\n    }\n    #endregion\n}\n```\n\n---\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2016-09-15T14:49:06Z",
        "body": "FWIW, your `SaveImage()` method returns a string instead of saving the image to a temp directory, so you don't actually need a temp directory for the HtmlPreviewVisitor .ctor.\n\nHave you tried using the other (commented out) implementation of `SaveImage()` instead? Maybe whatever browser you are using can't handle embedded image data?\n"
      },
      {
        "user": "madu2003",
        "created_at": "2016-10-19T12:18:46Z",
        "body": "Hi jstedfast,\n\nSorry to reply to a closed thread. But I am still having problems with reading embedded images. I tested the HtmlPreviewVisitor function in one of our test servers and I read emails from outlook.office365.com. It saved the images all good using the SaveImage function commented above.\n\nBut when I implemented this on a client environment it failed to read the embedded images in emails. \nThe email message body shows cid:myimagecid like format.\n\nHow do I make sure whether it hits the SaveImage function or not? Is there a log file which writes stuff when reading emails? or is it the mail server version /type where mailkit fails to recognise embedded images?\n\nThanks.\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2016-10-19T12:29:09Z",
        "body": "You'll have to add your own logging to the HtmlPreviewVisitor.\n"
      },
      {
        "user": "madu2003",
        "created_at": "2016-10-21T15:31:43Z",
        "body": "Ok, I think I know what basically is causing the problem. I added some logging and came across the code lines below.\n\nIn the HtmlPreviewVisitor class, the part where it checks for  -- if (entity.IsHtml) is false when the client uses outlook desktop app. When this happens it does not save the embedded images. But if the client uses outlook 360 browser app to embed images it's saving ok. Is there a way which I could read when the user embeds images in outlook desktop app? Sorry I am really struggling to get this working desperately. Thanks.\n\nprotected override void VisitTextPart (TextPart entity)\n        {\n            TextConverter converter;\n            LogWrite(\"VisitTextPart\");\n            if (body != null) {\n                // since we've already found the body, treat this as an attachment\n                attachments.Add (entity);\n                return;\n            }\n\n```\n        if (entity.IsHtml) {\n            converter = new HtmlToHtml {\n                HtmlTagCallback = HtmlTagCallback\n            };\n        } else if (entity.IsFlowed) {\n            var flowed = new FlowedToHtml ();\n            string delsp;\n\n            if (entity.ContentType.Parameters.TryGetValue (\"delsp\", out delsp))\n                flowed.DeleteSpace = delsp.ToLowerInvariant () == \"yes\";\n\n            converter = flowed;\n        } else {\n            converter = new TextToHtml ();\n        }\n\n        string text = entity.Text;\n\n        body = converter.Convert (entity.Text);\n    }\n```\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2016-10-21T15:58:01Z",
        "body": "Well, what is the MIME-type of the entity? Is it RTF? MimeKit doesn't have an RTF parser so you'll have to write your own.\n"
      },
      {
        "user": "madu2003",
        "created_at": "2016-10-21T16:10:02Z",
        "body": "Hi , see below. Using the ProtocolLogger it gave me the following logs. I had to delete some sensitive info. Does this look like RTF?\n\nS: --_004_4A65F7ACB3F1F042AD0C44CC4FD7DAAF620CCEE4UKIXEEXC901ukkw_--\nS:  UID 348693)\nS: A00000008 OK FETCH completed.\nC: A00000009 UID FETCH 348694 (BODY.PEEK[])\nS: \\* 4045 FETCH (BODY[] {86194}\nS: Received: from <deleted> ([fe80::3589:3001:1b06:e41c]) by\nS:  <deleted> ([fe80::d5c:a3c9:ce62:1ff7%38]) with mapi id\nS:  14.03.0301.000; Fri, 21 Oct 2016 15:04:52 +0100\nS: From:  <deleted>\nS: To: <deleted>\nS: Subject: TEST EMAIL\nS: Thread-Topic: TEST EMAIL\nS: Thread-Index: AdIrpAzoBJ2OFEEeSreFhAwAXMpnyQ==\nS: Date: Fri, 21 Oct 2016 15:04:51 +0100\nS: Message-ID:\nS:  <34CEEB1A04F1B449A7276AA0CE732652FC448217@<deleted>>\nS: Accept-Language: en-GB, en-US\nS: Content-Language: en-US\nS: X-MS-Exchange-Organization-AuthAs: Internal\nS: X-MS-Exchange-Organization-AuthMechanism: 04\nS: X-MS-Exchange-Organization-AuthSource: <deleted>\nS: X-MS-Has-Attach: yes\nS: X-MS-Exchange-Organization-SCL: -1\nS: X-MS-TNEF-Correlator:\nS: x-exclaimer-md-config: b2bb2c14-5fe2-4a3d-abf2-8daa5fa7b89b\nS: x-originating-ip: [10.216.182.245]\nS: Content-Type: multipart/related;\nS:  boundary=\"_002_34CEEB1A04F1B449A7276AA0CE732652FC448217UKWATEXC901ukkw_\";\nS:  type=\"text/plain\"\nS: MIME-Version: 1.0\nS: \nS: --_002_34CEEB1A04F1B449A7276AA0CE732652FC448217UKWATEXC901ukkw_\nS: Content-Type: text/plain; charset=\"us-ascii\"\nS: \nS: TEST EMAIL\nS: \nS: \nS: [cid:image001.png@01D22BAC.7834C820]\nS: \nS: --_002_34CEEB1A04F1B449A7276AA0CE732652FC448217UKWATEXC901ukkw_\nS: Content-Type: image/png; name=\"image001.png\"\nS: Content-Description: image001.png\nS: Content-Disposition: inline; filename=\"image001.png\"; size=61817;\nS:  creation-date=\"Fri, 21 Oct 2016 14:04:51 GMT\";\nS:  modification-date=\"Fri, 21 Oct 2016 14:04:51 GMT\"\nS: Content-ID: image001.png@01D22BAC.7834C820\nS: Content-Transfer-Encoding: base64\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2016-10-21T17:16:09Z",
        "body": "Nope, it's plain text.\n"
      }
    ]
  },
  {
    "number": 388,
    "title": "Email not sent in RELEASE mode",
    "created_at": "2016-08-20T13:20:27Z",
    "closed_at": "2016-08-20T14:10:12Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/388",
    "body": "hey there folks - \nI have everything up and going and emails are being sent as expected in the DEBUG mode.\nhowever, when in the RELEASE mode, emails aren't  making it to the destination.\nI'm rolled back and started using the simplest mailkit example but, still... in the RELEASE mode it's not working.\nAny suggestion would be much appreciated.\nHere's the copy of what I'm using. \n\n```\n        var message = new MimeMessage();\n        message.From.Add(new MailboxAddress(\"EasyA Tutor\", \"xxxxxxxx@gmail.com\"));\n        message.To.Add(new MailboxAddress(\"Student\", \"yyyyyyyyy@gmail.com\"));\n        message.Subject = EmailProperties.Subject;\n        message.Body = new TextPart(\"plain\")\n        {\n            Text = @\"Hey there\n        };\n        using (var client = new SmtpClient())\n        {\n            client.Connect(\"smtp.gmail.com\", 587, false);\n            // Note: since we don't have an OAuth2 token, disable\n            // the XOAUTH2 authentication mechanism.\n            client.AuthenticationMechanisms.Remove(\"XOAUTH2\");\n\n            // Note: only needed if the SMTP server requires authentication\n            client.Authenticate(\"falseusername\", \"falsepassword\");\n            client.Send(message);\n            client.Disconnect(true);\n        }\n```\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/388/comments",
    "author": "jkalanda",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2016-08-20T14:10:12Z",
        "body": "I just tested this locally and it works fine when built in RELEASE mode for me. All nuget packages are built in RELEASE mode, so I know that it works for other people as well.\n\nI really have no idea what to tell you. ¯\\_(ツ)_/¯\n"
      },
      {
        "user": "jkalanda",
        "created_at": "2016-08-20T14:15:14Z",
        "body": "Hey Jeff, thanks for checking.\nCan you at least suggest some ideas? \nWhat could be the difference between DEBUG and RELEASE modes.\nI don't think google smtp configuration has anything to do with it. \nIf it did... it wouldn't be working in the DEBUG mode either. \n"
      },
      {
        "user": "jstedfast",
        "created_at": "2016-08-20T16:50:02Z",
        "body": "I can't think of anything that would be different between debug and release modes except that one has debugging symbols and the other doesn't\n"
      },
      {
        "user": "jkalanda",
        "created_at": "2016-08-21T13:42:47Z",
        "body": "Jeff, what a trooper. You were incredibly helpful. \nI learned I shall not ask anything on this thread again.\njust for the folks that spent a bit of time to figure out why this was happening, here's the solution:\njust add <uses-permission android:name=\"android.permission.INTERNET\" /> in your manifest file.\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2016-08-21T19:03:26Z",
        "body": "I don't think I was that helpful :-\\\n\nThanks for posting the solution, though! That might help others in your situation.\n"
      },
      {
        "user": "NirajW-Infogain",
        "created_at": "2021-12-01T10:29:49Z",
        "body": "@jkalanda  I am working in UWP application. And I am facing same issue - email not sent in RELEASE mode. Could you please help me in providing more details, as to what and how do I add into manifest file? \r\nThank You.\r\n"
      }
    ]
  },
  {
    "number": 384,
    "title": "Can't Delete message from GMail",
    "created_at": "2016-08-17T16:36:45Z",
    "closed_at": "2016-08-17T21:26:42Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/384",
    "body": "Hello. I trashed a message and tried to Expunge it. But message still is in trash folder. Code: \n\n```\nvar result = mailFolder.MoveTo(uniqueIds, trashFolder);\nmailFolder.CloseAsync(true);\nif (trashFolder.IsOpen) trashFolder.Close(false);\ntrashFolder.Open(MailKit.FolderAccess.ReadWrite);\ntrashFolder.SetFlags(result.Source, MailKit.MessageFlags.Deleted, true);\ntrashFolder.Expunge(result.Source);\ntrashFolder.Close(true);\n```\n\nHow can i expunge the trash folder?\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/384/comments",
    "author": "yuribb",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2016-08-17T21:26:42Z",
        "body": "`result.Source` refers to the UIDs in the `mailFolder` and not the `trashFolder`. You want to use `result.Destination` when settings flags/expunging the `trashFolder`.\n\nHope that helps.\n"
      },
      {
        "user": "DavidKarlas",
        "created_at": "2016-08-18T06:43:30Z",
        "body": "Also what looks kind of wrong...\n`mailFolder.CloseAsync(true);` You need `await mailFolder.CloseAsync(true);` or ugly `mailFolder.CloseAsync(true).Wait();`\n"
      },
      {
        "user": "yuribb",
        "created_at": "2016-08-18T11:58:37Z",
        "body": "Thank you for answer. It is really helped me.\n"
      }
    ]
  },
  {
    "number": 379,
    "title": "Search query doesn't work when additional parameters are added inside loop",
    "created_at": "2016-08-09T22:43:52Z",
    "closed_at": "2016-08-10T08:15:10Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/379",
    "body": "```\nI have a strange issue with mailkit:\n\n\n        string[] fromAuthors = new string[] { \"@something.com\", \"@something2.com\", \"@somethingelse.net\" };\n\n        SearchQuery query = SearchQuery.FromContains(fromAuthors[0]);\n        for (int i = 1; i < fromAuthors.Length; i++)\n        {\n            query.Or(SearchQuery.FromContains(fromAuthors[i]));\n        }\n```\n\nThis doesn't work, `inbox.Search(query)` returns results for only the first entry  (in this case \"@something.com\"), everything else is being ignored.\n\nWhile this:\n\n```\n     SearchQuery query = SearchQuery.FromContains(fromAuthors[0]).Or(SearchQuery.FromContains(fromAuthors[1])) \n```\n\nworks fine, and results for both emails are being returned...\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/379/comments",
    "author": "gholol",
    "comments": [
      {
        "user": "DavidKarlas",
        "created_at": "2016-08-10T07:06:03Z",
        "body": "What you probably want to change is line inside for loop.\nFrom\n\n```\nquery.Or(SearchQuery.FromContains(fromAuthors[i]));\n```\n\nto\n\n```\nquery = query.Or(SearchQuery.FromContains(fromAuthors[i]));\n```\n"
      },
      {
        "user": "gholol",
        "created_at": "2016-08-10T08:14:55Z",
        "body": "Yeah, that worked... so it was my fault after all. \nThanks for help!\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2016-08-10T10:43:07Z",
        "body": "Thanks David :)\n"
      }
    ]
  },
  {
    "number": 375,
    "title": "Email start date",
    "created_at": "2016-07-22T12:31:05Z",
    "closed_at": "2016-07-22T12:41:25Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/375",
    "body": "Hi ,\n\nHow do you read an email account (Imap) from a particular time forward? I am using the following code. But this reads all emails on a particular day. I need to update the time read so that I do not have to read any previous emails from a time on a single day.\n\nDateTime ReadSDate = System.DateTime.Today;\nvar query = SearchQuery.DeliveredAfter(ReadSDate);\nforeach (var uid in inbox.Search(query))\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/375/comments",
    "author": "madu2003",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2016-07-22T12:41:25Z",
        "body": "The IMAP protocol does not support searching on a particular time of the day, it only supports searching based on a day.\n\nIf you want to read only messages delivered on a day after a certain specified time, you'll need to do the search you are currently doing and then further filter the results down by doing manual date comparisons.\n\nfor example:\n\n``` csharp\nvar results = inbox.Search (SearchQuery.DeliveredAfter (DateTime.Today));\nvar uids = new UniqueIdSet ();\n\nforeach (var info in inbox.Fetch (results, MessageSummaryItems.InternalDate | MessageSummaryItems.UniqueId)) {\n    if (info.InternalDate.Value >= searchDateTime)\n        uids.Add (info.UniqueId);\n}\n\n// now `uids` is the set of messages that match what you are looking for...\n```\n"
      },
      {
        "user": "madu2003",
        "created_at": "2016-07-22T13:16:55Z",
        "body": "Thanks, Jeffrey. That worked nicely....! \n\n```\nOn Friday, July 22, 2016 1:41 PM, Jeffrey Stedfast <notifications@github.com> wrote:\n```\n\n Closed #375.—\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub, or mute the thread.  \n"
      }
    ]
  },
  {
    "number": 373,
    "title": "Which is the better Secure Socket Option?",
    "created_at": "2016-07-15T14:28:58Z",
    "closed_at": "2016-07-15T14:52:36Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/373",
    "body": "I am at present using SslOnConnect for my SMTP connections.  One user though is reporting that they can only connect when using port 465 and that it fails if they attempt to use 25.  I'm trying to check but at present they are adamant that they have security running on port 25.\n\nI know I'm not doing anything differently on the different ports and I'm pretty sure from the MailKit code that it isn't either but it has got me thinking about the SslOnConnect option.\n\nWhich is the better more secure one to use out of SslOnConnect and StartTls?\n\nFrom reading the comments SslOnConnect should be the better one as it should encrypt immediately.\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/373/comments",
    "author": "Saurbaum",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2016-07-15T14:52:36Z",
        "body": "There isn't really a \"better\". SslOnConnect when used with SMTP is generally for port 465 and was historically used with SMTP servers that did not support SSL out of the box. What admins did was to wrap the SMTP port with another program that did the SSL encryption for the SMTP daemon process. This is known as \"SSL-wrapping\".\n\nLater, SMTP server implementations started getting SSL support natively and this is enabled in the protocol usually as soon as the client reads the server greeting and queries the capabilities to check if the server supports the STARTTLS extension.\n\nThe greeting and list of initial capabilities are perfectly safe to allow transmission in clear text, so it doesn't matter that those bits aren't encrypted. Where you want encryption is authentication and sending of the content.\n\nThe STARTTLS method is most often used with port 25 and/or 587 if the server supports it.\n\nNote, however, that the admin can run the SMTP server on _any_ port with _any_ configuration (SslOnConnect or via STARTTLS or none of the above) he or she wants. The ports I mention are just a general rule of thumb.\n\nHope that helps.\n"
      },
      {
        "user": "Saurbaum",
        "created_at": "2016-07-15T14:58:24Z",
        "body": "Thanks that's pretty much exactly what I was looking for.  By the sound of it I should use StartTLS because it's the more modern option so it's more likely that's what I'll encounter in the wild.\n\nDoes it also mean that the SslOnConnect can fail with \"The handshake failed due to an unexpected packet format.\" if the server is not expecting encryption until it has delivered its greetings and capabilities?  If so that explains what the customer is seeing.\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2016-07-15T20:39:11Z",
        "body": "Yes.\n\nSslOnConnect and StartTLS are both pretty common in the wild, so be mindful of that...\n"
      }
    ]
  },
  {
    "number": 365,
    "title": "HTML body",
    "created_at": "2016-06-29T09:01:34Z",
    "closed_at": "2016-06-29T12:11:22Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/365",
    "body": "Is it possibile to send html body email?\n\nThanks\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/365/comments",
    "author": "R00T88",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2016-06-29T12:11:22Z",
        "body": "Yes. Check the docs on the MimeKit.BodyBuilder class for an easy way of constructing HTML messages.\n"
      }
    ]
  },
  {
    "number": 364,
    "title": "List AppleMail Attachments as Attachments",
    "created_at": "2016-06-28T12:14:57Z",
    "closed_at": "2016-06-28T13:21:00Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/364",
    "body": "Since Apple Mail embeds their attachment pictures in E-Mails it is not possible to grab them with\n\n`message.Attachments.OfType<MimePart>()`\n\nis there any way to make this happen?\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/364/comments",
    "author": "invertium",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2016-06-28T13:21:00Z",
        "body": "I don't know what you mean by \"embedding\". I assume you mean that they are just MIME parts like any other attachment except that perhaps they do not have a `Content-Disposition: attachment` header.\n\nIf that's the case, just use `message.BodyParts.OfType<MimePart> ()` and filter out any MIME parts that you don't want.\n\nFor example, maybe this will work for your needs:\n\n``` csharp\nmessage.BodyParts.OfType<MimePart> ().Where (x => !string.IsNullOrEmpty (x.ContentType.Name));\n```\n\nThe Attachments property does something very similar, except that it checks the `ContentDisposition` property.\n"
      }
    ]
  },
  {
    "number": 363,
    "title": "No way to verify anonymous smtp connection",
    "created_at": "2016-06-27T08:30:33Z",
    "closed_at": "2016-06-27T12:55:17Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/363",
    "body": "MailKit seem to lack a way to detect if anonymous email sending via SMTP are allowed by the server. Some servers allow anonymous smtp connections, where you can send an email without authenticating as a user first. If a server will relay anonymously is usually restricted by the network you are on or even the from address. It also may relay only internally without authentication. The anonymous authentication method is not necessarily mentioned in the AuthenticationMechanisms property. I can see no way to detect that anonymous sending is permitted without actually sending an email. If I could send RCPT to my from address and see what response I got (OK/ERR) and then abort the sending then maybe that would solve the problem, but I can find no way to send low level messages in MailKit as the SendMessage() method used internally is not available through a public interface, it seems. Maybe I could use connect with a socket to do low level communications once properly connected by MailKit, but it seems kind of sketchy and I have found no info on this.\nMailKit seem to lack a way to detect if anonymous email sending via SMTP are allowed by the server. Some servers allow anonymous smtp connections, where you can send an email without authenticating as a user first. If a server will relay anonymously is usually restricted by the network you are on or even the from address. It also may relay only internally without authentication. The anonymous authentication method is not necessarily mentioned in the AuthenticationMechanisms property. I can see no way to detect that anonymous sending is permitted without actually sending an email. If I could send RCPT to my from address and see what response I got (OK/ERR) and then abort the sending then maybe that would solve the problem, but I can find no way to send low level messages in MailKit as the SendMessage() method used internally is not available through a public interface, it seems. Maybe I could use connect with a socket to do low level communications once properly connected by MailKit, but it seems kind of sketchy and I have found no info on this.\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/363/comments",
    "author": "eriknuds",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2016-06-27T12:55:17Z",
        "body": "If the server allows anonymous relays, then you don't need to authenticate first.\n\nYou can try sending a message, and, if that fails with (I think) an UnauthorizedException, you know you need to authenticate first.\n"
      },
      {
        "user": "eriknuds",
        "created_at": "2016-06-28T16:59:21Z",
        "body": "Yeah, thanks for the suggestion, I might have to do it that way, although I'd prefer to just issue the RCPT TO <my_own_from_address> to see if sending was allowed at all. Will the internal SendMesssage() function or some other low level access to the SMTP stream be available in the future? Or would it be ok to give a stream to MailKit and then use that stream to issue SMTP protocol commands like RCPT TO and reading the response - or would that conflict with how MailKit is using the stream? Why else is there a stream constructor for the connection? I have found no examples using it...\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2016-06-29T12:10:01Z",
        "body": "The stream .ctor is to allow you to connect via a proxy.\n\nCalling `client.Send()` will work the same as you sending a RCPT TO command. There's no good reason to want to send RCPT TO manually. If the RCPT TO command fails due to authorization being needed, MailKit will throw the proper exception which you can catch to know it's needed. It would be no different from you manually sending RCPT TO and then parsing the response and branching based on what you get back.\n"
      },
      {
        "user": "eriknuds",
        "created_at": "2016-06-29T12:27:25Z",
        "body": "I want to verify the SMTP server/user/pass settings when a user enters the configuration settings in the application, not maybe two weeks later when the user actually wants to send an email for the first time - and at the time of configuration I don't actually want to send a dummy email, if I can avoid it. By just issuing the RCPT TO instead of really attempting to send an actual email, I can give the user feedback immediately without unwanted external effects. Authenticate() will fail even if the server doesn't require authentication. Not sure if that reason is good enough for you, but it's good enough for me;-)\n"
      },
      {
        "user": "eriknuds",
        "created_at": "2016-06-29T12:30:41Z",
        "body": "A public bool client.CanSendTo(string addr) would be nice, but if that's out of the question I'm looking for alternatives...\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2016-06-30T23:12:18Z",
        "body": "I'll think about this, but CanSendTo() will need a from address as well.\n"
      },
      {
        "user": "eriknuds",
        "created_at": "2016-07-01T06:39:40Z",
        "body": "Yes:-)\n"
      }
    ]
  },
  {
    "number": 352,
    "title": "redirect protocol logging to a tracesource?",
    "created_at": "2016-06-08T12:46:09Z",
    "closed_at": "2016-06-08T12:56:20Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/352",
    "body": "Can we redirect protocol logging to a tracesource. The tracesource gives me the flexibility define my tracing destination based on configuration. Any options to this end?\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/352/comments",
    "author": "deostroll",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2016-06-08T12:56:20Z",
        "body": "You could implement your own IProtocolLogger to redirect stuff in any way you want. There's only 2 or 3 methods, so it should be fairly trivial.\n"
      }
    ]
  },
  {
    "number": 350,
    "title": "Imap Idle Events are not firing using Windows service",
    "created_at": "2016-06-08T02:07:14Z",
    "closed_at": "2016-06-08T10:21:00Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/350",
    "body": "I make use of Imap idle events like CountChanged and Messages Arrived. Both are working fine  in C# Console Application  but it does not by C# Windows Service.\n\nCan you tell me the way forward approach ASAP as its holding my current project\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/350/comments",
    "author": "prathhi",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2016-06-08T10:21:00Z",
        "body": "Does it make sense to you that it works with a console app but not in a Windows Service app? You must not be doing something right, but I can't tell you what based on what you've told me.\n"
      },
      {
        "user": "prathhi",
        "created_at": "2016-06-14T23:34:00Z",
        "body": "Below is the code snippet which was working properly in console ap but not in windows service. As I said beforeMessage arrive arrived isnot firing as and when the Email arrives to the Inbox.\n\n```\n        using (ImapClient Client = new ImapClient())\n        {\n            Client.Connect(host, port, MailKit.Security.SecureSocketOptions.StartTls);\n            // Note: since we don't have an OAuth2 token, disable\n            // the XOAUTH2 authentication mechanism.\n            Client.AuthenticationMechanisms.Remove(\"XOAUTH2\");\n\n            Client.Authenticate(username, password);\n\n            // The Inbox folder is always available on all IMAP servers...\n            var inbox = Client.Inbox;\n\n            inbox.Open(FolderAccess.ReadWrite);\n            IEnumerable<UniqueId> MessageList = inbox.Search(SearchQuery.All);\n\n            // keep track of the messages \n            IList<IMessageSummary> messages = null;                 \n            int count = 0;\n\n\n            if (Client.Inbox.Count > 0)\n            {\n                messages = Client.Inbox.Fetch(0, -1, MessageSummaryItems.Full | MessageSummaryItems.UniqueId).ToList(); \n                count = messages.Count; \n            }\n\n\n            Client.Inbox.MessagesArrived += (sender, e) =>\n            {\n                var folder = (ImapFolder)sender;\n                if (folder.Count > count)\n                {\n                    var Mailclient = new ImapClient();\n                    Mailclient.Connect(host, port, MailKit.Security.SecureSocketOptions.Auto);\n                    //Mailclient.Connect(\"imap.thewestpacgroup.com.au\", 143, MailKit.Security.SecureSocketOptions.StartTls);\n                    Mailclient.AuthenticationMechanisms.Remove(\"XOAUTH2\");\n                    Mailclient.Authenticate(username, password);\n                    Mailclient.Inbox.Open(FolderAccess.ReadOnly);\n                    var summaries = Mailclient.Inbox.Fetch(count, folder.Count - 1, MessageSummaryItems.Envelope | MessageSummaryItems.Body | MessageSummaryItems.All);\n                    for (var i = count; i < folder.Count; i++)\n                    {\n                        MimeMessage msg = Mailclient.Inbox.GetMessage(count);\n                        Console.WriteLine(msg.GetTextBody(MimeKit.Text.TextFormat.Text));\n\n\n                    }\n                    // New messages have arrived in the folder. \n                    Console.WriteLine(\"{0}: {1} new messages have arrived.\", folder, folder.Count - count);\n\n                    // Note: your first instict may be to fetch these new messages now, but you cannot do \n                    // that in an event handler (the ImapFolder is not re-entrant).                         \n                }\n            };\n```\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2016-06-15T01:37:19Z",
        "body": "In your callback, you are inconsistent between using `folder` and `Mailclient.Inbox`.\n\nYou need to always use `Mailclient.Inbox` in the callback.\n"
      },
      {
        "user": "prathhi",
        "created_at": "2016-06-15T02:32:20Z",
        "body": "But Client.Inbox.MessagesArrived event is tagged to main client. If I remove the whole code under MessagesArrived event also, event was not firing in windows service. Is there any work aorund for this?\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2016-06-15T09:53:14Z",
        "body": "You aren't making any sense.\n\nLook here:\n\n``` csharp\nfor (var i = count; i < folder.Count; i++)\n{\n    MimeMessage msg = Mailclient.Inbox.GetMessage(count);\n```\n\nWhy are you iterating over folder.Count when you are getting messages from Mailclient.Inbox?\n\nThat's what I'm talking about.\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2016-06-15T09:57:37Z",
        "body": "Also, as soon as you close the using block for `Client`, you will get no more events because the `Client` will be disposed.\n"
      },
      {
        "user": "prathhi",
        "created_at": "2016-08-17T12:45:44Z",
        "body": "When I try to make use of below code in windows service MessagesArrived event is not firing as and when Email arrives to inbox\n\nusing (ImapClient Client = new ImapClient())\n        {\n            Client.Connect(host, port, MailKit.Security.SecureSocketOptions.StartTls);\n            // Note: since we don't have an OAuth2 token, disable\n            // the XOAUTH2 authentication mechanism.\n            Client.AuthenticationMechanisms.Remove(\"XOAUTH2\");\n\n```\n        Client.Authenticate(username, password);\n\n        // The Inbox folder is always available on all IMAP servers...\n        var inbox = Client.Inbox;\n\n        inbox.Open(FolderAccess.ReadWrite);\n        IEnumerable<UniqueId> MessageList = inbox.Search(SearchQuery.All);\n\n        // keep track of the messages \n        IList<IMessageSummary> messages = null;                 \n        int count = 0;\n\n\n        if (Client.Inbox.Count > 0)\n        {\n            messages = Client.Inbox.Fetch(0, -1, MessageSummaryItems.Full | MessageSummaryItems.UniqueId).ToList(); \n            count = messages.Count; \n        }\n\n\n        Client.Inbox.MessagesArrived += (sender, e) =>\n        {\n```\n\nLogger.Log(LogOption.INFO, \"Process started  under Message Arrived Event\"); \n\n//do Something\nLogger.Log(LogOption.INFO, \"Process Completed under Message Arrived Event\"); \n};\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2016-08-17T13:57:01Z",
        "body": "Use the CountChanged event instead.\n"
      },
      {
        "user": "prathhi",
        "created_at": "2016-08-18T09:43:31Z",
        "body": "I have tried this Event but its not working. Do you  know any alternative way for this?\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2016-08-18T11:23:14Z",
        "body": "If the CountChanged event is not working, then it means that the IMAP server is not sending a status notification about the message count changing in the folder (which is the only way the IMAP server signifies that any new mail may have arrived).\n\nIt may be an IMAP server bug or it may be that the mail hasn't arrived yet, or it has been delivered to another folder, etc.\n\nAlso it should probably be noted that not all IMAP servers that support IDLE will emit events for everything that is supported in IDLE. For example, GMail does not emit events for some flag changes (I think), even though IDLE supports that.\n\nThis would be the first time I've heard of a server not notifying the client of an EXISTS change, but who knows, I suppose it could happen.\n"
      },
      {
        "user": "prathhi",
        "created_at": "2016-08-19T11:35:16Z",
        "body": "Few facts about our applicaiton\n1. Using console application both events (MessageArrived and CountChanged) are getting triggered when a new email arrives to Inbox folder.\n2. Using Windows service,its behaving differellty as I said before when the Email arrives to Inbox.\n\nSo I think there is slight difference between windows service and console application IMAP Event Handling.\n\ncan you tell me the sequence how exactly the IMAP Server attaches the client and triggers the event Can we have any logging for IMAP Idle  event acess?\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2016-08-19T13:29:21Z",
        "body": "You can log the protocol using:\n\n``` csharp\nvar client = new ImapClient (new ProtocolLogger (\"imap.log\"));\n```\n"
      }
    ]
  },
  {
    "number": 346,
    "title": "Unable to access pulbic folder",
    "created_at": "2016-06-02T14:18:29Z",
    "closed_at": "2016-06-02T15:00:58Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/346",
    "body": "Hi im trying to append email to a public folder but i'm unable to find it using mailkit\n\nclient.GetFolder (client.PersonalNamespaces[0]).GetSubfolders ())\n\n but this only returns 11 folders\n\n{Calander}\n{Contacts}\n{Deleted Items}\n{Drafts}\n{INBOX}\n{Journal}\n{Junk Email}\n{Notes}\n{Outbox}\n{Sent Items}\n{Tasks}\n\nIs there a special way of referencing them?\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/346/comments",
    "author": "truane",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2016-06-02T15:00:58Z",
        "body": "Exchange does not support public folders via IMAP, unfortunately. You'll need to use another library :(\n"
      }
    ]
  },
  {
    "number": 343,
    "title": "Port 0 fails to connect to IMAP",
    "created_at": "2016-05-23T19:13:13Z",
    "closed_at": "2016-05-23T19:49:32Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/343",
    "body": "When I set port to 0 it fails to connect to IMAP.\n\nclient.Connect(\"imap.gmail.com\", 0);\n\n{\"A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond 209.85.145.108:143\"}\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/343/comments",
    "author": "navarretejulian",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2016-05-23T19:49:32Z",
        "body": "That's because imap.gmail.com does not run a service on port 143.\n\nYou need to connect via SSL, but you are trying to connect w/o SSL.\n\nThe behavior you are seeing is the expected behavior.\n"
      },
      {
        "user": "navarretejulian",
        "created_at": "2016-05-23T20:02:34Z",
        "body": "I selected port 0 not 143. I though port 0 was auto. It should select the correct port.\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2016-05-23T20:42:16Z",
        "body": "port 0 means the default port for the type of connection you are making, which in your case is port 143 (you didn't ask to connect via SSL).\n"
      }
    ]
  },
  {
    "number": 339,
    "title": "error on handshake with smtp.live.com",
    "created_at": "2016-05-14T17:02:44Z",
    "closed_at": "2016-05-15T14:03:51Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/339",
    "body": "Hi , \nthere is problem on connect to smtp.live.com on dnxcore5 .\n\nmy code is : \n\n```\nusing (var client = new SmtpClient())\n                {\n                    client.Connect(\"smtp.live.com\", 587, true);\n\n                    client.AuthenticationMechanisms.Remove(\"XOAUTH2\");\n\n                    // Note: only needed if the SMTP server requires authentication\n                    client.Authenticate(\"xxxx\", \"xxxx\");\n\n                    await client.SendAsync(message);\n                    client.Disconnect(true);\n                }\n```\n\nthe error is :\n\n> The handshake failed due to an unexpected packet format.\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/339/comments",
    "author": "SHAliakbari",
    "comments": [
      {
        "user": "SHAliakbari",
        "created_at": "2016-05-15T12:59:22Z",
        "body": "I found solution \nconnect method should be : \n\n`client.Connect(\"smtp-mail.outlook.com\", 587,  MailKit.Security.SecureSocketOptions.StartTls);`\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2016-05-15T14:03:51Z",
        "body": "Glad you figured it out. Let me know if you have any other questions.\n"
      }
    ]
  },
  {
    "number": 338,
    "title": "Move message to folder but also update it subject",
    "created_at": "2016-05-13T12:59:23Z",
    "closed_at": "2016-05-13T13:22:12Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/338",
    "body": "I know i can open a folder\n<code> folder.Open(FolderAccess.ReadWrite); </code> \ncan read a message \n<code> MimeMessage message = folder.GetMessage(messageID); </code> \nand i can move that meassage to another folder\n<code> folder.MoveTo(messageID, _client.GetFolder(\"newFolder\")); </code> \n\nIs there any way I can change the email subject line before I move it to the new folder?\nlike - folder.SetMessage(messageID,message)\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/338/comments",
    "author": "truane",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2016-05-13T13:22:12Z",
        "body": "The only way to do that is something like this:\n\n``` csharp\nfolder.Open (FolderAccess.ReadWrite);\nvar message = folder.GetMessage (uniqueId);\nmessage.Subject = \"Changed subject\";\nvar newFolder = client.GetFolder (\"newFolder\");\nnewFolder.Append (message);\n```\n"
      },
      {
        "user": "truane",
        "created_at": "2016-05-13T13:48:06Z",
        "body": "Thank you\n\nCan you also confirm the messagID is always the same for the same message.\ni.e if a close the connection and open it a hour later and try to get same message with the id I used before it would return the same message? As long as it hasn't been deleted or moved.\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2016-05-13T14:18:18Z",
        "body": "Yes and no.\n\nThe UID (note: it's not a message-id, a message-id is completely different and not guaranteed to be unique) will be the same between connections IF AND ONLY IF the `folder.UidValidity` value is the same between connections (it almost always is, but if the server crashes and the disk gets corrupt and the admin has to restore from a backup or something, the UidValidity will probably change).\n"
      },
      {
        "user": "truane",
        "created_at": "2016-05-31T14:36:11Z",
        "body": "One last question \n\n```\nvar newMessageID = newFolder.Append(message, MessageFlags.Seen);\nif (onError && newMessageID != null) \nnewFolder.AddFlags((UniqueId)newMessageID, MessageFlags.Flagged, true);\n\n```\n\nOn some systems the newMessageID is comming back as null can i set MessageFlags.Seen and MessageFlags.Flagged on the append at same time?\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2016-05-31T15:11:43Z",
        "body": "Yes.\n\n``` csharp\nnewFolder.Append(message, MessageFlags.Seen | MessageFlags.Flagged);\n```\n"
      },
      {
        "user": "truane",
        "created_at": "2016-05-31T15:23:17Z",
        "body": "Thanks again I will test it now.\n"
      }
    ]
  },
  {
    "number": 336,
    "title": "Can I target both Universal Windows 10 and Windows Phone 8.1 at the same time?",
    "created_at": "2016-05-09T23:25:16Z",
    "closed_at": "2016-05-10T00:30:34Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/336",
    "body": "I have 3 projects in my solution, one targeting UWP, another targeting Windows Phone 8.1 and a common one, where I program the common logic (which uses MailKit).\n\nIs there a way to use configure MailKit project to support both the other projects at the same time?\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/336/comments",
    "author": "diogorolo",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2016-05-10T00:29:34Z",
        "body": "Well, lucky for you, this is Open Source which means you can fiddle with the PCL profiles until it fits :)\n"
      }
    ]
  },
  {
    "number": 335,
    "title": "SslStream.Read exception?",
    "created_at": "2016-05-04T20:18:13Z",
    "closed_at": "2016-05-04T21:22:27Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/335",
    "body": "Hi Jeffrey\nDo you know what can cause this exception when reading the email?\nat System.Net.Security._SslStream.ProcessRead(Byte[] buffer, Int32 offset, Int32 count, AsyncProtocolRequest asyncRequest)\n  at System.Net.Security.SslStream.Read(Byte[] buffer, Int32 offset, Int32 count)\n  at MailKit.Net.Imap.ImapStream.ReadAhead(Int32 atleast, CancellationToken cancellationToken)\n  at MailKit.Net.Imap.ImapStream.ReadToken(String specials, CancellationToken cancellationToken)\n  at MailKit.Net.Imap.ImapStream.ReadToken(CancellationToken cancellationToken)\n  at MailKit.Net.Imap.ImapCommand.Step()\n  at MailKit.Net.Imap.ImapEngine.Iterate()\n  at MailKit.Net.Imap.ImapEngine.Wait(ImapCommand ic)\n  at MailKit.Net.Imap.ImapFolder.Search(SearchQuery query, CancellationToken cancellationToken)\n\nI am trying to replicate the problem it but unable to. \n\nThanks\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/335/comments",
    "author": "vnwind",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2016-05-04T21:22:27Z",
        "body": "No clue. That error is inside of the System.Net.Security code which is outside of my knowledge.\n"
      }
    ]
  },
  {
    "number": 334,
    "title": "Create new nuget package",
    "created_at": "2016-05-03T18:31:14Z",
    "closed_at": "2016-05-03T18:52:58Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/334",
    "body": "Is there any estimate when you will release a new nuget package?\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/334/comments",
    "author": "mdemmers",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2016-05-03T18:52:57Z",
        "body": "I can probably do one this weekend. I've been holding off because I'm hoping that the new netstandard rc2 stuff will be released soon...\n"
      },
      {
        "user": "mdemmers",
        "created_at": "2016-05-03T19:47:12Z",
        "body": "allright thanks for the update!\n"
      }
    ]
  },
  {
    "number": 333,
    "title": "Syntax error in response. Unexpected token: [atom: A00000003]",
    "created_at": "2016-04-29T16:46:07Z",
    "closed_at": "2016-04-30T02:49:14Z",
    "labels": [
      "question",
      "server/exchange2010"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/333",
    "body": "Hello,\n\nTrying to connect and authenticate with an Exchange 2010 SP3 server but getting this bizarre exception:\n\n```\nMailKit.Net.Imap.ImapProtocolException: Syntax error in response. Unexpected token: [atom: A00000003]\n   at MailKit.Net.Imap.ImapCommand.Step()\n   at MailKit.Net.Imap.ImapEngine.Iterate()\n   at MailKit.Net.Imap.ImapEngine.Wait(ImapCommand ic)\n   at MailKit.Net.Imap.ImapClient.Authenticate(Encoding encoding, ICredentials credentials, CancellationToken cancellationToken)\n   at MailKit.MailService.Authenticate(String userName, String password, CancellationToken cancellationToken)\n...\n```\n\nFYI, removed NTLM as authentication mechanism to no effect. SSL is also disabled.\n\nIMAP Log:\n\n```\nConnected to imap://example.org:143/?starttls=when-available\nS: * OK The Microsoft Exchange IMAP4 service is ready. SERVERNAMEHERE\nC: A00000000 CAPABILITY\nS: * CAPABILITY IMAP4 IMAP4rev1 AUTH=NTLM AUTH=GSSAPI AUTH=PLAIN STARTTLS IDLE NAMESPACE LITERAL+\nS: A00000000 OK CAPABILITY completed.\nC: A00000001 STARTTLS\nS: A00000001 OK Begin TLS negotiation now.\nC: A00000002 CAPABILITY\nS: * CAPABILITY IMAP4 IMAP4rev1 AUTH=NTLM AUTH=GSSAPI AUTH=PLAIN IDLE NAMESPACE LITERAL+\nS: A00000002 OK CAPABILITY completed.\nC: A00000003 AUTHENTICATE PLAIN\nS: +\nC: <some base64 string here>\nS: A00000003 NO Server Unavailable. 15\nC: A00000004 LOGIN <username@domain> <userpassword>\nS: A00000003 NO AUTHENTICATE failed.\n\n```\n\nThanks!\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/333/comments",
    "author": "test-in-prod",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2016-04-30T02:49:14Z",
        "body": "This is the problem:\n\n```\nC: A00000004 LOGIN <username@domain> <userpassword>\nS: A00000003 NO AUTHENTICATE failed.\n```\n\nThe server _should_ have responded with an `A00000004` tag, not `A00000003` (like it did).\n"
      }
    ]
  },
  {
    "number": 330,
    "title": "How get status of message? ",
    "created_at": "2016-04-23T11:41:57Z",
    "closed_at": "2016-04-24T18:41:02Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/330",
    "body": "How get status of message? (Read,Unread)\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/330/comments",
    "author": "Radzhab",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2016-04-24T18:41:02Z",
        "body": "Like this:\n\n``` csharp\nvar items = folder.Fetch (uids, MessageSummaryItems.Flags);\nforeach (var item in items) {\n    Console.WriteLine (\"Message # {0} has flags: {1}\", item.Index, item.Flags.Value);\n    if (item.Flags.Value.HasFlag (MessageFlags.Seen)\n        Console.WriteLine (\"The message has been read.\");\n    else\n        Console.WriteLine (\"The message has not been read.\");\n}\n```\n"
      }
    ]
  },
  {
    "number": 326,
    "title": "Get Email in reverse order",
    "created_at": "2016-04-18T12:47:18Z",
    "closed_at": "2016-04-18T15:44:20Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/326",
    "body": "Hello ,\n\ncan i get email list in reverse order while using custom paging.\n\nRegards,\nRadhay\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/326/comments",
    "author": "Radhay",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2016-04-18T15:44:20Z",
        "body": "Yes. How would you get items in reverse order from an array? It works exactly the same with with POP3. If you are using IMAP, you might be able to use the `ImapFolder.Search()` method to get a sorted list of messages in the order you want them, but only if the server supports the SORT extension. If it doesn't, then you'll need to do it the same way you'd do it for POP3.\n"
      }
    ]
  },
  {
    "number": 324,
    "title": "Can't search email subject on imap server",
    "created_at": "2016-04-14T16:38:45Z",
    "closed_at": "2016-04-14T17:39:12Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/324",
    "body": "Hi Jeffrey\nI can't figure out why this work on gmail but not on another imap server. All I want is to search for unread emails with the subject that match the name. Here is the code\n\nvar query = SearchQuery.SubjectContains(name).And(SearchQuery.NotSeen);\nvar matchedMsgList = inbox.Search(query);\nif (matchedMsgList.Count != 0)\n         // do something\n\nI have the same unread email with the same subject \"Lead me\" and the name is \"Lead\" but only Gmail account return the match while the other imap server does not. \n\nI looked at what capabilities supported by this imap server and it returns \nImapCapabilities.IMAP4rev1 \nImapCapabilities.Status \nImapCapabilities.Idle \nImapCapabilities.Namespace \nImapCapabilities.Id \nImapCapabilities.Children \nImapCapabilities.StartTLS \nImapCapabilities.Unselect\n\nwhile GMail returns\nImapCapabilities.ListStatus \nImapCapabilities.UTF8Accept \nImapCapabilities.GMailExt1 \nImapCapabilities.XList \nImapCapabilities.Move \nImapCapabilities.IMAP4rev1 \nImapCapabilities.Status \nImapCapabilities.Quota \nImapCapabilities.Idle \nImapCapabilities.Namespace \nImapCapabilities.Id \nImapCapabilities.Children \nImapCapabilities.Unselect \nImapCapabilities.UidPlus \nImapCapabilities.CondStore \nImapCapabilities.ESearch \nImapCapabilities.Compress \nImapCapabilities.Enable \nImapCapabilities.ListExtended\n\nSo I am wondering if  ImapCapabilities.ESearch is required for the search to work or it is not related at all?\nThanks                          \n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/324/comments",
    "author": "vnwind",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2016-04-14T17:39:12Z",
        "body": "No, ESearch is not required (ESearch just allows the client to request different return values from the SEARCH command).\n\nSo... the problem with IMAP searching is that it's up to the server to decide what matches and what doesn't :(\n\nMy guess is that GMail's implementation looks for the substring while your other IMAP server probably uses an exact-match or something silly.\n\nYou could try using this instead:\n\n``` csharp\nvar query = SearchQuery.HeaderContains(\"Subject\", name).And(SearchQuery.NotSeen);\n```\n\nThat might work...\n"
      },
      {
        "user": "vnwind",
        "created_at": "2016-04-14T18:35:02Z",
        "body": "This is very werid, Let say the subject is \"My Lead 1123\" and If i search for \"1123\" then it return the result but if I search for \"Lead\" then it does not return anything. Can you think of any reason why?\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2016-04-14T21:31:58Z",
        "body": "Nope, that is completely bizarre.\n"
      }
    ]
  },
  {
    "number": 322,
    "title": "Authentication failed",
    "created_at": "2016-04-12T15:28:13Z",
    "closed_at": "2016-04-12T15:36:38Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/322",
    "body": "Hello,\n\nPeriodically when I connect to IMAP server I receive error:\n\n> MailKit.Security.AuthenticationException: Authentication failed.\n>    at MailKit.Net.Imap.ImapClient.Authenticate(Encoding encoding, ICredentials credentials, CancellationToken cancellationToken)\n>    at MailKit.MailService.Authenticate(String userName, String password, CancellationToken cancellationToken)\n\nIMAP log:\n\n> Connected to imaps://imapserver.com:993/\n> S: \\* OK The Microsoft Exchange IMAP4 service is ready.\n> C: A00000000 CAPABILITY\n> S: \\* CAPABILITY IMAP4 IMAP4rev1 AUTH=PLAIN AUTH=NTLM AUTH=GSSAPI UIDPLUS MOVE ID CHILDREN IDLE NAMESPACE LITERAL+\n> S: A00000000 OK CAPABILITY completed.\n> C: A00000001 AUTHENTICATE NTLM\n> S: +\n> C: TlRMTVNTUAABAAAABwIIAAAAAAAgAAAAAAAAACAAAAA=\n> S: + TlRMTVNTUAACAAAACAAIADgAAAAFAokC/swBpqO/71gAAAAAAAAAAI4AjgBAAAAABgOAJQAAAA9PAEEATQBDAAIACABPAEEATQBDAAEAGABNAEMAVABFAFgAQQBSAFMAUgBWADAAMQAEABAAbwBhAG0AYwAuAGMAbwBtAAMAKgBNAEMAVABFAFgAQQBSAFMAUgBWADAAMQAuAG8AYQBtAGMALgBjAG8AbQAFABAAbwBhAG0AYwAuAGMAbwBtAAcACADS32cxyZTRAQAAAAA=\n> C: TlRMTVNTUAADAAAAGAAYAFQAAAAYABgAbAAAAAAAAABAAAAAFAAUAEAAAAAAAAAAVAAAAAAAAACEAAAAAYIIAG8AbQBhAG4ALgBzAHQAYQB0AHMAou72ajqXvS4AAAAAAAAAAAAAAAAAAAAAshgyuH6SJ/S5AP65OD29I8RMy9BPLZSJ\n> S: A00000001 NO AUTHENTICATE failed.\n> C: A00000002 AUTHENTICATE PLAIN\n> S: +\n> C: XXXXXXXX\n> S: A00000002 NO AUTHENTICATE failed.\n> C: A00000003 LOGIN plain_username plain_password\n> S: A00000003 NO Server Unavailable. 15\n> S: \\* BYE Connection closed. 14\n> C: A00000004 LOGOUT\n\nThe problem is that with Chilkat library I can authenticate stable. What can be reason?\nThank you.\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/322/comments",
    "author": "SuhovDE",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2016-04-12T15:36:38Z",
        "body": "Try doing this before calling `client.Authenticate (...)`:\n\n``` csharp\nclient.AuthenticationMechanisms.Clear ();\n```\n\nThis will prevent MailKit from trying to authenticate via `NTLM` and `PLAIN` and instead just use the `LOGIN` command (which is probably what ChilKat is using).\n\nIt's possible that the server is disabling your login ability due to the failed `NTLM` and `PLAIN` attempts.\n"
      },
      {
        "user": "SuhovDE",
        "created_at": "2016-04-22T12:42:56Z",
        "body": "Thank you @jstedfast, it resolved the issue.\n"
      }
    ]
  },
  {
    "number": 317,
    "title": "Merge/internalize Portable.BouncyCastle assembly",
    "created_at": "2016-04-02T11:49:20Z",
    "closed_at": "2016-04-02T12:16:41Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/317",
    "body": "It would be nice to merge and internalize your special `Portable.BouncyCastle` dependency as it is in conflict with the original `BouncyCastle` package on the same project.\n\nThis could be easily done with `ILMerge`, etc.\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/317/comments",
    "author": "dnauck",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2016-04-02T12:15:15Z",
        "body": "I plan to switch to the official bouncy castle package once they release it\n"
      }
    ]
  },
  {
    "number": 316,
    "title": "Attachments are corrupt",
    "created_at": "2016-03-30T16:45:44Z",
    "closed_at": "2016-03-30T18:18:42Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/316",
    "body": "Hi, First of all thanks for the project. it's really really helpful. I love it.\n\nI have a question about attachments. I have seen all of your replies so trust me I have spent a full day on this problem but still can't get my head around. The way I have setup is that I download emails but not attachments, instead just save their names and disposition. Then when customer open the email, he can see the list of attachments and just click on them to download, however they are downloading as corrupted. Here is the download code.\n\n``` csharp\n        public MemoryStream GetAttachement(string fileName, string messageId)\n        {\n            HeaderSearchQuery searchCondition = SearchQuery.HeaderContains(\"Message-Id\", messageId);\n            Client.Inbox.Open(FolderAccess.ReadOnly);\n            IList<UniqueId> uids = Client.Inbox.Search(searchCondition);\n\n            foreach (UniqueId uniqueId in uids)\n            {\n                MimeMessage message = Client.Inbox.GetMessage(uniqueId);\n                if (message.Attachments.Count() > 0)\n                {\n                    var attachement = message.Attachments.Where(x => x.ContentDisposition.FileName.Equals(fileName, StringComparison.InvariantCultureIgnoreCase)).FirstOrDefault();\n                    if (attachement != null)\n                    {\n                        var stream = new MemoryStream();\n                        attachement.WriteTo(stream);\n                        attachement.WriteTo(System.Web.HttpContext.Current.Server.MapPath(\"~/\") + fileName);\n                        return stream;\n                    }\n                }\n                //check for inline attachements\n                var inlineattachement = message.BodyParts.Where(x => x.ContentType.MediaType.Equals(\"image\", StringComparison.InvariantCultureIgnoreCase) && x.ContentType.Name.Equals(fileName, StringComparison.InvariantCultureIgnoreCase)).FirstOrDefault();\n                if (inlineattachement != null)\n                {\n                    var stream = new MemoryStream();\n                    inlineattachement.WriteTo(stream);\n                    inlineattachement.WriteTo(System.Web.HttpContext.Current.Server.MapPath(\"~/\") + fileName);\n                    return stream;\n                }\n            }\n\n            return null;\n        }\n```\n\nAs a test, I am writing to both stream and saving to file but nothing is working. I have the latest version, so any help will be greatly appreciated.\nThanks in advance.\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/316/comments",
    "author": "atiqi36",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2016-03-30T18:18:42Z",
        "body": "You are writing out the MIME container of the attachment and not the decoded attachment data.\n\nWhat you need to do is this:\n\n``` csharp\nvar stream = new MemoryStream();\nif (attachment is MessagePart) {\n    var rfc822 = (MessagePart) attachment;\n    rfc822.Message.WriteTo (stream);\n    rfc822.Message.WriteTo (System.Web.HttpContext.Current.Server.MapPath(\"~/\") + fileName);\n} else {\n    var part = (MimePart) attachment;\n    part.ContentObject.DecodeTo (stream);\n    part.ContentObject.DecodeTo (System.Web.HttpContext.Current.Server.MapPath(\"~/\") + fileName);\n}\nreturn stream;\n```\n\n(Note: For the inlineattachment logic, you don't need to check for `MessagePart` because that can't happen, image parts can only ever be `MimePart`s)\n"
      },
      {
        "user": "atiqi36",
        "created_at": "2016-03-30T19:35:07Z",
        "body": "Hi, thanks for quick reply but this is not working either. Exactly same problem. Any thoughts?\n"
      },
      {
        "user": "atiqi36",
        "created_at": "2016-03-30T19:43:01Z",
        "body": "It's working, my fault this time ;) Thanks for the help.\n"
      }
    ]
  },
  {
    "number": 315,
    "title": "Imap Order By Issue",
    "created_at": "2016-03-30T12:03:44Z",
    "closed_at": "2016-03-30T13:35:24Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/315",
    "body": "Hello\n\nwhen i doing sorting using mailkit i am getting following error\n\nThe IMAP server does not support the SORT extension.\n\nI am using following code\n\nvar orderBy = new[] { MailKit.Search.OrderBy.ReverseArrival };\n\n foreach (var uid in inbox.Search(query, orderBy))\n                {\n                    var message = inbox.GetMessage(uid);\n                    Console.WriteLine(\"[match] {0}: {1}\", uid, message.Subject);\n                }\nwhen i run using this code i am getting error\nThe IMAP server does not support the SORT extension.\n\nPlease help me i am not getting any help from anywhere\n\nThanks\nRadhay\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/315/comments",
    "author": "Radhay",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2016-03-30T13:35:24Z",
        "body": "You are getting that error because your IMAP server does not support sorting.\n\nMany of the IMAP features are _optional_ extensions that the server may or may not implement. In order to check if the server supports them, you need to check the ImapClient.Capabilities flags for the appropriate flag.\n\nFor example:\n\n``` csharp\nif (client.Capabilities.HasFlag (ImapCapabilities.Sort)) {\n    var orderBy = new[] { MailKit.Search.OrderBy.ReverseArrival };\n    foreach (var uid in inbox.Search(query, orderBy)) {\n        var message = inbox.GetMessage(uid);\n        Console.WriteLine(\"[match] {0}: {1}\", uid, message.Subject);\n    }\n} else {\n    // handle this in another way\n    var reversed = new UniqueIdSet (MailKit.Search.SortOrder.Descending);\n    foreach (var uid in inbox.Search(query))\n        reversed.Add (uid);\n    foreach (var uid in reversed) {\n        var message = inbox.GetMessage(uid);\n        Console.WriteLine(\"[match] {0}: {1}\", uid, message.Subject);\n    }\n}\n```\n"
      },
      {
        "user": "Radhay",
        "created_at": "2016-04-01T10:21:57Z",
        "body": "Hello \n\nI have to sort all the record by subject,Bcc,cc and date.\n\nand i used the code which are send to me.\n\nBut in this i got all the emails in descending order.\n\nBut i want order by many way.\n\nPlease help me or tell why imap server does not support order by.\n\nRegards,\nRadhay\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2016-04-01T10:32:01Z",
        "body": "If you want to order by all those fields, you'll need to use:\n\n``` csharp\nusing System.Linq;\n\n...\n\nvar items = client.Fetch (0, -1, MessageSummaryItems.Envelope | MessageSummaryItems.UniqueId).ToList ();\n```\n\nOnce you do that, you'll need to write your own `IComparer` and then use `List.Sort()` or `Array.Sort()` to sort your values.\n\nI don't know why your server doesn't support the SORT extension. It just doesn't. Not all servers support it.\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2016-04-01T10:37:02Z",
        "body": "Actually, it looks like MailKit already has some custom sorters to help you (I forgot I wrote them):\n\n``` csharp\nusing System.Linq;\n\n...\n\nvar items = client.Fetch (0, -1, MessageSummaryItems.Envelope | MessageSummaryItems.UniqueId).ToList ();\nMessageSorter.Sort (items, orderBy);\n```\n"
      },
      {
        "user": "Radhay",
        "created_at": "2016-04-01T11:34:20Z",
        "body": "Hello,\n\ni also don't know that why it's not support.\n\ntell me that can we add this or not.\n\nor which mailkit version support it.\n\nRegards,\nRadhay\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2016-04-01T12:32:43Z",
        "body": "MailKit is the IMAP _client_, not the server. Therefor it's not possible for MailKit to support server-side sorting if the _server_ does not support it.\n\n_You_ cannot add SORT support to your IMAP server and neither can I. You have to ask the vendor of your IMAP server to add support for it.\n"
      },
      {
        "user": "nikita030493",
        "created_at": "2018-12-18T20:54:12Z",
        "body": "Does the search method still have an overload - inbox.Search(SearchQuery.All, new[] { OrderBy.ReverseArrival }) ? There are 4 overloads and none of them has place for the ordering argument."
      },
      {
        "user": "jstedfast",
        "created_at": "2018-12-19T00:12:35Z",
        "body": "No, the `Search()` methods that take a OrderBy argument were renamed to `Sort()` a few years ago :)"
      },
      {
        "user": "nikita030493",
        "created_at": "2018-12-19T14:44:09Z",
        "body": "Thank you for the response!\r\n\r\nWhile I was able to solve the problem of taking only latest n amount of emails using:\r\n`inbox.Search(SearchQuery.All).Reverse().Take(50);`,\r\n\r\nI guess using Sort() is more descriptive after all:\r\n`inbox.Sort(SearchQuery.All, new[] { OrderBy.Arrival }).Take(50);`\r\n\r\nEDIT:\r\nTurned out that my IMAP server doesn't support sorting. If anyone finds themselves in a similar situation, then first option is the way to go. "
      }
    ]
  },
  {
    "number": 310,
    "title": "Standalone usage on Linux w/ PHP",
    "created_at": "2016-03-12T13:50:20Z",
    "closed_at": "2016-03-12T15:02:06Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/310",
    "body": "Hello everyone,\n\ni was looking for a decent well made mail package and found this.\nIs there any practical and smart way to use this in a PHP Context?\nCould this be compiled to a native linux binary i could call from php?\n\nAny hints or ideas?\n\nthanks max\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/310/comments",
    "author": "mstaack",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2016-03-12T15:02:06Z",
        "body": "You can use MailKit on Linux, but not easily from PHP since MailKit is written using C# and meant for the .NET runtime (either via Microsoft's .NET runtime or the Mono runtime).\n\nI don't even know where to begin trying to use it from PHP... sorry.\n"
      }
    ]
  },
  {
    "number": 304,
    "title": "MailKit authentication is insanely slow when incorrect credentials are given.",
    "created_at": "2016-02-22T10:51:49Z",
    "closed_at": "2016-02-22T13:43:20Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/304",
    "body": "A friend of mine is \"abusing\" MailKit's SmtpClient for the account verification on the SMTP server that verifies accounts against LDAP (this is what we need in fact). The application doesn't have direct access to the LDAP, that's why he's doing it this way. It works as follows:\n\n```\n1. Connect to smtp.example.com on implicitly secured SSL port 465\n2. Authenticate by providing login & password.\n3. If authentication succeeded, the account is considered verified.\n4. If authentication fails, the account doesn't exist and is considered non-verified.\n```\n\nNow, not a lot of SMTP clients have support for a low level SMTP access (connect, authenticate, send...) so he's chosen MailKit for that purpose. However we found out that it takes incredibly long time when incorrect account credentials are passed in compared to other SMTP client libraries out there (for example LumiSoft.NET) - e.g. **7.7s** vs **less than 2s**. It is definitely not caused by the speed of SMTP server's response so we suspect there's a bug in MailKit. \n\nHere's the code:\n\n``` csharp\ntry\n{\n  using (var client = new SmtpClient())\n  {\n    client.ServerCertificateValidationCallback = ValidateRemoteCertificate;\n    client.Connect(host, 465, true);\n\n    // Note: since we don't have an OAuth2 token, disable\n    // the XOAUTH2 authentication mechanism.\n    client.AuthenticationMechanisms.Remove(\"XOAUTH2\");\n\n    // Note: only needed if the SMTP server requires authentication\n    client.Authenticate(login, password);\n    client.Disconnect(true);\n  }\n\n  /* Account considered verified */\n}\ncatch(Exception ex) { /* Account considered non-verified */ }\n```\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/304/comments",
    "author": "mareksuscak",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2016-02-22T13:43:20Z",
        "body": "When you supply invalid credentials, MailKit will fall back to another mechanism and try again until it exhausts all mechanisms supported by the SMTP server.\n\nIf you want to avoid this, then you'll need to remove all but 1 mechanism from the `client.AuthenticationMechanisms` hash set.\n"
      }
    ]
  },
  {
    "number": 303,
    "title": "Question about downloading attachments.",
    "created_at": "2016-02-12T07:57:39Z",
    "closed_at": "2016-02-12T13:58:25Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/303",
    "body": "Hello, I have the following issue.\n\nI'm using the IMAP protocol and the Fetch() method to get some emails.\nSome of them have attachments in the form of BodyPartBasic. \nI was wandering if there is a way to download the attachments without having to make a call to the server to get the BodyPart like this:\n\nIMessageSummary message = inboxFolder.Fetch(messageIDs, MessageSummaryItems.BodyStructure)[0];\nclient.Inbox.GetBodyPart(email.UniqueId, message.Attachments.FirstOrDefault());\n\nI have created my own EmailMessage class and I wish to save the attachments and to be able to download them when I want without having to make requests to the server for each of them. \nThis is possible if I use the GetMessage() method instead of Fetch(), because that way I get MimeMessage object, which have attachments of class MimeEntity, which I can download like this :\n\nusing (var stream = System.IO.File.Create(path)\n{\n      mimeAttachment.ContentObject.DecodeTo(stream);\n}\n\nI was also wandering what is the reason the GetMessage() method and Fetch() method to return different types of message objects (MimeMessage and IMessageSummary)?\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/303/comments",
    "author": "karaliolio",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2016-02-12T13:58:25Z",
        "body": "An `IMessageSummary` is really just metadata for a message, it isn't an actual message. It's meant to be used for things like presenting a list of messages to the user (e.g. a mail client's message list). It also has the `MessageSummaryItems.Body` & `BodyStructure` fields which allow the client to get a glimpse at the structure of the message, allowing the client to optionally decide to download only a subset of the full message (this is ideal for situations where the network is slow and/or storage space on the device is limited, such as cell phones).\n\nThis is different from calling `GetMessage()` because `GetMessage()` will download the complete message and so calling `attachment.ContentObject.DecodeTo(stream)` isn't actually downloading anything because it has already been downloaded as part of `GetMessage()`.\n\nSo what does this mean?\n\nYou have 2 options:\n1. Download complete messages using `GetMessage()`, thus making things easy allowing you to decode attachments to streams at any time without need of requesting any additional data from the IMAP server, or...\n2. Using `Fetch()` to request message metadata, allowing you to download only the parts of the message that you want/need, but requiring you to keep track of which folder the message is from, what the message's UID is, and which `BodyPartBasic` corresponds to the part you want.\n\nWhich one you choose will depend on what you want to do.\n\nHope that helps.\n"
      },
      {
        "user": "karaliolio",
        "created_at": "2016-02-12T19:36:23Z",
        "body": "Great explanation! Thanks alot for the quick answer :)\n"
      }
    ]
  },
  {
    "number": 301,
    "title": "Question: Remove Message-Id in headers? Contains my computer name.",
    "created_at": "2016-02-10T01:20:59Z",
    "closed_at": "2016-02-10T01:45:56Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/301",
    "body": "Hi, I noticed that the headers contain this:\n`Message-Id: <L9B5U000EXT4.1HIHP2C689LF@**MyComputerName**>`\n\nIs there a way to remove this?\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/301/comments",
    "author": "EddieLongStockings",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2016-02-10T01:45:56Z",
        "body": "Yes.\n\nYou can set the Message-Id header manually by doing\n\n``` csharp\nmessage.MessageId = MimeUtils.GenerateMessageId (\"domain.com\");\n```\n\nThis will use `domain.com` instead of `**MyComputerName**`.\n"
      },
      {
        "user": "EddieLongStockings",
        "created_at": "2016-02-10T01:57:10Z",
        "body": "So it can't be removed?\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2016-02-10T02:07:43Z",
        "body": "Oh, well, you can also remove the header, but the Message-Id header is a required header according to the specs, so why do you want to remove it?\n\n``` csharp\nmessage.Headers.Remove (HeaderId.MessageId);\n```\n"
      },
      {
        "user": "EddieLongStockings",
        "created_at": "2016-02-10T02:45:24Z",
        "body": "Because it has the computer name and I'm not sending from a server. So I don't have a use for a domain.\n"
      },
      {
        "user": "ysunil702",
        "created_at": "2020-12-16T13:06:44Z",
        "body": "When I set my message-id, it becomes duplicate, then the error below comes.\r\n550 Messages should have one or no Message-ID headers, not 2.\r\n@jstedfast \r\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2020-12-19T18:03:57Z",
        "body": "@ysunil702 how are you setting it?\r\n\r\nYou should be using `message.MessageId = \"msg.id@host.com\";`"
      },
      {
        "user": "ysunil702",
        "created_at": "2020-12-21T05:05:27Z",
        "body": "yeah i am using same way message.MessageId = \"msg.id@host.com\"  but there is already one messageid Message-Id: <message-id@**MyComputerName**> while adding my message id its become duplicate."
      },
      {
        "user": "jstedfast",
        "created_at": "2020-12-21T17:14:50Z",
        "body": "Are you loading a message template or something before setting the `MessageId` property? How is it getting a second message-id?"
      }
    ]
  },
  {
    "number": 299,
    "title": "Exception on iteration through the Pop3 mails",
    "created_at": "2016-02-04T08:49:30Z",
    "closed_at": "2016-02-04T13:38:18Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/299",
    "body": "I'm performing a select on a Pop3Client like this\n\ndotNetEmails.AddRange(this.ClientPop3.Select(message => new DotNetEmailMessage(message.MessageId, message.InReplyTo, message.Subject, message.References)));\n\nto grab all the messages from the server.\n\nSometimes though during the process an exception is being thrown on the authentication during the iteration.\n\nIt seems a little strange that the authentication is triggering on this select statement.\n\nCall stack included.\n\nMailKit.dll!MailKit.Net.Pop3.Pop3Client.CheckAuthenticated() + 0x6a bytes  \nMailKit.dll!MailKit.Net.Pop3.Pop3Client.GetEnumerator.MoveNext() + 0x77 bytes  \nSystem.Core.dll!System.Linq.Enumerable.WhereSelectEnumerableIterator<System.__Canon,System.__Canon>.MoveNext() Line 282 + 0x14 bytes    C#\nmscorlib.dll!System.Collections.Generic.List<System.__Canon>.InsertRange(int index, System.Collections.Generic.IEnumerable<System.__Canon> collection) + 0x228 bytes    \n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/299/comments",
    "author": "Saurbaum",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2016-02-04T12:04:39Z",
        "body": "What's the exact exception?\n\nWhat may be happening is that you are getting disconnected which would make CheckAuthenticated() fail.\n"
      },
      {
        "user": "Saurbaum",
        "created_at": "2016-02-04T12:15:01Z",
        "body": "I think it's being lost crossing the managed to native boundary in my code\n\nKERNELBASE.dll!RaiseException()  + 0x6c bytes  \n    [Managed to Native Transition]  \n    MailKit.dll!MailKit.Net.Pop3.Pop3Client.CheckAuthenticated() + 0x6a bytes  \n    MailKit.dll!MailKit.Net.Pop3.Pop3Client.GetEnumerator.MoveNext() + 0x77 bytes   \n\n1530 **\\* Exception 0xE0434352 at 00007FF8F755AB78 occurred **\n                         1530   Parameter 0: FFFFFFFF80131509\n                         1530   Parameter 1: 0000000000000000\n                         1530   Parameter 2: 0000000000000000\n                         1530   Parameter 3: 0000000000000000\n                         1530   Parameter 4: 00007FF8EDC80000\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2016-02-04T13:26:32Z",
        "body": "There's no native code in MailKit, it's all C#.\n\nThe only way this makes sense is if you did not Authenticate() before calling the LINQ statement.\n"
      },
      {
        "user": "Saurbaum",
        "created_at": "2016-02-04T13:30:01Z",
        "body": "Yes the native code is mine that is using MailKit.  I'll double check but I can't find a code path that doesn't authenticate before attempting to retrieve emails.\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2016-02-04T13:38:18Z",
        "body": "FWIW, I'd probably recommend against using an enumerator here and simply write your own for-loop so that you can properly track which messages you've downloaded (either by index or by uid) in cases where you lose your network connection. Your current logic will force you to start over again if the connection drops.\n"
      }
    ]
  },
  {
    "number": 297,
    "title": "Support for calendar and contacts",
    "created_at": "2016-02-02T16:52:18Z",
    "closed_at": "2016-02-02T18:29:52Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/297",
    "body": "Great work @jstedfast ! Couple of questions \n- does this library support calendar / contacts support for IMAP and POP3? If not are you planning to add that in future? \n- does this also support UWP platform ? if not any plans to add that support? \n\nThanks and congratulations on awesome work! keep it up.\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/297/comments",
    "author": "blacklion9279",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2016-02-02T18:29:52Z",
        "body": "Well, technically POP3 and IMAP don't support calendar and contacts. All they support is email.\n\nThat said, some clients abuse the IMAP protocol to store email messages with vcard and/or ical attachments in their folders.\n\nYou can access those messages using MailKit, but I do not have a parser for them (that is a bit out of scope for this project, imho).\n\nAFAIK, MimeKit and MailKit already support UWP.\n"
      }
    ]
  },
  {
    "number": 295,
    "title": "Login to iCloud fails",
    "created_at": "2016-02-02T08:35:15Z",
    "closed_at": "2016-02-02T13:15:14Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/295",
    "body": "Not sure if this is something you can actually handle, as the server is seemingly the one at fault, but If you try to connect to the iCloud IMAP services using mailkit the connection is dropped unless you disable PLAIN auth first:\n\nConnected to imaps://imap.mail.me.com:993/\nS: \\* OK [CAPABILITY mr11p00im-iscream004 15E201 XAPPLEPUSHSERVICE IMAP4 IMAP4rev1 SASL-IR AUTH=ATOKEN AUTH=PLAIN] iSCREAM ready to rumble (15E201-d02dd996912b:24762) mr11p00im-iscream004 [31:1461:18:16:40:81]\nC: A00000000 AUTHENTICATE PLAIN snip\nS: A00000000 NO [AUTHENTICATIONFAILED] Authentication failed\nC: A00000001 LOGIN snip@icloud.com snip\n\nConnection dropped\n\nConnected to imaps://imap.mail.me.com:993/\nS: \\* OK [CAPABILITY mr11p00im-iscream023 15E201 XAPPLEPUSHSERVICE IMAP4 IMAP4rev1 SASL-IR AUTH=ATOKEN AUTH=PLAIN] iSCREAM ready to rumble (15E201-d02dd996912b:14338) mr11p00im-iscream023 [28:1275:08:32:19:74]\nC: A00000000 LOGIN snip@icloud.com snip\nS: A00000000 OK [CAPABILITY XAPPLEPUSHSERVICE IMAP4 IMAP4rev1 ACL RIGHTS=tekx QUOTA LITERAL+ NAMESPACE UIDPLUS CHILDREN BINARY UNSELECT SORT CATENATE URLAUTH LANGUAGE ESEARCH ESORT THREAD=ORDEREDSUBJECT THREAD=REFERENCES CONDSTORE ENABLE QRESYNC CONTEXT=SEARCH CONTEXT=SORT WITHIN SASL-IR SEARCHRES METADATA ID XSENDER X-SUN-SORT ANNOTATE-EXPERIMENT-1 X-UNAUTHENTICATE X-SUN-IMAP XUM1 IDLE] User snip logged in\nC: A00000001 NAMESPACE\nS: \\* NAMESPACE ((\"\" \"/\")) NIL NIL\nS: A00000001 OK Completed\nC: A00000002 LIST \"\" \"INBOX\"\nS: \\* LIST (\\NoInferiors) \"/\" INBOX\nS: A00000002 OK Completed\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/295/comments",
    "author": "ben-rockliffe",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2016-02-02T13:15:14Z",
        "body": "That's something that you'll have to know and deal with yourself, unfortunately, because there's no way for MailKit to know that iCloud's PLAIN implementation is broken.\n\nTo disable PLAIN authentication, just do\n\n``` csharp\nclient.AuthenticationMechanisms.Remove (\"PLAIN\");\n```\n\nbefore authenticating (I'm assuming you did that already based on the second log, but figured I'd explain in case anyone else comes across this later with the same problem).\n\nHope that helps.\n"
      }
    ]
  },
  {
    "number": 294,
    "title": "Storing MimeMessage in data base",
    "created_at": "2016-01-31T09:31:08Z",
    "closed_at": "2016-01-31T12:28:53Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/294",
    "body": "Hi Jeff,\n\nI'm trying to store MimeMessage inside the database if for whatever reason our mail server may be down. Have the following fields defined in my sql server: from, to, subject and body.\n\nI'm storing 'from' and 'to' fields in this format in database: {MyCompany,mail@mycompany.com} and body, bodyBuilder.ToMessageBody().ToString() as nvarchar(max). Now that I have it stored, I want to be able to retrieve the fields and re-compose the original MimeMessage. I can re-parse the 'from' and 'to' fields, set the subject, but how do I simply set the body of the message since I already have stored in the database in this format \"Content-Type: multipart/mixed; boundary=.........\" ? Thank you for your help\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/294/comments",
    "author": "infinitimods",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2016-01-31T12:28:53Z",
        "body": "Okay, first, I'm going to have to recommend not using ToString() to serialize the message body.\n\nWhat you want to use is the `WriteTo(Stream)` method. ToString() is for debugging purposes only because it makes assumptions about the charset (it always serializes in iso-8859-1).\n\nIf you use `WriteTo(Stream)`, you can de-serialize the output by using `MimeEntity.Load(Stream)`.\n\nHope that helps.\n"
      },
      {
        "user": "infinitimods",
        "created_at": "2016-01-31T18:17:04Z",
        "body": "Ah! I see it! Thank you so much Jeff!\n"
      }
    ]
  },
  {
    "number": 291,
    "title": "ValidateRemoteCertificate and connection timeout",
    "created_at": "2016-01-24T04:40:29Z",
    "closed_at": "2016-01-24T11:49:46Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/291",
    "body": "Hi Jeff,\n1. Was looking over your project and tried some sample implementations. Couple of things. I was looking at ValidateRemoteCertificate method inside the SmtpClient.cs method, and I see that by default it is returning true. I think that by default it should return false because I may not have a valid certificate that I may be trying to use with the connection. Right now, it's a \"silent fail\" and I have no idea I am using invalid certificate when indeed I am.\n2. It would be nice to have your Connect method take a \"int connectionMillisecondsTimeout = 3000\" default parameter. Right now, if I try to connect to the server, it take 20 seconds to tell me that this server is not available, obviously not acceptable. I want a max of 2~5 seconds, depending on what I want to do, be my wait time. Right now I did this:\n   \n   ```\n               //socket.Connect (ipAddresses[i], port);\n   \n               IAsyncResult result = socket.BeginConnect(ipAddresses[i], port, null, null);\n   \n               if (!result.AsyncWaitHandle.WaitOne(3000, true))\n                   throw new SocketException((int)SocketError.TimedOut);\n   ```\n\nWhat are your thoughts on this?\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/291/comments",
    "author": "infinitimods",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2016-01-24T11:49:46Z",
        "body": "1. Too many people have SMTP, POP3, and/or IMAP servers with self-signed certificates that would be constantly emailing me and/or filing issues on MailKit complaining that MailKit doesn't work with their servers if I defaulted to returning false if there were any errors. Since you can override the behavior (and anyone serious about SSL/TLS security will do so), I don't think it'd be a good idea to change this. FWIW, even GMail fails if I make it return true if-and-only-if there are no certificate errors. Taking your suggestion would make developers instantly reject MailKit thinking that MailKit was somehow broken when in fact it is not. Just set your own RemoteCertificateValidationCallback.\n2. You can set the timeout in your own program. 20 seconds is not very long and 2-5 seconds is way too short for a default when it comes to network protocols. You might be 2 or 3 hops from your mail server, but most people are not.\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2016-01-24T14:00:36Z",
        "body": "Update:\n\nThis works on Microsoft's .NET runtime but fails on Mono:\n\n``` csharp\nusing System.Net.Sockets;\nusing System.Net.Security;\nusing System.Security.Authentication;\nusing System.Security.Cryptography.X509Certificates;\n\nnamespace SslCertificateValidationTest\n{\n    class Program\n    {\n        static void Main (string[] args)\n        {\n            var socket = new Socket (AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);\n\n            socket.Connect (\"smtp.gmail.com\", 465);\n\n            using (var ssl = new SslStream (new NetworkStream (socket, true), false, ValidateRemoteCertificate)) {\n                ssl.AuthenticateAsClient (\"smtp.gmail.com\", null, SslProtocols.Tls | SslProtocols.Tls11 | SslProtocols.Tls12, true);\n            }\n\n        }\n\n        static bool ValidateRemoteCertificate (object sender, X509Certificate certificate, X509Chain chain, SslPolicyErrors sslPolicyErrors)\n        {\n            return sslPolicyErrors == SslPolicyErrors.None;\n        }\n    }\n}\n```\n\nThe Mono exception is:\n\n```\nSystem.IO.IOException: The authentication or decryption has failed. ---> System.IO.IOException: The authentication or decryption has failed. ---> Mono.Security.Protocol.Tls.TlsException: Invalid certificate received from server.\n  at Mono.Security.Protocol.Tls.RecordProtocol.EndReceiveRecord (IAsyncResult asyncResult) <0x29af4c8 + 0x000e3> in <filename unknown>:0 \n  at Mono.Security.Protocol.Tls.SslClientStream.SafeEndReceiveRecord (IAsyncResult ar, Boolean ignoreEmpty) <0x29af420 + 0x0001f> in <filename unknown>:0 \n  at Mono.Security.Protocol.Tls.SslClientStream.NegotiateAsyncWorker (IAsyncResult result) <0x29aae48 + 0x0019b> in <filename unknown>:0 \n  --- End of inner exception stack trace ---\n  at Mono.Security.Protocol.Tls.SslClientStream.EndNegotiateHandshake (IAsyncResult result) <0x29cd6c8 + 0x000ab> in <filename unknown>:0 \n  at Mono.Security.Protocol.Tls.SslStreamBase.AsyncHandshakeCallback (IAsyncResult asyncResult) <0x29cd4d8 + 0x0005f> in <filename unknown>:0 \n  --- End of inner exception stack trace ---\n  at Mono.Security.Protocol.Tls.SslStreamBase.EndRead (IAsyncResult asyncResult) <0x2988e28 + 0x00133> in <filename unknown>:0 \n  at System.Net.Security.SslStream.EndAuthenticateAsClient (IAsyncResult asyncResult) <0x2988cb8 + 0x00037> in <filename unknown>:0 \n  at System.Net.Security.SslStream.AuthenticateAsClient (System.String targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, SslProtocols enabledSslProtocols, Boolean checkCertificateRevocation) <0x29825c8 + 0x00050> in <filename unknown>:0 \n  at SslCertificateValidationTest.Program.Main (System.String[] args) <0x50fee0 + 0x00153> in <filename unknown>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.IO.IOException: The authentication or decryption has failed. ---> System.IO.IOException: The authentication or decryption has failed. ---> Mono.Security.Protocol.Tls.TlsException: Invalid certificate received from server.\n  at Mono.Security.Protocol.Tls.RecordProtocol.EndReceiveRecord (IAsyncResult asyncResult) <0x29af4c8 + 0x000e3> in <filename unknown>:0 \n  at Mono.Security.Protocol.Tls.SslClientStream.SafeEndReceiveRecord (IAsyncResult ar, Boolean ignoreEmpty) <0x29af420 + 0x0001f> in <filename unknown>:0 \n  at Mono.Security.Protocol.Tls.SslClientStream.NegotiateAsyncWorker (IAsyncResult result) <0x29aae48 + 0x0019b> in <filename unknown>:0 \n  --- End of inner exception stack trace ---\n  at Mono.Security.Protocol.Tls.SslClientStream.EndNegotiateHandshake (IAsyncResult result) <0x29cd6c8 + 0x000ab> in <filename unknown>:0 \n  at Mono.Security.Protocol.Tls.SslStreamBase.AsyncHandshakeCallback (IAsyncResult asyncResult) <0x29cd4d8 + 0x0005f> in <filename unknown>:0 \n  --- End of inner exception stack trace ---\n  at Mono.Security.Protocol.Tls.SslStreamBase.EndRead (IAsyncResult asyncResult) <0x2988e28 + 0x00133> in <filename unknown>:0 \n  at System.Net.Security.SslStream.EndAuthenticateAsClient (IAsyncResult asyncResult) <0x2988cb8 + 0x00037> in <filename unknown>:0 \n  at System.Net.Security.SslStream.AuthenticateAsClient (System.String targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, SslProtocols enabledSslProtocols, Boolean checkCertificateRevocation) <0x29825c8 + 0x00050> in <filename unknown>:0 \n  at SslCertificateValidationTest.Program.Main (System.String[] args) <0x50fee0 + 0x00153> in <filename unknown>:0 \n```\n\nSince this seems like it's just a bug in Mono, I've changed my mind and have updated the code to be stricter. However, we'll see how it goes...\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2016-01-25T13:32:59Z",
        "body": "MailKit 1.2.17 has been pushed to nuget which contains my fix for the ValidateRemoteCertificate\n"
      },
      {
        "user": "infinitimods",
        "created_at": "2016-01-26T07:47:19Z",
        "body": "Thanks Jeff! I would agree and disagree with you about self signed certificates. I'd rather know that there's something wrong with my self signed certificate and have it fail on me. At the same time I see your concern. I'll check out your latest commit in a few days, I'm currently occupied with something else. Btw, looking forward to using MailKit and MimeKit in my project :)\n"
      }
    ]
  },
  {
    "number": 283,
    "title": "Question about Pop3ClientGetMessage(uniqueId);",
    "created_at": "2016-01-13T11:41:54Z",
    "closed_at": "2016-01-13T12:19:50Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/283",
    "body": "Why is the Pop3Client.GetMessage(uniqueId) obsolete when the Pop3Client.GetMessageUids() isn't?\n\nAnd what is otherwise the best method to retrieve chunks of messages.. for example 100 messages in one go.\n\nGreetings,\nKees van Spelde\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/283/comments",
    "author": "Sicos1977",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2016-01-13T12:19:50Z",
        "body": "GetMessage(uniqueid) is obsolete because it requires MailKit to track UIDs which is awkward and memory expensive.\n\nGetMessageUids() allows you to track uids yourself.\n\nThe way to use GetMessageUids is this:\n\n``` csharp\nvar uids = client.GetMessageUids ();\nfor (int i = 0; i < client.Count; i++) {\n    if (UniqueIdIsAlreadyDownloaded (uids[i]))\n        continue;\n    var message = client.GetMessage (i);\n    message.WriteTo (path);\n    AddUniqueIdToDownloadedList (uids[i]);\n}\n```\n\nIf you want to retrieve 100 messages in a row, you can use `client.GetMessages (startIndex, count);` or you can use `client.GetMessages (new int[] { index1, index2, index3, ... });`\n\nHope that helps.\n"
      }
    ]
  },
  {
    "number": 278,
    "title": "Why is IMAP limited to a single connection?",
    "created_at": "2016-01-04T10:51:53Z",
    "closed_at": "2016-01-04T11:54:27Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/278",
    "body": "I am using Mailkit in an application and I would ideally like to have two IMAP connections. One read only (sat in an IDLE loop) and the other ReadWrite for downloading messages and moving them about.\n\nCurrently this isn't possible as the code uses a single ImapEngine (and thus connection) no matter how many instances of the ImapClient you create and forces you to drop the idle before performing operations.\n\nIf I can have multiple clients connected to the same IMAP account at the same time why is this limitation imposed in MailKit?\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/278/comments",
    "author": "ben-rockliffe",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2016-01-04T11:54:27Z",
        "body": "Huh? What? You can just create multiple ImapClient instances and have each of them connect to the same server.\n\nEach ImapClient instance gets its own ImapEngine instance. I'm not sure how you came to the conclusion that there is a global ImapEngine that is shared...\n"
      },
      {
        "user": "Sicos1977",
        "created_at": "2016-01-04T17:57:20Z",
        "body": "I agree with jstedfast, I'm working on smothing simular to your problem and that works fine.\nAnd imho it is smarter to drop the idle mode since you don't want new events when you are moving e-mails around. Otherwise there is the possibility in creating loops\n"
      },
      {
        "user": "ben-rockliffe",
        "created_at": "2016-01-05T08:33:40Z",
        "body": "You are indeed correct, earlier in my development I was seeing messages similar to \"the imap client is busy in another thread..\" I have since found and eliminated a rouge thread that was being created and it does now work as you say.\n\nApologies for the confusion.\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2016-01-05T16:24:23Z",
        "body": "No worries :)\n\nGlad you got it working.\n"
      }
    ]
  },
  {
    "number": 273,
    "title": "GetFolder return null by using FolderNamespace",
    "created_at": "2015-12-11T09:06:20Z",
    "closed_at": "2015-12-11T09:19:07Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/273",
    "body": "Hello Jeffrey\n\nI am trying to open a trash folder by using Enum MailKit.Specialfolder in MS Office Home Outlook.\nBut I got null finally. Is it correct behaviour? Should I get the trash folder by using name or it is a bug? Should I wait for a new version?\n\nHere is an extract from my code:\n\nIMailFolder trashFolder = ImapClient.GetFolder(SpecialFolder.Trash); //trashFolder == null in result\n\nBest regards.\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/273/comments",
    "author": "yuribb",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2015-12-11T09:19:07Z",
        "body": "I probably should have designed this API to throw an exception in this case instead of returning null, but what this means is that your IMAP server either does not support the XLIST or SPECIAL-USE extensions -or- it doesn't define a Trash folder.\n\nThe basic IMAP protocol does not define where to find any folder except the Inbox.\n\nThe XLIST and SPECIAL-USE extensions both define similar ways of figuring out which folder is the Trash folder, Drafts folder, etc.\n\nTowards the end of the \"Using IMAP\" section in the README.md file, there's a paragraph explaining a possible alternative to use when the IMAP server does not support SPECIAL-USE or XLIST.\n\nThe example code shows how you might try and find the \"Sent\" folder, but you can adapt the logic for finding the Trash folder instead.\n\nI think that Microsoft's email products use the name \"Deleted Items\", but you could search for a folder named \"Delete Items\", \"Trash\", etc.\n\nHope that helps.\n"
      }
    ]
  },
  {
    "number": 270,
    "title": "Feature Request: Extend IProtocolLogger so it handles client vs server side data independently",
    "created_at": "2015-11-28T17:33:53Z",
    "closed_at": "2015-11-29T00:59:59Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/270",
    "body": "Right now it is just not easy to log/inspect client vs server request/responses.  I could try to take a glimpse at implementing it, however maybe you can point me on any considerations you think I should observe..\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/270/comments",
    "author": "pruiz",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2015-11-29T00:59:59Z",
        "body": "It already has `LogClient()` and `LogServer()`, what more do you need?\n"
      }
    ]
  },
  {
    "number": 269,
    "title": "Authentication failed trying to connect to IMAP:4 Exchange server",
    "created_at": "2015-11-27T05:23:51Z",
    "closed_at": "2015-11-29T00:58:38Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/269",
    "body": "I am trying to connect to an IMAP:4 enabled hosted Exchange Server using \"IMapClient\" class from MailKit but I am getting the Authentication failed exception. The following is the dump of the logger:\n\nConnected to imap://IP-ADDRESS:143/?starttls=when-available\nS: \\* OK The Microsoft Exchange IMAP4 service is ready.\nC: A00000000 CAPABILITY\nS: \\* CAPABILITY IMAP4 IMAP4rev1 LOGINDISABLED STARTTLS UIDPLUS MOVE ID CHILDREN IDLE NAMESPACE LITERAL+\nS: A00000000 OK CAPABILITY completed.\nC: A00000001 STARTTLS\nS: A00000001 OK Begin TLS negotiation now.\nC: A00000002 CAPABILITY\nS: \\* CAPABILITY IMAP4 IMAP4rev1 AUTH=PLAIN AUTH=NTLM AUTH=GSSAPI UIDPLUS MOVE ID CHILDREN IDLE NAMESPACE LITERAL+\nS: A00000002 OK CAPABILITY completed.\nC: A00000003 AUTHENTICATE NTLM\nS: +\nC: TlRMTVNTUAABAAAABwIIAAAAAAAgAAAAAAAAACAAAAA=\nS: + TlRMTVNTUAACAAAAEAAQADgAAAAFAokCT++vHlcHakoAAAAAAAAAAKQApABIAAAABgOAJQAAAA9EAFAAVABDAEwATwBVAEQAAgAQAEQAUABUAEMATABPAFUARAABAAoAQwBBAFMAMAAyAAQAHgBkAHAAdABjAGwAbwB1AGQALgBjAG8AbQAuAGEAdQADACoAYwBhAHMAMAAyAC4AZABwAHQAYwBsAG8AdQBkAC4AYwBvAG0ALgBhAHUABQAeAGQAcAB0AGMAbABvAHUAZAAuAGMAbwBtAC4AYQB1AAcACACYJccN0ijRAQAAAAA=\nC: TlRMTVNTUAADAAAAGAAYAFYAAAAYABgAbgAAAAAAAABAAAAAFgAWAEAAAAAAAAAAVgAAAAAAAACGAAAAAYIIAGUAbABlAGMAdAByAGkAYwBpAHQAeQDqlY7S6w1JqQAAAAAAAAAAAAAAAAAAAABmwpjC52AodwEn5tt4Or/Jsrx/RyHV0ew=\nS: A00000003 NO AUTHENTICATE failed.\nC: A00000004 AUTHENTICATE PLAIN\nS: +\nC: AGVsZWN0cmljaXR5AEVQYXNzd29yZDE=\nS: A00000004 NO AUTHENTICATE failed.\nC: A00000005 LOGIN ACCOUNT@EMAILADDRESS ACCPASSWORD\nS: A00000005 NO LOGIN failed.\nAUTHENTICATE failed.\n\nI should mention that same code works when I try to connect to our on-premiss exchange server but the Capabilities are a little bit different as followed:\n\nConnected to imap://IPADDRESS:143/?starttls=when-available\nS: \\* OK The Microsoft Exchange IMAP4 service is ready.\nC: V00000000 CAPABILITY\nS: \\* CAPABILITY IMAP4 IMAP4rev1 AUTH=PLAIN AUTH=NTLM AUTH=GSSAPI STARTTLS UIDPLUS ID CHILDREN IDLE NAMESPACE LITERAL+\nS: V00000000 OK CAPABILITY completed.\nC: V00000001 STARTTLS\nS: V00000001 OK Begin TLS negotiation now.\nC: V00000002 CAPABILITY\nS: \\* CAPABILITY IMAP4 IMAP4rev1 AUTH=PLAIN AUTH=NTLM AUTH=GSSAPI UIDPLUS ID CHILDREN IDLE NAMESPACE LITERAL+\nS: V00000002 OK CAPABILITY completed.\nC: V00000003 AUTHENTICATE NTLM\nS: +\nC: TlRMTVNTUAABAAAABwIIAAAAAAAgAAAAAAAAACAAAAA=\nS: + TlRMTVNTUAACAAAADgAOADgAAAAFAokCPaBgQj6SzAoAAAAAAAAAAKYApgBGAAAABgOAJQAAAA9SAE8AQwBLAEUATgBEAAIADgBSAE8AQwBLAEUATgBEAAEAEgBSAE8AQwBLAC0ARQBYADAAMQAEABoAUgBvAGMAawBlAG4AZAAuAGwAbwBjAGEAbAADAC4AUgBPAEMASwAtAEUAWAAwADEALgBSAG8AYwBrAGUAbgBkAC4AbABvAGMAYQBsAAUAGgBSAG8AYwBrAGUAbgBkAC4AbABvAGMAYQBsAAcACABFCJ2wmCjRAQAAAAA=\nC: TlRMTVNTUAADAAAAGAAYAFYAAAAYABgAbgAAAAAAAABAAAAAFgAWAEAAAAAAAAAAVgAAAAAAAACGAAAAAYIIAGYAaQBsAGUAUwBNAEEAUgBUADAAMQDxvOiYzHcqeQAAAAAAAAAAAAAAAAAAAABq6PWCwxas9yZzLne1nD9r+ys7XCOfPXQ=\nS: V00000003 OK AUTHENTICATE completed.\n\nAny thought on that?\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/269/comments",
    "author": "matt-mahdieh",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2015-11-29T00:58:38Z",
        "body": "Try disabling NTLM by using the following line of code before calling the Authenticate() method:\n\n``` csharp\nclient.AuthenticationMechanisms.Remove (\"NTLM\");\n```\n"
      },
      {
        "user": "matt-mahdieh",
        "created_at": "2015-12-14T01:02:06Z",
        "body": "Hi There,\n\nI gave it a try and it worked. Thanks for your help!\n\nRegards,\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2016-09-14T21:52:20Z",
        "body": "With this latest patch, you might not need to disable NTLM anymore. Let me know if you try it and it still fails.\n\nIf you'd rather wait for a new nuget release, I'll try to update the status of this bug when I get around to doing that.\n"
      }
    ]
  },
  {
    "number": 267,
    "title": "How get id of message?",
    "created_at": "2015-11-23T19:57:00Z",
    "closed_at": "2015-11-23T20:01:36Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/267",
    "body": "```\n using (var client = new Pop3Client ()) {\n                client.Connect (\"pop.mail.ru\", 995 , SecureSocketOptions.Auto);\n\n                client.Authenticate (\"xxx@mail.ru\", \"xxx\");\n\n\n                for (int i = 0; i < client.Count; i++) {\n                    var message = client.GetMessage (i);\n                    Console.WriteLine (\"Subject: {0}\", message.Subject);\n                    var data = message.MessageId;\n                     client.DeleteMessage();\n\n              }\n`\n\nHow get id of message?\n```\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/267/comments",
    "author": "Radzhab",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2015-11-23T20:01:36Z",
        "body": "The 'id' is whatever the value of `i` is.\n"
      }
    ]
  },
  {
    "number": 266,
    "title": "How get unread messages?",
    "created_at": "2015-11-23T18:04:20Z",
    "closed_at": "2015-11-23T18:32:21Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/266",
    "body": "Subj\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/266/comments",
    "author": "Radzhab",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2015-11-23T18:32:21Z",
        "body": "``` csharp\nforeach (var uid in folder.Search (SearchQuery.NotSeen)) {\n    var message = folder.GetMessage (uid);\n}\n```\n"
      },
      {
        "user": "s4eideh",
        "created_at": "2018-04-19T05:27:57Z",
        "body": "What about getting unread messages in  the Gmail \"Primary\" tab? "
      },
      {
        "user": "jstedfast",
        "created_at": "2018-04-19T13:41:43Z",
        "body": "@s4eideh there's no way to do that. That's something that is proprietary to GMail's web UI."
      },
      {
        "user": "eugenestepaniuk",
        "created_at": "2021-12-03T13:08:49Z",
        "body": "i am using query to get all messages in inbox\r\n```\r\nvar query = SearchQuery.All;\r\nvar uids = inbox.Search(query);\r\nvar items = inbox.Fetch(uids, MessageSummaryItems.Full | MessageSummaryItems.BodyStructure).Reverse();\r\nforeach (var item in items)\r\n{\r\n    ...\r\n}\r\n```\r\ncan I somehow determine which ones are unread without using the SearchQuery.NotSeen query separately?"
      },
      {
        "user": "jstedfast",
        "created_at": "2021-12-03T14:28:45Z",
        "body": "Yes, you just need to look at the Flags property:\r\n\r\n```csharp\r\nvar query = SearchQuery.All;\r\nvar uids = inbox.Search(query);\r\nvar items = inbox.Fetch(uids, MessageSummaryItems.Full | MessageSummaryItems.BodyStructure).Reverse();\r\nforeach (var item in items)\r\n{\r\n    if (item.Flags.Value.HasFlag (MessageFlags.Seen)) {\r\n        // The message has been seen/read.\r\n    } else {\r\n        // The message has not been seen/read.\r\n    }\r\n}\r\n```"
      }
    ]
  },
  {
    "number": 259,
    "title": "SSL v3.0 appears to not work correctly",
    "created_at": "2015-11-03T15:23:56Z",
    "closed_at": "2015-11-03T16:35:23Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/259",
    "body": "It's been noted during test that if SSL v3.0 is the only supported Version for SSL/TLS on the mail server then MailKit can't connect and gives {\"The client and server cannot communicate, because they do not possess a common algorithm\"} as the inner exception.\n\nAs soon as I enable TLS v1.0 or later it connects without complaint.\n\nI've made sure that I set the clients SslProtocols to SslProtocols.Ssl3 | SslProtocols.Tls | SslProtocols.Tls11 | SslProtocols.Tls12;\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/259/comments",
    "author": "Saurbaum",
    "comments": [
      {
        "user": "Saurbaum",
        "created_at": "2015-11-03T15:26:39Z",
        "body": "If I set it to only use SSL3 it works but I would have expected allowing all the SslProtocols it should accept the server.\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2015-11-03T16:35:23Z",
        "body": "I explicitly disabled SSLv3 because SSLv3 is known to be not secure since about a year and a half ago.\n\nNo one should be using SSLv3 anymore unless they have been living under a rock :-)\n"
      },
      {
        "user": "Saurbaum",
        "created_at": "2015-11-03T17:22:34Z",
        "body": "So if it's disabled why does it work when only SSL3 is set?\n\nEither there is a bug that there is a way to trick MailKit into using SSL3 (by removing the TLS protocols from the supported list) or there is a bug that it doesn't fall back to SSL3 even when it's explicitly set as a supported type.\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2015-11-03T18:44:54Z",
        "body": "I dunno, probably a bug in Microsoft's SslStream implementation.\n\nBTW, you can override which SSL/TLS protocols the client is allowed to use by setting the `SslProtocols` property on the client.\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2015-11-03T18:50:18Z",
        "body": "Oh, n/m, I see you already did that. I misunderstood your original report to mean that you set those flags on the server.\n\nI have no idea what the problem you are seeing is since those flags are passed verbatim to SslStream's `AuthenticateAsClient()` method.\n\nMicrosoft may have made it such that if you've added any of the TLS flags, it automatically disables SSLv3.\n"
      },
      {
        "user": "Saurbaum",
        "created_at": "2015-11-04T13:26:29Z",
        "body": "Thanks for looking into it.  This gives me the perfect excuse to drop SSL 3.0 support entirely.\n"
      }
    ]
  },
  {
    "number": 248,
    "title": "DNXCore50 Support",
    "created_at": "2015-09-23T11:07:32Z",
    "closed_at": "2015-09-23T16:45:37Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/248",
    "body": "Is this a project possibility?\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/248/comments",
    "author": "ghost",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2015-09-23T16:45:37Z",
        "body": "I'll accept patches to support it, but I will not be adding it myself.\n"
      }
    ]
  },
  {
    "number": 246,
    "title": "Can't open created msg file in Outlook",
    "created_at": "2015-09-14T22:22:46Z",
    "closed_at": "2015-09-14T23:45:22Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/246",
    "body": "Hello,\n\nFirst of all, fantastic library - there has clearly been a lot of effort put into this, and I've been looking for something like this for what feels like an eternity.\n\nI've just started playing about with MailKit - I have some basic code (based on the samples in this library) to download some messages from an IMAP Server:\n\n``` csharp\nusing (var client = new ImapClient(new ProtocolLogger(\"c:\\\\temp\\\\imap.log\")))\n{\n     client.Connect(\"outlook.office365.com\", 993, SecureSocketOptions.SslOnConnect);\n     client.Authenticate(\"notmyreal@emailaddress.com\", \"hunter2\");\n     client.Inbox.Open(FolderAccess.ReadOnly);\n\n     var uids = client.Inbox.Search(SearchQuery.All);\n\n     foreach (var uid in uids)\n     {\n        var message = client.Inbox.GetMessage(uid);\n        // write the message to a file\n        message.WriteTo(string.Format(\"c:\\\\temp\\\\{0}.msg\", uid));\n     }\n     client.Disconnect(true);\n}\n```\n\nThis works successfully and generates the IMAP log and creates the MSG files in said directory. The file will not open in Outlook, I've tried two different machines with Outlook 2013 installed, and tried to open all of them in a test machine with Outlook 2003 and 2007 installed.\n\nIn all instances I get this warning from Outlook:\n\n\"We can't open pathtomsg. It's possible the file is already open, or you don't have permission to open it. To check your permissions, right-click the file folder, then click properties.\"\n\nIf I open the MSG in notepad, it does seem to have the headers at the top followed by the content.\n\nAny insight at all would be most appreciated, I've kind of fallen at the first hurdle here :)\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/246/comments",
    "author": "gavsto",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2015-09-14T23:45:22Z",
        "body": "Outlook's .msg format is not in the MIME format, for that I think you might need to use the .eml extension.\n\nBeyond that, I don't know what the problem could be. The WriteTo() method disposes the stream, so that can't be the problem.\n"
      }
    ]
  },
  {
    "number": 241,
    "title": "deliveryMethod=\"specifiedPickupDirectory\"?",
    "created_at": "2015-09-07T19:37:47Z",
    "closed_at": "2015-09-07T20:14:20Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/241",
    "body": "I could very well be doing something stupid.  For eons I've built my web apps to use System.Net.Mail.SmtpClient to connect to localhost.  In my production environment there is an actual SMTP server running (IIS 6 SMTPSVC).  On my development environments, there is not.  Instead, the mail messages just got dropped into C:\\inetpub\\mailroot\\Queue as .eml files, which I could open with a text editor or Thunderbird to inspect.\n\nWhen I migrated from .NET 3.5 to 4.5.1, the arrangement I had in my development environments would no longer work until I added this to the Web.config:\n\n`<system.net>`\n`<mailSettings>`\n`<smtp deliveryMethod=\"specifiedPickupDirectory\">`\n`<specifiedPickupDirectory pickupDirectoryLocation=\"C:\\inetpub\\mailroot\\Queue\"/>`\n`</smtp>`\n`</mailSettings>`\n`</system.net>`\n\nNow I need DKIM.  But on the second line of this snippet...\n\n  var mailkit_smtp_client = new MailKit.Net.Smtp.SmtpClient();\n  mailkit_smtp_client.Connect(host:\"localhost\");\n\nI get this exception:\n\n  System.Net.Sockets.SocketException: A system call has failed 127.0.0.1:25\n\nCould Connect() be revised to support this scenario?\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/241/comments",
    "author": "KevinAndrewLipscomb",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2015-09-07T20:14:20Z",
        "body": "Why not just use `message.WriteTo (@\"C:\\inetpub\\mailroot\\Queue\\something.eml\");`?\n\nSmtpClient is for connecting to an SMTP server, not for saving files to disk.\n"
      }
    ]
  },
  {
    "number": 221,
    "title": "IMAP with Yahoo server",
    "created_at": "2015-07-30T13:59:33Z",
    "closed_at": "2015-07-30T16:27:40Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/221",
    "body": "@jstedfast Any change u could point me in the right direction with this error? My first attempt to use my mail client with Yahoo servers.\n\n**Problem**\nGetting `BAD [CLIENTBUG] UID SEARCH Command arguments invalid` on first message enumeration attemp for the Inbox folder\n\n**Code**\n\n``` csharp\nvar changes = folder.Search(MailKit.Search.SearchQuery.ChangedSince(this.HighestModSeq));\n// this.HighestModSeq = 0 in the first search\n```\n\n**Logging**\n\n```\nConnected to imaps://imap.mail.yahoo.com:993/\nS: * OK [CAPABILITY IMAP4rev1 ID NAMESPACE X-ID-ACLID UIDPLUS LITERAL+ CHILDREN XAPPLEPUSHSERVICE XYMHIGHESTMODSEQ AUTH=PLAIN AUTH=LOGIN AUTH=XOAUTH2 AUTH=XYMCOOKIE AUTH=XYMECOOKIE AUTH=XYMCOOKIEB64 AUTH=XYMPKI] IMAP4rev1 imapgate-1.8.1_01.20166 imap1015.mail.gq1.yahoo.com\nC: B00000000 AUTHENTICATE XOAUTH2\nS: + \nC: dXNlcj1hdWRpdG9yaWFfY20BYXV0aD1CZWFyZXIgQzEyMzQ1NjdtAQE=\nS: B00000000 NO [AUTHENTICATIONFAILED] (#AUTH901) The provided OAuth2 access token is invalid\nC: B00000001 AUTHENTICATE PLAIN\nS: + \nC: AGF1ZGl0b3JpYV9jbQBDMTIzNDU2N20=\nS: B00000001 OK AUTHENTICATE completed - Mailbox size in bytes is 2624334830\nC: B00000002 CAPABILITY\nS: * CAPABILITY IMAP4rev1 ID NAMESPACE X-ID-ACLID UIDPLUS LITERAL+ XAPPLEPUSHSERVICE XYMHIGHESTMODSEQ\nS: B00000002 OK CAPABILITY completed\nC: B00000003 NAMESPACE\nS: * NAMESPACE ((\"\" \"/\")) NIL NIL\nS: B00000003 OK NAMESPACE completed\nC: B00000004 LIST \"\" \"INBOX\"\nS: * LIST (\\HasNoChildren) \"/\" \"Inbox\"\nS: B00000004 OK LIST completed\nC: B00000005 EXAMINE Inbox\nS: * 3736 EXISTS\nS: * 0 RECENT\nS: * OK [UIDVALIDITY 1329333165] UIDs valid\nS: * OK [UIDNEXT 8633] Predicted next UID\nS: * FLAGS (\\Answered \\Deleted \\Draft \\Flagged \\Seen $Forwarded $Junk $NotJunk)\nS: * OK [PERMANENTFLAGS ()] No permanent flags permitted\nS: * OK [HIGHESTMODSEQ 6177296413517414400]\nS: B00000005 OK [READ-ONLY] EXAMINE completed; now in selected state\nC: B00000006 STATUS Inbox (UIDNEXT UNSEEN)\nS: * STATUS \"Inbox\" (UIDNEXT 8633 UNSEEN 3)\nS: B00000006 OK STATUS completed\nC: B00000007 UID SEARCH MODSEQ 0\nS: B00000007 BAD [CLIENTBUG] UID SEARCH Command arguments invalid\nC: B00000008 LOGOUT\nS: * BYE IMAP4rev1 Server logging out\nS: B00000008 OK LOGOUT completed\n```\n\nAny advice would be very appreciated. Thanks!\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/221/comments",
    "author": "jacargentina",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2015-07-30T16:27:40Z",
        "body": "It looks like Yahoo! Mail does not support the CONDSTORE extension which is where the MODSEQ property is defined for SEARCH.\n\nIt looks like Yahoo! Mail supports some non-standard extension called XYMHIGHESTMODSEQ which apparently doesn't have the Search support that the CONDSTORE spec has, but _does_ provide a HIGHESTMODSEQ when SELECTing a folder.\n\nSorry :-\\\n"
      },
      {
        "user": "jacargentina",
        "created_at": "2015-07-31T12:40:21Z",
        "body": "Right, but then, the code i have working just right for cyrus-imapd, and Google IMAP, which is fast because every sync i search for \"the modified things\" since last sync; how should i change it to detect this situation? Any ideas?\n"
      },
      {
        "user": "jacargentina",
        "created_at": "2015-07-31T13:06:55Z",
        "body": "I m trying this now, by having the previous (cached) `HighestModSeq`, so the first time it is 0.\n\n``` c#\nif (!client.Capabilities.HasFlag(ImapCapabilities.CondStore)) {\n    var changedMessages = folder.Fetch(0, -1, this.HighestModSeq, \n       MailKit.MessageSummaryItems.UniqueId | \n       MailKit.MessageSummaryItems.Envelope | \n       MailKit.MessageSummaryItems.Flags | \n       MailKit.MessageSummaryItems.InternalDate | \n       MailKit.MessageSummaryItems.BodyStructure);\n}\n```\n\nAnd getting:\n\n```\nConnected to imaps://imap.mail.yahoo.com:993/\nS: * OK [CAPABILITY IMAP4rev1 ID NAMESPACE X-ID-ACLID UIDPLUS LITERAL+ CHILDREN XAPPLEPUSHSERVICE XYMHIGHESTMODSEQ AUTH=PLAIN AUTH=LOGIN AUTH=XOAUTH2 AUTH=XYMCOOKIE AUTH=XYMECOOKIE AUTH=XYMCOOKIEB64 AUTH=XYMPKI] IMAP4rev1 imapgate-1.8.1_01.20166 imap1017.mail.bf1.yahoo.com\nC: B00000000 AUTHENTICATE XOAUTH2\nS: + \nC: dXNlcj1hdWRpdG9yaWFfY20BYXV0aD1CZWFyZXIgQzEyMzQ1NjdtAQE=\nS: B00000000 NO [AUTHENTICATIONFAILED] (#AUTH901) The provided OAuth2 access token is invalid\nC: B00000001 AUTHENTICATE PLAIN\nS: + \nC: AGF1ZGl0b3JpYV9jbQBDMTIzNDU2N20=\nS: B00000001 OK AUTHENTICATE completed - Mailbox size in bytes is 2629650589\nC: B00000002 CAPABILITY\nS: * CAPABILITY IMAP4rev1 ID NAMESPACE X-ID-ACLID UIDPLUS LITERAL+ XAPPLEPUSHSERVICE XYMHIGHESTMODSEQ\nS: B00000002 OK CAPABILITY completed\nC: B00000003 NAMESPACE\nS: * NAMESPACE ((\"\" \"/\")) NIL NIL\nS: B00000003 OK NAMESPACE completed\nC: B00000004 LIST \"\" \"INBOX\"\nS: * LIST (\\HasNoChildren) \"/\" \"Inbox\"\nS: B00000004 OK LIST completed\nC: B00000005 EXAMINE Inbox\nS: * 3744 EXISTS\nS: * 0 RECENT\nS: * OK [UIDVALIDITY 1329333165] UIDs valid\nS: * OK [UIDNEXT 8669] Predicted next UID\nS: * FLAGS (\\Answered \\Deleted \\Draft \\Flagged \\Seen $Forwarded $Junk $NotJunk)\nS: * OK [PERMANENTFLAGS ()] No permanent flags permitted\nS: * OK [HIGHESTMODSEQ 6177649778597346504]\nS: B00000005 OK [READ-ONLY] EXAMINE completed; now in selected state\nC: B00000006 STATUS Inbox (UIDNEXT UNSEEN)\nS: * STATUS \"Inbox\" (UIDNEXT 8669 UNSEEN 6)\nS: B00000006 OK STATUS completed\nC: B00000007 FETCH 1:* (UID FLAGS INTERNALDATE ENVELOPE BODYSTRUCTURE) (CHANGEDSINCE 0)\nS: B00000007 BAD [CLIENTBUG] FETCH Additional arguments found after last expected argument\nC: B00000008 LOGOUT\nS: * BYE IMAP4rev1 Server logging out\nS: B00000008 OK LOGOUT completed\n```\n\nI suspect the cause is the same, it doesnt like the `(CHANGEDSINCE 0)` part ?\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2015-07-31T15:55:12Z",
        "body": "Correct. That's what it looks like to me, too.\n"
      }
    ]
  },
  {
    "number": 219,
    "title": "How to download the attachments from a specified mail?",
    "created_at": "2015-07-30T09:23:05Z",
    "closed_at": "2015-07-30T16:23:40Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/219",
    "body": "Thank you for your MailKit ! I've been developing a mail cliient and imported the two libraries.The problem is that I couldn't get the attachments from a email.Can you help me with that? A simple code will do great help.\nPS.I am using ImapClient.\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/219/comments",
    "author": "githubxiaowen",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2015-07-30T16:23:40Z",
        "body": "If you have the full `MimeMessage` object, you can do:\n\n``` csharp\nforeach (var attachment in message.Attachments) {\n    // do stuff\n}\n```\n\nOr if you have not downloaded the full message, you can do:\n\n``` csharp\nvar items = client.Inbox.Fetch (0, -1, MessageSummaryItems.UniqueId | MessageSummaryItems.BodyStructure);\nforeach (var item in items) {\n    foreach (var attachment in item.Attachments) {\n        // do stuff\n    }\n}\n```\n"
      }
    ]
  },
  {
    "number": 218,
    "title": "Mark an email as read POP3",
    "created_at": "2015-07-24T17:43:47Z",
    "closed_at": "2015-07-24T17:51:31Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/218",
    "body": "Hi. I'm developing a desktop application that monitors an email and gets its messages.\nHowever, everytime I'm gonna read them, I'm obligated to read every email again and again.\nIs there a way to set them as READ and then only read the UNREAD emails?\n\nPlease help me\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/218/comments",
    "author": "ericscaglioni",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2015-07-24T17:51:31Z",
        "body": "POP does not support read/unread status, it only supports deleting messages.\n\nIf you want to track read/unread status, you'll need to keep a log of which messages you've already \"read\".\n\nIf the POP3 server supports the UIDL extension, using the UIDs is probably the simplest way. Otherwise you'll have to use something else... like an MD5 sum of a few choice message headers (avoid headers like `Status` and `X-Status` as they may change between downloads).\n\nTo track by uids, you might do something like this:\n\n``` csharp\nvoid DownloadUnreadMessages (HashSet<string> known)\n{\n    using (var client = new PopClient ()) {\n        client.Connect (\"pop.gmail.com\", 993, true);\n        client.Authenticate (\"username\", \"password\");\n\n        if (client.Capabilities.HasFlag (Pop3Capabilities.Uidl)) {\n            var uids = client.GetMessageUids ();\n            for (int i = 0; i < client.Count; i++) {\n                if (known.Contains (uids[i]))\n                    continue;\n\n                var message = client.GetMessage (i);\n                known.Add (uids[i]);\n            }\n        } else {\n            // good luck!\n        }\n\n        client.Disconnect (true);\n    }\n}\n```\n"
      },
      {
        "user": "ericscaglioni",
        "created_at": "2015-07-24T18:21:48Z",
        "body": "Thank you man!\n"
      }
    ]
  },
  {
    "number": 217,
    "title": "SMPP?",
    "created_at": "2015-07-19T20:39:11Z",
    "closed_at": "2015-07-19T20:45:02Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/217",
    "body": "Hi, Is there any chance MailKit supports SMPP?\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/217/comments",
    "author": "ghost",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2015-07-19T20:45:02Z",
        "body": "Sorry, it does not support SMPP. I'm not sure it would even be the right fit? I don't know much about SMS, but I thought it was completely different from email?\n"
      },
      {
        "user": "ghost",
        "created_at": "2015-07-19T21:00:05Z",
        "body": "It is completely different but was just asking because i'm looking SMPP library just thought MailKit would support it, but thanks @jstedfast  \n"
      },
      {
        "user": "jstedfast",
        "created_at": "2015-07-19T21:14:02Z",
        "body": "No problem. Hope you find something that does SMS/SMPP.\n"
      }
    ]
  },
  {
    "number": 188,
    "title": "ParseBody results in empty PartSpecifier",
    "created_at": "2015-05-12T19:19:07Z",
    "closed_at": "2015-05-12T19:47:33Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/188",
    "body": "I'm not sure if this is expected or not, but if I do a BODYSTRUCTURE fetch, ParseBody() is called with string.EMPTY. The summary.Body therefore doesn't have a PartSpecifier. Is the intent of the string.Empty to auto-discover the Part (TEXT in my case, but could be anything, I assume).\n\n```\n                case \"BODYSTRUCTURE\":\n                    summary.Body = ImapUtils.ParseBody (engine, string.Empty, ic.CancellationToken);\n                    summary.FetchedItems |= MessageSummaryItems.BodyStructure;\n                    break;\n```\n\nthen\n\n```\n            body.ContentTransferEncoding = enc;\n            body.ContentDescription = desc;\n            body.PartSpecifier = path;\n```\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/188/comments",
    "author": "jvilhuber",
    "comments": [
      {
        "user": "jvilhuber",
        "created_at": "2015-05-12T19:19:28Z",
        "body": "If there's a better way to ask these kinds of questions than opening an issue, please let me know.\n"
      },
      {
        "user": "jvilhuber",
        "created_at": "2015-05-12T19:25:13Z",
        "body": "I ask because I'm trying to make sure I can read a stream instead of reading the body into memory like this:\n\n```\n    var message = folder.GetStream (summary.UniqueId.Value, text, 0, (int)text.Octets);\n```\n\nand underneath, GetStream() uses part.PartSpecifier to select the BODY.PEEK[XXX] value, and since the PartSpecifier here is the empty string, I don't think it's doing what I thought it would. Perhaps I'm misusing the API?\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2015-05-12T19:34:41Z",
        "body": "> The summary.Body therefore doesn't have a PartSpecifier.\n\nIf the message has only 1 part, then there's no need for a part specifier.\n\n> Is the intent of the string.Empty to auto-discover the Part (TEXT in my case, but could be anything, I assume).\n\nSort of, but not really. The top-level MIME part does not have a part specifier (hence string.Empty). If that part is a multipart, then it's children will have part specifiers.\n\nTEXT is not a part specifier, it's just a string that gets _appended to_ the part specifier.\n\n> and since the PartSpecifier here is the empty string, I don't think it's doing what I thought it would.\n\nWhat do you expect it to return? FWIW, I'm pretty sure you want to pass `0` as the offset.\n"
      },
      {
        "user": "jvilhuber",
        "created_at": "2015-05-12T19:38:16Z",
        "body": "Offset: Yea, I was playing with some stuff. Fixed :)\nExpecting: I was expecting the resulting IMAP command to get  `UID FETCH 8622 (BODY.PEEK[TEXT]<0.6>)`, instead of `UID FETCH 8622 (BODY.PEEK[]<0.6>)`, which gets me the first 6 bytes of the headers (I think).\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2015-05-12T19:41:54Z",
        "body": "it's intended to start with the headers fwiw.\n"
      },
      {
        "user": "jvilhuber",
        "created_at": "2015-05-12T19:43:07Z",
        "body": "Ok, thanks. Will play (and learn) more.\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2015-05-12T19:47:33Z",
        "body": "I was thinking of adding an API to allow specifying TEXT, but I think that would be awkward because the only Octets value there is assumes that you start with the headers.\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2015-05-13T13:38:42Z",
        "body": "I have added new GetStream() overloads which take a bool contentOnly parameter allowing you to fetch only the TEXT section.\n\nAre you by chance just trying to get the TEXT section in order to show a preview of the message in a message-list (like some mobile mail clients (such as the iOS mail app) do?).\n"
      },
      {
        "user": "jvilhuber",
        "created_at": "2015-05-13T15:38:13Z",
        "body": "Yes, precisely. Perhaps a GetPreview() api could be useful, though that could turn into a quagmire with html and other not-easily-previewable messages..\n"
      }
    ]
  },
  {
    "number": 181,
    "title": "Gmail won't accept duplicate mails.",
    "created_at": "2015-05-06T07:30:14Z",
    "closed_at": "2015-05-06T11:09:39Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/181",
    "body": "Sorry, I didn't know how else to contact you, and this actually has nothing to do with MailKit, but I wanted to share this in case anyone else has the same grief I did, you will be able to advise them. I'll close this as soon as possible. \n\nTurns out it was more than the lack of a 'from' address that caused me not to see mails sent via MailKit Smtp. When I delete a new mail in gmail, and it goes to the bin, subsequent sends of the same mail seem to be ignored by the gmail inbox. I have to clear the bing folder before I can send and receive that message again.\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/181/comments",
    "author": "bradykelly",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2015-05-06T10:53:50Z",
        "body": "It might be due to an identical Message-Id header? If you are downloading the message from GMail and then re-sending it back to your GMail account, it may decide that the message is looping by reading existing Received headers as well.\n"
      },
      {
        "user": "bradykelly",
        "created_at": "2015-05-06T11:09:34Z",
        "body": "Thanks, that's nice to know. Such a looping check is a good thing - imagine I accidentally put my test code in a loop and bomb someone's mailbox.\n\nI'll try removing that before re-sending the test mail.\n"
      }
    ]
  },
  {
    "number": 180,
    "title": "Not receiving a MimeMessage sent on SmtpClient",
    "created_at": "2015-05-04T07:03:56Z",
    "closed_at": "2015-05-05T07:25:40Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/180",
    "body": "I'm just trying out MailKit for the first time, so I may be way off here, but I am using the Net.Pop3Client to pull a MimeMessage, and then send it to a new recipient. I am using the code below to send it, but it never appears in the recipient's gmail inbox:\n\n```\nusing (var smtp = new MailKit.Net.Smtp.SmtpClient())\n{\n    smtp.Connect(\"smtp.gmail.com\", 587, false);\n    smtp.AuthenticationMechanisms.Remove(\"XOAUTH2\");\n    smtp.Authenticate(SmtpUser, SmtpPassword);\n\n    message.To.Clear();\n    message.To.Add(new MailboxAddress(\"Brady Kelly\", SmtpRecipient));\n    smtp.Send(message);\n    smtp.Disconnect(true);\n}\n```\n\nThe SmtpRecipient value is correct. I am using this with the built-in SMTP client and that works fine.\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/180/comments",
    "author": "bradykelly",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2015-05-04T11:12:42Z",
        "body": "That looks correct, but make sure that the message does not have any Resent-From, Resent-To, Resent-Cc, etc. headers. If any of those headers are set, MailKit's SMTP implementation will use those instead of the normal From/To/Cc/Bcc headers.\n\nIf that's not the problem, try getting a log of the SMTP commands being sent:\n\n``` csharp\nusing (var smtp = new MailKit.Net.Smtp.SmtpClient(new ProtocolLogger(\"smtp.log\")))\n```\n\nIt's possible that the GMail SMTP server is rejecting the message for some reason and MailKit isn't properly catching the error(?).\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2015-05-04T11:16:15Z",
        "body": "I'll improve the docs to explain how it decides which sender and recipients to use when sending the message when you use `Send (MimeMessage message)`.\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2015-05-04T11:21:30Z",
        "body": "Oh, I bet I know what the problem is: You aren't setting the Sender or From header, so MailKit will use whatever the Sender or From header existed in the message downloaded from the POP3 server.\n\nMy guess is that since the email address that MailKit is choosing to use as the sender is not your email address, GMail is (silently?) rejecting it.\n"
      },
      {
        "user": "bradykelly",
        "created_at": "2015-05-05T07:25:40Z",
        "body": "Thank you very much, Jeffrey. I have just tried again, with a proper sender, and all is running smooth as hell. I love MailKit!\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2015-05-05T11:04:55Z",
        "body": "Awesome! Glad you figured it out and love MailKit :-)\n"
      }
    ]
  },
  {
    "number": 179,
    "title": "Preserving Created timestamps",
    "created_at": "2015-04-22T08:24:14Z",
    "closed_at": "2015-04-22T12:41:05Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/179",
    "body": "I'm using folder.Append(meesage) to push emails to an imap server. Everything works fine, but when I accessed mailbox using webmail client, I can only sort emails by created date. How can I preserve created when I push the email?\n\nThank you for your time!\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/179/comments",
    "author": "rkqiku",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2015-04-22T12:41:05Z",
        "body": "There's an Append() method that takes a timestamp that you can use.\n"
      }
    ]
  },
  {
    "number": 177,
    "title": "Great Work!!",
    "created_at": "2015-04-13T07:53:41Z",
    "closed_at": "2015-04-13T13:28:23Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/177",
    "body": "Hi \n\nJust wanted to say Awesome job on this.. Super fast.. \n\nLooking for some help.. doing a search SearchQuery.FromContains(\"joe@yahoo.com\"), I get no results.. I know that there is joe@yahoo.com..  \n\nSearching for  SearchQuery.FromContains(\"joe\"), I get results.. \n\nIs there anyway of searching for the From email Address\n\nCheers,\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/177/comments",
    "author": "stony69",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2015-04-13T13:28:23Z",
        "body": "Unfortunately, FromContains() is server implementation dependent. However, what you can try is to use the `SearchQuery.Header (\"From\", \"joe@yahoo.com\")` query instead.\n\nHmmm, I should probably rename this to HeaderContains so it makes more sense and is more consistent with the others...\n"
      }
    ]
  },
  {
    "number": 172,
    "title": "Way to correctly build a folder tree on cyrus & also on gmail",
    "created_at": "2015-04-08T13:15:54Z",
    "closed_at": "2015-04-08T13:39:49Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/172",
    "body": "I've built my email client on mailkit, developing first with cyrus imapd as the imap server.\nNow i'm trying to get it working also with gmail. AFAIK my understanding of IMAP structures is my problem.\n\nOn cyrus i simply build a tree on the UI where the root of any IMAP account is:\n\n```\nvar root = client.Inbox;\n```\n\nAnd then it has the subfolders below with:\n\n```\nvar nodes_cyrus = root.GetSubfolders(...);\n```\n\nNow with gmail, that doesnt work. I've learn that i have to fetch all the folders available with:\n\n```\nvar root = client.GetFolder(client.PersonalNamespaces[0]);\nvar nodes_gmail = root.GetSubfolders(...);\n```\n\nBut here starts my confusion: this nodes_gmail CONTAINS the Inbox ??? So, any little help would be great. How can i write 1 code to rule them all (cyrus & gmail?)\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/172/comments",
    "author": "jacargentina",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2015-04-08T13:39:49Z",
        "body": "Every IMAP server structures their folders differently, unfortunately.\n\nThe way to do it with every IMAP server is to use the namespace approach:\n\n``` csharp\nvar root = client.GetFolder (client.PersonalNamespaces[0]);\nvar toplevel_folders = root.GetSubfolders (...);\n```\n\nI believe that INBOX will always be included in that list. If not, you'll just have to pretend that it is there (the Inbox folder is _always_ at the top-level).\n\nHope that helps.\n"
      }
    ]
  },
  {
    "number": 168,
    "title": "How to check if ImapClient is disposed",
    "created_at": "2015-03-31T12:34:50Z",
    "closed_at": "2015-04-01T16:14:28Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/168",
    "body": "I dont see any way to check easily for that?\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/168/comments",
    "author": "jacargentina",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2015-04-01T16:14:28Z",
        "body": "There's no way to check for this other than keeping track of the disposed state yourself, I guess.\n\nYou could subclass ImapClient and override the Dispose(bool disposing) method to keep track of whether or not it's been disposed.\n"
      }
    ]
  },
  {
    "number": 158,
    "title": "Is it possible to know if a message has attachment before downloading them?",
    "created_at": "2015-03-10T19:13:58Z",
    "closed_at": "2015-03-11T13:10:24Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/158",
    "body": "We have a limit in terms of attachment size and number our program can process. I would rather skip messages that are too big. Last time I tried I couldn't figure out a way to know how many attachment a message has by looking at the Message Summary.\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/158/comments",
    "author": "xavier-rigau",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2015-03-10T19:26:34Z",
        "body": "Yes, this is possible.\n\nWhat you need to do is make sure to include the `MessageSummaryItems.BodyStructure` flag in the bitmask of items you want from `folder.Fetch (...)`. The `MessageSummary` items returned will have their `Body` properties set. The `Body` property is similar to a `MimeMessage.Body` in that it is a hierarchical tree structure of MIME parts. The base `BodyPart` class has very few usable properties on it (it's similar to the base `MimeEntity` class in MimeKit) and so you must check if the `BodyPart` is a `BodyPartBasic` (`BodyPartText` is a subclass of `BodyPartBasic` which has additional properties such as the number of lines of text), `BodyPartMultipart`, or `BodyPartMessage`. A `BodyPartMultipart` will contain a collection of child `BodyPart` objects, etc.\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2015-03-11T13:10:24Z",
        "body": "I've just added a number of convenience properties to `MessageSummary`:\n1. `BodyParts` returns `IEnumerable<BodyPartBasic>`, essentially flattening the MIME hierarchy for easier iteration.\n2. `Attachments` filters the list of `BodyParts` to only include parts that are attachments.\n3. `TextBody` returns the `BodyPartText` object that represents the `text/plain` message body, if it exists, using the same heuristics as `MimeMessage.TextBody`.\n4. `HtmlBody` returns the `BodyPartText` object that represents the `text/html` message body, if it exists, using the same heuristics as `MimeMessage.HtmlBody`.\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2015-03-11T13:12:04Z",
        "body": "I should also note that each `BodyPartBasic` has an `Octets` property which is the size (in bytes) of the MIME part.\n"
      }
    ]
  },
  {
    "number": 152,
    "title": "Accessing IMAP calendar, contacts, notes, tasks etc",
    "created_at": "2015-02-18T16:39:50Z",
    "closed_at": "2015-02-18T16:43:26Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/152",
    "body": "Is there any way how can I fetch items like calendar appointment, contacts, notes, tasks and other items in folders? \nI'm aware there is not parser for those items, but I just need to be able to fetch them and save locally.\n\nThanks a lot!\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/152/comments",
    "author": "rkqiku",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2015-02-18T16:43:26Z",
        "body": "Assuming you mean that these items are stored on an IMAP server, they must be in the rfc5322 message format and so you can already fetch them like you'd fetch any message in a folder.\n"
      },
      {
        "user": "unnatRevo",
        "created_at": "2019-10-24T05:07:34Z",
        "body": "How to identify such messages like are they of Contacts (.vcf format) or Calendar (.ics format) or regular email (.eml/.msg format file)?"
      },
      {
        "user": "jstedfast",
        "created_at": "2019-10-24T12:20:36Z",
        "body": "I don't know, I've never seen them."
      },
      {
        "user": "unnatRevo",
        "created_at": "2019-10-24T14:25:33Z",
        "body": "> I don't know, I've never seen them.\r\n\r\nCan you please help me with, how to save such messages into the storage drive and open with Microsoft Outlook client and open it successfully !?\r\n\r\nBelow is the output of the file which I've got from the Calendar folder.\r\n\r\n```\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=\"us-ascii\"\r\nFrom: Microsoft Exchange Server 2010\r\nTo: Unnat <my_id@my_domain.com>\r\nSubject: Retrieval using the IMAP4 protocol failed for the following message:\r\n 81\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nThe server couldn't retrieve the following message:\r\n\r\nSubject: \"Mail subject\"\r\nFrom: \"Steve\" (\"/o=3DCAPTAIN/ou=3DExchange Administrative Group (F=\r\nYDIBOHF23SUIKD)/cn=3DRecipients/cn=3Dd4ac10b72ca2446eb0cb65bcc110d4eb-Steve=\r\nKoh\")\r\nSent date: 9/12/2019 2:56:56 PM\r\n\r\nThe message hasn't been deleted. You might be able to view it using either =\r\nOutlook or Outlook Web App. You can also contact the sender to find out wha=\r\nt the message says.=\r\n```\r\nWith this output, Calendar application cannot open this file."
      },
      {
        "user": "jstedfast",
        "created_at": "2019-10-24T15:55:00Z",
        "body": "Looks like a fake message that the server auto-generated specially for your FETCH request.\r\n\r\nThis means that you can't get calendar data using MailKit. Sorry. There's just no way to get it because your server doesn't support downloading calendar data via the IMAP protocol."
      },
      {
        "user": "unnatRevo",
        "created_at": "2019-10-24T16:41:00Z",
        "body": "Fair enough. can I download calendar or other folder messages via IMAP protocol by any mean? "
      },
      {
        "user": "jstedfast",
        "created_at": "2019-10-24T17:43:53Z",
        "body": "Nope. You need to use the Exchange Protocol which MailKit does not support."
      }
    ]
  },
  {
    "number": 145,
    "title": "Cannot get message by UniqueId from Starred folder (gmail)",
    "created_at": "2015-02-10T14:11:57Z",
    "closed_at": "2015-02-12T07:54:59Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/145",
    "body": "It seems something wrong with working with Starred folder on gmail server. The using\nFetchAsync, it is returning empty collection, when passing UniqueId and use \"[Gmail]/Starred\" as current folder.\n\nvar messages = await currentFolder.FetchAsync(uniqueIds, MessageSummaryItems.BodyStructure | MessageSummaryItems.All | MessageSummaryItems.UniqueId, cancellationToken).ConfigureAwait(false);                                              \n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/145/comments",
    "author": "vzhusel",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2015-02-10T19:53:20Z",
        "body": "1. Are you sure you have the correct UIDs?\n2. Are you sure those UIDs exist in that folder?\n3. Did you Open() the folder before calling FetchAsync()?\n\nTry passing a `ProtocolLogger` to the ImapClient constructor.\n\n``` csharp\nclient = new ImapClient (new ProtocolLogger (\"imap.log\"));\n```\n\nso that you can get a log of the interaction with the IMAP server to see what might be going wrong.\n"
      },
      {
        "user": "vzhusel",
        "created_at": "2015-02-11T09:06:34Z",
        "body": "Jeffrey,\n1. Yes\n2. Yes\n3. Yes\n\nThe problem is that folder Starred is like aggregate folder at Gmail it shows all emails which are marked as flagged from other folders. But there's no way to determine from which folder they are, right now. I can get emails using FetchAsync and pass indexes, but cannot get single email using Starred folder and UniqueId \n"
      },
      {
        "user": "jstedfast",
        "created_at": "2015-02-11T15:15:20Z",
        "body": "How are you getting the UIDs? It doesn't matter that the Starred folder is an aggregate because IMAP has no such concept and so GMail will reassign new UIDs to those messages that are unique to that folder.\n\nFor example, a message might have a UID of 710 in the Inbox, be starred, and so will show up in the Starred folder... but it's UID in the Starred folder might be 5.\n\nMy guess is that you are using the wrong UIDs.\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2015-02-11T15:16:22Z",
        "body": "In other words: UIDs are not unique across the account, they are unique per folder.\n"
      },
      {
        "user": "vzhusel",
        "created_at": "2015-02-11T15:17:40Z",
        "body": "I get UIDs using FetchAsync and passing indexes. Thank you, for the explanation, let me double check everything.\n"
      },
      {
        "user": "vzhusel",
        "created_at": "2015-02-12T07:54:59Z",
        "body": "I have found a problem, then  I tried to open email, I marked as read using SetFlagsAsync and this method was removing Flagged flag, if only Read was passed. Issue resolved. Thank you, for you help.\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2015-02-12T16:46:02Z",
        "body": "Ah, yea, you probably wanted to use AddFlagsAsync() instead.\n"
      },
      {
        "user": "truane",
        "created_at": "2015-02-13T09:41:36Z",
        "body": "can you explain when we should use SetFlags and when we should use  AddFlags? Do we need to check if the flag already exists exist first?\n\nor is the the first time you call it you use set after that you use add?\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2015-02-13T15:30:08Z",
        "body": "SetFlags() is an absolute thing. When you set the flags to X, they become X... not X + whatever was already set before.\n\nAddFlags() adds the flags to the existing flags. So if the flags are X and you call AddFlags(Y), then the result will be X+Y.\n\nRemoveFlags() is the opposite of AddFlags().\n"
      }
    ]
  },
  {
    "number": 133,
    "title": "Size of fetched mails affected by order - ReverseArrival",
    "created_at": "2014-12-13T19:02:02Z",
    "closed_at": "2014-12-14T18:37:00Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/133",
    "body": "I'm trying to fetch all email messages sorted by Arrival date, reversed (using imap client)\n\nIn first case, I received 4 MailKit.UniqueId (Ids are unique), but after using .Fetch result (messages) contained only 2 messages.\n\n```\n        var inboxFolder = client.Inbox;\n        inboxFolder.Open(MailKit.FolderAccess.ReadOnly);\n        var searchQuery = MailKit.Search.SearchQuery.NotDeleted;\n        var orderBy = new [] { MailKit.Search.OrderBy.ReverseArrival };\n\n        var uniqueIds = inboxFolder.Search(searchQuery, orderBy);\n        if (uniqueIds.Count > 0)\n        {\n\n            var messages = inboxFolder\n                .Fetch(uniqueIds, MessageSummaryItems.Full | MessageSummaryItems.BodyStructure | MessageSummaryItems.References | MessageSummaryItems.UniqueId)\n                .ToList();\n        }\n```\n\nIn the second case, I did the same but without using orderBy. UniqueIds contained same values, but Fetch() returned only 2 messages.\n\n```\n        var inboxFolder = client.Inbox;\n        inboxFolder.Open(MailKit.FolderAccess.ReadOnly);\n        var searchQuery = MailKit.Search.SearchQuery.NotDeleted;\n\n        var uniqueIds = inboxFolder.Search(searchQuery);\n        if (uniqueIds.Count > 0)\n        {\n\n            var messages = inboxFolder\n                .Fetch(uniqueIds, MessageSummaryItems.Full | MessageSummaryItems.BodyStructure | MessageSummaryItems.References | MessageSummaryItems.UniqueId)\n                .ToList();\n        }\n```\n\nIs that really possible or is there something I overlooked?\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/133/comments",
    "author": "eCorke",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2014-12-13T23:27:56Z",
        "body": "it might be a bug in the way that MailKit is serializing `uniqueIds` in the IMAP command being sent to the server.\n\nCould you get a protocol log by passing `new ProtocolLogger (\"imap.log\")` as an argument to the ImapClient .ctor?\n\ne.g.:\n\n``` csharp\nvar client = new ImapClient (new ProtocolLogger (\"imap.log\"))\n```\n"
      },
      {
        "user": "eCorke",
        "created_at": "2014-12-14T14:46:08Z",
        "body": "Data described in first test are currently unavaiable, so I tried to find same problem somewhere else. \nSearch returned 51 emails, but Fetch only 1.\n\n(private data were *********_CENSORED**_*******)\n\n```\nConnected to imap://**********CENSORED**********\nS: * OK IMAPrev1\nC: A00000000 CAPABILITY\nS: * CAPABILITY IMAP4 IMAP4rev1 CHILDREN IDLE QUOTA SORT ACL NAMESPACE RIGHTS=texk\nS: A00000000 OK CAPABILITY completed\nC: A00000001 LOGIN **********CENSORED********** \"**********CENSORED**********\"\nS: A00000001 OK LOGIN completed\nC: A00000002 CAPABILITY\nS: * CAPABILITY IMAP4 IMAP4rev1 CHILDREN IDLE QUOTA SORT ACL NAMESPACE RIGHTS=texk\nS: A00000002 OK CAPABILITY completed\nC: A00000003 NAMESPACE\nS: * NAMESPACE ((\"\" \".\")) NIL ((\"#Public\" \".\"))\nS: A00000003 OK namespace command complete\nC: A00000004 LIST \"\" \"INBOX\"\nS: * LIST (\\HasChildren) \".\" \"INBOX\"\nS: A00000004 OK LIST completed\nC: A00000006 EXAMINE **********CENSORED**********\nS: * 51 EXISTS\nS: * 0 RECENT\nS: * FLAGS (\\Deleted \\Seen \\Draft \\Answered \\Flagged)\nS: * OK [UIDVALIDITY 1406135590] current uidvalidity\nS: * OK [UNSEEN 4] unseen messages\nS: * OK [UIDNEXT 54] next uid\nS: * OK [PERMANENTFLAGS ()] limited\nS: A00000006 OK [READ-ONLY] EXAMINE completed\nC: A00000007 CHECK\nS: A00000007 OK CHECK completed\nC: A00000008 UID SORT (REVERSE ARRIVAL) US-ASCII UNDELETED\nS: * SORT 53 52 51 50 49 48 47 46 45 44 43 42 41 40 39 38 37 36 35 34 33 32 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 8 12 11 10 9 7 6 5 4 3\nS: A00000008 OK UID completed\nC: A00000009 UID FETCH 53:13,8,12:9,7:3 (UID FLAGS INTERNALDATE RFC822.SIZE ENVELOPE BODYSTRUCTURE BODY.PEEK[HEADER.FIELDS (REFERENCES)])\nS: * 6 FETCH (UID 8 RFC822.SIZE 5262 FLAGS **********CENSORED**********\nS: \nS: )\nS: A00000009 OK UID completed\n```\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2014-12-14T15:25:13Z",
        "body": "The serialized uniqueIds (\"53:13,8,12:9,7:3\") is correct, however, it is possible that your IMAP server is buggy and does not like the reverse-ordered ranges.\n\nTry sorting the returned uniqueIds before calling Fetch() and see if that gets you the expected results. If not, I'm not sure what the problem is... the command that MailKit is sending is correct.\n"
      },
      {
        "user": "eCorke",
        "created_at": "2014-12-15T07:38:34Z",
        "body": "Ok, that's all I needed.\nI solved problem client side data sorting, it really doesn't matter in this case fetched data aren't that big. It was just little strange behaviour.\nThanks again. Have a nice day.\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2014-12-15T12:59:24Z",
        "body": "no problem, glad that worked out for you\n"
      }
    ]
  },
  {
    "number": 129,
    "title": "IsAttachment is false for Attachment.",
    "created_at": "2014-12-11T12:13:43Z",
    "closed_at": "2014-12-11T14:05:51Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/jstedfast/MailKit/issues/129",
    "body": "I used Client.Inbox.Fetch(messagesUids, MessageSummaryItems.Full); for getting information from mailbox, and unfortunately for sent email i received there is no attachment.\nI used Gmail account, Imap, with email without subject and body.\n",
    "comments_url": "https://api.github.com/repos/jstedfast/MailKit/issues/129/comments",
    "author": "WesolyPierozek",
    "comments": [
      {
        "user": "jstedfast",
        "created_at": "2014-12-11T14:05:51Z",
        "body": "You need to request the BodyStructure (Full only requests Body which does not contain the needed information to determine if it is an attachment or not).\n\nI'm adding remarks for the IsAttachment, ContentDisposition, ContentLocation, and ContentLanguage properties to note that the BodyStructure flag must be used for these properties to be populated.\n"
      },
      {
        "user": "jstedfast",
        "created_at": "2014-12-11T14:11:19Z",
        "body": "In other words, try this:\n\n``` csharp\nclient.Inbox.Fetch(messagesUids, MessageSummaryItems.Full | MessageSummaryItems.BodyStructure);\n```\n"
      },
      {
        "user": "WesolyPierozek",
        "created_at": "2014-12-11T14:58:20Z",
        "body": "Thanks a lot, it changes a lot.\n"
      }
    ]
  }
]