[
  {
    "number": 3454,
    "title": "  java.lang.NoClassDefFoundError: com/google/gson/stream/JsonReader  error  when start up zipkin 2.23.16 server",
    "created_at": "2022-06-16T07:23:11Z",
    "closed_at": "2024-02-18T23:52:53Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/openzipkin/zipkin/issues/3454",
    "body": "java.lang.NoClassDefFoundError: com/google/gson/stream/JsonReader\r\n\tat zipkin2.internal.JsonCodec$JsonReader.<init>(JsonCodec.java:51) ~[classes/:?]\r\n\tat zipkin2.internal.JsonCodec.readList(JsonCodec.java:143) ~[classes/:?]\r\n\tat zipkin2.codec.SpanBytesDecoder$3.decodeList(SpanBytesDecoder.java:123) ~[classes/:?]\r\n\tat zipkin2.collector.Collector.decodeList(Collector.java:196) ~[classes/:?]\r\n\tat zipkin2.collector.Collector.acceptSpans(Collector.java:186) ~[classes/:?]\r\n\tat zipkin2.collector.Collector.acceptSpans(Collector.java:172) ~[classes/:?]\r\n\tat zipkin2.collector.kafka.KafkaCollectorWorker.run(KafkaCollectorWorker.java:111) ~[classes/:?]\r\n\tat zipkin2.collector.kafka.KafkaCollector$LazyKafkaWorkers.lambda$guardFailures$0(KafkaCollector.java:265) ~[classes/:?]\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_201]\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_201]\r\n\tat java.lang.Thread.run(Thread.java:748) [?:1.8.0_201]\r\nCaused by: java.lang.ClassNotFoundException: com.google.gson.stream.JsonReader\r\n\tat java.net.URLClassLoader.findClass(URLClassLoader.java:382) ~[?:1.8.0_201]\r\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:424) ~[?:1.8.0_201]\r\n\tat sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349) ~[?:1.8.0_201]\r\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:357) ~[?:1.8.0_201]\r\n\t... 11 more",
    "comments_url": "https://api.github.com/repos/openzipkin/zipkin/issues/3454/comments",
    "author": "Layfolk-zcy",
    "comments": [
      {
        "user": "saff22",
        "created_at": "2023-12-01T13:35:11Z",
        "body": "Hi the error java.lang.NoClassDefFoundError: com/google/gson/stream/JsonReader indicates that the class JsonReader from the package com.google.gson.stream is not found during runtime. #3454\r\n\r\nPlease add this dependency in the dependencies section as it is missing\r\n<dependency>\r\n        <groupId>com.google.code.gson</groupId>\r\n        <artifactId>gson</artifactId>\r\n        <version>2.8.9</version>\r\n    </dependency>\r\n</dependencies>"
      },
      {
        "user": "codefromthecrypt",
        "created_at": "2024-02-18T23:52:53Z",
        "body": "Due to the error, my guess is you are running a custom zipkin server, which is not supported. Since it isn't supported, we can't open issues about problems with custom servers.\r\n\r\nIf you are getting this error with the builds we provide, docker or executable jar, please re-open!"
      }
    ]
  },
  {
    "number": 2468,
    "title": "setTag() to string",
    "created_at": "2019-03-25T12:33:25Z",
    "closed_at": "2019-03-26T00:51:29Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/openzipkin/zipkin/issues/2468",
    "body": "I am trying to send some information via Zipkin spans using set Tag() like hostname, application port, environment etc.  How to convert these values as Strings using SetTag().\r\n\r\nCan someone help me on this ",
    "comments_url": "https://api.github.com/repos/openzipkin/zipkin/issues/2468/comments",
    "author": "koushik9951",
    "comments": [
      {
        "user": "codefromthecrypt",
        "created_at": "2019-03-26T00:51:29Z",
        "body": "Hi, I believe you were asking this on gitter, which is the correct place to do this. The same people who would work on an issue have been trying to help you there. Please try to explain on gitter. I feel perhaps there are some translation issues, but we'll get through them."
      }
    ]
  },
  {
    "number": 2353,
    "title": "ZipkinMySQLStorageAutoConfiguration - Found 2 instances of bean applicationTaskExecutor",
    "created_at": "2019-01-16T16:05:29Z",
    "closed_at": "2019-01-21T15:17:54Z",
    "labels": [
      "question",
      "server"
    ],
    "url": "https://github.com/openzipkin/zipkin/issues/2353",
    "body": "When Zipkin server start, I got this error:\r\n\r\n`***************************\r\nAPPLICATION FAILED TO START\r\n***************************\r\n\r\nDescription:\r\n\r\nParameter 0 of method storage in zipkin2.autoconfigure.storage.mysql.ZipkinMySQLStorageAutoConfiguration required a single bean, but 2 were found:\r\n\t- applicationTaskExecutor: defined by method 'applicationTaskExecutor' in class path resource [org/springframework/boot/autoconfigure/task/TaskExecutionAutoConfiguration.class]\r\n\t- taskScheduler: defined in null\r\n\r\n\r\nAction:\r\n\r\nConsider marking one of the beans as @Primary, updating the consumer to accept multiple beans, or using @Qualifier to identify the bean that should be consumed\r\n`\r\n\r\nZipkin Server 2.11.12, with MySQL AutoConfigure\r\nUsing Spring Boot 2.1.2.RELEASE / Spring Cloud Greenwich RC2",
    "comments_url": "https://api.github.com/repos/openzipkin/zipkin/issues/2353/comments",
    "author": "joelroyer",
    "comments": [
      {
        "user": "codefromthecrypt",
        "created_at": "2019-01-16T17:58:31Z",
        "body": "we dont support custom servers. are you suggesting our default build has a\nbean conflict or are you noticing something when you build a custom server?\n"
      },
      {
        "user": "joelroyer",
        "created_at": "2019-01-17T08:42:55Z",
        "body": "Yes, our Zipkin is embedded in a custom server, based on Spring Boot 2.1.2.RELEASE and Spring Cloud Greenwich RC2.\r\n\r\nPrevious version used Spring Boot 2.0.7.RELEASE and Spring Cloud Finchley.SR2 and worked well (no conflict).\r\n"
      },
      {
        "user": "shakuzen",
        "created_at": "2019-01-21T15:17:54Z",
        "body": "As @adriancole mentioned, we don't support custom servers so we won't debug this issue. If you do figure out how to work around whatever the issue is, feel free to post it here so it might help others that face this problem (despite our advice to avoid making a custom Zipkin Server in the first place). The bean definitions mentioned in the log do not appear to be Zipkin-made beans, anyways, so I doubt the issue is in Zipkin code itself."
      }
    ]
  },
  {
    "number": 2199,
    "title": " Does not limit the length of the id to a string type",
    "created_at": "2018-09-27T07:37:47Z",
    "closed_at": "2020-04-06T19:29:04Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/openzipkin/zipkin/issues/2199",
    "body": "\r\nIn the zipkin model, the id value of the span can be set by the String type, but the length can be limited to no more than 16 bits.\r\n```\r\npublic Span.Builder id(String id) {\r\n    if (id == null) {\r\n        throw new NullPointerException(\"id == null\");\r\n    } else {\r\n    \tint length = id.length();\r\n        if (length == 0) {\r\n            throw new IllegalArgumentException(\"id is empty\");\r\n        } else if (length > 16) {\r\n            throw new IllegalArgumentException(\"id.length > 16\");\r\n        } else {\r\n            Span.validateHex(id);\r\n            this.id = length < 16 ? Span.padLeft(id, 16) : id;\r\n            return this;\r\n        }\r\n    }\r\n}\r\n```\r\nNow we use 0, 0.1, 0.1.1, 0.1.1.1, ..., to describe the spanId. If the link is long, it may exceed 16 bits. Therefore, it is recommended not to set the maximum length or increase the maximum length. .\r\n\r\n",
    "comments_url": "https://api.github.com/repos/openzipkin/zipkin/issues/2199/comments",
    "author": "glmapper",
    "comments": [
      {
        "user": "codefromthecrypt",
        "created_at": "2018-09-27T12:40:21Z",
        "body": "we dont support arbitrary string span IDs. a span ID is 64bit encoded as\nlower hex\n"
      },
      {
        "user": "jorgheymans",
        "created_at": "2020-04-06T19:29:04Z",
        "body": "Question answered, thanks !"
      }
    ]
  },
  {
    "number": 2146,
    "title": "the root span's  duration is not equal with  ss-sr",
    "created_at": "2018-07-23T11:06:37Z",
    "closed_at": "2020-03-30T09:26:33Z",
    "labels": [
      "question",
      "feedback-needed"
    ],
    "url": "https://github.com/openzipkin/zipkin/issues/2146",
    "body": "I found that the root span's  duration time is not equal with  (ss-sr) time ,and the first root span just have tow annotation under the propery annotations, so  i think duration should be equal with (ss -sr)\r\n-- \r\n``` java\r\n{\r\n    \"status\":\"success\",\r\n    \"code\":200,\r\n    \"data\":{\r\n        \"traceId\":\"04820a393727e7d5\",\r\n        \"id\":\"04820a393727e7d5\",\r\n        \"name\":\"http:/b2c\",\r\n        \"timestamp\":1532339436420000,\r\n        \"annotations\":[\r\n            {\r\n                \"endpoint\":{\r\n                    \"ipv4\":\"10.1.166.177\",\r\n                    \"port\":11001,\r\n                    \"serviceName\":\"tracing-demo-a\"\r\n                },\r\n                \"timestamp\":1532339436420000,\r\n                \"value\":\"sr\"\r\n            },\r\n            {\r\n                \"endpoint\":{\r\n                    \"ipv4\":\"10.1.166.177\",\r\n                    \"port\":11001,\r\n                    \"serviceName\":\"tracing-demo-a\"\r\n                },\r\n                \"timestamp\":1532339436540000,\r\n                \"value\":\"ss\"\r\n            }\r\n        ],\r\n        \"binaryAnnotations\":Array[3],\r\n        \"duration\":122037,\r\n        \"children\":Array[1],\r\n        \"spanCount\":2,\r\n        \"services\":Object{...},\r\n        \"success\":true,\r\n        \"serverName\":\"tracing-demo-a\"\r\n    }\r\n}\r\n```\r\nthe duration is 122.037ms, but the (ss-sr) is 120ms\r\n--\r\ncan you explain this for me ,thanks.",
    "comments_url": "https://api.github.com/repos/openzipkin/zipkin/issues/2146/comments",
    "author": "huhu-sky",
    "comments": [
      {
        "user": "basvanbeek",
        "created_at": "2018-07-23T11:37:08Z",
        "body": "which instrumentation was used to create this span?"
      },
      {
        "user": "huhu-sky",
        "created_at": "2018-07-23T15:07:14Z",
        "body": "@basvanbeek  i use spring-cloud and sleuth integrated with zipkin"
      },
      {
        "user": "codefromthecrypt",
        "created_at": "2018-07-23T15:40:44Z",
        "body": "best advice is this. use latest zipkin server which is 2.10.3 This has different javascript than before, especially data conversion.\r\n\r\nThen, try your issue again.. if you capture the javascript objects like you have now, also capture the json (ex via the JSON button). Then we can see what we need to do or not.\r\n\r\nThanks!"
      },
      {
        "user": "shakuzen",
        "created_at": "2018-10-23T11:59:20Z",
        "body": "@WywTed have you tried with the latest versions? if it is still happening, can you provide the JSON (remove any sensitive data) for us to troubleshoot?"
      },
      {
        "user": "huhu-sky",
        "created_at": "2019-01-07T02:15:46Z",
        "body": "sorry for no answering .  I'll  try the latest version and if it still exists, i'll comment later. Thanks you all."
      }
    ]
  },
  {
    "number": 2138,
    "title": "How could my error span show in red or yellow?",
    "created_at": "2018-07-18T01:42:53Z",
    "closed_at": "2018-07-31T12:32:53Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/openzipkin/zipkin/issues/2138",
    "body": "when my span is more ,I find the error span need cost more time,how could I distinguish the error span with others,such as give it red or yellow color.",
    "comments_url": "https://api.github.com/repos/openzipkin/zipkin/issues/2138/comments",
    "author": "Denesou",
    "comments": [
      {
        "user": "codefromthecrypt",
        "created_at": "2018-07-18T02:19:17Z",
        "body": "red is when there is a tag named error. yellow is when there is an\nannotation containing word error\n"
      }
    ]
  },
  {
    "number": 2100,
    "title": "Spring Boot 2.0.x and Spring Cloud 2.0.x support",
    "created_at": "2018-06-19T09:42:12Z",
    "closed_at": "2020-04-06T11:54:10Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/openzipkin/zipkin/issues/2100",
    "body": "Does Zipkin support Spring Boot 2.0.x and Spring Cloud 2.0.x, specifically Spring Cloud Gateway ?\r\n\r\nOur existing configuration which runs on Spring Boot 1.5.9  no longer works under 2.0.1\r\n",
    "comments_url": "https://api.github.com/repos/openzipkin/zipkin/issues/2100/comments",
    "author": "AndyWilks79",
    "comments": [
      {
        "user": "codefromthecrypt",
        "created_at": "2018-06-19T10:25:57Z",
        "body": "i am not sure what you are eluding to, but I will try to answer.\r\n\r\ncustom servers are unsupported. if you are trying to do a custom zipkin server, I would expect some maintenance moving to 2.0\r\n\r\nif you are talking about applications, you might have the wrong support channel as code that instruments spring boot is not here rather in the spring-cloud-sleuth project"
      },
      {
        "user": "jorgheymans",
        "created_at": "2020-04-06T11:54:09Z",
        "body": "Question answered, thanks !"
      }
    ]
  },
  {
    "number": 2091,
    "title": "ERROR: cannot load service names: Request processing failed; nested exception is java.lang.NullPointerException",
    "created_at": "2018-06-11T21:49:41Z",
    "closed_at": "2018-06-11T22:02:52Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/openzipkin/zipkin/issues/2091",
    "body": "Got Null pointer error in zipkin UI\r\nUsing Cassandra3\r\nenv we set are:\r\nexport CASSANDRA_USERNAME=???\r\nexport CASSANDRA_PASSWORD=???\r\nexport CASSANDRA_CONTACT_POINTS=???\r\nexport CASSANDRA_KEYSPACE=zipkin2\r\n export STORAGE_TYPE=cassandra3\r\n**exception:**\r\n```\r\n2018-06-11 16:37:47.426 ERROR [/] 56622 --- [  XNIO-2 task-8] io.undertow.request                      : UT005023: Exception handling request to //api/v1/services\r\n\r\norg.springframework.web.util.NestedServletException: Request processing failed; nested exception is java.lang.NullPointerException\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:982) ~[spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]\r\n```\r\n\r\n **Stack trace:**\r\n\r\n```\r\nCaused by: java.lang.NullPointerException: null\r\n\tat zipkin2.storage.cassandra.CassandraSpanStore.<init>(CassandraSpanStore.java:64) ~[io.zipkin.zipkin2-zipkin-storage-cassandra-2.8.1.jar!/:na]\r\n\tat zipkin2.storage.cassandra.CassandraStorage.spanStore(CassandraStorage.java:168) ~[io.zipkin.zipkin2-zipkin-storage-cassandra-2.8.1.jar!/:na]\r\n\tat zipkin2.storage.cassandra.AutoValue_CassandraStorage.spanStore(AutoValue_CassandraStorage.java:47) ~[io.zipkin.zipkin2-zipkin-storage-cassandra-2.8.1.jar!/:na]\r\n\tat zipkin.internal.V2StorageComponent.spanStore(V2StorageComponent.java:65) ~[io.zipkin.java-zipkin-2.8.1.jar!/:na]\r\n\tat zipkin.server.internal.ZipkinQueryApiV1.getServiceNames(ZipkinQueryApiV1.java:75) ~[classes!/:na]\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_172]\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_172]\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_172]\r\n\tat java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_172]\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209) ~[spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136) ~[spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102) ~[spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877) ~[spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783) ~[spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991) ~[spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925) ~[spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974) ~[spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]\r\n\t... 83 common frames omitted\r\n```",
    "comments_url": "https://api.github.com/repos/openzipkin/zipkin/issues/2091/comments",
    "author": "alseddnm",
    "comments": [
      {
        "user": "alseddnm",
        "created_at": "2018-06-11T22:02:50Z",
        "body": "my bad ):- we did create `zipkin2-schema-indexes` closing.."
      },
      {
        "user": "mahsaNajafzadeh",
        "created_at": "2019-02-06T18:16:01Z",
        "body": "I have the same issue, could you please explain how to fix it?"
      },
      {
        "user": "codefromthecrypt",
        "created_at": "2019-02-06T23:36:54Z",
        "body": "@mahsaNajafzadeh can you try 2.12.1 as there was a similar bug recently fixed."
      }
    ]
  },
  {
    "number": 1889,
    "title": "Will unfinished span caused by some-deadlock be recognized?",
    "created_at": "2018-01-18T06:22:52Z",
    "closed_at": "2020-04-10T16:53:40Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/openzipkin/zipkin/issues/1889",
    "body": "we are using zipkin to inspect the database-sql-execute in lots of services. some-time, the sql-execution will dead-locked unpredictable. this dead-lock will leave some span un-finished.  It seems these un-finished span will not be report to database.\r\n\r\nSo if we using zipkin, how to easily recognize such sql-dead-lock problems  in lots of services?\r\n",
    "comments_url": "https://api.github.com/repos/openzipkin/zipkin/issues/1889/comments",
    "author": "ext2xhb",
    "comments": [
      {
        "user": "codefromthecrypt",
        "created_at": "2018-01-18T07:37:49Z",
        "body": "Which library are you using? if brave, incomplete spans are flushed\nwith the annotation \"brave.flush\" if they stick around until GC\n"
      },
      {
        "user": "jorgheymans",
        "created_at": "2020-04-10T16:53:40Z",
        "body": "No more feedback received since reporting, or perhaps it was solved through gitter chat. (also question was answered)"
      }
    ]
  },
  {
    "number": 1621,
    "title": "Zipkin UI + Elasticsearch: NoSuchMethodError: zipkin.Endpoint$Builder.parseIp",
    "created_at": "2017-06-17T23:32:16Z",
    "closed_at": "2017-06-18T00:51:12Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/openzipkin/zipkin/issues/1621",
    "body": "I'm using Zipkin with Spring Boot. Storing events in Elasticsearch works fine, but when I want to display them with the Zipkin UI, I run into the following error:\r\n\r\n```\r\nException in thread \"OkHttp Dispatcher\" java.lang.NoSuchMethodError: zipkin.Endpoint$Builder.parseIp(Ljava/lang/String;)Z\r\n        at zipkin.storage.elasticsearch.http.JsonAdapters$3.fromJson(JsonAdapters.java:145)\r\n        at zipkin.storage.elasticsearch.http.JsonAdapters$3.fromJson(JsonAdapters.java:133)\r\n        at com.squareup.moshi.JsonAdapter$2.fromJson(JsonAdapter.java:128)\r\n        at zipkin.storage.elasticsearch.http.JsonAdapters$4.fromJson(JsonAdapters.java:199)\r\n        at zipkin.storage.elasticsearch.http.JsonAdapters$4.fromJson(JsonAdapters.java:164)\r\n        at zipkin.storage.elasticsearch.http.JsonAdapters$1.fromJson(JsonAdapters.java:82)\r\n        at zipkin.storage.elasticsearch.http.JsonAdapters$1.fromJson(JsonAdapters.java:38)\r\n        at zipkin.storage.elasticsearch.http.internal.client.SearchResultConverter.convert(SearchResultConverter.java:57)\r\n        at zipkin.storage.elasticsearch.http.internal.client.SearchResultConverter.convert(SearchResultConverter.java:26)\r\n        at zipkin.storage.elasticsearch.http.internal.client.HttpCall$CallbackAdapter.onResponse(HttpCall.java:106)\r\n        at okhttp3.RealCall$AsyncCall.execute(RealCall.java:135)\r\n        at okhttp3.internal.NamedRunnable.run(NamedRunnable.java:32)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n        at java.lang.Thread.run(Thread.java:748)\r\n```\r\n\r\nMy Gradle file looks like this:\r\n\r\n```\r\napply plugin: 'org.springframework.boot'\r\n\r\n\r\njar {\r\n\tbaseName = 'zipkin'\r\n\tversion = '1.0'\r\n}\r\n\r\n\r\ndependencies {\r\n\tcompile(\r\n\t\t\t'org.springframework.boot:spring-boot-starter',\r\n\t\t\t\"net.logstash.logback:logstash-logback-encoder:${logbackEncoderVersion}\",\r\n\t\t\t'org.springframework.boot:spring-boot-starter-security',\r\n\t\t\t'org.springframework.boot:spring-boot-starter-actuator',\r\n\t\t\t'org.jolokia:jolokia-core',\r\n\t\t\t\"io.zipkin.java:zipkin-server:${zipkinVersion}\",\r\n\t\t\t\"io.zipkin.java:zipkin-autoconfigure-storage-elasticsearch-http:${zipkinVersion}\",\r\n\t\t\t\"io.zipkin.java:zipkin-autoconfigure-ui:${zipkinVersion}\"\r\n\t)\r\n}\r\n\r\n\r\ndependencyManagement {\r\n\timports {\r\n\t\tmavenBom \"org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}\"\r\n\t}\r\n}\r\n\r\nspringBoot {\r\n    executable = true\r\n}\r\n```\r\n\r\nWith the variables:\r\n\r\n```\r\nspringBootVersion = '1.5.4.RELEASE'\r\nspringCloudVersion = 'Dalston.SR1'\r\nlogbackEncoderVersion = '4.10'\r\nzipkinVersion = '1.26.0'\r\n```",
    "comments_url": "https://api.github.com/repos/openzipkin/zipkin/issues/1621/comments",
    "author": "xeraa",
    "comments": [
      {
        "user": "codefromthecrypt",
        "created_at": "2017-06-18T00:41:28Z",
        "body": "Set the version of io.zipkin.java:zipkin\n\nI will raise something to update spring cloud sleuth's deps which might be\nsetting an earlier version (guess)\n"
      },
      {
        "user": "xeraa",
        "created_at": "2017-06-18T00:51:12Z",
        "body": "That works (now even with 1.26.1). Thanks a lot!"
      }
    ]
  },
  {
    "number": 1455,
    "title": "malformed base64 in the zipkin ui",
    "created_at": "2016-12-23T09:06:40Z",
    "closed_at": "2017-01-03T16:08:17Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/openzipkin/zipkin/issues/1455",
    "body": "I am using `\"htrace-core4\" % \"4.1.0-incubating\"` with  `\"htrace-zipkin\" % \"4.1.0-incubating\"` I am getting malformed base64 strings in the frontend, specifically seems like `/` has been converted to `_`. Looking into htrace the spans seems to be sent correctly. Any tips would be appreciated. ",
    "comments_url": "https://api.github.com/repos/openzipkin/zipkin/issues/1455/comments",
    "author": "raam86",
    "comments": [
      {
        "user": "codefromthecrypt",
        "created_at": "2016-12-23T09:16:41Z",
        "body": "I'm guessing you are using scribe as opposed to kafka? Do you have a scribe\nsetup or are using that because htrace doesn't yet support http?\n"
      },
      {
        "user": "codefromthecrypt",
        "created_at": "2016-12-23T09:20:42Z",
        "body": "My guess is that this has to do with url encoding. Can you patch htrace to\nuse encodeBase64URLSafeString instead of encodeBase64String?\n"
      },
      {
        "user": "raam86",
        "created_at": "2016-12-23T10:07:53Z",
        "body": "Thanks for the quick reply, I am using scribe, I will check and see if it helps."
      },
      {
        "user": "raam86",
        "created_at": "2017-01-03T16:09:14Z",
        "body": "After further investigation the problem seems to lie in htrace."
      }
    ]
  },
  {
    "number": 1415,
    "title": "Is there a way to specify UI doc root?",
    "created_at": "2016-11-21T23:10:07Z",
    "closed_at": "2016-11-22T00:47:50Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/openzipkin/zipkin/issues/1415",
    "body": "We want a way to host the zipkin ui under /zipkin endpoint, is there any configuration to achieve this?",
    "comments_url": "https://api.github.com/repos/openzipkin/zipkin/issues/1415/comments",
    "author": "bpatelcs",
    "comments": [
      {
        "user": "codefromthecrypt",
        "created_at": "2016-11-22T00:47:50Z",
        "body": "dupe of #1229"
      }
    ]
  },
  {
    "number": 1408,
    "title": "how can i deploy zipkin-server cluster for performance?",
    "created_at": "2016-11-18T03:38:59Z",
    "closed_at": "2016-11-18T04:27:21Z",
    "labels": [
      "question",
      "kafka"
    ],
    "url": "https://github.com/openzipkin/zipkin/issues/1408",
    "body": "in my production env, i only deploy one zipkin-server\r\n\r\ni think this zipkin-server collect trace from kafka, and send trace es, and show zipkin-web.\r\nif i have lots of services produce trace info to kafka, i think maybe only one zipkin-server to consume the trace info speed less than producer\r\ncan i deploy some `zipkin-server`s to raise consumer's performance?\r\n\r\nif my kafka's zipkin topic has 9 partition, i start up three zipkin-server, and one zipkin-server consume three partiton, and finally only one zipkin-server to show zipkin's web ui? \r\n\r\nwhat zipkin-server's param i need to set, and how to deploy the zipkin-server cluster?  \r\n\r\nthanks very much!",
    "comments_url": "https://api.github.com/repos/openzipkin/zipkin/issues/1408/comments",
    "author": "dragontree101",
    "comments": [
      {
        "user": "codefromthecrypt",
        "created_at": "2016-11-18T04:27:21Z",
        "body": "duplicate of #1159 please take a look there and comment as needed!\n"
      }
    ]
  },
  {
    "number": 1137,
    "title": "what's the meaning \"88%\"  of  this sentence: mysql-ycfsolr_inno 88% .",
    "created_at": "2016-06-21T10:35:36Z",
    "closed_at": "2020-04-03T12:38:18Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/openzipkin/zipkin/issues/1137",
    "body": "_9.000ms 9 spans\nmysql-ycfsolr_inno **88%**\nmysql-ycfsolr_inno x4 3ms ycf-search x5 3ms_\n\nabove content show on zipkin  find a trace page\n\nquestion：\nwhat's the meaning \"88%\"  of  this sentence: mysql-ycfsolr_inno 88% .   thanks！\n",
    "comments_url": "https://api.github.com/repos/openzipkin/zipkin/issues/1137/comments",
    "author": "jahnkey",
    "comments": [
      {
        "user": "codefromthecrypt",
        "created_at": "2016-06-21T11:10:45Z",
        "body": "pretty sure this means that of the services participating in the\ntrace, mysql-ycfsolr_inno\naccounted for 88% of the critical path duration.\n\nto prove it I'd need to look deeper as I've not looked closely at the code\ninvolved\n"
      },
      {
        "user": "jahnkey",
        "created_at": "2016-06-22T02:52:36Z",
        "body": "thanks  very much！\nwelcome to guangzhou china @adriancole  :-)\n"
      },
      {
        "user": "jorgheymans",
        "created_at": "2020-04-03T12:38:18Z",
        "body": "question answered, thanks."
      }
    ]
  },
  {
    "number": 1129,
    "title": "Why zipkin-dependencies tab show  nothing statistics information and how should  i  do ?",
    "created_at": "2016-06-06T02:35:58Z",
    "closed_at": "2016-09-08T10:48:34Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/openzipkin/zipkin/issues/1129",
    "body": "Dears,  let me talk about the  issue. \n1.  i  deployed zipkin server via docker and all server(collector、cassandra、query、web-UI) run  normally  ;\n2.  By the brave client sent log info to query service(the query default port is： 9411) ;\n3.  Then i can find the  tracer information on the zipkin-> web-UI  server 。\n4.  issues is：the dependencies tab  have nothing to show .  what should i do and then the dependencies tab will  show the  statistics info , thanks very much.\n",
    "comments_url": "https://api.github.com/repos/openzipkin/zipkin/issues/1129/comments",
    "author": "jahnkey",
    "comments": [
      {
        "user": "eirslett",
        "created_at": "2016-06-06T05:13:56Z",
        "body": "You must run the zipkin-dependencies-spark job. It's a single jar file that you can execute.\n"
      },
      {
        "user": "rogeralsing",
        "created_at": "2016-09-08T10:20:43Z",
        "body": "How do you do this when running Zipkin using the Docker image?\n"
      },
      {
        "user": "codefromthecrypt",
        "created_at": "2016-09-08T10:48:34Z",
        "body": "This issue was moved to openzipkin/docker-zipkin#112\n"
      }
    ]
  },
  {
    "number": 1084,
    "title": "High level steps to instrument a Java application and get results on Zipkin UI",
    "created_at": "2016-04-04T16:52:54Z",
    "closed_at": "2016-04-21T19:08:43Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/openzipkin/zipkin/issues/1084",
    "body": "Hi,\n\nI have recently setup Zipkin and Zookeper as per the documentation. I have also brave library for Java. \nHowever, I am struggling to find anywhere what will be the next steps. Is there any documentation or reference that i can follow to instrument a sample application.\n\nIf someone who has already Instrumented for Java/Jersey2 can provide the high level steps / sample reference would be of great help. \n\nSorry if this is a duplicate, i couldn't find any related open request.\n",
    "comments_url": "https://api.github.com/repos/openzipkin/zipkin/issues/1084/comments",
    "author": "fluidjeel",
    "comments": [
      {
        "user": "eirslett",
        "created_at": "2016-04-04T20:29:54Z",
        "body": "1) You don't need ZooKeeper, unless you want to use Kafka for transporting trace data from applications into Zipkin. (In which case you also need to install Kafka). An easier way is to just skip Kafka, and make Brave send HTTP trace data to zipkin directly.\n2) Use zipkin-java instead of zipkin-scala, it's easier, and just 1 application/jar, instead of 3.\n3) Import Brave as a Java dependency in your application\n4) If you have a web application (servlets etc) add Brave's servlet filter, which will intercept incoming traffic.\n5) Add more interceptors for instrumentation, like in http clients and jdbc drivers. (Thare are many ready-to-use implementations in the Brave project)\n6) Configure Brave so that it sends traces to Zipkin - either to Kafka (if you use that) or directly with HTTP.\n7) Start your application, use it a little bit so it generates traffic, watch trace data end up in the Zipkin UI.\n"
      },
      {
        "user": "fluidjeel",
        "created_at": "2016-04-04T21:57:25Z",
        "body": "@eirslett Thanks for you inputs . Looks like a great starting point for me. I would just leave this request open for couple of days incase I have any follow-up questions.\n"
      }
    ]
  },
  {
    "number": 919,
    "title": "Why does Span.serviceName give priority to ServerAddress?",
    "created_at": "2016-01-26T16:38:49Z",
    "closed_at": "2020-11-01T22:00:28Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/openzipkin/zipkin/issues/919",
    "body": "I agree that server-side should take precedence over client-side, but it seems the CoreServer annotations should be the top priority, not ServerAddress binary annotation. In the current form, if 10 clients call the same service, but all decide to call it differently in ServerAddress, it will appear under 10 different names. And if the service owners wants to find traces in their service, they need to search under 10 names.\n\nBut if the CoreServer annotation is the first priority, it will always have the same name. \n",
    "comments_url": "https://api.github.com/repos/openzipkin/zipkin/issues/919/comments",
    "author": "yurishkuro",
    "comments": [
      {
        "user": "codefromthecrypt",
        "created_at": "2016-01-27T08:28:17Z",
        "body": "serveraddress was added to allow far-right resources to show up, for example, uninstrumented mysql servers, S3, etc.\n\nclientaddress was not as it explodes the far left\n"
      },
      {
        "user": "yurishkuro",
        "created_at": "2016-01-27T13:38:19Z",
        "body": "@adriancole by far-right do you mean those that will not log their own annotations? In that case the span will have Client Send/Recv and a ServerAddress, and the latter will win. I am not proposing to change that, only to let Server Send/Recv win over ServerAddress.\n"
      },
      {
        "user": "codefromthecrypt",
        "created_at": "2016-01-27T14:51:51Z",
        "body": "I don't have a strong opinion about who should win \"sa\" vs \"sr\", as long as\n\"sr\" isn't required.\n\nWould be nicer if we could resolve at collection time, but anyway..\n\nI don't have a problem with changing the precedence, I would just make a\ncomment in the test with your rationale.\n\nSeems this is an assumption that clients are more likely to make mistakes\nnaming the destination than servers naming themselves.. I buy that.\n"
      },
      {
        "user": "codefromthecrypt",
        "created_at": "2016-01-27T14:54:34Z",
        "body": "Yeah I think you understand my concern, which was about a potential\nexplosion on the left side if we named nodes based on clients (fear which\nmight not be substantiated).\n\nRegardless, you've clarified to me this isn't impacted at all.\n"
      },
      {
        "user": "michaelsembwever",
        "created_at": "2016-01-29T09:52:32Z",
        "body": "@eirslett have you any opinion on this?\n\nWe faced the problem that @yurishkuro mentions with clients calling servers different things and we have to address it by making the clients use our discovery-service so service name was always correct. (I think we had to do the same with the CoreAnnotation as well anyway).\n"
      },
      {
        "user": "eirslett",
        "created_at": "2016-03-16T17:15:20Z",
        "body": "The logic for this is ported to JavaScript. There are karma tests, so it should be easy enough to add a test that verifies the wanted behavior, and then changes the order of precedence.\n"
      },
      {
        "user": "jorgheymans",
        "created_at": "2020-11-01T22:00:28Z",
        "body": "The question was answered, has not received any further comments in a while so closing."
      }
    ]
  },
  {
    "number": 773,
    "title": "Doesn't work with Amazon RDS?",
    "created_at": "2015-10-14T08:34:23Z",
    "closed_at": "2015-10-16T23:13:51Z",
    "labels": [
      "question",
      "mysql"
    ],
    "url": "https://github.com/openzipkin/zipkin/issues/773",
    "body": "We've been trying to get the MySQL storage to work on Amazon RDS with little success.\n\nUsing docker-zipkin we manage to use the MySQL storage and it works fine.\nChanging the `MYSQL_HOST` to an RDS instance, send dummy traces and try to see them in the web UI (by submitting the search form) ends up in errors such as:\n\n```\nquery_1     | java.lang.RuntimeException: UnexpectedNullableFound(ColumnName(zipkin_annotations.end_ts,Some(end_ts)))\nquery_1     |   at scala.sys.package$.error(package.scala:27) ~[zipkin-query.jar:na]\nquery_1     |   at anorm.Sql$.anorm$Sql$$as(Anorm.scala:472) ~[zipkin-query.jar:na]\nquery_1     |   at anorm.Sql$class.as(Anorm.scala:292) ~[zipkin-query.jar:na]\nquery_1     |   at anorm.SimpleSql.as(Anorm.scala:190) ~[zipkin-query.jar:na]\nquery_1     |   at com.twitter.zipkin.storage.anormdb.AnormSpanStore$$anonfun$getTraceIdsByName$1.apply(AnormSpanStore.scala:204) ~[zipkin-query.jar:na]\nquery_1     |   at com.twitter.zipkin.storage.anormdb.AnormSpanStore$$anonfun$getTraceIdsByName$1.apply(AnormSpanStore.scala:180) ~[zipkin-query.jar:na]\nquery_1     |   at com.twitter.zipkin.storage.anormdb.DB.withRecoverableRetry(DB.scala:120) ~[zipkin-query.jar:na]\nquery_1     |   at com.twitter.zipkin.storage.anormdb.DB$$anonfun$inNewThreadWithRecoverableRetry$1.apply(DB.scala:147) ~[zipkin-query.jar:na]\nquery_1     |   at com.twitter.util.Try$.apply(Try.scala:13) ~[zipkin-query.jar:na]\nquery_1     |   at com.twitter.util.ExecutorServiceFuturePool$$anon$2.run(FuturePool.scala:115) [zipkin-query.jar:na]\nquery_1     |   at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_60]\nquery_1     |   at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_60]\nquery_1     |   at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [na:1.8.0_60]\nquery_1     |   at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [na:1.8.0_60]\nquery_1     |   at java.lang.Thread.run(Thread.java:745) [na:1.8.0_60]\n```\n\nin the console while the web UI itself is a white unstyled screen stating:\n\n```\n{\"errors\":[\"internal server error\"]}\ncom.twitter.finagle.NoStacktrace(Unknown Source)\n```\n\nWe've been trying both MySQL 5.6 and 5.5, no change.\nThe only difference between works/doesn't work really is the DB, everything else is the same. The schema etc are also the same.\n\n@adriancole any pointer would be highly appreciated, this is hopefully the last blocker before we put zipkin to good use here.\ncc @jcarres-mdsol\n",
    "comments_url": "https://api.github.com/repos/openzipkin/zipkin/issues/773/comments",
    "author": "jfeltesse-mdsol",
    "comments": [
      {
        "user": "codefromthecrypt",
        "created_at": "2015-10-14T15:04:24Z",
        "body": "hmm \"MAX(a_timestamp) as end_ts\" is called by getTraceIdsByName. I'll\nadd a test to see what happens if you call that and there's no\nendpoint with the corresponding service name..\n"
      },
      {
        "user": "codefromthecrypt",
        "created_at": "2015-10-14T15:21:47Z",
        "body": "So empty data test passed. only guess is that there's an annotation\nmissing data in the a_timestamp field. Can you do a select null or\nempty on that? Should be impossible, but worth a try.\n"
      },
      {
        "user": "jcarres-mdsol",
        "created_at": "2015-10-15T10:22:43Z",
        "body": "a_timestamp is never null.\n\nOne more thing we have just realized.\nWhen we run it locally with 3 test apps, we create 16 annotations. When executing this against RDS, we create 8 annotations.\nChecking the differences, we have seen that the \"sr\", \"ss\" and related binary annotations were all in RDS. And the \"cs\" \"cr\" annotations and related binary annotations were none of them in RDS.\n"
      },
      {
        "user": "codefromthecrypt",
        "created_at": "2015-10-15T14:07:36Z",
        "body": "Is this reproducible without the test apps? Ex. By just clicking refresh on\nzipkin, are you also missing cs annotations? This should be testable I\nthink.. Maybe by curl and then curl against the api's trace endpoint to\nverify.\n"
      }
    ]
  },
  {
    "number": 388,
    "title": "Time zone error",
    "created_at": "2014-05-20T18:01:04Z",
    "closed_at": "2014-07-30T21:10:12Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/openzipkin/zipkin/issues/388",
    "body": "There's a 1 hour difference in time zone from UTC here, so we don't get to see the last traces (newer than 1 hour) unless we adjust the \"end time\" in the Zipkin UI one hour ahead.\n(I guess it's my laptop computer that is set to local time, and the servers running UTC).\nAnyways, could the \"end time\" option in Zipkin be turned off by default?\n",
    "comments_url": "https://api.github.com/repos/openzipkin/zipkin/issues/388/comments",
    "author": "eirslett",
    "comments": [
      {
        "user": "sprsquish",
        "created_at": "2014-07-30T21:10:12Z",
        "body": "I believe this is now fixed in the latest version of the UI.\n"
      }
    ]
  },
  {
    "number": 386,
    "title": "Abount The Notification Of Warning",
    "created_at": "2014-05-14T13:33:55Z",
    "closed_at": "2016-03-16T16:04:31Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/openzipkin/zipkin/issues/386",
    "body": "Hi all,\n\nIn Zipkin, is there any way to get the notification of warning ?  \n\nFor example, if the web api responses too long, I hope to get some Strong-Notification (e.g., email, sms) .\n\nThanks in advance !\n",
    "comments_url": "https://api.github.com/repos/openzipkin/zipkin/issues/386/comments",
    "author": "surest",
    "comments": [
      {
        "user": "eirslett",
        "created_at": "2016-03-16T16:04:31Z",
        "body": "Zipkin is not the right tool for this - use something like sensu.\n"
      }
    ]
  },
  {
    "number": 2125,
    "title": "Track number of active requests",
    "created_at": "2018-07-06T21:39:27Z",
    "closed_at": "2020-04-08T07:39:44Z",
    "labels": [
      "enhancement",
      "help wanted"
    ],
    "url": "https://github.com/openzipkin/zipkin/issues/2125",
    "body": "I can happily report that #1760 has caused our Zipkin instance to be much more stable.  But, to help further tune a server and prevent issues like #2023 it would be nice if a Prometheus metric for \"number of active requests\" could be added.  That way we could identify peak load times and tune the number of max-requests appropriately.\r\n\r\nEssentially, log `HttpCall.semaphore.availablePermits()`.  Normally not a good method to call because of unreliable/synchronization issues but should be safe for the sake of metrics.\r\n\r\nNote: this solves a different problem than `counter_zipkin_collector_messages_http` would answer because that `semaphore` gets used for requests that read from storage in addition to those that write whereas the collector increments only for those that write.\r\n\r\nIf you want to turn this into a case for separating read from write limits I'd be ok with that also :)",
    "comments_url": "https://api.github.com/repos/openzipkin/zipkin/issues/2125/comments",
    "author": "Logic-32",
    "comments": [
      {
        "user": "jorgheymans",
        "created_at": "2020-04-06T20:52:46Z",
        "body": "@anuraaga does Armeria expose this metric already ?"
      },
      {
        "user": "anuraaga",
        "created_at": "2020-04-08T07:39:41Z",
        "body": "Yup - confirmed we have `elasticsearch_active_requests` in prometheus now"
      }
    ]
  },
  {
    "number": 2007,
    "title": "Make collapse button work by default",
    "created_at": "2018-04-19T20:35:35Z",
    "closed_at": "2019-03-25T00:34:18Z",
    "labels": [
      "enhancement",
      "help wanted",
      "ui"
    ],
    "url": "https://github.com/openzipkin/zipkin/pull/2007",
    "body": "This simple change works for me. Maintainers, feel free to make edits. #1774 ",
    "comments_url": "https://api.github.com/repos/openzipkin/zipkin/issues/2007/comments",
    "author": "naoman",
    "comments": [
      {
        "user": "codefromthecrypt",
        "created_at": "2018-04-27T01:44:54Z",
        "body": "thanks. needs a unit test (made mention in the corresponding issue a while back, basically we should have some data to drive this)"
      },
      {
        "user": "codefromthecrypt",
        "created_at": "2018-11-20T03:12:08Z",
        "body": "this needs analysis @zeagord @tacigar ?"
      },
      {
        "user": "zeagord",
        "created_at": "2018-11-20T04:01:05Z",
        "body": "\r\n\r\n\r\n> this needs analysis @zeagord @tacigar ?\r\n\r\nYes, It doesn't work. Let me look in to it"
      },
      {
        "user": "codefromthecrypt",
        "created_at": "2019-03-25T00:34:18Z",
        "body": "this has been obviated by a UI rewrite :)"
      }
    ]
  },
  {
    "number": 1279,
    "title": "UI: Sort order is lost when going back to start screen",
    "created_at": "2016-09-08T20:12:07Z",
    "closed_at": "2017-03-31T02:31:23Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/openzipkin/zipkin/issues/1279",
    "body": "If you sort by newest first, and then open up a trace and then go back to the start screen, the sort order is lost, making it somewhat confusing if you are trying to pinpoint a specific trace.\n",
    "comments_url": "https://api.github.com/repos/openzipkin/zipkin/issues/1279/comments",
    "author": "rogeralsing",
    "comments": [
      {
        "user": "jpiechowka",
        "created_at": "2016-09-09T08:14:48Z",
        "body": "@adriancole @rogeralsing That would be a nice improvement to the UI if the sorting method would persist.\n"
      },
      {
        "user": "codefromthecrypt",
        "created_at": "2016-09-09T08:33:38Z",
        "body": "adding help-wanted as I would like this, too, but don't know how to make it happen.\n"
      },
      {
        "user": "eirslett",
        "created_at": "2016-09-09T10:36:02Z",
        "body": "We should add ?sortOrder=something to the URL (replaceHistory) and then have the crossroads router read that param when it delegates to the views. Somebody would have to send a PR for it.\n"
      },
      {
        "user": "joel-airspring",
        "created_at": "2017-03-22T17:19:26Z",
        "body": "I've created a first pass on this feature.  Any feedback on what I did?\r\n\r\nI did it in two commits since there were a few plumbing changes needed to make the feature possible.  The two commits can be combined, though, if that is preferable."
      },
      {
        "user": "codefromthecrypt",
        "created_at": "2017-03-23T03:06:53Z",
        "body": "@joel-airspring thx.. for laziness it is easier to review code on a pull request than clicking on commits. Can you raise a PR with those 2?"
      },
      {
        "user": "joel-airspring",
        "created_at": "2017-03-23T09:27:29Z",
        "body": "PR #1543 "
      }
    ]
  }
]