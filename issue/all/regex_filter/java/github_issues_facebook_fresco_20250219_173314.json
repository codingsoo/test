[
  {
    "number": 2576,
    "title": "Inherit from ShapeableImageView",
    "created_at": "2021-01-12T08:27:51Z",
    "closed_at": "2021-01-21T15:53:50Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/facebook/fresco/issues/2576",
    "body": "### Description\r\n\r\nCurrently, it is not possible to custom shape our SimpleDraweeView. com.google.android.material.imageview.ShapeableImageView would offer a solution for this. It would also fix all the issues with roundAsCircle and would offer even more customization.\r\n",
    "comments_url": "https://api.github.com/repos/facebook/fresco/issues/2576/comments",
    "author": "katajona",
    "comments": [
      {
        "user": "wizh",
        "created_at": "2021-01-21T12:36:43Z",
        "body": "Hi, thanks for your question. In the future when we release Vito this would be supported automatically by VitoView. For now you could write a custom view which does that or make SimpleDraweeView inherit ShapeableImageView yourself."
      },
      {
        "user": "katajona",
        "created_at": "2021-01-21T15:50:30Z",
        "body": "That sounds really good. Is there a timeline for when will it be released?"
      },
      {
        "user": "wizh",
        "created_at": "2021-01-21T15:53:50Z",
        "body": "No, we don't have a specific timeline in mind yet. I'm closing the issue since the original question was answered, but feel free to open a new issue if you need further support."
      }
    ]
  },
  {
    "number": 2575,
    "title": "gif play once? how can i config?",
    "created_at": "2021-01-08T08:54:53Z",
    "closed_at": "2021-01-08T19:21:31Z",
    "labels": [
      "docs",
      "question"
    ],
    "url": "https://github.com/facebook/fresco/issues/2575",
    "body": "i want to play gif once, and stop at last frame, how can i do?",
    "comments_url": "https://api.github.com/repos/facebook/fresco/issues/2575/comments",
    "author": "ZINK-FU",
    "comments": [
      {
        "user": "oprisnik",
        "created_at": "2021-01-08T19:21:31Z",
        "body": "You could use an AnimationListener where you manually stop the animation in onAnimationRepeat if there are multiple loops.\r\nYou'd have to set this listener via a ControllerListener where you get the Animatable in onFinalImageSet, which you can cast t AnimatedDrawable2."
      },
      {
        "user": "SEUCalvin",
        "created_at": "2023-06-20T02:50:42Z",
        "body": "onAnimationRepeat is unreliable, sometimes the gif will be played several times before calling onAnimationRepeat. If you know the frameNumber of the gif, onAnimationFrame maybe a good time to stop the animation.\r\nBTW, my lovely UI designer set the gif file itself to play only once through PhotoShop, I think this is the best solution."
      }
    ]
  },
  {
    "number": 2565,
    "title": "setImageBitmap alternative",
    "created_at": "2020-12-24T09:24:15Z",
    "closed_at": "2021-01-08T19:24:34Z",
    "labels": [
      "docs",
      "question"
    ],
    "url": "https://github.com/facebook/fresco/issues/2565",
    "body": "I know we cant use `setImageBitmap` directly. Now how i  can set `android.graphics.Bitmap` inside a `DraweeView` while keeping the hierarchy?\r\nI need to be able to apply a `Bitmap` which came from somewhere else (like camera) inside a `DraweeView`.\r\n\r\nThanks",
    "comments_url": "https://api.github.com/repos/facebook/fresco/issues/2565/comments",
    "author": "farfromrefug",
    "comments": [
      {
        "user": "oprisnik",
        "created_at": "2021-01-08T19:24:34Z",
        "body": "If you don't want to use Fresco to load the image but supply your own Bitmap, you can do something like this:\r\n\r\ndraweeView.getHierarchy().setImage(new BitmapDrawable(bitmap), 1, true);\r\nThe last param specifies if it should be shown immediately or via a fade in animation if false (if a fade duration is set)."
      }
    ]
  },
  {
    "number": 2422,
    "title": "animated-gif package breaks downloadable gifs with rounding",
    "created_at": "2019-10-18T16:19:03Z",
    "closed_at": "2019-11-12T11:55:41Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/facebook/fresco/issues/2422",
    "body": "### Description\r\n\r\nI'm using **com.facebook.fresco:fresco** and **com.facebook.fresco:animated-gif** for show animated gif.\r\nI load a gif image (non animated) from the Internet and apply **RoundingParams**.  \r\nI expect to see round image, but I get square.\r\nGifs from app resources work fine.\r\nI need **animated-gif** package for animation, but how to disable it for non animated gifs?\r\n\r\n### Reproduction\r\n\r\nIf enable **animated-gif** package then **RoundingParams** will broken but animation will worked fine.\r\n\r\n### Solution\r\n\r\nDisabling **animated-gif** package resolve problem, but all animated gifs break.\r\n\r\n### Additional Information\r\n\r\n* Fresco version: 2.0.0\r\n* animated-gif: 2.0.0\r\n* Platform version: any device\r\n",
    "comments_url": "https://api.github.com/repos/facebook/fresco/issues/2422/comments",
    "author": "ilyamuromets",
    "comments": [
      {
        "user": "stale[bot]",
        "created_at": "2019-10-25T16:48:39Z",
        "body": "Hey there, it looks like there has been no activity on this issue recently. Has the issue been fixed, or does it still require the community's attention? This issue may be closed if no further activity occurs. You may also label this issue as \"bug\" or \"enhancement\" and I will leave it open. Thank you for your contributions.\n"
      },
      {
        "user": "stale[bot]",
        "created_at": "2019-11-01T17:06:01Z",
        "body": "Closing this issue after a prolonged period of inactivity. If this issue is still present in the latest release, please feel free to reopen with up-to-date information.\n"
      },
      {
        "user": "ilyamuromets",
        "created_at": "2019-11-12T07:55:52Z",
        "body": "The problem still exist!"
      },
      {
        "user": "oprisnik",
        "created_at": "2019-11-12T11:19:09Z",
        "body": "Hey! How can we reproduce the issue? Can you give us some sample code? Rounding for GIFs is currently not supported."
      },
      {
        "user": "ilyamuromets",
        "created_at": "2019-11-12T11:44:34Z",
        "body": "@oprisnik The problem is in use **fresco**'s and **animated-gif**'s dependencies at the same time.\r\nI use fresco for show user photo which is one-frame gif without animation and round it in user list. And I use fresco for show animated gifs. Both (user photo and funny gifs) are loading from the Internet. But with **animated-gif** fresco doesn't round user photo gif.\r\nI can create demo project for you during several days."
      },
      {
        "user": "oprisnik",
        "created_at": "2019-11-12T11:55:41Z",
        "body": "Oh, that explains the issue.\r\nWhen you include animated-gif, we'll use the animated GIF decoder for the image, which does not support rounding. For a single frame GIF, the system can decode a static image (which is happening when you don't have animated-gif).\r\n\r\nThe solution to this problem is to supply this method:\r\n\r\n```java\r\nImageDecodeOptions options = ImageDecodeOptions.newBuilder().setForceStaticImage(true).build();\r\n// Pass the options to the Drawee view via a DraweeController\r\ndraweeControllerBuilder.setImageRequest(\r\n          ImageRequestBuilder.newBuilderWithSource(uri)\r\n              .setImageDecodeOptions(options)\r\n              .build());\r\n```"
      },
      {
        "user": "ilyamuromets",
        "created_at": "2019-11-12T12:27:34Z",
        "body": "@oprisnik thanks, it's working."
      }
    ]
  },
  {
    "number": 2392,
    "title": "Class Cast Exception",
    "created_at": "2019-08-13T14:42:23Z",
    "closed_at": "2019-08-13T15:53:46Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/facebook/fresco/issues/2392",
    "body": "### Exception\r\n`java.lang.ClassCastException: o.Mw cannot be cast to o.Nw\r\n       at com.app.example.share.ShareUtils$2.onNewResultImpl + 243(ShareUtils.java:243)\r\n       at com.facebook.datasource.BaseDataSubscriber.onNewResult + 46(BaseDataSubscriber.java:46)\r\n       at com.facebook.datasource.AbstractDataSource$1.run + 176(AbstractDataSource.java:176)\r\n       at android.os.Handler.handleCallback + 873(Handler.java:873)\r\n       at android.os.Handler.dispatchMessage + 99(Handler.java:99)\r\n       at android.os.Looper.loop + 193(Looper.java:193)\r\n       at android.app.ActivityThread.main + 6863(ActivityThread.java:6863)\r\n       at java.lang.reflect.Method.invoke(Method.java)\r\n       at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run + 537(RuntimeInit.java:537)\r\n       at com.android.internal.os.ZygoteInit.main + 858(ZygoteInit.java:858)`\r\n### Code sniped\r\nDataSubscriber dataSubscriber = new BaseDataSubscriber<CloseableReference<CloseableBitmap>>() {\r\n            Override\r\n            protected void onNewResultImpl(com.facebook.datasource.DataSource<CloseableReference<CloseableBitmap>> dataSource) {\r\n                if (!dataSource.isFinished()) {\r\n                    return;\r\n                }\r\n                CloseableReference<CloseableBitmap> imageReference = null;\r\n                CloseableReference<CloseableBitmap> closeableReference = null;\r\n\r\n                try {\r\n                    imageReference = dataSource.getResult();\r\n                    if (imageReference != null) {\r\n                        closeableReference = imageReference.clone();\r\n                        CloseableBitmap closeableBitmap = closeableReference.get();\r\n    }\r\n                    }\r\n                } catch (Exception e) {\r\n                    LogUtils.reportNonfatalException(TAG, e);\r\n                } \r\n            }\r\n\r\nNot able to cast CloseableReference to CloseableBitmap\r\n### Additional Information\r\n* Fresco version: [2.0.0]\r\n* Device: [HMD Global Nokia 5,ONEPLUS A6010]\r\n",
    "comments_url": "https://api.github.com/repos/facebook/fresco/issues/2392/comments",
    "author": "Devendra-Mehra",
    "comments": [
      {
        "user": "oprisnik",
        "created_at": "2019-08-13T15:53:46Z",
        "body": "The image is not guaranteed to be a closeable bitmap. For example, for animated images, you won't get one. If that can happen , you need to properly handle that case :)"
      },
      {
        "user": "Devendra-Mehra",
        "created_at": "2019-08-14T06:38:33Z",
        "body": " **Sure that worked for me** 👍"
      }
    ]
  },
  {
    "number": 2319,
    "title": "Feature request; compliance to \"R.Drawable\"",
    "created_at": "2019-04-11T10:51:30Z",
    "closed_at": "2019-04-15T16:23:22Z",
    "labels": [
      "enhancement",
      "question"
    ],
    "url": "https://github.com/facebook/fresco/issues/2319",
    "body": "The current  API introduces an extra layer of complexity compared against default Android API. The suggestion is to replace this:\r\n\r\n```\r\nUri uri = Uri.parse(\"res:///\" + R.drawable.xxx);\r\ndraweeView.setImageURI(uri);\r\n```\r\n\r\nwith this:\r\n\r\n`draweeView.setImage(R.drawable.xxx);`\r\n\r\nAnd similar, enable the same API as granted by Android, e.g. like this:\r\n\r\n`draweeView.setColorFilter(…,...);` \r\n\r\nIOW, hide away the complex hierarchy builder for elementary features, while keeping it of course for advanced configurations.\r\n\r\nYour  comment?\r\n",
    "comments_url": "https://api.github.com/repos/facebook/fresco/issues/2319/comments",
    "author": "chjan",
    "comments": [
      {
        "user": "defHLT",
        "created_at": "2019-04-12T10:08:50Z",
        "body": "Thanks for your suggestions!\r\n\r\n> draweeView.setImage(R.drawable.xxx);\r\n\r\nThere's a method with the same functionality in `SimpleDraweeView`: `setActualImageResource`. Arguably the naming could be better :)\r\n\r\nAs for your second suggestion, I think the following should work as expected?\r\n```\r\n    PorterDuffColorFilter colorfilter = new PorterDuffColorFilter(Color.RED, PorterDuff.Mode.ADD);\r\n    simpleDraweeView.setColorFilter(colorfilter);\r\n```"
      },
      {
        "user": "AikoKiko",
        "created_at": "2019-04-15T16:07:57Z",
        "body": "In documentation : SimpleDraweeView#setImageURI(Uri uri, @Nullable Object callerContext) \r\ncaller : null or metadata String TAG type\r\nAdditionally you can use: \r\nval uriPath = arrayList!![position].getUrl()\r\ndraweeView.setImageURI(uriPath)"
      }
    ]
  },
  {
    "number": 2313,
    "title": "After using the roundedCornerRadius property, setFailureImage ScaleType does not work properly",
    "created_at": "2019-04-01T06:09:51Z",
    "closed_at": "2019-04-09T17:10:52Z",
    "labels": [
      "docs",
      "question"
    ],
    "url": "https://github.com/facebook/fresco/issues/2313",
    "body": "### Description\r\n\r\nAfter using the roundedCornerRadius property, setFailureImage ScaleType does not work properly\r\n\r\n### Reproduction\r\n- xml\r\n```\r\n<com.facebook.drawee.view.SimpleDraweeView\r\n        android:id=\"@+id/pic_image\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        fresco:viewAspectRatio=\"1.77\"\r\n        fresco:roundedCornerRadius=\"@dimen/spa_3\"/>\r\n```\r\n- code\r\n```\r\n/**\r\n     * 设置通用样式\r\n     *\r\n     * @param view          SimpleDraweeView\r\n     * @param load_drawable 加载动画\r\n     * @param place_holder  默认图\r\n     */\r\n    private static void initImageHierarchy(SimpleDraweeView view, Drawable load_drawable, int place_holder) {\r\n        GenericDraweeHierarchy hierarchy = view.getHierarchy();\r\n        hierarchy.setFadeDuration(500);\r\n        hierarchy.setProgressBarImage(load_drawable);\r\n        hierarchy.setFailureImage(R.mipmap.place_holder, ScalingUtils.ScaleType.CENTER_INSIDE);\r\n        if (place_holder != 0) {\r\n            hierarchy.setPlaceholderImage(place_holder, ScalingUtils.ScaleType.CENTER_INSIDE);\r\n        }\r\n        hierarchy.setActualImageScaleType(ScalingUtils.ScaleType.FIT_XY);\r\n    }\r\n```\r\n### Solution\r\n- fresco:roundedCornerRadius=\"@dimen/spa_3\" After use, there will be no centering setFailureImage\r\n- ScalingUtils.ScaleType.CENTER_INSIDE  It seems to lose the benchmark\r\n\r\n\r\n### Additional Information\r\n\r\n* Fresco version: [1.13.0]\r\n* Platform version: [Android 9]",
    "comments_url": "https://api.github.com/repos/facebook/fresco/issues/2313/comments",
    "author": "yaooort",
    "comments": [
      {
        "user": "erikandre",
        "created_at": "2019-04-01T09:32:58Z",
        "body": "@oprisnik- is this the expected behavior?"
      },
      {
        "user": "yaooort",
        "created_at": "2019-04-01T11:21:37Z",
        "body": "I want to set the FailureImage and want the ScaleType to be centered, but once I set the rounded roundedCornerRadius. Can't be centered"
      },
      {
        "user": "stale[bot]",
        "created_at": "2019-04-08T11:41:06Z",
        "body": "Hey there, it looks like there has been no activity on this issue recently. Has the issue been fixed, or does it still require the community's attention? This issue may be closed if no further activity occurs. You may also label this issue as \"bug\" or \"enhancement\" and I will leave it open. Thank you for your contributions.\n"
      },
      {
        "user": "yaooort",
        "created_at": "2019-04-09T13:18:19Z",
        "body": "unsolved"
      },
      {
        "user": "oprisnik",
        "created_at": "2019-04-09T17:10:52Z",
        "body": "Please set a failure image scale type. That should fix your issues."
      }
    ]
  },
  {
    "number": 2289,
    "title": "Handle gifs in RecyclerView",
    "created_at": "2019-02-16T01:25:37Z",
    "closed_at": "2019-05-23T11:13:05Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/facebook/fresco/issues/2289",
    "body": "### Description\r\n\r\nI use recyclerview to show many gifs.\r\nbut the gifs playing very slow when it plays 7~8 gifs at the same time.\r\nso i turned off auto playing options.\r\n\r\nhow can i auto play gifs and get a good performance?\r\n\r\nbelow is my code.\r\n\r\n### Reproduction\r\n```java\r\n    @Override\r\n    public void onBindViewHolder(@NonNull final ViewHolder holder, final int position) {\r\n        Jjal jjal = jjalList.get(position);\r\n\r\n        ImageRequest request = ImageRequestBuilder\r\n                .newBuilderWithSource(Uri.parse(jjal.imageUrl))\r\n                .setLocalThumbnailPreviewsEnabled(true)\r\n                .setLowestPermittedRequestLevel(ImageRequest.RequestLevel.DISK_CACHE)\r\n                .setProgressiveRenderingEnabled(true)\r\n                .build();\r\n\r\n        holder.ivImage.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                boolean playing = holder.ivImage.getTag() != null && (boolean) holder.ivImage.getTag();\r\n                final Animatable animatable = holder.ivImage.getController().getAnimatable();\r\n                if (animatable != null) {\r\n                    AnimatedDrawable2 animatedDrawable = (AnimatedDrawable2) animatable;\r\n                    animatedDrawable.setAnimationListener(new AnimationListener() {\r\n                        @Override\r\n                        public void onAnimationStart(AnimatedDrawable2 drawable) {\r\n                            holder.ivImage.setTag(true);\r\n                        }\r\n\r\n                        @Override\r\n                        public void onAnimationStop(AnimatedDrawable2 drawable) {\r\n                            holder.ivImage.setTag(false);\r\n                        }\r\n\r\n                        @Override\r\n                        public void onAnimationReset(AnimatedDrawable2 drawable) {\r\n\r\n                        }\r\n\r\n                        @Override\r\n                        public void onAnimationRepeat(AnimatedDrawable2 drawable) {\r\n                            animatable.stop();\r\n                        }\r\n\r\n                        @Override\r\n                        public void onAnimationFrame(AnimatedDrawable2 drawable, int frameNumber) {\r\n\r\n                        }\r\n                    });\r\n                    if (!playing) {\r\n                        animatable.start();\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        holder.ivImage.setController(Fresco.newDraweeControllerBuilder()\r\n                .setOldController(holder.ivImage.getController())\r\n                .setLowResImageRequest(request)\r\n                .setAutoPlayAnimations(false)\r\n                .setControllerListener(new BaseControllerListener () {\r\n                    @Override\r\n                    public void onIntermediateImageSet(String id, @Nullable Object imageInfo) {\r\n                        super.onIntermediateImageSet(id, imageInfo);\r\n                        updateViewSize(holder.ivImage, (ImageInfo) imageInfo);\r\n                    }\r\n\r\n                    @Override\r\n                    public void onFinalImageSet(String id, @Nullable Object imageInfo, @Nullable Animatable animatable) {\r\n                        super.onFinalImageSet(id, imageInfo, animatable);\r\n                        updateViewSize(holder.ivImage, (ImageInfo) imageInfo);\r\n                    }\r\n                })\r\n                .build());\r\n\r\n        holder.view.setTag(position);\r\n    }\r\n```\r\n### Solution\r\n\r\n[OPTIONAL: Do you know what needs to be done to address this issue? Ideally, provide a pull request which fixes this issue.]\r\n\r\n### Additional Information\r\n\r\n* Fresco version: \r\n`implementation 'com.facebook.fresco:fresco:1.12.1'`\r\n`implementation 'com.facebook.fresco:animated-gif:1.12.1'`\r\n* Platform version: [FILL THIS OUT: specific to a particular Android version? Device?]\r\n",
    "comments_url": "https://api.github.com/repos/facebook/fresco/issues/2289/comments",
    "author": "gold24park",
    "comments": [
      {
        "user": "lambdapioneer",
        "created_at": "2019-02-20T10:57:46Z",
        "body": "If you have many high resolution GIF images, then it's somewhat expected to see these kind of performance problems. It's simply due to the fact that one is burning through a lot of Bitmap objects very quickly.\r\n\r\nIf those images are controlled by you, then one solution would be to resize them server side which should improve the playback performance. Another solution is to just animate a subsection of those images.\r\n\r\nYou can try to increase the Bitmap memory cache to allow more caching which could help in some cases."
      },
      {
        "user": "oprisnik",
        "created_at": "2019-05-23T11:13:05Z",
        "body": "I'm closing this due to inactivity."
      }
    ]
  },
  {
    "number": 2208,
    "title": "Memory increases rapdly when there are webps(AnimatedDrawable) in RecyclerView. how to solve the problem?",
    "created_at": "2018-09-13T13:08:18Z",
    "closed_at": "2018-09-20T13:09:01Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/facebook/fresco/issues/2208",
    "body": "version 1.8.1 or above\r\n \r\nMemory increase rapidly when I use Webps in RecyclerView.\r\nI have a webp in each item, each webp has about 50 frames and has a size of 150*56. I find that 50 Bitmaps are decoded into memory for each webp, each webp has 50 bitmaps, this is unbelievable.\r\nthere are 100 bitmaps in memory when i show two webps  both of which are the same.\r\nalso when i scroll out or in to screen, each webp are decoded into memory once again.\r\n\r\nmy question are as follows:\r\n1.why use cache strategy CACHING_STRATEGY_FRESCO_CACHE_NO_REUSING(2) for default, which leads to all the frame are decoded to memory.\r\n\r\n2.can not both of the two webps use the same cache althrough they may be loaded from the same request(there request params are the same), also the same file in fact?  From the `equals` of `FrameKey` i see it that.\r\n```java\r\n@Override\r\n    public boolean equals(Object o) {\r\n      if (o == this) {\r\n        return true;\r\n      }\r\n      if (o instanceof FrameKey) {\r\n        FrameKey that = (FrameKey) o;\r\n        return this.mImageCacheKey == that.mImageCacheKey &&\r\n            this.mFrameIndex == that.mFrameIndex;\r\n      }\r\n      return false;\r\n    }\r\n```",
    "comments_url": "https://api.github.com/repos/facebook/fresco/issues/2208/comments",
    "author": "qhyuan1992",
    "comments": [
      {
        "user": "oprisnik",
        "created_at": "2018-09-20T13:09:01Z",
        "body": "If there is memory available, Fresco makes use of that memory. It would be a waste if you set up Fresco to utilize x MB and then only use x/100 MB for animated GIFs.\r\n\r\nThe reason why we don't reuse the bitmaps per default is related to that. If we have the memory we use it instead of decoding the same frame over and over again, which wastes a lot of CPU time.\r\n\r\n2: That seems like a bug, cache keys should use a proper equals check. I'll fix that, thanks."
      }
    ]
  },
  {
    "number": 2146,
    "title": "what changed between v1.8 and v1.1 result in the method `Bitmap#isMutable` return false? ",
    "created_at": "2018-07-02T08:44:51Z",
    "closed_at": "2018-07-10T15:10:31Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/facebook/fresco/issues/2146",
    "body": "Following code:when downloading image with imagepipeline\r\n```\r\nCloseableBitmap closeableBitmap = (CloseableBitmap) imageReference.get();\r\nBitmap bitmap = closeableBitmap.getUnderlyingBitmap();\r\nGLog.d(TAG, \"isMutable:\" + bitmap.isMutable());\r\n```\r\nwhy return false? in previous version here return true? what changed?",
    "comments_url": "https://api.github.com/repos/facebook/fresco/issues/2146/comments",
    "author": "qhyuan1992",
    "comments": [
      {
        "user": "qhyuan1992",
        "created_at": "2018-07-02T08:53:52Z",
        "body": "@oprisnik  need your help"
      },
      {
        "user": "zmroczek",
        "created_at": "2018-07-02T08:58:29Z",
        "body": "Hi @qhyuan1992 \r\n\r\nThanks for your question. We don't really see anything that changed between versions 1.7.1 and 1.8 that could have caused that. Why do you need bitmap to be mutable at that point?"
      },
      {
        "user": "qhyuan1992",
        "created_at": "2018-07-02T09:17:06Z",
        "body": "@zmroczek  thank you for your answer.\r\nsorry, i means v1.8 and v1.1, last week, I update from v1.1 to 1.8\r\nthen there are some crash \r\n```\r\njava.lang.RuntimeException: Canvas: trying to use a recycled bitmap android.graphics.Bitmap@321ad47\r\n```\r\n\r\nhere are some code  like this when loading image finish\r\n```\r\nBitmap newBitmap = Bitmap.createBitmap(bitmap, 0, 0, bitmap.getWidth(), bitmap.getHeight(), matrix, false);\r\n```\r\nbecause we need a scale bitmap, here matrix may be`Identity`, which may cause  same Bitmap returned from following code, WHERE  if is true!\r\n```\r\npublic static Bitmap createBitmap(Bitmap source, int x, int y, int width, int height,\r\n            Matrix m, boolean filter) {\r\n        // check if we can just return our argument unchanged\r\n        if (!source.isMutable() && x == 0 && y == 0 && width == source.getWidth() &&\r\n                height == source.getHeight() && (m == null || m.isIdentity())) {\r\n            return source;\r\n        }\r\n...\r\n```\r\nwe did not hold the CloseableReference of origin bitmap, so it may be recycle after the method, so,  we think we are using a \"new \" bitmap but Actually the same with the origin ONE, which was recycled! CRASH happend! "
      },
      {
        "user": "qhyuan1992",
        "created_at": "2018-07-02T09:24:50Z",
        "body": "`setResizeOptions` is a good solution, we can get whct we want finally. but it can also support the exact WIDTH and HEIGHT. Actually we can not get real width and height before we get the EncodedImage. \r\nAnnther solution is hold the reference we use. i think  it is not a good way."
      },
      {
        "user": "qhyuan1992",
        "created_at": "2018-07-06T07:16:46Z",
        "body": "I have found the reason\r\nin ArtDecoder, there are following codes\r\n```\r\nprotected CloseableReference<Bitmap> decodeStaticImageFromStream(\r\n      InputStream inputStream, BitmapFactory.Options options, @Nullable Rect regionToDecode) {\r\n    Preconditions.checkNotNull(inputStream);\r\n    //...\r\n    try {\r\n      //...\r\n      \r\n      if (decodedBitmap == null) {\r\n        decodedBitmap = BitmapFactory.decodeStream(inputStream, null, options);\r\n      }\r\n    } catch (IllegalArgumentException e) {\r\n      mBitmapPool.release(bitmapToReuse);\r\n      // This is thrown if the Bitmap options are invalid, so let's just try to decode the bitmap\r\n      // as-is, which might be inefficient - but it works.\r\n      try {\r\n        // here may cause ..\r\n       // at this point. it will throw IllegalArgumentException(\"Problem decoding into existing bitmap\")\r\n        Bitmap naiveDecodedBitmap = BitmapFactory.decodeStream(inputStream);\r\n       //...\r\n      } catch (IOException re) {\r\n       //...\r\n      }\r\n    } catch (RuntimeException re) {\r\n      // ...\r\n    } finally {\r\n      mDecodeBuffers.release(byteBuffer);\r\n    }\r\n\r\n    if (bitmapToReuse != decodedBitmap) {\r\n      mBitmapPool.release(bitmapToReuse);\r\n      decodedBitmap.recycle();\r\n      throw new IllegalStateException();\r\n    }\r\n    return CloseableReference.of(decodedBitmap, mBitmapPool);\r\n  }\r\n```\r\nhere we try to use `RGB_565` to decode png(may be ARGB_8888), `Bitmap#decodeStream(InputStream is, Rect outPadding, Options opts)` may throws IllegalArgumentException(\"Problem decoding into existing bitmap\")\r\n\r\nthen, the exception is caught in v1.8.1, decode with this method `Bitmap decodeStream(InputStream is)`, so options is default value, also NULL.  we got a bitmap which is ismutable and also ARGB_8888\r\n\r\nHOWEVER,  the exception is not caught in v1.1.0. so `retryOnFail` work, where uses  Bitmap.Config.ARGB_8888, and options is not null, when decoding\r\n```\r\npublic CloseableReference<Bitmap> decodeFromEncodedImage(\r\n      EncodedImage encodedImage,\r\n      Bitmap.Config bitmapConfig) {\r\n    final BitmapFactory.Options options = getDecodeOptionsForStream(encodedImage, bitmapConfig);\r\n    boolean retryOnFail=options.inPreferredConfig != Bitmap.Config.ARGB_8888;\r\n    try {\r\n      return decodeStaticImageFromStream(encodedImage.getInputStream(), options);\r\n    } catch (RuntimeException re) {\r\n      if (retryOnFail) {\r\n        return decodeFromEncodedImage(encodedImage, Bitmap.Config.ARGB_8888);\r\n      }\r\n      throw re;\r\n    }\r\n  }\r\n```\r\n\r\ni would  try to see why `Bitmap#decodeStream(InputStream is, Rect outPadding, Options opts)` may be null in this cases. which may also related to the Android version\r\n"
      },
      {
        "user": "qhyuan1992",
        "created_at": "2018-07-06T07:33:31Z",
        "body": "source :\r\nEncodedImage: png/ARGB_8888\r\nIt will throw `IllegalArgumentException(\"Problem decoding into existing bitmap\")`  when decode with `decodeFromEncodedImage` using the following option\r\n```\r\noptions.inPreferredConfig = RGB_565\r\noptions.inBitmap = bitmapToReuse\r\noptions.inJustDecodeBounds = false\r\noptions.inDither = true\r\noptions.inPreferredConfig = bitmapConfig\r\noptions.inMutable = true\r\n```"
      },
      {
        "user": "oprisnik",
        "created_at": "2018-07-06T12:10:15Z",
        "body": "Thanks for investigating @qhyuan1992. That's good to know. We used to just throw the exception if that happens but decided that it's better to show something if possible instead of just crashing."
      },
      {
        "user": "qhyuan1992",
        "created_at": "2018-07-06T12:24:09Z",
        "body": "Thanks for your answer 👍 @oprisnik .From following code , it would not crash? then retryOnFail is true.the image would be decoded with `Bitmap.Config.ARGB_8888`？ that is ok？\r\n```\r\npublic CloseableReference<Bitmap> decodeFromEncodedImage(\r\n      EncodedImage encodedImage,\r\n      Bitmap.Config bitmapConfig) {\r\n    final BitmapFactory.Options options = getDecodeOptionsForStream(encodedImage, bitmapConfig);\r\n    boolean retryOnFail=options.inPreferredConfig != Bitmap.Config.ARGB_8888;\r\n    try {\r\n      return decodeStaticImageFromStream(encodedImage.getInputStream(), options);\r\n    } catch (RuntimeException re) {\r\n      if (retryOnFail) {\r\n        return decodeFromEncodedImage(encodedImage, Bitmap.Config.ARGB_8888);\r\n      }\r\n      throw re;\r\n    }\r\n  }\r\n```\r\n\r\ni see some error on Android 7.1.1.  However, I can not  understand why this happens.the image info are as  mentioned above.\r\n```\r\nBitmapFactory: bitmap marked for reuse (524288 bytes) can't fit new bitmap (1048576 bytes)\r\n```\r\n"
      },
      {
        "user": "qhyuan1992",
        "created_at": "2018-07-09T02:43:37Z",
        "body": "oh, i understand. the question also means what if i decode a png image with alhpa using RGB_565?\r\nit could reuse bitmap in Fresco, so we allocate a size of `width * height * (size of RGB_565, also 2)`.\r\n in native , it really change to ARGB_8888 because of having alpha, although we use a colortype of RGB_565. it need `width * height * (size of ARGB_8888, also 4)`. so the crash happend\r\n```\r\nBitmapFactory: bitmap marked for reuse (524288 bytes) can't fit new bitmap (1048576 bytes)\r\n```"
      },
      {
        "user": "qhyuan1992",
        "created_at": "2018-07-10T15:19:10Z",
        "body": "@oprisnik  The issue caused by different size of reused bitmap is similar to the issue [Android Oreo - can't load some PNG - BitmapFactory: bitmap marked for reuse (3944728 bytes) can't fit new bitmap (7889456 bytes)](url). A immutable bitmap returned  also result from the change for issue #2021. so I close the issue"
      }
    ]
  },
  {
    "number": 2096,
    "title": " draweeView.setImageURI(imageUri) throws an exception \"unknown Image format\" when the image is set from cache.",
    "created_at": "2018-04-12T23:48:06Z",
    "closed_at": "2018-05-22T18:16:17Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/facebook/fresco/issues/2096",
    "body": " draweeView.setImageURI(imageUri) throws an exception \"unknown Image format\" when the image is set from cache. \r\n\r\nThis is the decoder that is used to decode the input stream after the image is downloaded from the server.\r\n\r\n`private static class CustomImageDecoder implements ImageDecoder {\r\n        @Override\r\n        public CloseableImage decode(EncodedImage encodedImage, int length, QualityInfo qualityInfo, ImageDecodeOptions options) {\r\n            try {\r\n                InputStream inputStream = decrypt(encodedImage.getInputStream());\r\n                Bitmap bitmap = BitmapFactory.decodeStream(inputStream);\r\n                return new CloseableStaticBitmap(bitmap, SimpleBitmapReleaser.getInstance(), qualityInfo, encodedImage.getRotationAngle());\r\n              } catch (IOException e) {\r\n                e.printStackTrace();\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n\r\nprivate void setImage(Uri imageUri) {\r\n    if (Fresco.getImagePipeline().isInBitmapMemoryCache(imageUri)) {\r\n         draweeView.setImageURI(imageUri);\r\n    } else {\r\n         ImageRequestBuilder imageRequestBuilder = \r\n         ImageRequestBuilder.newBuilderWithSource(imageUri)\r\n                .setImageDecodeOptions(ImageDecodeOptions.newBuilder()\r\n                        .setCustomImageDecoder(new CustomImageDecoder()).build());\r\n        ImageRequest imageRequest =imageRequestBuilder.build();\r\n            DraweeController controller = Fresco.newDraweeControllerBuilder()\r\n                    .setUri(imageUri)\r\n                    .setImageRequest(imageRequest)\r\n                    .setOldController(draweeView.getController())\r\n                    .build();\r\n            draweeView.setController(controller);\r\n      }\r\n}`\r\n",
    "comments_url": "https://api.github.com/repos/facebook/fresco/issues/2096/comments",
    "author": "prathibhap-google",
    "comments": [
      {
        "user": "oprisnik",
        "created_at": "2018-05-22T18:16:17Z",
        "body": "Sorry for the late reply.\r\n\r\nI think your controller setup is causing this issue.\r\nYou're setting both an image URI and an imageRequest, and the URI will override what's set via ImageRequest.\r\n\r\nIf you remove `setUri(imageUri)`, it should work:\r\n```java\r\nDraweeController controller = Fresco.newDraweeControllerBuilder()\r\n.setImageRequest(imageRequest)\r\n.setOldController(draweeView.getController())\r\n.build();\r\ndraweeView.setController(controller);\r\n```"
      }
    ]
  },
  {
    "number": 1863,
    "title": "How to set loopcount for AnimatedImage after v1.4.0?",
    "created_at": "2017-08-11T03:04:18Z",
    "closed_at": "2017-08-16T10:17:04Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/facebook/fresco/issues/1863",
    "body": "Now I aim to play a gif image 5 time.\r\nAnd I found there is  a method getLoopCount for get the number of loops for a  animatedImage, \r\nbut the question is I don't know how to dynamic set loopCount.\r\nWaiting for your help.",
    "comments_url": "https://api.github.com/repos/facebook/fresco/issues/1863/comments",
    "author": "zewenwang",
    "comments": [
      {
        "user": "oprisnik",
        "created_at": "2017-08-16T10:17:04Z",
        "body": "Ideally, your GIF would be properly formatted and have the loop count set to N.\r\n\r\nOtherwise, you can create a modifying backend, something like this:\r\n```java\r\npublic class LoopCountModifyingBackend extends AnimationBackendDelegate {\r\n\r\n  private int mLoopCount;\r\n\r\n  public LoopCountModifyingBackend(\r\n      @Nullable AnimationBackend animationBackend,\r\n      int loopCount) {\r\n    super(animationBackend);\r\n    mLoopCount = loopCount;\r\n  }\r\n\r\n  @Override\r\n  public int getLoopCount() {\r\n    return mLoopCount;\r\n  }\r\n}\r\n```\r\n\r\nand then set it to your animated drawable:\r\n\r\n```java\r\nfinal DraweeController controller = Fresco.newDraweeControllerBuilder()\r\n    .setAutoPlayAnimations(true)\r\n    .setUri(uri)\r\n    .setControllerListener(new BaseControllerListener<ImageInfo>() {\r\n      @Override\r\n      public void onFinalImageSet(\r\n          String id,\r\n          @Nullable ImageInfo imageInfo,\r\n          @Nullable Animatable animatable) {\r\n        if (animatable instanceof AnimatedDrawable2) {\r\n          AnimatedDrawable2 animatedDrawable = (AnimatedDrawable2) animatable;\r\n          animatedDrawable.setAnimationBackend(new LoopCountModifyingBackend(animatedDrawable.getAnimationBackend(), 3));\r\n        }\r\n      }\r\n    })\r\n    .build();\r\nsimpleDraweeView.setController(controller);\r\n```\r\n\r\nYou can also create a custom DrawableFactory that does this directly and then pass it when the image is rendered via PipelineDraweeController."
      },
      {
        "user": "zewenwang",
        "created_at": "2017-08-18T02:11:45Z",
        "body": "Thanks."
      },
      {
        "user": "GrossGhost",
        "created_at": "2019-12-18T12:47:58Z",
        "body": "now for fresco 2.0.0+ ,how to do this?"
      },
      {
        "user": "qiaogaojian",
        "created_at": "2020-05-23T07:53:00Z",
        "body": "works very well!"
      }
    ]
  },
  {
    "number": 1829,
    "title": "Image loading with resize options",
    "created_at": "2017-07-19T05:38:57Z",
    "closed_at": "2017-07-19T10:15:09Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/facebook/fresco/issues/1829",
    "body": "ImageRequest request = ImageRequestBuilder.newBuilderWithSource(uri)\r\n                    .setProgressiveRenderingEnabled(true)\r\n                    .setResizeOptions(new ResizeOptions(10,10))\r\n                    .build();\r\nuse resize option 10 by 10 but still image  take time to load..",
    "comments_url": "https://api.github.com/repos/facebook/fresco/issues/1829/comments",
    "author": "ankit02jindal",
    "comments": [
      {
        "user": "foghina",
        "created_at": "2017-07-19T10:15:09Z",
        "body": "Hi @ankit02jindal! When you're loading an image with `ResizeOptions`, the whole image is still loaded from the server, it's just resized on the device so it takes up less memory (RAM) when displayed. If you want your images to load faster you should resize them on the server instead."
      }
    ]
  },
  {
    "number": 1787,
    "title": "OOM Exception with Activity",
    "created_at": "2017-05-31T06:35:30Z",
    "closed_at": "2017-05-31T10:32:38Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/facebook/fresco/issues/1787",
    "body": "In my project,has an Activity---is a NewsDetail with a WebView(to show web content) and ListView(to show about News and comment)\r\n    and when I open this Activity ,click aboutNews to open an new this Activity, when i repeat this opration;it must a issue an OOM exception.\r\n    there is an Question that when the activity onPause(),the bitmap will be release? \r\n    Fresco and Lifecycle has any connection?",
    "comments_url": "https://api.github.com/repos/facebook/fresco/issues/1787/comments",
    "author": "guoziqiangYY",
    "comments": [
      {
        "user": "oprisnik",
        "created_at": "2017-05-31T10:32:38Z",
        "body": "We are doing manual memory management for Bitmaps. If you're using DraweeView, the memory will be released when the drawee is detached from the current window and if nothing else holds on to the bitmap. If something holds on to the views, this might not work correctly. If you're using the pipeline directly, you have to do this manually."
      }
    ]
  },
  {
    "number": 1750,
    "title": "Fetching updated Image",
    "created_at": "2017-05-04T16:40:06Z",
    "closed_at": "2017-05-05T12:06:16Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/facebook/fresco/issues/1750",
    "body": "Hey , I am using Fresco for downloading images from Server. \r\nI want to download image and set it to a linearlayout as background. So I am using Imagepipeline to download image using the URL directly.\r\nNow I am facing two issues\r\n1. How to scale an image which has been downloaded via pipeline \r\n2. When I update the image on the website and logout from the application and then login back then the application crashes. Once the application crashes and I restart the application, the application works fine it shows me a null pointer exception.\r\n\r\nFollowing is the code snippet being used for downloading the image\r\n\r\n        Uri uri= Uri.parse(GlobalVariables.IMAGE_PREFIX+coverPic);\r\n        final LinearLayout linearLayout= (LinearLayout) findViewById(R.id.navHeader);\r\n\r\n        ImageDecodeOptions decodeOptions = ImageDecodeOptions.newBuilder()\r\n                .build();\r\n        ImageRequest request = ImageRequestBuilder\r\n                .newBuilderWithSource(uri)\r\n                .setImageDecodeOptions(decodeOptions)\r\n                .setLocalThumbnailPreviewsEnabled(true)\r\n                .setLowestPermittedRequestLevel(ImageRequest.RequestLevel.FULL_FETCH)\r\n                .setProgressiveRenderingEnabled(false)\r\n                .setResizeOptions(new ResizeOptions(width, height))\r\n                .build();\r\n\r\n        ImagePipeline imagePipeline = Fresco.getImagePipeline();\r\n        final DataSource<CloseableReference<CloseableImage>>\r\n                dataSource = imagePipeline.fetchDecodedImage(request, this);\r\n\r\n        try{\r\n            dataSource.subscribe(new BaseBitmapDataSubscriber() {\r\n                @RequiresApi(api = Build.VERSION_CODES.JELLY_BEAN)\r\n                @Override\r\n                protected void onNewResultImpl(Bitmap bitmap) {\r\n                    assert bitmap!= null;\r\n                        Bitmap result= BlurBuilder.blur(HomeActivity.this, bitmap);\r\n                        linearLayout.setBackground(new BitmapDrawable(getResources(), result));\r\n                        dataSource.close();\r\n                }\r\n\r\n                @Override\r\n                protected void onFailureImpl(DataSource<CloseableReference<CloseableImage>>dataSource) {\r\n\r\n                }\r\n            }, UiThreadImmediateExecutorService.getInstance());\r\n\r\n        } catch (Exception e){\r\n            e.printStackTrace();\r\n        }\r\n",
    "comments_url": "https://api.github.com/repos/facebook/fresco/issues/1750/comments",
    "author": "Anmolk22",
    "comments": [
      {
        "user": "oprisnik",
        "created_at": "2017-05-05T12:06:16Z",
        "body": "Scaling: If you don't use a DraweeView, you have to perform the scaling yourself. For example, do something similar with Matrix operations like we do in DraweeView and ScaleType.\r\n\r\nCrashes: You should not use `BaseBitmapDataSubscriber` to get the bitmap since the bitmap will be closed right after `onNewResultImpl`, which causes the crash. See also #1550.\r\n\r\nYou should use a DraweeView instead if possible. Also, for the blurring step you should use a `Postprocessor` and we also have blurring postprocessors in the `showcase` sample app. "
      }
    ]
  },
  {
    "number": 1703,
    "title": "Loading the GIF causes the project to crash",
    "created_at": "2017-03-17T11:30:05Z",
    "closed_at": "2017-03-18T14:10:50Z",
    "labels": [
      "duplicate",
      "build",
      "question"
    ],
    "url": "https://github.com/facebook/fresco/issues/1703",
    "body": "\r\n\r\n```java\r\n//my code\r\n\r\n Uri uri = Uri.parse(address);\r\n        DraweeController draweeController =\r\n                Fresco.newDraweeControllerBuilder()\r\n                        .setUri(uri)\r\n                        .setAutoPlayAnimations(true) \r\n                        .build();\r\n        nivShowImg.setController(draweeController);\r\n```\r\n\r\n```java\r\n//my version\r\ncompile 'com.facebook.fresco:fresco:1.1.0'\r\ncompile 'com.facebook.fresco:animated-gif:1.1.0'\r\n```\r\n\r\n```java\r\n//my error\r\n java.lang.NoSuchFieldError: com.facebook.imagepipeline.common.ImageDecodeOptions.forceOldAnimationCode\r\n                                                               at com.facebook.imagepipeline.animated.factory.AnimatedImageFactoryImpl.decodeGif(AnimatedImageFactoryImpl.java:84)\r\n                                                               at com.facebook.imagepipeline.decoder.DefaultImageDecoder.decodeGif(DefaultImageDecoder.java:142)\r\n                                                               at com.facebook.imagepipeline.decoder.DefaultImageDecoder$1.decode(DefaultImageDecoder.java:65)\r\n                                                               at com.facebook.imagepipeline.decoder.DefaultImageDecoder.decode(DefaultImageDecoder.java:123)\r\n                                                               at com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder.doDecode(DecodeProducer.java:239)\r\n                                                               at com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder.access$200(DecodeProducer.java:111)\r\n                                                               at com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder$1.run(DecodeProducer.java:144)\r\n                                                               at com.facebook.imagepipeline.producers.JobScheduler.doJob(JobScheduler.java:207)\r\n                                                               at com.facebook.imagepipeline.producers.JobScheduler.access$000(JobScheduler.java:27)\r\n                                                               at com.facebook.imagepipeline.producers.JobScheduler$1.run(JobScheduler.java:78)\r\n                                                               at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\r\n                                                               at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\r\n                                                               at com.facebook.imagepipeline.core.PriorityThreadFactory$1.run(PriorityThreadFactory.java:43)\r\n                                                               at java.lang.Thread.run(Thread.java:841)\r\n\r\n```\r\n#question\r\nWhat is the solution to this problem, or what is the cause of the problem",
    "comments_url": "https://api.github.com/repos/facebook/fresco/issues/1703/comments",
    "author": "bxhuhu",
    "comments": [
      {
        "user": "oprisnik",
        "created_at": "2017-03-17T14:17:04Z",
        "body": "I guess some of your Gradle dependencies got mixed up. We removed `forceOldAnimationCode`. Try and clean/rebuild your project"
      },
      {
        "user": "oprisnik",
        "created_at": "2017-03-18T14:10:50Z",
        "body": "See also #1660"
      },
      {
        "user": "bxhuhu",
        "created_at": "2017-03-23T14:57:40Z",
        "body": "Thanks @oprisnik  "
      }
    ]
  },
  {
    "number": 1682,
    "title": "Can we set the position of progress bar drawable to top instead of bottom?",
    "created_at": "2017-03-01T06:45:09Z",
    "closed_at": "2017-03-22T10:30:31Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/facebook/fresco/issues/1682",
    "body": "For now, the progressbar is displayed at the bottom of the loading image. I want to set it to the top. \r\n\r\nHow can I archieved this? Thank you.\r\n\r\nAdditionally, I think that the onLevelChange is called only by the download process, not the decode process. It makes progress stuck at about  98% when the Drawee need to display gif. Do we have any solution for this? ",
    "comments_url": "https://api.github.com/repos/facebook/fresco/issues/1682/comments",
    "author": "namchuai",
    "comments": [
      {
        "user": "kirwan",
        "created_at": "2017-03-01T13:53:09Z",
        "body": "`GenericDraweeHierarchy` allows you to set your own progress bar `Drawable` so you can position it as you want within the view area.\r\n\r\nAs for the levels, it's true that the download is all that's used and that isn't ideal for animated GIFs. We actually don't generally use determinate progress bars ourselves though so I don't think we're likely to fix that soon. It's not a trivial fix because most images decode very quickly but animations can take a bit of time."
      },
      {
        "user": "namchuai",
        "created_at": "2017-03-01T14:39:15Z",
        "body": "Thanks for your explaination!"
      }
    ]
  },
  {
    "number": 1645,
    "title": "When trying to fetchImageFromBitmapCache() for GIF image, imageReference is always null",
    "created_at": "2017-01-30T09:49:57Z",
    "closed_at": "2017-01-30T16:38:58Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/facebook/fresco/issues/1645",
    "body": "I want to allow users to save GIF images in our app. I am trying to get GIF image from Fresco cache via `fetchImageFromBitmapCache()` but it always returns NULL for GIF images.\r\nFor JPG and PNG images there is no problem.",
    "comments_url": "https://api.github.com/repos/facebook/fresco/issues/1645/comments",
    "author": "rafaelekol",
    "comments": [
      {
        "user": "oprisnik",
        "created_at": "2017-01-30T11:19:01Z",
        "body": "Did you add `compile 'com.facebook.fresco:animated-gif:1.0.1'` to your `build.gradle`?"
      },
      {
        "user": "rafaelekol",
        "created_at": "2017-01-30T11:28:44Z",
        "body": "Yes I have that line.\r\n```\r\ncompile ('com.facebook.fresco:animated-gif:1.0.1') {\r\n        exclude module: 'bolts-android'\r\n    }\r\n```"
      },
      {
        "user": "oprisnik",
        "created_at": "2017-01-30T16:38:35Z",
        "body": "I guess you have to use `fetchDecodedImage` instead since animated images are handled a bit differently than normal static bitmaps (not in the same bitmap cache currently).\r\n\r\nHowever, if you want to allow people to save images, you should get the encoded image instead of the decoded image, i.e. `fetchEncodedImage`."
      },
      {
        "user": "rafaelekol",
        "created_at": "2017-01-31T05:24:12Z",
        "body": "Thanks, it worked. I managed to save files with this code:\r\n\r\n```\r\nDataSource<CloseableReference<PooledByteBuffer>>\r\n                dataSource = Fresco.getImagePipeline().fetchEncodedImage(ImageRequest.fromUri(imageUrl), App.getContext());\r\n\r\n        DataSubscriber<CloseableReference<PooledByteBuffer>> dataSubscriber =\r\n                new BaseDataSubscriber<CloseableReference<PooledByteBuffer>>() {\r\n                    @Override\r\n                    protected void onNewResultImpl(\r\n                            DataSource<CloseableReference<PooledByteBuffer>> dataSource) {\r\n                        if (!dataSource.isFinished()) {\r\n                            return;\r\n                        }\r\n                        CloseableReference<PooledByteBuffer> ref = dataSource.getResult();\r\n                        if (ref != null) {\r\n                            try {\r\n                                PooledByteBuffer pooledByteBuffer = ref.get();\r\n                                PooledByteBufferInputStream sourceIs = new PooledByteBufferInputStream(pooledByteBuffer);\r\n                                BufferedInputStream bis = new BufferedInputStream(sourceIs);\r\n                                String newFilePath = getAppFolderPath() + UUID.randomUUID().toString().toLowerCase() + \"_\" + URLUtil.guessFileName(imageUrl, null, null);\r\n                                File targetFile = new File(newFilePath);\r\n                                createDirectories(targetFile.getPath());\r\n                                try {\r\n                                    BufferedOutputStream fout = new BufferedOutputStream(new FileOutputStream(newFilePath));\r\n                                    int i;\r\n                                    do {\r\n                                        i = bis.read();\r\n                                        if (i != -1)\r\n                                            fout.write(i);\r\n                                    } while (i != -1);\r\n                                    bis.close();\r\n                                    fout.close();\r\n                                    registerMediaInDeviceGallery(new File(newFilePath));\r\n                                    showMessage(R.string.saved_to_gallery);\r\n                                } catch (IOException e) {\r\n                                    targetFile.delete();\r\n                                    e.printStackTrace();\r\n                                    showMessage(R.string.failed_to_save_to_gallery);\r\n                                }\r\n\r\n                            } finally {\r\n                                CloseableReference.closeSafely(ref);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    @Override\r\n                    protected void onFailureImpl(DataSource<CloseableReference<PooledByteBuffer>> dataSource) {\r\n                        Throwable t = dataSource.getFailureCause();\r\n                        Log.e(TAG, \"onFailureImpl: \", t);\r\n                        showMessage(R.string.failed_to_save_to_gallery);\r\n                    }\r\n                };\r\n\r\n        dataSource.subscribe(dataSubscriber, Runnable::run);\r\n```"
      }
    ]
  },
  {
    "number": 1639,
    "title": "HUAWEI mate8 cannot install application",
    "created_at": "2017-01-24T09:00:15Z",
    "closed_at": "2017-02-01T22:56:20Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/facebook/fresco/issues/1639",
    "body": "Sorry I didn't find a similar Isssus, so I opened it.\r\n\r\nMy problem is that HUAWEI mate8 phone (CPU model is Kirin 950) can not install the application (App integrated Fresco)\r\n\r\nThe message on the phone is：\r\nReason for failure: this application is not compatible with the CPU model of this device\r\n\r\nMy App gradle file is integrated with on-demand packaging\r\n\r\nsplits {\r\n        abi {\r\n            enable true\r\n            reset()\r\n            include 'x86', 'x86_64', 'arm64-v8a', 'armeabi-v7a','armeabi'\r\n            universalApk false\r\n        }\r\n    }\r\n\r\nCan you help me？（My English is not very good, please forgive me）",
    "comments_url": "https://api.github.com/repos/facebook/fresco/issues/1639/comments",
    "author": "litangyu",
    "comments": [
      {
        "user": "kirwan",
        "created_at": "2017-01-24T10:04:59Z",
        "body": "You are splitting the build for different architectures (x86, armeabi etc.) so are you installing the correct build on your phone? I think any of the arm builds should work for you (arm64-v8a being the best) so I'm surprised if this is failing.\r\n\r\nCan you try removing the splits and seeing if it installs then?"
      },
      {
        "user": "litangyu",
        "created_at": "2017-01-26T02:30:35Z",
        "body": "Okay, I'll try again. Thank you"
      }
    ]
  },
  {
    "number": 1553,
    "title": "how to refresh a drawee with a same uri but not the same image acturally",
    "created_at": "2016-11-23T08:50:34Z",
    "closed_at": "2017-04-18T09:25:43Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/facebook/fresco/issues/1553",
    "body": "for example :at first  i did :draweeAvatar.setImageURI(\"avatar.jpg\");\r\nthen i updated the 'avatar.jpg' to another picture but still named 'avatar.jpg',when i call the method ：draweeAvatar.setImageURI(\"avatar.jpg\"); it would not update,how can i update the bitmap in the draweeAvatar",
    "comments_url": "https://api.github.com/repos/facebook/fresco/issues/1553/comments",
    "author": "shuifengYu",
    "comments": [
      {
        "user": "kirwan",
        "created_at": "2016-11-23T11:04:03Z",
        "body": "There are obviously parts of the image pipeline that make the assumption that a URL will always point to the same resource.\r\n\r\nIf this isn't possible for you, there are a couple of alternatives that come quickly to mind.\r\n\r\n1. Add a cache-busting query parameter (e.g. `avatar.jpg?c=2` where the previous version was 1)\r\n2. Call `draweeAvatar.setImageURI(null)` then `ImagePipeline.evictFromCache(Uri)` before setting the same Uri back to the avatar."
      },
      {
        "user": "kirwan",
        "created_at": "2017-04-18T09:25:43Z",
        "body": "I'm closing as there have been no follow-up questions."
      }
    ]
  },
  {
    "number": 1537,
    "title": "How can I track the ImageRequest downloadTime,decodeTime,totalTimeCost?  label:question",
    "created_at": "2016-11-11T03:32:09Z",
    "closed_at": "2018-01-16T13:23:44Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/facebook/fresco/issues/1537",
    "body": "I want to make  statistics of image-request time cost. But only find cacheTrack . I want to know how to get each image-request's download-time-cost 、total-time-cost and so on. \r\n\r\n",
    "comments_url": "https://api.github.com/repos/facebook/fresco/issues/1537/comments",
    "author": "MoonRune",
    "comments": [
      {
        "user": "kirwan",
        "created_at": "2016-11-21T11:40:04Z",
        "body": "Have you looked at creating a `ProducerListener`? That allows you to get some more specific feedback from particular producers in the pipeline and it might help provide the details you're interested in."
      }
    ]
  },
  {
    "number": 1529,
    "title": "Animated Gif Pause/Unpause",
    "created_at": "2016-11-04T01:56:00Z",
    "closed_at": "2020-01-15T11:52:11Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/facebook/fresco/issues/1529",
    "body": "Just wanted to be sure, is this function not supported or I overlooked it?\r\n\r\nThank you.",
    "comments_url": "https://api.github.com/repos/facebook/fresco/issues/1529/comments",
    "author": "Wilson13",
    "comments": [
      {
        "user": "massimocarli",
        "created_at": "2016-11-04T20:58:17Z",
        "body": "Hi @Wilson13 \nat the moment we don't support the pause but we're working on it\nThanks\n"
      },
      {
        "user": "Wilson13",
        "created_at": "2016-11-08T06:15:28Z",
        "body": "Hi @massimocarli\n\nI see, looking forward to that function.\n\nThanks!\n"
      },
      {
        "user": "liukangqi2015",
        "created_at": "2016-12-16T07:12:39Z",
        "body": "Hi @Wilson13 \r\nOn this subject, I have some ideas, this is my code\r\n```\r\nprivate Animatable mAnimatable;\r\nDraweeController controller = Fresco.newDraweeControllerBuilder()\r\n                .setUri(Uri.parse(url))\r\n                .setAutoPlayAnimations(false)\r\n                .setControllerListener(new BaseControllerListener<ImageInfo>(){\r\n                    @Override\r\n                    public void onFinalImageSet(String id, ImageInfo imageInfo, Animatable animatable) {\r\n                        if (animatable!=null){\r\n                            mAnimatable=animatable;\r\n                        }\r\n                    }\r\n                })\r\n                .build();\r\nsimpleDraweeView.setController(controller);\r\n```\r\nThen I use a button to control gif play or pause\r\n```\r\nbtn.setOnClickListener(new View.OnClickListener() {\r\n\r\n            @Override\r\n            public void onClick(View v) {\r\n                if (mAnimatable!=null){\r\n                    if (isStart){\r\n                        mAnimatable.start();\r\n                        isStart=false;\r\n                    }else {\r\n                        mAnimatable.stop();\r\n                        isStart=true;\r\n                    }\r\n\r\n                }\r\n            }\r\n        });\r\n```"
      },
      {
        "user": "oprisnik",
        "created_at": "2016-12-16T10:00:47Z",
        "body": "The issue with @liukangqi2015 's solution is that it doesn't pause but reset the animation. There is currently not a simple way to resume an ongoing animation without resetting. Our new animation architecture will support this though. We'll keep you updated when it's ready."
      },
      {
        "user": "liukangqi2015",
        "created_at": "2016-12-17T12:57:54Z",
        "body": "Looking forward to the update"
      },
      {
        "user": "Wilson13",
        "created_at": "2016-12-23T02:04:03Z",
        "body": "Hi @liukangqi2015, \r\n\r\n@oprisnik was absolutely correct, and that was the issue I was facing. I couldn't pause then resume from where the animation has temporary stopped. It could only be stopped and restarted. \r\n\r\n@oprisnik Looking forward to the update, thanks for the hard work.\r\n\r\n@liukangqi2015 Thanks for your effort though =)"
      },
      {
        "user": "liukangqi2015",
        "created_at": "2016-12-23T03:43:54Z",
        "body": "@Wilson13 ,sorry,on your question, I seem to understand the wrong.\r\n"
      },
      {
        "user": "rafaelekol",
        "created_at": "2017-01-18T05:10:28Z",
        "body": "@oprisnik  looking forward for new Animation architecture "
      },
      {
        "user": "razanbilwani",
        "created_at": "2017-04-04T15:51:02Z",
        "body": "@oprisnik is there a particular timeline for adding in the animation architecture? We're looking forward to it :smile: "
      },
      {
        "user": "oprisnik",
        "created_at": "2017-04-04T17:49:20Z",
        "body": "Sorry, there's no particular timeline but we'll keep you updated."
      },
      {
        "user": "zetbrush",
        "created_at": "2018-01-17T11:08:35Z",
        "body": "Hey @oprisnik, any update on this?"
      },
      {
        "user": "oprisnik",
        "created_at": "2018-01-18T11:44:36Z",
        "body": "The new architecture is out and I believe we recently made a change that should allow this to work. I'll check."
      },
      {
        "user": "jiansheliuxing",
        "created_at": "2018-04-30T07:32:17Z",
        "body": "Is there a better way to stop or restart the GIF?"
      },
      {
        "user": "KimiChiu",
        "created_at": "2018-11-07T16:10:36Z",
        "body": "Hi, Any progress on it? "
      },
      {
        "user": "oprisnik",
        "created_at": "2020-01-15T11:52:11Z",
        "body": "This has been fixed with 22f6426cf975a7f43ce9911895dede11e3eb0143, thanks to @yoavbeeri \r\n\r\nYou can just stop() and start() the animation now."
      }
    ]
  },
  {
    "number": 1527,
    "title": "Why react-native use fresco_0.11.0?",
    "created_at": "2016-11-03T10:32:12Z",
    "closed_at": "2017-07-10T15:25:25Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/facebook/fresco/issues/1527",
    "body": "Can't i replace to fresco_0.14.0？  Looking forward to your reply!!!!",
    "comments_url": "https://api.github.com/repos/facebook/fresco/issues/1527/comments",
    "author": "benzly",
    "comments": [
      {
        "user": "massimocarli",
        "created_at": "2016-11-04T20:53:23Z",
        "body": "Hi @benzly ,\nat the moment RN support only 0.11 because of the compatibility library version. Do you have any special feature of the 0.14?\nThanks\n"
      },
      {
        "user": "benzly",
        "created_at": "2016-11-07T01:57:12Z",
        "body": "Hi, @massimocarli \nNo special feature，only we need build fresco jar with fresco source.\nand i find it(fresco_0.14.0) to work with RN. \n"
      },
      {
        "user": "oprisnik",
        "created_at": "2017-07-10T15:25:25Z",
        "body": "React native is using a newer version now."
      }
    ]
  },
  {
    "number": 1514,
    "title": "How to judge this is a cache image in onFinalImageSet",
    "created_at": "2016-10-26T14:36:18Z",
    "closed_at": "2017-07-17T13:28:28Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/facebook/fresco/issues/1514",
    "body": "I was counting the image loading time-consuming, the need to distinguish whether the image is loaded from the cache (including memory cache and file cache). I found a callback in onFinalImageSet, but there is no parameter about that. Is there any way to do this?\nThanks!\n",
    "comments_url": "https://api.github.com/repos/facebook/fresco/issues/1514/comments",
    "author": "wstczlt",
    "comments": [
      {
        "user": "kirwan",
        "created_at": "2016-10-26T16:01:59Z",
        "body": "You might be able to use a `ProducerListener` and check for successful events from the cache producers. It involves checking Strings though.\n\nI've been wondering about a way to pass this kind of metadata back with the response but I don't expect any changes like that soon and for now I think what we have should work for you.\n"
      },
      {
        "user": "wstczlt",
        "created_at": "2016-10-27T03:36:55Z",
        "body": "Thanks for your reply, ProducerListener can resolve this problem but not very elegant, I think pass some metadata back with response is also essential.\n"
      },
      {
        "user": "kirwan",
        "created_at": "2016-10-27T13:44:54Z",
        "body": "If you'd like to propose something via a pull request (even if it's just a RFC) I'd very happily take a look.\n"
      },
      {
        "user": "wstczlt",
        "created_at": "2016-10-27T14:21:20Z",
        "body": "OK, thank you very much :)\n"
      },
      {
        "user": "kirwan",
        "created_at": "2017-07-17T13:28:28Z",
        "body": "There has been an update to `ProducerListener` which now identifies the ultimate producer which was reached. If this is one of the cache producers, you now know that cache was used to provide the image.\r\n\r\nI hope this helps your case."
      }
    ]
  },
  {
    "number": 1506,
    "title": "duplicate entry: android/support/v4/print/PrintHelper$PrintHelperStubImpl.class  fresco build error ，is anyone have this problem",
    "created_at": "2016-10-19T03:04:38Z",
    "closed_at": "2016-10-19T08:57:35Z",
    "labels": [
      "duplicate",
      "build",
      "question"
    ],
    "url": "https://github.com/facebook/fresco/issues/1506",
    "body": "Error:Execution failed for task ':app:transformClassesWithJarMergingForDebug'.\n\n> com.android.build.api.transform.TransformException: java.util.zip.ZipException: duplicate entry: android/support/v4/print/PrintHelper$PrintHelperStubImpl.class\n",
    "comments_url": "https://api.github.com/repos/facebook/fresco/issues/1506/comments",
    "author": "yuxingfafu",
    "comments": [
      {
        "user": "yuxingfafu",
        "created_at": "2016-10-19T03:05:32Z",
        "body": "version is 0.14.1\nthis is my config \n\n compile fileTree(dir: 'libs', include: ['*.jar'])\n    compile 'org.greenrobot:eventbus:3.0.0'//eventbus 事件总线 发布订阅\n    // compile 'com.android.support:support-v4:23.+'//support支持库\n    compile 'com.google.code.gson:gson:2.7'//gson解析\n    compile 'com.android.support:recyclerview-v7:23.+'//recyclerview\n    compile 'com.github.bumptech.glide:glide:3.7.0'//图片加载\n    compile 'in.srain.cube:ultra-ptr:1.0.11'//下拉刷新控件\n    compile project(':library')\n    compile 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.2.2'//RecyclerView 快速适配器\n    compile ('com.facebook.fresco:fresco:0.14.1'){\n        exclude group:'com.nineoldandroids'\n    }\n\n```\ncompile 'com.facebook.fresco:animated-gif:0.14.1'\n```\n"
      },
      {
        "user": "oprisnik",
        "created_at": "2016-10-19T08:57:35Z",
        "body": "You need to update your support library, see #1493 \n"
      }
    ]
  },
  {
    "number": 1494,
    "title": "Static code Analysis number",
    "created_at": "2016-10-07T18:35:25Z",
    "closed_at": "2016-10-12T09:49:41Z",
    "labels": [
      "needs-details",
      "question"
    ],
    "url": "https://github.com/facebook/fresco/issues/1494",
    "body": "Hi\nIf they are using Static Code Analysis, what is the tool. How many low, mid, high issues.\nAlso suggest the evidence for same.\n",
    "comments_url": "https://api.github.com/repos/facebook/fresco/issues/1494/comments",
    "author": "patientrx",
    "comments": [
      {
        "user": "oprisnik",
        "created_at": "2016-10-10T08:53:26Z",
        "body": "Hi! Can you give us more details what exactly what you mean by that? Static Code Analysis is a very wide topic, what are \"low, mid, high issues\"?\n"
      },
      {
        "user": "patientrx",
        "created_at": "2016-10-10T09:44:42Z",
        "body": "We are looking for the result of static code analysis(SCA) for fresco code. There are SCA tools available which help identify security issue in code/program - stating low , mid and high types  \nTools\nGoogle CodePro Analytix (Free)(one of my favourate tool), \nFindbugs. \nPMD. \nCheckstyle. \n"
      },
      {
        "user": "oprisnik",
        "created_at": "2016-10-12T09:49:41Z",
        "body": "Internally, we use infer for static analysis and also run a range of linters, and run tests for every commit (Circle CI). Unfortunately, I don't have any numbers for you.\n"
      }
    ]
  },
  {
    "number": 1485,
    "title": "prefetchToBitmapCache not support post process?",
    "created_at": "2016-09-29T10:00:08Z",
    "closed_at": "2016-09-29T17:59:50Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/facebook/fresco/issues/1485",
    "body": "``` java\nFresco.getImagePipeline().prefetchToBitmapCache(\n        ImageRequestBuilder.newBuilderWithSource(Uri.parse(url))\n                .setPostprocessor(new XXXPostprocessor())\n                .build(),\n        null);\n```\n\nXXXPostprocessor.process() not executed. \nChanging `prefetchToBitmapCache` to `fetchDecodedImage`, XXXPostprocessor.process() will be excuted!\n",
    "comments_url": "https://api.github.com/repos/facebook/fresco/issues/1485/comments",
    "author": "fengshenzhu",
    "comments": [
      {
        "user": "kirwan",
        "created_at": "2016-09-29T17:59:50Z",
        "body": "You're right. `prefetchToBitmapCache()` only takes the image as far up the pipeline as the main bitmap cache.\n\nPost-processing and caching the result of that comes later.\n\nPre-fetching before you need the image will give you the benefit of downloading the image and decoding into bitmap cache. Then calling `fetchDecodedImage()` will take the image from cache and run the post-processor.\n"
      }
    ]
  },
  {
    "number": 1464,
    "title": "how to get  http response header?",
    "created_at": "2016-09-09T14:06:24Z",
    "closed_at": "2016-09-14T15:30:46Z",
    "labels": [
      "enhancement",
      "question"
    ],
    "url": "https://github.com/facebook/fresco/issues/1464",
    "body": "in my case , some value store in http response header ,how to get it ?\n",
    "comments_url": "https://api.github.com/repos/facebook/fresco/issues/1464/comments",
    "author": "jyh149129",
    "comments": [
      {
        "user": "kirwan",
        "created_at": "2016-09-09T14:41:36Z",
        "body": "This has been asked before, for example #712.\n\nIt's not currently possible. Images aren't always retrieved from HTTP (for example local or cached images) so these wouldn't be available consistently anyway.\n\nYou would be able to extract the headers if you implemented your own `NetworkFetcher` however you would still need to find another way of passing back the values you want.\n"
      },
      {
        "user": "jyh149129",
        "created_at": "2016-09-14T15:30:46Z",
        "body": "fine，thanks\n"
      }
    ]
  },
  {
    "number": 1444,
    "title": "How is fresco \"disk cache strategy",
    "created_at": "2016-08-31T07:40:07Z",
    "closed_at": "2016-09-02T05:37:34Z",
    "labels": [
      "docs",
      "question"
    ],
    "url": "https://github.com/facebook/fresco/issues/1444",
    "body": "When the disk cache is full,then request will all request network?\n\nHave the relevant document to introduce it，thanks~\n",
    "comments_url": "https://api.github.com/repos/facebook/fresco/issues/1444/comments",
    "author": "lushan1314",
    "comments": [
      {
        "user": "aagnes-zz",
        "created_at": "2016-08-31T09:50:00Z",
        "body": "Fresco uses LRU logic of eviction in disk cache. You can find it in DefaultEntryEvictionComparatorSupplier.java.\n"
      },
      {
        "user": "lushan1314",
        "created_at": "2016-09-02T05:37:26Z",
        "body": "thank u\n"
      },
      {
        "user": "lushan1314",
        "created_at": "2016-09-02T05:50:09Z",
        "body": "Looked from the log of CDN and found the android images of network request value is much higher than expected。\n\nWant to consulting, memory leaks may cause this to happen?Do you have any Suggestions to optimize it！\n\nThank you very much！\n"
      }
    ]
  },
  {
    "number": 1412,
    "title": "how to clear the request queque",
    "created_at": "2016-08-12T09:39:16Z",
    "closed_at": "2017-07-10T15:57:56Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/facebook/fresco/issues/1412",
    "body": "hi,\nIn a particular case, only single thread is supported.\nIn the first activity, a lot of requests were sent.\nThen I start a second activity(and the first activity is not be finished),there're also some requests need to send in this activity,\nbut these request wouldn't be excuted until requests from the first activity are finished.my server is not fast enough,then i mush wait a long time.\nSo, can anybody tell me how to cancel a request in the queque, or how to clear the request queque.\nAny thoughts would be appreciated.\n",
    "comments_url": "https://api.github.com/repos/facebook/fresco/issues/1412/comments",
    "author": "54binge",
    "comments": [
      {
        "user": "massimocarli",
        "created_at": "2016-08-16T09:44:34Z",
        "body": "Hi @54binge,\nare you using Drawee or accessing the ImagePipeline directly?\nThanks\n"
      },
      {
        "user": "54binge",
        "created_at": "2016-08-17T03:23:07Z",
        "body": "Hi @massimocarli this is my code\n`ImageRequest request = ImageRequestBuilder.newBuilderWithSource(uri)\n                .setResizeOptions(new ResizeOptions(width, height))\n                .setAutoRotateEnabled(true)\n                .build();\n        AbstractDraweeController controller = Fresco.newDraweeControllerBuilder()\n                .setOldController(simpleDraweeView.getController())\n                .setImageRequest(request)\n                .build();\n        simpleDraweeView.setController(controller);`\n"
      },
      {
        "user": "massimocarli",
        "created_at": "2016-08-18T09:34:46Z",
        "body": "Hi @54binge,\nhave you tired to se the controller to null when you're finished? \n`simpleDraweeView.setController(null);`\n"
      }
    ]
  },
  {
    "number": 1389,
    "title": "Is it possible to turn off disk cache?",
    "created_at": "2016-07-29T16:12:40Z",
    "closed_at": "2017-06-09T14:06:13Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/facebook/fresco/issues/1389",
    "body": "I know it's a very specific feature, but we can't save anything on a disk because of security reason. So far, I found only methods for deleting the existing cache such as clearDiskCaches() and evictFromDiskCache(). \n\nHow to prevent to save anything on a disk?\n",
    "comments_url": "https://api.github.com/repos/facebook/fresco/issues/1389/comments",
    "author": "contrudar",
    "comments": [
      {
        "user": "lambdapioneer",
        "created_at": "2016-07-29T17:10:20Z",
        "body": "On the `ImageRequestBuilder` for the individual `ImageRequest`s you can call `disableDiskCache()`.\n\nAlternatively, you can create your own `nullFileCache` by extending `FileCache` and implement the methods s.t. they have no effect. You then inject it into the `ImagePipeline` using `ImagePipelineConfig#setFileCacheFactory`.\n"
      },
      {
        "user": "contrudar",
        "created_at": "2016-07-29T18:13:21Z",
        "body": "Can DiskCacheConfig.newBuilder(this).setMaxCacheSize(0) work?\n\nlike this\n\n```\n    Fresco.initialize(this, OkHttpImagePipelineConfigFactory.newBuilder(this, okHttpClient)\n            .setMainDiskCacheConfig(DiskCacheConfig.newBuilder(this).setMaxCacheSize(0).build()).build());\n```\n"
      },
      {
        "user": "erikandre",
        "created_at": "2017-06-09T14:06:13Z",
        "body": "@contrudar That should work, but using disableDiskCache() should be a better alternative."
      }
    ]
  },
  {
    "number": 1364,
    "title": "Stored in the cache",
    "created_at": "2016-07-15T02:25:30Z",
    "closed_at": "2016-07-21T09:00:32Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/facebook/fresco/issues/1364",
    "body": "Hi :D !\nI want to know the duration of cache storage fresco.\nMemorycache and Diskcache\n\nHow much for a long time a store?\n",
    "comments_url": "https://api.github.com/repos/facebook/fresco/issues/1364/comments",
    "author": "YoonKyoungTae",
    "comments": [
      {
        "user": "huangjunkun",
        "created_at": "2016-07-18T09:34:27Z",
        "body": "## Diskcache\n\n> com.facebook.cache.disk.DiskStorageCache#FUTURE_TIMESTAMP_THRESHOLD_MS\n> FUTURE_TIMESTAMP_THRESHOLD_MS = TimeUnit.HOURS.toMillis(2);\n>   /**\n> - If any file timestamp is in the future (beyond now + FUTURE_TIMESTAMP_THRESHOLD_MS), we will\n> - set its effective timestamp to 0 (the beginning of unix time), thus sending it to the head of\n> - the queue for eviction (entries with the lowest timestamps are evicted first). This is a\n> - safety check in case we get files that are written with a future timestamp.\n> - We are adding a small delta (this constant) to account for network time changes, timezone\n> - changes, etc.\n>   */\n\n## Memorycache\n\n> com.facebook.imagepipeline.cache.CountingMemoryCache\n> com.facebook.imagepipeline.cache.CountingLruMap\n\n## My Point Of View\n\nThe store durtion of Both Memorycache and Diskcache depend on calling submit new image request.\n\nMemorycache is evicted by LRU eviction strategy.\nDiskcache is evicted by Comparing cache's timestamp to FUTURE_TIMESTAMP_THRESHOLD_MS  .\n\nIf you don't submit new image request, not update the cache , and the  cahe has always existed.\n"
      },
      {
        "user": "kirwan",
        "created_at": "2016-07-21T09:00:32Z",
        "body": "Thanks @huangjunkun for your thorough answer. I'll close this issue as I think that answers it.\n\nI'll add that both memory and disk cache employ LRU eviction. The future timestamp check in disk cache is additional to cover scenarios where the device time changes and cached items now appear to have been cached in the future. These could otherwise be retained indefinitely while more recent items are evicted.\n"
      }
    ]
  },
  {
    "number": 1340,
    "title": "Why basepool use sparseArray  to manager bucket?",
    "created_at": "2016-07-05T12:03:25Z",
    "closed_at": "2016-08-25T13:36:29Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/facebook/fresco/issues/1340",
    "body": "SparseArray which keys is sorted,so if using sparseArray to manage object ,it  will result to  some little size object often first release. Why base pool use aparseArray?\n",
    "comments_url": "https://api.github.com/repos/facebook/fresco/issues/1340/comments",
    "author": "yangjianjun198",
    "comments": [
      {
        "user": "massimocarli",
        "created_at": "2016-07-07T12:15:39Z",
        "body": "Hi @yangjianjun198 \nsorry but the question is not very clear. What would you use instead if the key is an int?\nThankx\n"
      }
    ]
  },
  {
    "number": 2499,
    "title": "fbcore's proguard limit is too broad",
    "created_at": "2020-05-06T12:03:40Z",
    "closed_at": "2021-01-11T17:58:44Z",
    "labels": [
      "enhancement",
      "help wanted",
      "good first issue"
    ],
    "url": "https://github.com/facebook/fresco/issues/2499",
    "body": "### Description\r\n\r\nthe proguard configuration in 'fbcore-2.1.0.aar' includes a line that keeps all classes with a native method, which is not good. As we can't choose to shrink other classes with native method any more.\r\n\r\n` # Keep native methods\r\n -keepclassmembers class * {\r\n     native <methods>;\r\n }`\r\n\r\n### Reproduction\r\n\r\nany demo app implements fresco should be able to reproduce\r\n\r\n### Solution\r\n\r\nchange the proguard rule to be something like the following\r\n` # Keep native methods\r\n -keepclassmembers class com.facebook.** {\r\n     native <methods>;\r\n }`\r\n\r\n### Additional Information\r\n\r\n* Fresco version: 2.1.0\r\n* Platform version: android\r\n",
    "comments_url": "https://api.github.com/repos/facebook/fresco/issues/2499/comments",
    "author": "NormanOu",
    "comments": [
      {
        "user": "stale[bot]",
        "created_at": "2020-05-13T12:25:29Z",
        "body": "Hey there, it looks like there has been no activity on this issue recently. Has the issue been fixed, or does it still require the community's attention? This issue may be closed if no further activity occurs. You may also label this issue as \"bug\" or \"enhancement\" and I will leave it open. Thank you for your contributions.\n"
      },
      {
        "user": "oprisnik",
        "created_at": "2020-05-13T12:31:56Z",
        "body": "Thanks, this should be fixed. Pull requests are welcome! :)"
      }
    ]
  },
  {
    "number": 2472,
    "title": "upgrade giflib to 5.1.8+?",
    "created_at": "2020-03-01T02:25:23Z",
    "closed_at": "2020-03-10T10:40:35Z",
    "labels": [
      "enhancement",
      "help wanted",
      "good first issue"
    ],
    "url": "https://github.com/facebook/fresco/issues/2472",
    "body": "It looks like Fresco is using an old version of giflib, which may make it vulnerable to CVE-2019-15133. Is Fresco vulnerable to this? Should it be upgraded to use 5.1.8+?",
    "comments_url": "https://api.github.com/repos/facebook/fresco/issues/2472/comments",
    "author": "night",
    "comments": [
      {
        "user": "oprisnik",
        "created_at": "2020-03-01T20:04:04Z",
        "body": "Upgrading GifLib would be great! Please feel free to send a PR. This should be straightforward to do. Thanks!"
      },
      {
        "user": "oprisnik",
        "created_at": "2020-03-10T10:40:35Z",
        "body": "Done, thanks!"
      }
    ]
  },
  {
    "number": 2374,
    "title": "java.lang.Thread.parkFor$(Thread.java:2163)",
    "created_at": "2019-07-09T17:36:22Z",
    "closed_at": "2020-03-03T11:28:52Z",
    "labels": [
      "bug",
      "needs-details",
      "help wanted"
    ],
    "url": "https://github.com/facebook/fresco/issues/2374",
    "body": "\r\n### Description\r\nThis is an online bug that cannot be reproduced.\r\n\r\nMy stacktrace:\r\njava:\r\njava.lang.Thread.parkFor$(Thread.java:2163)\r\nsun.misc.Unsafe.park(Unsafe.java:358)\r\njava.util.concurrent.locks.LockSupport.park(LockSupport.java:190) java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2059)\r\njava.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:442)\r\njava.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1092)\r\njava.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1152)\r\njava.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)\r\ncom.facebook.imagepipeline.core.PriorityThreadFactory$1.run(PriorityThreadFactory.java:51)\r\n java.lang.Thread.run(Thread.java:784)\r\n\r\n\r\n### Additional Information\r\n\r\n* Fresco version: 1.13.0\r\n* Platform version: Android 9  level 28\r\n",
    "comments_url": "https://api.github.com/repos/facebook/fresco/issues/2374/comments",
    "author": "bmwhanm",
    "comments": [
      {
        "user": "stale[bot]",
        "created_at": "2019-07-16T18:05:48Z",
        "body": "Hey there, it looks like there has been no activity on this issue recently. Has the issue been fixed, or does it still require the community's attention? This issue may be closed if no further activity occurs. You may also label this issue as \"bug\" or \"enhancement\" and I will leave it open. Thank you for your contributions.\n"
      },
      {
        "user": "defHLT",
        "created_at": "2019-11-28T14:05:18Z",
        "body": "It's not clear from the stacktrace what's going on. Is it ANR?"
      },
      {
        "user": "oprisnik",
        "created_at": "2020-03-03T11:28:52Z",
        "body": "Closing due to inactivity."
      },
      {
        "user": "radityagumay",
        "created_at": "2021-03-19T11:16:11Z",
        "body": "@defHLT it's an ANR"
      }
    ]
  },
  {
    "number": 2351,
    "title": "no parameter `long paramsCheckIntervalMs`",
    "created_at": "2019-06-03T11:55:39Z",
    "closed_at": "2019-06-13T15:00:51Z",
    "labels": [
      "enhancement",
      "help wanted",
      "good first issue"
    ],
    "url": "https://github.com/facebook/fresco/issues/2351",
    "body": "### Description\r\n\r\nDefaultEncodedMemoryCacheParamsSupplier \r\n\r\nreturns\r\n```\r\nreturn new MemoryCacheParams(\r\n        maxCacheSize,\r\n        MAX_CACHE_ENTRIES,\r\n        maxCacheSize,\r\n        MAX_EVICTION_QUEUE_ENTRIES,\r\n        maxCacheEntrySize);\r\n```\r\n\r\nthere is no parameter `long paramsCheckIntervalMs`\r\n\r\n### Additional Information\r\n\r\n* Fresco version: V1.13.0\r\n* Platform version: sdk 28",
    "comments_url": "https://api.github.com/repos/facebook/fresco/issues/2351/comments",
    "author": "yumemi-yli",
    "comments": [
      {
        "user": "erikandre",
        "created_at": "2019-06-06T13:54:32Z",
        "body": "Hi @yumemi-yli \r\nThanks for submitting the bug report. It seems like a straight forward change, if you need this urgently I recommend contributing a pull request with an implementation. Thanks!"
      },
      {
        "user": "oprisnik",
        "created_at": "2019-06-12T09:28:35Z",
        "body": "This was a breaking change. I'll bring back the original constructor."
      },
      {
        "user": "oprisnik",
        "created_at": "2019-06-13T15:00:51Z",
        "body": "Fixed with deae4d34bcdbe392c77fb8e4529fcc0d3f51d699"
      }
    ]
  },
  {
    "number": 2241,
    "title": "\"Parent has no child drawable!\" on Nokia's old devices if scaleType is specified for failure drawable",
    "created_at": "2018-11-14T07:37:46Z",
    "closed_at": "2019-11-11T03:40:50Z",
    "labels": [
      "bug",
      "help wanted",
      "good first issue"
    ],
    "url": "https://github.com/facebook/fresco/issues/2241",
    "body": "### Description\r\n\r\nWe've got some strange crashes on old Nokia's devices on `setFailureImage(resourceId, scaleType)` method call:\r\n```\r\nNon-fatal Exception: java.lang.NullPointerException: Parent has no child drawable!\r\n       at com.facebook.common.internal.Preconditions.checkNotNull(Preconditions.java:226)\r\n       at com.facebook.drawee.generic.WrappingUtils.wrapChildWithScaleType(WrappingUtils.java:129)\r\n       at com.facebook.drawee.generic.GenericDraweeHierarchy.getScaleTypeDrawableAtIndex(GenericDraweeHierarchy.java:361)\r\n       at com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(GenericDraweeHierarchy.java:465)\r\n       at com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(GenericDraweeHierarchy.java:484)\r\n       at my.favorite.app.PhotoPreviewBinder.onBindViewHolder(PhotoPreviewBinder.java:37)\r\n       ...\r\n```\r\n\r\n### Reproduction\r\n\r\nI don't know how to reproduce this crash, because we don't have that device. But I can show the lines of code where crash is occurred and how we handle it:\r\n```\r\nSimpleDraweeView photo = findViewById(R.id.photo);\r\n\r\nImageRequest imageRequest = ImageRequestBuilder.newBuilderWithSource(Uri.parse(entry.url))\r\n\t.setResizeOptions(ResizeOptions.forSquareSize(200))\r\n\t.build();\r\nphoto.setImageRequest(imageRequest);\r\n\r\nfinal GenericDraweeHierarchy hierarchy = photo.getHierarchy();\r\ntry {\r\n\t// **Crash is here!**\r\n\thierarchy.setFailureImage(R.drawable.video_preview_stub, ScalingUtils.ScaleType.CENTER_CROP);\r\n} catch (Exception e) {\r\n\t// And no crash here\r\n\thierarchy.setFailureImage(R.drawable.video_preview_stub);\r\n\tExceptionHook.hook(e);\r\n}\r\n```\r\n\r\n### Additional Information\r\n\r\n* Fresco version: 1.11.0\r\n* Devices: Nokia_X (RM-980), Nokia_XL (RM-1030), NokiaX2DS (RM-1013)\r\n* Android version: Android 4.1.2 (API 16), Android 4.3 (API 18)\r\n* Arch: armv7l",
    "comments_url": "https://api.github.com/repos/facebook/fresco/issues/2241/comments",
    "author": "Kazemir",
    "comments": [
      {
        "user": "iadeelzafar",
        "created_at": "2019-11-10T19:26:30Z",
        "body": "@Kazemir is this issue still reproducible?\r\n\r\n If yes then @erikandre what do you think of the proposed solution in the PR description? Should I go further and implement this?"
      },
      {
        "user": "Kazemir",
        "created_at": "2019-11-11T03:40:50Z",
        "body": "It looks like bug was fixed in 2.0.0"
      },
      {
        "user": "YvesCheung",
        "created_at": "2020-11-06T06:30:58Z",
        "body": "```\r\njava.lang.NullPointerException: Parent has no child drawable!\r\n\tat com.facebook.common.internal.Preconditions.checkNotNull(Preconditions.java:231)\r\n\tat com.facebook.drawee.generic.WrappingUtils.wrapChildWithScaleType(WrappingUtils.java:126)\r\n\tat com.facebook.drawee.generic.GenericDraweeHierarchy.getScaleTypeDrawableAtIndex(GenericDraweeHierarchy.java:360)\r\n\tat com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(GenericDraweeHierarchy.java:460)\r\n\tat com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(GenericDraweeHierarchy.java:479)\r\n\tat ryxq.fos.b(PitayaSkillDetailFragment.kt:499)\r\n\tat ryxq.fos.b(PitayaSkillDetailFragment.kt:367)\r\n\tat ryxq.fos.a(PitayaSkillDetailFragment.kt:293)\r\n\tat ryxq.fot$c.a(PitayaSkillDetailPresenter.kt:138)\r\n\tat ryxq.fot$c.accept(PitayaSkillDetailPresenter.kt:61)\r\n\tat io.reactivex.internal.observers.ConsumerSingleObserver.a_(ConsumerSingleObserver.java:62)\r\n\tat io.reactivex.internal.operators.single.SingleObserveOn$ObserveOnSingleObserver.run(SingleObserveOn.java:81)\r\n\tat ryxq.gyn$b.run(HandlerScheduler.java:124)\r\n\tat android.os.Handler.handleCallback(Handler.java:742)\r\n\tat android.os.Handler.dispatchMessage(Handler.java:95)\r\n\tat android.os.Looper.loop(Looper.java:157)\r\n\tat android.app.ActivityThread.main(ActivityThread.java:5653)\r\n\tat java.lang.reflect.Method.invoke(Native Method)\r\n\tat com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:746)\r\n\tat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:636)\r\n```\r\n\r\nCode:\r\n```Kotlin\r\nval controllerListener = object: BaseControllerListener<ImageInfo>(){\r\n\r\n            override fun onFinalImageSet(id: String?, imageInfo: ImageInfo?, animatable: Animatable?) {\r\n                super.onFinalImageSet(id, imageInfo, animatable)\r\n                imageInfo?.let {\r\n                    //.....\r\n                        if (ih-height > radius || iw-width>radius) {\r\n                            mIvSkill?.hierarchy?.roundingParams = null\r\n                            mIvSkill?.hierarchy?.setBackgroundImage(resources?.getDrawable(R.drawable.shape_accompany_master_skill))\r\n                        } else {\r\n                            mIvSkill?.hierarchy?.roundingParams = RoundingParams.fromCornersRadius(6.dpToPx.toFloat())\r\n                        }\r\n                }\r\n            }\r\n}\r\nval controller = Fresco.newDraweeControllerBuilder()\r\n            .setControllerListener(controllerListener)\r\n            .setUri(url)\r\n            .build()\r\n\r\nmIvSkill?.hierarchy?.setPlaceholderImage(R.drawable.shape_bg_eee_radius_6)\r\n//Crash while run to this line!!!!!\r\nmIvSkill?.hierarchy?.setFailureImage(R.drawable.ic_skill_detail_license, ScalingUtils.ScaleType.FIT_XY)\r\nmIvSkill?.hierarchy?.setActualImageScaleType(ScalingUtils.ScaleType.FIT_CENTER)\r\nmIvSkill?.controller = controller\r\n```\r\n- Devices: Xiaomi MI NOTE LTE\r\n- Android Version: 6.0.1\r\n- Fresco Version: 2.1.0"
      }
    ]
  },
  {
    "number": 2122,
    "title": "PooledByteBuffer.read() doesn't return int.",
    "created_at": "2018-05-30T13:59:58Z",
    "closed_at": "2018-06-04T16:02:04Z",
    "labels": [
      "starter-task",
      "help wanted"
    ],
    "url": "https://github.com/facebook/fresco/issues/2122",
    "body": "### Description\r\n\r\nAccording to its javadoc, `com.facebook.common.memory.PooledByteBuffer#read(int, byte[], int, int)` should return int for number of bytes copied. However this method returns void.\r\n\r\n### Reproduction\r\n\r\nProblem in source code.\r\n\r\n### Solution\r\n\r\nChange `com.facebook.common.memory.PooledByteBuffer#read(int, byte[], int, int)` to make it return int, and its implementation com.facebook.imagepipeline.memory.NativePooledByteBuffer.\r\n\r\n### Additional Information\r\n\r\n* Fresco version: 1.8.1\r\n* Platform version: Not platform specific issue\r\n",
    "comments_url": "https://api.github.com/repos/facebook/fresco/issues/2122/comments",
    "author": "mariotaku",
    "comments": [
      {
        "user": "lambdapioneer",
        "created_at": "2018-05-30T14:08:36Z",
        "body": "That's right. Looks like a good starter-task as it is an easy to fix and test change (y)\r\n\r\nAlso feel free to send a PR yourself if this blocks you"
      },
      {
        "user": "mariotaku",
        "created_at": "2018-05-30T14:11:12Z",
        "body": "Ahh I must be too tired to forget to patch myself! Will make a PR now."
      },
      {
        "user": "lambdapioneer",
        "created_at": "2018-06-04T12:14:12Z",
        "body": "Looks good :) importing for further tests"
      },
      {
        "user": "lambdapioneer",
        "created_at": "2018-06-06T09:54:40Z",
        "body": "Thanks @mariotaku !"
      }
    ]
  },
  {
    "number": 2062,
    "title": "SoLoader breaks custom class loaders",
    "created_at": "2018-03-08T05:50:27Z",
    "closed_at": "2019-12-09T12:43:30Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/facebook/fresco/issues/2062",
    "body": "java.lang.RuntimeException:Unable to create application com.baijiahulian.tianxiao.App: java.lang.IllegalStateException: ClassLoader com.taobao.sophix.core.dex.a.a should be of type BaseDexClassLoader\r\n--\r\nandroid.app.ActivityThread.handleBindApplication(ActivityThread.java:6500)\r\n......\r\nCaused by:\r\njava.lang.IllegalStateException:ClassLoader com.taobao.sophix.core.dex.a.a should be of type BaseDexClassLoader\r\ncom.facebook.soloader.SoLoader$Api14Utils.getClassLoaderLdLoadLibrary(SourceFile:638)\r\ncom.facebook.soloader.SoLoader.initSoLoader(SourceFile:238)\r\ncom.facebook.soloader.SoLoader.initImpl(SourceFile:141)\r\ncom.facebook.soloader.SoLoader.init(SourceFile:120)\r\ncom.facebook.soloader.SoLoader.init(SourceFile:104)\r\n\r\n* Fresco version: 1.8.0\r\n* Platform version: Android >=7.0\r\n",
    "comments_url": "https://api.github.com/repos/facebook/fresco/issues/2062/comments",
    "author": "ChengCheng-Hello",
    "comments": [
      {
        "user": "erikandre",
        "created_at": "2018-03-13T16:12:18Z",
        "body": "Hi @ChengCheng-Hello \r\n\r\nI think the problem might be that you are also using some other library in your app which modifies how classes and .so files are loaded. \r\n\r\nMy guess is that com.taobao.sophix.core is connected to this.\r\n\r\n@oprisnik  - is it still possible to use SoLoaderShim instead of SoLoader? That might help here.\r\n\r\n"
      },
      {
        "user": "oprisnik",
        "created_at": "2018-03-15T20:31:54Z",
        "body": "No, SoLoader is the new default, but it should not interfere with this."
      },
      {
        "user": "erikandre",
        "created_at": "2018-03-19T16:47:32Z",
        "body": "@oprisnik , it seems like SoLoader assumes that the class loader extends BaseDexClassLoader though. So if you're injecting a different class loader (I guess this is the case here), it would break. "
      },
      {
        "user": "oprisnik",
        "created_at": "2018-05-23T12:42:22Z",
        "body": "As @erikandre mentioned, the issue is likely your custom class loader. It should extend BaseDexClassLoader."
      },
      {
        "user": "xylitolhub",
        "created_at": "2018-06-10T04:06:08Z",
        "body": "@oprisnik @erikandre \r\nCould fresco not break down when class loader is not instance of BaseDexClassLoader? \r\nAnd I think it should not force user's custom classloader to be an BaseDexClassLoader, I just want the picture loading function of fresco.\r\nIt could has **downgraded to use system default way** to load .so file in this case. "
      },
      {
        "user": "parcool",
        "created_at": "2018-07-16T07:19:14Z",
        "body": "how to fix this bug? i got this error and i don't know how to do"
      },
      {
        "user": "krottv",
        "created_at": "2018-07-20T08:55:14Z",
        "body": "My opinion that adding SoLoader as default wasn't a good choice. I use ReLinker for my project and I don't need SoLoader."
      },
      {
        "user": "parcool",
        "created_at": "2018-07-20T09:24:59Z",
        "body": "@krottv  SoLoader named sophix what is a hot-fix library and it must be the base application,it use annotation to add my application(```@SophixEntry(MyRealApplication.class)```).i want to add this two libs(fresco and sophix),is there any workaround?"
      },
      {
        "user": "oprisnik",
        "created_at": "2019-08-21T15:24:01Z",
        "body": "We're bringing back a new native loader interface (as part of SoLoader itself) so that you can use whatever you want in the future."
      },
      {
        "user": "oprisnik",
        "created_at": "2019-12-09T12:43:30Z",
        "body": "This has been introduced now with version 2.1.0"
      },
      {
        "user": "oprisnik",
        "created_at": "2019-12-09T12:44:18Z",
        "body": "You can use `NativeLoader.init(....)` before Fresco is initialized to use any native loader and you can exclude SoLoader from your Gradle dependencies when Fresco is loaded:\r\n\r\n```\r\ndependencies {\r\n  // your app's other dependencies\r\n  implementation('com.facebook.fresco:fresco:2.1.0') {\r\n    exclude group: 'com.facebook.soloader', module: 'soloader'\r\n  }\r\n}\r\n```"
      }
    ]
  },
  {
    "number": 2033,
    "title": "FATAL EXCEPTION: JavaBridge  java.lang.IllegalStateException",
    "created_at": "2018-01-24T12:03:12Z",
    "closed_at": "2018-01-26T03:14:21Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/facebook/fresco/issues/2033",
    "body": "### Description\r\n\r\nWe are trying to display the array of images gotten from a remote HTML page in a Webview, the HTML with a Javascript to return the index of image clicked and the array of image URLs; however it caused the exception:\r\n\r\nFull Exception:\r\nFATAL EXCEPTION: JavaBridge\r\n                                                                    Process: net.netrogen.hkmlapp, PID: 7195\r\n                                                                    java.lang.IllegalStateException\r\n                                                                        at com.facebook.common.internal.Preconditions.checkState(Preconditions.java:158)\r\n                                                                        at com.facebook.drawee.components.DeferredReleaser.ensureOnUiThread(DeferredReleaser.java:101)\r\n                                                                        at com.facebook.drawee.components.DeferredReleaser.cancelDeferredRelease(DeferredReleaser.java:96)\r\n                                                                        at com.facebook.drawee.controller.AbstractDraweeController.onAttach(AbstractDraweeController.java:357)\r\n                                                                        at com.facebook.drawee.view.DraweeHolder.attachController(DraweeHolder.java:264)\r\n                                                                        at com.facebook.drawee.view.DraweeHolder.setController(DraweeHolder.java:202)\r\n                                                                        at com.facebook.drawee.view.DraweeView.setController(DraweeView.java:122)\r\n                                                                        at com.stfalcon.frescoimageviewer.ImageViewerAdapter$ImageViewHolder.setController(ImageViewerAdapter.java:152)\r\n                                                                        at com.stfalcon.frescoimageviewer.ImageViewerAdapter$ImageViewHolder.bind(ImageViewerAdapter.java:122)\r\n                                                                        at com.stfalcon.frescoimageviewer.ImageViewerAdapter.onBindViewHolder(ImageViewerAdapter.java:62)\r\n                                                                        at com.stfalcon.frescoimageviewer.ImageViewerAdapter.onBindViewHolder(ImageViewerAdapter.java:27)\r\n                                                                        at com.stfalcon.frescoimageviewer.adapter.RecyclingPagerAdapter.instantiateItem(RecyclingPagerAdapter.java:79)\r\n                                                                        at android.support.v4.view.ViewPager.addNewItem(ViewPager.java:1002)\r\n                                                                        at android.support.v4.view.ViewPager.populate(ViewPager.java:1150)\r\n                                                                        at android.support.v4.view.ViewPager.populate(ViewPager.java:1084)\r\n                                                                        at android.support.v4.view.ViewPager.onMeasure(ViewPager.java:1614)\r\n                                                                        at android.view.View.measure(View.java:18788)\r\n                                                                        at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:5951)\r\n                                                                        at android.widget.FrameLayout.onMeasure(FrameLayout.java:194)\r\n                                                                        at android.view.View.measure(View.java:18788)\r\n                                                                        at android.widget.RelativeLayout.measureChildHorizontal(RelativeLayout.java:715)\r\n                                                                        at android.widget.RelativeLayout.onMeasure(RelativeLayout.java:461)\r\n                                                                        at android.view.View.measure(View.java:18788)\r\n                                                                        at android.widget.RelativeLayout.measureChildHorizontal(RelativeLayout.java:715)\r\n                                                                        at android.widget.RelativeLayout.onMeasure(RelativeLayout.java:461)\r\n                                                                        at android.view.View.measure(View.java:18788)\r\n                                                                        at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:5951)\r\n                                                                        at android.widget.FrameLayout.onMeasure(FrameLayout.java:194)\r\n                                                                        at android.view.View.measure(View.java:18788)\r\n                                                                        at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:5951)\r\n                                                                        at android.widget.FrameLayout.onMeasure(FrameLayout.java:194)\r\n                                                                        at android.view.View.measure(View.java:18788)\r\n                                                                        at android.support.v7.widget.AlertDialogLayout.tryOnMeasure(AlertDialogLayout.java:133)\r\n                                                                        at android.support.v7.widget.AlertDialogLayout.onMeasure(AlertDialogLayout.java:63)\r\n                                                                        at android.view.View.measure(View.java:18788)\r\n                                                                        at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:5951)\r\n                                                                        at android.widget.FrameLayout.onMeasure(FrameLayout.java:194)\r\n                                                                        at android.support.v7.widget.ContentFrameLayout.onMeasure(ContentFrameLayout.java:139)\r\n                                                                        at android.view.View.measure(View.java:18788)\r\n                                                                        at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:5951)\r\n                                                                        at android.widget.LinearLayout.measureChildBeforeLayout(LinearLayout.java:1465)\r\n                                                                        at android.widget.LinearLayout.measureVertical(LinearLayout.java:748)\r\n                                                                        at android.widget.LinearLayout.onMeasure(LinearLayout.java:630)\r\n                                                                        at android.view.View.measure(View.java:18788)\r\n                                                                        at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:5951)\r\n                                                                        at android.widget.FrameLayout.onMeasure(FrameLayout.java:194)\r\n                                                                        at android.view.View.measure(View.java:18788)\r\n                                                                        at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:5951)\r\n                                                                        at android.widget.LinearLayout.measureChildBeforeLayout(LinearLayout.java:1465)\r\n                                                                        at android.widget.LinearLayout.measureVertical(LinearLayout.java:748)\r\n                                                                        at android.widget.LinearLayout.onMeasure(LinearLayout.java:630)\r\n                                                                        at android.view.View.measure(View.java:18788)\r\n                                                                        at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:5951)\r\n                                                                        at android.widget.FrameLayout.onMeasure(FrameLayout.java:194)\r\n                                                                    \tat com.android.internal.policy.PhoneWindow$DecorView.onMeasure(Phone\r\n\r\n\r\n### Reproduction\r\nthis call reproduce the Exception (checked that the idx and urls parameters are properly passed from the javascript)\r\n\r\nnew ImageViewer.Builder(mContext, urls)\r\n                        .setStartPosition(idx)\r\n                        .show();\r\n\r\n### Solution\r\ndon't know how to fix\r\n\r\n### Additional Information\r\n\r\n* Fresco version: 1.8.0\r\n* Platform version: Android 6.0 (don't know whether its specific to this version)\r\n* the creation of the CustomJavascriptInterface is inside a class that extends AsyncTask<MainActivity, Integer, Boolean> which is to do some (async) download of external javascript before inserting it into the webpage of the Webview\r\n",
    "comments_url": "https://api.github.com/repos/facebook/fresco/issues/2033/comments",
    "author": "richso",
    "comments": [
      {
        "user": "dmitry-voronkevich",
        "created_at": "2018-01-24T15:54:22Z",
        "body": "@richso, Looks like you are trying to update ViewPager model outside of main thread. \r\nI can't see this from your stack trace for sure, but suspect this from exception.\r\nIt is likely that you fix this by moving your code which updates model to AsyncTask.onPostExecute()"
      },
      {
        "user": "richso",
        "created_at": "2018-01-26T03:14:21Z",
        "body": "thanks @dmitry-voronkevich, I just fixed the problem by moving the logic that update the ViewPager to run in the UI Thread like this:\r\n```\r\nMainActivity.this.runOnUiThread(new Runnable() {\r\n\r\n                    @Override\r\n                    public void run() {\r\n                        new ImageViewer.Builder(mContext, urls)\r\n                                .setCustomDraweeHierarchyBuilder(hierarchyBuilder)\r\n                                .setStartPosition(idx).show();\r\n                    }\r\n});\r\n```"
      }
    ]
  },
  {
    "number": 1942,
    "title": "Feature Request: Control memory cache per request",
    "created_at": "2017-10-19T12:27:48Z",
    "closed_at": "2018-07-13T11:32:58Z",
    "labels": [
      "enhancement",
      "help wanted",
      "good first issue"
    ],
    "url": "https://github.com/facebook/fresco/issues/1942",
    "body": "### Description\r\n\r\nI would like to control memory cache per request. Sometimes I need it and sometimes I don't.\r\nBy analogy how it is done with disk cache:\r\n\r\n`ImageRequest request = ImageRequestBuilder\r\n                                .newBuilderWithSource(path)\r\n                                .disableDiskCache()\r\n                                .disableMemoryCache() //this is how it should be done.\r\n                                .build();`\r\n",
    "comments_url": "https://api.github.com/repos/facebook/fresco/issues/1942/comments",
    "author": "krottv",
    "comments": [
      {
        "user": "erikandre",
        "created_at": "2017-10-23T10:14:35Z",
        "body": "Hi @krottv \r\n\r\nThat sounds reasonable. You are more than welcome to implement it in a similar way to how it is handled for the disk cache, and then submit a pull request."
      }
    ]
  },
  {
    "number": 921,
    "title": "Add \"Tap to download\" support",
    "created_at": "2016-01-16T13:11:50Z",
    "closed_at": "2018-01-16T13:19:32Z",
    "labels": [
      "enhancement",
      "help wanted"
    ],
    "url": "https://github.com/facebook/fresco/issues/921",
    "body": "Is there a \"tap to download\" feature that is similar to the \"tap to retry\"?\n\nUse case: some users might not want to download all images automatically and want to select which images to download. Also, some users might be on data and do not wish to download large images automatically, say 5MB and above.\n",
    "comments_url": "https://api.github.com/repos/facebook/fresco/issues/921/comments",
    "author": "leeyikjiun",
    "comments": [
      {
        "user": "balazsbalazs",
        "created_at": "2016-01-20T16:57:39Z",
        "body": "We're currently not supporting this functionality but you can easily do this on top of Fresco.\n\nI think it's a good idea so we're going to add it to our things to do/consider.\n"
      },
      {
        "user": "oprisnik",
        "created_at": "2018-01-16T13:19:32Z",
        "body": "This can easily be achieved on top of Fresco. Feel free to send a pull request!"
      }
    ]
  },
  {
    "number": 661,
    "title": "Detect Redirect Image",
    "created_at": "2015-10-16T16:11:31Z",
    "closed_at": "2018-01-16T18:17:14Z",
    "labels": [
      "enhancement",
      "help wanted"
    ],
    "url": "https://github.com/facebook/fresco/issues/661",
    "body": "Hi, \n\nUsing Fresco can I detect whether an image has come from a redirected URL? \n\neg, I request www.example.com/images/a_cat.jpg and it returns (through redirect) www.example.com/images/no_such_image.jpg\n\nOne possible solution would be to compare the URL I sent and the one in the returned header. Is there a way to do this?\n\nThanks!\n",
    "comments_url": "https://api.github.com/repos/facebook/fresco/issues/661/comments",
    "author": "snoopgroggygrog",
    "comments": [
      {
        "user": "michalgr",
        "created_at": "2015-10-19T13:57:32Z",
        "body": "There is not API for that. Can you share more details about your use case ? What do you want to do ? Prevent redirections ? Collect some stats ?\n"
      },
      {
        "user": "snoopgroggygrog",
        "created_at": "2015-10-19T15:01:06Z",
        "body": "In my particular case, I want to know know when a redirection has taken place so I can replace the image (from the redirected URL) with a different one. \n\nA more general case might be that when images from URLs A, B, and C are all loaded from a redirected URL D, they are all cached separately, even though they came from the same source (D). \n\nAt the very least, being able to grab the original URL and the actual URL (the one that the network connection was redirected to), when an image loads would be useful for a variety of cases. \n"
      },
      {
        "user": "kirwan",
        "created_at": "2016-02-17T16:08:43Z",
        "body": "This is a useful idea but not something we are currently prioritising internally. If you'd like to send a pull request, that would be brilliant.\n"
      },
      {
        "user": "erikandre",
        "created_at": "2018-01-16T18:17:14Z",
        "body": "Closing since this issue is not prioritized to be implemented in the foreseeable future.\r\nIf this is a feature that you need, please consider contributing a pull request to Fresco!"
      }
    ]
  },
  {
    "number": 480,
    "title": "First frame of animated GIF as placeholder image?",
    "created_at": "2015-07-22T17:43:43Z",
    "closed_at": "2018-01-16T16:58:29Z",
    "labels": [
      "enhancement",
      "help wanted"
    ],
    "url": "https://github.com/facebook/fresco/issues/480",
    "body": "Is there a way to use the first frame of an animated GIF as the placeholder image for a view?  This would ease the visual transition when loading (and reloading) animated GIFs.\n\nIf not, I would love to see this added as a feature!\n",
    "comments_url": "https://api.github.com/repos/facebook/fresco/issues/480/comments",
    "author": "ewills",
    "comments": [
      {
        "user": "IanChilds",
        "created_at": "2015-07-23T16:29:31Z",
        "body": "I'm afraid this isn't possible at the moment - we'll see if there's a lot of demand for this feature. \n"
      },
      {
        "user": "ewills",
        "created_at": "2015-07-23T16:49:06Z",
        "body": "Great, thanks!\n"
      },
      {
        "user": "Eagles2F",
        "created_at": "2015-09-03T00:28:34Z",
        "body": "It would be very nice to have this feature\n"
      },
      {
        "user": "PaulProject",
        "created_at": "2016-01-26T19:04:08Z",
        "body": "+1\n"
      },
      {
        "user": "jhwing",
        "created_at": "2016-06-27T13:33:24Z",
        "body": "+1\n"
      },
      {
        "user": "dmitrychistyakov",
        "created_at": "2016-08-12T08:51:54Z",
        "body": "In case of showing cached gif, as a temporary workaround you can save first gif frame and then use it as lowresImage while huge gif is loading from disk\n\n```\n@Override\n        public void onFinalImageSet(String id, ImageInfo imageInfo, Animatable animatable) {\n            if (imageInfo instanceof CloseableAnimatedImage) {\n                GifImage gif = (GifImage) imageInfo.getImageResult().getImage();\n                if (gif != null) {\n                    Bitmap bitmap = Bitmap.createBitmap(imageInfo.getWidth(), imageInfo.getHeight(), Bitmap.Config.ARGB_8888);\n                    gif.getFrame(0).renderFrame(imageInfo.getWidth(),  imageInfo.getHeight(), bitmap);\n                    //save bitmap in your own cache\n                    bitmap.recycle();\n                }\n            }\n}\n```\n"
      },
      {
        "user": "ramilushev",
        "created_at": "2016-09-15T14:26:36Z",
        "body": "+1\n"
      },
      {
        "user": "kimthangatm",
        "created_at": "2016-09-22T09:12:48Z",
        "body": "+1\n"
      },
      {
        "user": "odaeagle",
        "created_at": "2016-10-12T20:54:24Z",
        "body": "- 1\n"
      },
      {
        "user": "biwoodfengs",
        "created_at": "2016-11-21T12:26:06Z",
        "body": "+1"
      },
      {
        "user": "tamara-bain",
        "created_at": "2016-11-22T16:50:35Z",
        "body": "+1"
      },
      {
        "user": "kimthangatm",
        "created_at": "2016-11-23T13:39:20Z",
        "body": "+1"
      },
      {
        "user": "lazybios",
        "created_at": "2016-12-27T01:40:15Z",
        "body": "+1"
      },
      {
        "user": "yshubin",
        "created_at": "2017-01-17T12:14:50Z",
        "body": "+1"
      },
      {
        "user": "rafaelekol",
        "created_at": "2017-01-18T05:05:40Z",
        "body": "+1"
      },
      {
        "user": "namchuai",
        "created_at": "2017-02-24T08:05:23Z",
        "body": "Still waiting for this feature!\r\n+1 "
      },
      {
        "user": "stanmots",
        "created_at": "2017-04-11T15:40:44Z",
        "body": "+1"
      },
      {
        "user": "lambdapioneer",
        "created_at": "2017-04-12T12:40:39Z",
        "body": "I'm afraid that I have no update on this. However, we are always welcoming pull-requests that add support for this in a maintainable way :) @oprisnik is working on a new architecture for animations that hopefully make support for this easier "
      },
      {
        "user": "jjding1986",
        "created_at": "2017-08-30T01:57:12Z",
        "body": "+1"
      },
      {
        "user": "qinhehu",
        "created_at": "2017-09-21T09:58:50Z",
        "body": "+1"
      },
      {
        "user": "dbof10",
        "created_at": "2017-11-26T15:39:55Z",
        "body": "+1"
      },
      {
        "user": "foghina",
        "created_at": "2018-01-16T16:58:29Z",
        "body": "We don't have a use case for this so we're probably not going to work on it internally. However, I think the use case is valid and it would be a good feature to have, so we would still appreciate a PR for this, even though I'm closing the issue now."
      },
      {
        "user": "daixiansen",
        "created_at": "2019-09-24T03:51:29Z",
        "body": "+1"
      },
      {
        "user": "daixiansen",
        "created_at": "2019-09-24T03:51:57Z",
        "body": "Is this problem solved now?"
      },
      {
        "user": "maidou0215",
        "created_at": "2020-01-07T12:12:55Z",
        "body": "+1"
      },
      {
        "user": "Lizz0y",
        "created_at": "2020-09-17T11:55:02Z",
        "body": "+1"
      }
    ]
  }
]