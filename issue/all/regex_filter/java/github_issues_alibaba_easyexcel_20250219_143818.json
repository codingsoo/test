[
  {
    "number": 3736,
    "title": "@HeadFontStyle和@ContentFontStyle 继承无法生效",
    "created_at": "2024-03-20T10:33:20Z",
    "closed_at": "2024-05-06T01:19:30Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3736",
    "body": "# 触发场景描述\r\n通过自定义注解@ExcelDefaultStyle 继承@HeadFontStyle、@ContentFontStyle、@HeadStyle，只有@HeadStyle生效而@HeadFontStyle、@ContentFontStyle不生效，只能加在具体的类上才能实现修改字体大小\r\n# 触发Bug的代码\r\n```java\r\n@HeadStyle(fillPatternType = FillPatternTypeEnum.SOLID_FOREGROUND, fillForegroundColor = 22, borderBottom = BorderStyleEnum.THIN, borderLeft = BorderStyleEnum.\r\n    THIN, borderRight = BorderStyleEnum.THIN, borderTop = BorderStyleEnum.THIN)\r\n@HeadFontStyle(fontHeightInPoints = 11, fontName = \"宋体\")\r\n@ContentFontStyle(fontHeightInPoints = 10, fontName = \"宋体\")\r\n@Target({ElementType.TYPE_USE, ElementType.FIELD})\r\n@Retention(RetentionPolicy.RUNTIME)\r\npublic @interface ExcelDefaultStyle {\r\n\r\n}\r\n@Data\r\n@ExcelDefaultStyle\r\npublic class JurisdictionImportExcel {\r\n \r\n    @ExcelProperty(value = \"测试1\", order = 1)\r\n    private String businessCode;\r\n\r\n    @ExcelProperty(value = \"测试2\", order = 2)\r\n    private String businessName;\r\n\r\n    @ExcelProperty(value = \"测试3\", order = 3)\r\n    private String archiveCode;\r\n \r\n    @ExcelProperty(value = \"测试4\", order = 4)\r\n    private String archiveName;\r\n\r\n    @ExcelProperty(value = \"测试5\", order = 5)\r\n    private String currentAchvsType;\r\n\r\n    @ExcelProperty(value = \"测试6\", order = 6)\r\n    private String branchDb;\r\n}\r\n\r\n```\r\n# 提示的异常或者没有达到的效果\r\n大家尽量把问题一次性描述清楚，然后贴上全部异常，这样方便把问题一次性解决掉。\r\n至少大家要符合一个原则就是，能让其他人复现出这个问题，如果无法复现，肯定无法解决。\r\n\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3736/comments",
    "author": "w1010602190",
    "comments": [
      {
        "user": "jieyangxchen",
        "created_at": "2024-03-25T07:41:56Z",
        "body": "## 复现\r\n我这边试了下，@headstyle也没生效呀，就是默认的。\r\n## 回答\r\n应该是目前不支持自定义注解解析\r\n## 建议\r\n1. 个人建议可以通过自定义HorizontalCellStyleStrategy的方式注入你的DefaultStyle，\r\n2. 还有下次提问题的时候，麻烦提供下版本号和开发环境。\r\n## 结果\r\n以上，没有其他问题的话我就关闭啦"
      },
      {
        "user": "jieyangxchen",
        "created_at": "2024-05-06T01:19:30Z",
        "body": "不知道您是否还存在问题？我们先暂时关闭这个问题，如果还存在问题请重新Reopen这个issue。"
      }
    ]
  },
  {
    "number": 3330,
    "title": "mac使用chrome浏览器下载得到的是xlw格式",
    "created_at": "2023-07-12T12:02:41Z",
    "closed_at": "2023-07-21T10:19:32Z",
    "labels": [
      "help wanted",
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3330",
    "body": "mac chrome浏览器下载excel，格式为xlw\r\n但是用safari浏览器，以及在windows电脑chrome浏览器 下载得到的是xls格式\r\n如下为在代码中添加的格式：\r\n```xml\r\n<dependency>\r\n        <groupId>com.alibaba</groupId>\r\n        <artifactId>easyexcel</artifactId>\r\n        <version>3.3.2</version>\r\n</dependency>\r\n```\r\n```java\r\n// 文件名\r\nString exportFileName = \"xxx\";\r\nresponse.setContentType(\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\");\r\nresponse.setCharacterEncoding(\"utf-8\");\r\n// 这里URLEncoder.encode可以防止中文乱码\r\nString fileName = URLEncoder.encode(exportFileName, \"UTF-8\").replaceAll(\"\\\\+\", \"%20\");\r\nresponse.setHeader(\"Content-Disposition\", \"attachment;filename*=utf-8''\" + fileName + \".xlsx\");\r\nresponse.setHeader(\"Access-Control-Expose-Headers\", \"Content-Disposition\");",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3330/comments",
    "author": "Infiniture",
    "comments": [
      {
        "user": "gongxuanzhang",
        "created_at": "2023-07-14T10:18:22Z",
        "body": "如果导出到本地没问题 检查web服务"
      }
    ]
  },
  {
    "number": 3318,
    "title": "easyexcel 2.2.10版本forceNewRow(Boolean.TRUE)覆盖原有数据",
    "created_at": "2023-07-08T03:24:38Z",
    "closed_at": "2024-07-31T01:18:21Z",
    "labels": [
      "help wanted",
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3318",
    "body": "public static void main(String[] args) throws Exception {\r\n        // 模板注意 用{} 来表示你要用的变量 如果本来就有\"{\",\"}\" 特殊字符 用\"\\{\",\"\\}\"代替\r\n        String templateFile = \"/Users/super_song/Downloads/IntlContractTemplate.xlsx\";\r\n        String targetFileName = \"/Users/super_song/Downloads/testNew.xlsx\";\r\n        // 创建一个工作簿对象\r\n        ExcelWriter workBook = EasyExcel.write(targetFileName).withTemplate(templateFile).build();\r\n        // 创建工作表对象\r\n        WriteSheet sheet = EasyExcel.writerSheet().build();\r\n        FillConfig fillConfig = FillConfig.builder().forceNewRow(Boolean.TRUE).build();\r\n        // 准备数据\r\n        List<FillData> students = initFillData();\r\n        // 多组数据填充\r\n        workBook.fill(students, fillConfig, sheet);\r\n        // 关闭流 ！！！\r\n        workBook.finish();\r\n    }\r\n我的Excel主要分成三部分，头部是固定的内容，中间是动态插入数据的区域，底部是固定的内容。三部分都存在样式。\r\n现在遇到的问题是我能成功插入数据，但是插入的数据会破坏底部的样式已经会覆盖底部的内容。\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3318/comments",
    "author": "superzhangquansong",
    "comments": [
      {
        "user": "frankggyy",
        "created_at": "2023-07-18T09:52:25Z",
        "body": "FillConfig需要设置`direction = WriteDirectionEnum.VERTICAL`，`forceNewRow(Boolean.TRUE)`才能生效。\r\n```java\r\nFillConfig fillConfig = FillConfig.builder()\r\n    .setDirection(WriteDirectionEnum.VERTICAL)\r\n    .forceNewRow(Boolean.TRUE)\r\n    .build()\r\n\r\n// or\r\n// FillConfig fillConfig = FillConfig.builder()\r\n//    .forceNewRow(Boolean.TRUE)\r\n//    .build()\r\n//    .init()\r\n```"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2024-07-19T06:18:33Z",
        "body": "你好，我们发现此Issue已经超过三个月没有活动了，为了更好的帮助您解决问题，我们将在两周后关闭此Issue，如果您仍然有问题，请在两周内内回复此Issue，谢谢！如果您已经解决或者不需要帮助，请忽略此消息。"
      }
    ]
  },
  {
    "number": 3234,
    "title": "csv 读取丢行 bug",
    "created_at": "2023-05-30T10:37:23Z",
    "closed_at": "2023-05-31T07:18:05Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3234",
    "body": "CSV 读取丢行 bug\r\nCSV内容例如：\r\nTitle,Content\r\nAAA,\"bb,cc\"\r\nJa_aL,\"a,b,c\"\r\n这样带引号与逗号的数据会出现读取不到",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3234/comments",
    "author": "Air-Cooled",
    "comments": [
      {
        "user": "DaZuiZui",
        "created_at": "2023-05-30T15:30:43Z",
        "body": "Hello, I have checked your requirements and found no loopholes in the system\r\n\r\n**my cvs content**\r\n\r\n~~~csv\r\nTitle, Content\r\nAAA,\"bb,cc\"\r\nJa_aL,\"a,b,c\"\r\n~~~\r\n\r\n**My test code**\r\n\r\n~~~java\r\n     public static void main(String[] args) {\r\n         String filePath = \"/Users/yangyida/Documents/Untitled.csv\"; \r\n\r\n         AnalysisEventListener<Map<Integer, String>> listener = new AnalysisEventListener<Map<Integer, String>>() {\r\n             List<Map<Integer, String>> data = new ArrayList<>();\r\n\r\n             @Override\r\n             public void invoke(Map<Integer, String> rowData, AnalysisContext context) {\r\n                 data. add(rowData);\r\n             }\r\n\r\n             @Override\r\n             public void doAfterAllAnalysed(AnalysisContext context) {\r\n                 for (Map<Integer, String> rowData : data) {\r\n                     List<String> row = new ArrayList<>(rowData. values());\r\n                     System.out.println(row);\r\n                 }\r\n             }\r\n         };\r\n\r\n         // read CSV file\r\n         EasyExcel.read(filePath, listener).sheet().doRead();\r\n     }\r\n~~~\r\n\r\n**My read results**\r\n\r\n~~~output\r\n[AAA, bb, cc]\r\n[Ja_aL, a, b, c]\r\n~~~\r\n\r\nwish you a happy life"
      },
      {
        "user": "DaZuiZui",
        "created_at": "2023-05-30T15:31:39Z",
        "body": "您好我对您的需求进行了一些查看，没有发现系统存在漏洞\r\n\r\n**我的cvs内容**\r\n\r\n~~~csv\r\nTitle,Content\r\nAAA,\"bb,cc\"\r\nJa_aL,\"a,b,c\"\r\n~~~\r\n\r\n**我的测试代码**\r\n\r\n~~~java\r\n    public static void main(String[] args) {\r\n        String filePath = \"/Users/yangyida/Documents/Untitled.csv\";\r\n        AnalysisEventListener<Map<Integer, String>> listener = new AnalysisEventListener<Map<Integer, String>>() {\r\n            List<Map<Integer, String>> data = new ArrayList<>();\r\n\r\n            @Override\r\n            public void invoke(Map<Integer, String> rowData, AnalysisContext context) {\r\n                data.add(rowData);\r\n            }\r\n\r\n            @Override\r\n            public void doAfterAllAnalysed(AnalysisContext context) {\r\n                for (Map<Integer, String> rowData : data) {\r\n                    List<String> row = new ArrayList<>(rowData.values());\r\n                    System.out.println(row);\r\n                }\r\n            }\r\n        };\r\n\r\n        // 读取 CSV 文件\r\n        EasyExcel.read(filePath, listener).sheet().doRead();\r\n    }\r\n~~~\r\n\r\n**我的读取结果**\r\n\r\n~~~output\r\n[AAA, bb,cc]\r\n[Ja_aL, a,b,c]\r\n~~~\r\n\r\n祝您生活愉快"
      }
    ]
  },
  {
    "number": 3093,
    "title": "请问如何更新一个已有的excel某一列",
    "created_at": "2023-04-06T04:14:47Z",
    "closed_at": "2023-05-11T01:46:46Z",
    "labels": [
      "help wanted",
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3093",
    "body": "需求是每次更新指定excel的某一列。\r\n我的做法是使用easyExcel的withTemplate方式写文件，但是我翻了很久文档和源码，好像只能在原始文件的列后追加，没办法删掉原文件数据后重新写\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3093/comments",
    "author": "codxiao",
    "comments": [
      {
        "user": "gongxuanzhang",
        "created_at": "2023-04-06T04:53:47Z",
        "body": "什么叫 每次更新指定的某一列。\r\n如果你说的是修改一个已经存在的excel。\r\n那只能全读之后重写，没办法修改某一个位置"
      },
      {
        "user": "daouly",
        "created_at": "2023-04-10T08:04:27Z",
        "body": "EasyExcel.write(pathName, DemoData.class).inMemory(Boolean.TRUE)\r\n            .registerWriteHandler(new CommentWriteHandler())\r\n            .sheet(\"模板\").doWrite(data());  // 用这个 registerWriteHandler 注册一个写操作，源码中的CommentWriteHandler implements RowWriteHandler ，\r\npublic class CommentWriteHandler implements RowWriteHandler {\r\n        @Override\r\n        public void afterRowDispose(RowWriteHandlerContext context) {\r\n            log.info(\"--------rowindex:\" + context.getRowIndex());\r\n           // 每行第4列创建单元格，写入值\r\n            if (BooleanUtils.isTrue(context.getHead())) {\r\n                context.getRow().createCell(3).setCellValue(\"列头哈哈1\");\r\n            } else {\r\n                context.getRow().createCell(3).setCellValue(\"哈哈哈哈哈2\");\r\n            }\r\n    }\r\n\r\n}\r\n但是这种使用规范要加 doWrite(data())， 这还得把数据读取一遍 "
      }
    ]
  },
  {
    "number": 3081,
    "title": "实体类setter 方法 返回this的时候，读到的数据属性值全为null,",
    "created_at": "2023-03-28T14:46:07Z",
    "closed_at": "2023-03-30T05:39:42Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3081",
    "body": "# 触发场景描述\r\n一开始我实体类在setter 方法的时候返回void,后来为了链式调用.setxx().setbb(),把setter 方法返回值改为当前对象，然后使用PageReadListener 读的时候，读到数据的属性全为空了。。\r\n# 触发Bug的代码\r\n```java\r\npublic class DemoData {\r\n\r\n   @ExcelProperty(index = 0)\r\n    private String string;\r\n   public void setString ( String string){ //void 改为 DemoData \r\n        this.string= string;\r\n      //return this;\r\n    }\r\n\r\n}\r\n   EasyExcel.read(fileName, DemoData.class, new PageReadListener<DemoData>(dataList -> {\r\n            for (DemoData demoData : dataList) {\r\n                log.info(\"读取到一条数据{}\", JSON.toJSONString(demoData));\r\n            }\r\n        })).sheet().doRead();\r\n```\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3081/comments",
    "author": "ningL32",
    "comments": [
      {
        "user": "ningL32",
        "created_at": "2023-03-28T14:46:49Z",
        "body": "version :3.0.5"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2023-03-28T15:16:18Z",
        "body": "cglib的问题，不能使用build构建set方法  必须用void\r\n如果你是lombok可以直接在@data注解上设置"
      }
    ]
  },
  {
    "number": 3035,
    "title": "写excel时，集合泛型是数组异常",
    "created_at": "2023-03-08T15:35:30Z",
    "closed_at": "2023-03-13T01:18:27Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3035",
    "body": "写excel时，集合泛型是数组（List<String[]>），报异常 com.alibaba.excel.support.cglib.core.CodeGenerationException: java.lang.NoClassDefFoundError-->IllegalName: [Ljava.lang.String;$$BeanMapByEasyExcelCGLIB$$1d6ef702\r\n应该支持这种数据格式吧，必须强制是自定义类的话，那就没有通用性了。\r\n目前我看可以用Map<Integer,?>这个代替",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3035/comments",
    "author": "lxp411",
    "comments": [
      {
        "user": "gongxuanzhang",
        "created_at": "2023-03-09T01:08:26Z",
        "body": "要是没有实体类   用List<List<String>>"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2023-03-13T01:18:27Z",
        "body": "不知道您是否已经解决该问题？我们先暂时关闭这个问题，如果还存在问题请重新Reopen这个issue"
      }
    ]
  },
  {
    "number": 3032,
    "title": "多sheet数据读取后上传到OSS，读取到 ByteArrayOutputStream 中数据为空",
    "created_at": "2023-03-08T02:56:17Z",
    "closed_at": "2023-03-11T00:51:55Z",
    "labels": [
      "help wanted",
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3032",
    "body": "//  最新版本 3.2.1\r\n\r\n    @GetMapping(value = \"t\")\r\n    public void test(HttpServletResponse response) {\r\n        ExcelWriter excelWriter = null;\r\n        List<String> sheetLists = ListUtil.of(\"业务量统计\", \"日提报量表\");\r\n        try {\r\n            ByteArrayOutputStream outputStream = new ByteArrayOutputStream();\r\n            excelWriter = EasyExcel.write(outputStream, UserModel.class).autoCloseStream(false).build();\r\n            for (int i = 0; i < sheetLists.size(); i++) {\r\n                WriteSheet writeSheet = EasyExcel.writerSheet(i, sheetLists.get(i))\r\n                        .head(UserModel.class)\r\n                        .build();\r\n                excelWriter.write(userSaveService.list(), writeSheet);\r\n            }\r\n            // 数据为空，写入不进去\r\n            System.out.println(outputStream.toByteArray().length);\r\n        }\r\n        catch (Exception e) {\r\n            log.error(\"异常：\", e);\r\n        }\r\n        finally {\r\n            if (excelWriter != null) {\r\n                excelWriter.finish();\r\n            }\r\n        }\r\n    }",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3032/comments",
    "author": "f-cs",
    "comments": [
      {
        "user": "lonecloud",
        "created_at": "2023-03-11T00:37:54Z",
        "body": "1. 如果想写完后就进行读取，可以在打印前面手动调用`ExcelWriter.finish()`方法"
      },
      {
        "user": "f-cs",
        "created_at": "2023-03-11T00:51:51Z",
        "body": "已经选了其他方式，你这种我试了也可以，谢谢了"
      },
      {
        "user": "mankouzhuya",
        "created_at": "2024-07-19T09:00:48Z",
        "body": "这个问题真是坑啊，我都调了半天，outputStream一直为空。结果需要加excelWriter.finish();真是醉了"
      }
    ]
  },
  {
    "number": 3011,
    "title": "Key中包含\".\"，能否提供转义符",
    "created_at": "2023-02-28T06:42:53Z",
    "closed_at": "2023-03-01T02:15:08Z",
    "labels": [
      "help wanted",
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3011",
    "body": "假如说我有个key名为\"hello.world\"，这是处理不了的吧？如果有请教一下大家该怎么搞？\r\n我建议做成可转义的，或者说类似  {[hello.world]} 这种语法，让其key包裹起来。",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3011/comments",
    "author": "wsyslf1996",
    "comments": [
      {
        "user": "wsyslf1996",
        "created_at": "2023-02-28T06:48:23Z",
        "body": "因为还有一种极端情况，就是我的key是动态的。所以我不能去给它建立实体。"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2023-02-28T09:32:33Z",
        "body": "你第一个问题应该是子对象的情况吧，key名怎么可能带.\r\n第二个问题目前不支持"
      },
      {
        "user": "wsyslf1996",
        "created_at": "2023-02-28T12:05:35Z",
        "body": "> 你第一个问题应该是子对象的情况吧，key名怎么可能带.\r\n> 第二个问题目前不支持\r\n\r\n按照现在这个框架的逻辑会认为我的模板提供的key是找子对象，但我实际希望它认为我提供的是一个key，所以我希望框架能有一种手段将.转义，或者是能让我将hello.world视为一个key的写法"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2023-02-28T13:30:43Z",
        "body": "目前不支持，下个版本在规划多层级对象的搜寻"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2023-03-01T02:15:08Z",
        "body": "不知道您是否已经解决该问题？我们先暂时关闭这个问题，如果还存在问题请重新Reopen这个issue"
      }
    ]
  },
  {
    "number": 3008,
    "title": "导出localDateTime发现精度问题",
    "created_at": "2023-02-27T06:49:14Z",
    "closed_at": "2023-06-12T12:43:09Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3008",
    "body": "如何设置以确保可以舍去毫秒以规避日期格式化多1s的情况呢?部分日期的毫秒是900多，导出的格式化日期（yyyy-MM-dd）始终多1s",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3008/comments",
    "author": "13196789316",
    "comments": [
      {
        "user": "gaoguozhen",
        "created_at": "2023-02-27T09:06:14Z",
        "body": "3.2.0 版本 已解决\r\n"
      }
    ]
  },
  {
    "number": 3001,
    "title": "如何将现有的excel文件加密，而不是在生成的时候加密",
    "created_at": "2023-02-22T07:37:59Z",
    "closed_at": "2023-02-26T05:20:22Z",
    "labels": [
      "help wanted",
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3001",
    "body": "如题：\r\n我想要读取现有的excel文件，然后设置密码之后输出，poi的加密方式太占内存了，会oom",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3001/comments",
    "author": "xiao-le-ge",
    "comments": [
      {
        "user": "gongxuanzhang",
        "created_at": "2023-02-23T14:15:54Z",
        "body": "你可以直接对文件加密，不用excel的方式"
      },
      {
        "user": "xiao-le-ge",
        "created_at": "2023-02-24T03:51:56Z",
        "body": "> 你可以直接对文件加密，不用excel的方式\r\n\r\n需求就是给现有的excel设置打开密码，数据加密的话反而好办了"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2023-02-24T12:24:20Z",
        "body": "不是数据，是直接对整个文件加密，和excel没关系,可以直接用zip的加密\r\n给你一段例子\r\n\r\n```\r\n public static void main(String[] args) {\r\n        String password = \"abcd\";\r\n        String inputFile = \"file1.txt\";\r\n        String outputFile = \"aaa.zip\";\r\n\r\n        try {\r\n            ZipFile zipFile = new ZipFile(outputFile);\r\n            ZipParameters parameters = new ZipParameters();\r\n            parameters.setEncryptFiles(true);\r\n            parameters.setEncryptionMethod(EncryptionMethod.AES);\r\n            parameters.setAesKeyStrength(AesKeyStrength.KEY_STRENGTH_256);\r\n            zipFile.setPassword(password.toCharArray());\r\n            zipFile.addFile(inputFile, parameters);\r\n\r\n        } catch (ZipException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n```\r\n\r\n```\r\n  <dependency>\r\n            <groupId>net.lingala.zip4j</groupId>\r\n            <artifactId>zip4j</artifactId>\r\n            <version>2.4.0</version>\r\n        </dependency>\r\n```\r\n"
      },
      {
        "user": "xiao-le-ge",
        "created_at": "2023-02-24T12:34:23Z",
        "body": "> 不是数据，是直接对整个文件加密，和excel没关系,可以直接用zip的加密 给你一段例子\r\n> \r\n> ```\r\n>  public static void main(String[] args) {\r\n>         String password = \"abcd\";\r\n>         String inputFile = \"file1.txt\";\r\n>         String outputFile = \"aaa.zip\";\r\n> \r\n>         try {\r\n>             ZipFile zipFile = new ZipFile(outputFile);\r\n>             ZipParameters parameters = new ZipParameters();\r\n>             parameters.setEncryptFiles(true);\r\n>             parameters.setEncryptionMethod(EncryptionMethod.AES);\r\n>             parameters.setAesKeyStrength(AesKeyStrength.KEY_STRENGTH_256);\r\n>             zipFile.setPassword(password.toCharArray());\r\n>             zipFile.addFile(inputFile, parameters);\r\n> \r\n>         } catch (ZipException e) {\r\n>             e.printStackTrace();\r\n>         }\r\n>     }\r\n> ```\r\n> \r\n> ```\r\n>   <dependency>\r\n>             <groupId>net.lingala.zip4j</groupId>\r\n>             <artifactId>zip4j</artifactId>\r\n>             <version>2.4.0</version>\r\n>         </dependency>\r\n> ```\r\n\r\n嗯嗯，这个zip4j我知道的，但是需求的效果就是针对excel文件打开的时候输入密码这种😂"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2023-02-26T05:20:22Z",
        "body": "这跟excel也没关系 你们自己想办法把"
      }
    ]
  },
  {
    "number": 3000,
    "title": "Excel多Sheet也写入的时候报错 Can not close IO.",
    "created_at": "2023-02-22T06:33:01Z",
    "closed_at": "2023-03-22T04:52:19Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3000",
    "body": "pom依赖版本\r\n<dependency>\r\n    <groupId>com.alibaba</groupId>\r\n    <artifactId>easyexcel</artifactId>\r\n    <version>3.1.1</version>\r\n</dependency>\r\n\r\n# 触发Bug的代码\r\n```java\r\n          ExcelWriter excelWriter = EasyExcel.write(response.getOutputStream())\r\n                .registerWriteHandler(new LongestMatchColumnWidthStyleStrategy())\r\n                .build();\r\n        try {\r\n            for (int i = 0; i < 6; i++) {\r\n                WriteSheet writeSheet = EasyExcel.writerSheet(sheetNumber, sheetName).head(head).build();\r\n                excelWriter.write(dataList, writeSheet);\r\n            }\r\n        } catch (Exception e) {\r\n            throw new RunTimeException(\"导出异常，异常信息：\" + e.getMessage());\r\n        } finally {\r\n            excelWriter.finish();\r\n        }\r\n```\r\n# 提示的异常或者没有达到的效果\r\n尝试往一个Excel写入多个Sheet也的时候报错，同样的方式写入本地文件可以正常写入，但是Web导出的时候就会报异常 Can not close IO.\r\n完整异常如下：\r\n\r\n\r\ncom.alibaba.excel.exception.ExcelGenerateException: Can not close IO.\r\n\tat com.alibaba.excel.context.WriteContextImpl.finish(WriteContextImpl.java:420)\r\n\tat com.alibaba.excel.write.ExcelBuilderImpl.finish(ExcelBuilderImpl.java:99)\r\n\tat com.alibaba.excel.ExcelWriter.finish(ExcelWriter.java:140)\r\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\r\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:665)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:750)\r\n\tat io.undertow.servlet.handlers.ServletHandler.handleRequest(ServletHandler.java:74)\r\n\tat io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:129)\r\n\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)\r\n\tat org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)\r\n\tat org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)\r\n\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)\r\n\tat org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)\r\n\tat org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)\r\n\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)\r\n\tat org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)\r\n\tat org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)\r\n\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)\r\n\tat org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)\r\n\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)\r\n\tat org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)\r\n\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)\r\n\tat org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)\r\n\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)\r\n\tat org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter.doFilter(OAuth2AuthenticationProcessingFilter.java:176)\r\n\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)\r\n\tat org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)\r\n\tat org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)\r\n\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)\r\n\tat org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)\r\n\tat org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)\r\n\tat org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)\r\n\tat org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)\r\n\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)\r\n\tat org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)\r\n\tat org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)\r\n\tat org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)\r\n\tat org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)\r\n\tat org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)\r\n\tat io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)\r\n\tat io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)\r\n\tat io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)\r\n\tat io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)\r\n\tat io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)\r\n\tat com.demo.xxx.common.data.tenant.TenantContextHolderFilter.doFilter(TenantContextHolderFilter.java:65)\r\n\tat io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)\r\n\tat io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)\r\n\tat io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)\r\n\tat io.undertow.servlet.handlers.FilterHandler.handleRequest(FilterHandler.java:84)\r\n\tat io.undertow.servlet.handlers.security.ServletSecurityRoleHandler.handleRequest(ServletSecurityRoleHandler.java:62)\r\n\tat io.undertow.servlet.handlers.ServletChain$1.handleRequest(ServletChain.java:68)\r\n\tat io.undertow.servlet.handlers.ServletDispatchingHandler.handleRequest(ServletDispatchingHandler.java:36)\r\n\tat io.undertow.servlet.handlers.RedirectDirHandler.handleRequest(RedirectDirHandler.java:68)\r\n\tat io.undertow.servlet.handlers.security.SSLInformationAssociationHandler.handleRequest(SSLInformationAssociationHandler.java:117)\r\n\tat io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:57)\r\n\tat io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)\r\n\tat io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:46)\r\n\tat io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:64)\r\n\tat io.undertow.security.handlers.AuthenticationMechanismsHandler.handleRequest(AuthenticationMechanismsHandler.java:60)\r\n\tat io.undertow.servlet.handlers.security.CachedAuthenticatedSessionHandler.handleRequest(CachedAuthenticatedSessionHandler.java:77)\r\n\tat io.undertow.security.handlers.AbstractSecurityContextAssociationHandler.handleRequest(AbstractSecurityContextAssociationHandler.java:43)\r\n\tat io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)\r\n\tat io.undertow.servlet.handlers.SendErrorPageHandler.handleRequest(SendErrorPageHandler.java:52)\r\n\tat io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)\r\n\tat io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:269)\r\n\tat io.undertow.servlet.handlers.ServletInitialHandler.access$100(ServletInitialHandler.java:78)\r\n\tat io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:133)\r\n\tat io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:130)\r\n\tat io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:48)\r\n\tat io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)\r\n\tat io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:249)\r\n\tat io.undertow.servlet.handlers.ServletInitialHandler.access$000(ServletInitialHandler.java:78)\r\n\tat io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:99)\r\n\tat io.undertow.server.Connectors.executeRootHandler(Connectors.java:387)\r\n\tat io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:841)\r\n\tat org.jboss.threads.ContextClassLoaderSavingRunnable.run(ContextClassLoaderSavingRunnable.java:35)\r\n\tat org.jboss.threads.EnhancedQueueExecutor.safeRun(EnhancedQueueExecutor.java:2019)\r\n\tat org.jboss.threads.EnhancedQueueExecutor$ThreadBody.doRunTask(EnhancedQueueExecutor.java:1558)\r\n\tat org.jboss.threads.EnhancedQueueExecutor$ThreadBody.run(EnhancedQueueExecutor.java:1449)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.io.IOException: This archive contains unclosed entries.\r\n\tat org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.finish(ZipArchiveOutputStream.java:467)\r\n\tat org.apache.poi.xssf.streaming.SXSSFWorkbook.injectData(SXSSFWorkbook.java:419)\r\n\tat org.apache.poi.xssf.streaming.SXSSFWorkbook.write(SXSSFWorkbook.java:959)\r\n\tat com.alibaba.excel.context.WriteContextImpl.finish(WriteContextImpl.java:381)\r\n\t... 117 common frames omitted\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3000/comments",
    "author": "wkynf",
    "comments": [
      {
        "user": "lonecloud",
        "created_at": "2023-02-24T08:03:24Z",
        "body": "请检查流在创建写入或者finish之前是否被关闭"
      },
      {
        "user": "lonecloud",
        "created_at": "2023-03-22T04:52:19Z",
        "body": "还有问题，请在提交问题哈，这个issue关闭了哈"
      },
      {
        "user": "jia2118290",
        "created_at": "2024-07-04T09:46:02Z",
        "body": "请问怎么解决的？"
      }
    ]
  },
  {
    "number": 2999,
    "title": "我只能得到json格式的字符串，没有固定结构的实体类对应，能用esayexcel生成excel吗？",
    "created_at": "2023-02-22T05:51:17Z",
    "closed_at": "2023-03-22T04:52:41Z",
    "labels": [
      "help wanted",
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2999",
    "body": "\r\n# 问题描述\r\n如题，项目里数据结构是不固定的，官方文档里 写入的数据都有对应的实体类，比如DemoData ，我说的情况貌似没有，Map我试过了不好使。老师们能给个思路吗？只要把下面这个json字符串生成excel：\r\n`[{\"字段1\":\"值1\",\"字段2\":\"值2\"},{\"字段1\":\"值3\",\"字段2\":\"值4\"}]`",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2999/comments",
    "author": "wangwufan",
    "comments": [
      {
        "user": "lonecloud",
        "created_at": "2023-02-24T07:14:43Z",
        "body": "可参考`com.alibaba.easyexcel.test.demo.write.WriteTest#dynamicHeadWrite`这个进行处理"
      },
      {
        "user": "lonecloud",
        "created_at": "2023-03-22T04:52:41Z",
        "body": "还有问题，请再提交问题哈，这个issue关闭了哈\r\n\r\n"
      }
    ]
  },
  {
    "number": 2998,
    "title": "导出CSV如何合并header的单元格呢？",
    "created_at": "2023-02-22T04:12:05Z",
    "closed_at": "2023-02-22T05:16:22Z",
    "labels": [
      "help wanted",
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2998",
    "body": "@ExcelProperty({\"变动\", \"差额\"})\r\n private BigDecimal compareAmount;\r\n\r\n@ExcelProperty({\"变动\", \"比率\"})\r\n private String compareRatio;",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2998/comments",
    "author": "Webgasd",
    "comments": [
      {
        "user": "lonecloud",
        "created_at": "2023-02-22T05:13:07Z",
        "body": "CSV本身不支持这种格式样式的，CSV是用一定的特殊符号分割的文本，无法做到样式"
      }
    ]
  },
  {
    "number": 2980,
    "title": "关于EasyExcel.write的使用，一个问题。",
    "created_at": "2023-02-16T02:08:32Z",
    "closed_at": "2023-03-16T03:27:49Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2980",
    "body": "官方例子中，\r\n`EasyExcel.write(fileName, DemoData.class)\r\n        .sheet(\"模板\")\r\n        .doWrite(() -> {\r\n            // 分页查询数据\r\n            return data();\r\n        });`\r\nDemoData.class 可以用动态字节码技术动态生成。\r\n但是 data() 函数该怎么写呢？编译的时候，编译器需要找到DemoData，还是可以动态添加及如何添加？感觉是不是不可行啊。\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2980/comments",
    "author": "guorouda",
    "comments": [
      {
        "user": "lonecloud",
        "created_at": "2023-02-16T09:18:56Z",
        "body": "没太明白你的意思，如果是想做成动态写入，那你可以将写入的数据指定为Map类型，然后在返回数据的时候，可以使用Map或者HashMap进行数据转换即可了\r\n```\r\nEasyExcel.write(fileName, head()) .sheet(\"模板\") .doWrite(() -> { // 分页查询数据 return data(); });\r\n```"
      },
      {
        "user": "guorouda",
        "created_at": "2023-02-17T04:12:23Z",
        "body": "你讲的方法对我来说很新颖。需要消化一下。这里有个疑惑，我这里是有几种Excel文件需要输出，列数各不一样的。你的方法可以处理吗？谢谢\r\n"
      },
      {
        "user": "lonecloud",
        "created_at": "2023-02-17T07:01:41Z",
        "body": "可参考`com.alibaba.easyexcel.test.demo.write.WriteTest#noModelWrite`这个方法里面的实现"
      },
      {
        "user": "guorouda",
        "created_at": "2023-02-17T07:07:42Z",
        "body": "谢谢。"
      },
      {
        "user": "guorouda",
        "created_at": "2023-02-24T08:40:51Z",
        "body": "不明白你答复里的使用HashMap进行数据转换。是建立一个`public class HashMapConverter implements Converter<HashMap>` 还是将HashMap 转换为ArrayList?抑或其他意思\r\n> 没太明白你的意思，如果是想做成动态写入，那你可以将写入的数据指定为Map类型，然后在返回数据的时候，可以使用Map或者HashMap进行数据转换即可了\r\n> \r\n> ```\r\n> EasyExcel.write(fileName, head()) .sheet(\"模板\") .doWrite(() -> { // 分页查询数据 return data(); });\r\n> ```\r\n\r\n"
      },
      {
        "user": "lonecloud",
        "created_at": "2023-02-28T11:38:11Z",
        "body": "> \r\n即不使用JavaBean的方式来做存储动态数据.\r\n表头你可以用List<List<String>> 支持自定义表头，数据:你可以用\r\n`List<List<Object>>`来支持动态数据"
      },
      {
        "user": "guorouda",
        "created_at": "2023-03-16T03:27:49Z",
        "body": "多谢"
      }
    ]
  },
  {
    "number": 2978,
    "title": "com.alibaba.easyexcel.test.demo.write.WriteTest 写法3 Required type: AutoClosable 错误",
    "created_at": "2023-02-15T06:28:15Z",
    "closed_at": "2023-02-16T07:12:23Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2978",
    "body": "        try (ExcelWriter excelWriter = EasyExcel.write(fileName, DemoData.class).build()) {\r\n          // some code\r\n         }\r\n        \r\n\r\n编译器提示，Required type: AutoClosable； Provided: ExcelWriter  问题如何解决。感觉代码完全错误，但示例确实这么写的。奇怪。",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2978/comments",
    "author": "guorouda",
    "comments": [
      {
        "user": "lonecloud",
        "created_at": "2023-02-16T04:00:01Z",
        "body": "请提供使用对应的JDK版本，方便复现"
      },
      {
        "user": "guorouda",
        "created_at": "2023-02-16T05:31:31Z",
        "body": "java version \"17.0.6\" 2023-01-17 LTS\r\nJava(TM) SE Runtime Environment (build 17.0.6+9-LTS-190)\r\nJava HotSpot(TM) 64-Bit Server VM (build 17.0.6+9-LTS-190, mixed mode, sharing)"
      },
      {
        "user": "guorouda",
        "created_at": "2023-02-16T07:15:25Z",
        "body": "easyexcel  3.0.5 不适用上例。打扰了lonecloud"
      }
    ]
  },
  {
    "number": 2977,
    "title": "同步读Excel无法忽略异常",
    "created_at": "2023-02-15T03:16:56Z",
    "closed_at": "2023-02-28T03:20:34Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2977",
    "body": "SyncReadListener的onException抛出异常导致doReadSync异常无法被忽略",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2977/comments",
    "author": "revprogramer",
    "comments": [
      {
        "user": "gongxuanzhang",
        "created_at": "2023-02-20T15:28:45Z",
        "body": "onException是捕获异常时的兜底策略。\r\n你需要控制这个逻辑不出异常或者在方法中处理异常。\r\n同理当你使用JDK的String.format() 作为模板当成异常信息  也可能再次抛出异常，这种情况需要你自己做处理"
      },
      {
        "user": "wangxfholly",
        "created_at": "2024-05-30T06:41:26Z",
        "body": "自己怎么处理"
      }
    ]
  },
  {
    "number": 2968,
    "title": "可以试试设置EasyExcel.write().inMemory(true)",
    "created_at": "2023-02-13T07:54:51Z",
    "closed_at": "2023-02-24T08:11:39Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2968",
    "body": "              可以试试设置EasyExcel.write().inMemory(true)\r\n我试了下也可以",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2968/comments",
    "author": "aron6610",
    "comments": [
      {
        "user": "lonecloud",
        "created_at": "2023-02-16T09:08:35Z",
        "body": "可以说明下是什么问题么？"
      },
      {
        "user": "lonecloud",
        "created_at": "2023-02-24T08:11:39Z",
        "body": "先关闭了哈，后面还有问题请重新提交issue"
      }
    ]
  },
  {
    "number": 2939,
    "title": "表头自动合并问题",
    "created_at": "2023-02-01T08:10:46Z",
    "closed_at": "2023-02-13T01:23:35Z",
    "labels": [
      "help wanted",
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2939",
    "body": "版本：\r\n<dependency>\r\n                <groupId>com.alibaba</groupId>\r\n                <artifactId>easyexcel</artifactId>\r\n                <version>3.0.5</version>\r\n            </dependency>\r\n方法：\r\n EasyExcel.write(filePath + fileName)\r\n                // 这里放入动态头\r\n                .head(List<List<String>>).sheet(sheetName)\r\n                // 当然这里数据也可以用 List<List<String>> 去传入\r\n                .doWrite();\r\n问题：\r\nList<List<String>> head = [[头1],[头1]].\r\n当head 里面的list 两个头内容相同会自动合并，如何取消自动合并？",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2939/comments",
    "author": "yeohx",
    "comments": [
      {
        "user": "dardaplanet",
        "created_at": "2023-02-02T05:40:40Z",
        "body": "调用方法automaticMergeHead,设置为false\r\nEasyExcel.write(filePath + fileName).automaticMergeHead(false) "
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2023-02-13T01:23:35Z",
        "body": "不知道您是否已经解决该问题？我们先暂时关闭这个问题，如果还存在问题请重新Reopen这个issue"
      }
    ]
  },
  {
    "number": 2930,
    "title": "easyExcel导出，前端下载文件流时只有表头没有数据",
    "created_at": "2023-01-22T02:37:41Z",
    "closed_at": "2023-02-18T06:41:44Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2930",
    "body": "前端vue3：\r\n            const link = document.createElement('a')\r\n            let blob = new Blob([res.data], {type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'})\r\n            var fileName = '测试用例.xlsx'\r\n            link.style.display = \"none\"\r\n            link.href = URL.createObjectURL(blob)\r\n            link.setAttribute('download', fileName)\r\n            document.body.appendChild(link)\r\n            link.click()\r\n            URL.revokeObjectURL(link.href)\r\n            document.body.removeChild(link)\r\n后端controller：\r\n        List<Assess> assesses = assessService.getSpecialSubTaskAssessByNetId(specialSubTaskId);\r\n        response.setContentType(\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;chartset=utf-8\");\r\n        response.setCharacterEncoding(\"utf-8\");\r\n        try {\r\n            String fileName = URLEncoder.encode(\"测试用例\", \"UTF-8\").replaceAll(\"\\\\+\", \"%20\");\r\n            response.setHeader(\"Content-disposition\", \"attachment;filename*=utf-8''\" + fileName + \".xlsx\");\r\n            EasyExcel.write(response.getOutputStream()).autoCloseStream(Boolean.FALSE).head(Assess.class)\r\n                    .excelType(ExcelTypeEnum.XLSX).sheet(\"评估表\")\r\n                    .doWrite(assesses);\r\n如果直接后端下载成本地文件的话数据是没有问题的，但是返回给前端一下载就出上述问题",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2930/comments",
    "author": "sgk102938",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2023-02-08T07:45:12Z",
        "body": "这个不应该 ，你打印下输出的数据，我的理解是你数据没放进去"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2023-02-18T06:41:44Z",
        "body": "不知道您是否已经解决该问题？我们先暂时关闭这个问题，如果还存在问题请重新Reopen这个issue."
      }
    ]
  },
  {
    "number": 2887,
    "title": "合并行报错",
    "created_at": "2022-12-27T08:24:02Z",
    "closed_at": "2023-02-04T06:15:13Z",
    "labels": [
      "help wanted",
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2887",
    "body": "异常信息：\r\n我需要怎么才能避面合并行报此错误\r\n     Cannot add merged region A24:B24 to sheet because it overlaps with an existing merged region (B24:J24).\r\n\r\n代码\r\n```java\r\npublic class ExcelMerge implements CellWriteHandler {\r\n\r\n    /*开始合并行 index从0开始*/\r\n    private int mergeRowStartIndex;\r\n    /*结束合并行*/\r\n    private int mergeRowEndIndex;\r\n    /*合并列*/\r\n    private int[] mergeColumnIndex;\r\n\r\n\r\n    private String mergeGs;\r\n\r\n    public ExcelMerge() {\r\n    }\r\n\r\n\r\n    public ExcelMerge(int mergeRowStartIndex, int[] mergeColumnIndex) {\r\n        this.mergeRowStartIndex = mergeRowStartIndex;\r\n        this.mergeColumnIndex = mergeColumnIndex;\r\n    }\r\n\r\n    public ExcelMerge(int mergeRowStartIndex,int mergeRowEndIndex, int[] mergeColumnIndex) {\r\n        this.mergeRowStartIndex = mergeRowStartIndex;\r\n        this.mergeColumnIndex = mergeColumnIndex;\r\n    }\r\n    \r\n\r\n\r\n    @Override\r\n    public void beforeCellCreate(WriteSheetHolder writeSheetHolder, WriteTableHolder writeTableHolder, Row row, Head head, Integer columnIndex, Integer relativeRowIndex, Boolean isHead) {\r\n\r\n    }\r\n\r\n    @Override\r\n    public void afterCellCreate(WriteSheetHolder writeSheetHolder, WriteTableHolder writeTableHolder, Cell cell, Head head, Integer relativeRowIndex, Boolean isHead) {\r\n\r\n    }\r\n\r\n    @Override\r\n    public void afterCellDispose(CellWriteHandlerContext context) {\r\n\r\n        Cell cell = context.getCell();\r\n        WriteSheetHolder writeSheetHolder = context.getWriteSheetHolder();\r\n        //当前行\r\n        int curRowIndex = cell.getRowIndex();\r\n        //当前列\r\n        int curColIndex = cell.getColumnIndex();\r\n\r\n        if ( curRowIndex > mergeRowStartIndex && curRowIndex <= mergeRowEndIndex && StringUtils.isBlank(mergeGs)) {\r\n            for (int i = 0; i < mergeColumnIndex.length; i++) {\r\n                if (curColIndex == mergeColumnIndex[i]) {\r\n                    mergeWithPrevRow(writeSheetHolder, cell, curRowIndex, curColIndex);\r\n                    break;\r\n                }\r\n            }\r\n            return;\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    /**\r\n     * 当前单元格向上合并\r\n     *\r\n     * @param writeSheetHolder\r\n     * @param cell             当前单元格\r\n     * @param curRowIndex      当前行\r\n     * @param curColIndex      当前列\r\n     */\r\n    private void mergeWithPrevRow(WriteSheetHolder writeSheetHolder, Cell cell, int curRowIndex, int curColIndex) {\r\n        Object curData = cell.getCellTypeEnum() == CellType.STRING ? cell.getStringCellValue() : cell.getNumericCellValue();\r\n        Cell preCell = cell.getSheet().getRow(curRowIndex - 1).getCell(curColIndex);\r\n        Object preData = preCell.getCellTypeEnum() == CellType.STRING ? preCell.getStringCellValue() : preCell.getNumericCellValue();\r\n        // 将当前单元格数据与上一个单元格数据比较\r\n        Boolean dataBool = preData.equals(curData);\r\n        //此处需要注意：获取每一行第二列数据和上一行第一列数据进行比较，如果相等合并\r\n        Boolean bool = cell.getRow().getCell(0).getStringCellValue().equals(cell.getSheet().getRow(curRowIndex - 1).getCell(0).getStringCellValue());\r\n        if (dataBool && bool) {\r\n            Sheet sheet = writeSheetHolder.getSheet();\r\n            List<CellRangeAddress> mergeRegions = sheet.getMergedRegions();\r\n            boolean isMerged = false;\r\n            for (int i = 0; i < mergeRegions.size() && !isMerged; i++) {\r\n                CellRangeAddress cellRangeAddr = mergeRegions.get(i);\r\n                // 若上一个单元格已经被合并，则先移出原有的合并单元，再重新添加合并单元\r\n                if (cellRangeAddr.isInRange(curRowIndex - 1, curColIndex)) {\r\n                    sheet.removeMergedRegion(i);\r\n                    cellRangeAddr.setLastRow(curRowIndex);\r\n                    sheet.addMergedRegion(cellRangeAddr);\r\n                    isMerged = true;\r\n                }\r\n            }\r\n            // 若上一个单元格未被合并，则新增合并单元\r\n            if (!isMerged) {\r\n                CellRangeAddress cellRangeAddress = new CellRangeAddress(curRowIndex - 1, curRowIndex, curColIndex, curColIndex);\r\n                sheet.addMergedRegion(cellRangeAddress);\r\n            }\r\n        }\r\n    }\r\n\r\n  \r\n\r\n}\r\n```",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2887/comments",
    "author": "GithubGey",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2023-01-13T09:32:44Z",
        "body": "这个很明显是合并单元格冲突了，每次输出下合并的单元格。看下是否重叠了"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2023-02-04T06:15:13Z",
        "body": "不知道您是否已经通过其他渠道解决该问题？我们先暂时关闭这个问题，如果还存在问题请重新Reopen这个issue"
      }
    ]
  },
  {
    "number": 2883,
    "title": "表头斜线和文本框",
    "created_at": "2022-12-25T14:33:34Z",
    "closed_at": "2023-02-03T07:31:28Z",
    "labels": [
      "help wanted",
      "question",
      "pending verification"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2883",
    "body": "使用自定义拦截器生成的表头斜线和文本框，不能移动和删除是怎么回事？移动的时候相当于复制一份？\r\nXSSFClientAnchor anchor = drawing.createAnchor(0, 0,\r\n                600, 1400, 5, 30, 11, 37);\r\n\r\n        XSSFTextBox textBox1 = drawing.createTextbox(anchor);\r\n        textBox1.setLineStyleColor(0, 0, 0);\r\n        java.awt.Color col = Color.white;\r\n        textBox1.setFillColor(col.getRed(), col.getGreen(), col.getBlue());\r\n        //富文本字符串\r\n        XSSFRichTextString address = new XSSFRichTextString(\"测试\");\r\n        textBox1.setText(address);\r\n        //文字字符属性\r\n        CTTextCharacterProperties rpr = textBox1.getCTShape().getTxBody().getPArray(0).getRArray(0).getRPr();\r\n        //设置字体\r\n        rpr.addNewLatin().setTypeface(\"Trebuchet MS\");\r\n        //设置字体大小9pt\r\n        rpr.setSz(900);\r\n        //设置字体颜色，蓝色\r\n        col = Color.blue;\r\n        rpr.addNewSolidFill().addNewSrgbClr().setVal(new byte[]{(byte) col.getRed(), (byte) col.getGreen(), (byte) col.getBlue()});",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2883/comments",
    "author": "sgw1276",
    "comments": [
      {
        "user": "gongxuanzhang",
        "created_at": "2023-02-02T08:49:24Z",
        "body": "我用你的方法导出的文本框是正常的， 从\"不能移动和删除，移动的时候复制\"看。 检查一下键盘是否长按了Ctrl或者Alt键。\r\n如果不能解决问题，请把完成代码提供一下"
      },
      {
        "user": "sgw1276",
        "created_at": "2023-04-28T01:58:08Z",
        "body": "和我用的是SXSSFWorkbook有关系吗\r\n"
      }
    ]
  },
  {
    "number": 2872,
    "title": "在动态创建多sheet页，循环调用 write( 数据, WriteSheet对象)写入数据时报The maximum number of cell styles was exceeded. You can define up to 4000 styles in a .xls workbook",
    "created_at": "2022-12-15T02:13:25Z",
    "closed_at": "2023-02-15T01:50:50Z",
    "labels": [
      "help wanted",
      "question",
      "pending verification"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2872",
    "body": null,
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2872/comments",
    "author": "335747949",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2023-02-08T12:28:33Z",
        "body": "你创建了多少的sheet? 我理解的情况 是不是你sheet数量 * 列的数量 超过了4000？\r\n如果是的话 需要研究下 不用每一列创建一个style"
      },
      {
        "user": "335747949",
        "created_at": "2023-02-09T07:00:38Z",
        "body": "问题已经解决了，更换了esyexcel更高的版本，代码成功运行。\r\n\r\n\r\n\r\n\r\n------------------&nbsp;原始邮件&nbsp;------------------\r\n发件人:                                                                                                                        \"alibaba/easyexcel\"                                                                                    ***@***.***&gt;;\r\n发送时间:&nbsp;2023年2月8日(星期三) 晚上8:28\r\n***@***.***&gt;;\r\n***@***.******@***.***&gt;;\r\n主题:&nbsp;Re: [alibaba/easyexcel] 在动态创建多sheet页，循环调用 write( 数据, WriteSheet对象)写入数据时报The maximum number of cell styles was exceeded. You can define up to 4000 styles in a .xls workbook (Issue #2872)\r\n\r\n\r\n\r\n\r\n\r\n \r\n你创建了多少的sheet?\r\n \r\n—\r\nReply to this email directly, view it on GitHub, or unsubscribe.\r\nYou are receiving this because you authored the thread.Message ID: ***@***.***&gt;"
      }
    ]
  },
  {
    "number": 2858,
    "title": "加了 @ExcelIgnore 依然报 Can not find 'Converter' support class List.",
    "created_at": "2022-12-07T06:22:48Z",
    "closed_at": "2023-02-08T12:32:00Z",
    "labels": [
      "help wanted",
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2858",
    "body": "\r\n```java\r\n   @ExcelIgnore\r\n    private List<String> barcodeList;\r\n```\r\n\r\ncom.alibaba.excel.exception.ExcelDataConvertException: Can not find 'Converter' support class List.\r\n\r\n加了 @ExcelIgnore 依然报 Can not find 'Converter' support class List.\r\n\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2858/comments",
    "author": "caiqichang",
    "comments": [
      {
        "user": "WyattYiu",
        "created_at": "2022-12-16T16:01:07Z",
        "body": "类上加@ExcelIgnoreUnannotated试试，同时建议debug跟下"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2023-01-16T12:57:07Z",
        "body": "是否还存在其他list?"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2023-02-08T12:32:00Z",
        "body": "不知道您是否已经解决该问题？我们先暂时关闭这个问题，如果还存在问题请重新Reopen这个issue"
      },
      {
        "user": "MeituanRider",
        "created_at": "2024-04-24T10:47:54Z",
        "body": "> 不知道您是否已经解决该问题？我们先暂时关闭这个问题，如果还存在问题请重新Reopen这个issue\r\n\r\n确实解决了，嘿嘿"
      }
    ]
  },
  {
    "number": 2799,
    "title": "读取数据跳行了",
    "created_at": "2022-11-09T03:21:51Z",
    "closed_at": "2023-02-03T04:56:54Z",
    "labels": [
      "help wanted",
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2799",
    "body": "web导入读取数据，一千多条数据只读取到了四百多\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2799/comments",
    "author": "liuyichens",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2023-01-17T03:23:07Z",
        "body": "这个需要提供下excel"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2023-02-03T04:56:54Z",
        "body": "不知道您是否已经通过其他渠道解决该问题？我们先暂时关闭这个问题，如果还存在问题请重新Reopen这个issue"
      }
    ]
  },
  {
    "number": 2782,
    "title": "在scala使用java类去调用easyExcel去根据模板进行导出",
    "created_at": "2022-10-29T03:35:13Z",
    "closed_at": "2023-02-20T15:35:06Z",
    "labels": [
      "help wanted",
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2782",
    "body": "需求是在scala中去spark中取值 在调用Java类去使用easyExcel按照模板去导出excel\r\nvar out = new FileOutputStream(\"C:/Users/联想/Desktop/11/\"+UUID.randomUUID()+\".xlsx\");\r\nExcelWriter excelWriter = EasyExcel.write(out).withTemplate(template)\r\n        .registerWriteHandler(mergeStrategy).build();\r\n//构建excel的sheet\r\nWriteSheet writeSheet = EasyExcel.writerSheet().build();\r\nFillConfig fillConfig = FillConfig.builder().forceNewRow(Boolean.TRUE).build();\r\nexcelWriter.fill(fileData.asJava, writeSheet);\r\nexcelWriter.finish();\r\nsacla脚本的编译和调用都是没有报错的，执行excelWriter.finish();后的日志打印也是正常的，控制台也没有错误报出，\r\n就是导出的excel是空，连模板的内容都没有了",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2782/comments",
    "author": "qq454634668",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2023-01-17T06:01:19Z",
        "body": "建议下先试用java 试试看"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2023-02-20T15:35:05Z",
        "body": "不知道您是否已经解决该问题？我们先暂时关闭这个问题，如果还存在问题请重新Reopen这个issue"
      }
    ]
  },
  {
    "number": 2777,
    "title": "Java使用EasyExcel的问题",
    "created_at": "2022-10-27T09:20:30Z",
    "closed_at": "2023-02-03T04:57:16Z",
    "labels": [
      "help wanted",
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2777",
    "body": "开发者你好,我导入Excel到Java实体类 结果只能导入170列,之后的列的值就被舍弃了,请问是怎么回事",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2777/comments",
    "author": "AutumnSenYu",
    "comments": [
      {
        "user": "yuhaowin",
        "created_at": "2022-10-29T06:39:58Z",
        "body": "provide a demo that can be repeated."
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2023-01-17T06:02:43Z",
        "body": "这个需要提供下 代码&excel"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2023-02-03T04:57:16Z",
        "body": "不知道您是否已经通过其他渠道解决该问题？我们先暂时关闭这个问题，如果还存在问题请重新Reopen这个issue"
      }
    ]
  },
  {
    "number": 2773,
    "title": "读取excel 当中带文件目录的数据 时 报 Illegal character in path at index",
    "created_at": "2022-10-21T06:34:22Z",
    "closed_at": "2023-02-03T05:00:46Z",
    "labels": [
      "bug",
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2773",
    "body": "java.net.URISyntaxException: Illegal character in path at index 75: file://///XXXXXX/\r\n\tat java.net.URI$Parser.fail(URI.java:2848)\r\n\tat java.net.URI$Parser.checkChars(URI.java:3021)\r\n\tat java.net.URI$Parser.parseHierarchical(URI.java:3105)\r\n\tat java.net.URI$Parser.parse(URI.java:3053)\r\n\tat java.net.URI.<init>(URI.java:588)\r\n\tat org.apache.poi.openxml4j.opc.PackagingURIHelper.toURI(PackagingURIHelper.java:723)\r\n\tat org.apache.poi.openxml4j.opc.PackageRelationshipCollection.parseRelationshipsPart(PackageRelationshipCollection.java:358)\r\n\tat org.apache.poi.openxml4j.opc.PackageRelationshipCollection.<init>(PackageRelationshipCollection.java:160)\r\n\tat org.apache.poi.openxml4j.opc.PackageRelationshipCollection.<init>(PackageRelationshipCollection.java:130)\r\n\tat org.apache.poi.openxml4j.opc.PackagePart.loadRelationships(PackagePart.java:565)\r\n\tat org.apache.poi.openxml4j.opc.OPCPackage.getParts(OPCPackage.java:751)\r\n\tat org.apache.poi.openxml4j.opc.OPCPackage.open(OPCPackage.java:288)\r\n\tat org.apache.poi.openxml4j.opc.OPCPackage.open(OPCPackage.java:192)\r\n\tat com.alibaba.excel.analysis.v07.XlsxSaxAnalyser.readOpcPackage(XlsxSaxAnalyser.java:191)\r\n\tat com.alibaba.excel.analysis.v07.XlsxSaxAnalyser.<init>(XlsxSaxAnalyser.java:89)\r\n\tat com.alibaba.excel.analysis.ExcelAnalyserImpl.choiceExcelExecutor(ExcelAnalyserImpl.java:103)\r\n\tat com.alibaba.excel.analysis.ExcelAnalyserImpl.<init>(ExcelAnalyserImpl.java:55)\r\n\tat com.alibaba.excel.ExcelReader.<init>(ExcelReader.java:27)\r\n\tat com.alibaba.excel.read.builder.ExcelReaderBuilder.build(ExcelReaderBuilder.java:202)\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2773/comments",
    "author": "hostkey918",
    "comments": [
      {
        "user": "hostkey918",
        "created_at": "2022-10-21T06:34:43Z",
        "body": "版本3.1.1"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2023-01-17T06:07:57Z",
        "body": "你直接 `new  File().getAbsolutePath()` 试试 "
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2023-02-03T05:00:46Z",
        "body": "不知道您是否已经通过其他渠道解决该问题？我们先暂时关闭这个问题，如果还存在问题请重新Reopen这个issue"
      },
      {
        "user": "liyuan-hu",
        "created_at": "2024-11-07T09:11:14Z",
        "body": "我也遇到了这个问题，请问解决了吗"
      },
      {
        "user": "hostkey918",
        "created_at": "2024-11-21T02:06:15Z",
        "body": "没有\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n在 2024-11-07 17:11:37，\"liyuan-hu\" ***@***.***> 写道：\n\n我也遇到了这个问题，请问解决了吗\n\n—\nReply to this email directly, view it on GitHub, or unsubscribe.\nYou are receiving this because you authored the thread.Message ID: ***@***.***>"
      }
    ]
  },
  {
    "number": 2751,
    "title": "源码里面这个类org.apache.poi.hssf.usermodel.PoiUtils的包名和poi的重复了，java9以上怎么使用？",
    "created_at": "2022-10-06T15:49:24Z",
    "closed_at": "2023-04-12T15:00:32Z",
    "labels": [
      "help wanted",
      "question",
      "pending verification"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2751",
    "body": "module-info在requires会直接报错\r\nreads package 'org.apache.poi.hssf.usermodel' from both 'poi' and 'easyexcel'\r\n除了改包，貌似无解，真不理解为什么要命名apache这样一个包名\r\njava9以下的没事。\r\n还有什么其他办法？",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2751/comments",
    "author": "ioi301",
    "comments": [
      {
        "user": "gongxuanzhang",
        "created_at": "2023-02-28T04:59:08Z",
        "body": "模块化无解。。。  要不直接把项目的module-info删掉吧   \r\n9及以上其实可以用，但是不支持模块化"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2023-03-04T05:59:45Z",
        "body": "3010的PR解决了这个问题 等待合并"
      }
    ]
  },
  {
    "number": 2699,
    "title": "web下载Excel抛异常NoClassDefFoundError",
    "created_at": "2022-09-05T09:17:00Z",
    "closed_at": "2023-02-03T04:56:33Z",
    "labels": [
      "bug",
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2699",
    "body": "Junit可以执行，可以下载到java目录，web下载就会报错\r\n执行sheet方法的时候，idea打断点出现的异常\r\n\r\ne = {NoClassDefFoundError@5398} \"java.lang.NoClassDefFoundError: Could not initialize class com.alibaba.excel.write.ExcelBuilderImpl\"\r\n detailMessage = \"Could not initialize class com.alibaba.excel.write.ExcelBuilderImpl\"\r\n cause = {NoClassDefFoundError@5398} \"java.lang.NoClassDefFoundError: Could not initialize class com.alibaba.excel.write.ExcelBuilderImpl\"\r\n stackTrace = {StackTraceElement[41]@5408} \r\n suppressedExceptions = {Collections$UnmodifiableRandomAccessList@5409}  size = 0\r\n\r\n有大佬遇到过吗",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2699/comments",
    "author": "zhuhaojava",
    "comments": [
      {
        "user": "hao96",
        "created_at": "2022-09-07T12:28:47Z",
        "body": "我遇到过这个问题：是easyexcel与poi版本不匹配导致的。\r\n修正后的maven依赖版本：\r\n<!-- excel工具类 -->\r\n        <dependency>\r\n            <groupId>org.apache.poi</groupId>\r\n            <artifactId>poi</artifactId>\r\n            <version>5.2.0</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.apache.poi</groupId>\r\n            <artifactId>poi-ooxml</artifactId>\r\n            <version>5.2.0</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>com.alibaba</groupId>\r\n            <artifactId>easyexcel</artifactId>\r\n            <version>3.0.5</version>\r\n        </dependency>"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2023-02-01T12:55:54Z",
        "body": "你和这个 需要看下加载器里面有没有这个类，应该是配置或者clean 下"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2023-02-03T04:56:33Z",
        "body": "不知道您是否已经通过其他渠道解决该问题？我们先暂时关闭这个问题，如果还存在问题请重新Reopen这个issue"
      }
    ]
  },
  {
    "number": 2578,
    "title": "继承AbstractCellStyleStrategy控制单元格样式，导致导出效率下降",
    "created_at": "2022-07-08T06:21:22Z",
    "closed_at": "2023-02-06T01:18:50Z",
    "labels": [
      "help wanted",
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2578",
    "body": "因为客户要求的excel样式问题，导致我们导出需要根据客户的需求进行定制。并且多个客户可能用到同一个导出，所以并不能准确的知道具体哪一列需要什么样的样式，因此，只能通过继承 AbstractCellStyleStrategy 类对特殊格式的单元格格式进行控制，让客户可以自定义某种样式，然后在AbstractCellStyleStrategy的子类中进行判断并设置单元格格式，这就导致数据量稍微大一点的时候，导出时间直接翻倍，分析应该是因为每个单元格都重新设置了格式而导致，请问有没有什么更好的解决办法。",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2578/comments",
    "author": "lin-cq",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2022-08-02T13:17:42Z",
        "body": "升级到3.1.1 版本了没？"
      },
      {
        "user": "lin-cq",
        "created_at": "2022-08-05T08:26:52Z",
        "body": "没有升级，后来通过别的方式优化了，3.1.1提供了新的解决方案吗，回头我去看下，谢谢"
      }
    ]
  },
  {
    "number": 2529,
    "title": "怎么给单元格设置自定义颜色，不是用IndexedColors中的颜色",
    "created_at": "2022-06-07T03:42:21Z",
    "closed_at": "2023-02-27T06:32:59Z",
    "labels": [
      "help wanted",
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2529",
    "body": "网上找了很多方法都用不了，没找到自己设置rgb颜色的方法",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2529/comments",
    "author": "nyzs",
    "comments": [
      {
        "user": "gongxuanzhang",
        "created_at": "2023-02-20T16:11:13Z",
        "body": "实现CellWriteHandler拿到单元格对象\r\n给你一段伪代码\r\n\r\n```\r\n// 创建自定义颜色对象\r\nXSSFColor customColor = new XSSFColor(new java.awt.Color(128, 128, 128));\r\n\r\n// 创建CellStyle对象\r\nCellStyle style = workbook.createCellStyle();\r\nstyle.setFillForegroundColor(customColor);\r\nstyle.setFillPattern(FillPatternType.SOLID_FOREGROUND);\r\n\r\n// 将CellStyle应用到单元格上\r\nCell cell = row.createCell(0);\r\ncell.setCellValue(\"Hello World\");\r\ncell.setCellStyle(style);\r\n```"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2023-02-27T06:32:59Z",
        "body": " 不知道您是否已经解决该问题？我们先暂时关闭这个问题，如果还存在问题请重新Reopen这个issue"
      },
      {
        "user": "laokewang",
        "created_at": "2024-03-20T01:26:35Z",
        "body": "你这个是什么版本的依赖，我2.2.6版本，setFillForegroundColor的入参是short类型 \r\n`    void setFillForegroundColor(short var1);`"
      },
      {
        "user": "startbug",
        "created_at": "2024-05-11T08:12:59Z",
        "body": "需要将CellStyle强转成XSSFCellStyle，在调用setFillForegroundColor就可以了``\r\n我使用的版本是com.alibaba:easyexcel:3.3.2，亲测有效\r\n```\r\nCell curCell = context.getCell();\r\nWorkbook workbook = context.getWriteWorkbookHolder().getWorkbook();\r\nXSSFCellStyle cellStyle = (XSSFCellStyle) workbook.createCellStyle();\r\ncellStyle.setFillForegroundColor(new XSSFColor(new Color(140, 221, 250)));\r\ncellStyle.setFillPattern(FillPatternType.SOLID_FOREGROUND);\r\ncurCell.setCellStyle(cellStyle);\r\ncontext.getFirstCellData().setWriteCellStyle(null);\r\n```"
      }
    ]
  },
  {
    "number": 2527,
    "title": "自定义的动态表头如何设置表头不可编辑",
    "created_at": "2022-06-06T07:19:56Z",
    "closed_at": "2023-03-04T05:51:38Z",
    "labels": [
      "help wanted",
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2527",
    "body": null,
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2527/comments",
    "author": "sermonlizhi",
    "comments": [
      {
        "user": "sermonlizhi",
        "created_at": "2022-06-06T08:46:39Z",
        "body": "通过下面的代码设置不可编辑，也是没有用\r\n```java\r\npublic class CustomCellWriteHandler implements CellWriteHandler {\r\n    @Override\r\n    public void afterCellDispose(WriteSheetHolder writeSheetHolder, WriteTableHolder writeTableHolder, List<WriteCellData<?>> cellDataList, Cell cell, Head head, Integer relativeRowIndex, Boolean isHead) {\r\n        if (isHead){\r\n            CellStyle cellStyle = cell.getCellStyle();\r\n            cellStyle.setLocked(true);\r\n            WriteFont writeFont = new WriteFont();\r\n            writeFont.setFontHeightInPoints((short) 15);\r\n            cell.setCellStyle(cellStyle);\r\n        }\r\n    }\r\n}\r\n```"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2023-02-28T05:12:45Z",
        "body": "POI\r\n\r\n> 通过下面的代码设置不可编辑，也是没有用\r\n> \r\n> ```java\r\n> public class CustomCellWriteHandler implements CellWriteHandler {\r\n>     @Override\r\n>     public void afterCellDispose(WriteSheetHolder writeSheetHolder, WriteTableHolder writeTableHolder, List<WriteCellData<?>> cellDataList, Cell cell, Head head, Integer relativeRowIndex, Boolean isHead) {\r\n>         if (isHead){\r\n>             CellStyle cellStyle = cell.getCellStyle();\r\n>             cellStyle.setLocked(true);\r\n>             WriteFont writeFont = new WriteFont();\r\n>             writeFont.setFontHeightInPoints((short) 15);\r\n>             cell.setCellStyle(cellStyle);\r\n>         }\r\n>     }\r\n> }\r\n> ```\r\n\r\nPOI要求  cellStyle.setLocked(true); 和保护密码同时创建才会生效\r\n\r\n```\r\n Sheet sheet = workbook.getSheetAt(0);\r\n            sheet.protectSheet(\"password\"); // 设置表单保护密码\r\n```"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2023-03-04T05:51:38Z",
        "body": "不知道您是否已经解决该问题？我们先暂时关闭这个问题，如果还存在问题请重新Reopen这个issue"
      }
    ]
  },
  {
    "number": 2409,
    "title": "如何设置单元格格式为数值？",
    "created_at": "2022-04-11T03:00:06Z",
    "closed_at": "2023-03-04T05:58:37Z",
    "labels": [
      "help wanted",
      "question",
      "pending verification"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2409",
    "body": "参考官方文档@ContentStyle(dataFormat = 1)设置，BUILTIN_FORMATS_CN这个类所有参数都试了，没有数值格式，求帮助\r\n\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2409/comments",
    "author": "zengss",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2022-05-06T13:22:42Z",
        "body": "什么叫做数字格式？具体用office 设置后贴出来"
      },
      {
        "user": "zengss",
        "created_at": "2022-05-07T03:20:13Z",
        "body": "单元格分类为数值\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n------------------&nbsp;原始邮件&nbsp;------------------\r\n发件人:                                                                                                                        \"alibaba/easyexcel\"                                                                                    ***@***.***&gt;;\r\n发送时间:&nbsp;2022年5月6日(星期五) 晚上9:22\r\n***@***.***&gt;;\r\n***@***.******@***.***&gt;;\r\n主题:&nbsp;Re: [alibaba/easyexcel] 如何设置单元格格式为数值？ (Issue #2409)\r\n\r\n\r\n\r\n\r\n\r\n \r\n什么叫做数字格式？具体用office 设置后贴出来\r\n \r\n—\r\nReply to this email directly, view it on GitHub, or unsubscribe.\r\nYou are receiving this because you authored the thread.Message ID: ***@***.***&gt;"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2022-05-11T06:47:56Z",
        "body": "尝试传 2 或者 直接用`NumberFormat` 注解"
      },
      {
        "user": "zy2203",
        "created_at": "2022-06-13T08:04:33Z",
        "body": "模板类里，定义字段的时候，不用String，用BigDecimal或Double等数值类型，导出的表格就是数值格式，不需要其他额外配置"
      },
      {
        "user": "JenSuper",
        "created_at": "2022-07-02T14:42:47Z",
        "body": "请问一下，实现了handler，为什么设置的数值格式不生效呢？\r\nimplements CellWriteHandler \r\n\r\npublic void afterCellDispose(CellWriteHandlerContext context) {\r\ncellDataList.forEach(cellData->{\r\n                String stringValue = cellData.getStringValue();\r\n                if (NumberUtils.isCreatable(stringValue)) {\r\n                    System.out.println();\r\n                    cellData.setType(CellDataTypeEnum.NUMBER);\r\n                    WriteCellStyle writeCellStyle = cellData.getOrCreateStyle();\r\n                    DataFormatData dataFormatData = new DataFormatData();\r\n                    dataFormatData.setFormat(\"0.0\");\r\n                    writeCellStyle.setDataFormatData(dataFormatData);\r\n                    cellData.setWriteCellStyle(writeCellStyle);\r\n                }\r\n});\r\n}"
      },
      {
        "user": "JenSuper",
        "created_at": "2022-07-02T15:39:02Z",
        "body": "在看测试类的时候发现，如果对象的类型不是数值类型，那么DataFormatData的格式设置为数值格式，最终导出来的结果还是字符串，这一点感觉不太友好，有办法按照自己的想法处理数据的格式吗？我记得poi是支持的"
      },
      {
        "user": "JenSuper",
        "created_at": "2022-07-02T15:39:47Z",
        "body": "是通过这个方法验证的\r\n@Test\r\n    public void simpleWrite3() {\r\n        // 写法1\r\n        String fileName = TestFileUtil.getPath() + \"t33\" + System.currentTimeMillis() + \".xlsx\";\r\n        // 这里 需要指定写用哪个class去读，然后写到第一个sheet，名字为模板 然后文件流会自动关闭\r\n        // 如果这里想使用03 则 传入excelType参数即可\r\n        EasyExcel.write(fileName).head(head()).inMemory(true).sheet(\"模板\").registerWriteHandler(new WriteCellHandler()).doWrite(\r\n            data1());\r\n    }"
      },
      {
        "user": "JenSuper",
        "created_at": "2022-07-03T05:53:55Z",
        "body": "经过测试，按照以下写法可以实现数字格式化，及其他单元格格式的设置\r\n\r\npublic class CustomWriteHandler implements CellWriteHandler {\r\n\r\n@Override\r\n    public void afterCellDataConverted(WriteSheetHolder writeSheetHolder, WriteTableHolder writeTableHolder, WriteCellData<?> cellData, Cell cell, Head head, Integer relativeRowIndex, Boolean isHead) {\r\n        String stringValue = cellData.getStringValue();\r\n        // 数字\r\n        if (NumberUtils.isCreatable(stringValue)) {\r\n            WriteCellStyle writeCellStyle = new WriteCellStyle();\r\n            DataFormatData dataFormatData = new DataFormatData();\r\n            dataFormatData.setIndex(HSSFDataFormat.getBuiltinFormat(\"0.00\"));\r\n            writeCellStyle.setDataFormatData(dataFormatData);\r\n            cellData.setNumberValue(new BigDecimal(stringValue));\r\n            cellData.setType(CellDataTypeEnum.NUMBER);\r\n            cellData.setWriteCellStyle(writeCellStyle);\r\n        }\r\n\r\n        // 百分比\r\n        if (stringValue.contains(\"%\")) {\r\n            WriteCellStyle writeCellStyle = new WriteCellStyle();\r\n            DataFormatData dataFormatData = new DataFormatData();\r\n            dataFormatData.setIndex(HSSFDataFormat.getBuiltinFormat(\"0.00%\"));\r\n            writeCellStyle.setDataFormatData(dataFormatData);\r\n            cellData.setNumberValue(new BigDecimal(stringValue.replace(\"%\", \"\")));\r\n            cellData.setType(CellDataTypeEnum.NUMBER);\r\n            cellData.setWriteCellStyle(writeCellStyle);\r\n\r\n        }\r\n    }\r\n}"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2023-03-04T05:58:37Z",
        "body": "read不知道您是否已经解决该问题？我们先暂时关闭这个问题，如果还存在问题请重新Reopen这个issue"
      },
      {
        "user": "bwensun",
        "created_at": "2024-12-03T06:55:49Z",
        "body": "> 经过测试，按照以下写法可以实现数字格式化，及其他单元格格式的设置\r\n> \r\n> public class CustomWriteHandler implements CellWriteHandler {\r\n> \r\n> @OverRide public void afterCellDataConverted(WriteSheetHolder writeSheetHolder, WriteTableHolder writeTableHolder, WriteCellData<?> cellData, Cell cell, Head head, Integer relativeRowIndex, Boolean isHead) { String stringValue = cellData.getStringValue(); // 数字 if (NumberUtils.isCreatable(stringValue)) { WriteCellStyle writeCellStyle = new WriteCellStyle(); DataFormatData dataFormatData = new DataFormatData(); dataFormatData.setIndex(HSSFDataFormat.getBuiltinFormat(\"0.00\")); writeCellStyle.setDataFormatData(dataFormatData); cellData.setNumberValue(new BigDecimal(stringValue)); cellData.setType(CellDataTypeEnum.NUMBER); cellData.setWriteCellStyle(writeCellStyle); }\r\n> \r\n> ```\r\n>     // 百分比\r\n>     if (stringValue.contains(\"%\")) {\r\n>         WriteCellStyle writeCellStyle = new WriteCellStyle();\r\n>         DataFormatData dataFormatData = new DataFormatData();\r\n>         dataFormatData.setIndex(HSSFDataFormat.getBuiltinFormat(\"0.00%\"));\r\n>         writeCellStyle.setDataFormatData(dataFormatData);\r\n>         cellData.setNumberValue(new BigDecimal(stringValue.replace(\"%\", \"\")));\r\n>         cellData.setType(CellDataTypeEnum.NUMBER);\r\n>         cellData.setWriteCellStyle(writeCellStyle);\r\n> \r\n>     }\r\n> }\r\n> ```\r\n> \r\n> }\r\n\r\n确实是这样，得在转换时做样式设置才行"
      }
    ]
  },
  {
    "number": 2397,
    "title": "easyexcel3.0.5无法读取到excel内容，excel手动Ctrl s保存一下后就可以读取，附相关代码以及报错",
    "created_at": "2022-04-02T02:42:28Z",
    "closed_at": "2022-05-11T06:45:53Z",
    "labels": [
      "help wanted",
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2397",
    "body": "```java\r\n   EasyExcel.read(file, new DemoExcelSheetListener).sheet(0).doRead();\r\n```\r\n**异常提示**\r\njava.lang.IndexOutOfBoundsException: Index: 164, Size: 0\r\n\tat java.util.ArrayList.rangeCheck(ArrayList.java:653)\r\n\tat java.util.ArrayList.get(ArrayList.java:429)\r\n\tat com.alibaba.excel.cache.MapCache.get(MapCache.java:29)\r\n\tat com.alibaba.excel.analysis.v07.handlers.CellTagHandler.endElement(CellTagHandler.java:68)\r\n\tat com.alibaba.excel.analysis.v07.handlers.sax.XlsxRowHandler.endElement(XlsxRowHandler.java:91)\r\n\tat com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.endElement(AbstractSAXParser.java:609)\r\n\tat com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanEndElement(XMLDocumentFragmentScannerImpl.java:1782)\r\n\tat com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:2967)\r\n\tat com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:602)\r\n\tat com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:505)\r\n\tat com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:841)\r\n\tat com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:770)\r\n\tat com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141)\r\n\tat com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1213)\r\n\tat com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser.parse(SAXParserImpl.java:643)\r\n\tat com.alibaba.excel.analysis.v07.XlsxSaxAnalyser.parseXmlSource(XlsxSaxAnalyser.java:197)\r\n\tat com.alibaba.excel.analysis.v07.XlsxSaxAnalyser.execute(XlsxSaxAnalyser.java:218)\r\n\tat com.alibaba.excel.analysis.ExcelAnalyserImpl.analysis(ExcelAnalyserImpl.java:123)\r\n\tat com.alibaba.excel.ExcelReader.read(ExcelReader.java:67)\r\n\tat com.alibaba.excel.ExcelReader.read(ExcelReader.java:57)\r\n\tat com.alibaba.excel.read.builder.ExcelReaderSheetBuilder.doRead(ExcelReaderSheetBuilder.java:65)\r\n\tat com.cicc.util.StringUtils.main(StringUtils.java:280)\r\n**建议描述**\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2397/comments",
    "author": "15935141109",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2022-04-06T09:57:40Z",
        "body": "这个需要提供excel"
      },
      {
        "user": "xmmw",
        "created_at": "2022-04-15T03:37:06Z",
        "body": "我也遇见你说的情况了, 按你说的 ctrl s就好了..."
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2022-05-11T06:45:53Z",
        "body": "这个问题是否已经解决？未解决请重新打开问题"
      }
    ]
  },
  {
    "number": 2362,
    "title": "导出excel不添加密码可以正常导出，加了密码后输入密码提示文件损坏",
    "created_at": "2022-03-16T13:58:15Z",
    "closed_at": "2022-05-06T13:27:18Z",
    "labels": [
      "help wanted",
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2362",
    "body": "**异常代码**\r\n```java\r\n        response.setContentType(\"application/octet-stream\");\r\n        response.setCharacterEncoding(\"utf-8\");\r\n        response.setHeader(\"Access-Control-Expose-Headers\", \"Content-Disposition\");\r\n        response.setHeader(\"Content-Disposition\", \"attachment;filename=\" + URLEncoder.encode(\"导出excel\", \"UTF-8\") + \".xls\");\r\n        @Cleanup(\"finish\") ExcelWriter excelWriter = EasyExcel.write(new BufferedOutputStream(response.getOutputStream()), RiskPersonExcelOutDTO.class)\r\n                .autoCloseStream(Boolean.TRUE).excelType(ExcelTypeEnum.XLSX).needHead(Boolean.TRUE)\r\n                .password(\"a123456\").build();\r\n        //初始化sheet\r\n        WriteSheet writeSheet = EasyExcel.writerSheet().build();\r\n        writeSheet.setSheetNo(1);\r\n        writeSheet.setSheetName(\"默认表\");\r\n        excelWriter.write(list,writeSheet);\r\n```\r\n**异常提示**\r\n系统并未出现异常，且加密后的文件一直都是4.0KB\r\n\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2362/comments",
    "author": "doudouBingMan",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2022-04-06T16:12:20Z",
        "body": "尝试直接调出到 文件试试"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2022-05-06T13:27:18Z",
        "body": "这个问题是否已经解决？未解决请重新打开"
      },
      {
        "user": "shizhenglg",
        "created_at": "2022-11-21T13:31:22Z",
        "body": "怎么处理的2.X也遇到此问题"
      },
      {
        "user": "Simple-Stark",
        "created_at": "2024-12-02T09:00:16Z",
        "body": "EasyExcel.write(\"D:\\\\Users\\\\wangr\\\\Documents\\\\测试\\\\测试加密.xlsx\", TaskLog.class)\r\n            .excelType(ExcelTypeEnum.XLS)\r\n            .password(\"123456\")\r\n            .sheet(\"test\")\r\n            .doWrite(list);\r\n            \r\n2.1.6 新增 .excelType(ExcelTypeEnum.XLS) 可以解决该问题"
      }
    ]
  },
  {
    "number": 2338,
    "title": "excel设置了只读，如何获取到数据",
    "created_at": "2022-02-25T02:28:27Z",
    "closed_at": "2022-05-06T13:30:24Z",
    "labels": [
      "help wanted",
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2338",
    "body": "如题，excel文档设置了只读模式，解析的时候获取不到数据，请问怎样操作能获取到只读文档的数据\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2338/comments",
    "author": "skddyj",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2022-04-06T15:00:57Z",
        "body": "能否提供下excel 我测试了一个只读是可以的"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2022-05-06T13:30:24Z",
        "body": "这个问题是否已经解决？未解决请重新打开"
      },
      {
        "user": "skddyj",
        "created_at": "2022-05-06T13:34:14Z",
        "body": "你好，抱歉刚看到这个消息，我后来找到了读不出的原因，是因为有一个sheet页设置了绝对隐藏，导致了读取不到这个sheet，取消了绝对隐藏之后就可以了，不知道后面会增加绝对隐藏sheet的读取吗？"
      }
    ]
  },
  {
    "number": 2228,
    "title": "读取file后，无法删除（3.0.5）",
    "created_at": "2021-12-15T02:11:11Z",
    "closed_at": "2022-08-03T02:59:39Z",
    "labels": [
      "bug",
      "question",
      "pending verification"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2228",
    "body": "File file = new File(\"D:\\\\1.csv\");\r\nEasyExcel.read(file).sheet().doRead();\r\nfile.delete(); // false",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2228/comments",
    "author": "sandnul025",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2022-02-11T12:53:06Z",
        "body": "实际测试可以删除 什么场景？"
      },
      {
        "user": "sandnul025",
        "created_at": "2022-03-10T02:17:11Z",
        "body": "> 实际测试可以删除 什么场景？\r\n\r\n我在window上测试的，就定时任务去读取文件，读取完删除，刚才又试了一下。\r\n``\r\n@Slf4j\r\n@Component\r\npublic class TestKafka {\r\n\r\n    @Autowired\r\n    private KafkaTemplate kafkaTemplate;\r\n\r\n    private final String topic = \"test_topic\";\r\n    private Boolean flag = true;\r\n\r\n    @Scheduled(cron = \"0/5 * * * * ?\")\r\n    public void produ() {\r\n\r\n        if (flag) {\r\n            File file = new File(\"D:\\\\1.csv\");\r\n            EasyExcel.read(file).sheet().doRead();\r\n            System.out.println(file.delete());\r\n            flag = false;\r\n        }\r\n\r\n        Map<String, Object> data = new HashMap<>();\r\n        data.put(\"name\", \"test\");\r\n        data.put(\"desc\", IdUtil.fastSimpleUUID());\r\n        kafkaTemplate.send(topic, JSON.toJSONString(data));\r\n    }\r\n\r\n    @KafkaListener(id = topic, topics = topic)\r\n    public void coum(ConsumerRecord consumerRecord) {\r\n        System.out.println(consumerRecord.key() + \" \" +JSON.toJSONString(consumerRecord.value()));\r\n    }\r\n}\r\n\r\n``"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2022-05-11T06:16:42Z",
        "body": "有没有尝试过 不读取 直接删除？"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2022-08-03T02:59:39Z",
        "body": "这个问题是否已经解决？如果未解决 请重新打开问题。"
      }
    ]
  },
  {
    "number": 2195,
    "title": "Can not close IO.",
    "created_at": "2021-11-19T09:19:33Z",
    "closed_at": "2022-05-11T06:19:56Z",
    "labels": [
      "bug",
      "question",
      "pending verification"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2195",
    "body": "版本：\r\ncom.alibaba：easyexcel：2.2.10；\r\norg.apache.poi：poi：4.1.0\r\n\r\n代码：\r\ntry {\r\n            //输出Excel文件\r\n            response.setHeader(\"Content-disposition\", \"attachment; filename=\" +\r\n                    new String(fileName.getBytes(StandardCharsets.UTF_8), StandardCharsets.ISO_8859_1) + \".xls\");\r\n            response.setContentType(\"application/x-xls\");\r\n            ExcelWriter writer = EasyExcel.write(response.getOutputStream()).build();\r\n            for (int i = 0; i < entities.size(); i++) {\r\n                EasyExcelMoreSheetEntity entity = entities.get(i);\r\n                Class clazz = entity.getClazz();\r\n                List list = entity.getList();\r\n                Map<String, String> vars = entity.getVars();\r\n                resetCLassAnnotationValue(clazz);\r\n                setExportClassAnnotation(clazz, vars);\r\n                String sheetName = entity.getSheetName();\r\n                List<WriteHandler> handlers = entity.getHandlers();\r\n                ExcelWriterSheetBuilder builder = EasyExcel.writerSheet(i, sheetName);\r\n                if (!ObjectUtils.isEmpty(handlers)) {\r\n                    for (WriteHandler handler : handlers) {\r\n                        builder.registerWriteHandler(handler);\r\n                    }\r\n                }\r\n                WriteSheet writeSheet = builder.head(clazz).build();\r\n                writer.write(list, writeSheet);\r\n            }\r\n        } catch (Exception e) {\r\n            log.error(\"EasyExcel export more sheet excel error:[{}]\", CommonUtil.getExceptionMessage(e));\r\n        }\r\n出现：Can not close IO.",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2195/comments",
    "author": "moshengkang",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2022-04-06T15:23:51Z",
        "body": "这个需要贴全堆栈异常"
      },
      {
        "user": "JanGin",
        "created_at": "2022-04-11T08:26:39Z",
        "body": "遇到同样的问题：\r\n```\r\n                ExcelWriter writer = null;\r\n\t\ttry {\r\n                        response.setCharacterEncoding(StandardCharsets.UTF_8.toString());\r\n\t\t\tresponse.setContentType(\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\");\r\n\t\t\tresponse.setHeader(HttpHeaders.CACHE_CONTROL, CacheControl.noCache().mustRevalidate().toString());\r\n\t\t\tresponse.setHeader(HttpHeaders.CONTENT_DISPOSITION, ContentDisposition.builder(\"attachment\")\r\n\t\t\t\t\t.filename(fileName, StandardCharsets.UTF_8)\r\n\t\t\t\t\t.build().toString());\r\n\t\t\tresponse.setHeader(HttpHeaders.PRAGMA, \"no-cache\");\r\n\t\t\tresponse.setHeader(HttpHeaders.EXPIRES, \"0\");\r\n\t\t\t\r\n\t\t\twriter = EasyExcel.write(response.getOutputStream(), Data.class)\r\n\t\t\t\t\t                    .needHead(Boolean.TRUE)\r\n\t\t\t\t\t\t\t\t\t\t.excelType(ExcelTypeEnum.XLSX)\r\n\t\t\t\t\t                    .autoCloseStream(Boolean.TRUE).build();\r\n\t\t\tWriteSheet sheet = EasyExcel.writerSheet(filename)\r\n\t\t\t\t\t                   .registerWriteHandler(new CustomCellWriteHandler())\r\n\t\t\t\t\t\t\t\t.registerWriteHandler(getExcelWriterStrategy()).build();\r\n\t\t\tList<Data> data= excelService.getData(dto);\r\n\t\t\twriter.write(data, sheet);\r\n\r\n\t\t} catch (Exception e) {\r\n\t\t\tlog.error(\"export data exception\", e);\r\n\t\t} finally {\r\n\t\t\tif (writer != null) {\r\n\t\t\t\twriter.finish();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n```\r\n---\r\n完整堆栈信息如下：\r\n```\r\njava.io.IOException: 浣犵殑涓绘満涓殑杞欢涓浜嗕竴涓凡寤虹珛鐨勮繛鎺ャ��\r\n\tat sun.nio.ch.SocketDispatcher.write0(Native Method)\r\n\tat sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:51)\r\n\tat sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:93)\r\n\tat sun.nio.ch.IOUtil.write(IOUtil.java:65)\r\n\tat sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:468)\r\n\tat org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:138)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1279)\r\n\tat org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:741)\r\n\tat org.apache.tomcat.util.net.SocketWrapperBase.writeBlocking(SocketWrapperBase.java:561)\r\n\tat org.apache.tomcat.util.net.SocketWrapperBase.write(SocketWrapperBase.java:505)\r\n\tat org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer.doWrite(Http11OutputBuffer.java:538)\r\n\tat org.apache.coyote.http11.filters.ChunkedOutputFilter.doWrite(ChunkedOutputFilter.java:110)\r\n\tat org.apache.coyote.http11.Http11OutputBuffer.doWrite(Http11OutputBuffer.java:190)\r\n\tat org.apache.coyote.Response.doWrite(Response.java:601)\r\n\tat org.apache.catalina.connector.OutputBuffer.realWriteBytes(OutputBuffer.java:339)\r\n\tat org.apache.catalina.connector.OutputBuffer.flushByteBuffer(OutputBuffer.java:776)\r\n\tat org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:298)\r\n\tat org.apache.catalina.connector.OutputBuffer.close(OutputBuffer.java:251)\r\n\tat org.apache.catalina.connector.CoyoteOutputStream.close(CoyoteOutputStream.java:157)\r\n\tat com.alibaba.excel.context.WriteContextImpl.finish(WriteContextImpl.java:373)\r\n\tat com.alibaba.excel.write.ExcelBuilderImpl.finish(ExcelBuilderImpl.java:99)\r\n\tat com.alibaba.excel.ExcelWriter.finish(ExcelWriter.java:143)\r\n\tat com.montnets.uri.controller.StatExportController.exportOverallTrend(StatExportController.java:103)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:634)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:741)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n```\r\n"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2022-05-11T06:19:56Z",
        "body": "这个问题是否已经解决？未解决请重新打开"
      }
    ]
  },
  {
    "number": 2131,
    "title": "@ExcelProperty 无法对动态生成表头进行映射",
    "created_at": "2021-10-13T06:37:24Z",
    "closed_at": "2021-11-09T12:13:31Z",
    "labels": [
      "help wanted",
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2131",
    "body": "使用@ExcelProperty  value的方式，无法和动态生成的表头映射\r\nexcel中写入的顺序还是DemoData字段的顺序。",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2131/comments",
    "author": "caicai-w",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2021-10-29T12:06:39Z",
        "body": "贴全代码看看"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2021-11-09T12:13:31Z",
        "body": "这个问题是否已经解决？未解决请重新打开问题\r\n\r\n"
      }
    ]
  },
  {
    "number": 2068,
    "title": "模板有多个sheet，只能填充模板第一个sheet，第二个sheet报空指针错误",
    "created_at": "2021-09-09T15:47:59Z",
    "closed_at": "2021-10-09T10:27:37Z",
    "labels": [
      "help wanted",
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2068",
    "body": "一个excel文件还有多个sheet，当做模板。\r\n然后填充一个数据\r\n HapFillData fillData = new HapFillData();\r\n        fillData.setBuilding(5);\r\n        fillData.setRoom(701);\r\n\r\n ExcelWriter excelWriter = EasyExcel.write(fileName).withTemplate(templateFileName).build();\r\n\r\n WriteSheet writeSheet1 = EasyExcel.writerSheet(0,\"房号及付款方式查询表\").build();\r\n WriteSheet writeSheet2 = EasyExcel.writerSheet(1,\"付款方式\").build();\r\n\r\n excelWriter.fill(fillData, writeSheet1);  // 只执行这一句，不报错，excel文件的第一个sheet也被正确填充了\r\n excelWriter.fill(fillData, writeSheet2); // 加了这句，要填充第二个sheet，就报错了，空指针错误\r\n\r\n        if(excelWriter != null) {\r\n            excelWriter.finish();\r\n        }\r\n\r\n怎么操作除了第一个sheet外的其他sheet？ 都直接报错。 哪怕我不操作第一个sheet，只执行对第二个sheet的数据填充，也会报空指针异常。\r\n\r\n求解，怎么可以对模板的第二个sheet像第一个sheet那样进行数据填充？\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2068/comments",
    "author": "deep1981",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2021-09-13T12:11:34Z",
        "body": "需要提供excel"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2021-10-09T10:27:37Z",
        "body": "这个是否已经解决，如果未解决则重新打开问题。"
      }
    ]
  },
  {
    "number": 2067,
    "title": "导入时每一行中的每一个单元格都有可能是空值，空单元格也想set到对象",
    "created_at": "2021-09-09T06:41:19Z",
    "closed_at": "2021-10-09T10:28:26Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2067",
    "body": "导入时每一行中的每一个单元格都有可能是空值，我使用对象接收，但是这些空值的单元格并没有被set到对象中，有什么解决方法？",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2067/comments",
    "author": "ProphetCai",
    "comments": [
      {
        "user": "wqh0109663",
        "created_at": "2021-09-10T01:04:28Z",
        "body": "```cmd\r\n.ignoreEmptyRow(false).sheet().doRead() \r\n```"
      },
      {
        "user": "ProphetCai",
        "created_at": "2021-09-10T05:46:38Z",
        "body": "> ```batchfile\r\n> .ignoreEmptyRow(false).sheet().doRead() \r\n> ```\r\n\r\n你这个是读空行不忽略，我是要读非空行中的某个空单元格"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2021-09-13T12:13:53Z",
        "body": "空值需要设置什么进来？我的理解空值就是null"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2021-10-09T10:28:26Z",
        "body": "这个是否已经解决？如果未解决则重新打开问题。"
      }
    ]
  },
  {
    "number": 2061,
    "title": "WriteWorkbook 的 setNeedHead 无效",
    "created_at": "2021-09-03T02:12:18Z",
    "closed_at": "2021-10-09T10:28:42Z",
    "labels": [
      "bug",
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2061",
    "body": "没有生成表头\r\n```java\r\nWriteWorkbook workbook = new WriteWorkbook();\r\nworkbook.setOutputStream(out);\r\nworkbook.setNeedHead(true);\r\nExcelWriter excelWriter = new ExcelWriter(workbook);\r\n```\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2061/comments",
    "author": "caiqichang",
    "comments": [
      {
        "user": "caiqichang",
        "created_at": "2021-09-03T02:19:35Z",
        "body": "WriteSheet 的也无效\r\n```java\r\nWriteSheet sheet = new WriteSheet();\r\n            sheet.setNeedHead(true);\r\n```"
      },
      {
        "user": "caiqichang",
        "created_at": "2021-09-03T02:24:57Z",
        "body": "连这个过时的方法也无效？？？\r\n```java\r\nExcelWriter excelWriter = new ExcelWriter(out, ExcelTypeEnum.XLSX, true);\r\n```"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2021-09-14T03:11:10Z",
        "body": "贴全代码"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2021-10-09T10:28:42Z",
        "body": "这个是否已经解决？如果未解决则重新打开问题。"
      }
    ]
  },
  {
    "number": 2055,
    "title": "将 sheet 中所有的 cell 设置成 unlock，包含没生成的 cell",
    "created_at": "2021-08-27T12:16:01Z",
    "closed_at": "2021-10-09T10:30:51Z",
    "labels": [
      "help wanted",
      "question",
      "pending verification"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2055",
    "body": "问题：\r\n锁定了表头，设置了保护 sheet，\r\n将某些列解锁，但是操作 excel 行复制的时候（将 第三行复制到第四行），提示表格被锁定，因为我设置了前 500 列的表格 setLock(false)，但是 500 列之后的 cell 还是 lock，导致行复制的时候，有锁定的提示",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2055/comments",
    "author": "chenqx33",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2021-09-17T10:30:21Z",
        "body": "请详细描述下问题"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2021-10-09T10:30:51Z",
        "body": "这个是否已经解决？如果未解决则重新打开问题。"
      }
    ]
  },
  {
    "number": 2052,
    "title": "执行\"读操作\"时,报错Failed resolution of: Ljavax/xml/stream/XMLEventFactory;",
    "created_at": "2021-08-26T10:29:42Z",
    "closed_at": "2021-10-09T10:28:55Z",
    "labels": [
      "help wanted",
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2052",
    "body": "调用该方法执行\"读操作\"时,报错了:EasyExcel.read(\"/storage/emulated/0/demo.xlsx\", DemoData.class, new DemoDataListener()).sheet().doRead().",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2052/comments",
    "author": "shijia2118",
    "comments": [
      {
        "user": "shijia2118",
        "created_at": "2021-08-26T10:30:32Z",
        "body": "补充下:pom中没有另外依赖poi"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2021-09-14T03:15:34Z",
        "body": "贴全异常"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2021-10-09T10:28:55Z",
        "body": "这个是否已经解决？如果未解决则重新打开问题。"
      }
    ]
  },
  {
    "number": 2010,
    "title": "读取excel文件不执行doAfterAnalysed方法",
    "created_at": "2021-07-16T10:17:29Z",
    "closed_at": "2021-10-09T10:29:13Z",
    "labels": [
      "help wanted",
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2010",
    "body": "从数据库直接导出的excel文件直接解析，invoke执行了，但是没有执行doAfterAnalysed方法。\r\n但打开excel文件重新保存一下，invoke和doAfterAnalysed方法都执行了。\r\n\r\n另外直接导出的文件会出现最后一条不进行invoke的情况，保存下excel文件又是正常的了。\r\n\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2010/comments",
    "author": "LibraSlyvia",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2021-09-14T03:37:24Z",
        "body": "这个需要提供excel"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2021-10-09T10:29:13Z",
        "body": "这个是否已经解决？如果未解决则重新打开问题。"
      }
    ]
  },
  {
    "number": 1999,
    "title": "设置总行数的时候 报了一个NumberFormatException 无法将$45转为int值",
    "created_at": "2021-07-03T12:53:47Z",
    "closed_at": "2021-10-09T10:31:10Z",
    "labels": [
      "bug",
      "question",
      "pending verification"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1999",
    "body": "**触发场景描述**\r\n   公司人员在做客户excel导入，经常会出现报错情况，\r\n经排查是获取总行数时CountTagHandler.startElement（）方法抛出了一个NumberFormatException错误，\r\n尝试将一个 “$45” 字符转换成 int   \r\n建议是在方法中的        \r\nString c = totalStr.toUpperCase().replaceAll(\"[A-Z]\", \"\");     增加上$特殊字符替换\r\n**触发Bug的代码**\r\n```java\r\n路径com.alibaba.excel.analysis.v07.handlers   \r\n 类名CountTagHandler\r\n  方法名startElement\r\n\r\n    @Override\r\n    public void startElement(XlsxReadContext xlsxReadContext, String name, Attributes attributes) {\r\n        String d = attributes.getValue(ExcelXmlConstants.ATTRIBUTE_REF);\r\n        String totalStr = d.substring(d.indexOf(\":\") + 1, d.length());\r\n        String c = totalStr.toUpperCase().replaceAll(\"[A-Z]\", \"\");\r\n        xlsxReadContext.readSheetHolder().setApproximateTotalRowNumber(Integer.parseInt(c));\r\n    }\r\n\r\n```\r\n**提示的异常或者没有达到的效果**\r\n抛出一个 NumberFormatException \r\n总行数是框架内部主动获取的，外部代码无法做任何操作规避这个bug\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1999/comments",
    "author": "EasonLink",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2021-09-17T11:41:17Z",
        "body": "提供下excel 感谢"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2021-10-09T10:31:10Z",
        "body": "这个是否已经解决？如果未解决则重新打开问题。"
      }
    ]
  },
  {
    "number": 1969,
    "title": "java.lang.IllegalArgumentException: Attempting to write a row[0] in the range [0,500] that is already written to disk.",
    "created_at": "2021-06-03T14:08:05Z",
    "closed_at": "2021-10-09T10:31:17Z",
    "labels": [
      "bug",
      "question",
      "pending verification"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1969",
    "body": "java.lang.IllegalArgumentException: Attempting to write a row[0] in the range [0,500] that is already written to disk.",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1969/comments",
    "author": "Kingsea442",
    "comments": [
      {
        "user": "Kingsea442",
        "created_at": "2021-06-04T02:30:01Z",
        "body": "复现场景：\r\n大数据场景\r\n每次往一个sheet里写1000行，然后超过5万行就创建个新的sheet。\r\n问题出在同一个sheet，第二次写入即 1000-2000的时候\r\n\r\n\r\njava.lang.IllegalArgumentException: Attempting to write a row[0] in the range [0,500] that is already written to disk.\r\n\tat org.apache.poi.xssf.streaming.SXSSFSheet.createRow(SXSSFSheet.java:131)\r\n\tat org.apache.poi.xssf.streaming.SXSSFSheet.createRow(SXSSFSheet.java:65)\r\n\tat com.alibaba.excel.util.WorkBookUtil.createRow(WorkBookUtil.java:70)\r\n\tat com.alibaba.excel.context.WriteContextImpl.initHead(WriteContextImpl.java:205)\r\n\tat com.alibaba.excel.context.WriteContextImpl.initSheet(WriteContextImpl.java:173)\r\n\tat com.alibaba.excel.context.WriteContextImpl.currentSheet(WriteContextImpl.java:114)\r\n\tat com.alibaba.excel.write.ExcelBuilderImpl.addContent(ExcelBuilderImpl.java:56)\r\n\tat com.alibaba.excel.ExcelWriter.write(ExcelWriter.java:161)\r\n\tat com.alibaba.excel.ExcelWriter.write(ExcelWriter.java:146)\r\n\tat "
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2021-09-17T11:50:18Z",
        "body": "贴全代码"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2021-10-09T10:31:17Z",
        "body": "这个是否已经解决？如果未解决则重新打开问题。"
      },
      {
        "user": "1842626921",
        "created_at": "2021-11-08T02:53:29Z",
        "body": "我也是这个问题，好像是一批数据已经放入内存，最后合并单元格边框线样式的时候会出现找不到所需要的row，因为在内存里；可是这个问题该怎么解决呢？"
      }
    ]
  },
  {
    "number": 1870,
    "title": "写操作-list中classType与指定的head的类型不一致，导致部分字段被覆盖为空cell",
    "created_at": "2021-04-15T09:15:58Z",
    "closed_at": "2021-09-17T14:41:02Z",
    "labels": [
      "bug",
      "question",
      "pending verification",
      "development completed"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1870",
    "body": "**触发场景描述**\r\nwrite时  list数据泛型与指定的head class类型不一致时，且两个类字段顺序有差异时，会导致list中数据有字段丢失\r\n**触发Bug的代码**\r\n类及方法：com.alibaba.excel.write.executor.ExcelWriteAddExecutor#addJavaObjectToExcel\r\n```java\r\n   for (Map.Entry<Integer, Field> entry : sortedAllFiledMap.entrySet()) {\r\n            // here\r\n            _**cellIndex = entry.getKey();**_\r\n            Field field = entry.getValue();\r\n            String filedName = field.getName();\r\n            boolean uselessData = !beanMap.containsKey(filedName) || beanMapHandledSet.contains(filedName)\r\n                || ignoreMap.containsKey(filedName);\r\n            if (uselessData) _{_\r\n                continue;\r\n            }\r\n            Object value = beanMap.get(filedName);\r\n            WriteHandlerUtils.beforeCellCreate(writeContext, row, null, cellIndex, relativeRowIndex, Boolean.FALSE);\r\n           // here\r\n            _**Cell cell = WorkBookUtil.createCell(row, cellIndex);**_\r\n            WriteHandlerUtils.afterCellCreate(writeContext, cell, null, relativeRowIndex, Boolean.FALSE);\r\n            CellData cellData = converterAndSet(currentWriteHolder, value == null ? null : value.getClass(), cell,\r\n                value, null, null, relativeRowIndex);\r\n            WriteHandlerUtils.afterCellDispose(writeContext, cellData, cell, null, relativeRowIndex, Boolean.FALSE);\r\n        }\r\n```\r\n**提示的异常或者没有达到的效果**\r\nlist中的一些字段被后面的空cell覆盖了",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1870/comments",
    "author": "rockRust",
    "comments": [
      {
        "user": "rockRust",
        "created_at": "2021-04-15T09:43:33Z",
        "body": "已解决，见pr#1871"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2021-04-19T02:24:41Z",
        "body": "非常感谢您的pr.\r\n1. 导包排序有问题 不允许出现* \r\n2.  我没有看懂具体问题是啥\r\n3.  153行             Cell cell = WorkBookUtil.createCell(row, cellIndex++) 什么意思 没懂"
      },
      {
        "user": "rockRust",
        "created_at": "2021-04-19T11:41:16Z",
        "body": "> 非常感谢您的pr.\r\n> \r\n> 1. 导包排序有问题 不允许出现*\r\n     已解决\r\n> 2. 我没有看懂具体问题是啥\r\n    已私聊\r\n> 3. 153行             Cell cell = WorkBookUtil.createCell(row, cellIndex++) 什么意思 没懂\r\n    已私聊\r\n\r\n"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2021-09-17T14:41:02Z",
        "body": "已经在`3.0.0-beta1` 版本修复，beta版本会在一个月内升级成正式版。"
      }
    ]
  },
  {
    "number": 1865,
    "title": "不创建对象的方式导出Excel，cell 值是空字符串导出后的excel无法使用公式计算 fx=K15+K17",
    "created_at": "2021-04-11T13:12:38Z",
    "closed_at": "2021-04-16T09:17:58Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1865",
    "body": "例如：fx=K15+K17\r\nk15\r\nk16\r\nk17   0.5\r\n\r\n结果 #VALUE!",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1865/comments",
    "author": "shifefiei",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2021-04-12T02:08:03Z",
        "body": "直接放`null`试试"
      },
      {
        "user": "shifefiei",
        "created_at": "2021-04-16T09:17:54Z",
        "body": "\r\n\r\n\r\n> 直接放`null`试试\r\n\r\n好使，已解决"
      }
    ]
  },
  {
    "number": 1643,
    "title": "自定义合并单元格策略并且使用动态表头，自定义合并单元格策略失效",
    "created_at": "2020-11-03T07:39:41Z",
    "closed_at": "2021-04-09T12:43:55Z",
    "labels": [
      "help wanted",
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1643",
    "body": "自定义合并单元格策略并且使用动态表头，自定义合并单元格策略失效\r\n\r\n            EasyExcel.write(response.getOutputStream(), PbExportData.class).head(dynamicHeadTittle(\"2020\")).autoCloseStream(Boolean.FALSE)\r\n                    .registerWriteHandler(horizontalCellStyleStrategy)\r\n                    .registerWriteHandler(new PbCustomerMergeStrategy(strategyMap))\r\n                    .sheet(\"sheet1\")\r\n                    .doWrite(exportDatas);\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1643/comments",
    "author": "wangge63",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-11-19T07:49:55Z",
        "body": "贴全代码"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2021-04-09T12:43:55Z",
        "body": "是否已经解决了问题？如果未解决 请重新打开issue."
      }
    ]
  },
  {
    "number": 1479,
    "title": "部署在服务器上时因为编码问题无法导出，解决编码问题后导入后添加的数据乱码",
    "created_at": "2020-07-20T06:22:12Z",
    "closed_at": "2021-09-17T06:42:23Z",
    "labels": [
      "help wanted",
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1479",
    "body": "\r\n首先是部署在服务器上导出功能无法实现\r\n在dockerfile添加以下代码后\r\nFROM centos\r\nRUN yum install java-1.8.0-openjdk -y \r\nRUN yum install dejavu-sans-fonts fontconfig -y\r\n导出可以实现但是导入的时候\r\nlysisContextImpl    : Began to read?ReadSheetHolder{sheetNo=0, sheetName='????'} com.alibaba.excel.read.metadata.holder.xlsx.XlsxReadSheetHolder@1f4ebb43\r\n2020-07-20 13:47:57.785  INFO 1 --- [http-nio-8080-exec-7] c.s.f.system.bo.UploadDataListener       : ???????:{\"factoryName\":\"??\",\"leaderPhone\":\"13555555589\",\"maintenanceYear\":3,\"projectAddr\":\"???????????\",\"projectLeader\":\"zs\",\"projectName\":\"??\",\"projectType\":\"??\",\"remark\":\"string\",\"serviceGroup\":\"string\",\"startDate\":1594704881000}\r\n2020-07-20 13:47:57.787  INFO 1 --- [http-nio-8080-exec-7] c.s.f.system.bo.UploadDataListener       : ???????:{\"factoryName\":\"??\",\"leaderPhone\":\"13555575589\",\"maintenanceYear\":3,\"projectAddr\":\"???????????\",\"projectLeader\":\"ls\",\"projectName\":\"??\",\"projectType\":\"??\",\"remark\":\"string\",\"serviceGroup\":\"string\",\"startDate\":1594704881000}\r\n2020-07-20 13:47:57.788  INFO 1 --- [http-nio-8080-exec-7] c.s.f.system.bo.UploadDataListener       : ???????:{\"factoryName\":\"??\",\"leaderPhone\":\"13555575589\",\"maintenanceYear\":3,\"projectAddr\":\"???????????\",\"projectLeader\":\"ls\",\"projectName\":\"??\",\"projectType\":\"??\",\"remark\":\"string\",\"serviceGroup\":\"string\",\"startDate\":1594704881000}\r\n2020-07-20 13:47:57.789  INFO 1 --- [http-nio-8080-exec-7] c.s.f.system.bo.UploadDataListener       : ???????:{\"factoryName\":\"??\",\"leaderPhone\":\"13555575589\",\"maintenanceYear\":3,\"projectLeader\":\"ls\",\"projectName\":\"??\",\"projectType\":\"??\",\"remark\":\"string\",\"serviceGroup\":\"string\",\"startDate\":1594704881000}\r\n2020-07-20 13:47:57.790  INFO 1 --- [http-nio-8080-exec-7] c.s.f.system.bo.UploadDataListener       : ???????:{\"factoryName\":\"??\",\"maintenanceYear\":3,\"projectAddr\":\"???????????\",\"projectLeader\":\"ls\",\"projectName\":\"??\",\"projectType\":\"??\",\"r\r\n导入的数据为乱码\r\n去掉dockerfile的上面添加的代码，导入正常\r\n....\r\n**建议描述**\r\n在本地服务器上导入导出均无问题",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1479/comments",
    "author": "yankun-1994",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-08-29T06:17:40Z",
        "body": "服务器的编码是什么？"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2021-09-17T06:42:23Z",
        "body": "是否已经解决问题？如果未解决 请重新打开问题。\r\n\r\n"
      }
    ]
  },
  {
    "number": 1478,
    "title": "文件导入报错 RecordInputStream$LeftoverDataException",
    "created_at": "2020-07-20T06:12:37Z",
    "closed_at": "2021-09-17T09:07:59Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1478",
    "body": "异常信息：org.apache.poi.hssf.record.RecordInputStream$LeftoverDataException: Initialisation of record 0x31(FontRecord) left 6 bytes remaining still to be read. at org.apache.poi.hssf.record.RecordInputStream.hasNextRecord(RecordInputStream.java:178) at org.apache.poi.hssf.record.RecordFactoryInputStream.nextRecord(RecordFactoryInputStream.java:235) at org.apache.poi.hssf.eventusermodel.HSSFEventFactory.genericProcessEvents(HSSFEventFactory.java:175) at org.apache.poi.hssf.eventusermodel.HSSFEventFactory.processEvents(HSSFEventFactory.java:136) at org.apache.poi.hssf.eventusermodel.HSSFEventFactory.processWorkbookEvents(HSSFEventFactory.java:82) at org.apache.poi.hssf.eventusermodel.HSSFEventFactory.processWorkbookEvents(HSSFEventFactory.java:54) at com.alibaba.excel.analysis.v03.XlsSaxAnalyser.execute(XlsSaxAnalyser.java:112) at com.alibaba.excel.analysis.ExcelAnalyserImpl.analysis(ExcelAnalyserImpl.java:105) at com.alibaba.excel.ExcelReader.read(ExcelReader.java:180) at com.alibaba.excel.ExcelReader.read(ExcelReader.java:170) at com.alibaba.excel.read.builder.ExcelReaderSheetBuilder.doRead(ExcelReaderSheetBuilder.java:160) at com.unicdata.service.excel.impl.DealerStatementsHandleServiceImpl.readExcel(DealerStatementsHandleServiceImpl.java:74) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333) at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190) at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157) at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99) at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:282) at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96) at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213) at com.sun.proxy.$Proxy137.readExcel(Unknown Source) at com.unicdata.service.excel.impl.ExcelMatchHandleServiceImpl.importCache(ExcelMatchHandleServiceImpl.java:41) at com.unicdata.controller.excel.ExcelImportController.excelImport(ExcelImportController.java:131) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133) at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97) at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827) at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738) at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85) at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967) at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901) at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970) at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872) at javax.servlet.http.HttpServlet.service(HttpServlet.java:661) at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846) at javax.servlet.http.HttpServlet.service(HttpServlet.java:742) at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61) at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108) at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137) at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125) at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66) at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449) at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365) at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90) at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83) at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387) at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362) at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125) at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) at com.unicdata.configaration.CorsFilter.doFilter(CorsFilter.java:32) at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:167) at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:80) at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197) at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198) at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478) at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80) at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342) at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799) at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455) at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) at java.lang.Thread.run(Thread.java:748) ",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1478/comments",
    "author": "nanmua",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-08-29T06:18:22Z",
        "body": "这个需要提供excel文件"
      },
      {
        "user": "benpao412",
        "created_at": "2021-04-28T07:54:09Z",
        "body": "@nanmua 你好，这个不是EasyExcel的问题，是poi的问题，修改poi3.17版本的org.apache.poi.hssf.record.RecordInputStream#hasNextRecord的源码如下即可，修改后就可以正常解析导入的Excel了。\r\n```\r\n//修改poi源码 hasNextRecord  begin\r\n\r\n\tpublic boolean hasNextRecord() throws LeftoverDataException {\r\n\t\tif (_currentDataLength != -1 && _currentDataLength != _currentDataOffset) {\r\n//\t\t\tthrow new LeftoverDataException(_currentSid, remaining());\r\n\t\t\treadToEndOfRecord();\r\n\t\t}\r\n\t\tif (_currentDataLength != DATA_LEN_NEEDS_TO_BE_READ) {\r\n\t\t\t_nextSid = readNextSid();\r\n\t\t}\r\n\t\treturn _nextSid != INVALID_SID_VALUE;\r\n\t}\r\n\r\n\tprivate void readToEndOfRecord(){\r\n\t\twhile(this._currentDataOffset<this._currentDataLength) {\r\n\t\t\treadByte();\r\n\t\t}\r\n\t}\r\n\r\n\t//修改poi源码 hasNextRecord  end\r\n```"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2021-09-17T09:07:59Z",
        "body": "是否已经解决问题？如果未解决 请重新打开问题。\r\n\r\n"
      },
      {
        "user": "shanjunaho",
        "created_at": "2022-04-26T06:49:05Z",
        "body": "解决了吗？我出现一样的错误，求助"
      },
      {
        "user": "shanjunaho",
        "created_at": "2022-04-26T07:00:35Z",
        "body": "@benpao412  怎么修改poi的源码啊"
      }
    ]
  },
  {
    "number": 1412,
    "title": "关于excelWriter.finish()  多个sheet写入excel报错",
    "created_at": "2020-06-19T03:10:34Z",
    "closed_at": "2020-08-29T06:40:28Z",
    "labels": [
      "help wanted",
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1412",
    "body": "**异常代码**\r\nServletOutputStream outputStream = null;\r\n\t\tExcelWriter excelWriter = null;\r\n\t\ttry {\r\n\t\t\tShiftParameterResp shiftParameterResp = shiftParameterService.queryByPrimaryKey(shiftId);\r\n\t\t\tString start = LocalDateUtil.date2LocalDate(shiftParameterResp.getStartDate()).format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));\r\n\t\t\tString end = LocalDateUtil.date2LocalDate(shiftParameterResp.getEndDate()).format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));\r\n\t\t\tList<String> dateList = LocalDateUtil.getBetweenDate(start, end);\r\n\r\n\t\t\toutputStream = response.getOutputStream();\r\n\t\t\tresponse.setContentType(\"application/vnd.ms-excel\");\r\n\t\t\tresponse.setCharacterEncoding(\"utf-8\");\r\n\t\t\tresponse.setHeader(\"Pragma\", \"No-cache\");\r\n\t\t\tresponse.setHeader(\"Cache-Control\", \"no-cache\");\r\n\t\t\tresponse.setDateHeader(\"Expires\", 0);\r\n\t\t\tString fileName = shiftParameterResp.getShift() + \"-轮班结果\";\r\n\t\t\tresponse.setHeader(\"Content-disposition\", \"attachment;filename=\" + URLEncoder.encode(fileName, \"UTF-8\") + \".xlsx\");\r\n\t\t\t// 头的策略\r\n\t\t\tWriteCellStyle headWriteCellStyle = new WriteCellStyle();\r\n\t\t\t// 背景设置为白\r\n\t\t\theadWriteCellStyle.setFillForegroundColor(IndexedColors.WHITE.getIndex());\r\n\t\t\t// 内容的策略\r\n\t\t\tWriteCellStyle contentWriteCellStyle = new WriteCellStyle();\r\n\t\t\tHorizontalCellStyleStrategy horizontalCellStyleStrategy =\r\n\t\t\t\t\tnew HorizontalCellStyleStrategy(headWriteCellStyle, contentWriteCellStyle);\r\n\r\n\t\t\texcelWriter = EasyExcel.write(outputStream).registerWriteHandler(horizontalCellStyleStrategy).build();\r\n\t\t\tint sheetNo = 0;\r\n\r\n\t\t\tif (isDriver == 1) {\r\n\t\t\t\tList<StatisticsShiftResp> shiftRespList = shiftDetailsService.queryDriverShift(shiftId);\r\n\t\t\t\tList<StatisticsShiftExcel> driverList = Lists.newArrayList();\r\n\t\t\t\tfor (int i = 0; i < shiftRespList.size(); i++) {\r\n\t\t\t\t\tStatisticsShiftResp statisticsShiftResp = shiftRespList.get(i);\r\n\t\t\t\t\tStatisticsShiftExcel statisticsShiftExcel = new StatisticsShiftExcel();\r\n\t\t\t\t\tString groupName = getGroupName(statisticsShiftResp.getShiftFlag());\r\n\t\t\t\t\tstatisticsShiftExcel.setGroupName(i + 1 + groupName);\r\n\t\t\t\t\tstatisticsShiftExcel.setWorkCarCount(statisticsShiftResp.getWorkCarCount());\r\n\t\t\t\t\tstatisticsShiftExcel.setRestDay(statisticsShiftResp.getRestDay());\r\n\t\t\t\t\tstatisticsShiftExcel.setDays(statisticsShiftResp.getDays());\r\n\t\t\t\t\tif (!CollectionUtils.isEmpty(statisticsShiftResp.getDrivers())) {\r\n\t\t\t\t\t\tString nameStr = statisticsShiftResp.getDrivers().stream().map(ShiftChainDriverRelation::getDriverName).collect(Collectors.joining());\r\n\t\t\t\t\t\tstatisticsShiftExcel.setNameStr(nameStr);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdriverList.add(statisticsShiftExcel);\r\n\t\t\t\t}\r\n\t\t\t\tWriteSheet writeSheet = EasyExcel.writerSheet(sheetNo++, \"驾驶员轮班表\").head(StatisticsShiftExcel.class).build();\r\n\t\t\t\texcelWriter.write(driverList, writeSheet);\r\n\t\t\t}\r\n\r\n\t\t\tif (isVehicle == 1) {\r\n\t\t\t\tList<StatisticsShiftResp> shiftRespList = shiftDetailsService.queryCarShift(shiftId);\r\n\t\t\t\tList<StatisticsShiftExcel> vehicleList = Lists.newArrayList();\r\n\t\t\t\tfor (int i = 0; i < shiftRespList.size(); i++) {\r\n\t\t\t\t\tStatisticsShiftResp statisticsShiftResp = shiftRespList.get(i);\r\n\t\t\t\t\tStatisticsShiftExcel statisticsShiftExcel = new StatisticsShiftExcel();\r\n\t\t\t\t\tString groupName = getGroupName(statisticsShiftResp.getShiftFlag());\r\n\t\t\t\t\tstatisticsShiftExcel.setGroupName(i + 1 + groupName);\r\n\t\t\t\t\tstatisticsShiftExcel.setWorkCarCount(statisticsShiftResp.getWorkCarCount());\r\n\t\t\t\t\tstatisticsShiftExcel.setRestDay(statisticsShiftResp.getRestDay());\r\n\t\t\t\t\tstatisticsShiftExcel.setDays(statisticsShiftResp.getDays());\r\n\t\t\t\t\tif (!CollectionUtils.isEmpty(statisticsShiftResp.getVehicles())) {\r\n\t\t\t\t\t\tString nameStr = statisticsShiftResp.getVehicles().stream().map(ShiftChainCarRelation::getVehicleCode).collect(Collectors.joining());\r\n\t\t\t\t\t\tstatisticsShiftExcel.setNameStr(nameStr);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvehicleList.add(statisticsShiftExcel);\r\n\t\t\t\t}\r\n\t\t\t\tWriteSheet writeSheet = EasyExcel.writerSheet(sheetNo++, \"车辆轮班表\").head(StatisticsShiftExcel.class).build();\r\n\t\t\t\texcelWriter.write(vehicleList, writeSheet);\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (isDriverCalendar == 1) {\r\n\t\t\t\tList<ShiftChainDriverRelation> shiftChainDriverRelationList = shiftChainDriverRelationService.queryShiftChainDriverRelation(shiftId);\r\n\t\t\t\tMap<Long, String> driverMap = shiftChainDriverRelationList.stream()\r\n\t\t\t\t\t\t.collect(Collectors.toMap(ShiftChainDriverRelation::getDriverId, ShiftChainDriverRelation::getDriverName, (k1, k2) -> k1));\r\n\t\t\t\tList<CalendarShiftExt> driverCalendarList = getDriverCalendarShiftExtList(shiftId);\r\n\t\t\t\tList<List<String>> headList = Lists.newArrayList();\r\n\t\t\t\tList<List<String>> contentList = Lists.newArrayList();\r\n\t\t\t\tList<String> head0 = new ArrayList<>();\r\n\t\t\t\thead0.add(\"月度班组\");\r\n\t\t\t\tList<String> head1 = new ArrayList<>();\r\n\t\t\t\thead1.add(\"人员\");\r\n\t\t\t\theadList.add(head0);\r\n\t\t\t\theadList.add(head1);\r\n\t\t\t\tfor (String date : dateList) {\r\n\t\t\t\t\tList<String> head3 = new ArrayList<>();\r\n\t\t\t\t\thead3.add(date);\r\n\t\t\t\t\theadList.add(head3);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (int i = 0; i < driverCalendarList.size(); i++) {\r\n\t\t\t\t\tCalendarShiftExt item = driverCalendarList.get(i);\r\n\t\t\t\t\tList<String> rowList = Lists.newArrayListWithCapacity(dateList.size() + 2);\r\n\t\t\t\t\tfor (int j = 0; j < dateList.size() + 2; j++) {\r\n\t\t\t\t\t\trowList.add(null);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tString groupName = getGroupName(item.getShiftFlag());\r\n\t\t\t\t\trowList.add(0, i + 1 + groupName);\r\n\t\t\t\t\trowList.add(1, driverMap.get((long) item.getSerialNumber()));\r\n\t\t\t\t\tif (item.getShiftRespList() != null) {\r\n\t\t\t\t\t\tfor (CalendarShiftResp calendarShiftResp : item.getShiftRespList()) {\r\n\t\t\t\t\t\t\tint index = dateList.indexOf(StringUtils.substring(calendarShiftResp.getDay(), 5));\r\n\t\t\t\t\t\t\trowList.add(index + 2, String.valueOf(calendarShiftResp.getCarNumber() == 0 ? \"休\" : calendarShiftResp.getCarNumber()));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcontentList.add(rowList);\r\n\t\t\t\t}\r\n\t\t\t\tWriteSheet writeSheet = EasyExcel.writerSheet(sheetNo++, \"人员轮班月历表\").head(headList).build();\r\n\t\t\t\texcelWriter.write(contentList, writeSheet);\r\n\t\t\t}\r\n\t\t\tif (isVehicleCalendar == 1) {\r\n\t\t\t\tList<ShiftChainCarRelation> shiftChainCarRelationList = shiftChainCarRelationService.queryShiftChainCarRelation(shiftId);\r\n\t\t\t\tMap<Long, String> vehicleMap = shiftChainCarRelationList.stream()\r\n\t\t\t\t\t\t.collect(Collectors.toMap(ShiftChainCarRelation::getCarId, ShiftChainCarRelation::getVehicleCode, (k1, k2) -> k1));\r\n\t\t\t\tList<CalendarShiftExt> vehicleCalendarList = getVehicleCalendarShiftExtList(shiftId);\r\n\t\t\t\tList<List<String>> headList = Lists.newArrayList();\r\n\t\t\t\tList<List<String>> contentList = Lists.newArrayList();\r\n\t\t\t\tList<String> head0 = new ArrayList<>();\r\n\t\t\t\thead0.add(\"月度班组\");\r\n\t\t\t\tList<String> head1 = new ArrayList<>();\r\n\t\t\t\thead1.add(\"车辆\");\r\n\t\t\t\theadList.add(head0);\r\n\t\t\t\theadList.add(head1);\r\n\t\t\t\tfor (String date : dateList) {\r\n\t\t\t\t\tList<String> head3 = new ArrayList<>();\r\n\t\t\t\t\thead3.add(date);\r\n\t\t\t\t\theadList.add(head3);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (int i = 0; i < vehicleCalendarList.size(); i++) {\r\n\t\t\t\t\tCalendarShiftExt item = vehicleCalendarList.get(i);\r\n\t\t\t\t\tList<String> rowList = Lists.newArrayListWithCapacity(dateList.size() + 2);\r\n\t\t\t\t\tfor (int j = 0; j < dateList.size() + 2; j++) {\r\n\t\t\t\t\t\trowList.add(null);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tString groupName = getGroupName(item.getShiftFlag());\r\n\t\t\t\t\trowList.add(0, i + 1 + groupName);\r\n\t\t\t\t\trowList.add(1, vehicleMap.get((long) item.getSerialNumber()));\r\n\t\t\t\t\tif (item.getShiftRespList() != null) {\r\n\t\t\t\t\t\tfor (CalendarShiftResp calendarShiftResp : item.getShiftRespList()) {\r\n\t\t\t\t\t\t\tint index = dateList.indexOf(StringUtils.substring(calendarShiftResp.getDay(), 5));\r\n\t\t\t\t\t\t\trowList.add(index + 2, String.valueOf(calendarShiftResp.getCarNumber() == 0 ? \"休\" : calendarShiftResp.getCarNumber()));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcontentList.add(rowList);\r\n\t\t\t\t}\r\n\t\t\t\tWriteSheet writeSheet = EasyExcel.writerSheet(sheetNo, \"车辆轮班月历表\").head(headList).build();\r\n\t\t\t\texcelWriter.write(contentList, writeSheet);\r\n\t\t\t}\r\n\t\t} catch (Exception e) {\r\n\t\t\te.printStackTrace();\r\n\t\t\t// 重置response\r\n\t\t\tresponse.reset();\r\n\t\t\tresponse.setContentType(\"application/json\");\r\n\t\t\tresponse.setCharacterEncoding(\"utf-8\");\r\n\t\t\tMap<String, String> map = new HashMap<String, String>();\r\n\t\t\tmap.put(\"status\", \"failure\");\r\n\t\t\tmap.put(\"message\", \"下载文件失败\" + e.getMessage());\r\n\t\t\ttry {\r\n\t\t\t\tresponse.getWriter().println(JSON.toJSONString(map));\r\n\t\t\t} catch (IOException ex) {\r\n\t\t\t\tex.printStackTrace();\r\n\t\t\t}\r\n\t\t} finally {\r\n\t\t\ttry {\r\n\t\t\t\tif( excelWriter != null){\r\n\t\t\t\t\texcelWriter.finish();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(outputStream != null){\r\n\t\t\t\t\toutputStream.close();\r\n\t\t\t\t}\r\n\t\t\t} catch (IOException e) {\r\n\t\t\t\tlogger.error(\"文件导出异常\" + e.getMessage());\r\n\t\t\t}\r\n\r\n\t\t}\r\n**异常提示**\r\nnested exception is com.alibaba.excel.exception.ExcelGenerateException: Can not close IO.] with root cause\r\n**建议描述**\r\n下载excel一次写入多个sheet表,excelWriter.finish() 提示报错\r\n部分情况又不会报错\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1412/comments",
    "author": "ls0618",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-06-23T10:50:50Z",
        "body": "贴全异常。"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2020-08-29T06:40:28Z",
        "body": "是否已经解决问题？如果未解决，请重新打开。"
      }
    ]
  },
  {
    "number": 1379,
    "title": "使用模版填充多个sheet生成文件失败",
    "created_at": "2020-06-06T09:52:58Z",
    "closed_at": "2020-06-16T11:14:51Z",
    "labels": [
      "bug",
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1379",
    "body": "```java\r\nWriteSheet writeSheet;\r\nExcelWriter excelWriter = EasyExcel.write(newFileName).withTemplate(templateFileName).build();\r\n\r\n// 使用 map 模式填充 sheet0\r\nwriteSheet = EasyExcel.writerSheet(0).build();\r\nexcelWriter.fill(getDataMap0(), writeSheet);\r\n\r\n// 使用 map 模式填充 sheet1\r\nwriteSheet = EasyExcel.writerSheet(1).build();\r\nexcelWriter.fill(getDataMap1(), writeSheet);\r\n\r\nexcelWriter.finish();\r\n```\r\n文件能生成，但是文件大小为0，不会抛出异常。\r\n只填充sheet0，生成的文件是正常的。",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1379/comments",
    "author": "pbby",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-06-09T09:07:09Z",
        "body": "是否填充的数据为空？实测没问题"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2020-06-16T11:14:51Z",
        "body": "该问题 是否已经解决？未解决的话 重新开个问题。"
      }
    ]
  },
  {
    "number": 1375,
    "title": "读取含公式的excel文件时报错",
    "created_at": "2020-06-05T05:22:42Z",
    "closed_at": "2020-06-16T11:18:16Z",
    "labels": [
      "help wanted",
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1375",
    "body": "[DEBUG] 2020-06-05 13:10:15,651 method:com.alibaba.excel.analysis.v03.handlers.FormulaRecordHandler.processRecord(FormulaRecordHandler.java:42)\r\nGet formula value error.\r\njava.lang.RuntimeException: Coding Error: Expected ExpPtg to be converted from Shared to Non-Shared Formula by ValueRecordsAggregate, but it wasn't\r\n\tat org.apache.poi.ss.formula.ptg.ExpPtg.toFormulaString(ExpPtg.java:67)\r\n\tat org.apache.poi.ss.formula.FormulaRenderer.toFormulaString(FormulaRenderer.java:95)\r\n\tat org.apache.poi.hssf.model.HSSFFormulaParser.toFormulaString(HSSFFormulaParser.java:90)\r\n\tat com.alibaba.excel.analysis.v03.handlers.FormulaRecordHandler.processRecord(FormulaRecordHandler.java:39)\r\n\tat com.alibaba.excel.analysis.v03.XlsSaxAnalyser.processRecord(XlsSaxAnalyser.java:158)\r\n\tat org.apache.poi.hssf.eventusermodel.MissingRecordAwareHSSFListener.processRecord(MissingRecordAwareHSSFListener.java:203)\r\n\tat org.apache.poi.hssf.eventusermodel.FormatTrackingHSSFListener.processRecord(FormatTrackingHSSFListener.java:92)\r\n\tat org.apache.poi.hssf.eventusermodel.HSSFRequest.processRecord(HSSFRequest.java:109)\r\n\tat org.apache.poi.hssf.eventusermodel.HSSFEventFactory.genericProcessEvents(HSSFEventFactory.java:179)\r\n\tat org.apache.poi.hssf.eventusermodel.HSSFEventFactory.processEvents(HSSFEventFactory.java:136)\r\n\tat org.apache.poi.hssf.eventusermodel.HSSFEventFactory.processWorkbookEvents(HSSFEventFactory.java:82)\r\n\tat org.apache.poi.hssf.eventusermodel.HSSFEventFactory.processWorkbookEvents(HSSFEventFactory.java:54)\r\n\tat com.alibaba.excel.analysis.v03.XlsSaxAnalyser.execute(XlsSaxAnalyser.java:137)\r\n\tat com.alibaba.excel.analysis.ExcelAnalyserImpl.analysis(ExcelAnalyserImpl.java:115)\r\n\tat com.alibaba.excel.ExcelReader.read(ExcelReader.java:182)\r\n\tat com.alibaba.excel.ExcelReader.read(ExcelReader.java:172)\r\n\tat com.alibaba.excel.read.builder.ExcelReaderSheetBuilder.doRead(ExcelReaderSheetBuilder.java:65)\r\n\tat com.jycj.controller.UploadController.upload(UploadController.java:67)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\r\n\tat java.lang.reflect.Method.invoke(Unknown Source)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:215)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:132)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandleMethod(RequestMappingHandlerAdapter.java:749)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:690)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:83)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:945)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:876)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:961)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:863)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:660)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:837)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:741)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:108)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:543)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)\r\n\tat org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:690)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:615)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:818)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1627)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Unknown Source)",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1375/comments",
    "author": "hrfhym",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-06-09T07:59:23Z",
        "body": "`debug`问题不大。或者提供下`excel`"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2020-06-16T11:18:16Z",
        "body": "这个问题是否已经解决？未解决的话重新打开问题。"
      },
      {
        "user": "CCCCmaster",
        "created_at": "2021-12-03T04:54:21Z",
        "body": "这个问题解决了吗？🌝🌝🌝"
      }
    ]
  },
  {
    "number": 1345,
    "title": "Converter not found, convert STRING to String",
    "created_at": "2020-05-25T07:43:18Z",
    "closed_at": "2020-06-16T11:15:33Z",
    "labels": [
      "bug",
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1345",
    "body": "**触发场景描述**\r\n\r\n**触发Bug的代码**\r\n```java\r\nFile file = null;\r\n        try {\r\n            if (fileName.endsWith(\".xls\")) {\r\n                file = new File(System.currentTimeMillis() + \"_\" + MD5.md5String(noskey) + \".xls\");\r\n            } else {\r\n                file = new File(System.currentTimeMillis() + \"_\" + MD5.md5String(noskey) + \".xlsx\");\r\n            }\r\n            nosAdapterService.download(bucketName, noskey, file);\r\n            allData = EasyExcel.read(file, ExcelSongData.class, new DefaultListener()).sheet().doReadSync();\r\n        } finally {\r\n            if (file != null) {\r\n                file.deleteOnExit();\r\n            }\r\n        }\r\n\r\n```\r\n**提示的异常或者没有达到的效果**\r\n```\r\nexception in search\r\ncom.alibaba.excel.exception.ExcelAnalysisException: com.alibaba.excel.exception.ExcelDataConvertException: Converter not found, convert STRING to String\r\n\tat com.alibaba.excel.analysis.v07.XlsxSaxAnalyser.parseXmlSource(XlsxSaxAnalyser.java:170) ~[easyexcel-2.1.6.jar:?]\r\n\tat com.alibaba.excel.analysis.v07.XlsxSaxAnalyser.execute(XlsxSaxAnalyser.java:189) ~[easyexcel-2.1.6.jar:?]\r\n\tat com.alibaba.excel.analysis.ExcelAnalyserImpl.analysis(ExcelAnalyserImpl.java:105) ~[easyexcel-2.1.6.jar:?]\r\n\tat com.alibaba.excel.ExcelReader.read(ExcelReader.java:180) ~[easyexcel-2.1.6.jar:?]\r\n\tat com.alibaba.excel.ExcelReader.read(ExcelReader.java:170) ~[easyexcel-2.1.6.jar:?]\r\n\tat com.alibaba.excel.read.builder.ExcelReaderSheetBuilder.doReadSync(ExcelReaderSheetBuilder.java:175) ~[easyexcel-2.1.6.jar:?]\r\n```\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1345/comments",
    "author": "Hasherc",
    "comments": [
      {
        "user": "Hasherc",
        "created_at": "2020-05-25T07:45:14Z",
        "body": "非必现，同一份表格，读取三次。仅一次出现改问题"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2020-06-09T08:21:50Z",
        "body": "尝试升级到最新版本。"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2020-06-16T11:15:33Z",
        "body": "这个问题是否已经解决？未解决的话重新打开问题。"
      },
      {
        "user": "Hasherc",
        "created_at": "2020-06-19T07:38:45Z",
        "body": "该issue提出后，暂时还没有复现过"
      }
    ]
  },
  {
    "number": 1290,
    "title": "SpringBoot2 报classloder加载错误",
    "created_at": "2020-05-03T02:26:01Z",
    "closed_at": "2020-05-22T06:35:28Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1290",
    "body": "SpringBoot2 pom.xml引入\r\n       <dependency>\r\n            <groupId>com.alibaba</groupId>\r\n            <artifactId>easyexcel</artifactId>\r\n            <version>2.2.3</version>\r\n        </dependency>\r\n在web页面上点击导出，因导出文件太大，使用异步方法在后台导出，单独下载。\r\n\r\n @Async\r\n    public void zjDBExport(Export export) {...}\r\n\r\n报如下错误：\r\n\r\nnet.sf.cglib.core.CodeGenerationException: java.lang.reflect.InvocationTargetException-->null\r\n\tat net.sf.cglib.core.AbstractClassGenerator.create(AbstractClassGenerator.java:237) ~[cglib-3.1.jar:?]\r\n\tat net.sf.cglib.beans.BeanMap$Generator.create(BeanMap.java:122) ~[cglib-3.1.jar:?]\r\n\tat net.sf.cglib.beans.BeanMap.create(BeanMap.java:58) ~[cglib-3.1.jar:?]\r\n\tat com.alibaba.excel.write.executor.ExcelWriteAddExecutor.addJavaObjectToExcel(ExcelWriteAddExecutor.java:116) ~[easyexcel-2.2.3.jar:?]\r\n\tat com.alibaba.excel.write.executor.ExcelWriteAddExecutor.addOneRowOfDataToExcel(ExcelWriteAddExecutor.java:67) ~[easyexcel-2.2.3.jar:?]\r\n\tat com.alibaba.excel.write.executor.ExcelWriteAddExecutor.add(ExcelWriteAddExecutor.java:52) ~[easyexcel-2.2.3.jar:?]\r\n\tat com.alibaba.excel.write.ExcelBuilderImpl.addContent(ExcelBuilderImpl.java:58) ~[easyexcel-2.2.3.jar:?]\r\n\tat com.alibaba.excel.ExcelWriter.write(ExcelWriter.java:161) ~[easyexcel-2.2.3.jar:?]\r\n\tat com.alibaba.excel.ExcelWriter.write(ExcelWriter.java:146) ~[easyexcel-2.2.3.jar:?]\r\n\r\n\r\n跟踪代码发现，cglib jar文件中，在第二个if中获取到，第三个if获取是正确的。获取ClassLoader错误。\r\n\r\nClassLoader t = this.classLoader;\r\n        if (t == null) {\r\n            t = this.getDefaultClassLoader();\r\n        }\r\n\r\n        if (t == null) {\r\n            t = this.getClass().getClassLoader();\r\n        }\r\n\r\n        if (t == null) {\r\n            t = Thread.currentThread().getContextClassLoader();\r\n        }\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1290/comments",
    "author": "jutleo",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-05-14T07:20:56Z",
        "body": "尝试贴全代码"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2020-05-22T06:35:28Z",
        "body": "是否已经解决了问题？如果未解决 请重新打开问题。"
      }
    ]
  },
  {
    "number": 1278,
    "title": "动态表头建议",
    "created_at": "2020-04-28T02:37:04Z",
    "closed_at": "2020-05-14T07:16:30Z",
    "labels": [
      "question",
      "suggest"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1278",
    "body": "**建议描述**\r\n目前的动态表头需要全部重写表头才能使用setHead方法，建议能够同时支持模板文件表头和自定义表头，可以节省很多代码啊，谢谢",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1278/comments",
    "author": "scottzzj",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-04-30T10:32:28Z",
        "body": "没理解什么意思 能否详细描述下"
      },
      {
        "user": "scottzzj",
        "created_at": "2020-05-07T02:25:24Z",
        "body": "private List<List<String>> head() {\r\n        List<List<String>> list = new ArrayList<List<String>>();\r\n        List<String> head0 = new ArrayList<String>();\r\n        head0.add(\"字符串\" + System.currentTimeMillis());\r\n        list.add(head0);\r\n        return list;\r\n    }\r\nEasyExcel.write(fileName)\r\n            // 这里放入动态头\r\n            .head(head()).sheet(\"模板\")\r\n            // 当然这里数据也可以用 List<List<String>> 去传入\r\n            .doWrite(data());\r\n目前动态头是这种形式，自定义文本，然后调用head方法。\r\n\r\n@Data\r\npublic class DemoData {\r\n    @ExcelProperty(\"字符串标题\")\r\n    private String string;\r\n    @ExcelProperty(\"日期标题\")\r\n    private Date date;\r\n    @ExcelProperty(\"数字标题\")\r\n    private Double doubleData;\r\n}\r\n我想要同时使用@ExcelProperty注解标识的字段和head方法标识的字段"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2020-05-14T07:16:30Z",
        "body": "这个暂时不考虑。2个合并还有先后等问题。后续如果遇到的同学多，可以考虑加入。"
      },
      {
        "user": "taosehngyijiushi",
        "created_at": "2023-04-05T11:07:29Z",
        "body": "怎么在注解头上面动态加一行内容"
      }
    ]
  },
  {
    "number": 1238,
    "title": "添加依赖后，mvn启动有错误通过日志无法定位哪里有错误",
    "created_at": "2020-04-15T13:56:32Z",
    "closed_at": "2020-04-30T10:41:25Z",
    "labels": [
      "bug",
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1238",
    "body": "**软件的版本**\r\nmaven\r\n\r\n```\r\nApache Maven 3.6.2 (40f52333136460af0dc0d7232c0dc0bcf0d9e117; 2019-08-27T23:06:16+08:00)\r\nJava version: 1.8.0_221, vendor: Oracle Corporation, runtime: /Library/Java/JavaVirtualMachines/jdk1.8.0_221.jdk/Contents/Home/jre\r\nDefault locale: zh_CN, platform encoding: UTF-8\r\nOS name: \"mac os x\", version: \"10.15.3\", arch: \"x86_64\", family: \"mac\"\r\n```\r\n\r\neasyexcel\r\n\r\n```\r\n<dependency>\r\n            <groupId>com.alibaba</groupId>\r\n            <artifactId>easyexcel</artifactId>\r\n            <version>2.1.6</version>\r\n</dependency>\r\n```\r\n\r\n\r\n**触发场景描述**\r\n- 添加 easyexcel pom依赖后，`mvn jetty:run` 发生错误，一直有`java.lang.ArrayIndexOutOfBoundsException`, 去掉 easyexcel 依赖后，运行正常。有错误但是能正常启动，功能也正常。很奇怪哪里有问题？\r\n\r\n- 刚开始怀疑和pom里面添加的poi 版本引用的jar有冲突，后面尝试 无论是添加还是删除poi的依赖还是有错误。\r\n\r\n- 通过依赖树，不确定和哪个类库有冲突。\r\n\r\n```\r\n        <dependency>\r\n            <groupId>org.apache.poi</groupId>\r\n            <artifactId>poi</artifactId>\r\n            <version>3.17</version>\r\n        </dependency>\r\n```\r\n\r\n\r\n这是我 `mvn dependency:tree` 结果\r\n\r\n```\r\n[INFO]\r\n[INFO] -----------------------< com.springapp:fdapplus >-----------------------\r\n[INFO] Building fdapplus 1.0-SNAPSHOT\r\n[INFO] --------------------------------[ jar ]---------------------------------\r\n[INFO]\r\n[INFO] --- maven-dependency-plugin:2.8:tree (default-cli) @ fdapplus ---\r\n[INFO] com.springapp:fdapplus:jar:1.0-SNAPSHOT\r\n[INFO] +- org.springframework:spring-core:jar:4.2.3.RELEASE:compile\r\n[INFO] |  \\- commons-logging:commons-logging:jar:1.2:compile\r\n[INFO] +- org.springframework:spring-web:jar:4.2.3.RELEASE:compile\r\n[INFO] |  +- org.springframework:spring-aop:jar:4.2.3.RELEASE:compile\r\n[INFO] |  |  \\- aopalliance:aopalliance:jar:1.0:compile\r\n[INFO] |  +- org.springframework:spring-beans:jar:4.2.3.RELEASE:compile\r\n[INFO] |  \\- org.springframework:spring-context:jar:4.2.3.RELEASE:compile\r\n[INFO] +- javax.servlet:javax.servlet-api:jar:3.1.0:compile\r\n[INFO] +- javax.servlet.jsp:jsp-api:jar:2.1:provided\r\n[INFO] +- jstl:jstl:jar:1.2:compile\r\n[INFO] +- org.springframework:spring-webmvc:jar:4.2.3.RELEASE:compile\r\n[INFO] |  \\- org.springframework:spring-expression:jar:4.2.3.RELEASE:compile\r\n[INFO] +- org.springframework:spring-jdbc:jar:4.2.3.RELEASE:compile\r\n[INFO] |  \\- org.springframework:spring-tx:jar:4.2.3.RELEASE:compile\r\n[INFO] +- org.springframework:spring-test:jar:4.2.3.RELEASE:test\r\n[INFO] +- org.springframework.security:spring-security-crypto:jar:4.2.3.RELEASE:compile\r\n[INFO] +- junit:junit:jar:4.9:test\r\n[INFO] |  \\- org.hamcrest:hamcrest-core:jar:1.1:test\r\n[INFO] +- com.microsoft.sqlserver:sqljdbc4:jar:4.0:compile\r\n[INFO] +- commons-dbcp:commons-dbcp:jar:1.4:compile\r\n[INFO] |  \\- commons-pool:commons-pool:jar:1.5.4:compile\r\n[INFO] +- com.google.code.gson:gson:jar:1.4:compile\r\n[INFO] +- net.sf.json-lib:json-lib:jar:jdk15:2.2.2:compile\r\n[INFO] |  +- commons-beanutils:commons-beanutils:jar:1.7.0:compile\r\n[INFO] |  +- commons-collections:commons-collections:jar:3.2:compile\r\n[INFO] |  +- commons-lang:commons-lang:jar:2.4:compile\r\n[INFO] |  \\- net.sf.ezmorph:ezmorph:jar:1.0.4:compile\r\n[INFO] +- org.slf4j:slf4j-api:jar:1.6.1:compile\r\n[INFO] +- org.slf4j:jcl-over-slf4j:jar:1.6.1:runtime\r\n[INFO] +- org.slf4j:slf4j-log4j12:jar:1.6.1:runtime\r\n[INFO] +- log4j:log4j:jar:1.2.17:compile\r\n[INFO] +- org.eclipse.jetty:jetty-servlet:jar:9.0.6.v20130930:compile\r\n[INFO] |  \\- org.eclipse.jetty:jetty-security:jar:9.0.6.v20130930:compile\r\n[INFO] |     \\- org.eclipse.jetty:jetty-server:jar:9.0.6.v20130930:compile\r\n[INFO] |        +- org.eclipse.jetty:jetty-http:jar:9.0.6.v20130930:compile\r\n[INFO] |        \\- org.eclipse.jetty:jetty-io:jar:9.0.6.v20130930:compile\r\n[INFO] +- org.eclipse.jetty:jetty-webapp:jar:9.0.6.v20130930:compile\r\n[INFO] |  \\- org.eclipse.jetty:jetty-xml:jar:9.0.6.v20130930:compile\r\n[INFO] |     \\- org.eclipse.jetty:jetty-util:jar:9.0.6.v20130930:compile\r\n[INFO] +- org.eclipse.jetty:jetty-jsp:jar:9.0.6.v20130930:compile\r\n[INFO] |  +- org.eclipse.jetty.orbit:javax.servlet.jsp:jar:2.2.0.v201112011158:compile\r\n[INFO] |  |  \\- org.eclipse.jetty.orbit:javax.servlet:jar:3.0.0.v201112011016:compile\r\n[INFO] |  +- org.eclipse.jetty.orbit:org.apache.jasper.glassfish:jar:2.2.2.v201112011158:compile\r\n[INFO] |  +- org.eclipse.jetty.orbit:javax.servlet.jsp.jstl:jar:1.2.0.v201105211821:compile\r\n[INFO] |  +- org.eclipse.jetty.orbit:org.apache.taglibs.standard.glassfish:jar:1.2.0.v201112081803:compile\r\n[INFO] |  +- org.eclipse.jetty.orbit:javax.el:jar:2.2.0.v201303151357:compile\r\n[INFO] |  +- org.eclipse.jetty.orbit:com.sun.el:jar:2.2.0.v201303151357:compile\r\n[INFO] |  \\- org.eclipse.jetty.orbit:org.eclipse.jdt.core:jar:3.8.2.v20130121:compile\r\n[INFO] +- commons-io:commons-io:jar:2.4:compile\r\n[INFO] +- commons-fileupload:commons-fileupload:jar:1.3:compile\r\n[INFO] +- com.itextpdf:itextpdf:jar:5.1.2:compile\r\n[INFO] +- com.itextpdf:itext-asian:jar:5.1.1:compile\r\n[INFO] +- org.apache.poi:poi:jar:3.17:compile\r\n[INFO] |  +- commons-codec:commons-codec:jar:1.10:compile\r\n[INFO] |  \\- org.apache.commons:commons-collections4:jar:4.1:compile\r\n[INFO] +- com.fasterxml.jackson.core:jackson-core:jar:2.2.3:compile\r\n[INFO] +- com.fasterxml.jackson.core:jackson-databind:jar:2.2.3:compile\r\n[INFO] +- com.fasterxml.jackson.core:jackson-annotations:jar:2.2.3:compile\r\n[INFO] +- com.squareup.okhttp3:okhttp:jar:3.4.1:compile\r\n[INFO] |  \\- com.squareup.okio:okio:jar:1.9.0:compile\r\n[INFO] +- com.alibaba:fastjson:jar:1.2.47:compile\r\n[INFO] +- dom4j:dom4j:jar:1.6.1:compile\r\n[INFO] +- net.lingala.zip4j:zip4j:jar:1.3.2:compile\r\n[INFO] +- org.apache.ant:ant:jar:1.8.1:compile\r\n[INFO] |  \\- org.apache.ant:ant-launcher:jar:1.8.1:compile\r\n[INFO] +- com.alibaba:easyexcel:jar:2.1.6:compile\r\n[INFO] |  +- org.apache.poi:poi-ooxml:jar:3.17:compile\r\n[INFO] |  |  \\- com.github.virtuald:curvesapi:jar:1.04:compile\r\n[INFO] |  +- cglib:cglib:jar:3.1:compile\r\n[INFO] |  |  \\- org.ow2.asm:asm:jar:4.2:compile\r\n[INFO] |  \\- org.ehcache:ehcache:jar:3.7.1:compile\r\n[INFO] |     \\- org.glassfish.jaxb:jaxb-runtime:jar:2.3.1:compile\r\n[INFO] |        +- org.glassfish.jaxb:txw2:jar:2.3.1:compile\r\n[INFO] |        +- com.sun.istack:istack-commons-runtime:jar:3.0.7:compile\r\n[INFO] |        +- org.jvnet.staxex:stax-ex:jar:1.8:compile\r\n[INFO] |        \\- com.sun.xml.fastinfoset:FastInfoset:jar:1.2.15:compile\r\n[INFO] +- xml-apis:xml-apis:jar:1.4.01:compile\r\n[INFO] +- javax.xml.bind:jaxb-api:jar:2.3.1:compile\r\n[INFO] |  \\- javax.activation:javax.activation-api:jar:1.2.0:compile\r\n[INFO] \\- org.apache.poi:poi-ooxml-schemas:jar:3.17:compile\r\n[INFO]    \\- org.apache.xmlbeans:xmlbeans:jar:2.6.0:compile\r\n[INFO]       \\- stax:stax-api:jar:1.0.1:compile\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] BUILD SUCCESS\r\n[INFO] ------------------------------------------------------------------------\r\n```\r\n\r\n**这是错误的代码**\r\n```bash\r\n\r\n[WARNING] Problem processing jar entry org/ehcache/config/Eviction.class\r\njava.lang.ArrayIndexOutOfBoundsException: 15931\r\n    at org.objectweb.asm.ClassReader.readClass (Unknown Source)\r\n    at org.objectweb.asm.ClassReader.accept (Unknown Source)\r\n    at org.objectweb.asm.ClassReader.accept (Unknown Source)\r\n    at org.eclipse.jetty.annotations.AnnotationParser.scanClass (AnnotationParser.java:658)\r\n    at org.eclipse.jetty.annotations.AnnotationParser$2.processEntry (AnnotationParser.java:630)\r\n    at org.eclipse.jetty.webapp.JarScanner.matched (JarScanner.java:155)\r\n    at org.eclipse.jetty.util.PatternMatcher.matchPatterns (PatternMatcher.java:82)\r\n    at org.eclipse.jetty.util.PatternMatcher.match (PatternMatcher.java:64)\r\n    at org.eclipse.jetty.webapp.JarScanner.scan (JarScanner.java:78)\r\n    at org.eclipse.jetty.annotations.AnnotationParser.parse (AnnotationParser.java:642)\r\n    at org.eclipse.jetty.annotations.AnnotationParser.parse (AnnotationParser.java:651)\r\n    at org.eclipse.jetty.annotations.AnnotationConfiguration.parseWebInfLib (AnnotationConfiguration.java:341)\r\n    at org.eclipse.jetty.annotations.AnnotationConfiguration.configure (AnnotationConfiguration.java:99)\r\n    at org.eclipse.jetty.webapp.WebAppContext.configure (WebAppContext.java:428)\r\n    at org.eclipse.jetty.webapp.WebAppContext.startContext (WebAppContext.java:1216)\r\n    at org.eclipse.jetty.server.handler.ContextHandler.doStart (ContextHandler.java:699)\r\n    at org.eclipse.jetty.webapp.WebAppContext.doStart (WebAppContext.java:454)\r\n    at org.mortbay.jetty.plugin.JettyWebAppContext.doStart (JettyWebAppContext.java:256)\r\n    at org.eclipse.jetty.util.component.AbstractLifeCycle.start (AbstractLifeCycle.java:59)\r\n    at org.eclipse.jetty.server.handler.HandlerCollection.doStart (HandlerCollection.java:224)\r\n    at org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart (ContextHandlerCollection.java:167)\r\n    at org.eclipse.jetty.util.component.AbstractLifeCycle.start (AbstractLifeCycle.java:59)\r\n    at org.eclipse.jetty.server.handler.HandlerCollection.doStart (HandlerCollection.java:224)\r\n    at org.eclipse.jetty.util.component.AbstractLifeCycle.start (AbstractLifeCycle.java:59)\r\n    at org.eclipse.jetty.server.handler.HandlerWrapper.doStart (HandlerWrapper.java:90)\r\n    at org.eclipse.jetty.server.Server.doStart (Server.java:262)\r\n    at org.mortbay.jetty.plugin.JettyServer.doStart (JettyServer.java:65)\r\n    at org.eclipse.jetty.util.component.AbstractLifeCycle.start (AbstractLifeCycle.java:59)\r\n    at org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty (AbstractJettyMojo.java:511)\r\n    at org.mortbay.jetty.plugin.AbstractJettyMojo.execute (AbstractJettyMojo.java:364)\r\n    at org.mortbay.jetty.plugin.JettyRunMojo.execute (JettyRunMojo.java:516)\r\n    at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo (DefaultBuildPluginManager.java:137)\r\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:210)\r\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:156)\r\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:148)\r\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:117)\r\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:81)\r\n    at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build (SingleThreadedBuilder.java:56)\r\n    at org.apache.maven.lifecycle.internal.LifecycleStarter.execute (LifecycleStarter.java:128)\r\n    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:305)\r\n    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:192)\r\n    at org.apache.maven.DefaultMaven.execute (DefaultMaven.java:105)\r\n    at org.apache.maven.cli.MavenCli.execute (MavenCli.java:956)\r\n    at org.apache.maven.cli.MavenCli.doMain (MavenCli.java:288)\r\n    at org.apache.maven.cli.MavenCli.main (MavenCli.java:192)\r\n    at sun.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)\r\n    at sun.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)\r\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)\r\n    at java.lang.reflect.Method.invoke (Method.java:498)\r\n    at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced (Launcher.java:282)\r\n    at org.codehaus.plexus.classworlds.launcher.Launcher.launch (Launcher.java:225)\r\n    at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode (Launcher.java:406)\r\n    at org.codehaus.plexus.classworlds.launcher.Launcher.main (Launcher.java:347)\r\n[WARNING] Problem processing jar entry org/ehcache/config/builders/CacheConfigurationBuilder.class\r\njava.lang.ArrayIndexOutOfBoundsException: 61411\r\n    at org.objectweb.asm.ClassReader.<init> (Unknown Source)\r\n    at org.objectweb.asm.ClassReader.<init> (Unknown Source)\r\n    at org.objectweb.asm.ClassReader.<init> (Unknown Source)\r\n    at org.eclipse.jetty.annotations.AnnotationParser.scanClass (AnnotationParser.java:657)\r\n    at org.eclipse.jetty.annotations.AnnotationParser$2.processEntry (AnnotationParser.java:630)\r\n    at org.eclipse.jetty.webapp.JarScanner.matched (JarScanner.java:155)\r\n    at org.eclipse.jetty.util.PatternMatcher.matchPatterns (PatternMatcher.java:82)\r\n    at org.eclipse.jetty.util.PatternMatcher.match (PatternMatcher.java:64)\r\n    at org.eclipse.jetty.webapp.JarScanner.scan (JarScanner.java:78)\r\n    at org.eclipse.jetty.annotations.AnnotationParser.parse (AnnotationParser.java:642)\r\n    at org.eclipse.jetty.annotations.AnnotationParser.parse (AnnotationParser.java:651)\r\n    at org.eclipse.jetty.annotations.AnnotationConfiguration.parseWebInfLib (AnnotationConfiguration.java:341)\r\n    at org.eclipse.jetty.annotations.AnnotationConfiguration.configure (AnnotationConfiguration.java:99)\r\n    at org.eclipse.jetty.webapp.WebAppContext.configure (WebAppContext.java:428)\r\n    at org.eclipse.jetty.webapp.WebAppContext.startContext (WebAppContext.java:1216)\r\n    at org.eclipse.jetty.server.handler.ContextHandler.doStart (ContextHandler.java:699)\r\n    at org.eclipse.jetty.webapp.WebAppContext.doStart (WebAppContext.java:454)\r\n    at org.mortbay.jetty.plugin.JettyWebAppContext.doStart (JettyWebAppContext.java:256)\r\n    at org.eclipse.jetty.util.component.AbstractLifeCycle.start (AbstractLifeCycle.java:59)\r\n    at org.eclipse.jetty.server.handler.HandlerCollection.doStart (HandlerCollection.java:224)\r\n    at org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart (ContextHandlerCollection.java:167)\r\n    at org.eclipse.jetty.util.component.AbstractLifeCycle.start (AbstractLifeCycle.java:59)\r\n    at org.eclipse.jetty.server.handler.HandlerCollection.doStart (HandlerCollection.java:224)\r\n    at org.eclipse.jetty.util.component.AbstractLifeCycle.start (AbstractLifeCycle.java:59)\r\n    at org.eclipse.jetty.server.handler.HandlerWrapper.doStart (HandlerWrapper.java:90)\r\n    at org.eclipse.jetty.server.Server.doStart (Server.java:262)\r\n    at org.mortbay.jetty.plugin.JettyServer.doStart (JettyServer.java:65)\r\n    at org.eclipse.jetty.util.component.AbstractLifeCycle.start (AbstractLifeCycle.java:59)\r\n    at org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty (AbstractJettyMojo.java:511)\r\n    at org.mortbay.jetty.plugin.AbstractJettyMojo.execute (AbstractJettyMojo.java:364)\r\n    at org.mortbay.jetty.plugin.JettyRunMojo.execute (JettyRunMojo.java:516)\r\n    at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo (DefaultBuildPluginManager.java:137)\r\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:210)\r\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:156)\r\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:148)\r\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:117)\r\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:81)\r\n    at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build (SingleThreadedBuilder.java:56)\r\n    at org.apache.maven.lifecycle.internal.LifecycleStarter.execute (LifecycleStarter.java:128)\r\n    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:305)\r\n    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:192)\r\n    at org.apache.maven.DefaultMaven.execute (DefaultMaven.java:105)\r\n    at org.apache.maven.cli.MavenCli.execute (MavenCli.java:956)\r\n    at org.apache.maven.cli.MavenCli.doMain (MavenCli.java:288)\r\n    at org.apache.maven.cli.MavenCli.main (MavenCli.java:192)\r\n    at sun.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)\r\n    at sun.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)\r\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)\r\n    at java.lang.reflect.Method.invoke (Method.java:498)\r\n    at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced (Launcher.java:282)\r\n    at org.codehaus.plexus.classworlds.launcher.Launcher.launch (Launcher.java:225)\r\n    at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode (Launcher.java:406)\r\n    at org.codehaus.plexus.classworlds.launcher.Launcher.main (Launcher.java:347)\r\n[WARNING] Problem processing jar entry org/ehcache/config/builders/ExpiryPolicyBuilder$TimeToIdleExpiryPolicy.class\r\njava.lang.ArrayIndexOutOfBoundsException: 1612\r\n    at org.objectweb.asm.ClassReader.readClass (Unknown Source)\r\n    at org.objectweb.asm.ClassReader.accept (Unknown Source)\r\n    at org.objectweb.asm.ClassReader.accept (Unknown Source)\r\n    at org.eclipse.jetty.annotations.AnnotationParser.scanClass (AnnotationParser.java:658)\r\n    at org.eclipse.jetty.annotations.AnnotationParser$2.processEntry (AnnotationParser.java:630)\r\n    at org.eclipse.jetty.webapp.JarScanner.matched (JarScanner.java:155)\r\n    at org.eclipse.jetty.util.PatternMatcher.matchPatterns (PatternMatcher.java:82)\r\n    at org.eclipse.jetty.util.PatternMatcher.match (PatternMatcher.java:64)\r\n    at org.eclipse.jetty.webapp.JarScanner.scan (JarScanner.java:78)\r\n    at org.eclipse.jetty.annotations.AnnotationParser.parse (AnnotationParser.java:642)\r\n    at org.eclipse.jetty.annotations.AnnotationParser.parse (AnnotationParser.java:651)\r\n    at org.eclipse.jetty.annotations.AnnotationConfiguration.parseWebInfLib (AnnotationConfiguration.java:341)\r\n    at org.eclipse.jetty.annotations.AnnotationConfiguration.configure (AnnotationConfiguration.java:99)\r\n    at org.eclipse.jetty.webapp.WebAppContext.configure (WebAppContext.java:428)\r\n    at org.eclipse.jetty.webapp.WebAppContext.startContext (WebAppContext.java:1216)\r\n    at org.eclipse.jetty.server.handler.ContextHandler.doStart (ContextHandler.java:699)\r\n    at org.eclipse.jetty.webapp.WebAppContext.doStart (WebAppContext.java:454)\r\n    at org.mortbay.jetty.plugin.JettyWebAppContext.doStart (JettyWebAppContext.java:256)\r\n    at org.eclipse.jetty.util.component.AbstractLifeCycle.start (AbstractLifeCycle.java:59)\r\n    at org.eclipse.jetty.server.handler.HandlerCollection.doStart (HandlerCollection.java:224)\r\n    at org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart (ContextHandlerCollection.java:167)\r\n    at org.eclipse.jetty.util.component.AbstractLifeCycle.start (AbstractLifeCycle.java:59)\r\n    at org.eclipse.jetty.server.handler.HandlerCollection.doStart (HandlerCollection.java:224)\r\n    at org.eclipse.jetty.util.component.AbstractLifeCycle.start (AbstractLifeCycle.java:59)\r\n    at org.eclipse.jetty.server.handler.HandlerWrapper.doStart (HandlerWrapper.java:90)\r\n    at org.eclipse.jetty.server.Server.doStart (Server.java:262)\r\n    at org.mortbay.jetty.plugin.JettyServer.doStart (JettyServer.java:65)\r\n    at org.eclipse.jetty.util.component.AbstractLifeCycle.start (AbstractLifeCycle.java:59)\r\n    at org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty (AbstractJettyMojo.java:511)\r\n    at org.mortbay.jetty.plugin.AbstractJettyMojo.execute (AbstractJettyMojo.java:364)\r\n    at org.mortbay.jetty.plugin.JettyRunMojo.execute (JettyRunMojo.java:516)\r\n    at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo (DefaultBuildPluginManager.java:137)\r\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:210)\r\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:156)\r\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:148)\r\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:117)\r\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:81)\r\n    at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build (SingleThreadedBuilder.java:56)\r\n    at org.apache.maven.lifecycle.internal.LifecycleStarter.execute (LifecycleStarter.java:128)\r\n    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:305)\r\n    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:192)\r\n    at org.apache.maven.DefaultMaven.execute (DefaultMaven.java:105)\r\n    at org.apache.maven.cli.MavenCli.execute (MavenCli.java:956)\r\n    at org.apache.maven.cli.MavenCli.doMain (MavenCli.java:288)\r\n    at org.apache.maven.cli.MavenCli.main (MavenCli.java:192)\r\n    at sun.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)\r\n    at sun.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)\r\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)\r\n    at java.lang.reflect.Method.invoke (Method.java:498)\r\n    at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced (Launcher.java:282)\r\n    at org.codehaus.plexus.classworlds.launcher.Launcher.launch (Launcher.java:225)\r\n    at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode (Launcher.java:406)\r\n    at org.codehaus.plexus.classworlds.launcher.Launcher.main (Launcher.java:347)\r\n[WARNING] Problem processing jar entry org/ehcache/config/builders/ExpiryPolicyBuilder$TimeToLiveExpiryPolicy.class\r\njava.lang.ArrayIndexOutOfBoundsException: 28417\r\n    at org.objectweb.asm.ClassReader.readClass (Unknown Source)\r\n    at org.objectweb.asm.ClassReader.accept (Unknown Source)\r\n    at org.objectweb.asm.ClassReader.accept (Unknown Source)\r\n    at org.eclipse.jetty.annotations.AnnotationParser.scanClass (AnnotationParser.java:658)\r\n    at org.eclipse.jetty.annotations.AnnotationParser$2.processEntry (AnnotationParser.java:630)\r\n    at org.eclipse.jetty.webapp.JarScanner.matched (JarScanner.java:155)\r\n    at org.eclipse.jetty.util.PatternMatcher.matchPatterns (PatternMatcher.java:82)\r\n    at org.eclipse.jetty.util.PatternMatcher.match (PatternMatcher.java:64)\r\n    at org.eclipse.jetty.webapp.JarScanner.scan (JarScanner.java:78)\r\n    at org.eclipse.jetty.annotations.AnnotationParser.parse (AnnotationParser.java:642)\r\n    at org.eclipse.jetty.annotations.AnnotationParser.parse (AnnotationParser.java:651)\r\n    at org.eclipse.jetty.annotations.AnnotationConfiguration.parseWebInfLib (AnnotationConfiguration.java:341)\r\n    at org.eclipse.jetty.annotations.AnnotationConfiguration.configure (AnnotationConfiguration.java:99)\r\n    at org.eclipse.jetty.webapp.WebAppContext.configure (WebAppContext.java:428)\r\n    at org.eclipse.jetty.webapp.WebAppContext.startContext (WebAppContext.java:1216)\r\n    at org.eclipse.jetty.server.handler.ContextHandler.doStart (ContextHandler.java:699)\r\n    at org.eclipse.jetty.webapp.WebAppContext.doStart (WebAppContext.java:454)\r\n    at org.mortbay.jetty.plugin.JettyWebAppContext.doStart (JettyWebAppContext.java:256)\r\n    at org.eclipse.jetty.util.component.AbstractLifeCycle.start (AbstractLifeCycle.java:59)\r\n    at org.eclipse.jetty.server.handler.HandlerCollection.doStart (HandlerCollection.java:224)\r\n    at org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart (ContextHandlerCollection.java:167)\r\n    at org.eclipse.jetty.util.component.AbstractLifeCycle.start (AbstractLifeCycle.java:59)\r\n    at org.eclipse.jetty.server.handler.HandlerCollection.doStart (HandlerCollection.java:224)\r\n    at org.eclipse.jetty.util.component.AbstractLifeCycle.start (AbstractLifeCycle.java:59)\r\n    at org.eclipse.jetty.server.handler.HandlerWrapper.doStart (HandlerWrapper.java:90)\r\n    at org.eclipse.jetty.server.Server.doStart (Server.java:262)\r\n    at org.mortbay.jetty.plugin.JettyServer.doStart (JettyServer.java:65)\r\n    at org.eclipse.jetty.util.component.AbstractLifeCycle.start (AbstractLifeCycle.java:59)\r\n    at org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty (AbstractJettyMojo.java:511)\r\n    at org.mortbay.jetty.plugin.AbstractJettyMojo.execute (AbstractJettyMojo.java:364)\r\n    at org.mortbay.jetty.plugin.JettyRunMojo.execute (JettyRunMojo.java:516)\r\n    at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo (DefaultBuildPluginManager.java:137)\r\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:210)\r\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:156)\r\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:148)\r\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:117)\r\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:81)\r\n    at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build (SingleThreadedBuilder.java:56)\r\n    at org.apache.maven.lifecycle.internal.LifecycleStarter.execute (LifecycleStarter.java:128)\r\n    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:305)\r\n    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:192)\r\n    at org.apache.maven.DefaultMaven.execute (DefaultMaven.java:105)\r\n    at org.apache.maven.cli.MavenCli.execute (MavenCli.java:956)\r\n    at org.apache.maven.cli.MavenCli.doMain (MavenCli.java:288)\r\n    at org.apache.maven.cli.MavenCli.main (MavenCli.java:192)\r\n    at sun.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)\r\n    at sun.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)\r\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)\r\n    at java.lang.reflect.Method.invoke (Method.java:498)\r\n    at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced (Launcher.java:282)\r\n    at org.codehaus.plexus.classworlds.launcher.Launcher.launch (Launcher.java:225)\r\n    at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode (Launcher.java:406)\r\n    at org.codehaus.plexus.classworlds.launcher.Launcher.main (Launcher.java:347)\r\n[WARNING] Problem processing jar entry org/ehcache/config/builders/ExpiryPolicyBuilder.class\r\njava.lang.ArrayIndexOutOfBoundsException: 28416\r\n    at org.objectweb.asm.ClassReader.readClass (Unknown Source)\r\n    at org.objectweb.asm.ClassReader.accept (Unknown Source)\r\n    at org.objectweb.asm.ClassReader.accept (Unknown Source)\r\n    at org.eclipse.jetty.annotations.AnnotationParser.scanClass (AnnotationParser.java:658)\r\n    at org.eclipse.jetty.annotations.AnnotationParser$2.processEntry (AnnotationParser.java:630)\r\n    at org.eclipse.jetty.webapp.JarScanner.matched (JarScanner.java:155)\r\n    at org.eclipse.jetty.util.PatternMatcher.matchPatterns (PatternMatcher.java:82)\r\n    at org.eclipse.jetty.util.PatternMatcher.match (PatternMatcher.java:64)\r\n    at org.eclipse.jetty.webapp.JarScanner.scan (JarScanner.java:78)\r\n    at org.eclipse.jetty.annotations.AnnotationParser.parse (AnnotationParser.java:642)\r\n    at org.eclipse.jetty.annotations.AnnotationParser.parse (AnnotationParser.java:651)\r\n    at org.eclipse.jetty.annotations.AnnotationConfiguration.parseWebInfLib (AnnotationConfiguration.java:341)\r\n    at org.eclipse.jetty.annotations.AnnotationConfiguration.configure (AnnotationConfiguration.java:99)\r\n    at org.eclipse.jetty.webapp.WebAppContext.configure (WebAppContext.java:428)\r\n    at org.eclipse.jetty.webapp.WebAppContext.startContext (WebAppContext.java:1216)\r\n    at org.eclipse.jetty.server.handler.ContextHandler.doStart (ContextHandler.java:699)\r\n    at org.eclipse.jetty.webapp.WebAppContext.doStart (WebAppContext.java:454)\r\n    at org.mortbay.jetty.plugin.JettyWebAppContext.doStart (JettyWebAppContext.java:256)\r\n    at org.eclipse.jetty.util.component.AbstractLifeCycle.start (AbstractLifeCycle.java:59)\r\n    at org.eclipse.jetty.server.handler.HandlerCollection.doStart (HandlerCollection.java:224)\r\n    at org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart (ContextHandlerCollection.java:167)\r\n    at org.eclipse.jetty.util.component.AbstractLifeCycle.start (AbstractLifeCycle.java:59)\r\n    at org.eclipse.jetty.server.handler.HandlerCollection.doStart (HandlerCollection.java:224)\r\n    at org.eclipse.jetty.util.component.AbstractLifeCycle.start (AbstractLifeCycle.java:59)\r\n    at org.eclipse.jetty.server.handler.HandlerWrapper.doStart (HandlerWrapper.java:90)\r\n    at org.eclipse.jetty.server.Server.doStart (Server.java:262)\r\n    at org.mortbay.jetty.plugin.JettyServer.doStart (JettyServer.java:65)\r\n    at org.eclipse.jetty.util.component.AbstractLifeCycle.start (AbstractLifeCycle.java:59)\r\n    at org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty (AbstractJettyMojo.java:511)\r\n    at org.mortbay.jetty.plugin.AbstractJettyMojo.execute (AbstractJettyMojo.java:364)\r\n    at org.mortbay.jetty.plugin.JettyRunMojo.execute (JettyRunMojo.java:516)\r\n    at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo (DefaultBuildPluginManager.java:137)\r\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:210)\r\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:156)\r\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:148)\r\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:117)\r\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:81)\r\n    at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build (SingleThreadedBuilder.java:56)\r\n    at org.apache.maven.lifecycle.internal.LifecycleStarter.execute (LifecycleStarter.java:128)\r\n    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:305)\r\n    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:192)\r\n    at org.apache.maven.DefaultMaven.execute (DefaultMaven.java:105)\r\n    at org.apache.maven.cli.MavenCli.execute (MavenCli.java:956)\r\n    at org.apache.maven.cli.MavenCli.doMain (MavenCli.java:288)\r\n    at org.apache.maven.cli.MavenCli.main (MavenCli.java:192)\r\n    at sun.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)\r\n    at sun.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)\r\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)\r\n    at java.lang.reflect.Method.invoke (Method.java:498)\r\n    at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced (Launcher.java:282)\r\n    at org.codehaus.plexus.classworlds.launcher.Launcher.launch (Launcher.java:225)\r\n    at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode (Launcher.java:406)\r\n    at org.codehaus.plexus.classworlds.launcher.Launcher.main (Launcher.java:347)\r\n[WARNING] Problem processing jar entry org/ehcache/core/Ehcache$Jsr107CacheImpl.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/ehcache/core/EhcacheBase$Jsr107CacheBase.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/ehcache/core/EhcacheBase.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/ehcache/core/EhcacheManager.class\r\njava.lang.ArrayIndexOutOfBoundsException: 37883\r\n    at org.objectweb.asm.ClassReader.<init> (Unknown Source)\r\n    at org.objectweb.asm.ClassReader.<init> (Unknown Source)\r\n    at org.objectweb.asm.ClassReader.<init> (Unknown Source)\r\n    at org.eclipse.jetty.annotations.AnnotationParser.scanClass (AnnotationParser.java:657)\r\n    at org.eclipse.jetty.annotations.AnnotationParser$2.processEntry (AnnotationParser.java:630)\r\n    at org.eclipse.jetty.webapp.JarScanner.matched (JarScanner.java:155)\r\n    at org.eclipse.jetty.util.PatternMatcher.matchPatterns (PatternMatcher.java:82)\r\n    at org.eclipse.jetty.util.PatternMatcher.match (PatternMatcher.java:64)\r\n    at org.eclipse.jetty.webapp.JarScanner.scan (JarScanner.java:78)\r\n    at org.eclipse.jetty.annotations.AnnotationParser.parse (AnnotationParser.java:642)\r\n    at org.eclipse.jetty.annotations.AnnotationParser.parse (AnnotationParser.java:651)\r\n    at org.eclipse.jetty.annotations.AnnotationConfiguration.parseWebInfLib (AnnotationConfiguration.java:341)\r\n    at org.eclipse.jetty.annotations.AnnotationConfiguration.configure (AnnotationConfiguration.java:99)\r\n    at org.eclipse.jetty.webapp.WebAppContext.configure (WebAppContext.java:428)\r\n    at org.eclipse.jetty.webapp.WebAppContext.startContext (WebAppContext.java:1216)\r\n    at org.eclipse.jetty.server.handler.ContextHandler.doStart (ContextHandler.java:699)\r\n    at org.eclipse.jetty.webapp.WebAppContext.doStart (WebAppContext.java:454)\r\n    at org.mortbay.jetty.plugin.JettyWebAppContext.doStart (JettyWebAppContext.java:256)\r\n    at org.eclipse.jetty.util.component.AbstractLifeCycle.start (AbstractLifeCycle.java:59)\r\n    at org.eclipse.jetty.server.handler.HandlerCollection.doStart (HandlerCollection.java:224)\r\n    at org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart (ContextHandlerCollection.java:167)\r\n    at org.eclipse.jetty.util.component.AbstractLifeCycle.start (AbstractLifeCycle.java:59)\r\n    at org.eclipse.jetty.server.handler.HandlerCollection.doStart (HandlerCollection.java:224)\r\n    at org.eclipse.jetty.util.component.AbstractLifeCycle.start (AbstractLifeCycle.java:59)\r\n    at org.eclipse.jetty.server.handler.HandlerWrapper.doStart (HandlerWrapper.java:90)\r\n    at org.eclipse.jetty.server.Server.doStart (Server.java:262)\r\n    at org.mortbay.jetty.plugin.JettyServer.doStart (JettyServer.java:65)\r\n    at org.eclipse.jetty.util.component.AbstractLifeCycle.start (AbstractLifeCycle.java:59)\r\n    at org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty (AbstractJettyMojo.java:511)\r\n    at org.mortbay.jetty.plugin.AbstractJettyMojo.execute (AbstractJettyMojo.java:364)\r\n    at org.mortbay.jetty.plugin.JettyRunMojo.execute (JettyRunMojo.java:516)\r\n    at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo (DefaultBuildPluginManager.java:137)\r\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:210)\r\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:156)\r\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:148)\r\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:117)\r\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:81)\r\n    at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build (SingleThreadedBuilder.java:56)\r\n    at org.apache.maven.lifecycle.internal.LifecycleStarter.execute (LifecycleStarter.java:128)\r\n    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:305)\r\n    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:192)\r\n    at org.apache.maven.DefaultMaven.execute (DefaultMaven.java:105)\r\n    at org.apache.maven.cli.MavenCli.execute (MavenCli.java:956)\r\n    at org.apache.maven.cli.MavenCli.doMain (MavenCli.java:288)\r\n    at org.apache.maven.cli.MavenCli.main (MavenCli.java:192)\r\n    at sun.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)\r\n    at sun.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)\r\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)\r\n    at java.lang.reflect.Method.invoke (Method.java:498)\r\n    at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced (Launcher.java:282)\r\n    at org.codehaus.plexus.classworlds.launcher.Launcher.launch (Launcher.java:225)\r\n    at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode (Launcher.java:406)\r\n    at org.codehaus.plexus.classworlds.launcher.Launcher.main (Launcher.java:347)\r\n[WARNING] Problem processing jar entry org/ehcache/core/config/ExpiryUtils$1.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/ehcache/core/config/ExpiryUtils$2.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/ehcache/core/config/ResourcePoolsImpl.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/ehcache/core/internal/util/ValueSuppliers.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/ehcache/core/osgi/EhcacheActivator.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/ehcache/core/osgi/OsgiServiceLoader.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/ehcache/core/spi/ServiceLocator$DependencySet.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/ehcache/core/spi/service/ServiceUtils.class\r\njava.lang.ArrayIndexOutOfBoundsException: 45312\r\n    at org.objectweb.asm.ClassReader.accept (Unknown Source)\r\n    at org.objectweb.asm.ClassReader.accept (Unknown Source)\r\n    at org.eclipse.jetty.annotations.AnnotationParser.scanClass (AnnotationParser.java:658)\r\n    at org.eclipse.jetty.annotations.AnnotationParser$2.processEntry (AnnotationParser.java:630)\r\n    at org.eclipse.jetty.webapp.JarScanner.matched (JarScanner.java:155)\r\n    at org.eclipse.jetty.util.PatternMatcher.matchPatterns (PatternMatcher.java:82)\r\n    at org.eclipse.jetty.util.PatternMatcher.match (PatternMatcher.java:64)\r\n    at org.eclipse.jetty.webapp.JarScanner.scan (JarScanner.java:78)\r\n    at org.eclipse.jetty.annotations.AnnotationParser.parse (AnnotationParser.java:642)\r\n    at org.eclipse.jetty.annotations.AnnotationParser.parse (AnnotationParser.java:651)\r\n    at org.eclipse.jetty.annotations.AnnotationConfiguration.parseWebInfLib (AnnotationConfiguration.java:341)\r\n    at org.eclipse.jetty.annotations.AnnotationConfiguration.configure (AnnotationConfiguration.java:99)\r\n    at org.eclipse.jetty.webapp.WebAppContext.configure (WebAppContext.java:428)\r\n    at org.eclipse.jetty.webapp.WebAppContext.startContext (WebAppContext.java:1216)\r\n    at org.eclipse.jetty.server.handler.ContextHandler.doStart (ContextHandler.java:699)\r\n    at org.eclipse.jetty.webapp.WebAppContext.doStart (WebAppContext.java:454)\r\n    at org.mortbay.jetty.plugin.JettyWebAppContext.doStart (JettyWebAppContext.java:256)\r\n    at org.eclipse.jetty.util.component.AbstractLifeCycle.start (AbstractLifeCycle.java:59)\r\n    at org.eclipse.jetty.server.handler.HandlerCollection.doStart (HandlerCollection.java:224)\r\n    at org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart (ContextHandlerCollection.java:167)\r\n    at org.eclipse.jetty.util.component.AbstractLifeCycle.start (AbstractLifeCycle.java:59)\r\n    at org.eclipse.jetty.server.handler.HandlerCollection.doStart (HandlerCollection.java:224)\r\n    at org.eclipse.jetty.util.component.AbstractLifeCycle.start (AbstractLifeCycle.java:59)\r\n    at org.eclipse.jetty.server.handler.HandlerWrapper.doStart (HandlerWrapper.java:90)\r\n    at org.eclipse.jetty.server.Server.doStart (Server.java:262)\r\n    at org.mortbay.jetty.plugin.JettyServer.doStart (JettyServer.java:65)\r\n    at org.eclipse.jetty.util.component.AbstractLifeCycle.start (AbstractLifeCycle.java:59)\r\n    at org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty (AbstractJettyMojo.java:511)\r\n    at org.mortbay.jetty.plugin.AbstractJettyMojo.execute (AbstractJettyMojo.java:364)\r\n    at org.mortbay.jetty.plugin.JettyRunMojo.execute (JettyRunMojo.java:516)\r\n    at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo (DefaultBuildPluginManager.java:137)\r\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:210)\r\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:156)\r\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:148)\r\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:117)\r\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:81)\r\n    at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build (SingleThreadedBuilder.java:56)\r\n    at org.apache.maven.lifecycle.internal.LifecycleStarter.execute (LifecycleStarter.java:128)\r\n    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:305)\r\n    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:192)\r\n    at org.apache.maven.DefaultMaven.execute (DefaultMaven.java:105)\r\n    at org.apache.maven.cli.MavenCli.execute (MavenCli.java:956)\r\n    at org.apache.maven.cli.MavenCli.doMain (MavenCli.java:288)\r\n    at org.apache.maven.cli.MavenCli.main (MavenCli.java:192)\r\n    at sun.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)\r\n    at sun.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)\r\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)\r\n    at java.lang.reflect.Method.invoke (Method.java:498)\r\n    at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced (Launcher.java:282)\r\n    at org.codehaus.plexus.classworlds.launcher.Launcher.launch (Launcher.java:225)\r\n    at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode (Launcher.java:406)\r\n    at org.codehaus.plexus.classworlds.launcher.Launcher.main (Launcher.java:347)\r\n[WARNING] Problem processing jar entry org/ehcache/core/store/StoreSupport.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/ehcache/core/util/ClassLoading.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/ehcache/core/util/CollectionUtil.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/ehcache/impl/events/CacheEventDispatcherImpl.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/ehcache/impl/internal/concurrent/ThreadLocalRandomUtil.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/ehcache/impl/internal/executor/OnDemandExecutionService.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/ehcache/impl/internal/executor/PartitionedScheduledExecutor.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/ehcache/impl/internal/loaderwriter/writebehind/BatchingLocalHeapWriteBehindQueue$Batch.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/ehcache/impl/internal/loaderwriter/writebehind/NonBatchingLocalHeapWriteBehindQueue.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/ehcache/impl/internal/resilience/AbstractResilienceStrategy.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/ehcache/impl/internal/statistics/DefaultCacheStatistics.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/ehcache/impl/internal/statistics/DefaultTierStatistics.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/ehcache/impl/internal/store/disk/EhcachePersistentConcurrentOffHeapClockCache.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/ehcache/impl/internal/store/disk/OffHeapDiskStore.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/ehcache/impl/internal/store/heap/KeyCopyBackend.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/ehcache/impl/internal/store/heap/OnHeapStore$Provider.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/ehcache/impl/internal/store/heap/OnHeapStore.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/ehcache/impl/internal/store/loaderwriter/LocalLoaderWriterStore.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/ehcache/impl/internal/store/offheap/AbstractOffHeapStore.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/ehcache/impl/internal/store/offheap/EhcacheConcurrentOffHeapClockCache.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/ehcache/impl/internal/store/tiering/CompoundCachingTier.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/ehcache/impl/internal/store/tiering/TieredStore$2.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/ehcache/impl/internal/store/tiering/TieredStore.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/ehcache/impl/persistence/FileBasedStateRepository.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/ehcache/impl/serialization/CompactJavaSerializer.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/ehcache/jsr107/CloseUtil.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/ehcache/jsr107/Eh107Cache.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/ehcache/jsr107/Eh107CacheManager.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/ehcache/jsr107/Eh107CompleteConfiguration.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/ehcache/jsr107/EhcacheCachingProvider.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/ehcache/jsr107/ListenerResources.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/ehcache/jsr107/Unwrap.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/ehcache/spi/loaderwriter/BulkCacheWritingException.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/ehcache/spi/persistence/StateRepository.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/ehcache/xml/ConfigurationParser.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/ehcache/xml/CoreCacheConfigurationParser.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/ehcache/xml/ResourceConfigurationParser.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/ehcache/xml/ServiceConfigurationParser.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/ehcache/xml/ServiceCreationConfigurationParser.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/ehcache/xml/XmlConfiguration$PrettyClassFormat.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/ehcache/xml/XmlConfiguration.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/ehcache/xml/model/CacheSpec.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/ehcache/xml/multi/XmlMultiConfiguration$VariantConfig.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/ehcache/xml/multi/XmlMultiConfiguration.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/ehcache/xml/provider/CacheEventDispatcherFactoryConfigurationParser.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/ehcache/xml/provider/CacheManagerPersistenceConfigurationParser.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/ehcache/xml/provider/DefaultCopyProviderConfigurationParser.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/ehcache/xml/provider/DefaultSerializationProviderConfigurationParser.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/ehcache/xml/provider/DefaultSizeOfEngineProviderConfigurationParser.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/ehcache/xml/provider/OffHeapDiskStoreProviderConfigurationParser.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/ehcache/xml/provider/PooledExecutionServiceConfigurationParser.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/ehcache/xml/provider/SimpleCoreServiceCreationConfigurationParser.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/ehcache/xml/provider/ThreadPoolServiceCreationConfigurationParser.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/ehcache/xml/provider/WriteBehindProviderConfigurationParser.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/ehcache/xml/service/DefaultCacheEventDispatcherConfigurationParser.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/ehcache/xml/service/DefaultCacheEventListenerConfigurationParser.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/ehcache/xml/service/DefaultCacheLoaderWriterConfigurationParser.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/ehcache/xml/service/DefaultResilienceStrategyConfigurationParser.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/ehcache/xml/service/DefaultSizeOfEngineConfigurationParser.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/ehcache/xml/service/DefaultWriteBehindConfigurationParser.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/ehcache/xml/service/OffHeapDiskStoreConfigurationParser.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/ehcache/xml/service/SimpleCoreServiceConfigurationParser.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/terracotta/context/query/Filter.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/terracotta/offheapstore/OffHeapHashMap.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/terracotta/offheapstore/buffersource/TimingBufferSource.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/terracotta/offheapstore/concurrent/AbstractConcurrentOffHeapCache.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/terracotta/offheapstore/disk/paging/MappedPageSource.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/terracotta/offheapstore/disk/storage/FileBackedStorageEngine.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/terracotta/offheapstore/disk/storage/PersistentIntegerStorageEngine.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/terracotta/offheapstore/disk/storage/PersistentSplitStorageEngine.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/terracotta/offheapstore/eviction/EvictionListeningReadWriteLockedOffHeapClockCache.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/terracotta/offheapstore/eviction/EvictionListeningWriteLockedOffHeapClockCache.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/terracotta/offheapstore/paging/UpfrontAllocatingPageSource.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/terracotta/offheapstore/storage/IntegerStorageEngine.class\r\njava.lang.ArrayIndexOutOfBoundsException: 29556\r\n    at org.objectweb.asm.ClassReader.readUTF8 (Unknown Source)\r\n    at org.objectweb.asm.ClassReader.readClass (Unknown Source)\r\n    at org.objectweb.asm.ClassReader.accept (Unknown Source)\r\n    at org.objectweb.asm.ClassReader.accept (Unknown Source)\r\n    at org.eclipse.jetty.annotations.AnnotationParser.scanClass (AnnotationParser.java:658)\r\n    at org.eclipse.jetty.annotations.AnnotationParser$2.processEntry (AnnotationParser.java:630)\r\n    at org.eclipse.jetty.webapp.JarScanner.matched (JarScanner.java:155)\r\n    at org.eclipse.jetty.util.PatternMatcher.matchPatterns (PatternMatcher.java:82)\r\n    at org.eclipse.jetty.util.PatternMatcher.match (PatternMatcher.java:64)\r\n    at org.eclipse.jetty.webapp.JarScanner.scan (JarScanner.java:78)\r\n    at org.eclipse.jetty.annotations.AnnotationParser.parse (AnnotationParser.java:642)\r\n    at org.eclipse.jetty.annotations.AnnotationParser.parse (AnnotationParser.java:651)\r\n    at org.eclipse.jetty.annotations.AnnotationConfiguration.parseWebInfLib (AnnotationConfiguration.java:341)\r\n    at org.eclipse.jetty.annotations.AnnotationConfiguration.configure (AnnotationConfiguration.java:99)\r\n    at org.eclipse.jetty.webapp.WebAppContext.configure (WebAppContext.java:428)\r\n    at org.eclipse.jetty.webapp.WebAppContext.startContext (WebAppContext.java:1216)\r\n    at org.eclipse.jetty.server.handler.ContextHandler.doStart (ContextHandler.java:699)\r\n    at org.eclipse.jetty.webapp.WebAppContext.doStart (WebAppContext.java:454)\r\n    at org.mortbay.jetty.plugin.JettyWebAppContext.doStart (JettyWebAppContext.java:256)\r\n    at org.eclipse.jetty.util.component.AbstractLifeCycle.start (AbstractLifeCycle.java:59)\r\n    at org.eclipse.jetty.server.handler.HandlerCollection.doStart (HandlerCollection.java:224)\r\n    at org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart (ContextHandlerCollection.java:167)\r\n    at org.eclipse.jetty.util.component.AbstractLifeCycle.start (AbstractLifeCycle.java:59)\r\n    at org.eclipse.jetty.server.handler.HandlerCollection.doStart (HandlerCollection.java:224)\r\n    at org.eclipse.jetty.util.component.AbstractLifeCycle.start (AbstractLifeCycle.java:59)\r\n    at org.eclipse.jetty.server.handler.HandlerWrapper.doStart (HandlerWrapper.java:90)\r\n    at org.eclipse.jetty.server.Server.doStart (Server.java:262)\r\n    at org.mortbay.jetty.plugin.JettyServer.doStart (JettyServer.java:65)\r\n    at org.eclipse.jetty.util.component.AbstractLifeCycle.start (AbstractLifeCycle.java:59)\r\n    at org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty (AbstractJettyMojo.java:511)\r\n    at org.mortbay.jetty.plugin.AbstractJettyMojo.execute (AbstractJettyMojo.java:364)\r\n    at org.mortbay.jetty.plugin.JettyRunMojo.execute (JettyRunMojo.java:516)\r\n    at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo (DefaultBuildPluginManager.java:137)\r\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:210)\r\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:156)\r\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:148)\r\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:117)\r\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:81)\r\n    at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build (SingleThreadedBuilder.java:56)\r\n    at org.apache.maven.lifecycle.internal.LifecycleStarter.execute (LifecycleStarter.java:128)\r\n    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:305)\r\n    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:192)\r\n    at org.apache.maven.DefaultMaven.execute (DefaultMaven.java:105)\r\n    at org.apache.maven.cli.MavenCli.execute (MavenCli.java:956)\r\n    at org.apache.maven.cli.MavenCli.doMain (MavenCli.java:288)\r\n    at org.apache.maven.cli.MavenCli.main (MavenCli.java:192)\r\n    at sun.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)\r\n    at sun.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)\r\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)\r\n    at java.lang.reflect.Method.invoke (Method.java:498)\r\n    at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced (Launcher.java:282)\r\n    at org.codehaus.plexus.classworlds.launcher.Launcher.launch (Launcher.java:225)\r\n    at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode (Launcher.java:406)\r\n    at org.codehaus.plexus.classworlds.launcher.Launcher.main (Launcher.java:347)\r\n[WARNING] Problem processing jar entry org/terracotta/offheapstore/storage/LongStorageEngine.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/terracotta/offheapstore/storage/OffHeapBufferHalfStorageEngine.class\r\njava.lang.ArrayIndexOutOfBoundsException: 262\r\n    at org.objectweb.asm.ClassReader.a (Unknown Source)\r\n    at org.objectweb.asm.ClassReader.readUTF8 (Unknown Source)\r\n    at org.objectweb.asm.ClassReader.readClass (Unknown Source)\r\n    at org.objectweb.asm.ClassReader.accept (Unknown Source)\r\n    at org.objectweb.asm.ClassReader.accept (Unknown Source)\r\n    at org.eclipse.jetty.annotations.AnnotationParser.scanClass (AnnotationParser.java:658)\r\n    at org.eclipse.jetty.annotations.AnnotationParser$2.processEntry (AnnotationParser.java:630)\r\n    at org.eclipse.jetty.webapp.JarScanner.matched (JarScanner.java:155)\r\n    at org.eclipse.jetty.util.PatternMatcher.matchPatterns (PatternMatcher.java:82)\r\n    at org.eclipse.jetty.util.PatternMatcher.match (PatternMatcher.java:64)\r\n    at org.eclipse.jetty.webapp.JarScanner.scan (JarScanner.java:78)\r\n    at org.eclipse.jetty.annotations.AnnotationParser.parse (AnnotationParser.java:642)\r\n    at org.eclipse.jetty.annotations.AnnotationParser.parse (AnnotationParser.java:651)\r\n    at org.eclipse.jetty.annotations.AnnotationConfiguration.parseWebInfLib (AnnotationConfiguration.java:341)\r\n    at org.eclipse.jetty.annotations.AnnotationConfiguration.configure (AnnotationConfiguration.java:99)\r\n    at org.eclipse.jetty.webapp.WebAppContext.configure (WebAppContext.java:428)\r\n    at org.eclipse.jetty.webapp.WebAppContext.startContext (WebAppContext.java:1216)\r\n    at org.eclipse.jetty.server.handler.ContextHandler.doStart (ContextHandler.java:699)\r\n    at org.eclipse.jetty.webapp.WebAppContext.doStart (WebAppContext.java:454)\r\n    at org.mortbay.jetty.plugin.JettyWebAppContext.doStart (JettyWebAppContext.java:256)\r\n    at org.eclipse.jetty.util.component.AbstractLifeCycle.start (AbstractLifeCycle.java:59)\r\n    at org.eclipse.jetty.server.handler.HandlerCollection.doStart (HandlerCollection.java:224)\r\n    at org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart (ContextHandlerCollection.java:167)\r\n    at org.eclipse.jetty.util.component.AbstractLifeCycle.start (AbstractLifeCycle.java:59)\r\n    at org.eclipse.jetty.server.handler.HandlerCollection.doStart (HandlerCollection.java:224)\r\n    at org.eclipse.jetty.util.component.AbstractLifeCycle.start (AbstractLifeCycle.java:59)\r\n    at org.eclipse.jetty.server.handler.HandlerWrapper.doStart (HandlerWrapper.java:90)\r\n    at org.eclipse.jetty.server.Server.doStart (Server.java:262)\r\n    at org.mortbay.jetty.plugin.JettyServer.doStart (JettyServer.java:65)\r\n    at org.eclipse.jetty.util.component.AbstractLifeCycle.start (AbstractLifeCycle.java:59)\r\n    at org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty (AbstractJettyMojo.java:511)\r\n    at org.mortbay.jetty.plugin.AbstractJettyMojo.execute (AbstractJettyMojo.java:364)\r\n    at org.mortbay.jetty.plugin.JettyRunMojo.execute (JettyRunMojo.java:516)\r\n    at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo (DefaultBuildPluginManager.java:137)\r\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:210)\r\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:156)\r\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:148)\r\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:117)\r\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:81)\r\n    at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build (SingleThreadedBuilder.java:56)\r\n    at org.apache.maven.lifecycle.internal.LifecycleStarter.execute (LifecycleStarter.java:128)\r\n    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:305)\r\n    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:192)\r\n    at org.apache.maven.DefaultMaven.execute (DefaultMaven.java:105)\r\n    at org.apache.maven.cli.MavenCli.execute (MavenCli.java:956)\r\n    at org.apache.maven.cli.MavenCli.doMain (MavenCli.java:288)\r\n    at org.apache.maven.cli.MavenCli.main (MavenCli.java:192)\r\n    at sun.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)\r\n    at sun.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)\r\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)\r\n    at java.lang.reflect.Method.invoke (Method.java:498)\r\n    at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced (Launcher.java:282)\r\n    at org.codehaus.plexus.classworlds.launcher.Launcher.launch (Launcher.java:225)\r\n    at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode (Launcher.java:406)\r\n    at org.codehaus.plexus.classworlds.launcher.Launcher.main (Launcher.java:347)\r\n[WARNING] Problem processing jar entry org/terracotta/offheapstore/storage/OffHeapBufferStorageEngine.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/terracotta/offheapstore/storage/SerializableStorageEngine.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/terracotta/offheapstore/storage/SplitStorageEngine.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/terracotta/offheapstore/storage/StringStorageEngine.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/terracotta/offheapstore/util/Retryer.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/terracotta/statistics/GeneralOperationStatistic.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/terracotta/statistics/OperationStatistic.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/terracotta/statistics/StatisticsManager.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/terracotta/statistics/Table$Builder.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/terracotta/statistics/TableValueStatistic$Builder.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/terracotta/statistics/TableValueStatistic.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/terracotta/statistics/archive/StatisticArchive.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/terracotta/statistics/derived/histogram/BarSplittingBiasedHistogram.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/terracotta/statistics/derived/histogram/Striped.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/terracotta/statistics/derived/histogram/StripedHistogram.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/terracotta/statistics/derived/latency/DefaultLatencyHistogramStatistic.class\r\njava.lang.ArrayIndexOutOfBoundsException: 51966\r\n    at org.objectweb.asm.ClassReader.readUTF8 (Unknown Source)\r\n    at org.objectweb.asm.ClassReader.readClass (Unknown Source)\r\n    at org.objectweb.asm.ClassReader.accept (Unknown Source)\r\n    at org.objectweb.asm.ClassReader.accept (Unknown Source)\r\n    at org.eclipse.jetty.annotations.AnnotationParser.scanClass (AnnotationParser.java:658)\r\n    at org.eclipse.jetty.annotations.AnnotationParser$2.processEntry (AnnotationParser.java:630)\r\n    at org.eclipse.jetty.webapp.JarScanner.matched (JarScanner.java:155)\r\n    at org.eclipse.jetty.util.PatternMatcher.matchPatterns (PatternMatcher.java:82)\r\n    at org.eclipse.jetty.util.PatternMatcher.match (PatternMatcher.java:64)\r\n    at org.eclipse.jetty.webapp.JarScanner.scan (JarScanner.java:78)\r\n    at org.eclipse.jetty.annotations.AnnotationParser.parse (AnnotationParser.java:642)\r\n    at org.eclipse.jetty.annotations.AnnotationParser.parse (AnnotationParser.java:651)\r\n    at org.eclipse.jetty.annotations.AnnotationConfiguration.parseWebInfLib (AnnotationConfiguration.java:341)\r\n    at org.eclipse.jetty.annotations.AnnotationConfiguration.configure (AnnotationConfiguration.java:99)\r\n    at org.eclipse.jetty.webapp.WebAppContext.configure (WebAppContext.java:428)\r\n    at org.eclipse.jetty.webapp.WebAppContext.startContext (WebAppContext.java:1216)\r\n    at org.eclipse.jetty.server.handler.ContextHandler.doStart (ContextHandler.java:699)\r\n    at org.eclipse.jetty.webapp.WebAppContext.doStart (WebAppContext.java:454)\r\n    at org.mortbay.jetty.plugin.JettyWebAppContext.doStart (JettyWebAppContext.java:256)\r\n    at org.eclipse.jetty.util.component.AbstractLifeCycle.start (AbstractLifeCycle.java:59)\r\n    at org.eclipse.jetty.server.handler.HandlerCollection.doStart (HandlerCollection.java:224)\r\n    at org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart (ContextHandlerCollection.java:167)\r\n    at org.eclipse.jetty.util.component.AbstractLifeCycle.start (AbstractLifeCycle.java:59)\r\n    at org.eclipse.jetty.server.handler.HandlerCollection.doStart (HandlerCollection.java:224)\r\n    at org.eclipse.jetty.util.component.AbstractLifeCycle.start (AbstractLifeCycle.java:59)\r\n    at org.eclipse.jetty.server.handler.HandlerWrapper.doStart (HandlerWrapper.java:90)\r\n    at org.eclipse.jetty.server.Server.doStart (Server.java:262)\r\n    at org.mortbay.jetty.plugin.JettyServer.doStart (JettyServer.java:65)\r\n    at org.eclipse.jetty.util.component.AbstractLifeCycle.start (AbstractLifeCycle.java:59)\r\n    at org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty (AbstractJettyMojo.java:511)\r\n    at org.mortbay.jetty.plugin.AbstractJettyMojo.execute (AbstractJettyMojo.java:364)\r\n    at org.mortbay.jetty.plugin.JettyRunMojo.execute (JettyRunMojo.java:516)\r\n    at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo (DefaultBuildPluginManager.java:137)\r\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:210)\r\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:156)\r\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:148)\r\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:117)\r\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:81)\r\n    at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build (SingleThreadedBuilder.java:56)\r\n    at org.apache.maven.lifecycle.internal.LifecycleStarter.execute (LifecycleStarter.java:128)\r\n    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:305)\r\n    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:192)\r\n    at org.apache.maven.DefaultMaven.execute (DefaultMaven.java:105)\r\n    at org.apache.maven.cli.MavenCli.execute (MavenCli.java:956)\r\n    at org.apache.maven.cli.MavenCli.doMain (MavenCli.java:288)\r\n    at org.apache.maven.cli.MavenCli.main (MavenCli.java:192)\r\n    at sun.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)\r\n    at sun.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)\r\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)\r\n    at java.lang.reflect.Method.invoke (Method.java:498)\r\n    at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced (Launcher.java:282)\r\n    at org.codehaus.plexus.classworlds.launcher.Launcher.launch (Launcher.java:225)\r\n    at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode (Launcher.java:406)\r\n    at org.codehaus.plexus.classworlds.launcher.Launcher.main (Launcher.java:347)\r\n[WARNING] Problem processing jar entry org/terracotta/statistics/derived/latency/Jsr107LatencyMonitor.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/terracotta/statistics/derived/latency/LatencyAccumulator.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/terracotta/statistics/derived/latency/LatencyHistogramStatistic.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/terracotta/statistics/derived/latency/LatencyStatistic.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/terracotta/statistics/derived/latency/MaximumLatencyHistory.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/terracotta/statistics/registry/Statistic.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry org/terracotta/statistics/registry/StatisticRegistry.class\r\njava.lang.ArrayIndexOutOfBoundsException\r\n[WARNING] Problem processing jar entry META-INF/versions/9/javax/xml/bind/ModuleUtil.class\r\njava.lang.ArrayIndexOutOfBoundsException: 58369\r\n    at org.objectweb.asm.ClassReader.readClass (Unknown Source)\r\n    at org.objectweb.asm.ClassReader.accept (Unknown Source)\r\n    at org.objectweb.asm.ClassReader.accept (Unknown Source)\r\n    at org.eclipse.jetty.annotations.AnnotationParser.scanClass (AnnotationParser.java:658)\r\n    at org.eclipse.jetty.annotations.AnnotationParser$2.processEntry (AnnotationParser.java:630)\r\n    at org.eclipse.jetty.webapp.JarScanner.matched (JarScanner.java:155)\r\n    at org.eclipse.jetty.util.PatternMatcher.matchPatterns (PatternMatcher.java:82)\r\n    at org.eclipse.jetty.util.PatternMatcher.match (PatternMatcher.java:64)\r\n    at org.eclipse.jetty.webapp.JarScanner.scan (JarScanner.java:78)\r\n    at org.eclipse.jetty.annotations.AnnotationParser.parse (AnnotationParser.java:642)\r\n    at org.eclipse.jetty.annotations.AnnotationParser.parse (AnnotationParser.java:651)\r\n    at org.eclipse.jetty.annotations.AnnotationConfiguration.parseWebInfLib (AnnotationConfiguration.java:341)\r\n    at org.eclipse.jetty.annotations.AnnotationConfiguration.configure (AnnotationConfiguration.java:99)\r\n    at org.eclipse.jetty.webapp.WebAppContext.configure (WebAppContext.java:428)\r\n    at org.eclipse.jetty.webapp.WebAppContext.startContext (WebAppContext.java:1216)\r\n    at org.eclipse.jetty.server.handler.ContextHandler.doStart (ContextHandler.java:699)\r\n    at org.eclipse.jetty.webapp.WebAppContext.doStart (WebAppContext.java:454)\r\n    at org.mortbay.jetty.plugin.JettyWebAppContext.doStart (JettyWebAppContext.java:256)\r\n    at org.eclipse.jetty.util.component.AbstractLifeCycle.start (AbstractLifeCycle.java:59)\r\n    at org.eclipse.jetty.server.handler.HandlerCollection.doStart (HandlerCollection.java:224)\r\n    at org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart (ContextHandlerCollection.java:167)\r\n    at org.eclipse.jetty.util.component.AbstractLifeCycle.start (AbstractLifeCycle.java:59)\r\n    at org.eclipse.jetty.server.handler.HandlerCollection.doStart (HandlerCollection.java:224)\r\n    at org.eclipse.jetty.util.component.AbstractLifeCycle.start (AbstractLifeCycle.java:59)\r\n    at org.eclipse.jetty.server.handler.HandlerWrapper.doStart (HandlerWrapper.java:90)\r\n    at org.eclipse.jetty.server.Server.doStart (Server.java:262)\r\n    at org.mortbay.jetty.plugin.JettyServer.doStart (JettyServer.java:65)\r\n    at org.eclipse.jetty.util.component.AbstractLifeCycle.start (AbstractLifeCycle.java:59)\r\n    at org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty (AbstractJettyMojo.java:511)\r\n    at org.mortbay.jetty.plugin.AbstractJettyMojo.execute (AbstractJettyMojo.java:364)\r\n    at org.mortbay.jetty.plugin.JettyRunMojo.execute (JettyRunMojo.java:516)\r\n    at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo (DefaultBuildPluginManager.java:137)\r\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:210)\r\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:156)\r\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:148)\r\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:117)\r\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:81)\r\n    at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build (SingleThreadedBuilder.java:56)\r\n    at org.apache.maven.lifecycle.internal.LifecycleStarter.execute (LifecycleStarter.java:128)\r\n    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:305)\r\n    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:192)\r\n    at org.apache.maven.DefaultMaven.execute (DefaultMaven.java:105)\r\n    at org.apache.maven.cli.MavenCli.execute (MavenCli.java:956)\r\n    at org.apache.maven.cli.MavenCli.doMain (MavenCli.java:288)\r\n    at org.apache.maven.cli.MavenCli.main (MavenCli.java:192)\r\n    at sun.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)\r\n    at sun.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)\r\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)\r\n    at java.lang.reflect.Method.invoke (Method.java:498)\r\n    at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced (Launcher.java:282)\r\n    at org.codehaus.plexus.classworlds.launcher.Launcher.launch (Launcher.java:225)\r\n    at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode (Launcher.java:406)\r\n    at org.codehaus.plexus.classworlds.launcher.Launcher.main (Launcher.java:347)\r\n[INFO] No Spring WebApplicationInitializer types detected on classpath\r\n```\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1238/comments",
    "author": "zhaoyou",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-04-22T10:48:45Z",
        "body": "`mvn -U clean` 试试"
      },
      {
        "user": "zhaoyou",
        "created_at": "2020-04-26T14:09:33Z",
        "body": "@zhuangjiaju  尝试过了，还是有错误。"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2020-04-27T11:02:42Z",
        "body": "看下ehcache版本。是否是`3.4.0`"
      }
    ]
  },
  {
    "number": 1236,
    "title": "能否增加LabelSSTRecord类型数据的支持",
    "created_at": "2020-04-14T01:45:31Z",
    "closed_at": "2020-05-14T07:21:25Z",
    "labels": [
      "question",
      "suggest"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1236",
    "body": "**建议描述**\r\n目前不支持LabelSSTRecord类型数据的读取，能够添加对应的支持，或者提供注册AbstractXlsRecordHandler的方法",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1236/comments",
    "author": "lvvgang",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-04-22T10:56:52Z",
        "body": "读取这个字段的需求是什么？"
      },
      {
        "user": "lvvgang",
        "created_at": "2020-04-29T07:53:10Z",
        "body": "因为有些excel的列就是这种类型，会导致读取失败"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2020-04-30T10:33:01Z",
        "body": "比如 能否提供个excel的demo"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2020-05-14T07:21:25Z",
        "body": "不知道是否已经解决了问题？如果未解决 请重新打开问题。"
      }
    ]
  },
  {
    "number": 1210,
    "title": "NumberFormatException 报错，并未被onException捕获",
    "created_at": "2020-04-01T08:41:59Z",
    "closed_at": "2020-05-14T07:22:00Z",
    "labels": [
      "bug",
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1210",
    "body": "**触发场景描述**\r\n版本2.1.6，导入时报错\r\n**触发Bug的代码**\r\n```java\r\nEasyExcel.read(file.getInputStream(), dataClass, readListener).sheet().doRead();\r\n```\r\n正常的读取，invoke正常的数据会进，但一到有问题的那行就会报错，并且不会被onException捕获\r\n**提示的异常或者没有达到的效果**\r\n经过反复debug，发现问题数据，excel中有个字段为 `#NUM!`，我不知道这个是否触发什么关键字或者变量，一解析到那行就出现上述问题，把这个字符改掉后正常",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1210/comments",
    "author": "jy05568536",
    "comments": [
      {
        "user": "jy05568536",
        "created_at": "2020-04-01T09:00:01Z",
        "body": "more info\r\n同事用Mac打开是正常一个数值，猜测应该是一个公式，用windows的同事打开情况一样，显示`#NUM!`，但导入都报同样的错"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2020-04-22T11:16:44Z",
        "body": "这个需要提供下excel 有些不符合规范的数据是会异常。"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2020-05-14T07:22:00Z",
        "body": "不知道是否解决了问题？如果未解决，请重新打开问题。"
      }
    ]
  },
  {
    "number": 1207,
    "title": "解析数据抛异常",
    "created_at": "2020-03-31T09:53:21Z",
    "closed_at": "2020-04-24T10:50:35Z",
    "labels": [
      "bug",
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1207",
    "body": "\r\n\r\njava.lang.IllegalArgumentException: Unquoted special character ';' in pattern \"#,##0;-#,##0;-??;@\"\r\n\tat java.text.DecimalFormat.applyPattern(DecimalFormat.java:3256)\r\n\tat java.text.DecimalFormat.<init>(DecimalFormat.java:464)\r\n\tat com.alibaba.excel.metadata.DataFormatter$InternalDecimalFormatWithScale.<init>(DataFormatter.java:457)\r\n\tat com.alibaba.excel.metadata.DataFormatter.createNumberFormat(DataFormatter.java:520)\r\n\tat com.alibaba.excel.metadata.DataFormatter.createFormat(DataFormatter.java:253)\r\n\tat com.alibaba.excel.metadata.DataFormatter.getFormat(DataFormatter.java:174)\r\n\tat com.alibaba.excel.metadata.DataFormatter.getFormattedNumberString(DataFormatter.java:585)\r\n\tat com.alibaba.excel.metadata.DataFormatter.format(DataFormatter.java:602)\r\n\tat com.alibaba.excel.util.NumberDataFormatterUtils.format(NumberDataFormatterUtils.java:39)\r\n\tat com.alibaba.excel.converters.string.StringNumberConverter.convertToJavaData(StringNumberConverter.java:50)\r\n\tat com.alibaba.excel.converters.string.StringNumberConverter.convertToJavaData(StringNumberConverter.java:22)\r\n\tat com.alibaba.excel.util.ConverterUtils.doConvertToJavaObject(ConverterUtils.java:133)\r\n\tat com.alibaba.excel.util.ConverterUtils.convertToJavaObject(ConverterUtils.java:103)\r\n\tat com.alibaba.excel.read.listener.ModelBuildEventListener.buildStringList(ModelBuildEventListener.java:62)\r\n\tat com.alibaba.excel.read.listener.ModelBuildEventListener.invoke(ModelBuildEventListener.java:41)\r\n\tat com.alibaba.excel.read.listener.ModelBuildEventListener.invoke(ModelBuildEventListener.java:28)\r\n\tat com.alibaba.excel.read.processor.DefaultAnalysisEventProcessor.dealData(DefaultAnalysisEventProcessor.java:100)\r\n\tat com.alibaba.excel.read.processor.DefaultAnalysisEventProcessor.endRow(DefaultAnalysisEventProcessor.java:47)\r\n\tat com.alibaba.excel.analysis.v07.handlers.RowTagHandler.endElement(RowTagHandler.java:46)\r\n\tat com.alibaba.excel.analysis.v07.handlers.sax.XlsxRowHandler.endElement(XlsxRowHandler.java:89)\r\n\tat org.apache.xerces.parsers.AbstractSAXParser.endElement(Unknown Source)",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1207/comments",
    "author": "fefredgws",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-04-22T11:17:55Z",
        "body": "能否提供下excel."
      },
      {
        "user": "fefredgws",
        "created_at": "2020-04-23T05:05:31Z",
        "body": "web 无对象 同步返回\n\n\n\n\n\n\n\n\n\n\n\n\n\n在 2020-04-22 19:18:10，\"Jiaju Zhuang\" <notifications@github.com> 写道：\n\n能否提供下excel.\n\n—\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub, or unsubscribe."
      },
      {
        "user": "fefredgws",
        "created_at": "2020-04-23T05:07:00Z",
        "body": "但不影响数据质量"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2020-04-23T11:03:22Z",
        "body": "请详细描述您的问题"
      },
      {
        "user": "fefredgws",
        "created_at": "2020-04-23T12:02:01Z",
        "body": "只是日志里会打印异常信息，没有其他影响\n\n\n| |\n何辉宗\n|\n|\n邮箱：he_huizong@163.com\n|\n\n签名由 网易邮箱大师 定制\n\n在2020年04月23日 19:03，Jiaju Zhuang 写道：\n\n请详细描述您的问题\n\n—\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub, or unsubscribe."
      }
    ]
  },
  {
    "number": 1186,
    "title": "多次导出后会白屏",
    "created_at": "2020-03-25T09:53:17Z",
    "closed_at": "2020-05-14T07:21:44Z",
    "labels": [
      "bug",
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1186",
    "body": "不刷新页面多次连续导出会白屏，报错：\r\ncom.alibaba.excel.exception.ExcelGenerateException: Can not close IO.\r\n        at com.alibaba.excel.context.WriteContextImpl.finish(WriteContextImpl.java:331)\r\n        at com.alibaba.excel.write.ExcelBuilderImpl.finish(ExcelBuilderImpl.java:101)\r\n        at com.alibaba.excel.ExcelWriter.finish(ExcelWriter.java:328)\r\n        at com.alibaba.excel.write.builder.ExcelWriterSheetBuilder.doWrite(ExcelWriterSheetBuilder.java:191)",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1186/comments",
    "author": "lxz999",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-04-22T11:31:23Z",
        "body": "贴全异常"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2020-05-14T07:21:44Z",
        "body": "不知道是否解决了问题？如果未解决，请重新打开问题。"
      }
    ]
  },
  {
    "number": 1174,
    "title": "图片重复写入的问题",
    "created_at": "2020-03-20T07:52:44Z",
    "closed_at": "2020-03-24T07:14:56Z",
    "labels": [
      "bug",
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1174",
    "body": "您好： 根据所给文档  [https : //www.yuque.com/easyexcel/faq/wpedtd](url) \r\n \r\n在设置自定义图片属性以后  发现图片重复写入了 \r\n 两张重叠图片  一张是自定义属性的图片  \r\n                  一张是非自定义属性图片\r\n\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1174/comments",
    "author": "Jin-93",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-03-23T11:31:59Z",
        "body": "你有没有将单元格设置成`Empty`，有的话看下`AbstractExcelWriteExecutor` 49行 看下 是否为空。"
      },
      {
        "user": "Jin-93",
        "created_at": "2020-03-24T02:28:54Z",
        "body": "谢谢  可以了  必须要2.2.0-beta1的   jar\r\n还有一个问题请教一下  \r\nint index = sheet.getWorkbook().addPicture(cellData.getImageValue(), HSSFWorkbook.PICTURE_TYPE_JPEG);\r\n一个sheet 只能对一种格式的图片进行设置是吗？"
      }
    ]
  },
  {
    "number": 1162,
    "title": "第一次导出的时候报这些错，第二次导出就没问题了",
    "created_at": "2020-03-17T01:41:28Z",
    "closed_at": "2020-06-23T12:20:41Z",
    "labels": [
      "help wanted",
      "question",
      "pending verification"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1162",
    "body": "\r\nnet.sf.cglib.core.CodeGenerationException: java.lang.reflect.InvocationTargetException-->null\r\n\tat net.sf.cglib.core.AbstractClassGenerator.create(AbstractClassGenerator.java:237)\r\n\tat net.sf.cglib.beans.BeanMap$Generator.create(BeanMap.java:122)\r\n\tat net.sf.cglib.beans.BeanMap.create(BeanMap.java:58)\r\n\tat com.alibaba.excel.write.executor.ExcelWriteFillExecutor.doFill(ExcelWriteFillExecutor.java:148)\r\n\tat com.alibaba.excel.write.executor.ExcelWriteFillExecutor.fill(ExcelWriteFillExecutor.java:93)\r\n\tat com.alibaba.excel.write.ExcelBuilderImpl.fill(ExcelBuilderImpl.java:84)\r\n\tat com.alibaba.excel.ExcelWriter.fill(ExcelWriter.java:185)\r\n\tat hd.module.ethics.evaluation.appraisal.AppraisalController.generateExcel(AppraisalController.java:1193)\r\n\tat hd.module.ethics.evaluation.appraisal.AppraisalController.exportEvaluationFile(AppraisalController.java:1313)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:798)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:660)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:741)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:97)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.lang.reflect.InvocationTargetException\r\n\tat sun.reflect.GeneratedMethodAccessor23.invoke(Unknown Source)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat net.sf.cglib.core.ReflectUtils.defineClass(ReflectUtils.java:384)\r\n\tat net.sf.cglib.core.AbstractClassGenerator.create(AbstractClassGenerator.java:219)\r\n\t... 66 more\r\nCaused by: java.lang.LinkageError: loader (instance of  org/springframework/boot/devtools/restart/classloader/RestartClassLoader): attempted  duplicate class definition for name: \"hd/module/ethics/evaluation/appraisal/bean/ExportExcelTemlet$$BeanMapByCGLIB$$e2144eae\"\r\n\tat java.lang.ClassLoader.defineClass1(Native Method)\r\n\tat java.lang.ClassLoader.defineClass(ClassLoader.java:763)\r\n\t... 71 more\r\n\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1162/comments",
    "author": "alwaysacc",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-03-17T11:59:54Z",
        "body": "请贴一下 详细代码。"
      },
      {
        "user": "alwaysacc",
        "created_at": "2020-03-26T07:18:15Z",
        "body": "> 请贴一下 详细代码。\r\n\r\n    public boolean generateExcel(String fileName, String name, List<ExportExcelTemlet> itemList, String answerString, HttpServletRequest request) {\r\n        String[] answerArr = answerString.split(\"#\");\r\n        int i = 0;\r\n        for (ExportExcelTemlet e : itemList) {\r\n            for (String answer : answerArr) {\r\n                String[] d = answer.split(\"_\");\r\n                if (d[0].equals(e.getId())) {\r\n                    e.setScore(d[1]);\r\n                    if (d.length > 2) {\r\n                        e.setReason(d[2]);\r\n                    }\r\n                }\r\n                if (e.getScoreType() == 1) {\r\n                    e.setType(\"基础项\");\r\n                } else if (e.getScoreType() == 2) {\r\n                    e.setType(\"加分项\");\r\n                } else if (e.getScoreType() == 3) {\r\n                    e.setType(\"减分项\");\r\n                } else if (e.getScoreType() == 4) {\r\n                    e.setType(\"其他\");\r\n                } else {\r\n                    e.setType(\"五分类\");\r\n                }\r\n            }\r\n            i = i + 1;\r\n            e.setNumber(i);\r\n        }\r\n        String templateFileName = request.getServletContext().getRealPath(\"template/ydkpExcel.xlsx\");\r\n        ExcelWriter excelWriter = EasyExcel.write(fileName).withTemplate(templateFileName).build();\r\n        WriteSheet writeSheet = EasyExcel.writerSheet().build();\r\n        excelWriter.fill(itemList,writeSheet);\r\n        Map<String, Object> map = new HashMap<String, Object>();\r\n        map.put(\"fileName\", name);\r\n        excelWriter.fill(map, writeSheet);\r\n        excelWriter.finish();\r\n        return true;\r\n    }"
      },
      {
        "user": "alwaysacc",
        "created_at": "2020-03-26T07:22:55Z",
        "body": "> 请贴一下 详细代码。\r\n\r\n我这是要导出好几个文件，放入一个文件夹里，导出完成后，把文件夹压缩成压缩包。每次重启项目，第一次操作导出时，就会失败，文件夹里有第一个导出的文件，空白，打不开。第二次，就可以了。错误就是最上面那些"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2020-06-23T12:20:41Z",
        "body": "额…… 这个问题是这样子的。你们项目中用到了spring里面的`cglib`中的`BeanMap`,但是` easyexcel`也用了`cglib`，两边同时代理一个类会出问题。建议将您代码中用到解析这个类的`org.springframework.cglib.beans.BeanMap`的改成`net.sf.cglib.beans.BeanMap`的 。"
      }
    ]
  },
  {
    "number": 1156,
    "title": "设置单元格格式无效",
    "created_at": "2020-03-12T13:29:01Z",
    "closed_at": "2020-04-22T11:14:59Z",
    "labels": [
      "help wanted",
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1156",
    "body": "**异常代码**\r\n```java\r\n// 缓存cellStyle\r\n   public class SalaryExportCellWriteHandler implements CellWriteHandler {\r\n\r\n    /**\r\n     * 导出需要设置单元格为百分数的字段\r\n     */\r\n    private static List<String> percentCellTypeList = Lists.newArrayList(\"lastYearAprilSalaryRatio\", \"lastYearSpecialSalaryRatio\", \"thisYearQ1SalaryRatio\", \"basicAdjustRatio\", \"flexibleAdjustRatio\", \"recommendedAnnualSalaryIncreasedRatio\");\r\n\r\n    private CellStyle cellStyle;\r\n\r\n    @Override\r\n    public void beforeCellCreate(WriteSheetHolder writeSheetHolder, WriteTableHolder writeTableHolder, Row row, Head head, Integer columnIndex, Integer relativeRowIndex, Boolean isHead) {\r\n    }\r\n\r\n    @Override\r\n    public void afterCellCreate(WriteSheetHolder writeSheetHolder, WriteTableHolder writeTableHolder, Cell cell, Head head, Integer relativeRowIndex, Boolean isHead) {\r\n    }\r\n\r\n    @Override\r\n    public void afterCellDispose(WriteSheetHolder writeSheetHolder, WriteTableHolder writeTableHolder, List<CellData> cellDataList, Cell cell, Head head, Integer relativeRowIndex, Boolean isHead) {\r\n        if (!isHead) {\r\n            if (Objects.isNull(cellStyle)) {\r\n                cellStyle = writeSheetHolder.getSheet().getWorkbook().createCellStyle();\r\n            }\r\n            // 设置百分比单元格格式\r\n            if (percentCellTypeList.contains(head.getFieldName())) {\r\n                cellStyle.setDataFormat(HSSFDataFormat.getBuiltinFormat(\"0.00%\"));\r\n            } else {\r\n                cellStyle.setDataFormat(HSSFDataFormat.getBuiltinFormat(\"General\"));\r\n            }\r\n            cell.setCellStyle(cellStyle);\r\n        }\r\n    }\r\n}\r\n\r\n// 不缓存cellStyle 每次都创建\r\npublic class SalaryExportCellWriteHandler implements CellWriteHandler {\r\n\r\n    /**\r\n     * 导出需要设置单元格为百分数的字段\r\n     */\r\n    private static List<String> percentCellTypeList = Lists.newArrayList(\"lastYearAprilSalaryRatio\", \"lastYearSpecialSalaryRatio\", \"thisYearQ1SalaryRatio\", \"basicAdjustRatio\", \"flexibleAdjustRatio\", \"recommendedAnnualSalaryIncreasedRatio\");\r\n    \r\n    @Override\r\n    public void beforeCellCreate(WriteSheetHolder writeSheetHolder, WriteTableHolder writeTableHolder, Row row, Head head, Integer columnIndex, Integer relativeRowIndex, Boolean isHead) {\r\n    }\r\n\r\n    @Override\r\n    public void afterCellCreate(WriteSheetHolder writeSheetHolder, WriteTableHolder writeTableHolder, Cell cell, Head head, Integer relativeRowIndex, Boolean isHead) {\r\n    }\r\n\r\n    @Override\r\n    public void afterCellDispose(WriteSheetHolder writeSheetHolder, WriteTableHolder writeTableHolder, List<CellData> cellDataList, Cell cell, Head head, Integer relativeRowIndex, Boolean isHead) {\r\n        if (!isHead) {\r\n            CellStyle cellStyle = writeSheetHolder.getSheet().getWorkbook().createCellStyle();\r\n            // 设置百分比单元格格式\r\n            if (percentCellTypeList.contains(head.getFieldName())) {\r\n                cellStyle.setDataFormat(HSSFDataFormat.getBuiltinFormat(\"0.00%\"));\r\n            } else {\r\n                cellStyle.setDataFormat(HSSFDataFormat.getBuiltinFormat(\"General\"));\r\n            }\r\n            cell.setCellStyle(cellStyle);\r\n        }\r\n    }\r\n}\r\n\r\n```\r\n**异常提示**\r\n请提供完整的异常提示,记住是全部异常！\r\n**建议描述**\r\n如果是按照上面的方式把cellStyle缓存起来的话设置的单元格格式无效，但是像下面这样每次都创建一个cellStyle是有效的，麻烦请教下是什么原因？\r\nps: 上面那种debug的时候是进去的，但是就是无效",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1156/comments",
    "author": "msl1024bit",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-03-16T14:45:59Z",
        "body": "您的`SalaryExportCellWriteHandler ` 是否每次都new ?必须每次都new 。"
      },
      {
        "user": "msl1024bit",
        "created_at": "2020-03-17T01:37:22Z",
        "body": "> 您的`SalaryExportCellWriteHandler ` 是否每次都new ?必须每次都new 。\r\n\r\n是每次都new的"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2020-03-17T12:02:18Z",
        "body": "不可能。你debug确认下，是否每个cell都进来设置了"
      },
      {
        "user": "msl1024bit",
        "created_at": "2020-03-17T15:06:54Z",
        "body": "`EasyExcel.write(out, clazz).sheet().registerWriteHandler(new SalaryExportCellWriteHandler()).doWrite(data);`\r\n这样是代表每次都new吧 ？\r\n确实每个cell都进来设置了。\r\n\r\n另外：我发现如果把两个格式分成两个独立的cellStyle变量是ok的\r\n\r\n\r\n`private CellStyle percentCellStyle;\r\n    private CellStyle generalCellStyle;\r\n\r\n    @Override\r\n    public void beforeCellCreate(WriteSheetHolder writeSheetHolder, WriteTableHolder writeTableHolder, Row row, Head head, Integer columnIndex, Integer relativeRowIndex, Boolean isHead) {\r\n    }\r\n\r\n    @Override\r\n    public void afterCellCreate(WriteSheetHolder writeSheetHolder, WriteTableHolder writeTableHolder, Cell cell, Head head, Integer relativeRowIndex, Boolean isHead) {\r\n    }\r\n\r\n    @Override\r\n    public void afterCellDispose(WriteSheetHolder writeSheetHolder, WriteTableHolder writeTableHolder, List<CellData> cellDataList, Cell cell, Head head, Integer relativeRowIndex, Boolean isHead) {\r\n        if (!isHead) {\r\n            // 设置百分比单元格格式\r\n            if (percentCellTypeList.contains(head.getFieldName())) {\r\n                if (Objects.isNull(percentCellStyle)) {\r\n                    percentCellStyle = writeSheetHolder.getSheet().getWorkbook().createCellStyle();\r\n                }\r\n                percentCellStyle.setDataFormat(HSSFDataFormat.getBuiltinFormat(\"0.00%\"));\r\n                cell.setCellStyle(percentCellStyle);\r\n            } else {\r\n                if (Objects.isNull(generalCellStyle)) {\r\n                    generalCellStyle = writeSheetHolder.getSheet().getWorkbook().createCellStyle();\r\n                }\r\n                generalCellStyle.setDataFormat(HSSFDataFormat.getBuiltinFormat(\"General\"));\r\n                cell.setCellStyle(generalCellStyle);\r\n            }\r\n        }\r\n    }`"
      },
      {
        "user": "HeroHong",
        "created_at": "2020-03-25T13:09:17Z",
        "body": "我想设置部分表头的背景样式，但是不起作用，使用的仍然是默认的样式。请问可能是什么问题？\r\n\r\n    @Override\r\n    public void afterCellDispose(WriteSheetHolder writeSheetHolder, WriteTableHolder writeTableHolder,\r\n                                 List<CellData> cellDataList, Cell cell, Head head, Integer relativeRowIndex, Boolean isHead) {\r\n        if (BooleanUtils.isTrue(isHead)) {\r\n            CellStyle cellStyle = writeSheetHolder.getSheet().getWorkbook().createCellStyle();\r\n            cellStyle.setFillPattern(FillPatternType.SOLID_FOREGROUND);\r\n            cellStyle.setFillBackgroundColor(IndexedColors.WHITE.getIndex());\r\n            Font font = writeSheetHolder.getSheet().getWorkbook().createFont();\r\n            font.setFontName(\"微软雅黑\");\r\n            cellStyle.setFont(font);\r\n            cell.setCellStyle(cellStyle);\r\n        // 头的策略\r\n        } else {\r\n            int a = 1;\r\n        }\r\n    }\r\n\r\n发现问题了：\r\n\r\n    for (WriteHandler writeHandler : handlerList) {\r\n            if (writeHandler instanceof CellWriteHandler) {\r\n                ((CellWriteHandler)writeHandler).afterCellDispose(writeContext.writeSheetHolder(),\r\n                    writeContext.writeTableHolder(), cellDataList, cell, head, relativeRowIndex, isHead);\r\n                }\r\n    }\r\nhandlerList 里有两个handler。\r\nHorizontalCellStyleStrategy，一个我自己定义的handler。然后默认的handler覆盖掉了我自己定义的样式\r\n\r\ndebug出来了。在注册handler前设置userDefault = false 就行。\r\n\r\n        EasyExcel\r\n                .write(fileName, ComplexHeadData.class)\r\n                .useDefaultStyle(false)\r\n                .registerWriteHandler(customerCommonStrategy)\r\n                .sheet(\"模板\")\r\n                .doWrite(data());\r\n"
      },
      {
        "user": "dota17",
        "created_at": "2020-04-03T07:48:38Z",
        "body": "使用最新代码，可以直接在clazz的字段上加注解\r\n @ContentStyle（dataFormat = 0xa） // 设置百分比单元格格式"
      },
      {
        "user": "Umenezumi",
        "created_at": "2020-08-10T12:18:17Z",
        "body": "> 使用最新代码，可以直接在clazz的字段上加注解\r\n> @ContentStyle（dataFormat = 0xa） // 设置百分比单元格格式\r\n\r\n你好，如果我是不生成对象的导出（头和内容均使用List<List<String>>），应该如何设置contentStyle呢？"
      },
      {
        "user": "MnsYF",
        "created_at": "2022-11-21T10:06:18Z",
        "body": "只单独设置cellstyle不行,debug发现会被FillStyleCellWriteHandler覆盖样式,需要在context中设置关闭\r\n```java\r\n@Override\r\n    public void afterCellDispose(CellWriteHandlerContext context) {\r\n        context.setIgnoreFillStyle(true);\r\n}\r\n```"
      }
    ]
  },
  {
    "number": 1152,
    "title": "字符串转 double 类型的异常如何捕获？",
    "created_at": "2020-03-11T10:23:11Z",
    "closed_at": "2020-03-23T11:43:50Z",
    "labels": [
      "help wanted",
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1152",
    "body": "**异常代码**\r\n```java\r\n        try {\r\n          // xxxxx\r\n        }  catch (ExcelGenerateException ex){\r\n            log.error(\"指标值不符合规范, ex: {}\", ex.getMessage());\r\n            log.info(\"指标值不符合规范, ex: {}\", ex.getMessage());\r\n            return R.failed(\"指标值不符合规范\");\r\n        } catch (NumberFormatException ex){\r\n            log.error(\"指标值不符合规范, ex: {}\", ex.getMessage());\r\n            log.info(\"指标值不符合规范, ex: {}\", ex.getMessage());\r\n            return R.failed(\"指标值不符合规范\");\r\n        } catch (ServiceException ex){\r\n            log.error(\"业务逻辑异常, ex: {}\", ex.getMessage());\r\n            log.info(\"业务逻辑异常, ex: {}\", ex.getMessage());\r\n            return R.failed(ex.getMessage());\r\n        } catch (Exception ex) {\r\n            log.error(\"发生未知错误, ex: {}\", ex.getMessage());\r\n            log.info(\"发生未知错误, ex: {}\", ex.getMessage());\r\n            ex.printStackTrace();\r\n            return R.failed(\"发生未知错误\" + ex.getMessage());\r\n        }\r\n```\r\n**异常提示**\r\n```\r\n发生未知错误com.alibaba.excel.exception.ExcelGenerateException: java.lang.NumberFormatException: For input string: \"12000A\"\r\n```\r\n\r\n**建议描述**\r\n在获取数据时，我定义的某个 Double 字段传入了 \"12000A\" 抛出了异常，我使用 ExcelGenerateException 和 NumberFormatException 都没有捕获到，最终被 Exception 捕获了，请问这个异常如何捕获呢？\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1152/comments",
    "author": "JianmingXia",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-03-16T14:57:38Z",
        "body": "您用的什么版本？"
      },
      {
        "user": "JianmingXia",
        "created_at": "2020-03-18T06:42:55Z",
        "body": "查了下是：1.1.2-beta4"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2020-03-23T11:43:49Z",
        "body": "建议升级版本。"
      }
    ]
  },
  {
    "number": 1143,
    "title": "使用模板导出的时候报错 java.lang.IllegalArgumentException Attempting to write a row[2] in the range [0,6] that is already written to disk.",
    "created_at": "2020-03-09T09:41:02Z",
    "closed_at": "2020-04-22T11:35:47Z",
    "labels": [
      "bug",
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1143",
    "body": "### ### **触发场景描述**\r\n使用模板导出的时候报错\r\n**触发Bug的代码**\r\nEasyExcel.write(new FileOutputStream(new File(filePath))).withTemplate(inputStream).sheet().doFill(list);\r\n**提示的异常或者没有达到的效果**\r\nCaused by: java.lang.IllegalArgumentException: Attempting to write a row[2] in the range [0,6] that is already written to disk.\r\n\tat org.apache.poi.xssf.streaming.SXSSFSheet.createRow(SXSSFSheet.java:136)\r\n\tat org.apache.poi.xssf.streaming.SXSSFSheet.createRow(SXSSFSheet.java:65)\r\n\tat com.alibaba.excel.write.executor.ExcelWriteFillExecutor.getOneCell(ExcelWriteFillExecutor.java:270)\r\n\tat com.alibaba.excel.write.executor.ExcelWriteFillExecutor.doFill(ExcelWriteFillExecutor.java:154)\r\n\tat com.alibaba.excel.write.executor.ExcelWriteFillExecutor.fill(ExcelWriteFillExecutor.java:93)\r\n\tat com.alibaba.excel.write.ExcelBuilderImpl.fill(ExcelBuilderImpl.java:84)\r\n\tat com.alibaba.excel.ExcelWriter.fill(ExcelWriter.java:185)\r\n\tat com.alibaba.excel.write.builder.ExcelWriterSheetBuilder.doFill(ExcelWriterSheetBuilder.java:202)\r\n\tat com.alibaba.excel.write.builder.ExcelWriterSheetBuilder.doFill(ExcelWriterSheetBuilder.java:195)\r\n\tat com.pttl.bdrc.report.ebs.deptmanageanalysis.controller.ExpectReceivablePaymentGoodsAmountController.getExpectReceivablePaymentGoodsAmountDataDownloadFilePath(ExpectReceivablePaymentGoodsAmountController.java:187)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:497)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:849)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:760)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)\r\n\t... 57 common frames omitted",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1143/comments",
    "author": "TaoTao-Zhao",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-03-16T16:03:15Z",
        "body": "请提供详细代码"
      },
      {
        "user": "TaoTao-Zhao",
        "created_at": "2020-03-18T06:18:08Z",
        "body": "\r\n        String filePath = FileUtils.createFile(expectReceivablePaymentGoodsAmount, TemplateEnum.EXPECT_RECEIVABLE_PAYMENT_GOODS_AMOUNT_EXPORT.getFileName());\r\n        InputStream inputStream = ExpectReceivablePaymentGoodsAmountController.class.getClassLoader().getResourceAsStream(TemplateEnum.EXPECT_RECEIVABLE_PAYMENT_GOODS_AMOUNT_EXPORT.getPath());\r\n        try {\r\n            // 将导出数据写到excel中供前台下载\r\n            EasyExcel.write(new FileOutputStream(new File(filePath))).withTemplate(inputStream).sheet().doFill(list);\r\n        } catch (FileNotFoundException e) {\r\n            log.error(\"导出数据写入文件出错\", e);\r\n            return BaseResponse.failure(BaseResponeCode.EXPORT_ERROR);\r\n        }\r\n\r\nEasyExcel.write()这句报错。项目里用了几处都是好的。唯独这个导出报错。检查了好几遍模板也没问题。"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2020-04-22T11:35:47Z",
        "body": "这个尝试删除模板的一些行试试 估计有空行之类的影像。"
      },
      {
        "user": "fisherman-0510",
        "created_at": "2020-04-29T07:50:56Z",
        "body": "出现同样的问题, 实测就是excel 出现空行导致,  "
      },
      {
        "user": "Junqian-Hao",
        "created_at": "2020-10-16T07:23:19Z",
        "body": "出现同样的问题，删除空行后解决，感谢各位大佬"
      },
      {
        "user": "mrwlei",
        "created_at": "2023-11-03T07:38:58Z",
        "body": "也出现同样的问题，是模版的问题，重新创建一个新的Excel模版就没问题了"
      }
    ]
  },
  {
    "number": 1115,
    "title": "加入EasyExcel2.1.6的依赖之后,本地Jetty启动报错.但依然可以启动",
    "created_at": "2020-02-24T13:00:03Z",
    "closed_at": "2020-03-23T11:28:35Z",
    "labels": [
      "help wanted",
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1115",
    "body": "**异常代码**\r\n```xml\r\n           <dependency>\r\n\t\t   <groupId>com.alibaba</groupId>\r\n\t\t   <artifactId>easyexcel</artifactId>\r\n\t\t   <version>2.1.6</version>\r\n\t\t</dependency>\r\n```\r\n**异常提示**\r\n2020-02-24 20:36:33.217:WARN:oeja.AnnotationParser:Problem processing jar entry org/terracotta/statistics/StatisticsManager.class\r\njava.lang.ArrayIndexOutOfBoundsException: 22674\r\n\tat org.objectweb.asm.ClassReader.<init>(Unknown Source)\r\n\tat org.objectweb.asm.ClassReader.<init>(Unknown Source)\r\n\tat org.objectweb.asm.ClassReader.<init>(Unknown Source)\r\n\tat org.eclipse.jetty.annotations.AnnotationParser.scanClass(AnnotationParser.java:898)\r\n\tat org.eclipse.jetty.annotations.AnnotationParser$2.processEntry(AnnotationParser.java:857)\r\n\tat org.eclipse.jetty.webapp.JarScanner.matched(JarScanner.java:161)\r\n\tat org.eclipse.jetty.util.PatternMatcher.matchPatterns(PatternMatcher.java:100)\r\n\tat org.eclipse.jetty.util.PatternMatcher.match(PatternMatcher.java:82)\r\n\tat org.eclipse.jetty.webapp.JarScanner.scan(JarScanner.java:84)\r\n\tat org.eclipse.jetty.annotations.AnnotationParser.parse(AnnotationParser.java:869)\r\n\tat org.eclipse.jetty.annotations.AnnotationParser.parse(AnnotationParser.java:884)\r\n\tat org.eclipse.jetty.annotations.AnnotationConfiguration.parseWebInfLib(AnnotationConfiguration.java:422)\r\n\tat org.eclipse.jetty.annotations.AnnotationConfiguration.configure(AnnotationConfiguration.java:120)\r\n\tat org.eclipse.jetty.webapp.WebAppContext.configure(WebAppContext.java:468)\r\n\tat org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1237)\r\n\tat org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:717)\r\n\tat org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:494)\r\n\tat org.mortbay.jetty.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:298)\r\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)\r\n\tat org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)\r\n\tat org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:172)\r\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)\r\n\tat org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)\r\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)\r\n\tat org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:95)\r\n\tat org.eclipse.jetty.server.Server.doStart(Server.java:282)\r\n\tat org.mortbay.jetty.plugin.JettyServer.doStart(JettyServer.java:65)\r\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)\r\n\tat org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:520)\r\n\tat org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:365)\r\n\tat org.mortbay.jetty.plugin.JettyRunMojo.execute(JettyRunMojo.java:523)\r\n\tat org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:106)\r\n\tat org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:208)\r\n\tat org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)\r\n\tat org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)\r\n\tat org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:317)\r\n\tat org.apache.maven.DefaultMaven.execute(DefaultMaven.java:152)\r\n\tat org.apache.maven.cli.MavenCli.execute(MavenCli.java:555)\r\n\tat org.apache.maven.cli.MavenCli.doMain(MavenCli.java:214)\r\n\tat org.apache.maven.cli.MavenCli.main(MavenCli.java:158)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:606)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)\r\n2020-02-24 20:36:33.219:WARN:oeja.AnnotationParser:Problem processing jar entry org/terracotta/statistics/Table$Builder.class\r\njava.lang.ArrayIndexOutOfBoundsException: 52264\r\n\tat org.objectweb.asm.ClassReader.readClass(Unknown Source)\r\n\tat org.objectweb.asm.ClassReader.accept(Unknown Source)\r\n\tat org.objectweb.asm.ClassReader.accept(Unknown Source)\r\n\tat org.eclipse.jetty.annotations.AnnotationParser.scanClass(AnnotationParser.java:899)\r\n\tat org.eclipse.jetty.annotations.AnnotationParser$2.processEntry(AnnotationParser.java:857)\r\n\tat org.eclipse.jetty.webapp.JarScanner.matched(JarScanner.java:161)\r\n\tat org.eclipse.jetty.util.PatternMatcher.matchPatterns(PatternMatcher.java:100)\r\n\tat org.eclipse.jetty.util.PatternMatcher.match(PatternMatcher.java:82)\r\n\tat org.eclipse.jetty.webapp.JarScanner.scan(JarScanner.java:84)\r\n\tat org.eclipse.jetty.annotations.AnnotationParser.parse(AnnotationParser.java:869)\r\n\tat org.eclipse.jetty.annotations.AnnotationParser.parse(AnnotationParser.java:884)\r\n\tat org.eclipse.jetty.annotations.AnnotationConfiguration.parseWebInfLib(AnnotationConfiguration.java:422)\r\n\tat org.eclipse.jetty.annotations.AnnotationConfiguration.configure(AnnotationConfiguration.java:120)\r\n\tat org.eclipse.jetty.webapp.WebAppContext.configure(WebAppContext.java:468)\r\n\tat org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1237)\r\n\tat org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:717)\r\n\tat org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:494)\r\n\tat org.mortbay.jetty.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:298)\r\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)\r\n\tat org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)\r\n\tat org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:172)\r\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)\r\n\tat org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)\r\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)\r\n\tat org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:95)\r\n\tat org.eclipse.jetty.server.Server.doStart(Server.java:282)\r\n\tat org.mortbay.jetty.plugin.JettyServer.doStart(JettyServer.java:65)\r\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)\r\n\tat org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:520)\r\n\tat org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:365)\r\n\tat org.mortbay.jetty.plugin.JettyRunMojo.execute(JettyRunMojo.java:523)\r\n\tat org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:106)\r\n\tat org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:208)\r\n\tat org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)\r\n\tat org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)\r\n\tat org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:317)\r\n\tat org.apache.maven.DefaultMaven.execute(DefaultMaven.java:152)\r\n\tat org.apache.maven.cli.MavenCli.execute(MavenCli.java:555)\r\n\tat org.apache.maven.cli.MavenCli.doMain(MavenCli.java:214)\r\n\tat org.apache.maven.cli.MavenCli.main(MavenCli.java:158)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:606)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)\r\n2020-02-24 20:36:33.222:WARN:oeja.AnnotationParser:Problem processing jar entry org/terracotta/statistics/TableValueStatistic$Builder.class\r\njava.lang.ArrayIndexOutOfBoundsException: 52264\r\n\tat org.objectweb.asm.ClassReader.readClass(Unknown Source)\r\n\tat org.objectweb.asm.ClassReader.accept(Unknown Source)\r\n\tat org.objectweb.asm.ClassReader.accept(Unknown Source)\r\n\tat org.eclipse.jetty.annotations.AnnotationParser.scanClass(AnnotationParser.java:899)\r\n\tat org.eclipse.jetty.annotations.AnnotationParser$2.processEntry(AnnotationParser.java:857)\r\n\tat org.eclipse.jetty.webapp.JarScanner.matched(JarScanner.java:161)\r\n\tat org.eclipse.jetty.util.PatternMatcher.matchPatterns(PatternMatcher.java:100)\r\n\tat org.eclipse.jetty.util.PatternMatcher.match(PatternMatcher.java:82)\r\n\tat org.eclipse.jetty.webapp.JarScanner.scan(JarScanner.java:84)\r\n\tat org.eclipse.jetty.annotations.AnnotationParser.parse(AnnotationParser.java:869)\r\n\tat org.eclipse.jetty.annotations.AnnotationParser.parse(AnnotationParser.java:884)\r\n\tat org.eclipse.jetty.annotations.AnnotationConfiguration.parseWebInfLib(AnnotationConfiguration.java:422)\r\n\tat org.eclipse.jetty.annotations.AnnotationConfiguration.configure(AnnotationConfiguration.java:120)\r\n\tat org.eclipse.jetty.webapp.WebAppContext.configure(WebAppContext.java:468)\r\n\tat org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1237)\r\n\tat org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:717)\r\n\tat org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:494)\r\n\tat org.mortbay.jetty.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:298)\r\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)\r\n\tat org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)\r\n\tat org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:172)\r\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)\r\n\tat org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)\r\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)\r\n\tat org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:95)\r\n\tat org.eclipse.jetty.server.Server.doStart(Server.java:282)\r\n\tat org.mortbay.jetty.plugin.JettyServer.doStart(JettyServer.java:65)\r\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)\r\n\tat org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:520)\r\n\tat org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:365)\r\n\tat org.mortbay.jetty.plugin.JettyRunMojo.execute(JettyRunMojo.java:523)\r\n\tat org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:106)\r\n\tat org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:208)\r\n\tat org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)\r\n\tat org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)\r\n\tat org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:317)\r\n\tat org.apache.maven.DefaultMaven.execute(DefaultMaven.java:152)\r\n\tat org.apache.maven.cli.MavenCli.execute(MavenCli.java:555)\r\n\tat org.apache.maven.cli.MavenCli.doMain(MavenCli.java:214)\r\n\tat org.apache.maven.cli.MavenCli.main(MavenCli.java:158)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:606)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)\r\n2020-02-24 20:36:33.223:WARN:oeja.AnnotationParser:Problem processing jar entry org/terracotta/statistics/TableValueStatistic.class\r\njava.lang.ArrayIndexOutOfBoundsException: 52264\r\n\tat org.objectweb.asm.ClassReader.readClass(Unknown Source)\r\n\tat org.objectweb.asm.ClassReader.accept(Unknown Source)\r\n\tat org.objectweb.asm.ClassReader.accept(Unknown Source)\r\n\tat org.eclipse.jetty.annotations.AnnotationParser.scanClass(AnnotationParser.java:899)\r\n\tat org.eclipse.jetty.annotations.AnnotationParser$2.processEntry(AnnotationParser.java:857)\r\n\tat org.eclipse.jetty.webapp.JarScanner.matched(JarScanner.java:161)\r\n\tat org.eclipse.jetty.util.PatternMatcher.matchPatterns(PatternMatcher.java:100)\r\n\tat org.eclipse.jetty.util.PatternMatcher.match(PatternMatcher.java:82)\r\n\tat org.eclipse.jetty.webapp.JarScanner.scan(JarScanner.java:84)\r\n\tat org.eclipse.jetty.annotations.AnnotationParser.parse(AnnotationParser.java:869)\r\n\tat org.eclipse.jetty.annotations.AnnotationParser.parse(AnnotationParser.java:884)\r\n\tat org.eclipse.jetty.annotations.AnnotationConfiguration.parseWebInfLib(AnnotationConfiguration.java:422)\r\n\tat org.eclipse.jetty.annotations.AnnotationConfiguration.configure(AnnotationConfiguration.java:120)\r\n\tat org.eclipse.jetty.webapp.WebAppContext.configure(WebAppContext.java:468)\r\n\tat org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1237)\r\n\tat org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:717)\r\n\tat org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:494)\r\n\tat org.mortbay.jetty.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:298)\r\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)\r\n\tat org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)\r\n\tat org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:172)\r\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)\r\n\tat org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)\r\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)\r\n\tat org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:95)\r\n\tat org.eclipse.jetty.server.Server.doStart(Server.java:282)\r\n\tat org.mortbay.jetty.plugin.JettyServer.doStart(JettyServer.java:65)\r\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)\r\n\tat org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:520)\r\n\tat org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:365)\r\n\tat org.mortbay.jetty.plugin.JettyRunMojo.execute(JettyRunMojo.java:523)\r\n\tat org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:106)\r\n\tat org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:208)\r\n\tat org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)\r\n\tat org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)\r\n\tat org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:317)\r\n\tat org.apache.maven.DefaultMaven.execute(DefaultMaven.java:152)\r\n\tat org.apache.maven.cli.MavenCli.execute(MavenCli.java:555)\r\n\tat org.apache.maven.cli.MavenCli.doMain(MavenCli.java:214)\r\n\tat org.apache.maven.cli.MavenCli.main(MavenCli.java:158)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:606)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)\r\n2020-02-24 20:36:33.225:WARN:oeja.AnnotationParser:Problem processing jar entry org/terracotta/statistics/archive/StatisticArchive.class\r\njava.lang.ArrayIndexOutOfBoundsException: 9512\r\n\tat org.objectweb.asm.ClassReader.readClass(Unknown Source)\r\n\tat org.objectweb.asm.ClassReader.accept(Unknown Source)\r\n\tat org.objectweb.asm.ClassReader.accept(Unknown Source)\r\n\tat org.eclipse.jetty.annotations.AnnotationParser.scanClass(AnnotationParser.java:899)\r\n\tat org.eclipse.jetty.annotations.AnnotationParser$2.processEntry(AnnotationParser.java:857)\r\n\tat org.eclipse.jetty.webapp.JarScanner.matched(JarScanner.java:161)\r\n\tat org.eclipse.jetty.util.PatternMatcher.matchPatterns(PatternMatcher.java:100)\r\n\tat org.eclipse.jetty.util.PatternMatcher.match(PatternMatcher.java:82)\r\n\tat org.eclipse.jetty.webapp.JarScanner.scan(JarScanner.java:84)\r\n\tat org.eclipse.jetty.annotations.AnnotationParser.parse(AnnotationParser.java:869)\r\n\tat org.eclipse.jetty.annotations.AnnotationParser.parse(AnnotationParser.java:884)\r\n\tat org.eclipse.jetty.annotations.AnnotationConfiguration.parseWebInfLib(AnnotationConfiguration.java:422)\r\n\tat org.eclipse.jetty.annotations.AnnotationConfiguration.configure(AnnotationConfiguration.java:120)\r\n\tat org.eclipse.jetty.webapp.WebAppContext.configure(WebAppContext.java:468)\r\n\tat org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1237)\r\n\tat org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:717)\r\n\tat org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:494)\r\n\tat org.mortbay.jetty.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:298)\r\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)\r\n\tat org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)\r\n\tat org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:172)\r\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)\r\n\tat org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)\r\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)\r\n\tat org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:95)\r\n\tat org.eclipse.jetty.server.Server.doStart(Server.java:282)\r\n\tat org.mortbay.jetty.plugin.JettyServer.doStart(JettyServer.java:65)\r\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)\r\n\tat org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:520)\r\n\tat org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:365)\r\n\tat org.mortbay.jetty.plugin.JettyRunMojo.execute(JettyRunMojo.java:523)\r\n\tat org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:106)\r\n\tat org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:208)\r\n\tat org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)\r\n\tat org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)\r\n\tat org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:317)\r\n\tat org.apache.maven.DefaultMaven.execute(DefaultMaven.java:152)\r\n\tat org.apache.maven.cli.MavenCli.execute(MavenCli.java:555)\r\n\tat org.apache.maven.cli.MavenCli.doMain(MavenCli.java:214)\r\n\tat org.apache.maven.cli.MavenCli.main(MavenCli.java:158)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:606)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)\r\n2020-02-24 20:36:33.229:WARN:oeja.AnnotationParser:Problem processing jar entry org/terracotta/statistics/derived/histogram/BarSplittingBiasedHistogram.class\r\njava.lang.ArrayIndexOutOfBoundsException: 27500\r\n\tat org.objectweb.asm.ClassReader.<init>(Unknown Source)\r\n\tat org.objectweb.asm.ClassReader.<init>(Unknown Source)\r\n\tat org.objectweb.asm.ClassReader.<init>(Unknown Source)\r\n\tat org.eclipse.jetty.annotations.AnnotationParser.scanClass(AnnotationParser.java:898)\r\n\tat org.eclipse.jetty.annotations.AnnotationParser$2.processEntry(AnnotationParser.java:857)\r\n\tat org.eclipse.jetty.webapp.JarScanner.matched(JarScanner.java:161)\r\n\tat org.eclipse.jetty.util.PatternMatcher.matchPatterns(PatternMatcher.java:100)\r\n\tat org.eclipse.jetty.util.PatternMatcher.match(PatternMatcher.java:82)\r\n\tat org.eclipse.jetty.webapp.JarScanner.scan(JarScanner.java:84)\r\n\tat org.eclipse.jetty.annotations.AnnotationParser.parse(AnnotationParser.java:869)\r\n\tat org.eclipse.jetty.annotations.AnnotationParser.parse(AnnotationParser.java:884)\r\n\tat org.eclipse.jetty.annotations.AnnotationConfiguration.parseWebInfLib(AnnotationConfiguration.java:422)\r\n\tat org.eclipse.jetty.annotations.AnnotationConfiguration.configure(AnnotationConfiguration.java:120)\r\n\tat org.eclipse.jetty.webapp.WebAppContext.configure(WebAppContext.java:468)\r\n\tat org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1237)\r\n\tat org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:717)\r\n\tat org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:494)\r\n\tat org.mortbay.jetty.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:298)\r\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)\r\n\tat org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)\r\n\tat org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:172)\r\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)\r\n\tat org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)\r\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)\r\n\tat org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:95)\r\n\tat org.eclipse.jetty.server.Server.doStart(Server.java:282)\r\n\tat org.mortbay.jetty.plugin.JettyServer.doStart(JettyServer.java:65)\r\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)\r\n\tat org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:520)\r\n\tat org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:365)\r\n\tat org.mortbay.jetty.plugin.JettyRunMojo.execute(JettyRunMojo.java:523)\r\n\tat org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:106)\r\n\tat org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:208)\r\n\tat org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)\r\n\tat org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)\r\n\tat org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:317)\r\n\tat org.apache.maven.DefaultMaven.execute(DefaultMaven.java:152)\r\n\tat org.apache.maven.cli.MavenCli.execute(MavenCli.java:555)\r\n\tat org.apache.maven.cli.MavenCli.doMain(MavenCli.java:214)\r\n\tat org.apache.maven.cli.MavenCli.main(MavenCli.java:158)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:606)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)\r\n2020-02-24 20:36:33.231:WARN:oeja.AnnotationParser:Problem processing jar entry org/terracotta/statistics/derived/histogram/Striped.class\r\njava.lang.ArrayIndexOutOfBoundsException: 5416\r\n\tat org.objectweb.asm.ClassReader.readClass(Unknown Source)\r\n\tat org.objectweb.asm.ClassReader.accept(Unknown Source)\r\n\tat org.objectweb.asm.ClassReader.accept(Unknown Source)\r\n\tat org.eclipse.jetty.annotations.AnnotationParser.scanClass(AnnotationParser.java:899)\r\n\tat org.eclipse.jetty.annotations.AnnotationParser$2.processEntry(AnnotationParser.java:857)\r\n\tat org.eclipse.jetty.webapp.JarScanner.matched(JarScanner.java:161)\r\n\tat org.eclipse.jetty.util.PatternMatcher.matchPatterns(PatternMatcher.java:100)\r\n\tat org.eclipse.jetty.util.PatternMatcher.match(PatternMatcher.java:82)\r\n\tat org.eclipse.jetty.webapp.JarScanner.scan(JarScanner.java:84)\r\n\tat org.eclipse.jetty.annotations.AnnotationParser.parse(AnnotationParser.java:869)\r\n\tat org.eclipse.jetty.annotations.AnnotationParser.parse(AnnotationParser.java:884)\r\n\tat org.eclipse.jetty.annotations.AnnotationConfiguration.parseWebInfLib(AnnotationConfiguration.java:422)\r\n\tat org.eclipse.jetty.annotations.AnnotationConfiguration.configure(AnnotationConfiguration.java:120)\r\n\tat org.eclipse.jetty.webapp.WebAppContext.configure(WebAppContext.java:468)\r\n\tat org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1237)\r\n\tat org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:717)\r\n\tat org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:494)\r\n\tat org.mortbay.jetty.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:298)\r\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)\r\n\tat org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)\r\n\tat org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:172)\r\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)\r\n\tat org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)\r\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)\r\n\tat org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:95)\r\n\tat org.eclipse.jetty.server.Server.doStart(Server.java:282)\r\n\tat org.mortbay.jetty.plugin.JettyServer.doStart(JettyServer.java:65)\r\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)\r\n\tat org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:520)\r\n\tat org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:365)\r\n\tat org.mortbay.jetty.plugin.JettyRunMojo.execute(JettyRunMojo.java:523)\r\n\tat org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:106)\r\n\tat org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:208)\r\n\tat org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)\r\n\tat org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)\r\n\tat org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:317)\r\n\tat org.apache.maven.DefaultMaven.execute(DefaultMaven.java:152)\r\n\tat org.apache.maven.cli.MavenCli.execute(MavenCli.java:555)\r\n\tat org.apache.maven.cli.MavenCli.doMain(MavenCli.java:214)\r\n\tat org.apache.maven.cli.MavenCli.main(MavenCli.java:158)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:606)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)\r\n2020-02-24 20:36:33.232:WARN:oeja.AnnotationParser:Problem processing jar entry org/terracotta/statistics/derived/histogram/StripedHistogram.class\r\njava.lang.ArrayIndexOutOfBoundsException: 15709\r\n\tat org.objectweb.asm.ClassReader.<init>(Unknown Source)\r\n\tat org.objectweb.asm.ClassReader.<init>(Unknown Source)\r\n\tat org.objectweb.asm.ClassReader.<init>(Unknown Source)\r\n\tat org.eclipse.jetty.annotations.AnnotationParser.scanClass(AnnotationParser.java:898)\r\n\tat org.eclipse.jetty.annotations.AnnotationParser$2.processEntry(AnnotationParser.java:857)\r\n\tat org.eclipse.jetty.webapp.JarScanner.matched(JarScanner.java:161)\r\n\tat org.eclipse.jetty.util.PatternMatcher.matchPatterns(PatternMatcher.java:100)\r\n\tat org.eclipse.jetty.util.PatternMatcher.match(PatternMatcher.java:82)\r\n\tat org.eclipse.jetty.webapp.JarScanner.scan(JarScanner.java:84)\r\n\tat org.eclipse.jetty.annotations.AnnotationParser.parse(AnnotationParser.java:869)\r\n\tat org.eclipse.jetty.annotations.AnnotationParser.parse(AnnotationParser.java:884)\r\n\tat org.eclipse.jetty.annotations.AnnotationConfiguration.parseWebInfLib(AnnotationConfiguration.java:422)\r\n\tat org.eclipse.jetty.annotations.AnnotationConfiguration.configure(AnnotationConfiguration.java:120)\r\n\tat org.eclipse.jetty.webapp.WebAppContext.configure(WebAppContext.java:468)\r\n\tat org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1237)\r\n\tat org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:717)\r\n\tat org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:494)\r\n\tat org.mortbay.jetty.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:298)\r\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)\r\n\tat org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)\r\n\tat org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:172)\r\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)\r\n\tat org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)\r\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)\r\n\tat org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:95)\r\n\tat org.eclipse.jetty.server.Server.doStart(Server.java:282)\r\n\tat org.mortbay.jetty.plugin.JettyServer.doStart(JettyServer.java:65)\r\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)\r\n\tat org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:520)\r\n\tat org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:365)\r\n\tat org.mortbay.jetty.plugin.JettyRunMojo.execute(JettyRunMojo.java:523)\r\n\tat org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:106)\r\n\tat org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:208)\r\n\tat org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)\r\n\tat org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)\r\n\tat org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:317)\r\n\tat org.apache.maven.DefaultMaven.execute(DefaultMaven.java:152)\r\n\tat org.apache.maven.cli.MavenCli.execute(MavenCli.java:555)\r\n\tat org.apache.maven.cli.MavenCli.doMain(MavenCli.java:214)\r\n\tat org.apache.maven.cli.MavenCli.main(MavenCli.java:158)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:606)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)\r\n2020-02-24 20:36:33.233:WARN:oeja.AnnotationParser:Problem processing jar entry org/terracotta/statistics/derived/latency/DefaultLatencyHistogramStatistic.class\r\njava.lang.ArrayIndexOutOfBoundsException: 51966\r\n\tat org.objectweb.asm.ClassReader.readUTF8(Unknown Source)\r\n\tat org.objectweb.asm.ClassReader.readClass(Unknown Source)\r\n\tat org.objectweb.asm.ClassReader.accept(Unknown Source)\r\n\tat org.objectweb.asm.ClassReader.accept(Unknown Source)\r\n\tat org.eclipse.jetty.annotations.AnnotationParser.scanClass(AnnotationParser.java:899)\r\n\tat org.eclipse.jetty.annotations.AnnotationParser$2.processEntry(AnnotationParser.java:857)\r\n\tat org.eclipse.jetty.webapp.JarScanner.matched(JarScanner.java:161)\r\n\tat org.eclipse.jetty.util.PatternMatcher.matchPatterns(PatternMatcher.java:100)\r\n\tat org.eclipse.jetty.util.PatternMatcher.match(PatternMatcher.java:82)\r\n\tat org.eclipse.jetty.webapp.JarScanner.scan(JarScanner.java:84)\r\n\tat org.eclipse.jetty.annotations.AnnotationParser.parse(AnnotationParser.java:869)\r\n\tat org.eclipse.jetty.annotations.AnnotationParser.parse(AnnotationParser.java:884)\r\n\tat org.eclipse.jetty.annotations.AnnotationConfiguration.parseWebInfLib(AnnotationConfiguration.java:422)\r\n\tat org.eclipse.jetty.annotations.AnnotationConfiguration.configure(AnnotationConfiguration.java:120)\r\n\tat org.eclipse.jetty.webapp.WebAppContext.configure(WebAppContext.java:468)\r\n\tat org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1237)\r\n\tat org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:717)\r\n\tat org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:494)\r\n\tat org.mortbay.jetty.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:298)\r\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)\r\n\tat org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)\r\n\tat org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:172)\r\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)\r\n\tat org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)\r\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)\r\n\tat org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:95)\r\n\tat org.eclipse.jetty.server.Server.doStart(Server.java:282)\r\n\tat org.mortbay.jetty.plugin.JettyServer.doStart(JettyServer.java:65)\r\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)\r\n\tat org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:520)\r\n\tat org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:365)\r\n\tat org.mortbay.jetty.plugin.JettyRunMojo.execute(JettyRunMojo.java:523)\r\n\tat org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:106)\r\n\tat org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:208)\r\n\tat org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)\r\n\tat org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)\r\n\tat org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:317)\r\n\tat org.apache.maven.DefaultMaven.execute(DefaultMaven.java:152)\r\n\tat org.apache.maven.cli.MavenCli.execute(MavenCli.java:555)\r\n\tat org.apache.maven.cli.MavenCli.doMain(MavenCli.java:214)\r\n\tat org.apache.maven.cli.MavenCli.main(MavenCli.java:158)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:606)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)\r\n2020-02-24 20:36:33.234:WARN:oeja.AnnotationParser:Problem processing jar entry org/terracotta/statistics/derived/latency/Jsr107LatencyMonitor.class\r\njava.lang.ArrayIndexOutOfBoundsException: 52264\r\n\tat org.objectweb.asm.ClassReader.readClass(Unknown Source)\r\n\tat org.objectweb.asm.ClassReader.accept(Unknown Source)\r\n\tat org.objectweb.asm.ClassReader.accept(Unknown Source)\r\n\tat org.eclipse.jetty.annotations.AnnotationParser.scanClass(AnnotationParser.java:899)\r\n\tat org.eclipse.jetty.annotations.AnnotationParser$2.processEntry(AnnotationParser.java:857)\r\n\tat org.eclipse.jetty.webapp.JarScanner.matched(JarScanner.java:161)\r\n\tat org.eclipse.jetty.util.PatternMatcher.matchPatterns(PatternMatcher.java:100)\r\n\tat org.eclipse.jetty.util.PatternMatcher.match(PatternMatcher.java:82)\r\n\tat org.eclipse.jetty.webapp.JarScanner.scan(JarScanner.java:84)\r\n\tat org.eclipse.jetty.annotations.AnnotationParser.parse(AnnotationParser.java:869)\r\n\tat org.eclipse.jetty.annotations.AnnotationParser.parse(AnnotationParser.java:884)\r\n\tat org.eclipse.jetty.annotations.AnnotationConfiguration.parseWebInfLib(AnnotationConfiguration.java:422)\r\n\tat org.eclipse.jetty.annotations.AnnotationConfiguration.configure(AnnotationConfiguration.java:120)\r\n\tat org.eclipse.jetty.webapp.WebAppContext.configure(WebAppContext.java:468)\r\n\tat org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1237)\r\n\tat org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:717)\r\n\tat org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:494)\r\n\tat org.mortbay.jetty.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:298)\r\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)\r\n\tat org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)\r\n\tat org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:172)\r\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)\r\n\tat org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)\r\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)\r\n\tat org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:95)\r\n\tat org.eclipse.jetty.server.Server.doStart(Server.java:282)\r\n\tat org.mortbay.jetty.plugin.JettyServer.doStart(JettyServer.java:65)\r\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)\r\n\tat org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:520)\r\n\tat org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:365)\r\n\tat org.mortbay.jetty.plugin.JettyRunMojo.execute(JettyRunMojo.java:523)\r\n\tat org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:106)\r\n\tat org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:208)\r\n\tat org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)\r\n\tat org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)\r\n\tat org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:317)\r\n\tat org.apache.maven.DefaultMaven.execute(DefaultMaven.java:152)\r\n\tat org.apache.maven.cli.MavenCli.execute(MavenCli.java:555)\r\n\tat org.apache.maven.cli.MavenCli.doMain(MavenCli.java:214)\r\n\tat org.apache.maven.cli.MavenCli.main(MavenCli.java:158)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:606)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)\r\n2020-02-24 20:36:33.234:WARN:oeja.AnnotationParser:Problem processing jar entry org/terracotta/statistics/derived/latency/LatencyAccumulator.class\r\njava.lang.ArrayIndexOutOfBoundsException: 877\r\n\tat org.objectweb.asm.ClassReader.readClass(Unknown Source)\r\n\tat org.objectweb.asm.ClassReader.accept(Unknown Source)\r\n\tat org.objectweb.asm.ClassReader.accept(Unknown Source)\r\n\tat org.eclipse.jetty.annotations.AnnotationParser.scanClass(AnnotationParser.java:899)\r\n\tat org.eclipse.jetty.annotations.AnnotationParser$2.processEntry(AnnotationParser.java:857)\r\n\tat org.eclipse.jetty.webapp.JarScanner.matched(JarScanner.java:161)\r\n\tat org.eclipse.jetty.util.PatternMatcher.matchPatterns(PatternMatcher.java:100)\r\n\tat org.eclipse.jetty.util.PatternMatcher.match(PatternMatcher.java:82)\r\n\tat org.eclipse.jetty.webapp.JarScanner.scan(JarScanner.java:84)\r\n\tat org.eclipse.jetty.annotations.AnnotationParser.parse(AnnotationParser.java:869)\r\n\tat org.eclipse.jetty.annotations.AnnotationParser.parse(AnnotationParser.java:884)\r\n\tat org.eclipse.jetty.annotations.AnnotationConfiguration.parseWebInfLib(AnnotationConfiguration.java:422)\r\n\tat org.eclipse.jetty.annotations.AnnotationConfiguration.configure(AnnotationConfiguration.java:120)\r\n\tat org.eclipse.jetty.webapp.WebAppContext.configure(WebAppContext.java:468)\r\n\tat org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1237)\r\n\tat org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:717)\r\n\tat org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:494)\r\n\tat org.mortbay.jetty.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:298)\r\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)\r\n\tat org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)\r\n\tat org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:172)\r\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)\r\n\tat org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)\r\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)\r\n\tat org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:95)\r\n\tat org.eclipse.jetty.server.Server.doStart(Server.java:282)\r\n\tat org.mortbay.jetty.plugin.JettyServer.doStart(JettyServer.java:65)\r\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)\r\n\tat org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:520)\r\n\tat org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:365)\r\n\tat org.mortbay.jetty.plugin.JettyRunMojo.execute(JettyRunMojo.java:523)\r\n\tat org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:106)\r\n\tat org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:208)\r\n\tat org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)\r\n\tat org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)\r\n\tat org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:317)\r\n\tat org.apache.maven.DefaultMaven.execute(DefaultMaven.java:152)\r\n\tat org.apache.maven.cli.MavenCli.execute(MavenCli.java:555)\r\n\tat org.apache.maven.cli.MavenCli.doMain(MavenCli.java:214)\r\n\tat org.apache.maven.cli.MavenCli.main(MavenCli.java:158)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:606)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)\r\n2020-02-24 20:36:33.235:WARN:oeja.AnnotationParser:Problem processing jar entry org/terracotta/statistics/derived/latency/LatencyHistogramStatistic.class\r\njava.lang.ArrayIndexOutOfBoundsException: 256\r\n\tat org.objectweb.asm.ClassReader.readClass(Unknown Source)\r\n\tat org.objectweb.asm.ClassReader.accept(Unknown Source)\r\n\tat org.objectweb.asm.ClassReader.accept(Unknown Source)\r\n\tat org.eclipse.jetty.annotations.AnnotationParser.scanClass(AnnotationParser.java:899)\r\n\tat org.eclipse.jetty.annotations.AnnotationParser$2.processEntry(AnnotationParser.java:857)\r\n\tat org.eclipse.jetty.webapp.JarScanner.matched(JarScanner.java:161)\r\n\tat org.eclipse.jetty.util.PatternMatcher.matchPatterns(PatternMatcher.java:100)\r\n\tat org.eclipse.jetty.util.PatternMatcher.match(PatternMatcher.java:82)\r\n\tat org.eclipse.jetty.webapp.JarScanner.scan(JarScanner.java:84)\r\n\tat org.eclipse.jetty.annotations.AnnotationParser.parse(AnnotationParser.java:869)\r\n\tat org.eclipse.jetty.annotations.AnnotationParser.parse(AnnotationParser.java:884)\r\n\tat org.eclipse.jetty.annotations.AnnotationConfiguration.parseWebInfLib(AnnotationConfiguration.java:422)\r\n\tat org.eclipse.jetty.annotations.AnnotationConfiguration.configure(AnnotationConfiguration.java:120)\r\n\tat org.eclipse.jetty.webapp.WebAppContext.configure(WebAppContext.java:468)\r\n\tat org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1237)\r\n\tat org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:717)\r\n\tat org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:494)\r\n\tat org.mortbay.jetty.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:298)\r\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)\r\n\tat org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)\r\n\tat org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:172)\r\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)\r\n\tat org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)\r\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)\r\n\tat org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:95)\r\n\tat org.eclipse.jetty.server.Server.doStart(Server.java:282)\r\n\tat org.mortbay.jetty.plugin.JettyServer.doStart(JettyServer.java:65)\r\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)\r\n\tat org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:520)\r\n\tat org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:365)\r\n\tat org.mortbay.jetty.plugin.JettyRunMojo.execute(JettyRunMojo.java:523)\r\n\tat org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:106)\r\n\tat org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:208)\r\n\tat org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)\r\n\tat org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)\r\n\tat org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:317)\r\n\tat org.apache.maven.DefaultMaven.execute(DefaultMaven.java:152)\r\n\tat org.apache.maven.cli.MavenCli.execute(MavenCli.java:555)\r\n\tat org.apache.maven.cli.MavenCli.doMain(MavenCli.java:214)\r\n\tat org.apache.maven.cli.MavenCli.main(MavenCli.java:158)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:606)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)\r\n2020-02-24 20:36:33.236:WARN:oeja.AnnotationParser:Problem processing jar entry org/terracotta/statistics/derived/latency/LatencyStatistic.class\r\njava.lang.ArrayIndexOutOfBoundsException: 12800\r\n\tat org.objectweb.asm.ClassReader.readClass(Unknown Source)\r\n\tat org.objectweb.asm.ClassReader.accept(Unknown Source)\r\n\tat org.objectweb.asm.ClassReader.accept(Unknown Source)\r\n\tat org.eclipse.jetty.annotations.AnnotationParser.scanClass(AnnotationParser.java:899)\r\n\tat org.eclipse.jetty.annotations.AnnotationParser$2.processEntry(AnnotationParser.java:857)\r\n\tat org.eclipse.jetty.webapp.JarScanner.matched(JarScanner.java:161)\r\n\tat org.eclipse.jetty.util.PatternMatcher.matchPatterns(PatternMatcher.java:100)\r\n\tat org.eclipse.jetty.util.PatternMatcher.match(PatternMatcher.java:82)\r\n\tat org.eclipse.jetty.webapp.JarScanner.scan(JarScanner.java:84)\r\n\tat org.eclipse.jetty.annotations.AnnotationParser.parse(AnnotationParser.java:869)\r\n\tat org.eclipse.jetty.annotations.AnnotationParser.parse(AnnotationParser.java:884)\r\n\tat org.eclipse.jetty.annotations.AnnotationConfiguration.parseWebInfLib(AnnotationConfiguration.java:422)\r\n\tat org.eclipse.jetty.annotations.AnnotationConfiguration.configure(AnnotationConfiguration.java:120)\r\n\tat org.eclipse.jetty.webapp.WebAppContext.configure(WebAppContext.java:468)\r\n\tat org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1237)\r\n\tat org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:717)\r\n\tat org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:494)\r\n\tat org.mortbay.jetty.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:298)\r\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)\r\n\tat org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)\r\n\tat org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:172)\r\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)\r\n\tat org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)\r\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)\r\n\tat org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:95)\r\n\tat org.eclipse.jetty.server.Server.doStart(Server.java:282)\r\n\tat org.mortbay.jetty.plugin.JettyServer.doStart(JettyServer.java:65)\r\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)\r\n\tat org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:520)\r\n\tat org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:365)\r\n\tat org.mortbay.jetty.plugin.JettyRunMojo.execute(JettyRunMojo.java:523)\r\n\tat org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:106)\r\n\tat org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:208)\r\n\tat org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)\r\n\tat org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)\r\n\tat org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:317)\r\n\tat org.apache.maven.DefaultMaven.execute(DefaultMaven.java:152)\r\n\tat org.apache.maven.cli.MavenCli.execute(MavenCli.java:555)\r\n\tat org.apache.maven.cli.MavenCli.doMain(MavenCli.java:214)\r\n\tat org.apache.maven.cli.MavenCli.main(MavenCli.java:158)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:606)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)\r\n2020-02-24 20:36:33.236:WARN:oeja.AnnotationParser:Problem processing jar entry org/terracotta/statistics/derived/latency/MaximumLatencyHistory.class\r\njava.lang.ArrayIndexOutOfBoundsException: 27136\r\n\tat org.objectweb.asm.ClassReader.readClass(Unknown Source)\r\n\tat org.objectweb.asm.ClassReader.accept(Unknown Source)\r\n\tat org.objectweb.asm.ClassReader.accept(Unknown Source)\r\n\tat org.eclipse.jetty.annotations.AnnotationParser.scanClass(AnnotationParser.java:899)\r\n\tat org.eclipse.jetty.annotations.AnnotationParser$2.processEntry(AnnotationParser.java:857)\r\n\tat org.eclipse.jetty.webapp.JarScanner.matched(JarScanner.java:161)\r\n\tat org.eclipse.jetty.util.PatternMatcher.matchPatterns(PatternMatcher.java:100)\r\n\tat org.eclipse.jetty.util.PatternMatcher.match(PatternMatcher.java:82)\r\n\tat org.eclipse.jetty.webapp.JarScanner.scan(JarScanner.java:84)\r\n\tat org.eclipse.jetty.annotations.AnnotationParser.parse(AnnotationParser.java:869)\r\n\tat org.eclipse.jetty.annotations.AnnotationParser.parse(AnnotationParser.java:884)\r\n\tat org.eclipse.jetty.annotations.AnnotationConfiguration.parseWebInfLib(AnnotationConfiguration.java:422)\r\n\tat org.eclipse.jetty.annotations.AnnotationConfiguration.configure(AnnotationConfiguration.java:120)\r\n\tat org.eclipse.jetty.webapp.WebAppContext.configure(WebAppContext.java:468)\r\n\tat org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1237)\r\n\tat org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:717)\r\n\tat org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:494)\r\n\tat org.mortbay.jetty.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:298)\r\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)\r\n\tat org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)\r\n\tat org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:172)\r\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)\r\n\tat org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)\r\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)\r\n\tat org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:95)\r\n\tat org.eclipse.jetty.server.Server.doStart(Server.java:282)\r\n\tat org.mortbay.jetty.plugin.JettyServer.doStart(JettyServer.java:65)\r\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)\r\n\tat org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:520)\r\n\tat org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:365)\r\n\tat org.mortbay.jetty.plugin.JettyRunMojo.execute(JettyRunMojo.java:523)\r\n\tat org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:106)\r\n\tat org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:208)\r\n\tat org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)\r\n\tat org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)\r\n\tat org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:317)\r\n\tat org.apache.maven.DefaultMaven.execute(DefaultMaven.java:152)\r\n\tat org.apache.maven.cli.MavenCli.execute(MavenCli.java:555)\r\n\tat org.apache.maven.cli.MavenCli.doMain(MavenCli.java:214)\r\n\tat org.apache.maven.cli.MavenCli.main(MavenCli.java:158)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:606)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)\r\n2020-02-24 20:36:33.238:WARN:oeja.AnnotationParser:Problem processing jar entry org/terracotta/statistics/registry/Statistic.class\r\njava.lang.ArrayIndexOutOfBoundsException: 55041\r\n\tat org.objectweb.asm.ClassReader.readClass(Unknown Source)\r\n\tat org.objectweb.asm.ClassReader.accept(Unknown Source)\r\n\tat org.objectweb.asm.ClassReader.accept(Unknown Source)\r\n\tat org.eclipse.jetty.annotations.AnnotationParser.scanClass(AnnotationParser.java:899)\r\n\tat org.eclipse.jetty.annotations.AnnotationParser$2.processEntry(AnnotationParser.java:857)\r\n\tat org.eclipse.jetty.webapp.JarScanner.matched(JarScanner.java:161)\r\n\tat org.eclipse.jetty.util.PatternMatcher.matchPatterns(PatternMatcher.java:100)\r\n\tat org.eclipse.jetty.util.PatternMatcher.match(PatternMatcher.java:82)\r\n\tat org.eclipse.jetty.webapp.JarScanner.scan(JarScanner.java:84)\r\n\tat org.eclipse.jetty.annotations.AnnotationParser.parse(AnnotationParser.java:869)\r\n\tat org.eclipse.jetty.annotations.AnnotationParser.parse(AnnotationParser.java:884)\r\n\tat org.eclipse.jetty.annotations.AnnotationConfiguration.parseWebInfLib(AnnotationConfiguration.java:422)\r\n\tat org.eclipse.jetty.annotations.AnnotationConfiguration.configure(AnnotationConfiguration.java:120)\r\n\tat org.eclipse.jetty.webapp.WebAppContext.configure(WebAppContext.java:468)\r\n\tat org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1237)\r\n\tat org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:717)\r\n\tat org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:494)\r\n\tat org.mortbay.jetty.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:298)\r\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)\r\n\tat org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)\r\n\tat org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:172)\r\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)\r\n\tat org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)\r\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)\r\n\tat org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:95)\r\n\tat org.eclipse.jetty.server.Server.doStart(Server.java:282)\r\n\tat org.mortbay.jetty.plugin.JettyServer.doStart(JettyServer.java:65)\r\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)\r\n\tat org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:520)\r\n\tat org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:365)\r\n\tat org.mortbay.jetty.plugin.JettyRunMojo.execute(JettyRunMojo.java:523)\r\n\tat org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:106)\r\n\tat org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:208)\r\n\tat org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)\r\n\tat org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)\r\n\tat org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:317)\r\n\tat org.apache.maven.DefaultMaven.execute(DefaultMaven.java:152)\r\n\tat org.apache.maven.cli.MavenCli.execute(MavenCli.java:555)\r\n\tat org.apache.maven.cli.MavenCli.doMain(MavenCli.java:214)\r\n\tat org.apache.maven.cli.MavenCli.main(MavenCli.java:158)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:606)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)\r\n2020-02-24 20:36:33.239:WARN:oeja.AnnotationParser:Problem processing jar entry org/terracotta/statistics/registry/StatisticRegistry.class\r\njava.lang.ArrayIndexOutOfBoundsException: 18079\r\n\tat org.objectweb.asm.ClassReader.<init>(Unknown Source)\r\n\tat org.objectweb.asm.ClassReader.<init>(Unknown Source)\r\n\tat org.objectweb.asm.ClassReader.<init>(Unknown Source)\r\n\tat org.eclipse.jetty.annotations.AnnotationParser.scanClass(AnnotationParser.java:898)\r\n\tat org.eclipse.jetty.annotations.AnnotationParser$2.processEntry(AnnotationParser.java:857)\r\n\tat org.eclipse.jetty.webapp.JarScanner.matched(JarScanner.java:161)\r\n\tat org.eclipse.jetty.util.PatternMatcher.matchPatterns(PatternMatcher.java:100)\r\n\tat org.eclipse.jetty.util.PatternMatcher.match(PatternMatcher.java:82)\r\n\tat org.eclipse.jetty.webapp.JarScanner.scan(JarScanner.java:84)\r\n\tat org.eclipse.jetty.annotations.AnnotationParser.parse(AnnotationParser.java:869)\r\n\tat org.eclipse.jetty.annotations.AnnotationParser.parse(AnnotationParser.java:884)\r\n\tat org.eclipse.jetty.annotations.AnnotationConfiguration.parseWebInfLib(AnnotationConfiguration.java:422)\r\n\tat org.eclipse.jetty.annotations.AnnotationConfiguration.configure(AnnotationConfiguration.java:120)\r\n\tat org.eclipse.jetty.webapp.WebAppContext.configure(WebAppContext.java:468)\r\n\tat org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1237)\r\n\tat org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:717)\r\n\tat org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:494)\r\n\tat org.mortbay.jetty.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:298)\r\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)\r\n\tat org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)\r\n\tat org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:172)\r\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)\r\n\tat org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)\r\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)\r\n\tat org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:95)\r\n\tat org.eclipse.jetty.server.Server.doStart(Server.java:282)\r\n\tat org.mortbay.jetty.plugin.JettyServer.doStart(JettyServer.java:65)\r\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)\r\n\tat org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:520)\r\n\tat org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:365)\r\n\tat org.mortbay.jetty.plugin.JettyRunMojo.execute(JettyRunMojo.java:523)\r\n\tat org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:106)\r\n\tat org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:208)\r\n\tat org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)\r\n\tat org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)\r\n\tat org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:317)\r\n\tat org.apache.maven.DefaultMaven.execute(DefaultMaven.java:152)\r\n\tat org.apache.maven.cli.MavenCli.execute(MavenCli.java:555)\r\n\tat org.apache.maven.cli.MavenCli.doMain(MavenCli.java:214)\r\n\tat org.apache.maven.cli.MavenCli.main(MavenCli.java:158)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:606)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)\r\n2020-02-24 20:36:33.377:WARN:oeja.AnnotationParser:Problem processing jar entry META-INF/versions/9/javax/xml/bind/ModuleUtil.class\r\njava.lang.ArrayIndexOutOfBoundsException: 58369\r\n\tat org.objectweb.asm.ClassReader.readClass(Unknown Source)\r\n\tat org.objectweb.asm.ClassReader.accept(Unknown Source)\r\n\tat org.objectweb.asm.ClassReader.accept(Unknown Source)\r\n\tat org.eclipse.jetty.annotations.AnnotationParser.scanClass(AnnotationParser.java:899)\r\n\tat org.eclipse.jetty.annotations.AnnotationParser$2.processEntry(AnnotationParser.java:857)\r\n\tat org.eclipse.jetty.webapp.JarScanner.matched(JarScanner.java:161)\r\n\tat org.eclipse.jetty.util.PatternMatcher.matchPatterns(PatternMatcher.java:100)\r\n\tat org.eclipse.jetty.util.PatternMatcher.match(PatternMatcher.java:82)\r\n\tat org.eclipse.jetty.webapp.JarScanner.scan(JarScanner.java:84)\r\n\tat org.eclipse.jetty.annotations.AnnotationParser.parse(AnnotationParser.java:869)\r\n\tat org.eclipse.jetty.annotations.AnnotationParser.parse(AnnotationParser.java:884)\r\n\tat org.eclipse.jetty.annotations.AnnotationConfiguration.parseWebInfLib(AnnotationConfiguration.java:422)\r\n\tat org.eclipse.jetty.annotations.AnnotationConfiguration.configure(AnnotationConfiguration.java:120)\r\n\tat org.eclipse.jetty.webapp.WebAppContext.configure(WebAppContext.java:468)\r\n\tat org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1237)\r\n\tat org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:717)\r\n\tat org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:494)\r\n\tat org.mortbay.jetty.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:298)\r\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)\r\n\tat org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)\r\n\tat org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:172)\r\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)\r\n\tat org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)\r\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)\r\n\tat org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:95)\r\n\tat org.eclipse.jetty.server.Server.doStart(Server.java:282)\r\n\tat org.mortbay.jetty.plugin.JettyServer.doStart(JettyServer.java:65)\r\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)\r\n\tat org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:520)\r\n\tat org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:365)\r\n\tat org.mortbay.jetty.plugin.JettyRunMojo.execute(JettyRunMojo.java:523)\r\n\tat org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:106)\r\n\tat org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:208)\r\n\tat org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)\r\n\tat org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)\r\n\tat org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:317)\r\n\tat org.apache.maven.DefaultMaven.execute(DefaultMaven.java:152)\r\n\tat org.apache.maven.cli.MavenCli.execute(MavenCli.java:555)\r\n\tat org.apache.maven.cli.MavenCli.doMain(MavenCli.java:214)\r\n\tat org.apache.maven.cli.MavenCli.main(MavenCli.java:158)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:606)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)\r\n2020-02-24 20:36:33.491:INFO:/plmExt:No Spring WebApplicationInitializer types detected on classpath\r\n2020-02-24 20:36:33.840:INFO:/plmExt:Set web app root system property: 'webapp.root' = [E:\\svn\\PLM\\PlmExt\\trunk\\PlmExt\\src\\main\\webapp]\r\n20:36:33,879 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Could NOT find resource [logback.groovy]\r\n20:36:33,880 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Could NOT find resource [logback-test.xml]\r\n20:36:33,880 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Found resource [logback.xml] at [file:/E:/svn/PLM/PlmExt/trunk/PlmExt/target/classes/logback.xml]\r\n20:36:33,880 |-WARN in ch.qos.logback.classic.LoggerContext[default] - Resource [logback.xml] occurs multiple times on the classpath.\r\n20:36:33,880 |-WARN in ch.qos.logback.classic.LoggerContext[default] - Resource [logback.xml] occurs at [jar:file:/D:/maven/repository/com/kedacom/kedacom-security/2.4.3-SNAPSHOT/kedacom-security-2.4.3-SNAPSHOT.jar!/logback.xml]\r\n20:36:33,880 |-WARN in ch.qos.logback.classic.LoggerContext[default] - Resource [logback.xml] occurs at [jar:file:/D:/maven/repository/com/kedacom/kedacom-core/2.0.0-SNAPSHOT/kedacom-core-2.0.0-SNAPSHOT.jar!/logback.xml]\r\n20:36:33,880 |-WARN in ch.qos.logback.classic.LoggerContext[default] - Resource [logback.xml] occurs at [file:/E:/svn/PLM/PlmExt/trunk/PlmExt/target/classes/logback.xml]\r\n20:36:33,913 |-INFO in ch.qos.logback.classic.joran.action.ConfigurationAction - debug attribute not set\r\n20:36:33,917 |-INFO in ch.qos.logback.classic.joran.action.JMXConfiguratorAction - begin\r\n20:36:33,948 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - About to instantiate appender of type [ch.qos.logback.core.ConsoleAppender]\r\n20:36:33,958 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - Naming appender as [console]\r\n20:36:33,986 |-INFO in ch.qos.logback.core.joran.action.NestedComplexPropertyIA - Assuming default type [ch.qos.logback.classic.encoder.PatternLayoutEncoder] for [encoder] property\r\n20:36:34,028 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - About to instantiate appender of type [ch.qos.logback.core.rolling.RollingFileAppender]\r\n20:36:34,029 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - Naming appender as [rollingFile]\r\n20:36:34,051 |-INFO in c.q.l.core.rolling.TimeBasedRollingPolicy - No compression will be used\r\n20:36:34,053 |-INFO in c.q.l.core.rolling.TimeBasedRollingPolicy - Will use the pattern logs/PlmExt.%d{yyyy-MM-dd}.log for the active file\r\n20:36:34,057 |-INFO in c.q.l.core.rolling.DefaultTimeBasedFileNamingAndTriggeringPolicy - The date pattern is 'yyyy-MM-dd' from file name pattern 'logs/PlmExt.%d{yyyy-MM-dd}.log'.\r\n20:36:34,057 |-INFO in c.q.l.core.rolling.DefaultTimeBasedFileNamingAndTriggeringPolicy - Roll-over at midnight.\r\n20:36:34,058 |-INFO in c.q.l.core.rolling.DefaultTimeBasedFileNamingAndTriggeringPolicy - Setting initial period to Thu May 03 21:18:10 CST 2018\r\n20:36:34,060 |-INFO in ch.qos.logback.core.joran.action.NestedComplexPropertyIA - Assuming default type [ch.qos.logback.classic.encoder.PatternLayoutEncoder] for [encoder] property\r\n20:36:34,062 |-INFO in ch.qos.logback.core.rolling.RollingFileAppender[rollingFile] - Active log file name: logs/PlmExt.log\r\n20:36:34,062 |-INFO in ch.qos.logback.core.rolling.RollingFileAppender[rollingFile] - File property is set to [logs/PlmExt.log]\r\n20:36:34,066 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [com.kedacom.security.dao] to INFO\r\n20:36:34,066 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [com.kedacom.plmext.dao] to INFO\r\n20:36:34,066 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [org.apache.activemq.transport] to ERROR\r\n20:36:34,066 |-INFO in ch.qos.logback.classic.joran.action.RootLoggerAction - Setting level of ROOT logger to INFO\r\n20:36:34,066 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [console] to Logger[ROOT]\r\n20:36:34,067 |-INFO in ch.qos.logback.classic.joran.action.ConfigurationAction - End of configuration.\r\n20:36:34,067 |-INFO in ch.qos.logback.classic.joran.JoranConfigurator@f8300e - Registering current configuration as safe fallback point\r\n\r\n2020-02-24 20:36:34.071:INFO:/plmExt:Initializing log4j from [classpath:/log4j.properties]\r\n2020-02-24 20:36:34.078:INFO:/plmExt:Initializing Spring root WebApplicationContext\r\n[main][org.springframework.web.context.ContextLoader.initWebApplicationContext:285][INFO ][20:36:34.080] Root WebApplicationContext: initialization started\r\n[main][o.s.web.context.support.XmlWebApplicationContext.prepareRefresh:510][INFO ][20:36:34.166] Refreshing Root WebApplicationContext: startup date [Mon Feb 24 20:36:34 CST 2020]; root of context hierarchy\r\n[main][o.s.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions:317][INFO ][20:36:34.203] Loading XML bean definitions from class path resource [applicationContext.xml]\r\n[main][o.s.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions:317][INFO ][20:36:34.277] Loading XML bean definitions from URL [file:/E:/svn/PLM/PlmExt/trunk/PlmExt/target/classes/applicationContext-bean.xml]\r\n[main][o.s.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions:317][INFO ][20:36:34.665] Loading XML bean definitions from URL [file:/E:/svn/PLM/PlmExt/trunk/PlmExt/target/classes/applicationContext-orm.xml]\r\n**建议描述**\r\n在POM.xml文件里面加入EasyExcel2.1.6的依赖之后,每次Eclipse本地启动jetty服务器都会报很多ArrayIndexOutOfBoundsException，但Jetty依然可以启动成功。我把pom里面依赖去掉就不报错。目前使用EasyExcel已实现导入导出功能，但就是每次启动Eclipse都报错，担心还是有潜在风险。所以想确认一下原因。本人Eclipse4.5，JDK7，Spring4.1,Hibernate4.3.4",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1115/comments",
    "author": "namelessmyth",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-03-16T16:37:05Z",
        "body": "目前解决了没？我看没有任何easyecel的异常？"
      },
      {
        "user": "namelessmyth",
        "created_at": "2020-03-20T15:58:50Z",
        "body": "目前还是没解决，但功能上线已经半个多月了。目前没发现功能存在问题。我同事电脑是Eclipse4.2，更新代码后也出现了这个警告提示。怀疑是JDK版本问题吧。但我们这最新的JDK就是7，领导说8和7存在很大差异不能随意升级。所以也没机会验证了。 @zhuangjiaju "
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2020-03-23T11:28:35Z",
        "body": "好的 那就先这样"
      }
    ]
  },
  {
    "number": 1102,
    "title": "2.1.6写EXCEL数据丢失",
    "created_at": "2020-02-13T07:58:41Z",
    "closed_at": "2020-04-22T11:33:08Z",
    "labels": [
      "bug",
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1102",
    "body": "**触发场景描述**\r\n数据量较大的时候写文件会丢失数据\r\n**触发Bug的代码**\r\n```java\r\n       /**\r\n     * 不创建对象的写\r\n     */\r\n    @Test\r\n    public void noModleWrite() {\r\n        // 写法1\r\n        String fileName = TestFileUtil.getPath() + \"noModleWrite\" + System.currentTimeMillis() + \".xlsx\";\r\n        // 这里 需要指定写用哪个class去写，然后写到第一个sheet，名字为模板 然后文件流会自动关闭\r\n        EasyExcel.write(fileName).head(head()).sheet(\"模板\").doWrite(dataList());\r\n    }\r\n```\r\n**提示的异常或者没有达到的效果**\r\n按照DEMO给的方式写数据，因数据量比较大（300W），所以代码将数据拆成了多分，另外将数据做了聚合后重新提取了50w，但是这50w数据写文件的时候存在丢失问题（写前进行print能看到数据存在，且行数据不存在重复）",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1102/comments",
    "author": "ctykwz",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-03-16T17:21:02Z",
        "body": "这个需要具体提供丢失的数据 什么情况下 丢失那一条 目前没遇到这种情况"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2020-04-22T11:33:07Z",
        "body": "您好 目前这个问题解决了没？没解决的话请重新打开问题"
      }
    ]
  },
  {
    "number": 1094,
    "title": "第二次导入一直卡死，没有反应",
    "created_at": "2020-02-04T03:50:18Z",
    "closed_at": "2020-03-20T04:08:05Z",
    "labels": [
      "bug",
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1094",
    "body": "",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1094/comments",
    "author": "kaitezhan",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-03-16T17:19:31Z",
        "body": "请详细描述您的问题"
      },
      {
        "user": "kaitezhan",
        "created_at": "2020-03-20T04:08:11Z",
        "body": "看错了"
      }
    ]
  },
  {
    "number": 1067,
    "title": "Springboot下面 不能写，创建对象失败，cglib",
    "created_at": "2020-01-09T10:54:35Z",
    "closed_at": "2020-04-22T11:33:28Z",
    "labels": [
      "bug",
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1067",
    "body": "**触发场景描述**\r\n\r\n**触发Bug的代码**\r\n                EasyExcel.write(fileName, UploadBaseArchivesFileResponseVo.class).sheet(\"模板\").doWrite(list);\r\n   这里写代码\r\n```\r\n**提示的异常或者没有达到的效果**\r\n2020-一月-09 18:47:22.722 ERROR [http-nio-8090-exec-2] c.y.c.e.h.ApiExceptionHandler - java.lang.reflect.InvocationTargetException-->null\r\nnet.sf.cglib.core.CodeGenerationException: java.lang.reflect.InvocationTargetException-->null\r\n\tat net.sf.cglib.core.AbstractClassGenerator.create(AbstractClassGenerator.java:237)\r\n\tat net.sf.cglib.beans.BeanMap$Generator.create(BeanMap.java:122)\r\n\tat net.sf.cglib.beans.BeanMap.create(BeanMap.java:58)\r\n\tat com.alibaba.excel.write.executor.ExcelWriteAddExecutor.addJavaObjectToExcel(ExcelWriteAddExecutor.java:114)\r\n\tat com.alibaba.excel.write.executor.ExcelWriteAddExecutor.addOneRowOfDataToExcel(ExcelWriteAddExecutor.java:65)\r\n\tat com.alibaba.excel.write.executor.ExcelWriteAddExecutor.add(ExcelWriteAddExecutor.java:51)\r\n\tat com.alibaba.excel.write.ExcelBuilderImpl.addContent(ExcelBuilderImpl.java:61)\r\n\tat com.alibaba.excel.ExcelWriter.write(ExcelWriter.java:161)\r\n\tat com.alibaba.excel.ExcelWriter.write(ExcelWriter.java:146)\r\n\tat com.alibaba.excel.write.builder.ExcelWriterSheetBuilder.doWrite(ExcelWriterSheetBuilder.java:190)\r\n\tat com.ydl.archives.api.BaseArchivesApi.batchUploadBaseArchivesFile(BaseArchivesApi.java:97)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:891)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:661)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:742)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:800)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:806)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1498)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.lang.reflect.InvocationTargetException: null\r\n\tat sun.reflect.GeneratedMethodAccessor41.invoke(Unknown Source)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat net.sf.cglib.core.ReflectUtils.defineClass(ReflectUtils.java:384)\r\n\tat net.sf.cglib.core.AbstractClassGenerator.create(AbstractClassGenerator.java:219)\r\n\t... 64 common frames omitted\r\nCaused by: java.lang.LinkageError: loader (instance of  sun/misc/Launcher$AppClassLoader): attempted  duplicate class definition for name: \"com/ydl/archives/vo/response/UploadBaseArchivesFileResponseVo$$BeanMapByCGLIB$$4feba77d\"\r\n\tat java.lang.ClassLoader.defineClass1(Native Method)\r\n\tat java.lang.ClassLoader.defineClass(ClassLoader.java:756)\r\n\t... 69 common frames omitted",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1067/comments",
    "author": "brightgao123",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-03-16T17:33:22Z",
        "body": "这个对象的代码能否贴一下"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2020-04-22T11:33:28Z",
        "body": "您好 目前问题解决了没 没解决的话请重新打开问题"
      }
    ]
  },
  {
    "number": 1059,
    "title": "导出只有数据没有表头",
    "created_at": "2020-01-07T09:51:36Z",
    "closed_at": "2020-03-17T15:52:39Z",
    "labels": [
      "help wanted",
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1059",
    "body": "导出只有数据没有表头？？？注解是这样的以此往下\r\n @ExcelProperty(value = \"协议号\", index = 0)\r\n请教下",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1059/comments",
    "author": "momobaiduren",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-01-07T13:49:17Z",
        "body": "请贴全代码。或者参照demo再试试。"
      },
      {
        "user": "chenqi146",
        "created_at": "2020-01-08T10:43:57Z",
        "body": "我现在也失效了  没有表头\r\n`\r\n@Data\r\n@ColumnWidth(50)\r\npublic class DeviceExcel {\r\n\r\n    @ExcelProperty(\"序号\")\r\n    private String no;\r\n\r\n    @ExcelProperty(\"隶属设施\")\r\n    private String facility;\r\n\r\n    @ExcelProperty(\"隶属标签\")\r\n    private String label;\r\n\r\n    @ExcelProperty(\"设备名称\")\r\n    private String name;\r\n\r\n    @ExcelProperty(\"设备标签\")\r\n    private String deviceLabel;\r\n\r\n    @ExcelProperty(\"type\")\r\n    private String type;\r\n\r\n    @ExcelProperty(\"经度\")\r\n    private String longitude;\r\n\r\n    @ExcelProperty(\"纬度\")\r\n    private String latitude;\r\n\r\n    @ExcelProperty(\"单位\")\r\n    private String unit;\r\n}\r\n`"
      },
      {
        "user": "dota17",
        "created_at": "2020-03-07T06:47:08Z",
        "body": "按照demo试了下，导出数据是正常的，我用的是当前master分支的代码，你们是不是哪个地方没弄对？\r\n\r\n@Data\r\n@ColumnWidth(50)\r\npublic class DemoData {\r\n    @ExcelProperty(value = \"字符串标题\", index = 0)\r\n    private String string;\r\n    @ExcelProperty(value = \"日期标题\", index = 1)\r\n    private Date date;\r\n    @ExcelProperty(value = \"数字标题\", index = 2)\r\n    private Double doubleData;\r\n    /**\r\n     * 忽略这个字段\r\n     */\r\n    @ExcelIgnore\r\n    private String ignore;\r\n}\r\n\r\n@Test\r\n    public void simpleWrite() {\r\n        // 写法1\r\n        String fileName = TestFileUtil.getPath() + \"simpleWrite\" + System.currentTimeMillis() + \".xlsx\";\r\n        // 这里 需要指定写用哪个class去写，然后写到第一个sheet，名字为模板 然后文件流会自动关闭\r\n        // 如果这里想使用03 则 传入excelType参数即可\r\n        EasyExcel.write(fileName, DemoData.class).sheet(\"模板\").doWrite(data());\r\n\r\n        // 写法2\r\n        fileName = TestFileUtil.getPath() + \"simpleWrite\" + System.currentTimeMillis() + \".xlsx\";\r\n        // 这里 需要指定写用哪个class去写\r\n        ExcelWriter excelWriter = EasyExcel.write(fileName, DemoData.class).build();\r\n        WriteSheet writeSheet = EasyExcel.writerSheet(\"模板\").build();\r\n        excelWriter.write(data(), writeSheet);\r\n        /// 千万别忘记finish 会帮忙关闭流\r\n        excelWriter.finish();\r\n    }"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2020-03-17T15:52:39Z",
        "body": "请升级到最新版本使用。"
      },
      {
        "user": "JQLjql200713",
        "created_at": "2022-04-20T15:02:30Z",
        "body": "使用写法3的话导出数据仍然没有表头，请问是什么原因呢？"
      },
      {
        "user": "XujinCoding",
        "created_at": "2022-09-09T08:38:10Z",
        "body": "我也是导出数据没有表头\r\n @Test\r\n    public void simpleWrite() {\r\n        EasyExcel.write(\"test_write.xlsx\", EasyExcel.class).sheet(\"sheet1\").doWrite(data());\r\n    }\r\n\r\n    private List<ExcelDTO> data() {\r\n        List<ExcelDTO> list = ListUtils.newArrayList();\r\n        for (int i = 0; i < 10000; i++) {\r\n            ExcelDTO data = new ExcelDTO();\r\n            data.setName(\"字符串\" + i);\r\n            data.setAge(i+10);\r\n            data.setSex(SexEnum.MAN);\r\n            list.add(data);\r\n        }\r\n        return list;\r\n    }\r\n@Data\r\npublic class ExcelDTO {\r\n    @ExcelProperty({\"主标题\", \"字符串标题\"})\r\n    @ColumnWidth(500)\r\n    public String name;\r\n    @ExcelProperty({\"主标题\", \"字符串标题\"})\r\n    public Integer age;\r\n    @ExcelProperty(value = {\"主标题\", \"字符串标题\"},converter = EnumConvert.class)\r\n    public SexEnum sex;\r\n}"
      },
      {
        "user": "JiachenLi",
        "created_at": "2024-01-31T05:17:38Z",
        "body": "EasyExcel version3.3.3\r\n```\r\n@Data\r\n@ExcelIgnoreUnannotated\r\npublic class ExcelDTO {\r\n\r\n  @ExcelProperty(value = '字段1', order = 1)\r\n  private firstColumn;\r\n  \r\n  @ExcelProperty(value = '字段2', order = 2)\r\n  private secondColumn;\r\n  \r\n  private thirdColumn;\r\n}\r\n```\r\n我遇到的场景是类中有一个字段不需要转为excel列，字段上使用 `@ExcelIgnore` 注解无效，该字段数据仍然会写入excel，并且会导致表头注解失效。改成 `@ExcelIgnoreUnannotated` 就正常了。"
      }
    ]
  },
  {
    "number": 1055,
    "title": " 使用@DateTimeFormat转换失败后，为什么不抛出异常，而是原样返回。",
    "created_at": "2020-01-05T14:22:19Z",
    "closed_at": "2020-03-17T15:29:20Z",
    "labels": [
      "help wanted",
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1055",
    "body": " 请问下：\r\n              使用@DateTimeFormat转换失败后，为什么不抛出异常，而是原数返回。\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1055/comments",
    "author": "duxmbox",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-01-07T13:52:31Z",
        "body": "请提供详细代码，所有异常都会抛出来的。"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2020-03-17T15:29:19Z",
        "body": "问题是否已经解决？如果未解决，请重新打开问题。"
      }
    ]
  },
  {
    "number": 1051,
    "title": "“无模板“的情况下读文件，如何进行数据类型转换？",
    "created_at": "2020-01-03T06:42:45Z",
    "closed_at": "2020-03-17T15:29:47Z",
    "labels": [
      "help wanted",
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1051",
    "body": "**异常代码**\r\n```java\r\n   这里写你的代码\r\n```\r\n**异常提示**\r\n请提供完整的异常提示,记住是全部异常！\r\n**建议描述**\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1051/comments",
    "author": "m690192206",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-01-07T13:57:07Z",
        "body": "请详细描述您的问题。"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2020-03-17T15:29:47Z",
        "body": "问题是否已经解决，未解决请重新打开问题。"
      }
    ]
  },
  {
    "number": 1033,
    "title": "向Excel中写入数据时报NullPointerException",
    "created_at": "2019-12-27T12:28:37Z",
    "closed_at": "2020-03-16T18:46:08Z",
    "labels": [
      "help wanted",
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1033",
    "body": "版本：2.1.4\r\n\r\n使用\r\nEasyExcel.write(excelName,clazz).sheet(sheetName).doWrite(dataList);\r\n\r\njava.lang.NullPointerException: null\r\n\tat com.alibaba.excel.ExcelWriter.finish(ExcelWriter.java:328) ~[easyexcel-2.1.4.jar:na]\r\n\tat com.alibaba.excel.ExcelWriter.finalize(ExcelWriter.java:338) ~[easyexcel-2.1.4.jar:na]\r\n\tat java.lang.System$2.invokeFinalize(System.java:1270) [na:1.8.0_144]\r\n\tat java.lang.ref.Finalizer.runFinalizer(Finalizer.java:98) [na:1.8.0_144]\r\n\tat java.lang.ref.Finalizer.access$100(Finalizer.java:34) [na:1.8.0_144]\r\n\tat java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:210) [na:1.8.0_144]\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1033/comments",
    "author": "weeklynote",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-01-07T14:04:53Z",
        "body": "请提供详细代码"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2020-03-16T18:46:08Z",
        "body": "是否已经解决问题了？如果未解决 请重新打开问题。"
      },
      {
        "user": "fightingyuman",
        "created_at": "2020-05-16T12:52:01Z",
        "body": "@weeklynote 你解决了这个问题吗？我们也遇到了，是不是数据格式的问题呀？"
      }
    ]
  },
  {
    "number": 1030,
    "title": "自定义 CellWriteHandler 对于表头的样式设置无效果",
    "created_at": "2019-12-26T13:25:11Z",
    "closed_at": "2020-03-17T15:09:56Z",
    "labels": [
      "help wanted",
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1030",
    "body": "**异常代码**\r\n```java\r\n    @Override\r\n    public void afterCellDispose(WriteSheetHolder writeSheetHolder, WriteTableHolder writeTableHolder, List<CellData> list, Cell cell, Head head, Integer integer, Boolean aBoolean){\r\n        if (cell.getRowIndex() == 0) {\r\n\r\n            Workbook workbook = writeSheetHolder.getSheet().getWorkbook();\r\n            CellStyle cellStyle = workbook.createCellStyle();\r\n            // XSSFCellStyle cellStyle = (XSSFCellStyle) workbook.createCellStyle();\r\n            cellStyle.setFillPattern(FillPatternType.SOLID_FOREGROUND);\r\n            // 背景绿色\r\n            cellStyle.setFillForegroundColor(IndexedColors.ORANGE.getIndex());\r\n            Font cellFont = workbook.createFont();\r\n            cellFont.setBold(true);\r\n            cellFont.setColor(IndexedColors.WHITE.index);\r\n            cellStyle.setFont(cellFont);\r\n            cellStyle.setWrapText(true);\r\n            cellStyle.setBorderBottom(BorderStyle.THIN);\r\n            cellStyle.setBorderRight(BorderStyle.THIN);\r\n            cellStyle.setBorderTop(BorderStyle.THIN);\r\n            cellStyle.setBorderLeft(BorderStyle.THIN);\r\n            cellStyle.setBottomBorderColor(IndexedColors.BLACK.getIndex());\r\n            cellStyle.setRightBorderColor(IndexedColors.BLACK.getIndex());\r\n            cellStyle.setTopBorderColor(IndexedColors.BLACK.getIndex());\r\n            cellStyle.setAlignment(HorizontalAlignment.LEFT);\r\n            cell.setCellStyle(cellStyle);\r\n        }else if (cell.getRowIndex()== 1) {\r\n            Workbook workbook = writeSheetHolder.getSheet().getWorkbook();\r\n            CellStyle cellStyle = workbook.createCellStyle();\r\n            cellStyle.setFillPattern(FillPatternType.SOLID_FOREGROUND);\r\n            // 背景绿色\r\n            cellStyle.setFillForegroundColor(IndexedColors.ORANGE.getIndex());\r\n            Font cellFont = workbook.createFont();\r\n            cellFont.setBold(true);\r\n            cellFont.setColor(IndexedColors.WHITE.index);\r\n            cellStyle.setFont(cellFont);\r\n            cellStyle.setWrapText(true);\r\n            cellStyle.setBorderBottom(BorderStyle.THIN);\r\n            cellStyle.setBorderRight(BorderStyle.THIN);\r\n            cellStyle.setBorderTop(BorderStyle.THIN);\r\n            cellStyle.setBorderLeft(BorderStyle.THIN);\r\n            cellStyle.setBottomBorderColor(IndexedColors.BLACK.getIndex());\r\n            cellStyle.setRightBorderColor(IndexedColors.BLACK.getIndex());\r\n            cellStyle.setTopBorderColor(IndexedColors.BLACK.getIndex());\r\n            cellStyle.setAlignment(HorizontalAlignment.LEFT);\r\n            cellStyle.setWrapText(true);\r\n            cell.setCellStyle(cellStyle);\r\n       }\r\n```\r\n**异常提示**\r\n自己写的一个拦截器，执行无异常，但是这段对于表头（第一行）的样式设置没有起效果，对于正文（第二行）的样式设置起效果，请问是什么原因？\r\n**建议描述**\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1030/comments",
    "author": "bolatu836125",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-12-28T11:49:31Z",
        "body": "不能每次都创建一个样式。建议参照自定义样式去处理。你debug 看看 有没有进去。"
      }
    ]
  },
  {
    "number": 1021,
    "title": "EasyExcel版本2.1.4，poi版本3.17，withTemplate模板写入时，main方法测试正常，通过接口调用，在service中执行失败",
    "created_at": "2019-12-25T08:10:14Z",
    "closed_at": "2020-03-17T15:23:57Z",
    "labels": [
      "bug",
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1021",
    "body": "**触发场景描述**\r\n public static void main(String args[]) {\r\n        System.out.println(\"Hello World!\");\r\n        doExport(\"20191225\");\r\n    }\r\n private static void doExport(String day) {\r\n        String name = \"模板15\";\r\n        String templateFileName = FileUtil.getPath() + \"demo\" + File.separator + \"fill\" + File.separator + name + \".xlsx\";\r\n        boolean isExists = new File(templateFileName).exists();\r\n        SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy.MM.dd HH:mm:ss\");\r\n        String str = sdf.format(new Date());\r\n        String fileName = FileUtil.getPath() + name + \" - \" + str + \".xlsx\";\r\n        String fileNameFinal = FileUtil.getPath() + name + \"- 最后数据 - \" + str + \".xlsx\";\r\n        String imagePath = FileUtil.getPath() + name + str + \".png\";\r\n        String imagePathFinal = FileUtil.getPath() + name + \"- 最后数据 - \" + str + \".png\";\r\n        ExcelWriter excelWriter = EasyExcel.write(fileName).withTemplate(templateFileName).build();\r\n}\r\n\r\n描述：\r\n1、doExport（）方法在main（）方法中执行正常，可以生成新的excel文件\r\n2. 通过接口访问（Controller->ServiceImpl）中调用doExport（）方法，则失败（未生成新的excel文件，服务自动重启）。\r\n  \r\n\r\n**触发Bug的代码**\r\n        ExcelWriter excelWriter = EasyExcel.write(fileName).withTemplate(templateFileName).build();\r\n\r\n```\r\n**提示的异常或者没有达到的效果**\r\n1.并没有生成新的excel文件，且会自动重启服务。\r\n2.提示Shutting down ExecutorService 'applicationTaskExecutor' \r\n[Thread-4 com.zaxxer.hikari.HikariDataSource] - HikariPool-1 - Shutdown initiated...\r\n[Thread-4 com.zaxxer.hikari.HikariDataSource] - HikariPool-1 - Shutdown completed.\r\n\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1021/comments",
    "author": "believe618",
    "comments": [
      {
        "user": "believe618",
        "created_at": "2019-12-26T08:15:06Z",
        "body": "帮忙看下，弄这个快一周时间了。。。"
      },
      {
        "user": "vibesudi",
        "created_at": "2019-12-27T09:10:55Z",
        "body": "\" EasyExcel.write(outPath,DataVO.class).withTemplate(templateFileName).sheet(0)\r\n .relativeHeadRowIndex(6).automaticMergeHead(true).doWrite(dataList);\" 我这样写的没报错，但是，生成的文件还是模板，没有写入数据"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2019-12-28T11:56:26Z",
        "body": "能不能贴一下异常？"
      },
      {
        "user": "believe618",
        "created_at": "2019-12-30T03:12:12Z",
        "body": "> ？\r\n\r\n在执行org.apache.poi.xssf.usermodel.XSSFFactory这个类的createDocumentPart方法时，\r\n  protected POIXMLDocumentPart createDocumentPart\r\n        (Class<? extends POIXMLDocumentPart> cls, Class<?>[] classes, Object[] values)\r\n    throws SecurityException, NoSuchMethodException, InstantiationException, IllegalAccessException, InvocationTargetException {\r\n        Constructor<? extends POIXMLDocumentPart> constructor = cls.getDeclaredConstructor(classes);\r\n        //此时会有以下警告\r\n        ([WARN  2019-12-26 16:23:17,437] [HikariPool-1 housekeeper com.zaxxer.hikari.pool.HikariPool] - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m23s749ms).  )\r\n\t// 此方法（newInstance）后，会 Shutting down\r\n        return constructor.newInstance(values);\r\n        ////////\r\n        [INFO  2019-12-26 16:25:02,828] [Thread-4 org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'applicationTaskExecutor' \r\n\t\t[INFO  2019-12-26 16:25:02,833] [Thread-4 com.zaxxer.hikari.HikariDataSource] - HikariPool-1 - Shutdown initiated... \r\n\t\t[INFO  2019-12-26 16:25:02,883] [Thread-4 com.zaxxer.hikari.HikariDataSource] - HikariPool-1 - Shutdown completed. \r\n    }\r\n\r\n\r\n在控制台中，并没有错误信息提示，都被poi的接口catch住了。"
      },
      {
        "user": "Hujing0o0",
        "created_at": "2022-08-19T03:04:58Z",
        "body": "我也出现了这个问题，执行导出操作，导出成功了，但是项目会自动重启，没有任何异常。\r\n2022-08-19 10:57:58.227  INFO 32496 --- [      Thread-44] o.s.a.r.l.SimpleMessageListenerContainer : Waiting for workers to finish.\r\n2022-08-19 10:57:58.730  INFO 32496 --- [      Thread-44] o.s.a.r.l.SimpleMessageListenerContainer : Successfully waited for workers to finish.\r\n2022-08-19 10:57:59.664  INFO 32496 --- [      Thread-44] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...\r\n2022-08-19 10:57:59.684  INFO 32496 --- [      Thread-44] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.\r\n2022-08-19 10:57:59.685  INFO 32496 --- [      Thread-44] .c.NacosValueAnnotationBeanPostProcessor : class com.alibaba.nacos.spring.context.annotation.config.NacosValueAnnotationBeanPostProcessor was destroying!\r\n2022-08-19 10:57:59.685  INFO 32496 --- [      Thread-44] AnnotationNacosInjectedBeanPostProcessor : class com.alibaba.nacos.spring.beans.factory.annotation.AnnotationNacosInjectedBeanPostProcessor was destroying!"
      }
    ]
  },
  {
    "number": 973,
    "title": "自定义转换器中咨询",
    "created_at": "2019-12-12T10:41:39Z",
    "closed_at": "2020-01-07T14:05:45Z",
    "labels": [
      "help wanted",
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/973",
    "body": "一个实体类中有多个在自定义转换器\r\n我想获取其中很多行的数据的单元格不符合的错误信息\r\n我在其中一个自定义转换器我throw new 一个异常后\r\n就会走监听器的异常方法中直接读取下一行数据并且跳过该单元格的后单元格校验\r\n我想知道如何不跳过呢\r\n举个例子 实体类有10个字段,每一个字段做自定义转换\r\n单元格就10个列\r\n读取表格的时候,其中一列单元格的自定义转换出现异常该单元格后的信息就不执行转换了 直接进行读取下一行\r\n如果我 想拿到改行所有列单元格错误错误信息就不好获取了,\r\n这个有办法解决吗",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/973/comments",
    "author": "feifei498536",
    "comments": [
      {
        "user": "pdkst",
        "created_at": "2019-12-13T15:21:37Z",
        "body": "覆盖Listener中的onException方法不再抛出就不会向上抛出，而是继续执行（貌似）"
      },
      {
        "user": "feifei498536",
        "created_at": "2019-12-14T00:12:20Z",
        "body": "Listener中的onException方法我没有抛出异常.会继续执行\r\n但是执行的下一行我想让他继续执行该行的验证\r\n因为需求就是读取一个Excel把不符合要求的单元格都告诉客户\r\n现在其中一个转换器抛出异常,同一行其他转换器就不执行了,直接进行下一行 重新读取验证转换器\r\n这个后期会优化一下吗"
      },
      {
        "user": "pdkst",
        "created_at": "2019-12-14T04:36:41Z",
        "body": "数据规则的校验不要放到转换器中，放到Listener中试试，我也是普通的用户2333"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2019-12-18T11:03:36Z",
        "body": "校验异常不应该放在转换器里面，应该放在`invoke`里面，拿到整行数据后再校验。"
      }
    ]
  },
  {
    "number": 971,
    "title": "导入Excel xls 格式的时候   不能被识别 导致读到的对象为空",
    "created_at": "2019-12-11T07:52:02Z",
    "closed_at": "2020-01-07T14:06:30Z",
    "labels": [
      "bug",
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/971",
    "body": "**触发场景描述**\r\n\r\n**触发Bug的代码**\r\n```java\r\n   这里写代码\r\n```\r\n**提示的异常或者没有达到的效果**\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/971/comments",
    "author": "LivInDream",
    "comments": [
      {
        "user": "LivInDream",
        "created_at": "2019-12-11T07:54:37Z",
        "body": "显示ExcelType 为null "
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2019-12-12T10:07:26Z",
        "body": "尝试升级到最新版吧。还不行提供xls文件。"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2020-01-07T14:06:30Z",
        "body": "是否已经解决？如果还未解决请重新打开问题。"
      }
    ]
  },
  {
    "number": 970,
    "title": "新版本Excel基础模型实体类是否可以不用继承",
    "created_at": "2019-12-11T01:04:45Z",
    "closed_at": "2020-01-07T14:06:07Z",
    "labels": [
      "help wanted",
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/970",
    "body": "**异常代码**\r\n```java\r\n/**\r\n * Excel基础模型\r\n *\r\n * @author jipengfei\r\n * @deprecated Now you don't need to extend any classes\r\n */\r\n@Deprecated\r\npublic class BaseRowModel {\r\n\r\n    /**\r\n     * 每列样式\r\n     */\r\n    @ExcelIgnore\r\n    private Map<Integer, CellStyle> cellStyleMap = new HashMap<Integer, CellStyle>();\r\n\r\n    public void addStyle(Integer row, CellStyle cellStyle) {\r\n        cellStyleMap.put(row, cellStyle);\r\n    }\r\n\r\nbaseRowModel显示过期了，并且指明以后不需要继承这个类了，但是我本地还是起不来\r\n   这里写你的代码\r\n```@Getter\r\n@Setter\r\npublic class xxxExcelModel {\r\n    @ExcelProperty(value = \"名称\", index = 0)\r\n    private String Name; \r\n}\r\n\r\n**异常提示**\r\n请提供完整的异常提示,记住是全部异常！\r\n**建议描述**\r\nError:(112, 61) java: 不兼容的类型: java.lang.Class<*.*.*.easyExcel.xxxExcelModel >无法转换为java.lang.Class<? extends com.alibaba.excel.metadata.BaseRowModel>",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/970/comments",
    "author": "kiwi-field",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-12-12T10:08:39Z",
        "body": "贴全异常。"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2020-01-07T14:06:07Z",
        "body": "是否已经解决？如果未解决请重新打开问题。"
      }
    ]
  },
  {
    "number": 941,
    "title": "在读取Excel文本数据，例如20800.0，会让com.alibaba.excel.util.NumberUtils这个工具类处理，结果报错解析异常",
    "created_at": "2019-12-04T17:44:28Z",
    "closed_at": "2019-12-16T08:21:02Z",
    "labels": [
      "bug",
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/941",
    "body": "**触发场景描述**\r\n1、依赖版本\r\n       <dependency>\r\n            <groupId>com.alibaba</groupId>\r\n            <artifactId>easyexcel</artifactId>\r\n            <version>2.1.4</version>\r\n        </dependency>\r\nps：2.1.3版本也试过，一样的情况，目前2.1.3\r\n2、Excel有24个字段，表格全部都为文本类型，6、7、8、9列数据为20800.0带小数点文本\r\n3、继承com.alibaba.excel.event.AnalysisEventListener的监听对象，重写了 invoke()方法 \r\n4、按照文档代码解析对象到List集合，并未存数据库\r\n**触发Bug的代码**\r\n```java\r\n--------------------------------------------------分割线-------------------------------------------------\r\n   package com.tedu.sois.common.listener;\r\n\r\nimport com.alibaba.excel.context.AnalysisContext;\r\nimport com.alibaba.excel.event.AnalysisEventListener;\r\nimport com.alibaba.fastjson.JSON;\r\nimport com.tedu.sois.sys.entity.DemoData;\r\nimport com.tedu.sois.sys.entity.SysStuCrmManageTemporary;\r\nimport org.slf4j.Logger;\r\nimport org.slf4j.LoggerFactory;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n/**\r\n测试监听对象\r\n*/\r\npublic class DemoListener extends AnalysisEventListener<SysStuCrmManageTemporary> {\r\n    private static final Logger LOGGER = LoggerFactory.getLogger(DemoListener.class);\r\n\r\n    /**\r\n     * 每隔3000条存储数据库，然后清理list ，方便内存回收\r\n     */\r\n//    private static final int BATCH_COUNT = 1000;\r\n\r\n    List<DemoData> list = new ArrayList<>();\r\n\r\n    @Override\r\n    public void invoke(SysStuCrmManageTemporary sysStuCrmManageTemporary, AnalysisContext analysisContext) {\r\n        if(!(\"正式学员\".equals(sysStuCrmManageTemporary.getColumn4()) ||\r\n                \"毕业学员\".equals(sysStuCrmManageTemporary.getColumn4())))\r\n            return;\r\n        LOGGER.info(\"解析到一条数据:{}\", JSON.toJSONString(sysStuCrmManageTemporary));\r\n        DemoData data = new DemoData();\r\n        data.setCost_all(sysStuCrmManageTemporary.getColumn6());\r\n        data.setCost_value(sysStuCrmManageTemporary.getColumn9());\r\n        list.add(data);\r\n    }\r\n\r\n    @Override\r\n    public void doAfterAllAnalysed(AnalysisContext analysisContext) {\r\n        LOGGER.info(\"所有数据解析完毕\");\r\n    }\r\n\r\n//    @Override\r\n//    public void onException(Exception exception, AnalysisContext context) {\r\n//        LOGGER.error(\"解析失败，但是继续解析下一行:{}\", exception.getMessage());\r\n//        // 如果是某一个单元格的转换异常 能获取到具体行号\r\n//        // 如果要获取头的信息 配合invokeHeadMap使用\r\n//        if (exception instanceof ExcelDataConvertException) {\r\n//            ExcelDataConvertException excelDataConvertException = (ExcelDataConvertException)exception;\r\n//            LOGGER.error(\"第{}行，第{}列解析异常\", excelDataConvertException.getRowIndex(),\r\n//                    excelDataConvertException.getColumnIndex());\r\n//        }\r\n//    }\r\n\r\n    public List<DemoData> getList(){\r\n        return list;\r\n    }\r\n}\r\n--------------------------------------------------分割线-------------------------------------------------\r\npackage com.tedu.sois.sys.entity;\r\n\r\nimport lombok.Data;\r\nimport lombok.ToString;\r\n\r\nimport java.io.Serializable;\r\n\r\n/**\r\n * 临时表实体对象\r\n */\r\n@Data\r\n@ToString\r\npublic class SysStuCrmManageTemporary implements Serializable {\r\n\r\n    private String column0;\r\n    private String column1;\r\n    private String column2;\r\n    private String column3;\r\n    private String column4;\r\n    private String column5;\r\n    private Double column6;\r\n    private Double column7;\r\n    private Double column8;\r\n    private Double column9;\r\n    private String column10;\r\n    private String column11;\r\n    private String column12;\r\n    private String column13;\r\n    private String column14;\r\n    private String column15;\r\n    private String column16;\r\n    private String column17;\r\n    private String column18;\r\n    private String column19;\r\n    private String column20;\r\n    private String column21;\r\n    private String column22;\r\n}\r\n--------------------------------------------------分割线-------------------------------------------------\r\npackage com.tedu.sois.sys.entity;\r\n\r\nimport com.alibaba.excel.annotation.ExcelProperty;\r\nimport com.alibaba.excel.annotation.format.NumberFormat;\r\nimport lombok.Data;\r\nimport lombok.ToString;\r\n\r\nimport java.io.Serializable;\r\n\r\n@Data\r\n@ToString\r\npublic class DemoData implements Serializable {\r\n    @NumberFormat(\"#.#\")\r\n    @ExcelProperty(value = \"学费总值\",index = 6)\r\n    private Double cost_value;\r\n\r\n    @NumberFormat(\"#.#\")\r\n    @ExcelProperty(value = \"累计缴费\",index = 9)\r\n    private Double cost_all;\r\n}\r\n\r\n```\r\n**提示的异常或者没有达到的效果**\r\ncom.alibaba.excel.exception.ExcelAnalysisException: Convert data 20800.0 to class java.lang.Integer error \r\n\r\n\tat com.alibaba.excel.read.metadata.holder.AbstractReadHolder.notifyEndOneRow(AbstractReadHolder.java:151)\r\n\tat com.alibaba.excel.analysis.v03.XlsSaxAnalyser.endRow(XlsSaxAnalyser.java:193)\r\n\tat com.alibaba.excel.analysis.v03.XlsSaxAnalyser.processLastCellOfRow(XlsSaxAnalyser.java:183)\r\n\tat com.alibaba.excel.analysis.v03.XlsSaxAnalyser.processRecord(XlsSaxAnalyser.java:172)\r\n\tat org.apache.poi.hssf.eventusermodel.MissingRecordAwareHSSFListener.processRecord(MissingRecordAwareHSSFListener.java:158)\r\n\tat org.apache.poi.hssf.eventusermodel.FormatTrackingHSSFListener.processRecord(FormatTrackingHSSFListener.java:92)\r\n\tat org.apache.poi.hssf.eventusermodel.HSSFRequest.processRecord(HSSFRequest.java:109)\r\n\tat org.apache.poi.hssf.eventusermodel.HSSFEventFactory.genericProcessEvents(HSSFEventFactory.java:179)\r\n\tat org.apache.poi.hssf.eventusermodel.HSSFEventFactory.processEvents(HSSFEventFactory.java:136)\r\n\tat org.apache.poi.hssf.eventusermodel.HSSFEventFactory.processWorkbookEvents(HSSFEventFactory.java:82)\r\n\tat org.apache.poi.hssf.eventusermodel.HSSFEventFactory.processWorkbookEvents(HSSFEventFactory.java:54)\r\n\tat com.alibaba.excel.analysis.v03.XlsSaxAnalyser.execute(XlsSaxAnalyser.java:112)\r\n\tat com.alibaba.excel.analysis.ExcelAnalyserImpl.analysis(ExcelAnalyserImpl.java:105)\r\n\tat com.alibaba.excel.ExcelReader.read(ExcelReader.java:180)\r\n\tat com.alibaba.excel.ExcelReader.read(ExcelReader.java:170)\r\n\tat com.alibaba.excel.read.builder.ExcelReaderSheetBuilder.doRead(ExcelReaderSheetBuilder.java:160)\r\n\tat com.tedu.sois.service.SysStuCrmManageServiceTestCase.reader(SysStuCrmManageServiceTestCase.java:33)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\r\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\r\n\tat org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks.evaluate(RunBeforeTestExecutionCallbacks.java:74)\r\n\tat org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks.evaluate(RunAfterTestExecutionCallbacks.java:84)\r\n\tat org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)\r\n\tat org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)\r\n\tat org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)\r\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)\r\n\tat org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)\r\n\tat com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)\r\n\tat com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)\r\n\tat com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)\r\nCaused by: com.alibaba.excel.exception.ExcelDataConvertException: Convert data 20800.0 to class java.lang.Integer error \r\n\tat com.alibaba.excel.util.ConverterUtils.doConvertToJavaObject(ConverterUtils.java:135)\r\n\tat com.alibaba.excel.util.ConverterUtils.convertToJavaObject(ConverterUtils.java:103)\r\n\tat com.alibaba.excel.read.listener.ModelBuildEventListener.buildUserModel(ModelBuildEventListener.java:113)\r\n\tat com.alibaba.excel.read.listener.ModelBuildEventListener.invoke(ModelBuildEventListener.java:38)\r\n\tat com.alibaba.excel.read.listener.ModelBuildEventListener.invoke(ModelBuildEventListener.java:28)\r\n\tat com.alibaba.excel.read.metadata.holder.AbstractReadHolder.notifyEndOneRow(AbstractReadHolder.java:145)\r\n\t... 46 more\r\nCaused by: java.lang.NumberFormatException: For input string: \"20800.0\"\r\n\tat java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\r\n\tat java.lang.Integer.parseInt(Integer.java:580)\r\n\tat java.lang.Integer.valueOf(Integer.java:766)\r\n\tat com.alibaba.excel.util.NumberUtils.parseInteger(NumberUtils.java:90)\r\n\tat com.alibaba.excel.converters.integer.IntegerStringConverter.convertToJavaData(IntegerStringConverter.java:32)\r\n\tat com.alibaba.excel.converters.integer.IntegerStringConverter.convertToJavaData(IntegerStringConverter.java:17)\r\n\tat com.alibaba.excel.util.ConverterUtils.doConvertToJavaObject(ConverterUtils.java:133)\r\n\t... 51 more\r\n\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/941/comments",
    "author": "HK-Kerwin",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-12-12T10:36:07Z",
        "body": "请检查您的对象。目前来看 您肯定用integer去接收了"
      },
      {
        "user": "HK-Kerwin",
        "created_at": "2019-12-16T08:21:02Z",
        "body": "并不是喔。之后我全部用String类型，指定excel单元格接收位置，但是依然是这样，不过我后面换了一个思路，虽然会比较麻烦，但是可以解决我的需求。如同我上方粘贴的代码，创建全字段实体对象进行监听，接收到excel表数据后，把监听对象某些属性的值set到我需要的字段的对象里。因为表数据4000条左右，性能和并发不用考虑，所以这个思路解决了我的需求，如果其他人的情况和我相似，可以参考这样做。"
      }
    ]
  },
  {
    "number": 861,
    "title": "不用注解的方式，如何将文本型改为数值型",
    "created_at": "2019-11-19T05:47:11Z",
    "closed_at": "2019-12-02T12:57:05Z",
    "labels": [
      "help wanted",
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/861",
    "body": "导出的文件有很多列都为数字，默认都是文本型，导出来后左上角有三角，怎么改为数值型，并且不是在注解里修改\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/861/comments",
    "author": "CjqDy",
    "comments": [
      {
        "user": "CjqDy",
        "created_at": "2019-11-19T07:20:57Z",
        "body": "`public class TestStyleExcelHandler implements CellWriteHandler {\r\n    @Override\r\n    public void beforeCellCreate(WriteSheetHolder writeSheetHolder, WriteTableHolder writeTableHolder, Row row, Head head, Integer integer, Integer integer1, Boolean aBoolean) {\r\n\r\n    }\r\n\r\n    @Override\r\n    public void afterCellCreate(WriteSheetHolder writeSheetHolder, WriteTableHolder writeTableHolder, Cell cell, Head head, Integer integer, Boolean aBoolean) {\r\n    }\r\n\r\n    @Override\r\n    public void afterCellDispose(WriteSheetHolder writeSheetHolder, WriteTableHolder writeTableHolder, List<CellData> list, Cell cell, Head head, Integer integer, Boolean isHeader) {\r\n        Workbook workbook = writeSheetHolder.getSheet().getWorkbook();\r\n        CellStyle cellStyle = workbook.createCellStyle();\r\n//        HSSFDataFormat dataFormat = (HSSFDataFormat) workbook.createDataFormat();\r\n        if (!isHeader) {\r\n            cellStyle.setDataFormat((short) 1);\r\n            cell.setCellStyle(cellStyle);\r\n        }\r\n    }\r\n}\r\n`\r\n自定义了一个handler去转换，cellStyle.setDataFormat((short) 1);  如果不是头，就全部转换为整数，但是最后还是文本型  ，请看下是什么问题呢"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2019-11-27T11:14:49Z",
        "body": "主要提供详细代码。如果是 2.1.3的话 ，默认数字 就是数字类型了。"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2019-12-02T12:57:05Z",
        "body": "不确定你是否解决了？如果未解决，请重新打开iussue"
      }
    ]
  },
  {
    "number": 827,
    "title": "ExcelAnalysisException overwrites my custom Exception and Listeners stop working.",
    "created_at": "2019-11-11T16:25:43Z",
    "closed_at": "2019-11-15T10:39:56Z",
    "labels": [
      "help wanted",
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/827",
    "body": "**help**\r\nHi, I'm reading excel file and at the same time I have to validate my rows and heads to my business logic. \r\nI have an *AnalysisEventListener* for my Data class and I call my validation methods here\r\n```java\r\npublic class ProductImportDataExcelListener  extends AnalysisEventListener<ProductImportData> {\r\n    List<ProductImportData> rows = new ArrayList<>();\r\n\r\n  @Override\r\n    public void invokeHeadMap( Map<Integer, String> headMap, AnalysisContext context ){\r\n        super.invokeHeadMap(headMap, context);\r\n        validateHead(headMap);\r\n    }\r\n\r\n    @Override\r\n    public void invoke( ProductImportData data, AnalysisContext context ) {\r\n       validateRow(data);\r\n    }\r\n\r\n   @Override\r\n    public void doAfterAllAnalysed( AnalysisContext context ) {\r\n        System.out.println(\"Done. Row size \" + rows.size());\r\n    }\r\n}\r\n```\r\nI have custom business Exception for my validation logic and I throw an exception and *ExcelAnalysisException* overwrites my custom Exception and listener *stop working*.\r\nIs there any way to ignore this ?\r\n\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/827/comments",
    "author": "busrauman",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-11-12T12:32:28Z",
        "body": "you can try :\r\n```java\r\n   try{\r\n        }catch (ExcelAnalysisException e){\r\n            // This is your exception\r\n           throw e.getCause();\r\n        }\r\n```"
      },
      {
        "user": "pdkst",
        "created_at": "2019-11-12T12:39:25Z",
        "body": "If you don't want to break the current code\r\n```java\r\n    @Override\r\n    public void invoke(ProductImportData data, AnalysisContext context) {\r\n        try {\r\n            validateRow(data);\r\n        } catch (Exception e) {\r\n            //TODO exception\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n```\r\nIf you only want rollback\r\n```java\r\n    @Override\r\n    public void onException(Exception exception, AnalysisContext context) throws Exception {\r\n        //TODO something before rollback, before super\r\n        super.onException(exception, context);\r\n    }\r\n```\r\nIf you want to check the data before the specific logic, it seems to read the data check first, and the second read to execute the specific logic.\r\n\r\n\r\n"
      },
      {
        "user": "busrauman",
        "created_at": "2019-11-15T07:12:20Z",
        "body": "I solved as follow;\r\n```java\r\npublic class AppError {\r\n\r\n    Integer status = 400;\r\n    String title=\"Bad Request\";\r\n    String detail;\r\n     Instant instant = Instant.now();\r\n    List<String> errorDetails = new ArrayList<>();\r\n    String message;\r\n}\r\n// in My controller\r\n @ExceptionHandler({ExcelAnalysisException.class})\r\n    @ResponseBody\r\n    @ResponseStatus(HttpStatus.BAD_REQUEST)\r\n    public ResponseEntity<AppError> handle(Exception e){\r\n        AppError error = new AppError();\r\n        error.setDetail(e.getMessage());\r\n        error.setMessage(e.getMessage());\r\n        return new ResponseEntity<AppError>(error, HttpStatus.BAD_REQUEST);\r\n    }\r\n```\r\nIt works for me thank you all. :)"
      },
      {
        "user": "pdkst",
        "created_at": "2019-11-15T07:27:44Z",
        "body": "Well done! dont forget close issuse.\r\n```\r\n    @ExceptionHandler({ExcelAnalysisException.class})\r\n    @ResponseBody\r\n    @ResponseStatus(HttpStatus.BAD_REQUEST)\r\n    public ResponseEntity<AppError> handle(Exception e) {\r\n        //this is what you throw\r\n        final Throwable cause = e.getCause();\r\n        \r\n        AppError error = new AppError();\r\n        error.setDetail(e.getMessage());\r\n        error.setMessage(e.getMessage());\r\n        return new ResponseEntity<AppError>(error, HttpStatus.BAD_REQUEST);\r\n    }\r\n```"
      }
    ]
  },
  {
    "number": 804,
    "title": "当解析某些Excel的时候报错",
    "created_at": "2019-11-06T13:06:20Z",
    "closed_at": "2019-11-14T11:33:38Z",
    "labels": [
      "help wanted",
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/804",
    "body": "org.apache.poi.hssf.record.RecordInputStream$LeftoverDataException: Initialisation of record 0xDA(BookBoolRecord) left 2 bytes remaining still to be read.\r\n\tat org.apache.poi.hssf.record.RecordInputStream.hasNextRecord(RecordInputStream.java:178)\r\n\tat org.apache.poi.hssf.record.RecordFactoryInputStream.nextRecord(RecordFactoryInputStream.java:235)\r\n\tat org.apache.poi.hssf.eventusermodel.HSSFEventFactory.genericProcessEvents(HSSFEventFactory.java:175)\r\n\tat org.apache.poi.hssf.eventusermodel.HSSFEventFactory.processEvents(HSSFEventFactory.java:136)\r\n\tat org.apache.poi.hssf.eventusermodel.HSSFEventFactory.processWorkbookEvents(HSSFEventFactory.java:82)\r\n\tat org.apache.poi.hssf.eventusermodel.HSSFEventFactory.processWorkbookEvents(HSSFEventFactory.java:54)\r\n\tat com.alibaba.excel.analysis.v03.XlsSaxAnalyser.execute(XlsSaxAnalyser.java:66)\r\n\tat com.alibaba.excel.analysis.ExcelAnalyserImpl.analysis(ExcelAnalyserImpl.java:74)\r\n\tat com.alibaba.excel.analysis.ExcelAnalyserImpl.analysis(ExcelAnalyserImpl.java:67)\r\n\tat com.alibaba.excel.ExcelReader.read(ExcelReader.java:112)\r\n\tat com.alibaba.excel.EasyExcelFactory.readBySax(EasyExcelFactory.java:51)\r\n\tat com.alibaba.easyexcel.test.ReadTest.saxReadListStringV2003(ReadTest.java:144)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\r\n\tat java.lang.reflect.Method.invoke(Method.java:597)\r\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\r\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\r\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)\r\n\tat org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:538)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:760)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:460)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:206)\r\n[]",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/804/comments",
    "author": "knighttzp",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-11-07T10:37:15Z",
        "body": "xls 用的是poi的代码尝试 升级poi到4.0.1试试"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2019-11-14T11:33:38Z",
        "body": "是否经解决了问题？如果没解决 请重新打开问题"
      }
    ]
  },
  {
    "number": 786,
    "title": "最新版本2.1.0-beta4读取全部sheet会重复读数据？",
    "created_at": "2019-11-01T02:44:50Z",
    "closed_at": "2019-11-06T06:08:09Z",
    "labels": [
      "help wanted",
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/786",
    "body": "```java\r\n   // 读取全部sheet 最新版本2.1.0-beta4\r\n   EasyExcel.read(fileName, clazz, listener).doReadAll();\r\n```\r\n\r\n**建议描述**\r\n发现用最新版本2.1.0-beta4读取全部sheet，有些数据会重复读",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/786/comments",
    "author": "jackyzheng123",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-11-01T12:02:31Z",
        "body": "请详细描述您的问题，并提供代码。以及日志，最好也提供excel."
      },
      {
        "user": "jackyzheng123",
        "created_at": "2019-11-06T06:07:34Z",
        "body": "解决了，是我自己的bug，大于3000阀值余量的没清掉。谢谢\r\n\r\npublic class MainTest {\r\n\r\n    private static final Logger log = LoggerFactory.getLogger(MainTest.class);\r\n\r\n    private static final String FILE = \"C:/Users/zhengjiaxing/Desktop/test.xlsx\";\r\n\r\n    public static void main (String[] args){\r\n        Stopwatch stopwatch = Stopwatch.createStarted();\r\n        List<JimiCartonImportDto> tempList = Lists.newCopyOnWriteArrayList();\r\n        AnalysisEventListener<JimiCartonImportDto> listener = EasyExcelUtils.getListener(list -> {\r\n            // 保存数据\r\n            tempList.addAll(list);\r\n        }, 3000);\r\n\r\n        EasyExcel.read(FILE, JimiCartonImportDto.class, listener).doReadAll();\r\n        log.info(\"总导入数据tempList：{}条, 耗时{}秒\", tempList.size(), stopwatch.elapsed(TimeUnit.SECONDS));\r\n        log.info(\"total:\" + EasyExcelUtils.count.get());\r\n        EasyExcelUtils.count.set(0);\r\n    }\r\n}\r\n\r\n\r\n// EasyExcelUtils工具类\r\npublic static <T> AnalysisEventListener<T> getListener(Consumer<List<T>> consumer, int threshold) {\r\n        return new AnalysisEventListener<T>() {\r\n\r\n            private List<T> list = new LinkedList<T>();\r\n\r\n            @Override\r\n            public void invoke(T t, AnalysisContext analysisContext) {\r\n                LOGGER.info(\"解析到一条数据:{}\", JSON.toJSONString(t));\r\n                if (t != null) {\r\n                    count.incrementAndGet();\r\n                    list.add(t);\r\n                }\r\n                if (list.size() == threshold) {\r\n                    consumer.accept(list);\r\n                    list.clear();\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void doAfterAllAnalysed(AnalysisContext analysisContext) {\r\n                if (list.size() > 0) {\r\n                    consumer.accept(list);\r\n                    list.clear(); // 余量要清掉\r\n                }\r\n                LOGGER.info(\"所有数据解析完成！\");\r\n            }\r\n        };\r\n    }"
      }
    ]
  },
  {
    "number": 772,
    "title": "不能和原来的版本一样，直接读取指定的sheet。",
    "created_at": "2019-10-29T07:52:37Z",
    "closed_at": "2019-11-04T11:12:33Z",
    "labels": [
      "bug",
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/772",
    "body": "**触发场景描述**\r\n比如一个excel有5个sheet，我想直接读取第二个，这时候会报空指针\r\n**触发Bug的代码**\r\n```java\r\n   TestListener listener = new TestListener();\r\n        //EasyExcel.read(fileName, listener).sheet(1).headRowNumber(0).doRead();\r\n        ExcelReader excelReader = EasyExcel.read(fileName).build();\r\n        ReadSheet readSheet =\r\n                EasyExcel.readSheet(1, \"Sheet1\").registerReadListener(listener).build();\r\n        //List<ReadSheet> readSheets = excelReader.excelExecutor().sheetList();\r\n        //excelReader.read(readSheets);\r\n        excelReader.read(readSheet);\r\n        excelReader.finish();\r\n```\r\n**提示的异常或者没有达到的效果**\r\nException in thread \"main\" java.lang.NullPointerException\r\n\tat com.alibaba.excel.analysis.v03.handlers.BofRecordHandler.processRecord(BofRecordHandler.java:78)\r\n\tat com.alibaba.excel.analysis.v03.XlsSaxAnalyser.processRecord(XlsSaxAnalyser.java:138)\r\n\tat org.apache.poi.hssf.eventusermodel.MissingRecordAwareHSSFListener.processRecord(MissingRecordAwareHSSFListener.java:203)\r\n\tat org.apache.poi.hssf.eventusermodel.FormatTrackingHSSFListener.processRecord(FormatTrackingHSSFListener.java:92)\r\n\tat org.apache.poi.hssf.eventusermodel.HSSFRequest.processRecord(HSSFRequest.java:109)\r\n\tat org.apache.poi.hssf.eventusermodel.HSSFEventFactory.genericProcessEvents(HSSFEventFactory.java:179)\r\n\tat org.apache.poi.hssf.eventusermodel.HSSFEventFactory.processEvents(HSSFEventFactory.java:136)\r\n\tat org.apache.poi.hssf.eventusermodel.HSSFEventFactory.processWorkbookEvents(HSSFEventFactory.java:82)\r\n\tat org.apache.poi.hssf.eventusermodel.HSSFEventFactory.processWorkbookEvents(HSSFEventFactory.java:54)\r\n\tat com.alibaba.excel.analysis.v03.XlsSaxAnalyser.execute(XlsSaxAnalyser.java:110)\r\n\tat com.alibaba.excel.analysis.ExcelAnalyserImpl.analysis(ExcelAnalyserImpl.java:104)\r\n\tat com.alibaba.excel.ExcelReader.read(ExcelReader.java:185)\r\n\tat com.alibaba.excel.ExcelReader.read(ExcelReader.java:174)\r\n\tat cn.pelerin.bfanalyze.common.EasyExcelTest.easyExcel(EasyExcelTest.java:28)\r\n\tat cn.pelerin.bfanalyze.common.EasyExcelTest.main(EasyExcelTest.java:16)",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/772/comments",
    "author": "dongjun613",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-10-29T11:16:04Z",
        "body": "请提提供版本号。或者尝试升级到2.1.0-beat4"
      },
      {
        "user": "dongjun613",
        "created_at": "2019-10-30T01:00:58Z",
        "body": "> 请提提供版本号。或者尝试升级到2.1.0-beat4\r\n\r\n使用的就是最新版2.1.0-beat4，现在如果要读取第二个sheet，必须先读取第一个才行。\r\n```\r\npublic ExcelReader read(List<ReadSheet> readSheetList) {\r\n        checkFinished();\r\n        excelAnalyser.analysis(readSheetList, Boolean.FALSE);\r\n        return this;\r\n    }\r\n```\r\n```\r\nList<ReadSheet> readSheets = Lists.newArrayList();\r\n        readSheets.add(readSheet1);\r\n        readSheets.add(readSheet2);\r\n        excelReader.read(readSheets);\r\n        //或者\r\n        excelReader.read(readSheet1, readSheet2);\r\n```\r\n现在只能这样去获取。"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2019-11-04T11:12:33Z",
        "body": "这个已经在`2.1.1`里面修复，非常感谢您的意见。"
      },
      {
        "user": "aishuohuadebenrenyi",
        "created_at": "2020-04-09T01:07:01Z",
        "body": " 我用的2.2.0-beta1版本，还是报空指针错误。请问，有什么办法解决吗？"
      },
      {
        "user": "vito16",
        "created_at": "2020-06-03T06:16:52Z",
        "body": "2.2.3版本还是有该错误。\r\n换到2.1.7能正常使用。\r\n也是指定了sheet下标来读取。\r\n@zhuangjiaju "
      },
      {
        "user": "mingyujiao",
        "created_at": "2020-06-04T05:20:40Z",
        "body": "读取 07版本的没问题，但是 03 版本的还是空指针错误"
      },
      {
        "user": "shenhuaxin",
        "created_at": "2020-06-24T02:05:59Z",
        "body": "> 读取 07版本的没问题，但是 03 版本的还是空指针错误\r\n\r\n我也遇到了，指定sheetName就会报空指针， sheet()则不会， 希望能解决一下， 版本为2.2.5"
      },
      {
        "user": "DLW59",
        "created_at": "2020-06-25T08:18:02Z",
        "body": "2.2.4版本也有此问题，03版本就会"
      }
    ]
  },
  {
    "number": 747,
    "title": "excel导出空指针异常",
    "created_at": "2019-10-23T11:37:02Z",
    "closed_at": "2019-10-24T14:07:16Z",
    "labels": [
      "bug",
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/747",
    "body": "**触发场景描述**\r\n实体类字段中的值为null时,导出会产生空指针异常,版本2.1.0-beta2\r\n**触发Bug的代码**\r\n```java\r\n                   WriteHandlerUtils.afterCellCreate(writeContext, cell, head, relativeRowIndex, Boolean.FALSE);\r\n                Object value = beanMap.get(name);\r\n                CellData cellData = converterAndSet(currentWriteHolder, excelContentProperty.getField().getType(), cell,\r\n                    value, excelContentProperty);\r\n                WriteHandlerUtils.afterCellDispose(writeContext, cellData, cell, head, relativeRowIndex, Boolean.FALSE);\r\n                beanMapHandledSet.add(name);\r\n```\r\n**提示的异常或者没有达到的效果**\r\n空指针异常",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/747/comments",
    "author": "fungoddd",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-10-23T13:58:34Z",
        "body": "别贴源代码。贴你自己的代码，并且贴出全部异常。"
      },
      {
        "user": "fungoddd",
        "created_at": "2019-10-24T02:02:34Z",
        "body": "调用方法\r\n      EasyExcel.write(outputStream, cls).registerWriteHandler(styleWrite()).registerWriteHandler(new LongestMatchColumnWidthStyleStrategy())\r\n                        .sheet(sheetName).doWrite(dataList);\r\n获取数据中实体类该字段的value为null\r\n    @TableField(exist = false)\r\n    @ExcelProperty(value = \"归属部门\", index = 8)\r\n    protected String organizationName;\r\n2.0.5版本是可以正常导出的,Object为value会跳出循环体，导出的excel中空字段的内容为空白单元格,\r\n但是2.1.0-beta版本会抛出空指针异常\r\n\r\n2.1.0-beta3产生的异常\r\n\tat com.alibaba.excel.write.style.column.LongestMatchColumnWidthStyleStrategy.dataLength(LongestMatchColumnWidthStyleStrategy.java:59)\r\n\tat com.alibaba.excel.write.style.column.LongestMatchColumnWidthStyleStrategy.setColumnWidth(LongestMatchColumnWidthStyleStrategy.java:40)\r\n\tat com.alibaba.excel.write.style.column.AbstractColumnWidthStyleStrategy.afterCellDispose(AbstractColumnWidthStyleStrategy.java:37)\r\n\tat com.alibaba.excel.util.WriteHandlerUtils.afterCellDispose(WriteHandlerUtils.java:144)\r\n\tat com.alibaba.excel.util.WriteHandlerUtils.afterCellDispose(WriteHandlerUtils.java:132)\r\n\tat com.alibaba.excel.write.executor.ExcelWriteAddExecutor.addJavaObjectToExcel(ExcelWriteAddExecutor.java:140)\r\n\tat com.alibaba.excel.write.executor.ExcelWriteAddExecutor.addOneRowOfDataToExcel(ExcelWriteAddExecutor.java:66)\r\n\tat com.alibaba.excel.write.executor.ExcelWriteAddExecutor.add(ExcelWriteAddExecutor.java:52)\r\n\tat com.alibaba.excel.write.ExcelBuilderImpl.addContent(ExcelBuilderImpl.java:58)\r\n\tat com.alibaba.excel.ExcelWriter.write(ExcelWriter.java:156)\r\n\tat com.alibaba.excel.ExcelWriter.write(ExcelWriter.java:141)\r\n\tat com.alibaba.excel.write.builder.ExcelWriterSheetBuilder.doWrite(ExcelWriterSheetBuilder.java:179)\r\n\tat com.crrcdt.common.util.excel.EasyExcelUtil.handleWriteExcel(EasyExcelUtil.java:159)\r\n\tat com.crrcdt.common.util.excel.EasyExcelUtil.writeExcel(EasyExcelUtil.java:72)\r\n\tat com.crrcdt.sys.controller.SysUserController.exportFile(SysUserController.java:578)\r\n\tat com.crrcdt.sys.controller.SysUserController$$FastClassBySpringCGLIB$$17b83ad4.invoke(<generated>)\r\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)\r\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\r\n\tat org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)\r\n\tat org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)\r\n\tat com.crrcdt.sys.aspect.ThreadLocalAspect.doAround(ThreadLocalAspect.java:48)\r\n\tat sun.reflect.GeneratedMethodAccessor629.invoke(Unknown Source)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:45005)\r\n\tat java.lang.reflect.Method.invoke(Method.java:497)\r\n\tat org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)\r\n\tat org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)\r\n\tat org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)\r\n\tat org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)\r\n\tat org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)\r\n\tat com.crrcdt.sys.aspect.ModuleAspect.doAroundControllerLayer(ModuleAspect.java:25)\r\n\tat sun.reflect.GeneratedMethodAccessor628.invoke(Unknown Source)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:45005)\r\n\tat java.lang.reflect.Method.invoke(Method.java:497)\r\n\tat org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)\r\n\tat org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)\r\n\tat org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)\r\n\tat org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)\r\n\tat org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)\r\n\tat com.crrcdt.sys.aspect.LogAspect.doAround(LogAspect.java:78)\r\n\tat sun.reflect.GeneratedMethodAccessor626.invoke(Unknown Source)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:45005)\r\n\tat java.lang.reflect.Method.invoke(Method.java:497)\r\n\tat org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)\r\n\tat org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)\r\n\tat org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)\r\n\tat org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)\r\n\tat org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)\r\n\tat org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)\r\n\tat org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)\r\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)\r\n\tat com.crrcdt.sys.controller.SysUserController$$EnhancerBySpringCGLIB$$bfc8566e.exportFile(<generated>)\r\n\tat sun.reflect.GeneratedMethodAccessor624.invoke(Unknown Source)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:45005)\r\n\tat java.lang.reflect.Method.invoke(Method.java:497)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:891)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:981)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:873)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:635)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:858)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:742)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat com.crrcdt.common.filter.CORSFilter.doFilterInternal(CORSFilter.java:49)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.cloud.sleuth.instrument.web.ExceptionLoggingFilter.doFilter(ExceptionLoggingFilter.java:48)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat brave.servlet.TracingFilter.doFilter(TracingFilter.java:86)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:117)\r\n"
      },
      {
        "user": "realrickren",
        "created_at": "2019-10-24T12:25:28Z",
        "body": "怎么样 这个好用吗 "
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2019-10-24T14:07:16Z",
        "body": "这个是个Bug 已经2.1.0-beta4里面修复 非常感谢您的意见。"
      }
    ]
  },
  {
    "number": 736,
    "title": "导出文件的时候报 Can not close IO，文件也顺利导出来了",
    "created_at": "2019-10-23T06:16:20Z",
    "closed_at": "2019-10-23T10:53:47Z",
    "labels": [
      "help wanted",
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/736",
    "body": "**异常代码**\r\n```java\r\n   EasyExcel.write(response.getOutputStream(), WarningExportVO.class).sheet(\"预警工单\").doWrite(warningExports);\r\n```\r\n**异常提示**\r\ncom.alibaba.excel.exception.ExcelGenerateException: Can not close IO\r\n\tat com.alibaba.excel.context.WriteContextImpl.throwCanNotCloseIo(WriteContextImpl.java:390)\r\n\tat com.alibaba.excel.context.WriteContextImpl.finish(WriteContextImpl.java:352)\r\n\tat com.alibaba.excel.write.ExcelBuilderImpl.finish(ExcelBuilderImpl.java:106)\r\n\tat com.alibaba.excel.ExcelWriter.finish(ExcelWriter.java:297)\r\n\tat com.alibaba.excel.write.builder.ExcelWriterSheetBuilder.doWrite(ExcelWriterSheetBuilder.java:135)\r\n**建议描述**\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/736/comments",
    "author": "huangfuliang",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-10-23T10:53:47Z",
        "body": "请提供全部异常"
      }
    ]
  },
  {
    "number": 721,
    "title": "导出时，如何设置列隐藏？",
    "created_at": "2019-10-20T07:00:30Z",
    "closed_at": "2019-10-21T12:58:32Z",
    "labels": [
      "help wanted",
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/721",
    "body": "\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/721/comments",
    "author": "youerduoDog",
    "comments": [
      {
        "user": "huangxin19990101",
        "created_at": "2019-10-21T01:29:40Z",
        "body": "`\r\n\r\n\r\n    @Override\r\n    public void beforeCellCreate(WriteSheetHolder writeSheetHolder, WriteTableHolder writeTableHolder, Row row,\r\n                                 Head head, int relativeRowIndex, boolean isHead) {\r\n    }\r\n\r\n    @Override\r\n    public void afterCellCreate(WriteSheetHolder writeSheetHolder, WriteTableHolder writeTableHolder, CellData cellData,\r\n                                Cell cell, Head head, int relativeRowIndex, boolean isHead) {\r\n        // 这里可以对cell进行任何操作\r\n        LOGGER.info(\"第{}行，第{}列写入完成。\", cell.getRowIndex(), cell.getColumnIndex());\r\n\r\n        //隐藏id列\r\n        writeSheetHolder.getSheet().setColumnHidden(0, true);\r\n\r\n        //居中\r\n        CellUtil.setAlignment(cell, HorizontalAlignment.CENTER);\r\n        CellUtil.setVerticalAlignment(cell, VerticalAlignment.CENTER);\r\n    }\r\n\r\n\r\n`"
      },
      {
        "user": "huangxin19990101",
        "created_at": "2019-10-21T01:30:37Z",
        "body": "> `\r\n> \r\n> ```\r\n> @Override\r\n> public void beforeCellCreate(WriteSheetHolder writeSheetHolder, WriteTableHolder writeTableHolder, Row row,\r\n>                              Head head, int relativeRowIndex, boolean isHead) {\r\n> }\r\n> \r\n> @Override\r\n> public void afterCellCreate(WriteSheetHolder writeSheetHolder, WriteTableHolder writeTableHolder, CellData cellData,\r\n>                             Cell cell, Head head, int relativeRowIndex, boolean isHead) {\r\n>     // 这里可以对cell进行任何操作\r\n>     LOGGER.info(\"第{}行，第{}列写入完成。\", cell.getRowIndex(), cell.getColumnIndex());\r\n> \r\n>     //隐藏id列\r\n>     writeSheetHolder.getSheet().setColumnHidden(0, true);\r\n> \r\n>     //居中\r\n>     CellUtil.setAlignment(cell, HorizontalAlignment.CENTER);\r\n>     CellUtil.setVerticalAlignment(cell, VerticalAlignment.CENTER);\r\n> }\r\n> ```\r\n> \r\n> `\r\n\r\n实现CellWriteHandler接口, 并调用.registerWriteHandler(new InventoryTallyExcelCellWriteHandler())注册"
      },
      {
        "user": "ZombieSouls",
        "created_at": "2023-12-28T07:23:25Z",
        "body": "@ContentStyle(hidden = BooleanEnum.TRUE) 为什么不起作用？\r\nprivate String id;"
      },
      {
        "user": "Loongphy",
        "created_at": "2024-04-15T03:02:15Z",
        "body": "使用 `@ExcelIgnore`，如：\r\n```\r\n@ExcelIgnore\r\nprivate String data;\r\n```"
      },
      {
        "user": "YangJingf",
        "created_at": "2024-06-28T10:15:43Z",
        "body": "这种就是完全没有了，不是隐藏了。列隐藏还可以通过取消隐藏打开，这种是这个列直接没有了"
      }
    ]
  },
  {
    "number": 708,
    "title": "easyExcel报ExcelGenerateException异常",
    "created_at": "2019-10-17T07:35:17Z",
    "closed_at": "2019-10-17T11:44:13Z",
    "labels": [
      "help wanted",
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/708",
    "body": "**异常代码**\r\n```java\r\n OutputStream ops = response.getOutputStream();\r\n ExcelWriter  excelWriter = EasyExcel.write(ops).build();\r\n List<String> headers = this.regRecordAdminService.getExcelHeaders(queryRegRecordDTO.getActId());\r\n List<List<String>> excelHeader = new ArrayList<>();\r\n excelHeader.add(headers);\r\n int i=0;\r\n for(RegRecordReviewStatusEnum regRecordReviewStatusEnum : RegRecordReviewStatusEnum.values()){\r\n                WriteSheet sheet = EasyExcel.writerSheet(i++,regRecordReviewStatusEnum.getName()).head(excelHeader).build();\r\n                queryRegRecordDTO.setReviewStatusEnum(regRecordReviewStatusEnum);\r\n                List<RegRecord> list = this.regRecordAdminService.listRegRecord(queryRegRecordDTO);\r\n                List<List<Object>> excelData = this.regRecordAdminService.excelData(list);\r\n                excelWriter.write(excelData, sheet);//这行报“can not close IO”\r\n            }\r\n```\r\n**异常提示**\r\ncom.alibaba.excel.exception.ExcelGenerateException: Can not close IO\r\n\tat com.alibaba.excel.context.WriteContextImpl.throwCanNotCloseIo(WriteContextImpl.java:390)\r\n\tat com.alibaba.excel.context.WriteContextImpl.finish(WriteContextImpl.java:352)\r\n\tat com.alibaba.excel.write.ExcelBuilderImpl.finish(ExcelBuilderImpl.java:106)\r\n\tat com.alibaba.excel.ExcelWriter.finish(ExcelWriter.java:298)\r\n\tat com.southcn.nfapp.aurora.admin.controller.RegRecordController.exportRegRecord(RegRecordController.java:86)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:889)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:794)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:634)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:741)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:118)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:107)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:836)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1747)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n\r\n**建议描述**\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/708/comments",
    "author": "157195553",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-10-17T10:07:30Z",
        "body": "贴全异常"
      },
      {
        "user": "157195553",
        "created_at": "2019-10-17T10:14:21Z",
        "body": "2019-10-17 18:11:51,168 [http-nio-8080-exec-1] ERROR c.s.nfapp.aurora.admin.aop.GlobalExceptionHandler (GlobalExceptionHandler.java:65) - Can not close IO\r\ncom.alibaba.excel.exception.ExcelGenerateException: Can not close IO\r\n&nbsp;at com.alibaba.excel.context.WriteContextImpl.throwCanNotCloseIo(WriteContextImpl.java:390)\r\n&nbsp;at com.alibaba.excel.context.WriteContextImpl.finish(WriteContextImpl.java:352)\r\n&nbsp;at com.alibaba.excel.write.ExcelBuilderImpl.finish(ExcelBuilderImpl.java:106)\r\n&nbsp;at com.alibaba.excel.ExcelWriter.finish(ExcelWriter.java:298)\r\n&nbsp;at com.southcn.nfapp.aurora.admin.controller.RegRecordController.exportRegRecord(RegRecordController.java:90)\r\n&nbsp;at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n&nbsp;at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n&nbsp;at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n&nbsp;at java.lang.reflect.Method.invoke(Method.java:498)\r\n&nbsp;at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)\r\n&nbsp;at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)\r\n&nbsp;at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)\r\n&nbsp;at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:889)\r\n&nbsp;at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:794)\r\n&nbsp;at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n&nbsp;at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)\r\n&nbsp;at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)\r\n&nbsp;at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)\r\n&nbsp;at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)\r\n&nbsp;at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)\r\n&nbsp;at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)\r\n&nbsp;at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)\r\n&nbsp;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\r\n&nbsp;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n&nbsp;at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n&nbsp;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n&nbsp;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n&nbsp;at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)\r\n&nbsp;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n&nbsp;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n&nbsp;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n&nbsp;at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)\r\n&nbsp;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n&nbsp;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n&nbsp;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n&nbsp;at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)\r\n&nbsp;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n&nbsp;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n&nbsp;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n&nbsp;at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:118)\r\n&nbsp;at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:107)\r\n&nbsp;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n&nbsp;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n&nbsp;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n&nbsp;at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)\r\n&nbsp;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n&nbsp;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n&nbsp;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n&nbsp;at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)\r\n&nbsp;at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)\r\n&nbsp;at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)\r\n&nbsp;at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)\r\n&nbsp;at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n&nbsp;at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\r\n&nbsp;at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)\r\n&nbsp;at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)\r\n&nbsp;at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)\r\n&nbsp;at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:836)\r\n&nbsp;at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1747)\r\n&nbsp;at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n&nbsp;at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n&nbsp;at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n&nbsp;at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n&nbsp;at java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.lang.NoSuchMethodError: org.apache.poi.util.IOUtils.copy(Ljava/io/InputStream;Ljava/io/OutputStream;)V\r\n&nbsp;at org.apache.poi.xssf.streaming.SXSSFWorkbook.injectData(SXSSFWorkbook.java:396)\r\n&nbsp;at org.apache.poi.xssf.streaming.SXSSFWorkbook.write(SXSSFWorkbook.java:936)\r\n&nbsp;at com.alibaba.excel.context.WriteContextImpl.finish(WriteContextImpl.java:349)\r\n&nbsp;... 62 common frames omitted\r\n2019-10-17 18:11:51,171 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor (AbstractMessageConverterMethodProcessor.java:223) - Found 'Content-Type:application/vnd.ms-excel;charset=utf-8' in response\r\n2019-10-17 18:11:51,172 [http-nio-8080-exec-1] WARN&nbsp; o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver (ExceptionHandlerExceptionResolver.java:416) - Failure in @ExceptionHandler com.southcn.nfapp.aurora.admin.aop.GlobalExceptionHandler#runtimeException(RuntimeException)\r\norg.springframework.web.HttpMediaTypeNotAcceptableException: Could not find acceptable representation\r\n&nbsp;at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:307)\r\n&nbsp;at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(RequestResponseBodyMethodProcessor.java:180)\r\n&nbsp;at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:82)\r\n&nbsp;at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:123)\r\n&nbsp;at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:405)\r\n&nbsp;at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)\r\n&nbsp;at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:140)\r\n&nbsp;at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:79)\r\n&nbsp;at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1298)\r\n&nbsp;at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1110)\r\n&nbsp;at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1056)\r\n&nbsp;at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)\r\n&nbsp;at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)\r\n&nbsp;at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)\r\n&nbsp;at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)\r\n&nbsp;at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)\r\n&nbsp;at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)\r\n&nbsp;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\r\n&nbsp;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n&nbsp;at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n&nbsp;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n&nbsp;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n&nbsp;at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)\r\n&nbsp;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n&nbsp;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n&nbsp;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n&nbsp;at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)\r\n&nbsp;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n&nbsp;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n&nbsp;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n&nbsp;at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)\r\n&nbsp;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n&nbsp;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n&nbsp;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n&nbsp;at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:118)\r\n&nbsp;at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:107)\r\n&nbsp;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n&nbsp;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n&nbsp;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n&nbsp;at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)\r\n&nbsp;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n&nbsp;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n&nbsp;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n&nbsp;at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)\r\n&nbsp;at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)\r\n&nbsp;at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)\r\n&nbsp;at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)\r\n&nbsp;at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n&nbsp;at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\r\n&nbsp;at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)\r\n&nbsp;at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)\r\n&nbsp;at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)\r\n&nbsp;at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:836)\r\n&nbsp;at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1747)\r\n&nbsp;at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n&nbsp;at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n&nbsp;at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n&nbsp;at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n&nbsp;at java.lang.Thread.run(Thread.java:748)\r\n2019-10-17 18:11:51,177 [http-nio-8080-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet (FrameworkServlet.java:1100) - Failed to complete request: com.alibaba.excel.exception.ExcelGenerateException: Can not close IO\r\n2019-10-17 18:11:51,179 [http-nio-8080-exec-1] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] (DirectJDKLog.java:175) - Servlet.service() for servlet [dispatcherServlet] in context with path [/nfplus-aurora-admin] threw exception [Request processing failed; nested exception is com.alibaba.excel.exception.ExcelGenerateException: Can not close IO] with root cause\r\njava.lang.NoSuchMethodError: org.apache.poi.util.IOUtils.copy(Ljava/io/InputStream;Ljava/io/OutputStream;)V\r\n&nbsp;at org.apache.poi.xssf.streaming.SXSSFWorkbook.injectData(SXSSFWorkbook.java:396)\r\n&nbsp;at org.apache.poi.xssf.streaming.SXSSFWorkbook.write(SXSSFWorkbook.java:936)\r\n&nbsp;at com.alibaba.excel.context.WriteContextImpl.finish(WriteContextImpl.java:349)\r\n&nbsp;at com.alibaba.excel.write.ExcelBuilderImpl.finish(ExcelBuilderImpl.java:106)\r\n&nbsp;at com.alibaba.excel.ExcelWriter.finish(ExcelWriter.java:298)\r\n&nbsp;at com.southcn.nfapp.aurora.admin.controller.RegRecordController.exportRegRecord(RegRecordController.java:90)\r\n&nbsp;at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n&nbsp;at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n&nbsp;at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n&nbsp;at java.lang.reflect.Method.invoke(Method.java:498)\r\n&nbsp;at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)\r\n&nbsp;at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)\r\n&nbsp;at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)\r\n&nbsp;at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:889)\r\n&nbsp;at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:794)\r\n&nbsp;at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n&nbsp;at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)\r\n&nbsp;at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)\r\n&nbsp;at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)\r\n&nbsp;at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)\r\n&nbsp;at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)\r\n&nbsp;at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)\r\n&nbsp;at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)\r\n&nbsp;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\r\n&nbsp;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n&nbsp;at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n&nbsp;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n&nbsp;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n&nbsp;at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)\r\n&nbsp;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n&nbsp;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n&nbsp;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n&nbsp;at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)\r\n&nbsp;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n&nbsp;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n&nbsp;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n&nbsp;at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)\r\n&nbsp;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n&nbsp;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n&nbsp;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n&nbsp;at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:118)\r\n&nbsp;at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:107)\r\n&nbsp;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n&nbsp;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n&nbsp;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n&nbsp;at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)\r\n&nbsp;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n&nbsp;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n&nbsp;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n&nbsp;at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)\r\n&nbsp;at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)\r\n&nbsp;at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)\r\n&nbsp;at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)\r\n&nbsp;at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n&nbsp;at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\r\n&nbsp;at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)\r\n&nbsp;at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)\r\n&nbsp;at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)\r\n&nbsp;at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:836)\r\n&nbsp;at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1747)\r\n&nbsp;at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n&nbsp;at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n&nbsp;at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n&nbsp;at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n&nbsp;at java.lang.Thread.run(Thread.java:748)\r\n2019-10-17 18:11:51,182 [http-nio-8080-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet (LogFormatUtils.java:91) - \"INCLUDE\" dispatch for GET \"/nfplus-aurora-admin/error\", parameters={}\r\n2019-10-17 18:11:51,183 [http-nio-8080-exec-1] DEBUG s.d.s.w.PropertySourcedRequestMappingHandlerMapping (PropertySourcedRequestMappingHandlerMapping.java:108) - looking up handler for path: /error\r\n2019-10-17 18:11:51,185 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping (AbstractHandlerMapping.java:411) - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)\r\n2019-10-17 18:11:51,186 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor (AbstractMessageConverterMethodProcessor.java:223) - Found 'Content-Type:application/vnd.ms-excel;charset=utf-8' in response\r\n2019-10-17 18:11:51,186 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver (ExceptionHandlerExceptionResolver.java:400) - Using @ExceptionHandler com.southcn.nfapp.aurora.admin.aop.GlobalExceptionHandler#exception(Exception)\r\n2019-10-17 18:11:51,187 [http-nio-8080-exec-1] ERROR c.s.nfapp.aurora.admin.aop.GlobalExceptionHandler (GlobalExceptionHandler.java:71) - Could not find acceptable representation\r\norg.springframework.web.HttpMediaTypeNotAcceptableException: Could not find acceptable representation\r\n&nbsp;at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:307)\r\n&nbsp;at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:225)\r\n&nbsp;at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:82)\r\n&nbsp;at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:123)\r\n&nbsp;at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:889)\r\n&nbsp;at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:794)\r\n&nbsp;at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n&nbsp;at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)\r\n&nbsp;at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)\r\n&nbsp;at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)\r\n&nbsp;at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)\r\n&nbsp;at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)\r\n&nbsp;at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)\r\n&nbsp;at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)\r\n&nbsp;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\r\n&nbsp;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n&nbsp;at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)\r\n&nbsp;at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:580)\r\n&nbsp;at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:516)\r\n&nbsp;at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:388)\r\n&nbsp;at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)\r\n&nbsp;at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)\r\n&nbsp;at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)\r\n&nbsp;at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n&nbsp;at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\r\n&nbsp;at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)\r\n&nbsp;at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)\r\n&nbsp;at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)\r\n&nbsp;at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:836)\r\n&nbsp;at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1747)\r\n&nbsp;at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n&nbsp;at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n&nbsp;at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n&nbsp;at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n&nbsp;at java.lang.Thread.run(Thread.java:748)\r\n2019-10-17 18:11:51,188 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor (AbstractMessageConverterMethodProcessor.java:223) - Found 'Content-Type:application/vnd.ms-excel;charset=utf-8' in response\r\n2019-10-17 18:11:51,188 [http-nio-8080-exec-1] WARN&nbsp; o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver (ExceptionHandlerExceptionResolver.java:416) - Failure in @ExceptionHandler com.southcn.nfapp.aurora.admin.aop.GlobalExceptionHandler#exception(Exception)\r\norg.springframework.web.HttpMediaTypeNotAcceptableException: Could not find acceptable representation\r\n&nbsp;at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:307)\r\n&nbsp;at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(RequestResponseBodyMethodProcessor.java:180)\r\n&nbsp;at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:82)\r\n&nbsp;at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:123)\r\n&nbsp;at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:409)\r\n&nbsp;at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)\r\n&nbsp;at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:140)\r\n&nbsp;at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:79)\r\n&nbsp;at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1298)\r\n&nbsp;at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1110)\r\n&nbsp;at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1056)\r\n&nbsp;at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)\r\n&nbsp;at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)\r\n&nbsp;at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)\r\n&nbsp;at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)\r\n&nbsp;at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)\r\n&nbsp;at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)\r\n&nbsp;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\r\n&nbsp;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n&nbsp;at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)\r\n&nbsp;at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:580)\r\n&nbsp;at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:516)\r\n&nbsp;at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:388)\r\n&nbsp;at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)\r\n&nbsp;at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)\r\n&nbsp;at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)\r\n&nbsp;at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n&nbsp;at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\r\n&nbsp;at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)\r\n&nbsp;at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)\r\n&nbsp;at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)\r\n&nbsp;at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:836)\r\n&nbsp;at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1747)\r\n&nbsp;at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n&nbsp;at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n&nbsp;at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n&nbsp;at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n&nbsp;at java.lang.Thread.run(Thread.java:748)\r\n\r\n\r\n\r\n------------------&nbsp;原始邮件&nbsp;------------------\r\n发件人:&nbsp;\"Jiaju Zhuang\"<notifications@github.com&gt;;\r\n发送时间:&nbsp;2019年10月17日(星期四) 晚上6:08\r\n收件人:&nbsp;\"alibaba/easyexcel\"<easyexcel@noreply.github.com&gt;;\r\n抄送:&nbsp;\"157195553\"<157195553@qq.com&gt;;\"Author\"<author@noreply.github.com&gt;;\r\n主题:&nbsp;Re: [alibaba/easyexcel] easyExcel报ExcelGenerateException异常 (#708)\r\n\r\n\r\n\r\n\r\n贴全异常\r\n \r\n—\r\nYou are receiving this because you authored the thread.\r\nReply to this email directly, view it on GitHub, or unsubscribe."
      },
      {
        "user": "157195553",
        "created_at": "2019-10-17T10:15:38Z",
        "body": "这是接口代码\r\n@ApiOperation(\"导出报表\")\r\n@GetMapping(\"exportRegRecord\")\r\n@NoLogin\r\npublic void exportRegRecord(@RequestBody QueryRegRecordDTO queryRegRecordDTO, HttpServletResponse response) throws IOException {\r\n    Assert.hasLength(queryRegRecordDTO.getActId(),\"actId不能空\");\r\n    Activity activity = activityAdminService.getActivityById(queryRegRecordDTO.getActId());\r\n    Assert.notNull(activity,\"活动不存在\");\r\n    ExcelWriter excelWriter = null;\r\n    OutputStream ops = null;\r\n    response.setContentType(\"application/vnd.ms-excel\");\r\n    response.setCharacterEncoding(\"utf-8\");\r\n    String fileName = URLEncoder.encode(activity.getTitle() + \"活动报名数据\", \"UTF-8\");\r\n    response.setHeader(\"Content-disposition\", \"attachment;filename=\" + fileName + \".xlsx\");\r\n    try{\r\n        ops = response.getOutputStream();\r\n        excelWriter = EasyExcel.write(ops).build();\r\n        List<String&gt; headers = this.regRecordAdminService.getExcelHeaders(queryRegRecordDTO.getActId());\r\n        List<List<String&gt;&gt; excelHeader = new ArrayList<&gt;();\r\n        excelHeader.add(headers);\r\n        int i=0;\r\n        for(RegRecordReviewStatusEnum regRecordReviewStatusEnum : RegRecordReviewStatusEnum.values()){\r\n            WriteSheet sheet = EasyExcel.writerSheet(i++,regRecordReviewStatusEnum.getName()).head(excelHeader).build();\r\n            queryRegRecordDTO.setReviewStatusEnum(regRecordReviewStatusEnum);\r\n            List<RegRecord&gt; list = this.regRecordAdminService.listRegRecord(queryRegRecordDTO);\r\n            List<List<Object&gt;&gt; excelData = this.regRecordAdminService.excelData(list);\r\n            excelWriter.write(excelData, sheet);\r\n        }\r\n    }catch (Exception e){\r\n        throw new SouthcnException(MsgCode.FAIL, \"导出报表出错：\" + e.getMessage() + \"\\n cause by：\" + e.getCause());\r\n    }finally {\r\n        if(Objects.nonNull(excelWriter)){\r\n            excelWriter.finish();\r\n        }\r\n        if(Objects.nonNull(ops)){\r\n            ops.close();\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n------------------&nbsp;原始邮件&nbsp;------------------\r\n发件人:&nbsp;\"Jiaju Zhuang\"<notifications@github.com&gt;;\r\n发送时间:&nbsp;2019年10月17日(星期四) 晚上6:08\r\n收件人:&nbsp;\"alibaba/easyexcel\"<easyexcel@noreply.github.com&gt;;\r\n抄送:&nbsp;\"157195553\"<157195553@qq.com&gt;;\"Author\"<author@noreply.github.com&gt;;\r\n主题:&nbsp;Re: [alibaba/easyexcel] easyExcel报ExcelGenerateException异常 (#708)\r\n\r\n\r\n\r\n\r\n贴全异常\r\n \r\n—\r\nYou are receiving this because you authored the thread.\r\nReply to this email directly, view it on GitHub, or unsubscribe."
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2019-10-17T11:44:13Z",
        "body": "NoSuchMethodError: org.apache.poi.util.IOUtils.copy(Ljava/io/InputStream;Ljava/io/OutputStream;)V\r\n请检查 poi  版本是否统一 3.17 或者 4.0,1"
      },
      {
        "user": "157195553",
        "created_at": "2019-10-17T12:58:03Z",
        "body": "poi是4.0.1 easyexcel是2.0.5"
      }
    ]
  },
  {
    "number": 707,
    "title": "动态生成表头时支持直接传入树形结构么？如树形结构的菜单数据。",
    "created_at": "2019-10-17T06:21:52Z",
    "closed_at": "2019-10-17T10:35:35Z",
    "labels": [
      "help wanted",
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/707",
    "body": "dynamicHeadWrite()\r\n我见这个方法中只支持 model 和 List<List<String>>。\r\n由于导出的数据是完全用户自定义的，没法写定model。拼装List<List<String>>又很麻烦。\r\n想直接传入树形结构生成表头。",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/707/comments",
    "author": "TaoTao-Zhao",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-10-17T10:06:28Z",
        "body": "什么叫做树形结构？"
      },
      {
        "user": "TaoTao-Zhao",
        "created_at": "2019-10-17T10:23:51Z",
        "body": "list中有下级节点，每个节点下面也有可能有节点。\r\n类似与这样的json数据\r\n[\r\n    {\r\n        \"id\": 0,\r\n        \"name\": \"第一个节点\",\r\n        \"children\": [\r\n            {\r\n                \"id\": 1,\r\n                \"name\": \"第二个节点\",\r\n                \"children\": [\r\n                    {\r\n                        \"id\": 3,\r\n                        \"name\": \"第三个节点\",\r\n                        \"children\": [\r\n                                       可能有无数个节点。。。。\r\n                                          ]\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n]"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2019-10-17T10:35:35Z",
        "body": "不支持 。建议 invokeHead 方法能返回index 和head的关系。invoke 会返回 index和 数据。可以自己对应."
      }
    ]
  },
  {
    "number": 703,
    "title": "数据导出使用CellWriteHandler拦截器设置cell内容位置时，2003版本出现位置设置失效",
    "created_at": "2019-10-16T09:18:20Z",
    "closed_at": "2019-10-17T01:49:08Z",
    "labels": [
      "bug",
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/703",
    "body": "**触发场景描述**\r\n导出为Excel2003版本\r\n**触发Bug的代码**\r\n```java\r\n    ExcelWriterSheetBuilder sheet = EasyExcel.write(out, CourtFillOpenExcelDto.class)\r\n                // 定义列拦截器  实现列自定义设置\r\n                .registerWriteHandler(new CellWriteHandler() {\r\n                    @Override\r\n                    public void beforeCellCreate(WriteSheetHolder writeSheetHolder, WriteTableHolder writeTableHolder, Row row, Head head, int i, boolean b) {\r\n                    }\r\n\r\n                    @Override\r\n                    public void afterCellCreate(WriteSheetHolder writeSheetHolder, WriteTableHolder writeTableHolder,\r\n                                                CellData cellData, Cell cell, Head head, int relativeRowIndex, boolean isHead) {\r\n                        if (!isHead && StringUtils.equalsAnyIgnoreCase(head.getFieldName(), \"amount\", \"totalAmount\")) {\r\n                            CellStyle cellStyle = writeSheetHolder.getSheet().getWorkbook().createCellStyle();\r\n                            cellStyle.setAlignment(HorizontalAlignment.RIGHT);\r\n                            cell.setCellStyle(cellStyle);\r\n                        }\r\n                    }\r\n                }).sheet();\r\n        sheet.doWrite(fillOpenExcelMapper.noteFillOpensToCourtFillOpenExcelDtos(noteFillOpens.getContent()));\r\n```\r\n**提示的异常或者没有达到的效果**\r\n设置的列数据 从第22列开始  样式设置失效\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/703/comments",
    "author": "LinWen-Yi",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-10-16T10:47:32Z",
        "body": "debug 确认22列 开始 有没有进来？还有 不能每次都createstyle 要缓存起来，一直创建会挂的。"
      },
      {
        "user": "LinWen-Yi",
        "created_at": "2019-10-17T01:49:08Z",
        "body": "> debug确认22列开始有没有进来？还有不能每次都createstyle要缓存起来，一直创建会挂的。\r\n\r\n谢谢，使用excelType(ExcelTypeEnum.XLS) 但是写入文件名结尾为xlsx就不会出现这个问题。"
      }
    ]
  },
  {
    "number": 695,
    "title": "resin服务器环境下，Web导出报错 getWriter() can't be called after getOutputStream()",
    "created_at": "2019-10-15T04:39:26Z",
    "closed_at": "2019-10-21T12:57:57Z",
    "labels": [
      "bug",
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/695",
    "body": "**触发场景描述**\r\nresin服务器环境下\r\n**触发Bug的代码**\r\n```java\r\nList<DemoData> result = data();\r\nEasyExcel.write(response.getOutputStream(), DemoData.class).sheet(\"sheet1\").doWrite(result);\r\n```\r\n**提示的异常或者没有达到的效果**\r\ngetWriter() can't be called after getOutputStream()",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/695/comments",
    "author": "hizzyishome",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-10-15T14:13:13Z",
        "body": "请提供详细异常 和详细代码"
      },
      {
        "user": "hizzyishome",
        "created_at": "2019-10-17T06:21:44Z",
        "body": "代码应该影响不大，问题主要是针对某些容器类型的，本地jetty可以运行，线上使用的resin（已验证），可能welogic也会报错（未验证）\r\n项目框架 SSM\r\n版本依赖：\r\n`\r\n<dependency>\r\n            <groupId>com.alibaba</groupId>\r\n            <artifactId>easyexcel</artifactId>\r\n            <version>2.0.5</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.apache.poi</groupId>\r\n            <artifactId>poi</artifactId>\r\n            <version>3.17</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.apache.poi</groupId>\r\n            <artifactId>poi-ooxml</artifactId>\r\n            <version>3.17</version>\r\n        </dependency>\r\n`\r\n       \r\n\r\n涉及功能，web导出\r\n代码\r\n`\r\n    @Get(\"/ot/export/pa\")\r\n    public void paymanageExport(@Param(\"a\") String a,\r\n                                @Param(\"b\") String b,\r\n                                HttpServletRequest request,\r\n                                HttpServletResponse response) throws Exception {\r\n        List<DataRow> result = Lists.newArrayList();\r\n        ImmutablePair<Boolean, Object> ret = homeDataService.getTableData(a, b);\r\n        String fileName = URLEncoder.encode(homeDataService.fileNameGenerator(a, b), \"UTF-8\");\r\n        response.setContentType(\"application/vnd.ms-excel\");\r\n        response.setCharacterEncoding(\"utf-8\");\r\n        //URLEncoder.encode防止中文乱码\r\n        String fileName = URLEncoder.encode(homeDataService.fileNameGenerator(a, b), \"UTF-8\");\r\n        response.setHeader(\"Content-disposition\", \"attachment;filename=\" + fileName + \".xlsx\");\r\n        EasyExcel.write(response.getOutputStream(), DataRow.class).sheet(\"sheet1\").doWrite(result);\r\n    }\r\n`\r\n实体类\r\n`\r\n@Data\r\npublic class DataRow implements Bean {\r\n    @ExcelProperty(\"序号\")\r\n    private int rank;\r\n    @ExcelProperty(\"编码\")\r\n    private String code;\r\n    @ExcelProperty(\"名称\")\r\n    private String name;\r\n}\r\n`"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2019-10-17T11:45:30Z",
        "body": "请提供详细异常"
      },
      {
        "user": "hizzyishome",
        "created_at": "2019-10-21T06:36:32Z",
        "body": "org.springframework.web.util.NestedServletException: GET /api/export;\r\nnested exception is java.lang.IllegalStateException: getWriter() can't\r\nbe called after getOutputStream().\r\n\tat net.paoding.rose.RoseFilter.throwServletException(RoseFilter.java:551)\r\n\tat net.paoding.rose.RoseFilter.doFilter(RoseFilter.java:349)\r\n\tat com.caucho.server.dispatch.FilterFilterChain.doFilter(FilterFilterChain.java:89)\r\n\tat org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:164)\r\n\tat org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:80)\r\n\tat org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)\r\n\tat org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)\r\n\tat com.caucho.server.dispatch.FilterFilterChain.doFilter(FilterFilterChain.java:89)\r\n\tat com.filter.LogIdFilter.doFilter(LogIdFilter.java:34)\r\n\tat com.caucho.server.dispatch.FilterFilterChain.doFilter(FilterFilterChain.java:89)\r\n\tat com.filter.CorsFilter.doFilter(CorsFilter.java:56)\r\n\tat com.caucho.server.dispatch.FilterFilterChain.doFilter(FilterFilterChain.java:89)\r\n\tat com.caucho.server.webapp.WebAppFilterChain.doFilter(WebAppFilterChain.java:156)\r\n\tat com.caucho.server.webapp.AccessLogFilterChain.doFilter(AccessLogFilterChain.java:95)\r\n\tat com.caucho.server.dispatch.ServletInvocation.service(ServletInvocation.java:290)\r\n\tat com.caucho.server.http.HttpRequest.handleRequest(HttpRequest.java:838)\r\n\tat com.caucho.network.listen.TcpSocketLink.dispatchRequest(TcpSocketLink.java:1353)\r\n\tat com.caucho.network.listen.TcpSocketLink.handleRequest(TcpSocketLink.java:1309)\r\n\tat com.caucho.network.listen.TcpSocketLink.handleRequestsImpl(TcpSocketLink.java:1293)\r\n\tat com.caucho.network.listen.TcpSocketLink.handleRequests(TcpSocketLink.java:1201)\r\n\tat com.caucho.network.listen.TcpSocketLink.handleAcceptTaskImpl(TcpSocketLink.java:997)\r\n\tat com.caucho.network.listen.ConnectionTask.runThread(ConnectionTask.java:117)\r\n\tat com.caucho.network.listen.ConnectionTask.run(ConnectionTask.java:93)\r\n\tat com.caucho.network.listen.SocketLinkThreadLauncher.handleTasks(SocketLinkThreadLauncher.java:169)\r\n\tat com.caucho.network.listen.TcpSocketAcceptThread.run(TcpSocketAcceptThread.java:61)\r\n\tat com.caucho.env.thread2.ResinThread2.runTasks(ResinThread2.java:173)\r\n\tat com.caucho.env.thread2.ResinThread2.run(ResinThread2.java:118)\r\nCaused by: java.lang.IllegalStateException: getWriter() can't be called\r\nafter getOutputStream().\r\n\tat com.caucho.server.http.HttpServletResponseImpl.getWriter(HttpServletResponseImpl.java:183)\r\n\tat javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:164)\r\n\tat org.springframework.session.web.http.OnCommittedResponseWrapper.getWriter(OnCommittedResponseWrapper.java:149)\r\n\tat javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:164)\r\n\tat net.paoding.rose.web.instruction.TextInstruction.sendResponse(TextInstruction.java:132)\r\n\tat net.paoding.rose.web.instruction.TextInstruction.doRender(TextInstruction.java:118)\r\n\tat net.paoding.rose.web.instruction.AbstractInstruction.render(AbstractInstruction.java:44)\r\n\tat net.paoding.rose.web.instruction.InstructionExecutorImpl.render(InstructionExecutorImpl.java:46)\r\n\tat net.paoding.rose.web.impl.thread.RootEngine.execute(RootEngine.java:140)\r\n\tat net.paoding.rose.web.impl.thread.LinkedEngine.execute(LinkedEngine.java:69)\r\n\tat net.paoding.rose.web.impl.thread.Rose.doNext(Rose.java:121)\r\n\tat net.paoding.rose.web.impl.thread.Rose.innerStart(Rose.java:256)\r\n\tat net.paoding.rose.web.impl.thread.Rose.start(Rose.java:109)\r\n\tat net.paoding.rose.RoseFilter.doFilter(RoseFilter.java:346)\r\n\tat com.caucho.server.dispatch.FilterFilterChain.doFilter(FilterFilterChain.java:89)\r\n\tat org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:164)\r\n\tat org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:80)\r\n\tat org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)\r\n\tat org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)\r\n\tat com.caucho.server.dispatch.FilterFilterChain.doFilter(FilterFilterChain.java:89)\r\n\tat com.filter.LogIdFilter.doFilter(LogIdFilter.java:34)\r\n\tat com.caucho.server.dispatch.FilterFilterChain.doFilter(FilterFilterChain.java:89)\r\n\tat com.filter.CorsFilter.doFilter(CorsFilter.java:56)\r\n\tat com.caucho.server.dispatch.FilterFilterChain.doFilter(FilterFilterChain.java:89)\r\n\tat com.caucho.server.webapp.WebAppFilterChain.doFilter(WebAppFilterChain.java:156)\r\n\tat com.caucho.server.webapp.AccessLogFilterChain.doFilter(AccessLogFilterChain.java:95)\r\n\tat com.caucho.server.dispatch.ServletInvocation.service(ServletInvocation.java:290)\r\n\tat com.caucho.server.http.HttpRequest.handleRequest(HttpRequest.java:838)\r\n\tat com.caucho.network.listen.TcpSocketLink.dispatchRequest(TcpSocketLink.java:1353)\r\n\tat com.caucho.network.listen.TcpSocketLink.handleRequest(TcpSocketLink.java:1309)\r\n\tat com.caucho.network.listen.TcpSocketLink.handleRequestsImpl(TcpSocketLink.java:1293)\r\n\tat com.caucho.network.listen.TcpSocketLink.handleRequests(TcpSocketLink.java:1201)\r\n\tat com.caucho.network.listen.TcpSocketLink.handleAcceptTaskImpl(TcpSocketLink.java:997)\r\n\tat com.caucho.network.listen.ConnectionTask.runThread(ConnectionTask.java:117)\r\n\tat com.caucho.network.listen.ConnectionTask.run(ConnectionTask.java:93)\r\n\tat com.caucho.network.listen.SocketLinkThreadLauncher.handleTasks(SocketLinkThreadLauncher.java:169)\r\n\tat com.caucho.network.listen.TcpSocketAcceptThread.run(TcpSocketAcceptThread.java:61)\r\n\tat com.caucho.env.thread2.ResinThread2.runTasks(ResinThread2.java:173)\r\n\tat com.caucho.env.thread2.ResinThread2.run(ResinThread2.java:118)"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2019-10-21T12:57:57Z",
        "body": "是不是 框架不一样 你尝试 设置参数 `autoclosestream` 为false 应该就行了"
      }
    ]
  },
  {
    "number": 694,
    "title": "Found interface org.apache.poi.util.POILogger, but class was expected",
    "created_at": "2019-10-14T12:20:53Z",
    "closed_at": "2019-10-21T12:56:41Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/694",
    "body": "在做项目时，使用导出excel时遇到这个问题，不知如何解决，求指导Caused by: java.lang.IncompatibleClassChangeError: Found interface org.apache.poi.util.POILogger, but class was expected",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/694/comments",
    "author": "gongfj",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-10-15T14:14:03Z",
        "body": "请提供详细异常代码"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2019-10-21T12:56:41Z",
        "body": "不知道您是否已经解决了问题？如果未解决 请重新打开问题"
      },
      {
        "user": "michaellct",
        "created_at": "2019-11-28T16:37:54Z",
        "body": "解决了吗？我还引用了\r\n\t<dependency>\r\n        <groupId>org.apache.poi</groupId>\r\n        <artifactId>poi</artifactId>\r\n        <version>4.1.0</version>\r\n\t</dependency>\r\n``\r\nCaused by: java.lang.IncompatibleClassChangeError: Found interface org.apache.poi.util.POILogger, but class was expected\r\n\tat org.apache.poi.openxml4j.opc.ZipPackage.buildPartName(ZipPackage.java:366)\r\n\tat org.apache.poi.openxml4j.opc.ZipPackage.getPartsImpl(ZipPackage.java:303)\r\n\tat org.apache.poi.openxml4j.opc.OPCPackage.getParts(OPCPackage.java:756)\r\n\tat org.apache.poi.openxml4j.opc.OPCPackage.open(OPCPackage.java:298)\r\n\tat org.apache.poi.openxml4j.opc.OPCPackage.open(OPCPackage.java:201)\r\n\tat com.alibaba.excel.analysis.v07.XlsxSaxAnalyser.readOpcPackage(XlsxSaxAnalyser.java:124)\r\n\tat com.alibaba.excel.analysis.v07.XlsxSaxAnalyser.<init>(XlsxSaxAnalyser.java:58)\r\n\tat com.alibaba.excel.analysis.ExcelAnalyserImpl.choiceExcelExecutor(ExcelAnalyserImpl.java:92)\r\n\tat com.alibaba.excel.analysis.ExcelAnalyserImpl.<init>(ExcelAnalyserImpl.java:45)\r\n``"
      },
      {
        "user": "xpwi",
        "created_at": "2020-01-20T08:33:32Z",
        "body": "The org.apache.poi.util.POILogger was an abstract class until apache poi 4.0.1. Now in apache poi 4.1.0 it is an interface. You have a mix of apache poi versions running. Exactly version 4.1.0 and an earlier version. Don't do that"
      },
      {
        "user": "xpwi",
        "created_at": "2020-01-20T08:34:12Z",
        "body": "版本问题 copy  from stackoverflow"
      }
    ]
  },
  {
    "number": 666,
    "title": "读取Excel时 超链接数据为空",
    "created_at": "2019-10-07T01:47:22Z",
    "closed_at": "2019-10-28T10:46:35Z",
    "labels": [
      "question",
      "suggest"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/666",
    "body": "**建议描述**\r\n建议增加读取超链接数据的功能，目前读取Excel时，如果某一列是超链接，那么这一列读取为空",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/666/comments",
    "author": "Strong-Gavin",
    "comments": [
      {
        "user": "sjmingdna",
        "created_at": "2019-10-07T05:45:29Z",
        "body": "谢谢\r\n\r\n\r\n\r\n\r\n------------------ 原始邮件 ------------------\r\n发件人: \"Gavin\"<notifications@github.com>;\r\n发送时间: 2019年10月7日(星期一) 上午9:47\r\n收件人: \"alibaba/easyexcel\"<easyexcel@noreply.github.com>;\r\n抄送: \"Subscribed\"<subscribed@noreply.github.com>;\r\n主题: [alibaba/easyexcel] 读取Excel时 超链接数据为空 (#666)\r\n\r\n\r\n\r\n\r\n建议描述\r\n 建议增加读取超链接数据的功能，目前读取Excel时，如果某一列是超链接，那么这一列读取为空\r\n \r\n—\r\nYou are receiving this because you are subscribed to this thread.\r\nReply to this email directly, view it on GitHub, or mute the thread."
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2019-10-22T15:29:17Z",
        "body": "这个需要提供详细的数据。我虽然读不到超链接的信息 但是能读到 引用超链接的数据。你提供下文件？"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2019-10-28T10:46:35Z",
        "body": "您好 是否已经解决问题了？如果还未解决 请重新打开问题"
      }
    ]
  },
  {
    "number": 644,
    "title": "设置某一列的字体为红色",
    "created_at": "2019-09-26T11:46:47Z",
    "closed_at": "2019-10-22T11:03:02Z",
    "labels": [
      "help wanted",
      "question"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/644",
    "body": "这里使用拦截器实现第一列(表头列除外)内容的字体为红色\r\n\r\n```\r\n   public class FirstColRedWriteHandler implements CellWriteHandler {\r\n    @Override\r\n    public void beforeCellCreate(WriteSheetHolder writeSheetHolder, WriteTableHolder writeTableHolder, Row row, Head head, int relativeRowIndex, boolean isHead) {\r\n\r\n    }\r\n\r\n    @Override\r\n    public void afterCellCreate(WriteSheetHolder writeSheetHolder, WriteTableHolder writeTableHolder, CellData cellData, Cell cell, Head head, int relativeRowIndex, boolean isHead) {\r\n        if (!isHead && 0== cell.getColumnIndex()) {\r\n            // 第一列显示红色（表头列除外）\r\n            CellStyle cellStyle = cell.getCellStyle();\r\n            XSSFFont font = (XSSFFont) writeSheetHolder.getSheet().getWorkbook().createFont();\r\n            font.setColor(IndexedColors.RED.getIndex());\r\n            cellStyle.setFont(font);\r\n\r\n            cell.setCellStyle(cellStyle);\r\n        }\r\n    }\r\n}\r\n```\r\n使用这个自定义拦截器\r\n```\r\n EasyExcel.write(outputStream, Data.class)\r\n                .registerWriteHandler(new FirstColRedWriteHandler())\r\n                .sheet(fileName).doWrite(list);\r\n```\r\n\r\n实际生成的文件没有红色字体的效果\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/644/comments",
    "author": "chencs0603",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-10-16T10:50:13Z",
        "body": "确认下 有没有调用进来？"
      },
      {
        "user": "chencs0603",
        "created_at": "2019-10-21T12:00:40Z",
        "body": "已确认调进来了"
      },
      {
        "user": "chencs0603",
        "created_at": "2019-10-21T12:01:47Z",
        "body": "我使用的版本是2.0.4"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2019-10-22T11:02:58Z",
        "body": "你的代码有问题\r\n```java\r\npublic class FirstColRedWriteHandler implements CellWriteHandler {\r\n\r\n    private CellStyle cellStyle;\r\n\r\n\r\n    @Override\r\n    public void beforeCellCreate(WriteSheetHolder writeSheetHolder, WriteTableHolder writeTableHolder, Row row, Head head, int relativeRowIndex, boolean isHead) {\r\n\r\n    }\r\n\r\n    @Override\r\n    public void afterCellCreate(WriteSheetHolder writeSheetHolder, WriteTableHolder writeTableHolder, CellData cellData, Cell cell, Head head, int relativeRowIndex, boolean isHead) {\r\n        // 第一列显示红色（表头列除外）\r\n\r\n        if (!isHead && 0== cell.getColumnIndex()) {\r\n            if(cellStyle==null){\r\n                cellStyle=writeSheetHolder.getSheet().getWorkbook().createCellStyle();\r\n                Font font=   writeSheetHolder.getSheet().getWorkbook().createFont();\r\n                font.setColor(Font.COLOR_RED);\r\n                cellStyle.setFont(font);\r\n            }\r\n            cell.setCellStyle(cellStyle);\r\n        }\r\n    }\r\n}\r\n```"
      },
      {
        "user": "chencs0603",
        "created_at": "2019-10-24T03:36:33Z",
        "body": "非常感谢!\r\n即把CellStyle cellStyle = cell.getCellStyle();这行代码改成CellStyle cellStyle = writeSheetHolder.getSheet().getWorkbook().createCellStyle();即可"
      }
    ]
  },
  {
    "number": 4029,
    "title": "com.alibaba.excel.metadata.Cell 获取单元格的值的API有没有?",
    "created_at": "2024-10-22T09:47:52Z",
    "closed_at": "2024-10-23T01:13:50Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/4029",
    "body": "文档里面没有搜到",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/4029/comments",
    "author": "Na2Lin",
    "comments": [
      {
        "user": "gongxuanzhang",
        "created_at": "2024-10-23T01:13:50Z",
        "body": "CellData#getData"
      }
    ]
  },
  {
    "number": 3992,
    "title": "我使用模板导出，支持用线程池并发导出多个excel吗",
    "created_at": "2024-09-14T08:31:06Z",
    "closed_at": "2024-09-29T01:36:18Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3992",
    "body": "如题",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3992/comments",
    "author": "17857333693",
    "comments": [
      {
        "user": "psxjoy",
        "created_at": "2024-09-14T08:35:34Z",
        "body": "Multithreading is currently not supported. While it generally doesn't cause issues in most cases (I sometimes use it for data processing), I strongly recommend against using it in production environments.\r\n\r\n目前不支持。虽然日常使用中，多线程处理在大部分情况下，不会产生问题（我偶尔也会使用多线程处理数据），但是我强烈不建议在正式项目中使用。\r\n"
      },
      {
        "user": "psxjoy",
        "created_at": "2024-09-29T01:36:18Z",
        "body": "This issue has been completed, I will close this issue."
      }
    ]
  },
  {
    "number": 3983,
    "title": "BeanMapUtils.create(oneRowData) 解析不匹配",
    "created_at": "2024-09-10T03:26:57Z",
    "closed_at": "2024-09-29T01:36:39Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3983",
    "body": "# 建议先去看文档\r\ncom.alibaba.excel.exception.ExcelWriteDataConvertException: Can not find 'Converter' support class BankAccountUShieldStatusEnum.\r\n\tat com.alibaba.excel.write.executor.AbstractExcelWriteExecutor.doConvert(AbstractExcelWriteExecutor.java:323)\r\n\tat com.alibaba.excel.write.executor.AbstractExcelWriteExecutor.convert(AbstractExcelWriteExecutor.java:277)\r\n\tat com.alibaba.excel.write.executor.AbstractExcelWriteExecutor.converterAndSet(AbstractExcelWriteExecutor.java:58)\r\n\tat com.alibaba.excel.write.executor.ExcelWriteAddExecutor.addJavaObjectToExcel(ExcelWriteAddExecutor.java:174)\r\n\tat com.alibaba.excel.write.executor.ExcelWriteAddExecutor.addOneRowOfDataToExcel(ExcelWriteAddExecutor.java:82)\r\n# 触发场景描述\r\nBeanMapUtils.create(oneRowData) 构造的BeanMap无法与Field匹配导致ExcelContentProperty的属性为空，DTO字段名为\"uShieldStatus\"，BeanMap中为\"UShieldStatus\"\r\n# 触发Bug的代码\r\n```java\r\n   这里写代码\r\n```\r\n# 提示的异常或者没有达到的效果\r\n大家尽量把问题一次性描述清楚，然后贴上全部异常，这样方便把问题一次性解决掉。\r\n至少大家要符合一个原则就是，能让其他人复现出这个问题，如果无法复现，肯定无法解决。\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3983/comments",
    "author": "OvO-z",
    "comments": [
      {
        "user": "1363033915",
        "created_at": "2024-09-10T03:46:14Z",
        "body": "easyExcel 一直都有这个问题， uShieldStatus 这样的驼峰式，在其他的一些JSON工具都有这个BUG， 一般字段不要这样起名，gNo,  gName。 字段 改成 ushieldStatus ， 或是 uuShieldStatus就没问题了 "
      },
      {
        "user": "psxjoy",
        "created_at": "2024-09-11T18:17:28Z",
        "body": "EasyExcel uses CGLIB to convert beans to map data types during write operations. CGLIB eventually calls the `java.beans.Introspector#decapitalize` method, which has its own parsing rules. This can cause properties like 'A' to be converted to 'a' through reflection, leading to data mismatches. You can either rename the property or convert it to lowercase to resolve the issue.I strongly recommend using standard camelCase for property names. \r\n\r\neasyexcel在写入时，使用cglib将bean转换成map类型的数据。cglib最后调用的是`java.beans.Introspector#decapitalize` 方法。它有一套属于自己的解析规则，这导致类似'A'这种属性，反射的结果成为了'a'，最终导致无法正常匹配数据写入。推荐使用正常的驼峰形式命名属性。\r\n\r\n```JAVA\r\n/**\r\n * Utility method to take a string and convert it to normal Java variable\r\n * name capitalization.  This normally means converting the first\r\n * character from upper case to lower case, but in the (unusual) special\r\n * case when there is more than one character and both the first and\r\n * second characters are upper case, we leave it alone.\r\n * <p>\r\n * Thus \"FooBah\" becomes \"fooBah\" and \"X\" becomes \"x\", but \"URL\" stays\r\n * as \"URL\".\r\n *\r\n * @param  name The string to be decapitalized.\r\n * @return  The decapitalized version of the string.\r\n */\r\npublic static String decapitalize(String name) {\r\n\tif (name == null || name.length() == 0) {\r\n\t\treturn name;\r\n\t}\r\n\tif (name.length() > 1 && Character.isUpperCase(name.charAt(1)) &&\r\n\t\t\t\t\tCharacter.isUpperCase(name.charAt(0))){\r\n\t\treturn name;\r\n\t}\r\n\tchar chars[] = name.toCharArray();\r\n\tchars[0] = Character.toLowerCase(chars[0]);\r\n\treturn new String(chars);\r\n}\r\n```"
      },
      {
        "user": "psxjoy",
        "created_at": "2024-09-11T18:18:02Z",
        "body": "It seems not a bug. I will remove `BUG` tag."
      },
      {
        "user": "psxjoy",
        "created_at": "2024-09-29T01:36:39Z",
        "body": "This issue has been completed, I will close this issue."
      }
    ]
  },
  {
    "number": 3943,
    "title": "大量数据导入的时候，20w的数据，多线程导入解析多个sheet，报错",
    "created_at": "2024-08-21T02:39:50Z",
    "closed_at": "2024-09-15T17:07:09Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3943",
    "body": "\r\n2024-08-21 10:32:37.728  WARN [ool-1-thread-12] o.e.i.p.DefaultLocalPersistenceService   : Could not delete directory for context 4c772ede-dd82-4ba1-8c52-20b8c4b5e413\r\n2024-08-21 10:32:37.728  INFO [ool-1-thread-12] org.ehcache.core.EhcacheManager          : Cache '4c772ede-dd82-4ba1-8c52-20b8c4b5e413' removed from EhcacheManager.\r\n2024-08-21 10:32:37.728  WARN [pool-1-thread-5] org.terracotta.utilities.io.Files        : Persistent IOException renaming \"C:\\Users\\pc\\AppData\\Local\\Temp\\53e4dcd2-fc3d-410e-93e8-c5f2a4637211\\excache\\7e68af69-8a7c-4a18-a15d-4cce58b4ddd3\\file\\86022aed-d80f-4a82-9cff-38ee7f1003b6_d518a7f275ed48aff2103a4f081c930cf6d033dd\" to \"C:\\Users\\pc\\AppData\\Local\\Temp\\53e4dcd2-fc3d-410e-93e8-c5f2a4637211\\excache\\7e68af69-8a7c-4a18-a15d-4cce58b4ddd3\\file\\del4032942918110800876\"; elapsedTime=PT0.9412889S\r\n\r\njava.nio.file.AccessDeniedException: C:\\Users\\pc\\AppData\\Local\\Temp\\53e4dcd2-fc3d-410e-93e8-c5f2a4637211\\excache\\7e68af69-8a7c-4a18-a15d-4cce58b4ddd3\\file\\86022aed-d80f-4a82-9cff-38ee7f1003b6_d518a7f275ed48aff2103a4f081c930cf6d033dd -> C:\\Users\\pc\\AppData\\Local\\Temp\\53e4dcd2-fc3d-410e-93e8-c5f2a4637211\\excache\\7e68af69-8a7c-4a18-a15d-4cce58b4ddd3\\file\\del4032942918110800876\r\n\tat sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:83)\r\n\tat sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:97)\r\n\tat sun.nio.fs.WindowsFileCopy.move(WindowsFileCopy.java:301)\r\n\tat sun.nio.fs.WindowsFileSystemProvider.move(WindowsFileSystemProvider.java:287)\r\n\tat java.nio.file.Files.move(Files.java:1392)\r\n\tat org.terracotta.utilities.io.Files.retryingRenamePath(Files.java:1107)\r\n\tat org.terracotta.utilities.io.Files.retryingRename(Files.java:1012)\r\n\tat org.terracotta.utilities.io.Files.deleteTreeWithRetry(Files.java:928)\r\n\tat org.terracotta.utilities.io.Files.deleteTree(Files.java:411)\r\n\tat org.ehcache.impl.persistence.FileUtils.tryRecursiveDelete(FileUtils.java:102)\r\n\tat org.ehcache.impl.persistence.DefaultLocalPersistenceService.destroy(DefaultLocalPersistenceService.java:205)\r\n\tat org.ehcache.impl.persistence.DefaultLocalPersistenceService.destroySafeSpace(DefaultLocalPersistenceService.java:182)\r\n\tat org.ehcache.impl.persistence.DefaultDiskResourceService.destroy(DefaultDiskResourceService.java:183)\r\n\tat org.ehcache.core.EhcacheManager.closeEhcache(EhcacheManager.java:236)\r\n\tat org.ehcache.core.EhcacheManager.removeCache(EhcacheManager.java:214)\r\n\tat org.ehcache.core.EhcacheManager.removeCache(EhcacheManager.java:188)\r\n\tat com.alibaba.excel.cache.Ehcache.destroy(Ehcache.java:160)\r\n\tat com.alibaba.excel.analysis.ExcelAnalyserImpl.finish(ExcelAnalyserImpl.java:154)\r\n\tat com.alibaba.excel.ExcelReader.finish(ExcelReader.java:102)\r\n\tat com.alibaba.excel.read.builder.ExcelReaderSheetBuilder.doRead(ExcelReaderSheetBuilder.java:66)\r\n\tat com.banksteel.poi.controller.EasyExcelReadApiImpl.lambda$readFileThread$1(EasyExcelReadApiImpl.java:69)\r\n\tat com.banksteel.poi.controller.EasyExcelReadApiImpl$$Lambda$1145/1895213232.call(Unknown Source)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n\tat java.lang.Thread.run(Thread.java:744)\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3943/comments",
    "author": "gyj1500146362",
    "comments": [
      {
        "user": "psxjoy",
        "created_at": "2024-08-21T02:46:39Z",
        "body": "Hi, we currently do not support multithreaded write operations.\r\n\r\n目前版本暂时不支持多线程写入。"
      },
      {
        "user": "gyj1500146362",
        "created_at": "2024-08-21T02:57:29Z",
        "body": "我看只会报WARN日志，数据时解析到了的"
      },
      {
        "user": "psxjoy",
        "created_at": "2024-08-21T03:14:02Z",
        "body": "We don’t recommend concurrent read/write operations, as they are **very likely** to cause issues.\r\n\r\n不建议并发读写，它很有可能导致读写错误。"
      }
    ]
  },
  {
    "number": 3906,
    "title": "easyexcel的盈利模式是啥？",
    "created_at": "2024-07-31T09:28:18Z",
    "closed_at": "2024-07-31T09:29:44Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3906",
    "body": "easyexcel的盈利模式是啥？",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3906/comments",
    "author": "rujianwang",
    "comments": [
      {
        "user": "gongxuanzhang",
        "created_at": "2024-07-31T09:29:44Z",
        "body": "开源不盈利，为爱发电"
      }
    ]
  },
  {
    "number": 3890,
    "title": "Can not close IO.",
    "created_at": "2024-07-17T14:26:46Z",
    "closed_at": "2024-07-25T05:34:51Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3890",
    "body": "异常堆栈信息\r\n<html>\r\n<body>\r\n<!--StartFragment-->\r\ncom.alibaba.excel.exception.ExcelGenerateException: Can not close IO.\r\n--\r\n  | at com.alibaba.excel.context.WriteContextImpl.finish(WriteContextImpl.java:420)\r\n  | at com.alibaba.excel.write.ExcelBuilderImpl.finish(ExcelBuilderImpl.java:99)\r\n  | at com.alibaba.excel.ExcelWriter.finish(ExcelWriter.java:143)\r\n  | at com.galaxy.introduce.service.impl.ExcelServiceImpl.exportExcelDiyHead(ExcelServiceImpl.java:103)\r\n  | at com.galaxy.introduce.controller.EasyExcelController.exportPoint(EasyExcelController.java:996)\r\n  | at com.galaxy.introduce.controller.EasyExcelController$$FastClassBySpringCGLIB$$d0123d3f.invoke(<generated>)\r\n  | at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\r\n  | at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\r\n  | at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\r\n  | at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\r\n  | at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)\r\n  | at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n  | at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\r\n  | at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)\r\n  | at com.galaxy.introduce.intercept.LogAspect.around(LogAspect.java:57)\r\n  | at sun.reflect.GeneratedMethodAccessor136.invoke(Unknown Source)\r\n  | at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n  | at java.lang.reflect.Method.invoke(Method.java:498)\r\n  | at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634)\r\n  | at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624)\r\n  | at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72)\r\n  | at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n  | at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\r\n  | at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)\r\n  | at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n  | at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\r\n  | at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\r\n  | at com.galaxy.introduce.controller.EasyExcelController$$EnhancerBySpringCGLIB$$714141d0.exportPoint(<generated>)\r\n  | at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n  | at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n  | at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n  | at java.lang.reflect.Method.invoke(Method.java:498)\r\n  | at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)\r\n  | at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)\r\n  | at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)\r\n  | at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)\r\n  | at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n  | at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n  | at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)\r\n  | at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)\r\n  | at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n  | at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n  | at javax.servlet.http.HttpServlet.service(HttpServlet.java:502)\r\n  | at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n  | at javax.servlet.http.HttpServlet.service(HttpServlet.java:596)\r\n  | at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)\r\n  | at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)\r\n  | at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n  | at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)\r\n  | at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)\r\n  | at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n  | at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\r\n  | at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)\r\n  | at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)\r\n  | at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n  | at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\r\n  | at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)\r\n  | at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)\r\n  | at datadog.trace.instrumentation.springweb.HandlerMappingResourceNameFilter.doFilterInternal(HandlerMappingResourceNameFilter.java:50)\r\n  | at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\r\n  | at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)\r\n  | at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)\r\n  | at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n  | at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\r\n  | at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)\r\n  | at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)\r\n  | at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:56)\r\n  | at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)\r\n  | at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)\r\n  | at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)\r\n  | at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)\r\n  | at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)\r\n  | at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)\r\n  | at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:492)\r\n  | at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)\r\n  | at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)\r\n  | at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\r\n  | at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:768)\r\n  | at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)\r\n  | at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)\r\n  | at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)\r\n  | at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)\r\n  | at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)\r\n  | at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n  | at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)\r\n  | at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)\r\n  | at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n  | at java.lang.Thread.run(Thread.java:750)\r\n  | Caused by: org.apache.catalina.connector.ClientAbortException: java.io.IOException: Broken pipe\r\n  | at org.apache.catalina.connector.OutputBuffer.realWriteBytes(OutputBuffer.java:351)\r\n  | at org.apache.catalina.connector.OutputBuffer.flushByteBuffer(OutputBuffer.java:784)\r\n  | at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:298)\r\n  | at org.apache.catalina.connector.OutputBuffer.close(OutputBuffer.java:250)\r\n  | at org.apache.catalina.connector.CoyoteOutputStream.close(CoyoteOutputStream.java:153)\r\n  | at com.alibaba.excel.context.WriteContextImpl.finish(WriteContextImpl.java:398)\r\n  | ... 87 common frames omitted\r\n  | Caused by: java.io.IOException: Broken pipe\r\n  | at sun.nio.ch.FileDispatcherImpl.write0(Native Method)\r\n  | at sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:47)\r\n  | at sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:93)\r\n  | at sun.nio.ch.IOUtil.write(IOUtil.java:65)\r\n  | at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:470)\r\n  | at org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:136)\r\n  | at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1431)\r\n  | at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:768)\r\n  | at org.apache.tomcat.util.net.SocketWrapperBase.writeBlocking(SocketWrapperBase.java:593)\r\n  | at org.apache.tomcat.util.net.SocketWrapperBase.write(SocketWrapperBase.java:537)\r\n  | at org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer.doWrite(Http11OutputBuffer.java:540)\r\n  | at org.apache.coyote.http11.filters.ChunkedOutputFilter.doWrite(ChunkedOutputFilter.java:110)\r\n  | at org.apache.coyote.http11.Http11OutputBuffer.doWrite(Http11OutputBuffer.java:193)\r\n  | at org.apache.coyote.Response.doWrite(Response.java:603)\r\n  | at org.apache.catalina.connector.OutputBuffer.realWriteBytes(OutputBuffer.java:338)\r\n  | ... 92 common frames omitted\r\n\r\n<!--EndFragment-->\r\n</body>\r\n</html>\r\n\r\n\r\njava 代码\r\n\r\n   ExcelWriter excelWriter = null;\r\n        try {\r\n        // 这里注意 有同学反应使用swagger 会导致各种问题，请直接用浏览器或者用postman\r\n        response.setContentType(\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\");\r\n        response.setCharacterEncoding(\"utf-8\");\r\n        // 这里URLEncoder.encode可以防止中文乱码 当然和easyexcel没有关系\r\n        fileName = URLEncoder.encode(fileName, \"UTF-8\").replaceAll(\"\\\\+\", \"%20\");\r\n        response.setHeader(\"Content-disposition\", \"attachment;filename*=utf-8''\" + fileName + \".xlsx\");\r\n         excelWriter = EasyExcel.write(response.getOutputStream())\r\n                    .head(list)\r\n                    .build();\r\n            WriteSheet writeSheet = EasyExcel.writerSheet(fileName).build();\r\n            excelWriter.write(dataList, writeSheet);\r\n\r\n        } catch (Exception e) {\r\n            log.error(\"下载文件失败\", e);\r\n            throw new ApiException(\"下载文件失败\");\r\n        } finally {\r\n            // 千万别忘记finish 会帮忙关闭流\r\n            if (excelWriter != null) {\r\n                excelWriter.finish();\r\n            }\r\n        }\r\n\r\n\r\n使用jar包  3.3.3\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3890/comments",
    "author": "jiangbin31",
    "comments": [
      {
        "user": "psxjoy",
        "created_at": "2024-07-18T02:36:07Z",
        "body": "报错提示`Broken pipe`，和服务器之间的通信断了"
      },
      {
        "user": "psxjoy",
        "created_at": "2024-07-25T05:34:51Z",
        "body": "不知道您是否已经解决该问题？我们先暂时关闭这个问题，如果还存在问题请重新Reopen这个issue。"
      }
    ]
  },
  {
    "number": 3889,
    "title": "ExcelProperty 使用中value 值无法指定多个",
    "created_at": "2024-07-17T03:17:57Z",
    "closed_at": "2024-08-05T13:36:37Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3889",
    "body": "读取时值为null\r\n```java\r\n// 这是实体类\r\npublic class BaseFloodREntity {\r\n        @Basic\r\n        @Column(name = \"TM\")\r\n        @ExcelProperty(value = \"TM\", converter = CustomStringTimestampConverter.class)\r\n        private Timestamp tm;\r\n\r\n        @Basic\r\n        @ExcelProperty(value = \"DATA_ID\")\r\n        @Column(name = \"DATA_ID\")\r\n        private String dataId;\r\n\r\n        @ExcelProperty(value = {\"值\", \"V\"})\r\n        @Basic\r\n        @Column(name = \"v\")\r\n        private BigDecimal v;\r\n\r\n        @Basic\r\n        @Column(name = \"rscd\")\r\n        private String rscd;\r\n\r\n        @GeneratedValue(strategy = GenerationType.IDENTITY)\r\n        @Id\r\n        @Column(name = \"id\")\r\n        private int id;\r\n    }\r\n// 这是读取功能\r\n baseFloodREntities = EasyExcel.read(file.getInputStream())\r\n                    .sheet()\r\n                    // 自动检测标题行 跳过\r\n                    .autoTrim(true)\r\n                    .head(BaseFloodREntity.class)\r\n                    .registerReadListener(new CustomListener(rscd))\r\n                    .doReadSync();\r\n// 这是自定义的listener \r\npublic class CustomListener extends AnalysisEventListener<BaseFloodREntity> {\r\n\r\n    // 处理excel中选定数据的rscd\r\n    private final String rscd;\r\n\r\n    @Override\r\n    public void onException(Exception exception, AnalysisContext context) throws Exception {\r\n        // 在这里处理异常情况,比如单元格为空\r\n        int rowIndex = context.readRowHolder().getRowIndex();\r\n        if (context.readRowHolder().getCellMap().containsValue(null)) {\r\n            // 如果当前行有任何单元格为 null,则忽略该行\r\n            log.warn(\"Row {} contains null value, skipping this row.\", rowIndex);\r\n            return;\r\n        }\r\n        // 其他异常情况的处理逻辑\r\n    }\r\n\r\n    public CustomListener(String rscd) {\r\n        this.rscd = rscd;\r\n    }\r\n\r\n    @Override\r\n    public void invoke(BaseFloodREntity baseFloodREntity, AnalysisContext context) {\r\n\r\n        log.info(\"invoke： {}\", baseFloodREntity);\r\n        // 设置 rscd 字段\r\n        baseFloodREntity.setRscd(rscd);\r\n    }\r\n\r\n    @Override\r\n    public void doAfterAllAnalysed(AnalysisContext context) {\r\n        // 其他后处理逻辑\r\n        log.info(\"所有数据解析完成！\");\r\n    }\r\n}\r\n# 问题描述\r\n在实体类中可以指定表头为大小写能读取，比如@ExcelProperty(value = {\"v\", \"V\"})。如果是@ExcelProperty(value = {\"值\", \"V\"})则无法读取到数据，在listner中的invoke阶段读的数据就为null。因为文档中没看到是否能够这样读取表头所以提交一个issue\r\n， 谢谢大佬们帮忙解答.",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3889/comments",
    "author": "smallwatermelonx",
    "comments": [
      {
        "user": "psxjoy",
        "created_at": "2024-07-18T02:40:45Z",
        "body": "参考注解中的注释\r\n```JAVA\r\n /**\r\n   * The name of the sheet header.\r\n   *\r\n   * <p>\r\n   * write: It automatically merges when you have more than one head\r\n   * <p>\r\n   * read: When you have multiple heads, take the last one\r\n   *\r\n   * @return The name of the sheet header\r\n   */\r\n  String[] value() default {\"\"};\r\n```"
      },
      {
        "user": "psxjoy",
        "created_at": "2024-08-05T13:36:37Z",
        "body": "I'm not sure if you've already resolved the issue. Let's go ahead and close this issue for now, but please feel free to reopen it if the problem continues.\r\n"
      },
      {
        "user": "smallwatermelonx",
        "created_at": "2024-08-18T14:15:44Z",
        "body": "> I'm not sure if you've already resolved the issue. Let's go ahead and close this issue for now, but please feel free to reopen it if the problem continues.\n\nThanks to you, I can solve my question already."
      }
    ]
  },
  {
    "number": 3872,
    "title": "内容相同时，每次生成的文件hash值不同",
    "created_at": "2024-07-08T06:42:26Z",
    "closed_at": "2024-07-16T02:19:26Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3872",
    "body": "# 异常代码\r\n```java\r\n@Test\r\npublic void testhash()throws Exception{\r\n\r\n\tString fileName = TestFileUtil.getPath() + \"hash\" + \".xlsx\";\r\n\r\n\tFile file = new File(fileName);\r\n\tEasyExcel.write(file, DemoData.class)\r\n\t\t\t.sheet(\"模板\")\r\n\t\t\t.doWrite(() -> {\r\n\t\t\t\t// 分页查询数据\r\n\t\t\t\treturn data();\r\n\t\t\t});\r\n\tfile.setLastModified(0L);\r\n\tfile.setExecutable(false);\r\n\tfile.setReadable(true);\r\n\tfile.setWritable(true);\r\n\t\r\n\tFile file1 = new File(fileName);\r\n\tbyte[] bytes = calculateFileHash(file1);\r\n\tString hexString = HexUtils.toHexString(bytes);\r\n\tSystem.out.println(hexString);\r\n\r\n}\r\n\r\npublic static byte[] calculateFileHash(InputStream inputStream) throws Exception {\r\n\tMessageDigest digest = MessageDigest.getInstance(\"SHA-256\");\r\n\ttry (DigestInputStream dis = new DigestInputStream(inputStream, digest)) {\r\n\r\n\t\tbyte[] buffer = new byte[1024 * 1024 * 500]; // 500 MB buffer\r\n\t\tint bytesRead;\r\n\t\twhile ((bytesRead = dis.read(buffer)) != -1) {\r\n\t\t\t// Read buffer data and update digest\r\n\t\t\tdigest.update(buffer, 0, bytesRead);\r\n\t\t}\r\n\t\t// Get the final hash value\r\n\t\treturn digest.digest();\r\n\t}\r\n}\r\n```\r\n# 异常提示\r\n\r\n# 问题描述\r\n文件内容相同，为什么每次生成的文件hash不一致\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3872/comments",
    "author": "dongbinlu",
    "comments": [
      {
        "user": "psxjoy",
        "created_at": "2024-07-08T08:33:11Z",
        "body": "excel 本质是一个压缩包，里面存放了一些xml文件。文件的创建时间、所在环境都会影响hash值。这符合hash的定义。"
      },
      {
        "user": "psxjoy",
        "created_at": "2024-07-16T02:19:26Z",
        "body": "不知道您是否已经解决该问题？我们先暂时关闭这个问题，如果还存在问题请重新Reopen这个issue。"
      }
    ]
  },
  {
    "number": 3868,
    "title": "如何读取使用制表符和空格分割的CSV文件？",
    "created_at": "2024-07-05T07:40:21Z",
    "closed_at": "2024-07-16T02:19:33Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3868",
    "body": "\r\n# 问题描述\r\n客户提供的csv文件是用TAB制表符分割的，读取出来就都是空，我把制表符替换成逗号就可以正常使用了。\r\n我怎么能设置读取csv文件的时候分隔符是什么？",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3868/comments",
    "author": "RuthlessJie",
    "comments": [
      {
        "user": "RuthlessJie",
        "created_at": "2024-07-05T07:53:08Z",
        "body": "代码： is = file.getInputStream();\r\n            EasyExcel.read(is, Rqjtmhat.class, new ReadListener<Rqjtmhat>() {\r\n                \r\n                @Override\r\n                public void invoke(Rqjtmhat r, AnalysisContext context) {\r\n                    //把解析到的每一行数据都存入list中\r\n                    userVOS.add(r);\r\n                }\r\n\r\n                @Override\r\n                public void doAfterAllAnalysed(AnalysisContext context) {\r\n\r\n                }\r\n            }).charset(StandardCharsets.UTF_8).excelType(ExcelTypeEnum.CSV).sheet().doRead();"
      },
      {
        "user": "psxjoy",
        "created_at": "2024-07-09T05:55:07Z",
        "body": "```java\r\nString fileName = TestFileUtil.getPath() + \"demo\" + File.separator + \"demo.csv\";\r\n// 一个文件一个reader\r\ntry (ExcelReader excelReader = EasyExcel.read(fileName, DemoData.class, new DemoDataListener()).build()) {\r\n    ReadWorkbookHolder readWorkbookHolder = excelReader.analysisContext().readWorkbookHolder();\r\n    // 判断只有csv 才需要修改配置信息\r\n    if (readWorkbookHolder instanceof CsvReadWorkbookHolder) {\r\n        CsvReadWorkbookHolder csvReadWorkbookHolder = (CsvReadWorkbookHolder)readWorkbookHolder;\r\n        // 底层读取csv 用的是apache的common-csv 所以设置 CsvFormat即可\r\n        ucsvReadWorkbookHolder.setCsvFormat(csvReadWorkbookHolder.getCsvFormat().withDelimiter(';'));\r\n    }\r\n    ReadSheet readSheet = EasyExcel.readSheet(0).build();\r\n    excelReader.read(readSheet);\r\n}\r\n```"
      },
      {
        "user": "psxjoy",
        "created_at": "2024-07-16T02:19:33Z",
        "body": "不知道您是否已经解决该问题？我们先暂时关闭这个问题，如果还存在问题请重新Reopen这个issue。"
      }
    ]
  },
  {
    "number": 3857,
    "title": "烦请专人人士说下如何实现0等待下载，数据库读取数据的同时页面开始下载部分excel功能",
    "created_at": "2024-06-30T22:24:56Z",
    "closed_at": "2024-07-05T06:07:41Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3857",
    "body": "// 目前使用StreamingResponseBody和easyexcel配合，但代码有问题，不太清楚底层逻辑\r\n```java\r\n@GetMapping(\"downloadExcel3\")\r\n    public StreamingResponseBody downloadExcel3(HttpServletResponse response) {\r\n        int count = userInfoMapper.count();\r\n        count = 900000;\r\n        int totalPage = count / pageSize;\r\n        if (count % pageSize != 0) {\r\n            totalPage++;\r\n        }\r\n        String encodedFileName = URLEncoder.encode(\"测试文件.xlsx\", StandardCharsets.UTF_8);\r\n        response.setHeader(\"Content-Disposition\", \"attachment; filename=\" + encodedFileName);\r\n        response.addHeader(\"Pragma\", \"no-cache\");\r\n        response.addHeader(\"Cache-Control\", \"no-cache\");\r\n        response.setContentType(\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\");\r\n        int finalTotalPage = totalPage;\r\n        return new StreamingResponseBody() {\r\n\r\n            @Override\r\n            public void writeTo(OutputStream outputStream) throws IOException {\r\n                try (ExcelWriter excelWriter = EasyExcel.write(response.getOutputStream(), UserInfo.class).build()) {\r\n                    WriteSheet writeSheet = EasyExcel.writerSheet(\"测试信息\").build();\r\n                    for (int i = 0; i < finalTotalPage; i++) {\r\n                        logger.info(\"当前读取第{}页数据\", i+1);\r\n                        // 分页获取数据\r\n                        List<UserInfo> userInfoList = userInfoMapper.listUserByPage2(i * pageSize, (i + 1) * pageSize);\r\n                        excelWriter.write(userInfoList, writeSheet);\r\n                    }\r\n                } catch (IOException e) {\r\n                    throw new RuntimeException(e);\r\n                }\r\n            }\r\n        };\r\n    }\r\n```",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3857/comments",
    "author": "goder037",
    "comments": [
      {
        "user": "psxjoy",
        "created_at": "2024-07-01T02:56:30Z",
        "body": "excel 本质是 xml 文件组成的压缩包。所以这种方式应该无法实现。"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2024-07-01T06:56:29Z",
        "body": "程序上做不到,可以从业务角度处理,后台生成完成之后通知"
      },
      {
        "user": "LSL1618",
        "created_at": "2024-07-04T08:57:59Z",
        "body": "没有这样写入一半下载一半的说法，要么不下载，要么写入完再下载，同步导出慢的话，可以做成异步导出(第一步生成文件保存导出记录，第二步根据导出记录下载文件)。"
      }
    ]
  },
  {
    "number": 3852,
    "title": "Excel单元格宽度固定，单元格内容非常多导致一个单元格显示不下所有内容，现有方法可以让单元格内容完全显示吗？多谢！",
    "created_at": "2024-06-25T03:16:46Z",
    "closed_at": "2024-06-28T00:56:36Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3852",
    "body": "已经搜索过，未找到相关问题 谢谢",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3852/comments",
    "author": "AccountGc",
    "comments": [
      {
        "user": "AccountGc",
        "created_at": "2024-06-25T03:17:32Z",
        "body": "例如：调用某个方法检测此行是否有数据溢出，并且合并单元格 "
      },
      {
        "user": "psxjoy",
        "created_at": "2024-06-25T08:36:13Z",
        "body": "xlsx本质上来说是一个xml文件，没办法做这种动态检测。只能说你预估一个值，超过这个长度，固定增加宽度。"
      },
      {
        "user": "LSL1618",
        "created_at": "2024-06-26T01:58:39Z",
        "body": "一个是重设单元格列宽，一个是重设单元格行高，根据单元格内容的字符长度，来预估一个宽度或高度。"
      },
      {
        "user": "AccountGc",
        "created_at": "2024-06-28T00:56:20Z",
        "body": "> xlsx本质上来说是一个xml文件，没办法做这种动态检测。只能说你预估一个值，超过这个长度，固定增加宽度。\r\n\r\n多谢"
      },
      {
        "user": "AccountGc",
        "created_at": "2024-06-28T00:56:32Z",
        "body": "> 一个是重设单元格列宽，一个是重设单元格行高，根据单元格内容的字符长度，来预估一个宽度或高度。\r\n\r\n多谢\r\n"
      }
    ]
  },
  {
    "number": 3790,
    "title": "请问doRead方法不会阻塞主线程，内部是使用多线程读取excel行的还是就一个独立于主线程的子线程在从上到下读取excel？",
    "created_at": "2024-05-14T03:02:18Z",
    "closed_at": "2024-05-15T01:33:39Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3790",
    "body": null,
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3790/comments",
    "author": "0x141026",
    "comments": [
      {
        "user": "gongxuanzhang",
        "created_at": "2024-05-14T05:46:05Z",
        "body": "会阻塞的"
      },
      {
        "user": "0x141026",
        "created_at": "2024-05-14T05:58:37Z",
        "body": "> 会阻塞的\n\ndoReadSync方法才会阻塞主线程吧？"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2024-05-14T06:32:26Z",
        "body": "都会阻塞, doReadSync只是有返回值"
      },
      {
        "user": "0x141026",
        "created_at": "2024-05-14T06:39:35Z",
        "body": "> 都会阻塞, doReadSync只是有返回值\n\n哦哦，我一会试验一下。还有一个问题，不能并发读取多行吗？还是只能从上到下依次顺序读取？"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2024-05-14T06:47:16Z",
        "body": "> 哦哦，我一会试验一下。还有一个问题，不能并发读取多行吗？还是只能从上到下依次顺序读取？\r\n\r\n只能从上到下,如果你想多线程你可以在监听器里面执行,但是建议自己加一个buffer来处理,并发安全也要自己解决"
      },
      {
        "user": "0x141026",
        "created_at": "2024-05-14T06:54:08Z",
        "body": "> > 哦哦，我一会试验一下。还有一个问题，不能并发读取多行吗？还是只能从上到下依次顺序读取？\n> \n> \n> \n> 只能从上到下,如果你想多线程你可以在监听器里面执行,但是建议自己加一个buffer来处理,并发安全也要自己解决\n\n我问的是自带的doRead本身会不会并发读取？而且监听器里也没法实现并发读取excel的不同行吧，你重写哪个能实现并发读取？"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2024-05-14T06:55:46Z",
        "body": "> 我问的是自带的doRead本身会不会并发读取？而且监听器里也没法实现并发读取excel的不同行吧，你重写哪个能实现并发读取？\r\n\r\n不是说了不会并发吗,会阻塞.   \r\n如果你一定要并发你就自己写逻辑,但是不建议\r\n\r\n"
      },
      {
        "user": "0x141026",
        "created_at": "2024-05-14T06:57:37Z",
        "body": "> > 我问的是自带的doRead本身会不会并发读取？而且监听器里也没法实现并发读取excel的不同行吧，你重写哪个能实现并发读取？\n> \n> \n> \n> 不是说了不会并发吗,会阻塞.   \n> \n> 如果你一定要并发你就自己写逻辑,但是不建议\n> \n> \n> \n> \n\n怎么写，能给个思路吗，比如我要的是并发读取100行，一个线程读前50，后一个读后50行。"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2024-05-14T06:58:29Z",
        "body": "> 怎么写，能给个思路吗，比如我要的是并发读取100行，一个线程读前50，后一个读后50行。\r\n做不到并发读,但是你可以并发处理读取出来的数据\r\n"
      },
      {
        "user": "0x141026",
        "created_at": "2024-05-14T07:02:08Z",
        "body": "> > 怎么写，能给个思路吗，比如我要的是并发读取100行，一个线程读前50，后一个读后50行。\n> \n> 做不到并发读,但是你可以并发处理读取出来的数据\n> \n> \n\n这我明白。是我提问的方式有问题吗……，问的就是能不能并发读？能或者不能😆就完事了。还是谢谢你的帮助🙏"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2024-05-14T07:11:17Z",
        "body": "> 这我明白。是我提问的方式有问题吗……，问的就是能不能并发读？能或者不能😆就完事了。还是谢谢你的帮助🙏\r\n\r\n第一个问题:不能并发读.\r\n你的目的不是提高性能吗.\r\n所以我的意思是给你一个思路,如果需要提升性能,可以在处理数据的时候开启多线程, 不需要一个线程既读取数据又处理数据,当然这要看你自己的业务是否允许.\r\n顺便需要提醒的是如果按这种思路来优化,最好自己加一个buffer(阻塞队列也可以)用来存储读取的内容\r\n"
      },
      {
        "user": "0x141026",
        "created_at": "2024-05-14T07:41:38Z",
        "body": "> > 这我明白。是我提问的方式有问题吗……，问的就是能不能并发读？能或者不能😆就完事了。还是谢谢你的帮助🙏\n> \n> \n> \n> 第一个问题:不能并发读.\n> \n> 你的目的不是提高性能吗.\n> \n> 所以我的意思是给你一个思路,如果需要提升性能,可以在处理数据的时候开启多线程, 不需要一个线程既读取数据又处理数据,当然这要看你自己的业务是否允许.\n> \n> 顺便需要提醒的是如果按这种思路来优化,最好自己加一个buffer(阻塞队列也可以)用来存储读取的内容\n> \n> \n\n读完之后并发处理我知道。那就是没法提升读取的速度咯？如果有上万行也是顺序读下来。"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2024-05-14T09:38:40Z",
        "body": "> 读完之后并发处理我知道。那就是没法提升读取的速度咯？如果有上万行也是顺序读下来。\r\n\r\n是的,读取只能解决大量占用内存的问题 不能提升速度\r\n"
      }
    ]
  },
  {
    "number": 3786,
    "title": "模版填充不能用",
    "created_at": "2024-05-01T11:18:37Z",
    "closed_at": "2024-05-07T10:18:37Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3786",
    "body": "我先生成了一个excel模版，没有写入文件，直接存到了byte数组。之后用这个byte数组作为模板，填充数据。现在发现数据并没有填充成功\r\n\r\n```java\r\npackage com.baozi.excel;\r\n\r\nimport com.alibaba.excel.EasyExcel;\r\nimport com.alibaba.excel.ExcelWriter;\r\nimport com.alibaba.excel.write.metadata.WriteSheet;\r\nimport com.alibaba.excel.write.metadata.fill.FillWrapper;\r\n\r\nimport java.io.*;\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\nimport java.util.Map;\r\n\r\npublic class ExcelTest {\r\n    public static void main(String[] args) throws IOException {\r\n        ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();\r\n        createExcelTemplate(byteArrayOutputStream);\r\n        byte[] byteArray = byteArrayOutputStream.toByteArray();\r\n        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);\r\n\r\n        Map<String, List<Double>> data = createData();\r\n        FileOutputStream outputStream = new FileOutputStream(\"/Users/baoqingyang/study/utils-study/src/main/resources/excel/1.xlsx\");\r\n        ExcelWriter excelWriter = EasyExcel.write(outputStream).withTemplate(byteArrayInputStream).build();\r\n        WriteSheet writeSheet1 = EasyExcel.writerSheet().build();\r\n        excelWriter.fill(data, writeSheet1);\r\n//        excelWriter.fill(new FillWrapper(\"h1\", List.of(1.2, 1.3)), writeSheet1);\r\n//        excelWriter.fill(new FillWrapper(\"h2\", List.of(1.4, 1.5)), writeSheet1);\r\n//        excelWriter.fill(new FillWrapper(\"h3\", List.of(1.5, 1.6)), writeSheet1);\r\n        excelWriter.finish();\r\n    }\r\n\r\n    public static Map<String, List<Double>> createData() {\r\n        Map<String, List<Double>> data = new HashMap<>();\r\n        data.put(\"h1\", new ArrayList<>(){{\r\n            add(1.2);\r\n            add(1.3);\r\n        }});\r\n        data.put(\"h2\", new ArrayList<>(){{\r\n            add(1.4);\r\n            add(1.5);\r\n        }});\r\n        data.put(\"h3\", new ArrayList<>(){{\r\n            add(1.5);\r\n            add(1.6);\r\n        }});\r\n\r\n        return data;\r\n    }\r\n\r\n    public static void createExcelTemplate(OutputStream outputStream) throws IOException {\r\n        List<List<String>> head = new ArrayList<>(3);\r\n        List<String> head1 = new ArrayList<>(1){{\r\n            add(\"h1\");\r\n        }};\r\n        List<String> head2 = new ArrayList<>(1){{\r\n            add(\"h2\");\r\n        }};\r\n        List<String> head3 = new ArrayList<>(1){{\r\n            add(\"h3\");\r\n        }};\r\n        head.add(head1);\r\n        head.add(head2);\r\n        head.add(head3);\r\n\r\n        ArrayList<Object> data = new ArrayList<>(3);\r\n        List<String> data1 = new ArrayList<>(1){{\r\n            add(\"{.h1}\");\r\n            add(\"{.h2}\");\r\n            add(\"{.h3}\");\r\n        }};\r\n        data.add(data1);\r\n\r\n        EasyExcel.write(outputStream).head(head).sheet().doWrite(data);\r\n        outputStream.close();\r\n    }\r\n}\r\n```\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3786/comments",
    "author": "baozi-2019",
    "comments": [
      {
        "user": "chehongwei-git",
        "created_at": "2024-05-06T02:20:59Z",
        "body": "模版填充数据不对，应使用List\r\n\r\n示例：\r\n\r\n\r\n     public static List<Map<String,Double>> createData() {\r\n\r\n        List<Map<String,Double>> data1 = new ArrayList<>();\r\n        for (int i = 0; i < 3; i++) {\r\n            Map<String,Double> dataMap = new HashMap<>();\r\n            dataMap.put(\"h1\", 1.2);\r\n            dataMap.put(\"h2\", 1.3);\r\n            dataMap.put(\"h3\", 1.4);\r\n            data1.add(dataMap);\r\n        }\r\n\r\n        return data1;\r\n    }\r\n\r\n\r\n"
      }
    ]
  },
  {
    "number": 3757,
    "title": "单元格中含有html样式代码导出",
    "created_at": "2024-04-09T11:52:44Z",
    "closed_at": "2024-07-31T01:17:19Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3757",
    "body": "# 问题描述\r\n导出的单元格中含有html样式代码,可以转成excel的样式导出吗",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3757/comments",
    "author": "lyon-liang",
    "comments": [
      {
        "user": "gongxuanzhang",
        "created_at": "2024-07-19T06:16:53Z",
        "body": "你好，我们发现此Issue已经超过三个月没有活动了，为了更好的帮助您解决问题，我们将在两周后关闭此Issue，如果您仍然有问题，请在两周内内回复此Issue，谢谢！如果您已经解决或者不需要帮助，请忽略此消息。"
      }
    ]
  },
  {
    "number": 3733,
    "title": "获取sheet的列宽",
    "created_at": "2024-03-19T07:53:53Z",
    "closed_at": "2024-07-31T01:17:23Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3733",
    "body": "版本3.3.4\r\n可以在读文件的时候，获取指定sheet的某一列的列宽吗\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3733/comments",
    "author": "suyuchuang",
    "comments": [
      {
        "user": "gongxuanzhang",
        "created_at": "2024-07-19T06:16:58Z",
        "body": "你好，我们发现此Issue已经超过三个月没有活动了，为了更好的帮助您解决问题，我们将在两周后关闭此Issue，如果您仍然有问题，请在两周内内回复此Issue，谢谢！如果您已经解决或者不需要帮助，请忽略此消息。"
      }
    ]
  },
  {
    "number": 3717,
    "title": "easyexcel3.3.3版本模块依赖问题",
    "created_at": "2024-03-10T03:23:20Z",
    "closed_at": "2024-07-31T01:17:24Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3717",
    "body": "在我的一个**时间紧迫**的参赛项目中，我尝试通过easyexcel来实现对Excel的读取。但当我引入了依赖，并在module-info.java中requires easyexcel后，编译就提示：错误: 模块<我的模块>同时从 easyexcel 和 easyexcel.core 读取程序包 com.alibaba.excel\r\n然后我尝试禁用easyexcel-core，结果：java.lang.module.FindException: Module easyexcel not found, required by <我的模块>\r\n如果我只引入core的依赖，又提示从core和support里读同一个包了\r\n我的环境：\r\nJDK17\r\nGradle\r\neasyexcel3.3.3\r\n依赖语句：\r\njavafx {\r\n    version = '17.0.6'\r\n    modules = ['javafx.controls', 'javafx.fxml']\r\n}\r\ndependencies {\r\n    implementation ('com.alibaba:easyexcel:3.3.3')\r\n    testImplementation(\"org.junit.jupiter:junit-jupiter-api:${junitVersion}\")\r\n    testRuntimeOnly(\"org.junit.jupiter:junit-jupiter-engine:${junitVersion}\")\r\n}\r\nmodule-info.java:\r\nrequires javafx.controls;\r\nrequires javafx.fxml;\r\nrequires easyexcel;\r\nopens <我的模块> to javafx.fxml;\r\nexports <我的模块>;\r\n\r\n在使用easyexcel之前一切正常\r\n很急，请开发者尽快回复我，谢谢\r\n\r\n===============追加\r\n\r\npull request #3010 没有解决我的问题\r\n如果是我的哪里设置出错了，请引导我调整，谢谢",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3717/comments",
    "author": "MikeInChina",
    "comments": [
      {
        "user": "gongxuanzhang",
        "created_at": "2024-07-19T06:17:00Z",
        "body": "你好，我们发现此Issue已经超过三个月没有活动了，为了更好的帮助您解决问题，我们将在两周后关闭此Issue，如果您仍然有问题，请在两周内内回复此Issue，谢谢！如果您已经解决或者不需要帮助，请忽略此消息。"
      }
    ]
  },
  {
    "number": 3710,
    "title": "模板填充图片时无法使用`XXImageConverter`和`ImageWriteHandler`来简化图片填充",
    "created_at": "2024-03-05T08:30:16Z",
    "closed_at": "2024-07-31T01:17:26Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3710",
    "body": "1. 首先使用mybatis 查出数据,结果集如下：\r\n```xml\r\n        <resultMap id=\"ExcelHashMap\" type=\"java.util.HashMap\">\r\n               ...\r\n                <result column=\"proof\" property=\"凭证图片\" typeHandler=\"com.xxxx.handler.mybatis.StringToStringListTypeHandler\" javaType=\"java.util.List\"/>\r\n        </resultMap>\r\n```\r\n2. 然后再serviceImpl中导出数据：\r\n```java\r\npublic String exportExcel(...){\r\n          List<HashMap<String, Object>> excelData = accountsMapper.exportExcel(...);\r\n          EasyExcel.write(filePath + templateFileName)\r\n                .head(headers)\r\n                .inMemory(true) //使用EasyExcel生成的模板，去填充，结果填充字段未替换。在导出模板时，使用参数inMemory=true即可。\r\n                .sheet(\"Sheet1\")\r\n                .doWrite(templateColumnData);\r\n        //填充数据：excelData\r\n        EasyExcel.write(filePath +fileName)\r\n                .registerConverter(new MyStringImageConverter()) // 注册自定义的图片转换器\r\n                .registerConverter(new ExcelBigNumberConvert())\r\n                .registerWriteHandler(new ImageWriteHandler()) // 注册自定义拦截器\r\n                .withTemplate(filePath +templateFileName).sheet(\"Sheet1\").doFill(excelData);\r\n}\r\n```\r\n其中`MyStringImageConverter`和`ImageWriteHandler`如下\r\n```java\r\npublic class MyStringImageConverter implements Converter<List<String>> {\r\n    @Override\r\n    public Class<?> supportJavaTypeKey() {\r\n        return List.class;\r\n    }\r\n\r\n    @Override\r\n    public CellDataTypeEnum supportExcelTypeKey() {\r\n        return CellDataTypeEnum.EMPTY;\r\n    }\r\n\r\n    @Override\r\n    public List<String> convertToJavaData(ReadCellData<?> cellData, ExcelContentProperty contentProperty, GlobalConfiguration globalConfiguration) throws Exception {\r\n        return null;\r\n    }\r\n\r\n    @Override\r\n    public WriteCellData<?> convertToExcelData(List<String> value, ExcelContentProperty contentProperty, GlobalConfiguration globalConfiguration) throws Exception {\r\n        log.info(\"MyStringImageConverter value: {}\", value);\r\n        List<ImageData> data = new ArrayList<>();\r\n        ImageData imageData;\r\n        for (String path : value) {\r\n            if (path == null || path.isEmpty()) {\r\n                continue;\r\n            }\r\n            try (InputStream inputStream = Files.newInputStream(new File(path).toPath())) {\r\n                byte[] bytes =compressPicForScale( IoUtils.toByteArray(inputStream),120);\r\n                imageData = new ImageData();\r\n                imageData.setImage(bytes);\r\n                data.add(imageData);\r\n            } catch (Exception e) {\r\n                log.error(\"导出临库盘点获取图片异常：\", e);\r\n            }\r\n        }\r\n        WriteCellData<?> cellData = new WriteCellData<>();\r\n        if (CollectionUtil.isNotEmpty(data)) {\r\n            cellData.setImageDataList(data);\r\n            cellData.setType(CellDataTypeEnum.EMPTY);\r\n        } else {\r\n            cellData.setStringValue(\"无图片\");\r\n            cellData.setType(CellDataTypeEnum.STRING);\r\n        }\r\n        return cellData;\r\n    }\r\n}\r\n```\r\n\r\n```java\r\npublic class ImageWriteHandler implements CellWriteHandler {\r\n    /**\r\n     * 已经处理的Cell\r\n     */\r\n    private final CopyOnWriteArrayList<String> REPEATS = new CopyOnWriteArrayList<>();\r\n    /**\r\n     * 单元格的图片最大张数（每列的单元格图片张数不确定，单元格宽度需按照张数最多的长度来设置）\r\n     */\r\n    private final AtomicReference<Integer> MAX_IMAGE_SIZE = new AtomicReference<>(0);\r\n\r\n    /**\r\n     * 标记手动添加的图片，用于排除EasyExcel自动添加的图片\r\n     */\r\n    private final CopyOnWriteArrayList<Integer> CREATE_PIC_INDEX = new CopyOnWriteArrayList<>();\r\n    @Override\r\n    public void beforeCellCreate(WriteSheetHolder writeSheetHolder, WriteTableHolder writeTableHolder, Row row, Head head, Integer columnIndex, Integer relativeRowIndex, Boolean isHead) {\r\n\r\n    }\r\n\r\n    @Override\r\n    public void afterCellCreate(WriteSheetHolder writeSheetHolder, WriteTableHolder writeTableHolder, Cell cell, Head head, Integer relativeRowIndex, Boolean isHead) {\r\n\r\n    }\r\n\r\n    @Override\r\n    public void afterCellDataConverted(WriteSheetHolder writeSheetHolder, WriteTableHolder writeTableHolder, WriteCellData<?> cellData, Cell cell, Head head, Integer relativeRowIndex, Boolean isHead) {\r\n        //  在 数据转换成功后 不是头就把类型设置成空\r\n        if (isHead) {\r\n            return;\r\n        }\r\n        //将要插入图片的单元格的type设置为空,下面再填充图片\r\n        if(cellData.getRichTextStringDataValue()!=null||cellData.getData() instanceof ArrayList){\r\n            cellData.setType(CellDataTypeEnum.EMPTY);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void afterCellDispose(WriteSheetHolder writeSheetHolder, WriteTableHolder writeTableHolder, List<WriteCellData<?>> cellDataList, Cell cell, Head head, Integer relativeRowIndex, Boolean isHead) {\r\n//  在 单元格写入完毕后 ，自己填充图片\r\n        if (isHead || CollectionUtil.isEmpty(cellDataList)) {\r\n            return;\r\n        }\r\n        boolean listFlag = false;\r\n        Sheet sheet = cell.getSheet();\r\n        // 此处为ExcelUrlConverterUtil的返回值\r\n        List<ImageData> imageDataList = cellDataList.get(0).getImageDataList();\r\n        if (CollectionUtil.isNotEmpty(imageDataList)) {\r\n            listFlag = true;\r\n        }\r\n        if (!listFlag && imageDataList == null) {\r\n            return;\r\n        }\r\n        String key = cell.getRowIndex() + \"_\" + cell.getColumnIndex();\r\n        if (REPEATS.contains(key)) {\r\n            return;\r\n        }\r\n        REPEATS.add(key);\r\n        if (imageDataList.size() > MAX_IMAGE_SIZE.get()) {\r\n            MAX_IMAGE_SIZE.set(imageDataList.size());\r\n        }\r\n        // 默认要导出的图片大小为60*60px,60px的行高大约是900,60px列宽大概是248*8\r\n        sheet.getRow(cell.getRowIndex()).setHeight((short) 900);\r\n        sheet.setColumnWidth(cell.getColumnIndex(), listFlag ? 240 * 8 * MAX_IMAGE_SIZE.get() : 240 * 8);\r\n\r\n        if (listFlag) {\r\n            for (int i = 0; i < imageDataList.size(); i++) {\r\n                ImageData imageData = imageDataList.get(i);\r\n                if (imageData == null) {\r\n                    continue;\r\n                }\r\n                byte[] image = imageData.getImage();\r\n                this.insertImage(sheet, cell, image, i);\r\n            }\r\n        } else {\r\n            this.insertImage(sheet, cell, imageDataList.get(0).getImage(), 0);\r\n        }\r\n\r\n        // 清除EasyExcel自动添加的没有格式的图片\r\n        XSSFDrawing drawingPatriarch = (XSSFDrawing) sheet.getDrawingPatriarch();\r\n        List<XSSFShape> shapes = drawingPatriarch.getShapes();\r\n        for (int i = 0; i < shapes.size(); i++) {\r\n            XSSFShape shape = shapes.get(i);\r\n            if (shape instanceof XSSFPicture && !CREATE_PIC_INDEX.contains(i)) {\r\n                CREATE_PIC_INDEX.add(i);\r\n                XSSFPicture picture = (XSSFPicture) shape;\r\n                picture.resize(0);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * 重新插入一个图片\r\n     *\r\n     * @param sheet       Excel页面\r\n     * @param cell        表格元素\r\n     * @param pictureData 图片数据\r\n     * @param i           图片顺序\r\n     */\r\n    private void insertImage(Sheet sheet,Cell cell,byte[] pictureData,int i){\r\n        int picWidth = Units.pixelToEMU(60);\r\n        int index = sheet.getWorkbook().addPicture(pictureData, HSSFWorkbook.PICTURE_TYPE_PNG);\r\n        CREATE_PIC_INDEX.add(index);\r\n        Drawing<?> drawing = sheet.getDrawingPatriarch();\r\n        if (drawing == null) {\r\n            drawing = sheet.createDrawingPatriarch();\r\n        }\r\n        CreationHelper helper = sheet.getWorkbook().getCreationHelper();\r\n        ClientAnchor anchor = helper.createClientAnchor();\r\n        // 设置图片坐标\r\n        anchor.setDx1(picWidth * i);\r\n        anchor.setDx2(picWidth + picWidth * i);\r\n        anchor.setDy1(0);\r\n        anchor.setDy2(0);\r\n        //设置图片位置\r\n        int columnIndex = cell.getColumnIndex();\r\n        anchor.setCol1(columnIndex);\r\n        anchor.setCol2(columnIndex);\r\n        int rowIndex = cell.getRowIndex();\r\n        anchor.setRow1(rowIndex);\r\n        anchor.setRow2(rowIndex + 1);\r\n        anchor.setAnchorType(ClientAnchor.AnchorType.DONT_MOVE_AND_RESIZE);\r\n        drawing.createPicture(anchor, index);\r\n    }\r\n}\r\n```\r\n3. 调试时（数据中有图片路径）发现：`MyStringImageConverter`中log信息没有打印，即没有使用到注册的图像转换器。导出的excel也没有图像.\r\n希望帮忙解决\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3710/comments",
    "author": "songslybai",
    "comments": [
      {
        "user": "gongxuanzhang",
        "created_at": "2024-07-19T06:17:03Z",
        "body": "你好，我们发现此Issue已经超过三个月没有活动了，为了更好的帮助您解决问题，我们将在两周后关闭此Issue，如果您仍然有问题，请在两周内内回复此Issue，谢谢！如果您已经解决或者不需要帮助，请忽略此消息。"
      }
    ]
  },
  {
    "number": 3699,
    "title": "读取嵌入的图片, 内容是【DISPIMG】，请问如何转化为有效的图片",
    "created_at": "2024-02-22T08:07:40Z",
    "closed_at": "2024-07-31T01:17:28Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3699",
    "body": "\r\n```java\r\n@Override\r\npublic void invoke(Map<Integer, String> rowData, AnalysisContext context) {\r\n\r\n}\r\n```",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3699/comments",
    "author": "xiaolong1021",
    "comments": [
      {
        "user": "JiangJiangYo",
        "created_at": "2024-02-23T01:04:58Z",
        "body": "> ```java\r\n> @Override\r\n> public void invoke(Map<Integer, String> rowData, AnalysisContext context) {\r\n> \r\n> }\r\n> ```\r\n\r\nzz"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2024-07-19T06:17:05Z",
        "body": "你好，我们发现此Issue已经超过三个月没有活动了，为了更好的帮助您解决问题，我们将在两周后关闭此Issue，如果您仍然有问题，请在两周内内回复此Issue，谢谢！如果您已经解决或者不需要帮助，请忽略此消息。"
      }
    ]
  },
  {
    "number": 3696,
    "title": "【疑问】官方文档中写入批注，必须使用内存模式，实际使用过程中并不需要",
    "created_at": "2024-02-20T13:52:09Z",
    "closed_at": "2024-07-31T01:17:29Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3696",
    "body": "# 插入批注官方文档中代码\r\n```java\r\n@Test\r\n    public void commentWrite() {\r\n        String fileName = TestFileUtil.getPath() + \"commentWrite\" + System.currentTimeMillis() + \".xlsx\";\r\n        // 这里 需要指定写用哪个class去写，然后写到第一个sheet，名字为模板 然后文件流会自动关闭\r\n        // 这里要注意inMemory 要设置为true，才能支持批注。目前没有好的办法解决 不在内存处理批注。这个需要自己选择。\r\n        EasyExcel.write(fileName, DemoData.class).inMemory(Boolean.TRUE).registerWriteHandler(new CommentWriteHandler())\r\n            .sheet(\"模板\").doWrite(data());\r\n    }\r\n```\r\n# 问题描述\r\neasyexcel 3.3.3版本，在实际使用过程中并未设置使用内存模式inMemory(Boolean.TRUE)，依然可以插入批注，请问是此限制已经解决，文档未及时更新的原因吗？\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3696/comments",
    "author": "java-my-life",
    "comments": [
      {
        "user": "gongxuanzhang",
        "created_at": "2024-07-19T06:17:07Z",
        "body": "你好，我们发现此Issue已经超过三个月没有活动了，为了更好的帮助您解决问题，我们将在两周后关闭此Issue，如果您仍然有问题，请在两周内内回复此Issue，谢谢！如果您已经解决或者不需要帮助，请忽略此消息。"
      }
    ]
  },
  {
    "number": 3692,
    "title": "实体字段映射能否根据字段名匹配？",
    "created_at": "2024-02-06T07:45:14Z",
    "closed_at": "2024-07-05T09:26:34Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3692",
    "body": "查看文档发现导出数据与表头之间的映射方式是通过@ExcelProperty注解来实现的。\r\n我的项目比较特殊，实体是通过类似lombok的机制生成出来的，不能做到自定义，能否支持通过其他方式匹配映射字段？",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3692/comments",
    "author": "XHZY1314",
    "comments": [
      {
        "user": "psxjoy",
        "created_at": "2024-07-03T02:31:57Z",
        "body": "比较简单的方式，是在运行时动态地创建一个映射，将实体类的字段名称映射到 Excel 表头名称。"
      },
      {
        "user": "XHZY1314",
        "created_at": "2024-07-03T02:32:31Z",
        "body": "cxv\r\n "
      },
      {
        "user": "psxjoy",
        "created_at": "2024-07-05T09:26:34Z",
        "body": "不知道您是否已经解决该问题？我们先暂时关闭这个问题，如果还存在问题请重新Reopen这个issue."
      }
    ]
  },
  {
    "number": 3690,
    "title": "生成Excel报错ang.NoClassDefFoundError: Failed resolution of: Ljavax/xml/stream/XMLStreamReader",
    "created_at": "2024-02-05T09:50:52Z",
    "closed_at": "2024-07-05T09:26:20Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3690",
    "body": "\r\n触发代码：EasyExcel.write(filePath, xx.class).sheet(\"sheet\").doWrite(list);\r\n\r\ncom.alibaba.excel.exception.ExcelGenerateException: java.lang.NoClassDefFoundError: Failed resolution of: Ljavax/xml/stream/XMLStreamReader;\r\n                                                                                                    \tat com.alibaba.excel.write.ExcelBuilderImpl.<init>(ExcelBuilderImpl.java:42)\r\n                                                                                                    \tat com.alibaba.excel.ExcelWriter.<init>(ExcelWriter.java:36)\r\n                                                                                                    \tat com.alibaba.excel.write.builder.ExcelWriterBuilder.build(ExcelWriterBuilder.java:114)\r\n                                                                                                    \tat com.alibaba.excel.write.builder.ExcelWriterBuilder.sheet(ExcelWriterBuilder.java:130)\r\n                                                                                                    \tat com.alibaba.excel.write.builder.ExcelWriterBuilder.sheet(ExcelWriterBuilder.java:126)\r\n                                                                                                    \tat com.hbmcc.zl.ui.module.publicList.type.capacity.CapacityAutoOptimizationLifecycle.lambda$outPutCsv$4$CapacityAutoOptimizationLifecycle(CapacityAutoOptimizationLifecycle.java:442)\r\n                                                                                                    \tat com.hbmcc.zl.ui.module.publicList.type.capacity.-$$Lambda$CapacityAutoOptimizationLifecycle$SnZ_BLivfeKM_NzHdXP8ZmNo7N4.run(Unknown Source:4)\r\n                                                                                                    \tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1137)\r\n                                                                                                    \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:637)\r\n                                                                                                    \tat java.lang.Thread.run(Thread.java:1012)\r\n                                                                                                    Caused by: java.lang.NoClassDefFoundError: Failed resolution of: Ljavax/xml/stream/XMLStreamReader;\r\n                                                                                                    \tat org.apache.xmlbeans.XmlBeans.buildStreamToNodeMethod(XmlBeans.java:251)\r\n                                                                                                    \tat org.apache.xmlbeans.XmlBeans.<clinit>(XmlBeans.java:138)\r\n                                                                                                    \tat org.apache.xmlbeans.XmlBeans.typeLoaderForClassLoader(XmlBeans.java:719)\r\n                                                                                                    \tat org.openxmlformats.schemas.spreadsheetml.x2006.main.CTWorkbook$Factory.getTypeLoader(Unknown Source:23)\r\n                                                                                                    \tat org.openxmlformats.schemas.spreadsheetml.x2006.main.CTWorkbook$Factory.newInstance(Unknown Source:0)\r\n                                                                                                    \tat org.apache.poi.xssf.usermodel.XSSFWorkbook.onWorkbookCreate(XSSFWorkbook.java:462)\r\n                                                                                                    \tat org.apache.poi.xssf.usermodel.XSSFWorkbook.<init>(XSSFWorkbook.java:265)\r\n                                                                                                    \tat org.apache.poi.xssf.usermodel.XSSFWorkbook.<init>(XSSFWorkbook.java:259)\r\n                                                                                                    \tat org.apache.poi.xssf.usermodel.XSSFWorkbook.<init>(XSSFWorkbook.java:247)\r\n                                                                                                    \tat org.apache.poi.xssf.streaming.SXSSFWorkbook.<init>(SXSSFWorkbook.java:241)\r\n                                                                                                    \tat org.apache.poi.xssf.streaming.SXSSFWorkbook.<init>(SXSSFWorkbook.java:211)\r\n                                                                                                    \tat org.apache.poi.xssf.streaming.SXSSFWorkbook.<init>(SXSSFWorkbook.java:186)\r\n                                                                                                    \tat org.apache.poi.xssf.streaming.SXSSFWorkbook.<init>(SXSSFWorkbook.java:161)\r\n                                                                                                    \tat org.apache.poi.xssf.streaming.SXSSFWorkbook.<init>(SXSSFWorkbook.java:122)\r\n                                                                                                    \tat com.alibaba.excel.util.WorkBookUtil.createWorkBook(WorkBookUtil.java:48)\r\n                                                                                                    \tat com.alibaba.excel.context.WriteContextImpl.<init>(WriteContextImpl.java:96)\r\n                                                                                                    \tat com.alibaba.excel.write.ExcelBuilderImpl.<init>(ExcelBuilderImpl.java:36)\r\n                                                                                                    \tat com.alibaba.excel.ExcelWriter.<init>(ExcelWriter.java:36) \r\n                                                                                                    \tat com.alibaba.excel.write.builder.ExcelWriterBuilder.build(ExcelWriterBuilder.java:114) \r\n                                                                                                    \tat com.alibaba.excel.write.builder.ExcelWriterBuilder.sheet(ExcelWriterBuilder.java:130) \r\n                                                                                                    \tat com.alibaba.excel.write.builder.ExcelWriterBuilder.sheet(ExcelWriterBuilder.java:126) \r\n                                                                                                    \tat com.hbmcc.zl.ui.module.publicList.type.capacity.CapacityAutoOptimizationLifecycle.lambda$outPutCsv$4$CapacityAutoOptimizationLifecycle(CapacityAutoOptimizationLifecycle.java:442) \r\n                                                                                                    \tat com.hbmcc.zl.ui.module.publicList.type.capacity.-$$Lambda$CapacityAutoOptimizationLifecycle$SnZ_BLivfeKM_NzHdXP8ZmNo7N4.run(Unknown Source:4) \r\n                                                                                                    \tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1137) \r\n                                                                                                    \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:637) \r\n                                                                                                    \tat java.lang.Thread.run(Thread.java:1012) \r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3690/comments",
    "author": "zengli199447",
    "comments": [
      {
        "user": "psxjoy",
        "created_at": "2024-07-03T02:24:55Z",
        "body": "看上去似乎是项目依赖的jar包冲突，目前是否是否解决了呢？ @zengli199447 \r\n如果仍需要协助的话，请提供demo。"
      },
      {
        "user": "psxjoy",
        "created_at": "2024-07-05T09:26:20Z",
        "body": "不知道您是否已经解决该问题？我们先暂时关闭这个问题，如果还存在问题请重新Reopen这个issue."
      }
    ]
  },
  {
    "number": 3680,
    "title": "能支持excel里面的数据-组合功能吗",
    "created_at": "2024-01-26T08:08:51Z",
    "closed_at": "2024-07-31T01:17:30Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3680",
    "body": "目前我是使用的模板导出，想实现excel里面的多行组合，可以折叠展开的功能，请问有人用过没，easy-excel可以实现不",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3680/comments",
    "author": "ppppppcl",
    "comments": [
      {
        "user": "gongxuanzhang",
        "created_at": "2024-07-19T06:17:09Z",
        "body": "你好，我们发现此Issue已经超过三个月没有活动了，为了更好的帮助您解决问题，我们将在两周后关闭此Issue，如果您仍然有问题，请在两周内内回复此Issue，谢谢！如果您已经解决或者不需要帮助，请忽略此消息。"
      }
    ]
  },
  {
    "number": 3659,
    "title": "可以在 python 中调用吗？如何调用",
    "created_at": "2024-01-19T01:38:00Z",
    "closed_at": "2024-07-31T01:17:32Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3659",
    "body": "开发语言是 python，导出 excel 慢且费内存，想在 python 中使用这个包",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3659/comments",
    "author": "wonb168",
    "comments": [
      {
        "user": "murainwood",
        "created_at": "2024-01-19T05:43:27Z",
        "body": "java写，打出个jar，然后写个shell脚本，python调用呗"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2024-07-19T06:17:13Z",
        "body": "你好，我们发现此Issue已经超过三个月没有活动了，为了更好的帮助您解决问题，我们将在两周后关闭此Issue，如果您仍然有问题，请在两周内内回复此Issue，谢谢！如果您已经解决或者不需要帮助，请忽略此消息。"
      }
    ]
  },
  {
    "number": 3653,
    "title": "读文件 一个sheet里面连续多行是空数据行 ",
    "created_at": "2024-01-17T03:53:58Z",
    "closed_at": "2024-07-23T04:19:04Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3653",
    "body": "# 异常代码\r\n```java\r\n \r\n# 问题描述\r\n 我自定义了一个listener  extends  AnalysisEventListener  \r\n  在invoke 方法里面做了一个空行计数器，超过指定行数  设置 analysisContext.readWorkbookHolder().setIgnoreEmptyRow(false)\r\n  执行还是读取到空行之后的数据\r\n\r\n  发现在DefaultAnalysisEventProcessor 的 endRow 已经做的 EMPTY 判断，不能执行invoke 的空行计数器的逻辑\r\n\r\n文件：xlsx 类型   文件中有30行 ，中间10行 一整行没有数据\r\n\r\n期望：达到指定空行数就结束文件读取 ，只读取前10行\r\n\r\n  \r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3653/comments",
    "author": "Mr-4567",
    "comments": [
      {
        "user": "gongxuanzhang",
        "created_at": "2024-07-19T06:17:15Z",
        "body": "你好，我们发现此Issue已经超过三个月没有活动了，为了更好的帮助您解决问题，我们将在两周后关闭此Issue，如果您仍然有问题，请在两周内内回复此Issue，谢谢！如果您已经解决或者不需要帮助，请忽略此消息。"
      }
    ]
  },
  {
    "number": 3647,
    "title": "一个单元格里导出多张图片，图片之间用指定字符隔开",
    "created_at": "2024-01-10T02:58:13Z",
    "closed_at": "2024-07-31T01:17:34Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3647",
    "body": "例如一个cell中：\r\na：image b：image c:image",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3647/comments",
    "author": "OrangeeeC",
    "comments": [
      {
        "user": "gongxuanzhang",
        "created_at": "2024-07-19T06:17:17Z",
        "body": "你好，我们发现此Issue已经超过三个月没有活动了，为了更好的帮助您解决问题，我们将在两周后关闭此Issue，如果您仍然有问题，请在两周内内回复此Issue，谢谢！如果您已经解决或者不需要帮助，请忽略此消息。"
      }
    ]
  },
  {
    "number": 3629,
    "title": "多sheet表的自定义拦截器如何在加载数据之后生效？",
    "created_at": "2023-12-27T10:19:51Z",
    "closed_at": "2024-01-10T02:17:36Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3629",
    "body": "# 异常代码\r\n```java\r\n  WriteSheet writeSheet = EasyExcel.writerSheet(i++,type.getTypeName())\r\n                        .relativeHeadRowIndex(4)\r\n                        .registerWriteHandler(new inventorySheetWriteHandler())\r\n                        .registerWriteHandler(myMergeStrategy)\r\n                        .registerWriteHandler(myMergeStrategy1)\r\n                        .registerWriteHandler(myMergeStrategy2)\r\n                        .build();\r\n\r\n                excelWriter.write(inventoryList,writeSheet);\r\n```\r\n# 异常提示\r\n无异常，需求帮助\r\n# 问题描述\r\n因为是先加的拦截器再放入的数据，导致表尾样式设置不了；请求帮助，直接dowrite的话只有一个sheet表\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3629/comments",
    "author": "lmx0106",
    "comments": [
      {
        "user": "LSL1618",
        "created_at": "2023-12-28T01:30:33Z",
        "body": "如果自定义的拦截器是多个sheet共用，试试把registerWriteHandler()移到创建excelWriter那一步。"
      },
      {
        "user": "lmx0106",
        "created_at": "2023-12-28T01:40:24Z",
        "body": "拦截器里设置了表尾样式，未填充数据前表尾样式设置不了；"
      },
      {
        "user": "LSL1618",
        "created_at": "2023-12-28T06:51:08Z",
        "body": "> 拦截器里设置了表尾样式，未填充数据前表尾样式设置不了；\r\n\r\n就是说需要填充完数据之后，再调用拦截器去处理表尾样式。估计需要二次读取才能处理表尾样式。"
      },
      {
        "user": "lmx0106",
        "created_at": "2023-12-28T06:54:37Z",
        "body": "如何实现填充完数据再调取拦截器，大佬能发个demo吗？"
      },
      {
        "user": "LSL1618",
        "created_at": "2023-12-28T07:22:44Z",
        "body": "> 如何实现填充完数据再调取拦截器，大佬能发个demo吗？\r\n\r\n好像也不用二次读取，拦截器接口有好几个方法的，你实现的是哪个方法？如果你能在拦截器中判断是否最后一行的最后一个单元格，就说明数据填充完了，当前行就是表尾行，就可以设置你需要的样式。"
      },
      {
        "user": "lmx0106",
        "created_at": "2023-12-28T07:26:43Z",
        "body": "public class inventorySheetWriteHandler implements SheetWriteHandler {\r\n\r\n    @Override\r\n    public void afterSheetCreate(WriteWorkbookHolder writeWorkbookHolder, WriteSheetHolder writeSheetHolder) {\r\n        Workbook workbook = writeWorkbookHolder.getWorkbook();\r\n        Sheet sheet = writeSheetHolder.getSheet();\r\n//        Sheet sheet = workbook.getSheetAt(writeSheetHolder.getSheetNo());\r\n//        Sheet sheet = workbook.getSheetAt(0);\r\n\r\n        // 样式设计\r\n        CellStyle cellStyle2 = workbook.createCellStyle();\r\n        cellStyle2.setVerticalAlignment(VerticalAlignment.CENTER);\r\n        cellStyle2.setAlignment(HorizontalAlignment.CENTER);\r\n\r\n        Font font2 = workbook.createFont();\r\n        font2.setFontHeight((short) 220);\r\n        font2.setFontName(\"仿宋体\");\r\n\r\n        cellStyle2.setFont(font2);\r\n"
      },
      {
        "user": "LSL1618",
        "created_at": "2023-12-28T07:29:19Z",
        "body": "@lmx0106 你试试实现这个方法`afterCellDispose()`去处理。"
      }
    ]
  },
  {
    "number": 3606,
    "title": "现在如何获取以前的cellData数据？",
    "created_at": "2023-12-15T02:24:50Z",
    "closed_at": "2024-07-31T01:17:38Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3606",
    "body": "现在使用的版本是：3.3.1\r\n以前的analysisContext.readRowHolder().getCellData();     和   Cell.getValue();目前版本都无法使用\r\n\r\n当前想获取每个单元格是数据做处理，需要根据什么API操作呢？",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3606/comments",
    "author": "cold1010",
    "comments": [
      {
        "user": "gongxuanzhang",
        "created_at": "2024-07-19T06:17:25Z",
        "body": "你好，我们发现此Issue已经超过三个月没有活动了，为了更好的帮助您解决问题，我们将在两周后关闭此Issue，如果您仍然有问题，请在两周内内回复此Issue，谢谢！如果您已经解决或者不需要帮助，请忽略此消息。"
      }
    ]
  },
  {
    "number": 3600,
    "title": "Excel中使用含日期的公式，读取值有错误",
    "created_at": "2023-12-07T07:42:57Z",
    "closed_at": "2024-07-31T01:17:41Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3600",
    "body": "# 问题描述\r\nExcel文件中使用了含日期的计算公式。 如  =TODAY()  ，=TODAY()-E2  （E2 为另外一个日期数据）\r\n\r\n=TODAY() 读取的值最终是 1899-12-30\r\n=TODAY()-E2 最终读取值比实际少 22\r\n\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3600/comments",
    "author": "SoloHuang",
    "comments": [
      {
        "user": "gongxuanzhang",
        "created_at": "2024-07-19T06:17:28Z",
        "body": "你好，我们发现此Issue已经超过三个月没有活动了，为了更好的帮助您解决问题，我们将在两周后关闭此Issue，如果您仍然有问题，请在两周内内回复此Issue，谢谢！如果您已经解决或者不需要帮助，请忽略此消息。"
      }
    ]
  },
  {
    "number": 3596,
    "title": "请问，如果head，content都是List<List<String>>如何统一设置列宽",
    "created_at": "2023-12-06T01:46:19Z",
    "closed_at": "2024-07-31T01:17:41Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3596",
    "body": "请问，如果head，content都是List<List<String>>如何统一设置列宽",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3596/comments",
    "author": "jiayuliang1314",
    "comments": [
      {
        "user": "LSL1618",
        "created_at": "2023-12-25T03:18:04Z",
        "body": "列宽用这个专用策略类`SimpleColumnWidthStyleStrategy`，行高用这个专用策略类`SimpleRowHeightStyleStrategy`，记得要注册策略类实例`EasyExcel.registerWriteHandler()`，支持重复调用注册多个实例。"
      },
      {
        "user": "userwusir",
        "created_at": "2024-01-18T06:17:38Z",
        "body": "设置首行固定高度，首列指定宽度，剩余列固定列宽\r\n\r\n```java\r\n.registerWriteHandler(new AbstractColumnWidthStyleStrategy() {\r\n                    @Override\r\n                    protected void setColumnWidth(WriteSheetHolder writeSheetHolder, List<WriteCellData<?>> cellDataList, Cell cell, Head head, Integer relativeRowIndex, Boolean isHead) {\r\n                       if (isHead) {\r\n                            writeSheetHolder.getSheet().getRow(0).setHeight((short) 700);\r\n                        }\r\n                        if (cell.getColumnIndex() == 0) {\r\n                            writeSheetHolder.getSheet().setColumnWidth(0, 7 * 256);\r\n                        } else {\r\n                            writeSheetHolder.getSheet().setDefaultColumnWidth(18);\r\n                        }\r\n                    }\r\n                })\r\n```"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2024-07-19T06:17:29Z",
        "body": "你好，我们发现此Issue已经超过三个月没有活动了，为了更好的帮助您解决问题，我们将在两周后关闭此Issue，如果您仍然有问题，请在两周内内回复此Issue，谢谢！如果您已经解决或者不需要帮助，请忽略此消息。"
      }
    ]
  },
  {
    "number": 3592,
    "title": "写入Excel时，Excel超过100行时，开始行的数据会被覆盖掉",
    "created_at": "2023-12-04T01:11:55Z",
    "closed_at": "2024-07-31T01:17:43Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3592",
    "body": "\r\n内存中限制行数为100，当行号到达101时，行号为0的记录刷新到硬盘并从内存中删除，当行号到达102时，行号为1的记录刷新到硬盘，并从内存中删除，以此类推。怎么奖这个自定义这个内存行数限制，比如我想要在内存中存10000条数据.\r\n内存限制为100，当在合并策略中设置样式时，只能设置最后一百行的样式",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3592/comments",
    "author": "HelloljfO",
    "comments": [
      {
        "user": "gongxuanzhang",
        "created_at": "2024-07-19T06:17:30Z",
        "body": "你好，我们发现此Issue已经超过三个月没有活动了，为了更好的帮助您解决问题，我们将在两周后关闭此Issue，如果您仍然有问题，请在两周内内回复此Issue，谢谢！如果您已经解决或者不需要帮助，请忽略此消息。"
      }
    ]
  },
  {
    "number": 3587,
    "title": "导出数据设置head，会出现多行head",
    "created_at": "2023-11-30T02:21:32Z",
    "closed_at": "2023-12-01T02:04:30Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3587",
    "body": "# 异常代码\r\n```java\r\nWriteSheet writeSheet = EasyExcelFactory.writerSheet().build();\r\n// writeSheet.setHead(head);\r\nWriteWorkBook writeWorkBook = new WriteWorkBook();\r\nwriteWorkBook.setExcelType(ExcelTypeEnum.CSV);\r\nwriteWorkBook.setOutputStream(httpServletResponse.getOutputStream());\r\nwriteWorkBook.setNeedHead(true);\r\nwriteWorkBook.setHead(head);\r\nwriteWorkBook.setAutoCloseStream(false);\r\nExcelWriter excelWriter = new ExcelWriter(writeWorkBook);\r\nExcelWriterTableBuilder excelWriterTableBuilder = new ExcelWriterTableBuilder(excelWriter,writeSheet);\r\nexcelWriterTableBuilder.doWrite(data); \r\n```\r\n# 问题描述\r\nwriteSheet或者writeWorkBook设置 head，都会导致导出的数据出现两行head \r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3587/comments",
    "author": "guochaolinGit",
    "comments": [
      {
        "user": "chlch",
        "created_at": "2023-11-30T06:44:51Z",
        "body": "参考文档api来设置头吧"
      },
      {
        "user": "guochaolinGit",
        "created_at": "2023-11-30T08:11:04Z",
        "body": "导出csv文件，还有其他方式吗，这个方式我看设置head只有在这两个位置设置"
      },
      {
        "user": "chlch",
        "created_at": "2023-11-30T08:20:36Z",
        "body": "参考com.alibaba.easyexcel.test.demo.web.WebTest, 导出文件名后缀改成csv"
      },
      {
        "user": "guochaolinGit",
        "created_at": "2023-12-01T02:04:30Z",
        "body": "谢谢"
      }
    ]
  },
  {
    "number": 3585,
    "title": "easyexcel如何指定从第几行插入数据呢",
    "created_at": "2023-11-29T11:38:59Z",
    "closed_at": "2024-07-31T01:17:44Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3585",
    "body": "现在碰到一种情况，会从一个已存在的excel中写入数据，原来的excel有数据，现在有一些难点就是，不知道如何从这些原始数据的下面写入表头和数据。比如原始数据占了第一行，表头就插入第二行，从第二行开始。\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3585/comments",
    "author": "lnzilia",
    "comments": [
      {
        "user": "chlch",
        "created_at": "2023-11-30T06:47:24Z",
        "body": "这个属于自定义写数据了，可以利用其中的拦截器，比如你插入的数据你知道第二行是新的表头，就新设置样式"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2024-07-19T06:17:31Z",
        "body": "你好，我们发现此Issue已经超过三个月没有活动了，为了更好的帮助您解决问题，我们将在两周后关闭此Issue，如果您仍然有问题，请在两周内内回复此Issue，谢谢！如果您已经解决或者不需要帮助，请忽略此消息。"
      }
    ]
  },
  {
    "number": 3550,
    "title": "多线程同时进行多表的导出是不支持的吗？",
    "created_at": "2023-11-09T03:57:48Z",
    "closed_at": "2023-11-22T13:04:52Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3550",
    "body": "之前在使用poi写500W数据到EXCEL的时候，用多线程分多个表导出可以大幅优化导出的时间，从79秒能到47秒。\r\n同时我注意到了EasyExcel不支持单个文件的并发写入、读取。所以我放弃了 多线程 写单个Excel表的多个Sheet ，想试试多个线程，一个线程只负责一个Excel表的写出，结果还是不行，本来应该有3个Excel表，最终只得到一个，而且还是损坏的。\r\n所以，对于百万数据写入Excel的正确使用方式，就是单线程使用 分批查询，多次重复写入，判断一个Sheet达到100W行，则写下一个Shhet吗？\r\n ",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3550/comments",
    "author": "evelynn996",
    "comments": [
      {
        "user": "hotdogc1017",
        "created_at": "2023-11-22T08:13:57Z",
        "body": "不支持多线程写入#3020"
      },
      {
        "user": "evelynn996",
        "created_at": "2023-11-22T13:04:52Z",
        "body": "> 不支持多线程写入#3020\r\n\r\n好的，感谢回复"
      }
    ]
  },
  {
    "number": 3537,
    "title": "多sheet页读取的时候，想要每个sheet读100行就读下一个sheet页",
    "created_at": "2023-11-03T03:09:13Z",
    "closed_at": "2024-07-31T01:17:50Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3537",
    "body": "我的中断用过几种方式\r\n第一种：\r\nif (preView && dataList.size() >= limitRowSize) {\r\n    throw new ExcelAnalysisException(this.limitRowSize + \"行\" + this.limitRowSize + \"列读取完成\");\r\n}\r\n第二种：\r\n重写了hasNext方法，行数大于的时候返回false\r\n\r\n以上两种方式均会导致，如果当前sheet页数据超出limit之后会中止读取，没法到下一个sheet读取",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3537/comments",
    "author": "zerlynn",
    "comments": [
      {
        "user": "zhoujun001",
        "created_at": "2023-11-20T08:29:39Z",
        "body": "使用hasNext=false 好像会使得doAfterAllAnalysed方法不会被执行"
      },
      {
        "user": "zerlynn",
        "created_at": "2023-11-20T09:19:17Z",
        "body": "> 使用hasNext=false 好像会使得doAfterAllAnalysed方法不会被执行\r\n\r\n是的，我这样也不行analysisContext.analysisEventProcessor().endSheet(analysisContext); 这样会执行doAfterAllAnalysed，但是后续的sheet页也会停止读取了"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2024-07-19T06:17:42Z",
        "body": "你好，我们发现此Issue已经超过三个月没有活动了，为了更好的帮助您解决问题，我们将在两周后关闭此Issue，如果您仍然有问题，请在两周内内回复此Issue，谢谢！如果您已经解决或者不需要帮助，请忽略此消息。"
      }
    ]
  },
  {
    "number": 3522,
    "title": "在导出一个动态excel的时候出现了一些奇怪的现象",
    "created_at": "2023-10-25T10:31:48Z",
    "closed_at": "2024-07-31T01:17:53Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3522",
    "body": "# 异常代码\r\n```java\r\npublic void exportTemplateList(String name, HttpServletResponse response) {\r\n        try {\r\n            //设置响应头\r\n            response.setContentType(\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\");\r\n            response.setCharacterEncoding(\"utf-8\");\r\n            //这里URLEncoder.encode可以防止中文乱码 当然和easyexcel没有关系\r\n            String fileName = URLEncoder.encode(name, \"UTF-8\").replaceAll(\"\\\\+\", \"%20\");\r\n            response.setHeader(\"Content-disposition\", \"attachment;filename*=utf-8''\" + fileName + \".xlsx\");\r\n            ExcelWriter build = EasyExcel.write(response.getOutputStream()).build();\r\n            List<List<String>> tips = new ArrayList<>();\r\n            String tip = \"模板的第二行请勿修改和删除！从第三行开始填写计划信息。\\n\" +\r\n                    \"\\n\" +\r\n                    \"填写须知：\\n\" +\r\n                    \"1、单个Sheet表内最多支持导入5条数据；\\n\" +\r\n                    \"2、Sheet表名称与表头字段为系统自动生成禁止删除或修改，将需要导入的数据顺序向下填写即可\\n\" +\r\n                    \"3、*号为必填项，内容为多选时请用逗号隔开；\\n\" +\r\n                    \"4、如果是从其它渠道中复制的信息，请先复制到记事本中清除表格格式，然后再粘贴到模板中；\";\r\n            tips.add(Lists.newArrayList(tip));\r\n            WriteCellStyle contentWriteCellStyle = new WriteCellStyle();\r\n            contentWriteCellStyle.setWrapped(true);\r\n            //字体红色\r\n            WriteFont writeFont = new WriteFont();\r\n            //设置字体\r\n            writeFont.setColor(Font.COLOR_RED);\r\n            contentWriteCellStyle.setWriteFont(writeFont);\r\n            //第一行策略\r\n            HorizontalCellStyleStrategy horizontalCellStyleStrategy = new HorizontalCellStyleStrategy(null, contentWriteCellStyle);\r\n\r\n            TemplateDTO templateDTO = new TemplateDTO();\r\n            //第N个sheet\r\n            WriteSheet writeSheet = EasyExcel.writerSheet(0, templateDTO.getName()).needHead(Boolean.FALSE).build();\r\n            //第N个sheet的第一行\r\n            OnceAbsoluteMergeStrategy onceAbsoluteMergeStrategy = new OnceAbsoluteMergeStrategy(0, 0, 0, templateDTO.getElementList().size() - 1);\r\n            //设置第一行：固定行红色字体，合并0-模板N列\r\n            WriteTable writeTable0 = EasyExcel.writerTable(0).needHead(Boolean.FALSE).registerWriteHandler(horizontalCellStyleStrategy).registerWriteHandler(onceAbsoluteMergeStrategy).build();\r\n\r\n            List<String> titleList = new ArrayList<>();\r\n            for (TemplateDTO.Element element : templateDTO.getElementList()) {\r\n                //循环设置第二行表头\r\n                titleList.add(element.getTitle());\r\n            }\r\n            List<List<String>> head = new ArrayList<>();\r\n            head.add(titleList);\r\n            //输出第一行固定表头\r\n            build.write(tips, writeSheet, writeTable0);\r\n            WriteTable writeTableRow = EasyExcel.writerTable(0).needHead(Boolean.FALSE).build();\r\n            //输出第二行动态表头\r\n            build.write(head, writeSheet, writeTableRow);\r\n            build.finish();\r\n        }catch (IOException e){\r\n            log.error(\"下载导入模板文件异常\", e);\r\n        }\r\n    }\r\n```\r\n# 异常提示\r\n无\r\n# 问题描述\r\n需求本意是要输出一个excel，第一行为固定文本行，红色字体，行高加高，合并第0列至第二行表头第N列，第二列为动态表头行，表头数量不固定。\r\n整体思路为：\r\n1、创建一个WriteTable为第一行固定行，设置其writeHandler策略为红色字体、合并列。\r\n2、创建一个WriteTable为第二行动态表头行，按默认设置走，黑色字体\r\n3、ExcelWriter.writer输出第一行，第二行\r\n按逻辑来讲，第一行设置了策略，但第二行没有设置策略，输出的样式应该是第一红色字段、合并单元格，第二行默认黑色字体，但实际效果是第一行和第二行都为红色字体\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3522/comments",
    "author": "zhaoqiang1024",
    "comments": [
      {
        "user": "zhaoqiang1024",
        "created_at": "2023-10-26T08:55:02Z",
        "body": "补充一下，版本3.1.1"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2024-07-19T06:17:49Z",
        "body": "你好，我们发现此Issue已经超过三个月没有活动了，为了更好的帮助您解决问题，我们将在两周后关闭此Issue，如果您仍然有问题，请在两周内内回复此Issue，谢谢！如果您已经解决或者不需要帮助，请忽略此消息。"
      }
    ]
  },
  {
    "number": 3511,
    "title": "导出Excel时指定列数据为空时显示横杠（-）",
    "created_at": "2023-10-20T03:22:15Z",
    "closed_at": "2024-07-03T02:16:07Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3511",
    "body": "问题描述：\r\n导出excel时部分列中的数据值为空默认显示空，现在想为空时显示“-”。应该怎么配置？\r\n\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3511/comments",
    "author": "haiwang2517",
    "comments": [
      {
        "user": "DaZuiZui",
        "created_at": "2023-10-23T02:41:35Z",
        "body": "## 您的需求\r\n\r\n处理数据，将空数据替换为\"-\"\r\n\r\n## 我的想法\r\n\r\n您好我没有想到更好的解决方案，我的解决方案如下\r\n\r\n## code\r\n\r\n~~~java\r\n// 处理数据，将空数据替换为\"-\"\r\nfor (Data1 data : DataList) {\r\n    if (data.getColumn() == null || data.getColumn().isEmpty()) {\r\n        data.setColumn(\"-\");\r\n    }\r\n}\r\n\r\nExcelWriter excelWriter = EasyExcel.write(outputStream, YourDataClass.class).build();\r\n\r\nexcelWriter.write(yourDataList, EasyExcel.writerSheet(\"Sheet1\").head(YourDataClass.class).build());\r\n\r\nexcelWriter.finish();\r\n~~~\r\n\r\n"
      },
      {
        "user": "psxjoy",
        "created_at": "2024-07-03T02:16:07Z",
        "body": "不知道您是否已经解决该问题？我们先暂时关闭这个问题，如果还存在问题请重新Reopen这个issue."
      }
    ]
  },
  {
    "number": 3510,
    "title": "easyexcel使用registerWriteHandler方法自定义单元格样式不生效",
    "created_at": "2023-10-20T01:57:32Z",
    "closed_at": "2024-05-21T07:51:17Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3510",
    "body": "如下面的代码片段所示，我使用了EasyExcel.write(excelFilePath, Person.class)来设置表头后，再通过registerWriteHandler方法自定义单元格样式（增加了单元格边框线），此时自定义样式好像会被easyexcel中设置表头的方法所覆盖，变成默认的样式（没有单元格边框线）。如果不设置表头，而是直接用EasyExcel.write(excelFilePath)，则自定义样式是可以生效的。现在我想要用EasyExcel.write(excelFilePath, Person.class)来设置表头，又想让自定义样式生效。看有没有解决方法，在此求助各位大神，感激不尽。\r\n```\r\npublic static void writeExcel(){\r\n        // 指定输出的Excel文件路径\r\n\tString excelFilePath = \"d:/example-write.xlsx\";\r\n\r\n        // 设置要输出的数据内容\r\n\tList<Person> personList = new ArrayList<>();\r\n\tpersonList.add(new Person(\"a01\", \"张三\", \"男\",10));\r\n\tpersonList.add(new Person(\"a02\", \"李四\", \"男\",20));\r\n\tpersonList.add(new Person(\"a03\", \"王五\", \"女\",30));\r\n\r\n        // 将数据内容写入到excel文件\r\n\tEasyExcel.write(excelFilePath, Person.class)\r\n\t\t.registerWriteHandler(new CellWriteHandler(){\r\n\t\t\t@Override\r\n\t\t\tpublic void afterCellCreate(WriteSheetHolder writeSheetHolder, WriteTableHolder writeTableHolder, Cell cell, Head head, Integer relativeRowIndex, Boolean isHead) {\r\n\t\t\t\t// 设置单元格边框\r\n\t\t\t\tWorkbook workbook = writeSheetHolder.getSheet().getWorkbook();\r\n\t\t\t\tCellStyle cellStyle = workbook.createCellStyle();\r\n\t\t\t\tcellStyle.setBorderTop(BorderStyle.THIN);\r\n\t\t\t\tcellStyle.setBorderBottom(BorderStyle.THIN);\r\n\t\t\t\tcellStyle.setBorderLeft(BorderStyle.THIN);\r\n\t\t\t\tcellStyle.setBorderRight(BorderStyle.THIN);\r\n\r\n\t\t\t\t// 设置标题字体和背景色\r\n\t\t\t\tif (cell.getRowIndex() == 0) {\r\n\t\t\t\t\tFont font = workbook.createFont();\r\n\t\t\t\t\tfont.setBold(true);\r\n\t\t\t\t\tcellStyle.setFont(font);\r\n\t\t\t\t\tcellStyle.setFillForegroundColor(IndexedColors.GREY_25_PERCENT.getIndex());\r\n\t\t\t\t\tcellStyle.setFillPattern(FillPatternType.SOLID_FOREGROUND);\r\n\t\t\t\t}\r\n\t\t\t\tcell.setCellStyle(cellStyle);\r\n\t\t\t}\r\n\t\t})\r\n\t\t.sheet(\"Sheet1\")\r\n\t\t.doWrite(personList);\r\n\t}\r\n```\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3510/comments",
    "author": "yesqcy",
    "comments": [
      {
        "user": "DaZuiZui",
        "created_at": "2023-10-23T02:48:28Z",
        "body": "# Fix 3510 easyexcel使用registerWriteHandler方法自定义单元格样式不生效\r\n\r\n## 您的需求\r\n\r\n使用了EasyExcel.write(excelFilePath, Person.class)来设置表头后，再通过registerWriteHandler方法自定义单元格样式（增加了单元格边框线），此时自定义样式好像会被easyexcel中设置表头的方法所覆盖，变成默认的样式（没有单元格边框线），想要不被覆盖。\r\n\r\n## 我的想法\r\n\r\n你代码中发现一个小问题：在`afterCellCreate`方法中设置单元格样式之后，你需要调用`cell.setCellStyle(cellStyle)` 来将样式应用到单元格。你的代码缺少这一步。\r\n\r\n## code\r\n\r\n~~~java\r\npackage com.example.easyexcelisusse.issue3511;\r\n\r\nimport com.alibaba.excel.EasyExcel;\r\nimport com.alibaba.excel.metadata.Head;\r\nimport com.alibaba.excel.write.handler.CellWriteHandler;\r\nimport com.alibaba.excel.write.metadata.holder.WriteSheetHolder;\r\nimport com.alibaba.excel.write.metadata.holder.WriteTableHolder;\r\nimport org.apache.poi.ss.usermodel.*;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        // 指定输出的Excel文件路径\r\n        String excelFilePath = \"example-write.xlsx\";\r\n\r\n        // 设置要输出的数据内容\r\n        List<Person> personList = new ArrayList<>();\r\n        personList.add(new Person(\"a01\", \"张三\", \"男\", 10));\r\n        personList.add(new Person(\"a02\", \"李四\", \"男\", 20));\r\n        personList.add(new Person(\"a03\", \"王五\", \"女\", 30));\r\n\r\n        // 将数据内容写入excel文件\r\n        EasyExcel.write(excelFilePath, Person.class)\r\n                .registerWriteHandler(new CellWriteHandler() {\r\n                    @Override\r\n                    public void afterCellCreate(WriteSheetHolder writeSheetHolder, WriteTableHolder writeTableHolder, Cell cell, Head head, Integer relativeRowIndex, Boolean isHead) {\r\n                        // 设置单元格边框\r\n                        Workbook workbook = writeSheetHolder.getSheet().getWorkbook();\r\n                        CellStyle cellStyle = workbook.createCellStyle();\r\n                        cellStyle.setBorderTop(BorderStyle.THIN);\r\n                        cellStyle.setBorderBottom(BorderStyle.THIN);\r\n                        cellStyle.setBorderLeft(BorderStyle.THIN);\r\n                        cellStyle.setBorderRight(BorderStyle.THIN);\r\n\r\n                        // 设置标题字体和背景色\r\n                        if (cell.getRowIndex() == 0) {\r\n                            Font font = workbook.createFont();\r\n                            font.setBold(true);\r\n                            cellStyle.setFont(font);\r\n                            cellStyle.setFillForegroundColor(IndexedColors.GREY_25_PERCENT.getIndex());\r\n                            cellStyle.setFillPattern(FillPatternType.SOLID_FOREGROUND);\r\n                        }\r\n                        cell.setCellStyle(cellStyle); // 设置单元格样式\r\n                    }\r\n                })\r\n                .sheet(\"Sheet1\")\r\n                .doWrite(personList);\r\n    }\r\n}\r\n\r\n~~~\r\n\r\n祝您生活愉快，工作顺利。\r\n\r\nI wish you a happy life and smmoth work"
      }
    ]
  },
  {
    "number": 3509,
    "title": "填充Excel匯出, 有方法可以1筆資料兩(多)行輸出",
    "created_at": "2023-10-19T16:52:12Z",
    "closed_at": "2024-07-31T01:17:56Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3509",
    "body": "如果使用 excelWriter.fill(new FillWrapper(\"a\", [object]), writeSheet) 方式, \r\n可否在 excel 中, 多行資料算1筆輸出?\r\n\r\nex: 以下資料為   [{A, A1},{B,B2},{C,C3}}..這樣\r\nEXCEL第1行:   A\r\nEXCEL第2行:   A1\r\nEXCEL第3行:   B\r\nEXCEL第4行:   B2\r\nEXCEL第5行:   C\r\nEXCEL第6行:   C3\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3509/comments",
    "author": "tatalo",
    "comments": [
      {
        "user": "beangou",
        "created_at": "2023-10-24T05:56:51Z",
        "body": "同样的需求"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2024-07-19T06:17:52Z",
        "body": "你好，我们发现此Issue已经超过三个月没有活动了，为了更好的帮助您解决问题，我们将在两周后关闭此Issue，如果您仍然有问题，请在两周内内回复此Issue，谢谢！如果您已经解决或者不需要帮助，请忽略此消息。"
      }
    ]
  },
  {
    "number": 3507,
    "title": "createHyperlink 设置超链接，如果是本地的相对路径，路径存在空格（比如某个pdf的名称），会出现URL的校验错误",
    "created_at": "2023-10-18T11:58:09Z",
    "closed_at": "2024-07-31T01:17:56Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3507",
    "body": "Caused by: java.net.URISyntaxException: Illegal character in path at index 13\r\n\r\nCaused by: java.net.URISyntaxException: Illegal character in path at index 13: xxxx//Brand Finance-2018物流25强品牌报告（英文版）-2018.3-10页.pdf\r\n\tat java.base/java.net.URI$Parser.fail(URI.java:2974)\r\n\tat java.base/java.net.URI$Parser.checkChars(URI.java:3145)\r\n\tat java.base/java.net.URI$Parser.parseHierarchical(URI.java:3227)\r\n\tat java.base/java.net.URI$Parser.parse(URI.java:3186)\r\n\tat java.base/java.net.URI.<init>(URI.java:623)\r\n\tat org.apache.poi.xssf.usermodel.XSSFHyperlink.validate(XSSFHyperlink.java:262)\r\n\t... 19 more",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3507/comments",
    "author": "bigbenz",
    "comments": [
      {
        "user": "DaZuiZui",
        "created_at": "2023-10-19T07:05:24Z",
        "body": "您好，请提供关键代码"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2024-07-19T06:17:53Z",
        "body": "你好，我们发现此Issue已经超过三个月没有活动了，为了更好的帮助您解决问题，我们将在两周后关闭此Issue，如果您仍然有问题，请在两周内内回复此Issue，谢谢！如果您已经解决或者不需要帮助，请忽略此消息。"
      }
    ]
  },
  {
    "number": 3504,
    "title": "模板填充单元格合并问题啥时候能解决丫？？？？",
    "created_at": "2023-10-17T09:21:40Z",
    "closed_at": "2024-07-31T01:17:57Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3504",
    "body": null,
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3504/comments",
    "author": "cugftp",
    "comments": [
      {
        "user": "gongxuanzhang",
        "created_at": "2024-07-19T06:17:54Z",
        "body": "你好，我们发现此Issue已经超过三个月没有活动了，为了更好的帮助您解决问题，我们将在两周后关闭此Issue，如果您仍然有问题，请在两周内内回复此Issue，谢谢！如果您已经解决或者不需要帮助，请忽略此消息。"
      }
    ]
  },
  {
    "number": 3490,
    "title": "如何分页读取Excel文件呢？",
    "created_at": "2023-10-08T09:41:16Z",
    "closed_at": "2023-10-08T10:01:45Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3490",
    "body": "# 问题描述\r\n使用文档中的不创建对象的读，读取一个大的Excel文件，实现类似分页列表一样的分页读取，比如先读取前100行数据，再次请求则读取下100行数据。",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3490/comments",
    "author": "geekerstar",
    "comments": [
      {
        "user": "geekerstar",
        "created_at": "2023-10-08T10:01:28Z",
        "body": "可以通过抛出异常实现：throw new ExcelAnalysisStopException();"
      },
      {
        "user": "Alexxiaochen",
        "created_at": "2023-10-25T09:02:36Z",
        "body": "您好，我是刚接触easyexcel，也遇到了和您相似的问题，请问您这里提出的通过抛出异常来实现分页读取的具体细节是什么呢？"
      }
    ]
  },
  {
    "number": 3480,
    "title": "对于单个枚举的处理可以通过自定义的转换器 如何全局处理？",
    "created_at": "2023-09-25T06:19:30Z",
    "closed_at": "2024-07-31T01:18:01Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3480",
    "body": "对于单个枚举的处理可以通过自定义的转换器 \r\n但是对于有很多都是枚举类型都需要做转换，不想通过注解的方式，有没有办法能够处理所有的枚举类型？所有的枚举都是一样取name属性",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3480/comments",
    "author": "kang91226",
    "comments": [
      {
        "user": "Crazy-x",
        "created_at": "2023-10-16T06:54:39Z",
        "body": "目前，全局注册和，注册处理器都不支持，我也在等，，，等哪个大佬来个PR"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2024-07-19T06:18:00Z",
        "body": "你好，我们发现此Issue已经超过三个月没有活动了，为了更好的帮助您解决问题，我们将在两周后关闭此Issue，如果您仍然有问题，请在两周内内回复此Issue，谢谢！如果您已经解决或者不需要帮助，请忽略此消息。"
      },
      {
        "user": "Farley-Chen",
        "created_at": "2024-09-21T04:01:20Z",
        "body": "我认为可以使用registerConverter方法进行注册转换器，然后进行简单点封装\r\n\r\n案例如下\r\n\r\n```java\r\nEasyExcel.write(response.getOutputStream())\r\n            .charset(StandardCharsets.UTF_8)\r\n            .head(WorkOrderDto.class)\r\n            .registerConverter(new LocalDateTimeConverter())\r\n            .sheet()\r\n            .doWrite(dtos);\r\n```"
      }
    ]
  },
  {
    "number": 3443,
    "title": "模板导出时如何删除模板行",
    "created_at": "2023-08-31T09:56:34Z",
    "closed_at": "2024-07-31T01:18:06Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3443",
    "body": "ExcelWriter excelWriter = EasyExcel.write(response.getOutputStream()). withTemplate(templateFileName).build()) \r\nexcelWriter 和writeSheet似乎无法修改excel内的数据，如何获取excel的sheet修改模板",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3443/comments",
    "author": "zhang-jie8",
    "comments": [
      {
        "user": "gongxuanzhang",
        "created_at": "2023-09-09T06:26:24Z",
        "body": "模板被视为是静态文件，不应该被修改，如果模板不支持你的需求应该重建。\r\n我猜测你这个可能是个XY问题，请提供原始需求"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2024-07-19T06:18:08Z",
        "body": "你好，我们发现此Issue已经超过三个月没有活动了，为了更好的帮助您解决问题，我们将在两周后关闭此Issue，如果您仍然有问题，请在两周内内回复此Issue，谢谢！如果您已经解决或者不需要帮助，请忽略此消息。"
      }
    ]
  },
  {
    "number": 3439,
    "title": "导出excel出错:Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; nested exception is java.lang.NumberFormatException: For input string: \\\"exportExcel\\\"\",",
    "created_at": "2023-08-29T14:05:09Z",
    "closed_at": "2023-08-31T12:52:53Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3439",
    "body": "导出excel时出错。我的代码如下:\r\n\r\n# 异常代码\r\n```java\r\ncontroller层\r\n\r\n\r\n    /**\r\n     * 导出Excel\r\n     *\r\n     * @param response\r\n     * @return\r\n     * @throws Exception\r\n     * @author\r\n     */\r\n\r\n    @PreAuthorize(\"@ss.hasPermi('system:config:excel')\")\r\n    @PostMapping(value = \"exportExcel\")\r\n    @Log(title = \"参数导出\", businessType = BusinessType.EXPORT)\r\n    public void exportExcel(\r\n           String where, Integer pageNum, Integer pageSize, String sort, String desc,\r\n    HttpServletResponse response) throws Exception {\r\n        // 这里注意 有同学反应使用swagger 会导致各种问题，请直接用浏览器或者用postman\r\n//        response.setContentType(\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\");\r\n        response.setCharacterEncoding(\"utf-8\");\r\n\r\n        String taleName = SysConfig.class.getSimpleName()+\"表\";\r\n        response.setContentType(\"application/vnd.ms-excel\");\r\n        response.setCharacterEncoding(\"utf-8\");\r\n        response.setHeader(\"Content-Disposition\", \"attachment; filename=\" + URLEncoder.encode(taleName, \"UTF-8\"));\r\n\r\n\r\n        QueryPagePara mQuery = QueryParaHelper.GenQuery(where, pageSize, pageNum, sort, desc);\r\n\r\n\r\n        IPage<SysConfig> configList = sysConfigService.getByPage(mQuery);\r\n //此时，能正常读数据\r\n        EasyExcel.write(response.getOutputStream(), SysConfig.class).sheet(taleName).doWrite(configList.getRecords());\r\n\r\n    }\r\n\r\n我的entity代码如下：\r\n\r\n\r\n/**\r\n * 参数配置表 sys_config\r\n */\r\n@Data\r\n@EqualsAndHashCode\r\n@ExcelIgnoreUnannotated\r\n@ApiModel(value = \"SysConfig对象\", description = \"系统配置表\")\r\npublic class SysConfig extends BaseEntity {\r\n    private static final long serialVersionUID = 1L;\r\n\r\n    /** 参数主键 */\r\n\r\n    /**\r\n     * 访问ID\r\n     */\r\n    @TableId(value = \"config_id\", type = IdType.AUTO)\r\n//     @ExcelProperty(\"配置id\")\r\n    private Long configId;\r\n\r\n    /**\r\n     * 参数名称\r\n     */\r\n\r\n    @ExcelProperty( \"配置名\")\r\n    @ApiModelProperty(\"配置名\")\r\n    private String configName;\r\n\r\n    /**\r\n     * 参数键名\r\n     */\r\n    @ExcelProperty( \"配置Key\")\r\n    @ApiModelProperty(\"配置Key\")\r\n    private String configKey;\r\n\r\n    /**\r\n     * 参数键值\r\n     */\r\n\r\n    @ExcelProperty( \"配置值\")\r\n    @ApiModelProperty(\"配置值\")\r\n    private String configValue;\r\n\r\n    /**\r\n     * 系统内置（Y是 N否）\r\n     */\r\n    @ExcelProperty( \"配置类型\")\r\n    @ApiModelProperty(\"配置类型\")\r\n    private String configType;\r\n\r\n}\r\n\r\n\r\n```\r\n# 异常提示\r\n我已经将easyexcel升级到最新的3.2版本（原来的是3.0.7)，仍然出错：\r\n\r\n```\r\nrg.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; nested exception is java.lang.NumberFormatException: For input string: \"exportExcel\"\r\n\tat org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:133)\r\n\tat org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:121)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:170)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:137)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1060)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:962)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:645)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:750)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat com.github.xiaoymin.knife4j.spring.filter.SecurityBasicAuthFilter.doFilter(SecurityBasicAuthFilter.java:98)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218)\r\n\tat org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)\r\n\tat org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)\r\n\tat org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)\r\n\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)\r\n\tat org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)\r\n\tat org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)\r\n\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)\r\n\tat org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)\r\n\tat org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)\r\n\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)\r\n\tat org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)\r\n\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)\r\n\tat org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)\r\n\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)\r\n\tat org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)\r\n\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)\r\n\tat com.iocollege.tinyframe.admin.security.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:51)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)\r\n\tat org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)\r\n\tat org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)\r\n\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)\r\n\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)\r\n\tat org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)\r\n\tat org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)\r\n\tat org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)\r\n\tat org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)\r\n\tat org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)\r\n\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)\r\n\tat org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)\r\n\tat org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)\r\n\tat org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)\r\n\tat org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)\r\n\tat org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.base/java.lang.Thread.run(Thread.java:833)\r\nCaused by: java.lang.NumberFormatException: For input string: \"exportExcel\"\r\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)\r\n\tat java.base/java.lang.Long.parseLong(Long.java:711)\r\n\tat java.base/java.lang.Long.valueOf(Long.java:1163)\r\n\tat org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:214)\r\n\tat org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)\r\n\tat org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)\r\n\tat org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)\r\n\tat org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)\r\n\tat org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)\r\n\tat org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)\r\n\tat org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:696)\r\n\tat org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:125)\r\n\t... 106 common frames omitted\r\n```\r\n# 问题描述//\r\n需要得到你的帮助！",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3439/comments",
    "author": "tms2003",
    "comments": [
      {
        "user": "youlingdada",
        "created_at": "2023-08-30T01:19:14Z",
        "body": "无法复现你出现的错误"
      },
      {
        "user": "tms2003",
        "created_at": "2023-08-31T12:52:50Z",
        "body": "> 无法复现你出现的错误\r\n\r\n重启系统就好了：《"
      }
    ]
  },
  {
    "number": 3433,
    "title": "Excel填充数据时，如何在所有数据都写入表格之后触发操作？",
    "created_at": "2023-08-26T11:40:50Z",
    "closed_at": "2024-07-31T01:18:07Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3433",
    "body": "EasyExcel 3.2.0 版本，填充；\r\n我想在所有数据都写入模板之后，进行某些操作，比如修改样式、加粗框线等，应该实现哪个接口？\r\n之前是实现WorkbookWriteHandler，重写public void afterWorkbookDispose(WriteWorkbookHolder writeWorkbookHolder)方法，但是效果不行",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3433/comments",
    "author": "SGYQ",
    "comments": [
      {
        "user": "zhangguixing",
        "created_at": "2023-08-31T05:30:06Z",
        "body": "我也有类似场景问题，我在处理合并单元格后，发现合并后的单元格在excel工具中公式计算时发现还是计算了合并前每个单元格的值，想尝试重写afterWorkbookDispose将其他单元格清空，发现获取到sheet的数据只有最后100行数据，总数据应有120行\r\n    \r\n    @Override\r\n    public void afterWorkbookDispose(WriteWorkbookHolder writeWorkbookHolder) {\r\n        Iterator<Sheet> sheetIterator = writeWorkbookHolder.getWorkbook().sheetIterator();\r\n        while (sheetIterator.hasNext()) {\r\n            Sheet sheet = sheetIterator.next();\r\n            List<CellRangeAddress> mergedRegions = sheet.getMergedRegions();\r\n            if (CollectionUtils.isEmpty(mergedRegions)) {\r\n                continue;\r\n            }\r\n            for (CellRangeAddress mergedRegion : mergedRegions) {\r\n                for (int ri = mergedRegion.getFirstRow(); ri <= mergedRegion.getLastRow(); ri++) {\r\n                    Row row = sheet.getRow(ri);\r\n                    for (int ci = mergedRegion.getFirstColumn(); ci <= mergedRegion.getLastColumn(); ci++) {\r\n                        // 保留左上角单元格值\r\n                        if (ri == mergedRegion.getFirstRow() && ci == mergedRegion.getFirstColumn()) {\r\n                            continue;\r\n                        }\r\n                        row.getCell(ci).setCellValue((String) null);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }"
      },
      {
        "user": "VinaChiong",
        "created_at": "2023-08-31T06:33:22Z",
        "body": "> \r\n\r\n试试设置 builder.inMemory(true)\r\n估计是因为默认用了 SXSSF API 的 SXSSFWorkbook，有个 DEFAULT_WINDOW_SIZE，默认值是100。"
      },
      {
        "user": "SGYQ",
        "created_at": "2023-09-05T05:36:57Z",
        "body": "@Override\r\npublic void afterWorkbookDispose(WriteWorkbookHolder writeWorkbookHolder) {\r\n    Workbook workbook = writeWorkbookHolder.getWorkbook();\r\n    Sheet sheet = workbook.getSheetAt(0);\r\n    CellStyle cellStyle = workbook.createCellStyle();\r\n    cellStyle.setBorderBottom(BorderStyle.THICK);\r\n\r\n    Integer lastRowIndex = rowIndexList.get(rowIndexList.size() - 1);\r\n    Row row = sheet.getRow(lastRowIndex);\r\n    for (int i = firstColumnIndex; i < lastColumnIndex; i++) {\r\n        Cell cell = row.getCell(i);\r\n        cell.setCellStyle(cellStyle);\r\n    }\r\n}\r\n发现获取的Row是空的 ，null"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2024-07-19T06:18:10Z",
        "body": "你好，我们发现此Issue已经超过三个月没有活动了，为了更好的帮助您解决问题，我们将在两周后关闭此Issue，如果您仍然有问题，请在两周内内回复此Issue，谢谢！如果您已经解决或者不需要帮助，请忽略此消息。"
      }
    ]
  },
  {
    "number": 3428,
    "title": "如何读取或写入指定单元格范围的内容",
    "created_at": "2023-08-25T02:40:41Z",
    "closed_at": "2023-09-09T06:32:27Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3428",
    "body": null,
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3428/comments",
    "author": "zxf1072329029",
    "comments": [
      {
        "user": "gongxuanzhang",
        "created_at": "2023-09-09T06:32:27Z",
        "body": "什么是\"指定单元格范围\"，是\"只读取前30行\" 这类的需求吗\r\n可以在自定义读取器中修改\r\nhasNext的逻辑\r\n\r\n```java\r\n\r\npublic class DemoDataListener implements ReadListener<DemoData> {\r\n\r\n  \r\n    private volatile boolean stop = false; \r\n    \r\n    @Override\r\n    public void invoke(DemoData data, AnalysisContext context) {\r\n        if(context.readRowHolder().getRowIndex() == 20){\r\n            stop = true;\r\n        }\r\n    }\r\n\r\n    boolean hasNext(AnalysisContext context) {\r\n        return !this.stop;\r\n    }\r\n    \r\n}\r\n\r\n```"
      },
      {
        "user": "zxf1072329029",
        "created_at": "2023-09-09T06:35:53Z",
        "body": "是指比如读取“A1:O21”范围内的单元格内容，或者将这部分内容复制到另外一个文件中"
      },
      {
        "user": "qmhc",
        "created_at": "2023-10-31T10:55:54Z",
        "body": "请问该问题为何被关闭？看样子这个问题并没有被解决。\r\n\r\n目前没有找到能够准确读取指定位置的单元格的方法（比如精确写入第2行第3列的单元格），不知道是否是我的遗漏？\r\n\r\n如果不是，能否添加这方面的支持？这在动态模版的读写之类的处理上将很有帮助。\r\n\r\n---\r\n\r\n看样子似乎可以重写 `CellWriteHandler` 的 `afterCellDispose` 方法实现，不知道是否为正解？"
      }
    ]
  },
  {
    "number": 3421,
    "title": "导出long类型数据精度缺失",
    "created_at": "2023-08-22T08:43:04Z",
    "closed_at": "2023-09-02T03:20:41Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3421",
    "body": "# 异常代码\r\n```java\r\npublic class ExportData {\r\n    @NumberFormat(value = \"#\")\r\n    private Long projectId;\r\n    ...\r\n}\r\n```\r\n# 异常提示\r\n# 问题描述\r\n预期导出结果：1689481454674870279\r\n实际导出结果：1689481454674870000\r\n版本：3.0.1\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3421/comments",
    "author": "on-create",
    "comments": [
      {
        "user": "Sean-214",
        "created_at": "2023-08-25T10:04:19Z",
        "body": "我是将 Long 类型以 String 导入到 Excel 解决的，`EasyExcel...registerConverter(new LongStringConverter())`。导入的时候会自动识别不需要配置。"
      },
      {
        "user": "chehongwei-git",
        "created_at": "2023-09-02T03:20:29Z",
        "body": "excel  数字类型超过 15 位会丢失精度，可以转换为 String 导出\r\n\r\n```java\r\n@Data\r\npublic class ExportData {\r\n    @ExcelProperty(converter = LongStringConverter.class)\r\n    private Long projectId;\r\n}\r\n\r\n```"
      }
    ]
  },
  {
    "number": 3397,
    "title": "java.lang.IllegalAccessError-->superclass access check failed",
    "created_at": "2023-08-10T05:21:56Z",
    "closed_at": "2024-07-31T01:18:10Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3397",
    "body": "\r\n# 异常代码\r\n```java\r\n public static void main(String[] args) {\r\n        ArrayList<Entity> data = new ArrayList<>();\r\n        Entity entity = new Entity();\r\n        entity.setCje(122455F);\r\n        data.add(entity);\r\n        ExcelWriter writer = EasyExcel.write(new File(\"E:\\\\data\\\\a.xlsx\")).head(Entity.class).build();\r\n        writer.write(data, EasyExcel.writerSheet().build());\r\n        writer.finish();\r\n    }\r\n  \r\n# module  信息\r\n      module-info.java\r\n      open module nativetest{\r\n      \r\n          requires jdk.incubator.concurrent;\r\n          requires junit;\r\n          requires jdk17Synax;\r\n          requires jdk.incubator.vector;\r\n          requires com.fasterxml.jackson.databind;\r\n          requires easyexcel.core;\r\n          requires poi;\r\n          requires jdk.httpserver;\r\n          exports org.jdk.feature;\r\n          exports org.jdk.feature.sealed;\r\n          exports org.demo ;\r\n      }\r\n\r\n\r\n```\r\n# 异常提示\r\n Exception in thread \"main\" com.alibaba.excel.support.cglib.core.CodeGenerationException: java.lang.IllegalAccessError-->superclass access check failed: class org.demo.Entity$$BeanMapByEasyExcelCGLIB$$4e871fcd (in module nativetest) cannot access class com.alibaba.excel.support.cglib.beans.BeanMap (in unnamed module @0x35aea049) because module nativetest does not read unnamed module @0x35aea049\r\n\tat com.alibaba.excel.support.cglib.core.ReflectUtils.defineClass(ReflectUtils.java:511)\r\n\tat com.alibaba.excel.support.cglib.core.AbstractClassGenerator.generate(AbstractClassGenerator.java:363)\r\n\tat com.alibaba.excel.support.cglib.core.AbstractClassGenerator$ClassLoaderData$3.apply(AbstractClassGenerator.java:110)\r\n\tat com.alibaba.excel.support.cglib.core.AbstractClassGenerator$ClassLoaderData$3.apply(AbstractClassGenerator.java:108)\r\n\tat com.alibaba.excel.support.cglib.core.internal.LoadingCache$2.call(LoadingCache.java:54)\r\n\tat java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:317)\r\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java)\r\n\tat com.alibaba.excel.support.cglib.core.internal.LoadingCache.createEntry(LoadingCache.java:61)\r\n\tat com.alibaba.excel.support.cglib.core.internal.LoadingCache.get(LoadingCache.java:34)\r\n\tat com.alibaba.excel.support.cglib.core.AbstractClassGenerator$ClassLoaderData.get(AbstractClassGenerator.java:134)\r\n\tat com.alibaba.excel.support.cglib.core.AbstractClassGenerator.create(AbstractClassGenerator.java:319)\r\n\tat com.alibaba.excel.support.cglib.beans.BeanMap$Generator.create(BeanMap.java:140)\r\n\tat easyexcel.core@3.3.2/com.alibaba.excel.util.BeanMapUtils.create(BeanMapUtils.java:29)\r\n\tat easyexcel.core@3.3.2/com.alibaba.excel.write.executor.ExcelWriteAddExecutor.addJavaObjectToExcel(ExcelWriteAddExecutor.java:142)\r\n\tat easyexcel.core@3.3.2/com.alibaba.excel.write.executor.ExcelWriteAddExecutor.addOneRowOfDataToExcel(ExcelWriteAddExecutor.java:81)\r\n\tat easyexcel.core@3.3.2/com.alibaba.excel.write.executor.ExcelWriteAddExecutor.add(ExcelWriteAddExecutor.java:58)\r\n\tat easyexcel.core@3.3.2/com.alibaba.excel.write.ExcelBuilderImpl.addContent(ExcelBuilderImpl.java:59)\r\n\tat easyexcel.core@3.3.2/com.alibaba.excel.ExcelWriter.write(ExcelWriter.java:73)\r\n\tat easyexcel.core@3.3.2/com.alibaba.excel.ExcelWriter.write(ExcelWriter.java:50)\r\n\tat nativetest/org.demo.MuduleInfoTest.main(MuduleInfoTest.java:17)\r\n# 问题描述\r\n 使用maven ，openjdk20。在写入excel 时候，出现异常。Easyxcel 为3.3.2.\r\n如果module-info.java 同时requires easyexcel.core 和easyexcel.support .编译会过不去。\r\n只requires easyexcel.core 。则会出现以上情况。\r\n查询了相关issues.除了手动合并包，没有其他办法嘛？还是希望Easyexcel  能官方支持下。",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3397/comments",
    "author": "hyz19910303",
    "comments": [
      {
        "user": "OneFAnn",
        "created_at": "2023-09-09T03:28:06Z",
        "body": "JDK17,Easyxcel 3.3.2\r\n我也遇到了类似的问题\r\n\r\n```\r\nmodule BillParser {\r\n    requires javafx.controls;\r\n    requires javafx.fxml;\r\n    requires easyexcel.core;\r\n    opens com.gzf.bill to javafx.fxml;\r\n    opens com.gzf.bill.dto;\r\n    exports com.gzf.bill;\r\n}\r\n```\r\n\r\n异常信息\r\nCaused by: java.lang.IllegalAccessError: superclass access check failed: class com.gzf.bill.dto.AliPayTradeDto$$BeanMapByEasyExcelCGLIB$$1a79f748 (in module BillParser) cannot access class com.alibaba.excel.support.cglib.beans.BeanMap (in unnamed module @0x3eedc43c) because module BillParser does not read unnamed module @0x3eedc43c\r\n"
      },
      {
        "user": "OneFAnn",
        "created_at": "2023-09-10T10:57:37Z",
        "body": "这个问题是因为core和support都存在com.alibaba.excel.support包，然后导致 easyexcel.core和easyexcel.support不能同时requires吗？"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2024-07-19T06:18:18Z",
        "body": "你好，我们发现此Issue已经超过三个月没有活动了，为了更好的帮助您解决问题，我们将在两周后关闭此Issue，如果您仍然有问题，请在两周内内回复此Issue，谢谢！如果您已经解决或者不需要帮助，请忽略此消息。"
      }
    ]
  },
  {
    "number": 3394,
    "title": "如何处理有些固定列，然后再有些动态不固定列？",
    "created_at": "2023-08-09T07:52:05Z",
    "closed_at": "2024-07-31T01:18:11Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3394",
    "body": "# 问题描述\r\n如何处理有些固定列，然后再有些动态不固定列？\r\n就是一对多的数据需要导出，多是不固定数据\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3394/comments",
    "author": "yfgcq",
    "comments": [
      {
        "user": "gongxuanzhang",
        "created_at": "2023-08-10T01:19:21Z",
        "body": "用拦截器的方式会很麻烦，建议把你的\"一\" 拆成多个属性列 重新建实体 "
      },
      {
        "user": "yfgcq",
        "created_at": "2023-08-15T03:26:04Z",
        "body": "> 用拦截器的方式会很麻烦，建议把你的\"一\" 拆成多个属性列 重新建实体\r\n\r\n支持这种List方式不？\r\n    Class ExcelData{\r\n        @ExcelProperty(\"问题列表\")\r\n        private List<Question> questionList;\r\n\r\n    }\r\n\r\n    Class Question{\r\n        @ExcelProperty(\"问题id\")\r\n        private String name;\r\n        @ExcelProperty(\"问题名称\")\r\n        private String name;\r\n    }\r\n"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2024-07-19T06:18:19Z",
        "body": "你好，我们发现此Issue已经超过三个月没有活动了，为了更好的帮助您解决问题，我们将在两周后关闭此Issue，如果您仍然有问题，请在两周内内回复此Issue，谢谢！如果您已经解决或者不需要帮助，请忽略此消息。"
      }
    ]
  },
  {
    "number": 3392,
    "title": "如何设置行头的行号和从第几行开始读数据？",
    "created_at": "2023-08-08T04:40:50Z",
    "closed_at": "2024-07-31T01:18:12Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3392",
    "body": "\r\n# 异常代码\r\n```java\r\n   \r\nEasyExcel.read(fileName, ConverterData.class, new ConverterDataListener())\r\n            .sheet().doRead();\r\n\r\n```\r\n\r\n# 问题描述\r\n默认按行头在第一行读取，但如果不是第一行，那么如何设置行头的行号和从第几行开始读数据？比如行头在第5行，从第6行开始读数据。",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3392/comments",
    "author": "nicoxiang",
    "comments": [
      {
        "user": "nicoxiang",
        "created_at": "2023-08-10T04:00:02Z",
        "body": "是没有这个功能吗？"
      },
      {
        "user": "nicoxiang",
        "created_at": "2023-08-10T04:11:42Z",
        "body": "```java\r\nEasyExcel.read(fileName, ConverterData.class, new ConverterDataListener())\r\n            .sheet().setStartRow(5).doRead();\r\n```\r\n\r\n没有setStartRow() 这样的方法吗？"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2024-07-19T06:18:21Z",
        "body": "你好，我们发现此Issue已经超过三个月没有活动了，为了更好的帮助您解决问题，我们将在两周后关闭此Issue，如果您仍然有问题，请在两周内内回复此Issue，谢谢！如果您已经解决或者不需要帮助，请忽略此消息。"
      }
    ]
  },
  {
    "number": 3391,
    "title": "处理20万数据进行数据导出分为32个sheet到一个文件里，本地代码跑起来好好的 一放生产环境就报Can not close IO",
    "created_at": "2023-08-08T02:21:28Z",
    "closed_at": "2024-07-31T01:18:13Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3391",
    "body": "public static <T> void exportSheet(HttpServletResponse response, String fileName, List<String> sheetName, List<List<T>> list, Class<T> clazz) {\r\n\t\tresponse.setContentType(\"application/vnd.ms-excel\");\r\n\t\tresponse.setCharacterEncoding(Charsets.UTF_8.name());\r\n\t\tServletOutputStream outputStream = null;\r\n\t\tExcelWriter excelWriter = null;\r\n\t\ttry {\r\n\t\t\tfileName = URLEncoder.encode(fileName, Charsets.UTF_8.name());\r\n\t\t\tresponse.setHeader(\"Content-disposition\", \"attachment;filename=\" + fileName + \".xlsx\");\r\n\t\t\toutputStream = response.getOutputStream();\r\n\t\t\texcelWriter = EasyExcel.write(outputStream, clazz).build();\r\n\r\n\t\t\tint i = 0;\r\n\t\t\tint k = 0;\r\n\t\t\tfor (List<T> c : list) {\r\n\t\t\t\tWriteSheet writeSheet = EasyExcel.writerSheet(i++, sheetName.get(k++)).head(clazz).build();\r\n\t\t\t\texcelWriter.write(c, writeSheet);\r\n\t\t\t}\r\n\t\t\texcelWriter.finish();\r\n\t\t\toutputStream.flush();\r\n\t\t} catch (UnsupportedEncodingException e) {\r\n\t\t\tthrow new RuntimeException(e);\r\n\t\t} catch (IOException e) {\r\n\t\t\tthrow new RuntimeException(e);\r\n\t\t} finally {\r\n\t\t\tif (outputStream != null) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\toutputStream.close();\r\n\t\t\t\t} catch (IOException e) {\r\n\t\t\t\t\tthrow new RuntimeException(e);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n``\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3391/comments",
    "author": "AeRocky",
    "comments": [
      {
        "user": "Sean-214",
        "created_at": "2023-08-09T08:13:40Z",
        "body": "excelWriter.finish(); 调这个方法时输出流应该已经关闭了。"
      },
      {
        "user": "AeRocky",
        "created_at": "2023-08-10T05:10:41Z",
        "body": "大佬那应该怎么解决呢 @Sean-214 "
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2024-07-19T06:18:22Z",
        "body": "你好，我们发现此Issue已经超过三个月没有活动了，为了更好的帮助您解决问题，我们将在两周后关闭此Issue，如果您仍然有问题，请在两周内内回复此Issue，谢谢！如果您已经解决或者不需要帮助，请忽略此消息。"
      }
    ]
  },
  {
    "number": 3376,
    "title": "导出设置列隐藏不生效,求助",
    "created_at": "2023-07-31T09:24:13Z",
    "closed_at": "2023-09-07T05:50:23Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3376",
    "body": "使用注解   ` @ContentStyle(hidden = BooleanEnum.TRUE, locked = BooleanEnum.TRUE)` 设置隐藏,不生效,还是我用错了, easyexcel是最新版本",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3376/comments",
    "author": "wdkGitHub",
    "comments": [
      {
        "user": "tmlx1990",
        "created_at": "2023-07-31T14:27:46Z",
        "body": "目前这个属性好像没有生效。可以先通过设置列宽来实现。@ColumnWidth(0)\r\n"
      },
      {
        "user": "wdkGitHub",
        "created_at": "2023-07-31T14:51:54Z",
        "body": "> 目前这个属性好像没有生效。可以先通过设置列宽来实现。@ColumnWidth(0)\r\n\r\n😑  尝试了很久，掩耳盗铃的将宽度设置为0了"
      },
      {
        "user": "yikengboy",
        "created_at": "2024-01-12T11:07:54Z",
        "body": "`@ExcelProperty(\"需求id\") @ColumnWidth(0) private Long id;`\r\n我设置成0 为什么还是会显示这列"
      }
    ]
  },
  {
    "number": 3349,
    "title": "字段值为null时，converter不起作用",
    "created_at": "2023-07-18T12:08:48Z",
    "closed_at": "2023-07-19T03:24:08Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3349",
    "body": "问题描述：\r\n假设我有一个需求，导出一个列表List<User>,其中有一个邮箱字段，如果为空，则导出为“未绑定”\r\n    /**\r\n     * 邮箱\r\n     */\r\n    @ExcelProperty(value = \"邮箱\", converter = EmailConverter.class)\r\n    private String email;\r\n    其中converter代码如下\r\n    public class EmailConverterimplements Converter<String> {\r\n\r\n    @Override\r\n    public WriteCellData<?> convertToExcelData(String value, ExcelContentProperty contentProperty, GlobalConfiguration globalConfiguration) {\r\n        ServletRequestAttributes attributes = (ServletRequestAttributes) RequestContextHolder.getRequestAttributes();\r\n        assert attributes != null;\r\n        String i18n = attributes.getRequest().getHeader(\"i18n\");\r\n        if (\"en-US\".equals(i18n)) {\r\n            if (StringUtils.isBlank(value)) {\r\n                return new WriteCellData<>(\"Unbound\");\r\n            } else {\r\n                return new WriteCellData<>(value);\r\n            }\r\n        } else if (\"zh-TW\".equals(i18n)) {\r\n            if (StringUtils.isBlank(value)) {\r\n                return new WriteCellData<>(\"未綁定\");\r\n            } else {\r\n                return new WriteCellData<>(value);\r\n            }\r\n        } else {\r\n            if (StringUtils.isBlank(value)) {\r\n                return new WriteCellData<>(\"未绑定\");\r\n            } else {\r\n                return new WriteCellData<>(value);\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n如果email为null，name这个converter似乎就不会生效，我在代码中将emai设为“”空字符串，则会生效，这是为什么？\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3349/comments",
    "author": "luhengyu1",
    "comments": [
      {
        "user": "frankggyy",
        "created_at": "2023-07-19T03:24:08Z",
        "body": "自定义Converter支持null值，需要实现`NullableObjectConverter`接口\r\n```java\r\npackage com.alibaba.excel.converters;\r\n\r\n/**\r\n * When implementing <code>convertToExcelData</code> method, pay attention to the reference <code>value</code> may be\r\n * null\r\n *\r\n * @author JiaJu Zhuang\r\n **/\r\npublic interface NullableObjectConverter<T> extends Converter<T> {\r\n}\r\n```"
      }
    ]
  },
  {
    "number": 3327,
    "title": "多次导出之间相互影响",
    "created_at": "2023-07-12T06:46:49Z",
    "closed_at": "2023-07-17T03:16:39Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3327",
    "body": "版本：2.2.8\r\n问题描述：一个实体，根据类型导出不同的列，导出之前设置列的顺序，第一个导出正常，第二个导出会出现空白列，顺序也有影响\r\n关键代码：\r\nprivate static void setExcelIndex(Class<?> aClass, List<String> columnNames) throws NoSuchFieldException, IllegalAccessException {\r\n        //获取当前对象的字段\r\n        ArrayList<Field> fields = Lists.newArrayList(aClass.getDeclaredFields());\r\n        Class<?> superclass = aClass.getSuperclass();\r\n        if (superclass != null) {//有父类则获取父类对象的字段\r\n            fields.addAll(Lists.newArrayList(superclass.getDeclaredFields()));\r\n        }\r\n        for (int i = 0; i < columnNames.size(); i++) {\r\n            for (Field field : fields) {\r\n                if (!field.getName().equals(columnNames.get(i))) continue;\r\n                ExcelProperty annotation = field.getAnnotation(ExcelProperty.class);\r\n                if (annotation == null) continue;\r\n                InvocationHandler handler = Proxy.getInvocationHandler(annotation);\r\n                //获取 AnnotationInvocationHandler 的 memberValues 字段\r\n                Field fieldMv = handler.getClass().getDeclaredField(\"memberValues\");\r\n                //因为这个字段事 private final 修饰，所以要打开权限\r\n                fieldMv.setAccessible(true);\r\n                Map<Object, Object> memberValues = (Map<Object, Object>) fieldMv.get(handler);\r\n                if (!memberValues.containsKey(\"value\")) continue;\r\n                memberValues.put(\"index\", i);\r\n            }\r\n        }\r\n    }\r\n导出代码：\r\nsetExcelIndex（aClass,includeColums）\r\nWriteSheet writeSheet = EasyExcel.writerSheet(\"模板\").head(aClass).includeColumsNames(includeColums).build();\r\n excelWriter.write(data(), writeSheet);",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3327/comments",
    "author": "yang-s-c",
    "comments": [
      {
        "user": "yang-s-c",
        "created_at": "2023-07-12T07:17:39Z",
        "body": "每次导出以后，进行index重置，memberValues.put(\"index\", -1);还是不能解决问题"
      },
      {
        "user": "jh248",
        "created_at": "2023-07-13T07:43:53Z",
        "body": "表头会存储在一个数组里面，每次导出后，进行重置就可以解决顺序问题"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2023-07-14T10:21:10Z",
        "body": "如果你需要动态调整表头，可以使用动态的API，不要使用包括反射在内的黑科技。\r\n表头有缓存\r\n建议升级到最新版本，解决了缓存问题"
      }
    ]
  },
  {
    "number": 3316,
    "title": "CSV文件解析-某一条数据内部分字段值为null",
    "created_at": "2023-07-06T07:34:19Z",
    "closed_at": "2024-07-31T01:18:22Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3316",
    "body": "easyexcel版本:3.1.1\r\n\r\n\r\n解析的文件大小-超过100万行数据。\r\n\r\n两次偶然出现，CSV文件解析，某一条数据内部分字段值为null，其他字段值正常的情况。\r\n\r\n尝试重复解析后，能正常获取所有字段（单元格）的值。\r\n所以该问题无法复现。\r\n\r\n在项目中使用了easyexcel，为确保稳定解析。请问该如何避免这个问题喔？",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3316/comments",
    "author": "NiYueLiuFeng",
    "comments": [
      {
        "user": "gongxuanzhang",
        "created_at": "2023-07-21T10:42:53Z",
        "body": "csv本质上是一个逗号分割的数据文件，不存在null的说法。\r\n只要是逗号分割的都是可以解析的，但是如果csv数据本身有问题可能需要处理一下"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2024-07-19T06:18:34Z",
        "body": "你好，我们发现此Issue已经超过三个月没有活动了，为了更好的帮助您解决问题，我们将在两周后关闭此Issue，如果您仍然有问题，请在两周内内回复此Issue，谢谢！如果您已经解决或者不需要帮助，请忽略此消息。"
      }
    ]
  },
  {
    "number": 3314,
    "title": "【求助】在导出Excel模板时，请问如何实现将某一列置灰且不可编辑功能",
    "created_at": "2023-07-05T03:46:50Z",
    "closed_at": "2023-07-17T06:55:48Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3314",
    "body": "版本：2.2.7\r\nEasy-Excel 2.2.7\r\n问题：在导出Excel模板时，如何实现将某一列置灰且不可编辑功能",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3314/comments",
    "author": "goodkhy",
    "comments": [
      {
        "user": "frankggyy",
        "created_at": "2023-07-17T06:55:48Z",
        "body": "可以使用@ContentStyle注解\r\n\r\n```java\r\nimport com.alibaba.excel.annotation.ExcelProperty;\r\nimport com.alibaba.excel.annotation.write.style.ContentStyle;\r\nimport com.alibaba.excel.enums.BooleanEnum;\r\n\r\nimport lombok.EqualsAndHashCode;\r\nimport lombok.Getter;\r\nimport lombok.Setter;\r\n\r\n@Getter\r\n@Setter\r\n@EqualsAndHashCode\r\npublic class LockStyleData {\r\n    @ExcelProperty(\"Name\")\r\n    private String name;\r\n    @ExcelProperty(\"Age\")\r\n    @ContentStyle(locked = BooleanEnum.TRUE)\r\n    private String age;\r\n}\r\n```"
      }
    ]
  },
  {
    "number": 3312,
    "title": "java.lang.NoClassDefFoundError: Could not initialize class com.alibaba.excel.enums.ByteOrderMarkEnum",
    "created_at": "2023-07-04T13:04:37Z",
    "closed_at": "2023-07-04T14:05:19Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3312",
    "body": null,
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3312/comments",
    "author": "yangder",
    "comments": [
      {
        "user": "lhj946",
        "created_at": "2023-08-25T12:17:35Z",
        "body": "你好，你是怎么解决这个问题的\r\n"
      }
    ]
  },
  {
    "number": 3304,
    "title": "如何填充数组或者List<String> ？",
    "created_at": "2023-06-29T08:08:19Z",
    "closed_at": "2023-06-30T01:32:14Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3304",
    "body": "如何向Excel模板中填充一个字符串数组，或者一个List<String> ？？Excel模板如何设置？\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3304/comments",
    "author": "SGYQ",
    "comments": [
      {
        "user": "gongxuanzhang",
        "created_at": "2023-06-30T01:32:14Z",
        "body": "数组和集合被视为特殊类型，需要在实体中自定义转换器，即可导出"
      },
      {
        "user": "elcnu986",
        "created_at": "2024-04-05T06:31:32Z",
        "body": "> 数组和集合被视为特殊类型，需要在实体中自定义转换器，即可导出\r\n\r\n定义一个类，把这个集合放到这个类的属性里？"
      }
    ]
  },
  {
    "number": 3300,
    "title": "多线程写入excel数据出现主线程完成 关闭流，但是easyexcel异步没写完导致数据丢失",
    "created_at": "2023-06-29T01:58:29Z",
    "closed_at": "2023-06-29T06:05:18Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3300",
    "body": "怎么监控写入状态，需要判断数据都写完再去关闭流",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3300/comments",
    "author": "jiazhimin-hub",
    "comments": [
      {
        "user": "gongxuanzhang",
        "created_at": "2023-06-29T06:05:17Z",
        "body": "在线程里用CountDownLatch等线程工具"
      },
      {
        "user": "jiazhimin-hub",
        "created_at": "2023-06-29T07:56:00Z",
        "body": "用flink写的，能拿到flink结束但是flink结束之后easyexcel数据没写完\r\n代码：\r\n public void processElement(Tuple2<Integer, List<Tuple3<Integer, List<List<Object>>, Integer>>> value, ProcessFunction<Tuple2<Integer, List<Tuple3<Integer, List<List<Object>>, Integer>>>, Object>.Context ctx, Collector<Object> out) throws Exception {\r\n                Integer patientCount = value.f0;\r\n                List<Tuple3<Integer, List<List<Object>>, Integer>> f1 = value.f1;\r\n                AtomicInteger i = new AtomicInteger();\r\n                f1.forEach(of->{\r\n                    Integer sheet = of.f0;\r\n                    List<List<Object>> lists = of.f1;\r\n                    synchronized (map) {\r\n                        excelWriter.write(lists, map.get(sheet));\r\n                        i.getAndIncrement();\r\n                    }\r\n                });\r\n                getRuntimeContext().getAccumulator(taskId + \"-handle\").add(patientCount.longValue());\r\n业务上来说这边已经调用了write()方法，但是easyexcel没写完数据，拿不到什么时候write完成状态"
      }
    ]
  },
  {
    "number": 3292,
    "title": "表头有办法兼容大小写么？",
    "created_at": "2023-06-25T08:21:54Z",
    "closed_at": "2023-06-26T01:22:51Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3292",
    "body": "比如我指定了 @ExcelProperty(\"ICD\")\r\n我希望，它既可以识别 大小的 ICD，也可以识别 小写的 icd  或者 大小写混合的 Icd \r\n\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3292/comments",
    "author": "lanxikun",
    "comments": [
      {
        "user": "gongxuanzhang",
        "created_at": "2023-06-25T08:22:49Z",
        "body": "兼容大小写是什么意思"
      },
      {
        "user": "lanxikun",
        "created_at": "2023-06-25T08:27:03Z",
        "body": "就是想让 @ExcelProperty 忽略大小写，只要 字母相同，不论大小写，它 都可以 识别"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2023-06-25T09:00:59Z",
        "body": "不支持，可以考虑不用实体，使用Map接受"
      }
    ]
  },
  {
    "number": 3290,
    "title": "关于动态表头的下拉（筛选框）",
    "created_at": "2023-06-25T06:31:27Z",
    "closed_at": "2023-06-26T02:07:50Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3290",
    "body": "3版本后的动态表头，怎么实现筛选框呢",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3290/comments",
    "author": "HuNanGuJinLong",
    "comments": [
      {
        "user": "gongxuanzhang",
        "created_at": "2023-06-26T01:23:34Z",
        "body": "需要在拦截器中手动实现"
      }
    ]
  },
  {
    "number": 3288,
    "title": "想实现一下就是只锁住一个单元格的某一列数据如何实现？",
    "created_at": "2023-06-21T11:39:39Z",
    "closed_at": "2023-06-25T01:25:38Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3288",
    "body": "就是在导出excel之后如何能锁住一个sheet页中有内容数据部分的某一列，然后对其他没有数据的单元格可以随意编辑。",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3288/comments",
    "author": "shuyixiao-better",
    "comments": [
      {
        "user": "gongxuanzhang",
        "created_at": "2023-06-22T11:55:22Z",
        "body": "没法实现.. POI应该也不行"
      },
      {
        "user": "shuyixiao-better",
        "created_at": "2023-06-23T07:58:58Z",
        "body": "> 没法实现.. POI应该也不行\r\n\r\n其实我 想能不能就是找到cell的属性是在哪里吧这个lock设施为true的但是没有找到"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2023-06-25T01:25:36Z",
        "body": "拿到cell的style对象\r\nsetLock  \r\n要配合protectSheet使用"
      },
      {
        "user": "shuyixiao-better",
        "created_at": "2023-06-25T01:38:11Z",
        "body": "> 拿到cell的style对象 setLock 要配合protectSheet使用\r\n\r\n大佬我就是按照你说的这种进行操作的，只能实现对有内容填充部分的单元格实现了锁定与非锁定的效果。没有内容部分的单元格都锁定了，如何实现对没有内容填充的单元格实现不锁定的效果，大佬你有什么方法吗？"
      },
      {
        "user": "jacentsao",
        "created_at": "2024-07-22T02:23:39Z",
        "body": "> > 拿到cell的style对象 setLock 要配合protectSheet使用\r\n> \r\n> 大佬我就是按照你说的这种进行操作的，只能实现对有内容填充部分的单元格实现了锁定与非锁定的效果。没有内容部分的单元格都锁定了，如何实现对没有内容填充的单元格实现不锁定的效果，大佬你有什么方法吗？\r\n\r\n最后有解决吗，这个东西真是奇怪，未填充内容的末尾行居然锁定"
      }
    ]
  },
  {
    "number": 3285,
    "title": "导入问题",
    "created_at": "2023-06-21T06:24:13Z",
    "closed_at": "2023-07-26T04:51:33Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3285",
    "body": "各位好。我在做导入的时候，有时候导入表格问题导入失败了。但是需要修改这个文件或者删除的时候发现代码在占用这个文件。有什么方法在导入失败或者出现异常的时候释放这个资源。\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3285/comments",
    "author": "h1078787839",
    "comments": [
      {
        "user": "gongxuanzhang",
        "created_at": "2023-06-22T11:54:26Z",
        "body": "导入是读取的意思吗？\r\n读取发生错误也会释放资源的\r\n最好能贴上代码看看是否是使用问题"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2023-07-26T04:51:33Z",
        "body": "不知道您是否已经解决该问题？我们先暂时关闭这个问题，如果还存在问题请重新Reopen这个issue"
      }
    ]
  },
  {
    "number": 3280,
    "title": "afterCellDispose方法中设置表头锁定。开启sheet保护，整个sheet被锁。",
    "created_at": "2023-06-19T15:05:12Z",
    "closed_at": "2023-06-20T05:47:18Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3280",
    "body": "需求为下载模板只想锁定表头行，放开其他行操作\r\n但是整个sheet被锁。debug发现只读取表头后，读取不了模板的空格单元格",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3280/comments",
    "author": "chxx1",
    "comments": [
      {
        "user": "gongxuanzhang",
        "created_at": "2023-06-20T01:20:16Z",
        "body": "尝试用注解 @HeadStyle(locked = true)"
      },
      {
        "user": "chxx1",
        "created_at": "2023-06-20T01:35:52Z",
        "body": "> 尝试用注解 @headstyle(locked = true)\r\n\r\n单独使用注解，不配合protectSheet，注解无法生效吗？"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2023-06-20T01:39:00Z",
        "body": "是需要使用protectSheet的  \r\n建议在sheetCreate之后"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2023-06-20T01:41:52Z",
        "body": "context.getWriteSheetHolder().getSheet().protectSheet(\"\")"
      },
      {
        "user": "chxx1",
        "created_at": "2023-06-20T01:45:38Z",
        "body": "> 是需要使用protectSheet的 建议在sheetCreate之后\r\n\r\n这边加了protectSheet后是锁住整个sheet;而不是只锁表头呢。。\r\npublic class CustomerWriteHandler implements SheetWriteHandler{\r\n\r\n    @Override\r\n    public void afterSheetCreate(SheetWriteHandlerContext context) {\r\n        context.getWriteSheetHolder().getSheet().protectSheet(\"\");\r\n    }\r\n}\r\n\r\n EasyExcel.write(response.getOutputStream(), AssetType.class)\r\n                .sheet(\"资产导入模板\")\r\n                .excludeColumnFiledNames(excludeColumnFiledNames)\r\n                .registerWriteHandler(new CustomerWriteHandler())\r\n                .doWrite(Collections.EMPTY_LIST);"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2023-06-20T05:01:42Z",
        "body": "做不到，似乎POI也做不到\r\n但是可以冻结表头   "
      },
      {
        "user": "chxx1",
        "created_at": "2023-06-20T05:47:15Z",
        "body": "好的。感谢回复"
      }
    ]
  },
  {
    "number": 3274,
    "title": "fill填充模板导出，2w多条数据耗时两分多钟",
    "created_at": "2023-06-16T07:18:20Z",
    "closed_at": "2024-07-31T01:18:22Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3274",
    "body": "ExcelWriter excelWriter = EasyExcel\r\n                .write(outputStream)\r\n                .withTemplate(getClass().getClassLoader().getResourceAsStream(fileTemplate))\r\n                .registerConverter(new LongStringConverter())\r\n                .build();\r\nFillConfig fillConfig = FillConfig.builder().forceNewRow(Boolean.TRUE).build();\r\n excelWriter.fill(list, fillConfig, writeSheet);",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3274/comments",
    "author": "icefuck",
    "comments": [
      {
        "user": "gongxuanzhang",
        "created_at": "2023-06-16T08:24:39Z",
        "body": "可能是样式影响   看看有没有很多复杂样式"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2024-07-19T06:18:35Z",
        "body": "你好，我们发现此Issue已经超过三个月没有活动了，为了更好的帮助您解决问题，我们将在两周后关闭此Issue，如果您仍然有问题，请在两周内内回复此Issue，谢谢！如果您已经解决或者不需要帮助，请忽略此消息。"
      }
    ]
  },
  {
    "number": 3265,
    "title": "excel读取完成之后，获取总行数的方法被废弃，但是在替代方法中却没找到",
    "created_at": "2023-06-13T13:02:57Z",
    "closed_at": "2023-06-14T01:18:25Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3265",
    "body": "问题：\r\ncom.alibaba.excel.context.AnalysisContext#getTotalCount方法已经被废弃，然后让我们去com.alibaba.excel.context.AnalysisContext#readRowHolder()中获取，但是这个对象中没有获取总行数的方法\r\n\r\n版本：3.3.2\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3265/comments",
    "author": "kxxfydj",
    "comments": [
      {
        "user": "gongxuanzhang",
        "created_at": "2023-06-14T01:18:25Z",
        "body": "context.readRowHolder().getRowIndex()\r\n最后一行拿到的就是总数了"
      },
      {
        "user": "HugoBFHe",
        "created_at": "2023-12-01T10:40:59Z",
        "body": "有没有一种可能，业务需要每一行和总行数做处理"
      }
    ]
  },
  {
    "number": 3250,
    "title": "写excle，怎么指定从第几行开始写？",
    "created_at": "2023-06-06T07:18:04Z",
    "closed_at": "2024-07-31T01:18:25Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3250",
    "body": "public static void main(String[] args) {\r\n        String fileName = \"C:\\\\Users\\\\CaiYu\\\\Desktop\\\\1\\\\\" + \"complexHeadWrite\" + System.currentTimeMillis() + \".xlsx\";\r\n\r\n        List<ExcelData> data = new ArrayList<>();\r\n        ExcelData excelData = new ExcelData();\r\n        excelData.setString(\"1\");\r\n        excelData.setDate(\"2\");\r\n        excelData.setDoubleData(3.0);\r\n        data.add(excelData);\r\n        \r\n        EasyExcel.write(\"C:\\\\Users\\\\CaiYu\\\\Desktop\\\\1\\\\test.xlsx\").sheet(\"模板\").doWrite(data);\r\n    }",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3250/comments",
    "author": "codeyearn",
    "comments": [
      {
        "user": "gongxuanzhang",
        "created_at": "2023-06-06T07:24:47Z",
        "body": "把表头行设置好就行了"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2024-07-19T06:18:39Z",
        "body": "你好，我们发现此Issue已经超过三个月没有活动了，为了更好的帮助您解决问题，我们将在两周后关闭此Issue，如果您仍然有问题，请在两周内内回复此Issue，谢谢！如果您已经解决或者不需要帮助，请忽略此消息。"
      }
    ]
  },
  {
    "number": 3248,
    "title": "获取workbook中sheet的数量",
    "created_at": "2023-06-05T06:03:57Z",
    "closed_at": "2023-06-08T07:03:53Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3248",
    "body": "调用doAfterAllAnalysed的时候，怎么通过参数AnalysisContext context获取到workbook总共有多少个sheet呀。我用context.readWorkbookHolder().getActualSheetDataList()和context.readSheetList()获取到的list都是null\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3248/comments",
    "author": "renyd123",
    "comments": [
      {
        "user": "DaZuiZui",
        "created_at": "2023-06-08T05:55:39Z",
        "body": "~~~java\r\n   excelReader = EasyExcel.read(filePath).build();\r\n   int count = excelReader.getSheets().size();\r\n~~~\r\n\r\n祝你生活愉快，工作顺利。"
      },
      {
        "user": "renyd123",
        "created_at": "2023-06-08T06:12:29Z",
        "body": "> ```java\r\n>    excelReader = EasyExcel.read(filePath).build();\r\n>    int count = excelReader.getSheets().size();\r\n> ```\r\n> \r\n> 祝你生活愉快，工作顺利。\r\n\r\n这是在官方文档里的办法，我也知道这个。就是想在不增加额外开销的情况下获取到sheet数量。这种方法还是要再读一次EasyExcel的"
      },
      {
        "user": "DaZuiZui",
        "created_at": "2023-06-08T06:32:02Z",
        "body": "> 就是想在不增加额外开销的情况下获取到sheet数量。这种方法还是要再读一次EasyExcel的\r\n\r\n那么就使用SimpleReadCacheSelector，它是通过EasyExcel的缓存机制来读取的。\r\n~~~java\r\n        ReadSheet rs = EasyExcel.readSheet(0).build();\r\n        SimpleReadCacheSelector srcs = new SimpleReadCacheSelector(\"ur file path\");\r\n        srcs.setCurrentReadSheet(rs);\r\n        return srcs.getReadCache().sheetCount();\r\n~~~\r\n祝您生活愉快，工作顺利"
      },
      {
        "user": "renyd123",
        "created_at": "2023-06-08T06:33:19Z",
        "body": "> > 就是想在不增加额外开销的情况下获取到sheet数量。这种方法还是要再读一次EasyExcel的\r\n> \r\n> 那么就使用SimpleReadCacheSelector，它是通过EasyExcel的缓存机制来读取的。\r\n> \r\n> ```java\r\n>         ReadSheet rs = EasyExcel.readSheet(0).build();\r\n>         SimpleReadCacheSelector srcs = new SimpleReadCacheSelector(\"ur file path\");\r\n>         srcs.setCurrentReadSheet(rs);\r\n>         return srcs.getReadCache().sheetCount();\r\n> ```\r\n> \r\n> 祝您生活愉快，工作顺利\r\n\r\n好的谢谢\r\n"
      }
    ]
  },
  {
    "number": 3226,
    "title": "如何设置成Excel数值（自定义小数位数）格式",
    "created_at": "2023-05-29T09:58:52Z",
    "closed_at": "2023-05-30T01:28:24Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3226",
    "body": "如何设置成Excel数值（自定义小数位数）格式\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3226/comments",
    "author": "WuLiFei",
    "comments": [
      {
        "user": "gongxuanzhang",
        "created_at": "2023-05-30T01:28:24Z",
        "body": "自定义Converter"
      }
    ]
  },
  {
    "number": 3210,
    "title": "设置保护表头后，其他行无法删除",
    "created_at": "2023-05-19T03:54:40Z",
    "closed_at": "2023-05-22T05:37:20Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3210",
    "body": "# 代码\r\n```java\r\n   public class RowCellStyleStrategy extends AbstractVerticalCellStyleStrategy implements SheetWriteHandler {\r\n\r\n    @Override\r\n    protected WriteCellStyle contentCellStyle(CellWriteHandlerContext context) {\r\n        WriteCellStyle writeCellStyle = new WriteCellStyle();\r\n\r\n        writeCellStyle.setLocked(context.getRowIndex() < 2);\r\n\r\n        return writeCellStyle;\r\n    }\r\n\r\n    @Override\r\n    public void afterSheetCreate(WriteWorkbookHolder writeWorkbookHolder, WriteSheetHolder writeSheetHolder) {\r\n        Sheet sheet = writeSheetHolder.getSheet();\r\n        SXSSFSheet sxssfSheet = (SXSSFSheet) sheet;\r\n        sxssfSheet.lockFormatColumns(false);\r\n        sxssfSheet.lockFormatRows(false);\r\n        sxssfSheet.lockDeleteRows(false);\r\n        sheet.createFreezePane(0, 2, 0, 2);\r\n\r\n        Workbook workbook = writeSheetHolder.getSheet().getWorkbook();\r\n\r\n        sheet.protectSheet(\"cmkladgo1165\");\r\n\r\n        int size = writeSheetHolder.excelWriteHeadProperty().getHeadMap().size();\r\n\r\n        CellStyle columnStyle = workbook.createCellStyle();\r\n        columnStyle.setLocked(false);\r\n\r\n        for (int i = 0; i < size; i++){\r\n            sheet.setDefaultColumnStyle(i, columnStyle);\r\n        }\r\n    }\r\n}\r\n```\r\n# 问题描述\r\n代码中对前两行进行了保护不允许用户操作，但是这会导致其他行无法删除整行数据，因为后面的列是锁定的；尝试获取excel最大列数，对所有列进行解锁，但是十分影响性能，不知道有没有更好的方法？\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3210/comments",
    "author": "shin8085",
    "comments": [
      {
        "user": "gongxuanzhang",
        "created_at": "2023-05-19T12:15:58Z",
        "body": "判断，只保护表头就可以了 \r\n\r\n\r\n @Override\r\n                public void afterCellDispose(CellWriteHandlerContext context) {\r\n               \r\n                    if (BooleanUtils.isNotTrue(context.getHead())) {\r\n                     }\r\n                     \r\n                }"
      },
      {
        "user": "shin8085",
        "created_at": "2023-05-19T13:18:11Z",
        "body": "> 判断，只保护表头就可以了\r\n> \r\n> @OverRide public void afterCellDispose(CellWriteHandlerContext context) {\r\n> \r\n> ```\r\n>                 if (BooleanUtils.isNotTrue(context.getHead())) {\r\n>                  }\r\n>                  \r\n>             }\r\n> ```\r\n\r\n@gongxuanzhang 请问是否有更详细的例子呢？我这里lock前两行似乎是一个意思\r\n```java\r\n    @Override\r\n    protected WriteCellStyle contentCellStyle(CellWriteHandlerContext context) {\r\n        WriteCellStyle writeCellStyle = new WriteCellStyle();\r\n\r\n        writeCellStyle.setLocked(context.getRowIndex() < 2);\r\n\r\n        return writeCellStyle;\r\n    }\r\n```\r\n关键在于整张表默认是锁定的，我只能把有内容的列设置为未锁定\r\n```java\r\n        CellStyle columnStyle = workbook.createCellStyle();\r\n        columnStyle.setLocked(false);\r\n\r\n        for (int i = 0; i < size; i++){\r\n            sheet.setDefaultColumnStyle(i, columnStyle);\r\n        }\r\n```"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2023-05-21T07:10:15Z",
        "body": "哦  你是这么锁的  那可能具体能不能实现我还真不清楚。。  \r\n可能你需要先在POI中看看能否实现需求   \r\n如果不能实现这个是没办法的 \r\n"
      },
      {
        "user": "shin8085",
        "created_at": "2023-05-22T05:37:00Z",
        "body": "想到了一个解决方法，通过解锁行的方式。能应付大部分情况，经过测试也不太影响性能\r\n```java\r\n/**\r\n * 解锁整行\r\n */\r\npublic class UnLockRowStrategy implements RowWriteHandler {\r\n\r\n    /**\r\n     * 待写入Excel的行数\r\n     */\r\n    private final Integer rowNums;\r\n\r\n    /**\r\n     * 解锁行数\r\n     */\r\n    private static final Integer UNLOCK_ROW_NUMS = 100000;\r\n\r\n    public UnLockRowStrategy(Integer rowNums){\r\n        this.rowNums = rowNums;\r\n    }\r\n\r\n    @Override\r\n    public void afterRowDispose(WriteSheetHolder writeSheetHolder, WriteTableHolder writeTableHolder, Row row, Integer relativeRowIndex, Boolean isHead) {\r\n        Sheet sheet = writeSheetHolder.getSheet();\r\n\r\n        CellStyle rowStyle = row.getRowStyle();\r\n        if (Objects.isNull(rowStyle)){\r\n            rowStyle = sheet.getWorkbook().createCellStyle();\r\n        }\r\n        rowStyle.setLocked(false);\r\n        row.setRowStyle(rowStyle);\r\n\r\n        if (row.getRowNum() == rowNums - 1){\r\n            for (int i = rowNums; i < UNLOCK_ROW_NUMS; i++){\r\n                sheet.createRow(i).setRowStyle(rowStyle);\r\n            }\r\n        }\r\n    }\r\n}\r\n```"
      }
    ]
  },
  {
    "number": 3206,
    "title": "同时导入多个100M的Excel，分sheet读取，报错Stack Overflow",
    "created_at": "2023-05-17T09:47:32Z",
    "closed_at": "2023-05-17T11:05:23Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3206",
    "body": "\r\nCaused by: java.lang.StackOverflowError\r\n        at java.lang.Exception.<init>(Exception.java:102)\r\n        at java.lang.ReflectiveOperationException.<init>(ReflectiveOperationException.java:89)\r\n        at java.lang.reflect.InvocationTargetException.<init>(InvocationTargetException.java:72)\r\n        at sun.reflect.GeneratedMethodAccessor220.invoke(Unknown Source)\r\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n        at java.lang.reflect.Method.invoke(Method.java:498)\r\n        at com.alibaba.fastjson2.writer.FieldWriterStringMethod.getFieldValue(FieldWriterStringMethod.java:41)\r\n        at com.alibaba.fastjson2.writer.FieldWriterStringMethod.write(FieldWriterStringMethod.java:94)\r\n        at com.alibaba.fastjson2.writer.ObjectWriterException.write(ObjectWriterException.java:48)\r\n        at com.alibaba.fastjson2.writer.FieldWriterObject.write(FieldWriterObject.java:198)\r\n        at com.alibaba.fastjson2.writer.ObjectWriterException.write(ObjectWriterException.java:48)\r\n        at com.alibaba.fastjson2.writer.FieldWriterObject.write(FieldWriterObject.java:198)\r\n        at com.alibaba.fastjson2.writer.ObjectWriterException.write(ObjectWriterException.java:48)\r\n        at com.alibaba.fastjson2.writer.FieldWriterObject.write(FieldWriterObject.java:198)\r\n        at com.alibaba.fastjson2.writer.ObjectWriterException.write(ObjectWriterException.java:48)\r\n        at com.alibaba.fastjson2.writer.FieldWriterObject.write(FieldWriterObject.java:198)\r\n        at com.alibaba.fastjson2.writer.ObjectWriterException.write(ObjectWriterException.java:48)\r\n        at com.alibaba.fastjson2.writer.FieldWriterObject.write(FieldWriterObject.java:198)\r\n        at com.alibaba.fastjson2.writer.ObjectWriterException.write(ObjectWriterException.java:48)\r\n        at com.alibaba.fastjson2.writer.FieldWriterObject.write(FieldWriterObject.java:198)\r\n        at com.alibaba.fastjson2.writer.ObjectWriterException.write(ObjectWriterException.java:48)\r\n        at com.alibaba.fastjson2.writer.FieldWriterObject.write(FieldWriterObject.java:198)\r\n        at com.alibaba.fastjson2.writer.ObjectWriterException.write(ObjectWriterException.java:48)\r\n        at com.alibaba.fastjson2.writer.FieldWriterObject.write(FieldWriterObject.java:198)\r\n        at com.alibaba.fastjson2.writer.ObjectWriterException.write(ObjectWriterException.java:48)\r\n        at com.alibaba.fastjson2.writer.FieldWriterObject.write(FieldWriterObject.java:198)\r\n        at com.alibaba.fastjson2.writer.ObjectWriterException.write(ObjectWriterException.java:48)",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3206/comments",
    "author": "pp-freeman",
    "comments": [
      {
        "user": "gongxuanzhang",
        "created_at": "2023-05-17T10:06:24Z",
        "body": "上代码  上文件 而不是扔一堆这种东西"
      },
      {
        "user": "pp-freeman",
        "created_at": "2023-05-17T11:05:37Z",
        "body": "jj"
      }
    ]
  },
  {
    "number": 3205,
    "title": "请问在EasyExcel3.x版本中可以获取到单元格样式吗？",
    "created_at": "2023-05-17T08:19:47Z",
    "closed_at": "2023-05-19T13:14:09Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3205",
    "body": "我有一个数据迁移的需求，其中的一些内容只能通过单元格背景颜色与单元格长宽去定位。在EasyExcel的使用中我并未找到相关的API",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3205/comments",
    "author": "BBDWXH",
    "comments": [
      {
        "user": "gongxuanzhang",
        "created_at": "2023-05-17T09:13:47Z",
        "body": "不可以，以后会增加对应API\r\n目前只能用原生poi"
      }
    ]
  },
  {
    "number": 3187,
    "title": "write方法写入时传的类名必须是子类类名吗，用父类类名可以处理子类属性吗",
    "created_at": "2023-05-12T02:57:41Z",
    "closed_at": "2023-05-19T13:18:43Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3187",
    "body": "write方法写入时传的类名必须是子类类名吗，用父类类名可以处理子类属性吗\r\n\r\n比如 EasyExcel.write(file, ExportData.class)  如果ExportData是父类，但是实际传入的是子类，可以按子类的属性处理吗。\r\n目前我测试的情况没法按照子类处理表头",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3187/comments",
    "author": "sulianheng",
    "comments": [
      {
        "user": "gongxuanzhang",
        "created_at": "2023-05-16T07:24:56Z",
        "body": "目前不支持"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2023-05-19T13:18:41Z",
        "body": "你可以动态用数据的getclass方法当成参数放在write()方法中"
      }
    ]
  },
  {
    "number": 3181,
    "title": "我想在convertToExcelData方法中得到rowIndex和columnIndex",
    "created_at": "2023-05-10T10:10:01Z",
    "closed_at": "2023-05-11T03:25:55Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3181",
    "body": "# AbstractExcelWriteExecutor.java代码\r\n```java\r\n   private WriteCellData<?> doConvert(CellWriteHandlerContext cellWriteHandlerContext) {\r\n        ExcelContentProperty excelContentProperty = cellWriteHandlerContext.getExcelContentProperty();\r\n\r\n        Converter<?> converter = null;\r\n        if (excelContentProperty != null) {\r\n            converter = excelContentProperty.getConverter();\r\n        }\r\n        if (converter == null) {\r\n            // csv is converted to string by default\r\n            if (writeContext.writeWorkbookHolder().getExcelType() == ExcelTypeEnum.CSV) {\r\n                cellWriteHandlerContext.setTargetCellDataType(CellDataTypeEnum.STRING);\r\n            }\r\n            converter = writeContext.currentWriteHolder().converterMap().get(\r\n                ConverterKeyBuild.buildKey(cellWriteHandlerContext.getOriginalFieldClass(),\r\n                    cellWriteHandlerContext.getTargetCellDataType()));\r\n        }\r\n        if (cellWriteHandlerContext.getOriginalValue() == null && !(converter instanceof NullableObjectConverter)) {\r\n            return new WriteCellData<>(CellDataTypeEnum.EMPTY);\r\n        }\r\n        if (converter == null) {\r\n            throw new ExcelWriteDataConvertException(cellWriteHandlerContext,\r\n                \"Can not find 'Converter' support class \" + cellWriteHandlerContext.getOriginalFieldClass()\r\n                    .getSimpleName() + \".\");\r\n        }\r\n        WriteCellData<?> cellData;\r\n        try {\r\n            // 调用convertToExcelData，cellWriteHandlerContext中是有rowIndex和columnIndex的\r\n            cellData = ((Converter<Object>)converter).convertToExcelData(\r\n                new WriteConverterContext<>(cellWriteHandlerContext.getOriginalValue(), excelContentProperty,\r\n                    writeContext));\r\n        } catch (Exception e) {\r\n            throw new ExcelWriteDataConvertException(cellWriteHandlerContext,\r\n                \"Convert data:\" + cellWriteHandlerContext.getOriginalValue() + \" error, at row:\"\r\n                    + cellWriteHandlerContext.getRowIndex(), e);\r\n        }\r\n        if (cellData == null || cellData.getType() == null) {\r\n            throw new ExcelWriteDataConvertException(cellWriteHandlerContext,\r\n                \"Convert data:\" + cellWriteHandlerContext.getOriginalValue()\r\n                    + \" return is null or return type is null, at row:\"\r\n                    + cellWriteHandlerContext.getRowIndex());\r\n        }\r\n        return cellData;\r\n    }\r\n```\r\n# 问题描述\r\n我想在convertToExcelData方法中得到rowIndex和columnIndex，因为有时候要判断哪一行哪一列在进行转换需要做特殊处理。\r\n或者还有什么其他方法可以得到rowIndex和columnIndex。",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3181/comments",
    "author": "leeovo1102",
    "comments": [
      {
        "user": "gongxuanzhang",
        "created_at": "2023-05-11T01:43:58Z",
        "body": "设置的时候放在ThreadLocal或者自己用个包装类存上下文吧"
      },
      {
        "user": "leeovo1102",
        "created_at": "2023-05-11T03:25:35Z",
        "body": "> 设置的时候放在ThreadLocal或者自己用个包装类存上下文吧\r\n\r\n"
      }
    ]
  },
  {
    "number": 3167,
    "title": "同样用XSSFWorkbook创建单元格，为何easyExcel比直接使用poi创建快很多",
    "created_at": "2023-05-04T09:58:46Z",
    "closed_at": "2024-07-31T01:18:31Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3167",
    "body": "1.直接使用poi api创建：\r\nString templateFileName =\r\nTestFileUtil.getPath() + \"demo\" + File.separator + \"fill\" + File.separator + \"list.xlsx\";\r\n\r\n    byte[] templateFileByte = FileUtils.readFileToByteArray(new File(templateFileName));\r\n    Workbook workbook = new XSSFWorkbook(new ByteArrayInputStream(templateFileByte));\r\n    Sheet currentSheet = workbook.getSheetAt(0);\r\n\r\n    for(int i=0;i<100000;i++){\r\n        Row row = currentSheet.createRow(i+2);\r\n        for(int j=0;j<10;j++){\r\n            long start = System.nanoTime();\r\n            Cell cell = row.createCell(j);\r\n            cell.setCellValue(i+\":\"+j);\r\n            System.out.println((i + \":\" + j)+\"::\"+ (System.nanoTime() - start));\r\n        }\r\n    }\r\n2.使用easyExcel创建\r\nString templateFileName =\r\nTestFileUtil.getPath() + \"demo\" + File.separator + \"fill\" + File.separator + \"1.xlsx\";\r\n\r\n    // 方案1 一下子全部放到内存里面 并填充\r\n    String fileName = TestFileUtil.getPath() + \"listFill\" + System.currentTimeMillis() + \".xlsx\";\r\n    // 这里 会填充到第一个sheet， 然后文件流会自动关闭\r\n    EasyExcel.write(new FileOutputStream(new File(fileName))).withTemplate(new FileInputStream(new File(templateFileName))).sheet().doFill(data1());\r\neasyExcel创建单元格：\r\nprivate Cell createCellIfNecessary(Row row, Integer lastColumnIndex,\r\nCellWriteHandlerContext cellWriteHandlerContext) {\r\n\r\n    Cell cell = row.getCell(lastColumnIndex);\r\n\r\n    if (cell != null) {\r\n        return cell;\r\n    }\r\n    WriteHandlerUtils.beforeCellCreate(cellWriteHandlerContext);\r\n    long start = System.nanoTime();\r\n    cell = row.createCell(lastColumnIndex);\r\n    System.out.println(Thread.currentThread().getName() + \":\" +System.currentTimeMillis() + \":\" +(System.nanoTime() - start));\r\n\r\n    cellWriteHandlerContext.setCell(cell);\r\n\r\n    WriteHandlerUtils.afterCellCreate(cellWriteHandlerContext);\r\n    return cell;\r\n}\r\n问题：创建cell底层都是调用了poi的api：row.createCell(columnIndex),为何耗时相关了1个数量级，直接使用poi创建耗时是easyExcel的10倍,求解",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3167/comments",
    "author": "duanyong0413",
    "comments": [
      {
        "user": "gongxuanzhang",
        "created_at": "2023-05-04T11:01:08Z",
        "body": "记得之前回复过你呀\r\nSXSSFWorkbook\r\n不是XSSFWorkbook"
      },
      {
        "user": "duanyong0413",
        "created_at": "2023-05-05T08:11:04Z",
        "body": "> 记得之前回复过你呀 SXSSFWorkbook 不是XSSFWorkbook\r\n\r\n我也回复了你的回复，之后就没下文了，我调整了参数就是为了做比较，代码我上面也贴了，同样都是使用的XSSFWorkbook，但耗时就是不一样的，我debug代码看了的，拜托请细看"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2024-07-19T06:18:50Z",
        "body": "你好，我们发现此Issue已经超过三个月没有活动了，为了更好的帮助您解决问题，我们将在两周后关闭此Issue，如果您仍然有问题，请在两周内内回复此Issue，谢谢！如果您已经解决或者不需要帮助，请忽略此消息。"
      }
    ]
  },
  {
    "number": 3160,
    "title": "导出少量数据等待时间过长",
    "created_at": "2023-05-04T02:36:25Z",
    "closed_at": "2024-07-31T01:18:32Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3160",
    "body": "使用的是若依框架 easyexcel 是 2.2.11 导出数据的时候发现 addContent 里的方法耗时很多 1000条数据需要一分钟 查询数据用了 900ms 这是框架的问题吗 还是有别的解决方案呢\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3160/comments",
    "author": "lkcjjf",
    "comments": [
      {
        "user": "gongxuanzhang",
        "created_at": "2023-05-04T03:07:36Z",
        "body": "查询是数据库的职责，和excel没关系的"
      },
      {
        "user": "lkcjjf",
        "created_at": "2023-05-04T03:14:24Z",
        "body": "> \r\n\r\n对呀 我的意思是已经查出来了然后在生成excel的时候add那个方法比较慢 这是什么原因呢"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2023-06-11T06:16:00Z",
        "body": "这个得上代码看，这么说有点抽象"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2024-07-19T06:18:51Z",
        "body": "你好，我们发现此Issue已经超过三个月没有活动了，为了更好的帮助您解决问题，我们将在两周后关闭此Issue，如果您仍然有问题，请在两周内内回复此Issue，谢谢！如果您已经解决或者不需要帮助，请忽略此消息。"
      }
    ]
  },
  {
    "number": 3149,
    "title": "求解：同样用XSSFWorkbook，为何easyExcel创建1个单元格速度比直接使用poi创建1个单元格快很多",
    "created_at": "2023-04-27T09:40:29Z",
    "closed_at": "2024-07-31T01:18:34Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3149",
    "body": "1.直接使用poi api创建：\r\n  String templateFileName =\r\n            TestFileUtil.getPath() + \"demo\" + File.separator + \"fill\" + File.separator + \"list.xlsx\";\r\n\r\n        byte[] templateFileByte = FileUtils.readFileToByteArray(new File(templateFileName));\r\n        Workbook workbook = new XSSFWorkbook(new ByteArrayInputStream(templateFileByte));\r\n        Sheet currentSheet = workbook.getSheetAt(0);\r\n\r\n        for(int i=0;i<100000;i++){\r\n            Row row = currentSheet.createRow(i+2);\r\n            for(int j=0;j<10;j++){\r\n                long start = System.nanoTime();\r\n                Cell cell = row.createCell(j);\r\n                cell.setCellValue(i+\":\"+j);\r\n                System.out.println((i + \":\" + j)+\"::\"+ (System.nanoTime() - start));\r\n            }\r\n        }\r\n\r\n2.使用easyExcel创建\r\nString templateFileName =\r\n            TestFileUtil.getPath() + \"demo\" + File.separator + \"fill\" + File.separator + \"1.xlsx\";\r\n\r\n        // 方案1 一下子全部放到内存里面 并填充\r\n        String fileName = TestFileUtil.getPath() + \"listFill\" + System.currentTimeMillis() + \".xlsx\";\r\n        // 这里 会填充到第一个sheet， 然后文件流会自动关闭\r\n        EasyExcel.write(new FileOutputStream(new File(fileName))).withTemplate(new FileInputStream(new File(templateFileName))).sheet().doFill(data1());\r\n\r\neasyExcel创建单元格：\r\n    private Cell createCellIfNecessary(Row row, Integer lastColumnIndex,\r\n        CellWriteHandlerContext cellWriteHandlerContext) {\r\n\r\n        Cell cell = row.getCell(lastColumnIndex);\r\n\r\n        if (cell != null) {\r\n            return cell;\r\n        }\r\n        WriteHandlerUtils.beforeCellCreate(cellWriteHandlerContext);\r\n        long start = System.nanoTime();\r\n        cell = row.createCell(lastColumnIndex);\r\n        System.out.println(Thread.currentThread().getName() + \":\" +System.currentTimeMillis() + \":\" +(System.nanoTime() - start));\r\n\r\n        cellWriteHandlerContext.setCell(cell);\r\n\r\n        WriteHandlerUtils.afterCellCreate(cellWriteHandlerContext);\r\n        return cell;\r\n    }\r\n\r\n问题：创建cell底层都是调用了poi的api,为何耗时相关了1个数量级，直接使用poi创建耗时是easyExcel的10倍,求解\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3149/comments",
    "author": "duanyong0413",
    "comments": [
      {
        "user": "gongxuanzhang",
        "created_at": "2023-04-28T01:44:56Z",
        "body": "XSSFWorkbook 和SXSSFWorkbook 的区别 都是poi"
      },
      {
        "user": "duanyong0413",
        "created_at": "2023-04-28T03:14:43Z",
        "body": "> XSSFWorkbook 和SXSSFWorkbook 的区别 都是poi\r\n\r\n不是的 ,我调了参数，都是使用的XSSFWorkbook ，底层创建单元格调用都一样，不知为何耗时相差这么大"
      },
      {
        "user": "duanyong0413",
        "created_at": "2023-05-04T01:29:54Z",
        "body": "> XSSFWorkbook 和SXSSFWorkbook 的区别 都是poi\r\n\r\n"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2024-07-19T06:18:53Z",
        "body": "你好，我们发现此Issue已经超过三个月没有活动了，为了更好的帮助您解决问题，我们将在两周后关闭此Issue，如果您仍然有问题，请在两周内内回复此Issue，谢谢！如果您已经解决或者不需要帮助，请忽略此消息。"
      }
    ]
  },
  {
    "number": 3147,
    "title": "求解：easyexcel读取多个sheet，48多w条数据的excel，耗时很长。",
    "created_at": "2023-04-26T11:12:53Z",
    "closed_at": "2024-07-31T01:18:34Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3147",
    "body": "# 异常代码\r\n```java\r\n  @Test\r\n    public void testReadBigDataExcel2() {\r\n        File targetFile = new File(\"C:\\\\Users\\\\Administrator\\\\Desktop\\\\能链2月.xlsx\");\r\n        long begin = System.currentTimeMillis();\r\n        List<ReceiptBillDataExcel> list1 = new ArrayList<>();\r\n        List<ReceiptBillDataExcel> list2 = new ArrayList<>();\r\n        ExcelReader excelReader = EasyExcel.read(targetFile).build();\r\n        long finalBegin1 = begin;\r\n        ReadSheet readSheet = EasyExcel.readSheet(0).head(ReceiptBillDataExcel.class).registerReadListener(new AnalysisEventListener<ReceiptBillDataExcel>() {\r\n\r\n\r\n            @Override\r\n            public void invokeHeadMap(Map<Integer, String> headMap, AnalysisContext context) {\r\n            }\r\n\r\n            @Override\r\n            public void invoke(ReceiptBillDataExcel data, AnalysisContext context) {\r\n                list1.add(data);\r\n            }\r\n\r\n            @Override\r\n            public void doAfterAllAnalysed(AnalysisContext context) {\r\n                Integer approximateTotalRowNumber = context.readSheetHolder().getApproximateTotalRowNumber();\r\n                System.out.println(\"解析excel完成\" + approximateTotalRowNumber + \"条,耗时\" + (System.currentTimeMillis() - finalBegin1) + \"ms\");\r\n            }\r\n\r\n        }).build();\r\n\r\n        begin = System.currentTimeMillis();\r\n        long finalBegin = begin;\r\n        ReadSheet readSheet2 = EasyExcel.readSheet(1).head(ReceiptBillDataExcel.class).registerReadListener(new AnalysisEventListener<ReceiptBillDataExcel>() {\r\n\r\n\r\n            @Override\r\n            public void invokeHeadMap(Map<Integer, String> headMap, AnalysisContext context) {\r\n            }\r\n\r\n            @Override\r\n            public void invoke(ReceiptBillDataExcel data, AnalysisContext context) {\r\n                list2.add(data);\r\n            }\r\n\r\n            @Override\r\n            public void doAfterAllAnalysed(AnalysisContext context) {\r\n                Integer approximateTotalRowNumber = context.readSheetHolder().getApproximateTotalRowNumber();\r\n                System.out.println(\"解析excel完成\" + approximateTotalRowNumber + \"条,耗时\" + (System.currentTimeMillis() - finalBegin) + \"ms\");\r\n            }\r\n\r\n        }).build();\r\n\r\n        // 只读取第二个sheet\r\n        excelReader.read(readSheet2);\r\n        // 两个sheet一起读\r\n        //excelReader.read(readSheet, readSheet2);\r\n        excelReader.finish();\r\n    }\r\n```\r\n# 异常提示\r\n同一个excel文件，读取相同数量、数据相近（48w左右）的不同sheet，耗时翻了很多倍。\r\n解析excel完成486635条,耗时10034ms\r\n解析excel完成485926条,耗时213841ms\r\n# 问题描述\r\n有一个excel，里面有两个sheet页，每个sheet页都有48w条数据，每行共有5列。第一个sheet读取耗时10s，第二个sheet读取至少4分钟。甚至我只读取excel的第二个sheet，耗时也很长。",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3147/comments",
    "author": "Y-Stone",
    "comments": [
      {
        "user": "Y-Stone",
        "created_at": "2023-04-26T11:13:13Z",
        "body": "EasyExcel版本：2.2.5"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2023-04-26T11:27:30Z",
        "body": "最新有加速\r\n\r\n\r\n\r\n---原始邮件---\r\n发件人: ***@***.***&gt;\r\n发送时间: 2023年4月26日(周三) 晚上7:13\r\n收件人: ***@***.***&gt;;\r\n抄送: ***@***.***&gt;;\r\n主题: [alibaba/easyexcel] easyexcel读取48多w条数据excel时间很长 (Issue #3147)\r\n\r\n\r\n\r\n\r\n \r\n异常代码\r\n   @Test     public void testReadBigDataExcel2() {         File targetFile = new File(\"C:\\\\Users\\\\Administrator\\\\Desktop\\\\能链2月.xlsx\");         long begin = System.currentTimeMillis();         List<ReceiptBillDataExcel&gt; list1 = new ArrayList<&gt;();         List<ReceiptBillDataExcel&gt; list2 = new ArrayList<&gt;();         ExcelReader excelReader = EasyExcel.read(targetFile).build();         long finalBegin1 = begin;         ReadSheet readSheet = EasyExcel.readSheet(0).head(ReceiptBillDataExcel.class).registerReadListener(new AnalysisEventListener<ReceiptBillDataExcel&gt;() {             @Override             public void invokeHeadMap(Map<Integer, String&gt; headMap, AnalysisContext context) {             }             @Override             public void invoke(ReceiptBillDataExcel data, AnalysisContext context) {                 list1.add(data);             }             @Override             public void doAfterAllAnalysed(AnalysisContext context) {                 Integer approximateTotalRowNumber = context.readSheetHolder().getApproximateTotalRowNumber();                 System.out.println(\"解析excel完成\" + approximateTotalRowNumber + \"条,耗时\" + (System.currentTimeMillis() - finalBegin1) + \"ms\");             }         }).build();         begin = System.currentTimeMillis();         long finalBegin = begin;         ReadSheet readSheet2 = EasyExcel.readSheet(1).head(ReceiptBillDataExcel.class).registerReadListener(new AnalysisEventListener<ReceiptBillDataExcel&gt;() {             @Override             public void invokeHeadMap(Map<Integer, String&gt; headMap, AnalysisContext context) {             }             @Override             public void invoke(ReceiptBillDataExcel data, AnalysisContext context) {                 list2.add(data);             }             @Override             public void doAfterAllAnalysed(AnalysisContext context) {                 Integer approximateTotalRowNumber = context.readSheetHolder().getApproximateTotalRowNumber();                 System.out.println(\"解析excel完成\" + approximateTotalRowNumber + \"条,耗时\" + (System.currentTimeMillis() - finalBegin) + \"ms\");             }         }).build();         // 只读取第二个sheet         excelReader.read(readSheet2);         // 两个sheet一起读         //excelReader.read(readSheet, readSheet2);         excelReader.finish();     }\r\n \r\n异常提示\r\n \r\n同一个excel文件，读取相同数量、数据相近（48w左右）的不同sheet，耗时翻了很多倍。\r\n 解析excel完成486635条,耗时10034ms\r\n 解析excel完成485926条,耗时213841ms\r\n \r\n问题描述\r\n \r\n有一个excel，里面有两个sheet页，每个sheet页都有48w条数据，每行共有5列。第一个sheet读取耗时10s，第二个sheet读取至少4分钟。甚至我只读取excel的第二个sheet，耗时也很长。\r\n \r\n—\r\nReply to this email directly, view it on GitHub, or unsubscribe.\r\nYou are receiving this because you are subscribed to this thread.Message ID: ***@***.***&gt;"
      },
      {
        "user": "Y-Stone",
        "created_at": "2023-04-26T11:55:56Z",
        "body": "> 最新有加速\r\n> […](#)\r\n> ---原始邮件--- 发件人: ***@***.***&gt; 发送时间: 2023年4月26日(周三) 晚上7:13 收件人: ***@***.***&gt;; 抄送: ***@***.***&gt;; 主题: [alibaba/easyexcel] easyexcel读取48多w条数据excel时间很长 (Issue #3147) 异常代码 @test public void testReadBigDataExcel2() { File targetFile = new File(\"C:\\\\Users\\\\Administrator\\\\Desktop\\\\能链2月.xlsx\"); long begin = System.currentTimeMillis(); List<ReceiptBillDataExcel&gt; list1 = new ArrayList<&gt;(); List<ReceiptBillDataExcel&gt; list2 = new ArrayList<&gt;(); ExcelReader excelReader = EasyExcel.read(targetFile).build(); long finalBegin1 = begin; ReadSheet readSheet = EasyExcel.readSheet(0).head(ReceiptBillDataExcel.class).registerReadListener(new AnalysisEventListener<ReceiptBillDataExcel&gt;() { @OverRide public void invokeHeadMap(Map<Integer, String&gt; headMap, AnalysisContext context) { } @OverRide public void invoke(ReceiptBillDataExcel data, AnalysisContext context) { list1.add(data); } @OverRide public void doAfterAllAnalysed(AnalysisContext context) { Integer approximateTotalRowNumber = context.readSheetHolder().getApproximateTotalRowNumber(); System.out.println(\"解析excel完成\" + approximateTotalRowNumber + \"条,耗时\" + (System.currentTimeMillis() - finalBegin1) + \"ms\"); } }).build(); begin = System.currentTimeMillis(); long finalBegin = begin; ReadSheet readSheet2 = EasyExcel.readSheet(1).head(ReceiptBillDataExcel.class).registerReadListener(new AnalysisEventListener<ReceiptBillDataExcel&gt;() { @OverRide public void invokeHeadMap(Map<Integer, String&gt; headMap, AnalysisContext context) { } @OverRide public void invoke(ReceiptBillDataExcel data, AnalysisContext context) { list2.add(data); } @OverRide public void doAfterAllAnalysed(AnalysisContext context) { Integer approximateTotalRowNumber = context.readSheetHolder().getApproximateTotalRowNumber(); System.out.println(\"解析excel完成\" + approximateTotalRowNumber + \"条,耗时\" + (System.currentTimeMillis() - finalBegin) + \"ms\"); } }).build(); // 只读取第二个sheet excelReader.read(readSheet2); // 两个sheet一起读 //excelReader.read(readSheet, readSheet2); excelReader.finish(); } 异常提示 同一个excel文件，读取相同数量、数据相近（48w左右）的不同sheet，耗时翻了很多倍。 解析excel完成486635条,耗时10034ms 解析excel完成485926条,耗时213841ms 问题描述 有一个excel，里面有两个sheet页，每个sheet页都有48w条数据，每行共有5列。第一个sheet读取耗时10s，第二个sheet读取至少4分钟。甚至我只读取excel的第二个sheet，耗时也很长。 — Reply to this email directly, view it on GitHub, or unsubscribe. You are receiving this because you are subscribed to this thread.Message ID: ***@***.***&gt;\r\n\r\n什么加速？"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2024-07-19T06:18:54Z",
        "body": "你好，我们发现此Issue已经超过三个月没有活动了，为了更好的帮助您解决问题，我们将在两周后关闭此Issue，如果您仍然有问题，请在两周内内回复此Issue，谢谢！如果您已经解决或者不需要帮助，请忽略此消息。"
      }
    ]
  },
  {
    "number": 3146,
    "title": "easyExcel 3.x 一对多的数据集导出",
    "created_at": "2023-04-26T07:48:01Z",
    "closed_at": "2023-04-27T01:17:00Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3146",
    "body": "\r\n# 问题描述\r\neasyExcel 3.x 能不能支持一个pojo对象中有List<T>的一对多的数据集导出呢",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3146/comments",
    "author": "xiangqingli",
    "comments": [
      {
        "user": "gongxuanzhang",
        "created_at": "2023-04-26T07:51:04Z",
        "body": "暂不支持"
      }
    ]
  },
  {
    "number": 3115,
    "title": "模板导出 两个list列表数据中间的字段及值不显示？？？",
    "created_at": "2023-04-17T04:01:01Z",
    "closed_at": "2023-05-11T01:47:07Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3115",
    "body": "File file = new File(fileWay.getWindows() + fileMkdirAddress+fileName+ \".xlsx\");\r\n        FileOutputStream outputStream = new FileOutputStream(file);\r\n        ExcelWriter excelWriter = EasyExcel.write(outputStream).withTemplate(templateFileInputStream).build();\r\n        try {\r\n            WriteSheet writeSheet = EasyExcel.writerSheet(\"sheet1\").build();\r\n            FillConfig fillConfig = FillConfig.builder().forceNewRow(Boolean.TRUE).build();\r\n            //3，往sheet表中填充数据：\r\n            List<Map<String,String>> list1 = new ArrayList<>();\r\n            Map<String,String> map1 = new HashMap<>();\r\n            map1.put(\"num\", \"1\");\r\n            map1.put(\"name\", \"项目成员1\");\r\n            map1.put(\"duty\", \"项目负责人\");\r\n            map1.put(\"attendanceDays\", \"2\");\r\n            map1.put(\"jobCoefficient\", \"1\");\r\n            map1.put(\"adjustCoefficient\", \"0.1\");\r\n            map1.put(\"finalDays\", \"1\");\r\n            list1.add(map1);\r\n            Map<String,String> map2 = new HashMap<>();\r\n            map2.put(\"num\", \"2\");\r\n            map2.put(\"name\", \"项目成员2\");\r\n            map2.put(\"duty\", \"主管\");\r\n            map2.put(\"attendanceDays\", \"3\");\r\n            map2.put(\"jobCoefficient\", \"0.8\");\r\n            map2.put(\"adjustCoefficient\", \"0.1\");\r\n            map2.put(\"finalDays\", \"2\");\r\n            list1.add(map2);\r\n            excelWriter.fill(new FillWrapper(\"data1\",list1), fillConfig, writeSheet);\r\n            List<Map<String,String>> list2 = new ArrayList<>();\r\n            Map<String,String> map3 = new HashMap<>();\r\n            map3.put(\"externalNum\", \"1\");\r\n            map3.put(\"externalName\", \"项目成员3\");\r\n            map3.put(\"externalDuty\", \"项目负责人\");\r\n            map3.put(\"externalAttendanceDays\", \"2\");\r\n            map3.put(\"externalJobCoefficient\", \"1\");\r\n            map3.put(\"externalAdjustCoefficient\", \"0.1\");\r\n            map3.put(\"externalFinalDays\", \"1\");\r\n            list2.add(map3);\r\n            Map<String,String> map4 = new HashMap<>();\r\n            map4.put(\"externalNum\", \"2\");\r\n            map4.put(\"externalName\", \"项目成员4\");\r\n            map4.put(\"externalDuty\", \"专员\");\r\n            map4.put(\"externalAttendanceDays\", \"2\");\r\n            map4.put(\"externalJobCoefficient\", \"0.8\");\r\n            map4.put(\"externalAdjustCoefficient\", \"0.1\");\r\n            map4.put(\"externalFinalDays\", \"1\");\r\n            list2.add(map4);\r\n            excelWriter.fill(new FillWrapper(\"data2\",list2), fillConfig, writeSheet);\r\n            Map<String, String> map = new HashMap<>();\r\n            map.put(\"projectName\", \"XXXXXX项目\");\r\n            map.put(\"projectNum\", \"xxxxx-01\");\r\n            map.put(\"customerName\", \"张三\");\r\n            map.put(\"customerNum\", \"xxxxx-customer-01\");\r\n            map.put(\"kqStartTime\", \"2023-04-17\");\r\n            map.put(\"kqEndTime\", \"2023-04-21\");\r\n            map.put(\"xmxntjNum\", \"xxxxxx项目-效能01\");\r\n            map.put(\"sumDays\", \"3\");               //  模板上不显示\r\n            map.put(\"filledPeople\", \"张三\");     //  模板上不显示\r\n            map.put(\"filledTime\", \"2023-04-19\");        //  模板上不显示\r\n            map.put(\"effectPeople\", \"李四\");              //  模板上不显示\r\n            map.put(\"effectTime\", \"2023-04-20\");        //  模板上不显示\r\n            map.put(\"externalSumDays\", \"3\");           //  模板上不显示\r\n            excelWriter.fill(entry, fillConfig, writeSheet);\r\n            ",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3115/comments",
    "author": "Guanzeyu96",
    "comments": [
      {
        "user": "gongxuanzhang",
        "created_at": "2023-04-17T09:43:16Z",
        "body": "模板发一下"
      },
      {
        "user": "Guanzeyu96",
        "created_at": "2023-04-17T09:49:57Z",
        "body": "\n\n\n我把 FillConfig fillConfig = FillConfig.builder().forceNewRow(Boolean.TRUE).build(); 这个去掉就好了 不知道怎么回事 但应该要加上去的啊\n\n\n\n\n\n\n\n\n\n\n\n\n\n在 2023-04-17 17:43:27，\"gongxuanzhang\" ***@***.***> 写道：\n\n模板发一下\n\n—\nReply to this email directly, view it on GitHub, or unsubscribe.\nYou are receiving this because you authored the thread.Message ID: ***@***.***>"
      }
    ]
  },
  {
    "number": 3109,
    "title": "读取excel里面点击单元格才能看到的内容",
    "created_at": "2023-04-14T07:38:14Z",
    "closed_at": "2023-04-15T11:07:03Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3109",
    "body": "        //文件解析\r\n        ExcelReader build = EasyExcelFactory.read(fileInputStream,listener)\r\n                //文件类型\r\n                .excelType(fileAttributes.getExcelTypeEnum())\r\n                //编码\r\n                .charset(fileAttributes.getCharset())\r\n                //表头所在行\r\n                .headRowNumber(10)\r\n                //不忽略空行\r\n                .ignoreEmptyRow(false)\r\n                .readDefaultReturn(ReadDefaultReturnEnum.READ_CELL_DATA)\r\n                .build();\r\n    设置了ReadDefaultReturnEnum.READ_CELL_DATA，但是监听的返回的时间类型还是BigDecimal\r\n    public void invokeHead(Map<Integer, ReadCellData<?>> headMaps, AnalysisContext context)\r\n    单元格不点击内容是2023/4/12 11:20，点击后2023/4/12 11:20:30\r\n    版本是最新版3.2.1",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3109/comments",
    "author": "unclexuya",
    "comments": [
      {
        "user": "gongxuanzhang",
        "created_at": "2023-04-15T06:30:48Z",
        "body": "这个应该是你excel设置有关把。\r\n你可以试试修改poi参数有没有改善，如果可以的话直接写在Writehandler中就好"
      },
      {
        "user": "unclexuya",
        "created_at": "2023-04-15T06:35:02Z",
        "body": "好的"
      }
    ]
  },
  {
    "number": 3096,
    "title": "填充超链接",
    "created_at": "2023-04-09T02:59:05Z",
    "closed_at": "2023-04-09T12:02:07Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3096",
    "body": "在填充模板的时候怎么设置填充内容为超链接呢",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3096/comments",
    "author": "ppppppcl",
    "comments": [
      {
        "user": "gongxuanzhang",
        "created_at": "2023-04-09T06:32:21Z",
        "body": "填充模板需要自定CellWriteHandle中手动加入"
      },
      {
        "user": "ppppppcl",
        "created_at": "2023-04-09T11:10:10Z",
        "body": "> 填充模板需要自定CellWriteHandle中手动加入\r\n\r\n感谢，设置成功了"
      },
      {
        "user": "ppppppcl",
        "created_at": "2023-04-09T11:10:17Z",
        "body": "> 填充模板需要自定CellWriteHandle中手动加入\r\n\r\n感谢，设置成功了"
      }
    ]
  },
  {
    "number": 3078,
    "title": "如何实现从多个excel模板(包含一个sheet)，填充到包含多个sheet的单个excel？有没有代码可供参考",
    "created_at": "2023-03-27T12:04:06Z",
    "closed_at": "2023-04-02T00:30:36Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3078",
    "body": null,
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3078/comments",
    "author": "chushiyan",
    "comments": [
      {
        "user": "lonecloud",
        "created_at": "2023-03-28T18:19:32Z",
        "body": "这种是否可以将多个模板合并到一个模板上呢？然后通过模板进行填充，例子可参考`com.alibaba.easyexcel.test.temp.fill.FillTempTest#compositeFill`"
      },
      {
        "user": "chushiyan",
        "created_at": "2023-04-02T00:30:17Z",
        "body": "> \r\n上百个模板，合并到一个模板不好维护。目前已经找到其他方案了。\r\n\r\n"
      }
    ]
  },
  {
    "number": 3075,
    "title": "java.io.IOException: (startline 4) EOF reached before encapsulated token finished",
    "created_at": "2023-03-27T03:30:24Z",
    "closed_at": "2023-03-28T12:23:30Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3075",
    "body": "java.lang.IllegalStateException: IOException reading next record: java.io.IOException: (startline 4) EOF reached before encapsulated token finished\r\n\tat org.apache.commons.csv.CSVParser$CSVRecordIterator.getNextRecord(CSVParser.java:145)\r\n\tat org.apache.commons.csv.CSVParser$CSVRecordIterator.hasNext(CSVParser.java:155)\r\n\tat com.alibaba.excel.analysis.csv.CsvExcelReadExecutor.execute(CsvExcelReadExecutor.java:73)\r\n\tat com.alibaba.excel.analysis.ExcelAnalyserImpl.analysis(ExcelAnalyserImpl.java:124)\r\n\tat com.alibaba.excel.ExcelReader.read(ExcelReader.java:63)\r\n\tat com.alibaba.excel.ExcelReader.read(ExcelReader.java:53)\r\n\tat com.alibaba.excel.read.builder.ExcelReaderSheetBuilder.doRead(ExcelReaderSheetBuilder.java:65)",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3075/comments",
    "author": "ttangyang",
    "comments": [
      {
        "user": "gongxuanzhang",
        "created_at": "2023-03-28T07:21:51Z",
        "body": "你想问什么"
      },
      {
        "user": "ttangyang",
        "created_at": "2023-03-28T07:25:32Z",
        "body": "这个bug有办法解决吗？就是读取csv文件的时候，有行数数据有问题，缺少双引号。数据如：\"\t2023-03-21 00:00:00\",\"\t2-share\",\"\t127.18\",\"\tSJZ-TTF-share\",\"\t18\",\"\t1  最后这个1这里少了双引号，数据解析不出来了，怎么能让它跳过这行继续执行"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2023-03-28T07:32:29Z",
        "body": "你csv格式不对解析失败 把csv整理好再解析啊 这不是bug\r\n异常处理在 readlistener的onException方法中解决"
      },
      {
        "user": "ttangyang",
        "created_at": "2023-03-28T07:38:30Z",
        "body": "我试了，不会进这个onException方法，直接中断了。我知道是格式数据问题，这个是从服务器直接下载的文件，不能因为这一行数据的问题，整个文件数据都不读了，看有没有直接跳过这行不管，继续往下读的解决办法\r\n"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2023-03-28T07:55:54Z",
        "body": "csv解析是用apache的csvParser解析的  报错了貌似没什么办法  要改源码"
      },
      {
        "user": "ttangyang",
        "created_at": "2023-03-28T07:58:41Z",
        "body": "好的，谢谢"
      }
    ]
  },
  {
    "number": 3070,
    "title": "导出excel, 对于包含图片的对象, excel生成时间太长",
    "created_at": "2023-03-24T07:58:51Z",
    "closed_at": "2023-03-28T12:23:24Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3070",
    "body": "一千行的数据, 每个图片的大小大概3kb, 生成excel的时间需要100秒作用, 有什么可以优化的方案么? ",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3070/comments",
    "author": "panhui0120",
    "comments": [
      {
        "user": "gongxuanzhang",
        "created_at": "2023-03-24T09:28:19Z",
        "body": "没什么太好办法"
      },
      {
        "user": "panhui0120",
        "created_at": "2023-03-24T12:15:23Z",
        "body": "> 没什么太好办法\r\n\r\n这么难0.0 大佬遇到过类似情况么? "
      },
      {
        "user": "songhn",
        "created_at": "2023-03-27T02:25:12Z",
        "body": "没有好办法，后台生成导出记录后异步导出吧，前端查询导出记录状态下载文件。"
      }
    ]
  },
  {
    "number": 3065,
    "title": "关于重复多次写入问题",
    "created_at": "2023-03-23T01:04:17Z",
    "closed_at": "2023-03-31T03:12:42Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3065",
    "body": "  一次性导出  EasyExcel.write(response.getOutputStream(),DemoData.class).sheet(\"sheet1\").doWrite(data);\r\n这样写可以正常导出\r\n但是通过循环分页查询数据后导出的文件就报错\r\n\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3065/comments",
    "author": "CanaanWang",
    "comments": [
      {
        "user": "gongxuanzhang",
        "created_at": "2023-03-23T05:28:04Z",
        "body": "报什么错，什么是循环查询，上代码上异常"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2023-03-31T03:12:42Z",
        "body": "不知道您是否已经通过其他渠道解决该问题？我们先暂时关闭这个问题，如果还存在问题请重新Reopen这个issue"
      }
    ]
  },
  {
    "number": 3049,
    "title": "支持的格式",
    "created_at": "2023-03-15T03:31:56Z",
    "closed_at": "2023-03-15T05:14:17Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3049",
    "body": "excel 有 xlsx， xls， xlsm， xlsb 等格式，都支持哪些格式",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3049/comments",
    "author": "xinjiboy1234",
    "comments": [
      {
        "user": "gongxuanzhang",
        "created_at": "2023-03-15T03:47:47Z",
        "body": "xlsx xls csv"
      }
    ]
  },
  {
    "number": 3043,
    "title": "怎么获取单元格的颜色，有哪位知道吗？poi是获取cellstyle,但是翻了easyexcel好像根本获取不到",
    "created_at": "2023-03-13T10:58:27Z",
    "closed_at": "2023-03-14T11:52:41Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3043",
    "body": "# 问题描述\r\n怎么获取单元格的颜色，有哪位知道吗？poi是获取cellstyle,但是翻了easyexcel好像根本获取不到\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3043/comments",
    "author": "jf66882020",
    "comments": [
      {
        "user": "gongxuanzhang",
        "created_at": "2023-03-13T11:55:33Z",
        "body": "读的时候只能映射实体"
      },
      {
        "user": "jf66882020",
        "created_at": "2023-03-13T12:10:17Z",
        "body": "有没有办法读到单元格的样式呢？"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2023-03-13T16:10:41Z",
        "body": " context.readRowHolder().getCellMap()\r\n可以在读取的时候用这个方法拿到cell"
      },
      {
        "user": "jf66882020",
        "created_at": "2023-03-14T02:09:40Z",
        "body": "拿到cell后，只有rowindex和columnindex,没有其他东西"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2023-03-14T02:15:37Z",
        "body": "没办法读到样式，只能读到扩展信息比如超链接等  \r\n下个版本会增加"
      },
      {
        "user": "jf66882020",
        "created_at": "2023-03-14T02:17:02Z",
        "body": "哦哦，能否通过获取easyexcel包装到的HssfRow获取到样式呢\r\n"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2023-03-14T02:19:06Z",
        "body": "那是可以的,但是可能需要一番功夫去获取。\r\nhssf还有戏  xssf肯定没戏"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2023-03-14T11:52:41Z",
        "body": "不知道您是否已经解决该问题？我们先暂时关闭这个问题，如果还存在问题请重新Reopen这个issue"
      },
      {
        "user": "xuyoudun",
        "created_at": "2023-03-31T09:07:25Z",
        "body": "同样的疑问，API都翻烂了，调试过了，没有办法拿到单元格信息"
      },
      {
        "user": "deaoyi123",
        "created_at": "2025-01-15T09:35:35Z",
        "body": "+1想要获取单元格样式，翻遍了demo和文档，调试了源码，没找到解决办法"
      }
    ]
  },
  {
    "number": 3040,
    "title": "请问如何用easyExcel读取固定单元格的值，譬如A3单元格。现在有实体类了，但是未找到这种读取赋值方法。。",
    "created_at": "2023-03-13T05:39:25Z",
    "closed_at": "2023-03-14T02:36:08Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3040",
    "body": "请问如何用easyExcel读取固定单元格的值，譬如A3单元格。现在有实体类了，但是未找到这种读取赋值方法。。",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3040/comments",
    "author": "littlehBinBin",
    "comments": [
      {
        "user": "gongxuanzhang",
        "created_at": "2023-03-13T07:46:30Z",
        "body": "在监听器中可以通过context.readRowHolder().getRowIndex() 拿到行号\r\n数据都在上下文和实体中"
      }
    ]
  },
  {
    "number": 3029,
    "title": "文件下载无法根据模板文件类型判断输出格式",
    "created_at": "2023-03-07T03:12:01Z",
    "closed_at": "2023-03-07T03:49:47Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3029",
    "body": "# 版本\r\n3.2.1\r\n\r\n# 触发场景描述\r\n文件下载，模板文件为xls格式，无法根据withTemplate()指定的模板文件后缀判断格式，默认为xlsx。\r\n\r\n# 触发Bug的代码\r\n```java\r\nEasyExcel.write(response.getOutputStream()).withTemplate(\"xls tpl path\").sheet().doFill(data());\r\n```\r\n# 提示的异常\r\n```\r\norg.apache.poi.openxml4j.exceptions.OLE2NotOfficeXmlFileException: The supplied data appears to be in the OLE2 Format. You are calling the part of POI that deals with OOXML (Office Open XML) Documents. You need to call a different part of POI to process this data (eg HSSF instead of XSSF)\r\n```\r\n# 尝试的解决\r\n需要显式设置类型。\r\n```java\r\nEasyExcel.write(response.getOutputStream()).excelType(ExcelTypeEnum.XLS).withTemplate(\"xls tpl path\").sheet().doFill(data());\r\n```",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3029/comments",
    "author": "handsomestWei",
    "comments": [
      {
        "user": "gongxuanzhang",
        "created_at": "2023-03-07T03:44:58Z",
        "body": "默认xlsx  如果不是就要手动设置\r\n"
      }
    ]
  },
  {
    "number": 3028,
    "title": "easyexcel做数据追加写入时，内存溢出",
    "created_at": "2023-03-07T01:47:42Z",
    "closed_at": "2023-03-08T09:57:40Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3028",
    "body": "数据追加代码如下，非首次写入文件时，使用之前已经写入的文件做模板，进行新数据的追加写入。\r\n\r\n\r\n    public void write(List<Student> students){\r\n        String importFile=\"XXXXXX.xlsx\";\r\n        File file = new File(importFile);\r\n        File tempFile = new File(\"XXXXXXX_temp.xlsx\");\r\n        if (file.exists()){\r\n            // 第二次按照原有格式，不需要表头，追加写入\r\n            EasyExcel.write(file,Student.class).needHead(false).\r\n                    withTemplate(file).file(tempFile).sheet().doWrite(students);\r\n        }else {\r\n            // 第一次写入需要表头\r\n            EasyExcel.write(file,Student.class).sheet().doWrite(students);\r\n        }\r\n        if (tempFile.exists()){\r\n            file.delete();\r\n            tempFile.renameTo(file);\r\n        }\r\n    }\r\n\r\n\r\n\r\n大概文件大小到达10MB左右，总数据条数在10w+时，doWrite方法会报错，报错信息如下：\r\n\r\n`Caused by: java.lang.OutOfMemoryError: Java heap space\r\n at java.util.Arrays.copyOf(Arrays.java:3236) ~[?:1.8.0_202]\r\n at java.io.ByteArrayOutputStream.grow(ByteArrayOutputStream.java:118) ~[?:1.8.0_202]\r\n at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:93) ~[?:1.8.0_202]\r\n at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:153) ~[?:1.8.0_202]\r\n at org.apache.poi.openxml4j.opc.internal.MemoryPackagePartOutputStream.write(MemoryPackagePartOutputStream.java:88) ~[poi-ooxml-4.1.2.jar:4.1.2]\r\n at org.apache.xmlbeans.impl.store.Cursor._save(Cursor.java:590) ~[xmlbeans-3.1.0.jar:?]\r\n at org.apache.xmlbeans.impl.store.Cursor.save(Cursor.java:2544) ~[xmlbeans-3.1.0.jar:?]\r\n at org.apache.xmlbeans.impl.values.XmlObjectBase.save(XmlObjectBase.java:223) ~[xmlbeans-3.1.0.jar:?]\r\n at org.apache.poi.xssf.usermodel.XSSFSheet.write(XSSFSheet.java:3664) ~[poi-ooxml-4.1.2.jar:4.1.2]\r\n at org.apache.poi.xssf.usermodel.XSSFSheet.commit(XSSFSheet.java:3585) ~[poi-ooxml-4.1.2.jar:4.1.2]\r\n at org.apache.poi.ooxml.POIXMLDocumentPart.onSave(POIXMLDocumentPart.java:490) ~[poi-ooxml-4.1.2.jar:4.1.2]\r\n at org.apache.poi.ooxml.POIXMLDocumentPart.onSave(POIXMLDocumentPart.java:495) ~[poi-ooxml-4.1.2.jar:4.1.2]\r\n at org.apache.poi.ooxml.POIXMLDocument.write(POIXMLDocument.java:236) ~[poi-ooxml-4.1.2.jar:4.1.2]\r\n at org.apache.poi.xssf.streaming.SXSSFWorkbook.write(SXSSFWorkbook.java:953) ~[poi-ooxml-4.1.2.jar:4.1.2]\r\n at com.alibaba.excel.context.WriteContextImpl.finish(WriteContextImpl.java:381) ~[easyexcel-core-3.2.1.jar:?]\r\n at com.alibaba.excel.write.ExcelBuilderImpl.finish(ExcelBuilderImpl.java:99) ~[easyexcel-core-3.2.1.jar:?]\r\n at com.alibaba.excel.ExcelWriter.finish(ExcelWriter.java:143) ~[easyexcel-core-3.2.1.jar:?]`\r\n\r\n\r\n使用版本：3.2.1\r\n这种模板追加的方式，是不是会持续把之前已经写入文件的数据加载到内存中？最终造成滚雪球一样的内存开销？\r\n请求大佬出一样真正追加的方法，类似于append，而不是这种rename的方式。",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3028/comments",
    "author": "moonhatred",
    "comments": [
      {
        "user": "zj-as",
        "created_at": "2023-03-07T02:23:21Z",
        "body": "同求"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2023-03-07T07:28:58Z",
        "body": "如果想追加，只能用easyexcel的方式一边读一边写\r\n没什么办法"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2023-03-08T09:57:39Z",
        "body": "不知道您是否已经解决该问题？我们先暂时关闭这个问题，如果还存在问题请重新Reopen这个issue"
      },
      {
        "user": "ZhangDi-d",
        "created_at": "2023-06-01T02:27:12Z",
        "body": "> 如果想追加，只能用easyexcel的方式一边读一边写 没什么办法\r\n\r\n请问有代码示例吗，何为一边读一边写呀？"
      },
      {
        "user": "hausen1012",
        "created_at": "2023-12-16T03:42:44Z",
        "body": "> > 如果想追加，只能用easyexcel的方式一边读一边写 没什么办法\r\n> \r\n> 请问有代码示例吗，何为一边读一边写呀？\r\n\r\n同问"
      }
    ]
  },
  {
    "number": 3020,
    "title": "在使用response.getOutputStream() 来导出excel时，如何获取到最后导出文件的大小",
    "created_at": "2023-03-04T07:19:58Z",
    "closed_at": "2023-03-14T01:07:32Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3020",
    "body": "/**\r\n     * 查询优化的方法\r\n     */\r\n    public void exportExcelByMultithreading(HttpServletResponse response,\r\n                                            ThreadPoolTaskExecutor threadPoolTaskExecutor,\r\n                                            Class<T> pojoClass,\r\n                                            Integer pageSize,\r\n                                            QueryWrapper<T> queryWrapper) throws IOException {\r\n        ServletOutputStream out = getServletOutputStream(response);\r\n//        // 导出文件路径\r\n//        String fileName = \"d:\\\\test.xlsx\";\r\n\r\n        Long count = baseMapper.selectCount(queryWrapper);\r\n        Long sheetNum = count % pageSize == 0 ? count / pageSize:count / pageSize + 1;\r\n        // 多线程去读\r\n        // 1.初始化map容量 防止扩容带来的效率损耗\r\n        Map<Integer, Page<T>> pageMap = new ConcurrentHashMap<>(Math.toIntExact(3));\r\n        CountDownLatch countDownLatch = new CountDownLatch(Math.toIntExact(3));\r\n        // 注意 easyexcel 暂时不支持多线程并发写入！！！ 详情请看github上issues\r\n        for (int i = 200 ;i< sheetNum;i++){\r\n            int finali = i;\r\n            threadPoolTaskExecutor.submit(()->{\r\n                Page<T> page = new Page<>();\r\n                page.setCurrent(finali + 1);\r\n                page.setSize(pageSize);\r\n                // 获取数据存放到map中\r\n                Page<T> selectPage = baseMapper.selectPage(page,queryWrapper);\r\n                pageMap.put(finali,selectPage);\r\n                // 消耗掉一个\r\n                countDownLatch.countDown();\r\n            });\r\n        }\r\n        try {\r\n            countDownLatch.await();\r\n        } catch (InterruptedException e) {\r\n            e.printStackTrace();\r\n        }\r\n        // 写入\r\n        try (ExcelWriter excelWriter = EasyExcel.write(out, pojoClass).build()) {\r\n            pageMap.forEach((k,v)->{\r\n                log.info(\"正在写入{}条数据\",pageSize);\r\n                WriteSheet writeSheet = EasyExcel.writerSheet(k, \"第\"+(k+1)+\"批数据\").build();\r\n                excelWriter.write(v.getRecords(), writeSheet);\r\n                pageMap.remove(k);\r\n            });\r\n\r\n            excelWriter.finish();\r\n        }\r\n    }",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3020/comments",
    "author": "ityss1024",
    "comments": [
      {
        "user": "gongxuanzhang",
        "created_at": "2023-03-05T03:04:54Z",
        "body": "放在try()里面就不需要手动finish了   close里面就有finish操作了"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2023-03-05T03:09:06Z",
        "body": "文件大小似乎没什么好办法"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2023-03-14T01:07:32Z",
        "body": " 不知道您是否已经解决该问题？我们先暂时关闭这个问题，如果还存在问题请重新Reopen这个issue"
      }
    ]
  },
  {
    "number": 3017,
    "title": "请教大佬，我这种大批量数据写入为什么会卡死在close阶段",
    "created_at": "2023-03-03T15:51:59Z",
    "closed_at": "2023-03-07T09:11:52Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3017",
    "body": "# 异常代码\r\n```java\r\npublic void easyExcel() {\r\n        File templatefile1 = new File(\"templatef1\");\r\n        File templatefile2 = new File(\"templatef2\");\r\n        File templatefile3 = new File(\"templatef3\");\r\n        File templatefile4 = new File(\"templatef4\");\r\n        File templatefile5 = new File(\"templatef5\");\r\n        File templatefile6 = new File(\"templatef6\");\r\n        File templatefile7 = new File(\"templatef7\");\r\n        File templatefile8 = new File(\"templatef8\");\r\n\r\n\r\n        File file1 = new File(\"f1\");\r\n        File file2 = new File(\"f2\");\r\n        File file3 = new File(\"f3\");\r\n        File file4 = new File(\"f4\");\r\n        File file5 = new File(\"f5\");\r\n        File file6 = new File(\"f6\");\r\n        File file7 = new File(\"f7\");\r\n        File file8 = new File(\"f8\");\r\n\r\n\r\n        ExcelWriter excelWriter1 = EasyExcel.write(file1).withTemplate(templatefile1).build();\r\n        ExcelWriter excelWriter2 = EasyExcel.write(file2).withTemplate(templatefile2).build();\r\n        ExcelWriter excelWriter3 = EasyExcel.write(file3).withTemplate(templatefile3).build();\r\n        ExcelWriter excelWriter4 = EasyExcel.write(file4).withTemplate(templatefile4).build();\r\n        ExcelWriter excelWriter5 = EasyExcel.write(file5).withTemplate(templatefile5).build();\r\n        ExcelWriter excelWriter6 = EasyExcel.write(file6).withTemplate(templatefile6).build();\r\n        ExcelWriter excelWriter7 = EasyExcel.write(file7).withTemplate(templatefile7).build();\r\n        ExcelWriter excelWriter8 = EasyExcel.write(file8).withTemplate(templatefile8).build();\r\n\r\n\r\n        WriteSheet writeSheet1 = EasyExcel.writerSheet(\"sheet1\").head(Pojo1.class).build();\r\n        WriteSheet writeSheet2 = EasyExcel.writerSheet(\"sheet2\").head(Pojo2.class).build();\r\n        WriteSheet writeSheet3 = EasyExcel.writerSheet(\"sheet3\").head(Pojo3.class).build();\r\n        WriteSheet writeSheet4 = EasyExcel.writerSheet(\"sheet4\").head(Pojo4.class).build();\r\n        WriteSheet writeSheet5 = EasyExcel.writerSheet(\"sheet5\").head(Pojo5.class).build();\r\n        WriteSheet writeSheet6 = EasyExcel.writerSheet(\"sheet6\").head(Pojo6.class).build();\r\n        WriteSheet writeSheet7 = EasyExcel.writerSheet(\"sheet7\").head(Pojo7.class).build();\r\n        WriteSheet writeSheet8 = EasyExcel.writerSheet(\"sheet8\").head(Pojo8.class).build();\r\n        WriteSheet writeSheet9 = EasyExcel.writerSheet(\"sheet9\").head(Pojo9.class).build();\r\n        WriteSheet writeSheet10 = EasyExcel.writerSheet(\"sheet10\").head(Pojo10.class).build();\r\n\r\n\r\n        // 循环5000条数据\r\n        for (int i = 0; i < 5000; i++) {\r\n            // 查询数据库 每个数据可以查回来50条记录\r\n            for (int j = 0; j < 50; j++) {\r\n                // 每次写一条记录,每个excelWriter都需要写多个sheet\r\n                excelWriter1.write(List.of(new Pojo1()), writeSheet1);\r\n                excelWriter1.write(List.of(new Pojo2()), writeSheet2);\r\n                excelWriter1.write(List.of(new Pojo3()), writeSheet3);\r\n                excelWriter1.write(List.of(new Pojo4()), writeSheet4);\r\n                excelWriter1.write(List.of(new Pojo5()), writeSheet5);\r\n                excelWriter1.write(List.of(new Pojo6()), writeSheet6);\r\n                excelWriter1.write(List.of(new Pojo7()), writeSheet7);\r\n                excelWriter1.write(List.of(new Pojo8()), writeSheet8);\r\n                excelWriter1.write(List.of(new Pojo9()), writeSheet8);\r\n                excelWriter1.write(List.of(new Pojo10()), writeSheet8);\r\n\r\n                // 每个excelWriter都需要写入所有sheet页，\r\n                .\r\n                .\r\n                .\r\n                excelWriter8.write(List.of(new Pojo1()), writeSheet1);\r\n                excelWriter8.write(List.of(new Pojo2()), writeSheet2);\r\n                excelWriter8.write(List.of(new Pojo3()), writeSheet3);\r\n                excelWriter8.write(List.of(new Pojo4()), writeSheet4);\r\n                excelWriter8.write(List.of(new Pojo5()), writeSheet5);\r\n                excelWriter8.write(List.of(new Pojo6()), writeSheet6);\r\n                excelWriter8.write(List.of(new Pojo7()), writeSheet7);\r\n                excelWriter8.write(List.of(new Pojo8()), writeSheet8);\r\n                excelWriter8.write(List.of(new Pojo9()), writeSheet8);\r\n                excelWriter8.write(List.of(new Pojo10()), writeSheet8);\r\n\r\n            }\r\n        }\r\n\r\n        // 所有数据写完准备填充一下模板 并关闭流\r\n        excelWriter1.fill(new PojoF(), writeSheet1);\r\n        excelWriter1.close();\r\n\r\n        excelWriter2.fill(new PojoF(), writeSheet1);\r\n        excelWriter2.close();\r\n\r\n        excelWriter3.fill(new PojoF(), writeSheet1);\r\n        excelWriter3.close();\r\n\r\n        excelWriter4.fill(new PojoF(), writeSheet1);\r\n        excelWriter4.close();\r\n\r\n        excelWriter5.fill(new PojoF(), writeSheet1);\r\n        excelWriter5.close();\r\n\r\n        excelWriter6.fill(new PojoF(), writeSheet1);\r\n        excelWriter6.close();\r\n\r\n        excelWriter7.fill(new PojoF(), writeSheet1);\r\n        excelWriter7.close();\r\n\r\n        excelWriter8.fill(new PojoF(), writeSheet1);\r\n        excelWriter8.close();\r\n    }\r\n```\r\n# 异常提示\r\n## jstat -gc \r\n S0C    S1C    S0U    S1U      EC       EU        OC         OU       MC     MU    CCSC   CCSU   YGC     YGCT    FGC    FGCT     GCT\r\n381440.0 382464.0  0.0   365747.5 4825600.0 3717913.6 11185152.0 2646498.6  172544.0 160786.2 20480.0 18335.6    191   17.709   5      1.060   18.769\r\n\r\n## jstack \r\n\"org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1\" #118 prio=5 os_prio=0 tid=0x00007fd6403f2000 nid=0x85 runnable [0x00007fd650af4000]\r\n   java.lang.Thread.State: RUNNABLE\r\n\tat org.apache.xmlbeans.impl.store.Locale.findNthChildElem(Locale.java:1318)\r\n\tat org.apache.xmlbeans.impl.store.Xobj.insert_element_user(Xobj.java:2029)\r\n\tat org.apache.xmlbeans.impl.values.XmlComplexContentImpl.arraySetterHelper(XmlComplexContentImpl.java:373)\r\n\tat org.apache.xmlbeans.impl.values.XmlComplexContentImpl.arraySetterHelper(XmlComplexContentImpl.java:311)\r\n\tat org.openxmlformats.schemas.spreadsheetml.x2006.main.impl.CTFontsImpl.setFontArray(CTFontsImpl.java:89)\r\n\tat org.apache.poi.xssf.model.StylesTable.writeTo(StylesTable.java:668)\r\n\tat org.apache.poi.xssf.model.StylesTable.commit(StylesTable.java:740)\r\n\tat org.apache.poi.ooxml.POIXMLDocumentPart.onSave(POIXMLDocumentPart.java:467)\r\n\tat org.apache.poi.ooxml.POIXMLDocumentPart.onSave(POIXMLDocumentPart.java:472)\r\n\tat org.apache.poi.ooxml.POIXMLDocument.write(POIXMLDocument.java:221)\r\n\tat org.apache.poi.xssf.streaming.SXSSFWorkbook.write(SXSSFWorkbook.java:969)\r\n\tat com.alibaba.excel.context.WriteContextImpl.finish(WriteContextImpl.java:381)\r\n\tat com.alibaba.excel.write.ExcelBuilderImpl.finish(ExcelBuilderImpl.java:99)\r\n\tat com.alibaba.excel.ExcelWriter.finish(ExcelWriter.java:140)\r\n\tat com.alibaba.excel.ExcelWriter.close(ExcelWriter.java:155)\r\n\tat com.c.e.pojo.bo.EntInfoExcelBatchBO.closeAllExcelWriter(EntInfoExcelBatchBO.java:109)\r\n\tat com.c.e.report.entInfo.batch.ReportEntInfoBatch.generateExcel(ReportEntInfoBatch.java:188)\r\n\tat com.c.e.report.entInfo.batch.ReportEntInfoBatch.generateBatch(ReportEntInfoBatch.java:125)\r\n\tat com.c.e.service.ReportService.reportBatchGenerate(ReportService.java:391)\r\n\tat com.c.e.kafka.KafkaConsumer.reportBatchGenerateConsumer(KafkaConsumer.java:262)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)\r\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)\r\n\tat org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48)\r\n\tat org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:330)\r\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86)\r\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2069)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2051)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1988)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1928)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1814)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1531)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1178)\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1075)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.lang.Thread.run(Thread.java:750)\r\n\r\n\r\n# 问题描述\r\n\r\n1. 由于项目太大 只能写示例代码模拟我们的场景，实际场景生成8个文件，每个文件10个左右的sheet页，8个文件一共50个sheet页其中一些sheet页还包含图片列。\r\n2. 每个sheet页有一些特殊样式的表头所以表头是使用模板填充的\r\n3. 8个文件对应8个excelWriter所有数据写完一起调用close方法关闭，就是在阶段 close方法会一直卡死，可以看上面jstack状态\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3017/comments",
    "author": "bajie-git",
    "comments": [
      {
        "user": "bajie-git",
        "created_at": "2023-03-03T15:53:59Z",
        "body": "我想知道是我使用的姿势不对么。为什么会出现这种情况，我尝试debug跟踪只是发现close时执行org.apache.xmlbeans.impl.store.Locale.findNthChildElem方法一直在查找xobj这个链表，链表中很多对象都是null"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2023-03-04T05:50:26Z",
        "body": "业务上可以改成分开close吗"
      },
      {
        "user": "bajie-git",
        "created_at": "2023-03-04T05:54:49Z",
        "body": "> 业务上可以改成分开close吗\r\n\r\n是的，我正有这个打算，但分开不一定会解决问题，我想知道为什么我会出现这种情况，close方法为什么会执行的那么缓慢"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2023-03-05T02:59:56Z",
        "body": "close其实是finish方法，包含真正的写入，不仅仅是一个关闭流的操作"
      },
      {
        "user": "bajie-git",
        "created_at": "2023-03-05T03:37:21Z",
        "body": "> close其实是finish方法，包含真正的写入，不仅仅是一个关闭流的操作\r\n\r\n嗯，我理解这个  但我觉得事情应该不会这么简。因为这解释不了多个excelWriter进行关闭为什么会耗时这么久，足足有6个小时，，，"
      },
      {
        "user": "bajie-git",
        "created_at": "2023-03-07T09:11:16Z",
        "body": "分享一下最后解决得办法及原因\r\n\r\n这几天反复得看日志和堆栈信息 最后在jstack中看到这么一条\r\nat org.openxmlformats.schemas.spreadsheetml.x2006.main.impl.CTFontsImpl.setFontArray(CTFontsImpl.java:89)\r\n也就是最后close得时候一直在处理和字体有关得事情，突然想起来我们代码中有个继承AbstractCellStyleStrategy的handler用来处理自定义表头和内容的样式\r\n```java\r\n@Override\r\n    protected void setContentCellStyle(CellWriteHandlerContext context) {\r\n            Sheet sheet = context.getWriteSheetHolder().getSheet();\r\n            if (\"目录\".equals(sheet.getSheetName())) {\r\n                return;\r\n            }\r\n            Cell cell = context.getCell();\r\n            CellStyle cellStyle = cell.getCellStyle();\r\n\r\n            Workbook workbook = sheet.getWorkbook();\r\n            Font font = workbook.createFont();\r\n            font.setFontName(\"宋体\");\r\n            font.setFontHeightInPoints((short) 11);\r\n            cellStyle.setFont(font);\r\n\r\n            cellStyle.setBorderLeft(BorderStyle.MEDIUM);\r\n            cellStyle.setLeftBorderColor(color);\r\n            cellStyle.setBorderTop(BorderStyle.MEDIUM);\r\n            cellStyle.setTopBorderColor(color);\r\n            cellStyle.setBorderRight(BorderStyle.MEDIUM);\r\n            cellStyle.setRightBorderColor(color);\r\n            cellStyle.setBorderBottom(BorderStyle.MEDIUM);\r\n            cellStyle.setBottomBorderColor(color);\r\n    }\r\n```\r\n原因就在createFont上，，，，创建了太多字体  当达到一定量级以后就会出现这种情况\r\n\r\n\r\n"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2023-03-07T09:13:42Z",
        "body": "感谢记录"
      }
    ]
  },
  {
    "number": 3006,
    "title": "导入导出使用同一对象时，比如说某个字段，例如name,  我只在导入的时候用， 导出的时候不需要name,该使用什么注解 ？",
    "created_at": "2023-02-27T05:15:05Z",
    "closed_at": "2023-02-27T06:59:47Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/3006",
    "body": null,
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/3006/comments",
    "author": "stealth-Lee",
    "comments": [
      {
        "user": "gongxuanzhang",
        "created_at": "2023-02-27T06:33:56Z",
        "body": "在导出的时候调用excludeColumnFieldNames方法指定即可"
      }
    ]
  },
  {
    "number": 2960,
    "title": "监听器中BATCH_COUNT值的定义",
    "created_at": "2023-02-08T02:31:12Z",
    "closed_at": "2023-02-08T07:32:14Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2960",
    "body": "\r\n监听器中BATCH_COUNT值在大批量导入的时候（10w条起步）怎么定义是合适的？之前我定义为10000的时候插入10w条数据很慢，修改为100000后再次插入10w条数据速度变快了许多，请问是越大越好吗？这个值对程序的影响都有哪些呢？",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2960/comments",
    "author": "001221211",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2023-02-08T07:32:14Z",
        "body": "这个需要自己设定，具体什么值对easyexcel影响不是很大，要根据数据库的性能来。"
      }
    ]
  },
  {
    "number": 2892,
    "title": "easyExcel支持追加写吗 ？",
    "created_at": "2023-01-03T07:17:54Z",
    "closed_at": "2023-02-08T11:25:01Z",
    "labels": [
      "help wanted",
      "pending verification"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2892",
    "body": "easyExcel 在每次调用finish方法之后把workBook对象中存的数据写入到outputStream中，生成一个文件，是否支持finish之后往这个文件里追加的写数据。",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2892/comments",
    "author": "forgetxue",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2023-01-13T09:25:03Z",
        "body": "这个我需要排查下，模板太大是否会有问题。建议临时方案就是放到其他地方一次性写入。"
      },
      {
        "user": "ohMyJason",
        "created_at": "2023-01-17T06:46:43Z",
        "body": "这样在数据量大的时候，一次性写入是否会有内存溢出的风险"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2023-02-08T11:25:00Z",
        "body": "这个测试了 无解，底层依赖于poi，大文件追加会OOM。\r\n建议临时存储到数据库或者本地文件缓存 ，再追加。"
      },
      {
        "user": "zhuchao941",
        "created_at": "2023-05-04T11:33:47Z",
        "body": "> 这个测试了 无解，底层依赖于poi，大文件追加会OOM。 建议临时存储到数据库或者本地文件缓存 ，再追加。\r\n\r\n没理解哈 临时存储到数据库有什么用么 最终不还是要写到excel里吗？最终这一步的内存溢出还是没解决啊"
      },
      {
        "user": "bdqntp",
        "created_at": "2023-05-18T02:43:34Z",
        "body": "> > 这个测试了 无解，底层依赖于poi，大文件追加会OOM。建议临时存储到数据库或者本地文件缓存 ，再追加。\r\n> \r\n> 没理解哈 临时存储到数据库有什么用么 最终不还是要写到excel里吗？最终这一步的内存溢出还是没解决啊\r\n\r\n意思先别用其他的方式，不用一次性把文件加载到内存的方式，例如你可以先用java.io中的包先追加写入。"
      },
      {
        "user": "zhuchao941",
        "created_at": "2023-05-18T04:50:32Z",
        "body": "> > > 这个测试了 无解，底层依赖于poi，大文件追加会OOM。建议临时存储到数据库或者本地文件缓存 ，再追加。\r\n> > \r\n> > \r\n> > 没理解哈 临时存储到数据库有什么用么 最终不还是要写到excel里吗？最终这一步的内存溢出还是没解决啊\r\n> \r\n> 意思先别用其他的方式，不用一次性把文件加载到内存的方式，例如你可以先用java.io中的包先追加写入。\r\n\r\n那最终写入到excel的时候不还得读到内存里？"
      },
      {
        "user": "bdqntp",
        "created_at": "2023-05-24T09:32:48Z",
        "body": "> \r\n\r\n\r\n\r\n> > > > 这个测试了 无解，底层依赖于poi，大文件追加会OOM。建议临时存储到数据库或者本地文件缓存 ，再追加。\r\n> > > \r\n> > > \r\n> > > 没理解哈 临时存储到数据库有什么用么 最终不还是要写到excel里吗？最终这一步的内存溢出还是没解决啊\r\n> > \r\n> > \r\n> > 意思先别用其他的方式，不用一次性把文件加载到内存的方式，例如你可以先用 java.io 中的包先追加写入。\r\n> \r\n> 那最终写入到excel的时候不还得读到内存里？\r\n\r\n最后就一次读取一行数据，不用全部读取到内存中"
      },
      {
        "user": "zhuchao941",
        "created_at": "2023-05-24T10:38:27Z",
        "body": "> > \r\n> \r\n> > > > > 这个测试了 无解，底层依赖于poi，大文件追加会OOM。建议临时存储到数据库或者本地文件缓存 ，再追加。\r\n> > > > \r\n> > > > \r\n> > > > 没理解哈 临时存储到数据库有什么用么 最终不还是要写到excel里吗？最终这一步的内存溢出还是没解决啊\r\n> > > \r\n> > > \r\n> > > 意思先别用其他的方式，不用一次性把文件加载到内存的方式，例如你可以先用 java.io 中的包先追加写入。\r\n> > \r\n> > \r\n> > 那最终写入到excel的时候不还得读到内存里？\r\n> \r\n> 最后就一次读取一行数据，不用全部读取到内存中\r\n\r\n读取一行数据？那导出的excel不就一行数据么？\r\n你要么简单写一段帮助我理解下？"
      },
      {
        "user": "bdqntp",
        "created_at": "2023-05-25T02:03:31Z",
        "body": "> zhuchao941\r\n\r\n\r\n\r\n> > > \r\n> > \r\n> > \r\n> > > > > > 这个测试了 无解，底层依赖于poi，大文件追加会OOM。建议临时存储到数据库或者本地文件缓存 ，再追加。\r\n> > > > > \r\n> > > > > \r\n> > > > > 没理解哈 临时存储到数据库有什么用么 最终不还是要写到excel里吗？最终这一步的内存溢出还是没解决啊\r\n> > > > \r\n> > > > \r\n> > > > 意思先别用其他的方式，不用一次性把文件加载到内存的方式，例如你可以先用 java.io 中的包先追加写入。\r\n> > > \r\n> > > \r\n> > > 那最终写入到excel的时候不还得读到内存里？\r\n> > \r\n> > \r\n> > 最后就一次读取一行数据，不用全部读取到内存中\r\n> \r\n> 读取一行数据？那导出的excel不就一行数据么？ 你要么简单写一段帮助我理解下？\r\n\r\n模拟代码；\r\npublic static void main(String[] args) {\r\n        ExcelWriter excelWriter = EasyExcel.write(\"\").build();\r\n        WriteSheet sheet = EasyExcel.writerSheet().build();\r\n\r\n        FileReader fr = null;\r\n        BufferedReader br = null;\r\n        try {\r\n            fr = new FileReader(\"缓存的文件\");\r\n            br = new BufferedReader(fr);\r\n            String line = null;\r\n            while ((line = br.readLine()) != null) {\r\n                excelWriter.fill(line, sheet);\r\n            }\r\n        } catch (FileNotFoundException e) {\r\n            throw new RuntimeException(e);\r\n        } catch (IOException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }"
      },
      {
        "user": "zhuchao941",
        "created_at": "2023-05-25T08:06:04Z",
        "body": "> > zhuchao941\r\n> \r\n> > > > \r\n> > > \r\n> > > \r\n> > > > > > > 这个测试了 无解，底层依赖于poi，大文件追加会OOM。建议临时存储到数据库或者本地文件缓存 ，再追加。\r\n> > > > > > \r\n> > > > > > \r\n> > > > > > 没理解哈 临时存储到数据库有什么用么 最终不还是要写到excel里吗？最终这一步的内存溢出还是没解决啊\r\n> > > > > \r\n> > > > > \r\n> > > > > 意思先别用其他的方式，不用一次性把文件加载到内存的方式，例如你可以先用 java.io 中的包先追加写入。\r\n> > > > \r\n> > > > \r\n> > > > 那最终写入到excel的时候不还得读到内存里？\r\n> > > \r\n> > > \r\n> > > 最后就一次读取一行数据，不用全部读取到内存中\r\n> > \r\n> > \r\n> > 读取一行数据？那导出的excel不就一行数据么？ 你要么简单写一段帮助我理解下？\r\n> \r\n> 模拟代码； public static void main(String[] args) { ExcelWriter excelWriter = EasyExcel.write(\"\").build(); WriteSheet sheet = EasyExcel.writerSheet().build();\r\n> \r\n> ```\r\n>     FileReader fr = null;\r\n>     BufferedReader br = null;\r\n>     try {\r\n>         fr = new FileReader(\"缓存的文件\");\r\n>         br = new BufferedReader(fr);\r\n>         String line = null;\r\n>         while ((line = br.readLine()) != null) {\r\n>             excelWriter.fill(line, sheet);\r\n>         }\r\n>     } catch (FileNotFoundException e) {\r\n>         throw new RuntimeException(e);\r\n>     } catch (IOException e) {\r\n>         throw new RuntimeException(e);\r\n>     }\r\n> }\r\n> ```\r\n\r\n那你最终在excelWriter.finish之前 数据不还是全部都在内存里么？只是你读取的时候用了bufferReader，这和我说的不是一个问题。我想问的是分批次刷到磁盘上，不然总会出现内存不够用的情况的"
      },
      {
        "user": "bdqntp",
        "created_at": "2023-05-25T08:09:47Z",
        "body": "> > > zhuchao941\r\n> > \r\n> > \r\n> > > > > \r\n> > > > \r\n> > > > \r\n> > > > > > > > 这个测试了 无解，底层依赖于poi，大文件追加会OOM。建议临时存储到数据库或者本地文件缓存 ，再追加。\r\n> > > > > > > \r\n> > > > > > > \r\n> > > > > > > 没理解哈 临时存储到数据库有什么用么 最终不还是要写到excel里吗？最终这一步的内存溢出还是没解决啊\r\n> > > > > > \r\n> > > > > > \r\n> > > > > > 意思先别用其他的方式，不用一次性把文件加载到内存的方式，例如你可以先用 java.io 中的包先追加写入。\r\n> > > > > \r\n> > > > > \r\n> > > > > 那最终写入到excel的时候不还得读到内存里？\r\n> > > > \r\n> > > > \r\n> > > > 最后就一次读取一行数据，不用全部读取到内存中\r\n> > > \r\n> > > \r\n> > > 读取一行数据？那导出的excel不就一行数据么？ 你要么简单写一段帮助我理解下？\r\n> > \r\n> > \r\n> > 模拟代码； public static void main(String[] args) { ExcelWriter excelWriter = EasyExcel.write(\"\").build(); WriteSheet sheet = EasyExcel.writerSheet().build();\r\n> > ```\r\n> >     FileReader fr = null;\r\n> >     BufferedReader br = null;\r\n> >     try {\r\n> >         fr = new FileReader(\"缓存的文件\");\r\n> >         br = new BufferedReader(fr);\r\n> >         String line = null;\r\n> >         while ((line = br.readLine()) != null) {\r\n> >             excelWriter.fill(line, sheet);\r\n> >         }\r\n> >     } catch (FileNotFoundException e) {\r\n> >         throw new RuntimeException(e);\r\n> >     } catch (IOException e) {\r\n> >         throw new RuntimeException(e);\r\n> >     }\r\n> > }\r\n> > ```\r\n> \r\n> 那你最终在excelWriter.finish之前 数据不还是全部都在内存里么？只是你读取的时候用了bufferReader，这和我说的不是一个问题。我想问的是分批次刷到磁盘上，不然总会出现内存不够用的情况的\r\n\r\n不会全部都在内存中，先去看看easyexcel的文档吧"
      },
      {
        "user": "zhuchao941",
        "created_at": "2023-05-25T08:18:49Z",
        "body": "> > > > zhuchao941\r\n> > > \r\n> > > \r\n> > > > > > \r\n> > > > > \r\n> > > > > \r\n> > > > > > > > > 这个测试了 无解，底层依赖于poi，大文件追加会OOM。建议临时存储到数据库或者本地文件缓存 ，再追加。\r\n> > > > > > > > \r\n> > > > > > > > \r\n> > > > > > > > 没理解哈 临时存储到数据库有什么用么 最终不还是要写到excel里吗？最终这一步的内存溢出还是没解决啊\r\n> > > > > > > \r\n> > > > > > > \r\n> > > > > > > 意思先别用其他的方式，不用一次性把文件加载到内存的方式，例如你可以先用 java.io 中的包先追加写入。\r\n> > > > > > \r\n> > > > > > \r\n> > > > > > 那最终写入到excel的时候不还得读到内存里？\r\n> > > > > \r\n> > > > > \r\n> > > > > 最后就一次读取一行数据，不用全部读取到内存中\r\n> > > > \r\n> > > > \r\n> > > > 读取一行数据？那导出的excel不就一行数据么？ 你要么简单写一段帮助我理解下？\r\n> > > \r\n> > > \r\n> > > 模拟代码； public static void main(String[] args) { ExcelWriter excelWriter = EasyExcel.write(\"\").build(); WriteSheet sheet = EasyExcel.writerSheet().build();\r\n> > > ```\r\n> > >     FileReader fr = null;\r\n> > >     BufferedReader br = null;\r\n> > >     try {\r\n> > >         fr = new FileReader(\"缓存的文件\");\r\n> > >         br = new BufferedReader(fr);\r\n> > >         String line = null;\r\n> > >         while ((line = br.readLine()) != null) {\r\n> > >             excelWriter.fill(line, sheet);\r\n> > >         }\r\n> > >     } catch (FileNotFoundException e) {\r\n> > >         throw new RuntimeException(e);\r\n> > >     } catch (IOException e) {\r\n> > >         throw new RuntimeException(e);\r\n> > >     }\r\n> > > }\r\n> > > ```\r\n> > \r\n> > \r\n> > 那你最终在excelWriter.finish之前 数据不还是全部都在内存里么？只是你读取的时候用了bufferReader，这和我说的不是一个问题。我想问的是分批次刷到磁盘上，不然总会出现内存不够用的情况的\r\n> \r\n> 不会全部都在内存中，先去看看easyexcel的文档吧\r\n\r\n大哥 没看过文档会来这提问么 你要回答就答重点 如果有相关文档就帮忙贴一下。前面说了个半天就答了个BufferedReader。。"
      },
      {
        "user": "bdqntp",
        "created_at": "2023-05-25T08:20:05Z",
        "body": "> > > > > zhuchao941\r\n> > > > \r\n> > > > \r\n> > > > > > > \r\n> > > > > > \r\n> > > > > > \r\n> > > > > > > > > > 这个测试了 无解，底层依赖于poi，大文件追加会OOM。建议临时存储到数据库或者本地文件缓存 ，再追加。\r\n> > > > > > > > > \r\n> > > > > > > > > \r\n> > > > > > > > > 没理解哈 临时存储到数据库有什么用么 最终不还是要写到excel里吗？最终这一步的内存溢出还是没解决啊\r\n> > > > > > > > \r\n> > > > > > > > \r\n> > > > > > > > 意思先别用其他的方式，不用一次性把文件加载到内存的方式，例如你可以先用 java.io 中的包先追加写入。\r\n> > > > > > > \r\n> > > > > > > \r\n> > > > > > > 那最终写入到excel的时候不还得读到内存里？\r\n> > > > > > \r\n> > > > > > \r\n> > > > > > 最后就一次读取一行数据，不用全部读取到内存中\r\n> > > > > \r\n> > > > > \r\n> > > > > 读取一行数据？那导出的excel不就一行数据么？ 你要么简单写一段帮助我理解下？\r\n> > > > \r\n> > > > \r\n> > > > 模拟代码； public static void main(String[] args) { ExcelWriter excelWriter = EasyExcel.write(\"\").build(); WriteSheet sheet = EasyExcel.writerSheet().build();\r\n> > > > ```\r\n> > > >     FileReader fr = null;\r\n> > > >     BufferedReader br = null;\r\n> > > >     try {\r\n> > > >         fr = new FileReader(\"缓存的文件\");\r\n> > > >         br = new BufferedReader(fr);\r\n> > > >         String line = null;\r\n> > > >         while ((line = br.readLine()) != null) {\r\n> > > >             excelWriter.fill(line, sheet);\r\n> > > >         }\r\n> > > >     } catch (FileNotFoundException e) {\r\n> > > >         throw new RuntimeException(e);\r\n> > > >     } catch (IOException e) {\r\n> > > >         throw new RuntimeException(e);\r\n> > > >     }\r\n> > > > }\r\n> > > > ```\r\n> > > \r\n> > > \r\n> > > 那你最终在excelWriter.finish之前 数据不还是全部都在内存里么？只是你读取的时候用了bufferReader，这和我说的不是一个问题。我想问的是分批次刷到磁盘上，不然总会出现内存不够用的情况的\r\n> > \r\n> > \r\n> > 不会全部都在内存中，先去看看easyexcel的文档吧\r\n> \r\n> 大哥 没看过文档会来这提问么 你要回答就答重点 如果有相关文档就帮忙贴一下。前面说了个半天就答了个BufferedReader。。\r\n\r\n6"
      }
    ]
  },
  {
    "number": 2876,
    "title": "doAfterAllAnalysed 能否异步",
    "created_at": "2022-12-21T08:14:50Z",
    "closed_at": "2023-01-16T12:49:26Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2876",
    "body": "\r\ndoAfterAllAnalysed 方法能否异步执行 ",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2876/comments",
    "author": "RoterLong",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2023-01-16T12:49:25Z",
        "body": "不是 同步执行的"
      }
    ]
  },
  {
    "number": 2875,
    "title": "导出Excel如何将单元格格式设置为日期",
    "created_at": "2022-12-19T11:59:21Z",
    "closed_at": "2023-01-16T12:50:09Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2875",
    "body": "求解",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2875/comments",
    "author": "wisty",
    "comments": [
      {
        "user": "wisty",
        "created_at": "2022-12-19T12:00:09Z",
        "body": "EasyExcel版本为2.2.6\r\n导出后Excel单元格格式总是为自定义"
      },
      {
        "user": "yantaosun",
        "created_at": "2023-01-04T08:16:03Z",
        "body": "兄台解决了吗，遇到同样问题，3.x版本"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2023-01-16T12:50:09Z",
        "body": "你的参数为日期即可"
      }
    ]
  },
  {
    "number": 2873,
    "title": "用模板写入，模板数量过大withTemplate会报错",
    "created_at": "2022-12-17T09:59:01Z",
    "closed_at": "2023-02-08T12:21:40Z",
    "labels": [
      "help wanted",
      "pending verification"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2873",
    "body": "**问题描述**\r\n当withTemplate(templateFileName)使用的模板文件数据量过大时，会报错。我使用的模板文件有17w行数据，我想在模板文件的基础上新增几列新增数据\r\n\r\n**异常代码**\r\n```java\r\nEasyExcel.write(fileName, DemoData.class).withTemplate(templateFileName).sheet().doWrite(data());\r\n```\r\n\r\n**异常提示**\r\nCreate workbook failure\r\ncom.alibaba.excel.exception.ExcelGenerateException: Create workbook failure\r\n\tat com.alibaba.excel.context.WriteContextImpl.<init>(WriteContextImpl.java:98)\r\n\tat com.alibaba.excel.write.ExcelBuilderImpl.<init>(ExcelBuilderImpl.java:36)\r\n\tat com.alibaba.excel.ExcelWriter.<init>(ExcelWriter.java:36)\r\n\tat com.alibaba.excel.write.builder.ExcelWriterBuilder.build(ExcelWriterBuilder.java:114)\r\n\tat com.deformity.platform.survey.business.common.service.BusinessImportService.importBusinessData$lambda-16(BusinessImportService.kt:285)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\r\n\tat java.base/java.lang.Thread.run(Thread.java:834)\r\nCaused by: org.apache.poi.util.RecordFormatException: Tried to allocate an array of length 270,579,663, but the maximum length for this record type is 100,000,000.\r\nIf the file is not corrupt or large, please open an issue on bugzilla to request \r\nincreasing the maximum allowable size for this record type.\r\nAs a temporary workaround, consider setting a higher override value with IOUtils.setByteArrayMaxOverride()\r\n\tat org.apache.poi.util.IOUtils.throwRFE(IOUtils.java:599)\r\n\tat org.apache.poi.util.IOUtils.checkLength(IOUtils.java:276)\r\n\tat org.apache.poi.util.IOUtils.toByteArray(IOUtils.java:230)\r\n\tat org.apache.poi.util.IOUtils.toByteArray(IOUtils.java:203)\r\n\tat org.apache.poi.openxml4j.util.ZipArchiveFakeEntry.<init>(ZipArchiveFakeEntry.java:82)\r\n\tat org.apache.poi.openxml4j.util.ZipInputStreamZipEntrySource.<init>(ZipInputStreamZipEntrySource.java:98)\r\n\tat org.apache.poi.openxml4j.opc.ZipPackage.<init>(ZipPackage.java:132)\r\n\tat org.apache.poi.openxml4j.opc.OPCPackage.open(OPCPackage.java:312)\r\n\tat org.apache.poi.ooxml.util.PackageHelper.open(PackageHelper.java:59)\r\n\tat org.apache.poi.xssf.usermodel.XSSFWorkbook.<init>(XSSFWorkbook.java:289)\r\n\tat org.apache.poi.xssf.usermodel.XSSFWorkbook.<init>(XSSFWorkbook.java:285)\r\n\tat com.alibaba.excel.util.WorkBookUtil.createWorkBook(WorkBookUtil.java:35)\r\n\tat com.alibaba.excel.context.WriteContextImpl.<init>(WriteContextImpl.java:96)\r\n\t... 7 common frames omitted\r\n\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2873/comments",
    "author": "lin-code-world",
    "comments": [
      {
        "user": "gongxuanzhang",
        "created_at": "2023-02-03T04:51:23Z",
        "body": "是模板文件17W，还是数据17W，模板是可以循环的.\r\n如果方便可否提供文件我来复现"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2023-02-08T12:21:40Z",
        "body": "这个不行 需要考虑重新读取了 再写入"
      },
      {
        "user": "lin-code-world",
        "created_at": "2023-02-10T04:19:20Z",
        "body": "> 是模板文件17W，还是数据17W，模板是可以循环的. 如果方便可否提供文件我来复现\r\n\r\n是模板文件有17w条数据，我要在模板文件的基础上新增一列，在那一列上加内容"
      },
      {
        "user": "lin-code-world",
        "created_at": "2023-02-10T04:21:30Z",
        "body": "> 这个不行 需要考虑重新读取了 再写入\r\n\r\n我目前实现的方法就是先读取存到临时数据库里，然后处理完业务逻辑再重新写入。能否支持一下基于大数据量的模板文件新增几列写入数据"
      }
    ]
  },
  {
    "number": 2871,
    "title": "easyExcel 读取很慢的一个场景。",
    "created_at": "2022-12-14T06:38:12Z",
    "closed_at": "2023-02-02T09:16:42Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2871",
    "body": " /** controller 层模拟场景代码 */\r\n@GetMapping(value =\"/finance\")\r\n    public  void sendMailController(){\r\n        StopWatch sw = new StopWatch();\r\n        List<BasicEmpInfoExcelDTO> basicEmpInfoDtoList = new ArrayList<>();\r\n        File file = new File(\"E:\\\\IDEA_Code\\\\***\\\\excelResult\\\\员工基础信息报表20221213193018.xlsx\");\r\n        sw.start(\"读取人员基础信息\");\r\n        EasyExcel.read(file, BasicEmpInfoExcelDTO.class, EasyExcelListener.getListener(basicEmpInfoDtoList))\r\n                .sheet(\"员工基础信息报表\")\r\n                .doRead(); //第①个读取 excel 场景\r\n        sw.stop();\r\n        System.out.println(sw.getTotalTimeSeconds());\r\n        testExcel();\r\n}\r\n\r\npublic void testExcel(){\r\n        List<BasicEmpInfoExcelDTO> basicEmpInfoDtoList = Lists.newArrayList();\r\n        File file = new File(\"E:\\\\IDEA_Code\\\\***\\\\excelResult\\\\员工基础信息报表20221213193018.xlsx\");\r\n        log.info(\"开始\");\r\n        EasyExcel.read(file, BasicEmpInfoExcelDTO.class, EasyExcelListener.getListener(basicEmpInfoDtoList))\r\n                .sheet(\"员工基础信息报表\")\r\n                .doRead();   //第②个读取 excel 场景\r\n        log.info(\"结束\");\r\n    }\r\n\r\n\r\n/** 这里是我的监听器 */\r\npublic class EasyExcelListener {\r\n  public static <T> AnalysisEventListener<T> getListener(List<T> list){\r\n        return new AnalysisEventListener<T>() {\r\n            @Override\r\n            public void invoke(T data, AnalysisContext context) {\r\n                log.info(\"解析到一条数据:{}\", data.toString());\r\n                list.add(data);\r\n            }\r\n\r\n            @Override\r\n            public void doAfterAllAnalysed(AnalysisContext context) {\r\n                log.info(\"所有数据解析完毕！共{}条！\",list.size());\r\n            }\r\n        };\r\n    }\r\n\r\n}\r\n\r\n\r\n上面是我的模拟场景代码；在一个 controller 上面读取 excel 两次，excel 文件数量 50W左右；第一个读取数据场景花时100秒左右，但是第二个场景中跑了半小时都没出来；个人也在测试单元中，使用 main 方法测试，也是在一个 A 方法中，调用 B 方法，其中 B 方法也有使用 EasyExcel 读取同一个文件，在 main 方法中测试，两个都是几十秒就能完成；所以我的疑问是，为什么在容器管理中的组件中，A 方法读取excel 100s, A方法调用B方法，在 B 方法中读取 excel ，但是 B 方法读取excel 半小时都没出来结果呢？跪求大佬们解答。",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2871/comments",
    "author": "liufuws",
    "comments": [
      {
        "user": "gongxuanzhang",
        "created_at": "2023-02-02T09:16:42Z",
        "body": "此场景可能和你的Spring上下文有关，检查一下你的AOP，事务等，如果能复现可以检查一下当时的线程活动状态和死锁。\r\n"
      }
    ]
  },
  {
    "number": 2870,
    "title": "读取excel可以不面向注解开发吗？",
    "created_at": "2022-12-13T10:54:28Z",
    "closed_at": "2023-01-30T07:32:43Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2870",
    "body": "读取excel可以不面向注解开发吗？\r\n\r\n看见就脑壳痛。。正常调用函数实现读取功能能不能行？有没有代码。",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2870/comments",
    "author": "yobdms",
    "comments": [
      {
        "user": "WyattYiu",
        "created_at": "2022-12-16T14:29:19Z",
        "body": "可以的，看下文档就知道了"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2023-01-30T07:32:43Z",
        "body": "不知道您是否已经通过其他渠道解决该问题？我们先暂时关闭这个问题，如果还存在问题请重新Reopen这个issue"
      }
    ]
  },
  {
    "number": 2868,
    "title": "excel读取时可以设置指定编码格式吗",
    "created_at": "2022-12-12T07:13:54Z",
    "closed_at": "2023-02-01T02:48:25Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2868",
    "body": "**异常提示**\r\nConvert excel format exception.You can try specifying the 'excelType' yourself\r\n**现象描述**\r\n后台环境的默认语言是gbk格式，使用xftp上传excel文件时选择了utf-8格式，读取该文件时报了上述excel类型不支持的错误；当使用xftp上传excel文件时选择了gbk格式，则能正常读取。\r\n\r\n上述情况，如何读取utf-8格式文件可以成功读取",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2868/comments",
    "author": "vinside2000",
    "comments": [
      {
        "user": "gongxuanzhang",
        "created_at": "2023-01-31T02:40:23Z",
        "body": "@zhuangjiaju "
      },
      {
        "user": "tmlx1990",
        "created_at": "2023-01-31T07:10:12Z",
        "body": "excelType 这个是指的你文件的类型把 ？ .excelType(ExcelTypeEnum.CSV) 你用这个设置下试试呢  中间具体文件类型根据你的实际情况来\r\n"
      },
      {
        "user": "vinside2000",
        "created_at": "2023-02-01T02:48:22Z",
        "body": "编码格式问题，导致中文文件名乱码，就解析不到excel得格式，解决的方法是用英文名命名或者是统一编码格式"
      }
    ]
  },
  {
    "number": 2864,
    "title": "读取excel时，如何获取sheetName",
    "created_at": "2022-12-09T07:04:42Z",
    "closed_at": "2023-02-02T09:24:51Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2864",
    "body": "需要模糊匹配sheetName，然后读取对应sheet中的数据",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2864/comments",
    "author": "seedtwj",
    "comments": [
      {
        "user": "wsxjoin",
        "created_at": "2023-01-05T07:53:36Z",
        "body": "可以通过 context.readSheetHolder().getSheetName()  获取sheet名称\r\n或者 excelReader.excelExecutor().sheetList()"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2023-02-02T09:24:51Z",
        "body": "EasyExcel.read(filename).sheet(sheetName); 可选择对应sheetName   暂不支持模糊匹配"
      }
    ]
  },
  {
    "number": 2855,
    "title": "批量注册拦截器",
    "created_at": "2022-12-06T13:55:09Z",
    "closed_at": "2023-01-16T13:00:45Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2855",
    "body": "EasyExcel.write.registerWriteHandler只能一个一个手动注册拦截器吗？有没有什么办法批量注册呢？",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2855/comments",
    "author": "RawFishAnle",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2023-01-16T13:00:45Z",
        "body": "千万不要批量注册，根据拦截器的类型，可能每创建一个一个单元格都会回调，导致性能不好，所以建议一个拦截器处理很多事情"
      }
    ]
  },
  {
    "number": 2846,
    "title": "com.alibaba.excel.exception.ExcelAnalysisException: org.apache.poi.poifs.filesystem.NotOLE2FileException:",
    "created_at": "2022-12-01T03:08:10Z",
    "closed_at": "2023-01-16T13:04:20Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2846",
    "body": "Invalid header signature; read 0x0A0D3E6C6D74683C, expected 0xE11AB1A1E011CFD0 - Your file appears not to be a valid OLE2 document",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2846/comments",
    "author": "limengzhao",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2023-01-16T13:04:20Z",
        "body": "这个原因是 你指定了excel的类型，但是实际上不是这个类型。\r\n重新换个文件就行"
      }
    ]
  },
  {
    "number": 2837,
    "title": "如何删除指定列",
    "created_at": "2022-11-28T09:58:59Z",
    "closed_at": "2023-02-08T12:37:00Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2837",
    "body": "没有在文档上找到该方法，请问有什么别的处理方式吗",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2837/comments",
    "author": "zy-chuai",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2023-01-16T13:08:11Z",
        "body": "什么场景需要删除？不导入不可以么?"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2023-02-08T12:37:00Z",
        "body": "目前没有办法 删除原文件中的列，建议直接使用poi"
      },
      {
        "user": "ysysycyc",
        "created_at": "2023-06-12T07:43:14Z",
        "body": "批量写入的时候，有时候需要再写入完成后判断删除空列，写之前判断该列是否有数据的成本太高"
      }
    ]
  },
  {
    "number": 2829,
    "title": "模板合并单元格 ,图片导出在合并单元格中,只会显示在合并单元格的第一个单元格中,跨不了单元格",
    "created_at": "2022-11-23T01:08:07Z",
    "closed_at": "2022-11-23T01:10:57Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2829",
    "body": "/**\r\n     * 生成有图片的excel\r\n     *\r\n     * @param demoDataList 数据列表\r\n     * @param fileName     生成文件路径\r\n     */\r\n    private void genImageExcel(List<ImageDemoData> demoDataList, String fileName) {\r\n        if (CollectionUtils.isEmpty(demoDataList)) {\r\n            return;\r\n        }\r\n\r\n        //图片列最大图片数\r\n        AtomicReference<Integer> maxImageSize = new AtomicReference<>(0);\r\n        demoDataList.forEach(item -> {\r\n            if (CollectionUtils.isNotEmpty(item.getImagePathList()) && item.getImagePathList().size() > maxImageSize.get()) {\r\n                maxImageSize.set(item.getImagePathList().size());\r\n            }\r\n        });\r\n\r\n        //设置列长度所用类\r\n        AutoColumnWidthStyleStrategy longWidth = new AutoColumnWidthStyleStrategy();\r\n        List<ImageData> imageDataListAll = new ArrayList<>();\r\n        demoDataList.forEach(item -> {\r\n            WriteCellData<Void> writeCellData = new WriteCellData<>();\r\n            if (CollectionUtils.isNotEmpty(item.getImagePathList())) {\r\n                //每张图片间距\r\n                Integer splitWidth = 2;\r\n                //每张图片的长度\r\n                Integer imageWidth = 80;\r\n                //图片列的最大长度\r\n                Integer sumWidth = maxImageSize.get() * (imageWidth + splitWidth);\r\n\r\n                List<ImageData> imageDataList = new ArrayList<>();\r\n                List<String> imagePathList = item.getImagePathList();\r\n                for (int i = 1; i <= imagePathList.size(); i++) {\r\n                    String path = imagePathList.get(i - 1);\r\n                    Integer left = imageWidth * (i - 1) + i * splitWidth;\r\n                    Integer right = sumWidth - imageWidth - left;\r\n                    ImageData imageData = new ImageData();\r\n                    try {\r\n                        imageData.setImage(FileUtils.readFileToByteArray(new File(path)));\r\n                    } catch (IOException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                    imageData.setImageType(ImageData.ImageType.PICTURE_TYPE_PNG);\r\n                    //距离单元格顶部距离\r\n                    imageData.setTop(1);\r\n                    //距离单元格底部距离\r\n                    imageData.setBottom(1);\r\n                    //距离单元格左边距离\r\n                    imageData.setLeft(left);\r\n                    //距离单元格右边距离\r\n                    imageData.setRight(right);\r\n                    imageData.setAnchorType(ClientAnchorData.AnchorType.DONT_MOVE_DO_RESIZE);\r\n                    imageDataList.add(imageData);\r\n                }\r\n                writeCellData.setImageDataList(imageDataList);\r\n                imageDataListAll.addAll(imageDataList);\r\n                Map<String, Integer> zdyColumnWidth = new HashMap<>();\r\n                //图片列名称，对应导出对象的列名称，图片列长度\r\n                zdyColumnWidth.put(\"上传图片\", sumWidth / 6);\r\n                longWidth.setZdyColumnWidth(zdyColumnWidth);\r\n            }\r\n            item.setWriteCellDataFile(writeCellData);\r\n        });\r\n\r\n\r\n        ExcelWriter excelWriter = EasyExcel.write(fileName).withTemplate(new File(\"C:\\\\Users\\\\JUNSHI\\\\Desktop\\\\excel模板\\\\ADO LAB 相关资料\\\\repeat.xlsx\")).build();\r\n        FillConfig fillConfig = FillConfig.builder().forceNewRow(Boolean.TRUE).build();\r\n        WriteSheet writeSheet = EasyExcel.writerSheet(0).build();\r\n\r\n        excelWriter.fill(new Str(\"test\"), fillConfig, writeSheet);\r\n        excelWriter.fill(new FillWrapper(\"data\", demoDataList), fillConfig, writeSheet);\r\n        excelWriter.finish();\r\n\r\n    }",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2829/comments",
    "author": "adsda21312",
    "comments": [
      {
        "user": "TOP-LH",
        "created_at": "2023-02-13T03:36:20Z",
        "body": "你搞好了? 我这里合并单元格的图片他只会输出在第一个单元格中"
      }
    ]
  },
  {
    "number": 2810,
    "title": "如何根据sheetName来读取Excel中的sheet，而非sheetIndex？版本是3.1.2",
    "created_at": "2022-11-14T08:45:04Z",
    "closed_at": "2023-01-17T05:48:57Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2810",
    "body": "如何根据sheetName来读取Excel中的sheet，而非sheetIndex？\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2810/comments",
    "author": "kaleLiu",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2023-01-17T05:48:57Z",
        "body": "通过 `sheet()`里面传入 sheetName即可"
      }
    ]
  },
  {
    "number": 2801,
    "title": "easyExcel支持格式刷功能吗？也就是单元格继承，给定某个单元格的样式，其他单元格复制此样式",
    "created_at": "2022-11-09T10:49:58Z",
    "closed_at": "2024-07-31T01:18:45Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2801",
    "body": "看了文档没有找到这个功能，请问有这个功能吗？因为这个需求还是非常常见的。或者说用什么方式能够实现呢？\r\n大佬们，给个方案吧：），江湖急救！！！\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2801/comments",
    "author": "JavaAndPython55",
    "comments": [
      {
        "user": "ljluestc",
        "created_at": "2024-04-13T21:26:26Z",
        "body": "```\r\n// 假设CellStyleUtil是一个辅助类，用于复制单元格样式\r\npublic class CellStyleUtil {\r\n    public static void copyCellStyle(CellStyle sourceStyle, CellStyle targetStyle) {\r\n        targetStyle.setAlignment(sourceStyle.getAlignment());\r\n        targetStyle.setBorderBottom(sourceStyle.getBorderBottom());\r\n        targetStyle.setBorderLeft(sourceStyle.getBorderLeft());\r\n        targetStyle.setBorderRight(sourceStyle.getBorderRight());\r\n        targetStyle.setBorderTop(sourceStyle.getBorderTop());\r\n        // 更多样式属性的复制\r\n    }\r\n}\r\n\r\n// 在处理Excel时，你可以这样使用CellStlyeUtil来复制样式\r\nSheet sheet = workbook.getSheetAt(0); // 假设这是你要处理的sheet\r\nCell sourceCell = sheet.getRow(0).getCell(0); // 假设这是你要复制样式的单元格\r\n\r\n// 获取源单元格的样式\r\nCellStyle sourceCellStyle = sourceCell.getCellStyle();\r\n\r\n// 假设你想要将样式应用到某个范围的单元格上，例如A1:B5\r\nfor (int rowNum = 0; rowNum < 5; rowNum++) {\r\n    Row row = sheet.getRow(rowNum);\r\n    if (row == null) {\r\n        row = sheet.createRow(rowNum);\r\n    }\r\n    for (int colNum = 0; colNum < 2; colNum++) {\r\n        Cell cell = row.getCell(colNum);\r\n        if (cell == null) {\r\n            cell = row.createCell(colNum);\r\n        }\r\n        // 复制样式到目标单元格\r\n        CellStyle targetCellStyle = cell.getCellStyle();\r\n        CellStyleUtil.copyCellStyle(sourceCellStyle, targetCellStyle);\r\n    }\r\n}\r\n\r\n```"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2024-07-19T06:19:09Z",
        "body": "你好，我们发现此Issue已经超过三个月没有活动了，为了更好的帮助您解决问题，我们将在两周后关闭此Issue，如果您仍然有问题，请在两周内内回复此Issue，谢谢！如果您已经解决或者不需要帮助，请忽略此消息。"
      }
    ]
  },
  {
    "number": 2800,
    "title": " Can not find 'Converter' support class Timestamp.",
    "created_at": "2022-11-09T10:42:19Z",
    "closed_at": "2024-07-31T01:18:46Z",
    "labels": [
      "help wanted",
      "developing"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2800",
    "body": "高版本的不是不用自己写转换器吗？\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2800/comments",
    "author": "a17853726916",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2023-01-17T03:23:36Z",
        "body": "Timestamp目前不支持 我后续加入下"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2024-07-19T06:19:10Z",
        "body": "你好，我们发现此Issue已经超过三个月没有活动了，为了更好的帮助您解决问题，我们将在两周后关闭此Issue，如果您仍然有问题，请在两周内内回复此Issue，谢谢！如果您已经解决或者不需要帮助，请忽略此消息。"
      }
    ]
  },
  {
    "number": 2796,
    "title": "excel读取时，是否支持直接读取成json字符串",
    "created_at": "2022-11-05T06:01:38Z",
    "closed_at": "2023-01-17T03:22:07Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2796",
    "body": "excel读取时，能不能读取成Key为表头名称（表头名称可以跟实体类的属性名对应）Value为行值的json，这样我实体类既不用考虑顺序问题，也不用添加注解",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2796/comments",
    "author": "Lynn77777",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2023-01-17T03:22:07Z",
        "body": "这个可以直接读取成map ，自己map转成json"
      }
    ]
  },
  {
    "number": 2794,
    "title": "如何设置文档打开的默认缩放比例",
    "created_at": "2022-11-04T09:45:45Z",
    "closed_at": "2024-07-31T01:18:46Z",
    "labels": [
      "help wanted",
      "pending verification"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2794",
    "body": "如题\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2794/comments",
    "author": "cpdiem",
    "comments": [
      {
        "user": "gongxuanzhang",
        "created_at": "2024-07-19T06:19:11Z",
        "body": "你好，我们发现此Issue已经超过三个月没有活动了，为了更好的帮助您解决问题，我们将在两周后关闭此Issue，如果您仍然有问题，请在两周内内回复此Issue，谢谢！如果您已经解决或者不需要帮助，请忽略此消息。"
      }
    ]
  },
  {
    "number": 2788,
    "title": "冻结表头",
    "created_at": "2022-11-02T09:28:43Z",
    "closed_at": "2023-02-13T01:13:18Z",
    "labels": [
      "help wanted",
      "pending verification"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2788",
    "body": "我的代码如下\r\npublic class FreezeAndFilter implements SheetWriteHandler {\r\n\r\n    public int colSplit = 0, rowSplit = 2, leftmostColumn = 0, topRow = 1;\r\n    public String autoFilterRange = \"1:1\";\r\n    @Override\r\n    public void beforeSheetCreate(WriteWorkbookHolder writeWorkbookHolder, WriteSheetHolder writeSheetHolder) {\r\n\r\n    }\r\n\r\n    @Override\r\n    public void afterSheetCreate(WriteWorkbookHolder writeWorkbookHolder, WriteSheetHolder writeSheetHolder) {\r\n        Sheet sheet = writeSheetHolder.getSheet();\r\n        sheet.createFreezePane(colSplit, rowSplit, leftmostColumn, topRow);\r\n    }\r\n}\r\n\r\nwps打开能够正常固定住表头\r\noffice打开不能固定表头\r\n不知道是什么原因\r\n\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2788/comments",
    "author": "874379178",
    "comments": [
      {
        "user": "gongxuanzhang",
        "created_at": "2023-02-13T01:13:18Z",
        "body": "不知道您是否已经解决该问题？我们先暂时关闭这个问题，如果还存在问题请重新Reopen这个issue"
      }
    ]
  },
  {
    "number": 2779,
    "title": "微信小程序预览文档公式计算问题",
    "created_at": "2022-10-28T07:10:08Z",
    "closed_at": "2023-01-17T06:02:11Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2779",
    "body": "EasyExcel.write(response.getOutputStream()).withTemplate(templateFileName).build()\r\n问题：方式给微信小程序预览文档，公式没有预计算（点击选择手机中的wps打开，wps打开时会计算一遍公式，电脑打开文档也会计算一遍公式）\r\n就是微信小程序打开文档公式没有计算，是否可以先计算一遍公式再返回\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2779/comments",
    "author": "652031738",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2023-01-17T06:02:11Z",
        "body": "这个目前不支持 公式计算，建议自己写入具体的值。"
      }
    ]
  },
  {
    "number": 2776,
    "title": "在使用Java模块系统的情况下，添加easyexcel作为依赖无法构建成功",
    "created_at": "2022-10-27T03:51:02Z",
    "closed_at": "2024-07-31T01:18:47Z",
    "labels": [
      "help wanted",
      "pending verification"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2776",
    "body": "在使用Java模块系统（module-info.java 文件）的情况下，添加easyexcel作为依赖无法构建成功\r\n具体错误为：模块 xxx 同时从 easyexcel 和 easyexcel.core 读取程序包 com.alibaba.excel\r\n导入换为easyexcel-core的情况下，报错为：模块 xxx 同时从 easyexcel.core 和 easyexcel.support 读取程序包 com.alibaba.excel.support\r\n排除掉easyexcel.support以后，报错：模块 xxx 同时从 easyexcel.core 和 poi 读取程序包 org.apache.poi\r\n继续删除掉easyexcel.core中的org文件夹后没有报错，但是easyexcel无法运行\r\n我不清楚有没有办法可以指定使用的软件包的目录来避免这个问题，查找资料无果，特此在此询问\r\n技术力较低，若问题很蠢还请见谅\r\n\r\n构建工具为 Gradle\r\nJava 版本 Java17",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2776/comments",
    "author": "StarChenPy",
    "comments": [
      {
        "user": "gongxuanzhang",
        "created_at": "2024-07-19T06:19:12Z",
        "body": "你好，我们发现此Issue已经超过三个月没有活动了，为了更好的帮助您解决问题，我们将在两周后关闭此Issue，如果您仍然有问题，请在两周内内回复此Issue，谢谢！如果您已经解决或者不需要帮助，请忽略此消息。"
      }
    ]
  },
  {
    "number": 2775,
    "title": "设置表格内容格式的时候 下拉框如何实现多级联动",
    "created_at": "2022-10-25T02:31:48Z",
    "closed_at": "2024-07-31T01:18:48Z",
    "labels": [
      "help wanted",
      "pending verification"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2775",
    "body": "动态生成excel的时候  需要设置表格内容区域单元格联动   比如  省  市  区  3个字段    内容区域需要预置全国地区名称   之间联动筛查    ，目前文档里面只看到了一般下拉框的设置，求教\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2775/comments",
    "author": "chentengfei",
    "comments": [
      {
        "user": "liuzhuangzhuang418",
        "created_at": "2023-02-08T01:22:29Z",
        "body": "是呢看到那个demo了，但是没看明白复杂点的怎么做，求大佬指教"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2024-07-19T06:19:13Z",
        "body": "你好，我们发现此Issue已经超过三个月没有活动了，为了更好的帮助您解决问题，我们将在两周后关闭此Issue，如果您仍然有问题，请在两周内内回复此Issue，谢谢！如果您已经解决或者不需要帮助，请忽略此消息。"
      }
    ]
  },
  {
    "number": 2771,
    "title": "easyexcel 3.0.5版本 读取excel数据 排除掉隐藏列 隐藏行的数据 读取其他所有数据",
    "created_at": "2022-10-20T08:56:46Z",
    "closed_at": "2024-07-31T01:18:48Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2771",
    "body": "@Override\r\n    public void invokeHeadMap(Map<Integer, String> data, AnalysisContext context) {\r\n        atomicInteger.getAndIncrement();\r\n        this.headMap = data;\r\n\r\n        if(atomicInteger.get() == CommonConstants.NUM_FOUR) {\r\n            verifyHead();\r\n        }\r\n\r\n    }\r\nAnalysisContext  对象里面是否有判断单元格是隐藏的属性  怎么过滤掉隐藏行 隐藏列数据",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2771/comments",
    "author": "6688-open",
    "comments": [
      {
        "user": "Tony-luorancx",
        "created_at": "2023-01-03T07:12:35Z",
        "body": "这个问题解决了吗？ 我也遇到类似的需求"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2024-07-19T06:19:14Z",
        "body": "你好，我们发现此Issue已经超过三个月没有活动了，为了更好的帮助您解决问题，我们将在两周后关闭此Issue，如果您仍然有问题，请在两周内内回复此Issue，谢谢！如果您已经解决或者不需要帮助，请忽略此消息。"
      }
    ]
  },
  {
    "number": 2767,
    "title": "easy excel怎么实现边写入边下载？",
    "created_at": "2022-10-18T03:15:12Z",
    "closed_at": "2023-04-25T16:34:59Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2767",
    "body": "现在是所有的数据都读取完之后，执行write 方法前端才触发下载\r\n\r\n有没有办法后端这边写入  前端那边直接去触发下载？\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2767/comments",
    "author": "black1cat",
    "comments": [
      {
        "user": "gongxuanzhang",
        "created_at": "2023-04-25T16:34:59Z",
        "body": "没办法"
      }
    ]
  },
  {
    "number": 2762,
    "title": "填充excel，填充的内容如何设置最小行高的前提下，填充的内容超过最小行高时，实现单元格或行的自动行高？",
    "created_at": "2022-10-13T09:31:10Z",
    "closed_at": "2023-02-08T06:42:35Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2762",
    "body": "使用模板填充功能，模板也设置了自适应行高，导出后，只有第一条数据实现了自适应行高。",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2762/comments",
    "author": "yunwenlong",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2023-02-08T06:42:35Z",
        "body": "目前不支持自动适配行高，需要自己设置。"
      }
    ]
  },
  {
    "number": 2753,
    "title": "导出多张图片",
    "created_at": "2022-10-08T02:27:56Z",
    "closed_at": "2022-10-08T08:16:11Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2753",
    "body": "有人跟我一样，用3.1.1版本按照文档的例子，导出多张图片，wps打开是空白的",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2753/comments",
    "author": "CreateQi",
    "comments": [
      {
        "user": "jiaowei051",
        "created_at": "2022-12-11T16:00:22Z",
        "body": "我也是，poi用的是5.2.2"
      }
    ]
  },
  {
    "number": 2746,
    "title": "怎么指定SXSSFWorkbook的rowAccessWindowSize大小",
    "created_at": "2022-09-30T04:21:20Z",
    "closed_at": "2024-07-31T01:18:49Z",
    "labels": [
      "help wanted",
      "developing"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2746",
    "body": "如题",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2746/comments",
    "author": "lldacing",
    "comments": [
      {
        "user": "ljluestc",
        "created_at": "2023-07-18T05:57:39Z",
        "body": "```\r\nimport org.apache.poi.xssf.streaming.SXSSFWorkbook;\r\nimport org.apache.poi.xssf.streaming.SXSSFSheet;\r\npublic class SXSSFWorkbookExample {\r\n    public static void main(String[] args) {\r\n        SXSSFWorkbook workbook = new SXSSFWorkbook();\r\n        SXSSFSheet sheet = workbook.createSheet(\"Sheet1\");\r\n        ((SXSSFSheet) sheet).setRandomAccessWindowSize(100);\r\n        try {\r\n            workbook.close();\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n}\r\n```"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2024-07-19T06:19:15Z",
        "body": "你好，我们发现此Issue已经超过三个月没有活动了，为了更好的帮助您解决问题，我们将在两周后关闭此Issue，如果您仍然有问题，请在两周内内回复此Issue，谢谢！如果您已经解决或者不需要帮助，请忽略此消息。"
      }
    ]
  },
  {
    "number": 2739,
    "title": "使用自定义策略合并单元格时，2k条数据需要耗时10s。且cpu使用率过高。",
    "created_at": "2022-09-26T16:35:01Z",
    "closed_at": "2022-10-11T10:31:46Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2739",
    "body": "**问题描述**\r\n使用自定义策略合并单元格时，2k条数据需要耗时10s。且cpu使用率过高。easyexcel版本:3.0.0-beta3\r\n**自定义策略代码**\r\n```java\r\n public class CellMergeStrategy implements CellWriteHandler {\r\n\r\n    /**\r\n     * 合并字段的下标\r\n     */\r\n    private int[] mergeColumnIndex;\r\n    /**\r\n     * 合并几行\r\n     */\r\n    private int mergeRowIndex;\r\n\r\n    public CellMergeStrategy() {\r\n    }\r\n\r\n    public CellMergeStrategy(int mergeRowIndex, int[] mergeColumnIndex) {\r\n        this.mergeRowIndex = mergeRowIndex;\r\n        this.mergeColumnIndex = mergeColumnIndex;\r\n    }\r\n\r\n    @Override\r\n    public void afterCellDispose(WriteSheetHolder writeSheetHolder, WriteTableHolder writeTableHolder,\r\n                                 List<WriteCellData<?>> list, Cell cell, Head head, Integer integer, Boolean aBoolean) {\r\n        //当前行\r\n        int curRowIndex = cell.getRowIndex();\r\n        //当前列\r\n        int curColIndex = cell.getColumnIndex();\r\n\r\n        if (curRowIndex > mergeRowIndex) {\r\n            for (int columnIndex : mergeColumnIndex) {\r\n                if (curColIndex == columnIndex) {\r\n                    mergeWithPrevRow(writeSheetHolder, cell, curRowIndex, curColIndex);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    private void mergeWithPrevRow(WriteSheetHolder writeSheetHolder, Cell cell, int curRowIndex, int curColIndex) {\r\n        //获取当前行的当前列的数据和上一行的当前列列数据，通过上一行数据是否相同进行合并\r\n        Object curData = cell.getCellTypeEnum() == CellType.STRING ? cell.getStringCellValue() :\r\n                cell.getNumericCellValue();\r\n        Cell preCell = cell.getSheet().getRow(curRowIndex - 1).getCell(curColIndex);\r\n        Object preData = preCell.getCellTypeEnum() == CellType.STRING ? preCell.getStringCellValue() :\r\n                preCell.getNumericCellValue();\r\n\r\n        // 比较当前行的第一列的单元格与上一行是否相同，相同合并当前单元格与上一行\r\n        Cell groupIdCell = cell.getSheet().getRow(curRowIndex).getCell(0);\r\n        Object groupData = groupIdCell.getCellTypeEnum() == CellType.STRING ? groupIdCell.getStringCellValue() :\r\n                groupIdCell.getNumericCellValue();\r\n        Cell groupIdPreCell = cell.getSheet().getRow(curRowIndex - 1).getCell(0);\r\n        Object groupPreData = groupIdPreCell.getCellTypeEnum() == CellType.STRING ? groupIdPreCell.getStringCellValue() :\r\n                groupIdPreCell.getNumericCellValue();\r\n        if (curData.equals(preData)&& Objects.equals(groupData,groupPreData)) {\r\n            Sheet sheet = writeSheetHolder.getSheet();\r\n            List<CellRangeAddress> mergeRegions = sheet.getMergedRegions();\r\n            boolean isMerged = false;\r\n            for (int i = 0; i < mergeRegions.size() && !isMerged; i++) {\r\n                CellRangeAddress cellRangeAddr = mergeRegions.get(i);\r\n                // 若上一个单元格已经被合并，则先移出原有的合并单元，再重新添加合并单元\r\n                if (cellRangeAddr.isInRange(curRowIndex - 1, curColIndex)) {\r\n                    sheet.removeMergedRegion(i);\r\n                    cellRangeAddr.setLastRow(curRowIndex);\r\n                    sheet.addMergedRegionUnsafe(cellRangeAddr);\r\n                    isMerged = true;\r\n                }\r\n            }\r\n            // 若上一个单元格未被合并，则新增合并单元\r\n            if (!isMerged) {\r\n                CellRangeAddress cellRangeAddress = new CellRangeAddress(curRowIndex - 1, curRowIndex, curColIndex,\r\n                        curColIndex);\r\n                sheet.addMergedRegionUnsafe(cellRangeAddress);\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n**异常提示**\r\n结束任务后，却依旧发现cpu占用率高，排查发现。\r\n**\r\n\"http-nio-9093-exec-18\" #475 daemon prio=5 os_prio=0 tid=0x00007f5e9000a000 nid=0x46f0 runnable [0x00007f5e19c90000]\r\n   java.lang.Thread.State: RUNNABLE\r\n\tat org.apache.poi.ss.util.CellReference.separateRefParts(CellReference.java:404)\r\n\tat org.apache.poi.ss.util.CellReference.<init>(CellReference.java:114)\r\n\tat org.apache.poi.ss.util.CellRangeAddress.valueOf(CellRangeAddress.java:133)\r\n\tat org.apache.poi.xssf.usermodel.XSSFSheet.getMergedRegions(XSSFSheet.java:1348)\r\n\tat org.apache.poi.xssf.streaming.SXSSFSheet.getMergedRegions(SXSSFSheet.java:508)\r\n\tat com.tbit.uqzc.client.common.strategy.CellMergeStrategy.mergeWithPrevRow(CellMergeStrategy.java:77)\r\n**\r\n**\r\n\"http-nio-9093-exec-18\" #475 daemon prio=5 os_prio=0 tid=0x00007f5e9000a000 nid=0x46f0 runnable [0x00007f5e19c8f000]\r\n   java.lang.Thread.State: RUNNABLE\r\n\tat java.util.regex.Pattern$CharProperty.match(Pattern.java:3790)\r\n\tat java.util.regex.Pattern$Curly.match0(Pattern.java:4274)\r\n\tat java.util.regex.Pattern$Curly.match(Pattern.java:4248)\r\n\tat java.util.regex.Pattern$Ques.match(Pattern.java:4196)\r\n\tat java.util.regex.Pattern$GroupHead.match(Pattern.java:4672)\r\n\tat java.util.regex.Pattern$Branch.match(Pattern.java:4618)\r\n\tat java.util.regex.Pattern$BranchConn.match(Pattern.java:4582)\r\n\tat java.util.regex.Pattern$GroupTail.match(Pattern.java:4731)\r\n\tat java.util.regex.Pattern$Curly.match0(Pattern.java:4293)\r\n\tat java.util.regex.Pattern$Curly.match(Pattern.java:4248)\r\n\tat java.util.regex.Pattern$Ques.match(Pattern.java:4196)\r\n\tat java.util.regex.Pattern$GroupHead.match(Pattern.java:4672)\r\n\tat java.util.regex.Pattern$Branch.match(Pattern.java:4618)\r\n\tat java.util.regex.Matcher.match(Matcher.java:1270)\r\n\tat java.util.regex.Matcher.matches(Matcher.java:604)\r\n\tat org.apache.poi.ss.util.CellReference.separateRefParts(CellReference.java:398)\r\n\tat org.apache.poi.ss.util.CellReference.<init>(CellReference.java:114)\r\n\tat org.apache.poi.ss.util.CellRangeAddress.valueOf(CellRangeAddress.java:133)\r\n**\r\n\r\n请问这种有无解决方案。望各位指教。\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2739/comments",
    "author": "yixingang0525",
    "comments": [
      {
        "user": "lixuanii",
        "created_at": "2022-09-27T08:29:34Z",
        "body": "我也遇到了这个问题，导出500条数据，需要5分钟，哭了"
      },
      {
        "user": "yixingang0525",
        "created_at": "2022-09-28T13:34:38Z",
        "body": "> 我也遇到了这个问题，导出500条数据，需要5分钟，哭了\r\n\r\n有解决方案，请分享给我，万分感谢。"
      },
      {
        "user": "GoodYellow",
        "created_at": "2022-11-24T06:27:41Z",
        "body": "求解决方案"
      },
      {
        "user": "penghong5201",
        "created_at": "2024-05-27T10:47:03Z",
        "body": "解决方案有吗"
      },
      {
        "user": "Second-dimension",
        "created_at": "2024-09-14T03:19:53Z",
        "body": "有解决方法了吗"
      }
    ]
  },
  {
    "number": 2738,
    "title": "easy excel直接操作单元格",
    "created_at": "2022-09-26T15:22:24Z",
    "closed_at": "2023-02-08T06:50:46Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2738",
    "body": "我的需求比较奇特，某些场景知道了单元格的行号及列号，想直接写单元格，是否有api提供。看文档写的部分都是基于javabean list去写的。（是否是不支持的  要用poi去实现吗）",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2738/comments",
    "author": "snow-flowers",
    "comments": [
      {
        "user": "kaciry0927",
        "created_at": "2022-10-14T02:44:28Z",
        "body": "implements CellWriteHandler"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2023-02-08T06:50:43Z",
        "body": "自定义拦截器，可以实现"
      }
    ]
  },
  {
    "number": 2708,
    "title": "从一个excel读取数据，添加若干列，写入到另一个excel，请问怎么实现？（excel大概有10W数据）",
    "created_at": "2022-09-08T16:07:21Z",
    "closed_at": "2023-02-21T15:37:20Z",
    "labels": [
      "help wanted",
      "pending verification"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2708",
    "body": "从一个excel读取数据，添加若干列，写入到另一个excel，请问怎么实现？（excel大概有10W数据）\r\n一次性读取的然后写入的话，会有10W数据加载到内存中，可能有OOM的风险。请问从一个excel到另一个excel的分批读写，该如何实现？",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2708/comments",
    "author": "nuptkwz",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2023-02-08T06:29:30Z",
        "body": "可以尝试边读边写即可。"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2023-02-21T15:37:20Z",
        "body": "不知道您是否已经解决该问题？我们先暂时关闭这个问题，如果还存在问题请重新Reopen这个issue"
      }
    ]
  },
  {
    "number": 2705,
    "title": "单元格内文本换行应该怎么操作",
    "created_at": "2022-09-08T03:20:57Z",
    "closed_at": "2023-02-08T06:24:36Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2705",
    "body": "单元格内文本换行应该怎么操作",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2705/comments",
    "author": "number-0",
    "comments": [
      {
        "user": "william0919",
        "created_at": "2022-11-15T09:17:08Z",
        "body": "试了好久，实体字段上加这个@ContentStyle(wrapped = BooleanEnum.TRUE)，然后值里面加\\n"
      }
    ]
  },
  {
    "number": 2698,
    "title": "国产机上用奇安信浏览器导出来的excel打开是乱码",
    "created_at": "2022-09-05T03:31:21Z",
    "closed_at": "2023-01-31T01:15:41Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2698",
    "body": "\r\n客户有的使用的是国产机，上面用奇安信浏览器导出来的excel表格是乱码格式，找了找issue中没有发现类似的问题，大佬知道如何解决吗？",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2698/comments",
    "author": "wzy010",
    "comments": [
      {
        "user": "linghengqian",
        "created_at": "2022-09-06T05:52:22Z",
        "body": "- You need to provide a reproducible unit test.\r\n- You need to confirm whether the encoding format of the corresponding Microsoft Office or other office software is UTF-8.\r\n- If you cannot provide more information, this issue should be closed and marked as invalid."
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2023-01-31T01:15:41Z",
        "body": "不知道您是否已经通过其他渠道解决该问题？我们先暂时关闭这个问题，如果还存在问题请重新Reopen这个issue"
      }
    ]
  },
  {
    "number": 2691,
    "title": "读取excel如何获取单元格对应背景颜色",
    "created_at": "2022-08-31T15:41:59Z",
    "closed_at": "2023-02-01T12:48:48Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2691",
    "body": "请教，读取excel如何获取单元格对应背景颜色\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2691/comments",
    "author": "zhanglingxing",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2023-02-01T12:48:48Z",
        "body": "目前不支持获取样式"
      }
    ]
  },
  {
    "number": 2685,
    "title": "3.1.0版本，单文件多sheet页填充数据后设置格式失败，切换老版本成功",
    "created_at": "2022-08-30T06:46:31Z",
    "closed_at": "2024-07-31T01:18:53Z",
    "labels": [
      "help wanted",
      "pending verification"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2685",
    "body": "**异常代码**\r\n```java\r\n    private void exportExcel(int statDay, String filePath) throws FileNotFoundException {\r\n             //本周数据\r\n            List<ThreeListsNoEnterNetEntity> threeListsNoEnterNetEntities = exportService.exportExcelInfoNoEnter(day, city.get(i));\r\n            List<ThreeListsIllegalOperationEntity> threeListsIllegalOperationEntities = exportService.exportExcelInfoIllegalOperation(week, day, city.get(i));\r\n\r\n            //上周数据\r\n            List<ThreeListsNoEnterNetEntity> lastNoEnterNetEntities = exportService.exportExcelInfoNoEnter(lastDay, city.get(i));\r\n            List<ThreeListsIllegalOperationEntity>lastIllegalOperationEntities = exportService.exportExcelInfoIllegalOperation(lastWeek, lastDay, city.get(i));\r\n\r\n            //检查是否有重复，记录重复数据id 在excel中标记背景颜色\r\n            List<Integer> checkNoEnterNet = checkNoEnterNet(threeListsNoEnterNetEntities, lastNoEnterNetEntities);\r\n            List<Integer> checkIllegalOperation = checkIllegalOperation(threeListsIllegalOperationEntities, lastIllegalOperationEntities);\r\n\r\n            excelColorNoEnterWriteHandler checkNoEnterNetWriteHandler = new excelColorNoEnterWriteHandler(checkNoEnterNet);\r\n            excelColorIllegalWriteHandler checkIllegalOperationWriteHandler = new excelColorIllegalWriteHandler(checkIllegalOperation);\r\n            //excelColorWriteHandler implements CellWriteHandler.class 不同的sheet使用不同的CellWriteHandler实现类\r\n\r\n            String templateFileName = \"D:\\\\project_my\\\\threeListExport\\\\src\\\\main\\\\resources\\\\exportModel\\\\file.xlsx\";\r\n            String fileName = \"\\\\文件路径\";\r\n\r\n            OutputStream outputStream = new FileOutputStream(filePath + fileName);\r\n            ExcelWriter excelWriter = EasyExcel.write(outputStream).withTemplate(templateFileName).build();\r\n            WriteSheet writeSheet0 = EasyExcel.writerSheet(0, \"sheet1\").registerWriteHandler(checkNoEnterNetWriteHandler).build();\r\n            WriteSheet writeSheet1 = EasyExcel.writerSheet(1, \"sheet2\").registerWriteHandler(checkIllegalOperationWriteHandler).build();\r\n\r\n\r\n            FillConfig fillConfig = FillConfig.builder().forceNewRow(Boolean.TRUE).build();\r\n\r\n            excelWriter.fill(threeListsNoEnterNetEntities, fillConfig, writeSheet0);\r\n            excelWriter.fill(threeListsIllegalOperationEntities, fillConfig, writeSheet1);\r\n     }\r\n```\r\n**异常提示**\r\n    版本：easyexcel 3.1.0\r\n    功能：单个excel多sheet页导出，不同的sheet页使用不同的类实现CellWriteHandler 重写afterCellDispose()方法设置单元格格式，注册到WriteSheet（不同的sheet页）中，填充数据并导出excel。\r\n    可以导出excel，但是设置格式失败，背景没有填充。\r\n    打日志后显示方法有调用，但导出的excel格式无变化。尝试给所有表格填充、去掉fillConfig，handler类的方法依旧无法设置格式。\r\n    切换2.2.6版本后格式设置功能正常\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2685/comments",
    "author": "QAQ5685150",
    "comments": [
      {
        "user": "ljluestc",
        "created_at": "2023-07-18T06:18:07Z",
        "body": "确保 excelColorNoEnterWriteHandler 和 excelColorIllegalWriteHandler 类实现了 CellWriteHandler 接口，并正确重写了 afterCellDispose() 方法。\r\n\r\n将 excelColorNoEnterWriteHandler 和 excelColorIllegalWriteHandler 注册到 WriteSheet 之前，先注册到 ExcelWriter 上\r\n```\r\nexcelWriter.registerWriteHandler(checkNoEnterNetWriteHandler);\r\nexcelWriter.registerWriteHandler(checkIllegalOperationWriteHandler);\r\nWriteSheet writeSheet0 = EasyExcel.writerSheet(0, \"sheet1\").build();\r\nWriteSheet writeSheet1 = EasyExcel.writerSheet(1, \"sheet2\").build();\r\n```\r\n使用 WriteSheetBuilder 的 registerWriteHandler() 方法将处理程序注册到 WriteSheet，而不是使用 build() 方法之后再注册\r\n\r\n```\r\nWriteSheet writeSheet0 = EasyExcel.writerSheet(0, \"sheet1\")\r\n    .registerWriteHandler(checkNoEnterNetWriteHandler)\r\n    .build();\r\nWriteSheet writeSheet1 = EasyExcel.writerSheet(1, \"sheet2\")\r\n    .registerWriteHandler(checkIllegalOperationWriteHandler)\r\n    .build();\r\n```"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2024-07-19T06:19:21Z",
        "body": "你好，我们发现此Issue已经超过三个月没有活动了，为了更好的帮助您解决问题，我们将在两周后关闭此Issue，如果您仍然有问题，请在两周内内回复此Issue，谢谢！如果您已经解决或者不需要帮助，请忽略此消息。"
      }
    ]
  },
  {
    "number": 2683,
    "title": "可以通过OSS的流式下载，使用easyExcel，使用OSS上的文件吗？",
    "created_at": "2022-08-29T06:33:28Z",
    "closed_at": "2023-02-08T12:56:39Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2683",
    "body": "想要通过流式下载，然后通过流处理文件，而不是完全下载后再处理。有人实现过，或者可行吗？目前在处于设计阶段并且我这边测试条件有限\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2683/comments",
    "author": "hqgordon",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2023-02-01T12:44:57Z",
        "body": "这个后续会提供一个完整的oss 案例。"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2023-02-08T12:56:39Z",
        "body": "直接调用`com.aliyun.oss.OSSClient#getObject(com.aliyun.oss.model.GetObjectRequest)` 然后获取流即可，如果可以话尽量获取压缩过的图片，整个过程中图片都存储在内存，且无法优化。"
      }
    ]
  },
  {
    "number": 2681,
    "title": "超链接",
    "created_at": "2022-08-27T11:25:21Z",
    "closed_at": "2023-05-19T13:23:57Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2681",
    "body": "请问支持给一个单元格的部分文字设置超链接吗？\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2681/comments",
    "author": "steins4",
    "comments": [
      {
        "user": "gongxuanzhang",
        "created_at": "2023-03-29T15:59:34Z",
        "body": "需要手动设置RichStyle"
      }
    ]
  },
  {
    "number": 2677,
    "title": "如何将写入输出流的数据放入输入流？",
    "created_at": "2022-08-25T04:00:27Z",
    "closed_at": "2023-02-01T12:43:47Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2677",
    "body": "Easyexcel将数据写入HttpOutput，如何将HttpOutput流中的数据全部写入输入流呢？试过HttpOutput.sendContent(inputstream)，但是没有写入任何内容。请问有什么其他方法实现写入吗？\r\n谢谢！\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2677/comments",
    "author": "qcwu",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2023-02-01T12:43:47Z",
        "body": "1. 使用 `bytearrayoutputstream` 临时存储，然后再想办法，当然这个也比较占用内存。\r\n2. 或者 存储成临时文件，这个需要考虑删除磁盘。"
      }
    ]
  },
  {
    "number": 2676,
    "title": "方法未找到",
    "created_at": "2022-08-25T02:09:27Z",
    "closed_at": "2022-08-25T03:59:53Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2676",
    "body": "\r\n**异常代码**\r\n```java\r\n   Map<String, Object> map = MapUtils.newHashMap();\r\n        map.put(\"accId\", query2.getAccId());\r\n        map.put(\"accName\", query2.getAccName());\r\n        map.put(\"bankName\", query2.getBankName());\r\n        EasyExcel.write(fileName).withTemplate(templateFileName).sheet().doFill(map);\r\n```\r\n**异常提示**\r\ncom.alibaba.excel.exception.ExcelGenerateException: java.lang.NoSuchMethodError: org.apache.poi.ss.usermodel.Cell.getCellType()Lorg/apache/poi/ss/usermodel/CellType;\r\n        at com.alibaba.excel.write.ExcelBuilderImpl.fill(ExcelBuilderImpl.java:88)\r\n**建议描述**\r\ntomcat8.5的环境下会调用会报这个错",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2676/comments",
    "author": "KnightGeorge",
    "comments": [
      {
        "user": "KnightGeorge",
        "created_at": "2022-08-25T02:10:39Z",
        "body": "com.alibaba.excel.exception.ExcelGenerateException: java.lang.NoSuchMethodError: org.apache.poi.ss.usermodel.Cell.getCellType()Lorg/apache/poi/ss/usermodel/CellType;\r\n        at com.alibaba.excel.write.ExcelBuilderImpl.fill(ExcelBuilderImpl.java:88)\r\n        at com.alibaba.excel.ExcelWriter.fill(ExcelWriter.java:107)\r\n        at com.alibaba.excel.write.builder.ExcelWriterSheetBuilder.doFill(ExcelWriterSheetBuilder.java:74)\r\n        at com.alibaba.excel.write.builder.ExcelWriterSheetBuilder.doFill(ExcelWriterSheetBuilder.java:67)\r\n        at com.snfc.snnb.account.controller.AccountDetailQueryController.exportXls(AccountDetailQueryController.java:108)\r\n        at com.snfc.snnb.account.controller.AccountDetailQueryController$$FastClassBySpringCGLIB$$16c4db41.invoke(<generated>)\r\n        at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\r\n        at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)\r\n        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\r\n        at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)\r\n        at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)\r\n        at org.jeecg.common.aspect.DictAspect.doAround(DictAspect.java:50)\r\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n        at java.lang.reflect.Method.invoke(Method.java:498)\r\n        at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)\r\n        at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)\r\n        at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)\r\n        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n        at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)\r\n        at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)\r\n        at org.jeecg.common.aspect.AutoLogAspect.around(AutoLogAspect.java:56)\r\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n        at java.lang.reflect.Method.invoke(Method.java:498)\r\n        at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)\r\n        at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)\r\n        at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)\r\n        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)\r\n        at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)\r\n        at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)\r\n        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n        at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)\r\n        at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)\r\n        at com.snfc.snnb.account.controller.AccountDetailQueryController$$EnhancerBySpringCGLIB$$2d5a6933.exportXls(<generated>)\r\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n        at java.lang.reflect.Method.invoke(Method.java:498)\r\n        at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)\r\n        at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)\r\n        at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)\r\n        at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)\r\n        at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)\r\n        at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n        at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)\r\n        at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)\r\n        at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n        at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)\r\n        at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)\r\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\r\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n        at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)\r\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n        at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)\r\n        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n        at com.github.xiaoymin.knife4j.spring.filter.ProductionSecurityFilter.doFilter(ProductionSecurityFilter.java:53)\r\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n        at com.github.xiaoymin.knife4j.spring.filter.SecurityBasicAuthFilter.doFilter(SecurityBasicAuthFilter.java:90)\r\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n        at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)\r\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n        at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:88)\r\n        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n        at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)\r\n        at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)\r\n        at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)\r\n        at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)\r\n        at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)\r\n        at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)\r\n        at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)\r\n        at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)\r\n        at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)\r\n        at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:450)\r\n        at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)\r\n        at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)\r\n        at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)\r\n        at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)\r\n        at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)\r\n        at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)\r\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n        at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n        at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n        at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)\r\n        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n        at org.springframework.boot.web.servlet.support.ErrorPageFilter.doFilter(ErrorPageFilter.java:126)\r\n        at org.springframework.boot.web.servlet.support.ErrorPageFilter.access$000(ErrorPageFilter.java:64)\r\n        at org.springframework.boot.web.servlet.support.ErrorPageFilter$1.doFilterInternal(ErrorPageFilter.java:101)\r\n        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n        at org.springframework.boot.web.servlet.support.ErrorPageFilter.doFilter(ErrorPageFilter.java:119)\r\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n        at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)\r\n        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n        at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:543)\r\n        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)\r\n        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n        at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:698)\r\n        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:367)\r\n        at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:639)\r\n        at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n        at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:882)\r\n        at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1691)\r\n        at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n        at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)\r\n        at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)\r\n        at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n        at java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.lang.NoSuchMethodError: org.apache.poi.ss.usermodel.Cell.getCellType()Lorg/apache/poi/ss/usermodel/CellType;\r\n        at com.alibaba.excel.write.executor.ExcelWriteFillExecutor.prepareData(ExcelWriteFillExecutor.java:481)\r\n        at com.alibaba.excel.write.executor.ExcelWriteFillExecutor.readTemplateData(ExcelWriteFillExecutor.java:460)\r\n        at com.alibaba.excel.write.executor.ExcelWriteFillExecutor.fill(ExcelWriteFillExecutor.java:130)\r\n        at com.alibaba.excel.write.ExcelBuilderImpl.fill(ExcelBuilderImpl.java:82)\r\n        ... 133 common frames omitted\r\n"
      },
      {
        "user": "KnightGeorge",
        "created_at": "2022-08-25T04:00:10Z",
        "body": "poi的jar包冲突"
      },
      {
        "user": "Hopkin23",
        "created_at": "2022-08-26T02:14:42Z",
        "body": "确实是jar包冲突，一看提交日志，同事后期引入了另一个版本的poi"
      }
    ]
  },
  {
    "number": 2673,
    "title": "根据JAVA对象导出Excel模版，请问如何将某个列全部设置为文本格式",
    "created_at": "2022-08-24T09:13:32Z",
    "closed_at": "2024-07-31T01:18:55Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2673",
    "body": "版本：3.0.2\r\nEasy-Excel 3.0.2\r\n\r\n问题：根据JAVA对象导出Excel模版，请问如何将某个列全部设置为文本格式，\r\n 找了很多文档都没解决，我太菜了求助。现在填写我导出的模版 填写日期会变成2022/10/10 我想填写的时候是 2022-10-10\r\n\r\npublic class CustomWriteHandler implements CellWriteHandler {\r\n    @Override\r\n    public void afterCellDispose(CellWriteHandlerContext context) {\r\n        final Cell cell = context.getCell();\r\n        final CellStyle cellStyle = context.getWriteWorkbookHolder().getWorkbook().createCellStyle();\r\n        final DataFormat dataFormat = context.getWriteWorkbookHolder().getWorkbook().createDataFormat();\r\n        final short format = dataFormat.getFormat(\"@\");\r\n        // 设置为文本\r\n        cellStyle.setDataFormat(format);\r\n        cell.setCellStyle(cellStyle);\r\n    }\r\n}\r\n\r\n太难了 找了很多文档都没解决问题 求助。\r\n\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2673/comments",
    "author": "zhangchaoyanggit",
    "comments": [
      {
        "user": "GSephrioth",
        "created_at": "2022-08-26T02:51:35Z",
        "body": "方法1：pojo加个属性，String类型的，自己转好日期格式写进去。原来Date类型的不要写入excel\r\n方法2：自定义converter"
      },
      {
        "user": "zhangchaoyanggit",
        "created_at": "2022-08-26T02:56:12Z",
        "body": "> 方法1：pojo加个属性，字符串类型的，自己转好日期格式写。原来日期类型的不要写入excel 方法2：自定义转换器\r\n\r\n你这种只是导出数据的时候设置某个row的某个cell吧 ，我是想让整个cell列全部是文本。 查了半天找到一个\r\npublic class CellWriteHandler implements SheetWriteHandler {\r\n\r\n    @Override\r\n    public void afterSheetCreate(WriteWorkbookHolder writeWorkbookHolder,\r\n                                 WriteSheetHolder writeSheetHolder) {\r\n        SXSSFSheet sxssfSheet = (SXSSFSheet) writeSheetHolder.getSheet();\r\n        final String sheetName = writeSheetHolder.getSheet().getSheetName();\r\n        final Integer cellNumber = ExcelFileDownLoadConfig.getCellNumber(sheetName);\r\n        for (int i = 0; i < cellNumber; i++) {\r\n            final CellStyle cellStyle = writeWorkbookHolder.getCachedWorkbook().createCellStyle();\r\n            cellStyle.setDataFormat((short) 49);\r\n            sxssfSheet.setDefaultColumnStyle(i, cellStyle);\r\n        }\r\n    }\r\n不过这里的cell列的个数 需要自己配置"
      },
      {
        "user": "KodoShinichi",
        "created_at": "2023-06-14T06:10:43Z",
        "body": "@zhangchaoyanggit \r\n我的解决方案是 写一个 RowWriteHandler 在写表头时获取有多少列 然后设置 每列的文本样式\r\n\r\n```java\r\n**\r\n * 自定义行处理器\r\n *\r\n * @author LiuYuan\r\n * @date 2023/06/14 11:00\r\n */\r\npublic class ColumnTextStyleRowWriteHandler implements RowWriteHandler {\r\n\r\n    @Override\r\n    public void afterRowDispose(WriteSheetHolder writeSheetHolder, WriteTableHolder writeTableHolder, Row row, Integer relativeRowIndex, Boolean isHead) {\r\n        if (isHead) {\r\n            // 设置单元格样式为文本\r\n            CellStyle cellStyle = row.getSheet().getWorkbook().createCellStyle();\r\n            DataFormat format = row.getSheet().getWorkbook().createDataFormat();\r\n            cellStyle.setDataFormat(format.getFormat(\"@\"));\r\n            // 获得列的数量\r\n            int columnCount = row.getLastCellNum();\r\n            for (int i = 0; i < columnCount; i++) {\r\n                Sheet sheet = writeSheetHolder.getSheet();\r\n                sheet.setDefaultColumnStyle(i, cellStyle);\r\n            }\r\n        }\r\n    }\r\n}"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2024-07-19T06:19:23Z",
        "body": "你好，我们发现此Issue已经超过三个月没有活动了，为了更好的帮助您解决问题，我们将在两周后关闭此Issue，如果您仍然有问题，请在两周内内回复此Issue，谢谢！如果您已经解决或者不需要帮助，请忽略此消息。"
      }
    ]
  },
  {
    "number": 2648,
    "title": "如何自定义 DataFormat",
    "created_at": "2022-08-15T10:42:19Z",
    "closed_at": "2023-02-08T12:58:20Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2648",
    "body": "        \"General\",\r\n        \"0\",\r\n        \"0.00\",\r\n        \"#,##0\",\r\n        \"#,##0.00\",\r\n        \"\\\"$\\\"#,##0_);(\\\"$\\\"#,##0)\",\r\n        \"\\\"$\\\"#,##0_);[Red](\\\"$\\\"#,##0)\",\r\n        \"\\\"$\\\"#,##0.00_);(\\\"$\\\"#,##0.00)\",\r\n        \"\\\"$\\\"#,##0.00_);[Red](\\\"$\\\"#,##0.00)\",\r\n        \"0%\",\r\n        \"0.00%\",\r\n        \"0.00E+00\",\r\n        \"# ?/?\",\r\n\r\n目前 dataformat 支持的类型 已经写死，请问 如何自定义 dataformat 比如  我想返回 的是 5位小数的百分比\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2648/comments",
    "author": "bangzhu-simple",
    "comments": [
      {
        "user": "cdgjzzy",
        "created_at": "2022-10-28T07:35:28Z",
        "body": "实现 CellWriterHandler，重写 public void afterCellDispose(CellWriteHandlerContext context)\r\n```\r\n            WriteCellData<?> firstCellData = context.getFirstCellData();\r\n            WriteCellStyle cellStyle = firstCellData.getOrCreateStyle();\r\n            DataFormatData dataFormatData = new DataFormatData();\r\n            dataFormatData.setFormat(\"#,##0.00000;[Red](#,##0.00000)\");\r\n            cellStyle.setDataFormatData(dataFormatData);\r\n```"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2023-02-08T12:58:19Z",
        "body": "最简单 就是 用 ContentStyle 注解"
      },
      {
        "user": "JerryBai0106",
        "created_at": "2025-01-26T04:52:42Z",
        "body": "@zhuangjiaju 用这个方案可以的"
      }
    ]
  },
  {
    "number": 2624,
    "title": "如何读取单元格公式计算后的值？",
    "created_at": "2022-08-03T03:24:56Z",
    "closed_at": "2023-02-08T13:06:46Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2624",
    "body": "\r\nFormulaData里面只有公式，读不到公式计算后的值。求教\r\n\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2624/comments",
    "author": "shihonghao",
    "comments": [
      {
        "user": "juzi214032",
        "created_at": "2022-08-09T15:35:57Z",
        "body": "给个demo看看\r\n"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2023-02-08T13:06:46Z",
        "body": "读取单元格的值 只要最简单的读就能读取到了，如果代表没有放入值。 和 FormulaData对象没关系"
      }
    ]
  },
  {
    "number": 2615,
    "title": "表格内容靠右如何设置？",
    "created_at": "2022-07-29T03:13:57Z",
    "closed_at": "2022-08-02T12:52:34Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2615",
    "body": "如题，表格内容靠右如何设置？感谢",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2615/comments",
    "author": "Awenisme",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2022-08-02T12:52:34Z",
        "body": "参照自定义样式"
      }
    ]
  },
  {
    "number": 2609,
    "title": "写csv文件用excel2013打开中文乱码",
    "created_at": "2022-07-27T07:47:50Z",
    "closed_at": "2022-08-02T02:37:15Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2609",
    "body": "代码如下：\r\n\r\n EasyExcelFactory.write(filePath + fileName).charset(Charset.forName(\"UTF-8\")).excelType(ExcelTypeEnum.CSV).head(getHeader(mapList)).automaticMergeHead(false)\r\n                        .sheet(fileName).doWrite(generateGzData(listMap));\r\n\r\ndoWrite里面的数据集合是中文的\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2609/comments",
    "author": "liweiye-2021",
    "comments": [
      {
        "user": "liweiye-2021",
        "created_at": "2022-07-27T07:55:16Z",
        "body": "设置GBK编码就没问题了，刚刚尝试"
      },
      {
        "user": "linghengqian",
        "created_at": "2022-07-27T16:04:52Z",
        "body": "- This is apparently due to a configuration issue with Microsoft Excel in your Windows environment. \n\n- Commercial software should not be the focus of this project, and I recommend closing this issue."
      }
    ]
  },
  {
    "number": 2608,
    "title": "Why get the total number of rows may be inaccurate?",
    "created_at": "2022-07-26T12:05:41Z",
    "closed_at": "2022-08-02T12:59:45Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2608",
    "body": "I'm curious about the circumstances that may lead to inaccurate total number of rows?🤔️",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2608/comments",
    "author": "DangHT",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2022-08-02T12:59:45Z",
        "body": "This number of rows is written by the software OFFCE.\r\nIf not the official processing of Excel, may not write the total number of rows.\r\n"
      }
    ]
  },
  {
    "number": 2583,
    "title": "给定一个包含几十万行的ResultSet，如何流式导出Excel文件?",
    "created_at": "2022-07-12T08:48:42Z",
    "closed_at": "2022-08-02T13:16:02Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2583",
    "body": "给定一个包含几十万行的ResultSet，如何流式导出Excel文件?\r\n\r\n文档和测试代码没看到相关例子，总不可能把几十万行全部加载到内存里面 ?\r\n根据API，我不可能把几十万行全部读到一个Collection<?>里面吧？\r\n\r\n\r\n```\r\nExcelWriterSheetBuilder#doWrite(Collection<?> data)\r\n```",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2583/comments",
    "author": "WestFarmer",
    "comments": [
      {
        "user": "MroZ11",
        "created_at": "2022-07-22T06:31:43Z",
        "body": "看下官网分页写  \r\n```\r\n    /**\r\n     * 重复多次写入\r\n     * <p>\r\n     * 1. 创建excel对应的实体对象 参照{@link ComplexHeadData}\r\n     * <p>\r\n     * 2. 使用{@link ExcelProperty}注解指定复杂的头\r\n     * <p>\r\n     * 3. 直接调用二次写入即可\r\n     */\r\n    @Test\r\n    public void repeatedWrite() {\r\n        // 方法1: 如果写到同一个sheet\r\n        String fileName = TestFileUtil.getPath() + \"repeatedWrite\" + System.currentTimeMillis() + \".xlsx\";\r\n        // 这里 需要指定写用哪个class去写\r\n        try (ExcelWriter excelWriter = EasyExcel.write(fileName, DemoData.class).build()) {\r\n            // 这里注意 如果同一个sheet只要创建一次\r\n            WriteSheet writeSheet = EasyExcel.writerSheet(\"模板\").build();\r\n            // 去调用写入,这里我调用了五次，实际使用时根据数据库分页的总的页数来\r\n            for (int i = 0; i < 5; i++) {\r\n                // 分页去数据库查询数据 这里可以去数据库查询每一页的数据\r\n                List<DemoData> data = data();\r\n                excelWriter.write(data, writeSheet);\r\n            }\r\n        }\r\n\r\n        // 方法2: 如果写到不同的sheet 同一个对象\r\n        fileName = TestFileUtil.getPath() + \"repeatedWrite\" + System.currentTimeMillis() + \".xlsx\";\r\n        // 这里 指定文件\r\n        try (ExcelWriter excelWriter = EasyExcel.write(fileName, DemoData.class).build()) {\r\n            // 去调用写入,这里我调用了五次，实际使用时根据数据库分页的总的页数来。这里最终会写到5个sheet里面\r\n            for (int i = 0; i < 5; i++) {\r\n                // 每次都要创建writeSheet 这里注意必须指定sheetNo 而且sheetName必须不一样\r\n                WriteSheet writeSheet = EasyExcel.writerSheet(i, \"模板\" + i).build();\r\n                // 分页去数据库查询数据 这里可以去数据库查询每一页的数据\r\n                List<DemoData> data = data();\r\n                excelWriter.write(data, writeSheet);\r\n            }\r\n        }\r\n\r\n        // 方法3 如果写到不同的sheet 不同的对象\r\n        fileName = TestFileUtil.getPath() + \"repeatedWrite\" + System.currentTimeMillis() + \".xlsx\";\r\n        // 这里 指定文件\r\n        try (ExcelWriter excelWriter = EasyExcel.write(fileName).build()) {\r\n            // 去调用写入,这里我调用了五次，实际使用时根据数据库分页的总的页数来。这里最终会写到5个sheet里面\r\n            for (int i = 0; i < 5; i++) {\r\n                // 每次都要创建writeSheet 这里注意必须指定sheetNo 而且sheetName必须不一样。这里注意DemoData.class 可以每次都变，我这里为了方便 所以用的同一个class\r\n                // 实际上可以一直变\r\n                WriteSheet writeSheet = EasyExcel.writerSheet(i, \"模板\" + i).head(DemoData.class).build();\r\n                // 分页去数据库查询数据 这里可以去数据库查询每一页的数据\r\n                List<DemoData> data = data();\r\n                excelWriter.write(data, writeSheet);\r\n            }\r\n        }\r\n\r\n    }\r\n```"
      }
    ]
  },
  {
    "number": 2582,
    "title": "针对最新版的POI 5.x，这句话是否依然成立？",
    "created_at": "2022-07-12T03:37:45Z",
    "closed_at": "2022-08-02T13:16:36Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2582",
    "body": "针对最新版的POI 5.x，这句话是否依然成立？\r\n> 一个3M的excel用POI sax解析依然需要100M左右内存\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2582/comments",
    "author": "WestFarmer",
    "comments": [
      {
        "user": "linghengqian",
        "created_at": "2022-07-14T15:17:01Z",
        "body": "If you feel that this sentence is not valid, you need to point to or write a unit test of JMH."
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2022-08-02T13:16:36Z",
        "body": "解析 没有用poi"
      }
    ]
  },
  {
    "number": 2576,
    "title": "easyexcel首次导入解析慢",
    "created_at": "2022-07-07T08:15:40Z",
    "closed_at": "2024-07-31T01:19:00Z",
    "labels": [
      "help wanted",
      "pending verification",
      "planning"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2576",
    "body": "使用的easyexcel，版本2.1.2。\r\n在使用easyexcel上传解析的时候，连续调用多次，首次excel解析特别慢。\r\nexcel数据量大小为 171行，\r\n\r\n\r\n16:08:08.323 [main] DEBUG c.a.e.m.property.ExcelHeadProperty - The initialization sheet/table 'ExcelHeadProperty' is complete , head kind is CLASS\r\n16:08:08.343 [main] DEBUG c.a.e.context.AnalysisContextImpl - Initialization 'AnalysisContextImpl' complete\r\n16:08:08.412 [main] DEBUG c.a.e.c.s.SimpleReadCacheSelector - Use map cache.size:10796\r\n16:08:08.640 [main] DEBUG com.alibaba.excel.util.SheetUtils - The first is read by default.\r\n16:08:08.640 [main] DEBUG c.a.e.m.property.ExcelHeadProperty - The initialization sheet/table 'ExcelHeadProperty' is complete , head kind is CLASS\r\n16:08:08.640 [main] DEBUG c.a.e.context.AnalysisContextImpl - Began to read：ReadSheetHolder{sheetNo=0, sheetName='表格'} com.alibaba.excel.read.metadata.holder.ReadSheetHolder@1cd5639\r\n数据处理完毕\r\n耗时：427\r\n171\r\ntest开始处理上传\r\n16:08:08.736 [main] DEBUG c.a.e.m.property.ExcelHeadProperty - The initialization sheet/table 'ExcelHeadProperty' is complete , head kind is CLASS\r\n16:08:08.736 [main] DEBUG c.a.e.context.AnalysisContextImpl - Initialization 'AnalysisContextImpl' complete\r\n16:08:08.766 [main] DEBUG c.a.e.c.s.SimpleReadCacheSelector - Use map cache.size:10796\r\n16:08:08.785 [main] DEBUG com.alibaba.excel.util.SheetUtils - The first is read by default.\r\n16:08:08.785 [main] DEBUG c.a.e.m.property.ExcelHeadProperty - The initialization sheet/table 'ExcelHeadProperty' is complete , head kind is CLASS\r\n16:08:08.785 [main] DEBUG c.a.e.context.AnalysisContextImpl - Began to read：ReadSheetHolder{sheetNo=0, sheetName='表格'} com.alibaba.excel.read.metadata.holder.ReadSheetHolder@f283e1\r\n数据处理完毕\r\n耗时：59\r\n171",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2576/comments",
    "author": "qiufengyouyang123",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2022-08-02T13:19:15Z",
        "body": "这个是poi的问题 我到时候看下 能否在启动的时候热加载解决"
      },
      {
        "user": "urzz",
        "created_at": "2022-11-08T07:28:14Z",
        "body": "碰到同样的问题，首次加载比较慢，后续的处理会比较快。现在有什么方案可以解决这个吗？\r\n版本:\r\n```xml\r\n<dependency>\r\n    <groupId>com.alibaba</groupId>\r\n    <artifactId>easyexcel</artifactId>\r\n    <version>3.1.1</version>\r\n</dependency>\r\n```"
      },
      {
        "user": "ttz20181126",
        "created_at": "2023-12-04T06:41:54Z",
        "body": "> 这个是poi的问题 我到时候看下 能否在启动的时候热加载解决\r\n\r\n请问现在有解决方案了吗 @zhuangjiaju "
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2024-07-19T06:19:31Z",
        "body": "你好，我们发现此Issue已经超过三个月没有活动了，为了更好的帮助您解决问题，我们将在两周后关闭此Issue，如果您仍然有问题，请在两周内内回复此Issue，谢谢！如果您已经解决或者不需要帮助，请忽略此消息。"
      }
    ]
  },
  {
    "number": 2570,
    "title": "使用 @ExcelProperty注解是设置value为数组 ,在数组不完全相同的情况下,映射的字段会不对应",
    "created_at": "2022-06-30T11:34:25Z",
    "closed_at": "2022-08-02T13:26:25Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2570",
    "body": "例如:\r\n    @ExcelProperty(value = {\"A状态\", \"状态表述\"})\r\n    private String typeA;\r\n    @ExcelProperty(value = {\"B状态\", \"状态表述\"})\r\n    private String typeB;\r\n\r\n在导入数据时  ,若\r\n    A状态 | B状态\r\n状态表述 | 状态表述\r\n       1      |                \r\n时  该值会被映射到typeB上\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2570/comments",
    "author": "laobai202004",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2022-08-02T13:26:25Z",
        "body": "目前是根据最后一行 匹配的。"
      },
      {
        "user": "P0Pooooooo",
        "created_at": "2024-09-02T10:12:42Z",
        "body": "@ExcelProperty(value = {\"设备类型\", \"设备型号\"})  为什么这种写法读不到值，\r\n换成单列的就行@ExcelProperty(\"设备类型\")"
      }
    ]
  },
  {
    "number": 2567,
    "title": "官网怎么回事啊，怎么进不去了",
    "created_at": "2022-06-29T04:05:13Z",
    "closed_at": "2022-08-02T03:11:35Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2567",
    "body": "官网怎么回事啊，怎么进不去了",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2567/comments",
    "author": "CarefulHuo",
    "comments": [
      {
        "user": "CarefulHuo",
        "created_at": "2022-06-29T04:09:27Z",
        "body": "https 证书过期了，尽快更新证书吧"
      },
      {
        "user": "linghengqian",
        "created_at": "2022-08-02T03:09:06Z",
        "body": "Unable to reproduce.  This issue should be closed and marked as invalid."
      }
    ]
  },
  {
    "number": 2563,
    "title": "在使用@ExcelProperty注解时，动态修改了Index值，修改第二次时不生效",
    "created_at": "2022-06-23T05:08:13Z",
    "closed_at": "2024-07-31T01:19:01Z",
    "labels": [
      "help wanted",
      "planning"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2563",
    "body": "在动态修改index值时，第一次修改生效，第二次修改时值修改了，但是生成的excel还是第一次修改的值所对应的列",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2563/comments",
    "author": "haoyualways",
    "comments": [
      {
        "user": "haoyualways",
        "created_at": "2022-06-23T05:10:29Z",
        "body": "@zhuangjiaju "
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2022-08-02T13:29:05Z",
        "body": "这个里面有缓存，后看下能否禁用缓存"
      },
      {
        "user": "wytwww",
        "created_at": "2022-09-19T08:38:49Z",
        "body": "@zhuangjiaju 怎么关闭一下缓存呢？想让每次设置的index都生效，速度慢点也行。\r\n当前版本3.1.1"
      },
      {
        "user": "vvangcong",
        "created_at": "2023-03-29T12:39:59Z",
        "body": "> @zhuangjiaju\r\n\r\n请问最后怎么解决的，我最近也遇到这个"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2024-07-19T06:19:32Z",
        "body": "你好，我们发现此Issue已经超过三个月没有活动了，为了更好的帮助您解决问题，我们将在两周后关闭此Issue，如果您仍然有问题，请在两周内内回复此Issue，谢谢！如果您已经解决或者不需要帮助，请忽略此消息。"
      }
    ]
  },
  {
    "number": 2551,
    "title": "根基模版写入数据，写入之后模版的信息还在，例如。模版定义了头，然后写入之后出现两个头信息",
    "created_at": "2022-06-17T06:10:05Z",
    "closed_at": "2022-08-02T13:35:29Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2551",
    "body": "根据模版写入数据。输出的文档里面包括模版的内容信息。例如：模版第一行是：名字、性别。输出的文档前两行都是名字和性别。感觉模版被写入之后，又重新写了一次模版的信息。\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2551/comments",
    "author": "yeohx",
    "comments": [
      {
        "user": "tmlx1990",
        "created_at": "2022-06-17T06:20:28Z",
        "body": "能提供下具体测试的代码吗？之前我试过没有类似问题 "
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2022-08-02T13:35:29Z",
        "body": "`ignorehead=true` 即可"
      }
    ]
  },
  {
    "number": 2549,
    "title": "关于监听无法注入问题",
    "created_at": "2022-06-16T10:56:17Z",
    "closed_at": "2022-08-02T13:35:38Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2549",
    "body": "使用最新版的，在导入监听中无法注入service层，我需要怎么注入，",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2549/comments",
    "author": "GithubGey",
    "comments": [
      {
        "user": "baldycoder",
        "created_at": "2022-07-20T08:42:54Z",
        "body": "构造函数传进来"
      }
    ]
  },
  {
    "number": 2539,
    "title": "使用ExcelWriter.write(Collection<?> data, WriteSheet writeSheet)无法真正落盘到磁盘文件",
    "created_at": "2022-06-11T14:50:24Z",
    "closed_at": "2024-07-31T01:19:02Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2539",
    "body": "**问题描述**\r\n当我执行完方法后，\r\n```java\r\n   excelWriter.write(Collection<?> data, WriteSheet writeSheet)\r\n```\r\n打开本地的excel文件，发现是空表格无写入的数据，\r\n只有真正执行完方法，\r\n```java\r\n    excelWriter.finish();\r\n```\r\n此时流关闭了，才会把数据真正写入到表格文件中，\r\n如何才能excelwriter.write完立马落文件,又可以下次继续写入？\r\n\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2539/comments",
    "author": "wigennn",
    "comments": [
      {
        "user": "Hsiang-YS",
        "created_at": "2023-03-11T16:28:40Z",
        "body": "大哥救大命，我是说怎么调用excelWriter.write方法之后老提示文件文件损坏。"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2024-07-19T06:19:35Z",
        "body": "你好，我们发现此Issue已经超过三个月没有活动了，为了更好的帮助您解决问题，我们将在两周后关闭此Issue，如果您仍然有问题，请在两周内内回复此Issue，谢谢！如果您已经解决或者不需要帮助，请忽略此消息。"
      }
    ]
  },
  {
    "number": 2525,
    "title": "单元格中的内容如何换行",
    "created_at": "2022-06-06T01:52:09Z",
    "closed_at": "2022-08-03T01:56:43Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2525",
    "body": "内容中如果带有\\n\\r 可以根据是否包含该内容单元格内换行么？\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2525/comments",
    "author": "tuotuo520",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2022-08-03T01:56:43Z",
        "body": "有个样式注解 里面有个参数wrapped=true 就行"
      }
    ]
  },
  {
    "number": 2505,
    "title": "3.1.0相比2.1.4性能提升的原理咨询",
    "created_at": "2022-05-27T03:47:34Z",
    "closed_at": "2022-06-08T09:33:52Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2505",
    "body": "解析一个87.5M的大excel 解析完之后入库 2..1.4版本用时190s左右 换成最新的3.1.0之后变成了120s左右 提升了有70s \r\n想了解一下 是做了哪些改进 才能有这么大的一个提升",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2505/comments",
    "author": "zhugw",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2022-06-08T09:33:52Z",
        "body": "这个需要自己看下源码"
      }
    ]
  },
  {
    "number": 2503,
    "title": "    @DateTimeFormat(“yyyy-MM-dd HH:mm:ss”)不生效 导出execl之后 日期变成###########",
    "created_at": "2022-05-26T05:04:55Z",
    "closed_at": "2022-06-22T09:34:12Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2503",
    "body": "    @DateTimeFormat(“yyyy-MM-dd HH:mm:ss”)\r\n    @ExcelProperty(\"操作时间\")\r\n    private Date createTime;",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2503/comments",
    "author": "joey-happy",
    "comments": [
      {
        "user": "TungMan0801",
        "created_at": "2022-05-26T07:38:03Z",
        "body": "这个我有遇到，点单元格的话可以看到正确内容已被填充，原因可能是列宽不够大，调整列宽或字号就可以看到完整的了"
      },
      {
        "user": "joey-happy",
        "created_at": "2022-05-26T07:58:34Z",
        "body": "> 这个我有遇到，点单元格的话可以看到正确内容已被填充，原因可能是列宽不够大，调整列宽或字号就可以看到完整的了\r\n\r\n我点击单元格也不行 我现在换成String类型了"
      },
      {
        "user": "469434849",
        "created_at": "2022-06-17T01:56:09Z",
        "body": "把列宽拉长"
      },
      {
        "user": "joey-happy",
        "created_at": "2022-06-17T01:58:56Z",
        "body": "> 把列宽拉长\r\n\r\n多谢  可以了"
      }
    ]
  },
  {
    "number": 2488,
    "title": "Excel 导出设置下拉框列表时，数据量大的情况下导出的Excel此列下拉框无法展开显示并选择",
    "created_at": "2022-05-18T09:19:26Z",
    "closed_at": "2024-07-31T01:19:03Z",
    "labels": [
      "help wanted",
      "planning"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2488",
    "body": "`@Override\r\n    public void afterSheetCreate(WriteWorkbookHolder writeWorkbookHolder, WriteSheetHolder writeSheetHolder) {\r\n        if (dropDownMap.isEmpty()){\r\n            init();\r\n        }\r\n        String sheetName = writeSheetHolder.getSheet().getSheetName();\r\n        List<DropDown> dropDowns = dropDownMap.get(sheetName);\r\n        if (CollUtil.isNotEmpty(dropDowns)){\r\n            dropDowns.forEach(item -> process(writeSheetHolder, item));\r\n        }\r\n    }\r\n    private void process(WriteSheetHolder writeSheetHolder, DropDown dropDown){\r\n        DataValidationHelper helper = writeSheetHolder.getSheet().getDataValidationHelper();\r\n        CellRangeAddressList cellRangeAddressList = new CellRangeAddressList(dropDown.getFirstRow(), dropDown.getLastRow(), dropDown.getFirstCol(), dropDown.getLastCol());\r\n        writeSheetHolder\r\n                .getSheet()\r\n                .addValidationData(\r\n                        helper.createValidation(\r\n                                helper.createExplicitListConstraint(dropDown.getListOfValues()), cellRangeAddressList\r\n                        )\r\n                );\r\n    }`",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2488/comments",
    "author": "136750162",
    "comments": [
      {
        "user": "Menhera-coder",
        "created_at": "2022-05-26T07:26:13Z",
        "body": "不要用原始的下拉框承载数据，那个支支持255之内的字符，你下拉框调用一个新的sheet页中一列值就好了"
      },
      {
        "user": "itming001",
        "created_at": "2023-11-15T09:40:44Z",
        "body": "有样例吗 不知道咋写"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2024-07-19T06:19:36Z",
        "body": "你好，我们发现此Issue已经超过三个月没有活动了，为了更好的帮助您解决问题，我们将在两周后关闭此Issue，如果您仍然有问题，请在两周内内回复此Issue，谢谢！如果您已经解决或者不需要帮助，请忽略此消息。"
      }
    ]
  },
  {
    "number": 2487,
    "title": "填充excel，填充的内容如何设置最小行高的前提下，填充的内容超过最小行高时，实现单元格或行的自动行高？",
    "created_at": "2022-05-18T05:47:06Z",
    "closed_at": "2024-07-31T01:19:04Z",
    "labels": [
      "help wanted",
      "pending verification"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2487",
    "body": "使用填充excel功能，填充的内容如何在设置最小行高的前提下，在填充的内容超过最小行高时，实现单元格或行的自动行高？",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2487/comments",
    "author": "xunchong99",
    "comments": [
      {
        "user": "liuhongjie001",
        "created_at": "2022-07-25T10:00:14Z",
        "body": "同问"
      },
      {
        "user": "liuhongjie001",
        "created_at": "2022-07-25T10:03:18Z",
        "body": "针对于填充excel 模板实现行高自适应，可调整模板行高自适应，生成excel 即正常。\r\n生成的excel 文件如果出现行高自适应的情况转图片就会出现内容缺失问题，此种情况用easyExcel 如何自动计算行高并生成excel."
      },
      {
        "user": "yunwenlong",
        "created_at": "2022-10-13T08:58:07Z",
        "body": "我调整模板行高自适应，只有第一条数据有效果，其他数据无效果。"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2024-07-19T06:19:37Z",
        "body": "你好，我们发现此Issue已经超过三个月没有活动了，为了更好的帮助您解决问题，我们将在两周后关闭此Issue，如果您仍然有问题，请在两周内内回复此Issue，谢谢！如果您已经解决或者不需要帮助，请忽略此消息。"
      }
    ]
  },
  {
    "number": 2466,
    "title": "省市区的级联导出有没有demo? 或者类似示例",
    "created_at": "2022-05-08T05:15:30Z",
    "closed_at": "2022-05-09T12:48:00Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2466",
    "body": "省市区的级联导出有没有demo? 或者类似示例",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2466/comments",
    "author": "18670032796",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2022-05-09T12:48:00Z",
        "body": "这个也需要自己研究下"
      }
    ]
  },
  {
    "number": 2461,
    "title": "在使用easyexcel2.2.10的情况下无法使用poi-tl",
    "created_at": "2022-05-04T08:00:45Z",
    "closed_at": "2022-05-06T09:22:20Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2461",
    "body": "**在使用easyexcel2.2.10的情况下无法使用poi-tl，发生jar冲突**\r\n\r\n**项目pom依赖**\r\n```java\r\n    <dependency>\r\n            <groupId>com.alibaba</groupId>\r\n            <artifactId>easyexcel</artifactId>\r\n           <version>2.2.10</version>\r\n        </dependency>\r\n  \t<dependency>\r\n\t\t\t<groupId>com.deepoove</groupId>\r\n\t\t\t<artifactId>poi-tl</artifactId>\r\n\t\t\t<version>1.5.1</version>\r\n\t</dependency>\r\n```\r\n**异常提示**\r\n```java\r\nHandler dispatch failed; nested exception is java.lang.NoClassDefFoundError: org/openxmlformats/schemas/wordprocessingml/x2006/main/CTRuby\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1055)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n```\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2461/comments",
    "author": "git-chenjiqing",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2022-05-06T09:22:20Z",
        "body": "这个是支持版本的情况 可以自己参考下\r\n\r\n| 版本                 | poi依赖版本 (支持范围)        | jdk版本支持范围    | 备注                                          |\r\n|--------------------|-----------------------|--------------|---------------------------------------------|\r\n| 3.1.0+             | 4.1.2 (4.1.2 - 5.2.2) | jkd8 - jdk17 | 推荐使用，会更新的版本                                 |\r\n| 3.0.0-beta1 - 3.0.5 | 4.1.2 (4.1.2 - 5.2.2) | jkd8 - jdk11 | 不推荐项目新引入此版本，除非超级严重bug,否则不再更新                |\r\n| 2.0.0-beta1-2.2.11 | 3.17 (3.17 - 4.1.2)   | jdk6 - jdk11 | 不推荐项目新引入此版本，除非是jdk6否则不推荐使用，除非超级严重bug,否则不再更新 |\r\n| 1+版本               | 3.17 (3.17 - 4.1.2)   | jdk6 - jdk11 | 不推荐项目新引入此版本，超级严重bug,也不再更新                   |\r\n\r\n"
      }
    ]
  },
  {
    "number": 2452,
    "title": "填充Excel如何使用转换器吗？",
    "created_at": "2022-04-27T09:11:17Z",
    "closed_at": "2022-05-06T11:26:00Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2452",
    "body": "填充Excel不支持转换器吗？没找到相关的demo",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2452/comments",
    "author": "guanpeijia",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2022-05-06T11:26:00Z",
        "body": "支持的 参照写入的转换器"
      }
    ]
  },
  {
    "number": 2435,
    "title": "使用doWrite方法向excel写文件时能否设置从第几行开始写起",
    "created_at": "2022-04-22T06:57:58Z",
    "closed_at": "2022-05-06T12:56:56Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2435",
    "body": null,
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2435/comments",
    "author": "Zoeldas",
    "comments": [
      {
        "user": "ttt-noora",
        "created_at": "2022-04-22T07:07:08Z",
        "body": "hello, please give me some time to implement it, thanks. If you have more detailed information, you can contact me or comment here."
      },
      {
        "user": "ttt-noora",
        "created_at": "2022-04-22T08:07:30Z",
        "body": "#2436 完善写文件，设置从第几行开始写入"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2022-05-06T12:56:56Z",
        "body": "这个不会支持，因为写入是流式的，不能往回写。\r\n可以通过 relativeHeadRowIndex 来控制空几个后再写。"
      }
    ]
  },
  {
    "number": 2423,
    "title": "自定义CellWriteHandler指定特定单元格样式，也注册了HorizontalCellStyleStrategy实现通用样式，出现样式异常",
    "created_at": "2022-04-16T16:50:20Z",
    "closed_at": "2024-07-31T01:19:05Z",
    "labels": [
      "help wanted",
      "pending verification"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2423",
    "body": "1.自定义CellWriteHandler：我就想指定11行第2列的样式独特\r\n//下面是模仿HorizontalCellStyleStrategy的setContentCellStyle()写的\r\npublic class CustomCellWriteHandler implements CellWriteHandler {\r\n    @Override\r\n    public void afterCellDispose(CellWriteHandlerContext context) {\r\n        if (context.getRowIndex() == 11\r\n                && context.getColumnIndex() == 2) {\r\n            WriteCellData<?> writeCellData = context.getFirstCellData();\r\n            WriteCellStyle writeCellStyle3 = new WriteCellStyle();\r\n            WriteFont writeFont3 = new WriteFont();\r\n            writeFont3.setFontName(\"Times New Roman\");\r\n            writeFont3.setFontHeightInPoints((short) 10);\r\n            writeFont3.setItalic(Boolean.TRUE);\r\n            writeCellStyle3.setWriteFont(writeFont3);\r\n            WriteCellStyle.merge(writeCellStyle3, writeCellData.getOrCreateStyle());\r\n        }\r\n    }\r\n}\r\n\r\n2.也使用了HorizontalCellStyleStrategy设置了通用样式\r\npublic static HorizontalCellStyleStrategy specsStyleStrategy(){\r\n        HorizontalCellStyleStrategy horizontalCellStyleStrategy = new HorizontalCellStyleStrategy();\r\n        WriteCellStyle contentCellStyle = new WriteCellStyle();\r\n        WriteFont contentWriteFont = new WriteFont();\r\n        contentWriteFont.setFontName(\"微软雅黑\");\r\n        // 字体大小\r\n        contentWriteFont.setFontHeightInPoints((short)18);\r\n        contentCellStyle.setWriteFont(contentWriteFont);\r\n\r\n        horizontalCellStyleStrategy.setContentWriteCellStyleList(ListUtils.newArrayList(contentCellStyle));\r\n        return horizontalCellStyleStrategy;\r\n    }\r\n\r\n3.注册\r\n WriteSheet specs = EasyExcel.writerSheet(1,\"xxx\")\r\n                    .needHead(Boolean.FALSE)\r\n                    .head(VO.class)\r\n                    .registerWriteHandler(new CustomCellWriteHandler())\r\n                    .registerWriteHandler(specsStyleStrategy())\r\n                    .build();\r\n\r\n4.结果\r\n第11行第2列单元格样式正确字体为 “Times New Roman” ，第11行第2列之前的所有单元格字体为通用的 “微软雅黑”，但是第11行第2列之后的所有单元格字体样式全变为了 “Times New Roman”...\r\n\r\n5.期待结果\r\n第11行第2列单元格样式正确字体为 “Times New Roman” ，第11行第2列之前和之后的所有单元格字体为通用的 “微软雅黑”。\r\n\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2423/comments",
    "author": "djors",
    "comments": [
      {
        "user": "ljluestc",
        "created_at": "2023-07-18T06:16:58Z",
        "body": "```\r\npublic class CustomCellWriteHandler implements CellWriteHandler {\r\n    private WriteCellStyle commonCellStyle; // 通用样式\r\n\r\n    public CustomCellWriteHandler(WriteCellStyle commonCellStyle) {\r\n        this.commonCellStyle = commonCellStyle;\r\n    }\r\n\r\n    @Override\r\n    public void afterCellDispose(CellWriteHandlerContext context) {\r\n        int rowIndex = context.getRowIndex();\r\n        int columnIndex = context.getColumnIndex();\r\n\r\n        if (rowIndex == 11 && columnIndex == 2) {\r\n            WriteCellData<?> writeCellData = context.getFirstCellData();\r\n            WriteCellStyle customCellStyle = new WriteCellStyle();\r\n            WriteFont customFont = new WriteFont();\r\n            customFont.setFontName(\"Times New Roman\");\r\n            customFont.setFontHeightInPoints((short) 10);\r\n            customFont.setItalic(Boolean.TRUE);\r\n            customCellStyle.setWriteFont(customFont);\r\n            WriteCellStyle.merge(customCellStyle, writeCellData.getOrCreateStyle());\r\n        } else {\r\n            WriteCellData<?> writeCellData = context.getFirstCellData();\r\n            WriteCellStyle cellStyle = writeCellData.getOrCreateStyle();\r\n            WriteCellStyle.merge(commonCellStyle, cellStyle);\r\n        }\r\n    }\r\n}\r\n\r\n```"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2024-07-19T06:19:39Z",
        "body": "你好，我们发现此Issue已经超过三个月没有活动了，为了更好的帮助您解决问题，我们将在两周后关闭此Issue，如果您仍然有问题，请在两周内内回复此Issue，谢谢！如果您已经解决或者不需要帮助，请忽略此消息。"
      }
    ]
  },
  {
    "number": 2414,
    "title": "3.0.5版本导出excel时，如果小数点后超过9位后就不显示了，怎么让他全部显示出来？",
    "created_at": "2022-04-12T11:37:12Z",
    "closed_at": "2022-05-06T13:20:31Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2414",
    "body": "比如数值是0.912312434645，导出到excel时显示为0.912312434，看到的就是这样，但是值是对的，如果手动调整小数点位数就会全部显示出来，这个怎么解决？麻烦帮忙看下，谢谢。我使用的时候没有用实体类，不能在属性上加注解。",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2414/comments",
    "author": "chnmarshal",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2022-05-06T13:20:31Z",
        "body": "使用 string类型去处理，你在office 里面输入也无法处理这个问题"
      }
    ]
  },
  {
    "number": 2412,
    "title": "如何限制导出excel的大小？",
    "created_at": "2022-04-12T10:19:10Z",
    "closed_at": "2022-05-06T13:20:58Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2412",
    "body": "主要是如何获取？\r\n之前想通过CountingOutputStream，但是发现write是在finish的时候才调用的，没办法实时拿到大小。\r\n不知道有什么好办法\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2412/comments",
    "author": "zhuchao941",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2022-05-06T13:20:58Z",
        "body": "这个目前不支持 建议导出成文件后判断大小，或者根据查询的数据量"
      }
    ]
  },
  {
    "number": 2406,
    "title": "导出图片多，如何提高导出速度",
    "created_at": "2022-04-08T12:18:21Z",
    "closed_at": "2022-05-06T13:24:06Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2406",
    "body": "**异常代码**\r\n```java\r\n   /**\r\n * 作业人员信息表导出-vo\r\n *\r\n * @author linsm\r\n * @date 2022-03-24 11:11\r\n */\r\n@Data\r\n@ContentRowHeight(100)\r\npublic class WorkerExportVO {\r\n\r\n    /**\r\n     * 工程名称\r\n     */\r\n    @ExcelProperty(value = \"工程名称\")\r\n    @ColumnWidth(20)\r\n    private String projectName;\r\n\r\n    /**\r\n     * 姓名\r\n     */\r\n    @ExcelProperty(value = \"姓名\")\r\n    private String userName;\r\n\r\n    /**\r\n     * 性别\r\n     */\r\n    @ExcelProperty(value = \"性别\")\r\n    private String sex;\r\n\r\n    /**\r\n     * 身份证号码\r\n     */\r\n    @ExcelProperty(value = \"身份证号码\")\r\n    @ColumnWidth(25)\r\n    private String idCardNo;\r\n\r\n    /**\r\n     * 家庭地址\r\n     */\r\n    @ExcelProperty(value = \"家庭地址\")\r\n    @ColumnWidth(30)\r\n    private String homeAddress;\r\n\r\n    /**\r\n     * 年龄\r\n     */\r\n    @ExcelProperty(value = \"年龄\")\r\n    private Integer age;\r\n\r\n    /**\r\n     * 联系电话\r\n     */\r\n    @ExcelProperty(value = \"联系电话\")\r\n    @ColumnWidth(20)\r\n    private String phone;\r\n\r\n    /**\r\n     * 包工头姓名\r\n     */\r\n    @ExcelProperty(value = \"包工头姓名\")\r\n    private String contractorName;\r\n\r\n    /**\r\n     * 工种\r\n     */\r\n    @ExcelProperty(value = \"工种\")\r\n    private String workGroup;\r\n\r\n    /**\r\n     * 14天内是否接触过中高风险地区人员(0-否，1-是)\r\n     */\r\n    @ExcelProperty(value = \"14天内是否接触过中高风险地区人员\")\r\n    private String isTouch;\r\n\r\n    /**\r\n     * 14天内是否到过中高风险地区(0-否，1-是)\r\n     */\r\n    @ExcelProperty(value = \"14天内是否到过中高风险地区\")\r\n    private String isArrive;\r\n\r\n    /**\r\n     * 从哪个地区到本市(1-本市，2-本省其他市，3-外省其他市)\r\n     */\r\n    @ExcelProperty(value = \"从哪个地区到本市\")\r\n    private String fromCity;\r\n\r\n    /**\r\n     * 健康码颜色(1-绿，2-黄，3-蓝)\r\n     */\r\n    @ExcelProperty(value = \"健康码颜色\")\r\n    private String healthCodeColor;\r\n\r\n    /**\r\n     * 新冠疫苗接种次数\r\n     */\r\n    @ExcelProperty(value = \"新冠疫苗接种次数\")\r\n    private Integer vaccinationStatus;\r\n\r\n    /**\r\n     * 入场时间\r\n     */\r\n    @ColumnWidth(20)\r\n    @ExcelProperty(value = \"入场时间\")\r\n    @DateTimeFormat(\"yyyy-MM-dd\")\r\n    private Date entryTime;\r\n\r\n    /**\r\n     * 退场时间\r\n     */\r\n    @ColumnWidth(20)\r\n    @ExcelProperty(value = \"退场时间\")\r\n    @DateTimeFormat(\"yyyy-MM-dd\")\r\n    private Date exitTime;\r\n\r\n    @ColumnWidth(20)\r\n    @ExcelProperty(value = \"更新时间\")\r\n    @DateTimeFormat(\"yyyy-MM-dd\")\r\n    private Date updateTime;\r\n\r\n    /**\r\n     * 身份证正面url\r\n     */\r\n    @ExcelProperty(value = \"身份证正面\")\r\n    @ColumnWidth(20)\r\n    private URL idCardFront;\r\n\r\n    /**\r\n     * 身份证反面url\r\n     */\r\n    @ExcelProperty(value = \"身份证反面\")\r\n    @ColumnWidth(20)\r\n    private URL idCardBack;\r\n\r\n    /**\r\n     * 粤康码url\r\n     */\r\n    @ExcelProperty(value = \"粤康码\")\r\n    @ColumnWidth(20)\r\n    private URL healthCode;\r\n\r\n    /**\r\n     * 行程卡url\r\n     */\r\n    @ExcelProperty(value = \"行程卡\")\r\n    @ColumnWidth(20)\r\n    private URL itineraryCard;\r\n\r\n    /**\r\n     * 核酸报告url\r\n     */\r\n    @ExcelProperty(value = \"核酸报告\")\r\n    @ColumnWidth(20)\r\n    private URL nucleicAcidReport;\r\n\r\n    /**\r\n     * 空白图片1\r\n     */\r\n    @ExcelProperty(value = \"空白图片1\")\r\n    @ColumnWidth(20)\r\n    private URL blankUrl1;\r\n\r\n    /**\r\n     * 空白图片2\r\n     */\r\n    @ExcelProperty(value = \"空白图片2\")\r\n    @ColumnWidth(20)\r\n    private URL blankUrl2;\r\n\r\n    /**\r\n     * 空白图片3\r\n     */\r\n    @ExcelProperty(value = \"空白图片3\")\r\n    @ColumnWidth(20)\r\n    private URL blankUrl3;\r\n}\r\n\r\n  private URL getUrl(String url) throws MalformedURLException {\r\n        return url == null ? null : new URL(url);\r\n    }\r\n\r\n    public void export(Integer projectId, HttpServletResponse response) throws Exception {\r\n        List<Worker> list = this.lambdaQuery().eq(Worker::getProjectId, projectId).list();\r\n        if(CollectionUtils.isEmpty(list)) {\r\n            throw new ServiceException(\"导出数据为空\");\r\n        }\r\n        List<WorkerExportVO> exportList = Lists.newArrayList();\r\n        for(Worker worker : list) {\r\n            WorkerExportVO workerExportVO = new WorkerExportVO();\r\n            BeanUtil.copyProperties(worker,workerExportVO);\r\n            //赋值\r\n            workerExportVO.setSex(worker.getSex() == 1 ? \"男\" : \"女\");\r\n            workerExportVO.setWorkGroup(WorkGroup.getByCode(worker.getWorkGroup()));\r\n            if(worker.getFromCity() != null) {\r\n                workerExportVO.setFromCity(worker.getFromCity() == 1 ? \"本市\" : worker.getFromCity() == 2 ? \"本省其他市\" : \"外省其他市\");\r\n            }\r\n            if(worker.getHealthCodeColor() != null) {\r\n                workerExportVO.setHealthCodeColor(worker.getHealthCodeColor() == 1 ? \"绿\" : worker.getHealthCodeColor() == 2 ? \"黄\" : \"蓝\");\r\n            }\r\n            if(worker.getIsArrive() != null) {\r\n                workerExportVO.setIsArrive(worker.getIsArrive() == 1 ? \"是\" : \"否\");\r\n            }\r\n            if(worker.getIsTouch() != null) {\r\n                workerExportVO.setIsTouch(worker.getIsTouch() == 1 ? \"是\" : \"否\");\r\n            }\r\n            workerExportVO.setHealthCode(getUrl(worker.getHealthCode()));\r\n            workerExportVO.setIdCardBack(getUrl(worker.getIdCardBack()));\r\n            workerExportVO.setIdCardFront(getUrl(worker.getIdCardFront()));\r\n            workerExportVO.setItineraryCard(getUrl(worker.getItineraryCard()));\r\n            workerExportVO.setNucleicAcidReport(getUrl(worker.getNucleicAcidReport()));\r\n            workerExportVO.setBlankUrl1(getUrl(worker.getBlankUrl1()));\r\n            workerExportVO.setBlankUrl2(getUrl(worker.getBlankUrl2()));\r\n            workerExportVO.setBlankUrl3(getUrl(worker.getBlankUrl3()));\r\n            exportList.add(workerExportVO);\r\n        }\r\n        response.setContentType(\"application/vnd.ms-excel\");\r\n        response.setCharacterEncoding(StandardCharsets.UTF_8.name());\r\n        String fileName = URLEncoder.encode(\"作业人员信息导出\", StandardCharsets.UTF_8.name());\r\n        response.setHeader(\"Content-disposition\", \"attachment;filename=\" + fileName + \".xlsx\");\r\n        EasyExcel.write(response.getOutputStream(), WorkerExportVO.class).sheet(\"导出数据\").doWrite(exportList);\r\n    }\r\n```\r\n\r\n**异常提示**\r\n目前导出4条记录，导出的excel大小有2m,需要6s多，好像大部分时间都耗费在io上面\r\n**建议描述**\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2406/comments",
    "author": "linshaomin",
    "comments": [
      {
        "user": "linshaomin",
        "created_at": "2022-04-24T03:08:32Z",
        "body": "?????"
      },
      {
        "user": "zhaowei8998",
        "created_at": "2022-05-02T04:14:27Z",
        "body": "我也是同样的问题,四千多条数据 需要十分钟,全部在io上耗时了,有没有可能把图片先多线程下载到本地,然后在本地处理处理?"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2022-05-06T13:24:06Z",
        "body": "可以考虑 压缩图片之类的方案"
      }
    ]
  },
  {
    "number": 2403,
    "title": "easyexcel可以读取存到【DISPIMG】中的图片吗",
    "created_at": "2022-04-08T07:44:45Z",
    "closed_at": "2022-05-06T13:24:38Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2403",
    "body": "表格中的图片为嵌入单元格，读取后的信息是这种【_xlfn.DISPIMG(\"ID_1F8C083117A04B6F90E9EABD4CC888DF\",1)】，怎么读取正常的图片路径",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2403/comments",
    "author": "hf-soboot",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2022-05-06T13:24:38Z",
        "body": "目前不支持读取图片"
      }
    ]
  },
  {
    "number": 2399,
    "title": "请问,写操作可不可以,不直接下载到磁盘,直接获取生成的Excel的文件流?需要拿到文件流上传到服务器",
    "created_at": "2022-04-06T03:05:37Z",
    "closed_at": "2022-04-06T07:06:08Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2399",
    "body": "\r\n原业务是直接通过response.getOutputStream();把要下载的Excel直接通过浏览器下载,现在不需要直接通过浏览器下载,而是在代码里使用输入流上传到服务器.\r\n请问写操作能不能获取到生成的Excel的输入流呢?\r\n谢谢\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2399/comments",
    "author": "zhang3097",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2022-04-06T07:06:08Z",
        "body": "用`ByteArrayOutputStream` 或者 直接用临时文件 来存储就行"
      },
      {
        "user": "zhang3097",
        "created_at": "2022-04-06T07:11:50Z",
        "body": "> 用 或者 直接用临时文件 来存储就行`ByteArrayOutputStream`\r\n\r\n请问怎么实现呢?"
      }
    ]
  },
  {
    "number": 2396,
    "title": "关于sheetName校验的必要性讨论",
    "created_at": "2022-04-01T09:44:29Z",
    "closed_at": "2022-04-06T09:57:21Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2396",
    "body": "Hi，我们公司的需求是统一一套导入的代码逻辑，因此很多参数需要进行传递，在多sheet导入时，因为担心用户移动sheet的位置顺序，因此，我的readSheet代码为：\r\n```java\r\nString sheetName = (SheetName)domainClazz.getAnnotation(SheetName.class).value();\r\nReadSheet readSheet1 =EasyExcel.readSheet(sheetName).head(domainClazz).registerReadListener(new ImportDomainListener()).build();\r\n```\r\n此处，readSheet参数使用的String sheetName,非Interger sheetNo。\r\n在ImportDomainListener()监听器中，使用invokeHeadMap方法去校验head的完整性。\r\n但是我发现，如果文件类型上传错误，将其他domainClass的文件上传，且文件无数据，仅有表头时，不会调用到监听器中invokeHeadMap方法。\r\n经过debug后发现在com.alibaba.excel.util.SheetUtils.match(ReadSheet readSheet, AnalysisContext analysisContext) 方法中47行对传入sheetName与excel文件中的sheetName做了比较，代码如下：\r\n```java\r\nif (!StringUtils.isEmpty(parameterSheetName)) {\r\n    boolean autoTrim = (parameterReadSheet.getAutoTrim() != null && parameterReadSheet.getAutoTrim())\r\n        || (parameterReadSheet.getAutoTrim() == null\r\n            && analysisContext.readWorkbookHolder().getGlobalConfiguration().getAutoTrim());\r\n    if (autoTrim) {\r\n        parameterSheetName = parameterSheetName.trim();\r\n    }\r\n    match = parameterSheetName.equals(readSheet.getSheetName());\r\n}\r\n```\r\n在比对不通过后，直接return null，并且无错误抛出，外层无法截获此信息\r\n如果使用EasyExcel.readSheet(Interger sheetNo)，则不会出现该问题，但是如果客户上传excel时候移动了sheet顺序，则无法成功匹配。对此，是否添加参数判断是否进行sheetName比对，或添加错误信息抛出",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2396/comments",
    "author": "shallwetalkge",
    "comments": [
      {
        "user": "shallwetalkge",
        "created_at": "2022-04-01T09:45:45Z",
        "body": "@zhuangjiaju Hi，可以帮忙解答一下吗"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2022-04-06T09:57:21Z",
        "body": "建议自己加个一个标记  来标记 是否读到了head ，没有则抛出异常"
      }
    ]
  },
  {
    "number": 2391,
    "title": "是否支持整个富文本导出为excel",
    "created_at": "2022-03-31T08:04:48Z",
    "closed_at": "2022-04-06T09:48:21Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2391",
    "body": "是否支持整个富文本导出为excel？也可以理解为html导出为excel，如果可以的话怎么操作？",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2391/comments",
    "author": "parson1",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2022-04-06T09:48:21Z",
        "body": "目前不支持 需要自己解析富文本"
      }
    ]
  },
  {
    "number": 2388,
    "title": "同步读取数据，使用readSync(),数据类型转化异常后，直接中断了，怎样可以不中断呢",
    "created_at": "2022-03-30T10:23:38Z",
    "closed_at": "2022-04-06T16:14:55Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2388",
    "body": "虽然在listener中重新了onException,但是还是会抛出异常并报警\r\n\r\n@Override\r\n    public void onException(Exception exception, AnalysisContext context){\r\n        log.error(\"解析失败，但是继续解析下一行{}\",exception.getMessage());\r\n        if (exception instanceof ExcelDataConvertException) {\r\n            ExcelDataConvertException excelDataConvertException = (ExcelDataConvertException) exception;\r\n            log.error(\"第{}行，第{}列解析异常\", excelDataConvertException.getRowIndex(), excelDataConvertException.getColumnIndex());\r\n        }\r\n        System.out.println(1234);\r\n    }\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2388/comments",
    "author": "chaochaoZhao",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2022-04-06T16:14:55Z",
        "body": "实现 `onException `  即可，不要再重复抛出异常。"
      }
    ]
  },
  {
    "number": 2387,
    "title": "在alpine docker上面报这个错 NoSuchFieldError: Factory ",
    "created_at": "2022-03-30T08:54:30Z",
    "closed_at": "2022-04-06T09:27:50Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2387",
    "body": "**异常代码**\r\n```java\r\nFile excel = new File(\"/tmp/upload/统计-\" + System.currentTimeMillis() + \".xlsx\");\r\n FileOutputStream file = null;\r\ntry {\r\n    file = new FileOutputStream(excel);\r\n    ExcelWriter excelWriter = EasyExcel.write(file).build();\r\n} catch (FileNotFoundException e) {\r\n   e.printStackTrace();\r\n}\r\n```\r\n**异常提示**\r\nServlet.service() for servlet [dispatcherServlet] in context with path [/organize] threw exception [Request processing failed; nested exception is com.alibaba.excel.exception.ExcelGenerateException: java.lang.NoSuchFieldError: Factory] with root cause\r\njava.lang.NoSuchFieldError: Factory\r\n\tat org.apache.poi.xssf.usermodel.XSSFWorkbook.onWorkbookCreate(XSSFWorkbook.java:456) ~[poi-ooxml-5.1.0.jar:5.1.0]\r\n\tat org.apache.poi.xssf.usermodel.XSSFWorkbook.<init>(XSSFWorkbook.java:252) ~[poi-ooxml-5.1.0.jar:5.1.0]\r\n\tat org.apache.poi.xssf.usermodel.XSSFWorkbook.<init>(XSSFWorkbook.java:246) ~[poi-ooxml-5.1.0.jar:5.1.0]\r\n\tat org.apache.poi.xssf.usermodel.XSSFWorkbook.<init>(XSSFWorkbook.java:234) ~[poi-ooxml-5.1.0.jar:5.1.0]\r\n\tat org.apache.poi.xssf.streaming.SXSSFWorkbook.<init>(SXSSFWorkbook.java:260) ~[poi-ooxml-5.1.0.jar:5.1.0]\r\n\tat org.apache.poi.xssf.streaming.SXSSFWorkbook.<init>(SXSSFWorkbook.java:230) ~[poi-ooxml-5.1.0.jar:5.1.0]\r\n\tat org.apache.poi.xssf.streaming.SXSSFWorkbook.<init>(SXSSFWorkbook.java:205) ~[poi-ooxml-5.1.0.jar:5.1.0]\r\n\tat org.apache.poi.xssf.streaming.SXSSFWorkbook.<init>(SXSSFWorkbook.java:292) ~[poi-ooxml-5.1.0.jar:5.1.0]\r\n\tat com.alibaba.excel.util.WorkBookUtil.createWorkBook(WorkBookUtil.java:45) ~[easyexcel-2.2.6.jar:na]\r\n\tat com.alibaba.excel.context.WriteContextImpl.<init>(WriteContextImpl.java:85) ~[easyexcel-2.2.6.jar:na]\r\n\tat com.alibaba.excel.write.ExcelBuilderImpl.<init>(ExcelBuilderImpl.java:35) ~[easyexcel-2.2.6.jar:na]\r\n\tat com.alibaba.excel.ExcelWriter.<init>(ExcelWriter.java:47) ~[easyexcel-2.2.6.jar:na]\r\n\tat com.alibaba.excel.write.builder.ExcelWriterBuilder.build(ExcelWriterBuilder.java:130) ~[easyexcel-2.2.6.jar:na]\r\n\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2387/comments",
    "author": "lincanyitse",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2022-04-06T09:27:50Z",
        "body": "poi 使用 4.1.2版本"
      }
    ]
  },
  {
    "number": 2386,
    "title": "有自增长的序号列么",
    "created_at": "2022-03-29T00:16:01Z",
    "closed_at": "2022-04-06T09:26:22Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2386",
    "body": "我看有用 afterRowCreate 实现的 有没有更简单实现方法？\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2386/comments",
    "author": "157677678",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2022-04-06T09:26:22Z",
        "body": "这个就是 自己对象新增一个index ，然后自己设置就行。"
      }
    ]
  },
  {
    "number": 2382,
    "title": "如何向convertre中传入参数",
    "created_at": "2022-03-25T08:15:55Z",
    "closed_at": "2024-07-31T01:19:06Z",
    "labels": [
      "help wanted",
      "planning"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2382",
    "body": "我希望写一个字典转化的converter，通过传入字典类型的参数，支持所有字典数据的转化。但是需要给converter中传入参数，请问如何实现这种操作\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2382/comments",
    "author": "hefei-SXQ",
    "comments": [
      {
        "user": "samlgl",
        "created_at": "2022-05-13T08:48:44Z",
        "body": "可以在字段上再加个注解，里面定义字典code之类的东西(eg:Dict)，在自定义Converter里面，通过contentProperty.getField().getAnnotation(Dict.class) ,然后再拿到Dict注解设置的值"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2024-07-19T06:19:40Z",
        "body": "你好，我们发现此Issue已经超过三个月没有活动了，为了更好的帮助您解决问题，我们将在两周后关闭此Issue，如果您仍然有问题，请在两周内内回复此Issue，谢谢！如果您已经解决或者不需要帮助，请忽略此消息。"
      }
    ]
  },
  {
    "number": 2372,
    "title": "excel表头有换行符与实体类属性字段对应的问题",
    "created_at": "2022-03-22T03:23:05Z",
    "closed_at": "2022-04-06T09:11:13Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2372",
    "body": "1.Excel表头有一个字段中间有换行符号，java读取实现的符号为：收货地址\\n区分类别。收货地址和区分类别之间有一个回车\r\n2.java实体类属性\r\n/**\r\n     * 收货地址区分类别\r\n     */\r\n    @ExcelProperty(\"收货地址区分类别\")\r\n    private String address;\r\n3.HqListener类  逐行数据解析事件\r\n/**\r\n     * 逐行数据解析事件\r\n     */\r\n    @Override\r\n    public void invoke(Entity eitity, AnalysisContext context) {\r\n        //这里获取的eitity实体类里的属性address，读取的数值为空\r\n    }\r\n\r\n \r\n//就算是修改了初始表单头部的headMap,替换了换行符，读取的属性还是为空\r\n\r\n4.HqListener类  初始表单头部事件\r\n/**\r\n     * 初始表单头部事件\r\n     */\r\n    @Override\r\n    public void invokeHead(Map<Integer, CellData> headMap, AnalysisContext context) {\r\n\r\n        //将excel表格列的标题中的文字的空格和换行进行替换\r\n        for (Map.Entry<Integer, CellData> item : headMap.entrySet()) {\r\n            Integer key = item.getKey();\r\n            CellData value = item.getValue();\r\n            String stringValue = value.getStringValue();\r\n            if(stringValue!=null){\r\n                //替换所有的空格和回车\r\n                stringValue = stringValue.replaceAll(\"\\\\s*\", \"\").replace(\"\\n\",\"\").replace(\"\\r\",\"\");\r\n                value.setStringValue(stringValue);\r\n            }\r\n            System.out.println(stringValue);\r\n        }\r\n        super.invokeHead(headMap, context);\r\n    }\r\n\r\n\r\n\r\n\r\n想咨询下有没有什么好的解决方法，不想在实体类属性下指定属性的index\r\n因为实体类属性与excel的表头列位置不一定固定某个位置\r\n\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2372/comments",
    "author": "object360",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2022-04-06T09:11:13Z",
        "body": "\"收货地址\\r区分类别“ 试试 \r\n不行打开：`com.alibaba.excel.read.processor.DefaultAnalysisEventProcessor#buildHead`\r\n比较下 143行 会比较是否相等"
      },
      {
        "user": "stop-bullshit",
        "created_at": "2024-11-07T11:36:36Z",
        "body": "我也遇到了类似的问题,映射的实体类字段中没有空格  但是实际业务提供的excel 列名称可能有一个HTML的 NBSP 空格   导致表头与实体类注解映射不一致,但是在`invokeHeadMap`处理后又无法读取到数据,现在只能在拿到数据,再对表头进行一次处理然后再映射"
      }
    ]
  },
  {
    "number": 2360,
    "title": "easyexcel 2.2.10 读取加密excel文件时 会报错",
    "created_at": "2022-03-16T11:47:24Z",
    "closed_at": "2022-04-06T16:11:03Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2360",
    "body": "错误信息：\r\ncom.alibaba.excel.exception.ExcelAnalysisException: java.lang.NoSuchMethodError: org.apache.poi.poifs.filesystem.DirectoryNode.getFileSystem()Lorg/apache/poi/poifs/filesystem/NPOIFSFileSystem;",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2360/comments",
    "author": "136750162",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2022-04-06T16:11:03Z",
        "body": "统一poi版本 使用 4.1.2"
      }
    ]
  },
  {
    "number": 2353,
    "title": "所有边框问题，",
    "created_at": "2022-03-09T03:58:00Z",
    "closed_at": "2024-07-31T01:19:07Z",
    "labels": [
      "help wanted",
      "pending verification",
      "planning"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2353",
    "body": "    public static HorizontalCellStyleStrategy cellBorder(){\r\n        WriteCellStyle contentWriteCellStyle = new WriteCellStyle();\r\n        contentWriteCellStyle.setBorderLeft(BorderStyle.THIN);\r\n        contentWriteCellStyle.setBorderTop(BorderStyle.THIN);\r\n        contentWriteCellStyle.setBorderRight(BorderStyle.THIN);\r\n        contentWriteCellStyle.setBorderBottom(BorderStyle.THIN);\r\n        // 水平对齐方式\r\n        contentWriteCellStyle.setHorizontalAlignment(HorizontalAlignment.CENTER);\r\n        // 垂直对齐方式\r\n        contentWriteCellStyle.setVerticalAlignment(VerticalAlignment.CENTER);\r\n        return new HorizontalCellStyleStrategy(contentWriteCellStyle, contentWriteCellStyle);\r\n    }\r\n请问一下能做到 最大行*最大列的单元格边框吗，以上代码边框只会在单元格有内容时才有，空行和空的列没有边框。",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2353/comments",
    "author": "ZpLb",
    "comments": [
      {
        "user": "ljluestc",
        "created_at": "2023-07-18T05:59:47Z",
        "body": "```\r\npublic static HorizontalCellStyleStrategy cellBorder(int maxRows, int maxCols) {\r\n    WriteCellStyle contentWriteCellStyle = new WriteCellStyle();\r\n    contentWriteCellStyle.setBorderLeft(BorderStyle.THIN);\r\n    contentWriteCellStyle.setBorderTop(BorderStyle.THIN);\r\n    contentWriteCellStyle.setBorderRight(BorderStyle.THIN);\r\n    contentWriteCellStyle.setBorderBottom(BorderStyle.THIN);\r\n    // 水平对齐方式\r\n    contentWriteCellStyle.setHorizontalAlignment(HorizontalAlignment.CENTER);\r\n    // 垂直对齐方式\r\n    contentWriteCellStyle.setVerticalAlignment(VerticalAlignment.CENTER);\r\n\r\n    WriteCellStyle emptyCellWriteCellStyle = new WriteCellStyle();\r\n    emptyCellWriteCellStyle.setBorderLeft(BorderStyle.THIN);\r\n    emptyCellWriteCellStyle.setBorderTop(BorderStyle.THIN);\r\n    emptyCellWriteCellStyle.setBorderRight(BorderStyle.THIN);\r\n    emptyCellWriteCellStyle.setBorderBottom(BorderStyle.THIN);\r\n\r\n    // 设置合并区域的边框样式\r\n    for (int row = 0; row <= maxRows; row++) {\r\n        for (int col = 0; col <= maxCols; col++) {\r\n            if (row == 0 || col == 0) {\r\n                // 第一行和第一列\r\n                contentWriteCellStyle.setTopBorderColor(IndexedColors.BLACK.getIndex());\r\n                contentWriteCellStyle.setBottomBorderColor(IndexedColors.BLACK.getIndex());\r\n                contentWriteCellStyle.setLeftBorderColor(IndexedColors.BLACK.getIndex());\r\n                contentWriteCellStyle.setRightBorderColor(IndexedColors.BLACK.getIndex());\r\n                emptyCellWriteCellStyle.setTopBorderColor(IndexedColors.BLACK.getIndex());\r\n                emptyCellWriteCellStyle.setBottomBorderColor(IndexedColors.BLACK.getIndex());\r\n                emptyCellWriteCellStyle.setLeftBorderColor(IndexedColors.BLACK.getIndex());\r\n                emptyCellWriteCellStyle.setRightBorderColor(IndexedColors.BLACK.getIndex());\r\n            }\r\n            sheet.setDefaultColumnStyle(col, emptyCellWriteCellStyle);\r\n            sheet.setDefaultRowStyle(row, emptyCellWriteCellStyle);\r\n        }\r\n    }\r\n\r\n    return new HorizontalCellStyleStrategy(contentWriteCellStyle, contentWriteCellStyle);\r\n}\r\n\r\n```"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2024-07-19T06:19:41Z",
        "body": "你好，我们发现此Issue已经超过三个月没有活动了，为了更好的帮助您解决问题，我们将在两周后关闭此Issue，如果您仍然有问题，请在两周内内回复此Issue，谢谢！如果您已经解决或者不需要帮助，请忽略此消息。"
      }
    ]
  },
  {
    "number": 2352,
    "title": "关于读入stream的问题",
    "created_at": "2022-03-08T01:32:54Z",
    "closed_at": "2022-04-06T16:05:44Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2352",
    "body": "请教下：EasyExcelFactory中的 \r\n`ExcelReaderBuilder read(InputStream inputStream)`\r\n这个怎么使用，看代码，read进来，没有返回值，也没有listener，没看懂怎么使用，还请指导下，谢谢\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2352/comments",
    "author": "ROBODRILL",
    "comments": [
      {
        "user": "seshenli",
        "created_at": "2022-03-08T09:10:08Z",
        "body": "参考源码LockTest，HgTest"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2022-04-06T16:05:44Z",
        "body": "参照下最简单的读即可"
      }
    ]
  },
  {
    "number": 2351,
    "title": "读取的内容自动过滤了空行ignoreEmptyRow不生效，有办法同步处理空行或者读取出吗",
    "created_at": "2022-03-07T12:36:46Z",
    "closed_at": "2022-04-06T16:05:22Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2351",
    "body": "  //读取的内容自动过滤了空行ignoreEmptyRow不生效\r\nExcelReaderBuilder excelReaderBuilder =  EasyExcelFactory.read(is,excelListener)\r\n                    .autoTrim(true)\r\n                    .autoCloseStream(Boolean.FALSE)\r\n                    .mandatoryUseInputStream(Boolean.TRUE)\r\n                    .readCache(new MapCache())\r\n                    .ignoreEmptyRow(Boolean.FALSE);\r\nExcelReader            excelReader = buildExcelReader(excelReaderBuilder);",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2351/comments",
    "author": "ShawnShiFan",
    "comments": [
      {
        "user": "ShawnShiFan",
        "created_at": "2022-03-08T02:49:18Z",
        "body": "单元格若有边框则能识别空行，若什么都没有则无法识别空行"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2022-04-06T16:05:22Z",
        "body": "这个不算空行 就是没有数据\r\n"
      },
      {
        "user": "ShawnShiFan",
        "created_at": "2022-04-06T16:05:43Z",
        "body": "这是来自QQ邮箱的假期自动回复邮件。\n \n您好，我最近正在休假中，无法亲自回复您的邮件。我将在假期结束后，尽快给您回复。"
      }
    ]
  },
  {
    "number": 2341,
    "title": "首字母是单个后面驼峰的复杂填充失败",
    "created_at": "2022-02-28T09:29:00Z",
    "closed_at": "2022-04-06T15:01:15Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2341",
    "body": "例如\r\nmSaleAmount 这个字段,填充不了\r\n但是改为mtSaleAmout就能填充",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2341/comments",
    "author": "menglikaibin",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2022-04-06T15:01:15Z",
        "body": "这个使用3.0.5+版本即可"
      },
      {
        "user": "Farb",
        "created_at": "2023-07-04T11:53:20Z",
        "body": "@zhuangjiaju  可是我们用的3.1.4版本，还有这个问题啊"
      },
      {
        "user": "Farb",
        "created_at": "2023-07-04T11:53:42Z",
        "body": "@menglikaibin  请求重开这个issue"
      }
    ]
  },
  {
    "number": 2332,
    "title": "excludeColumnFiledNames动态去掉显示的列但是会生成一个占位的空白列",
    "created_at": "2022-02-22T07:40:46Z",
    "closed_at": "2022-04-06T16:02:47Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2332",
    "body": "excludeColumnFiledNames动态去掉显示的列但是会生成一个空白的占位列，请问有什么方法能将这个空白的占位列去掉吗\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2332/comments",
    "author": "flyletc",
    "comments": [
      {
        "user": "flyletc",
        "created_at": "2022-02-23T04:18:46Z",
        "body": "能否使用index排序后，再判断属性是否在excludeColumnFiledNames中，在的话去掉后并将其后的index减一，其余的依次类推。这样应该不会产生空白列"
      },
      {
        "user": "HexisLuo",
        "created_at": "2022-03-14T07:11:25Z",
        "body": "把index改成order应该可以"
      }
    ]
  },
  {
    "number": 2331,
    "title": "请问下easyexcel可以实时写出到文件或者输出流中吗？",
    "created_at": "2022-02-22T02:09:42Z",
    "closed_at": "2022-04-06T14:53:08Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2331",
    "body": "比如每写完一个sheet都可以刷新出去",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2331/comments",
    "author": "miaoyibo",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2022-04-06T14:53:08Z",
        "body": "这个不支持，只能写完以后才能写入到文件流中。"
      },
      {
        "user": "wuyaxin",
        "created_at": "2023-03-16T15:09:02Z",
        "body": "@zhuangjiaju 你好 请问为什么不可以啊，这样的话，造成了web实时下载的时候，分批写入流并没有意义啊，我测试了一下，在我把所以数据加载完之前它是不会写入流的，因为我这边分批查询数据本身就比较慢导致会很长一段时间都没有数据写入响应流，话说这个的低内存是怎么实现的呢，我以为是实时分批写入流实现的呢。"
      }
    ]
  },
  {
    "number": 2327,
    "title": "读取时如何跳过特殊行",
    "created_at": "2022-02-19T02:41:56Z",
    "closed_at": "2022-04-06T14:41:37Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2327",
    "body": "现有一Excel账单需要导入，其中夹杂一些统计行，这个统计行导致将行数据转为`Bean`时抛出异常`ExcelDataConvertException`\r\n现在已知这些统计行的特征（某一列为0或空白字符串），如何跳过这些行而不抛出异常？\r\n\r\nPS：如果用户账单数据格式不对，还是要抛出`ExcelDataConvertException`的，现在只是忽略统计行的数据异常\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2327/comments",
    "author": "aboutZZ",
    "comments": [
      {
        "user": "TungMan0801",
        "created_at": "2022-03-10T09:59:36Z",
        "body": "Hello Mr Zhuang, we are a school group for Software Engineering. We want to offer to try to fix or develop this issue, or at least do a little contribution! If this bug has been fixed please just leave a comment, thanks! Hope to get your consent and support:)"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2022-04-06T14:41:37Z",
        "body": "比如0的情况下 很难知道是不是你要的，所以建议就是捕获异常 ，然后忽略掉这些数据"
      },
      {
        "user": "aboutZZ",
        "created_at": "2022-04-07T02:28:14Z",
        "body": "> 比如0的情况下 很难知道是不是你要的，所以建议就是捕获异常 ，然后忽略掉这些数据\r\n\r\n用户输入错误导致`ExcelDataConvertException`的情况下是需要报错的，而不是忽略。统计行需要忽略异常。\r\n建议在`ExcelDataConvertException`中设置当前行数据，方便捕获异常后获取出错的行。"
      }
    ]
  },
  {
    "number": 2326,
    "title": "加了列的注解之后就不触发CellStyleWriteHandler了",
    "created_at": "2022-02-17T08:47:38Z",
    "closed_at": "2022-04-06T14:40:18Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2326",
    "body": "我加了列的格式注解，发现CellStyleWriteHandler不再触发了，断点不会进去，这两种（注解/代码）只能选择一种？",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2326/comments",
    "author": "jiangxiaoqiang",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2022-04-06T14:40:18Z",
        "body": "尝试升级到`3.0.5`版本试试"
      }
    ]
  },
  {
    "number": 2310,
    "title": "在填充模板的时候如何编写对象A里的对象B模板",
    "created_at": "2022-02-09T07:35:48Z",
    "closed_at": "2022-02-11T13:19:03Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2310",
    "body": "public class A{\r\n\r\nprivate B b; \r\n\r\n}\r\n\r\npublic class B{\r\n\r\nprivate String name;\r\n\r\n}\r\n\r\n如题，怎么填充b的name属性，{.b.name}这样不行，在网上没有找到解决办法，求助\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2310/comments",
    "author": "weichao1996",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2022-02-11T13:19:03Z",
        "body": "不支持嵌套对象"
      }
    ]
  },
  {
    "number": 2307,
    "title": "指定文件Excel读取方式",
    "created_at": "2022-01-27T10:08:46Z",
    "closed_at": "2022-02-10T13:23:14Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2307",
    "body": "因为模板文件中包含了透视表，Table 等需要使用 XSSFWorkbook 实例才能创建，修改\r\n而 easyExcel 默认的读取写入使用了 SXSSFWorkbook 。\r\n问能否指定excel 读取，写入的方式。",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2307/comments",
    "author": "ykchina",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2022-02-10T13:23:14Z",
        "body": "设置 `inmomery=true`"
      }
    ]
  },
  {
    "number": 2305,
    "title": "能否获取到类似poi sax解析时候sheet的codeName和隐藏状态",
    "created_at": "2022-01-25T08:20:03Z",
    "closed_at": "2022-02-10T13:15:03Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2305",
    "body": "\tpublic void startElement(String uri, String localName, String name,    \r\n\t\t\t\tAttributes attributes) throws SAXException {\r\n\t\t\t\tsheetCodeName=attributes.getValue(\"codeName\");\r\n\t\t}\r\n**建议描述**\r\npoi是可以获取到codeName的，不知道easyexcel是否可以获取，怎么获取，找不到对应api",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2305/comments",
    "author": "852148230",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2022-02-10T13:15:03Z",
        "body": "目前不支持获取是否隐藏"
      }
    ]
  },
  {
    "number": 2279,
    "title": "1w行合并单元格耗时27s，有没有优化方案 version3.0.5",
    "created_at": "2022-01-11T07:16:45Z",
    "closed_at": "2022-02-11T13:17:05Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2279",
    "body": "在写入excel时利用CellWriteHandler对第一列重复的数据进行合并，发现耗时很长，只写入数据不合并很快，请问有没有什么解决办法           \r\n EasyExcel.write(response.getOutputStream(), ExportVo.class).registerWriteHandler(new ExcelFillCellMergeStrategy(1,new int[]{0})).autoCloseStream(Boolean.FALSE).sheet(\"成员列表\").doWrite(exportVos);\r\n\r\npublic class ExcelFillCellMergeStrategy implements CellWriteHandler {\r\n    /**\r\n     * 合并字段的下标\r\n     */\r\n    private int[] mergeColumnIndex;\r\n    /**\r\n     * 合并几行\r\n     */\r\n    private int mergeRowIndex;\r\n\r\n\r\n    public ExcelFillCellMergeStrategy() {\r\n    }\r\n\r\n    public ExcelFillCellMergeStrategy(int mergeRowIndex, int[] mergeColumnIndex) {\r\n        this.mergeRowIndex = mergeRowIndex;\r\n        this.mergeColumnIndex = mergeColumnIndex;\r\n    }\r\n\r\n    @Override\r\n    public void beforeCellCreate(WriteSheetHolder writeSheetHolder, WriteTableHolder writeTableHolder, Row row,\r\n                                 Head head, Integer integer, Integer integer1, Boolean aBoolean) {\r\n\r\n    }\r\n\r\n    @Override\r\n    public void afterCellCreate(WriteSheetHolder writeSheetHolder, WriteTableHolder writeTableHolder, Cell cell,\r\n                                Head head, Integer integer, Boolean aBoolean) {\r\n\r\n    }\r\n\r\n    @Override\r\n    public void afterCellDataConverted(WriteSheetHolder writeSheetHolder, WriteTableHolder writeTableHolder, WriteCellData<?> cellData, Cell cell, Head head, Integer relativeRowIndex, Boolean isHead) {\r\n\r\n    }\r\n\r\n    @Override\r\n    public void afterCellDispose(WriteSheetHolder writeSheetHolder, WriteTableHolder writeTableHolder, List<WriteCellData<?>> cellDataList, Cell cell, Head head, Integer relativeRowIndex, Boolean isHead) {\r\n        //当前行\r\n        int curRowIndex = cell.getRowIndex();\r\n        //当前列\r\n        int curColIndex = cell.getColumnIndex();\r\n\r\n        if (curRowIndex > mergeRowIndex) {\r\n            for (int i = 0; i < mergeColumnIndex.length; i++) {\r\n                if (curColIndex == mergeColumnIndex[i]) {\r\n                    mergeWithPrevRow(writeSheetHolder, cell, curRowIndex, curColIndex);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    private void mergeWithPrevRow(WriteSheetHolder writeSheetHolder, Cell cell, int curRowIndex, int curColIndex) {\r\n        Object curData = cell.getCellTypeEnum() == CellType.STRING ? cell.getStringCellValue() : cell.getNumericCellValue();\r\n        Cell preCell = cell.getSheet().getRow(curRowIndex - 1).getCell(curColIndex);\r\n        Object preData = preCell.getCellTypeEnum() == CellType.STRING ? preCell.getStringCellValue() : preCell.getNumericCellValue();\r\n        // 将当前单元格数据与上一个单元格数据比较\r\n        Boolean dataBool = preData.equals(curData);\r\n        if (dataBool) {\r\n            Sheet sheet = writeSheetHolder.getSheet();\r\n            List<CellRangeAddress> mergeRegions = sheet.getMergedRegions();\r\n            boolean isMerged = false;\r\n            for (int i = 0; i < mergeRegions.size() && !isMerged; i++) {\r\n                CellRangeAddress cellRangeAddr = mergeRegions.get(i);\r\n                // 若上一个单元格已经被合并，则先移出原有的合并单元，再重新添加合并单元\r\n                if (cellRangeAddr.isInRange(curRowIndex - 1, curColIndex)) {\r\n                    sheet.removeMergedRegion(i);\r\n                    cellRangeAddr.setLastRow(curRowIndex);\r\n                    sheet.addMergedRegion(cellRangeAddr);\r\n                    isMerged = true;\r\n                }\r\n            }\r\n            // 若上一个单元格未被合并，则新增合并单元\r\n            if (!isMerged) {\r\n                CellRangeAddress cellRangeAddress = new CellRangeAddress(curRowIndex - 1, curRowIndex, curColIndex, curColIndex);\r\n                sheet.addMergedRegion(cellRangeAddress);\r\n            }\r\n        }\r\n    }\r\n}\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2279/comments",
    "author": "ggzz11t",
    "comments": [
      {
        "user": "Qiu1024",
        "created_at": "2022-01-12T11:41:16Z",
        "body": "addMergedRegion 改成 addMergedRegionUnsafe"
      }
    ]
  },
  {
    "number": 2271,
    "title": "下载excel直接使用 response 的 OutputStream能不能生成一部分flush到浏览器",
    "created_at": "2022-01-06T10:18:38Z",
    "closed_at": "2022-02-11T06:13:21Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2271",
    "body": "下载excel直接使用 response 的 OutputStream能不能生成一部分flush到浏览器呢\r\n现在看，在调用finish的时候刷新了一下，耗时比较就的话，一直得不到数据相响应",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2271/comments",
    "author": "lik0914",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2022-02-11T06:13:21Z",
        "body": "不支持 需要自己开发 就导出部分数据 。"
      }
    ]
  },
  {
    "number": 2266,
    "title": "listener是否有线程安全问题？",
    "created_at": "2022-01-05T10:14:57Z",
    "closed_at": "2022-02-11T06:01:48Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2266",
    "body": "```java\r\nEasyExcel.read(inputStream,XXXDTO.class,listener).sheet().headRowNumber(1).doRead();\r\n```\r\nlistener里面执行是多线程的吗？可以使用线程不安全的成员变量作为属性吗？",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2266/comments",
    "author": "qq502361472",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2022-02-11T06:01:48Z",
        "body": "listener 每次都要new"
      }
    ]
  },
  {
    "number": 2264,
    "title": "导入字符串末尾有空格时解析后 空格丢失",
    "created_at": "2022-01-04T09:45:35Z",
    "closed_at": "2022-02-11T06:00:49Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2264",
    "body": "\r\n2.2.10版本 导入字符串末尾有空格时解析后 空格会丢失",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2264/comments",
    "author": "menglinjie",
    "comments": [
      {
        "user": "wyc-account",
        "created_at": "2022-01-24T10:21:32Z",
        "body": "autoTrim是不是true了"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2022-02-11T06:00:49Z",
        "body": "设置 autoTrim=false"
      }
    ]
  },
  {
    "number": 2263,
    "title": "表头固定",
    "created_at": "2022-01-04T01:17:00Z",
    "closed_at": "2022-04-06T16:18:09Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2263",
    "body": "我希望导出的EXCEL的表头是固定不能被修改的，那么，比如我们导出模板，只有第一行，就是表头列字段，\r\n那么用setlocked true就行，但是问题来了，其他的CELL我必须setlocked false,才能输入，但是，我总不能将剩下的所有的cell都设置一遍把\r\n请问大家有什么好办法吗？",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2263/comments",
    "author": "dtbdtb",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2022-04-06T16:18:09Z",
        "body": "尝试注解`@ContentStyle.locked=true`试试"
      },
      {
        "user": "sermonlizhi",
        "created_at": "2022-06-06T08:43:51Z",
        "body": "我试了这个注解还是还行，换成@HeadStyle(locked=true)也不行"
      }
    ]
  },
  {
    "number": 2259,
    "title": "老版本发现一个bug,新版本已经解决，还有提交修改的必要吗",
    "created_at": "2021-12-30T08:48:58Z",
    "closed_at": "2022-04-06T15:15:58Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2259",
    "body": "2.xx老版本会继续维护吗，一个函数字段读取的问题读的结果不正确，我想改这个问题\r\n已经明确是一个bug,我应该和谁讨论，（因为我也是刚开始读源码，可能对框架还不是很熟，想思想碰撞一下，qq群没响应）\r\n是否其他地方还有隐藏的问题\r\n不知道怎么为大家做贡献",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2259/comments",
    "author": "GuitarXY",
    "comments": [
      {
        "user": "GuitarXY",
        "created_at": "2022-01-04T06:11:13Z",
        "body": "3.0版本上的解析的方式都变了，我这应该怎么fork代码提交pr"
      },
      {
        "user": "aboutZZ",
        "created_at": "2022-02-19T01:45:26Z",
        "body": "定位到出bug要修改的文件，自己写一个Java类，包名、类名和`easyexcel`出bug地方的Java文件一致，这样加载class文件优先加载你的，而不是jar包里的。\r\n不知道怎么fork、提交pr，建议你先系统地学习下 git 的使用方法再来"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2022-04-06T15:15:58Z",
        "body": "2.2.11重大的问题还会维护，小问题不再维护了"
      }
    ]
  },
  {
    "number": 2257,
    "title": "doAfterAllAnalysed not work",
    "created_at": "2021-12-30T03:14:38Z",
    "closed_at": "2022-02-11T13:15:50Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2257",
    "body": "版本号是`2.2.7`。\r\n\r\n我使用`ExcelReader`方式读取Excel第一个Sheet，但是，回调对象`ReadListener`的`doAfterAllAnalysed()`方法没有调用。",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2257/comments",
    "author": "ClayGminx",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2022-02-11T13:15:50Z",
        "body": "这个是读取完整个excel以后的回调，尝试升级到 3.1.0试试"
      }
    ]
  },
  {
    "number": 2248,
    "title": "有没有办法读成Stream的方式",
    "created_at": "2021-12-25T12:37:09Z",
    "closed_at": "2022-02-11T13:11:08Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2248",
    "body": "有没有办法把行读成stream的方式，这样的话，可以使用流式处理(RxJava/Reactor)方式.\r\n\r\n如果没有，能否给个思路？谢谢",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2248/comments",
    "author": "jcai",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2022-02-11T13:11:08Z",
        "body": "通过list 自己转换呀"
      }
    ]
  },
  {
    "number": 2244,
    "title": "EasyExcel的read方法",
    "created_at": "2021-12-22T10:18:43Z",
    "closed_at": "2022-02-11T13:09:50Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2244",
    "body": "EasyExcel如果有返回值为List<T> 的read方法会更好用，很多场景都需要直接读出一个结果，而不是放在PageReadListener里面，这块目前是\r\n```\r\npublic PageReadListener(Consumer<List<T>> consumer) {\r\n        this.consumer = consumer;\r\n    }\r\n```\r\n不好从外界拿到返回值。",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2244/comments",
    "author": "tenglin-git",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2022-02-11T13:09:50Z",
        "body": "用`doReadAllSync`会返回所有数据，但是容易oom。\r\n这个用法的目的就是不让你外面拿到，在里面一批批的处理掉。"
      }
    ]
  },
  {
    "number": 2237,
    "title": "Excel设置单元格格式为整型或者百分数后，读取的为格式后的数据，而非实际值",
    "created_at": "2021-12-21T07:40:12Z",
    "closed_at": "2022-02-11T13:05:56Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2237",
    "body": "比如：\r\n1. Excel中实际值为 1.6，格式化后显示为2；读取后为 2，应该如何读取为 1.6\r\n2. Excel中实际值为 0.1，百分数格式化为10%，如何读取为 0.1 而非 10%",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2237/comments",
    "author": "franplk",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2022-02-11T13:05:56Z",
        "body": "用 double 接收就可以"
      }
    ]
  },
  {
    "number": 2234,
    "title": "3.0.5读取表格，出现异常如何回滚",
    "created_at": "2021-12-17T02:59:24Z",
    "closed_at": "2022-02-11T13:05:15Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2234",
    "body": "    /**\r\n     * 每隔5条存储数据库，实际使用中可以100条，然后清理list ，方便内存回收\r\n     */\r\n    private static final int BATCH_COUNT = 10;\r\n这个表示达到一定数量就去存到数据库里边。如果有这样的情况，第一批10条已经入库，但是第二批读取的时候，出现异常了，此时程序结束，第二批的10条没法报存。但是现在第一批10条已经入库了，如何在第二批报错的时候，回滚之前的报存操作呢？",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2234/comments",
    "author": "jgybzx",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2022-02-11T13:05:15Z",
        "body": "这个需要交给数据库 数据量不大用事务 数据量大了用版本号"
      }
    ]
  },
  {
    "number": 2197,
    "title": "2.2.6版本中再listener中的invoke方法里面怎么样throw exception才能让接口层捕获呢？",
    "created_at": "2021-11-21T07:12:46Z",
    "closed_at": "2022-04-06T15:25:44Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2197",
    "body": "看过issue中有写throw ExcelAnalyseStopException的，但是试过在invoke方法中throw并不能抛出异常，而是继续执行下一行代码，请问这个在2.2.6版本中怎么处理呢？或者是有没有其他的解决方法？感谢。",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2197/comments",
    "author": "konghao1",
    "comments": [
      {
        "user": "qianzzbatt",
        "created_at": "2021-11-25T04:40:31Z",
        "body": "throw new RuntimeException 试试"
      },
      {
        "user": "konghao1",
        "created_at": "2021-11-25T07:16:22Z",
        "body": "> \r\n\r\n我试过这样，但是在接口层拿不到异常信息，而且下一行数据会继续走invoke方法"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2022-04-06T15:25:44Z",
        "body": "抛出rt异常即可，会被封装成 ExcelAnalyseException ，然后getCause即可"
      }
    ]
  },
  {
    "number": 2193,
    "title": "EasyExcel.write(outputStream,OrderRespExcel.class).sheet().doWrite(orderRespExcels); 抛异常",
    "created_at": "2021-11-19T08:34:18Z",
    "closed_at": "2022-04-06T15:22:16Z",
    "labels": [
      "help wanted",
      "development completed"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2193",
    "body": "使用方式: \r\nServletOutputStream outputStream = response.getOutputStream();\r\nEasyExcel.write(outputStream,OrderRespExcel.class).sheet().doWrite(orderRespExcels);\r\n\r\nBeanMap create(Object bean) {\r\n        Generator gen = new Generator();  **debug源码到这儿抛异常**\r\n异常信息：\r\ncom.alibaba.excel.exception.ExcelGenerateException: java.lang.ExceptionInInitializerError\r\n\tat com.alibaba.excel.write.ExcelBuilderImpl.addContent(ExcelBuilderImpl.java:65) ~[easyexcel-3.0.5.jar:?]\r\n\tat com.alibaba.excel.ExcelWriter.write(ExcelWriter.java:73) ~[easyexcel-3.0.5.jar:?]\r\n\tat com.alibaba.excel.ExcelWriter.write(ExcelWriter.java:50) ~[easyexcel-3.0.5.jar:?]\r\n\r\nCaused by: java.lang.ExceptionInInitializerError\r\n\tat com.alibaba.excel.util.BeanMapUtils.create(BeanMapUtils.java:26) ~[easyexcel-3.0.5.jar:?]\r\n\tat com.alibaba.excel.write.executor.ExcelWriteAddExecutor.addJavaObjectToExcel(ExcelWriteAddExecutor.java:144) ",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2193/comments",
    "author": "liangbeng",
    "comments": [
      {
        "user": "Davidnessism",
        "created_at": "2021-11-23T09:41:06Z",
        "body": "换个jdk版本试试看，我一开始用jdk16，也是报了这个错误，后来改成jdk11就没有了"
      },
      {
        "user": "liangbeng",
        "created_at": "2021-11-23T09:42:44Z",
        "body": "好的谢谢，因为时间问题已经换成hutool的excel了，我自己的demo没这个问题"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2022-04-06T15:22:16Z",
        "body": "这个会在 3.1.0 版本中解决"
      }
    ]
  },
  {
    "number": 2192,
    "title": "读取问题",
    "created_at": "2021-11-19T07:27:44Z",
    "closed_at": "2022-04-06T15:21:47Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2192",
    "body": "读的时候怎么截取excel中的前100行，然后后面就不读了？",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2192/comments",
    "author": "yysimple",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2022-04-06T15:21:47Z",
        "body": "抛出 `ExcelAnalysisStopException`"
      }
    ]
  },
  {
    "number": 2186,
    "title": "3.0.5版本实现NullableObjectConverter接口替换null值",
    "created_at": "2021-11-13T04:28:49Z",
    "closed_at": "2024-07-31T01:19:07Z",
    "labels": [
      "help wanted",
      "pending verification",
      "planning"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2186",
    "body": "**异常代码**\r\n```java\r\n// 这是实现NullableObjectConverter接口的复写方法\r\n    @Override\r\n    public String convertToJavaData(ReadConverterContext<?> context) throws AnalyzerException, ParseException {\r\n        String fieldName = Optional.ofNullable(context).map(ReadConverterContext::getContentProperty).map(ExcelContentProperty::getField).map(Field::getName).orElse(\"\");\r\n        switch (Objects.requireNonNull(context).getReadCellData().getType()) {\r\n            case STRING: {\r\n                    return context.getReadCellData().getStringValue() == null ? StringUtils.EMPTY : context.getReadCellData().getStringValue();\r\n            }\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n```\r\n**`ConverterUtils`**\r\n```java\r\nprivate static Object doConvertToJavaObject(ReadCellData<?> cellData, Class<?> clazz,\r\n        ExcelContentProperty contentProperty, Map<ConverterKey, Converter<?>> converterMap, AnalysisContext context,\r\n        Integer rowIndex, Integer columnIndex) {\r\n      // 当Excel值为空的时候，已下代码直接返回了null，并不会执行上面代码块的自定义处理\r\n        boolean canNotConverterEmpty = cellData.getType() == CellDataTypeEnum.EMPTY\r\n            && !(converter instanceof NullableObjectConverter);\r\n        if (canNotConverterEmpty) {\r\n            return null;\r\n        }\r\n\r\n    }\r\n```\r\n**异常提示**\r\n 在3.0.0-beta1版本修复了这个问题，但是经过测试无法实现对null值得替换\r\n**建议描述**\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2186/comments",
    "author": "kaciry0927",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2022-05-11T06:25:02Z",
        "body": "这个只能在写入的时候使用 无法在读取的时候使用"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2024-07-19T06:19:43Z",
        "body": "你好，我们发现此Issue已经超过三个月没有活动了，为了更好的帮助您解决问题，我们将在两周后关闭此Issue，如果您仍然有问题，请在两周内内回复此Issue，谢谢！如果您已经解决或者不需要帮助，请忽略此消息。"
      },
      {
        "user": "stan9333",
        "created_at": "2024-11-08T09:30:09Z",
        "body": "> 这个只能在写入的时候使用 无法在读取的时候使用\r\n\r\n@zhuangjiaju 源码里面的函数是 doConvertToJavaObject，结果还不支持，这个太坑了吧"
      }
    ]
  },
  {
    "number": 2185,
    "title": "请问下针对自定义转换器怎么动态传参，比如LocalDateTime不同的时间格式",
    "created_at": "2021-11-12T04:18:28Z",
    "closed_at": "2024-07-19T08:02:24Z",
    "labels": [
      "help wanted",
      "planning"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2185",
    "body": "**建议描述**\r\n目前文档和示例都没有找到自定义转换器怎么动态传参，比如我自定义一个LocalDateTime转换器，我怎么传入时间格式，不可能这个接口导入是yyyy-MM-dd HH:mm，另外一个接口是yyyy年MM月dd日 HH时mm分，我又得重新弄一个转换器吧。。。。。感觉这个设计很不合理\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2185/comments",
    "author": "zxuanhong",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2022-04-06T15:55:40Z",
        "body": "目前不支持动态传参，后续会规划"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2024-07-19T06:19:44Z",
        "body": "你好，我们发现此Issue已经超过三个月没有活动了，为了更好的帮助您解决问题，我们将在7天后关闭此Issue，如果您仍然有问题，请在7天内回复此Issue，谢谢！如果您已经解决或者不需要帮助，请忽略此消息。"
      }
    ]
  },
  {
    "number": 2182,
    "title": "EasyExcel表头自定义颜色不生效",
    "created_at": "2021-11-10T07:24:42Z",
    "closed_at": "2022-04-06T15:51:43Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2182",
    "body": "\r\n**异常代码**\r\n```java\r\n   @Override\r\n    protected void setHeadCellStyle(Cell cell, Head head, Integer relativeRowIndex) {\r\n        XSSFCellStyle cellStyle = (XSSFCellStyle) cell.getCellStyle();\r\n        cellStyle.setFillPattern(FillPatternType.SOLID_FOREGROUND);\r\n        cellStyle.setFillForegroundColor(new XSSFColor(new java.awt.Color(84, 131, 194)));\r\n        cell.setCellStyle(cellStyle);\r\n    }\r\n```\r\n**异常提示**\r\n  重写AbstractCellStyleStrategy的上述方法，断点跟踪执行了，但是实际颜色未生效。\r\n**建议描述**\r\n  希望能帮忙看看这样使用是否正确？",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2182/comments",
    "author": "hnxydq",
    "comments": [
      {
        "user": "kangyu06",
        "created_at": "2022-06-08T06:31:32Z",
        "body": "+1，最后咋解决的啊"
      },
      {
        "user": "santiini",
        "created_at": "2022-11-08T04:19:28Z",
        "body": "我是通过拦截器实现的:"
      },
      {
        "user": "santiini",
        "created_at": "2022-11-08T04:23:03Z",
        "body": "> 我是通过拦截器实现的:\r\n\r\n```java\r\n                .registerWriteHandler(new CellWriteHandler() {\r\n\r\n                    @Override\r\n                    public void afterCellDispose(CellWriteHandlerContext context) {\r\n                        if (context.getHead()) {\r\n                            XSSFCellStyle cStyle = (XSSFCellStyle) context.getWriteWorkbookHolder().getWorkbook().createCellStyle();\r\n                            cStyle.setFillForegroundColor(new XSSFColor(new Color(223, 169, 169)));\r\n                            cStyle.setFillPattern(FillPatternType.SOLID_FOREGROUND);\r\n\r\n                            WriteCellStyle cellStyle = context.getFirstCellData().getWriteCellStyle();\r\n                            // WriteCellStyle 中的 short 设置高于 XSSFCellStyle, 需要设置为 null\r\n                            cellStyle.setFillForegroundColor(null);\r\n                        }\r\n                    }\r\n                })\r\n```"
      },
      {
        "user": "kaciry0927",
        "created_at": "2022-11-10T06:05:13Z",
        "body": "> \r\n\r\nWriteCellStyle cellStyle = context.getFirstCellData().getWriteCellStyle();\r\n这个方法找不到呢，这是哪个版本的呢"
      },
      {
        "user": "LuckyClover1",
        "created_at": "2022-11-30T02:27:11Z",
        "body": "> > 我是通过拦截器实现的:\r\n> \r\n> ```java\r\n>                 .registerWriteHandler(new CellWriteHandler() {\r\n> \r\n>                     @Override\r\n>                     public void afterCellDispose(CellWriteHandlerContext context) {\r\n>                         if (context.getHead()) {\r\n>                             XSSFCellStyle cStyle = (XSSFCellStyle) context.getWriteWorkbookHolder().getWorkbook().createCellStyle();\r\n>                             cStyle.setFillForegroundColor(new XSSFColor(new Color(223, 169, 169)));\r\n>                             cStyle.setFillPattern(FillPatternType.SOLID_FOREGROUND);\r\n> \r\n>                             WriteCellStyle cellStyle = context.getFirstCellData().getWriteCellStyle();\r\n>                             // WriteCellStyle 中的 short 设置高于 XSSFCellStyle, 需要设置为 null\r\n>                             cellStyle.setFillForegroundColor(null);\r\n>                         }\r\n>                     }\r\n>                 })\r\n> ```\r\n我用这个方法试过了也没用\r\n\r\n"
      }
    ]
  },
  {
    "number": 2176,
    "title": "com.alibaba.excel.exception.ExcelWriteDataConvertException: Convert data:1 return null, at row:1",
    "created_at": "2021-11-09T10:24:44Z",
    "closed_at": "2021-11-09T12:07:25Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2176",
    "body": "现在需要转换字典，定义了一个自定义转换器，下面是我的代码\r\n\r\n\r\n\r\n**异常代码**\r\n```java\r\n   package com.sportswin.soa.spark.contract.response;\r\n\r\nimport com.alibaba.excel.converters.Converter;\r\nimport com.alibaba.excel.enums.CellDataTypeEnum;\r\nimport com.alibaba.excel.metadata.GlobalConfiguration;\r\nimport com.alibaba.excel.metadata.data.WriteCellData;\r\nimport com.alibaba.excel.metadata.property.ExcelContentProperty;\r\nimport jodd.util.StringUtil;\r\nimport org.apache.commons.lang3.StringUtils;\r\n\r\nimport java.lang.reflect.Field;\r\n\r\n/**\r\n * easyexcel关于导出的字典值转换\r\n */\r\npublic class ExcelDictConverter implements Converter<Integer> {\r\n\r\n    private String[] dictCodIsYesNoArr = {\"maritalStatus\", \"\"};\r\n\r\n    @Override\r\n    public Class supportJavaTypeKey() {\r\n        return Integer.class;\r\n    }\r\n\r\n    @Override\r\n    public CellDataTypeEnum supportExcelTypeKey() {\r\n        return CellDataTypeEnum.STRING;\r\n    }\r\n\r\n    @Override\r\n    public WriteCellData<?> convertToExcelData(Integer dictKey, ExcelContentProperty excelContentProperty, GlobalConfiguration globalConfiguration) throws Exception {\r\n        // 类里需要转换的字段\r\n        Field field = excelContentProperty.getField();\r\n        String fieldName = field.getName();\r\n        String excelValue = \"未知\";\r\n        // 字典值为yes_no的字段\r\n        if (StringUtils.equalsAnyIgnoreCase(fieldName, dictCodIsYesNoArr)) {\r\n            if (dictKey == 1) {\r\n                excelValue = \"未婚\";\r\n            } else if (dictKey == 2) {\r\n                excelValue = \"离异\";\r\n            } else if (dictKey == 3) {\r\n                excelValue = \"丧偶\";\r\n            } else {\r\n                excelValue = \"未知\";\r\n            }\r\n        }\r\n        WriteCellData cellData = new WriteCellData();\r\n        cellData.setData(StringUtil.isBlank(excelValue) ? dictKey.toString() : excelValue);\r\n        return cellData;\r\n    }\r\n}\r\n```\r\n**异常提示**\r\n\r\n`com.alibaba.excel.exception.ExcelWriteDataConvertException: Convert data:1 return null, at row:1\r\n`\r\n\r\n\r\n版本：  api group: 'com.alibaba', name: 'easyexcel', version: '3.0.3'\r\n\r\n\r\n**建议描述**\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2176/comments",
    "author": "jiangxiaoqiang",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2021-11-09T12:07:25Z",
        "body": "`cellData .setType=CellDataTypeEnum.STRING`"
      },
      {
        "user": "jiangxiaoqiang",
        "created_at": "2021-11-10T02:15:00Z",
        "body": "> `cellData .setType=CellDataTypeEnum.STRING`\r\n\r\n谢谢你。这个是我最终的代码：\r\n\r\n\r\n\r\n\r\n\r\n\r\n```\r\npublic WriteCellData<?> convertToExcelData(Integer dictKey, ExcelContentProperty excelContentProperty, GlobalConfiguration globalConfiguration) throws Exception {\r\n        // 类里需要转换的字段\r\n        Field field = excelContentProperty.getField();\r\n        String fieldName = field.getName();\r\n        String excelValue = \"未知\";\r\n        // 字典值为yes_no的字段\r\n        if (StringUtils.equalsAnyIgnoreCase(fieldName, dictCodIsYesNoArr)) {\r\n            if (dictKey == 1) {\r\n                excelValue = \"未婚\";\r\n            } else if (dictKey == 2) {\r\n                excelValue = \"离异\";\r\n            } else if (dictKey == 3) {\r\n                excelValue = \"丧偶\";\r\n            } else {\r\n                excelValue = \"未知\";\r\n            }\r\n        }\r\n        String cellValue = StringUtil.isBlank(excelValue) ? dictKey.toString() : excelValue;\r\n        WriteCellData cellData = new WriteCellData();\r\n        cellData.setType(CellDataTypeEnum.STRING);\r\n        cellData.setStringValue(cellValue);\r\n        cellData.setData(cellValue);\r\n        return cellData;\r\n    }\r\n\r\n```\r\n\r\n希望可以给其他朋友一些参考\r\n\r\n"
      }
    ]
  },
  {
    "number": 2175,
    "title": "关于自定义监听器的invoke 方法无法使用return 结束的问题",
    "created_at": "2021-11-08T17:10:48Z",
    "closed_at": "2021-11-09T12:10:03Z",
    "labels": [
      "bug",
      "help wanted",
      "dependencies"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2175",
    "body": "//Excel 监听器\r\npublic class MyExcelListener  extends AnalysisEventListener<ExcelBean> {\r\n   \r\n    private static final int BATCH_COUNT = 1000;\r\n   private  List<ExcelBean> result = new ArrayList<>(BATCH_COUNT);\r\n\r\n\r\n    @Override\r\n    public void invoke(ExcelBean excelBean, AnalysisContext context) {\r\n        System.out.println(excelBean);\r\n        if (\"终止\".equals(excelBean.getName())){\r\n             return;\r\n        }\r\n        result.add(excelBean);\r\n    }\r\n\r\n}\r\n\r\n-------------------------------------------\r\n希望：\r\n自定义的监听器的invoke方法，无法进行return 强制终止。比如读取数据的时候，一旦判断Excel中有一行数据是 终止，\r\n我就直接结束。不在往下执行代码。\r\n\r\n问题：\r\n invoke方法进入if 判断条件执行了return 后，只会终止当前方法，但是依旧会继续在进入invoke方法走下面流程。\r\n\r\n比方说excel 表格有100条数据，其中第50条的 name列是\"终止\"，使用return 结束，\r\n第50条之后的数据都是非必要数据。不需要装载到list 里，\r\n那么此时的List 装载的数据只有50条，但是使用teturn 后，会结束当前invoke 方法，然后进入下轮invoke 方法调用。\r\n所以list 装载的数据是99条。。所以return 只是相当于continue...\r\n请问此时如何解决？\r\n\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2175/comments",
    "author": "dreamprogram",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2021-11-09T12:10:03Z",
        "body": "`throw new ExcelAnalysisStopException()`"
      },
      {
        "user": "konghao1",
        "created_at": "2021-11-22T14:13:18Z",
        "body": "@dreamprogram 您好，请问这个问题您那边解决了吗？我看throw new ExcelAnalysisException并不能保留终止前的数据"
      },
      {
        "user": "dreamprogram",
        "created_at": "2021-11-27T06:49:54Z",
        "body": "@konghao1  我直接抛弃esayExcel这个工具。设计缺陷太多。官方回复让我感觉太敷衍了。"
      }
    ]
  },
  {
    "number": 2174,
    "title": "如何在文件上传的时候，在Controller层拿到所有数据",
    "created_at": "2021-11-07T09:07:55Z",
    "closed_at": "2021-11-09T12:09:14Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2174",
    "body": "**Web层代码**\r\n```java\r\n /**\r\n    * 文件上传\r\n    */\r\n   @PostMapping(\"upload\")\r\n   @ResponseBody\r\n   public String upload(MultipartFile file) throws IOException {\r\n       //拿到Excel 所有集合数据\r\n        List<UploadData> datas =  EasyExcel.read(file.getInputStream(), UploadData.class, new UploadDataListener(uploadDAO)).sheet().doRead(); \r\n         if (datas != null && datas .size() != 0) {\r\n            for (UploadData data: datas ) {\r\n                logger.info(data)\r\n            }\r\n              \r\n        }\r\n        return \"success\";\r\n   } \r\n```\r\n**建议描述**\r\ndatas 如何拿到Excel 所有集合数据？\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2174/comments",
    "author": "licong0007",
    "comments": [
      {
        "user": "jaiiye",
        "created_at": "2021-11-09T08:42:33Z",
        "body": "这样就可以：\r\n`List<UploadData> datas =  EasyExcel.read(file.getInputStream()).head(UploadData.class).sheet().doReadSync();`"
      }
    ]
  },
  {
    "number": 2137,
    "title": "关于在Linux上文件加密损坏的问题",
    "created_at": "2021-10-16T05:50:05Z",
    "closed_at": "2022-04-06T16:18:31Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2137",
    "body": "这段代码在本地windows可以获取正常的文件，但是在Linux测试环境上文件会损坏。但是如果不使用加密，也不会损坏，是否是暂不支持Linux\r\n\r\n public static void exportSingleSheet(HttpServletResponse response, String password, String fileName, ExcelDataExportDto dto) throws IOException {\r\n        fileName = StringUtils.isBlank(fileName) ? \"test\" : fileName;\r\n        response.reset();\r\n        response.setHeader(\"Content-Disposition\",\r\n                \"attachment;filename=\" + URLEncoder.encode(fileName + \".xls\", \"UTF-8\"));\r\n        response.setContentType(\"application/vnd.ms-excel;charset=UTF-8\");\r\n        response.setHeader(\"Pragma\", \"no-cache\");\r\n        response.setHeader(\"Cache-Control\", \"no-cache\");\r\n        response.setDateHeader(\"Expires\", 0);\r\n        EasyExcel.write(response.getOutputStream(), dto.getClazz()).autoCloseStream(true)\r\n                .password(password)\r\n                .sheet(dto.getSheetName())\r\n                .doWrite(dto.getDataList());\r\n        response.getOutputStream().flush();\r\n        response.getOutputStream().close();\r\n    }",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2137/comments",
    "author": "TatobaZeroOne",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2021-10-21T13:07:31Z",
        "body": "有没有异常？"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2022-04-06T16:18:31Z",
        "body": "这个是否已经解决？未解决的话请重新打开问题"
      }
    ]
  },
  {
    "number": 2135,
    "title": "请问有哪位遇到linux上使用easyexcel会卡主的问题么",
    "created_at": "2021-10-15T13:11:55Z",
    "closed_at": "2021-10-21T13:08:12Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2135",
    "body": "java version:\r\n    openjdk 1.8.0_282（AdoptOpenJDK）\r\nOS:\r\n    redhat6/7\r\n现象:\r\n    就是卡住，没有反应。在本地跑是没有问题的，但是扔到linux主机上就卡主\r\n\r\n很抱歉我也没法提供更多信息，如有采集信息的方法，烦请告知，非常感谢",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2135/comments",
    "author": "praynise",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2021-10-21T13:08:12Z",
        "body": "这个需要提供具体的信息"
      },
      {
        "user": "praynise",
        "created_at": "2021-10-27T12:08:25Z",
        "body": "请问需要什么信息呢？如何进行采集，烦请告知，谢谢"
      }
    ]
  },
  {
    "number": 2125,
    "title": "填充功能是否支持在一个sheet中，追加输出模板内容",
    "created_at": "2021-10-12T06:18:39Z",
    "closed_at": "2021-10-29T12:07:10Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2125",
    "body": "目前查看文档与API，只发现可以根据一个模板只能将内容同样的输出一份到目标sheet里。\r\n请问是否有办法，将循环模板文件，填充不同的数值，追加的方式输出到同一个sheet里\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2125/comments",
    "author": "pkanyue",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2021-10-29T12:07:10Z",
        "body": "这个目前不支持"
      }
    ]
  },
  {
    "number": 2116,
    "title": "请问模板填充，支持带图片的数据填充吗？我在文档上没有看到，不知道支持不支持。",
    "created_at": "2021-10-09T15:28:22Z",
    "closed_at": "2021-10-11T08:54:25Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2116",
    "body": "请问模板填充，支持带图片的数据填充吗？我在文档上没有看到，不知道支持不支持。",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2116/comments",
    "author": "zhubc1993",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2021-10-11T08:54:25Z",
        "body": "支持"
      }
    ]
  },
  {
    "number": 2110,
    "title": "非注解方式如何实现跨列居中",
    "created_at": "2021-09-29T01:27:20Z",
    "closed_at": "2021-10-09T09:56:00Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2110",
    "body": "非注解方式如何实现跨列居中",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2110/comments",
    "author": "ywzou",
    "comments": [
      {
        "user": "MentosL",
        "created_at": "2021-09-30T14:04:35Z",
        "body": "注解咋实现的   直接把注解实现搬出来就可以了吧"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2021-10-09T09:56:00Z",
        "body": "尝试 实现`AbstractCellStyleStrategy`"
      }
    ]
  },
  {
    "number": 2109,
    "title": "如何获取excel的行分组信息",
    "created_at": "2021-09-28T12:41:27Z",
    "closed_at": "2021-10-09T10:02:50Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2109",
    "body": "如下poi的api代码，使用easyexcel如何达到\r\n```java\r\n  row.getOutlineLevel()\r\n```\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2109/comments",
    "author": "fizzxue",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2021-10-09T10:02:50Z",
        "body": "不支持 如果数据量不是特别大 建议使用poi.\r\neasyexcel 为了性能 未读取非核心数据"
      }
    ]
  },
  {
    "number": 2106,
    "title": "2.2.8升级到3.0之后，导出大量带图片的信息写入时会报错",
    "created_at": "2021-09-24T10:45:07Z",
    "closed_at": "2022-05-10T08:40:07Z",
    "labels": [
      "help wanted",
      "developing"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2106",
    "body": "使用场景：\r\n    导出excel每一行要带三张照片，格式为xls。\r\n问题描述：\r\n    使用写入文件的方式为InputStream，之前使用2.2.8版本导出无问题，升级到3.0.0之后导出少量数据无问题，大量数据会报如下错误：\r\n**异常提示**\r\njava.lang.IllegalStateException: The maximum number of cell styles was exceeded. You can define up to 4000 styles in a .xls workbook\r\n\tat org.apache.poi.hssf.usermodel.HSSFWorkbook.createCellStyle(HSSFWorkbook.java:1262)\r\n\tat org.apache.poi.hssf.usermodel.HSSFWorkbook.createCellStyle(HSSFWorkbook.java:131)\r\n\tat com.alibaba.excel.util.StyleUtil.buildCellStyle(StyleUtil.java:39)\r\n\tat com.alibaba.excel.write.metadata.holder.WriteWorkbookHolder.createCellStyle(WriteWorkbookHolder.java:252)\r\n\tat com.alibaba.excel.write.executor.AbstractExcelWriteExecutor.fillStyle(AbstractExcelWriteExecutor.java:116)\r\n\tat com.alibaba.excel.write.executor.AbstractExcelWriteExecutor.converterAndSet(AbstractExcelWriteExecutor.java:76)\r\n\tat com.alibaba.excel.write.executor.ExcelWriteAddExecutor.addJavaObjectToExcel(ExcelWriteAddExecutor.java:145)\r\n\tat com.alibaba.excel.write.executor.ExcelWriteAddExecutor.addOneRowOfDataToExcel(ExcelWriteAddExecutor.java:76)\r\n\tat com.alibaba.excel.write.executor.ExcelWriteAddExecutor.add(ExcelWriteAddExecutor.java:57)\r\n\tat com.alibaba.excel.write.ExcelBuilderImpl.addContent(ExcelBuilderImpl.java:59)\r\n\tat com.alibaba.excel.ExcelWriter.write(ExcelWriter.java:73)\r\n\tat com.alibaba.excel.ExcelWriter.write(ExcelWriter.java:50)\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2106/comments",
    "author": "guizeru",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2021-10-09T10:26:33Z",
        "body": "这个要贴下代码"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2022-05-10T08:40:07Z",
        "body": "这个是否已经解决了问题？如果无法解决 请重新打开问题"
      }
    ]
  },
  {
    "number": 2051,
    "title": "com.alibaba.excel.exception.ExcelAnalysisException: File /Users/Mr_Leo/Desktop/demo.xlsx not exists.",
    "created_at": "2021-08-26T09:26:38Z",
    "closed_at": "2021-08-28T06:49:37Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2051",
    "body": "使用绝对路径 传入url时,为什么总是报错:file not exists? 请问这里不能用绝对路径吗?",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2051/comments",
    "author": "shijia2118",
    "comments": [
      {
        "user": "shijia2118",
        "created_at": "2021-08-26T09:28:06Z",
        "body": "> 使用绝对路径 传入url时,为什么总是报错:file not exists? 请问这里不能用绝对路径吗?\r\n\r\n这是报错的代码:第一行是传入的绝对路径\r\nString fileName = \"/Users/Mr_Leo/Desktop/demo.xlsx\";\r\nEasyExcel.read(fileName, DemoData.class, new DemoDataListener()).sheet().doRead();"
      },
      {
        "user": "tomrrowc",
        "created_at": "2024-02-02T02:02:24Z",
        "body": "同遇，具体啥问题"
      }
    ]
  },
  {
    "number": 2048,
    "title": "填充数据时，生成excel非常慢，数据量不大，耗时就是在ExcelWritee.finish()这，是怎么回事啊",
    "created_at": "2021-08-25T15:47:06Z",
    "closed_at": "2021-09-14T03:17:10Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2048",
    "body": null,
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2048/comments",
    "author": "guchenglangzi",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2021-09-14T03:17:10Z",
        "body": "建议 参照demo 书写。\r\nfinish 会把所有数据压缩 所以会占用大量时间，但是数据量不大的情况下 不会很久。"
      }
    ]
  },
  {
    "number": 2043,
    "title": "支持csv读写吗？",
    "created_at": "2021-08-18T07:05:18Z",
    "closed_at": "2021-08-18T07:27:12Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2043",
    "body": "支持csv读写吗？没看见文档有说支持，如果不支持，后面会支持吗？\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2043/comments",
    "author": "Ryoui",
    "comments": [
      {
        "user": "zhukovaskychina",
        "created_at": "2021-08-18T07:22:16Z",
        "body": "csv不需要easyexcel.csv存储格式和excel不一样的呀"
      },
      {
        "user": "Ryoui",
        "created_at": "2021-08-18T07:27:12Z",
        "body": "好吧"
      }
    ]
  },
  {
    "number": 2042,
    "title": "动态导出多sheet",
    "created_at": "2021-08-17T03:56:27Z",
    "closed_at": "2024-07-31T01:19:08Z",
    "labels": [
      "help wanted",
      "pending verification",
      "planning"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2042",
    "body": "1、.withTemplate(templateFileName).build();  指定模板，可以指定具体sheet吗？\r\n\r\n2、 EasyExcel.writerSheet(\"SheetName\")是指定导出sheet对象的吧？我刚写demo测试的。。。\r\n\r\n3、我想做的：指定具体sheet模板    导出的时候直接使用sheet进行多sheet复制。然而使用中发现并不能，\r\n     3.1 如果模板写一个sheet导出多个sheet，在导出第二个shee他的时候源码doFill方法的analysisCellList，报空指针\r\n     3.2 如果模板写多个sheet，导出sheet数量小于模板sheet数量，name渲染导出sheet的个数，模板中多余的sheet按原格式导出了（然而我并不需要。。。）\r\n\r\n综上所述，  动态导出多sheet好像并不完善",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2042/comments",
    "author": "gaogushenling",
    "comments": [
      {
        "user": "gaogushenling",
        "created_at": "2021-08-17T04:04:24Z",
        "body": "不行的话我只能多模板（一个到多个sheet不等），然后在代码里边再选择模板了"
      },
      {
        "user": "hackedbyxx",
        "created_at": "2021-08-25T09:52:28Z",
        "body": "@gaogushenling 我用了也发现了，模板都不能复用的，第二次就报空指针了"
      },
      {
        "user": "wsyingang",
        "created_at": "2021-10-10T15:10:00Z",
        "body": "@zhuangjiaju The issue has specific arrangements. I want to try to develop this feature"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2024-07-19T06:19:45Z",
        "body": "你好，我们发现此Issue已经超过三个月没有活动了，为了更好的帮助您解决问题，我们将在两周后关闭此Issue，如果您仍然有问题，请在两周内内回复此Issue，谢谢！如果您已经解决或者不需要帮助，请忽略此消息。"
      }
    ]
  },
  {
    "number": 2039,
    "title": "创建 xlsx 文件，写入数据出现 sheet 名称重复问题",
    "created_at": "2021-08-10T06:58:02Z",
    "closed_at": "2021-08-10T07:02:26Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2039",
    "body": "**异常代码**\r\n```java\r\n   package com.gdzd.download.stream;\r\n\r\nimport com.alibaba.excel.EasyExcel;\r\nimport com.alibaba.excel.ExcelWriter;\r\nimport com.alibaba.excel.support.ExcelTypeEnum;\r\nimport com.alibaba.excel.write.metadata.WriteSheet;\r\n\r\nimport java.io.File;\r\nimport java.util.List;\r\nimport java.util.UUID;\r\n\r\n/**\r\n * @author Haidong Liu\r\n * @date 2021/8/4 10:09\r\n */\r\npublic class DataWriter {\r\n    private final ExcelWriter excelWriter;\r\n\r\n    private final String fileName;\r\n\r\n    private final String fileUrl;\r\n\r\n    public DataWriter(String parentUrl, String fileName) {\r\n        this.fileName = fileName;\r\n        fileUrl = parentUrl + fileName + \".xlsx\";\r\n        excelWriter = EasyExcel.write(fileUrl).excelType(ExcelTypeEnum.XLSX).inMemory(false).build();\r\n    }\r\n\r\n    public DataWriter(String parentUrl) {\r\n        this(parentUrl, UUID.randomUUID().toString());\r\n    }\r\n\r\n\r\n    public DataWriter() {\r\n       this(\"/home/lhd/data_download/\");\r\n    }\r\n\r\n    public void write(List<DataModel> data, int sheetNo, String sheet, List<List<String>> head){\r\n        WriteSheet writeSheet = EasyExcel.writerSheet(sheetNo, sheet).head(head).build();\r\n        excelWriter.write(data, writeSheet);\r\n    }\r\n\r\n    public void finish(){\r\n        excelWriter.finish();\r\n    }\r\n\r\n    public String getFileName(){\r\n        return fileName;\r\n    }\r\n\r\n    public String getFileUrl(){\r\n        return fileUrl;\r\n    }\r\n\r\n    public File getFile(){\r\n        return excelWriter.writeContext().writeWorkbookHolder().getFile();\r\n    }\r\n}\r\n\r\n```\r\n\r\n**异常提示**\r\n在 windows 下可以正常生成文件，在 linux 下，则在第一次写入数据时，即发生 sheet 名称重复\r\n\r\njava.lang.IllegalArgumentException: The workbook already contains a sheet named 'BP1_B1电压0'\r\ngdzd-download-xlsx | \tat org.apache.poi.xssf.usermodel.XSSFWorkbook.validateSheetName(XSSFWorkbook.java:890)\r\ngdzd-download-xlsx | \tat org.apache.poi.xssf.usermodel.XSSFWorkbook.createSheet(XSSFWorkbook.java:843)\r\ngdzd-download-xlsx | \tat org.apache.poi.xssf.streaming.SXSSFWorkbook.createSheet(SXSSFWorkbook.java:679)\r\ngdzd-download-xlsx | \tat org.apache.poi.xssf.streaming.SXSSFWorkbook.createSheet(SXSSFWorkbook.java:90)\r\ngdzd-download-xlsx | \tat com.alibaba.excel.util.WorkBookUtil.createSheet(WorkBookUtil.java:66)\r\ngdzd-download-xlsx | \tat com.alibaba.excel.context.WriteContextImpl.createSheet(WriteContextImpl.java:205)\r\ngdzd-download-xlsx | \tat com.alibaba.excel.context.WriteContextImpl.initSheet(WriteContextImpl.java:182)\r\ngdzd-download-xlsx | \tat com.alibaba.excel.context.WriteContextImpl.currentSheet(WriteContextImpl.java:122)\r\ngdzd-download-xlsx | \tat com.alibaba.excel.write.ExcelBuilderImpl.addContent(ExcelBuilderImpl.java:53)\r\ngdzd-download-xlsx | \tat com.alibaba.excel.ExcelWriter.write(ExcelWriter.java:161)\r\ngdzd-download-xlsx | \tat com.alibaba.excel.ExcelWriter.write(ExcelWriter.java:146)\r\ngdzd-download-xlsx | \tat com.gdzd.download.stream.DataWriter.write(DataWriter.java:40)\r\ngdzd-download-xlsx | \tat com.gdzd.download.stream.AbstractDownloadStreamProcessor.lambda$writeExcel$0(AbstractDownloadStreamProcessor.java:100)\r\ngdzd-download-xlsx | \tat java.util.ArrayList.forEach(ArrayList.java:1257)\r\ngdzd-download-xlsx | \tat com.gdzd.download.stream.AbstractDownloadStreamProcessor.writeExcel(AbstractDownloadStreamProcessor.java:79)\r\ngdzd-download-xlsx | \tat com.gdzd.download.stream.DownloadStreamProcessor.lambda$process$0(DownloadStreamProcessor.java:118)\r\ngdzd-download-xlsx | \tat java.util.ArrayList.forEach(ArrayList.java:1257)\r\ngdzd-download-xlsx | \tat com.gdzd.download.stream.DownloadStreamProcessor.process(DownloadStreamProcessor.java:116)\r\ngdzd-download-xlsx | \tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\ngdzd-download-xlsx | \tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\ngdzd-download-xlsx | \tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\ngdzd-download-xlsx | \tat java.lang.reflect.Method.invoke(Method.java:498)\r\ngdzd-download-xlsx | \tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)\r\ngdzd-download-xlsx | \tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)\r\ngdzd-download-xlsx | \tat org.springframework.cloud.stream.binding.StreamListenerMessageHandler.handleRequestMessage(StreamListenerMessageHandler.java:55)\r\ngdzd-download-xlsx | \tat org.springframework.integration.handler.AbstractReplyProducingMessageHandler.handleMessageInternal(AbstractReplyProducingMessageHandler.java:134)\r\ngdzd-download-xlsx | \tat org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:62)\r\ngdzd-download-xlsx | \tat org.springframework.integration.dispatcher.AbstractDispatcher.tryOptimizedDispatch(AbstractDispatcher.java:115)\r\ngdzd-download-xlsx | \tat org.springframework.integration.dispatcher.UnicastingDispatcher.doDispatch(UnicastingDispatcher.java:133)\r\ngdzd-download-xlsx | \tat org.springframework.integration.dispatcher.UnicastingDispatcher.dispatch(UnicastingDispatcher.java:106)\r\ngdzd-download-xlsx | \tat org.springframework.integration.channel.AbstractSubscribableChannel.doSend(AbstractSubscribableChannel.java:72)\r\ngdzd-download-xlsx | \tat org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:570)\r\ngdzd-download-xlsx | \tat org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:520)\r\ngdzd-download-xlsx | \tat org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:187)\r\ngdzd-download-xlsx | \tat org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:166)\r\ngdzd-download-xlsx | \tat org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:47)\r\ngdzd-download-xlsx | \tat org.springframework.messaging.core.AbstractMessageSendingTemplate.send(AbstractMessageSendingTemplate.java:109)\r\ngdzd-download-xlsx | \tat org.springframework.integration.endpoint.MessageProducerSupport.sendMessage(MessageProducerSupport.java:208)\r\ngdzd-download-xlsx | \tat org.springframework.integration.amqp.inbound.AmqpInboundChannelAdapter.access$1300(AmqpInboundChannelAdapter.java:65)\r\ngdzd-download-xlsx | \tat org.springframework.integration.amqp.inbound.AmqpInboundChannelAdapter$Listener.lambda$onMessage$0(AmqpInboundChannelAdapter.java:294)\r\ngdzd-download-xlsx | \tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:287)\r\ngdzd-download-xlsx | \tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:180)\r\ngdzd-download-xlsx | \tat org.springframework.integration.amqp.inbound.AmqpInboundChannelAdapter$Listener.onMessage(AmqpInboundChannelAdapter.java:290)\r\ngdzd-download-xlsx | \tat org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1591)\r\ngdzd-download-xlsx | \tat org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1510)\r\ngdzd-download-xlsx | \tat org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1498)\r\ngdzd-download-xlsx | \tat org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1489)\r\ngdzd-download-xlsx | \tat org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1433)\r\ngdzd-download-xlsx | \tat org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:975)\r\ngdzd-download-xlsx | \tat org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:921)\r\ngdzd-download-xlsx | \tat org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:83)\r\ngdzd-download-xlsx | \tat org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1296)\r\ngdzd-download-xlsx | \tat org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1202)\r\ngdzd-download-xlsx | \tat java.lang.Thread.run(Thread.java:748)\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2039/comments",
    "author": "lhd951220",
    "comments": [
      {
        "user": "nathan-tsien",
        "created_at": "2022-05-11T12:44:23Z",
        "body": "请问如何解决的"
      }
    ]
  },
  {
    "number": 2037,
    "title": "clone下来代码直接运行writeTest报错",
    "created_at": "2021-08-10T02:00:19Z",
    "closed_at": "2021-09-17T10:43:35Z",
    "labels": [
      "help wanted",
      "pending verification"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2037",
    "body": "com.alibaba.excel.exception.ExcelGenerateException: java.lang.ExceptionInInitializerError\r\n\r\n\tat com.alibaba.excel.write.ExcelBuilderImpl.addContent(ExcelBuilderImpl.java:64)\r\n\tat com.alibaba.excel.ExcelWriter.write(ExcelWriter.java:161)\r\n\tat com.alibaba.excel.ExcelWriter.write(ExcelWriter.java:146)\r\n\tat com.alibaba.excel.write.builder.ExcelWriterSheetBuilder.doWrite(ExcelWriterSheetBuilder.java:61)\r\n\tat com.alibaba.easyexcel.test.demo.write.WriteTest.excludeOrIncludeWrite(WriteTest.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:567)\r\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\r\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\r\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)\r\nCaused by: java.lang.ExceptionInInitializerError\r\n\tat net.sf.cglib.core.KeyFactory$Generator.generateClass(KeyFactory.java:166)\r\n\tat net.sf.cglib.core.DefaultGeneratorStrategy.generate(DefaultGeneratorStrategy.java:25)\r\n\tat net.sf.cglib.core.AbstractClassGenerator.create(AbstractClassGenerator.java:216)\r\n\tat net.sf.cglib.core.KeyFactory$Generator.create(KeyFactory.java:144)\r\n\tat net.sf.cglib.core.KeyFactory.create(KeyFactory.java:116)\r\n\tat net.sf.cglib.core.KeyFactory.create(KeyFactory.java:108)\r\n\tat net.sf.cglib.beans.BeanMap$Generator.<clinit>(BeanMap.java:64)\r\n\tat net.sf.cglib.beans.BeanMap.create(BeanMap.java:56)\r\n\tat com.alibaba.excel.write.executor.ExcelWriteAddExecutor.addJavaObjectToExcel(ExcelWriteAddExecutor.java:119)\r\n\tat com.alibaba.excel.write.executor.ExcelWriteAddExecutor.addOneRowOfDataToExcel(ExcelWriteAddExecutor.java:72)\r\n\tat com.alibaba.excel.write.executor.ExcelWriteAddExecutor.add(ExcelWriteAddExecutor.java:56)\r\n\tat com.alibaba.excel.write.ExcelBuilderImpl.addContent(ExcelBuilderImpl.java:58)\r\n\t... 26 more\r\nCaused by: java.lang.reflect.InaccessibleObjectException: Unable to make protected final java.lang.Class java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain) throws java.lang.ClassFormatError accessible: module java.base does not \"opens java.lang\" to unnamed module @5f4da5c3\r\n\tat java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:357)\r\n\tat java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:297)\r\n\tat java.base/java.lang.reflect.Method.checkCanSetAccessible(Method.java:199)\r\n\tat java.base/java.lang.reflect.Method.setAccessible(Method.java:193)\r\n\tat net.sf.cglib.core.ReflectUtils$2.run(ReflectUtils.java:56)\r\n\tat java.base/java.security.AccessController.doPrivileged(AccessController.java:312)\r\n\tat net.sf.cglib.core.ReflectUtils.<clinit>(ReflectUtils.java:46)\r\n\t... 38 more\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2037/comments",
    "author": "sublynn",
    "comments": [
      {
        "user": "haiousy",
        "created_at": "2021-08-13T06:06:51Z",
        "body": "我也是这个问题，一直不知道怎么解决。"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2021-09-17T10:43:35Z",
        "body": "看下 cglib版本 是否冲突"
      }
    ]
  },
  {
    "number": 2032,
    "title": "校验表头时，如果第一行表头为空行，无法触发invokeHeadMap（）",
    "created_at": "2021-08-06T09:22:30Z",
    "closed_at": "2021-09-14T03:28:49Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2032",
    "body": "校验表头时，如果第一行表头为空行，无法触发invokeHeadMap（）",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2032/comments",
    "author": "luoyi1029",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2021-09-14T03:28:49Z",
        "body": "空的行会自动忽略，建议指定 headrownumber"
      },
      {
        "user": "tianbsama",
        "created_at": "2024-04-23T14:55:18Z",
        "body": "设置headrownumber没用呀"
      }
    ]
  },
  {
    "number": 2028,
    "title": "你好，通过Listener的方法读取，怎么只读第一行就停止读取，直接在监听器中向外抛异常吗？",
    "created_at": "2021-08-03T02:54:23Z",
    "closed_at": "2021-09-14T07:10:16Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2028",
    "body": "你好，通过Listener的方法读取，怎么只读第一行就停止读取，直接在监听器中向外抛异常吗？\r\n @Override\r\n    public void invoke(Map<Integer, String> data, AnalysisContext context) {\r\n    }\r\n\r\n    @Override\r\n    public void doAfterAllAnalysed(AnalysisContext context) {\r\n    }",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2028/comments",
    "author": "leecx",
    "comments": [
      {
        "user": "heliusjing",
        "created_at": "2021-08-09T14:05:22Z",
        "body": "看你监听器的父类，有一个方法控制是否继续读取下一行的，不需要把所有行都读取完毕才停止。抛异常也是一种路子，但不够优雅。"
      },
      {
        "user": "fengyts",
        "created_at": "2021-08-21T14:50:12Z",
        "body": "我的正好相反，我在监听器中获取异常之后直接就不往后执行了，我不想让他停啊，怎么才能让他中间出现异常也不中断往后解析"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2021-09-14T07:10:16Z",
        "body": "抛出`ExcelAnalysisStopException` 即可"
      }
    ]
  },
  {
    "number": 2020,
    "title": "ExcelWriterBuilder 有水印的API吗",
    "created_at": "2021-07-27T17:28:30Z",
    "closed_at": "2023-05-04T05:40:01Z",
    "labels": [
      "help wanted",
      "developing",
      "planning"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2020",
    "body": null,
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2020/comments",
    "author": "uzong",
    "comments": [
      {
        "user": "wsyingang",
        "created_at": "2021-10-10T15:11:22Z",
        "body": "@zhuangjiaju And this issue。I want have a try"
      },
      {
        "user": "tonyqus",
        "created_at": "2021-10-27T08:35:04Z",
        "body": "这项目是不是不维护了，好像没人回"
      },
      {
        "user": "gongxuanzhang",
        "created_at": "2023-05-04T05:40:01Z",
        "body": "没有水印api。\r\nexcel本身也不提供内置水印，是通过徽标等图片功能实现的"
      }
    ]
  },
  {
    "number": 2007,
    "title": "多个excel合并到一个excel的多sheet上。样式丢失",
    "created_at": "2021-07-15T01:57:06Z",
    "closed_at": "2021-09-14T03:40:03Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2007",
    "body": "如下代码。这时候没有数据相关性了，单纯的合并excel，样式有没办法直接弄进去。\r\n象template一样，可以把一堆excel当成template直接指定到新的total文件的sheet上。\r\n```java\r\n    public void generatorTotalFile(List<String> generatorFilePath) {\r\n        if (generatorFilePath != null && generatorFilePath.size() > 0) {\r\n            String totalFilePath = SystemPropertyUtils.getPrintFileStorePath() + File.separator + \"total-\" + SystemPropertyUtils.getCurrentTime() +\".xlsx\";\r\n            File totalFile = new File(totalFilePath);\r\n            int i = 0;\r\n            ExcelWriter excelWriter = null;\r\n            try {\r\n                excelWriter = EasyExcel.write(totalFile).excelType(ExcelTypeEnum.XLSX).build();\r\n\r\n                for (String filePath : generatorFilePath) {\r\n                    WriteSheet writeSheet = EasyExcel.writerSheet(i, \"sheet\" + (i + 1)).build();\r\n                    EasyExcel.read(filePath, new MergeListener(excelWriter, writeSheet)).sheet().doRead();\r\n                    i++;\r\n                }\r\n            } catch (Exception e) {\r\n                log.error(e.getMessage(), e);\r\n            } finally {\r\n                if (excelWriter !=null) {\r\n                    excelWriter.finish();\r\n                }\r\n            }\r\n        }\r\n    }\r\n```",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2007/comments",
    "author": "guoxunbo",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2021-09-14T03:40:03Z",
        "body": "目前不支持。"
      }
    ]
  },
  {
    "number": 2006,
    "title": "在Android中引入报有重复的类",
    "created_at": "2021-07-13T09:47:47Z",
    "closed_at": "2021-09-17T10:44:08Z",
    "labels": [
      "help wanted",
      "pending verification"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/2006",
    "body": "Duplicate class org.apache.xmlbeans.xml.stream.Location found in modules jetified-xmlbeans-2.6.0 (org.apache.xmlbeans:xmlbeans:2.6.0) and jetified-xmlbeans-2.6.0 (org.apache.xmlbeans:xmlbeans:2.6.0)\r\nDuplicate class org.apache.xmlbeans.xml.stream.ReferenceResolver found in modules jetified-xmlbeans-2.6.0 (org.apache.xmlbeans:xmlbeans:2.6.0) and jetified-xmlbeans-2.6.0 (org.apache.xmlbeans:xmlbeans:2.6.0)\r\nDuplicate class org.apache.xmlbeans.xml.stream.XMLEvent found in modules jetified-xmlbeans-2.6.0 (org.apache.xmlbeans:xmlbeans:2.6.0) and jetified-xmlbeans-2.6.0 (org.apache.xmlbeans:xmlbeans:2.6.0)\r\nDuplicate class org.apache.xmlbeans.xml.stream.XMLInputStream found in modules jetified-xmlbeans-2.6.0 (org.apache.xmlbeans:xmlbeans:2.6.0) and jetified-xmlbeans-2.6.0 (org.apache.xmlbeans:xmlbeans:2.6.0)\r\nDuplicate class org.apache.xmlbeans.xml.stream.XMLName found in modules jetified-xmlbeans-2.6.0 (org.apache.xmlbeans:xmlbeans:2.6.0) and jetified-xmlbeans-2.6.0 (org.apache.xmlbeans:xmlbeans:2.6.0)\r\nDuplicate class org.apache.xmlbeans.xml.stream.XMLStreamException found in modules jetified-xmlbeans-2.6.0 (org.apache.xmlbeans:xmlbeans:2.6.0) and jetified-xmlbeans-2.6.0 (org.apache.xmlbeans:xmlbeans:2.6.0)\r\nDuplicate class org.apache.xmlbeans.xml.stream.utils.NestedThrowable found in modules jetified-xmlbeans-2.6.0 (org.apache.xmlbeans:xmlbeans:2.6.0) and jetified-xmlbeans-2.6.0 (org.apache.xmlbeans:xmlbeans:2.6.0)\r\nDuplicate class org.apache.xmlbeans.xml.stream.utils.NestedThrowable$Util found in modules jetified-xmlbeans-2.6.0 (org.apache.xmlbeans:xmlbeans:2.6.0) and jetified-xmlbeans-2.6.0 (org.apache.xmlbeans:xmlbeans:2.6.0)",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/2006/comments",
    "author": "api888",
    "comments": [
      {
        "user": "yuzhiqiang1993",
        "created_at": "2021-08-12T07:21:45Z",
        "body": "有冲突的module，我是把冲突的module排除了可以正常运行：\r\n`    implementation('com.alibaba:easyexcel:2.2.10')\r\n            {\r\n                exclude group: 'org.apache.xmlbeans'\r\n            }\r\n`"
      },
      {
        "user": "gotoorder",
        "created_at": "2021-09-29T07:04:30Z",
        "body": "@yuzhiqiang1993 用你的方法依然报错\r\ncom.alibaba.excel.exception.ExcelAnalysisException: java.lang.NoClassDefFoundError: Failed resolution of: Ljavax/xml/stream/XMLEventFactory;\r\n        at com.alibaba.excel.analysis.ExcelAnalyserImpl.<init>(ExcelAnalyserImpl.java:57)\r\n        at com.alibaba.excel.ExcelReader.<init>(ExcelReader.java:145)\r\n        at com.alibaba.excel.read.builder.ExcelReaderBuilder.build(ExcelReaderBuilder.java:193)\r\n        at com.alibaba.excel.read.builder.ExcelReaderBuilder.sheet(ExcelReaderBuilder.java:229)\r\n        at com.alibaba.excel.read.builder.ExcelReaderBuilder.sheet(ExcelReaderBuilder.java:217)"
      }
    ]
  },
  {
    "number": 1980,
    "title": "如何校验导入的excel是否进行过修改",
    "created_at": "2021-06-21T02:16:24Z",
    "closed_at": "2021-09-14T12:20:41Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1980",
    "body": "导出excel后不做任何修改直接导入，如何验证是否为同一个文件，文件是否进行过修改",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1980/comments",
    "author": "zhangPeng152",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2021-09-14T12:20:41Z",
        "body": "这个需要自己一个字段 一个字段校验过去了"
      }
    ]
  },
  {
    "number": 1978,
    "title": "Empty row",
    "created_at": "2021-06-14T19:33:10Z",
    "closed_at": "2021-09-14T12:24:20Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1978",
    "body": "# excel源文件末尾出现多个空行时，\b在读取执行invoke的过程中无法通过!hasNext(analysisContext)来判断是否已经读取完毕，是否支持或者可否支持 ? 支持的话就能进行分批处理，而不用等到读取解析完毕后最终执行，节省额外的内存，\r\n```  \r\npublic class FaqExcelDtoListener extends AnalysisEventListener<FaqExcelDto> {\r\n...\r\npublic void invoke(FaqExcelDto faqExcelDto, AnalysisContext analysisContext) {\r\n        ReadSheetHolder readSheetHolder = analysisContext.readSheetHolder();\r\n        faqExcelDto.setSheetName(readSheetHolder.getSheetName());\r\n        faqExcelDto.setSheetNo(readSheetHolder.getSheetNo());\r\n        ReadRowHolder readRowHolder = analysisContext.readRowHolder();\r\n        faqExcelDto.setRowNum(readRowHolder.getRowIndex());\r\n        uploadList.add(faqExcelDto);\r\n        if (uploadList.size() >= batchSize || !hasNext(analysisContext)) {\r\n            try{\r\n                uploadProcess(uploadList);\r\n            }catch (Exception e){\r\n                LOGGER.error(\"UPLOAD_PROCESS, failt to upload, will continue!\", e);\r\n                failList.addAll(uploadList);\r\n            }finally {\r\n                uploadList.clear();\r\n            }\r\n        }\r\n    }\r\n\r\n@Override\r\n    public void doAfterAllAnalysed(AnalysisContext analysisContext) {\r\n        LOGGER.info(\"FAQEXCELDTO_LISTENER, execute doAfterAllAnalysed, uploadList size:{}, failList size:{}\", uploadList.size(), failList.size());\r\n        //TODO need to handle failList ( -> kafka -> handle...)\r\n    }\r\n}\r\n```\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1978/comments",
    "author": "rhygyj",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2021-09-14T12:24:20Z",
        "body": "这个不支持 ，不读到最后不知道后面有没有空行。"
      },
      {
        "user": "rhygyj",
        "created_at": "2021-10-21T06:40:14Z",
        "body": "> 这个不支持 ，不读到最后不知道后面有没有空行。\r\n\r\nthanks"
      }
    ]
  },
  {
    "number": 1962,
    "title": "填充数据后公式显示异常",
    "created_at": "2021-06-01T06:59:24Z",
    "closed_at": "2021-09-14T12:29:52Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1962",
    "body": "**代码**\r\n   ExcelWriter excelWriter = EasyExcel.write(CreateExcelPath).withTemplate(TemplExcelPath).build();\r\n          Workbook workbook = excelWriter.writeContext().writeWorkbookHolder().getWorkbook();\r\n            //设置强制计算公式：不然公式会以字符串的形式显示在excel中\r\n          workbook.setForceFormulaRecalculation(true);\r\n          WriteSheet writeSheet = EasyExcel.writerSheet().build();\r\n          excelWriter.fill(stringObjectMap, writeSheet).finish();\r\n**问题**\r\n数据填充后，最下面的公式计算也对改变了，但是在预览的时候计算的值还是未填充之前的，这个时候打开文件按下ctrl+S再预览就是最新的数据了请问这是为什么呢？\r\n\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1962/comments",
    "author": "1255598067",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2021-09-14T12:29:52Z",
        "body": "这个设置的意思是 在打开之后重新计算数据。"
      },
      {
        "user": "zhangjing007",
        "created_at": "2022-01-14T07:31:17Z",
        "body": "请问这个问题你解决了吗？"
      },
      {
        "user": "dochaocn",
        "created_at": "2022-09-08T02:06:33Z",
        "body": "也遇到了一样的问题，重新打开后需要重新保存，请问解决了吗，感谢"
      },
      {
        "user": "zhangjing007",
        "created_at": "2022-11-10T06:22:43Z",
        "body": "> 也遇到了一样的问题，重新打开后需要重新保存，请问解决了吗，感谢\r\n\r\n没有解决哦。我最后是通过在windows环境下写了一个接口，然后java调取接口保存一下。😂😂😂"
      }
    ]
  },
  {
    "number": 1953,
    "title": "关闭流的时候报内存溢出",
    "created_at": "2021-05-24T08:48:33Z",
    "closed_at": "2021-09-14T07:22:43Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1953",
    "body": "2021-05-21 19:20:58.573  ERROR 10.8.110.1 [bfd-care,8de97729cbe76858] [bfd-admin-flow-0a08653b-450443-73] 24768 --- [pool-5-thread-1] com.dbenefit.care.biz.service.care.impl.CareUserWelfareServiceImpl : 导出详情失败\r\ncom.alibaba.excel.exception.ExcelGenerateException: Can not close IO.\r\n\tat com.alibaba.excel.context.WriteContextImpl.finish(WriteContextImpl.java:358)\r\n\tat com.alibaba.excel.write.ExcelBuilderImpl.finish(ExcelBuilderImpl.java:101)\r\n\tat com.alibaba.excel.ExcelWriter.finish(ExcelWriter.java:328)\r\n\tat com.dbenefit.care.biz.util.ExcelUtil.closeExcelWriter(ExcelUtil.java:197)\r\n\tat com.dbenefit.care.biz.service.care.impl.CareUserWelfareServiceImpl.getCareSendDetailStream(CareUserWelfareServiceImpl.java:280)\r\n\tat com.dbenefit.care.biz.service.care.impl.CareUserWelfareServiceImpl.createCareSendDetailExcel(CareUserWelfareServiceImpl.java:202)\r\n\tat com.dbenefit.care.biz.service.care.impl.CareUserWelfareServiceImpl$$FastClassBySpringCGLIB$$d0acbf99.invoke(<generated>)\r\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)\r\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\r\n\tat org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294)\r\n\tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)\r\n\tat org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)\r\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)\r\n\tat com.dbenefit.care.biz.service.care.impl.CareUserWelfareServiceImpl$$EnhancerBySpringCGLIB$$a65b3c90.createCareSendDetailExcel(<generated>)\r\n\tat com.dbenefit.care.web.cloud.CareCloud.lambda$exportWelfareDetail$0(CareCloud.java:183)\r\n\tat com.dbenefit.application.util.BFDThreadPoolExecutor.lambda$wrapExecute$1(BFDThreadPoolExecutor.java:84)\r\n\tat com.alibaba.ttl.TtlRunnable.run(TtlRunnable.java:59)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.lang.OutOfMemoryError: Java heap space\r\n\tat java.util.Arrays.copyOf(Arrays.java:3236)\r\n\tat java.io.ByteArrayOutputStream.grow(ByteArrayOutputStream.java:118)\r\n\tat java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:93)\r\n\tat java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:153)\r\n\tat java.util.zip.DeflaterOutputStream.deflate(DeflaterOutputStream.java:253)\r\n\tat java.util.zip.ZipOutputStream.closeEntry(ZipOutputStream.java:255)\r\n\tat org.apache.poi.openxml4j.opc.internal.marshallers.ZipPartMarshaller.marshall(ZipPartMarshaller.java:92)\r\n\tat org.apache.poi.openxml4j.opc.internal.MemoryPackagePart.save(MemoryPackagePart.java:112)\r\n\tat org.apache.poi.openxml4j.opc.internal.marshallers.DefaultMarshaller.marshall(DefaultMarshaller.java:43)\r\n\tat org.apache.poi.openxml4j.opc.ZipPackage.saveImpl(ZipPackage.java:585)\r\n\tat org.apache.poi.openxml4j.opc.OPCPackage.save(OPCPackage.java:1539)\r\n\tat org.apache.poi.openxml4j.opc.OPCPackage.close(OPCPackage.java:482)\r\n\tat org.apache.poi.POIXMLDocument.close(POIXMLDocument.java:189)\r\n\tat org.apache.poi.xssf.streaming.SXSSFWorkbook.close(SXSSFWorkbook.java:909)\r\n\tat com.alibaba.excel.context.WriteContextImpl.finish(WriteContextImpl.java:316)\r\n\tat com.alibaba.excel.write.ExcelBuilderImpl.finish(ExcelBuilderImpl.java:101)\r\n\tat com.alibaba.excel.ExcelWriter.finish(ExcelWriter.java:328)\r\n\tat com.dbenefit.care.biz.util.ExcelUtil.closeExcelWriter(ExcelUtil.java:197)\r\n\tat com.dbenefit.care.biz.service.care.impl.CareUserWelfareServiceImpl.getCareSendDetailStream(CareUserWelfareServiceImpl.java:280)\r\n\tat com.dbenefit.care.biz.service.care.impl.CareUserWelfareServiceImpl.createCareSendDetailExcel(CareUserWelfareServiceImpl.java:202)\r\n\tat com.dbenefit.care.biz.service.care.impl.CareUserWelfareServiceImpl$$FastClassBySpringCGLIB$$d0acbf99.invoke(<generated>)\r\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)\r\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\r\n\tat org.springframework.transaction.interceptor.TransactionInterceptor$$Lambda$547/1230026826.proceedWithInvocation(Unknown Source)\r\n\tat org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294)\r\n\tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)\r\n\tat org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)\r\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)\r\n\tat com.dbenefit.care.biz.service.care.impl.CareUserWelfareServiceImpl$$EnhancerBySpringCGLIB$$a65b3c90.createCareSendDetailExcel(<generated>)\r\n\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1953/comments",
    "author": "xuxiaoqun",
    "comments": [
      {
        "user": "xuxiaoqun",
        "created_at": "2021-05-24T10:25:59Z",
        "body": "版本2.1.6"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2021-09-14T07:22:43Z",
        "body": "建议升级版本 & 适当的调大内存"
      }
    ]
  },
  {
    "number": 1945,
    "title": "关于excel导入导出乱码问题",
    "created_at": "2021-05-22T07:16:12Z",
    "closed_at": "2021-09-14T07:24:08Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1945",
    "body": "使用了关于excel的导入导出，现在面临一个问题：我们的用户比较杂，他们电脑操作系统有的是win10、MacBook。然后他们的电脑的编码格式还不同，外加上有的使用微软的office、也有使用WPS。就导致了我们这边的导入导出乱码问题，主要是导入乱码的问题。\r\n我看了源代码，未找到在解析表格的时候关于表格的格式的处理。\r\n希望得到的帮助：\r\n1.可能是我没有找到，如果有希望告知工具中获取表格文件编码格式的方法在哪里？\r\n2.然后第一步完成之后，第二步需要按照编码读取。但是很可惜 我也没找到这个方法，请告诉我在哪里？\r\n希望得到你们的帮助 谢谢~",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1945/comments",
    "author": "yuyu414",
    "comments": [
      {
        "user": "CeresY",
        "created_at": "2021-05-26T06:40:23Z",
        "body": "我也是导出多sheet页使用wps打开一直提示需要修复乱码，但是wps从来没有成功修复过。"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2021-09-14T07:24:08Z",
        "body": "不用设置编码格式 你用最简单的读写 试试 都可以的。"
      }
    ]
  },
  {
    "number": 1942,
    "title": "javabean中的字段定义为枚举，导出时能实现自动转换吗",
    "created_at": "2021-05-21T15:22:34Z",
    "closed_at": "2021-09-14T07:25:02Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1942",
    "body": "public enum NoticeTypeEnum {\r\n    //通知类型1：月结收费 2：欠费催缴 3：欠费断能\r\n    MONTH_SETTLE(1, \"月结收费\"),\r\n    ARREARS_REMINDER(2, \"欠费催缴\"),\r\n    ARREARS_OFF(3, \"欠费断能\");\r\n    @EnumValue\r\n    private int code;\r\n\r\n    @JsonValue\r\n    private String desc;\r\n\r\n    NoticeTypeEnum(int code, String desc) {\r\n        this.code = code;\r\n        this.desc = desc;\r\n    }\r\n\r\n    public int getCode() {\r\n        return code;\r\n    }\r\n\r\n    public void setCode(int code) {\r\n        this.code = code;\r\n    }\r\n}\r\n\r\n\r\n  @ColumnWidth(35)\r\n    @ExcelProperty(value = \"通知单类型\",index = 2)\r\n    @ApiModelProperty(value = \"通知单类型\", name = \"noticeType\")\r\n    private NoticeTypeEnum noticeType;\r\n\r\n实现导出时导出的是枚举的desc\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1942/comments",
    "author": "lisuo",
    "comments": [
      {
        "user": "RyanRua",
        "created_at": "2021-05-22T03:04:59Z",
        "body": "This can be done by manually implement a converter for enum type."
      },
      {
        "user": "pineappleinairdrop",
        "created_at": "2021-06-02T08:58:54Z",
        "body": "//新建一个getter \r\n@ColumnWidth(35)\r\n@ExcelProperty(value = \"通知单类型\",index = 2)\r\npublic String getNoticeTypeDesc(){\r\nreturn this.noticeType.getDesc():\r\n};"
      },
      {
        "user": "caiqichang",
        "created_at": "2021-09-01T03:15:56Z",
        "body": "@pineappleinairdrop  \r\n'@ExcelProperty' not applicable to method"
      },
      {
        "user": "pineappleinairdrop",
        "created_at": "2021-09-01T03:34:04Z",
        "body": "> @pineappleinairdrop\r\n> '@ExcelProperty' not applicable to method\r\n\r\n我的错 我是凭感觉说的 \r\n或许改成这样：\r\n@ColumnWidth(35)\r\n@ExcelProperty(value = \"通知单类型\",index = 2)\r\nprivate String noticeTypeDesc;\r\npublic String getNoticeTypeDesc(){\r\nreturn this.noticeType.getDesc():\r\n}"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2021-09-14T07:25:02Z",
        "body": "使用自定义转换器"
      }
    ]
  },
  {
    "number": 1933,
    "title": "excel填充数据能使用转换器吗？还有根据模板写入的时候不能带上样式很鸡肋",
    "created_at": "2021-05-16T14:58:23Z",
    "closed_at": "2021-09-14T07:27:49Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1933",
    "body": "其实我的需求就是写excel，需要较多样式，不想写各种注解，直接用excel模板弄好样式来写入。\r\n结果excel填充貌似用不了转换器，根据excel模板写内容又带不上模板自身的样式\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1933/comments",
    "author": "liweiye-2021",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2021-09-14T07:27:49Z",
        "body": "使用填充可以带上样式"
      }
    ]
  },
  {
    "number": 1928,
    "title": "CellData中rowIndex，columnIndex为何不设置，保持为空，处于什么设计想法？",
    "created_at": "2021-05-11T10:20:57Z",
    "closed_at": "2021-09-17T14:39:38Z",
    "labels": [
      "help wanted",
      "pending verification",
      "development completed"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1928",
    "body": "在自定义Converter中想拿到rowIndex或columnIndex，结果拿不到",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1928/comments",
    "author": "yuechao4039",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2021-09-17T14:39:38Z",
        "body": "已经在`3.0.0-beta1` 版本修复，beta版本会在一个月内升级成正式版。"
      }
    ]
  },
  {
    "number": 1906,
    "title": "读取多少条写入数据库比较合适那？",
    "created_at": "2021-04-29T03:42:17Z",
    "closed_at": "2021-09-14T09:21:14Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1906",
    "body": "",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1906/comments",
    "author": "dadadaxiaoxiaoxiao",
    "comments": [
      {
        "user": "xu040633",
        "created_at": "2021-04-30T01:27:29Z",
        "body": "看数据库能接受的最大参数量是多少"
      },
      {
        "user": "waydnow",
        "created_at": "2021-05-04T10:21:00Z",
        "body": "一般一次500，但具体要看数据库配置，可以尝试下不同级别的插入量对应的响应时间，也并不是越多越好。"
      }
    ]
  },
  {
    "number": 1894,
    "title": "在我读取文件的时候，我会将读取到的数据进行插入数据库，并且修改文件结果列，即边读边写文件，该怎么做呢",
    "created_at": "2021-04-24T10:05:18Z",
    "closed_at": "2021-09-14T09:31:53Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1894",
    "body": "**将data数据写入到数据库，并且更改源文件的结果列，这个该怎么处理呢**\r\n**异常代码**\r\n```java\r\n   EasyExcel.read(in, clazz, new AnalysisEventListener<T>() {\r\n            @Override\r\n            public void invoke(T data, AnalysisContext context) {\r\n               //将data数据写入到数据库，并且更改源文件的结果列，这个该怎么处理呢\r\n            }\r\n            @Override\r\n            public void doAfterAllAnalysed(AnalysisContext context) {\r\n                log.info(\"excel数据解析完成\");\r\n            }\r\n        })).sheet().doRead();\r\n```\r\n**异常提示**\r\n请提供完整的异常提示,记住是全部异常！\r\n**建议描述**\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1894/comments",
    "author": "MonkAscetic",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2021-09-14T09:31:53Z",
        "body": "创建一个write 然后写入"
      },
      {
        "user": "dcyustb",
        "created_at": "2024-04-26T01:20:14Z",
        "body": "有示例吗，没明白"
      }
    ]
  },
  {
    "number": 1893,
    "title": "问一下导入excel的时候，怎么 处理空白栏 而不是跳过",
    "created_at": "2021-04-23T08:42:37Z",
    "closed_at": "2021-09-14T09:32:29Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1893",
    "body": "比如导入3行数据，\r\n第1、3行是有数据的，第2行是空数据，但最后通过监听创建的集合内只有2个对象，\r\n想让第2行数据也变成一个对象，对象的各个值是null或者空字符串，请问怎么做呢",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1893/comments",
    "author": "lambdafish",
    "comments": [
      {
        "user": "lethal233",
        "created_at": "2021-05-20T06:47:54Z",
        "body": "在 `src/main/java/com/alibaba/excel/read/metadata/holder/ReadWorkbookHolder.java` 里面有这么一个属性，是可以设置false不跳过空行的，可以看看api文档如何设置，默认是true，代表跳过空行。\r\n```java\r\n    /**\r\n     * Ignore empty rows.Default is true.\r\n     */\r\n    private Boolean ignoreEmptyRow;\r\n```\r\n\r\n在 `src/main/java/com/alibaba/excel/read/processor/DefaultAnalysisEventProcessor.java` 的 `38-47`行的`endrow()`函数里面调用了\r\n```java\r\n            if (analysisContext.readWorkbookHolder().getIgnoreEmptyRow()) {\r\n                return;\r\n            }\r\n```\r\n默认是true，所以直接return出去了，你设置成false就好了。"
      }
    ]
  },
  {
    "number": 1892,
    "title": "怎么从已经存在的Excel-Sheet 之间整体copy 到新的Excel 中，只能先解析在一点点拼装吗？",
    "created_at": "2021-04-22T11:37:22Z",
    "closed_at": "2021-09-14T09:35:11Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1892",
    "body": "因为有些表格结构比较复杂，解析后再拼接会比较麻烦，所以想知道有没有直接copy Sheet 的方法呢？",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1892/comments",
    "author": "zhangqingzhou1024",
    "comments": [
      {
        "user": "skrlst",
        "created_at": "2021-08-01T02:46:53Z",
        "body": "楼主解决了吗？\r\n我这边也有类似问题，想要从 excel 模板中 copy 特定的 sheet，然后用这个 copy 的 sheet 动态生成多个 sheet。"
      },
      {
        "user": "zhangqingzhou1024",
        "created_at": "2021-08-19T08:06:27Z",
        "body": "> 楼主解决了吗？\r\n> 我这边也有类似问题，想要从 excel 模板中 copy 特定的 sheet，然后用这个 copy 的 sheet 动态生成多个 sheet。\r\n\r\n没有，我用的笨方法，读取->解析->写入，然后自己重新设置的样式"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2021-09-14T09:35:11Z",
        "body": "这个目前不支持额"
      }
    ]
  },
  {
    "number": 1868,
    "title": "如何指定使用xls格式文件",
    "created_at": "2021-04-14T01:30:44Z",
    "closed_at": "2021-09-14T09:54:53Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1868",
    "body": "**异常代码**\r\n // 上传源文件\r\n        importSourceFileUrl = uploadSourceFile(user, file);\r\n        InputStream inputStream;\r\n        try {\r\n            inputStream = file.getInputStream();\r\n        } catch (IOException e) {\r\n            throw new BizException(ResultCodeEnum.FILE_INPUTSTREAM_ERR, e);\r\n        }\r\n        EnterpriseCreditListener creditListener = new EnterpriseCreditListener(importSourceFileUrl, iImportRecordService, importExcelRsVO, user, this, param);\r\n        creditListener.errorMsg.clear();\r\n        try {\r\n            EasyExcelUtil.asyncRead(inputStream, EnterpriseCreditImportVO.class, creditListener, 0, 1);\r\n        } catch (Exception e) {\r\n            throw new BizException(ResultCodeEnum.IMPORT_DATA_ERROR, e);\r\n        }\r\n**异常提示**\r\nCaused by: com.alibaba.excel.exception.ExcelCommonException: Convert excel format exception.You can try specifying the 'excelType' yourself\r\n\tat com.alibaba.excel.support.ExcelTypeEnum.recognitionExcelType(ExcelTypeEnum.java:97)\r\n\tat com.alibaba.excel.support.ExcelTypeEnum.valueOf(ExcelTypeEnum.java:78)\r\n\tat com.alibaba.excel.analysis.ExcelAnalyserImpl.choiceExcelExecutor(ExcelAnalyserImpl.java:62)\r\n\tat com.alibaba.excel.analysis.ExcelAnalyserImpl.<init>(ExcelAnalyserImpl.java:51)\r\n\tat com.alibaba.excel.ExcelReader.<init>(ExcelReader.java:145)\r\n\tat com.alibaba.excel.read.builder.ExcelReaderBuilder.build(ExcelReaderBuilder.java:193)\r\n\tat com.alibaba.excel.read.builder.ExcelReaderBuilder.sheet(ExcelReaderBuilder.java:229)\r\n\tat com.alibaba.excel.read.builder.ExcelReaderBuilder.sheet(ExcelReaderBuilder.java:221)\r\n\tat com.gongbaojin.common.file.EasyExcelUtil.asyncRead(EasyExcelUtil.java:198)\r\n\tat com.gongbaojin.cms.service.impl.EnterpriseCreditServiceImpl.upload(EnterpriseCreditServiceImpl.java:60)\r\n\t... 88 common frames omitted\r\n**建议描述**\r\n怎么指定使用xls格式",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1868/comments",
    "author": "fangzhaoxuan",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2021-09-14T09:54:53Z",
        "body": "`EasyExcel.write(fileName, DemoData.class).excelType(ExcelTypeEnum.XLS)` 指定"
      }
    ]
  },
  {
    "number": 1858,
    "title": "分批写入数据",
    "created_at": "2021-04-09T02:08:25Z",
    "closed_at": "2021-04-09T06:53:18Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1858",
    "body": "在写入时假如我这个list很大,会不会造成内存溢出呢,我如果想实现分次往里面写(比如一次写进去1000条)可以实现嘛?\r\nEasyExcel.write(response.getOutputStream(), ExpressSignExcelDTO.class)\r\n                    .sheet(fileName)\r\n                    .doWrite(itemList);\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1858/comments",
    "author": "1325912092",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2021-04-09T06:53:18Z",
        "body": "参照demo"
      }
    ]
  },
  {
    "number": 1836,
    "title": "能否通过一个数组来接收指定范围内的数据呢",
    "created_at": "2021-03-24T13:37:38Z",
    "closed_at": "2021-04-01T03:40:43Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1836",
    "body": "Excel 是如下这样的 \r\n\r\n```\r\n\r\n行标签 | 2020年6月 | 2020年7月 | 2020年8月 | 2020年9月 | 2020年10月 | 2020年11月 | 2020年12月 | 2021年1月 | 2021年2月\r\n\r\n总计 | 78573.3 | 33501.0 | 35296.2 | 97990.1 | 47564.9 | 103219.9 | 92849.5 | 236332.1 | 149463.4\r\n茅台 | 24919.4 | 9708.5 | 11738.9 | 20568.4 | 13091.1 | 25486.2 | 20705.0 | 38285.7 | 25035.6\r\n\r\n\r\n```\r\n\r\n不想每列对应一个字段 如下所示\r\n```\r\n    @ExcelProperty(index = 1)\r\n    private Double value1;\r\n    @ExcelProperty(index = 2)\r\n    private Double value2;\r\n    @ExcelProperty(index = 3)\r\n    private Double value3;\r\n    @ExcelProperty(index = 4)\r\n    private Double value4;\r\n    @ExcelProperty(index = 5)\r\n    private Double value5;\r\n    @ExcelProperty(index = 6)\r\n    private Double value6;\r\n    @ExcelProperty(index = 7)\r\n    private Double value7;\r\n    @ExcelProperty(index = 8)\r\n    private Double value8;\r\n    @ExcelProperty(index = 9)\r\n    private Double value9;\r\n```\r\n想能否直接定义一个数组来接收这些数值呢 如 \r\n```\r\n    @ExcelProperty(range = [1-9])\r\n    private Double[] values;\r\n\r\n```\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1836/comments",
    "author": "zhugw",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2021-04-01T03:40:43Z",
        "body": "目前不支持。建议用不创建对象的写。"
      }
    ]
  },
  {
    "number": 1829,
    "title": "导出时设置setLocked为true还是能编辑单元格",
    "created_at": "2021-03-18T11:48:00Z",
    "closed_at": "2021-04-08T13:55:06Z",
    "labels": [
      "help wanted",
      "pending verification"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1829",
    "body": "\r\n**代码**\r\n```java\r\npublic class MyAbstractCellStyleStrategy  extends AbstractCellStyleStrategy{\r\n\r\n    private Workbook workbook;\r\n    private CellStyle cellStyleWhiteLeft;\r\n    private CellStyle cellStyleGreyCenter;\r\n   \r\n    @Override\r\n    protected void initCellStyle(Workbook workbook) {\r\n        this.workbook = workbook;\r\n        intCellStyleWhiteLeft();\r\n        intCellStyleGreyCenter();\r\n    }\r\n\r\n    private void intCellStyleGreyCenter() {\r\n       if (cellStyleGreyCenter == null) {\r\n            cellStyleGreyCenter = workbook.createCellStyle();\r\n        }\r\n        cellStyleGreyCenter.setLocked(true); // 这样设置无效\r\n     }\r\n\r\n    @Override\r\n    protected void setHeadCellStyle(Cell cell, Head head, Integer relativeRowIndex) {\r\n        //log.info(\"第{}行，第{}列，标题名：{}。\", relativeRowIndex, cell.getColumnIndex(), cell.getStringCellValue());\r\n        if (relativeRowIndex == 1 && (cell.getColumnIndex() == 1 || cell.getColumnIndex() == 3 || cell.getColumnIndex() == 5)) {\r\n            cell.setCellStyle(cellStyleWhiteLeft);\r\n        } else {\r\n            cell.setCellStyle(cellStyleGreyCenter);\r\n        }\r\n    }\r\n\r\n     private void intCellStyleWhiteLeft() {\r\n        if (cellStyleWhiteLeft == null) {\r\n            cellStyleWhiteLeft = workbook.createCellStyle();\r\n        }\r\n        // 设置为文本\r\n        DataFormat dataFormat = workbook.createDataFormat();\r\n        cellStyleWhiteLeft.setDataFormat(dataFormat.getFormat(\"@\"));\r\n    }\r\n\r\n}\r\n```\r\n**问题描述**\r\ncellStyleGreyCenter.setLocked(true);   这样设置无效，我想让指定导出的excel部分单元格为只读的。\r\n\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1829/comments",
    "author": "jingminghao",
    "comments": [
      {
        "user": "jingminghao",
        "created_at": "2021-03-19T02:50:53Z",
        "body": "i need help"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2021-04-08T13:55:05Z",
        "body": "新增sheet拦截器\r\n```java\r\n SXSSFSheet sheet = (SXSSFSheet)writeSheetHolder.getSheet();\r\n        sheet.enableLocking();\r\n```"
      }
    ]
  },
  {
    "number": 1828,
    "title": "ReadMe.md页找不到这个工具的dependency，有点神奇",
    "created_at": "2021-03-18T08:13:20Z",
    "closed_at": "2021-04-01T03:01:45Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1828",
    "body": "。",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1828/comments",
    "author": "VIPJoey",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2021-04-01T03:01:45Z",
        "body": "首页最上面有"
      }
    ]
  },
  {
    "number": 1825,
    "title": "多个 excel 文件合并至一个 excel 文件的多个 sheet 页，写入的汇总的 excel 文件有时候打不开（文件损坏），日志没有报错",
    "created_at": "2021-03-15T09:15:44Z",
    "closed_at": "2021-04-08T13:57:07Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1825",
    "body": "**异常代码**\r\n```java\r\n// 具体业务代码\r\nList<List<String>> headerList = ExcelUtil.header(detailHeadList);\r\nExcelWriter excelWriter = null;\r\ntry {\r\n    excelWriter = EasyExcel.write(allProvinceDetailFilePath).excelType(ExcelTypeEnum.XLSX).head(headerList).build();\r\n    for (int i = 0; i < fileNameList.size(); i++) {\r\n        LOGGER.info(\"filePath:{}\", fileNameList.get(i));\r\n        WriteSheet writeSheet = EasyExcel.writerSheet(i, \"sheet\" + (i + 1)).build();\r\n        EasyExcel.read(fileNameList.get(i), new MergeExcelListener(excelWriter, writeSheet)).sheet().doRead();\r\n    }\r\n} finally {\r\n    // 千万别忘记finish 会帮忙关闭流\r\n    if (excelWriter != null) {\r\n        excelWriter.finish();\r\n    }\r\n}\r\n```\r\n```java\r\npackage com.bonc.listener;\r\n\r\nimport com.alibaba.excel.ExcelWriter;\r\nimport com.alibaba.excel.context.AnalysisContext;\r\nimport com.alibaba.excel.event.AnalysisEventListener;\r\nimport com.alibaba.excel.write.metadata.WriteSheet;\r\nimport io.swagger.models.auth.In;\r\nimport org.slf4j.Logger;\r\nimport org.slf4j.LoggerFactory;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.Map;\r\n\r\n/**\r\n* 读取 excel 文件监听类\r\n*/\r\npublic class MergeExcelListener extends AnalysisEventListener<Map<Integer,String>> {\r\n\r\n    private static final Logger LOGGER = LoggerFactory.getLogger(MergeExcelListener.class);\r\n\r\n    /**\r\n     * 每隔3000条进行后续处理，然后清理list ，方便内存回收\r\n     */\r\n    private static final int BATCH_COUNT = 3000;\r\n\r\n    private ExcelWriter excelWriter;\r\n    private WriteSheet writeSheet;\r\n\r\n    public MergeExcelListener(ExcelWriter excelWriter, WriteSheet writeSheet) {\r\n        this.excelWriter = excelWriter;\r\n        this.writeSheet = writeSheet;\r\n    }\r\n\r\n    private List<List<String>> list = new ArrayList<>();\r\n\r\n    @Override\r\n    public void invoke(Map<Integer,String> data, AnalysisContext context) {\r\n        list.add(Tranfor(data));\r\n        // 防止 list 存储数据量过大，导致内存溢出\r\n        if(list.size() >= BATCH_COUNT){\r\n            writeExcel();\r\n            list.clear();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void doAfterAllAnalysed(AnalysisContext context) {\r\n        writeExcel();\r\n        list.clear();\r\n        LOGGER.info(\"所有数据解析完成！\");\r\n    }\r\n\r\n    /**\r\n     * 加上存储数据库\r\n     */\r\n    private void writeExcel() {\r\n        excelWriter.write(list, writeSheet);\r\n        LOGGER.info(\"所有数据写入完成！\");\r\n    }\r\n\r\n    /**\r\n     * 数据封装\r\n     * @param data\r\n     * @return\r\n     */\r\n    public static List<String> Tranfor(Map<Integer,String> data){\r\n        List<String> result = new ArrayList<>();\r\n        for (String value : data.values()) {\r\n            result.add(value);\r\n        }\r\n        return result;\r\n    }\r\n}\r\n```\r\n**异常提示**\r\n控制台无异常\r\n\r\n**建议描述**\r\n31省分的数据合并至一个 excel，excel 大小将近 250M，较大，是不是和内存占用有关呢？（发现合并文件时内存疯狂上涨）\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1825/comments",
    "author": "deng-ming-hao",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2021-04-08T13:57:07Z",
        "body": "代码没问题。这个 需要检查是否数据有异常了。单元格数据量超过4G 很多软件都打不开。建议拆分。"
      },
      {
        "user": "guoxunbo",
        "created_at": "2021-07-15T01:53:26Z",
        "body": "我想问下，如果想把样式一起弄进来的话有没合适的方法、"
      }
    ]
  },
  {
    "number": 1806,
    "title": "请问通过模板生成Excel支持从指定行开始写数据吗？现在好像是从Sheet的最后一行开始往下写",
    "created_at": "2021-02-24T04:24:55Z",
    "closed_at": "2021-04-09T07:20:06Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1806",
    "body": "",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1806/comments",
    "author": "whoamien",
    "comments": [
      {
        "user": "whoamien",
        "created_at": "2021-02-26T12:22:44Z",
        "body": "没有办法，只有下载源码自己稍微改了改，加一个从指定行开始写的功能，也不管会不会引起其他问题了。"
      },
      {
        "user": "SmireG",
        "created_at": "2021-03-11T15:12:14Z",
        "body": "Is there anyone had done something in this issue?\r\nI am willing to solve it in a few months.\r\n请问有人正在处理这个问题吗，我对这个issue感兴趣，我将在最近的几个月内尝试处理这个bug。\r\n"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2021-04-09T07:20:06Z",
        "body": "用 `relativeHeadRowIndex`或者 填充"
      }
    ]
  },
  {
    "number": 1783,
    "title": "实体加上@Builder注解会读取数据的时候，转换失败：com.alibaba.excel.exception.ExcelDataConvertException: Can not instance class",
    "created_at": "2021-01-28T03:24:28Z",
    "closed_at": "2021-04-09T13:39:30Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1783",
    "body": "就是读取的 ``` EasyExcel.read```这一步就失败了，代码请看下面：\r\n\r\n**异常代码**\r\n```java\r\n   \r\n    public Map<String, List<FormatExcel>> getFilterData(String fileName) {\r\n\r\n        FilterDataListener listener = new FilterDataListener();\r\n        EasyExcel.read(fileName, FormatExcel.class, listener).sheet().doRead();\r\n        Map<String, List<FormatExcel>> data = listener.getData();\r\n\r\n        return data;\r\n    }\r\n\r\n```\r\n\r\n实体如下：\r\n```java\r\n\r\n@Data\r\n@Builder\r\npublic class FormatExcel extends BaseRowModel {\r\n    @ExcelProperty(value = \"FILTER\")\r\n    private String filter;\r\n\r\n    @ExcelProperty(value = \"AF\")\r\n    private String af;\r\n\r\n    @ExcelProperty(value = \"Func.refGene\")\r\n    private String funcRefgene;\r\n}\r\n```\r\n\r\n\r\n**异常提示如下**\r\n\r\n```java\r\n\r\ncom.alibaba.excel.exception.ExcelDataConvertException: Can not instance class: com.qizai.module.report.entity.FormatExcel\r\n\r\n\tat com.alibaba.excel.read.listener.ModelBuildEventListener.buildUserModel(ModelBuildEventListener.java:108)\r\n\tat com.alibaba.excel.read.listener.ModelBuildEventListener.invoke(ModelBuildEventListener.java:38)\r\n\tat com.alibaba.excel.read.listener.ModelBuildEventListener.invoke(ModelBuildEventListener.java:28)\r\n\tat com.alibaba.excel.read.processor.DefaultAnalysisEventProcessor.dealData(DefaultAnalysisEventProcessor.java:100)\r\n\tat com.alibaba.excel.read.processor.DefaultAnalysisEventProcessor.endRow(DefaultAnalysisEventProcessor.java:47)\r\n\tat com.alibaba.excel.analysis.v03.handlers.DummyRecordHandler.processRecord(DummyRecordHandler.java:32)\r\n\tat com.alibaba.excel.analysis.v03.XlsSaxAnalyser.processRecord(XlsSaxAnalyser.java:158)\r\n\tat org.apache.poi.hssf.eventusermodel.MissingRecordAwareHSSFListener.processRecord(MissingRecordAwareHSSFListener.java:163)\r\n\tat org.apache.poi.hssf.eventusermodel.FormatTrackingHSSFListener.processRecord(FormatTrackingHSSFListener.java:92)\r\n\tat org.apache.poi.hssf.eventusermodel.HSSFRequest.processRecord(HSSFRequest.java:109)\r\n\tat org.apache.poi.hssf.eventusermodel.HSSFEventFactory.genericProcessEvents(HSSFEventFactory.java:178)\r\n\tat org.apache.poi.hssf.eventusermodel.HSSFEventFactory.processEvents(HSSFEventFactory.java:135)\r\n\tat org.apache.poi.hssf.eventusermodel.HSSFEventFactory.processWorkbookEvents(HSSFEventFactory.java:81)\r\n\tat org.apache.poi.hssf.eventusermodel.HSSFEventFactory.processWorkbookEvents(HSSFEventFactory.java:53)\r\n\tat com.alibaba.excel.analysis.v03.XlsSaxAnalyser.execute(XlsSaxAnalyser.java:137)\r\n\tat com.alibaba.excel.analysis.ExcelAnalyserImpl.analysis(ExcelAnalyserImpl.java:115)\r\n\tat com.alibaba.excel.ExcelReader.read(ExcelReader.java:182)\r\n\tat com.alibaba.excel.ExcelReader.read(ExcelReader.java:172)\r\n\tat com.alibaba.excel.read.builder.ExcelReaderSheetBuilder.doRead(ExcelReaderSheetBuilder.java:65)\r\n\tat com.qizai.module.report.service.ExcelOptionsService.getFilterData(ExcelOptionsService.java:38)\r\n\tat com.qizai.module.report.service.ExcelOptionsServiceTest.getFilterData(ExcelOptionsServiceTest.java:45)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\r\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\r\n\tat org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks.evaluate(RunBeforeTestExecutionCallbacks.java:74)\r\n\tat org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks.evaluate(RunAfterTestExecutionCallbacks.java:84)\r\n\tat org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)\r\n\tat org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)\r\n\tat org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)\r\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)\r\n\tat org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)\r\n\tat com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)\r\n\tat com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)\r\n\tat com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)\r\nCaused by: java.lang.InstantiationException: com.qizai.module.report.entity.FormatExcel\r\n\tat java.lang.Class.newInstance(Class.java:427)\r\n\tat com.alibaba.excel.read.listener.ModelBuildEventListener.buildUserModel(ModelBuildEventListener.java:104)\r\n\t... 50 more\r\nCaused by: java.lang.NoSuchMethodException: com.qizai.module.report.entity.FormatExcel.<init>()\r\n\tat java.lang.Class.getConstructor0(Class.java:3082)\r\n\tat java.lang.Class.newInstance(Class.java:412)\r\n\t... 51 more\r\n\r\n```\r\n\r\n**疑问地方**\r\n- 想知道为什么不能直接使用这个@Builder注解？(去掉注解就可以直接读取)\r\n- 还请大佬们不吝赐教，讲解一下，谢谢，期待你们的解答\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1783/comments",
    "author": "qqizai",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2021-04-09T13:39:30Z",
        "body": "不支持"
      }
    ]
  },
  {
    "number": 1781,
    "title": "动态合并单元格的例子有吗",
    "created_at": "2021-01-27T11:21:39Z",
    "closed_at": "2021-04-09T13:40:26Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1781",
    "body": "动态合并单元格的例子有吗",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1781/comments",
    "author": "licong0007",
    "comments": [
      {
        "user": "liubenwei",
        "created_at": "2021-02-05T05:52:05Z",
        "body": "你把header的值设置成一样的就会合并了"
      }
    ]
  },
  {
    "number": 1777,
    "title": "某些列的属性的格式，基本是相似的，那么对于多个字段重复使用的注解有没有合并注解的功能",
    "created_at": "2021-01-26T11:20:11Z",
    "closed_at": "2021-04-09T13:41:38Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1777",
    "body": "\r\n**建议描述**\r\n比方说number字段，一般都是固定的格式，一个字段可以使用\r\n    @HeadStyle(fillPatternType = FillPatternType.SOLID_FOREGROUND, fillForegroundColor = 55,\r\n            horizontalAlignment = HorizontalAlignment.RIGHT,verticalAlignment = VerticalAlignment.CENTER)\r\n    @ColumnWidth(30)\r\n    @ContentStyle(horizontalAlignment = HorizontalAlignment.RIGHT,verticalAlignment = VerticalAlignment.CENTER)\r\n如果多个字段都是相似的number字段，就会导致多个字段重复上述的注解，有没有方式能够将这些注解合并，或者封装使用",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1777/comments",
    "author": "chenchengbest",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2021-04-09T13:41:38Z",
        "body": "目前没有"
      }
    ]
  },
  {
    "number": 1775,
    "title": "读取每个单元格的公式",
    "created_at": "2021-01-26T02:24:14Z",
    "closed_at": "2021-04-09T13:42:16Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1775",
    "body": "昨天在用easyexcel的时候，想读取每个单元格的公式，在AnalysisContext只取到了最后一个的公式，请问这种情况怎么办。excel没有规律。",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1775/comments",
    "author": "zhangpengyue1985",
    "comments": [
      {
        "user": "henuzqjsj",
        "created_at": "2021-03-12T10:00:15Z",
        "body": "我也有这个场景，求支持！谢谢"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2021-04-09T13:42:16Z",
        "body": "用celldata接收"
      }
    ]
  },
  {
    "number": 1767,
    "title": "行数据比较及删除的问题",
    "created_at": "2021-01-19T07:06:21Z",
    "closed_at": "2021-04-09T13:45:47Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1767",
    "body": "请问\r\n1.支持行数据之间的比较吗，比如（第一行的第一列的值加上第二列的值）和（第二行的第一列的值加上第二列的值）进行比较？\r\n2.支持列的删除吗？\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1767/comments",
    "author": "2008010688sn",
    "comments": [
      {
        "user": "Tloops",
        "created_at": "2021-03-11T15:00:22Z",
        "body": "请问这个功能需要帮忙做吗？我想在未来几个月尝试做一做这个功能 @zhuangjiaju "
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2021-04-09T13:45:47Z",
        "body": "1. 不支持\r\n2. 不支持"
      }
    ]
  },
  {
    "number": 1762,
    "title": "@ExcelProperty 注解的index，可以动态传入吗",
    "created_at": "2021-01-14T14:26:04Z",
    "closed_at": "2021-04-09T13:46:31Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1762",
    "body": "通过用户设置模板stundentTemplate，例如（姓名 1列）（年龄 2列）（性别 3列）；学生实体中，private String name;上的注解@ExcelProperty(index = steudentTemplate.getNameCol)；实现动态传入",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1762/comments",
    "author": "felekos",
    "comments": [
      {
        "user": "liubenwei",
        "created_at": "2021-01-19T01:33:25Z",
        "body": "你可以使用不创建对象的写，把header封装成List<List<String>>"
      },
      {
        "user": "shanxu9198",
        "created_at": "2021-01-23T07:44:06Z",
        "body": "@liubenwei 能详细解释下吗？\r\n我遇到的场景也是希望能动态传入index。多个excel表，都存在一样的几列内容，只不过对应的列顺序不一样。表1（姓名1列、年龄2列、性别3列），表2（姓名2列、年龄3列、性别1列），表3（姓名3列、年龄1列、性别2列）。希望能定义一个对象，通过动态传入index解决。\r\n盼回复，谢谢！"
      },
      {
        "user": "liubenwei",
        "created_at": "2021-01-23T07:55:52Z",
        "body": "没看过源码 ，如果你的项目有使用spring框架，你这个功能可以使用aop去修改注解里的值，就可以达到动态的效果。，如果没有用到spring，可以使用不创建对象的写（easyExcel文档里有）。"
      },
      {
        "user": "felekos",
        "created_at": "2021-01-23T10:44:39Z",
        "body": "我才用的不读到对象中，读取到map中，自己在service中解析\r\n发自我的iPhone\r\n\r\n------------------ 原始邮件 ------------------\r\n发件人: shanxu9198 <notifications@github.com&gt;\r\n发送时间: 2021年1月23日 15:44\r\n收件人: alibaba/easyexcel <easyexcel@noreply.github.com&gt;\r\n抄送: felekos <1151200122@qq.com&gt;, Author <author@noreply.github.com&gt;\r\n主题: 回复：[alibaba/easyexcel] @ExcelProperty 注解的index，可以动态传入吗 (#1762)\r\n\r\n\r\n\r\n\r\n\r\n \r\n@liubenwei 能详细解释下吗？\r\n 我遇到的场景也是希望能动态传入index。多个excel表，都存在一样的几列内容，只不过对应的列顺序不一样。表1（姓名1列、年龄2列、性别3列），表2（姓名2列、年龄3列、性别1列），表3（姓名3列、年龄1列、性别2列）。希望能定义一个对象，通过动态传入index解决。\r\n 盼回复，谢谢！\r\n \r\n—\r\nYou are receiving this because you authored the thread.\r\nReply to this email directly, view it on GitHub, or unsubscribe."
      },
      {
        "user": "felekos",
        "created_at": "2021-01-23T10:47:53Z",
        "body": "收到，我后来改用读取到list的方式，自己在service中解析\r\n\r\n\r\n发自我的iPhone\r\n\r\n------------------ 原始邮件 ------------------\r\n发件人: liubenwei <notifications@github.com&gt;\r\n发送时间: 2021年1月23日 15:56\r\n收件人: alibaba/easyexcel <easyexcel@noreply.github.com&gt;\r\n抄送: felekos <1151200122@qq.com&gt;, Author <author@noreply.github.com&gt;\r\n主题: 回复：[alibaba/easyexcel] @ExcelProperty 注解的index，可以动态传入吗 (#1762)\r\n\r\n\r\n\r\n\r\n\r\n \r\n没看过源码 ，如果你的项目有使用spring框架，你这个功能可以使用aop去修改注解里的值，就可以达到动态的效果。，如果没有用到spring，可以使用不创建对象的写（easyExcel文档里有）。\r\n \r\n—\r\nYou are receiving this because you authored the thread.\r\nReply to this email directly, view it on GitHub, or unsubscribe."
      },
      {
        "user": "shanxu9198",
        "created_at": "2021-01-23T10:52:16Z",
        "body": "改成不创建对象方式读实现了，谢谢！ @liubenwei "
      }
    ]
  },
  {
    "number": 1758,
    "title": "同一个单元格能不能导出既有文字又有图片,查了很多资料了没找到",
    "created_at": "2021-01-11T01:35:08Z",
    "closed_at": "2021-04-09T07:29:50Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1758",
    "body": "同一个单元格能不能导出既有文字又有图片,查了很多资料了没找到,有的是一个单元格放一张,还有的是一个单元格放多张.不知道能不能多张同时带文字的",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1758/comments",
    "author": "luoxiaofeng1029",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2021-04-09T07:29:50Z",
        "body": "自定义拦截器 。常见问题有。"
      },
      {
        "user": "ps271828",
        "created_at": "2022-09-29T01:15:43Z",
        "body": "请问这个在哪里有例子可以参考"
      },
      {
        "user": "lyc0428",
        "created_at": "2023-06-10T14:06:51Z",
        "body": "> 自定义拦截器 。常见问题有。\r\n\r\n这个解决办法在哪，没找到"
      }
    ]
  },
  {
    "number": 1749,
    "title": "怎么判断sheet是否存在呢",
    "created_at": "2021-01-07T07:42:39Z",
    "closed_at": "2021-04-09T12:26:51Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1749",
    "body": "WriteSheet productSizeSheet = EasyExcel.writerSheet(\"Product Size\").build()\r\nexcelWriter.fill(new FillWrapper(\"sku\", Collections.singletonList(sku)), productSizeSheet);\r\n\r\n填充时怎么判断这个Sheet是否存在",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1749/comments",
    "author": "itlihuaxin",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2021-04-09T12:26:51Z",
        "body": "目前不支持"
      }
    ]
  },
  {
    "number": 1747,
    "title": "导出相同单元格不同字体样式",
    "created_at": "2021-01-06T08:34:58Z",
    "closed_at": "2021-04-09T12:27:50Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1747",
    "body": "使用  HSSFRichTextString  cell.setCellValue(); 没有生效",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1747/comments",
    "author": "xbcRaisins",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2021-04-09T12:27:50Z",
        "body": "设置 `inmomery=true` 但是容易oom"
      }
    ]
  },
  {
    "number": 1739,
    "title": "导出Excel，如何隔行变色",
    "created_at": "2020-12-30T08:21:08Z",
    "closed_at": "2021-04-09T12:32:29Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1739",
    "body": "隔行变色，有大佬有实现思路吗？\r\n\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1739/comments",
    "author": "710961349",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2021-04-09T12:32:29Z",
        "body": "自定义样式"
      }
    ]
  },
  {
    "number": 1727,
    "title": "有些服务器读取excel特别慢的原因",
    "created_at": "2020-12-23T13:24:01Z",
    "closed_at": "2021-04-09T12:39:36Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1727",
    "body": "最近遇到了这么一个问题 一个70多万的Excel 本地解析完只需几分钟 但是部署到阿里云服务器上之后 解析要30多分钟 试了下其他服务器 发现centos7 慢  centos6 不慢 但是我自己购买了一个centos7服务器 试了下不慢\r\n\r\n故 搞不清楚状况 怎么只是读取excel而已 有的机器就特别慢呢 慢在哪里呢 cpu 还是 磁盘IO 还是 什么系统内核参数配置",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1727/comments",
    "author": "zhugw",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2021-04-09T12:39:36Z",
        "body": "这个看下磁盘 是否慢。需要写很大的磁盘。"
      }
    ]
  },
  {
    "number": 1722,
    "title": "使用EasyExcel时如何对某些列进行求和？",
    "created_at": "2020-12-21T10:25:19Z",
    "closed_at": "2021-04-09T12:40:14Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1722",
    "body": "我在使用 propery写入excel时，如何对某些列进行累加求和呢？我想查找相关的api和资料，请问可以指教一下去哪里查找吗？\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1722/comments",
    "author": "lmy950715",
    "comments": [
      {
        "user": "small-ora",
        "created_at": "2020-12-22T09:27:35Z",
        "body": "我也有类似的需求,我是在代码里面直接计算出来然后导出的,在文档里面也没看到添加公式的说明,你找到了也可以跟我说一下,谢谢."
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2021-04-09T12:40:14Z",
        "body": "建议手动求和。"
      }
    ]
  },
  {
    "number": 1696,
    "title": "如何导入当前激活的Sheet表",
    "created_at": "2020-12-07T09:22:01Z",
    "closed_at": "2021-04-09T13:37:34Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1696",
    "body": "有一份任务清单Excel，需要导入系统。\r\n\r\n其中，sheet名称为任务单序号，如：1、2、3……\r\n\r\n每次新增新的sheet后，历史sheet表都会保留。 如何上传时，只导入当前激活的sheet（也就是打开时默认显示的sheet）？",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1696/comments",
    "author": "xmut",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2021-04-09T13:37:34Z",
        "body": "目前不支持 需要读取下有个 取最后一个"
      }
    ]
  },
  {
    "number": 1693,
    "title": "怎么写入自定义rgb颜色",
    "created_at": "2020-12-03T15:57:03Z",
    "closed_at": "2020-12-15T15:52:51Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1693",
    "body": "我要设置表头的前景色，但是setFillForegroundColo只能设置short类型，请问rgb值能否写入，看了文档没发现有写入的地方，继承writehandler也没发现有什么类可以自定义颜色的",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1693/comments",
    "author": "mzjdy",
    "comments": [
      {
        "user": "chendazhao",
        "created_at": "2023-07-04T17:45:33Z",
        "body": "最后解决了吗，官方也没人答复，被这个问题恶心死了"
      }
    ]
  },
  {
    "number": 1689,
    "title": "我也想加入本项目，该从何做起，求指教",
    "created_at": "2020-12-02T07:23:59Z",
    "closed_at": "2021-04-09T13:10:13Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1689",
    "body": "我也想加入本项目，该从何做起，求指教",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1689/comments",
    "author": "Dewaite",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2021-04-09T13:10:13Z",
        "body": "非常欢迎。看源代码 有好的想法或者建议 可以直接提交PR."
      }
    ]
  },
  {
    "number": 1687,
    "title": "写入行数据的时候为什么要处理两遍",
    "created_at": "2020-11-27T06:58:52Z",
    "closed_at": "2021-04-12T06:16:24Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1687",
    "body": "一、 方法是：com.alibaba.excel.write.executor.ExcelWriteAddExecutor#addJavaObjectToExcel。这个方法在123行开始写入行数据，这是根据导出类（A）中定义了ExcelProperty注解的那些字段来写出。后面在151行又写入了一次，这次是以导出数据的类（B）的所有字段来写出，如果A和B不是相同的类的话，那么就会出现问题。\r\n二、出现了两个问题：1、导出的数据可能不对。2、导出的excel可能会多很多列，而且这些列没有表头。\r\n这两个问题的原因是因为A、B两个类中的字段没有完全相同，且字段的顺序也没有完全相同。在151行这个循环里出现错误的。如果去掉151行这个循环就没有这两个问题了。\r\n三、我的困惑是，既然我已经在导出类（A）的列加了ExcelProperty注解，指明了哪些列要导出，123行的循环里都处理好了，为什么151行循环里又要根据导出数据类（B）再处理一次，是基于什么考虑呢？\r\n我的版本是2.2.6\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1687/comments",
    "author": "edewofenwen",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2021-04-12T06:16:24Z",
        "body": "有些字段不在头里面定义也需要写出来"
      }
    ]
  },
  {
    "number": 1681,
    "title": "Excel数据量较大，上传校验时与数据库的交互次数多，导致查询速度缓慢",
    "created_at": "2020-11-24T12:12:40Z",
    "closed_at": "2021-04-09T13:11:56Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1681",
    "body": "导入时，需要对上传文件的每一行进行数据校验，easyExcel是每一行读取的，这样相当于每行都需要查询数据库，这样对数据库的压力比较大，速度也慢。\r\n项目上用poi时，是先把校验的数据一次性从数据库拉取，在代码里面用map做for循环，\r\neasyExcel是否也支持这种形式？",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1681/comments",
    "author": "ccw924263",
    "comments": [
      {
        "user": "dardaplanet",
        "created_at": "2020-11-24T13:34:08Z",
        "body": "你在监听器里面可以先把数据拉取出来,在读取每一行数据的时候进行校验判断即可"
      },
      {
        "user": "ccw924263",
        "created_at": "2020-11-29T15:12:28Z",
        "body": "把数据拉取出来是存放到内存中吗？这样会造成内存 溢出吧？"
      },
      {
        "user": "CrazydYang",
        "created_at": "2020-12-14T06:18:58Z",
        "body": "> 把数据拉取出来是存放到内存中吗？这样会造成内存 溢出吧？\r\n\r\n理论上存在内存溢出的风险，所以需要和业务沟通。1。监听器做批量check，达到一定量级进行commit，保证一部分合法数据先行入库。2.保证数据量可控，不能太大，否则造成内存溢出。"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2021-04-09T13:11:56Z",
        "body": "分页查询"
      }
    ]
  },
  {
    "number": 1675,
    "title": "如何读取excel中每一行的图片，并将图片上传到阿里云服务器。",
    "created_at": "2020-11-23T02:55:47Z",
    "closed_at": "2021-04-12T06:17:40Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1675",
    "body": "如何读取excel中每一行的图片，并将图片上传到阿里云服务器。",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1675/comments",
    "author": "MQ-0707",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2021-04-12T06:17:40Z",
        "body": "目前不支持读取图片"
      }
    ]
  },
  {
    "number": 1674,
    "title": "怎么给单元格添加RGB颜色（背景色或前景色）",
    "created_at": "2020-11-23T02:34:01Z",
    "closed_at": "2021-04-09T13:16:55Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1674",
    "body": "我想给不同的单元格添加不同的颜色，在Issue里面找的方法 和 百度出来的方法已经不适用了，请问新版的怎么给单元格添加RGB背景颜色\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1674/comments",
    "author": "baoolong",
    "comments": [
      {
        "user": "woostju",
        "created_at": "2021-01-11T12:48:39Z",
        "body": "1. 使用HSSFWorkbook的customPalette自定义画布颜色 \r\n2. 可以在上面设置几个颜色索引，但是注意了，索引的范围是0x8 到 0x40 \r\n3. cellStyle.setFillForegroundColor(short colorIndex) 设置自定义的颜色索引\r\n(好像使用HSSFWorkbook以为着只能生成xls，不是xlsx)\r\n\r\n\r\n\t\t\r\n\t\tfinal short CUSTOM_COLOR_INDEX_1 = 8;\r\n\t\tfinal short CUSTOM_COLOR_INDEX_2 = 9;\r\n\t\tWriteCellStyle contentWriteCellStyle1 = new WriteCellStyle();\r\n\t\t// 这里需要指定 FillPatternType 为FillPatternType.SOLID_FOREGROUND 不然无法显示背景颜色.头默认了\r\n\t\t// FillPatternType所以可以不指定\r\n\t\tcontentWriteCellStyle1.setFillPatternType(FillPatternType.SOLID_FOREGROUND);\r\n\t\tcontentWriteCellStyle1.setFillForegroundColor(CUSTOM_COLOR_INDEX_1);\r\n\t\tWriteCellStyle contentWriteCellStyle2 = new WriteCellStyle();\r\n\t\tcontentWriteCellStyle2.setFillPatternType(FillPatternType.SOLID_FOREGROUND);\r\n\t\tcontentWriteCellStyle2.setFillForegroundColor(CUSTOM_COLOR_INDEX_2);\r\n\r\n\t\tEasyExcel.write(\"your excel filepath\").registerWriteHandler(new AbstractWorkbookWriteHandler() {\r\n\t\t\t@Override\r\n\t\t\tpublic void afterWorkbookCreate(WriteWorkbookHolder writeWorkbookHolder) {\r\n\t\t\t\tsuper.afterWorkbookCreate(writeWorkbookHolder);\r\n\t\t\t\tjava.awt.Color color1 = java.awt.Color.decode(\"#555555\");\r\n\t\t\t\tjava.awt.Color color2 = java.awt.Color.decode(\"#445544\");\r\n\t\t\t\tHSSFWorkbook wb = (HSSFWorkbook) writeWorkbookHolder.getWorkbook();\r\n\t\t\t\twb.getCustomPalette().setColorAtIndex(CUSTOM_COLOR_INDEX_1, (byte) color1.getRed(),\r\n\t\t\t\t\t\t(byte) color1.getGreen(), (byte) color1.getBlue());\r\n\t\t\t\twb.getCustomPalette().setColorAtIndex(CUSTOM_COLOR_INDEX_2, (byte) color2.getRed(),\r\n\t\t\t\t\t\t(byte) color2.getGreen(), (byte) color2.getBlue());\r\n\t\t\t}\r\n\t\t}).registerWriteHandler(new AbstractCellWriteHandler() {\r\n\t\t\t// cache it\r\n\t\t\tList<CellStyle> cachedShiftCellStyles = Lists.newArrayList();\r\n\r\n\t\t\tpublic void afterCellDispose(WriteSheetHolder writeSheetHolder, WriteTableHolder writeTableHolder,\r\n\t\t\t\t\tList<CellData> cellDataList, Cell cell, Head head, Integer relativeRowIndex, Boolean isHead) {\r\n\t\t\t\tif (cachedShiftCellStyles.isEmpty()) {\r\n\t\t\t\t\tcachedShiftCellStyles.add(StyleUtil.buildContentCellStyle(writeSheetHolder.getSheet().getWorkbook(),\r\n\t\t\t\t\t\t\tcontentWriteCellStyle1));\r\n\t\t\t\t\tcachedShiftCellStyles.add(StyleUtil.buildContentCellStyle(writeSheetHolder.getSheet().getWorkbook(),\r\n\t\t\t\t\t\t\tcontentWriteCellStyle2));\r\n\t\t\t\t}\r\n\t\t\t\tif (!isHead && relativeRowIndex < 3) {\r\n\t\t\t\t\tcell.setCellStyle(cachedShiftCellStyles.get(0));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcell.setCellStyle(cachedShiftCellStyles.get(0));\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}).excelType(ExcelTypeEnum.XLS).sheet(\"anything\").doWrite(null);\r\n\t\r\n"
      },
      {
        "user": "foreverEnjoyLife",
        "created_at": "2021-02-26T03:21:09Z",
        "body": "HSSFWorkbook wb = (HSSFWorkbook) writeWorkbookHolder.getWorkbook();\r\n这里会报错\r\norg.apache.poi.xssf.streaming.SXSSFWorkbook cannot be cast to org.apache.poi.hssf.usermodel.HSSFWorkbook\r\n请问怎么解决？"
      },
      {
        "user": "foreverEnjoyLife",
        "created_at": "2021-02-26T07:17:53Z",
        "body": "可以通过registerWriteHandler注册多个WriteHandler多个抽象子类覆盖方法进行设置：\r\n\r\nEasyExcel.write(response.getOutputStream(), head).registerWriteHandler(new AbstractCellWriteHandler() {\r\n                @Override\r\n                public void afterCellDispose(WriteSheetHolder writeSheetHolder, WriteTableHolder writeTableHolder, List<CellData> cellDataList,\r\n                                             Cell cell, Head head, Integer relativeRowIndex, Boolean isHead) {\r\n                    super.afterCellDispose(writeSheetHolder, writeTableHolder, cellDataList, cell, head, relativeRowIndex, isHead);\r\n                    if (isHead) {\r\n                        WriteWorkbookHolder writeWorkbookHolder = writeSheetHolder.getParentWriteWorkbookHolder();\r\n                        SXSSFWorkbook workbook = (SXSSFWorkbook) writeWorkbookHolder.getWorkbook();\r\n                        XSSFCellStyle xssfCellStyle = (XSSFCellStyle) workbook.getCellStyleAt(cell.getColumnIndex() + 1);\r\n                        xssfCellStyle.setFillForegroundColor(new XSSFColor(Color.decode(\"#ECF4FF\")));\r\n                    }\r\n                }\r\n            }).sheet(\"Sheet1\").doWrite(data);"
      },
      {
        "user": "wendongchao",
        "created_at": "2021-08-19T02:16:36Z",
        "body": "我也被这个问题困扰了很长时间，无意中看到了poi的处理方式，如下\r\n```\r\nXSSFCellStyle aa = .createCellStyle();\r\naa.setFillForegroundColor(new XSSFColor(new Color(255,255,255))); \r\naa.setFillPattern(XSSFCellStyle.SOLID_FOREGROUND);\r\n```\r\n我在使用easyExcel的workbook的时候转换了相对应的格式，\r\n处理单元格样式的时候，我分了两种情况，\r\n1. 单个单元格的情况\r\n2. easyExcel表头的情况\r\n\r\n先说第一种情况，这里可以设置16色，也可以设置RGB\r\n```\r\nWorkbook workbook = writeWorkbookHolder.getWorkbook();\r\nCellStyle cellStyle = initCellStyle(workbook);\r\nXSSFCellStyle xssfCellStyle =(XSSFCellStyle)workbook.createCellStyle();\r\nxssfCellStyle.cloneStyleFrom(cellStyle);\r\nxssfCellStyle.setFillForegroundColor(new XSSFColor(new Color(255,255,255)));\r\nxssfCellStyle.setFillPattern(FillPatternType.SOLID_FOREGROUND);\r\ncell.setCellStyle(xssfCellStyle);\r\n```\r\n注意：最后一定要把这个样式放到cell这个单元格中，\r\n\r\n第二种情况，设置easyExcel表头的RGB颜色\r\n首先设置标题头颜色策略，但是不要设置头的部分，只设置内容部分，可以在easyExcel文档中找到“自定义样式”\r\n\r\n```\r\n// 内容的策略\r\nWriteCellStyle contentWriteCellStyle = new WriteCellStyle();\r\nWriteFont contentWriteFont = new WriteFont();\r\ncontentWriteFont.setFontHeightInPoints((short)11);// 字体大小\r\ncontentWriteFont.setFontName(\"微软雅黑\"); // 字体样式\r\ncontentWriteCellStyle.setWriteFont(contentWriteFont);\r\ncontentWriteCellStyle.setBorderBottom(BorderStyle.THIN);   // 下边框\r\ncontentWriteCellStyle.setBorderLeft(BorderStyle.THIN);     // 左边框\r\ncontentWriteCellStyle.setBorderTop(BorderStyle.THIN);      // 上边框\r\ncontentWriteCellStyle.setBorderRight(BorderStyle.THIN);    // 右边框\r\n// 这个策略是 头是头的样式 内容是内容的样式 其他的策略可以自己实现\r\nHorizontalCellStyleStrategy horizontalCellStyleStrategy =\r\n        new HorizontalCellStyleStrategy(null, contentWriteCellStyle);\r\n```\r\n使用这个策略我就不说了\r\n自定义拦截器，对head进行单独处理\r\n```\r\npublic class CustomHeadWriteHandler extends AbstractCellWriteHandler {\r\n\r\n    @Override\r\n    public void afterCellCreate(WriteSheetHolder writeSheetHolder, WriteTableHolder writeTableHolder, Cell cell,\r\n                                Head head, Integer relativeRowIndex, Boolean isHead) {\r\n        // 设置标题头样式\r\n        if (isHead) {\r\n            Sheet sheet = writeSheetHolder.getSheet();\r\n            Workbook workbook = sheet.getWorkbook();\r\n            CellStyle cellStyle = initCellStyle(workbook);\r\n            XSSFCellStyle xssfCellStyle = (XSSFCellStyle)workbook.createCellStyle();\r\n            xssfCellStyle.cloneStyleFrom(cellStyle);\r\n            xssfCellStyle.setFillForegroundColor(new XSSFColor(new Color(255,255,255)));\r\n            xssfCellStyle.setFillPattern(FillPatternType.SOLID_FOREGROUND);\r\n            cell.setCellStyle(xssfCellStyle);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n上面的方法\r\n```\r\nprivate CellStyle initCellStyle(Workbook workbook) {\r\n        CellStyle style = workbook.createCellStyle();\r\n        style.setBorderBottom(BorderStyle.THIN);   // 下边框\r\n        style.setBorderLeft(BorderStyle.THIN);     // 左边框\r\n        style.setBorderTop(BorderStyle.THIN);      // 上边框\r\n        style.setBorderRight(BorderStyle.THIN);    // 右边框\r\n\r\n        Font font = workbook.createFont();\r\n        font.setFontName(\"微软雅黑\"); // 字体样式\r\n        font.setBold(false);    // 是否加粗\r\n        font.setFontHeightInPoints((short)11);   // 字体大小\r\n        style.setFont(font);\r\n        return style;\r\n    }\r\n```\r\n"
      },
      {
        "user": "wendongchao",
        "created_at": "2021-08-19T02:19:04Z",
        "body": "自定义拦截器，对head进行单独处理，可以对head头的每一列进行颜色设置"
      },
      {
        "user": "guangshuowang",
        "created_at": "2022-08-14T08:23:28Z",
        "body": "> 自定义拦截器，对head进行单独处理，可以对head头的每一列进行颜色设置\r\n\r\n\r\n\r\n> 我也被这个问题困扰了很长时间，无意中看到了poi的处理方式，如下\r\n> \r\n> ```\r\n> XSSFCellStyle aa = .createCellStyle();\r\n> aa.setFillForegroundColor(new XSSFColor(new Color(255,255,255))); \r\n> aa.setFillPattern(XSSFCellStyle.SOLID_FOREGROUND);\r\n> ```\r\n> \r\n> 我在使用easyExcel的workbook的时候转换了相对应的格式， 处理单元格样式的时候，我分了两种情况，\r\n> \r\n> 1. 单个单元格的情况\r\n> 2. easyExcel表头的情况\r\n> \r\n> 先说第一种情况，这里可以设置16色，也可以设置RGB\r\n> \r\n> ```\r\n> Workbook workbook = writeWorkbookHolder.getWorkbook();\r\n> CellStyle cellStyle = initCellStyle(workbook);\r\n> XSSFCellStyle xssfCellStyle =(XSSFCellStyle)workbook.createCellStyle();\r\n> xssfCellStyle.cloneStyleFrom(cellStyle);\r\n> xssfCellStyle.setFillForegroundColor(new XSSFColor(new Color(255,255,255)));\r\n> xssfCellStyle.setFillPattern(FillPatternType.SOLID_FOREGROUND);\r\n> cell.setCellStyle(xssfCellStyle);\r\n> ```\r\n> \r\n> 注意：最后一定要把这个样式放到cell这个单元格中，\r\n> \r\n> 第二种情况，设置easyExcel表头的RGB颜色 首先设置标题头颜色策略，但是不要设置头的部分，只设置内容部分，可以在easyExcel文档中找到“自定义样式”\r\n> \r\n> ```\r\n> // 内容的策略\r\n> WriteCellStyle contentWriteCellStyle = new WriteCellStyle();\r\n> WriteFont contentWriteFont = new WriteFont();\r\n> contentWriteFont.setFontHeightInPoints((short)11);// 字体大小\r\n> contentWriteFont.setFontName(\"微软雅黑\"); // 字体样式\r\n> contentWriteCellStyle.setWriteFont(contentWriteFont);\r\n> contentWriteCellStyle.setBorderBottom(BorderStyle.THIN);   // 下边框\r\n> contentWriteCellStyle.setBorderLeft(BorderStyle.THIN);     // 左边框\r\n> contentWriteCellStyle.setBorderTop(BorderStyle.THIN);      // 上边框\r\n> contentWriteCellStyle.setBorderRight(BorderStyle.THIN);    // 右边框\r\n> // 这个策略是 头是头的样式 内容是内容的样式 其他的策略可以自己实现\r\n> HorizontalCellStyleStrategy horizontalCellStyleStrategy =\r\n>         new HorizontalCellStyleStrategy(null, contentWriteCellStyle);\r\n> ```\r\n> \r\n> 使用这个策略我就不说了 自定义拦截器，对head进行单独处理\r\n> \r\n> ```\r\n> public class CustomHeadWriteHandler extends AbstractCellWriteHandler {\r\n> \r\n>     @Override\r\n>     public void afterCellCreate(WriteSheetHolder writeSheetHolder, WriteTableHolder writeTableHolder, Cell cell,\r\n>                                 Head head, Integer relativeRowIndex, Boolean isHead) {\r\n>         // 设置标题头样式\r\n>         if (isHead) {\r\n>             Sheet sheet = writeSheetHolder.getSheet();\r\n>             Workbook workbook = sheet.getWorkbook();\r\n>             CellStyle cellStyle = initCellStyle(workbook);\r\n>             XSSFCellStyle xssfCellStyle = (XSSFCellStyle)workbook.createCellStyle();\r\n>             xssfCellStyle.cloneStyleFrom(cellStyle);\r\n>             xssfCellStyle.setFillForegroundColor(new XSSFColor(new Color(255,255,255)));\r\n>             xssfCellStyle.setFillPattern(FillPatternType.SOLID_FOREGROUND);\r\n>             cell.setCellStyle(xssfCellStyle);\r\n>         }\r\n>     }\r\n> }\r\n> ```\r\n> \r\n> 上面的方法\r\n> \r\n> ```\r\n> private CellStyle initCellStyle(Workbook workbook) {\r\n>         CellStyle style = workbook.createCellStyle();\r\n>         style.setBorderBottom(BorderStyle.THIN);   // 下边框\r\n>         style.setBorderLeft(BorderStyle.THIN);     // 左边框\r\n>         style.setBorderTop(BorderStyle.THIN);      // 上边框\r\n>         style.setBorderRight(BorderStyle.THIN);    // 右边框\r\n> \r\n>         Font font = workbook.createFont();\r\n>         font.setFontName(\"微软雅黑\"); // 字体样式\r\n>         font.setBold(false);    // 是否加粗\r\n>         font.setFontHeightInPoints((short)11);   // 字体大小\r\n>         style.setFont(font);\r\n>         return style;\r\n>     }\r\n> ```\r\n\r\n我这么操作之后，这个自定义的策略执行了，但是文件里的样式还是跟什么也没设置一样，有说执行顺序被覆盖了，我调了order之后还行不行，遇到过这个情况吗\r\n"
      },
      {
        "user": "woshiwco",
        "created_at": "2024-06-07T01:23:13Z",
        "body": "> style.setBorderBottom(BorderStyle.THIN);   // 下边框\r\n>         style.setBorderLeft(BorderStyle.THIN);     // 左边框\r\n>         style.setBorderTop(BorderStyle.THIN);      // 上边框\r\n>         style.setBorderRight(BorderStyle.THIN);\r\n\r\n我的情况是使用 .registerWriteHandler(new HorizontalCellStyleStrategy(null, contentWriteCellStyle))，覆盖了自定义的，把这个注掉就好了"
      }
    ]
  },
  {
    "number": 1666,
    "title": "是否可以根据单元格颜色来区分数据范围",
    "created_at": "2020-11-17T07:52:57Z",
    "closed_at": "2020-11-19T07:05:38Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1666",
    "body": "要读取的excel内容不规范 可以根据单元格的颜色区分一行或者一列的数据范围吗",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1666/comments",
    "author": "wangtao4256",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-11-19T07:05:38Z",
        "body": "目前不支持读取样式 建议直接使用`poi`"
      }
    ]
  },
  {
    "number": 1665,
    "title": "在导入excel时，如果是插入数据库，有一些逻辑判断需要返回到客户端，但是看了easyexcel的导入操作，捕捉不到返回值，这个问题怎么解决？",
    "created_at": "2020-11-17T02:32:59Z",
    "closed_at": "2020-11-19T07:06:29Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1665",
    "body": "一个场景：假如先导入一条数据到数据库，接着误操作，又导入一次，这样的操作是不被允许的，所以做了判断，并且要把重复的数据返回到客户端，作为提示信息，但是easyexcel的监听中的方法都是void的，如果想拿到这些返回值，需要怎么操作？",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1665/comments",
    "author": "longaili520",
    "comments": [
      {
        "user": "Yangqi0338",
        "created_at": "2020-11-18T07:42:57Z",
        "body": "doReadSync()?\r\n"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2020-11-19T07:06:29Z",
        "body": "给`listener`创建一个成员变量 读取完成了获取就行"
      },
      {
        "user": "longaili520",
        "created_at": "2020-11-20T06:36:32Z",
        "body": "> doReadSync()?\r\n\r\n这个应该获取传入的excel数据，不是过程中处理的业务数据"
      },
      {
        "user": "longaili520",
        "created_at": "2020-11-20T06:39:19Z",
        "body": "> 给`listener`创建一个成员变量 读取完成了获取就行\r\n\r\n嗯，我现在按照这个思路重构一下。（注：因为我之前的监听是范型公用的，通过consumer传输数据的，这样就可以接受任何数据，consumer将数据丢给不同的表入库接口。）"
      }
    ]
  },
  {
    "number": 1655,
    "title": "导出的时候一个单元格可以支持添加多个图片吗？",
    "created_at": "2020-11-11T03:01:53Z",
    "closed_at": "2020-11-19T07:25:19Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1655",
    "body": "**建议描述**\r\n现在支持吗？如果不支持之后会支持吗？",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1655/comments",
    "author": "OlnyBigRoc",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-11-19T07:25:19Z",
        "body": "参照常见问题 比较复杂"
      }
    ]
  },
  {
    "number": 1649,
    "title": "写入Excel时，如何实现行分组的效果",
    "created_at": "2020-11-09T01:24:10Z",
    "closed_at": "2021-04-09T12:43:17Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1649",
    "body": "",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1649/comments",
    "author": "WenhaoLu",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2021-04-09T12:43:17Z",
        "body": "使用`table`"
      }
    ]
  },
  {
    "number": 1648,
    "title": "excel根据模板填充数据，是否可以修改模板中的sheet名称",
    "created_at": "2020-11-06T10:04:48Z",
    "closed_at": "2020-11-19T07:41:24Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1648",
    "body": "",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1648/comments",
    "author": "yuyongxing",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-11-19T07:41:24Z",
        "body": "自定义拦截器 在after create sheet以后修改名称"
      },
      {
        "user": "heliusjing",
        "created_at": "2021-06-09T08:36:31Z",
        "body": "> 自定义拦截器 在after create sheet以后修改名称\r\n\r\n请问这个问题，在最新的2.2.10版本中有改进么？还是需要通过这种自定义拦截器的方式么？\r\n"
      }
    ]
  },
  {
    "number": 1637,
    "title": "实例类中包含List集合如何导出？或者说查询的结果无法确定到实体类中，如何导出？",
    "created_at": "2020-10-29T07:54:06Z",
    "closed_at": "2020-11-19T07:31:39Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1637",
    "body": "\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1637/comments",
    "author": "JessYan0913",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-11-19T07:31:39Z",
        "body": "目前不支持list 参照不创建对象的写"
      }
    ]
  },
  {
    "number": 1635,
    "title": "请问easyexcel是否可以不实现定义描述类，直接通过填充行列的方式生成xlsx文件",
    "created_at": "2020-10-28T06:48:45Z",
    "closed_at": "2020-11-19T07:31:05Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1635",
    "body": "我的场景是需要通过执行SQL，并将结果导出EXCEL。由于SQL经常会发生调整和变化，通过实现定义类的方式输出excel不够灵活，请问是否可以像POI一样，通过操作行列的方式，直接生成xlsx文件呢？在文档中并未找到相应的方法，烦请作者或其他朋友提示，非常感谢",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1635/comments",
    "author": "praynise",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-11-19T07:31:05Z",
        "body": "参照不创建对象的写"
      }
    ]
  },
  {
    "number": 1634,
    "title": "POI版本兼容问题",
    "created_at": "2020-10-27T15:39:22Z",
    "closed_at": "2020-11-03T07:07:11Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1634",
    "body": "本地poi版本引入的是4.1.0，今天试了一下读取方法，报错：java.lang.NoSuchMethodError: org.apache.poi.poifs.filesystem.DirectoryNode.getFileSystem()Lorg/apache/poi/poifs/filesystem/NPOIFSFileSystem;\r\n\r\n请问在不动poi版本的情况下，有什么解决方法吗？",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1634/comments",
    "author": "grayxk",
    "comments": [
      {
        "user": "babyface23484",
        "created_at": "2022-05-12T11:35:04Z",
        "body": "如何解决"
      }
    ]
  },
  {
    "number": 1618,
    "title": "读取Excel时Exception处理方式是否合理",
    "created_at": "2020-10-19T03:12:55Z",
    "closed_at": "2021-04-09T12:54:36Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1618",
    "body": "\r\n在读取Excel的时候 自定义AnalysisEventListener内抛出定义异常后被XlsxSaxAnalyser.parseXmlSource()内的异常处理再次封装成 ExcelAnalysisException \r\ncatch (Exception e) {\r\n            throw new ExcelAnalysisException(e);\r\n}\r\n这样设计是否合理?导致无法正确的捕捉异常,虽然可以通过instanceof等方式去处理\r\n  ",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1618/comments",
    "author": "firekirin67",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2021-04-09T12:54:36Z",
        "body": "后续版本修复"
      }
    ]
  },
  {
    "number": 1613,
    "title": "动态表头中可能包含图片列,如何设置图片大小和位置,并随单元格移动?",
    "created_at": "2020-10-14T14:40:54Z",
    "closed_at": "2021-04-09T12:56:26Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1613",
    "body": "实体:\r\n```\r\n@Data\r\npublic class exportDTO {\r\n    @ExcelProperty(\"名称\")\r\n    private String name;\r\n\r\n    @ExcelProperty(\"图片\")\r\n    private List<URL> img;\r\n}\r\n```\r\n导出方法\r\n```\r\npublic void export(HttpServletResponse response, List<String> head, List<List<Object>> data) throws IOException {\r\n        List<List<String>> heads = new ArrayList<>();\r\n        for (String s : head) {\r\n            List<String> list = new ArrayList<>();\r\n            list.add(s);\r\n            heads.add(list);\r\n        }\r\n        ExcelWriter excelWriter = EasyExcel.write(response.getOutputStream()).head(heads).useDefaultStyle(false).build();\r\n        WriteSheet writeSheet = EasyExcel.writerSheet(\"Worksheet\").build();\r\n        excelWriter.write(data, writeSheet);\r\n        excelWriter.finish();\r\n    }\r\n```\r\n```\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1613/comments",
    "author": "dikolele",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2021-04-09T12:56:26Z",
        "body": "目前兼容的不太好 见常见问题。"
      }
    ]
  },
  {
    "number": 1612,
    "title": "我尝试在Android studio使用2.2.6，提示xmlbeans重复",
    "created_at": "2020-10-14T03:19:06Z",
    "closed_at": "2021-04-09T12:56:51Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1612",
    "body": "这是POI库的问题，请问怎么解决。\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1612/comments",
    "author": "ZhangTengCR7",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2021-04-09T12:56:51Z",
        "body": "这个不太清楚 解决了记得分享下。"
      }
    ]
  },
  {
    "number": 1602,
    "title": "读Excel时单元格文字内容前后的空格是会自动去除吗，是否有保留空格的版本呢",
    "created_at": "2020-09-29T13:02:29Z",
    "closed_at": "2021-04-09T13:05:17Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1602",
    "body": "按照文档的读取Demo测试的，发现读取到的内容把文字前后空格自动去掉了，请问有什么方法能保留空格吗？",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1602/comments",
    "author": "BiYanzhao",
    "comments": [
      {
        "user": "hxc-up",
        "created_at": "2020-10-23T02:15:48Z",
        "body": "同问, 求一个解决方法"
      },
      {
        "user": "BiYanzhao",
        "created_at": "2020-10-23T04:32:30Z",
        "body": "> 同问, 求一个解决方法\r\n\r\n换了POI"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2021-04-09T13:05:17Z",
        "body": "设置 `autotrim=false`"
      },
      {
        "user": "wjy550823795",
        "created_at": "2023-04-10T03:35:10Z",
        "body": "文字中间的空格有方法能去吗"
      }
    ]
  },
  {
    "number": 1588,
    "title": "EasyExcel.write 设置 password属性后，导出后打开，输入密码后提示文件损坏。",
    "created_at": "2020-09-22T06:51:50Z",
    "closed_at": "2021-04-09T12:59:08Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1588",
    "body": "如题，是不支持设置密码还是bug啊？",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1588/comments",
    "author": "chengpeng1987",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2021-04-09T12:59:08Z",
        "body": "升级到最新版本"
      },
      {
        "user": "Hccake",
        "created_at": "2021-06-10T16:53:35Z",
        "body": " #1976 \r\n已在 此 pr 中修复"
      }
    ]
  },
  {
    "number": 1571,
    "title": "convert中使用autowired，出现无法注入",
    "created_at": "2020-09-16T02:09:00Z",
    "closed_at": "2021-04-09T13:31:36Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1571",
    "body": "自定义的convert中使用@value和@Autowired,无法注入属性，怎么解决",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1571/comments",
    "author": "waterChens",
    "comments": [
      {
        "user": "pdkst",
        "created_at": "2020-09-24T14:15:18Z",
        "body": "Converter不被spring管理，无法注入spring管理的对象\r\n\r\n- 使用静态属性赋值，\r\n- 使用全局获取ApplicationContextAware的工具类获取context对象注入"
      }
    ]
  },
  {
    "number": 1567,
    "title": "导出excel想要支持行分组请问该如何实现呢",
    "created_at": "2020-09-12T10:57:38Z",
    "closed_at": "2021-04-09T13:22:50Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1567",
    "body": " 类似POI中groupRow的功能。\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1567/comments",
    "author": "laoqian",
    "comments": [
      {
        "user": "wuxjNo1",
        "created_at": "2020-11-30T12:47:24Z",
        "body": "EasyExcel.write(out)\r\n                .head(excelHeadList)\r\n                .inMemory(true) // **inMemory 很关键**\r\n                .sheet(\"sheet1\")\r\n                .registerWriteHandler(new AbstractRowWriteHandler() {\r\n                    @Override\r\n                    public void afterRowCreate(WriteSheetHolder writeSheetHolder, WriteTableHolder writeTableHolder, Row row, Integer relativeRowIndex, Boolean isHead) {\r\n                        if (relativeRowIndex==excelDataList.size()-1){\r\n                            Sheet sheet = writeSheetHolder.getSheet();\r\n                            sheet.groupRow(6,20);\r\n                        }\r\n                    }\r\n                })\r\n                .doWrite(excelDataList);"
      }
    ]
  },
  {
    "number": 1566,
    "title": "大文件读取，读取到某一行，不再继续？如何中断读取",
    "created_at": "2020-09-11T08:26:02Z",
    "closed_at": "2021-04-09T13:22:37Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1566",
    "body": "AnalysisEventListener的实例中，读取一行执行invoke方法。比如，15000行的excel，怎么在读取5000行，不再**往下读取**数据，想要的业务已经完成了。\r\n读取到想要的数据，**中断**程序。\r\n是不是AnalysisContext有什么参数可以设置，找了半天，没能解决。谢谢",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1566/comments",
    "author": "kipin",
    "comments": [
      {
        "user": "mmzhi",
        "created_at": "2020-09-15T11:14:35Z",
        "body": "invoke方法里面写个计数器，然后到了指定数量，抛出异常，catch处理之后，继续处理后续业务"
      },
      {
        "user": "yissan",
        "created_at": "2020-09-24T07:35:36Z",
        "body": "重写hasNext方法，业务决定返回true or false"
      }
    ]
  },
  {
    "number": 1546,
    "title": "excel解析，处理跨列居中格式的单元格及获取单元格颜色",
    "created_at": "2020-09-03T08:57:55Z",
    "closed_at": "2021-04-09T13:18:17Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1546",
    "body": "excel解析问题\r\n1、如何处理跨列居中格式的单元格\r\n2、如何获取单元格背景颜色",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1546/comments",
    "author": "sun265",
    "comments": [
      {
        "user": "isxiaohu",
        "created_at": "2020-10-26T02:48:24Z",
        "body": "同问，楼主解决了吗？"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2021-04-09T13:18:17Z",
        "body": "注解"
      }
    ]
  },
  {
    "number": 1539,
    "title": "导出excel的时候为什么要加.autoCloseStream(Boolean.FALSE)？",
    "created_at": "2020-08-31T02:23:34Z",
    "closed_at": "2020-08-31T02:48:46Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1539",
    "body": "您好，请问excel导出的时候，为什么要加\r\n.autoCloseStream(Boolean.FALSE) 这个，不自动关闭流，看了源码，如果设置了这个，doWrite里就不会自动关闭流，请问什么时候关闭呢？没有搞明白，请解答一下，谢谢",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1539/comments",
    "author": "shigzh",
    "comments": [
      {
        "user": "wolf9236",
        "created_at": "2020-11-17T07:33:25Z",
        "body": "我也好奇为啥在web导出 需要设置不关闭流"
      },
      {
        "user": "Yangqi0338",
        "created_at": "2020-11-18T07:28:13Z",
        "body": "自己手动关闭 就可以封装一个json参数给前端"
      }
    ]
  },
  {
    "number": 1536,
    "title": "关于 HSSFDataValidation ",
    "created_at": "2020-08-25T08:30:29Z",
    "closed_at": "2020-08-29T05:37:48Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1536",
    "body": "请问一下 如何使用 HSSFDataValidation  这个对象",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1536/comments",
    "author": "lianyifeng",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-08-29T05:37:48Z",
        "body": "这个需要自己研究下。"
      }
    ]
  },
  {
    "number": 1524,
    "title": " EasyExcel.write这种方式如何分批往同一个excel追加写",
    "created_at": "2020-08-14T09:44:39Z",
    "closed_at": "2020-08-14T09:46:41Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1524",
    "body": "我看了文档，然后网上也搜了下，实在找不到方法了，恳请大佬解答下，谢谢",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1524/comments",
    "author": "Level1Accelerator",
    "comments": [
      {
        "user": "Zslaiye",
        "created_at": "2020-08-21T02:06:27Z",
        "body": "我用了一段时间，easyexcel 数据添加跟样式添加不是同时添加的，我的理解是，doWrite()方法之前的处理方式算它是样式处理，doWrite(dataList)  dataList算数据  。但是在doWrite方法前会有自定义hander 在这个阶段是可以添加数据的。不管你在这个阶段怎么添加数据 ，dataList都只会在doWrite()方法之前处理方式执行之后追加数据，所以我才把doWrite()方法之前的处理方式算样式。看看源码会有workbook,sheet,row,cell创建前后的动作，你可以选择相应的时机添加数据。如果都不可以。我有一个思路但是还没有实现，我可以先告诉你：先把你的动态头，还有相应的数据在相应的位置 按照填充的方法写相应{value}或者{.value} 然后输出成excel 再把它当作模板，再读取再添加，再生成模板，依次循环。我只有这么一个想法。。。。"
      },
      {
        "user": "Level1Accelerator",
        "created_at": "2020-08-21T03:49:29Z",
        "body": "> 我用了一段时间，easyexcel 数据添加跟样式添加不是同时添加的，我的理解是，doWrite()方法之前的处理方式算它是样式处理，doWrite(dataList) dataList算数据 。但是在doWrite方法前会有自定义hander 在这个阶段是可以添加数据的。不管你在这个阶段怎么添加数据 ，dataList都只会在doWrite()方法之前处理方式执行之后追加数据，所以我才把doWrite()方法之前的处理方式算样式。看看源码会有workbook,sheet,row,cell创建前后的动作，你可以选择相应的时机添加数据。如果都不可以。我有一个思路但是还没有实现，我可以先告诉你：先把你的动态头，还有相应的数据在相应的位置 按照填充的方法写相应{value}或者{.value} 然后输出成excel 再把它当作模板，再读取再添加，再生成模板，依次循环。我只有这么一个想法。。。。\r\n\r\n感谢解答，我已经找到了追加往里写得代码\r\n场景是调用分页接口，把每页得list往里追加写\r\n\r\n重要代码\r\n\r\nExcelWriter excelWriter = EasyExcel.write(file, table.class)\r\n  WriteSheet writeSheet = EasyExcel.writerSheet(1).build();\r\n  在这里循环把每页得list查出来，写\r\n  excelWriter.write(list, writeSheet);\r\n  最后\r\n  excelWriter.finish()"
      },
      {
        "user": "caopengan",
        "created_at": "2020-08-30T01:58:25Z",
        "body": "你这么写只是适用于数据量不大的情况，当数据量大，你把数据放内存里，如果并发高的话，那将是一个灾难"
      },
      {
        "user": "xuxiaoqun",
        "created_at": "2021-05-24T08:07:38Z",
        "body": "我现在就是遇到了这种情况，和楼上写的一样，数据量大了的时候，excelWriter.finish()关闭的时候报内存溢出了"
      },
      {
        "user": "Farb",
        "created_at": "2023-06-01T06:33:40Z",
        "body": "> > 我用了一段时间，easyexcel 数据添加跟样式添加不是同时添加的，我的理解是，doWrite()方法之前的处理方式算它是样式处理，doWrite(dataList) dataList算数据 。但是在doWrite方法前会有自定义hander 在这个阶段是可以添加数据的。不管你在这个阶段怎么添加数据 ，dataList都只会在doWrite()方法之前处理方式执行之后追加数据，所以我才把doWrite()方法之前的处理方式算样式。看看源码会有workbook,sheet,row,cell创建前后的动作，你可以选择相应的时机添加数据。如果都不可以。我有一个思路但是还没有实现，我可以先告诉你：先把你的动态头，还有相应的数据在相应的位置 按照填充的方法写相应{value}或者{.value} 然后输出成excel 再把它当作模板，再读取再添加，再生成模板，依次循环。我只有这么一个想法。。。。\r\n> \r\n> 感谢解答，我已经找到了追加往里写得代码 场景是调用分页接口，把每页得list往里追加写\r\n> \r\n> 重要代码\r\n> \r\n> ExcelWriter excelWriter = EasyExcel.write(file, table.class) WriteSheet writeSheet = EasyExcel.writerSheet(1).build(); 在这里循环把每页得list查出来，写 excelWriter.write(list, writeSheet); 最后 excelWriter.finish()\r\n\r\n这样感觉很啰嗦，还要把之前已存在的数据查一遍再保留进去，感觉像脱了裤子放屁，希望官方能支持追加功能，包括追加sheet页的功能"
      },
      {
        "user": "akwangl",
        "created_at": "2024-04-16T03:36:21Z",
        "body": "实在不行就用csv吧，用java读取往最后一行写入数据"
      }
    ]
  },
  {
    "number": 1521,
    "title": "Can not close IO.   你的主机中的软件中止了一个已建立的连接。",
    "created_at": "2020-08-14T03:51:15Z",
    "closed_at": "2020-08-15T01:50:38Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1521",
    "body": "@GetMapping(value = \"/dowload\")\r\n    public void demoExcelDowload(HttpServletResponse response) throws IOException {\r\n//        try {\r\n        response.setContentType(\"application/vnd.ms-excel\");\r\n        response.setCharacterEncoding(SystemConstant.SYSTEM_CHARSET);\r\n        // 这里URLEncoder.encode可以防止中文乱码\r\n        String fileName = URLEncoder.encode(\"测试\", \"UTF-8\");\r\n        response.setHeader(\"Content-disposition\", \"attachment;filename=\" + fileName + \".xlsx\");\r\n        OperateJournal operateJournal = data();\r\n\r\n        ExcelWriter excelWriter = EasyExcel.write(response.getOutputStream())\r\n                .withTemplate(ResourceUtils.getFile(\"classpath:excelTemplate/business-daily.xlsx\"))\r\n                .registerWriteHandler(new BizMergeStrategy(ExcelUtil.getCellRangeAddresss()))\r\n                .build();\r\n        WriteSheet writeSheet = EasyExcel.writerSheet().build();\r\n\r\n        FillConfig fillConfig = FillConfig.builder().forceNewRow(Boolean.TRUE).build();\r\n        excelWriter.fill(operateJournal, writeSheet);\r\n        excelWriter.fill(new FillWrapper(\"material\", materialData()), fillConfig, writeSheet);\r\n        excelWriter.fill(new FillWrapper(\"product\", productData()), fillConfig, writeSheet);\r\n        excelWriter.fill(new FillWrapper(\"waste\", wasteData()), fillConfig, writeSheet);\r\n        excelWriter.fill(new FillWrapper(\"utilize\", utilizeData()), fillConfig, writeSheet);\r\n        excelWriter.fill(new FillWrapper(\"out\", outData()), fillConfig, writeSheet);\r\n        excelWriter.fill(new FillWrapper(\"secondary\", secondaryoutData()), fillConfig, writeSheet);\r\n        excelWriter.finish();\r\n        /*} catch (Exception e) {\r\n            // 重置response\r\n            response.reset();\r\n            response.setContentType(\"application/json\");\r\n            response.setCharacterEncoding(\"utf-8\");\r\n            Map<String, String> map = new HashMap<String, String>();\r\n            map.put(\"status\", \"failure\");\r\n            map.put(\"message\", \"下载文件失败\" + e.getMessage());\r\n            response.getWriter().println(JSON.toJSONString(map));\r\n        }*/\r\n    }\r\n错误信息：\r\ncom.alibaba.excel.exception.ExcelGenerateException: Can not close IO.\r\n\tat com.alibaba.excel.context.WriteContextImpl.finish(WriteContextImpl.java:378)\r\n\tat com.alibaba.excel.write.ExcelBuilderImpl.finish(ExcelBuilderImpl.java:95)\r\n\tat com.alibaba.excel.ExcelWriter.finish(ExcelWriter.java:329)\r\n\tat com.epadm.stock.business.operate.journal.OperateJournalController.demoExcelDowload(OperateJournalController.java:59)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:483)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\nCaused by: org.apache.catalina.connector.ClientAbortException: java.io.IOException: 你的主机中的软件中止了一个已建立的连接。\r\n\tat org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:309)\r\n\tat org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:272)\r\n\tat org.apache.catalina.connector.CoyoteOutputStream.flush(CoyoteOutputStream.java:118)\r\n\tat java.util.zip.DeflaterOutputStream.flush(DeflaterOutputStream.java:282)\r\n\tat sun.nio.cs.StreamEncoder.implFlush(StreamEncoder.java:297)\r\n\tat sun.nio.cs.StreamEncoder.flush(StreamEncoder.java:141)\r\n\tat java.io.OutputStreamWriter.flush(OutputStreamWriter.java:229)\r\n\tat org.apache.poi.xssf.streaming.SXSSFWorkbook.copyStreamAndInjectWorksheet(SXSSFWorkbook.java:494)\r\n\tat org.apache.poi.xssf.streaming.SXSSFWorkbook.injectData(SXSSFWorkbook.java:391)\r\n\tat org.apache.poi.xssf.streaming.SXSSFWorkbook.write(SXSSFWorkbook.java:936)\r\n\tat com.alibaba.excel.context.WriteContextImpl.finish(WriteContextImpl.java:339)\r\n\t... 53 more\r\nCaused by: java.io.IOException: 你的主机中的软件中止了一个已建立的连接。\r\n\tat sun.nio.ch.SocketDispatcher.write0(Native Method)\r\n\tat sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:51)\r\n\tat sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:93)\r\n\tat sun.nio.ch.IOUtil.write(IOUtil.java:65)\r\n\tat sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:470)\r\n\tat org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:138)\r\n\tat org.apache.tomcat.util.net.NioBlockingSelector.write(NioBlockingSelector.java:101)\r\n\tat org.apache.tomcat.util.net.NioSelectorPool.write(NioSelectorPool.java:152)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1252)\r\n\tat org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:764)\r\n\tat org.apache.tomcat.util.net.SocketWrapperBase.flushBlocking(SocketWrapperBase.java:717)\r\n\tat org.apache.tomcat.util.net.SocketWrapperBase.flush(SocketWrapperBase.java:707)\r\n\tat org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer.flush(Http11OutputBuffer.java:564)\r\n\tat org.apache.coyote.http11.filters.IdentityOutputFilter.flush(IdentityOutputFilter.java:117)\r\n\tat org.apache.coyote.http11.Http11OutputBuffer.flush(Http11OutputBuffer.java:217)\r\n\tat org.apache.coyote.http11.Http11Processor.flush(Http11Processor.java:1179)\r\n\tat org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:399)\r\n\tat org.apache.coyote.Response.action(Response.java:209)\r\n\tat org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:305)\r\n\t... 63 more",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1521/comments",
    "author": "jansse-zhao",
    "comments": [
      {
        "user": "a5618555",
        "created_at": "2021-01-22T01:53:33Z",
        "body": "我也是这个问题  "
      },
      {
        "user": "wuchen-fu",
        "created_at": "2024-04-03T04:23:36Z",
        "body": "同样 40w数据导出本地一直出现这个问题"
      }
    ]
  },
  {
    "number": 1520,
    "title": "单元格不可编辑",
    "created_at": "2020-08-13T11:27:38Z",
    "closed_at": "2020-08-29T05:55:55Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1520",
    "body": "如何设置编辑受限",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1520/comments",
    "author": "1175341729",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-08-29T05:55:55Z",
        "body": "自定义拦截器。"
      }
    ]
  },
  {
    "number": 1511,
    "title": "不加ExcelProperty注解的，也会出现在excel中",
    "created_at": "2020-08-06T09:42:59Z",
    "closed_at": "2020-08-06T10:32:18Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1511",
    "body": "不加ExcelProperty注解的，也会出现在excel中；\r\n如何排除实体中不加注解的字段。",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1511/comments",
    "author": "waterChens",
    "comments": [
      {
        "user": "yudonz",
        "created_at": "2020-08-19T10:48:44Z",
        "body": "怎么关了，答案是什么"
      },
      {
        "user": "waterChens",
        "created_at": "2020-08-20T02:00:51Z",
        "body": "在对应的类上面添加@ExcelIgnoreUnannotated注解。就可以解决这个问题\r\n\r\n\r\n\r\n\r\n\r\n------------------&nbsp;原始邮件&nbsp;------------------\r\n发件人:                                                                                                                        \"alibaba/easyexcel\"                                                                                    <notifications@github.com&gt;;\r\n发送时间:&nbsp;2020年8月19日(星期三) 晚上6:48\r\n收件人:&nbsp;\"alibaba/easyexcel\"<easyexcel@noreply.github.com&gt;;\r\n抄送:&nbsp;\"尐氏 _/~-尛\"<791388069@qq.com&gt;;\"State change\"<state_change@noreply.github.com&gt;;\r\n主题:&nbsp;Re: [alibaba/easyexcel] 不加ExcelProperty注解的，也会出现在excel中 (#1511)\r\n\r\n\r\n\r\n\r\n\r\n \r\n怎么关了，答案是什么\r\n \r\n—\r\nYou are receiving this because you modified the open/close state.\r\nReply to this email directly, view it on GitHub, or unsubscribe."
      },
      {
        "user": "RUAN-ZX",
        "created_at": "2022-03-25T11:14:46Z",
        "body": "帮了大忙了 正打算拿Excel entity改改 直接作为数据库字段对应的ORM实体 否则按传统方式 要做两个对象 还要做转换方法 adapter也好 还是自己写valueOf方法也好 耦合度都太高 改一个 两个都要改 两个所涉及的所有get set valueOf等方法都要改 对于企业动辄30列以上的情况 稍微改改 就算借助IDEA统一改 总归还是不优雅 \r\n\r\n> 在对应的类上面添加@ExcelIgnoreUnannotated注解。就可以解决这个问题\r\n> […](#)\r\n> ------------------&nbsp;原始邮件&nbsp;------------------ 发件人: \"alibaba/easyexcel\" <notifications@github.com&gt;; 发送时间:&nbsp;2020年8月19日(星期三) 晚上6:48 收件人:&nbsp;\"alibaba/easyexcel\"<easyexcel@noreply.github.com&gt;; 抄送:&nbsp;\"尐氏 _/~-尛\"<791388069@qq.com&gt;;\"State change\"<state_change@noreply.github.com&gt;; 主题:&nbsp;Re: [alibaba/easyexcel] 不加ExcelProperty注解的，也会出现在excel中 (#1511) 怎么关了，答案是什么 — You are receiving this because you modified the open/close state. Reply to this email directly, view it on GitHub, or unsubscribe.\r\n\r\n"
      }
    ]
  },
  {
    "number": 1510,
    "title": "excel文件放在阿里oss上面怎么读取",
    "created_at": "2020-08-05T08:14:21Z",
    "closed_at": "2020-08-19T05:53:36Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1510",
    "body": "我的excel文件是上传到阿里oss的，通过什么方式读取比较好呢？\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1510/comments",
    "author": "xx0508",
    "comments": [
      {
        "user": "Umenezumi",
        "created_at": "2020-08-10T07:57:12Z",
        "body": "这个问题和本项目并没有关系吧？"
      }
    ]
  },
  {
    "number": 1504,
    "title": "对于超过104万数据有什么好的处理方式吗",
    "created_at": "2020-07-30T06:39:00Z",
    "closed_at": "2020-08-29T06:02:25Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1504",
    "body": "导出数据到EXcel的时候，超过104数据就会报错，对这个问题有什么好的解决方式吗\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1504/comments",
    "author": "Natsu-Lee",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-08-29T06:02:25Z",
        "body": "第二个sheet"
      }
    ]
  },
  {
    "number": 1501,
    "title": "有没有类似flush的方法立刻写",
    "created_at": "2020-07-29T03:26:16Z",
    "closed_at": "2020-08-29T06:04:34Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1501",
    "body": "**场景**：因为程序随时可能中断，中断时候 虽然已经调用到write，但是实际上并没有写到硬盘，导致数据丢失。\r\n**问题**：多次写入Excel时候并不会实时写入，有没有类似flush的方法，可以将缓存立刻输出的，但是又不用关闭？\r\n或者有接口可以设置缓冲区大小？",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1501/comments",
    "author": "goldenduo",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-08-29T06:04:34Z",
        "body": "目前没有。程序中断就重新去数据库读取导出。"
      }
    ]
  },
  {
    "number": 1498,
    "title": "ExcelWriter.finish() 出错",
    "created_at": "2020-07-27T10:38:37Z",
    "closed_at": "2020-08-04T06:05:17Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1498",
    "body": "**IO流来自于HttpServletResponse**\r\n版本：\r\n```\r\n  <dependency>\r\n         <groupId>com.alibaba</groupId>\r\n         <artifactId>easyexcel</artifactId>\r\n         <version>2.2.6</version>\r\n  </dependency>\r\n   <dependency>\r\n         <groupId>org.apache.poi</groupId>\r\n         <artifactId>poi</artifactId>\r\n         <version>3.17</version>\r\n  </dependency>\r\n```\r\n```\r\n2020-07-27 18:20:14 [Finalizer] WARN  com.alibaba.excel.ExcelWriter Destroy object failed\r\ncom.alibaba.excel.exception.ExcelGenerateException: Can not close IO.\r\n\tat com.alibaba.excel.context.WriteContextImpl.finish(WriteContextImpl.java:378) ~[easyexcel-2.2.6.jar!/:?]\r\n\tat com.alibaba.excel.write.ExcelBuilderImpl.finish(ExcelBuilderImpl.java:95) ~[easyexcel-2.2.6.jar!/:?]\r\n\tat com.alibaba.excel.ExcelWriter.finish(ExcelWriter.java:329) ~[easyexcel-2.2.6.jar!/:?]\r\n\tat com.alibaba.excel.ExcelWriter.finalize(ExcelWriter.java:340) [easyexcel-2.2.6.jar!/:?]\r\n\tat java.lang.System$2.invokeFinalize(System.java:1270) [?:1.8.0_191]\r\n\tat java.lang.ref.Finalizer.runFinalizer(Finalizer.java:102) [?:1.8.0_191]\r\n\tat java.lang.ref.Finalizer.access$100(Finalizer.java:34) [?:1.8.0_191]\r\n\tat java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:217) [?:1.8.0_191]\r\nCaused by: java.lang.NullPointerException\r\n\tat org.apache.coyote.http11.Http11OutputBuffer.commit(Http11OutputBuffer.java:347) ~[tomcat-embed-core-8.5.32.jar!/:8.5.32]\r\n\tat org.apache.coyote.http11.Http11Processor.prepareResponse(Http11Processor.java:1399) ~[tomcat-embed-core-8.5.32.jar!/:8.5.32]\r\n\tat org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:346) ~[tomcat-embed-core-8.5.32.jar!/:8.5.32]\r\n\tat org.apache.coyote.Response.action(Response.java:175) ~[tomcat-embed-core-8.5.32.jar!/:8.5.32]\r\n\tat org.apache.coyote.Response.sendHeaders(Response.java:357) ~[tomcat-embed-core-8.5.32.jar!/:8.5.32]\r\n\tat org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:303) ~[tomcat-embed-core-8.5.32.jar!/:8.5.32]\r\n\tat org.apache.catalina.connector.OutputBuffer.close(OutputBuffer.java:263) ~[tomcat-embed-core-8.5.32.jar!/:8.5.32]\r\n\tat org.apache.catalina.connector.CoyoteOutputStream.close(CoyoteOutputStream.java:157) ~[tomcat-embed-core-8.5.32.jar!/:8.5.32]\r\n\tat java.util.zip.DeflaterOutputStream.close(DeflaterOutputStream.java:241) ~[?:1.8.0_191]\r\n\tat java.util.zip.ZipOutputStream.close(ZipOutputStream.java:377) ~[?:1.8.0_191]\r\n\tat org.apache.poi.xssf.streaming.SXSSFWorkbook.injectData(SXSSFWorkbook.java:394) ~[poi-ooxml-3.15.jar!/:3.15]\r\n\tat org.apache.poi.xssf.streaming.SXSSFWorkbook.write(SXSSFWorkbook.java:949) ~[poi-ooxml-3.15.jar!/:3.15]\r\n\tat com.alibaba.excel.context.WriteContextImpl.finish(WriteContextImpl.java:339) ~[easyexcel-2.2.6.jar!/:?]\r\n\t... 7 more\r\n\r\n```",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1498/comments",
    "author": "icemanjc",
    "comments": [
      {
        "user": "showyool",
        "created_at": "2020-07-27T13:18:12Z",
        "body": "@icemanjc 你这个io流是来自HttpServletResponse？有具体的代码吗"
      },
      {
        "user": "icemanjc",
        "created_at": "2020-07-28T02:29:55Z",
        "body": "> \r\n> \r\n> @icemanjc 你这个io流是来自HttpServletResponse？有具体的代码吗\r\n@Jiaxiayuan\r\n```\r\n @RequestMapping(\"/exportPerformDetail\")\r\npublic void exportPerformDetail(@RequestBody PerformeStatisticReq req, HttpServletResponse response) throws IOException {\r\n  ...\r\n\r\n  fileName = URLEncoder.encode(fileName, \"UTF-8\");\r\n  response.setHeader(\"Content-disposition\", \"attachment;filename=\" + fileName + \".xlsx\");\r\n  ExcelWriterBuilder writerBuilder = EasyExcel.write(response.getOutputStream(), tClass);\r\n  writerBuilder.autoCloseStream(Boolean.FALSE);\r\n...\r\n\r\ntry{\r\n...\r\n  writer = writerBuilder.build();\r\n  for (int i = 0; i < data.size(); i++) {\r\n       // 写入数据\r\n       WriteSheet sheet = sheetBuilder.sheetName(\"sheet \" + (i + 1)).registerConverter(new SimpleListStringConverter()).build();\r\n        writer.write(data.get(i), sheet);\r\n }\r\n } catch (Exception e) {\r\n            log.error(\"导出失败\", e);\r\n            response.reset();\r\n            response.setContentType(\"application/json\");\r\n            response.setCharacterEncoding(\"utf-8\");\r\n            CommonResult result = CommonResult.createFailResult(e.getMessage());\r\n            try {\r\n                response.getWriter().println(JSON.toJSONString(result));\r\n            } catch (IOException ex) {\r\n            }\r\n        }finally {\r\n            // 关闭流\r\n            if (writer != null) {\r\n                writer.finish();\r\n            }\r\n        }\r\n```"
      },
      {
        "user": "foxkissme",
        "created_at": "2020-07-31T03:23:03Z",
        "body": "我也遇到这个问题了，一样的场景，有时候报错有时候不报错。"
      },
      {
        "user": "icemanjc",
        "created_at": "2020-08-01T09:46:39Z",
        "body": "第一次下载导出会成功，紧接着后边的导出就会异常，需要过十几秒大概就又会下载成功。debug程序未执行完成前端就收到响应，有时是zip包，有时是空xls文件。尝试将WriteBuilder设置成自动关闭流，去掉异常处理并手动关闭流问题依旧"
      },
      {
        "user": "foxkissme",
        "created_at": "2020-08-04T02:29:19Z",
        "body": "> 第一次下载导出会成功，紧接着后边的导出就会异常，需要过十几秒大概就又会下载成功。debug程序未执行完成前端就收到响应，有时是zip包，有时是空xls文件。尝试将WriteBuilder设置成自动关闭流，去掉异常处理并手动关闭流问题依旧\r\n\r\n我后面解决这个问题了。我这边的情况是因为我在触发下载弹窗后1.5秒就把弹窗自动关闭了，造成服务端输出还没结束客户端就中断了连接。EasyExcel把异常信息封装得太严实，输出时只要抛了异常它就提示Can not close IO，我是debug到了具体的代码里才发现真正的原因的。"
      },
      {
        "user": "icemanjc",
        "created_at": "2020-08-04T06:04:47Z",
        "body": "> \r\n> \r\n> > 第一次下载导出会成功，紧接着后边的导出就会异常，需要过十几秒大概就又会下载成功。debug程序未执行完成前端就收到响应，有时是zip包，有时是空xls文件。尝试将WriteBuilder设置成自动关闭流，去掉异常处理并手动关闭流问题依旧\r\n> \r\n> 我后面解决这个问题了。我这边的情况是因为我在触发下载弹窗后1.5秒就把弹窗自动关闭了，造成服务端输出还没结束客户端就中断了连接。EasyExcel把异常信息封装得太严实，输出时只要抛了异常它就提示Can not close IO，我是debug到了具体的代码里才发现真正的原因的。\r\n\r\n感谢，我也解决了问题，不过跟你情况不一样。\r\n新建WriteSheet的时候以为可以不重复注册Converter，将builder缓存用于创建sheet页\r\n```\r\nExcelWriterSheetBuilder builder = excelWriterBuilder.sheet();\r\nWriteSheet sheet = sheetBuilder.sheetNo(sheetNo).sheetName(sheetName);\r\n```\r\n并且手动创建了ExcelWriter\r\n```\r\nExcelWriter writer = excelWriterBuilder.build();\r\n```\r\n结果创建了两个ExcelWriter对象(sheet()方法也创建了一个)，导致finish()方法被执行了两次，一次手动执行，一次ExcelWriter.finalize()执行，第一次流被关闭后，第二次就抛异常了.\r\n"
      },
      {
        "user": "Lzw2016",
        "created_at": "2020-08-31T07:43:31Z",
        "body": "> > > 第一次下载导出会成功，紧接着后边的导出就会异常，需要过十几秒大概就又会下载成功。debug程序未执行完成前端就收到响应，有时是zip包，有时是空xls文件。尝试将WriteBuilder设置成自动关闭流，去掉异常处理并手动关闭流问题依旧\r\n> > \r\n> > \r\n> > 我后面解决这个问题了。我这边的情况是因为我在触发下载弹窗后1.5秒就把弹窗自动关闭了，造成服务端输出还没结束客户端就中断了连接。EasyExcel把异常信息封装得太严实，输出时只要抛了异常它就提示Can not close IO，我是debug到了具体的代码里才发现真正的原因的。\r\n> \r\n> 感谢，我也解决了问题，不过跟你情况不一样。\r\n> 新建WriteSheet的时候以为可以不重复注册Converter，将builder缓存用于创建sheet页\r\n> \r\n> ```\r\n> ExcelWriterSheetBuilder builder = excelWriterBuilder.sheet();\r\n> WriteSheet sheet = sheetBuilder.sheetNo(sheetNo).sheetName(sheetName);\r\n> ```\r\n> \r\n> 并且手动创建了ExcelWriter\r\n> \r\n> ```\r\n> ExcelWriter writer = excelWriterBuilder.build();\r\n> ```\r\n> \r\n> 结果创建了两个ExcelWriter对象(sheet()方法也创建了一个)，导致finish()方法被执行了两次，一次手动执行，一次ExcelWriter.finalize()执行，第一次流被关闭后，第二次就抛异常了.\r\n\r\n`ExcelWriter.java` 源代码`finalize`方法有问题，JVM gc时很有可能报错: ` com.alibaba.excel.ExcelWriter Destroy object failed ... ExcelGenerateException: Can not close IO. `\r\n\r\n```java\r\n/**\r\n * Close IO\r\n */\r\npublic void finish() {\r\n    if (excelBuilder != null) {\r\n        excelBuilder.finish(false);\r\n    }\r\n}\r\n\r\n/**\r\n * Prevents calls to {@link #finish} from freeing the cache\r\n *\r\n */\r\n@Override\r\nprotected void finalize() {\r\n    try {\r\n        finish();\r\n    } catch (Throwable e) {\r\n        LOGGER.warn(\"Destroy object failed\", e);\r\n    }\r\n}\r\n```\r\n\r\n"
      },
      {
        "user": "chxmo",
        "created_at": "2020-09-02T09:10:20Z",
        "body": "我这里也是偶现，有解决办法吗？"
      }
    ]
  },
  {
    "number": 1497,
    "title": "应用poi版本低于3.1.7的情况下，easyexcel不能使用",
    "created_at": "2020-07-27T07:16:35Z",
    "closed_at": "2020-08-29T06:09:17Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1497",
    "body": "easyexcel 版本2.2.6。poi版本3.10  poi版本太低但是不能升级，导致下面方法报错EasyExcel.write(fileName).withTemplate(templateFileName).sheet().doFill(map); \r\n有什么解决方法吗？\r\nCaused by: java.lang.NoClassDefFoundError: org/apache/poi/util/DefaultTempFileCreationStrategy\r\n\tat com.alibaba.excel.util.FileUtils.createPoiFilesDirectory(FileUtils.java:138)\r\n\tat com.alibaba.excel.write.ExcelBuilderImpl.<clinit>(ExcelBuilderImpl.java:30)\r\n\tat com.alibaba.excel.ExcelWriter.<init>(ExcelWriter.java:47)\r\n\tat com.alibaba.excel.write.builder.ExcelWriterBuilder.build(ExcelWriterBuilder.java:130)\r\n\tat com.alibaba.excel.write.builder.ExcelWriterBuilder.sheet(ExcelWriterBuilder.java:146)\r\n\tat com.alibaba.excel.write.builder.ExcelWriterBuilder.sheet(ExcelWriterBuilder.java:134)\r\n原因 低版本poi缺失DefaultTempFileCreationStrategy对象等",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1497/comments",
    "author": "lvwei82604532",
    "comments": [
      {
        "user": "realrickren",
        "created_at": "2020-08-18T09:04:18Z",
        "body": "请问这个问题是怎么解决的 我的poi版本是3.15 也遇到这个问题"
      },
      {
        "user": "cs950809",
        "created_at": "2020-08-21T05:08:19Z",
        "body": "我也是这个问题。我的poi 版本3.14. 请问下有解决了的嘛，不能 排除掉原先的poi3.14，因为别的地方有用到。有什么好的解决方案吗。"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2020-08-29T06:09:17Z",
        "body": "建议升个级到3.17 暂时不考虑往下兼容。"
      },
      {
        "user": "lvwei82604532",
        "created_at": "2020-09-03T01:10:13Z",
        "body": "使用maven-shade-plugin @cs950809 @qinzeduomoxiong "
      },
      {
        "user": "liuxuan166",
        "created_at": "2020-10-23T09:27:28Z",
        "body": "这边我升级到了3.17的POI，但是还是出现了这个问题，请问是poi版本和easyexcel版本之间的冲突吗"
      },
      {
        "user": "lvwei82604532",
        "created_at": "2020-10-26T01:09:14Z",
        "body": "> 这边我升级到了3.17的POI，但是还是出现了这个问题，请问是poi版本和easyexcel版本之间的冲突吗\r\n\r\n升级后应该不会有该问题，我使用maven-shade-plugin也是为了做升级，让两个poi版本共存。"
      },
      {
        "user": "snackpub",
        "created_at": "2021-05-06T05:28:59Z",
        "body": "easyexcel 2.2.7 ,升级org.apache.poi版本到3.17可用"
      },
      {
        "user": "XH-scholar",
        "created_at": "2022-04-20T23:59:56Z",
        "body": "fr.opensagres.xdocreport 依赖 升级到2.0.1 或者其他高版本，以此为基础将poi升级到高版，避免和EasyExcel冲突"
      },
      {
        "user": "ostonemason",
        "created_at": "2024-06-06T08:14:04Z",
        "body": "3.17的poi可以。3.15不行"
      }
    ]
  },
  {
    "number": 1496,
    "title": "不创建对象的写不能使用List<List<Object>>作为doWrite的返回类型",
    "created_at": "2020-07-24T07:21:29Z",
    "closed_at": "2020-08-29T06:10:03Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1496",
    "body": "**异常代码**\r\n```java\r\n   private List<List<String>> head() {\r\n        List<List<String>> lists = new ArrayList<>();\r\n        List<String> head0 = new ArrayList<>();\r\n        head0.add(\"单位\");\r\n        List<String> head1 = new ArrayList<>();\r\n        head1.add(\"姓名\");\r\n        lists.add(head0);\r\n        lists.add(head1);\r\n        return lists;\r\n    }\r\nprivate List<List<Object>> data(List<Map<String, Object>> datas) {\r\n        List<List<Object>> lists = new ArrayList<>();\r\n        for (Map<String, Object> data : datas) {\r\n            List<Object> list = new ArrayList<>();\r\n            list.add(data.get(\"UNIT_NAME\"));\r\n            list.add(data.get(\"NAME\"));\r\n            lists.add(list);\r\n        }\r\n        return lists;\r\n    }\r\n@RequestMapping(value = \"json/ExportExcel\")\r\n    public void jsonExportExcel(Search search, HttpServletResponse response) throws IOException {\r\n        List<Map<String, Object>> maps = new ArrayList<>();\r\n        response.setContentType(\"application/vnd.ms-excel\");\r\n        response.setCharacterEncoding(\"utf-8\");\r\n        String fileName = URLEncoder.encode(examPoint.getName() + \"-\" + examSeason.getName() + \"-人员详细表\", \"UTF-8\");\r\n        response.setHeader(\"Content-disposition\", \"attachment;filename=\" + fileName + \".xlsx\");\r\n        EasyExcel.write(response.getOutputStream()).head(head()).sheet(\"人员信息\").doWrite(data(maps));\r\n    }\r\n```\r\n**异常提示**\r\n 使用不创建对象的写时发现data数据类型不能是List<List<String>>，使用List<List<String>>类型不会报错，但是导出的Excel没有数据，只能将返回类型修改为List<List<String>>\r\n**建议描述**\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1496/comments",
    "author": "KINNNNNNG",
    "comments": [
      {
        "user": "showyool",
        "created_at": "2020-07-24T08:14:33Z",
        "body": "@KINNNNNNG 没懂你的意思，而且你的代码里面是List<Map<String, Object>> maps = new ArrayList<>();这个本来也没有数据，导出来也不会有。"
      },
      {
        "user": "KINNNNNNG",
        "created_at": "2020-07-24T08:24:18Z",
        "body": "> @KINNNNNNG 没懂你的意思，而且你的代码里面是List<Map<String, Object>> maps = new ArrayList<>();这个本来也没有数据，导出来也不会有。\r\n\r\n数据问题：实际代码里是有的，但我放出来的代码里没有数据\r\n\r\n我的意思是，在文档，不创建对象的写的Demo代码使用的数据类型是List<List\\<Object\\>>，但在实际使用过程中，List<List\\<Object\\>>的返回类型会导致生成的Excel为空，需要将List<List\\<Object\\>>改为List<List\\<String\\>>才能生成Excel"
      },
      {
        "user": "showyool",
        "created_at": "2020-07-24T08:29:06Z",
        "body": "@KINNNNNNG “需要将List<List>改为List<List>才能生成Excel”这个是？"
      },
      {
        "user": "KINNNNNNG",
        "created_at": "2020-07-24T08:31:26Z",
        "body": "> @KINNNNNNG “需要将List改为List才能生成Excel”这个是？\r\n\r\n...没写好，需要转义才能显示，已经修改了，你可以再看一下"
      }
    ]
  },
  {
    "number": 1488,
    "title": "基于多个模板fill数据，如何切换模板",
    "created_at": "2020-07-22T08:11:18Z",
    "closed_at": "2020-08-29T06:11:29Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1488",
    "body": "我有一个需求，想要通过模板生成excel。模板有A、B两个sheet，A是目录，B是明细页面。\r\n想要完成的填充效果是，A填充一次，B根据条目数重复填充N次（sheetA，sheetB1，sheetB2...sheetBn）\r\n\r\n我现在的设想是把模板拆开，变成A/B两个模板。\r\n但写的时候是往同一个excel中写。\r\n模板A的数据写完之后，这时要切换到模板B，但我没有找到可切换的方法，\r\n\r\n请问ExcelWriter支持切换模板写数据吗？\r\n\r\n不胜感激！",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1488/comments",
    "author": "iamlake",
    "comments": [
      {
        "user": "iamlake",
        "created_at": "2020-07-23T01:09:52Z",
        "body": "ExcelWriter excelWriter = EasyExcel.write(response.getOutputStream()).withTemplate(template1).build();\r\nWriteSheet writeSheet = EasyExcel.writerSheet(\"sheet1\").build();\r\n//使用模板1写入到sheet1中\r\nexcelWriter.fill(dataList1, fillConfig, writeSheet);\r\n\r\n//切换到模板2写入到sheet2\r\nWriteSheet writeSheet = EasyExcel.writerSheet(\"sheet2\").build();\r\n....withTemplate(template2).build(); //TODO 切换模板\r\nexcelWriter.fill(dataList2, fillConfig, writeSheet);\r\n\r\n是否可支持类似操作？"
      },
      {
        "user": "xx0508",
        "created_at": "2020-08-19T05:51:20Z",
        "body": "同问，或者有什么变通的方法也行"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2020-08-29T06:11:29Z",
        "body": "参照多次写入demo,结合下 很容易的。"
      },
      {
        "user": "2021404",
        "created_at": "2022-07-14T01:24:44Z",
        "body": "解决了嘛？\r\n"
      }
    ]
  },
  {
    "number": 1465,
    "title": "怎样获取excel表格最大行数，使用场景是上传excel超过最大行数时，阻止文件上传和处理",
    "created_at": "2020-07-14T03:14:23Z",
    "closed_at": "2020-08-29T06:26:49Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1465",
    "body": "\r\n怎样获取excel表格最大行数，使用场景是上传excel超过最大行数时，阻止文件上传和处理",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1465/comments",
    "author": "LzbNewBie",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-08-29T06:26:48Z",
        "body": "建议通过文件大小控制。无法精确的读到大小，"
      }
    ]
  },
  {
    "number": 1459,
    "title": "模板Sheet页进行复制 从而实现多个Sheet页的需求？",
    "created_at": "2020-07-10T04:21:18Z",
    "closed_at": "2020-08-29T06:51:28Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1459",
    "body": "\r\n**建议描述**\r\n目前版本支持模板 sheet 页 复制吗？  因为我需要导出多个 sheet 页，模板都一样 ，同一个 excel 中。",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1459/comments",
    "author": "GuangTingVR",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-08-29T06:51:28Z",
        "body": "不支持"
      }
    ]
  },
  {
    "number": 1452,
    "title": "使用XLSX模板导出，多个list数据，格式显示问题",
    "created_at": "2020-07-08T08:59:17Z",
    "closed_at": "2021-09-17T14:52:57Z",
    "labels": [
      "help wanted",
      "pending verification",
      "development completed"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1452",
    "body": "使用XLSX模板导出的数据，单元格有```设置自动换行功能```，导出的行数据，数据量并没有达到增加行的高度的条件，只有第一行数据是正常展示，第一行以后的数据 都会自动调整行高\r\n\r\n使用XLS模板导出，没有此问题，只是使用XLS模板导出，需要扩展的时候，没有copyRow的功能，所以采用XLSX模板导出",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1452/comments",
    "author": "q419499249",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2021-09-17T14:52:57Z",
        "body": "已经在`3.0.0-beta1` 版本修复，beta版本会在一个月内升级成正式版。"
      }
    ]
  },
  {
    "number": 1446,
    "title": "动态生成表头时，能否先写入数据，再写入表头。",
    "created_at": "2020-07-02T08:47:07Z",
    "closed_at": "2020-08-29T06:36:01Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1446",
    "body": "**由于表头是根据表体数据动态生成的，目前需要先遍历一遍数据生成表头、再遍历一遍写入数据，共遍历两次数据。     能否支持不传表头，先写入数据，写入过程中 解析到表头，最后再写入表头，这样只需遍历一次数据。**\r\n\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1446/comments",
    "author": "jojo1900",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-08-29T06:36:01Z",
        "body": "这个目前无法支持。写入是类似于流式的，无法回退。"
      },
      {
        "user": "Granado",
        "created_at": "2024-07-10T02:54:36Z",
        "body": "这个问题现在有解决方案了吗"
      }
    ]
  },
  {
    "number": 1441,
    "title": "公式",
    "created_at": "2020-06-30T09:38:04Z",
    "closed_at": "2020-08-29T06:49:40Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1441",
    "body": "如何开启对公式的支持\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1441/comments",
    "author": "fujhmcuxx",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-08-29T06:49:40Z",
        "body": "自定义拦截器。建议不要使用，容易oom"
      }
    ]
  },
  {
    "number": 1438,
    "title": "目前是否支持多个sheet的excel填充？",
    "created_at": "2020-06-30T02:20:35Z",
    "closed_at": "2020-08-29T06:38:01Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1438",
    "body": "看了官方文档，只有对单个sheet的excel填充，是否支持多个sheet的excel填充？\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1438/comments",
    "author": "sherlockgit",
    "comments": [
      {
        "user": "GuangTingVR",
        "created_at": "2020-07-10T05:54:12Z",
        "body": "同问"
      },
      {
        "user": "SmNiuhe",
        "created_at": "2020-07-17T06:54:35Z",
        "body": "writerSheet(Integer sheetNo) \r\nwriterSheet(String sheetName) \r\n设置参数会提示空指针，给人的感觉有支持，issue 这个问题挺多的"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2020-08-29T06:38:01Z",
        "body": "支持。结合 多次写入demo"
      },
      {
        "user": "JohnHello",
        "created_at": "2020-09-07T15:11:25Z",
        "body": "@zhuangjiaju 这么着急关issue干嘛，确认支持吗？全部issues加语雀评论，我没看到有一个用户是可以成功实现多sheet的excel填充的。既然你说支持，给写个demo实际跑一下啊。不是说一句支持就直接关闭issue完事的"
      },
      {
        "user": "GC-maoye",
        "created_at": "2020-09-25T00:52:56Z",
        "body": "> @zhuangjiaju 这么着急关issue干嘛，确认支持吗？全部issues加语雀评论，我没看到有一个用户是可以成功实现多sheet的excel填充的。既然你说支持，给写个demo实际跑一下啊。不是说一句支持就直接关闭issue完事的\r\n\r\n提问就谦卑一点.怎么还能拿出趾高气昂的态度来"
      }
    ]
  },
  {
    "number": 1437,
    "title": "请问目前在填充excel的时候支持填充图片吗？",
    "created_at": "2020-06-30T02:11:05Z",
    "closed_at": "2020-08-29T06:48:09Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1437",
    "body": "如题",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1437/comments",
    "author": "smartboy37597",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-08-29T06:48:08Z",
        "body": "支持"
      },
      {
        "user": "Angle-bo",
        "created_at": "2020-09-03T07:14:43Z",
        "body": "有没有demo示例或者对应的文档，怎么进行图片填充"
      }
    ]
  },
  {
    "number": 1435,
    "title": "自定义表头，自定义转换器的ExcelContentProperty参数为null",
    "created_at": "2020-06-29T07:59:27Z",
    "closed_at": "2020-08-29T06:43:24Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1435",
    "body": "问题：目前使用自定义表头，自定义了一个转换器，但转换器的第二个参数是null\r\nexcelWriter = EasyExcel.write(\"test\").head(headList).registerConverter(new ImageConverter()).build();\r\n\r\npublic CellData convertToExcelData(String value, ExcelContentProperty contentProperty, GlobalConfiguration globalConfiguration)\r\n中的 ExcelContentProperty contentProperty字段为null",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1435/comments",
    "author": "HTT1995",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-08-29T06:43:24Z",
        "body": "该参数 本来就可以为null"
      }
    ]
  },
  {
    "number": 1433,
    "title": "自定义表头的时候，怎么指定某个列的converter",
    "created_at": "2020-06-28T12:36:30Z",
    "closed_at": "2020-08-29T06:43:48Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1433",
    "body": "现在是一个模板对象，会因为用户不同，表头也会不同，所以弄成自定义表头。用模板对象的时候，可以用`@ExcelProperty`来指定某列的converter。现在使用`AbstractParameterBuilder#head(java.util.List<java.util.List<java.lang.String>>)`来自定义表头，不同列的converter是不同的，怎么指定某些列的converter？\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1433/comments",
    "author": "devfat",
    "comments": [
      {
        "user": "HTT1995",
        "created_at": "2020-06-29T10:11:01Z",
        "body": "我也想问下这个问题，有结论了么"
      },
      {
        "user": "devfat",
        "created_at": "2020-07-02T02:11:29Z",
        "body": "> 我也想问下这个问题，有结论了么\r\n\r\n还没，暂时手动转换了下"
      },
      {
        "user": "HTT1995",
        "created_at": "2020-07-02T02:23:03Z",
        "body": "其实还有种麻烦一些的方法，就是指定全局convert，然后convert里判断列的索引，根据索引来对某些列的数据进行处理。\r\n但其实也还有个问题是convert里好像获取不到列索引，只能自己设置一个轮转器\r\npublic class ImageConverter implements Converter<String> {\r\n\r\n    @Override\r\n    public Class supportJavaTypeKey() {\r\n        return String.class;\r\n    }\r\n\r\n    @Override\r\n    public CellDataTypeEnum supportExcelTypeKey() {\r\n        return CellDataTypeEnum.IMAGE;\r\n    }\r\n\r\n    @Override\r\n    public String convertToJavaData(CellData cellData, ExcelContentProperty contentProperty, GlobalConfiguration globalConfiguration) {\r\n        throw new UnsupportedOperationException(\"Cannot convert images to string\");\r\n    }\r\n\r\n    @Override\r\n    public CellData convertToExcelData(String value, ExcelContentProperty contentProperty, GlobalConfiguration globalConfiguration) throws IOException {\r\n//有个问题是ExcelContentProperty contentProperty获取不到\r\n\r\n}"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2020-08-29T06:43:48Z",
        "body": "这个目前没法支持 后续想想"
      }
    ]
  },
  {
    "number": 1418,
    "title": "如何按页（A4）填充",
    "created_at": "2020-06-22T07:37:24Z",
    "closed_at": "2020-06-23T10:47:06Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1418",
    "body": "需求：数据模板是按页的，结构复杂不是简单的列表，如何按页填充？\r\n尝试：循环调用 fill ，并且forceNewRow设置成true，结果只有一页（模板那页），并没有追加到第二页。\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1418/comments",
    "author": "joey-lucky",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-06-23T10:47:06Z",
        "body": "这个建议尝试使用`jxls`,其他开源框架。"
      },
      {
        "user": "joey-lucky",
        "created_at": "2020-07-02T07:33:16Z",
        "body": "> 这个建议尝试使用`jxls`,其他开源框架。\r\n\r\n好的，不过还是期望贵司能做这方面的兼容。"
      }
    ]
  },
  {
    "number": 1410,
    "title": "不使用定义表头，如何写入图片数据？",
    "created_at": "2020-06-18T09:16:00Z",
    "closed_at": "2020-06-23T10:52:37Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1410",
    "body": "**现状**\r\n做的是一个组件化的excel写入，所以一直使用如下方法来写入数据\r\npublic ExcelWriter write0(List<List<String>> data, Sheet sheet, Table table) {\r\n        this.excelBuilder.addContent(data, sheet, table);\r\n        return this;\r\n    }\r\n\r\n**问题**\r\n所以问题是我拿到的图片数据是字节数组类型转成的json字符串（这里不做过多解释为什么要转成json字符串），我直接write0写入会报错数据过长，明显这把图片的json字符串当成string类型写入了，我应该如何操作才能正常写入图片数据？\r\n\r\n**痛点**\r\n无法定义类似文档中ImageData的这种表头对象，也就无法使用\r\nEasyExcel.write(fileName, ImageData.class).sheet().doWrite(list);\r\n这种类型方法来写excel。\r\n\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1410/comments",
    "author": "HTT1995",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-06-23T10:52:37Z",
        "body": "这个需要自己提前转好了。自定义或者可以新增自定义转换器。"
      },
      {
        "user": "HTT1995",
        "created_at": "2020-06-28T12:18:29Z",
        "body": "你好，想问下如何在使用动态表头情况下使自定义的转换器生效，目前使用下面这种形式来设置表头\r\n            // 创建一个表格             Table table = new Table(1);             // 动态添加 表头 headList --&gt; 所有表头行集合             List<List<String&gt;&gt; headList = new ArrayList<List<String&gt;&gt;();             // 第 n 行 的表头             List<String&gt; headTitle0 = new ArrayList<String&gt;();             List<String&gt; headTitle1 = new ArrayList<String&gt;();             List<String&gt; headTitle2 = new ArrayList<String&gt;();             headTitle0.add(\"最顶部-1\");             headTitle0.add(\"标题1\");             headTitle1.add(\"最顶部-1\");             headTitle1.add(\"标题2\");             headTitle2.add(\"最顶部-1\");             headTitle2.add(\"标题3\");             headList.add(headTitle0);             headList.add(headTitle1);             headList.add(headTitle2);             table.setHead(headList);             excelWriter.write1(list,sheet,table);\r\n而不是使用对象形式\r\n@Data @NoArgsConstructor @AllArgsConstructor public class User { \t@ExcelProperty(value = \"姓名\", index = 0) \tprivate String name; \t@ExcelProperty(value = \"年龄\", index = 1) \tprivate Integer age;     // 1 男   0 女 \t@ExcelProperty(value = \"性别\", index = 2) \tprivate Integer sex; \t@ExcelProperty(value = \"创建时间\", index = 3) \tprivate LocalDateTime createTime; }\r\n想问下在使用List<List<String&gt;&gt; headList这种动态表头如何使自定义的转换器生效？\r\n\r\n\r\n------------------&nbsp;原始邮件&nbsp;------------------\r\n发件人:&nbsp;\"Jiaju Zhuang\"<notifications@github.com&gt;;\r\n发送时间:&nbsp;2020年6月23日(星期二) 晚上6:52\r\n收件人:&nbsp;\"alibaba/easyexcel\"<easyexcel@noreply.github.com&gt;;\r\n抄送:&nbsp;\"胡宏周\"<1490643280@qq.com&gt;;\"Author\"<author@noreply.github.com&gt;;\r\n主题:&nbsp;Re: [alibaba/easyexcel] 不使用定义表头，如何写入图片数据？ (#1410)\r\n\r\n\r\n\r\n\r\n\r\n \r\n这个需要自己提前转好了。自定义或者可以新增自定义转换器。\r\n \r\n—\r\nYou are receiving this because you authored the thread.\r\nReply to this email directly, view it on GitHub, or unsubscribe."
      }
    ]
  },
  {
    "number": 1407,
    "title": "如何不创建对象，把图片写入excel",
    "created_at": "2020-06-16T09:24:48Z",
    "closed_at": "2020-06-16T11:01:45Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1407",
    "body": "不继承BaseRowModel，有什么方法可以把图片写入excel么？图片数据是字节数组的格式",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1407/comments",
    "author": "HTT1995",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-06-16T11:01:45Z",
        "body": "升级到最新版本 直接放数组"
      }
    ]
  },
  {
    "number": 1404,
    "title": "哪位老哥有动态导入吗?  动态绑定excel列和实体属性的关系",
    "created_at": "2020-06-16T02:15:36Z",
    "closed_at": "2020-06-16T11:03:32Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1404",
    "body": "就是数据库会有个数据表, 动态映射excel列名和实体类属性之间的关系, 这在easyexcel如何做,看了下源码不太看得懂",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1404/comments",
    "author": "cdoer",
    "comments": [
      {
        "user": "Myloveisyou1",
        "created_at": "2020-06-16T10:33:18Z",
        "body": "我也需要类似功能，现在实现了动态表头，但是动态表头对应的动态内容硬是无法实现。。。"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2020-06-16T11:03:32Z",
        "body": "请参照demo书写。目前支持 无对象 和创建实体。"
      },
      {
        "user": "cdoer",
        "created_at": "2020-06-16T12:59:31Z",
        "body": "> \r\n> \r\n> 我也需要类似功能，现在实现了动态表头，但是动态表头对应的动态内容硬是无法实现。。。\r\n@Myloveisyou1   作者有点敷衍了。有点想法了，明天去公司试试\r\n"
      },
      {
        "user": "cdoer",
        "created_at": "2020-06-17T01:14:10Z",
        "body": "@Myloveisyou1  经过尝试 通过重写invokeHeadMap 可以动态改变映射关系,供参考,propColumnMap  内容可以从数据库加载\r\n其中用到了guava的集合工具类,请知悉.\r\n\r\n其中实体类中 无需指定列名和index\r\n请注意,这里是导入,不是导出!!!!!!\r\n\r\n`public class HospitalVisitInfoIMO extends BaseIMO {\r\n\r\n    @ExcelProperty\r\n    private String outNo;\r\n\r\n    @ExcelProperty\r\n    private String employeeNo;\r\n\r\n    @ExcelProperty\r\n    private String idcard;\r\n\r\n    @ExcelProperty\r\n    private String billType;\r\n\r\n    //医院名称\r\n    @ExcelProperty\r\n    private String hospitalName;\r\n\r\n    //住院时间\r\n    @ExcelProperty(converter = LocalDateTimeConverter.class)\r\n    private LocalDateTime inDate;\r\n\r\n    //出院时间\r\n    @ExcelProperty(converter = LocalDateTimeConverter.class)\r\n    private LocalDateTime outDate;\r\n\r\n    //结算时间\r\n    @ExcelProperty(converter = LocalDateTimeConverter.class)\r\n    private LocalDateTime dealDate;\r\n\r\n    //总费用\r\n    @ExcelProperty\r\n    private Double sumCost;\r\n\r\n    //医疗保险支付金额\r\n    @ExcelProperty\r\n    private Double ylbxCost;\r\n\r\n    //医保个人账户支付金额\r\n    @ExcelProperty\r\n    private Double ybgrCost;\r\n\r\n    //现金支付金额\r\n    @ExcelProperty\r\n    private Double cashCost;\r\n\r\n    //大额医疗费用统筹支付金额\r\n    @ExcelProperty\r\n    private Double daeyiliaoCost;\r\n\r\n    //其他支付金额\r\n    @ExcelProperty\r\n    private Double otherCost;\r\n\r\n    //自费项目金额\r\n    @ExcelProperty\r\n    private Double selfCost;\r\n\r\n    //起付标准\r\n    @ExcelProperty\r\n    private Double payLine;\r\n\r\n    //结算地点\r\n    @ExcelProperty\r\n    private String payArea;\r\n\r\n}`\r\n\r\n\r\n`@Override\r\n    public void invokeHeadMap(Map<Integer, String> headMap, AnalysisContext context) {\r\n        Map<String,String> propColumnMap = Maps.newHashMap();\r\n        propColumnMap.put(\"就医数据ID\",\"outNo\");\r\n        propColumnMap.put(\"职工编号\",\"employeeNo\");\r\n        propColumnMap.put(\"身份证号码\",\"idcard\");\r\n        propColumnMap.put(\"医疗类别\",\"billType\");\r\n        propColumnMap.put(\"医院名称\",\"hospitalName\");\r\n        propColumnMap.put(\"入院日期\",\"inDate\");\r\n        propColumnMap.put(\"出院日期\",\"outDate\");\r\n        propColumnMap.put(\"结算日期\",\"dealDate\");\r\n        propColumnMap.put(\"医疗总费用\",\"sumCost\");\r\n        propColumnMap.put(\"基本医疗保险支付金额\",\"ylbxCost\");\r\n        propColumnMap.put(\"医保个人账户支付金额\",\"ybgrCost\");\r\n        propColumnMap.put(\"现金支付金额\",\"cashCost\");\r\n        propColumnMap.put(\"大额医疗费用统筹支付金额\",\"daeyiliaoCost\");\r\n        propColumnMap.put(\"其他支付金额\",\"otherCost\");\r\n        propColumnMap.put(\"自费项目金额\",\"selfCost\");\r\n        propColumnMap.put(\"起付标准\",\"payLine\");\r\n        propColumnMap.put(\"结算地点\",\"payArea\");\r\n\r\n\r\n        Map<Integer,ExcelContentProperty> contentPropertyMap = Maps.newHashMap();\r\n        Map<Integer,Head> headMaps = Maps.newHashMap();\r\n\r\n        Collection<ExcelContentProperty> values1 = context.currentReadHolder().excelReadHeadProperty().getContentPropertyMap().values();\r\n        Collection<Head> values = context.currentReadHolder().excelReadHeadProperty().getHeadMap().values();\r\n\r\n        Map<String, ExcelContentProperty> excelContentPropertyMap = Maps.uniqueIndex(values1, new Function<ExcelContentProperty, String>() {\r\n            @Override\r\n            public String apply(ExcelContentProperty input) {\r\n                return input.getField().getName();\r\n            }\r\n        });\r\n\r\n        Map<String, Head> excelHeadMap = Maps.uniqueIndex(values, new Function<Head, String>() {\r\n            @Override\r\n            public String apply(Head input) {\r\n                return input.getFieldName();\r\n            }\r\n        });\r\n\r\n        Set<Integer> integers = headMap.keySet();\r\n        for (Integer integer : integers) {\r\n            String s = headMap.get(integer);\r\n            if(!propColumnMap.containsKey(s)) continue;\r\n\r\n            contentPropertyMap.put(integer,excelContentPropertyMap.get(propColumnMap.get(s)));\r\n            headMaps.put(integer,excelHeadMap.get(propColumnMap.get(s)));\r\n        }\r\n        if(!contentPropertyMap.isEmpty()){\r\n            context.currentReadHolder().excelReadHeadProperty().setContentPropertyMap(contentPropertyMap);\r\n            context.currentReadHolder().excelReadHeadProperty().setHeadMap(headMaps);\r\n        }\r\n        log.info(\"headMap:{}\", JSON.toJSONString(headMap));\r\n    }`"
      },
      {
        "user": "Myloveisyou1",
        "created_at": "2020-06-17T07:37:40Z",
        "body": "我现在使用的是非模板写入Excel的方式开发的，动态列和动态合并单元格。使用模板感觉只能针对固定表头的那种。"
      },
      {
        "user": "Myloveisyou1",
        "created_at": "2020-06-17T07:39:25Z",
        "body": "> @Myloveisyou1 经过尝试 通过重写invokeHeadMap 可以动态改变映射关系,供参考,propColumnMap 内容可以从数据库加载\r\n> 其中用到了guava的集合工具类,请知悉.\r\n> \r\n> 其中实体类中 无需指定列名和index\r\n> 请注意,这里是导入,不是导出!!!!!!\r\n> \r\n> `public class HospitalVisitInfoIMO extends BaseIMO {\r\n> \r\n> ```\r\n> @ExcelProperty\r\n> private String outNo;\r\n> \r\n> @ExcelProperty\r\n> private String employeeNo;\r\n> \r\n> @ExcelProperty\r\n> private String idcard;\r\n> \r\n> @ExcelProperty\r\n> private String billType;\r\n> \r\n> //医院名称\r\n> @ExcelProperty\r\n> private String hospitalName;\r\n> \r\n> //住院时间\r\n> @ExcelProperty(converter = LocalDateTimeConverter.class)\r\n> private LocalDateTime inDate;\r\n> \r\n> //出院时间\r\n> @ExcelProperty(converter = LocalDateTimeConverter.class)\r\n> private LocalDateTime outDate;\r\n> \r\n> //结算时间\r\n> @ExcelProperty(converter = LocalDateTimeConverter.class)\r\n> private LocalDateTime dealDate;\r\n> \r\n> //总费用\r\n> @ExcelProperty\r\n> private Double sumCost;\r\n> \r\n> //医疗保险支付金额\r\n> @ExcelProperty\r\n> private Double ylbxCost;\r\n> \r\n> //医保个人账户支付金额\r\n> @ExcelProperty\r\n> private Double ybgrCost;\r\n> \r\n> //现金支付金额\r\n> @ExcelProperty\r\n> private Double cashCost;\r\n> \r\n> //大额医疗费用统筹支付金额\r\n> @ExcelProperty\r\n> private Double daeyiliaoCost;\r\n> \r\n> //其他支付金额\r\n> @ExcelProperty\r\n> private Double otherCost;\r\n> \r\n> //自费项目金额\r\n> @ExcelProperty\r\n> private Double selfCost;\r\n> \r\n> //起付标准\r\n> @ExcelProperty\r\n> private Double payLine;\r\n> \r\n> //结算地点\r\n> @ExcelProperty\r\n> private String payArea;\r\n> ```\r\n> \r\n> }`\r\n> \r\n> `@Override\r\n> public void invokeHeadMap(Map<Integer, String> headMap, AnalysisContext context) {\r\n> Map<String,String> propColumnMap = Maps.newHashMap();\r\n> propColumnMap.put(\"就医数据ID\",\"outNo\");\r\n> propColumnMap.put(\"职工编号\",\"employeeNo\");\r\n> propColumnMap.put(\"身份证号码\",\"idcard\");\r\n> propColumnMap.put(\"医疗类别\",\"billType\");\r\n> propColumnMap.put(\"医院名称\",\"hospitalName\");\r\n> propColumnMap.put(\"入院日期\",\"inDate\");\r\n> propColumnMap.put(\"出院日期\",\"outDate\");\r\n> propColumnMap.put(\"结算日期\",\"dealDate\");\r\n> propColumnMap.put(\"医疗总费用\",\"sumCost\");\r\n> propColumnMap.put(\"基本医疗保险支付金额\",\"ylbxCost\");\r\n> propColumnMap.put(\"医保个人账户支付金额\",\"ybgrCost\");\r\n> propColumnMap.put(\"现金支付金额\",\"cashCost\");\r\n> propColumnMap.put(\"大额医疗费用统筹支付金额\",\"daeyiliaoCost\");\r\n> propColumnMap.put(\"其他支付金额\",\"otherCost\");\r\n> propColumnMap.put(\"自费项目金额\",\"selfCost\");\r\n> propColumnMap.put(\"起付标准\",\"payLine\");\r\n> propColumnMap.put(\"结算地点\",\"payArea\");\r\n> \r\n> ```\r\n>     Map<Integer,ExcelContentProperty> contentPropertyMap = Maps.newHashMap();\r\n>     Map<Integer,Head> headMaps = Maps.newHashMap();\r\n> \r\n>     Collection<ExcelContentProperty> values1 = context.currentReadHolder().excelReadHeadProperty().getContentPropertyMap().values();\r\n>     Collection<Head> values = context.currentReadHolder().excelReadHeadProperty().getHeadMap().values();\r\n> \r\n>     Map<String, ExcelContentProperty> excelContentPropertyMap = Maps.uniqueIndex(values1, new Function<ExcelContentProperty, String>() {\r\n>         @Override\r\n>         public String apply(ExcelContentProperty input) {\r\n>             return input.getField().getName();\r\n>         }\r\n>     });\r\n> \r\n>     Map<String, Head> excelHeadMap = Maps.uniqueIndex(values, new Function<Head, String>() {\r\n>         @Override\r\n>         public String apply(Head input) {\r\n>             return input.getFieldName();\r\n>         }\r\n>     });\r\n> \r\n>     Set<Integer> integers = headMap.keySet();\r\n>     for (Integer integer : integers) {\r\n>         String s = headMap.get(integer);\r\n>         if(!propColumnMap.containsKey(s)) continue;\r\n> \r\n>         contentPropertyMap.put(integer,excelContentPropertyMap.get(propColumnMap.get(s)));\r\n>         headMaps.put(integer,excelHeadMap.get(propColumnMap.get(s)));\r\n>     }\r\n>     if(!contentPropertyMap.isEmpty()){\r\n>         context.currentReadHolder().excelReadHeadProperty().setContentPropertyMap(contentPropertyMap);\r\n>         context.currentReadHolder().excelReadHeadProperty().setHeadMap(headMaps);\r\n>     }\r\n>     log.info(\"headMap:{}\", JSON.toJSONString(headMap));\r\n> }`\r\n> ```\r\n\r\n假如你都不知道具体有哪些字段，实体类都无法建立的。因为动态的列，你不知道字段的个数嘛"
      },
      {
        "user": "cdoer",
        "created_at": "2020-06-17T07:42:14Z",
        "body": "@Myloveisyou1  我这里实体类的字段是确定的,只是对应的列名可能发生改变"
      },
      {
        "user": "xiaour",
        "created_at": "2020-11-20T03:49:07Z",
        "body": "我是通过获取注解把实体模板中的index和value重新赋值了"
      }
    ]
  },
  {
    "number": 1399,
    "title": "excel文件是否支持导出文件加密？",
    "created_at": "2020-06-12T07:27:50Z",
    "closed_at": "2020-06-16T11:09:07Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1399",
    "body": "将数据导入excel文件后，是否可以加密导出的excel文件",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1399/comments",
    "author": "senlu",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-06-16T11:09:07Z",
        "body": "支持。"
      },
      {
        "user": "senlu",
        "created_at": "2020-06-16T11:22:57Z",
        "body": "怎么设置加密的"
      }
    ]
  },
  {
    "number": 1393,
    "title": "java11 非法反射",
    "created_at": "2020-06-10T08:57:43Z",
    "closed_at": "2020-06-16T11:13:34Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1393",
    "body": "**异常提示**\r\nWARNING: An illegal reflective access operation has occurred\r\nWARNING: Illegal reflective access by org.apache.poi.openxml4j.util.ZipSecureFile$1 (file:/D:/maven/repository/org/apache/poi/poi-ooxml/3.17/poi-ooxml-3.17.jar) to field java.io.FilterInputStream.in\r\nWARNING: Please consider reporting this to the maintainers of org.apache.poi.openxml4j.util.ZipSecureFile$1\r\nWARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations\r\nWARNING: All illegal access operations will be denied in a future release\r\n**建议描述**\r\njava11 提示非法反射  之后的版本可以考虑使用高版本的poi-ooxml\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1393/comments",
    "author": "bajie-git",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-06-16T11:13:34Z",
        "body": "后续升级到jdk8后考虑。升级版本不支持jdk6."
      }
    ]
  },
  {
    "number": 1390,
    "title": "com.alibaba.excel.exception.ExcelAnalysisException: java.lang.NoClassDefFoundError: org/objectweb/asm/Type",
    "created_at": "2020-06-09T11:59:56Z",
    "closed_at": "2020-06-09T14:48:55Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1390",
    "body": "请问easyexcel使用2.2.3 version，poi使用3.17 version出现类找不到的问题怎么解决\r\ncom.alibaba.excel.exception.ExcelAnalysisException: java.lang.NoClassDefFoundError: org/objectweb/asm/Type",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1390/comments",
    "author": "LzbNewBie",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-06-09T14:48:55Z",
        "body": "`cglib` 3.1+"
      },
      {
        "user": "LzbNewBie",
        "created_at": "2020-06-11T11:41:13Z",
        "body": "easyexcel包exclusion掉依赖的cglib包，从新引入3.3.0的cglib包解决了这个问题"
      },
      {
        "user": "iluoxuan",
        "created_at": "2020-06-15T10:13:07Z",
        "body": "重新尝试了 为了解决asm冲突建议 引用 cglib-nodep jar；不会取引用外部asm ；"
      },
      {
        "user": "fisherman-0510",
        "created_at": "2020-09-05T06:53:53Z",
        "body": "大佬 可以写出具体的 pom 配置文件嘛, 我现在也遇到这个情况 谢谢啦"
      },
      {
        "user": "LzbNewBie",
        "created_at": "2020-09-07T01:10:28Z",
        "body": "> 大佬 可以写出具体的 pom 配置文件嘛, 我现在也遇到这个情况 谢谢啦\r\n\r\n               <dependency>\r\n\t\t\t<groupId>com.alibaba</groupId>\r\n\t\t\t<artifactId>easyexcel</artifactId>\r\n\t\t\t<version>2.2.6</version>\r\n\t\t\t<exclusions>\r\n\t\t\t\t<exclusion>\r\n\t\t\t\t\t<groupId>cglib</groupId>\r\n\t\t\t\t\t<artifactId>cglib</artifactId>\r\n\t\t\t\t</exclusion>\r\n\t\t\t</exclusions>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>cglib</groupId>\r\n\t\t\t<artifactId>cglib</artifactId>\r\n\t\t\t<version>3.3.0</version>\r\n\t\t</dependency>"
      }
    ]
  },
  {
    "number": 1387,
    "title": "2.2.3 版本中删除了AbstractMergeStrategy",
    "created_at": "2020-06-09T01:31:35Z",
    "closed_at": "2020-06-09T14:44:17Z",
    "labels": [
      "help wanted",
      "developing"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1387",
    "body": "最新版本中删除了AbstractMergeStrategy，是有其他方式更好的支持动态单元格合并吗。\r\n导出时需要根据数据来确认需要合并单元格的行数。",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1387/comments",
    "author": "908216809",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-06-09T14:44:17Z",
        "body": "`2.2.4`已经加回去了"
      },
      {
        "user": "908216809",
        "created_at": "2020-06-11T08:47:49Z",
        "body": "多谢，多谢&nbsp;\r\n\r\n\r\n\r\n\r\n------------------&nbsp;原始邮件&nbsp;------------------\r\n发件人:&nbsp;\"Jiaju Zhuang\"<notifications@github.com&gt;;\r\n发送时间:&nbsp;2020年6月9日(星期二) 晚上10:44\r\n收件人:&nbsp;\"alibaba/easyexcel\"<easyexcel@noreply.github.com&gt;;\r\n抄送:&nbsp;\"❤ 执子之手\"<908216809@qq.com&gt;;\"Author\"<author@noreply.github.com&gt;;\r\n主题:&nbsp;Re: [alibaba/easyexcel] 2.2.3 版本中删除了AbstractMergeStrategy (#1387)\r\n\r\n\r\n\r\n\r\n\r\n \r\n2.2.4已经加回去了\r\n \r\n—\r\nYou are receiving this because you authored the thread.\r\nReply to this email directly, view it on GitHub, or unsubscribe."
      }
    ]
  },
  {
    "number": 1381,
    "title": "使用同步读取时获取sheet名称",
    "created_at": "2020-06-07T04:40:31Z",
    "closed_at": "2020-06-09T07:53:49Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1381",
    "body": "有个功能，需要做同步读取一个excel里面的多个sheet，并取出sheetname作为类别\r\n\r\n不写监听器的情况下，都是null\r\n\r\n请问有取sheet名称的方法么，有没有获取sheet数量的方法",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1381/comments",
    "author": "chentao-cz",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-06-09T07:53:49Z",
        "body": "参照常见问题。"
      }
    ]
  },
  {
    "number": 1371,
    "title": "使用版本2.2.3，指定模板写入excel报错，Package should contain a content type part [M1.13]",
    "created_at": "2020-06-04T16:01:29Z",
    "closed_at": "2020-06-06T05:08:25Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1371",
    "body": "window正常，centos上报如下错误。\r\n**异常代码**\r\n```java\r\n  ExcelWriter excelWriter = EasyExcel.write(saveFilePath).withTemplate(templateFileName).build();\r\n写入的时候报错\r\n\r\n```\r\n**异常提示**\r\n com.alibaba.excel.exception.ExcelGenerateException: Create workbook failure\r\n\tat com.alibaba.excel.context.WriteContextImpl.<init>(WriteContextImpl.java:87)\r\n\tat com.alibaba.excel.write.ExcelBuilderImpl.<init>(ExcelBuilderImpl.java:35)\r\n\tat com.alibaba.excel.ExcelWriter.<init>(ExcelWriter.java:47)\r\n\tat com.alibaba.excel.write.builder.ExcelWriterBuilder.build(ExcelWriterBuilder.java:130)\r\n\tat com.ikas.msc.service.impl.OlapOfflineServiceImpl.exportHistoryResultDetail(OlapOfflineServiceImpl.java:889)\r\n\tat com.ikas.msc.service.impl.OlapOfflineServiceImpl$$FastClassBySpringCGLIB$$ccc4e2b5.invoke(<generated>)\r\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)\r\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:669)\r\n\tat com.ikas.msc.service.impl.OlapOfflineServiceImpl$$EnhancerBySpringCGLIB$$6a5b79ff.exportHistoryResultDetail(<generated>)\r\n\tat com.ikas.msc.service.impl.OlapOfflineServiceImpl$$FastClassBySpringCGLIB$$ccc4e2b5.invoke(<generated>)\r\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)\r\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:669)\r\n\tat com.ikas.msc.service.impl.OlapOfflineServiceImpl$$EnhancerBySpringCGLIB$$258420b.exportHistoryResultDetail(<generated>)\r\n\tat com.ikas.msc.controller.OlapOfflineController.exportExcel(OlapOfflineController.java:300)\r\n\tat com.ikas.msc.controller.OlapOfflineController$$FastClassBySpringCGLIB$$9a69c47f.invoke(<generated>)\r\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)\r\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)\r\n\tat org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:168)\r\n\tat org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)\r\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)\r\n\tat com.ikas.msc.controller.OlapOfflineController$$EnhancerBySpringCGLIB$$9c61f0bd.exportExcel(<generated>)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:660)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:741)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)\r\n\tat org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)\r\n\tat org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)\r\n\tat org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)\r\n\tat org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)\r\n\tat org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)\r\n\tat org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)\r\n\tat org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)\r\n\tat org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)\r\n\tat org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)\r\n\tat org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)\r\n\tat org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:167)\r\n\tat org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:80)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.boot.web.support.ErrorPageFilter.doFilter(ErrorPageFilter.java:115)\r\n\tat org.springframework.boot.web.support.ErrorPageFilter.access$000(ErrorPageFilter.java:59)\r\n\tat org.springframework.boot.web.support.ErrorPageFilter$1.doFilterInternal(ErrorPageFilter.java:90)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.springframework.boot.web.support.ErrorPageFilter.doFilter(ErrorPageFilter.java:108)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:543)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)\r\n\tat org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:690)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:615)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:818)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1627)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.poi.POIXMLException: org.apache.poi.openxml4j.exceptions.InvalidFormatException: Package should contain a content type part [M1.13]\r\n\tat org.apache.poi.util.PackageHelper.open(PackageHelper.java:39)\r\n\tat org.apache.poi.xssf.usermodel.XSSFWorkbook.<init>(XSSFWorkbook.java:295)\r\n\tat com.alibaba.excel.util.WorkBookUtil.createWorkBook(WorkBookUtil.java:32)\r\n\tat com.alibaba.excel.context.WriteContextImpl.<init>(WriteContextImpl.java:85)\r\n\t... 103 more\r\nCaused by: org.apache.poi.openxml4j.exceptions.InvalidFormatException: Package should contain a content type part [M1.13]\r\n\tat org.apache.poi.openxml4j.opc.ZipPackage.getPartsImpl(ZipPackage.java:292)\r\n\tat org.apache.poi.openxml4j.opc.OPCPackage.getParts(OPCPackage.java:756)\r\n\tat org.apache.poi.openxml4j.opc.OPCPackage.open(OPCPackage.java:327)\r\n\tat org.apache.poi.util.PackageHelper.open(PackageHelper.java:37)\r\n\t... 106 more\r\n**建议描述**\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1371/comments",
    "author": "Tongnm",
    "comments": [
      {
        "user": "Vico-cuiym",
        "created_at": "2021-06-04T01:40:24Z",
        "body": "> window正常，centos上报如下错误。\r\n> **异常代码**\r\n> \r\n> ```java\r\n>   ExcelWriter excelWriter = EasyExcel.write(saveFilePath).withTemplate(templateFileName).build();\r\n> 写入的时候报错\r\n> ```\r\n> \r\n> **异常提示**\r\n> com.alibaba.excel.exception.ExcelGenerateException: Create workbook failure\r\n> at com.alibaba.excel.context.WriteContextImpl.(WriteContextImpl.java:87)\r\n> at com.alibaba.excel.write.ExcelBuilderImpl.(ExcelBuilderImpl.java:35)\r\n> at com.alibaba.excel.ExcelWriter.(ExcelWriter.java:47)\r\n> at com.alibaba.excel.write.builder.ExcelWriterBuilder.build(ExcelWriterBuilder.java:130)\r\n> at com.ikas.msc.service.impl.OlapOfflineServiceImpl.exportHistoryResultDetail(OlapOfflineServiceImpl.java:889)\r\n> at com.ikas.msc.service.impl.OlapOfflineServiceImpl$$FastClassBySpringCGLIB$$ccc4e2b5.invoke()\r\n> at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)\r\n> at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:669)\r\n> at com.ikas.msc.service.impl.OlapOfflineServiceImpl$$EnhancerBySpringCGLIB$$6a5b79ff.exportHistoryResultDetail()\r\n> at com.ikas.msc.service.impl.OlapOfflineServiceImpl$$FastClassBySpringCGLIB$$ccc4e2b5.invoke()\r\n> at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)\r\n> at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:669)\r\n> at com.ikas.msc.service.impl.OlapOfflineServiceImpl$$EnhancerBySpringCGLIB$$258420b.exportHistoryResultDetail()\r\n> at com.ikas.msc.controller.OlapOfflineController.exportExcel(OlapOfflineController.java:300)\r\n> at com.ikas.msc.controller.OlapOfflineController$$FastClassBySpringCGLIB$$9a69c47f.invoke()\r\n> at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)\r\n> at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)\r\n> at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)\r\n> at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)\r\n> at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:168)\r\n> at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)\r\n> at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)\r\n> at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)\r\n> at com.ikas.msc.controller.OlapOfflineController$$EnhancerBySpringCGLIB$$9c61f0bd.exportExcel()\r\n> at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n> at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n> at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n> at java.lang.reflect.Method.invoke(Method.java:498)\r\n> at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)\r\n> at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)\r\n> at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)\r\n> at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)\r\n> at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)\r\n> at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)\r\n> at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)\r\n> at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)\r\n> at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)\r\n> at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)\r\n> at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)\r\n> at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)\r\n> at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)\r\n> at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\r\n> at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n> at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)\r\n> at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n> at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n> at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)\r\n> at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)\r\n> at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)\r\n> at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)\r\n> at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)\r\n> at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)\r\n> at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)\r\n> at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)\r\n> at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)\r\n> at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)\r\n> at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)\r\n> at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)\r\n> at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n> at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n> at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)\r\n> at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n> at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n> at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n> at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)\r\n> at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n> at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n> at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n> at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)\r\n> at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n> at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n> at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n> at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:167)\r\n> at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:80)\r\n> at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n> at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n> at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)\r\n> at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n> at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n> at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n> at org.springframework.boot.web.support.ErrorPageFilter.doFilter(ErrorPageFilter.java:115)\r\n> at org.springframework.boot.web.support.ErrorPageFilter.access$000(ErrorPageFilter.java:59)\r\n> at org.springframework.boot.web.support.ErrorPageFilter$1.doFilterInternal(ErrorPageFilter.java:90)\r\n> at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n> at org.springframework.boot.web.support.ErrorPageFilter.doFilter(ErrorPageFilter.java:108)\r\n> at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n> at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n> at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)\r\n> at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)\r\n> at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:543)\r\n> at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)\r\n> at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)\r\n> at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:690)\r\n> at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)\r\n> at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)\r\n> at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:615)\r\n> at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n> at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:818)\r\n> at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1627)\r\n> at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n> at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n> at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n> at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n> at java.lang.Thread.run(Thread.java:748)\r\n> Caused by: org.apache.poi.POIXMLException: org.apache.poi.openxml4j.exceptions.InvalidFormatException: Package should contain a content type part [M1.13]\r\n> at org.apache.poi.util.PackageHelper.open(PackageHelper.java:39)\r\n> at org.apache.poi.xssf.usermodel.XSSFWorkbook.(XSSFWorkbook.java:295)\r\n> at com.alibaba.excel.util.WorkBookUtil.createWorkBook(WorkBookUtil.java:32)\r\n> at com.alibaba.excel.context.WriteContextImpl.(WriteContextImpl.java:85)\r\n> ... 103 more\r\n> Caused by: org.apache.poi.openxml4j.exceptions.InvalidFormatException: Package should contain a content type part [M1.13]\r\n> at org.apache.poi.openxml4j.opc.ZipPackage.getPartsImpl(ZipPackage.java:292)\r\n> at org.apache.poi.openxml4j.opc.OPCPackage.getParts(OPCPackage.java:756)\r\n> at org.apache.poi.openxml4j.opc.OPCPackage.open(OPCPackage.java:327)\r\n> at org.apache.poi.util.PackageHelper.open(PackageHelper.java:37)\r\n> ... 106 more\r\n> **建议描述**\r\n\r\n哥，我也遇到了，你是怎么解决的"
      },
      {
        "user": "zhangyiyi1221",
        "created_at": "2023-03-20T06:42:48Z",
        "body": "哥，我也遇到了，你是怎么解决的"
      }
    ]
  },
  {
    "number": 1370,
    "title": "表头校验",
    "created_at": "2020-06-04T09:26:36Z",
    "closed_at": "2020-06-09T08:04:01Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1370",
    "body": "问题描述：\r\n      对于自定义导入的JavaBean，已经通过 ExcelProperty 指定了列名，能否指定某些字段的列名在导入的excel的表头中必须存在，不存在则提示错误？",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1370/comments",
    "author": "einherjarcai",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-06-09T08:04:01Z",
        "body": "这个需要自己在导入前校验数据。"
      }
    ]
  },
  {
    "number": 1369,
    "title": "为什么指定了导出的格式为 .xlsx 但导出文件格式扔为 .xls",
    "created_at": "2020-06-04T08:46:41Z",
    "closed_at": "2020-06-09T08:04:19Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1369",
    "body": "为什么指定了导出的格式为 .xlsx 但导出文件格式扔为 .xls\r\n恳请大家指点下",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1369/comments",
    "author": "cy930707",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-06-09T08:04:19Z",
        "body": "请参照demo书写 默认导出xlsx"
      }
    ]
  },
  {
    "number": 1364,
    "title": "excelWriter.finish()之后没有反应，程序突然中断",
    "created_at": "2020-06-01T10:18:43Z",
    "closed_at": "2020-06-09T08:06:38Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1364",
    "body": "com.alibaba.excel.exception.ExcelGenerateException: IO error",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1364/comments",
    "author": "HTT1995",
    "comments": [
      {
        "user": "HTT1995",
        "created_at": "2020-06-01T10:19:19Z",
        "body": "版本：1.1.2-beta5\r\npoi版本：4.1.0"
      },
      {
        "user": "HTT1995",
        "created_at": "2020-06-02T06:19:07Z",
        "body": "debug程序到excelWriter.finish()，既没有报异常也没有继续执行"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2020-06-09T08:06:38Z",
        "body": "这个需要打印下 gc日志。是否内存超了。"
      }
    ]
  },
  {
    "number": 1354,
    "title": "请教一下：怎么获取每个单元格的数据类型？第一行表头的数据类型可以获取到，其他行怎么获取？",
    "created_at": "2020-05-29T09:56:36Z",
    "closed_at": "2020-06-09T08:09:00Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1354",
    "body": "",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1354/comments",
    "author": "denlaku",
    "comments": [
      {
        "user": "junlinmeng",
        "created_at": "2020-05-31T13:09:15Z",
        "body": "`  for (int rowNum = 1; rowNum < rowCount; rowNum++) {\r\n            Row row1 = sheet.getRow(rowNum);\r\n            if (row1 != null){\r\n                int countNum = row1.getPhysicalNumberOfCells();\r\n                for(int column = 0;column < countNum;column++){\r\n                    int cellType = row1.getCell(column).getCellType();\r\n                    Cell cell = row1.getCell(column);\r\n                    switch (cellType){\r\n                        case HSSFCell.CELL_TYPE_STRING:\r\n                            System.out.print(\"[字符串]\");\r\n                            value = cell.getStringCellValue();\r\n                            break;\r\n                        case HSSFCell.CELL_TYPE_BOOLEAN:\r\n                            System.out.print(\"[布尔值]\");\r\n                            value = String.valueOf(cell.getBooleanCellValue());\r\n                            break;\r\n                        case HSSFCell.CELL_TYPE_NUMERIC:\r\n                            System.out.print(\"[数字类型]\");\r\n                            if(HSSFDateUtil.isCellDateFormatted(cell)){\r\n                                System.out.println(\"[转换为日期输出]\");\r\n                                Date date = cell.getDateCellValue();\r\n                                value = new DateTime(date).toString(\"yyyy-MM-dd\");\r\n                            }else{\r\n                                System.out.print(\"[转换为数字输出]\");\r\n                                value = String.valueOf(cell.getNumericCellValue());\r\n                            }\r\n                            break;\r\n                        case HSSFCell.CELL_TYPE_ERROR:\r\n                            System.out.println(\"错误\");\r\n                            break;\r\n                    }\r\n                    System.out.println(value);\r\n                }\r\n            }\r\n        }`\r\n      "
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2020-06-09T08:09:00Z",
        "body": "监听器的`invokehead`"
      }
    ]
  },
  {
    "number": 1336,
    "title": "自动添加序号列",
    "created_at": "2020-05-22T06:01:49Z",
    "closed_at": "2020-05-22T06:20:18Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1336",
    "body": "如题：有没有配置或者方便的方式给sheet页第一列添加一列序号列",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1336/comments",
    "author": "xfh-git",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-05-22T06:20:18Z",
        "body": "这个需要自己多一个字段 "
      }
    ]
  },
  {
    "number": 1318,
    "title": "关于版本选择",
    "created_at": "2020-05-18T03:34:17Z",
    "closed_at": "2020-05-22T06:36:27Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1318",
    "body": "您好，我想咨询一下，EASYEXCEL的这些开源版本中，哪个版本是稳定版呢，您建议使用哪个版本呢",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1318/comments",
    "author": "kouchenghao",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-05-22T06:36:27Z",
        "body": "最新版。"
      }
    ]
  },
  {
    "number": 1313,
    "title": "只有在写入数据的时候才能设置下拉选项格式吗",
    "created_at": "2020-05-15T03:18:56Z",
    "closed_at": "2020-05-22T06:33:39Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1313",
    "body": "\r\n**如题：只有在写入数据的时候才能设置下拉选项吗****\r\n\r\n我想在读取excel或者设置excel头的时候就设置某列的下拉选项格式，可以实现吗\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1313/comments",
    "author": "zzfer",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-05-22T06:33:39Z",
        "body": "这个需要自定义拦截器实现。拦截创建sheet的事件。"
      }
    ]
  },
  {
    "number": 1307,
    "title": "读取包含某个关键字的特定列",
    "created_at": "2020-05-12T08:34:02Z",
    "closed_at": "2020-05-14T06:59:30Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1307",
    "body": "如果多个文件的表头字段名称不是统一的，但是表示的意思是同一个，里面都包含一个关键字可以筛选出来，可以通过这个关键字读取不同文件的特定列吗？比如说一个文件里面有“固件版本”这个字段，然后另外一个文件里面叫“设备固件”。\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1307/comments",
    "author": "jiangdailun",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-05-14T06:59:30Z",
        "body": "目前只能根据index来指定。"
      }
    ]
  },
  {
    "number": 1305,
    "title": "如何让填充的Date不变成字符串，而是根据excel模板展示时间格式",
    "created_at": "2020-05-12T03:20:40Z",
    "closed_at": "2020-05-14T07:01:08Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1305",
    "body": "如何让填充的Date不变成字符串，而是根据excel模板展示时间格式",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1305/comments",
    "author": "joey-lucky",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-05-14T07:01:07Z",
        "body": "目前版本非常复杂需要自定义拦截实现。后续版本会考虑。"
      }
    ]
  },
  {
    "number": 1287,
    "title": "求助：导入一个7M左右大小的.xlsx文件，报异常信息",
    "created_at": "2020-04-30T05:19:12Z",
    "closed_at": "2020-04-30T10:31:26Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1287",
    "body": "\r\n**异常代码**\r\n```java\r\nInputStream ins = file.getInputStream();\r\nExcelListener listen = new ExcelListener(tableName);\r\n第一种写法：\r\nEasyExcel.read(ins,listen).readCache(new Ehcache(20)).doReadAll();\r\n第二种写法：\r\nExcelReader ereader = EasyExcel.read(ins,listen).build();\r\n```\r\n**异常提示**\r\ncom.alibaba.excel.exception.ExcelAnalysisException: java.lang.NoSuchMethodError: org.terracotta.statistics.StatisticsManager.tags([Ljava/lang/String;)Ljava/util/Set;\r\nat com.alibaba.excel.analysis.ExcelAnalyserImpl.<init>(ExcelAnalyserImpl.java:51)\r\n**建议描述**\r\n1.两种写法在读同一个7M左右（7000多条数据）的xlsx文件时都报异常了\r\n2.项目中自己依赖的可能影响到的jar:net.sf.ehcache-version-2.10.4\r\n试了好多次没有解决这个异常，请大家帮忙！",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1287/comments",
    "author": "66coder66",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-04-30T10:31:26Z",
        "body": "`ehcache`至少3.4.0"
      },
      {
        "user": "66coder66",
        "created_at": "2020-05-07T02:52:18Z",
        "body": "在保持项目jar包不变的情况下，针对我的项目，引入org.ehcache.ehcache版本高于3.5的jar解决此异常"
      },
      {
        "user": "angiely1115",
        "created_at": "2021-05-25T02:10:59Z",
        "body": "我这边org.ehcache.ehcache版本3.6.3;net.sf.ehcache版本2.10.6也有此异常"
      }
    ]
  },
  {
    "number": 1286,
    "title": "是否可以读取Excel中的图片",
    "created_at": "2020-04-29T07:38:26Z",
    "closed_at": "2020-04-30T10:33:31Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1286",
    "body": "是否可以读取Excel中的图片",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1286/comments",
    "author": "renw87",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-04-30T10:33:31Z",
        "body": "目前不支持。建议使用poi"
      }
    ]
  },
  {
    "number": 1269,
    "title": "下载excel时，无法写远程图片到该excel",
    "created_at": "2020-04-26T07:23:14Z",
    "closed_at": "2020-04-27T10:47:06Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1269",
    "body": "```java\r\neasyexcel/src/test/java/com/alibaba/easyexcel/test/demo/web/WebTest.java /void download(HttpServletResponse response)\r\n```\r\n如果所写数据有个属性是图片(类型是URL)，则该图片无法写入excel\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1269/comments",
    "author": "topicstudy",
    "comments": [
      {
        "user": "dota17",
        "created_at": "2020-04-27T02:42:45Z",
        "body": "检查一下url能不能正常访问，有可能是下载不了图片导致的"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2020-04-27T10:47:06Z",
        "body": "读取图片的代码如下:\r\n```java\r\ntry {\r\n            inputStream = value.openStream();\r\n            byte[] bytes = IoUtils.toByteArray(inputStream);\r\n            return new CellData(bytes);\r\n        } finally {\r\n            if (inputStream != null) {\r\n                inputStream.close();\r\n            }\r\n        }\r\n```\r\n自己可以尝试下。"
      }
    ]
  },
  {
    "number": 1267,
    "title": "easyexcel如何导出公式",
    "created_at": "2020-04-25T05:32:33Z",
    "closed_at": "2020-04-27T11:03:26Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1267",
    "body": "easyexcel如何导出公式\r\n横向填充如何合并居中",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1267/comments",
    "author": "williamsys",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-04-27T11:03:26Z",
        "body": "成员变量用`CellData`即可。\r\n自定义合并策略。"
      }
    ]
  },
  {
    "number": 1256,
    "title": "同步读的时候如何读取多个或所有sheet",
    "created_at": "2020-04-21T09:17:09Z",
    "closed_at": "2020-04-22T10:44:01Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1256",
    "body": "请问如何在同步读的情况下读取多个sheet页？\r\n\r\n**异常代码**\r\n```java\r\n// 这里 需要指定读用哪个class去读，然后读取第一个sheet 同步读取会自动finish \r\n// 同步读取只看到了读一个sheet的情况\r\n List<DemoData> list = EasyExcel.read(fileName).head(DemoData.class).sheet().doReadSync();\r\n\r\n// 我是这么处理的\r\nExcelReader excelReader = EasyExcel.read(saveFile).build();\r\n// 先获取所有sheet\r\nList<ReadSheet> readSheets = excelReader.excelExecutor().sheetList();\r\nList<Object> allList = new ArrayList<>();\r\n// 遍历读取每个sheet\r\nfor (int i = 0; i < readSheets.size(); ++i) {\r\n       List<Object> list = EasyExcel.read(saveFile).head(parseResult.getData().getClass()).sheet(i).doReadSync();\r\n       allList.addAll(list);\r\n }\r\n```\r\n不知道有什么好的方法吗",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1256/comments",
    "author": "einherjarcai",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-04-22T10:44:01Z",
        "body": "调用`readAll` 方法"
      }
    ]
  },
  {
    "number": 1250,
    "title": "2.2.0-beta2版本读取单元格格式为货币的值带千分号，如何转为数值",
    "created_at": "2020-04-20T01:48:15Z",
    "closed_at": "2020-04-22T09:26:36Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1250",
    "body": "是非创建对象方式读取的",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1250/comments",
    "author": "kakuTong",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-04-22T09:26:36Z",
        "body": "这个需要自己定义拦截器来覆盖`StringNumberConverter`,然后将\r\n```java\r\n // Excel defines formatting\r\n        if (cellData.getDataFormat() != null && !StringUtils.isEmpty(cellData.getDataFormatString())) {\r\n            return NumberDataFormatterUtils.format(cellData.getNumberValue().doubleValue(), cellData.getDataFormat(),\r\n                cellData.getDataFormatString(), globalConfiguration);\r\n        }\r\n```\r\n删了 所有的拿到都是数字了。"
      }
    ]
  },
  {
    "number": 1248,
    "title": "关于如何自定义head头部单元格合并策略问题",
    "created_at": "2020-04-19T02:35:10Z",
    "closed_at": "2020-04-22T09:22:11Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1248",
    "body": "\r\n**建议描述**\r\n大佬你好，请问下目前easyexcel框架支持自定义head头部单元格合并策略吗，目前似乎源码里head类中只能使用loopMergerstrategy策略，只要head()方法的list元素中有相同的值就会自动合并，无法达到自定义合并效果，盼回复~",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1248/comments",
    "author": "huangfenghai",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-04-22T09:22:11Z",
        "body": "可以自己参照`LoopMergeStrategy` 书写，只要`isHead`参数等于`true`的时候，就是可以处理自己的合并。"
      }
    ]
  },
  {
    "number": 1243,
    "title": "如何在自定义Listener中读取外层参数",
    "created_at": "2020-04-17T03:10:09Z",
    "closed_at": "2020-04-17T03:52:43Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1243",
    "body": "       String paramConfigs = \"2233\";\r\n            ExcelImportListener excelImportListener = new ExcelImportListener();\r\n            ExcelReader build = EasyExcel.read(file.getInputStream()).build();\r\n            List<ReadSheet> readSheets = build.excelExecutor().sheetList();\r\n            //多sheet处理\r\n            //1.参数传递\r\n            for (ReadSheet readSheet : readSheets) {\r\n                EasyExcel.read(file.getInputStream()).sheet(readSheet.getSheetNo()).doReadSync();\r\n            }\r\n\r\n\r\n如何在自定义监听中获取paramConfigs  这个参数呢",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1243/comments",
    "author": "leslie010203",
    "comments": [
      {
        "user": "leslie010203",
        "created_at": "2020-04-17T03:52:53Z",
        "body": "晓得了"
      },
      {
        "user": "wangyuhuich",
        "created_at": "2020-06-16T01:02:38Z",
        "body": "请问这个问题是如何解决的？"
      },
      {
        "user": "leslie010203",
        "created_at": "2020-06-16T02:09:44Z",
        "body": "在listener中定义变量，然后用到的时候set进去\r\n\r\n\r\n\r\n\r\n------------------&nbsp;原始邮件&nbsp;------------------\r\n发件人:&nbsp;\"王昱辉\"<notifications@github.com&gt;;\r\n发送时间:&nbsp;2020年6月16日(星期二) 上午9:02\r\n收件人:&nbsp;\"alibaba/easyexcel\"<easyexcel@noreply.github.com&gt;;\r\n抄送:&nbsp;\"超级美的吴大梦\"<872263002@qq.com&gt;;\"State change\"<state_change@noreply.github.com&gt;;\r\n主题:&nbsp;Re: [alibaba/easyexcel] 如何在自定义Listener中读取外层参数 (#1243)\r\n\r\n\r\n\r\n\r\n\r\n \r\n请问这个问题是如何解决的？\r\n \r\n—\r\nYou are receiving this because you modified the open/close state.\r\nReply to this email directly, view it on GitHub, or unsubscribe."
      },
      {
        "user": "wangyuhuich",
        "created_at": "2020-06-16T02:20:34Z",
        "body": "\r\n明白了，谢谢。\r\nMap<String, Object> param= new HashMap<>();\r\nExcelReader reader = EasyExcel.read(file.getInputStream()).customObject(param).build();"
      }
    ]
  },
  {
    "number": 1233,
    "title": "动态表头",
    "created_at": "2020-04-13T09:00:26Z",
    "closed_at": "2020-04-22T10:57:59Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1233",
    "body": "class DemoData\r\n  private String abc;\r\n  private String bcd;\r\n  private List<DemoData1> demoData1;\r\n\r\n这种情况下 如何使DemoData1的数据导出到excel，并使demoData1的表头和数据展示在bcd下。\r\n效果类似下面这种\r\n       bcd\r\na        b        c   --------------------------abc为demoData1种的字段 data为数据\r\ndata data   data\r\n\r\n谢谢",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1233/comments",
    "author": "pengchun2222",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-04-22T10:57:59Z",
        "body": "目前不支持对象嵌套"
      }
    ]
  },
  {
    "number": 1215,
    "title": "导入的时候，合并单元格的值处理",
    "created_at": "2020-04-06T13:01:27Z",
    "closed_at": "2020-04-22T11:12:52Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1215",
    "body": "导入的时候，如果有合并单元格的区域，可以赋值么？发现导入的时候，合并单元格的区域只有左上角的格是有值的\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1215/comments",
    "author": "zhengjun1202",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-04-22T11:12:52Z",
        "body": "这个目前没法处理。因为里面就是这么存储的。但是已经加入了获取合并单元格的信息。"
      }
    ]
  },
  {
    "number": 1214,
    "title": "android平台支持吗",
    "created_at": "2020-04-05T06:28:17Z",
    "closed_at": "2020-04-22T11:13:39Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1214",
    "body": "请问easyExcel  在安卓平台上支持吗",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1214/comments",
    "author": "jkkey",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-04-22T11:13:39Z",
        "body": "这个需要自己尝试。"
      }
    ]
  },
  {
    "number": 1209,
    "title": "读取指定行数",
    "created_at": "2020-04-01T05:44:49Z",
    "closed_at": "2020-04-22T11:17:37Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1209",
    "body": "同步返回怎么指定只解析一行出来",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1209/comments",
    "author": "fefredgws",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-04-22T11:17:37Z",
        "body": "嗯 一行一行读取。"
      }
    ]
  },
  {
    "number": 1205,
    "title": "IncompatibleClassChangeError",
    "created_at": "2020-03-31T08:50:26Z",
    "closed_at": "2020-04-22T11:22:35Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1205",
    "body": "\r\n**异常代码**\r\n2020-03-31-16:41:33.622 [http-bio-9009-exec-10] ERROR c.i.c.e.w.c.s.SysMappingController - 读Excel错误\r\ncom.alibaba.excel.exception.ExcelAnalysisException: java.lang.IncompatibleClassChangeError: class net.sf.cglib.core.DebuggingClassWriter has interface org.objectweb.asm.ClassVisitor as super class\r\n\tat com.alibaba.excel.analysis.ExcelAnalyserImpl.analysis(ExcelAnalyserImpl.java:126) ~[easyexcel-2.2.0-beta2.jar:na]\r\n\tat com.alibaba.excel.ExcelReader.read(ExcelReader.java:180) ~[easyexcel-2.2.0-beta2.jar:na]\r\n\tat com.alibaba.excel.ExcelReader.read(ExcelReader.java:170) ~[easyexcel-2.2.0-beta2.jar:na]\r\n\tat com.alibaba.excel.read.builder.ExcelReaderSheetBuilder.doRead(ExcelReaderSheetBuilder.java:65) ~[easyexcel-2.2.0-beta2.jar:na]\r\n\tat com.icfcc.credit.enterprise.web.custom.sysmapping.SysMappingController.upload(SysMappingController.java:275) ~[SysMappingController.class:na]\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_121]\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_121]\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_121]\r\n\tat java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_121]\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:116) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]\r\n\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:646) [servlet-api.jar:na]\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:727) [servlet-api.jar:na]\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:303) [catalina.jar:7.0.53]\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208) [catalina.jar:7.0.53]\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) [tomcat7-websocket.jar:7.0.53]\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241) [catalina.jar:7.0.53]\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208) [catalina.jar:7.0.53]\r\n\tat com.icfcc.credit.common.authorization.filter.Authorization.checkButtonPermission(Authorization.java:208) [authorization-0.0.1-SNAPSHOT.jar:na]\r\n\tat com.icfcc.credit.common.authorization.filter.Authorization.checkUrl(Authorization.java:160) [authorization-0.0.1-SNAPSHOT.jar:na]\r\n\tat com.icfcc.credit.common.authorization.filter.Authorization.doFilter(Authorization.java:98) [authorization-0.0.1-SNAPSHOT.jar:na]\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241) [catalina.jar:7.0.53]\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208) [catalina.jar:7.0.53]\r\n\tat com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123) [druid-1.0.19.jar:1.0.19]\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241) [catalina.jar:7.0.53]\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208) [catalina.jar:7.0.53]\r\n\tat com.opensymphony.sitemesh.webapp.SiteMeshFilter.obtainContent(SiteMeshFilter.java:129) [sitemesh-2.4.2.jar:na]\r\n\tat com.opensymphony.sitemesh.webapp.SiteMeshFilter.doFilter(SiteMeshFilter.java:77) [sitemesh-2.4.2.jar:na]\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241) [catalina.jar:7.0.53]\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208) [catalina.jar:7.0.53]\r\n\tat org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter.doFilterInternal(OpenEntityManagerInViewFilter.java:178) [spring-orm-4.3.7.RELEASE.jar:4.3.7.RELEASE]\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241) [catalina.jar:7.0.53]\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208) [catalina.jar:7.0.53]\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241) [catalina.jar:7.0.53]\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208) [catalina.jar:7.0.53]\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:220) [catalina.jar:7.0.53]\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:122) [catalina.jar:7.0.53]\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:501) [catalina.jar:7.0.53]\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:170) [catalina.jar:7.0.53]\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:98) [catalina.jar:7.0.53]\r\n\tat org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:950) [catalina.jar:7.0.53]\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:116) [catalina.jar:7.0.53]\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:408) [catalina.jar:7.0.53]\r\n\tat org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1040) [tomcat-coyote.jar:7.0.53]\r\n\tat org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:607) [tomcat-coyote.jar:7.0.53]\r\n\tat org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:315) [tomcat-coyote.jar:7.0.53]\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [na:1.8.0_121]\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [na:1.8.0_121]\r\n\tat java.lang.Thread.run(Thread.java:745) [na:1.8.0_121]\r\nCaused by: java.lang.IncompatibleClassChangeError: class net.sf.cglib.core.DebuggingClassWriter has interface org.objectweb.asm.ClassVisitor as super class\r\n\tat java.lang.ClassLoader.defineClass1(Native Method) ~[na:1.8.0_121]\r\n\tat java.lang.ClassLoader.defineClass(ClassLoader.java:763) ~[na:1.8.0_121]\r\n\tat java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142) ~[na:1.8.0_121]\r\n\tat org.apache.catalina.loader.WebappClassLoader.findClassInternal(WebappClassLoader.java:2957) ~[catalina.jar:7.0.53]\r\n\tat org.apache.catalina.loader.WebappClassLoader.findClass(WebappClassLoader.java:1210) ~[catalina.jar:7.0.53]\r\n\tat org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1690) ~[catalina.jar:7.0.53]\r\n\tat org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1571) ~[catalina.jar:7.0.53]\r\n\tat net.sf.cglib.core.DefaultGeneratorStrategy.getClassVisitor(DefaultGeneratorStrategy.java:30) ~[cglib-3.1.jar:na]\r\n\tat net.sf.cglib.core.DefaultGeneratorStrategy.generate(DefaultGeneratorStrategy.java:24) ~[cglib-3.1.jar:na]\r\n\tat net.sf.cglib.core.AbstractClassGenerator.create(AbstractClassGenerator.java:216) ~[cglib-3.1.jar:na]\r\n\tat net.sf.cglib.core.KeyFactory$Generator.create(KeyFactory.java:144) ~[cglib-3.1.jar:na]\r\n\tat net.sf.cglib.core.KeyFactory.create(KeyFactory.java:116) ~[cglib-3.1.jar:na]\r\n\tat net.sf.cglib.core.KeyFactory.create(KeyFactory.java:108) ~[cglib-3.1.jar:na]\r\n\tat net.sf.cglib.beans.BeanMap$Generator.<clinit>(BeanMap.java:64) ~[cglib-3.1.jar:na]\r\n\tat net.sf.cglib.beans.BeanMap.create(BeanMap.java:56) ~[cglib-3.1.jar:na]\r\n\tat com.alibaba.excel.read.listener.ModelBuildEventListener.buildUserModel(ModelBuildEventListener.java:130) ~[easyexcel-2.2.0-beta2.jar:na]\r\n\tat com.alibaba.excel.read.listener.ModelBuildEventListener.invoke(ModelBuildEventListener.java:38) ~[easyexcel-2.2.0-beta2.jar:na]\r\n\tat com.alibaba.excel.read.listener.ModelBuildEventListener.invoke(ModelBuildEventListener.java:28) ~[easyexcel-2.2.0-beta2.jar:na]\r\n\tat com.alibaba.excel.read.processor.DefaultAnalysisEventProcessor.dealData(DefaultAnalysisEventProcessor.java:100) ~[easyexcel-2.2.0-beta2.jar:na]\r\n\tat com.alibaba.excel.read.processor.DefaultAnalysisEventProcessor.endRow(DefaultAnalysisEventProcessor.java:47) ~[easyexcel-2.2.0-beta2.jar:na]\r\n\tat com.alibaba.excel.analysis.v03.handlers.DummyRecordHandler.processRecord(DummyRecordHandler.java:32) ~[easyexcel-2.2.0-beta2.jar:na]\r\n\tat com.alibaba.excel.analysis.v03.XlsSaxAnalyser.processRecord(XlsSaxAnalyser.java:163) ~[easyexcel-2.2.0-beta2.jar:na]\r\n\tat org.apache.poi.hssf.eventusermodel.MissingRecordAwareHSSFListener.processRecord(MissingRecordAwareHSSFListener.java:158) ~[poi-3.17.jar:3.17]\r\n\tat org.apache.poi.hssf.eventusermodel.FormatTrackingHSSFListener.processRecord(FormatTrackingHSSFListener.java:92) ~[poi-3.17.jar:3.17]\r\n\tat org.apache.poi.hssf.eventusermodel.HSSFRequest.processRecord(HSSFRequest.java:109) ~[poi-3.17.jar:3.17]\r\n\tat org.apache.poi.hssf.eventusermodel.HSSFEventFactory.genericProcessEvents(HSSFEventFactory.java:179) ~[poi-3.17.jar:3.17]\r\n\tat org.apache.poi.hssf.eventusermodel.HSSFEventFactory.processEvents(HSSFEventFactory.java:136) ~[poi-3.17.jar:3.17]\r\n\tat org.apache.poi.hssf.eventusermodel.HSSFEventFactory.processWorkbookEvents(HSSFEventFactory.java:82) ~[poi-3.17.jar:3.17]\r\n\tat org.apache.poi.hssf.eventusermodel.HSSFEventFactory.processWorkbookEvents(HSSFEventFactory.java:54) ~[poi-3.17.jar:3.17]\r\n\tat com.alibaba.excel.analysis.v03.XlsSaxAnalyser.execute(XlsSaxAnalyser.java:137) ~[easyexcel-2.2.0-beta2.jar:na]\r\n\tat com.alibaba.excel.analysis.ExcelAnalyserImpl.analysis(ExcelAnalyserImpl.java:115) ~[easyexcel-2.2.0-beta2.jar:na]\r\n\t... 60 common frames omitted\r\n\r\n\r\n描述：我把easyexcel揉进系统里，就是简单的读excel操作报错。解决了几个jar包冲突后，这个问题不知道怎么解决。\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1205/comments",
    "author": "chyangxi",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-04-22T11:22:34Z",
        "body": "应该是asm 冲突 确认下这个的版本。"
      }
    ]
  },
  {
    "number": 1200,
    "title": "如何通过代码控制@ExcelIgnore和@ExcelProperty注解",
    "created_at": "2020-03-28T11:17:39Z",
    "closed_at": "2020-04-22T11:13:27Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1200",
    "body": "\r\n**代码**\r\n```java\r\n   public class Student{\r\n     @ExcelProperty\r\n     private String name;\r\n}\r\n```\r\n\r\n**问题描述**\r\n我想用代码控制具体的类增加@ExcelIgnore和@ExcelProperty注解，有什么方法，我查找了官方文档，没有找到这样的功能。\r\n\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1200/comments",
    "author": "developers-youcong",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-04-22T11:13:27Z",
        "body": "这个建议直接改源代码。"
      }
    ]
  },
  {
    "number": 1197,
    "title": "向excel写数据时，如何设置autoTrim为false？",
    "created_at": "2020-03-28T03:24:14Z",
    "closed_at": "2020-04-01T02:16:13Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1197",
    "body": "```java\r\nEasyExcel.write(output)\r\n        .registerWriteHandler(new SimpleColumnWidthStyleStrategy(20))\r\n        .head(headList)\r\n        .sheet(\"报表结果\")\r\n        .doWrite(dataList);\r\n```\r\n使用上述方式向easyexcel中写数据时，writer会根据globalConfiguration中autoTrim的值对所有字符串的cell进行trim操作。\r\n但是builder中找不到设置autoTrim的相关方法。",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1197/comments",
    "author": "yangziwen",
    "comments": [
      {
        "user": "yangziwen",
        "created_at": "2020-03-28T03:53:41Z",
        "body": "已通过如下方式手动构造解决，但是还是建议在builder中加上autoTrim和其他一些关键参数的设置方法。\r\n```java\r\nWriteWorkbook workbook = new WriteWorkbook();\r\nworkbook.setAutoTrim(false);\r\nworkbook.setOutputStream(output);\r\nworkbook.getCustomWriteHandlerList().addAll(DefaultWriteHandlerLoader.loadDefaultHandler(true));\r\nworkbook.getCustomWriteHandlerList().add(new SimpleColumnWidthStyleStrategy(20));\r\nworkbook.setHead(headList);\r\nnew ExcelWriterSheetBuilder(new ExcelWriter(workbook))\r\n        .sheetName(\"报表结果\")\r\n        .doWrite(dataList);\r\n```"
      },
      {
        "user": "hhuchang",
        "created_at": "2020-06-17T06:23:54Z",
        "body": "我是这样解决的：\r\nworkbook worksheet 都有autoTrim的参数，\r\n我的例子：\r\nExcelWriter excelWriter=EasyExcel.write(outputstream).withTemplate(fileTemplate_inputStream).build();\r\nWriteSheet writeSheet0=EasyExcel.writerSheet(0).build();\r\nwriteSheet0.setAutoTrim(false);\r\nexcelWriter.fill(fillData,writeSheet0);"
      }
    ]
  },
  {
    "number": 1190,
    "title": "读取excel复杂表头问题",
    "created_at": "2020-03-26T06:08:28Z",
    "closed_at": "2020-04-22T11:26:36Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1190",
    "body": "读取Excel时 复杂表头 读取时出现读取不到的问题。\r\n表头里有简单表头和复杂表头（如第一列表头是第一行和第二行的合并的单元格，第二列表头是第一行是大标题，第二行是小标题）然后按下面方法注释读取\r\n  @ExcelProperty(\"初始点位编码\")\r\n    private String initialPointCoding;//初始点位编码\r\n    @ExcelProperty({\"行政区划\", \"乡\"})\r\n    private String township;\r\n最后发现读取不到第一列的信息能读取到第二列“乡的信息” \r\n上面是问题描述 这里就是想问一下这是一个BUG还是已经有了解决的办法\r\n我们这里的模板可能是有变化的所以不能用index来定位 只能通过名字来匹配，所以想问一下有什么解决办法",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1190/comments",
    "author": "zmj-hub",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-04-22T11:26:36Z",
        "body": "目前仅仅只支持最后一行头去匹配。"
      },
      {
        "user": "GenweiWu",
        "created_at": "2022-07-01T00:57:10Z",
        "body": "有支持的计划吗？"
      }
    ]
  },
  {
    "number": 1189,
    "title": "Converter里面怎么注入spring bean呢",
    "created_at": "2020-03-26T04:03:57Z",
    "closed_at": "2020-03-26T06:07:17Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1189",
    "body": "**异常代码**\r\n```java\r\npublic class PersonIdConverter implements Converter<Integer> {\r\n\t@Autowired\r\n\tprivate  THrPersonService tHrPersonService;\r\n\t@Override\r\n\tpublic Class supportJavaTypeKey() {\r\n\t\treturn Integer.class;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic CellDataTypeEnum supportExcelTypeKey() {\r\n\t\treturn CellDataTypeEnum.STRING;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic Integer convertToJavaData(CellData cellData, ExcelContentProperty excelContentProperty, GlobalConfiguration globalConfiguration) throws Exception {\r\n\t\tString stringValue = cellData.getStringValue();\r\n\t\tInteger personId = tHrPersonService.getOne(Wrappers.<THrPerson>query().lambda().eq(THrPerson::getName,stringValue)).getPersonId();\r\n\t\treturn personId;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic CellData convertToExcelData(Integer integer, ExcelContentProperty excelContentProperty, GlobalConfiguration globalConfiguration) throws Exception {\r\n\t\tString personName= tHrPersonService.getOne(Wrappers.<THrPerson>query().lambda().eq(THrPerson::getPersonId,integer)).getName();\r\n\t\treturn new CellData(personName);\r\n\t}\r\n}\r\n控制层代码\r\n@PostMapping(\"/importRecord\")\r\n\t@SneakyThrows\r\n\tpublic R importRecord(MultipartFile file){\r\n\t\tAnalysisEventListener<THrPersoncardExcel> recordAnalysisEventListener = ExcelUtils.getListener(this.batchInsert(), 10);\r\n\t\tEasyExcel.read(file.getInputStream(), THrPersoncardExcel.class, recordAnalysisEventListener).sheet().doRead();\r\n\t\treturn R.ok(Boolean.TRUE);\r\n\t}\r\nExcelUtils 代码\r\npublic class ExcelUtils {\r\n\t/**\r\n\t * 指定阈值\r\n\t * @param consumer\r\n\t * @param threshold\r\n\t * @param <T>\r\n\t * @return\r\n\t */\r\n\tpublic static <T> AnalysisEventListener<T> getListener(Consumer<List<T>> consumer, int threshold) {\r\n\t\treturn new AnalysisEventListener<T>() {\r\n\t\t\tprivate LinkedList<T> linkedList = new LinkedList<T>();\r\n\r\n\t\t\t@Override\r\n\t\t\tpublic void invoke(T t, AnalysisContext analysisContext) {\r\n\t\t\t\tlinkedList.add(t);\r\n\t\t\t\tif (linkedList.size() == threshold){\r\n\t\t\t\t\tconsumer.accept(linkedList);\r\n\t\t\t\t\tlinkedList.clear();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t@Override\r\n\t\t\tpublic void doAfterAllAnalysed(AnalysisContext analysisContext) {\r\n\t\t\t\tif (linkedList.size() > 0){\r\n\t\t\t\t\tconsumer.accept(linkedList);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * 不指定阈值，阈值默认为10\r\n\t * @param consumer\r\n\t * @param <T>\r\n\t * @return\r\n\t */\r\n\tpublic static <T> AnalysisEventListener<T> getListener(Consumer<List<T>> consumer){\r\n\t\treturn getListener(consumer, 10);\r\n\t}\r\n}\r\n```\r\n**异常提示**\r\ntHrPersonService会报空指针\r\n**建议描述**\r\n在实体添加converter，想把字符串转化为字典的值存到数据库，在converter注入service空指针",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1189/comments",
    "author": "lishaolian",
    "comments": [
      {
        "user": "WayneLee5991",
        "created_at": "2020-03-26T06:02:54Z",
        "body": "三种实现方法或者思路吧，你可以都试试。\r\n1、可以在注册Converter的时候通过构造器参数把你的Bean放进去，EasyExcel.registerConverter(new PersonIdConverter(tHrPersonService))，在Converter就可以使用了，类似于read是的Listener，把DAO当做参数放进去。\r\n2、写一个工具类，加@Component注解，使用@PostConstruct注解把你需要的Bean转化为全局静态，在Converter里调用工具类。类似于这样：\r\n@Component\r\npublic class JWTTokenUtil {\r\n\r\n    @Autowired\r\n    private JWTConfig config;\r\n    private static JWTConfig jwtConfig;\r\n\r\n    @PostConstruct\r\n    public void init(){\r\n        jwtConfig = this.config;\r\n    }\r\n   下面的静态方法就可以使用 jwtconfig了。\r\n\r\n}\r\n3、实现ApplicationContextAware接口，通过ApplicationContext的getBean方法获取你想用的Bean。"
      },
      {
        "user": "lishaolian",
        "created_at": "2020-03-26T06:07:17Z",
        "body": "> 三种实现方法或者思路吧，你可以都试试。\r\n> 1、可以在注册Converter的时候通过构造器参数把你的Bean放进去，EasyExcel.registerConverter(new PersonIdConverter(tHrPersonService))，在Converter就可以使用了，类似于read是的Listener，把DAO当做参数放进去。\r\n> 2、写一个工具类，加@component注解，使用@PostConstruct注解把你需要的Bean转化为全局静态，在Converter里调用工具类。类似于这样：\r\n> @component\r\n> public class JWTTokenUtil {\r\n> \r\n> ```\r\n> @Autowired\r\n> private JWTConfig config;\r\n> private static JWTConfig jwtConfig;\r\n> \r\n> @PostConstruct\r\n> public void init(){\r\n>     jwtConfig = this.config;\r\n> }\r\n> ```\r\n> \r\n> 下面的静态方法就可以使用 jwtconfig了。\r\n> \r\n> }\r\n> 3、实现ApplicationContextAware接口，通过ApplicationContext的getBean方法获取你想用的Bean。\r\n\r\n非常感谢"
      }
    ]
  },
  {
    "number": 1180,
    "title": "使用动态表头的时候，设置的单元格高、宽格式失效",
    "created_at": "2020-03-24T08:10:03Z",
    "closed_at": "2020-08-29T07:05:06Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1180",
    "body": "EasyExcel.write(outputStream, DemoData.class)\r\n       .registerWriteHandler(horizontalCellStyleStrategy)\r\n       .head(head())\r\n       .doWrite(data());\r\n\r\n在实体类中设置了单元格的高宽格式，但是使用动态表头后，设置失效；不知道我的使用方式是否正确，但是我试了很多遍",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1180/comments",
    "author": "xuewuyang",
    "comments": [
      {
        "user": "xuewuyang",
        "created_at": "2020-03-24T08:54:11Z",
        "body": "或者说在动态表头的时候，怎么去设置样式呢"
      },
      {
        "user": "xuewuyang",
        "created_at": "2020-03-24T10:15:47Z",
        "body": "问题已解决，通过使用另外两个策略实现，谢谢"
      },
      {
        "user": "devfat",
        "created_at": "2020-07-01T08:09:07Z",
        "body": "> 问题已解决，通过使用另外两个策略实现，谢谢\r\n\r\n你好，我也遇到了同样的问题，请问你是怎么解决的"
      },
      {
        "user": "xuewuyang",
        "created_at": "2020-07-01T08:19:44Z",
        "body": "> > 问题已解决，通过使用另外两个策略实现，谢谢\r\n> \r\n> 你好，我也遇到了同样的问题，请问你是怎么解决的\r\n\r\nSimpleColumnWidthStyleStrategy\r\nSimpleRowHeightStyleStrategy"
      },
      {
        "user": "devfat",
        "created_at": "2020-07-02T02:06:51Z",
        "body": "好的，了解了，感谢"
      }
    ]
  },
  {
    "number": 1168,
    "title": "导入数字，被转化成科学计数法有什么方案解决吗",
    "created_at": "2020-03-19T03:03:28Z",
    "closed_at": "2020-03-23T11:38:01Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1168",
    "body": "导入数字，被转化成科学计数法有什么方案解决吗",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1168/comments",
    "author": "huangfuliang",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-03-23T11:38:01Z",
        "body": "用`@NumberFormat`注解"
      }
    ]
  },
  {
    "number": 1167,
    "title": "加密文件上传出错",
    "created_at": "2020-03-18T09:37:20Z",
    "closed_at": "2020-03-23T11:39:55Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1167",
    "body": "**异常代码**\r\n```java\r\ncom.alibaba.excel.exception.ExcelCommonException: Convert excel format exception.You can try specifying the 'excelType' yourself\r\n\tat com.alibaba.excel.support.ExcelTypeEnum.valueOf(ExcelTypeEnum.java:71)\r\n\tat com.alibaba.excel.read.metadata.holder.ReadWorkbookHolder.<init>(ReadWorkbookHolder.java:160)\r\n\tat com.alibaba.excel.context.AnalysisContextImpl.<init>(AnalysisContextImpl.java:45)\r\n\tat com.alibaba.excel.analysis.ExcelAnalyserImpl.<init>(ExcelAnalyserImpl.java:44)\r\n\tat com.alibaba.excel.ExcelReader.<init>(ExcelReader.java:143)\r\n\tat com.alibaba.excel.read.builder.ExcelReaderBuilder.build(ExcelReaderBuilder.java:270)",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1167/comments",
    "author": "zhongjunlee",
    "comments": [
      {
        "user": "zhongjunlee",
        "created_at": "2020-03-18T09:40:17Z",
        "body": "Easyexcel 可以处理这种问题吗？"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2020-03-23T11:39:55Z",
        "body": "需要传入参数password，并升级到最新版本。"
      },
      {
        "user": "yinft",
        "created_at": "2020-04-10T09:14:32Z",
        "body": "> 需要传入参数password，并升级到最新版本。\r\n\r\n你好，请问是在哪个方法里传password"
      }
    ]
  },
  {
    "number": 1165,
    "title": "版本升级至2.2.0，写Excel报错",
    "created_at": "2020-03-17T11:57:19Z",
    "closed_at": "2020-03-17T12:04:30Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1165",
    "body": "**异常代码**\r\n```java\r\n   public String uploadToOssCfExcel(List list, Class cls, String fileName) throws Exception{\r\n        try (ByteArrayOutputStream outputStream = new ByteArrayOutputStream()) {\r\n            ExcelWriterBuilder writerBuilder = EasyExcelFactory.write(outputStream, cls);\r\n            ExcelWriter excelWriter = EasyExcel.write(outputStream, cls).build();\r\n            if (CollectionUtils.isEmpty(list)){\r\n                ExcelWriterSheetBuilder sheetWriter = writerBuilder.excelType(ExcelTypeEnum.XLSX).sheet(0);\r\n                sheetWriter.doWrite(list);\r\n            }else {\r\n                int count = (list.size() % SHEET_SIZE == 0) ? (list.size() / SHEET_SIZE) : ((list.size() / SHEET_SIZE) + 1);\r\n                for (int i = 1; i <= count; i++) {\r\n                    WriteSheet writeSheet = EasyExcel.writerSheet(i-1).build();\r\n                    if (i * SHEET_SIZE > list.size()) {\r\n                        excelWriter.write(list.subList((i - 1) * SHEET_SIZE, list.size()), writeSheet);\r\n                        break;\r\n                    } else {\r\n                        excelWriter.write(list.subList((i - 1) * SHEET_SIZE, i * SHEET_SIZE), writeSheet);\r\n                    }\r\n                }\r\n                excelWriter.finish();\r\n            }\r\n            String failureUrl = uploadToOss(BucketFileDirEnum.BASE.getFileDir()  + fileName, outputStream);\r\n            log.info(\"文件上传成功，url={}\", failureUrl);\r\n            return failureUrl;\r\n        }catch (Exception e){\r\n            log.info(\"文件上传异常\", e);\r\n            throw e;\r\n        }\r\n```\r\n**异常提示**\r\nExcelWriter excelWriter = EasyExcel.write(outputStream, cls).build();//该行报错\r\n请提供完整的异常提示,记住是全部异常！\r\n异常：\r\n2020-03-17 19:46:51.972 [] [main:150456] [OssProxy.java:210] - [INFO] 文件上传异常\r\ncom.alibaba.excel.exception.ExcelGenerateException: java.lang.NoClassDefFoundError: org/apache/poi/POIXMLTypeLoader\r\n\tat com.alibaba.excel.write.ExcelBuilderImpl.<init>(ExcelBuilderImpl.java:41)\r\n\tat com.alibaba.excel.ExcelWriter.<init>(ExcelWriter.java:47)\r\n\tat com.alibaba.excel.write.builder.ExcelWriterBuilder.build(ExcelWriterBuilder.java:130)\r\n\tat com.clubfactory.ic.core.proxy.OssProxy.uploadToOssCfExcel(OssProxy.java:189)\r\n\tat com.clubfactory.ic.core.service.impl.BaseInfoServiceImpl.downloadHsCodeInfo(BaseInfoServiceImpl.java:312)\r\n\tat com.clubfactory.ic.core.service.impl.BaseInfoServiceImpl$$FastClassBySpringCGLIB$$35b37403.invoke(<generated>)\r\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)\r\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)\r\n\tat com.clubfactory.ic.core.service.impl.BaseInfoServiceImpl$$EnhancerBySpringCGLIB$$45e56e3f.downloadHsCodeInfo(<generated>)\r\n\tat com.clubfactory.ic.server.BaseInfoTest.testDownloadInfo(BaseInfoTest.java:84)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\r\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\r\n\tat org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks.evaluate(RunBeforeTestExecutionCallbacks.java:73)\r\n\tat org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks.evaluate(RunAfterTestExecutionCallbacks.java:83)\r\n\tat org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)\r\n\tat org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)\r\n\tat org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)\r\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)\r\n\tat org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:230)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:58)\r\nCaused by: java.lang.NoClassDefFoundError: org/apache/poi/POIXMLTypeLoader\r\n\tat org.openxmlformats.schemas.spreadsheetml.x2006.main.CTWorkbook$Factory.newInstance(Unknown Source)\r\n\tat org.apache.poi.xssf.usermodel.XSSFWorkbook.onWorkbookCreate(XSSFWorkbook.java:460)\r\n\tat org.apache.poi.xssf.usermodel.XSSFWorkbook.<init>(XSSFWorkbook.java:263)\r\n\tat org.apache.poi.xssf.usermodel.XSSFWorkbook.<init>(XSSFWorkbook.java:257)\r\n\tat org.apache.poi.xssf.usermodel.XSSFWorkbook.<init>(XSSFWorkbook.java:245)\r\n\tat org.apache.poi.xssf.streaming.SXSSFWorkbook.<init>(SXSSFWorkbook.java:243)\r\n\tat org.apache.poi.xssf.streaming.SXSSFWorkbook.<init>(SXSSFWorkbook.java:213)\r\n\tat org.apache.poi.xssf.streaming.SXSSFWorkbook.<init>(SXSSFWorkbook.java:188)\r\n\tat org.apache.poi.xssf.streaming.SXSSFWorkbook.<init>(SXSSFWorkbook.java:274)\r\n\tat com.alibaba.excel.util.WorkBookUtil.createWorkBook(WorkBookUtil.java:45)\r\n\tat com.alibaba.excel.context.WriteContextImpl.<init>(WriteContextImpl.java:85)\r\n\tat com.alibaba.excel.write.ExcelBuilderImpl.<init>(ExcelBuilderImpl.java:35)\r\n\t... 39 common frames omitted\r\nCaused by: java.lang.ClassNotFoundException: org.apache.poi.POIXMLTypeLoader\r\n\tat java.net.URLClassLoader.findClass(URLClassLoader.java:382)\r\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:418)\r\n\tat sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:355)\r\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:351)\r\n\t... 51 common frames omitted\r\n\r\n原版本2.0.0，因需使用@ContentStyle(wrapped=true)  ,将版本升级至2.2.0-beat1版本，但原先可以运行的代码报错\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1165/comments",
    "author": "naihewuxiao",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-03-17T12:04:30Z",
        "body": "请检查 是否统一poi版本 ，该类在 \r\n```xml\r\n    <dependency>\r\n      <groupId>org.apache.poi</groupId>\r\n      <artifactId>poi-ooxml-schemas</artifactId>\r\n      <version>3.17</version>\r\n    </dependency>\r\n```\r\n里面"
      }
    ]
  },
  {
    "number": 1164,
    "title": "写Excel时单元格内换行问题",
    "created_at": "2020-03-17T07:07:43Z",
    "closed_at": "2020-03-17T11:39:20Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1164",
    "body": "**异常代码**\r\n```java\r\n\r\n//自定义存储数据类\r\n   @Data\r\npublic class TestExcelData {\r\n    @ExcelProperty(index = 0, value = \"datas\")\r\n    private String datas;\r\n}\r\n\r\n//给数据类赋值\r\nList<TestExcelData> res = new ArrayList<>();\r\nTestExcelData data1 = new TestExcelData();\r\ndata1.setOriginPrice(\"test1\\n\"+\"test2\");\r\nres.add(data1);\r\n\r\n……//生成Excel\r\n```\r\n**异常提示**\r\n打开生成的Excel之后test1和test2是在一行内的\r\n只有点击该单元格后才能正确显示2行\r\n**建议描述**\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1164/comments",
    "author": "naihewuxiao",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-03-17T11:39:20Z",
        "body": "升级到`2.2.0-beta1` 以上 用`@ContentStyle` 注解 的 `wrapped` 改成true"
      },
      {
        "user": "Jacksonary",
        "created_at": "2024-03-14T13:03:35Z",
        "body": "> 升级到`2.2.0-beta1` 以上 用`@ContentStyle` 注解 的 `wrapped` 改成true\r\n\r\n3.3.4 加了注解后报错\r\n```log\r\njava.lang.annotation.AnnotationTypeMismatchException: Incorrectly typed data found for annotation element public abstract com.alibaba.excel.enums.BooleanEnum com.alibaba.excel.annotation.write.style.ContentStyle.wrapped() (Found data of type class java.lang.Boolean[true])\r\nat sun.reflect.annotation.AnnotationTypeMismatchExceptionProxy.generateException(AnnotationTypeMismatchExceptionProxy.java:57) ~[na:1.8.0_261]\r\nat sun.reflect.annotation.AnnotationInvocationHandler.invoke(AnnotationInvocationHandler.java:84) ~[na:1.8.0_261]\r\nat com.sun.proxy.$Proxy306.wrapped(Unknown Source) ~[na:na]\r\nat com.alibaba.excel.metadata.property.StyleProperty.build(StyleProperty.java:208) ~[easyexcel-core-3.3.4.jar:na]\r\nat com.alibaba.excel.util.ClassUtils.doDeclaredFieldContentMap(ClassUtils.java:256) ~[easyexcel-core-3.3.4.jar:na]\r\nat com.alibaba.excel.util.ClassUtils.lambda$declaredFieldContentMap$4(ClassUtils.java:204) ~[easyexcel-core-3.3.4.jar:na]\r\n```"
      }
    ]
  },
  {
    "number": 1151,
    "title": "easyExcel能读取由oss生成的地址吗",
    "created_at": "2020-03-11T08:48:20Z",
    "closed_at": "2020-03-16T15:13:41Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1151",
    "body": "easyExcel能读取由oss生成的地址吗\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1151/comments",
    "author": "maybee10012",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-03-16T15:13:41Z",
        "body": "目前不支持 请先读取到本地缓存"
      }
    ]
  },
  {
    "number": 1150,
    "title": "easyExce能读取由oss生产的excel的地址吗",
    "created_at": "2020-03-11T08:47:20Z",
    "closed_at": "2020-03-16T15:15:50Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1150",
    "body": "**异常代码**\r\n```java\r\n   这里写你的代码\r\n```\r\n**异常提示**\r\n请提供完整的异常提示,记住是全部异常！\r\n**建议描述**\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1150/comments",
    "author": "maybee10012",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-03-16T15:15:50Z",
        "body": "目前不支持 请先读取到本地缓存"
      }
    ]
  },
  {
    "number": 1149,
    "title": "请问有大佬尝试过把导出创建实体和mybatis-plus的实体对象合并成一个嘛？",
    "created_at": "2020-03-11T07:36:28Z",
    "closed_at": "2020-03-16T15:24:03Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1149",
    "body": "\r\n请问有大佬尝试过把导出对象实体和mybatis-plus的实体对象合并成一个嘛？\r\n\r\n因为目前遇到需要把查询的list<bean>对象转换成另外的list<bean>对象才能导出。",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1149/comments",
    "author": "lgrknight",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-03-16T15:24:03Z",
        "body": "这个需要自己转换 或者在生成的实体类 注解加注解"
      }
    ]
  },
  {
    "number": 1141,
    "title": "BaseRowModel 这个过时了  用什么替代呢 监听器如何写一个通用的？总不能一个导出写一个监听器吧  大神谁给个思路？",
    "created_at": "2020-03-08T23:47:14Z",
    "closed_at": "2020-03-16T15:59:06Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1141",
    "body": "**异常代码**\r\n```java\r\n   这里写你的代码\r\n```\r\n**异常提示**\r\n请提供完整的异常提示,记住是全部异常！\r\n**建议描述**\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1141/comments",
    "author": "ccubec",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-03-16T15:59:06Z",
        "body": "建议一个导出写一个监听器。想一起的话，建议参照无对象度。建议一个导出写一个监听器。想一起的话，建议参照无对象度。"
      }
    ]
  },
  {
    "number": 1133,
    "title": "写入数据时使用relativeHeadRowIndex跳过的表头会被置空",
    "created_at": "2020-03-05T09:54:57Z",
    "closed_at": "2020-03-16T16:08:29Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1133",
    "body": "**异常代码**\r\n```java\r\n   public ExcleLog(File file) {\r\n        String name = file.getName();\r\n        int index = name.indexOf(\".\");\r\n        String fileName = name.substring(0,index);\r\n        this.writer = EasyExcel.write(file).relativeHeadRowIndex(3).build();\r\n        this.writeSheet = EasyExcel.writerSheet(fileName).build();\r\n    }\r\n\r\n    @Override\r\n    public void append(List<List<Object>> data) {\r\n        writer.write(data,writeSheet);\r\n    }\r\n```\r\n**异常提示**\r\nexcel中存在3行表头，跳过表头进行插入数据，数据插入正常但是表头中原有的数据被清空\r\n**建议描述**\r\n跳过的数据是否可以保持不变，对跳过后的数据进行覆盖",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1133/comments",
    "author": "zhengyunpengby",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-03-16T16:08:29Z",
        "body": "本来就会清空 参照 使用模板"
      }
    ]
  },
  {
    "number": 1130,
    "title": "能获取到所有的sheet页个数和sheet页名称列表吗？方便遍历获取数据",
    "created_at": "2020-03-03T14:12:27Z",
    "closed_at": "2020-03-04T01:10:39Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1130",
    "body": "\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1130/comments",
    "author": "liushaofeng89",
    "comments": [
      {
        "user": "liushaofeng89",
        "created_at": "2020-03-03T14:13:33Z",
        "body": "我现在有一个excel文件，我不知道其中有多少sheet页，我应该如何去遍历获取所有的sheet页数据呢？求指导"
      },
      {
        "user": "wenjiecome",
        "created_at": "2021-10-21T09:13:57Z",
        "body": "请问,解决了吗"
      },
      {
        "user": "wangtingit",
        "created_at": "2021-11-10T10:40:10Z",
        "body": "相同问题 请问怎么获取"
      }
    ]
  },
  {
    "number": 1129,
    "title": "调用代码时报NoSuchMethodError: com.alibaba.excel.ExcelWriter.<init>(Lcom/alibaba/excel/write/metadata/WriteWorkbook;)V",
    "created_at": "2020-03-03T07:47:24Z",
    "closed_at": "2020-03-16T16:58:10Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1129",
    "body": "**异常代码**\r\n```java\r\n   EasyExcel.write(response.getOutputStream()).head(headList).sheet(\"模板\").doWrite(new ArrayList());\r\n```\r\n**异常提示**\r\nHandler dispatch failed; nested exception is java.lang.NoSuchMethodError: com.alibaba.excel.ExcelWriter.<init>(Lcom/alibaba/excel/write/metadata/WriteWorkbook;)V\r\n**建议描述**\r\n用的最新2.1.6版本, poi版本冲突已经解决, 现在poi版本3.17, 调用代码就报上面的错误, 请问是什么原因\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1129/comments",
    "author": "Mars-Shen",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-03-16T16:58:10Z",
        "body": "尝试`clean`项目"
      }
    ]
  },
  {
    "number": 1128,
    "title": "导出文件打开报错",
    "created_at": "2020-03-03T07:28:15Z",
    "closed_at": "2020-03-16T17:00:31Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1128",
    "body": "**异常代码**\r\n```java\r\n    String fileName = \"Withdrawals agency record \" + model.getCreateTime().split(\" \")[0]+ \"_\" + model.getReturnTime().split(\" \")[0] + \".xlsx\";\r\n//            _response.setContentType(\"multipart/form-data\");\r\n            _response.setHeader(\"Content-Disposition\", \"attachment;fileName=\" + fileName);\r\n            _response.setContentType(\"application/vnd.ms-excel\");\r\n            _response.setCharacterEncoding(\"utf-8\");\r\n            ExcelWriter writer = new ExcelWriter(out, ExcelTypeEnum.XLSX);\r\n            Sheet sheet = new Sheet(1, 1, AgencyWithdrawExport.class);\r\n            sheet.setSheetName(fileName);\r\n            //写出数据\r\n            writer.write(createModelList(\r\n                    model.getUuid(),\r\n                    model.getAgencyId(),\r\n                    model.getAuditStatus(),\r\n                    model.getUid(),\r\n                    model.getLevel(),\r\n                    model.getCreateTime(),\r\n                    model.getReturnTime()), sheet);\r\n            writer.finish();\r\n            out.close();\r\n```\r\n**异常提示**\r\nPK\u0003\u0004\u0014 \b\b\b 妟cP            \u000b   _rels/.rels瓛羓?\f哶盆?韅孮窏2鑝岊\u00014[ILb素跂烬?[K\r\n\u001b?$}\u0007襳?嘔絈.灒乽觽蠃?x>=@\u0015凌p釮\u0006\"脋穧?斄Б*\"\u0016\u0003僅鹤贺?枂\u0013炮?\u0007擹鎊'?訾7m{O\u0006?昭\u0019菺?u萝??y|a\u001e泭瓖廌?瀹髺\u000el_\u0003EY染?届铲vql\u001f3譓L榭eh\u0016妿??殊‐3篩0矞閛J讖?\t:\u0014^\b槌\u001f貆\u0002PK\u0007\bz姐   I\u0002  PK\u0003\u0004\u0014 \b\b\b 妟cP            \u0013   [Content_Types].xml礢薾?\u0010鼤茸*6鬚U\u0015丆\u001f?\u0003\\{揦?瘅]\u00078擱?q騝fgfW鰀秖禯CB\u0013|闷|??h慊唥,^陒Va朸K\u001b<4?6汵\u0016?XQ┣嗸9?!P踵$??覇鋎闐攋);\u0010罚褲P羐鸸蜤僊'O惺曂浙罹H7L苃崚橰壍譍Ⅴ^??\u0007{\u0013駟\b瑉迱十\u001bB憠3\u001c?藱贽h.蒱鳺葱禙?j濞凜Q諣霕垬瞾}喂L鵘:\u0012\u0014D?妭%迖报愢,肂既瘿[?て\u001e ;吮?魗N魳~囏X駜p?ykOL?\u0018恔N€V瞍瘰芸BZ~啺紴q\u0018?? 奱\u0019\u001fr堘{O?PK\u0007\bz斒q;\u0001  \u001c\u0004  PK\u0003\u0004\u0014 \b\b\b 妟cP            \u0010   docProps/app.xmlM幜\r\n?\u0010D飩\u0010ro穤\u0010???{?\b橹\u0006歁HV殓洆z?骜T氟E?e\u0017〞缓?蓡蜒硶忹?蔔o7jH!bb嘫?錠翁?愴屴浜蘐?$o改魟0M吴9貤Gb??pe??~丷?婆Y肊B餮\u0014?nW\u0005絺焹?PK\u0007\b6n??  ?  PK\u0003\u0004\u0014 \b\b\b 妟cP            \u0011   docProps/core.xmlm愝J?\u0010F_%渚澊\u0005曅v\u0011eAP\\pE?$c[l~H咿串\u0015\\a.捥櫭浍7\u0007=?鬭唉?A#?L仔驱6粻$Da??K7m-\u001d椫阄[?\u000e\u0018H覙昆kh\u001fｃ A雳E?aR笳z-b胡\u000e湊o(\u0019;\u0003峇(\u0011\u0005搪汰FzT*?莼\u001f\u0017亽€#j41@?鹚F??皌V?啎殾)煪匥\u001b\u0015饇w,?fD谥G5?EDE拃荗?<UW-mKV矊U鞙?誎\r\n鎔狩羸?\u0005?佥咛茭\\肐添\u0017PK\u0007\b?\u0003\u0001  ?  PK\u0003\u0004\u0014 \b\b\b 妟cP            \u0014   xl/sharedStrings.xml=孉\r\n?\u0010 飩\b{穳\u001eD\u000f??則m\u0002?f7怏蜕?脤?m陜昪&\u000b橇€B騳壌Zx>顕\u000b逃~72嬺箲X鐸ｘnx鹲?[\b\"濯5麁神?R7痋摀巙誠*簠\u0003ⅳM煂9脘\"仦~PK\u0007\bh巠   ?  PK\u0003\u0004\u0014 \b\b\b 妟cP            \r\n   xl/styles.xml漈K幵0\u0010?q\u0007藍&輽\u0011\u001a?#1R#钟Hl軮%逼?兕!?颁\u001e軃劾=(垸\r\n\u0002\r\n癷梍辿U?桓\u0019?\u000f`\u001d转?%爅輕諘裘耩隁轙/_\u0014螐\u0002顉 OPI{锿?su\u000f捁\u000bm@釛V[?nm?c?.垽闰蓊u&\u0019W?訷\u001eぶg錕海YU碯璈N\u0013P\u0015顟<0仴呞怴k?岐?殥^\u0007L1\t塽??Y\u001e龢鋌Lp\u001e€X槟揬i\u001b?eI揩蠌療??Us?敹逓a婥\u001f.膔?殌?蘽瓣€\u001b2徘袬I昖揗?胣樈g嬴??o幋铞i涹亓l#\\,銈G?i坂\u001c蛧郡3T\u0015\u0002Z弐嘶>琟浶H斫?4渦Z1\u0011\u0012虋u\r\n$\u0012?涋泗鼛\u0016\u0012麶zF:\u0005Xx\r\nB?智v﹡徴\u000f-Is\t#J耞<噚?L6i\u0013n蓒c??\u0019谂O挲塥骍M?b<鑀H\u001c?@?鄊\u0014OPU鄭陻\u0004迳'颂\u0011咵幭嗙u?5~\u0006KI??\u001b\fk6V{??D楮>逃r}唙闥lW?3誒PK\u0007\bE?i?  ?  PK\u0003\u0004\u0014 \b\b\b 妟cP            \u000f   xl/workbook.xml崘盢?\u0010唚$蘖航?\u0010?N??C佡?壵貛桅伔荌\u0015`d:?z鏖\u0006vA?x\t臯 C瘍本擆z|?庐菇┃@鏢\bg杫\u001f%??鏠麒T軉\u0011}薮仠J9R倾H↙??x)?w蕑?*鷱#喘崭\u000fW\t釥Rn\u001b{;Fh~毥\u00103*a??磈?缉缤浥)sdJ'{粒:I\u00103?€K鐄2?Jx珐7う靍/鷅?恆??\u0018U諬爟??\u001er,\u0016蹶鉱冩\u001bPK\u0007\b匃竜?  w\u0001  PK\u0003\u0004\u0014 \b\b\b 妟cP            \u001a   xl/_rels/workbook.xml.rels瓚Mk?\f@娧}q伊\u0018/c须铸 c+qh\"\u0019K繜幻諤\u0007;?岎{\u000f崔~螕y?#搩甶?\u0005?\r\n\u000e^鱋7鱜D=E?1?b豱窒8y?$峐LE?H罿\t\tg/\r\ngず楣蘜氤\f6鹥?赨坜賠蝷%屿矉\u001d樈/\u0003?I綻|裄摔┼?f鼜桘~\f醡F?v粈兘\u001c?嬔銊庄魁?p9HB許y\u001d莸K~\u0004?桓鲦\u000bPK\u0007\b?;懺   3\u0002  PK\u0003\u0004\u0014 \b\b\b 妟cP            \u0018   xl/worksheets/sheet1.xml瓧賻?\u0014嗭\u0003?\u0004\u0015铦%?=秲6?i\u0002\u0014M梜峂跙l蓯槞<~\u000f┝X滑A}a??\u0016~だ披\u001fВ鳏?梢\u0003鋥:載??簾I嬬,V\u001c?\u001eLH嫢0?\u000f胋s效?渤N敛蓑Sl`橈免滊x?潕!AH劎8Ib洔tj=z罐-齙??钆\u0012齖T鸀觖榚哽嚆v镃|&~弞c4孧圪ak\u000b鍙苒闿h炞:?\fどm瀼q?d?摥9,}俕兏峂紌啡砱/嚄}鑟l\u000f怍\r\n\u0003?=&jr?\u0001焒跛蟿sNn燯\u0002\u000bh)釘?f娺,B\u0003q趙猛猅黰T\u0011a榠\u0015#鋽堡??oU&樸葄?r鑀緷\\厛\u0012e[厔闞?U\u0014B含%f?披?睜畮L筕`N粩\u001eF?b═燱哦瀂?\"\u0010枚e攙巧?髵\u001e瓾椻E蕏tsY\u0019ⅷp署8闞?塡?+c\u001b塌?+僓﹢KE霩J貾\fa砡?筶y?\u000f?啙?鈽q$?Q?/幺C飅?\"(@嬸┖Q?豦?-?*嬐!p?鈯\u001d┤∑∮筓e芋]?\u0005D胀鱑3?胀\u000fu砢u髗 -茢[\u000f\u0004\u001d踨卙I潀讑\u0018 鳤)?\u0001}\u001a鹭爼聄酱謣-81樥翵E襥D鍨b\b椿8鞧垹\u0019??岀\f?\u001e倰^牑#P\u0002醾1\"9敶\u000bJ:\r\ne焽\u0003湿鞫?:Le-鰛4┈檘罋X\u000e$6\u0019Kz\u0015?\u001e\u001bX\u0002R\u0012_単挎t<鸻I鍦?<?O6啩?q$\u0015黽嵘陎R章诚冄吜勨偬U@闰\u0013O:?矸u?-\u0010Ykp汝嬤腊jm吙?-\u0010????\u001e?a挎t\b麘〢(F蜨~亹\u000fC堗Ｍ?C\r\n3?!\u001f叞厦4\b珇8iAX53\u0015?吋?i?猣?2x\u000b圏*\u000e\u0007<N﨔鱧M绡煐\u000bh硒紋b金\u0017^.帇s甲_鈢煠咓?摑嘹\u001aD郻梕F鐅\u0004囶\u0001.钳儯?鳀镥?挣Mv~檏痺鹫PK\u0007\b?Fp?  ?  PK\u0001\u0002\u0014 \u0014 \b\b\b 妟cPz姐   I\u0002  \u000b                 _rels/.relsPK\u0001\u0002\u0014 \u0014 \b\b\b 妟cPz斒q;\u0001  \u001c\u0004  \u0013             \u001c\u0001  [Content_Types].xmlPK\u0001\u0002\u0014 \u0014 \b\b\b 妟cP6n??  ?  \u0010             ?  docProps/app.xmlPK\u0001\u0002\u0014 \u0014 \b\b\b 妟cP?\u0003\u0001  ?  \u0011             i\u0003  docProps/core.xmlPK\u0001\u0002\u0014 \u0014 \b\b\b 妟cPh巠   ?  \u0014             ?  xl/sharedStrings.xmlPK\u0001\u0002\u0014 \u0014 \b\b\b 妟cPE?i?  ?  \r\n             f\u0005  xl/styles.xmlPK\u0001\u0002\u0014 \u0014 \b\b\b 妟cP匃竜?  w\u0001  \u000f             ?  xl/workbook.xmlPK\u0001\u0002\u0014 \u0014 \b\b\b 妟cP?;懺   3\u0002  \u001a             ?  xl/_rels/workbook.xml.relsPK\u0001\u0002\u0014 \u0014 \b\b\b 妟cP?Fp?  ?  \u0018             ?  xl/worksheets/sheet1.xmlPK\u0005\u0006    \t \t ?\u0002  ?    {\"code\":200,\"type\":0,\"data\":null,\"msg\":\"OK\",\"time\":1583220020110}\r\n**建议描述**\r\n为什么在我生成的excel中会有个{\"code\":200,\"type\":0,\"data\":null,\"msg\":\"OK\",\"time\":1583220020110}在内容中呢，这导致我打开就报个格式错误的问题",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1128/comments",
    "author": "Hnannan",
    "comments": [
      {
        "user": "hoshaoniurou",
        "created_at": "2020-03-04T01:12:38Z",
        "body": "有没有排除过 后台使用 .xlsx 导出，前端使用 .xls"
      },
      {
        "user": "Hnannan",
        "created_at": "2020-03-04T01:35:19Z",
        "body": "这个是直接导出的，没有使用前端。后端直接_response这个连接下载到本地"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2020-03-16T17:00:31Z",
        "body": "直接使用浏览器，且方法的返回设置void"
      }
    ]
  },
  {
    "number": 1124,
    "title": "有没有去除excel文件前几行的接口",
    "created_at": "2020-02-29T04:26:12Z",
    "closed_at": "2020-03-16T17:01:28Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1124",
    "body": "我在使用easyexcel处理excel文件，但是excel前几行是一些注释信息，想问一下框架在处理这个excel文件的时候，有没有过滤掉前几行的功能。\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1124/comments",
    "author": "UCSBGauchos",
    "comments": [
      {
        "user": "wangguanquan",
        "created_at": "2020-03-05T02:57:25Z",
        "body": "读取时候设置`headRowNumber(1)`就可以了，跳过几行就设置headerRowNumber到几"
      }
    ]
  },
  {
    "number": 1119,
    "title": "怎么把下载的文件设置为xlsx后缀名",
    "created_at": "2020-02-27T07:40:46Z",
    "closed_at": "2020-02-28T02:26:30Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1119",
    "body": "按照文档上面的写法\r\nresponse.setHeader(\"Content-disposition\", \"attachment;filename=\" + fileName + \".xlsx\");\r\nEasyExcel.write(response.getOutputStream(), TraFreightInventoryResult.class).sheet(\"test单据\").doWrite(collectList);\r\n\r\n但是导出的文件都是xls的，而非xlsx，所以用office打开会报错，请问我要怎么设置才能把文件的后缀名改成xlsx呢",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1119/comments",
    "author": "RoadSides",
    "comments": [
      {
        "user": "tanpenggood",
        "created_at": "2020-02-28T01:42:18Z",
        "body": "```java\r\nEasyExcel.write(response.getOutputStream(), TraFreightInventoryResult.class)\r\n                .excelType(ExcelTypeEnum.XLSX)\r\n                .sheet(\"test单据\")\r\n                .doWrite(collectList);\r\n```"
      },
      {
        "user": "RoadSides",
        "created_at": "2020-02-28T02:26:30Z",
        "body": "已解决，多谢"
      }
    ]
  },
  {
    "number": 1114,
    "title": "如何在自定义Convertor中获取目标type类型",
    "created_at": "2020-02-23T12:56:47Z",
    "closed_at": "2020-03-16T17:05:00Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1114",
    "body": "个人认为Converter的接口应该与mybatis的BaseTypeHandler类似，在构造函数中传入目标函数的真实type. 这样的话，否则的话，无法通过一个基类/接口的Converter来实现实际类型的实例化。\r\n\r\n或者，提供类似Jackson的`@JsonCreator`的注解也可以，这样也能通过Excel中的基础数据构造复杂对象。\r\n\r\n请教一下现在除了每个自定义类实现一个Convertor以外还有别的方式简化实现么？\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1114/comments",
    "author": "YiuTerran",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-03-16T17:05:00Z",
        "body": "`supportJavaTypeKey` 就是目标的type类型"
      },
      {
        "user": "YiuTerran",
        "created_at": "2020-03-17T04:27:35Z",
        "body": "> `supportJavaTypeKey` 就是目标的type类型\r\n\r\n不是，supportJavaTypeKey只能拿到基类或者接口类型啊，如果我要构建子类，就必须知道对应的真实类型，才能通过构造函数进行实例化。"
      }
    ]
  },
  {
    "number": 1113,
    "title": "图片跨行跨列的问题",
    "created_at": "2020-02-22T15:45:46Z",
    "closed_at": "2020-03-16T18:14:58Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1113",
    "body": "我有一个模板，其中有一个图片占位符是合并了单元格的，请问这时候我应该怎么做才能将图片铺满这个合并后的单元格呢？",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1113/comments",
    "author": "laizuan",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-03-16T18:14:58Z",
        "body": "目前只能自己写。升级到`2.2.0` 然后 实现`CellWriteHandler`的 `afterCellDataConverted`返回一个empty类型的celldata,然后 实现 `afterCellDispose` 自己去写入数据"
      }
    ]
  },
  {
    "number": 1110,
    "title": "使用了class上的注解通过InputStream导出图片，但是就不能动态定义表头了",
    "created_at": "2020-02-21T14:05:52Z",
    "closed_at": "2020-03-16T17:16:01Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1110",
    "body": "**异常代码**\r\n在类里面定义了导出类的属性\r\n```java\r\n// DemoData.java\r\n// ......\r\n    @ExcelProperty(index = 3, value = \"注册照\", converter = InputStreamImageConverter.class)\r\n    @ColumnWidth(value = 20)\r\n    private InputStream faceImage;\r\n```\r\n\r\n然后，使用的时候\r\n```java\r\nEasyExcel.write(outputStream, DemoData.class).head(head())\r\n```\r\n**异常提示**\r\n```com.alibaba.excel.exception.ExcelDataConvertException: Can not find 'Converter' support class FileInputStream.```\r\n**建议描述**\r\n看源码`EasyExcel.write`的第二个参数`DemoData.class` 其实就是在设置head， 然后因为有个动态生成head的需求，所以后面那个head替换了前面`DemoData.class`定义的head，造成找不到合适的`Converter`\r\n\r\n\r\n如果遇到我这种，既要导出图片，又要动态生成head 应如何解决呢？\r\n谢谢\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1110/comments",
    "author": "wenlinguo",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-03-16T17:16:01Z",
        "body": "参照`InputStreamImageConverter` 吧里面的 `InputStream`改成 `FileInputStream`"
      },
      {
        "user": "wenlinguo",
        "created_at": "2020-03-17T03:41:39Z",
        "body": "> 参照`InputStreamImageConverter` 吧里面的 `InputStream`改成 `FileInputStream`\r\n\r\n谢谢。已经解决"
      }
    ]
  },
  {
    "number": 1105,
    "title": "您好请问最新的稳定版本是？",
    "created_at": "2020-02-17T02:28:09Z",
    "closed_at": "2020-03-16T16:40:37Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1105",
    "body": "您好请问最新的稳定版本是？ 能否支持csv格式呢",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1105/comments",
    "author": "Arsense",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-03-16T16:40:37Z",
        "body": "目前不支持"
      }
    ]
  },
  {
    "number": 1104,
    "title": "在监听器中如何设置单个单元格数据",
    "created_at": "2020-02-16T04:07:54Z",
    "closed_at": "2020-03-16T16:41:17Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1104",
    "body": "**异常代码**\r\n```java\r\n    CellRangeAddressList cellRangeAddressList = new CellRangeAddressList(1, 10, 1, 1);\r\n     DataValidationHelper helper = writeSheetHolder.getSheet().getDataValidationHelper();\r\n      DataValidationConstraint constraint = helper.createExplicitListConstraint(String[] str);\r\n     DataValidation dataValidation = helper.createValidation(constraint, cellRangeAddressList);\r\n```\r\n**异常提示**\r\n在监听器中，可以如上设置一个单元格下拉列表，如需每个单元格设置一个值，应如何设置\r\n**建议描述**\r\n希得到技术援助，谢谢",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1104/comments",
    "author": "GitHubUDA",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-03-16T16:41:17Z",
        "body": "参照的自定义拦截器 每个cell 创建都会有回调函数"
      }
    ]
  },
  {
    "number": 1100,
    "title": "请问如何给表格中的某些列添加公式？还有如何将最后一行进行整行合并？？？",
    "created_at": "2020-02-13T06:21:16Z",
    "closed_at": "2020-03-16T17:23:41Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1100",
    "body": "**异常代码**\r\n```java\r\n   这里写你的代码\r\n```\r\n**异常提示**\r\n请提供完整的异常提示,记住是全部异常！\r\n**建议描述**\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1100/comments",
    "author": "heiox",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-03-16T17:23:40Z",
        "body": "参照自定合并策略"
      }
    ]
  },
  {
    "number": 1098,
    "title": "没有使用@ExcelProperty字段在解析时为字段赋值了",
    "created_at": "2020-02-06T13:27:22Z",
    "closed_at": "2020-02-21T10:39:01Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1098",
    "body": "**建议描述**\r\n读取时没有使用注解的字段也被赋值了，版本2.1.4",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1098/comments",
    "author": "bigmzc",
    "comments": [
      {
        "user": "Wsr-7",
        "created_at": "2020-02-21T07:32:56Z",
        "body": "请问后来解决了吗?我也碰到了.一个应该被跳过的列,被赋值到了一个没有@ExcelProperty的字段"
      },
      {
        "user": "bigmzc",
        "created_at": "2020-02-21T10:38:58Z",
        "body": "> 请问后来解决了吗?我也碰到了.一个应该被跳过的列,被赋值到了一个没有@ExcelProperty的字段\r\n\r\n加了@ExcelIgnore在不需要的字段上 解决"
      }
    ]
  },
  {
    "number": 1095,
    "title": "使用xls进入read的时候出现了这个异常，我看是因为枚举为空",
    "created_at": "2020-02-04T14:18:41Z",
    "closed_at": "2020-03-16T17:25:34Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1095",
    "body": "com.alibaba.excel.exception.ExcelCommonException: Convert excel format exception.You can try specifying the 'excelType' yourself\r\nat com.alibaba.excel.support.ExcelTypeEnum.valueOf(ExcelTypeEnum.java:65)\r\n使用版本是2.1.6\r\n直接clone来代码吧xlsx改成xls文件，读取就报错",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1095/comments",
    "author": "sgerptangkang",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-03-16T17:25:34Z",
        "body": "嗯 乱改文件名需要自己指定类型"
      }
    ]
  },
  {
    "number": 1072,
    "title": "easyExcel读取大文件提示没有ehcache",
    "created_at": "2020-01-13T08:22:11Z",
    "closed_at": "2020-01-14T01:21:23Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1072",
    "body": "异常提示：java.lang.NoSuchMethodError: org.ehcache.config.builders.CacheManagerBuilder.persistence(Ljava/io/File;)Lorg/ehcache/config/builders/CacheManagerConfiguration;\r\n\r\n读取一个20M，20万条记录的excel，提示上述错误，小文件可以正常读取，请问这个问题该怎么解决？谢谢！\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1072/comments",
    "author": "lgbwust",
    "comments": [
      {
        "user": "lgbwust",
        "created_at": "2020-01-14T01:21:23Z",
        "body": "已解决，需要添加ehcache依赖"
      },
      {
        "user": "zhugw",
        "created_at": "2020-07-31T03:01:20Z",
        "body": "\r\n默认使用的3.2.2版本 没有对用的方法\r\n```\r\n[INFO] +- com.alibaba:easyexcel:jar:2.2.6:compile\r\n[INFO] |  +- cglib:cglib:jar:3.1:compile\r\n[INFO] |  |  \\- org.ow2.asm:asm:jar:4.2:compile\r\n[INFO] |  \\- org.ehcache:ehcache:jar:3.2.2:compile\r\n\r\n```\r\n需显式添加高版本的ehcache\r\n```\r\n<dependency>\r\n    <groupId>org.ehcache</groupId>\r\n    <artifactId>ehcache</artifactId>\r\n    <version>3.8.1</version>\r\n</dependency>\r\n```"
      }
    ]
  },
  {
    "number": 1070,
    "title": "模板填充sheetName赋值不起作用，无法写多sheet",
    "created_at": "2020-01-13T03:30:39Z",
    "closed_at": "2020-03-16T18:44:22Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1070",
    "body": "**异常代码**\r\n```java\r\n    \r\nExcelWriter excelWriter = EasyExcel.write(fileName).withTemplate(template).build();\r\nFillConfig fillConfig =FillConfig.builder().direction(WriteDirectionEnum.HORIZONTAL).forceNewRow(Boolean.TRUE).build();\r\n          WriteSheet writeSheet = EasyExcel.writerSheet(0, \"sheetName\").build();\r\n            MonthlyStatisticsResponse monthlyStatistics = responseResponseEntity.getData();\r\nMap<String, Object> quantityMap = initQuantityMap(monthlyStatistics);\r\n            quantityMap.put(\"month\", month);\r\n            excelWriter.fill(quantityMap, fillConfig, writeSheet);\r\n```\r\n**异常提示**\r\n请提供完整的异常提示,记住是全部异常！\r\n**建议描述**\r\n使用模板填充\r\nfor循环中，每次new WriteSheet\r\n同一个模板填充写入多个sheet不会生效。\r\n只会写入第一个sheet，第一个sheet的名称不能修改。",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1070/comments",
    "author": "feitxue",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-03-16T18:44:22Z",
        "body": "优先根据index 来匹配，如果先个根据那么,别设置index"
      }
    ]
  },
  {
    "number": 1063,
    "title": "如何获取同个表头下的不同数据",
    "created_at": "2020-01-09T02:05:53Z",
    "closed_at": "2020-03-17T15:33:59Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1063",
    "body": "**异常代码**\r\n```java\r\n\r\nserviceImpl:\r\n第一种：\r\n   public void saveData(List<CPMXEntity> list) throws Exception {\r\n        \r\n        for (int i = 0; i < list.size(); i++) {\r\n            List<String> pfbz = list.get(i).getPfbz();\r\n            for (String s : pfbz) {\r\n                System.out.println(\"pfbzA：\" + s);\r\n            }\r\n\r\n第二种:\r\n  for (int i = 0; i < list.size(); i++) {\r\n            String pfbz = list.get(i).getPfbz();\r\n            System.out.println(pfbz);\r\n```\r\n**异常提示**\r\n第一种写法错误：\r\nCaused by: com.alibaba.excel.exception.ExcelDataConvertException: Converter not found, convert STRING to java.util.List\r\n\r\n第二种写法无报错，但只能获取一个数据\r\n**建议描述**\r\n\r\n评分标准\r\n-------------\r\nA | B | C\r\nA1 | B1 | C1\r\nA2 | B2 | C2\r\n\r\nexcel如上\r\n“评分标准”这个表头下可以任填数据，如A、B、C 。每个数据下面可再填写数据如A1，B1,C1\r\n按照普通的写法 只能获取到数据“A”，而获取不到“B”、“C”。\r\n应如何编写才能获取到ABC全部数据\r\n\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1063/comments",
    "author": "GitHubUDA",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-03-17T15:33:59Z",
        "body": "定义对象头的时候 完全按照excel来，或者只定义头的最后一行，然后设置`headrownum`=头行的数量"
      }
    ]
  },
  {
    "number": 1057,
    "title": "使用easyExcel 能实现对一个现有的excel持续写入数据吗？还有不使用对象去实现，另外我生成的excel文件都会显示格式错误，导致打不开情况",
    "created_at": "2020-01-06T13:21:52Z",
    "closed_at": "2020-01-07T13:50:08Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1057",
    "body": "**异常代码**\r\n```java\r\n   这里写你的代码\r\n```\r\n**异常提示**\r\n请提供完整的异常提示,记住是全部异常！\r\n**建议描述**\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1057/comments",
    "author": "CoderKite",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-01-07T13:50:08Z",
        "body": "支持，请参照demo书写。"
      }
    ]
  },
  {
    "number": 1054,
    "title": "如何处理枚举或者字典类型的导出？",
    "created_at": "2020-01-04T02:43:55Z",
    "closed_at": "2020-01-07T13:54:06Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1054",
    "body": "在实体类中，某个类可能有一个字典或者是枚举类型作为属性。\r\n例如常见的省市编码：private String provinceCode;\r\n该code需要从数据库或是map中取出对应的value，实际导出时需要导出的也是描述\r\n我目前想到的只有在实体类新建一个属性，命名为provinceName，然后循环遍历通过code填充Name，再进行导出，但是这样对实体类的破坏性很大，新建一个又不免觉得浪费。\r\n这种需要查数据库字典的，循环填充还能接受，如果只是简单的已审核待审核状态呢，请问有什么更好的办法吗？",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1054/comments",
    "author": "westflyer",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-01-07T13:54:06Z",
        "body": "建议自定义转换器，看demo有。"
      },
      {
        "user": "caiqichang",
        "created_at": "2021-09-01T03:25:13Z",
        "body": "@zhuangjiaju  \r\n在哪？ 没找着"
      }
    ]
  },
  {
    "number": 1049,
    "title": "指定实体类字段导出，设置时间类型为@DateTimeFormat(\"yyyy-MM-dd HH-mm-ss\")，提示Can not find 'Converter' support class Timestamp",
    "created_at": "2020-01-02T06:38:51Z",
    "closed_at": "2020-01-07T13:57:49Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1049",
    "body": "**异常代码**\r\n```java\r\n   EasyExcel.write(response.getOutputStream(), clazz).head(headList)\r\n\t\t\t\t.includeColumnFiledNames(includeColumnFiledNames).autoCloseStream(autoCloseStream).sheet(title)\r\n\t\t\t\t.doWrite(modelList);\r\n```\r\n**异常提示**\r\nCan not find 'Converter' support class Timestamp\r\n**建议描述**\r\n自定义导出列，加入head设置@DateTimeFormat就不起作用了\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1049/comments",
    "author": "eillcc",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-01-07T13:57:49Z",
        "body": "Timestamp 目前不支持。后续考虑升级jdk8以后才会支持。目前需要自己写转换器。"
      }
    ]
  },
  {
    "number": 1043,
    "title": "如何根据导出内容，设置Row的样式？比如背景之类的",
    "created_at": "2019-12-31T06:29:12Z",
    "closed_at": "2020-01-07T14:02:25Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1043",
    "body": "**场景描述**\r\n  现在有一份数据要导出，其中数据有A，B，C三种类型，现在希望A的数据背景是红色，B的背景是黄色，C的背景是蓝色。像这样的的根据内容设置导出样式的情况怎么处理？\r\n   在RowWriteHandler类中，没有看到有原始数据传入，无法判断要设置什么样式，只能根据rowIndex这类的强制指定某行的样式效果。\r\n请问有什么好的处理方法吗？在RowWriteHandler中的方法能否拿到原始数据",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1043/comments",
    "author": "baizhanshuang",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-01-07T14:02:25Z",
        "body": "自定义样式 可以根据第几列来判断。自定义样式可以 根据数据来判断。整个需要自己实现。"
      }
    ]
  },
  {
    "number": 1041,
    "title": "2.0.4版本，请问sheet里面的页眉页脚怎么获取啊，是ReadSheet里吗，但是值为空。",
    "created_at": "2019-12-30T12:48:01Z",
    "closed_at": "2020-03-17T15:24:15Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1041",
    "body": "**异常代码**\r\n```java\r\n   这里写你的代码\r\n```\r\n**异常提示**\r\n请提供完整的异常提示,记住是全部异常！\r\n**建议描述**\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1041/comments",
    "author": "ansongao",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-03-17T15:24:15Z",
        "body": "不支持获取。建议使用poi"
      }
    ]
  },
  {
    "number": 1040,
    "title": "麻烦问下,easyexcel不同的sheet页,支持并发写入操作吗?",
    "created_at": "2019-12-30T08:48:49Z",
    "closed_at": "2020-01-07T14:02:54Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1040",
    "body": "如题",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1040/comments",
    "author": "aiwthao",
    "comments": [
      {
        "user": "vinqin",
        "created_at": "2019-12-30T13:36:01Z",
        "body": "同一个文件写入多个sheet的时候，为什么最终只有一个sheet，并且这个sheet是最后被写入的那个sheet？请问知道吗？@aiwthao\r\n\r\n```java\r\nexcelWriterBuilder.sheet(0, \"中性应用\").head(systemApplicationExcelEntities.get(0).getClass()).doWrite(list0);\r\nexcelWriterBuilder.sheet(1, \"中性应用—Note\").head(noteExcelEntities.get(0).getClass()).doWrite(list1);\r\nexcelWriterBuilder.sheet(2, \"客供应用\").head(customerApplicationExcelEntities.get(0).getClass()).doWrite(list2);\r\nexcelWriterBuilder.sheet(3, \"侧边栏\").head(systemDockExcelEntities.get(0).getClass()).doWrite(list3);\r\n        \r\n```"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2020-01-07T14:02:54Z",
        "body": "这个目前不支持。"
      }
    ]
  },
  {
    "number": 1039,
    "title": "java.lang.NoSuchMethodError: org.ehcache.config.builders.CacheManagerBuilder.persistence(Ljava/io/File;)Lorg/ehcache/config/builders/CacheManagerConfiguration;",
    "created_at": "2019-12-30T06:48:01Z",
    "closed_at": "2019-12-30T08:25:47Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1039",
    "body": "",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1039/comments",
    "author": "15927150252",
    "comments": [
      {
        "user": "nanmua",
        "created_at": "2020-01-04T13:03:10Z",
        "body": "解决了嘛?"
      }
    ]
  },
  {
    "number": 1034,
    "title": "请教个关于easyexcel的问题",
    "created_at": "2019-12-28T02:09:53Z",
    "closed_at": "2019-12-28T11:43:22Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1034",
    "body": "   这里写你的代码\r\n   {\r\n    private String vin;\r\n    private Long acquisitionTime;\r\n    private String imsi;\r\n    private BigDecimal speed;\r\n    private BigDecimal direction;\r\n    private BigDecimal latitude;\r\n    private BigDecimal longitude;\r\n    private List<StatusInfo> statusInfos;\r\n}\r\n\r\n    public class StatusInfo {\r\n    private String signalName;\r\n    private String unit;\r\n    private String code;\r\n    private String name;\r\n    private String id;\r\n    private Object value;\r\n    }\r\n\r\n像这种数据结构的对象 想把StatusIndfo里面的数据也一并导出  请问可以做得到吗",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1034/comments",
    "author": "aiwthao",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-12-28T11:43:22Z",
        "body": "目前不支持，仅仅支持一级对象。"
      }
    ]
  },
  {
    "number": 1032,
    "title": "How to wirte data from custom column when use \"withTemplate\"?",
    "created_at": "2019-12-27T09:38:11Z",
    "closed_at": "2020-03-17T15:49:19Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1032",
    "body": "**我的代码**\r\n```\r\nExcelWriter excelWriter = EasyExcel.write(fileSavePath + errorPath, TeacherVO.class)\r\n                        .withTemplate(templateFileName).build();\r\n WriteSheet writeSheet = EasyExcel.writerSheet(0).needHead(false).build();\r\nexcelWriter.write(res.getErrorList(), writeSheet);\r\nexcelWriter.finish();\r\n```\r\ndescription: 用模板写入时，如何从指定行写入？默认跳过带样式的行的从空行开始写入。\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1032/comments",
    "author": "vibesudi",
    "comments": [
      {
        "user": "chencs0603",
        "created_at": "2020-02-10T06:00:57Z",
        "body": "同问"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2020-03-17T15:49:19Z",
        "body": "`relativeHeadRowIndex` 相对最后一行多少行以后开始写"
      }
    ]
  },
  {
    "number": 1031,
    "title": "Formula records",
    "created_at": "2019-12-27T07:47:24Z",
    "closed_at": "2020-03-17T15:09:13Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1031",
    "body": "**异常代码**\r\n```java\r\npublic class DataListener extends AnalysisEventListener<Data> {\r\n\r\n   @Override\r\n    public void invoke(Data data, AnalysisContext context) {\r\n       // how to get current row is formula\r\n    }\r\n}\r\n```\r\n**异常提示**\r\nHow to understant the record is formula or not in my invoke method? \r\n**建议描述**\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1031/comments",
    "author": "busrauman",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-03-17T15:09:12Z",
        "body": "Generics use `CellData` and then `celldata.formula`, It means whether it's a formula or not."
      }
    ]
  },
  {
    "number": 1028,
    "title": "动态头和不创建对象的写怎么设置列的宽度",
    "created_at": "2019-12-26T06:56:03Z",
    "closed_at": "2019-12-28T11:51:10Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1028",
    "body": "```java\r\n   private List<List<String>> head() {\r\n    List<List<String>> list = new ArrayList<List<String>>();\r\n    List<String> head0 = new ArrayList<String>();\r\n    head0.add(\"字符串\" + System.currentTimeMillis());\r\n    List<String> head1 = new ArrayList<String>();\r\n    head1.add(\"数字\" + System.currentTimeMillis());\r\n    List<String> head2 = new ArrayList<String>();\r\n    head2.add(\"日期\" + System.currentTimeMillis());\r\n    list.add(head0);\r\n    list.add(head1);\r\n    list.add(head2);\r\n    return list;\r\n  }\r\n\r\npublic void dynamicHeadWrite() {\r\n    String fileName = TestFileUtil.getPath() + \"dynamicHeadWrite\" + System.currentTimeMillis() + \".xlsx\";\r\n    EasyExcel.write(fileName)\r\n        // 这里放入动态头\r\n        .head(head()).sheet(\"模板\")\r\n        // 当然这里数据也可以用 List<List<String>> 去传入\r\n        .doWrite(data());\r\n}\r\n```\r\n**建议描述**\r\n具体在哪里设置每一列的宽度",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1028/comments",
    "author": "frozenfires",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-12-28T11:51:10Z",
        "body": "建议创建对象，可以使用注解。如果创建对象，请使用自定义拦截器。"
      },
      {
        "user": "qq1012827513",
        "created_at": "2021-07-30T03:37:44Z",
        "body": "有什么好的解决办法了么？"
      }
    ]
  },
  {
    "number": 1027,
    "title": "为什么使用@ColumnWidth配置列宽无效？",
    "created_at": "2019-12-26T06:49:12Z",
    "closed_at": "2020-03-17T15:12:04Z",
    "labels": [
      "help wanted",
      "pending verification"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1027",
    "body": "为什么自定义head（List<List<String>>）后，使用@ColumnWidth注解会失效？",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1027/comments",
    "author": "zhangyongkang",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2020-03-17T15:12:04Z",
        "body": "这个是个bug ，已经在最新版本修复。会根据index去匹配这两个的关系。"
      }
    ]
  },
  {
    "number": 1026,
    "title": "使用AnalysisEventListener如何返回异常信息",
    "created_at": "2019-12-26T06:28:26Z",
    "closed_at": "2019-12-28T12:04:02Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1026",
    "body": "在Listener里invoke方法处理数据，如果处理发现异常该用什么方式返回到页面？\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1026/comments",
    "author": "zhoujingtian4",
    "comments": [
      {
        "user": "lxdnn",
        "created_at": "2019-12-28T09:32:05Z",
        "body": "同问"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2019-12-28T12:04:01Z",
        "body": "直接抛出异常即可。目前版本可能要e.getCause才能获取到您自定义的异常。下个版本准备改成直接抛出就是自己的异常。"
      }
    ]
  },
  {
    "number": 1023,
    "title": "请求怎么按照指定 行列 读或者写数据呢",
    "created_at": "2019-12-25T12:08:36Z",
    "closed_at": "2019-12-28T12:07:10Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1023",
    "body": "",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1023/comments",
    "author": "MrHe007",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-12-28T12:07:10Z",
        "body": "请尝试阅读文档。"
      }
    ]
  },
  {
    "number": 1015,
    "title": "domain中的某个属性的值不存在的时候，怎样用其他默认值替换？",
    "created_at": "2019-12-24T00:35:37Z",
    "closed_at": "2019-12-28T12:06:12Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1015",
    "body": "```java\r\n@Data\r\npublic class DemoData {\r\n    @ExcelProperty(\"姓名\")\r\n    private String name;\r\n\r\n    // 如果 avatar 等于 null 时，怎样让头像所在的这个单元格的值为字符串 \" - \" ？\r\n    @ExcelProperty(\"头像\")\r\n    private URL avatar;\r\n}\r\n```",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1015/comments",
    "author": "vinqin",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-12-28T12:06:12Z",
        "body": "参照文档的自定义转换器。"
      }
    ]
  },
  {
    "number": 1012,
    "title": "表头增加动态标题行有简单的方法吗",
    "created_at": "2019-12-23T09:02:07Z",
    "closed_at": "2019-12-28T12:02:27Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1012",
    "body": "```java\r\npublic List<List<String>> head(String headString){\r\n        List<List<String>> list = new ArrayList<List<String>>();\r\n        List<String> head0 = new ArrayList<String>();\r\n        head0.add(headString);\r\n        head0.add(\"省份\");\r\n        List<String> head1 = new ArrayList<String>();\r\n        head1.add(headString);\r\n        head1.add(\"公司\");\r\n        List<String> head2 = new ArrayList<String>();\r\n        head2.add(headString);\r\n        head2.add(\"部门\");\r\n        list.add(head0);\r\n        list.add(head1);\r\n        list.add(head2);\r\n        return list;\r\n    }\r\n```\r\nheadString是从后台得到的。增加标题头需要把每一列写一遍，我想写一个通用的方法，给不同的表格加上动态标题行\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1012/comments",
    "author": "frozenfires",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-12-28T12:02:27Z",
        "body": "这个需要自己处理。目前代码只能这样"
      }
    ]
  },
  {
    "number": 1011,
    "title": "我如何判断我读取的excel是我想处理的excel，我用invokeHeadMap判断完表头数据后，发现表头数据不对，发现抛出异常不能中断invoke的读取。",
    "created_at": "2019-12-23T07:50:13Z",
    "closed_at": "2019-12-28T10:55:48Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1011",
    "body": "我的意思是想在读取excel的时候，判断一下这个excel是不是我想要的那个excel，再进行导入，我发现我用一个相似的excel导入，也能导入，但是不是我想要的excel数据\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1011/comments",
    "author": "Drcary",
    "comments": [
      {
        "user": "lxdnn",
        "created_at": "2019-12-28T09:31:13Z",
        "body": "onException中捕捉该异常并抛出异常可中断读取"
      },
      {
        "user": "Drcary",
        "created_at": "2019-12-28T10:55:48Z",
        "body": "thanks!    I see！！！"
      }
    ]
  },
  {
    "number": 1008,
    "title": "前端调用导出接口没有出弹框下载，返回的是一堆乱码，如何解决？请赐教！",
    "created_at": "2019-12-21T08:30:42Z",
    "closed_at": "2019-12-22T09:48:08Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1008",
    "body": "前端调用导出接口没有出弹框下载，返回的是一堆乱码，如何解决？请赐教！",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1008/comments",
    "author": "shuaizi777",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-12-22T09:48:08Z",
        "body": "请参照下载demo书写。"
      },
      {
        "user": "frozenfires",
        "created_at": "2019-12-26T03:48:12Z",
        "body": "前台模拟点击链接\r\nlet blob = new Blob([response.data], {type: \"application/vnd.ms-excel\"});\r\nlet link = document.createElement('a');\r\nlink.href = window.URL.createObjectURL(blob);\r\nlink.download = response.config.fileName;\r\nlink.click();"
      }
    ]
  },
  {
    "number": 1004,
    "title": "easyexcel不支持读取图片吗",
    "created_at": "2019-12-20T10:25:56Z",
    "closed_at": "2019-12-22T09:49:28Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/1004",
    "body": "easyexcel不支持读取图片吗？\r\n自定义实现的转换器没有效果",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/1004/comments",
    "author": "lyb-geek",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-12-22T09:49:28Z",
        "body": "不支持。建议使用Poi书写。"
      }
    ]
  },
  {
    "number": 999,
    "title": "如何获取表头字段就退出读操作，而不全部一行行读完？",
    "created_at": "2019-12-19T08:05:36Z",
    "closed_at": "2019-12-28T11:51:53Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/999",
    "body": "**异常代码**\r\n```java\r\n   这里写你的代码\r\n```\r\n**异常提示**\r\n请提供完整的异常提示,记住是全部异常！\r\n**建议描述**\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/999/comments",
    "author": "JanLiao",
    "comments": [
      {
        "user": "pdkst",
        "created_at": "2019-12-19T08:42:51Z",
        "body": "继承`AnalysisEventListener<T>`然后重写`hasNext()`"
      },
      {
        "user": "louising",
        "created_at": "2024-08-20T07:03:59Z",
        "body": "> 继承`AnalysisEventListener<T>`然后重写`hasNext()`\r\n\r\n这样会在读取到第一个Sheet后就退出，如果有多个sheet怎么办？\r\n如果调用多次，会多次打开文件流，关闭文件流。"
      }
    ]
  },
  {
    "number": 995,
    "title": "异步读取excel内容 应该如何进行校验内容并且退出呢",
    "created_at": "2019-12-19T02:28:54Z",
    "closed_at": "2019-12-28T11:53:16Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/995",
    "body": "**使用疑问**\r\n当我异步使用监听器进行读取excel内容的时候 \r\n我应该如何判断相关内容不满足我的规则条件下\r\n退出当前读取呢",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/995/comments",
    "author": "CocoMars",
    "comments": [
      {
        "user": "pdkst",
        "created_at": "2019-12-19T09:15:30Z",
        "body": "easyExcel是同步的"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2019-12-28T11:53:16Z",
        "body": "监听器有个`hasNext`方法 您返回false 就可以。"
      }
    ]
  },
  {
    "number": 992,
    "title": "导出excel时支持某个列不允许编辑吗？",
    "created_at": "2019-12-18T08:27:04Z",
    "closed_at": "2019-12-18T10:51:15Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/992",
    "body": "**异常代码**\r\n```java\r\n   这里写你的代码\r\n```\r\n**异常提示**\r\n请提供完整的异常提示,记住是全部异常！\r\n**建议描述**\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/992/comments",
    "author": "dolphin-zp",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-12-18T10:51:15Z",
        "body": "可以通过自定义拦截器，然后通过poi的形式书写。"
      }
    ]
  },
  {
    "number": 983,
    "title": "大数据量excel导出如何采用流式导出避免504错误",
    "created_at": "2019-12-16T11:45:00Z",
    "closed_at": "2019-12-18T11:00:25Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/983",
    "body": "**异常代码**\r\n```java\r\n  @RequestMapping(\"export\")\r\n    public void export(HttpServletResponse response) {\r\n // 这里 需要指定写用哪个class去写\r\nExcelWriter excelWriter = null;\r\n// 这里注意 如果同一个sheet只要创建一次\r\nWriteSheet writeSheet = null;\r\nfor (int page = 1; page <= 500; page++) {\r\n    req.setPage(page);\r\n    req.setPageSize(200);\r\n    Result<XxxVO> exportResult = xxxx.get();//rpc调用\r\n    if (!exportResult.isSuccess()) {\r\n        ResultVO resultVO = ResultVO.returnFailed(exportResult.getMsg());\r\n        ResponseHelper.toJSONResponse(response, resultVO);\r\n        return;\r\n    }\r\n    XxxVO xxxVO = exportResult.getResult();\r\n    if (xxxVO == null || CollectionUtils.isEmpty(xxxVO.getList())) {\r\n        log.info(\"xxxxVoList is empty,page:\" + page);\r\n        break;\r\n    }\r\n    String fileName = xxxVO.getFileName();\r\n    String sheetName = xxxVO.getSheetName();\r\n    List<List<String>> head = xxxVO.getHead();\r\n    if (page == 1) {\r\n        ExcelHelper.responseAttachFile(response, fileName);\r\n        // 这里 需要指定写用哪个class去写\r\n        excelWriter = EasyExcel.write(response.getOutputStream()).build();\r\n        // 这里注意 如果同一个sheet只要创建一次\r\n        writeSheet = EasyExcel.writerSheet(sheetName).head(head).build();\r\n    }\r\n    excelWriter.write(xxxVO.getVOList(), writeSheet);\r\n    response.getOutputStream().flush();\r\n}\r\n/// 千万别忘记finish 会帮忙关闭流\r\nif(excelWriter != null) {\r\n    excelWriter.finish();\r\n}\r\n}\r\n```\r\n**异常提示**\r\n\r\n**建议描述**\r\n这块当数据量较大时候，nginx会拦截导致响应超时，前端返回504\r\n想问的是如何写能够每页数据查询出来之后写入outstream，直接输出到浏览器端\r\n这样不断写入，不断滚动导出。就不会超时了.",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/983/comments",
    "author": "xingkong-star",
    "comments": [
      {
        "user": "pdkst",
        "created_at": "2019-12-18T03:23:45Z",
        "body": "大数据量请异步任务保存到oss或自建存储上，然后任务完成后把key值交给前端进行下载，分批响应会占用服务器线程，显著降低服务器并发的"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2019-12-18T11:00:21Z",
        "body": "参照楼上，直接成功。过段时间 ，再问后台好了没。"
      },
      {
        "user": "xingkong-star",
        "created_at": "2019-12-18T11:46:25Z",
        "body": "ok,已经改成异步方式"
      }
    ]
  },
  {
    "number": 978,
    "title": "关于写出Exce咨询l",
    "created_at": "2019-12-13T08:56:10Z",
    "closed_at": "2020-03-17T15:06:10Z",
    "labels": [
      "help wanted",
      "pending verification"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/978",
    "body": "**代码**\r\n @Override\r\n    public CellData convertToExcelData(Integer val, ExcelContentProperty excelContentProperty,GlobalConfiguration globalConfiguration){\r\n        String fieldName = excelContentProperty.getHead().getFieldName();\r\n        Class<?> declaringClass = excelContentProperty.getField().getDeclaringClass();\r\n        Object bean=null;\r\n        try {\r\n            bean = declaringClass.newInstance();\r\n        }catch (Exception e){\r\n        }\r\n        String dicName = DicExcelUtils.getDicName(fieldName, val,bean);\r\n        return new CellData(CellDataTypeEnum.STRING,dicName); \r\n    }\r\n   这里写你的代码\r\n```\r\n**异常提示**\r\n如果我输出的单元格名称如果字段为空null 会报错.  我想写出单元格空如果解决\r\n**建议描述**\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/978/comments",
    "author": "feifei498536",
    "comments": [
      {
        "user": "pdkst",
        "created_at": "2019-12-18T03:29:50Z",
        "body": "试试空字符串"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2019-12-18T11:07:37Z",
        "body": "不应该 。请提供详细代码。为null 应该就是空单元格。"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2020-03-17T15:06:09Z",
        "body": "目前是否已经解决，如果未解决请重新打开代码"
      }
    ]
  },
  {
    "number": 974,
    "title": "@ExcelProperty works case sensitivity.",
    "created_at": "2019-12-12T11:25:57Z",
    "closed_at": "2020-03-17T15:05:37Z",
    "labels": [
      "help wanted",
      "pending verification"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/974",
    "body": "**异常代码**\r\n```java\r\n     @ExcelProperty(value = \"Barkod\")\r\n     private String barcode;\r\n```\r\n**异常提示**\r\nIs there any way to get excel headers without checking case sensitivity, for example, my column heading is \"Barkod\" that I've reported above, but I want a valid title without case sensitivity.\r\nBecause \"Barkod\", \"barkod\", \"BarkoD\" and so on. All combinations are the same and valid for the title.\r\n**建议描述**\r\nThank you for your time",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/974/comments",
    "author": "busrauman",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-12-18T11:12:03Z",
        "body": "This is not currently supported.Let's talk to the other members and add configuration variables."
      }
    ]
  },
  {
    "number": 967,
    "title": "这个支持 TSV、CSV 格式的吗 ",
    "created_at": "2019-12-09T10:50:12Z",
    "closed_at": "2019-12-12T10:16:05Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/967",
    "body": "**异常代码**\r\n```java\r\n   这里写你的代码\r\n```\r\n**异常提示**\r\n请提供完整的异常提示,记住是全部异常！\r\n**建议描述**\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/967/comments",
    "author": "mooneal",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-12-12T10:16:05Z",
        "body": "目前不支持。"
      }
    ]
  },
  {
    "number": 966,
    "title": "这个支持，设置excel写入的编码吗",
    "created_at": "2019-12-09T06:42:55Z",
    "closed_at": "2019-12-12T10:16:45Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/966",
    "body": "**异常代码**\r\n```java\r\n   这里写你的代码\r\n```\r\n**异常提示**\r\n请提供完整的异常提示,记住是全部异常！\r\n**建议描述**\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/966/comments",
    "author": "Yuanjavawei",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-12-12T10:16:45Z",
        "body": "不支持"
      }
    ]
  },
  {
    "number": 965,
    "title": "关于写出Excel的时候异常处理 ",
    "created_at": "2019-12-09T05:52:47Z",
    "closed_at": "2019-12-12T10:17:29Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/965",
    "body": "咨询一下,读Excel时会进行监听,可以获取到哪些单元格有异常\r\n@Override\r\npublic void onException(Exception exception, AnalysisContext context) {\r\n上述这个方法\r\n但是写出操作时候,就不能用和这个方法了?",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/965/comments",
    "author": "feifei498536",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-12-12T10:17:29Z",
        "body": "对"
      }
    ]
  },
  {
    "number": 964,
    "title": "可以在Excel最后一行新增一个统计列数据的功能吗",
    "created_at": "2019-12-09T03:26:03Z",
    "closed_at": "2019-12-12T10:18:59Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/964",
    "body": "**建议描述**\r\n需要对某一列进行统计，将统计结果写入最后一行",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/964/comments",
    "author": "lanshiqin",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-12-12T10:18:58Z",
        "body": "建议用java写。一定要公式 #807 "
      }
    ]
  },
  {
    "number": 955,
    "title": "在监听器中获取到的sheet如何转为WriteSheet",
    "created_at": "2019-12-06T09:25:08Z",
    "closed_at": "2019-12-12T10:22:46Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/955",
    "body": "**异常代码**\r\n```java\r\n\r\n...\r\n //获取工作簿\r\n Workbook workbook = writeWorkbookHolder.getWorkbook();\r\n//获取第三页sheet\r\nSheet sheet = workbook.getSheetAt(2);\r\n //如何将sheet转为WriteSheet进行操作\r\n   ...\r\n```\r\n**异常提示**\r\n需要将sheet转为WriteSheet，但封装过于复杂\r\n**建议描述**\r\n希望得到技术支持，麻烦",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/955/comments",
    "author": "GitHubUDA",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-12-12T10:22:46Z",
        "body": "您是使用poi的写法读取。读poi和easyexcel完全不一样，建议按照demo书写。"
      }
    ]
  },
  {
    "number": 953,
    "title": "excel导入可以限制单元格字段长度吗",
    "created_at": "2019-12-06T08:59:11Z",
    "closed_at": "2019-12-12T10:25:04Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/953",
    "body": "package com.alibaba.easyexcel.test.demo.read;\r\n\r\nimport java.util.Date;\r\n\r\nimport lombok.Data;\r\n\r\n/**\r\n * 基础数据类.这里的排序和excel里面的排序一致\r\n *\r\n * @author Jiaju Zhuang\r\n **/\r\n@Data\r\npublic class ExceptionDemoData {\r\n    /**\r\n     * 用日期去接字符串 肯定报错\r\n     */\r\n    private Date date;\r\n\r\n    /**\r\n     * 可以限制长度吗\r\n     */\r\n    private String test;\r\n}\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/953/comments",
    "author": "johowang",
    "comments": [
      {
        "user": "pdkst",
        "created_at": "2019-12-06T09:08:07Z",
        "body": "Listener中判断一下就可以了"
      },
      {
        "user": "johowang",
        "created_at": "2019-12-06T09:54:05Z",
        "body": "请问有demo吗 "
      },
      {
        "user": "pdkst",
        "created_at": "2019-12-06T10:39:15Z",
        "body": "```\r\npublic class DemoDataListener extends AnalysisEventListener<DemoData> {\r\n    private static final Logger LOGGER = LoggerFactory.getLogger(DemoDataListener.class);\r\n\r\n    /**\r\n     * 这个每一条数据解析都会来调用\r\n     *\r\n     * @param data\r\n     *            one row value. Is is same as {@link AnalysisContext#readRowHolder()}\r\n     * @param context\r\n     */\r\n    @Override\r\n    public void invoke(DemoData data, AnalysisContext context) {\r\n        LOGGER.info(\"解析到一条数据:{}\", JSON.toJSONString(data));\r\n        Assert.hasText(data.getString(), \"string不能为空！\");\r\n        Assert.isTrue(data.getString().length() < 100 , \"string长度不能超过100！\");\r\n    }\r\n\r\n    /**\r\n     * 所有数据解析完成了 都会来调用\r\n     *\r\n     * @param context\r\n     */\r\n    @Override\r\n    public void doAfterAllAnalysed(AnalysisContext context) {\r\n        // 这里也要保存数据，确保最后遗留的数据也存储到数据库\r\n        LOGGER.info(\"所有数据解析完成！\");\r\n    }\r\n}\r\n```"
      }
    ]
  },
  {
    "number": 951,
    "title": "使用apache poi写3000合并列，消耗19分钟",
    "created_at": "2019-12-06T06:28:35Z",
    "closed_at": "2019-12-12T10:23:40Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/951",
    "body": "\r\neasyexecel支持分组的map数据结构吗？\r\n目前使用的是Apache poi，实现的逻辑是这样的：\r\n1.先从数据库取出数据，List<Object[]> dataList\r\nObject[] 包含date字段，city字段，指标1，指标2\r\n\r\n2. dataList根据date字段分组，得到rowMap，\r\ndataList根据city字段分组，得到colMap\r\n\r\n3.\r\n3.1根据rowMap得到keySet：dates数组写第一列；\r\n3.2根据colMap得到keySet：city数组，从第2列开始写数据的列头，因为每个city有两个指标数据，所以city列头是合并单元格；\r\n3.3写完city列头，写指标列头（每个city下面都有相同的两个指标，比如count,prices）\r\n3.4遍历city数组，通过colMap，rowMap，获取到city的某个date的两个指标，写数据\r\n\r\n4.数据量：\r\n2行：2019-11-10，2019-11-11\r\n3000个城市，3000个合并列\r\n平均耗时19分钟\r\n\r\nWorkbook使用的是SXSSFWorkbook\r\n合并列使用的是\r\nsheet.addMergedRegionUnsafe(region);\r\n\r\n能否给一些优化建议，谢谢\r\n\r\n**异常代码**\r\n```java\r\n   这里写你的代码\r\n```\r\n**异常提示**\r\n请提供完整的异常提示,记住是全部异常！\r\n**建议描述**\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/951/comments",
    "author": "zhouzach",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-12-12T10:23:40Z",
        "body": "这个目前我也没遇到过。建议去poi stackoverfolw咨询。"
      }
    ]
  },
  {
    "number": 949,
    "title": "如何结合\"监听器写入\"和\"在其他sheet中写入\"",
    "created_at": "2019-12-06T03:31:53Z",
    "closed_at": "2019-12-12T10:26:25Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/949",
    "body": "**异常代码**\r\n```java\r\n  //controller\r\n...\r\nelse if (\"cpzb\".equals(fileName)){\r\n            EasyExcel.write(response.getOutputStream()).withTemplate(templateFileName).sheet().registerWriteHandler(cpzbListener).doWrite(new ArrayList());\r\n...\r\n\r\n\r\n  //监听器\r\n...\r\n  @Override\r\n    public void afterSheetCreate(WriteWorkbookHolder writeWorkbookHolder, WriteSheetHolder writeSheetHolder) {\r\n        \r\n        //获取需作为excel下拉列表的数据(默认第一个sheet)\r\n        List<String> pflxList = new ArrayList();\r\n        List<Map<String, String>> pflx = dictionariesService.getField(\"a7287249410f42ec8efe5653795c1825\");\r\n        if (pflx.size() > 0) {\r\n            for (Map<String, String> map : pflx) {\r\n                System.out.println(\"评分类型\" + map.get(\"NAME\"));\r\n                pflxList.add(map.get(\"NAME\"));\r\n            }\r\n            String[] pflxStr = pflxList.toArray(new String[pflxList.size()]);\r\n\r\n            //设置作用范围且填充数据(默认第一个sheet)\r\n            CellRangeAddressList cellRangeAddressList1 = new CellRangeAddressList(1, 9999, 4, 4);\r\n            DataValidationHelper helper1 = writeSheetHolder.getSheet().getDataValidationHelper();\r\n            DataValidationConstraint constraint1 = helper1.createExplicitListConstraint(pflxStr);\r\n            DataValidation dataValidation1 = helper1.createValidation(constraint1, cellRangeAddressList1);\r\n            writeSheetHolder.getSheet().addValidationData(dataValidation1);\r\n        }\r\n\r\n        \r\n        //监听器中如何获取fileName和excelWriter (问题1)\r\n        //excelWriter = EasyExcel.write(fileName, DemoData.class).build();\r\n        \r\n         //每次都要创建writeSheet 这里注意必须指定sheetNo\r\n         //WriteSheet writeSheet = EasyExcel.writerSheet(2, \"数据\").build();\r\n        \r\n         //查询数据/查询出来的数据不是对应实体类需要转换吗 （问题2）\r\n         //List<Map<String, String>> level = cpzbService.getLevel(\"JB003\"); \r\n\r\n         //写入\r\n         //excelWriter.write(data, writeSheet);\r\n         \r\n         //关闭\r\n         //excelWriter.finish();\r\n```\r\n**异常提示**\r\n使用监听器填充excel数据，但由于某些数据太长无法形成下拉列表，想将数据写入新的sheet中(直接写，非下拉列表)，然后在主要sheet中引入该sheet数据，但在监听器中不知道如何将数据填写到其他(指定)sheet的指定范围内。\r\n**建议描述**\r\n希望得到技术援助 谢谢\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/949/comments",
    "author": "GitHubUDA",
    "comments": [
      {
        "user": "pdkst",
        "created_at": "2019-12-06T04:05:10Z",
        "body": "```\r\n        //监听器中如何获取fileName和excelWriter (问题1)\r\n        //不需要获取\r\n        //excelWriter = EasyExcel.write(fileName, DemoData.class).build();\r\n        \r\n         //每次都要创建writeSheet 这里注意必须指定sheetNo\r\n         //WriteSheet writeSheet1 = EasyExcel.writerSheet(1, \"数据\").build();\r\n         //每次都要创建writeSheet 这里注意必须指定sheetNo\r\n         //WriteSheet writeSheet2 = EasyExcel.writerSheet(2, \"被引用的数据\").build();\r\n        \r\n         //查询数据/查询出来的数据不是对应实体类需要转换吗 （问题2）\r\n         //有动态写入的方法\r\n         //List<List<String>> level = cpzbService.getLevel(\"JB003\"); \r\n\r\n         //写入数据\r\n         //excelWriter.write(data, writeSheet1);\r\n         //写入引用的数据\r\n         //excelWriter.write(level, writeSheet2);\r\n         \r\n         //关闭\r\n         //excelWriter.finish();\r\n```"
      }
    ]
  },
  {
    "number": 948,
    "title": "如何锁定指定的列",
    "created_at": "2019-12-06T01:36:52Z",
    "closed_at": "2020-04-22T12:31:24Z",
    "labels": [
      "help wanted",
      "pending verification"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/948",
    "body": "**异常代码**\r\npublic class CustomCellWriteHandler implements CellWriteHandler {\r\n\r\n\r\n    @Override\r\n    public void beforeCellCreate(WriteSheetHolder writeSheetHolder, WriteTableHolder writeTableHolder, Row row,\r\n                                 Head head, int relativeRowIndex, boolean isHead) {\r\n\r\n    }\r\n\r\n    @Override\r\n    public void afterCellCreate(WriteSheetHolder writeSheetHolder, WriteTableHolder writeTableHolder, CellData cellData,\r\n                                Cell cell, Head head, int relativeRowIndex, boolean isHead) {\r\n        // 锁定前三列\r\n        if (cell.getColumnIndex() <= 2) {\r\n            CellStyle cellStyle = cell.getCellStyle();\r\n            cellStyle.setLocked(true);\r\n            cell.setCellStyle(cellStyle);\r\n        } else {\r\n            CellStyle cellStyle = cell.getCellStyle();\r\n            cellStyle.setLocked(false);\r\n            cell.setCellStyle(cellStyle);\r\n        }\r\n    }\r\n}\r\n\r\npublic class CustomSheetWriteHandler implements SheetWriteHandler {\r\n\r\n    @Override\r\n    public void beforeSheetCreate(WriteWorkbookHolder writeWorkbookHolder, WriteSheetHolder writeSheetHolder) {\r\n\r\n    }\r\n\r\n    @Override\r\n    public void afterSheetCreate(WriteWorkbookHolder writeWorkbookHolder, WriteSheetHolder writeSheetHolder) {\r\n\r\n        writeSheetHolder.getSheet().protectSheet(\"\");\r\n\r\n    }\r\n}\r\n\r\n这样实现两个接口，最终结果为整个sheet都不锁定，我想实现指定列锁定应该怎么做呢？\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/948/comments",
    "author": "bmh626",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-12-12T10:29:39Z",
        "body": "设置`inmomery=true`试试"
      },
      {
        "user": "bmh626",
        "created_at": "2019-12-18T07:33:43Z",
        "body": "> 设置`inmomery=true`试试\r\n\r\n尝试了，不起作用。"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2020-04-22T12:31:24Z",
        "body": "实测没问题。\r\n实现拦截器：\r\n```java\r\n@Slf4j\r\npublic class WriteHandler extends AbstractSheetWriteHandler {\r\n\r\n    @Override\r\n    public void afterSheetCreate(WriteWorkbookHolder writeWorkbookHolder,\r\n        WriteSheetHolder writeSheetHolder) {\r\n        log.info(\"锁住\");\r\n        writeSheetHolder.getSheet().protectSheet(\"edit\");\r\n    }\r\n}\r\n\r\n```\r\n\r\n然后那边是style用lock参数即可。"
      }
    ]
  },
  {
    "number": 947,
    "title": "查询数据太长填充到excel作为下拉列表时无数据",
    "created_at": "2019-12-05T09:25:19Z",
    "closed_at": "2019-12-12T10:36:38Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/947",
    "body": "**异常代码**\r\n```java\r\n  //三级分类\r\n        List<String> three = new ArrayList<>();\r\n        List<Map<String, String>> threeList = cpzbService.getLevel(\"JB003\");\r\n        if (threeList.size() > 0) {\r\n            for (Map<String, String> map : threeList) {\r\n                System.out.println(\"三级分类\" + map.get(\"NAME\"));\r\n                three.add(map.get(\"NAME\"));\r\n            }\r\n            String[] threeStr = three.toArray(new String[three.size()]);\r\n            for (String s : threeStr) {\r\n                System.out.println(\"查看A：\" + s);\r\n            }\r\n\r\n            CellRangeAddressList cellRangeAddressList4 = new CellRangeAddressList(1, 9999, 7, 7);\r\n            DataValidationHelper helper4 = writeSheetHolder.getSheet().getDataValidationHelper();\r\n            DataValidationConstraint constraint4 = helper4.createExplicitListConstraint(threeStr);\r\n            DataValidation dataValidation4 = helper4.createValidation(constraint4, cellRangeAddressList4);\r\n            writeSheetHolder.getSheet().addValidationData(dataValidation4);\r\n        }\r\n```\r\n**异常提示**\r\n没有报任何异常，只是如果作为下拉列表的数据太长，则在excel中无法显示数据，且无任何提示\r\n**建议描述**\r\n希望能获得解决援助",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/947/comments",
    "author": "GitHubUDA",
    "comments": [
      {
        "user": "pdkst",
        "created_at": "2019-12-05T14:45:28Z",
        "body": "这个是excel的限制，下拉框所有数据的总长度不能超过255（ms-office直接不能打开，wps能打开但是不能下拉）"
      }
    ]
  },
  {
    "number": 946,
    "title": " Cannot call reset() after response has been committed、Can not close IO.",
    "created_at": "2019-12-05T09:22:57Z",
    "closed_at": "2019-12-12T10:28:43Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/946",
    "body": "**异常代码**\r\n```java\r\n try {\r\n            response.setContentType(\"application/vnd.ms-excel\");\r\n            response.setCharacterEncoding(\"utf-8\");\r\n            response.setHeader(\"Content-disposition\", \"attachment;filename=\" + URLEncoder.encode(fileName, \"utf-8\") + excelType);\r\n            EasyExcel.write(response.getOutputStream(), clazz).autoCloseStream(Boolean.FALSE).sheet(sheetName).doWrite(data);\r\n        } catch (Exception var7) {\r\n            response.reset();\r\n            response.setContentType(\"application/json\");\r\n            response.setCharacterEncoding(\"utf-8\");\r\n            response.getWriter().println(JSON.toJSONString(Result.error(ExcelStatusEnum.ERROR.getMsg())));\r\n        }\r\n```\r\n**异常提示**\r\njava.lang.IllegalStateException: Cannot call reset() after response has been committed\r\n\tat org.apache.catalina.connector.ResponseFacade.reset(ResponseFacade.java:347) ~[tomcat-embed-core-9.0.27.jar:9.0.27]\r\n\tat com.jester.util.utils.ExcelUtil.process(ExcelUtil.java:77) ~[util-1.0.0.jar:1.0.0]\r\n\tat com.jester.util.utils.ExcelUtil.download(ExcelUtil.java:35) ~[util-1.0.0.jar:1.0.0]\r\n\tat com.jester.springboot.controller.UserController.downloadFailedUsingJson(UserController.java:62) ~[classes/:na]\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_162]\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_162]\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_162]\r\n\tat java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_162]\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:634) ~[tomcat-embed-core-9.0.27.jar:9.0.27]\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.27.jar:9.0.27]\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.27.jar:9.0.27]\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.27.jar:9.0.27]\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.27.jar:9.0.27]\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.27.jar:9.0.27]\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526) [tomcat-embed-core-9.0.27.jar:9.0.27]\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.27.jar:9.0.27]\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.27.jar:9.0.27]\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.27.jar:9.0.27]\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.27.jar:9.0.27]\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408) [tomcat-embed-core-9.0.27.jar:9.0.27]\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-9.0.27.jar:9.0.27]\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861) [tomcat-embed-core-9.0.27.jar:9.0.27]\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579) [tomcat-embed-core-9.0.27.jar:9.0.27]\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.27.jar:9.0.27]\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_162]\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_162]\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.27.jar:9.0.27]\r\n\tat java.lang.Thread.run(Thread.java:748) [na:1.8.0_162]\r\n\r\n\r\n**建议描述**\r\n数据量比较大的时候就是出现这个异常，另外还有报“Can not close IO.”异常。",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/946/comments",
    "author": "jiansite",
    "comments": [
      {
        "user": "pdkst",
        "created_at": "2019-12-05T15:02:22Z",
        "body": "改成下面这个样子试试，\r\n\r\n```java\r\n        try {\r\n            final ExcelWriter excelWriter = EasyExcel.write(response.getOutputStream(), clazz).build();\r\n            final WriteSheet writeSheet = excelWriter.sheet(sheetName).build();\r\n            excelWriter.write(data, writeSheet);\r\n\r\n            response.setContentType(\"application/vnd.ms-excel\");\r\n            response.setCharacterEncoding(\"utf-8\");\r\n            response.setHeader(\"Content-disposition\", \"attachment;filename=\" + URLEncoder.encode(fileName, \"utf-8\") + excelType);\r\n            excelWriter.finish();;\r\n        } catch (Exception var7) {\r\n            response.setContentType(\"application/json\");\r\n            response.setCharacterEncoding(\"utf-8\");\r\n            response.getWriter().println(JSON.toJSONString(Result.error(ExcelStatusEnum.ERROR.getMsg())));\r\n        }\r\n```\r\n\r\n另外`response.reset();`是删除首部空行"
      }
    ]
  },
  {
    "number": 939,
    "title": "解析excel,分批处理,是没多大问题...那生成excel导致内存飙升,这个问题有好的方案没?",
    "created_at": "2019-12-04T10:46:04Z",
    "closed_at": "2020-01-15T13:07:15Z",
    "labels": [
      "help wanted",
      "developing"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/939",
    "body": "**异常代码**\r\n```java\r\n   这里写你的代码\r\n```\r\n**异常提示**\r\n请提供完整的异常提示,记住是全部异常！\r\n**建议描述**\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/939/comments",
    "author": "yipixiaofeiyang",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-12-12T10:37:48Z",
        "body": "这个目前没办法。最后调用的是poi，最后写文件的时候会内存飙升，后续考虑解决方案。"
      }
    ]
  },
  {
    "number": 937,
    "title": "多线程写不同sheet 报错",
    "created_at": "2019-12-03T12:12:42Z",
    "closed_at": "2019-12-12T10:33:02Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/937",
    "body": "**异常代码**\r\n```java\r\n\r\nString fileName = TestFileUtil.getPath() + \"repeatedWrite\" + System.currentTimeMillis() + \".xlsx\";\r\n        // 这里 指定文件\r\n        ExcelWriter excelWriter = EasyExcel.write(fileName).build();\r\n        CountDownLatch countDownLatch = new CountDownLatch(5);\r\n        // 去调用写入,这里我调用了五次，实际使用时根据数据库分页的总的页数来。这里最终会写到5个sheet里面\r\n        for (int i = 0; i < 5; i++) {\r\n            // 每次都要创建writeSheet 这里注意必须指定sheetNo。这里注意DemoData.class 可以每次都变，我这里为了方便 所以用的同一个class 实际上可以一直变\r\n            WriteSheet writeSheet = EasyExcel.writerSheet(i, \"模板\"+i).head(head()).build();\r\n            // 分页去数据库查询数据 这里可以去数据库查询每一页的数据\r\n            taskExecutor.execute(()->write(countDownLatch,excelWriter, writeSheet));\r\n        }\r\n        /// 千万别忘记finish 会帮忙关闭流\r\n        try {\r\n            countDownLatch.await();\r\n        } catch (InterruptedException e) {\r\n            e.printStackTrace();\r\n        }\r\n        excelWriter.finish();\r\n\r\n\r\n private void write(CountDownLatch countDownLatch,ExcelWriter excelWriter, WriteSheet writeSheet) {\r\n\r\n        List<DemoData> data = data();\r\n        excelWriter.write(data, writeSheet);\r\n        countDownLatch.countDown();\r\n    }\r\n   这里写你的代码\r\n```\r\n**异常提示**\r\n请提供完整的异常提示,记住是全部异常！\r\nException in thread \"Async-Service-1\" org.apache.poi.POIXMLException: org.apache.poi.openxml4j.exceptions.InvalidOperationException: You can't add a part with a part name derived from another part ! [M1.11]\r\n\tat org.apache.poi.POIXMLDocumentPart.createRelationship(POIXMLDocumentPart.java:533)\r\n\tat org.apache.poi.xssf.usermodel.XSSFWorkbook.createSheet(XSSFWorkbook.java:876)\r\n\tat org.apache.poi.xssf.streaming.SXSSFWorkbook.createSheet(SXSSFWorkbook.java:679)\r\n\tat org.apache.poi.xssf.streaming.SXSSFWorkbook.createSheet(SXSSFWorkbook.java:90)\r\n\tat com.alibaba.excel.util.WorkBookUtil.createSheet(WorkBookUtil.java:66)\r\n\tat com.alibaba.excel.context.WriteContextImpl.initSheet(WriteContextImpl.java:154)\r\n\tat com.alibaba.excel.context.WriteContextImpl.currentSheet(WriteContextImpl.java:131)\r\n\tat com.alibaba.excel.write.ExcelBuilderImpl.addContent(ExcelBuilderImpl.java:56)\r\n\tat com.alibaba.excel.ExcelWriter.write(ExcelWriter.java:161)\r\n\tat com.alibaba.excel.ExcelWriter.write(ExcelWriter.java:146)\r\n\tat com.bingkun.weixin.controller.GreetingController.write(GreetingController.java:77)\r\n\tat com.bingkun.weixin.controller.GreetingController.lambda$download$0(GreetingController.java:62)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.poi.openxml4j.exceptions.InvalidOperationException: You can't add a part with a part name derived from another part ! [M1.11]\r\n\tat org.apache.poi.openxml4j.opc.PackagePartCollection.put(PackagePartCollection.java:63)\r\n\tat org.apache.poi.openxml4j.opc.OPCPackage.createPart(OPCPackage.java:896)\r\n\tat org.apache.poi.openxml4j.opc.OPCPackage.createPart(OPCPackage.java:833)\r\n\tat org.apache.poi.POIXMLDocumentPart.createRelationship(POIXMLDocumentPart.java:513)\r\n\t... 14 more\r\nException in thread \"Async-Service-2\" org.apache.poi.POIXMLException: org.apache.poi.openxml4j.exceptions.InvalidOperationException: You can't add a part with a part name derived from another part ! [M1.11]\r\n\tat org.apache.poi.POIXMLDocumentPart.createRelationship(POIXMLDocumentPart.java:533)\r\n\tat org.apache.poi.xssf.usermodel.XSSFWorkbook.createSheet(XSSFWorkbook.java:876)\r\n\tat org.apache.poi.xssf.streaming.SXSSFWorkbook.createSheet(SXSSFWorkbook.java:679)\r\n\tat org.apache.poi.xssf.streaming.SXSSFWorkbook.createSheet(SXSSFWorkbook.java:90)\r\n\tat com.alibaba.excel.util.WorkBookUtil.createSheet(WorkBookUtil.java:66)\r\n\tat com.alibaba.excel.context.WriteContextImpl.initSheet(WriteContextImpl.java:154)\r\n\tat com.alibaba.excel.context.WriteContextImpl.currentSheet(WriteContextImpl.java:131)\r\n\tat com.alibaba.excel.write.ExcelBuilderImpl.addContent(ExcelBuilderImpl.java:56)\r\n\tat com.alibaba.excel.ExcelWriter.write(ExcelWriter.java:161)\r\n\tat com.alibaba.excel.ExcelWriter.write(ExcelWriter.java:146)\r\n\tat com.bingkun.weixin.controller.GreetingController.write(GreetingController.java:77)\r\n\tat com.bingkun.weixin.controller.GreetingController.lambda$download$0(GreetingController.java:62)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.poi.openxml4j.exceptions.InvalidOperationException: You can't add a part with a part name derived from another part ! [M1.11]\r\n\tat org.apache.poi.openxml4j.opc.PackagePartCollection.put(PackagePartCollection.java:63)\r\n\tat org.apache.poi.openxml4j.opc.OPCPackage.createPart(OPCPackage.java:896)\r\n\tat org.apache.poi.openxml4j.opc.OPCPackage.createPart(OPCPackage.java:833)\r\n\tat org.apache.poi.POIXMLDocumentPart.createRelationship(POIXMLDocumentPart.java:513)\r\n\t... 14 more\r\nException in thread \"Async-Service-5\" org.apache.poi.POIXMLException: org.apache.poi.openxml4j.exceptions.InvalidOperationException: You can't add a part with a part name derived from another part ! [M1.11]\r\n\tat org.apache.poi.POIXMLDocumentPart.createRelationship(POIXMLDocumentPart.java:533)\r\n\tat org.apache.poi.xssf.usermodel.XSSFWorkbook.createSheet(XSSFWorkbook.java:876)\r\n\tat org.apache.poi.xssf.streaming.SXSSFWorkbook.createSheet(SXSSFWorkbook.java:679)\r\n\tat org.apache.poi.xssf.streaming.SXSSFWorkbook.createSheet(SXSSFWorkbook.java:90)\r\n\tat com.alibaba.excel.util.WorkBookUtil.createSheet(WorkBookUtil.java:66)\r\n\tat com.alibaba.excel.context.WriteContextImpl.initSheet(WriteContextImpl.java:154)\r\n\tat com.alibaba.excel.context.WriteContextImpl.currentSheet(WriteContextImpl.java:131)\r\n\tat com.alibaba.excel.write.ExcelBuilderImpl.addContent(ExcelBuilderImpl.java:56)\r\n\tat com.alibaba.excel.ExcelWriter.write(ExcelWriter.java:161)\r\n\tat com.alibaba.excel.ExcelWriter.write(ExcelWriter.java:146)\r\n\tat com.bingkun.weixin.controller.GreetingController.write(GreetingController.java:77)\r\n\tat com.bingkun.weixin.controller.GreetingController.lambda$download$0(GreetingController.java:62)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.poi.openxml4j.exceptions.InvalidOperationException: You can't add a part with a part name derived from another part ! [M1.11]\r\n\tat org.apache.poi.openxml4j.opc.PackagePartCollection.put(PackagePartCollection.java:63)\r\n\tat org.apache.poi.openxml4j.opc.OPCPackage.createPart(OPCPackage.java:896)\r\n\tat org.apache.poi.openxml4j.opc.OPCPackage.createPart(OPCPackage.java:833)\r\n\tat org.apache.poi.POIXMLDocumentPart.createRelationship(POIXMLDocumentPart.java:513)\r\n\t... 14 more\r\nException in thread \"Async-Service-3\" org.apache.poi.openxml4j.exceptions.PartAlreadyExistsException: A part with the name '/xl/worksheets/sheet1.xml' already exists : Packages shall not contain equivalent part names and package implementers shall neither create nor recognize packages with equivalent part names. [M1.12]\r\n\tat org.apache.poi.openxml4j.opc.OPCPackage.createPart(OPCPackage.java:869)\r\n\tat org.apache.poi.openxml4j.opc.OPCPackage.createPart(OPCPackage.java:833)\r\n\tat org.apache.poi.POIXMLDocumentPart.createRelationship(POIXMLDocumentPart.java:513)\r\n\tat org.apache.poi.xssf.usermodel.XSSFWorkbook.createSheet(XSSFWorkbook.java:876)\r\n\tat org.apache.poi.xssf.streaming.SXSSFWorkbook.createSheet(SXSSFWorkbook.java:679)\r\n\tat org.apache.poi.xssf.streaming.SXSSFWorkbook.createSheet(SXSSFWorkbook.java:90)\r\n\tat com.alibaba.excel.util.WorkBookUtil.createSheet(WorkBookUtil.java:66)\r\n\tat com.alibaba.excel.context.WriteContextImpl.initSheet(WriteContextImpl.java:154)\r\n\tat com.alibaba.excel.context.WriteContextImpl.currentSheet(WriteContextImpl.java:131)\r\n\tat com.alibaba.excel.write.ExcelBuilderImpl.addContent(ExcelBuilderImpl.java:56)\r\n\tat com.alibaba.excel.ExcelWriter.write(ExcelWriter.java:161)\r\n\tat com.alibaba.excel.ExcelWriter.write(ExcelWriter.java:146)\r\n\tat com.bingkun.weixin.controller.GreetingController.write(GreetingController.java:77)\r\n\tat com.bingkun.weixin.controller.GreetingController.lambda$download$0(GreetingController.java:62)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n**建议描述**\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/937/comments",
    "author": "RobertDav",
    "comments": [
      {
        "user": "pdkst",
        "created_at": "2019-12-03T15:22:03Z",
        "body": "貌似不支持多线程"
      },
      {
        "user": "jsq211",
        "created_at": "2019-12-04T08:36:19Z",
        "body": "同出现过这个问题。。\r\n代码：\r\n\r\nprivate static void  writerSheets(int sheetNo, String sheetName, List data, ExcelWriter excelWriter, CountDownLatch countDownLatch){\r\n        try {\r\n            synchronized (excelWriter){\r\n                if (CollectionUtil.isNotEmpty(data)){\r\n                    String name =  sheetName + \"-\" + sheetNo;\r\n                    // 分页写入\r\n                    WriteSheet writeSheet =  EasyExcel.writerSheet(sheetNo, name).build();\r\n                    excelWriter.write(data, writeSheet);\r\n                }\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }finally {\r\n            countDownLatch.countDown();\r\n        }\r\n    }\r\n \r\n在多线程的时候写入的时候会报错：\r\n\r\njava.lang.IllegalArgumentException: Attempting to write a row[0] in the range [0,9500] that is already written to disk.\r\n\tat org.apache.poi.xssf.streaming.SXSSFSheet.createRow(SXSSFSheet.java:131)\r\n\tat org.apache.poi.xssf.streaming.SXSSFSheet.createRow(SXSSFSheet.java:65)\r\n\tat com.alibaba.excel.util.WorkBookUtil.createRow(WorkBookUtil.java:70)\r\n\tat com.alibaba.excel.context.WriteContextImpl.initHead(WriteContextImpl.java:178)\r\n\tat com.alibaba.excel.context.WriteContextImpl.initSheet(WriteContextImpl.java:161)\r\n\tat com.alibaba.excel.context.WriteContextImpl.currentSheet(WriteContextImpl.java:131)\r\n\tat com.alibaba.excel.write.ExcelBuilderImpl.addContent(ExcelBuilderImpl.java:56)\r\n\tat com.alibaba.excel.ExcelWriter.write(ExcelWriter.java:161)\r\n\tat com.alibaba.excel.ExcelWriter.write(ExcelWriter.java:146)\r\n\tat com.jsq.demo.common.utils.ExcelUtils.writerSheets(ExcelUtils.java:108)\r\n\tat com.jsq.demo.common.utils.ExcelUtils.lambda$writeMultiSheet$0(ExcelUtils.java:76)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n\r\n用SXSSFWorkbook进行多线程写入测试的时候是可以的\r\n不用线程的话用起来挺方便的~\r\n好气哦  ε=(´ο｀*)))"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2019-12-12T10:33:02Z",
        "body": "不支持多线程。"
      }
    ]
  },
  {
    "number": 931,
    "title": "CellDataTypeEnum咨询",
    "created_at": "2019-12-03T01:33:29Z",
    "closed_at": "2019-12-12T10:30:47Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/931",
    "body": "CellDataTypeEnum\r\n    STRING,\r\n    DIRECT_STRING,\r\n    NUMBER,\r\n    BOOLEAN,\r\n    EMPTY,\r\n    ERROR,\r\n    IMAGE;\r\n上述类型代表单元格的哪个类型呢.\r\n如果一个属性字段加了自定义转换器,该属性对应单元格是空,为何不走该转换器....\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/931/comments",
    "author": "feifei498536",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-12-12T10:30:47Z",
        "body": "空的话 目前直接会跳过。具体意思看注释。"
      }
    ]
  },
  {
    "number": 927,
    "title": "post 请求 应该咋写？",
    "created_at": "2019-12-02T06:33:46Z",
    "closed_at": "2019-12-02T12:55:52Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/927",
    "body": "**异常代码**\r\n```java\r\n   这里写你的代码\r\n```\r\n**异常提示**\r\n请提供完整的异常提示,记住是全部异常！\r\n**建议描述**\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/927/comments",
    "author": "RobertDav",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-12-02T12:55:52Z",
        "body": "这个需要自己网上查询下。"
      }
    ]
  },
  {
    "number": 926,
    "title": "如何读部分行数据呢？",
    "created_at": "2019-12-02T03:28:09Z",
    "closed_at": "2019-12-02T12:56:25Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/926",
    "body": "只想读excel部分行的数据，如只读前20行数据，该如何做呢？是否支持这样的需求？望指教，谢谢。",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/926/comments",
    "author": "liuxxx",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-12-02T12:56:25Z",
        "body": "调用监听器的`hasNext`方法，设置成false,后续的不会再读取。"
      },
      {
        "user": "zhaozilong678",
        "created_at": "2021-09-29T02:53:53Z",
        "body": "重写hasNext设置成false好像还是会自动往下读"
      }
    ]
  },
  {
    "number": 922,
    "title": "使用填充excel功能填充数据后公式无法生效",
    "created_at": "2019-11-29T09:10:03Z",
    "closed_at": "2019-11-29T11:51:50Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/922",
    "body": "我的模板中有些单元格的数据是通过excel公式计算的，但使用excel填充功能后公式没有正确生效，需要双击该填充内容后才生效。我查询到poi似乎是通过\r\n`workBook.setForceFormulaRecalculation(true);`\r\n刷新公式使其生效，不知道现版本的easyExcel是否有类似api？",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/922/comments",
    "author": "weibn",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-11-29T11:51:50Z",
        "body": "这个目前支持 设置 inmemoy=true  然后再通过拦截器设置这个。但是这个有问题就是操作都在内存了，要注意OOM。POI也一样 必须 在内存 这个才有效。"
      },
      {
        "user": "weibn",
        "created_at": "2019-12-01T15:39:07Z",
        "body": "> 这个目前支持 设置 inmemoy=true 然后再通过拦截器设置这个。但是这个有问题就是操作都在内存了，要注意OOM。POI也一样 必须 在内存 这个才有效。\r\n\r\n\r\n找到了非常感谢！"
      }
    ]
  },
  {
    "number": 921,
    "title": "可不可以在文件读取部分插入数据库环节失败就停止整个读写",
    "created_at": "2019-11-29T08:11:55Z",
    "closed_at": "2019-11-29T11:52:44Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/921",
    "body": "**异常代码**\r\n```java\r\n   这里写你的代码\r\n```\r\n**异常提示**\r\n请提供完整的异常提示,记住是全部异常！\r\n**建议描述**\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/921/comments",
    "author": "zhugekuangyi",
    "comments": [
      {
        "user": "pdkst",
        "created_at": "2019-11-29T09:19:19Z",
        "body": "不要拦截listener里的异常就可以了，invoke方法抛出的异常会被包装成`ExcelAnalysisException`让外部异常捕获捕获到就可以了，捕获到就可以回滚事务，如果想要即使出错也要继续执行则需要在invoke中手动捕获异常\r\n`public class DemoDataListener extends AnalysisEventListener<DemoData> {`"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2019-11-29T11:52:44Z",
        "body": "监听器 有个`hasNext` 返回false就不会读了。"
      }
    ]
  },
  {
    "number": 912,
    "title": "easyexcle（或者poi） 导出数据有没有多线程的模式？？？",
    "created_at": "2019-11-28T15:57:44Z",
    "closed_at": "2019-11-29T11:58:11Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/912",
    "body": "\r\neasyexcle（或者poi） 导出数据有没有多线程的模式？？？\r\n自己创建多个线程，将数据拆分，导出多个临时的excle，再临时的excle合并，这种模式是否真的能提升性能？存在什么问题。 可以帮忙解答一下么。",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/912/comments",
    "author": "17173YeYu",
    "comments": [
      {
        "user": "pdkst",
        "created_at": "2019-11-28T17:11:57Z",
        "body": "没有，不能，多次读写可能会造成性能下降……，\r\n导出这种问题，性能主要集中在数据库查询数据上，\r\n导出占用比较稳定，其实并不会占用太多额外的性能……，\r\n如果真的需要不同读取方案，我觉得将需求拆分成多个文件可能更适合"
      },
      {
        "user": "17173YeYu",
        "created_at": "2019-11-29T01:49:50Z",
        "body": "好的，谢谢哈"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2019-11-29T11:58:11Z",
        "body": "目前 easyexcel肯定不支持。poi 单个sheet肯定也不支持，多个不确定以 你也可以研究下。但是一般 单线程够了，不会慢"
      },
      {
        "user": "17173YeYu",
        "created_at": "2019-11-30T00:44:50Z",
        "body": "好的，谢谢\r\n\r\n\r\n\r\n---原始邮件---\r\n发件人: \"Jiaju Zhuang\"<notifications@github.com&gt;\r\n发送时间: 2019年11月29日(星期五) 晚上7:58\r\n收件人: \"alibaba/easyexcel\"<easyexcel@noreply.github.com&gt;;\r\n抄送: \"17173YeYu\"<951520363@qq.com&gt;;\"Author\"<author@noreply.github.com&gt;;\r\n主题: Re: [alibaba/easyexcel] easyexcle（或者poi） 导出数据有没有多线程的模式？？？ (#912)\r\n\r\n\r\n\r\n目前 easyexcel肯定不支持。poi 单个sheet肯定也不支持，多个不确定以 你也可以研究下。但是一般 单线程够了，不会慢\r\n \r\n—\r\nYou are receiving this because you authored the thread.\r\nReply to this email directly, view it on GitHub, or unsubscribe."
      }
    ]
  },
  {
    "number": 909,
    "title": "请问如何获取单元格中的超链接？",
    "created_at": "2019-11-28T09:40:25Z",
    "closed_at": "2019-11-28T12:13:07Z",
    "labels": [
      "help wanted",
      "developing"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/909",
    "body": "",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/909/comments",
    "author": "lianglx-T",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-11-28T12:13:07Z",
        "body": "目前不支持 应该会在下个大版本支持"
      }
    ]
  },
  {
    "number": 906,
    "title": "ReadSheet.read()  方法不能传入两个sheet",
    "created_at": "2019-11-28T04:54:19Z",
    "closed_at": "2019-11-28T12:14:46Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/906",
    "body": "\r\nexcelReader.read(readSheet1,readSheet2); 报错\r\n\r\nexcelReader.read(readSheet1);\r\nexcelReader.read(readSheet2);\r\n如果这样写的话第一个sheet中的数据能拿到，后面的会报空指针异常\r\n\r\n详细代码如下：\r\nCycleFlightScheduleBean cycleFlightScheduleBean = new CycleFlightScheduleBean();\r\n        ExcelReader excelReader = EasyExcel.read(inputStream).build();\r\n        //读取sheet1\r\n        ReadSheet readSheet1 =\r\n                EasyExcel.readSheet(1).registerReadListener(new AnalysisEventListener<Map<Integer, String>>() {\r\n                    @Override\r\n                    public void invoke(Map<Integer, String> map, AnalysisContext analysisContext) {\r\n                        //去掉首航\r\n                        if (analysisContext.readRowHolder().getRowIndex() > 0) {\r\n                            cycleFlightScheduleBean.setAirportCode(map.get(2));\r\n                            cycleFlightScheduleBean.setFromDate(DateUtil.getDateTimeFormat(map.get(0)));\r\n                            cycleFlightScheduleBean.setToDate(DateUtil.getDateTimeFormat(map.get(1)));\r\n                        }\r\n                    }\r\n                    @Override\r\n                    public void doAfterAllAnalysed(AnalysisContext analysisContext) {\r\n\r\n                    }\r\n                }).build();\r\nReadSheet readSheet2 =\r\n                EasyExcel.readSheet(1).registerReadListener(new AnalysisEventListener<Map<Integer, String>>() {\r\n                    @Override\r\n                    public void invoke(Map<Integer, String> object, AnalysisContext analysisContext) {\r\n                        //获取头部\r\n                        List<String> allHead = new ArrayList<>();\r\n                        if (analysisContext.readRowHolder().getRowIndex() == 0) {\r\n                            //校验是否存在未定义属性\r\n                            object.forEach((integer, value) -> {\r\n                                if (!attributeNames.contains(value)) {\r\n                                    throw new PrepareException(\"500\", \"未定义相关属性，请于属性定义中添加对应属性后导入！\");\r\n                                }\r\n                                allHead.add(value);\r\n                            });\r\n                            headList.addAll(allHead.subList(0, length));\r\n                            if (object.size() > length) {\r\n                                //扩展字段\r\n                                excessAttr.addAll(allHead.subList(length, object.size()));\r\n                            }\r\n\t\t\t\t\t\t}\r\n                    }\r\n\r\n                    @Override\r\n                    public void doAfterAllAnalysed(AnalysisContext analysisContext) {\r\n                        System.out.println(cycleFlightScheduleBean);\r\n                        System.out.println(allHead);\r\n                    }\r\n                }).build();\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/906/comments",
    "author": "dongloveying0706",
    "comments": [
      {
        "user": "pdkst",
        "created_at": "2019-11-28T05:04:47Z",
        "body": "`EasyExcel.readSheet(sheetNo)`指定读取那个sheet页，sheetNo从0开始"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2019-11-28T12:14:46Z",
        "body": "2.1.3"
      }
    ]
  },
  {
    "number": 905,
    "title": "只是简单的写入excel，有办法不依赖poi？",
    "created_at": "2019-11-28T02:44:42Z",
    "closed_at": "2019-11-28T12:14:20Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/905",
    "body": "系统其中一个很简单的功能，就把数据导出为excel文件，没有复杂修饰excel 操作，poi 依赖的库太大了，有办法不依赖poi jar，想缩减war 包的大小",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/905/comments",
    "author": "melin",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-11-28T12:14:20Z",
        "body": "easyexcel 写就是封装了 poi 所以目前无法脱离，读 才是自己写的。"
      }
    ]
  },
  {
    "number": 904,
    "title": "relativeHeadRowIndex无法指定行写入",
    "created_at": "2019-11-27T10:24:30Z",
    "closed_at": "2020-03-17T15:01:16Z",
    "labels": [
      "bug",
      "help wanted",
      "developing"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/904",
    "body": "**我的代码**\r\n```java\r\n   EasyExcel.write(file, WtgInfoExcel.class).sheet(0).needHead(false).relativeHeadRowIndex(3).doWrite(wtgInfoData());\r\n```\r\n**疑问**\r\n该处设置relativeHeadRowIndex为3，但还是从首行写\r\n**请帮忙看下是否有问题**\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/904/comments",
    "author": "Shuang0909",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-11-27T10:35:32Z",
        "body": "这个有Bug,在不需要头的情况下会出现。"
      },
      {
        "user": "Shuang0909",
        "created_at": "2019-11-27T10:48:29Z",
        "body": "好的，我发现了，hasHead类型为NONE时可以用"
      },
      {
        "user": "dhp667",
        "created_at": "2021-11-10T02:16:41Z",
        "body": "@zhuangjiaju  请问这个问题什么版本修复的？  使用最新版本依旧有此问题"
      }
    ]
  },
  {
    "number": 903,
    "title": "cell对部分文本添加样式问题",
    "created_at": "2019-11-27T08:14:14Z",
    "closed_at": "2019-11-27T10:36:24Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/903",
    "body": "**异常代码**\r\n```java\r\n\r\n  public class HighlightCellWriteHandler implements CellWriteHandler {\r\n\r\n   \r\n    @Override\r\n    public void beforeCellCreate(WriteSheetHolder writeSheetHolder, WriteTableHolder writeTableHolder, Row row,\r\n                                 Head head, Integer columnIndex, Integer relativeRowIndex, Boolean isHead) {\r\n    }\r\n\r\n    @Override\r\n    public void afterCellCreate(WriteSheetHolder writeSheetHolder, WriteTableHolder writeTableHolder, Cell cell,\r\n                                Head head, Integer relativeRowIndex, Boolean isHead) {\r\n    }\r\n\r\n    @Override\r\n    public void afterCellDispose(WriteSheetHolder writeSheetHolder, WriteTableHolder writeTableHolder,\r\n                                 List<CellData> cellDataList, Cell cell, Head head, Integer relativeRowIndex, Boolean isHead) {\r\n\r\n        if (!isHead && cell.getColumnIndex() == 0) {\r\n             String value = cell.getStringCellValue();\r\n             Workbook workbook = writeSheetHolder.getSheet().getWorkbook();\r\n             Font ftRed = workbook.createFont();\r\n             ftRed.setColor(HSSFColor.RED.index);\r\n             Font ftGreen = workbook.createFont();\r\n             ftRed.setColor(HSSFColor.GREEN.index);\r\n             XSSFRichTextString textString = new XSSFRichTextString(value);\r\n             textString.applyFont(0,textString.length()/2,ftRed);\r\n             textString.applyFont(textString.length()/2,textString.length(),ftGreen); \r\n             cell.setCellValue(textString);\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n\r\n对cell的文本 设置字体颜色无效，请问应该怎么处理，因为是要对文本部分文字加样式，所以不用setCellStyle",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/903/comments",
    "author": "qwn3213",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-11-27T10:36:24Z",
        "body": "需要设置`inMemory`=`true`"
      },
      {
        "user": "qwn3213",
        "created_at": "2019-11-27T12:07:00Z",
        "body": "> 需要设置`inMemory`=`true`\r\n\r\n    /**\r\n     * Write excel in memory. Default false,the cache file is created and finally written to excel.\r\n     * <p>\r\n     * Comment and RichTextString are only supported in memory mode.\r\n     */\r\n    private Boolean inMemory;\r\n\r\n\r\n导出时使用：\r\nEasyExcel.write(fileName, Bean.class).inMemory(true).sheet().registerWriteHandler(new CustomCellWriteHandler()).doWrite(beanList);\r\n\r\n\r\n"
      }
    ]
  },
  {
    "number": 902,
    "title": "现在我有个客户想要.csv格式。请问我导出csv格式文件编码为ansi ,打开编码有问题。请问我要如何设置写入时编码格式为utf-8",
    "created_at": "2019-11-27T06:14:19Z",
    "closed_at": "2019-11-27T10:36:47Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/902",
    "body": "        EasyExcel.write(fileContent.get(\"file\").toString(), fileContent.get(\"dealClass\").getClass()).registerWriteHandler(getCellStyleStrategy()).sheet(fileContent.get(\"sheetName\").toString()).doWrite(content);\r\n**异常提示**\r\n请提供完整的异常提示,记住是全部异常！\r\n**建议描述**\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/902/comments",
    "author": "fullSecKil",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-11-27T10:36:47Z",
        "body": "目前不支持csv，后续会考虑支持"
      }
    ]
  },
  {
    "number": 901,
    "title": "请问业务当中经常有动态表头的情况，所以创建excel对应的实体对象不太现实，但是解析为Map<Integer, String>又不推荐，那有其他办法解决这种动态表头的情况吗？",
    "created_at": "2019-11-27T03:42:46Z",
    "closed_at": "2019-11-27T10:37:45Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/901",
    "body": "**异常代码**\r\n```java\r\n   这里写你的代码\r\n```\r\n**异常提示**\r\n请提供完整的异常提示,记住是全部异常！\r\n**建议描述**\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/901/comments",
    "author": "hjainibuli",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-11-27T10:37:45Z",
        "body": "这个没法解决。只能用map,或者全部枚举完表头字段，根据中文匹配去接收"
      }
    ]
  },
  {
    "number": 893,
    "title": "excel 如何导出货币格式的数字，自定义的converter未生效。",
    "created_at": "2019-11-26T01:25:34Z",
    "closed_at": "2019-11-26T12:14:44Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/893",
    "body": "@Override\r\n    public CellData convertToExcelData(BigDecimal value, ExcelContentProperty contentProperty, GlobalConfiguration globalConfiguration){\r\n        CellData cd = new CellData(value);\r\n        if(null != value)\r\n            cd.setData(StrUtils.getMoneyRoundTwoDecimalStr(value.doubleValue()));\r\n        return cd;\r\n    }",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/893/comments",
    "author": "908216809",
    "comments": [
      {
        "user": "dongjun613",
        "created_at": "2019-11-26T06:59:21Z",
        "body": "该字段上有加@ExcelProperty(converter=\"XXXConverter.class\")吗？"
      },
      {
        "user": "908216809",
        "created_at": "2019-11-26T10:24:12Z",
        "body": "我们采用的是动态列，没有模板对象，因为每次导出的数据列和顺序也是不固定的。"
      },
      {
        "user": "908216809",
        "created_at": "2019-11-26T11:42:51Z",
        "body": "问题已解决，实现CellWriteHandler接口并注册handler可以解决问题，但实现方式比较丑陋，传入的数据无法指定类型，目前通过空格识别金额字段，并将格式化好的数据反格式化成double。\r\n\r\n@override\r\npublic void afterCellDispose(WriteSheetHolder writeSheetHolder, WriteTableHolder writeTableHolder,\r\nList cellDataList, Cell cell, Head head, Integer relativeRowIndex, Boolean isHead) {\r\nif (!isHead && !cellDataList.isEmpty()) {\r\nCellData cellData = cellDataList.get(0);\r\n//金额数据设置\r\nif(null != cellData.getStringValue() && cellData.getStringValue().startsWith(\"&nbsp;\")) {\r\nString value = cellData.getStringValue().trim();\r\nvalue = value.replace(\"&nbsp;\", \"\");\r\nvalue = value.replace(\",\", \"\");\r\nif(StrUtils.isDoubleNumeric(value)){\r\nCellStyle mcs = getMoneyCellStyle(cell);\r\ncell.setCellStyle(mcs);\r\ncell.setCellType(CellType.NUMERIC);\r\ncell.setCellValue(Double.parseDouble(value));\r\n}\r\n}\r\n}\r\n}\r\n\r\n//金额转换\r\nprivate CellStyle getMoneyCellStyle(Cell cell){\r\n    if(null == moneyCellStyle) {\r\n        moneyCellStyle = cell.getSheet().getWorkbook().createCellStyle();\r\n        DataFormat df = cell.getSheet().getWorkbook().createDataFormat(); // 此处设置数据格式\r\n        moneyCellStyle.setDataFormat(df.getFormat(\"#,##0.00\"));//数据格式只显示整数\r\n        moneyCellStyle.setBorderTop(BorderStyle.THIN);\r\n        moneyCellStyle.setBorderLeft(BorderStyle.THIN);\r\n        moneyCellStyle.setBorderRight(BorderStyle.THIN);\r\n        moneyCellStyle.setBorderBottom(BorderStyle.THIN);\r\n    }\r\n    return moneyCellStyle;\r\n}"
      }
    ]
  },
  {
    "number": 890,
    "title": "继承父类后，导入导出时会遇到问题",
    "created_at": "2019-11-25T06:14:45Z",
    "closed_at": "2019-11-27T01:59:15Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/890",
    "body": "**异常代码**\r\n```java\r\n   这里写你的代码\r\n```\r\n**异常提示**\r\n请提供完整的异常提示,记住是全部异常！\r\n**建议描述**\r\n1.导出时，导出model如果继承了父类，会将父类的属性也导出到excel中，怎么设置不导出。父类文件是jar包中的class文件；\r\n2.导入时，也用同样的model，报错Positioned Update not supported，应该跟父类属性有关。\r\n这两个问题有方式可以解决吗，还是说导入导出model都必须重新再建新的model？",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/890/comments",
    "author": "rrrrr456mm",
    "comments": [
      {
        "user": "pdkst",
        "created_at": "2019-11-25T10:56:42Z",
        "body": "请使用`@ExcelIgnoreUnannotated`修饰model类，然后在需要导出的属性上添加`@ExcelProperty`"
      },
      {
        "user": "rrrrr456mm",
        "created_at": "2019-11-26T01:00:20Z",
        "body": "之前没发现这个注解可以这么用，现在问题1解决了。但是问题2还是存在，我用的是jfinal这种框架自动生成的model，网上说是序列化的问题"
      },
      {
        "user": "pdkst",
        "created_at": "2019-11-26T01:40:24Z",
        "body": "> 之前没发现这个注解可以这么用，现在问题1解决了。但是问题2还是存在，我用的是jfinal这种框架自动生成的model，网上说是序列化的问题\r\n\r\n理论上出现这个错误的原因是因为你某些父类属性是Dao之类的getter、setter，所以被调用了额外的方法才会导致，easyExcel的底层依赖beanMap，beanMap依赖于getter、setter，bean被转换的时候getter之类的就会被调用，所以，从结果上来看，只能自定义DTO来构建这些属性，试试使用`BeanUtils.copyProperties(src, target, ignoreProperties)`"
      },
      {
        "user": "rrrrr456mm",
        "created_at": "2019-11-26T04:20:16Z",
        "body": "嗯好的，谢谢"
      },
      {
        "user": "rrrrr456mm",
        "created_at": "2019-11-27T01:43:52Z",
        "body": "你好，使用了@ExcelIgnoreUnannotated修饰model类后，导入excel时debug跟踪，发现easyexcel构建导入类的时候还是把父类的属性取出来了"
      },
      {
        "user": "pdkst",
        "created_at": "2019-11-27T01:50:37Z",
        "body": "> 你好，使用了@ExcelIgnoreUnannotated修饰model类后，导入excel时debug跟踪，发现easyexcel构建导入类的时候还是把父类的属性取出来了\r\n\r\n`@ExcelIgnoreUnannotated`只能解决你导出多余属性的问题，无法解决父类的异常调用getter的问题\r\n\r\n异常调用只能新构建model\r\n\r\n"
      },
      {
        "user": "rrrrr456mm",
        "created_at": "2019-11-27T01:59:15Z",
        "body": "好的"
      }
    ]
  },
  {
    "number": 889,
    "title": "在导入时，如何处理对象嵌套问题",
    "created_at": "2019-11-25T03:55:39Z",
    "closed_at": "2019-11-27T10:42:33Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/889",
    "body": "类似与订单与订单详情一对多关系的导入，我使用@ExcelProperty指定对象中嵌套的list对象，会报类型转换异常 convert STRING to java.lang.list\r\n有没有类似easypoi这种的处理方式\r\n` @Data\r\n\t\t@ExcelTarget(\"totalBean\")\r\n\t\tpublic class TotalBean {\r\n\t\t\t@ExcelEntity(id=\"order\")\r\n\t\t\tprivate OrderBean orderBean;\r\n\t\t\t@ExcelCollection(name = \"订单明细\",orderNum=\"5\")\r\n\t\t\tprivate List<OrderDetailBean> detailBeans;\r\n\t\t}\r\n`\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/889/comments",
    "author": "FisterV",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-11-27T10:42:33Z",
        "body": "目前不支持嵌套对象。要实现可以参照定义转换器的demo.但是也不能实现一对多，只能一对一。"
      }
    ]
  },
  {
    "number": 883,
    "title": "EhCache依赖是必须的吗？",
    "created_at": "2019-11-23T00:44:49Z",
    "closed_at": "2019-11-27T10:47:21Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/883",
    "body": "我们项目原来依赖了ehcache的2.0版本，引入easyexcel后里面有个ehcache的3.0版本，导致版本冲突了",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/883/comments",
    "author": "liunancun",
    "comments": [
      {
        "user": "pdkst",
        "created_at": "2019-11-23T01:32:45Z",
        "body": "excel的`EhCache`是主动依赖的，主要用来解决07版excel超大文件的读取\r\n可以尝试排除掉一个看看，这类依赖api一般变动很小，能够兼容"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2019-11-27T10:47:21Z",
        "body": "写的没必要，读的话20M内也没必要。"
      }
    ]
  },
  {
    "number": 877,
    "title": "web重复多次写入，导出的excel不能正常打开，提示”部分内容有问题“",
    "created_at": "2019-11-21T08:04:15Z",
    "closed_at": "2019-11-21T12:10:23Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/877",
    "body": "触发场景描述\r\nweb导出，参考demo重复多次写入，为了在发生异常时能够返回json格式的错误信息，设置了autoCloseStream(Boolean.FALSE)不关闭流。\r\n导出时无任何异常信息，但导出的文件无法正常打开，提示：发现“xxx.xlsx”中的部分内容有问题。\r\n触发Bug的代码\r\nautoCloseStream(Boolean.FALSE)\r\n如果不设置这行代码，导出的文件可以正常打开。\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/877/comments",
    "author": "Code-Xiaoda",
    "comments": [
      {
        "user": "pdkst",
        "created_at": "2019-11-21T10:54:50Z",
        "body": "试试在所有导出进行完成后进行`finish()`操作，不执行这个操作，excel的内容仍然在内存，没有同步到硬盘，得到的会是一个空文件"
      },
      {
        "user": "Code-Xiaoda",
        "created_at": "2019-11-21T10:57:29Z",
        "body": "是的，现在所有导出进行完成后我有调用finish()操作，代码：excelWriter.finish();"
      },
      {
        "user": "pdkst",
        "created_at": "2019-11-21T11:08:11Z",
        "body": "> 是的，现在所有导出进行完成后我有调用finish()操作，代码：excelWriter.finish();\r\n\r\n我翻了下代码，我感觉你对这个参数的理解有误，一般`excelWriter`调用`finish()`之前是可以连续操作的，`autoCloseStream`这个参数的作用是指你**传入的时输出流**的的时候不自动关闭输出流，继续执行后续操作，如果你是填写的是输出到文件，那么就会产生一个bug，这个文件打开的流没办法关闭了"
      },
      {
        "user": "Code-Xiaoda",
        "created_at": "2019-11-21T11:13:41Z",
        "body": "```java\r\ntry {\r\n\tresponse.setContentType(\"application/vnd.ms-excel\");\r\n\tresponse.setCharacterEncoding(\"utf-8\");\r\n\r\n\tString fileName = URLEncoder.encode(\"xxx\", \"UTF-8\");\r\n\tresponse.setHeader(\"Content-disposition\", \"attachment;filename=\" + fileName + \".xlsx\");\r\n\r\n\tExcelWriter excelWriter = EasyExcel.write(response.getOutputStream())\r\n\t\t\t.autoCloseStream(Boolean.FALSE)\r\n\t\t\t.head(service.getHead())\r\n\t\t\t.build();\r\n\tWriteSheet writeSheet = EasyExcel.writerSheet(\"xxx\").build();\r\n\tint pageNo = 1;\r\n\tList<Data> data;\r\n\tdo {\r\n\t\t// 分页去数据库查询数据 这里可以去数据库查询每一页的数据\r\n\t\tdatas= service.getDatas(param, pageNo++, 1000);\r\n\t\tif (datas!= null && datas.size() > 0) {\r\n\t\t\texcelWriter.write(datas, writeSheet);\r\n\t\t}\r\n\t} while (datas!= null && datas.size() > 0);\r\n\texcelWriter.finish();\r\n} catch (Exception e) {\r\n\tresponse.reset();\r\n\tthrow new BaseException(e.getMessage());\r\n}\r\n```\r\n这个是我的代码，我想出错的时候返回json,还想连续的写数据，该如何设置呢"
      },
      {
        "user": "pdkst",
        "created_at": "2019-11-21T11:19:34Z",
        "body": "只去掉`.autoCloseStream(Boolean.FALSE)`试试，你的写法应该没问题"
      },
      {
        "user": "Code-Xiaoda",
        "created_at": "2019-11-21T11:22:34Z",
        "body": "去掉后导出的文件没问题，可以打开，不过如果我在取数据的时候如果发生的异常，我没有办法给前端做出有效的提示。就是异常后response.reset();无法执行成功。"
      },
      {
        "user": "pdkst",
        "created_at": "2019-11-21T11:31:33Z",
        "body": "`response.reset()` 貌似是用来来清除首部的空白行。已经写入的话貌似没作用，试试去掉，\r\n或者，先生成excel文件，没问题之后，再写response\r\n还有，finish()才会输出到流，如果前面可能发生异常，试试这么写\r\n```java\r\ntry {\r\n\r\n\tExcelWriter excelWriter = EasyExcel.write(response.getOutputStream())\r\n\t\t\t.head(service.getHead())\r\n\t\t\t.build();\r\n\tWriteSheet writeSheet = EasyExcel.writerSheet(\"xxx\").build();\r\n\tint pageNo = 1;\r\n\tList<Data> data;\r\n\tdo {\r\n\t\t// 分页去数据库查询数据 这里可以去数据库查询每一页的数据\r\n\t\tdatas= service.getDatas(param, pageNo++, 1000);\r\n\t\tif (datas!= null && datas.size() > 0) {\r\n\t\t\texcelWriter.write(datas, writeSheet);\r\n\t\t}\r\n\t} while (datas!= null && datas.size() > 0);\r\n\r\n\tresponse.setContentType(\"application/vnd.ms-excel\");\r\n\tresponse.setCharacterEncoding(\"utf-8\");\r\n\r\n\tString fileName = URLEncoder.encode(\"xxx\", \"UTF-8\");\r\n\tresponse.setHeader(\"Content-disposition\", \"attachment;filename=\" + fileName + \".xlsx\");\r\n\texcelWriter.finish();\r\n} catch (Exception e) {\r\n\tthrow new BaseException(e.getMessage());\r\n}\r\n\r\n```\r\n\r\n\r\n\r\n\r\n\r\n"
      },
      {
        "user": "Code-Xiaoda",
        "created_at": "2019-11-21T11:45:50Z",
        "body": "问题解决了，感谢！\r\n顺便再问一下，如果因为异常导致excelWriter.finish()没有执行到，会有什么影响？有办法解决么？"
      },
      {
        "user": "pdkst",
        "created_at": "2019-11-21T12:09:10Z",
        "body": "没有影响，就是前面的代码没有用了，然后这块内存也会被回收掉，如果有打开文件之类的，不要忘记关掉就可以了"
      }
    ]
  },
  {
    "number": 875,
    "title": "关于数据校验",
    "created_at": "2019-11-21T06:41:20Z",
    "closed_at": "2019-11-28T07:33:23Z",
    "labels": [
      "help wanted",
      "developing"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/875",
    "body": "有没有整合数据校验？如和hibernate validator的整合，还是只能自己在listener中进行每行的校验？\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/875/comments",
    "author": "jjbb",
    "comments": [
      {
        "user": "pdkst",
        "created_at": "2019-11-21T11:43:26Z",
        "body": "我不确定普通方法使用`@Valid`注解会不会生效，如果你试了，也请告诉我一下\r\n手动调用的话，貌似入口是`javax.validation.Validation`，也要添加`hibernate-validator`的依赖"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2019-11-27T10:49:08Z",
        "body": "在下个大版本户考虑支持。目前自己加个 `hibernate-validator`校验即可。"
      },
      {
        "user": "jjbb",
        "created_at": "2019-11-28T07:33:23Z",
        "body": "目前自己加了hibernate-validator，正在使用"
      },
      {
        "user": "jy05568536",
        "created_at": "2019-12-07T03:55:29Z",
        "body": "> 目前自己加了hibernate-validator，正在使用\r\n\r\n求教，在easyexcel中怎么使用hibernate-validator"
      },
      {
        "user": "jjbb",
        "created_at": "2019-12-07T04:49:03Z",
        "body": "> > 目前自己加了hibernate-validator，正在使用\r\n> \r\n> 求教，在easyexcel中怎么使用hibernate-validator\r\n\r\n\r\n跟普通使用的方法一样，添加依赖包，然后在解析到的方法invoke回调中进行校验"
      },
      {
        "user": "jy05568536",
        "created_at": "2019-12-07T06:25:00Z",
        "body": "> > > 目前自己加了hibernate-validator，正在使用\r\n> > \r\n> > \r\n> > 求教，在easyexcel中怎么使用hibernate-validator\r\n> \r\n> 跟普通使用的方法一样，添加依赖包，然后在解析到的方法invoke回调中进行校验\r\n\r\n加注解@Valid 吗，我试了不行啊"
      }
    ]
  },
  {
    "number": 868,
    "title": "将数据写入Excel报NullPointerException",
    "created_at": "2019-11-20T09:49:52Z",
    "closed_at": "2019-11-27T10:51:51Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/868",
    "body": "日志开头提示如下:\r\nc.a.e.m.property.ExcelHeadProperty ：  The table has no header set and all annotations will not be read.If you want to use annotations, please use set head class in ExcelWriterBuilder/ExcelWriterSheetBuilder/ExcelWriterTableBuilder\r\n\r\n我的版本是2.0..5",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/868/comments",
    "author": "cdxubo",
    "comments": [
      {
        "user": "cdxubo",
        "created_at": "2019-11-20T10:18:35Z",
        "body": "ExcelWriter writer = new ExcelWriter(out, ExcelTypeEnum.XLSX);   writer.write(list, sheet1);   应该是执行这两行报错  writer和list、sheet1均不为空"
      },
      {
        "user": "pdkst",
        "created_at": "2019-11-20T10:39:32Z",
        "body": "请使用`EasyExcel`来构建`ExcelWriter `"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2019-11-27T10:51:51Z",
        "body": "就是 没有头class而已，问题不大，只是提示。升级到`2.1.3`已经删除了这个提示。"
      }
    ]
  },
  {
    "number": 866,
    "title": "事务问题，如何保证整个文件写入或都不写入数据库",
    "created_at": "2019-11-20T07:52:04Z",
    "closed_at": "2019-11-20T10:46:09Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/866",
    "body": "如果文件在读取过程中，某条记录校验失败抛出异常，已经写入数据库的记录如何回滚呢？\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/866/comments",
    "author": "jjbb",
    "comments": [
      {
        "user": "pdkst",
        "created_at": "2019-11-20T10:43:36Z",
        "body": "抛出自定义的异常即可，这个异常会被包装成为`ExcelAnalysisException`抛出\r\n然后给整个读取的方法开启事务，如果使用spring事务，至少设置\r\n`    @Transactional(rollbackFor = ExcelAnalysisException.class)`\r\n或者\r\n`    @Transactional(rollbackFor = RuntimeException.class)`\r\n"
      },
      {
        "user": "jjbb",
        "created_at": "2019-11-20T10:46:09Z",
        "body": "好的谢谢额"
      }
    ]
  },
  {
    "number": 865,
    "title": "您好，我在用easyExcel读.xlsx时超过6000行报错Can not close IO，麻烦帮忙指点下，谢谢啦！",
    "created_at": "2019-11-20T02:18:02Z",
    "closed_at": "2019-11-21T01:42:36Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/865",
    "body": "**异常代码**\r\n```\r\n//这是读excel的代码\r\npublic static List<String> readExcelNeName(File excelFile) {\r\n        ExcelReadListener listener = new ExcelReadListener();\r\n       //这行报错\r\n        EasyExcel.read(excelFile, ExcelData.class, listener).sheet().headRowNumber(2).doRead();\r\n        return new ArrayList<>(listener.getNeNames());\r\n    }\r\n\r\n\r\n//这是定义的ExcelData\r\npublic class ExcelData {\r\n    @ExcelProperty(index = 1)\r\n    private String neName;\r\n\r\n    public String getNeName() {\r\n        return neName;\r\n    }\r\n\r\n    public void setNeName(String neName) {\r\n        this.neName = neName;\r\n    }\r\n}\r\n\r\n\r\n//这是Listener\r\npublic class ExcelReadListener extends AnalysisEventListener<ExcelData> {\r\n    private Set<String> neNames = new HashSet<>();\r\n\r\n    public Set<String> getNeNames() {\r\n        return neNames;\r\n    }\r\n\r\n    @Override\r\n    public void invoke(ExcelData data, AnalysisContext context) {\r\n        String neName = JSONObject.parseObject(JSON.toJSONString(data)).getString(\"neName\");\r\n        if (StringUtils.isNotEmpty(neName)) {\r\n            neNames.add(neName);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void doAfterAllAnalysed(AnalysisContext context) {\r\n\r\n    }\r\n}\r\n```\r\n**异常提示**\r\n[ ERROR]:2019-11-20 09:57:53 [pool-7-thread-3] CmePreTaskManage:122 - com.alibaba.excel.exception.ExcelAnalysisException: Can not close IO\r\ncom.alibaba.excel.exception.ExcelAnalysisException: Can not close IO\r\n        at com.alibaba.excel.analysis.ExcelAnalyserImpl.throwCanNotCloseIo(ExcelAnalyserImpl.java:152) ~[easyexcel-2.0.0.jar:?]\r\n        at com.alibaba.excel.analysis.ExcelAnalyserImpl.finish(ExcelAnalyserImpl.java:125) ~[easyexcel-2.0.0.jar:?]\r\n        at com.alibaba.excel.analysis.ExcelAnalyserImpl.<init>(ExcelAnalyserImpl.java:43) ~[easyexcel-2.0.0.jar:?]\r\n        at com.alibaba.excel.ExcelReader.<init>(ExcelReader.java:145) ~[easyexcel-2.0.0.jar:?]\r\n        at com.alibaba.excel.read.builder.ExcelReaderBuilder.build(ExcelReaderBuilder.java:203) ~[easyexcel-2.0.0.jar:?]\r\n        at com.alibaba.excel.read.builder.ExcelReaderBuilder.sheet(ExcelReaderBuilder.java:219) ~[easyexcel-2.0.0.jar:?]\r\n        at com.alibaba.excel.read.builder.ExcelReaderBuilder.sheet(ExcelReaderBuilder.java:207) ~[easyexcel-2.0.0.jar:?]\r\n        at com.huawei.genexcloud.util.fileprocess.FileProcess.readExcelNeName(FileProcess.java:57) ~[classes/:?]\r\n        at com.huawei.genexcloud.cme.CmePreTaskManage$CmePreTaskThread.run(CmePreTaskManage.java:100) [classes/:?]\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_191]\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_191]\r\n        at java.lang.Thread.run(Thread.java:748) [?:1.8.0_191]\r\nCaused by: org.apache.poi.openxml4j.exceptions.OpenXML4JRuntimeException: Fail to save: an error occurs while saving the package : The part /xl/styles.xml failed to be saved in the stream with marshaller org.apache.poi.openxml4j.opc.internal.marshallers.DefaultMarshaller@d689707\r\n        at org.apache.poi.openxml4j.opc.ZipPackage.saveImpl(ZipPackage.java:558) ~[poi-ooxml-4.1.0.jar:4.1.0]\r\n        at org.apache.poi.openxml4j.opc.OPCPackage.save(OPCPackage.java:1488) ~[poi-ooxml-4.1.0.jar:4.1.0]\r\n        at org.apache.poi.openxml4j.opc.OPCPackage.save(OPCPackage.java:1475) ~[poi-ooxml-4.1.0.jar:4.1.0]\r\n        at org.apache.poi.openxml4j.opc.ZipPackage.closeImpl(ZipPackage.java:431) ~[poi-ooxml-4.1.0.jar:4.1.0]\r\n        at org.apache.poi.openxml4j.opc.OPCPackage.close(OPCPackage.java:451) ~[poi-ooxml-4.1.0.jar:4.1.0]\r\n        at com.alibaba.excel.analysis.ExcelAnalyserImpl.finish(ExcelAnalyserImpl.java:122) ~[easyexcel-2.0.0.jar:?]\r\n        ... 10 more\r\nCaused by: org.apache.poi.openxml4j.exceptions.OpenXML4JException: The part /xl/styles.xml failed to be saved in the stream with marshaller org.apache.poi.openxml4j.opc.internal.marshallers.DefaultMarshaller@d689707\r\n        at org.apache.poi.openxml4j.opc.ZipPackage.saveImpl(ZipPackage.java:547) ~[poi-ooxml-4.1.0.jar:4.1.0]\r\n        at org.apache.poi.openxml4j.opc.OPCPackage.save(OPCPackage.java:1488) ~[poi-ooxml-4.1.0.jar:4.1.0]\r\n        at org.apache.poi.openxml4j.opc.OPCPackage.save(OPCPackage.java:1475) ~[poi-ooxml-4.1.0.jar:4.1.0]\r\n        at org.apache.poi.openxml4j.opc.ZipPackage.closeImpl(ZipPackage.java:431) ~[poi-ooxml-4.1.0.jar:4.1.0]\r\n        at org.apache.poi.openxml4j.opc.OPCPackage.close(OPCPackage.java:451) ~[poi-ooxml-4.1.0.jar:4.1.0]\r\n        at com.alibaba.excel.analysis.ExcelAnalyserImpl.finish(ExcelAnalyserImpl.java:122) ~[easyexcel-2.0.0.jar:?]\r\n        ... 10 more\r\n[ WARN ]:2019-11-20 10:15:57 [Finalizer] ExcelReader:288 - Destroy object failed\r\njava.lang.NullPointerException: null\r\n        at com.alibaba.excel.ExcelReader.finalize(ExcelReader.java:286) [easyexcel-2.0.0.jar:?]\r\n        at java.lang.System$2.invokeFinalize(System.java:1270) [?:1.8.0_191]\r\n        at java.lang.ref.Finalizer.runFinalizer(Finalizer.java:102) [?:1.8.0_191]\r\n        at java.lang.ref.Finalizer.access$100(Finalizer.java:34) [?:1.8.0_191]\r\n        at java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:217) [?:1.8.0_191]\r\n[ WARN ]:2019-11-20 10:15:57 [Finalizer] ExcelReader:288 - Destroy object failed\r\njava.lang.NullPointerException: null\r\n        at com.alibaba.excel.ExcelReader.finalize(ExcelReader.java:286) [easyexcel-2.0.0.jar:?]\r\n        at java.lang.System$2.invokeFinalize(System.java:1270) [?:1.8.0_191]\r\n        at java.lang.ref.Finalizer.runFinalizer(Finalizer.java:102) [?:1.8.0_191]\r\n        at java.lang.ref.Finalizer.access$100(Finalizer.java:34) [?:1.8.0_191]\r\n        at java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:217) [?:1.8.0_191]\r\n**建议描述**\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/865/comments",
    "author": "SuperQiangYuan",
    "comments": [
      {
        "user": "pdkst",
        "created_at": "2019-11-20T14:57:03Z",
        "body": "我测试生成的，新建的，改名xls，读取都没有复现这个问题，可能是文件的问题，\r\n代码我看了，也没有特殊的地方，除了\r\n`JSONObject.parseObject(JSON.toJSONString(data)).getString(\"neName\");`\r\n有点迷惑……"
      },
      {
        "user": "SuperQiangYuan",
        "created_at": "2019-11-21T01:42:36Z",
        "body": "果然是数据有问题。。。谢谢您啦"
      }
    ]
  },
  {
    "number": 859,
    "title": "导出的实体有一个属性的类型是List<其他类>，此时如何嵌套导出？",
    "created_at": "2019-11-18T12:05:31Z",
    "closed_at": "2019-11-27T11:17:22Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/859",
    "body": "**异常代码**\r\n```java\r\n   这里写你的代码\r\n```\r\n**异常提示**\r\n请提供完整的异常提示,记住是全部异常！\r\n**建议描述**\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/859/comments",
    "author": "mochengdong",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-11-27T11:17:22Z",
        "body": "自定义转换器 能把list转换成一行，但是不支持，list转成多行。"
      }
    ]
  },
  {
    "number": 857,
    "title": "EasyExcel.write() 使用反射生成的excel会报错",
    "created_at": "2019-11-18T06:08:00Z",
    "closed_at": "2019-11-18T07:41:17Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/857",
    "body": "**异常代码**\r\n```java\r\n\r\n // 这里 需要指定写用哪个class去写，然后写到第一个sheet，名字为模板 然后文件流会自动关闭\r\n  ExcelWriterSheetBuilder sheet = EasyExcel.write(outputStream, clazz.getClass()).registerWriteHandler(horizontalCellStyleStrategy).sheet(\"Sheet1\");\r\n\r\n生成的excel 表头四列英文，allPermDomain，useCaches，reflectionFactory，reflectionFactory。请问一下这个是什么原因造成的？\r\n```\r\n**异常提示**\r\n请提供完整的异常提示,记住是全部异常！\r\n**建议描述**\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/857/comments",
    "author": "freezehe",
    "comments": [
      {
        "user": "pdkst",
        "created_at": "2019-11-18T07:38:38Z",
        "body": "我查了一下，这些属性是来自于`java.lang.Class`，`EasyExcel.write(outputStream, clazz.getClass())`要求你传入head的class，而实际上**clazz**应该就是，所以改成这样试试看\r\n```java\r\n  ExcelWriterSheetBuilder sheet = EasyExcel.write(outputStream, clazz).registerWriteHandler(horizontalCellStyleStrategy).sheet(\"Sheet1\");\r\n```"
      },
      {
        "user": "freezehe",
        "created_at": "2019-11-18T07:41:17Z",
        "body": "我刚才试了clazz，可以的。问题已解决，非常感谢！"
      }
    ]
  },
  {
    "number": 850,
    "title": "校验",
    "created_at": "2019-11-15T09:34:11Z",
    "closed_at": "2019-11-27T11:20:31Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/850",
    "body": "有用注解方式,封装一些常用校验码\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/850/comments",
    "author": "aaasmile",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-11-27T11:20:31Z",
        "body": "这个后续会考虑支持"
      }
    ]
  },
  {
    "number": 847,
    "title": "如何能读取excel列中的图片数据？",
    "created_at": "2019-11-15T06:36:23Z",
    "closed_at": "2019-11-27T11:21:30Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/847",
    "body": "**异常代码**\r\n```java\r\n   这里写你的代码\r\n```\r\n**异常提示**\r\n请提供完整的异常提示,记住是全部异常！\r\n**建议描述**\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/847/comments",
    "author": "wangyingrong",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-11-27T11:21:30Z",
        "body": "这个短期内不会支持，建议使用poi."
      }
    ]
  },
  {
    "number": 831,
    "title": "想问问怎么才能让导出的 数字（大于12位）既是数值格式又不是科学计数法",
    "created_at": "2019-11-12T10:04:53Z",
    "closed_at": "2019-11-12T12:28:37Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/831",
    "body": "网上提供的大部分办法都是设置导出格式为字符串，但现在要求导出的长数字可以直接计算？",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/831/comments",
    "author": "gt0409",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-11-12T12:28:37Z",
        "body": "excel 你用编辑器也无法实现这个功能。目前没办法"
      }
    ]
  },
  {
    "number": 830,
    "title": "想问问，通过模板填充数据的时候，可以动态合并单元格吗？",
    "created_at": "2019-11-12T09:59:27Z",
    "closed_at": "2019-11-12T12:28:58Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/830",
    "body": "**异常代码**\r\n```java\r\n   这里写你的代码\r\n```\r\n**异常提示**\r\n请提供完整的异常提示,记住是全部异常！\r\n**建议描述**\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/830/comments",
    "author": "yangqf47",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-11-12T12:28:58Z",
        "body": "自己定义合并策略就行"
      }
    ]
  },
  {
    "number": 829,
    "title": "2.1.2里Table,Sheet等组件提示过期，请问用什么替代呀？",
    "created_at": "2019-11-12T08:18:28Z",
    "closed_at": "2019-11-12T12:29:11Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/829",
    "body": "**异常代码**\r\n```java\r\n    Sheet sheet = new Sheet(1);\r\n    sheet.setSheetName(\"sheet1\");\r\n\r\n    Table table = new Table(1);\r\n    table.setHead(head);\r\n\r\n    writer.write(exportList, sheet, table);\r\n```\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/829/comments",
    "author": "mmw2012",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-11-12T12:29:11Z",
        "body": "请参照demo"
      }
    ]
  },
  {
    "number": 826,
    "title": "Can not close IO",
    "created_at": "2019-11-11T07:33:26Z",
    "closed_at": "2019-11-11T08:17:25Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/826",
    "body": "**异常代码**\r\n```java\r\n// 加载模板\r\n        String templatePath = new StringBuilder(\"template/report/\").append(template).append(\".xlsx\").toString();\r\n        ClassPathResource classPathResource = new ClassPathResource(templatePath);\r\n        // 写Excel\r\n        try (InputStream inputStream = classPathResource.getInputStream()) {\r\n            EasyExcel.write(response.getOutputStream()).withTemplate(inputStream).sheet().doFill(data);\r\n        }\r\n```\r\n**异常提示**\r\n``` log\r\ncom.alibaba.excel.exception.ExcelGenerateException: Can not close IO\r\n\tat com.alibaba.excel.context.WriteContextImpl.finish(WriteContextImpl.java:328)\r\n\tat com.alibaba.excel.write.ExcelBuilderImpl.finish(ExcelBuilderImpl.java:98)\r\n\tat com.alibaba.excel.ExcelWriter.finish(ExcelWriter.java:328)\r\n\tat com.alibaba.excel.write.builder.ExcelWriterSheetBuilder.doFill(ExcelWriterSheetBuilder.java:192)\r\n\tat com.alibaba.excel.write.builder.ExcelWriterSheetBuilder.doFill(ExcelWriterSheetBuilder.java:184)\r\n\tat com.oak.common.utils.XlsxDownload.fillWithData(XlsxDownload.java:43)\r\n\tat com.oak.controller.report.OrderTradeDetailController.download(OrderTradeDetailController.java:89)\r\n\tat com.oak.controller.report.OrderTradeDetailController$$FastClassBySpringCGLIB$$e5e410ad.invoke(<generated>)\r\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\r\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\r\n\tat org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)\r\n\tat com.oak.controller.report.OrderTradeDetailController$$EnhancerBySpringCGLIB$$f2cc8e98.download(<generated>)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:660)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:741)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:88)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.cloud.sleuth.instrument.web.ExceptionLoggingFilter.doFilter(ExceptionLoggingFilter.java:50)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat brave.servlet.TracingFilter.doFilter(TracingFilter.java:99)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.lang.NullPointerException\r\n\tat java.util.zip.DeflaterOutputStream.<init>(DeflaterOutputStream.java:84)\r\n\tat java.util.zip.DeflaterOutputStream.<init>(DeflaterOutputStream.java:142)\r\n\tat java.util.zip.ZipOutputStream.<init>(ZipOutputStream.java:133)\r\n\tat java.util.zip.ZipOutputStream.<init>(ZipOutputStream.java:119)\r\n\tat org.apache.poi.xssf.streaming.SXSSFWorkbook.injectData(SXSSFWorkbook.java:378)\r\n\tat org.apache.poi.xssf.streaming.SXSSFWorkbook.write(SXSSFWorkbook.java:936)\r\n\tat com.alibaba.excel.context.WriteContextImpl.finish(WriteContextImpl.java:284)\r\n\t... 82 more\r\n```\r\n**建议描述**\r\n\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/826/comments",
    "author": "Huaiku",
    "comments": [
      {
        "user": "pdkst",
        "created_at": "2019-11-11T08:12:06Z",
        "body": "看着像是输出流空指针了\r\n```\r\nCaused by: java.lang.NullPointerException\r\n\tat org.apache.poi.xssf.streaming.SXSSFWorkbook.injectData(SXSSFWorkbook.java:378)\r\n```\r\nSXSSFWorkbook.java:378行\r\n```java\r\nZipOutputStream zos = new ZipOutputStream(out);\r\n```\r\n"
      },
      {
        "user": "Huaiku",
        "created_at": "2019-11-11T08:17:42Z",
        "body": "输出流错误。"
      }
    ]
  },
  {
    "number": 825,
    "title": "doRead方法不是异步的吗，为什么读取完才响应",
    "created_at": "2019-11-11T06:37:58Z",
    "closed_at": "2019-11-11T12:11:41Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/825",
    "body": "**异常代码**\r\n```java\r\n   这里写你的代码\r\n```\r\n**异常提示**\r\n请提供完整的异常提示,记住是全部异常！\r\n**建议描述**\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/825/comments",
    "author": "flag-bug",
    "comments": [
      {
        "user": "flag-bug",
        "created_at": "2019-11-11T06:58:38Z",
        "body": "EasyExcel.read(file.getInputStream(), DevBean.class, new DevsBulkRegListener(devsManagement, devsBulkRegLogoutDao, uuid, userId)).sheet().headRowNumber(3).doRead();"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2019-11-11T12:11:41Z",
        "body": "本来就是的。如果不想 。自己创建线程"
      }
    ]
  },
  {
    "number": 809,
    "title": "导出列顺序动态自定义",
    "created_at": "2019-11-07T06:22:42Z",
    "closed_at": "2019-11-07T10:48:03Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/809",
    "body": "我在使用中有导出指定列，且列的顺序需要自定义的问题\r\n请问在工具的封装中有吗\r\n我在文档中没有发现对应的实现\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/809/comments",
    "author": "mrjasonjiang",
    "comments": [
      {
        "user": "mrjasonjiang",
        "created_at": "2019-11-07T09:57:56Z",
        "body": "看了源码，经过几番摸索，通过实现RowWriteHandler\r\n修改\r\n```\r\nExcelWriteHeadProperty excelWriteHeadProperty = writeSheetHolder.excelWriteHeadProperty();\r\nMap<Integer, ExcelContentProperty> contentPropertyMap=excelWriteHeadProperty.getContentPropertyMap();\r\n```\r\n修改cotentPropertyMap达到改变导出顺序的需求\r\n****\r\n但是还是希望能提供相应的实现ヽ(°◇° )ノ"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2019-11-07T10:48:03Z",
        "body": "导出列 根据class的顺序 或者 class里面 `ExcelProperty`来指定。或者根据传入头 的顺序。"
      }
    ]
  },
  {
    "number": 807,
    "title": "现在可以支持在大数据量的级别写入后，最后可以使用Excel的自动合计公式来处理了，即支持Excel的公式，",
    "created_at": "2019-11-07T03:44:05Z",
    "closed_at": "2019-11-07T10:46:01Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/807",
    "body": "**异常代码**\r\n```java\r\n   这里写你的代码\r\n```\r\n**异常提示**\r\n请提供完整的异常提示,记住是全部异常！\r\n**建议描述**\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/807/comments",
    "author": "wslcy",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-11-07T10:46:01Z",
        "body": "目前不支持excel公式。如果想支持，建议使用拦截器，然后使用poi 的写法去处理"
      }
    ]
  },
  {
    "number": 801,
    "title": "无对象写的时候，可以指定导出excel字段的顺序么",
    "created_at": "2019-11-05T02:49:24Z",
    "closed_at": "2019-11-05T11:36:33Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/801",
    "body": "**异常代码**\r\n```java\r\n   这里写你的代码\r\n```\r\n**异常提示**\r\n请提供完整的异常提示,记住是全部异常！\r\n**建议描述**\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/801/comments",
    "author": "8Liu",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-11-05T11:36:33Z",
        "body": "可以"
      }
    ]
  },
  {
    "number": 789,
    "title": "能写入到csv格式吗？",
    "created_at": "2019-11-02T04:29:40Z",
    "closed_at": "2019-11-03T12:07:59Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/789",
    "body": "**异常代码**\r\n```java\r\n   这里写你的代码\r\n```\r\n**异常提示**\r\n请提供完整的异常提示,记住是全部异常！\r\n**建议描述**\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/789/comments",
    "author": "Ailubby",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-11-03T12:07:59Z",
        "body": "目前不支持"
      }
    ]
  },
  {
    "number": 787,
    "title": "如何解析有多种合并单元格的excel（有些合并两个单元格，有些合并n个）",
    "created_at": "2019-11-01T03:18:09Z",
    "closed_at": "2019-11-01T12:07:36Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/787",
    "body": "**异常代码**\r\n```java\r\n   这里写你的代码\r\n```\r\n**异常提示**\r\n请提供完整的异常提示,记住是全部异常！\r\n**建议描述**\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/787/comments",
    "author": "EnjoyRenWei",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-11-01T12:07:35Z",
        "body": "目前easyxcel 无法解决这个问题。只能读取到合并单元格的第一行。请尝试使用poi 解决问题。"
      }
    ]
  },
  {
    "number": 783,
    "title": "根据模板写入，不能指定到某一行开始写么？",
    "created_at": "2019-10-31T10:37:17Z",
    "closed_at": "2019-11-01T12:03:58Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/783",
    "body": "**异常代码**\r\n```java\r\n   这里写你的代码\r\n```\r\n**异常提示**\r\n请提供完整的异常提示,记住是全部异常！\r\n**建议描述**\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/783/comments",
    "author": "gem-groups",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-11-01T12:03:58Z",
        "body": "只能根据`relativeHeadRowIndex` 设置最后一条多少条以后写入。或者使用填充"
      }
    ]
  },
  {
    "number": 777,
    "title": "1.1.2-beta5 能直接升级到2.x版本吗",
    "created_at": "2019-10-30T11:31:03Z",
    "closed_at": "2019-10-30T12:56:06Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/777",
    "body": "1.1.2-beta5 能直接升级到2.x版本吗\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/777/comments",
    "author": "wangwenyao",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-10-30T12:56:06Z",
        "body": "直接升级理论上可以，但是别改有斜杠的代码。然后直接用，建议测试一波。"
      }
    ]
  },
  {
    "number": 773,
    "title": "excel模板中指定表头信息,将数据写入模板中时如何能根据列号将数据写入指定列",
    "created_at": "2019-10-29T12:07:05Z",
    "closed_at": "2019-10-30T13:00:09Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/773",
    "body": "比如 模板中 表头为  A B C D\r\n我的数据为 [ [ B1,C1 ], [ B2, C2] ]\r\n\r\n导出为\r\nA |    B    |  C    | D\r\n    |    B1 |  C1  |\r\n    |   B2  |  C2  |",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/773/comments",
    "author": "Limbozombie",
    "comments": [
      {
        "user": "Limbozombie",
        "created_at": "2019-10-29T12:38:29Z",
        "body": "好像可以使用填充来实现 ( doFill )"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2019-10-30T13:00:09Z",
        "body": "只能fill"
      },
      {
        "user": "gem-groups",
        "created_at": "2019-10-31T05:18:49Z",
        "body": "fill在哪个版本有呢？我看2.0及以上都没有fill了。"
      },
      {
        "user": "Limbozombie",
        "created_at": "2019-10-31T06:22:15Z",
        "body": "> fill在哪个版本有呢？我看2.0及以上都没有fill了。\r\n\r\n我用的2.1.0-beta4 ,应该是2.1.x版本新增的\r\n\t\t<dependency>\r\n\t\t\t<groupId>com.alibaba</groupId>\r\n\t\t\t<artifactId>easyexcel</artifactId>\r\n\t\t\t<version>2.1.0-beta4</version>\r\n\t\t</dependency>"
      }
    ]
  },
  {
    "number": 771,
    "title": "我想问一下如何使用easyexcel解析那些表格中存在的合并单元格，因为我发现每次我的读取，都是第一行有值，其余的都是为空了。",
    "created_at": "2019-10-29T06:57:26Z",
    "closed_at": "2019-10-29T11:14:31Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/771",
    "body": "",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/771/comments",
    "author": "jxylove",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-10-29T11:14:31Z",
        "body": "嗯  这个就是这样，需要自己判断。目前没有办法解决。"
      }
    ]
  },
  {
    "number": 769,
    "title": "web重复多次写入无效",
    "created_at": "2019-10-29T02:57:57Z",
    "closed_at": "2019-10-29T11:13:10Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/769",
    "body": "**异常代码**\r\nExcelWriter writer = EasyExcel.write(response.getOutputStream(), DownloadData.class).build();\r\n        WriteSheet sheet = EasyExcel.writerSheet(\"模板\").build();\r\n        for (int i = 0; i < 10; i++) {\r\n            writer.write(data(), sheet);//这里只有第一次生效\r\n        }\r\n        writer.finish();\r\n```\r\n**异常提示**\r\n重复多次写入，只有第一次生效\r\n**建议描述**\r\n在/test/demo/web里面添加重复多次写入的demo。",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/769/comments",
    "author": "qingjiaorose157",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-10-29T11:13:10Z",
        "body": "这个 建议直接把github的项目下下来 直接跑。不可能只有一次生效。"
      },
      {
        "user": "yanhuasanyue1015gmail",
        "created_at": "2021-12-29T07:56:54Z",
        "body": "也遇到这个问题   只有第一次生效"
      }
    ]
  },
  {
    "number": 768,
    "title": "询问",
    "created_at": "2019-10-29T02:38:32Z",
    "closed_at": "2019-10-29T11:12:07Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/768",
    "body": "JAVA代码为什么不能够导入EasyExcel类呢？\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/768/comments",
    "author": "TomMickey",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-10-29T11:12:07Z",
        "body": "这个需要自己研究下。确保maven已经导入了。"
      }
    ]
  },
  {
    "number": 764,
    "title": "请问版本从1.x.x升级到2.x.x是否兼容，不用修改代码。",
    "created_at": "2019-10-28T06:21:18Z",
    "closed_at": "2019-10-28T10:46:12Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/764",
    "body": "**异常代码**\r\n```java\r\n   这里写你的代码\r\n```\r\n**异常提示**\r\n请提供完整的异常提示,记住是全部异常！\r\n**建议描述**\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/764/comments",
    "author": "chenghuanhuan",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-10-28T10:46:12Z",
        "body": "理论上来说 兼容。建议测试一波。"
      }
    ]
  },
  {
    "number": 759,
    "title": "读取合并单元格的excel，怎么处理呢？",
    "created_at": "2019-10-25T06:46:20Z",
    "closed_at": "2019-10-25T11:18:47Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/759",
    "body": "读取合并单元格的excel，怎么处理呢？\r\n我读取出来的时候只有第一行有数据，其他的就是null。\r\n\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/759/comments",
    "author": "dzxyzhanglin",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-10-25T11:18:47Z",
        "body": "这个需要自己手动判断，目前没有很好的方法"
      }
    ]
  },
  {
    "number": 756,
    "title": "Sheet Table TableStyle 这几个类都不推荐用了吗",
    "created_at": "2019-10-25T02:44:24Z",
    "closed_at": "2019-10-25T11:16:50Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/756",
    "body": "Sheet Table TableStyle 这几个类都不推荐用了吗",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/756/comments",
    "author": "realrickren",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-10-25T11:16:50Z",
        "body": "对"
      }
    ]
  },
  {
    "number": 755,
    "title": "请问如何在已有数据的excel中继续写入新数据?   不覆盖写入  ",
    "created_at": "2019-10-24T14:38:16Z",
    "closed_at": "2019-10-25T11:16:38Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/755",
    "body": "**异常代码**\r\n```java\r\n   这里写你的代码\r\n```\r\n**异常提示**\r\n请提供完整的异常提示,记住是全部异常！\r\n**建议描述**\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/755/comments",
    "author": "jfeign",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-10-25T11:16:38Z",
        "body": "请参照 模板demo"
      }
    ]
  },
  {
    "number": 752,
    "title": "1、如何从指定的行开始读和写？2、读取的时候做数据转换，注解无法转换成BigDecimal，是否先转换成其他数字格式，再转成BigDecimal？",
    "created_at": "2019-10-24T07:09:51Z",
    "closed_at": "2019-10-24T14:11:57Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/752",
    "body": "\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/752/comments",
    "author": "youerduoDog",
    "comments": [
      {
        "user": "ghost",
        "created_at": "2019-10-24T08:46:45Z",
        "body": "`EasyExcel.read(fileInputStream).sheet().headRowNumber(-1).doReadSync();`\r\n我用这种方式从第一行开始读。默认headRowNumber应该是0，导致从第二行开始读。修改为-1之后直接从第一行开始读。如果想要从其他行读，把设置为该行的行数-1即可。"
      },
      {
        "user": "dardaplanet",
        "created_at": "2019-10-24T09:17:31Z",
        "body": "1.从指定行开始读取参照com.alibaba.excel.read.builder.ExcelReaderBuilder#headRowNumber,默认值为1,表示有一行头,从第二行开始读取数据\r\n`EasyExcel.read(inputstream).sheet().headRowNumber(指定行).doRead()`\r\n2.读取的时候数据进行转换参照com.alibaba.excel.read.builder.ExcelReaderBuilder#registerConverter或在实体类中使用注解@ExcelProperty的convert自定义转换,string转decimal可参见com.alibaba.excel.converters.bigdecimal.BigDecimalStringConverter\r\n`EasyExcel.read(inputstream).sheet().registerConverter(BigDecimalStringConverter)`或对应实体类中field添加@ExcelProperty(converter=BigDecimalStringConverter)"
      },
      {
        "user": "dardaplanet",
        "created_at": "2019-10-24T09:23:57Z",
        "body": "第二个问题建议使用注解方式解决,如果使用registerConverter会进行全局设置"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2019-10-24T14:11:45Z",
        "body": "> 1.从指定行开始读取参照com.alibaba.excel.read.builder.ExcelReaderBuilder#headRowNumber,默认值为1,表示有一行头,从第二行开始读取数据\r\n> `EasyExcel.read(inputstream).sheet().headRowNumber(指定行).doRead()`\r\n> 2.读取的时候数据进行转换参照com.alibaba.excel.read.builder.ExcelReaderBuilder#registerConverter或在实体类中使用注解@ExcelProperty的convert自定义转换,string转decimal可参见com.alibaba.excel.converters.bigdecimal.BigDecimalStringConverter\r\n> `EasyExcel.read(inputstream).sheet().registerConverter(BigDecimalStringConverter)`或对应实体类中field添加@ExcelProperty(converter=BigDecimalStringConverter)\r\n\r\n优秀"
      }
    ]
  },
  {
    "number": 733,
    "title": "如何动态维护字段的列数",
    "created_at": "2019-10-23T01:26:56Z",
    "closed_at": "2019-10-23T10:56:25Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/733",
    "body": "求教如何动态维护字段的列数\r\n\r\n当excel有很多列时,在Model前面几列添加字段后,需要依次修改后续字段列数,有什么动态设置的方法吗?\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/733/comments",
    "author": "CuiKai721",
    "comments": [
      {
        "user": "CuiKai721",
        "created_at": "2019-10-23T01:37:57Z",
        "body": "即想要BaseRowModel中的@ExcelProperty注解的index属性可以依次递增"
      },
      {
        "user": "dardaplanet",
        "created_at": "2019-10-23T09:32:39Z",
        "body": "可以通过@ExcelProperty的value动态匹配,官方不建议index和value混着用,可参考@ExcelProperty的使用"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2019-10-23T10:56:25Z",
        "body": "这个需要升级到 `2.0.5`版本，然后不设置index 即可"
      }
    ]
  },
  {
    "number": 731,
    "title": "excel单元格是数字保留两位小数，如果按照String处理后丢失精度",
    "created_at": "2019-10-22T12:59:30Z",
    "closed_at": "2019-10-22T15:14:28Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/731",
    "body": "excel单元格是数字保留两位小数，如果javabean 对应的列定义为String后丢失精度\r\n例如单元格中的是9632.03,解析后变成9632.0300000000007，这是为什么？\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/731/comments",
    "author": "WhatisAnt",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-10-22T15:14:28Z",
        "body": "里面存储的 就是这个 建议加上@NumberFormat 后续会解决 读出来 和excel显示完全一致的问题"
      }
    ]
  },
  {
    "number": 722,
    "title": "2.0.5 xls格式的文件获取sheet里面总行数报空指针",
    "created_at": "2019-10-21T10:04:06Z",
    "closed_at": "2019-10-21T13:16:30Z",
    "labels": [
      "bug",
      "help wanted",
      "developing"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/722",
    "body": "**异常代码**\r\n```java\r\n   这里写你的代码\r\n``` analysisContext.readSheetHolder().getTotal()\r\n**异常提示**\r\n请提供完整的异常提示,记住是全部异常！\r\njava.lang.NullPointerException\r\n\tat com.hzcursor.q_core.excel.ReadFileListener.invoke(ReadFileListener.java:84)\r\n\tat com.hzcursor.q_core.excel.ReadFileListener.invoke(ReadFileListener.java:20)\r\n\tat com.alibaba.excel.read.metadata.holder.AbstractReadHolder.notifyEndOneRow(AbstractReadHolder.java:141)\r\n\tat com.alibaba.excel.analysis.v03.XlsSaxAnalyser.endRow(XlsSaxAnalyser.java:188)\r\n\tat com.alibaba.excel.analysis.v03.XlsSaxAnalyser.processLastCellOfRow(XlsSaxAnalyser.java:178)\r\n\tat com.alibaba.excel.analysis.v03.XlsSaxAnalyser.processRecord(XlsSaxAnalyser.java:167)\r\n\tat org.apache.poi.hssf.eventusermodel.MissingRecordAwareHSSFListener.processRecord(MissingRecordAwareHSSFListener.java:158)\r\n\tat org.apache.poi.hssf.eventusermodel.FormatTrackingHSSFListener.processRecord(FormatTrackingHSSFListener.java:92)\r\n\tat org.apache.poi.hssf.eventusermodel.HSSFRequest.processRecord(HSSFRequest.java:109)\r\n\tat org.apache.poi.hssf.eventusermodel.HSSFEventFactory.genericProcessEvents(HSSFEventFactory.java:179)\r\n\tat org.apache.poi.hssf.eventusermodel.HSSFEventFactory.processEvents(HSSFEventFactory.java:136)\r\n\tat org.apache.poi.hssf.eventusermodel.HSSFEventFactory.processWorkbookEvents(HSSFEventFactory.java:82)\r\n\tat org.apache.poi.hssf.eventusermodel.HSSFEventFactory.processWorkbookEvents(HSSFEventFactory.java:54)\r\n\tat com.alibaba.excel.analysis.v03.XlsSaxAnalyser.execute(XlsSaxAnalyser.java:107)\r\n\tat com.alibaba.excel.analysis.ExcelAnalyserImpl.analysis(ExcelAnalyserImpl.java:91)\r\n\tat com.alibaba.excel.ExcelReader.read(ExcelReader.java:170)\r\n\tat com.hzcursor.q_core.service.impl.SmartModelRunServiceImpl.doReadFile(SmartModelRunServiceImpl.java:115)\r\n\tat com.hzcursor.q_core.service.impl.SmartModelRunServiceImpl.runSmartModel(SmartModelRunServiceImpl.java:91)\r\n\tat com.hzcursor.q_core.threadPool.IntentionRunner.run(IntentionRunner.java:43)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n\r\n**建议描述**\r\nListener 的invoke获取xls格式sheet的总行数报空指针，xlsx是正常的\r\n\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/722/comments",
    "author": "zarkerXu",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-10-21T11:30:35Z",
        "body": "这个是bug ，我空了研究下。但是这个行数也是不会特别精确。最终还是要以自己的统计为准"
      },
      {
        "user": "zarkerXu",
        "created_at": "2019-10-21T13:16:30Z",
        "body": "> 这个是bug ，我空了研究下。但是这个行数也是不会特别精确。最终还是要以自己的统计为准\r\n\r\n好的，多谢大神了"
      }
    ]
  },
  {
    "number": 720,
    "title": "能满足根据传入表头列表，自动筛选写入数据的功能吗？",
    "created_at": "2019-10-19T08:31:39Z",
    "closed_at": "2019-10-21T11:19:28Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/720",
    "body": "过滤+排序  \r\n比如完整数据如下：\r\n\r\n| id  | name | age |\r\n| ------------- | ------------- | ------------- |\r\n| 1  | 张三 | 43 |\r\n| 2 | 李四 | 29 |  \r\n\r\n现在传入一个附加参数\r\n```\r\n{id,age}\r\n```\r\n输出表格就应该是\r\n\r\n| id  | age |\r\n| ------------- | ------------- |\r\n| 1   | 43 |\r\n| 2  | 29 |    \r\n\r\n如果传入的参数是:\r\n```\r\n{age,name}\r\n```\r\n输出的Excel就应该是：    \r\n\r\n| age  | name |\r\n| ------------- | ------------- |\r\n| 43  | 张三 | \r\n| 49 | 李四 |   \r\n\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/720/comments",
    "author": "vito16",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-10-21T11:19:28Z",
        "body": "目前不支持。需要自己提前删选好数据，并导入。或者你定义不同的class,实际生成会根据不同的class的字段来删选"
      }
    ]
  },
  {
    "number": 719,
    "title": "自定义图片导出的位置",
    "created_at": "2019-10-18T10:45:10Z",
    "closed_at": "2019-10-19T03:53:28Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/719",
    "body": "我使用的是quickStart中的导出图片的方法，导出后固定在一个单元格中。可以自定义图片导出的位置和大小吗？\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/719/comments",
    "author": "anankun",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-10-19T03:53:28Z",
        "body": "目前不支持 后续可能会考虑"
      },
      {
        "user": "anankun",
        "created_at": "2019-10-21T07:58:51Z",
        "body": "可以在自定义handler中调用POI的写图片接口，实现图片导出到指定的位置。"
      }
    ]
  },
  {
    "number": 718,
    "title": "获取解析的数据为null的问题",
    "created_at": "2019-10-18T10:21:04Z",
    "closed_at": "2019-10-19T03:54:19Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/718",
    "body": "**异常代码**\r\n```java\r\n   这里写你的代码\r\n```\r\n**异常提示**\r\n问好！按照例子写了代码后，运行读取本地文件的时候，发现在Listener中invoke中得到的数据全是null是什么原因呢。同样在源码中运行测试类就可以获取到数据。烦请解答一下。多谢\r\n**建议描述**\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/718/comments",
    "author": "krupp",
    "comments": [
      {
        "user": "krupp",
        "created_at": "2019-10-19T00:11:57Z",
        "body": "补充，使用Map类型接收可以获取到值，使用自定义的数据类型接收不到数据。@Data\r\npublic class UploadData {\r\n//    @ExcelProperty(index = 0)\r\n    private String string;\r\n\r\n//    @ExcelProperty(index = 1)\r\n    private Double wcqk;\r\n\r\n//    @ExcelProperty(index = 2)\r\n    private String wwcx;\r\n\r\n//    @ExcelProperty(index = 3)\r\n    private String zrr;\r\n\r\n//    @ExcelProperty(index = 4)\r\n    private Date wcsj;\r\n\r\n}"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2019-10-19T03:54:19Z",
        "body": "请加入getset "
      }
    ]
  },
  {
    "number": 715,
    "title": "读文件时cell为空为什么默认使用double来解析？",
    "created_at": "2019-10-18T08:14:28Z",
    "closed_at": "2019-10-19T03:59:57Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/715",
    "body": "_版本2.0.0-beta6_\r\n\r\nexcel中存在空cell，读入的时候报异常，经分析是因为把空cell用double来解析了\r\ncom.alibaba.excel.analysis.v07.handlers.DefaultCellHandler#appendCurrentCellValue\r\n\r\n```\r\n2019-10-18 15:32:56,283 ERROR [] [http-nio-8080-exec-1] o.a.c.c.C.[.[.[.[dispatcherServlet]:log:175 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is com.alibaba.excel.exception.ExcelAnalysisException: java.lang.NumberFormatException: empty String] with root cause\r\njava.lang.NumberFormatException: empty String\r\n\tat sun.misc.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:1842) ~[?:1.8.0_60]\r\n\tat sun.misc.FloatingDecimal.parseDouble(FloatingDecimal.java:110) ~[?:1.8.0_60]\r\n\tat java.lang.Double.parseDouble(Double.java:538) ~[?:1.8.0_60]\r\n\tat java.lang.Double.valueOf(Double.java:502) ~[?:1.8.0_60]\r\n\tat com.alibaba.excel.analysis.v07.handlers.DefaultCellHandler.appendCurrentCellValue(DefaultCellHandler.java:166) ~[easyexcel-2.0.0-beta6.jar:?]\r\n\tat com.alibaba.excel.analysis.v07.XlsxRowHandler.characters(XlsxRowHandler.java:52) ~[easyexcel-2.0.0-beta6.jar:?]\r\n\tat com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.characters(AbstractSAXParser.java:546) ~[?:1.8.0_60]\r\n\tat com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:463) ~[?:1.8.0_60]\r\n\tat com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:848) ~[?:1.8.0_60]\r\n\tat com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:777) ~[?:1.8.0_60]\r\n\tat com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141) ~[?:1.8.0_60]\r\n\tat com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1213) ~[?:1.8.0_60]\r\n\tat com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser.parse(SAXParserImpl.java:649) ~[?:1.8.0_60]\r\n\tat com.alibaba.excel.analysis.v07.XlsxSaxAnalyser.parseXmlSource(XlsxSaxAnalyser.java:176) ~[easyexcel-2.0.0-beta6.jar:?]\r\n\tat com.alibaba.excel.analysis.v07.XlsxSaxAnalyser.execute(XlsxSaxAnalyser.java:195) ~[easyexcel-2.0.0-beta6.jar:?]\r\n\tat com.alibaba.excel.analysis.ExcelAnalyserImpl.analysis(ExcelAnalyserImpl.java:91) ~[easyexcel-2.0.0-beta6.jar:?]\r\n\tat com.alibaba.excel.ExcelReader.read(ExcelReader.java:170) ~[easyexcel-2.0.0-beta6.jar:?]\r\n\tat com.alibaba.excel.read.builder.ExcelReaderSheetBuilder.doRead(ExcelReaderSheetBuilder.java:160) ~[easyexcel-2.0.0-beta6.jar:?]\r\n```\r\n\r\n这是个bug还是故意这样书写的呢？",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/715/comments",
    "author": "YaoYufeng",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-10-19T03:59:57Z",
        "body": "升级 2.0.5 版本 即可"
      }
    ]
  },
  {
    "number": 712,
    "title": "导入的时候如何对数据进行校验，是在读监听器中做数据的校验吗？",
    "created_at": "2019-10-18T03:55:47Z",
    "closed_at": "2019-10-19T03:53:02Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/712",
    "body": "**异常代码**\r\n```java\r\n   这里写你的代码\r\n```\r\n**异常提示**\r\n请提供完整的异常提示,记住是全部异常！\r\n**建议描述**\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/712/comments",
    "author": "youerduoDog",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-10-19T03:53:02Z",
        "body": "对的 监听器直接if else 或者 监听器调用 `hibernate validate` "
      }
    ]
  },
  {
    "number": 705,
    "title": "导出的是字段名可变的map数据，表头如何映射",
    "created_at": "2019-10-17T03:45:05Z",
    "closed_at": "2019-10-17T10:05:33Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/705",
    "body": "**异常代码**\r\n```java\r\n   这里写你的代码\r\n```\r\n**异常提示**\r\n请提供完整的异常提示,记住是全部异常！\r\n**建议描述**\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/705/comments",
    "author": "zq2020520",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-10-17T10:05:33Z",
        "body": "invokeHead 方法能返回index 和head的关系。invoke 会返回 index和 数据。可以自己对应"
      },
      {
        "user": "daihy8759",
        "created_at": "2019-12-09T08:08:54Z",
        "body": "作者没看清楚问题啊，invokeHead是读取的时候映射，他问的问题是导出的时候List<Map>如何动态指定表头"
      },
      {
        "user": "axzhcode",
        "created_at": "2019-12-12T08:48:47Z",
        "body": "同问，动态表头如何处理，读出来的list<map>都是0,1,2之类的key"
      }
    ]
  },
  {
    "number": 702,
    "title": "想请问一下读取表头数据这里重新方法是在哪里写的",
    "created_at": "2019-10-16T09:10:48Z",
    "closed_at": "2019-10-16T10:46:19Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/702",
    "body": "因为想每次导入的时候对第一行的字段名做校验，所以想取一下表头的数据\r\n\r\n参照：监听器 里面多了一个方法,只要重写invokeHeadMap方法即可\r\n\r\n```\r\n    /**\r\n     * 这里会一行行的返回头\r\n     *\r\n     * @param headMap\r\n     * @param context\r\n     */\r\n    @Override\r\n    public void invokeHeadMap(Map<Integer, String> headMap, AnalysisContext context) {\r\n        LOGGER.info(\"解析到一条头数据:{}\", JSON.toJSONString(headMap));\r\n    }\r\n```\r\n这里的@Override提示Method does not override method from its superclass\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/702/comments",
    "author": "wwz95",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-10-16T10:46:19Z",
        "body": "参照demo简单的读书写"
      },
      {
        "user": "wwz95",
        "created_at": "2019-10-16T11:03:14Z",
        "body": "> 参照demo简单的读书写\r\n\r\n多谢，查了一下是公司用的easyExcel版本是老的，更新为新的就可以重写该方法了。"
      }
    ]
  },
  {
    "number": 701,
    "title": "新人小白。定义了实体类,表头信息什么的都写好了。填数据时如果某一列的数据都为空，有没有办法将整列都移除掉？",
    "created_at": "2019-10-16T08:48:02Z",
    "closed_at": "2019-10-16T10:45:37Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/701",
    "body": "**异常代码**\r\n```java\r\n   这里写你的代码\r\n```\r\n**异常提示**\r\n请提供完整的异常提示,记住是全部异常！\r\n**建议描述**\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/701/comments",
    "author": "TaoTao-Zhao",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-10-16T10:45:37Z",
        "body": "用最新版 默认整列为空 不会返回对象"
      }
    ]
  },
  {
    "number": 698,
    "title": "导入excel时间格式数据转换异常",
    "created_at": "2019-10-15T09:11:17Z",
    "closed_at": "2019-10-15T14:19:34Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/698",
    "body": "**描述**\r\nexcel时间格式为yyyy/mm/dd，导入读取数据获得的是mm/dd/yy，\r\n描述年的数据缺失前两位。\r\n\r\n例：2019/01/01和1919/01/01读入的数据都为1/1/19。\r\n\r\n无法精确转换日期时间。",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/698/comments",
    "author": "SSHinata",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-10-15T14:19:34Z",
        "body": "请尝试使用 `Date`去接收。如果必须用String 请 用 `@DataFomart`注解"
      }
    ]
  },
  {
    "number": 697,
    "title": "数字变成科学计数法及数字自动带上“.0”",
    "created_at": "2019-10-15T08:15:54Z",
    "closed_at": "2019-10-15T14:18:07Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/697",
    "body": "导入数字 变成科学计数法及数字自动带上“.0”\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/697/comments",
    "author": "Lang-Zh",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-10-15T14:18:07Z",
        "body": "是否使用了 最新的`2.0.5` 版本。如果是的话 请加上注解`@NumberFomart(#)` 。"
      },
      {
        "user": "Lang-Zh",
        "created_at": "2019-10-16T00:36:48Z",
        "body": "请问&nbsp; 如果是没有映射实体类 而是Map&nbsp; 要怎么处理？\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n------------------&nbsp;原始邮件&nbsp;------------------\r\n发件人: \"Jiaju Zhuang\"<notifications@github.com&gt;; \r\n发送时间: 2019年10月15日(星期二) 晚上10:18\r\n收件人: \"alibaba/easyexcel\"<easyexcel@noreply.github.com&gt;; \r\n抄送: \"深秋&amp;#x1F340;\"<1102076808@qq.com&gt;; \"Author\"<author@noreply.github.com&gt;; \r\n主题: Re: [alibaba/easyexcel] 数字变成科学计数法及数字自动带上“.0” (#697)\r\n\r\n\r\n\r\n\r\n是否使用了 最新的2.0.5 版本。如果是的话 请加上注解@NumberFomart(#) 。\r\n \r\n—\r\nYou are receiving this because you authored the thread.\r\nReply to this email directly, view it on GitHub, or unsubscribe."
      }
    ]
  },
  {
    "number": 690,
    "title": "ExcelAnalysisException: File type error, io must be available markSupported, you can do like this <code> new BufferedInputStream(new   )>",
    "created_at": "2019-10-14T01:39:44Z",
    "closed_at": "2019-10-14T11:19:29Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/690",
    "body": "**异常代码**\r\n```java\r\n  简单上传功能，同事的机器上能运行（相同的代码，相同的上传文件），我的报这个异常\r\n```\r\n**异常提示**\r\ncom.alibaba.excel.exception.excelAnalysisException:File type error , io must be markSupported, you can do like this<code> new BufferedInputStream( new FileInputStream(\\\"/xxxxx\\\"))</code>\"\r\n**建议描述**\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/690/comments",
    "author": "IssacGan",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-10-14T11:19:29Z",
        "body": "请尝试升级版本 或者  new BufferedInputStream 包裹这个传入的stream流"
      }
    ]
  },
  {
    "number": 684,
    "title": "构建Excel对象疑问",
    "created_at": "2019-10-12T03:01:23Z",
    "closed_at": "2019-10-13T11:53:20Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/684",
    "body": "使用`@ExcelProperty`构建对象时,此注解属性指定的是对应excel哪一列。如何指定对应哪一行呢？\r\n```\r\n    //单位类型    （比如这个type怎么对应excel第一行数据，而不是第一列）\r\n    private String type;\r\n```\r\n默认是以一行作为对象，请问如何以Excel一列作为一个对象进行构建？",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/684/comments",
    "author": "qigecanghai",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-10-13T11:53:20Z",
        "body": "您好 目前不支持 横向的读取。建议用map 接收 然后自己去拼接。"
      }
    ]
  },
  {
    "number": 683,
    "title": "如何遍历获取所有的sheetName，通过判断sheetName获取sheet的位置下标",
    "created_at": "2019-10-12T02:45:35Z",
    "closed_at": "2019-10-13T11:52:25Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/683",
    "body": "需要通过判断sheetname来读取哪几个工作薄的数据，通过什么方法可以获取所有sheetName和位置下标",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/683/comments",
    "author": "object360",
    "comments": [
      {
        "user": "qigecanghai",
        "created_at": "2019-10-12T03:13:29Z",
        "body": "同问  ，如何根据sheet名读取excel"
      },
      {
        "user": "qigecanghai",
        "created_at": "2019-10-12T03:25:13Z",
        "body": "这样写好像可以\r\n```\r\n        SyncReadListener listener = new SyncReadListener();\r\n        ExcelReader excelReader = EasyExcel.read(fileName, ExcelIm.class, listener).build();\r\n        ReadSheet sheet = EasyExcel.readSheet(sheetName).build();\r\n        excelReader.read(sheet);\r\n        List<Object> lists = listener.getList();\r\n```"
      },
      {
        "user": "lazybird23",
        "created_at": "2019-10-12T07:46:32Z",
        "body": "> 这样写好像可以\r\n> \r\n> ```\r\n>         SyncReadListener listener = new SyncReadListener();\r\n>         ExcelReader excelReader = EasyExcel.read(fileName, ExcelIm.class, listener).build();\r\n>         ReadSheet sheet = EasyExcel.readSheet(sheetName).build();\r\n>         excelReader.read(sheet);\r\n>         List<Object> lists = listener.getList();\r\n> ```\r\n好像的。。。大多都不靠谱"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2019-10-13T11:52:25Z",
        "body": "```java\r\n   ExcelReader excelReader = EasyExcel.read(fileName, DemoData.class, listtener).build();\r\n        excelReader.excelExecutor().sheetList()\r\n```\r\n这个可以获取 但是需要注意03版的话 这么 会读取整个excel 。"
      },
      {
        "user": "MaxwellAlen",
        "created_at": "2022-02-18T10:23:24Z",
        "body": "@zhuangjiaju 我用这个方法获取所有sheet页的时候，只获取到了第一页，可能是咋回事啊"
      }
    ]
  },
  {
    "number": 681,
    "title": "新人求解。。。表头7列，但是实际每行中数据有可能为空，读取时不对应，怎么设置参数读取为空的单元格？",
    "created_at": "2019-10-11T06:50:45Z",
    "closed_at": "2019-10-11T10:34:22Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/681",
    "body": "打印的输出：\r\n数据：[name_A, age_A, gender_A, hobby_A, department_A, leader_A, money_A]\r\n出自1个sheet表,名称: test1\r\n第3行数据\r\n数据：[name_A1, 1.0, 女, B1, 101291.1]\r\n出自1个sheet表,名称: test1\r\n第4行数据\r\n数据：[name_A2, 2.0, 女, B2, 101292.1]\r\n出自1个sheet表,名称: test1\r\n\r\n\r\n代码：\r\n public void invoke(List<String> object, AnalysisContext context) {\r\n                    System.out.println(\"出自\"+(context.readSheetHolder().getSheetNo()+1)+\"个sheet表,名称: \"+\r\n                            context.readSheetHolder().getSheetName());\r\n                    System.out.println(\"第\"+context.readRowHolder().getRowIndex()+\"行数据\");\r\n                    List<String> datas = (List<String>) context.readRowHolder().getCurrentRowAnalysisResult();\r\n                    System.out.println(\"数据：\"+datas.toString());\r\n                }\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/681/comments",
    "author": "lazybird23",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-10-11T10:34:22Z",
        "body": "建议用对象或者 map 去接收 用map的话话可以用index判断。下个版本会修复这个问题 会有个null的数据"
      },
      {
        "user": "linsmalldragon",
        "created_at": "2021-03-31T14:14:31Z",
        "body": "2.2.7还有这个问题\r\n"
      },
      {
        "user": "linsmalldragon",
        "created_at": "2021-03-31T14:14:44Z",
        "body": "请问在哪个版本已修复"
      }
    ]
  },
  {
    "number": 679,
    "title": "有没有获取excel的sheet总数的接口",
    "created_at": "2019-10-09T09:20:03Z",
    "closed_at": "2019-10-09T11:45:01Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/679",
    "body": "有没有获取excel的sheet总数的接口",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/679/comments",
    "author": "shiminyu-patsnap",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-10-09T11:45:01Z",
        "body": "升级到最新版本，可以获取sheetList"
      }
    ]
  },
  {
    "number": 677,
    "title": "可以指定导出的列吗？",
    "created_at": "2019-10-09T08:31:09Z",
    "closed_at": "2019-10-09T11:42:33Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/677",
    "body": "现在使用的时候，在POJO上添加注解@ExcelProperty，在导出的时候会将所有注解的列导出。\r\n请问可以在导出的时候指定导出哪些列吗？\r\n需求场景是同一个POJO需要导出不同的字段",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/677/comments",
    "author": "JesseZhen",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-10-09T11:42:33Z",
        "body": "目前不支持。需要创建多个POJO。看到一个同学要反射实现过，但是不推荐"
      }
    ]
  },
  {
    "number": 676,
    "title": "如何创建Excel文档摘要信息",
    "created_at": "2019-10-09T07:27:21Z",
    "closed_at": "2019-10-23T11:03:17Z",
    "labels": [
      "help wanted",
      "developing"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/676",
    "body": "**异常代码**\r\n```java\r\n   这里写你的代码\r\n```\r\n**异常提示**\r\n请提供完整的异常提示,记住是全部异常！\r\n**建议描述**\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/676/comments",
    "author": "xuepiao10000",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-10-23T11:03:17Z",
        "body": "easyexcel是封装了poi。所以至少升级到`2.1.0-beta3`，然后设置`InMemory` 参数为true，然后通过自定义拦截器的方式加入备注。但是这样所有的数据都会在内存处理，大量导出的时候容易OOM。如果不是每个字段都要，建议使用`填充Excel`。"
      }
    ]
  },
  {
    "number": 675,
    "title": "您好，请问怎么跳过空行，防止读取到空数据",
    "created_at": "2019-10-09T03:28:06Z",
    "closed_at": "2019-10-09T11:45:43Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/675",
    "body": "\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/675/comments",
    "author": "Bylgby",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-10-09T11:45:43Z",
        "body": "请使用最新版本 默认跳过空行"
      }
    ]
  },
  {
    "number": 673,
    "title": "如何实现边读取数据边下载？",
    "created_at": "2019-10-08T09:35:29Z",
    "closed_at": "2019-10-08T12:19:16Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/673",
    "body": "数据量庞大时，如果将全部的数据加载、拼接到内存中，然后统一输出成excel下载，很有可能造成两个问题，第一内存爆掉，第二web服务器超时，如果支持边查询少量数据，边下载，这样就可避免上面两个问题，不知道目前easyexcel有没有类似的解决方案，恳请回复，谢谢\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/673/comments",
    "author": "linxiaoyang",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-10-08T12:19:16Z",
        "body": "直接参照`demo` 书写即可，数据分批读取。"
      },
      {
        "user": "linxiaoyang",
        "created_at": "2019-10-08T13:27:31Z",
        "body": "实例中的方法repeatedWrite的解决方案，采用的是分批读取，数据还是在应用系统的内存中，本质上还是将所有的数据都汇总完毕后，调用finish方法，将数据写入outputstream中，还是不能解决我上面提到的两个问题啊"
      }
    ]
  },
  {
    "number": 671,
    "title": "设置excel样式后，导出excel文件后，最后一列的边框没有",
    "created_at": "2019-10-08T06:53:22Z",
    "closed_at": "2019-10-08T12:17:23Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/671",
    "body": "设置excel的TableStyle，导出文件后，最后一列边框没有\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/671/comments",
    "author": "xiapshen",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-10-08T12:17:23Z",
        "body": "您是否使用了 最新的版本？如果是 请提供源代码。"
      }
    ]
  },
  {
    "number": 668,
    "title": "我的model类中某些字段需要用到但不想导出，有什么好办法吗",
    "created_at": "2019-10-07T08:57:21Z",
    "closed_at": "2019-10-08T12:14:26Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/668",
    "body": "**异常代码**\r\n```java\r\n   这里写你的代码\r\n```\r\n**异常提示**\r\n请提供完整的异常提示,记住是全部异常！\r\n**建议描述**\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/668/comments",
    "author": "joffreychen",
    "comments": [
      {
        "user": "chencs0603",
        "created_at": "2019-10-08T01:46:07Z",
        "body": "用@ExcelIgnore注解即可,我用的是2.0.4版本"
      }
    ]
  },
  {
    "number": 663,
    "title": "您好，行中的空数据的问题，行中的空数据会被抓自动略过，导致实际列数和读取列数不一致",
    "created_at": "2019-10-06T05:08:30Z",
    "closed_at": "2019-10-15T14:26:34Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/663",
    "body": "**异常代码**\r\n```java\r\n   这里写你的代码\r\n```\r\n**异常提示**\r\n请提供完整的异常提示,记住是全部异常！\r\n**建议描述**\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/663/comments",
    "author": "ailuoli666",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-10-08T12:13:21Z",
        "body": "请升级到最新版本。然后使用参数`ignoreEmptyRow`  设置false 会读取到空行"
      },
      {
        "user": "forvicky",
        "created_at": "2019-10-09T02:20:43Z",
        "body": "> 请升级到最新版本。然后使用参数`ignoreEmptyRow` 设置false 会读取到空行\r\n\r\nignoreEmptyRow参数无效"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2019-10-09T11:38:11Z",
        "body": "> > 请升级到最新版本。然后使用参数`ignoreEmptyRow` 设置false 会读取到空行\r\n> \r\n> ignoreEmptyRow参数无效\r\n\r\n请提供详细案例 你想要干嘛 用了什么代码 结果咋么样 你想要怎么样"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2019-10-15T14:26:34Z",
        "body": "不知道您是否已经解决了问题 如果还是未解决 请详细描述后 重新打开此问题。"
      }
    ]
  },
  {
    "number": 662,
    "title": "支持读取批注么？",
    "created_at": "2019-10-01T07:17:35Z",
    "closed_at": "2019-10-08T12:12:18Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/662",
    "body": "**异常代码**\r\n```java\r\n\r\n```\r\n**异常提示**\r\n\r\n**建议描述**\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/662/comments",
    "author": "MRLiuJee",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-10-08T12:12:18Z",
        "body": "目前不支持，短期内应该不会支持。"
      }
    ]
  },
  {
    "number": 661,
    "title": "请问，导入的时候excel中间存在空行怎么处理",
    "created_at": "2019-09-30T07:36:47Z",
    "closed_at": "2019-10-08T12:11:53Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/661",
    "body": "**异常代码**\r\n```java\r\n   这里写你的代码\r\n```\r\n**异常提示**\r\n请提供完整的异常提示,记住是全部异常！\r\n**建议描述**\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/661/comments",
    "author": "tys87198312",
    "comments": [
      {
        "user": "sjmingdna",
        "created_at": "2019-10-01T03:26:50Z",
        "body": "你好，不是代码的问题，是Excel自身需要在这种格式的数据前加一个英文的单引号，不然会转义\r\n\r\n\r\n\r\n\r\n------------------ 原始邮件 ------------------\r\n发件人: \"tys87198312\"<notifications@github.com>;\r\n发送时间: 2019年9月30日(星期一) 下午3:37\r\n收件人: \"alibaba/easyexcel\"<easyexcel@noreply.github.com>;\r\n抄送: \"Subscribed\"<subscribed@noreply.github.com>;\r\n主题: [alibaba/easyexcel] 请问，导入的时候excel中间存在空行怎么处理 (#661)\r\n\r\n\r\n\r\n\r\n异常代码\r\n    这里写你的代码\r\n \r\n异常提示\r\n 请提供完整的异常提示,记住是全部异常！\r\n 建议描述\r\n \r\n—\r\nYou are receiving this because you are subscribed to this thread.\r\nReply to this email directly, view it on GitHub, or mute the thread."
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2019-10-08T12:11:53Z",
        "body": "请升级到2.0.5 版本 默认会忽略空行"
      }
    ]
  },
  {
    "number": 658,
    "title": "导出Excel,要怎么要设置导出的EXcel有多个sheet，并且每个sheet的表头都不同？",
    "created_at": "2019-09-29T10:03:21Z",
    "closed_at": "2019-09-29T11:28:16Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/658",
    "body": "",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/658/comments",
    "author": "felixzhang09",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-09-29T11:28:14Z",
        "body": "请参照文档"
      }
    ]
  },
  {
    "number": 655,
    "title": "Excel头上会多一列 this$0",
    "created_at": "2019-09-29T09:18:09Z",
    "closed_at": "2019-10-15T14:20:27Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/655",
    "body": "使用简单Excel写 ,  生成的excel 头为：  字符串标题 | this$0。 多了一列this$0。\r\n使用easyexcel版本为2.0.3。使用1.1.1没有这个问题\r\n\r\n代码如下:\r\n    @Data\r\n    public class DemoData {\r\n        @ExcelProperty(\"字符串标题\")\r\n        private String string;\r\n    }\r\n    public void simpleWrite() {\r\n        String file = \"D://\";\r\n        // 写法2\r\n        String fileName = file + \"simpleWrite\" + System.currentTimeMillis() + \".xlsx\";\r\n        // 这里 需要指定写用哪个class去读\r\n        ExcelWriter excelWriter = EasyExcel.write(fileName, DemoData.class).build();\r\n        WriteSheet writeSheet = EasyExcel.writerSheet(\"模板\").build();\r\n        excelWriter.write(new ArrayList(), writeSheet);\r\n        /// 千万别忘记finish 会帮忙关闭流\r\n        excelWriter.finish();\r\n    }",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/655/comments",
    "author": "MyouchSky",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-09-29T11:27:29Z",
        "body": "这个应该是 你用了什么测试工具的原因。直接跑应该没问题。这个也是个Bug 会在下个版本修复。"
      }
    ]
  },
  {
    "number": 650,
    "title": "无法读取excel表头数据",
    "created_at": "2019-09-27T09:11:44Z",
    "closed_at": "2019-10-16T02:01:58Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/650",
    "body": "**异常代码**\r\n```java\r\n   ExcelListener excelListener = new ExcelListener();\r\n   excelReader = EasyExcel.read(in,null,excelListener).build();\r\n   excelReader.read();\r\n\r\n   AnalysisEventListener的invoke方法如下：\r\n   ReadSheetHolder readSheetHolder = analysisContext.readSheetHolder();\r\n        String sheetName = readSheetHolder.getSheetName();\r\n        if(Objects.isNull(o) || ((HashMap) o).size() == 0){\r\n            return;\r\n        }\r\n        if(map.containsKey(sheetName)){\r\n            map.get(sheetName).add(o);\r\n        }else {\r\n            List<Object> objectList = new ArrayList<>();\r\n            objectList.add(o);\r\n            map.put(sheetName,objectList);\r\n        }\r\n```\r\n**异常提示**\r\n无异常，解析的数据，对象o无表头中文数据\r\n**建议描述**\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/650/comments",
    "author": "zgc824",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-09-27T12:01:40Z",
        "body": "对象o 是什么？"
      },
      {
        "user": "zhangjingsen",
        "created_at": "2019-09-29T07:29:18Z",
        "body": " EasyExcel.read(fileName, null, excelListener).sheet().headRowNumber(0).doRead();\r\n读的时候设置headRowNumber试试"
      },
      {
        "user": "sjmingdna",
        "created_at": "2019-09-29T08:46:04Z",
        "body": "好的，谢谢\r\n\r\n\r\n\r\n\r\n------------------ 原始邮件 ------------------\r\n发件人: \"景森\"<notifications@github.com>;\r\n发送时间: 2019年9月29日(星期天) 下午3:29\r\n收件人: \"alibaba/easyexcel\"<easyexcel@noreply.github.com>;\r\n抄送: \"Subscribed\"<subscribed@noreply.github.com>;\r\n主题: Re: [alibaba/easyexcel] 无法读取excel表头数据 (#650)\r\n\r\n\r\n\r\n\r\nEasyExcel.read(fileName, null, excelListener).sheet().headRowNumber(0).doRead();\r\n 读的时候设置headRowNumber试试\r\n \r\n—\r\nYou are receiving this because you are subscribed to this thread.\r\nReply to this email directly, view it on GitHub, or mute the thread."
      },
      {
        "user": "zgc824",
        "created_at": "2019-10-08T05:59:28Z",
        "body": "对象o就是invoke方法的的第一个入参"
      },
      {
        "user": "zgc824",
        "created_at": "2019-10-08T09:22:11Z",
        "body": "EasyExcel.read(in, null, excelListener).headRowNumber(0).build().read()\r\n成功读取每个sheet页的数据"
      }
    ]
  },
  {
    "number": 643,
    "title": "请问EasyExcel能否根据数据透视表生成数据透视图",
    "created_at": "2019-09-26T10:19:32Z",
    "closed_at": "2019-09-26T11:33:40Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/643",
    "body": "我记得Apache POI是不行的。想请问EasyExcel是否对应了这部分功能。",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/643/comments",
    "author": "xucjing",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-09-26T11:33:40Z",
        "body": "您好不支持。easyexcel主要 解决大数据量 然后 简单的数据导入 导出。"
      }
    ]
  },
  {
    "number": 640,
    "title": "我看介绍说是默认异步读取excel,但是测试结果是同步阻塞的呀?",
    "created_at": "2019-09-26T04:00:36Z",
    "closed_at": "2019-09-26T11:31:10Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/640",
    "body": "然后源码里面也没找到有开启线程或者线程池的地方?\r\n\r\n请问是怎么实现的异步呢?",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/640/comments",
    "author": "Liloupar",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-09-26T11:31:10Z",
        "body": "异步的意思是 不是一次性把所有数据读取到内存。单个文件不支持 您说的异步，多个文件就是使用连接池。"
      }
    ]
  },
  {
    "number": 637,
    "title": "Listener中支持Map类接收吗 ？",
    "created_at": "2019-09-25T09:13:36Z",
    "closed_at": "2019-09-25T10:38:16Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/637",
    "body": "**异常代码**\r\n```java\r\n   这里写你的代码\r\n```\r\n**异常提示**\r\n因为我的列可能不确定 我能先读出来head 然后数据读出来放到map里 然后逐个根据head字段从map数据中取吗\r\n**建议描述**\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/637/comments",
    "author": "shanmie",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-09-25T10:38:16Z",
        "body": "支持 `Map<Integer,String>`接收"
      }
    ]
  },
  {
    "number": 630,
    "title": "导出xlsx文件表头乱码",
    "created_at": "2019-09-24T12:50:12Z",
    "closed_at": "2019-10-16T10:52:31Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/630",
    "body": "",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/630/comments",
    "author": "TiAmo404",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-09-24T14:50:19Z",
        "body": "问题 能不能描述详细点 系统的编码是什么？是文件名乱码 还是头 乱码？"
      },
      {
        "user": "TiAmo404",
        "created_at": "2019-09-25T00:46:50Z",
        "body": "表头及sheet名称乱码,内容没有"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2019-09-25T10:31:54Z",
        "body": "有没有在java里面输出过 是否乱码？"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2019-10-16T10:52:31Z",
        "body": "请问问题是否解决了？未未解决的话 请重新打开问题"
      },
      {
        "user": "wintercoder",
        "created_at": "2021-02-08T05:47:53Z",
        "body": "我是Mac，写Excel文件，最开始没事，后来多导了一些数据就有问题了，只有表头乱码，也遇到了，最后是把DTO文件编码改成GBK 好了\r\n\r\n```\r\n//文本\r\n@HeadStyle(dataFormat = 48)\r\npublic class WriteExcelDataDto {\r\n    @ExcelProperty(\"左侧名\")\r\n    private String name;\r\n}\r\n```"
      }
    ]
  },
  {
    "number": 629,
    "title": "嵌套集合的动态列、动态列的合并单元格",
    "created_at": "2019-09-24T07:53:59Z",
    "closed_at": "2019-09-24T11:03:57Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/629",
    "body": "public class SurveyDataExcel {\r\n\r\n \r\n    private String projectName;\r\n\r\n\r\n    private String subProjectName;\r\n\r\n\r\n    private String taskName;\r\n\r\n\r\n    private List<SurveyDataVo> surveyDataVoList;\r\n\r\n}\r\n\r\n如果这是我的要导出的数据，前三个字段对应后面的集合， 其中SurveyDataVo 中也有一个字段是集合，这样复杂的集合嵌套有什么好的解决方案吗？ \r\n还有就是：\r\n        LoopMergeStrategy loopMergeStrategy = new LoopMergeStrategy(2, 0);\r\n       CellRangeAddressList cellRangeAddressList = new CellRangeAddressList(1, 2, 0, 0);\r\n合并单元格和设置下拉框都是根据下标指定的，那么动态处理上面那种嵌套数据有什么好的解决方案吗？\r\n\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/629/comments",
    "author": "lianghongshuai",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-09-24T11:03:57Z",
        "body": "建议把 SurveyDataExcel 里面的字段移动到 SurveyDataVo里面。搞成平级对象，然后再合并"
      }
    ]
  },
  {
    "number": 626,
    "title": "新版是 删除 多sheet写入了吗",
    "created_at": "2019-09-23T09:52:22Z",
    "closed_at": "2019-09-23T12:02:41Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/626",
    "body": "**异常代码**\r\n```java\r\n   这里写你的代码\r\n```\r\n**异常提示**\r\n请提供完整的异常提示,记住是全部异常！\r\n**建议描述**\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/626/comments",
    "author": "lianghongshuai",
    "comments": [
      {
        "user": "lianghongshuai",
        "created_at": "2019-09-23T09:55:35Z",
        "body": "读取excel的监听器中的获取行号的方法也没有用了，现在怎么获取行号呢？"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2019-09-23T12:02:41Z",
        "body": "参照简单的写里面的demo2 可以创建多个writesheet 然后写入过多个。获取行号的 点进去有建议使用的方法。"
      }
    ]
  },
  {
    "number": 625,
    "title": "如何让生成的excel表头带有筛选功能",
    "created_at": "2019-09-23T09:14:15Z",
    "closed_at": "2019-09-23T12:03:58Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/625",
    "body": "如题？POI支持生成excel的表头带有筛选功能，这个支持吗？",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/625/comments",
    "author": "Bleach4Ever",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-09-23T12:03:58Z",
        "body": "建议参照 自定义拦截器书写。可以获取到cell 然后用poi的版本 写法"
      }
    ]
  },
  {
    "number": 624,
    "title": "请问支持模板替换吗？就是${userName}替换到excel里",
    "created_at": "2019-09-23T09:03:35Z",
    "closed_at": "2019-09-23T12:04:26Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/624",
    "body": "**异常代码**\r\n```java\r\n   这里写你的代码\r\n```\r\n**异常提示**\r\n请提供完整的异常提示,记住是全部异常！\r\n**建议描述**\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/624/comments",
    "author": "lw201608",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-09-23T12:04:26Z",
        "body": "这个在还在开发 等待下个版本"
      }
    ]
  },
  {
    "number": 621,
    "title": "2.0.1版本读取xls时，excelReader.excelExecutor().sheetList()为空",
    "created_at": "2019-09-23T06:09:39Z",
    "closed_at": "2019-09-24T11:05:00Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/621",
    "body": "**异常代码**\r\nexcelReader.read();\r\n**异常提示**\r\n请提供完整的异常提示,记住是全部异常！\r\n**建议描述**\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/621/comments",
    "author": "ailuoli666",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-09-23T12:05:23Z",
        "body": "这个是 03还是07？"
      },
      {
        "user": "ailuoli666",
        "created_at": "2019-09-23T12:07:08Z",
        "body": "您好，07正常，03为空。"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2019-09-23T12:08:00Z",
        "body": "哦 这个是bug 我尽快修复"
      },
      {
        "user": "ailuoli666",
        "created_at": "2019-09-23T12:12:42Z",
        "body": "好的，辛苦您了"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2019-09-24T11:05:00Z",
        "body": "已经在2.0.2里面修复"
      }
    ]
  },
  {
    "number": 620,
    "title": "如何实现导入的内容自动居中，以及优雅设置header背景色",
    "created_at": "2019-09-23T05:18:17Z",
    "closed_at": "2019-09-23T12:05:46Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/620",
    "body": "",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/620/comments",
    "author": "tianxiang230",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-09-23T12:05:46Z",
        "body": "参照自定义样式"
      }
    ]
  },
  {
    "number": 619,
    "title": "文件名filename 如果是中文，下载后名称不对，名称变成了一个下划线   ____.xlsx",
    "created_at": "2019-09-23T03:43:19Z",
    "closed_at": "2019-09-23T12:06:09Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/619",
    "body": " response.setContentType(\"application/vnd.ms-excel\");\r\n        response.setCharacterEncoding(\"utf-8\");\r\n        response.setHeader(\"Content-disposition\", \"attachment;filename=下载.xlsx\");\r\n        EasyExcel.write(response.getOutputStream(), DownloadData.class).sheet(\"模板\").doWrite(data());",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/619/comments",
    "author": "linjpg",
    "comments": [
      {
        "user": "nonfou",
        "created_at": "2019-09-23T04:59:42Z",
        "body": "```\r\nString fileName=\"下载.xlsx\";\r\nresponse.setHeader(\"Content-disposition\", \"attachment;filename=\" + URLEncoder.encode(fileName, StandardCharsets.UTF_8.name()));\r\n```"
      }
    ]
  },
  {
    "number": 617,
    "title": "使用2.0.0版本读取excel的时候会发现模型中index>3的列数据无法读取",
    "created_at": "2019-09-21T08:37:25Z",
    "closed_at": "2019-09-24T11:02:54Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/617",
    "body": "public void importExcel(MultipartFile file, Long schoolId) throws Exception {\r\n        try (InputStream is=file.getInputStream()){\r\n            ExcelReader excelReader = EasyExcel.read(is, TimetableVo.class, excelDataListener).build();\r\n            int total = excelReader.excelExecutor().sheetList().size();\r\n            for (int sheetNo = 0; sheetNo < total; sheetNo++) {\r\n                ReadSheet readSheet = EasyExcel.readSheet(sheetNo).build();\r\n                excelReader.read(readSheet);\r\n            }\r\n            excelReader.finish();\r\n        }\r\n    }\r\n---监听器---\r\n@Slf4j\r\n@Component\r\npublic class ExcelDataListener extends AnalysisEventListener<TimetableVo> {\r\n\r\n    @Override\r\n    public void invoke(TimetableVo data, AnalysisContext context) {\r\n        log.info(\"数据:{}\", data);\r\n    }\r\n\r\n    @Override\r\n    public void doAfterAllAnalysed(AnalysisContext context) {\r\n        log.info(\"解析完成！\");\r\n    }\r\n}\r\n----modal----\r\n@Data\r\npublic class TimetableVo  {\r\n    @ExcelProperty(index = 0)\r\n    private String stay;\r\n\r\n    @ExcelProperty(index = 1)\r\n    private String period;\r\n\r\n    @ExcelProperty(index = 2)\r\n    private String time;\r\n\r\n    @ExcelProperty(index = 3)\r\n    private String monday;\r\n\r\n    @ExcelProperty(index = 4)\r\n    private String Tuesday;\r\n\r\n    @ExcelProperty(index = 5)\r\n    private String Wednesday;\r\n\r\n    @ExcelProperty(index = 6)\r\n    private String Thursday;\r\n\r\n    @ExcelProperty(index = 7)\r\n    private String Friday;\r\n\r\n    @ExcelProperty(index = 8)\r\n    private String Saturday;\r\n\r\n    @ExcelProperty(index = 9)\r\n    private String sunday;\r\n}",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/617/comments",
    "author": "qzyReal",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-09-24T11:02:54Z",
        "body": "请尝试下 2.0.2 这个应该是 获取sheetList 03版本有问题"
      }
    ]
  },
  {
    "number": 616,
    "title": "无法读取excel中的复选框，这个是不支持还是需要特别的方法读取",
    "created_at": "2019-09-21T04:29:00Z",
    "closed_at": "2019-09-23T12:07:20Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/616",
    "body": "**异常代码**\r\n```java\r\n   这里写你的代码\r\n```\r\n**异常提示**\r\n请提供完整的异常提示,记住是全部异常！\r\n**建议描述**\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/616/comments",
    "author": "BeTheGreat",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-09-23T12:07:20Z",
        "body": "这个目前不支持，建议直接使用poi读取"
      }
    ]
  },
  {
    "number": 615,
    "title": "导入时整数自动加了.0",
    "created_at": "2019-09-21T03:13:41Z",
    "closed_at": "2019-09-23T12:09:31Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/615",
    "body": "**异常代码**\r\n```java\r\n   // t is null ,it's means Empty or Number\r\n   CellDataTypeEnum type = CellDataTypeEnum.buildFromCellType(attributes.getValue(CELL_VALUE_TYPE_TAG));\r\n```\r\n**异常提示**\r\n整数会被格式化成小数如5变成5.0\r\n**建议描述**\r\n为什么Empty 要默认成数字呢？可以默认成字符串吗",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/615/comments",
    "author": "wcccode",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-09-23T12:09:31Z",
        "body": "如果是2.0.1之前的版本 请先升级。如果不是 建议 使用 `@NumberFormat(\"#\")` 接收 会去除小数点。这个问题会在下下个版本解决"
      },
      {
        "user": "libleo",
        "created_at": "2022-08-09T02:47:52Z",
        "body": "目前使用3.1.1版本还是存在此问题"
      },
      {
        "user": "wcccode",
        "created_at": "2022-08-09T02:48:12Z",
        "body": " \n您好，您的来信我已收到，谢谢！！！"
      }
    ]
  },
  {
    "number": 613,
    "title": " Can not close IO",
    "created_at": "2019-09-20T15:37:52Z",
    "closed_at": "2019-10-14T11:41:29Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/613",
    "body": "**异常代码**\r\n```java\r\n   EasyExcel.read(is, GipsVo.class,new GipsListener(externalHandlerContext)).sheet(0).doRead();\r\n```\r\n**异常提示**\r\ncom.alibaba.excel.exception.ExcelAnalysisException: Can not close IO\r\n\tat com.alibaba.excel.analysis.ExcelAnalyserImpl.throwCanNotCloseIo(ExcelAnalyserImpl.java:152) ~[easyexcel-2.0.0.jar:?]\r\n\tat com.alibaba.excel.analysis.ExcelAnalyserImpl.finish(ExcelAnalyserImpl.java:125) ~[easyexcel-2.0.0.jar:?]\r\n\tat com.alibaba.excel.ExcelReader.finalize(ExcelReader.java:286) [easyexcel-2.0.0.jar:?]\r\n\tat java.lang.System$2.invokeFinalize(System.java:1270) [?:1.8.0_102]\r\n\tat java.lang.ref.Finalizer.runFinalizer(Finalizer.java:98) [?:1.8.0_102]\r\n\tat java.lang.ref.Finalizer.access$100(Finalizer.java:34) [?:1.8.0_102]\r\n\tat java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:210) [?:1.8.0_102]\r\nCaused by: java.io.FileNotFoundException: C:\\Users\\jiezh\\AppData\\Local\\Temp\\excache\\43dabea0-4c94-4ed2-bf92-7ffe74cc619d\\437537ad-0ff6-4e75-bb77-235ddd88991e.xlsx (系统找不到指定的路径。)\r\n\tat java.io.FileOutputStream.open0(Native Method) ~[?:1.8.0_102]\r\n\tat java.io.FileOutputStream.open(FileOutputStream.java:270) ~[?:1.8.0_102]\r\n\tat java.io.FileOutputStream.<init>(FileOutputStream.java:213) ~[?:1.8.0_102]\r\n\tat java.io.FileOutputStream.<init>(FileOutputStream.java:162) ~[?:1.8.0_102]\r\n\tat org.apache.poi.openxml4j.opc.OPCPackage.save(OPCPackage.java:1471) ~[poi-ooxml-4.0.1.jar:4.0.1]\r\n\tat org.apache.poi.openxml4j.opc.OPCPackage.close(OPCPackage.java:447) ~[poi-ooxml-4.0.1.jar:4.0.1]\r\n\tat com.alibaba.excel.analysis.ExcelAnalyserImpl.finish(ExcelAnalyserImpl.java:122) ~[easyexcel-2.0.0.jar:?]\r\n\t... 5 more\r\n**建议描述**\r\n50万数据跑着跑着报这个错误了，请问是啥原因呢",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/613/comments",
    "author": "wyzhangjie",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-09-23T12:11:28Z",
        "body": "这个是这样子的，中间用到了临时文件。是否你中间有删除过java的临时文件？"
      },
      {
        "user": "luckyuer",
        "created_at": "2019-09-24T03:26:38Z",
        "body": "writeWorkbookHolder.getWorkbook().close();这个方法在2.0.1中不存在？\r\n---明白了被父工程中又引入的poi版本不一致覆盖掉了"
      },
      {
        "user": "luoniabiao",
        "created_at": "2019-09-25T08:11:36Z",
        "body": "maven里面又引入了其它版本的poi要怎么解决兼容呢？"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2019-09-25T10:39:10Z",
        "body": "> maven里面又引入了其它版本的poi要怎么解决兼容呢？\r\n\r\n统一版本就可以"
      },
      {
        "user": "wylyeak",
        "created_at": "2019-09-27T07:53:24Z",
        "body": "1. 确认 POI 的版本， 可以尝试升级到```4.1.0```版本\r\n\r\n```\r\n <dependency>\r\n    <groupId>org.apache.poi</groupId>\r\n    <artifactId>poi</artifactId>\r\n    <version>4.1.0</version>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.apache.poi</groupId>\r\n    <artifactId>poi-ooxml</artifactId>\r\n    <version>4.1.0</version>\r\n</dependency>\r\n```\r\n\r\n2. 确认项目 ASM 依赖是否有两个,  需要```org.ow2.asm:asm```, 排除 ```asm:asm```"
      },
      {
        "user": "shenzhuan",
        "created_at": "2022-07-18T09:01:54Z",
        "body": "我只引入了easyexcel3.1.1 没有其他任何poi也会有这样的错误"
      }
    ]
  },
  {
    "number": 611,
    "title": "请问写操作支持CSV导出吗",
    "created_at": "2019-09-20T08:17:10Z",
    "closed_at": "2019-09-20T12:08:43Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/611",
    "body": "\r\n用的demo里面的下面代码\r\nEasyExcel.write(fileName, DemoData.class).sheet(\"模板\").doWrite(data());\r\nfileName为xxx.csv，打开文件提示“文件格式和拓展名不匹配”，请问支持指定格式(xls/xlsx/csv)的导出吗？",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/611/comments",
    "author": "JesseZhen",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-09-20T12:08:43Z",
        "body": "目前仅仅支持xlsx xls 请参照demo书写"
      }
    ]
  },
  {
    "number": 609,
    "title": "是否支持字符串对枚举的转换",
    "created_at": "2019-09-19T10:38:32Z",
    "closed_at": "2019-09-19T11:22:19Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/609",
    "body": "注解表头是否支持枚举解析",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/609/comments",
    "author": "wenfer",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-09-19T11:22:18Z",
        "body": "目前不支持。请使用转换好以后的"
      }
    ]
  },
  {
    "number": 607,
    "title": "读取日期格式的数据是数字",
    "created_at": "2019-09-19T08:10:23Z",
    "closed_at": "2019-09-19T10:23:57Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/607",
    "body": "读取的excel没有固定模板，这个问题有解决办法吗",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/607/comments",
    "author": "zhangjingsen",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-09-19T10:23:57Z",
        "body": "这个只能通过自定义转换器去处理。参照`StringNumberConverter` 在判断是日期的方法 可以自己再修改下。"
      }
    ]
  },
  {
    "number": 602,
    "title": "如何将数据库值1\\2\\3 之类转换成 男  女  人妖  ",
    "created_at": "2019-09-18T10:00:33Z",
    "closed_at": "2021-09-17T06:08:23Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/602",
    "body": "如何将数据库值1\\2\\3 之类转换成 男  女  人妖  \r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/602/comments",
    "author": "lydon18",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2021-09-17T06:08:22Z",
        "body": "这个可以自定义转换器"
      }
    ]
  },
  {
    "number": 600,
    "title": "请问如何在当前表的最后一行追加数据呢？",
    "created_at": "2019-09-18T06:27:01Z",
    "closed_at": "2019-09-18T10:19:27Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/600",
    "body": "**异常代码**\r\n```java\r\n   这里写你的代码\r\n```\r\n**异常提示**\r\n请提供完整的异常提示,记住是全部异常！\r\n**建议描述**\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/600/comments",
    "author": "xieqiang1724",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-09-18T10:19:27Z",
        "body": "参照手册 根据模板写入"
      }
    ]
  },
  {
    "number": 597,
    "title": "哪个版本开始@ExcelProperty注解可以根据value属性匹配excel的列名",
    "created_at": "2019-09-18T03:16:03Z",
    "closed_at": "2019-09-18T10:22:15Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/597",
    "body": "**示例**\r\n```java\r\n    @ExcelProperty(value = \"姓名\")\r\n    private String name;\r\n```\r\n**异常提示**\r\n获取不到excel的姓名列，版本是1.1.2-beta4\r\n**建议描述**\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/597/comments",
    "author": "javafanslz",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-09-18T10:22:15Z",
        "body": "2.0.0支持 建议升级"
      }
    ]
  },
  {
    "number": 594,
    "title": "onException 重写触发后未停止read表格剩余内容-2.0.0-bate6",
    "created_at": "2019-09-18T02:44:46Z",
    "closed_at": "2019-09-18T10:23:14Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/594",
    "body": "**异常代码**\r\n```java\r\n     @Override\r\n            public void invoke(Map<Integer, Object> data,\r\n                    AnalysisContext context) {\r\n                if(status) {\r\n                    ZhiWeiTools.sleep(1000);\r\n                    System.out.println(\"data\" + data);\r\n                }\r\n                onException(new IllegalAccessException(\"\"), context);\r\n            }\r\n            \r\n            @Override\r\n            public void onException(Exception exception, AnalysisContext context) {\r\n                System.out.println(\"eoor\");\r\n            }\r\n            \r\n            @Override\r\n            public void invokeHeadMap(Map<Integer,String> dataMap, AnalysisContext context) {\r\n                System.out.println(\"invokeHeadMap --- \" + dataMap.toString());\r\n                try {\r\n                    onException(new IllegalAccessException(\"\"), context);\r\n                } catch (Exception e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n```\r\n**异常提示**\r\nonException 重写触发后未停止read表格剩余内容，\r\n运行后打印如下：\r\ninvokeHeadMap --- {0=名字1568628392258, 1=测试1568628392258}\r\neoor\r\ndata{0=m1230, 1=c1230}\r\neoor\r\ndata{0=m1231, 1=c1231}\r\neoor\r\ndata{0=m1232, 1=c1232}\r\neoor\r\n**建议描述**\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/594/comments",
    "author": "dztaoist",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-09-18T10:23:14Z",
        "body": "请重新抛出异常 否则认为您需要继续往下走"
      }
    ]
  },
  {
    "number": 590,
    "title": "导入导出支持List<Map> ?",
    "created_at": "2019-09-17T06:09:02Z",
    "closed_at": "2019-09-18T10:23:41Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/590",
    "body": "如题， 导入导出支持List<Map>  就不用每个导入都写个model了",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/590/comments",
    "author": "ivanmissu",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-09-18T10:23:41Z",
        "body": "请参照文档书写"
      }
    ]
  },
  {
    "number": 589,
    "title": "读sheet就会调用doAfterAllAnalysed吗",
    "created_at": "2019-09-17T02:26:13Z",
    "closed_at": "2019-09-18T10:29:30Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/589",
    "body": "**代码**\r\n\r\n\tprivate void saveData() {\r\n\t\tlog.info(\"{}条数据，开始存储数据库！\", list.size());\r\n\t\tfor (int i = 0, size = list.size(); i < size; i++) {\r\n\t\t\tlog.info(i + \":\" + JSONObject.toJSONString(list.get(i)));\r\n\t\t}\r\n\t\tlog.info(\"存储数据库成功！\");\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void doAfterAllAnalysed(AnalysisContext context) {\r\n\t\tsaveData();\r\n\t\tlog.info(\"所有数据解析完成！\");\r\n\t}\r\n\r\n       public static <T> void read(InputStream input, Class<?> modelClass, AnalysisEventListener<T> listener) {\r\n\t\tExcelReader excelReader = EasyExcel.read(input, modelClass, listener).build();\r\n\t\texcelReader.read();\r\n\t\t/*\r\n\t\t * int size = excelReader.excelExecutor().sheetList().size(); for (int i = 0; i\r\n\t\t * < size; i++) { ReadSheet readSheet =\r\n\t\t * excelReader.excelExecutor().sheetList().get(i); excelReader.read(readSheet);\r\n\t\t * }\r\n\t\t */\r\n\t\texcelReader.finish();\r\n\t}\r\n```\r\n**日志提示**\r\n 1条数据，开始存储数据库！\r\n 0:{\"userName\":\"gcme\",\"userPhone\":\"18368873354\",\"userRealName\":\"顾\",\"userSexValue\":\"男\",\"userUnitName\":\"test\"}\r\n 所有数据解析完成！\r\n2条数据，开始存储数据库！\r\n 0:{\"userName\":\"gcme\",\"userPhone\":\"18368873354\",\"userRealName\":\"顾\",\"userSexValue\":\"男\",\"userUnitName\":\"test\"}\r\n1:{\"userName\":\"gcme\",\"userPhone\":\"18365574567\",\"userRealName\":\"写\",\"userSexValue\":\"女\",\"userUnitName\":\"test\"}\r\n存储数据库成功！\r\n所有数据解析完成！\r\n3条数据，开始存储数据库！\r\n 0：{\"userName\":\"gcme\",\"userPhone\":\"18368873354\",\"userRealName\":\"顾\",\"userSexValue\":\"男\",\"userUnitName\":\"test\"}\r\n 1:{\"userName\":\"gcme\",\"userPhone\":\"18365574567\",\"userRealName\":\"写\",\"userSexValue\":\"女\",\"userUnitName\":\"test\"}\r\n2:{\"userName\":\"gcme\",\"userPhone\":\"18365574567\",\"userRealName\":\"做\",\"userSexValue\":\"女\",\"userUnitName\":\"test\"}\r\n 存储数据库成功！\r\n所有数据解析完成！\r\n**问题描述**\r\nexcel有三个sheet，每个sheet一条数据。读取sheet时就调用了doAfterAllAnalysed了吗？saveData调用了3次。请问有直接所有sheet读取完了再操作业务的方法吗？",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/589/comments",
    "author": "waitting49",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-09-18T10:29:30Z",
        "body": "`doAfterAllAnalysed`在整个sheet 读取完毕后会调用。"
      },
      {
        "user": "Fuxy-pg",
        "created_at": "2020-05-25T02:50:47Z",
        "body": "请问，如果想要在读取完所有sheet之后，在调用doAfterAllAnalysed方法，该怎么配置呢？"
      }
    ]
  },
  {
    "number": 588,
    "title": "Converter<xxx>实现类中的convertToJavaData()方法中怎么拿到查数据库的信息？",
    "created_at": "2019-09-17T02:01:00Z",
    "closed_at": "2019-09-18T10:49:12Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/588",
    "body": "@ExcelProperty(value = \"父级域\", converter = CustomLongConverter.class)，CustomLongConverter类中要注入service bean去查数据库信息，重写的convertToJavaData()的方法要用到查数据库的信息，这个要怎么弄呢？或者有其他解决方法吗？",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/588/comments",
    "author": "wsm1217395196",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-09-18T10:49:12Z",
        "body": "CustomLongConverter 可以定义一个静态变量。然后 在启动完成的时候 初始化这个值，后续new 出来的对象都会有和这个 参数。也可以用构造方法去处理，但是不能写在指定字段上面，需要注册这个转换器，会对所有的long字段有影响。"
      }
    ]
  },
  {
    "number": 585,
    "title": "easyexcel 支持导出公式吗？",
    "created_at": "2019-09-16T03:00:54Z",
    "closed_at": "2019-09-16T10:42:05Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/585",
    "body": "**异常代码**\r\n```java\r\n   这里写你的代码\r\n```\r\n**异常提示**\r\n请提供完整的异常提示,记住是全部异常！\r\n**建议描述**\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/585/comments",
    "author": "bme6",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-09-16T10:42:05Z",
        "body": "用cellData作为成员变量"
      }
    ]
  },
  {
    "number": 584,
    "title": "怎么设置列为下拉框并设置下拉框数据呢",
    "created_at": "2019-09-16T02:16:54Z",
    "closed_at": "2019-09-16T10:41:37Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/584",
    "body": "**异常代码**\r\n```java\r\n   这里写你的代码\r\n```\r\n**异常提示**\r\n请提供完整的异常提示,记住是全部异常！\r\n**建议描述**\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/584/comments",
    "author": "lianghongshuai",
    "comments": [
      {
        "user": "majianguo202",
        "created_at": "2019-09-16T05:43:37Z",
        "body": "> **异常代码**\r\n> \r\n> ```java\r\n>    这里写你的代码\r\n> ```\r\n> \r\n> **异常提示**\r\n> 请提供完整的异常提示,记住是全部异常！\r\n> **建议描述**\r\n\r\n\r\n下载最新代码，查找这个关键字CustomSheetWriteHandler, 这个实例就是增加列下拉框的"
      },
      {
        "user": "Zeng-Qe",
        "created_at": "2021-08-19T06:36:26Z",
        "body": "大约第一次体验到git的好用"
      }
    ]
  },
  {
    "number": 581,
    "title": "解析 xlsx时 ，AnalysisEventListener类的 invoke（）方法中 空行空格过滤掉了吗？",
    "created_at": "2019-09-12T08:09:10Z",
    "closed_at": "2019-10-08T12:29:57Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/581",
    "body": "\r\npublic class ExcelListener extends AnalysisEventListener  {\r\n\r\n public void invoke(Object object, AnalysisContext context) {\r\n        System.out.println(\"当前行：\" + context.getCurrentRowNum());\r\n        System.out.println(object);\r\n        // 发现ojbect里 本来我一行有40列， 其中只有24列有数据 ， 但是ojbect 集合里size只有24,怎样才能实现把空行也当作object的一列？ 需求：ojbect  size=40\r\n    }\r\n\r\n｝",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/581/comments",
    "author": "likunping77",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-09-12T10:37:24Z",
        "body": "这个版本不支持 下个版本已经在规划这个问题"
      },
      {
        "user": "jiangdashuai",
        "created_at": "2019-09-20T01:42:27Z",
        "body": "easy excel中有没有check空行的方法，就是一行数据都是空的字符串，我导入时他也算一条数据，我就没法计算导入了多少条，现在我想在读的时候就不读进来，请问一下有这个check吗？"
      },
      {
        "user": "tuean",
        "created_at": "2019-10-05T16:30:49Z",
        "body": "+1"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2019-10-08T12:29:57Z",
        "body": "轻尝试升级到2.0.5 然后设置 ignoreEmptyRow 为false ，如果还有问题 请提供 源代码和excel"
      }
    ]
  },
  {
    "number": 580,
    "title": "请问现在写入EXCEL的话，还支持写入多个sheet页吗？",
    "created_at": "2019-09-12T07:32:59Z",
    "closed_at": "2019-09-12T10:36:38Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/580",
    "body": "",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/580/comments",
    "author": "lgrknight",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-09-12T10:36:38Z",
        "body": "请参照demo书写。支持的。"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2019-09-12T10:36:57Z",
        "body": "创建多个`writeSheet`即可"
      },
      {
        "user": "lgrknight",
        "created_at": "2019-09-16T03:40:45Z",
        "body": "> 创建多个`writeSheet`即可\r\n\r\n`ExcelWriter excelWriter = EasyExcelFactory.write(fileName, IpranNetWorkElementModel.class).build();\r\n        WriteSheet deviceSheet = EasyExcelFactory.writerSheet(0,\"网元异常清单\").build();\r\n        excelWriter.write(ipranDeviceList, deviceSheet);\r\n        excelWriter.finish();\r\n\t\tExcelWriter shelfExcelWriter = EasyExcelFactory.write(fileName, IpranShelfModel.class).build();\r\n        WriteSheet shelfSheet = EasyExcelFactory.writerSheet(1,\"机框异常清单\").build();\r\n        shelfExcelWriter.write(ipranShelfList, shelfSheet);\r\n        shelfExcelWriter.finish();\r\n\t\tExcelWriter boardExcelWriter = EasyExcelFactory.write(fileName, IpranBoardModel.class).build();\r\n\t\tWriteSheet boardSheet = EasyExcelFactory.writerSheet(2,\"板卡异常清单\").build();\r\n\t\tboardExcelWriter.write(ipranBoardList, boardSheet);\r\n\t\tboardExcelWriter.finish();`\r\n\r\n这样写的有问题不？这样只有一个sheet页生成哦"
      }
    ]
  },
  {
    "number": 578,
    "title": "多行表头 读取的时候，不使用index,读取每行的数据为空",
    "created_at": "2019-09-12T05:14:54Z",
    "closed_at": "2019-09-18T10:31:57Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/578",
    "body": "**异常代码**\r\n```java\r\n   LeadListener listener = new LeadListener(this.excelImportHandler, currentMemberId);\r\n    EasyExcel.read(inputStream, LeadExcelDTO.class, listener)\r\n        .sheet()\r\n        .headRowNumber(3)\r\n        .doRead();\r\n\r\nlistener:\r\n\r\n @Override\r\n  public void invoke(LeadExcelDTO row, AnalysisContext context) {\r\n//这里获取到的数据为空\r\n    log.info(\"解析到数据：{}\", GsonUtil.toJson(row));\r\n}\r\n\r\n实体:\r\npublic class LeadExcelDTO extends CampaignLeadDTO {\r\n\r\n  @ExcelProperty(value = {ExcelConstant.LEAD_COMMENT, \"Leads信息\", \"活动名称\"})\r\n  private String campaignDisplay;\r\n}\r\n```\r\n**猜测问题原因**\r\ncom.alibaba.excel.read.metadata.holder.AbstractReadHolder类中\r\n```java\r\nprivate void buildHead(AnalysisContext analysisContext, Map<Integer, CellData> cellDataMap) {\r\n        if (!HeadKindEnum.CLASS.equals(analysisContext.currentReadHolder().excelReadHeadProperty().getHeadKind())) {\r\n            return;\r\n        }\r\n        Map<Integer, String> dataMap = buildStringMap(cellDataMap, analysisContext.currentReadHolder());\r\n        ExcelReadHeadProperty excelHeadPropertyData = analysisContext.readSheetHolder().excelReadHeadProperty();\r\n        Map<Integer, Head> headMapData = excelHeadPropertyData.getHeadMap();\r\n        Map<Integer, ExcelContentProperty> contentPropertyMapData = excelHeadPropertyData.getContentPropertyMap();\r\n        Map<Integer, Head> tmpHeadMap = new HashMap<Integer, Head>(headMapData.size() * 4 / 3 + 1);\r\n        Map<Integer, ExcelContentProperty> tmpContentPropertyMap =\r\n            new HashMap<Integer, ExcelContentProperty>(contentPropertyMapData.size() * 4 / 3 + 1);\r\n        for (Map.Entry<Integer, Head> entry : headMapData.entrySet()) {\r\n            Head headData = entry.getValue();\r\n            if (headData.getForceIndex() || !headData.getForceName()) {\r\n                tmpHeadMap.put(entry.getKey(), headData);\r\n                tmpContentPropertyMap.put(entry.getKey(), contentPropertyMapData.get(entry.getKey()));\r\n                continue;\r\n            }\r\n//这里每次取得是第一行的表头内容\r\n            String headName = headData.getHeadNameList().get(0);\r\n\r\n            for (Map.Entry<Integer, String> stringEntry : dataMap.entrySet()) {\r\n                String headString = stringEntry.getValue();\r\n                Integer stringKey = stringEntry.getKey();\r\n                if (StringUtils.isEmpty(headString)) {\r\n                    continue;\r\n                }\r\n                if (analysisContext.currentReadHolder().globalConfiguration().getAutoTrim()) {\r\n                    headString = headString.trim();\r\n                }\r\n//这里比较的时候是把上面的第一行的内容跟最后一行比较  因此一直不相等 tmpHeadMap这个Map最后就跟是空的\r\n                if (headName.equals(headString)) {\r\n                    headData.setColumnIndex(stringKey);\r\n                    tmpHeadMap.put(stringKey, headData);\r\n                    tmpContentPropertyMap.put(stringKey, contentPropertyMapData.get(entry.getKey()));\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        excelHeadPropertyData.setHeadMap(tmpHeadMap);\r\n        excelHeadPropertyData.setContentPropertyMap(tmpContentPropertyMap);\r\n    }\r\n```\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/578/comments",
    "author": "wy434776647",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-09-12T10:35:25Z",
        "body": "按照你的写法 请确保 excel的头 有 `活动名称`，会根据最后一个头来匹配投数据"
      }
    ]
  },
  {
    "number": 577,
    "title": "请问如何跳出处理类呢？",
    "created_at": "2019-09-12T04:38:26Z",
    "closed_at": "2019-09-12T10:33:57Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/577",
    "body": "**异常代码**\r\n```java\r\n/**\r\n * 自定义账单导入，映射标题头的监听器\r\n */\r\npublic class ZdyBillTitleHeadListener extends AnalysisEventListener {\r\n\r\n    @Override\r\n    public void invoke(Object object, AnalysisContext context) {\r\n        //比如说 我有一个1w条的excel，想只处理前10条，就跳出这个监听。\r\n    }\r\n\r\n    @Override\r\n    public void doAfterAllAnalysed(AnalysisContext context) {\r\n\r\n    }\r\n}\r\n```\r\n**异常提示**\r\n我现在的做法是 当是第十行的时候就return，但是我感觉效率不好，因为还是要进这个方法1w次。\r\n**建议描述**\r\n如何做才能直接跳出呢？？？？？",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/577/comments",
    "author": "coder-lzh",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-09-12T10:33:57Z",
        "body": "实现`hasNext` 方法"
      },
      {
        "user": "coder-lzh",
        "created_at": "2019-09-12T11:40:09Z",
        "body": "> 实现`hasNext` 方法\r\n\r\n您好，请问实现那个类的hasNext方法？"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2019-09-12T12:34:13Z",
        "body": "listener"
      },
      {
        "user": "coder-lzh",
        "created_at": "2019-09-12T13:20:21Z",
        "body": "> listener\r\n\r\n这个类没有这个方法啊？\r\n```\r\npublic abstract class AnalysisEventListener<T> {\r\n    public AnalysisEventListener() {\r\n    }\r\n\r\n    public abstract void invoke(T var1, AnalysisContext var2);\r\n\r\n    public abstract void doAfterAllAnalysed(AnalysisContext var1);\r\n}\r\n```\r\n我的版本是\r\n```\r\n<dependency>\r\n            <groupId>com.alibaba</groupId>\r\n            <artifactId>easyexcel</artifactId>\r\n            <version>1.1.2-beta5</version>\r\n </dependency>\r\n```\r\n\r\n是因为版本问题么？"
      },
      {
        "user": "whpat126",
        "created_at": "2019-09-12T13:25:55Z",
        "body": "> \r\n> \r\n> > listener\r\n> \r\n> 这个类没有这个方法啊？\r\n> \r\n> ```\r\n> public abstract class AnalysisEventListener<T> {\r\n>     public AnalysisEventListener() {\r\n>     }\r\n> \r\n>     public abstract void invoke(T var1, AnalysisContext var2);\r\n> \r\n>     public abstract void doAfterAllAnalysed(AnalysisContext var1);\r\n> }\r\n> ```\r\n> \r\n> 我的版本是\r\n> \r\n> ```\r\n> <dependency>\r\n>             <groupId>com.alibaba</groupId>\r\n>             <artifactId>easyexcel</artifactId>\r\n>             <version>1.1.2-beta5</version>\r\n>  </dependency>\r\n> ```\r\n> \r\n> 是因为版本问题么？\r\n\r\n用最新的2.0.0-beta6"
      },
      {
        "user": "coder-lzh",
        "created_at": "2019-09-12T13:40:17Z",
        "body": "> > > listener\r\n> > \r\n> > \r\n> > 这个类没有这个方法啊？\r\n> > ```\r\n> > public abstract class AnalysisEventListener<T> {\r\n> >     public AnalysisEventListener() {\r\n> >     }\r\n> > \r\n> >     public abstract void invoke(T var1, AnalysisContext var2);\r\n> > \r\n> >     public abstract void doAfterAllAnalysed(AnalysisContext var1);\r\n> > }\r\n> > ```\r\n> > \r\n> > \r\n> > 我的版本是\r\n> > ```\r\n> > <dependency>\r\n> >             <groupId>com.alibaba</groupId>\r\n> >             <artifactId>easyexcel</artifactId>\r\n> >             <version>1.1.2-beta5</version>\r\n> >  </dependency>\r\n> > ```\r\n> > \r\n> > \r\n> > 是因为版本问题么？\r\n> \r\n> 用最新的2.0.0-beta6\r\n\r\n非常感谢，确实2.0.0-beta6新版有这个方法，但是引入之后发现改动实在太大了，以前的方法都不能用了，而且看新版的demo，连如何获取sheet数量的方法都没找到，给的例子中读多sheet只是写死的0，1，2。太不好搞了，如果不用新版的，如何才能跳出监听类的方法呢？？？"
      },
      {
        "user": "whpat126",
        "created_at": "2019-09-12T13:52:15Z",
        "body": "可以参考demo，改动其实很小。sheet是可选的，都有相应方法。建议用新版。"
      }
    ]
  },
  {
    "number": 576,
    "title": "读取任意Excel(没有对像映射)整数，读取后自动转为浮点数，能否不转为浮点数?",
    "created_at": "2019-09-12T02:21:52Z",
    "closed_at": "2019-09-12T10:33:30Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/576",
    "body": "**源码**\r\ncase NUMBER:\r\n            case EMPTY:\r\n                currentCellData.setType(CellDataTypeEnum.NUMBER);\r\n                if (currentCellData.getDoubleValue() == null) {\r\n                    currentCellData.setDoubleValue(Double.valueOf(currentCellValue));\r\n                }\r\n                break;\r\n从源码DefaultCellHandler.appendCurrentCellValue()方法看到，并且使用后发现，excel中输入1，读取后会转为double类型1.0\r\n\r\n**问题**\r\n有没有办法不把整数转为浮点数?",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/576/comments",
    "author": "yxlaisj",
    "comments": [
      {
        "user": "yxlaisj",
        "created_at": "2019-09-12T03:05:14Z",
        "body": "简而言之，excel显示的是什么样子的，读出来就是什么样子的?"
      },
      {
        "user": "779446480",
        "created_at": "2019-09-12T06:18:46Z",
        "body": "我也遇到这个问题了，而且长一点的数字读出来会变成科学计数法，比如手机号码，我目前做法是每一条数据都校验一下是否是.0结尾的浮点数或科学计数法 然后手动转的类型，希望作者可以帮助解决这个问题"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2019-09-12T10:33:30Z",
        "body": "如果用class  加上`@NumberFormat(\"#\")` 注解。下个版本会解决这个问题。已经有方案了。"
      }
    ]
  },
  {
    "number": 574,
    "title": "请问下，为什么读完文件后，文件的修改日期会变？",
    "created_at": "2019-09-12T01:37:21Z",
    "closed_at": "2019-10-08T12:32:46Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/574",
    "body": "**异常代码**\r\n使用的读代码如下：\r\n```java\r\n   EasyExcel.read(filePath, listener).sheet(0).doRead()\r\n```\r\n**异常提示**\r\n使用完全正常，文件大小的字节数也完全一样，就是很好奇，为什么明明是读文件，但是文件的修改时间会变；此处修改时间指的是  windows 文件夹中 修改日期  这一列\r\n**建议描述**\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/574/comments",
    "author": "BradyWZH",
    "comments": [
      {
        "user": "jilliss",
        "created_at": "2019-09-27T06:05:26Z",
        "body": "我测试了下  并没有发现这个问题呀，不管是xls还是xlsx 格式的文件\r\nPS. 我是直接用的 测试代码 \r\n`com.alibaba.easyexcel.test.demo.read.ReadTest `\r\n### 环境\r\n`Windows 10`\r\n### JDK 版本\r\n`openjdk-7`\r\n\r\n\r\n"
      },
      {
        "user": "sjmingdna",
        "created_at": "2019-09-27T06:08:37Z",
        "body": "谢谢您的回答，后来发现是Excel的问题，Excel会自动转换，在前面加一个英文的单引号就好了\r\n\r\n\r\n\r\n\r\n------------------ 原始邮件 ------------------\r\n发件人: \"zared\"<notifications@github.com>;\r\n发送时间: 2019年9月27日(星期五) 下午2:05\r\n收件人: \"alibaba/easyexcel\"<easyexcel@noreply.github.com>;\r\n抄送: \"Subscribed\"<subscribed@noreply.github.com>;\r\n主题: Re: [alibaba/easyexcel] 请问下，为什么读完文件后，文件的修改日期会变？ (#574)\r\n\r\n\r\n\r\n\r\n我测试了下  并没有发现这个问题呀，不管是xls还是xlsx 格式的文件\r\n PS. 我是直接用的 测试代码\r\n com.alibaba.easyexcel.test.demo.read.ReadTest \r\n \r\n环境\r\n \r\nWindows 10\r\n \r\nJDK 版本\r\n \r\nopenjdk-7\r\n \r\n—\r\nYou are receiving this because you are subscribed to this thread.\r\nReply to this email directly, view it on GitHub, or mute the thread."
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2019-10-08T12:32:46Z",
        "body": "这个是个Bug 已经在 2.0.5里面修复，非常感谢您的意见。"
      }
    ]
  },
  {
    "number": 565,
    "title": "org.apache.poi.ss.usermodel.Workbook.close()V",
    "created_at": "2019-09-09T11:03:28Z",
    "closed_at": "2019-09-10T05:50:43Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/565",
    "body": "**异常代码**\r\n执行这一段代码就报错 老版本writer.write(page.getList(), sheet); \r\n在老版本执行可以的，换成你新版本写法还是一样的报错\r\n```java\r\n   这里写你的代码\r\nServletOutputStream out = response.getOutputStream(); response.setContentType(\"multipart/form-data\"); response.setCharacterEncoding(\"utf-8\"); response.setHeader(\"Content-disposition\", \"attachment;filename=\" + fileName + \".xlsx\"); ExcelWriter writer = EasyExcelFactory.getWriter(out); // 设置SHEET Sheet sheet = new Sheet(1, 1, AgentCostmanage.class, \"表1\", null); writer.write(page.getList(), sheet); writer.finish(); out.flush();\r\n```\r\n**异常提示**\r\nCaused by: java.lang.NoSuchMethodError: org.apache.poi.ss.usermodel.Workbook.close()V\r\n\tat com.alibaba.excel.context.WriteContextImpl.finish(WriteContextImpl.java:350)\r\n请提供完整的异常提示,记住是全部异常！\r\n**建议描述**\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/565/comments",
    "author": "hlzha",
    "comments": [
      {
        "user": "hlzha",
        "created_at": "2019-09-09T11:07:39Z",
        "body": "<dependency> \t<groupId>com.alibaba</groupId> \t<artifactId>easyexcel</artifactId> \t<version>2.0.0-beta5</version> </dependency>\r\n如果和poi 3.17版本执行是可以的\r\n\r\n换成poi 4.0.1就报那个错\r\n\r\n检查了项目没有发现poi版本冲突的问题"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2019-09-09T12:24:59Z",
        "body": "这个应该是版本冲突的问题。请检查下 Workbook 有没有colose方法"
      },
      {
        "user": "hlzha",
        "created_at": "2019-09-09T13:02:07Z",
        "body": "是的，接口有这个方法，下面的类也有，很奇怪，用3.17就可以，我就纳闷了"
      }
    ]
  },
  {
    "number": 562,
    "title": "请问 不使用实体类注解的方式，如何给表头及正文单元格设置样式",
    "created_at": "2019-09-09T02:13:01Z",
    "closed_at": "2019-09-09T09:20:55Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/562",
    "body": "最新的2.0.0-beta5版本将原来的`Sheet`类删除了，它的设置单元格格式方法`setTableStyle`及setColumnWidthMap方法也不能用。\r\n所以，我想问对于非实体类对象的导出，如何设置单元格格式？",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/562/comments",
    "author": "Planeswalker23",
    "comments": [
      {
        "user": "Ryoui",
        "created_at": "2019-09-09T03:55:41Z",
        "body": "请问下，我数据中的值是0，1怎么转换成正常，禁用呢？"
      },
      {
        "user": "whpat126",
        "created_at": "2019-09-09T04:16:29Z",
        "body": "> \r\n> \r\n> 请问下，我数据中的值是0，1怎么转换成正常，禁用呢？\r\n\r\n应该是需要自己做实体类的数据转换"
      },
      {
        "user": "Ryoui",
        "created_at": "2019-09-09T04:40:03Z",
        "body": "@whpat126 感谢，自定义了一个转换器，在其中的写方法中处理的。"
      },
      {
        "user": "Planeswalker23",
        "created_at": "2019-09-09T09:20:55Z",
        "body": "已解决\r\n```\r\n    /**\r\n     * 创建默认表头及内容格式\r\n     * @return HorizontalCellStyleStrategy\r\n     */\r\n    private HorizontalCellStyleStrategy createDefaultStyle() {\r\n        // 头的策略\r\n        WriteCellStyle headWriteCellStyle = new WriteCellStyle();\r\n        // 背景设置为白色\r\n        headWriteCellStyle.setFillForegroundColor(IndexedColors.WHITE.getIndex());\r\n        // 表头的字体属性设置\r\n        WriteFont headFont = new WriteFont();\r\n        // 字体及大小\r\n        headFont.setFontName(DEFAULT_FONT_ARIAL);\r\n        headFont.setFontHeightInPoints((short)10);\r\n        // 是否加粗\r\n        headFont.setBold(false);\r\n        headWriteCellStyle.setWriteFont(headFont);\r\n        // 内容的策略\r\n        WriteCellStyle contentWriteCellStyle = new WriteCellStyle();\r\n        WriteFont contentFont = new WriteFont();\r\n        contentFont.setFontName(DEFAULT_FONT_ARIAL);\r\n        contentFont.setFontHeightInPoints((short)10);\r\n        contentWriteCellStyle.setWriteFont(contentFont);\r\n        // 这个策略是 头是头的样式 内容是内容的样式 其他的策略可以自己实现\r\n        return new HorizontalCellStyleStrategy(headWriteCellStyle, contentWriteCellStyle);\r\n    }\r\n\r\n    /**\r\n     * 创建默认单元格样式，行高，列高\r\n     * @return\r\n     */\r\n    private List<WriteHandler> getCustomWriteHandlerList() {\r\n        List<WriteHandler> list = Lists.newLinkedList();\r\n        // 默认单元格样式\r\n        list.add(this.createDefaultStyle());\r\n        // 默认行宽18\r\n        list.add(new SimpleColumnWidthStyleStrategy(18));\r\n        // 默认列高18\r\n        list.add(new SimpleRowHeightStyleStrategy((short)18, (short)18));\r\n        return list;\r\n    }\r\n\r\n    /**\r\n     * 使用easy-excel导出文件\r\n     * @param path 本次导出路径\r\n     * @param fileName 文件名\r\n     * @param columnIds 导出表头id\r\n     * @param columnsName 导出表头name\r\n     * @param columnRows 表头的行数\r\n     * @param resultList 导出结果集数据\r\n     * @param clazz 结果集映射实体类，为null的时候是结果集是map\r\n     */\r\n    public void execute(String path, String fileName, List<String> columnIds, List<String> columnsName, Integer columnRows, List resultList, Class clazz) {\r\n        ……\r\n        // 创建一个excel文件\r\n        ExcelWriter excelWriter = EasyExcel.write(wholePath.toString()).build();\r\n        WriteSheet writeSheet = EasyExcel.writerSheet().build();\r\n        writeSheet.setHead(this.createDefaultHead(columnsName, columnRows));\r\n        // 设置单元格样式及行高列宽\r\n        writeSheet.setCustomWriteHandlerList(this.getCustomWriteHandlerList());\r\n        // 执行导出方法\r\n        excelWriter.write(data, writeSheet);\r\n\r\n        // 千万别忘记finish 会帮忙关闭流\r\n        excelWriter.finish();\r\n    }\r\n```"
      }
    ]
  },
  {
    "number": 560,
    "title": "ExcelGenerateException Can not close IO，是由于数据过大造成的么，我一次导出10万数据，还是说也有65536的限制",
    "created_at": "2019-09-06T13:00:12Z",
    "closed_at": "2019-09-08T10:39:04Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/560",
    "body": "**异常代码**\r\nEasyExcel.write(response.getOutputStream(), MonthDetailData.class).sheet(fileName).doWrite(dataList);\r\n**异常信息**\r\ncom.alibaba.excel.exception.ExcelGenerateException: Can not close IO\r\n\tat com.alibaba.excel.context.WriteContextImpl.throwCanNotCloseIo(WriteContextImpl.java:390) ~[easyexcel-2.0.0-beta3.jar:na]\r\n\tat com.alibaba.excel.context.WriteContextImpl.finish(WriteContextImpl.java:352) ~[easyexcel-2.0.0-beta3.jar:na]\r\n\tat com.alibaba.excel.write.ExcelBuilderImpl.finish(ExcelBuilderImpl.java:105) ~[easyexcel-2.0.0-beta3.jar:na]\r\n\tat com.alibaba.excel.write.ExcelBuilderImpl.addContent(ExcelBuilderImpl.java:97) ~[easyexcel-2.0.0-beta3.jar:na]\r\n\tat com.alibaba.excel.ExcelWriter.write(ExcelWriter.java:154) ~[easyexcel-2.0.0-beta3.jar:na]\r\n\tat com.alibaba.excel.ExcelWriter.write(ExcelWriter.java:139) ~[easyexcel-2.0.0-beta3.jar:na]\r\n\tat com.alibaba.excel.write.builder.ExcelWriterSheetBuilder.doWrite(ExcelWriterSheetBuilder.java:134) ~[easyexcel-2.0.0-beta3.jar:na]\r\n\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/560/comments",
    "author": "HuAngchping",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-09-06T13:06:29Z",
        "body": "异常 贴全\r\n"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2019-09-08T10:39:04Z",
        "body": "您好 是否已经解决了问题？如果没解决 请重新打开问题。并提供完整异常。"
      },
      {
        "user": "569258yin",
        "created_at": "2020-06-17T04:41:31Z",
        "body": "{\r\n  \"className\": \"com.alibaba.excel.exception.ExcelGenerateException\",\r\n  \"message\": \"Can not close IO.\",\r\n  \"cause\": {\r\n    \"localizedMessage\": \"java.io.IOException: Broken pipe\",\r\n    \"@type\": \"org.apache.catalina.connector.ClientAbortException\",\r\n    \"message\": \"java.io.IOException: Broken pipe\",\r\n    \"stackTrace\": [\r\n      {\r\n        \"methodName\": \"realWriteBytes\",\r\n        \"lineNumber\": 356,\r\n        \"fileName\": \"OutputBuffer.java\",\r\n        \"nativeMethod\": false,\r\n        \"className\": \"org.apache.catalina.connector.OutputBuffer\"\r\n      },\r\n      {\r\n        \"methodName\": \"flushByteBuffer\",\r\n        \"lineNumber\": 825,\r\n        \"fileName\": \"OutputBuffer.java\",\r\n        \"nativeMethod\": false,\r\n        \"className\": \"org.apache.catalina.connector.OutputBuffer\"\r\n      },\r\n      {\r\n        \"methodName\": \"doFlush\",\r\n        \"lineNumber\": 310,\r\n        \"fileName\": \"OutputBuffer.java\",\r\n        \"nativeMethod\": false,\r\n        \"className\": \"org.apache.catalina.connector.OutputBuffer\"\r\n      },\r\n      {\r\n        \"methodName\": \"close\",\r\n        \"lineNumber\": 263,\r\n        \"fileName\": \"OutputBuffer.java\",\r\n        \"nativeMethod\": false,\r\n        \"className\": \"org.apache.catalina.connector.OutputBuffer\"\r\n      },\r\n      {\r\n        \"methodName\": \"close\",\r\n        \"lineNumber\": 157,\r\n        \"fileName\": \"CoyoteOutputStream.java\",\r\n        \"nativeMethod\": false,\r\n        \"className\": \"org.apache.catalina.connector.CoyoteOutputStream\"\r\n      },\r\n      {\r\n        \"methodName\": \"finish\",\r\n        \"lineNumber\": 306,\r\n        \"fileName\": \"WriteContextImpl.java\",\r\n        \"nativeMethod\": false,\r\n        \"className\": \"com.alibaba.excel.context.WriteContextImpl\"\r\n      },\r\n      {\r\n        \"methodName\": \"finish\",\r\n        \"lineNumber\": 101,\r\n        \"fileName\": \"ExcelBuilderImpl.java\",\r\n        \"nativeMethod\": false,\r\n        \"className\": \"com.alibaba.excel.write.ExcelBuilderImpl\"\r\n      },\r\n      {\r\n        \"methodName\": \"finish\",\r\n        \"lineNumber\": 328,\r\n        \"fileName\": \"ExcelWriter.java\",\r\n        \"nativeMethod\": false,\r\n        \"className\": \"com.alibaba.excel.ExcelWriter\"\r\n      },\r\n      {\r\n        \"methodName\": \"doWrite\",\r\n        \"lineNumber\": 191,\r\n        \"fileName\": \"ExcelWriterSheetBuilder.java\",\r\n        \"nativeMethod\": false,\r\n        \"className\": \"com.alibaba.excel.write.builder.ExcelWriterSheetBuilder\"\r\n      },\r\n      遇到相同的问题，有时候可以，有时候会报错，数据有3万条左右，excel大小5M左右"
      }
    ]
  },
  {
    "number": 558,
    "title": "请问有根据动态表头加模板实现写入excel的吗",
    "created_at": "2019-09-06T08:49:16Z",
    "closed_at": "2019-09-06T12:12:13Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/558",
    "body": "\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/558/comments",
    "author": "xiaozichen",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-09-06T12:12:13Z",
        "body": "用map 去接收数据，然后不传入head即可"
      }
    ]
  },
  {
    "number": 557,
    "title": "图片url如何嵌入到excel里展示图片",
    "created_at": "2019-09-06T08:13:40Z",
    "closed_at": "2019-09-06T12:11:43Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/557",
    "body": "**异常代码**\r\n```java\r\n   这里写你的代码\r\n```\r\n**异常提示**\r\n请提供完整的异常提示\r\n**建议描述**\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/557/comments",
    "author": "wukaishan6",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-09-06T12:11:43Z",
        "body": "请阅读手册"
      }
    ]
  },
  {
    "number": 555,
    "title": "请问，poi3.9适配easyexcel版本是哪一个",
    "created_at": "2019-09-06T07:14:41Z",
    "closed_at": "2019-09-06T12:10:50Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/555",
    "body": "**异常代码**\r\n```java\r\n   这里写你的代码\r\n```\r\n**异常提示**\r\n请提供完整的异常提示\r\n**建议描述**\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/555/comments",
    "author": "tys87198312",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-09-06T12:10:50Z",
        "body": "请使用最新版"
      }
    ]
  },
  {
    "number": 552,
    "title": "如果Excel中sheet的个数和名字都是不固定的，需要动态处理，这要怎么做？",
    "created_at": "2019-09-05T15:59:15Z",
    "closed_at": "2019-09-05T16:03:51Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/552",
    "body": "**建议描述**\r\n建议给一个可以获得Sheet集合的API",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/552/comments",
    "author": "Bamboo898",
    "comments": [
      {
        "user": "binlaniua",
        "created_at": "2022-10-11T10:52:44Z",
        "body": "解决了么，怎么关闭了"
      },
      {
        "user": "binlaniua",
        "created_at": "2022-10-11T11:07:27Z",
        "body": "> 解决了么，怎么关闭了\r\n\r\n使用doReadAll()可以解决\r\n在invokeHeadMap的回调里面判断是否进入了新的sheet数据"
      }
    ]
  },
  {
    "number": 548,
    "title": "请问有没有提供向已有的文件中追加一列的方法吗",
    "created_at": "2019-09-05T04:02:45Z",
    "closed_at": "2019-09-05T12:46:07Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/548",
    "body": "",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/548/comments",
    "author": "chen1147344634",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-09-05T12:46:07Z",
        "body": "看 手册 用模板写入"
      },
      {
        "user": "loveincode",
        "created_at": "2020-11-17T09:54:00Z",
        "body": "@zhuangjiaju 没有模板，在原有文件（未知的excel文件）最后一列追加一列，这个目前不支持吧"
      }
    ]
  },
  {
    "number": 543,
    "title": "无法通过获取sheet页的方式，得到指定sheet页下的数据",
    "created_at": "2019-09-04T07:09:49Z",
    "closed_at": "2019-09-04T12:10:27Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/543",
    "body": "**触发场景描述**\r\n版本：<dependency>\r\n            <groupId>com.alibaba</groupId>\r\n            <artifactId>easyexcel</artifactId>\r\n            <version>2.0.0-beta1</version>\r\n        </dependency>\r\n**触发Bug的代码**\r\n按照demo里的代码可以获取指定sheet下的数据\r\n List<Object> datas = EasyExcel.read(fileName).sheet(0).doReadSync(); // 可以获取指定sheet下的数据\r\n下面这种获取不到\r\n       ExcelReader excelReader =  EasyExcel.read(fileName).build();\r\nList<Sheets> sheets = excelReader.getSheets();\r\n// sheets为空\r\n        Map<String,List<Map<Integer,Object>>> datas = new LinkedHashMap();\r\n        for(Sheet sheet:sheets){\r\n            List<Object> sheetData = EasyExcel.read(fileName).sheet(sheet.getSheetName()).doReadSync();\r\n        }\r\n        ReadSheet readSheet1 = EasyExcel.readSheet(0).build();\r\n        ReadSheet readSheet2 = EasyExcel.readSheet(1).build();\r\n        excelReader.read(readSheet1);\r\n        excelReader.read(readSheet2);\r\n```java\r\n   这里写代码\r\n```\r\n**提示的异常或者没有达到的效果**\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/543/comments",
    "author": "ututuut",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-09-04T12:10:27Z",
        "body": "请参照文档 书写。你需要加入监听器"
      }
    ]
  },
  {
    "number": 542,
    "title": "2.0.0-bate3 读取字段A的值，赋值给了B字段",
    "created_at": "2019-09-04T04:02:39Z",
    "closed_at": "2019-09-04T12:08:00Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/542",
    "body": "**对象BaseStudentData**\r\n```java\r\n@ExcelProperty(\"出生日期\")\r\n@DateTimeFormat(\"yyyy-MM-dd\")\r\nprivate Date dob;\r\n\r\nprivate String birthday;\r\n\r\n@ExcelProperty(\"籍贯\")\r\n@NotBlank(message = \"籍贯不能为空\")\r\nprivate String nativePlace;\r\n```\r\n**读代码**\r\n```java\r\nExcelReader excelReader = EasyExcel.read(inputStream, BaseStudentData.class, studentExcelListener).build();\r\nList<ReadSheet> liSheets = excelReader.excelExecutor().sheetList();\r\nfor (ReadSheet readSheet : liSheets) {\r\n    excelReader.read(readSheet);\r\n}\r\n// 这里千万别忘记关闭，读的时候会创建临时文件，到时磁盘会崩的\r\nexcelReader.finish();\r\n```\r\n**监听器**\r\n```java\r\n@Override\r\npublic void invoke(BaseStudentData studentData, AnalysisContext analysisContext) {\r\n    log.debug(\"Excle监听解析一行数据=[{}]\", JSON.toJSONString(studentData));\r\n}\r\n```\r\n**打印结果**\r\n```java\r\n[http-nio-8089-exec-1] DEBUG c.b.c.c.u.excel.StudentExcelListener - Excle监听解析一行数据=[{\"address\":\"xxx园H栋1504室\",\"birthday\":\"2014-02-22 00:00:00\",\"clazz\":\"532600.015.0040101\",\"grade\":\"532600.015.00401\",\"idCard\":\"xxx0222111X\",\"idCardType\":\"居民身份证\",\"name\":\"x泰鼎\",\"nationality\":\"x\",\"nativePlace\":\"xx\",\"phone\":\"1.5025272768E10\",\"sex\":\"男\",\"studentId\":\"xxx015\",\"year\":\"2019\"}]\r\n```\r\n**出现的问题**\r\n```java\r\n本来是字段job的值2014-02-22 00:00:00，读出来后赋值给了birthday字段。\r\n```\r\n**其他**\r\n```java\r\n在打印的日志发现手机号是科学计数。excel里单元格式是常规，虽然给用户说明了，必须设置单元格式为文本，但总会存在不听话的用户，能不能做个格式注解。在字段上注解了，那么在读取的时候就按照注解的格式读取。。。。\r\n```",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/542/comments",
    "author": "Ryoui",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-09-04T12:08:00Z",
        "body": "你的用法有问题，请不要尝试 部分 加了`@ExcelProperty` 注解 部分不加，要么统一制定名字去匹配，要么统一指定index去匹配，要么按照默认的顺序去匹配。你部分字段不加 排序可能和你想象的不一样。\r\n用 `@NumberFomart` 可以解决 电话的问题"
      }
    ]
  },
  {
    "number": 541,
    "title": "如何在导出的excel最后追加写入合计？",
    "created_at": "2019-09-04T03:17:35Z",
    "closed_at": "2019-09-04T12:05:37Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/541",
    "body": "如何在导出的excel最后追加写入合计？有没有例子可以参考？",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/541/comments",
    "author": "spiritme1984",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-09-04T12:05:37Z",
        "body": "建议参照 写入table 来实现。先写入完数据，最后写入一个没有头的table，然后只有一行。并且所有的数据统计需要在内存里面实现。"
      }
    ]
  },
  {
    "number": 538,
    "title": "支持列表",
    "created_at": "2019-09-04T02:09:06Z",
    "closed_at": "2019-09-04T12:00:35Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/538",
    "body": "数据结构如下：\r\n````\r\npublic class AA{\r\nString  name;\r\nList<BB>bb；\r\n}\r\nclass BB{\r\nString color;\r\n....\r\n}\r\n\r\n```\r\n导出时报错\r\n```\r\ncom.alibaba.excel.exception.ExcelDataConvertException: Can not find 'Converter' support class List.\r\n\tat com.alibaba.excel.write.ExcelBuilderImpl.convert(ExcelBuilderImpl.java:355)\r\n\tat com.alibaba.excel.write.ExcelBuilderImpl.converterAndSet(ExcelBuilderImpl.java:293)\r\n```\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/538/comments",
    "author": "githublms",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-09-04T12:00:35Z",
        "body": "目前不支持list 请自定义转换器 或者用 `@ExcelIgnore`将这列不放入excel"
      },
      {
        "user": "perhamer",
        "created_at": "2019-09-05T14:06:49Z",
        "body": "不向下兼容的吗?"
      },
      {
        "user": "zenglanyuan",
        "created_at": "2020-05-11T07:19:39Z",
        "body": "实体导出的List类型的加了 @ExcelIgnore 注解， 也是一直提示这个问题。\r\n"
      },
      {
        "user": "javaxiaobear",
        "created_at": "2020-09-18T01:46:54Z",
        "body": "怎么自定义转换，大佬"
      },
      {
        "user": "darkjune",
        "created_at": "2021-11-18T11:00:20Z",
        "body": "> 怎么自定义转换，大佬\r\n\r\n继承下Convert类看"
      }
    ]
  },
  {
    "number": 537,
    "title": "升级2.0.0-beta3的jar冲突",
    "created_at": "2019-09-04T02:02:13Z",
    "closed_at": "2019-09-18T10:32:29Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/537",
    "body": "**异常代码**\r\n```\r\n04-Sep-2019 09:55:18.601 SEVERE [RMI TCP Connection(4)-127.0.0.1] org.apache.catalina.startup.ContextConfig.processAnnotationsJar Unable to process Jar entry [module-info.class] from Jar [jar:file:/D:/gitFile/gitFile/test/test/target/test/WEB-INF/lib/istack-commons-runtime-3.0.7.jar!/] for annotations\r\n org.apache.tomcat.util.bcel.classfile.ClassFormatException: Invalid byte tag in constant pool: 19\r\n\tat org.apache.tomcat.util.bcel.classfile.Constant.readConstant(Constant.java:97)\r\n\tat org.apache.tomcat.util.bcel.classfile.ConstantPool.<init>(ConstantPool.java:54)\r\n\r\n```\r\n**异常提示**\r\nstax-ex-1.8.jar\r\ntxw2-2.3.1.jar\r\njaxb-runtime-2.3.1.jar\r\nFastInfoset-1.2.15.jar\r\njaxb-api-2.3.1.jar\r\n这几个包报ClassFormatException: Invalid byte tag in constant pool: 19\r\n我用的jdk是1.8.092，从easyexcel1升级到2后就出现这个问题，有人说是poi版本太高和jdk冲突的问题，虽然能运行tomcat，但是每次启动都会报错\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/537/comments",
    "author": "liweixian",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-09-04T11:59:49Z",
        "body": "请尝试使用tomcat8 及以上版本"
      },
      {
        "user": "ggfickle",
        "created_at": "2020-02-20T07:37:19Z",
        "body": "> 请尝试使用tomcat8 及以上版本\r\n\r\n我用的tomcat 8.5也会报这个错误"
      }
    ]
  },
  {
    "number": 536,
    "title": "可以支持集合数据转换吗？",
    "created_at": "2019-09-04T02:00:51Z",
    "closed_at": "2019-09-04T11:59:14Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/536",
    "body": "有需要导出excel ，数据已经封装好了，只差写入excel中\r\n数据结构如下：\r\n```\r\npublic class ConsumptionChart {\r\n             ....\r\n\t@ExcelProperty(value = \"司机姓名\", index=0)\r\n\tprivate String name;\r\n\t....\r\n\t/**\r\n\t * 功耗表\r\n\t */\r\n\t@ExcelIgnore\r\n\tprivate List<EnergyModel> energy;\r\n}\r\n```\r\n一个司机有多个energy，在导出excel时，不用@ExcelIgnore 提示说 excel不支持列表？\r\n请问有什么办法解决吗？\r\n暂时不考虑合并策略，",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/536/comments",
    "author": "githublms",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-09-04T11:59:14Z",
        "body": "暂时不支持 List 实体和excel 的数据目前只能是一对一的关系"
      }
    ]
  },
  {
    "number": 535,
    "title": "如何在Listener中捕获异常，并返回给调用端",
    "created_at": "2019-09-03T23:40:16Z",
    "closed_at": "2019-09-04T11:45:44Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/535",
    "body": "我在监听器Listener中的代码如下：\r\n**异常代码**\r\n```java\r\n   \tprivate List<ExcelImportTestBean> datas = new ArrayList<ExcelImportTestBean>();\r\n\r\n\t@Override\r\n\tpublic void onException(Exception exception, AnalysisContext context) throws Exception {\r\n\t\tSystem.out.println(\"有异常\");\r\n\t\tthrow exception;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void invoke(ExcelImportTestBean data, AnalysisContext context) {\r\n\t\tLOGGER.info(\"解析到一条数据:{}\", JSON.toJSONString(data));\r\n\t\t// 验证手机号码格式\r\n\t\tif (!isMobile(data.getCellPhone())) {\r\n\t\t\ttry {\r\n\t\t\t\tthrow new Exception(String.format(\"数据：%s 手机号码格式不对\", data.getCellPhone()));\r\n\t\t\t} catch (Exception e) {\r\n\t\t\t\te.printStackTrace();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tdatas.add(data);\r\n\t}\r\n```\r\n为什么我在invoke函数中自己抛出的异常“手机号码格式不对”，并没有被onException函数捕获到呢？我用的EasyExcel版本是2.0.0-beta3。\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/535/comments",
    "author": "ghgh4dfCC",
    "comments": [
      {
        "user": "telechow",
        "created_at": "2019-09-04T08:14:30Z",
        "body": "在Listener中抛出的异常会被AbstractReadHolder这个类捕获，然后EasyExcel 2.0.0-beta3中，把捕获的异常包装成了ExcelAnalysisException这个异常，将你自己抛出的异常作为了ExcelAnalysisException异常的cause。\r\n所以你想在自己service层中继续向上抛出你自定义的异常，一直到统一异常处理器中去处理，那么：\r\n\r\n1.在使用到listener的service层代码里面try/catch  ,捕获ExcelAnalysisException  e。\r\n2.在catch块中throw  e.getCause();\r\n\r\n这样就能将你自己抛出的异常继续上抛到你的全局异常处理类里面了。就能处理你想要的“手机号码格式不对”这个信息了。希望能帮到你。"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2019-09-04T11:45:44Z",
        "body": "请抛出一个 runtimeExcepton 你自己抛的异常自己捕获了 等于没抛出异常"
      },
      {
        "user": "ghgh4dfCC",
        "created_at": "2019-09-04T19:31:26Z",
        "body": "问题解决了，谢谢两位，@telechow  @zhuangjiaju  "
      }
    ]
  },
  {
    "number": 534,
    "title": "新版不支持写多个sheet了吗？如果可以，要怎么做，给个demo？",
    "created_at": "2019-09-03T12:29:11Z",
    "closed_at": "2019-09-03T12:50:46Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/534",
    "body": "**异常代码**\r\n```java\r\n   这里写你的代码\r\n```\r\n**异常提示**\r\n请提供完整的异常提示\r\n**建议描述**\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/534/comments",
    "author": "029ye",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-09-03T12:50:46Z",
        "body": "参照 简单的写，方法2 即可。new 2次 writesheet"
      }
    ]
  },
  {
    "number": 532,
    "title": "web读 Can not close IO",
    "created_at": "2019-09-03T09:58:15Z",
    "closed_at": "2019-09-05T13:10:07Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/532",
    "body": "版本\r\n<version>2.0.0-beta3</version>\r\n**异常代码**\r\n```java\r\n  com.alibaba.excel.exception.ExcelAnalysisException: Can not close IO\r\n\tat com.alibaba.excel.analysis.ExcelAnalyserImpl.throwCanNotCloseIo(ExcelAnalyserImpl.java:152)\r\n\tat com.alibaba.excel.analysis.ExcelAnalyserImpl.finish(ExcelAnalyserImpl.java:125)\r\n\tat com.alibaba.excel.ExcelReader.finish(ExcelReader.java:273)\r\n\tat com.alibaba.excel.read.builder.ExcelReaderSheetBuilder.doRead(ExcelReaderSheetBuilder.java:161)\r\n\tat com.woodyclub.logistics.service.impl.LogisticsServiceImpl.inventorySynchronizationByExcel(LogisticsServiceImpl.java:721)\r\n\tat com.woodyclub.logistics.service.impl.LogisticsServiceImpl$$FastClassBySpringCGLIB$$6482cc03.invoke(<generated>)\r\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\r\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)\r\n\tat com.woodyclub.logistics.service.impl.LogisticsServiceImpl$$EnhancerBySpringCGLIB$$ab26268b.inventorySynchronizationByExcel(<generated>)\r\n\tat com.woodyclub.logistics.controller.LogisticsController.inventorySynchronizationByExcel(LogisticsController.java:401)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:665)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:750)\r\n\tat io.undertow.servlet.handlers.ServletHandler.handleRequest(ServletHandler.java:74)\r\n\tat io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:129)\r\n\tat org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:63)\r\n\tat io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)\r\n\tat io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)\r\n\tat org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:88)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)\r\n\tat io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)\r\n\tat io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)\r\n\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)\r\n\tat org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)\r\n\tat org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)\r\n\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n\tat org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)\r\n\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n\tat org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)\r\n\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n\tat org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)\r\n\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n\tat org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)\r\n\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n\tat org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)\r\n\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n\tat org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter.doFilter(OAuth2AuthenticationProcessingFilter.java:176)\r\n\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n\tat org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)\r\n\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n\tat org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)\r\n\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n\tat org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)\r\n\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n\tat org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)\r\n\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n\tat org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)\r\n\tat org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)\r\n\tat org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)\r\n\tat org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)\r\n\tat io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)\r\n\tat io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)\r\n\tat io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)\r\n\tat io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)\r\n\tat io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)\r\n\tat io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)\r\n\tat org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)\r\n\tat io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)\r\n\tat io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)\r\n\tat io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)\r\n\tat io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)\r\n\tat io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)\r\n\tat io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)\r\n\tat com.woodyclub.common.data.tenant.TenantContextHolderFilter.doFilter(TenantContextHolderFilter.java:59)\r\n\tat io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)\r\n\tat io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)\r\n\tat io.undertow.servlet.handlers.FilterHandler.handleRequest(FilterHandler.java:84)\r\n\tat io.undertow.servlet.handlers.security.ServletSecurityRoleHandler.handleRequest(ServletSecurityRoleHandler.java:62)\r\n\tat io.undertow.servlet.handlers.ServletChain$1.handleRequest(ServletChain.java:68)\r\n\tat io.undertow.servlet.handlers.ServletDispatchingHandler.handleRequest(ServletDispatchingHandler.java:36)\r\n\tat io.undertow.servlet.handlers.security.SSLInformationAssociationHandler.handleRequest(SSLInformationAssociationHandler.java:132)\r\n\tat io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:57)\r\n\tat io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)\r\n\tat io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:46)\r\n\tat io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:64)\r\n\tat io.undertow.security.handlers.AuthenticationMechanismsHandler.handleRequest(AuthenticationMechanismsHandler.java:60)\r\n\tat io.undertow.servlet.handlers.security.CachedAuthenticatedSessionHandler.handleRequest(CachedAuthenticatedSessionHandler.java:77)\r\n\tat io.undertow.security.handlers.AbstractSecurityContextAssociationHandler.handleRequest(AbstractSecurityContextAssociationHandler.java:43)\r\n\tat io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)\r\n\tat io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)\r\n\tat io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:292)\r\n\tat io.undertow.servlet.handlers.ServletInitialHandler.access$100(ServletInitialHandler.java:81)\r\n\tat io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:138)\r\n\tat io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:135)\r\n\tat io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:48)\r\n\tat io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)\r\n\tat io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:272)\r\n\tat io.undertow.servlet.handlers.ServletInitialHandler.access$000(ServletInitialHandler.java:81)\r\n\tat io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:104)\r\n\tat io.undertow.server.Connectors.executeRootHandler(Connectors.java:364)\r\n\tat io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:830)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\r\n\tat java.base/java.lang.Thread.run(Thread.java:834)\r\nCaused by: org.apache.poi.openxml4j.exceptions.OpenXML4JRuntimeException: Fail to save: an error occurs while saving the package : class org.apache.poi.openxml4j.util.ZipSecureFile$ThresholdInputStream cannot be cast to class java.util.zip.ZipFile$ZipFileInputStream (org.apache.poi.openxml4j.util.ZipSecureFile$ThresholdInputStream is in unnamed module of loader 'app'; java.util.zip.ZipFile$ZipFileInputStream is in module java.base of loader 'bootstrap')\r\n\tat org.apache.poi.openxml4j.opc.ZipPackage.saveImpl(ZipPackage.java:595)\r\n\tat org.apache.poi.openxml4j.opc.OPCPackage.save(OPCPackage.java:1539)\r\n\tat org.apache.poi.openxml4j.opc.OPCPackage.save(OPCPackage.java:1522)\r\n\tat org.apache.poi.openxml4j.opc.ZipPackage.closeImpl(ZipPackage.java:450)\r\n\tat org.apache.poi.openxml4j.opc.OPCPackage.close(OPCPackage.java:479)\r\n\tat com.alibaba.excel.analysis.ExcelAnalyserImpl.finish(ExcelAnalyserImpl.java:122)\r\n\t... 118 more\r\nCaused by: java.lang.ClassCastException: class org.apache.poi.openxml4j.util.ZipSecureFile$ThresholdInputStream cannot be cast to class java.util.zip.ZipFile$ZipFileInputStream (org.apache.poi.openxml4j.util.ZipSecureFile$ThresholdInputStream is in unnamed module of loader 'app'; java.util.zip.ZipFile$ZipFileInputStream is in module java.base of loader 'bootstrap')\r\n\tat java.base/java.util.zip.ZipFile$ZipFileInflaterInputStream.available(ZipFile.java:480)\r\n\tat org.apache.poi.openxml4j.util.ZipSecureFile$ThresholdInputStream.available(ZipSecureFile.java:317)\r\n\tat org.apache.poi.openxml4j.opc.internal.marshallers.ZipPartMarshaller.marshall(ZipPartMarshaller.java:84)\r\n\tat org.apache.poi.openxml4j.opc.ZipPackagePart.save(ZipPackagePart.java:124)\r\n\tat org.apache.poi.openxml4j.opc.internal.marshallers.DefaultMarshaller.marshall(DefaultMarshaller.java:43)\r\n\tat org.apache.poi.openxml4j.opc.ZipPackage.saveImpl(ZipPackage.java:585)\r\n\t... 123 more\r\n```\r\npublic JsonResult inventorySynchronizationByExcel(MultipartFile file) throws IOException {\r\n    这个地方会报错@link error\r\n\t\tEasyExcel.read(file.getInputStream(), BookInventoryExcel.class, new BookInventoryListener(bookInventoryMapper)).sheet().doRead();\r\n\t\treturn ResultUtil.success(ResultEnum.SUCCESS);\r\n\t}\r\n\r\nprivate static final int BATCH_COUNT = 3000;\r\n\tList<BookInventoryExcel> list = new ArrayList<>();\r\n\r\n\t@Autowired\r\n\tprivate BookInventoryMapper bookInventoryMapper;\r\n\tpublic BookInventoryListener(BookInventoryMapper bookInventoryMapper){\r\n\t\tthis.bookInventoryMapper = bookInventoryMapper;\r\n\t}\r\n\r\n\t/**\r\n\t * 该方法是逐条读取Excel 的内容\r\n\t * @param bookInventoryExcel\r\n\t * @param context\r\n\t */\r\n\t@Override\r\n\tpublic void invoke(BookInventoryExcel bookInventoryExcel, AnalysisContext context) {\r\n\t\tif(bookInventoryExcel.getBookId() == null || bookInventoryExcel.getInventory() == null){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlist.add(bookInventoryExcel);\r\n\t\tif (list.size() >= BATCH_COUNT) {\r\n\t\t\tsaveData();\r\n\t\t\tlist.clear();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 将所有的内容读取之后的方法\r\n\t * @param context\r\n\t */\r\n\t@Override\r\n\tpublic void doAfterAllAnalysed(AnalysisContext context) {\r\n\t}\r\n\r\n\tprivate void saveData() {\r\n               我是每次更新3000条  大概一万条的时候上面报错的地方就报错了\r\n\t\tbookInventoryMapper.updateAllBookInventoryByExcel(list);\r\n\t}\r\n\r\n\r\n前面看到有朋友写的时候碰到这个报错，我不知道我这个是我写的有问题还是bug，请帮忙看下。\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/532/comments",
    "author": "wjc1243",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-09-03T12:07:24Z",
        "body": "异常需要添全 看哪一行代码报错了。具体关不掉哪个。"
      },
      {
        "user": "wjc1243",
        "created_at": "2019-09-03T12:43:16Z",
        "body": "> 异常需要添全 看哪一行代码报错了。具体关不掉哪个。\r\n\r\n补全了  帮忙看下啥原因   麻烦了"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2019-09-03T13:00:46Z",
        "body": "你尝试将poi 升级成4.1.0看 \r\n```xml\r\n       <dependency>\r\n            <groupId>org.apache.poi</groupId>\r\n            <artifactId>poi</artifactId>\r\n            <version>4.1.0</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.apache.poi</groupId>\r\n            <artifactId>poi-ooxml</artifactId>\r\n            <version>4.1.0</version>\r\n        </dependency>\r\n```"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2019-09-05T13:10:07Z",
        "body": "您好 是否已经解决了问题？如果未解决 请重新打开问题"
      },
      {
        "user": "wjc1243",
        "created_at": "2019-09-11T08:47:40Z",
        "body": "还需要引入POI么？  我没引入也能用啊  \r\n我没引，直接切到1.1.2-beat1版本了"
      }
    ]
  },
  {
    "number": 531,
    "title": "10万+的数据一次性导出会造成服务器内存一直占用，怎么处理",
    "created_at": "2019-09-03T09:39:43Z",
    "closed_at": "2019-09-03T12:04:50Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/531",
    "body": "",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/531/comments",
    "author": "LockieZou",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-09-03T12:04:50Z",
        "body": "请提供源代码。参照 快速使用 去书写。并升级到最新版本。 如果内存还没释放 请检查 是否内存占用的 非easyexcel的对象。"
      },
      {
        "user": "LockieZou",
        "created_at": "2019-09-06T08:40:40Z",
        "body": "/**\r\n     * 导出单个sheet\r\n     * @param response\r\n     * @param dataList\r\n     * @param sheet\r\n     * @param fileName\r\n     * @throws UnsupportedEncodingException\r\n     */\r\n    public static void writeExcelOneSheet(HttpServletResponse response, List<? extends BaseRowModel> dataList, Sheet sheet, String fileName) {\r\n        if (CollectionUtils.isEmpty(dataList)) {\r\n            return;\r\n        }\r\n        // 如果sheet为空，则使用默认的\r\n        if (null == sheet) {\r\n            sheet = initSheet;\r\n        }\r\n\r\n        ServletOutputStream out = null;\r\n        try {\r\n            String value = \"attachment; filename=\" + new String(\r\n                    (fileName + new SimpleDateFormat(\"yyyyMMdd\").format(new Date()) + ExcelTypeEnum.XLSX.getValue()).getBytes(\"gb2312\"), \"ISO8859-1\");\r\n            response.setContentType(\"multipart/form-data\");\r\n            response.setCharacterEncoding(\"utf-8\");\r\n            response.setContentType(\"application/vnd.ms-excel;charset=utf-8\");\r\n            response.setHeader(\"Content-disposition\", value);\r\n            out = response.getOutputStream();\r\n            ExcelWriter writer = EasyExcelFactory.getWriter(out, ExcelTypeEnum.XLSX, true);\r\n            // 设置属性类\r\n            sheet.setClazz(dataList.get(0).getClass());\r\n            writer.write(dataList, sheet);\r\n            writer.finish();\r\n            out.flush();\r\n            out.close();\r\n        } catch (IOException e) {\r\n            logger.error(\"导出失败，失败原因：{}\", e);\r\n        }\r\n    }"
      },
      {
        "user": "allenwtl",
        "created_at": "2021-05-06T03:09:14Z",
        "body": "你是怎么解决了"
      }
    ]
  },
  {
    "number": 530,
    "title": "读取数据，带有下拉格式空行报错最后一行报错？",
    "created_at": "2019-09-03T09:21:07Z",
    "closed_at": "2019-09-03T12:03:12Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/530",
    "body": "\r\n- [ ] \r\n\r\ncom.alibaba.excel.exception.ExcelAnalysisException: java.lang.NumberFormatException: For input string: \"\"\"\r\n\tat com.alibaba.excel.analysis.v07.XlsxSaxAnalyser.parseXmlSource(XlsxSaxAnalyser.java:180)\r\n\tat com.alibaba.excel.analysis.v07.XlsxSaxAnalyser.execute(XlsxSaxAnalyser.java:194)\r\n\tat com.alibaba.excel.analysis.ExcelAnalyserImpl.analysis(ExcelAnalyserImpl.java:90)\r\n\tat com.alibaba.excel.ExcelReader.read(ExcelReader.java:170)\r\n\tat com.alibaba.excel.read.builder.ExcelReaderSheetBuilder.doRead(ExcelReaderSheetBuilder.java:160)\r\n\tat cn.com.bluemoon.counterfeit.controller.UploadController.uploadTortFeedback(UploadController.java:276)\r\n\tat sun.reflect.GeneratedMethodAccessor339.invoke(Unknown Source)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:45005)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:661)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:742)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:84)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)\r\n\tat org.apache.catalina.core.StandardContextValve.__invoke(StandardContextValve.java:96)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:41002)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.lang.NumberFormatException: For input string: \"\"\"\r\n\tat sun.misc.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:2043)\r\n\tat sun.misc.FloatingDecimal.parseDouble(FloatingDecimal.java:110)\r\n\tat java.lang.Double.parseDouble(Double.java:538)\r\n\tat java.lang.Double.valueOf(Double.java:502)\r\n\tat com.alibaba.excel.analysis.v07.handlers.DefaultCellHandler.appendCurrentCellValue(DefaultCellHandler.java:169)\r\n\tat com.alibaba.excel.analysis.v07.XlsxRowHandler.characters(XlsxRowHandler.java:52)\r\n\tat com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.characters(AbstractSAXParser.java:546)\r\n\tat com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:455)\r\n\tat com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:842)\r\n\tat com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:771)\r\n\tat com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141)\r\n\tat com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1213)\r\n\tat com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser.parse(SAXParserImpl.java:643)\r\n\tat com.alibaba.excel.analysis.v07.XlsxSaxAnalyser.parseXmlSource(XlsxSaxAnalyser.java:175)\r\n\t... 73 common frames omitted",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/530/comments",
    "author": "xietuke",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-09-03T12:03:12Z",
        "body": "请尝试升级到 beta3 该问题应该是由空单元格导致。实际测试 发现空不会读取。"
      }
    ]
  },
  {
    "number": 529,
    "title": "如何自定义合并策略",
    "created_at": "2019-09-03T09:01:50Z",
    "closed_at": "2019-09-03T12:00:09Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/529",
    "body": "写数据到excel中，要进行单元格合并，而且这个单元格很复杂，请问自定义单元格策略应该参考哪里？有没有其他的使用方法\r\n```\r\n    /**\r\n     * 合并单元格\r\n     * <p>\r\n     * 1. 创建excel对应的实体对象 参照{@link DemoData}\r\n     * <p>\r\n     * 2. 创建一个merge策略 并注册\r\n     * <p>\r\n     * 3. 直接写即可\r\n     */\r\n    @Test\r\n    public void mergeWrite() {\r\n        String fileName = TestFileUtil.getPath() + \"mergeWrite\" + System.currentTimeMillis() + \".xlsx\";\r\n        // 每隔2行会合并 把eachColumn 设置成 3 也就是我们数据的长度，所以就第一列会合并。当然其他合并策略也可以自己写\r\n        LoopMergeStrategy loopMergeStrategy = new LoopMergeStrategy(2, 0);\r\n        // 这里 需要指定写用哪个class去读，然后写到第一个sheet，名字为模板 然后文件流会自动关闭\r\n        EasyExcel.write(fileName, DemoData.class).registerWriteHandler(loopMergeStrategy).sheet(\"模板\").doWrite(data());\r\n    }\r\n```",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/529/comments",
    "author": "githublms",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-09-03T12:00:09Z",
        "body": "还有个 `OnceAbsoluteMergeStrategy` 单次合并的策略。或者参照 这两个可以写自定义合并策略。"
      }
    ]
  },
  {
    "number": 527,
    "title": "Can not cloase IO",
    "created_at": "2019-09-03T03:11:18Z",
    "closed_at": "2019-09-03T11:57:11Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/527",
    "body": "**数据库获取完成数据并写到excel，调用ExcelWriter.write()**\r\n\r\n**触发Bug的代码**\r\n```java\r\n   ServletOutputStream outputStream = response.getOutputStream();\r\n\t\tExcelWriter excelWriter = EasyExcel.write(outputStream, ConsumptionChart.class).build();\r\n\t\tWriteSheet writeSheet = EasyExcel.writerSheet(\"司机考勤结果\").build();\r\n\t\texcelWriter.write(charts, writeSheet);\r\n```\r\n**后台直接抛错**\r\n``` \r\nERROR (DirectJDKLog.java:175)- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is com.alibaba.excel.exception.ExcelGenerateException: Can not close IO] with root cause\r\njava.lang.NoSuchMethodError: org.apache.poi.util.IOUtils.copy(Ljava/io/InputStream;Ljava/io/OutputStream;)J\r\n\tat org.apache.poi.openxml4j.opc.internal.marshallers.ZipPartMarshaller.marshall(ZipPartMarshaller.java:84)\r\n\tat org.apache.poi.openxml4j.opc.internal.MemoryPackagePart.save(MemoryPackagePart.java:112)\r\n\tat org.apache.poi.openxml4j.opc.internal.marshallers.DefaultMarshaller.marshall(DefaultMarshaller.java:43)\r\n\tat org.apache.poi.openxml4j.opc.ZipPackage.saveImpl(ZipPackage.java:539)\r\n\tat org.apache.poi.openxml4j.opc.OPCPackage.save(OPCPackage.java:1489)\r\n\tat org.apache.poi.ooxml.POIXMLDocument.write(POIXMLDocument.java:242)\r\n\tat org.apache.poi.xssf.streaming.SXSSFWorkbook.write(SXSSFWorkbook.java:933)\r\n\tat com.alibaba.excel.context.WriteContextImpl.finish(WriteContextImpl.java:347)\r\n\tat com.alibaba.excel.write.ExcelBuilderImpl.finish(ExcelBuilderImpl.java:105)\r\n\tat com.alibaba.excel.write.ExcelBuilderImpl.addContent(ExcelBuilderImpl.java:97)\r\n\tat com.alibaba.excel.ExcelWriter.write(ExcelWriter.java:154)\r\n\tat com.alibaba.excel.ExcelWriter.write(ExcelWriter.java:139)\r\n\tat com.cbpm.crrc.controller.DriverController.exportConsumption(DriverController.java:263)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\r\n\tat java.lang.reflect.Method.invoke(Unknown Source)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:660)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:741)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Unknown Source)\r\n```\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/527/comments",
    "author": "NoelCarlton",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-09-03T11:57:11Z",
        "body": "这个 很明显是jar 依赖的问题。请检查 IOUtils是否存在copy方法"
      }
    ]
  },
  {
    "number": 526,
    "title": "通过模板导出时传入list<list<object>>数据，导出的数据少了最后一列",
    "created_at": "2019-09-03T02:26:42Z",
    "closed_at": "2019-09-05T13:10:38Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/526",
    "body": "\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/526/comments",
    "author": "dieeman",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-09-03T11:56:09Z",
        "body": "请提供源代码"
      },
      {
        "user": "dieeman",
        "created_at": "2019-09-04T01:26:17Z",
        "body": " private void addBasicTypeToExcel(List<Object> oneRowData, Row row, int relativeRowIndex) {\r\n        if (CollectionUtils.isEmpty(oneRowData)) {\r\n            return;\r\n        }\r\n        Map<Integer, Head> headMap = context.currentWriteHolder().excelWriteHeadProperty().getHeadMap();\r\n        int dataIndex = 0;\r\n        int cellIndex = 0;\r\n        for (Map.Entry<Integer, Head> entry : headMap.entrySet()) {\r\n            if (dataIndex >= oneRowData.size()) {\r\n                return;\r\n            }\r\n            cellIndex = entry.getKey();\r\n            Head head = entry.getValue();\r\n            doAddBasicTypeToExcel(oneRowData, head, row, relativeRowIndex, dataIndex++, cellIndex);\r\n        }\r\n        // Finish\r\n        if (dataIndex >= oneRowData.size()) {\r\n            return;\r\n        }\r\n        if (cellIndex != 0) {\r\n            cellIndex++;\r\n        }\r\n        for (int i = 0; i < oneRowData.size() - dataIndex; i++) {//此处减去dataindex后遍历次数减少无法全部遍历出oneRowData中的数据\r\n            doAddBasicTypeToExcel(oneRowData, null, row, relativeRowIndex, dataIndex++, cellIndex++);\r\n        }\r\n    }"
      },
      {
        "user": "dieeman",
        "created_at": "2019-09-04T01:32:58Z",
        "body": "还有当oneRowData.get（i）为null时，获取不到oneRowData.get（i）的class，会报空指针"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2019-09-04T11:57:25Z",
        "body": "\r\n> 还有当oneRowData.get（i）为null时，获取不到oneRowData.get（i）的class，会报空指针\r\n\r\n这个请提供测试数据"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2019-09-05T13:10:38Z",
        "body": "已经在2.0.0-beat4 修复 非常感谢您的意见"
      }
    ]
  },
  {
    "number": 525,
    "title": "导入数据出错，读取完数据后报错什么原因？",
    "created_at": "2019-09-02T14:02:41Z",
    "closed_at": "2019-09-05T13:09:40Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/525",
    "body": "com.alibaba.excel.exception.ExcelAnalysisException: java.lang.NumberFormatException: For input string: \"\"\"\r\n\tat com.alibaba.excel.analysis.v07.XlsxSaxAnalyser.parseXmlSource(XlsxSaxAnalyser.java:180)\r\n\tat com.alibaba.excel.analysis.v07.XlsxSaxAnalyser.execute(XlsxSaxAnalyser.java:194)\r\n\tat com.alibaba.excel.analysis.ExcelAnalyserImpl.analysis(ExcelAnalyserImpl.java:90)\r\n\tat com.alibaba.excel.ExcelReader.read(ExcelReader.java:170)\r\n\tat com.alibaba.excel.read.builder.ExcelReaderSheetBuilder.doRead(ExcelReaderSheetBuilder.java:160)\r\n\tat cn.com.bluemoon.counterfeit.controller.UploadController.uploadNetworkTort(UploadController.java:184)\r\n\tat sun.reflect.GeneratedMethodAccessor140.invoke(Unknown Source)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:45005)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:661)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:742)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:84)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)\r\n\tat org.apache.catalina.core.StandardContextValve.__invoke(StandardContextValve.java:96)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:41002)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.lang.NumberFormatException: For input string: \"\"\"\r\n\tat sun.misc.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:2043)\r\n\tat sun.misc.FloatingDecimal.parseDouble(FloatingDecimal.java:110)\r\n\tat java.lang.Double.parseDouble(Double.java:538)\r\n\tat java.lang.Double.valueOf(Double.java:502)\r\n\tat com.alibaba.excel.analysis.v07.handlers.DefaultCellHandler.appendCurrentCellValue(DefaultCellHandler.java:169)\r\n\tat com.alibaba.excel.analysis.v07.XlsxRowHandler.characters(XlsxRowHandler.java:52)\r\n\tat com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.characters(AbstractSAXParser.java:546)\r\n\tat com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:455)\r\n\tat com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:842)\r\n\tat com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:771)\r\n\tat com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141)\r\n\tat com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1213)\r\n\tat com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser.parse(SAXParserImpl.java:643)\r\n\tat com.alibaba.excel.analysis.v07.XlsxSaxAnalyser.parseXmlSource(XlsxSaxAnalyser.java:175)\r\n\t... 73 common frames omitted\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/525/comments",
    "author": "xietuke",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-09-03T11:55:38Z",
        "body": "请检查excel里面的数据是否 是一个 `\"` 如果要自定义处理请事先`listener.onExcelption`"
      },
      {
        "user": "xietuke",
        "created_at": "2019-09-03T12:55:28Z",
        "body": "没有呀，Excel都空白的，只是有下拉选择框，但是都没有选择"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2019-09-03T12:56:50Z",
        "body": "提供下有问题的excel"
      },
      {
        "user": "xietuke",
        "created_at": "2019-09-03T13:01:57Z",
        "body": "怎么发给你？\r\n"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2019-09-03T13:03:12Z",
        "body": "数据脱敏处理后 直接上传 或者发我邮箱"
      },
      {
        "user": "xietuke",
        "created_at": "2019-09-03T13:10:40Z",
        "body": "而且，把所有带有下拉框的行，没有选择空白行数据都读进去，最后一行就报com.alibaba.excel.exception.ExcelAnalysisException: java.lang.NumberFormatException: For input string: \"\"\"，中间的行反而不报"
      },
      {
        "user": "zhuangjiaju",
        "created_at": "2019-09-05T13:09:40Z",
        "body": "您好 是否已经解决了问题？如果未解决 请重新打开问题"
      },
      {
        "user": "sczhaoqi",
        "created_at": "2020-08-03T01:21:47Z",
        "body": "."
      },
      {
        "user": "xuxingithub44",
        "created_at": "2021-11-10T05:58:34Z",
        "body": "遇到同样的问题，不修改excel的情况下，请问后端如何处理？"
      },
      {
        "user": "wd0401",
        "created_at": "2023-08-03T06:10:49Z",
        "body": "我感觉这种可以自定义converter 校验数据合法性"
      },
      {
        "user": "xietuke",
        "created_at": "2023-08-03T06:11:10Z",
        "body": "您好！邮件我已经收到，我会尽快处理！谢谢！"
      }
    ]
  },
  {
    "number": 522,
    "title": "特殊符号& 读取有问题",
    "created_at": "2019-09-02T06:34:54Z",
    "closed_at": "2019-09-02T13:45:28Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/522",
    "body": "原内容是 “1|D&2|E” ，读取后是“2|E”\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/522/comments",
    "author": "li3055",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-09-02T13:45:28Z",
        "body": "非常感谢您的意见。该问题已经在最新版本修复。请尝试使用最新版本解决问题。"
      }
    ]
  },
  {
    "number": 519,
    "title": "导出超链接",
    "created_at": "2019-08-31T09:12:03Z",
    "closed_at": "2019-09-02T13:46:07Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/519",
    "body": "导出超链接可以用其他的文字代替http",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/519/comments",
    "author": "yellowlemmo",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-09-02T13:46:07Z",
        "body": "请查看使用手册"
      }
    ]
  },
  {
    "number": 517,
    "title": "一个Excel能写入多个sheet吗？",
    "created_at": "2019-08-30T14:10:36Z",
    "closed_at": "2019-09-02T13:46:23Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/517",
    "body": "**异常代码**\r\n```java\r\n   这里写你的代码\r\n```\r\n**异常提示**\r\n请提供完整的异常提示\r\n**建议描述**\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/517/comments",
    "author": "xietuke",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-09-02T13:46:23Z",
        "body": "可以，请参照使用手册"
      }
    ]
  },
  {
    "number": 515,
    "title": "纯数字变导入会被转换成科学计数",
    "created_at": "2019-08-30T06:22:43Z",
    "closed_at": "2019-08-30T06:35:12Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/515",
    "body": "\r\n",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/515/comments",
    "author": "hq0901",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-08-30T06:35:12Z",
        "body": "请按照模板填写问题 ，并提供代码"
      }
    ]
  },
  {
    "number": 512,
    "title": "如何使用多线程读取？",
    "created_at": "2019-08-29T10:58:44Z",
    "closed_at": "2019-08-29T11:00:58Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/alibaba/easyexcel/issues/512",
    "body": "我想使用多线程读取excel，一个线程负责一个Sheet页。\r\n但是我按照demo的代码改成多线程，然后报错了。请问有多线程的例子吗？\r\n\r\n```\r\nfor (Sheet sheet : excelReader.getSheets()) {\r\n            Callable callable = () -> {\r\n                excelReader.read(sheet);\r\n                return null;\r\n            };\r\n            runList.add(callable);\r\n}\r\n```",
    "comments_url": "https://api.github.com/repos/alibaba/easyexcel/issues/512/comments",
    "author": "TheoCode-sekai",
    "comments": [
      {
        "user": "zhuangjiaju",
        "created_at": "2019-08-29T11:00:58Z",
        "body": "目前为止不支持多线程"
      }
    ]
  }
]