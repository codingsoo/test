[
  {
    "number": 11327,
    "title": "seeking method for simultaneous video speed and voice Change",
    "created_at": "2023-11-01T11:42:23Z",
    "closed_at": "2024-03-11T08:47:07Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/11327",
    "body": "Hello,\r\n\r\nI'm looking to implement the following features:\r\n- Adjusting the speed of videos (which include audio).\r\n- Changing the audio's voice (for instance, making a human voice sound like a robot).\r\n\r\nHere's the approach I've considered:\r\n- Use SimpleExoPlayer's setPlaybackParameters function for speed adjustment.\r\n- For voice change, extend the BaseAudioProcessor and manipulate the inputBuffer.\r\n\r\nIs it possible to implement it this way?\r\nBoth features must work together.\r\nIf there's a better approach or any recommendations, I'd greatly appreciate your guidance.\r\n\r\nThank you.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/11327/comments",
    "author": "KimDandan",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2023-11-01T16:47:23Z",
        "body": "This is untested, but I think when you build you own `DefaultAudioSink` in `DefaultRenderersFactory.buildAudioSink`, you can specify a custom `AudioProcessorChain` via `DefaultAudioSink.Builder.setAudioProcessorChain`. This allows you to intercept the call to `AudioProcessorChain.applyPlaybackParameters` to set the speed on the `SonicAudioProcessor` and also reconfigure your custom audio processor at the same time."
      }
    ]
  },
  {
    "number": 11291,
    "title": "Is Exoplayer/media3 support huawei devices( with only huawei services )  ? ",
    "created_at": "2023-09-14T08:00:14Z",
    "closed_at": "2023-09-14T17:25:45Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/11291",
    "body": "Is Exoplayer/media3 support huawei devices( with only huawei services ) ? #11291\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/11291/comments",
    "author": "moniqueeeeee",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2023-09-14T17:25:45Z",
        "body": "See above."
      },
      {
        "user": "moniqueeeeee",
        "created_at": "2023-09-17T09:34:39Z",
        "body": "@marcbaechinger  see above what ? "
      }
    ]
  },
  {
    "number": 11289,
    "title": "SSAi without Ima package ",
    "created_at": "2023-09-12T13:46:36Z",
    "closed_at": "2024-02-01T13:15:30Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/11289",
    "body": "Dears ,\r\n\r\ni have a content stitched with ads (one stream SSAI content with ads) not supported by IMA .\r\nbelow is my code , i know where is the ad time in content but i can't implement it \r\n\r\nbelow is my code:\r\n\r\n```\r\nadsMediaSource = ServerSideAdInsertionMediaSource(mediaSource, this  refer to onadPlaybackStateUpdatedrequest)\r\nplayer = ExoPlayer.Builder(context).setMediaSourceFactory(DefaultMediaSourceFactory(context))\r\n                .build()\r\nplayer?.addListener(this)\r\n        player?.playWhenReady = true\r\n        exoPlayerView.player = player\r\n        player?.setMediaSource(adsMediaSource!!)\r\n        player?.seekTo(playbackPosition)\r\n        player?.playWhenReady = playWhenReady\r\n        player?.prepare()\r\n```\r\n\r\n```\r\n//  @SuppressLint(\"UnsafeOptInUsageError\")\r\n    override fun onAdPlaybackStateUpdateRequested(contentTimeline: Timeline): Boolean {\r\n\r\n        val adStatesBuilder = ImmutableMap.builder<Any, AdPlaybackState>()\r\n        (0 until contentTimeline.periodCount).forEach { periodIndex ->\r\n            val uid = contentTimeline.getUidOfPeriod(periodIndex)\r\n            var adPlaybackState = AdPlaybackState(uid, 5 * C.MICROS_PER_SECOND)\r\n                .withAdCount(0,1)\r\n            adPlaybackStateMap.put(contentTimeline.getUidOfPeriod(0),adPlaybackState)\r\n            adsMediaSource?.setAdPlaybackStates(adPlaybackStateMap.build(),\r\n                contentTimeline)\r\n            adStatesBuilder.put(uid,  adPlaybackState) // should be AdPlaybackState.NONE\r\n        }\r\n        adsMediaSource?.setAdPlaybackStates(adStatesBuilder.build(),contentTimeline)\r\n\r\n        return true\r\n    }\r\n```\r\n\r\nappreciate your urgent support , to check my code and let me know how i can implement it\r\nthe current behavior is content start and freeze after 5 second  \r\n\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/11289/comments",
    "author": "moniqueeeeee",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2023-09-13T21:58:15Z",
        "body": "From the code above it looks like the `AdPlaybackState` that you are using is not what the `ServerSideAdInsertionMediaSource` expects.\r\n\r\nHere is a snippet on how the IMA extension inserts a VOD ad group:\r\n \r\n```java\r\n    adPlaybackState =\r\n        adPlaybackState\r\n            .withNewAdGroup(insertionIndex, adGroupInsertionPositionUs)\r\n            .withIsServerSideInserted(insertionIndex, /* isServerSideInserted= */ true)\r\n            .withAdCount(insertionIndex, 1)\r\n            .withAdDurationsUs(insertionIndex, adDurationsUs)\r\n            .withContentResumeOffsetUs(insertionIndex, 0);\r\n```\r\n\r\nThe snippet above inserts an server side inserted ad group with a single ad of a given duration. "
      }
    ]
  },
  {
    "number": 11262,
    "title": "MI 11 T pro no audio, so cant record video ,no bluetooth ,fingerprint also doesnt work",
    "created_at": "2023-08-14T18:29:42Z",
    "closed_at": "2023-08-15T10:51:32Z",
    "labels": [
      "question",
      "needs triage"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/11262",
    "body": "I tried resetting the device yet the issue prevails, there is no audio so cant watch any videos in whatsapp, instagram, youtube. the camera is blank and doesnt allow video call .bluetooth wont turn on so cant connect any headphones. please help !! has anyone had this issues before ?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/11262/comments",
    "author": "redmifan",
    "comments": [
      {
        "user": "microkatz",
        "created_at": "2023-08-15T10:51:32Z",
        "body": "Hello @redmifan,\r\n\r\nI'm sorry you are having these issues but based on your description, it does not seem like an ExoPlayer specific problem. Your audio/video/camera issues span multiple apps and seem to be specific to your phone as well as being non-media based. I would suggest reaching out Xiaomi technical support."
      }
    ]
  },
  {
    "number": 11238,
    "title": "process drm prep and sign license request failed",
    "created_at": "2023-07-04T10:33:48Z",
    "closed_at": "2023-08-02T01:04:59Z",
    "labels": [
      "question",
      "closed-by-bot"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/11238",
    "body": "### Bug\n\n### The following error occurs and the audio stops.\r\n\r\n```\r\n2023-07-04 18:11:54.296 772-28548/? E/wv_dash: Trustlet did not send a valid return code: 7\r\n2023-07-04 18:11:54.297 772-28548/? E/wv_dash: process drm prep and sign license request failed\r\n```",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/11238/comments",
    "author": "unubold1",
    "comments": [
      {
        "user": "icbaker",
        "created_at": "2023-07-04T10:48:05Z",
        "body": "There isn't enough information here to help you. Please email the result of `adb bugreport` after reproducing the problem in the ExoPlayer demo app to android-media-github@google.com with subject `Issue #11238`."
      },
      {
        "user": "google-oss-bot",
        "created_at": "2023-07-24T01:05:09Z",
        "body": "<!-- event: mark-stale -->\nHey @unubold1. We need more information to resolve this issue but there hasn't been an update in 14 weekdays. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2023-08-02T01:04:59Z",
        "body": "<!-- event: close-stale -->\nSince there haven't been any recent updates here, I am going to close this issue.\n\n@unubold1 if you're still experiencing this problem and want to continue the discussion just leave a comment here and we are happy to re-open this."
      }
    ]
  },
  {
    "number": 11220,
    "title": "Looping ogg files.",
    "created_at": "2023-06-20T12:47:30Z",
    "closed_at": "2023-06-22T08:30:31Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/11220",
    "body": "Hello.  I'm not a very experienced programmer.  I'm adding the exoplayer library as an extension for AppInventor2, so for now I'm using the 2.18.7 library and not Media3.  I use the convenient methods available in the ExoPlayer class.  I wanted to use Exo Player to play short, looping audio files, mp3, wav or ogg.  I add tracks to local audio files as MediaItem.  Then I set repeat to ONE.  The mp3 and wav file loop perfectly, but the problem is with the ogg file where there is a short pause.  The same ogg file loops perfectly with MediaPlayer from android, so I don't think it's a problem in the ogg file.  Could it be an ogg encoder problem with exoplayer?  Is there anything I can try that could potentially solve the problem?  I will add that I tested libraries from version 2.15.1 to the latest 2.18.7 and it was the same in each.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/11220/comments",
    "author": "patryk84a",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2023-06-22T08:30:31Z",
        "body": "Duplicate of #11219"
      }
    ]
  },
  {
    "number": 11212,
    "title": "Skip ads while fast forwarding/ Remove first pre roll ads in resumed content.",
    "created_at": "2023-06-15T07:40:17Z",
    "closed_at": "2023-06-16T06:30:14Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/11212",
    "body": "hi,\r\nIs there any way that pre-roll ads can be removed in the condition when the user is resuming the content from the continue watching row?\r\nAlso, need to skip the ad when the user if fast forwarding. Is there any way to achieve this.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/11212/comments",
    "author": "dev-sharma-deltatre",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2023-06-15T09:23:00Z",
        "body": "> Is there any way that pre-roll ads can be removed in the condition when the user is resuming the content from the continue watching row?\r\n\r\nI assume you are using  the IMA extension with client-side ads (please add all information initially, so we can be sure to answer for the right thing from the beginning. It for you benefit because the waiting time for a second answer tends to be much longer).\r\n\r\nIf there is only a pre-roll, then you can simply not add the ad metadata to your media item, when you add it to the player. The stream then plays without ads. If there are further ads to be played I don't think you can drop single ads or ad groups.\r\n\r\n> Also, need to skip the ad when the user if fast forwarding\r\n\r\nGenerally, the player doesn't allow seeking when an ad is playing. You can use skippeable ads, which then can be skipped by the user. With IMA, there is no API to skip over ads other than with skippeable ads."
      },
      {
        "user": "dev-sharma-deltatre",
        "created_at": "2023-06-15T10:19:26Z",
        "body": "@marcbaechinger, thank you for the quick response. \r\nSo there is no way to just remove the pre-roll ad and keep the mid-rolls and post-rolls?\r\nAlso, when the user is fast-forwarding the content and mid-rolls are there, then ads cannot be skipped, unless they are skippable ads?\r\nPlease confirm."
      },
      {
        "user": "marcbaechinger",
        "created_at": "2023-06-15T11:13:23Z",
        "body": "> So there is no way to just remove the pre-roll ad and keep the mid-rolls and post-rolls?\r\n\r\nConfirmed.\r\n\r\n> Also, when the user is fast-forwarding the content and mid-rolls are there, then ads cannot be skipped, unless they are skippable ads?\r\n\r\nConfirmed when an ad is playing, the user can not seek. If an ad is skippeable, then the user can not seek until the non-skippeable duration is played. Then the user can skip the ad.\r\n\r\nI can also confirm that when a user seek across the cue point of an ad, then the player plays the ad and then goes to the  requested seek position.\r\n"
      },
      {
        "user": "dev-sharma-deltatre",
        "created_at": "2023-06-16T06:30:14Z",
        "body": "Thank you so much for the information."
      }
    ]
  },
  {
    "number": 11201,
    "title": "Does Exoplayer support eac3-joc?",
    "created_at": "2023-06-08T09:39:30Z",
    "closed_at": "2023-06-13T14:53:04Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/11201",
    "body": "Does Exoplayer support eac3-joc or eac3?\r\nThe device used is Galaxy S22.\r\n\r\nDoes it support playback on mobile devices? Does it support playback in Android's default codec?\r\n\r\nBoth EXTENSION_RENDERER_MODE_OFF and EXTENSION_RENDERER_MODE_PREFER will play regardless.\r\n\r\nBelow is the log that comes out when playing.\r\n\r\ntracks [eventTime=0.08, mediaPos=0.00, window=0, period=0\r\ngroup [\r\n[X] Track:0, id=1, mimeType=video/avc, codecs=avc1.4D4028, res=1920x1080, fps=24.0, supported=YES\r\n]\r\ngroup [\r\n[ ] Track:0, id=2, mimeType=audio/eac3-joc, bitrate=448000, channels=6, sample_rate=48000, language=und, supported=YES\r\n]\r\n]",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/11201/comments",
    "author": "astroncc",
    "comments": [
      {
        "user": "microkatz",
        "created_at": "2023-06-08T15:32:40Z",
        "body": "Yes Exoplayer supports eac3-joc and eac3. You said that there is playback happening. Is the audio not playing during playback?\r\n\r\nIf there is a hardware or software codec that supports the format then it will play. It seems based on your log snippet that there is some decoder available to play the audio."
      },
      {
        "user": "astroncc",
        "created_at": "2023-06-08T16:04:27Z",
        "body": "> Yes Exoplayer supports eac3-joc and eac3. You said that there is playback happening. Is the audio not playing during playback?\r\n> \r\n> If there is a hardware or software codec that supports the format then it will play. It seems based on your log snippet that there is some decoder available to play the audio.\r\n\r\nThank you for your answer. 👍🏻😀👍🏻\r\n\r\nIt plays well. Is the EAC3 audio codec not subject to a separate license?\r\n\r\nI know it as Dolby audio codec. If you upload the Player app to the Google Store and then service it, I'm worried about the license issue.\r\n\r\nGenerally, there is no problem with playback at the time of H/W decoder, so shouldn't we prevent audio playback at the time of S/W decoder?\r\n\r\nFor example, the MX player is playing by adding a separate external codec instead of playing it as a codec that is not supported by the S/W decoder."
      },
      {
        "user": "microkatz",
        "created_at": "2023-06-13T14:53:04Z",
        "body": "Thank you for your patience. I'm sorry, but I am not at liberty to advise on licensing concerns for commercial apps. I would suggest contacting Dolby with the parameters of how you intend to use their encodings and your questions. \r\n\r\nI'm going to close the issue."
      }
    ]
  },
  {
    "number": 11183,
    "title": "ERROR_CODE_PARSING_CONTAINER_MALFORMED 3001 com.google.android.exoplayer2.ParserException: Loading finished before preparation is complete",
    "created_at": "2023-05-25T12:46:49Z",
    "closed_at": "2023-07-10T08:30:09Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/11183",
    "body": "### Bug\r\n\r\nHello, I am trying to add FfmpegExtractor implements Extractor  to Exo Extractors , yes i do it .\r\nBut the runtime was wrong.\r\n\r\n**Error like this**:\r\n com.google.android.exoplayer2.ParserException: Loading finished before preparation is complete.\r\n\r\n**This error occurred in this part of the source code**：\r\nclass: ProgressiveMediaPeriod \r\nmethod: maybeThrowPrepareError\r\n\r\nNow, can you help me ?\r\nor  \r\nCan you provide some suggestions for extending the FfmpegEx embedding into the ExoPlayer？\r\n.\r\n**My FfmpegExtractor like this.**\r\n`public class FfmpegExtractor implements Extractor {\r\n\r\n  private static final int OUTPUT_BUFFER_SIZE_16BIT = 65536;\r\n  private final FfmpegParserJni ffmpegParserJni;\r\n  private final ByteBuffer byteBuffer;\r\n  @Nullable\r\n  private ExtractorInput extractorInput;\r\n  private ExtractorOutput extractorOutput;\r\n  private TrackOutput trackOutput;\r\n  \r\n  private final ParsableByteArray outputBuffer;\r\n  private boolean isParserMetadata = false;\r\n\r\n  public FfmpegExtractor(String url) throws FfmpegDecoderException {\r\n                  outputBuffer = new ParsableByteArray();\r\n                  ffmpegParserJni = new FfmpegParserJni(url);\r\n                 byteBuffer = ByteBuffer.allocateDirect(OUTPUT_BUFFER_SIZE_16BIT).order(ByteOrder.nativeOrder());\r\n                 byteBuffer.position(0);\r\n                 byteBuffer.limit(OUTPUT_BUFFER_SIZE_16BIT);\r\n  }\r\n\r\n  @Override\r\n  public boolean sniff(ExtractorInput input) throws IOException {\r\n                return true;\r\n  }\r\n\r\n  @Override\r\n  public void init(ExtractorOutput output) {\r\n                extractorOutput = output;\r\n                trackOutput = extractorOutput.track(0, C.TRACK_TYPE_AUDIO);\r\n               if (!isParserMetadata) {\r\n                      parserMetadata();\r\n               }\r\n  }\r\n\r\n  @Override\r\n  public @ReadResult int read(ExtractorInput input, PositionHolder seekPosition)throws IOException {\r\n                if (!isParserMetadata){\r\n                        parserMetadata();\r\n                        return RESULT_CONTINUE;\r\n                }\r\n                boolean read = ffmpegParserJni.read(byteBuffer);\r\n                if (!read){\r\n                         return RESULT_END_OF_INPUT;\r\n                }\r\n              outputBuffer.reset(byteBuffer.array());\r\n              trackOutput.sampleData(outputBuffer, outputBuffer.limit());\r\n              return RESULT_CONTINUE;\r\n  }\r\n\r\n  @Override\r\n  public void seek(long position, long timeUs) {\r\n              ffmpegParserJni.seek(timeUs);\r\n  }\r\n\r\n  @Override\r\n  public void release() {\r\n              ffmpegParserJni.release();\r\n  }\r\n\r\n  private void parserMetadata() {\r\n   // my audio file format, default\r\n    Format mediaFormat =\r\n        new Format.Builder()\r\n            .setSampleMimeType(MimeTypes.AUDIO_RAW)\r\n            .setAverageBitrate(96648)\r\n            .setPeakBitrate(96648)\r\n            .setMaxInputSize(3689186)\r\n            .setChannelCount(2)\r\n            .setSampleRate(44100)\r\n            .setPcmEncoding(getPcmEncoding(16))\r\n            .build();\r\n    output.format(mediaFormat);\r\n    isParserMetadata = true;\r\n    extractorOutput.endTracks();\r\n  }\r\n}`",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/11183/comments",
    "author": "liuguangsen",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2023-05-25T14:29:03Z",
        "body": "I'm afraid we can't really help in detail with app-specific extensions. If you encounter problems using the existing interface, I'd suggest reading the Javadoc in detail again and compare your implementation to an existing default implementation of the same interface in ExoPlayer to find the differences. "
      }
    ]
  },
  {
    "number": 11172,
    "title": " Request for Demo Code to Access exo_duration TextView in Java Code",
    "created_at": "2023-05-22T20:32:43Z",
    "closed_at": "2023-07-10T08:29:06Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/11172",
    "body": "** Request for Demo Code to Access exo_duration TextView in Java Code*\r\n\r\n\r\n\r\nI hope this issue finds you well. I am writing to kindly request a demo code that demonstrates how to access the \"exo_duration\" TextView in Java code using ExoPlayer. I am particularly interested in understanding how to retrieve and display the duration of a media file being played.\r\n\r\nAs a backend developer working on a project that involves media playback, I have been exploring the capabilities of ExoPlayer, and I find it to be an excellent library for handling multimedia content. However, I am currently facing a challenge in accessing the \"exo_duration\" TextView programmatically within my Java code.\r\n\r\nI would greatly appreciate it if you could provide me with a demo code snippet or an example that illustrates the process of accessing the \"exo_duration\" TextView and obtaining the duration value. This would immensely help me in understanding the implementation details and further enhance my development skills with ExoPlayer.\r\n\r\nAdditionally, if there are any specific instructions or prerequisites for integrating the demo code into an existing project, please provide them along with the code. Any additional documentation or resources related to this topic would also be highly beneficial.\r\n\r\nThank you in advance for your time and support. I eagerly await your response and the requested demo code. If you have any further questions or require more information, please do not hesitate to reach out to me.\r\n\r\nLooking forward to your positive response.\r\n\r\nBest regards,\r\n\r\nHGSC\r\n\r\nHGSC.learn@gmail.com\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/11172/comments",
    "author": "HGSC-Learn",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2023-05-24T08:10:15Z",
        "body": "Please file new issues in the media3 issue tracker as requested by the template.\r\n\r\nFor your actual question: To obtain the duration from the player, you should just be able to call `player.getDuration()` instead of trying to access the text value of an UI element. "
      }
    ]
  },
  {
    "number": 11154,
    "title": "Exoplayer without IMA extension in an Android background service",
    "created_at": "2023-05-07T06:03:38Z",
    "closed_at": "2023-06-12T01:05:43Z",
    "labels": [
      "question",
      "closed-by-bot"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/11154",
    "body": "Hello,\r\n\r\nI'm currently building an Android Service that run as a system application on Android TV, in background. I'm using the Exoplayer with the IMA library to display ADS on a overlay, on top of other apps. I preload the ads and play them later on and it looks great. However, I sometime face issue, on some devices, when the app underneath is requesting the decoder and if I have a an AD in cache. It will basically call the onPlayerError listener forcing me to release the player.\r\n\r\nI've been trying many things, including using different hardware / software decoder and video format. Now here is couple thing i wanted to ask:\r\n\r\n- Is it possible to preload the ads by only downloading the file and prepare the codec only when I want to play?\r\n- Is it possible to preload the ads, then release the codec once loaded and grab the codec again when I want to play?\r\n\r\nThank you\r\nMax",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/11154/comments",
    "author": "MaxmaxB",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2023-05-09T11:24:37Z",
        "body": "> Is it possible to preload the ads by only downloading the file and prepare the codec only when I want to play?\r\n> Is it possible to preload the ads, then release the codec once loaded and grab the codec again when I want to play?\r\n\r\nAll of this is already happening by default when playing ads with ExoPlayer's IMA extension. Do you have any indication that is does not happen in this way? If so, please provide more concrete reproduction steps, ideally using the ExoPlayer demo app (to avoid any issues introduced by your app code around the library). \r\n\r\n> in background\r\n\r\nAll interactions with the IMA SDK occur on the main thread of the application and the player has to run on the same thread to avoid any communication problems. Could you also clarify what \"background\" means in this context exactly? "
      },
      {
        "user": "google-oss-bot",
        "created_at": "2023-06-01T01:05:33Z",
        "body": "<!-- event: mark-stale -->\nHey @MaxmaxB. We need more information to resolve this issue but there hasn't been an update in 14 weekdays. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2023-06-12T01:05:42Z",
        "body": "<!-- event: close-stale -->\nSince there haven't been any recent updates here, I am going to close this issue.\n\n@MaxmaxB if you're still experiencing this problem and want to continue the discussion just leave a comment here and we are happy to re-open this."
      }
    ]
  },
  {
    "number": 11104,
    "title": "Does ExoPlayer support RTMPS protocol ?",
    "created_at": "2023-04-07T08:44:24Z",
    "closed_at": "2023-05-09T01:05:25Z",
    "labels": [
      "question",
      "closed-by-bot"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/11104",
    "body": "Hi everyone,\r\n\r\nI want to ask if, like RTMP support, ExoPlayer also supports RTMPS protocol ?\r\n\r\nThanks in advance.\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/11104/comments",
    "author": "Baldaz88",
    "comments": [
      {
        "user": "icbaker",
        "created_at": "2023-04-11T17:17:09Z",
        "body": "Have you tried it? What happened?"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2023-05-01T01:05:19Z",
        "body": "<!-- event: mark-stale -->\nHey @Baldaz88. We need more information to resolve this issue but there hasn't been an update in 14 weekdays. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2023-05-09T01:05:25Z",
        "body": "<!-- event: close-stale -->\nSince there haven't been any recent updates here, I am going to close this issue.\n\n@Baldaz88 if you're still experiencing this problem and want to continue the discussion just leave a comment here and we are happy to re-open this."
      }
    ]
  },
  {
    "number": 11102,
    "title": "Exoplayer playing but nothing on surfaceView, only last frame when it ends sometimes",
    "created_at": "2023-04-05T11:15:43Z",
    "closed_at": "2023-05-09T01:05:29Z",
    "labels": [
      "question",
      "closed-by-bot"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/11102",
    "body": "Hi,\r\n\r\n i am using 2.18.5 exoplayer and it runs on all our devices ok except on one...  \r\nI get the callback that video is playing but surface is empty all the time. The only thing i sometimes see is the end frame of the video when closing the fragment. In which direction should i look? Any ideas.\r\n\r\nthank you for the help in advance!\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/11102/comments",
    "author": "alenloncaric",
    "comments": [
      {
        "user": "icbaker",
        "created_at": "2023-04-11T17:16:25Z",
        "body": "There isn't really enough information here to help you.\r\n\r\nWhat devices are working and which one has the problem?\r\n\r\nDoes the issue reproduce in the demo app?"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2023-05-01T01:05:21Z",
        "body": "<!-- event: mark-stale -->\nHey @alenloncaric. We need more information to resolve this issue but there hasn't been an update in 14 weekdays. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2023-05-09T01:05:29Z",
        "body": "<!-- event: close-stale -->\nSince there haven't been any recent updates here, I am going to close this issue.\n\n@alenloncaric if you're still experiencing this problem and want to continue the discussion just leave a comment here and we are happy to re-open this."
      }
    ]
  },
  {
    "number": 11099,
    "title": "There is no sound when playing a .webm file, suspected to be a sampling rate issue",
    "created_at": "2023-04-05T03:29:53Z",
    "closed_at": "2023-05-09T01:05:35Z",
    "labels": [
      "question",
      "closed-by-bot"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/11099",
    "body": "There is no sound when playing a .webm file, suspected to be a sampling rate issue,\r\nThe ffmpeg parsing sampling rate is 48KHZ, while the exolayer displays 24KHZ\r\n\r\n```\r\n  Metadata:\r\n    COMPATIBLE_BRANDS: 3gp43gp53g2a\r\n    MAJOR_BRAND     : 3gp4\r\n    MINOR_VERSION   : 512\r\n    ENCODER         : Lavf58.29.100\r\n  Duration: 00:03:32.57, start: -0.003000, bitrate: 2044 kb/s\r\n  Stream #0:0(eng): Video: vp9 (Profile 0), yuv420p(tv), 1280x720, SAR 1:1 DAR 16:9, 32 fps, 32 tbr, 1k tbn, 1k tbc (default)\r\n    Metadata:\r\n      HANDLER_NAME    : vide\r\n      ENCODER         : Lavc58.54.100 libvpx-vp9\r\n      DURATION        : 00:03:32.569000000\r\n  Stream #0:1(eng): Audio: opus, 48000 Hz, stereo, fltp (default)\r\n    Metadata:\r\n      HANDLER_NAME    : soun\r\n      ENCODER         : Lavc58.54.100 libopus\r\n      DURATION        : 00:03:32.562000000\r\n```\r\n\r\n```\r\n D/ExoPlayer: tracks [eventTime=0.09, mediaPos=0.00, window=0, period=0\r\n D/ExoPlayer:   group [\r\n D/ExoPlayer:     [X] Track:0, id=1, mimeType=video/x-vnd.on2.vp9, res=1280x720, language=en, selectionFlags=[default], supported=YES\r\n D/ExoPlayer:   ]\r\n D/ExoPlayer:   group [\r\n D/ExoPlayer:     [X] Track:0, id=2, mimeType=audio/opus, channels=2, sample_rate=24000, language=en, selectionFlags=[default], supported=YES\r\n D/ExoPlayer:   ]\r\n D/ExoPlayer: ]\r\n```",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/11099/comments",
    "author": "948397275",
    "comments": [
      {
        "user": "948397275",
        "created_at": "2023-04-05T03:37:53Z",
        "body": "Using MediaInfo to also display 24KHZ"
      },
      {
        "user": "icbaker",
        "created_at": "2023-04-11T16:43:43Z",
        "body": "Please either upload the problematic file here or send it to dev.exoplayer@gmail.com using the subject `Issue #11099`. Please also update this issue to indicate you’ve done this."
      },
      {
        "user": "google-oss-bot",
        "created_at": "2023-05-01T01:05:22Z",
        "body": "<!-- event: mark-stale -->\nHey @948397275. We need more information to resolve this issue but there hasn't been an update in 14 weekdays. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2023-05-09T01:05:34Z",
        "body": "<!-- event: close-stale -->\nSince there haven't been any recent updates here, I am going to close this issue.\n\n@948397275 if you're still experiencing this problem and want to continue the discussion just leave a comment here and we are happy to re-open this."
      }
    ]
  },
  {
    "number": 11097,
    "title": "How to get pcm data during video playing?",
    "created_at": "2023-04-04T06:07:20Z",
    "closed_at": "2023-04-04T09:10:36Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/11097",
    "body": "How to get pcm data during video playing? The exoplayer version used is 2.18.5.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/11097/comments",
    "author": "GreenVegetables",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2023-04-04T08:14:58Z",
        "body": "You can add a `TeeAudioProcessor` to `DefaultAudioSink` (by overriding `DefaultRenderersFactory.buildAudioSink`). In there, you can specify an `AudioBufferSink` to write your pcm data to. You can also use the predefined `WavFileAudioBufferSink` to write to a wav file if needed. Alternatively, you can write your own `AudioProcessor` to modify the pcm audio as needed."
      },
      {
        "user": "GreenVegetables",
        "created_at": "2023-04-04T09:08:41Z",
        "body": "> You can add a `TeeAudioProcessor` to `DefaultAudioSink` (by overriding `DefaultRenderersFactory.buildAudioSink`). In there, you can specify an `AudioBufferSink` to write your pcm data to. You can also use the predefined `WavFileAudioBufferSink` to write to a wav file if needed. Alternatively, you can write your own `AudioProcessor` to modify the pcm audio as needed.\r\n\r\nThank you. Following these steps, I successfully obtained the pcm data."
      }
    ]
  },
  {
    "number": 11092,
    "title": "Detect if ExoPlayer instance is used by any PlayerView",
    "created_at": "2023-04-02T12:36:06Z",
    "closed_at": "2023-07-20T01:05:03Z",
    "labels": [
      "question",
      "closed-by-bot"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/11092",
    "body": "I am currently developing a library that utilizes Exo Player. The library's service can receive a merging source that includes both audio and video files. To optimize data loading, I intend to implement a feature that checks whether the ExoPlayer instance is connected to any PlayerView. If it is, I will set the track selection to use video streams, otherwise only audio.\r\n\r\nMy question is: is this feature feasible with the current version of Exo Player?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/11092/comments",
    "author": "androidplayer1",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2023-04-04T08:06:11Z",
        "body": "This isn't easily possible I'm afraid. But it should also be fairly straight-forward to handle this in your app? For example, maintain a field/list of ExoPlayer instances that are connected to a PlayerView. Every time you connect or disconnect from a view, you can update this list."
      },
      {
        "user": "androidplayer1",
        "created_at": "2023-04-05T21:23:29Z",
        "body": "> This isn't easily possible I'm afraid. But it should also be fairly straight-forward to handle this in your app? For example, maintain a field/list of ExoPlayer instances that are connected to a PlayerView. Every time you connect or disconnect from a view, you can update this list.\r\n\r\nI do not own the logic outside. I wanted just to implement the service player without having domain or access to the app itself. I just wanted to make it more performant automatically that in case the player view is attached, I would select video track otherwise only audio.\r\n\r\nLooks like the only option so far is to add an api to my service to notfiy about if player is attached or not."
      },
      {
        "user": "marcbaechinger",
        "created_at": "2023-04-05T21:52:50Z",
        "body": "I'm not sure I understand the context. Does your library build a player instance and then give that instance to an app to attach it to a player view? Does it help that you can use a `ForwardingPlayer` and monitor calls to `Player.setVideoSurface`, `setVideoTextureView` at al. ?"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2023-07-11T01:05:56Z",
        "body": "<!-- event: mark-stale -->\nHey @androidplayer1. We need more information to resolve this issue but there hasn't been an update in 14 weekdays. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2023-07-20T01:05:02Z",
        "body": "<!-- event: close-stale -->\nSince there haven't been any recent updates here, I am going to close this issue.\n\n@androidplayer1 if you're still experiencing this problem and want to continue the discussion just leave a comment here and we are happy to re-open this."
      }
    ]
  },
  {
    "number": 11087,
    "title": "How to notify volumeChange events to OM SDK",
    "created_at": "2023-03-28T17:18:15Z",
    "closed_at": "2023-05-02T01:05:39Z",
    "labels": [
      "question",
      "closed-by-bot"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/11087",
    "body": "Hi,\r\n\r\nI use Exoplayer IMA Extension v2.18.1 to custom a ad player with a  Mute/Unmute button\r\n\r\nI used charles to check IAB ad event and found Exoplayer IMA could not  notify volumeChange events to OM SDK .\r\n\r\nHow to notify volumeChange events to OM SDK?\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/11087/comments",
    "author": "WuBingHui",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2023-04-03T07:56:17Z",
        "body": "ExoPlayer's IMA extension is reporting the value of `player.getVolume()` to the IMA `com.google.ads.interactivemedia.v3.api.player.VolumeProvider`.  I can't see this method being triggered though and I'm not sure under which circumstances the IMA SDK requests a volume. Do you know when this is meant to be happen? If not, this is probably a question for your IMA contact and not for ExoPlayer."
      },
      {
        "user": "google-oss-bot",
        "created_at": "2023-04-21T01:05:54Z",
        "body": "<!-- event: mark-stale -->\nHey @WuBingHui. We need more information to resolve this issue but there hasn't been an update in 14 weekdays. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2023-05-02T01:05:38Z",
        "body": "<!-- event: close-stale -->\nSince there haven't been any recent updates here, I am going to close this issue.\n\n@WuBingHui if you're still experiencing this problem and want to continue the discussion just leave a comment here and we are happy to re-open this."
      }
    ]
  },
  {
    "number": 11066,
    "title": "Getting exception: com.google.android.exoplayer2.ExoPlaybackException: MediaCodecAudioRenderer",
    "created_at": "2023-03-15T15:34:53Z",
    "closed_at": "2023-06-12T01:05:52Z",
    "labels": [
      "question",
      "bug: device specific",
      "closed-by-bot"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/11066",
    "body": "Hi according to our support team we are getting next exception: \r\n\r\n\r\ncom.google.android.exoplayer2.ExoPlaybackException: MediaCodecAudioRenderer error, index=1, format=Format(null, null, null, audio/raw, null, -1, null, [-1, -1, -1.0], [2, 48000]), format_supported=YES at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(:43) at android.os.Handler.dispatchMessage(Handler.java:103) at android.os.Looper.loop(Looper.java:214) at android.os.HandlerThread.run(HandlerThread.java:67) Caused by: com.google.android.exoplayer2.audio.AudioSink$InitializationException: AudioTrack init failed 0 Config(48000, 12, 65600) at com.google.android.exoplayer2.audio.DefaultAudioSink$Configuration.buildAudioTrack(:7) at com.google.android.exoplayer2.audio.DefaultAudioSink.buildAudioTrack(:1) at com.google.android.exoplayer2.audio.DefaultAudioSink.buildAudioTrackWithRetry(:1) at com.google.android.exoplayer2.audio.DefaultAudioSink.initializeAudioTrack(:2) at com.google.android.exoplayer2.audio.DefaultAudioSink.handleBuffer(:16) at com.google.android.exoplayer2.audio.MediaCodecAudioRenderer.processOutputBuffer(:7) at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.drainOutputBuffer(:32) at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.render(:16) at com.google.android.exoplayer2.ExoPlayerImplInternal.doSomeWork(:14) at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(:25) ... 3 more Suppressed: com.google.android.exoplayer2.audio.AudioSink$InitializationException: AudioTrack init failed 0 Config(48000, 12, 65600) ... 13 more Caused by: java.lang.UnsupportedOperationException: Cannot create AudioTrack at android.media.AudioTrack$Builder.build(AudioTrack.java:1018) at com.google.android.exoplayer2.audio.DefaultAudioSink$Configuration.createAudioTrackV29(:11) at com.google.android.exoplayer2.audio.DefaultAudioSink$Configuration.createAudioTrack(:2) at com.google.android.exoplayer2.audio.DefaultAudioSink$Configuration.buildAudioTrack(:1) ... 12 more Caused by: java.lang.UnsupportedOperationException: Cannot create AudioTrack at android.media.AudioTrack$Builder.build(AudioTrack.java:1018) at com.google.android.exoplayer2.audio.DefaultAudioSink$Configuration.createAudioTrackV29(:11) at com.google.android.exoplayer2.audio.DefaultAudioSink$Configuration.createAudioTrack(:2) at com.google.android.exoplayer2.audio.DefaultAudioSink$Configuration.buildAudioTrack(:1) ... 12 more\r\n\r\nI have investigated this error and I found that main possible reasons: \r\n\r\n- **Memory leak in the application**, not releasing the player resources can cause the initialisation of the application to fail. That cause has been ruled out as it has been checked that the player instance is freed correctly.\r\n\r\n- **We can see in the logs that audio decoder is released after getting an error first time**: \r\n\r\naudioDecoderReleased [eventTime=1.67, mediaPos=30.70, window=0, period=0, c2.android.aac.decoder]\r\n\r\nAfter that we retry and we still get the same error. \r\n\r\n- **Unsupported audio format**: audio codec used is:  audio/mp4a-latm ,  according to the logs we can see the format is supported by the device.\r\n\r\n**- Bad media?? audio chunks are corrupted.** \r\n\r\n\r\nDo you have any idea more what could be the root of the cause? Since it is not really clear wha could be the reason apart from bad media chunks being returned from the content source.\r\n\r\nI have sent report a logs to exoplayer gmail account.  \r\n\r\n\r\n\r\n\r\n\r\n \r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/11066/comments",
    "author": "javaboboApp",
    "comments": [
      {
        "user": "christosts",
        "created_at": "2023-03-20T08:44:25Z",
        "body": "The logs show the crash is coming from the platform `AudioTrack` when creating the instance, so it's not bad media because the player has not fed media yet to `AudioTrack` yet.\r\n\r\nThe logs sent via email say that the `c2.android.aac.decoder` (which correclty maps to audio/mp4a-latm)  is acquired and released. But when the exception happens, the logged audio format is `audio/raw`. This format is usually used when the decoder is only used for decryption and the actual audio data is sent to AudioTrack over passthrough. In a typical flow, only one of the two should have happened, either a decoder should have been acquired for local decoding and the printed format should have been  `audio/mp4a-latm`, or the `audio/raw` decoder should have been acquired only for decryption and data should have been sent to AudioTrack. I'm not sure why both things are logged. Perhaps there is a bug how things are logged in 2.15. It'd be good if we can get more data, and ideally a bug-report.\r\n\r\nSome follow-up questions:\r\n1. Are you able to reproduce locally? Getting a bug-report from the device after the error happens will help us see if the platform audio components log an error.\r\n2. Are you able to reproduce using the ExoPlayer demo app? That would eliminate any app-specific parameters and we can focus on the player. \r\n3. Alternatively, are you using any customizations with ExoPlayer, and if yes, what exactly?\r\n4. Can you share the content to us so we can play it with the demo app? I'd like to see how with your content the player produces the log output that you sent us (=> acquiring the aac decoder and also logging the \"audio/raw\" MIME type).\r\n5. Have you seen this error on any other device? \r\n\r\n\r\n"
      },
      {
        "user": "javaboboApp",
        "created_at": "2023-03-21T11:13:47Z",
        "body": "Hi @christosts  I can answer the questions: \r\n\r\n1. Are you able to reproduce locally? Getting a bug-report from the device after the error happens will help us see if the platform audio components log an error.\r\n\r\nI am not able to reproduce it locally since it errors happen not very often.\r\n\r\n2. Are you able to reproduce using the ExoPlayer demo app? That would eliminate any app-specific parameters and we can focus on the player.\r\n\r\nI have to try to play content using the demo app, and I am not getting errors. Since we are using the same audio codecs, video codecs for all the content.\r\n\r\n3. Alternatively, are you using any customisations with ExoPlayer, and if yes, what exactly?\r\n\r\nWe customising PlayerControlView,PlayerView only. Also we are using a CustomBandwidthMeter in order to change the initial bitrate. \r\n\r\nWe are using DRM license. And we are customising also HttpMediaDrmCallback in order to detect if token use by the license needs to be refreshed. Using a callback when the function executeKeyRequest is executed we check if drm token is expired. If the token is expired we refresh the token and update keyRequestProperties (using the new Bearer xxx header key). You can see this happening in the logs \"[MediaSourceGenerator] updateRequestPropertiesIfNeeded called\"\r\n\r\n4. Can you share the content to us so we can play it with the demo app? I'd like to see how with your content the player produces the log output that you sent us (=> acquiring the aac decoder and also logging the \"audio/raw\" MIME type).\r\n\r\n I will send you another normal mpd file , the issue looks happening in linear channel most of the time. \r\n \r\n 5. Have you seen this error on any other device?\r\n \r\n We only have this device since product was created for this specific device. \r\n \r\n By the way the exoplayer version that you are using is **2.17.1** not **2.15.x**. \r\n \r\n Also I will send you more logs of another crash related to this possible bug. \r\n "
      },
      {
        "user": "christosts",
        "created_at": "2023-03-22T09:56:49Z",
        "body": "Thanks for the data. I tested the content which worked fine. As for the dubious logging (aac vs audio/raw), that's an unfortunate logging issue on ExoPlayer which can be misleading and I'm going to change it. But other that, things work as expected with the stream.\r\n\r\nFrom the sent logs, I see the failure comes from building the platform's AudioTrack which throws an UnsupportedOperationException with message `Cannot create AudioTrack`. This indicates an error is happening further down in the device and I cannot say what that would be, since the parameters used to create AudioTrack seem trivial (`Config(48000, 12, 65600)` => PCM stereo audio at 48Khz with 65KB buffer). I'm afraid this looks like a device specific issue. We could provide some more assistance if you are able to get a bug-report (or a copy of logcat) when the error happens on the device, the AudioTrack should log the error.\r\n\r\nHave you tried contacting the device OEM?"
      },
      {
        "user": "javaboboApp",
        "created_at": "2023-03-22T15:14:09Z",
        "body": "Thanks for the answer @christosts  I will be escalating this issue to OEM.   \r\n\r\nFor now, we do not have any possibility that allows us to gather system logs so we will need to integrate it and it can take a while. I will share this information as soon as I can, thanks again."
      },
      {
        "user": "google-oss-bot",
        "created_at": "2023-06-01T01:05:36Z",
        "body": "<!-- event: mark-stale -->\nHey @javaboboApp. We need more information to resolve this issue but there hasn't been an update in 14 weekdays. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2023-06-12T01:05:51Z",
        "body": "<!-- event: close-stale -->\nSince there haven't been any recent updates here, I am going to close this issue.\n\n@javaboboApp if you're still experiencing this problem and want to continue the discussion just leave a comment here and we are happy to re-open this."
      }
    ]
  },
  {
    "number": 11054,
    "title": "Audio Sink error",
    "created_at": "2023-03-10T16:59:05Z",
    "closed_at": "2023-03-16T07:55:16Z",
    "labels": [
      "question",
      "need more info"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/11054",
    "body": "On one of the HLS stream I am getting Audio Sink error from the time to time.\r\n\r\n```\r\n03-10 19:36:25.482  3049  3986 E MediaCodecAudioRenderer: Audio sink error\r\n03-10 19:36:25.482  3049  3986 E MediaCodecAudioRenderer:   com.google.android.exoplayer2.audio.AudioSink$UnexpectedDiscontinuityException: Unexpected audio track timestamp discontinuity: expected 1005666327999, got 1005670294666\r\n03-10 19:36:25.482  3049  3986 E MediaCodecAudioRenderer:       at com.google.android.exoplayer2.audio.DefaultAudioSink.handleBuffer(DefaultAudioSink.java:998)\r\n03-10 19:36:25.482  3049  3986 E MediaCodecAudioRenderer:       at com.google.android.exoplayer2.audio.MediaCodecAudioRenderer.processOutputBuffer(MediaCodecAudioRenderer.java:703)\r\n03-10 19:36:25.482  3049  3986 E MediaCodecAudioRenderer:       at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.drainOutputBuffer(MediaCodecRenderer.java:1894)\r\n03-10 19:36:25.482  3049  3986 E MediaCodecAudioRenderer:       at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.render(MediaCodecRenderer.java:792)\r\n03-10 19:36:25.482  3049  3986 E MediaCodecAudioRenderer:       at com.google.android.exoplayer2.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:989)\r\n03-10 19:36:25.482  3049  3986 E MediaCodecAudioRenderer:       at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:490)\r\n03-10 19:36:25.482  3049  3986 E MediaCodecAudioRenderer:       at android.os.Handler.dispatchMessage(Handler.java:102)\r\n03-10 19:36:25.482  3049  3986 E MediaCodecAudioRenderer:       at android.os.Looper.loopOnce(Looper.java:201)\r\n03-10 19:36:25.482  3049  3986 E MediaCodecAudioRenderer:       at android.os.Looper.loop(Looper.java:288)\r\n03-10 19:36:25.482  3049  3986 E MediaCodecAudioRenderer:       at android.os.HandlerThread.run(HandlerThread.java:67)\r\n```\r\n\r\nWhat does it mean by ` Unexpected audio track timestamp discontinuity`.\r\nIs it due to stream or missing somethink in exoplayer implementation?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/11054/comments",
    "author": "wishygupta",
    "comments": [
      {
        "user": "wishygupta",
        "created_at": "2023-03-10T17:14:53Z",
        "body": "This is the sample master manifest \r\n\r\n`#EXTM3U\r\n#EXT-X-VERSION:3\r\n#EXT-X-INDEPENDENT-SEGMENTS\r\n#EXT-X-STREAM-INF:BANDWIDTH=158730,AVERAGE-BANDWIDTH=151800,CODECS=\"avc1.4d400c,mp4a.40.2\",RESOLUTION=320x180,FRAME-RATE=25.000\r\nmaster_180p.m3u8`\r\n\r\nCould the codec be the issue in this?\r\n"
      },
      {
        "user": "marcbaechinger",
        "created_at": "2023-03-13T11:12:54Z",
        "body": "> Is it due to stream or missing somethink in exoplayer implementation?\r\n\r\nCan you send us an URI to the stream? It would enable us to look into your question.\r\n\r\nIs this is a user visible issue or did you just find the stack trace in the logs?"
      }
    ]
  },
  {
    "number": 11036,
    "title": "Get current manifest from the player",
    "created_at": "2023-03-04T09:28:39Z",
    "closed_at": "2023-03-04T14:14:18Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/11036",
    "body": "I am looking for some additional network logs which can give me the current manifest as string \r\n```\r\nprivate val exoListener = object : Player.Listener {\r\n        override fun onTimelineChanged(timeline: Timeline, reason: Int) {\r\n            super.onTimelineChanged(timeline, reason)        \r\n            if (exoPlayer != null && exoPlayer!!.playWhenReady) {\r\n                val manifest: Any? = exoPlayer!!.currentManifest\r\n                if (manifest != null) {\r\n                    if (manifest is HlsManifest) \r\n                       readHLSManifest(manifest)\r\n                }\r\n            }\r\n        }\r\n    }\r\n```\r\n\r\nHow can I get this manifest in string format? Or is there any other method to do it?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/11036/comments",
    "author": "wishygupta",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2023-03-04T12:00:26Z",
        "body": "I think the API that the code snippet is using above is what's available. The player parses the HLS playlist and then provides it as part of the window.  \r\n\r\nUnder the hood the `getCurrentManifest` does `timeline.getWindow(getCurrentMediaItemIndex(), window).manifest`. There are different reasons for a timeline change. For HLS the manifest (or playlist) is available with the first timeline update with `TIMELINE_CHANGE_REASON_SOURCE_UPDATE` for the given window.\r\n\r\nThere is no text version available I'm afraid. Please note that `HlsPlaylist` may not contain all properties of the actual playlist but only what is actually used by the player.  The playlist is parsed by an `HlsPlaylistParser` that you can customize with `HlsMediaSource.Factory.setPlaylistParserFactory`. "
      }
    ]
  },
  {
    "number": 11020,
    "title": "Custom DataSourceFactory with Firebase auth idToken",
    "created_at": "2023-02-25T04:00:43Z",
    "closed_at": "2023-02-26T07:23:47Z",
    "labels": [
      "question",
      "needs triage"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/11020",
    "body": "How do I create a custom `DataSource.Factory` where it can run suspend code?\r\n\r\n```kt\r\nval defaultDataSourceFactory = DefaultHttpDataSource.Factory()\r\nval dataSourceFactory = DataSource.Factory {\r\n    val dataSource = defaultDataSourceFactory.createDataSource()\r\n    val idToken = FirebaseAuth.getInstance().currentUser!!.getIdToken(false) // <- Here return a Task not a String\r\n    dataSource.setRequestProperty(\"Authorization\", \"<supposed id token>\")\r\n    dataSource\r\n}\r\nval player = ExoPlayer\r\n    .Builder(this)\r\n    .setMediaSourceFactory(DefaultMediaSourceFactory(dataSourceFactory))\r\n    .build()\r\n```",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/11020/comments",
    "author": "chientrm",
    "comments": [
      {
        "user": "ItzNotABug",
        "created_at": "2023-02-25T11:41:49Z",
        "body": "1. Init the Id-Token early on & keep a reference to it\r\n2. Use `suspendCoroutine` & wait until the Id-Token is received\r\nSomething like:\r\n\r\n```kotlin\r\nsuspend fun getIdToken(): String {\r\n    return suspendCoroutine { continuation ->\r\n        val user = FirebaseAuth.getInstance().currentUser\r\n        if (user != null) {\r\n            user.getIdToken(false).addOnSuccessListener { idTokenResult ->\r\n                continuation.resume(idTokenResult.token)\r\n            }.addOnFailureListener { exception ->\r\n                continuation.resumeWithException(exception)\r\n            }\r\n        } else {\r\n            continuation.resumeWithException(IllegalStateException(\"User is not authenticated\"))\r\n        }\r\n    }\r\n}\r\n\r\nval dataSourceFactory = DataSource.Factory {\r\n    val dataSource = defaultDataSourceFactory.createDataSource()\r\n    val idToken = runBlocking { getIdToken() }\r\n    dataSource.setRequestProperty(\"Authorization\", \"Bearer $idToken\")\r\n    dataSource\r\n}\r\n```"
      }
    ]
  },
  {
    "number": 10983,
    "title": "Getting live window time of HLS live stream",
    "created_at": "2023-02-14T06:38:44Z",
    "closed_at": "2023-03-05T18:55:27Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10983",
    "body": "I have a live HLS Stream.\r\nIs there any API which can help me get the current live window time of Live Stream",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10983/comments",
    "author": "wishygupta",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2023-02-14T10:59:38Z",
        "body": "I'm not sure what you mean with `current live window time`.\r\n\r\nYou can get the duration of the current live window as follows:\r\n\r\n```\r\nTimeline timeline = player.getCurrentTimeline();\r\ntimeline.getWindow(player.getCurrentMediaItemIndex(), new Timeline.Window()).getDurationMs();\r\n```\r\n\r\nThe position within this window is the current position:\r\n\r\n```\r\nplayer.getCurrentPosition();\r\n```\r\n\r\n\r\n\r\n"
      }
    ]
  },
  {
    "number": 10962,
    "title": "AudioManager API usage in ExoPlayer",
    "created_at": "2023-02-03T18:50:02Z",
    "closed_at": "2023-02-09T10:56:28Z",
    "labels": [
      "question",
      "needs triage"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10962",
    "body": "Want to start a discussion around usage of the AudioManager API in the exoplayer.\r\nWe are seeing a number of new ANR's related to the component that is new in the exoplayer 2.16.1 - `StreamingVolumeManager`.\r\n\r\nAfter an investigation we find some minor issues in the component and we have some suggestions to how it's usage could be improved.\r\n\r\nWe want to get your thoughts on that.\r\n\r\n1. You are using internal platform API to listen to volume changes that might behave differently on different devices.\r\nNot sure how it behaves on your's - I'm getting 5 broadcasts of the volume change on every volume button click on my `OnePlus85g`. \r\nAs a result player makes 10 calls to the AudioManager (1 to get volume and 1 to get mute state).\r\nYou might think it is fast, but in fact those calls are IPC calls that getting result from the process responsible for the AudioSystem.\r\n\r\nWhen you have more than one player instantiated (we might have up to 6) every player does 10 calls on it's player control thread.\r\n\r\nWe know that on some devices this calls might cause ANR's, so they potentially could block the player thread either.\r\n\r\nWe are going to try following changes in our fork of exoplayer:\r\n- filter out broadcasts by the stream type in the StreamingVolumeManager\r\n- Extract the AudioManager interface and provide default implementation as part of ExoPlayer initialization\r\n- Use AudioManager to manipulate with audio.\r\n- Provide a way to override the instance of the player's AudioManager though the ExoPlayer builder\r\n\r\nIn our internal implementation of builder we:\r\n- Will make sure it accesses the AudioManager API from the single thread (always main for simplicity on first iteration). Part of problems might be coming from accessing the API from multiple different threads.\r\n- Will update the cached values from broadcasts (use values provided in the broadcast instead of re-requesting the values.)\r\n- We will share an instance between different players\r\n\r\nWant to get your thoughts on that.\r\n\r\nTo me an opportunity to have your player control thread hang is scary.\r\nI don't think you have any monitor for that in place at the moment or do you?\r\nI don't think any metric we have will be able to detect such a hang at the moment.\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10962/comments",
    "author": "dryganets",
    "comments": [
      {
        "user": "tianyif",
        "created_at": "2023-02-07T20:04:03Z",
        "body": "Hi @dryganets,\r\n\r\nThanks for the report! Actually, we are considering to add an opt-in `ExoPlayer.Builder` to allow the apps to enable / disable the `StreamVolumeManager`, since the device volume management is not recommended to be part of the local player. Can this solution solve your problem?"
      },
      {
        "user": "dryganets",
        "created_at": "2023-02-07T20:29:19Z",
        "body": "Yep that would solve the problem."
      },
      {
        "user": "tianyif",
        "created_at": "2023-02-09T10:56:28Z",
        "body": "Thanks for the confirmation. Please expect our fix in the near future."
      }
    ]
  },
  {
    "number": 10957,
    "title": "video processing",
    "created_at": "2023-02-01T17:55:01Z",
    "closed_at": "2023-02-13T14:37:10Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10957",
    "body": "Hi. I want to ask a question regarding video processing.\r\n\r\nIs there any way for decoding two videos at some time? \r\n\r\nThe use case is simple: Imagine you have a video and you want to add overlay video.\r\n\r\nI couldn't find the answer to this.\r\n\r\nThanks.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10957/comments",
    "author": "ArshakManukyan",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2023-02-13T14:37:10Z",
        "body": "> Is there any way for decoding two videos at some time?\r\n> The use case is simple: Imagine you have a video and you want to add overlay video.\r\n\r\nThe short answer is that there isn't an easy way to do this at the moment.\r\n\r\n- We currently don't support having two videos playing via one ExoPlayer out of the box. So for now you'll need to use multiple players and keep them roughly synchronized yourself, or add this functionality via customization (see for example the comment near the end of #6723).\r\n- Having done that, the two players will need their own output surfaces. They could come from two separate surface views, but for more flexibility in how to do the blending (for example, if you want to make one of them transcluent) you will probably need to render off-screen to `SurfaceTexture`s and process the video frames in GL textures.\r\n- Android decoders don't support outputting translucent videos, so you may need to get the frames from the overlay into OpenGL anyway to do chroma-key or similar to generate an alpha channel, then blend the frames in a shader and output the result.\r\n\r\nDoing all this customization is a lot of work. Later this year we expect to have more components available to make it easier, for example, we are currently working on adding `ExoPlayer.setVideoEffects` (that method will take what are basically factories for GL shader programs to apply to each video frame), then at some point we expect to have support for compositing multiple videos together."
      }
    ]
  },
  {
    "number": 10946,
    "title": "RtspMediaSource with not available RTSP stream will block whole ExoPlayer",
    "created_at": "2023-01-26T14:49:34Z",
    "closed_at": "2023-01-27T11:58:54Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10946",
    "body": "Hello,\r\nI try to implement a player which mixes local video files in playlist with public RTSP streams for my project.\r\nI found that if RTSP Server is not accesible (dead) - Exoplayer will lock whole play thread even at playing an earlier local MP4 file in playlist.\r\n\r\nIt will finally, after about 2 minutes, fire ExoPlaybackException\r\n\r\nI cannot find a timeout option to setup.\r\n```\r\nvar mediaSourceRTSP =\r\n    RtspMediaSource.Factory()\r\n        .setForceUseRtpTcp(true)\r\n        .setTimeoutMs(3000)\r\n        .createMediaSource(newMediaItem)\r\n```\r\n\r\nAnd the Exception which fires about 2 minutes later:\r\n\r\n```\r\nE/ExoPlayerImplInternal: Playback error\r\n      com.google.android.exoplayer2.ExoPlaybackException: Source error\r\n        at com.google.android.exoplayer2.ExoPlayerImplInternal.handleIoException(ExoPlayerImplInternal.java:637)\r\n        at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:613)\r\n        at android.os.Handler.dispatchMessage(Handler.java:102)\r\n        at android.os.Looper.loop(Looper.java:223)\r\n        at android.os.HandlerThread.run(HandlerThread.java:67)\r\n     Caused by: java.net.ConnectException: failed to connect to /11.201.0.110 (port 11035) from /:: (port 58066): connect failed: ETIMEDOUT (Connection timed out)\r\n        at libcore.io.IoBridge.connect(IoBridge.java:142)\r\n        at java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:142)\r\n        at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:390)\r\n        at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:230)\r\n        at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:212)\r\n        at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:436)\r\n        at java.net.Socket.connect(Socket.java:621)\r\n        at java.net.Socket.connect(Socket.java:570)\r\n        at java.net.Socket.<init>(Socket.java:450)\r\n        at java.net.Socket.<init>(Socket.java:218)\r\n        at javax.net.DefaultSocketFactory.createSocket(SocketFactory.java:279)\r\n        at com.google.android.exoplayer2.source.rtsp.RtspClient.getSocket(RtspClient.java:304)\r\n        at com.google.android.exoplayer2.source.rtsp.RtspClient.start(RtspClient.java:198)\r\n        at com.google.android.exoplayer2.source.rtsp.RtspMediaPeriod.prepare(RtspMediaPeriod.java:158)\r\n        at com.google.android.exoplayer2.source.MaskingMediaPeriod.prepare(MaskingMediaPeriod.java:145)\r\n        at com.google.android.exoplayer2.source.MaskingMediaPeriod.prepare(MaskingMediaPeriod.java:145)\r\n        at com.google.android.exoplayer2.ExoPlayerImplInternal.maybeUpdateLoadingPeriod(ExoPlayerImplInternal.java:1981)\r\n        at com.google.android.exoplayer2.ExoPlayerImplInternal.updatePeriods(ExoPlayerImplInternal.java:1961)\r\n        at com.google.android.exoplayer2.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:961)\r\n        at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:495)\r\n        at android.os.Handler.dispatchMessage(Handler.java:102) \r\n        at android.os.Looper.loop(Looper.java:223) \r\n        at android.os.HandlerThread.run(HandlerThread.java:67) \r\n     Caused by: android.system.ErrnoException: connect failed: ETIMEDOUT (Connection timed out)\r\n        at libcore.io.Linux.connect(Native Method)\r\n        at libcore.io.ForwardingOs.connect(ForwardingOs.java:94)\r\n        at libcore.io.BlockGuardOs.connect(BlockGuardOs.java:138)\r\n        at libcore.io.ForwardingOs.connect(ForwardingOs.java:94)\r\n        at libcore.io.IoBridge.connectErrno(IoBridge.java:156)\r\n        at libcore.io.IoBridge.connect(IoBridge.java:134)\r\n        at java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:142) \r\n        at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:390) \r\n        at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:230) \r\n        at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:212) \r\n        at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:436) \r\n        at java.net.Socket.connect(Socket.java:621) \r\n        at java.net.Socket.connect(Socket.java:570) \r\n        at java.net.Socket.<init>(Socket.java:450) \r\n        at java.net.Socket.<init>(Socket.java:218) \r\n        at javax.net.DefaultSocketFactory.createSocket(SocketFactory.java:279) \r\n        at com.google.android.exoplayer2.source.rtsp.RtspClient.getSocket(RtspClient.java:304) \r\n        at com.google.android.exoplayer2.source.rtsp.RtspClient.start(RtspClient.java:198) \r\n        at com.google.android.exoplayer2.source.rtsp.RtspMediaPeriod.prepare(RtspMediaPeriod.java:158) \r\n        at com.google.android.exoplayer2.source.MaskingMediaPeriod.prepare(MaskingMediaPeriod.java:145) \r\n        at com.google.android.exoplayer2.source.MaskingMediaPeriod.prepare(MaskingMediaPeriod.java:145) \r\n        at com.google.android.exoplayer2.ExoPlayerImplInternal.maybeUpdateLoadingPeriod(ExoPlayerImplInternal.java:1981) \r\n        at com.google.android.exoplayer2.ExoPlayerImplInternal.updatePeriods(ExoPlayerImplInternal.java:1961) \r\n        at com.google.android.exoplayer2.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:961) \r\n        at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:495) \r\n        at android.os.Handler.dispatchMessage(Handler.java:102) \r\n        at android.os.Looper.loop(Looper.java:223) \r\n        at android.os.HandlerThread.run(HandlerThread.java:67) \r\n```",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10946/comments",
    "author": "MarcinWad",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2023-01-26T15:27:02Z",
        "body": "@claincly May I ask you to take a look? Thanks!"
      },
      {
        "user": "claincly",
        "created_at": "2023-01-26T16:57:49Z",
        "body": "First, the `timeoutMs` setter is not for the network, so as you have observed, it's doing no good.\r\n\r\nIn your specific use case, IIUC you need to set a timeout on the `Socket` itself, and this timeout will ensure the connection error is surfaced earlier than the current value (which is the platform specific, and two minutes as you said.)\r\n\r\nI would suggest make your own `SocketFactory`, which can be as easy as\r\n\r\n```\r\n    new RtspMediaSource.Factory()\r\n        .setSocketFactory(\r\n            new SocketFactory() {\r\n              SocketFactory defaultSocketFactory = SocketFactory.getDefault();\r\n\r\n              @Override\r\n              public Socket createSocket(String host, int port) throws IOException {\r\n                Socket socket = defaultSocketFactory.createSocket();\r\n                socket.connect(\r\n                    new InetSocketAddress(InetAddress.getByName(host), port), /* timeout= */ 1000);\r\n                return socket;\r\n              }\r\n\r\n              @Override\r\n              public Socket createSocket(\r\n                  String host, int port, InetAddress localHost, int localPort) {\r\n                throw new UnsupportedOperationException();\r\n              }\r\n\r\n              @Override\r\n              public Socket createSocket(InetAddress host, int port) {\r\n                throw new UnsupportedOperationException();\r\n              }\r\n\r\n              @Override\r\n              public Socket createSocket(\r\n                  InetAddress address, int port, InetAddress localAddress, int localPort) {\r\n                throw new UnsupportedOperationException();\r\n              }\r\n            });\r\n\r\n```\r\n"
      },
      {
        "user": "MarcinWad",
        "created_at": "2023-01-27T07:10:06Z",
        "body": "Hello,\r\nThank you.\r\nAdding own implementation of SocketFactory fixes the problem and Exo is not blocking main thread anymore.\r\n\r\nI think that adding this functionality to a Builder of RTSPMediaSource would be better idea. I digged almost whole Internet before i wrote here :)\r\n\r\n\r\n\r\n"
      },
      {
        "user": "claincly",
        "created_at": "2023-01-27T11:58:54Z",
        "body": "Glad it helped!"
      }
    ]
  },
  {
    "number": 10938,
    "title": "Next button in notification not visible even adding the setUseNextAction true",
    "created_at": "2023-01-20T16:04:14Z",
    "closed_at": "2023-01-30T19:01:19Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10938",
    "body": "### ExoPlayer Version\r\n\r\n2.14.2\r\n\r\n### Devices that reproduce the issue\r\n\r\n Hi im facing the issue in Exoplayer Notification.  Right Button is not showing. I also enable the property true for right button but its not working. Please let me know if this is version issue or anything else.\r\n \r\nDevice-  Pixel 5 Api 30\r\n\r\n### Devices that do not reproduce the issue\r\n\r\nDevice-  Pixel 5 Api 30\r\n\r\n### Reproducible in the demo app?\r\n\r\nYes\r\n\r\n### Reproduction steps\r\n\r\nPlay the song and than lock the device and than you will see right button is not showing\r\n\r\n### Expected result\r\n\r\nRight Button have to visible\r\n\r\n### Actual result\r\n\r\nRight button not visible\r\n\r\n### Media\r\n\r\n\r\n### Bug Report\r\n\r\n- [X] You will email the zip file produced by `adb bugreport` to dev.exoplayer@gmail.com after filing this issue.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10938/comments",
    "author": "YogeshSinghPathania",
    "comments": [
      {
        "user": "rohitjoins",
        "created_at": "2023-01-20T21:19:00Z",
        "body": "Maybe similar to #9268"
      },
      {
        "user": "marcbaechinger",
        "created_at": "2023-01-30T19:01:18Z",
        "body": "Closing as duplicate of #10952. Please see my comment regarding behaviour changes in Android 13 there."
      }
    ]
  },
  {
    "number": 10929,
    "title": "Custom buffering audio processor : sync issues on seek/loop",
    "created_at": "2023-01-16T13:49:05Z",
    "closed_at": "2023-04-14T01:05:51Z",
    "labels": [
      "question",
      "closed-by-bot"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10929",
    "body": "ExoPlayer version: Various - 2.16 right through 2.18.2\r\n\r\nI am using a custom audio processor (extends BaseAudioProcessor) that (in queueInput(...) ):\r\n\r\n- stashes audio samples into a custom buffer\r\n- zeros the samples going into the output buffer - to preserve timing, etc\r\n\r\nAudio is played back externally to ExoPlayer - being pulled off the custom buffer.  All seemed to work as desired.  However, I am seeing sync issues when seeking.  I initially looked to empty my custom buffer in overrides of onFlush(),  onQueueEndOfStream() and onReset().  Sync is still not right, and looping also appears to be out of sync.\r\n\r\nCan anyone offer some guidance on when I should be emptying my custom audio buffer?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10929/comments",
    "author": "Ste-RH",
    "comments": [
      {
        "user": "Ste-RH",
        "created_at": "2023-01-17T10:47:56Z",
        "body": "I am wondering if it is a combination of issues.  Here are a few things that seem to help...\r\n\r\n1) No re-creating/flushing my audio buffer in onConfigure seems to help the loop - I think this is firing before the audio system that pulls samples (Unity) has chance to pull the samples at the end of the video before loop.\r\n\r\n2) Not actually flushing my audio buffer in the flush that gets triggered after 'onQueueEndOfStream' is called\r\n\r\nIs there a description or diagram of how the audio processing chain works with respect to looping?  That would be a great help!\r\n"
      },
      {
        "user": "tonihei",
        "created_at": "2023-01-19T15:41:35Z",
        "body": "Could you clarify what you mean by \"looping\" in this context? Is it looping the same item in the player? If so, it means that we can likely keep all processors and the `AudioTrack` alive because the format matches exactly. In this case, you should probably see a call to `queueEndOfStream()` followed by calls to `getOutput()` until `isEnded()` returns true. After that, the processor is flushed with `flush()` in order to receive new input data (via `queueInput`) from the new or repeated source. As no format change happened, I don't expect any call to `configure` in this scenario. \r\n\r\nGenerally, the idea is that you only need to flush your internal buffers if `flush()` is called. In the transition case described above, your internal buffers should actually be empty already at the point where `flush()` is called because they were drained before until the processor ended. "
      },
      {
        "user": "google-oss-bot",
        "created_at": "2023-04-05T01:06:01Z",
        "body": "<!-- event: mark-stale -->\nHey @Ste-RH. We need more information to resolve this issue but there hasn't been an update in 14 weekdays. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2023-04-14T01:05:50Z",
        "body": "<!-- event: close-stale -->\nSince there haven't been any recent updates here, I am going to close this issue.\n\n@Ste-RH if you're still experiencing this problem and want to continue the discussion just leave a comment here and we are happy to re-open this."
      }
    ]
  },
  {
    "number": 10928,
    "title": "MediaCodec: Codec reported err 0xfffffff4/NO_MEMORY on Android 12 devices",
    "created_at": "2023-01-16T07:29:38Z",
    "closed_at": "2023-01-16T11:00:05Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10928",
    "body": "### ExoPlayer Version\n\n2.14.0\n\n### Devices that reproduce the issue\n\nNokia 5.4\n\n### Devices that do not reproduce the issue\n\n_No response_\n\n### Reproducible in the demo app?\n\nNot tested\n\n### Reproduction steps\n\n1. Created instance of Exoplayer as Recyclerview Item and also a Viewpager Item.\r\n2. If the Item is in focus, sometimes it plays perfectly but if scrolling is fast, it doesn't render the video from the URL.\r\n3. Code:\r\n`if (exoplayer == null && list != null) {`\r\n`            val executorService = Executors.newSingleThreadExecutor()`\r\n`            executorService.execute {`\r\n`                val loadControl: LoadControl = DefaultLoadControl.Builder()`\r\n`                    .setAllocator(DefaultAllocator(true, 16))`\r\n`                    .setBufferDurationsMs(1 * 1024, 1 * 1024, 500, 1024)`\r\n`                    .setTargetBufferBytes(-1)`\r\n`                    .setPrioritizeTimeOverSizeThresholds(true)`\r\n`                    .build()`\r\n`                val trackSelector = DefaultTrackSelector(mActivity!!)`\r\n`                try {`\r\n`                    mActivity!!.runOnUiThread {`\r\n`                        exoplayer =`\r\n`                            SimpleExoPlayer.Builder(mActivity!!).setTrackSelector(trackSelector)`\r\n`                                .setLoadControl(loadControl)`\r\n`                                .build()`\r\n`                        val dataSourceFactory: DataSource.Factory =`\r\n`                            DefaultDataSourceFactory(`\r\n`                                mActivity!!, mActivity!!.getString(R.string.app_name)`\r\n`                            )`\r\n`                        val videoSource: MediaSource =`\r\n`                            ProgressiveMediaSource.Factory(dataSourceFactory)`\r\n`                                .createMediaSource(MediaItem.fromUri(videoURL!!))`\r\n`                        //exoplayer!!.setThrowsWhenUsingWrongThread(false)`\r\n`                        exoplayer!!.addMediaSource(videoSource)`\r\n`                        exoplayer!!.prepare()`\r\n`                        //exoplayer!!.addListener(this@HomePostsAdapter)`\r\n`                        exoplayer!!.repeatMode = Player.REPEAT_MODE_ONE`\r\n`                        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {`\r\n`                            val audioAttributes =`\r\n`                                AudioAttributes.Builder()`\r\n`                                    .setUsage(C.USAGE_MEDIA)`\r\n`                                    .setContentType(C.CONTENT_TYPE_MOVIE)`\r\n`                                    .build()`\r\n`                            exoplayer!!.setAudioAttributes(audioAttributes, true)`\r\n`                        }`\r\n`                    }`\r\n`                } catch (e: Exception) {`\r\n`                    Log.d(\"PostHomeFragment\", \"Exception audio focus : $e\")`\r\n`                }`\r\n`                mActivity!!.runOnUiThread {`\r\n`                    videoView.findViewById<View>(com.google.android.exoplayer2.ui.R.id.exo_play).visibility =`\r\n`                        View.GONE`\r\n`                    if (exoplayer != null) {`\r\n`                         videoView.player = exoplayer`\r\n`                        // list!![0]!!.getFiles()!![0]!!.playerView = exoplayer`\r\n`                        exoplayer!!.playWhenReady = true`\r\n`                    }`\r\n`                }`\r\n`            }`\r\n`        }`\n\n### Expected result\n\nThe video should be played smoothly if the view is in focus.\n\n### Actual result\n\nthe holder displays a blank screen where;\r\n1. Sometimes the video is playing perfectly.\r\n2. Only the audio is playing.\r\n3. Neither the audio nor the video is playing.\n\n### Media\n\nNot applicable.\n\n### Bug Report\n\n- [X] You will email the zip file produced by `adb bugreport` to dev.exoplayer@gmail.com after filing this issue.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10928/comments",
    "author": "VIkash2601",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2023-01-16T11:00:05Z",
        "body": "We can't really help with `RecyclerView` implementations I'm afraid. Please refer to #867 where many developers share their experience and solutions with this.\r\n\r\n>  it plays perfectly but if scrolling is fast, it doesn't render the video from the URL.\r\n\r\nI think best is to stop creating players automatically when the scrolling is very fast.\r\n"
      }
    ]
  },
  {
    "number": 10900,
    "title": "how i can set the startup bitrate in exo player?",
    "created_at": "2023-01-03T14:29:50Z",
    "closed_at": "2023-01-05T15:59:17Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10900",
    "body": "how i can set the startup bitrate in exo player?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10900/comments",
    "author": "Lilsax",
    "comments": [
      {
        "user": "pradeepvernekarzee",
        "created_at": "2023-01-04T06:22:51Z",
        "body": " Please try the below code to set the initial bitrate\r\n DefaultBandwidthMeter.Builder(context).apply {\r\n                setInitialBitrateEstimate(bitrate)\r\n            }\r\n  }.build()"
      },
      {
        "user": "Lilsax",
        "created_at": "2023-01-04T08:14:06Z",
        "body": "that does not actually set the initial bitrate becasue it only work when\r\n\r\n_Sets the initial bitrate estimate in bits per second that should be assumed when a bandwidth estimate is unavailable_\r\n\r\nand the bandwidth estimate determined by the player so as long as that value is set that function is useless that's why it only work the first time u lunch the app \r\n\r\nso the real question in here is is there a way to set **bandwidth estimate** ??"
      },
      {
        "user": "tonihei",
        "created_at": "2023-01-05T09:26:39Z",
        "body": "I assume your intention is not to set the bandwidth estimate (=the actual network speed), but rather to force a maximum selected bitrate for the first segment of each playback. If that's not the case, please clarify what you want to achieve. \r\n\r\nYou can dynamically filter which formats can be selected by providing custom `AdaptiveTrackSelection` classes that override the `canSelectFormat` method with your custom filtering logic:\r\n\r\nYou can provide a custom `ExoTrackSelection.Factory` to `DefaultTrackSelector` (which can be set via `ExoPlayer.Builder.setTrackSelector`). This custom `ExoTrackSelection.Factory` can be a subclass of `AdaptiveTrackSelection.Factory` where you override `createAdaptiveTrackSelection`. In there you can return a subclass of `AdaptiveTrackSelection` where you override `canSelectFormat`. This method can return `false` for the first selection if the bitrate exceeds a certain value. "
      },
      {
        "user": "Lilsax",
        "created_at": "2023-01-05T16:00:30Z",
        "body": "Thank you @tonihei  it worked <3"
      }
    ]
  },
  {
    "number": 10897,
    "title": "Identify onPlaybackStatsReady callbacks for Ads playback",
    "created_at": "2023-01-02T13:18:42Z",
    "closed_at": "2023-01-07T11:44:25Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10897",
    "body": "As mentioned in docs for `PlaybackStatsListener`, `onPlaybackStatsReady` callback is called separately for main playback item and all of the inserted ads (e.g. pre-roll ads). Since `PlaybackStats` for ad playbacks are not important for me, I only want to log stats for the main media item. Is there a way to identify the type of media item for which the  `PlaybackStats` is prepared?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10897/comments",
    "author": "MBakhshi96",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2023-01-05T09:13:28Z",
        "body": "The `eventTime` parameter of `onPlaybackStatsReady` tells you about which playback the stats belong to. In particular, the `EventTime` contains a `Timeline` with the full playlist and ad information and the `mediaPeriodId` field that tells you about the current ad group index and ad index. "
      },
      {
        "user": "MBakhshi96",
        "created_at": "2023-01-07T11:43:42Z",
        "body": "I'm now using `eventTime.mediaPeriodId.isAd()` to filter ad playbacks and it seems to work. Thank you for your help."
      }
    ]
  },
  {
    "number": 10896,
    "title": "How to signal that the activation status of an `AudioProcessor` has changed?",
    "created_at": "2023-01-01T17:56:21Z",
    "closed_at": "2023-01-05T16:46:04Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10896",
    "body": "As an optimization, I try to avoid \"no-op\" scenarios that would require an expensive copy in my `AudioProcessor` by overriding `isActive` and returning `false` if the `AudioProcessor` has nothing to do. The issue is that the activation status can change during playback, and I've recently realized that ExoPlayer is highly inconsistent in when it checks if the `AudioProcessor` is active. \r\n\r\nFor example, if the `AudioProcessor` was *active*, then became *inactive*, and then became *active* again, ExoPlayer picks up on it immediately. However, if the `AudioProcessor` starts *inactive* and then becomes *active*, ExoPlayer does not pick up on it until the next `MediaItem` plays. This results in really in-explicable issues in my app.\r\n\r\nIs there a way to signal ExoPlayer to always re-check my `AudioProcessor` when it's activation status changes? There should be some way to do it given that `SonicAudioProcessor` could feasibly change it's activation status during playback too. Without this, I'm stuck either with this inconsistent behavior or removing the `isActive` optimization entirely and doing a copy when there's nothing to do, neither of which are desirable in any capacity.\r\n\r\nAny help here would be appreciated.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10896/comments",
    "author": "OxygenCobalt",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2023-01-05T16:39:07Z",
        "body": "Your observations fit the current implementation:\r\nWhether `AudioProcessors` are active or not is evaluated only once during set up. And they are only reset when the chain of processors if flushed (e.g. when the format changes, a new item starts playing or new `PlaybackParameters` are applied). The reason for this is that the chain of processors takes the output format of one processor and uses it as input format for the next processor in the list. If you suddenly deactivated a processor in a chain without flushing, the input format wouldn't match anymore. Moreover, if the chain suddenly produces a new output format (e.g. because some processors got activated/deactivated), the entire AudioTrack needs to be flushed. \r\n\r\nThere are probably two ways in which you can make this work:\r\n 1. *Change your audio processor to be a no-op, but leave it active*: This still requires one copy of the audio data. You mentioned that you consider this expensive, but given it's just audio data it shouldn't be too bad. The implementation can call `replaceOutputBuffer(inputBuffer.remaining()).put(inputBuffer).flip()` from `queueInput` (assuming you overwrite `BaseAudioProcessor`). This should also avoid any additional memory allocations mid-playback.\r\n 2. *Treat this as a feature request to force a audio processor chain flush/re-configure*: There is currently no way for you to do this without interrupting playback. We could add a method to `DefaultAudioSink` that lets you reconfigure the audio processors mid-playback. This is non-trivial and we are unlikely to address this soon. "
      },
      {
        "user": "OxygenCobalt",
        "created_at": "2023-01-05T16:46:04Z",
        "body": "Okay, I'll just do a copy then and take the worse performance on high-bitrate files."
      }
    ]
  },
  {
    "number": 10886,
    "title": "No AdOverlay but receiving  two callbacks AD_PERIOD_STARTED_EVENT , AD_PERIOD_ENDED_EVENT",
    "created_at": "2022-12-27T10:57:57Z",
    "closed_at": "2023-01-03T15:21:03Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10886",
    "body": "\r\ndependencies : \r\ndef EXO_PLAYER_VERSION = '2.18.2'\r\nimplementation 'com.google.android.gms:play-services-ads-identifier:18.0.1'\r\nimplementation 'com.google.ads.interactivemedia.v3:interactivemedia:3.29.0'\r\nimplementation (\"com.google.android.exoplayer:extension-ima:${EXO_PLAYER_VERSION}\"){\r\nexclude group: 'com.google.android.exoplayer', module:'exoplayer-common'\r\n}\r\nimplementation \"com.google.android.exoplayer:exoplayer-core:${EXO_PLAYER_VERSION}\"\r\nimplementation \"com.google.android.exoplayer:exoplayer-dash:${EXO_PLAYER_VERSION}\"\r\nimplementation \"com.google.android.exoplayer:exoplayer-ui:${EXO_PLAYER_VERSION}\"\r\nimplementation \"com.google.android.exoplayer:exoplayer-hls:${EXO_PLAYER_VERSION}\"\r\nimplementation \"com.google.android.exoplayer:exoplayer-smoothstreaming:${EXO_PLAYER_VERSION}\"\r\nimplementation \"com.google.android.exoplayer:extension-mediasession:${EXO_PLAYER_VERSION}\"\r\n\r\nI have implemented DAI which is working fine on native app, but on react native app using the same code it is not working, getting two callbacks AD_PERIOD_STARTED_EVENT , AD_PERIOD_ENDED_EVENT but didint see any ad overlay \r\n\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10886/comments",
    "author": "shagun-firstlight",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2023-01-03T15:21:03Z",
        "body": "> is working fine on native app, but on react native app using the same code it is not working\r\n\r\nWe can't support you with issues that are specific to reactive native I'm afraid. \r\n\r\nIf you think this is a problem with the ExoPlayer library please re-open this issue so we can investigate. "
      }
    ]
  },
  {
    "number": 10885,
    "title": "How can EXO directly use the framework's capabilities? ",
    "created_at": "2022-12-26T03:41:23Z",
    "closed_at": "2023-01-26T14:41:31Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10885",
    "body": "My device is a deeply customized Android device. The underlying supports various software and hardware solutions. How can EXO directly use the framework's capabilities? For example, FLV queries tell you that you have said that you will not continue to support more complex FLVs, but my device has already been supported by using mediacotec directly. If you use the exo shell and the device's software and hardware solutions, please give me a hard answer",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10885/comments",
    "author": "RexSuper",
    "comments": [
      {
        "user": "RexSuper",
        "created_at": "2022-12-26T06:56:45Z",
        "body": "Let me give another specific example. For example, exo's flv does not support H263, but my device framework supports it. How can I set exo to go to the framework's MediaCodec instead of directly throwing an exception \"Video format not supported: 2\""
      },
      {
        "user": "tonihei",
        "created_at": "2023-01-05T09:01:27Z",
        "body": "ExoPlayer checks support using the `MediaCodecInfo` objects provided by the system (search for \"supportsFormat\" in ExoPlayer to see relevant code snippets). If your customized Android device supports a certain format, it should declare it through the usual channels so that app code like ExoPlayer can query it. Writing a custom Android version is a bit outside of the scope of this issue tracker, so we won't be able to help you with the details there. "
      },
      {
        "user": "tonihei",
        "created_at": "2023-01-26T14:41:31Z",
        "body": "Closing the issue as the question was answered."
      }
    ]
  },
  {
    "number": 10876,
    "title": "ExoPlayer doesn't play some videos on some devices.",
    "created_at": "2022-12-19T20:48:45Z",
    "closed_at": "2022-12-22T12:41:10Z",
    "labels": [
      "question",
      "needs triage"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10876",
    "body": "The video stays black, no sound, no image, no crash. It does show the length of the video tho!\r\nOn simulator it runs but has weird artifacts.\r\n\r\nDevice: SAMSUNG GALAXY S10 LIGHT\r\n\r\nIt's an MP4 video which was cropped and resized with FFMPEG (X264).\r\n\r\nVersion:\r\n``implementation 'com.google.android.exoplayer:exoplayer:2.18.2'``\r\n\r\nMy code:\r\n```kotlin\r\n@Composable\r\nfun VideoView(videoUri: String, height: Float) {\r\n    val context = LocalContext.current\r\n\r\n    val exoPlayer = ExoPlayer.Builder(context)\r\n            .build()\r\n            .also { exoPlayer ->\r\n\r\n                val mediaItem = MediaItem.Builder()\r\n                        .setMimeType(\"video/mp4\")\r\n                        .setUri(videoUri)\r\n                        .build()\r\n\r\n                exoPlayer.setMediaItem(mediaItem)\r\n                exoPlayer.prepare()\r\n            }\r\n\r\n    val lifecycleOwner = rememberUpdatedState(LocalLifecycleOwner.current)\r\n\r\n    DisposableEffect(\r\n            AndroidView(factory = {\r\n                StyledPlayerView(context).apply {\r\n                    player = exoPlayer\r\n                }\r\n            }, modifier = Modifier.height(height.dp))\r\n    ) {\r\n        val observer = LifecycleEventObserver { owner, event ->\r\n            when (event) {\r\n                Lifecycle.Event.ON_PAUSE -> {\r\n                    exoPlayer.pause()\r\n                }\r\n                Lifecycle.Event.ON_RESUME -> {\r\n                    exoPlayer.play()\r\n                }\r\n                else -> {}\r\n            }\r\n        }\r\n        val lifecycle = lifecycleOwner.value.lifecycle\r\n        lifecycle.addObserver(observer)\r\n\r\n        onDispose {\r\n            exoPlayer.release()\r\n            lifecycle.removeObserver(observer)\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nI had to cut a lot out because of the limit. The part i think is the most interesting:\r\n```\r\nE/ACodec: signalError(omxError 0x80001001, internalError -2147483648)\r\nE/ACodec: [OMX.qcom.video.decoder.avc] ERROR(0x80001009)\r\nE/ACodec: signalError(omxError 0x80001009, internalError -2147483648)\r\nE/MediaCodec: Codec reported err 0x80001001/-2147479551 (Unknown error 2147479551), actionCode 0, while in state 6/STARTED\r\nE/ACodec: signalError(omxError 0x80001001, internalError -2147483648)\r\nD/SurfaceUtils: disconnecting from surface 0xb400007c2fcb1010, reason disconnectFromSurface\r\nE/Surface: freeAllBuffers: 4 buffers were freed while being dequeued!\r\nE/MediaCodec: Codec reported err 0x80001009/-2147479543 (Unknown error 2147479543), actionCode 0, while in state 0/UNINITIALIZED\r\nE/MediaCodec: Codec reported err 0x80001001/-2147479551 (Unknown error 2147479551), actionCode 0, while in state 0/UNINITIALIZED\r\nE/MediaCodecVideoRenderer: Video codec error\r\n      android.media.MediaCodec$CodecException: Error 0x80001001\r\nD/MediaCodecInfo: NoSupport [codec.profileLevel, avc1.6E001F, video/avc] [OMX.qcom.video.decoder.avc, video/avc] [r5q, SM-G770F, samsung, 33]\r\nD/MediaCodecInfo: NoSupport [codec.profileLevel, avc1.6E001F, video/avc] [c2.android.avc.decoder, video/avc] [r5q, SM-G770F, samsung, 33]\r\nE/ExoPlayerImplInternal: Playback error\r\n      com.google.android.exoplayer2.ExoPlaybackException: MediaCodecVideoRenderer error, index=0, format=Format(1, null, null, video/avc, avc1.6E001F, -1, null, [800, 602, 29.997414], [-1, -1]), format_supported=NO_EXCEEDS_CAPABILITIES\r\n        at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:571)\r\n        at android.os.Handler.dispatchMessage(Handler.java:102)\r\n        at android.os.Looper.loopOnce(Looper.java:226)\r\n        at android.os.Looper.loop(Looper.java:313)\r\n        at android.os.HandlerThread.run(HandlerThread.java:67)\r\n     Caused by: com.google.android.exoplayer2.video.MediaCodecVideoDecoderException: Decoder failed: OMX.qcom.video.decoder.avc\r\n        at com.google.android.exoplayer2.video.MediaCodecVideoRenderer.createDecoderException(MediaCodecVideoRenderer.java:1629)\r\n        at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.render(MediaCodecRenderer.java:813)\r\n        at com.google.android.exoplayer2.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:994)\r\n        at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:495)\r\n        at android.os.Handler.dispatchMessage(Handler.java:102) \r\n        at android.os.Looper.loopOnce(Looper.java:226) \r\n        at android.os.Looper.loop(Looper.java:313) \r\n        at android.os.HandlerThread.run(HandlerThread.java:67) \r\n     Caused by: android.media.MediaCodec$CodecException: Error 0x80001001\r\nE/ExoPlayerImplInternal: Disable failed.\r\n      java.lang.IllegalStateException\r\n        at android.media.MediaCodec.native_flush(Native Method)\r\n        at android.media.MediaCodec.flush(MediaCodec.java:2388)\r\n        at com.google.android.exoplayer2.mediacodec.AsynchronousMediaCodecAdapter.flush(AsynchronousMediaCodecAdapter.java:228)\r\n        at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.flushCodec(MediaCodecRenderer.java:877)\r\n        at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.flushOrReleaseCodec(MediaCodecRenderer.java:870)\r\n        at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.onDisabled(MediaCodecRenderer.java:710)\r\n        at com.google.android.exoplayer2.video.MediaCodecVideoRenderer.onDisabled(MediaCodecVideoRenderer.java:608)\r\n        at com.google.android.exoplayer2.BaseRenderer.disable(BaseRenderer.java:186)\r\n        at com.google.android.exoplayer2.ExoPlayerImplInternal.disableRenderer(ExoPlayerImplInternal.java:1655)\r\n        at com.google.android.exoplayer2.ExoPlayerImplInternal.resetInternal(ExoPlayerImplInternal.java:1396)\r\n        at com.google.android.exoplayer2.ExoPlayerImplInternal.stopInternal(ExoPlayerImplInternal.java:1359)\r\n        at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:587)\r\n        at android.os.Handler.dispatchMessage(Handler.java:102)\r\n        at android.os.Looper.loopOnce(Looper.java:226)\r\n        at android.os.Looper.loop(Looper.java:313)\r\n        at android.os.HandlerThread.run(HandlerThread.java:67)\r\n```\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10876/comments",
    "author": "juliangerhards",
    "comments": [
      {
        "user": "microkatz",
        "created_at": "2022-12-22T12:41:10Z",
        "body": "Hi! It appears that the mediatype is not supported by the available decoders. As there is not other tracks or options to play, it seems Exoplayer tries anyway but it was correct and could not play it correctly.\r\n\r\nIn your shared log trace:\r\nMediaCodecVideoRenderer error, index=0, format=Format(1, null, null, video/avc, avc1.6E001F, -1, null, [800, 602, 29.997414], [-1, -1]), **format_supported=NO_EXCEEDS_CAPABILITIES**\r\n\r\nIt may be that the profile or level are unsupported or that your cropping invalidated the mediatype. Some formats require resolutions that are divisible by 4/8. The 602 in your format res seems odd.\r\n\r\nFeel free to re-open if you have additional questions or if you choose to send the media content along for us to test further. You can send the content to dev.exoplayer@gmail.com using a subject in the format\r\n\"Issue #1234\" (\"#1234\" is replaced with your issue number). If you do so, please also update this issue to\r\nindicate you've done this."
      },
      {
        "user": "AndersonCodeArt",
        "created_at": "2022-12-27T09:35:30Z",
        "body": "I have a similar problem here, how do I end it?\r\n\r\nMediaCodecVideoRenderer error, index=0, format=Format(1, null, null, video/avc, avc1.640034, -1, null, [2156, 4312, 29.999216], [-1, -1]), format_supported=NO_EXCEEDS_CAPABILITIES"
      }
    ]
  },
  {
    "number": 10869,
    "title": "How do i know the app loss audio focus because another  music app is getting focus",
    "created_at": "2022-12-16T06:45:28Z",
    "closed_at": "2023-01-26T14:40:38Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10869",
    "body": "I try to get the suppression reason by ` player.getPlaybackSuppressionReason()`  after another  music app is playing, but the result is always 0, But the result is 1, when phone calling is coming\r\n\r\n**Exoplayer Version: 2.11.4**",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10869/comments",
    "author": "XinChenTw",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2022-12-16T15:37:19Z",
        "body": "If the loss is permanent, you get a `onPlayWhenReadyChanged` event with `PLAY_WHEN_READY_CHANGE_REASON_AUDIO_FOCUS_LOSS`. Only transient, temporary audio focus losses are signalled via `getPlaybackSuppressionReason` because they keep the player state and automatically resume. "
      },
      {
        "user": "tonihei",
        "created_at": "2023-01-26T14:40:38Z",
        "body": "Closing as the question was answered."
      }
    ]
  },
  {
    "number": 10839,
    "title": "Can I override ExoPlayer's Notification action buttons?",
    "created_at": "2022-12-06T14:04:28Z",
    "closed_at": "2024-07-15T09:50:46Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10839",
    "body": "I would like to override notification's action buttons in order to track some analytics.\r\n\r\nFor example, when user plays or pauses an audio track via the notification, I would like to put some logs and save some information on my application's database.\r\n\r\nIs this possible?\r\n\r\nI am currently using 2.14.2 ExoPlayer version.\r\n\r\nThank you in advance\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10839/comments",
    "author": "dimitradg",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2022-12-06T18:01:10Z",
        "body": "I assume you are using `PlayerNotificationManager`. \r\n\r\nYou can do  a `ForwardingPlayer` that you pass to the notification manager:\r\n\r\n```\r\nplayerNotificationManager.setPlayer(new MyTrackingForwardingPlayer(player));\r\n```\r\n\r\nThen, in your `MyTrackingForwardingPlayer` you can override every method, intercept the call, trigger writing data to analytics/database (probably async) and finally delegate to the wrapped player."
      }
    ]
  },
  {
    "number": 10834,
    "title": "SimplePool for Exoplayer",
    "created_at": "2022-12-05T15:56:40Z",
    "closed_at": "2023-01-16T14:34:18Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10834",
    "body": "Describe your question in detail:\r\n\r\nHello, my application use extensively Exoplayer and I wanted to make some improvement for my users ( ~440 000 users with phone from API 21 to API 26).\r\n\r\nFor context my app is just like Youtube, so users browse between pages which result in an ever-ending cycle of:\r\n1. creating Exoplayer\r\n2. setting mediaSource + listeners\r\n3. playing/pausing\r\n4. removing listener + releasing Exoplayer\r\n\r\nI was wondering if creating/releasing player is more resource-consuming than creating a Pool with 2 instances of Exoplayer? What's your opinion about using a `SimplePool<Exoplayer>(2)` ?\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10834/comments",
    "author": "yoobi",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2022-12-06T13:33:00Z",
        "body": "Using a pool of player can make sense for some use cases. I wouldn't think about performance in the sense opf resources required to create the players. It is certainly needs a bit more resources to recreate new instances, but I would focus on performance only in the sense of user experience. That is, if you want to play two videos in a `RecyclerView` or a `ViewPager` and the surfaces on which the video is rendered are visible at the same time, then you possibly need two players to be able to have at least one frame rendered on each of the surfaces. In general, if your app needs to decode two videos at the same time, you need multiple instances.\r\n\r\nHowever, if you do that you need to take care of some low-level devices possibly do not support multiple instances of the video codec being used at the same time. So it gets a bit more complicated.\r\n\r\nIn general I would say if there is no need in terms of user experience I would stick with a single instance for simplicity. But I think in your case it can make sense to use a pool.\r\n\r\nThis is an advanced problem to solve properly and people asked question around this quite a lot. So it also makes sense to search the existing issues a bit to learn how other users solved this problem. An example issue about how to use the player in a `RecyclerView` is #867. \r\n\r\n"
      },
      {
        "user": "yoobi",
        "created_at": "2022-12-06T15:24:23Z",
        "body": "Thank you for your detailed answer ! My issue is not really caused by a `RecyclerView` or `ViewPager` albeit it can relate in a sense.\r\n\r\nLet's say we have `VideoPageFragment` which creates a new `Exoplayer` instance in `fun onStart()` and destroy the instance in `onStop()`. Therefore there is only one instance of Exoplayer at a time.\r\n \r\n1. User browse to`VideoPageFragment` to watch a video called: \"Building Exoplayer Part 1\"\r\n2. User clicks on button \"Next\", hence destroying the last `VideoPageFragment` and creating a new `VideoPageFragment` with data of the next video.\r\n3. User close the app\r\n\r\nWith this simple 3-step example, the user has created and destroyed 2 instance of `Exoplayer`. Would using a Pool make sense for such a case ?"
      },
      {
        "user": "yoobi",
        "created_at": "2023-01-16T09:29:54Z",
        "body": "Do you have some advice ?"
      },
      {
        "user": "marcbaechinger",
        "created_at": "2023-01-16T10:46:54Z",
        "body": "I understand there is only one fragment active and  only one instance playing at a time that can be shared by these fragments.  I think in this case I would just have a single instance that is created in the activity, that you can use from the fragment by using `((ExoPlayerHostingActivity)getActivity()).getPlayer()`. The fragments lifecycle methods can then be used to set media sources, prepare the player and start playback. Afterwards the player is pause, stopped and released. For such a use case without overlapping playback a single instance sounds sufficient.  "
      },
      {
        "user": "yoobi",
        "created_at": "2023-01-16T11:09:44Z",
        "body": "I'm ashamed to say I didn't think of that because this is simple and brilliant. I'll go with that instead of doing a pool.\r\n\r\nThanks"
      }
    ]
  },
  {
    "number": 10802,
    "title": "Is there a way to update the subtitle in exo?",
    "created_at": "2022-11-21T13:10:56Z",
    "closed_at": "2022-12-01T15:59:54Z",
    "labels": [
      "question",
      "need more info"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10802",
    "body": "is there a way to update the subtitle in exo player? Since im working with multi period manifest and the subtitle always come inside the 2nd period since the first period is an ad period \r\n\r\nand as i can see exo player tries to read the subtitle from the first period and in case it didnt find it, it will consider there is no subtitle or sub audio.\r\n\r\nis there anything u can help me with this ??\r\n\r\nregards",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10802/comments",
    "author": "Lilsax",
    "comments": [
      {
        "user": "icbaker",
        "created_at": "2022-11-23T16:21:50Z",
        "body": "Please can you provide complete reproduction steps so we can understand your exact setup and see how the player handles it.\r\n\r\nWithout that it's going to be very hard to understand your problem.\r\n\r\nPlease either post media links here or send them dev.exoplayer@gmail.com using the subject `Issue #10802`. Please also update this issue to indicate you’ve done this.\r\n\r\nThanks!"
      },
      {
        "user": "Lilsax",
        "created_at": "2022-11-24T15:10:41Z",
        "body": "this is a question not a problem\r\n\r\nim asking if there is a way to update the subtitle and manifest during the stream"
      },
      {
        "user": "icbaker",
        "created_at": "2022-11-24T15:16:19Z",
        "body": "If you're asking about subtitles configured within a standard streaming protocol (e.g. DASH / HLS) (it's unclear from the minimal information provided so far) then your question is probably better targeted at the authors/maintainers of that spec - since any way to update the stream during playback will be defined in that spec, it wouldn't make sense for ExoPlayer to implement a custom solution for this.\r\n\r\nIf you are reporting that ExoPlayer doesn't implement a part of one of these specs then please provide more details (e.g. spec section, exact wording, example manifest, report of ExoPlayer's behaviour).\r\n\r\nIf your question is about some other way of providing subtitles to ExoPlayer then please provide enough information for me to understand how you're configuring this."
      },
      {
        "user": "Lilsax",
        "created_at": "2022-11-25T17:22:20Z",
        "body": "Hello @icbaker,\r\n\r\nI apologize for not providing full information for this. Let me give you the full view of what I am dealing with right now.\r\n\r\nSo basically, for the dash single period manifest, everything including the subtitle is working fine. But in the case of having a multi-period dash manifest, the player will go and check the first period inside the manifest and check if it has sub audios or subtitles. In the case the first one doesn't have any, it will just skip the retrieving of subtitles and sub audios part and consider doesn't have any.\r\n\r\nWhat I want to do is that I want the player to go and check all the periods inside the manifest and look for all the possible available subtitles and sub audios. This is because when dealing with SSAI, the first period is always an ad, and the subtitles and sub audios are inside the 2nd period or the 3rd, depending on how many pre-rolls I have."
      },
      {
        "user": "icbaker",
        "created_at": "2022-11-25T17:52:18Z",
        "body": "Thanks for the extra information - it sounds like you're reporting a problem in the way ExoPlayer handles DASH multi-period streams where subtitles are only present in periods after the first one. Please can you provide an example manifest that demonstrates the problem that we can use to reproduce it and understand exactly how the player is behaving.\r\n\r\n----\r\n\r\n> What I want to do is that I want the player to go and check all the periods inside the manifest and look for all the possible available subtitles and sub audios. This is because when dealing with SSAI, the first period is always an ad, and the subtitles and sub audios are inside the 2nd period or the 3rd, depending on how many pre-rolls I have.\r\n\r\nThis is unlikely to be the approach we take - it's much more likely that we will ensure the subtitles are read **when playing the period they're present in**. This means we don't need to read significantly ahead of the playback position."
      },
      {
        "user": "Lilsax",
        "created_at": "2022-12-01T15:59:54Z",
        "body": "Hello again,\r\n\r\nI was investigating the player and discovered that it returns the subtitle and subaudio information every time it reads a new period. Therefore, my previous assumption was incorrect. I apologize for the mistake.\r\n\r\nThank you for your help."
      }
    ]
  },
  {
    "number": 10800,
    "title": "Refresh token during license request",
    "created_at": "2022-11-21T11:47:20Z",
    "closed_at": "2023-02-09T15:20:11Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10800",
    "body": "Hi there I got this question. \r\nIn the scenario that we are using dash + drm license. \r\nWe know that the license indicates the playback refreshment period. So for example, if the user is watching a content for 24 hours and the refreshment period is 5 hours, so every 5 hours playback should refresh the license, making a request to the license server provider. Many times this license provider requires a token. We can add this token using the next function. \r\n\r\n```\r\nsetKeyRequestProperty(\r\n            NetworkApi.HEADER_AUTHORIZATION,\r\n            \"Bearer (token)\" ,\r\n        )\r\n```\r\n\r\nThis token also has expiration time ex: 30 mins. So we need to refresh the token every 25 min ( good idea to refresh the token x minutes before it gets expired). Question is, **do you think that this refreshment makes sense**?? Because we already refreshed the license sending payload (authenticating device...) every 5 hours in this example. I am not sure if refreshing this token brings more security. Another point is that we need to add extra code in order to keep refreshing this token periodically. Why does Exoplayer not have a mechanism that allows us to, apart from setting the token, set the expiration time so it can deal with this refreshment?\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10800/comments",
    "author": "javaboboApp",
    "comments": [
      {
        "user": "icbaker",
        "created_at": "2022-11-21T14:33:52Z",
        "body": "> Question is, **do you think that this refreshment makes sense**??\r\n\r\nI'm afraid we're not experts on the design of your content protection - it's really up to you to decide how to implement the level of protection you need.\r\n\r\n-----\r\n\r\n> Another point is that we need to add extra code in order to keep refreshing this token periodically. Why does Exoplayer not have a mechanism that allows us to, apart from setting the token, set the expiration time so it can deal with this refreshment?\r\n\r\nI'm not sure exactly how you're implementing this at the moment, but I would probably try and do it using a `ResolvingDataSource` subclass that knows how to determine the correct token, and you can pass a factory for this to `HttpMediaDrmCallback`. This will allow you to set the correct token at the time the request is made, rather than having to statically define one on the `MediaItem`."
      },
      {
        "user": "icbaker",
        "created_at": "2023-02-09T15:20:11Z",
        "body": "Closing due to inactivity."
      }
    ]
  },
  {
    "number": 10795,
    "title": "Playing video from byte array through AVPro",
    "created_at": "2022-11-18T23:35:42Z",
    "closed_at": "2022-11-22T12:01:23Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10795",
    "body": "Complete noobie to Exoplayer here.\r\n\r\nI am working on a project that is using AV Pro in Unity. AV Pro is a multiplatform video player that is using the ExoPlayer library for Android video playback. \r\n\r\nThe feature I want to develop is for video encryption. I don't want to have to save a decrypted file to the device before being able to playback. Instead I want to use the decrypted bytes of the video and allow the user to watch the video without having to save to device. For some reason AVPro does not currently support this feature. \r\n\r\nIs there a way to compile ExoPlayer to provide us access to this feature. I am also doing research on the AVPro github and will surely post my findings here.\r\n\r\nWhere can I start looking?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10795/comments",
    "author": "Gurwar",
    "comments": [
      {
        "user": "christosts",
        "created_at": "2022-11-22T12:01:23Z",
        "body": "ExoPlayer loads data through `DataSource` components. There are various `DataSource` implementations that know how to read data from local files to remote HTTP endpoints. Your starting point is probably the `ByteArrayDataSource` that reads data directly from a byte array. To specify what `DataSource` to use, you'll need to pass a `DataSource.Factory` You can also read similar discussion on #9558. "
      }
    ]
  },
  {
    "number": 10771,
    "title": "Android 13 Support?",
    "created_at": "2022-11-11T08:04:07Z",
    "closed_at": "2023-01-09T15:35:18Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10771",
    "body": "From the release notes, there is no Android 13 compatibility for the latest version#2.18.1. \r\nWe are wondering when you'll be supporting Android 13. Thanks\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10771/comments",
    "author": "xiaoshu101",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2022-11-11T09:38:15Z",
        "body": "Could you let us know which feature/change you are interested in? "
      },
      {
        "user": "xiaoshu101",
        "created_at": "2022-11-11T14:34:41Z",
        "body": "We are workong on the Android 12 with exoplayer r2.17. And our target shall update the Android version to Android 13. \r\nSo we want to know whether there is a new release version to support the Android 13 or not. Thanks"
      },
      {
        "user": "yuroyami",
        "created_at": "2022-11-13T16:18:41Z",
        "body": "What is exactly is not working on Android 13?"
      },
      {
        "user": "xiaoshu101",
        "created_at": "2022-11-27T14:39:57Z",
        "body": "Check the latest release version#2.18.2. There is no  Android 13 compatibility section too and the version 2.17.0 contain these information.\r\nTherefore. If the device Android version update to the Android 13. Does it have a new version to adapter the Android 13 compatibility  ?"
      },
      {
        "user": "tonihei",
        "created_at": "2023-01-09T15:35:18Z",
        "body": "There is no major adaptation needed for the core ExoPlayer library. If you think something needs to be adapted, please let us know more concretely, otherwise I'll just close this issue because there is nothing actionable for us."
      }
    ]
  },
  {
    "number": 10757,
    "title": "Cannot play video without audio",
    "created_at": "2022-11-07T14:16:52Z",
    "closed_at": "2023-01-26T14:36:37Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10757",
    "body": "It is impossible to play video without audio using HLS (whether there is audio data in the m3u8 is unpredictable). \r\nHow to make it work in compatibility mode (if there is audio data in the m3u8, audio and video will be played at the same time; if there is no audio data, only video will be played).\r\n\r\nIs there any good plan?\r\nThank you in advance.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10757/comments",
    "author": "windseamless",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2022-11-14T16:57:03Z",
        "body": "It definitely possible to play a stream without audio unless the player has been told by some metadata to expect audio and then gets stuck when trying to find audio data in the stream. That's impossible to say without having access to the stream."
      },
      {
        "user": "windseamless",
        "created_at": "2022-11-21T06:57:17Z",
        "body": "> It definitely possible to play a stream without audio unless the player has been told by some metadata to expect audio and then gets stuck when trying to find audio data in the stream. That's impossible to say without having access to the stream.\r\n\r\nThanks for answering!\r\nHowever, I encountered a problem: when HLS started playing, there was audio data, and when there was no audio data during the playing, the playing stopped and could not continue."
      },
      {
        "user": "tonihei",
        "created_at": "2022-11-21T08:46:44Z",
        "body": "> However, I encountered a problem: when HLS started playing, there was audio data, and when there was no audio data during the playing, the playing stopped and could not continue.\r\n\r\nThis sounds like expected behavior. If the stream has audio data at some point, the player can reasonably assume that all the segments have audio data. And for this reason, it tries to load more data until it finds the audio data. \r\n\r\nIf your stream set up changes, I'd suggest to create a separate m3u8 playlist that reflects the changes and add it as a new item to the player."
      },
      {
        "user": "windseamless",
        "created_at": "2022-11-22T03:42:52Z",
        "body": "> > However, I encountered a problem: when HLS started playing, there was audio data, and when there was no audio data during the playing, the playing stopped and could not continue.\r\n> \r\n> This sounds like expected behavior. If the stream has audio data at some point, the player can reasonably assume that all the segments have audio data. And for this reason, it tries to load more data until it finds the audio data.\r\n> \r\n> If your stream set up changes, I'd suggest to create a separate m3u8 playlist that reflects the changes and add it as a new item to the player.\r\n\r\nYes, I can dynamically modify whether my audio and video streams are packaged at the same time when recording.\r\n\r\nThis is a good suggestion. I'll try it."
      },
      {
        "user": "tonihei",
        "created_at": "2023-01-26T14:36:37Z",
        "body": "Closing this issue as it was either solved or there is nothing more we can do in the library to help."
      }
    ]
  },
  {
    "number": 10754,
    "title": "Save ExoPlayer Cache video in device Gallery",
    "created_at": "2022-11-07T10:24:04Z",
    "closed_at": "2023-01-26T14:35:09Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10754",
    "body": "I'm playing video from URL in ExoPlayer and caching it using SimpleCache.\r\n\r\nMy app has a feature that the user can save video if he/she wants.\r\n\r\nMy video playing layout has a save button if the user click on that I want to save that video in his/her mobile gallery.\r\n\r\nHow can I achieve that? & what is the most effective way? Is there any way to save the cache video in gallery? One thing if user click the button before the download completed what should I do?\r\n\r\nAnd one thing I'm playing a list of video in recyclerView if the user clicks on the save button and scrolls up/download I think the download will be distributed ,I think I have save video in a separate thread !!",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10754/comments",
    "author": "AsitDixit",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2022-11-14T16:19:03Z",
        "body": "I would recommend downloading the file directly (e.g. using `HttpURLConnection`) if you want it to be playable by the gallery app. ExoPlayer's caching mechanism is optimized for caching byte ranges whenever we load them, and to reuse those ranges if possible. But it's not a generic downloader that just saves the entire file to disk."
      },
      {
        "user": "tonihei",
        "created_at": "2023-01-26T14:35:09Z",
        "body": "Closing the issue as it seems the question was answered."
      }
    ]
  },
  {
    "number": 10737,
    "title": "Exoplayer does not play H264 AVC1 file on Galaxy Tab A7",
    "created_at": "2022-11-02T06:36:06Z",
    "closed_at": "2022-12-01T02:05:25Z",
    "labels": [
      "question",
      "closed-by-bot"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10737",
    "body": "I would like to play an MP4 file on the Galaxy Tab A7. It is downloaded from a webserver and stored on the device in the movies folder. When I open the MP4 video file with Android applications, it works well. But I have problems to open it with the Exoplayer. It throws the following error:\r\n\r\n2022-11-02 07:26:57.571 7111-7770/xxx.xxx.xxxx D/MediaCodecInfo: NoSupport [codec.profileLevel, avc1.420029, video/avc] [OMX.SEC.avc.sw.dec, video/avc] [gta4lwifi, SM-T500, samsung, 30]\r\n\r\nOn the website it shows that H264 should be supported.\r\n\r\nMy code to load the video file:\r\n\r\n              DataSource.Factory dataSourceFactory = new \r\n              DefaultDataSource.Factory(activity);\r\n              File myDir = new File(Enironment.getExternalStoragePublicDirectory(Environment.DIRECTORY_MOVIES), \"Test\");\r\n              String FILENAME = \"video.mp4\";\r\n              File file = new File(myDir, FILENAME);\r\n              Uri uri = Uri.fromFile(file);\r\n              MediaItem mediaItem = MediaItem.fromUri(uri);\r\n              MediaSource videoSource = new ProgressiveMediaSource.Factory(dataSourceFactory)\r\n                    .createMediaSource(mediaItem);`\r\n\r\nDo you have any idea why it is not supported?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10737/comments",
    "author": "Timo1993",
    "comments": [
      {
        "user": "microkatz",
        "created_at": "2022-11-03T16:08:06Z",
        "body": "@Timo1993 \r\nThat error code conveys one of two possible issues. One would be that the device does not contain a decoder that has codec profiles matching the one needed to decode the video file. The other would be that the decoder does indeed have a matching profile, but does not contain levels that can handle the codec level required by the video file.\r\n\r\nWould you be able to provide a link to the mp4 file that is reproducing this issue?"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2022-11-23T02:04:48Z",
        "body": "<!-- event: mark-stale -->\nHey @Timo1993. We need more information to resolve this issue but there hasn't been an update in 14 weekdays. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2022-12-01T02:05:24Z",
        "body": "<!-- event: close-stale -->\nSince there haven't been any recent updates here, I am going to close this issue.\n\n@Timo1993 if you're still experiencing this problem and want to continue the discussion just leave a comment here and we are happy to re-open this."
      }
    ]
  },
  {
    "number": 10721,
    "title": "ExoPlayer can't play pipeline source ",
    "created_at": "2022-10-25T07:58:20Z",
    "closed_at": "2022-11-10T10:02:42Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10721",
    "body": "ExoPlayer Version\r\n2.18.1\r\n\r\nDevices that reproduce the issue\r\nAndroid TV 9.0\r\n\r\nExpected result\r\nThe media is plays successfully.\r\n\r\nActual result\r\nonPlayerError :com.google.android.exoplayer2.upstream.FileDataSource$FileDataSourceException: java.io.IOException: lseek failed: ESPIPE (Illegal seek)\r\n\r\n_**Q: maybe FileDataSource can't read pipeline source ? its there any ohter DataSourceFactory can read pipeline source ?**_\r\n\r\n\r\n    try {\r\n      file.seek(dataSpec.position);\r\n      bytesRemaining =\r\n          dataSpec.length == C.LENGTH_UNSET ? file.length() - dataSpec.position : dataSpec.length;\r\n    } catch (IOException e) {\r\n      throw new FileDataSourceException(e, PlaybackException.ERROR_CODE_IO_UNSPECIFIED);\r\n    }\r\n    \r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10721/comments",
    "author": "pulapulapin",
    "comments": [
      {
        "user": "icbaker",
        "created_at": "2022-10-25T08:52:46Z",
        "body": "Please describe exactly what you mean by 'pipeline source' - ideally with an example we can use to reproduce the problem."
      },
      {
        "user": "pulapulapin",
        "created_at": "2022-10-26T07:01:48Z",
        "body": "> \r\n\r\n Oh sorry about the bewildered title ,We have a Server write ts format in Android Paht eg:/data/data/com.xxxx.xxxx/cache/00:28:f8:c0:16:ed,  **cause the pipe feature(Signal in process), its likes ring buffer FIFO**. I have no idea how to use the default DataSource Factory \r\ndistinguish the source"
      },
      {
        "user": "icbaker",
        "created_at": "2022-11-10T10:02:42Z",
        "body": "Closing because the information requested wasn't clearly provided."
      }
    ]
  },
  {
    "number": 10714,
    "title": "Hello, how can i show button forward and backward at mini controller for chromecast function?",
    "created_at": "2022-10-23T05:21:27Z",
    "closed_at": "2022-11-22T02:04:45Z",
    "labels": [
      "question",
      "closed-by-bot"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10714",
    "body": "Hello, how can i show button forward and backward at mini controller for chromecast function?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10714/comments",
    "author": "renesotolira",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2022-10-24T10:57:30Z",
        "body": "The general answer is that you can use `CastPlayer` like any other `Player` implementation with UI or other components that take a `Player`. So the anwser to the question is more or less that you can do that in the same way as for `ExoPlayer`. \r\n\r\nIf you have problems with this approach please narrow down your question a bit to make it actionable for us. We can't give you support for general app development questions I'm afraid."
      },
      {
        "user": "google-oss-bot",
        "created_at": "2022-11-11T02:04:43Z",
        "body": "<!-- event: mark-stale -->\nHey @reneciokaigen. We need more information to resolve this issue but there hasn't been an update in 14 weekdays. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2022-11-22T02:04:44Z",
        "body": "<!-- event: close-stale -->\nSince there haven't been any recent updates here, I am going to close this issue.\n\n@reneciokaigen if you're still experiencing this problem and want to continue the discussion just leave a comment here and we are happy to re-open this."
      }
    ]
  },
  {
    "number": 10703,
    "title": "Disabling complete access of software rendering mode in exoplayer",
    "created_at": "2022-10-19T08:31:32Z",
    "closed_at": "2022-10-19T17:01:07Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10703",
    "body": "I am developing a media player application. In that, audio/video player are developed using exoplayer API's.\r\nMy requirement is like I need to disable the complete use of software codecs for rendering. \r\nAs per the documentation, it seems like exoplayer in default uses hardware acceleration first, and if hardware acceleration is not available it works on software codec for that particular file.\r\nMy expectation is the exoplayer should not play the media file if software rendering is needed for playing that media file. Only hardware acceleration must be supported.\r\nI used below API's to set rendering modes. But unable to see any progress.\r\n`DefaultRenderersFactory defaultRenderersFactory = new DefaultRenderersFactory(mContext).setEnableDecoderFallback(false);\r\n                defaultRenderersFactory.setExtensionRendererMode(DefaultRenderersFactory.EXTENSION_RENDERER_MODE_ON).\r\n                mBuilder.setRenderersFactory(defaultRenderersFactory);`",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10703/comments",
    "author": "Kaviya-M",
    "comments": [
      {
        "user": "christosts",
        "created_at": "2022-10-19T17:01:07Z",
        "body": "If you want to not use software decoders at all, you can provide a custom `MediaCodecSelector` by calling `DefaultRenderersFactory.setMediaCodecSelector()`. Your custom `MediaCodecSelector` can forward the `getDecoderInfos()` call to `MediaCodecSelector.DEFAULT` and then filter out any `MediaCodecInfo` that is not `hardwareAccelerated `.\r\n\r\nEnabling decoder fallback or the extension renderers serve different functions. "
      }
    ]
  },
  {
    "number": 10697,
    "title": "black screen when waiting load ads",
    "created_at": "2022-10-18T07:59:57Z",
    "closed_at": "2022-11-14T13:43:26Z",
    "labels": [
      "question",
      "needs triage"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10697",
    "body": "for the first time playing the first video, the ad is shown successfully. but when i try to play the second video, the ad loading runs for a long time and just a black screen",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10697/comments",
    "author": "mancuk",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2022-10-19T12:30:20Z",
        "body": "Please provide more detailed reproduction steps and explanations of what's happening. Otherwise we can't really address the issue if we can't understand what you are seeing and how it occurs."
      },
      {
        "user": "mancuk",
        "created_at": "2022-10-20T06:35:17Z",
        "body": "> Please provide more detailed reproduction steps and explanations of what's happening. Otherwise we can't really address the issue if we can't understand what you are seeing and how it occurs.\r\n\r\nfirst,\r\nwhen about to start the video, an ad appears.\r\nbut when we play another video the ad doesn't appear.\r\nthe ad only appears once when we open the app and play the video. but after that the ad no longer appears when playing another video. only black screen appears"
      },
      {
        "user": "tonihei",
        "created_at": "2022-10-20T09:52:00Z",
        "body": "This doesn't really help I'm afraid. Please provide specific steps we need to take to reproduce the problem (e.g. describing changes to the demo app )"
      },
      {
        "user": "mancuk",
        "created_at": "2022-10-21T06:51:56Z",
        "body": "> This doesn't really help I'm afraid. Please provide specific steps we need to take to reproduce the problem (e.g. describing changes to the demo app )\r\n\r\nI have 2 videos: Video A and Video B\r\nwhen i start video A an ad appears before the video,\r\nbut when I start video B the ad doesn't appear at all and the video doesn't exist, there's only a black screen"
      },
      {
        "user": "mancuk",
        "created_at": "2022-10-21T06:52:51Z",
        "body": "> > This doesn't really help I'm afraid. Please provide specific steps we need to take to reproduce the problem (e.g. describing changes to the demo app )\r\n> \r\n> I have 2 videos: Video A and Video B when i start video A an ad appears before the video, but when I start video B the ad doesn't appear at all and the video doesn't exist, there's only a black screen\r\n\r\nprivate fun initializePlayer() {\r\n\r\n        val mediaSourceFactory: MediaSource.Factory = DefaultMediaSourceFactory( /* context= */this)\r\n            .setLocalAdInsertionComponents(\r\n                 { adtags: MediaItem.AdsConfiguration? -> clientSideAdsLoader },  /* adViewProvider= */\r\n                playerView!!\r\n            )\r\n\r\n        playerView.let {\r\n//            it!!.requestFocus()\r\n            player = ExoPlayer.Builder(this)\r\n                .setMediaSourceFactory(mediaSourceFactory)\r\n                .setSeekForwardIncrementMs(10000)\r\n                .setSeekBackIncrementMs(10000)\r\n                .build()\r\n            it!!.player = player\r\n            clientSideAdsLoader!!.setPlayer(player)\r\n            binding.ytOverlay.player(player!!)\r\n\r\n            debugViewHelper = DebugTextViewHelper(player!!, binding.debugTextView)\r\n            debugViewHelper!!.start()\r\n\r\n            val haveResumePosition = mResumeWindow != C.INDEX_UNSET\r\n\r\n            if (haveResumePosition) {\r\n                Log.i(\"DEBUG\", \" haveResumePosition \")\r\n                player!!.seekTo(mResumeWindow, mResumePosition)\r\n            }\r\n\r\n            val mediaItem  = MediaItem.Builder()\r\n                .setUri(urlHls)\r\n                .setMimeType(MimeTypes.APPLICATION_M3U8)\r\n                .setAdsConfiguration(\r\n                    MediaItem\r\n                        .AdsConfiguration\r\n                        .Builder(\r\n                            Uri.parse(TAG_ADS))\r\n                        .build()\r\n                )\r\n                .build()\r\n\r\n\r\n            player!!.addListener(PlayerEventListener())\r\n            player!!.setMediaItem(mediaItem)\r\n            player!!.prepare()\r\n            updateButtonVisibility()\r\n\r\n        }"
      },
      {
        "user": "tonihei",
        "created_at": "2022-11-01T10:29:38Z",
        "body": "It's expected that the same Ad tag doesn't play again if it was already played. I tried this scenario with an HLS stream in our demo app and everything works as expected. If you think something doesn't work as expected, please make sure to provide steps someone can follow to reproduce the problem. "
      },
      {
        "user": "mancuk",
        "created_at": "2022-11-01T10:43:45Z",
        "body": "> It's expected that the same Ad tag doesn't play again if it was already played. I tried this scenario with an HLS stream in our demo app and everything works as expected. If you think something doesn't work as expected, please make sure to provide steps someone can follow to reproduce the problem.\r\n\r\n"
      },
      {
        "user": "mancuk",
        "created_at": "2022-11-01T10:49:42Z",
        "body": "> > It's expected that the same Ad tag doesn't play again if it was already played. I tried this scenario with an HLS stream in our demo app and everything works as expected. If you think something doesn't work as expected, please make sure to provide steps someone can follow to reproduce the problem.\r\n\r\n\r\nI will try again with existing documents, if there are still errors I will record"
      },
      {
        "user": "tonihei",
        "created_at": "2022-11-14T13:43:26Z",
        "body": "Closing again, because there is nothing actionable for us at the moment. If you can reproduce a problem and think there is something we need to change, please reopen or file a new issue."
      }
    ]
  },
  {
    "number": 10695,
    "title": "codec.queueSecureInputBuffer() calls taking too long for Widevine 60fps on some platforms",
    "created_at": "2022-10-17T15:11:23Z",
    "closed_at": "2023-12-15T17:55:53Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10695",
    "body": "In our testing with ExoPlayer on 60fps Widevine encrypted content we've observed calls to codec.queueSecureInputBuffer() are taking ~8-12ms on the Fire TV Omni and FireTV Insignia. On other platforms, we've checked the time is around ~4-6ms. These long queueSecureInputBuffer() times combined with needsSynchronizationWorkaround being set in doQueueSecureInputBuffer() prevent ExoPlayer from processing an audio and video sample on average every 16ms.\r\n\r\nIf we don't set needsSynchronizationWorkaround and feed audio and video in parallel we can mostly meet the ~16ms average time but it's still close.\r\n\r\nIf we look at the history of needsSynchronizationWorkaround it looks like it was initially only enabled for manufacturer.contains(\"samsung\") || manufacturer.contains(\"motorola\") but in the change to Make asynchronous queueing non-experimental (7a2c7c3297ea7dbe265cab215974178648c7d009) we see that the secure input synchronization workaround was applied universally.\r\n\r\n\r\nQuestions are:\r\nDoes anyone have any info on the decision to apply the secure input synchronization to all platforms or other info related to [Internal: b/149908061]?   \r\nAny idea if it's likely safe to disable the needsSynchronizationWorkaround for the problem platforms so that we are calling codec.queueSecureInputBuffer() for audio and video in parallel from separate threads? On some platforms(Broadcom) we see video corruption without needsSynchronizationWorkaround but so far our limited testing of FireTV devices has not shown any issues with needsSynchronizationWorkaround set to false.\r\n\r\nAlso any idea about anything that could be causing the codec.queueSecureInputBuffer() calls to be so slow on the AFTTIFF43 and INSIGNIA_NS_43F301NA22? \r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10695/comments",
    "author": "mbolaris",
    "comments": [
      {
        "user": "christosts",
        "created_at": "2022-10-17T16:41:13Z",
        "body": "`needsSynchronizationWorkaround` is there to solve the corrupted video issue you observed. There is no error raised when that happens, so the player or any app don't have a way to detect that at runtime. It was originally seen on some Samsung and Motorola phones and later on then it was detected on a Pixel 3. The fact that the video corruption cannot be detected led us to enable it for all devices.\r\n\r\n> Any idea if it's likely safe to disable the needsSynchronizationWorkaround for the problem platforms so that we are calling codec.queueSecureInputBuffer() for audio and video in parallel from separate threads? On some platforms(Broadcom) we see video corruption without needsSynchronizationWorkaround but so far our limited testing of FireTV devices has not shown any issues with needsSynchronizationWorkaround set to false.\r\n\r\nDebugging the corrupted video on one device went down to how the OEM implemented the native crypto API.  The implementation was re-using memory buffers per DRM session and the concurrent calls to MediaCodec.queueSecureInputBuffer() for audio and video were effectively corrupting data is those buffers. There was no public API to detect such an implementation detail, and thus enable the workaround only when needed. Unfortunately, I cannot offer more concrete help when to enable or disable the work around apart from extensive testing on the device at hand, and perhaps monitoring user reports.\r\n\r\n> Also any idea about anything that could be causing the codec.queueSecureInputBuffer() calls to be so slow on the AFTTIFF43 and INSIGNIA_NS_43F301NA22?\r\n\r\nIt goes down to how the crypto API is implemented by the OEM. Unfortunately, I don't have more details other than saying that this is device specific."
      },
      {
        "user": "christosts",
        "created_at": "2022-10-17T16:42:01Z",
        "body": "Leaving the issue open for anyone else who may want to add some information."
      }
    ]
  },
  {
    "number": 10689,
    "title": "Configuration information ",
    "created_at": "2022-10-14T11:55:08Z",
    "closed_at": "2022-10-14T15:07:36Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10689",
    "body": "Hi everyone ,\r\n\r\n1. Would like to know is there any method through which we can get DEFAULT_BUFFER_FOR_PLAYBACK_MS and DEFAULT_BUFFER_FOR_PLAYBACK_AFTER_REBUFFER_MS programmatically.  \r\n2. Is there any algorithm which will decide depending on our network strength what will be the DEFAULT_BUFFER_FOR_PLAYBACK_MS and DEFAULT_BUFFER_FOR_PLAYBACK_AFTER_REBUFFER_MS .\r\n3. Can we modify DEFAULT_BUFFER_FOR_PLAYBACK_MS and DEFAULT_BUFFER_FOR_PLAYBACK_AFTER_REBUFFER_MS when video is playing .",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10689/comments",
    "author": "shripaljadhav",
    "comments": [
      {
        "user": "icbaker",
        "created_at": "2022-10-14T15:07:36Z",
        "body": "> 1. Would like to know is there any method through which we can get DEFAULT_BUFFER_FOR_PLAYBACK_MS and DEFAULT_BUFFER_FOR_PLAYBACK_AFTER_REBUFFER_MS programmatically.\r\n\r\nThese are public fields, so you can read them programmatically from `DefaultLoadControl`.\r\n\r\n> 2. Is there any algorithm which will decide depending on our network strength what will be the DEFAULT_BUFFER_FOR_PLAYBACK_MS and DEFAULT_BUFFER_FOR_PLAYBACK_AFTER_REBUFFER_MS .\r\n\r\nThese values are compile-time constants, they will not change based on your \"network strength\".\r\n\r\n> 3. Can we modify DEFAULT_BUFFER_FOR_PLAYBACK_MS and DEFAULT_BUFFER_FOR_PLAYBACK_AFTER_REBUFFER_MS when video is playing .\r\n\r\nNo, see above - these are compile-time constants.\r\n\r\n"
      }
    ]
  },
  {
    "number": 10683,
    "title": "How to stop buffering old mediaItem manifest when play other mediaitem?",
    "created_at": "2022-10-11T07:47:59Z",
    "closed_at": "2022-11-10T10:04:54Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10683",
    "body": "I have a mediaitem list, when I switch to another mediaitem, the player continues to load the manifest of the old mediaitem",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10683/comments",
    "author": "thucngv",
    "comments": [
      {
        "user": "icbaker",
        "created_at": "2022-10-11T12:29:25Z",
        "body": "Please provide clear & complete steps we can use to reproduce this - and also please provide a clear explanation of how you are measuring/observing \"the player continues to load the manifest of the old mediaitem\"."
      },
      {
        "user": "thucngv",
        "created_at": "2022-10-12T06:44:21Z",
        "body": "> Please provide clear & complete steps we can use to reproduce this - and also please provide a clear explanation of how you are measuring/observing \"the player continues to load the manifest of the old mediaitem\".\r\n\r\nI play a mediaitem playlist .\r\nwhen next mediaitem, old mediaitem still loading manifest.\r\nYou can check by logging http request"
      },
      {
        "user": "icbaker",
        "created_at": "2022-11-10T10:04:54Z",
        "body": "Closing because the clear repro steps requested weren't provided."
      }
    ]
  },
  {
    "number": 10679,
    "title": "we need support for ac3 audio codec",
    "created_at": "2022-10-07T08:58:37Z",
    "closed_at": "2022-10-07T09:20:40Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10679",
    "body": "i am looking for support for the audio codec in our android app can't find a solution for exoplayer to work with ac3 codec with no sound in android devices.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10679/comments",
    "author": "maanich",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2022-10-07T09:20:40Z",
        "body": "Some devices support ac3, but it depends on the available codecs on the device. You can also have a look at the Ffmpeg extension for a software codec solution that can be added to devices that support it by default."
      },
      {
        "user": "maanich",
        "created_at": "2022-10-07T09:23:30Z",
        "body": "<!--\n/* Font Definitions */\n@font-face\n\t{font-family:\"Cambria Math\";\n\tpanose-1:2 4 5 3 5 4 6 3 2 4;}\n@font-face\n\t{font-family:Calibri;\n\tpanose-1:2 15 5 2 2 2 4 3 2 4;}\n/* Style Definitions */\np.MsoNormal, li.MsoNormal, div.MsoNormal\n\t{margin:0cm;\n\tfont-size:11.0pt;\n\tfont-family:\"Calibri\",sans-serif;}\na:link, span.MsoHyperlink\n\t{mso-style-priority:99;\n\tcolor:blue;\n\ttext-decoration:underline;}\n.MsoChpDefault\n\t{mso-style-type:export-only;}\n@page WordSection1\n\t{size:612.0pt 792.0pt;\n\tmargin:72.0pt 72.0pt 72.0pt 72.0pt;}\ndiv.WordSection1\n\t{page:WordSection1;}\n-->Thanks for quick reply  is it possible to get ac3 support from your side in exoplayer .Most Chinese boxes don’t have ac3 support and you need to do it by your self. we are happy to pay if you will support us in making ac3 audible in our app. Sent from Mail for Windows From: toniheiSent: 07 October 2022 10:20To: google/ExoPlayerCc: maanich; AuthorSubject: Re: [google/ExoPlayer] we need support for ac3 audio codec (Issue #10679) Some devices support ac3, but it depends on the available codecs on the device. You can also have a look at the Ffmpeg extension for a software codec solution that can be added to devices that support it by default.—Reply to this email directly, view it on GitHub, or unsubscribe.You are receiving this because you authored the thread.Message ID: ***@***.***> "
      },
      {
        "user": "tonihei",
        "created_at": "2022-10-07T09:45:58Z",
        "body": "Please have a look at the Ffmpeg extension as suggested above. We unfortunately can't help you to debug/build your app directly."
      },
      {
        "user": "maanich",
        "created_at": "2022-10-07T10:07:38Z",
        "body": "If you please guide me any link regarding ac3 n ffmoeg pleaseSent from IphoneOn 7 Oct 2022, at 10:46 am, tonihei ***@***.***> wrote:﻿\nPlease have a look at the Ffmpeg extension as suggested above. We unfortunately can't help you to debug/build your app directly.\n\n—Reply to this email directly, view it on GitHub, or unsubscribe.You are receiving this because you authored the thread.Message ID: ***@***.***>"
      }
    ]
  },
  {
    "number": 10675,
    "title": "RTSP Over HTTP Tunneling",
    "created_at": "2022-10-05T20:41:58Z",
    "closed_at": "2023-01-26T14:34:56Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10675",
    "body": "Hi all,\r\n\r\nBeen using ExoPlayer for a while now and I'm experimenting with the idea of RTSP over Http Tunneling. Does Exoplayer support this?\r\n\r\nIf so, how can I configure the player so that its properly handled.\r\nThank you",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10675/comments",
    "author": "joseandroidengineer",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2022-10-07T10:04:53Z",
        "body": "I don't think this is supported by default, but you may be able to set this up yourself by passing our own `SocketFactory` to `RtspMediaSource`. "
      },
      {
        "user": "joseandroidengineer",
        "created_at": "2022-10-24T16:09:49Z",
        "body": "I'll have to make my own Socket Factory within the exoplayer itself?"
      },
      {
        "user": "tonihei",
        "created_at": "2022-11-14T13:39:59Z",
        "body": "You can pass a `SocketFactory` to `RtspMediaSource.Factory` from your app. "
      },
      {
        "user": "tonihei",
        "created_at": "2023-01-26T14:34:56Z",
        "body": "Closing the issue as it seems the question was answered."
      }
    ]
  },
  {
    "number": 10674,
    "title": "MediaCodecAudioRenderer error when play live SmoothStreaming content",
    "created_at": "2022-10-05T09:17:24Z",
    "closed_at": "2022-12-30T02:04:27Z",
    "labels": [
      "question",
      "bug: in platform drm",
      "closed-by-bot"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10674",
    "body": "\r\nWhen we play live content in Smooth Streaming, sometimes we are having problems with the audio media codec. The error we get is the following:\r\n\r\nandroid.media.MediaCodec$CryptoException \r\nMediaCodecAudioRenderer error, index=1, format=Format(0, audio101_spa, audio/mp4, audio/mp4a-latm, null, 96000, es, [-1, -1, -1.0], [2, 48000]), format_supported=YES | 11 | 1127 | 1138\r\nMediaCodecAudioRenderer error, index=1, format=Format(null, audio_482_spa, audio/mp4, audio/mp4a-latm, null, 96000, es, [-1, -1, -1.0], [2, 48000]), format_supported=YES | 0 | 1063 | 1063\r\nMediaCodecVideoRenderer error, index=0, format=Format(5, video, video/mp4, video/avc, null, 6815744, null, [1920, 1080, -1.0], [-1, -1]), format_supported=YES | 2 | 873 | 875\r\nMediaCodecVideoRenderer error, index=0, format=Format(5, video, video/mp4, video/avc, null, 6500000, null, [1920, 1080, -1.0], [-1, -1]), format_supported=YES | 3 | 590 | 593\r\nMediaCodecAudioRenderer error, index=1, format=Format(0, audio_spa, audio/mp4, audio/mp4a-latm, null, 95000, es, [-1, -1, -1.0], [2, 48000]), format_supported=YES | 5 | 545 | 550\r\nMediaCodecVideoRenderer error, index=0, format=Format(6, video, video/mp4, video/avc, null, 6500000, und, [1920, 1080, -1.0], [-1, -1]), format_supported=YES | 2 | 380 | 382\r\nMediaCodecVideoRenderer error, index=0, format=Format(3, video, video/mp4, video/avc, null, 4000000, null, [1024, 576, -1.0], [-1, -1]), format_supported=YES | 5 | 296 | 301\r\nMediaCodecAudioRenderer error, index=1, format=Format(null, audio_482_qha, audio/mp4, audio/mp4a-latm, null, 96000, qha, [-1, -1, -1.0], [2, 48000]), format_supported=YES | 0 | 165 | 165\r\nMediaCodecAudioRenderer error, index=1, format=Format(0, audio101_qha, audio/mp4, audio/mp4a-latm, null, 96000, qha, [-1, -1, -1.0], [2, 48000]), format_supported=YES | 0 | 116 | 116\r\nMediaCodecVideoRenderer error, index=0, format=Format(3, video, video/mp4, video/avc, null, 4613734, null, [1024, 576, -1.0], [-1, -1]), format_supported=YES | 0 | 97 | 97\r\nMediaCodecVideoRenderer error, index=0, format=Format(5, video, video/mp4, video/avc, null, 6499968, null, [1920, 1080, -1.0], [-1, -1]), format_supported=YES | 1 | 55 | 56\r\n\r\nAny clue where it can go? , what we have been able to see is that the problem reproduces randomly so we cannot find the cause.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10674/comments",
    "author": "efrop12",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2022-10-06T13:17:46Z",
        "body": "This seems to be related to the DRM content protection. We'd need a full bugreport and ideally test media to investigate further. You can send links to dev.exoplayer@gmail.com with \"Issue #10674\" in the subject if you don't want to post here.\r\n\r\nAs a first step, I would also suggest looking at the reported errors in logcat in case the error already contains enough information to tell you what's wrong. "
      },
      {
        "user": "google-oss-bot",
        "created_at": "2022-10-26T01:04:35Z",
        "body": "<!-- event: mark-stale -->\nHey @efrop12. We need more information to resolve this issue but there hasn't been an update in 14 weekdays. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2022-11-04T01:04:30Z",
        "body": "<!-- event: close-stale -->\nSince there haven't been any recent updates here, I am going to close this issue.\n\n@efrop12 if you're still experiencing this problem and want to continue the discussion just leave a comment here and we are happy to re-open this."
      },
      {
        "user": "efrop12",
        "created_at": "2022-11-08T06:58:43Z",
        "body": "Hello, as tonihei suggested, several days ago I sent the requested information by email. Thanks"
      },
      {
        "user": "tonihei",
        "created_at": "2022-11-08T09:29:45Z",
        "body": "Thanks!  Found the email :) \r\n\r\n@rrfrias Could you take a look to see where the exception is coming from? Bug report is attached to the email."
      },
      {
        "user": "rrfrias",
        "created_at": "2022-12-01T03:58:18Z",
        "body": "Hi @efrop12, i would like to share your bugreport with Broadcom (SoC) for furthur analysis. Do i have your permission?\r\n\r\nAre you able to reproduce this problem on other devices? Any repro steps would be helpful.\r\n\r\nInternal ref: 260959116"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2022-12-21T02:04:42Z",
        "body": "<!-- event: mark-stale -->\nHey @efrop12. We need more information to resolve this issue but there hasn't been an update in 14 weekdays. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2022-12-30T02:04:27Z",
        "body": "<!-- event: close-stale -->\nSince there haven't been any recent updates here, I am going to close this issue.\n\n@efrop12 if you're still experiencing this problem and want to continue the discussion just leave a comment here and we are happy to re-open this."
      }
    ]
  },
  {
    "number": 10636,
    "title": "How to play videos in UHD in Sony Xperia 1 IV",
    "created_at": "2022-09-20T05:35:42Z",
    "closed_at": "2022-12-23T02:04:47Z",
    "labels": [
      "question",
      "closed-by-bot"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10636",
    "body": "The Sony Xperia 1 IV should be able to play videos in UHD (1644 x 3840), but in exoplayer the videos play at QHD (1096 x 2560). Is there way to make it play at UHD since the phone and even the native gallery player supports it.\r\n\r\nDisplay.Mode[] modes = disp.getSupportedModes() gives me the following : \r\n\r\nMode 1: 1096x2560/60.0fps\r\nMode 2: 1096x2560/120.0fps\r\nMode 3: 1644x3840/60.0fps\r\nMode 4: 1644x3840/120.0fps\r\n\r\nI am unable to use param.preferredDisplayModeId to set the preferred mode. The active mode is always Mode 2 - 1096x2560/120.0fps.\r\n\r\nBut if I disable high refresh rate in the device settings (thereby disabling 120hz), the default mode still remains Mode 2. But I am able to set preferredDisplayMode to Mode 1. Even then I am unable to access mode 3 and 4.\r\n\r\nIs there a way to access mode 3 and 4. Thanks in advance!\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10636/comments",
    "author": "Shrihari1428",
    "comments": [
      {
        "user": "christosts",
        "created_at": "2022-11-24T17:12:42Z",
        "body": "Is the video you are trying to play at UHD resolution? Can you share the video here?"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2022-12-14T02:04:39Z",
        "body": "<!-- event: mark-stale -->\nHey @Shrihari1428. We need more information to resolve this issue but there hasn't been an update in 14 weekdays. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2022-12-23T02:04:46Z",
        "body": "<!-- event: close-stale -->\nSince there haven't been any recent updates here, I am going to close this issue.\n\n@Shrihari1428 if you're still experiencing this problem and want to continue the discussion just leave a comment here and we are happy to re-open this."
      }
    ]
  },
  {
    "number": 10628,
    "title": "unable play video after proguard assumenosideeffects {*;}",
    "created_at": "2022-09-16T12:52:00Z",
    "closed_at": "2022-10-03T10:39:01Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10628",
    "body": "exoplayer:2.18.1\r\nThe following configuration cannot play video\r\n``` groovy\r\n-assumenosideeffects class timber.log.Timber {\r\n    *;\r\n}\r\n```\r\nBut there is no problem with the following configuration\r\n``` groovy\r\n-assumenosideeffects class timber.log.Timber {\r\n    public static void d(java.lang.String, ...);\r\n}\r\n```\r\nIs it because some code of exoplayer has been deleted by assumenodeeffects {\\*;}? Will this problem be fixed?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10628/comments",
    "author": "laole918",
    "comments": [
      {
        "user": "rohitjoins",
        "created_at": "2022-09-20T18:52:33Z",
        "body": "@laole918 This proguard rule doesn't seem to effect Exoplayer library code in anyway as the rule is specific to the logging library class you are using.\r\n\r\nUnfortunately we can't give 1:1 support for solving app specific issues. We'll leave this issue open for ~2 weeks in case anyone wishes to answer it here. If you think this is a problem with ExoPlayer, please narrow down your issue to describe the ExoPlayer behaviour that doesn't match your expectations."
      }
    ]
  },
  {
    "number": 10609,
    "title": "How can we extract custom data being sent in SCTE35 marker in a livestream?",
    "created_at": "2022-09-12T03:51:35Z",
    "closed_at": "2022-09-15T15:52:00Z",
    "labels": [
      "question",
      "needs triage"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10609",
    "body": "We are being sent custom key-values in a scte35 marker in a livestream periodically, on the basis of which we need to do some ui operations.\r\nWe are receiving the periodic events in onMetadata(Metadata metadata).\r\nHowever, the object we are receiving is a PrivFrame, and we are not able to extract the data from it. (Data is definitely coming, as the web player using videojs player is gtting the data.)\r\n\r\nIs there any way to extract the custom data from the PrivFrame?\r\n\r\nAlso, is there a way to covert PrivFrame object to TimeSignalCommand object? (As per content operations, they are sending a SpliceCommand which we should be able to extract as TimeSignalCommand, but we are not sure how that happens)\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10609/comments",
    "author": "Debayudh",
    "comments": [
      {
        "user": "icbaker",
        "created_at": "2022-09-12T07:34:02Z",
        "body": "`PrivFrame` has a `privateData` field which may contain what you need?\r\n\r\nOtherwise please provide a stream we can use to reproduce the problem in order for us to investigate further.\r\nPlease either upload it here or send to dev.exoplayer@gmail.com using the subject `Issue #10609`. Please also update this issue to indicate you’ve done this."
      },
      {
        "user": "Debayudh",
        "created_at": "2022-09-12T07:47:13Z",
        "body": "Hi @icbaker \r\n\r\nIn the privateData, we are getting an array of bytes, which when converted to String, gives just the timestamp.\r\nThe stream is client-provided, so I'm not sure I will be able to share it.\r\n"
      },
      {
        "user": "icbaker",
        "created_at": "2022-09-15T15:33:12Z",
        "body": "It looks like you're manually pulling tags out of the playlist. I think it's up to you to determine which ones are relevant for the current playback time."
      }
    ]
  },
  {
    "number": 10559,
    "title": "hide scrubber of seekbar in exoplayer",
    "created_at": "2022-08-26T17:51:24Z",
    "closed_at": "2022-10-05T17:05:35Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10559",
    "body": "how to hide scrubber of seekbar in exoplayer. I want to hide the scrubber after playing the video 3 seconds ",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10559/comments",
    "author": "vishnu20037",
    "comments": [
      {
        "user": "icbaker",
        "created_at": "2022-09-12T06:58:56Z",
        "body": "`StyledPlayerView` uses `DefaultTimeBar` (via `StyledPlayerControlView`). `DefaultTimeBar` has `hideScrubber()` methods. However, it's not currently very easy to get a reference to this instance if you're using `StyledPlayerView`. Our old recommendation was to override the layout XML file, and set the `exo_progress` to your custom `TimeBar` instance. We've found that layout overriding like this isn't very flexible, or compatible with the design of `StyledPlayerView`, so we don't currently encourage this approach to customisation (though it will still work)."
      },
      {
        "user": "icbaker",
        "created_at": "2022-10-05T17:05:35Z",
        "body": "Closing due to inactivity."
      }
    ]
  },
  {
    "number": 10557,
    "title": "Cast a MediaSource instead of a MediaItem",
    "created_at": "2022-08-26T10:35:11Z",
    "closed_at": "2022-12-02T15:53:24Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10557",
    "body": "I'm looking into casting functionality and after looking into samples and the `CastPlayer` code source, it seems the cast player only allows media items as an entry point. My local player plays a `MediaSource` that merges two `MediaItem`s (video mp4 and audio mp3). Is there a way to stream such a source with the cast player? Or I am limited to stream either one of them (video or audio)? Or maybe a way to convert the source somehow (although I doubt it)?\r\n\r\nThe snippet to create the media source\r\n```\r\nval videoSource = DefaultMediaSourceFactory(context).createMediaSource(MediaItem.fromUri(videoUrl))\r\nval audioSource = DefaultMediaSourceFactory(context).createMediaSource(MediaItem.fromUri(audioUrl))\r\nval sources = MergingMediaSource(videoSource, audioSource)\r\n\r\nlocalPlayer = ExoPlayer.Builder(context).build()\r\ncastPlayer = CastPlayer(castContext)\r\n\r\nlocalPlayer.setMediaSources(sources)\r\ncastPlayer.setMediaItems(sources) // <--- only media items accepted by CastPlayer\r\n```\r\n\r\nThanks for your guidance!\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10557/comments",
    "author": "StephenVinouze",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2022-08-31T10:07:39Z",
        "body": "I'm not aware that we can send something else than a single URI to the cast device (`RemoteMediaClient`) for playback. `MergingMediaSource` is a convenient feature of ExoPlayer but I don't think there is something like this available for a standard cast receiver application. This may (I'm totally not sure) be possible if you do your own receiver with a custom player like ShakaPlayer, but with `RemoteMediaPlayer`, the standard player and the standard API the Cast SDK offers I think this is not feasible.\r\n\r\nAside: I may be wrong and I would in this case be happy to hear about such an API of the Cast SDK. So if anyone in the audience can educate me about this I'm happy to learn and turn this issue into an `enhancement`. "
      },
      {
        "user": "marcbaechinger",
        "created_at": "2022-08-31T10:12:05Z",
        "body": "Adding another comment: You may be able to turn your merging media source into a DASH or HLS manifest/playlist that references video and audio streams. Then you can create a DASH or HLS media item and pass it to the cast player's playlist API."
      },
      {
        "user": "StephenVinouze",
        "created_at": "2022-09-08T15:54:40Z",
        "body": "Thanks for those highlights, that's source for thoughts :) I'll look into it. Feel free to close the ticket if no one else jumps in anytime soon ;) "
      }
    ]
  },
  {
    "number": 10556,
    "title": " TTML subtitles not disappeared even if there is no audio",
    "created_at": "2022-08-25T15:15:32Z",
    "closed_at": "2022-10-06T09:39:40Z",
    "labels": [
      "question",
      "needs triage"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10556",
    "body": "Hello \r\n\r\nI have a problem with the TTML subtitles (Png image) with the version of Exo 2.17.\r\nThe subtitles are m4s segments with a duration between 2s and 4s presented in the manifest as follows:\r\n\r\n```\r\n<AdaptationSet mimeType=\"application/mp4\" startWithSAP=\"1\" lang=\"fra\" segmentAlignment=\"true\">\r\n\t\t\t<SegmentTemplate timescale=\"10000000\" presentationTimeOffset=\"0\" media=\"$RepresentationID$/Segment-$Time$.m4s\" initialization=\"$RepresentationID$/init.m4i\">\r\n\t\t\t\t<SegmentTimeline>\r\n\t\t\t\t\t<S t=\"8800112\" d=\"29599888\" />\r\n\t\t\t\t\t<S t=\"38400000\" d=\"19200000\" r=\"22\" />\r\n\t\t\t\t\t<S t=\"480000000\" d=\"38400000\" />\r\n\t\t\t\t\t<S t=\"518400000\" d=\"19200000\" r=\"22\" />\r\n\t\t\t\t\t<S t=\"960000000\" d=\"38400000\" />\r\n\t\t\t\t\t<S t=\"998400000\" d=\"19200000\" r=\"22\" />\r\n\t\t\t\t\t<S t=\"1440000000\" d=\"38400000\" />\r\n\t\t\t\t\t<S t=\"1478400000\" d=\"19200000\" r=\"22\" />\r\n\t\t\t\t\t<S t=\"1920000000\" d=\"38400000\" />\r\n\t\t\t\t\t<S t=\"63360000000\" d=\"38400000\" />\r\n                                              \t\t...\r\n\t\t\t\t\t<S t=\"63398400000\" d=\"19200000\" r=\"22\" />\r\n\t\t\t\t\t<S t=\"63840000000\" d=\"38400000\" />\r\n\t\t\t\t\t<S t=\"63878400000\" d=\"19200000\" r=\"22\" />\r\n\t\t\t\t\t<S t=\"64320000000\" d=\"38400000\" />\r\n\t\t\t\t\t<S t=\"64358400000\" d=\"10400111\" />\r\n\t\t\t\t</SegmentTimeline>\r\n\t\t\t</SegmentTemplate>\r\n\t\t\t<Representation codecs=\"stpp\" id=\"stream_9\" bandwidth=\"15000\" />\r\n</AdaptationSet>\r\n\r\n```\r\n\r\nIn fact, the subtitle remains displayed even if there is no audio in the video (Exceeds the segment duration > 4s).\r\nI have the impression that as long as there is a subtitle that follows, it replaces itself well, but the last of a dialogue that ends, disappears only after a certain time (tempo in the code?) which does not correspond to the end present in the xml.\r\n\r\nPI: Following verification in the mp4 boxes of the m4s segment the data are consistent:\r\nExample of a segment that its display exceeds 2s \r\n   timescale = 10000000\r\n   sidx@subsegment_duration= 19200000\r\n\r\n\r\n\r\n\r\nDo you have an idea please?  Is it a known problem ?\r\n\r\nBR,\r\nSaif\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10556/comments",
    "author": "Xlcghs",
    "comments": [
      {
        "user": "icbaker",
        "created_at": "2022-10-06T09:31:04Z",
        "body": "I'm afraid we need media we can use to reproduce the problem in order to investigate this, probably a link to a stream hosted somewhere. Please either upload it here or send to dev.exoplayer@gmail.com using the subject `Issue #10556`. Please also update this issue to indicate you’ve done this."
      },
      {
        "user": "Xlcghs",
        "created_at": "2022-10-06T09:38:59Z",
        "body": "I have investigated the problem, in fact it is a problem in the stream.\r\nI will close the ticket"
      }
    ]
  },
  {
    "number": 10543,
    "title": "Intercepting notification events",
    "created_at": "2022-08-22T18:02:13Z",
    "closed_at": "2022-09-01T15:31:10Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10543",
    "body": "I would like to intercept the notification events, so I can implement custom functionality when they are fired. Currently, they are being handled in this `NotificationBroadcastReceiver`:\r\n\r\n```java\r\n @Override\r\n    public void onReceive(Context context, Intent intent) {\r\n      Player player = PlayerNotificationManager.this.player;\r\n      if (player == null\r\n          || !isNotificationStarted\r\n          || intent.getIntExtra(EXTRA_INSTANCE_ID, instanceId) != instanceId) {\r\n        return;\r\n      }\r\n      String action = intent.getAction();\r\n      if (ACTION_PLAY.equals(action)) {\r\n        if (player.getPlaybackState() == Player.STATE_IDLE) {\r\n          player.prepare();\r\n        } else if (player.getPlaybackState() == Player.STATE_ENDED) {\r\n          player.seekToDefaultPosition(player.getCurrentMediaItemIndex());\r\n        }\r\n        player.play();\r\n      } else if (ACTION_PAUSE.equals(action)) {\r\n        player.pause();\r\n      } else if (ACTION_PREVIOUS.equals(action)) {\r\n        player.seekToPrevious();\r\n      } else if (ACTION_REWIND.equals(action)) {\r\n        player.seekBack();\r\n      } else if (ACTION_FAST_FORWARD.equals(action)) {\r\n        player.seekForward();\r\n      } else if (ACTION_NEXT.equals(action)) {\r\n        player.seekToNext();\r\n      } else if (ACTION_STOP.equals(action)) {\r\n        player.stop(/* reset= */ true);\r\n      } else if (ACTION_DISMISS.equals(action)) {\r\n        stopNotification(/* dismissedByUser= */ true);\r\n      } else if (action != null\r\n          && customActionReceiver != null\r\n          && customActions.containsKey(action)) {\r\n        customActionReceiver.onCustomAction(player, action, intent);\r\n      }\r\n    }\r\n```\r\n\r\nSadly, I can't replace the receiver with my own, since it's private:\r\n\r\n`  private final NotificationBroadcastReceiver notificationBroadcastReceiver;`\r\n\r\nI was thinking of maybe overriding `getActions` and `getActionIndicesForCompactView` and make my own custom actions, but the original actions are used in so many cases in functions that are not overridable that I don't think it's possible to mimic when they are called. \r\n\r\nMy final solution is to just make my own notification manager from scratch, but I hope it doesn't come to that.\r\n\r\nIs there a way that I haven't found to intercept those events?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10543/comments",
    "author": "mpivchev",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2022-08-22T22:12:38Z",
        "body": "You can use a `ForwardingPlayer` to intercept the method calls done in `onReceive`. Issue #10212 has some more detail. Please let me know if this helps for your use case."
      },
      {
        "user": "mpivchev",
        "created_at": "2022-09-01T15:31:03Z",
        "body": "`ForwardingPlayer` did the trick, thank you."
      }
    ]
  },
  {
    "number": 10533,
    "title": "Do not Deprecate Player.Listener.onPlayerStateChanged()",
    "created_at": "2022-08-17T16:56:36Z",
    "closed_at": "2022-08-17T17:36:12Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10533",
    "body": "### [REQUIRED] Use case description\r\n\r\nI need to listen for a state where the video is playing. The only way to do that right now is using `Player.Listener.onPlayerStateChanged()`.\r\n\r\n```\r\nexoPlayer.addListener(object : Player.Listener {\r\n            override fun onPlayerStateChanged(playWhenReady: Boolean, playbackState: Int) {\r\n                if (playWhenReady && playbackState == ExoPlayer.STATE_READY) {\r\n                    // The video is playing\r\n                }\r\n            }\r\n        })\r\n```\r\n\r\nHowever, this method is marked as deprecated. `onPlaybackStateChanged(int)` and `onPlayWhenReadyChanged(boolean, int)` are being recommended. However, none of them provides the state that the video is actually playing.\r\n\r\n`onPlaybackStateChanged()` could means it's still loading and `onPlayWhenReadyChanged` could means it's loaded but still paused.\r\n\r\n\r\n\r\n### Proposed solution\r\nWe should un-deprecate `onPlayerStateChanged`\r\n\r\n\r\n\r\n### Alternatives considered\r\nOr adde a new state: `STATE_PLAYING`\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10533/comments",
    "author": "GC-Xi",
    "comments": [
      {
        "user": "rohitjoins",
        "created_at": "2022-08-17T17:36:12Z",
        "body": "@GC-Xi You can use either of the options below to know if the video is playing:\r\n\r\n1.  `onEvents(Player player, Events events)` callback which has a reference to player and check\r\n```\r\nif (events.contains(Player.EVENT_PLAY_WHEN_READY_CHANGED) && player.getPlaybackState() == ExoPlayer.STATE_READY) {\r\n    // The video is playing\r\n}\r\n```\r\n2. `Player.isPlaying()` which returns whether the player is playing."
      },
      {
        "user": "GC-Xi",
        "created_at": "2022-08-18T10:22:18Z",
        "body": "@rohitjoins That worked. Thanks!"
      }
    ]
  },
  {
    "number": 10529,
    "title": "is there any difference between addMediasource and setMediasource method as in case of setMediaSource method we always need to call player.prepare method? will it affect start time of video?",
    "created_at": "2022-08-16T13:31:44Z",
    "closed_at": "2022-08-17T18:36:37Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10529",
    "body": null,
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10529/comments",
    "author": "kshailes",
    "comments": [
      {
        "user": "rohitjoins",
        "created_at": "2022-08-17T18:36:37Z",
        "body": "@kshailes Based on the documentation for these methods:\r\n\r\n- `setMediaSource` : Clears the playlist and adds the specified MediaSource\r\n- `addMediaSource` : Adds a media source to the end of the playlist. \r\n\r\nSo that is basically the difference between these methods. Both these methods have multiple overridden methods to reset position or start playing from a particular index in the playlist.\r\n\r\n`player.prepare()` is called to move the player out of idle state and start loading media, which for `addMediaSource` is not always required if the player is already playing a playlist and a media source gets added to the list.\r\n\r\n"
      },
      {
        "user": "kshailes",
        "created_at": "2022-08-17T19:39:09Z",
        "body": "thanks @rohitjoins "
      }
    ]
  },
  {
    "number": 10522,
    "title": "How to DELAY video and sound",
    "created_at": "2022-08-15T03:29:03Z",
    "closed_at": "2022-11-16T14:31:26Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10522",
    "body": "Hi,\r\n\r\nIs it possible to make the video and sound DELAY?\r\nIf the video and audio are out of sync, I'm thinking of asking the user to manually adjust it.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10522/comments",
    "author": "hyoromo",
    "comments": [
      {
        "user": "rohitjoins",
        "created_at": "2022-11-16T14:31:26Z",
        "body": "@hyoromo Sorry, this is not something we support. It may be possible to achieve this by forking ExoPlayer and modifying the internals. You can also look into the conversations we had around this in #1073."
      }
    ]
  },
  {
    "number": 10511,
    "title": "Backing the ExoPlayer playlist with another datatype",
    "created_at": "2022-08-09T22:45:44Z",
    "closed_at": "2022-08-12T09:27:07Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10511",
    "body": "My app does not leverage the typical ExoPlayer media datatype, `MediaItem`, as it tends to be too restrictive for my use. Instead, I have my own datatype (`Song`) that can be transformed into a `MediaItem` for use in ExoPlayer. By extension, I have my own data structure for the queue (or \"playlist\") in my app that is also composed of `Song` instances.\r\n\r\nI've been trying to leverage the ExoPlayer playlist system for some time so I could implement Gapless Playback in my app, however, the major issue stems from the way I must convert between `Song` and `MediaItem`:\r\n- I can't just map the `Song` queue to a list of a `MediaItem` instances and then call `setMediaItems`, as such could occur during playback and cause a variety of issues.\r\n- The more \"correct\" queue methods (ex. `addMediaItem` or `ShuffleOrder`) also do not suffice, as trying to keep two mirrors of the queue in different datatypes, making sure that edits in one also effect the other, is more or less asking for bugs to appear.\r\n\r\nThus, is there a way to extend ExoPlayer so that the playlist is backed with my own datatype, `Song`? That way, I could keep one copy of the queue and simply use the correct methods to notify ExoPlayer when it changes. **ExoPlayer should still try to attempt gapless playback, even with this custom playlist.**\r\n\r\nI think `Timeline` is the API I should be using for this, but I have no clue if that's the case or how I could use it to do what I want. Any help on this would be greatly appreciated. Thank you.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10511/comments",
    "author": "OxygenCobalt",
    "comments": [
      {
        "user": "christosts",
        "created_at": "2022-08-11T11:40:18Z",
        "body": "> Thus, is there a way to extend ExoPlayer so that the playlist is backed with my own datatype, Song?\r\n\r\nI don't think you can do that and I would go with option 2 as you described it\r\n\r\n> keep two mirrors of the queue in different datatypes\r\n\r\nThe `Player.Listener` offers callbacks to figure out what's happening on the playlist (such as `onTimelineChanged()` and `onMediaItemTransition()` or the aggregate `onEvents()`) so you can listen to them and map them to your custom `Song` playlist. \r\n\r\nIt there a specific state transition that you are concerned with?"
      },
      {
        "user": "OxygenCobalt",
        "created_at": "2022-08-11T14:22:41Z",
        "body": "I did some more thought @christosts, and the main issue comes from shuffling really. My app uses it's own shuffling logic that is something like this:\r\n- When re-shuffling, the queue is restored to it's original state (ex. Removed items are re-added), where it is either sorted or shuffled depending on if it is on or off.\r\n- Changing the shuffling state does not change the current track. It is either moved to the front if we are shuffling, or the current index is changed to match with the new position of the song if unshuffled. *This must not interrupt playback.* This is why I can't just call `setMediaItems`, as that reloads the track and resets the position.\r\n- Shuffled queues are not transformed from some unshuffled source queue. \r\n\r\nThis is why I said that many of the media item methods are really not ideal for my use. I don't know how I could leverage the existing media item APIs to replicate my custom behavior. \r\n\r\nAlso, I don't leverage `MediaSessionConnector` or anything else that would mutate the player timeline outside of my code. I have my own implementations for such that operate on `Song`. Thus, I don't need to change my queue to match the ExoPlayer playlist as much as I need to change the ExoPlayer playlist to match my queue.\r\n\r\nNow, I could do something evil and load every possible song into my player, and then add a custom `ShuffleOrder` representing the queue where each shuffled index simply points to the corresponding song loaded in the player. This would get around the issue, however then I could have to deal with the process of generating these `ShuffleOrder` instances probably being quadratic."
      },
      {
        "user": "christosts",
        "created_at": "2022-08-12T09:27:07Z",
        "body": ">  Now, I could do something evil and load every possible song into my player, and then add a custom ShuffleOrder representing the queue where each shuffled index simply points to the corresponding song loaded in the player. \r\n\r\nI'm not sure why you call this evil, sounds like the MediaItems should be added to the player anyway, but maybe I'm missing information about your app. If you don't like ShuffleOrder, you may want to try `Player.moveMediaItems()` alternatively and change the positions of already queued MediaItems.\r\n\r\n> This would get around the issue, however then I could have to deal with the process of generating these ShuffleOrder instances probably being quadratic.\r\n\r\nI think this can be achieved in linear time, maybe with a few iterations over the playlist structure you are using. \r\n\r\nI'm inclined to close this is issue as it seems the current APIs offered by the player are sufficient for your use-case."
      },
      {
        "user": "OxygenCobalt",
        "created_at": "2022-08-12T13:35:10Z",
        "body": "Yeah, I think that's the best solution overall. I just assumed it would be quadratic (or close-to quadratic) since I would have to do something like:\r\n\r\n```\r\nfor (every song in the queue) {\r\n   idx = library.indexOf(song)\r\n   addToShuffleOrderArray(idx) \r\n}\r\n```\r\n\r\nWhich means I'm iterating through a larger list for each song in a smaller list. Maybe I'm wrong though. I do know however that I could optimize away trivial operations like moves and removals without having to run this routine."
      },
      {
        "user": "christosts",
        "created_at": "2022-08-12T13:42:33Z",
        "body": "For the fun of it(!), I'm almost certain you don't have to call `indexOf()` in the for-loop, which would cause the quadratic complexity. You could store 2 maps that map item-to-position (or position-to-item) for before and after the shuffle (needs two iterations), and then find for each item find its previous and new position with look-ups on the maps. This obviously comes with the cost of extra space for the maps. Overall, the playlist size should be so small than it doesn't really make a difference to the user."
      },
      {
        "user": "OxygenCobalt",
        "created_at": "2022-08-15T21:26:25Z",
        "body": "Okay, turns out that the idea I proposed doesn't really work @christosts.\r\n\r\nI made this implementation that sort of does what I want:\r\n```kotlin\r\nclass QueueShuffleOrder(private val to: IntArray, private val from: IntArray) : ShuffleOrder {\r\n    override fun getLength() = to.size\r\n\r\n    override fun getFirstIndex() = to.getOrElse(0) { C.INDEX_UNSET }\r\n\r\n    override fun getLastIndex() = to.getOrElse(to.lastIndex) { C.INDEX_UNSET }\r\n\r\n    override fun getNextIndex(index: Int) =  to.getOrElse(from[index] + 1) { C.INDEX_UNSET }\r\n\r\n    override fun getPreviousIndex(index: Int) = to.getOrElse(from[index] - 1) { C.INDEX_UNSET }\r\n\r\n    // These can't occur since the player isn't connected to anything that could change the\r\n    // media items.\r\n\r\n    override fun cloneAndClear(): ShuffleOrder {\r\n        throw UnsupportedOperationException()\r\n    }\r\n\r\n    override fun cloneAndInsert(insertionIndex: Int, insertionCount: Int): ShuffleOrder {\r\n        throw UnsupportedOperationException()\r\n    }\r\n\r\n    override fun cloneAndRemove(indexFrom: Int, indexToExclusive: Int): ShuffleOrder {\r\n        throw UnsupportedOperationException()\r\n    }\r\n\r\n    companion object {\r\n        fun from(queue: List<Song>, mapping: Map<Long, Int>): QueueShuffleOrder {\r\n            val to = IntArray(queue.size)\r\n            val from = IntArray(queue.size)\r\n            for (entry in queue.withIndex()) {\r\n                val playerIndex = requireNotNull(mapping[entry.value.id])\r\n                to[entry.index] = playerIndex\r\n                from[playerIndex] = entry.index\r\n            }\r\n            return QueueShuffleOrder(to, from)\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nBut there is one crucial flaw: There can be multiple instances of the same song in a queue. For example, `MediaItem` 3 in the player could correspond to `Song` 4 and 5, and the shuffle order has no way to find which index the player is truly at based on the raw player index. The only way I could fix this would be:\r\n\r\n1. For ShuffleOrder to use the index based on the shuffled indices, which is absurd to every use case except for mine.\r\n2. To use the \"true\" index value I have in another object, but `ShuffleOrder` should be stateless, so I can't do that. \r\n\r\nCare to elaborate on how I could leverage `moveMediaItems`?"
      }
    ]
  },
  {
    "number": 10504,
    "title": "How disable predownload manifest.mpd",
    "created_at": "2022-08-03T10:38:54Z",
    "closed_at": "2022-08-04T14:14:45Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10504",
    "body": "Hi, we have problem with predownloading manifest.mdp. \r\n\r\nOur situation\r\n  * We have tens of thousands of clients. Android app with exoplayer in lastest version (2.18.1)\r\n  * Overyone of them have playlist (ConcatenatingMediaSource) of dash audio (DashMediaSource)\r\n  * The audio is typically spoken word about 45 minutes long\r\n  * Server backend is Wowza and audio storage contains about millions of files\r\n  \r\nOur issue \r\n  * After set up playlist, Exoplayer will started download manifest.mpd for every item in playlist (typically length of playlist is about 15 items). \r\n  * Then Wowza will start caching all audio data to memory cache.\r\n  * Due to the number of clients and volume of audios, this leads to fast memory filling (on Wowza side) and inefficient data movement between Wowza and the data store.\r\n\r\nMy question. There is a way to set the number of items that are preloaded? For example 2 or 3 items ?\r\n\r\nThanks for reply.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10504/comments",
    "author": "aleslanik2",
    "comments": [
      {
        "user": "aleslanik2",
        "created_at": "2022-08-03T12:01:05Z",
        "body": "I think I found a solution. ConcatenatingMediaSource has a useLazyPreparation property in the constructor, which does exactly what I need. "
      },
      {
        "user": "icbaker",
        "created_at": "2022-08-04T14:14:45Z",
        "body": "Glad you found a solution!"
      }
    ]
  },
  {
    "number": 10472,
    "title": "Refreshing the Timeline when using FileDataSource",
    "created_at": "2022-07-25T18:55:18Z",
    "closed_at": "2022-09-06T09:33:21Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10472",
    "body": "I have a very specific case in my app where I download a live stream into a local file, then I am playing the local file using ExoPlayer while the file/stream is being downloaded, ExoPlayer loads and play the file just fine, the issue is the timeline is not updating as the file is being downloaded and decoded and it's not possible to seek after the initial loaded timeline.\r\nFor example, loading the same file with VLC Lib the timeline update just fine and automatically, is there any way to achieve it with ExoPlayer? if so I would like some guidance.\r\n\r\nEdit: I can refresh the timeline correctly by calling notifySourceInfoRefreshed() with the current details of the file and the timeline refreshes correctly, the only issue is the video & audio just freezes once the video past the original duration point. \r\nWhat else do I need to refresh?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10472/comments",
    "author": "im12345dev",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2022-07-26T07:59:17Z",
        "body": "This question is similar to #7070 (where an EOFException was seen when reading the partially downloaded file). To support partially loaded files, the player needs to know which data is available and that it needs to wait until more is coming. Ideally, you can use ExoPlayer's download/cache functionality that tells the player how much data is loaded already. Alternatively, you can write your own version of `DataSource` that blocks `read` operations until the data is available and doesn't return the current total file size until the file is finished (to avoid the problem that the player believes it has read the entire file already). You may want to write a `DataSourceContractTest` if you do that to ensure the source fully conforms to the interface."
      },
      {
        "user": "im12345dev",
        "created_at": "2022-07-26T14:35:16Z",
        "body": "Unfortunately using ExoPlayer download/cache functionality is not an option as some of the streams are live streams (and some are not), so I need a solution that would work for both.\r\nI will start playing with `DataSource` and see if I can manage it by writing a custom `DataSource`, if you have any more guidance it would be much appreciated."
      },
      {
        "user": "tonihei",
        "created_at": "2022-07-27T08:26:43Z",
        "body": "This is getting too customized to provide detailed guidance, but have a look at existing `DataSources` like `FileDataSource` or `ByteArrayDataSource` to see how implementations should look like general. The important bits for your case are:\r\n - Return `C.LENGHT_UNSET` from `open()` to indicate that the overall length is not known yet. \r\n - Block `read()` operations until you can return at least one byte of the requested data range and return `C.RESULT_END_OF_INPUT` once you reach the actual end of the file.\r\n\r\nI'd advise you to write a `DataSourceContractTest` (see for example `FileDataSourceContractTest`) to ensure your `DataSource` is fully interface-compliant. "
      },
      {
        "user": "tonihei",
        "created_at": "2022-09-06T09:33:21Z",
        "body": "Closing because the question was answered and we won't be able to provide more detailed guidance."
      }
    ]
  },
  {
    "number": 10456,
    "title": "Unable to play video with video codec format MPEG-H part2/HEVC (H.265)",
    "created_at": "2022-07-20T07:42:53Z",
    "closed_at": "2022-07-20T14:29:20Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10456",
    "body": null,
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10456/comments",
    "author": "sagarNapps10x",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2022-07-20T14:29:20Z",
        "body": "Closing due to lack of any useful information."
      }
    ]
  },
  {
    "number": 10452,
    "title": "How to configure forward and rewind time values for player notification manager?",
    "created_at": "2022-07-19T09:31:41Z",
    "closed_at": "2022-07-19T10:49:03Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10452",
    "body": "By default rewind button in the notification seeking player time by 5 seconds but forward button seeking player by 15 seconds. Can't find any direct functions in the player notification manager javadoc.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10452/comments",
    "author": "shaiksalam9182",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2022-07-19T10:02:28Z",
        "body": "When you build your player you can set the `seekBackIncrements` or the `seekForwardIncrement` by using the setters of the `ExoPlayer.Builder`. This sets the seek increments generally for all `Player.seekBack()` and `Player.seekForward()` calls on that player instance.\r\n\r\nIf you want to have the behaviour specific for commands coming from the notification, you can use a `ForwardingPlayer` with which you wrap the player. Then you set the forwarding player to the `PlayerNotificationManager.setPlayer(forwardingPlayer)` and you can override the `seekBack()` and `seekForward()` methods on the forwarding player to customize it to fit your requirements.\r\n\r\n"
      },
      {
        "user": "shaiksalam9182",
        "created_at": "2022-07-19T10:49:03Z",
        "body": "Thanks @marcbaechinger . It's working now"
      }
    ]
  },
  {
    "number": 10440,
    "title": "exoplayer cant play rtsp video that password include \"@\" string",
    "created_at": "2022-07-15T04:38:16Z",
    "closed_at": "2022-07-15T13:08:30Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10440",
    "body": "I have rtsp uri \r\nrtsp://admin:@admin@169.254.2.100:554/0/onvif/profile2/media.smp\r\n\r\nand get below messages\r\n```\r\nE/ExoPlayerImplInternal: Playback error\r\n      UnknownHostException (no network)\r\n```\r\n\r\ni think player determines \"admin@169.254.2.100:554\" as host\r\n\r\nis there any method to authenticate with username and pass ?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10440/comments",
    "author": "ryanhe4",
    "comments": [
      {
        "user": "claincly",
        "created_at": "2022-07-15T13:08:30Z",
        "body": "The URI syntax (RFC3986) specifies the user info in a URI to be:\r\n\r\n```\r\n      userinfo    = *( unreserved / pct-encoded / sub-delims / \":\" )\r\n      unreserved  = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\r\n      pct-encoded = \"%\" HEXDIG HEXDIG\r\n      sub-delims  = \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\"\r\n                  / \"*\" / \"+\" / \",\" / \";\" / \"=\"\r\n```\r\n\r\nwhich means the password cannot include `@`. Also it's probably a bad idea to include `username:password` in your URI. \r\n\r\nFWIW we rely on Android's `Uri.getUserInfo()` to parse the URI."
      }
    ]
  },
  {
    "number": 10417,
    "title": "Ideal delay in between calling release of Exoplayer and building it again with different asset.",
    "created_at": "2022-07-07T13:03:49Z",
    "closed_at": "2022-07-08T10:59:36Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10417",
    "body": "When filing a question:\r\n-------------------------\r\nWhat would be the ideal duration to delay between building a new player with a new media asset and releasing the previous player instance? would it help with the failure rate with devices with restricted resources giving enough time to reclaim its resources?\r\ncc @LuGO0 ",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10417/comments",
    "author": "SaurabhOfficial",
    "comments": [
      {
        "user": "christosts",
        "created_at": "2022-07-07T15:32:16Z",
        "body": "`Player.release()` is blocking until all underlying resources are free, therefore the API intention is to be able to create a new player instance immediately after another instance is released. \r\n\r\nThat said, we've seen errors  coming from lower-level components not being released immediately, either due to bugs in the platform or the OEM-implemented parts. Are you're seeing issues with resources  not released immediately? If yes, does this happen on specific ExoPlayer versions, Android OS versions and/or specific devices?"
      },
      {
        "user": "LuGO0",
        "created_at": "2022-07-07T20:33:29Z",
        "body": "Yes exactly, we are facing AudioTrackInitExceptions(<=28 API level) and IllegalStateExceptions(>=29 API level) while creating AudioTracks specifically in some devices, primarily Android Boxes.\r\nIn addition, we were also facing some `MediaCodec.CodecException.ERROR_INSUFFICIENT_RESOURCE` on some mobile devices as well. I can dig up the exact CPU models if that would be helpful @christosts "
      },
      {
        "user": "christosts",
        "created_at": "2022-07-08T10:47:13Z",
        "body": "I don't think there is a single delay value that you can use in your app and which will solve all these problems.\r\nIt could be that on a specific device a delay of 100-200ms works, but this delay is subject to the device and likely to be tuned with a try-and-error approach. Let me repeat that by design, no such delay is needed.\r\n\r\nIf it's not a big burden for you, I would consider adding this delay only on the devices that raise the errors you are observing and you think they are remedied from the delay. That's so you maintain as-good-as-possible behavior on the well performing devices.\r\n\r\nFor the specific errors (AudioTrack, MediaCodec), I'd advice to raise separate issues for each one, along with the additional information requested in the bug form (such as ExoPlayer version, Android OS, device, bug-report, content if possible). This is for two reasons. First, tracking one problem per github issue helps the conversation focus on one thing, especially if someone refers to an issue later.. Second, we may be able to offer specific solutions/workarounds for each individual solution.\r\n\r\nThank you."
      },
      {
        "user": "SaurabhOfficial",
        "created_at": "2022-07-08T10:54:00Z",
        "body": "> For the specific errors (AudioTrack, MediaCodec), I'd advice to raise separate issues for each one, along with the additional information requested in the bug form (such as ExoPlayer version, Android OS, device, bug-report, content if possible). This is for two reasons. First, tracking one problem per github issue helps the conversation focus on one thing, especially if someone refers to an issue later.. Second, we may be able to offer specific solutions/workarounds for each individual\r\n\r\nYes, I have already done that but I thought we might need to have some discussion on delay as I feel all these errors are in one way or the other related to resource crunch on the device.\r\nWe will try and experiment with a few delay values for specific devices and update any positive results here."
      },
      {
        "user": "christosts",
        "created_at": "2022-07-08T10:59:36Z",
        "body": "Thank you.\r\n\r\nI'm closing this issue for now, please feel free to update it with any data that comes up after experimentation."
      }
    ]
  },
  {
    "number": 10405,
    "title": "How to call setConstrainAudioChannelCountToDeviceCapabilities(false) in demo app?",
    "created_at": "2022-07-05T06:20:42Z",
    "closed_at": "2022-07-05T13:28:09Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10405",
    "body": "In latest code (dev branch), variable constrainAudioChannelCountToDeviceCapabilities is set to TRUE in defaultTrackSelector.\r\n\r\nI'd like to change it to FALSE in my demo app. The first idea is in PlayerActivity::initializePlayer() method, adding one line as below:\r\n` player = playerBuilder.build();`\r\n`trackSelectionParameters`\r\n`    .buildUpon()`\r\n`    .setConstrainAudioChannelCountToDeviceCapabilities(false);    // Here is what I added.`          \r\n`player.setTrackSelectionParameters(trackSelectionParameters);`\r\n\r\nUnfortunately, this is not feasible because setConstrainAudioChannelCountToDeviceCapabilities() is a public method of class DefaultTrackSelector but not a one of class TrackSelectionParameters.\r\n\r\nDo you have any suggestion about how to set constrainAudioChannelCountToDeviceCapabilities to FALSE without changing ExoPlayer  core library code? Or do you think it is reasonable to add setConstrainAudioChannelCountToDeviceCapabilities() method to TrackSelectionParameters class too?\r\n\r\nThank you very much in advance.\r\n      \r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10405/comments",
    "author": "ybai001",
    "comments": [
      {
        "user": "christosts",
        "created_at": "2022-07-05T13:28:08Z",
        "body": "The fastest way is in `PlayerActivity.initializePlayer()` as you suggest, you can set it with\r\n\r\n```java\r\nplayer.setTrackSelectionParameters(\r\n  new DefaultTrackSelector.Parameters.Builder(this)\r\n    .setConstrainAudioChannelCountToDeviceCapabilities(false).build());\r\n```\r\n\r\n`DefaultTrackSelector.Parameters` is a subclass of `TrackSelectionParameters`.  \r\n\r\nNote that by doing the above, the demo app will always use these parameters when playback starts. Persisting/loading parameters, e.g. `PlayerActivity.onSaveInstanceState()`, will no longer function."
      }
    ]
  },
  {
    "number": 10400,
    "title": "How to normalise output audio streams?",
    "created_at": "2022-07-03T11:06:07Z",
    "closed_at": "2022-07-05T14:29:23Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10400",
    "body": "Hello, First of all thanks for the great player you made.\r\n\r\nI'm facing a problem, i play different streams (MP3,HLS, Dash etc ...) with the exoplayer , but none all of them have the same output volume result. I would like to found a way to normalize the output volume.\r\n\r\nI tried         myAudioSink.setVolume(1F); but seems like the streams with low internal volume , cannot reach the maximum speaker volume. So basicaly i would like to get the same decibel output for each audio stream.\r\n\r\nBut i don't even know by where to start, if you could help / guide me about that would be really appreciate. \r\n\r\nThanks \r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10400/comments",
    "author": "coveroid",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2022-07-05T14:29:23Z",
        "body": "In order to normalize the volume, the player would need to read and analyze the entire streams to figure out the relative volume and adjust accordingly. This is usually better done by re-encoding if at all possible. Please also see #3349 where a similar question has been asked."
      }
    ]
  },
  {
    "number": 10399,
    "title": "How to play automatically after executing seekTo",
    "created_at": "2022-07-02T11:11:58Z",
    "closed_at": "2022-07-06T05:13:53Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10399",
    "body": "Hi there\r\nMy Application used MediaSessionCompat and MediaSessionConnector like the UAMP. the exoPlayer will response and seekTo next song when I send a skipToNext action. But only when it is playing, it will be automatically played after the skipToNext action. It just update metadata and don't automatcially play when it's not playing. I try to add \"player.playWhenReady = true\" in the TimelineQueueNavigator's function like this:\r\n```kotlin\r\nprivate inner class UampQueueNavigator(\r\n        mediaSession: MediaSessionCompat\r\n    ) : TimelineQueueNavigator(mediaSession) {\r\n        override fun getMediaDescription(player: Player, windowIndex: Int): MediaDescriptionCompat {\r\n            if (windowIndex < currentPlaylistItems.size) {\r\n                return currentPlaylistItems[windowIndex].description\r\n            }\r\n            return MediaDescriptionCompat.Builder().build()\r\n        }\r\n\r\n        override fun onSkipToPrevious(player: Player) {\r\n            player.playWhenReady = true\r\n            super.onSkipToPrevious(player)\r\n        }\r\n\r\n        override fun onSkipToQueueItem(player: Player, id: Long) {\r\n            player.playWhenReady = true\r\n            super.onSkipToQueueItem(player, id)\r\n        }\r\n\r\n        override fun onSkipToNext(player: Player) {\r\n            player.playWhenReady = true\r\n            super.onSkipToNext(player)\r\n        }\r\n    }\r\n```\r\nIt will be automatcially played even it's not playing. But, it will not be automatcially played after onPlayerError. That is to say, even if I add **\"player.playWhenReady = true\"**, It's not work. Does anyone know how to autoplay after the seekTo is executed? \r\nThanks!!!",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10399/comments",
    "author": "LeifDong",
    "comments": [
      {
        "user": "LeifDong",
        "created_at": "2022-07-02T12:18:20Z",
        "body": "I found that the playerError affects playback.So I change my code to this:\r\n``` kotlin\r\nprivate inner class UampQueueNavigator(\r\n        mediaSession: MediaSessionCompat\r\n    ) : TimelineQueueNavigator(mediaSession) {\r\n        override fun getMediaDescription(player: Player, windowIndex: Int): MediaDescriptionCompat {\r\n            if (windowIndex < currentPlaylistItems.size) {\r\n                return currentPlaylistItems[windowIndex].description\r\n            }\r\n            return MediaDescriptionCompat.Builder().build()\r\n        }\r\n\r\n        override fun onSkipToPrevious(player: Player) {\r\n            super.onSkipToPrevious(player)\r\n            if (player.playerError != null) {\r\n                player.prepare()\r\n            }\r\n            player.playWhenReady = true\r\n        }\r\n\r\n        override fun onSkipToQueueItem(player: Player, id: Long) {\r\n            super.onSkipToQueueItem(player, id)\r\n            if (player.playerError != null) {\r\n                player.prepare()\r\n            }\r\n            player.playWhenReady = true\r\n        }\r\n\r\n        override fun onSkipToNext(player: Player) {\r\n            super.onSkipToNext(player)\r\n            if (player.playerError != null) {\r\n                player.prepare()\r\n            }\r\n            player.playWhenReady = true\r\n        }\r\n    }\r\n```\r\nIt's worked. I wonder if this is the right way. Hope to get your help, thanks. "
      },
      {
        "user": "marcbaechinger",
        "created_at": "2022-07-04T14:05:17Z",
        "body": "It does not look right to me to set `playWhenReady` to true when a user skips to the next item. A user probably wants to skip trough the playlist when it is paused, and then start playback when they found the item they want to play.\r\n\r\nFor the `PlaybackError` you can listen to the `Player.Listener.onPlaybackError` to get notified when a playback error occurs. In this case you can correct the problem at the moment when the errors occur. There is probably a reason for this error like a media item that can not load or play for some reasons, so you may want to remove this media item from the playlist or similar in such a case. Then prepare to be ready for further playback. Without that, your user probably will see a similar error again when hitting the problematic media item again.\r\n\r\nIn any case, the check should probably be `player.playbackState == Player.STATE_IDLE` instead of the checking for the `playerError`  because you want to prepare when in this state. But again, I think this should be checked in `play` rather than in `onSkipToNext/Previous/QueueItem`. These callbacks are for navigation only."
      },
      {
        "user": "LeifDong",
        "created_at": "2022-07-06T05:13:53Z",
        "body": "thanks for your suggestion"
      }
    ]
  },
  {
    "number": 10396,
    "title": "Intercepting DAI stream URL using the ExoPlayer IMA extension",
    "created_at": "2022-07-01T14:02:13Z",
    "closed_at": "2022-07-13T08:31:36Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10396",
    "body": "Hi, \r\n\r\nwe are currently trying out the ExoPlayer IMA extension for IMA server side inserted ad streams in our android app, by using `ImaServerSideAdInsertionMediaSource`. We encountered the following problem and would like to ask you how to best handle it.\r\n\r\nWe have been using the trick to have a placeholder @TOKEN@ configured in ad manager and replace it in our client with the proper auth token. The hook to do this seems to be missing from the IMA extension.\r\nWith a previous IMA SDK integration, the IMA SDK functionality was implemented by our client app, resolving the media URL dynamically in order to get the stitched stream. This allowed us to manipulate the loaded media URL of the stitched stream (via `VideoStreamPlayer.loadUrl(...` callback), so we could replace a stream token placeholder for authorisation, before passing the stitched stream url to the player. \r\n\r\nBy using `ImaServerSideAdInsertionMediaSource`, the stitched stream URL seems to be passed to the player internally, and we were not yet able to find any way to intercept this stitched stream media URL over the new IMA extension API.\r\n\r\nDo you have any suggestions as to how to best handle stream authorisation in the given context?\r\n\r\nThanks in advance!\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10396/comments",
    "author": "amiantoch",
    "comments": [
      {
        "user": "amiantoch",
        "created_at": "2022-07-11T12:50:33Z",
        "body": "Hi,\r\n\r\nare there any updates on this issue?\r\nIs any additional information required from our side to further clarify?\r\n\r\nThanks\r\n"
      },
      {
        "user": "marcbaechinger",
        "created_at": "2022-07-11T18:04:31Z",
        "body": "I'm not quite sure whether I understand all your requirements and what manipulations you want to do at what moment in time of the SDK/Player interaction. But I think there are some hooks that are useful for you to know about.\r\n\r\nThe `ImaServerSideAdInsertionMediaSource.Factory` allows app to set their `MediaSourceFactory` by passing it to the constructor. By default apps want this to be the `DefaultMediaSourceFactory` to support HLS and DASH. In your case you may want to take advantage of this flexibility:\r\n\r\n1) You can inject your own custom `DataSource.Factory` into the constructor of the `DefaultMediaSourceFactory` and then inject that into the constructor of the `ImaServerSideAdInsertionMediaSource.Factory`. The custom `DataSource.Factory` would then create a `ResolvingDataSource` that wraps the concrete `DataSource` that you are using. The `ResolvingDataSource` allows you to replace the `DataSpec` with your modified version by providing a `Resolver` and overriding its\r\n\r\n```\r\nDataSpec resolveDataSpec(DataSpec dataSpec) throws IOException;\r\n```\r\n\r\nThe `DataSpec` passed in is what you would have seen in `loadUrl` (I think) and you can create a new `DataSpec` replacing that with whatever you like in the resolver. \r\n\r\nNote: If I'm not mistaken then the `Resolver` will be called for any requests manifest/playlist and any media (video/audio/text).\r\n\r\n2) An alternative would be to implement your own `MediaSource.Factory` and pass it to the constructor of `ImaServerSideAdInsertionMediaSource.Factory`. Your implementation is a composition that delegates everything to an instance of `DefaultMediaSourceFactory` that you hold as a member field. Then when `MediaSource.Factory.createMediaSource(MediaItem)` is called your wrapper source receives the `MediaItem` and can `buildUpon()` to inject the modified URI before delegating to `createMediaSource` of the actual source and pass the new `MediaItem`.\r\n\r\nNote: This approach does only manipulate the initial URI that is used to load the manifest/playlist initially. After that, media and the like is requested as without this change.\r\n\r\nI hope one or the other approach may work for you. Please let me know in either case. :)"
      },
      {
        "user": "amiantoch",
        "created_at": "2022-07-13T08:31:36Z",
        "body": "Very useful tips!:)\r\nThe second solution seems to be working perfectly for our needs.\r\n\r\nThank you!"
      }
    ]
  },
  {
    "number": 10380,
    "title": " java.lang.NoSuchMethodError: No virtual method setParameters",
    "created_at": "2022-06-27T05:15:24Z",
    "closed_at": "2022-09-06T09:31:53Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10380",
    "body": "I am implementing exo player in my app's one module in an another module I have implemented brightcove player(As brightcove uses exoplayer internally).\r\nI am getting this error from exo player\r\n```\r\nE/com.brightcove.player.event.EventEmitterImpl@b1bc2d5: processEvent() threw a throwable.\r\n    java.lang.NoSuchMethodError: No virtual method setParameters(Lcom/google/android/exoplayer2/trackselection/DefaultTrackSelector$Parameters;)V in class Lcom/google/android/exoplayer2/trackselection/DefaultTrackSelector; or its super classes (declaration of 'com.google.android.exoplayer2.trackselection.DefaultTrackSelector' appears in /data/app/~~IcHQVEM5w4IXny6I30aQ9g==/com.test.demo-upkrdit2H5SqzTzsEzy8jw==/base.apk!classes2.dex)\r\n        at com.brightcove.player.display.ExoPlayerVideoDisplayComponent.updateTrackSelectorPeakBitrate(ExoPlayerVideoDisplayComponent.java:2052)\r\n        at com.brightcove.player.display.ExoPlayerVideoDisplayComponent.initializePlayer(ExoPlayerVideoDisplayComponent.java:1028)\r\n        at com.brightcove.player.display.ExoPlayerVideoDisplayComponent.createPlayer(ExoPlayerVideoDisplayComponent.java:1015)\r\n        at com.brightcove.player.display.ExoPlayerVideoDisplayComponent.openVideo(ExoPlayerVideoDisplayComponent.java:1086)\r\n        at com.brightcove.player.display.VideoDisplayComponent.openCurrentVideoSource(VideoDisplayComponent.java:470)\r\n        at com.brightcove.player.display.ExoPlayerVideoDisplayComponent$ExoPlayerOnSetSourceListener.processEvent(ExoPlayerVideoDisplayComponent.java:1288)\r\n        at com.brightcove.player.event.EventEmitterImpl.invokeListenersForEventType(EventEmitterImpl.java:458)\r\n        at com.brightcove.player.event.EventEmitterImpl.invokeListenersForEvent(EventEmitterImpl.java:429)\r\n        at com.brightcove.player.event.EventEmitterImpl.access$300(EventEmitterImpl.java:42)\r\n        at com.brightcove.player.event.EventEmitterImpl$1.handleMessage(EventEmitterImpl.java:74)\r\n        at android.os.Handler.dispatchMessage(Handler.java:106)\r\n        at android.os.Looper.loop(Looper.java:257)\r\n        at android.app.ActivityThread.main(ActivityThread.java:8218)\r\n        at java.lang.reflect.Method.invoke(Native Method)\r\n        at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:626)\r\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1015)\r\n2022-06-24 10:48:46.138 31056-31056/com.test.demo E/com.brightcove.player.event.EventEmitterImpl@987c257: processEvent() threw a throwable.\r\n    java.lang.NoSuchMethodError: No virtual method setParameters(Lcom/google/android/exoplayer2/trackselection/DefaultTrackSelector$Parameters;)V in class Lcom/google/android/exoplayer2/trackselection/DefaultTrackSelector; or its super classes (declaration of 'com.google.android.exoplayer2.trackselection.DefaultTrackSelector' appears in /data/app/~~IcHQVEM5w4IXny6I30aQ9g==/com.test.demo-upkrdit2H5SqzTzsEzy8jw==/base.apk!classes2.dex)\r\n        at com.brightcove.player.display.ExoPlayerVideoDisplayComponent.updateTrackSelectorPeakBitrate(ExoPlayerVideoDisplayComponent.java:2052)\r\n        at com.brightcove.player.display.ExoPlayerVideoDisplayComponent.initializePlayer(ExoPlayerVideoDisplayComponent.java:1028)\r\n        at com.brightcove.player.display.ExoPlayerVideoDisplayComponent.createPlayer(ExoPlayerVideoDisplayComponent.java:1015)\r\n        at com.brightcove.player.display.ExoPlayerVideoDisplayComponent.openVideo(ExoPlayerVideoDisplayComponent.java:1086)\r\n        at com.brightcove.player.display.VideoDisplayComponent.openCurrentVideoSource(VideoDisplayComponent.java:470)\r\n        at com.brightcove.player.display.ExoPlayerVideoDisplayComponent$ExoPlayerOnSetSourceListener.processEvent(ExoPlayerVideoDisplayComponent.java:1288)\r\n        at com.brightcove.player.event.EventEmitterImpl.invokeListenersForEventType(EventEmitterImpl.java:458)\r\n        at com.brightcove.player.event.EventEmitterImpl.invokeListenersForEvent(EventEmitterImpl.java:429)\r\n        at com.brightcove.player.event.EventEmitterImpl.access$300(EventEmitterImpl.java:42)\r\n        at com.brightcove.player.event.EventEmitterImpl$1.handleMessage(EventEmitterImpl.java:74)\r\n        at android.os.Handler.dispatchMessage(Handler.java:106)\r\n        at android.os.Looper.loop(Looper.java:257)\r\n        at android.app.ActivityThread.main(ActivityThread.java:8218)\r\n        at java.lang.reflect.Method.invoke(Native Method)\r\n        at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:626)\r\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1015)\r\n```\r\n\r\nI added the multidex library also. and this is my proguard of main app\r\n\r\n```\r\n-keep public class * extends com.brightcove.player.display.ExoPlayerVideoDisplayComponent\r\n-keep public class * extends com.google.android.exoplayer2.trackselection.TrackSelection\r\n-keep public class * extends com.google.android.exoplayer2.trackselection.DefaultTrackSelector\r\n\r\n-keep public class com.google.android.exoplayer2.**{*;}\r\n-keep public class com.google.android.exoplayer2.trackselection.**{*;}\r\n-keep public class com.brightcove.player.**{*;}\r\n-keep  interface com.google.android.exoplayer2.**{*;}\r\n-keep  interface com.brightcove.player.**{*;}\r\n-keep  interface android.os.**{*;}\r\n\r\n-keepclassmembers class ** {\r\n    @com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters <methods>;\r\n}\r\n\r\n\r\n-keepclasseswithmembers class * {\r\n    @com.brightcove.player.* <methods>;\r\n}\r\n-keepclasseswithmembers class * {\r\n    @com.google.android.exoplayer2.trackselection* <methods>;\r\n}\r\n```",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10380/comments",
    "author": "droider91",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2022-07-01T10:21:48Z",
        "body": "Whenever `NoSuchMethodError` or similar problems come up, it's usually one of two things:\r\n 1. A build problem where the build system uses incompatible intermediate files to building the apk. You can try to fix this (or exclude it as the reason) by fully cleaning your project in Android Studio (\"Build -> Clean project\") and also running \"File -> Invalidate Caches\". \r\n 2. An unintended version upgrade of another dependent library that also uses ExoPlayer. Based on your description, this is the likely reason. Gradle updates all ExoPlayer versions in the entire dependency tree to the same version and if you add one directly, the version brightcove is using is upgraded too and their code may no longer be compatible. You can check what gradle is doing by running `./gradlew yourAppGradleTarget:dependencies`."
      },
      {
        "user": "tonihei",
        "created_at": "2022-09-06T09:31:53Z",
        "body": "Closing due to inactivity."
      }
    ]
  },
  {
    "number": 10356,
    "title": "AudioSink By Override by myself instead DefaultAudioSink",
    "created_at": "2022-06-20T02:43:33Z",
    "closed_at": "2022-08-03T02:33:49Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10356",
    "body": "I override the DefaultAudioSink.\r\n\r\nthis  is my AudioSink \r\nAudioOutput is a abstract  class \r\nand  the AudioOutput of AudioCompatSink  param is using AudioTrack。\r\nBut  there are some issure.\r\n1.  video can't play \r\n2. audio play some time , then stop \r\n\r\n```\r\npackage com.tme.karaoke.support.player.audio;\r\n\r\nimport android.media.AudioTrack;\r\n\r\nimport androidx.annotation.Nullable;\r\n\r\nimport com.google.android.exoplayer2.C;\r\nimport com.google.android.exoplayer2.Format;\r\nimport com.google.android.exoplayer2.PlaybackParameters;\r\nimport com.google.android.exoplayer2.audio.AudioAttributes;\r\nimport com.google.android.exoplayer2.audio.AudioSink;\r\nimport com.google.android.exoplayer2.audio.AuxEffectInfo;\r\nimport com.google.android.exoplayer2.audio.DefaultAudioSink;\r\nimport com.google.android.exoplayer2.audio.MediaCodecAudioRenderer;\r\nimport com.google.android.exoplayer2.util.Log;\r\nimport com.tencent.karaoketv.audiochannel.AudioFrame;\r\nimport com.tencent.karaoketv.audiochannel.AudioOutput;\r\nimport com.tencent.karaoketv.audiochannel.AudioOutputInstaller;\r\nimport com.tencent.karaoketv.audiochannel.AudioPlayState;\r\n\r\nimport java.io.IOException;\r\nimport java.nio.ByteBuffer;\r\n\r\n/**\r\n * @ClassName: AudioCompatSink\r\n * @Description: java类作用描述\r\n * @Author: louiewang\r\n * @Date: 2022/6/16 3:00 下午\r\n */\r\npublic class AudioCompatSink implements AudioSink {\r\n\r\n    private final String TAG = \"AudioCompatSink\";\r\n    private Format mFormat;\r\n    private AudioOutput mAudioOutput;\r\n    private DefaultAudioSink mDefaultAudioSink;\r\n    private PlaybackParameters mPlaybackParameters;\r\n    private AudioOutputInstaller mAudioOutputInstaller;\r\n\r\n    public AudioCompatSink(AudioOutputInstaller installer, AudioOutput audioOutput, DefaultAudioSink  defaultAudioSink){\r\n        mAudioOutputInstaller = installer;\r\n        mAudioOutput = audioOutput;\r\n        mDefaultAudioSink = defaultAudioSink;\r\n    }\r\n\r\n    /**\r\n     * Sets the listener for sink events, which should be the audio renderer.\r\n     *\r\n     * @param listener The listener for sink events, which should be the audio renderer.\r\n     */\r\n    @Override\r\n    public void setListener(Listener listener) {\r\n\r\n    }\r\n\r\n    /**\r\n     * Returns whether the sink supports a given {@link Format}.\r\n     *\r\n     * @param format The format.\r\n     * @return Whether the sink supports the format.\r\n     */\r\n    @Override\r\n    public boolean supportsFormat(Format format) {\r\n        if (mDefaultAudioSink != null){\r\n            return mDefaultAudioSink.supportsFormat(format);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Returns the level of support that the sink provides for a given {@link Format}.\r\n     *\r\n     * @param format The format.\r\n     * @return The level of support provided.\r\n     */\r\n    @Override\r\n    public int getFormatSupport(Format format) {\r\n//        if (mAudioOutput != null){\r\n//           return  SINK_FORMAT_SUPPORTED_DIRECTLY;\r\n//        }\r\n\r\n        if(mDefaultAudioSink != null){\r\n            mDefaultAudioSink.getFormatSupport(format);\r\n        }\r\n\r\n        return SINK_FORMAT_UNSUPPORTED;\r\n    }\r\n\r\n    /**\r\n     * Returns the playback position in the stream starting at zero, in microseconds, or {@link\r\n     * #CURRENT_POSITION_NOT_SET} if it is not yet available.\r\n     *\r\n     * @param sourceEnded Specify {@code true} if no more input buffers will be provided.\r\n     * @return The playback position relative to the start of playback, in microseconds.\r\n     */\r\n    @Override\r\n    public long getCurrentPositionUs(boolean sourceEnded) {\r\n        if(mAudioOutput != null){\r\n            try {\r\n                long pos = (0xFFFFFFFFL & mAudioOutput.getPlaybackHeadPosition()) * C.MICROS_PER_SECOND / 44100;\r\n                Log.e(TAG, \"getCurrentPositionUs->\"+pos);\r\n                return pos;\r\n            } catch (IOException e) {\r\n                Log.e(TAG, \"getCurrentPositionUs\", e);\r\n            }\r\n        }\r\n\r\n        return CURRENT_POSITION_NOT_SET;\r\n    }\r\n\r\n    /**\r\n     * Configures (or reconfigures) the sink.\r\n     *\r\n     * @param inputFormat         The format of audio data provided in the input buffers.\r\n     * @param specifiedBufferSize A specific size for the playback buffer in bytes, or 0 to infer a\r\n     *                            suitable buffer size.\r\n     * @param outputChannels      A mapping from input to output channels that is applied to this sink's\r\n     *                            input as a preprocessing step, if handling PCM input. Specify {@code null} to leave the\r\n     *                            input unchanged. Otherwise, the element at index {@code i} specifies index of the input\r\n     *                            channel to map to output channel {@code i} when preprocessing input buffers. After the map\r\n     *                            is applied the audio data will have {@code outputChannels.length} channels.\r\n     * @throws ConfigurationException If an error occurs configuring the sink.\r\n     */\r\n    @Override\r\n    public void configure(Format inputFormat, int specifiedBufferSize, @Nullable int[] outputChannels) throws ConfigurationException {\r\n        mFormat = inputFormat;\r\n    }\r\n\r\n    /**\r\n     * Starts or resumes consuming audio if initialized.\r\n     */\r\n    @Override\r\n    public void play() {\r\n        try {\r\n            mAudioOutput.start();\r\n        } catch (IOException e) {\r\n            Log.e(TAG, \"play\", e);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Signals to the sink that the next buffer may be discontinuous with the previous buffer.\r\n     */\r\n    @Override\r\n    public void handleDiscontinuity() {\r\n        Log.i(TAG, \"handleDiscontinuity\"+\"->DO nothing\");\r\n    }\r\n\r\n    /**\r\n     * Attempts to process data from a {@link ByteBuffer}, starting from its current position and\r\n     * ending at its limit (exclusive). The position of the {@link ByteBuffer} is advanced by the\r\n     * number of bytes that were handled. {@link Listener#onPositionDiscontinuity()} will be called if\r\n     * {@code presentationTimeUs} is discontinuous with the last buffer handled since the last reset.\r\n     *\r\n     * <p>Returns whether the data was handled in full. If the data was not handled in full then the\r\n     * same {@link ByteBuffer} must be provided to subsequent calls until it has been fully consumed,\r\n     * except in the case of an intervening call to {@link #flush()} (or to {@link #configure(Format,\r\n     * int, int[])} that causes the sink to be flushed).\r\n     *\r\n     * @param buffer                 The buffer containing audio data.\r\n     * @param presentationTimeUs     The presentation timestamp of the buffer in microseconds.\r\n     * @param encodedAccessUnitCount The number of encoded access units in the buffer, or 1 if the\r\n     *                               buffer contains PCM audio. This allows batching multiple encoded access units in one\r\n     *                               buffer.\r\n     * @return Whether the buffer was handled fully.\r\n     * @throws InitializationException If an error occurs initializing the sink.\r\n     * @throws WriteException          If an error occurs writing the audio data.\r\n     */\r\n    @Override\r\n    public boolean handleBuffer(ByteBuffer buffer, long presentationTimeUs, int encodedAccessUnitCount) throws InitializationException, WriteException {\r\n        if(buffer.remaining() <= 0){\r\n            return true;\r\n        }\r\n\r\n        byte[] arr = new byte[buffer.remaining()];\r\n        buffer.get(arr);\r\n        AudioFrame audioFrame = new AudioFrame(arr, arr.length);\r\n        try {\r\n            mAudioOutput.write(audioFrame);\r\n        } catch (IOException e) {\r\n            Log.e(TAG, \"handleBuffer\", e);\r\n        }\r\n\r\n        return buffer.remaining() == 0;\r\n    }\r\n\r\n    /**\r\n     * Processes any remaining data. {@link #isEnded()} will return {@code true} when no data remains.\r\n     *\r\n     * @throws WriteException If an error occurs draining data to the sink.\r\n     */\r\n    @Override\r\n    public void playToEndOfStream() throws WriteException {\r\n//        if(mAudioOutput != null){\r\n//            mAudioOutput.get\r\n//            try {\r\n//                mAudioOutput.release();\r\n//            } catch (IOException e) {\r\n//                Log.e(TAG, \"playToEndOfStream\", e);\r\n//            }\r\n//        }\r\n    }\r\n\r\n    /**\r\n     * Returns whether {@link #playToEndOfStream} has been called and all buffers have been processed.\r\n     */\r\n    @Override\r\n    public boolean isEnded() {\r\n        try {\r\n            return mAudioOutput.getPlayState() == AudioPlayState.PLAYSTATE_STOPPED;\r\n        } catch (IOException e) {\r\n            Log.e(TAG, \"isEnded\", e);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Returns whether the sink has data pending that has not been consumed yet.\r\n     */\r\n    @Override\r\n    public boolean hasPendingData() {\r\n//        Log.i(TAG, \"hasPendingData\"+\"->DO nothing\");\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Attempts to set the playback parameters. The audio sink may override these parameters if they\r\n     * are not supported.\r\n     *\r\n     * @param playbackParameters The new playback parameters to attempt to set.\r\n     */\r\n    @Override\r\n    public void setPlaybackParameters(PlaybackParameters playbackParameters) {\r\n        mPlaybackParameters = playbackParameters;\r\n    }\r\n\r\n    /**\r\n     * Returns the active {@link PlaybackParameters}.\r\n     */\r\n    @Override\r\n    public PlaybackParameters getPlaybackParameters() {\r\n        return mPlaybackParameters;\r\n    }\r\n\r\n    /**\r\n     * Sets whether silences should be skipped in the audio stream.\r\n     *\r\n     * @param skipSilenceEnabled\r\n     */\r\n    @Override\r\n    public void setSkipSilenceEnabled(boolean skipSilenceEnabled) {\r\n        if(mDefaultAudioSink != null){\r\n            mDefaultAudioSink.setSkipSilenceEnabled(skipSilenceEnabled);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns whether silences are skipped in the audio stream.\r\n     */\r\n    @Override\r\n    public boolean getSkipSilenceEnabled() {\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Sets attributes for audio playback. If the attributes have changed and if the sink is not\r\n     * configured for use with tunneling, then it is reset and the audio session id is cleared.\r\n     *\r\n     * <p>If the sink is configured for use with tunneling then the audio attributes are ignored. The\r\n     * sink is not reset and the audio session id is not cleared. The passed attributes will be used\r\n     * if the sink is later re-configured into non-tunneled mode.\r\n     *\r\n     * @param audioAttributes The attributes for audio playback.\r\n     */\r\n    @Override\r\n    public void setAudioAttributes(AudioAttributes audioAttributes) {\r\n        if(mDefaultAudioSink != null){\r\n            mDefaultAudioSink.setAudioAttributes(audioAttributes);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets the audio session id.\r\n     *\r\n     * @param audioSessionId\r\n     */\r\n    @Override\r\n    public void setAudioSessionId(int audioSessionId) {\r\n\r\n    }\r\n\r\n    /**\r\n     * Sets the auxiliary effect.\r\n     *\r\n     * @param auxEffectInfo\r\n     */\r\n    @Override\r\n    public void setAuxEffectInfo(AuxEffectInfo auxEffectInfo) {\r\n\r\n    }\r\n\r\n    /**\r\n     * Enables tunneling, if possible. The sink is reset if tunneling was previously disabled.\r\n     * Enabling tunneling is only possible if the sink is based on a platform {@link AudioTrack}, and\r\n     * requires platform API version 21 onwards.\r\n     *\r\n     * @throws IllegalStateException Thrown if enabling tunneling on platform API version &lt; 21.\r\n     */\r\n    @Override\r\n    public void enableTunnelingV21() {\r\n        Log.i(TAG, \"enableTunnelingV21\"+\"->DO nothing\");\r\n    }\r\n\r\n    /**\r\n     * Disables tunneling. If tunneling was previously enabled then the sink is reset and any audio\r\n     * session id is cleared.\r\n     */\r\n    @Override\r\n    public void disableTunneling() {\r\n        Log.i(TAG, \"disableTunneling\"+\"->DO nothing\");\r\n    }\r\n\r\n    /**\r\n     * Sets the playback volume.\r\n     *\r\n     * @param volume Linear output gain to apply to all channels. Should be in the range [0.0, 1.0].\r\n     */\r\n    @Override\r\n    public void setVolume(float volume) {\r\n        if(mAudioOutput != null){\r\n            try {\r\n                mAudioOutput.setVolume(volume);\r\n            } catch (IOException e) {\r\n                Log.e(TAG, \"setVolume\", e);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Pauses playback.\r\n     */\r\n    @Override\r\n    public void pause() {\r\n        if(mAudioOutput != null){\r\n            try {\r\n                mAudioOutput.pause();\r\n            } catch (IOException e) {\r\n                Log.e(TAG, \"pause\", e);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Flushes the sink, after which it is ready to receive buffers from a new playback position.\r\n     *\r\n     * <p>The audio session may remain active until {@link #reset()} is called.\r\n     */\r\n    @Override\r\n    public void flush() {\r\n        if(mAudioOutput != null){\r\n            try {\r\n                mAudioOutput.flush();\r\n            } catch (IOException e) {\r\n                Log.e(TAG, \"flush\", e);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Flushes the sink, after which it is ready to receive buffers from a new playback position.\r\n     *\r\n     * <p>Does not release the {@link AudioTrack} held by the sink.\r\n     *\r\n     * <p>This method is experimental, and will be renamed or removed in a future release.\r\n     *\r\n     * <p>Only for experimental use as part of {@link\r\n     * MediaCodecAudioRenderer#experimentalSetEnableKeepAudioTrackOnSeek(boolean)}.\r\n     */\r\n    @Override\r\n    public void experimentalFlushWithoutAudioTrackRelease() {\r\n        Log.i(TAG, \"experimentalFlushWithoutAudioTrackRelease\"+\"->DO nothing\");\r\n    }\r\n\r\n    /**\r\n     * Resets the sink, releasing any resources that it currently holds.\r\n     */\r\n    @Override\r\n    public void reset() {\r\n        if(mAudioOutput != null){\r\n            try {\r\n                mAudioOutput.release();\r\n            } catch (IOException e) {\r\n                Log.e(TAG, \"reset\", e);\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n\r\n**This is my AudioOutput code** \r\n\r\n```\r\nimport java.io.IOException;\r\n\r\n\r\n\r\npublic class AudioTrackDevice extends AudioOutput implements AudioPlayState {\r\n\r\n    private static final String TAG = \"AudioTrackDevice\";\r\n    private AudioTrack mAudioTrack;\r\n    private int mPlaybackBufferSize;\r\n    private int mPlayState = PLAYSTATE_NEW;\r\n    private static final AudioLog LOG = new AudioLog(TAG);\r\n    private static final int BUFFER_SCALE = 4;\r\n\r\n    public AudioTrackDevice(AudioParams params) {\r\n        this.init(params);\r\n    }\r\n\r\n    private void init(AudioParams audioParams) {\r\n        if (audioParams == null) {\r\n            return;\r\n        }\r\n        if (mPlaybackBufferSize > 0) {\r\n            return;\r\n        }\r\n        long sampleRate = audioParams.sampleRate;\r\n        int channelCount = audioParams.channelCount;\r\n        int bitDept = audioParams.bitDepth;\r\n\r\n        int channelConfiguration = AudioFormat.CHANNEL_OUT_STEREO;\r\n        switch (channelCount) {\r\n            case 1:\r\n                channelConfiguration = AudioFormat.CHANNEL_OUT_MONO;\r\n                break;\r\n            case 2:\r\n                channelConfiguration = AudioFormat.CHANNEL_OUT_STEREO;\r\n                break;\r\n            case 6:\r\n                channelConfiguration = AudioFormat.CHANNEL_OUT_5POINT1;\r\n                break;\r\n            case 8:\r\n                channelConfiguration = AudioFormat.CHANNEL_OUT_7POINT1;\r\n                break;\r\n        }\r\n       // LOG.print(\"create track sampleRate = \"+sampleRate+\", channelConfiguration = \"+channelConfiguration+\",audioFormat = \"+audioFormat);\r\n\r\n        int audioFormat = bitDept == AudioParams.BIT_DEPTH_8BIT ? AudioFormat.ENCODING_PCM_8BIT : AudioFormat.ENCODING_PCM_16BIT;\r\n\r\n        LOG.print(\"create track sampleRate = \"+sampleRate+\", channelConfiguration = \"+channelConfiguration+\",audioFormat = \"+audioFormat);\r\n\r\n        mPlaybackBufferSize = AudioTrack.getMinBufferSize((int) sampleRate, channelConfiguration, audioFormat) * BUFFER_SCALE;\r\n\r\n        LOG.print(\"create track buffersize = \"+mPlaybackBufferSize);\r\n\r\n        //可能存在获取到的大小为-1的情况，这时候使用默认\r\n        if(mPlaybackBufferSize <= 0){\r\n            mPlaybackBufferSize = 7104;\r\n        }\r\n\r\n        mAudioTrack = new AudioTrack(\r\n                AudioManager.STREAM_MUSIC,\r\n                (int) sampleRate,\r\n                channelConfiguration,\r\n                audioFormat,\r\n                mPlaybackBufferSize,\r\n                AudioTrack.MODE_STREAM);\r\n    }\r\n\r\n    @Override\r\n    public void start() throws IOException {\r\n        AudioTrack audioTrack = mAudioTrack;\r\n        if (audioTrack != null) {\r\n            audioTrack.play();\r\n            mPlayState = PLAYSTATE_PLAYING;\r\n            notifyPlayStateChanged(mPlayState);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void stop() throws IOException {\r\n        AudioTrack audioTrack = mAudioTrack;\r\n        if (audioTrack != null) {\r\n            audioTrack.stop();\r\n            mPlayState = PLAYSTATE_STOPPED;\r\n            notifyPlayStateChanged(mPlayState);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void resume() throws IOException {\r\n        AudioTrack audioTrack = mAudioTrack;\r\n        if (audioTrack != null) {\r\n            audioTrack.play();\r\n            mPlayState = PLAYSTATE_PLAYING;\r\n            notifyPlayStateChanged(mPlayState);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void pause() throws IOException {\r\n        AudioTrack audioTrack = mAudioTrack;\r\n        if (audioTrack != null) {\r\n            audioTrack.pause();\r\n            mPlayState = PLAYSTATE_PAUSED;\r\n            notifyPlayStateChanged(mPlayState);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void flush() throws IOException {\r\n        AudioTrack audioTrack = mAudioTrack;\r\n        if (audioTrack != null) {\r\n            audioTrack.flush();\r\n        }\r\n    }\r\n\r\n//    private static void debugPrintNativeTrackInJavaObj(AudioTrack audioTrack) {\r\n//        try {\r\n//            LOG.print(\"call debugPrintNativeTrackInJavaObj start\");\r\n//            Field field = AudioTrack.class.getDeclaredField(\"mNativeTrackInJavaObj\");\r\n//            Object mNativeTrackInJavaObj = null;\r\n//            if (field != null) {\r\n//                field.setAccessible(true);\r\n//                mNativeTrackInJavaObj  = field.get(audioTrack);\r\n//                LOG.print(\"mNativeTrackInJavaObj = \"+mNativeTrackInJavaObj);\r\n//            }\r\n//            LOG.print(\"call debugPrintNativeTrackInJavaObj success\");\r\n//        } catch (Throwable throwable) {\r\n//            LOG.print(\"call debugPrintNativeTrackInJavaObj error \"+throwable);\r\n//        }\r\n//    }\r\n//\r\n//    private static void debugPrintJniData(AudioTrack audioTrack) {\r\n//        try {\r\n//            LOG.print(\"call debugPrintJniData start\");\r\n//            Field field = AudioTrack.class.getDeclaredField(\"mJniData\");\r\n//            Object mJniData = null;\r\n//            if (field != null) {\r\n//                field.setAccessible(true);\r\n//                mJniData  = field.get(audioTrack);\r\n//                LOG.print(\"mJniData = \"+mJniData);\r\n//            }\r\n//            LOG.print(\"call debugPrintJniData success\");\r\n//        } catch (Throwable throwable) {\r\n//            LOG.print(\"call debugPrintJniData error \"+throwable);\r\n//        }\r\n//    }\r\n//\r\n//\r\n//    private static void debugPrintEventHandlerDelegate(AudioTrack audioTrack) {\r\n//        try {\r\n//            LOG.print(\"debugPrintEventHandlerDelegate start\");\r\n//\r\n//            debugPrintNativeTrackInJavaObj(audioTrack);\r\n//            debugPrintJniData(audioTrack);\r\n//            Field field = AudioTrack.class.getDeclaredField(\"mEventHandlerDelegate\");\r\n//            Object mEventHandlerDelegate = null;\r\n//            if (field != null) {\r\n//                field.setAccessible(true);\r\n//                mEventHandlerDelegate  = field.get(audioTrack);\r\n//                LOG.print(\"mEventHandlerDelegate = \"+mEventHandlerDelegate);\r\n//            }\r\n//            LOG.print(\"debugPrintEventHandlerDelegate end\");\r\n//        } catch (Throwable throwable) {\r\n//            LOG.print(\"debugPrintEventHandlerDelegate error \"+throwable);\r\n//        }\r\n//    }\r\n\r\n    @Override\r\n    public void release() throws IOException {\r\n        LOG.print(\"call release() start \");\r\n        AudioTrack audioTrack = mAudioTrack;\r\n        if (audioTrack != null) {\r\n//            debugPrintEventHandlerDelegate(audioTrack);\r\n//            new ReleaseAudioTrack(audioTrack);\r\n            // TODO\r\n//            MediaUtils.release(audioTrack);\r\n            mPlayState = PLAYSTATE_NEW;\r\n            notifyPlayStateChanged(mPlayState);\r\n        }\r\n        mAudioTrack = null;\r\n        mPlaybackBufferSize = 0;\r\n    }\r\n\r\n    @Override\r\n    public int write(AudioFrame audioFrame) throws IOException {\r\n        if (audioFrame == null) {\r\n            return 0;\r\n        }\r\n\r\n        final AudioTrack audioTrack = mAudioTrack;\r\n        if (audioTrack != null) {\r\n\r\n            if (audioFrame.isByteData()) {\r\n                return audioTrack.write(audioFrame.byteBuffer,0,audioFrame.size);\r\n            } else {\r\n                return audioTrack.write(audioFrame.buffer, 0, audioFrame.size);\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    @Override\r\n    public void setVolume(float volume) throws IOException {\r\n        AudioTrack audioTrack = mAudioTrack;\r\n        if (audioTrack != null) {\r\n            audioTrack.setStereoVolume(volume, volume);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void setMicVolume(float volume) throws IOException {\r\n\r\n    }\r\n\r\n    @Override\r\n    public int getPlaybackHeadPosition() throws IOException {\r\n        AudioTrack audioTrack = mAudioTrack;\r\n        if (audioTrack != null) {\r\n            return audioTrack.getPlaybackHeadPosition();\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    @Override\r\n    public final int getPlaybackBufferSize() throws IOException {\r\n        return mPlaybackBufferSize;\r\n    }\r\n\r\n    @Override\r\n    public int getAudioSessionId() {\r\n        AudioTrack audioTrack = mAudioTrack;\r\n        if (audioTrack != null) {\r\n            return audioTrack.getAudioSessionId();\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    @Override\r\n    public int getPlayState() {\r\n        return mPlayState;\r\n    }\r\n}\r\n\r\n```\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10356/comments",
    "author": "louiewh",
    "comments": [
      {
        "user": "louiewh",
        "created_at": "2022-06-20T02:50:34Z",
        "body": "The log uses DefaultAudioSink\r\n> 2022-06-20 10:53:05.527 29397-29397/com.example.karaoke D/KaraokeAudioSink: KaraokeAudioSink:com.google.android.exoplayer2.audio.DefaultAudioSink@5586f89\r\n2022-06-20 10:53:05.528 29397-29397/com.example.karaoke D/KaraokeAudioSink: setListener:com.google.android.exoplayer2.audio.MediaCodecAudioRenderer$AudioSinkListener@5996b8e\r\n2022-06-20 10:53:05.536 29397-29427/com.example.karaoke D/KaraokeAudioSink: setAudioSessionId:681\r\n2022-06-20 10:53:05.608 29397-29397/com.example.karaoke D/KaraokeEventLogger: surfaceSize [eventTime=0.07, mediaPos=0.00, window=0, 1600, 2227]\r\n2022-06-20 10:53:06.584 29397-29397/com.example.karaoke D/KaraokeEventLogger: timeline [eventTime=1.04, mediaPos=0.00, window=0, periodCount=1, windowCount=1, reason=PLAYLIST_CHANGED\r\n2022-06-20 10:53:06.585 29397-29397/com.example.karaoke D/KaraokeEventLogger:   period [?]\r\n2022-06-20 10:53:06.585 29397-29397/com.example.karaoke D/KaraokeEventLogger:   window [?, seekable=false, dynamic=true]\r\n2022-06-20 10:53:06.585 29397-29397/com.example.karaoke D/KaraokeEventLogger: ]\r\n2022-06-20 10:53:06.587 29397-29397/com.example.karaoke D/KaraokeEventLogger: mediaItem [eventTime=1.05, mediaPos=0.00, window=0, reason=PLAYLIST_CHANGED]\r\n2022-06-20 10:53:06.592 29397-29397/com.example.karaoke D/KaraokeEventLogger: state [eventTime=1.05, mediaPos=0.00, window=0, BUFFERING]\r\n2022-06-20 10:53:06.600 29397-29397/com.example.karaoke D/KaraokeEventLogger: playWhenReady [eventTime=1.06, mediaPos=0.00, window=0, true, USER_REQUEST]\r\n2022-06-20 10:53:06.617 29397-29397/com.example.karaoke D/KaraokeEventLogger: timeline [eventTime=1.08, mediaPos=0.00, window=0, period=0, periodCount=1, windowCount=1, reason=SOURCE_UPDATE\r\n2022-06-20 10:53:06.618 29397-29397/com.example.karaoke D/KaraokeEventLogger:   period [?]\r\n2022-06-20 10:53:06.618 29397-29397/com.example.karaoke D/KaraokeEventLogger:   window [?, seekable=false, dynamic=false]\r\n2022-06-20 10:53:06.618 29397-29397/com.example.karaoke D/KaraokeEventLogger: ]\r\n2022-06-20 10:53:06.618 29397-29397/com.example.karaoke D/KaraokeEventLogger: loading [eventTime=1.08, mediaPos=0.00, window=0, period=0, true]\r\n2022-06-20 10:53:07.270 29397-29397/com.example.karaoke D/KaraokeEventLogger: timeline [eventTime=1.73, mediaPos=0.00, window=0, period=0, periodCount=1, windowCount=1, reason=SOURCE_UPDATE\r\n2022-06-20 10:53:07.270 29397-29397/com.example.karaoke D/KaraokeEventLogger:   period [230.74]\r\n2022-06-20 10:53:07.270 29397-29397/com.example.karaoke D/KaraokeEventLogger:   window [230.74, seekable=true, dynamic=false]\r\n2022-06-20 10:53:07.270 29397-29397/com.example.karaoke D/KaraokeEventLogger: ]\r\n2022-06-20 10:53:07.313 29397-29427/com.example.karaoke D/KaraokeAudioSink: supportsFormat:Format(2, null, null, audio/mp4a-latm, mp4a.40.2, -1, en, [-1, -1, -1.0], [2, 48000])\r\n2022-06-20 10:53:07.314 29397-29427/com.example.karaoke D/KaraokeAudioSink: supportsFormat:false\r\n2022-06-20 10:53:07.314 29397-29427/com.example.karaoke D/KaraokeAudioSink: supportsFormat:Format(null, null, null, audio/raw, null, -1, null, [-1, -1, -1.0], [2, 48000])\r\n2022-06-20 10:53:07.314 29397-29427/com.example.karaoke D/KaraokeAudioSink: supportsFormat:true\r\n2022-06-20 10:53:07.314 29397-29427/com.example.karaoke D/KaraokeAudioSink: supportsFormat:Format(2, null, null, audio/mp4a-latm, mp4a.40.2, -1, en, [-1, -1, -1.0], [2, 48000])\r\n2022-06-20 10:53:07.314 29397-29427/com.example.karaoke D/KaraokeAudioSink: supportsFormat:false\r\n2022-06-20 10:53:07.315 29397-29427/com.example.karaoke D/KaraokeAudioSink: supportsFormat:Format(2, null, null, audio/mp4a-latm, mp4a.40.2, -1, en, [-1, -1, -1.0], [2, 48000])\r\n2022-06-20 10:53:07.315 29397-29427/com.example.karaoke D/KaraokeAudioSink: supportsFormat:false\r\n2022-06-20 10:53:07.315 29397-29427/com.example.karaoke D/KaraokeAudioSink: supportsFormat:Format(null, null, null, audio/raw, null, -1, null, [-1, -1, -1.0], [2, 48000])\r\n2022-06-20 10:53:07.315 29397-29427/com.example.karaoke D/KaraokeAudioSink: supportsFormat:true\r\n2022-06-20 10:53:07.315 29397-29427/com.example.karaoke D/KaraokeAudioSink: supportsFormat:Format(2, null, null, audio/mp4a-latm, mp4a.40.2, -1, en, [-1, -1, -1.0], [2, 48000])\r\n2022-06-20 10:53:07.315 29397-29427/com.example.karaoke D/KaraokeAudioSink: supportsFormat:false\r\n2022-06-20 10:53:07.315 29397-29427/com.example.karaoke D/KaraokeAudioSink: supportsFormat:Format(1, null, null, audio/mp4a-latm, mp4a.40.2, -1, und, [-1, -1, -1.0], [2, 44100])\r\n2022-06-20 10:53:07.315 29397-29427/com.example.karaoke D/KaraokeAudioSink: supportsFormat:false\r\n2022-06-20 10:53:07.315 29397-29427/com.example.karaoke D/KaraokeAudioSink: supportsFormat:Format(null, null, null, audio/raw, null, -1, null, [-1, -1, -1.0], [2, 44100])\r\n2022-06-20 10:53:07.315 29397-29427/com.example.karaoke D/KaraokeAudioSink: supportsFormat:true\r\n2022-06-20 10:53:07.315 29397-29427/com.example.karaoke D/KaraokeAudioSink: supportsFormat:Format(1, null, null, audio/mp4a-latm, mp4a.40.2, -1, und, [-1, -1, -1.0], [2, 44100])\r\n2022-06-20 10:53:07.315 29397-29427/com.example.karaoke D/KaraokeAudioSink: supportsFormat:false\r\n2022-06-20 10:53:07.316 29397-29427/com.example.karaoke D/KaraokeAudioSink: supportsFormat:Format(1, null, null, audio/mp4a-latm, mp4a.40.2, -1, und, [-1, -1, -1.0], [2, 44100])\r\n2022-06-20 10:53:07.316 29397-29427/com.example.karaoke D/KaraokeAudioSink: supportsFormat:false\r\n2022-06-20 10:53:07.316 29397-29427/com.example.karaoke D/KaraokeAudioSink: supportsFormat:Format(null, null, null, audio/raw, null, -1, null, [-1, -1, -1.0], [2, 44100])\r\n2022-06-20 10:53:07.316 29397-29427/com.example.karaoke D/KaraokeAudioSink: supportsFormat:true\r\n2022-06-20 10:53:07.316 29397-29427/com.example.karaoke D/KaraokeAudioSink: supportsFormat:Format(1, null, null, audio/mp4a-latm, mp4a.40.2, -1, und, [-1, -1, -1.0], [2, 44100])\r\n2022-06-20 10:53:07.316 29397-29427/com.example.karaoke D/KaraokeAudioSink: supportsFormat:false\r\n2022-06-20 10:53:07.316 29397-29427/com.example.karaoke D/KaraokeAudioSink: supportsFormat:Format(1, null, null, audio/mp4a-latm, mp4a.40.2, -1, und, [-1, -1, -1.0], [2, 44100])\r\n2022-06-20 10:53:07.316 29397-29427/com.example.karaoke D/KaraokeAudioSink: supportsFormat:false\r\n2022-06-20 10:53:07.316 29397-29427/com.example.karaoke D/KaraokeAudioSink: supportsFormat:Format(null, null, null, audio/raw, null, -1, null, [-1, -1, -1.0], [2, 44100])\r\n2022-06-20 10:53:07.316 29397-29427/com.example.karaoke D/KaraokeAudioSink: supportsFormat:true\r\n2022-06-20 10:53:07.316 29397-29427/com.example.karaoke D/KaraokeAudioSink: supportsFormat:Format(1, null, null, audio/mp4a-latm, mp4a.40.2, -1, und, [-1, -1, -1.0], [2, 44100])\r\n2022-06-20 10:53:07.316 29397-29427/com.example.karaoke D/KaraokeAudioSink: supportsFormat:false\r\n2022-06-20 10:53:07.317 29397-29427/com.example.karaoke D/KaraokeAudioSink: supportsFormat:Format(1, null, null, audio/mp4a-latm, mp4a.40.2, -1, und, [-1, -1, -1.0], [2, 44100])\r\n2022-06-20 10:53:07.317 29397-29427/com.example.karaoke D/KaraokeAudioSink: supportsFormat:false\r\n2022-06-20 10:53:07.317 29397-29427/com.example.karaoke D/KaraokeAudioSink: supportsFormat:Format(null, null, null, audio/raw, null, -1, null, [-1, -1, -1.0], [2, 44100])\r\n2022-06-20 10:53:07.317 29397-29427/com.example.karaoke D/KaraokeAudioSink: supportsFormat:true\r\n2022-06-20 10:53:07.317 29397-29427/com.example.karaoke D/KaraokeAudioSink: supportsFormat:Format(1, null, null, audio/mp4a-latm, mp4a.40.2, -1, und, [-1, -1, -1.0], [2, 44100])\r\n2022-06-20 10:53:07.317 29397-29427/com.example.karaoke D/KaraokeAudioSink: supportsFormat:false\r\n2022-06-20 10:53:07.320 29397-29427/com.example.karaoke D/KaraokeAudioSink: disableTunneling:\r\n2022-06-20 10:53:07.320 29397-29427/com.example.karaoke D/KaraokeAudioSink: flush:\r\n2022-06-20 10:53:07.320 29397-29397/com.example.karaoke D/KaraokeEventLogger: videoEnabled [eventTime=1.78, mediaPos=0.00, window=0, period=0]\r\n2022-06-20 10:53:07.321 29397-29397/com.example.karaoke D/KaraokeEventLogger: audioEnabled [eventTime=1.78, mediaPos=0.00, window=0, period=0]\r\n2022-06-20 10:53:07.323 29397-29397/com.example.karaoke D/KaraokeEventLogger: tracks [eventTime=1.78, mediaPos=0.00, window=0, period=0\r\n2022-06-20 10:53:07.323 29397-29397/com.example.karaoke D/KaraokeEventLogger:   MediaCodecVideoRenderer [\r\n2022-06-20 10:53:07.323 29397-29397/com.example.karaoke D/KaraokeEventLogger:     Group:0, adaptive_supported=N/A [\r\n2022-06-20 10:53:07.323 29397-29397/com.example.karaoke D/KaraokeEventLogger:       [X] Track:0, id=1, mimeType=video/avc, codecs=avc1.640028, res=1920x1080, fps=25.0, supported=YES\r\n2022-06-20 10:53:07.323 29397-29397/com.example.karaoke D/KaraokeEventLogger:     ]\r\n2022-06-20 10:53:07.323 29397-29397/com.example.karaoke D/KaraokeEventLogger:   ]\r\n2022-06-20 10:53:07.324 29397-29397/com.example.karaoke D/KaraokeEventLogger:   MediaCodecAudioRenderer [\r\n2022-06-20 10:53:07.324 29397-29397/com.example.karaoke D/KaraokeEventLogger:     Group:0, adaptive_supported=N/A [\r\n2022-06-20 10:53:07.324 29397-29397/com.example.karaoke D/KaraokeEventLogger:       [ ] Track:0, id=2, mimeType=audio/mp4a-latm, codecs=mp4a.40.2, channels=2, sample_rate=48000, language=en, supported=YES\r\n2022-06-20 10:53:07.324 29397-29397/com.example.karaoke D/KaraokeEventLogger:     ]\r\n2022-06-20 10:53:07.324 29397-29397/com.example.karaoke D/KaraokeEventLogger:     Group:1, adaptive_supported=N/A [\r\n2022-06-20 10:53:07.324 29397-29397/com.example.karaoke D/KaraokeEventLogger:       [ ] Track:0, id=1, mimeType=audio/mp4a-latm, codecs=mp4a.40.2, channels=2, sample_rate=44100, language=und, supported=YES\r\n2022-06-20 10:53:07.324 29397-29397/com.example.karaoke D/KaraokeEventLogger:     ]\r\n2022-06-20 10:53:07.324 29397-29397/com.example.karaoke D/KaraokeEventLogger:     Group:2, adaptive_supported=N/A [\r\n2022-06-20 10:53:07.324 29397-29397/com.example.karaoke D/KaraokeEventLogger:       [X] Track:0, id=1, mimeType=audio/mp4a-latm, codecs=mp4a.40.2, channels=2, sample_rate=44100, language=und, supported=YES\r\n2022-06-20 10:53:07.324 29397-29397/com.example.karaoke D/KaraokeEventLogger:     ]\r\n2022-06-20 10:53:07.324 29397-29397/com.example.karaoke D/KaraokeEventLogger:     Metadata [\r\n2022-06-20 10:53:07.324 29397-29397/com.example.karaoke D/KaraokeEventLogger:       TALB: description=null: value=\r\n2022-06-20 10:53:07.324 29397-29397/com.example.karaoke D/KaraokeEventLogger:       TPE1: description=null: value=周杰伦\r\n2022-06-20 10:53:07.324 29397-29397/com.example.karaoke D/KaraokeEventLogger:       ----: domain=com.apple.iTunes, description=cdec\r\n2022-06-20 10:53:07.324 29397-29397/com.example.karaoke D/KaraokeEventLogger:       ----: domain=com.apple.iTunes, description=iTunSMPB\r\n2022-06-20 10:53:07.324 29397-29397/com.example.karaoke D/KaraokeEventLogger:       TIT2: description=null: value=夜曲\r\n2022-06-20 10:53:07.324 29397-29397/com.example.karaoke D/KaraokeEventLogger:       TSSE: description=null: value=Nero AAC codec / 1.5.4.0\r\n2022-06-20 10:53:07.324 29397-29397/com.example.karaoke D/KaraokeEventLogger:     ]\r\n2022-06-20 10:53:07.324 29397-29397/com.example.karaoke D/KaraokeEventLogger:   ]\r\n2022-06-20 10:53:07.324 29397-29397/com.example.karaoke D/KaraokeEventLogger:   TextRenderer []\r\n2022-06-20 10:53:07.324 29397-29397/com.example.karaoke D/KaraokeEventLogger:   MetadataRenderer []\r\n2022-06-20 10:53:07.324 29397-29397/com.example.karaoke D/KaraokeEventLogger:   CameraMotionRenderer []\r\n2022-06-20 10:53:07.324 29397-29397/com.example.karaoke D/KaraokeEventLogger: ]\r\n2022-06-20 10:53:07.328 29397-29397/com.example.karaoke D/KaraokeEventLogger: downstreamFormat [eventTime=1.79, mediaPos=0.00, window=0, period=0, id=1, mimeType=video/avc, codecs=avc1.640028, res=1920x1080, fps=25.0]\r\n2022-06-20 10:53:07.358 29397-29427/com.example.karaoke D/KaraokeAudioSink: supportsFormat:Format(1, null, null, audio/mp4a-latm, mp4a.40.2, -1, und, [-1, -1, -1.0], [2, 44100])\r\n2022-06-20 10:53:07.358 29397-29427/com.example.karaoke D/KaraokeAudioSink: supportsFormat:false\r\n2022-06-20 10:53:07.359 29397-29427/com.example.karaoke D/KaraokeAudioSink: supportsFormat:Format(1, null, null, audio/mp4a-latm, mp4a.40.2, -1, und, [-1, -1, -1.0], [2, 44100])\r\n2022-06-20 10:53:07.359 29397-29427/com.example.karaoke D/KaraokeAudioSink: supportsFormat:false\r\n2022-06-20 10:53:07.359 29397-29397/com.example.karaoke D/KaraokeEventLogger: videoDecoderInitialized [eventTime=1.82, mediaPos=0.00, window=0, period=0, OMX.qcom.video.decoder.avc]\r\n2022-06-20 10:53:07.360 29397-29397/com.example.karaoke D/KaraokeEventLogger: videoInputFormat [eventTime=1.82, mediaPos=0.00, window=0, period=0, id=1, mimeType=video/avc, codecs=avc1.640028, res=1920x1080, fps=25.0]\r\n2022-06-20 10:53:07.388 29397-29397/com.example.karaoke D/KaraokeEventLogger: audioDecoderInitialized [eventTime=1.85, mediaPos=0.00, window=0, period=0, c2.android.aac.decoder]\r\n2022-06-20 10:53:07.390 29397-29397/com.example.karaoke D/KaraokeEventLogger: audioInputFormat [eventTime=1.85, mediaPos=0.00, window=0, period=0, id=1, mimeType=audio/mp4a-latm, codecs=mp4a.40.2, channels=2, sample_rate=44100, language=und]\r\n2022-06-20 10:53:07.398 29397-29427/com.example.karaoke D/KaraokeAudioSink: configureFormat(null, null, null, audio/raw, null, -1, null, [-1, -1, -1.0], [2, 44100])\r\n2022-06-20 10:53:07.410 29397-29427/com.example.karaoke D/KaraokeAudioSink: /storage/emulated/0/Android/data/com.example.karaoke/cache/AudioSlink.pcm\r\n2022-06-20 10:53:07.472 29397-29397/com.example.karaoke D/KaraokeEventLogger: videoSize [eventTime=1.93, mediaPos=0.00, window=0, period=0, 1920, 1080]\r\n2022-06-20 10:53:07.488 29397-29397/com.example.karaoke D/KaraokeEventLogger: surfaceSize [eventTime=1.95, mediaPos=0.00, window=0, period=0, 1600, 900]\r\n2022-06-20 10:53:07.491 29397-29397/com.example.karaoke D/KaraokeEventLogger: renderedFirstFrame [eventTime=1.95, mediaPos=0.00, window=0, period=0, Surface(name=null)/@0xdfde92e]\r\n2022-06-20 10:53:08.030 29397-29427/com.example.karaoke D/KaraokeAudioSink: play\r\n2022-06-20 10:53:08.037 29397-29397/com.example.karaoke D/KaraokeEventLogger: state [eventTime=2.50, mediaPos=0.00, window=0, period=0, READY]\r\n2022-06-20 10:53:08.040 29397-29397/com.example.karaoke D/KaraokeEventLogger: isPlaying [eventTime=2.50, mediaPos=0.00, window=0, period=0, true]\r\n2022-06-20 10:53:08.040 29397-29427/com.example.karaoke D/KaraokeAudioSink: getCurrentPositionUs:1000000000000\r\n2022-06-20 10:53:08.040 29397-29427/com.example.karaoke D/KaraokeAudioSink: getCurrentPositionUs:1000000000000\r\n2022-06-20 10:53:08.050 29397-29427/com.example.karaoke D/KaraokeAudioSink: getCurrentPositionUs:1000000000000\r\n2022-06-20 10:53:08.050 29397-29427/com.example.karaoke D/KaraokeAudioSink: getCurrentPositionUs:1000000000000\r\n2022-06-20 10:53:08.059 29397-29427/com.example.karaoke D/KaraokeAudioSink: getCurrentPositionUs:1000000000000\r\n2022-06-20 10:53:08.060 29397-29427/com.example.karaoke D/KaraokeAudioSink: getCurrentPositionUs:1000000000000\r\n2022-06-20 10:53:08.069 29397-29427/com.example.karaoke D/KaraokeAudioSink: getCurrentPositionUs:1000000000000\r\n2022-06-20 10:53:08.070 29397-29427/com.example.karaoke D/KaraokeAudioSink: getCurrentPositionUs:1000000000000\r\n2022-06-20 10:53:08.080 29397-29427/com.example.karaoke D/KaraokeAudioSink: getCurrentPositionUs:1000000000000\r\n2022-06-20 10:53:08.080 29397-29427/com.example.karaoke D/KaraokeAudioSink: getCurrentPositionUs:1000000000000\r\n2022-06-20 10:53:08.090 29397-29427/com.example.karaoke D/KaraokeAudioSink: getCurrentPositionUs:1000000000000\r\n2022-06-20 10:53:08.091 29397-29427/com.example.karaoke D/KaraokeAudioSink: getCurrentPositionUs:1000000000000\r\n2022-06-20 10:53:08.102 29397-29427/com.example.karaoke D/KaraokeAudioSink: getCurrentPositionUs:1000000000000\r\n2022-06-20 10:53:08.102 29397-29427/com.example.karaoke D/KaraokeAudioSink: getCurrentPositionUs:1000000000000\r\n2022-06-20 10:53:08.111 29397-29427/com.example.karaoke D/KaraokeAudioSink: getCurrentPositionUs:1000000000000\r\n2022-06-20 10:53:08.112 29397-29427/com.example.karaoke D/KaraokeAudioSink: getCurrentPositionUs:1000000000000\r\n2022-06-20 10:53:08.123 29397-29427/com.example.karaoke D/KaraokeAudioSink: getCurrentPositionUs:1000000000000\r\n2022-06-20 10:53:08.123 29397-29427/com.example.karaoke D/KaraokeAudioSink: getCurrentPositionUs:1000000000000\r\n2022-06-20 10:53:08.134 29397-29427/com.example.karaoke D/KaraokeAudioSink: getCurrentPositionUs:1000000000000\r\n2022-06-20 10:53:08.134 29397-29427/com.example.karaoke D/KaraokeAudioSink: getCurrentPositionUs:1000000000000\r\n2022-06-20 10:53:08.144 29397-29427/com.example.karaoke D/KaraokeAudioSink: getCurrentPositionUs:1000000000000\r\n2022-06-20 10:53:08.144 29397-29427/com.example.karaoke D/KaraokeAudioSink: getCurrentPositionUs:1000000000000\r\n2022-06-20 10:53:08.155 29397-29427/com.example.karaoke D/KaraokeAudioSink: getCurrentPositionUs:1000000000000"
      },
      {
        "user": "louiewh",
        "created_at": "2022-06-20T02:51:59Z",
        "body": "The log uses AudioCompatSink\r\nI find mediaPos and getCurrentPositionUs is exception \r\n\r\n> 2022-06-20 10:55:00.715 29542-29542/com.example.karaoke D/KaraokeAudioSink: KaraokeAudioSink:com.tme.karaoke.support.player.audio.AudioCompatSink@b47e78d\r\n2022-06-20 10:55:00.715 29542-29542/com.example.karaoke D/KaraokeAudioSink: setListener:com.google.android.exoplayer2.audio.MediaCodecAudioRenderer$AudioSinkListener@a38bd42\r\n2022-06-20 10:55:00.724 29542-29573/com.example.karaoke D/KaraokeAudioSink: setAudioSessionId:697\r\n2022-06-20 10:55:00.795 29542-29542/com.example.karaoke D/KaraokeEventLogger: surfaceSize [eventTime=0.07, mediaPos=0.00, window=0, 1600, 2227]\r\n2022-06-20 10:55:01.478 29542-29542/com.example.karaoke D/KaraokeEventLogger: timeline [eventTime=0.75, mediaPos=0.00, window=0, periodCount=1, windowCount=1, reason=PLAYLIST_CHANGED\r\n2022-06-20 10:55:01.478 29542-29542/com.example.karaoke D/KaraokeEventLogger:   period [?]\r\n2022-06-20 10:55:01.478 29542-29542/com.example.karaoke D/KaraokeEventLogger:   window [?, seekable=false, dynamic=true]\r\n2022-06-20 10:55:01.478 29542-29542/com.example.karaoke D/KaraokeEventLogger: ]\r\n2022-06-20 10:55:01.481 29542-29542/com.example.karaoke D/KaraokeEventLogger: mediaItem [eventTime=0.75, mediaPos=0.00, window=0, reason=PLAYLIST_CHANGED]\r\n2022-06-20 10:55:01.486 29542-29542/com.example.karaoke D/KaraokeEventLogger: state [eventTime=0.76, mediaPos=0.00, window=0, BUFFERING]\r\n2022-06-20 10:55:01.496 29542-29542/com.example.karaoke D/KaraokeEventLogger: playWhenReady [eventTime=0.77, mediaPos=0.00, window=0, true, USER_REQUEST]\r\n2022-06-20 10:55:01.513 29542-29542/com.example.karaoke D/KaraokeEventLogger: timeline [eventTime=0.79, mediaPos=0.00, window=0, period=0, periodCount=1, windowCount=1, reason=SOURCE_UPDATE\r\n2022-06-20 10:55:01.513 29542-29542/com.example.karaoke D/KaraokeEventLogger:   period [?]\r\n2022-06-20 10:55:01.513 29542-29542/com.example.karaoke D/KaraokeEventLogger:   window [?, seekable=false, dynamic=false]\r\n2022-06-20 10:55:01.513 29542-29542/com.example.karaoke D/KaraokeEventLogger: ]\r\n2022-06-20 10:55:01.513 29542-29542/com.example.karaoke D/KaraokeEventLogger: loading [eventTime=0.79, mediaPos=0.00, window=0, period=0, true]\r\n2022-06-20 10:55:02.362 29542-29542/com.example.karaoke D/KaraokeEventLogger: timeline [eventTime=1.64, mediaPos=0.00, window=0, period=0, periodCount=1, windowCount=1, reason=SOURCE_UPDATE\r\n2022-06-20 10:55:02.362 29542-29542/com.example.karaoke D/KaraokeEventLogger:   period [230.74]\r\n2022-06-20 10:55:02.362 29542-29542/com.example.karaoke D/KaraokeEventLogger:   window [230.74, seekable=true, dynamic=false]\r\n2022-06-20 10:55:02.362 29542-29542/com.example.karaoke D/KaraokeEventLogger: ]\r\n2022-06-20 10:55:02.415 29542-29573/com.example.karaoke D/KaraokeAudioSink: supportsFormat:Format(2, null, null, audio/mp4a-latm, mp4a.40.2, -1, en, [-1, -1, -1.0], [2, 48000])\r\n2022-06-20 10:55:02.415 29542-29573/com.example.karaoke D/KaraokeAudioSink: supportsFormat:false\r\n2022-06-20 10:55:02.415 29542-29573/com.example.karaoke D/KaraokeAudioSink: supportsFormat:Format(null, null, null, audio/raw, null, -1, null, [-1, -1, -1.0], [2, 48000])\r\n2022-06-20 10:55:02.415 29542-29573/com.example.karaoke D/KaraokeAudioSink: supportsFormat:true\r\n2022-06-20 10:55:02.415 29542-29573/com.example.karaoke D/KaraokeAudioSink: supportsFormat:Format(2, null, null, audio/mp4a-latm, mp4a.40.2, -1, en, [-1, -1, -1.0], [2, 48000])\r\n2022-06-20 10:55:02.416 29542-29573/com.example.karaoke D/KaraokeAudioSink: supportsFormat:false\r\n2022-06-20 10:55:02.416 29542-29573/com.example.karaoke D/KaraokeAudioSink: supportsFormat:Format(2, null, null, audio/mp4a-latm, mp4a.40.2, -1, en, [-1, -1, -1.0], [2, 48000])\r\n2022-06-20 10:55:02.416 29542-29573/com.example.karaoke D/KaraokeAudioSink: supportsFormat:false\r\n2022-06-20 10:55:02.417 29542-29573/com.example.karaoke D/KaraokeAudioSink: supportsFormat:Format(null, null, null, audio/raw, null, -1, null, [-1, -1, -1.0], [2, 48000])\r\n2022-06-20 10:55:02.417 29542-29573/com.example.karaoke D/KaraokeAudioSink: supportsFormat:true\r\n2022-06-20 10:55:02.417 29542-29573/com.example.karaoke D/KaraokeAudioSink: supportsFormat:Format(2, null, null, audio/mp4a-latm, mp4a.40.2, -1, en, [-1, -1, -1.0], [2, 48000])\r\n2022-06-20 10:55:02.417 29542-29573/com.example.karaoke D/KaraokeAudioSink: supportsFormat:false\r\n2022-06-20 10:55:02.417 29542-29573/com.example.karaoke D/KaraokeAudioSink: supportsFormat:Format(1, null, null, audio/mp4a-latm, mp4a.40.2, -1, und, [-1, -1, -1.0], [2, 44100])\r\n2022-06-20 10:55:02.417 29542-29573/com.example.karaoke D/KaraokeAudioSink: supportsFormat:false\r\n2022-06-20 10:55:02.417 29542-29573/com.example.karaoke D/KaraokeAudioSink: supportsFormat:Format(null, null, null, audio/raw, null, -1, null, [-1, -1, -1.0], [2, 44100])\r\n2022-06-20 10:55:02.417 29542-29573/com.example.karaoke D/KaraokeAudioSink: supportsFormat:true\r\n2022-06-20 10:55:02.417 29542-29573/com.example.karaoke D/KaraokeAudioSink: supportsFormat:Format(1, null, null, audio/mp4a-latm, mp4a.40.2, -1, und, [-1, -1, -1.0], [2, 44100])\r\n2022-06-20 10:55:02.417 29542-29573/com.example.karaoke D/KaraokeAudioSink: supportsFormat:false\r\n2022-06-20 10:55:02.418 29542-29573/com.example.karaoke D/KaraokeAudioSink: supportsFormat:Format(1, null, null, audio/mp4a-latm, mp4a.40.2, -1, und, [-1, -1, -1.0], [2, 44100])\r\n2022-06-20 10:55:02.418 29542-29573/com.example.karaoke D/KaraokeAudioSink: supportsFormat:false\r\n2022-06-20 10:55:02.418 29542-29573/com.example.karaoke D/KaraokeAudioSink: supportsFormat:Format(null, null, null, audio/raw, null, -1, null, [-1, -1, -1.0], [2, 44100])\r\n2022-06-20 10:55:02.418 29542-29573/com.example.karaoke D/KaraokeAudioSink: supportsFormat:true\r\n2022-06-20 10:55:02.418 29542-29573/com.example.karaoke D/KaraokeAudioSink: supportsFormat:Format(1, null, null, audio/mp4a-latm, mp4a.40.2, -1, und, [-1, -1, -1.0], [2, 44100])\r\n2022-06-20 10:55:02.418 29542-29573/com.example.karaoke D/KaraokeAudioSink: supportsFormat:false\r\n2022-06-20 10:55:02.418 29542-29573/com.example.karaoke D/KaraokeAudioSink: supportsFormat:Format(1, null, null, audio/mp4a-latm, mp4a.40.2, -1, und, [-1, -1, -1.0], [2, 44100])\r\n2022-06-20 10:55:02.418 29542-29573/com.example.karaoke D/KaraokeAudioSink: supportsFormat:false\r\n2022-06-20 10:55:02.418 29542-29573/com.example.karaoke D/KaraokeAudioSink: supportsFormat:Format(null, null, null, audio/raw, null, -1, null, [-1, -1, -1.0], [2, 44100])\r\n2022-06-20 10:55:02.419 29542-29573/com.example.karaoke D/KaraokeAudioSink: supportsFormat:true\r\n2022-06-20 10:55:02.419 29542-29573/com.example.karaoke D/KaraokeAudioSink: supportsFormat:Format(1, null, null, audio/mp4a-latm, mp4a.40.2, -1, und, [-1, -1, -1.0], [2, 44100])\r\n2022-06-20 10:55:02.419 29542-29573/com.example.karaoke D/KaraokeAudioSink: supportsFormat:false\r\n2022-06-20 10:55:02.419 29542-29573/com.example.karaoke D/KaraokeAudioSink: supportsFormat:Format(1, null, null, audio/mp4a-latm, mp4a.40.2, -1, und, [-1, -1, -1.0], [2, 44100])\r\n2022-06-20 10:55:02.419 29542-29573/com.example.karaoke D/KaraokeAudioSink: supportsFormat:false\r\n2022-06-20 10:55:02.419 29542-29573/com.example.karaoke D/KaraokeAudioSink: supportsFormat:Format(null, null, null, audio/raw, null, -1, null, [-1, -1, -1.0], [2, 44100])\r\n2022-06-20 10:55:02.419 29542-29573/com.example.karaoke D/KaraokeAudioSink: supportsFormat:true\r\n2022-06-20 10:55:02.419 29542-29573/com.example.karaoke D/KaraokeAudioSink: supportsFormat:Format(1, null, null, audio/mp4a-latm, mp4a.40.2, -1, und, [-1, -1, -1.0], [2, 44100])\r\n2022-06-20 10:55:02.419 29542-29573/com.example.karaoke D/KaraokeAudioSink: supportsFormat:false\r\n2022-06-20 10:55:02.423 29542-29573/com.example.karaoke D/KaraokeAudioSink: disableTunneling:\r\n2022-06-20 10:55:02.423 29542-29573/com.example.karaoke D/KaraokeAudioSink: flush:\r\n2022-06-20 10:55:02.423 29542-29542/com.example.karaoke D/KaraokeEventLogger: videoEnabled [eventTime=1.70, mediaPos=0.00, window=0, period=0]\r\n2022-06-20 10:55:02.424 29542-29542/com.example.karaoke D/KaraokeEventLogger: audioEnabled [eventTime=1.70, mediaPos=0.00, window=0, period=0]\r\n2022-06-20 10:55:02.426 29542-29542/com.example.karaoke D/KaraokeEventLogger: tracks [eventTime=1.70, mediaPos=0.00, window=0, period=0\r\n2022-06-20 10:55:02.426 29542-29542/com.example.karaoke D/KaraokeEventLogger:   MediaCodecVideoRenderer [\r\n2022-06-20 10:55:02.426 29542-29542/com.example.karaoke D/KaraokeEventLogger:     Group:0, adaptive_supported=N/A [\r\n2022-06-20 10:55:02.426 29542-29542/com.example.karaoke D/KaraokeEventLogger:       [X] Track:0, id=1, mimeType=video/avc, codecs=avc1.640028, res=1920x1080, fps=25.0, supported=YES\r\n2022-06-20 10:55:02.426 29542-29542/com.example.karaoke D/KaraokeEventLogger:     ]\r\n2022-06-20 10:55:02.426 29542-29542/com.example.karaoke D/KaraokeEventLogger:   ]\r\n2022-06-20 10:55:02.426 29542-29542/com.example.karaoke D/KaraokeEventLogger:   MediaCodecAudioRenderer [\r\n2022-06-20 10:55:02.426 29542-29542/com.example.karaoke D/KaraokeEventLogger:     Group:0, adaptive_supported=N/A [\r\n2022-06-20 10:55:02.426 29542-29542/com.example.karaoke D/KaraokeEventLogger:       [ ] Track:0, id=2, mimeType=audio/mp4a-latm, codecs=mp4a.40.2, channels=2, sample_rate=48000, language=en, supported=YES\r\n2022-06-20 10:55:02.426 29542-29542/com.example.karaoke D/KaraokeEventLogger:     ]\r\n2022-06-20 10:55:02.426 29542-29542/com.example.karaoke D/KaraokeEventLogger:     Group:1, adaptive_supported=N/A [\r\n2022-06-20 10:55:02.426 29542-29542/com.example.karaoke D/KaraokeEventLogger:       [ ] Track:0, id=1, mimeType=audio/mp4a-latm, codecs=mp4a.40.2, channels=2, sample_rate=44100, language=und, supported=YES\r\n2022-06-20 10:55:02.426 29542-29542/com.example.karaoke D/KaraokeEventLogger:     ]\r\n2022-06-20 10:55:02.426 29542-29542/com.example.karaoke D/KaraokeEventLogger:     Group:2, adaptive_supported=N/A [\r\n2022-06-20 10:55:02.426 29542-29542/com.example.karaoke D/KaraokeEventLogger:       [X] Track:0, id=1, mimeType=audio/mp4a-latm, codecs=mp4a.40.2, channels=2, sample_rate=44100, language=und, supported=YES\r\n2022-06-20 10:55:02.426 29542-29542/com.example.karaoke D/KaraokeEventLogger:     ]\r\n2022-06-20 10:55:02.426 29542-29542/com.example.karaoke D/KaraokeEventLogger:     Metadata [\r\n2022-06-20 10:55:02.426 29542-29542/com.example.karaoke D/KaraokeEventLogger:       TALB: description=null: value=\r\n2022-06-20 10:55:02.426 29542-29542/com.example.karaoke D/KaraokeEventLogger:       TPE1: description=null: value=周杰伦\r\n2022-06-20 10:55:02.426 29542-29542/com.example.karaoke D/KaraokeEventLogger:       ----: domain=com.apple.iTunes, description=cdec\r\n2022-06-20 10:55:02.426 29542-29542/com.example.karaoke D/KaraokeEventLogger:       ----: domain=com.apple.iTunes, description=iTunSMPB\r\n2022-06-20 10:55:02.426 29542-29542/com.example.karaoke D/KaraokeEventLogger:       TIT2: description=null: value=夜曲\r\n2022-06-20 10:55:02.426 29542-29542/com.example.karaoke D/KaraokeEventLogger:       TSSE: description=null: value=Nero AAC codec / 1.5.4.0\r\n2022-06-20 10:55:02.426 29542-29542/com.example.karaoke D/KaraokeEventLogger:     ]\r\n2022-06-20 10:55:02.426 29542-29542/com.example.karaoke D/KaraokeEventLogger:   ]\r\n2022-06-20 10:55:02.427 29542-29542/com.example.karaoke D/KaraokeEventLogger:   TextRenderer []\r\n2022-06-20 10:55:02.427 29542-29542/com.example.karaoke D/KaraokeEventLogger:   MetadataRenderer []\r\n2022-06-20 10:55:02.427 29542-29542/com.example.karaoke D/KaraokeEventLogger:   CameraMotionRenderer []\r\n2022-06-20 10:55:02.427 29542-29542/com.example.karaoke D/KaraokeEventLogger: ]\r\n2022-06-20 10:55:02.430 29542-29542/com.example.karaoke D/KaraokeEventLogger: downstreamFormat [eventTime=1.71, mediaPos=0.00, window=0, period=0, id=1, mimeType=video/avc, codecs=avc1.640028, res=1920x1080, fps=25.0]\r\n2022-06-20 10:55:02.464 29542-29573/com.example.karaoke D/KaraokeAudioSink: supportsFormat:Format(1, null, null, audio/mp4a-latm, mp4a.40.2, -1, und, [-1, -1, -1.0], [2, 44100])\r\n2022-06-20 10:55:02.464 29542-29573/com.example.karaoke D/KaraokeAudioSink: supportsFormat:false\r\n2022-06-20 10:55:02.464 29542-29573/com.example.karaoke D/KaraokeAudioSink: supportsFormat:Format(1, null, null, audio/mp4a-latm, mp4a.40.2, -1, und, [-1, -1, -1.0], [2, 44100])\r\n2022-06-20 10:55:02.464 29542-29573/com.example.karaoke D/KaraokeAudioSink: supportsFormat:false\r\n2022-06-20 10:55:02.465 29542-29542/com.example.karaoke D/KaraokeEventLogger: videoDecoderInitialized [eventTime=1.74, mediaPos=0.00, window=0, period=0, OMX.qcom.video.decoder.avc]\r\n2022-06-20 10:55:02.465 29542-29542/com.example.karaoke D/KaraokeEventLogger: videoInputFormat [eventTime=1.74, mediaPos=0.00, window=0, period=0, id=1, mimeType=video/avc, codecs=avc1.640028, res=1920x1080, fps=25.0]\r\n2022-06-20 10:55:02.491 29542-29542/com.example.karaoke D/KaraokeEventLogger: audioDecoderInitialized [eventTime=1.77, mediaPos=0.00, window=0, period=0, c2.android.aac.decoder]\r\n2022-06-20 10:55:02.492 29542-29542/com.example.karaoke D/KaraokeEventLogger: audioInputFormat [eventTime=1.77, mediaPos=0.00, window=0, period=0, id=1, mimeType=audio/mp4a-latm, codecs=mp4a.40.2, channels=2, sample_rate=44100, language=und]\r\n2022-06-20 10:55:02.502 29542-29573/com.example.karaoke D/KaraokeAudioSink: configureFormat(null, null, null, audio/raw, null, -1, null, [-1, -1, -1.0], [2, 44100])\r\n2022-06-20 10:55:02.507 29542-29573/com.example.karaoke D/KaraokeAudioSink: /storage/emulated/0/Android/data/com.example.karaoke/cache/AudioSlink.pcm\r\n2022-06-20 10:55:02.564 29542-29542/com.example.karaoke D/KaraokeEventLogger: videoSize [eventTime=1.84, mediaPos=0.00, window=0, period=0, 1920, 1080]\r\n2022-06-20 10:55:02.565 29542-29542/com.example.karaoke D/KaraokeEventLogger: renderedFirstFrame [eventTime=1.84, mediaPos=0.00, window=0, period=0, Surface(name=null)/@0x352a0e2]\r\n2022-06-20 10:55:02.577 29542-29542/com.example.karaoke D/KaraokeEventLogger: surfaceSize [eventTime=1.85, mediaPos=0.00, window=0, period=0, 1600, 900]\r\n2022-06-20 10:55:03.116 29542-29573/com.example.karaoke D/KaraokeAudioSink: play\r\n2022-06-20 10:55:03.124 29542-29573/com.example.karaoke D/KaraokeAudioSink: getCurrentPositionUs:0\r\n2022-06-20 10:55:03.124 29542-29573/com.example.karaoke D/KaraokeAudioSink: getCurrentPositionUs:0\r\n2022-06-20 10:55:03.126 29542-29542/com.example.karaoke D/KaraokeEventLogger: state [eventTime=2.40, mediaPos=-1000000.00, window=0, period=0, READY]\r\n2022-06-20 10:55:03.128 29542-29542/com.example.karaoke D/KaraokeEventLogger: isPlaying [eventTime=2.40, mediaPos=-1000000.00, window=0, period=0, true]\r\n2022-06-20 10:55:03.284 29542-29573/com.example.karaoke D/KaraokeAudioSink: getCurrentPositionUs:140000\r\n2022-06-20 10:55:03.285 29542-29573/com.example.karaoke D/KaraokeAudioSink: getCurrentPositionUs:140000\r\n2022-06-20 10:55:03.292 29542-29542/com.example.karaoke D/KaraokeEventLogger: loading [eventTime=2.57, mediaPos=-999999.88, window=0, period=0, false]\r\n2022-06-20 10:55:03.294 29542-29573/com.example.karaoke D/KaraokeAudioSink: getCurrentPositionUs:160000\r\n2022-06-20 10:55:03.294 29542-29573/com.example.karaoke D/KaraokeAudioSink: getCurrentPositionUs:160000\r\n2022-06-20 10:55:03.394 29542-29573/com.example.karaoke D/KaraokeAudioSink: getCurrentPositionUs:280000\r\n2022-06-20 10:55:03.394 29542-29573/com.example.karaoke D/KaraokeAudioSink: getCurrentPositionUs:280000\r\n2022-06-20 10:55:03.404 29542-29573/com.example.karaoke D/KaraokeAudioSink: getCurrentPositionUs:280000\r\n2022-06-20 10:55:03.404 29542-29573/com.example.karaoke D/KaraokeAudioSink: getCurrentPositionUs:280000\r\n2022-06-20 10:55:03.416 29542-29573/com.example.karaoke D/KaraokeAudioSink: getCurrentPositionUs:300000\r\n2022-06-20 10:55:03.416 29542-29573/com.example.karaoke D/KaraokeAudioSink: getCurrentPositionUs:300000\r\n2022-06-20 10:55:03.427 29542-29573/com.example.karaoke D/KaraokeAudioSink: getCurrentPositionUs:300000\r\n2022-06-20 10:55:03.427 29542-29573/com.example.karaoke D/KaraokeAudioSink: getCurrentPositionUs:300000\r\n2022-06-20 10:55:03.554 29542-29573/com.example.karaoke D/KaraokeAudioSink: getCurrentPositionUs:440000\r\n2022-06-20 10:55:03.554 29542-29573/com.example.karaoke D/KaraokeAudioSink: getCurrentPositionUs:440000\r\n2022-06-20 10:55:03.564 29542-29573/com.example.karaoke D/KaraokeAudioSink: getCurrentPositionUs:440000\r\n2022-06-20 10:55:03.564 29542-29573/com.example.karaoke D/KaraokeAudioSink: getCurrentPositionUs:440000\r\n2022-06-20 10:55:03.694 29542-29573/com.example.karaoke D/KaraokeAudioSink: getCurrentPositionUs:580000\r\n2022-06-20 10:55:03.695 29542-29573/com.example.karaoke D/KaraokeAudioSink: getCurrentPositionUs:580000\r\n2022-06-20 10:55:03.704 29542-29573/com.example.karaoke D/KaraokeAudioSink: getCurrentPositionUs:580000\r\n2022-06-20 10:55:03.704 29542-29573/com.example.karaoke D/KaraokeAudioSink: getCurrentPositionUs:580000\r\n2022-06-20 10:55:03.715 29542-29573/com.example.karaoke D/KaraokeAudioSink: getCurrentPositionUs:600000\r\n2022-06-20 10:55:03.715 29542-29573/com.example.karaoke D/KaraokeAudioSink: getCurrentPositionUs:600000\r\n2022-06-20 10:55:03.724 29542-29573/com.example.karaoke D/KaraokeAudioSink: getCurrentPositionUs:600000\r\n2022-06-20 10:55:03.724 29542-29573/com.example.karaoke D/KaraokeAudioSink: getCurrentPositionUs:600000\r\n2022-06-20 10:55:03.854 29542-29573/com.example.karaoke D/KaraokeAudioSink: getCurrentPositionUs:740000\r\n2022-06-20 10:55:03.854 29542-29573/com.example.karaoke D/KaraokeAudioSink: getCurrentPositionUs:740000\r\n2022-06-20 10:55:03.864 29542-29573/com.example.karaoke D/KaraokeAudioSink: getCurrentPositionUs:740000\r\n2022-06-20 10:55:03.865 29542-29573/com.example.karaoke D/KaraokeAudioSink: getCurrentPositionUs:740000\r\n2022-06-20 10:55:03.875 29542-29573/com.example.karaoke D/KaraokeAudioSink: getCurrentPositionUs:760000\r\n2022-06-20 10:55:03.875 29542-29573/com.example.karaoke D/KaraokeAudioSink: getCurrentPositionUs:760000\r\n2022-06-20 10:55:04.001 29542-29573/com.example.karaoke D/KaraokeAudioSink: getCurrentPositionUs:880000\r\n2022-06-20 10:55:04.002 29542-29573/com.example.karaoke D/KaraokeAudioSink: getCurrentPositionUs:880000\r\n2022-06-20 10:55:04.011 29542-29573/com.example.karaoke D/KaraokeAudioSink: getCurrentPositionUs:900000\r\n2022-06-20 10:55:04.011 29542-29573/com.example.karaoke D/KaraokeAudioSink: getCurrentPositionUs:900000\r\n2022-06-20 10:55:04.139 29542-29573/com.example.karaoke D/KaraokeAudioSink: getCurrentPositionUs:1020000\r\n2022-06-20 10:55:04.140 29542-29573/com.example.karaoke D/KaraokeAudioSink: getCurrentPositionUs:1020000\r\n2022-06-20 10:55:04.150 29542-29573/com.example.karaoke D/KaraokeAudioSink: getCurrentPositionUs:1040000\r\n2022-06-20 10:55:04.151 29542-29573/com.example.karaoke D/KaraokeAudioSink: getCurrentPositionUs:1040000\r\n2022-06-20 10:55:04.278 29542-29573/com.example.karaoke D/KaraokeAudioSink: getCurrentPositionUs:1160000\r\n2022-06-20 10:55:04.279 29542-29573/com.example.karaoke D/KaraokeAudioSink: getCurrentPositionUs:1160000\r\n2022-06-20 10:55:04.294 29542-29573/com.example.karaoke D/KaraokeAudioSink: getCurrentPositionUs:1180000\r\n2022-06-20 10:55:04.294 29542-29573/com.example.karaoke D/KaraokeAudioSink: getCurrentPositionUs:1180000\r\n2022-06-20 10:55:04.305 29542-29573/com.example.karaoke D/KaraokeAudioSink: getCurrentPositionUs:1180000\r\n2022-06-20 10:55:04.305 29542-29573/com.example.karaoke D/KaraokeAudioSink: getCurrentPositionUs:1180000\r\n2022-06-20 10:55:04.420 29542-29573/com.example.karaoke D/KaraokeAudioSink: getCurrentPositionUs:1300000\r\n2022-06-20 10:55:04.421 29542-29573/com.example.karaoke D/KaraokeAudioSink: getCurrentPositionUs:1300000\r\n2022-06-20 10:55:04.430 29542-29573/com.example.karaoke D/KaraokeAudioSink: getCurrentPositionUs:1320000"
      },
      {
        "user": "icbaker",
        "created_at": "2022-06-20T09:51:23Z",
        "body": "I'm afraid we don't have resources to answer questions of the form \"I've implemented interface X, it doesn't work, what have I done wrong?\".\r\n\r\nIf you want to implement a relatively complicated and low-level interface like `AudioSink` then I'm afraid it's really up to you to do most of the debugging on any problems you encounter.\r\n\r\nWe **are** able to assist with very specific questions about implementing these interfaces, like \"When implementing method Y of interface X, should I do clearly-defined behaviour A or B?\".\r\n\r\nI'll leave this question open for now - but unless the question can be made more specific I'm afraid we're not going to be able to help.\r\n\r\n"
      },
      {
        "user": "louiewh",
        "created_at": "2022-06-21T09:17:45Z",
        "body": "Thanks replay \r\nI resolve this problem by \r\nat handBuffer\r\n`      if(startMediaTimeUsNeedsInit){\r\n            startMediaTimeUs = max(0, presentationTimeUs);\r\n            if(startMediaTimeUs > 0) {\r\n                startMediaTimeUsNeedsInit = false;\r\n            }\r\n        }`\r\n\r\n\r\nat getCurrentPositionUs\r\n`        if(mAudioOutput != null){\r\n            try {\r\n                long pos = (0xFFFFFFFFL & mAudioOutput.getPlaybackHeadPosition()) * C.MICROS_PER_SECOND / 44100;\r\n                Log.e(TAG, \"getCurrentPositionUs->\"+pos);\r\n                return pos + startMediaTimeUs;\r\n            } catch (IOException e) {\r\n                Log.e(TAG, \"getCurrentPositionUs\", e);\r\n            }\r\n        }\r\n        return CURRENT_POSITION_NOT_SET;`\r\n\r\nbut at log  I find some dropFrame log .  Any  suggestion ？\r\n"
      },
      {
        "user": "louiewh",
        "created_at": "2022-06-21T09:20:20Z",
        "body": "AudioSlink  Api   may simple， such as  DataSource ?"
      }
    ]
  },
  {
    "number": 10351,
    "title": "AES URI and key overriding",
    "created_at": "2022-06-17T10:09:18Z",
    "closed_at": "2022-07-25T09:32:21Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10351",
    "body": "I have a question around AES.  Regarding an HLS manifest, the key server URI defined, and the key that is returned/used from that keyserver...\r\n\r\nIs it possible to interject and override either/both the URI and the returned key?  If not, would there be a route via custom overriding classes to achieve overriding? Something like #6338 maybe, and then use a modified copy of Aes128DataSource to achieve what I desire?  Would such a custom DataSource all fit into the chain without issue?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10351/comments",
    "author": "Ste-RH",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2022-06-17T15:25:27Z",
        "body": "I'm not entirely sure which part you want to override, but there may be multiple options depending on the exact desired outcome:\r\n - Provide a custom `HlsPlaylistParserFactory` to `HlsMediaSource.Factory`. This can wrap the default implementation and modify any `HlsPlaylist` values before returning the playlist to the player.\r\n - You can modify the network requests being made just-in-time by using a `ResolvingDataSource` with a `Resolver` that is able to update any requested URI, request parameters etc. and can also block if needed to determine the correct request.\r\n - You can modify what is being read from a resource by providing a completely custom `DataSource`, which can wrap an existing source and do any modification you like. You may want to write a `DataSourceContractTest` if you do that to ensure the custom source fulfils all expectations of the interface."
      },
      {
        "user": "Ste-RH",
        "created_at": "2022-06-27T10:25:29Z",
        "body": "Thanks @tonihei.  Think I will be looking at a custom HLS playlist parser as this was also suggested in #6181.  Will let you/everyone know how I get on."
      },
      {
        "user": "Ste-RH",
        "created_at": "2022-06-27T12:12:51Z",
        "body": "Hmm, nope.  That is only at best gonna let me change the URL of the keyserver.  Custom DataSource it is I think."
      },
      {
        "user": "Ste-RH",
        "created_at": "2022-06-28T13:39:24Z",
        "body": "Ok, bit lost now @tonihei.  Looking into how Aes128DataSource is used...\r\n\r\nIn HlsMediaChunk, the method buildDataSource returns a new instance of a Aes128DataSource if there is an encryption key passed in.  So it does this mean no matter what custom DataSource/Factory I create/use, a Aes128DataSource will always be used for a video encrypted as Aes 128?\r\n\r\nIf so, there is no way at this level I can interject a custom key...?  This would leave the Resolver as the only option?"
      },
      {
        "user": "tonihei",
        "created_at": "2022-06-30T13:26:12Z",
        "body": "Yes, the `Aes128DataSource` is used automatically for full segment encryption. \r\n\r\nI'm still not entirely sure what you are trying to customize :)  If I understand correctly you want\r\n 1. Change the URL of the key server. \r\n     - This can be done by either wrapping the `HlsPlaylistParserFactory` or by using a `ResolvingDataSource` that amends the URI if required. \r\n 2. Change the actual key returned from the updated key server URL.\r\n    - This is likely only possible by using a custom `DataSource` for the request that loads the key and is able to amend to the returned value. `HlsMediaSource` has a special `HlsDataSourceFactory` that lets you create different `DataSources` based on the type of request. The key requests will use `C.DATA_TYPE_DRM` as the `dataType`. \r\n\r\nNote that we also use a key cache that saves the key returned for a specific key server URL in order to avoid repeated requests for the same key. So you should make sure the original key server URI (before amendments) changes whenever the key is supposed to change as well, meaning you can't just use placeholder URI that is always the same even if the keys are not. (Not sure if that could be an issue for you)"
      },
      {
        "user": "Ste-RH",
        "created_at": "2022-07-15T15:07:00Z",
        "body": "After some head scratching I have _something_ that works.  Though I have to remove a 'final' keywords within the ExoPlayer library code to allow the solution to work :/\r\n\r\nHere is what I am doing:\r\n\r\n- My own `AESHlsPlaylistParser` class that implements `ParsingLoadable.Parser<HlsPlaylist>`.  It contains an instantiated `HlsPlaylistParser` member that does the main parse and creates the `HlsPlaylist` that I then change the URI within.\r\n\r\n- My own `AESHlsPlaylistParserFactory` class that implements `HlsPlaylistParserFactory`.  This allows me to create instances of `AESHlsPlaylistParser` and pass the key along into them.\r\n\r\n- In my player code I can set the `HlsMediaSourceFactory` PlaylistParseFactor (using `setPlaylistParserFactory`).\r\n\r\nNow for the meat of the solution.  Inside `AESHlsPlaylistParser` I override the 'parse' function thus:\r\n\r\n```\r\n@Override\r\npublic HlsPlaylist parse(Uri uri, InputStream inputStream) throws IOException\r\n{\r\n\tHlsPlaylist hlsPlaylist = super.parse(uri, inputStream);\r\n\r\n\tLog.d( \"AESHlsPlaylistParser\", \"AesHlsPlaylistParser : parse CALLED : uri = \" + uri.getPath() + \" | hlsPlaylist = \" + hlsPlaylist.toString() );\r\n\r\n\tif( hlsPlaylist instanceof HlsMediaPlaylist &&\r\n\t\tm_Key != null && !m_Key.isEmpty() )\r\n\t{\r\n\t\tHlsMediaPlaylist hlsMediaPlaylist = (HlsMediaPlaylist)( hlsPlaylist );\r\n\r\n\t\tString newURI = \"data:application/octet-stream;base64,\" + m_Key;\r\n\r\n\t\tint iNumSegments = ( hlsMediaPlaylist.segments != null ) ? hlsMediaPlaylist.segments.size() : 0;\r\n\t\tLog.d( \"AESHlsPlaylistParser\", \"AesHlsPlaylistParser : parse : hlsMediaPlaylist = \" + hlsMediaPlaylist.toString() + \" | iNumSegments = \" + iNumSegments + \" | hlsMediaPlaylist.segments = \" + hlsMediaPlaylist.segments.toString() );\r\n\r\n\t\tfor( int iSegment = 0; iSegment < iNumSegments; ++iSegment )\r\n\t\t{\r\n\t\t\tHlsMediaPlaylist.Segment segment = hlsMediaPlaylist.segments.get( iSegment );\r\n\t\t\tint iNumParts = ( segment != null && segment.parts != null ) ? segment.parts.size() : 0;\r\n\t\t\tLog.d( \"AESHlsPlaylistParser\", \"AesHlsPlaylistParser : parse : segment.url = \" + segment.initializationSegment.fullSegmentEncryptionKeyUri + \" | segment.initializationSegment.fullSegmentEncryptionKeyUri = \" + segment.fullSegmentEncryptionKeyUri + \" | iNumParts = \" + iNumParts );\r\n\r\n\t\t\t// Change the URI\r\n\t\t\tsegment.initializationSegment.fullSegmentEncryptionKeyUri = newURI;\r\n\t\t\tsegment.fullSegmentEncryptionKeyUri = newURI;\r\n\r\n\t\t\t// Parts\r\n\t\t\tfor( int iPart = 0; iPart < iNumParts; ++iPart )\r\n\t\t\t{\r\n\t\t\t\tHlsMediaPlaylist.Part part = segment.parts.get( iPart );\r\n\t\t\t\tif( part != null )\r\n\t\t\t\t{\r\n\t\t\t\t\tLog.d( \"AESHlsPlaylistParser\", \"AESHlsPlaylistParserFactory : createPlaylistParser : part.fullSegmentEncryptionKeyUri = \" + part.fullSegmentEncryptionKeyUri );\r\n\r\n\t\t\t\t\tpart.initializationSegment.fullSegmentEncryptionKeyUri = newURI;\r\n\t\t\t\t\tpart.fullSegmentEncryptionKeyUri = newURI;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Trailing parts\r\n\t\tint iNumTrailingParts = (hlsMediaPlaylist.trailingParts != null) ? hlsMediaPlaylist.trailingParts.size() : 0;\r\n\t\tfor( int iTrailingPart = 0; iTrailingPart < iNumTrailingParts; ++iTrailingPart )\r\n\t\t{\r\n\t\t\tHlsMediaPlaylist.Part trailingPart = hlsMediaPlaylist.trailingParts.get( iTrailingPart );\r\n\t\t\tif( trailingPart != null )\r\n\t\t\t{\r\n\t\t\t\tLog.d( \"AESHlsPlaylistParser\", \"AESHlsPlaylistParserFactory : createPlaylistParser : trailingPart.fullSegmentEncryptionKeyUri = \" + trailingPart.fullSegmentEncryptionKeyUri );\r\n\r\n\t\t\t\ttrailingPart.initializationSegment.fullSegmentEncryptionKeyUri = newURI;\r\n\t\t\t\ttrailingPart.fullSegmentEncryptionKeyUri = newURI;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn hlsPlaylist;\r\n}\r\n```\r\n\r\nSo the, the change I have to make to the ExoPlayer library code is to remove the `final` from `fullSegmentEncryptionKeyUri` in the `SegmentBase` class.\r\n\r\nIt works, but I am far from convinced it is the best method.  Any/all advice greatly received!\r\n\r\n"
      },
      {
        "user": "tonihei",
        "created_at": "2022-07-18T12:25:52Z",
        "body": "> It works, but I am far from convinced it is the best method. \r\n\r\nI think it looks like the right approach if your goal is to override all `fullSegmentEncryptionKeyUri` values of all segments and parts. (Aside: You only need to override the parts if you expect to use low-latency streams that define parts)\r\n\r\n> the change I have to make to the ExoPlayer library code is to remove the `final` from `fullSegmentEncryptionKeyUri`\r\n\r\nThe playlist objects are meant to be fully immutable so that they can be used across threads and classes can rely on values staying the same forever. The best way around this problem is to create a new instance instead of modifying the existing one:\r\n```\r\nreturn new HlsMediaPlaylist(\r\n   playlist.playlistType,\r\n   playlist.baseUri,\r\n   playlist.tags,\r\n   /* and so on... */\r\n   updatedSegments,\r\n   updatedTrailingParts,\r\n   ...\r\n);\r\n```\r\nwhere `updatedSegments` is a copy of the original segments created in a similar manner where you just change the `fullSegmentEncryptionKeyUri` and leave the rest unchanged."
      },
      {
        "user": "Ste-RH",
        "created_at": "2022-07-18T13:48:05Z",
        "body": "Thanks for the response @tonihei.\r\n\r\nI can make the changes you suggest happen, and will be great to not have any changes to the core library!  Couple of questions...\r\n\r\n1. Will I have to create new `initializationSegment` (if they are not null) on each segment, part, and trailingPart ?\r\n2. What do I do for the new trailingPart list passed in when creating the new `HlsMediaPlaylist` ?  Are these just the last segments part list?\r\n\r\nThanks again!"
      },
      {
        "user": "tonihei",
        "created_at": "2022-07-19T13:59:39Z",
        "body": "> Will I have to create new initializationSegment (if they are not null) on each segment, part, and trailingPart ?\r\n\r\nThe answer is likely yes. I think you don't necessarily have to create a new one for each segment and part as you can reference the same initialization segment from all of them (assuming they use the same).\r\n\r\n> What do I do for the new trailingPart list passed in when creating the new HlsMediaPlaylist ? Are these just the last segments part list?\r\n\r\nThese are the parts of the yet unfinished final segment in a low-latency live stream. We have to keep them separate as the other properties of the full segment (like `durationUs`) are not yet known and we might need to remove the last trailing part if it's just a preload part (whereas `Segment` instances are not expected to change creation). \r\n\r\nI can see that your overall changes becomes quite long and cumbersome to write. If you think it's worth having a helper method like `HlsMediaPlaylist.copyWithFullSegmentEncryptionKeyUri`, feel free to send a PR. We already have similar methods like `HlsMediaPlaylist.copyWithEndTag`, so this doesn't feel out of place."
      },
      {
        "user": "tonihei",
        "created_at": "2022-07-25T09:32:21Z",
        "body": "Closing for now because it seems the question was answered."
      }
    ]
  },
  {
    "number": 10350,
    "title": "disable audio track or volume",
    "created_at": "2022-06-17T02:43:16Z",
    "closed_at": "2022-06-24T01:10:30Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10350",
    "body": "I want to ask whether there is a way to enable or disable audio track, make it like subtitle disable and enable. \r\nBecause some video volume can't be control, so I want to have the switch.\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10350/comments",
    "author": "VeiZhang",
    "comments": [
      {
        "user": "VeiZhang",
        "created_at": "2022-06-17T06:40:52Z",
        "body": "Additionally, some video played in Android TV device, but ExoPlayer can't set its volume, its volume controlled by TV, so how can I control its volume?"
      },
      {
        "user": "tonihei",
        "created_at": "2022-06-17T15:17:59Z",
        "body": "You can change the volume of your stream by calling `Player.setVolume()`. Alternatively, you can also try to use `Player.setDeviceVolume()` or `decreaseDeviceVolume()`/`setDeviceMuted` to overwrite the device volume (for all streams)."
      },
      {
        "user": "VeiZhang",
        "created_at": "2022-06-21T02:55:37Z",
        "body": "@tonihei Thanks, I will try it."
      }
    ]
  },
  {
    "number": 10337,
    "title": "ExoPlayer is not returning DVB subtitles",
    "created_at": "2022-06-14T10:43:24Z",
    "closed_at": "2022-07-18T01:04:19Z",
    "labels": [
      "question",
      "closed-by-bot"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10337",
    "body": "I'm using ExoPlayer 2.16.1 and I'm trying to play an HLS stream with DVB subtitles. Till now I could retrieve these subtitles using this = \r\n`player.currentTracksInfo.trackGroupInfos.filter { it.trackType == C.TRACK_TYPE_TEXT }.` \r\nBut since ExoPlayer 2.17.1 this line of code returns an empty list for the same stream. Was there any change that affects DVB subtitles?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10337/comments",
    "author": "bgolob",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2022-06-17T15:05:35Z",
        "body": "Can you provide sample media here or to dev.exoplayer@gmail.com (with \"Issue #10337\" in the subject) so that we can reproduce? Without additional information we can say if this is working as intended or if it's a bug."
      },
      {
        "user": "google-oss-bot",
        "created_at": "2022-07-07T01:04:30Z",
        "body": "<!-- event: mark-stale -->\nHey @bgolob. We need more information to resolve this issue but there hasn't been an update in 14 weekdays. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2022-07-18T01:04:18Z",
        "body": "<!-- event: close-stale -->\nSince there haven't been any recent updates here, I am going to close this issue.\n\n@bgolob if you're still experiencing this problem and want to continue the discussion just leave a comment here and we are happy to re-open this."
      }
    ]
  },
  {
    "number": 10335,
    "title": "Unsupported Operation Exception on API level 29 and 30 devices.",
    "created_at": "2022-06-14T06:34:02Z",
    "closed_at": "2022-07-18T01:04:22Z",
    "labels": [
      "question",
      "closed-by-bot"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10335",
    "body": "Describe your question in detail.\r\n-------------------------\r\nWe are facing some issues while AudioTrack creation only on API levels 29 and 30, It throws UnsupportedOperationException while AudioTrack creation, Initially we suspected it to be an issue with offloaded playback but turning it off also did not help with this error.\r\nthis is the stack trace of this exception.\r\n```\r\njava.lang.UnsupportedOperationException: Cannot create AudioTrack at android.media.AudioTrack$Builder.build(AudioTrack.java:1018) \r\nat com.google.android.exoplayer2.audio.DefaultAudioSink$c.b(SourceFile:12) \r\nat com.google.android.exoplayer2.audio.DefaultAudioSink$c.a(SourceFile:1) \r\nat com.google.android.exoplayer2.audio.DefaultAudioSink.w(SourceFile:1) \r\nat com.google.android.exoplayer2.audio.DefaultAudioSink.F(SourceFile:4) \r\nat com.google.android.exoplayer2.audio.DefaultAudioSink.k(SourceFile:17) \r\nat uh.b.k(SourceFile:1) at com.google.android.exoplayer2.audio.f.m0(SourceFile:8) \r\nat com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.P(SourceFile:45) at \r\ncom.google.android.exoplayer2.mediacodec.MediaCodecRenderer.t(SourceFile:16) at \r\ncom.google.android.exoplayer2.m.d(SourceFile:139) \r\nat com.google.android.exoplayer2.m.handleMessage(SourceFile:29) \r\nat android.os.Handler.dispatchMessage(Handler.java:103) \r\nat android.os.Looper.loop(Looper.java:214) \r\nat android.os.HandlerThread.run(HandlerThread.java:67)\r\n\r\n```\r\nit seems the exception originates here, but I was not able to reason out why the state would still be uninitialized after creation?\r\n```\r\n\r\ntry {\r\n    final AudioTrack track = new AudioTrack(\r\n            mAttributes, mFormat, mBufferSizeInBytes, mMode, mSessionId, mOffload,\r\n            mEncapsulationMode, mTunerConfiguration);\r\n    if (track.getState() == STATE_UNINITIALIZED) {\r\n        // release is not necessary\r\n        throw new UnsupportedOperationException(\"Cannot create AudioTrack\");\r\n    }\r\n    return track;\r\n} catch (IllegalArgumentException e) {\r\n    throw new UnsupportedOperationException(e.getMessage());\r\n}\r\n\r\n```\r\nIs this a bug with the Android Media API itself? or I am doing something wrong?\r\n\r\nExoplayer version details\r\n-------------------------\r\nwe are using exoplayer version 2.16.1; unfortunately, the issue is not reproducible at our end.\r\n\r\ncc @saurabhofficial\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10335/comments",
    "author": "LuGO0",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2022-06-17T13:40:19Z",
        "body": "It's hard to say without knowing further details what went wrong exactly, but some part of the media configuration or the system state prevents the `AudioTrack` from being created. It could be that you are trying to play an audio format in a passthrough or offload mode that isn't supported on this device for example. To understand the problem in more detail, we would need example media, the device this occurs on, a bugreport from the device and any other information about the player setup that may be relevant (track selection parameters, any audio customizations, etc)."
      },
      {
        "user": "SaurabhOfficial",
        "created_at": "2022-06-17T13:57:48Z",
        "body": "we are also trying to get the bug report from any user who is facing this issue, we will share if we get some reports over the mail. The highest errors were on Sony Bravia VH2, and VH1.\r\nmeanwhile, I was going through the implementation checking for attributes that are additional for API level 29 and which show some transient behavior since it's not 100% reproducible some users of similar devices are able to play similar audio format contents. I stumbled upon allowedCapturePolicy but it's uniform across all devices and sessions I don't know if it can cause some trouble?\r\n"
      },
      {
        "user": "tonihei",
        "created_at": "2022-06-17T14:04:23Z",
        "body": "> I stumbled upon allowedCapturePolicy but it's uniform across all devices and sessions I don't know if it can cause some trouble?\r\n\r\nSounds unrelated, but it's really not possible to say what can cause this without more information from these devices (ideally a bugreport that is likely to give some indication).\r\n\r\n>  The highest errors were on Sony Bravia VH2, and VH1.\r\nThis definitely indicates a device-specific problem."
      },
      {
        "user": "google-oss-bot",
        "created_at": "2022-07-07T01:04:31Z",
        "body": "<!-- event: mark-stale -->\nHey @LuGO0. We need more information to resolve this issue but there hasn't been an update in 14 weekdays. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2022-07-18T01:04:21Z",
        "body": "<!-- event: close-stale -->\nSince there haven't been any recent updates here, I am going to close this issue.\n\n@LuGO0 if you're still experiencing this problem and want to continue the discussion just leave a comment here and we are happy to re-open this."
      }
    ]
  },
  {
    "number": 10326,
    "title": "MISB/KLV Metadata Support over Transport Stream",
    "created_at": "2022-06-09T19:28:55Z",
    "closed_at": "2022-06-10T10:15:01Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10326",
    "body": "I've been searching in both the documentation and the source code for metadata support.\r\n\r\nI need to get KLV metadata that comes within a MPEG-TS stream over either UDP or RTSP.\r\n\r\nIs retrieving this metadata possible with ExoPlayer?\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10326/comments",
    "author": "AleSoHe",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2022-06-10T10:15:01Z",
        "body": "This is not something we support, sorry!"
      }
    ]
  },
  {
    "number": 10323,
    "title": "A->B loop repeat mode ",
    "created_at": "2022-06-08T06:21:23Z",
    "closed_at": "2022-06-17T13:26:48Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10323",
    "body": "Before filing a feature request:\r\n-----------------------\r\n### [REQUIRED] Use case description\r\nI want my player to be able to play only some defined portion of a song in a loop. I mean, if a song has duration of 60 seconds, and the AB mode is toggled, I set point A to 10 seconds andpoint B to 40 seconds, and player plays only this portion of 30 seconds in a loop.\r\n\r\n### Proposed solution\r\njust some assumptions:\r\n\r\n1. There might be two separate properties for point A and point B in the player. \r\n2. When the  point B is set, the player plays the song only until it reaches the point B, and then it seeks back to a point A (which's default value is 0ms, i.e. the very beginning of the song)\r\n3. If the value of point B was set to a value lower than current  poistion, the player seeks back to point A\r\n4.  If the value of point B was set to a value highrer than total duration, this action is ignored\r\n\r\n### Alternatives considered\r\n I can do this on a controller layer using just code logic, but when UI conroller(e.g. an activity or a fragment) dies, this logic will be stopped as well. \r\nI also mignt be able to make it live long enough by passing some data to a `MediaSessionService` object, but I don't know how, because `onBind()` for `MediaSessionService` is already defined.\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10323/comments",
    "author": "Waldmann375",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2022-06-08T12:57:21Z",
        "body": "If I understand the request correctly, you'd like to continuously loop a section of the media between point A and B. Currently, you solve this with a `MediaController` implementation by observing the state and seeking when necessary.\r\n\r\nThe better solution for this is to set up the `MediaItem` you are requesting for playback with the correct parameters:\r\n```\r\nval mediaItem = MediaItem.Builder()\r\n   // + other setters, e.g. setMediaId, setRequestMetadata\r\n   .setClippingConfiguration(ClippingConfiguration.Builder().setStartPositionMs(A).setEndPositionMs(B).build())\r\n   .build()\r\nplayer.setMediaItem(mediaItem)\r\n```\r\nand then instruct the player to loop this clip:\r\n```\r\nplayer.setRepeatMode(Player.REPEAT_MODE_ONE)\r\n```\r\n\r\nThis sets up playback statically with fixed points A and B and you won't be able to change this without interrupting playback. We have an open feature request to easily support updates to the `ClippingProperties` during playback in #3163. This isn't implemented yet, but something we will likely address in the future.\r\n\r\n"
      },
      {
        "user": "tonihei",
        "created_at": "2022-06-17T13:26:48Z",
        "body": "I assume the question was answered and I can close this issue."
      }
    ]
  },
  {
    "number": 10320,
    "title": "ExoPlayer crashes when converted to aar.",
    "created_at": "2022-06-07T08:19:52Z",
    "closed_at": "2022-06-09T00:36:54Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10320",
    "body": "Hello.\r\n\r\nSome modules of ExoPlayer are combined into one aar and used in the app.\r\nSince ExoPlayer r2.16.1, the app crashes when playing videos.\r\nWe speculate that the crash was due to a bug in R8.\r\nWhat do you know from the following information?\r\n\r\nThe source code has been changed a little in order to convert it to aar.\r\n\r\nThe reproduction procedure is as follows\r\n1. run \"make_aar.sh\" to create aar\r\n2. move /library/all/buildout/outputs/aar/library-release.aar to /demos/player/.\r\n3. launch the demo application\r\n4. select content\r\n\r\nIn addition, our investigation so far has revealed that it is possible to avoid the crash by changing the following code.\r\nSince the actual processing content remains the same, we speculate that this is an R8 bug.\r\n* ExoPlayer.java\r\n```java\r\n    private Builder(\r\n        Context context,\r\n        Supplier<RenderersFactory> renderersFactorySupplier,\r\n        Supplier<MediaSourceFactory> mediaSourceFactorySupplier,\r\n        Supplier<TrackSelector> trackSelectorSupplier,\r\n        Supplier<LoadControl> loadControlSupplier,\r\n        Supplier<BandwidthMeter> bandwidthMeterSupplier,\r\n        @Nullable Supplier<AnalyticsCollector> analyticsCollectorSupplier) {\r\n      this.context = context;\r\n      this.renderersFactorySupplier = renderersFactorySupplier;\r\n      this.mediaSourceFactorySupplier = mediaSourceFactorySupplier;\r\n      this.trackSelectorSupplier = trackSelectorSupplier;\r\n      this.loadControlSupplier = loadControlSupplier;\r\n      this.bandwidthMeterSupplier = bandwidthMeterSupplier;\r\n-     this.analyticsCollectorSupplier =\r\n-         analyticsCollectorSupplier != null\r\n-             ? analyticsCollectorSupplier\r\n-             : () -> new AnalyticsCollector(checkNotNull(clock));\r\n+     if (analyticsCollectorSupplier == null) {\r\n+       this.analyticsCollectorSupplier = () -> new AnalyticsCollector(checkNotNull(clock));\r\n+     } else {\r\n+       this.analyticsCollectorSupplier = analyticsCollectorSupplier;\r\n+     }\r\n      looper = Util.getCurrentOrMainLooper();\r\n      audioAttributes = AudioAttributes.DEFAULT;\r\n      wakeMode = C.WAKE_MODE_NONE;\r\n      videoScalingMode = C.VIDEO_SCALING_MODE_DEFAULT;\r\n      videoChangeFrameRateStrategy = C.VIDEO_CHANGE_FRAME_RATE_STRATEGY_ONLY_IF_SEAMLESS;\r\n      useLazyPreparation = true;\r\n      seekParameters = SeekParameters.DEFAULT;\r\n      seekBackIncrementMs = C.DEFAULT_SEEK_BACK_INCREMENT_MS;\r\n      seekForwardIncrementMs = C.DEFAULT_SEEK_FORWARD_INCREMENT_MS;\r\n      livePlaybackSpeedControl = new DefaultLivePlaybackSpeedControl.Builder().build();\r\n      clock = Clock.DEFAULT;\r\n      releaseTimeoutMs = DEFAULT_RELEASE_TIMEOUT_MS;\r\n      detachSurfaceTimeoutMs = DEFAULT_DETACH_SURFACE_TIMEOUT_MS;\r\n      this.playerOptions = null;\r\n      this.plugin = null;\r\n      this.qoeManager = null;\r\n    }\r\n```\r\n\r\nI would like your opinion.\r\nThank you!",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10320/comments",
    "author": "pineapplevine",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2022-06-07T21:56:33Z",
        "body": "This seems outside the scope of this issue tracking, since you're doing something custom (and not recommended) to cause the problem. It could be an R8 problem. It could also be that the way you're generating the single aar is not correctly picking up and merging all of the proguard rules defined by the individual modules."
      },
      {
        "user": "pineapplevine",
        "created_at": "2022-06-09T00:36:54Z",
        "body": "Thank you for answering.\r\nWe understand that it does not seem to be an ExoPlayer problem.\r\nThis issue will be closed."
      }
    ]
  },
  {
    "number": 10315,
    "title": "Android TV - 360 Videos - Explore video",
    "created_at": "2022-06-03T10:44:59Z",
    "closed_at": "2022-06-06T13:55:34Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10315",
    "body": "\r\nWhile at mobile devices I could explore 360 videos either with touch or gyroscope, I am not able to do the same at android tv boxes. Youtube handles this case of exploring video with arrow buttons of D-PAD. I wonder if there is an ExoPlayer implementation of doing this or if they have made their own implementation.\r\n\r\nThank you in advance!",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10315/comments",
    "author": "nikolmamai",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2022-06-06T13:55:34Z",
        "body": "Currently, you have to implement this yourself. Thanks!"
      }
    ]
  },
  {
    "number": 10302,
    "title": "Subtitles not displayed in CastPlayer ",
    "created_at": "2022-05-27T23:31:25Z",
    "closed_at": "2022-05-30T10:32:36Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10302",
    "body": "Hi I was trying use cast player to cast video, but subtitles are not shown. I saw the code, and could not find a way to populate subtitles.\r\nI tried to use Custom MediaItemConverter but it did not help\r\n\r\n```\r\n  override fun toMediaQueueItem(mediaItem: MediaItem): MediaQueueItem {\r\n    val metadata = com.google.android.gms.cast.MediaMetadata(\r\n      com.google.android.gms.cast.MediaMetadata.MEDIA_TYPE_MOVIE\r\n    )\r\n   \r\n    val mediaInfo = MediaInfo.Builder(mediaItem.playbackProperties!!.uri.toString())\r\n      .setStreamType(MediaInfo.STREAM_TYPE_BUFFERED)\r\n      .setContentType(mediaItem.playbackProperties!!.mimeType!!)\r\n      .setMetadata(metadata)\r\n      .setMediaTracks(createSubtitleMediaTracks(mediaItem.playbackProperties?.subtitles))\r\n      .setCustomData(getCustomData(mediaItem))\r\n      .build()\r\n    return MediaQueueItem.Builder(mediaInfo).build()\r\n  }\r\n```\r\nI see in the CastPlayer, the video is loaded using \r\n```\r\nremoteMediaClient.queueLoad(\r\n        mediaQueueItems,\r\n        min(startIndex, mediaQueueItems.length - 1),\r\n        getCastRepeatMode(repeatMode),\r\n        startPositionMs,\r\n        /* customData= */ null);\r\n``` \r\nThat does not set any active track ids for subtitles. If we use \r\n```\r\nremoteMediaClient.load(mediaInfo, mediaLoadOptions)\r\n```\r\nthat sets `setActiveTrackIds` \r\n\r\nAlso using `StyledPlayerView` for normal play on device, but when casting, the captions button is disabled.\r\n\r\nIs there a way to cast subtitles using Cast Player?\r\n\r\nusing exoplayer 2.15.1",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10302/comments",
    "author": "anup1245",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2022-05-30T10:32:36Z",
        "body": "This is currently not supported with `CastPlayer`. Accordingly `CastPayer` does not advertise this feature and the `StyledPlayerView` correctly does not offer setting text tracks.\r\n\r\nThanks for reporting. I'm closing as a duplicate of #8669.\r\n\r\n\r\n"
      }
    ]
  },
  {
    "number": 10296,
    "title": "Is default max bitrate for E-AC-3 too high?",
    "created_at": "2022-05-26T16:31:26Z",
    "closed_at": "2022-06-27T01:04:16Z",
    "labels": [
      "question",
      "closed-by-bot"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10296",
    "body": "We were trying to play an E-AC-3 DASH stream but playback was not starting.\r\nOn adding multiple logs, we found that audio is not starting and due to that the video was also stuck.\r\n\r\nIt was a multi period DASH stream with first period of ~2.9s (Very short).\r\nWhen we try to play longer period DASH stream, it was working fine. But we noticed that the playback was starting after feeding ~8 seconds of audio data to renderer.\r\n\r\nOn further analysis we found that Audio renderer was configured with with high buffer size. This was happening as E_AC3_MAX_RATE_BYTES_PER_SECOND (6144 * 1000 / 8) was used to calculate the buffer size.\r\n\r\nIn our stream, the bitrate of the E-AC-3 stream was very low (192 kbps) compared to the bitrate value used by the Exoplayer.\r\n\r\nWe resolved the issue by using lower bitrate value.\r\n\r\nMy question is on what basis value for E_AC3_MAX_RATE_BYTES_PER_SECOND is chosen? Is it the typical value? Or is it too high? Thanks.\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10296/comments",
    "author": "mayurk2",
    "comments": [
      {
        "user": "christosts",
        "created_at": "2022-05-27T15:05:05Z",
        "body": "The value of `E_AC3_MAX_RATE_BYTES_PER_SECOND` seems correct as per spec. If playback got stuck, that might be due to something else. Does the issue occur with the latest version of ExoPlayer (2.17.1 at the moment of writing this)? If yes, would you be able to share a link to the content so I can take a look?\r\n\r\nIf you're unable to share test content publicly, please send them to dev.exoplayer@gmail.com with subject \"Issue #10296\". Please also update this issue to indicate you've done this.\r\n\r\nThanks.\r\n"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2022-06-16T01:04:33Z",
        "body": "<!-- event: mark-stale -->\nHey @mayurk2. We need more information to resolve this issue but there hasn't been an update in 14 weekdays. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2022-06-27T01:04:15Z",
        "body": "<!-- event: close-stale -->\nSince there haven't been any recent updates here, I am going to close this issue.\n\n@mayurk2 if you're still experiencing this problem and want to continue the discussion just leave a comment here and we are happy to re-open this."
      }
    ]
  },
  {
    "number": 10275,
    "title": "why ExoPlayer not use Kotlin",
    "created_at": "2022-05-19T13:35:29Z",
    "closed_at": "2022-05-20T08:42:59Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10275",
    "body": "why ExoPlayer not use Kotlin? mostly code is JAVA. \r\nis there any consideration? as performance, cpu loading, memory usage, easy integrating as so on",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10275/comments",
    "author": "yuzhidi",
    "comments": [
      {
        "user": "besarmemishi",
        "created_at": "2022-05-19T19:17:16Z",
        "body": "Why should they use Kotlin?"
      },
      {
        "user": "yuzhidi",
        "created_at": "2022-05-20T02:37:37Z",
        "body": "> Why should they use Kotlin?\r\n\r\nless code than JAVA\r\nJAVA is boring"
      },
      {
        "user": "icbaker",
        "created_at": "2022-05-20T08:42:59Z",
        "body": "There's a couple of reasons we don't currently have any Kotlin in the library:\r\n\r\n* **History:** ExoPlayer was started when Kotlin was a much less mature language than it is now - so at the time the natural choice was Java.\r\n* **Library size:** Apps that depend on Kotlin see APK size increase by at least 40kB (after all minification). This is obviously not an issue for any apps that are already pulling in Kotlin, either via another dependency or by writing parts in Kotlin themselves. But as a very widely used library, we're aware that apps use us in a huge range of contexts - some of which are very sensitive to APK size. Unconditionally increasing the size of all these apps would be a shame (and likely lead to complaints :)).\r\n  * This issue makes it harder for us to use Kotlin in our most commonly used components - but it makes it more likely that we will use it in a new extension module, or one that already pulls in Kotlin via its own dependencies. An example of this second one is our OkHttp extension, because OkHttp is written in Kotlin. In this case we just haven't got the capacity to rewrite the existing Java extension into Kotlin for little concrete benefit.\r\n\r\nThe team would like to use more Kotlin in the library in future - but we're basically waiting for the right opportunity when it makes sense.\r\n"
      },
      {
        "user": "yuzhidi",
        "created_at": "2022-05-27T06:59:49Z",
        "body": "> There's a couple of reasons we don't currently have any Kotlin in the library:\r\n> \r\n> * **History:** ExoPlayer was started when Kotlin was a much less mature language than it is now - so at the time the natural choice was Java.\r\n> * **Library size:** Apps that depend on Kotlin see APK size increase by at least 40kB (after all minification). This is obviously not an issue for any apps that are already pulling in Kotlin, either via another dependency or by writing parts in Kotlin themselves. But as a very widely used library, we're aware that apps use us in a huge range of contexts - some of which are very sensitive to APK size. Unconditionally increasing the size of all these apps would be a shame (and likely lead to complaints :)).\r\n>   \r\n>   * This issue makes it harder for us to use Kotlin in our most commonly used components - but it makes it more likely that we will use it in a new extension module, or one that already pulls in Kotlin via its own dependencies. An example of this second one is our OkHttp extension, because OkHttp is written in Kotlin. In this case we just haven't got the capacity to rewrite the existing Java extension into Kotlin for little concrete benefit.\r\n> \r\n> The team would like to use more Kotlin in the library in future - but we're basically waiting for the right opportunity when it makes sense.\r\n\r\nthank you very munch !!!"
      }
    ]
  },
  {
    "number": 10268,
    "title": "ForwardingPlayer.setPlayWhenReady is not being called",
    "created_at": "2022-05-17T21:56:44Z",
    "closed_at": "2022-05-24T10:49:32Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10268",
    "body": "From migrating a `DefaultControlDispatcher` to `ForwardingPlayer`, do I need to implement something else besides only creating an instance of the `ForwardingPlayer` class? Because I'm not getting called the method `setPlayWhenReady` from the `ForwardingPlayer` but other methods are called as `getPlayWhenReady` and `isPlaying`, for example.\r\n\r\nThis is reproducible in the ExoPlayer Demo app v2.17.1 by just passing a `ForwardingPlayer` object to the `playerView` object through the method `setPlayer()`\r\n\r\nThank you!\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10268/comments",
    "author": "nandovelazquez",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2022-05-17T22:07:42Z",
        "body": "The `PlayerControlView` is using `player.play()` and `player.pause()` which is delegated by the `ForwardingPlayer` to the wrapped `Player`. Then the wrapped player is calling `setPlayWhenReady(true|false)` but not on the `ForwardingPlayer` but internally on itself.\r\n\r\nSo you can intercept these calls by overriding `play()` and `pause()` of your `ForwardingPlayer`."
      },
      {
        "user": "nandovelazquez",
        "created_at": "2022-05-20T17:17:09Z",
        "body": "Thanks for the quick response!\r\n\r\nThe methods `play()` and `pause()` work. It might be helpful if that behavior is somewhere in the documentation for future references.\r\n\r\nThanks again."
      },
      {
        "user": "marcbaechinger",
        "created_at": "2022-05-24T10:49:32Z",
        "body": "We added a section about 'ForwardingPlayer' to the developer guide that will be published with the next release."
      }
    ]
  },
  {
    "number": 10262,
    "title": "Method to disable sequential playback on MediaSource level",
    "created_at": "2022-05-16T09:53:15Z",
    "closed_at": "2022-05-17T09:22:01Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10262",
    "body": "I am looking for a way to disable sequential playback of mp3s on `MediaSource` level (of course, the MediaSource in my case is a `ConcatenatingMediaSource`). I know about the method `setPauseAtEndOfMediaItems` on exoplayer level. But this disables sequential playback for ALL media sources used by exoplayer. I would like to disable sequential playback on one `MediaSource` while enable it on another `MediaSource`. Is there something like `MediaSource.setPauseAtEndOfMediaItems` ? Thank you!",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10262/comments",
    "author": "tosam144",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2022-05-16T21:02:24Z",
        "body": "There is no API for this I'm afraid, but I think implementing this with the existing API is straightforward.\r\n\r\nYou can listen to `Player.Listener.onMediaItemTransition(mediaItem, reason)` then look at the media item and set `pauseAtEndOfMediaItems` accordingly.\r\n\r\nWould that work?"
      },
      {
        "user": "tosam144",
        "created_at": "2022-05-17T09:10:18Z",
        "body": "Excellent, @marcbaechinger: thank you. That works perfectly indeed."
      }
    ]
  },
  {
    "number": 10261,
    "title": "exoplayer crashes in android 12",
    "created_at": "2022-05-15T07:50:32Z",
    "closed_at": "2022-05-16T09:33:25Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10261",
    "body": "we have audio player app which play files from server. but only with android 12, when play file, the app crashes. means when exoplayer starts the task, the app crash only with android 12. please give solution",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10261/comments",
    "author": "literaturesharingforvi",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2022-05-16T09:33:11Z",
        "body": "There is no way we can act on this little amount of information. Please completely fill out the bug template including reproduction steps, sample media, error logs etc. if you want us to have a look. "
      }
    ]
  },
  {
    "number": 10258,
    "title": "Is it possible to play two audio files simultaneously with exo-player?",
    "created_at": "2022-05-13T04:05:37Z",
    "closed_at": "2022-06-09T12:47:27Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10258",
    "body": "I have a requirement to play two audio files with different volume simultaneously. \r\nFor example, a music audio file and instructions audio file together based on the language selection by the user.\r\n\r\nIf possible, please share any documentation or code snippet.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10258/comments",
    "author": "sriramkp",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2022-05-16T09:48:27Z",
        "body": "The answer depends a bit on your synchronization requirements between these files.\r\n\r\nIf one file is just background music and the other spoken text that has no direct synchronization to the music, then I would just use two independent `ExoPlayer` instances at the same time. Then you can also set the volume independently.\r\n\r\nIf you need to play both files synchronously, then it becomes considerably more complicated. Each player uses the audio output as the primary time source (from `MediaCodecAudioRenderer.getPositionUs` specifically). Having one player use the other player as time source doesn't work very well for this case because audio can't be easily adapted to \"wait\" for the other player. So the only sensible way to achieve synchronization is to use one `Player` which playes both files together and then merges both raw audio PCM data in a special `AudioSink`. See #4261 where this has been explored in more detail."
      },
      {
        "user": "tonihei",
        "created_at": "2022-06-09T12:47:27Z",
        "body": "Closing because the question was answered."
      }
    ]
  },
  {
    "number": 10239,
    "title": "How to show track selector dialog item in separate dialog",
    "created_at": "2022-05-04T17:05:08Z",
    "closed_at": "2022-07-05T09:53:00Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10239",
    "body": "in exoplayer i use track selection dialog where it shows video, audio and cc in same dialog as tab and viewpager format but i want them to show in seperate dialog like \r\nbutton 1 = TRACK_TYPE_VIDEO;\r\nbutton2 =TRACK_TYPE_TEXT\r\nbutton 3 = TRACK_TYPE_AUDIO\r\ncan you help me to acheve this feature\r\ncurrent coding \r\n          ```\r\n   MappingTrackSelector.MappedTrackInfo mappedTrackInfo;\r\n                DefaultTrackSelector.Parameters parameters = trackSelector.getParameters();\r\n                TrackSelectionDialog trackSelectionDialog =\r\n                        TrackSelectionDialog.createForTrackSelector(\r\n                                trackSelector,\r\n                                dismissedDialog -> {\r\n                                });\r\n                trackSelectionDialog.show(getSupportFragmentManager(), null);\r\n```",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10239/comments",
    "author": "Programmingtimes",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2022-05-05T10:20:46Z",
        "body": "I will leave this open for a few weeks in case anyone wants to help, but since it's more just a request for help with your own application development, it's not within scope for what we have capacity to help with directly."
      },
      {
        "user": "Programmingtimes",
        "created_at": "2022-05-05T10:22:58Z",
        "body": "thankyou. but i hope this  also will be helpful for other global exoplayer developers around the universe."
      }
    ]
  },
  {
    "number": 10237,
    "title": "Replacement for ActionFileUpgradeUtil.upgradeAndDelete ?",
    "created_at": "2022-05-03T18:27:29Z",
    "closed_at": "2022-05-04T13:02:11Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10237",
    "body": "When updating to version 2.17.1, I find that `ActionFileUpgradeUtil.upgradeAndDelete` in package `com.google.android.exoplayer2.offline` was removed. What is the replacement for this method?\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10237/comments",
    "author": "tosam144",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2022-05-04T13:02:11Z",
        "body": "There is no built in replacement. Given how long action files have been deprecated, I'd be somewhat surprised if you still need it. It would probably only be used in cases where a user hasn't updated your app for a _long_ time, and then does so. Pragmatically, it may well be OK just to delete any previously downloaded content in this case, since the number of users affected is likely to be very small.\r\n\r\nIf you do need to maintain backward compatibility this far back, it's straightforward just to copy `ActionFileUpgradeUtil` and `ActionFile` from the last release in which it was present into your own codebase. You also need to copy `DownloadManager.mergeRequest` into `ActionFileUpgradeUtil`, but nothing else is needed to get things working. I think it's a ~5 minute job."
      }
    ]
  },
  {
    "number": 10233,
    "title": "Problem with ExoPlayer Notification Controls",
    "created_at": "2022-05-01T11:39:25Z",
    "closed_at": "2022-05-30T01:04:25Z",
    "labels": [
      "question",
      "closed-by-bot"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10233",
    "body": "I am making a audio player app. I created a service for audio player and playback notification. I am facing problem with the previous/next buttons in the Player as well as the playback notification.\r\n\r\n1. The previous/next buttons in the audio playback notification just restarts the playback and do not change the song/audio file. \r\nOther controls work well.\r\n2. The previous/next buttons in the audio player (using exoplayer) change and play the next/previous file but the player artwork (image for audio file) do not change. Also, the play/pause button remains in paused state and when pressed, it plays a different file.\r\nPlease Help!",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10233/comments",
    "author": "devayush20",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2022-05-01T12:43:15Z",
        "body": "You need to add a bit more context for us, so we know how you are trying to achieve the above things.\r\n\r\nFrom what you describe it looks like there is something completely not working as intended, so I think it's worth that you review you app code to see whether you are really doing what you are intended to do. We can not review your app code I'm afraid, but if you think you found a bug in the library please create a narrowed down sample that exhibits the problem so we can take a look.\r\n\r\nWith the available information I can just guess and based on the experience of `PlayerNotificationManager` working well for many apps I would probably be tempted to blame app code for the malfunctioning which may be wrong. So if you want to make us look into this issue, you need to add some more information about what you do and how you think the library is wrong.\r\n\r\nFor your point 1, this could look like your service is restarted after it crashes and is restarted again because of the `START_STICKY` flag that you probably use. That's a guess. Please add `EventLogger` to your player, go through the scenario again and the take a bug report which you attach to this issue. This would make your issue actionable for us.\r\n\r\nFor your point 2, that is a different issue than 1, I'd kindly ask you to try this with the demo app and see whether it behaves the same. If you see the same issue with the demo app, I'd suggest to open a different issue, because this is not related to the notification. In this case please provide us with sample media URIs of these audio files, so we can see where the metadata is coming from and why the artwork is not displayed as expected."
      },
      {
        "user": "google-oss-bot",
        "created_at": "2022-05-19T01:04:27Z",
        "body": "<!-- event: mark-stale -->\nHey @devayush20. We need more information to resolve this issue but there hasn't been an update in 14 weekdays. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2022-05-30T01:04:25Z",
        "body": "<!-- event: close-stale -->\nSince there haven't been any recent updates here, I am going to close this issue.\n\n@devayush20 if you're still experiencing this problem and want to continue the discussion just leave a comment here and we are happy to re-open this."
      }
    ]
  },
  {
    "number": 10224,
    "title": "onMediaItemTransition event happens 50-100 millis after the media item is transitioned",
    "created_at": "2022-04-28T03:49:23Z",
    "closed_at": "2022-05-04T15:15:09Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10224",
    "body": "### ExoPlayer Version\n\n2.17.1\n\n### Devices that reproduce the issue\n\nPixel C Emulator - API 32, along with FIreTV / Android TV devices\n\n### Devices that do not reproduce the issue\n\n_No response_\n\n### Reproducible in the demo app?\n\nYes\n\n### Reproduction steps\n\n1. Create a basic ExoPlayer\r\n2. Add several videos to a `ConcatenatingMediaSource` to make a play list\r\n3. Add a `Player.Listener` to the `ExoPlayer`, and log timestamps for `onRenderedFirstFrame` and `onMediaItemTransition`.\r\n4. Notice that the timestamps in the emulator are 50-100 millis behind each other. This can be even worse on low end AndroidTVs.\n\n### Expected result\n\nI receive the `onMediaItemTransition` event at the same time as the `onRenderedFirstFrame` event.\n\n### Actual result\n\n`onMediaItemTransition` event comes 50-100 millis after the `onRenderedFirstFrame` event.\n\n### Media\n\nThis is media agnostic, but should work with any h264 videos.\n\n### Bug Report\n\n- [ ] You will email the zip file produced by `adb bugreport` to dev.exoplayer@gmail.com after filing this issue.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10224/comments",
    "author": "ScottPierce",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2022-04-28T11:27:52Z",
        "body": "I can not repro this to the extend you are reporting. When I play a playlist with two items I get two `onFirstFrameRendered` and `onMediaItemTransitioned` events - one for each media item I get this log:\r\n\r\n```\r\n2022-04-28 10:56:59.614 I/ExoPlayerImpl: Init 426d192 [AndroidXMedia3/1.0.0-alpha03] [raven, Pixel 6 Pro, Google, 32]\r\n// initial media item transition when changing the playlist (setMediaItems(mediaItems))\r\n2022-04-28 10:56:59.620 D/EventLogger: mediaItem [eventTime=0.00, mediaPos=0.00, window=0, reason=PLAYLIST_CHANGED]\r\n\r\n// first frame rendered: eventTime=0.25, window=0, period=0, mediaPos=0.00\r\n2022-04-28 10:56:59.871 D/EventLogger: renderedFirstFrame [eventTime=0.25, mediaPos=0.00, window=0, period=0, Surface(name=null)/@0x745af8f]\r\n\r\n// first frame rendered: eventTime=25.38, window=1, period=1, mediaPos=0.00\r\n2022-04-28 10:57:25.000 D/EventLogger: renderedFirstFrame [eventTime=25.38, mediaPos=0.00, window=1, period=1, Surface(name=null)/@0x745af8f]\r\n2022-04-28 10:57:25.016 D/EventLogger: positionDiscontinuity [eventTime=25.40, mediaPos=0.02, window=1, period=1, reason=AUTO_TRANSITION, PositionInfo:old [mediaItem=0, period=0, pos=25000], PositionInfo:new [mediaItem=1, period=1, pos=0]]\r\n// media item transition: eventTime=25.40, window=1, period=1, mediaPos=0.01\r\n2022-04-28 10:57:25.018 D/EventLogger: mediaItem [eventTime=25.40, mediaPos=0.02, window=1, period=1, reason=AUTO]\r\n```\r\n\r\nAccording to this log the media item transition event actually happens 2 milliseconds after the `firstFrameRendered` event and is reported by logcat 18 milliseconds after it. The first eventTime is when the event is happening in ExoPlayer. The second timestamp is produced by logcat at the moment the log line is output.\r\n\r\n> I receive the onMediaItemTransition event at the same time as the onRenderedFirstFrame event.\r\n\r\nWell, I think you don't mean 'at the same time' in that very sense on a single thread. So there is a bit of a delay between receiving two events that you need to accept. Actually happening are the events at `eventTime` which is 2ms as reported above.\r\n\r\n>  log timestamps for onRenderedFirstFrame and onMediaItemTransition\r\n\r\nCan you clarify when these timestamps are generated when you measure? Is this a timestamp you take at the moment when you receive the `onFirstFrameRendered` event or is it the logcat timestamp?\r\n\r\n> Add several videos to a ConcatenatingMediaSource to make a play list\r\n\r\nIf you use the top-level playlist API instead of the `ConcatenatingMediaSource` and then measure again, do you get the same results or do you see improved latency? If you measure again I'd use a real device for this as opposed to an emulator.\r\n\r\n"
      },
      {
        "user": "marcbaechinger",
        "created_at": "2022-04-28T11:33:33Z",
        "body": "> I receive the onMediaItemTransition event at the same time as the onRenderedFirstFrame event.\r\n\r\nI just came to my mind that if you are using the `onEvents(Player, Events)` callback instead of two different callbacks, then you are virtually receiving these events at the same time."
      },
      {
        "user": "ScottPierce",
        "created_at": "2022-05-02T02:30:41Z",
        "body": "On my emulator I'm seeing these events pretty far apart, and this is even worse on low end AndroidTV / FireTV devices.\r\n\r\nYou are testing this on a `Pixel 6 Pro` it looks like? Maybe it's just running faster?"
      },
      {
        "user": "ScottPierce",
        "created_at": "2022-05-02T02:35:50Z",
        "body": "I was using an older version of Exoplayer, and I noticed that `onEvents(Player, Events)` was coming at the same time as the `onMediaItemTransition` on the older version. When I updated to the latest version, I found that there was an event being thrown at roughly the same time as `onRenderedFirstFrame`.\r\n\r\nCurrently we're working around this by using `onRenderedFirstFrame`, and fixing the View overlays there so its not noticeable."
      },
      {
        "user": "marcbaechinger",
        "created_at": "2022-05-04T15:15:08Z",
        "body": "Thanks for letting me know. Closing this issue. Please reopen if you think this is required."
      },
      {
        "user": "ScottPierce",
        "created_at": "2022-05-04T19:15:59Z",
        "body": "@marcbaechinger Its not letting me reopen the issue.\r\n\r\nIs there a technical reason that `onMediaItemTransition` doesn't come at the same time as `onRenderedFirstFrame`?\r\n\r\nI had the work around in place before I filed this ticket. I filed the ticket so that hopefully this would be fixed and I don't need to continue doing hacky things in my code to work around this."
      }
    ]
  },
  {
    "number": 10220,
    "title": "Adding ADTS header to AAC audio",
    "created_at": "2022-04-25T15:53:46Z",
    "closed_at": "2022-06-09T12:46:23Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10220",
    "body": "We are trying to fix an issue where our AV receiver isn't correctly displaying the surround sound information when receiving AAC audio.\r\nWe have seen a fix on a branched version ExoPlayer 1.5.X for the issue which involved adding an ADTS header to the sample.\r\n\r\nThere have been a significant number of changes to ExoPlayer since this.\r\nWe've been able to write the 7 byte header and so far have tried putting the header into `handleBuffer` method, for some reason in our example the original buffer size is 12288 bytes, if we try adding 7 bytes to the start of the the `audioTrack` `write` method only allows us to write the 12288 bytes and not the 12295 that we require.\r\n\r\nAre there some limits or other parts of the ExoPlayer audio pipeline that we're missing here?\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10220/comments",
    "author": "ProtoScott",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2022-05-12T11:01:31Z",
        "body": "> We've been able to write the 7 byte header and so far have tried putting the header into handleBuffer method, for some reason in our example the original buffer size is 12288 bytes, if we try adding 7 bytes to the start of the the audioTrack write method only allows us to write the 12288 bytes and not the 12295 that we require.\r\n\r\nIt's not 100% clear where you are trying to add this and what it means that the AudioTrack is not allowing this, but I suspect it has something to do with preallocated buffer sizes and how many bytes can be written without blocking. Writing to the AudioTrack is an iterative process and there is not  a fixed size you can write in one go.\r\n\r\nIf you want to modify the audio buffers with ExoPlayer `DefaultAudioSink`, it's usually best to write an `AudioProcessor` and inject it via overriding `DefaultRenderersFactory.buildAudioSink` where you can set it in `DefaultAudioSink.Builder.setAudioProcessors`. Please have a look at existing implementations to see how they work. \r\n\r\nA slightly more general question is: why do you need to add this header at all at this point in the media pipeline? Is this maybe something you should fix in the source media instead?"
      },
      {
        "user": "tonihei",
        "created_at": "2022-06-09T12:46:23Z",
        "body": "Closing due to inactivity and because the original question can be addressed by the proposal above."
      }
    ]
  },
  {
    "number": 10195,
    "title": "Latency Optimization - video play back start up time",
    "created_at": "2022-04-18T11:03:37Z",
    "closed_at": "2024-02-06T10:44:10Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10195",
    "body": "**Question**\r\n\r\nWe are using react-native-video for video playback which on Android uses Exoplayer. We determine video playback start up time (Play To First Frame) by capturing the moment when user clicks on play button and the moment when we receive onReadyForDisplay event from native player. To better understand where most of the time spent we further break it up as player initialization time (user click to video load start event), Video Load duration (video load start event to video load event) and player ready duration (video load event to onReadyForDisplay). As part of latency optimization we are now passing buffer config with 'bufferForPlaybackMs' as 1500ms so that play back starts earlier. Our hypothesis was buffer config optimization would reduce video load duration and the overall start up time will be reduced. But what we see is though over all start up time has reduced but video load time has regressed. We are unable to understand this behavior. Could you please help me understand why is video load duration regressing and even after this regression how are we seeing over all start up time gain?\r\n\r\n\r\n**Exoplayer Library version**: 2.11.4\r\n\r\n**Environment info**\r\n\r\nReact Native Environment Info:\r\nSystem:\r\nOS: macOS 11.6.2\r\nCPU: (12) x64 Intel(R) Core(TM) i7-9750H CPU @ 2.60GHz\r\nMemory: 106.40 MB / 16.00 GB\r\nShell: 3.2.57 - /bin/bash\r\nBinaries:\r\nNode: 12.22.7 - ~/.nvm/versions/node/v12.22.7/bin/node\r\nnpm: 6.14.15 - ~/.nvm/versions/node/v12.22.7/bin/npm\r\nSDKs:\r\niOS SDK:\r\nPlatforms: iOS 13.6, DriverKit 19.0, macOS 10.15, tvOS 13.4, watchOS 6.2\r\nAndroid SDK:\r\nAPI Levels: 29, 30, 31\r\nBuild Tools: 29.0.3, 30.0.2, 31.0.0, 32.0.0\r\nSystem Images: android-28 | Google APIs Intel x86 Atom, android-28 | Google Play Intel x86 Atom, android-30 | Google APIs Intel x86 Atom\r\nIDEs:\r\nAndroid Studio: 2020.3 AI-203.7717.56.2031.7784292\r\nXcode: 11.6/11E708 - /usr/bin/xcodebuild\r\nnpmPackages:\r\nreact: 16.8.3 => 16.8.3\r\nreact-native: 0.59.8 => 0.59.8\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10195/comments",
    "author": "skusuj",
    "comments": [
      {
        "user": "skusuj",
        "created_at": "2022-05-07T14:16:01Z",
        "body": "Hi christosts,\r\n\r\nCould you please help me with this query. Does video load duration metric provide latency information about the time spent to buffer data to start playback? If so then why in our experiment we see regressed video load duration while play to first frame has improved. Adding debug points didnt help much since there are multiple threads involved.\r\n\r\nthanks"
      },
      {
        "user": "tonihei",
        "created_at": "2024-02-06T10:44:10Z",
        "body": "This issue is bit old by now and may no longer be relevant. Sorry for not providing a reply sooner! \r\n\r\nI think we are also unlikely to solve your problem fully because you are asking to debug and optimize your app directly, which is beyond what we can do in this issue tracker. We are happy to understand common problems though and we also know that it may beneficial to lower `bufferForPlaybackMs` for the overall start time (in fact, we are considering to change our default in the future). As video and audio are competing for the same resources, the earlier start signal may contribute to the increased video load time you measured, but this is only a wild guess. "
      }
    ]
  },
  {
    "number": 10179,
    "title": "how to add com.google.android.exoplayer:extension-ima:2.17.1 implementation if project already has jetified-interactivemedia-3.26.0",
    "created_at": "2022-04-12T19:03:34Z",
    "closed_at": "2022-04-13T20:50:59Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10179",
    "body": "I have an app that is already using ExoPlayer 2.17.1. I tried to add the corresponding implementation (implementation 'com.google.android.exoplayer:extension-ima:2.17.1') so I can add ads to my video app. My application will not build now. Error is below. I've tried Navigate > Class and found a bunch of abstract class references to com.google.ads.interactivemedia.v3.api. Does anyone know a workaround or how I can build my app with both of these dependencies being used?\r\n\r\n```\r\nDuplicate class com.google.ads.interactivemedia.v3.api.Ad found in modules jetified-interactivemedia-3.26.0 (com.google.ads.interactivemedia.v3:interactivemedia:3.26.0) and jetified-sdk (sdk.jar)\r\nDuplicate class com.google.ads.interactivemedia.v3.api.AdDisplayContainer found in modules jetified-interactivemedia-3.26.0 (com.google.ads.interactivemedia.v3:interactivemedia:3.26.0) and jetified-sdk (sdk.jar)\r\nDuplicate class com.google.ads.interactivemedia.v3.api.AdError found in modules jetified-interactivemedia-3.26.0 (com.google.ads.interactivemedia.v3:interactivemedia:3.26.0) and jetified-sdk (sdk.jar)\r\nDuplicate class com.google.ads.interactivemedia.v3.api.AdError$AdErrorCode found in modules jetified-interactivemedia-3.26.0 (com.google.ads.interactivemedia.v3:interactivemedia:3.26.0) and jetified-sdk (sdk.jar)\r\nDuplicate class com.google.ads.interactivemedia.v3.api.AdError$AdErrorType found in modules jetified-interactivemedia-3.26.0 (com.google.ads.interactivemedia.v3:interactivemedia:3.26.0) and jetified-sdk (sdk.jar)\r\nDuplicate class com.google.ads.interactivemedia.v3.api.AdErrorEvent found in modules jetified-interactivemedia-3.26.0 (com.google.ads.interactivemedia.v3:interactivemedia:3.26.0) and jetified-sdk (sdk.jar)\r\nDuplicate class com.google.ads.interactivemedia.v3.api.AdErrorEvent$AdErrorListener found in modules jetified-interactivemedia-3.26.0 (com.google.ads.interactivemedia.v3:interactivemedia:3.26.0) and jetified-sdk (sdk.jar)\r\nDuplicate class com.google.ads.interactivemedia.v3.api.AdEvent found in modules jetified-interactivemedia-3.26.0 (com.google.ads.interactivemedia.v3:interactivemedia:3.26.0) and jetified-sdk (sdk.jar)\r\nDuplicate class com.google.ads.interactivemedia.v3.api.AdEvent$AdEventListener found in modules jetified-interactivemedia-3.26.0 (com.google.ads.interactivemedia.v3:interactivemedia:3.26.0) and jetified-sdk (sdk.jar)\r\nDuplicate class com.google.ads.interactivemedia.v3.api.AdEvent$AdEventType found in modules jetified-interactivemedia-3.26.0 (com.google.ads.interactivemedia.v3:interactivemedia:3.26.0) and jetified-sdk (sdk.jar)\r\nDuplicate class com.google.ads.interactivemedia.v3.api.AdPodInfo found in modules jetified-interactivemedia-3.26.0 (com.google.ads.interactivemedia.v3:interactivemedia:3.26.0) and jetified-sdk (sdk.jar)\r\nDuplicate class com.google.ads.interactivemedia.v3.api.AdsLoader found in modules jetified-interactivemedia-3.26.0 (com.google.ads.interactivemedia.v3:interactivemedia:3.26.0) and jetified-sdk (sdk.jar)\r\nDuplicate class com.google.ads.interactivemedia.v3.api.AdsLoader$AdsLoadedListener found in modules jetified-interactivemedia-3.26.0 (com.google.ads.interactivemedia.v3:interactivemedia:3.26.0) and jetified-sdk (sdk.jar)\r\nDuplicate class com.google.ads.interactivemedia.v3.api.AdsManager found in modules jetified-interactivemedia-3.26.0 (com.google.ads.interactivemedia.v3:interactivemedia:3.26.0) and jetified-sdk (sdk.jar)\r\nDuplicate class com.google.ads.interactivemedia.v3.api.AdsManagerLoadedEvent found in modules jetified-interactivemedia-3.26.0 (com.google.ads.interactivemedia.v3:interactivemedia:3.26.0) and jetified-sdk (sdk.jar)\r\nDuplicate class com.google.ads.interactivemedia.v3.api.AdsRenderingSettings found in modules jetified-interactivemedia-3.26.0 (com.google.ads.interactivemedia.v3:interactivemedia:3.26.0) and jetified-sdk (sdk.jar)\r\nDuplicate class com.google.ads.interactivemedia.v3.api.AdsRequest found in modules jetified-interactivemedia-3.26.0 (com.google.ads.interactivemedia.v3:interactivemedia:3.26.0) and jetified-sdk (sdk.jar)\r\nDuplicate class com.google.ads.interactivemedia.v3.api.CompanionAdSlot found in modules jetified-interactivemedia-3.26.0 (com.google.ads.interactivemedia.v3:interactivemedia:3.26.0) and jetified-sdk (sdk.jar)\r\nDuplicate class com.google.ads.interactivemedia.v3.api.ImaSdkFactory found in modules jetified-interactivemedia-3.26.0 (com.google.ads.interactivemedia.v3:interactivemedia:3.26.0) and jetified-sdk (sdk.jar)\r\nDuplicate class com.google.ads.interactivemedia.v3.api.ImaSdkSettings found in modules jetified-interactivemedia-3.26.0 (com.google.ads.interactivemedia.v3:interactivemedia:3.26.0) and jetified-sdk (sdk.jar)\r\nDuplicate class com.google.ads.interactivemedia.v3.api.UiElement found in modules jetified-interactivemedia-3.26.0 (com.google.ads.interactivemedia.v3:interactivemedia:3.26.0) and jetified-sdk (sdk.jar)\r\nDuplicate class com.google.ads.interactivemedia.v3.api.player.AdProgressProvider found in modules jetified-interactivemedia-3.26.0 (com.google.ads.interactivemedia.v3:interactivemedia:3.26.0) and jetified-sdk (sdk.jar)\r\nDuplicate class com.google.ads.interactivemedia.v3.api.player.ContentProgressProvider found in modules jetified-interactivemedia-3.26.0 (com.google.ads.interactivemedia.v3:interactivemedia:3.26.0) and jetified-sdk (sdk.jar)\r\nDuplicate class com.google.ads.interactivemedia.v3.api.player.VideoAdPlayer found in modules jetified-interactivemedia-3.26.0 (com.google.ads.interactivemedia.v3:interactivemedia:3.26.0) and jetified-sdk (sdk.jar)\r\nDuplicate class com.google.ads.interactivemedia.v3.api.player.VideoAdPlayer$VideoAdPlayerCallback found in modules jetified-interactivemedia-3.26.0 (com.google.ads.interactivemedia.v3:interactivemedia:3.26.0) and jetified-sdk (sdk.jar)\r\nDuplicate class com.google.ads.interactivemedia.v3.api.player.VideoProgressUpdate found in modules jetified-interactivemedia-3.26.0 (com.google.ads.interactivemedia.v3:interactivemedia:3.26.0) and jetified-sdk (sdk.jar)\r\nDuplicate class com.google.ads.interactivemedia.v3.impl.data.TestingConfiguration found in modules jetified-interactivemedia-3.26.0 (com.google.ads.interactivemedia.v3:interactivemedia:3.26.0) and jetified-sdk (sdk.jar)\r\nDuplicate class com.google.ads.interactivemedia.v3.impl.data.a found in modules jetified-interactivemedia-3.26.0 (com.google.ads.interactivemedia.v3:interactivemedia:3.26.0) and jetified-sdk (sdk.jar)\r\nDuplicate class com.google.ads.interactivemedia.v3.impl.data.b found in modules jetified-interactivemedia-3.26.0 (com.google.ads.interactivemedia.v3:interactivemedia:3.26.0) and jetified-sdk (sdk.jar)\r\nDuplicate class com.google.ads.interactivemedia.v3.impl.data.c found in modules jetified-interactivemedia-3.26.0 (com.google.ads.interactivemedia.v3:interactivemedia:3.26.0) and jetified-sdk (sdk.jar)\r\nDuplicate class com.google.ads.interactivemedia.v3.impl.data.d found in modules jetified-interactivemedia-3.26.0 (com.google.ads.interactivemedia.v3:interactivemedia:3.26.0) and jetified-sdk (sdk.jar)\r\nDuplicate class com.google.ads.interactivemedia.v3.impl.data.e found in modules jetified-interactivemedia-3.26.0 (com.google.ads.interactivemedia.v3:interactivemedia:3.26.0) and jetified-sdk (sdk.jar)\r\nDuplicate class com.google.ads.interactivemedia.v3.impl.data.f found in modules jetified-interactivemedia-3.26.0 (com.google.ads.interactivemedia.v3:interactivemedia:3.26.0) and jetified-sdk (sdk.jar)\r\nDuplicate class com.google.ads.interactivemedia.v3.impl.data.g found in modules jetified-interactivemedia-3.26.0 (com.google.ads.interactivemedia.v3:interactivemedia:3.26.0) and jetified-sdk (sdk.jar)\r\nDuplicate class com.google.ads.interactivemedia.v3.impl.data.h found in modules jetified-interactivemedia-3.26.0 (com.google.ads.interactivemedia.v3:interactivemedia:3.26.0) and jetified-sdk (sdk.jar)\r\nDuplicate class com.google.ads.interactivemedia.v3.impl.data.i found in modules jetified-interactivemedia-3.26.0 (com.google.ads.interactivemedia.v3:interactivemedia:3.26.0) and jetified-sdk (sdk.jar)\r\nDuplicate class com.google.ads.interactivemedia.v3.impl.data.j found in modules jetified-interactivemedia-3.26.0 (com.google.ads.interactivemedia.v3:interactivemedia:3.26.0) and jetified-sdk (sdk.jar)\r\nDuplicate class com.google.ads.interactivemedia.v3.impl.data.k found in modules jetified-interactivemedia-3.26.0 (com.google.ads.interactivemedia.v3:interactivemedia:3.26.0) and jetified-sdk (sdk.jar)\r\nDuplicate class com.google.ads.interactivemedia.v3.impl.data.l found in modules jetified-interactivemedia-3.26.0 (com.google.ads.interactivemedia.v3:interactivemedia:3.26.0) and jetified-sdk (sdk.jar)\r\n```",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10179/comments",
    "author": "IamYou2",
    "comments": [
      {
        "user": "okycelt",
        "created_at": "2022-05-18T07:41:24Z",
        "body": "@IamYou2, how did you manage to resolve this?"
      }
    ]
  },
  {
    "number": 10164,
    "title": "StylePlayerView is not working",
    "created_at": "2022-04-07T19:52:06Z",
    "closed_at": "2022-05-18T01:04:35Z",
    "labels": [
      "question",
      "closed-by-bot"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10164",
    "body": "### ExoPlayer Version\n\n2.17.0\n\n### Devices that reproduce the issue\n\nPixel 2 running Android 11\n\n### Devices that do not reproduce the issue\n\n_No response_\n\n### Reproducible in the demo app?\n\nNot tested\n\n### Reproduction steps\n\nPlayerView is deprecated so I replaced with StylePlayerView\r\nThis was working with PlayerView but just show empty with StyleView\n\n### Expected result\n\nvideo should play\n\n### Actual result\n\nshow empty\n\n### Media\n\nmp4\n\n### Bug Report\n\n- [ ] You will email the zip file produced by `adb bugreport` to dev.exoplayer@gmail.com after filing this issue.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10164/comments",
    "author": "pmrzygweb",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2022-04-19T21:56:52Z",
        "body": "The reproduction steps provided are not sufficient for us to actually reproduce the issue. `StyledPlayerView` works fine in our own demo app, so just using `StyledPlayerView` is not by itself sufficient to reproduce the problem. Please provide concrete reproduction steps if you'd like us to look at this."
      },
      {
        "user": "google-oss-bot",
        "created_at": "2022-05-09T01:04:14Z",
        "body": "<!-- event: mark-stale -->\nHey @pmrzygweb. We need more information to resolve this issue but there hasn't been an update in 14 weekdays. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2022-05-18T01:04:34Z",
        "body": "<!-- event: close-stale -->\nSince there haven't been any recent updates here, I am going to close this issue.\n\n@pmrzygweb if you're still experiencing this problem and want to continue the discussion just leave a comment here and we are happy to re-open this."
      }
    ]
  },
  {
    "number": 10157,
    "title": "How to separate the video downloading from the player's control logic",
    "created_at": "2022-04-06T21:59:27Z",
    "closed_at": "2022-04-19T22:21:42Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10157",
    "body": "Hi all, I want to do some customization on the data downloading part when do the MPEG-DASH based video streaming. I know customizing the data source can be an option. However, as the load control and track seletion part is deeply bonded in the player's logic, and it is hard to do the customization in all these layers at the same time. So I am wondering whether I can separate the download logic from the player, for example, directly customizing the download method and download the things in the cache, and then let ExoPlayer directly read data from the cache to do the display. I wonder whether there's some instructions to implement the functions like this in DASH video streaming? I know the download helper can download and then display the adaptive video stream. However, can the downloading and displaying happen at the same time, for example, after a chunk has been downloaded then, the downloader will download the next chunk, while player can go on displaying it?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10157/comments",
    "author": "jsw-zorro",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2022-04-19T22:21:42Z",
        "body": "It's not entirely clear what you're trying to do. If you only need to customize the component that actually downloads the data, then customizing the `DataSource` would be sufficient. However, you also write about the need to simultaneously customize load control and track selection components, at which point it becomes unclear what you're trying to do and what your definition of \"download logic\" encompasses.\r\n\r\nIf you do need to customize all of the components you mention to do what you're interested in doing, then I don't think there's a good alternative to doing that given ExoPlayer's architecture. It should also be noted that it's fundamentally difficult to separate out the logic that these components encapsulate from the rest of the player, because properties like the current playback position and speed, and actions like when the user performs a seek, would typically be inputs to a component that would decide what to load next (and when to load it)."
      }
    ]
  },
  {
    "number": 10151,
    "title": "Failed to resolve: com.google.android.exoplayer:exoplayer:2.12.2",
    "created_at": "2022-04-04T08:39:20Z",
    "closed_at": "2022-04-06T22:13:38Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10151",
    "body": "I added version 2.12.2 in a newly created project and I get the following error\r\n\r\n```\r\nFailed to resolve: com.google.android.exoplayer:exoplayer:2.12.2\r\nAdd Google Maven repository and sync project\r\nShow in Project Structure dialog\r\nAffected Modules: app\r\n```\r\n\r\n\r\nThis is my top level build gradle\r\n\r\n```\r\nplugins {\r\n    id 'com.android.application' version '7.1.2' apply false\r\n    id 'com.android.library' version '7.1.2' apply false\r\n    id 'org.jetbrains.kotlin.android' version '1.6.10' apply false\r\n}\r\n\r\ntask clean(type: Delete) {\r\n    delete rootProject.buildDir\r\n}\r\n```\r\n\r\nGradle version 7.2\r\n\r\nsettings.gradle file\r\n```\r\npluginManagement {\r\n    repositories {\r\n        gradlePluginPortal()\r\n        google()\r\n        mavenCentral()\r\n    }\r\n}\r\ndependencyResolutionManagement {\r\n    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)\r\n    repositories {\r\n        google()\r\n        mavenCentral()\r\n    }\r\n}\r\nrootProject.name = \"My Application\"\r\ninclude ':app'\r\n```\r\n\r\nThis si the app level gradle\r\n\r\n```\r\nplugins {\r\n    id 'com.android.application'\r\n    id 'org.jetbrains.kotlin.android'\r\n}\r\n\r\nandroid {\r\n    compileSdk 32\r\n\r\n    defaultConfig {\r\n        applicationId \"com.ext.line\"\r\n        minSdk 23\r\n        targetSdk 32\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n    kotlinOptions {\r\n        jvmTarget = '1.8'\r\n    }\r\n    buildFeatures {\r\n        viewBinding true\r\n    }\r\n}\r\n\r\ndependencies {\r\n    implementation 'androidx.core:core-ktx:1.7.0'\r\n    implementation 'androidx.appcompat:appcompat:1.4.1'\r\n    implementation 'com.google.android.material:material:1.5.0'\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'\r\n    implementation \"com.google.android.exoplayer:exoplayer:2.12.2\"\r\n}\r\n```",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10151/comments",
    "author": "wishygupta",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2022-04-06T22:13:38Z",
        "body": "The first version of ExoPlayer available from `google()` was 2.13.3. To use earlier versions you need to add the `jcenter()` repository to your `settings.gradle` file."
      }
    ]
  },
  {
    "number": 10128,
    "title": "Ffmpeg extension quesion",
    "created_at": "2022-03-30T05:25:24Z",
    "closed_at": "2022-03-30T14:19:17Z",
    "labels": [
      "question",
      "needs triage"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10128",
    "body": "I'm able to build the ffmpeg extension and use it in the demo app and my own app. But I want to just have the armeabi-v7a and arm64-v8a libraries generated only to reduce the apk size. When I build the demo project, it seems  x86 and x64_64 libraries needs to be in  the ANDROID-LIBS folder. I build the ffmpeg extension in  the Linux machine and  copy the ffmpeg directory to Windows 10  where Android Studio is resided. What needs to be done to achieve this? Thanks.\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10128/comments",
    "author": "tpuserhp",
    "comments": [
      {
        "user": "vovan888",
        "created_at": "2022-03-30T10:58:23Z",
        "body": "app/build.gradle:\r\n\r\n```\r\nandroid {\r\n        ndk {\r\n            abiFilters \"armeabi-v7a\", \"arm64-v8a\"\r\n        }\r\n}\r\n\r\n```"
      },
      {
        "user": "tpuserhp",
        "created_at": "2022-03-30T14:19:16Z",
        "body": "Yes, the suggested changes resulted in a smaller size of the apk  generated. Thank you very much  for your help. This issue can be closed now."
      }
    ]
  },
  {
    "number": 10111,
    "title": "Do you provide #EXT-X-I-FRAMES-ONLY thumbnail preview function in HLS stream?",
    "created_at": "2022-03-25T09:18:18Z",
    "closed_at": "2022-03-28T09:44:45Z",
    "labels": [
      "duplicate",
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10111",
    "body": "Hello ~\r\nI know HLS Play can provide preview thumbnails of The #EXT-X-I-FRAMES-ONLY playback.\r\nDoes exoPlayer currently support implementable functions for this tag?\r\nWhen I asked a question a few years ago, I said that it was not supported, so I am asking again.\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10111/comments",
    "author": "generlist",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2022-03-28T09:44:44Z",
        "body": "I think issue #8938 describes the current state.\r\n\r\nIf you have a stream with iframe only tracks then it is best to try out whether your stream is working. The referenced issue explains in more details how you can do this.\r\n\r\nI'm closing this issue as a duplicate."
      }
    ]
  },
  {
    "number": 10102,
    "title": "Video decoder is released when app is pushed to background",
    "created_at": "2022-03-22T17:08:40Z",
    "closed_at": "2024-02-06T10:39:43Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10102",
    "body": "Question\r\n=======\r\n\r\nWe are seeing one issue with exoplayer v2.1.4.1 where exoplayer is playing audio but with black video for few secs when the app is brought to foreground from background\r\n\r\nSteps\r\n===\r\n\r\n1. Start playing a video\r\n2. Push app to background. App calls exoplayer api to pause player. It does not release the player\r\n3. Bring app to foreground. App calls exoplayer api to play\r\n\r\nActual result: Player is playing only audio for ~2s before video frame is seen on the view. During this period, user sees black screen but can hear audio\r\n\r\nExpected result: Video frames should be seen along with audio as soon as user brings app to foreground\r\n\r\nLogs\r\n====\r\n\r\n```\r\n03-22 22:26:28.962 24993 24993 D EventLogger: isPlaying [eventTime=14.24, mediaPos=153.18, window=0, period=0, false]\r\n03-22 22:26:29.743 24993 24993 D EventLogger: surfaceSize [eventTime=15.02, mediaPos=153.18, window=0, period=0, 0, 0]\r\n03-22 22:26:30.563 24993 24993 D EventLogger: videoDecoderReleased [eventTime=15.84, mediaPos=153.18, window=0, period=0, OMX.MTK.VIDEO.DECODER.AVC.secure]\r\n03-22 22:26:43.616 24993 24993 D EventLogger: playWhenReady [eventTime=28.89, mediaPos=153.18, window=0, period=0, true, USER_REQUEST]\r\n03-22 22:26:43.625 24993 24993 D EventLogger: isPlaying [eventTime=28.90, mediaPos=153.18, window=0, period=0, true]\r\n03-22 22:26:43.828 24993 24993 D EventLogger: surfaceSize [eventTime=29.11, mediaPos=153.18, window=0, period=0, 1080, 613]\r\n03-22 22:26:45.346 24993 24993 D EventLogger: videoDecoderInitialized [eventTime=29.29, mediaPos=153.47, window=0, period=0, OMX.MTK.VIDEO.DECODER.AVC.secure]\r\n03-22 22:26:52.837 24993 24993 E EventLogger: audioTrackUnderrun [eventTime=38.12, mediaPos=162.57, window=0, period=0, 48000, 250, 360]\r\n03-22 22:26:54.940 24993 24993 D EventLogger: videoSize [eventTime=40.22, mediaPos=164.54, window=0, period=0, 320, 180]\r\n03-22 22:26:54.953 24993 24993 D EventLogger: renderedFirstFrame [eventTime=40.22, mediaPos=164.54, window=0, period=0, Surface(name=null)/@0x6d2285c]\r\n```\r\n\r\n\r\nWe see that the video decoder is released when app is pushed to background and then initialised again when it is brought to foreground which is causing a delay in rendering the first video frame. The audio decoder is not released in this flow\r\n\r\n**Is there anyway we can avoid releasing the video decoder?**\r\n\r\nWe know its not a recommended practise to keep the player alive when app is pushed to background, but here we have some constraints, hence asking the question.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10102/comments",
    "author": "krackjack234",
    "comments": [
      {
        "user": "krackjack234",
        "created_at": "2022-03-29T07:26:41Z",
        "body": "hi @christosts  any update on this?"
      },
      {
        "user": "tonihei",
        "created_at": "2024-02-06T10:39:43Z",
        "body": "> Push app to background. App calls exoplayer api to pause player. It does not release the player\r\n\r\nThe player has to be released when the app goes into background, or playback needs to be run in a foreground service instead. Otherwise the system is free to reclaim resources as it happened here. "
      }
    ]
  },
  {
    "number": 10090,
    "title": "Cache cannot be read in first app process for some older devices (Android 9-10) ",
    "created_at": "2022-03-18T10:29:17Z",
    "closed_at": "2022-04-19T01:04:39Z",
    "labels": [
      "question",
      "closed-by-bot"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10090",
    "body": "Hi\r\n\r\nThis is a bug that I believe should be reproducible given the setup information below.\r\n\r\nSo, the issue is that in the FIRST app process, when using ExoPlayer and a DownloadManager, there is a strange cache-read bug on some older devices. One of those devices is a Samsung S9, running Android 9. But also an older Nokia Android phone running Android 10 has the exact same bug.\r\n\r\nThe issue is in detail that you can download an HLS stream through the download manager, and it writes fine to cache. But if you try to construct a media item from a fully downloaded item like this, the playback fails:\r\n\r\n`val mediaItem = downloadedItem.request.toMediaItem()`\r\n\r\n**Given you are in the first app process on the mentioned older devices, exoplayer will throw an error if trying to play this item**. It is using the HlsMediaSource.Factory called DOWNLOADS_NAME_FORCE_CACHE from the configuration code below (in Koin).\r\n\r\nThe error is:\r\n\r\n```\r\ncom.google.android.exoplayer2.ExoPlaybackException: Source error\r\n2022-03-18 11:22:59.246 17006-17286/xMUSIC:     at com.google.android.exoplayer2.ExoPlayerImplInternal.handleIoException(ExoPlayerImplInternal.java:628)\r\n2022-03-18 11:22:59.246 17006-17286/xMUSIC:     at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:604)\r\n2022-03-18 11:22:59.246 17006-17286/xMUSIC:     at android.os.Handler.dispatchMessage(Handler.java:102)\r\n2022-03-18 11:22:59.246 17006-17286/xMUSIC:     at android.os.Looper.loop(Looper.java:214)\r\n2022-03-18 11:22:59.246 17006-17286/xMUSIC:     at android.os.HandlerThread.run(HandlerThread.java:65)\r\n2022-03-18 11:22:59.246 17006-17286/xMUSIC: Caused by: java.io.IOException: DummyDataSource cannot be opened\r\n2022-03-18 11:22:59.246 17006-17286/xMUSIC:     at com.google.android.exoplayer2.upstream.DummyDataSource.open(DummyDataSource.java:39)\r\n2022-03-18 11:22:59.246 17006-17286/xMUSIC:     at com.google.android.exoplayer2.upstream.cache.CacheDataSource.openNextSource(CacheDataSource.java:776)\r\n2022-03-18 11:22:59.246 17006-17286/xMUSIC:     at com.google.android.exoplayer2.upstream.cache.CacheDataSource.open(CacheDataSource.java:589)\r\n2022-03-18 11:22:59.246 17006-17286/xMUSIC:     at com.google.android.exoplayer2.upstream.StatsDataSource.open(StatsDataSource.java:84)\r\n2022-03-18 11:22:59.246 17006-17286/xMUSIC:     at com.google.android.exoplayer2.upstream.DataSourceInputStream.checkOpened(DataSourceInputStream.java:99)\r\n2022-03-18 11:22:59.247 17006-17286/xMUSIC:     at com.google.android.exoplayer2.upstream.DataSourceInputStream.open(DataSourceInputStream.java:62)\r\n2022-03-18 11:22:59.247 17006-17286/xMUSIC:     at com.google.android.exoplayer2.upstream.ParsingLoadable.load(ParsingLoadable.java:174)\r\n2022-03-18 11:22:59.247 17006-17286/xMUSIC:     at com.google.android.exoplayer2.upstream.Loader$LoadTask.run(Loader.java:409)\r\n2022-03-18 11:22:59.247 17006-17286/xMUSIC:     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)\r\n2022-03-18 11:22:59.247 17006-17286/xMUSIC:     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)\r\n2022-03-18 11:22:59.247 17006-17286/xMUSIC:     at java.lang.Thread.run(Thread.java:764)\r\n```\r\n\r\nSo, just to repeat, if you RESTART THE APP PROCESS, then this cache issue goes away. Then everything written to cache is also read fine back. However, everything written to the cache within the first app process is still corrupt.\r\n\r\nBelow is the Koin setup of the different components. Thank you for the ExoPlayer library everyone, it is truly amazing overall.\r\n\r\n```\r\n    const val DOWNLOADS_NAME_CACHE_POOL = \"cache_pool\"\r\n    const val DOWNLOADS_NAME_FORCE_CACHE = \"force_cache\"\r\n\r\n    val module = module {\r\n\r\n        single<DatabaseProvider>(named(DOWNLOADS_NAME_CACHE_POOL)) {\r\n            MediaStorageDatabaseProvider(get(), \"cache_index_storage\")\r\n        }\r\n        \r\n        single<Cache>(named(DOWNLOADS_NAME_CACHE_POOL)) {\r\n            val context: Context = get()\r\n            val directory = context.cacheDir\r\n            val downloadContentDirectory = File(\r\n                directory,\r\n                \"media-cache\"\r\n            )\r\n            SimpleCache(\r\n                downloadContentDirectory,\r\n                LeastRecentlyUsedCacheEvictor(downloadContentDirectory.totalSpace),\r\n                get<DatabaseProvider>(named(DOWNLOADS_NAME_CACHE_POOL))\r\n            )\r\n        }\r\n\r\n        single<DataSource.Factory>(named(DOWNLOADS_NAME_CACHE_POOL)) {\r\n            CacheDataSource.Factory()\r\n                .setCache(get(named(DOWNLOADS_NAME_CACHE_POOL)))\r\n                .setUpstreamDataSourceFactory(\r\n                    DefaultHttpDataSource.Factory()\r\n                )\r\n        }\r\n\r\n        single<HlsMediaSource.Factory>(named(DOWNLOADS_NAME_CACHE_POOL)) {\r\n            val dataSourceFactory: DataSource.Factory = get(named(DOWNLOADS_NAME_CACHE_POOL))\r\n            HlsMediaSource.Factory(\r\n                dataSourceFactory,\r\n            ).setAllowChunklessPreparation(true)\r\n        }\r\n\r\n        single<HlsMediaSource.Factory>(named(DOWNLOADS_NAME_FORCE_CACHE)) {\r\n            val dataSourceFactory: DataSource.Factory = CacheDataSource.Factory()\r\n                .setCache(get(named(DOWNLOADS_NAME_CACHE_POOL)))\r\n                .setCacheWriteDataSinkFactory(null)\r\n\r\n            HlsMediaSource.Factory(\r\n                dataSourceFactory,\r\n            ).setAllowChunklessPreparation(true)\r\n        }\r\n        \r\n}\r\n```\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10090/comments",
    "author": "OneManMobile",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2022-03-18T16:25:42Z",
        "body": "My first guess would be that there's some component you should have a single instance of, where you actually have more than one instance. That's what most often causes this type of issue. I'm not really sure what the code above does, since I've never used Koin.\r\n\r\nIf I were you I'd (a) explore this possibility, and (b) see if the issue reproduces using our demo app running on the same device. If it does then you'll be able to provide more actionable reproduction steps for us. If it doesn't then that would point toward an issue in your code."
      },
      {
        "user": "OneManMobile",
        "created_at": "2022-03-21T08:30:29Z",
        "body": "Koin is a Service Locator Framework (light version dependency injection), and the \"single<X>\" means that it only creates one instance. I have not been able to log any double initialization of any of these components. They are all singletons.\r\n\r\nAlternatively, I could have initialized it all in-order in a \"Helper\" class for the same result.\r\n\r\nThe reason I don't suspect the duplication of components is that the error does not occur on newer devices, only older ones. Newer devices can always read and write to cache on the first process it is only some older ones where any first-process cache writes are corrupted."
      },
      {
        "user": "ojw28",
        "created_at": "2022-03-22T10:24:57Z",
        "body": "Have you tried our demo app, and does the issue reproduce there?"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2022-04-11T01:04:23Z",
        "body": "<!-- event: mark-stale -->\nHey @OneManMobile. We need more information to resolve this issue but there hasn't been an update in 14 weekdays. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2022-04-19T01:04:39Z",
        "body": "<!-- event: close-stale -->\nSince there haven't been any recent updates here, I am going to close this issue.\n\n@OneManMobile if you're still experiencing this problem and want to continue the discussion just leave a comment here and we are happy to re-open this."
      }
    ]
  },
  {
    "number": 10072,
    "title": "Is there a direct replacement for constructor DefaultHttpDataSourceFactory(userAgent, bandwidthMeter) from 2.12.1 in 2.16.1?",
    "created_at": "2022-03-14T21:45:35Z",
    "closed_at": "2022-03-15T16:46:16Z",
    "labels": [
      "question",
      "needs triage"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10072",
    "body": "Hi, I am migrating from library 2.12.1 to 2.16.1, and it seems that constructor for DefaultHttpDataSourceFactory has been replaced for another constructor with fewer params.\r\n\r\nMy old code was:\r\n\r\n protected open fun createDashMediaSource(): MediaSource {\r\n        val userAgent: String = VideoModule.getUserAgent()\r\n        val httpDataSourceFactory = DefaultHttpDataSourceFactory(userAgent, bandwidthMeter)\r\n        val dashMediaSourceFactory = DashMediaSource.Factory(DefaultDashChunkSource.Factory(httpDataSourceFactory), httpDataSourceFactory)\r\n        drmSessionManager?.let { dashMediaSourceFactory.setDrmSessionManager(it) }\r\n        return dashMediaSourceFactory.createMediaSource(MediaItem.fromUri(obtainVideoManifestUrl()))\r\n    }\r\n\r\n\r\nThe new constructor has no params and it has no function to setup the bandwidthMeter directly:\r\n\r\n protected open fun createDashMediaSource(): MediaSource {\r\n        val userAgent: String = VideoModule.getUserAgent()\r\n        val httpDataSourceFactory = DefaultHttpDataSource.Factory()   <------- New constructor according to ReleaseNotes\r\n        httpDataSourceFactory.setUserAgent(userAgent)       <----- setting user agent with new function\r\n        val dashMediaSourceFactory = DashMediaSource.Factory(DefaultDashChunkSource.Factory(httpDataSourceFactory), httpDataSourceFactory)\r\n        drmSessionManager?.let { dashMediaSourceFactory.setDrmSessionManager(it) }\r\n        return dashMediaSourceFactory.createMediaSource(MediaItem.fromUri(obtainVideoManifestUrl()))\r\n    }\r\n\r\n\r\nI am wondering if is there a direct replacement for the bandwidth meter in the constructor for the data source factory?\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10072/comments",
    "author": "alveru",
    "comments": [
      {
        "user": "alveru",
        "created_at": "2022-03-15T16:46:16Z",
        "body": "i found it, is setTransferListener(........) listener, i will close this ticket"
      },
      {
        "user": "arunk095",
        "created_at": "2022-04-05T06:48:36Z",
        "body": "@alveru can you post the how you have achieved using the function \"setTransferListener\" . It would be helpful. Thank you"
      }
    ]
  },
  {
    "number": 10067,
    "title": "RTSP crash caused by sprop-parameter-sets empty",
    "created_at": "2022-03-14T07:46:00Z",
    "closed_at": "2022-09-20T01:04:53Z",
    "labels": [
      "question",
      "closed-by-bot"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10067",
    "body": "It looks like a crash caused by \"sprop parameter sets\" being empty.\r\nIt can be played with VLC.\r\n\r\nversion: v2.17.1\r\n\r\nrtsp log:\r\n```\r\n    RTSP/1.0 200 OK\r\n    CSeq: 2\r\n    Content-Base: rtsp://admin:DSBJRX@192.168.0.115:554/h264/ch1/main/av_stream/\r\n    Content-Type: application/sdp\r\n    Content-Length: 525\r\n    \r\n    v=0\r\n    o=- 934117181649 934117181649 IN IP4 192.168.0.115\r\n    s=Media Presentation\r\n    e=NONE\r\n    b=AS:5050\r\n    t=0 0\r\n    a=control:rtsp://admin:DSBJRX@192.168.0.115:554/h264/ch1/main/av_stream/\r\n    m=video 0 RTP/AVP 96\r\n    b=AS:5000\r\n    a=control:rtsp://admin:DSBJRX@192.168.0.115:554/h264/ch1/main/av_stream/trackID=1\r\n    a=rtpmap:96 H264/90000\r\n    a=fmtp:96 profile-level-id=420029; packetization-mode=1; sprop-parameter-sets=\r\n    a=Media_header:MEDIAINFO=494D4B48010100000400010000000000000000000000000000000000000000000000000000000000;\r\n    a=appversion:1.0\r\n```\r\n\r\ncrash log:\r\n```\r\n2022-03-14 15:38:40.672 13643-14091/com.ixlab.mapbox.wemap E/DEBUG: java.lang.IllegalArgumentException\r\n2022-03-14 15:38:40.672 13643-14091/com.ixlab.mapbox.wemap E/DEBUG:     at com.google.android.exoplayer2.util.Assertions.checkArgument(Assertions.java:39)\r\n2022-03-14 15:38:40.673 13643-14091/com.ixlab.mapbox.wemap E/DEBUG:     at com.google.android.exoplayer2.source.rtsp.RtspMediaTrack.processH264FmtpAttribute(RtspMediaTrack.java:166)\r\n2022-03-14 15:38:40.673 13643-14091/com.ixlab.mapbox.wemap E/DEBUG:     at com.google.android.exoplayer2.source.rtsp.RtspMediaTrack.generatePayloadFormat(RtspMediaTrack.java:119)\r\n2022-03-14 15:38:40.673 13643-14091/com.ixlab.mapbox.wemap E/DEBUG:     at com.google.android.exoplayer2.source.rtsp.RtspMediaTrack.<init>(RtspMediaTrack.java:65)\r\n2022-03-14 15:38:40.674 13643-14091/com.ixlab.mapbox.wemap E/DEBUG:     at com.google.android.exoplayer2.source.rtsp.RtspClient.buildTrackList(RtspClient.java:347)\r\n2022-03-14 15:38:40.674 13643-14091/com.ixlab.mapbox.wemap E/DEBUG:     at com.google.android.exoplayer2.source.rtsp.RtspClient.access$1700(RtspClient.java:75)\r\n2022-03-14 15:38:40.674 13643-14091/com.ixlab.mapbox.wemap E/DEBUG:     at com.google.android.exoplayer2.source.rtsp.RtspClient$MessageListener.onDescribeResponseReceived(RtspClient.java:690)\r\n2022-03-14 15:38:40.674 13643-14091/com.ixlab.mapbox.wemap E/DEBUG:     at com.google.android.exoplayer2.source.rtsp.RtspClient$MessageListener.handleRtspResponse(RtspClient.java:598)\r\n2022-03-14 15:38:40.675 13643-14091/com.ixlab.mapbox.wemap E/DEBUG:     at com.google.android.exoplayer2.source.rtsp.RtspClient$MessageListener.handleRtspMessage(RtspClient.java:507)\r\n2022-03-14 15:38:40.675 13643-14091/com.ixlab.mapbox.wemap E/DEBUG:     at com.google.android.exoplayer2.source.rtsp.RtspClient$MessageListener.lambda$onRtspMessageReceived$0$RtspClient$MessageListener(RtspClient.java:500)\r\n2022-03-14 15:38:40.675 13643-14091/com.ixlab.mapbox.wemap E/DEBUG:     at com.google.android.exoplayer2.source.rtsp.-$$Lambda$RtspClient$MessageListener$9u5JvYWAdRxaQT3-zaI614vd2Qw.run(Unknown Source:4)\r\n2022-03-14 15:38:40.675 13643-14091/com.ixlab.mapbox.wemap E/DEBUG:     at android.os.Handler.handleCallback(Handler.java:900)\r\n```",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10067/comments",
    "author": "wingkingbobo",
    "comments": [
      {
        "user": "claincly",
        "created_at": "2022-03-16T14:00:06Z",
        "body": "It is failing as intended: we don't play H264 content when the `sprop-parameter-sets` is empty. The parameter set contains sps/pps for the decoder. That being said, you can try removing the checks for `sprop-parameter-sets` and see if it plays."
      },
      {
        "user": "lotaviods",
        "created_at": "2022-08-04T12:47:00Z",
        "body": "on my case, fmtpParameters is empty but is playing in vlc"
      },
      {
        "user": "claincly",
        "created_at": "2022-08-04T12:52:08Z",
        "body": "Again, you can try remove the assertion for `sprop-parameter-sets` and see if it plays."
      },
      {
        "user": "lotaviods",
        "created_at": "2022-08-05T11:33:01Z",
        "body": "After removing the assertion, video does not play on exo player but does on vlc, i notice that after removing processH265FmtpAttribute, since has no atrr, codec fail on initCodec(codecInfo, crypto)\r\n\r\nhere is RTP DESCRIBE\r\n\r\n```\r\nv=0\r\no=- 1109162014219182 0 IN IP4 0.0.0.0\r\ns=HIK Media Server V4.30.201\r\ni=HIK Media Server Session Description : standard\r\ne=NONE\r\nc=IN IP4 0.0.0.0\r\nt=0 0\r\na=control:*\r\nb=AS:1034\r\na=range:npt=now-\r\nm=video 0 RTP/AVP 96\r\ni=Video Media\r\na=rtpmap:96 H265/90000\r\na=control:trackID=video\r\nb=AS:1024\r\na=Media_header:MEDIAINFO=494D4B48020100000400050000000000000000000000000000000000000000000000000000000000;\r\na=appversion:1.0\r\n```"
      },
      {
        "user": "claincly",
        "created_at": "2022-08-22T10:50:43Z",
        "body": "Hey Luiz - could you try streaming an H264 video with the HIK server?\r\n\r\nOr maybe share your test stream? if you're unable to share it publicly, please send them to dev.exoplayer@gmail.com using a subject in the format \"Issue #10067\". Please also update this issue to indicate you've done this."
      },
      {
        "user": "google-oss-bot",
        "created_at": "2022-09-09T01:04:35Z",
        "body": "<!-- event: mark-stale -->\nHey @wingkingbobo. We need more information to resolve this issue but there hasn't been an update in 14 weekdays. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2022-09-20T01:04:52Z",
        "body": "<!-- event: close-stale -->\nSince there haven't been any recent updates here, I am going to close this issue.\n\n@wingkingbobo if you're still experiencing this problem and want to continue the discussion just leave a comment here and we are happy to re-open this."
      }
    ]
  },
  {
    "number": 10048,
    "title": "AudioTrackScore missing in r2.17.0",
    "created_at": "2022-03-09T18:54:52Z",
    "closed_at": "2022-04-11T01:04:24Z",
    "labels": [
      "question",
      "closed-by-bot"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10048",
    "body": "Hello,\r\n\r\nUpdating from r2.16.1 to r2.17.0 , class `AudioTrackScore` has disappeared. It was not deprecated in previous versions.\r\nI was using it to compare tracks. Is there a substitute or are we expected to do it custom now?\r\nPlease advise.\r\nThanks.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10048/comments",
    "author": "kvillnv",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2022-03-14T00:57:59Z",
        "body": "It looks like the closest equivalent is `DefaultTrackSelector.AudioTrackInfo`, but it's marked as private. Would you be able to do what you did previously if it were protected instead? I'd suggest you try depending on ExoPlayer as source, changing it to protected and trying it out, because it's probably quite difficult to reason about just by looking at the source code."
      },
      {
        "user": "google-oss-bot",
        "created_at": "2022-03-31T01:04:30Z",
        "body": "<!-- event: mark-stale -->\nHey @kvillnv. We need more information to resolve this issue but there hasn't been an update in 14 weekdays. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2022-04-11T01:04:23Z",
        "body": "<!-- event: close-stale -->\nSince there haven't been any recent updates here, I am going to close this issue.\n\n@kvillnv if you're still experiencing this problem and want to continue the discussion just leave a comment here and we are happy to re-open this."
      },
      {
        "user": "kvillnv",
        "created_at": "2022-04-11T15:01:08Z",
        "body": "We haven't done the update yet. We will explore alternate solutions and consider your suggestion. \r\nNo need to re-open the ticket.\r\nThanks."
      },
      {
        "user": "ojw28",
        "created_at": "2022-04-11T17:10:51Z",
        "body": "I'll leave it closed for now, because there's nothing actionable for us at this moment. Once you have some feedback you can respond here, or file a new issue is long enough elapses for this issue to be locked. Thanks!"
      },
      {
        "user": "ojw28",
        "created_at": "2022-04-11T17:12:12Z",
        "body": "Heh, apologies, I initially misread your comment as a request to re-open the ticket :). It sounds like we're aligned; please ignore my post above!"
      }
    ]
  },
  {
    "number": 10041,
    "title": "Multi-track control",
    "created_at": "2022-03-09T09:46:27Z",
    "closed_at": "2022-03-09T11:32:47Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10041",
    "body": "One of my video files contains two audio tracks, can I make these two audio tracks play at the same time, and I can arbitrarily control one of the audio tracks to mute to achieve the function of audio track switching, the reason is that I use the native audio track The method of switching will find that the screen will freeze when switching audio tracks\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10041/comments",
    "author": "wangxuan217",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2022-03-09T11:32:47Z",
        "body": "This is not something that we support. Sorry!"
      }
    ]
  },
  {
    "number": 10036,
    "title": "Remove final modifier from LeanbackPlayerAdapter class",
    "created_at": "2022-03-08T16:59:51Z",
    "closed_at": "2022-03-14T13:28:15Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10036",
    "body": "We want to apply some minor changes in one of LeanbackPlayerAdapter methods. Is there a possibility to remove a final modifier from LeanbackPlayerAdapter class so that we could subclass it?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10036/comments",
    "author": "ppodgorski",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2022-03-09T11:08:15Z",
        "body": "Making the class non-final effectively adds a bunch of extension points to our API surface. We don't want to add to our API surface without understanding why we're doing so. It may also be possible to do what you want with APIs that already exist.\r\n\r\nPlease could you provide details of the specific thing you're trying to do, and how you'd propose to implement it if this class were non-final? We can then assess whether that's the correct and best way to support your request. Thanks!"
      },
      {
        "user": "ppodgorski",
        "created_at": "2022-03-09T13:22:56Z",
        "body": "Thanks for your reply! We want to override getDuration() method into something like this:\r\n```\r\n@Override\r\npublic long getDuration() {\r\n    Timeline timeline = player.getCurrentTimeline();\r\n    Timeline.Window window = timeline.getWindow(player.getCurrentWindowIndex(), new Timeline.Window());\r\n    return window.defaultPositionUs;\r\n}\r\n```\r\n\r\nThat is because we are experiencing long buffering on our live streams when user scrub to the end of the stream. I've sent url to test content to dev.exoplayer@gmail.com, so you will be able to reproduce the problem.\r\nReproduction steps:\r\n1. Switch \"uri\" in media.exolist.json to our url and play\r\n2. Scrub to the end of the video\r\n\r\nLimiting duration to window.defaultPositionUs is solving our problem."
      },
      {
        "user": "ojw28",
        "created_at": "2022-03-13T18:07:00Z",
        "body": "You can probably achieve the same thing using `ForwardingPlayer` to change the duration:\r\n\r\n```\r\nPlayer durationOverridePlayer = new ForwardingPlayer(player) {\r\n  @Override\r\n  public long getDuration() {\r\n    Timeline timeline = getCurrentTimeline();\r\n    Timeline.Window window = timeline.getWindow(getCurrentWindowIndex(), new Timeline.Window());\r\n    return window.defaultPositionUs;\r\n  }\r\n};\r\n\r\nLeanbackPlayerAdapter adapter = new LeanbackPlayerAdapter(context, durationOverridePlayer, updatePeriodMs);\r\n```"
      }
    ]
  },
  {
    "number": 10032,
    "title": "Degradation of the reading of a 50 fps stream between 2.12 and 2.16",
    "created_at": "2022-03-07T15:02:00Z",
    "closed_at": "2022-11-29T02:04:51Z",
    "labels": [
      "question",
      "closed-by-bot"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10032",
    "body": "Hello,\r\n\t\r\n\tAfter testing the 50 fps streams on version 2.14, we noticed some degradations\r\n\tof the stream playback.\r\n\tIndeed, we have activated the configs in rendererFactory below: \r\n\t\tRenderersFactory rendererFactory = new DefaultRenderersFactory(/* context= */ this)\r\n\t\t.setExtensionRendererMode(extensionRendererMode)\r\n\t\t  .experimentalSetAsynchronousBufferQueueingEnabled(true)\r\n\t\t  .experimentalSetForceAsyncQueueingSynchronizationWorkaround(true);\r\n\t\t  \r\n    Despite the activation of these config, we still see the same behavior (without activation of the configs) as before \r\n\tfrequent freezes.\r\n\tContrary to the version of ExoPlayer 2.12.3, the rendering is quite stable after the activation of the OPERATION_MODE_ASYNCHRONOUS_DEDICATED_THREAD_ASYNCHRONOUS_QUEUEING mode via the config below:\r\n\t\r\n\tRenderersFactory rendererFactory = new DefaultRenderersFactory(context.getApplicationContext())\r\n    .setExtensionRendererMode(extensionRendererMode)\r\n    .experimentalSetVideoMediaCodecOperationMode(MediaCodecRenderer.OPERATION_MODE_ASYNCHRONOUS_DEDICATED_THREAD_ASYNCHRONOUS_QUEUEING)\r\n\t\r\n\tDo you have any idea how to get the same behavior of 2.12 in 2.14? Do you have another configuration to get it?\r\n\r\nBR,\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10032/comments",
    "author": "Xlcghs",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2022-03-07T19:22:19Z",
        "body": "Are you playing live streams, or on-demand?\r\n\r\nIf you're playing live streams, then I think I can probably suggest what's going on (and a workaround for it). If you're playing on-demand streams, then please provide a same test stream, as well as details about specifically which devices are affected by the change in performance. Thanks!"
      },
      {
        "user": "Xlcghs",
        "created_at": "2022-03-07T20:56:27Z",
        "body": "Thanks  for your quick return.\r\nI play live stream content."
      },
      {
        "user": "ojw28",
        "created_at": "2022-03-07T22:08:03Z",
        "body": "You can most likely workaround this problem by calling the following on `MediaItem.Builder` when creating a `MediaItem` to play:\r\n\r\n```\r\nmediaItemBuilder.setLiveMaxPlaybackSpeed(1);\r\nmediaItemBuilder.setLiveMinPlaybackSpeed(1);\r\n```\r\n\r\nThe problem is also fixed by upgrading to 2.17, so that would be another option."
      },
      {
        "user": "ojw28",
        "created_at": "2022-03-07T22:49:56Z",
        "body": "An alternative workaround for 2.16, which is probably easier than the `MediaItem` approach described above, is to do the following when creating the player:\r\n\r\n```\r\nplayer =\r\n    new ExoPlayer.Builder(...)\r\n        ...\r\n        .setLivePlaybackSpeedControl(\r\n            new DefaultLivePlaybackSpeedControl.Builder()\r\n                .setFallbackMinPlaybackSpeed(1f)\r\n                .setFallbackMaxPlaybackSpeed(1f)\r\n                .build())\r\n        ...\r\n        .build();\r\n```\r\n"
      },
      {
        "user": "ojw28",
        "created_at": "2022-03-14T19:29:43Z",
        "body": "Closing for now. You can still reply here if the suggestions above don't resolve the issue, and we will re-open the issue. Thanks!"
      },
      {
        "user": "Xlcghs",
        "created_at": "2022-03-17T13:57:55Z",
        "body": "Hi,\r\nSorry for the late return.\r\n\r\nWe did some tests with the PlaybackSpeed configurations mentioned in your message.\r\nBut the problem is still there.\r\n\r\nAt startup, we had freezes and then the playback stabilizes.\r\n\r\nFYI: this problem is not reproduced on version 2.12.3.\r\n\r\nDo you have another way of correction ?\r\n\r\nCan you please open this issue. Thank you\r\n\r\nBR,"
      },
      {
        "user": "Xlcghs",
        "created_at": "2022-03-28T11:41:56Z",
        "body": "Do you have any news please?\r\nCan you guide me to solve this problem?\r\n\r\nThank you."
      },
      {
        "user": "tonihei",
        "created_at": "2022-05-04T12:38:46Z",
        "body": "Could you let us know which device(s) you are using for testing? And as mentioned above, it would be helpful to have a test stream in case it's media related (you can a send a link to dev.exoplayer@gmail.com with \"Issue #10032\" in the subject)."
      },
      {
        "user": "google-oss-bot",
        "created_at": "2022-05-24T01:04:30Z",
        "body": "<!-- event: mark-stale -->\nHey @Xlcghs. We need more information to resolve this issue but there hasn't been an update in 14 weekdays. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2022-06-02T01:04:34Z",
        "body": "<!-- event: close-stale -->\nSince there haven't been any recent updates here, I am going to close this issue.\n\n@Xlcghs if you're still experiencing this problem and want to continue the discussion just leave a comment here and we are happy to re-open this."
      },
      {
        "user": "Xlcghs",
        "created_at": "2022-06-09T12:53:55Z",
        "body": "Hi,\r\nThe stream was sent privately to dev.exoplayer@gmail.com to reproduce the problem.\r\nFYI, To access this stream can you give me your public IP of the test machine to allow it.\r\n\r\nBest regards,"
      },
      {
        "user": "tonihei",
        "created_at": "2022-06-09T13:10:28Z",
        "body": "We can't really provide an IP address for accessing streams. Would it be possible to make this stream more accessible from any machine? \r\n\r\nAnd please also let us know which device exactly you are using for testing, because this is likely a device-specific issue. "
      },
      {
        "user": "google-oss-bot",
        "created_at": "2022-06-29T01:04:31Z",
        "body": "<!-- event: mark-stale -->\nHey @Xlcghs. We need more information to resolve this issue but there hasn't been an update in 14 weekdays. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2022-07-08T01:04:31Z",
        "body": "<!-- event: close-stale -->\nSince there haven't been any recent updates here, I am going to close this issue.\n\n@Xlcghs if you're still experiencing this problem and want to continue the discussion just leave a comment here and we are happy to re-open this."
      },
      {
        "user": "tonihei",
        "created_at": "2022-11-01T15:53:46Z",
        "body": "I tested the stream you provided (sorry for the delay!), but can't see any frame freezes on the device I tested. As indicated above, this may likely be device specific and it would help if you can specify on which device you observed the issue."
      },
      {
        "user": "google-oss-bot",
        "created_at": "2022-11-21T02:04:38Z",
        "body": "<!-- event: mark-stale -->\nHey @Xlcghs. We need more information to resolve this issue but there hasn't been an update in 14 weekdays. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2022-11-29T02:04:51Z",
        "body": "<!-- event: close-stale -->\nSince there haven't been any recent updates here, I am going to close this issue.\n\n@Xlcghs if you're still experiencing this problem and want to continue the discussion just leave a comment here and we are happy to re-open this."
      }
    ]
  },
  {
    "number": 10023,
    "title": "Custom controller layout not recognizing play and pause buttons.",
    "created_at": "2022-03-03T14:33:23Z",
    "closed_at": "2022-03-04T08:39:18Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10023",
    "body": "Hi, I think there is a bug with the custom controller layout.\r\n\r\nI tried to add a custom controller layout to StyledPlayerView on the demo app and it is loaded, but when I override the exo_play and exo_pause buttons they don't work. \r\nWeird thing is that exo_ffwd and exo_rew work as expected (I didn't try others).\r\n\r\nPlayer Activity contains StyledPlayerView\r\n\r\n```\r\n    <com.google.android.exoplayer2.ui.StyledPlayerView\r\n          android:id=\"@+id/player_view\"\r\n          android:layout_width=\"match_parent\"\r\n          android:layout_height=\"match_parent\"\r\n          app:controller_layout_id=\"@layout/exo_player_layout\"/>\r\n```\r\n\r\n\r\nAnd this is exo_player_layout\r\n\r\n\r\n```\r\n     <LinearLayout\r\n            android:id=\"@+id/play_controls\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:gravity=\"center\">\r\n\r\n            <ImageButton\r\n                android:id=\"@id/exo_play\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                app:srcCompat=\"@drawable/ic_exo_play\" />\r\n\r\n            <ImageButton\r\n                android:id=\"@id/exo_pause\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                app:srcCompat=\"@drawable/ic_exo_pause\"/>\r\n\r\n        </LinearLayout>\r\n\r\n```\r\n\r\nDoes anyone have any ideas?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10023/comments",
    "author": "mdurokov",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2022-03-03T15:00:21Z",
        "body": "I think the `StyledPlayerView` is using `@id/exo_play_pause` rather than `@id/exo_play` and `@id/exo_pause`.\r\n\r\nIf you want to provide your custom layout you should use a single button with `@+id/exo_play_pause`. The styled control view does not hide/show one or the other of these buttons, but instead change the drawable of the icon. If you want to change these icons you can do so by adding a `drawables.xml` in the `values` folder of the app module to override the drawables used by default:\r\n\r\n```\r\n<resources>\r\n  <drawable name=\"exo_styled_controls_play\">@drawable/custom_controls_play</drawable>\r\n  <drawable name=\"exo_styled_controls_pause\">@drawable/custom_controls_pause</drawable>\r\n</resources>\r\n``` \r\n\r\nPlease see #10008 also which is about a similar issue.\r\n\r\nThere were quite some changes in the ui components, so if the above does not help, please let us know the exact ExoPlayer version you are depending to with your app."
      },
      {
        "user": "mdurokov",
        "created_at": "2022-03-04T08:39:18Z",
        "body": "That does the trick, thank you! \r\nI didn't see it documented anywhere.\r\nAs a matter of fact, I did use PlayerView before and it worked with exo_play and exo_pause. "
      },
      {
        "user": "draganstojanov",
        "created_at": "2022-03-10T12:10:51Z",
        "body": "It works. But, i have two sets of icons, one for vertical oriented video and other for horizontal oriented. Is there any way to programmatically override drawables?"
      }
    ]
  },
  {
    "number": 10010,
    "title": "Only audio in black screen, no video in RecyclerView",
    "created_at": "2022-02-27T16:03:33Z",
    "closed_at": "2022-02-28T22:06:32Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10010",
    "body": "### description\r\nuse the latest Exoplayer2.17.0 in RecyclerView，some items play video normally，some items only have audio but no video on a black background area！！all other views of RecyclerView item are displayed correctly ,only the video play is wrong\r\n### my code is :\r\n- 1、init exoplayer in fun onStart() : \r\n```\r\nval mPlayer = ExoPlayer.Builder(mActivity).build()\r\n```\r\n- 2、when scroll Recyclerview to PlayerView item : \r\n```\r\nholder.playView.player = mPlayer\r\nval firstLocalMediaItem = MediaItem.fromUri(url)\r\nmPlayer?.run {\r\n      clearMediaItems() //  only one video to play\r\n      repeatMode = Player.REPEAT_MODE_ALL\r\n      addMediaItem(firstLocalMediaItem)\r\n      playWhenReady = true\r\n      prepare()\r\n}\r\n```     \r\n- 3、when PlayerView scroll out of screen，I stop the video that is playing\r\n```\r\nif (mPlayer?.isPlaying == true) {\r\n     mPlayer?.stop()\r\n}\r\n```\r\n- 4，scroll RecyclerView，two listener \r\n```\r\n// scroll RecyclerView\r\nrecyclerView.addOnScrollListener(recyclerViewScrollListener)\r\n// scroll PlayerView is out of screen \r\nrecyclerView.addOnChildAttachStateChangeListener(childAttachStateChangeListener)\r\n```\r\n### my question:\r\n1，My recyclerView has 2 itemType， there will be at most one PlayerView on the current screen , when I scroll to the first and second PlayerView , its playing normally , and when I scroll to the third PlayerView its just has audio , only the PlayerView is wrong in the third item, After that , one PlayerView  item  is normal , one PlayerView is only audio\r\n2，What I am thinking is that the ViewHolder is being reused, but the ViewHolder for each item contains the correct content, except for the black screen when playing，There must be something wrong with my ExoPlayer operation which caused the black screen\r\n\r\nThank for your help\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10010/comments",
    "author": "1mean",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2022-02-28T22:06:32Z",
        "body": "Having a player in scrolling `RecyclerView` with a single or multiple players is an advanced topic for that we can't really provide you with support I'm afraid. \r\n\r\nFrom what you report it looks like that the player is not released properly and then the number of available video decoder gets exceeded. Audio continues working with a software codec. \r\n\r\nThere is also #867 where people are discussion various options and details around the case of recycler view.\r\n\r\nI'm closing as a duplicate of that issue. Please reopen if you think your case touches a specific library issue. "
      },
      {
        "user": "1mean",
        "created_at": "2022-03-01T08:28:34Z",
        "body": "Because I just learned Exoplayer，The problem is that I don't understand api，I solved the problem in this way\r\n```\r\nholder.playView.player = null\r\nholder.playView.player = mPlayer\r\n```\r\nI read the introduce for this method `setPlayer(@Nullable Player player)`\r\n```\r\nTo transition a Player from targeting one view to another, it's recommended to use \r\nswitchTargetView(Player, PlayerView, PlayerView) rather than this method. If you do wish to \r\nuse this method directly, \r\nbe sure to attach the player to the new view before calling setPlayer(null) to detach it from the old one. \r\nThis ordering is significantly more efficient and may allow for more seamless transitions\r\n```\r\nThanks"
      }
    ]
  },
  {
    "number": 10009,
    "title": "Can we download separate audio and video link in a one video file?",
    "created_at": "2022-02-27T03:18:35Z",
    "closed_at": "2022-03-02T12:04:16Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/10009",
    "body": "Hello, \r\n\r\nI have separate links for audio and video files. I can play both audio and video by merging source. But how to download video and audio links in one file using exo? Can this be possible via exo or i have to use ffmpeg for merging? \r\n\r\nthanks ",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/10009/comments",
    "author": "zenom141",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2022-02-28T17:40:45Z",
        "body": "If I understand correctly, and the question is whether the download components of the library (`DownloadService` et al.) can be used to download a `MergingMediaSource`, then I think the answer is no, I'm afraid. \r\n\r\nYou would probably have to transcode the two streams into a single container (using ffmpeg or a similar tool) or into an adaptive stream with a playlist/manifest. The `Downloaders` provided by the library expect a `MediaItem` that can be converted in either a `ProgressiveMediaSource`, `DashMediaSource`, `HlsMediaSource` or \"SmoothStreamingMediaSource`.\r\n\r\nIt's probably possible to download both streams separately and then merged the already downloaded stream in a `MergingMediaSource`. The `CachingDataSource` would then find the data of both stream in the cache and deliver it back. So if you download the media programmatically (as opposed to adding a download to the `DownloadService`), this could work but this is not an out-of-the-box solution but needs some investigation and research on your side when giving it a try.\r\n\r\nPlease let me know whether I have understood the question correctly."
      },
      {
        "user": "zenom141",
        "created_at": "2022-03-02T12:04:16Z",
        "body": "Hello, yes u got it right. I have used ffmpeg to merge audio and video link. Thank you. "
      }
    ]
  },
  {
    "number": 9985,
    "title": "why dashdownloader does not download lower bitrate track when network is slow? if it does, how to check it?",
    "created_at": "2022-02-18T04:50:53Z",
    "closed_at": "2022-02-20T17:09:58Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9985",
    "body": null,
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9985/comments",
    "author": "kshailes94",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2022-02-20T17:09:58Z",
        "body": "It's working as intended that ABR changes based on the available bandwidth are disabled for downloads.\r\n\r\nIt's not a requirement that downloads have to complete within a certain duration. One of the reasons that a user might want to download content (rather than streaming it) is so that they can then play the highest quality stream, despite not having the bandwidth to do so when streaming.\r\n\r\nNote also that the application is able to select which quality is downloader picks when initializing the download. Application code could do this based on the network type, or by presenting a dialog to the user. Our demo app presents a dialog to the user, so you could take a look at the demo app code if you're interested in understanding how to do this."
      },
      {
        "user": "kshailes94",
        "created_at": "2022-02-21T06:31:17Z",
        "body": "can it be enabled for downloads ?"
      },
      {
        "user": "ojw28",
        "created_at": "2022-02-21T09:28:52Z",
        "body": "No, this is not supported."
      }
    ]
  },
  {
    "number": 9972,
    "title": "Decrypt and play .Exo files using key",
    "created_at": "2022-02-12T13:22:18Z",
    "closed_at": "2022-02-12T17:47:30Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9972",
    "body": "I have downloaded a course on udemy. Those are .exo files. And there is a  .uid file. Is it possible to decrypt those files with exoplayer ?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9972/comments",
    "author": "tirumala007",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2022-02-12T17:47:30Z",
        "body": "Generally speaking, the app that performs the download is the app that knows how to either export or play the content. If the Udemy app doesn't have export functionality, presumably that means they intend for you to play the downloaded content within their app."
      }
    ]
  },
  {
    "number": 9971,
    "title": "Exoplayer Next button not clickable when Repeat Mode is REPEAT_MODE_ONE at the last video",
    "created_at": "2022-02-11T18:18:20Z",
    "closed_at": "2022-02-12T18:34:29Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9971",
    "body": "I am using exoplayer 2.12 and when i reach the last video in the timeline and player.repeatMode = Player.REPEAT_MODE_ONE then Next button is not clickable . What i want is to make some action at that point of time to make next button clickable.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9971/comments",
    "author": "wahdatjan",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2022-02-12T18:34:29Z",
        "body": "It's working as intended that the next button is not clickable when using `REPEAT_MODE_ONE` and positioned on the last video in the timeline. You will likely need to implement your own UI components instead if you want different behavior (you're obviously able to fork the ones provided by the ExoPlayer UI module as a starting point)."
      },
      {
        "user": "ojw28",
        "created_at": "2022-02-12T18:49:17Z",
        "body": "Actually, if you were to use ExoPlayer 2.16 or newer, you'd be able to achieve this using `ForwardingPlayer`:\r\n\r\n```\r\n// Wrap your player in a ForwardingPlayer\r\nPlayer customPlayer = new ForwardingPlayer(player) {\r\n\r\n    // Overrides to always enable COMMAND_SEEK_TO_NEXT\r\n\r\n    @Override\r\n    public Commands getAvailableCommands() {\r\n      return getWrappedPlayer()\r\n          .getAvailableCommands()\r\n          .buildUpon()\r\n          .add(COMMAND_SEEK_TO_NEXT)\r\n          .build();\r\n    }\r\n\r\n    @Override\r\n    public boolean isCommandAvailable(@Command int command) {\r\n      return player.isCommandAvailable(command) || command == COMMAND_SEEK_TO_NEXT;\r\n    }\r\n\r\n    // Override to implement your custom action when seeking.\r\n\r\n    @Override\r\n    public void seekToNext() {\r\n      if (getWrappedPlayer().hasNextMediaItem()) {\r\n        // Dispatch to the wrapped player if not at the final media item\r\n        getWrappedPlayer().seekToNextMediaItem();\r\n      } else {\r\n        // TODO: Implement your custom action here.\r\n      }\r\n    }\r\n};\r\n\r\n// Provide the ForwardingPlayer to the UI components\r\nplayerView.setPlayer(customPlayer);\r\n```"
      },
      {
        "user": "wahdatjan",
        "created_at": "2022-02-12T18:51:52Z",
        "body": "@ojw28 I cant move to latest version instantly . I use an interface to listen to the click on last video and make REPEAT_MODE_ALL"
      }
    ]
  },
  {
    "number": 9964,
    "title": "ParserException: Searched too many bytes.",
    "created_at": "2022-02-10T11:26:29Z",
    "closed_at": "2022-02-11T09:28:50Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9964",
    "body": "\r\n\r\n\r\n\r\none of the files is not playing when I play using the below code. The file I'm using is this please download this or upload to some server as [this link]() let me know what to do to fix this? thanks! I have read the guidelines and sent the mail. There's nothing like DRM content protection for the time being. \r\n\r\n\r\n```\r\n\r\n   fun playAudio(id: Int, url: String) {\r\n\r\n        if (currentPlayingId == null || currentPlayingId != id) {\r\n\r\n            if (currentPlayingId != null) {\r\n                calculatePlayTimeAndUpdateServer(getCurrentItem()?.id)\r\n            }\r\n            val extractorsFactory = DefaultExtractorsFactory()\r\n                .setMp3ExtractorFlags(Mp3Extractor.FLAG_ENABLE_CONSTANT_BITRATE_SEEKING)\r\n\r\n\r\n\r\n            val mediaSource = ProgressiveMediaSource\r\n                .Factory(\r\n                    DefaultDataSourceFactory(applicationContext, userAgent),\r\n                    DefaultExtractorsFactory()\r\n                ).setCustomCacheKey(\"InharmonyAudio_$id\")\r\n                .createMediaSource(\r\n                    MediaItem.fromUri(Uri.parse(url))\r\n\r\n                )\r\n\r\n\r\n            val attr = AudioAttributes.Builder().setUsage(C.USAGE_MEDIA)\r\n                .setContentType(C.CONTENT_TYPE_MUSIC)\r\n                .build()\r\n\r\n            exoPlayer?.setAudioAttributes(attr, true)\r\n\r\n            exoPlayer?.setMediaSource(mediaSource)\r\n            exoPlayer?.prepare()\r\n            userSetPlayWhenReadyValue = true\r\n            exoPlayer?.playWhenReady = true\r\n        } else {\r\n            val oppositeValue = !isCurrentlyPlaying()\r\n            userSetPlayWhenReadyValue = oppositeValue\r\n            exoPlayer?.playWhenReady = oppositeValue\r\n        }\r\n        currentPlayingId = id\r\n        currentlyPlayingUrl = url\r\n\r\n        bottomListener?.onStatusChanged(exoPlayer?.playWhenReady ?: false)\r\n\r\n    }\r\n\r\n```\r\n\r\n\r\n\r\nThe error logs are as follows: \r\n```\r\n\r\n2022-02-10 15:47:09.583 13720-19030/com.app.app W/AHierarchicalStateMachine: Warning message AMessage(what = 'omxI') = {\r\n      int32_t type = 0\r\n      int32_t event = 3\r\n      int32_t data1 = 1\r\n      int32_t data2 = 0\r\n    } unhandled in root state.\r\n2022-02-10 15:47:09.583 13720-19030/com.app.app W/AHierarchicalStateMachine: Warning message AMessage(what = 'omxI') = {\r\n      int32_t type = 0\r\n      int32_t event = 3\r\n      int32_t data1 = 1\r\n      int32_t data2 = 0\r\n    } unhandled in root state.\r\n2022-02-10 15:47:09.612 13720-18793/com.app.app D/AudioTrack: setVolume(1.000000, 1.000000) pid : 13720\r\n2022-02-10 15:47:09.636 13720-19030/com.app.app I/ACodec: [OMX.SEC.mp3.dec] Now Executing\r\n2022-02-10 15:47:10.499 13720-18793/com.app.app E/ExoPlayerImplInternal: Playback error\r\n      com.google.android.exoplayer2.ExoPlaybackException: Source error\r\n        at com.google.android.exoplayer2.ExoPlayerImplInternal.handleIoException(ExoPlayerImplInternal.java:628)\r\n        at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:598)\r\n        at android.os.Handler.dispatchMessage(Handler.java:102)\r\n        at android.os.Looper.loop(Looper.java:246)\r\n        at android.os.HandlerThread.run(HandlerThread.java:67)\r\n     Caused by: com.google.android.exoplayer2.ParserException: Searched too many bytes.\r\n        at com.google.android.exoplayer2.extractor.mp3.Mp3Extractor.synchronize(Mp3Extractor.java:381)\r\n        at com.google.android.exoplayer2.extractor.mp3.Mp3Extractor.readInternal(Mp3Extractor.java:256)\r\n        at com.google.android.exoplayer2.extractor.mp3.Mp3Extractor.read(Mp3Extractor.java:229)\r\n        at com.google.android.exoplayer2.source.BundledExtractorsAdapter.read(BundledExtractorsAdapter.java:127)\r\n        at com.google.android.exoplayer2.source.ProgressiveMediaPeriod$ExtractingLoadable.load(ProgressiveMediaPeriod.java:1046)\r\n        at com.google.android.exoplayer2.upstream.Loader$LoadTask.run(Loader.java:409)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)\r\n        at java.lang.Thread.run(Thread.java:923)\r\n2022-02-10 15:47:10.501 13720-19030/com.app.app I/ACodec: [OMX.SEC.mp3.dec] signalFlush\r\n2022-02-10 15:47:10.502 13720-19030/com.app.app I/ACodec: [OMX.SEC.mp3.dec] ExecutingState flushing now (codec owns 0/10 input, 5/5 output).\r\n2022-02-10 15:47:10.503 13720-19030/com.app.app I/ACodec: [OMX.SEC.mp3.dec] Now Flushing\r\n2022-02-10 15:47:10.508 13720-19030/com.app.app I/ACodec: [OMX.SEC.mp3.dec] FlushingState onOMXEvent(0,1,0)\r\n\r\n```\r\n\r\nThe device I have tested is on Samsung M7. Android 11. it happens on most of the Android 11 devices. running fine on Android 10 or Android 12. Exoplayer version 2.16.1\r\n\r\n ",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9964/comments",
    "author": "githubashutoshsoni",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2022-02-10T16:16:11Z",
        "body": "I do not see the same error that you see, using the link you've provided. I'm also using 2.16.1. That said, the file still doesn't play because it's using `audio/mpeg-L1`, which is not supported on all Android devices.\r\n```\r\nGroup:0, adaptive_supported=N/A [\r\n    [ ] Track:0, id=null, mimeType=audio/mpeg-L1, channels=1, sample_rate=32000, supported=NO_UNSUPPORTED_TYPE\r\n]\r\n```\r\nAs a first step, I suggest you encode your content in a more widely supported format."
      },
      {
        "user": "githubashutoshsoni",
        "created_at": "2022-02-11T09:28:50Z",
        "body": "Okay, so currently the only solution is to change the source audio to raw or other format. "
      }
    ]
  },
  {
    "number": 9963,
    "title": "How to know the callback of each video playback completion",
    "created_at": "2022-02-10T10:37:02Z",
    "closed_at": "2022-02-10T15:53:30Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9963",
    "body": "player.setRepeatMode(Player.REPEAT_MODE_ALL)\r\n\r\nHow to know the callback of each video playback completion？",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9963/comments",
    "author": "LiuDongCai",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2022-02-10T15:53:30Z",
        "body": "I think `Player.Listener.onMediaItemTransition` is what you want. Note that the `reason` parameter will tell you why the transition is occurring. You're probably interested in `reason=MEDIA_ITEM_TRANSITION_REASON_AUTO`, which is the reason used when playback naturally advances to the next video. You may be interested in traisions with `reason=MEDIA_ITEM_TRANSITION_REASON_REPEAT` as well."
      }
    ]
  },
  {
    "number": 9954,
    "title": "onPositionDiscontinuity callback",
    "created_at": "2022-02-08T17:54:14Z",
    "closed_at": "2022-03-10T02:04:27Z",
    "labels": [
      "question",
      "closed-by-bot"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9954",
    "body": "Hi ExoPlayer team,\r\n\r\nwe are using the version 2.15.1 of ExoPlayer in out android app and have the following use case. We have a live stream which consists of multiple periods (content and ad). We have to track whenever we move to the next period of the current live stream. For this we use the onPositionDiscontinuity method but somehow it doesn't work properly. onPositionDiscontinuity sometimes will be called 5 seconds before the next period. Is there a callback which is called exactly when a new period is started. \r\n\r\nMany thanks in advance,\r\nEhsan",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9954/comments",
    "author": "ehsan9295",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2022-02-09T12:59:14Z",
        "body": "@tonihei or @marcbaechinger - Could you take a look. Thanks!"
      },
      {
        "user": "marcbaechinger",
        "created_at": "2022-02-09T13:30:50Z",
        "body": "The use case you are having should be covered by `onPositionDiscontinuity` with a reason of `AUTO_TRANSITION`.\r\n\r\nWhen I play such a stream I get the expected events and it seems to be on time. From the perspective of the implementation, the event is emitted at the moment when playback transitions from one to the other period. I see these logs that go from period 0 to 3:\r\n\r\n```\r\n2022-02-09 13:26:25.550 21776-21776/androidx.media3.demo.main D/EventLogger: positionDiscontinuity [eventTime=66.69, mediaPos=30.98, window=0, period=1, reason=AUTO_TRANSITION, PositionInfo:old [mediaItem=0, period=0, pos=30964], PositionInfo:new [mediaItem=0, period=1, pos=30964]]\r\n2022-02-09 13:26:35.532 21776-21776/androidx.media3.demo.main D/EventLogger: positionDiscontinuity [eventTime=76.67, mediaPos=31.70, window=0, period=2, reason=AUTO_TRANSITION, PositionInfo:old [mediaItem=0, period=1, pos=31678], PositionInfo:new [mediaItem=0, period=2, pos=31678]]\r\n2022-02-09 13:26:45.507 21776-21776/androidx.media3.demo.main D/EventLogger: positionDiscontinuity [eventTime=86.64, mediaPos=29.67, window=0, period=3, reason=AUTO_TRANSITION, PositionInfo:old [mediaItem=0, period=2, pos=29661], PositionInfo:new [mediaItem=0, period=3, pos=29661]]\r\n``` \r\n\r\nI can't think how they could be too early actually. Can you make such a stream available for us so we can test with it?"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2022-03-01T02:04:39Z",
        "body": "<!-- event: mark-stale -->\nHey @ehsan9295. We need more information to resolve this issue but there hasn't been an update in 14 weekdays. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2022-03-10T02:04:27Z",
        "body": "<!-- event: close-stale -->\nSince there haven't been any recent updates here, I am going to close this issue.\n\n@ehsan9295 if you're still experiencing this problem and want to continue the discussion just leave a comment here and we are happy to re-open this."
      }
    ]
  },
  {
    "number": 9947,
    "title": "How can I unsync / delay video audio (hls) in Exo Player",
    "created_at": "2022-02-07T16:52:42Z",
    "closed_at": "2022-02-08T14:36:58Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9947",
    "body": "Hello,\r\n\r\nI would like delay video and sound by 500ms in exoplayer (unsync them) on hls stream.\r\n\r\nIf anyone of you have any idea please show me right direction to do it.\r\n\r\nThanks in Advance",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9947/comments",
    "author": "coveroid",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2022-02-08T14:36:58Z",
        "body": "This is not something we support, sorry! It would likely be possible to achieve by forking ExoPlayer and modifying the internals, but this is not something we can provide support on."
      }
    ]
  },
  {
    "number": 9946,
    "title": "Start HLS live stream with a time offset",
    "created_at": "2022-02-07T16:27:02Z",
    "closed_at": "2023-02-17T02:06:03Z",
    "labels": [
      "question",
      "closed-by-bot"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9946",
    "body": "I have live HLS stream that I want to start with 60 minute delay (start at the point that happened 1 hour ago). Manual rewinding of this stream works using seekTo.\r\n\r\nUsing media fragments, or adding #t=3600 to the URL works on other platforms that support HLS natively (LG, Samsung), but ExoPlayer seems to be ignoring it.\r\n\r\nWhat is a preferred way of starting a stream with a time offset?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9946/comments",
    "author": "frontyard",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2022-02-12T19:12:25Z",
        "body": "The HLS specification defines a way for the content to specify a desired start time:\r\n```\r\nThe EXT-X-START tag indicates a preferred point at which to start\r\nplaying a Playlist.  By default, clients SHOULD start playback at\r\nthis point when beginning a playback session.  This tag is OPTIONAL.\r\n```\r\nIf a service providing the HLS playlists wished to support it, they would be able to parse a query parameter such as `t=3600` in the URL and use it to insert the correct `EXT-X-START` tag into the returned playlists. ExoPlayer would then start from the specified time.\r\n\r\nI think what you're saying is that `t=3600` is interpreted directly by some HLS players, without any involvement from the server. I don't think this is part of the HLS standard (if it is, please point us to the relevant part of the specification so that we can take a look), and this is not something ExoPlayer supports.\r\n\r\nIf you cannot rely on the server inserting `EXT-X-START` tags then I think `seekTo` is probably the right thing to be using, but @christosts or @tonihei may have additional suggestions."
      },
      {
        "user": "tonihei",
        "created_at": "2022-02-14T14:01:41Z",
        "body": "Instead of `seekTo`, you may prefer to set `MediaItem.LiveConfiguration.targetOffsetMs` to 3600, which instructs the player to play at a time offset of 3600ms to the live edge. \r\n\r\nAside, not sure if relevant: We also have the open feature request #9122 to seek to an absolute time (e.g., start of program in live stream)\r\n\r\n>  I don't think this is part of the HLS standard\r\n\r\nWorth pointing out that anchor timestamps are part of the DASH standard and other players may apply the same logic regardless of the type of the media."
      },
      {
        "user": "frontyard",
        "created_at": "2022-02-23T11:25:17Z",
        "body": "Thank you for the response.\r\n\r\nUsing EXT-X-START is most likely a no go as it would require generating a custom playlist for each user since not every user might want to start the stream at the same offset. By default the offset needs to be zero as it's a live stream.\r\n\r\nI will look into LiveConfiguration and watch #9122 one of which might solve my issue. "
      },
      {
        "user": "google-oss-bot",
        "created_at": "2023-02-08T02:06:08Z",
        "body": "<!-- event: mark-stale -->\nHey @frontyard. We need more information to resolve this issue but there hasn't been an update in 14 weekdays. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2023-02-17T02:06:02Z",
        "body": "<!-- event: close-stale -->\nSince there haven't been any recent updates here, I am going to close this issue.\n\n@frontyard if you're still experiencing this problem and want to continue the discussion just leave a comment here and we are happy to re-open this."
      }
    ]
  },
  {
    "number": 9945,
    "title": "Allow LoadControl to prevent loading indefinitely",
    "created_at": "2022-02-07T13:00:18Z",
    "closed_at": "2022-06-09T12:26:05Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9945",
    "body": "My use case here is that I would like to prevent loading by overriding DefaultLoadControl if the user switches to a mobile data connection. Due to data caps not everybody wants to use their data towards video streaming. I would like to offer a setting to opt in using mobile data (just like you need to explicitly allow automatic app updates when not on wifi).\r\n\r\nYou can easily reproduce this by overriding `shouldContinueLoading` and always returning `false`.\r\n\r\nApparently there are some legitimate cases where the player could get stuck which is why there is a check for this in `ExoPlayerImplInternal`:\r\n\r\n```\r\nif (!playbackInfo.isLoading\r\n    && playbackInfo.totalBufferedDurationUs < 500_000\r\n    && isLoadingPossible()) {\r\n  // Throw if the LoadControl prevents loading even if the buffer is empty or almost empty. We\r\n  // can't compare against 0 to account for small differences between the renderer position\r\n  // and buffered position in the media at the point where playback gets stuck.\r\n  throw new IllegalStateException(\"Playback stuck buffering and not loading\");\r\n}\r\n```\r\n\r\nIs there a better way to achieve this without running into an Exception? I would like this to be fully recoverable: if the user connects to wifi again streaming should continue without having to prepare the player again.\r\n\r\nIf not I would like to request a configuration flag to override this for my use case. I cannot imagine that I am the only one facing this.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9945/comments",
    "author": "wkarl",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2022-05-17T15:34:08Z",
        "body": ">  I would like this to be fully recoverable: if the user connects to wifi again streaming should continue without having to prepare the player again.\r\n\r\nThis is an interesting request in that the player is technically doing the right thing: it detects the playback as being stuck and fails. The issue is that you actually want the player to be stuck forever (or until the WiFi connection comes back). I think it would make more sense to let the player fail, display an appropriate message to the user (\"no internet connection / waiting for WiFi\") and just call `player.prepare()` once the Wifi is available again. There isn't a big cost involved in calling `prepare` again (other than recreating the decoder) because there is no already downloaded data left to play anyway, so it's unclear why you want to avoid re-preparation. \r\n\r\nTwo further thoughts on general setup:\r\n - It's not too unlikely that the user will stay on the mobile data connection for a considerable amount of time, so they might not expect playback to continue anyway? \r\n - To create a consistent user experience, you likely need to implement the same logic for a client that goes offline completely. However, that's not easily possible because sudden switches to offline will almost certainly result in network-related playback errors instead of a stuck-buffering exception, so it's unlikely you can prevent the player from going into an error state when the connection is lost completely. "
      },
      {
        "user": "wkarl",
        "created_at": "2022-05-18T05:05:00Z",
        "body": "Thank you for your detailed response @tonihei \r\nAbout the two further thoughts you mentioned:\r\n> It's not too unlikely that the user will stay on the mobile data connection for a considerable amount of time, so they might not expect playback to continue anyway?\r\n\r\nThis only applies to users with a very limited data plan. Many users will want to continue playing on mobile data. That's why there is a \"allow mobile data playback\" button in the dialog we display: it will dismiss the message and continue playing immediately (in addition to a switch in the app settings).\r\n\r\n> To create a consistent user experience, you likely need to implement the same logic for a client that goes offline completely. However, that's not easily possible because sudden switches to offline will almost certainly result in network-related playback errors instead of a stuck-buffering exception, so it's unlikely you can prevent the player from going into an error state when the connection is lost completely.\r\n\r\nYou'd be surprised how well this works. I modified `DefaultLoadErrorHandlingPolicy` to keep retrying playback for this case. As soon as a connection is restored the stream continues playing without fail.\r\n\r\nAs you suggested I currently just call `player.prepare()` again but there are a few downsides:\r\n- The error must be suppressed for this specific case when reporting errors to Firebase etc. to avoid inflating playback errors.\r\n- Semantics: I see this specific case as more of a prompt than an actual error. Handling in the app is very different to regular errors.\r\n- Recovery would be simpler: just unblock `LoadControl` instead of specialised error handling.\r\n- To make sure the video is resumed at the correct position, I either need to remember the position where the error occurred or skip setting the media item again (or use `player.setMediaItem(mediaItem, false)` to keep the position).\r\n\r\nDespite the successful workaround this would definitely be a nice-to-have for me."
      },
      {
        "user": "tonihei",
        "created_at": "2022-05-18T11:20:13Z",
        "body": "> To make sure the video is resumed at the correct position, I either need to remember the position where the error occurred or skip setting the media item again (or use player.setMediaItem(mediaItem, false) to keep the position).\r\n\r\nI believe this should just work without any special workarounds? If you just call `prepare()` after the error and nothing else, playback should continue from where it left off and the whole playlist should still be intact.\r\n\r\n>  You'd be surprised how well this works. I modified DefaultLoadErrorHandlingPolicy to keep retrying playback for this case. As soon as a connection is restored the stream continues playing without fail.\r\n\r\nThis is certainly possible (although I think not the original intention of the `LoadErrorHandlingPolicy`). If you handle network errors in this way anyway, I believe you can achieve your goal with the mobile data connection via the same path by using a `DataSource` wrapper that throws a custom exception when Wifi is lost.\r\n\r\nSomething like (pseudo-code):\r\n```\r\nclass NetworkAwareDataSource implements DataSource {\r\n\r\n   private DataSource actualDataSource;\r\n\r\n   @Override \r\n   public void allDataSourceMethods(...) {\r\n      actualDataSource.method(...);\r\n    }\r\n\r\n   @Override \r\n   public int read(....) throws IOException {\r\n      if (networkLost) {\r\n        throw new CustomNetworkLostIOException();\r\n      }\r\n      return actualDataSource.read(...);\r\n   }\r\n}\r\n```\r\nand you can then pass this `DataSource` to the `DefaultMediaSourceFactory` in the `ExoPlayer.Builder` (or your more specific `MediaSource.Factory` depending on your setup)."
      },
      {
        "user": "wkarl",
        "created_at": "2022-05-18T19:24:54Z",
        "body": "That looks like a good approach, thank you for the suggestion!"
      },
      {
        "user": "tonihei",
        "created_at": "2022-06-09T12:26:05Z",
        "body": "Closing the issue, because the question was answered. "
      }
    ]
  },
  {
    "number": 9942,
    "title": "ChannelMappingProcessor loses its effect after calling player.nextMediaItem()",
    "created_at": "2022-02-05T12:56:58Z",
    "closed_at": "2022-03-08T02:04:29Z",
    "labels": [
      "question",
      "closed-by-bot"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9942",
    "body": "I added ``ChannelMappingProcessor`` to the player by subclassing ``DefaultRenderersFactory`` and override ``buildAudioSink()`` in order to make both speakers play the same channel (left or right).\r\n\r\nHaving multiple ``MediaItem``s in the playlist, the ``ChannelMappingProcessor`` works across different ``MediaItem``s, but if I call ``player.nextMediaItem()`` or click \"next media\" icon in the UI controls provided by the player, the effect of ``ChannelMappingProcessor`` will disappear. \r\n\r\nIs this expected behavior?\r\n\r\nCurrently, I can workaround this issue by calling ``player.seekTo(player.currentMediaItemIndex, player.duration - 1)`` instead.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9942/comments",
    "author": "tingyu995",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2022-02-07T23:27:38Z",
        "body": "That doesn't sound expected, no. Please could you provide a small patch that we can apply to our demo app to reproduce this issue? Alternatively, it works well if you fork the project and then make a commit to your fork. Thanks!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2022-02-25T02:04:38Z",
        "body": "<!-- event: mark-stale -->\nHey @tingyu995. We need more information to resolve this issue but there hasn't been an update in 14 weekdays. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2022-03-08T02:04:29Z",
        "body": "<!-- event: close-stale -->\nSince there haven't been any recent updates here, I am going to close this issue.\n\n@tingyu995 if you're still experiencing this problem and want to continue the discussion just leave a comment here and we are happy to re-open this."
      }
    ]
  },
  {
    "number": 9940,
    "title": "Support downloading live content",
    "created_at": "2022-02-05T02:05:53Z",
    "closed_at": "2022-02-06T20:12:32Z",
    "labels": [
      "duplicate",
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9940",
    "body": "Hi!\r\nI downloaded live content(m3u8) but got an error message saying \"This demo app does not support downloading live content\"\r\nIs it impossible to download live content?\r\n\r\nThanks",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9940/comments",
    "author": "comdigi",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2022-02-06T20:12:32Z",
        "body": "The library does not support downloading live content out-of-the-box. There are no plans to provide this in the near future I'm afraid.\r\n\r\nThere is a tracking bug about this feature. Closing as a duplicate of #3877"
      },
      {
        "user": "comdigi",
        "created_at": "2022-02-10T08:40:08Z",
        "body": "Thanks!"
      }
    ]
  },
  {
    "number": 9932,
    "title": "Question about splitting a video chunks to images in ExoPlayer",
    "created_at": "2022-02-03T19:02:21Z",
    "closed_at": "2022-02-09T12:26:25Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9932",
    "body": "Hi, Currently, I am trying to use exoplayer to display the video. However, I need some additional processing to the videos after the video is downloaded. For example, when using the DASH format, I need to convert a video chunk to mulitple images, and after some processing to images, I need to merge these back to a DASH chunk. \r\nIs there any potential ways, I can use some function inside ExoPlayer to do these splitting and merging stuffs? \r\nThanks a lot for your help in advance!",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9932/comments",
    "author": "jsw-zorro",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2022-02-09T12:26:25Z",
        "body": "This sounds sufficiently custom that it's not going to be something we're able to provide support on; sorry! It's not something that ExoPlayer is designed to support."
      }
    ]
  },
  {
    "number": 9910,
    "title": "i can't change visibility of exo_ffwd and exo_rew button in PlayerView",
    "created_at": "2022-01-29T15:33:09Z",
    "closed_at": "2022-05-10T14:57:24Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9910",
    "body": "I've overridden the controller layout of the player view. I've added another layout for controller view and overridden all of the widgets.\r\n\r\nI can change the visibility of all of then the buttons, but I can't change the visibility of the exo_ffwd and exo_rew buttons.\r\n\r\n\r\n    <com.google.android.exoplayer2.ui.PlayerView\r\n        android:id=\"@+id/playerView\"\r\n        android:layout_width=\"0dp\"\r\n        android:layout_height=\"0dp\"\r\n        android:background=\"@color/black\"\r\n        app:controller_layout_id=\"@layout/exo_playback_control_view\"\r\n        app:fastforward_increment=\"10000\"\r\n        app:hide_during_ads=\"true\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        app:resize_mode=\"fit\"\r\n        app:rewind_increment=\"10000\"\r\n        app:show_buffering=\"when_playing\"\r\n        />\r\n\r\nlayout/exo_playback_control_view (Segment of exo_rew and exo_ffwd )\r\n\r\n    <ImageButton\r\n        android:id=\"@+id/exo_rew\"\r\n        android:layout_width=\"@dimen/playerSizeItemController\"\r\n        android:layout_height=\"@dimen/playerSizeItemController\"\r\n        android:layout_marginEnd=\"@dimen/playerSpaceItemController\"\r\n        android:background=\"@drawable/bg_btn_tv_player_controller\"\r\n        android:scaleType=\"centerInside\"\r\n        app:layout_constraintBottom_toBottomOf=\"@+id/sPlay\"\r\n        app:layout_constraintEnd_toStartOf=\"@id/sPlay\"\r\n        app:layout_constraintTop_toTopOf=\"@+id/sPlay\"\r\n        app:srcCompat=\"@drawable/ic_tv_player_ten_sec_rev\"\r\n        tools:ignore=\"ContentDescription\"\r\n        android:nextFocusRight=\"@id/exo_ffwd\"\r\n        />\r\n\r\n    <ImageButton\r\n        android:id=\"@+id/exo_ffwd\"\r\n        android:layout_width=\"@dimen/playerSizeItemController\"\r\n        android:layout_height=\"@dimen/playerSizeItemController\"\r\n        android:layout_marginEnd=\"@dimen/playerSpaceItemController\"\r\n        android:background=\"@drawable/bg_btn_tv_player_controller\"\r\n        android:scaleType=\"centerInside\"\r\n        app:layout_constraintBottom_toBottomOf=\"@+id/sPlay\"\r\n        app:layout_constraintEnd_toStartOf=\"@+id/exo_rew\"\r\n        app:layout_constraintTop_toTopOf=\"@+id/sPlay\"\r\n        app:srcCompat=\"@drawable/ic_tv_player_ten_sec_forward\"\r\n        tools:ignore=\"ContentDescription\"\r\n        />\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9910/comments",
    "author": "sajjadshahbazi",
    "comments": [
      {
        "user": "sajjadshahbazi",
        "created_at": "2022-01-30T08:01:11Z",
        "body": "also, I define a style that visibility is gone , but does not work"
      },
      {
        "user": "sajjadshahbazi",
        "created_at": "2022-01-30T08:59:20Z",
        "body": "I Set playerView.setShowFastForwardButton(false), but Doesn't work."
      },
      {
        "user": "tonihei",
        "created_at": "2022-02-01T11:48:11Z",
        "body": "I just tested a minimal example where I added `app:controller_layout_id=\"@layout/exo_playback_control_view\"` to the `PlayerView`, referring to a custom layout file `layout/exo_playback_control_view` (which is just a plain copy of the original without modifications). In this minimal example, the buttons are shown by default and I can hide them by calling `playerView.setShowFastForwardButton(false)`.\r\n\r\nI'd suggest you start with a minimal example again as close as possible to the original files and then add new customizations step by step to see which of your customizations break the functionality. "
      },
      {
        "user": "sajjadshahbazi",
        "created_at": "2022-02-02T09:56:19Z",
        "body": "thank you"
      },
      {
        "user": "tonihei",
        "created_at": "2022-05-10T14:57:24Z",
        "body": "Closing to due inactivity."
      }
    ]
  },
  {
    "number": 9906,
    "title": "Bug Crypto key not available",
    "created_at": "2022-01-28T23:14:17Z",
    "closed_at": "2022-02-15T17:37:14Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9906",
    "body": "Our analytics team has found a strange error. This seems to be related to the fact that the user is viewing content for more than 26 hours in a row. Once this happens (according to the logs) we get the following error:\r\n\r\n**Crypto key not available**\r\n\r\nSteps to reproduce it: \r\n\r\n- User watch content for more than 24 hours.\r\n- No new DRM license request is sent before Exoplayer fails \r\n- Observe that Exoplayer is downloading chunks (video + audio) for 24 hours\r\n- After approximately this time error is triggered by Exoplayer.\r\n\r\nDetails\r\n\r\n- DRM scheme and license server URL : WIDEVINE , L1\r\n- Authentication HTTP headers : We send a token in order to get the license in the authentication header and refresh this every 24 h.\r\n\r\n- ExoPlayer version number: 2.15.0\r\n- Android version: Android tv.\r\n- Android device: Set of box.\r\n\r\nWe are using dash protocol, the type of content that is being played is linear content (24/7). There is not reason to think that there is something bad with the license because the player is able to play the content for a period of time. problems happens after a long time user session. We are customizing HttpMediaDrmCallback in order to update the license token once it get expired (after 24 hours) \r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9906/comments",
    "author": "javaboboApp",
    "comments": [
      {
        "user": "icbaker",
        "created_at": "2022-01-31T11:28:38Z",
        "body": "Is your DRM license configured to expire after 24 hours? If so, do you have a refresh period configured in the license too?\r\n\r\nExoPlayer should refresh DRM licenses when the underlying platform `MediaDrm` instance requests this - which is configured by the DRM license.\r\n\r\nIf you have a refresh time configured in the license but you don't see this being honoured by ExoPlayer, please provide info I can use to reproduce the problem. Specifically content with a license that expires in a 'short' time - I'm afraid I'm not able to play content for 24 hours in order to reproduce this. If it's related to DRM license refreshing then it should be possible to e.g. configure a license that expires after 5 minutes and refreshes itself every 1.5 minutes - and the same problem would reproduce."
      },
      {
        "user": "javaboboApp",
        "created_at": "2022-01-31T18:15:33Z",
        "body": "Thanks for the answer @icbaker, I will try to get more information about it in order to reproduce the problem. "
      },
      {
        "user": "icbaker",
        "created_at": "2022-02-15T17:37:14Z",
        "body": "Closing due to inactivity."
      }
    ]
  },
  {
    "number": 9899,
    "title": "Why does the CastPlayer never send a 'STATE_ENDED' playerState?",
    "created_at": "2022-01-26T09:43:00Z",
    "closed_at": "2022-01-26T11:41:02Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9899",
    "body": "Hello!\r\n\r\nI was wondering why the CastPlayer never sends a `STATE_ENDED` when listening via `onPlaybackStateChanged`?, we only ever get `STATE_IDLE`, is there a reason for this?\r\n\r\nWe use the `STATE_ENDED` message to do some things when we know we've finished playback of something, which works great with `ExoPlayer`, but digging into the `CastPlayer` source code I can't find any reference to `STATE_ENDED` being sent.\r\n\r\nWould it be possible to check the Idle state reason in the `fetchPlaybackState` function in CastPlayer and send back a `STATE_ENDED` if the MediaStatus is `IDLE_REASON_FINISHED`?\r\n\r\n```  \r\nprivate static int fetchPlaybackState(RemoteMediaClient remoteMediaClient) {\r\n    int receiverAppStatus = remoteMediaClient.getPlayerState();\r\n    switch (receiverAppStatus) {\r\n      case MediaStatus.PLAYER_STATE_BUFFERING:\r\n        return STATE_BUFFERING;\r\n      case MediaStatus.PLAYER_STATE_PLAYING:\r\n      case MediaStatus.PLAYER_STATE_PAUSED:\r\n        return STATE_READY;\r\n      case MediaStatus.PLAYER_STATE_IDLE: // Can we check the idle reason here?\r\n      case MediaStatus.PLAYER_STATE_UNKNOWN:\r\n      default:\r\n        return STATE_IDLE;\r\n    }\r\n  }\r\n```\r\n\r\nThanks!",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9899/comments",
    "author": "mikescamell",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2022-01-26T11:40:47Z",
        "body": "This is a duplicate of #3969.\r\n\r\nRoughly the `STATE_ENDED` wasn't implemented because the default cast receiver empties the queue when the end of the queue is reached.\r\n\r\nMay I ask you to add your interesting note about `IDLE_REASON_FINISHED` in a comment in #3969? I can obviously do this myself but I think it would be great to have the original author doing it in case we look into this."
      },
      {
        "user": "mikescamell",
        "created_at": "2022-01-26T11:54:21Z",
        "body": "Thank you and sorry for the duplicate! 🙏 I will add a comment to the issue 👍 "
      }
    ]
  },
  {
    "number": 9874,
    "title": "Detecting ad slate from Dash Manifest",
    "created_at": "2022-01-19T10:39:05Z",
    "closed_at": "2022-01-31T13:59:25Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9874",
    "body": "I am developing a solution to detect ad slate in live content over SSAI. So far we have been able to detect the ad slate in HLSManifest. \r\nHowever I don't see any relevant object or information when it comes for DashManifest.\r\nI see `EventStream` which is responsible for ad display\r\nI am using the `onTimelineChanged` to read the manifest changes\r\n\r\n\r\n```kotlin\r\noverride fun onTimelineChanged(timeline: Timeline, reason: Int) {\r\n                super.onTimelineChanged(timeline, reason)\r\n                val manifest: Any? = exoPlayer.currentManifest\r\n                if (manifest is HlsManifest) readHLSManifest(manifest)\r\n                else if (manifest is DashManifest) readDASHManifest(manifest)\r\n            }\r\n```\r\n\r\nNot able to figure what I can use for ad slate detection from Dash.\r\nIs it possible?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9874/comments",
    "author": "wishygupta",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2022-01-20T15:55:40Z",
        "body": "There is no universal detection mechanism to identify ads or ad periods in a DASH manifest (nor in an HLS manifest for that matter). This all depends on how the SSAI stream is generated and which stream guarantees or metadata the stream creator provides. \r\n\r\nIn case this is a stream created by IMA, you can wait until the next ExoPlayer release which will contain direct support for SSAI streams and correctly publishes all metadata. "
      },
      {
        "user": "tonihei",
        "created_at": "2022-01-31T13:59:25Z",
        "body": "Closing issue as the question was answered."
      }
    ]
  },
  {
    "number": 9870,
    "title": "Unable to fetch the Chunk Size and Latency during playing the video",
    "created_at": "2022-01-18T11:24:15Z",
    "closed_at": "2022-01-21T14:21:12Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9870",
    "body": "Hi Team,\r\n\r\nCurrently, I am using the 2.12.1 version and trying to fetch the Chunk Size and Latency by calling the MediaSourceEventListener but I didn't get a call inside the onLoadCompleted Override method.\r\n\r\nPlease find the onLoadCompleted method logic\r\n\r\n@Override\r\n    public void onLoadCompleted(int windowIndex, @Nullable MediaSource.MediaPeriodId mediaPeriodId, LoadEventInfo loadEventInfo, MediaLoadData mediaLoadData) {\r\n        mLatestChunkLatency = loadEventInfo.loadDurationMs;\r\n        mLatestChunkSize = (int) ((mediaLoadData.mediaEndTimeMs - mediaLoadData.mediaStartTimeMs) / 1000);\r\n    }\r\n    \r\n    How to find the Chunk Size and Latency without updating the version?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9870/comments",
    "author": "satishkumar-tudip",
    "comments": [
      {
        "user": "christosts",
        "created_at": "2022-01-21T14:12:19Z",
        "body": "I don't know how you are creating MediaSources and attaching listeners to them in your app, however can you try attaching an `AnalyticsListener` to the player and override its `onLoadCompleted()`?\r\n\r\nLet me know if that worked."
      },
      {
        "user": "satishkumar-tudip",
        "created_at": "2022-01-21T14:15:20Z",
        "body": "Hi @christosts \r\nThank you for the reply, I have already attached the AnalyticsListener and it's working now."
      }
    ]
  },
  {
    "number": 9853,
    "title": "MPEG-4 video stream is not opening, while other players can open it without problems.",
    "created_at": "2022-01-12T11:08:28Z",
    "closed_at": "2022-02-08T10:20:25Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9853",
    "body": "**Issue description**\r\nExoPlayer can't open MPEG-4 AVC video stream. No errors, just constant loading.\r\nVLC player opens without problems.\r\n\r\n**Link to test content**\r\nLink to the media e-mailed to ExoPlayer development team.\r\n\r\n**Version of ExoPlayer being used**\r\n2.16.1\r\n\r\n**Device(s) and version(s) of Android being used**\r\nXiaomi Mi 9T, Android 11\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9853/comments",
    "author": "menscikov",
    "comments": [
      {
        "user": "icbaker",
        "created_at": "2022-01-12T14:00:34Z",
        "body": "I can reproduce the problem as described. The stream provided over email plays in VLC on MacOS but not in the ExoPlayer demo app (2.16.1).\r\n\r\nI see the following in the logs, which indicates the server is returning a HTTP 404 response.  To understand why that's happening I suggest you look in the server logs or talk to the hosting provider - it doesn't seem like an exoplayer problem.\r\n\r\n```\r\n2022-01-12 13:58:29.630 11016-11016/com.google.android.exoplayer2.demo E/EventLogger: internalError [eventTime=2.70, mediaPos=0.00, window=0, period=0, loadError\r\n      com.google.android.exoplayer2.upstream.HttpDataSource$InvalidResponseCodeException: Response code: 404\r\n        at com.google.android.exoplayer2.ext.cronet.CronetDataSource.open(CronetDataSource.java:719)\r\n        at com.google.android.exoplayer2.upstream.DefaultDataSource.open(DefaultDataSource.java:258)\r\n        at com.google.android.exoplayer2.upstream.cache.CacheDataSource.openNextSource(CacheDataSource.java:776)\r\n        at com.google.android.exoplayer2.upstream.cache.CacheDataSource.open(CacheDataSource.java:589)\r\n        at com.google.android.exoplayer2.upstream.StatsDataSource.open(StatsDataSource.java:84)\r\n        at com.google.android.exoplayer2.source.ProgressiveMediaPeriod$ExtractingLoadable.load(ProgressiveMediaPeriod.java:1013)\r\n        at com.google.android.exoplayer2.upstream.Loader$LoadTask.run(Loader.java:409)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)\r\n        at java.lang.Thread.run(Thread.java:923)\r\n    ]\r\n2022-01-12 13:58:34.614 11016-11016/com.google.android.exoplayer2.demo E/exoplayer2.dem: Invalid ID 0x00000000.\r\n2022-01-12 13:58:38.638 11016-11016/com.google.android.exoplayer2.demo E/EventLogger: internalError [eventTime=11.71, mediaPos=0.00, window=0, period=0, loadError\r\n      com.google.android.exoplayer2.ext.cronet.CronetDataSource$OpenException: java.net.SocketTimeoutException\r\n        at com.google.android.exoplayer2.ext.cronet.CronetDataSource.open(CronetDataSource.java:676)\r\n        at com.google.android.exoplayer2.upstream.DefaultDataSource.open(DefaultDataSource.java:258)\r\n        at com.google.android.exoplayer2.upstream.cache.CacheDataSource.openNextSource(CacheDataSource.java:776)\r\n        at com.google.android.exoplayer2.upstream.cache.CacheDataSource.open(CacheDataSource.java:589)\r\n        at com.google.android.exoplayer2.upstream.StatsDataSource.open(StatsDataSource.java:84)\r\n        at com.google.android.exoplayer2.source.ProgressiveMediaPeriod$ExtractingLoadable.load(ProgressiveMediaPeriod.java:1013)\r\n        at com.google.android.exoplayer2.upstream.Loader$LoadTask.run(Loader.java:409)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)\r\n        at java.lang.Thread.run(Thread.java:923)\r\n     Caused by: java.net.SocketTimeoutException\r\n        at com.google.android.exoplayer2.ext.cronet.CronetDataSource.open(CronetDataSource.java:672)\r\n        at com.google.android.exoplayer2.upstream.DefaultDataSource.open(DefaultDataSource.java:258) \r\n        at com.google.android.exoplayer2.upstream.cache.CacheDataSource.openNextSource(CacheDataSource.java:776) \r\n        at com.google.android.exoplayer2.upstream.cache.CacheDataSource.open(CacheDataSource.java:589) \r\n        at com.google.android.exoplayer2.upstream.StatsDataSource.open(StatsDataSource.java:84) \r\n        at com.google.android.exoplayer2.source.ProgressiveMediaPeriod$ExtractingLoadable.load(ProgressiveMediaPeriod.java:1013) \r\n        at com.google.android.exoplayer2.upstream.Loader$LoadTask.run(Loader.java:409) \r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167) \r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641) \r\n        at java.lang.Thread.run(Thread.java:923) \r\n    ]\r\n\r\n```\r\n"
      },
      {
        "user": "menscikov",
        "created_at": "2022-01-12T14:05:48Z",
        "body": "Hello, thank you for testing the video stream. One of my users reported about this issue.\r\nI will send him this information."
      },
      {
        "user": "icbaker",
        "created_at": "2022-02-08T10:20:25Z",
        "body": "Closing due to inactivity"
      }
    ]
  },
  {
    "number": 9846,
    "title": "Same video with different  url  and resolution",
    "created_at": "2022-01-08T22:54:37Z",
    "closed_at": "2022-02-08T10:20:47Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9846",
    "body": "I have same video with different url and resolution. How can I change video quality ?. I'm sorry my question may seem unclear and you ask me to use mu38 manifest but that's not posible since I have created the web app using html5 and html5 support creating source with different url and different resolution , but exoplayer only support dash and mu38 for quality change which is bad for me and my partner cos we can change existing content and database structure. Is there a way for me to change quality , providing different mp4 URL in exoplayer?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9846/comments",
    "author": "ghost",
    "comments": [
      {
        "user": "icbaker",
        "created_at": "2022-01-10T13:35:03Z",
        "body": "> Is there a way for me to change quality , providing different mp4 URL in exoplayer?\r\n\r\nIf you don't want to use a spec designed to provide seamless adaption between different resolution variants (e.g. DASH or HLS) then one way to switch to playing a new URL is simply to call `Player.setMediaItem` with a new `MediaItem` pointing at the new URL. You can pass in the `startPositionMs`, which will allow playback to start at the current position in the new URL. Note that this will **not** be seamless, because the player will need to buffer the new content and pre-feed the decoder. If you want the transitions between different resolutions to be seamless then (as you predict) I recommend you use DASH or HLS."
      },
      {
        "user": "icbaker",
        "created_at": "2022-02-08T10:20:47Z",
        "body": "Closing due to inactivity"
      }
    ]
  },
  {
    "number": 9842,
    "title": "How does ExoPlayer access Subtitles files on Android 11?",
    "created_at": "2022-01-06T13:59:51Z",
    "closed_at": "2022-01-07T13:46:16Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9842",
    "body": "Hello. I have noticed that when I provide ExoPlayer with the subtitles file real path it is able to display it (without issues) on video without the app having `MANAGE_EXTERNAL_STORAGE` permission and without asking the user to select a path or file using APIs. How is this possible? Thank you.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9842/comments",
    "author": "ghost",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2022-01-07T13:46:16Z",
        "body": "ExoPlayer doesn't do anything special to access files. We use `RandomAccessFile` to read `file:///` URIs, which is a standard API. So either you're mistaken that the permission is required for the specific case, or you're mistaken that the app doesn't have the permission, or there's something wrong with the platform permission enforcement. The final one seems fairly unlikely to me.\r\n\r\nClosing this, since you should find that reading the file directly using `RandomAccessFile` also succeeds, in which case even in the unlikely event that there is an issue, it would be in the underlying platform rather than in ExoPlayer."
      }
    ]
  },
  {
    "number": 9829,
    "title": "Stereoscopic(Left-Right) video to single frame(Left or Right) ",
    "created_at": "2022-01-03T11:49:16Z",
    "closed_at": "2022-01-04T15:38:31Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9829",
    "body": "\r\n###  Use case description\r\n\r\nWe are working on building 2d-3d video player, which basically playing stereoscopic(left-right) view in Exoplayer. Now we wanted an ability to switch from left-right(side by side) to single frame view(left or right only) and vise versa in same video content.\r\n\r\n### Proposed solution\r\nAs seen in exoplayer support, **SimpleExoPlayerView** has ablity to define **surface_type=\"spherical_gl_surface_view\"** but it converts side by side view to single frame in 360 degree mode, which is not required. So wanted same but not in VR or 360 degree mode but normal mode(no rotation but still show video like 2d) with either left view or right view only.\r\n\r\nIs there any alternet surface type available for given feature request?\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9829/comments",
    "author": "airtel121",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2022-01-04T15:38:31Z",
        "body": "This is not something we support out of the box, so you would need to build your own UI components to do this rather than relying on `PlayerView`/`StyledPlayerView`."
      }
    ]
  },
  {
    "number": 9818,
    "title": "Get ad information from DASH manifest where ad is SSAI.",
    "created_at": "2021-12-28T12:34:14Z",
    "closed_at": "2021-12-28T13:55:02Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9818",
    "body": "From my dash manifest I need to get some advt information which is part of event stream objects.\r\nThe ads are being inserted on server side via SSAI.\r\nI am using the function `onTimelineChanged` but it gets called multiple times. And I am unable to get when the ad is being started or completed.\r\nIs there any other method or callback for SSAI ads on DASH? \r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9818/comments",
    "author": "wishygupta",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2021-12-28T12:52:04Z",
        "body": "There is a list of `EventStream` objects in the `Period` of the `DashManifest`. You can access the manifest as soon as you receive a timeline update for a reason of `TIMELINE_CHANGE_REASON_SOURCE_UPDATE`. If the dash stream is the only media item that is in the playlist, the code below show how you can access the manifest with `player.getCurrentManifest()` and the `EventStream` information that is in the manifest.\r\n\r\n```\r\n    @Override\r\n    public void onTimelineChanged(Timeline timeline, @Player.TimelineChangeReason int reason) {\r\n      if (reason == Player.TIMELINE_CHANGE_REASON_SOURCE_UPDATE) {\r\n        // assuming the stream in question is the only media item in the playlist\r\n        DashManifest manifest = (DashManifest) player.getCurrentManifest();\r\n        for (int i = 0; i < manifest.getPeriodCount(); i++) {\r\n          for (int j = 0; j < manifest.getPeriod(i).eventStreams.size(); j++) {\r\n            // Here we go.\r\n          }\r\n        }\r\n      }\r\n    }\r\n```\r\n\r\nI'm not sure whether you also need information of timed metadata that may be delivered as in-band metadata. In such a case you should be able to listen to the arrival of timed metadata by using the `onMetadata` callback of the `Player.Listener`. \r\n\r\n```\r\n    @Override\r\n    public void onMetadata(Metadata metadata) {\r\n        // timed metadata arrived...\r\n    }\r\n```"
      },
      {
        "user": "wishygupta",
        "created_at": "2021-12-28T13:55:02Z",
        "body": "Thank you for the response. I can get started with this."
      }
    ]
  },
  {
    "number": 9783,
    "title": "Execution failed for task ':extension-ffmpeg:configureCMakeRelWithDebInfo'.",
    "created_at": "2021-12-14T08:37:10Z",
    "closed_at": "2021-12-14T09:27:12Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9783",
    "body": "when i assembleRelease extension-ffmpeg\r\n\r\nextensions/ffmpeg/src/main/jni/ffmpeg/android-libs/ -->>\r\narmeabi-v7a/libavcodec.a\r\narmeabi-v7a/libavutil.a\r\narmeabi-v7a/libswresample.a\r\n\r\nExecution failed for task ':extension-ffmpeg:configureCMakeRelWithDebInfo'.\r\n> java.lang.NullPointerException (no error message)",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9783/comments",
    "author": "JiannaiJ",
    "comments": [
      {
        "user": "Gnzlt",
        "created_at": "2021-12-16T09:20:33Z",
        "body": "I'm having the same issue, any update on this?"
      }
    ]
  },
  {
    "number": 9768,
    "title": "Can Exoplayer IMA extension only play ads without providing content url ?",
    "created_at": "2021-12-08T08:19:26Z",
    "closed_at": "2022-01-31T13:57:01Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9768",
    "body": "We have an OTT platform app, where we manage content playback via custom player(not exoplayer) also we serve DFP video ads in between the content. Previously we were using IMA sdk 3.22.0 where this sdk was handling the ads playback with there own in built player. But with latest sdk version they have deprecated those methods and expect app to handle ads playback via VideoAdPlayer interface, which requires app to manage ads playback. \r\n\r\nGoogle team has suggested to use exoplayer IMA extension if we do not wish to manage ads playback. But after checking documents for IMA extensions, it requires us to provide content url as well. We are already managing content playback via a different player and wants only ad playback to managed by IMA extension. Is that possible ?\r\n\r\nOr only way out of this is to manage ads playback via custom implementation using VideoAdPlayer ?\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9768/comments",
    "author": "chinmaymujumdar",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2021-12-09T16:54:24Z",
        "body": "ExoPlayer's IMA integration was written to work well with ExoPlayer playbacks, in particular since you need to send IMA events corresponding to playback positions, making sure the content is paused at the right time and the right ad metadata is received before needing to play the ad. Looking at it in this way, the player you are using would need its own IMA integration that does all that for you (and this implementation would be based on the `VideoAdPlayer` interface).\r\n\r\nHaving said that, you can still try to use ExoPlayer's IMA integration to play ads without content. For example, you can use a `SilenceMediaSource` to create empty content. See #9145 or #7929 where this has come up before. This integration only works well if you want to show a single ad without further playback integration. It gets more complicated if you want to make sure that this ExoPlayer instance \"plays\" in sync with your player if you want the ads to be shown at the right time for example. "
      },
      {
        "user": "chinmaymujumdar",
        "created_at": "2021-12-10T13:00:07Z",
        "body": "So in that case we cannot use Exoplayer IMA extension as we need to play vmap ads(adrule) which has pre-roll, multiple midrolls and post-roll. \r\n\r\nAlso old IMA sdk had their own in built player which was accessible using below method.\r\n\r\nAdDisplayContainer adDisplayContainer = mSdkFactory.createAdDisplayContainer();\r\nadDisplayContainer.setAdContainer(videoAdContainer);\r\n\r\nBut this seems to be deprecated now and only options(based on the sample apps) are using Exoplayer IMA extension or to use VideoAdPlayer interface. \r\n\r\nUsing VideoAdPlayer interface requires app to manage ad playback, Ima sdk will send us the url of the ad to play. But app will use its own player to play ads and will update the sdk about content and ad progress via VideoAdPlayer interface callbacks. (This is what they have done in their advance sample app)\r\n\r\nAny idea why IMA sdk team have stopped supporting their in built player ? or it is available to use via some other methods ? This seems odd that this funtionality is still available in IOS sdk.\r\n"
      },
      {
        "user": "tonihei",
        "created_at": "2021-12-13T10:23:16Z",
        "body": "If you were using the built-in IMA player, you'd have to same problem that your player and the IMA player need to be kept in sync (e.g. to pause playback while an ad is playing). So with a custom player, it's really the best option to handle the interaction with IMA directly as shown in their \"Advanced sample app\".\r\n\r\nSince ExoPlayer supports simple and straight-forward integration with IMA, there is also no reason to have this IMA-internal player anymore, as you can easily create an ExoPlayer instance and connect it to the IMA SDK. This gives you the same setup the previous built-in player provided."
      },
      {
        "user": "tonihei",
        "created_at": "2022-01-31T13:57:01Z",
        "body": "Closing issue as the question was answered."
      }
    ]
  },
  {
    "number": 9766,
    "title": "getMetrics usage for MediaCodecAdapter",
    "created_at": "2021-12-08T00:31:47Z",
    "closed_at": "2021-12-15T12:36:19Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9766",
    "body": "is the api getMetrics() supported with the new MediaCodecAdapter  in exoplayer library 2.15.1 or newer\r\n\r\nI have been using the getMetrics() api to retrieve information like Encoder/Decoder/Ht/Width and other information for the codec created. But in the new library, we migrated to using MediaCodecAdapter instead of MediaCodec. I do not see the getMetrics api supported for this? Is this something that will be added in future versions or is there a different approach for usage of this api.\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9766/comments",
    "author": "harini113",
    "comments": [
      {
        "user": "harini113",
        "created_at": "2021-12-14T18:29:25Z",
        "body": "hi christosts, Any update on the usage?"
      },
      {
        "user": "christosts",
        "created_at": "2021-12-15T10:12:23Z",
        "body": "We will add getMetric() on MediaCodecAdapter - I will post an update once the commit is submitted."
      },
      {
        "user": "christosts",
        "created_at": "2021-12-15T12:36:19Z",
        "body": "Please see the commit linked above - the API will be available on the next release"
      },
      {
        "user": "harini113",
        "created_at": "2021-12-15T18:18:47Z",
        "body": "thank you"
      }
    ]
  },
  {
    "number": 9751,
    "title": "seekToPrevious() in PlayerControlView can't change to the previous mediaItem",
    "created_at": "2021-12-02T10:18:02Z",
    "closed_at": "2021-12-02T12:25:54Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9751",
    "body": "I'm used PlayeControlView in the xml layout, when I clicked previous button, it's just seek to the start of current mediaItem.\r\n\r\nI find that there is a method `seekToPreviousMediaItem()` , but in PlayeControlView, it's called `seekToPrevious()`, then it's will get the current playing position and judge is change to previous or seek to 0 of current item.\r\n\r\nI just want to change the previous item, but I can't control it if I use PlayeControlView ,since I can't override the onClick()\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9751/comments",
    "author": "lizebinbin",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2021-12-02T12:25:54Z",
        "body": "You can achieve this by wrapping the player in a `ForwardingPlayer`, and overriding the `seekToPrevious()` behavior:\r\n\r\n```\r\nPlayer forwardingPlayer = new ForwardingPlayer(player) {\r\n  @Override\r\n  public long getMaxSeekToPreviousPosition() {\r\n      return 0;\r\n  }\r\n  @Override\r\n  public final void seekToPrevious() {\r\n    seekToPreviousMediaItem();\r\n  }\r\n};\r\nplayerView.setPlayer(forwardingPlayer);\r\n``` "
      },
      {
        "user": "lizebinbin",
        "created_at": "2021-12-03T03:29:02Z",
        "body": "than\r\n\r\n> You can achieve this by wrapping the player in a `ForwardingPlayer`, and overriding the `seekToPrevious()` behavior:\r\n> \r\n> ```\r\n> Player forwardingPlayer = new ForwardingPlayer(player) {\r\n>   @Override\r\n>   public long getMaxSeekToPreviousPosition() {\r\n>       return 0;\r\n>   }\r\n>   @Override\r\n>   public final void seekToPrevious() {\r\n>     seekToPreviousMediaItem();\r\n>   }\r\n> };\r\n> playerView.setPlayer(forwardingPlayer);\r\n> ```\r\n\r\nThanks～"
      }
    ]
  },
  {
    "number": 9723,
    "title": "[Chromecast] ExoPlayer integration with the ShakaPlayer Receiver.",
    "created_at": "2021-11-24T00:27:33Z",
    "closed_at": "2021-11-30T14:37:11Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9723",
    "body": "Has anyone done an implementation of ExoPlayer with the Shaka Receiver rather than the Chromecast default/custom receivers?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9723/comments",
    "author": "ProtoScott",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2021-11-25T10:00:03Z",
        "body": "There was some previous work in this area (see #5486), but this has been suspended and [deleted](go/gh/google/ExoPlayer/commit/7798c07f64d58a5363ff2af1a72cdcad9a8ae2de) and never published. We are more likely to continue improving the existing `CastPlayer` working with the default receiver."
      },
      {
        "user": "ProtoScott",
        "created_at": "2021-11-25T18:49:45Z",
        "body": "Okay thanks for the info, we're going to look into either update the existing CastPlayer to support a conversion to a Shaka MediaItem or look at updating the Shaka Receiver to support the ExoPlayer MediaItem."
      },
      {
        "user": "tonihei",
        "created_at": "2021-11-30T14:37:11Z",
        "body": "Closing because the question was answered."
      }
    ]
  },
  {
    "number": 9703,
    "title": "Is it possible to play the RTSP even though it has a video codec error?",
    "created_at": "2021-11-17T22:30:46Z",
    "closed_at": "2021-11-18T15:26:11Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9703",
    "body": "\r\nHi, I hope you're doing well.\r\n\r\nI'm working on playing RTSP streaming and ExoPlayer works well with most cameras.\r\nHowever, with some conditions, it gives me the errors about video codec error.\r\n\r\nI was trying to play 4k streaming, which has 4512x1728 resolution. \r\n\r\n```\r\n11-17 17:20:44.477 D/RtspClient( 4740): OPTIONS rtsp://192.168.1.43:554/live1s2.sdp RTSP/1.0\r\n11-17 17:20:44.477 D/RtspClient( 4740): User-Agent: ExoPlayerLib/2.16.0\r\n11-17 17:20:44.477 D/RtspClient( 4740): CSeq: 0\r\n11-17 17:20:44.477 D/RtspClient( 4740):\r\n11-17 17:20:44.506 D/RtspClient( 4740): RTSP/1.0 200 OK\r\n11-17 17:20:44.506 D/RtspClient( 4740): CSeq: 0\r\n11-17 17:20:44.506 D/RtspClient( 4740): Date: Wed, 17 Nov 2021 22:20:43 GMT\r\n11-17 17:20:44.506 D/RtspClient( 4740): Public: OPTIONS, DESCRIBE, PLAY, SETUP, GET_PARAMETER, SET_PARAMETER, TEARDOWN\r\n11-17 17:20:44.519 D/RtspClient( 4740): DESCRIBE rtsp://192.168.1.43:554/live1s2.sdp RTSP/1.0\r\n11-17 17:20:44.519 D/RtspClient( 4740): User-Agent: ExoPlayerLib/2.16.0\r\n11-17 17:20:44.519 D/RtspClient( 4740): CSeq: 1\r\n11-17 17:20:44.519 D/RtspClient( 4740):\r\n11-17 17:20:44.570 D/RtspClient( 4740): RTSP/1.0 401 Unauthorized\r\n11-17 17:20:44.570 D/RtspClient( 4740): CSeq: 1\r\n11-17 17:20:44.570 D/RtspClient( 4740): WWW-Authenticate: Digest realm=\"streaming_server\", nonce=\"bed07d3d474bfc88f3dd9f01d35154c7\", algorithm=MD5, qop=\"auth\"\r\n11-17 17:20:44.597 D/RtspClient( 4740): DESCRIBE rtsp://192.168.1.43:554/live1s2.sdp RTSP/1.0\r\n11-17 17:20:44.597 D/RtspClient( 4740): User-Agent: ExoPlayerLib/2.16.0\r\n11-17 17:20:44.597 D/RtspClient( 4740): CSeq: 2\r\n11-17 17:20:44.597 D/RtspClient( 4740): Authorization: Digest username=\"viewer\", realm=\"streaming_server\", nonce=\"bed07d3d474bfc88f3dd9f01d35154c7\", uri=\"rtsp://192.168.1.43:554/live1s2.sdp\", response=\"d719fa73ebd31dca149df148d72db12e\"\r\n11-17 17:20:44.597 D/RtspClient( 4740):\r\n11-17 17:20:44.893 D/RtspClient( 4740): RTSP/1.0 200 OK\r\n11-17 17:20:44.893 D/RtspClient( 4740): CSeq: 2\r\n11-17 17:20:44.893 D/RtspClient( 4740): Date: Wed, 17 Nov 2021 22:20:43 GMT\r\n11-17 17:20:44.893 D/RtspClient( 4740): Content-base: rtsp://192.168.1.43:554/live1s2.sdp/\r\n11-17 17:20:44.893 D/RtspClient( 4740): Content-Type: application/sdp\r\n11-17 17:20:44.893 D/RtspClient( 4740): Content-Length: 774\r\n11-17 17:20:44.893 D/RtspClient( 4740):\r\n11-17 17:20:44.893 D/RtspClient( 4740): v=0\r\n11-17 17:20:44.893 D/RtspClient( 4740): o=RTSP 1637187643 788 IN IP4 0.0.0.0\r\n11-17 17:20:44.893 D/RtspClient( 4740): s=RTSP server\r\n11-17 17:20:44.893 D/RtspClient( 4740): c=IN IP4 0.0.0.0\r\n11-17 17:20:44.893 D/RtspClient( 4740): t=0 0\r\n11-17 17:20:44.893 D/RtspClient( 4740): a=charset:Shift_JIS\r\n11-17 17:20:44.893 D/RtspClient( 4740): a=range:npt=0-\r\n11-17 17:20:44.893 D/RtspClient( 4740): a=control:*\r\n11-17 17:20:44.893 D/RtspClient( 4740): a=etag:1234567890\r\n11-17 17:20:44.893 D/RtspClient( 4740): m=video 0 RTP/AVP 98\r\n11-17 17:20:44.893 D/RtspClient( 4740): a=rtpmap:98 H264/90000\r\n11-17 17:20:44.893 D/RtspClient( 4740): a=control:trackID=3\r\n11-17 17:20:44.893 D/RtspClient( 4740): a=x-onvif-track:trackID=3\r\n11-17 17:20:44.893 D/RtspClient( 4740): a=fmtp:98 packetization-mode=1; profile-level-id=4d0033; sprop-parameter-sets=Z00AM5Y1wCNAbNNwEBAQIA==,aO48gA==\r\n11-17 17:20:44.893 D/RtspClient( 4740): a=recvonly\r\n11-17 17:20:44.893 D/RtspClient( 4740): m=audio 0 RTP/AVP 97\r\n11-17 17:20:44.893 D/RtspClient( 4740): a=rtpmap:97 mpeg4-generic/16000/2\r\n11-17 17:20:44.893 D/RtspClient( 4740): a=fmtp:97 streamtype=5; profile-level-id=15; mode=AAC-hbr; config=1410; SizeLength=13; IndexLength=3; IndexDeltaLength=3; CTSDeltaLength=0; DTSDeltaLength=0\r\n11-17 17:20:44.893 D/RtspClient( 4740): a=control:trackID=0\r\n11-17 17:20:44.893 D/RtspClient( 4740): a=x-onvif-track:trackID=0\r\n11-17 17:20:44.893 D/RtspClient( 4740): a=recvonly\r\n11-17 17:20:44.893 D/RtspClient( 4740): m=application 0 RTP/AVP 107\r\n11-17 17:20:44.893 D/RtspClient( 4740): a=control:trackID=1\r\n11-17 17:20:44.893 D/RtspClient( 4740): a=x-onvif-track:trackID=1\r\n11-17 17:20:44.893 D/RtspClient( 4740): a=rtpmap:107 vnd.onvif.metadata/90000\r\n11-17 17:20:44.893 D/RtspClient( 4740): a=recvonly\r\n```\r\n\r\nand\r\n```\r\n11-17 17:20:47.756 E/MediaCodecVideoRenderer( 4740): Video codec error\r\n11-17 17:20:47.756 E/MediaCodecVideoRenderer( 4740):   java.lang.IllegalStateException\r\n11-17 17:20:47.756 E/MediaCodecVideoRenderer( 4740):       at android.media.MediaCodec.native_dequeueOutputBuffer(Native Method)\r\n11-17 17:20:47.756 E/MediaCodecVideoRenderer( 4740):       at android.media.MediaCodec.dequeueOutputBuffer(MediaCodec.java:2698)\r\n11-17 17:20:47.756 E/MediaCodecVideoRenderer( 4740):       at com.google.android.exoplayer2.mediacodec.SynchronousMediaCodecAdapter.dequeueOutputBufferIndex(SynchronousMediaCodecAdapter.java:122)\r\n11-17 17:20:47.756 E/MediaCodecVideoRenderer( 4740):       at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.drainOutputBuffer(MediaCodecRenderer.java:1764)\r\n11-17 17:20:47.756 E/MediaCodecVideoRenderer( 4740):       at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.render(MediaCodecRenderer.java:778)\r\n11-17 17:20:47.756 E/MediaCodecVideoRenderer( 4740):       at com.google.android.exoplayer2.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:982)\r\n11-17 17:20:47.756 E/MediaCodecVideoRenderer( 4740):       at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:486)\r\n11-17 17:20:47.756 E/MediaCodecVideoRenderer( 4740):       at android.os.Handler.dispatchMessage(Handler.java:102)\r\n11-17 17:20:47.756 E/MediaCodecVideoRenderer( 4740):       at android.os.Looper.loop(Looper.java:193)\r\n11-17 17:20:47.756 E/MediaCodecVideoRenderer( 4740):       at android.os.HandlerThread.run(HandlerThread.java:65)\r\n11-17 17:20:47.757 D/MediaCodecInfo( 4740): NoSupport [sizeAndRate.support, 4512x1728x-1.0] [OMX.MS.AVC.Decoder, video/avc] [xinhaoshan, HiSmart 4K ATV4, Hisense, 28]\r\n11-17 17:20:47.758 D/MediaCodecInfo( 4740): NoSupport [sizeAndRate.support, 4512x1728x-1.0] [OMX.google.h264.decoder, video/avc] [xinhaoshan, HiSmart 4K ATV4, Hisense, 28]\r\n11-17 17:20:47.764 D/MediaCodecInfo( 4740): NoSupport [sizeAndRate.support, 4512x1728x-1.0] [OMX.MS.AVC.Decoder, video/avc] [xinhaoshan, HiSmart 4K ATV4, Hisense, 28]\r\n11-17 17:20:47.788 E/ExoPlayerImplInternal( 4740): Playback error\r\n11-17 17:20:47.788 E/ExoPlayerImplInternal( 4740):   com.google.android.exoplayer2.ExoPlaybackException: MediaCodecVideoRenderer error, index=0, format=Format(null, null, null, video/avc, avc1.4d0033, -1, null, [4512, 1728, -1.0], [-1, -1]), format_supported=NO_EXCEEDS_CAPABILITIES\r\n11-17 17:20:47.788 E/ExoPlayerImplInternal( 4740):       at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:562)\r\n11-17 17:20:47.788 E/ExoPlayerImplInternal( 4740):       at android.os.Handler.dispatchMessage(Handler.java:102)\r\n11-17 17:20:47.788 E/ExoPlayerImplInternal( 4740):       at android.os.Looper.loop(Looper.java:193)\r\n11-17 17:20:47.788 E/ExoPlayerImplInternal( 4740):       at android.os.HandlerThread.run(HandlerThread.java:65)\r\n11-17 17:20:47.788 E/ExoPlayerImplInternal( 4740):   Caused by: com.google.android.exoplayer2.video.MediaCodecVideoDecoderException: Decoder failed: OMX.MS.AVC.Decoder\r\n11-17 17:20:47.788 E/ExoPlayerImplInternal( 4740):       at com.google.android.exoplayer2.video.MediaCodecVideoRenderer.createDecoderException(MediaCodecVideoRenderer.java:1470)\r\n11-17 17:20:47.788 E/ExoPlayerImplInternal( 4740):       at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.render(MediaCodecRenderer.java:799)\r\n11-17 17:20:47.788 E/ExoPlayerImplInternal( 4740):       at com.google.android.exoplayer2.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:982)\r\n11-17 17:20:47.788 E/ExoPlayerImplInternal( 4740):       at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:486)\r\n11-17 17:20:47.788 E/ExoPlayerImplInternal( 4740):       ... 3 more\r\n11-17 17:20:47.788 E/ExoPlayerImplInternal( 4740):   Caused by: java.lang.IllegalStateException\r\n11-17 17:20:47.788 E/ExoPlayerImplInternal( 4740):       at android.media.MediaCodec.native_dequeueOutputBuffer(Native Method)\r\n11-17 17:20:47.788 E/ExoPlayerImplInternal( 4740):       at android.media.MediaCodec.dequeueOutputBuffer(MediaCodec.java:2698)\r\n11-17 17:20:47.788 E/ExoPlayerImplInternal( 4740):       at com.google.android.exoplayer2.mediacodec.SynchronousMediaCodecAdapter.dequeueOutputBufferIndex(SynchronousMediaCodecAdapter.java:122)\r\n11-17 17:20:47.788 E/ExoPlayerImplInternal( 4740):       at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.drainOutputBuffer(MediaCodecRenderer.java:1764)\r\n11-17 17:20:47.788 E/ExoPlayerImplInternal( 4740):       at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.render(MediaCodecRenderer.java:778)\r\n11-17 17:20:47.788 E/ExoPlayerImplInternal( 4740):       ... 5 more\r\n11-17 17:20:47.805 D/PlaybackVideoFragment( 4740): onVideoDisabled()\r\n11-17 17:20:47.806 E/ExoPlayerImplInternal( 4740): Disable failed.\r\n11-17 17:20:47.806 E/ExoPlayerImplInternal( 4740):   java.lang.IllegalStateException\r\n11-17 17:20:47.806 E/ExoPlayerImplInternal( 4740):       at android.media.MediaCodec.native_flush(Native Method)\r\n11-17 17:20:47.806 E/ExoPlayerImplInternal( 4740):       at android.media.MediaCodec.flush(MediaCodec.java:2131)\r\n11-17 17:20:47.806 E/ExoPlayerImplInternal( 4740):       at com.google.android.exoplayer2.mediacodec.SynchronousMediaCodecAdapter.flush(SynchronousMediaCodecAdapter.java:188)\r\n11-17 17:20:47.806 E/ExoPlayerImplInternal( 4740):       at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.flushCodec(MediaCodecRenderer.java:850)\r\n11-17 17:20:47.806 E/ExoPlayerImplInternal( 4740):       at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.flushOrReleaseCodec(MediaCodecRenderer.java:843)\r\n11-17 17:20:47.806 E/ExoPlayerImplInternal( 4740):       at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.onDisabled(MediaCodecRenderer.java:696)\r\n11-17 17:20:47.806 E/ExoPlayerImplInternal( 4740):       at com.google.android.exoplayer2.video.MediaCodecVideoRenderer.onDisabled(MediaCodecVideoRenderer.java:529)\r\n11-17 17:20:47.806 E/ExoPlayerImplInternal( 4740):       at com.google.android.exoplayer2.BaseRenderer.disable(BaseRenderer.java:178)\r\n11-17 17:20:47.806 E/ExoPlayerImplInternal( 4740):       at com.google.android.exoplayer2.ExoPlayerImplInternal.disableRenderer(ExoPlayerImplInternal.java:1642)\r\n11-17 17:20:47.806 E/ExoPlayerImplInternal( 4740):       at com.google.android.exoplayer2.ExoPlayerImplInternal.resetInternal(ExoPlayerImplInternal.java:1382)\r\n11-17 17:20:47.806 E/ExoPlayerImplInternal( 4740):       at com.google.android.exoplayer2.ExoPlayerImplInternal.stopInternal(ExoPlayerImplInternal.java:1345)\r\n11-17 17:20:47.806 E/ExoPlayerImplInternal( 4740):       at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:578)\r\n11-17 17:20:47.806 E/ExoPlayerImplInternal( 4740):       at android.os.Handler.dispatchMessage(Handler.java:102)\r\n11-17 17:20:47.806 E/ExoPlayerImplInternal( 4740):       at android.os.Looper.loop(Looper.java:193)\r\n11-17 17:20:47.806 E/ExoPlayerImplInternal( 4740):       at android.os.HandlerThread.run(HandlerThread.java:65)\r\n```\r\n\r\nWith the resolution 3840x1536, it plays well, but we need to provide the highest resolution. Because it connects with the other services.\r\n\r\nAnd I tried to use vlc-android-library, yeah it works well with 4512x1728 resolution, it's cool, but its apk file size is about 160 mb. The library has lots of native libraries.\r\n\r\nWith ExoPlayer, its size is just 6 mb.\r\n\r\nSo my question is\r\n**1. Do you have something to help me to resolve this?**\r\n\r\n**2. If no, do you have a plan to support 4512x1728 resolution to play RTSP streaming?**",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9703/comments",
    "author": "yeojoyjob",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2021-11-18T11:54:44Z",
        "body": "This is not RTSP specific I think except that in contrast to a adaptive streaming format with RTSP the is no way to adapt to a  lower quality as far as I can tell.\r\n\r\nLike you say and see in the error message the resolution in question gives a `NO_EXCEEDS_CAPABILITIES` for the decoder on the given device that apparently is a `HiSmart 4K ATV4, Hisense, 28`. I don't think there is much you can do against this with the given decoder. I'm not sure what vlc is doing but like you say when referring to native libraries they are probably doing this in software? I can't tell to be honest and I'm not sure whether it is advisable to do so for the highest resolution when lower resolution is decoded in hardware. If you want to try this I think it's about providing a renderer that is using software codecs instead for a device that can not support it in hardware.\r\n\r\n"
      },
      {
        "user": "yeojoyjob",
        "created_at": "2021-11-18T15:26:11Z",
        "body": "Thank you"
      }
    ]
  },
  {
    "number": 9693,
    "title": "Custom DataSource.Factory with different headers",
    "created_at": "2021-11-16T05:18:27Z",
    "closed_at": "2021-11-22T15:16:49Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9693",
    "body": "Hi Team,\r\n\r\nWe are using a Custom DataSource.Factory for playing the encrypted HLS content where we pass a Token in headers.\r\n\r\nBut when we are sideloading the Subtitles. The subtitles are not working because of the Header Token which we added for HLS content. \r\n\r\nIs there a way to overcome this situation?\r\nwhere we can exclude the header for subtitles through Custom DataSource.Factory.\r\n\r\nBelow is the Custom DataSpurce.Factory\r\n```\r\nclass CustomDataSourcesFactory\r\n/**\r\n * Constructs a DefaultHttpDataSourceFactory. Sets [ ][DefaultHttpDataSource.DEFAULT_CONNECT_TIMEOUT_MILLIS] as the connection timeout, [ ][DefaultHttpDataSource.DEFAULT_READ_TIMEOUT_MILLIS] as the read timeout and disables\r\n * cross-protocol redirects.\r\n *\r\n * @param userAgent The User-Agent string that should be used.\r\n */ @JvmOverloads constructor(\r\n    private val userAgent: String?,\r\n    private val token: String?,\r\n    @field:Nullable @param:Nullable private val listener: TransferListener? = null,\r\n    private val connectTimeoutMillis: Int = DefaultHttpDataSource.DEFAULT_CONNECT_TIMEOUT_MILLIS,\r\n    private val readTimeoutMillis: Int =\r\n        DefaultHttpDataSource.DEFAULT_READ_TIMEOUT_MILLIS,\r\n    private val allowCrossProtocolRedirects: Boolean = false\r\n) : BaseFactory() {\r\n\r\n    override fun createDataSourceInternal(\r\n        defaultRequestProperties: RequestProperties\r\n    ): HttpDataSource {\r\n        val defaultHttpDataSource = DefaultHttpDataSource(\r\n            userAgent, connectTimeoutMillis, readTimeoutMillis,\r\n            allowCrossProtocolRedirects, defaultRequestProperties\r\n        )\r\n        defaultHttpDataSource.setRequestProperty(AUTHORIZATION,\r\n            \"$BEARER$token\"\r\n        )\r\n        return defaultHttpDataSource\r\n    }\r\n}\r\n```\r\n\r\nPlease do let us know if any feasibility available.\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9693/comments",
    "author": "SashiWork",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2021-11-16T13:46:24Z",
        "body": "I'm not entirely sure how you are achieving what you do  from the information you provided. So I assume you are injecting your `CustomDataSourceFactory` to the `DefaultMediaSourrceFactory` which you then use for building your player. You then define the subtitles in a `MediaItem` which you pass to `player.setMediaItem(mediaItem)` or another media item based method.\r\n\r\nIf this is the case then the `DataSourceFactory` that you inject is used by the `DefaultMediaSourcefactory` for the content and the subtitles requests. So the token is sent to the server that serves the subtitle files as well as to the server that serves the HLS playlist and media files.\r\n\r\nThe `DefaultMediaSourceFactory` currently does not offer an API to set different `DataSourceFactory` for different request. I think you could solve this by using a `ResolvingDataSource.Factory` and implement a custom `Resolver`. This resolver would check whether it is a subtitle or an HLS request and then add the bearer token to HLS requests by modifiyng the `DataSpec`.\r\n\r\nAs an alternative, you can also create a custom `MediaSourceFactory` and use thiat factory when you build the player, but this would require you to kind of build all the features that are in `DefaultMediaSourceFactory` again (you can do a composite and delegate to an instance of the `DefaultMediaSourceFactory`, but you have to create a `MergedMediaSource` yourself and such things). Seems this is more complicated, so I'd look into the resolver first."
      },
      {
        "user": "SashiWork",
        "created_at": "2021-11-22T15:16:49Z",
        "body": "@marcbaechinger  thank you, the ```ResolvingDataSource.Factory```  worked for me. Cheers Mate"
      }
    ]
  },
  {
    "number": 9683,
    "title": "How to reset the back/forward increments on 2.16.0?",
    "created_at": "2021-11-11T11:08:53Z",
    "closed_at": "2021-11-12T12:29:40Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9683",
    "body": "I need to implement **multi-speed** fast-forward/backward when the user multi-tap the forward/backward button. \r\n\r\n> Remove ControlDispatcher and DefaultControlDispatcher. Operations can be customized by using a ForwardingPlayer, or when configuring the player (for example by using ExoPlayer.Builder.setSeekBackIncrementMs).\r\n\r\nThe above is written at the release note for 2.16.0\r\nwe were using the `DefaultControlDispatcher(long fastForwardIncrementMs, long rewindIncrementMs)` or `playerView.setFastForwardIncrementMs(positionOffset)`/`playerView.setRewindIncrementMs(positionOffset)`.\r\n\r\nbut this class is already removed. we should using `ExoPlayer.Builder.setSeekBackIncrementMs` according to the release note. but I can't see how we can reset the increments after the player is built.\r\n\r\nCould you guys please help to figure out it? maybe I am missing sth.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9683/comments",
    "author": "MiaJiaXa",
    "comments": [
      {
        "user": "christosts",
        "created_at": "2021-11-12T12:12:12Z",
        "body": "Let me confirm I understood the question, I also read your comments on #9492: In your app, when the user changes the player speed, you would re-construct the `DefaultControlDispatcher` with the updated `fastForwardIncrementMs` and  `rewindIncrementMs`, is this correct?\r\n\r\nIf my understanding is correct, you can achieve the same by using the `ForwardingPlayer`: wrap the `Player` in a `ForwardingPlayer` and override the `ForwardingPlayer``s `seekForward` and `seekBack` . Your implementation of these two methods can take the player's forward or backward increment values, multiply them by a factor (2x for double speed?) and then call `Player.seekTo` accordingly, for example\r\n\r\n```\r\nForwardingPlayer forwardingPlayer = new ForwardingPlayer(player) {\r\n      @Override\r\n      public void seekForward() {        \r\n        // Double the forward increment.\r\n        long seekForwardIncrement = player.getSeekForwardIncrement() * 2;\r\n        seekToOffset(seekForwardIncrement);\r\n      }\r\n\r\n      // Copied from DefaultContorlDispatcher implementation.\r\n      private void seekToOffset(long offsetMs) {\r\n        long positionMs = player.getCurrentPosition() + offsetMs;\r\n        long durationMs = player.getDuration();\r\n        if (durationMs != C.TIME_UNSET) {\r\n          positionMs = min(positionMs, durationMs);\r\n        }\r\n        positionMs = max(positionMs, 0);\r\n        player.seekTo(positionMs);\r\n      }\r\n    };\r\n```\r\n\r\nYou'll need of course to find a way to update the multiplication factors in your `ForwardingPlayer`, but that's a general programming task (e.g., you can subclass `ForwardingPlayer` and add additional setters). Please let me know if that works for your app, so we can close this issue."
      },
      {
        "user": "MiaJiaXa",
        "created_at": "2021-11-12T12:29:37Z",
        "body": "Yeah, It helped. A lot of thanks! @christosts  :)"
      }
    ]
  },
  {
    "number": 9656,
    "title": "Language Key from .m3u8 file doesn't match language key in track group",
    "created_at": "2021-11-07T06:47:26Z",
    "closed_at": "2021-11-08T21:42:15Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9656",
    "body": "In my .m3u8 file, I have a track for subtitles in Indonesian, with language key \"id\". \r\nIt looks like this: \r\n`#EXT-X-MEDIA:TYPE=SUBTITLES,GROUP-ID=\"subs\",NAME=\"Indonesian\",DEFAULT=NO,AUTOSELECT=YES,FORCED=NO,LANGUAGE=\"id\",URI=\"main_id.m3u8\"`\r\n\r\nAfter it's parsed into the player's track group, the language key is \"ms-ind-d\"\r\nIt looks like this: \r\n`Format(subs:Indonesian _ Indonesia, Indonesian _ Indonesia, application/x-mpegURL, text/vtt, null, -1, ms-ind-id, [-1, -1, -1.0], [-1, -1])`\r\n\r\nThe same thing happens with Norwegian. The language key in the .m3u8 file is \"nb\", but when it's parsed by the player, it becomes \"no-nob\".\r\n\r\nWhy does this happen?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9656/comments",
    "author": "tinder-sophiafrench",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2021-11-08T09:28:04Z",
        "body": "> Language Key from .m3u8 file doesn't match language key in track group\r\n\r\nThe reason why this happens in general is to allow comparison between values and ensuring everything is in the same format. ExoPlayer receives language keys from at least 3 different sources: The media itself (like the m3u8 file), user preferences that are set in the parameters (e.g. TrackSelectionParameters.preferredAudioLanguages) and also system Locale information. All 3 sources use potentially different formats and standards to represent a language, so we normalize all language input to a consistent format. \r\n\r\n> \"id\" to \"ms-ind\" and \"nb\" to\" no-nob\"\r\n\r\nOur chosen standardization format is ISO 639-1, including mapping all existing individual language codes within a macrolanguage to the equivalent full macrolanguage code. The macrolanguage code is the most modern representation and the only one we can easily use for normalization from all variants. For example, \"id\" is a code that was defined for Indonesian originally, but then the standardization body later introduced \"ms\" for the Malayan macrolanguage Indonesion is part of. So we map \"id\" to \"ms-ind\" and other deprecated codes like \"in\", \"ind\" are also mapped to \"ms-ind\".  The same happens for \"nb\", \"nob\" and \"no-bok\", which are all mapped to its full modern macrolanguage code of \"no-nob\"."
      },
      {
        "user": "tinder-sophiafrench",
        "created_at": "2021-11-08T21:42:15Z",
        "body": "Thank you for the explanation. "
      }
    ]
  },
  {
    "number": 9650,
    "title": "subtitle segments why not >=0",
    "created_at": "2021-11-05T08:37:35Z",
    "closed_at": "2021-12-06T02:04:30Z",
    "labels": [
      "question",
      "closed-by-bot"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9650",
    "body": "\r\nHlsChunckSource.java\r\n\r\n717 lines\r\nsuch as:\r\n\r\n```\r\nif (segmentIndexInPlaylist >= 0) {\r\n        // In case we are inside the live window, we try to pick a part if available.\r\n        Segment segment = mediaPlaylist.segments.get(segmentIndexInPlaylist);\r\n        List<HlsMediaPlaylist.Part> parts =\r\n            targetPositionInPlaylistUs < segment.relativeStartTimeUs + segment.durationUs\r\n                ? segment.parts\r\n                : mediaPlaylist.trailingParts;\r\n        for (int i = 0; i < parts.size(); i++) {\r\n          HlsMediaPlaylist.Part part = parts.get(i);\r\n          if (targetPositionInPlaylistUs < part.relativeStartTimeUs + part.durationUs) {\r\n            if (part.isIndependent) {\r\n              partIndex = i;\r\n              // Increase media sequence by one if the part is a trailing part.\r\n              mediaSequence += parts == mediaPlaylist.trailingParts ? 1 : 0;\r\n            }\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n```\r\n-------------------\r\n\r\n if (segmentIndexInPlaylist >= 0)\r\n\r\nmediaPlaylist.segments == 0  is erro. \r\n why not add check and exception \r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9650/comments",
    "author": "zcwfeng",
    "comments": [
      {
        "user": "icbaker",
        "created_at": "2021-11-05T09:23:14Z",
        "body": "Can you please add some more detail about what you're asking, and a little more context about the general problem you're seeing (if any). Thanks!"
      },
      {
        "user": "ojw28",
        "created_at": "2021-11-05T11:30:48Z",
        "body": "Is this about what happens if the media playlist is empty (i.e. `mediaPlaylist.segments.size() == 0`)? I can cause a playback to be stuck buffering if I give ExoPlayer the following empty VOD playlist.\r\n\r\n```\r\n#EXTM3U\r\n#EXT-X-TARGETDURATION:10\r\n#EXT-X-VERSION:3\r\n#EXT-X-MEDIA-SEQUENCE:0\r\n#EXT-X-PLAYLIST-TYPE:VOD\r\n#EXT-X-ENDLIST\r\n```\r\n\r\nInside the player, this is happening:\r\n\r\n```\r\njava.lang.IndexOutOfBoundsException: index (0) must be less than size (0)\r\n    at com.google.common.base.Preconditions.checkElementIndex(Preconditions.java:1402)\r\n    at com.google.common.base.Preconditions.checkElementIndex(Preconditions.java:1384)\r\n    at com.google.common.collect.RegularImmutableList.get(RegularImmutableList.java:77)\r\n    at com.google.android.exoplayer2.source.hls.HlsChunkSource.getNextMediaSequenceAndPartIndex(HlsChunkSource.java:719)\r\n    at com.google.android.exoplayer2.source.hls.HlsChunkSource.createMediaChunkIterators(HlsChunkSource.java:578)\r\n    at com.google.android.exoplayer2.source.hls.HlsChunkSource.getNextChunk(HlsChunkSource.java:331)\r\n    at com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper.continueLoading(HlsSampleStreamWrapper.java:740)\r\n    at com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper.continuePreparing(HlsSampleStreamWrapper.java:254)\r\n    at com.google.android.exoplayer2.source.hls.HlsMediaPeriod.buildAndPrepareSampleStreamWrappers(HlsMediaPeriod.java:540)\r\n    at com.google.android.exoplayer2.source.hls.HlsMediaPeriod.prepare(HlsMediaPeriod.java:161)\r\n```"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2021-11-25T02:04:32Z",
        "body": "<!-- event: mark-stale -->\nHey @zcwfeng. We need more information to resolve this issue but there hasn't been an update in 14 weekdays. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2021-12-06T02:04:30Z",
        "body": "<!-- event: close-stale -->\nSince there haven't been any recent updates here, I am going to close this issue.\n\n@zcwfeng if you're still experiencing this problem and want to continue the discussion just leave a comment here and we are happy to re-open this."
      }
    ]
  },
  {
    "number": 9641,
    "title": "ADTS Video can‘t play ，sometime have audio but no picture",
    "created_at": "2021-11-02T04:01:39Z",
    "closed_at": "2021-11-03T10:20:05Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9641",
    "body": "I use the offical demo to play a video.  No picture but have audio.  There haven't any obviously exception throw at logcat . \r\nIt play normally with AndroidPlayer and VLC. \r\n##### The test environment:\r\n- ExoPlayer version : 2.15.1\r\n- Android version:  7.1\r\n- Android device : Allwinner H6\r\n\r\nThe log at below:\r\n```\r\n2021-11-02 11:51:04.114 27809-27809/com.google.android.exoplayer2.demo I/ExoPlayerImpl: Init 37664fc [ExoPlayerLib/2.15.1] [petrel-p1, Qviart AG, Allwinner, 24]\r\n2021-11-02 11:51:04.124 27809-27809/com.google.android.exoplayer2.demo D/EventLogger: playWhenReady [eventTime=0.00, mediaPos=0.00, window=0, true, USER_REQUEST]\r\n2021-11-02 11:51:04.135 27809-27809/com.google.android.exoplayer2.demo D/EventLogger: timeline [eventTime=0.01, mediaPos=0.00, window=0, periodCount=2, windowCount=2, reason=PLAYLIST_CHANGED\r\n2021-11-02 11:51:04.135 27809-27809/com.google.android.exoplayer2.demo D/EventLogger:   period [?]\r\n2021-11-02 11:51:04.136 27809-27809/com.google.android.exoplayer2.demo D/EventLogger:   period [?]\r\n2021-11-02 11:51:04.136 27809-27809/com.google.android.exoplayer2.demo D/EventLogger:   window [?, seekable=false, dynamic=true]\r\n2021-11-02 11:51:04.136 27809-27809/com.google.android.exoplayer2.demo D/EventLogger:   window [?, seekable=false, dynamic=true]\r\n2021-11-02 11:51:04.136 27809-27809/com.google.android.exoplayer2.demo D/EventLogger: ]\r\n2021-11-02 11:51:04.137 27809-27809/com.google.android.exoplayer2.demo D/EventLogger: mediaItem [eventTime=0.01, mediaPos=0.00, window=0, reason=PLAYLIST_CHANGED]\r\n2021-11-02 11:51:04.146 27809-27809/com.google.android.exoplayer2.demo D/EventLogger: state [eventTime=0.02, mediaPos=0.00, window=0, BUFFERING]\r\n2021-11-02 11:51:04.190 27809-27809/com.google.android.exoplayer2.demo D/EventLogger: surfaceSize [eventTime=0.07, mediaPos=0.00, window=0, 1920, 1080]\r\n2021-11-02 11:51:04.202 27809-27809/com.google.android.exoplayer2.demo D/EventLogger: loading [eventTime=0.08, mediaPos=0.00, window=0, period=0, true]\r\n2021-11-02 11:51:04.204 27809-27809/com.google.android.exoplayer2.demo D/EventLogger: timeline [eventTime=0.08, mediaPos=0.00, window=0, period=0, periodCount=2, windowCount=2, reason=SOURCE_UPDATE\r\n2021-11-02 11:51:04.204 27809-27809/com.google.android.exoplayer2.demo D/EventLogger:   period [?]\r\n2021-11-02 11:51:04.204 27809-27809/com.google.android.exoplayer2.demo D/EventLogger:   period [?]\r\n2021-11-02 11:51:04.204 27809-27809/com.google.android.exoplayer2.demo D/EventLogger:   window [?, seekable=false, dynamic=false]\r\n2021-11-02 11:51:04.205 27809-27809/com.google.android.exoplayer2.demo D/EventLogger:   window [?, seekable=false, dynamic=true]\r\n2021-11-02 11:51:04.205 27809-27809/com.google.android.exoplayer2.demo D/EventLogger: ]\r\n2021-11-02 11:51:04.230 27809-30864/com.google.android.exoplayer2.demo I/OMXClient: MuxOMX ctor\r\n2021-11-02 11:51:04.242 27809-30863/com.google.android.exoplayer2.demo I/MediaCodec: [OMX.allwinner.video.decoder.avc] setting surface generation to 28476419\r\n2021-11-02 11:51:04.245 27809-30864/com.google.android.exoplayer2.demo E/ACodec: [OMX.allwinner.video.decoder.avc] storeMetaDataInBuffers failed w/ err -1010\r\n2021-11-02 11:51:04.260 27809-30864/com.google.android.exoplayer2.demo I/ACodec: codec does not support config priority (err -1010)\r\n2021-11-02 11:51:04.267 27809-30864/com.google.android.exoplayer2.demo W/ColorUtils: expected specified color aspects (2:3:3:0)\r\n2021-11-02 11:51:04.273 27809-30864/com.google.android.exoplayer2.demo D/ACodec: ** get afbchdr index: 0, 0, 7f100005\r\n2021-11-02 11:51:04.273 27809-30864/com.google.android.exoplayer2.demo D/ACodec: ** get afbchdr nExtendFlag: 0, 0, 0, 0\r\n2021-11-02 11:51:04.275 27809-30864/com.google.android.exoplayer2.demo D/SurfaceUtils: set up nativeWindow 0xe2c05308 for 720x576, color 0x13, rotation 0, usage 0x2900\r\n2021-11-02 11:51:04.279 27809-27809/com.google.android.exoplayer2.demo D/EventLogger: timeline [eventTime=0.16, mediaPos=0.00, window=0, period=0, periodCount=2, windowCount=2, reason=SOURCE_UPDATE\r\n2021-11-02 11:51:04.279 27809-27809/com.google.android.exoplayer2.demo D/EventLogger:   period [63.84]\r\n2021-11-02 11:51:04.279 27809-27809/com.google.android.exoplayer2.demo D/EventLogger:   period [?]\r\n2021-11-02 11:51:04.279 27809-27809/com.google.android.exoplayer2.demo D/EventLogger:   window [63.84, seekable=true, dynamic=false]\r\n2021-11-02 11:51:04.279 27809-27809/com.google.android.exoplayer2.demo D/EventLogger:   window [?, seekable=false, dynamic=true]\r\n2021-11-02 11:51:04.279 27809-27809/com.google.android.exoplayer2.demo D/EventLogger: ]\r\n2021-11-02 11:51:04.315 27809-27809/com.google.android.exoplayer2.demo D/EventLogger: videoEnabled [eventTime=0.19, mediaPos=0.00, window=0, period=0]\r\n2021-11-02 11:51:04.317 27809-27809/com.google.android.exoplayer2.demo D/EventLogger: audioEnabled [eventTime=0.19, mediaPos=0.00, window=0, period=0]\r\n2021-11-02 11:51:04.320 27809-27809/com.google.android.exoplayer2.demo D/EventLogger: tracks [eventTime=0.20, mediaPos=0.00, window=0, period=0\r\n2021-11-02 11:51:04.321 27809-27809/com.google.android.exoplayer2.demo D/EventLogger:   MediaCodecVideoRenderer [\r\n2021-11-02 11:51:04.321 27809-27809/com.google.android.exoplayer2.demo D/EventLogger:     Group:0, adaptive_supported=N/A [\r\n2021-11-02 11:51:04.321 27809-27809/com.google.android.exoplayer2.demo D/EventLogger:       [X] Track:0, id=1001/211, mimeType=video/avc, codecs=avc1.4D401E, res=720x576, supported=YES\r\n2021-11-02 11:51:04.321 27809-27809/com.google.android.exoplayer2.demo D/EventLogger:     ]\r\n2021-11-02 11:51:04.321 27809-27809/com.google.android.exoplayer2.demo D/EventLogger:   ]\r\n2021-11-02 11:51:04.321 27809-27809/com.google.android.exoplayer2.demo D/EventLogger:   MediaCodecAudioRenderer [\r\n2021-11-02 11:51:04.321 27809-27809/com.google.android.exoplayer2.demo D/EventLogger:     Group:0, adaptive_supported=N/A [\r\n2021-11-02 11:51:04.323 27809-27809/com.google.android.exoplayer2.demo D/EventLogger:       [X] Track:0, id=1001/221, mimeType=audio/mp4a-latm, codecs=mp4a.40.2, channels=2, sample_rate=48000, language=el, supported=YES\r\n2021-11-02 11:51:04.323 27809-27809/com.google.android.exoplayer2.demo D/EventLogger:     ]\r\n2021-11-02 11:51:04.323 27809-27809/com.google.android.exoplayer2.demo D/EventLogger:   ]\r\n2021-11-02 11:51:04.323 27809-27809/com.google.android.exoplayer2.demo D/EventLogger:   TextRenderer []\r\n2021-11-02 11:51:04.323 27809-27809/com.google.android.exoplayer2.demo D/EventLogger:   MetadataRenderer []\r\n2021-11-02 11:51:04.323 27809-27809/com.google.android.exoplayer2.demo D/EventLogger:   CameraMotionRenderer []\r\n2021-11-02 11:51:04.323 27809-27809/com.google.android.exoplayer2.demo D/EventLogger: ]\r\n2021-11-02 11:51:04.331 27809-27809/com.google.android.exoplayer2.demo D/EventLogger: downstreamFormat [eventTime=0.21, mediaPos=0.00, window=0, period=0, id=1001/211, mimeType=video/avc, codecs=avc1.4D401E, res=720x576]\r\n2021-11-02 11:51:04.340 27809-30874/com.google.android.exoplayer2.demo I/OMXClient: MuxOMX ctor\r\n2021-11-02 11:51:04.350 27809-30874/com.google.android.exoplayer2.demo I/ACodec: codec does not support config priority (err -2147483648)\r\n2021-11-02 11:51:04.350 27809-30874/com.google.android.exoplayer2.demo I/ACodec: codec does not support config operating rate (err -2147483648)\r\n2021-11-02 11:51:04.351 27809-27809/com.google.android.exoplayer2.demo D/EventLogger: videoDecoderInitialized [eventTime=0.23, mediaPos=0.00, window=0, period=0, OMX.allwinner.video.decoder.avc]\r\n2021-11-02 11:51:04.353 27809-27809/com.google.android.exoplayer2.demo D/EventLogger: videoInputFormat [eventTime=0.23, mediaPos=0.00, window=0, period=0, id=1001/211, mimeType=video/avc, codecs=avc1.4D401E, res=720x576]\r\n2021-11-02 11:51:04.354 27809-27809/com.google.android.exoplayer2.demo D/EventLogger: downstreamFormat [eventTime=0.23, mediaPos=0.00, window=0, period=0, id=1001/221, mimeType=audio/mp4a-latm, codecs=mp4a.40.2, channels=2, sample_rate=48000, language=el]\r\n2021-11-02 11:51:04.357 27809-27809/com.google.android.exoplayer2.demo D/EventLogger: audioDecoderInitialized [eventTime=0.23, mediaPos=0.00, window=0, period=0, OMX.google.aac.decoder]\r\n2021-11-02 11:51:04.360 27809-27809/com.google.android.exoplayer2.demo D/EventLogger: audioInputFormat [eventTime=0.24, mediaPos=0.00, window=0, period=0, id=1001/221, mimeType=audio/mp4a-latm, codecs=mp4a.40.2, channels=2, sample_rate=48000, language=el]\r\n2021-11-02 11:51:04.379 27809-30854/com.google.android.exoplayer2.demo D/AudioTrack: Client defaulted notificationFrames to 5962 for frameCount 17888\r\n2021-11-02 11:51:04.777 27809-30857/com.google.android.exoplayer2.demo W/PesReader: Unexpected start code prefix: 3391710\r\n2021-11-02 11:51:06.328 27809-30857/com.google.android.exoplayer2.demo W/PesReader: Unexpected start code prefix: 1459684\r\n2021-11-02 11:51:07.350 27809-30857/com.google.android.exoplayer2.demo W/PesReader: Unexpected start code prefix: 7661995\r\n2021-11-02 11:51:07.981 27809-27809/com.google.android.exoplayer2.demo D/EventLogger: loading [eventTime=3.86, mediaPos=0.00, window=0, period=0, false]\r\n2021-11-02 11:51:08.000 27809-27809/com.google.android.exoplayer2.demo D/EventLogger: loading [eventTime=3.88, mediaPos=0.00, window=0, period=0, true]\r\n2021-11-02 11:51:08.000 27809-27809/com.google.android.exoplayer2.demo D/EventLogger: state [eventTime=3.88, mediaPos=0.00, window=0, period=0, READY]\r\n2021-11-02 11:51:08.029 27809-27809/com.google.android.exoplayer2.demo D/EventLogger: isPlaying [eventTime=3.91, mediaPos=0.00, window=0, period=0, true]\r\n2021-11-02 11:51:08.031 27809-27809/com.google.android.exoplayer2.demo D/EventLogger: timeline [eventTime=3.91, mediaPos=0.01, window=0, period=0, periodCount=2, windowCount=2, reason=SOURCE_UPDATE\r\n2021-11-02 11:51:08.031 27809-27809/com.google.android.exoplayer2.demo D/EventLogger:   period [63.84]\r\n2021-11-02 11:51:08.031 27809-27809/com.google.android.exoplayer2.demo D/EventLogger:   period [?]\r\n2021-11-02 11:51:08.031 27809-27809/com.google.android.exoplayer2.demo D/EventLogger:   window [63.84, seekable=true, dynamic=false]\r\n2021-11-02 11:51:08.031 27809-27809/com.google.android.exoplayer2.demo D/EventLogger:   window [?, seekable=false, dynamic=false]\r\n2021-11-02 11:51:08.031 27809-27809/com.google.android.exoplayer2.demo D/EventLogger: ]\r\n2021-11-02 11:51:08.811 27809-27809/com.google.android.exoplayer2.demo D/EventLogger: timeline [eventTime=4.69, mediaPos=0.78, window=0, period=0, periodCount=2, windowCount=2, reason=SOURCE_UPDATE\r\n2021-11-02 11:51:08.811 27809-27809/com.google.android.exoplayer2.demo D/EventLogger:   period [63.84]\r\n2021-11-02 11:51:08.811 27809-27809/com.google.android.exoplayer2.demo D/EventLogger:   period [128.27]\r\n2021-11-02 11:51:08.811 27809-27809/com.google.android.exoplayer2.demo D/EventLogger:   window [63.84, seekable=true, dynamic=false]\r\n2021-11-02 11:51:08.811 27809-27809/com.google.android.exoplayer2.demo D/EventLogger:   window [128.27, seekable=true, dynamic=false]\r\n2021-11-02 11:51:08.811 27809-27809/com.google.android.exoplayer2.demo D/EventLogger: ]\r\n2021-11-02 11:51:08.814 27809-27809/com.google.android.exoplayer2.demo D/EventLogger: loading [eventTime=4.69, mediaPos=0.79, window=0, period=0, false]\r\n\r\n```\r\n\r\n\r\n ",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9641/comments",
    "author": "DorisGM",
    "comments": [
      {
        "user": "DorisGM",
        "created_at": "2021-11-02T04:06:58Z",
        "body": "By the way , I  already send the ts file to  dev.exoplayer@gmail.com. Please check it. Thanks."
      },
      {
        "user": "icbaker",
        "created_at": "2021-11-02T12:40:23Z",
        "body": "> By the way , I already send the ts file to [dev.exoplayer@gmail.com](mailto:dev.exoplayer@gmail.com). Please check it. Thanks.\r\n\r\nThe email did not arrive, please check and re-send. It may have bounced back if you did not use the requested subject line (should be \"Issue #9641\"). Please reply on this issue when you've re-sent the file."
      },
      {
        "user": "DorisGM",
        "created_at": "2021-11-03T04:01:48Z",
        "body": "> > By the way , I already send the ts file to [dev.exoplayer@gmail.com](mailto:dev.exoplayer@gmail.com). Please check it. Thanks.\r\n> \r\n> The email did not arrive, please check and re-send. It may have bounced back if you did not use the requested subject line (should be \"Issue #9641\"). Please reply on this issue when you've re-sent the file.\r\n\r\nplease check it again.  I sent it ."
      },
      {
        "user": "icbaker",
        "created_at": "2021-11-03T10:20:05Z",
        "body": "Thanks for the file. It's interlaced [1]. Interlaced video is not guaranteed to be supported on Android devices.\r\n\r\nIf you expect this device to support interlaced video and it's not working, that's likely something to discuss with the device manufacturer.\r\n\r\n[1]\r\n```\r\n$ mediainfo file.ts\r\n...\r\nScan type                                : Interlaced\r\n...\r\n```"
      },
      {
        "user": "DorisGM",
        "created_at": "2021-11-04T01:04:41Z",
        "body": "> Thanks for the file. It's interlaced [1]. Interlaced video is not guaranteed to be supported on Android devices.\r\n> \r\n> If you expect this device to support interlaced video and it's not working, that's likely something to discuss with the device manufacturer.\r\n> \r\n> [1]\r\n> \r\n> ```\r\n> $ mediainfo file.ts\r\n> ...\r\n> Scan type                                : Interlaced\r\n> ...\r\n> ```\r\n\r\nBut why android player always works？"
      },
      {
        "user": "DorisGM",
        "created_at": "2021-11-04T01:07:03Z",
        "body": "And the device original player can play this file perfectly."
      }
    ]
  },
  {
    "number": 9628,
    "title": "Change ad preloading time for midroll ads",
    "created_at": "2021-10-28T14:57:13Z",
    "closed_at": "2021-11-30T14:35:30Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9628",
    "body": "We are working on one feature like showing ad play countdown timer for midroll ads(like Youtube). At current, as we noticed, default ad preload time is 4s. And sometime ad is getting loaded just before cue point start time. So, in such cases we are not able to show timer. So, we require to preload ad just before 8-10 seconds of cue point time. So, that we can show count down timer once ad is loaded.\r\n\r\nWe tried to change THRESHOLD_AD_PRELOAD_MS = 4000 inside ImaAdsLoader.java class, but it didn't help.\r\n\r\nPlease let us know, if any way is there through which we can change ad preloading time and can handle it in better way. We are using ExoPlayer SDK v2.11.8.\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9628/comments",
    "author": "kishan-js",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2021-11-16T09:35:53Z",
        "body": ">We are working on one feature like showing ad play countdown timer for midroll ads.\r\n\r\nThe IMA ads overlay will automatically display the remaining ad time and this has nothing to do with how early the ad information is preloaded by the player. You also shouldn't customize the ads UI per IMA SDK policy. \r\n\r\n> And sometime ad is getting loaded just before cue point start time.\r\n\r\nThis is working as intended because the ad content is only chosen just before the player reaches the actual cue point.\r\n\r\n> `THRESHOLD_AD_PRELOAD_MS` \r\n\r\nThis value is also not related to your question as far as I can see as it is only used to time out when the player is waiting for ad information and doesn't receive any updates from IMA."
      },
      {
        "user": "tonihei",
        "created_at": "2021-11-30T14:35:30Z",
        "body": "Closing due to inactivity."
      }
    ]
  },
  {
    "number": 9624,
    "title": "Prevent audio player recording",
    "created_at": "2021-10-28T11:09:21Z",
    "closed_at": "2021-10-28T13:45:28Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9624",
    "body": "I am using exoplayer to play my audio files. These audio files are paid.  I want to prevent my audio if third-party app starts recording the app using a screen recorder. I used android:allowAudioPlaybackCapture=\"false , also set audio capture policy but its not working. \r\n\r\nIs there any method provided by exoplayer to achieve this?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9624/comments",
    "author": "preetiworkplace",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2021-10-28T11:28:37Z",
        "body": "I think `android:allowAudioPlaybackCapture=\"false\"` should be sufficient to stop a third party app capturing audio from your app. It's unclear what you mean by \"if third-party app starts recording the app using a screen recorder\". Please could you clarify, and provide a concrete example of an application that's able to capture your app's audio despite having set this.\r\n\r\nIt should be noted that someone who wants to capture your audio could just plug a recording device into the headphone jack, and do it that way, so in general it's not really possible to protect your audio from a determined attacker. I think the industry largely moved away from trying to do this years ago, in favour of providing streaming services that are sufficiently polished and convenient that consumers are willing to pay for them."
      },
      {
        "user": "preetiworkplace",
        "created_at": "2021-10-28T12:08:32Z",
        "body": "I am playing the number of the audio file. I also set Window flag Secure to achieve this. below is my sample code\r\n```\r\n  val videoTrackSelectionFactory: TrackSelection.Factory =\r\n                AdaptiveTrackSelection.Factory(DefaultBandwidthMeter())\r\n        val trackSelector: TrackSelector = DefaultTrackSelector(videoTrackSelectionFactory)\r\n        val loadControl: LoadControl = DefaultLoadControl()\r\n        val audioAttributes: AudioAttributes =\r\n                AudioAttributes.Builder()\r\n                        .setAllowedCapturePolicy(ALLOW_CAPTURE_BY_NONE)\r\n                        .setUsage(C.USAGE_MEDIA)\r\n\r\n                        .setContentType(C.CONTENT_TYPE_MOVIE)\r\n                        .build()\r\n\r\n        exoPlayer = ExoPlayerFactory.newSimpleInstance(this, trackSelector, loadControl)\r\n        val dataSourceFactory =\r\n                DefaultDataSourceFactory(this, Util.getUserAgent(this, \"exoplayer2example\"), null)\r\n        val extractorsFactory: ExtractorsFactory = DefaultExtractorsFactory()\r\n        val audioSource: MediaSource =\r\n                ExtractorMediaSource(uri, dataSourceFactory, extractorsFactory, null, null)\r\n        exoPlayer.audioAttributes = audioAttributes\r\n        exoPlayer.prepare(audioSource)\r\n```\r\nWhen I do screen recording using third party app like Xrecorder.  On recording black window get captured but I am able to listen audio files. I have disable the screen recording ."
      },
      {
        "user": "ojw28",
        "created_at": "2021-10-28T13:45:28Z",
        "body": "Xrecorder appears to just be using the device microphone to record sound. This will capture the audio being played out of the device speaker, but it will also capture all other ambient sound in the environment as well (e.g., if you talk whilst trying to reproduce this, you'll hear your own voice in the Xrecorder captured video). Similarly, if you're using headphones, you wont hear the audio that's being played, since the microphone wont be able to pick it up.\r\n\r\nThere's fundamentally nothing that can prevent someone using a microphone to record audio being played out of a speaker."
      }
    ]
  },
  {
    "number": 9623,
    "title": "how to prevent the autoplay after setMediaItem?",
    "created_at": "2021-10-28T10:40:18Z",
    "closed_at": "2021-11-26T02:04:21Z",
    "labels": [
      "question",
      "closed-by-bot"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9623",
    "body": "library version is 2.15.1\r\n\r\nwhen a music is played to the end, then i set another music using setMediaItem,  it plays automatically which is not expected.\r\nsetPlayWhenReady(false) not work. \r\nhow can i prevent the autoplay after setMediaItem?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9623/comments",
    "author": "TracyZhangLei",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2021-10-28T11:46:56Z",
        "body": "I tried letting a playback transition to the ended state, and then calling:\r\n```\r\nplayer.setPlayWhenReady(false);\r\nplayer.setMediaItem(MediaItem.fromUri(\" some new uri \"));\r\n```\r\nIt worked as expected (i.e., it did not automatically start playing). I tested this with 2.15.1.\r\n\r\nSo I cannot reproduce the issue. Please provide more concrete reproduction steps, ideally as a small patch to our demo application, if you'd like us to investigate further."
      },
      {
        "user": "google-oss-bot",
        "created_at": "2021-11-17T02:04:49Z",
        "body": "<!-- event: mark-stale -->\nHey @TracyZhangLei. We need more information to resolve this issue but there hasn't been an update in 14 weekdays. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2021-11-26T02:04:20Z",
        "body": "<!-- event: close-stale -->\nSince there haven't been any recent updates here, I am going to close this issue.\n\n@TracyZhangLei if you're still experiencing this problem and want to continue the discussion just leave a comment here and we are happy to re-open this."
      }
    ]
  },
  {
    "number": 9614,
    "title": "How can i play RTSP stream without audio codecs?",
    "created_at": "2021-10-27T12:09:20Z",
    "closed_at": "2021-11-10T14:10:23Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9614",
    "body": "How can i play RTSP stream without audio codecs? I need only video?I can't start watch stream because camera using g.711 for audio.\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9614/comments",
    "author": "LostInAbyss",
    "comments": [
      {
        "user": "claincly",
        "created_at": "2021-11-01T10:40:27Z",
        "body": "The player drops the formats that it cannot play and plays the playable formats only. In your case, G711 will be automatically dropped and the player should start playing video only.\r\n\r\nPlease comment if that's not the case."
      },
      {
        "user": "LostInAbyss",
        "created_at": "2021-11-10T13:54:38Z",
        "body": "Thanks for answer!"
      },
      {
        "user": "claincly",
        "created_at": "2021-11-10T14:10:23Z",
        "body": "I'm closing it for now, please feel free to re-open."
      }
    ]
  },
  {
    "number": 9613,
    "title": "black screen in hmi hardware emulator",
    "created_at": "2021-10-27T10:58:40Z",
    "closed_at": "2021-10-27T21:49:39Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9613",
    "body": "I am using ExoPlayer code while playing video it's show me black screen in my hmi hardware emulator can you please help me out this issue why showing black screen ?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9613/comments",
    "author": "ashishsoni1968",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2021-10-27T21:49:39Z",
        "body": "This sounds like an issue with the emulator rather than with ExoPlayer. You should report it to whoever is providing it."
      }
    ]
  },
  {
    "number": 9610,
    "title": "How to get played audio bytes ?",
    "created_at": "2021-10-26T15:23:24Z",
    "closed_at": "2021-10-28T08:47:55Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9610",
    "body": "val rendererFactory = RendererFactory(this, object : TeeAudioProcessor.AudioBufferSink {\n\n            override fun flush(sampleRateHz: Int, channelCount: Int, encoding: Int) {\n            }\n\n            override fun handleBuffer(buffer: ByteBuffer) {\n                //pass bytes to the your function\n            }\n\n        })\n   exoPlayer = ExoPlayerFactory.newSimpleInstance(this, rendererFactory,DefaultTrackSelector())\n\nthis method not found in current version.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9610/comments",
    "author": "SudoDios",
    "comments": [
      {
        "user": "SudoDios",
        "created_at": "2021-10-26T17:49:10Z",
        "body": "How to use **TeeAudioProcessor.AudioBufferSink** ?"
      },
      {
        "user": "ojw28",
        "created_at": "2021-10-27T21:47:32Z",
        "body": "I think you need to do something like this:\r\n\r\n```\r\n    TeeAudioProcessor teeAudioProcessor = new TeeAudioProcessor(new TeeAudioProcessor.AudioBufferSink() {\r\n      @Override\r\n      public void flush(int sampleRateHz, int channelCount, int encoding) {\r\n        // Informs you of the format.\r\n      }\r\n\r\n      @Override\r\n      public void handleBuffer(ByteBuffer buffer) {\r\n        // Informs you of a new buffer.\r\n      }\r\n    });\r\n    RenderersFactory renderersFactory = new DefaultRenderersFactory(context.getApplicationContext()) {\r\n      @Override\r\n      protected AudioSink buildAudioSink(\r\n          Context context,\r\n          boolean enableFloatOutput,\r\n          boolean enableAudioTrackPlaybackParams,\r\n          boolean enableOffload) {\r\n        return new DefaultAudioSink(\r\n            AudioCapabilities.getCapabilities(context),\r\n            new DefaultAudioSink.DefaultAudioProcessorChain(teeAudioProcessor),\r\n            enableFloatOutput,\r\n            enableAudioTrackPlaybackParams,\r\n            enableOffload\r\n                ? DefaultAudioSink.OFFLOAD_MODE_ENABLED_GAPLESS_REQUIRED\r\n                : DefaultAudioSink.OFFLOAD_MODE_DISABLED);\r\n      }\r\n    };\r\n```"
      }
    ]
  },
  {
    "number": 9587,
    "title": "how to get bitrate from mp4?",
    "created_at": "2021-10-20T13:54:36Z",
    "closed_at": "2021-11-15T12:06:52Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9587",
    "body": "I try to get bitrate from trackFormat when maybeFinishPrepare .\r\nBut it is -1. How can I get the correct value.\r\n private void maybeFinishPrepare() {\r\n    for (int i = 0; i < trackCount; i++) {\r\n      Format trackFormat = Assertions.checkNotNull(sampleQueues[i].getUpstreamFormat());\r\n      Log.i(\"test\", \" bitrate = \" +trackFormat.bitrate );\r\n  }\r\n\r\nI want to calculator the value when processMoovAtom. Is it right?\r\n\r\n  \r\n    private void processMoovAtom(ContainerAtom moov) throws ParserException {\r\n        .......\r\n        for(int i=0;i<this.tracks.length;i++) {\r\n            long count = 0;\r\n            for (int j=0;j<this.tracks[i].sampleTable.sampleCount;j++) {\r\n                count+= this.tracks[i].sampleTable.sizes[j];\r\n            }\r\n            long bitrate = 1000 * 1000 * 8 * count/this.durationUs ;\r\n        }\r\n\r\n        extractorOutput.endTracks();\r\n        extractorOutput.seekMap(this);\r\n    }\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9587/comments",
    "author": "lsgfly",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2021-10-22T09:46:58Z",
        "body": "We generally don't fill in the bitrate for progressive formats because it's unclear what's it's used for. The bitrate value is meant to inform adaptive track selections, but this doesn't apply to progressive formats like MP4. It's also unclear how the bitrate is defined exactly. Your example code above uses the actual samples only, but it's also possible to use the entire file size including all additional metadata, headers and unrelated information. See also the same discussion in #2638 which was closed eventually because there wasn't a good reason to implement this feature."
      }
    ]
  },
  {
    "number": 9585,
    "title": "How to differentiate between different types of error codes in case of DrmSessionException: android.media.MediaDrm$MediaDrmStateException ",
    "created_at": "2021-10-20T11:31:25Z",
    "closed_at": "2021-11-30T14:35:12Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9585",
    "body": "Hi Team, \r\nI want to add the check on error codes for DrmSessionException like if the license is expired or license is not valid or license key passed as incorrect byte array when playing videos via drm license media item. How to achieve this?\r\nCan anyone help me in this?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9585/comments",
    "author": "neeluagrawal04",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2021-11-15T13:36:37Z",
        "body": "`DrmSessionException` (which usually wraps `MediaDrm.MediaDrmStateException` contains an `errorCode` that can distinguish between various DRM related errors. Is that what you are looking for? If not, please further clarify your question. "
      },
      {
        "user": "tonihei",
        "created_at": "2021-11-30T14:35:12Z",
        "body": "Closing due to inactivity."
      }
    ]
  },
  {
    "number": 9550,
    "title": "android.app.remoteserviceexception: bad notification for startforeground",
    "created_at": "2021-10-09T09:20:18Z",
    "closed_at": "2021-12-28T12:23:10Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9550",
    "body": "#1234\r\nHi Exoplayer Team, I am getting errors with the latest version 2.15.1 when trying to show notifications in the notification tray. Why is this issue here? I am using the following code.\r\n\r\n```\r\n      notificationManager = new PlayerNotificationManager\r\n                .Builder(this, NOTIFICATION_ID, PLAYBACK_ID)\r\n                .setMediaDescriptionAdapter(mediaDescriptionAdapter)\r\n//                .setChannelNameResourceId(2)\r\n//                .setChannelDescriptionResourceId(2)\r\n                .setNotificationListener(notificationListener)\r\n                .build();\r\n\r\n```\r\nand in the notificationlistener my code is\r\n\r\n```\r\n    private final PlayerNotificationManager.NotificationListener notificationListener =\r\n            new PlayerNotificationManager.NotificationListener() {\r\n\r\n                @Override\r\n                public void onNotificationCancelled(int notificationId, boolean dismissedByUser) {\r\n                    if (dismissedByUser) {\r\n                        stopSelf();\r\n                    }\r\n                }\r\n\r\n                @Override\r\n                public void onNotificationPosted(int notificationId, @NotNull Notification notification, boolean ongoing) {\r\n                    Toast.makeText(getApplicationContext(), \"n \" + notificationId, Toast.LENGTH_SHORT).show();\r\n                    if (!ongoing) {\r\n                        stopForeground(true);\r\n                    } else {\r\n//                        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q) {\r\n//                            startForeground(notificationId, notification, ServiceInfo.FOREGROUND_SERVICE_TYPE_MEDIA_PLAYBACK);\r\n//                        } else {\r\n//                            startForeground(notificationId, notification);\r\n//                        }\r\n                    }\r\n                }\r\n            };\r\n```\r\n\r\nthe notification listener code works well in android 11 1 yeat back when I think I am using the 2.10.0 version, but now I think the issue is in android 11 only because of check-in version 9 and it works well. Please help me to fix it for my app because I have to publish an update of the app next week.\r\n\r\nHope you understand and help me to find out\r\n\r\nAndroid Device -  Redmi Note10S\r\nAndroid Version - 11\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9550/comments",
    "author": "lakshaymudgal88",
    "comments": [
      {
        "user": "claincly",
        "created_at": "2021-10-11T10:20:14Z",
        "body": "I have trouble understanding your question. It seems the notification works with Android 11 and ExoPlayer 2.10.0?\r\n\r\n@marcbaechinger Could you take a quick look to see if it's related to #8500?"
      },
      {
        "user": "Sayum24",
        "created_at": "2021-11-13T20:51:32Z",
        "body": "I have got the same error updating the Exoplayer librarys from **2.15.1** to **2.16.0.**\r\nAt the old version everything is working fine, now I get the error.\r\nI'm gonna rollback to the old version for now..."
      },
      {
        "user": "merlin-zaraza",
        "created_at": "2021-11-19T14:45:40Z",
        "body": "You have to set `setChannelNameResourceId` to make notification channel. Hey, ExoPlayer team, please move `ChannelNameResourceId` to Builder constructor - it's mandatory field."
      },
      {
        "user": "marcbaechinger",
        "created_at": "2021-11-19T15:07:10Z",
        "body": "@merlin-zaraza Some apps may want to create the channel itself instead of having it created automatically. In such a case only the `channelId` needs to be set. The java doc of `setChannelNameResourceId` is saying that it needs to be set to a valid value if the channel should be automatically created. "
      },
      {
        "user": "marcbaechinger",
        "created_at": "2021-11-19T15:09:57Z",
        "body": "I marked this as a `documentation candidate` to document the constructor argument `channelId` in more detail/. It should say that the channel needs to be already created or else `setChannelNameResourceId` needs to be called."
      },
      {
        "user": "marcbaechinger",
        "created_at": "2021-12-28T12:23:10Z",
        "body": "Closing this issue as the need for an existing channel has been documented and there wasn't any more activity. Please reopen if this is still an issue."
      }
    ]
  },
  {
    "number": 9548,
    "title": "DRM gives me an exception when I call downloadLicense, how to request keySetId ?",
    "created_at": "2021-10-08T11:20:49Z",
    "closed_at": "2021-10-28T10:00:09Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9548",
    "body": "Hi I was updated to Exoplayer 2.14 recently but I have problems with the update of the downloadLicense request, it throws me an exception:\r\n\r\n```\r\n2021-10-08 13:14:28.175 3568-6530/? E/DefaultDrmSession: DRM session error\r\n      com.google.android.exoplayer2.drm.MediaDrmCallbackException: com.google.android.exoplayer2.upstream.HttpDataSource$InvalidResponseCodeException: Response code: 500\r\n        at com.google.android.exoplayer2.drm.HttpMediaDrmCallback.executePost(HttpMediaDrmCallback.java:194)\r\n        at com.google.android.exoplayer2.drm.HttpMediaDrmCallback.executeKeyRequest(HttpMediaDrmCallback.java:153)\r\n        at com.google.android.exoplayer2.drm.DefaultDrmSession$RequestHandler.handleMessage(DefaultDrmSession.java:603)\r\n        at android.os.Handler.dispatchMessage(Handler.java:102)\r\n        at android.os.Looper.loop(Looper.java:148)\r\n        at android.os.HandlerThread.run(HandlerThread.java:61)\r\n     Caused by: com.google.android.exoplayer2.upstream.HttpDataSource$InvalidResponseCodeException: Response code: 500\r\n        at com.google.android.exoplayer2.upstream.DefaultHttpDataSource.open(DefaultHttpDataSource.java:383)\r\n        at com.google.android.exoplayer2.upstream.StatsDataSource.open(StatsDataSource.java:84)\r\n        at com.google.android.exoplayer2.upstream.DataSourceInputStream.checkOpened(DataSourceInputStream.java:101)\r\n        at com.google.android.exoplayer2.upstream.DataSourceInputStream.read(DataSourceInputStream.java:81)\r\n        at com.google.android.exoplayer2.upstream.DataSourceInputStream.read(DataSourceInputStream.java:75)\r\n        at com.google.android.exoplayer2.util.Util.toByteArray(Util.java:170)\r\n        at com.google.android.exoplayer2.drm.HttpMediaDrmCallback.executePost(HttpMediaDrmCallback.java:177)\r\n        at com.google.android.exoplayer2.drm.HttpMediaDrmCallback.executeKeyRequest(HttpMediaDrmCallback.java:153) \r\n        at com.google.android.exoplayer2.drm.DefaultDrmSession$RequestHandler.handleMessage(DefaultDrmSession.java:603) \r\n        at android.os.Handler.dispatchMessage(Handler.java:102) \r\n        at android.os.Looper.loop(Looper.java:148) \r\n        at android.os.HandlerThread.run(HandlerThread.java:61) \r\n```\r\n\r\nThe problem was obtaining the keySetId, my code:\r\n\r\n```\r\n    public void downloadDrmLicense(HttpDataSource.Factory httpDataSourceFactory,\r\n                                   Uri uri,\r\n                                   String licenseUrl,\r\n                                   DrmLicenseListener licenseListener) {\r\n        try {\r\n            DataSource dataSource = httpDataSourceFactory.createDataSource();\r\n            mOfflineLicenseHelper =\r\n                    OfflineLicenseHelper.newWidevineInstance(licenseUrl, true,\r\n                            httpDataSourceFactory, new DrmSessionEventListener.EventDispatcher());\r\n            byte[] keySetId = null;\r\n            try {\r\n                DashManifest dashManifest = DashUtil.loadManifest(dataSource, uri);\r\n\r\n                Format formatSimple = DashUtil.loadFormatWithDrmInitData(dataSource, dashManifest.getPeriod(0));\r\n\r\n                if (formatSimple != null) {\r\n                    keySetId = mOfflineLicenseHelper.downloadLicense(formatSimple);\r\n                }\r\n\r\n            } catch (IllegalArgumentException | IOException e) {\r\n                Log.e(TAG, \"DrmInitDataTask Exception\");\r\n            } finally {\r\n                if (keySetId == null) {\r\n                    Log.e(TAG, \"[LICENSE] Unable to retrieve license\");\r\n                    licenseListener.get(null, 0L);\r\n                } else {\r\n                    Log.d(TAG, \"[LICENSE] License downloaded successfully\");\r\n                    licenseListener.get(keySetId, getLicenseDurationRemainingMillis(keySetId));\r\n                }\r\n                mOfflineLicenseHelper.release();\r\n            }\r\n\r\n        } catch (Exception e) {\r\n            Log.e(TAG, e.getMessage(), e);\r\n        }\r\n    }\r\n```\r\n\r\nI get the formatSimple properly, but when call `downloadLicense`, if I debug I see a point inside the `blockingKeyRequest` method that does \r\n\r\n`byte[] keySetId = drmSession.getOfflineLicenseKeySetId();`\r\n\r\nand it returns a null\r\n\r\nWith my old code working with exoplayer 2.11 was working fine, but when I did the refactor to this one, it fails.\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9548/comments",
    "author": "billyjoker",
    "comments": [
      {
        "user": "icbaker",
        "created_at": "2021-10-08T11:49:49Z",
        "body": "The HTTP 500 error in the stack trace is coming from your DRM license server - you should look in the server logs to understand the cause of that."
      },
      {
        "user": "google-oss-bot",
        "created_at": "2021-10-28T01:04:36Z",
        "body": "<!-- event: mark-stale -->\nHey @billyjoker. We need more information to resolve this issue but there hasn't been an update in 14 weekdays. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "billyjoker",
        "created_at": "2021-10-28T09:45:29Z",
        "body": "Finally I have figured out that the problem was a bad international ip detecting from our backservers. Solved"
      }
    ]
  },
  {
    "number": 9533,
    "title": "Ad cue points not getting removed after Ad completes",
    "created_at": "2021-10-05T20:35:57Z",
    "closed_at": "2021-11-04T01:04:30Z",
    "labels": [
      "question",
      "closed-by-bot"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9533",
    "body": "Following is code snippet used for ad integration \r\n```\r\nImaAdsLoader.Builder builder = new ImaAdsLoader.Builder(mContext);\r\nImaSdkSettings imaSdkSettings = ImaSdkFactory.getInstance().createImaSdkSettings();\r\nImaAdsLoader imaAdsLoader = builder.setImaSdkSettings(imaSdkSettings).buildForAdTag(Uri.parse(urlString));\r\n\r\nMediaSource mediaSourceWithAds = new AdsMediaSource(\r\n                        mediaSources,\r\n                        dataSourceFactory,\r\n                        imaAdsLoader,\r\n                        this);\r\nmSimpleExoPlayer.prepare(mediaSourceWithAds);\r\n```\r\n\r\nAds are running properly, but whenever some ad runs ,gets completed and if user seeks back to position before the same ad , the ad runs again. \r\n\r\nI want one Ad at particular point to get played only once ,this ad should get removed from Ad Cue points once it runs. Is there any way of achieving this.\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9533/comments",
    "author": "danish241194",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2021-10-06T09:17:48Z",
        "body": "Can you reproduce this in the ExoPlayer demo app at the latest version? Do you see IMA's ad overlay views (countdown timer, more info link) the first time the ad plays?\r\n\r\nIf we need to investigate further it would be useful to have a link to your ad tag, or at least a logcat snippet taking after a playback where you saw the issue, with debug mode enabled via `ImaAdsLoader.Builder.setDebugModeEnabled(true)`. You can provide that information here or email it to dev.exoplayer@gmail.com with subject \"Issue #9533\" (and update this issue to indicate you've done this).\r\n\r\nAside: I don't think you need to create your own `ImaSdkSettings` instance -- the builder takes care of constructing a default one for you."
      },
      {
        "user": "google-oss-bot",
        "created_at": "2021-10-26T01:04:34Z",
        "body": "<!-- event: mark-stale -->\nHey @danish241194. We need more information to resolve this issue but there hasn't been an update in 14 weekdays. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2021-11-04T01:04:29Z",
        "body": "<!-- event: close-stale -->\nSince there haven't been any recent updates here, I am going to close this issue.\n\n@danish241194 if you're still experiencing this problem and want to continue the discussion just leave a comment here and we are happy to re-open this."
      }
    ]
  },
  {
    "number": 9521,
    "title": "Stop video when clicking on a different RecyclerView item?",
    "created_at": "2021-10-02T03:10:01Z",
    "closed_at": "2021-11-02T01:04:36Z",
    "labels": [
      "question",
      "closed-by-bot"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9521",
    "body": "I have a RecyclerView, where each item plays a video. I share one instance of `ExoPlayer`, and only play one video on the screen at a time. When a user taps on a video's thumbnail, it opens the player in a fullscreen dialog.\r\n\r\nHowever, my current problem is that if a video is playing in RecyclerView item 1, and the user taps the video thumbnail in RecyclerView item 2, it plays the video of item 2 (which is correct), but I don't know how to stop the video/show a thumbnail for RecyclerView item 1 (since they clicked on item 2).\r\n\r\nHere is the relevant code from the `onBindViewHolder`:\r\n\r\n```\r\nholder.videoThumbnail.setOnClickListener(new View.OnClickListener() {\r\n    @Override\r\n    public void onClick(View view) {\r\n        holder.openFullscreenVideoDialog();\r\n    }\r\n});\r\n```\r\n\r\nHere is the `openFullscreenVideoDialog()` method in the view holder:\r\n\r\n```\r\n\r\n    public class PostViewHolder extends RecyclerView.ViewHolder implements View.OnClickListener, FullscreenVideoDialogFragment.FullscreenVideoDialogFragmentListener {\r\n        public Post post;\r\n\r\n        public ConstraintLayout contentView;\r\n\r\n        public ImageView videoThumbnail;\r\n\r\n        public HlsMediaSource hlsMediaSource;\r\n\r\n        public PlayerView playerView;\r\n\r\n        public PostViewHolder(View v) {\r\n            super(v);\r\n\r\n            contentView = v.findViewById(R.id.content_view);\r\n\r\n            videoThumbnail = v.findViewById(R.id.video_thumbnail);\r\n            playerView = v.findViewById(R.id.player_view);\r\n\r\n            setupVideoDialog();\r\n        }\r\n\r\n        private void setupVideoDialog() {\r\n            mFullScreenDialog = new Dialog(context, android.R.style.Theme_Black_NoTitleBar_Fullscreen) {\r\n                public void onBackPressed() {\r\n                    super.onBackPressed();\r\n                }\r\n            };\r\n        }\r\n\r\n        private void openFullscreenVideoDialog() {\r\n            mExoPlayerFullscreen = true;\r\n\r\n            FragmentManager fm = ((FragmentActivity) context).getSupportFragmentManager();\r\n            FullscreenVideoDialogFragment dialog = FullscreenVideoDialogFragment.newInstance(post, hlsMediaSource, exoPlayer);\r\n            dialog.setFullscreenVideoDialogFragmentListener(this);\r\n            dialog.show(fm, \"fragment_video_dialog\");\r\n\r\n            playerView.setPlayer(null);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nAt its most basic level, my question is: how do I change views from item 1 when a user taps on the video thumbnail in item 2?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9521/comments",
    "author": "user849651",
    "comments": [
      {
        "user": "user849651",
        "created_at": "2021-10-02T03:16:12Z",
        "body": "Because I'm using just one instance of ExoPlayer, is it possible to listen for an event where, if the player changes (maybe in state or to some other view), I can set it to show a thumbnail over item 1 again when item 2's video is tapped?"
      },
      {
        "user": "andrewlewis",
        "created_at": "2021-10-04T07:41:36Z",
        "body": "> Because I'm using just one instance of ExoPlayer, is it possible to listen for an event where, if the player changes (maybe in state or to some other view), I can set it to show a thumbnail over item 1 again when item 2's video is tapped?\r\n\r\nI don't follow why an event is needed for this case -- can't you show a thumbnail on top of the old player position just before you call `setPlayer` on its `PlayerView`, then wait for `onRenderedFirstFrame` to hide the thumbnail on top of the new player position?"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2021-10-22T01:04:39Z",
        "body": "<!-- event: mark-stale -->\nHey @user849651. We need more information to resolve this issue but there hasn't been an update in 14 weekdays. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2021-11-02T01:04:35Z",
        "body": "<!-- event: close-stale -->\nSince there haven't been any recent updates here, I am going to close this issue.\n\n@user849651 if you're still experiencing this problem and want to continue the discussion just leave a comment here and we are happy to re-open this."
      }
    ]
  },
  {
    "number": 9520,
    "title": "Preview-Seekbar issue in latest version",
    "created_at": "2021-10-01T13:37:13Z",
    "closed_at": "2021-10-01T16:43:23Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9520",
    "body": "in latest version Preview seekbar is not work so please provide any idea...",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9520/comments",
    "author": "Ajain23799",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2021-10-01T16:43:23Z",
        "body": "It's impossible to know what this is about from the information provided. It feels unlikely that it's even related to ExoPlayer, since we don't provide a \"preview seekbar\". Closing."
      }
    ]
  },
  {
    "number": 9516,
    "title": "Updating metadata on bluetooth device while playing from live music stream",
    "created_at": "2021-10-01T07:09:21Z",
    "closed_at": "2021-12-28T12:28:33Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9516",
    "body": "Hi,\r\n\r\nI am trying to make exo audio player to play music from a live stream i.e, FM radio. Stream works fine , \r\n\r\n**Requirement :** is let blue tooth device control the play/pause and show the title of song playing at the moment,\r\nfor this i have implemented \r\n\r\n ```\r\nmediaSession = new MediaSessionCompat(context, MEDIA_SESSION_TAG);\r\n        mediaSession.setActive(true);\r\n        playerNotificationManager.setMediaSessionToken(mediaSession.getSessionToken());\r\n\r\n        mediaSessionConnector = new MediaSessionConnector(mediaSession);\r\n        mediaSessionConnector.setQueueNavigator(new TimelineQueueNavigator(mediaSession) {\r\n            @Override\r\n            public MediaDescriptionCompat getMediaDescription(Player player, int windowIndex) {\r\n                Bundle extras = new Bundle();\r\n        extras.putParcelable(MediaMetadataCompat.METADATA_KEY_ALBUM_ART, bmp);\r\n        extras.putParcelable(MediaMetadataCompat.METADATA_KEY_DISPLAY_ICON, bmp);\r\n        return new MediaDescriptionCompat.Builder()\r\n                .setMediaId(\"audio_1\")\r\n                .setIconBitmap(bmp) //Fetched from network\r\n                .setTitle(NotificationTitle) //Fetched from icyInfo\r\n                .setDescription(NotificationContentInfo) //Fetched from icyHeader\r\n                .setExtras(extras)\r\n                .build();\r\n            }\r\n        });\r\n        mediaSessionConnector.setPlayer(simpleExoPlayer);\r\n```\r\n\r\nand I am fetching the metadata of stream comes from **icyInfo** and **icyHeader** which takes bit time 1-2 sec to be fetched after user press play button , due to this lag **NotificationTitle** and **NotificationContentInfo** comes to be null and on my android wear some special characters are shown i suspect its null. \r\n\r\nHow i can make sure metadata is already fetched before **getMediaDescription** is called.\r\n\r\nThanks :)\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9516/comments",
    "author": "alitele",
    "comments": [
      {
        "user": "alitele",
        "created_at": "2021-10-01T17:14:58Z",
        "body": "@marcbaechinger would you please suggest some solution?\r\nThanks :)"
      },
      {
        "user": "marcbaechinger",
        "created_at": "2021-10-28T13:53:13Z",
        "body": "Sorry for my late response. \r\n\r\nI don't think there is a good way to delay updating the metadata. You may want to have some placeholder values in place that are non-null and then once you have received the icy info you can call `connector.invalidateMediaSessionMetadata()`. This will update the metadata in the media session for which `getMediaDescription(Player player, int windowIndex) ` is called again. "
      },
      {
        "user": "alitele",
        "created_at": "2021-10-29T16:48:10Z",
        "body": "Thanks a lot , i will try this 👍"
      },
      {
        "user": "marcbaechinger",
        "created_at": "2021-12-28T12:28:33Z",
        "body": "Closing due to inactivity."
      }
    ]
  },
  {
    "number": 9515,
    "title": "Inquiries regarding YouTube video playback logs",
    "created_at": "2021-10-01T01:07:17Z",
    "closed_at": "2021-10-01T07:53:49Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9515",
    "body": "I checked the log contents below when playing with the player. Do you know any information related to this log?\r\n\r\n**<LOG>**\r\n\r\n> client requested max input size 86400, which is smaller than what component recommended (184320); overriding with component recommendation. This behavior is subject to change. It is recommended that app developers double check whether the requested max input size is in reasonable range.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9515/comments",
    "author": "yyms3275",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2021-10-01T07:53:49Z",
        "body": "All this is saying is that the decoder is allocating larger input buffers than ExoPlayer requested. As an application developer, you should be able to safely ignore this message."
      }
    ]
  },
  {
    "number": 9513,
    "title": "(trackSelector as MappingTrackSelector).currentMappedTrackInfo always returns null",
    "created_at": "2021-09-30T14:43:23Z",
    "closed_at": "2021-10-21T15:42:09Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9513",
    "body": "mappedTrackinfo always returns null\r\n\r\nI do \r\n```\r\n    private val eventListener: Player.EventListener = object : Player.EventListener {\r\n        override fun onPlayerStateChanged(playWhenReady: Boolean, playbackState: Int) {\r\n            if (playbackState == Player.STATE_READY) {\r\n                // look for MappedTrackInfo\r\n                Timber.d(\"JOHN: ${closedCaptionManager.checkAndSetClosedCaptions()}\")\r\n            }\r\n        }\r\n    }\r\n\r\nclass ClosedCaptionManager constructor(\r\n    var trackSelector: TrackSelector,\r\n    var player: SimpleExoPlayer\r\n) {\r\n    // These two could be fields OR passed around\r\n    var textTrackIndex = 0\r\n    var trackGroups: TrackGroupArray? = null\r\n    var pairTrackList: ArrayList<Pair<Int, Int>> = ArrayList()\r\n    // ((videoPlayer.metadataComponent as SimpleExoPlayer).trackSelector as DefaultTrackSelector)\r\n    // .currentMappedTrackInfo.getTrackGroups()2\r\n    val mappingTrackInfo: MappingTrackSelector = trackSelector as MappingTrackSelector\r\n\r\n    fun checkAndSetClosedCaptions(): Boolean {\r\n        // This is the body of the logic  for see if there are even video tracks\r\n        // It also does some field setting\r\n        val mappedTrackInfo = mappingTrackInfo.currentMappedTrackInfo  // always returns null on a video I know has CC data\r\n        for (i in 0 until mappedTrackInfo?.rendererCount!!) {\r\n            trackGroups = mappedTrackInfo.getTrackGroups(i)\r\n            if (trackGroups!!.length != 0) {\r\n                when (player.getRendererType(i)) {\r\n                    C.TRACK_TYPE_TEXT -> {\r\n                        textTrackIndex = i\r\n                        return true\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false\r\n    }\r\n\r\n```\r\n\r\nNo clear example on how to get CC data from player.  This is horrible, why is there no easy way to find if there is CC data and then to enable disable it.  It seems a basic function that should get its own treatment of special methods\r\n\r\n ExoPlayer version number 2.13.3\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9513/comments",
    "author": "grndvl1",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2021-10-01T16:42:39Z",
        "body": "Does the ExoPlayer demo app (or equivalently, `StyledPlayerView`) provide the option to select CC for the video you're testing with? It would probably be helpful if you could provide a link to the video you're using, so that we can reproduce what you're seeing."
      },
      {
        "user": "google-oss-bot",
        "created_at": "2021-10-21T01:04:35Z",
        "body": "<!-- event: mark-stale -->\nHey @grndvl1. We need more information to resolve this issue but there hasn't been an update in 14 weekdays. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "grndvl1",
        "created_at": "2021-10-21T15:14:19Z",
        "body": "I found out the issue.  The current documentation is horrible especially for ClosedCaptioning and finding examples that were not old was a nightmare.  It literally took me days to get this right and due to this long time I am no longer on the project.  Please for the sake of us lowly programmers update the documents to something that we all can understand and use \r\n\r\nHere was the issue, we used a DI to provide the player when needed.  The player was created like this \r\n\r\n`SimpleExoPlayer.Builder(fragment.requireContext()).build()`\r\n\r\nIt is now created like this\r\n\r\n        val renderersFactory: RenderersFactory = DefaultRenderersFactory(fragment.requireContext())\r\n            .setExtensionRendererMode(DefaultRenderersFactory.EXTENSION_RENDERER_MODE_OFF)\r\n\r\n        val builder: DefaultTrackSelector.ParametersBuilder =\r\n            DefaultTrackSelector.ParametersBuilder(fragment.requireContext())\r\n\r\n        // set this to false if you want it on automatically when video starts, use it for testing\r\n        // Or future it for if we have saved parameters\r\n        val trackSelectorParameters = builder.setRendererDisabled(C.TRACK_TYPE_VIDEO, true)\r\n            .setPreferredTextLanguages(\"eng\")\r\n            .build()\r\n        val trackSelector = DefaultTrackSelector(fragment.requireContext())\r\n        trackSelector.parameters = trackSelectorParameters\r\n\r\n        return SimpleExoPlayer.Builder(fragment.requireContext(), renderersFactory)\r\n            .setTrackSelector(trackSelector)\r\n            .build()\r\n\r\nSome indication as to why it is null would have been nice.  Instead I was just chasing the player and throwing stuff at it and see what worked eventually I got it but got removed from the client."
      }
    ]
  },
  {
    "number": 9511,
    "title": "Getting Rebuffering event",
    "created_at": "2021-09-30T10:20:19Z",
    "closed_at": "2021-11-04T01:04:33Z",
    "labels": [
      "question",
      "closed-by-bot"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9511",
    "body": "I have a requirement of doing some stuff whenever rebuffering occurs.Is there any way to get this event whenever rebuffer occurs\r\n\r\nrebuffer event is buffering event which excludes initial joining and buffering after seek.\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9511/comments",
    "author": "danish241194",
    "comments": [
      {
        "user": "krocard",
        "created_at": "2021-10-04T15:34:31Z",
        "body": "By rebuffering event, do you mean:\r\n\r\n 1. having the player go to state buffering from state ready.\r\n 2. having to download a segment never downloaded\r\n 3. having to download a segment that was already downloaded (eg due to a different track selection)\r\n 4. having to flush and rebuffer some audio due to an audio output change\r\n 5. some other buffering event"
      },
      {
        "user": "danish241194",
        "created_at": "2021-10-05T20:22:28Z",
        "body": "Yes, above mentioned points are contributing for my re-buffering event definition. In simple words i can say whenever player goes to Buffering state from Ready state without any user intervention (seek ) ."
      },
      {
        "user": "krocard",
        "created_at": "2021-10-06T12:37:00Z",
        "body": "`Listener.onPlaybackStateChanged` will be called when transitioning from state `READY` to `BUFFERING`. Nevertheless, it will not tell you why. `Listener.onPositionDiscontinuity` will be called if there was a seek, with the reason.\r\nBy listening to `Listener.OnEvent`, you will have all this information in one callback."
      },
      {
        "user": "krocard",
        "created_at": "2021-10-06T12:37:11Z",
        "body": "Does this answer your question?"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2021-10-26T01:04:35Z",
        "body": "<!-- event: mark-stale -->\nHey @danish241194. We need more information to resolve this issue but there hasn't been an update in 14 weekdays. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2021-11-04T01:04:32Z",
        "body": "<!-- event: close-stale -->\nSince there haven't been any recent updates here, I am going to close this issue.\n\n@danish241194 if you're still experiencing this problem and want to continue the discussion just leave a comment here and we are happy to re-open this."
      }
    ]
  },
  {
    "number": 9491,
    "title": "Getting com.google.android.exoplayer2.ParserException: org.xmlpull.v1.XmlPullParserException while downloading DRM enabled video url",
    "created_at": "2021-09-27T08:10:14Z",
    "closed_at": "2021-10-19T05:16:00Z",
    "labels": [
      "question",
      "need more info",
      "stale"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9491",
    "body": "Hi I am facing the below exception while download the DRM enabled video url via exoplayer lib\r\nexception:\r\n\r\n~~~\r\ncom.google.android.exoplayer2.ParserException: org.xmlpull.v1.XmlPullParserException: unterminated entity ref (position:TEXT @1:134 in java.io.InputStreamReader@9a2c689) \r\n        at com.google.android.exoplayer2.source.dash.manifest.DashManifestParser.parse(DashManifestParser.java:108)\r\n        at com.google.android.exoplayer2.source.dash.manifest.DashManifestParser.parse(DashManifestParser.java:63)\r\n        at com.google.android.exoplayer2.upstream.ParsingLoadable.load(ParsingLoadable.java:179)\r\n        at com.google.android.exoplayer2.upstream.ParsingLoadable.load(ParsingLoadable.java:87)\r\n        at com.google.android.exoplayer2.offline.SegmentDownloader$1.doWork(SegmentDownloader.java:313)\r\n        at com.google.android.exoplayer2.offline.SegmentDownloader$1.doWork(SegmentDownloader.java:310)\r\n        at com.google.android.exoplayer2.util.RunnableFutureTask.run(RunnableFutureTask.java:125)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)\r\n        at java.lang.Thread.run(Thread.java:784)\r\n     Caused by: org.xmlpull.v1.XmlPullParserException: unterminated entity ref (position:TEXT @1:134 in java.io.InputStreamReader@9a2c689) \r\n        at org.kxml2.io.KXmlParser.readEntity(KXmlParser.java:1220)\r\n        at org.kxml2.io.KXmlParser.readValue(KXmlParser.java:1402)\r\n        at org.kxml2.io.KXmlParser.next(KXmlParser.java:393)\r\n        at org.kxml2.io.KXmlParser.next(KXmlParser.java:313)\r\n        at com.google.android.exoplayer2.source.dash.manifest.DashManifestParser.parse(DashManifestParser.java:101)\r\n        at com.google.android.exoplayer2.source.dash.manifest.DashManifestParser.parse(DashManifestParser.java:63) \r\n        at com.google.android.exoplayer2.upstream.ParsingLoadable.load(ParsingLoadable.java:179) \r\n        at com.google.android.exoplayer2.upstream.ParsingLoadable.load(ParsingLoadable.java:87) \r\n        at com.google.android.exoplayer2.offline.SegmentDownloader$1.doWork(SegmentDownloader.java:313) \r\n        at com.google.android.exoplayer2.offline.SegmentDownloader$1.doWork(SegmentDownloader.java:310) \r\n        at com.google.android.exoplayer2.util.RunnableFutureTask.run(RunnableFutureTask.java:125) \r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167) \r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641) \r\n        at java.lang.Thread.run(Thread.java:784) \r\n~~~\r\n\r\nCan anyone help me to get out of this issue?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9491/comments",
    "author": "neeluagrawal04",
    "comments": [
      {
        "user": "krocard",
        "created_at": "2021-09-29T10:23:17Z",
        "body": "The exception points to your dash manifest missing a closing tag (`unterminated entity ref`). Could you please send us the dash manifest that is causing the issue?\r\n\r\nIf you're unable to share test content publicly, please send them to dev.exoplayer@gmail.com using a subject in the format \"Issue #1234\" (\"#1234\" is replaced with your issue number). Please also update this issue to indicate you've done this."
      },
      {
        "user": "krocard",
        "created_at": "2021-09-29T10:24:34Z",
        "body": "Does this media plays with other dash players?"
      },
      {
        "user": "neeluagrawal04",
        "created_at": "2021-09-29T16:47:05Z",
        "body": "Playing is not the issue but during download it will give me this exception. And how to find this dash manifest?"
      },
      {
        "user": "krocard",
        "created_at": "2021-09-29T17:46:53Z",
        "body": "You are probably playing the media from an http(s) url. This url points to the dash manifest. Please share this url with us."
      },
      {
        "user": "google-oss-bot",
        "created_at": "2021-10-19T01:04:55Z",
        "body": "<!-- event: mark-stale -->\nHey @neeluagrawal04. We need more information to resolve this issue but there hasn't been an update in 14 weekdays. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "neeluagrawal04",
        "created_at": "2021-10-19T05:16:00Z",
        "body": "Thanks for your help. Issue is fixed hence closing this issue"
      }
    ]
  },
  {
    "number": 9467,
    "title": "How to make a custom notification action compact?",
    "created_at": "2021-09-22T11:08:29Z",
    "closed_at": "2021-09-22T11:26:51Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9467",
    "body": "Since there's also no way I found to provide my own `Intent` for the default actions, like play/pause and so on, I ended up creating custom actions via `PlayerNotificationManager.CustomActionReceiver`:\r\n\r\n```kotlin\r\n    override fun createCustomActions(context: Context, instanceId: Int): MutableMap<String, NotificationCompat.Action> {\r\n        val action = NotificationCompat.Action(android.R.drawable.btn_radio, \"closeBar\", null)\r\n        val actionMap: MutableMap<String, NotificationCompat.Action> = HashMap()\r\n        actionMap[\"example\"] = action\r\n        return actionMap\r\n    }\r\n\r\n    override fun getCustomActions(player: Player): List<String> {\r\n        val customActions: MutableList<String> = ArrayList()\r\n        customActions.add(\"example\")\r\n        return customActions\r\n    }\r\n\r\n    override fun onCustomAction(player: Player, action: String, intent: Intent) {\r\n        Timber.d(\"action: $action\")\r\n    }\r\n```\r\n\r\n...but there is no way to make this action appear in the compact notification.\r\n\r\nIn the documentation it's said that `getActionIndicesForCompactView` can be overridden so I can customize which actions are compact, but in the latest ExoPlayer version it's impossible to extend `PlayerNotificationManager`, as its constructor is now private. \r\n\r\nIs there no way to customize which actions go to the compact notification anymore? What about modifying the default actions besides an icon?\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9467/comments",
    "author": "mpivchev",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2021-09-22T11:26:51Z",
        "body": "I think this is a duplicate of #9303. Can you check whether this issue helps in your case? If not please re-open."
      }
    ]
  },
  {
    "number": 9457,
    "title": "Will ExoPlayer supports playing RTSP stream in the background",
    "created_at": "2021-09-20T18:05:54Z",
    "closed_at": "2021-10-21T01:04:41Z",
    "labels": [
      "question",
      "closed-by-bot"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9457",
    "body": "Hi Team,\r\n\r\nI am using ExoPlayer 2.15.0 version to stream RTSP using ip camera.\r\n\r\nI am able to stream through RTSP to Android app.\r\n\r\nWhen the App pushed to background, it is unable to get stream from IP Camera and hence YouTube not receiving any stream from my app.\r\n\r\nCould you please let me know, will it supports streaming while app in the background. If Yes, please help me how to achieve this.\r\n\r\nThank you !!!",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9457/comments",
    "author": "SreeniMannem",
    "comments": [
      {
        "user": "claincly",
        "created_at": "2021-09-22T12:56:31Z",
        "body": "Please provide more details.\r\n\r\nI'm not sure what you are trying to do: \r\n\r\n> When the App pushed to background, it is unable to get stream from IP Camera\r\n\r\nIs ExoPlayer not receiving packets from the camera?\r\n\r\n> hence YouTube not receiving any stream from my app.\r\n\r\nPlease specify how you are using ExoPlayer + YouTube, it all seems unclear."
      },
      {
        "user": "google-oss-bot",
        "created_at": "2021-10-12T01:04:38Z",
        "body": "<!-- event: mark-stale -->\nHey @SreeniMannem. We need more information to resolve this issue but there hasn't been an update in 14 weekdays. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2021-10-21T01:04:40Z",
        "body": "<!-- event: close-stale -->\nSince there haven't been any recent updates here, I am going to close this issue.\n\n@SreeniMannem if you're still experiencing this problem and want to continue the discussion just leave a comment here and we are happy to re-open this."
      }
    ]
  },
  {
    "number": 9443,
    "title": "How to optimize / handle large playlist and single thread Exoplayer approach",
    "created_at": "2021-09-17T07:59:13Z",
    "closed_at": "2021-10-08T12:38:34Z",
    "labels": [
      "question",
      "need more info"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9443",
    "body": "I'm trying to optimize playback start when dealing with large playlists to avoid the delay of filling the playlist.\r\n\r\nThe basic solution to play 200 items starting at position 2 is:\r\nAdd the first 2 items.\r\nStart playing the 2nd item.\r\nAdd the next items.\r\n\r\nUnfortunately this is not as simple as that due the single threaded / messaging approach of Exoplayer.\r\nThe start playing is not instant as it might do background stuff to initialize codecs before retuning to the default thread.\r\nBut at that point the default thread is now handling the queuing of the future items and Exoplayer does not start playing until this operation is finished.\r\n\r\nA simple solution is to add a delay before continuing to queue but its value is \"unknown\" due to codec initialisation time.\r\nAdding complex wait on the player state can be very tricky if the items are invalid for example or other issues.\r\n\r\nDo you have some insight about how to properly handle this?\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9443/comments",
    "author": "Tolriq",
    "comments": [
      {
        "user": "krocard",
        "created_at": "2021-09-22T12:19:20Z",
        "body": "@marcbaechinger are significant delay expected for large playlist?\r\n\r\n@Tolriq as a workaround, add an item to the playlist on each `Player.Listener.onMediaItemTransition` callback. It is called every time the current item has finished playing."
      },
      {
        "user": "Tolriq",
        "created_at": "2021-09-22T15:10:40Z",
        "body": "I need to queue before to be able to have gapless transition and show the playlist to the users + delaying too much means that I need to have some proper mechanism to handle user interaction during the playlist filling like stopping or starting a new queue.\r\n\r\nMany uses cases that are problematic to handle properly.\r\n\r\nOnce the codecs are initialized a very small delay is enough to have the song start and then continue to queue, but first init can take longer and is problematic :(\r\n\r\nThe delay is probably generated because I'm forced to use addMediaSource and generate the media source because of other previous issues to address some specific needs. For 100 items it's like 2 seconds in my case on pixel 3a"
      },
      {
        "user": "krocard",
        "created_at": "2021-09-22T15:45:09Z",
        "body": "You don't have to push the next item to play, this would indeed break gapless playback and ExoPlayer ability to buffer over item transition.\r\n\r\nPush the N first items (for example 5) before starting playback. Then on each `Player.Listener.onMediaItemTransition` add an item. That will make sure ExoPlayer always knows the next N items to play."
      },
      {
        "user": "Tolriq",
        "created_at": "2021-09-22T15:49:37Z",
        "body": "@krocard \r\n\r\nAnd how to you handle user cancelling the queue and starting another one while queuing is occurring? You need to implement a complex queue manager on top of everything.\r\nHow do you handle the user that want to reorder the queue if the items are not there yet? Duplicate all the queue handling on your own side?\r\n\r\nPlease don't close as this is certainly not a solution but a very ugly and limited workaround."
      },
      {
        "user": "krocard",
        "created_at": "2021-09-22T16:44:26Z",
        "body": "Presumably keeping just the next item in the playlist should not be too complex (playlist has the current and next item). Change it if your app's queue first item changes."
      },
      {
        "user": "krocard",
        "created_at": "2021-09-22T16:48:58Z",
        "body": "> delay of filling the playlist\r\n\r\nCould you characterize that delay? How long are we talking about <100ms or over that.\r\n\r\nSome ideas:\r\n - Are you using `addMediaItem(MediaItem)` to add each item one by one (lots of RPC) or using `addMediaItems(List<MediaItem>)` to add all MediaItem in one call.\r\n - Have you tried to use Android Studio's profiler to check what is slowing down the playlist insertion? Maybe the hot spot is in your code."
      },
      {
        "user": "Tolriq",
        "created_at": "2021-09-22T17:01:13Z",
        "body": "> Presumably keeping just the next item in the playlist should not be too complex (playlist has the current and next item). Change it if your app's queue first item changes.\r\n\r\nThat means handling the whole queue system and reordering, shuffle, repeat and everything on the app side, completely defeating the ExoPlayer playlist stuff.\r\n\r\n\r\n> Could you characterize that delay? How long are we talking about <100ms or over that. Have you tried to use Android Studio's profiler to check what is slowing down the playlist insertion? Are you using `addMediaItem(MediaItem)` to add each item one by one (lots of RPC) or using `addMediaItems(List<MediaItem>)` to add all MediaItem in one call.\r\n\r\nAs described in a previous message I'm talking about couple of seconds for 100 items. Profiler is broken for me on AS Bumblebee. I should try systrace by adb if I can't fix that one.\r\n\r\nI'm using the single ```addMediaSource``` as I had memory issues before, but I can try to slice the queue in smaller batch yet still greatly reduce the number of calls."
      },
      {
        "user": "krocard",
        "created_at": "2021-09-23T18:43:57Z",
        "body": "I just tried playing a 500 item playlist in the demo app and playback started instantly. It would be very helpful to have a profiling or a way to reproduce."
      },
      {
        "user": "Tolriq",
        "created_at": "2021-09-24T07:28:20Z",
        "body": "I've made a lot of tests and it seems to happen a lot more when using addMediaSources than addMediaItems but that it's in fact not 100% :(\r\nI'll need to do more tests on real devices and release builds to be sure it's a real issue then I'll provide systrace."
      },
      {
        "user": "ojw28",
        "created_at": "2021-10-01T16:49:49Z",
        "body": "Marking `needs more info` pending the systrace being provided."
      },
      {
        "user": "Tolriq",
        "created_at": "2021-10-08T12:38:34Z",
        "body": "After more digging the issue is more about emulator and random codec init issues taking time then falling back to ffmpeg. Release mode on real device have proper performance when adding all the items in large batches."
      }
    ]
  },
  {
    "number": 9374,
    "title": "exoplayer for kodi available ?",
    "created_at": "2021-09-01T15:52:16Z",
    "closed_at": "2021-09-07T19:21:55Z",
    "labels": [
      "question",
      "need more info"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9374",
    "body": "how to install exoplayer in kodi ?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9374/comments",
    "author": "qutub11",
    "comments": [
      {
        "user": "kim-vde",
        "created_at": "2021-09-01T20:33:59Z",
        "body": "I am not sure I understand the question. It sounds like this is might be a question for the Kodi team. If not, can you please provide more details?"
      }
    ]
  },
  {
    "number": 9369,
    "title": "Check if an error is caused by a Renderer",
    "created_at": "2021-09-01T08:09:40Z",
    "closed_at": "2021-09-01T12:21:40Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9369",
    "body": "In version 2.15.0 the **onPlayerError** signature has changed from:\r\n\r\n`public void onPlayerError(ExoPlaybackException error)`\r\n\r\nto:\r\n\r\n`public void onPlayerError(PlaybackException error)`\r\n\r\nWith the older signature we could check if the error was caused by a renderer by querying the error type:\r\n\r\n`if (error.type == ExoPlaybackException.TYPE_RENDERER)`\r\n\r\nHow can now be checked with **PlaybackException**? There is no equivalent in **PlaybackException.errorCode**\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9369/comments",
    "author": "perracodex",
    "comments": [
      {
        "user": "AquilesCanta",
        "created_at": "2021-09-01T12:21:40Z",
        "body": "The simple answer is: Use\r\n\r\n```\r\nif (error instanceof ExoPlaybackException\r\n    && ((ExoPlaybackException) error).type == ExoPlaybackException.TYPE_RENDERER)\r\n```\r\n\r\nBut the better answer is use `error.errorCode` which provides a finer grained description of what the issue is.\r\n\r\n"
      },
      {
        "user": "perracodex",
        "created_at": "2021-09-01T12:29:02Z",
        "body": "Thank you for the answer.\r\nI checked all the possible codes available for **error.errorCode**, but couldn't find any to be the equivalent for **TYPE_RENDERER**,\r\nShould I assume that for all \"renderer\" errors the only solution would be as in your answer?"
      },
      {
        "user": "AquilesCanta",
        "created_at": "2021-09-01T12:35:42Z",
        "body": "There is no equivalent of TYPE_RENDERER because knowing that an error happened in the renderer is deemed not useful. It just tells you it happened in the renderer. The cause could be a DRM issue, an AudioTrack issue, a decoder issue, or even something else. So knowing the type is not really a significant usecase. It would be more meaningful to know what you do if the error is of TYPE_RENDERER."
      }
    ]
  },
  {
    "number": 9357,
    "title": "How to record RTSP streaming video By exoplayer",
    "created_at": "2021-08-31T01:09:34Z",
    "closed_at": "2021-08-31T11:25:40Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9357",
    "body": "Before filing a feature request:\r\n-----------------------\r\n\r\n\r\nWhen filing a feature request:\r\n-----------------------\r\nI use exoplayer to play RTSP streaming video, but I need to record while playing. What should I do.\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9357/comments",
    "author": "Tumbler0809",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2021-08-31T11:25:40Z",
        "body": "ExoPlayer is a playback library. I'm afraid we do not support recording use cases."
      }
    ]
  },
  {
    "number": 9345,
    "title": "Exoplayer unable to show preview with RTSP url with format “rtsp://ip:port” ",
    "created_at": "2021-08-27T10:24:29Z",
    "closed_at": "2021-09-01T15:23:37Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9345",
    "body": "Using exoplayer to connect to my ip  camera with RTSP url of format rtsp://ip:port.\r\n\r\nGetting URL ParserException.\r\n\r\nPlease provide RTSP url format's supported by exo-player",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9345/comments",
    "author": "penmatsa",
    "comments": [
      {
        "user": "claincly",
        "created_at": "2021-08-27T12:28:50Z",
        "body": "Please provide a log of RTSP messages.\r\n\r\nThe easiest way is to use the `RtspMediaSource.Factory` method `setDebugLoggingEnabled()`\r\n\r\nAnd any logs you have."
      },
      {
        "user": "penmatsa",
        "created_at": "2021-08-31T15:02:35Z",
        "body": "Sorry for duplicate question.Need to resolve same issue as #9346.\r\n\r\nThank You"
      },
      {
        "user": "claincly",
        "created_at": "2021-09-01T15:23:37Z",
        "body": "Please track the issue using #9346. I am closing this for the time being."
      }
    ]
  },
  {
    "number": 9343,
    "title": "Play audio and video at the same time. (However, post-processing must be possible in the AudioProcessor)",
    "created_at": "2021-08-26T17:07:09Z",
    "closed_at": "2021-08-26T17:33:39Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9343",
    "body": "Hi \r\n\r\nCurrently, we are using two exoplayer instances to play audio and video at the same time.\r\n(This audio was extracted from the video and then processed by our solution.\r\nSo, Audio is 5.1 channels and video is stereo)\r\nHowever, of course, if i repeat seek, play, and pause, the synchronization will gradually become out of sync.\r\nTherefore, I want to play audio and video files with one Exoplayer Instance. \r\n\r\nsum up\r\n- play audio and video at the same time\r\n  ( video is stereo, audio is 5.1 )\r\n- post-processing must be possible (AudioProcessor)\r\n- NO out of sync\r\n\r\nIs it possible?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9343/comments",
    "author": "hotstone1993",
    "comments": [
      {
        "user": "icbaker",
        "created_at": "2021-08-26T17:12:49Z",
        "body": "Have you tried using MergingMediaSource?"
      },
      {
        "user": "hotstone1993",
        "created_at": "2021-08-26T17:33:36Z",
        "body": "Thank you for quick response.\r\nI use MergingMediaSource and it works perfectly.\r\n(It didn't work when I used MergingMediaSource in the past, but I guess I was used it wrong then.)\r\n"
      }
    ]
  },
  {
    "number": 9341,
    "title": "Behaviour of `getMinimumLoadableRetryCount` in `DefaultLoadErrorHandlingPolicy`",
    "created_at": "2021-08-26T09:06:14Z",
    "closed_at": "2021-09-01T08:13:05Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9341",
    "body": "ExoPlayerVersion: v2.15.0\r\n\r\nI am trying to give retry count for the http calls which Exo is doing internally (Be it manifest, Chunk/Segment, DRM).\r\nFor that, I have my class which extends to `DefaultLoadErrorHandlingPolicy` and I am overriding `getMinimumLoadableRetryCount` in order to achieve it.\r\n\r\n**Question:** I can see that when i pass count 2 then LoadError is coming 3 times and then it gives SourceError. I mean when I give value greater than 1, it always results in +1 LoadError.\r\n\r\nBut when I give 0 or 1 in count, it always results with LoadError 2 times.\r\nI think Exo is internally starting from 0 (with Index). But what is going on with 0 or 1 count value. \r\n\r\nExo is calling it **minLoadableRetryCount**, is there something max as well ? \r\nCan you please suggest on it ? Is this the expected behaviour. \r\n\r\nI have tested in ExoDemo app as well by hard coding the return value in `getMinimumLoadableRetryCount` of `DefaultLoadErrorHandlingPolicy`. It is the same behaviour as explained above.\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9341/comments",
    "author": "GouravSna",
    "comments": [
      {
        "user": "GouravSna",
        "created_at": "2021-08-30T05:06:03Z",
        "body": "Hi @ojw28 , Can you please help me on this."
      },
      {
        "user": "ojw28",
        "created_at": "2021-08-31T11:14:45Z",
        "body": "As per the documentation, `getMinimumLoadableRetryCount` returns a _minimum_ number of retries. The player may make more retry attempts than this. This approach is generally useful to allow the player to continue making additional retries for errors that may be recoverable, for as long as it's able to play out media that it had already buffered.\r\n\r\nIf you want to impose a maximum limit then I think you can do so by overriding `getRetryDelayMsFor` to do something like:\r\n\r\n```\r\nif (loadErrorInfo.errorCount > maxRetryCount) {\r\n  return C.TIME_UNSET;\r\n}\r\nreturn super.getRetryDelayMsFor(loadErrorInfo);\r\n```\r\n\r\nAs per the Javadoc for that method:\r\n\r\n> A return value of {@link C#TIME_UNSET} indicates that the error is fatal and should not be retried."
      },
      {
        "user": "GouravSna",
        "created_at": "2021-08-31T11:24:37Z",
        "body": "Sure. Thanks @ojw28 \r\nI will try it."
      }
    ]
  },
  {
    "number": 9313,
    "title": "How to find Cue points are available inside the m3u8 file using exoplayer?",
    "created_at": "2021-08-19T03:05:47Z",
    "closed_at": "2021-09-09T11:19:49Z",
    "labels": [
      "question",
      "need more info",
      "stale"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9313",
    "body": "I am using latest Exoplayer version. We have live streaming URL (m3u8) it contains Original video as well as Ads. The URL is working fine without any problem, Ad also playing fine without any problem. But I want to print the log like ad started whenever ad stated and also ad end log whenever ad closed. Is it possible in latest Exoplayer version(2.14.2) to print the ads events?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9313/comments",
    "author": "androaddict",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2021-08-19T09:37:55Z",
        "body": "How are the ads marked in the stream? If they're marked using in-stream ID3 metadata then you can register to receive this metadata with:\r\n\r\n```\r\nplayer.addListener(new Listener() {\r\n  @Override\r\n  public void onMetadata(Metadata metadata) {\r\n    // Metadata should be delivered here.\r\n  }      \r\n});\r\n```\r\n\r\nIf the ads are marked in some other way, you'll need to provide more information for us to help. Thanks!"
      },
      {
        "user": "androaddict",
        "created_at": "2021-08-19T11:19:23Z",
        "body": "Thanks for replay @ojw28 \r\n\r\nWe insert ads through SSAI(Server side Ad Insertion) \r\n\r\nabove the URL is sample for Live streaming URL. It contains Original content as well as Ads. I need to print the something whenever ads started & ended.\r\n"
      },
      {
        "user": "ojw28",
        "created_at": "2021-08-19T12:08:51Z",
        "body": "I don't see any ID3 metadata in the stream.\r\n\r\nIt's necessary for a SSAI solution to put markers of some kind into the stream so that clients can identify which parts of the stream are ads (if an ad is inserted in a completely seamless way on the server-side, it's obviously not possible for a client to determine where the ad is). I think you'll need to ask whoever's implementing the SSAI what markers they're adding to do this. Once you have this information, we can advise on how that information can be picked up using ExoPlayer APIs."
      },
      {
        "user": "androaddict",
        "created_at": "2021-08-19T12:32:52Z",
        "body": "Okay fine@ojw28. I will look at once again. As per discussion if any ID3 Meta data available in this stream means we can able to track the ad events(like start and end) right ?? "
      },
      {
        "user": "ojw28",
        "created_at": "2021-08-19T12:33:48Z",
        "body": "If ID3 metadata were inserted into the stream at the start and end of each ad, then yes."
      },
      {
        "user": "androaddict",
        "created_at": "2021-08-19T12:48:40Z",
        "body": "Okay @ojw28 Thanks for the your valuable support. We will check and update you. Thanks lot"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2021-09-08T01:04:27Z",
        "body": "<!-- event: mark-stale -->\nHey @androaddict. We need more information to resolve this issue but there hasn't been an update in 14 weekdays. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      }
    ]
  },
  {
    "number": 9312,
    "title": "What to do if PTS Wraparound Logic Yields a Negative Value",
    "created_at": "2021-08-19T00:39:21Z",
    "closed_at": "2021-11-03T12:11:28Z",
    "labels": [
      "question",
      "bad media"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9312",
    "body": "[REQUIRED] Searched documentation and issues\r\n\r\nThis may be related to issue #8220, but I am unsure if the timestamps in that issue were referring to unadjusted frame presentation timestamps.\r\n\r\n[REQUIRED] Question\r\n\r\nFor context, I'm using ExoPlayer 2.11.1, but I've ported the latest version of TimestampAdjuster into my project; I think I've seen the following with the 2.11.1 version of TimestampAdjuster as well, though.\r\n\r\nI added some logs to TimestampAdjuster, specifically adjustTsTimestamp, and I'm seeing a series of negative PTS values. \r\nThe first PTS value is positive and is equal to ptsWrapAbove, but due to the Math.abs(ptsWrapBelow - lastPts)  being less than Math.abs(ptsWrapAbove - lastPts), the PTS gets set to ptsWrapBelow which is a negative value.\r\n\r\nHere are the logs:\r\n\r\n08-18 18:06:21.793 25387 28296 D TimestampAdjuster: Negative PTS detected! lastPts: 447558321 closestWrapCount: 0 ptsWrapBelow: -2255131118 ptsWrapAbove: **6334803474**\r\n08-18 18:06:21.793 25387 28296 D TimestampAdjuster: Before: **6334803474** Negative PTS: **-2255131118**\r\n08-18 18:06:21.801 25387 28296 D TimestampAdjuster: Negative PTS detected! lastPts: -2255131117 closestWrapCount: 0 ptsWrapBelow: -5981079300 ptsWrapAbove: 2608855292\r\n08-18 18:06:21.801 25387 28296 D TimestampAdjuster: Before: 2608855292 Negative PTS: -5981079300\r\n08-18 18:06:21.805 25387 28296 D TimestampAdjuster: Negative PTS detected! lastPts: -5981079299 closestWrapCount: 0 ptsWrapBelow: -5981077798 ptsWrapAbove: 2608856794\r\n08-18 18:06:21.805 25387 28296 D TimestampAdjuster: Before: 2608856794 Negative PTS: -5981077798\r\n08-18 18:06:21.807 25387 28296 D TimestampAdjuster: Negative PTS detected! lastPts: -5981077797 closestWrapCount: 0 ptsWrapBelow: -5981082302 ptsWrapAbove: 2608852290\r\n08-18 18:06:21.807 25387 28296 D TimestampAdjuster: Before: 2608852290 Negative PTS: -5981082302\r\n08-18 18:06:21.812 25387 28296 D TimestampAdjuster: Negative PTS detected! lastPts: -5981082301 closestWrapCount: 0 ptsWrapBelow: -5981080800 ptsWrapAbove: 2608853792\r\n08-18 18:06:21.812 25387 28296 D TimestampAdjuster: Before: 2608853792 Negative PTS: -5981080800\r\n08-18 18:06:21.815 25387 28296 D TimestampAdjuster: Negative PTS detected! lastPts: -5981080799 closestWrapCount: 0 ptsWrapBelow: -5981076296 ptsWrapAbove: 2608858296\r\n08-18 18:06:21.815 25387 28296 D TimestampAdjuster: Before: 2608858296 Negative PTS: -5981076296\r\n08-18 18:06:21.817 25387 28296 D TimestampAdjuster: Negative PTS detected! lastPts: -5981076295 closestWrapCount: 0 ptsWrapBelow: -5981074794 ptsWrapAbove: 2608859798\r\n08-18 18:06:21.817 25387 28296 D TimestampAdjuster: Before: 2608859798 Negative PTS: -5981074794\r\n08-18 18:06:21.819 25387 28296 D TimestampAdjuster: Negative PTS detected! lastPts: -5981074794 closestWrapCount: 0 ptsWrapBelow: -5981061282 ptsWrapAbove: 2608873310\r\n08-18 18:06:21.819 25387 28296 D TimestampAdjuster: Before: 2608873310 Negative PTS: -5981061282\r\n\r\nIf ExoPlayer does not support negative presentation timestamps, how might I mitigate this issue?\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9312/comments",
    "author": "acass91",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2021-08-19T09:31:48Z",
        "body": "I don't really follow how you'd end up in this situation unless the timestamps in the source content are incorrect. Please could you share some content that reproduces the issue, if you want us to take a closer look?"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2021-09-08T01:04:28Z",
        "body": "<!-- event: mark-stale -->\nHey @acass91. We need more information to resolve this issue but there hasn't been an update in 14 weekdays. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "acass91",
        "created_at": "2021-09-08T16:26:17Z",
        "body": "I sent an email to dev.exoplayer@gmail.com with the content. After further investigation, I agree that the timestamps in the source content are incorrect. I implemented a workaround to avoid feeding the bad PTS values to the adjuster. Do you think this is viable?\r\n\r\n```\r\n      if (previousPts != -1 && Math.abs(pts - previousPts) > PTS_TICKS_PER_SECOND * 2) {\r\n          // Try not feeding the PTS to the timestamp adjuster if the difference is too great.\r\n          Log.w(TAG, \"Current PTS is \" + pts + \", but previous PTS was \" + previousPts + \"!\");\r\n        } else {\r\n\r\n          if (!firstGoodPts && previousPts != -1) {\r\n            timestampAdjuster.reset(TimestampAdjuster.ptsToUs(pts));\r\n            firstGoodPts = true;\r\n          }\r\n\r\n          timeUs = timestampAdjuster.adjustTsTimestamp(pts);\r\n        }\r\n        previousPts = pts;\r\n```"
      },
      {
        "user": "ojw28",
        "created_at": "2021-09-09T12:11:14Z",
        "body": "I think it would probably break other usages of the adjuster (e.g., when the timestamp adjuster is used to determine the duration of a TS stream, it's going to be fed timestamps that are separated by approximately the duration of the content).\r\n\r\nI think we should probably just do nothing and mark down as a case of bad media."
      },
      {
        "user": "acass91",
        "created_at": "2021-09-09T16:14:13Z",
        "body": "If I am only working with bad live streams, in which case the duration is unknown, would this still break other usages of the adjuster?"
      },
      {
        "user": "ojw28",
        "created_at": "2021-09-09T16:28:50Z",
        "body": "I'm not sure to be honest. If you choose to make this modification locally, then I think you'll just have to put it through a sufficient level of QA to be confident that it's safe."
      }
    ]
  },
  {
    "number": 9310,
    "title": "Download feature test cases",
    "created_at": "2021-08-17T17:42:10Z",
    "closed_at": "2021-08-18T12:02:58Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9310",
    "body": "I have implemented download feature of exoplayer into my app.\r\nNow I am looking for its 100% code coverage of download feature.\r\nIs there any article or GitHub link, where exoplayer has written test cases for download feature?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9310/comments",
    "author": "Manish-Github-86",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2021-08-18T12:02:58Z",
        "body": "This is not something we've done, sorry."
      }
    ]
  },
  {
    "number": 9302,
    "title": "How to get Proper AdprogressInfo using Exoplayer extension of IMA",
    "created_at": "2021-08-16T08:25:47Z",
    "closed_at": "2021-08-18T14:48:53Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9302",
    "body": "How I will get ad player current position when ad is playing. Am able to get ad duration but am not getting ad current position means that how much second being played. Am working on custom ad controller using exoplayer ima extension,  so I required this information. Please help.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9302/comments",
    "author": "adityaroutandroid",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2021-08-16T16:26:58Z",
        "body": "Just calling `getCurrentPosition` on the player should give you the playback position within the ad. If you're interested in the position within the content (i.e., the position from which playback of the content will resume after the ad has finished playing), then you can call `getContentPosition`."
      },
      {
        "user": "adityaroutandroid",
        "created_at": "2021-08-18T14:48:53Z",
        "body": "thanks @ojw28. Its working as expected."
      }
    ]
  },
  {
    "number": 9280,
    "title": "How to  delete simplecache safely?",
    "created_at": "2021-08-10T17:36:39Z",
    "closed_at": "2021-08-11T09:50:40Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9280",
    "body": "Thank you in advance.\r\nI always appreciate help from this community. \r\n\r\nI was just wondering what would be the most safe way to delete an instance of SimpleCache?\r\nWhat I am trying to implement is to delete all cached contents before the app is destroyed. \r\n\r\nI called `SimpleCache.delete(dir, exoDatabaseProvider)` in `onDestroy()`. I know the `onDestroy()` is not always called.(Please let me know if you have a suggestion about when to call the `SimpleCache.delete()`)\r\n\r\nOpening the Device File Explorer in Android Studio, I see that the whole cache file directory has been deleted. \r\n\r\nBut the problem is when I reopen the app. The error message shows that there must be some errors when deleting the instance of simplecache. How do I resolve this problem?\r\n```\r\nE/SQLiteLog: (1) no such table: ExoPlayerCacheIndex4829447483381d6b in \"DELETE FROM ExoPlayerCacheIndex4829447483381d6b WHERE id = ?\"\r\n```\r\n\r\nIn `onCreate()`, the app starts caching. So, the app has to cache new data every time user opens the app and any old cached data must be deleted before the app starts. \r\n\r\nThank you!",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9280/comments",
    "author": "jpark58",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2021-08-11T09:50:40Z",
        "body": "There is no hook for executing code when your app is about to be destroyed. Note also that `Activity.onDestroy` is called when a single activity is destroyed, not when your app process is destroyed.\r\n\r\nThat aside, using `SimpleCache.delete` is the correct way to delete the content that may have been persisted by a `SimpleCache`. When you call this method, you should ensure that you don't hold a reference to the `SimpleCache` instance being deleted, and that you've called `SimpleCache.release` on any instance that you did have.\r\n\r\nI think the error message is most likely because you're holding a reference to the `SimpleCache` instance that you've deleted, which you then try to do something with."
      }
    ]
  },
  {
    "number": 9276,
    "title": "current download zise is zero when download is in pause state and app got killed",
    "created_at": "2021-08-10T08:35:31Z",
    "closed_at": "2021-09-07T01:04:27Z",
    "labels": [
      "question",
      "closed-by-bot"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9276",
    "body": "```\r\nval download = downloadManager?.currentDownloads?.find {\r\n   it.request.uri == Assertions.checkNotNull(mediaItem!!.playbackProperties).uri \r\n}\r\n```\r\n\r\nThis method I am using to get the current download. \r\nWhen the download is in progress then we are getting the current download size > 0\r\nBut when we start the download, move it to the pause state and killed the app. This time the current download size is zero. we are not able to resume the download. \r\n\r\nPlease let me know, it there any other option to get the current download object after the app killed.\r\n```\r\nprivate fun isVideoAlreadyInDownload() {\r\n\r\n        createMediaItem()\r\n\r\n        val download = downloadManager?.currentDownloads?.find { it.request.uri == Assertions.checkNotNull(mediaItem!!.playbackProperties).uri }\r\n        val download1 = downloadManager?.downloadIndex?.getDownload(mediaItem!!.playbackProperties?.uri.toString())\r\n        //Toast.makeText(requireContext(), \"d'Load = \" + download?.state.toString(), Toast.LENGTH_LONG).show()\r\n        Toast.makeText(requireContext(), \"download1\"+download1?.state.toString(), Toast.LENGTH_LONG).show()\r\n\r\n        if (download != null && download.state == Download.STATE_QUEUED) {\r\n            binding.root.img_download.visibility = GONE\r\n            binding.root.fl_progress.visibility = VISIBLE\r\n            downloadPercentage = download.percentDownloaded.toInt()\r\n            binding.root.pb_download.progress = downloadPercentage\r\n            binding.root.iv_status.setImageResource(R.drawable.exo_controls_play)\r\n            videoAlreadyInDownload = true\r\n            downloadInitiated()\r\n        } else if (download != null && download.state == Download.STATE_DOWNLOADING) {\r\n            binding.root.img_download.visibility = GONE\r\n            binding.root.fl_progress.visibility = VISIBLE\r\n            binding.root.pb_download.progress = download.percentDownloaded.toInt()\r\n            binding.root.iv_status.setImageResource(R.drawable.exo_controls_pause)\r\n            videoAlreadyInDownload = true\r\n            downloadInitiated()\r\n        }\r\n    }\r\n```",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9276/comments",
    "author": "Manish-Github-86",
    "comments": [
      {
        "user": "claincly",
        "created_at": "2021-08-10T09:43:56Z",
        "body": "I'm not exactly sure what are you asking, is it\r\n\r\n_How to get the item being downloaded, while the app is killed?_\r\n\r\nNot sure what your code snippet trying to convey?"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2021-08-30T01:04:11Z",
        "body": "<!-- event: mark-stale -->\nHey @Manish-Github-86. We need more information to resolve this issue but there hasn't been an update in 14 weekdays. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2021-09-07T01:04:26Z",
        "body": "<!-- event: close-stale -->\nSince there haven't been any recent updates here, I am going to close this issue.\n\n@Manish-Github-86 if you're still experiencing this problem and want to continue the discussion just leave a comment here and we are happy to re-open this."
      }
    ]
  },
  {
    "number": 9273,
    "title": "Questions regarding caching and possible bugs.",
    "created_at": "2021-08-09T21:08:12Z",
    "closed_at": "2021-09-07T19:22:43Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9273",
    "body": "Hey ExoPlayer Team!\r\n\r\nI have a couple of things I'd like to understand about caching that maybe you can help with. \r\n\r\nObservation A:\r\nSuppose I have a .m3u8 file for some HLS stream with url == `someUrl`\r\nNow imagine I stream that .m3u8 file via `exoPlayer.prepare(someUrl)`.\r\nWhen that's stored into my Cache and then I call `downloadIndex.getDownload(someUrl)` I will get `null` which means that  the DownloadManager (which I use separately for predownloading) thinks that the file has not been downloaded. \r\n\r\nWhy is that?\r\n\r\nNote that for the above example I am using the same Cache when constructing my DownloadService dependencies and my ExoPlayer dependencies.\r\n\r\n\r\nObservation B:\r\nIf I download some media with url == `someUrl` via the DownloadService and then the user goes to their settings and clears the app's cache, why does `downloadIndex.getDownload(someUrl)` != null? (i.e. why does it think there is still a valid file and how can I get it to correct itself?)\r\nIs this a bug?\r\n\r\nSorry if either of these questions are obvious.\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9273/comments",
    "author": "tomtaila-wesayhi",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2021-08-16T12:06:38Z",
        "body": "> Observation A:\r\n\r\n`DownloadManager` is implemented on top of ExoPlayer's caching layer (i.e., if you download something using `DownloadManager`, it writes the media data into a `Cache`). However, if you cache media directly into the `Cache` underneath `DownloadManager`, it's not the case that `DownloadManager` will notice and update its state to indicate the content is downloaded. That's by design.\r\n\r\nNote also that HLS content will typically consist of many hundreds of small files, and includes redundancy (i.e., only a subset of the files are needed). The subset that you pick is fundamentally different for download use cases (you'll typically download in a single variant/quality) and streaming playback (the player will dynamically adapt the variant/quality based on bandwidth). If you stream and cache the HLS content but the player had to drop down to a really low resolution at some point during the playback, would that be considered as downloaded or not?\r\n\r\n> Observation B:\r\n\r\nWhat directory are you using for your cache? The ExoPlayer demo app uses `getExternalFilesDir` or `getFilesDir`, which are not cleared when you press the \"clear cache\" button in settings. If your app is doing the same, it's correct that the app will still think there's a valid download, because the download will still be there. ​You would need to use \"clear data\" to remove downloads in this case. This works correctly in the demo app. If I change the demo app to use `getExternalCacheDir` or `getCacheDir` instead, then I am able to reproduce in that case.\r\n\r\n`DownloadManager` is designed primarily for use cases where the user explicitly downloads content (e.g., by pressing a download button in the app, like in the demo app). The implementation reflects that:\r\n\r\n* In a typical video app (e.g., a movie rental service), a user would not expect that watching a piece of content would be sufficient for it to be marked as downloaded in the UI. This is why Observation A is the way it is.\r\n* When the user explicitly marks a piece of content as downloaded, they'd not expect the OS to be able to remove it silently (imagine getting onto a flight and finding all your downloads have disappeared). This could happen if using `getExternalCacheDir` or `getCacheDir`. Hence we generally expect apps to be using `getExternalFilesDir` or `getFilesDir` for caches that are used by `DownloadManager`, which to some extent explains Observation B. I consider the behavior when using `getExternalCacheDir` or `getCacheDir` as an oversight, but use of these directories is not really expected for typical use of `DownloadManager`. We could look at fixing it, but I'm not sure it's high priority."
      }
    ]
  },
  {
    "number": 9262,
    "title": "How to make more faster process of get all downloads?",
    "created_at": "2021-08-05T16:52:54Z",
    "closed_at": "2021-08-06T09:19:33Z",
    "labels": [
      "question",
      "wont fix: app issue"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9262",
    "body": "How to make more faster process of get all downloads?\r\n```\r\nval exoDatabaseProvider = ExoDatabaseProvider(context)\r\n\r\nval downloadManager = DownloadManager(\r\n                context,\r\n                exoDatabaseProvider,\r\n                SimpleCache(\r\n                    File(context.applicationContext.cacheDir, \"media\"),\r\n                    NoOpCacheEvictor(),\r\n                    exoDatabaseProvider\r\n                ),\r\n                cacheDataSourceFactory,\r\n                Executors.newCachedThreadPool()\r\n            )\r\n```\r\nIf I do this:\r\n```\r\n  override fun getAllDownloads(): List<Download> {\r\n        val start = System.currentTimeMillis()\r\n        Log.e(TAG, \"getAllDownloads: start\")\r\n        val downloads = downloadManager.downloadIndex.getDownloads(Download.STATE_COMPLETED)\r\n        Log.e(TAG, \"getAllDownloads: delta: ${System.currentTimeMillis() - start}\")\r\n      \r\n        val list = mutableListOf<MpdDownload>()\r\n\r\n        if (downloads.moveToFirst()) {\r\n            val download = downloads.download\r\n         \r\n                list.add(download)\r\n          \r\n        }\r\n        while (downloads.moveToNext()) {\r\n            val download = downloads.download\r\n         \r\n                list.add(download)\r\n         \r\n        }\r\n      \r\n        Log.e(TAG, \"getAllDownloads: end ${System.currentTimeMillis() - start}\")\r\n        return list\r\n    }\r\n```\r\nResult in log:\r\n```\r\n2021-08-05 19:42:29.719 23655-23921 E/: getAllDownloads: start\r\n2021-08-05 19:42:29.722 23655-23921 E/: getAllDownloads: count: 22\r\n2021-08-05 19:42:29.722 23655-23921 E/: getAllDownloads: delta: 3\r\n2021-08-05 19:42:40.597 23655-23921 E/: getAllDownloads: end 10878\r\n```\r\n10sec!!! Why so long?\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9262/comments",
    "author": "Kolyall",
    "comments": [
      {
        "user": "Kolyall",
        "created_at": "2021-08-05T17:00:01Z",
        "body": "And also when the fun `getAllDownloads()` is called, then instance of exoplayer is lagging"
      },
      {
        "user": "andrewlewis",
        "created_at": "2021-08-06T08:35:31Z",
        "body": "It might be helpful if you could add some more timing logging to `DefaultDownloadIndex.getDownloadForCurrentRow` so we can see what is going on during the 10 seconds. Also please could you confirm which version of the library you are using?\r\n\r\n@marcbaechinger Marc, please could you take a look? I expect we need more information but I'm not sure what else would help diagnose this or whether it's working as expected."
      },
      {
        "user": "Kolyall",
        "created_at": "2021-08-06T09:19:31Z",
        "body": "Sorry, my bad\r\nAt each element I get `com.google.android.exoplayer2.drm.OfflineLicenseHelper#getLicenseDurationRemainingSec` that's why it's so long,\r\nThanks, have a nice day."
      }
    ]
  },
  {
    "number": 9244,
    "title": "Always throws the exception when setting the Surface that has already been released",
    "created_at": "2021-07-31T15:59:45Z",
    "closed_at": "2021-08-30T01:04:13Z",
    "labels": [
      "question",
      "closed-by-bot"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9244",
    "body": "\r\n  \r\n```\r\n2021-07-31 23:30:25.130 4113-8278/com.ivuu E/VideoFrameReleaseHelper: Failed to call Surface.setFrameRate\r\n      java.lang.IllegalStateException: Surface has already been released.\r\n        at android.view.Surface.checkNotReleasedLocked(Surface.java:696)\r\n        at android.view.Surface.setFrameRate(Surface.java:905)\r\n        at com.google.android.exoplayer2.video.VideoFrameReleaseHelper.setSurfaceFrameRateV30(VideoFrameReleaseHelper.java:389)\r\n        at com.google.android.exoplayer2.video.VideoFrameReleaseHelper.clearSurfaceFrameRate(VideoFrameReleaseHelper.java:379)\r\n        at com.google.android.exoplayer2.video.VideoFrameReleaseHelper.onSurfaceChanged(VideoFrameReleaseHelper.java:182)\r\n        at com.google.android.exoplayer2.video.MediaCodecVideoRenderer.setSurface(MediaCodecVideoRenderer.java:549)\r\n        at com.google.android.exoplayer2.video.MediaCodecVideoRenderer.handleMessage(MediaCodecVideoRenderer.java:507)\r\n        at com.google.android.exoplayer2.ExoPlayerImplInternal.deliverMessage(ExoPlayerImplInternal.java:1503)\r\n        at com.google.android.exoplayer2.ExoPlayerImplInternal.sendMessageToTarget(ExoPlayerImplInternal.java:1467)\r\n        at com.google.android.exoplayer2.ExoPlayerImplInternal.sendMessageInternal(ExoPlayerImplInternal.java:1442)\r\n        at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:509)\r\n        at android.os.Handler.dispatchMessage(Handler.java:102)\r\n        at android.os.Looper.loop(Looper.java:246)\r\n        at android.os.HandlerThread.run(HandlerThread.java:67)\r\n```\r\n\r\nIt would be great if check the `surface.isValid()` before the `surface.setFrameRate(frameRate, compatibility);`\r\n```\r\n@RequiresApi(30)\r\nprivate static void setSurfaceFrameRateV30(Surface surface, float frameRate) {\r\n  int compatibility =\r\n      frameRate == 0\r\n          ? Surface.FRAME_RATE_COMPATIBILITY_DEFAULT\r\n          : Surface.FRAME_RATE_COMPATIBILITY_FIXED_SOURCE;\r\n  try {\r\n    surface.setFrameRate(frameRate, compatibility);\r\n  } catch (IllegalStateException e) {\r\n    Log.e(TAG, \"Failed to call Surface.setFrameRate\", e);\r\n  }\r\n}\r\n```\r\n\r\nExoPlayer: 2.13.3\r\nAndroid: 11",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9244/comments",
    "author": "ShawnLin013",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2021-07-31T21:50:10Z",
        "body": "I don't understand the request here. The title says \"always throw the exception\" whereas the body of the issue says \"check `surface.isValid()`\".\r\n\r\nWhat is it exactly that you're suggesting? Also, how are you providing the surface to the player? If you're doing this manually and if you're seeing this issue, then that may imply that you're incorrectly leaving the player holding a released surface, which isn't something you should be doing."
      },
      {
        "user": "ShawnLin013",
        "created_at": "2021-08-01T03:09:29Z",
        "body": "Hi @ojw28 \r\nWe use a singleton ExoPlayer in RecyclerView and manual release the ViewHolder's Surface when surfaceDestroyed() called. As the following code:\r\n```\r\nsurface?.release()\r\nsurface = null\r\nsendMessage(C.TRACK_TYPE_VIDEO, Renderer.MSG_SET_SURFACE, null)\r\n```\r\nSince the Surface has already been released. The exception always called when manual release the ViewHolder's Surface.\r\nSo my suggestion is that surface.isValid() should be called before the surface.setFrameRate(frameRate, compatibility); called.\r\nAs the following code:\r\n```\r\n@RequiresApi(30)\r\nprivate static void setSurfaceFrameRateV30(Surface surface, float frameRate) {\r\n  if (!surface.isValid()) {\r\n    return\r\n  }\r\n  \r\n  int compatibility =\r\n      frameRate == 0\r\n          ? Surface.FRAME_RATE_COMPATIBILITY_DEFAULT\r\n          : Surface.FRAME_RATE_COMPATIBILITY_FIXED_SOURCE;\r\n  try {\r\n    surface.setFrameRate(frameRate, compatibility);\r\n  } catch (IllegalStateException e) {\r\n    Log.e(TAG, \"Failed to call Surface.setFrameRate\", e);\r\n  }\r\n}\r\n```"
      },
      {
        "user": "ojw28",
        "created_at": "2021-08-01T13:22:21Z",
        "body": "I doubt you need to manually release a `Surface` when `surfaceDestroyed` is called. That said, if you really want to do this for some reason, why don't you swap the order of the calls so that you clear the surface from the player first? You shouldn't ever leave the player with an invalid surface, however temporarily, which is what you appear to be doing here."
      },
      {
        "user": "google-oss-bot",
        "created_at": "2021-08-19T01:04:16Z",
        "body": "<!-- event: mark-stale -->\nHey @ShawnLin013. We need more information to resolve this issue but there hasn't been an update in 14 weekdays. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2021-08-30T01:04:12Z",
        "body": "<!-- event: close-stale -->\nSince there haven't been any recent updates here, I am going to close this issue.\n\n@ShawnLin013 if you're still experiencing this problem and want to continue the discussion just leave a comment here and we are happy to re-open this."
      }
    ]
  },
  {
    "number": 9233,
    "title": "Downloads don't take into account the stream keys",
    "created_at": "2021-07-27T16:38:48Z",
    "closed_at": "2021-07-29T09:31:48Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9233",
    "body": "ExoPlayer version 2.11.8\r\n\r\n[REQUIRED] Searched documentation and issues\r\nVery similar to \r\n#6911 and #7682\r\n\r\n[REQUIRED] Question\r\nWhen I download a HLS media source using the `DownloadHelper`, all qualities get downloaded.\r\n\r\nI initialise the `DownloadHelper` this way:\r\n```kotlin\r\n            val helper = DownloadHelper.forHls(\r\n                uri,\r\n                createHttpDataSourceFactory(),\r\n                DefaultRenderersFactory(context),\r\n                null,\r\n                DefaultTrackSelector.Parameters.getDefaults(context)\r\n                    .buildUpon()\r\n                    .setForceHighestSupportedBitrate(true)\r\n                    .build()\r\n            )\r\n```\r\n\r\nThen I start the download with this code:\r\n```kotlin\r\n            helper.prepare(object : DownloadHelper.Callback {\r\n                override fun onPrepared(helper: DownloadHelper) {\r\n                    DownloadService.sendAddDownload(\r\n                        context,\r\n                        VideoDownloadService::class.java,\r\n                        helper.getDownloadRequest(ByteArray(CacheUtil.DEFAULT_BUFFER_SIZE_BYTES)),\r\n                        false\r\n                    )\r\n                }\r\n\r\n                override fun onPrepareError(helper: DownloadHelper, e: IOException) {\r\n                }\r\n            })\r\n```\r\n\r\nI have checked the stream keys created in `getDownloadRequest()` and there's always one stream key with\r\n- periodIndex: 0\r\n- groupIndex: 0\r\n- trackIndex: 0\r\n\r\nAny idea what could cause this?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9233/comments",
    "author": "romainpiel",
    "comments": [
      {
        "user": "romainpiel",
        "created_at": "2021-07-28T08:39:51Z",
        "body": "I've updated to 2.14.2 and it now works like a charm 🎉 "
      },
      {
        "user": "romainpiel",
        "created_at": "2021-07-28T12:29:20Z",
        "body": "Actually I could reproduce it again with 2.14.2. I'm a bit unsure why this is happening but I've done some debugging in my app and in the demo app and I observed this:\r\n- when calling `helper.getDownloadRequest()`, the download request is completely identical in my app and in the demo app. The url is the same and the stream keys are set to the highest quality \"0.0.2\"\r\n- however all bitrates ts files get downloaded from my app while only the best bitrate's ts files get downloaded in the demo app\r\n\r\nSo there's definitely an issue with my code but I'm curious why I would observe different behaviours when the request is completely identical 🤔 "
      },
      {
        "user": "romainpiel",
        "created_at": "2021-07-28T14:05:17Z",
        "body": "Finally got to the bottom of this. I only had to do a fresh install of the app to fix the issue. Basically at some point the database stored the test stream download with an empty `streamKeys`. And as the `mergeRequest()` function in `DownloadManager` ignores the request stream keys when the database record has an empty stream keys, the resulting stream keys array was always empty. It's quite a niche problem but out of curiosity, why do we have that if and why don't we always take the latest request stream keys?"
      },
      {
        "user": "ojw28",
        "created_at": "2021-07-29T09:31:48Z",
        "body": "I think this is working as intended. If there's already a download with a given ID, then adding a download with the same ID is additive. In other words, if the existing download has stream key A and the new request has stream key B, then the end result will be that stream keys A and B will be downloaded. It's also true that empty stream keys means \"download everything\". In your case, since the existing download is already downloading everything, adding a request to download a subset of stream keys doesn't add anything by this logic.\r\n\r\nWhether an \"additive\" design (i.e., the current one) is better than a \"replacement\" design (i.e., the one you suggest) is debatable. The \"replacement\" approach is more flexible, in that it allows removing stream keys as part of re-adding a download. The current design only allows removal of the whole download (at which point you can re-download a new set of stream keys). That said, removing/replacing part of a download feels like an edge case, and it's likely (I didn't confirm) more complicated to implement.\r\n\r\nClosing as working as intended."
      }
    ]
  },
  {
    "number": 9218,
    "title": "Skip Silence at end of tracks?",
    "created_at": "2021-07-22T20:37:43Z",
    "closed_at": "2021-07-23T14:43:11Z",
    "labels": [
      "question",
      "need more info"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9218",
    "body": "Is SkipSilence supposed to work at the end of audio tracks or just in the middle?  It doesn't seem to be working at the ends.  Is there something that has to be set other than SkipSilenceEnabled?  Thanks.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9218/comments",
    "author": "cncb-gh",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2021-07-23T10:08:41Z",
        "body": "I think setting the flag should be sufficient in case you are using the `DefaultAudioSink` that is used by default.\r\n\r\nThat should work on analzying the audio data that are produced by the audio media, so I'd expect in the middle as well as at the end. \r\n\r\nWhen using the `EventLogger`, do you see a line printed to he log similar like the one below? (or do you see a call to `AnalyticsListener.onSkipSilenceEnabledChanged` in case you are using a custom listener?)\r\n\r\n```\r\ncom.google.android.exoplayer2.demo D/EventLogger: skipSilenceEnabled [eventTime=0.00, mediaPos=0.00, window=0, true]\r\n```\r\n\r\nIf you see that log entry, all you need to do seems fine. In this case, can you post the media here or send us by email to dev.exoplayer@gmail.com?\r\n"
      },
      {
        "user": "cncb-gh",
        "created_at": "2021-07-23T14:43:11Z",
        "body": "Thanks, turns out it was a stupid mistake on my part.  Sorry to waste your time."
      }
    ]
  },
  {
    "number": 9211,
    "title": "How to use our custom notification for DownloadService",
    "created_at": "2021-07-21T10:34:36Z",
    "closed_at": "2021-07-21T13:38:04Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9211",
    "body": "I am looking at `DemoDownloadService` which uses `DownloadNotificationHelper` and shows the download progress in notification.\r\n\r\nI want to use my custom notification to give more functionalities on Notification UI. Is there any way to customize it.\r\nOne approach, I am thinking to copy paste the class `DownloadNotificationHelper` in my custom class as `DownloadNotificationHelper` is final, i can not extend it. And then after having the same on my end, i can create the notifications.\r\n\r\nSuppose, I put 1st media for downloading, i can see one notification. If I put 2nd media then download progress is merged and showed it on the notification.\r\n\r\nI want to show multiple notifications for each download so that I can handle the pause/resume functionalities individually. \r\n\r\nExoPlayer version: 2.14.1",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9211/comments",
    "author": "GouravSna",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2021-07-21T13:38:04Z",
        "body": "I think this is a duplicate of #8297. The comments there seem to answer your question. May I kindly ask you to check the other issue for more information.\r\n\r\nI'm closing this issue. If you think your issue is different from  #8297, please reopen."
      }
    ]
  },
  {
    "number": 9208,
    "title": "How can I limit the total number of caches?",
    "created_at": "2021-07-21T01:50:59Z",
    "closed_at": "2021-09-06T17:56:22Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9208",
    "body": "Hello,\r\n\r\nI want to implement caching for a list of videos.\r\nWhat I am trying to implement is pre-caching some chunk of every videos and store them in cache or disk so that users can watch videos without buffering.\r\n\r\nI just want to limit the total number of caches. How do I limit the number? I want the size of video list to be the total number of caches so that LRU cache evictor can maintain only recent videos.\r\n\r\nFor example, \r\n\r\nlimit of size of cache is 100kb for each file\r\n```\r\nDataSpec dataSpec = new DataSpec(videoUri, 0,1024*1024, null);\r\n```\r\n\r\nThen, limit of the number of caches...? ",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9208/comments",
    "author": "jpark58",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2021-07-21T13:27:21Z",
        "body": "I think you have only one single `Cache` instance which is probably the provided `SimpleCache`. The you can use a `CacheEvictor` that makes sure the cache does not get too big.  This can be a `LeastRecentlyUsedCacheEvictor` but given your use case I would expect that you want another strategy because if the user skips forward only you don't want that the media that never has been played is evicted.  \r\n\r\nI thinks it makes sense to have a working setup with an `LeastRecentlyUsedCacheEvictor` first. \r\n\r\n- create a single `SimpleCache` with a `LeastRecentlyUsedCacheEvictor` that you pass the max number of bytes to.\r\n- Use `CachedDataSource.Factory` to create data sources for playback with the `SimpleCache` instance from above\r\n\r\nThis will limit the number of bytes the cache uses. \r\n "
      },
      {
        "user": "jpark58",
        "created_at": "2021-07-21T14:05:31Z",
        "body": "Thank you!\r\nI already have implemented the `LeastRecentlyUsedCacheEvictor` and of course set the max size of it. But, doesn't that mean it is literally the total size of cache files? I apologize if my wording above was misleading. **What exactly I am trying to implement is to limit the number of cache files.** \r\n\r\nInitializing variables for SimpleCache. By doing this, I believe I set 90MB as max size of the evictor.\r\n```kotlin\r\nprivate val exoPlayerCacheSize = 90 * 1024 * 1024L\r\nprivate val leastRecentlyUsedCacheEvictor: LeastRecentlyUsedCacheEvictor = LeastRecentlyUsedCacheEvictor(exoPlayerCacheSize)\r\nprivate val exoDatabaseProvider: ExoDatabaseProvider = ExoDatabaseProvider(context)\r\nprivate val simpleCache = SimpleCache(dir, leastRecentlyUsedCacheEvictor, exoDatabaseProvider)\r\n```\r\n\r\nHere, I limited the size of each file to be cached and used it as a data spec in `CacheUtil.cache()` method.\r\n```kotlin\r\nval dataSpec = DataSpec(uri, 0, 1024 * 1024, null)\r\n```\r\n\r\nSo basically, not only limiting the max size of total files and each file, but also I want to limit the number of files to be cached.\r\n\r\nThank you in advance\r\n"
      },
      {
        "user": "marcbaechinger",
        "created_at": "2021-07-21T17:06:28Z",
        "body": "The `Cache` is not caching files directly but instead caches chunks of these files. ExoPlayer may only download parts of the files which can be seen eg. in the method of `CacheEvictor` that has a start and length for a give key that is representing a resource:\r\n\r\n```\r\nvoid onStartFile(Cache cache, String key, long position, long length);\r\n```\r\n\r\nI think I understand what you mean though. You want to only cache the begin of N streams/files. But this model is not how the `Cache` and the `CacheEvictor` internally works. You may be able to implement your own `CacheEvictor` that tries to track the keys that are passed to `onStartFile`. I don't think this is trivial to do though. I actually doubt whether this is worth it.\r\n\r\nI honestly don't see the benefit of being able to limit the number of files. Because at least approximately you get this when you do `numberOfFiles * (1024 * 1024) = maxCacheSize` that you can pass to the `LeastRecentlyUsedCacheEvitor`. What is not sufficient with this solution? You users won't be concerned about having stored 11 or 87 files. They are concerned about having not enough space on the device which is independent from numbers of files. "
      },
      {
        "user": "jpark58",
        "created_at": "2021-07-25T16:45:35Z",
        "body": "Thank you I really appreciate your help"
      }
    ]
  },
  {
    "number": 9197,
    "title": "How to cancel the ongoing prepare()",
    "created_at": "2021-07-15T21:34:02Z",
    "closed_at": "2021-08-24T01:04:05Z",
    "labels": [
      "question",
      "closed-by-bot"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9197",
    "body": "Context:\r\n\r\nWe are an app which can play multiple videos in a feed flow. We try to reuse exoplayer instances in our application since the exoplayer itself and underlying decoder is expensive to warm up. We usually call stop on an exoplayer once we are done with using it and put it back to a player pool for further usage.\r\n\r\nUsually as the user scroll through our feed, if there is view in the feed needs to play a video, we will obtain a player from the cached player pool. Set media item to it, prepare() and then play(). Once the video view is scrolled out of the view port, we will call stop() on that player and put the player back to the player pool. (very typical caching strategy)\r\n\r\nThere is a problem that we have encountered. Once the user scrolls through the feed quickly, we will have a case where we just call prepare() on a player to play **video A** but we have to call stop() on it and put it back to the pool. Because the view just appears in the view port and then move off of the view port due to the fast scroll speed. In this case, if the user quickly moves and stops at a position, that stopped player is obtained to prepare/play another **video B**. But instead **video A** is played.\r\n\r\nplayer 1: setMediaItem(video A)\r\nplayer 1: prepare()\r\nplayer 1: stop()\r\nplayer 1: isLoading() returns true ==> means the prepare() is still in process\r\nplayer 1: being put into the cached pool\r\n\r\nplayer 1: picked up from the cached pool\r\nplayer 1: setMediaItem(video B)\r\nplayer 1: prepare()\r\nplayer 1: play()\r\n====== video A is played by player 1 instead of video B.\r\n\r\nI have tried to use **clearMediaItems()** before sending the video to the cached pool, there is no success. The video miss play still happens.\r\n\r\nQuestion:\r\nMy question is if the prepare() can be cancelled. I read through the exoplayer code and it seems the clearMediaItems() would call all the way to release the media source. But it certainly does not solve the problem. I wonder if there is public API can achieve what I want or this is a new feature request. Or should I wait for the prepare() to be finished and then call clearMediaItems() instead, but then that won't stop the internal media downloading then.\r\n\r\n-> MediaPeriodQueue.clear()\r\n-> MediaPeriodHolder.releaseMediaPeriod()\r\n-> MediaSourceList.releasePeriod()\r\n\r\nMy goal is try to keep the exoplayer instances and its decoders around instead of releasing them.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9197/comments",
    "author": "halizton",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2021-07-19T10:41:36Z",
        "body": "stop() is clearing the media period queue. prepare as a such is delegated to the media sources and can't be cancelled in that sense. \r\n\r\nThe ongoing prepare is ongoing only regarding loading of the media source I would say. And even if you would be able to stop the loading I wouldn't understand how it would change something regarding the problem you see, because at least after `setMediaItem(video B)' the old media source should not be in charge of delivering data for rendering anymore.\r\n\r\nI wonder whether there is some data sent to the renderer/media codec already which then is rendered to the surface. Are you reusing the same `PlayerView`/`Surface` or are these different instances? It would be interesting to know when in the log files you see that the player goes to STATE_IDLE after stop() related to the calls to setMediaItem and when setting the player to the view for instance.\r\n\r\nOne thing I would try if you are sure you will replace the media items after stop is calling clearMediaItems() right after stop. \r\n\r\nIn general such quick prepare() calls  is a tricky problem and even more because calls to the player first need be passed to the playback thread (and back).\r\n\r\nThe burden to solve this problem is very much on the player side right now. Another approach you could try to ease this a bit and stop preparing the player when the scrolling is really fast. When the recyclerview is scrolling very fast you can probably stop preparing until it gets some slower. The user won't see any video frame after a certain scroll speed. \r\n"
      },
      {
        "user": "halizton",
        "created_at": "2021-07-20T17:57:55Z",
        "body": "> I wonder whether there is some data sent to the renderer/media codec already which then is rendered to the surface.\r\n\r\nI think this is the case. Also since our videos are short (less than a minute), it appears the entire video A (old)is already in the renderer/media.\r\n\r\n> Are you reusing the same **PlayerView/Surface** or are these different instances? \r\n\r\nI also reuse the **PlayerView/Surface** but they are managed (reused) by the recycler view directly. The cached exoplayer pool is independent from the **PlayerView/Surface**. I set a player to the PlayerView/Surface when it comes into the view port.\r\n\r\n> It would be interesting to know when in the log files you see that the player goes to STATE_IDLE after stop() related to the calls to setMediaItem and when setting the player to the view for instance.\r\n\r\nHere are the two examples that I collected, from the log, I do call **stop** on the player first while the player can be in READY or BUFFERING state. The **stop** does turn the player's state back to IDLE. But I found in some cases the player is still not reusable as long as the **player.isLoading** still return true. This does not change even if I call **clearMediaItems** right after calling the **stop**, **player.isLoading** still returns true.\r\n\r\nI found as long as the **player.isLoading** still returns true after calling **stop** and **clearMediaItems** on it, the problem remains there and I cannot reuse that player instance. So I am guessing the **player.isLoading** might imply the underlying loading is still going on although the player can be in state IDLE, any insights?\r\n\r\n```\r\nPlayerCache: stop player [198970871], player state [READY] isLoading [true]\r\nPlayerCache: called clearMediaItems() on player [198970871]\r\nPlayerCache: release player [198970871], player state [IDLE] isLoading [true], cannot reuse\r\n\r\nPlayerCache: stop player [169738086], player state [BUFFERING] isLoading [true]\r\nPlayerCache: called clearMediaItems() on player [169738086]\r\nPlayerCache: release player [169738086], player state [IDLE] isLoading [true], cannot reuse\r\n```\r\n\r\n> When the recyclerview is scrolling very fast you can probably stop preparing until it gets some slower. The user won't see any video frame after a certain scroll speed.\r\n\r\nThis is a good suggestion and I am considering to give it a shot."
      },
      {
        "user": "ojw28",
        "created_at": "2021-07-26T15:47:07Z",
        "body": "> player 1: setMediaItem(video A)\r\n> player 1: prepare()\r\n> player 1: stop()\r\n> player 1: isLoading() returns true ==> means the prepare() is still in process\r\n> player 1: being put into the cached pool\r\n\r\n> player 1: picked up from the cached pool\r\n> player 1: setMediaItem(video B)\r\n> player 1: prepare()\r\n> player 1: play()\r\n> ====== video A is played by player 1 instead of video B.\r\n\r\nIf you're seeing the entirety of video A play in this case, then that just sounds broken. Without additional information, I think it's more likely to be a bug in your application code (e.g., the call sequence being made on the player is not what you think it is). I'd suggest you try and reproduce the problem with a simple example that makes the call sequence above directly, without complicated logic around pooling/caching. If you can reproduce the issue in a simple example, please provide clear reproduction steps and we can take a look. If you can't, I'd suggest you take a closer look for issues in your application code to double check that what you think is happening really is happening.\r\n\r\n> I think this is the case. Also since our videos are short (less than a minute), it appears the entire video A (old)is already in the renderer/media.\r\n\r\nIt's not possible for the entire video to be held this far down the media pipeline, and even if it were, the pipeline should be cleared when the new item is set."
      },
      {
        "user": "google-oss-bot",
        "created_at": "2021-08-13T01:04:04Z",
        "body": "<!-- event: mark-stale -->\nHey @halizton. We need more information to resolve this issue but there hasn't been an update in 14 weekdays. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2021-08-24T01:04:04Z",
        "body": "<!-- event: close-stale -->\nSince there haven't been any recent updates here, I am going to close this issue.\n\n@halizton if you're still experiencing this problem and want to continue the discussion just leave a comment here and we are happy to re-open this."
      }
    ]
  },
  {
    "number": 9195,
    "title": "Encrypt Existing Downloaded Video m3u8 Chunks on Local Storage ",
    "created_at": "2021-07-15T06:44:16Z",
    "closed_at": "2021-09-07T19:19:25Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9195",
    "body": "I am using Exo player CypherDataSource to encrypt HLS videos and storing the encrypted videos on local storage of android device.\r\n\r\nProblem Statement: \r\nI want to encrypt existing videos which are already been downloaded using DownloadManager. How can I do that?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9195/comments",
    "author": "atulclassplus",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2021-09-07T19:19:25Z",
        "body": "`AesFlushingCipher` provides methods for encrypting data in the same way as when using `AesCipherDataSink` and `AesCipherDataSource. You can look at the source code for `AesCipherDataSink` to see how the content is encrypted using this class prior to being written to disk.\r\n\r\nIf you want to encrypt some clear files, you'll need to read them (using `FileDataSource` or just the standard Android APIs for reading files), encrypt the read data using `AesFlushingCipher` (in the same way that `AesCipherDataSink` does), and then overwrite the file with the encrypted data. You'll need to do this for each of the files.\r\n\r\nIf the idea is to clean up legacy downloads that weren't encrypted as a one off upgrade, then you may want to consider just deleting them and having the app (or the user) re-download them now that you have encryption enabled."
      }
    ]
  },
  {
    "number": 9190,
    "title": "How to Controls multi-track playback",
    "created_at": "2021-07-14T06:59:13Z",
    "closed_at": "2021-07-28T01:45:38Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9190",
    "body": "Before filing a feature request:\r\n-----------------------\r\n- my version is 2.14.2\r\n\r\n### Controls multi-track playback\r\nIf I have three tracks (A.mp3,B.mp3, and C.mp3), I can control both A and B to play at the same time, or I can choose to play only A or B or C.\r\n\r\nMulti play is ok,this my code \r\n``` java\r\npublic class MultiTrackSelector extends TrackSelector\r\n{\r\n\r\n    private  AtomicReference<TrackGroupArray> parametersReference;\r\n\r\n    public void setSelection(TrackGroupArray trackGroupArray)\r\n    {\r\n        Assertions.checkNotNull(trackGroupArray);\r\n        if (!parametersReference.getAndSet(trackGroupArray).equals(trackGroupArray)) {\r\n            invalidate();\r\n        }\r\n    }\r\n\r\n    public MultiTrackSelector()\r\n    {\r\n        parametersReference = new AtomicReference<>();\r\n    }\r\n    @Override\r\n    public TrackSelectorResult selectTracks(RendererCapabilities[] rendererCapabilities, TrackGroupArray trackGroups,\r\n        MediaSource.MediaPeriodId periodId, Timeline timeline)\r\n    {\r\n        Queue<Integer> audioRenderers = new ArrayDeque<>();\r\n        RendererConfiguration[] configs = new RendererConfiguration[rendererCapabilities.length];\r\n        TrackSelection[] selections = new TrackSelection[rendererCapabilities.length];\r\n        for (int i = 0; i < rendererCapabilities.length; i++)\r\n        {\r\n            if (rendererCapabilities[i].getTrackType() == C.TRACK_TYPE_AUDIO)\r\n            {\r\n                audioRenderers.add(i);\r\n                configs[i] = RendererConfiguration.DEFAULT;\r\n            }\r\n        }\r\n        for (int i = 0; i < trackGroups.length; i++)\r\n        {\r\n            if (MimeTypes.isAudio(trackGroups.get(i).getFormat(0).sampleMimeType))\r\n            {\r\n                Integer index = audioRenderers.poll();\r\n                if (index != null)\r\n                {\r\n                    selections[index] = new FixedTrackSelection(trackGroups.get(i), 0);\r\n                }\r\n            }\r\n        }\r\n\r\n        return new TrackSelectorResult(configs, selections, new Object());\r\n    }\r\n\r\n    @Override\r\n    public void onSelectionActivated(Object info)\r\n    {\r\n\r\n    }\r\n\r\n}\r\n```\r\n\r\n``` java\r\n\r\npublic class MultiTrackRenderersFactory extends DefaultRenderersFactory\r\n{\r\n    public  int audioTrackCnt;\r\n\r\n    private final List<MultiMediaCodecAudioRenderer> audioSinkList = new ArrayList<>();\r\n    \r\n    private final List<AudioSink> audioSinks = new ArrayList<>();\r\n\r\n    public MultiTrackRenderersFactory(int audioTrackCnt, Context context)\r\n    {\r\n        super(context);\r\n        this.audioTrackCnt = audioTrackCnt;\r\n    }\r\n\r\n    public int getAudioTrackCnt() {\r\n        return audioTrackCnt;\r\n    }\r\n\r\n    public void setAudioTrackCnt(int audioTrackCnt) {\r\n        this.audioTrackCnt = audioTrackCnt;\r\n\r\n    }\r\n\r\n    @Override\r\n    protected void buildAudioRenderers(Context context, int extensionRendererMode,\r\n        MediaCodecSelector mediaCodecSelector, boolean enableDecoderFallback, AudioSink audioSink, Handler eventHandler,\r\n        AudioRendererEventListener eventListener, ArrayList<Renderer> out)\r\n    {\r\n        audioSinkList.clear();\r\n        for (int i = 0; i < audioTrackCnt; i++)\r\n        {\r\n            MultiMediaCodecAudioRenderer multiMediaCodecAudioRenderer = new MultiMediaCodecAudioRenderer(i, context,\r\n                MediaCodecSelector.DEFAULT);\r\n            out.add(multiMediaCodecAudioRenderer);\r\n            audioSinkList.add(multiMediaCodecAudioRenderer);\r\n            audioSinks.add(audioSink);\r\n        }\r\n    }\r\n    \r\n}\r\n```\r\n``` java\r\npublic class MultiMediaCodecAudioRenderer extends MediaCodecAudioRenderer\r\n{\r\n    private final int index;\r\n    \r\n    public MultiMediaCodecAudioRenderer(int index, Context context, MediaCodecSelector mediaCodecSelector)\r\n    {\r\n        super(context, mediaCodecSelector);\r\n        this.index = index;\r\n    }\r\n    \r\n    @Override\r\n    public MediaClock getMediaClock()\r\n    {\r\n        if (index == 0)\r\n        {\r\n            return super.getMediaClock();\r\n        }\r\n        return null;\r\n    }\r\n    \r\n}\r\n```\r\n``` java\r\n multiTrackRenderersFactory = new MultiTrackRenderersFactory(2, this);\r\n        mVideoPlayer = new SimpleExoPlayer.Builder(this, multiTrackRenderersFactory).setTrackSelector(selector).build();\r\n        MediaSource audioSource = new ProgressiveMediaSource.Factory(new FileDataSource.Factory())\r\n            .createMediaSource(MediaItem.fromUri(\"/sdcard/Download/3006-d.mp3\"));\r\n        MediaSource videoSource = new ProgressiveMediaSource.Factory(new FileDataSource.Factory())\r\n            .createMediaSource(MediaItem.fromUri(\"/sdcard/Download/3006-v.mp3\"));\r\n        mVideoPlayer.setMediaSource(new MergingMediaSource(audioSource, videoSource));\r\n        mVideoPlayer.prepare();\r\n        mVideoPlayer.setPlayWhenReady(true);\r\n```\r\n\r\nnow ,i don't know how to select  one track play, i  think this method can only be played in a mixed way. how  play it together freely.\r\n\r\ni think When playing at the same time, i can control the volume of the audio track separately,it should also be able to meet my needs.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9190/comments",
    "author": "wangxuan217",
    "comments": [
      {
        "user": "Samrobbo",
        "created_at": "2021-07-19T16:26:18Z",
        "body": "@christosts I'm not sure how possible this is, but thought you might know if anyone? "
      },
      {
        "user": "christosts",
        "created_at": "2021-07-26T16:47:19Z",
        "body": "I'm not sure I understand the question:\r\n\r\n> now ,i don't know how to select one track play, i think this method can only be played in a mixed way. how play it together freely.\r\n\r\nTo play one audio track only, don't you just have to modify MultiTrackSelector so that MultiTrackSelector.selectTracks picks up only 1 audio renderer?"
      },
      {
        "user": "wangxuan217",
        "created_at": "2021-07-28T01:46:06Z",
        "body": "> I'm not sure I understand the question:\r\n> \r\n> > now ,i don't know how to select one track play, i think this method can only be played in a mixed way. how play it together freely.\r\n> \r\n> To play one audio track only, don't you just have to modify MultiTrackSelector so that MultiTrackSelector.selectTracks picks up only 1 audio renderer?\r\n\r\nI understand what you mean, I don’t know how to dynamically switch such operations, for example, you can switch between a mixed track and a single track, while it is playing."
      }
    ]
  },
  {
    "number": 9182,
    "title": "RTSP headers",
    "created_at": "2021-07-12T14:14:51Z",
    "closed_at": "2021-07-21T09:41:17Z",
    "labels": [
      "question",
      "need more info"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9182",
    "body": "Hi everyone)\r\n\r\nI'm not sure if it should be fixed but with some of our IP cameras, we had a problem with Authorization, because of lowerCase headers.\r\n\r\n```\r\nfinal class RtspHeaders {\r\n   public static final String ACCEPT = \"accept\";\r\n   public static final String ALLOW = \"allow\";\r\n   ...\r\n```\r\n\r\nI have reverted changes to normal case (Accept, ...) and now it works correctly.\r\nAlso, I have changed this code in RtspHeaders:\r\n\r\n```\r\npublic Builder add(String headerName, String headerValue) {\r\n      // namesAndValuesBuilder.put(Ascii.toLowerCase(headerName.trim()), headerValue.trim());\r\n      namesAndValuesBuilder.put(headerName.trim(), headerValue.trim());\r\n      return this;\r\n    }\r\n\r\npublic ImmutableList<String> values(String headerName) {\r\n    //return namesAndValues.get(Ascii.toLowerCase(headerName));\r\n    return namesAndValues.get(headerName);\r\n  }\r\n```\r\nIf it makes sense you can add these changes to repo))\r\n\r\n  \r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9182/comments",
    "author": "a-blekot",
    "comments": [
      {
        "user": "claincly",
        "created_at": "2021-07-12T15:08:05Z",
        "body": "It could be the specifics of your IP camera, could you elaborate?\r\n\r\nAs an aside, the header names are handled case insensitively, as mandated by RFC2068 (section 4.2):\r\n\r\n> Field names are case-insensitive."
      },
      {
        "user": "a-blekot",
        "created_at": "2021-07-13T19:05:04Z",
        "body": "Hm... ok. I will ask our support team what is the difference between our cameras.\r\nThank you for the reference!"
      }
    ]
  },
  {
    "number": 9156,
    "title": "Play speed try to support 8x+",
    "created_at": "2021-07-06T09:19:32Z",
    "closed_at": "2021-09-06T13:39:33Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9156",
    "body": "I changed MAX_PLAYBACK_SPEED to 100, then set setPlaybackParameters(new PlaybackParameters(20), the silent video can be played normally, and the playback time is 1/20 of the original.  It can be played normally when only audio is played(E.g. wav, mp3,m4a),and the playback time is 1/20 of the original. But the maximum speed can only support 4 times when playing a video with sound. What is the reason?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9156/comments",
    "author": "bookzhan",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2021-07-06T14:11:49Z",
        "body": "In general there is a max playback speed set to 8.f in the `DefaultAudioSink.MAX_PLAYBACK_SPEED`. I think that is what you are referring to when you say you changed the value to 100. So if audio is enabled this is the upper limit for playback speed, and this actually seems sensible because playing a stream with more than 8 times unit speed with audio turned on doesn't make really a valuable use case (please see also #8413 around this topic).\r\n\r\nTechnically, when I change `DefaultAudioSink.MAX_PLAYBACK_SPEED` to 18 and then set the playback speed to 18 it plays this with that speed for a video with sound. So besides that I think that an upper speed limit of 8x with audio is a sensible upper limit, I can not reproduce your observation.\r\n\r\nI recommend to switch off audio if you want to go over 8x.\r\n\r\n"
      }
    ]
  },
  {
    "number": 9148,
    "title": "How to clear the view and the buffer?",
    "created_at": "2021-07-04T13:31:44Z",
    "closed_at": "2021-09-06T13:41:45Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9148",
    "body": "My app is focusing on downloading videos and then playing them with Exoplayer. And obviously Downloading comes together with deleting the file.\r\n\r\nSo the downloading/playing parts work but then I want to be able to clear the player when the user is deleting the video he/she is playing. So I have:\r\n\r\n```\r\nvideoView.player?.stop()\r\nvideoView.player?.release()\r\n```\r\n\r\nHowever, the videoview still shows the image that it was last playing and I'm also guessing that the buffer is still there because when I delete and redownload the same video just after I cannot play it, it gives me this error:\r\n\r\n```\r\nE/ExoPlayerImplInternal: Playback error\r\n      com.google.android.exoplayer2.ExoPlaybackException: Source error\r\n        at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:580)\r\n        at android.os.Handler.dispatchMessage(Handler.java:102)\r\n        at android.os.Looper.loop(Looper.java:246)\r\n        at android.os.HandlerThread.run(HandlerThread.java:67)\r\n     Caused by: com.google.android.exoplayer2.source.UnrecognizedInputFormatException: None of the available extractors (Mp4Extractor, AdtsExtractor) could read the stream.\r\n        at com.google.android.exoplayer2.source.BundledExtractorsAdapter.init(BundledExtractorsAdapter.java:92)\r\n        at com.google.android.exoplayer2.source.ProgressiveMediaPeriod$ExtractingLoadable.load(ProgressiveMediaPeriod.java:1027)\r\n        at com.google.android.exoplayer2.upstream.Loader$LoadTask.run(Loader.java:417)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)\r\n        at java.lang.Thread.run(Thread.java:923)\r\n```\r\n\r\n(i tried to use all the possible exrtractors)\r\n\r\nHow can I clear view and buffer in this case and then still being able to play the new downloaded video?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9148/comments",
    "author": "Clement-Jean",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2021-07-05T12:00:55Z",
        "body": "Can you give some more details what you do after calling `release`? Because I'd say that after releasing you have to recreate the player to restart playback with a new stream.\r\n\r\nI don't think it has something to do with the buffer because data in the buffer isn't read by the extractor. For my understanding the data in the buffer has been extracted by an extractor already and is then buffered before it is sent to the codec.\r\n\r\nCan you give some more details in how you release and then recreate the player in your code?"
      },
      {
        "user": "Clement-Jean",
        "created_at": "2021-07-05T23:21:39Z",
        "body": "I was not recreating the player but yesterday I saw that the `release` documentation says something like `don't use the player after calling this`.\n\nSo I recreated it and it works. However, I wonder if there is a less \"heavy\" way of doing this because I have a player with a Playlist (ConcatenatingMediaSource) and I need to reinitialize everything each time this event happens.\n\nWhat do you think ?"
      },
      {
        "user": "marcbaechinger",
        "created_at": "2021-07-07T09:51:59Z",
        "body": "I think it should be enough to just remove the `MediaSource` for the given stream to the download that have been removed. Then you can create a new `MediaSource` and add it to the `ConcatentaingMediaSource` again. When the user then seeks to that item in the playlist (or playback transitions to it automatically), the new source will be prepared.\r\n\r\n```\r\nconcatenatingMediaSource.removeMediaSource(index);\r\nconcatenatingMediaSource.addMediaSource(index, newMediaSource);\r\n```\r\n\r\nAs an aside, we support playlist with a top level API since a while (2.12). So you could move from the concatenating media source to `player.addMediaSource()`. \r\n\r\n```\r\nplayer.removeMediaSource(index);\r\nplayer.addMediaSource(index, newMediaSource);\r\n```"
      }
    ]
  },
  {
    "number": 9120,
    "title": "Exoplayer should play video with lowest video quality",
    "created_at": "2021-06-26T12:45:30Z",
    "closed_at": "2021-07-14T07:31:34Z",
    "labels": [
      "question",
      "need more info"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9120",
    "body": "I would like to play my video at the lowest resolution(256x144). I have configured the DefaultTrackSelector by setting two parameters:\r\n\r\n1.`setMaxVideoSize(width, height) ` to limit the resolution to your parameters. \r\n2.`setForceHighestSupportedBitrate(true)` to force-select the highest bitrate that is still within size constraints.\r\n\r\n**Full Code**\r\n\r\n```\r\nDefaultTrackSelector trackSelector = new DefaultTrackSelector(requireContext());\r\n            trackSelector.setParameters(trackSelector\r\n                    .buildUponParameters()\r\n                    .setMaxVideoSize(256, 144)\r\n                    .setForceHighestSupportedBitrate(true));\r\n            player = new SimpleExoPlayer.Builder(requireContext())\r\n                    .setTrackSelector(trackSelector)\r\n                    .build();\r\n            player.setMediaItem(MediaItem.fromUri(videoUri));\r\nplayer.setPlayWhenReady(true);\r\nplayer.prepare();\r\nplayerView.setPlayer(player);\r\n```\r\nBut still, it is playing video with different video resolutions. Someone, please help me to fix this issue.\r\n\r\n**Log**\r\n\r\n```\r\n3314-13314/com.example D/EventLogger: downstreamFormat [eventTime=0.60, mediaPos=0.00, window=0, period=0, id=1, mimeType=video/avc, codecs=avc1.640028, res=1920x1080, fps=30.0]\r\n2021-06-26 16:52:44.683 13314-13314/com.example D/EventLogger: videoInputFormat [eventTime=0.61, mediaPos=0.00, window=0, period=0, id=1, mimeType=video/avc, codecs=avc1.640028, res=1920x1080, fps=30.0]\r\n2021-06-26 16:52:45.208 13314-13314/com.example D/EventLogger: downstreamFormat [eventTime=1.22, mediaPos=0.00, window=0, period=0, id=1, mimeType=video/avc, codecs=avc1.42C01E, res=480x270, fps=29.999668]\r\n2021-06-26 16:52:45.278 13314-13314/com.example D/EventLogger: videoInputFormat [eventTime=1.27, mediaPos=0.00, window=0, period=0, id=1, mimeType=video/avc, codecs=avc1.42C01E, res=480x270, fps=29.999668]\r\n2021-06-26 16:52:45.317 13314-13314/com.example D/EventLogger: downstreamFormat [eventTime=1.42, mediaPos=0.00, window=0, period=0, id=1, mimeType=video/avc, codecs=avc1.4D401F, res=720x720, fps=29.999668]\r\n2021-06-26 16:52:45.590 13314-13314/com.example D/EventLogger: videoInputFormat [eventTime=1.69, mediaPos=0.00, window=0, period=0, id=1, mimeType=video/avc, codecs=avc1.4D401F, res=720x720, fps=29.999668]\r\n2021-06-26 16:52:54.257 13314-13314/com.example D/EventLogger: downstreamFormat [eventTime=0.21, mediaPos=0.00, window=0, period=0, id=1, mimeType=video/avc, codecs=avc1.64001F, res=960x540, fps=29.999342]\r\n2021-06-26 16:52:54.666 13314-13314/com.example D/EventLogger: videoInputFormat [eventTime=0.62, mediaPos=0.00, window=0, period=0, id=1, mimeType=video/avc, codecs=avc1.64001F, res=960x540, fps=29.999342]\r\n2021-06-26 16:52:56.331 13314-13314/com.example D/EventLogger: downstreamFormat [eventTime=0.60, mediaPos=0.00, window=0, period=0, id=1, mimeType=video/avc, codecs=avc1.64001F, res=608x1080, fps=30.0]\r\n```\r\n\r\n@tonihei  @ojw28 ",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9120/comments",
    "author": "24Lathiya",
    "comments": [
      {
        "user": "kim-vde",
        "created_at": "2021-06-29T10:12:22Z",
        "body": "From the logs you provided, it seems that none of the video resolutions in the stream are under the max size set (256x144). Could this be the reason?\r\n\r\nPlease provide a test stream if you need us to investigate this further so that we can reproduce. If you're unable to share test content publicly, please send it to dev.exoplayer@gmail.com using a subject \"Issue #9120\". Please also update this issue to indicate you've done this."
      }
    ]
  },
  {
    "number": 9104,
    "title": "Support for RTP under RTSP module",
    "created_at": "2021-06-23T21:48:14Z",
    "closed_at": "2021-07-21T18:02:50Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9104",
    "body": "In our project, we would like to just use RTP over UDP to stream a live video. In the current RTSP module , one can see support for `RtspMediaSource`\r\nEg:\r\n```\r\nMediaSource mediaSource =  new RtspMediaSource.Factory()\r\n                                                 .createMediaSource(MediaItem.fromUri(rtspUri));\r\n```\r\nDoes Exoplayer support RtpMediaSource ? Or is there a way to use Rtp protocol for streaming under Rtsp module (2.14.1)?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9104/comments",
    "author": "connected-rramesh",
    "comments": [
      {
        "user": "claincly",
        "created_at": "2021-06-24T09:13:30Z",
        "body": "No we don't support playing bare RTP at the moment.\r\n\r\nThe player preparation, decoder initialization requires the out-of-band data from RTSP.\r\n\r\nCould you provide some detail as to how you would transmit those info? Do you play live? What format are you planning on playing?"
      },
      {
        "user": "connected-rramesh",
        "created_at": "2021-06-24T15:08:43Z",
        "body": "Thank you for your reply. \r\nThe source is a live camera feed of RTP packets formatted as H.264. We would like play this live feed using Exoplayer. \r\n\r\nEg: Sample RTP URI\r\n\"rtp://192.168.4.21:5000\""
      },
      {
        "user": "claincly",
        "created_at": "2021-06-24T21:38:04Z",
        "body": "If I understand you 100%, you are playing a camera feed with video only, and the video in H264, bearing a hard coded payload type (Im guessing 96?)\r\n\r\nDo you hard code the sps/pps data also? If so, it will be a lot easier. Where if you don't have sps/pps before hand, it requires some work to initialize the decoder (with a logic very similar to `H264Reader` in the ts package.)"
      },
      {
        "user": "connected-rramesh",
        "created_at": "2021-06-25T16:52:08Z",
        "body": "Yes its a video only frame in H264. I am not sure about the payload type of 96. \r\n\r\nWe are currently using this ffmpeg command to convert the live camera feed to rtp stream \r\n`ffmpeg -f v4l2 -framerate 30 -i /dev/video2 -vcodec libx264 -preset ultrafast -tune zerolatency -f rtp rtp://192.168.1.82:5000` \r\n\r\nFrom the above command I believe we are not hardcoding the sps/pps data during the conversion. \r\n\r\nBelow is the dump signifying the variable UDP packets.\r\n\r\n` 10:24:47.106382 IP 192.168.1.82.37100 > 19.12.77.220.443: UDP, length 141\r\n   10:24:47.106417 IP 192.168.1.82.37100 > 19.12.77.220.443: UDP, length 1469\r\n   10:24:47.106450 IP 192.168.1.82.37100 > 19.12.77.220.443: UDP, length 173\r\n   10:24:47.106483 IP 192.168.1.82.37100 > 19.12.77.220.443: UDP, length 653\r\n   10:24:47.106609 IP 192.168.1.82.37100 > 19.12.77.220.443: UDP, length 1469\r\n   10:24:47.106648 IP 192.168.1.82.37100 > 19.12.77.220.443: UDP, length 173\r\n   10:24:47.106682 IP 192.168.1.82.37100 > 19.12.77.220.443: UDP, length 1021\r\n   10:24:47.106718 IP 192.168.1.82.37100 > 19.12.77.220.443: UDP, length 1469\r\n   10:24:47.106832 IP 192.168.1.82.37100 > 19.12.77.220.443: UDP, length 173`\r\n\r\nIf this is the case, what should be the approach that we need to take in order to stream and rtp live feed. Could you also provide some guidance on some sample code to start off. \r\n\r\n\r\n"
      },
      {
        "user": "claincly",
        "created_at": "2021-06-25T18:47:03Z",
        "body": "I don't know much about ffmpeg, but I think you can stream RTSP using ffmpeg also, a Google search gave me this command\r\n\r\n```\r\n$ ffmpeg -re -stream_loop -1 -i test.mp4 -f rtsp -rtsp_transport tcp rtsp://localhost:8554/live.stream\r\n```\r\n\r\nIt'll be much easier to use ffmpeg to serve RTSP than modifying ExoPlayer to play an RTP stream."
      }
    ]
  },
  {
    "number": 9089,
    "title": "Exoplayer loads more than 2 seconds data for bufferForPlaybackMs of 1 second, before start of playback. Why ?",
    "created_at": "2021-06-21T06:45:48Z",
    "closed_at": "2021-11-03T12:25:42Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9089",
    "body": "I understand that ExoPlayer does not wait for an entire chunk to download before starting playback. However, with chunk length being 4 seconds and \"bufferForPlaybackMs\" set to 1 second, it still loads more than 2 seconds of content before starting playback. What could be the reason for this?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9089/comments",
    "author": "harishiyer0204",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2021-06-21T14:14:56Z",
        "body": "There's a certain amount of parallelism in the way this logic works. Once `bufferForPlaybackMs` of media has been downloaded, playback will start. But whilst playback is starting the player is continuing to download media, so depending on how quickly media is being downloaded, and on how quickly playback is able to start, there may be more media in the buffer by the time playback has actually started. It's essentially a race between two operations that are occurring in parallel.\r\n\r\nIt's unclear how you are actually measuring this, in order to state that this is what happens. It could be that your testing methodology is not valid."
      }
    ]
  },
  {
    "number": 9082,
    "title": "Does Exoplayer download a chunk completely before processing (decoding) it ? ",
    "created_at": "2021-06-19T05:03:03Z",
    "closed_at": "2021-06-19T14:30:55Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9082",
    "body": "Does Exoplayer download a chunk completely before processing (decrypting, decoding) it. Is there a way to override this and start decoding / playback before the chunk is completely downloaded. The content is an MPEG-DASH content with a 6 second chunk size.\r\n\r\nI am on the latest version of Exoplayer. I am trying to improve the Video Start Time and hence this query. Also, will smaller chunk sizes impact the Video start time ?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9082/comments",
    "author": "harishiyer0204",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2021-06-19T14:30:55Z",
        "body": "> Does Exoplayer download a chunk completely before processing (decrypting, decoding) it.\r\n\r\nNo, it doesn't. Chunks are processed incrementally as they become available.\r\n\r\n> Also, will smaller chunk sizes impact the Video start time ?\r\n\r\nNo, I wouldn't expect this to improve startup latency."
      }
    ]
  },
  {
    "number": 9076,
    "title": "Override  selectVideoTrack , but it keeps calling the initial track  ",
    "created_at": "2021-06-18T04:06:32Z",
    "closed_at": "2021-09-06T13:42:07Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9076",
    "body": "I'm trying to deploy a Random Forest Classier Model in Exoplayer using Weka API . \r\nAfter each onLoadCompleted, I predict the best track to be downloaded next ,  as I was looking for the best implementation here , I went through 2 possible ways  . \r\n\r\n-  SelectionOverride   inside  onLoadCompleted\r\n```\r\nMappingTrackSelector.MappedTrackInfo mappedTrackInfo = trackSelector.getCurrentMappedTrackInfo();\r\n                     TrackGroupArray rendererTrackGroups = mappedTrackInfo == null ? null : mappedTrackInfo.getTrackGroups(rendererIndex);\r\n                     DefaultTrackSelector.SelectionOverride selectionOverride = new DefaultTrackSelector.SelectionOverride(0, chunkindex);\r\n                      trackSelector.setParameters(\r\n                                 trackSelector\r\n                                     .buildUponParameters()\r\n                                     .setSelectionOverride(rendererIndex, rendererTrackGroups, selectionOverride));\r\n```\r\n\r\n\r\n- Extend DefaultTrackSelector and Override  selectVideoTrack \r\n```\r\npublic class RFTrackSelector extends DefaultTrackSelector   {\r\n    protected ExoTrackSelection.Definition selectVideoTrack(TrackGroupArray groups, int[][] formatSupport, int mixedMimeTypeAdaptationSupports, Parameters params, boolean enableAdaptiveTrackSelection) throws ExoPlaybackException {\r\n        return new ExoTrackSelection.Definition(groups.get(0),getNextTrackID());\r\n    }\r\n}\r\n```\r\n\r\nbecause of the stall Duration and Rebuffering time in the first method and it's Asynchronous, I opted for the second implementation , now the problem I'm having is that,  selectVideoTrack keeps selecting always the first Track I gave, is there anything I'm missing about selectVideoTrack? , because I want to keep the model selecting each track, is this possible to do with  selectVideoTrack? or are there other methods that I'm not aware of, thank you so much in advance .\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9076/comments",
    "author": "isaacdz",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2021-06-18T08:39:34Z",
        "body": "If your goal is to implement an ABR algorithm for DASH and/or HLS then you'll need to implement a custom `TrackSelection`. As a starting point, I'd suggest you look at `AdaptiveTrackSelection` in the library, which is the built in ABR algorithm. The quality evaluation happens in `AdaptiveTrackSelection.updateSelectedTrack`. It may be easiest for you to start by forking `AdaptiveTrackSelection` and editing it to suit your needs.\r\n\r\nTo actually use your custom `TrackSelection` implementation, create a `DefaultTrackSelector` using the constructor that takes an `ExoTrackSelection.Factory`."
      }
    ]
  },
  {
    "number": 9074,
    "title": "question of AC3 volume level.",
    "created_at": "2021-06-17T16:46:16Z",
    "closed_at": "2021-07-16T01:04:25Z",
    "labels": [
      "question",
      "closed-by-bot"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9074",
    "body": "When using ffmpeg extension, the volume level of AC3 2channel and AC3 6channel is different.\r\nHow can I fix it?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9074/comments",
    "author": "hanlareum",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2021-06-17T21:58:14Z",
        "body": "ExoPlayer feeds the sample data through FFmpeg to decode it, and then feeds the decoded output to `AudioTrack` for playback. So the player is more or less just an intermediary here.\r\n\r\nI'm somewhat unclear what you mean by \"different\", because the source content itself is different. Are you sure the source content has the same volume in both cases? For us to investigate further, you'll need to provide us with some reproduction steps, including the relevant test stream(s)."
      },
      {
        "user": "google-oss-bot",
        "created_at": "2021-07-07T01:04:21Z",
        "body": "<!-- event: mark-stale -->\nHey @hanlareum. We need more information to resolve this issue but there hasn't been an update in 14 weekdays. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2021-07-16T01:04:24Z",
        "body": "<!-- event: close-stale -->\nSince there haven't been any recent updates here, I am going to close this issue.\n\n@hanlareum if you're still experiencing this problem and want to continue the discussion just leave a comment here and we are happy to re-open this."
      }
    ]
  },
  {
    "number": 9059,
    "title": "Concurrent buffer data loading implementation",
    "created_at": "2021-06-15T11:13:44Z",
    "closed_at": "2021-06-17T12:38:23Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9059",
    "body": "Hi,\r\nI have a non critical issue when I try to play a video that the server take always more time to return a result than actual data duration.\r\nAs data buffered will always be consumed faster than the loading one, the player will need to rebuffer.\r\n\r\nI use cronet extension as datasource with 6 fixed thread pool and need at least the video track use at least 2 concurrent thread to load  the data. How can this be implemented?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9059/comments",
    "author": "DarkAnakin",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2021-06-17T09:41:24Z",
        "body": "I don't understand the question. You seem to be saying that (a) the server cannot transfer media at faster than 1x speed, and (b) this means that the client will need to re-buffer. This is correct, and (b) is fundamentally unavoidable if (a) is true. If you wish to avoid re-buffering, you'll need to make it so that (a) is false. For example by re-encoding the content at a lower bitrate.\r\n\r\nPlease could you clarify what your question is?"
      },
      {
        "user": "DarkAnakin",
        "created_at": "2021-06-17T12:20:27Z",
        "body": "Of course the issue should be resolve on the server side but I don't have any control on it. I try to play a live 4k content but if the link between the client and the server is not optimal the player need to re-buffer or play at lower resolution. After I have read the parallelize downloads implementation in the version 1.12 I have thinking that maybe I could solve my issue but I could not found how.\r\nFeel free to close this \"issue\" if you think this case should not be resolve on client side.\r\n\r\nThanks"
      },
      {
        "user": "ojw28",
        "created_at": "2021-06-17T12:38:23Z",
        "body": "Closing because it doesn't sound like a client issue."
      }
    ]
  },
  {
    "number": 9035,
    "title": "How to pass `setMaxVideoBitrate` in new `SelectionOverride`",
    "created_at": "2021-06-09T13:34:05Z",
    "closed_at": "2021-06-09T16:17:19Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9035",
    "body": "My case is with **DASH** content.\r\n**ExoPlayer Version:** v2.14.0 (No relation with version)\r\n**On ExoPlayerDemo:** I did not try yet to reproduce due to complex changes required.\r\n\r\nI am passing `setMaxVideoBitrate` on `DefaultTrackSelector.ParametersBuilder` while creating the `DefaultTrackSelector` and I can see that my video max Bitrate is limited to what I passed.\r\n\r\nThen after it, I am creating my own `SelectionOverride` and on the same `DefaultTrackSelector.ParametersBuilder`; I call `parametersBuilder.setSelectionOverride` and pass my `SelectionOverride`  and then pass it to `DefaultTrackSelector` using `setParameters`.\r\n\r\nI can see that `DefaultTrackSelector.ParametersBuilder` has the old `setMaxVideoBitrate` which I passed 1st time but still, I don't see that it has any impact. My video starts to play between the given `SelectionOverride`.\r\n\r\nPS: This is the current analysis and assumption that may be Player is not considering the old parameters in case when new `SelectionOverride` is given.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9035/comments",
    "author": "GouravSna",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2021-06-09T16:17:19Z",
        "body": "A selection override will override any other constraints that you've specified. In other words, if you specify an override and if that override applies to the currently available tracks, then you will get exactly the tracks specified by the override. This is by design. \r\n\r\nIf you want to specify a selection override and if you also want to exclude tracks that exceed a particular bitrate, then you should not include such tracks in the override in the first place."
      }
    ]
  },
  {
    "number": 9029,
    "title": "Unable to show close-captions after clearing selection override",
    "created_at": "2021-06-08T21:03:43Z",
    "closed_at": "2021-06-09T07:19:05Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9029",
    "body": "I have closed captions in the Live DASH manifest.\r\n\r\nI am trying following to enable and disable closed captions,\r\n\r\n```java\r\n// Call this to select any track\r\nstatic void selectTrack(@NonNull DefaultTrackSelector trackSelector, @NonNull Track track) {\r\n        MappingTrackSelector.MappedTrackInfo mappedTrackInfo = trackSelector.getCurrentMappedTrackInfo();\r\n        DefaultTrackSelector.ParametersBuilder builder = trackSelector.buildUponParameters();\r\n        DefaultTrackSelector.SelectionOverride override = new DefaultTrackSelector.SelectionOverride(track.getGroupIndex(), track.getTracks(), C.SELECTION_REASON_MANUAL, 0);\r\n        builder.setSelectionOverride(track.getRenderIndex(), mappedTrackInfo.getTrackGroups(track.getRenderIndex()), override);\r\n        trackSelector.setParameters(builder.build());\r\n    }\r\n\r\n// Call this to clear track selection\r\nstatic void clearTrackSelection(@NonNull DefaultTrackSelector trackSelector, @NonNull Track track) {\r\n        MappingTrackSelector.MappedTrackInfo mappedTrackInfo = trackSelector.getCurrentMappedTrackInfo();\r\n        DefaultTrackSelector.ParametersBuilder builder = trackSelector.buildUponParameters();\r\n        builder.clearSelectionOverrides(track.getRenderIndex());\r\n        builder.setRendererDisabled(track.getRenderIndex(), true);\r\n        trackSelector.setParameters(builder.build());\r\n    }\r\n```\r\n\r\nHere `Track` object contains render index, group index, track name, and a bunch of other metadata.\r\n\r\nI am calling `selectTrack()` to set closed-captions and `clearTrackSelection()` method to clear that selection. \r\nAfter clearing text track selection with `clearTrackSelection()`, I am not able to show close-cations again with `selectTrack()` method.\r\n\r\nDo you know why that is?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9029/comments",
    "author": "nishantkp",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2021-06-09T07:19:05Z",
        "body": "Your two methods are not symmetric to one another:\r\n\r\n1. `selectTrack` only sets the override. It does not enable the renderer\r\n2. `clearTrackSelection` clears the override and disables the renderer\r\n\r\nAs a result, after you clear and then select, the renderer is still disabled.\r\n\r\nYou should delete the `builder.setRendererDisabled(track.getRenderIndex(), true);` line from your `clearTrackSelection` method, or add a `builder.setRendererDisabled(track.getRenderIndex(), false);` line to your `selectTrack` method."
      }
    ]
  },
  {
    "number": 9025,
    "title": "Cannot play continuously while source length is changing realtime",
    "created_at": "2021-06-08T08:13:20Z",
    "closed_at": "2021-07-12T01:04:23Z",
    "labels": [
      "question",
      "closed-by-bot"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9025",
    "body": "Hello,\r\nwhile playing continuously  size changing http source, the exoplayer stops where the buffer ends, but not continue further.\r\nIn other words - playing in time shifted offset is not possible - connection drops when buffer ends  even the source size  is already changed.\r\nIs there solution of this problem? Keep alive? Resync http source?\r\nRegards",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9025/comments",
    "author": "ivostefanoff",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2021-06-08T09:19:44Z",
        "body": "The player will continue to play indefinitely if the server does not indicate a fixed content length in one of the response headers, and if the server then serves a contiguous stream of media to the player.\r\n\r\nConversely, if the server is specifying a fixed content length in one of the response headers, then I think the player is doing the right thing in stopping once that length of content has been consumed.\r\n\r\nIt's not possible to understand your specific use case from the information provided, so if the above doesn't answer your question, please provide a usable test stream that reproduces the issue, so that we can see exactly what you're trying to do."
      },
      {
        "user": "ivostefanoff",
        "created_at": "2021-06-08T10:36:14Z",
        "body": "Hello,\r\nlet me be more specific.\r\nI need to play timesifted mpg file (or hls) which is contantly growing in time. \r\nIf now is 12:25 we have a recorded file from 12:00 till 12:25 and i want to seek to 12:24. \r\nOf course the http will return whole segment from 12:00 to 12:25 and the player will seek to 12:24.\r\nBut after 1min (because buffered chunk till 12:26  is gone) the player reports event end of playback and finishes.\r\nMeanwhile, now is realtime 12:26 and recorded file is grown with 1min. \r\nObviously, the player does not know this fact, and this is a normal behaviour.\r\nThe question is: is there any player mode, causing it to rebuffer or resync played sourse?\r\nObviously, this is a specific case and the player should be \"instructed\" to do some rebuffer or something else?\r\nThis case is working on MAG322 with vlc/ffmpeg.\r\nAny suggestions?"
      },
      {
        "user": "ojw28",
        "created_at": "2021-06-08T10:56:48Z",
        "body": "Both DASH and HLS are designed to support moving live windows. ExoPlayer correctly handles both if the content is produced according to the relevant specification.\r\n\r\nExoPlayer also supports live streams using progressive formats that can be appended to (e.g., MPEG-TS and MP3), but seeking is not supported in this case. Playback is fixed to be at the live edge.\r\n\r\nIf you require a moving live window, all you need to do is provide a specification compliant HLS or DASH stream that exposes one, and the player will do the right thing.\r\n\r\n> Meanwhile, now is realtime 12:26 and recorded file is grown with 1min. Obviously, the player does not know this fact, and this is a normal behaviour.\r\n\r\nThe player does know this in the case of DASH and HLS playbacks, because DASH manifests and HLS playlist files are designed to be able to convey this information to a player."
      },
      {
        "user": "ivostefanoff",
        "created_at": "2021-06-08T11:06:31Z",
        "body": "Okay, let be quite specific - DVR hls made from Flussonic , could be seek in this case from MAG322, but not from Exoplayer?\r\nHere we have a perfect HLS with moving time window?\r\nWhat should be the player init in this case?Progressive,hls....?\r\n"
      },
      {
        "user": "ojw28",
        "created_at": "2021-06-08T11:09:24Z",
        "body": "As above, if you have a specification compliant HLS stream with a moving window, then playback should just work. Many apps have successfully deployed this in production using ExoPlayer. If you have an HLS stream for which this is not working, you will have to provide us with access to a test stream so that we can debug the issue.\r\n\r\nI don't really understand your question about player init. If you're playing an HLS stream then you should init the player for HLS, if that's what you're asking."
      },
      {
        "user": "ivostefanoff",
        "created_at": "2021-06-11T12:37:54Z",
        "body": "In other words - is there any way for  refreshing(periodically) the media source periodically? \r\nWe are talking about, that while player is ready, the playing content was one thing and meanwile is has been changed to another and we need to refresh this?\r\nSimple question\r\n\r\n"
      },
      {
        "user": "ojw28",
        "created_at": "2021-06-11T13:02:00Z",
        "body": "As above, DASH and HLS are explicitly designed to support this. If you have an HLS stream for which this is not working, you will have to provide us with access to a test stream so that we can debug the issue."
      },
      {
        "user": "google-oss-bot",
        "created_at": "2021-07-01T01:04:22Z",
        "body": "<!-- event: mark-stale -->\nHey @ivostefanoff. We need more information to resolve this issue but there hasn't been an update in 14 weekdays. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2021-07-12T01:04:22Z",
        "body": "<!-- event: close-stale -->\nSince there haven't been any recent updates here, I am going to close this issue.\n\n@ivostefanoff if you're still experiencing this problem and want to continue the discussion just leave a comment here and we are happy to re-open this."
      }
    ]
  },
  {
    "number": 9008,
    "title": "Issue with wrap_content in ExoPlayerView. ExoPlayerView height remain 0 at run-time if it set to wrap_content",
    "created_at": "2021-06-02T11:46:32Z",
    "closed_at": "2021-06-02T17:14:09Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9008",
    "body": "[Condition]\r\n - video url only available\r\n\r\nThe title of this issue was on Stack Overflow but there was no answer.\r\n\r\nI was trying to set exoplayers to recyclerview with multiple media source.\r\n\r\nAutomatic video playback takes up space appropriately. Also, if the height value is given as an absolute value, thumbnail can be seen through the \"use_artwork\" option even if no replay is made('But it's not fit to the given layout).\r\n\r\nSo I brought a thumbnail separately through Glide, but it was too slow.\r\n\r\nIs there a way to automatically set the height value without playing the EXO player automatically or setting an absolute value?\r\n\r\n```\r\n<com.google.android.exoplayer2.ui.PlayerView\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                app:use_artwork=\"true\"\r\n                app:resize_mode=\"fit\"\r\n                app:show_buffering=\"when_playing\"\r\n                />\r\n```",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9008/comments",
    "author": "JiyongYang",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2021-06-02T14:12:57Z",
        "body": "If you are trying to set the height of the player view such that it matches the shape of the video but without actually loading the video I don't think there is a way to do that. You can `pause()` the player before preparing it if you want to load the media (and acquire resources for buffering and decoders) but not actually start playback. I'm not sure I follow the question though, so perhaps you could rephrase?"
      },
      {
        "user": "JiyongYang",
        "created_at": "2021-06-02T17:14:09Z",
        "body": "Thank you. It really helped. I think calling `pause()` is way more effective than using other lib."
      }
    ]
  },
  {
    "number": 9007,
    "title": "How replace a frame by a bitmap file on TextureView before playout",
    "created_at": "2021-06-02T09:49:57Z",
    "closed_at": "2021-06-02T12:53:41Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9007",
    "body": "I created a TextureView to display ExoPlayer instance. The function `onSurfaceTextureUpdated` will be called whenever a new frame is available. In this function, I can access the frame in `bitmap` type from `textureView.getBitmap()` as follows\r\n\r\n```\r\npublic void onSurfaceTextureUpdated(SurfaceTexture surfaceTexture) {\r\n     frame_idx ++;\r\n     if (frame_idx == 100) {\r\n          Bitmap bmp = textureView.getBitmap();\r\n          Bitmap modifiedFame = getModifiedFrame(bmp);\r\n          // From here, replace the original frame by newFrame and play newFrame on screen.\r\n     }\r\n}\r\n```\r\n\r\nI want to modify the 100th frame in `getModifiedFrame(Bitmap bmp)` that returns another bitmap file, namely `modifiedFame` and ExoPlayer plays `modifiedFame` instead of the original frame.\r\n\r\nIs it possible to do it in function `onSurfaceTextureUpdated` and how? If not, which file in ExoPlayer should I modify?\r\nThanks!",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9007/comments",
    "author": "minhkstn",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2021-06-02T12:53:41Z",
        "body": "This use case is quite custom so I'm afraid we can't spend time giving detailed support. For what it's worth: I suspect that by the time `onSurfaceTextureUpdated` has been called it's too late to \"intercept\" the frame you want to replace (it may be shown to the user), and I'm also not sure that it's possible to render to the same texture as the codec. If you don't need perfect timing you could do just show/hide a separate image view positioned on top of the texture view (and possibly also customize the video renderer so it doesn't render the frame(s) you want to replace). If you do need perfect timing, I would follow an approach like gldemo where you can do arbitrary GL processing on the texture before it's shown to the user (see also #5860 and #8468)."
      }
    ]
  },
  {
    "number": 9006,
    "title": "Question for AsynchronousBufferQueueing ",
    "created_at": "2021-06-02T08:17:42Z",
    "closed_at": "2021-06-11T16:06:16Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/9006",
    "body": "Hi\r\n\r\nI've recently met a log of codec exception like below. \r\nFirstly, do you have any estimated reasons for this? \r\n\r\n```\r\nCaused by: com.google.android.exoplayer2.ExoPlaybackException: MediaCodecVideoRenderer error, index=0, format=Format(5, null, null, video/avc, avc1.4D400C, 292000, null, [144, 240, -1.0], [-1, -1]), format_supported=YES\r\n  at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:44)\r\n  at android.os.Handler.dispatchMessage(Handler.java:103)\r\n  at android.os.Looper.loop(Looper.java:237)\r\n  at android.os.HandlerThread.run(HandlerThread.java:67)\r\nCaused by: com.google.android.exoplayer2.video.MediaCodecVideoDecoderException: Decoder failed: OMX.qcom.video.decoder.avc\r\n  at com.google.android.exoplayer2.video.MediaCodecVideoRenderer.createDecoderException(MediaCodecVideoRenderer.java:1)\r\n  at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.render(MediaCodecRenderer.java:24)\r\n  at com.google.android.exoplayer2.ExoPlayerImplInternal.g(ExoPlayerImplInternal.java:14)\r\n  at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:24)\r\n  ... 3 more\r\nCaused by: java.lang.IllegalStateException\r\n  at android.media.MediaCodec.native_dequeueInputBuffer(Native Method)\r\n  at android.media.MediaCodec.dequeueInputBuffer(MediaCodec.java:2726)\r\n  at com.google.android.exoplayer2.mediacodec.SynchronousMediaCodecAdapter.dequeueInputBufferIndex(SynchronousMediaCodecAdapter.java:1)\r\n  at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.p(MediaCodecRenderer.java:3)\r\n  at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.render(MediaCodecRenderer.java:18)\r\n```\r\n\r\n\r\nThen I've found that `ExoPlayer` supports features of async queueing,  when using `MediaCodecRenderer` like `experimentalSetAsynchronousBufferQueueingEnabled` or `experimentalSetSynchronizeCodecInteractionsWithQueueingEnabled`\r\n\r\nI just think that the features could be helpful to avoid codec exception. \r\nHowever, I am not sure that it could  works right and stable because of starting with `experimental`.\r\n\r\nPlease, let me know if async queueing is helpful on my case and verified with most android devices.\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/9006/comments",
    "author": "HyowonHwang",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2021-06-02T09:49:26Z",
        "body": "> Firstly, do you have any estimated reasons for this?\r\n\r\nUnfortunately there generally isn't much diagnostic information in the stack trace for exceptions thrown by `MediaCodec`. If you look at the logcat output just before `MediaCodec` throws or check in the kernel logs you can sometimes see a more descriptive error logged by a lower-level component. In the past when we've seen such errors the explanations included things like: the device running out of resources, the bitstream being invalid and bugs in the decoder's handling of adaptive switches.\r\n\r\n> Please, let me know if async queueing is helpful on my case and verified with most android devices.\r\n\r\nWe've been experimenting with it but I think we'd probably still class it as experimental. @christosts is the expert on asynch queueing and can correct me and/or provide further details."
      },
      {
        "user": "christosts",
        "created_at": "2021-06-02T10:44:09Z",
        "body": "As @andrewlewis mentioned, the provided stack trace is not providing enough information and we'd need more information from the logcat output.\r\n\r\nIi is not straightforward that the error you observe is fixed by operating MediaCodec in asynchronous mode. Can you share more information on this? Is this exception raised always when you play video with synchronous mode and does the asynchronous mode fix it? What kind of content are you playing, on what device and Android version?  \r\n\r\nThe API is still experimental and under evaluation and we cannot provide more information for a stable at the moment. Please follow #6348 where we will post an update when we have concrete next steps for this API."
      },
      {
        "user": "HyowonHwang",
        "created_at": "2021-06-03T00:11:07Z",
        "body": "@andrewlewis \r\n> output just before MediaCodec throws or check in the kernel logs you can sometimes see a more descriptive error logged by a lower-level component.\r\n\r\nAs you mentioned, this exception seems not to happen normally and I logged `EventListener.onPlayerError`, found a lot of logs for this. I will try to get the log you said and share it. \r\n\r\n@christosts \r\n> Is this exception raised always when you play video with synchronous mode and does the asynchronous mode fix it? What kind of content are you playing, on what device and Android version?\r\n\r\nI have been only using  synchronous mode using playing video and not tried the asynchronous mode yet. \r\nSo, all exception are with  synchronous mode. \r\n\r\n## Version of ExoPlayer being used\r\n`2.12.3`\r\n\r\n## Device(s) and version(s) of Android being used\r\nI found the exception with below devices and Android 10 and 11 are the most.\r\n\r\nSM-N960N \r\nSM-A315N \r\nSM-G977N \r\nSM-N976N \r\nSM-A515F \r\nSM-N971N \r\nSM-N981N \r\nvivo 190 \r\nSM-G965N \r\nSM-A715F\r\nSM-A505\r\nRedmi Note 8 Pro\r\nSM-A716S \r\nCPH1823\r\nSM-G973N\r\nSM-A505F\r\nCPH1909\r\nSM-G970N\r\n\r\n> The API is still experimental and under evaluation and we cannot provide more information for a stable at the moment. Please follow #6348 where we will post an update when we have concrete next steps for this API.\r\n\r\nThanks, I keep watching on this issue\r\n"
      },
      {
        "user": "christosts",
        "created_at": "2021-06-11T16:06:16Z",
        "body": "As this was a question for AsynchronousBufferQueueing, the question was answered and I'closing the issue. If you need further assistance, feel free to re-open the issue or open another issue with different question.\r\n\r\nThanks"
      }
    ]
  },
  {
    "number": 8995,
    "title": "Notification not showing on real devices but showing in emulator",
    "created_at": "2021-05-30T13:40:53Z",
    "closed_at": "2021-06-02T16:55:40Z",
    "labels": [
      "question",
      "need more info"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8995",
    "body": "I am using the builder class to show the notification when playing audio but its showing in the emulator but not showing `on` real devices\r\n\r\n```\r\n PlayerNotificationManager notiBuilder = new PlayerNotificationManager.Builder(getApplicationContext()\r\n                , NOTI_ID, CHANNEL_ID, new MediaDescripTo()).build();\r\n        notiBuilder.setControlDispatcher(new DispatcherDef());\r\n\r\n        notiBuilder.setUseNextAction(true);\r\n        notiBuilder.setUsePreviousAction(true);\r\n        notiBuilder.setVisibility(NotificationCompat.VISIBILITY_PUBLIC);\r\n        notiBuilder.setPlayer(exoPlayer);\r\n```\r\n\r\nWhat I am missing or am I not going correct!",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8995/comments",
    "author": "khsuzan",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2021-05-31T17:50:46Z",
        "body": "Do you think it may be a difference in API versions when you compare this on real device and emulator?\r\n\r\nPlease check that you are comparing device and emulator with the same OS version. If you still see a difference, please let us know detailed information about what device/OS and emulator/OS you are using. You need to provide more information and context than the snippet above.\r\n\r\nIf you still think it is a problem of the library, please provide a snippet of the code you are running when seeing the issue. "
      },
      {
        "user": "khsuzan",
        "created_at": "2021-06-02T16:55:40Z",
        "body": "Finally notification show up and that was a mistake to add a channel to the notification builder\r\nMy final code with fix are \r\n ```\r\nPlayerNotificationManager.Builder myNoti = new PlayerNotificationManager.Builder(getApplicationContext()\r\n                , NOTI_ID, CHANNEL_ID, new MediaDescripTo());\r\n        myNoti.setNotificationListener(new NotiListener());\r\n        myNoti.setChannelImportance(NotificationUtil.IMPORTANCE_LOW);\r\n        myNoti.setChannelNameResourceId(R.string.channelname);\r\n\r\n        PlayerNotificationManager nManager = myNoti.build();\r\n        nManager.setControlDispatcher(new DispatcherDef());\r\n        nManager.setUseNextAction(true);\r\n        nManager.setUsePreviousAction(true);\r\n        nManager.setVisibility(NotificationCompat.VISIBILITY_PUBLIC);\r\n        nManager.setPlayer(exoPlayer);\r\n```"
      }
    ]
  },
  {
    "number": 8986,
    "title": "Higher CMA footprint due to use of KEY_MAX_* when configuring MediaCodec",
    "created_at": "2021-05-26T08:27:13Z",
    "closed_at": "2021-07-29T14:00:35Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8986",
    "body": "Hi,\r\nOur application integrates with ExoPlayer, but in testing we found that when ExoPlayer and MediaPlayer play the same video source, ExoPlayer consumes 50M more CMA memory than MediaPlayer.  Is there a way to reduce this memory footprint? I understand that both ExoPlayer and MediaPlayer use MediaCodec as the decoder.  ",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8986/comments",
    "author": "kirin233x",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2021-05-26T10:33:37Z",
        "body": "It's probably hard to answer without knowing in detail what you are measuring and comparing and without knowing how you have configured the players for your experiment.\r\n\r\nWhen you are talking about CMA footprint, are you referring to the buffers passed to the MediaCodec? Can you clarify a bit how and what you are measuring?\r\n\r\nBesides decoder buffers, I think you already know how to configure the buffers sizes with `DefaultLoadControl` when you build ExoPlayer. If you have considered this in your experiment and made sure that both player have the same buffer sizes before comparing, you could try to adjust the buffer sizes and while doing that measure the quality of experience both players provide. These buffer sizes may be a big chunk of the memory footprint when doing media playback and they also contribute to the user experience. In general, knowing what your experiment is doing, like what you measure and how you measure would be helpful for us for giving you a response. \r\n\r\nHave you seen other big chunks of memory usage of ExoPlayer that you think are making the difference?\r\n\r\nBesides just comparing these two players, do you have any absolute threshold your app wants to meet? Can you shed some light on the actual requirements you are trying to meet besides 'MediaPlayer uses less'? Do you see increased OOM of your app for some devices or in general?  "
      },
      {
        "user": "kirin233x",
        "created_at": "2021-05-27T01:21:00Z",
        "body": "Thank you very much for your reply. As for cma memory, we have found a root device, and we can obtain the cma's memory by reading the data from/sys/kernel/debug/cma. However, for some highly performing devices, this value may not change.  We are using a vehicle device that is capable of steadily consuming CMA memory  \r\n\r\nAccording to the analysis of our ROM team, the main use scenario of CMA should be codec.  \r\n\r\nYes.  I modified the DEFAULT_MIN_BUFFER_MS,DEFAULT_MAX_BUFFER_MS,DEFAULT_BUFFER_FOR_PLAYBACK_MS,DEFAULT_BUFFER_FOR_PLAYBACK_AFTER_  REBUFFER_MS,DEFAULT_VIDEO_BUFFER_SIZE,DEFAULT_MIN_BUFFER_SIZE, and DEFAULT_MIN_BUFFER_SIZE in an attempt to verify the impact of cache size, resulting in no reduction in CMA usage.  \r\n\r\nI have been a user of ExoPlayer before, but I do not have a deep understanding of its principle. After the analysis of these days, I have not found out any scenes that may have an impact on internal storage except the cache area, which is also the main direction for me to ask for help. Are there any other scenes that will occupy a large amount of memory?  \r\n\r\nExoPlayer and MediaPlayer are compared using the same video source.  The same device. I think my next step should focus on analyzing the differences between the two using MediaCodec.\r\n\r\nThanks again for your reply and forgive my poor English.\r\n\r\n"
      },
      {
        "user": "marcbaechinger",
        "created_at": "2021-05-27T14:45:40Z",
        "body": "If the CMA memory usage is determined by what `MediaCodec` is doing internally, it's difficult to have influence from `ExoPlayer` side I think. \r\n\r\n> compared using the same video source\r\n\r\nThe buffers that are filled by` ExoPlayer` and passed to the `MediaCodec`, are provided by the `MediaCodec`. It decides about the size of these buffers depends of the format of the video source (the format of the track with best quality in case of adaptive media) that the player declares. In ExoPlayer this happens in `MediaCodecRenderer.initCodec(MediaCodecInfo codecInfo, MediaCrypto crypto)`. It's unclear to me whether `MediaPlayer` does something else here than `ExoPlayer.` I honestly just don't know enough about media player. \r\n\r\nFurther, usage of `MediaPlayer` and `ExoPlayer` happens in a context that differs and that may cause the differences you are seeing. For instance, usage of media buffers is in-process for the case of `ExoPlayer`, while it is in another process when using `MediaPlayer`. I don't know what the effect of this on internal memory usage is.\r\n\r\nI'm not saying that one or the other player could perform better or not, but it's difficult to measure and explain. A clear indication that one solution is doing better would be seeing more crashes or problems with one or the other solution in an experiment when released and running on users devices.  That's why I was asking if you have some indications regarding this. The larger the number of users in such an experiment is the more a judgment can be done how it behaves. "
      },
      {
        "user": "kirin233x",
        "created_at": "2021-05-28T08:25:23Z",
        "body": "Thanks for your reply. Many tests have shown that CODEC is the main factor affecting CMA occupancy.  If you use hard coding, you may use this part of memory.  \r\nNext I'm going to use the soft decoding capabilities provided in ExoPlayer to do video parsing and take a look at the CMA memory footprint.  Thanks."
      },
      {
        "user": "kirin233x",
        "created_at": "2021-05-29T11:03:35Z",
        "body": "After many trials.  I found that one of the major factors affecting CMA memory requests was passing in KEY_MAX_WIDTH and KEY_MAX_HEIGHT when setting the mediaCode.  \r\n\r\nAbout these two attributes, the introduction on the official website is that：\r\nSpecify both KEY_MAX_WIDTH and KEY_MAX_HEIGHT to enable adaptive playback (seamless resolution change) for a video decoder that supports it (MediaCodecInfo.CodecCapabilities#FEATURE_AdaptivePlayback). The values are used as hints for the codec: they are the maximum expected resolution to prepare for. Depending on codec support, preparing for larger maximum resolution may require more memory even if that resolution is never reached. These fields have no effect for codecs that do not support adaptive playback.\r\n\r\nI have modified the source code directly to remove these two attributes and have not seen any significant effect.  What do you think?  \r\n"
      },
      {
        "user": "marcbaechinger",
        "created_at": "2021-05-31T18:09:46Z",
        "body": "That's what I meant when I say that the Format which ExoPlayer reports determines the amount of memory reserved by the codec. If the maximum resolution is higher the codec needs to reserve more memory even if that is not used when a smaller resolution is chosen by the adaptive algorithm. \r\n\r\nIt may be that media player sets another maximum cap than ExoPlayer for the video. Then the codec internally reserves less memory. \r\n\r\nAs I mentioned, it is very hard to compare these player's mem consumption because we don't really know whether the players do the same. So if Media player caps the top quality of an adaptive stream then it may use less memory but does not provide the same quality of service."
      },
      {
        "user": "ojw28",
        "created_at": "2021-06-01T11:41:15Z",
        "body": "I'm a bit confused by this issue.\r\n\r\n@kirin521 - Is your use case to play _non-adaptive_ content? If so, are the values passed using `KEY_MAX_HEIGHT` and `KEY_MAX_WIDTH` the same values as those passed using `KEY_HEIGHT` and `KEY_WIDTH`, and is that alone sufficient to cause additional memory to be allocated?\r\n\r\nIf that's the case then we should consider _not_ setting `KEY_MAX_HEIGHT` and `KEY_MAX_WIDTH` for non-adaptive playbacks (we still need them to be set for adaptive playbacks). We'd also want to follow up with the platform team as to whether this is expected behavior."
      },
      {
        "user": "kirin233x",
        "created_at": "2021-06-01T11:50:05Z",
        "body": "Hi, thank you for your attention.  Yes, the KEY_HEIGHT/WIDTH passed to mediaCodec in ExoPlayer is currently set to the same value as the KEY_MAX_HEIGHT/WIDTH.  I'm going to take those two values out, and I don't see any playback problems, and the video cache and all that stuff is working, right.\r\n\r\nIt is difficult to grab the CMA memory on traditional devices. The problem was a CMA exception on the car. I needed to use a serial port to get the real-time CMA memory footprint.  The chip of the car is RCAR M3. I think the use of CMA memory is most likely related to the codec mode of the chip.  \r\n\r\nIn the case of KEY_MAX_HEIGHT, a video of 640*480 is played, and the memory of CMA is stable at 120M. After removing this attribute, only 30M memory is needed.  @ojw28 "
      },
      {
        "user": "ojw28",
        "created_at": "2021-06-01T19:00:50Z",
        "body": "> If that's the case then we should consider not setting KEY_MAX_HEIGHT and KEY_MAX_WIDTH for non-adaptive playbacks (we still need them to be set for adaptive playbacks). We'd also want to follow up with the platform team as to whether this is expected behavior.\r\n\r\n@christosts - This seems like a `MediaCodec` question to follow up with the framework team about, probably using an internal bug.\r\n\r\nIt's unclear why memory allocation would be higher. It might be a platform specific issue, but there may also be a legitimate reason why the underlying implementation would need to do that (e.g., having to allocate a larger number of buffers in anticipation of possible adaptation). If the latter, we should consider populating `KEY_MAX_HEIGHT` and `KEY_MAX_WIDTH` conditionally on adaptive content being played. This is something we can infer from the length of the `streamFormats` array passed to `MediaCodecVideoRenderer.getCodecMaxValues`."
      },
      {
        "user": "christosts",
        "created_at": "2021-06-02T10:16:59Z",
        "body": "internal ref: b/189918386"
      },
      {
        "user": "christosts",
        "created_at": "2021-07-29T14:00:35Z",
        "body": "We communicated with the Android platform and they responded that is not the expected behavior with respect to memory allocation. The platform team is not aware of such behavior on devices, and it's possible that this may be root caused to vendor-specific implementation.\r\n\r\nThe suggestion we can offer is to reach out to the vendor (if possible) or keep the current customization on the ExoPlayer if that solves your problem with memory consumption.\r\n\r\nOn the ExoPlayer side, we considered not setting the KEY_MAX_WIDTH/HEIGHT for non-adaptive playbacks, but we concluded that this risks any regression on existing playback behavior so we will not move forward with such change."
      },
      {
        "user": "kirin233x",
        "created_at": "2021-07-29T14:08:45Z",
        "body": "@christosts thanks for your reply. Currently I remove the KEY_MAX_WIDTH/HEIGHT attribute by using custom implementation. thanks again for your research. We will communicate with you later if you have any questions about this."
      }
    ]
  },
  {
    "number": 8977,
    "title": "how to play a custom chunk files with different download manager ",
    "created_at": "2021-05-23T11:10:48Z",
    "closed_at": "2021-06-04T11:54:55Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8977",
    "body": "How can I give Exo a different source of Chunks downloaded with a own download manager?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8977/comments",
    "author": "hosseinkhojany",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2021-05-24T11:29:01Z",
        "body": "If the result of your download logic is that you have a valid media file (or a complete and valid DASH and HLS stream) downloaded locally, then you can simply pass a `file:///` URI that points to it to ExoPlayer, and playback should work fine.\r\n\r\nIf your use case is different, then it sounds like your question falls outside the scope of this issue tracker. We provide built in components to implement the functionality you request, so we'd suggest using those if you can't get your own solution to work."
      }
    ]
  },
  {
    "number": 8972,
    "title": "How to set player don't load whole video in the beginning.",
    "created_at": "2021-05-21T09:27:14Z",
    "closed_at": "2021-06-22T01:04:17Z",
    "labels": [
      "question",
      "closed-by-bot"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8972",
    "body": "When I try to play video by exoplayer, video maybe 2-3Mb (10-20s) or other big size(10Mb - 60s)\r\nI wan‘t to play video and  load whole video in the beginning. it's too waste stream.\r\ni try to use loadcontrol.setBufferDurationsMs to reduce buffer size,but it's not work.\r\nCould you help me to solve it?\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8972/comments",
    "author": "javalue",
    "comments": [
      {
        "user": "javalue",
        "created_at": "2021-05-21T09:49:24Z",
        "body": "`LoadControl loadControl = new DefaultLoadControl.Builder()\r\n                .setBufferDurationsMs(1000,3000,\r\n                        500, 1000)\r\n                .createDefaultLoadControl();`"
      },
      {
        "user": "krocard",
        "created_at": "2021-05-25T07:08:11Z",
        "body": "The bitrates mentioned are around 0.2Mb/s, which are fairly low for video. Your issue is that the whole video is downloaded before playback starts, right?\r\n\r\nI'm guessing your app use-case is presenting lots of video that the user quickly switch through (like a gallery or Tick-Tock).\r\n\r\nI'm not sure what causes the issue, DefaultLoadControl might not take into account all buffering occurring bellow the main network buffer, or it might be a variable bitrate issue.\r\n\r\n@javalue could you attach one of the video triggering the issue? \r\nIf you're unable to share test content publicly, please send them to dev.exoplayer@gmail.com using a subject in the format \"Issue #1234\" (\"#1234\" is replaced with your issue number). Please also update this issue to indicate you've done this.\r\n\r\n@ojw28 do you know the level of precision LoadController can achieve for low bitrate low duration?"
      },
      {
        "user": "ojw28",
        "created_at": "2021-05-25T13:39:22Z",
        "body": "> @ojw28 do you know the level of precision LoadController can achieve for low bitrate low duration?\r\n\r\nI think it should work at a granularity of around ~1MB increments of buffer.\r\n\r\n@javalue - In addition to the information requested above, please could you also attach a slightly more complete code block showing how you build your player (i.e., after you create your `LoadControl`, how do you inject it into the player)."
      },
      {
        "user": "google-oss-bot",
        "created_at": "2021-06-14T01:04:07Z",
        "body": "<!-- event: mark-stale -->\nHey @javalue. We need more information to resolve this issue but there hasn't been an update in 14 weekdays. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2021-06-22T01:04:17Z",
        "body": "<!-- event: close-stale -->\nSince there haven't been any recent updates here, I am going to close this issue.\n\n@javalue if you're still experiencing this problem and want to continue the discussion just leave a comment here and we are happy to re-open this."
      },
      {
        "user": "javalue",
        "created_at": "2021-07-12T03:47:12Z",
        "body": "> > @ojw28你知道 LoadController 在低比特率低持续时间下可以达到的精确水平吗？\r\n> \r\n> 我认为它应该大约有 1MB 增长的规模工作。\r\n> \r\n> @javalue - 除了上面要求的信息之外，您还可以附上一个完整的代码块，显示您如何构建播放器（即，在创建您的之后`LoadControl`，如何将注入其播放器）。\r\n\r\n\r\n`LoadControl loadControl = new DefaultLoadControl.Builder()\r\n                .setBufferDurationsMs(1000,3000,\r\n                        500, 1000)\r\n                .createDefaultLoadControl();\r\n\r\n        TrackSelection.Factory trackSelectionFactory = new AdaptiveTrackSelection.Factory(new DefaultBandwidthMeter());\r\n\r\n        DefaultTrackSelector trackSelector = new DefaultTrackSelector(trackSelectionFactory);\r\n\r\n        trackSelector.setParameters(new DefaultTrackSelector.ParametersBuilder().build());\r\n\r\n        DefaultRenderersFactory renderersFactory = new DefaultRenderersFactory(FrameworkUtil.getContext(),\r\n                DefaultRenderersFactory.EXTENSION_RENDERER_MODE_ON);\r\n\r\n        SimpleExoPlayer player = ExoPlayerFactory.newSimpleInstance(renderersFactory, trackSelector, loadControl);`"
      },
      {
        "user": "javalue",
        "created_at": "2021-07-12T03:50:24Z",
        "body": "> > @ojw28你知道 LoadController 在低比特率低持续时间下可以达到的精度水平吗？\r\n> \r\n> 我认为它应该以大约 1MB 缓冲区增量的粒度工作。\r\n> \r\n> @javalue - 除了上面要求的信息之外，您能否附上一个稍微完整的代码块，显示您如何构建播放器（即，在创建您的 之后`LoadControl`，如何将其注入播放器）。\r\n\r\nthe video maybe have 1.5mb,when it play 1s,i pause it,but the cache have already downloaded the whole video."
      },
      {
        "user": "javalue",
        "created_at": "2021-07-22T03:02:23Z",
        "body": "> 由于这里没有任何最近的更新，我将关闭此问题。\r\n> \r\n> @javalue如果您仍然遇到此问题并想继续讨论，请在此处发表评论，我们很乐意重新打开此问题。\r\n\r\nplease open it. thanks"
      }
    ]
  },
  {
    "number": 8950,
    "title": "Exoplayer download service unable to download different HLS videos with different cookie value for authentication ",
    "created_at": "2021-05-17T12:02:05Z",
    "closed_at": "2021-06-09T13:31:44Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8950",
    "body": "I have implemented a download service and it is working fine with normal HLS URL's....but when i try download a HLS URL which usses some cookie value for authentication...my download fails because download manager initializes only once in download service of exoplayer. Is there any way to restart the service every time or change the instance of download manager every time for each video or to stop the download service if one video has been completed and start service again for another video as that would solve my issue. ",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8950/comments",
    "author": "anandsingh2903",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2021-05-27T14:57:31Z",
        "body": "When you subclass the `DownloadService` you need to implement the `getDownloadManager` method. So you can construct the `DownloadManager` yourself.  So your app can determine what `DataSource.Factory` is passed to the constructor of `DownloadManager`. If you pass a `ResolvingDataSource.Factory` you can change the request at the moment when the request is issued. This seems to be a flexible way to change your request.\r\n\r\n>  restart the service every time or change the instance of download manager every time\r\n\r\nWould the apporach above help for this? Instead of creating a new service or download manager you would be able to change the request you are doing with the `ResolvingDataSource` that modifies the `DataSpec` passed to the upstream data source by consulting the `ResolvingDataSource.Resolver` that you implement.\r\n\r\nPlease let me know if this helps.\r\n\r\nIf not, can you clarify a bit how the request to the server needs to be changed for successfully downloading with authentication?\r\n\r\n"
      },
      {
        "user": "anandsingh2903",
        "created_at": "2021-06-09T10:12:15Z",
        "body": "Alright will try your suggested implementation and will get back to you."
      },
      {
        "user": "anandsingh2903",
        "created_at": "2021-06-09T13:31:44Z",
        "body": "This is working great....thanks"
      }
    ]
  },
  {
    "number": 8945,
    "title": "Notification for download after pausing download.",
    "created_at": "2021-05-15T09:52:32Z",
    "closed_at": "2021-09-06T23:25:20Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8945",
    "body": "We are developing app where we are working on download part.\r\n\r\nRequirement is to show a notification when download is paused. so that from the notification we can resume or remove the download.\r\nbut with current version notification is removed when download is paused. \r\n\r\nIs there any way to show download notification even when download is paused, which should be same as progress notification.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8945/comments",
    "author": "pratikK017",
    "comments": [
      {
        "user": "pratikK017",
        "created_at": "2021-08-31T09:38:33Z",
        "body": "Is there any update in this. Please let me know. Also we are using latest exo player version i.e. 2.14.1."
      },
      {
        "user": "marcbaechinger",
        "created_at": "2021-08-31T15:53:36Z",
        "body": "There is no way to do that out of the box I'm afraid.\r\n\r\nI'm assuming you are using the `DownloadService` for downloading. So you have subclassed the `DownloadService` and implemented the `getDownloadManager()` method. The `DownloadManager` has a `addListener` method that allows you to register a listener that gets its `onDownloadsPausedChanged(DownloadManager downloadManager, boolean downloadsPaused)` called when a change in pausing occurs. `DownloadManager.getDownloadsPaused()` tells you whether downloads are paused or not.\r\n\r\nThis way you can listen to this event and if downloads are pause, then post your own notification that allows the user to resume. On another call to that method you can then remove your custom notification again if `getDownloadsPaused` returns false again."
      }
    ]
  },
  {
    "number": 8940,
    "title": "How should I use the pass-through function？",
    "created_at": "2021-05-14T10:35:22Z",
    "closed_at": "2021-05-14T16:04:00Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8940",
    "body": "I have an android box which supports Dolby decoding function.\r\nThe box is connected to a playback device, which also supports Dolby decoding.\r\n\r\nI want to configure the box to output audio to the playback device through the passthrough function. How should I operate in exoplayer?\r\nI have read Google's search results and github issues, but the debugging was not successful.\r\nI hope to be able to send passthrough data through HDMI and S/PDIF lines respectively.\r\nI used exoplayer 2.13.3，android box system version is 9.\r\nThanks.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8940/comments",
    "author": "kdsrsl",
    "comments": [
      {
        "user": "krocard",
        "created_at": "2021-05-14T16:04:00Z",
        "body": "This is handled automatically by `SimpleExoPlayer` and enabled by default. More specifically the supported formats are automatically discovered by `AudioCapabilities.getCapabilities()` and passed to the `DefaultAudioSink` by the `RenderersFactory.buildAudioSink`.\r\n\r\nJust play the Dolby media with ExoPlayer normally and, if the device supports it, it will be played in passthrough."
      }
    ]
  },
  {
    "number": 8926,
    "title": "Exoplayer hls video h264 interlaced top first audio aac, stb os crash",
    "created_at": "2021-05-10T20:40:44Z",
    "closed_at": "2021-07-13T13:59:58Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8926",
    "body": "Hello. I'm try use exoplayer for play interlaced video , on amlogic s905w processor with android 9 on board. But some time then change mediasource from one channel to another , stb stops reporting and then may reboot may not. Some streams play on some stb with libvlc without restarts. Vlc not acceptable by another specs. Can give any way for understand why stbs give this problems (not only one stb problem).  The problem rite is increase by cpu core temperature. On cpu core temp near 80 C. Problems more actual than on cpu temp 50. But on 50c core temp problem can happen too",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8926/comments",
    "author": "PoghosyanRoman",
    "comments": [
      {
        "user": "PoghosyanRoman",
        "created_at": "2021-05-12T14:14:00Z",
        "body": "How can i force use omx.android decoder for confirmation of hw decoder bug ?"
      },
      {
        "user": "PoghosyanRoman",
        "created_at": "2021-05-18T15:52:23Z",
        "body": "problem is in avc decoder , then ir receive high framerate , it crashes ... i think player no limits the framerate .\r\nOn android 7 in log i see \r\n021-05-18 19:49:49.656 4102-6802/? D/Layer: Layer (HwcAgt-0xf2ad6800) No valid buffer now, waiting for new buffer.\r\n2021-05-18 19:49:49.661 4102-6802/? D/Layer: Layer (HwcAgt-0xf2ad6800) BufferQueue Present Later.\r\n2021-05-18 19:49:49.672 4102-6802/? D/Layer: Layer (HwcAgt-0xf2ad6800) BufferQueue Present Later.\r\n2021-05-18 19:49:49.674 4122-1182/? D/AmlogicVideoDecoderAwesome: checkout pts___!!_mLastTimeStamp=32160, mPtsRecoveryCount=0\r\n2021-05-18 19:49:49.689 4102-6802/? D/Layer: Layer (HwcAgt-0xf2ad6800) BufferQueue Present Later.\r\n2021-05-18 19:49:49.705 4102-6802/? D/Layer: Layer (HwcAgt-0xf2ad6800) hwcAgent consume buffer ok.\r\n2021-05-18 19:49:49.706 4102-6802/? D/Layer: Layer (HwcAgt-0xf2ad6800) No valid buffer now, waiting for new buffer.\r\n2021-05-18 19:49:49.781 4102-6802/? D/Layer: Layer (HwcAgt-0xf2ad6800) BufferQueue Present Later.\r\n2021-05-18 19:49:49.783 6470-6546/com.tv.rvptv I/CodecNameUnknown-MediaCodecVideoRenderer: dropOutputBuffer: bufferIndex = 1, PTS = 32080000\r\n2021-05-18 19:49:49.784 6470-6546/com.tv.rvptv I/CodecNameUnknown-MediaCodecVideoRenderer: dropOutputBuffer: bufferIndex = 0, PTS = 32080000\r\n2021-05-18 19:49:49.789 4102-6802/? D/Layer: Layer (HwcAgt-0xf2ad6800) BufferQueue Present Later.\r\n2021-05-18 19:49:49.806 4102-6802/? D/Layer: Layer (HwcAgt-0xf2ad6800) BufferQueue Present Later.\r\n2021-05-18 19:49:49.823 4102-6802/? D/Layer: Layer (HwcAgt-0xf2ad6800) hwcAgent consume buffer ok.\r\n2021-05-18 19:49:49.823 4102-6802/? D/Layer: Layer (HwcAgt-0xf2ad6800) No valid buffer now, waiting for new buffer.\r\n\r\nvideo have some lags , but not reboot and not become to very hot, In android 9 no any message about hw buffer"
      },
      {
        "user": "Samrobbo",
        "created_at": "2021-07-13T13:59:58Z",
        "body": "The temperature of the CPU doesn't seem related to ExoPlayer. I would recommend reaching out to the CPU and Phone manufacturer.  "
      }
    ]
  },
  {
    "number": 8888,
    "title": "controlling applied rotation parameter in PlayerView.onVideoSizeChanged",
    "created_at": "2021-04-29T14:24:49Z",
    "closed_at": "2021-05-24T07:43:52Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8888",
    "body": "I have a requirement to play a video rotated by 90 degrees and fill the entire screen with it .\r\nI tried rotating the `PlayerView `itself but when I programmatically set its resize mode afterwards using :\r\n        `PlayerView.setResizeMode(AspectRatioFrameLayout.RESIZE_MODE_FILL);`\r\nthe rotation is not applied.\r\nlooking at `PlayerView ` code I saw the following method:\r\n\r\n```\r\npublic void onVideoSizeChanged(\r\n        int width, int height, int unappliedRotationDegrees, float pixelWidthHeightRatio)\r\n```\r\nimplemented by `ComponentListener` in `PlayerView` , if I manually change the library code and force unappliedRotationDegrees to 90 everything works perfectly.\r\n\r\nmy question is how this parameter is suppose to be set , is there any way to control it via the library exposed interfaces ?\r\nThanks.\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8888/comments",
    "author": "asafbennatan",
    "comments": [
      {
        "user": "kim-vde",
        "created_at": "2021-04-30T09:01:52Z",
        "body": "The rotation degree is usually encoded in the media content itself (in the tkhd box for MP4 for example), so you could try to do that.\r\n\r\nYou could also try to implement one of the solutions described in #8099.\r\n\r\nI don't think there is an easier way to do what you want."
      }
    ]
  },
  {
    "number": 8886,
    "title": "Unable to build locally",
    "created_at": "2021-04-29T07:00:19Z",
    "closed_at": "2021-05-28T01:04:45Z",
    "labels": [
      "question",
      "closed-by-bot"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8886",
    "body": "Hello,\r\nI couldn't build locally due to following error:\r\nerror: cannot find symbol\r\nimport android.media.MediaParser;\r\n                    ^\r\n  symbol:   class MediaParser\r\n  location: package android.media\r\n\r\neven the library obviously is there.\r\nHave someone seen such as issue?\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8886/comments",
    "author": "ivostefanoff",
    "comments": [
      {
        "user": "kim-vde",
        "created_at": "2021-04-29T09:05:14Z",
        "body": "Which branch are you trying to build? Can you try changing the compileSdkVersion to 30?"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2021-05-19T01:04:38Z",
        "body": "<!-- event: mark-stale -->\nHey @ivostefanoff. We need more information to resolve this issue but there hasn't been an update in 14 weekdays. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2021-05-28T01:04:45Z",
        "body": "<!-- event: close-stale -->\nSince there haven't been any recent updates here, I am going to close this issue.\n\n@ivostefanoff if you're still experiencing this problem and want to continue the discussion just leave a comment here and we are happy to re-open this."
      }
    ]
  },
  {
    "number": 8883,
    "title": "Is it possible to grab a frame from a video without displaying it?",
    "created_at": "2021-04-28T17:33:45Z",
    "closed_at": "2021-04-28T17:38:28Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8883",
    "body": "I know I can get a frame of a playing video by using TextureView and its getBitmap function.\r\n\r\nHowever can I also get a frame from a video if I don't want to display the video at all, hence I don't have any surface on the UI?\r\n\r\nCan it also work somehow when the phone's screen is off?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8883/comments",
    "author": "danergo",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2021-04-28T17:38:28Z",
        "body": "The information in #7167 will probably help. The non-`TextureView` techniques should work without an output view (with the screen off)."
      },
      {
        "user": "danergo",
        "created_at": "2021-05-07T05:49:08Z",
        "body": "I'm trying to use those approaches, but ImageReader throws me an exception with a strange message:\r\n\r\n```\r\n// Create the player\r\nexoplayer = new SimpleExoPlayer.Builder(ctx).setTrackSelector(new DefaultTrackSelector(ctx)).build();\r\n\r\n// Create the virtual output\r\nImageReader ir = ImageReader.newInstance(1920, 1080, PixelFormat.RGBA_8888, 5);\r\n\r\nimageReader.setOnImageAvailableListener(new ImageReader.OnImageAvailableListener() {\r\n    @Override\r\n    public void onImageAvailable(ImageReader imageReader) {\r\n        imageReader.acquireLatestImage();\r\n    }\r\n}, null);\r\n\r\nexoplayer.setVideoSurface(ir.getSurface());\r\nexoplayer.prepare(...);\r\nexoplayer.setPlayWhenReady(true);\r\n```\r\n\r\nimageReader.acquireLatestImage() throws an exception:\r\n\r\n**java.lang.UnsupportedOperationException: The producer output buffer format 0x7fa30c06 doesn't match the ImageReader's configured buffer format 0x1.**"
      }
    ]
  },
  {
    "number": 8881,
    "title": "Should switchTargetView support PlayerView <--> StyledPlayerView?",
    "created_at": "2021-04-28T12:35:27Z",
    "closed_at": "2021-09-06T22:23:36Z",
    "labels": [
      "question",
      "low priority"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8881",
    "body": "One of my practice to keep the Player instance across different playback surfaces is to use the `switchTargetView` method. It is so useful, but it is not possible to switch the target from a PlayerView to a StyledPlayerView and back. As far as I can see, the implementation of `setPlayer` is similar for these classes. \r\n\r\nI want to ask (1) Is there any concern about switching a `Player` instance from a `PlayerView` to a `StyledPlayerView` and back? (2) Why not have a `switchTargetView` method that supports both Views (I sure can create one for my use case, so question 1 is more critical I suppose)?\r\n\r\nThanks in advance.\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8881/comments",
    "author": "eneim",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2021-04-29T10:07:46Z",
        "body": "We could add a new interface to make this possible, but it seems pretty unusual to be using both within a single app, given they look so different. What's the use case for doing that?"
      },
      {
        "user": "eneim",
        "created_at": "2021-05-03T08:54:44Z",
        "body": "@ojw28 Thanks for the answer, having an interface on top of these Views would be nice.\r\n\r\n> What's the use case for doing that?\r\n\r\nIt is a library that supports switching Player between different playback _targets_ (in other words, different PlayerView instances in terms of the old ExoPlayer versions). Thinking like having an Activity that uses StyledPlayerView and when the user clicks it, it opens another Activity that uses PlayerView, my implementation keeps the Player instance at Application scope, and just switches between the targets to keep the playback experience smoothly. \r\n\r\nSince it is a library, it is not really friendly to tell the clients they should use PlayerView only, or StyledPlayerView only in their app. (I acknowledge that maybe it is just me doing this, so it is fine if I should do it myself. It is good to know that \"switching Player between PlayerView and StyledPlayerView\" is not something bad technically)."
      },
      {
        "user": "ojw28",
        "created_at": "2021-09-06T22:23:36Z",
        "body": "I think we can close this as \"sufficiently obscure\" that we don't need to provide support directly in the library. As you've noted, it's pretty easy for you to implement your own version that works with both views for your specific case."
      }
    ]
  },
  {
    "number": 8880,
    "title": "Negative PlaybackState position wont update PlaybackState position.",
    "created_at": "2021-04-28T12:11:06Z",
    "closed_at": "2021-07-08T09:25:00Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8880",
    "body": "Hi, we have updated our ExoPlayer version from 2.11.7 to 2.13.3 which causes an unexpected behavior for us. \r\n If you do a seekTo with a negative value, (lets say negative 5000ms) which will set the PlaybackStateCompats position to a negative value. If you then start playing, the audio will play as usual but the position of PlaybackStateCompat will be stuck at 0 until you change the state of PlaybackStateCompat(example pausing) or you wait for the audio to play for 5000ms (or the amount of negative time you set the position of PlaybackStateCompat to at the beginning). Only then will the position of PlaybackStateCompat update to its real current position, go directly from 0 to 5000. I have seen this behavior on some other app but not on your ExoPlayer Demo app (I am assuming you can't seek to a negative value in the demo app?).\r\n\r\nNot sure if this is a bug on your side, or if it’s now the expected behavior?\r\n\r\nPrevious ExoPlayer version without this \"bug\": 2.11.8\r\nCurrent ExoPlayer version with this \"bug\": 2.13.3\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8880/comments",
    "author": "Gillepool",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2021-06-16T17:01:08Z",
        "body": "Sorry for my delayed response. \r\n\r\n\r\nIf this is still an issue, can you add some more details about you case? Are you using `MediaSessionConnector`?\r\n\r\nI'm asking because as far as I can see, the `MediaSessionConnector` builds the `PlaybackStateCompat` with the value coming from `player.getCurrentPosition()` and I would expect that the `MediaSessionConnector` never sets a position that is negative.\r\n\r\nCan you clarify how you build the `PlaybackStateCompat`?"
      },
      {
        "user": "marcbaechinger",
        "created_at": "2021-07-08T09:25:00Z",
        "body": "Closing due to inactivity."
      }
    ]
  },
  {
    "number": 8873,
    "title": "Exoplayer v2.13.3 can't play  60 fps media",
    "created_at": "2021-04-27T08:51:13Z",
    "closed_at": "2021-05-24T07:42:58Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8873",
    "body": "#5921\r\n- ExoPlayer version number 2.13.3\r\n- Android version 7.1.2\r\n- Android device vivo x9\r\n\r\n```    \r\nE/ExoPlayerImplInternal: Playback error\r\n          com.google.android.exoplayer2.ExoPlaybackException: MediaCodecVideoRenderer error, index=0, format=Format(1, null, null, video/avc, avc1.640034, -1, null, [3840, 2024, 59.999996], [-1, -1]), format_supported=NO_EXCEEDS_CAPABILITIES\r\n            at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:555)\r\n            at android.os.Handler.dispatchMessage(Handler.java:98)\r\n            at android.os.Looper.loop(Looper.java:154)\r\n            at android.os.HandlerThread.run(HandlerThread.java:61)\r\n         Caused by: com.google.android.exoplayer2.mediacodec.MediaCodecRenderer$DecoderInitializationException: Decoder init failed: OMX.qcom.video.decoder.avc, Format(1, null, null, video/avc, avc1.640034, -1, null, [3840, 2024, 59.999996], [-1, -1])\r\n            at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.maybeInitCodecWithFallback(MediaCodecRenderer.java:1018)\r\n            at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.maybeInitCodecOrBypass(MediaCodecRenderer.java:578)\r\n            at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.onInputFormatChanged(MediaCodecRenderer.java:1420)\r\n            at com.google.android.exoplayer2.video.MediaCodecVideoRenderer.onInputFormatChanged(MediaCodecVideoRenderer.java:694)\r\n            at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.readToFlagsOnlyBuffer(MediaCodecRenderer.java:965)\r\n            at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.render(MediaCodecRenderer.java:811)\r\n            at com.google.android.exoplayer2.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:948)\r\n            at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:478)\r\n            at android.os.Handler.dispatchMessage(Handler.java:98) \r\n            at android.os.Looper.loop(Looper.java:154) \r\n            at android.os.HandlerThread.run(HandlerThread.java:61) \r\n         Caused by: android.media.MediaCodec$CodecException: Error 0xfffffff4\r\n            at android.media.MediaCodec.native_configure(Native Method)\r\n            at android.media.MediaCodec.configure(MediaCodec.java:1884)\r\n            at com.google.android.exoplayer2.mediacodec.SynchronousMediaCodecAdapter.configure(SynchronousMediaCodecAdapter.java:61)\r\n            at com.google.android.exoplayer2.video.MediaCodecVideoRenderer.configureCodec(MediaCodecVideoRenderer.java:620)\r\n            at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.initCodec(MediaCodecRenderer.java:1110)\r\n            at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.maybeInitCodecWithFallback(MediaCodecRenderer.java:1011)\r\n            at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.maybeInitCodecOrBypass(MediaCodecRenderer.java:578) \r\n            at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.onInputFormatChanged(MediaCodecRenderer.java:1420) \r\n            at com.google.android.exoplayer2.video.MediaCodecVideoRenderer.onInputFormatChanged(MediaCodecVideoRenderer.java:694) \r\n            at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.readToFlagsOnlyBuffer(MediaCodecRenderer.java:965) \r\n            at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.render(MediaCodecRenderer.java:811) \r\n            at com.google.android.exoplayer2.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:948) \r\n            at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:478) \r\n            at android.os.Handler.dispatchMessage(Handler.java:98) \r\n            at android.os.Looper.loop(Looper.java:154) \r\n            at android.os.HandlerThread.run(HandlerThread.java:61) \r\n    D/EventLogger: videoDisabled [eventTime=33.18, mediaPos=0.00, window=0, period=0]\r\n    D/EventLogger: audioDisabled [eventTime=33.18, mediaPos=0.00, window=0, period=0]\r\n    E/EventLogger: playerFailed [eventTime=33.18, mediaPos=0.00, window=0, period=0\r\n          com.google.android.exoplayer2.ExoPlaybackException: MediaCodecVideoRenderer error, index=0, format=Format(1, null, null, video/avc, avc1.640034, -1, null, [3840, 2024, 59.999996], [-1, -1]), format_supported=NO_EXCEEDS_CAPABILITIES\r\n            at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:555)\r\n            at android.os.Handler.dispatchMessage(Handler.java:98)\r\n            at android.os.Looper.loop(Looper.java:154)\r\n            at android.os.HandlerThread.run(HandlerThread.java:61)\r\n         Caused by: com.google.android.exoplayer2.mediacodec.MediaCodecRenderer$DecoderInitializationException: Decoder init failed: OMX.qcom.video.decoder.avc, Format(1, null, null, video/avc, avc1.640034, -1, null, [3840, 2024, 59.999996], [-1, -1])\r\n            at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.maybeInitCodecWithFallback(MediaCodecRenderer.java:1018)\r\n            at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.maybeInitCodecOrBypass(MediaCodecRenderer.java:578)\r\n            at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.onInputFormatChanged(MediaCodecRenderer.java:1420)\r\n            at com.google.android.exoplayer2.video.MediaCodecVideoRenderer.onInputFormatChanged(MediaCodecVideoRenderer.java:694)\r\n            at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.readToFlagsOnlyBuffer(MediaCodecRenderer.java:965)\r\n            at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.render(MediaCodecRenderer.java:811)\r\n            at com.google.android.exoplayer2.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:948)\r\n            at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:478)\r\n            at android.os.Handler.dispatchMessage(Handler.java:98) \r\n            at android.os.Looper.loop(Looper.java:154) \r\n            at android.os.HandlerThread.run(HandlerThread.java:61) \r\n         Caused by: android.media.MediaCodec$CodecException: Error 0xfffffff4\r\n            at android.media.MediaCodec.native_configure(Native Method)\r\n            at android.media.MediaCodec.configure(MediaCodec.java:1884)\r\n            at com.google.android.exoplayer2.mediacodec.SynchronousMediaCodecAdapter.configure(SynchronousMediaCodecAdapter.java:61)\r\n            at com.google.android.exoplayer2.video.MediaCodecVideoRenderer.configureCodec(MediaCodecVideoRenderer.java:620)\r\n            at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.initCodec(MediaCodecRenderer.java:1110)\r\n            at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.maybeInitCodecWithFallback(MediaCodecRenderer.java:1011)\r\n            at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.maybeInitCodecOrBypass(MediaCodecRenderer.java:578) \r\n            at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.onInputFormatChanged(MediaCodecRenderer.java:1420) \r\n            at com.google.android.exoplayer2.video.MediaCodecVideoRenderer.onInputFormatChanged(MediaCodecVideoRenderer.java:694) \r\n            at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.readToFlagsOnlyBuffer(MediaCodecRenderer.java:965) \r\n            at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.render(MediaCodecRenderer.java:811) \r\n            at com.google.android.exoplayer2.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:948) \r\n            at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:478) \r\n            at android.os.Handler.dispatchMessage(Handler.java:98) \r\n            at android.os.Looper.loop(Looper.java:154) \r\n            at android.os.HandlerThread.run(HandlerThread.java:61) \r\n```",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8873/comments",
    "author": "ag2s20150909",
    "comments": [
      {
        "user": "kim-vde",
        "created_at": "2021-04-27T10:15:19Z",
        "body": "I suspect that the renderer is not capable of handling the video, which wouldn't be surprising as the resolution seems to be 4K. Indeed, the format printed in the logs (`format=Format(1, null, null, video/avc, avc1.640034, -1, null, [3840, 2024, 59.999996], [-1, -1])`) indicates that the video width is 3840 pixels and that its height is 2024 pixels.\r\n\r\n- Was it working with a previous version of ExoPlayer?\r\n- Does it play with MediaPlayer?\r\n- Could you send us a test content that reproduces the issue? If you're unable to share it publicly, please send it to dev.exoplayer@gmail.com using a subject in the format\r\n\"Issue #1234\" (\"#1234\" is replaced with your issue number). Please also update this issue to\r\nindicate you've done this."
      },
      {
        "user": "ag2s20150909",
        "created_at": "2021-04-27T11:44:43Z",
        "body": "> I suspect that the renderer is not capable of handling the video, which wouldn't be surprising as the resolution seems to be 4K. Indeed, the format printed in the logs (`format=Format(1, null, null, video/avc, avc1.640034, -1, null, [3840, 2024, 59.999996], [-1, -1])`) indicates that the video width is 3840 pixels and that its height is 2024 pixels.\r\n> \r\n> * Was it working with a previous version of ExoPlayer?\r\n> * Does it play with MediaPlayer?\r\n> * Could you send us a test content that reproduces the issue? If you're unable to share it publicly, please send it to [dev.exoplayer@gmail.com](mailto:dev.exoplayer@gmail.com) using a subject in the format\r\n>   \"Issue #1234\" (\"#1234\" is replaced with your issue number). Please also update this issue to\r\n>   indicate you've done this.\r\n\r\nI test on my new Android 10 devices,it work.Maybe  the cpu is too old."
      },
      {
        "user": "icbaker",
        "created_at": "2021-04-27T14:43:00Z",
        "body": "Content for this issue has been provided over email."
      },
      {
        "user": "kim-vde",
        "created_at": "2021-04-28T07:46:45Z",
        "body": "Thanks @icbaker.\r\n\r\nThe content provided also plays on my Pixel test device. The AVC decoders on your vivo device are probably unable to decode such a resolution.\r\n\r\nIf you want to be sure, you can debug and check what happens in `MediaCodecVideoRenderer.supportsFormat()` or in `MediaCodecRenderer.maybeInitCodecWithFallback()`."
      }
    ]
  },
  {
    "number": 8844,
    "title": "How to customize notification UI for download progress notification",
    "created_at": "2021-04-21T15:04:09Z",
    "closed_at": "2021-06-16T17:02:47Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8844",
    "body": "We are currently using com.google.android.exoplayer2.ui.DownloadNotificationHelper for displaying notifications during downloading a content through exoplayer.\r\n\r\nOur requirement is to customize the ui of the Progress notification(play/pause, cancel buttons etc.)\r\nAs the notificationBuilder is private and does not have a getter, we are unable to do this.\r\nNor are we able to extend the DownloadNotificationHelper class as it is final.\r\n\r\nIs there any way we can customize the progress notification?\r\n\r\nexo version used: 2.11.8",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8844/comments",
    "author": "logituitrel",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2021-04-26T12:54:13Z",
        "body": "When you are doing your own `DownloadService` you can override \r\n\r\n```\r\nprotected abstract Notification getForegroundNotification(List<Download> downloads);\r\n```\r\n\r\nyour implementation can use `DownloadNotificationHelper` as a helper internally, but if you want to customize the notification you can return whatever `Notification` you build yourself. "
      },
      {
        "user": "marcbaechinger",
        "created_at": "2021-06-16T17:02:47Z",
        "body": "Closing due to inactivity."
      }
    ]
  },
  {
    "number": 8833,
    "title": "Equivalent callback for onTimelineChanged with reason TIMELINE_CHANGE_REASON_PREPARED, on versiosn 2.12+",
    "created_at": "2021-04-20T10:32:13Z",
    "closed_at": "2021-04-29T08:37:46Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8833",
    "body": "Hi,\r\n\r\nOn my project, when playing a live stream, i need to make a seek to a specific time of the day, when starting playing a new stream. \r\nTo do that, on ExoPlayer 2.11.x i relied the callback for `onTimelineChanged `with reason `TIMELINE_CHANGE_REASON_PREPARED`. \r\nWhen that callback was called, i could get the media duration, and with the offset from the currentTime, calculate the position to pass to the `seekTo `method (`player.duration - System.currentTime - timeOfTheDayToSeekTo`).\r\n\r\nAfter version 2.12.0, `TIMELINE_CHANGE_REASON_PREPARED `was removed, and when the callback is called with reason `TIMELINE_CHANGE_REASON_PLAYLIST_CHANGED`, the player duration still undefined.\r\n\r\nI could rely on the callback being called with `TIMELINE_CHANGE_REASON_SOURCE_UPDATE`, but since that is called multiple times, i need to make extra checks to be sure i only make the seek on the first call after the media is changed, and the `timeOfTheDayToSeekTo `is set.\r\n\r\n\r\nMy question is:\r\nOn versions 2.12.+ is there any equivalent callback to `onTimelineChanged`, with reason `TIMELINE_CHANGE_REASON_PREPARED `on 2.11.x (Only called once, before the first the first frame is rendered, and after the media duration is known) ? \r\n\r\nIs there any way make a relative seek, like seek to 30000ms before the live edge/default position (something like seekTo(-30000) so i can set the seek position right after calling prepare without knowing the media duration?\r\n\r\nThanks in advance",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8833/comments",
    "author": "jrocharodrigues",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2021-04-21T13:50:27Z",
        "body": "For 2.12. the equivalent is the first call with `TIMELINE_CHANGE_REASON_SOURCE_UPDATE` like you mention. For non-live sources this commonly is called only once. To answer your question, there is no alternative that is called only once for live streams I'm afraid.\r\n\r\nFor the second question you may want to use the extended live support we added with 2.13 where you can set the target offset from the live edge. So you could calculate the offset for the time to which you want to seek \r\n\r\n```\r\nMediaItem mediaItem = new MediaItem.Builder()\r\n        .setUri(uri)\r\n        .setLiveTargetOffsetMs(10 * 60_000)\r\n        .build();\r\n```\r\n\r\nYou probably want to look into issue #8218 that is about a similar topic for HLS, there is a proposal for adding a new property (not HLS specific) to the live configuration that lets you set the requested live unix start time. I think that would be most precisely what you want. Please drop a comment of interest in that issue if that would be something you'd like to have in a future release.\r\n\r\n```\r\nMediaItem mediaItem = new MediaItem.Builder()\r\n        .setUri(uri)\r\n        .setRequestedLiveUnixStartTimeMs(unixStartTimeMs)\r\n        .build();\r\n```"
      },
      {
        "user": "jrocharodrigues",
        "created_at": "2021-04-21T14:40:02Z",
        "body": "Hi, thanks for your answer.\r\n\r\nFor now i'll use you suggestion:\r\n`MediaItem mediaItem = new MediaItem.Builder()\r\n        .setUri(uri)\r\n        .setLiveTargetOffsetMs(10 * 60_000)\r\n        .build();`\r\n\r\nAs for the new property `setRequestedLiveUnixStartTimeMs` tracked on #8218  , i think it's a good idea, i'll drop a comment suggesting it to be implmented also for Dash.\r\n\r\nbest regards"
      }
    ]
  },
  {
    "number": 8820,
    "title": "What is best approach to block out current program and play some clear content.",
    "created_at": "2021-04-16T07:08:34Z",
    "closed_at": "2021-04-16T12:19:54Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8820",
    "body": "My application plays only Live content(DASH+Widevine) but because of business rules some of regions we should not allow to play some of programs. So the recommended approach is to play some other content in that particular time slot for that region.\r\n\r\n**Given context:** I am playing particular channel and the specified block out interval is 6PM to 7PM so with in this 1hour window i should play some other content(clear content mpd) \r\n\r\n**Question 1:** \r\nWhat is best approach to swap the main content Vs block out content(clear content) in the given block out interval.\r\n\r\n**Question 2:**\r\nWe support dvrWindow of 6 hours(timeShiftBuffer) so user can rewind until 6 hours so when user playing black out content(6pm to 7pm) if he rewinds it say 4pm then i should fall back to main content and if the user forward to 6pm to 7pm time window again i need switch to black out content.\r\n\r\nNote: main content mpd and black out content mpd are different.\r\n\r\nRequesting your thoughts on this.\r\n\r\nThanks in advance.\r\n ",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8820/comments",
    "author": "spakanati123",
    "comments": [
      {
        "user": "AquilesCanta",
        "created_at": "2021-04-16T10:56:16Z",
        "body": "For security reasons this doesn't seem something that should be solved client side (and therefor ExoPlayer). Are your 6 hours of content served as a single DASH manifest? Couldn't the server just offer the alternative content for the blocked-out interval in the manifest?\r\n\r\nAside, I don't think the ExoPlayer issue tracker is the right place to ask this, probably a forum or a general Q&A site would be a better place to ask this. Can you clarify how this question relates to ExoPlayer?"
      },
      {
        "user": "spakanati123",
        "created_at": "2021-04-16T12:19:54Z",
        "body": "@AquilesCanta you are right. This should be served from server side but because of challenges currently from server side we decided to address on client side as a temporary solution. \r\nLike you said it is single dash manifest for six hours of content."
      },
      {
        "user": "AquilesCanta",
        "created_at": "2021-04-16T16:51:05Z",
        "body": "Sorry I can't be of more assistance. As a pointer for experimenting with client-side, you could solve this at manifest parsing level, where you create a parser that merges both manifest by picking the parts (are you using periods?) it wants from each manifest (from the main content up to 6 pm, from the alternative manifest 6-7 pm and back to the main manifest). Then you could potentially impose security restrictions on the segment serving only. That might work, but I'm just brainstorming based on the little info I have. Hope you manage to fix this soon."
      },
      {
        "user": "linhai326",
        "created_at": "2021-04-16T17:06:17Z",
        "body": "From my experience, this blackout feature should be implemented outside of exoplayer. \r\nThere should be a business layer over exoplayer to apply the business logics like this one.\r\n"
      }
    ]
  },
  {
    "number": 8813,
    "title": "Generating Relation Between Offline License and Downloaded Content",
    "created_at": "2021-04-12T23:49:48Z",
    "closed_at": "2021-04-13T11:06:26Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8813",
    "body": "Hi,\r\n\r\nI am trying to understand how to create the downloaded license's keySetId and downloaded track. Normally If I am on the latest release that's not an issue. Because we can create a relation between keySetId and download request during the request generation. But since I am on 2.11.4 (due to some other dependencies in the project) I can not find a way to create the relation. \r\n\r\nShould I save the keyset id with the related content id in local storage or some place like that ? Or is there a supportive utility that can manage the keysetId and content relation ? ",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8813/comments",
    "author": "olgunkaya",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2021-04-13T11:06:26Z",
        "body": "`DownloadRequest.data` is available in 2.11.4, and can be used to hold arbitrary application defined data. So you can use that. Note that if you're serializing multiple pieces of data into that field, it's your responsibility to handle versioning and compatibility of the data across different versions of your application.\r\n\r\nAs you've noted, you can also persist the mapping with your own application code."
      },
      {
        "user": "olgunkaya",
        "created_at": "2021-04-13T14:21:12Z",
        "body": "Thanks @ojw28, I was using that field to hold metadata like title etc.. But, now I will add my piece of keySetId array there too. "
      }
    ]
  },
  {
    "number": 8799,
    "title": "How to download video hls with different quality without use DownloadHelper?",
    "created_at": "2021-04-06T10:34:26Z",
    "closed_at": "2021-04-06T15:38:14Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8799",
    "body": "",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8799/comments",
    "author": "Pisey-Nguon",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2021-04-06T15:38:14Z",
        "body": "As with your other issues, it's unclear what your question is here. `DownloadHelper` is specifically for this purpose, so if you want to do this, why would you not use the class that's intended for this purpose? If you want to use something else, you'll need to replicate the same logic that `DownloadHelper` implements yourself. You can look at the source code to see exactly what it's doing internally.\r\n\r\nAs a general point, please don't file one sentence issues. It's very unlikely they contain sufficient information for us to provide a helpful response."
      }
    ]
  },
  {
    "number": 8788,
    "title": "How can I download multiple videos HLS like youtube?",
    "created_at": "2021-04-02T10:24:05Z",
    "closed_at": "2021-04-06T15:34:37Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8788",
    "body": "I have use this method to download video\r\n  downloadManager?.addDownload(downloadRequest)\r\nthen I use it with other downloadRequest but It always downloads without waiting for the first download completed.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8788/comments",
    "author": "Pisey-Nguon",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2021-04-06T15:34:37Z",
        "body": "It's unclear exactly what your question is, but if you want to restrict `DownloadManager` to downloading one item at a time then you can call `DownloadManager.setMaxParallelDownloads(1)`."
      }
    ]
  },
  {
    "number": 8775,
    "title": "add MediaSourceListener using DataSource.Factory ",
    "created_at": "2021-03-29T13:47:23Z",
    "closed_at": "2021-03-31T08:42:47Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8775",
    "body": "Hi, since i've migrated to MediaSourceFactory pattern, how can i add a MediaSourceListener if i can't access MediaSource?\r\n\r\ni was able to add listener using the mediaSource.addEventListener(handler, listener) methon and then, prepare the player passing the mediasource: player.prepare(MediaSource mediaSource, boolean resetPosition, boolean resetState)\r\n\r\nBut now, building the player like this, i can't figure out how to listen the mediasource events\r\n```\r\nSimpleExoPlayer player = new SimpleExoPlayer.Builder(context)\r\n    .setMediaSourceFactory(mediaSourceFactory)\r\n    .build();\r\n```\r\n\r\nThank you",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8775/comments",
    "author": "GrilloLuca",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2021-03-30T09:27:26Z",
        "body": "Can you instead use the `AnalyticsListener` that you can add globally to `SimpleExoPlayer`? The events from the `MediaSourceEventListener` are delegated to the `AnalyticsListener`.\r\n\r\n```\r\nSimpleExoPlayer player = new SimpleExoPlayer.Builder(context)\r\n    .setMediaSourceFactory(mediaSourceFactory)\r\n    .build();\r\n\r\nplayer.addAnalyticsListener(new MyAnalyticsListener() {\r\n    public void onLoadStarted(\r\n      EventTime eventTime, LoadEventInfo loadEventInfo, MediaLoadData mediaLoadData) {\r\n          // your implementation\r\n     }\r\n})'\r\n```"
      },
      {
        "user": "GrilloLuca",
        "created_at": "2021-03-31T08:42:39Z",
        "body": "> Can you instead use the `AnalyticsListener` that you can add globally to `SimpleExoPlayer`? The events from the `MediaSourceEventListener` are delegated to the `AnalyticsListener`.\r\n> \r\n> ```\r\n> SimpleExoPlayer player = new SimpleExoPlayer.Builder(context)\r\n>     .setMediaSourceFactory(mediaSourceFactory)\r\n>     .build();\r\n> \r\n> player.addAnalyticsListener(new MyAnalyticsListener() {\r\n>     public void onLoadStarted(\r\n>       EventTime eventTime, LoadEventInfo loadEventInfo, MediaLoadData mediaLoadData) {\r\n>           // your implementation\r\n>      }\r\n> })'\r\n> ```\r\n\r\nthank you, it worked !"
      }
    ]
  },
  {
    "number": 8769,
    "title": "How to enableDecoderFallback for ExoPlayerFactory.newSimpleInstance() ?",
    "created_at": "2021-03-29T06:47:22Z",
    "closed_at": "2021-04-01T16:29:45Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8769",
    "body": "Let's say there is an app which uses two third-party media players each one internally implemented using ExoPlayer.\r\nLet's refer to the first player as the \"main\" and the second one as \"aux\".\r\n\r\nThe main player plays content and when the user pauses playback it the application starts the \"aux\" player.\r\nThe aux player plays some special \"pause\" content.\r\n\r\nWhen we were using this scenario with ExoPlayer 2.9.4 this worked with a caveat that the aux player was using the software video decoder while the main player was holding on to the hardware video decoder (it is just paused and not stopped or released). \r\n\r\nWhen we switched to ExoPlayer 2.12.3 this stopped working -- the \"aux\" player now fails with an exception that it cannot allocate the _hardware_ video decoder.\r\n\r\nIn ExoPlayer 2.12.3 there is a way to enable decoder fallback, when it is enabled the behavior is similar to what we used to have with 2.9.4.\r\nThe problem however is that \"aux\" player is using ExoPlayerFactory.newSimpleInstance() and there is no way to enable decoder fallback from this level of API (and decoder fallback is disabled by default).\r\n\r\nDo you have any recommendation on how to work around this issue (without asking the \"main\" player vendor to change the player behavior significantly during pause or asking the \"aux\" player vendor to use different API level for ExoPlayer)?\r\n\r\nAny plans to allow enableDecoderFallback with ExoPlayerFactory.newSimpleInstance() ?\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8769/comments",
    "author": "sruditsky",
    "comments": [
      {
        "user": "lcf87",
        "created_at": "2021-03-29T13:28:05Z",
        "body": "I don't think supporting `enableDecoderFallback` in `newSimpleInstance` is on our agenda. If you don't have direct influence on the implementations on the two players you are using, I doubt there's a \"workaround\" to enabling that. \r\n\r\nOlly, could you confirm?"
      },
      {
        "user": "ojw28",
        "created_at": "2021-04-01T16:29:45Z",
        "body": "I'm not sure exactly what was in `2.12.3`, but certainly from `2.13.0` you can do:\r\n\r\n```\r\nDefaultRenderersFactory renderersFactory =\r\n    new DefaultRenderersFactory(this).setEnableDecoderFallback(true);\r\nSimpleExoPlayer player =\r\n    new SimpleExoPlayer.Builder(/* context= */ this, renderersFactory)\r\n        ...\r\n        .build();\r\n```"
      },
      {
        "user": "sruditsky",
        "created_at": "2021-04-02T14:31:42Z",
        "body": "Oh, yeah, this should work.\r\nThanks!"
      }
    ]
  },
  {
    "number": 8750,
    "title": "How to get whole track selection text as string",
    "created_at": "2021-03-23T15:12:54Z",
    "closed_at": "2021-03-24T11:15:09Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8750",
    "body": "I know we can get the cue text by `Objects.requireNonNull(exoPlayer.getTextComponent()).getCurrentCues().get(0).text` but how to get the whole subtitle file as a string for a specific text track selection?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8750/comments",
    "author": "aliyazdi75",
    "comments": [
      {
        "user": "icbaker",
        "created_at": "2021-03-23T18:37:49Z",
        "body": "ExoPlayer's subtitle infrastructure is designed to make cues available as their playback position is reached (so that they can be shown on the screen) - you can access this by registering a `TextOutput` implementation via `SimpleExoPlayer#addTextOutput`. Note that, depending on the format, cues aren't necessarily textual - they can also be images. So it's not possible in the general case to represent a Cue in a human-readable text form.\r\n\r\nI'm not sure quite what you mean by this though:\r\n> how to get the whole subtitle file as a string for a specific text track selection?\r\n\r\nI assume that either you start off with the subtitles in a separate file already (like `something.vtt`, `something.srt`, `something.ass`, etc) or the subtitles are multiplexed inside a container format like MP4. In the former case it seems your question is trivially answered: just use the text file you're already providing to ExoPlayer. In the latter case, where the subtitles are muxed inside a container, you don't need to use ExoPlayer to extract them, you're probably best off using a tool like ffmpeg instead. The same caveat about image subtitles applies - depending on the subtitle format you may not be able to easily generate a textual representation."
      },
      {
        "user": "aliyazdi75",
        "created_at": "2021-03-23T20:31:17Z",
        "body": "Oh, thanks.\r\nYes, we are using the Flutter framework and video player plugin which uses exoplayer as backed,\r\nand we need to get the `srt` subtitle text file inside a container format and represent it as a widget in the flutter application.\r\nSo, as you mentioned there is no class in the exoplayer that returns the whole `srt` text?\r\nAnd if not how to pass this multiplexed track selected subtitle to a tool like ffmpeg?"
      },
      {
        "user": "icbaker",
        "created_at": "2021-03-24T10:05:25Z",
        "body": "> So, as you mentioned there is no class in the exoplayer that returns the whole srt text?\r\n\r\nCorrect. When muxing subtitles into a container, the samples are generally split up throughout the file, so when playing we only read the samples slightly ahead of the playback position, meaning ExoPlayer never reads the whole content of the 'complete' srt file until playback is complete.\r\n\r\n> And if not how to pass this multiplexed track selected subtitle to a tool like ffmpeg?\r\n\r\nHow to use ffmpeg is outside the scope of this issue tracker - you may get more help somewhere like Stack Overflow.\r\n\r\nI would imagine you'd do something like pass the file to ffmpeg and extract all the subtitle tracks to srt files, then switch between these files by track ID by listening to ExoPlayer's `Player.EventListener#onTracksChanged()` event."
      },
      {
        "user": "aliyazdi75",
        "created_at": "2021-03-24T11:15:09Z",
        "body": "Thank you so much for your help."
      }
    ]
  },
  {
    "number": 8746,
    "title": "MostRecentlyUsedCacheEvictor?",
    "created_at": "2021-03-22T19:33:18Z",
    "closed_at": "2021-03-30T14:21:52Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8746",
    "body": "Hello,\r\n\r\nI am currently using the `LeastRecentlyUsedCacheEvictor` for our playback cache. Exoplayer currently does not provide an MRU cache as an alternative. I am wondering if an MRU cache would be most appropriate for audio playback applications. I would think we would want to prioritize caching content the user has not heard yet. Skipping back 10 - 30 seconds is a common use case, I think this would be un affected in most situations because that skipping would occur on the chunk that the user is currently listening to. \r\n\r\nIs a MRU cache a better choice for audio than a LRU cache?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8746/comments",
    "author": "NathanSass",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2021-03-22T20:30:24Z",
        "body": "Writing something into the cache counts as using it, so I don't think a `MostRecentlyUsedCacheEvictor` would make sense. It would end up trying to evict content immediately after it's been written.\r\n\r\nI would generally expect a cache to be significantly bigger than a single piece of audio content, so I'm not sure the way you're thinking about it, which seems to be considering playback through a single piece of content, is necessarily the right one."
      }
    ]
  },
  {
    "number": 8735,
    "title": "OMX-VDEC-1080P is reported while playing 4K video",
    "created_at": "2021-03-19T03:43:39Z",
    "closed_at": "2021-03-19T12:24:04Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8735",
    "body": "Logcat log info which contains TAG OMX-VDEC-1080P while playing 4K video.\r\n\r\nSample:\r\n\"2021-03-19 11:06:26.303 838-6455/? E/OMX-VDEC-1080P: [Vidc_PNP]video playback fps:22\"\r\n\r\nWhy is it always 1080P decoder TAG?\r\nIs there something wrong with the configuration?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8735/comments",
    "author": "whatisor",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2021-03-19T12:24:04Z",
        "body": "I'm pretty sure this logging is there for legacy reasons and is expected regardless of the input resolution. It doesn't imply there is anything wrong with the configuration and you can ignore it."
      }
    ]
  },
  {
    "number": 8729,
    "title": "Drop frame during rendering",
    "created_at": "2021-03-17T05:24:04Z",
    "closed_at": "2021-03-23T12:39:04Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8729",
    "body": "I am using ExoPlayer for playback in our application. I am facing an issue when rendering pipeline takes more time while applying effects which leads to frame drop. \r\nIf the frame is rendering the \"onFrameAvailable\" method is not called for the second frame.\r\nI need a suggestion here, what is an ideal way to handle dropped frame in case rendering is taking more time than expected during playback.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8729/comments",
    "author": "miniesahni1",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2021-03-17T11:26:34Z",
        "body": "Does the information in #7439 help?"
      },
      {
        "user": "andrewlewis",
        "created_at": "2021-03-23T12:39:04Z",
        "body": "Closing on the assumption that the information in #7439 addressed the problem."
      }
    ]
  },
  {
    "number": 8724,
    "title": "How can I seek to the end of VOD content?",
    "created_at": "2021-03-16T13:41:12Z",
    "closed_at": "2021-03-23T09:22:02Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8724",
    "body": "I'm implementing an app which plays VOD content, and one of requirement is to seek to the end of content for skipping advertisement based on user configuration.\r\n\r\nThis can be done very easily using **seek** API on exoplayer on the exoplayer version 2.9.4 which I'm currently using on my app.\r\nHowever, I'm working on upgrading exoplayer version to 2.12.3, and I encountered issue on this version.\r\n\r\nI could see seeking to end of content does not move playhead position to end of content directly. Instead, seek position was `end position of content - 1`\r\nThis can be checked by below source code.\r\n```\r\nIn the code ExoPlayerImplInternal.seekToPeriodPosition\r\n\r\n        if (newPlayingPeriodHolder.info.durationUs != C.TIME_UNSET\r\n            && periodPositionUs >= newPlayingPeriodHolder.info.durationUs) {\r\n          // Make sure seek position doesn't exceed period duration.\r\n          periodPositionUs = max(0, newPlayingPeriodHolder.info.durationUs - 1);\r\n        }\r\n```\r\nAbove code says seeking position is adjusted by minus 1 when seeks to the end of content.\r\nI checked this logic has been added from the version 2.10\r\n\r\nIs there any way to seek to end of content directly without adjustment?\r\nIt looks this code was added to avoid seeking to the position exceeds end of content, but why there is minus 1?\r\n ",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8724/comments",
    "author": "josraigreen",
    "comments": [
      {
        "user": "AquilesCanta",
        "created_at": "2021-03-17T12:18:07Z",
        "body": "Hi @tonihei, mind taking a look at this as part of [Internal ref: cl/300133655]?"
      },
      {
        "user": "tonihei",
        "created_at": "2021-03-17T13:48:18Z",
        "body": "If media is played in a playlist, the position at `mediaStartTimeUs + mediaDurationUs` already corresponds to position `0` in the next item in a playlist. So the last possible timestamp in the current media item is `mediaStartTimeUs + mediaDurationUs - 1`. \r\n\r\nPractically speaking, this `-1` shouldn't make a difference at all because there shouldn't be any samples in the media with a timestamps `>= durationUs`. And thus seeking to `durationUs` or `durationUs-1` should always show the last frame of the video. \r\n\r\nCould you describe in more detail what you are seeing and what you expect to see?"
      },
      {
        "user": "josraigreen",
        "created_at": "2021-03-22T18:40:45Z",
        "body": "Sorry for very late response.\r\n\r\nI have custom scheduler to check the current playhead position every 250 mili-seconds.\r\nMain task for this schedular is to skip advert session. Problem happens with processing post roll.\r\nIn general, post roll starts from 15 ~ 30 seconds from the real end of the content.\r\n\r\nWhen I seek to the end, seeking request looks taking time (a few seconds). \r\nDuring this time, \r\n\r\n> Playback position from the exoplayer points real end minus 1.\r\n> Custom schedular reports current position to advert provider\r\n> Advert provider triggers advert session events (start and other relevant callbacks)\r\n\r\nLast week, I spent time to update custom schedular, and schedular does not report playhead position to advert provider when there is a seek request to the end.\r\n\r\nI think we can close this ticket.\r\nThanks.\r\n"
      }
    ]
  },
  {
    "number": 8712,
    "title": "2.13.2 no call to AnalyticsListener.onAudioSessionIdChanged",
    "created_at": "2021-03-14T08:12:05Z",
    "closed_at": "2021-03-14T12:05:50Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8712",
    "body": "- ExoPlayer version number: 2.13.2 (using demo project)\r\n- Android version: 11\r\n- Android device: Xiaomi Mi A2\r\n\r\nUsing your demo project.\r\nPlaying: Misc -> Google Play (MP3)\r\n\r\nExpected behavior:\r\n - AnalyticsListener.onAudioSessionIdChanged should be called when playing audio stream\r\n\r\nCurrent behavior:\r\n - No call to AnalyticsListener.onAudioSessionIdChanged \r\n\r\nOccurance rate:\r\n - 100%\r\n\r\nCurrent workaround:\r\n - Call ExoPlayer.getAudioSessionId() when receiving AnalyticsListener.onAudioInputFormatChanged\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8712/comments",
    "author": "AndreasVogelfrei",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2021-03-14T12:05:50Z",
        "body": "This is a deliberate change in behavior, as outlined in the 2.13.0 release notes:\r\n\r\n> Audio:\r\n> * Fix handling of audio session IDs (#8190). SimpleExoPlayer now generates an audio session ID on construction, which can be immediately queried by calling SimpleExoPlayer.getAudioSessionId. The audio session ID will only change if application code calls SimpleExoPlayer.setAudioSessionId.\r\n> * Replace onAudioSessionId with onAudioSessionIdChanged in AudioListener and AnalyticsListener. Note that onAudioSessionIdChanged is called in fewer cases than onAudioSessionId was called, due to the improved handling of audio session IDs as described above.\r\n\r\nIn short, unless you change the session ID yourself, it will not change. You can query it immediately after building the player using `getAudioSessionId`."
      }
    ]
  },
  {
    "number": 8695,
    "title": "General Drm error while attempt to play DASH + Widevine",
    "created_at": "2021-03-09T18:15:35Z",
    "closed_at": "2021-03-11T08:17:27Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8695",
    "body": "I am experiencing the following issue when trying to play content with Dash and Widevine.\r\nThe exception it is raised in this line of code:\r\n\r\n```\r\n  mediaDrm.provideKeyResponse(sessionId, (byte[]) response);\r\n```\r\n\r\n```\r\nE/MediaDrm-JNI: Illegal state exception: Failed to handle key response: General DRM error (-2000)\r\nE/ExoPlayerImplInternal: Playback error\r\n      com.google.android.exoplayer2.ExoPlaybackException: Source error\r\n        at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:579)\r\n        at android.os.Handler.dispatchMessage(Handler.java:103)\r\n        at android.os.Looper.loop(Looper.java:214)\r\n        at android.os.HandlerThread.run(HandlerThread.java:67)\r\n     Caused by: com.google.android.exoplayer2.drm.DrmSession$DrmSessionException: android.media.MediaDrm$MediaDrmStateException: Failed to handle key response: General DRM error\r\n        at com.google.android.exoplayer2.drm.DefaultDrmSession.onError(DefaultDrmSession.java:524)\r\n        at com.google.android.exoplayer2.drm.DefaultDrmSession.onKeysError(DefaultDrmSession.java:519)\r\n        at com.google.android.exoplayer2.drm.DefaultDrmSession.onKeyResponse(DefaultDrmSession.java:504)\r\n        at com.google.android.exoplayer2.drm.DefaultDrmSession.access$100(DefaultDrmSession.java:58)\r\n        at com.google.android.exoplayer2.drm.DefaultDrmSession$ResponseHandler.handleMessage(DefaultDrmSession.java:563)\r\n        at android.os.Handler.dispatchMessage(Handler.java:107)\r\n        at android.os.Looper.loop(Looper.java:214) \r\n        at android.os.HandlerThread.run(HandlerThread.java:67) \r\n     Caused by: android.media.MediaDrm$MediaDrmStateException: Failed to handle key response: General DRM error\r\n        at android.media.MediaDrm.provideKeyResponse(Native Method)\r\n        at com.google.android.exoplayer2.drm.FrameworkMediaDrm.provideKeyResponse(FrameworkMediaDrm.java:228)\r\n        at com.google.android.exoplayer2.drm.DefaultDrmSession.onKeyResponse(DefaultDrmSession.java:492)\r\n        at com.google.android.exoplayer2.drm.DefaultDrmSession.access$100(DefaultDrmSession.java:58) \r\n        at com.google.android.exoplayer2.drm.DefaultDrmSession$ResponseHandler.handleMessage(DefaultDrmSession.java:563) \r\n        at android.os.Handler.dispatchMessage(Handler.java:107) \r\n        at android.os.Looper.loop(Looper.java:214) \r\n        at android.os.HandlerThread.run(HandlerThread.java:67) \r\n```\r\n\r\n The license seems to be acquired correctly but for some reason the MediaDrm is failing to process it.\r\n \r\nAlready visited and investigated all similar issues.\r\n\r\nMore information dropped to dev.exoplayer@gmail.com.\r\n    ",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8695/comments",
    "author": "aSLmolly",
    "comments": [
      {
        "user": "icbaker",
        "created_at": "2021-03-09T18:27:11Z",
        "body": "@rrfrias Can you take a look? It looks like the Widevine CDM didn't like the provided response:\r\n\r\n```\r\nI WVCdm   : [cdm_engine.cpp(327):AddKey] CdmEngine::AddKey: sid3\r\nE WVCdm   : [license.cpp(934):ExtractProviderSessionToken] CdmLicense::ExtractProviderSessionToken: unable to parse signed license response\r\nE WVCdm   : [license.cpp(529):HandleKeyResponse] CdmLicense::HandleKeyResponse: unable to parse signed license response\r\nE WVCdm   : [cdm_engine.cpp(400):AddKey] CdmEngine::AddKey: keys not added, result = 70\r\nW WVCdm   : Returns UNKNOWN error for legacy status: 70\r\nW WVCdm   : Returns UNKNOWN error for legacy status: 70\r\n```"
      },
      {
        "user": "AbdoulMDiscovery",
        "created_at": "2021-03-17T09:00:10Z",
        "body": "@aSLmolly were you able to solve this issue? I am currently facing the same issue."
      },
      {
        "user": "rrfrias",
        "created_at": "2021-03-18T10:38:46Z",
        "body": "@AbdoulMDiscovery you can send a bugreport to dev.exoplayer@gmail.com to have us investigate. It might be better to create a separate issue."
      }
    ]
  },
  {
    "number": 8692,
    "title": "About Exo name question",
    "created_at": "2021-03-09T07:37:38Z",
    "closed_at": "2021-03-10T14:07:30Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8692",
    "body": "Why is it called Exo and what is the meaning of Exo?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8692/comments",
    "author": "zhichuanhuang",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2021-03-10T14:07:30Z",
        "body": "It was named ExoPlayer due to some (very tangential) similarities between ExoPlayer and some aspects of Exokernel architecture. I wouldn't read anything into this though. At this point it's just a name :)."
      }
    ]
  },
  {
    "number": 8681,
    "title": "Cache that uses only one file",
    "created_at": "2021-03-06T17:15:29Z",
    "closed_at": "2021-04-01T12:15:57Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8681",
    "body": "I am developing a video editor app. We have functionality to present remote audio library.\r\n\r\nWhen user plays tracks they get cached. Ok, exoPlayer does a good job here.\r\n\r\nThen we have an option to take the track and use it later as audio for video rendering. For adding audio to a video first the audio should be local (I use MediaExtractor). \r\n\r\nUnfortunately, exoPlayer cache works by creating many files. Is it possible to cache audio only to one file so it can be read later for encoding/decoding as a part of video?\r\n\r\nRight now the only solution is to redownload the audio as a whole file, but it is weird to do so.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8681/comments",
    "author": "krottv",
    "comments": [
      {
        "user": "krocard",
        "created_at": "2021-03-08T15:20:25Z",
        "body": "@marcbaechinger Is there an easy way to recover the cache media without playing it to be consumed by a third-party audio library?"
      },
      {
        "user": "marcbaechinger",
        "created_at": "2021-03-08T16:54:07Z",
        "body": "If the file is completely in the cache, I think it should be possible to create a `CacheDataSource` with the cache and then use the API of `DataSource` to read from it. The `CacheDataSource` finds everything in the cache and returns the byte until the end of the input is reached. I haven't tried but this is what the player does as well I think."
      },
      {
        "user": "marcbaechinger",
        "created_at": "2021-03-08T17:43:27Z",
        "body": "A user just added some code that reads from a CachedDataSource. In that case the stream is not yet completely downloaded but for the use case here, when we are sure that everything is downloaded already, this should work the same without accessing the upstream data source. \r\n\r\nPlease see #8645"
      }
    ]
  },
  {
    "number": 8667,
    "title": "How to change playback frame rate?",
    "created_at": "2021-03-03T11:13:53Z",
    "closed_at": "2021-03-04T12:59:45Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8667",
    "body": "Suppose my video frame rate is 30 fps. But i want to play it at 5 fps. How can i achieve this?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8667/comments",
    "author": "ZeroOneZeroR",
    "comments": [
      {
        "user": "krocard",
        "created_at": "2021-03-03T13:07:37Z",
        "body": "@ZeroOneZeroR you have not filled the issue template. It seems you have only written the title of the issue.\r\nPlease provide more information regarding your question.\r\n\r\nIf your question is about playback speed, please take a look at `ExoPlayer.setPlaybackParameters`."
      },
      {
        "user": "ZeroOneZeroR",
        "created_at": "2021-03-03T19:39:41Z",
        "body": "Suppose my video frame rate is 30 fps. But i want to play it at 5 fps. It is not speed. It is frame rate. How can i achieve this?"
      },
      {
        "user": "krocard",
        "created_at": "2021-03-04T08:10:21Z",
        "body": "I'm not sure to understand. Do you want to play the video 6 time slower (30fps/6 = 5fps), then use `ExoPlayer.setPlaybackParameters` and pass a speed of 1/6=1.6667.\r\n\r\nIf you want to artificially drop 5/6 of the video frames, then I'm afraid ExoPlayer does not support such use case and we would like to understand better why you would want to do that."
      },
      {
        "user": "ZeroOneZeroR",
        "created_at": "2021-03-04T09:29:13Z",
        "body": "Yeah I want to drop frames. I want to let the users of my app to encode a video with lower frame rate. But before encoding, I want to show that on preview."
      },
      {
        "user": "krocard",
        "created_at": "2021-03-04T10:24:54Z",
        "body": "The easiest way would be for you to subclass `MediaCodecVideoRenderer`, overriding `processOutputBuffer`. Call the super method with isDecodeOnlyBuffer set to true 5/6 (or whatever other ratio) of the time. Make sure to forward buffers that are already decodeOnlyBuffer.\r\nPseudo Code:\r\n```\r\n@Override\r\nfun processOutputBuffer(..., decodeOnlyBuffer, ...)\r\n   if (decodeOnlyBuffer) return super.processOutputBuffer(decodeOnlyBuffer)\r\n\r\n   bool shouldDrop = this.outputBufferBeforeDownsamplingDropCount++ % 6 != 0; // drop 5/6 of frames\r\n   return super.processOutputBuffer(shouldDrop);\r\n```\r\nYou can inject you custom `DropMediaCodecVideoRenderer` by overriding `DefaultRenderersFactory.buildVideoRenderers`. Pass your custom RenderersFactory to the SimpleExoPlayer's Builder."
      },
      {
        "user": "ZeroOneZeroR",
        "created_at": "2021-03-04T11:46:16Z",
        "body": "Thanks. I will try this way."
      },
      {
        "user": "krocard",
        "created_at": "2021-03-04T12:59:45Z",
        "body": "Let us know how it went. Closing as the question has been answered."
      }
    ]
  },
  {
    "number": 8666,
    "title": "How to know which MediaSource caused ExoPlaybackException (on preloading the next track)?",
    "created_at": "2021-03-03T09:44:43Z",
    "closed_at": "2021-03-03T15:09:23Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8666",
    "body": "To handle `ExoPlaybackException` we must implement `EventListener.onPlayerError()`. If for example, we encounter a 403 HTTP error because the track's URL is expired,  we can catch it inside this function and take appropriate actions:\r\n- See which track caused 403 exception.\r\n- Check our application API to see if we have access to a new URL for the track.\r\n- Replace the corresponding MediaSource with a new one having a valid & fresh URL.\r\n- Play the new MediaSource.\r\n\r\nIt isn't clear how we can find which track caused the exception. Currently we are using `player.getCurrentWindowIndex()`. There is a new `mediaPeriodId` in the exception too, but I am not sure how to trace it back to `MediaSource`. Also I am not sure if either of `player.getCurrentWindowIndex()` or ` mediaPeriodId` leads me to the correct `MediaSource`, in case the media source was just preloaded and it is not actually the current playing media source.\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8666/comments",
    "author": "halaei",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2021-03-03T12:24:36Z",
        "body": "I think with the approach you are currently using, `player.getCurrentWindowIndex()` will return the window index that belongs to the media source that causes the exception (for my explanation I assume that you are not using `ConcatenatingMediaSource` but the top-level playlist API with a 1:1 relationship between media sources and windows). So in case of the playback error it is clear that the source from which the current window originated caused the exception, and you could do something like the following to recover:\r\n\r\n```\r\nMediaItem mediaItem = player.getCurrentMediaItem();\r\nint windowIndex = player.getCurrentWindowIndex();\r\nMediaItem fixedMediaItem = mediaItem.buildUpon().setUri(fixMyUri(mediaItem.playbackProperties.uri)).build();\r\nplayer.removeMediaItem(windowIndex);\r\nplayer.addMediaItem(windowIndex, fixedMediaItem);\r\nplayer.seekTo(windowIndex, C.TIME_UNSET);\r\nplayer.play();\r\nplayer.prepare();\r\n```\r\n\r\nThe reason why this works is that you get the `ExoPlayerPlaybackException` in `onPlayerError` late, namely when the player (that had a load error for the given medias source earlier) wants to start playback for the given window, but can't as no data is available. \r\n\r\nWhile this works, you probably want to get notified about this earlier, which is when you notice that a load error occurs when the player tries to buffer data ahead. In a playlist for which the player transitions to the next item without user interaction, this is when the player tries to load data ahead for the next window. Being aware of this, you could fix your media source ahead of time and possibly don't even run into the playback exception. I don't think I can give you a answer regarding an API that exactly matches this use case. You may want to look into a custom `LoadErrorHandlingPolicy` which gets notified early about such loading errors and can evaluate which url caused the exception. However, there is no API to correlated that properly to the media source that caused this load error though. The API of the `LoadErrorhandlingPolicy` is not designed for this purpose.\r\n\r\nAlso, if the player does not transition automatically to the next window, but instead the user skips to this window you will be late anyway, and encounter the `ExoPlayerPlaybackException` in `onPlayerError` as above. You probably may want to tweak the `LoadErrorHandlingPolicy` for this case to fail with a playback exception  quickly, but again, the API is not designed for this I think."
      },
      {
        "user": "tonihei",
        "created_at": "2021-03-03T13:37:35Z",
        "body": "Just to add to that:\r\nOne further alternative if you want to handle the case early is to listen to `AnalyticsListener.onLoadError` which has an `EventTime` parameter that tells you exactly which item the error is for. "
      },
      {
        "user": "halaei",
        "created_at": "2021-03-03T15:09:23Z",
        "body": "Thanks for your help.\r\nSo I can assume `onPlayerError()` is only called for the current track and they are delayed in case of preloading. Meanwhile I take a look at `LoadErrorhandlingPolicy` and `AnalyticsListener.onLoadError()` to see if I can handle the errors during the preload sooner, so that I can prevent lags.\r\nI hope I get it right."
      }
    ]
  },
  {
    "number": 8632,
    "title": "TextOutput onCues called multiple times with same cue text with segmented WebVTT subtitles",
    "created_at": "2021-02-25T10:47:10Z",
    "closed_at": "2021-02-25T11:12:39Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8632",
    "body": "Our stream provider recently changed the way the subtitles are segmented so that a subtitle segment length is the same as the video segment. So now one .vtt file contains subtitles for a 10 second period. Now there can be multiple subtitle segments that contain the same cue if the cue should be visible in 2 different segments.\r\n\r\nExample .vtt segments:\r\n**seg-38.vtt**\r\nWEBVTT\r\n\r\n28\r\n00:05:47.160 --> 00:05:50.000 \r\nThis line is repeated twice\r\n\r\n**seg-39.vtt**\r\nWEBVTT\r\n\r\n28\r\n00:05:47.160 --> 00:05:50.000 \r\nThis line is repeated twice\r\n\r\n29\r\n00:05:52.680 --> 00:05:54.320 \r\nSome other line that is fine\r\n\r\nThe issue with the onCues getting called twice with the same cue causes problems because we use the onCues callback to feed the cues to the Text-To-Speech engine and now users are complaining that they hear the same line twice. \r\n\r\nI was thinking that I could check if the subtitle number (28 in the example above) matches the previous cue's number and skip the duplicate one based on that but there seems to be no way to get that line number from the cue that's provided in the onCues method.\r\n\r\nDo you have any ideas for a workaround for this issue. At first I was thinking about storing the previous cue and checking if the next cue text matches the previous one and then skipping it if it matches but there may be cases where it is intended to have the same text repeat multiple times in a row so that won't really work. I would need to be able to compare the start/end times or subtitle numbers but those aren't provided to the method.\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8632/comments",
    "author": "jarnova",
    "comments": [
      {
        "user": "icbaker",
        "created_at": "2021-02-25T11:12:39Z",
        "body": "> At first I was thinking about storing the previous cue and checking if the next cue text matches the previous one and then skipping it if it matches but there may be cases where it is intended to have the same text repeat multiple times in a row so that won't really work.\r\n\r\nI think this will work actually, because of the way TextOutput uses an empty List<Cue> to indicate 'breaks' between subtitles.\r\n\r\nWhen seeing the subtitles on-screen, there's expected to be no visual difference between these call sequences:\r\n```\r\ntextOutput.onCues([\"cue 1\"]);\r\ntextOutput.onCues([]);\r\ntextOutput.onCues([\"cue 2\"]);\r\ntextOutput.onCues([]);\r\n```\r\n\r\n```\r\ntextOutput.onCues([\"cue 1\"]);\r\ntextOutput.onCues([]);\r\ntextOutput.onCues([\"cue 2\"]);\r\n// cue 2 is already shown on-screen, so showing it again is a no-op\r\ntextOutput.onCues([\"cue 2\"]);\r\ntextOutput.onCues([]);\r\n```\r\n\r\nIf you want your `TextOutput` implementation to mimic this behaviour then it seems the right thing to do is only 'speak' subtitles when they're different to the previous parameter.\r\n\r\nIf a content provider wants subtitle content to 'repeat' in a way that's visible to the viewer they're going to need to make it disappear and reappear (or change some other property e.g. position, color, etc). And these changes will be visible to your memoization implementation:\r\n```\r\ntextOutput.onCues([\"cue 1\"]);\r\ntextOutput.onCues([]);\r\ntextOutput.onCues([\"cue 1\"]);\r\n```\r\n\r\nNote that you'd still be making a lot of assumptions (which may be completely fine if you control the content, just want to call them out).\r\n\r\ne.g. some subtitles are 'typed' onto screen letter-by-letter and thus the call sequence ends up being something like this, which i imagine would upset your TTS engine:\r\n```\r\ntextOutput.onCues([\"c\"])\r\ntextOutput.onCues([\"cu\"])\r\ntextOutput.onCues([\"cue\"])\r\ntextOutput.onCues([\"cue \"])\r\ntextOutput.onCues([\"cue 1\"])\r\n```\r\n\r\nAnd similarly you probably don't want to re-speak subtitles when a second cue is added to the list (i.e. appears on-screen while the first cue stays visible). There the call sequence is something like:\r\n\r\n```\r\ntextOutput.onCues([\"cue 1\"])\r\n// Here you probably only want to say \"cue 2\"\r\ntextOutput.onCues([\"cue 1\", \"cue 2\"])\r\n```\r\n\r\nYou can probably solve the latter case by being careful about how you memoize the cues. The former case seems much harder to solve, it might be easier just to assume your content won't do that..."
      },
      {
        "user": "jarnova",
        "created_at": "2021-02-25T13:54:22Z",
        "body": "Thanks for the fast reply and explanation. Our subtitles are authored so that there is only one subtitle on screen at a time and they should be in a format that is readable by text-to-speech so there won't be those kind of cases that you mentioned in your examples.\r\n\r\nI didn't notice at first that the method will be called with an empty array when there is a change from one subtitle to another so this should actually work just fine in our case as long as there is at least a small gap in the timestamps."
      }
    ]
  },
  {
    "number": 8621,
    "title": "Why getSelectedIndex in FixedTrackSelection is returning 0",
    "created_at": "2021-02-22T18:15:34Z",
    "closed_at": "2021-04-01T12:21:48Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8621",
    "body": "Hi,\r\nIn my application, I try to get the selected audio track by getting the TrackSelection first and then looking for its selected index. I noticed I was always getting 0 from `trackSelection.getSelectedIndex()` and I found that this is hardcoded only for the `FixedTrackSelection` class and not for the `AdaptiveTrackSelection` class.\r\n\r\nIs there any particular reason for this? Is there another way to get the selected track?\r\n\r\nThanks!",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8621/comments",
    "author": "nandovelazquez",
    "comments": [
      {
        "user": "Samrobbo",
        "created_at": "2021-02-25T12:38:38Z",
        "body": "The `FixedTrackSelection` class javadoc states `A {@link TrackSelection} consisting of a single track.`. Therefore `getSelectedIndex()` for that track selection will always return 0, because that's the only track index it knows about. \r\n\r\nIf you give me some more information about what you're trying to do, I can try to assist more."
      },
      {
        "user": "ojw28",
        "created_at": "2021-02-25T13:46:12Z",
        "body": "`TrackSelection.getSelectedIndex` is not actually intended for application use. It's a method internal to the player that's used to control adaptive track selection. In `2.14` we'll be making it harder to access, for this reason.\r\n\r\nIf you want to query the selected track, use some combination of `TrackSelection.getFormat`, `TrackSelection.getTrackGroup`, `TrackSelection.getIndexInTrackGroup` and `TrackSelection.indexOf`."
      }
    ]
  },
  {
    "number": 8607,
    "title": "[Question] Previous button is going to the beginning of the stream instead of the previous item in the playlist",
    "created_at": "2021-02-19T08:37:10Z",
    "closed_at": "2021-02-19T10:48:44Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8607",
    "body": "I am using the exoplayer to play live streams in a playlist.\r\n\r\nThe previous button instead of going to the previous item in the playlist, it returns to the beginning of the stream of the current item.\r\n\r\nThis happens when I let it play the stream for few seconds then click on the previous button.\r\nIn that case, I need to click twice on the previous button to have it switch to the previous item in the playlist.\r\n\r\nWhat do I need to do in order to force the previous button to ignore the current item's live window and go to the previous item in the playlist?\r\n\r\nThanks",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8607/comments",
    "author": "amahouachi",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2021-02-19T10:17:16Z",
        "body": "This behaviour is defined by the `DefaultControlDispatcher`.  You can create a subclass of `DefaultControlDispatcher`, override `dispatchPrevious` and set the control dispatcher with `PlayerView.setControlDispatcher` or `StyledPlayerView.setControlDispatcher` respectively."
      },
      {
        "user": "amahouachi",
        "created_at": "2021-02-19T10:48:44Z",
        "body": "Works great thanks !\r\n\r\n```kotlin\r\nplayerView.setControlDispatcher(object : DefaultControlDispatcher() {\r\n          override fun dispatchPrevious(player: Player): Boolean {\r\n            player.seekTo(0)\r\n            return super.dispatchPrevious(player)\r\n          }\r\n        })\r\n```"
      }
    ]
  },
  {
    "number": 8584,
    "title": "Black Screen with hls video when integration with flutter",
    "created_at": "2021-02-13T09:44:13Z",
    "closed_at": "2021-09-08T16:02:38Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8584",
    "body": "Describe how the issue can be reproduced, ideally using the ExoPlayer demo app\r\nor a small sample app that you’re able to share as source code on GitHub. To\r\nincrease the chance of your issue getting attention, please also include:\r\n\r\n### Environment:\r\n\r\nAndroid Version 7.0\r\nHuawei device\r\nExoplayer: 2.13.1\r\nFlutter: 1.22.6\r\n\r\n### Description\r\nWhen I implement AndroidViewSurface with exoplayer, the playback works fine with audio but video is black. **However after I press home screen button and then resume the app, the black screen is gone and video works again.**\r\n\r\nFor Android version 9.0 and above, the issue is gone.\r\n\r\nSo I guess maybe it has something wrong with the player compatibility.\r\n\r\nIs there any hack solution for this, like just call some method on resume programmatically so that video works fine at first place.\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8584/comments",
    "author": "likeconan",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2021-02-16T11:25:52Z",
        "body": "Describe how the issue can be reproduced, ideally using the ExoPlayer demo app\r\nor a small sample app that you’re able to share as source code on GitHub.\r\n\r\nWe can't help you if this is a Flutter integration issue, but we are happy to look into the issue if it's due to the stream not working on ExoPlayer. For that purpose you should post the HLS uri so we can check what is going on. The information of your post above doesn't provide enough information for us to do something."
      },
      {
        "user": "likeconan",
        "created_at": "2021-02-16T12:52:53Z",
        "body": "I tried with ExoPlayer demo directly, this issue is not happened with Android 7.0, I will prepare a flutter example in github, please wait a moment. Thanks"
      },
      {
        "user": "marcbaechinger",
        "created_at": "2021-02-16T13:30:17Z",
        "body": "Thanks. If it works in the demo app we can probably not provide you with sufficient support I'm afraid. Best is probably to connect with the Flutter people.\r\n\r\nYou are saying that it happens related to be started/backgrounded/foregrounded so there is probably a problem with the integration rather than with ExoPlayer."
      },
      {
        "user": "likeconan",
        "created_at": "2021-02-17T00:20:55Z",
        "body": "Oh... However maybe you can guide me how to programmatically fire some function kind of like resume? So that the issue is fixed by hack solution. Thanks a lot~"
      },
      {
        "user": "ojw28",
        "created_at": "2021-09-08T16:02:38Z",
        "body": "Closing because this did not reproduce with the ExoPlayer demo app, and so sounds like a Flutter integration problem rather than a problem with ExoPlayer."
      }
    ]
  },
  {
    "number": 8553,
    "title": "Synchronization, sharing exoplayer buffer",
    "created_at": "2021-02-05T08:03:40Z",
    "closed_at": "2021-03-12T16:36:12Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8553",
    "body": "Hi all.\r\nI would like to implement synchronization between two players.\r\nScenario: Player A broadcasts information to Player B so they both play the content at the same time.\r\nI would like to know if it is possible to send part of the buffer (player A) to player B.\r\nFor this I would have to remove the buffer from player A, I have thought of trying to take the buffer from the cache since MediaCodecVideoRenderer only lets me access the video buffer.\r\nAny suggestion?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8553/comments",
    "author": "javaboboApp",
    "comments": [
      {
        "user": "icbaker",
        "created_at": "2021-02-05T09:46:14Z",
        "body": "The general goal you're describing sounds pretty complicated. It's not something officially supported by ExoPlayer.\r\n\r\n> I would like to know if it is possible to send part of the buffer (player A) to player B.\r\n> For this I would have to remove the buffer from player A, I have thought of trying to take the buffer from the cache since MediaCodecVideoRenderer only lets me access the video buffer.\r\n\r\nI'm not quite sure I understand exactly what you're proposing here. I'd urge you to avoid trying to make changes at the `Renderer` level, because there's a lot of complexity and subtlety in that code.\r\n\r\nFor us to be able to help you need to make your question much clearer & more specific. What parts of ExoPlayer aren't doing what you expect?\r\n\r\nFor a very general question you may find you get a better response on Stack Overflow.\r\n\r\n\r\n"
      },
      {
        "user": "javaboboApp",
        "created_at": "2021-02-06T22:05:36Z",
        "body": "Thanks for answering,\r\nWhat I would like to do is sync two players.\r\nImagine that we have a video that is playing on one device (mobile 1) and we are playing the same content on another mobile (mobile 2). What I want to achieve is that the two contents are reproduced at the same time. I have managed to do it by sending the master's position (for example mobile 1) to mobile 2.\r\n\r\nI would like to improve this approach by sharing the buffer or cache between the two devices. I would like to know if it is possible to do this or if there are other mechanisms to achieve this.\r\n\r\nScenario:\r\n\r\nPlayer A - get data from cache which is shared by player B - (it is the master). Player C reads data from the cache that is written by Player B. All players are installed on different devices on the same local network.\r\n\r\nNsd is used to find devices in the same local area.\r\nSocket is used to share information (current playback position, cache ...)."
      },
      {
        "user": "icbaker",
        "created_at": "2021-02-08T10:15:14Z",
        "body": "ExoPlayer's cache & download components don't support sharing the files between different devices on the same network."
      },
      {
        "user": "javaboboApp",
        "created_at": "2021-02-09T09:05:35Z",
        "body": "ok thanks for letting me know, but do you have any recommendation about what would be the best way to archive this... any code to have a look?"
      },
      {
        "user": "icbaker",
        "created_at": "2021-02-09T09:37:09Z",
        "body": "I'm afraid it's not something we've ever tried to do - so we don't have any sample code."
      },
      {
        "user": "icbaker",
        "created_at": "2021-03-12T16:36:12Z",
        "body": "Closing due to inactivity."
      }
    ]
  },
  {
    "number": 8536,
    "title": "Cache writer clarification?",
    "created_at": "2021-02-03T05:32:32Z",
    "closed_at": "2021-04-01T12:17:25Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8536",
    "body": "Hi,\r\n\r\nWhen we try multiple downloads using cache writer will process sequentially or parallelly?\r\nIt'll process like download manager right?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8536/comments",
    "author": "GobuTranxit",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2021-02-08T11:54:11Z",
        "body": "The `CacheWriter` does use a single `CacheDataSource`. If you call the `cache` method on it, it opens the source and reads from it to fulfill the `DataSpec` that is passed to it in the constructor. In that sense the `CacheWriter` does load a block of data from a data source sequentially. The loaded data is stored in the cache that is associated to the `CacheDataSource` from which the `CacheWriter` reads. \r\n\r\n> When we try multiple downloads using cache writer will process sequentially or parallelly?\r\n\r\nWhen you call the `cache` method on multiple `CacheWriter` instances without taking care that a former call returned before calling `cache` on the next writer instance, then it will process in parallel. It's up to the caller to coordinate this. The `CacheWriter` itself will just read from the data source.\r\n\r\n> It'll process like download manager right?\r\n\r\nI don't think you can compare `CacheWriter` with `DownloadManager`. The `DownloadManager` coordinates downloads and depending on how it is configured, it may download multiple downloads in parallel. This boils down to using the `CacheWriters` in parallel. That's more of an implementation detail though, as the `DownloadManager` itself uses instances of the `Downloader` (i.e. `ProgressiveDownloader` and `SegmentDownloader`) rather than directly dealing with 'CacheWriter' instances."
      }
    ]
  },
  {
    "number": 8519,
    "title": "How to find cache exist?",
    "created_at": "2021-01-29T07:18:39Z",
    "closed_at": "2021-04-01T16:21:28Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8519",
    "body": "I am using V2.12. **How can I find my file is cached or not?** \r\nKindly give me an instructions",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8519/comments",
    "author": "GobuTranxit",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2021-01-29T12:09:31Z",
        "body": "Given you know the size of the file, you can find whether a given byte range of the file is cache by using the `isCached` of the cache object you are using:\r\n\r\n```\r\n/**\r\n   * Returns whether the specified range of data in a resource is fully cached.\r\n   *\r\n   * @param key The cache key of the resource.\r\n   * @param position The starting position of the data in the resource.\r\n   * @param length The length of the data.\r\n   * @return true if the data is available in the Cache otherwise false;\r\n   */\r\n  boolean isCached(String key, long position, long length);\r\n```\r\nThe cache key is the uri or the key you specified for the file."
      }
    ]
  },
  {
    "number": 8509,
    "title": "MediaCodecVideoRenderer error, index=0, format=Format(1, null, null, video/avc, null, -1, null, [720, 1280, 29.969316], [-1, -1]), format_supported=YES",
    "created_at": "2021-01-26T08:51:15Z",
    "closed_at": "2021-01-26T10:59:11Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8509",
    "body": "To be honest, it is the first I use the ExoPlayer. And, a problem happened!\r\nwhen the SimpleExoPlayer.stop() invoked, I want the screen(the SurfaceView) is pur black color, So, I did this.\r\n\r\n      stopBtn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                simpleExoPlayer.stop(true);\r\n                simpleExoPlayer.clearVideoSurfaceHolder(surfaceView.getHolder());\r\n\r\n                SurfaceHolder holder = surfaceView.getHolder();\r\n                Canvas canvas = holder.lockCanvas();\r\n                canvas.drawColor(Color.BLACK);\r\n                holder.unlockCanvasAndPost(canvas);\r\n\r\n                simpleExoPlayer.setVideoSurfaceHolder(surfaceView.getHolder());\r\n            }\r\n        });\r\n        nextBtn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                MediaItem mediaItem = MediaItem.fromUri(getString(R.string.media_url_mp4));\r\n                simpleExoPlayer.setMediaItem(mediaItem);\r\n                simpleExoPlayer.prepare();\r\n            }\r\n        });` \r\nI click stop button, it running well.\r\nwhen I click the button what name is nextVideo, Yes，it is Error.\r\nGuys,please tell me WTF?\r\n\r\n`2021-01-26 16:22:37.780 E/SurfaceUtils: Failed to connect to surface 0x71e8f79010, err -22\r\n2021-01-26 16:22:37.780 E/MediaCodec: nativeWindowConnect returned an error: Invalid argument (-22)\r\n2021-01-26 16:22:37.780 E/MediaCodec: configure failed with err 0xffffffea, resetting...\r\n2021-01-26 16:22:37.788 I/OMXClient: IOmx service obtained\r\n2021-01-26 16:22:37.816 W/MediaCodecRenderer: Failed to initialize decoder: OMX.qcom.video.decoder.avc\r\n      java.lang.IllegalArgumentException\r\n        at android.media.MediaCodec.native_configure(Native Method)\r\n        at android.media.MediaCodec.configure(MediaCodec.java:2023)\r\n        at android.media.MediaCodec.configure(MediaCodec.java:1951)\r\n        at com.google.android.exoplayer2.mediacodec.SynchronousMediaCodecAdapter.configure(SynchronousMediaCodecAdapter.java:43)\r\n        at com.google.android.exoplayer2.video.MediaCodecVideoRenderer.configureCodec(MediaCodecVideoRenderer.java:580)\r\n        at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.initCodec(MediaCodecRenderer.java:1143)\r\n        at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.maybeInitCodecWithFallback(MediaCodecRenderer.java:1040)\r\n        at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.maybeInitCodecOrBypass(MediaCodecRenderer.java:604)\r\n        at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.onInputFormatChanged(MediaCodecRenderer.java:1470)\r\n        at com.google.android.exoplayer2.video.MediaCodecVideoRenderer.onInputFormatChanged(MediaCodecVideoRenderer.java:640)\r\n        at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.readToFlagsOnlyBuffer(MediaCodecRenderer.java:994)\r\n        at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.render(MediaCodecRenderer.java:844)\r\n        at com.google.android.exoplayer2.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:892)\r\n        at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:467)\r\n        at android.os.Handler.dispatchMessage(Handler.java:103)\r\n        at android.os.Looper.loop(Looper.java:224)\r\n        at android.os.HandlerThread.run(HandlerThread.java:67)\r\n2021-01-26 16:22:37.820 E/ExoPlayerImplInternal: Playback error\r\n      com.google.android.exoplayer2.ExoPlaybackException: MediaCodecVideoRenderer error, index=0, format=Format(1, null, null, video/avc, null, -1, null, [720, 1280, 29.969316], [-1, -1]), format_supported=YES\r\n        at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:542)\r\n        at android.os.Handler.dispatchMessage(Handler.java:103)\r\n        at android.os.Looper.loop(Looper.java:224)\r\n        at android.os.HandlerThread.run(HandlerThread.java:67)\r\n     Caused by: com.google.android.exoplayer2.mediacodec.MediaCodecRenderer$DecoderInitializationException: Decoder init failed: OMX.qcom.video.decoder.avc, Format(1, null, null, video/avc, null, -1, null, [720, 1280, 29.969316], [-1, -1])\r\n        at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.maybeInitCodecWithFallback(MediaCodecRenderer.java:1047)\r\n        at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.maybeInitCodecOrBypass(MediaCodecRenderer.java:604)\r\n        at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.onInputFormatChanged(MediaCodecRenderer.java:1470)\r\n        at com.google.android.exoplayer2.video.MediaCodecVideoRenderer.onInputFormatChanged(MediaCodecVideoRenderer.java:640)\r\n        at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.readToFlagsOnlyBuffer(MediaCodecRenderer.java:994)\r\n        at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.render(MediaCodecRenderer.java:844)\r\n        at com.google.android.exoplayer2.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:892)\r\n        at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:467)\r\n        at android.os.Handler.dispatchMessage(Handler.java:103) \r\n        at android.os.Looper.loop(Looper.java:224) \r\n        at android.os.HandlerThread.run(HandlerThread.java:67) \r\n     Caused by: java.lang.IllegalArgumentException\r\n        at android.media.MediaCodec.native_configure(Native Method)\r\n        at android.media.MediaCodec.configure(MediaCodec.java:2023)\r\n        at android.media.MediaCodec.configure(MediaCodec.java:1951)\r\n        at com.google.android.exoplayer2.mediacodec.SynchronousMediaCodecAdapter.configure(SynchronousMediaCodecAdapter.java:43)\r\n        at com.google.android.exoplayer2.video.MediaCodecVideoRenderer.configureCodec(MediaCodecVideoRenderer.java:580)\r\n        at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.initCodec(MediaCodecRenderer.java:1143)\r\n        at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.maybeInitCodecWithFallback(MediaCodecRenderer.java:1040)\r\n        at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.maybeInitCodecOrBypass(MediaCodecRenderer.java:604) \r\n        at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.onInputFormatChanged(MediaCodecRenderer.java:1470) \r\n        at com.google.android.exoplayer2.video.MediaCodecVideoRenderer.onInputFormatChanged(MediaCodecVideoRenderer.java:640) \r\n        at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.readToFlagsOnlyBuffer(MediaCodecRenderer.java:994) \r\n        at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.render(MediaCodecRenderer.java:844) \r\n        at com.google.android.exoplayer2.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:892) \r\n        at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:467) \r\n        at android.os.Handler.dispatchMessage(Handler.java:103) \r\n        at android.os.Looper.loop(Looper.java:224) \r\n        at android.os.HandlerThread.run(HandlerThread.java:67) `\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8509/comments",
    "author": "Kimiar",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2021-01-26T10:59:11Z",
        "body": "I think there's an Android platform limitation that once you've used a `Surface` for drawing from the CPU like this it can't be used as the output surface for a video decoder. See also #6454.\r\n\r\nYour best bet is have a separate view with the background color. This can go on top of the surface view to obscure it until you want to show the video output (when the player triggers the `onRenderedFirstFrame` event). If you don't want to write your own code to do this you could just use the ExoPlayer UI module `StyledPlayerView`, which takes care of this for you."
      },
      {
        "user": "Kimiar",
        "created_at": "2021-01-27T01:46:46Z",
        "body": "Buddy, thanks. You are really great!"
      }
    ]
  },
  {
    "number": 8505,
    "title": "Does anyone have an IPTV project focused on multicast udp?",
    "created_at": "2021-01-25T18:31:44Z",
    "closed_at": "2021-04-01T16:21:16Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8505",
    "body": "I am developing an IPTV application for android TV for my college project, in which the channels are reproduced by udp links, example: \"udp: //224.2.2.2: 1234\". Live channels must be .ts. I'm using android studio.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8505/comments",
    "author": "matheusccarvalho",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2021-01-26T15:26:12Z",
        "body": "There is a `UdpDataSource` available that is created by the `DefaultDataSource` automatically if you use a url with the `udp://` scheme like your example.\r\n\r\n > Live channels must be .ts.\r\n \r\nIf you are asking for multicast udp streams in the ts format for testing, we can not provide these I'm afraid, but I leave the issue open in case someone else can help you some further.\r\n\r\nPlease let me know and add some details if I didn't understand your question correctly."
      }
    ]
  },
  {
    "number": 8485,
    "title": "No static method getLooper()Landroid/os/Looper; in class Lcom/google/android/exoplayer2/z1/k0",
    "created_at": "2021-01-20T22:25:02Z",
    "closed_at": "2021-01-21T15:18:29Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8485",
    "body": "Using the latest version of exoplayer:\r\n\r\n```\r\n implementation \"com.google.android.exoplayer:exoplayer:2.12.3\"\r\n implementation \"com.google.android.exoplayer:extension-ima:2.12.3\"\r\n```\r\n\r\n\r\nThe DefaultExoCreator class calls Util.getLooper() in createPlayer():\r\n\r\n```\r\n @NonNull @Override public SimpleExoPlayer createPlayer() {\r\n    return new ToroExoPlayer(toro.context, renderersFactory, trackSelector, loadControl,\r\n        new DefaultBandwidthMeter(), config.drmSessionManager, Util.getLooper());\r\n  }\r\n\r\n```\r\n\r\n\r\nHowever, the UTIL class doesn't have that method, only\r\n\r\n```\r\npublic static Looper getCurrentOrMainLooper() {\r\n    @Nullable Looper myLooper = Looper.myLooper();\r\n    return myLooper != null ? myLooper : Looper.getMainLooper();\r\n  }\r\n```\r\n\r\nWhen I call play() on an ExoPlayable it crashes gives me the above error:\r\n\r\n`java.lang.NoSuchMethodError: No static method getLooper()Landroid/os/Looper; in class Lcom/google/android/exoplayer2/z1/k0; or its super classes (declaration of 'com.google.android.exoplayer2.z1.k0' appears in /data/app/~~wEGp5TVoXpOMXwPqfVqJ0A==/com.eight.app.qa-yBkNhO_wgq9FeKEPO1O3YA==/base.apk)`\r\n\r\nFor what it's worth, I also get a \"library source does not match the bytecode for class DefaultExoCreator\" flag on when I have  DefaultExoCreator.java open but I already cleaned/rebuilt my project and invalidated the cache. Am I missing something?\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8485/comments",
    "author": "aedgar777",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2021-01-21T15:18:27Z",
        "body": "`DefaultExoCreator` is not part of ExoPlayer. It sounds like it is not compatible with ExoPlayer version 2.12.3.\r\n\r\nWe do not guarantee API stability between versions, so `DefaultExoCreator` will need updating to work properly with the version of ExoPlayer that you're trying to use."
      }
    ]
  },
  {
    "number": 8481,
    "title": "How to reduce the playback latency of rtmp stream?",
    "created_at": "2021-01-20T10:35:28Z",
    "closed_at": "2021-06-14T19:28:48Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8481",
    "body": "When I play the rtmp stream, the latency takes about 6 seconds, I want to adjust it to about 2 seconds, so I modified the DefaultLoadControl, but it seems to have no effect。\r\n\r\nBut I found a very interesting problem during the test. If I push the stream first, and then ExoPlayer pulls the stream, the latency is about 4~6 seconds. If I use ExoPlayer to pull the stream and wait, and then push the stream, the latency will be 2. In seconds, is there any good solution?\r\n\r\n```\r\nSimpleExoPlayer simpleExoPlayer = new SimpleExoPlayer.Builder(this,\r\n                new DefaultRenderersFactory(this),\r\n                new DefaultTrackSelector(this),\r\n                factory,\r\n                new DefaultLoadControl.Builder().setBufferDurationsMs( 25_000,\r\n                        25_000,\r\n                        1250,\r\n                        0).setTargetBufferBytes(-1).build(),\r\n                DefaultBandwidthMeter.getSingletonInstance(this),\r\n                new AnalyticsCollector(Clock.DEFAULT)).setTrackSelector(trackSelector).build();\r\n```",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8481/comments",
    "author": "luohaohaha",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2021-06-07T15:58:52Z",
        "body": "Is this a live stream? If so, then I wonder whether the difference between the two cases is having to wait for a key-frame in the stream? The first frame of any stream will always be a key-frame. It could be that in the second case you describe, the player receives data starting at the first frame, and so can start decoding immediately from that point. Conversely, it could be that in the first case you describe, the player receives data starting at some non-first frame, meaning that it has to wait to encounter the next key-frame before it can start decoding. If this is the root cause, I think the only solution is to adjust the stream itself to contain more regular key-frames.\r\n\r\nOn the ExoPlayer side I think you're doing roughly the right thing, although:\r\n* You can probably reduce `bufferForPlaybackMs` from `1250` all the way down to `0`.\r\n* You'd normally want `bufferForPlaybackAfterRebufferMs` to be greater than `0` (e.g., `1000`) to avoid very frequent stuttering in the case that the player encounters a re-buffer. Note that this parameter has no affect on initial startup latency."
      }
    ]
  },
  {
    "number": 8442,
    "title": "How to use multiple exoplayer 2.x versions in single app",
    "created_at": "2021-01-11T08:16:58Z",
    "closed_at": "2021-01-11T18:48:14Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8442",
    "body": "[REQUIRED] Searched documentation and issues\r\n[REQUIRED] How to bundle multiple exoplayer 2.x versions based players in single app\r\n\r\nOne of our client is having a requirement to have multiple exoplayer based players in the same app. The app will be playing syndicated contents and hence will have different players from different partners.\r\n\r\nOur question is what is the best way to support different exoplayer versions in the same app.\r\n\r\nShould we load each player from maven repo independently or bundle the player as part of aar (after changing all exoplayer namespace) to avoid any runtime exception?\r\n\r\nAny pointers are welcome\r\n\r\nThanks in advance !\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8442/comments",
    "author": "krackjack234",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2021-01-11T18:48:14Z",
        "body": "> Should we load each player from maven repo independently or bundle the player as part of aar (after changing all exoplayer namespace) to avoid any runtime exception?\r\n\r\nI'm not sure about the details of the first suggestion (if you depend on multiple versions without any repackaging I'd expect there will be collisions, or possibly the dependency will just get resolved to the newest version). Repackaging either the sources or classes to avoid collisions should work though."
      }
    ]
  },
  {
    "number": 8405,
    "title": "How to distinguish between i-frame and video tracks in HLS streams.",
    "created_at": "2020-12-28T05:31:49Z",
    "closed_at": "2020-12-29T13:28:26Z",
    "labels": [
      "duplicate",
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8405",
    "body": "In new version of exoplayer we are getting i-frame list in Format under video track. We don't have any way differentiate between actual video tracks and i-frame tracks.\r\n\r\nThis will help us in resolving right track for download.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8405/comments",
    "author": "sravan1213",
    "comments": [
      {
        "user": "AquilesCanta",
        "created_at": "2020-12-29T13:28:26Z",
        "body": "Duplicate of #8313."
      }
    ]
  },
  {
    "number": 8375,
    "title": "how to get getCurrentPosition with   playbackControlView.setShowMultiWindowTimeBar(true); of the next video",
    "created_at": "2020-12-19T05:51:46Z",
    "closed_at": "2020-12-29T17:01:24Z",
    "labels": [
      "duplicate",
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8375",
    "body": "how can we get the current position of the second, third video with ConcatenatingMediaSource\r\n\r\nI had a look at playerview, where the current position text is updated, I want to have a custom implementation of the seekbar and to display the current position text in a similar way. \r\n```\r\nif (!timeline.isEmpty()) {\r\n                        int currentWindowIndex = player.getCurrentWindowIndex();\r\n                        int firstWindowIndex = multiWindowTimeBar ? 0 : currentWindowIndex;\r\n                        int lastWindowIndex = multiWindowTimeBar ? timeline.getWindowCount() - 1 : currentWindowIndex;\r\n                        for (int i = firstWindowIndex; i <= lastWindowIndex; i++) {\r\n                            if (i == currentWindowIndex) {\r\n                                currentWindowOffset = C.usToMs(durationUs);\r\n                            }\r\n\r\n```\r\n\r\nan easier option would be to get currentWindowOffset directly, is it possible.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8375/comments",
    "author": "pawaom",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2020-12-29T17:01:24Z",
        "body": "I think I understand you want to get the duration of each item in the `ConcatenatingMediaSource`. With this you can calculate the total position of the start of any media source in the playlist to display the current position in the entire playlist. If this is what you are trying to achieve, and if you are using progressive media, please refer to #4727. \r\n\r\nThe duration of progressive media items is available only when the player starts to buffer the media item, not before. This is a known limitation. \r\n\r\nDuplicate of #4727.\r\n\r\nPlease re-open if I misunderstood your issue."
      }
    ]
  },
  {
    "number": 8369,
    "title": "How to viewBinding of PlayerView's controller layout",
    "created_at": "2020-12-18T03:22:37Z",
    "closed_at": "2020-12-18T17:17:51Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8369",
    "body": "Using ViewBinding, \r\nbut I dont konw how to binding PlayerView's  custom controller layout\r\n\r\n<com.google.android.exoplayer2.ui.PlayerView\r\n                android:id=\"@+id/player_view\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\"\r\n                **app:controller_layout_id**=\"@layout/layout_player_mask\"/>\r\n\r\nonCreate()\r\nbinding = ActivityVideoRoomBinding.inflate(layoutInflater)\r\n// This method is not work\r\n//bindingLayoutPlayerMask = LayoutPlayerMaskNewBinding.inflate(layoutInflater)\r\n//This method still not work\r\nbindingLayoutPlayerMask = binding.playerView. ?\r\n\r\n\r\n//gradle\r\next.exo_version = '2.12.2'\r\ncompileSdkVersion 28\r\n    buildFeatures {\r\n        dataBinding true\r\n        viewBinding true\r\n    }\r\nAndroid Studio 4.1.1\r\n\r\nThanks in advance",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8369/comments",
    "author": "javaing",
    "comments": [
      {
        "user": "javaing",
        "created_at": "2020-12-18T04:00:40Z",
        "body": "I try this way , work for me now\r\n\r\n```\r\nval videoControlView = binding.root.findViewById<View>(R.id.custom_layout)\r\nbindingLayoutPlayerMask = DataBindingUtil.bind(videoControlView)!!\r\n```"
      },
      {
        "user": "tonihei",
        "created_at": "2020-12-18T17:17:51Z",
        "body": "I'm not sure I understand your original problem, but glad you found a solution yourself. Closing this issue as I think there is nothing else for us to do here."
      }
    ]
  },
  {
    "number": 8367,
    "title": "Question: Is there any reason to keep \"multiSession\" flag in DefaultDrmSessionManager?",
    "created_at": "2020-12-17T23:32:25Z",
    "closed_at": "2021-01-07T09:57:09Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8367",
    "body": "It seems in recent versions of exoplayers, this flag is used only in DefaultDrmSessionManager.\r\nLogically, no-key-rotation content is just a special version of key-rotation content (rotated with infinite interval time).\r\nIs there any reason that we have to set this flag to be false when the content only requires single key-request?\r\nwhat side effect will it have if we by default set it true and play the content with key-rotation turned off?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8367/comments",
    "author": "linhai326",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2020-12-18T17:49:13Z",
        "body": "@AquilesCanta  Do you know if there is any downside in turning this flag on for content without key rotation."
      },
      {
        "user": "AquilesCanta",
        "created_at": "2020-12-21T14:44:41Z",
        "body": "The reason for the multiSession flag is that it's common for media to bring in keys for all elementary streams when issuing the key request for any of the elementary streams. \r\n\r\nExample: both audio and video are signalled as protected. However, issuing a license request for the video keys will also bring in audio keys, so having a single DRM session in that scenario is enough. If we turned off multisession and the license request information was different in any way between video and audio, ExoPlayer would perform one key request for audio and one for video, even though in most non-key-rotation cases, a single key request would be enough. Let me know if this answers your question."
      },
      {
        "user": "linhai326",
        "created_at": "2021-01-06T22:22:27Z",
        "body": "@AquilesCanta \r\nThank you so much for your reply.\r\nMy original question is if there is any side-effect if we always turn on multi-session flag.\r\n\r\nIf i understand it correctly, what you are saying is: we should turn on multi-session even for non-key-rotation media in the case that audio and video have different license info. \r\nSo it sounds there is not much side-effect if we keep this flag as true (turn on multi-session).\r\nIs that correct understanding?\r\n\r\n\r\n\r\n"
      },
      {
        "user": "ojw28",
        "created_at": "2021-01-07T09:57:09Z",
        "body": "If you turn `multiSession` on for non-key-rotated media:\r\n\r\n1. If your content has identical PSSH boxes (this is what contains the \"license request information\") for all streams, there will be no side effects at all.\r\n2. If your content has different PSSH boxes for audio and video, the side effect is that there will be two DRM sessions, each making their own key requests, rather than just one. This is what @AquilesCanta is describing above. In practice, this means (a) higher load on your license server, and (b) probably a very marginal increase in playback failure, simply because the additional session is one more thing that can go wrong. In practice I suspect these side effects are acceptable.\r\n3. If your content has different PSSH boxes for different video streams, then you may see a small visual pause in playback when the player adapts from one video quality to another."
      }
    ]
  },
  {
    "number": 8327,
    "title": "ExoPlayer support in CMAF, CTE with http 1.1",
    "created_at": "2020-12-08T11:56:36Z",
    "closed_at": "2020-12-09T17:22:10Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8327",
    "body": "",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8327/comments",
    "author": "He12345678901",
    "comments": [
      {
        "user": "He12345678901",
        "created_at": "2020-12-08T12:04:48Z",
        "body": "Hi, the Exoplayer supports on DASH/ Low latency in live channels with CMAF/Chunk Transfer Encoding over HTTP 1.1 ? please specify which ExoPlayer versions already support that feature and which parameters involved in its customization for small chunks\r\nthanks"
      },
      {
        "user": "ojw28",
        "created_at": "2020-12-09T17:22:10Z",
        "body": "Low latency DASH should be fully supported from `2.13.0`, which is scheduled to be released at some point in the first quarter of next year. The functionality should already be available in the `dev-v2` branch.\r\n\r\n>  and which parameters involved in its customization for small chunks\r\n\r\nI don't really understand the question. However, `exoplayer.dev` page will be updated with documentation around low latency functionality when `2.13.0` is released."
      },
      {
        "user": "He12345678901",
        "created_at": "2020-12-09T18:28:07Z",
        "body": "thanks\r\nit means that 2.13.0 release will support DASH Low latency with 'Chunk Transfer Encoding' (CTE) over HTTP 1.1 ?"
      },
      {
        "user": "ojw28",
        "created_at": "2020-12-10T01:14:02Z",
        "body": "Yes."
      }
    ]
  },
  {
    "number": 8321,
    "title": "appending bytes to data source while playing audio",
    "created_at": "2020-12-07T15:23:04Z",
    "closed_at": "2021-09-07T19:30:21Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8321",
    "body": "Hi,\r\nI'm trying to play a realtime voice with Exo player\r\ndata bytes comes from a Bluetooth device and the data length is unset\r\nmy problem is I didn't find any good doc or example to do that.\r\nthis is how I tried to solve the problem:\r\n1- I create a ByteArray and filled it with headers (List<Byte> bytes = new ArrayList()\r\n2- I create Uri from that array\r\n3- create a data source and pass that array to it's the constructor\r\n4- when new data arrived, add it to the array and increase remains\r\n\r\nbut it doesn't work, I did everything like ByteArrayDataSource but my problem didn't solve",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8321/comments",
    "author": "mhdabbaghy",
    "comments": [
      {
        "user": "krocard",
        "created_at": "2020-12-09T12:51:08Z",
        "body": "> I'm trying to play a realtime voice with Exo player\r\n\r\nNote that ExoPlayer is not designed for realtime audio playback. It will introduce significant latency to your playback. Directly using `AudioTrack` will give you better latency.\r\n\r\n> 4- when new data arrived, add it to the array and increase remains\r\n\r\nHow do you add it to the array? Java arrays can not be increased in size.\r\nHow do you increase remains? `bytesRemaining` is a private field of `ByteArrayDataSource`.\r\n\r\nI don't believe `ByteArrayDataSource` is the right approach, as it is intended to play an array of constant size.\r\nConsider implementing your own `DataSource` similar to `ByteArrayDataSource`.\r\n\r\nIt's hard to provide guidance without a better understanding of your use case. Could you describe your use case?"
      },
      {
        "user": "tonihei",
        "created_at": "2020-12-09T13:58:36Z",
        "body": "This issue also sounds very similar to #8051 and it 's worth checking the implementation hints provided in there if you think ExoPlayer is a good choice compared to using AudioTrack directly."
      },
      {
        "user": "mhdabbaghy",
        "created_at": "2020-12-09T15:14:21Z",
        "body": "tnx @tonihei \r\nI saw that but my problem didn't solve, I think his problem didn't solve too\r\n"
      },
      {
        "user": "ojw28",
        "created_at": "2021-09-07T19:30:21Z",
        "body": "As @krocard notes above, using `AudioTrack` directly is probably a better way of implementing this. From the little information provided, it seems unlikely that ExoPlayer is the right API to be using."
      }
    ]
  },
  {
    "number": 8291,
    "title": "Crash with Chromecast",
    "created_at": "2020-11-27T13:05:30Z",
    "closed_at": "2020-12-03T09:42:55Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8291",
    "body": "### Issue description\r\nCould you please take a look at this log? This is crash from Firebase, we do not have any context but hopefully you will found some issue to fix.\r\n\r\n### Reproduction steps\r\nUnknown\r\n\r\n### Link to test content\r\nUnknown\r\n\r\n### A full bug report captured from the device\r\n```\r\nFatal Exception: java.lang.NullPointerException: Attempt to invoke virtual method 'e0.t.l.c e0.t.l.f$g.a()' on a null object reference\r\n       at androidx.mediarouter.media.MediaRouter$GlobalMediaRouter.setSelectedRouteInternal(MediaRouter.java:2616)\r\n       at androidx.mediarouter.media.MediaRouter$GlobalMediaRouter.updateSelectedRouteIfNeeded(MediaRouter.java:2502)\r\n       at androidx.mediarouter.media.MediaRouter$GlobalMediaRouter.updateProviderContents(MediaRouter.java:2376)\r\n       at androidx.mediarouter.media.MediaRouter$GlobalMediaRouter.updateProviderDescriptor(MediaRouter.java:2260)\r\n       at androidx.mediarouter.media.MediaRouter$GlobalMediaRouter$ProviderCallback.onDescriptorChanged(MediaRouter.java:2768)\r\n       at androidx.mediarouter.media.MediaRouteProvider.deliverDescriptorChanged(MediaRouteProvider.java:241)\r\n       at androidx.mediarouter.media.MediaRouteProvider$ProviderHandler.handleMessage(MediaRouteProvider.java:442)\r\n       at android.os.Handler.dispatchMessage(Handler.java:112)\r\n       at android.os.Looper.loop(Looper.java:216)\r\n       at android.app.ActivityThread.main(ActivityThread.java:7625)\r\n       at java.lang.reflect.Method.invoke(Method.java)\r\n       at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:524)\r\n       at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:987)\r\n```\r\n\r\n### Version of ExoPlayer being used\r\n2.11.8\r\n\r\n### Device(s) and version(s) of Android being used\r\nHonor 9 Lite, Android 9\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8291/comments",
    "author": "chladto1",
    "comments": [
      {
        "user": "AquilesCanta",
        "created_at": "2020-11-27T16:31:45Z",
        "body": "I don't think we will be able to assist much with this amount of info. I've contacted a team that may be able to shed some light but I cannot make any promises."
      },
      {
        "user": "AquilesCanta",
        "created_at": "2020-12-03T09:42:55Z",
        "body": "Hi, the team in charge of MediaRouter was able to narrow down the possible causes of the issue, but mentioned that there is not much which is actionable on our side. Is it possible that the media router version that you are using is old? If so, they advised you try updating the library version.\r\n\r\nOther than that, the ExoPlayer team is not able to help much here, since the issue is not even occurring in our stacktrace. Please let me know if you manage to reproduce the issue, or if you are able to mitigate it by updating the mediarouter library version, so as to favor future readers."
      }
    ]
  },
  {
    "number": 8273,
    "title": "how to avoid small laggy when call player.next () in a playlist ",
    "created_at": "2020-11-24T08:59:22Z",
    "closed_at": "2020-11-24T15:05:41Z",
    "labels": [
      "question",
      "need more info"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8273",
    "body": "I have a play list of videos, which are of irregular length. I want to jump to next() on a fixed interval, otherwise I'd like it loop though a subset of list.\r\n\r\nconsider the following example, a playlist contain videos between 5-10 seconds long, I'd like to go to a new video at exactly 60 seconds , so it might be possible that some video are just starting, and I need the next one to play. I am using player.next() however, it's causing a small laggy. \r\nIs there a way to make the transition smooth? like at 59 seconds, tell the player to start caching next video \r\n\r\nthanks\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8273/comments",
    "author": "yangcheng",
    "comments": [
      {
        "user": "AquilesCanta",
        "created_at": "2020-11-24T14:38:18Z",
        "body": "Hi @yangcheng, \r\n\r\n> tell the player to start caching next video\r\n\r\nIn ExoPlayer there's no way to individually control buffering for each item. You need to put the items in a playlist and let the player handle the buffering for you. And the player will start buffering the next item only after it has finished buffering the current one.\r\n\r\nAs things stand now, the only way of loading content from a following item without fully loading the current one is by clipping the current item, so that the player doesn't buffer it fully. Clipping content dynamically is tracked by #3163. I am guessing you can't use ClippingMediaSource because depending on user interactions you may want to play the full video. Is this right?\r\n\r\n"
      },
      {
        "user": "AquilesCanta",
        "created_at": "2020-11-24T15:05:41Z",
        "body": "Thanks to @tonihei for pointing this out. There's also #3327 which seems to track exactly what you are asking for.\r\n\r\nOther than implementing some form of local cache manually, I think your best option is tracking #3327.\r\n\r\nIf there's any aspect of your question unanswered, please let me know and I'll reopen the issue."
      },
      {
        "user": "yangcheng",
        "created_at": "2020-11-25T02:04:07Z",
        "body": "thanks for pointing out ClippingMediaSource, the only user interaction I need to support is pause and resume, no need for seekbar control. so I guess I can use it?"
      },
      {
        "user": "AquilesCanta",
        "created_at": "2020-11-25T09:57:53Z",
        "body": "> so I guess I can use it?\r\n\r\nCertainly seems so. Please give it a try!"
      }
    ]
  },
  {
    "number": 8258,
    "title": "Why does ExoPlayer call updateSelectedTrack() many times when I modify determineIdealSelectedIndex()?",
    "created_at": "2020-11-20T10:44:55Z",
    "closed_at": "2020-11-22T10:53:13Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8258",
    "body": "Hi,\r\nWhen I run your **demo** configuration and watch `Google Play H264 (MP4)`, the `AdaptiveTrackSelection.updateSelectedTrack()` is called 15 times, and the selected qualities are recorded as follows:\r\n_Note_: \r\n```java\r\nThe QualityIdx is determined as `length - newSelectedIndex`\r\npublic static final int DEFAULT_MIN_BUFFER_MS = 20_000;\r\npublic static final int DEFAULT_MAX_BUFFER_MS = 20_000; \r\n```\r\n```\r\n2020-11-20 11:17:23.105 5588-5588/com.google.android.exoplayer2.demo I/MINH: Id\tTime\tEstThroughput\tQualityIdx\tBitrate\tBuffer\r\n2020-11-20 11:17:23.105 5588-5588/com.google.android.exoplayer2.demo I/MINH: 1\t989\t4.139778\t6\t1.834968\t0.0\t\r\n2020-11-20 11:17:23.105 5588-5588/com.google.android.exoplayer2.demo I/MINH: 2\t990\t4.139778\t6\t1.834968\t0.0\t\r\n2020-11-20 11:17:23.106 5588-5588/com.google.android.exoplayer2.demo I/MINH: 3\t990\t23.515743\t6\t1.834968\t5.213468\t\r\n2020-11-20 11:17:23.106 5588-5588/com.google.android.exoplayer2.demo I/MINH: 4\t990\t32.762936\t6\t1.834968\t9.359454\t\r\n2020-11-20 11:17:23.106 5588-5588/com.google.android.exoplayer2.demo I/MINH: 5\t990\t32.762936\t6\t1.834968\t13.740843\t\r\n2020-11-20 11:17:23.107 5588-5588/com.google.android.exoplayer2.demo I/MINH: 6\t991\t28.8144\t\t6\t1.834968\t17.874817\t\r\n2020-11-20 11:17:23.107 5588-5588/com.google.android.exoplayer2.demo I/MINH: 7\t993\t28.8144\t\t6\t1.834968\t19.99352\t\r\n2020-11-20 11:17:23.108 5588-5588/com.google.android.exoplayer2.demo I/MINH: 8\t998\t28.8144\t\t6\t1.834968\t19.996836\t\r\n2020-11-20 11:17:23.108 5588-5588/com.google.android.exoplayer2.demo I/MINH: 9\t1003\t27.448479\t6\t1.834968\t19.99776\t\r\n2020-11-20 11:17:23.109 5588-5588/com.google.android.exoplayer2.demo I/MINH: 10\t1008\t31.993544\t6\t1.834968\t19.997576\t\r\n2020-11-20 11:17:23.109 5588-5588/com.google.android.exoplayer2.demo I/MINH: 11\t1012\t31.993544\t6\t1.834968\t19.995329\t\r\n2020-11-20 11:17:23.109 5588-5588/com.google.android.exoplayer2.demo I/MINH: 12\t1017\t31.585793\t6\t1.834968\t19.999952\t\r\n2020-11-20 11:17:23.110 5588-5588/com.google.android.exoplayer2.demo I/MINH: 13\t1023\t51.726105\t6\t1.834968\t19.996777\t\r\n2020-11-20 11:17:23.110 5588-5588/com.google.android.exoplayer2.demo I/MINH: 14\t1027\t51.726105\t6\t1.834968\t19.990929\t\r\n2020-11-20 11:17:23.110 5588-5588/com.google.android.exoplayer2.demo I/MINH: 15\t1029\t51.726105\t6\t1.834968\t19.996412\t\r\n```\r\n\r\nHowever, when I modify the function `determineIdealSelectedIndex()`\r\n\r\n```java\r\n...\r\nprivate static int minh_count = 0;\r\n...\r\nprivate int determineIdealSelectedIndex(long nowMs) {\r\n    long effectiveBitrate = bandwidthProvider.getAllocatedBandwidth();\r\n    int lowestBitrateAllowedIndex = 0;\r\n    for (int i = 0; i < length; i++) {\r\n      if (nowMs == Long.MIN_VALUE || !isBlacklisted(i, nowMs)) {\r\n        Format format = getFormat(i);\r\n        if (canSelectFormat(format, format.bitrate, playbackSpeed, effectiveBitrate)) { //throughput-based\r\n          // Modify for test - START\r\n          //  return  i;\r\n          minh_count ++;\r\n          return minh_count%length;\r\n          // Modify for test - END\r\n        } else {\r\n          lowestBitrateAllowedIndex = i;\r\n        }\r\n      }\r\n    }\r\n\r\n    return lowestBitrateAllowedIndex;\r\n  }\r\n```\r\nThe `AdaptiveTrackSelection.updateSelectedTrack()` is called 20 times as follows:\r\n```\r\n2020-11-20 11:20:25.514 5744-5744/com.google.android.exoplayer2.demo I/MINH: Id\tTime\tEstThroughput\tQualityIdx\tBitrate\tBuffer\r\n2020-11-20 11:20:25.514 5744-5744/com.google.android.exoplayer2.demo I/MINH: 1\t1172\t4.139778\t5\t1.006977\t0.0\t\r\n2020-11-20 11:20:25.514 5744-5744/com.google.android.exoplayer2.demo I/MINH: 2\t1172\t4.139778\t4\t0.499978\t0.0\t\r\n2020-11-20 11:20:25.514 5744-5744/com.google.android.exoplayer2.demo I/MINH: 3\t1172\t4.139778\t3\t0.257246\t0.0\t\r\n2020-11-20 11:20:25.514 5744-5744/com.google.android.exoplayer2.demo I/MINH: 4\t1172\t4.139778\t2\t0.147097\t0.0\t\r\n2020-11-20 11:20:25.515 5744-5744/com.google.android.exoplayer2.demo I/MINH: 5\t1172\t4.139778\t1\t0.075814\t0.0\t\r\n2020-11-20 11:20:25.515 5744-5744/com.google.android.exoplayer2.demo I/MINH: 6\t1172\t4.139778\t1\t0.075814\t0.0\t\r\n2020-11-20 11:20:25.515 5744-5744/com.google.android.exoplayer2.demo I/MINH: 7\t1172\t4.139778\t1\t0.075814\t5.214\t\r\n2020-11-20 11:20:25.515 5744-5744/com.google.android.exoplayer2.demo I/MINH: 8\t1172\t4.139778\t1\t0.075814\t9.522873\t\r\n2020-11-20 11:20:25.515 5744-5744/com.google.android.exoplayer2.demo I/MINH: 9\t1172\t4.139778\t3\t0.257246\t14.114865\t\r\n2020-11-20 11:20:25.515 5744-5744/com.google.android.exoplayer2.demo I/MINH: 10\t1172\t15.159876\t2\t0.147097\t18.749332\t\r\n2020-11-20 11:20:25.515 5744-5744/com.google.android.exoplayer2.demo I/MINH: 11\t1175\t15.932693\t1\t0.075814\t19.99592\t\r\n2020-11-20 11:20:25.515 5744-5744/com.google.android.exoplayer2.demo I/MINH: 12\t1180\t15.932693\t6\t1.834968\t19.999607\t\r\n2020-11-20 11:20:25.515 5744-5744/com.google.android.exoplayer2.demo I/MINH: 13\t1180\t15.932693\t5\t1.006977\t19.87662\t\r\n2020-11-20 11:20:25.515 5744-5744/com.google.android.exoplayer2.demo I/MINH: 14\t1185\t16.497812\t4\t0.499978\t19.998589\t\r\n2020-11-20 11:20:25.515 5744-5744/com.google.android.exoplayer2.demo I/MINH: 15\t1190\t15.932693\t3\t0.257246\t19.999405\t\r\n2020-11-20 11:20:25.515 5744-5744/com.google.android.exoplayer2.demo I/MINH: 16\t1195\t19.41076\t2\t0.147097\t19.99306\t\r\n2020-11-20 11:20:25.515 5744-5744/com.google.android.exoplayer2.demo I/MINH: 17\t1200\t19.41076\t1\t0.075814\t19.991512\t\r\n2020-11-20 11:20:25.515 5744-5744/com.google.android.exoplayer2.demo I/MINH: 18\t1205\t18.738419\t6\t1.834968\t19.993235\t\r\n2020-11-20 11:20:25.515 5744-5744/com.google.android.exoplayer2.demo I/MINH: 19\t1209\t19.41076\t5\t1.006977\t19.998152\t\r\n2020-11-20 11:20:25.515 5744-5744/com.google.android.exoplayer2.demo I/MINH: 20\t1211\t18.738419\t4\t0.499978\t19.99512\t\r\n```\r\nEspecially, the segment `Id`s: 2, 3, 4, 5 and 12 have the `chunk.getDurationUs() = 0.0` in the function `DefaultDashChunkSource.onChunkLoadCompleted()`, and theses segments are not played on the screen.\r\n\r\nWhy does this happen?\r\nHow can I enforce the ExoPlayer to send requests and plays exactly what `updateSelectedTrack()` determines?\r\n\r\nThank you.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8258/comments",
    "author": "minhkstn",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2020-11-20T13:25:33Z",
        "body": "ExoPlayer calls `updateSelectedTrack` whenever we need to load something new. Depending on your `selectedIndex`, ExoPlayer may need to load non-media data first though. \r\n\r\nIn the example stream we need to load the initialization data for the selected format the first time you try to select it. After we loaded the initialization data, we call `updateSelectedTrack` again to see if we still want to continue with this format. So the chunks with `chunk.getDurationUs() = 0.0` are most likely the initialization chunk loads you see. The second example contains more of them because you force the player to load the initialization data for all formats before even starting playback."
      },
      {
        "user": "minhkstn",
        "created_at": "2020-11-20T14:01:15Z",
        "body": " @tonihei Thank you for your response. So I guess to avoid additional calls, I need to keep the same format in the `updateSelectedTrack` by choosing the same quality index before starting playback. Is it correct?"
      },
      {
        "user": "tonihei",
        "created_at": "2020-11-20T15:55:25Z",
        "body": "Yes, but there is generally no need to avoid them because the initialization data is really small compared to the actual media data."
      },
      {
        "user": "minhkstn",
        "created_at": "2020-11-22T10:53:09Z",
        "body": "Thank you so much."
      }
    ]
  },
  {
    "number": 8251,
    "title": "Certain devices crash with an SQLiteException when attempting to create cache ",
    "created_at": "2020-11-19T00:10:36Z",
    "closed_at": "2020-12-21T20:20:10Z",
    "labels": [
      "question",
      "wont fix: app issue"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8251",
    "body": "### [REQUIRED] Issue description\r\nCertain devices crash with an SQLiteException when attempting to create cache \r\n\r\n### [REQUIRED] Reproduction steps\r\nCreate a media source with cache using CacheDataSourceFactory()\r\n\r\n### [REQUIRED] Link to test content\r\nAny content \r\n\r\n### [REQUIRED] A full bug report captured from the device\r\nCurrently attempting to acquire bug report however do you not have a physical device available currently - apologies, will update when this is available \r\n\r\n```\r\nFatal Exception: android.database.sqlite.SQLiteException: not an error (Sqlite code 0 SQLITE_OK), (OS error - 2:No such file or directory)\r\n       at android.database.sqlite.SQLiteConnection.nativeRegisterLocalizedCollators(SQLiteConnection.java)\r\n       at android.database.sqlite.SQLiteConnection.setLocaleFromConfiguration(SQLiteConnection.java:461)\r\n       at android.database.sqlite.SQLiteConnection.open(SQLiteConnection.java:241)\r\n       at android.database.sqlite.SQLiteConnection.open(SQLiteConnection.java:211)\r\n       at android.database.sqlite.SQLiteConnectionPool.openConnectionLocked(SQLiteConnectionPool.java:559)\r\n       at android.database.sqlite.SQLiteConnectionPool.open(SQLiteConnectionPool.java:222)\r\n       at android.database.sqlite.SQLiteConnectionPool.open(SQLiteConnectionPool.java:211)\r\n       at android.database.sqlite.SQLiteDatabase.openInner(SQLiteDatabase.java:947)\r\n       at android.database.sqlite.SQLiteDatabase.open(SQLiteDatabase.java:926)\r\n       at android.database.sqlite.SQLiteDatabase.openDatabase(SQLiteDatabase.java:790)\r\n       at android.database.sqlite.SQLiteDatabase.openDatabase(SQLiteDatabase.java:779)\r\n       at android.database.sqlite.SQLiteOpenHelper.getDatabaseLocked(SQLiteOpenHelper.java:403)\r\n       at android.database.sqlite.SQLiteOpenHelper.getReadableDatabase(SQLiteOpenHelper.java:356)\r\n       at com.google.android.exoplayer2.upstream.cache.CachedContentIndex$DatabaseStorage.exists(CachedContentIndex.java:776)\r\n       at com.google.android.exoplayer2.upstream.cache.CachedContentIndex.initialize(CachedContentIndex.java:192)\r\n       at com.google.android.exoplayer2.upstream.cache.SimpleCache.initialize(SimpleCache.java:548)\r\n       at com.google.android.exoplayer2.upstream.cache.SimpleCache.access$000(SimpleCache.java:50)\r\n       at com.google.android.exoplayer2.upstream.cache.SimpleCache$1.run(SimpleCache.java:268)\r\n\r\n```\r\n### [REQUIRED] Version of ExoPlayer being used\r\n2.11.5\r\n\r\n### [REQUIRED] Device(s) and version(s) of Android being used\r\nReported on Android versions 7 - 10\r\nHuawei: nova 5T / p30 / p30 lite\r\nSamsung: Galaxy A7\r\nLGE: Stylo 5 / K51  ",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8251/comments",
    "author": "frushlabo",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2020-11-24T15:02:11Z",
        "body": "Yes, please upload a bug report if you have one. The stack trace shows the failure happens in `setLocaleFromConfiguration` and `nativeRegisterLocalizedCollators`. Not sure if this is really something to cause problems, but it may be dependent with some locales or changes of that. So when you are seeing the error on a device it would be interesting if it is really 'device specific' as opposed to 'locale specific'. I think it would not surprise me if you find it is working on some of the devices you mention above as well. A bug report would probably help us seeing what localizations the problematic devices have.\r\n\r\nBesides: Are you using a specific DatabaseProvider that you pass to the constructor of the `SimpleCache`?"
      },
      {
        "user": "marcbaechinger",
        "created_at": "2020-11-24T23:24:58Z",
        "body": "I think I was able to reproduce this. As I was guessing it has to do with a locale that is set wrongly manually by my code.\r\n\r\nI flashed a Pixel device with Android Oreo and added the following in the 'Application' class that is executed right at the start of the ExoPlayer demo application:\r\n\r\n```\r\nLocale locale = new Locale(\"русский\");\r\nLocale.setDefault(locale);\r\nConfiguration config = new Configuration();\r\nconfig.locale = locale;\r\ngetBaseContext().getResources().updateConfiguration(config, null);\r\n```\r\n\r\nWhen I then try to install the app it fails with the following exception that is exactly what you reported:\r\n\r\n```\r\n2020-11-24 23:12:57.075 16425-16460/com.google.android.exoplayer2.demo E/SQLiteDatabase: Failed to open database '/data/user/0/com.google.android.exoplayer2.demo/databases/exoplayer_internal.db'.\r\n    android.database.sqlite.SQLiteException: not an error (code 0)\r\n        at android.database.sqlite.SQLiteConnection.nativeRegisterLocalizedCollators(Native Method)\r\n        at android.database.sqlite.SQLiteConnection.setLocaleFromConfiguration(SQLiteConnection.java:362)\r\n        at android.database.sqlite.SQLiteConnection.open(SQLiteConnection.java:219)\r\n        at android.database.sqlite.SQLiteConnection.open(SQLiteConnection.java:194)\r\n        at android.database.sqlite.SQLiteConnectionPool.openConnectionLocked(SQLiteConnectionPool.java:493)\r\n        at android.database.sqlite.SQLiteConnectionPool.open(SQLiteConnectionPool.java:200)\r\n        at android.database.sqlite.SQLiteConnectionPool.open(SQLiteConnectionPool.java:192)\r\n        at android.database.sqlite.SQLiteDatabase.openInner(SQLiteDatabase.java:864)\r\n        at android.database.sqlite.SQLiteDatabase.open(SQLiteDatabase.java:849)\r\n        at android.database.sqlite.SQLiteDatabase.openDatabase(SQLiteDatabase.java:724)\r\n        at android.database.sqlite.SQLiteDatabase.openDatabase(SQLiteDatabase.java:714)\r\n        at android.database.sqlite.SQLiteOpenHelper.getDatabaseLocked(SQLiteOpenHelper.java:295)\r\n        at android.database.sqlite.SQLiteOpenHelper.getReadableDatabase(SQLiteOpenHelper.java:262)\r\n        at com.google.android.exoplayer2.upstream.cache.CachedContentIndex$DatabaseStorage.exists(CachedContentIndex.java:799)\r\n        at com.google.android.exoplayer2.upstream.cache.CachedContentIndex.initialize(CachedContentIndex.java:201)\r\n        at com.google.android.exoplayer2.upstream.cache.SimpleCache.initialize(SimpleCache.java:580)\r\n        at com.google.android.exoplayer2.upstream.cache.SimpleCache.access$000(SimpleCache.java:49)\r\n        at com.google.android.exoplayer2.upstream.cache.SimpleCache$1.run(SimpleCache.java:268)\r\n```\r\n\r\nThis does not happen without the code that programmatically set the locale with the cyrillic letters for 'Russian' (русский). It also does not happen when I switch the device to the Russian language in the Android settings only. When I do the same on Android 10/11 it works fine. I see a stack trace there as well but it does not crash.\r\n\r\nFrom this I actually think this is an app problem rather than a problem with the ExoPlayer library or the SQLite version on an OS version.\r\n\r\nI wonder whether your app has some functionality to change the language and does something similar like the code snippet I use above. Probably constructing a Locale with a language that is not ASCII or the like. Can you check whether this is the case? I see the same when I run it on an emulator with API 25. Can I ask you to run your app on the emulator with API 25 for testing? \r\n "
      },
      {
        "user": "marcbaechinger",
        "created_at": "2020-12-21T20:20:10Z",
        "body": "Closing due to inactivity."
      }
    ]
  },
  {
    "number": 8243,
    "title": "Exoplayer in viewpager2 with offscreen limit buffers in background",
    "created_at": "2020-11-18T02:26:27Z",
    "closed_at": "2020-12-18T17:13:41Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8243",
    "body": "We are using exoplayer inside a viewpager 2 fragment. we have defined off set screen limit to 2. While initialising the player we are setting `playwhenready = false `we have defined max buffer ms as 3. We expected video on position 1 and 2 to have buffered max of 3 sec, However the players in position 1 and 2 while user is at 0th position is buffering more than defined time and sometimes entire video is cached if video is around 1mb in size. \r\n\r\n```\r\nconst val DEFAULT_MIN_BUFFER_MS = 500\r\nconst val DEFAULT_MAX_BUFFER_MS = 3000\r\nconst val DEFAULT_MIN_BUFFER_FOR_PLAY_BACK = 500\r\nconst val DEFAULT_MIN_BUFFER_AFTER_REBUFFER = 500\r\n```\r\n  ```\r\n  var player = SimpleExoPlayer.Builder(Mitron.getContext(), DefaultRenderersFactory(Mitron.getContext()))\r\n                    .setLoadControl(\r\n                            DefaultLoadControl.Builder()\r\n                                    .setPrioritizeTimeOverSizeThresholds(false)\r\n                                    .setBufferDurationsMs(\r\n                                            Constants.DEFAULT_MIN_BUFFER_MS,\r\n                                            Constants.DEFAULT_MAX_BUFFER_MS,\r\n                                            Constants.DEFAULT_MIN_BUFFER_FOR_PLAY_BACK,\r\n                                            Constants.DEFAULT_MIN_BUFFER_AFTER_REBUFFER\r\n                                    )\r\n                                    .createDefaultLoadControl()\r\n                    )\r\n                    .setTrackSelector(DefaultTrackSelector())\r\n                    .build()\r\n            player.playWhenReady = false\r\n            binding?.playerview?.useController = true\r\n            binding?.playerview?.setKeepContentOnPlayerReset(true)\r\n            var cacheKey = if (videoModel?.video_url?.contains(\"?\") == true) {\r\n                videoModel?.video_url?.substring(0, videoModel?.video_url?.lastIndexOf(\"?\") ?: 1)\r\n            } else {\r\n                videoModel?.video_url\r\n            }\r\n            val mediaSource =\r\n                    ProgressiveMediaSource.Factory(CacheUtils.cacheDataSourceFactory)\r\n                            .setCustomCacheKey(cacheKey).createMediaSource(Uri.parse(videoModel?.video_url))\r\n            player.prepare(mediaSource)\r\n            binding?.playerview?.player = player\r\n```\r\n ```\r\n for_you_pager.setOffscreenPageLimit(2);\r\n for_you_pager.registerOnPageChangeCallback(forYouPagerListener);\r\n for_you_pager.setAdapter(forYoupagerAdapter);\r\n for_you_pager.setPageTransformer(new ParallaxTransformer());\r\n```",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8243/comments",
    "author": "Arunkarthicknallasami",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2020-12-17T16:48:37Z",
        "body": "Sorry for the delay in answering your question, I didn't realize I was assigned to the issue.\r\n\r\n`ProgressiveMediaSource` loads the data in chunks of a certain byte size before checking whether loading should continue. The default size of these chunks is 1 MB, so that's why we always load 1 MB even though it may be more than your configured max buffer duration in seconds. \r\n\r\nIf you want to check more often, you can call `setContinueLoadingCheckIntervalBytes` on `ProgressiveMediaSource.Factory` and specify any number you want. Note that this comes with a small pause in loading, so you shouldn't choose this chunk size too small to avoid stalling the loading process too much."
      },
      {
        "user": "Arunkarthicknallasami",
        "created_at": "2020-12-18T08:25:44Z",
        "body": "Thanks"
      },
      {
        "user": "tonihei",
        "created_at": "2020-12-18T17:13:41Z",
        "body": "Closing the issue because the question was answered."
      }
    ]
  },
  {
    "number": 8226,
    "title": "How can I get  the pts int TS or MP4 ",
    "created_at": "2020-11-16T01:48:48Z",
    "closed_at": "2021-09-06T18:00:21Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8226",
    "body": "I want to get the PTS of the currently rendered video frame.\r\nHoe  can I get  it?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8226/comments",
    "author": "arlimm318",
    "comments": [
      {
        "user": "icbaker",
        "created_at": "2020-11-16T10:35:14Z",
        "body": "You can register a `VideoFrameMetadataListener` with `SimpleExoPlayer#setVideoFrameMetadataListener()` - this will give you a `onVideoFrameAboutToBeRendered` callback for each frame."
      },
      {
        "user": "arlimm318",
        "created_at": "2020-11-17T05:50:28Z",
        "body": "yes，But the presentationTimeUs in VideoFrameMetadataListener  isn't the PTS in PES packet.\r\nI want raw PTS in video from the video.\r\n"
      },
      {
        "user": "arlimm318",
        "created_at": "2020-11-17T05:53:56Z",
        "body": "I want to know whether the playback progress of the two different streams is consistent by comparing PTS, and the video source of the two streams is consistent."
      },
      {
        "user": "AquilesCanta",
        "created_at": "2020-11-17T12:01:27Z",
        "body": "Is this in the context of HLS or is it just a TS/MP4 file you are playing?"
      },
      {
        "user": "arlimm318",
        "created_at": "2020-11-17T14:40:10Z",
        "body": "udp stream  or  http stream"
      },
      {
        "user": "ojw28",
        "created_at": "2021-09-06T18:00:21Z",
        "body": "ExoPlayer does not expose the underlying MPEG-2 PTS timestamps. Without a clear motivating use case, this isn't a feature we'll be adding support for. Closing this for now because no use case has been stated."
      }
    ]
  },
  {
    "number": 8219,
    "title": "Unexpected fallback behaviour in DefaultHlsExtractorFactory",
    "created_at": "2020-11-13T14:30:03Z",
    "closed_at": "2020-11-17T13:53:31Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8219",
    "body": "### Issue description\r\nSince v2.12.0 the `DefaultHlsExtractorFactory` seems to always fall back to a `TsExtractor` if the fed in stream is not compatible with any other extractor. However, this fallback behaviour ignores the `inferred type` of the stream.\r\n\r\nThe problem here is that even if the inferred type would fit the `fmp4Extractor` it will fall back to the `TsExtractor` when the branches in the fmp4 stream are not explicitly supported by the extractor. (in v2.12.0 you changed the logic to actually sniff the assets and detect such incompatibilities)  \r\n\r\nI think this can be considered a bug, in that particular case a `fmp4Extractor` might be still able to play back the asset.. at least it has a higher chance than the `TsExtractor`.\r\n\r\n### Reproduction steps\r\nLoad a fmp4 HLS asset with a by the Fmp4Extractor unsupported branch e.g. `iso9`\r\n\r\n### Link to test content\r\nSend via email.\r\n\r\n### A full bug report captured from the device\r\n```\r\ncom.google.android.exoplayer2.ExoPlaybackException: Source error\r\n        at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:552)\r\n        at android.os.Handler.dispatchMessage(Handler.java:103)\r\n        at android.os.Looper.loop(Looper.java:214)\r\n        at android.os.HandlerThread.run(HandlerThread.java:67)\r\n     Caused by: com.google.android.exoplayer2.ParserException: Cannot find sync byte. Most likely not a Transport Stream.\r\n        at com.google.android.exoplayer2.extractor.ts.TsExtractor.findEndOfFirstTsPacketInBuffer(TsExtractor.java:416)\r\n        at com.google.android.exoplayer2.extractor.ts.TsExtractor.read(TsExtractor.java:284)\r\n        at com.google.android.exoplayer2.source.hls.BundledHlsMediaChunkExtractor.read(BundledHlsMediaChunkExtractor.java:67)\r\n```\r\n\r\n### Version of ExoPlayer being used\r\n`2.12.0` and `2.12.1`\r\n\r\n### Device(s) and version(s) of Android being used\r\nDon't think that is very relevant, as it is concretely about changes in the `DefaultHlsExtractorFactory`, but tested on an emulator with API 27 and a OnePlus 5T API 29\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8219/comments",
    "author": "matamegger",
    "comments": [
      {
        "user": "matamegger",
        "created_at": "2020-11-13T14:34:26Z",
        "body": "I did file this as an issue, though as an external it could be also a question on if this fallback behaviour was intended in the first place."
      },
      {
        "user": "kim-vde",
        "created_at": "2020-11-16T08:32:38Z",
        "body": "Can you please send a test content for which the error occurs? If you're unable to share bug reports or test content publicly, please send them to dev.exoplayer@gmail.com using subject \"Issue #8219\"."
      },
      {
        "user": "matamegger",
        "created_at": "2020-11-16T08:52:50Z",
        "body": "I already send the test content when I opened the issue. Let me know if something is missing."
      },
      {
        "user": "kim-vde",
        "created_at": "2020-11-17T09:57:21Z",
        "body": "Ah yes, sorry.\r\n\r\nIf no extractor recognizes the media file, a better fix is to change the extractors or the media file directly in order to solve this problem instead of hoping that the extractor corresponding to the file extension will work (particularly for MP4 files for which there are 2 possible extractors: Mp4Extractor and FragmentedMp4Extractor). This is what sniffing is for.\r\n\r\nIn the case of the content you provided, the FragmentedMp4Extractor is capable of reading it but does not recognize it in the sniffing step because it has brand `iso9` which is not supported. According to annex E of ISO/IEC 14496-12:2015, readers are required to implement all features documented for a brand and we can therefore not add brand `iso9` to the list of supported brands because we do not parse the iso7-9 boxes (`elng`, `sthd`, `trep` and `assp`). To fix the problem, you should add brand `iso6` to claim that readers supporting this brand can read your content (particularly as your content doesn't contain the iso7-9 boxes)."
      },
      {
        "user": "matamegger",
        "created_at": "2020-11-17T10:45:45Z",
        "body": "Thanks for your investigation. I am aware of this particular situation and I totally agree that the stream should refer the correct supported branches and that sniffing the streams in the first place is a better way, than just using the inferred type.\r\nI have to admit, I did forgot about the non-fragmented mp4 extractor in that manner.\r\n\r\nI don't think that always using the `TsExtractor` as \"fallback\" is a nice solution. I get the point with mp4 and fmp4, but even for that it would be a \"better\" fallback to use the fmp4 extractor, as we do not expect any non-fragmented mp4 in that context.\r\nUsing the `TsExtractor` as fallback for every filetype seems quite random. (Maybe you have some insights on that decision).\r\n\r\n\r\n_Through the conversation, this issue is maybe no longer a \"bug\", but rather \"just\" an improvement_"
      },
      {
        "user": "kim-vde",
        "created_at": "2020-11-17T11:21:47Z",
        "body": "The choice for TsExtractor is actually not random. It allows us to handle a specific case where we know sniffing will fail. This occurs when the TS initialization data is provided through an EXT-X-MAP tag. This initialization data consists of a PAT table followed by a PMT table. The TsExtractor will fail sniffing because it searches for 5 packets and will only find 2 in this case.\r\n\r\nFixing the sniffing algorithm for that case would of course be a better solution, but it is not easy to do because the TS packets signature is only one byte long. Reducing the number of packets checked during sniffing to 2 would therefore result in high chances of false positives (i.e. `sniff()` returns true for non TS data)."
      },
      {
        "user": "AquilesCanta",
        "created_at": "2020-11-17T11:28:23Z",
        "body": "My two cents. Falling back to TsExtractor has historic reasons (for example, #4033), and even though I agree falling back according to the extension is a reasonable improvement, there may be people relying on that mechanism now.\r\n\r\nI would suggest considering the use of a custom extractor factory (which potentially wraps or forks the default one) so that you can use the fallback strategy you prefer until we are able to handle your usecase correctly in the library."
      },
      {
        "user": "kim-vde",
        "created_at": "2020-11-17T11:42:43Z",
        "body": "Regarding the content you provided: according to annex E of ISO/IEC 14496-12:2015, the brands in the input file serve as a permission to the reader to read the file. If a reader supports iso2-6 only, a file with brand iso9 only indicates that the reader shouldn't attempt to play the file. So I am not sure it is an improvement to fall back to the FragmentedMp4Extractor in this specific case."
      },
      {
        "user": "matamegger",
        "created_at": "2020-11-17T11:48:21Z",
        "body": "I see. Thanks for the insights.\r\n> I would suggest considering the use of a custom extractor factory (which potentially wraps or forks the default one) so that you can use the fallback strategy you prefer until we are able to handle your usecase correctly in the library.\r\n\r\nSound very reasonable.\r\n\r\n> Regarding the content you provided: according to annex E of ISO/IEC 14496-12:2015, the brands in the input file serve as a permission to the reader to read the file. If a reader supports iso2-6 only, a file with brand iso9 only indicates that the reader shouldn't attempt to play the file. So I am not sure it is an improvement to fallback to the FragmentedMp4Extractor in this specific case.\r\n\r\nWell, \"improvement\".. taking just some other extractor seems more \"wrong\" than using at least the type specific one.\r\nBut I see all the points. Also given the history background and that real improvements would require a lot more structural changes.\r\n\r\nThanks for your feedback and time! From my side this can be closed :) "
      }
    ]
  },
  {
    "number": 8185,
    "title": "Why the DefaultRenderersFactory's enableDecoderFallback is false by default?",
    "created_at": "2020-11-09T07:21:48Z",
    "closed_at": "2020-11-10T06:35:32Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8185",
    "body": "### [REQUIRED] Question\r\nHello. Is there a reason why the DefaultRenderersFactory's setEnableDecoderFallback is set to false by default?\r\n\r\nI have AB tested and analyzed the Boolean values at 50/50 and it doesn't seem to have any effect on JoinTime or anything else. Does it have a negative impact on performance?\r\n\r\nApart from that, interestingly enough, AndroidTV improved 99.9% of sessions on AndroidTV.\r\n\r\nI was curious, so I felt free to ask about it. Best regards.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8185/comments",
    "author": "Gumio",
    "comments": [
      {
        "user": "kim-vde",
        "created_at": "2020-11-09T15:59:25Z",
        "body": "Using a lower-priority decoder if the best suited decoder initialization fails is not an expected default behaviour. Playback will continue without throwing any error, while there was something wrong in the decoder initialization.\r\n\r\nAs for performance, it depends on what you do if the decoder fails (and on what you mean exactly by performance):\r\n- If you retry, then it is probably best not to fallback on a lower-priority decoder because your retry might succeed.\r\n- If you don't retry, then it is probably best to fallback on a lower-priority decoder because it will allow you to continue playback.\r\n\r\nFrom a time and space complexity point of view, performance shouldn't be affected by this parameter. Enabling it will just try the next decoder instead of throwing."
      },
      {
        "user": "Gumio",
        "created_at": "2020-11-10T06:35:32Z",
        "body": "Thank u! I understand."
      }
    ]
  },
  {
    "number": 8177,
    "title": "[Widevine-DASH] Check Chunks info getting Played",
    "created_at": "2020-11-06T17:04:53Z",
    "closed_at": "2020-12-23T23:31:45Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8177",
    "body": "I checked the onChunkLoadCompleted in the DefaultDashChunkSource class. Is there any way I can get callback to check chunk that is being played\r\n\r\n### [REQUIRED] Question\r\nI am playing DASH Content with Widevine and the buffering time is pretty much more than usual. I need to check which chunk is getting more time in getting load. Is there any way I can get the chunk URL information that is being played\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8177/comments",
    "author": "Taranlayal10",
    "comments": [
      {
        "user": "Taranlayal10",
        "created_at": "2020-11-11T08:08:24Z",
        "body": "Hi @ojw28 \r\n\r\nRequest your attention. Its little bit urgent to debug this."
      },
      {
        "user": "ojw28",
        "created_at": "2020-12-23T23:31:45Z",
        "body": "> Is there any way I can get the chunk URL information that is being played\r\n\r\nThere isn't an easy way to get this directly from the player. That said, the player gives you both the playback position, and the manifest (by calling `Player.getCurrentManifest`). It should be possible for you to work out which chunk in the manifest the playback position corresponds to.\r\n\r\nAside from the direct answer above, it's quite unclear whether what you're asking for is really what you need. If you want to identify where chunks are loading slower than expected, the currently playing chunk isn't what you should be looking at. Instead, try implementing an `AnalyticsListener`, registering it to the player (`SimpleExoPlayer.addAnalyticsListener`) and implementing the `AnalyticsListener.onLoadCompleted` method. You get _lots_ of information about each load via that method, including how long it took (`loadEventInfo.loadDurationMs`), the chunk start and end time (`mediaLoadData.mediaStartTimeMs`, `mediaLoadData.mediaEndTimeMs`), the chunk URL (`loadEventInfo.dataSpec.uri`) and so on. This information should be sufficient for you to identify loads that are taking longer than expected. I'd suggest carefully reading the Javadoc for `LoadEventInfo` and `MediaLoadData` to see exactly what data is available."
      }
    ]
  },
  {
    "number": 8172,
    "title": "CacheEvictionListener",
    "created_at": "2020-11-06T04:13:02Z",
    "closed_at": "2020-11-09T09:14:12Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8172",
    "body": "Is there any callbacks for listening to cache eviction? Like when something is being removed from cache we shall observe which item is being removed.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8172/comments",
    "author": "Arunkarthicknallasami",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2020-11-06T19:30:04Z",
        "body": "You can listen to the changes of a given resource by using `Cache.addListener(String key, Listener listener)`\r\n\r\n```\r\n/**\r\n   * Registers a listener to listen for changes to a given resource.\r\n   *\r\n   * <p>No guarantees are made about the thread or threads on which the listener is called, but it\r\n   * is guaranteed that listener methods will be called in a serial fashion (i.e. one at a time) and\r\n   * in the same order as events occurred.\r\n   *\r\n   * @param key The cache key of the resource.\r\n   * @param listener The listener to add.\r\n   * @return The current spans for the resource.\r\n   */\r\n  NavigableSet<CacheSpan> addListener(String key, Listener listener);\r\n```"
      },
      {
        "user": "Arunkarthicknallasami",
        "created_at": "2020-11-09T09:14:43Z",
        "body": "Thanks"
      }
    ]
  },
  {
    "number": 8158,
    "title": "Which callback is getting triggered when Ads are requested ?",
    "created_at": "2020-11-03T20:48:13Z",
    "closed_at": "2020-12-14T13:03:47Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8158",
    "body": "### Searched documentation and issues\r\nN/A\r\n\r\n### Question\r\n\r\nIs there a way from where I can get `com.google.ads.interactivemedia.v3.api.AdsLoader` instance? \r\n\r\nI am using ImaAdsLoader.getAdsLoader() but this could be null if the ads are not requested.\r\n\r\nI am looking for a callback which tells me ads are requested so that I can query `com.google.ads.interactivemedia.v3.api.AdsLoader` instance to attach `AdsLoader.AdsLoadedListener`.\r\n\r\nCurrently, I am using something like _(just introducing bit of a delay hoping ads will get requested)_,\r\n\r\n```java\r\n new Handler().postDelayed(() -> {\r\n            if (adsLoader.getAdsLoader() != null) {\r\n                adsLoader.getAdsLoader().addAdsLoadedListener(this);\r\n                adsLoader.getAdsLoader().addAdErrorListener(adErrorEvent -> {\r\n                    // do something\r\n                });\r\n                log.d(TAG, \"Ads analytics listeners are attached.\");\r\n            } else {\r\n                log.e(TAG, \"Ads Loader is Null; Ads are not requested yet.\");\r\n            }\r\n        }, 200 /* To fix the issue where AdsLoader is null until ads are requested */);\r\n```\r\n\r\nExoPlayer version: 2.12.1\r\n\r\n### A full bug report captured from the device\r\nN/A\r\n\r\n### Link to test content\r\nN/A\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8158/comments",
    "author": "nishantkp",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2020-11-06T16:26:05Z",
        "body": "If you attach a player event listener and listen for `onTimelineChanged`, you can check the ad group count for the period becoming non-zero. Something like this:\r\n\r\n```\r\nHandler handler = new Handler(Looper.getMainLooper());\r\nplayer.addListener(\r\n    new Player.EventListener() {\r\n      private boolean seenAdsLoader;\r\n\r\n      @Override\r\n      public void onTimelineChanged(Timeline timeline, int reason) {\r\n        if (!seenAdsLoader\r\n            && reason == Player.TIMELINE_CHANGE_REASON_SOURCE_UPDATE\r\n            && timeline.getPeriod(/* periodIndex= */ 0, new Timeline.Period()).getAdGroupCount()\r\n                > 0) {\r\n          seenAdsLoader = true;\r\n          handler.post(\r\n              () -> Log.w(\"DEBUG\", \"Ads loader: \" + imaAdsLoader.getAdsLoader()));\r\n        }\r\n      }\r\n    });\r\n```\r\n\r\nSome notes/caveats:\r\n- I think the posting to the main thread is not actually necessary in the current release but will be needed in future to ensure that the `AdsMediaSource` handles the timeline change event before the call to `getAdsLoader`, as the way this works in `ImaAdsLoader` is going to change soon.\r\n- This snippet only works if the ad tag loaded is non-empty.\r\n- As you can see, this is not very convenient at the moment. I would be grateful to hear more about what you need the ads loader for so we can see if there is an easier way to do it without needing to access the IMA SDK `AdsLoader` instance."
      },
      {
        "user": "nishantkp",
        "created_at": "2020-11-09T15:32:58Z",
        "body": "Hi @andrewlewis ,\r\n\r\nI need IMA SDK ’s `AdsLoader.AdsLoadedListener` is for querying `com.google.ads.interactivemedia.v3.api.AdsManager` on `onAdsManagerLoaded(AdsManagerLoadedEvent event)` callback  from `AdsManagerLoadedEvent`. \r\n\r\nAfter I get AdsManager, I use `AdsManager.addAdEventListener` to get notified for different types of ad events. Then these events are used for controlling ads volume programmatically, skipping pre-rolls/mid-rolls for resuming a video from history position (depending upon playhead position), analytics (ad-pod/ad info, ad start/completete events), adjust aspect ratio between `AspectRatioFrameLayout.RESIZE_MODE_FIT` and `AspectRatioFrameLayout.RESIZE_MODE_ZOOM` depending upon user preference and ad playback (adjust to default aspect ratio regardless of user preference), controlling control rack visibility (show/hide depending on the user tap)\r\n\r\nSomething like this, \r\n```java\r\n @Override\r\n public void onAdsManagerLoaded(@NonNull AdsManagerLoadedEvent adsManagerLoadedEvent) {\r\n         AdsManager adsManager = adsManagerLoadedEvent.getAdsManager();\r\n         adsManager.addAdEventListener(adEvent -> {\r\n            if (adsManager != null) {\r\n                switch (adEvent.getType()) {\r\n                    case TAPPED:\r\n                        break;\r\n                    case AD_BREAK_STARTED:\r\n                        break;\r\n                    case AD_BREAK_ENDED:\r\n                        break;\r\n                    case STARTED:\r\n                        break;\r\n                    case PAUSED:\r\n                        break;\r\n                    case COMPLETED:\r\n                        break;\r\n                    case CONTENT_RESUME_REQUESTED:\r\n                        break;\r\n                    case CONTENT_PAUSE_REQUESTED:\r\n                        break;\r\n                    case LOG:\r\n                        break;\r\n                    case SKIPPED:\r\n                        break;\r\n                    case CLICKED:\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n        });\r\n    }\r\n```"
      },
      {
        "user": "andrewlewis",
        "created_at": "2020-12-14T13:03:47Z",
        "body": "@nishantkp I think you should be able to attach a listener via `ImaAdsLoader.Builder.setAdEventListener`.\r\n\r\nFor what it's worth, I think there are equivalents for almost all of the things you are trying to do, though:\r\n\r\n> controlling ads volume programmatically\r\n\r\nYou can query `player.isPlayingAd` after a position discontinuity event from the player and set volume accordingly.\r\n\r\n> skipping pre-rolls/mid-rolls for resuming a video from history position (depending upon playhead position)\r\n\r\nIf you seek before preparing the player, ads before the start position are skipped. `ImaAdsLoader.setPlayAdBeforeStartPosition(false)` can be used to skip the first ad that would play (if any). If you need to skip ads with finer granularity that isn't supported for video ads at the moment (`skipAd` is intended for audio ads, and we don't expose `discardAdBreak`).\r\n\r\n> analytics (ad-pod/ad info, ad start/completete events)\r\n\r\nAlthough ad info from IMA is missing, if you just want to log playback of ads starting/finishing there should be enough information in ExoPlayer's `AnalyticsListener`.\r\n\r\n> adjust aspect ratio between AspectRatioFrameLayout.RESIZE_MODE_FIT and AspectRatioFrameLayout.RESIZE_MODE_ZOOM depending upon user preference and ad playback (adjust to default aspect ratio regardless of user preference), controlling control rack visibility (show/hide depending on the user tap)\r\n\r\nSimilar to the first item above, the main requirement for the event is to tell when ads start/stop playing, which can be done via position discontinuity events from the player.\r\n\r\nI'll close this issue now given that it's possible to attach an ad event listener. Thanks!"
      }
    ]
  },
  {
    "number": 8153,
    "title": "Caching S3 signed url",
    "created_at": "2020-11-03T12:05:40Z",
    "closed_at": "2020-11-04T06:12:56Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8153",
    "body": "I have implemented pre-caching and it works for unsigned url's. However when s3 signed urls are used it cache's it as new video everytime when loaded instead of loading from cache if cached already (s3 signed url changes on every request but video id on the url will remain the same)\r\n\r\nAny help?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8153/comments",
    "author": "Arunkarthicknallasami",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2020-11-03T12:32:07Z",
        "body": "Are you using progressive media streams? Does it help to use `DownloadRequest.Builder.setCustomCacheKey`?\r\n\r\nIf you are using the downloader there is support for customCacheKey as well: `ProgressiveDownloader(Uri uri, @Nullable String customCacheKey, CacheDataSource.Factory cacheDataSourceFactory)`"
      },
      {
        "user": "Arunkarthicknallasami",
        "created_at": "2020-11-03T13:34:29Z",
        "body": "Yes we use mp4 and we use caching and the code is as follows\r\n\r\n```\r\nclass CacheUtils {\r\n    var cacheDataSourceFactory: CacheDataSourceFactory?=null\r\n    var simpleCache: SimpleCache?=null\r\n    init {\r\n        simpleCache = Mitron.simpleCache\r\n\r\n        cacheDataSourceFactory = CacheDataSourceFactory(\r\n            simpleCache,\r\n            DefaultHttpDataSourceFactory(Mitron.getContext()?.let {\r\n                Util.getUserAgent(\r\n                    it,\"Playback\")\r\n            })\r\n        )\r\n    }\r\n}\r\n```\r\n\r\n ```\r\n@JvmStatic\r\n    @BindingAdapter(value = [\"app:video_url\",\"app:eventListener\"],requireAll = true)\r\n    fun PlayerView.loadVideo(url: String?,playerEventListener: Player.EventListener?) {\r\n        try {\r\n            if (url == null) return\r\n            var player = SimpleExoPlayer.Builder(Mitron.getContext(), DefaultRenderersFactory(Mitron.getContext()))\r\n                    .setLoadControl(\r\n                            DefaultLoadControl.Builder()\r\n                                    .setPrioritizeTimeOverSizeThresholds(false)\r\n                                    .setBufferDurationsMs(\r\n                                            Constants.DEFAULT_MIN_BUFFER_MS,\r\n                                            Constants.DEFAULT_MAX_BUFFER_MS,\r\n                                            Constants.DEFAULT_MIN_BUFFER_FOR_PLAY_BACK,\r\n                                            Constants.DEFAULT_MIN_BUFFER_AFTER_REBUFFER\r\n                                    )\r\n                                    .createDefaultLoadControl()\r\n                    )\r\n                    .setTrackSelector(DefaultTrackSelector())\r\n                    .build()\r\n            player.playWhenReady = true\r\n            setKeepContentOnPlayerReset(true)\r\n            this.useController = true\r\n            val mediaSource =\r\n                    ProgressiveMediaSource.Factory(CacheUtils().cacheDataSourceFactory).createMediaSource(Uri.parse(url))\r\n            player.prepare(mediaSource)\r\n            this.player = player\r\n            playerEventListener?.let {\r\n                player.addListener(playerEventListener)\r\n            }\r\n        }catch (e:Exception){\r\n          Log.e(\"Error\",\"Error on binding url to player\")\r\n        }\r\n\r\n    }\r\n```\r\n\r\n```\r\n  private fun preCacheVideo() {\r\n        try {\r\n            var videoUrl: String? = null\r\n            if (!videosList.isNullOrEmpty()) {\r\n                videoUrl = videosList?.get(0)\r\n                videosList?.removeAt(0)\r\n            }\r\n            if (!videoUrl.isNullOrBlank() && !videoUrl.isNullOrEmpty()) {\r\n                val dataSpec =\r\n                        DataSpec(Uri.parse(videoUrl), 0, getFileMetaData(videoUrl), null)\r\n                val defaultCacheKeyFactory = CacheUtil.DEFAULT_CACHE_KEY_FACTORY\r\n                val progressListener =\r\n                        CacheUtil.ProgressListener { requestLength, bytesCached, newBytesCached ->                 \r\n                        }\r\n                val dataSource: DataSource =\r\n                        DefaultDataSourceFactory(\r\n                                context,\r\n                                Util.getUserAgent(context, \"Playback\")\r\n                        ).createDataSource()\r\n\r\n                cachingJob = GlobalScope.launch(Dispatchers.IO) {\r\n                    cacheVideo(dataSpec, defaultCacheKeyFactory, dataSource, progressListener)\r\n                    preCacheVideo()\r\n                }\r\n            }\r\n        } catch (e: Exception) {\r\n            Log.e(\"Error caching\", \"Error $e\")\r\n        }\r\n```"
      },
      {
        "user": "marcbaechinger",
        "created_at": "2020-11-03T13:55:28Z",
        "body": "I think that should work if `CacheUtil.DEFAULT_CACHE_KEY_FACTORY` takes care to create the same `customCacheKey` for the urls that point to the same 'video id' and all cache data sources that are involved when downloading and doing playback use the same custom cache key factory.  Can you verify this is the case?"
      },
      {
        "user": "Arunkarthicknallasami",
        "created_at": "2020-11-03T14:14:37Z",
        "body": "I will verify it for sure but i did notice video being downloaded again and i could see download progress for already cached videos when app is closed and reopened (New signed url will be obtained on ropening)"
      },
      {
        "user": "marcbaechinger",
        "created_at": "2020-11-03T15:05:27Z",
        "body": "I think if the `customCacheKey` matches that should not happen. Probably start your review with your `CacheUtil` class where a `CacheDataSourceFactory` is created without a cache key factory as far as I can see. "
      },
      {
        "user": "Arunkarthicknallasami",
        "created_at": "2020-11-03T15:24:37Z",
        "body": "Alright let me start from there and keep u updated"
      },
      {
        "user": "Arunkarthicknallasami",
        "created_at": "2020-11-04T06:12:56Z",
        "body": "```\r\n var cacheKey = if (url.contains(\"?\")) {\r\n                url.substring(0, url.lastIndexOf(\"?\"))\r\n            } else {\r\n                url\r\n            }\r\n            val mediaSource =\r\n                    ProgressiveMediaSource.Factory(CacheUtils().cacheDataSourceFactory)\r\n                            .setCustomCacheKey(cacheKey).createMediaSource(Uri.parse(url))\r\n            player.prepare(mediaSource)\r\n```\r\n```\r\n\r\ntry {\r\n            var videoUrl: String? = null\r\n            if (!videosList.isNullOrEmpty()) {\r\n                videoUrl = videosList?.get(0)\r\n                videosList?.removeAt(0)\r\n            }\r\n            if (!videoUrl.isNullOrBlank() && !videoUrl.isNullOrEmpty()) {\r\n                var cacheKey = if (videoUrl.contains(\"?\")) {\r\n                    videoUrl.substring(0, videoUrl.lastIndexOf(\"?\"))\r\n                } else {\r\n                    videoUrl\r\n                }\r\n                val dataSpec =\r\n                        DataSpec(Uri.parse(videoUrl), 0, getFileMetaData(videoUrl), cacheKey)\r\n                val defaultCacheKeyFactory = CacheKeyFactory { dataSpec ->\r\n                    dataSpec.key\r\n                }\r\n                val progressListener =\r\n                        CacheUtil.ProgressListener { requestLength, bytesCached, newBytesCached ->\r\n                          \r\n                        }\r\n                val dataSource: DataSource =\r\n                        DefaultDataSourceFactory(\r\n                                context,\r\n                                Util.getUserAgent(context, \"Playback\")\r\n                        ).createDataSource()\r\n                cachingJob = GlobalScope.launch(Dispatchers.IO) {\r\n                    cacheVideo(dataSpec, defaultCacheKeyFactory, dataSource, progressListener)\r\n                    preCacheVideo()\r\n                }\r\n            }\r\n        } catch (e: Exception) {\r\n            Log.e(\"Error caching\", \"Error $e\")\r\n        }\r\n\r\n```\r\nSo i used url of video without signing as key and it works."
      }
    ]
  },
  {
    "number": 8151,
    "title": "How to support L1 widevine drm using exoplayer",
    "created_at": "2020-11-03T08:06:00Z",
    "closed_at": "2021-01-11T19:04:28Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8151",
    "body": "### [REQUIRED] Searched documentation and issues\r\n\r\n\r\n### [REQUIRED] How to play L1 widevine drm using Exoplayer\r\nWe are seeing lot of drm playback failures on devices where L1 Widevine is supported.\r\n\r\nOn such devices, we see DRM session throwing below error. We are using Exoplayer v2.11.8\r\n\r\n```\r\n 22174 22867 E ExoPlayerImplInternal: Renderer error: index=0, type=video, format=Format(3, null, null, video/avc, avc1.64001f, 1200000, null, [1280, 720, 25.0], [-1, -1]), rendererSupport=YES\r\n10-29 13:48:30.182 22174 22867 E ExoPlayerImplInternal:   com.google.android.exoplayer2.ExoPlaybackException: com.google.android.exoplayer2.drm.DrmSession$DrmSessionException: com.google.android.exoplayer2.upstream.HttpDataSource$InvalidResponseCodeException: Response code: 403\r\n10-29 13:48:30.182 22174 22867 E ExoPlayerImplInternal:       at c.j.b.c.s.a(BaseRenderer.java:15)\r\n10-29 13:48:30.182 22174 22867 E ExoPlayerImplInternal:       at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.r(MediaCodecRenderer.java:60)\r\n10-29 13:48:30.182 22174 22867 E ExoPlayerImplInternal:       at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.a(MediaCodecRenderer.java:27)\r\n10-29 13:48:30.182 22174 22867 E ExoPlayerImplInternal:       at c.j.b.c.c0.b(ExoPlayerImplInternal.java:138)\r\n10-29 13:48:30.182 22174 22867 E ExoPlayerImplInternal:       at c.j.b.c.c0.handleMessage(ExoPlayerImplInternal.java:18)\r\n10-29 13:48:30.182 22174 22867 E ExoPlayerImplInternal:       at android.os.Handler.dispatchMessage(Handler.java:103)\r\n10-29 13:48:30.182 22174 22867 E ExoPlayerImplInternal:       at android.os.Looper.loop(Looper.java:224)\r\n10-29 13:48:30.182 22174 22867 E ExoPlayerImplInternal:       at android.os.HandlerThread.run(HandlerThread.java:67)\r\n10-29 13:48:30.182 22174 22867 E ExoPlayerImplInternal:   Caused by: com.google.android.exoplayer2.drm.DrmSession$DrmSessionException: com.google.android.exoplayer2.upstream.HttpDataSource$InvalidResponseCodeException: Response code: 403\r\n10-29 13:48:30.182 22174 22867 E ExoPlayerImplInternal:       at com.google.android.exoplayer2.drm.DefaultDrmSession.a(DefaultDrmSession.java:31)\r\n```\r\n\r\n\r\nPlease let us know the following\r\n\r\n1. is this a device specific issue?\r\n2. How to handle Widevine L1 Drm playback? Right now we are just calling the below code to pass drm license\r\n\r\n_setDrmSessionManager(license_url, \"widevine\");_\r\n\r\nDo we need to detect L1 device and so something extra?\r\n\r\nThanks in advance.\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8151/comments",
    "author": "krackjack234",
    "comments": [
      {
        "user": "krackjack234",
        "created_at": "2020-11-03T14:54:53Z",
        "body": "More logs if it helps\r\n\r\n```\r\n11-03 20:01:38.748  3709  3709 E EventLogger: internalError [eventTime=9.04, mediaPos=0.00, window=0, period=0, drmSessionManagerError\r\n11-03 20:01:38.748  3709  3709 E EventLogger:   com.google.android.exoplayer2.upstream.HttpDataSource$InvalidResponseCodeException: Response code: 403\r\n11-03 20:01:38.748  3709  3709 E EventLogger:       at com.google.android.exoplayer2.upstream.DefaultHttpDataSource.open(DefaultHttpDataSource.java:300)\r\n11-03 20:01:38.748  3709  3709 E EventLogger:       at com.google.android.exoplayer2.upstream.DataSourceInputStream.checkOpened(DataSourceInputStream.java:102)\r\n11-03 20:01:38.748  3709  3709 E EventLogger:       at com.google.android.exoplayer2.upstream.DataSourceInputStream.read(DataSourceInputStream.java:82)\r\n11-03 20:01:38.748  3709  3709 E EventLogger:       at com.google.android.exoplayer2.upstream.DataSourceInputStream.read(DataSourceInputStream.java:76)\r\n11-03 20:01:38.748  3709  3709 E EventLogger:       at com.google.android.exoplayer2.util.Util.toByteArray(Util.java:160)\r\n11-03 20:01:38.748  3709  3709 E EventLogger:       at com.google.android.exoplayer2.drm.HttpMediaDrmCallback.executePost(HttpMediaDrmCallback.java:166)\r\n11-03 20:01:38.748  3709  3709 E EventLogger:       at com.google.android.exoplayer2.drm.HttpMediaDrmCallback.executeKeyRequest(HttpMediaDrmCallback.java:136)\r\n11-03 20:01:38.748  3709  3709 E EventLogger:       at com.google.android.exoplayer2.drm.DefaultDrmSession$RequestHandler.handleMessage(DefaultDrmSession.java:551)\r\n11-03 20:01:38.748  3709  3709 E EventLogger:       at android.os.Handler.dispatchMessage(Handler.java:107)\r\n11-03 20:01:38.748  3709  3709 E EventLogger:       at android.os.Looper.loop(Looper.java:224)\r\n11-03 20:01:38.748  3709  3709 E EventLogger:       at android.os.HandlerThread.run(HandlerThread.java:67)\r\n11-03 20:01:38.748  3709  3709 E EventLogger: ]\r\n11-03 20:01:38.751  1167  2417 I MiuiNetworkPolicy: updateUidState uid = 99366, uidState = 16\r\n11-03 20:01:38.751  1167  2417 I MiuiNetworkPolicy: updateUidState uid = 9801, uidState = 16\r\n11-03 20:01:38.757  3709  4484 E ExoPlayerImplInternal: Renderer error: index=0, type=video, format=Format(3, null, null, video/avc, avc1.64001f, 1200000, null, [1280, 720, 25.0], [-1, -1]), rendererSupport=YES\r\n11-03 20:01:38.757  3709  4484 E ExoPlayerImplInternal:   com.google.android.exoplayer2.ExoPlaybackException: com.google.android.exoplayer2.drm.DrmSession$DrmSessionException: com.google.android.exoplayer2.upstream.HttpDataSource$InvalidResponseCodeException: Response code: 403\r\n11-03 20:01:38.757  3709  4484 E ExoPlayerImplInternal:       at com.google.android.exoplayer2.BaseRenderer.createRendererException(BaseRenderer.java:359)\r\n11-03 20:01:38.757  3709  4484 E ExoPlayerImplInternal:       at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.shouldWaitForKeys(MediaCodecRenderer.java:1215)\r\n11-03 20:01:38.757  3709  4484 E ExoPlayerImplInternal:       at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.feedInputBuffer(MediaCodecRenderer.java:1161)\r\n11-03 20:01:38.757  3709  4484 E ExoPlayerImplInternal:       at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.render(MediaCodecRenderer.java:722)\r\n11-03 20:01:38.757  3709  4484 E ExoPlayerImplInternal:       at com.google.android.exoplayer2.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:599)\r\n11-03 20:01:38.757  3709  4484 E ExoPlayerImplInternal:       at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:329)\r\n11-03 20:01:38.757  3709  4484 E ExoPlayerImplInternal:       at android.os.Handler.dispatchMessage(Handler.java:103)\r\n11-03 20:01:38.757  3709  4484 E ExoPlayerImplInternal:       at android.os.Looper.loop(Looper.java:224)\r\n11-03 20:01:38.757  3709  4484 E ExoPlayerImplInternal:       at android.os.HandlerThread.run(HandlerThread.java:67)\r\n11-03 20:01:38.757  3709  4484 E ExoPlayerImplInternal:   Caused by: com.google.android.exoplayer2.drm.DrmSession$DrmSessionException: com.google.android.exoplayer2.upstream.HttpDataSource$InvalidResponseCodeException: Response code: 403\r\n11-03 20:01:38.757  3709  4484 E ExoPlayerImplInternal:       at com.google.android.exoplayer2.drm.DefaultDrmSession.onError(DefaultDrmSession.java:486)\r\n11-03 20:01:38.757  3709  4484 E ExoPlayerImplInternal:       at com.google.android.exoplayer2.drm.DefaultDrmSession.onKeysError(DefaultDrmSession.java:481)\r\n11-03 20:01:38.757  3709  4484 E ExoPlayerImplInternal:       at com.google.android.exoplayer2.drm.DefaultDrmSession.onKeyResponse(DefaultDrmSession.java:444)\r\n11-03 20:01:38.757  3709  4484 E ExoPlayerImplInternal:       at com.google.android.exoplayer2.drm.DefaultDrmSession.access$100(DefaultDrmSession.java:50)\r\n11-03 20:01:38.757  3709  4484 E ExoPlayerImplInternal:       at com.google.android.exoplayer2.drm.DefaultDrmSession$ResponseHandler.handleMessage(DefaultDrmSession.java:519)\r\n11-03 20:01:38.757  3709  4484 E ExoPlayerImplInternal:       at android.os.Handler.dispatchMessage(Handler.java:107)\r\n11-03 20:01:38.757  3709  4484 E ExoPlayerImplInternal:       ... 2 more\r\n11-03 20:01:38.757  3709  4484 E ExoPlayerImplInternal:   Caused by: com.google.android.exoplayer2.upstream.HttpDataSource$InvalidResponseCodeException: Response code: 403\r\n11-03 20:01:38.757  3709  4484 E ExoPlayerImplInternal:       at com.google.android.exoplayer2.upstream.DefaultHttpDataSource.open(DefaultHttpDataSource.java:300)\r\n11-03 20:01:38.757  3709  4484 E ExoPlayerImplInternal:       at com.google.android.exoplayer2.upstream.DataSourceInputStream.checkOpened(DataSourceInputStream.java:102)\r\n11-03 20:01:38.757  3709  4484 E ExoPlayerImplInternal:       at com.google.android.exoplayer2.upstream.DataSourceInputStream.read(DataSourceInputStream.java:82)\r\n11-03 20:01:38.757  3709  4484 E ExoPlayerImplInternal:       at com.google.android.exoplayer2.upstream.DataSourceInputStream.read(DataSourceInputStream.java:76)\r\n11-03 20:01:38.757  3709  4484 E ExoPlayerImplInternal:       at com.google.android.exoplayer2.util.Util.toByteArray(Util.java:160)\r\n11-03 20:01:38.757  3709  4484 E ExoPlayerImplInternal:       at com.google.android.exoplayer2.drm.HttpMediaDrmCallback.executePost(HttpMediaDrmCallback.java:166)\r\n11-03 20:01:38.757  3709  4484 E ExoPlayerImplInternal:       at com.google.android.exoplayer2.drm.HttpMediaDrmCallback.executeKeyRequest(HttpMediaDrmCallback.java:136)\r\n11-03 20:01:38.757  3709  4484 E ExoPlayerImplInternal:       at com.google.android.exoplayer2.drm.DefaultDrmSession$RequestHandler.handleMessage(DefaultDrmSession.java:551)\r\n11-03 20:01:38.757  3709  4484 E ExoPlayerImplInternal:       ... 3 more\r\n```"
      },
      {
        "user": "lcf87",
        "created_at": "2020-11-03T15:34:56Z",
        "body": "Could you check the log from you licensing server? The server is returning 403 on your connection, it's unclear from the Exoplayer side as to why."
      },
      {
        "user": "krackjack234",
        "created_at": "2020-11-03T16:37:58Z",
        "body": "Ok strange thing is this is working on all phones which has widevine L3 and some phones which has widevine L1.\r\nBut we will again check from license server side."
      }
    ]
  },
  {
    "number": 8150,
    "title": "How to clear the last frame when video switching",
    "created_at": "2020-11-03T01:19:15Z",
    "closed_at": "2020-11-05T23:57:39Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8150",
    "body": "### [REQUIRED] Question\r\nWhen playing a video, then I switch to another video link, the surface view showed a picture which is a frame of last video. The question is I want to clear the last frame and make it black screen when switching video.\r\n\r\n### A full bug report captured from the device\r\nI try to clear surface view, but strange something happend, the video will become stuck. It seems surface view locked.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8150/comments",
    "author": "VeiZhang",
    "comments": [
      {
        "user": "lcf87",
        "created_at": "2020-11-03T14:18:39Z",
        "body": "A quick solution would be to create a custom view on top to block the last frame.\r\n\r\nPlease see if #8139 would help!"
      },
      {
        "user": "VeiZhang",
        "created_at": "2020-11-04T01:46:46Z",
        "body": "@lcf87 Yes, I also try it, but when switching small to big surface view, the picture can be saw in a short time, so I think it is not a perfect idea. If there is no other method, I will keep to add a view above surface view.\r\n\r\nThank you for the reply."
      }
    ]
  },
  {
    "number": 8139,
    "title": "ExoPlayer show first frame during loading of video",
    "created_at": "2020-10-30T10:57:14Z",
    "closed_at": "2020-11-09T11:12:34Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8139",
    "body": "### Loading frame shown during loading\r\nI'm having an API serving the video URI and a (preloaded!) first frame URI. I don't think it is possible right now to show the loading frame until the video is ready to play. I've tried a simple overlay view in android, but I'm running into issues with RecyclerView. It seems like a common use case so maybe I'm missing something?\r\n\r\n### Proposed solution\r\nThis is my code and I would suggest to add the imageUri to the initializeExoplayer:\r\n```\r\n@Singleton\r\nclass MediaPlayer @Inject constructor(private val context: Context) {\r\n\r\n    companion object {\r\n        var exoPlayer: SimpleExoPlayer? = null\r\n        var pauseItem = false\r\n    }\r\n\r\n    fun initializeExoplayer(uri: Uri): SimpleExoPlayer {\r\n        if (exoPlayer != null) {\r\n            resetPlayer()\r\n        }\r\n\r\n        val trackSelector = DefaultTrackSelector()\r\n\r\n        trackSelector.setParameters(\r\n            DefaultTrackSelector.ParametersBuilder()\r\n                .setForceLowestBitrate(true)\r\n                .setMaxAudioBitrate(128_000)\r\n        )\r\n\r\n        exoPlayer = ExoPlayerFactory.newSimpleInstance(context, trackSelector)\r\n\r\n        val mediaSource = createMediaSource(uri)\r\n        val loopingSource = LoopingMediaSource(mediaSource)\r\n\r\n        exoPlayer?.prepare(loopingSource)\r\n        exoPlayer?.volume = 1f\r\n\r\n        return exoPlayer!!\r\n    }\r\n\r\n    fun resetPlayer() {\r\n        exoPlayer?.playWhenReady = false\r\n        exoPlayer?.stop()\r\n        exoPlayer?.release()\r\n        exoPlayer = null\r\n    }\r\n\r\n    private fun createMediaSource(uri: Uri): MediaSource {\r\n        val userAgent = Util.getUserAgent(context, \"ExoPlayerIntro\")\r\n        val dataSourceFactory = DefaultDataSourceFactory(context, userAgent)\r\n\r\n        val mediaSource =\r\n            ProgressiveMediaSource.Factory(dataSourceFactory, DefaultExtractorsFactory())\r\n                .createMediaSource(uri)\r\n\r\n        return Objects.requireNonNull(mediaSource, \"MediaSource cannot be null\")\r\n    }\r\n}\r\n```\r\n\r\n### Alternatives considered\r\nI tried overlaying a View in RecyclerView, but it's not working. it sometimes stays black until the video starts playing, not always. But I wait long enough for the next 5 video's to load the frame. When printing out the imageUri, it shows that the imageUri is prefetched correctly, ready and on the correct thread. Yet, it still stays black (but not always..?) until the video starts playing.\r\n\r\n ```\r\n       val listener = object : EventListener {\r\n            override fun onPlayerStateChanged(playWhenReady: Boolean, playbackState: Int) {\r\n                super.onPlayerStateChanged(playWhenReady, playbackState)\r\n\r\n                if (playbackState == Player.STATE_READY) {\r\n                    if (playWhenReady) {\r\n                        binding.layout.foreground = null\r\n                        binding.loadingFrame.visibility = View.INVISIBLE\r\n\r\n                    } else if (MediaPlayer.pauseItem.not()) {\r\n                        /*\r\n                         * This is so that the loading frame shows\r\n                         * when swiping up to the next video\r\n                         */\r\n                        binding.loadingFrame.visibility = View.VISIBLE\r\n                    }\r\n                    else {\r\n                        onVideoPlayed.cancel()\r\n                    }\r\n                }\r\n            }\r\n\r\n```\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8139/comments",
    "author": "JimClermonts",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2020-10-31T00:18:22Z",
        "body": "Assuming the first frame URIs you refer to fetch regular image files, loading that image into a view and placing it on top of the `Surface` to which the video will be rendered should work fine, and is a fairly widely used technique. I would therefore suspect that there's just something a little wrong with your implementation."
      },
      {
        "user": "rahulsainani",
        "created_at": "2020-11-02T08:54:49Z",
        "body": "@JimClermonts Maybe this helps you, this is what i was using in onBind of the recyclerview:\r\n\r\n```\r\nplayer.addListener(\r\n                    object : Player.EventListener {\r\n\r\n                        override fun onPlaybackStateChanged(state: Int) {\r\n                            super.onPlaybackStateChanged(state)\r\n                            when (state) {\r\n                                Player.STATE_IDLE -> {\r\n                                }\r\n                                Player.STATE_BUFFERING -> imageView.toVisible()\r\n                                Player.STATE_READY -> imageView.toGone()\r\n                                Player.STATE_ENDED -> {\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                )\r\n```\r\n\r\n@ojw28 The problem with this we faced is that sometimes the player doesn't fire the event \"Ready\" and plays the video for a while while the state is still \"Buffering\" So by this logic, the image is visible while the player plays in some cases. It specifically happens if we scroll 25+ items. Maybe that's why an API/enhacement for this would be valid. Let me know what you think?"
      },
      {
        "user": "ojw28",
        "created_at": "2020-11-02T11:28:45Z",
        "body": "> The problem with this we faced is that sometimes the player doesn't fire the event \"Ready\" and plays the video for a while while the state is still \"Buffering\"\r\n\r\nI think this is extremely unlikely. It would be a fairly fundamental issue with ExoPlayer state reporting, which no-one else has reported. It seems much more likely that your listener is not correctly registered, or that you have some other issue in your application code."
      },
      {
        "user": "rahulsainani",
        "created_at": "2020-11-02T12:44:51Z",
        "body": "@ojw28 Thanks for the quick reply. I see, in order to not change the topic of this issue, I will ask about the best practices for using exoplayer in recyclerview as a separate question."
      }
    ]
  },
  {
    "number": 8137,
    "title": "How to get the entire content Duration of a MediaItem, not just the clip length? ",
    "created_at": "2020-10-29T17:04:48Z",
    "closed_at": "2020-11-03T13:36:47Z",
    "labels": [
      "duplicate",
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8137",
    "body": "### [REQUIRED] Question\r\nI have a list of `MediaItem`s with different start positions. \r\n```java\r\nMediaItem mediaItem = new MediaItem.Builder()\r\n    .setUri(trackUri)\r\n    .setClipStartPositionMs(startPos)\r\n    .setClipEndPositionMs(C.TIME_END_OF_SOURCE)\r\n    .build();\r\n```\r\nWhen a particular MediaItem is being played, the Player is just returning the duration of the clip, not the total length of the track. \r\nIs there a way where I can get the total length of the track, not just the clip length? ",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8137/comments",
    "author": "pavan245",
    "comments": [
      {
        "user": "pavan245",
        "created_at": "2020-11-02T18:28:01Z",
        "body": "Hi\r\n\r\nI have to do quite a bit of work if the Player can't give the entire duration of the MediaItem. And I'm not sure if this is a bug or the intended behavior. \r\nCan I get an update here? Do I need to provide some more details for this question? \r\n\r\nThanks"
      },
      {
        "user": "ojw28",
        "created_at": "2020-11-02T19:49:51Z",
        "body": "If you're only changing the start clip position then I think you can retrieve the entire content duration like:\r\n```\r\n@Override\r\npublic void onTimelineChanged(Timeline timeline, @TimelineChangeReason int reason) {\r\n  if (!timeline.isEmpty()) {\r\n    long durationMs = timeline.getPeriod(0, new Period()).getDurationMs();\r\n  }\r\n}\r\n```\r\nNote that you can also retrieve the timeline from `Player.getCurrentTimeline`. @pavan245 - Does that work for you?\r\n\r\nThe same trick does not work if you set an end clip position, however. This may not be relevant to your use case, but is something we should think about. @tonihei - Do you understand why that's not the case? If both start and end are clipped, I think I'd expect the period and window to look like:\r\n```\r\n<----------- original content ----------->\r\n<-------------- period ------------------>\r\n            <----- window ----->\r\n```\r\nwhere-as it seems they look like:\r\n```\r\n<----------- original content ----------->\r\n<-------------- period -------->\r\n            <----- window ----->\r\n```\r\nI tried changing `ClippingTimeline.getPeriod` to do what I expected, but then playback doesn't transition to the ended state once the clip end point is reached. Which also seems unexpected to me."
      },
      {
        "user": "tonihei",
        "created_at": "2020-11-03T13:03:21Z",
        "body": "> If both start and end are clipped, I think I'd expect the period and window to look like ... where-as it seems they look like ...\r\n\r\nThis is because the clipping is not properly integrated in every `MediaPeriod` and thus the player (without knowing `ClippingMediaSource`) has no concept of a period ending early. That's why we need to shorten the period so that the player knows when it ends and that it can transition to the next item. \r\n\r\nThe pending work for #3163 will change this by making clipping a first-class citizen in `MediaPeriod` and `Timeline.Period`. This will solve this issue, but also #3163 that is currently blocked on correctly discarding buffer when the end clip position changes.  "
      },
      {
        "user": "ojw28",
        "created_at": "2020-11-03T13:36:47Z",
        "body": "@pavan245 - For only changing the start clip position, my solution posted above will work. For the end position, marking this as a duplicate of #3163 as per Toni's response above."
      },
      {
        "user": "pavan245",
        "created_at": "2020-11-09T15:01:13Z",
        "body": "@ojw28 Thanks for your solution. For the time being, I'm only using the start clip position so your solution works. \r\n\r\nIs there any way I can get the current playing position in the window from the Player/Timeline APIs? \r\nI tried `Period.getPositionInWindowMs` and it's returning a negative of `startPosition`. \r\nI can add the `startPosition` and `Player.getCurrentPosition`, but prefer to rely on the Player. "
      },
      {
        "user": "tonihei",
        "created_at": "2020-11-09T15:09:04Z",
        "body": "`Player.getCurrentPosition` returns the position in the window actually. If you want to convert to a period position you can use `Timeline.getPeriodPosition(window, period, windowIndex, windowPositionUs)` that gives you both the `periodUid` and the period position. The uid is only relevant for cases where you have multiple periods per window. As `ClippingMediaSource` doesn't support multi-period windows at all, you can probably ignore this part of the return value."
      },
      {
        "user": "pavan245",
        "created_at": "2020-11-09T15:36:08Z",
        "body": "Hi @tonihei \r\nIf the MediaItem's `setClipStartPositionMs` is 300000ms, I need the `Player.getCurrentPosition` to start from 300000. Is this the expected behaviour? \r\n\r\nFrom the below source code, I can see `Player.getCurrentPosition` internally calling `periodPositionUsToWindowPositionMs` method. But as mentioned in the above comment, `Period.getPositionInWindowMs()` is returning `-300000`\r\n\r\n```java\r\n\r\n@Override\r\npublic long getCurrentPosition() {\r\n    if (playbackInfo.timeline.isEmpty()) {\r\n      return maskingWindowPositionMs;\r\n    } else if (playbackInfo.periodId.isAd()) {\r\n      return C.usToMs(playbackInfo.positionUs);\r\n    } else {\r\n      return periodPositionUsToWindowPositionMs(playbackInfo.periodId, playbackInfo.positionUs);\r\n    }\r\n }\r\n\r\nprivate long periodPositionUsToWindowPositionMs(MediaPeriodId periodId, long positionUs) {\r\n    long positionMs = C.usToMs(positionUs);\r\n    playbackInfo.timeline.getPeriodByUid(periodId.periodUid, period);\r\n    positionMs += period.getPositionInWindowMs();\r\n    return positionMs;\r\n}\r\n\r\n```"
      },
      {
        "user": "tonihei",
        "created_at": "2020-11-09T15:39:04Z",
        "body": "If you want the position to start at `300000`, then you want to know the period position if I understand you correctly. Have you tried using `Timeline.getPeriodPosition` as proposed above?"
      },
      {
        "user": "pavan245",
        "created_at": "2020-11-09T16:22:09Z",
        "body": "Sorry, you're right. I need the period position.\r\nThis is how I got it working:\r\n\r\n```java\r\n    public long getCurrentPosition() {\r\n\r\n        if (player == null || player.getPlaybackState() == Player.STATE_IDLE)\r\n            return 0;\r\n\r\n        Timeline timeline = player.getCurrentTimeline();\r\n        if (timeline == null || timeline.isEmpty())\r\n            return 0;\r\n\r\n        Timeline.Period period = timeline.getPeriod(0, new Timeline.Period());\r\n\r\n        Timeline.Window window = timeline.getWindow(period.windowIndex, new Timeline.Window());\r\n\r\n        long windowPosition = player.getCurrentPosition();\r\n\r\n        Pair<Object, Long> periodPosition = timeline.getPeriodPosition(window, period, period.windowIndex, C.msToUs(windowPosition));\r\n\r\n        return periodPosition != null ? C.usToMs(periodPosition.second) : 0;\r\n    }\r\n```"
      }
    ]
  },
  {
    "number": 8122,
    "title": "Download class missing equals function",
    "created_at": "2020-10-27T11:42:56Z",
    "closed_at": "2020-11-02T11:26:33Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8122",
    "body": "### [REQUIRED] Issue description\r\nI was using `Download` in my `Recyclerview` and `ListAdapter` and in my `DiffUtil.ItemCallback<Download>` I got a warning with the following message: `Suspicious equality check: equals() is not implemented in Download` \r\n```kotlin\r\noverride fun areContentsTheSame(oldItem: Download, newItem: Download): Boolean {\r\n    return oldItem == newItem\r\n}\r\n```\r\n\r\nIn the mean time I've changed to: \r\n```kotlin\r\nreturn (oldItem.request == newItem.request\r\n                    && oldItem.state == newItem.state\r\n                    && oldItem.startTimeMs == newItem.startTimeMs\r\n                    && oldItem.updateTimeMs == newItem.updateTimeMs\r\n                    && oldItem.contentLength == newItem.contentLength\r\n                    && oldItem.stopReason == newItem.stopReason\r\n                    && oldItem.failureReason == newItem.failureReason\r\n                    && oldItem.bytesDownloaded == newItem.bytesDownloaded\r\n                    && oldItem.percentDownloaded == newItem.percentDownloaded)\r\n```",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8122/comments",
    "author": "yoobi",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2020-10-27T19:49:58Z",
        "body": "The `Download` includes things like the current state (i.e., whether the download is paused, completed, failed etc). If you're trying to test whether two `Download` instances correspond to the same piece of content, I don't think you want to be including that kind of state in your equality check, and so I don't think checking for equality between the two `Download` instances is the correct approach. You should probably be comparing using `Download.request`, or possibly even `Download.request.id` or `Download.request.uri`."
      },
      {
        "user": "yoobi",
        "created_at": "2020-10-27T19:53:22Z",
        "body": "Maybe I'm not using the correct approach indeed, I'm trying to display the current progression of the download in my activity, how would you recommend me to do so ?\r\n\r\nI currently have a recyclerview with all downloads, that's why I'm using DiffUtil, my code below:\r\n```\r\nval downloads: HashMap<Uri, Download> = HashMap()\r\ntry {\r\n    downloadIndex.getDownloads().use { loadedDownloads ->\r\n        while (loadedDownloads.moveToNext()) {\r\n            val download = loadedDownloads.download\r\n            downloads[download.request.uri] = download\r\n        }\r\n    }\r\n} catch (e: IOException) {\r\n    Log.w(TAG, \"Failed to query downloads\", e)\r\n}\r\n```\r\nthen I'm using a `Flow` to get the progress of each download every second\r\n```\r\nsuspend fun getDownloadProgressFlow() = callbackFlow {\r\n    while(downloads.values.any { !it.isTerminalState }) {\r\n        offer(downloads)\r\n        withContext(Dispatchers.IO) { delay(1000) }\r\n    }\r\n    if(downloads.values.none { !it.isTerminalState }){\r\n        this.cancel()\r\n    }\r\n}\r\n```\r\nand submit the new list."
      },
      {
        "user": "ojw28",
        "created_at": "2020-11-02T11:26:33Z",
        "body": "This is getting into the realm of providing support specifically for your own application code, which is beyond the scope of this issue tracker. I think my response above explains how to compare whether two `Download` instances correspond to the same content, which was the original query asked here."
      }
    ]
  },
  {
    "number": 8118,
    "title": "can't get duration of audio file which  extension is .aac",
    "created_at": "2020-10-27T03:10:20Z",
    "closed_at": "2020-10-29T08:56:36Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8118",
    "body": "[No information provided]",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8118/comments",
    "author": "l20160606sy",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2020-10-28T17:20:47Z",
        "body": "This is a known limitation. You should consider using a more appropriate container format for your audio, such as MP4, which will not have this problem."
      },
      {
        "user": "l20160606sy",
        "created_at": "2020-10-29T02:02:26Z",
        "body": "But I found that sometimes the audio of AAC files can get the total duration, and sometimes it can't"
      },
      {
        "user": "ojw28",
        "created_at": "2020-10-29T08:46:55Z",
        "body": "I think the duration might become known once the player has buffered to the end of the stream, so you may find that duration is determined quickly for short AAC files (which are fully buffered up-front), and toward the end of the playback for longer AAC files (where this is not possible).\r\n\r\nThe problem is that the player doesn't have an efficient way to determine the duration of the content from only the start of the file. Processing the entire file is clearly a very inefficient way of determining duration, and so we opt not to do this. If this is a requirement you should use a modern container format such as MP4, which specifies its duration directly at the start of the file in a way that the player can easily read."
      },
      {
        "user": "l20160606sy",
        "created_at": "2020-10-29T08:56:36Z",
        "body": "OK, got it.thanks"
      }
    ]
  },
  {
    "number": 8117,
    "title": "Crash while playing HLS live content (probably a playlist update retry process)",
    "created_at": "2020-10-27T01:47:11Z",
    "closed_at": "2020-10-28T01:17:33Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8117",
    "body": "In exoplayer 2.10.6\r\n\r\nI am having trouble with a crashing phenomenon while playing live content on HLS.\r\n\r\nIt was crashing in the part of the playlist where I was getting an I/O (HTTP) error and retrying to get the playlist update.\r\n\r\nI suspect the crash is caused by the fact that the process of updating currentTask is not thread-safe.\r\n\r\nI think that if <Loader#startLoading> is called between <Loader.LoadTask#finish> and <Loader.LoadTask#start> in <Loader.LoadTask#handleMessage>, it will be like this.\r\n\r\nIs this working as designed?\r\n\r\n\r\nLogging of crashes:\r\n```\r\nFatal Exception: java.lang.IllegalStateException\r\n       at com.google.android.exoplayer2.util.Assertions.checkState(Assertions.java:81)\r\n       at com.google.android.exoplayer2.upstream.Loader$LoadTask.start(Loader.java:351)\r\n       at com.google.android.exoplayer2.upstream.Loader$LoadTask.handleMessage(Loader.java:481)\r\n       at android.os.Handler.dispatchMessage(Handler.java:106)\r\n       at android.os.Looper.loop(Looper.java:193)\r\n       at android.app.ActivityThread.main(ActivityThread.java:6758)\r\n       at java.lang.reflect.Method.invoke(Method.java)\r\n       at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:493)\r\n       at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:858)",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8117/comments",
    "author": "Our-colibri",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2020-10-27T19:33:22Z",
        "body": "For that stack trace to happen, I think `Loader.startLoading` must have been called on the application's main thread. This should never happen, since loads are only expected to be started by the player's own internal thread(s).\r\n\r\nThis suggests to me that your application code might be calling something directly that it shouldn't be calling. Perhaps your application code is calling `prepareSource` on a `MediaSource` instance, for example. Could you take a look? If that's not the case, I think you'll need to figure out how `Laoder.startLoading` ends up being called on the application's main thread. If you can point to where this happens in the ExoPlayer library, then that would be something we could investigate and fix.\r\n"
      },
      {
        "user": "Our-colibri",
        "created_at": "2020-10-28T01:17:33Z",
        "body": "Thanks for the reply.\r\n\r\nI was creating a separate thread in MyMediaSource#prepareSource to call the actual MediaSource#prepare as you wrote.\r\n(The reason was to recreate and replace the MediaSource as needed in the Prepare phase.)\r\n\r\nI didn't understand it well enough, so your reply was a great help.\r\nThanks so much."
      }
    ]
  },
  {
    "number": 8116,
    "title": "Widevine license renewal using azure media services",
    "created_at": "2020-10-26T14:11:06Z",
    "closed_at": "2020-11-09T11:42:52Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8116",
    "body": "hello, \r\n\r\nI'm trying to renew my widevine offline license for playback, I'm not able to do so with azure media services because it provides a dynamic license server URL that is included in the manifest.\r\n\r\na bug report was opened for a variant of this issue #3393  and was fixed. ( when the player doesn't parse incoming data in the manifest and now that it is fixed , the parser reads directly from the manifest and parses the azure license URL without a problem.)   \r\n\r\nmy issue comes at hand when I'm trying to renew my license using a dynamic license URL because I can't include it in my widevine license template in the field renewal_server_url since it's not static, and azure media services does not provide a commun url for their license server.\r\n\r\nwhat can i do to retreive the license url in order to ask for a renewal?\r\n\r\nVersion of ExoPlayer being used\r\n2.12.0\r\n\r\nHUAWEI P30 LITE\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8116/comments",
    "author": "AnassHmida",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2020-10-27T19:06:17Z",
        "body": "If the URL is included in the manifest then I think you'll need to request and parse the manifest, and then retrieve the URL from it. You can load and parse the manifest with `DashUtil.loadManifest`. Once you have it, you can dig around inside the `DashManifest` to retrieve the license URL. I didn't test this, but it's probably retrievable via:\r\n```\r\ndashManifest.getPeriod(0).adaptationSets.get(0).representations.get(0).format.drmInitData.get(0).licenseServerUrl\r\n```\r\nIf not, try attaching a debugger and exploring in the `DashManifest` object. "
      },
      {
        "user": "AnassHmida",
        "created_at": "2020-10-27T19:22:34Z",
        "body": "Good evening @ojw28,\r\nThank you for your detailed response, i will get back to you after i test this. \r\nI do have one last question tho,\r\nafter renewing my license for offline playback , do i need to replace the generated keysetid response from offlinelicencehelper.renewlicense with the one that is linked to the download so i can playback my downloaded content with the new license or is there an other step to it?\r\n\r\n"
      },
      {
        "user": "ojw28",
        "created_at": "2020-11-02T11:20:40Z",
        "body": "If you're using `OfflineLicenseHelper.renewLicense`, was your initial question about getting a `defaultLicenseUrl` to build a `HttpMediaDrmCallback`? I'm not sure, but it might be possible for you to set it to any dummy value for your media, if it's always specifying a URL internally. That would avoid you needing to look inside the DASH manifest. In future releases we will allow this parameter to be `null`.\r\n\r\n> after renewing my license for offline playback , do i need to replace the generated keysetid response from offlinelicencehelper.renewlicense with the one that is linked to the download so i can playback my downloaded content with the new license or is there an other step to it?\r\n\r\nI'm not entirely sure what you're asking here. Is the `keySetId` returned by `renewLicense` _different_ to the one when the license was originally obtained, or is it the same? If the `keySetId` has changed, you'll need to use the one returned by `renewLicense` for successful playback after renewal. We should probably look at an easy way to update the download database in this case."
      },
      {
        "user": "AnassHmida",
        "created_at": "2020-11-02T14:06:31Z",
        "body": "@ojw28 yes that's exactly what I meant, and by setting that value to `null` will that mean it will use a license URL if it has one and `null` if it doesn't?\r\n\r\nas for the download part, that is what I meant precisely, I use the `newkeySetId `generated from the `OfflineLicenseHelper.renewLicense` function using my old `keySetId` like this : \r\n\r\n```\r\n        keySetId = mediaItem.playbackProperties.drmConfiguration.getKeySetId();\r\n        android.util.Log.d(TAG, \"doInBackground: Old key : \"+ Arrays.toString(keySetId));\r\n        newkeySetId = offlineLicenseHelper.renewLicense(keySetId);\r\n        android.util.Log.d(TAG, \"doInBackground: new key : \"+Arrays.toString(newkeySetId));\r\n```\r\n\r\nThen afterwards , i'm creating a new downloadRequest  using the same data from the old DownloadRequest and only replacing my old `keySetId ` with the new `newkeySetId` and adding that request to a new download and replacing that download with the one in the `downloads` list, here's the function that i'm using to do so : \r\n\r\n`updateDownloadwithKeySetId(mediaItem, newkeySetId);`\r\n\r\nHere's how it works.\r\n\r\n```\r\n private void  updateDownloadwithKeySetId(MediaItem mediaItem,byte[] KeysetId) {\r\n\r\n//Adding a new download request using previous data from my stored download Request.\r\n//Here i'm using my uri for the ID.\r\n\r\n  DownloadRequest downloadRequest = downloadHelper.getDownloadRequest(Util.getUtf8Bytes(checkNotNull(mediaItem.mediaMetadata.title))).copyWithKeySetId(keySetId);\r\n\r\n    DownloadRequest newDownloadRequest =\r\n            new DownloadRequest.Builder(downloadRequest.id, downloadRequest.uri)\r\n                    .setStreamKeys(downloadRequest.streamKeys)\r\n                    .setCustomCacheKey(downloadRequest.customCacheKey)\r\n//Changing the keysetId here\r\n                    .setKeySetId(keySetId)\r\n                    .setData(downloadRequest.data)\r\n                    .setMimeType(downloadRequest.mimeType)\r\n                    .build();\r\n\r\n\r\n//creating a new download based on the stored download (Updating Download Request).\r\n\r\n    Download download = downloads.get(checkNotNull(mediaItem.playbackProperties).uri);\r\n\r\n    Download download1 = new Download(\r\n            newDownloadRequest,\r\n            download.state,\r\n            download.startTimeMs,\r\n            download.updateTimeMs,\r\n            download.contentLength,\r\n            download.stopReason,\r\n            download.failureReason);\r\n\r\n//Replacing the old download with the new modified one.\r\n\r\n    downloads.put(mediaItem.playbackProperties.uri,download1);\r\n    Download justDownloaded = downloads.get(checkNotNull(mediaItem.playbackProperties).uri);\r\n\r\n    /*Checking */\r\n\r\n    String justDown = new String(justDownloaded.request.keySetId);\r\n    String oldDown = new String(download.request.keySetId);\r\n\r\n    if(justDown.equals(oldDown)){\r\n      android.util.Log.d(TAG, \"onPostExecute: License renew error.\");\r\n    }else{\r\n      android.util.Log.d(TAG, \"onPostExecute: License has been renewed.\");\r\n    }\r\n\r\n  }\r\n```\r\nNot sure if this is the correct approach to achieve license renewal.\r\nthis function is not tested because I'm not able to receive a new `keySetID` from the azure license URL ( for some reason )  , but I wrote it based on the logic of what will happen when my license is renewed."
      },
      {
        "user": "ojw28",
        "created_at": "2020-11-09T11:20:07Z",
        "body": "> We should probably look at an easy way to update the download database in this case.\r\n\r\nAha, it looks like you've figured out how to do this, just by adding the same download request again with an updated `keySetId`. Nice one :)! It looks like that should work fine, although we can optimize it slightly to not moving the download out of the `STATE_COMPLETED` state.\r\n\r\nI think everything else you've written looks sensible/correct. Can I close this issue as answered?"
      },
      {
        "user": "AnassHmida",
        "created_at": "2020-11-09T11:42:49Z",
        "body": "> > We should probably look at an easy way to update the download database in this case.\r\n> \r\n> Aha, it looks like you've figured out how to do this, just by adding the same download request again with an updated `keySetId`. Nice one :)! It looks like that should work fine, although we can optimize it slightly to not moving the download out of the `STATE_COMPLETED` state.\r\n> \r\n> I think everything else you've written looks sensible/correct. Can I close this issue as answered?\r\n\r\n\r\nYes, I believe you can, my problem is now with azure, since everything works as intended in here. \r\nThank you for your guidance! \r\n"
      }
    ]
  },
  {
    "number": 8109,
    "title": "Dynamically change renderer mode",
    "created_at": "2020-10-23T23:02:17Z",
    "closed_at": "2021-04-01T13:17:59Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8109",
    "body": "It is possible to dynamically change renderer mode in when video is playing\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8109/comments",
    "author": "hinditutorpoint",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2020-10-26T08:08:49Z",
        "body": "It's unclear what the question is that you're asking. What is a \"renderer mode\"? Please provide a more detailed explanation of your question."
      },
      {
        "user": "hinditutorpoint",
        "created_at": "2020-10-26T09:30:36Z",
        "body": "hardware and software decoder mode"
      },
      {
        "user": "ojw28",
        "created_at": "2021-04-01T13:17:59Z",
        "body": "It's not possible to do this mid-playback, since at that point the decoder has been instantiated and is in use."
      }
    ]
  },
  {
    "number": 8107,
    "title": "Lock Screen Media Button Control",
    "created_at": "2020-10-23T10:46:31Z",
    "closed_at": "2020-10-23T11:58:36Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8107",
    "body": "Hi,\r\n\r\nIs there any way to use two different media session instance? I ask it because I have a scenario like that;\r\n\r\nFor example, I have a MediaService.kt which is bounded to the MainActivity. Also, I want to play a video from VideoPlayerActivity it can be a live stream or not. I'm preparing everything for VideoPlayerActivity and the video is playing. But, the default control dispatcher event can't catch anything from VideoPlayerActivity. It's catching from MediaService.kt. For this reason, I can't handle the play/pause, etc from VideoPlayerActivity. Why this happening? How can I separate it?\r\n\r\nThe Exoplayer Version is 2.12.0.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8107/comments",
    "author": "orcunkobal",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2020-10-23T10:58:16Z",
        "body": "I'm finding it difficult to get a picture of the setup and understand the problem based on your description. It might help if you could give provide diagram or more detailed/structured description.\r\n\r\nAre MediaService and VideoPlayerActivity using separate ExoPlayer instances? If so I think you can just have one media session active at a time, linked up to the relevant player instance?"
      },
      {
        "user": "orcunkobal",
        "created_at": "2020-10-23T11:40:31Z",
        "body": "Yes, they both have different ExoPlayer instances. \r\n\r\n**MusicService.kt**\r\n```\r\nclass MusicService : MediaBrowserServiceCompat(){\r\n    private val mediaSessionConnectorControlDispatcher by lazy {\r\n        return@lazy MediaSessionConnectorControlDispatcher()\r\n    }\r\n\r\n    private val player: SimpleExoPlayer by lazy {\r\n        return@lazy SimpleExoPlayer.Builder(this@ MusicService).setMediaSourceFactory(defaultMediaSourceFactory).build().apply {\r\n            setHandleAudioBecomingNoisy(true)\r\n            addListener(playerListener)\r\n        }\r\n    }\r\n\r\n  override fun onCreate(){\r\n     super.onCreate()\r\n    val sessionActivityPendingIntent =\r\n                packageManager?.getLaunchIntentForPackage(packageName)?.let { sessionIntent ->\r\n                    PendingIntent.getActivity(this, 0, sessionIntent, 0)\r\n                }\r\n\r\n        mMediaSession = MediaSessionCompat(this, userAgent).apply {\r\n            setSessionActivity(sessionActivityPendingIntent)\r\n            isActive = true\r\n        }\r\n        sessionToken = mMediaSession.sessionToken\r\n\r\n        mMediaSessionConnector = MediaSessionConnector(mMediaSession).apply {\r\n            setPlayer(player)\r\n            setControlDispatcher(mediaSessionConnectorControlDispatcher)\r\n            setPlaybackPreparer(mediaSessionConnectorPlaybackPreparer)\r\n            setCustomActionProviders(aoCustomShuffleButton)\r\n        }\r\n }\r\n\r\nprivate inner class MediaSessionConnectorControlDispatcher : DefaultControlDispatcher() {\r\n        override fun dispatchSetPlayWhenReady(player: Player, playWhenReady: Boolean): Boolean = handleNtfAndMediaSessionPlayPause(playWhenReady)\r\n    }\r\n\r\n}\r\n\r\n```\r\n\r\nI control media actions from MediaSessionConnectorControlDispatcher class. Notifcation, headset etc.\r\n\r\n\r\nVideoPlayerActivity.kt\r\n\r\n```\r\n    private val player by lazy {\r\n        return@lazy SimpleExoPlayer.Builder(this@VideoPlayerActivity).setMediaSourceFactory(defaultMediaSourceFactory).build().apply {\r\n            setHandleAudioBecomingNoisy(true)\r\n            addListener(mPlayerListener)\r\n        }\r\n    }\r\n  override fun onCreate(){\r\n     super.onCreate()\r\nplayer.run {\r\n      setAudioAttributes(viewModel.audioAttributes, true)\r\n       setMediaItem(viewModel.mediaItem!!)\r\n       prepare()\r\n}\r\nmMediaSessionConnector.setPlayer(player)\r\nmMediaSessionConnector.setQueueNavigator(TimeLineQueuNavigator())\r\n                mMediaSessionConnector.setControlDispatcher(object : DefaultControlDispatcher() {\r\n                    override fun dispatchSetPlayWhenReady(player: Player, playWhenReady: Boolean): Boolean = handlePlayPause(playWhenReady)\r\n                })\r\n                mMediaSession.isActive = true\r\n                player.play()\r\n}\r\n```\r\n\r\nThe **dispatchSetPlayWhenReady** is not calling in VideoPlayer for this session. But, the MusicService is catching **dispatchSetPlayWhenReady**. This reason, I can't control the player instance on VideoPlayer. I just want to handle the events on VideoPlayer, not in the Service.\r\n\r\nI test the lock screen media buttons on Samsung S8.\r\n\r\n"
      },
      {
        "user": "andrewlewis",
        "created_at": "2020-10-23T11:45:51Z",
        "body": "Can you have just a single player instance with a media session? I'm not sure why you need two."
      },
      {
        "user": "orcunkobal",
        "created_at": "2020-10-23T11:58:23Z",
        "body": "Yes, I can. I just wondered why this is not working even I release the service. Anyway, thank you for your quick response."
      }
    ]
  },
  {
    "number": 8105,
    "title": "How to perform partial download of media using exoplayer",
    "created_at": "2020-10-23T08:02:41Z",
    "closed_at": "2020-10-23T10:37:36Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8105",
    "body": "\r\n### [REQUIRED] Searched documentation and issues\r\n\r\n\r\n### [REQUIRED] Question\r\nWe want to partially download a creative and start playback as soon as possible. This feature we want for all kind of media formats including mp4\r\n\r\nWe have set the buffer sizes in DefaultLoadControl of exoplayer but while playing mp4 contents we don't see the content getting downloaded with 206 http status. Looks like the entire mp4 creative is getting downloaded with 200 status and there is no **partial download**\r\n\r\nWill the DefaultLoadControl settings of exoplayer ensure that even for mp4 assets, playback will start as soon as DEFAULT_BUFFER_FOR_PLAYBACK_MS of data is available?  \r\n\r\nFor mp4 files, we can ensure that the moov atom is at the start of file so that player can immediately starts playing once few seconds of data is available.\r\n\r\nIf this is not the case the now can we ensure partial download of creative and immediate start of playback?\r\n\r\n\r\nThanks.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8105/comments",
    "author": "krackjack234",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2020-10-23T09:03:29Z",
        "body": "> We have set the buffer sizes in DefaultLoadControl of exoplayer but while playing mp4 contents we don't see the content getting downloaded with 206 http status\r\n\r\nI think we don't request a partial range but instead make an unbounded request and then consume data from the stream gradually. So even though the status isn't 206 it's still loading progressively.\r\n\r\nTo understand this in detail you could try stepping through the code in `ProgressiveMediaPeriod.ExtractingLoadable.load` to see how the data source gets opened and how loading and extraction of samples starts/stops as needed. Actual playback of the loaded data is decoupled from the request completing because the extractor writes to a queue of samples and on the separate playback thread renderers will read from the queue while loading is ongoing.\r\n\r\n> Will the DefaultLoadControl settings of exoplayer ensure that even for mp4 assets, playback will start as soon as DEFAULT_BUFFER_FOR_PLAYBACK_MS of data is available?\r\n\r\nYes, with the caveat that there are some edge cases where it's more complicated (like if a renderer can't become ready for some reason). To find out more please read the code in `ExoPlayerImplInternal` around `doSomeWork` and `shouldTransitionToReadyState`.\r\n\r\n> For mp4 files, we can ensure that the moov atom is at the start of file so that player can immediately starts playing once few seconds of data is available.\r\n\r\nThis is a good thing to do, but if the moov box isn't at the start ExoPlayer with skip (either via a range request if the intervening boxes are above a certain size, or by reading and discarding data otherwise) then read the moov box then jump back. So it's not a requirement but a good idea if you want playback to start quickly. See `Mp4Extractor.readAtomPayload`."
      },
      {
        "user": "krackjack234",
        "created_at": "2020-10-23T10:34:11Z",
        "body": "Thanks @andrewlewis "
      }
    ]
  },
  {
    "number": 8084,
    "title": "The custom render can only play for 52 seconds. Is there anything that needs special treatment?",
    "created_at": "2020-10-18T10:34:35Z",
    "closed_at": "2020-10-19T09:31:58Z",
    "labels": [
      "question",
      "need more info"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8084",
    "body": "I customized the audio and video render, processed the data in the processOutputBuffer method, and then released the outputbuffer, but each time it can only be played for 52 seconds, the processOutputBuffer stops outputting. Is there anything that needs special treatment?\r\n\r\n--------------------------\r\n\r\nThanks for answering\r\n--------------------------\r\ncode：\r\n\r\nplayer\r\n```\r\nRtmpDataSourceFactory rtmpDataSourceFactory = new RtmpDataSourceFactory();\r\n        MediaSource videoSource = new ProgressiveMediaSource.Factory(rtmpDataSourceFactory)\r\n                .createMediaSource(MediaItem.fromUri(Uri.parse(mRtmpUrl)));\r\n        TrackSelection.Factory trackSelectionFactory = new AdaptiveTrackSelection.Factory();\r\n        DefaultTrackSelector trackSelector = new DefaultTrackSelector(AppContext.get(), trackSelectionFactory);\r\n        mExoPlayer = new SimpleExoPlayer.Builder(AppContext.get(), new RenderersFactory() {\r\n            @Override\r\n            public Renderer[] createRenderers(Handler eventHandler, VideoRendererEventListener videoRendererEventListener, AudioRendererEventListener audioRendererEventListener, TextOutput textRendererOutput, MetadataOutput metadataRendererOutput) {\r\n                Renderer [] renderers = new Renderer[2];\r\n                renderers[0]= new CustomMediaCodecAudioRenderer(AppContext.get(), MediaCodecSelector.DEFAULT);\r\n                renderers[1]= new CustomMediaCodecVideoRenderer(AppContext.get(), MediaCodecSelector.DEFAULT);\r\n                return renderers;\r\n            }\r\n        }).setTrackSelector(trackSelector).build();\r\n mExoPlayer.addListener(new Player.EventListener() {\r\n ...\r\n@Override\r\n   public void onIsLoadingChanged(boolean isLoading) {\r\n      Log.info(TAG,\"onIsLoadingChanged == \"+ isLoading);\r\n               \r\n     }\r\n}\r\nmExoPlayer.setMediaSource(videoSource);\r\nmExoPlayer.prepare();\r\nmExoPlayer.setPlayWhenReady(true);\r\n```\r\n\r\nrender:\r\n\r\n```\r\npublic class CustomMediaCodecVideoRenderer extends MediaCodecVideoRenderer {\r\n ...\r\n @Override\r\n    protected boolean processOutputBuffer(long positionUs, long elapsedRealtimeUs, @Nullable MediaCodec codec, @Nullable ByteBuffer buffer, int bufferIndex, int bufferFlags, int sampleCount, long bufferPresentationTimeUs, boolean isDecodeOnlyBuffer, boolean isLastBuffer, Format format) throws ExoPlaybackException {\r\n        ByteBuffer byteBuffer = codec.getOutputBuffer(bufferIndex);\r\n        CPHAgent.instance().submitI420(byteBuffer);\r\n       codec.releaseOutputBuffer(bufferIndex,false);\r\n        return true;\r\n\r\n    }\r\n}\r\n```\r\n\r\n```\r\npublic class CustomMediaCodecAudioRenderer extends MediaCodecAudioRenderer {\r\n @Override\r\n    protected boolean processOutputBuffer(long positionUs, long elapsedRealtimeUs, @Nullable MediaCodec codec, @Nullable ByteBuffer buffer, int bufferIndex, int bufferFlags, int sampleCount, long bufferPresentationTimeUs, boolean isDecodeOnlyBuffer, boolean isLastBuffer, Format format) throws ExoPlaybackException {\r\n         ByteBuffer byteBuffer = codec.getOutputBuffer(bufferIndex);\r\n        CPHAgent.instance().submitPCM(byteBuffer);\r\n        codec.releaseOutputBuffer(bufferIndex,false);\r\n        return true;\r\n    }\r\n}\r\n```\r\nLog：(Every time the processOutputBuffer stops outputting after 52 seconds of playback, I use other players to see that the data stream is working)\r\n```\r\n2020-10-18 18:12:04.517 60205-60222/? I/[bs-java][RtmpFilter]: [RtmpDecodeFilter.java:62:setup()] -- setup() -- \r\n2020-10-18 18:12:04.517 60205-60222/? I/[bs-java][RtmpFilter]: [RtmpDecodeFilter.java:87:connect()] ==========connect=========\r\n2020-10-18 18:12:04.540 60205-60222/? I/[bs-java][RtmpFilter]: [RtmpDecodeFilter.java:163:onPlaybackStateChanged()] onPlaybackStateChanged == 2\r\n2020-10-18 18:12:04.541 60205-60222/? I/[bs-java][RtmpFilter]: [RtmpDecodeFilter.java:142:onIsLoadingChanged()] onIsLoadingChanged == true\r\n2020-10-18 18:12:04.541 60205-60222/? I/[bs-java][RtmpFilter]: [RtmpDecodeFilter.java:121:onTimelineChanged()] onTracksChanged == com.google.android.exoplayer2.PlaylistTimeline@c1eb3f82,1\r\n2020-10-18 18:12:04.648 60205-60222/? I/[bs-java][RtmpFilter]: [RtmpDecodeFilter.java:121:onTimelineChanged()] onTracksChanged == com.google.android.exoplayer2.PlaylistTimeline@ee4e81a4,1\r\n2020-10-18 18:12:04.664 60205-60222/? I/[bs-java][RtmpFilter]: [RtmpDecodeFilter.java:137:onTracksChanged()] onTracksChanged == com.google.android.exoplayer2.trackselection.TrackSelectionArray@ea0764a7\r\n2020-10-18 18:12:56.375 60205-60222/? I/[bs-java][RtmpFilter]: [RtmpDecodeFilter.java:142:onIsLoadingChanged()] onIsLoadingChanged == false\r\n```\r\n\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8084/comments",
    "author": "luohaohaha",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2020-10-19T08:47:53Z",
        "body": "Based on the information provided, I'd guess that the player position is stuck at zero because the `CustomMediaCodecAudioRenderer` is not writing data to the `AudioTrack`, whose position is normally used to determine the player position. You can verify this hypothesis by checking whether the position passed to `render` is advancing.\r\n\r\nIf you actually want to play the audio, you could try calling `super.processOutputBuffer` in your subclass. If you don't want to play the audio, I'd suggest overriding `MediaCodecAudioRenderer.getPositionUs` and making it return an advancing position (probably best to use the microsecond time associated with the latest sample you've handled). Or it might give a cleaner design to implement a custom `AudioSink` that does the audio processing you need, and just use the normal `MediaCodecAudioRenderer` instead of subclassing it.\r\n\r\nIf that doesn't help, I think we'll need a minimal sample project that reproduces the issue, or you'll need to do some investigation on your side to check whether/why the source is not ready (`MediaCodecRenderer`'s call to `readSource` in `feedInputBuffer` is not getting any data), or whether data flow is stuck somewhere else."
      },
      {
        "user": "luohaohaha",
        "created_at": "2020-10-19T09:31:58Z",
        "body": "As you said, I override the getPositionUs method and it's fine, thank you for your answer."
      }
    ]
  },
  {
    "number": 8059,
    "title": "Can the encrypted video of HLS and the key downloaded from the player be modified and then written back to the player",
    "created_at": "2020-10-09T08:35:55Z",
    "closed_at": "2020-10-28T13:58:09Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8059",
    "body": "As the title",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8059/comments",
    "author": "litaogithub",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2020-10-09T16:13:02Z",
        "body": "I don't really understand the question. Could you explain in a bit more detail?"
      },
      {
        "user": "litaogithub",
        "created_at": "2020-10-10T02:07:30Z",
        "body": "We have a requirement that HLS encrypted videos be re-encrypted to improve security, which means that the ExoPlayer download encryptionKey needs to be modified. Will it affect the workflow behind the ExoPlayer? Does ExoPlayer support such changes? thank you"
      },
      {
        "user": "litaogithub",
        "created_at": "2020-10-10T02:09:35Z",
        "body": "We have a requirement that HLS encrypted videos be re-encrypted to improve security, which means that the ExoPlayer download encryptionKey needs to be modified. Will it affect the workflow behind the ExoPlayer? Does ExoPlayer support such changes? thank you\n\n\n在 2020年10月10日 00:13，tonihei<notifications@github.com> 写道：\n\n\nI don't really understand the question. Could you explain in a bit more detail?\n—\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub, or unsubscribe."
      },
      {
        "user": "tonihei",
        "created_at": "2020-10-13T09:21:27Z",
        "body": "If you want to modify the data before it's read (including the kind of re-encryption you mention), you probably need to provide your own `DataSource` that reads and modifies the data. Have a look at other `DataSource` implementations to see how forwarding works. "
      },
      {
        "user": "tonihei",
        "created_at": "2020-10-28T13:57:46Z",
        "body": "Closing under the assumption that the question was answered."
      }
    ]
  },
  {
    "number": 8056,
    "title": "Custom style for each cue",
    "created_at": "2020-10-08T13:55:16Z",
    "closed_at": "2020-10-28T13:57:40Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8056",
    "body": "I need a custom typeface and color for upper cue. That's a problem for me and I can't find any fix for that.\r\n\r\nThanks for your time in advance.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8056/comments",
    "author": "AdisAlagic",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2020-10-08T16:06:13Z",
        "body": "There may be multiple options to achieve this:\r\n- Use a subtitle format that lets you define the style in the source. This is the ideal option as the subtitle data will then show up in the same way in other players or platforms as well and no player customizations are needed.\r\n- Intercept the `Cue`s before forwarding them to `SubtitleView`. You can add your own `TextOutput` listener to the player and forward all `Cue`s styled to your requirements to the `SubtitleView`.\r\n- Use `SubtitleView.setStyle` to define the style you want to use for your captions. This applies to all captions that don't have embedded styles and may not fit your request.\r\n- Use a customized `SubtitleView` class by forking the original and make whatever adjustment you'd like to make.\r\n"
      },
      {
        "user": "tonihei",
        "created_at": "2020-10-28T13:57:40Z",
        "body": "Closing under the assumption that the question was answered."
      }
    ]
  },
  {
    "number": 8051,
    "title": "How to play a wav file while we are filling out that file",
    "created_at": "2020-10-07T08:08:59Z",
    "closed_at": "2020-12-18T17:14:33Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8051",
    "body": "Hi\r\nI receive several integers from a smart gadget using android Bluetooth. Then I convert these numbers to a wave file. I want to play these numbers in realTime. This means that the wave file is constantly being filled. How do I do this with exoPlayer?\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8051/comments",
    "author": "abolfazlghanbari23",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2020-10-08T17:40:25Z",
        "body": "Sounds as if you need to write your own `DataSource` that can handle your input. Without knowing further details it's hard to give any more details or understand whether there is a better way to solve your problem."
      },
      {
        "user": "abolfazlghanbari23",
        "created_at": "2020-10-10T09:31:47Z",
        "body": "My android application connects to a digital stethoscope(via Bluetooth low energy) and draws a diagram of the heart sound.\r\nwe receive integer numbers and convert these integers to a wave file.\r\nAt the moment we can only play the heart sound after the heart sound recording is finished, but we want the heart sound to be played in the app at the same time as the heart sound recording."
      },
      {
        "user": "tonihei",
        "created_at": "2020-10-13T09:46:22Z",
        "body": "As said above, you probably need a custom `DataSource` to handle this. The normal `FileDataSource` will stop reading at the file size the file had when it was first opened. I think you have multiple options to approach this:\r\n 1. Don't write the data to a file and instead directly put it in some kind of buffer your custom `DataSource` can read from.\r\n 2. Write the `DataSource` so that it uses a `FileDataSource` underneath but reopens the underlying `FileDataSource` whenever you are trying to read beyond the currently known end of the file. \r\n 3. Or handle it on a higher layer: Whenever you encounter an error on the player (`EventListener.onPlayerError`), call `retry()` and playback will likely continue from the same position.\r\n\r\nGiven your requirement for low latency, I would assume option 1 is the best approach for you.  "
      },
      {
        "user": "abolfazlghanbari23",
        "created_at": "2020-10-19T10:25:46Z",
        "body": "I want to implement the first way but I do not know exactly what to do. Could you explain more?"
      },
      {
        "user": "tonihei",
        "created_at": "2020-10-28T13:53:26Z",
        "body": "You could write your data to a `ByteBuffer` or just a `byte[]` array instead of a file and then create a `ByteBufferDataSource`.   You can probably copy what the existing `ByteArrayDataSource` is doing and adapt it to read your data. The difference between the existing `ByteArrayDataSource` and your case is that your byte array keeps growing (or you create new ones) and it's not constant size as in the existing case. Other things you likely need to adapt:\r\n - The return value of `open` should be `C.LENGTH_UNSET` to indicate that your source is unbounded.\r\n - `read` should return `C.RESULT_NOTHING_READ` if data is requested beyond the currently available data. The player will then keep requesting data until it's available."
      },
      {
        "user": "abolfazlghanbari23",
        "created_at": "2020-10-31T06:19:25Z",
        "body": "How and in what format will this byte array be played? Does it have a header like the file? Is there an example of a byte array?"
      },
      {
        "user": "tonihei",
        "created_at": "2020-11-02T17:14:17Z",
        "body": "That's the same data you'd write to your wav file. It's essentially just removing the file out of the process."
      },
      {
        "user": "abolfazlghanbari23",
        "created_at": "2020-11-07T11:23:36Z",
        "body": "I did what you said, but after I call prepare on the player, it keeps the dataSource size constant and does not play the data that I then add to the byte array, and stops the player while the `read`function is called. \r\n\r\n```\r\n    @Override\r\n    public long open(DataSpec dataSpec) throws IOException {\r\n        uri = dataSpec.uri;\r\n        transferInitializing(dataSpec);\r\n        readPosition = (int) dataSpec.position;\r\n        bytesRemaining = (int) ((data.size() - dataSpec.position));\r\n        opened = true;\r\n        transferStarted(dataSpec);\r\n        return C.LENGTH_UNSET;\r\n    }\r\n\r\n    @Override\r\n    public int read(byte[] buffer, int offset, int readLength) {\r\n        if (readLength == 0) {\r\n            return C.RESULT_NOTHING_READ;\r\n        } else if (bytesRemaining == 0) {\r\n            return C.RESULT_NOTHING_READ;\r\n        }\r\n\r\n        readLength = min(readLength, bytesRemaining);\r\n        for (int i = 0; i < readLength; i++) {\r\n            buffer[offset + i] = data.get(readPosition + i);\r\n        }\r\n        readPosition += readLength;\r\n        bytesRemaining -= readLength;\r\n        bytesTransferred(readLength);\r\n        return readLength;\r\n    }\r\n```"
      },
      {
        "user": "tonihei",
        "created_at": "2020-11-09T09:25:41Z",
        "body": "How do you add the data to the byte array? In particular, do you update bytesRemaining?"
      },
      {
        "user": "abolfazlghanbari23",
        "created_at": "2020-11-09T11:04:36Z",
        "body": "When I receive new data, I add it to the data list and increase bytesRemaining by calling the increaseBytesRemaining (int x) method.\r\n\r\n\r\n```\r\npublic final class CByteArrayDataSource extends BaseDataSource {\r\n\r\n    private final List<Byte> data;\r\n\r\n    @Nullable\r\n    private Uri uri;\r\n    private int readPosition;\r\n    private int bytesRemaining;\r\n    private boolean opened;\r\n\r\n    /**\r\n     * @param data The data to be read.\r\n     */\r\n    public CByteArrayDataSource(List<Byte> data) {\r\n        super(/* isNetwork= */ false);\r\n        Assertions.checkNotNull(data);\r\n        this.data = data;\r\n    }\r\n\r\n    @Override\r\n    public long open(DataSpec dataSpec) throws IOException {\r\n        uri = dataSpec.uri;\r\n        transferInitializing(dataSpec);\r\n        readPosition = (int) dataSpec.position;\r\n        bytesRemaining = (int) ((data.size() - dataSpec.position));\r\n        opened = true;\r\n        transferStarted(dataSpec);\r\n        return C.LENGTH_UNSET;\r\n    }\r\n\r\n    @Override\r\n    public int read(@NotNull byte[] buffer, int offset, int readLength) {\r\n\r\n        if (readLength == 0 || bytesRemaining == 0)\r\n            return C.RESULT_NOTHING_READ;\r\n\r\n        readLength = min(readLength, bytesRemaining);\r\n        for (int i = 0; i < readLength; i++) {\r\n            buffer[offset + i] = data.get(readPosition + i);\r\n        }\r\n        readPosition += readLength;\r\n        bytesRemaining -= readLength;\r\n        bytesTransferred(readLength);\r\n        return readLength;\r\n    }\r\n\r\n    @Override\r\n    @Nullable\r\n    public Uri getUri() {\r\n        return uri;\r\n    }\r\n\r\n    @Override\r\n    public void close() {\r\n        if (opened) {\r\n            opened = false;\r\n            transferEnded();\r\n        }\r\n        uri = null;\r\n    }\r\n\r\n    public void increaseBytesRemaining(int x) {\r\n        bytesRemaining += x;\r\n    }\r\n}\r\n```"
      },
      {
        "user": "tonihei",
        "created_at": "2020-11-09T11:27:16Z",
        "body": "That looks correct to me. One thing you may need to be careful about is synchronization between multiple threads as I assume your byte list is filled on another thread and the `bytesRemaining` are also updated from another thread. So either use a thread safe type, or synchronize all access yourself.\r\n\r\n> and stops the player while the readfunction is called.\r\n\r\nWhat do you mean by that? I think for debugging whatever issue you have there, you should just add logging and/or use a debugger to see what's happening."
      },
      {
        "user": "tonihei",
        "created_at": "2020-12-18T17:14:33Z",
        "body": "Closing because the issue was answered and we can't provide further detailed advise on customized classes."
      }
    ]
  },
  {
    "number": 8049,
    "title": "Mi box Android 9.0 probleme audio hd",
    "created_at": "2020-10-07T01:00:15Z",
    "closed_at": "2020-10-11T18:53:09Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8049",
    "body": "Hi I installed android 9 on mi box 3, But after reboot, TrueHD and DTS HD they disappeared on kodi",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8049/comments",
    "author": "Aminebel1987",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2020-10-09T15:56:32Z",
        "body": "Please provide all the information requested in the issue template."
      },
      {
        "user": "ojw28",
        "created_at": "2020-10-11T18:53:09Z",
        "body": "You should report this issue to the developers of Kodi, not here. Thanks!"
      }
    ]
  },
  {
    "number": 8042,
    "title": "Cannot play on devices with security level L1",
    "created_at": "2020-10-05T11:03:51Z",
    "closed_at": "2020-11-08T02:04:46Z",
    "labels": [
      "question",
      "need more info",
      "closed-by-bot"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8042",
    "body": "I can't play L1 videos on devices with L1 security level. Can you give me some hints on how to find out?\r\n\r\nConfirmation environment\r\n\r\nDevice Name : ADT-3\r\nAndroid OS : 11\r\nPackage : com.google.android.exoplayer2.demo\r\nBranch : release-v2、dev-v2",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8042/comments",
    "author": "play-miyamoto",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2020-10-09T13:55:51Z",
        "body": "Please provide all the information requested in the issue template, including example media and bugreports."
      },
      {
        "user": "google-oss-bot",
        "created_at": "2020-10-29T01:04:29Z",
        "body": "<!-- event: mark-stale -->\nHey @play-miyamoto. We need more information to resolve this issue but there hasn't been an update in 14 weekdays. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2020-11-08T02:04:45Z",
        "body": "<!-- event: close-stale -->\nSince there haven't been any recent updates here, I am going to close this issue.\n\n@play-miyamoto if you're still experiencing this problem and want to continue the discussion just leave a comment here and we are happy to re-open this."
      }
    ]
  },
  {
    "number": 8026,
    "title": "PlaybackParameters not working in few android devices",
    "created_at": "2020-10-01T12:19:40Z",
    "closed_at": "2020-10-30T01:04:40Z",
    "labels": [
      "question",
      "need more info",
      "closed-by-bot"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8026",
    "body": "PlaybackParameters are not working properly in *REALME 6, POCO, LENOVO* devices.While speed is set to higher than normal than video got stuck and not playing properly by the player. We are using **WIDEVINE DRM** for playing videos.However when widevine is removed video plays smoothly.\r\n\r\n **Please help us if something we can change with encoding paramaters**\r\n\r\n\r\n                     //PlayerView myVideoView;\r\n\r\n                    myVideoView.getPlayer().setPlaybackParameters(new PlaybackParameters(1.2f, 1.0f));\r\n\r\nPlease let us know if any other input is required from our side.\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8026/comments",
    "author": "vishal-prepladder",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2020-10-01T12:38:54Z",
        "body": "Is it possible that all frames are being dropped because video decoding can't keep up with the player speed? See also #4851."
      },
      {
        "user": "google-oss-bot",
        "created_at": "2020-10-21T01:04:23Z",
        "body": "<!-- event: mark-stale -->\nHey @vishal-prepladder. We need more information to resolve this issue but there hasn't been an update in 14 weekdays. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2020-10-30T01:04:39Z",
        "body": "<!-- event: close-stale -->\nSince there haven't been any recent updates here, I am going to close this issue.\n\n@vishal-prepladder if you're still experiencing this problem and want to continue the discussion just leave a comment here and we are happy to re-open this."
      }
    ]
  },
  {
    "number": 8018,
    "title": "Ads on SurfaceView",
    "created_at": "2020-09-30T06:26:22Z",
    "closed_at": "2020-09-30T10:12:05Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8018",
    "body": "Hi, \r\n\r\nIs there any possibility to display ads on SurfaceView, with SKIP options and duration?\r\n\r\nThanks,\r\nGowtham.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8018/comments",
    "author": "gowthamkrishnabj",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2020-09-30T10:12:05Z",
        "body": "If you are using the IMA extension, the ad UI (including skip button and count down text) will be rendered in a WebView on top of the SurfaceView with video output. There isn't an option to render this UI to the SurfaceView I'm afraid. The ad media is rendered to the SurfaceView in the same way as the content media."
      }
    ]
  },
  {
    "number": 8001,
    "title": "Is there a way I can disable sound ducking?",
    "created_at": "2020-09-28T10:05:43Z",
    "closed_at": "2020-09-28T11:18:16Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/8001",
    "body": "Question:\r\nIs there a way I can disable sound ducking? \r\n\r\nUse case:\r\nI have a video played by ExoPlayer in my app, and I have a dialog with a sound also played with ExoPlayer and if the dialog is shown during the video,  the video sound is lowered, and our customer want's to keep the video sound level the same. \r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/8001/comments",
    "author": "Turbozanik",
    "comments": [
      {
        "user": "krocard",
        "created_at": "2020-09-28T11:17:13Z",
        "body": "I think what is going on, is that that the dialogue is taking the audio focus as TRANSIENT, leading to the ExoPlayer instance losing the audio focus as AUDIOFOCUS_LOSS_TRANSIENT_CAN_DUCK.\r\n\r\nNote that your dialog sound should not be very long, and the ducking should thus be quite short. If it is not the case, the video is duck longer, the issue comes from the dialog sound. Maybe it has a long silence tail?\r\n\r\nIf the ducking is short, and still an issue, you need to decide which behaviour your want you video to have:\r\n 1) never duck on any notification sound (not recommended and I will only detail if you need this solution)\r\n 2) duck normally, except for this dialog sound.\r\n\r\n2 is quite easy, just disable audio focus handling on your dialog playing ExoPlayer. When calling `Builder.setAudioAttributes`, pass false to the second parameter `handleAudioFocus`."
      },
      {
        "user": "krocard",
        "created_at": "2020-09-28T11:18:27Z",
        "body": "Please reopen if your issue is not solved."
      }
    ]
  },
  {
    "number": 7990,
    "title": "error on some devices work on others if it tells you error when playing is drm widevine content",
    "created_at": "2020-09-26T02:39:03Z",
    "closed_at": "2020-10-27T01:06:09Z",
    "labels": [
      "question",
      "need more info",
      "closed-by-bot"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7990",
    "body": "\r\nI was recently using the dash widevine playback but I see that more I am modifying and less it works for those who test it I would like to know which files should not be touched so that this does not happen",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7990/comments",
    "author": "eservicetv",
    "comments": [
      {
        "user": "krocard",
        "created_at": "2020-09-28T13:50:45Z",
        "body": "I'm sorry, but I do not understand your issue. Can you please list the steps to reproduce your issue, what you expect and what is happening. Thanks."
      },
      {
        "user": "google-oss-bot",
        "created_at": "2020-10-16T01:05:49Z",
        "body": "<!-- event: mark-stale -->\nHey @eoroscopablo. We need more information to resolve this issue but there hasn't been an update in 14 weekdays. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2020-10-27T01:06:07Z",
        "body": "<!-- event: close-stale -->\nSince there haven't been any recent updates here, I am going to close this issue.\n\n@eoroscopablo if you're still experiencing this problem and want to continue the discussion just leave a comment here and we are happy to re-open this."
      }
    ]
  },
  {
    "number": 7965,
    "title": "How to create Single Instance of ExoPlayer and use it with Multiple Different PlayerViews?",
    "created_at": "2020-09-22T16:05:14Z",
    "closed_at": "2020-09-23T15:03:32Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7965",
    "body": "Suppose if we have 6 fragment in our application named - FragmentOne, FragmentTwo, .....FragmentSix and each fragment has separate layouts attached to it with PlayerViewUI. Then in this scenario we want to create single instance of exoPlayer and attach the instance to the current displaying fragment/PlayerView and remove it when Fragment Changed/Removed.... and reattach it to new current fragment\r\n\r\nNote- creating multiple instance of exoplayer using SimpleExoPlayer.Builder is causes performance issue\r\ni also wants to initialize single data source for it.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7965/comments",
    "author": "nirazv",
    "comments": [
      {
        "user": "Samrobbo",
        "created_at": "2020-09-23T15:03:32Z",
        "body": "This sort of question is more android development related, rather than a specific question about ExoPlayer. Therefore it is more suited to ask on stack overflow.\r\n\r\n[This question on stack overflow](stackoverflow.com/q/9343241) may lead you in the right direction. I would suggest having the activity own the player, and the fragments access it through the activity."
      },
      {
        "user": "nirazv",
        "created_at": "2020-09-23T15:18:44Z",
        "body": "Its not like how we create singleton or pass data between fragments/Activities. I think you not understood my question properly.\r\n\r\nPlease reopen it but before read below..\r\n\r\nIn earlier version SimpleExoPlayer.Factory was the only method to create singleton of ExoPlayer. Now in the version of \r\n2.12.0 its removed/deprecated now what next? consider following:\r\n\r\nCreating multiple instance of simpleExoPlayer (ex- more than 2 instance) make playerView slower than usual so its better to create singleton of exoplayer?\r\n\r\nHow we can create Singleton of ExoPlayer in 2.12.0? when Factory method is deprecated?\r\n\r\nI dont know how to reopen this issue but let me create a new issue for the same because you dont understood my question properly "
      }
    ]
  },
  {
    "number": 7955,
    "title": "With v2.12.0 playlist api, how do I know which source causes the onPlayerError",
    "created_at": "2020-09-21T08:30:29Z",
    "closed_at": "2020-09-21T15:03:28Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7955",
    "body": "### [REQUIRED] Searched documentation and issues\r\nLooked at StackOverflow and other issues. Could not find anything related\r\n\r\n### [REQUIRED] Question\r\nI using the new playlist API provided with v2.12.0 and loading multiple `MediaItem`s into the player. One of the sources throws an `ExoPlaybackException` of `ExoPlaybackException.TYPE_SOURCE` type.\r\n\r\nHow do I know which media item this relates to?\r\n\r\n### A full bug report captured from the device\r\nNo specific bug is referred to.\r\n\r\n### Link to test content\r\nGeneral question that does not relate to a specific source.\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7955/comments",
    "author": "strangesource",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2020-09-21T12:53:18Z",
        "body": "I think in this case the field `ExoPlaybackException.mediaPeriodId` has a media period id assigned (it is not null). If so you can do something like this:\r\n\r\n```\r\nMediaSource.MediaPeriodId mediaPeriodId = playbackException.mediaPeriodId;\r\nint windowIndex = player.getCurrentTimeline()\r\n   .getPeriodByUid(mediaPeriodId.periodUid, new Timeline.Period()).windowIndex;\r\nplayer.removeMediaItem(windowIndex);\r\n```\r\n\r\nPlease note, that the above assumes that you are having a 1:1 relationship between media items and windows in the timeline. This means you are not using a `ConcatenatingMediaSource`. In case you are only using the new API with `MediaItem` you are fine. \r\n\r\nPlease let me know whether that works for you."
      },
      {
        "user": "tonihei",
        "created_at": "2020-09-21T13:03:41Z",
        "body": "You can also use `AnalyticsListener` and listen to `onPlayerError` which has an `EventTime` argument with a `windowIndex` field. This is essentially equivalent to the proposal above, but easier to read in code:\r\n```\r\n@Override\r\n public void onPlayerError(EventTime eventTime, ExoPlaybackException e) {\r\n    Log.e(\"ERROR\", \"Media item number \" + eventTime.windowIndex + \" failed.\");\r\n }\r\n```"
      },
      {
        "user": "strangesource",
        "created_at": "2020-09-21T13:36:49Z",
        "body": "Thanks a lot for the fast answers, this solves my problem. 🙂  🙇 "
      },
      {
        "user": "marcbaechinger",
        "created_at": "2020-09-21T15:03:28Z",
        "body": "Cool, thanks for letting us know. I'm closing this issue. Please re-open if you think it is needed."
      }
    ]
  },
  {
    "number": 7915,
    "title": "MediaItem.Builder() doesn't contain StreamType in ExoPlayer 2.12.0",
    "created_at": "2020-09-15T10:55:40Z",
    "closed_at": "2020-09-15T22:30:40Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7915",
    "body": "Hello,\r\n\r\nUntil ExoPlayer 2.12.0 i used `MediaInfo.Builder()` where i could set media stream type, for example: `.setStreamType(MediaInfo.STREAM_TYPE_LIVE)` and then i passed all information to the `MediaQueueItem.Builder()` to cast video to Google Chromecast.\r\n\r\nIn the new ExoPlayer 2.12.0 version i have to use `MediaItem.Builder()` now. And it is impossible to set media stream type now.\r\nOr maybe i'm missing something?\r\n\r\nThank you.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7915/comments",
    "author": "menscikov",
    "comments": [
      {
        "user": "menscikov",
        "created_at": "2020-09-15T11:25:52Z",
        "body": "There is also a problem with `com.google.android.exoplayer2.MediaMetadata` class.\r\nIt's only accepting \"title\" now.\r\n\r\nEarlier i used `com.google.android.gms.cast.MediaMetadata` class, and i could set \"title\", \"subtitle\", \"image\" and other options to metadata with `MediaInfo.Builder()`.\r\n\r\nBut now `MediaItem.Builder()` is only accepting `MediaMetadata` class from `com.google.android.exoplayer2`."
      },
      {
        "user": "menscikov",
        "created_at": "2020-09-15T11:29:14Z",
        "body": "Maybe it's better to leave `MediaQueueItem.Builder()` and make `CastPlayer.loadItem()` method not deprecated for Google Chromecast?"
      },
      {
        "user": "marcbaechinger",
        "created_at": "2020-09-15T11:59:14Z",
        "body": "You can pass a `MediaItemConverter` to the constructor of the `CastPlayer`. This lets you convert the `MediaItem` to a `MediaQueueItem` which is then sent to `RemoteMediaClient`.\r\n\r\nIf you want to transport custom data with the `MediaItem` you can do so by using `new MediaItem.Builder().setTag(object)`. This can be retrieved in the converter by using `mediaItem.playbackProperties.tag` and then converted to the `MediaQueueItem` ."
      },
      {
        "user": "menscikov",
        "created_at": "2020-09-15T17:00:58Z",
        "body": "> You can pass a `MediaItemConverter` to the constructor of the `CastPlayer`. This lets you convert the `MediaItem` to a `MediaQueueItem` which is then sent to `RemoteMediaClient`.\r\n> \r\n> If you want to transport custom data with the `MediaItem` you can do so by using `new MediaItem.Builder().setTag(object)`. This can be retrieved in the converter by using `mediaItem.playbackProperties.tag` and then converted to the `MediaQueueItem` .\r\n\r\nCould you please give an example how to do that?\r\nI can't understand how can i convert `MediaQueueItem` to `MediaItem` with all options, like \"streamType\" and `MediaMetadata` \"title\", \"subtitle\", \"image\"?\r\nCastPlayer is accepting only `MediaItem` now in ExoPlayer 2.12.0 version.\r\n\r\n`DefaultMediaItemConverter().toMediaItem` class doesn't allow to do this."
      },
      {
        "user": "marcbaechinger",
        "created_at": "2020-09-15T17:39:47Z",
        "body": "Sorry to not give you enough details. You are right it's confusing. Specifically because the conversion back which confused you is currently unused. Please accept my apologies of not being clear here.\r\n\r\nOn the bright side, this should make things easier for you. You said above that your app is building a `MediaQueueItem` with `MediaQueueItem.Builder()`. If you aim for doing this with the least possible changes in you code it would probably be something like the following:\r\n\r\nImplement your custom `MediaItemConverter`:\r\n\r\n```\r\npublic class CustomConverter implements MediaItemConverter {\r\n  public MediaQueueItem toMediaQueueItem(MediaItem mediaItem) {\r\n       // The MediaQueueItem you build is expected to be in the tag.\r\n       return (MediaQueueItem)mediaItem.playbackProperties.getTag();\r\n  }\r\n  public MediaItem toMediaItem(MediaQueueItem Item) {\r\n      // This should give the same as when you build your media item to be passed to ExoPlayer.\r\n      return new MediaItem.Builder()\r\n          .setUri(item.getMedia().getContentUrl())\r\n          .setTag(item)\r\n          .build();\r\n  }\r\n}\r\n\r\n// The custom converter is used to create the cast player.\r\nCastPlayer castPlayer = CastPlayer(castContext, new CustomConverter());\r\n\r\n// You code builds a MediaQueueItem\r\nMediaQueueItem queueItem = MediaQueueItem.Builder().setXyz().build();\r\n// and ads it as the tag of the media item\r\nMediaItem mediaItem = new MediaItem.Build().setUri(uri).setTag(queueItem).build();\r\n\r\n// Add the item to the cast player which uses the converter internally.\r\ncastPlayer.addMediaItem(mediaItem);\r\nsimpleExoPlayer.addMediaItem(mediaItem);\r\n```\r\n\r\nYou could use any object as the tag. But given your code builds the media queue item already it's probably easiest to just use this.\r\n\r\nYour app can now use the same API like `addMediaItem` on both, the `CastPlayer` and `SimpleExoPlayer` because both implement the `Player` interface. ExoPlayer will just ignore the tag which you only need to create the queue item."
      },
      {
        "user": "menscikov",
        "created_at": "2020-09-15T18:07:11Z",
        "body": "Thank you very much for the explanation. It's working now!"
      },
      {
        "user": "marcbaechinger",
        "created_at": "2020-09-15T22:30:40Z",
        "body": "Cool. I'm glad it works :) \r\n\r\nI close this issue for now. Please re-open if you have further questions. Happy to help!"
      }
    ]
  },
  {
    "number": 7885,
    "title": "I want play video with subtitle offline, but i can not run",
    "created_at": "2020-09-10T18:31:58Z",
    "closed_at": "2020-09-28T16:24:06Z",
    "labels": [
      "question",
      "need more info"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7885",
    "body": "### [REQUIRED] Question\r\nWe can not play subtitle offline local device Sony XZ Premium\r\nApplication is run file video offline, but can not run with subtitle \r\nCan you support\r\nThis is logcat report \r\n### A full bug report captured from the device\r\n\r\n> Caused by: com.google.android.exoplayer2.upstream.FileDataSource$FileDataSourceException: \r\n```\r\njava.io.FileNotFoundException: /storage/emulated/0/Download/136614.vie.vtt: open failed: ENOENT (No such file or directory)\r\n>         at com.google.android.exoplayer2.upstream.FileDataSource.openLocalFile(FileDataSource.java:119)\r\n>         at com.google.android.exoplayer2.upstream.FileDataSource.open(FileDataSource.java:88)\r\n>         at com.google.android.exoplayer2.upstream.DefaultDataSource.open(DefaultDataSource.java:177) \r\n>         at com.google.android.exoplayer2.upstream.cache.CacheDataSource.openNextSource(CacheDataSource.java:487) \r\n>         at com.google.android.exoplayer2.upstream.cache.CacheDataSource.open(CacheDataSource.java:288) \r\n>         at com.google.android.exoplayer2.upstream.StatsDataSource.open(StatsDataSource.java:83) \r\n>         at com.google.android.exoplayer2.source.SingleSampleMediaPeriod$SourceLoadable.load(SingleSampleMediaPeriod.java:404) \r\n>         at com.google.android.exoplayer2.upstream.Loader$LoadTask.run(Loader.java:415) \r\n>         at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167) \r\n>         at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641) \r\n>         at java.lang.Thread.run(Thread.java:764) \r\n>      Caused by: java.io.FileNotFoundException: /storage/emulated/0/Download/136614.vie.vtt: open failed: ENOENT (No such file or directory)\r\n>         at libcore.io.IoBridge.open(IoBridge.java:485)\r\n>         at java.io.RandomAccessFile.<init>(RandomAccessFile.java:288)\r\n>         at java.io.RandomAccessFile.<init>(RandomAccessFile.java:151)\r\n>         at com.google.android.exoplayer2.upstream.FileDataSource.openLocalFile(FileDataSource.java:108)\r\n>         at com.google.android.exoplayer2.upstream.FileDataSource.open(FileDataSource.java:88) \r\n>         at com.google.android.exoplayer2.upstream.DefaultDataSource.open(DefaultDataSource.java:177) \r\n>         at com.google.android.exoplayer2.upstream.cache.CacheDataSource.openNextSource(CacheDataSource.java:487) \r\n>         at com.google.android.exoplayer2.upstream.cache.CacheDataSource.open(CacheDataSource.java:288) \r\n>         at com.google.android.exoplayer2.upstream.StatsDataSource.open(StatsDataSource.java:83) \r\n>         at com.google.android.exoplayer2.source.SingleSampleMediaPeriod$SourceLoadable.load(SingleSampleMediaPeriod.java:404) \r\n>         at com.google.android.exoplayer2.upstream.Loader$LoadTask.run(Loader.java:415) \r\n>         at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167) \r\n>         at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641) \r\n>         at java.lang.Thread.run(Thread.java:764) \r\n>      Caused by: android.system.ErrnoException: open failed: ENOENT (No such file or directory)\r\n>         at libcore.io.Linux.open(Native Method)\r\n>         at libcore.io.BlockGuardOs.open(BlockGuardOs.java:210)\r\n>         at libcore.io.IoBridge.open(IoBridge.java:471)\r\n>         at java.io.RandomAccessFile.<init>(RandomAccessFile.java:288) \r\n>         at java.io.RandomAccessFile.<init>(RandomAccessFile.java:151) \r\n>         at com.google.android.exoplayer2.upstream.FileDataSource.openLocalFile(FileDataSource.java:108) \r\n>         at com.google.android.exoplayer2.upstream.FileDataSource.open(FileDataSource.java:88) \r\n>         at com.google.android.exoplayer2.upstream.DefaultDataSource.open(DefaultDataSource.java:177) \r\n>         at com.google.android.exoplayer2.upstream.cache.CacheDataSource.openNextSource(CacheDataSource.java:487) \r\n>         at com.google.android.exoplayer2.upstream.cache.CacheDataSource.open(CacheDataSource.java:288) \r\n>         at com.google.android.exoplayer2.upstream.StatsDataSource.open(StatsDataSource.java:83) \r\n>         at com.google.android.exoplayer2.source.SingleSampleMediaPeriod$SourceLoadable.load(SingleSampleMediaPeriod.java:404) \r\n>         at com.google.android.exoplayer2.upstream.Loader$LoadTask.run(Loader.java:415) \r\n>         at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167) \r\n>         at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641) \r\n>         at java.lang.Thread.run(Thread.java:764) \r\n>     ]\r\n```",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7885/comments",
    "author": "longquangpham90",
    "comments": [
      {
        "user": "kim-vde",
        "created_at": "2020-09-11T14:05:23Z",
        "body": "The `FileDataSource` does not find the file `/storage/emulated/0/Download/136614.vie.vtt`.\r\n\r\nWhat happens if you execute `adb ls /storage/emulated/0/Download`? Does the file exist?"
      },
      {
        "user": "longquangpham90",
        "created_at": "2020-09-12T00:57:37Z",
        "body": "yes file is exist\r\nwe can read and open with File Manager, but EXOPlayer can not run "
      },
      {
        "user": "kim-vde",
        "created_at": "2020-09-14T13:38:56Z",
        "body": "`FileDataSource` uses a `RandomAccessFile` to read the file (at least in the latest version of ExoPlayer). Can you debug and check what are the parameters passed to the constructor of `RandomAccessFile`? What version of ExoPlayer are you using?"
      }
    ]
  },
  {
    "number": 7857,
    "title": "Screen rotation issue",
    "created_at": "2020-09-05T16:34:16Z",
    "closed_at": "2020-09-07T17:16:36Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7857",
    "body": "Dear sir\nFacing screen rotation related issue if we flip horizontal or vertical the flip screen both playerview and controller view I want flip only player view\nI trying with code\nplayerView.setRotationX(playerView.getRotationX+180f);\n\n\nSorry for any typo\nThanks for advance",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7857/comments",
    "author": "hinditutorpoint",
    "comments": [
      {
        "user": "kim-vde",
        "created_at": "2020-09-07T16:31:36Z",
        "body": "I don't think there is any easy way to do that.\r\n\r\nYou could try to add an OrientationEventListener on your activity and dynamically move the controls around when the screen is rotated.\r\n\r\nMaybe @ojw28 has a better idea?"
      },
      {
        "user": "hinditutorpoint",
        "created_at": "2020-09-07T17:09:24Z",
        "body": "Thanks for replay sir \r\nI found easy method\r\n1 surface type texture view\r\nView mVideoView=playerView.getVideoSurfaceView()\r\nmVideoView.setRotationX(mVideoView.getRotationX+180f);"
      }
    ]
  },
  {
    "number": 7830,
    "title": "Seeking issue on mp3 files",
    "created_at": "2020-08-31T08:16:09Z",
    "closed_at": "2020-08-31T20:47:23Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7830",
    "body": "Since my last issue (#7355) is closed, I'm opening a new issue. While we are waiting for the implementation on Release `2.12.0`, is there any workaround to make the seeking more accurate?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7830/comments",
    "author": "zjamshidi",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2020-08-31T20:47:23Z",
        "body": "It seems like the feature you need is part of `2.12.0`, so there's not really any way around that unless you want to (a) try and use the `dev-v2` branch rather than a stable release, or (b) try and back-port the changes yourself to whatever release you're using.\r\n\r\nThe good news is `2.12.0` is arriving very soon (tentatively targeted for this week), so you're probably best off just waiting."
      },
      {
        "user": "zjamshidi",
        "created_at": "2020-09-01T07:02:48Z",
        "body": "Thanks for your reply. I will wait for the release"
      }
    ]
  },
  {
    "number": 7816,
    "title": "VideoCapabilities: Unsupported profile 2 for video/mpeg2",
    "created_at": "2020-08-27T16:02:22Z",
    "closed_at": "2020-09-27T01:04:49Z",
    "labels": [
      "question",
      "need more info",
      "closed-by-bot"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7816",
    "body": "```\r\nD/PlayVideoActivity: onTimelineChanged: \r\nD/PlayVideoActivity: onLoadingChanged: \r\nD/PlayVideoActivity: onTimelineChanged: \r\nW/AudioCapabilities: Unsupported mime audio/dtshd\r\nW/AudioCapabilities: Unsupported mime audio/ffmpeg\r\nW/VideoCapabilities: Unsupported mime video/x-vnd.on2.vp6a\r\nW/VideoCapabilities: Unsupported mime video/x-vnd.on2.vp6f\r\nW/VideoCapabilities: Unsupported mime video/avs\r\nW/VideoCapabilities: Unsupported mime video/avs2\r\nW/VideoCapabilities: Unrecognized profile 4 for video/hevc\r\nW/VideoCapabilities: Unsupported mime video/mjpeg\r\nW/VideoCapabilities: Unrecognized profile/level 0/3 for video/mpeg2\r\nI/VideoCapabilities: Unsupported profile 2 for video/mpeg2\r\nI/VideoCapabilities: Unsupported profile 3 for video/mpeg2\r\nI/VideoCapabilities: Unsupported profile 4 for video/mpeg2\r\nI/VideoCapabilities: Unsupported profile 5 for video/mpeg2\r\nI/VideoCapabilities: Unsupported profile 2 for video/mp4v-es\r\nI/VideoCapabilities: Unsupported profile 4 for video/mp4v-es\r\nI/VideoCapabilities: Unsupported profile 8 for video/mp4v-es\r\nI/VideoCapabilities: Unsupported profile 16 for video/mp4v-es\r\nI/VideoCapabilities: Unsupported profile 32 for video/mp4v-es\r\nI/VideoCapabilities: Unsupported profile 64 for video/mp4v-es\r\nI/VideoCapabilities: Unsupported profile 128 for video/mp4v-es\r\nI/VideoCapabilities: Unsupported profile 256 for video/mp4v-es\r\nI/VideoCapabilities: Unsupported profile 512 for video/mp4v-es\r\nI/VideoCapabilities: Unsupported profile 1024 for video/mp4v-es\r\nI/VideoCapabilities: Unsupported profile 2048 for video/mp4v-es\r\nI/VideoCapabilities: Unsupported profile 4096 for video/mp4v-es\r\nI/VideoCapabilities: Unsupported profile 8192 for video/mp4v-es\r\nI/VideoCapabilities: Unsupported profile 16384 for video/mp4v-es\r\nW/VideoCapabilities: Unsupported mime video/rm10\r\nW/VideoCapabilities: Unsupported mime video/rm20\r\nW/VideoCapabilities: Unsupported mime video/rm30\r\nW/VideoCapabilities: Unsupported mime video/rm40\r\nW/VideoCapabilities: Unsupported mime video/vc1\r\nW/Utils: could not parse long range '1-'\r\nW/VideoCapabilities: Unrecognized level 16 for video/x-vnd.on2.vp8\r\nW/VideoCapabilities: Unrecognized level 32 for video/x-vnd.on2.vp8\r\nW/VideoCapabilities: Unrecognized level 64 for video/x-vnd.on2.vp8\r\nW/VideoCapabilities: Unrecognized level 128 for video/x-vnd.on2.vp8\r\nW/VideoCapabilities: Unrecognized level 256 for video/x-vnd.on2.vp8\r\nW/VideoCapabilities: Unrecognized level 512 for video/x-vnd.on2.vp8\r\nW/VideoCapabilities: Unrecognized level 1024 for video/x-vnd.on2.vp8\r\nW/VideoCapabilities: Unrecognized level 2048 for video/x-vnd.on2.vp8\r\nW/VideoCapabilities: Unrecognized level 4096 for video/x-vnd.on2.vp8\r\nW/VideoCapabilities: Unrecognized level 8192 for video/x-vnd.on2.vp8\r\nW/VideoCapabilities: Unrecognized level 16384 for video/x-vnd.on2.vp8\r\nW/VideoCapabilities: Unrecognized level 32768 for video/x-vnd.on2.vp8\r\nW/VideoCapabilities: Unsupported mime video/wmv3\r\nW/VideoCapabilities: Unsupported mime video/wmv1\r\nW/VideoCapabilities: Unsupported mime video/wmv2\r\nW/VideoCapabilities: Unsupported mime video/x-ms-wmv\r\nW/VideoCapabilities: Unsupported mime video/wvc1\r\nW/Utils: could not parse long range '1-'\r\nI/VideoCapabilities: Unsupported profile 4 for video/mp4v-es\r\nD/MediaCodecInfo: NoSupport [sizeAndRate.support, 3840x2160x24.0] [OMX.google.h264.decoder, video/avc] [kvim3, VIM3, Khadas, 28]\r\n```\r\n\r\n**Getting above error only when I open app first time and also screen became black while video is playing . After if I open video activity again then video is playing correctly and working as expected.**",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7816/comments",
    "author": "MehulKSimform",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2020-08-28T18:38:29Z",
        "body": "I don't think all of the `Unsupported profile` logging is relevant.  The only relevant log line is:\r\n```\r\nMediaCodecInfo: NoSupport [sizeAndRate.support, 3840x2160x24.0] [OMX.google.h264.decoder, video/avc] [kvim3, VIM3, Khadas, 28]\r\n```\r\nwhich indicates that the device doesn't support the resolution (4K) of the video being played. It's possible that the player will select the track anyway, and that playback will succeed, if the device is under-reporting its true capabilities.\r\n\r\nThe information provided is not really sufficient for us to diagnose exactly what's going on. It could be that playback can succeed as mentioned above, and that your application code has some other issue that's causing the surface to not be attached correctly the first time your app is opened. Does the issue reproduce in the ExoPlayer demo app? If so, please include a full bug report captured with `adb bugreport` shortly after the issue occurs. If it doesn't reproduce in the demo app, then it's likely a bug in your application code."
      },
      {
        "user": "google-oss-bot",
        "created_at": "2020-09-17T01:04:36Z",
        "body": "<!-- event: mark-stale -->\nHey @MehulKSimform. We need more information to resolve this issue but there hasn't been an update in 14 weekdays. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2020-09-27T01:04:49Z",
        "body": "<!-- event: close-stale -->\nSince there haven't been any recent updates here, I am going to close this issue.\n\n@MehulKSimform if you're still experiencing this problem and want to continue the discussion just leave a comment here and we are happy to re-open this."
      }
    ]
  },
  {
    "number": 7796,
    "title": "Have Both LeastRecentlyUsedCacheEvictor for Playback cache and NoOpCacheEvictor for downloads",
    "created_at": "2020-08-24T08:15:55Z",
    "closed_at": "2020-08-27T08:08:34Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7796",
    "body": "So I am working on an Audio Streaming app which allows the audio to be downloaded as well. Everything is going perfectly fine with NoOpCacheEvictor. But Cache size is increasing astronomically. I decided to use LeastRecentlyUsedCacheEvictor which will work with Cache size but will also probably remove downloaded audios as well.\r\n\r\nIs there any way I can use both which will clear Cache automatically but make sure that downloaded audios are not deleted?\r\nThe document mentions to have a separate solution when using NoOpCacheEvictor. Is giving an option to Clear Cache the only way? If it is how do I make sure when I clear cache manually, Downloaded data is not cleared as well.\r\nI have looked for this solution everywhere on documentation, github and Stackoverflow\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7796/comments",
    "author": "suchoX",
    "comments": [
      {
        "user": "AquilesCanta",
        "created_at": "2020-08-24T16:49:16Z",
        "body": "I'm not clear about the whole problem but is it an option for you to use two different caches: One for playback caching and one for downloading? The former uses LRU CacheEvictor, and the latter uses NoOpCacheEvictor.\r\n\r\nIf you want to use a single cache, you can implement your own evictor which does whatever you specifically want, like LRU for video streams, and no eviction for audio streams.\r\n\r\nCan you provide a bit more context so I can understand why neither of the options above work?"
      },
      {
        "user": "suchoX",
        "created_at": "2020-08-27T08:08:34Z",
        "body": "@AquilesCanta I think I solved It. I Never thought you can have different DataSource for different Media on the same Concatenating Media Source. I created two caches and two datasource using the two caches and based on download status I am adding the respective Datasource. Closing This issue. "
      }
    ]
  },
  {
    "number": 7782,
    "title": "Switch between video and view at given times",
    "created_at": "2020-08-19T05:15:33Z",
    "closed_at": "2020-08-21T12:41:48Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7782",
    "body": "I'm looking for a way to stop the video at, let's say 10s, pause the video switch to another view and when the user is finished with that view, start back the video display.\r\n\r\nAfter looking at the dev website, I was wondering if this could be done with IMA ads but I guess it can't be done because I need indefinite time for the in-middle view. \r\n\r\nIs there any way I can do this? Then is there a way to display little vertical yellow bars (at switching position) in the seekbar as you do for ads ?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7782/comments",
    "author": "Clement-Jean",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2020-08-19T11:56:41Z",
        "body": "You can use ad markers for marking positions and fire player messages at the given playback positions to run your code:\r\n\r\n```\r\nlong[] extraAdGroupTimesMs = new long[]{20_000, 40_000};\r\nplayerView.setExtraAdGroupMarkers(extraAdGroupTimesMs, new boolean[] { false, false});\r\n```\r\n\r\nThe first argument is an array holding the positions on the timebar of the `PlayerControlView`. The second argument is an array of flags whether these markers should be shown or not.\r\n\r\nYou can customize the color of the markers by customizing the `player_control_view.xml` layout file and replacing the placeholder with id `exo_progress_placeholder` with a DefaultTimeBar element with id `exo_progress`:\r\n\r\n```  \r\n  <com.google.android.exoplayer2.ui.DefaultTimeBar\r\n    android:id=\"@id/exo_progress\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_gravity=\"bottom\"\r\n    app:ad_marker_color=\"@color/customAdMarkerColor\" />\r\n```\r\n\r\nAnd finally you can add player messages which can execute custom code at a given position:\r\n\r\n```\r\nfor (int i = 0; i < extraAdGroupTimesMs.length; i++) {\r\n  long positionMs = extraAdGroupTimesMs[i];\r\n  PlayerMessage playerMessage = player.createMessage(\r\n      (messageType, payload) -> {\r\n        Log.d(\"player message\", \"message at position: \" + positionMs);\r\n        // do what you need to do\r\n        player.setPlayWhenReady(false);\r\n        switchToAnotherView();\r\n      });\r\n\r\n  playerMessage\r\n      .setPosition(positionMs) // the playback position according to the markers\r\n      .setDeleteAfterDelivery(false) \r\n      .setHandler(new Handler())\r\n      .send();\r\n}\r\n```"
      },
      {
        "user": "Clement-Jean",
        "created_at": "2020-08-19T14:13:28Z",
        "body": "Thank you @marcbaechinger, very helpful.\r\n\r\nJust one thing to add here, I needed to use activity.runOnUiThread in the lambda or I would have an error saying that you need to be in the same thread for changing the player and the view."
      },
      {
        "user": "marcbaechinger",
        "created_at": "2020-08-19T15:57:43Z",
        "body": "Oh, yes, sorry. I forgot to add the `setHandler(new Handler())` call. I added it to the snippet above. If you pass the handler, the message is executed on the thread on which the `Handler` has been created. Assuming you send the message on the UI thread this would do what you want."
      },
      {
        "user": "marcbaechinger",
        "created_at": "2020-08-21T12:41:48Z",
        "body": "I close this for now. Please re-open if you have any further question."
      }
    ]
  },
  {
    "number": 7775,
    "title": "How can I get current position realtime when ExoPlay are running?",
    "created_at": "2020-08-18T08:36:26Z",
    "closed_at": "2020-09-11T17:30:11Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7775",
    "body": "I do not find anything to the listener when my video is running? Please help me!",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7775/comments",
    "author": "kunpark168",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2020-08-18T11:35:44Z",
        "body": "There is the method 'Player.getCurrentPosition()' which gives the current position. You are correct that there is no listener on the player which calls your app repeatedly to report changes in the position. \r\n\r\nThere is `PlayerControlView.setProgressUpdateListener` to register a `ProgressUpdateListener`. It is called each time the UI has updated so you can sync with UI updates. The interval of calling this listener varies according to whether the player is playing or not.\r\n\r\nDepending on your use case, it's probably easiest to implement your own polling from the app thread that calls `getCurrentPosition()` frequently. The `View` class gives you an easy option to call a `Runnable` delayed. A simple implementation could look like this:\r\n\r\n```\r\nprivate void getCurrentPlayerPosition() {\r\n  Log.d(\"TAG\", \"current pos: \" + player.getCurrentPosition());\r\n  if (player.isPlaying()) {\r\n      playerView.postDelayed(this::getCurrentPlayerPosition, POLL_INTERVAL_MS);\r\n  }\r\n}\r\n\r\nplayer.addListener(new Player.EventListener() {\r\n  @Override\r\n  public void onIsPlayingChanged(boolean isPlaying) {\r\n    if (isPlaying) {\r\n      playerView.postDelayed(this::getCurrentPlayerPosition, POLL_INTERVAL_MS);\r\n    }\r\n  }\r\n});\r\n```\r\n"
      }
    ]
  },
  {
    "number": 7773,
    "title": "Please help me implement audio into playlist using ClippingMediaSource",
    "created_at": "2020-08-18T03:50:00Z",
    "closed_at": "2020-08-18T08:50:00Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7773",
    "body": "I have list of video, then I buildMediaSource by ConcatenatingMediaSource together \r\n// These factories are used to construct two media sources below\r\n        val dataSourceFactory : DataSource.Factory = DefaultDataSourceFactory(this, \"ABC\")\r\n        val mediaSourceFactory = ProgressiveMediaSource.Factory(dataSourceFactory)\r\n\r\n        val concatenatingMediaSource = ConcatenatingMediaSource()\r\n        for (videoUri in list) {\r\n            concatenatingMediaSource.addMediaSource( mediaSourceFactory.createMediaSource(videoUri)\r\n         }\r\n\r\n      return concatenatingMediaSource\r\n\r\nNow, I have audio, I want to play audio at 00:05 seconds, it's mean when the playlist play at 5s,  I want to start audio together, how can I do that?\r\n\r\nIn my code, but it's not working\r\n\r\n             val audiSource = ProgressiveMediaSource.Factory(dataSourceFactory).createMediaSource(Uri.parse(it))\r\n\r\n             return  MergingMediaSource(\r\n                concatenatingMediaSource,\r\n                ClippingMediaSource(audiSource, 5000000, C.TIME_END_OF_SOURCE)\r\n            )\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7773/comments",
    "author": "AndersonCrew",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2020-08-18T08:49:59Z",
        "body": "Please try `adjustPeriodTimeOffsets` added in 0a89d0e8c3b0fa1a5e211e72ef95d35a1c69b5b3, and see also #6103. This is currently on the `dev-v2` branch but will be in a release soon."
      }
    ]
  },
  {
    "number": 7759,
    "title": "Adapting bar height for DefaultTimeBar when dragging/in focus",
    "created_at": "2020-08-15T12:22:17Z",
    "closed_at": "2021-09-07T22:54:57Z",
    "labels": [
      "question",
      "low priority"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7759",
    "body": "I use `ExoPlayer `in my `Android `App and I try to customize player controls. All works fine, but I didn't find, how to change field `bar_height `for `DefaultTimeBar` for several states. For now I use it like the following:\r\n\r\n  ```\r\n<com.google.android.exoplayer2.ui.DefaultTimeBar\r\n                    android:id=\"@id/exo_progress\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"26dp\"\r\n                    android:layout_centerVertical=\"true\"\r\n                    android:focusable=\"true\"\r\n                    app:bar_height=\"4dp\"\r\n                    app:buffered_color=\"@color/gray\"\r\n                    app:played_color=\"@color/red\"\r\n                    app:scrubber_color=\"@color/white\"\r\n                    app:scrubber_dragged_size=\"24dp\"\r\n                    app:scrubber_enabled_size=\"12dp\"\r\n                    app:unplayed_color=\"@color/white_transparent_30p\" />\r\n\r\n```\r\n\r\nAnd I see that scrubber size changes depending on focus state (it is what I want), but `bar_height` is always `4dp` and I can not find how to change it for state \"in focus\". How can I do it?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7759/comments",
    "author": "AlexDundar",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2020-08-17T20:13:37Z",
        "body": "Setting `app:bar_height=\"4dp\"` with a `com.google.android.exoplayer2.ui.DefaultTimeBar` works fine as you say and I double checked. There is currently no way to change the `bar_height` depending on a give state like for the scrubber I'm afraid. "
      },
      {
        "user": "ojw28",
        "created_at": "2021-09-07T22:54:57Z",
        "body": "Closing because we have no plan to support this. Developers are free to fork our UI components if they require very specific customizations."
      }
    ]
  },
  {
    "number": 7758,
    "title": "Buffering Issues",
    "created_at": "2020-08-14T19:08:22Z",
    "closed_at": "2020-09-15T01:04:30Z",
    "labels": [
      "question",
      "need more info",
      "closed-by-bot"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7758",
    "body": "Hello,\r\n\r\nI am using Exoplayer Version 2.11.4 in a Leanback (AndroidTV) application. My media source is ProgressiveMediaSource. The media is hosted on remote server. I have noticed that when I play the exact same source with Exoplayer, I see a lot of buffering issues (often player is stuck buffering the stream).... The same stream works perfectly fine on another player (I have tried VLC and Kodi's media player). Currently I am using Exoplayer with DefaultLoadControl and default buffer duration settings. Since my application is targeted for high powered devices (Android TV), is there any recommended setting that I need to do to fix this buffering issues?\r\n\r\nThanks in advance.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7758/comments",
    "author": "isaranghi",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2020-08-17T15:22:28Z",
        "body": "Can you provide us with a URL to one of these streams so we can look into this?"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2020-09-04T01:04:25Z",
        "body": "<!-- event: mark-stale -->\nHey @nafr1. We need more information to resolve this issue but there hasn't been an update in 14 weekdays. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2020-09-15T01:04:30Z",
        "body": "<!-- event: close-stale -->\nSince there haven't been any recent updates here, I am going to close this issue.\n\n@nafr1 if you're still experiencing this problem and want to continue the discussion just leave a comment here and we are happy to re-open this."
      }
    ]
  },
  {
    "number": 7754,
    "title": "Reading the TsExtractor code and see its methods `sniff(ExtractorInput input)`， some problems ",
    "created_at": "2020-08-14T09:57:09Z",
    "closed_at": "2020-08-14T10:42:11Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7754",
    "body": "Reading the TsExtractor code and see its methods `sniff(ExtractorInput input)`， some problems behind it：\r\n\r\n```\r\npublic static final int TS_PACKET_SIZE = 188; // why it is 188？\r\nprivate static final int SNIFF_TS_PACKET_COUNT = 5; // why it is 5？\r\nprivate static final int SNIFF_TS_PACKET_COUNT = 5; // why it is 5？\r\n\r\npublic boolean sniff(ExtractorInput input) throws IOException, InterruptedException {\r\n    byte[] buffer = tsPacketBuffer.data;\r\n    input.peekFully(buffer, 0, TS_PACKET_SIZE * SNIFF_TS_PACKET_COUNT);\r\n    for (int startPosCandidate = 0; startPosCandidate < TS_PACKET_SIZE; startPosCandidate++) {\r\n      // Try to identify at least SNIFF_TS_PACKET_COUNT packets starting with TS_SYNC_BYTE.\r\n      boolean isSyncBytePatternCorrect = true;\r\n      for (int i = 0; i < SNIFF_TS_PACKET_COUNT; i++) {\r\n        if (buffer[startPosCandidate + i * TS_PACKET_SIZE] != TS_SYNC_BYTE) {\r\n          isSyncBytePatternCorrect = false;\r\n          break;\r\n        }\r\n      }\r\n      if (isSyncBytePatternCorrect) {\r\n        input.skipFully(startPosCandidate);\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n```\r\nI wonder why loops inside don't start with i =0 and end at buffer.length, but it's a complicated calculation. What is the principle? Thank you!",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7754/comments",
    "author": "JaredLees",
    "comments": [
      {
        "user": "AquilesCanta",
        "created_at": "2020-08-14T10:42:11Z",
        "body": "I suggest you have a look at ISO/IEC 13818-1 for some context on what a Transport stream looks like (packets are 188 bytes) and what the spec expects from the Transport Stream receiving end (e.g. synchronisation guidelines: try to find 5 consecutive packets). Also keep in mind that Transport stream is a stream to which clients need to synchronise, which means packet boundaries are not necessarily aligned with file boundaries therefor the complicated loop. Hope this helps!"
      },
      {
        "user": "JaredLees",
        "created_at": "2020-08-14T10:49:33Z",
        "body": "thanks!"
      }
    ]
  },
  {
    "number": 7750,
    "title": "Exoplayer black screen when scrolled through recyclerview",
    "created_at": "2020-08-13T14:53:27Z",
    "closed_at": "2020-10-22T12:53:08Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7750",
    "body": "I am using exoplayer in recyclerview. It loads well if I click on independent video from the list, but if I swipe and move to previous or next video  only audio is playing, and the video is black throughout the duration. Only first clicked video shows the display. It is surely not a loading problem, since I am using caching and even after caching it behaves same way. \r\n\r\nNote: In rarest of occasions, it works fine for one swipe. \r\n\r\nI am pausing previous and preparing n playing next video in onViewAttachedToWindow method",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7750/comments",
    "author": "punitagoel2403",
    "comments": [
      {
        "user": "vikasgill",
        "created_at": "2020-08-13T20:36:41Z",
        "body": "@punitagoel2403 What surface type are you using? Is it a SurfaceView or TextureView? Also, what Android version you are using? "
      },
      {
        "user": "punitagoel2403",
        "created_at": "2020-08-14T04:09:45Z",
        "body": "@vikasgill I am not overriding any value. Just using the default basic structure. I am testing on Android 10.\r\n"
      },
      {
        "user": "punitagoel2403",
        "created_at": "2020-08-14T06:01:40Z",
        "body": "Thanks @vikasgill  for hinting it out. On further exploration, I understood, I had to set the player in method onViewAttachedToWindow rather than onBind, since I am using singleton player object. It is working fine now. Thanks once again. :)"
      },
      {
        "user": "punitagoel2403",
        "created_at": "2020-08-21T14:52:43Z",
        "body": "I am reopening this issue. I just noticed there is another problem occurring after resolving the previously stated issue. \r\nThe previous issue was resolved by setting the player in onViewAttachedToWindow before playing the video. This worked fine. But now another issue has arisen. The video on any item once played if scrolled back doesn't show on the same item.\r\n\r\nFor eg: I have 10 items in recyclerview. \r\nI start with 5th video. It plays well. \r\nI scroll down to 6th video. Plays well. \r\ngoes back to 5th. only audio with black screen. I noticed, the 5th video is actually playing in 6th itemview (which is not visible on the screen).\r\nI scroll up to 4th video, plays well. \r\nI scroll up to 3rd video, plays well. \r\nGoes down to 4th, only audio with black screen. I noticed, the 4th video is actually playing in 3rd itemview (which is not visible on the screen).\r\n\r\nI have checked the holder position, it is correct, so selected view holder is correct. \r\n\r\nSo, if one holder has played a video, next time it is not playing the video again, the video plays in previously newly used holder only.  I also tested this with overriding onScrollStateChanged assuming it could be some recyclerview issue. But still the same results.\r\n\r\nNote: I am using singleton object of player.\r\n"
      },
      {
        "user": "punitagoel2403",
        "created_at": "2020-08-22T07:08:16Z",
        "body": "Any updates?"
      },
      {
        "user": "vikasgill",
        "created_at": "2020-08-24T08:54:07Z",
        "body": "@punitagoel2403 Could you please share what you are actually doing. I am in doubt you are setting the wrong surface instance."
      },
      {
        "user": "punitagoel2403",
        "created_at": "2020-08-24T11:53:28Z",
        "body": "I am using singleton class for Exoplayer, and independent playerview for each item in a recyclerview. I am setting the player to playerview in onViewAttachedToWindow based on current position. \r\n\r\nExoplayer.playVideo(false, null); // pauses the video, setPlayWhenReady(false)\r\n\r\nholder.playerView.setPlayer(Exoplayer.getPlayer()); // set the player to current holder playerview\r\n\r\nExoplayer.playVideo(true, mMediaSourceMap.get(holder.getAdapterPosition())); // setPlayWhenReady(true) and prepare the player( player.prepare(mediaSource);) Media sources per url is prepared in advance\r\n\r\nThis work fine, if I am scrolling to a holder used for the first time. But if I try to go back to the watched video, the player runs in last played playerview.\r\n\r\nGiving the example again\r\neg: I have 10 items in recyclerview.\r\nI start with 5th video. It plays well.\r\nI scroll down to 6th video. Plays well.\r\ngoes back to 5th. only audio with black screen. I noticed, the 5th video is actually playing in 6th itemview (which is not visible on the screen).\r\nI scroll up to 4th video, plays well.\r\nI scroll up to 3rd video, plays well.\r\nGoes down to 4th, only audio with black screen. I noticed, the 4th video is actually playing in 3rd itemview (which is not visible on the screen).\r\n\r\nI have checked the holder position, it is correct, so selected view holder is correct.\r\nNote: I am displaying the view full screen, So at a time only one view is visible on the screen. PagerSnapHelper\r\n\r\nPlease let me know if you need more details."
      },
      {
        "user": "punitagoel2403",
        "created_at": "2020-10-22T12:53:08Z",
        "body": "Closing. New similar issue raised in #8093 "
      }
    ]
  },
  {
    "number": 7743,
    "title": "seek slow",
    "created_at": "2020-08-12T12:53:51Z",
    "closed_at": "2020-08-13T10:30:52Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7743",
    "body": "Hello, when I am testing the seek to drag the video, it takes a very long time for the gop long video file, but we compare mx player, they seek the same video file, fast and ready, does exoplayer have time to do it? Optimization, or any ideas can be shared? Thank you",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7743/comments",
    "author": "kuailedeadai",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2020-08-12T13:09:56Z",
        "body": "Does the information in #6794 help?\r\n\r\nI noticed you mentioned 'gop long' -- do you mean the groups of pictures (GOPs) are long, so keyframes are sparse? If so I'd recommend producing streams with denser keyframes if you want seeking to be responsive (though of course that doesn't explain different behavior from ExoPlayer and MXPlayer on the same stream)."
      },
      {
        "user": "kuailedeadai",
        "created_at": "2020-08-13T02:47:16Z",
        "body": "Hello,'gop long' means'the groups of pictures (GOPs) are long'. I read the seek logic of exoplayer. After seek, I find the previous key frame timestamp and send it to the decoding buffer. When decoding, If the timestamp of the current buffer is less than the timestamp of the current position, BUFFER_FLAG_DECODE_ONLY will be set, and the decoding will proceed normally, but the video frame will not be rendered; this will cause many frames to be discarded for the gop long video, which will cause delay.\r\nAt this point, what I think is that if you want to seek correct and fast seek, in the decoding module, you should quickly locate the frame closest to the current position timestamp, find the relevant frame and decode it directly, so that exoplayer can be optimized? ? Thank you"
      },
      {
        "user": "andrewlewis",
        "created_at": "2020-08-13T10:30:52Z",
        "body": "> When decoding, If the timestamp of the current buffer is less than the timestamp of the current position, BUFFER_FLAG_DECODE_ONLY will be set, and the decoding will proceed normally, but the video frame will not be rendered; this will cause many frames to be discarded for the gop long video, which will cause delay.\r\n\r\nDo you want to show those frames? If so, I think you can just set the seek parameters like `player.setSeekParameters(SeekParameters.PREVIOUS_SYNC);` to snap the seek point to the preceding keyframe.\r\n\r\n> At this point, what I think is that if you want to seek correct and fast seek, in the decoding module, you should quickly locate the frame closest to the current position timestamp, find the relevant frame and decode it directly, so that exoplayer can be optimized?\r\n\r\nAssuming your stream correctly marks which frames are keyframes, it's not in general possible to decode any given frame \"directly\". To decode a given frame, the decoder needs to be handle all input from the preceding keyframe, as the frame is allowed to reference the result of decoding earlier frames (up to the keyframe)."
      },
      {
        "user": "kuailedeadai",
        "created_at": "2020-08-27T09:14:31Z",
        "body": "Hello, I found through the log that whenever I seek to a certain position, I search for the previous key frame in the seek index, but the timestamp of the parsed frame is not the closest, so when I find the time after the seek The poke is still smaller than the current position, I will directly look for the next key frame in the buffer, and through the test, the seek rate has doubled."
      }
    ]
  },
  {
    "number": 7742,
    "title": "Exo Player in notification using playerNotificationManager not showing rewind & fast forward in locked screen",
    "created_at": "2020-08-12T12:33:36Z",
    "closed_at": "2020-08-12T13:31:32Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7742",
    "body": "For locked screen, I need following -\r\n1) Rewind  2) Play/pause 3) Fast-forward\r\n\r\nand for expanded notification -\r\n1) Rewind  2) Play/pause 3) Fast-forward 4) Progress seekbar\r\n\r\nI am using following flags -\r\n```\r\n playerNotifManager?.setUseNavigationActions(false)\r\n        playerNotifManager?.setFastForwardIncrementMs(1)\r\n        playerNotifManager?.setRewindIncrementMs(1)\r\n        playerNotifManager?.setUsePlayPauseActions(true)\r\n        playerNotifManager?.setPriority(NotificationCompat.PRIORITY_MAX)\r\n        playerNotifManager?.setUseNavigationActionsInCompactView(true)\r\n\r\n\r\n```",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7742/comments",
    "author": "ravisaini1990",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2020-08-12T13:31:32Z",
        "body": "I'm not sure why you are opening a different issue for the thing we just discussed quite closely in #7733 I appreciate that `PlayerNotificationManager` is not doing exactly what you want, and marked issue #7733 as enhancement accordingly. If you think you get another engineer to act differently I doubt it. \r\n\r\nClosing as duplicate of #7733 "
      }
    ]
  },
  {
    "number": 7736,
    "title": "How can I play Video and Audio in the same window?",
    "created_at": "2020-08-11T04:55:58Z",
    "closed_at": "2020-08-11T08:21:30Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7736",
    "body": "I have 2 uri from file (video and audio). I need to Play video with audio in the same window, so how can I do this?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7736/comments",
    "author": "AndersonCrew",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2020-08-11T08:21:30Z",
        "body": "Duplicate of #7363."
      }
    ]
  },
  {
    "number": 7723,
    "title": "How to use dubbing in ExoPlayer?",
    "created_at": "2020-08-07T07:50:55Z",
    "closed_at": "2020-09-21T01:04:33Z",
    "labels": [
      "question",
      "need more info",
      "closed-by-bot"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7723",
    "body": "Hi,\r\n\r\nI want to use dubbing in ExoPlayer.\r\n\r\nHow can I use dubbing?\r\n\r\nHelp me please.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7723/comments",
    "author": "halilozel1903",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2020-08-07T09:37:28Z",
        "body": "This question is much too vague for us to be able to help, sorry."
      },
      {
        "user": "halilozel1903",
        "created_at": "2020-08-07T09:44:50Z",
        "body": "I want to add a dub to a video.\r\n\r\nFor example English, Turkish dubs.\r\n\r\nI could not find an example like this.\r\n\r\nHow can I add dub into video in ExoPlayer?"
      },
      {
        "user": "ojw28",
        "created_at": "2020-08-07T10:13:42Z",
        "body": "It really depends on what type of media you have. You obviously need to start from a point where you have all of the content, including the dub track. Preparing your content isn't in scope for this issue tracker. So, what format is that content in? Can you provide sample media that includes the dub track and explain more precisely what your problem is? It's very unlikely we'll be able to help with such a brief description of the problem."
      },
      {
        "user": "halilozel1903",
        "created_at": "2020-08-20T09:06:38Z",
        "body": "There is a hls type video in the app. I want to show subtitles and dubbing options in this video.\r\n\r\n"
      },
      {
        "user": "ojw28",
        "created_at": "2020-08-21T16:06:11Z",
        "body": "To reiterate the request above:\r\n\r\n> Can you provide sample media that includes the dub track and explain more precisely what your problem is? It's very unlikely we'll be able to help with such a brief description of the problem.\r\n\r\nWithout sample media and without a detailed description, it's not possible for us to help."
      },
      {
        "user": "google-oss-bot",
        "created_at": "2020-09-10T01:04:36Z",
        "body": "<!-- event: mark-stale -->\nHey @halilozel1903. We need more information to resolve this issue but there hasn't been an update in 14 weekdays. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2020-09-21T01:04:33Z",
        "body": "<!-- event: close-stale -->\nSince there haven't been any recent updates here, I am going to close this issue.\n\n@halilozel1903 if you're still experiencing this problem and want to continue the discussion just leave a comment here and we are happy to re-open this."
      }
    ]
  },
  {
    "number": 7714,
    "title": "How to add video transition between different video MediaSources??",
    "created_at": "2020-08-05T06:18:07Z",
    "closed_at": "2020-08-05T18:06:34Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7714",
    "body": "\r\nI'm using exoplayer recently，and want to add some video transition between different video MediaSources\r\nI've been looking for related implementations in many places, but no idea still",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7714/comments",
    "author": "weisini",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2020-08-05T18:06:34Z",
        "body": "This is not something we currently support, sorry."
      },
      {
        "user": "yangcheng",
        "created_at": "2020-08-10T04:08:57Z",
        "body": "@weisini  have you found a way to do this in other means?"
      }
    ]
  },
  {
    "number": 7711,
    "title": "Best way to implement \"Live\" indicator",
    "created_at": "2020-08-04T11:47:11Z",
    "closed_at": "2020-08-07T10:58:50Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7711",
    "body": "I need to implement such a feature. When user's playback is at the live edge, display \"LIVE\" label. Otherwise, display current position (or another \"not live\" indicator like on YouTube lives). What is the best way to do this? \r\n\r\nThank you for any help :)",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7711/comments",
    "author": "ppodgorski",
    "comments": [
      {
        "user": "swifityG",
        "created_at": "2020-08-05T19:33:58Z",
        "body": "I did it with by using `player.isCurrentWindowLive`  in `onPlayerStateChanged` and its work well"
      },
      {
        "user": "ojw28",
        "created_at": "2020-08-07T10:58:50Z",
        "body": "The suggestion from @swifityG works well if your aim is to always show the indicator when playing live content, but not for on-demand content.\r\n\r\nIf your goal is that you're playing live content, and you want to show the indicator only if the user's playback is at the live edge, then I think you can probably just use `getCurrentPosition` (gets the current playback position in the live window) and `getDuration` (gets the duration of the live window), and show the live indicator if the current position is within some tolerance of the duration (i.e., the current position is near the live edge). Since live windows often update in a discrete steps, you will probably want to build a bit of hysteresis into your logic that determines whether the live indicator is being shown. This will allow you to avoid repeatedly toggling the indicator on and off if the user is playing back at around your specified tolerance behind the live edge."
      },
      {
        "user": "ppodgorski",
        "created_at": "2020-08-10T15:31:08Z",
        "body": "@ojw28 thanks for your reply. I've started my implementation only with `getDuration` and `getCurrentPosition` methods but it didn't work well. It turned out that I have to take into account the window.defaultPositionMs value. Now it works quite good.\r\n\r\nThere is one more thing. I've started with checking the live indicator state in `onSeekProcessed` callback, but live indicator should also change when user pause the playback. So I've ended up with repeatedly checking the live state with 1000ms interval (using Handler.postDelayed). Maybe there is a better way to do this?"
      },
      {
        "user": "ojw28",
        "created_at": "2020-08-10T16:11:24Z",
        "body": "If I were you I'd try and use `onPlayerStateChanged` to update your indicator at the right time. I doubt you need to do any repeated checking."
      }
    ]
  },
  {
    "number": 7703,
    "title": "Does exoplayer automatically use ABR as per internet connectivity?",
    "created_at": "2020-08-02T16:16:42Z",
    "closed_at": "2020-08-03T07:33:28Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7703",
    "body": "Hello there,\r\nHope you are well.\r\n\r\nWith regards, we are developing a video news android app(from our app: we are going to distribute the videos to end-users, only video content).\r\n\r\n**For the same, we are looking to integrate Exoplayer(as a video player to stream the content) but we have a query:**\r\n\r\n-Does Exoplayer automatically use ABR and stream as per Internet connectivity? What I mean over here is: normal MP4 links from AWS/google cloud to the player, no M3U8 links will be provided by AWS/Google cloud to the player & player streams as per internet connectivity of the end-user without getting M3U8 link from AWS )? Does this work? OR \r\n\r\n-Does Exoplayer needs the inputs(in the form of M3U8) from Cloud(like AWS or Google cloud) and then only Exoplayer can stream HLS?\r\n\r\nWill wait to hear from you\r\n\r\nThanks & Regards\r\nKumar Vansh Moondra",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7703/comments",
    "author": "kvmoondra",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2020-08-03T07:33:19Z",
        "body": "If you play adaptive media (i.e., DASH, HLS or SmoothStreaming), then ExoPlayer will do ABR by default. If you play progressive media (i.e., regular media files such as MP4s), then ExoPlayer will not do ABR.\r\n\r\nGiven a progressive media file, there isn't really a way that a player could do ABR even if it wanted to. A player could theoretically do ABR if provided with multiple progressive media files at different bitrates, but that's exactly what adaptive streaming standards such as DASH, HLS and SmoothStreaming are designed to do. So that's what you should use.\r\n\r\nIn conclusion, if you want ExoPlayer to do ABR then you need to use an adaptive streaming standard (i.e., DASH, HLS or SmoothStreaming) for your content."
      },
      {
        "user": "kvmoondra",
        "created_at": "2020-08-03T07:54:47Z",
        "body": "Thanks, @ojw28 for your reply. \r\n\r\n**Regarding HLS streaming**, you meant to say: If one wants ABR through Exoplayer then we need to give .M3U8 input then only Exoplayer can stream ABR? Player won't use ABR technology(HLS) if we give.MP4 input?\r\n\r\nCorrect me If I am wrong\r\n\r\nThanks & Regards\r\nKumar Vansh Moondra"
      },
      {
        "user": "ojw28",
        "created_at": "2020-08-03T08:00:04Z",
        "body": "Correct."
      }
    ]
  },
  {
    "number": 7694,
    "title": "Future support for DASH with AES-128",
    "created_at": "2020-07-29T19:08:14Z",
    "closed_at": "2020-08-31T01:04:17Z",
    "labels": [
      "question",
      "need more info",
      "stale",
      "closed-by-bot"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7694",
    "body": "Hi, I know that, at this time, ExoPlayer does not support DASH with AES-128. Is there any plan for adding support to this?\r\nThanks.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7694/comments",
    "author": "aKnaupp",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2020-07-31T14:18:49Z",
        "body": "Could you clarify what you mean by \"DASH with AES-128\" exactly? If the data transferred over network is encrypted by AES-128, you should be able to use a `Aes128DataSource` to decrypt it before playback. If you are talking about something else, please clarify."
      },
      {
        "user": "google-oss-bot",
        "created_at": "2020-08-20T01:04:15Z",
        "body": "<!-- event: mark-stale -->\nHey @KnauppSW. We need more information to resolve this issue but there hasn't been an update in 14 weekdays. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2020-08-31T01:04:16Z",
        "body": "<!-- event: close-stale -->\nSince there haven't been any recent updates here, I am going to close this issue.\n\n@KnauppSW if you're still experiencing this problem and want to continue the discussion just leave a comment here and we are happy to re-open this."
      }
    ]
  },
  {
    "number": 7688,
    "title": "How to make DefaultHttpDataSource trust a CA that isn't supported by the system ?",
    "created_at": "2020-07-28T09:54:01Z",
    "closed_at": "2020-07-31T12:44:22Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7688",
    "body": "We're having a problem where we're loading a video through an HTTPS connection. We're getting `CertPathValidatorException: Trust anchor for certification path not found` error because the CA used by the server isn't recognized by the Android version (21, 22) since it's old. The same video url works fine on newer devices. For an extra check, I disabled the CA used by the server on the newer device and the video stopped working.\r\n\r\nSo I'm trying to figure out a way to make the CA trusted. I thought of extending `DefaultHttpDataSource` and overriding either `makeConnection` or `openConnection`, but those two methods are private. So I thought of just copy pasting the source code but that's not a maintainable approach for when new updates roll in.\r\n\r\nIs there an easier way I'm not thinking of ? Or if not, could you guys consider developing an API for this use case ?\r\nWhat do you recommend ?\r\n\r\nThanks.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7688/comments",
    "author": "elyes-mansour",
    "comments": [
      {
        "user": "elyes-mansour",
        "created_at": "2020-07-28T11:42:15Z",
        "body": "I ended up going with this solution that adds the CA as a trusted source globally not just for Exoplayer. This seems to work. I'm calling it in `onCreate` of the application class.\r\n\r\n            // Load CAs from file\r\n            val cf: CertificateFactory = CertificateFactory.getInstance(\"X.509\")\r\n            val caInput: InputStream = BufferedInputStream(assets.open(\"certificate.crt\"))\r\n            val ca: X509Certificate = caInput.use {\r\n                cf.generateCertificate(it) as X509Certificate\r\n            }\r\n\r\n            // Create a KeyStore containing our trusted CAs\r\n            val keyStoreType = KeyStore.getDefaultType()\r\n            val keyStore = KeyStore.getInstance(keyStoreType).apply {\r\n                load(null, null)\r\n                setCertificateEntry(\"ca\", ca)\r\n            }\r\n\r\n            // Create a TrustManager that trusts the CAs inputStream our KeyStore\r\n            val tmfAlgorithm: String = TrustManagerFactory.getDefaultAlgorithm()\r\n            val tmf: TrustManagerFactory = TrustManagerFactory.getInstance(tmfAlgorithm).apply {\r\n                init(keyStore)\r\n            }\r\n\r\n            // Create an SSLContext that uses our TrustManager\r\n            SSLContext.getInstance(\"TLS\").apply {\r\n                init(null, tmf.trustManagers, null)\r\n                HttpsURLConnection.setDefaultSSLSocketFactory(socketFactory)\r\n            }"
      },
      {
        "user": "tonihei",
        "created_at": "2020-07-31T12:44:21Z",
        "body": "This is not really an ExoPlayer issue I think because these things are handled by the platform. It looks like you found a way to add the missing servers? I'll close the issue under the assumption that it is solved. "
      }
    ]
  },
  {
    "number": 7684,
    "title": "How to show thumbnail in ExoPlayer?",
    "created_at": "2020-07-28T07:20:03Z",
    "closed_at": "2020-08-27T13:05:59Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7684",
    "body": "Hi,\r\n\r\nI want to show thumbnail in ExoPlayer.\r\n\r\nI didn't found thumbnail document & example.\r\n\r\nHow can I show thumbnail in ExoPlayer? \r\n\r\nI'm waiting  for your support",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7684/comments",
    "author": "halilozel1903",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2020-07-31T11:31:32Z",
        "body": "ExoPlayer automatically displays the artwork embedded in the media if the `use_artwork` attribute on `PlayerView` is set to true. You can also specify your own default artwork that is used if the media doesn't provide one by setting the `default_artwork` attribute. Is that what you are looking for?"
      },
      {
        "user": "halilozel1903",
        "created_at": "2020-08-05T07:14:04Z",
        "body": "No, It doesn't work. I get a json type url from the service. I couldn't find a similar example how to add it."
      },
      {
        "user": "tonihei",
        "created_at": "2020-08-05T07:23:46Z",
        "body": "You can also set the default artwork with a call to `PlayerView.setDefaultArtwork(Drawable)` if you receive it programmatically."
      },
      {
        "user": "tonihei",
        "created_at": "2020-08-27T13:05:59Z",
        "body": "Closing under the assumption that the question was answered."
      }
    ]
  },
  {
    "number": 7680,
    "title": "Util.getDefaultBufferSize on exoplayer 2.11.1",
    "created_at": "2020-07-27T16:47:29Z",
    "closed_at": "2020-07-27T21:07:17Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7680",
    "body": "Hi \r\nI want to use CusotmLoadControl  with my exoplayer to optimize my buffer but I faced problem . in follow code it coudn't find Util.getDefaultBufferSize what should I use instead of it ?\r\nany idea ?\r\n\r\n\r\n```\r\n @Override\r\n    public void onTracksSelected(Renderer[] renderers, TrackGroupArray trackGroups,\r\n                                 TrackSelectionArray trackSelections) {\r\n        targetBufferSize = 0;\r\n        for (int i = 0; i < renderers.length; i++) {\r\n            if (trackSelections.get(i) != null) {\r\n                targetBufferSize += Util.getDefaultBufferSize(renderers[i].getTrackType());\r\n                if(renderers[i].getTrackType() == C.TRACK_TYPE_VIDEO)\r\n                    targetBufferSize *= VIDEO_BUFFER_SCALE_UP_FACTOR; /*Added by Sri to control buffer size */\r\n            }\r\n        }\r\n        allocator.setTargetBufferSize(targetBufferSize);\r\n    }\r\n```",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7680/comments",
    "author": "newtestpage",
    "comments": [
      {
        "user": "dianamelga",
        "created_at": "2020-08-19T20:26:08Z",
        "body": "@shayegan1988 Hi, I'm facing the same problem since I did the upgrade from 2.9.5 to 2.11.1, how did you solve that?"
      }
    ]
  },
  {
    "number": 7674,
    "title": "How to get current audio frame?",
    "created_at": "2020-07-26T13:57:52Z",
    "closed_at": "2020-08-27T13:05:52Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7674",
    "body": "Hi Exoplayer's :)\r\nHow can I get (in real-time) the current audio frame (byte[]?) that about to be rendered ???",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7674/comments",
    "author": "matanmarciano",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2020-07-28T15:49:53Z",
        "body": "Depending on what you'd like to achieve, you could try to add a custom `AudioProcessor` (for example by overriding `DefaultRenderersFactory. buildAudioProcessors`). In there you get access to the raw PCM data just before it is sent to the platform `AudioTrack`."
      },
      {
        "user": "andrewlewis",
        "created_at": "2020-08-04T14:37:00Z",
        "body": "If synchronization with what's actually being played out is important, #4107 may also help with this."
      },
      {
        "user": "tonihei",
        "created_at": "2020-08-27T13:05:52Z",
        "body": "Closing under the assumption that the question was answered."
      }
    ]
  },
  {
    "number": 7639,
    "title": "How to play multiple audios at the same time",
    "created_at": "2020-07-17T08:49:42Z",
    "closed_at": "2020-07-17T10:29:53Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7639",
    "body": "How to play multiple audios at the same time",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7639/comments",
    "author": "HanGao1",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2020-07-17T10:29:53Z",
        "body": "Currently the easiest way to do this is to separate players for each audio stream, but you need to keep them synchronized yourself.\r\n\r\nSee also #6589, which tracks supporting multiple renderers with the same track type. If your use case requires sample-accurate synchronization there is some tips on mixing audio streams precisely in #4261."
      }
    ]
  },
  {
    "number": 7636,
    "title": "How to use LeanbackPlayerAdapter?",
    "created_at": "2020-07-16T21:47:46Z",
    "closed_at": "2020-09-10T01:04:37Z",
    "labels": [
      "question",
      "need more info",
      "closed-by-bot"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7636",
    "body": "I don't quite understand how the LeanbackPlayerAdapter class can be used.\r\n\r\nexample1: where is not support `Sample` interface?\r\n\r\n```\r\n            DefaultRenderersFactory renderersFactory = new DefaultRenderersFactory(getContext());\r\n            Renderer[] r = new Renderer[] {(Renderer) renderersFactory};\r\n                                              ^^^^^^^ BAD CASTING!\r\n            Player player = ExoPlayerFactory.newInstance(\r\n                    getContext(),\r\n                    r,\r\n                    new DefaultTrackSelector(),\r\n                    new DefaultLoadControl()\r\n            );\r\n\r\n```\r\n\r\nexample2: where add `LeanbackPlayerAdapter` to `ControlGlue` ??\r\n```\r\n            LeanbackPlayerAdapter adapter = new LeanbackPlayerAdapter(getContext(), player, 1000);\r\n            mTransportControlGlue = new PlaybackTransportControlGlue<LeanbackPlayerAdapter>(getContext(), adapter);\r\n                                                                                          NO CAST! ERROR! ^^^^^\r\n```\r\n\r\n> Required type: `PlaybackTransportControlGlue<MediaPlayerAdapter>`\r\n> Provided: `PlaybackTransportControlGlue<LeanbackPlayerAdapter>`\r\n> \r\n\r\n```\r\n           OR\r\n            mTransportControlGlue = new PlaybackTransportControlGlue<MediaPlayerAdapter>(getContext(), (MediaPlayerAdapter) adapter);\r\n                                                                                          NO CAST! ERROR! ^^^^^^^^^^^^^^\r\n```\r\n\r\n> Inconvertible types; cannot cast 'com.google.android.exoplayer2.ext.leanback.LeanbackPlayerAdapter' to 'androidx.leanback.media.MediaPlayerAdapter'\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7636/comments",
    "author": "CloneTV",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2020-08-12T11:37:58Z",
        "body": "What is the type of the member variable `mTransportControlGlue` in your code? I think it should be \r\n\r\n```\r\nPlaybackTransportControlGlue<LeanbackPlayerAdapter> mTransportControlGlue;\r\n```\r\n\r\nwhereas the output you get \r\n\r\n```\r\nRequired type: PlaybackTransportControlGlue<MediaPlayerAdapter>\r\n```\r\n\r\nsuggests, it is `PlaybackTransportControlGlue<MediaPlayerAdapter>`. Can you double check that you are using `PlaybackTransportControlGlue<LeanbackPlayerAdapte>`?"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2020-09-01T01:04:34Z",
        "body": "<!-- event: mark-stale -->\nHey @CloneTV. We need more information to resolve this issue but there hasn't been an update in 14 weekdays. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2020-09-10T01:04:37Z",
        "body": "<!-- event: close-stale -->\nSince there haven't been any recent updates here, I am going to close this issue.\n\n@CloneTV if you're still experiencing this problem and want to continue the discussion just leave a comment here and we are happy to re-open this."
      }
    ]
  },
  {
    "number": 7629,
    "title": "Offline downloaded unable to play, showing error unable to connect host",
    "created_at": "2020-07-15T16:17:47Z",
    "closed_at": "2020-07-19T11:20:34Z",
    "labels": [
      "question",
      "need more info"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7629",
    "body": "\r\n### [REQUIRED] Issue description\r\nOffline downloaded unable to play, They need internet to play the videos\r\n\r\n### [REQUIRED] Reproduction steps\r\nI download the dash protected video with license, sometimes they are unable to play the videos\r\nStill, the license is not expired\r\n**Getting PlaybackException**\r\ncom.google.android.exoplayer2.upstream.HttpDataSource$HttpDataSourceException: Unable to connect\r\n\r\n\r\n### [REQUIRED] Version of ExoPlayer being used\r\n**EXO-PLAYER 2.11.6**\r\n\r\n### [REQUIRED] Device(s) and version(s) of Android being used\r\nBrand: Realme X2, Model: RMX1992, OS: 10\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7629/comments",
    "author": "gokulkalagara",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2020-07-15T22:52:47Z",
        "body": "There is nothing we can do with this kind of report. _Please_ properly fill out the issue template. Providing only the very top line of a stack trace is not sufficient information for us to help. Note that we've requested you properly fill out the issue template _repeatedly_ on issues that you've filed. For all future issues you file, _please_ either fill out the issue template properly, or clearly explain why you're unable to do so in the issue itself."
      },
      {
        "user": "gokulkalagara",
        "created_at": "2020-07-17T08:51:35Z",
        "body": "I sent an email @ojw28, please cross-check with device bug report also"
      },
      {
        "user": "ojw28",
        "created_at": "2020-07-19T11:20:34Z",
        "body": "The bug report provided does not capture the point at which the failure occurred, and therefore I would conclude that it was not captured shortly after encountering the issue. If it were, the full stack trace starting with:\r\n\r\n```\r\ncom.google.android.exoplayer2.upstream.HttpDataSource$HttpDataSourceException: Unable to connect\r\n```\r\n\r\nwould be present in the bug report. Closing because there's nothing we can do without a higher quality report."
      },
      {
        "user": "gokulkalagara",
        "created_at": "2020-07-21T07:56:13Z",
        "body": "You close the issue but the issue still exists\r\n\r\n@ojw28 I will create a new issue, we take the report  from the users, not from my phone, Redmi and Realme not storing the proper bug reports, \r\nthere is only one bug report, we are getting not like stock android os\r\n"
      }
    ]
  },
  {
    "number": 7614,
    "title": "The special url include \".m3u8\" in the parameter, not in the path cannot play.",
    "created_at": "2020-07-10T05:43:05Z",
    "closed_at": "2020-08-20T11:07:14Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7614",
    "body": "The url include \".m3u8\" in the parameter, not in the path,then Util.inferContentType cannot return the C.TYPE_HLS,so the m3u8 url cannot use HlsMediaSource to play,the video cannot play.\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7614/comments",
    "author": "wywy4pm",
    "comments": [
      {
        "user": "wywy4pm",
        "created_at": "2020-07-10T05:45:24Z",
        "body": "This type of address can play use vlc or mxplayer，so i hope exo can play so."
      },
      {
        "user": "AquilesCanta",
        "created_at": "2020-07-10T13:26:06Z",
        "body": "If the extension is not part of the path, you'll have to manually indicate the type of media.\r\n\r\nIn the demo app this is done by adding an entry to the sample:\r\n`\"extension\": \"m3u8\"`\r\nin the media samples json file. \r\n\r\nIf you are trying to play the file in your own app then you just have to create an HlsMediaSource for your URL. `Util.inferContentType ` is just a best effort heuristic based on the file extension so it's ok to override any returned value. \r\n\r\nPlease clarify the issue to me if you have further questions. #3165 tracks MediaSource-level sniffing."
      },
      {
        "user": "AquilesCanta",
        "created_at": "2020-08-20T11:07:14Z",
        "body": "Closing. Please feel free to comment below if you have further questions."
      }
    ]
  },
  {
    "number": 7613,
    "title": "Seamless codec transition midstream",
    "created_at": "2020-07-09T21:40:24Z",
    "closed_at": "2020-08-03T09:50:58Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7613",
    "body": "### [REQUIRED] Searched documentation and issues\r\nExoPlayer Javadoc and code, exoplayer.dev, issue tracker, stack overflow.\r\n\r\n### [REQUIRED] Question\r\nAs mentioned in #7390 I'm trying to initiate a play with a codec without crypto information to avoid an audible glitch because `mediaDrm` calls are blocking playback.\r\nAfter fetching the keys I can create a new codec with crypto information set, but I'm having trouble seamlessly switching to that.\r\n\r\nIn `MediaCodecRenderer.java` I tried `drainAndReinitializeCodec()` and the likes at first, which seems to work, but by listening closely(and debugging) it is skipping a lot of buffers in the MediaCodec, around 10 of them it seems.\r\n\r\nThen I tried to keep two codecs at the same time, draining the first one before continuing on the 2nd one(manual labor, keeping track of how many buffers were inputted and outputted etc). Depending on the solution I almost got it working, but it still skipped 1 or 2 MediaCodec buffers.\r\n\r\nIn my mind, this should theoretically work, but I just can't get it to work. Do you know if this is theoretically possible? I only had two codecs, but they were using the same of everything else, like buffer, outputBufferInfo, inputIndex, outputIndex etc).\r\nThe 2nd codec is created and started while the 1st is still used to feed, so there is no issue in that aspect, in regards of setup/creation/configration time etc. But, it seems that when I do the switch to the 2nd codec, the last two buffers that I queue is not found when `dequeueOutputBuffer` is called. It simply returns -1.\r\n\r\nI can provide code samples for the latter approach if you need it to answer the question.\r\n\r\n**To sum up:** I want to seamlessly switch from one codec to another while playing and without loosing any information so it is without any glitches at all(basically the same codec, just two different instances and the 2nd one has MediaCrypto sent to it, instead of null).\r\n\r\nI'm happy to implement it myself, I just need to know if this is theoretically possible, or even possible with the existing code, or some guidance on how it can be achieved.\r\n\r\nI really hope this is doable, it would make DRM playback awesome with ExoPlayer :) \r\n\r\nIf I can get some guidance, I'm happy to contribute with the fix.\r\n\r\nThanks a lot in advance!\r\n\r\n### A full bug report captured from the device\r\nN/A\r\n\r\n### Link to test content\r\nAny DASH with Widevine(and most likely any drm-ed content with clear lead)",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7613/comments",
    "author": "kgrevehagen",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2020-07-13T09:06:29Z",
        "body": "The issue with the audible glitch is caused by the blocking `mediaDrm` calls in the renderer as you correctly identified in  #7390. We have a pending improvement plan to move the entire DRM session acquisition to the `Loader` (that runs on its own thread), so that this does not occur anymore. Note that it not only affects clear lead playbacks, but also playlists where we change drm protections or switch from clear to protected playback. This effort is tracked by #4133. \r\n\r\nIf we implemented the mentioned improvement of moving the DRM session calls to another thread, then I guess your problem would be solved without using a second MediaCodec. However, we currently paused further development in this area because it turned out to be quite complicated :).\r\n\r\nComing back to your original question whether the proposed two MediaCodec solution could work, I think the short answer is yes. You should be able to feed all clear samples to one decoder (followed by an end-of-stream signal) and start feeding all encrpyted samples to another decoder without losing any of them. The tricky bit is to attach the output surface to the right decoder at the right time and to manage the release timing of these samples. We probably can't provide deep guidance on how to do this as we would need to investigate ourselves first. But in theory, you should be able to get this to work.\r\n\r\n> But, it seems that when I do the switch to the 2nd codec, the last two buffers that I queue is not found when dequeueOutputBuffer is called. It simply returns -1.\r\n\r\nThat may as well depend on the media. For example if the codec waits for further input to be able to decode these samples or because you haven't queued the end of input signal. \r\n"
      },
      {
        "user": "tonihei",
        "created_at": "2020-08-03T09:50:58Z",
        "body": "Closing because the question was answered above. Feel free to reopen if not."
      }
    ]
  },
  {
    "number": 7606,
    "title": "Video gets crop from edges when set resize option to zoom",
    "created_at": "2020-07-08T08:11:03Z",
    "closed_at": "2020-12-24T00:09:28Z",
    "labels": [
      "question",
      "wont fix: intended behavior"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7606",
    "body": "Issue description\r\nVideo gets crop from edges when set resize option to zoom,full video must  be shown but only centre part of video is shown.\r\n\r\n Reproduction steps.\r\nset the resize option to zoom for exoplayer in xml and play the video.\r\n\r\nVersion of ExoPlayer being used\r\n2.7.3\r\n\r\nDevice(s) and version(s) of Android being used\r\nOS Android 9 and Android 10 with Vivo y17, Samsung M30",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7606/comments",
    "author": "prashantj17",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2020-07-13T10:31:38Z",
        "body": "I'm not completely sure whether I understand the documentation correctly, but I think this is working as intended. The resize mode zoom increases the width or height of your video to fill your surface and thus some parts of the video will be cropped. @ojw28 may be able to confirm. "
      },
      {
        "user": "ojw28",
        "created_at": "2020-12-24T00:09:28Z",
        "body": "Yes, cropping is expected if using `zoom`. It's unclear what you're trying to achieve, but perhaps you want to use `fill` instead."
      }
    ]
  },
  {
    "number": 7603,
    "title": "How to get Video Duration, Video Resolution and Audio Channels",
    "created_at": "2020-07-06T18:35:04Z",
    "closed_at": "2020-08-27T13:02:13Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7603",
    "body": "Hello,\r\n\r\nI am using ExoPlayer2 in my Leanback application along with leanback extension. What I am trying to achieve here is, once the video is ready, I would like to get the total duration of the video, video resolution (2160p, 1080p, 720p etc) and also the Audio Channel (7.1, 5.1, 2.0 etc).\r\n\r\nI am using VideoPlayerGlue along with LeanbackPlayerAdapter. How can I achieve the above mentioned funcionality?\r\n\r\nThanks.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7603/comments",
    "author": "ghost",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2020-07-13T08:29:30Z",
        "body": "Have you tried `player.getDuration` and `player.getCurrentTrackSelections`? The `TrackSelections` contain a list of `Format` objects with resolution, audio channels etc."
      },
      {
        "user": "tonihei",
        "created_at": "2020-08-03T09:49:53Z",
        "body": "Closing because the questions was answered above. Feel free to reopen if not."
      }
    ]
  },
  {
    "number": 7583,
    "title": "Audio fails using EXTENSION_RENDERER_MODE_PREFER when ffmpeg library doesn't support the codec.",
    "created_at": "2020-07-02T23:49:13Z",
    "closed_at": "2020-08-03T19:58:58Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7583",
    "body": "### [REQUIRED] Issue description\r\n\r\nApplication running Exoplayer 2.11.7 with multiple audio renders (ffmpeg extension and default device renderer) and the option extension render mode = EXTENSION_RENDERER_MODE_PREFER. FFMPEG extension has been compiled using only opus, orbis and flac. When Exoplayer tries to reproduce a source using AAC codec the audio track selection fails and we don't have audio in the playback.\r\n\r\nAdding AAC codec to ffmpeg compilation process the audio is reproduced properly\r\nChanging option to EXTENSION_RENDERER_MODE_OFF or EXTENSION_RENDERER_MODE_ON audio is reproduced properly (hardware supports AAC)\r\n\r\nInside RendererCapabilities we can see ffmpegAudioRender in the index 1 and then MediaCodecAudioRenderer in index 2.\r\n\r\nThe findRenderer process (MappingTrackSelector) calls supportsFormatInternal from FfmpegAudioRenderer and returns FORMAT_UNSUPPORTED_SUBTYPE, findRenderer then check the next Renderer and detect that bestRenderIndex is number 2. So this is working as expected. But then we are able to see and error reporting mime type audio/ffmpeg is not supported and playback begins with video but no audio.\r\n\r\n- We has been able to reproduce in older version 2.10.2 too.\r\n\r\n\r\n### [REQUIRED] Reproduction steps\r\n- Enable ffmpeg extension.\r\n- Compile ffmpeg extension using a limited list of codecs (i.e: opus, orbis and flac)\r\n- Use setExtensionRendereMode = EXTENSION_RENDERER_MODE_PREFER\r\n- Play content using AAC audio codec.\r\n\r\n\r\n### [REQUIRED] Link to test content\r\nProvided by email.\r\n\r\n### [REQUIRED] A full bug report captured from the device\r\nProvided by email.\r\n\r\n### [REQUIRED] Version of ExoPlayer being used\r\n2.11.7 and 2.10.2\r\n\r\n### [REQUIRED] Device(s) and version(s) of Android being used\r\nIssue is reproduced 100% of times.\r\nDevice running SDK 23. 6.0.1\r\narmeabi-v7a\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7583/comments",
    "author": "neuro79",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2020-07-03T18:59:03Z",
        "body": "This works fine for me in the demo app with 2.11.7. Playback plays with sound, using the `MediaCodec` based audio renderer.\r\n\r\n> error reporting mime type audio/ffmpeg is not supported\r\n\r\nThis warning isn't related to the problem you're seeing, and can be safely ignored.\r\n\r\nIs this issue device specific?  Either way, please try reproducing the problem with the 2.11.7 ExoPlayer Demo app, because it logs additional information that's useful for debugging. Please capture a bug report taken just after experiencing the failure. Thanks!"
      },
      {
        "user": "neuro79",
        "created_at": "2020-07-06T11:46:18Z",
        "body": "We  have tested the Exoplayer Demo app in the device and as you said it is working properly. We have been debugging our application to try to understand what is making the audio fail in our case and we found that the reason is the way we are managing the Subtitle enable/disable process.\r\n\r\nWe are using this code to disable subtitles:\r\n\r\n           trackSelector.setParameters(trackSelector.buildUponParameters()\r\n                    .setRendererDisabled(C.TRACK_TYPE_VIDEO, true)\r\n                    .setRendererDisabled(C.TRACK_TYPE_TEXT, true)\r\n                    .build()\r\n            );\r\n\r\nWe was using C.TRACK_TYPE_VIDEO and C.TRACK_TYPE_TEXT because we though that the value of this parameter was being used to find the renderer of this type and then disabled them but looks like the value is applied directly over the redenderIndex. \r\n\r\nWe did a modification in our code to find the TEXT render indexes and apply the flag only in the render of type C.TRACK_TYPE_TEXT and now audio is working properly. \r\n\r\nIs this the recommended way to modify track selector to disable all the renderers of  C.TRACK_TYPE_TEXT?"
      },
      {
        "user": "ojw28",
        "created_at": "2020-08-03T19:58:58Z",
        "body": "Yes, you need to pass renderer indices rather than `C.TRACK_TYPE_X` constants to `setRendererDisabled`.\r\n\r\nI assume that to find the renderer indices, you're iterating over the renderer indices and using `Player.getRendererType(i)` or `MappedTrackInfo.getRendererType(i)` to determine whether the renderer at index `i` is a type that should be disabled. If so then yes, you're doing the right thing."
      }
    ]
  },
  {
    "number": 7574,
    "title": "Draw interactive shapes on top of SphericalGLSurfaceView? ",
    "created_at": "2020-07-01T18:50:00Z",
    "closed_at": "2020-07-02T15:48:30Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7574",
    "body": "### Searched documentation and issues\r\nI've looked into `gldemo` and library srcs.\r\n\r\n### Question\r\nI have rather design question unrelated to ExoPlayer, I'm trying to draw several shapes on top of playing 360 video, these forms will change coordinates depending on sensor position, touch data and point in time. \r\n\r\nWhat would be the best option?\r\n- Pull `spherical` package from `library-ui` into my own project, modify it, and provide `VideoComponent` for it. Use it the similar way PlayerView is using it. I expect that it shouldn't influence the playback of 360 videos. One issue I see is that pulled sources might get outdated, although it's doesn't look as something that might change.\r\n- Trying to use another surface view on top of it 🤔  I see the problem with gestures as those shapes I need to draw are interactive, as well as SphericalGLSurfaceView.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7574/comments",
    "author": "ar-g",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2020-07-02T15:48:29Z",
        "body": "I guess the things rendered on top of the video need to be synchronized with it in a frame-accurate way. That may be difficult with the second option, and I'm also not certain compositing another `SurfaceView` on top will work nicely across all devices.\r\n\r\nSo I'd go for the first option: fork the `SphericalGLSurfaceView` or at least its renderer, and modify the GL shader to show the shapes on top. I'm not sure what kind of shapes you need to draw, but it is possible to render to a `Canvas` and upload the result into a GL texture as a bitmap. A 'pure' GL implementation is probably more efficient though. I don't think we have any work planned at the moment that would make substantial changes to classes in the spherical package."
      }
    ]
  },
  {
    "number": 7564,
    "title": "Setting initial startup buffer size/time for Dash playback",
    "created_at": "2020-06-30T07:38:12Z",
    "closed_at": "2020-07-03T11:10:16Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7564",
    "body": "### [REQUIRED] Searched documentation and issues\r\n\r\n### [REQUIRED]We have a question of how to set the initial buffer size/time for DASH playback.\r\n\r\nWe are using the below parameter, wanted a confirmation if this is enough. Our chunk size is 4s.\r\n\r\n /**\r\n     * The default duration of media that must be buffered for playback to start or resume following a\r\n     * user action such as a seek, in milliseconds.\r\n     */\r\n    public static final int DEFAULT_BUFFER_FOR_PLAYBACK_MS = 1000; //start after downloading 1 chunk\r\n\r\nIf we use this above value for loadControl, does this mean dash file will start playing after 1s of audio + video data (i.e. 1st chunk) is downloaded?\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7564/comments",
    "author": "biswarupdasgupta",
    "comments": [
      {
        "user": "AquilesCanta",
        "created_at": "2020-07-01T10:14:05Z",
        "body": "As you point out, buffer for playback is `The duration of media that must be buffered for playback to start or resume following a user action such as a seek`. If you want to start playback after loading the first chunk then you should match this value and the duration of the first chunk, which is 4 seconds.\r\n\r\n> 1s of audio + video data (i.e. 1st chunk)\r\n\r\nI don't understand the _id est_ part of the sentence. 1 seconds of audio and video are not the first chunk. Can you clarify this?\r\n\r\nAside, I'd generally advise against changing the default values unless you are trying to achieve something specific. Perhaps you could roughly explain your usecase?"
      },
      {
        "user": "biswarupdasgupta",
        "created_at": "2020-07-03T10:05:37Z",
        "body": "hi @AquilesCanta , the goal is for faster startup time. We wanted to use this configuration to start playback as soon as 1 independent decodable segment is downloaded by player. Since our chunk size is 4s and the DEFAULT_BUFFER_FOR_PLAYBACK_MS is 1s , what we understand is using this config we can make the player start playback after downloading the first audio and video segment.\r\n\r\nPlease correct me."
      },
      {
        "user": "AquilesCanta",
        "created_at": "2020-07-03T11:10:16Z",
        "body": "In that case I suggest you experiment with the different parameters in `DefaultLoadControl`. Specifically important are `bufferForPlaybackMs` and `bufferForPlaybackAfterRebufferMs`. In general, the smaller the values, the faster playback will transition to the READY state. But it's also more likely that it will transition to BUFFERING immediately afterwards. The unit for both parameters is milliseconds, so it has no relation with the chunk/segment size. There's plenty of material on this in this issue tracker, please have a look around. For example, #7238, #2083."
      },
      {
        "user": "ojw28",
        "created_at": "2020-07-03T11:52:18Z",
        "body": "> We wanted to use this configuration to start playback as soon as 1 independent decodable segment is downloaded by player. Since our chunk size is 4s and the DEFAULT_BUFFER_FOR_PLAYBACK_MS is 1s , what we understand is using this config we can make the player start playback after downloading the first audio and video segment.\r\n\r\nTo clarify, \"chunk\" and \"segment\" mean the same thing, and the duration is solely determined by the media. If your chunks/segments are 4s long, then the player will download 4s chunks/segments regardless of what value you're using.\r\n\r\nThe player does not need to download an entire chunk/segment before it can start playback. If `bufferForPlaybackMs` / `bufferForPlaybackAfterRebufferMs` are set to 1s and your chunk/segment duration is 4s, this means playback will start once a quarter of the first chunk/segment has been downloaded."
      },
      {
        "user": "biswarupdasgupta",
        "created_at": "2020-07-07T10:38:40Z",
        "body": "Thanks for the clarifications"
      }
    ]
  },
  {
    "number": 7553,
    "title": "Exoplayer showing wrong orientation of some videos.",
    "created_at": "2020-06-27T07:43:48Z",
    "closed_at": "2020-06-29T13:13:53Z",
    "labels": [
      "question",
      "need more info"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7553",
    "body": "Hello team\r\n\r\nI found one bug while playing some mp4 videos hosted on amazon. While the video is in portrait exoplayer always play it in landscape. I am not able to find any specific source to solve this issue. I can provide you the link as the link is private video. I am not able to share it here. \r\n\r\nI am using following libraries.\r\n\r\n implementation \"com.google.android.exoplayer:extension-mediasession:$exoplayer_version\"\r\n    implementation \"com.google.android.exoplayer:exoplayer-ui:$exoplayer_version\"\r\n    implementation \"com.google.android.exoplayer:exoplayer:$exoplayer_version\"\r\n\r\nexoplayer_version = \"2.11.1\"\r\n\r\nPlease let me know how I can resolve this.I am using  following \r\n\r\n  val dataSourceFactory: DataSource.Factory = DefaultDataSourceFactory(\r\n                context,\r\n                Util.getUserAgent(\r\n                    context!!,\r\n                    context!!.getString(com.becon.app.R.string.app_name)\r\n                )\r\n            )\r\n            val cacheDataSourceFactory = CacheDataSourceFactory(\r\n                DownloadUtil.getCache(context),\r\n                dataSourceFactory,\r\n                CacheDataSource.FLAG_IGNORE_CACHE_ON_ERROR\r\n            );\r\n\r\n            val mediaSource =\r\n                ProgressiveMediaSource.Factory(cacheDataSourceFactory)\r\n                    .createMediaSource()\r\nPlease let me know if there is some method to handle this scenario\r\n\r\nThanks",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7553/comments",
    "author": "NitinSharma639",
    "comments": [
      {
        "user": "kim-vde",
        "created_at": "2020-06-29T13:05:33Z",
        "body": "As you cannot share it publicly, could you send the link to the test content to dev.exoplayer@gmail.com, using subject \"Issue #7553\"? This would help me understand what's going on. Please also update this issue to indicate you’ve done this.\r\n\r\nThe information in #3275 could also be useful."
      },
      {
        "user": "NitinSharma639",
        "created_at": "2020-06-29T13:13:53Z",
        "body": "> As you cannot share it publicly, could you send the link to the test content to [dev.exoplayer@gmail.com](mailto:dev.exoplayer@gmail.com), using subject \"Issue #7553\"? This would help me understand what's going on. Please also update this issue to indicate you’ve done this.\r\n> \r\n> The information in #3275 could also be useful.\r\n\r\nHi I found the issue is in file the width of the file is greater than the height but when I download it the default player (Mac) is playing it as portrait. Exoplayer is correctly playing it. Thank you very much. "
      }
    ]
  },
  {
    "number": 7545,
    "title": "FFmpeg extension with avfilter",
    "created_at": "2020-06-26T08:09:10Z",
    "closed_at": "2020-07-01T16:55:07Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7545",
    "body": "Hi. I try to add avfilters to ffmpeg extension. All works for mp3, flac and other formats, that don't need extradata. But formats with it crashed: alac, aac, opus, vorbis.\r\n```\r\nint init_filter_graph(AVCodecContext *dec_ctx,  const char *eq) {\r\n    char args[512];\r\n    int ret = 0;\r\n    graph = avfilter_graph_alloc();\r\n    const AVFilter *abuffersrc = avfilter_get_by_name(\"abuffer\");\r\n    const AVFilter *abuffersink = avfilter_get_by_name(\"abuffersink\");\r\n    AVFilterInOut *outputs = avfilter_inout_alloc();\r\n    AVFilterInOut *inputs = avfilter_inout_alloc();\r\n    static const enum AVSampleFormat out_sample_fmts[] = {dec_ctx->request_sample_fmt,\r\n                                                          static_cast<const AVSampleFormat>(-1)};\r\n    static const int64_t out_channel_layouts[] = {static_cast<int64_t>(dec_ctx->channel_layout),\r\n                                                  -1};\r\n    static const int out_sample_rates[] = {dec_ctx->sample_rate, -1};\r\n    const AVFilterLink *outlink;\r\n    AVRational time_base = dec_ctx->time_base;\r\n\r\n    if (!outputs || !inputs || !graph) {\r\n        ret = AVERROR(ENOMEM);\r\n        goto end;\r\n    }\r\n    \r\n    /* buffer audio source: the decoded frames from the decoder will be inserted here. */\r\n    if (!dec_ctx->channel_layout)\r\n        dec_ctx->channel_layout = av_get_default_channel_layout(dec_ctx->channels);\r\n    snprintf(args, sizeof(args),\r\n             \"time_base=%d/%d:sample_rate=%d:sample_fmt=%s:channel_layout=0x%\" PRIx64,\r\n             1, dec_ctx->sample_rate, dec_ctx->sample_rate,\r\n             av_get_sample_fmt_name(dec_ctx->sample_fmt), dec_ctx->channel_layout);\r\n    ret = avfilter_graph_create_filter(&src, abuffersrc, \"in\",\r\n                                       args, NULL, graph);\r\n    \r\n    if (ret < 0) {\r\n        LOGE(\"Cannot create audio buffer source\\n\");\r\n        goto end;\r\n    }\r\n    \r\n    /* buffer audio sink: to terminate the filter chain. */\r\n    ret = avfilter_graph_create_filter(&sink, abuffersink, \"out\",\r\n                                       NULL, NULL, graph);\r\n    if (ret < 0) {\r\n        LOGE(\"Cannot create audio buffer sink\\n\");\r\n        goto end;\r\n    }\r\n\r\n    \r\n    ret = av_opt_set_int_list(sink, \"sample_fmts\", out_sample_fmts, -1,\r\n                              AV_OPT_SEARCH_CHILDREN);\r\n    if (ret < 0) {\r\n        LOGE(\"Cannot set output sample format\\n\");\r\n        goto end;\r\n    }\r\n    \r\n    ret = av_opt_set_int_list(sink, \"channel_layouts\", out_channel_layouts, -1,\r\n                              AV_OPT_SEARCH_CHILDREN);\r\n    if (ret < 0) {\r\n        LOGE(\"Cannot set output channel layout\\n\");\r\n        goto end;\r\n    }\r\n    \r\n    ret = av_opt_set_int_list(sink, \"sample_rates\", out_sample_rates, -1,\r\n                              AV_OPT_SEARCH_CHILDREN);\r\n    if (ret < 0) {\r\n        LOGE(\"Cannot set output sample rate\\n\");\r\n        goto end;\r\n    }\r\n    \r\n    /*\r\n     * Set the endpoints for the filter graph. The graph will\r\n     * be linked to the graph described by filters_descr.\r\n     */\r\n\r\n    /*\r\n     * The buffer source output must be connected to the input pad of\r\n     * the first filter described by filters_descr; since the first\r\n     * filter input label is not specified, it is set to \"in\" by\r\n     * default.\r\n     */\r\n    outputs->name = av_strdup(\"in\");\r\n    outputs->filter_ctx = src;\r\n    outputs->pad_idx = 0;\r\n    outputs->next = NULL;\r\n\r\n    /*\r\n     * The buffer sink input must be connected to the output pad of\r\n     * the last filter described by filters_descr; since the last\r\n     * filter output label is not specified, it is set to \"out\" by\r\n     * default.\r\n     */\r\n    inputs->name = av_strdup(\"out\");\r\n    inputs->filter_ctx = sink;\r\n    inputs->pad_idx = 0;\r\n    inputs->next = NULL;\r\n\r\n\r\n    if ((ret = avfilter_graph_parse_ptr(graph, eq,\r\n                                        &inputs, &outputs, NULL)) < 0) {\r\n        LOGE(\"FFFFFFF %s\", av_err2str(ret));\r\n        goto end;\r\n    }\r\n\r\n    if ((ret = avfilter_graph_config(graph, NULL)) < 0)\r\n        goto end;\r\n    \r\n    /* Print summary of the sink buffer\r\n     * Note: args buffer is reused to store channel layout string */\r\n    outlink = sink->inputs[0];\r\n    av_get_channel_layout_string(args, sizeof(args), -1, outlink->channel_layout);\r\n    LOGE(\"Output: srate:%dHz  chlayout:%s\\n\",\r\n         (int) outlink->sample_rate,\r\n         args);\r\n    end:\r\n    avfilter_inout_free(&inputs);\r\n    avfilter_inout_free(&outputs);\r\n    return ret;\r\n}\r\n```\r\nThe code above for initialize filters. With next i add frame to graph and read it. All other code use from demo (decoder)\r\n```\r\nresult = av_buffersrc_add_frame_flags(src, frame,AV_BUFFERSRC_FLAG_KEEP_REF);\r\n            if (result < 0) {\r\n                av_frame_unref(frame);\r\n                LOGE(\"Error submitting the frame to the filtergraph:\");\r\n                return -1;\r\n            }\r\n            while(1) {\r\n                // Get all the filtered output that is available.\r\n                result = av_buffersink_get_frame(sink, frame);\r\n                if (result == AVERROR(EAGAIN) || result == AVERROR_EOF) {\r\n                    av_frame_unref(frame);\r\n                    return -1;\r\n                }\r\n                if (result < 0) {\r\n                    av_frame_unref(frame);\r\n                    return -1;\r\n                }\r\n                result = swr_convert(resampleContext, &outputBuffer, bufferOutSize,\r\n                                     (const uint8_t **) frame->data, frame->nb_samples);\r\n            }\r\n```\r\nAs i understand all problems with extradata - what i need to do with it and filter will work? Thx for help\r\nFFmpeg version - 4.2\r\nExoplayer version - 2.11.5\r\nP.S. without filters all formats play well.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7545/comments",
    "author": "rokney",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2020-06-30T08:18:57Z",
        "body": "> But formats with it crashed: alac, aac, opus, vorbis.\r\n\r\nCould you provide some more information on what the crash was (error message/logging/stack trace)? I'd have thought that the filter operates on decoder output (raw audio) so all formats would work the same.\r\n\r\nI don't know much about avfilter I'm afraid, and this doesn't seem related to ExoPlayer so is probably out of scope for this issue tracker. You may have more luck asking on an FFmpeg mailing list or on Stack Overflow."
      },
      {
        "user": "rokney",
        "created_at": "2020-06-30T09:05:51Z",
        "body": "Hi. Thx for answer. Crash at this line\r\n```\r\nresult = swr_convert(resampleContext, &outputBuffer, bufferOutSize,(const uint8_t **) frame->data, frame->nb_samples);\r\n```\r\nwith\r\n```\r\nFatal signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 0x0 \r\n```\r\nAnyway, thx for any help"
      },
      {
        "user": "andrewlewis",
        "created_at": "2020-07-01T16:55:07Z",
        "body": "Is it possible that bufferOutSize is no longer the correct size to use after avfilter has applied? Or is it worth trying to filter after resampling? Beyond that I don't have any suggestions I'm afraid. Closing as this isn't in the scope we can provide support for."
      }
    ]
  },
  {
    "number": 7540,
    "title": "Why seekTo() causes the buffered data to cleaned up?",
    "created_at": "2020-06-24T09:28:20Z",
    "closed_at": "2020-07-23T01:04:13Z",
    "labels": [
      "question",
      "need more info",
      "stale",
      "closed-by-bot"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7540",
    "body": "Hello,\r\nI am playing an HLS live stream.\r\nWhen I try to seek (using GUI) forward (a bit) the buffered data get lost and the player changes his state to BUFFERING and I need to wait a while for re-play.\r\n\r\nHow can I overcome this issue?\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7540/comments",
    "author": "matanmarciano",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2020-06-24T14:10:39Z",
        "body": "I can't see anything suspicious when playing an HLS live stream I have. Could you provide us with the stream and reproduction steps (in case it doesn't always reproduce)? \r\n\r\n\r\n"
      },
      {
        "user": "fgl27",
        "created_at": "2020-06-24T16:55:19Z",
        "body": "Have you check `player.getTotalBufferedDuration()` before `seekto`? \r\n\r\nBecause this be a live stream is expected that the amount of time buffered be small, and maybe you are seeking to a position bigger than `getTotalBufferedDuration` maybe outside live window, it also can help to understand better if there is a issue."
      },
      {
        "user": "google-oss-bot",
        "created_at": "2020-07-14T01:04:16Z",
        "body": "<!-- event: mark-stale -->\nHey @matanmarciano. We need more information to resolve this issue but there hasn't been an update in 14 weekdays. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2020-07-23T01:04:13Z",
        "body": "<!-- event: close-stale -->\nSince there haven't been any recent updates here, I am going to close this issue.\n\n@matanmarciano if you're still experiencing this problem and want to continue the discussion just leave a comment here and we are happy to re-open this."
      }
    ]
  },
  {
    "number": 7525,
    "title": "Accessing active datasource in onPositionDiscontinuity",
    "created_at": "2020-06-18T18:31:36Z",
    "closed_at": "2020-09-22T16:17:58Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7525",
    "body": "### [REQUIRED] Searched documentation and issues\r\n\r\nI did :)\r\n\r\n### [REQUIRED] Question\r\nI'm having an hard time to get the active datasource when the media change in a ```ConcatenatingMediaSource```.\r\n\r\nI use a specific ```DataSourceFactory``` that extends ```HttpDataSource.BaseFactory``` and prepare the media in the ```open(dataSpec)```.\r\nDuring this preparation the media can be transcoded or not and depending on many factor the resulting may support some things like seeking or not.\r\nI need to be able to access this information to do things like not calling normal seek but restart the transcoding at the new position.\r\n\r\nThe problem is that in ```ConcatenatingMediaSource``` ```open``` can be called to prepare the next media while the active media is still not closed.\r\n\r\nSo the question is how can I access the datasource from the player ```onPositionDiscontinuity``` callback. Or how can I access the ```MediaSource``` from the ```DataSource``` to be able to modify the tag?\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7525/comments",
    "author": "Tolriq",
    "comments": [
      {
        "user": "AquilesCanta",
        "created_at": "2020-06-19T15:01:31Z",
        "body": "Why don't you assign a specific `DataSourceFactory` to each `MediaSource` so that each `DataSourceFactory` knows to which MediaSource they are assigned?\r\n\r\nSo when the media source calls `open(...)` for preparation (or whatever), you know which is the calling MediaSource, since the `DataSourceFactory` knows the corresponding `MediaSource`."
      },
      {
        "user": "Tolriq",
        "created_at": "2020-06-19T15:23:04Z",
        "body": "Isn't that highly inefficient to create a DefaultDataSourceFactory and my factory for every single items for very large playlists?"
      },
      {
        "user": "tonihei",
        "created_at": "2020-09-22T14:41:11Z",
        "body": "`DefaultDataSourceFactory` is just a thin wrapper creating other `DataSource` instances, so there should be no issue with creating multiple factories if needed.\r\n\r\nNot sure about your exact use case, but you can also consider one of the following:\r\n - Use `ResolvingDataSource` to add additional loading steps based on the `DataSpec`. You could detect whatever you need from the `DataSpec` URL, custom header key-value pairs or from using the `customData` object. Whether this is easily possible depends on the details of what you need and what you are trying to achieve.\r\n - Set a `tag` on each `MediaSource` (or `MediaItem`) that can be retrieved by `Player.getCurrentTag()` in `onPositionDiscontinuity`."
      },
      {
        "user": "Tolriq",
        "created_at": "2020-09-22T14:56:49Z",
        "body": "@tonihei  Ok so let me try to better explain the need that is.\r\n\r\nThe player can play media from many different sources and some of them can transcode the media on the fly.\r\nThe transcoding or not decision is made at the ```DataSource.open``` to avoid wasting server resources.\r\nWhen transcoding some server for some media type and transcoded media can generate non seekable media via normal player seek functions.\r\nI can detect and know this only when transcoding start so in ```DataSource.open```\r\n\r\nBut I need to know this at the player / UI side to either disable the seek functions or intercept the seek to be actual restart of the media at the proper new starting point.\r\n\r\nThe problem is that with gapless / ConcateningMediaSource the ```DataSource.open``` is called independently of the active media.\r\n\r\nAnd from ```DataSource.open``` I can't access the corresponding MediaItem/MediaSource to update the tag that I could then use in ```onPositionDiscontinuity```\r\n\r\nSo TL;DR I need to access the MediaSource/MediaItem from the ```DataSource.open``` not sure ```ResolvingDataSource``` brings anything here as it's before the open."
      },
      {
        "user": "tonihei",
        "created_at": "2020-09-22T15:06:29Z",
        "body": "`ResolvingDataSource` is essentially just an easy wrapper to intercept the `DataSpec` to the `DataSource`. If the actual information you need is only available afterwards, you would probably need to follow @AquilesCanta's advice and use a `DataSource.Factory` for each of your `DataSources` that has access to your tag object:\r\n\r\n```\r\nMediaSource mediaSource = \r\n    new ProgressiveMediaSource.Factory(() -> new MyCustomDataSource(tag))\r\n      .setTag(tag)\r\n      .createMediaSource(MediaItem.forUri(uri));\r\n```\r\n\r\nAside: If you make the `tag` object mutable be aware that the loading takes place on another thread, so you need additional thread safety around the updates."
      },
      {
        "user": "Tolriq",
        "created_at": "2020-09-22T15:36:03Z",
        "body": "Thanks that's what I do, but the new playlist api is all about MediaItem directly no? Or I can use MediaSources directly and still use the new playlist api instead of concateningmediasource?"
      },
      {
        "user": "tonihei",
        "created_at": "2020-09-22T15:43:49Z",
        "body": "Yes, you can. The `ExoPlayer` interface defines all relevant methods for that (e.g. `setMediaSource`, `addMediaSource` etc)"
      },
      {
        "user": "Tolriq",
        "created_at": "2020-09-22T16:17:58Z",
        "body": "Ok thanks, closing this one too as there's no other way and factory are small :)"
      }
    ]
  },
  {
    "number": 7514,
    "title": "PlayerNotificationManager not showing notification for video",
    "created_at": "2020-06-17T10:48:32Z",
    "closed_at": "2020-06-17T12:53:56Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7514",
    "body": "I have application which plays video and I want to show notification with player controls - play, pause, next, previous etc.\r\nI tried using PlayerNotificationManager mentioned in the Medium Post\r\nPlayerNotificationManager\r\nBut the notification isn't visible. I assigned the player to notification manager after the player is initialised.\r\n\r\nChecking on android API 29 and I am using SimpleExoPlayer for player and setting it to notification manager\r\n\r\n          `  DefaultRenderersFactory defaultRenderersFactory = new DefaultRenderersFactory(getContext())\r\n                .setExtensionRendererMode(DefaultRenderersFactory.EXTENSION_RENDERER_MODE_ON);\r\n        SimpleExoPlayer   player = new SimpleExoPlayer.Builder(getContext(), defaultRenderersFactory)\r\n                .setTrackSelector(trackSelector)\r\n                .build();\r\n        player.addListener(this);\r\n        playerView.setPlayer(player);\r\n        playerView.setPlaybackPreparer(this);\r\n        PlayerNotificationManager playerNotificationManager = new PlayerNotificationManager(\r\n                appCMSPresenter.getCurrentContext(),\r\n                \"player not\",\r\n                459, new DescriptionAdapter());\r\n\r\n        playerNotificationManager.setPlayer(player);`",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7514/comments",
    "author": "wishy-viewlift",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2020-06-17T11:57:27Z",
        "body": "With the code above you are saying that you have created a notification channel with the title `player not`. If such a notification channel does not exist, the system will not show the notification and I believe you would find something in the logs telling this (not sure though).\r\n\r\nCan you double check  whether the notification channel 'player not' has been properly created? \r\n\r\nIf you find you need to create a channel first, you may consider looking into the static factory method which will create the channel with the declared id's and names for you.\r\n\r\n```\r\ncreateWithNotificationChannel(\r\n      Context context,\r\n      String channelId,\r\n      @StringRes int channelName,\r\n      @StringRes int channelDescription,\r\n      int notificationId,\r\n      MediaDescriptionAdapter mediaDescriptionAdapter)\r\n```\r\n\r\nIf this does not work, please accept my apologies and do a bug report and upload it here so I can look into your issue some more. You can alternatively send the bug report by email to dev.exoplayer@gmail.com using a subject in the format \"Issue #7514\"."
      },
      {
        "user": "wishy-viewlift",
        "created_at": "2020-06-17T12:53:56Z",
        "body": "Notification Channel did not existed, that seemed to be the issue."
      }
    ]
  },
  {
    "number": 7500,
    "title": "how to work for tag EXT-X-DISCONTINUITY-SEQUENCE？",
    "created_at": "2020-06-14T14:49:20Z",
    "closed_at": "2020-07-13T01:04:19Z",
    "labels": [
      "question",
      "need more info",
      "stale",
      "closed-by-bot"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7500",
    "body": "as i konw， for EXT-X-DISCONTINUITY，The client MUST be prepared to reset its parser(s) and decoder(s) before playing a Media Segment that has an EXT-X-DISCONTINUITY tag applied to it, otherwise playback errors can occur.\r\nfor  EXT-X-DISCONTINUITY-SEQUENCE tag allows synchronization between different Renditions of the same Variant Stream or different Variant Streams that have EXT-X-DISCONTINUITY tags in their Media Playlists.\r\ni want understand how to synchronization for Variant Streams?\r\nI guess when Internet speed is not good, server have removed the EXT-X-DISCONTINUITY tag ,but cliant haven`t play the tag. so in this time cliant play media playlist ,without EXT-X-DISCONTINUITY tag ,but the media segment  should bring DISCONTINUITY attribute.so cliant maybe play hang up(becuase have no  reset its parser(s) and decoder(s) ).\r\nis true? who can tell me. thanks",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7500/comments",
    "author": "High-calcium-tiger",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2020-06-14T22:17:18Z",
        "body": "It's very unclear what the question is here. Please could you try and phrase it more clearly? It's also unclear whether this is an ExoPlayer question, or a general question about HLS. If this is a general question about HLS, StackOverflow would be a better place to ask."
      },
      {
        "user": "google-oss-bot",
        "created_at": "2020-07-02T01:04:19Z",
        "body": "<!-- event: mark-stale -->\nHey @xuhucheng. We need more information to resolve this issue but there hasn't been an update in 14 weekdays. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2020-07-13T01:04:18Z",
        "body": "<!-- event: close-stale -->\nSince there haven't been any recent updates here, I am going to close this issue.\n\n@xuhucheng if you're still experiencing this problem and want to continue the discussion just leave a comment here and we are happy to re-open this."
      }
    ]
  },
  {
    "number": 7488,
    "title": " ExoPlayer coding limitations",
    "created_at": "2020-06-10T10:07:45Z",
    "closed_at": "2020-06-10T11:49:01Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7488",
    "body": "Hi  all,\r\n\r\nI am working on customizing a player based on the ExoPlayer library.\r\nTherefore, I need some information before starting the development :\r\nThe ExoPlayer can support a frame rate of 50fps? Are there any limitations of the ExoPlayer library on streams with 1920 * 1080 resolution?\r\n\r\nThank you very much in advance for your response.\r\n\r\nBR,",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7488/comments",
    "author": "Xlcghs",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2020-06-10T11:49:01Z",
        "body": "ExoPlayer doesn't have any limitations with respect to certain frame-rates or resolutions.\r\n\r\nThe capabilities of the device on which the app is running may come in to play, however. For example, it's possible that some very low end or old devices will not be able to handle 1080p at 50fps, or will need to drop frames to keep up. Note that any such restrictions are inherent restrictions of the device capabilities, rather than restrictions caused by ExoPlayer."
      }
    ]
  },
  {
    "number": 7485,
    "title": "Is there a way to know the \"type\" of an HTTP request? (e.g. manifest, segment, etc)",
    "created_at": "2020-06-09T19:41:51Z",
    "closed_at": "2020-06-11T15:09:26Z",
    "labels": [
      "question",
      "need more info"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7485",
    "body": "When we get an HttpDataSourceException, often we want to know whether this was for a manifest request, segment request, etc. This information is used for analytics/reporting purposes. Inspecting the URL can be error-prone. Is there a better way to find this out?\r\n\r\nFollow-up question: if there is not currently a better way, would you be willing to review a design/PR that added this information to HttpDataSource (or other relevant location)?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7485/comments",
    "author": "chrisfillmore",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2020-06-09T23:46:30Z",
        "body": "`AnalyticsListener.onLoadError` gives you a lot of data for analytics/reporting, including `mediaLoadData.dataType` that should tell you what type of data was being loaded. Is that sufficient?"
      },
      {
        "user": "chrisfillmore",
        "created_at": "2020-06-11T15:09:26Z",
        "body": "@ojw28 thanks for replying. Sorry for the delay in responding, I had to check with my teammates because I see, in fact, we are using `AnalyticsListener` for reporting already. But we have separate reporting for errors coming out of `onPlayerError(ExoPlaybackException exception)`. I'm trying to map the HttpDataSourceException to a particular error code in our own domain, so that \"fatal errors\" are presented in an easily digestible way for our analytics people.\r\n\r\nThanks for the help. I'm going to close this for now because I don't think I have a definite need for \"request type\". Guessing from the url will probably work 99% of the time. I'll circle back if I run into a problem."
      }
    ]
  },
  {
    "number": 7484,
    "title": "ExoPlayer server and client(s)",
    "created_at": "2020-06-09T16:54:36Z",
    "closed_at": "2020-06-09T18:11:52Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7484",
    "body": "Hey,\r\n\r\nIs there any plans to introduce functionality of serve-client(s) within ExoPlayer?\r\nFor example, one ExoPlayer's instance might act as media server, with controls of playlist, currently playing track, etc ..., might not have use view at all. Another instance may act as client or clients, which simply connects to server and consumes whatever server broadcasts.\r\n\r\nThanks in advance,\r\n\r\nYurii",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7484/comments",
    "author": "ChernyshovYuriy",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2020-06-09T17:59:09Z",
        "body": "No, we do not currently have any plans to introduce serving functionality."
      },
      {
        "user": "ChernyshovYuriy",
        "created_at": "2020-06-09T18:11:52Z",
        "body": "Ok, thanks."
      }
    ]
  },
  {
    "number": 7481,
    "title": "Can't catch BehindLiveWindowException long time",
    "created_at": "2020-06-09T07:34:47Z",
    "closed_at": "2020-06-11T00:43:04Z",
    "labels": [
      "question",
      "need more info"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7481",
    "body": "### [REQUIRED] Question\r\nSometimes I found `BehindLiveWindowException`, exo player always show loading, it's hard to catch because it need long time to reproduct.\r\nI try to init player like ExoPlayer sample when `BehindLiveWindowException`, but it didn't work.\r\n\r\n**I use android media player and it works well, is there any ways to solve or present?**\r\n\r\n### A full bug report captured from the device\r\n```\r\n2020-06-09 15:28:07.423 E/EventLogger: playerFailed [eventTime=1420.38, mediaPos=-27.84, window=0, period=0\r\n      com.google.android.exoplayer2.ExoPlaybackException: com.google.android.exoplayer2.source.BehindLiveWindowException\r\n        at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:394)\r\n        at android.os.Handler.dispatchMessage(Handler.java:98)\r\n        at android.os.Looper.loop(Looper.java:154)\r\n        at android.os.HandlerThread.run(HandlerThread.java:61)\r\n     Caused by: com.google.android.exoplayer2.source.BehindLiveWindowException\r\n        at com.google.android.exoplayer2.source.hls.HlsChunkSource.getNextChunk(HlsChunkSource.java:300)\r\n        at com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper.continueLoading(HlsSampleStreamWrapper.java:645)\r\n        at com.google.android.exoplayer2.source.CompositeSequenceableLoader.continueLoading(CompositeSequenceableLoader.java:78)\r\n        at com.google.android.exoplayer2.source.hls.HlsMediaPeriod.continueLoading(HlsMediaPeriod.java:363)\r\n        at com.google.android.exoplayer2.MediaPeriodHolder.continueLoading(MediaPeriodHolder.java:205)\r\n        at com.google.android.exoplayer2.ExoPlayerImplInternal.maybeContinueLoading(ExoPlayerImplInternal.java:1760)\r\n        at com.google.android.exoplayer2.ExoPlayerImplInternal.handleContinueLoadingRequested(ExoPlayerImplInternal.java:1739)\r\n        at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:357)\r\n        at android.os.Handler.dispatchMessage(Handler.java:98) \r\n        at android.os.Looper.loop(Looper.java:154) \r\n        at android.os.HandlerThread.run(HandlerThread.java:61) \r\n    ]\r\n2020-06-09 15:28:07.424 E/ExoPlayer: onPlayerError: error type : TYPE_SOURCE, com.google.android.exoplayer2.source.BehindLiveWindowException\r\n2020-06-09 15:28:07.424 E/ExoPlayer: onPlayerError retry - isBehindLiveWindow: \r\n    com.google.android.exoplayer2.source.BehindLiveWindowException\r\n        at com.google.android.exoplayer2.source.hls.HlsChunkSource.getNextChunk(HlsChunkSource.java:300)\r\n        at com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper.continueLoading(HlsSampleStreamWrapper.java:645)\r\n        at com.google.android.exoplayer2.source.CompositeSequenceableLoader.continueLoading(CompositeSequenceableLoader.java:78)\r\n        at com.google.android.exoplayer2.source.hls.HlsMediaPeriod.continueLoading(HlsMediaPeriod.java:363)\r\n        at com.google.android.exoplayer2.MediaPeriodHolder.continueLoading(MediaPeriodHolder.java:205)\r\n        at com.google.android.exoplayer2.ExoPlayerImplInternal.maybeContinueLoading(ExoPlayerImplInternal.java:1760)\r\n        at com.google.android.exoplayer2.ExoPlayerImplInternal.handleContinueLoadingRequested(ExoPlayerImplInternal.java:1739)\r\n        at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:357)\r\n        at android.os.Handler.dispatchMessage(Handler.java:98)\r\n        at android.os.Looper.loop(Looper.java:154)\r\n        at android.os.HandlerThread.run(HandlerThread.java:61)\r\n2020-06-09 15:28:07.424 I/ExoPlayer: onPlayerError retry: isBehindLiveWindow\r\n```\r\n\r\n### Link to test content\r\nSorry, the play link is dynamic, I can't provide.\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7481/comments",
    "author": "VeiZhang",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2020-06-09T17:55:27Z",
        "body": "I'm not sure I understand what the issue is. I think you're saying that you're trying to catch `BehindLiveWindowException` and retry in this case, and that it's not working, however:\r\n\r\n1. It's unclear why the logging you've provided indicates that it's not working. `onPlayerError retry - isBehindLiveWindow` to me suggests that it is working and that your code will go on to retry.\r\n1. I think you'll need to provide a small sample app that demonstrates exactly the problem you're seeing, since it's not clear there's anything actionable we can do with the information provided."
      },
      {
        "user": "VeiZhang",
        "created_at": "2020-06-10T01:02:26Z",
        "body": "@ojw28 Yes, u are right. But when I catch the exception, I try to prepare again, it still show loading and balck screen. Actually I wait about 1 - 2 min to catch it, too long.\r\n\r\nI can't provide a sample, because play link will time out in seconds."
      },
      {
        "user": "ojw28",
        "created_at": "2020-06-10T23:27:59Z",
        "body": "> Actually I wait about 1 - 2 min to catch it, too long.\r\n\r\nI don't really understand what this means. I also don't think we can help without clearer reproduction steps. It's possible that the media itself is causing the problem."
      },
      {
        "user": "VeiZhang",
        "created_at": "2020-06-11T00:43:04Z",
        "body": "@ojw28 OK. Thanks for your help. I will give a sample if I can get the link."
      }
    ]
  },
  {
    "number": 7478,
    "title": "Useragent not identified by podcast hosts",
    "created_at": "2020-06-08T13:07:23Z",
    "closed_at": "2020-06-08T18:25:59Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7478",
    "body": "Hi, i have a podcast app using exo. I have set the useragent as follows but podcast hosting providers and statistics can't find my useragent on their logs. What should I change?\r\n\r\n```\r\n  private MediaSource buildMediaSource(Context context, Uri uri){\r\n        String userAgent = Util.getUserAgent(context, \"MyPodcastApp\");\r\n\r\n        // Default parameters, except allowCrossProtocolRedirects is true\r\n        DefaultHttpDataSourceFactory httpDataSourceFactory = new DefaultHttpDataSourceFactory(\r\n                userAgent,\r\n                null /* listener */,\r\n                DefaultHttpDataSource.DEFAULT_CONNECT_TIMEOUT_MILLIS,\r\n                DefaultHttpDataSource.DEFAULT_READ_TIMEOUT_MILLIS,\r\n                true /* allowCrossProtocolRedirects */\r\n        );\r\n\r\n        ExtractorMediaSource audioSource =\r\n                new ExtractorMediaSource.Factory(\r\n                        new DefaultDataSourceFactory(context, null, httpDataSourceFactory)).\r\n                        createMediaSource(uri);\r\n\r\n        return new ConcatenatingMediaSource(audioSource);\r\n    }\r\n```",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7478/comments",
    "author": "shirtmogul12",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2020-06-08T13:20:39Z",
        "body": "That looks like it should be sufficient. Note that the user agent isn't just going to be `MyPodcastApp`. It's going to be some larger string that starts with `MyPodcastApp/`, as per the source code for `Util.getUserAgent`.\r\n\r\nYou can probably use a tool like WireShark to work out whether the user agent header is being set correctly in the outbound requests. Currently I don't think you know whether the issue is on the ExoPlayer side, or on the podcast hosting provider side."
      },
      {
        "user": "shirtmogul12",
        "created_at": "2020-06-08T14:31:56Z",
        "body": "I tested by hosting an mp3 file on my server. It shows as:\r\n\r\n`MyPodcastApp/1.5.1 (Linux;Android 8.1.0) ExoPlayerLib/2.10.8`\r\n\r\n1.5.1 is the app version. Is doing the following acceptable?\r\n`\r\nString userAgent = \"MyPodcastApp/ Android\";`\r\n"
      },
      {
        "user": "ojw28",
        "created_at": "2020-06-08T18:25:59Z",
        "body": "The string you're proposing seems strictly less useful than the one you're currently using, so ideally I think you'd continue to pass the one that contains the additional information, and you'd fix whatever server-side logic you're using to detect them to be able to handle such strings.\r\n\r\nThat aside, you can basically set the user agent to whatever you like, so there's no reason you can't do what you're proposing if that's what you want to do!"
      }
    ]
  },
  {
    "number": 7476,
    "title": "Can the volume be set dynamically",
    "created_at": "2020-06-08T09:36:15Z",
    "closed_at": "2020-08-03T14:48:31Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7476",
    "body": "I encountered a difficulty: I used exoplayer to play user-recorded audio, but the volume of the audio was different, resulting in varying sound levels during playback. Is there any way to dynamically adjust the overall playback volume based on the average volume of the current audio",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7476/comments",
    "author": "HanGao1",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2020-06-08T18:41:15Z",
        "body": "We support setting the volume, by calling `setVolume` on the player instance. We don't support automatic volume normalisation though. You'd probably need to write your own code to scan each of the files, work out what volume to use for each one, and then call `setVolume` with these values for normalized playback."
      },
      {
        "user": "HanGao1",
        "created_at": "2020-06-09T02:53:03Z",
        "body": "Can the maximum volume be greater than 1"
      },
      {
        "user": "ojw28",
        "created_at": "2020-06-09T13:43:22Z",
        "body": "No. If you want to volume-boost audio that doesn't use the full range then you'd probably have to look at writing a custom `AudioProcessor` to do that. That's a lot more complicated though!"
      }
    ]
  },
  {
    "number": 7450,
    "title": "How to remove ICY header request",
    "created_at": "2020-05-31T13:53:32Z",
    "closed_at": "2020-06-01T10:21:49Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7450",
    "body": "Hi,\r\n\r\nI was trying to find a way on how to remove the ICY header from the header request. I'm expecting it is causing some issues with certein hosting server.\r\n\r\ni have been trying many things without success e.g. \r\n\r\n```\r\nfinal HttpDataSource.RequestProperties s = dataSourceFactory.getDefaultRequestProperties();\r\ns.remove(IcyHeaders.REQUEST_HEADER_ENABLE_METADATA_NAME);\r\n```\r\n\r\nOR \r\n\r\n```\r\nfinal ProgressiveMediaSource audioSource2 =\r\nnew ProgressiveMediaSource.Factory(() -> {\r\n\tfinal HttpDataSource dataSource = new DefaultHttpDataSource(Util.getUserAgent(this, getString(R.string.app_name)))\r\n\t{\r\n\t\t@Override\r\n\t\tpublic long open(DataSpec dataSpec) throws HttpDataSourceException\r\n\t\t{\r\n\t\t\tdataSpec.httpRequestHeaders.remove(IcyHeaders.REQUEST_HEADER_ENABLE_METADATA_NAME);\r\n\t\t\treturn super.open(dataSpec);\r\n\t\t}\r\n\t};\r\n\t//dataSource.clearRequestProperty(IcyHeaders.REQUEST_HEADER_ENABLE_METADATA_NAME);\r\n\treturn dataSource;\r\n}).createMediaSource(Uri.parse(url));\r\n```\r\n\r\nthe last one throws:\r\n```\r\n2020-05-31 17:45:56.863 9747-10339/com.myapp.audiocataloger E/LoadTask: Unexpected exception loading stream\r\n      java.lang.UnsupportedOperationException\r\n        at java.util.Collections$UnmodifiableMap.remove(Collections.java:1502)\r\n        at com.myapp.audiocataloger.MediaService$4.open(MediaService.java:813)\r\n        at com.google.android.exoplayer2.upstream.StatsDataSource.open(StatsDataSource.java:83)\r\n        at com.google.android.exoplayer2.source.ProgressiveMediaPeriod$ExtractingLoadable.load(ProgressiveMediaPeriod.java:956)\r\n        at com.google.android.exoplayer2.upstream.Loader$LoadTask.run(Loader.java:391)\r\n        at java.util.concurrent.ThreadPoolExecutor.processTask(ThreadPoolExecutor.java:1187)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1152)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)\r\n        at java.lang.Thread.run(Thread.java:784)\r\n```\r\n\r\nI tried as well to override it in TransferListener without success as well\r\n\r\n```\r\nfinal TransferListener transferListener = new TransferListener()\r\n{\r\n\t@Override\r\n\tpublic void onTransferInitializing(DataSource dataSource, DataSpec dataSpec, boolean isNetwork)\r\n\t{\r\n\t\t// Override it here\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void onTransferStart(DataSource dataSource, DataSpec dataSpec, boolean b){}\r\n\r\n\t@Override\r\n\tpublic void onBytesTransferred(DataSource dataSource, DataSpec dataSpec, boolean b, int i){}\r\n\r\n\t@Override\r\n\tpublic void onTransferEnd(DataSource dataSource, DataSpec dataSpec, boolean b){}\r\n};\r\n```\r\n\r\nPlease advise the proper way to do this.\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7450/comments",
    "author": "Abu-Abdullah",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2020-06-01T08:04:06Z",
        "body": "In the option where you override `open`, could you try instantiating a new `DataSpec` based on values from the old one but without the ICY header?"
      },
      {
        "user": "Abu-Abdullah",
        "created_at": "2020-06-01T10:21:49Z",
        "body": "thank you @andrewlewis for the hint. it is working as you suggest:\r\n```\r\n@Override\r\npublic long open(DataSpec dataSpec) throws HttpDataSourceException\r\n{\r\n\tfinal Map<String, String> m1 = dataSpec.httpRequestHeaders;\r\n\tfinal Map<String, String> m2 = new HashMap<>();\r\n\tfor (Map.Entry<String, String> entry : m1.entrySet())\r\n\t\tif(!entry.getKey().equals(IcyHeaders.REQUEST_HEADER_ENABLE_METADATA_NAME))\r\n\t\t\tm2.put(entry.getKey(), entry.getValue());\r\n\t\r\n\treturn super.open(dataSpec.withRequestHeaders(m2));\r\n}\r\n```\r\nAnd thankfully the web server behavior is correct now. I'm not facing the same issues that i faced in #7353 which indicates that setting ICY_Metadata in the header by default is not the correct way. Many web servers might be affected by this (at least in my case which i have it on bluehost, one of the leaders in this market).\r\n\r\nI think we should have an easy way to configure the dataspec.httpRequestHeaders\r\n\r\nthank you again"
      }
    ]
  },
  {
    "number": 7447,
    "title": "Start renderer after video preroll is completed - For AV content. ",
    "created_at": "2020-05-29T18:00:01Z",
    "closed_at": "2020-06-30T11:39:15Z",
    "labels": [
      "question",
      "need more info",
      "stale"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7447",
    "body": "Feature description: \r\nDecoder needs to fill up decoded picture buffer (DPB) list and handle display re-ordering of buffers before decoder can output any buffer for render purpose. Time to produce first decoder output for render purpose = frame decoding time x number of frames decoder needs to decode as pre-roll. This pre-roll time can vary based on underlying decode HW capability. Example: Decoder HW max capability is UHD@60fps. Hence, HW will take average 16 ms to decode one frame. If we consider 5 DPB buffers as pre-roll, then it will take 5x16=80 ms before any output arrives at player level for render purpose. If player starts audio decoding and video sample decoding at same time, in most of cases decoded audio sample for render purpose will arrive first. However, video output for render purpose will come later due to pre-rolling. Hence, it will lead to AV sync gap.\r\n\r\nRecommendation to start render (AV sync timer) once first sample of video & audio both arrives. This logic should be present for start of player as well as at every seek operation. (After every seek, decoder again needs to build pre-roll buffers as well).",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7447/comments",
    "author": "harini113",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2020-06-01T07:27:59Z",
        "body": "Could you give some more details on the specific change to ExoPlayer this is requesting? Generally, we queue as many input buffers to `MediaCodec` as possible, and we release video output frames timed based on the `AudioTrack` timestamp to synchronize audio and video. We start the audio track playing only once audio/video renderers are reporting that they are ready (this condition includes having rendered the first video frame and having pending data for the `AudioTrack`).\r\n\r\nSide note: on Android I think there is currently no guarantee that a `MediaCodec` fills its first output buffer as soon as it has enough information to do so (so for example you may have to queue several input buffers before the first frame corresponding to an IDR input frame is output in an H.264/AVC stream)."
      },
      {
        "user": "google-oss-bot",
        "created_at": "2020-06-23T16:26:16Z",
        "body": "<!-- event: mark-stale -->\nHey @harini113. We need more information to resolve this issue but there hasn't been an update in 14 weekdays. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      }
    ]
  },
  {
    "number": 7443,
    "title": "onMetadataChanged callback not getting updated properly",
    "created_at": "2020-05-29T01:55:47Z",
    "closed_at": "2020-06-01T08:11:40Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7443",
    "body": "### [REQUIRED] Searched documentation and issues\r\nI've looked pretty thoroughly through the documentation but am not able to figure this out.\r\n\r\n### [REQUIRED] Question\r\nI started with the demo app from IO18, \"Building feature-rich media apps with ExoPlayer (Google I/O '18)\". Currently I have my ExoPlayer version 2.9.6 wrapped in a service. It is using MediaSessionConnector and PlayerNotificationManager. The app can add songs to the playlist from any fragment in the app, and they play fine, but the fragments are not receiving correct notifications as to the current song. They receive notifications that a song has changed but the metadata for that song is always the first song added to the playlist, not the current song.\r\n\r\nThe fragment has a MediaControllerCompat that it initializes with the \"global\" session token and registers a MediaControllerCallback instance. It is this callback that doesn't get up-to-date metadata, only the metadata from the the first song played from the playlist.\r\n\r\nSo am I going about this the wrong way, forgetting a step, or did I miss something obvious?\r\n\r\nI am not using a PlayerView. Songs are added via Intents and the ACTION_ADD_TO_PLAYLIST action.\r\n\r\nFor what it is worth, here is my code, warts and all:\r\n\r\n```\r\n\r\npublic class AudioPlayerService extends Service {\r\n\r\n    public static final String TAG = \"AudioPlayerService\";\r\n    public static final int ACTION_START_SERVICE = 0;\r\n    public static final int ACTION_ADD_TO_PLAYLIST = 1;\r\n    public static final String SERVICE_ACTION = \"service_action\";\r\n    public static final String SERVICE_DETAIL = \"service_detail\";\r\n    public static final String BUNDLED_LISTENER = \"bundled_listener\";\r\n    public static final String TOKEN_VAL = \"bundled_token\";\r\n\r\n    private SimpleExoPlayer player;\r\n    private PlayerNotificationManager playerNotificationManager;\r\n    private MediaSessionCompat mediaSession;\r\n    private MediaSessionConnector mediaSessionConnector;\r\n    private final IBinder mBinder = new LocalBinder();\r\n\r\n    ConcatenatingMediaSource concatenatingMediaSource;\r\n    CacheDataSourceFactory cacheDataSourceFactory;\r\n\r\n    private MusicRepo musicRepo;\r\n    private MediaSessionCompat.Token mMediaSessionToken;\r\n\r\n    @Override\r\n    public void onCreate() {\r\n\r\n        super.onCreate();\r\n        Log.i(TAG, \"onCreate\");\r\n        final Context context = this;\r\n\r\n        player = ExoPlayerFactory.newSimpleInstance(context, new DefaultTrackSelector());\r\n\r\n        DefaultDataSourceFactory dataSourceFactory = new DefaultDataSourceFactory(\r\n                context, Util.getUserAgent(context, getString(R.string.app_name)));\r\n\r\n        cacheDataSourceFactory = new CacheDataSourceFactory(\r\n                DownloadUtil.getCache(context),\r\n                dataSourceFactory,\r\n                CacheDataSource.FLAG_IGNORE_CACHE_ON_ERROR);\r\n\r\n        concatenatingMediaSource = new ConcatenatingMediaSource();\r\n\r\n        player.setPlayWhenReady(true);\r\n\r\n        musicRepo = MusicRepo.get(getApplicationContext());\r\n        playerNotificationManager = PlayerNotificationManager.createWithNotificationChannel(\r\n                context,\r\n                PLAYBACK_CHANNEL_ID,\r\n                R.string.playback_channel_name,\r\n                PLAYBACK_NOTIFICATION_ID,\r\n                new MediaDescriptionAdapter() {\r\n                    @Override\r\n                    public String getCurrentContentTitle(Player player) {\r\n\r\n                        //int index = player.getCurrentWindowIndex();\r\n\r\n                        Log.d(TAG, \"Current Tag\" + player.getCurrentTag());\r\n\r\n                        Object mediaTag = player.getCurrentTag();\r\n                        if (mediaTag != null) {\r\n                            Song song = musicRepo.GetSongByMediaId(mediaTag.toString());\r\n                            if (song != null) {\r\n                                return song.title;\r\n                            }\r\n                        }\r\n\r\n                        return null;\r\n                    }\r\n\r\n                    @Nullable\r\n                    @Override\r\n                    public PendingIntent createCurrentContentIntent(Player player) {\r\n                        return null;\r\n                    }\r\n\r\n                    @Nullable\r\n                    @Override\r\n                    public String getCurrentContentText(Player player) {\r\n//                        return SAMPLES[player.getCurrentWindowIndex()].description;\r\n\r\n                        //int index = player.getCurrentWindowIndex();\r\n\r\n                        Log.d(TAG, \"Current Tag\" + player.getCurrentTag());\r\n\r\n                        Object mediaTag = player.getCurrentTag();\r\n                        if (mediaTag != null) {\r\n                            Song song = musicRepo.GetSongByMediaId(mediaTag.toString());\r\n                            if (song != null) {\r\n                                return song.description;\r\n                            }\r\n                        }\r\n\r\n                        return null;\r\n\r\n                    }\r\n\r\n                    @Nullable\r\n                    @Override\r\n                    public Bitmap getCurrentLargeIcon(Player player, BitmapCallback callback) {\r\n                        Log.d(TAG, \"Current Tag\" + player.getCurrentTag());\r\n\r\n                        Object mediaTag = player.getCurrentTag();\r\n                        if (mediaTag != null) {\r\n                            Song song = musicRepo.GetSongByMediaId(mediaTag.toString());\r\n                            if (song != null) {\r\n                                return MusicRepo.getBitmap( getApplicationContext(), song.bitmapResource);\r\n                            }\r\n                        }\r\n\r\n                        return null;\r\n\r\n//                        return Samples.getBitmap(\r\n//                                context, SAMPLES[player.getCurrentWindowIndex()].bitmapResource);\r\n                    }\r\n                }\r\n        );\r\n        playerNotificationManager.setUseChronometer(true);\r\n        playerNotificationManager.setNotificationListener(new NotificationListener() {\r\n            @Override\r\n            public void onNotificationStarted(int notificationId, Notification notification) {\r\n                startForeground(notificationId, notification);\r\n            }\r\n\r\n            @Override\r\n            public void onNotificationCancelled(int notificationId) {\r\n                stopSelf();\r\n            }\r\n        });\r\n\r\n        playerNotificationManager.setUseChronometer(true);\r\n        playerNotificationManager.setPlayer(player);\r\n\r\n        mediaSession = new MediaSessionCompat(context, MEDIA_SESSION_TAG);\r\n        mediaSession.setActive(true);\r\n        mMediaSessionToken = mediaSession.getSessionToken();\r\n        Log.d(TAG, \"Media Session Token: \" + mMediaSessionToken.toString());\r\n        playerNotificationManager.setMediaSessionToken(mMediaSessionToken);\r\n\r\n        mediaSessionConnector = new MediaSessionConnector(mediaSession);\r\n        mediaSessionConnector.setQueueNavigator(new TimelineQueueNavigator(mediaSession) {\r\n            @Override\r\n            public MediaDescriptionCompat getMediaDescription(Player player, int windowIndex) {\r\n                Log.d(TAG, \"getMediaDescription: QueueNavigator: \" + windowIndex);\r\n\r\n                Object tag = player.getCurrentTag();\r\n                if (tag != null) {\r\n                    String mediaId = tag.toString();\r\n                    Song song = musicRepo.GetSongByMediaId(mediaId);\r\n                    if (song != null) {\r\n                        return MusicRepo.getMediaDescription( AudioPlayerService.this, song);\r\n                    }\r\n                }\r\n                //return Samples.getMediaDescription(context, SAMPLES[windowIndex]);\r\n                return null;\r\n            }\r\n\r\n        });\r\n        mediaSessionConnector.setPlayer(player, null);\r\n        //mediaSession.setActive(true);\r\n    }\r\n\r\n    @Override\r\n    public void onDestroy() {\r\n        mediaSession.release();\r\n        mediaSessionConnector.setPlayer(null, null);\r\n        playerNotificationManager.setPlayer(null);\r\n        player.release();\r\n        player = null;\r\n\r\n        super.onDestroy();\r\n    }\r\n\r\n    @Nullable\r\n    @Override\r\n    public IBinder onBind(Intent intent) {\r\n        return mBinder;\r\n    }\r\n\r\n    @Override\r\n    public int onStartCommand(Intent intent, int flags, int startId) {\r\n        int action = intent.getIntExtra(SERVICE_ACTION, ACTION_START_SERVICE);\r\n        switch (action) {\r\n            case ACTION_START_SERVICE:\r\n\r\n                Log.d(TAG, \"onStartCommand: ACTION_START_SERVICE \");\r\n                //don't need this now that service is bound\r\n//                ResultReceiver receiver = intent.getParcelableExtra(AudioPlayerService.BUNDLED_LISTENER);\r\n//                Bundle bundle = new Bundle();\r\n//                bundle.putParcelable(TOKEN_VAL, mMediaSessionToken);\r\n//                receiver.send(Activity.RESULT_OK, bundle);\r\n                return START_STICKY;\r\n\r\n            case ACTION_ADD_TO_PLAYLIST:\r\n\r\n                Log.d(TAG, \"onStartCommand: ACTION_ADD_TO_PLAYLIST \");\r\n                int detailId = intent.getIntExtra(SERVICE_DETAIL, 0) ;\r\n                DetailedSelection detail = DetailedSelection.toDetailedSelection(detailId);\r\n                Log.d(TAG, \"onStartCommand: Adding to playlist \" + detail);\r\n                addToPlaylist(detail);\r\n\r\n            break;\r\n        }\r\n        return START_STICKY;\r\n    }\r\n\r\n    @Override\r\n    public void onLowMemory() {\r\n        super.onLowMemory();\r\n    }\r\n\r\n    private void addToPlaylist(DetailedSelection detail) {\r\n\r\n        Log.d(TAG, \"Adding to playlist detail: \" + detail);\r\n\r\n        MusicRepo musicRepo = MusicRepo.get(this);\r\n\r\n        Song song = musicRepo.GetPrimarySong(detail);\r\n        Log.d(TAG, \"Adding Song: \" + song.mediaId + \" \" + song.title);\r\n\r\n/*\r\n        Samples.Sample sample = null;\r\n        if (detail.getValue() % 2 == 0) {\r\n            sample = SAMPLES[0];\r\n        }\r\n        else {\r\n           sample = SAMPLES[1];\r\n        }\r\n*/\r\n        MediaSource mediaSource = new ExtractorMediaSource.Factory(cacheDataSourceFactory)\r\n                .setTag(song.mediaId)//add in tag for unique identifier of song\r\n                .createMediaSource(song.uri);\r\n\r\n        concatenatingMediaSource.addMediaSource(mediaSource);\r\n        /*\r\n        for (Samples.Sample sample : SAMPLES) {\r\n            MediaSource mediaSource = new ExtractorMediaSource.Factory(cacheDataSourceFactory)\r\n                    .createMediaSource(sample.uri);\r\n            concatenatingMediaSource.addMediaSource(mediaSource);\r\n        }\r\n\r\n        */\r\n\r\n        //player.prepare(concatenatingMediaSource, false, false);\r\n        player.prepare(concatenatingMediaSource);\r\n      //  player.\r\n      //  player.getMetadataComponent().notifyAll();\r\n//        if ( player.getPlaybackState() == Player.STATE_READY && player.getPlayWhenReady()) {\r\n//\r\n//        }\r\n//        else {\r\n//            player.setPlayWhenReady(true);\r\n//        }\r\n\r\n\r\n    }\r\n\r\n    /** method for clients */\r\n    public int Pause() {\r\n        Log.d(TAG, \"Pause: \");\r\n\r\n        return 0;\r\n    }\r\n\r\n    public int Add(DetailedSelection mDetailedSelection) {\r\n\r\n        Log.d(TAG, \"Adding selection \" + mDetailedSelection);\r\n        player.setPlayWhenReady(true);\r\n        return 0;\r\n\r\n    }\r\n\r\n    public static Intent GetFactoryIntent(Context ctx) {\r\n\r\n        Intent intent = new Intent(ctx, AudioPlayerService.class);\r\n        intent.putExtra(SERVICE_ACTION, ACTION_START_SERVICE);\r\n        return intent;\r\n    }\r\n    public static Intent GetAddToPlaylistIntent(Context ctx, DetailedSelection detail ) {\r\n\r\n        Intent intent = new Intent(ctx, AudioPlayerService.class);\r\n        intent.putExtra(SERVICE_ACTION, ACTION_ADD_TO_PLAYLIST);\r\n        intent.putExtra(SERVICE_DETAIL, detail.getValue());\r\n        return intent;\r\n\r\n    }\r\n\r\n    public MediaSessionCompat.Token getMediaSessionToken() {\r\n        return mMediaSessionToken;\r\n    }\r\n\r\n    public class LocalBinder extends Binder {\r\n        public AudioPlayerService getService() {\r\n            return AudioPlayerService.this;\r\n        }\r\n    }\r\n```\r\n\r\nAnd here is the fragment that is not getting updated properly. Right now the songs are started in another fragment, play fine in the NotificationArea, so the buttons don't really mean anything. The session token is shared via a common view model. Mostly I wonder why the code in `onMetadataChanged` is not working as expected.\r\n\r\n```\r\n\r\npublic class HomeFragment extends Fragment {\r\n\r\n    private String TAG = getClass().getSimpleName();\r\n\r\n    private MediaSessionCompat.Token mToken;\r\n    private PlayerView mPlayerView;\r\n    private MediaControllerCompat mMediaController;\r\n    private MediaControllerCallback mControllerCallback;\r\n    private boolean mControllerRegistered = false;\r\n\r\n    private Button btn1;\r\n    private Button btn2;\r\n    private CheckBox checkBox1;\r\n    private CheckBox checkBox2;\r\n\r\n    public View onCreateView(@NonNull LayoutInflater inflater,\r\n                             ViewGroup container, Bundle savedInstanceState) {\r\n\r\n        View root = inflater.inflate(R.layout.fragment_home, container, false);\r\n        final TextView textView = root.findViewById(R.id.text_home);\r\n\r\n\r\n        final Button button = root.findViewById(R.id.button_token);\r\n      //  button.setOnClickListener(v -> Toast.makeText(this, \"Button clicked\", Toast.LENGTH_LONG).show());\r\n        button.setOnClickListener(view -> {\r\n            Activity activity  =  getActivity();\r\n            if (activity != null) {\r\n                if (activity instanceof IMainActivity) {\r\n                    mToken = ((IMainActivity)activity).getSessionToken();\r\n                    if (mToken != null) {\r\n                        Log.i(TAG, mToken.toString());\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        final Button button_playlist = root.findViewById(R.id.button_playlist);\r\n        button_playlist.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Log.i(TAG, \"trying to get playlist\");\r\n                try {\r\n                    MediaControllerCompat mcc = new MediaControllerCompat(getContext(), HomeFragment.this.mToken);\r\n                    //mcc.get\r\n                    List<MediaSessionCompat.QueueItem> queue = mcc.getQueue();\r\n                    if (queue != null) {\r\n                        Log.i(TAG, \"queue not null\");\r\n                       //  Log.i(TAG, queue.toString());\r\n                         for (MediaSessionCompat.QueueItem item : queue) {\r\n                             Log.i(TAG, \"qi:\" + item.toString());\r\n                         }\r\n                    }\r\n                    else {\r\n                        Log.i(TAG, \"queue NULL\");\r\n                    }\r\n                } catch (RemoteException e) {\r\n                    e.printStackTrace();\r\n                }\r\n\r\n\r\n            }\r\n        });\r\n      //  mPlayerView = root.findViewById(R.id.player_view);\r\n\r\n        btn1 = root.findViewById(R.id.btn_play_1);\r\n        btn2 = root.findViewById(R.id.btn_play_2);\r\n        checkBox1 = root.findViewById(R.id.chbox_is_playing_1);\r\n        checkBox2 = root.findViewById(R.id.chbox_is_playing_2);\r\n        btn1.setOnClickListener(v -> {\r\n\r\n            Log.i(TAG, \"btn1 Clicked\");\r\n\r\n        });\r\n        btn2.setOnClickListener(v -> {\r\n                Log.i(TAG, \"btn2 Clicked\");\r\n        });\r\n\r\n        return root;\r\n    }\r\n    @Override\r\n    public void onViewCreated(@NonNull View view, Bundle savedInstanceState) {\r\n\r\n        super.onViewCreated(view, savedInstanceState);\r\n        MainViewModel mainVm = new ViewModelProvider (requireActivity()).get(MainViewModel.class);\r\n\r\n        mainVm.getName().observe(getViewLifecycleOwner(), s -> {\r\n            Log.i(TAG, \"Name = \" + s);\r\n        });\r\n        //\r\n        mainVm.getToken().observe(getViewLifecycleOwner(), token -> {\r\n            Log.i(TAG, \"Token = \" + token);\r\n            try {\r\n\r\n                if (mControllerRegistered) {\r\n                    return;\r\n                }\r\n\r\n                mMediaController = new MediaControllerCompat(getActivity(), token);\r\n                if (mControllerCallback == null) {\r\n                    mControllerCallback = new HomeFragment.MediaControllerCallback();\r\n                }\r\n                Log.i(TAG, \"Registered!!!\");\r\n                mMediaController.registerCallback(mControllerCallback);\r\n                mControllerRegistered = true;\r\n           //     registerController();\r\n//                mControllerCallback = new HomeFragment.MediaControllerCallback();\r\n//                mMediaController.registerCallback(mControllerCallback);\r\n//                mControllerRegistered = true;\r\n\r\n\r\n            }\r\n\r\n            catch(RemoteException ex) {\r\n                Log.e(TAG, ex.getMessage());\r\n                ex.printStackTrace();\r\n\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n    @Override\r\n    public void onDestroyView() {\r\n        super.onDestroyView();\r\n        Log.e(TAG, \"View Destroyed\");\r\n        unRegisterController();\r\n    }\r\n    @Override\r\n    public void onAttach(Context context) {\r\n\r\n        super.onAttach(context);\r\n        Log.i(TAG, \"onAttach\");\r\n       // registerController();\r\n\r\n\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onDetach() {\r\n\r\n        super.onDetach();\r\n        Log.i(TAG, \"onDetach\");\r\n        unRegisterController();\r\n\r\n    }\r\n\r\n    private void registerController() {\r\n\r\n\r\n    }\r\n    private void unRegisterController() {\r\n\r\n        if (mControllerRegistered) {\r\n            mMediaController.unregisterCallback(mControllerCallback);\r\n            mControllerRegistered = false;\r\n        }\r\n\r\n    }\r\n    private static class MediaControllerCallback extends MediaControllerCompat.Callback {\r\n\r\n        private static final String TAG = \"HomeFragment:MCC\";\r\n        @Override\r\n        public void onPlaybackStateChanged(@Nullable final PlaybackStateCompat state) {\r\n            Log.i(TAG, \"onPlaybackStateChanged: \" + state.toString());\r\n            long queueId =  state.getActiveQueueItemId();\r\n            Log.i(TAG, \"onPlaybackStateChanged: qid \" + queueId);\r\n        }\r\n        @Override\r\n        public void onMetadataChanged(final MediaMetadataCompat metadata) {\r\n            // Filtering out needless updates, given that the metadata has not changed.\r\n            Log.i(TAG, \"onMetadataChanged\");\r\n            if (metadata != null) {\r\n                Log.i(TAG, \"onMetadataChanged: \" + metadata.toString());\r\n                Set<String> keys = metadata.keySet();\r\n\r\n                String mediaId = metadata.getString(MediaMetadataCompat.METADATA_KEY_MEDIA_ID);\r\n                String title = metadata.getString(MediaMetadataCompat.METADATA_KEY_TITLE);\r\n                Log.i(TAG, \"MediaId: \" +  mediaId);\r\n                Log.i(TAG, \"Title: \" +  title);\r\n            }\r\n        }\r\n        @Override\r\n        public void onQueueChanged (List<MediaSessionCompat.QueueItem> queue) {\r\n            Log.i(TAG, \"onQueueChanged\");\r\n            int queueCount = queue.size();\r\n            for(MediaSessionCompat.QueueItem item : queue) {\r\n\r\n            }\r\n            Log.i(TAG, \"onQueueChanged: size \" + queueCount);\r\n        }\r\n        @Override\r\n        public void onQueueTitleChanged (CharSequence title) {\r\n            Log.i(TAG, \"onQueueTitleChanged: \" + title);\r\n        }\r\n        @Override\r\n        public void onSessionDestroyed ()\r\n        {\r\n            Log.i(TAG, \"onSessionDestroyed: \" );\r\n        }\r\n    }\r\n```",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7443/comments",
    "author": "voam",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2020-05-29T12:15:08Z",
        "body": "In the code above the `MediaSessionConnector` is setup with the `TimelineQueueNavigator`. The `TimelineQueueNavigator` is used for two things: providing the `activeQueueItemId` of the `PlaybackStatenCompat` and to provide the media descriptions for each item in the timeline, with which the queue of the media session is populated. Former is done internally, while latter, the media descriptions for each timeline/queue item, needs to be provided by the abstract method `getMediaDescription(Player player, int windowIndex)` which you need to implement yourself.\r\n\r\nLooking into the implementation above it appears to me, that it always returns the description of the current item which is evaluated with `player.getCurrentTag()`. Instead the `windowIndex` needs to be taken into account.\r\n\r\nImagine that the `MediaSessionConnector` knows that there are 10 items in the timeline of the player. To populate the queue of the media session, it then call this method for each `windowIndex` 0 to 9 and populates the queue of the session with the 10 descriptions that are returned. The metadata is then taken from the queue of the session at the `currentWindowIndex`. \r\n\r\nWith the code above I'd expect that the queue is not properly populated because `getMediaDescription(Player player, int windowIndex)` does not what it is expected to do.\r\n\r\nCan you check this and provide the media description for the `windowIndex`? You can put a breakpoint into `getMediaDescription(Player player, int windowIndex)` at first to see that it is called once for each window index.\r\n\r\n"
      },
      {
        "user": "voam",
        "created_at": "2020-05-31T02:53:38Z",
        "body": "I see. That makes sense. Indeed, the `getMediaDescription(Player player, int windowIndex)` is called once for each window index.  The correct songs play in the correct order and show up in the Notification area properly.  But the MediaDescription is always the one for the first song added. \r\n\r\nI guess the question comes down to how to use the windowIndex to navigate the timeline and get the tag of the song based on the timline index?. Maybe I shouldn't be using an anonymous `TimelineQueueNavigator` ?"
      },
      {
        "user": "voam",
        "created_at": "2020-05-31T11:32:42Z",
        "body": "Ah, after your explanation and exploring a little bit I guess I can use the `windowIndex `to index into the `concatenatingMediaSource` and this lets me get the correct media. With this change the `onMetadataChanged` callback in the second fragment gets supplied the correct info. Super!\r\n\r\nThanks you @marcbaechinger for the insight and help!\r\n\r\n\r\n```\r\n\r\nmediaSessionConnector.setQueueNavigator(new TimelineQueueNavigator(mediaSession) {\r\n            @Override\r\n            public MediaDescriptionCompat getMediaDescription(Player player, int windowIndex) {\r\n\r\n                Log.d(TAG, \"getMediaDescription: QueueNavigator: \" + windowIndex);\r\n\r\n                MediaSource mediaSource = concatenatingMediaSource.getMediaSource(windowIndex);\r\n                Object tag = mediaSource.getTag();\r\n\r\n                if (tag != null) {\r\n                    String mediaId = tag.toString();\r\n                    Song song = musicRepo.GetSongByMediaId(mediaId);\r\n                    if (song != null) {\r\n                        Log.i(TAG, \"GetSongByMediaId: getMediaDescription: \" + song.title + \" : \" + song.mediaId + \" windowIndex: \" + windowIndex);\r\n                        MediaDescriptionCompat mediaDescription = MusicRepo.getMediaDescription( AudioPlayerService.this, song);\r\n                        return mediaDescription;\r\n                    }\r\n                }\r\n                //return Samples.getMediaDescription(context, SAMPLES[windowIndex]);\r\n                return null;\r\n            }\r\n\r\n        });\r\n```"
      }
    ]
  },
  {
    "number": 7426,
    "title": "\"*mp4?type=m3u8\" cause error media source",
    "created_at": "2020-05-26T10:40:30Z",
    "closed_at": "2020-05-27T00:45:34Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7426",
    "body": "### [REQUIRED] Searched documentation and issues\r\n\r\n### [REQUIRED] Question\r\nThe movie link end with **\"mp4?type=m3u8\"**, use exo player with `TYPE_OTHER` to watch the movie, and then it caused `UnrecognizedInputFormatException`. But my android platform support the video format, I try again with `TYPE_HLS`, it works well. \r\n**Is there any good ways to solve it?**\r\n\r\n### A full bug report captured from the device\r\n```\r\nExoPlayer: mExoEventListener - onPlayerStateChanged: playWhenReady = true, playbackState = 2\r\nExoPlayer: mExoEventListener: playbackState = STATE_BUFFERING 0 - 0\r\nEventLogger: timeline [eventTime=0.01, mediaPos=0.00, window=0, periodCount=1, windowCount=1, reason=PREPARED\r\nEventLogger:   period [?]\r\nEventLogger:   window [?, false, false]\r\nEventLogger: ]\r\nExoPlayer: mExoEventListener: onTimelineChanged-----timeline com.google.android.exoplayer2.source.SinglePeriodTimeline@214da72\r\nEventLogger: mediaPeriodCreated [eventTime=0.02, mediaPos=0.00, window=0, period=0]\r\nEventLogger: loading [eventTime=0.02, mediaPos=0.00, window=0, period=0, true]\r\nExoPlayer: mExoEventListener: onLoadingChanged-----isLoading true\r\nUsbService.NetworkService: usbFile.exists() =false\r\nEventLogger: internalError [eventTime=2.09, mediaPos=0.00, window=0, period=0, loadError\r\nEventLogger:   com.google.android.exoplayer2.source.UnrecognizedInputFormatException: None of the available extractors (MatroskaExtractor, FragmentedMp4Extractor, Mp4Extractor, Mp3Extractor, AdtsExtractor, Ac3Extractor, TsExtractor, FlvExtractor, OggExtractor, PsExtractor, WavExtractor, AmrExtractor, Ac4Extractor, FlacExtractor) could read the stream.\r\nEventLogger:       at com.google.android.exoplayer2.source.ProgressiveMediaPeriod$ExtractorHolder.selectExtractor(ProgressiveMediaPeriod.java:1090)\r\nEventLogger:       at com.google.android.exoplayer2.source.ProgressiveMediaPeriod$ExtractingLoadable.load(ProgressiveMediaPeriod.java:969)\r\nEventLogger:       at com.google.android.exoplayer2.upstream.Loader$LoadTask.run(Loader.java:391)\r\nEventLogger:       at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1133)\r\nEventLogger:       at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:607)\r\nEventLogger:       at java.lang.Thread.run(Thread.java:761)\r\nEventLogger: ]\r\nExoPlayerImplInternal: Source error\r\nExoPlayerImplInternal:   com.google.android.exoplayer2.source.UnrecognizedInputFormatException: None of the available extractors (MatroskaExtractor, FragmentedMp4Extractor, Mp4Extractor, Mp3Extractor, AdtsExtractor, Ac3Extractor, TsExtractor, FlvExtractor, OggExtractor, PsExtractor, WavExtractor, AmrExtractor, Ac4Extractor, FlacExtractor) could read the stream.\r\nExoPlayerImplInternal:       at com.google.android.exoplayer2.source.ProgressiveMediaPeriod$ExtractorHolder.selectExtractor(ProgressiveMediaPeriod.java:1090)\r\nExoPlayerImplInternal:       at com.google.android.exoplayer2.source.ProgressiveMediaPeriod$ExtractingLoadable.load(ProgressiveMediaPeriod.java:969)\r\nExoPlayerImplInternal:       at com.google.android.exoplayer2.upstream.Loader$LoadTask.run(Loader.java:391)\r\nExoPlayerImplInternal:       at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1133)\r\nExoPlayerImplInternal:       at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:607)\r\nExoPlayerImplInternal:       at java.lang.Thread.run(Thread.java:761)\r\nEventLogger: mediaPeriodReleased [eventTime=2.09, mediaPos=0.00, window=0, period=0]\r\nEventLogger: playerFailed [eventTime=2.09, mediaPos=0.00, window=0, period=0\r\nEventLogger:   com.google.android.exoplayer2.ExoPlaybackException: com.google.android.exoplayer2.source.UnrecognizedInputFormatException: None of the available extractors (MatroskaExtractor, FragmentedMp4Extractor, Mp4Extractor, Mp3Extractor, AdtsExtractor, Ac3Extractor, TsExtractor, FlvExtractor, OggExtractor, PsExtractor, WavExtractor, AmrExtractor, Ac4Extractor, FlacExtractor) could read the stream.\r\nEventLogger:       at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:394)\r\nEventLogger:       at android.os.Handler.dispatchMessage(Handler.java:98)\r\nEventLogger:       at android.os.Looper.loop(Looper.java:154)\r\nEventLogger:       at android.os.HandlerThread.run(HandlerThread.java:61)\r\nEventLogger:   Caused by: com.google.android.exoplayer2.source.UnrecognizedInputFormatException: None of the available extractors (MatroskaExtractor, FragmentedMp4Extractor, Mp4Extractor, Mp3Extractor, AdtsExtractor, Ac3Extractor, TsExtractor, FlvExtractor, OggExtractor, PsExtractor, WavExtractor, AmrExtractor, Ac4Extractor, FlacExtractor) could read the stream.\r\nEventLogger:       at com.google.android.exoplayer2.source.ProgressiveMediaPeriod$ExtractorHolder.selectExtractor(ProgressiveMediaPeriod.java:1090)\r\nEventLogger:       at com.google.android.exoplayer2.source.ProgressiveMediaPeriod$ExtractingLoadable.load(ProgressiveMediaPeriod.java:969)\r\nEventLogger:       at com.google.android.exoplayer2.upstream.Loader$LoadTask.run(Loader.java:391)\r\nEventLogger:       at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1133)\r\nEventLogger:       at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:607)\r\nEventLogger:       at java.lang.Thread.run(Thread.java:761)\r\nEventLogger: ]\r\nExoPlayer: onPlayerError: error type : TYPE_SOURCE, com.google.android.exoplayer2.source.UnrecognizedInputFormatException: None of the available extractors (MatroskaExtractor, FragmentedMp4Extractor, Mp4Extractor, Mp3Extractor, AdtsExtractor, Ac3Extractor, TsExtractor, FlvExtractor, OggExtractor, PsExtractor, WavExtractor, AmrExtractor, Ac4Extractor, FlacExtractor) could read the stream.\r\nExoPlayer: onPlayerError: com.google.android.exoplayer2.source.UnrecognizedInputFormatException: None of the available extractors (MatroskaExtractor, FragmentedMp4Extractor, Mp4Extractor, Mp3Extractor, AdtsExtractor, Ac3Extractor, TsExtractor, FlvExtractor, OggExtractor, PsExtractor, WavExtractor, AmrExtractor, Ac4Extractor, FlacExtractor) could read the stream.\r\nBaseVideoView: [ciel_debug][onError]: what: -10001,extra: 0\r\n```\r\n\r\n### Link to test content\r\nSorry, the test link is private.\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7426/comments",
    "author": "VeiZhang",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2020-05-26T13:29:26Z",
        "body": "If you want to play an HLS stream, then you need to use a `HlsMediaSource`. So you need to use `TYPE_HLS`. An HLS stream provides a playlist which is a text file this needs to be interpreted by the player to then download the adaptive media. The error you are seeing and posted above occurs because the `ProgressiveMediaSource` is used and it tries to interpret the text playlist as a media file. This fails with the error message above because the extractors expect a media container rather than a playlist.\r\n\r\nSo you need to do something like this:\r\n\r\n```\r\nHlsMediaSource hlsMediaSource = new HlsMediaSource.Factory(dataSourceFactory)\r\n    .createMediaSource(uri);\r\nplayer.setMediaSource(hlsMediaSource);\r\n```"
      },
      {
        "user": "VeiZhang",
        "created_at": "2020-05-26T13:41:41Z",
        "body": "@marcbaechinger Thanks for your reply. But the situation is different, I don't know which stream will be played, so I used `ProgressiveMediaSource`, then the `mp4?type=m3u8` come error. I mean how to recognize and use the true media soure."
      },
      {
        "user": "marcbaechinger",
        "created_at": "2020-05-26T14:13:04Z",
        "body": "If you are using an adaptive stream like HLS, DASH or SmoothStreaming you can not use `ProgressiveMediaSource`. Instead you need to use the adaptive media source according to the type of the stream. In you case of an HLS stream yoy would need to create a `HlsMediaSource` as shown below. \r\n\r\nIt's up to the app to choose the correct media source.\r\n(This is a duplicate of #7389)"
      },
      {
        "user": "VeiZhang",
        "created_at": "2020-05-27T00:45:34Z",
        "body": "@marcbaechinger Thanks a lot"
      }
    ]
  },
  {
    "number": 7402,
    "title": "Question: Does ProgressiveMediaSource save any file while playing from http url?",
    "created_at": "2020-05-20T09:56:21Z",
    "closed_at": "2020-05-20T14:46:27Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7402",
    "body": "1. I have been searching on Stackoverflow, website, API docs but it's still not clear how does ProgressiveMediaSource behaves when playing video from external http url. Does it saves chunks into a file and then render that? Or it keeps chunks only in memory?\r\n\r\n2. Also when playing a video in loop it downloads over and over again the video or it has a cache somewhere?\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7402/comments",
    "author": "tigerss",
    "comments": [
      {
        "user": "christosts",
        "created_at": "2020-05-20T13:04:27Z",
        "body": "It depends how you construct the ProgressiveMediaSource. \r\n\r\nFor example, if you use a DefaultHttpDataSourceFactory, it will create DataSources that fetch the video and keep it only in memory. Therefore, the ProgressiveMediaSource will download the video contents every time you play the file, and, in fact, it will likely download pieces of the same file within the same playback session more than once if you seek backwards.\r\n\r\nHowever, if you create a ProgressiveMediaSource using a CacheDataSourceFactory, it will use CachingDataSources that download the video and store it locally on the device, so the video pieces will be downloaded only if they are not present in the cache (they have been downloaded before or perhaps they were evicted to make room for other chunks).\r\n\r\nLet me know if you need more clarifications."
      }
    ]
  },
  {
    "number": 7398,
    "title": "Does the order of code when initing the player matter?",
    "created_at": "2020-05-20T07:48:13Z",
    "closed_at": "2020-05-20T12:15:34Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7398",
    "body": "Most of the sample code calls 'setPlayWhenReady()' after calling the 'prepare()' method.\r\n\r\nThere's no particular reason, but I'm calling 'setPlayWhenReady()' first.\r\n\r\nIs there any possibility of side effects or issues (I'm asking because there is already a distributed version)?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7398/comments",
    "author": "hyeonsu94",
    "comments": [
      {
        "user": "christosts",
        "created_at": "2020-05-20T12:15:34Z",
        "body": "I am not aware of an issue when calling `setPlayWhenReady()` before `prepare()`. Let us know if you see something strange."
      }
    ]
  },
  {
    "number": 7366,
    "title": "Is it possible to change video duration after changing video speed?",
    "created_at": "2020-05-12T13:28:41Z",
    "closed_at": "2020-05-21T08:33:47Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7366",
    "body": "I have used `setPlaybackParameters` method to change speed of video. Player keep same duration when I increased or decreased speed. But if we apply process on video then if speed increased, video duration decreased and speed decreased, video duration increased. I want to show that in preview using exoplayer. \r\n\r\nPlease guide me.\r\n\r\nThanks",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7366/comments",
    "author": "ghost",
    "comments": [
      {
        "user": "krocard",
        "created_at": "2020-05-13T19:20:45Z",
        "body": "I'm not sure to understand the question. What type of video processing are you talking about?\r\n\r\nDo you want the video duration in the UI to decrease with the speed as if\r\n`UI_video_duration = real_video_duration / speed`)\r\n\r\nOr is the UI video duration you want to display related to your app _processing on video_, so not proportional to the speed?"
      },
      {
        "user": "ghost",
        "created_at": "2020-05-14T04:59:47Z",
        "body": "Hi @krocard Thank you for quick response.\r\nI have applied above formula. But video will complete on it's actual time.\r\nLet's say I have choose video of `144639` Millisecond. set speed 5. As per your formula `144639/5 = 28927.8`. So now video duration is `28927.8`. But when I play video in exoplayer with speed `5` it will complete in `144639` Millisecond not `28927.8`. \r\nSo how can I play complete video in updated duration?\r\nI hope for your response.\r\nThank you."
      },
      {
        "user": "krocard",
        "created_at": "2020-05-14T10:26:55Z",
        "body": "> But when I play video in exoplayer with speed 5 it will complete in 144639 Millisecond not 28927.8.\r\n\r\nIf you play a video with speed 5, the real elapse time to play the video will be 5 time less.\r\nAka if you start a stopwatch at the beginning of the video, and stop the timewatch when it is finished playing, the stopwatch will show around 28927.8. You will also see and hear the video playing 5 time faster.\r\n\r\nOn the other hand, the timestamps reported by ExoPlayer (for example `Player.getCurrentPosition()`), are independent of the speed and refer to the position in the video as if it was played at speed 1.\r\n\r\nIf what you want is the real time ExoPlayer has played the current video (like the stopwatch would give you in my previous thought experiment), I'm afraid ExoPlayer does not keep track of it.\r\nNevertheless, assuming you always play the video at the same speed, you can divide the position that ExoPlayer returns by the playback speed to get the \"stopwatch\" position.\r\n\r\nDoes this answers your question?"
      },
      {
        "user": "ghost",
        "created_at": "2020-05-20T07:22:44Z",
        "body": "Thanks for your help.\r\n\r\nI have implemented as per you told. I calculated updated video duration and video will complete within updated duration with speed changes.\r\n\r\nLet say `29568` Millisecond video, `0.6` speed set then updated video duration is `49280(29568 / 0.6).` So I sat that update duration and display in my screen.\r\n\r\nBut now I will seek manually and `seekTo` `24640` millisecond means `50%` of updated video duration. But player seek video almost till end because video actual duration is `29568`.\r\nIn That case what should I do to seek video to `50%`\r\n\r\nPlease guide me.\r\n\r\nThank you."
      },
      {
        "user": "krocard",
        "created_at": "2020-05-20T08:47:36Z",
        "body": "Does doing the inverse transformation when controlling the player fixes your issue. Aka\r\n`player.seekTo(TimestampFromTheUI*videoSpeed)`.\r\n\r\nIn your example that would be: `player.seekTo(24640*0.6)`. As `24640*0.6 = 14784` which is 50% of the actual video duration (`29568/2`).\r\n"
      },
      {
        "user": "ghost",
        "created_at": "2020-05-21T04:24:15Z",
        "body": "Yes, It is working.\r\nThank you so much for help and support."
      },
      {
        "user": "krocard",
        "created_at": "2020-05-21T08:33:47Z",
        "body": "You're welcome!\r\nI'm closing this issue as your questions are answered."
      }
    ]
  },
  {
    "number": 7365,
    "title": "Seeking did not work proper with ConcatenatingMediaSource.",
    "created_at": "2020-05-12T13:21:24Z",
    "closed_at": "2020-05-21T14:32:10Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7365",
    "body": "ExoPlayer 2.11.4\r\nPixel 2 \r\nAndroid 10\r\n\r\nI use a `ConcatenatingMediaSource`. When I call `seekTo` with the current `windowIndex` and the `positionMs`, At that time `onPositionDiscontinuity` called with reason `DISCONTINUITY_REASON_PERIOD_TRANSITION` and it will not seek to the proper position but `windowIndex` will increased. \r\n\r\nLet's say take 3 videos(10000, 20000, 30000 MS) and add source in `ConcatenatingMediaSource`. Current first video is playing and seek to `windowIndex` = 1 and `positionMs` = 12000 MS. `windowIndex` will change to 2 and 3rd video will start from it's default position.\r\n\r\nI have used seekbar to seek to particular position.\r\n\r\nPlease guide me.\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7365/comments",
    "author": "ghost",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2020-05-14T12:05:33Z",
        "body": "Are you saying that when you call `player.seekTo(1, 12000)` from inside the onPositionDiscontinuity() callback, then it starts window 2 at default position instead of window 1 at 12000?\r\n\r\nCan you please provide me with the code you are executing in the `onPositionDiscontinuity()` callback? To see what is going on in the player, can you please add `EventLogger` to the player of your app and take a bug report just after you have experienced the behaviour above?\r\n\r\nThis would allow me to look into your problem and give you some guidance on what is going on (or recognize a bug on our side if that's the case)."
      },
      {
        "user": "ghost",
        "created_at": "2020-05-15T04:51:02Z",
        "body": "Thank you for your response.\r\nNo I am not calling `player.seekTo(1, 12000)` from Inside the onPositionDiscontinuity() callback.\r\n\r\nPlease see code.\r\n\r\n```\r\nvideoSeekBar.setOnSeekChangeListener(object : OnSeekChangeListener {\r\n        override fun onSeeking(seekBar: VideoSeekBar?) {\r\n            try {\r\n                if(isSeeking)\r\n                   player.seekTo(currentWindowIndex, seekBar.position)\r\n            } catch (e: Exception) {\r\n                e.printStackTrace()\r\n            }\r\n        }\r\n\r\n        override fun onStartSeeking(seekBar: VideoSeekBar?) {\r\n            isSeeking = true\r\n        }\r\n\r\n        override fun onStopSeeking(seekBar: VideoSeekBar?) {\r\n                try {\r\n                    isSeeking = false\r\n                    player.seekTo(currentWindowIndex, seekBar.position)\r\n                } catch (e: Exception) {\r\n                    e.printStackTrace()\r\n                }\r\n        }\r\n    })\r\n\r\nobject : Player.EventListener {\r\n        override fun onPositionDiscontinuity(reason: Int) {\r\n            when (reason) {\r\n                Player.DISCONTINUITY_REASON_PERIOD_TRANSITION -> {\r\n                   Log.e(\"onPositionDiscontinuity\",\"DISCONTINUITY_REASON_PERIOD_TRANSITION\")\r\n                    Log.e( \"onPositionDiscontinuity\", \"player.currentWindowIndex ${player.currentWindowIndex}\" )\r\n                }\r\n                Player.DISCONTINUITY_REASON_INTERNAL -> {\r\n                    Log.e(\"onPositionDiscontinuity\", \"DISCONTINUITY_REASON_INTERNAL\")\r\n                }\r\n                Player.DISCONTINUITY_REASON_SEEK -> {\r\n                }\r\n                Player.TIMELINE_CHANGE_REASON_DYNAMIC -> {\r\n                    if (selectedFunction != ON_PROGRESS && selectedFunction != TRIM && selectedFunction != SPLIT && selectedFunction != SPEED_VIEW) {\r\n                        Log.e(\"onPlayerStateChanged\", \"TIMELINE_CHANGE_REASON_DYNAMIC\")\r\n                        updateCurrentPosition()\r\n                    }\r\n                }\r\n            }\r\n        }\r\n```\r\nWhen Call player.seekTo(1, 12000) from seekbar listener and then I get callback in onPositionDiscontinuity() with DISCONTINUITY_REASON_PERIOD_TRANSITION reason and windewIndex increased and it will be 2. And next video will play from it's default position means 0 Millisecond.\r\n\r\nThank you."
      },
      {
        "user": "marcbaechinger",
        "created_at": "2020-05-15T15:37:44Z",
        "body": "Many thanks for further information.\r\n\r\nA first observation is that you can remove the section with `Player.TIMELINE_CHANGE_REASON_DYNAMIC` because that is relevant for `onTimelineChanged(timeline, reason)` only. It may have the same value as a reason of discontinuity but you don't want to check for `Player.TIMELINE_CHANGE_REASON_DYNAMIC` in this callback.\r\n\r\nNow, just to make sure I understand everything correctly, let me describe what I understand you are doing. Please correct me if I understood wrongly:\r\n\r\n1. Prepare player with 3 media sources (10000ms, 20000ms, 30000ms)\r\n   -> `player.prepare(concatenatingMediaSource);`\r\n2. Start playback at windowIndex=0\r\n   -> `player.setPlayWhenReady(true);`\r\n3. You wait until playback transition to the second media with windowIndex=1\r\n4. Use the seekBar to get the new position and then seek to that position in the current window\r\n  -> player.seekTo(currentWindowIndex, seekBar.position);\r\n5. Playback continues and eventually transition to the third media item\r\n\r\nI would expect this results in three calls of `onPositionDiscontinuity` with different reasons:\r\n\r\n3. -> when transitioning to the second item there is a `Player.DISCONTINUITY_REASON_PERIOD_TRANSITION`. At the time you receive the callback the currentWindowIndex is already 1 for the second item and the currentPosition close to or equal to 0 (zero).\r\n\r\n4. -> when you seek there is a `Player.DISCONTINUITY_REASON_SEEK`. You don't have log output in your code for this which can be a source of confusion. Probably add this when you check again. WHen this callback call arrives you should have a `currentWindowIndex` of 1 again. That's the result of the user seek.\r\n\r\n5. -> Finally you again receive a callback call with `Player.DISCONTINUITY_REASON_PERIOD_TRANSITION` for the transition to the third item. Now `currentWindowIndex` is 2 and the `currentPosition` close to or equal to 0 (zero).\r\n\r\nI'm pretty sure that works. People would have told us since a while, if that would not work as expected. I still tested that on a device for illustration of what log statement you can expect. I recommend to add the `EventLogger` to the player if you haven't done this already. I see the following logs which match to what I wrote above:\r\n\r\n```\r\nEventLogger: positionDiscontinuity [eventTime=28.97, mediaPos=0.02, window=1, period=1, PERIOD_TRANSITION]\r\nEventLogger: positionDiscontinuity [eventTime=33.77, mediaPos=120.87, window=1, period=1, SEEK]\r\nEventLogger: positionDiscontinuity [eventTime=43.26, mediaPos=0.02, window=2, period=2, PERIOD_TRANSITION]\r\n```\r\n\r\nCan you check this and verify? If you see something else please add the 'EventLogger' to your player and then take a bug report right after you've seen the erroneous behaviour. Upload the bug report here so I can see what is going on internally."
      },
      {
        "user": "ghost",
        "created_at": "2020-05-21T05:59:20Z",
        "body": "There are 5 videos in `ConcatenatingMediaSource`. And play them with `ClippingMediaSource` \r\nI have used like below:\r\n```\r\n1) 0 - 7392\r\n2) 7392 - 14784\r\n3) 22176 - 29568\r\n4) 14784 - 22176\r\n5) 0 - 29168\r\n```\r\n\r\nHere I have choose 2 videos of `29568` and `29168` milliseconds. But I have split 1st video in 4 section and use `ClippingMediaSource` to play specific duration.\r\nI am seeking seekbar to 5th video means `currentWindowIndex = 4`.\r\nThen player start 1st video means `currentWindowIndex` will be `0`.\r\nSo it will be issue for me.\r\nI have added `EvenLogger`. Please check below logs.\r\n```\r\nVideoSeekBar: currentVideoPosition 4\r\nVideoSeekBar: progress 36666.79\r\nonBindViewHolder: arrVideo[holder.adapterPosition].isSelected 4 true\r\nEventLogger: mediaPeriodReleased [eventTime=664.82, mediaPos=36.67, window=4, period=4]\r\nEventLogger: seekProcessed [eventTime=664.82, mediaPos=36.67, window=4]\r\nEventLogger: mediaPeriodCreated [eventTime=664.82, mediaPos=36.67, window=4, period=4]\r\nEventLogger: timeline [eventTime=664.82, mediaPos=36.67, window=4, period=4, periodCount=5, windowCount=5, reason=DYNAMIC\r\nEventLogger:   period [7.39]\r\nEventLogger:   period [14.78]\r\nEventLogger:   period [29.57]\r\nEventLogger:   ...\r\nEventLogger:   window [7.39, true, false]\r\nchatty: uid=10143(com.howto.demo) identical 1 line\r\nEventLogger:   window [7.39, true, false]\r\nEventLogger:   ...\r\nEventLogger: ]\r\nMediaCodecInfo: AssumedSupport [sizeAndRate.rotated, 640x1136x55.964298248291016] [OMX.google.h264.decoder, video/avc] [generic_x86, Android SDK built for x86, Google, 29]\r\nMediaCodecInfo: AssumedSupport [sizeAndRate.rotated, 640x1136x55.964298248291016] [OMX.google.h264.decoder, video/avc] [generic_x86, Android SDK built for x86, Google, 29]\r\nEventLogger: decoderEnabled [eventTime=664.85, mediaPos=36.67, window=4, period=4, video]\r\nEventLogger: decoderEnabled [eventTime=664.86, mediaPos=36.67, window=4, period=4, audio]\r\nEventLogger: tracks [eventTime=664.86, mediaPos=36.67, window=4, period=4, []]\r\nEventLogger: loading [eventTime=664.86, mediaPos=36.67, window=4, period=4, false]\r\nEventLogger: mediaPeriodReadingStarted [eventTime=664.86, mediaPos=36.67, window=4, period=4]\r\nEventLogger: state [eventTime=664.88, mediaPos=36.67, window=4, period=4, false, ENDED]\r\nonPlayerStateChanged: STATE_ENDED\r\nEventLogger: seekStarted [eventTime=664.88, mediaPos=36.67, window=4, period=4]\r\nEventLogger: positionDiscontinuity [eventTime=664.88, mediaPos=0.00, window=0, SEEK]\r\nonBindViewHolder: arrVideo[holder.adapterPosition].isSelected 4 false\r\nEventLogger: mediaPeriodReleased [eventTime=664.90, mediaPos=0.00, window=4, period=4]\r\nEventLogger: decoderDisabled [eventTime=664.90, mediaPos=0.00, window=4, period=4, video]\r\nEventLogger: decoderDisabled [eventTime=664.90, mediaPos=0.00, window=4, period=4, audio]\r\nEventLogger: positionDiscontinuity [eventTime=664.90, mediaPos=0.00, window=0, SEEK_ADJUSTMENT]\r\nonPlayerStateChanged: TIMELINE_CHANGE_REASON_DYNAMIC\r\nEventLogger: tracks [eventTime=664.90, mediaPos=0.00, window=0, []]\r\nEventLogger: state [eventTime=664.90, mediaPos=0.00, window=0, false, BUFFERING]\r\nEventLogger: seekProcessed [eventTime=664.90, mediaPos=0.00, window=0]\r\nEventLogger: mediaPeriodCreated [eventTime=664.90, mediaPos=0.00, window=0, period=0]\r\nEventLogger: loading [eventTime=664.90, mediaPos=0.00, window=0, period=0, true]\r\nEventLogger: timeline [eventTime=664.90, mediaPos=0.00, window=0, period=0, periodCount=5, windowCount=5, reason=DYNAMIC\r\nEventLogger:   period [7.39]\r\nEventLogger:   period [14.78]\r\nEventLogger:   period [29.57]\r\nEventLogger:   ...\r\nEventLogger:   window [7.39, true, false]\r\nchatty: uid=10143(com.howto.demo) identical 1 line\r\nEventLogger:   window [7.39, true, false]\r\nEventLogger:   ...\r\nEventLogger: ]\r\nEventLogger: decoderEnabled [eventTime=664.93, mediaPos=0.00, window=0, period=0, video]\r\nEventLogger: decoderEnabled [eventTime=664.93, mediaPos=0.00, window=0, period=0, audio]\r\nEventLogger: tracks [eventTime=664.93, mediaPos=0.00, window=0, period=0, []]\r\nEventLogger: mediaPeriodReadingStarted [eventTime=664.93, mediaPos=0.00, window=0, period=0]\r\nEventLogger: downstreamFormat [eventTime=664.94, mediaPos=0.00, window=0, period=0, id=1, mimeType=video/avc, res=1280x720, fps=25.0]\r\nEventLogger: decoderInputFormat [eventTime=664.94, mediaPos=0.00, window=0, period=0, video, id=1, mimeType=video/avc, res=1280x720, fps=25.0]\r\nEventLogger: downstreamFormat [eventTime=664.94, mediaPos=0.00, window=0, period=0, id=2, mimeType=audio/mp4a-latm, channels=6, sample_rate=48000, language=und]\r\nEventLogger: decoderInputFormat [eventTime=664.94, mediaPos=0.00, window=0, period=0, audio, id=2, mimeType=audio/mp4a-latm, channels=6, sample_rate=48000, language=und]\r\nEventLogger: mediaPeriodCreated [eventTime=664.96, mediaPos=0.00, window=1, period=1]\r\nEventLogger: videoSize [eventTime=665.05, mediaPos=0.00, window=0, period=0, 1280, 720]\r\nEventLogger: renderedFirstFrame [eventTime=665.06, mediaPos=0.00, window=0, period=0, Surface(name=null)/@0x56c8793]\r\nEventLogger: state [eventTime=665.06, mediaPos=0.00, window=0, period=0, false, READY]\r\nonPlayerStateChanged: STATE_READY updateProgressBar called\r\nEventLogger: loading [eventTime=665.10, mediaPos=0.00, window=0, period=0, false]\r\nOnTouchEvent: MotionEvent.ACTION_UP on draw will call\r\nonStopTrackingTouch: Called\r\nVideoSeekBar: currentVideoPosition 4\r\nVideoSeekBar: progress 36666.79\r\nEventLogger: seekStarted [eventTime=665.32, mediaPos=0.00, window=0, period=0]\r\nEventLogger: positionDiscontinuity [eventTime=665.34, mediaPos=36.67, window=4, SEEK]\r\nEventLogger: state [eventTime=665.34, mediaPos=36.67, window=4, true, READY]\r\nEventLogger: isPlaying [eventTime=665.34, mediaPos=36.67, window=4, true]\r\nonPlayerStateChanged: STATE_READY updateProgressBar called\r\nonBindViewHolder: arrVideo[holder.adapterPosition].isSelected 4 true\r\nEventLogger: mediaPeriodReleased [eventTime=665.36, mediaPos=36.67, window=0, period=0]\r\nEventLogger: mediaPeriodReleased [eventTime=665.36, mediaPos=36.67, window=1, period=1]\r\nEventLogger: decoderDisabled [eventTime=665.36, mediaPos=36.67, window=0, period=0, video]\r\nEventLogger: decoderDisabled [eventTime=665.36, mediaPos=36.67, window=0, period=0, audio]\r\nEventLogger: tracks [eventTime=665.36, mediaPos=36.67, window=4, []]\r\nEventLogger: state [eventTime=665.36, mediaPos=36.67, window=4, true, BUFFERING]\r\nEventLogger: isPlaying [eventTime=665.36, mediaPos=36.67, window=4, false]\r\nEventLogger: seekProcessed [eventTime=665.36, mediaPos=36.67, window=4]\r\nEventLogger: mediaPeriodCreated [eventTime=665.36, mediaPos=36.67, window=4, period=4]\r\nEventLogger: loading [eventTime=665.36, mediaPos=36.67, window=4, period=4, true]\r\nEventLogger: timeline [eventTime=665.36, mediaPos=36.67, window=4, period=4, periodCount=5, windowCount=5, reason=DYNAMIC\r\nEventLogger:   period [7.39]\r\nEventLogger:   period [14.78]\r\nEventLogger:   period [29.57]\r\nEventLogger:   ...\r\nEventLogger:   window [7.39, true, false]\r\nchatty: uid=10143(com.howto.demo) identical 1 line\r\nEventLogger:   window [7.39, true, false]\r\nEventLogger:   ...\r\nEventLogger: ]\r\nMediaCodecInfo: AssumedSupport [sizeAndRate.rotated, 640x1136x55.964298248291016] [OMX.google.h264.decoder, video/avc] [generic_x86, Android SDK built for x86, Google, 29]\r\nMediaCodecInfo: AssumedSupport [sizeAndRate.rotated, 640x1136x55.964298248291016] [OMX.google.h264.decoder, video/avc] [generic_x86, Android SDK built for x86, Google, 29]\r\nEventLogger: decoderEnabled [eventTime=665.40, mediaPos=36.67, window=4, period=4, video]\r\nEventLogger: decoderEnabled [eventTime=665.40, mediaPos=36.67, window=4, period=4, audio]\r\nEventLogger: tracks [eventTime=665.40, mediaPos=36.67, window=4, period=4, []]\r\nEventLogger: loading [eventTime=665.41, mediaPos=36.67, window=4, period=4, false]\r\nEventLogger: mediaPeriodReadingStarted [eventTime=665.41, mediaPos=36.67, window=4, period=4]\r\nEventLogger: state [eventTime=665.42, mediaPos=36.67, window=4, period=4, true, ENDED]\r\nonPlayerStateChanged: STATE_ENDED\r\nEventLogger: seekStarted [eventTime=665.42, mediaPos=36.67, window=4, period=4]\r\nEventLogger: positionDiscontinuity [eventTime=665.42, mediaPos=0.00, window=0, SEEK]\r\nonBindViewHolder: arrVideo[holder.adapterPosition].isSelected 4 false\r\nEventLogger: mediaPeriodReleased [eventTime=665.44, mediaPos=0.00, window=4, period=4]\r\nEventLogger: decoderDisabled [eventTime=665.44, mediaPos=0.00, window=4, period=4, video]\r\nEventLogger: decoderDisabled [eventTime=665.44, mediaPos=0.00, window=4, period=4, audio]\r\nEventLogger: positionDiscontinuity [eventTime=665.44, mediaPos=0.00, window=0, SEEK_ADJUSTMENT]\r\nonPlayerStateChanged: TIMELINE_CHANGE_REASON_DYNAMIC\r\nEventLogger: tracks [eventTime=665.44, mediaPos=0.00, window=0, []]\r\nEventLogger: state [eventTime=665.44, mediaPos=0.00, window=0, true, BUFFERING]\r\nEventLogger: seekProcessed [eventTime=665.44, mediaPos=0.00, window=0]\r\nEventLogger: mediaPeriodCreated [eventTime=665.44, mediaPos=0.00, window=0, period=0]\r\nEventLogger: loading [eventTime=665.44, mediaPos=0.00, window=0, period=0, true]\r\nEventLogger: timeline [eventTime=665.44, mediaPos=0.00, window=0, period=0, periodCount=5, windowCount=5, reason=DYNAMIC\r\nEventLogger:   period [7.39]\r\nEventLogger:   period [14.78]\r\nEventLogger:   period [29.57]\r\nEventLogger:   ...\r\nEventLogger:   window [7.39, true, false]\r\nchatty: uid=10143(com.howto.demo) identical 1 line\r\nEventLogger:   window [7.39, true, false]\r\nEventLogger:   ...\r\nEventLogger: ]\r\nEventLogger: decoderEnabled [eventTime=665.47, mediaPos=0.00, window=0, period=0, video]\r\nEventLogger: decoderEnabled [eventTime=665.47, mediaPos=0.00, window=0, period=0, audio]\r\nEventLogger: tracks [eventTime=665.47, mediaPos=0.00, window=0, period=0, []]\r\nEventLogger: mediaPeriodReadingStarted [eventTime=665.47, mediaPos=0.00, window=0, period=0]\r\nEventLogger: downstreamFormat [eventTime=665.47, mediaPos=0.00, window=0, period=0, id=1, mimeType=video/avc, res=1280x720, fps=25.0]\r\nEventLogger: decoderInputFormat [eventTime=665.47, mediaPos=0.00, window=0, period=0, video, id=1, mimeType=video/avc, res=1280x720, fps=25.0]\r\nEventLogger: downstreamFormat [eventTime=665.47, mediaPos=0.00, window=0, period=0, id=2, mimeType=audio/mp4a-latm, channels=6, sample_rate=48000, language=und]\r\nEventLogger: decoderInputFormat [eventTime=665.47, mediaPos=0.00, window=0, period=0, audio, id=2, mimeType=audio/mp4a-latm, channels=6, sample_rate=48000, language=und]\r\nEventLogger: mediaPeriodCreated [eventTime=665.48, mediaPos=0.00, window=1, period=1]\r\nEventLogger: videoSize [eventTime=665.53, mediaPos=0.00, window=0, period=0, 1280, 720]\r\nEventLogger: renderedFirstFrame [eventTime=665.55, mediaPos=0.00, window=0, period=0, Surface(name=null)/@0x56c8793]\r\nEventLogger: state [eventTime=665.55, mediaPos=0.00, window=0, period=0, true, READY]\r\nonPlayerStateChanged: STATE_READY updateProgressBar called\r\nEventLogger: isPlaying [eventTime=665.55, mediaPos=0.00, window=0, period=0, true]\r\n```\r\nThank you."
      },
      {
        "user": "marcbaechinger",
        "created_at": "2020-05-21T12:01:31Z",
        "body": "I think it happens when the player has finished playing and transition to `STATE_ENDED`. You log something to the console so you probably have more event listeners than you showed in the code snippet above. \r\n\r\nFirstly, I'd recommend again to remove the case `TIMELINE_CHANGE_REASON_DYNAMIC` from `onPositionDiscontinuity`. That might be confusing. Then I'd look what the code does in `onPlayerStateChanged()` when the state transitions to `STATE_ENDED` (see log snippet below). \r\n\r\nThe log says that there is a seek right when the player falls into `STATE_ENDED`. After that seek, the player is on position 0 in window 0. Can you look for the source of this seek?\r\n\r\n```\r\nEventLogger: state [eventTime=664.88, mediaPos=36.67, window=4, period=4, false, ENDED]\r\nonPlayerStateChanged: STATE_ENDED\r\nEventLogger: seekStarted [eventTime=664.88, mediaPos=36.67, window=4, period=4]\r\nEventLogger: positionDiscontinuity [eventTime=664.88, mediaPos=0.00, window=0, SEEK]\r\nonBindViewHolder: arrVideo[holder.adapterPosition].isSelected 4 false\r\nEventLogger: mediaPeriodReleased [eventTime=664.90, mediaPos=0.00, window=4, period=4]\r\nEventLogger: decoderDisabled [eventTime=664.90, mediaPos=0.00, window=4, period=4, video]\r\nEventLogger: decoderDisabled [eventTime=664.90, mediaPos=0.00, window=4, period=4, audio]\r\nEventLogger: positionDiscontinuity [eventTime=664.90, mediaPos=0.00, window=0, SEEK_ADJUSTMENT]\r\nonPlayerStateChanged: TIMELINE_CHANGE_REASON_DYNAMIC\r\n```"
      },
      {
        "user": "ghost",
        "created_at": "2020-05-21T14:12:57Z",
        "body": "Yes, I have checked seek position and changed it.\r\nNow it is working.\r\nThank you so much for your help and support."
      },
      {
        "user": "marcbaechinger",
        "created_at": "2020-05-21T14:32:10Z",
        "body": "Cool. Thanks for letting me know. I close the issue. Please re-open if required."
      }
    ]
  },
  {
    "number": 7362,
    "title": "XmlPullParserException reading DASH manifest from Amazon S3",
    "created_at": "2020-05-12T11:19:35Z",
    "closed_at": "2020-06-23T15:22:37Z",
    "labels": [
      "question",
      "need more info",
      "stale"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7362",
    "body": "```\r\nExoPlayerImplInternal: Source error.\r\n    com.google.android.exoplayer2.ParserException: org.xmlpull.v1.XmlPullParserException: Unexpected token (position:TEXT ������ ftypmp42����\u0002��...@1:894 in java.io.InputStreamReader@d28535b) \r\n        at com.google.android.exoplayer2.source.dash.manifest.DashManifestParser.parse(DashManifestParser.java:105)\r\n        at com.google.android.exoplayer2.source.dash.manifest.DashManifestParser.parse(DashManifestParser.java:58)\r\n        at com.google.android.exoplayer2.upstream.ParsingLoadable.load(ParsingLoadable.java:158)\r\n        at com.google.android.exoplayer2.upstream.Loader$LoadTask.run(Loader.java:381)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)\r\n        at java.lang.Thread.run(Thread.java:919)\r\n     Caused by: org.xmlpull.v1.XmlPullParserException: Unexpected token (position:TEXT ������ ftypmp42����\u0002��...@1:894 in java.io.InputStreamReader@d28535b) \r\n        at com.android.org.kxml2.io.KXmlParser.next(KXmlParser.java:447)\r\n        at com.android.org.kxml2.io.KXmlParser.next(KXmlParser.java:321)\r\n        at com.google.android.exoplayer2.source.dash.manifest.DashManifestParser.parse(DashManifestParser.java:98)\r\n        at com.google.android.exoplayer2.source.dash.manifest.DashManifestParser.parse(DashManifestParser.java:58) \r\n        at com.google.android.exoplayer2.upstream.ParsingLoadable.load(ParsingLoadable.java:158) \r\n        at com.google.android.exoplayer2.upstream.Loader$LoadTask.run(Loader.java:381) \r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167) \r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641) \r\n        at java.lang.Thread.run(Thread.java:919) \r\n```",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7362/comments",
    "author": "rishabhshah09",
    "comments": [
      {
        "user": "krocard",
        "created_at": "2020-05-13T19:39:05Z",
        "body": "Seems like you are hitting an invalid token in the XML stream. I'm not sure we can help you on what exactly is wrong in your media without access to the dash manifest itself. Maybe you could attach it to this issue?\r\n\r\n@ojw28 is our DASH expert, and might be able to help further."
      },
      {
        "user": "ojw28",
        "created_at": "2020-05-13T19:42:23Z",
        "body": "It looks like the DASH manifest is malformed. You'll have to provide it to us if you'd like us to check, however. Marking as \"needs more info\" for this reason."
      },
      {
        "user": "krocard",
        "created_at": "2020-05-14T10:00:16Z",
        "body": "> Unexpected token (position:TEXT ������ ftypmp42�������...@1:894 in java.io.InputStreamReader@d28535b) \r\n\r\nActually, `������ ftypmp42�������` corresponds to the first bytes of a h.264 encoded MP4.\r\n\r\nIt seems like ExoPlayer it trying to play an  mp4 (a binary file) as a dash XML manifest.\r\n\r\nHow did you configure Exoplayer MediaSource?"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2020-06-03T01:08:40Z",
        "body": "<!-- event: mark-stale -->\nHey @rishabhshah09. We need more information to resolve this issue but there hasn't been an update in 14 weekdays. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      }
    ]
  },
  {
    "number": 7359,
    "title": "What should I do if an error occurs during the playlist? ",
    "created_at": "2020-05-12T02:51:27Z",
    "closed_at": "2020-05-15T03:14:50Z",
    "labels": [
      "question",
      "need more info"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7359",
    "body": "What should I do if an error occurs during the playlist? When I am in the playlist, the playback address is empty, which causes the playback to fail. Calling next is invalid and cannot be played again.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7359/comments",
    "author": "HanGao1",
    "comments": [
      {
        "user": "krocard",
        "created_at": "2020-05-14T22:35:17Z",
        "body": "The expected behaviour is for ExoPlayer to recover (aka try again) from any player error when going to the next item on the playlist or playing again the current item. Thus I'm not sure to understand the issue you are facing.\r\n\r\nCould you post the stacktrace of the error you encountering during playback? That would help us understand what is the problem here.\r\n\r\nPlease also post a step by step procedure to trigger the issue. Thanks"
      }
    ]
  },
  {
    "number": 7349,
    "title": " java.lang.AbstractMethodError: abstract method \"void com.google.android.exoplayer2.Player$EventListener",
    "created_at": "2020-05-09T03:46:32Z",
    "closed_at": "2020-05-11T15:05:30Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7349",
    "body": "When i build a library with no proguard in a form of aar File and use it, then run the apk, it comes to a problem:\r\n\r\n2020-05-09 11:32:10.026 26677-26677/com.umeye.demo E/AndroidRuntime: FATAL EXCEPTION: main\r\n    Process: com.umeye.demo, PID: 26677\r\n    java.lang.AbstractMethodError: abstract method \"void com.google.android.exoplayer2.Player$EventListener.onTimelineChanged(com.google.android.exoplayer2.Timeline, int)\"\r\n        at com.google.android.exoplayer2.ExoPlayerImpl$PlaybackInfoUpdate.lambda$run$0$ExoPlayerImpl$PlaybackInfoUpdate(ExoPlayerImpl.java:804)\r\n        at com.google.android.exoplayer2.-$$Lambda$ExoPlayerImpl$PlaybackInfoUpdate$N_S5kRfhaRTAkH28P5luFgKnFjQ.invokeListener(Unknown Source:2)\r\n        at com.google.android.exoplayer2.BasePlayer$ListenerHolder.invoke(BasePlayer.java:182)\r\n        at com.google.android.exoplayer2.ExoPlayerImpl.invokeAll(ExoPlayerImpl.java:845)\r\n        at com.google.android.exoplayer2.ExoPlayerImpl.access$000(ExoPlayerImpl.java:43)\r\n        at com.google.android.exoplayer2.ExoPlayerImpl$PlaybackInfoUpdate.run(ExoPlayerImpl.java:802)\r\n        at com.google.android.exoplayer2.ExoPlayerImpl.notifyListeners(ExoPlayerImpl.java:736)\r\n        at com.google.android.exoplayer2.ExoPlayerImpl.updatePlaybackInfo(ExoPlayerImpl.java:710)\r\n        at com.google.android.exoplayer2.ExoPlayerImpl.handlePlaybackInfo(ExoPlayerImpl.java:652)\r\n        at com.google.android.exoplayer2.ExoPlayerImpl.handleEvent(ExoPlayerImpl.java:595)\r\n        at com.google.android.exoplayer2.ExoPlayerImpl$1.handleMessage(ExoPlayerImpl.java:127)\r\n        at android.os.Handler.dispatchMessage(Handler.java:106)\r\n        at android.os.Looper.loop(Looper.java:201)\r\n        at android.app.ActivityThread.main(ActivityThread.java:6810)\r\n        at java.lang.reflect.Method.invoke(Native Method)\r\n        at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:547)\r\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:873)\r\n\r\nI go crazy about that. Could you help me with the problem?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7349/comments",
    "author": "951AB159BA",
    "comments": [
      {
        "user": "951AB159BA",
        "created_at": "2020-05-09T04:28:34Z",
        "body": "Oh, I just solved it as i saw your reply to a post.\r\n android.enableDexingArtifactTransform=false"
      },
      {
        "user": "krocard",
        "created_at": "2020-05-11T15:05:30Z",
        "body": "Thanks for reporting how you fixed your issue."
      }
    ]
  },
  {
    "number": 7343,
    "title": "vp8 decode error",
    "created_at": "2020-05-07T09:36:56Z",
    "closed_at": "2020-05-07T10:02:57Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7343",
    "body": "Hello, may I ask if I added the adaptation of vp8 in the vp9 extension, added vp8 decoding in generate_libvpx_android_configs.sh, the compilation shows that it passed, and the vp8 module has been integrated, but when running, the vp8 decoding error Decode error: Bitstream not supported by this decoder\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7343/comments",
    "author": "kuailedeadai",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2020-05-07T10:02:57Z",
        "body": "It's difficult to know the cause based on the information you've provided, but one thing to note is that in `vpx_jni.cc` in the VP9 extension you will need to initialize the right codec in the call to `vpx_codec_dec_init` (you can use `get_vpx_decoder_by_name` to get the right codec interface to pass into that method). Caveat: last time I did this was in 2016 so the APIs may have changed!\r\n\r\nAs this is not something we support at the moment, and it seems unlikely we would add support given it hasn't been requested and the codec has been superseded, I will close this for now."
      },
      {
        "user": "kuailedeadai",
        "created_at": "2020-05-07T11:45:13Z",
        "body": "Thanks, your suggestion has solved my problem"
      }
    ]
  },
  {
    "number": 7311,
    "title": "Exoplayer Download & Play Simultaneously",
    "created_at": "2020-04-29T13:00:57Z",
    "closed_at": "2020-05-05T14:57:00Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7311",
    "body": "### [REQUIRED] Searched documentation and issues\r\nI have looked into Stackoverflow, ExoPlayer documentation and this repository for any similar issues but I didn't find any results. \r\n\r\n### [REQUIRED] Question\r\nI would like ExoPlayer to download a few, not necessarily in order, DASH segments through HTTP and read the rest locally from Cache folder. The goal here is to enable two people (Alice & Bob) to watch a video stream collaboratively.\r\n\r\nFor example, Alice downloads the odd-numbered DASH segments and shares it locally with Bob who is downloading the even-numbered segments and sharing it locally too with Alice. (If Alice or Bob fails to DL a segment on time, they download it themselves through HTTP which acts as the fallback).\r\n\r\nWhat parts of exoplayer should I be looking at and modify? I was thinking of defining a DownloadManager to download\\maintain a cache folder for each Alice and Bob (on one thread). The video stream will use the cache folder as the main media source and fall back to HTTP if needed (on another thread). The logic is that, before ExoPlayer decides to download a segment it checks the cache folder first. Please advise! Thank you.\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7311/comments",
    "author": "asaadco",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2020-04-30T12:20:12Z",
        "body": "Are Alice and Bob each having a dedicated device, app, player or is everything in a single player instance? Are they watching simultaneously or sequentially?\r\n\r\nIf it's only about a single instance of ExoPlayer, then you can just go the route af a single Cache pointing to the same cache directory. That should work. I don't think there is a difference between Alice/Bob and Bob/Bob in this case."
      },
      {
        "user": "asaadco",
        "created_at": "2020-04-30T13:00:13Z",
        "body": "Thank you for the quick response, Marc. :)\r\n\r\nBefore the start of the stream, Alice and Bob will know what segments (game plan) they have to download through HTTP and what segments they will have to wait to receive through p2p. They watch the video simultaneously (this can be relaxed though). Alice could be downloading the first 20 segments while Bob downloads only the last 10 segments of the video. \r\n\r\nEach have their own dedicated device, app, player and bandwidth. The only communication medium between Alice and Bob is WiFi-Direct. Once Alice downloads a segment through HTTP, she will forward it to Bob immediately through WiFi-Direct and vice versa.\r\n\r\n"
      },
      {
        "user": "marcbaechinger",
        "created_at": "2020-04-30T13:21:16Z",
        "body": "It sounds what you would need is something like a distributed Cache, or a Cache which syncs between devices. This sounds like a complicated thing to do in general. Plus, with phones you need to make sure that they have a client/server or p2p infrastructure of some kind to share that data and coordinate this with the original upstream connection to the server. All of these things are not supported by ExoPlayer out of the box. It needs you significant effort to get there I think.\r\n\r\nFrom the point of view of the system architecture that you want to establish between a remote server with the media and two phones, I'd actually recommend to solve this with an HTTP proxy which is between the phones and the server. So instead of getting the media directly from the remote server, the requests go through a HTTP proxy. The HTTP proxy would need to support range requests in some ways I think, but that's probably doable as proxies (i.e. Apache with a certain module) are quite sophisticated.\r\n\r\nIf you want to code this from scratch on the client side in the app that's probably a difficult endeavour. It would need you to implementat of a `Cache` which can sync between devices. \r\n"
      },
      {
        "user": "asaadco",
        "created_at": "2020-04-30T14:12:02Z",
        "body": "That makes sense. Would it possible to modify ExoPlayer behavior to skip downloading certain segments and persist when there are missing segments (Like what happens in live streams)? I have looked into solutions such as CDNBye which uses WebRTC as a medium and an HTTP proxy like you said but I would like to experiment with implementing this on the client-side first though. What ExoPlayer modules should I be looking at to influence the order of segments download? I tried to look into DashMediaSource and DashDownloader but I don't think they have what I want.\r\n\r\nAgain, thank you so much!"
      },
      {
        "user": "asaadco",
        "created_at": "2020-05-05T14:57:00Z",
        "body": "I have managed to achieve this functionality by intercepting and modifying each dataspec URI in DefaultDataFactory class open method whenever there's a matching segment in local storage.\r\n\r\nClosing this issue now! Thanks Marc."
      }
    ]
  },
  {
    "number": 7307,
    "title": "Media volume buttons won't work on ExoPlayer after exoPlayer.setVolume",
    "created_at": "2020-04-28T17:18:09Z",
    "closed_at": "2020-05-28T01:08:18Z",
    "labels": [
      "question",
      "need more info",
      "stale",
      "closed-by-bot"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7307",
    "body": "### Searched documentation and issues\r\nI've looked on stackoverflow, ExoPlayer docs, Android developers responding to media buttons.\r\n\r\n### Question\r\nI am developing an app that sets the exoPlayer's volume to 0 if the device is on silent or vibrate. \r\nIf the user interacts with the volume buttons, then I want to the exoPlayer's volume to be set to the AudioManager volume.\r\nIssue: After setting the volume to 0, the device's volume buttons have no effect on the exoPlayer's volume level.\r\nPrior to setting any volume, the exoPlayer responded to the device's volume buttons.\r\n\r\nHow to I get the exoPlayer to listen to the device's buttons again?\r\n\r\n## Version Info\r\nExoPlayer 2.11.3\r\nPixel 3 API level 29",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7307/comments",
    "author": "arangob",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2020-04-30T12:59:28Z",
        "body": "I'm wondering why you need to set the ExoPlayer volume to 0 in case 'the device is on silent or vibrate'. I think this should be handled by the OS, so that you do not have to take care yourself.\r\n\r\nIs there a specific reason this does not work for you?\r\n\r\n-----\r\nBesides the above the following may explain the issue you are seeing:\r\n\r\nThere are two volumes which are relevant: ExoPlayer volume and OS volume. \r\n\r\nThe hardware buttons do change the volume of audio streams on the OS level. Besides this, ExoPlayer itself can change the volume of the audio stream that is delivered to the OS by ExoPlayer.\r\n\r\nSo the OS volume changes what is coming from ExoPlayer. If we assume a value between 0 and 1 for each volumes, the actual output is the multiplication of these two:\r\n\r\nExoPlayerVolume x OSVolume = UserExperiencedVolume\r\n\r\nSo if you set the ExoPalyerVolume to 0 (zero) the result will always be 0. \r\n\r\nThis would explain the behaviour you are seeing, that changing the OS volume with the hardware buttons has not effect on the experienced volume, when ExoPlayerVolume is 0.\r\n\r\nTo solve the problem you are describing you need to set the ExoPlayerVolume back to 1 when the user is operating the volume buttons.\r\n\r\n--------\r\n\r\nAgain, please also check whether you can solve this without changing the ExoPlayer volume, but just relying on the OS feature. This would make it easier for you as it works out of the box and the user is not surprised of hearing audio even if the device is on silence."
      },
      {
        "user": "google-oss-bot",
        "created_at": "2020-05-20T01:07:50Z",
        "body": "<!-- event: mark-stale -->\nHey @arangob. We need more information to resolve this issue but there hasn't been an update in 14 weekdays. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2020-05-28T01:08:17Z",
        "body": "<!-- event: close-stale -->\nSince there haven't been any recent updates here, I am going to close this issue.\n\n@arangob if you're still experiencing this problem and want to continue the discussion just leave a comment here and we are happy to re-open this."
      }
    ]
  },
  {
    "number": 7305,
    "title": "Change Mediasource Before Play Exoplayer in MergingMediaSource",
    "created_at": "2020-04-28T12:43:19Z",
    "closed_at": "2020-05-28T01:08:20Z",
    "labels": [
      "question",
      "need more info",
      "stale",
      "closed-by-bot"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7305",
    "body": "Hi\r\nI play simultaneously one video with multi sound in exoplayer and i have multi mediasources.\r\nat first time all things is ok but in my app user can pause exoplayer and change audios(Add or Remove) and play(Resume) exoplayer.\r\nMy code for first preparing exoplayer:\r\n```\r\nrenderersFactory = new DefaultRenderersFactory(this) {\r\n            @Override\r\n            protected void buildAudioRenderers(Context context, int extensionRendererMode,\r\n                                               MediaCodecSelector mediaCodecSelector,\r\n                                               @Nullable DrmSessionManager<FrameworkMediaCrypto> drmSessionManager,\r\n                                               boolean playClearSamplesWithoutKeys, boolean enableDecoderFallback,\r\n                                               AudioProcessor[] audioProcessors, Handler eventHandler,\r\n                                               AudioRendererEventListener eventListener, ArrayList<Renderer> out) {\r\n                super.buildAudioRenderers(context, extensionRendererMode, mediaCodecSelector,\r\n                        drmSessionManager, playClearSamplesWithoutKeys, enableDecoderFallback,\r\n                        audioProcessors, eventHandler, eventListener, out);\r\n                switch (mediaSource_array.size()){\r\n                    case 1:\r\n\r\n                        break;\r\n\r\n                    case 2:\r\n                        out.add(new AudioRendererWithoutClock(context, mediaCodecSelector));\r\n                        break;\r\n\r\n                    case 3:\r\n                        out.add(new AudioRendererWithoutClock(context, mediaCodecSelector));\r\n                        out.add(new AudioRendererWithoutClock(context, mediaCodecSelector));\r\n                        break;\r\n\r\n                    case 4:\r\n                        out.add(new AudioRendererWithoutClock(context, mediaCodecSelector));\r\n                        out.add(new AudioRendererWithoutClock(context, mediaCodecSelector));\r\n                        out.add(new AudioRendererWithoutClock(context, mediaCodecSelector));\r\n                        break;\r\n\r\n                    case 5:\r\n                        out.add(new AudioRendererWithoutClock(context, mediaCodecSelector));\r\n                        out.add(new AudioRendererWithoutClock(context, mediaCodecSelector));\r\n                        out.add(new AudioRendererWithoutClock(context, mediaCodecSelector));\r\n                        out.add(new AudioRendererWithoutClock(context, mediaCodecSelector));\r\n                        break;\r\n\r\n                    case 6:\r\n                        out.add(new AudioRendererWithoutClock(context, mediaCodecSelector));\r\n                        out.add(new AudioRendererWithoutClock(context, mediaCodecSelector));\r\n                        out.add(new AudioRendererWithoutClock(context, mediaCodecSelector));\r\n                        out.add(new AudioRendererWithoutClock(context, mediaCodecSelector));\r\n                        out.add(new AudioRendererWithoutClock(context, mediaCodecSelector));\r\n                        break;\r\n\r\n                    case 7:\r\n                        out.add(new AudioRendererWithoutClock(context, mediaCodecSelector));\r\n                        out.add(new AudioRendererWithoutClock(context, mediaCodecSelector));\r\n                        out.add(new AudioRendererWithoutClock(context, mediaCodecSelector));\r\n                        out.add(new AudioRendererWithoutClock(context, mediaCodecSelector));\r\n                        out.add(new AudioRendererWithoutClock(context, mediaCodecSelector));\r\n                        out.add(new AudioRendererWithoutClock(context, mediaCodecSelector));\r\n                        break;\r\n\r\n                }\r\n\r\n\r\n            }\r\n        };\r\n\r\n MediaSource[] mediaSources = new MediaSource[mediaSource_array.size()];\r\n        for (int i=0; i<mediaSource_array.size(); i++){\r\n            mediaSources[i] = buildMediaSource(mediaSource_array.get(i));\r\n          \r\n        }\r\n\r\n        mediaSource = mediaSources.length == 1 ? mediaSources[0] : new MergingMediaSource(mediaSources);\r\n\r\n exoPlayer = new SimpleExoPlayer.Builder(this, renderersFactory)\r\n                .setTrackSelector(trackSelector)\r\n                .build();\r\n\r\n        playerView.setPlayer(exoPlayer);\r\n\r\n        exoPlayer.prepare(mediaSource);\r\n\r\n```\r\n\r\n\r\nAnd when i want play exoplayer use this code:\r\n```\r\nexoPlayer.release();\r\n        renderersFactory = null;\r\n        mediaSource = null;\r\n\r\nrenderersFactory = new DefaultRenderersFactory(this) {\r\n            @Override\r\n            protected void buildAudioRenderers(Context context, int extensionRendererMode,\r\n                                               MediaCodecSelector mediaCodecSelector,\r\n                                               @Nullable DrmSessionManager<FrameworkMediaCrypto> drmSessionManager,\r\n                                               boolean playClearSamplesWithoutKeys, boolean enableDecoderFallback,\r\n                                               AudioProcessor[] audioProcessors, Handler eventHandler,\r\n                                               AudioRendererEventListener eventListener, ArrayList<Renderer> out) {\r\n                super.buildAudioRenderers(context, extensionRendererMode, mediaCodecSelector,\r\n                        drmSessionManager, playClearSamplesWithoutKeys, enableDecoderFallback,\r\n                        audioProcessors, eventHandler, eventListener, out);\r\n                switch (mediaSource_array.size()){\r\n                    case 1:\r\n\r\n                        break;\r\n\r\n                    case 2:\r\n                        out.add(new AudioRendererWithoutClock(context, mediaCodecSelector));\r\n                        break;\r\n\r\n                    case 3:\r\n                        out.add(new AudioRendererWithoutClock(context, mediaCodecSelector));\r\n                        out.add(new AudioRendererWithoutClock(context, mediaCodecSelector));\r\n                        break;\r\n\r\n                    case 4:\r\n                        out.add(new AudioRendererWithoutClock(context, mediaCodecSelector));\r\n                        out.add(new AudioRendererWithoutClock(context, mediaCodecSelector));\r\n                        out.add(new AudioRendererWithoutClock(context, mediaCodecSelector));\r\n                        break;\r\n\r\n                    case 5:\r\n                        out.add(new AudioRendererWithoutClock(context, mediaCodecSelector));\r\n                        out.add(new AudioRendererWithoutClock(context, mediaCodecSelector));\r\n                        out.add(new AudioRendererWithoutClock(context, mediaCodecSelector));\r\n                        out.add(new AudioRendererWithoutClock(context, mediaCodecSelector));\r\n                        break;\r\n\r\n                    case 6:\r\n                        out.add(new AudioRendererWithoutClock(context, mediaCodecSelector));\r\n                        out.add(new AudioRendererWithoutClock(context, mediaCodecSelector));\r\n                        out.add(new AudioRendererWithoutClock(context, mediaCodecSelector));\r\n                        out.add(new AudioRendererWithoutClock(context, mediaCodecSelector));\r\n                        out.add(new AudioRendererWithoutClock(context, mediaCodecSelector));\r\n                        break;\r\n\r\n                    case 7:\r\n                        out.add(new AudioRendererWithoutClock(context, mediaCodecSelector));\r\n                        out.add(new AudioRendererWithoutClock(context, mediaCodecSelector));\r\n                        out.add(new AudioRendererWithoutClock(context, mediaCodecSelector));\r\n                        out.add(new AudioRendererWithoutClock(context, mediaCodecSelector));\r\n                        out.add(new AudioRendererWithoutClock(context, mediaCodecSelector));\r\n                        out.add(new AudioRendererWithoutClock(context, mediaCodecSelector));\r\n                        break;\r\n\r\n                }\r\n\r\n\r\n            }\r\n        };\r\n\r\n MediaSource[] mediaSources = new MediaSource[mediaSource_array.size()];\r\n        for (int i=0; i<mediaSource_array.size(); i++){\r\n            mediaSources[i] = buildMediaSource(mediaSource_array.get(i));\r\n           \r\n        }\r\n\r\n        mediaSource = mediaSources.length == 1 ? mediaSources[0] : new MergingMediaSource(mediaSources);\r\n\r\n exoPlayer = new SimpleExoPlayer.Builder(this, renderersFactory)\r\n                .setTrackSelector(trackSelector)\r\n                .build();\r\n\r\n        playerView.setPlayer(exoPlayer);\r\n\r\n        exoPlayer.prepare(mediaSource);\r\n exoPlayer.setPlayWhenReady(true);\r\n\r\n```\r\n\r\nMy codes work well but before playing video show black screen and then play video and i think this ways are wrong.\r\nPlease help me to solve this problem.\r\nThanks",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7305/comments",
    "author": "mrj976",
    "comments": [
      {
        "user": "mrj976",
        "created_at": "2020-04-29T10:13:13Z",
        "body": "Hi @tonihei \r\nCan you help me?"
      },
      {
        "user": "marcbaechinger",
        "created_at": "2020-04-30T12:10:37Z",
        "body": "After passing an array of media sources to the constructor of the `MergingMediaSource`, you can not add audio tracks without creating a new `MergingMediaSource`. You could disable audio tracks which are already part of the 'MergingMediaSource' I believe.\r\n\r\nI'm not sure whether I understand your use case properly, but it seems to me, you could initially add all audio sources and disable all of them except one. Then if the user adds an audio track, you actually just enable them. Removing would then mean disabling these tracks.\r\n\r\nAs initially mentioned, if you want to change the number of media sources in a `MergingMediaSource`, you have to recreate and prepare this merged source."
      },
      {
        "user": "google-oss-bot",
        "created_at": "2020-05-20T01:07:51Z",
        "body": "<!-- event: mark-stale -->\nHey @mrj976. We need more information to resolve this issue but there hasn't been an update in 14 weekdays. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2020-05-28T01:08:19Z",
        "body": "<!-- event: close-stale -->\nSince there haven't been any recent updates here, I am going to close this issue.\n\n@mrj976 if you're still experiencing this problem and want to continue the discussion just leave a comment here and we are happy to re-open this."
      }
    ]
  },
  {
    "number": 7298,
    "title": "How to implement a callback after every track is listened in ConcatenatingMediaSource?",
    "created_at": "2020-04-27T11:56:32Z",
    "closed_at": "2020-04-29T13:39:57Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7298",
    "body": "Hello. I've implemented concatenating of tracks with `ConcatenatingMediaSource`. But I need to know with some listener that track is listened.\r\n\r\nFor example, I have **3 tracks** and it needs to implement a callback immediately after the next track was listened to. How can I implement it? \r\n\r\nP.S. There is `onPlayerStateChanged` with `Player.STATE_ENDED` state but it triggers after all tracks were listened.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7298/comments",
    "author": "mzonov",
    "comments": [
      {
        "user": "christosts",
        "created_at": "2020-04-29T13:39:57Z",
        "body": "If you only want to know when an item in the list was played, listen to `onPositionDiscontinuity(int reason)`. If the reason is `DISCONTINUITY_REASON_PERIOD_TRANSITION`, it's a transition from one item to the next.\r\n\r\nNote: This event is also triggered for transitions in a multi-period stream (live streaming), but I assume your items are not live-streams.\r\n\r\nClosing this ticket, feel free to re-open if you need more information."
      }
    ]
  },
  {
    "number": 7293,
    "title": "Test HDCP with ExoPlayer issue \"WVCdm   : Decrypt error result in session sid28 during encrypted block: 179\"",
    "created_at": "2020-04-27T06:46:11Z",
    "closed_at": "2020-04-28T12:06:41Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7293",
    "body": "System version: Android 10\r\nChipset: SDM-450\r\nSink: WFD-dongle (HDCP 1.x).\r\nThe \"HDCP: 1.0 required\" can display DRM video in WFD-dongle, but the \"HDCP: 2.0 required\", \"HDCP: 2.1 required\" and \"HDCP: 2.2 required\" don't display DRM video in WFD-dongle. ",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7293/comments",
    "author": "ThunderSoft123",
    "comments": [
      {
        "user": "ThunderSoft123",
        "created_at": "2020-04-27T06:50:51Z",
        "body": "However, the Sony phone Xperia can display DRM video in WFD-dongle with \"HDCP: 1.0 required\", \"HDCP: 2.0 required\", \"HDCP: 2.1 required\"."
      },
      {
        "user": "christosts",
        "created_at": "2020-04-28T12:06:41Z",
        "body": "Looks like the issue is coming from the device you are playing content and not from ExoPlayer, especially since you mention on the comment above that a Sony  Xperia can display the video (I assume you are using the same HDCP dongle).\r\n\r\nI don't think we provide more information on this."
      }
    ]
  },
  {
    "number": 7276,
    "title": "PlayerNotificationManager event onNotificationCanceled is never called",
    "created_at": "2020-04-21T18:08:56Z",
    "closed_at": "2020-04-22T12:50:16Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7276",
    "body": "### [REQUIRED] Issue description\r\nHi everyone, \r\n\r\nNotification cannot be swiped and onNotificationCanceled is never called.\r\n\r\n### [REQUIRED] Reproduction steps\r\n```\r\n`\r\n@Override\r\npublic void onCreate() {\r\nsuper.onCreate();\r\n\r\nfinal Context context = this;\r\n\r\nplayer = ExoPlayerFactory.newSimpleInstance(context, new DefaultTrackSelector());\r\n\r\n// playlist preparation\r\n\r\n// player.prepare(concatenatedSource, false, false);\r\nplayer.prepare(playlist);\r\nplayer.setPlayWhenReady(true);\r\n\r\nPlayerNotificationManager.MediaDescriptionAdapter notificationAdapter = new PlayerNotificationManager.MediaDescriptionAdapter() {\r\n    // implementation\r\n};\r\n\r\nPlayerNotificationManager.NotificationListener notificationListener = new PlayerNotificationManager.NotificationListener() {\r\n\r\n    @Override\r\n    public void onNotificationCancelled(int notificationId, boolean dismissedByUser) {\r\n        System.out.println(\"onNotificationCancelled dismissedByUser \"+dismissedByUser);\r\n        stopForeground(true);\r\n    }\r\n\r\n    @Override\r\n    public void onNotificationPosted(int notificationId, Notification notification, boolean ongoing) {\r\n        startForeground(notificationId, notification);\r\n    }\r\n};\r\n\r\nIntent dialogIntent = new Intent(this, PlayerActivity.class);\r\ndialogIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\r\n\r\nstartActivity(dialogIntent);\r\nplayerNotificationManager = PlayerNotificationManager.createWithNotificationChannel(\r\n        context, \"channelId\", R.string.player_activity_name, R.string.player_activity_description, 1, notificationAdapter, notificationListener );\r\nplayerNotificationManager.setPlayer(player);\r\n```\r\n`\r\n\r\n### [REQUIRED] Version of ExoPlayer being used\r\ncom.google.android.exoplayer:exoplayer-core:2.10.5\r\n\r\n### [REQUIRED] Device(s) and version(s) of Android being used\r\n    compileSdkVersion 29\r\n    defaultConfig {\r\n        minSdkVersion 16\r\n        targetSdkVersion 29\r\n\r\nMany thanks !!",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7276/comments",
    "author": "ghost",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2020-04-22T12:25:04Z",
        "body": "The notification can only be swiped when not assigned to a foreground service. So it requires you to stop the foreground service, when the notification is not ongoing anymore (that is when the player is paused).\r\n\r\nYou are pretty close to that already with the code you show above.  You need to change `onNotificationPosted()` and check wether the notification is still ongoing. If paused `isOngoing` is false and you should stop the foreground service. Now the notification can be swiped, because it's not tied to a foreground service anymore.\r\n\r\nWhen you receive the cancellation event after swipe, you can totally destroy your service. The user needs to restart in the app UI without notification. That's when you can start the cycle again and start your foreground service again.\r\n\r\nThat could probably look like this:\r\n\r\n```\r\n@Override\r\npublic void onNotificationPosted(\r\n    int notificationId, Notification notification, boolean ongoing) {\r\n  if (ongoing) {\r\n    startForeground(notificationId, notification);\r\n   } else {\r\n     stopForeground(/* removeNotification= */ false);\r\n   }\r\n}\r\n\r\n@Override\r\npublic void onNotificationCancelled(int notificationId, boolean dismissedByUser) {\r\n   stopSelf();\r\n}\r\n``` \r\n\r\nPlease let me know if this help."
      },
      {
        "user": "ghost",
        "created_at": "2020-04-22T12:50:16Z",
        "body": "I understand perfectly I think, it works as expected. Thank you so much!"
      }
    ]
  },
  {
    "number": 7250,
    "title": "LeanbackPlayerAdapter getDuration return",
    "created_at": "2020-04-17T03:14:16Z",
    "closed_at": "2020-05-27T14:09:07Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7250",
    "body": "When i use LeanbackPlayerAdapter in leanback extension, it returns -1 when i call getDuration() after isPrepared() returns true. \r\n`  \r\n@Override\r\n  public boolean isPrepared() {\r\n    return player.getPlaybackState() != Player.STATE_IDLE\r\n        && (surfaceHolderGlueHost == null || hasSurface);\r\n  }\r\n`\r\nI found the playbackState is from STATE_IDLE to STATE_BUFFERING to STATE_READY, when the playbackstate is STATE_BUFFERING, getDuration will return -1 and It is not prepared. ",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7250/comments",
    "author": "yinhaojun",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2020-04-17T11:18:03Z",
        "body": "I think if you want to know whether the media source currently being played is prepared, you can just listen for a change of the playback state instead of using that `isPrepare` method. I agree the said method look not right. \r\n\r\nYou are correct, that If the state transitions to Player.STATE_READY, the source is prepared and the duration should be available.\r\n\r\nSomething like this should work:\r\n\r\n```\r\nplayer.addListener(new Player.EventListener() {\r\n  @Override\r\n  public void onPlayerStateChanged(boolean playWhenReady, int playbackState) {\r\n    if (playbackState == Player.STATE_READY) {\r\n      player.getDuration();\r\n    }\r\n  }\r\n});\r\n```\r\n\r\n"
      },
      {
        "user": "marcbaechinger",
        "created_at": "2020-05-27T14:09:06Z",
        "body": "Closing this due to inactivity. Please re-open if required."
      }
    ]
  },
  {
    "number": 7225,
    "title": "How to play a local Server Socket",
    "created_at": "2020-04-13T04:28:40Z",
    "closed_at": "2020-05-12T01:08:05Z",
    "labels": [
      "question",
      "need more info",
      "stale",
      "closed-by-bot"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7225",
    "body": "Hey,\r\n\r\nI am trying to play a file sitting in a SMB share, I am able to play the file just fine if I user other player such VLC or MX Player by using a server socket with the input stream of the file and then sending the localhost as intent to these apps.\r\nI am trying to play it via Exoplayer as well, which data source should I use? I have failed to play it so far",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7225/comments",
    "author": "guy244",
    "comments": [
      {
        "user": "icbaker",
        "created_at": "2020-04-14T10:28:19Z",
        "body": "ExoPlayer doesn't support accessing SMB files directly.\r\n\r\nIf you can get the SMB share mounted on the phone's file system then you can pass a 'file' URI to `DefaultDataSource` and it should just work.\r\n\r\nIt's not clear to me what this part means:\r\n>  I am able to play the file just fine if I user other player such VLC or MX Player by using a server socket with the input stream of the file and then sending the localhost as intent to these apps.\r\n\r\nIf the file is on an SMB share that's mounted locally, I'm not sure why you'd need to pass socket info or `localhost` around - it should look exactly like a local file."
      },
      {
        "user": "danergo",
        "created_at": "2020-04-14T18:35:35Z",
        "body": "You can also create your own DataSource which can use some SMB library to read (and seek) files on SMB if you want to go on the hard way :)"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2020-05-04T01:07:52Z",
        "body": "<!-- event: mark-stale -->\nHey @guy244. We need more information to resolve this issue but there hasn't been an update in 14 weekdays. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2020-05-12T01:08:04Z",
        "body": "<!-- event: close-stale -->\nSince there haven't been any recent updates here, I am going to close this issue.\n\n@guy244 if you're still experiencing this problem and want to continue the discussion just leave a comment here and we are happy to re-open this."
      }
    ]
  },
  {
    "number": 7215,
    "title": "Hot to detect play/pause button click in the playerNotificationManager",
    "created_at": "2020-04-10T03:09:39Z",
    "closed_at": "2020-04-14T14:58:52Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7215",
    "body": "Hot to detect play/pause button click in the `playerNotificationManager`\r\n\r\nExoplayer has its own notification controls, using the `playerNotificationManager`\r\n\r\nI wan to play the next song when there is no `player.hasNext()` and we have set `Player.REPEAT_MODE_OFF`  when the player has stopped after laying the last song\r\n\r\ni can use  ` player.next();` but for that **I want to detect when the user clicks the play button**. to fire that event \r\n\r\nhow can this be done \r\n\r\nthanks \r\n\r\n\r\n ",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7215/comments",
    "author": "pawaom",
    "comments": [
      {
        "user": "AquilesCanta",
        "created_at": "2020-04-13T17:33:53Z",
        "body": "@marcbaechinger mind taking a look?"
      },
      {
        "user": "marcbaechinger",
        "created_at": "2020-04-14T14:58:52Z",
        "body": "Closing this as a duplicate of #7221"
      }
    ]
  },
  {
    "number": 7209,
    "title": "Extend to support raw H264 video stream in ExoPlayer Over Web sockets.",
    "created_at": "2020-04-09T11:26:08Z",
    "closed_at": "2020-04-11T01:05:29Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7209",
    "body": "**Scenario**\r\nWe are opening a web socket to our backend which is providing a raw H.264 stream.\r\n\r\n**What We've Tried**\r\nas suggested in this issue #3503 & #5175 we have converted Ac3Extractor to H264Reader.  Our Extractor is receiving the bytes from the DataSource and passing them to H264Reader.consume(ParsableByteArray).\r\nWe have used \r\ndetectAccessUnits true and \r\n reader.packetStarted(0, FLAG_DATA_ALIGNMENT_INDICATOR);\r\n\r\n**Problem:**\r\nOnly one frame is playing.\r\nWe have observed in `startNalUnit(absolutePosition, nalUnitType, pesTimeUs);`\r\n`pesTimeUs` is always 0.\r\n\r\n@andrewlewis have suggested in issue #5175 to assuming a constant frame rate. We have tried multiple way to increment the `pesTimeUs`  but video is playing too fast or a playing single frame only.\r\n\r\n\r\nCan u guys please suggest a way to resolve it.\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7209/comments",
    "author": "rajashekarvys",
    "comments": [
      {
        "user": "AquilesCanta",
        "created_at": "2020-04-09T23:56:59Z",
        "body": "I can see only two options:\r\n- **Recommended**: Put the stream in a container format, which will include timing information which is currently missing (TransportStream or FragmentedMp4).\r\n- Or write your own extractor (it will look a lot like what you have already I think) but arbitrarily assigns a duration to each frame (I guess you know the stream's framerate), you just manually increase the output timestamp.\r\n\r\nIf at any point you need audio/video synchronization, you'll definitely have to pack stuff into a container format. Hope this helps. Please let me know if I didn't answer your question. Please close otherwise."
      },
      {
        "user": "rajashekarvys",
        "created_at": "2020-04-10T07:47:48Z",
        "body": "Thanks for quick response.\r\n\r\nWe have tried increasing timestamp by manually video playing as  expected.\r\n\r\nWe would like to try **Recommended** way as well. Can you suggest a way to convert stream in to container format (Raw H264 byte arrays to FragmentedMp4)"
      },
      {
        "user": "AquilesCanta",
        "created_at": "2020-04-11T01:05:29Z",
        "body": "You'll need to use a tool for that. Maybe ffmpeg or derivatives? This is out of the scope of this issue tracker though. I'm sure a quick research will answer this for you. Closing this now. Good luck!"
      }
    ]
  },
  {
    "number": 7194,
    "title": "Sesssionid is zero . ",
    "created_at": "2020-04-06T11:08:11Z",
    "closed_at": "2020-04-09T09:06:30Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7194",
    "body": "### [REQUIRED] Issue description\r\nI am using exoplayer for my mediaplayer app . i want the sessionid for equalizer to pass . If i click on next button of player controls for playlist next song everytime sessionid  is zero and equalizer not working . \r\nIf song changed by itself then equlizer works.\r\n\r\n### [REQUIRED] Version of ExoPlayer being used\r\nI am using exoplayer2.11.x\r\n\r\n### [REQUIRED] Device(s) and version(s) of Android being used\r\nI am using lollipop ",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7194/comments",
    "author": "WaqasYousafy786",
    "comments": [
      {
        "user": "AquilesCanta",
        "created_at": "2020-04-06T12:20:34Z",
        "body": "@kim-vde Can you look into this? Also, could you update the issue title to describe what the issue is if you have more context?"
      },
      {
        "user": "waqasyousafy",
        "created_at": "2020-04-06T13:07:14Z",
        "body": "@kim-vide are you here\r\n"
      },
      {
        "user": "ojw28",
        "created_at": "2020-04-06T13:14:55Z",
        "body": "@waqasyousafy - The way you keep pinging these bugs is not appropriate. You filed it 2 hours ago. Please stop."
      },
      {
        "user": "waqasyousafy",
        "created_at": "2020-04-06T13:26:55Z",
        "body": "ok\r\n"
      },
      {
        "user": "kim-vde",
        "created_at": "2020-04-06T17:16:50Z",
        "body": "I tried to reproduce the problem but I couldn't. I have an equalizer and it is still working if I go to the next item in a playlist.\r\n\r\nCould you provide reproduction steps (for example, sample code and media)? Could you also, if possible, debug and check the value of `audioSessionId` in `DefaultAudioSink`?"
      },
      {
        "user": "waqasyousafy",
        "created_at": "2020-04-07T08:26:10Z",
        "body": "i use this code to get the sessionid \r\nsessionId = mExoPlayerView.getPlayer().getAudioComponent().getAudioSessionId();\r\ni have attached it to this code \r\n\r\n     if (mExoPlayerView.getPlayer().getAudioComponent() != null) {\r\n                    sessionId = mExoPlayerView.getPlayer().getAudioComponent().getAudioSessionId();\r\n                equalizerFragment = EqualizerFragment.newBuilder()\r\n                        .setAccentColor(Color.parseColor(\"#4caf50\"))\r\n                        .setAudioSessionId(sessionId)\r\n                        .build();\r\n                getSupportFragmentManager().beginTransaction()\r\n                        .replace(R.id.eqFrame, equalizerFragment)\r\n                        .addToBackStack(\"equalizer\")\r\n                        .commit();\r\n            }\r\nI got zero every time when i press next button of player "
      },
      {
        "user": "waqasyousafy",
        "created_at": "2020-04-08T05:08:02Z",
        "body": "I am trying my best to resolve this but i got zero at everytime as i mentioned bove . please help me . @kim-vde "
      },
      {
        "user": "waqasyousafy",
        "created_at": "2020-04-09T07:09:37Z",
        "body": "I have solved my problem guys . Very happy on it . Thank you not to you all ."
      },
      {
        "user": "kim-vde",
        "created_at": "2020-04-09T09:06:30Z",
        "body": "I will close this bug. If you want to receive help from our team in the future, please change your tone. We do not have the capacity to always answer issues immediately."
      },
      {
        "user": "RowlandOti",
        "created_at": "2020-04-26T09:08:32Z",
        "body": "Hi, @waqasyousafy  how did you resolve the issue. I am facing similar issues with a visualiser where the audioSessioId sometimes returns 0. Is it that it is set a little bit later sometimes when clicking next song?"
      },
      {
        "user": "ojw28",
        "created_at": "2021-02-24T12:49:07Z",
        "body": "We made some fixes to `audioSessionId` handling in `2.13.0`, which largely resolved this issue. There is one remaining issue, which will be fixed in `2.13.2`, which is scheduled for release over the next week or two."
      }
    ]
  },
  {
    "number": 7178,
    "title": "Hls not live streaming doesn't set EXT-X-SEQUENCE to 0",
    "created_at": "2020-04-03T08:03:55Z",
    "closed_at": "2020-05-04T01:07:53Z",
    "labels": [
      "question",
      "need more info",
      "stale",
      "closed-by-bot"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7178",
    "body": "I am using ExoPlayer to play stream url .m3u8. I am not using some special, only base realisation :\r\n\r\n   private val trackSelector = DefaultTrackSelector(AdaptiveTrackSelection.Factory())\r\n    private val rendererFactory = DefaultRenderersFactory(context)\r\n    private val loadControl = DefaultLoadControl()\r\n\r\n    private val simplePlayer: SimpleExoPlayer = ExoPlayerFactory.newSimpleInstance(\r\n        context,\r\n        rendererFactory,\r\n        trackSelector,\r\n        loadControl\r\n    )\r\n\r\n  simplePlayer.prepare(\r\n                HlsMediaSource.Factory(\r\n                    DefaultHttpDataSourceFactory(\r\n                        \"tv-streaming\"\r\n                    )\r\n                )\r\n                    .createMediaSource(\"myUrl-with-timeshift353535353.m3u8\")\r\n            )\r\n\r\nThis link binded with some begin time. When track played, i got info tag in segments, like\r\nEXT-X-SEQUENCE: n, where n = number of segment.\r\nand when i start play, n = 0.\r\nbut if i use another url, his EXT-X-SEQUENCE begins not from 0, but from last url current sequence position. Is there some way to clear current sequence position when i try to use another url?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7178/comments",
    "author": "github-eugene",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2020-04-03T12:55:51Z",
        "body": "I'm not sure what you are trying to do here. Please could you try restating the question in terms of ExoPlayer APIs?"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2020-04-23T01:08:16Z",
        "body": "<!-- event: mark-stale -->\nHey @github-eugene. We need more information to resolve this issue but there hasn't been an update in 14 weekdays. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2020-05-04T01:07:53Z",
        "body": "<!-- event: close-stale -->\nSince there haven't been any recent updates here, I am going to close this issue.\n\n@github-eugene if you're still experiencing this problem and want to continue the discussion just leave a comment here and we are happy to re-open this."
      }
    ]
  },
  {
    "number": 7175,
    "title": "IndexOutOfBoundsException - while checking if media isLive",
    "created_at": "2020-04-02T15:16:45Z",
    "closed_at": "2020-04-03T12:52:44Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7175",
    "body": "Hi,\r\n\r\nWhile checking the isLive new API  \r\nin the Demo app in v2.11.3 version I get this exception after executing the below code.\r\nrunning this on Pixel 3 android 10\r\n\r\nNo sure what is the best approach here but I was expecting to get false\r\nunless it should be called only after player is READY\r\n\r\nis there a way to add api that checks is there is a window  before calling get, so this  case can be checked before accessing the window?\r\n\r\ndo you think I should stick to our current logic that uses -  `player.isCurrentWindowDynamic()`\r\n```\r\n     player.prepare(mediaSource, !haveStartPosition, false);\r\n    boolean isLive = false;\r\n    \r\n    if (player.getCurrentTimeline() != null) {\r\n      isLive = player.getCurrentTimeline().getWindow(player.getCurrentWindowIndex(), new Timeline.Window()).isLive;\r\n    }\r\n```\r\n\r\n\r\n10x\r\nGilad.\r\n\r\n2020-04-02 18:02:19.419 13123-13123/com.google.android.exoplayer2.demo E/AndroidRuntime: FATAL EXCEPTION: main\r\n    Process: com.google.android.exoplayer2.demo, PID: 13123\r\n    java.lang.IndexOutOfBoundsException\r\n        at com.google.android.exoplayer2.Timeline$1.getWindow(Timeline.java:550)\r\n        at com.google.android.exoplayer2.Timeline.getWindow(Timeline.java:668)\r\n        at com.google.android.exoplayer2.demo.PlayerActivity.initializePlayer(PlayerActivity.java:412)\r\n        at com.google.android.exoplayer2.demo.PlayerActivity.onStart(PlayerActivity.java:240)\r\n        at android.app.Instrumentation.callActivityOnStart(Instrumentation.java:1432)\r\n        at android.app.Activity.performStart(Activity.java:7848)\r\n        at android.app.ActivityThread.handleStartActivity(ActivityThread.java:3294)\r\n        at android.app.servertransaction.TransactionExecutor.performLifecycleSequence(TransactionExecutor.java:221)\r\n        at android.app.servertransaction.TransactionExecutor.cycleToPath(TransactionExecutor.java:201)\r\n        at android.app.servertransaction.TransactionExecutor.executeLifecycleState(TransactionExecutor.java:173)\r\n        at android.app.servertransaction.TransactionExecutor.execute(TransactionExecutor.java:97)\r\n        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:2016)\r\n        at android.os.Handler.dispatchMessage(Handler.java:107)\r\n        at android.os.Looper.loop(Looper.java:214)\r\n        at android.app.ActivityThread.main(ActivityThread.java:7356)\r\n        at java.lang.reflect.Method.invoke(Native Method)\r\n        at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:492)\r\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:930)\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7175/comments",
    "author": "giladna",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2020-04-03T12:52:44Z",
        "body": "You can check `timeline.getWindowCount()` or `timeline.isEmpty()`."
      },
      {
        "user": "tonihei",
        "created_at": "2020-04-03T12:57:40Z",
        "body": "Actually, the preferred way to check if media is live is to use `player.isCurrentWindowLive()`.  This already includes the check Andrew mentioned above."
      },
      {
        "user": "giladna",
        "created_at": "2020-04-05T10:13:19Z",
        "body": "thanks!"
      }
    ]
  },
  {
    "number": 7174,
    "title": "Hello guys, we use Exoplayer in the app, but need to migrate from Google Services to Huawei Services. Does anyone did it and have any recommendations? Thanks in advance.",
    "created_at": "2020-04-02T09:02:33Z",
    "closed_at": "2020-04-02T09:29:06Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7174",
    "body": "[New issue template not filled out]",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7174/comments",
    "author": "oksanabitel",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2020-04-02T09:29:06Z",
        "body": "It's unclear how this is ExoPlayer related, and I don't think we can provide any guidance. ExoPlayer core doesn't depend on Google Play Services (which I assume is what is being referred to here). Feel free to provide more information if it does relate to ExoPlayer. You may get an answer on a more general-purpose site like Stack Overflow."
      }
    ]
  },
  {
    "number": 7173,
    "title": "OnTrackChnaged method called twice while click next button . why?",
    "created_at": "2020-04-02T06:24:20Z",
    "closed_at": "2020-04-03T13:38:31Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7173",
    "body": "OnTrachChanged called twice . when i click on next or previous button of player . \r\nI am beginner of exoplayer user",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7173/comments",
    "author": "WaqasYousafy786",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2020-04-03T13:38:29Z",
        "body": "I think what's going on is that at the moment you click next/previous, the tracks for the new playlist item are sometimes not known. In this case you get a tracks changed notification with empty tracks, then once the media is prepared for playback you get another notification with the actual tracks.\r\n\r\nYou can see this if you look at `EventLogger` output in logcat when seeking in a playlist in the demo app. If the next media item actually is buffered when seeking to the next item I think you'll (currently) see only one tracks changed notification, as in this case the tracks are known."
      }
    ]
  },
  {
    "number": 7159,
    "title": "Exoplayer 2.6.1 - HLS v4 Support, Multiprofile Support, ",
    "created_at": "2020-03-29T01:14:31Z",
    "closed_at": "2020-03-30T10:48:17Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7159",
    "body": "\r\n### [REQUIRED] Searched documentation and issues\r\nChecked exoplayer.dev site.\r\nNo information on from which version HLS V4 supported.\r\nNo information on Multiprofile support\r\nChecked on Stack Overflow\r\n\r\n### [REQUIRED] Question\r\nI am using Exoplayer version 2.6.1\r\nI would like to know whether Exoplayer supports below features in HLS\r\n\r\n**- Whether HLS V4 Support is there ?\r\n- Whether Multi Profile OTT Streams are supported ?\r\n- Whether API to differentiate Audio & Video Profiles  from M3u8?\r\n- Whether 6MB OTT profile is supported ?**\r\n\r\n### A full bug report captured from the device\r\nNot related to an issue. So No Bugreport\r\n\r\n### Link to test content\r\nNo Test Content available\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7159/comments",
    "author": "vasusachin",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2020-03-30T07:52:28Z",
        "body": "@AquilesCanta Please could you take a look? Thanks."
      },
      {
        "user": "AquilesCanta",
        "created_at": "2020-03-30T10:48:17Z",
        "body": "I think the answer to all of the above is yes.\r\n\r\nI am not sure what multi-profile-OTT-streams means, other than multiple qualities adaptation. I cannot find the specific term in the spec, so please provide an example if you are not sure one of the 3 items is correctly supported."
      }
    ]
  },
  {
    "number": 7156,
    "title": "No duration and possbility to seek in PlayerControlView for some video",
    "created_at": "2020-03-28T13:07:35Z",
    "closed_at": "2020-03-30T08:44:35Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7156",
    "body": "### [REQUIRED] Issue description\r\nDuring playback of some video files, there is no duration info in PlayerControlView and possbility to seek the video via the timebar is disabled. Other video players show duration and allow to seek the video.\r\n\r\n### [REQUIRED] Reproduction steps\r\n1. Add the provided link to the test video to Demo app\r\n2. Open the test video in Demo app\r\n3. Observe that there is no duration info in PlayerControlView and it's not possible to seek the video\r\n\r\n### [REQUIRED] Link to test content\r\nProvided via email\r\n\r\n### [REQUIRED] A full bug report captured from the device\r\nN/A\r\n\r\n### [REQUIRED] Version of ExoPlayer being used\r\n2.11.3\r\n\r\n### [REQUIRED] Device(s) and version(s) of Android being used\r\nAny device",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7156/comments",
    "author": "alexeyr15",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2020-03-30T08:43:55Z",
        "body": "The provided stream is an MPEG-TS stream where the default timestamp search range is too low to be able to derive the duration of the stream. Improving this behavior is tracked by #5097 so I will mark this as a duplicate."
      },
      {
        "user": "andrewlewis",
        "created_at": "2020-03-30T08:44:35Z",
        "body": "Duplicate of #5097"
      }
    ]
  },
  {
    "number": 7152,
    "title": "How to play two audios at the same time, one as background music and the other playing other content",
    "created_at": "2020-03-27T06:47:32Z",
    "closed_at": "2020-04-26T01:08:47Z",
    "labels": [
      "question",
      "need more info",
      "stale",
      "closed-by-bot"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7152",
    "body": "How to play two audios at the same time, one as background music and the other playing other content",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7152/comments",
    "author": "HanGao1",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2020-03-27T14:03:19Z",
        "body": "Wouldn't creating two player instances be sufficient for doing this?"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2020-04-16T01:07:51Z",
        "body": "<!-- event: mark-stale -->\nHey @HanGao1. We need more information to resolve this issue but there hasn't been an update in 14 weekdays. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2020-04-26T01:08:46Z",
        "body": "<!-- event: close-stale -->\nSince there haven't been any recent updates here, I am going to close this issue.\n\n@HanGao1 if you're still experiencing this problem and want to continue the discussion just leave a comment here and we are happy to re-open this."
      }
    ]
  },
  {
    "number": 7150,
    "title": "MediaSource in dynamic ConcatenatingMediaSource freezing UI after calling addMediaSource() ",
    "created_at": "2020-03-27T02:59:26Z",
    "closed_at": "2020-03-28T13:33:46Z",
    "labels": [
      "question",
      "need more info"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7150",
    "body": "### [REQUIRED] Searched documentation and issues\r\nI've searched in documentation and other similar issues about how to create a dynamic playlist in Exoplayer but all I found just create a `ConcatenatingMediaSource` then add or remove media source from it.\r\n\r\n### [REQUIRED] Question\r\nI'm creating a dynamic mp3 list with `ConcatenatingMediaSource()` and when the user adds more mp3 to the playlist I'm updating the media source through `ConcatenatingMediaSource.addMediaSource(mediaSource)` while the exoplayer is playing the list but whenever I called `addMediaSource` the app freezes and stop responding. I tried to call it from the background thread but I ended up with same results",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7150/comments",
    "author": "vipafattal",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2020-03-27T23:30:17Z",
        "body": "This sounds like it's probably an application issue. I think you'll need to provide a small app as source code that demonstrates the issue, if you want help figuring out what's wrong."
      },
      {
        "user": "vipafattal",
        "created_at": "2020-03-28T13:33:46Z",
        "body": "@ojw28 Thanks for pointing me that I had an issue with App.\r\n\r\nUnfortunately, I had an issue in the way that I was adding media sources.\r\nI was trying to add multiple media sources through using `ConcatenatingMediaSource` to combine `them in one source than adding them to the current playlist through `ConcatenatingMediaSource.addMediaSource()` which is wrong because  `addMediaSources` (please be advised it's the one that ends with 's') it's used to a  list of media source without concatenating them. "
      }
    ]
  },
  {
    "number": 7136,
    "title": "[DashManifestParser] [Invalid UUID string When parse manifest]",
    "created_at": "2020-03-24T07:32:25Z",
    "closed_at": "2020-03-24T09:48:43Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7136",
    "body": "Hi, \r\n\r\n  Inside `DashMainifestParser`, there is a function   \r\n   ```\r\nprotected Pair<@NullableType String, @NullableType SchemeData> parseContentProtection(\r\n      XmlPullParser xpp) throws XmlPullParserException, IOException\r\n\r\n```\r\nWhich is used for parse the dash mainifest, but I get a problem, my default_KID is on below format instead of the format like \"39392-32322-dsdsds-33222323-323232\", the parseContentProtection cannot parse it. Can I know is it a issue for exoplayer? or our mainifest have to follow this format \"39392-32322-dsdsds-33222323-323232\" with segment of \"-\"?\r\n\r\n`<ContentProtection schemeIdUri=\"urn:mpeg:dash:mp4protection:2011\" value=\"cenc\" cenc:default_KID=\"21d541c403214c1e0f431d130496i5be\"/>`",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7136/comments",
    "author": "ChangLingSg",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2020-03-24T09:48:43Z",
        "body": "`default_KID` is supposed to be a UUID format string. I.e., your `default_KID` should be `21d541c4-0321-4c1e-0f43-1d130496i5be`."
      }
    ]
  },
  {
    "number": 7135,
    "title": "Exoplayer 2.9.6: Why does the exoplayer start playing audio with a tinkle like a notice?",
    "created_at": "2020-03-24T02:11:56Z",
    "closed_at": "2020-03-26T01:52:58Z",
    "labels": [
      "question",
      "need more info"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7135",
    "body": "[No information provided]",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7135/comments",
    "author": "l20160606sy",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2020-03-24T14:00:48Z",
        "body": "Sorry, but it's impossible to know what this means. Please could you more fully describe your question?"
      },
      {
        "user": "l20160606sy",
        "created_at": "2020-03-25T03:52:28Z",
        "body": "On Android phones, just like wechat will ring for new information, it will also ring at the beginning of playback"
      },
      {
        "user": "ojw28",
        "created_at": "2020-03-25T10:27:10Z",
        "body": "Given ExoPlayer is used by a huge number of apps, and this has never been reported before, I'm fairly certain this is not general ExoPlayer behaviour.\r\n\r\nIt's most likely an issue specific to your app, or (less likely) a device specific issue affecting the particular device you're using. If you're seeing the issue across all apps that use ExoPlayer, and in particular if you see it in the ExoPlayer demo app, then please file an issue that properly fills in the issue template."
      },
      {
        "user": "l20160606sy",
        "created_at": "2020-03-26T01:52:58Z",
        "body": "Thank you, I think I've found a solution. There's something wrong with some androids."
      }
    ]
  },
  {
    "number": 7119,
    "title": "Could we avoid default method interfaces in Java at least in internal implementations?",
    "created_at": "2020-03-21T00:28:42Z",
    "closed_at": "2020-05-03T11:30:48Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7119",
    "body": "I have noticed that the default methods got higher and higher adoption in the ExoPlayer library.\r\n\r\nThe problem is that not every build toolchain supports it equally well. We have some issues using BUCK for example. \r\n\r\nWhile most of the issues could be work-arounded by just overriding the default implementation, some of the cases can't be fixed that easy.\r\n\r\nExample of that is DUMMY DrmFactory which is always created by default.\r\n\r\nI understand that code looks a bit better with default implementation, but NoOp implementation should be able to fix it as well without burden of de-sugaring and extra build infrastructure issues.\r\n\r\nWhat do you think about banning default methods completely?\r\nWould you approve a PR which removes at least internal usage of the default implementation?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7119/comments",
    "author": "dryganets",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2020-03-21T17:26:28Z",
        "body": "Default methods aren't just about making code look nicer. They add significant additional flexibility because it becomes possible to add to an interface without breaking all implementations of that interface (you can achieve something similar with an abstract class, but that approach has the significant limitation of not allowing multiple inheritance).\r\n\r\n* Please could you point us at a specific issue or issues on the BUCK issue tracker related to default methods, so we can better understand the problems you're running into? Without knowledge of the specifics, it's not really possible for us to have an informed opinion on your particular case.\r\n* If any other developers have feedback on this, to give us a better overall picture, that would be appreciated. What other toolchains are impacted, and why? What adoption do these toolchains have? Why aren't the toolchains being fixed to support (not particularly new) language features?\r\n\r\n> What do you think about banning default methods completely? Would you approve a PR which removes at least internal usage of the default implementation?\r\n\r\nThis issue does not yet make a good case for doing this. We would need a lot more specifics to even form an opinion, starting with those requested above."
      },
      {
        "user": "dryganets",
        "created_at": "2020-03-23T17:27:08Z",
        "body": "For my particular case, I'd rather make a small PR to the ExoPlayer.\r\n\r\nWe are using an older version of BUCK for the developer builds, we are working on upgrade in the mean time.\r\n\r\nI understand the value of defaults methods, just saying that there is a cost for some users of the library. I agree that everyone that uses modern toolchains like d8 should be able to deal with it.\r\n\r\nIf somebody else has the similar issues he probably chime in into the conversation, I've seen a number of AbstractMethod errors complains in the bug tracker, but I guess most of the cases were related to miss-configuration fo the gradle build-script."
      },
      {
        "user": "ojw28",
        "created_at": "2020-03-23T17:38:15Z",
        "body": "I don't think your particular case is justification for regressing ExoPlayer's adoption of default methods. It seems likely that default methods benefit the majority of developers, and impact on a much smaller number of developers who are using outdated and/or unofficial toolchains. It's probably working as intended that the latter group may have to jump through a few extra hoops to get things functioning properly, and this should serve as motivation for that group to update their toolchains to ones that provide better support.\r\n\r\nAs a more general point, when developing a library that's as widely adopted as ExoPlayer, it's simply not possible to keep all developers happy all of the time. We frequently see requests in the other direction (i.e., complaints that we're too slow adopting new technology; Kotlin being a current example). It's our job to keep most developers happy most of the time, and I don't think there's a good argument around default methods to suggest that we're not doing this.\r\n\r\nI will leave this issue open for a while in case any other developers want to weigh in."
      },
      {
        "user": "dryganets",
        "created_at": "2020-03-25T02:20:17Z",
        "body": "Thank you for keeping it open!\r\n\r\nI posted the quick fix PR + described couple of other ways to fix it. Feel free to pick your favorite, or just edit the change the way you like it.\r\n\r\nI verified that this is enough to unblock our upgrade to the new version."
      },
      {
        "user": "ojw28",
        "created_at": "2020-03-25T10:23:39Z",
        "body": "To be clear, leaving the issue open does not imply we're likely to accept any pull requests for this issue."
      },
      {
        "user": "dryganets",
        "created_at": "2020-03-25T17:03:03Z",
        "body": "Thanks,\r\nI understand that it doesn't imply that you will merge anything.\r\n\r\nI opened the PR to start dialog and find out if you think one of the options I propose will be acceptable for the project.\r\n\r\nThe least invasive options will be to rather add the constructor to factory to allow passing your own implementation of the DrmSession."
      },
      {
        "user": "ojw28",
        "created_at": "2020-03-25T17:26:40Z",
        "body": "Unless there's a significant amount of additional feedback, we're not planning to accept any kind of pull request for this. If only a small number of developers are affected, the easiest solution is for them to check the project out as source and make whatever the necessary modifications are locally (or, preferably, update to better supported tool chains)."
      },
      {
        "user": "dyue",
        "created_at": "2020-03-25T21:57:34Z",
        "body": "One problem with default methods in an interface is that default methods are only transferred over during compilation.\r\n\r\nHere's an example:\r\n1) A library v1 implements AnalyticsListener and is compiled against ExoPlayer 2.10.  The implementation uses default methods for the unimplemented methods.\r\n2) ExoPlayer 2.11 changed the AnalyticsListener interface by adding a new method and associated a default implementation for the method.\r\n3) A user uses library v1 with ExoPlayer 2.11, but library v1 implementation will not have the new method implemented since it was compiled against ExoPlayer 2.10 and fails when ExoPlayer 2.11 calls the new virtual method in the AnalyticsListener since it's unimplemented.\r\n\r\nThis actually introduces quite a number of problems:\r\n1) We can't upgrade to a newer version of ExoPlayer unless all the libraries that depend on ExoPlayer are compiled against that version.\r\n2) If a library doesn't mention which version of ExoPlayer is supported, it's way too risky to upgrade ExoPlayer because the error only exhibits at runtime.\r\n\r\nWould be nice if DefaultAnalyticsListener and as such are not deprecated so that libraries can have the option to not rely on default method interfaces."
      },
      {
        "user": "ojw28",
        "created_at": "2020-03-26T09:10:35Z",
        "body": "@dyue - Are you sure that's how default method de-sugaring works? I didn't look in detail, but my understanding is that default method de-sugaring doesn't happen when library V1 is compiled, and instead happens when building the final application binary that V1 is included in. I don't think de-sugaring can happen before that, because the way de-sugaring is performed depends on the minimum API level of the application binary, and that information is not known at the point of compiling V1. Note that if de-sugaring works in the way I describe, the issue you describe does not exist."
      },
      {
        "user": "tonihei",
        "created_at": "2020-03-26T12:47:01Z",
        "body": "As an additional note - we don't support mixing versions of ExoPlayer. So if library V1 depends on 2.10 and is actually exporting ExoPlayer APIs as part of their library, then you can't depend on 2.11 at the same time. The gradle build system prevents that with a build error for example. "
      },
      {
        "user": "ojw28",
        "created_at": "2020-05-03T11:30:48Z",
        "body": "I don't think a good argument has been made for avoiding default methods. Closing."
      }
    ]
  },
  {
    "number": 7109,
    "title": "Save Offline Downloaded Content in SD Card",
    "created_at": "2020-03-19T10:55:17Z",
    "closed_at": "2020-04-15T08:55:13Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7109",
    "body": "We have implemented Offline DRM using Exoplayer. Currently videos .exo gets downloaded in Internal Storage. \r\n\r\nHow to store .exo files to sd card instead of Phone Memory.\r\n\r\nWill this method return the Simple Cache of .exo files in SD card:\r\n```\r\n /** Returns a {@link DataSource.Factory}. */\r\n  public DataSource.Factory buildDataSourceFactory() {\r\n    DefaultDataSourceFactory upstreamFactory =\r\n        new DefaultDataSourceFactory(this, buildHttpDataSourceFactory());\r\n    return buildReadOnlyCacheDataSource(upstreamFactory, getDownloadCache());\r\n  }\r\n```\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7109/comments",
    "author": "piyush2dev",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2020-03-19T12:06:46Z",
        "body": "I think writing to an sdcard only involves using a different path pointing to that directory on the sd card. In case you know the path to that directory you probably just need to have a `Cache` implementation which reads/writes from this location. \r\n\r\nIf you use such a `Cache` pointing to a sdcard for downloading, you can create a `CacheDataSource` with the same `Cache` for reading also:\r\n\r\n```\r\nnew CacheDataSourceFactory(\r\n        cache,\r\n        upstreamFactory,\r\n        new FileDataSource.Factory(),\r\n        /* cacheWriteDataSinkFactory= */ null,\r\n        CacheDataSource.FLAG_IGNORE_CACHE_ON_ERROR,\r\n        /* eventListener= */ null);\r\n```\r\n\r\nDid you experience any problems when using a path pointing to the sdcard?\r\n"
      },
      {
        "user": "piyush2dev",
        "created_at": "2020-03-19T13:03:21Z",
        "body": "Thanks @marcbaechinger \r\nBased on your input I was able to see that i can control over cache.\r\n`File downloadContentDirectory = new File(getDownloadDirectory(), DOWNLOAD_CONTENT_DIRECTORY);`\r\n\r\nThe thing is that I want to give user an option whether user wants to download to SD CARD OR INTERNAL MEMORY.\r\n\r\nDo I need to create 2 DownloadManager Object here. 1 pointing to SD card and 1 pointing to Internal Memory.\r\n"
      },
      {
        "user": "piyush2dev",
        "created_at": "2020-03-19T13:33:22Z",
        "body": "@marcbaechinger @erdemguven @willnorris \r\nCan u please help in above query.\r\n\r\nThe thing is that I want to give user an option whether user wants to download to SD CARD OR INTERNAL MEMORY.\r\n\r\nDo I need to create 2 DownloadManager Object here. 1 pointing to SD card and 1 pointing to Internal Memory.\r\n\r\nAlso at time of retrieval for getting SimpleCache to play content. Do I need create 2 objects for `buildReadOnlyCacheDataSource(upstreamFactory, getDownloadCache())`\r\n\r\nAs DownManager uses `getDownloadCache()`"
      },
      {
        "user": "marcbaechinger",
        "created_at": "2020-03-19T17:27:11Z",
        "body": "You only need one `DownloadManager` pointing to one `Cache`. If you do playback you want to create a `CacheDataSource` to get the data from the cache, if available. This is the same cache as the `DownloadManager` uses.  \r\n\r\nThis `Cache` points to a directory you can choose and you can let the user decide where that is. Be aware that it might be tricky to change that directory afterwards without loosing downloads. \r\n\r\nYou also need to ask for the permission to access external storage if your user chooses to store on an sd card."
      },
      {
        "user": "marcbaechinger",
        "created_at": "2020-04-15T08:55:13Z",
        "body": "Closing due to inactivity. Please reopen if required."
      }
    ]
  },
  {
    "number": 7102,
    "title": "Modules 'base' and 'player' contain entry 'res/layout/exo_playback_control_view.xml' with different content.",
    "created_at": "2020-03-18T09:49:14Z",
    "closed_at": "2020-03-27T23:45:26Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7102",
    "body": "\r\n\r\n### [REQUIRED] Issue description\r\nI have an app with multiple Dynamic Modules. \r\n\r\nIn order to add the download feature to my app, I need to import the `DownloadNotificationHelper` component into my \"base\" module. So I've added the ExoPlayer UI dependency : `com.google.android.exoplayer:exoplayer-ui:2.11.1` to my \"base\" module. \r\nSince I already have this dependency in the module \"player\" Now I have this compilation error message : \r\n```Modules 'base' and 'player' contain entry 'res/layout/exo_playback_control_view.xml' with different content.```\r\n\r\n### [REQUIRED] Reproduction steps\r\nIn a multi modules android project, just add the dependency `com.google.android.exoplayer:exoplayer-ui:2.11.1` in the base module and an another module and try to compile.\r\n\r\n### [REQUIRED] Version of ExoPlayer being used\r\nVersion `2.11.1`\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7102/comments",
    "author": "FlorentDambreville",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2020-03-18T17:44:35Z",
        "body": "I've created a project with a base module and a dynamic feature module. Both are having a dependency to the ui module of ExoPlayer. \r\n\r\nI can run the app in the emulator and when I unpack the APK i can find the `exo_playback_control_view.xml` in the APK. So it seems that the merge was successful. \r\n\r\nAre you using ui components in one or the other or in both modules? I currently hava a layout file in each module which is using the `PlayerView`. Can you think of something I need to depend on in one or the other module to be able to reproduce the issue?"
      },
      {
        "user": "FlorentDambreville",
        "created_at": "2020-03-19T08:57:32Z",
        "body": "I am using `PlayerView` with a custom `exo_playback_control_view.xml` in the player module. In the base module I only use the `DownloadNotificationHelper`.\r\nThe player module depends on the base module (I have `implementation project(':app')` in the player build.gradle)"
      },
      {
        "user": "marcbaechinger",
        "created_at": "2020-03-19T23:37:51Z",
        "body": "Ok, this matches the error message. :) It seems that there is an issue when merging, because `exo_playback_control_view.xml` is different in the modules. That's actually not an ExoPlayer issue, but a problem of the setup. I'll try to get some advise whether this can be avoided or if this a limitation we need to work around somehow.\r\n\r\nFor a quick solution, you can rename your custom layout file and  declare the layout id in the `app:controller_layout_id` attribute of the PlayerView element. Given you rename your file to `custom_playback_control_view.xml`, this should then be something like that:\r\n\r\n```\r\n<com.google.android.exoplayer2.ui.PlayerView android:id=\"@+id/player_view\"\r\n      app:controller_layout_id=\"@layout/custom_playback_control_view\"\r\n      android:layout_width=\"match_parent\"\r\n      android:layout_height=\"match_parent\"/>\r\n```\r\n\r\nThis should help as a quick fix.\r\n\r\nAnother thought: If you declare the exoplayer-ui module in in your base module as api you would not need that ui dependency in the player module again I think. Can you build your app that way?\r\n\r\n```\r\napi 'com.google.android.exoplayer:exoplayer-ui:2.11.3'\r\n```"
      },
      {
        "user": "FlorentDambreville",
        "created_at": "2020-03-20T09:39:27Z",
        "body": "Nice ! \r\n\r\nThanks for the quick fix, I'll try it. :)\r\n\r\nAlso, I've tried to add the api dependency to my base module  \r\n```api 'com.google.android.exoplayer:exoplayer-ui:2.11.3'```\r\nAnd I get the same error message :/\r\n\r\nPlease, let me know if you find an other way to fix this issue. And let me know if you need me to open an issue elsewhere. \r\n\r\n"
      },
      {
        "user": "ojw28",
        "created_at": "2020-03-20T09:47:15Z",
        "body": "Given the resources are different, I think they probably should have different names. So I think the solution suggested by @marcbaechinger is probably the correct one :)."
      }
    ]
  },
  {
    "number": 7101,
    "title": "How to calculate how much bytes were dowloaded from playback Buffer start event",
    "created_at": "2020-03-17T14:48:07Z",
    "closed_at": "2020-10-13T22:24:56Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7101",
    "body": "Hi,\r\nIs there a way that we can calculate how much buffer was downloaded from Buffer start event till the Ready event?\r\n\r\nso upon the bytes that were downloaded  by player and the minimum buffer for playback value we know we can predict when player will start playing by presenting this % of load to users\r\n\r\nthanks!",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7101/comments",
    "author": "giladna",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2020-03-17T17:35:26Z",
        "body": "I think that's very difficult to accurately calculate with the callbacks which are available. Certainly, `onLoadCompleted` comes to mind but that's not called frequent enough to give you the granularity you want.\r\n\r\nIn theory, the `EventTime` which is passed to every callback of the `AnalyticsListener` has a field  `totalBufferedDurationMs`. So you get the value of 'player.getTotalBufferedDuration()' with every event. However, I don't see what events would arrive between falling to buffered state until the player gets ready again.\r\n\r\nYou can poll 'player.getTotalBufferedDuration()', that's what the ExoPlayer UI components are doing."
      },
      {
        "user": "giladna",
        "created_at": "2020-03-17T22:05:34Z",
        "body": "hi @marcbaechinger ,\r\n\r\nAfter checking the polling tip it seems that the buffer position is not something we can count on \r\nsince it will have different value in each media load instance.\r\n\r\nso we cannot assume that when first ready event is fired the buffer position will be around 2500 ms and that the load percentage can be calculated by that information\r\n\r\nso even if the AnalyticsListener had such events it would not help me and \r\n\r\n* Is there some other option to figure out how long the buffering to ready period will take then?\r\n\r\nThis is snippet of what I did \r\nI 'v canceled the timer once ready was fired.\r\n\r\n```\r\nif (event.newState == PlayerState.BUFFERING) {\r\n                    appProgressBar.setVisibility(View.VISIBLE);\r\n\r\n                    timer = new Timer();\r\n                    timer.scheduleAtFixedRate(new TimerTask() {\r\n                        @Override\r\n                        public void run() {\r\n                            log.d(\"getBufferedPosition = \" + player.getBufferedPosition());\r\n                        }\r\n                    }, 0, 100);\r\n                }\r\n```\r\n\r\nPS.\r\n\r\nOne observation I saw that when calling player.getBufferedPercentage()\r\nI always get 0 as the result \r\nworth checking the reason for this.\r\n\r\n10x\r\nGilad. "
      },
      {
        "user": "marcbaechinger",
        "created_at": "2020-10-13T22:24:56Z",
        "body": "Closing due to inactivity. Please re-open if you want to proceed."
      }
    ]
  },
  {
    "number": 7094,
    "title": "Can I Run ExoPlayer In Docker?",
    "created_at": "2020-03-17T06:23:44Z",
    "closed_at": "2020-03-25T11:09:35Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7094",
    "body": "Hello everyone,\r\nCan I use ExoPlayer i docker? \r\nTo run it on any PC and manage it by Kubernetes?\r\n\r\nThank you!",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7094/comments",
    "author": "matanmarciano",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2020-03-17T11:55:47Z",
        "body": "ExoPlayer is running on Android using the Android media framework. The Android media framework is using media codecs which are provided by the hardware vendor. I think that could be the challenge for you.\r\n\r\nExoPlayer runs in the Android emulator on a PC or OSX. So it can run on a platform like PC or a mac. I think this is still not a virtualized environment you probably want.\r\n\r\nI'm afraid that I can not give you more support on that topic as we actually support ExoPlayer as an Android media player here in this issue tracker."
      }
    ]
  },
  {
    "number": 7091,
    "title": "TrackSelectionView.getDialog is deprecated . what should i use instead ?",
    "created_at": "2020-03-15T23:01:01Z",
    "closed_at": "2020-03-16T09:39:56Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7091",
    "body": "Hi guys \r\nI am completely newbie with exoplayer . I want to show the list of quality of hls to user and let the user to choose one of them . I found below code but one part is deprecated in version 2.10. Could someone help me on this case please ? I also tried to find solution on demo app . but there is a lot of code and it make me confused .\r\n```\r\nMappingTrackSelector.MappedTrackInfo mappedTrackInfo = trackSelector.getCurrentMappedTrackInfo();\r\n        if (mappedTrackInfo != null) {\r\n            CharSequence title = \"Video\";\r\n            int rendererIndex = 2;\r\n            int rendererType = mappedTrackInfo.getRendererType(rendererIndex);\r\n            boolean allowAdaptiveSelections =\r\n                    rendererType == C.TRACK_TYPE_VIDEO\r\n                            || (rendererType == C.TRACK_TYPE_AUDIO\r\n                            && mappedTrackInfo.getTypeSupport(C.TRACK_TYPE_VIDEO)\r\n                            == MappingTrackSelector.MappedTrackInfo.RENDERER_SUPPORT_NO_TRACKS);\r\n            Pair<AlertDialog, TrackSelectionView> dialogPair =\r\n                    TrackSelectionView.getDialog(this, title, trackSelector, rendererIndex);\r\n            dialogPair.second.setShowDisableOption(true);\r\n            dialogPair.second.setAllowAdaptiveSelections(allowAdaptiveSelections);\r\n            dialogPair.first.show();\r\n        }\r\n    }\r\n```\r\n\r\nTrackSelectionView.getDialog  is deprecated .Thanks in advance.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7091/comments",
    "author": "newtestpage",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2020-03-16T09:39:56Z",
        "body": "Use `TrackSelectionDialogBuilder`."
      },
      {
        "user": "newtestpage",
        "created_at": "2020-03-16T14:42:14Z",
        "body": "> Use `TrackSelectionDialogBuilder`.\r\n\r\nThanks for your response . I changed the code as follow and it shows the dialog but it just contain auto and unknown. however hls has 5 different quality (second code) . \r\n\r\ncode 1 :\r\n`private void showMenuQuality() {\r\n        MappingTrackSelector.MappedTrackInfo mappedTrackInfo = trackSelector.getCurrentMappedTrackInfo();\r\n        if (mappedTrackInfo != null) {\r\n            CharSequence title = \"Video\";\r\n            int rendererIndex = 2;\r\n            int rendererType = mappedTrackInfo.getRendererType(rendererIndex);\r\n            boolean allowAdaptiveSelections =\r\n                    rendererType == C.TRACK_TYPE_VIDEO\r\n                            || (rendererType == C.TRACK_TYPE_AUDIO\r\n                            && mappedTrackInfo.getTypeSupport(C.TRACK_TYPE_VIDEO)\r\n                            == MappingTrackSelector.MappedTrackInfo.RENDERER_SUPPORT_NO_TRACKS);\r\n\r\n\r\n            TrackSelectionDialogBuilder build = new TrackSelectionDialogBuilder(PlayerActivity.this, title, trackSelector, rendererIndex);\r\n\r\n            build.setAllowAdaptiveSelections(allowAdaptiveSelections);\r\n            build.build().show();\r\n\r\n\r\n        }\r\n\r\n    }`\r\n\r\n\r\ncode 2 (stream file ) \r\n`#EXTM3U\r\n#EXT-X-VERSION:3\r\n#EXT-X-INDEPENDENT-SEGMENTS\r\n#EXT-X-STREAM-INF:BANDWIDTH=3951200,AVERAGE-BANDWIDTH=2961200,CODECS=\"avc1.4d4028,mp4a.40.2\",RESOLUTION=1920x1080,FRAME-RATE=25.000\r\nlive_2500.m3u8\r\n#EXT-X-STREAM-INF:BANDWIDTH=2631200,AVERAGE-BANDWIDTH=1861200,CODECS=\"avc1.4d4028,mp4a.40.2\",RESOLUTION=1920x1080,FRAME-RATE=25.000\r\nlive_1500.m3u8\r\n#EXT-X-STREAM-INF:BANDWIDTH=1971200,AVERAGE-BANDWIDTH=1311200,CODECS=\"avc1.4d4028,mp4a.40.2\",RESOLUTION=1920x1080,FRAME-RATE=25.000\r\nlive_1000.m3u8\r\n#EXT-X-STREAM-INF:BANDWIDTH=1201200,AVERAGE-BANDWIDTH=1036200,CODECS=\"avc1.4d401f,mp4a.40.2\",RESOLUTION=1280x720,FRAME-RATE=25.000\r\nlive_750.m3u8\r\n#EXT-X-STREAM-INF:BANDWIDTH=871200,AVERAGE-BANDWIDTH=761200,CODECS=\"avc1.4d401f,mp4a.40.2\",RESOLUTION=1280x720,FRAME-RATE=25.000\r\nlive_500.m3u8`"
      },
      {
        "user": "newtestpage",
        "created_at": "2020-03-16T15:06:09Z",
        "body": "I changed the renderindex to 0 and get answer . Thanks"
      }
    ]
  },
  {
    "number": 7088,
    "title": "Is there a way to get content length in bytes of media before playing?",
    "created_at": "2020-03-15T08:34:46Z",
    "closed_at": "2020-05-03T11:35:11Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7088",
    "body": "### [REQUIRED] Searched documentation and issues\r\nGoogle, Issues\r\n\r\n### [REQUIRED] Question\r\nIs there a way to get content length of media before playing?\r\n\r\nThanks",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7088/comments",
    "author": "tuesda",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2020-03-15T12:03:16Z",
        "body": "Not directly from the player, but for web based media you should be able to do a regular HEAD HTTP request to get this information, if you want it."
      }
    ]
  },
  {
    "number": 7073,
    "title": "GvrAudioProcessor is deprecated but needed.",
    "created_at": "2020-03-12T07:58:24Z",
    "closed_at": "2020-05-07T09:31:45Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7073",
    "body": "I'd like to implement spatial sound with ExoPlayer in my project and I found that there's an `ExoPlayer GVR extension` which provides `GvrAudioProcessor` that I can use to make it. But I've realized that it is already deprecated.\r\nIs there any other AudioProcessor that is available to implement as `GvrAudioProcessor` which can provide the rendering of 360 spatial sound in ExoPlayer? Any substitutions? or there might be a need of some minor modifications when overriding `buildAudioProcessors()` ?\r\n\r\nPlease help me figure this out if you have some ideas. Thanks a lot!",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7073/comments",
    "author": "lewwns",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2020-03-12T09:35:41Z",
        "body": "I'm afraid we don't have a replacement for this at the moment, though I think it should still work in the current release."
      }
    ]
  },
  {
    "number": 7062,
    "title": "Playback retry with tokenised DRM info",
    "created_at": "2020-03-09T12:38:44Z",
    "closed_at": "2020-04-17T17:29:11Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7062",
    "body": "### [REQUIRED] Searched documentation and issues\r\nI had a look into SimpleExoPlayer.retry() method.\r\n\r\n### [REQUIRED] Question\r\n\r\nI'm playing Dash + Widevine streams on a CDN using ExoPlayer 2.11.1  \r\n\r\nWhen starting a stream playback:\r\n1. The application is requesting an the CDN streamer final uri to the load balancer\r\n2. The application is requesting a tokenised DRM uri to the service platform\r\n3. The application use DRM uri to create a HttpMediaDrmCallBack and build a DrmSessionManager\r\n4. The application use stream final uri + DrmSessionManager to build a DashMediaSource\r\n5. This DashMediaSource is used to prepare the SimpleExoPlayer instance\r\n6. As soon as the player request the DRM uri, this uri is not valid anymore\r\n\r\nWhen a CDN streamer fails to deliver the stream, I'm retrying the playback on another CDN  streamer like this:\r\n1. The application is catching the ExoPlaybackException.TYPE_SOURCE error as soon as the CDN stream fails\r\n2. The application is request a new CDN streamer final uri to the load balancer\r\n3. The application is requesting a new tokenised DRM uri to the service platform\r\n4. The application use DRM uri to create a HttpMediaDrmCallBack and build a DrmSessionManager\r\n5. The application use stream final uri + DrmSessionManager to build a DashMediaSource\r\n6. This new DashMediaSource is used to prepare the SimpleExoPlayer instance **without reseting position and state**\r\n\r\nFrom my tests, it works pretty well, but I'm wondering if there is a cleaner way to do this same or part of this job on ExoPlayer side rather than on application side.\r\nMy main concern is on step 3 which could be avoided if player was reusing the previous descrambling data instead of requesting an expired DRM uri at step 6.\r\n\r\nThanks for your help. ",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7062/comments",
    "author": "xirac",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2020-03-12T13:22:21Z",
        "body": "It sounds as if you can cut this process short with injecting a custom `DataSource` in the `HttpMediaDrmCallback` passed to the `DefaultDrmSessionManager`.\r\n\r\nThis custom `DataSource` will be used every time a key or provisioning request is sent. So if your uris become invalid, it makes sense to just use another uri the next time a request is started. This could be an automatic retry for example that happens even before step 1 (catching the catching the ExoPlaybackException.TYPE_SOURCE error). You can probably use a `ResolvingDataSource` for that and handle all the uri resolution in the `resolve` method.  Note that you'll need to provide some custom URI as the drmLicenseUri to pass in all metadata that your `Resolver` needs to resolve to the actual uri, or just use the request properties to pass required metadata around.\r\n\r\nIf you do this, then you can also just use `player.retry()` because the `DataSource` takes care of resolving the Uri.\r\n\r\nAside: The first step above (The application is requesting an the CDN streamer final uri to the load balancer) can also be handled in the same way. You can pass a media identifier to DashMediaSource (\"myscheme://mediaId=34456\") and then use a `ResolvingDataSource` to resolve to the actual streamer URI when needed."
      },
      {
        "user": "tonihei",
        "created_at": "2020-04-17T17:29:11Z",
        "body": "Assuming the question was answered and closing the issue. If not, please reopen."
      }
    ]
  },
  {
    "number": 7058,
    "title": "ffmpeg Extension for x86_64",
    "created_at": "2020-03-06T20:10:02Z",
    "closed_at": "2020-03-09T16:44:35Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7058",
    "body": "Hello,\r\n\r\nI read all the manuals and issues regarding building the ffmpeg extension for various ABI.\r\nI'm able to build it a get it working for armeabi-v7a, arm64-v8a, x86.\r\nHowever, I can't get it working for x86_64 platforms...\r\n\r\nCan you guide me please on how should I modify `build_ffmpeg.sh` to get this working?\r\n\r\nThanks \r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7058/comments",
    "author": "krok55",
    "comments": [
      {
        "user": "krocard",
        "created_at": "2020-03-09T16:32:13Z",
        "body": "I tried replacing `x86` and `i686` by `x86_64` in `build_ffmpeg.sh`:\r\n```\r\n./configure \\\r\n    --libdir=android-libs/x86_64 \\\r\n    --arch=x86_64 \\\r\n    --cpu=x86_64 \\\r\n    --cross-prefix=\"${TOOLCHAIN_PREFIX}/x86_64-linux-android16-\" \\\r\n    --nm=\"${TOOLCHAIN_PREFIX}/x86_64-linux-android-nm\" \\\r\n    --strip=\"${TOOLCHAIN_PREFIX}/x86_64-linux-android-strip\" \\\r\n    --extra-ldexeflags=-pie \\\r\n    --disable-asm \\\r\n    ${COMMON_OPTIONS}\r\n```\r\nand it seems to build fine. Please confirm that it solve your issue. I'll then update `build_ffmpeg.sh` to support `x86_64` officially."
      },
      {
        "user": "krocard",
        "created_at": "2020-03-09T16:44:29Z",
        "body": "I went on and merged the x86_64. Please reopen the bug if there is an issue with my change."
      }
    ]
  },
  {
    "number": 7050,
    "title": "Why adaptive track selection selects over download limit?",
    "created_at": "2020-03-05T12:21:47Z",
    "closed_at": "2020-04-09T01:17:28Z",
    "labels": [
      "question",
      "need more info",
      "stale",
      "closed-by-bot"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7050",
    "body": "I play dash live stream on edge.  The stream has below traks:\r\n```\r\nD/ExoPlayerAdapter: getFormatsFromTrackGroups groupIndex=0, trackIndex=0 Format(avc1_1000000=11, null, video/mp4, video/avc, avc1.4d401f, 1000000, null, [1024, 576, 1.0], [-1, -1])\r\nD/ExoPlayerAdapter: getFormatsFromTrackGroups groupIndex=0, trackIndex=1 Format(avc1_2000000=10, null, video/mp4, video/avc, avc1.4d401f, 2000000, null, [1280, 720, 1.0], [-1, -1])\r\nD/ExoPlayerAdapter: getFormatsFromTrackGroups groupIndex=0, trackIndex=2 Format(avc1_5500000=9, null, video/mp4, video/avc, avc1.4d4029, 5500000, null, [1920, 1080, 1.0], [-1, -1])\r\nD/ExoPlayerAdapter: getFormatsFromTrackGroups groupIndex=0, trackIndex=0 Format(mp4a_96000_lav=5, null, audio/mp4, audio/mp4a-latm, mp4a.40.2, 96000, lv, [-1, -1, -1.0], [2, 48000])\r\n```\r\nThe adaptive track selection is enabled:\r\n```\r\nval trackSelector = DefaultTrackSelector(AdaptiveTrackSelection.Factory())\r\nExoPlayerFactory.newSimpleInstance(\r\n            context,\r\n            DefaultRenderersFactory(context),\r\n            trackSelector,\r\n            DefaultLoadControl\r\n                .Builder()\r\n                .setAllocator(DefaultAllocator(true, C.DEFAULT_BUFFER_SEGMENT_SIZE * 512))\r\n                .createDefaultLoadControl(),\r\n            defaultDrmSessionManager\r\n        )\r\n```\r\nBut on router I set limit to 5M\r\nso adaptive select should choose track with bitrate=2000000 but I observe that it switch between\r\n5.5M and 2M\r\n\r\nSee logs:\r\n``` \r\n13:17:45.263 D/:  onVideoDataChanged DiagVideoData(videoTrackId=avc1_2000000=10, videoResolution=1280x720, videoThroughput=2000000)\r\n 13:17:53.243 D/:  onVideoDataChanged DiagVideoData(videoTrackId=avc1_5500000=9, videoResolution=1920x1080, videoThroughput=5500000)\r\n 13:17:57.251 D/:  onVideoDataChanged DiagVideoData(videoTrackId=avc1_2000000=10, videoResolution=1280x720, videoThroughput=2000000)\r\n 13:18:05.253 D/:  onVideoDataChanged DiagVideoData(videoTrackId=avc1_5500000=9, videoResolution=1920x1080, videoThroughput=5500000)\r\n 13:18:09.251 D/:  onVideoDataChanged DiagVideoData(videoTrackId=avc1_2000000=10, videoResolution=1280x720, videoThroughput=2000000)\r\n 13:18:13.250 D/:  onVideoDataChanged DiagVideoData(videoTrackId=avc1_1000000=11, videoResolution=1024x576, videoThroughput=1000000)\r\n 13:18:17.133 D/:  onVideoDataChanged DiagVideoData(videoTrackId=avc1_5500000=9, videoResolution=1920x1080, videoThroughput=5500000)\r\n 13:18:21.263 D/:  onVideoDataChanged DiagVideoData(videoTrackId=avc1_2000000=10, videoResolution=1280x720, videoThroughput=2000000)\r\n 13:18:37.250 D/:  onVideoDataChanged DiagVideoData(videoTrackId=avc1_1000000=11, videoResolution=1024x576, videoThroughput=1000000)\r\n 13:18:41.125 D/:  onVideoDataChanged DiagVideoData(videoTrackId=avc1_5500000=9, videoResolution=1920x1080, videoThroughput=5500000)\r\n 13:18:49.250 D/:  onVideoDataChanged DiagVideoData(videoTrackId=avc1_2000000=10, videoResolution=1280x720, videoThroughput=2000000)\r\n 13:18:53.245 D/:  onVideoDataChanged DiagVideoData(videoTrackId=avc1_5500000=9, videoResolution=1920x1080, videoThroughput=5500000)\r\n 13:18:57.271 D/:  onVideoDataChanged DiagVideoData(videoTrackId=avc1_2000000=10, videoResolution=1280x720, videoThroughput=2000000)\r\n 13:19:05.250 D/:  onVideoDataChanged DiagVideoData(videoTrackId=avc1_5500000=9, videoResolution=1920x1080, videoThroughput=5500000)\r\n 13:19:09.261 D/:  onVideoDataChanged DiagVideoData(videoTrackId=avc1_2000000=10, videoResolution=1280x720, videoThroughput=2000000)\r\n``` \r\n\r\nIt is expected behavior?  It is possible to fix to max. in that case 2M",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7050/comments",
    "author": "luna-vulpo",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2020-03-12T12:30:23Z",
        "body": "> But on router I set limit to 5M\r\n\r\nIt's a bit unclear what this is doing exactly. It looks like your adaptive selection is cycling through the available formats very quickly (every couple of seconds). Does the selection behave normal when you don't set this limit in your router?"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2020-04-01T01:08:00Z",
        "body": "<!-- event: mark-stale -->\nHey @luna-vulpo. We need more information to resolve this issue but there hasn't been an update in 14 weekdays. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2020-04-09T01:17:27Z",
        "body": "<!-- event: close-stale -->\nSince there haven't been any recent updates here, I am going to close this issue.\n\n@luna-vulpo if you're still experiencing this problem and want to continue the discussion just leave a comment here and we are happy to re-open this."
      },
      {
        "user": "luna-vulpo",
        "created_at": "2020-04-14T08:08:50Z",
        "body": "Only for update. I finally found. The issue occurs on live edge. So app gets many 404 and blacklist track for a while in consequence excluded this track form selection. Solution was add a little bigger delay to edge which avoided getting 404."
      }
    ]
  },
  {
    "number": 7049,
    "title": "In repeat mode, how do I know to play once",
    "created_at": "2020-03-05T11:36:12Z",
    "closed_at": "2020-03-19T08:43:43Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7049",
    "body": "How do I do it? thx",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7049/comments",
    "author": "ventsea",
    "comments": [
      {
        "user": "krocard",
        "created_at": "2020-03-09T16:26:16Z",
        "body": "I'm sorry but I do not understand what you are trying to achieve. Are you trying to programmatically know how many time a track in repeat mode was played?"
      },
      {
        "user": "xinboljy",
        "created_at": "2020-03-11T11:53:43Z",
        "body": "So,How to know how many time a track in repeat mode was played? @krocard "
      },
      {
        "user": "tonihei",
        "created_at": "2020-03-12T11:30:27Z",
        "body": "You can listen to `onPositionDiscontinuity` with reason `PERIOD_TRANSITION` to find out when it's repeating. And then count yourself. "
      },
      {
        "user": "xinboljy",
        "created_at": "2020-03-19T08:19:29Z",
        "body": "@tonihei thanks"
      }
    ]
  },
  {
    "number": 7048,
    "title": "DRM Widevine L1 HDCP - Offline ",
    "created_at": "2020-03-05T08:38:48Z",
    "closed_at": "2020-03-26T08:37:54Z",
    "labels": [
      "question",
      "need more info"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7048",
    "body": "Hi, I'm trying to implement the download of DRM-protected content on the demo app.\r\nDownloading and playing a Widevine L3 content works correctly while for the same content but with Widevine L1 HDCP protection I can download it but when I try to play it I have the following exception:\r\n\r\n```\r\n2020-03-05 09:15:48.599 26489-27082/com.google.android.exoplayer2.demo E/ExoPlayerImplInternal: Source error.\r\n    com.google.android.exoplayer2.drm.DrmSession$DrmSessionException: com.google.android.exoplayer2.drm.KeysExpiredException\r\n        at com.google.android.exoplayer2.drm.DefaultDrmSession.onError(DefaultDrmSession.java:486)\r\n        at com.google.android.exoplayer2.drm.DefaultDrmSession.doLicense(DefaultDrmSession.java:379)\r\n        at com.google.android.exoplayer2.drm.DefaultDrmSession.acquire(DefaultDrmSession.java:271)\r\n        at com.google.android.exoplayer2.drm.DefaultDrmSessionManager.acquireSession(DefaultDrmSessionManager.java:536)\r\n        at com.google.android.exoplayer2.source.SampleQueue.onFormatResult(SampleQueue.java:795)\r\n        at com.google.android.exoplayer2.source.SampleQueue.readSampleMetadata(SampleQueue.java:563)\r\n        at com.google.android.exoplayer2.source.SampleQueue.read(SampleQueue.java:327)\r\n        at com.google.android.exoplayer2.source.chunk.ChunkSampleStream.readData(ChunkSampleStream.java:372)\r\n        at com.google.android.exoplayer2.BaseRenderer.readSource(BaseRenderer.java:379)\r\n        at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.readToFlagsOnlyBuffer(MediaCodecRenderer.java:808)\r\n        at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.render(MediaCodecRenderer.java:709)\r\n        at com.google.android.exoplayer2.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:599)\r\n        at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:329)\r\n        at android.os.Handler.dispatchMessage(Handler.java:101)\r\n        at android.os.Looper.loop(Looper.java:164)\r\n        at android.os.HandlerThread.run(HandlerThread.java:65)\r\n     Caused by: com.google.android.exoplayer2.drm.KeysExpiredException\r\n        at com.google.android.exoplayer2.drm.DefaultDrmSession.doLicense(DefaultDrmSession.java:379) \r\n        at com.google.android.exoplayer2.drm.DefaultDrmSession.acquire(DefaultDrmSession.java:271) \r\n        at com.google.android.exoplayer2.drm.DefaultDrmSessionManager.acquireSession(DefaultDrmSessionManager.java:536) \r\n        at com.google.android.exoplayer2.source.SampleQueue.onFormatResult(SampleQueue.java:795) \r\n        at com.google.android.exoplayer2.source.SampleQueue.readSampleMetadata(SampleQueue.java:563) \r\n        at com.google.android.exoplayer2.source.SampleQueue.read(SampleQueue.java:327) \r\n        at com.google.android.exoplayer2.source.chunk.ChunkSampleStream.readData(ChunkSampleStream.java:372) \r\n        at com.google.android.exoplayer2.BaseRenderer.readSource(BaseRenderer.java:379) \r\n        at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.readToFlagsOnlyBuffer(MediaCodecRenderer.java:808) \r\n        at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.render(MediaCodecRenderer.java:709) \r\n        at com.google.android.exoplayer2.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:599) \r\n        at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:329) \r\n        at android.os.Handler.dispatchMessage(Handler.java:101) \r\n        at android.os.Looper.loop(Looper.java:164) \r\n        at android.os.HandlerThread.run(HandlerThread.java:65) \r\n```\r\n\r\nSo I wanted to know if theoretically a content with Widevine L1 HDCP is downloadable and playable offline as for a Widevine L3 or if there are different limitations. If it is possible, what can this error depend on?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7048/comments",
    "author": "andrea157",
    "comments": [
      {
        "user": "seventhmoon",
        "created_at": "2020-03-10T00:36:33Z",
        "body": "No. You cannot play L1 protected content on L3 devices."
      },
      {
        "user": "andrea157",
        "created_at": "2020-03-10T09:33:21Z",
        "body": "Sorry I'm not explained well.\r\n\r\nThe device I'm using supports the L1 DRM.\r\n\r\nI have the same content in two versions: one with DRM HDCP L1 and the other with DRM L3. \r\n\r\nThe online reproduction of these 2 contents works correctly on my device instead by downloading them the version with DRM L3 works correctly offline while the HDCP L1 DRM version (which works online) does not work offline; I have no error while downloading the license and the content but when I play it I have the error above"
      },
      {
        "user": "andrea157",
        "created_at": "2020-03-10T16:39:25Z",
        "body": "Sorry, I solved this problem but now I have a new problem.\r\n\r\nWhen I call `offlineLicenseHelper.renewLicense(offlineLicenseKeySetId)`\r\n\r\nI have this error:\r\n\r\n```\r\nCaused by: com.google.android.exoplayer2.drm.DrmSession$DrmSessionException: android.media.MediaDrm$MediaDrmStateException: Failed to get key request\r\n        at com.google.android.exoplayer2.drm.DefaultDrmSession.onError(DefaultDrmSession.java:446)\r\n        at com.google.android.exoplayer2.drm.DefaultDrmSession.onKeysError(DefaultDrmSession.java:441)\r\n        at com.google.android.exoplayer2.drm.DefaultDrmSession.postKeyRequest(DefaultDrmSession.java:394)\r\n        at com.google.android.exoplayer2.drm.DefaultDrmSession.doLicense(DefaultDrmSession.java:350)\r\n        at com.google.android.exoplayer2.drm.DefaultDrmSession.acquire(DefaultDrmSession.java:176)\r\n        at com.google.android.exoplayer2.drm.DefaultDrmSessionManager.acquireSession(DefaultDrmSessionManager.java:437)\r\n        at com.google.android.exoplayer2.drm.OfflineLicenseHelper.openBlockingKeyRequest(OfflineLicenseHelper.java:273)\r\n        at com.google.android.exoplayer2.drm.OfflineLicenseHelper.blockingKeyRequest(OfflineLicenseHelper.java:258)\r\n        at com.google.android.exoplayer2.drm.OfflineLicenseHelper.renewLicense(OfflineLicenseHelper.java:205)\r\n        at it.rainet.download.drm.exo.ExoDrmRenewLicenseAsync.doInBackground(ExoDrmRenewLicenseAsync.kt:55)\r\n        at it.rainet.download.drm.exo.ExoDrmRenewLicenseAsync.doInBackground(ExoDrmRenewLicenseAsync.kt:21)\r\n        at android.os.AsyncTask$2.call(AsyncTask.java:333)\r\n        at java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n        at android.os.AsyncTask$SerialExecutor$1.run(AsyncTask.java:245) \r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162) \r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636) \r\n        at java.lang.Thread.run(Thread.java:764) \r\n     Caused by: android.media.MediaDrm$MediaDrmStateException: Failed to get key request\r\n        at android.media.MediaDrm.getKeyRequest(Native Method)\r\n        at com.google.android.exoplayer2.drm.FrameworkMediaDrm.getKeyRequest(FrameworkMediaDrm.java:144)\r\n        at com.google.android.exoplayer2.drm.DefaultDrmSession.postKeyRequest(DefaultDrmSession.java:391)\r\n        at com.google.android.exoplayer2.drm.DefaultDrmSession.doLicense(DefaultDrmSession.java:350) \r\n        at com.google.android.exoplayer2.drm.DefaultDrmSession.acquire(DefaultDrmSession.java:176) \r\n        at com.google.android.exoplayer2.drm.DefaultDrmSessionManager.acquireSession(DefaultDrmSessionManager.java:437) \r\n        at com.google.android.exoplayer2.drm.OfflineLicenseHelper.openBlockingKeyRequest(OfflineLicenseHelper.java:273) \r\n        at com.google.android.exoplayer2.drm.OfflineLicenseHelper.blockingKeyRequest(OfflineLicenseHelper.java:258) \r\n        at com.google.android.exoplayer2.drm.OfflineLicenseHelper.renewLicense(OfflineLicenseHelper.java:205) \r\n        at it.rainet.download.drm.exo.ExoDrmRenewLicenseAsync.doInBackground(ExoDrmRenewLicenseAsync.kt:55) \r\n        at it.rainet.download.drm.exo.ExoDrmRenewLicenseAsync.doInBackground(ExoDrmRenewLicenseAsync.kt:21) \r\n        at android.os.AsyncTask$2.call(AsyncTask.java:333) \r\n        at java.util.concurrent.FutureTask.run(FutureTask.java:266) \r\n        at android.os.AsyncTask$SerialExecutor$1.run(AsyncTask.java:245) \r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162) \r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636) \r\n        at java.lang.Thread.run(Thread.java:764)\r\n```"
      },
      {
        "user": "ojw28",
        "created_at": "2020-03-11T13:40:49Z",
        "body": "There isn't enough information here for us to help you. Please provide a full bug report as requested in the issue template, and also a more detailed description of exactly what you're doing."
      },
      {
        "user": "andrea157",
        "created_at": "2020-03-26T08:37:54Z",
        "body": "I solved. This ticket can be closed. Thanks"
      },
      {
        "user": "mseroczynski",
        "created_at": "2020-03-27T00:14:27Z",
        "body": "@andrea157 Could you please provide any tip on how to solve mentioned issue?"
      },
      {
        "user": "andrea157",
        "created_at": "2020-03-27T10:50:09Z",
        "body": "It was a server configuration issue"
      }
    ]
  },
  {
    "number": 7043,
    "title": "Player ignores LoadControl and buffering continues after pausing AAC Stream",
    "created_at": "2020-03-04T13:59:47Z",
    "closed_at": "2020-04-17T17:29:45Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7043",
    "body": "### Issue description\r\nExoPlayer instantiation and values used for DefaultLoadControl:\r\n```\r\nprivate val dataSourceFactory: DefaultDataSourceFactory by lazy {\r\n    DefaultDataSourceFactory(this, Util.getUserAgent(this, \"user-agent-test\"), null)\r\n}\r\n\r\nprivate val audioAttributes = AudioAttributes.Builder()\r\n    .setContentType(C.CONTENT_TYPE_MUSIC)\r\n    .setUsage(C.USAGE_MEDIA)\r\n    .build()\r\n\r\nprivate val exoPlayer: ExoPlayer by lazy {\r\n    val loadControl = DefaultLoadControl.Builder()\r\n        .setBufferDurationsMs(\r\n            1000,\r\n            2000,\r\n            500,\r\n            500\r\n        )\r\n        .setPrioritizeTimeOverSizeThresholds(true)\r\n        .createDefaultLoadControl()\r\n\r\n    ExoPlayerFactory.newSimpleInstance(this, DefaultTrackSelector(), loadControl).apply {\r\n        setAudioAttributes(this@MainActivity.audioAttributes, true)\r\n    }\r\n}\r\n```\r\n\r\nBuffering does not stop when setting\r\n`exoPlayer.playWhenReady = false`\r\n\r\nAndroid Studio Profiler shows the same network activity when `playWhenReady` is true.\r\nNetwork activity actually stops after ~3 minutes.\r\n\r\nSecond scenario:\r\nWhen network connection is disabled (stream was playing) there were around 30 to 80 (in some cases) seconds of audio available before it actually stopped.\r\n\r\n### Version of ExoPlayer being used\r\n2.11.3\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7043/comments",
    "author": "izpakla",
    "comments": [
      {
        "user": "krocard",
        "created_at": "2020-03-09T18:03:28Z",
        "body": "Toni, is this working as expected?"
      },
      {
        "user": "tonihei",
        "created_at": "2020-03-12T12:37:14Z",
        "body": "> Buffering does not stop when setting\r\nexoPlayer.playWhenReady = false\r\n\r\nThis part is definitely working as intended. If the player is paused, we still fill the buffer so that playback can resume as quickly as possible.\r\n\r\n> Second scenario:\r\nWhen network connection is disabled (stream was playing) there were around 30 to 80 (in some cases) seconds of audio available before it actually stopped.\r\n\r\nThe data of progressive streams is loaded in small chunks of 1 MB (by default) before checking whether more data needs to be loaded. 1 MB for a 128kbps AAC stream is about 65 seconds, so yes, this is working as expected too.\r\n\r\nIf you want the progressive stream loader to check more often, you can override the default value for this in the `ProgressiveMediaSource.Factory` by calling `setContinueLoadingCheckIntervalBytes` with your desired value."
      },
      {
        "user": "tonihei",
        "created_at": "2020-04-17T17:29:45Z",
        "body": "Assuming the question was answered and closing the issue. If not, please reopen."
      }
    ]
  },
  {
    "number": 7036,
    "title": "About MPEG-DASH behavior",
    "created_at": "2020-03-02T03:36:51Z",
    "closed_at": "2020-03-04T07:21:55Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7036",
    "body": "I would like to ask you a question about segmentation protocol.\r\nHow dows the player decide next getting segmentation?\r\nFor example, when I have this manifest which is shown below.\r\n\r\n```\r\n<S t=\"57042992\" d=\"2002\" r=\"445\"/>\r\n<S t=\"57945727\" d=\"2169\"/>\r\n<S t=\"57945760\" d=\"2136\"/>\r\n<S t=\"57945793\" d=\"2103\"/>\r\n<S t=\"57945827\" d=\"2069\"/>　★１\r\n<S d=\"2002\" r=\"3801\"/>　★２\r\n```\r\n\r\nI think that the next segmentation should be \"★１t + ★１d(57945827 + 2069)\", but actually it is \"★１t + ★２d(57945827 + 2002)\".\r\nIs it expected result?\r\n\r\nThanks.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7036/comments",
    "author": "hokar",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2020-03-02T14:18:06Z",
        "body": "Sorry, but I don't understand the question. I don't understand what \"★１t + ★１d(57945827 + 2069)\" and \"★１t + ★２d(57945827 + 2002)\" mean (e.g., what is the function `d`, and what are the stars). It's also unclear which segment you consider the \"current\" one when you ask what the next one is.\r\n\r\nPlease could you try and reformulate the question in a simpler to understand way? Thanks!"
      },
      {
        "user": "hokar",
        "created_at": "2020-03-04T07:21:51Z",
        "body": "Sorry, this issue was misunderstood.\r\nI'll let you know if there is anything. \r\nThanks."
      }
    ]
  },
  {
    "number": 7035,
    "title": "Download the track by URI",
    "created_at": "2020-03-01T14:05:34Z",
    "closed_at": "2020-04-14T01:07:58Z",
    "labels": [
      "question",
      "need more info",
      "stale",
      "closed-by-bot"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7035",
    "body": "I used this code for create DownloadService: \r\n\r\n    package ru.vldf.plawer.player\r\n    import android.app.Notification\r\n    import android.content.Context\r\n    import com.google.android.exoplayer2.database.ExoDatabaseProvider\r\n    import com.google.android.exoplayer2.offline.Download\r\n    import com.google.android.exoplayer2.offline.DownloadManager\r\n    import com.google.android.exoplayer2.offline.DownloadService\r\n    import com.google.android.exoplayer2.scheduler.PlatformScheduler\r\n    import com.google.android.exoplayer2.scheduler.Scheduler\r\n    import com.google.android.exoplayer2.ui.DownloadNotificationHelper\r\n    import com.google.android.exoplayer2.util.NotificationUtil\r\n    import com.google.android.exoplayer2.util.Util\r\n    import ru.vldf.plawer.R\r\n    \r\n    \r\n    class PlayerDownloadService : DownloadService(2, 100) {\r\n        private lateinit var notificationHelper: DownloadNotificationHelper\r\n        override fun getDownloadManager(): DownloadManager {\r\n            notificationHelper = DownloadNotificationHelper(this, \"ru.vldf.plawer\")\r\n            val databaseProvider = ExoDatabaseProvider(this);\r\n\r\n            val cacheSourceFactory = PlayerCacheSourceFactory.getInstance(this)\r\n            val manager = DownloadManager(\r\n                this,\r\n                databaseProvider,\r\n                cacheSourceFactory.simpleCache!!,\r\n                cacheSourceFactory\r\n            )\r\n            manager.maxParallelDownloads = 4\r\n            manager.addListener(TerminalStateNotificationHelper(this, notificationHelper))\r\n            return manager\r\n        }\r\n    \r\n        override fun getForegroundNotification(downloads: MutableList<Download>): Notification {\r\n            return notificationHelper\r\n                .buildProgressNotification(\r\n                    R.drawable.skip_previous_24px,\r\n                    null,\r\n                    \"downloading...\",\r\n                    downloads\r\n                )\r\n    \r\n        }\r\n    \r\n        override fun getScheduler(): Scheduler? {\r\n            return PlatformScheduler(this, 1)\r\n        }\r\n    \r\n    }\r\n    \r\n    private class TerminalStateNotificationHelper(\r\n        val context: Context, val notificationHelper: DownloadNotificationHelper) :\r\n        DownloadManager.Listener {\r\n        override fun onDownloadChanged(\r\n            manager: DownloadManager,\r\n            download: Download\r\n        ) {\r\n            val notification: Notification = when (download.state) {\r\n                Download.STATE_COMPLETED -> {\r\n                    notificationHelper.buildDownloadCompletedNotification(\r\n                        R.drawable.exo_icon_play,  /* contentIntent= */\r\n                        null,\r\n                        Util.fromUtf8Bytes(download.request.data)\r\n                    )\r\n                }\r\n                Download.STATE_FAILED -> {\r\n                    notificationHelper.buildDownloadFailedNotification(\r\n                        R.drawable.unknown_document,  /* contentIntent= */\r\n                        null,\r\n                        Util.fromUtf8Bytes(download.request.data)\r\n                    )\r\n                }\r\n                else -> {\r\n                    return\r\n                }\r\n            }\r\n            NotificationUtil.setNotification(context, 2, notification)\r\n        }\r\n    \r\n    }\r\n\r\nand this for start download:\r\n\r\n        val request = DownloadRequest(\r\n            track.key,  // unique id\r\n            DownloadRequest.TYPE_PROGRESSIVE,\r\n            Uri.parse(track.fileUrl),\r\n            listOf(),\r\n            track.key,\r\n            track.key.toByteArray()\r\n        )\r\n        DownloadService.sendAddDownload(\r\n            this,\r\n            PlayerDownloadService::class.java,\r\n            request,\r\n            false\r\n    )\r\n\r\nBut after this code starts, music doesn't downloading, notification doesn't updates and etc. If I try to debug this code, I see that `onDownloadChanged()` calls few times with diferent `download`. And statuses of all of them are `STATE_DOWNLOADING` or `STATE_QUEUED`. And after this code stops, I can see, that URIs adds to `my_app_path\\databases\\exoplayer_internal.db`, but cache files  of music don't apears in directories.\r\n\r\nI wanna save music to local storage by URIs. What I'am doing wrong?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7035/comments",
    "author": "vldF",
    "comments": [
      {
        "user": "krocard",
        "created_at": "2020-03-11T16:11:44Z",
        "body": "@marcbaechinger can I assign it to you as the owner of the download component? I do no see anything obviously wrong here."
      },
      {
        "user": "marcbaechinger",
        "created_at": "2020-03-16T13:23:49Z",
        "body": "Sorry for my late response. \r\n\r\nCan you please create a bug report right after you have tried to download a song? Then upload it here so I can investigate a bit more closely."
      },
      {
        "user": "google-oss-bot",
        "created_at": "2020-04-03T01:08:02Z",
        "body": "<!-- event: mark-stale -->\nHey @vldF. We need more information to resolve this issue but there hasn't been an update in 14 weekdays. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2020-04-14T01:07:58Z",
        "body": "<!-- event: close-stale -->\nSince there haven't been any recent updates here, I am going to close this issue.\n\n@vldF if you're still experiencing this problem and want to continue the discussion just leave a comment here and we are happy to re-open this."
      }
    ]
  },
  {
    "number": 7020,
    "title": "Displaying special characters from ISO-8859-16 subtitle srt file correctly.",
    "created_at": "2020-02-27T13:05:33Z",
    "closed_at": "2020-02-27T16:00:44Z",
    "labels": [
      "duplicate",
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7020",
    "body": "Any chance to get special characters from a srt subtitle file (Romanian Language  ISO-8859-16) to be displayed correctly. I do mention i load the srt subtitles from sd card",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7020/comments",
    "author": "iospoisson",
    "comments": [
      {
        "user": "Samrobbo",
        "created_at": "2020-02-27T16:00:44Z",
        "body": "This looks like a duplicate/similar issue to #3644 , which provides more information on all this. "
      }
    ]
  },
  {
    "number": 7016,
    "title": "Spontaneous Ad completion using IMA SDK extension",
    "created_at": "2020-02-26T10:33:40Z",
    "closed_at": "2020-04-01T01:08:03Z",
    "labels": [
      "question",
      "need more info",
      "stale",
      "closed-by-bot"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7016",
    "body": "Hello,\r\n\r\nI'm trying to make an app with ExoPlayer and its Ima Extension and I've encountered an issue:\r\n\r\n**Introduction**\r\nExoPlayer version: 2.11.1\r\nI have `MainActivity` with fragment that has `com.google.android.exoplayer2.ui.PlayerView` , this activity is locked to portrait mode.\r\nI have another activity called `VideoFullscreenActivity` which contains only `PlayerView`\r\nIf user requests fullscreen version of video I take the existing `SimpleExoPlayer` and assign it to the new view along with same `AdsMediaSource` , `ImaAdsLoader`, no new objects apart from the `PlayerView` itself are being created.\r\n\r\n**Issue**\r\nLet's say there are multiple pre-rolls and first Ad is playing. When I go to fullscreen, everything works as intended. Ad continues to play as you would expect. However when I go to fullscreen and last pre-roll is playing that ad gets \"skipped\" and I get callback that it was `AdEvent.AdEventType.COMPLETED` \r\n\r\nIs that intended behavior?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7016/comments",
    "author": "janhofman",
    "comments": [
      {
        "user": "jakub-tausk",
        "created_at": "2020-03-03T13:49:40Z",
        "body": "Hello Andrew,\r\n\r\nplease give advice.\r\n\r\nThank you"
      },
      {
        "user": "andrewlewis",
        "created_at": "2020-03-04T13:11:39Z",
        "body": "It sounds like you are switching between `PlayerView`s when transitioning between window/full-screen. The IMA SDK mostly runs its code in a `WebView` that gets inserted on top of the player output view (assuming you are using `PlayerView` as the `AdViewProvider` when creating the `AdsMediaSource`). I wonder whether the change of player view is causing the `WebView` running the IMA SDK to get destroyed, or the IMA SDK is becoming unhappy in some other way due to a visibility change.\r\n\r\nCould you try keeping the `ImaAdsLoader` but instantiating a new player and `AdsMediaSource` during the transition to see if that fixes it?\r\n\r\nTo make this as seamless as possible you could alternatively try making your own `FrameLayout` and passing that as the ad view group in a custom `AdsLoader.AdViewProvider`. The idea is to make sure IMA's web view doesn't get destroyed across the transition. This might require reorganizing the app to avoid the activity transition (so you can keep the same frame layout), so might not be feasible.\r\n\r\nThe behavior with an ad getting skipped across what is effectively backgrounding/resuming sounds like #4140, which will be fixed when the new ads managers have been released and are used by the extension, tracked by #6429."
      },
      {
        "user": "google-oss-bot",
        "created_at": "2020-03-24T01:07:43Z",
        "body": "<!-- event: mark-stale -->\nHey @janhofman. We need more information to resolve this issue but there hasn't been an update in 14 weekdays. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2020-04-01T01:08:02Z",
        "body": "<!-- event: close-stale -->\nSince there haven't been any recent updates here, I am going to close this issue.\n\n@janhofman if you're still experiencing this problem and want to continue the discussion just leave a comment here and we are happy to re-open this."
      }
    ]
  },
  {
    "number": 7012,
    "title": "DRM failure notifications / fallback support",
    "created_at": "2020-02-25T06:12:17Z",
    "closed_at": "2020-02-25T14:10:16Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/7012",
    "body": "### [REQUIRED] Use case description\r\nOur users devices have various levels of widevine support. When widevine fails, we fall back to other DRM methods (expressplay, clearkey),\r\n\r\nAs of 2.11 the way `ExoMediaDrm` is created has changed to be via a `Provider`, this has changed the way the errors are thrown and has made it awkward to implement DRM fallback (if I'm not missing something).\r\n\r\nEssentially there's a few issues:\r\n- `FrameworkMediaDrm.DEFAULT_PROVIDER` try/catches `UnsupportedDrmException` and returns a `DummyExoMediaDrm`. When this happens playback will continue without rendering the video (black screen) which as far as I can tell is undetectable.\r\n- If you implement your own `ExoMediaDrm.Provider` to remove the try/catch the exception is thrown in an uncatchable spot by the usual error handlers\r\n\r\nThe only solution I could find was using an `AppManagedProvider` and creating the `FrameworkMediaDrm.newInstance` at a predictable spot so we can capture the `UnsupportedDrmException` ourselves. But this opens us to leaking `ExoMediaDrm` instances, which is what the whole `ExoMediaDrm.Provider` deal was about.\r\n\r\n### Recipe to produce issue\r\n- Try to play widevine encrypted content on a device without widevine support (using FrameworkMediaDrm.DEFAULT_PROVIDER`), see screen go black\r\n- Alternatively, implement a `ExoMediaDrm.Provider` that always returns `DummyExoMediaDrm` and give it to `DefaultDrmSessionManager.Builder()` and see screen go black during playback with no notification\r\n- Alternatively again, implement a `ExoMediaDrm.Provider` that just throws an exception. See the app crash in a (as far as I can tell) uncatchable way rather than going through usual player error callbacks\r\n\r\n### Proposed solution\r\nAllow `UnsupportedDrmException` from a provider to bubble up like any other error. If the content is secure and the renderer fails because it can not be decrypted playback shouldn't continue.\r\n\r\nEssentially I want to be able to know that the DRM has failed and the secure content can not be played so I can try other methods / show the user an error instead of a black screen.\r\n\r\n### Alternatives considered\r\nMentioned above, but for now it's essentially reverting the functionality to pre `ExoMediaDrm.Provider` by using an `AppManagedProvider`. But this opens us to leaking `ExoMediaDrm` instances.\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/7012/comments",
    "author": "dbrain",
    "comments": [
      {
        "user": "AquilesCanta",
        "created_at": "2020-02-25T14:10:16Z",
        "body": ">  this has changed the way the errors are thrown and has made it awkward to implement DRM fallback\r\n\r\nAs you correctly point out in \"Alternatives considered\" you can use an `AppManagedProvider` to use exactly the same approach as before the introduction of `ExoMediaDrm.Provider`, so 2.11 shouldn't make anything awkward. You can still do things as before. \r\n\r\n> But this opens us to leaking ExoMediaDrm instances, which is what the whole ExoMediaDrm.Provider deal was about.\r\n\r\nIt's the way it was before 2.11. And the idea behind an `AppManagedProvider` is that the App takes care of MedaDrm resource management, as before 2.11.\r\n\r\n=========\r\n\r\n**Why is the proposed solution not the best option?**\r\n\r\nBecause that would prevent ExoPlayer from playing other variants in the same media that are supported. For example, if the stream has clear SD and widevine protected HD, if we don't surface the MediaDrm creation exception we can still play the SD tracks.\r\n\r\n=========\r\n\r\n**What's the solution then?**\r\n\r\nTo provide a bit of guidance, I'm assuming you want to check whether the device supports Widevine or not. I can think of many solutions of doing this:\r\n\r\n- The way the demo app does it.\r\n```\r\nif (Util.SDK_INT < 18) {\r\n      // DRM is unsupported on API < 18.\r\n    } else if (!MediaDrm.isCryptoSchemeSupported( /* DRM scheme, e.g. widevine */)) {\r\n      // DRM scheme unsupported. Depending on the scheme, worth reporting.\r\n    } else {\r\n      // We support DRM.\r\n    }\r\n```\r\n- Look for the current track selection information for UNSUPPORTED_DRM tracks.\r\n- If you **really** want to catch the MediaDrm instantiation exception, just provide a default-like provider and when catching an exception return the dummy provider (for the reasons explained above) but signal your app of the exception and do things as before.\r\n- Instantiate and release a MediaDrm in your app. This is most likely the worst option."
      }
    ]
  },
  {
    "number": 6998,
    "title": "Stop player at specific position in recyclerview",
    "created_at": "2020-02-19T13:37:00Z",
    "closed_at": "2020-03-19T01:07:50Z",
    "labels": [
      "question",
      "need more info",
      "stale",
      "closed-by-bot"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6998",
    "body": "I want to stop the exo player at a specific position in recyclerview. Current the exo player have this function:\r\n\r\n`videoPlayer.stop();`\r\nBut i want to stop player at specfic position something like :\r\n\r\n`videoPlayer.stopAt(2);`",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6998/comments",
    "author": "saadbzu",
    "comments": [
      {
        "user": "christosts",
        "created_at": "2020-02-20T11:36:38Z",
        "body": "In `videoPlayer.stopAt(2)`, is parameter `2` the playback position? If yes, then this is similar to the request of #5660. \r\n"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2020-03-11T01:07:28Z",
        "body": "<!-- event: mark-stale -->\nHey @saadbzu. We need more information to resolve this issue but there hasn't been an update in 14 weekdays. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2020-03-19T01:07:49Z",
        "body": "<!-- event: close-stale -->\nSince there haven't been any recent updates here, I am going to close this issue.\n\n@saadbzu if you're still experiencing this problem and want to continue the discussion just leave a comment here and we are happy to re-open this."
      }
    ]
  },
  {
    "number": 6992,
    "title": "Video Looping inside of Leanback UI",
    "created_at": "2020-02-19T04:14:06Z",
    "closed_at": "2020-02-20T20:46:36Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6992",
    "body": "I have an issue I trying to see if someone knows what maybe going wrong.  I have an app similar to the Video Looper by Braids Brain. Except I am using the Android Leanback UI. The Video Looper app seems to run without issue video after video, but my app will start to have audio issues then start jumping frames, then eventually will close Android Box will just go back to home screen.\r\n\r\nIt will normally work fine after restarting the box, but after about 15 minutes or so it will start having the same issues again. I am unable get a error log, because it be problem won't happen sometimes an hour or so later.\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6992/comments",
    "author": "jopolot",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2020-02-19T18:34:53Z",
        "body": "I don't think this has anything to do with your use of the Leanback UI. It sounds like the device just has an underlying problem at the platform level.\r\n\r\nWe've seen a lot of issues with what I'd describe as \"low end\" Android TV devices. You'll most likely need to report the issue to the device manufacturer."
      },
      {
        "user": "jopolot",
        "created_at": "2020-02-19T19:11:40Z",
        "body": "Yes, I understand your comment and what you mean, but The Video Looper App, by Brads Brain works well on the same Android Device, so I don't think the device is the problem. I will however see if I can track down the error code in hopes that it will reveal the issue whether device related or not. "
      },
      {
        "user": "ojw28",
        "created_at": "2020-02-20T18:23:17Z",
        "body": "I don't think that comparing your app to another is a good way of working out whether the issue is device related. You have no way of knowing how that other app is implemented, and there are all kinds of potential differences in the detail of exactly how different apps might make use of the underlying platform."
      },
      {
        "user": "jopolot",
        "created_at": "2020-02-20T20:46:36Z",
        "body": "Thanks for the feedback, I will continue to look at platform differences and issues, I did play it on my Fire TV, saw visual improvements, but didn't pick up certain Thumbnails on the app. Exoplayer itself is running fine, I have three different devices Fire TV 6.0, X96s, X96mini, will continue testing, trying to figure out best way to have program run properly, but since the program runs on different platforms, its obvious the Exoplayer itself is not the problem, so will close. "
      }
    ]
  },
  {
    "number": 6979,
    "title": "different mimeType between FlacExtractor and LibflacAudioRenderer",
    "created_at": "2020-02-15T04:13:10Z",
    "closed_at": "2020-02-17T14:28:56Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6979",
    "body": "Hello, I don't figure out that the mimeType is \"audio/raw\" in FlacExtractor of FLAC extension. However, the specific mimeType is \"audio/flac\" in LibflacAudioRenderer. As s result, LibflacAudioRenderer couldn't work for FlacExtractor.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6979/comments",
    "author": "xufuji456",
    "comments": [
      {
        "user": "kim-vde",
        "created_at": "2020-02-17T10:29:21Z",
        "body": "The `FlacExtractor` from the FLAC extension is not intended to be used with the `LibflacAudioRenderer` because the frames are decoded directly in the extractor and PCM data is therefore outputted. You have 2 possibilities:\r\n- use the `FlacExtractor` from the FLAC extension and render with `MediaCodecAudioRenderer`, or\r\n- use the (newly-released) `FlacExtractor` from the core library and render with any renderer able to decode FLAC frames (`MediaCodecAudioRenderer` from API 27+, `LibflacAudioRenderer`, `FfmpegAudioRenderer`)."
      },
      {
        "user": "xufuji456",
        "created_at": "2020-02-17T14:28:41Z",
        "body": "@kim-vde Thank you very much. I got it."
      }
    ]
  },
  {
    "number": 6972,
    "title": "how can we monitor for when an audio track has just completed in a ConcatenatingMediaSource ?",
    "created_at": "2020-02-13T06:08:55Z",
    "closed_at": "2020-02-13T14:20:04Z",
    "labels": [
      "duplicate",
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6972",
    "body": "Kind of struggling with this one. What we need to listen for / monitor - is when an audio track, that is in a ConcatenatingMediaSource (eg a list of 5 audio tracks), has just finished playing ? Is there an event for this, or a \"combo\" of events that we can monitor to know when this occurs ?\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6972/comments",
    "author": "SogoGolf",
    "comments": [
      {
        "user": "kim-vde",
        "created_at": "2020-02-13T14:20:04Z",
        "body": "Duplicate of #4707"
      }
    ]
  },
  {
    "number": 6962,
    "title": "[Flutter/video_player] AudioFlinger could not create track, status: -12",
    "created_at": "2020-02-10T19:59:17Z",
    "closed_at": "2020-03-06T02:07:31Z",
    "labels": [
      "question",
      "need more info",
      "stale",
      "closed-by-bot"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6962",
    "body": "### Issue description\r\ni'm using video_player package in flutter which uses ExoPlayer\r\nand each time you want to do seekTo any moment before the current position(moment) video gets loaded again from local file (obviously in this case the video is loaded from a local file)\r\n\r\neverything works fine but sometimes after like 15 20 times doing seekTo() , the video won't load again, and the widget is invisible completely (no blank screen I mean)\r\n\r\n(the app is being tested on an emulator , so the other issues that tracked this bug maybe different from this one) (i.e. #5480)\r\n\r\n### Reproduction steps\r\nis explained above.\r\n\r\n### Link to test content\r\nwill create a sample app for this if required.\r\n\r\n### A full bug report captured from the device\r\nEmailed.\r\n\r\n### Version of ExoPlayer being used\r\nSince this video_player package is using the ExoPlayer I'm not sure how I could find the ExoPlayer version.\r\n\r\n###  Device(s) and version(s) of Android being used\r\nApi 22\r\nAndroid-Emulator\r\n\r\n### What Console Printed Out\r\n<details>\r\n\r\n <summary>Console</summary>\r\n\r\n```\r\n[   +4 ms] I/ExoPlayerImpl( 9752): Init 971115b [ExoPlayerLib/2.9.6] [generic_x86_64, Android SDK built for x86_64, unknown, 22]\r\n[  +47 ms] I/OMXClient( 9752): Using client-side OMX mux.\r\n[  +12 ms] E/ACodec  ( 9752): [OMX.google.h264.decoder] storeMetaDataInBuffers failed w/ err -1010\r\n[  +50 ms] I/OMXClient( 9752): Using client-side OMX mux.\r\n[ +240 ms] E/AudioTrack( 9752): AudioFlinger could not create track, status: -12\r\n[   +3 ms] E/AudioTrack-JNI( 9752): Error -12 initializing AudioTrack\r\n[   +1 ms] E/android.media.AudioTrack( 9752): Error code -20 when initializing AudioTrack.\r\n[   +1 ms] E/ExoPlayerImplInternal( 9752): Playback error.\r\n[   +1 ms] E/ExoPlayerImplInternal( 9752): com.google.android.exoplayer2.ExoPlaybackException:\r\ncom.google.android.exoplayer2.audio.AudioSink$InitializationException: AudioTrack init failed: 0, Config(48000, 12, 48000)\r\n[   +1 ms] E/ExoPlayerImplInternal( 9752):      at\r\ncom.google.android.exoplayer2.audio.MediaCodecAudioRenderer.processOutputBuffer(MediaCodecAudioRenderer.java:646)\r\n[   +3 ms] E/ExoPlayerImplInternal( 9752):      at\r\ncom.google.android.exoplayer2.mediacodec.MediaCodecRenderer.drainOutputBuffer(MediaCodecRenderer.java:1355)\r\n[   +2 ms] E/ExoPlayerImplInternal( 9752):      at\r\ncom.google.android.exoplayer2.mediacodec.MediaCodecRenderer.render(MediaCodecRenderer.java:663)\r\n[   +2 ms] E/ExoPlayerImplInternal( 9752):      at\r\ncom.google.android.exoplayer2.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:529)\r\n[   +1 ms] E/ExoPlayerImplInternal( 9752):      at\r\ncom.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:300)\r\n[   +1 ms] E/ExoPlayerImplInternal( 9752):      at android.os.Handler.dispatchMessage(Handler.java:98)\r\n[   +2 ms] E/ExoPlayerImplInternal( 9752):      at android.os.Looper.loop(Looper.java:135)\r\n[   +1 ms] E/ExoPlayerImplInternal( 9752):      at android.os.HandlerThread.run(HandlerThread.java:61)\r\n[   +1 ms] E/ExoPlayerImplInternal( 9752): Caused by: com.google.android.exoplayer2.audio.AudioSink$InitializationException: AudioTrack\r\ninit failed: 0, Config(48000, 12, 48000)\r\n[   +1 ms] E/ExoPlayerImplInternal( 9752):      at\r\ncom.google.android.exoplayer2.audio.DefaultAudioSink.initializeAudioTrack(DefaultAudioSink.java:1128)\r\n[   +1 ms] E/ExoPlayerImplInternal( 9752):      at\r\ncom.google.android.exoplayer2.audio.DefaultAudioSink.initialize(DefaultAudioSink.java:532)\r\n[   +1 ms] E/ExoPlayerImplInternal( 9752):      at\r\ncom.google.android.exoplayer2.audio.DefaultAudioSink.handleBuffer(DefaultAudioSink.java:593)\r\n[   +3 ms] E/ExoPlayerImplInternal( 9752):      at\r\ncom.google.android.exoplayer2.audio.MediaCodecAudioRenderer.processOutputBuffer(MediaCodecAudioRenderer.java:640)\r\n[   +1 ms] E/ExoPlayerImplInternal( 9752):      ... 7 more\r\n```\r\n\r\n</details>",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6962/comments",
    "author": "Hassan-Fa",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2020-02-11T09:53:30Z",
        "body": "The cause seems to be \"02-10 22:46:58.227  1174  6088 E AudioFlinger: not enough memory for AudioTrack size=65600\".\r\n\r\nCan you reproduce this on a real device? If not, it may be an emulator bug. If yes, please provide a bug report taken from the device. Thanks."
      },
      {
        "user": "google-oss-bot",
        "created_at": "2020-02-26T02:08:57Z",
        "body": "<!-- event: mark-stale -->\nHey @Hassan-Fa. We need more information to resolve this issue but there hasn't been an update in 14 days. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2020-03-06T02:07:30Z",
        "body": "<!-- event: close-stale -->\nSince there haven't been any recent updates here, I am going to close this issue.\n\n@Hassan-Fa if you're still experiencing this problem and want to continue the discussion just leave a comment here and we are happy to re-open this."
      },
      {
        "user": "ptvandi",
        "created_at": "2020-04-24T17:59:19Z",
        "body": "I had this issue when running the Android Studio emulator. To resolve my problem, I bumped the RAM in the AVD manager (just guessed the amount, went from about 1.5GB to 3GB)."
      }
    ]
  },
  {
    "number": 6961,
    "title": "Always keep showing next and previous button in notification",
    "created_at": "2020-02-10T12:17:59Z",
    "closed_at": "2020-02-12T14:23:02Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6961",
    "body": "How could I keep showing the next and previous button on the ExoPlayer notification when there is just one MediaSource?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6961/comments",
    "author": "squti",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2020-02-10T16:17:09Z",
        "body": "You could override `PlayerNotificationManager.getActions(Player player)` and return the list of actions you want to put into the notification at a given player state. Please read the Java doc of that method which gives some more details.\r\n\r\nIf the user taps the 'previous' or 'next' button in the notification, the call is delegated to `controlDispatcher.dispatchPrevious(Player player)` or `controlDispatcher.dispatchNext(Player player)` respectively. You can set your own `ControlDispatcher` (subclass `DefaultControlDispatcher` is easiest) to handle these actions.\r\n\r\nActually you have to use your own `ControlDispatcher` because the default control dispatcher can't do something sensible with a 'next' operation when there is only one single item in the playlist. I reckon you want to go to the start of the item again, but then it's the same what the 'previous' button would do which is there by default.\r\n\r\nBesides all this: have you considered using custom actions which allows you to add your own button at the end of the standard actions? This provides a way to add custom button without the hassle of overriding `getActions`. Worth investigating in case you haven't yet."
      }
    ]
  },
  {
    "number": 6959,
    "title": "Calculating total playback time of a media.",
    "created_at": "2020-02-10T11:25:57Z",
    "closed_at": "2020-02-11T11:05:47Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6959",
    "body": "**Scenario**: \r\nI want to calculate the total playback time for a media until the user switches to a different media by going to the next or previous media. \r\n\r\n**Problem**:\r\nI have covered all the possible scenarios except one, when the user switches to the next track/media after playing the media for a while, I'm not able to get the **playbackEndTime**. \r\nWhere **playbackEndTime** is the last known position from where the media was discontinued.\r\n\r\nIn this case the `EventTime.currentPlaybackPositionMs` is always 0 in every Callbacks of the AnalyticsListener. \r\n\r\nPlease correct me if my approach is not appropriate. ",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6959/comments",
    "author": "VivekBhalodiya",
    "comments": [
      {
        "user": "kim-vde",
        "created_at": "2020-02-10T15:15:05Z",
        "body": "What implementation of `AnalyticsListener` are you using? Please provide the code if it is a custom one."
      },
      {
        "user": "VivekBhalodiya",
        "created_at": "2020-02-11T08:48:50Z",
        "body": "```\r\nclass ExoPlayerAnalyticsListener : AnalyticsListener, EventListener {\r\n  private var isSeekStarted: Boolean = false\r\n  private var hasTracksChanged: Boolean = false\r\n  private var playbackStartTime: Long = 0L\r\n  private var playbackEndTime: Long = 0L\r\n  private var isPlayingTime: Long = 0L\r\n  private var totalPlayBack: Long = 0L\r\n  private var currentMediaId: String? = null\r\n  private var window = Window()\r\n\r\n  override fun onPositionDiscontinuity(\r\n    eventTime: EventTime,\r\n    reason: Int\r\n  ) {\r\n    playbackStartTime = eventTime.currentPlaybackPositionMs\r\n  }\r\n\r\n  override fun onTracksChanged(\r\n    eventTime: EventTime,\r\n    trackGroups: TrackGroupArray,\r\n    trackSelections: TrackSelectionArray\r\n  ) {\r\n    hasTracksChanged = true\r\n    // I want the currentPlaybackPositionMs here \r\n  }\r\n\r\n  override fun onSeekStarted(eventTime: EventTime) {\r\n    isSeekStarted = true\r\n    playbackEndTime = eventTime.currentPlaybackPositionMs\r\n    calculatePlayback()\r\n    isSeekStarted = false\r\n  }\r\n\r\n  override fun onPlayerStateChanged(\r\n    eventTime: EventTime,\r\n    playWhenReady: Boolean,\r\n    playbackState: Int\r\n  ) {\r\n     // eventTime.currentPlaybackPositionMs is 0 when track is changed\r\n  }\r\n\r\n  override fun onIsPlayingChanged(\r\n    eventTime: EventTime,\r\n    isPlaying: Boolean\r\n  ) {\r\n    isPlayingTime = eventTime.currentPlaybackPositionMs\r\n    when {\r\n      isPlaying -> playbackStartTime = isPlayingTime\r\n      else -> playbackEndTime = isPlayingTime\r\n    }\r\n    if (isSeekStarted.not())\r\n      calculatePlayback()\r\n  }\r\n\r\n  private fun calculatePlayback() {\r\n    if (hasTracksChanged) {\r\n      hasTracksChanged = false\r\n      resetTrackers()\r\n      return\r\n    }\r\n\r\n    if (playbackStartTime == 0L) {\r\n      //Media is being played from start\r\n      totalPlayBack += playbackEndTime\r\n    } else if (playbackEndTime > playbackStartTime) {\r\n      totalPlayBack += abs(playbackEndTime - playbackStartTime)\r\n    }\r\n  }\r\n\r\n  private fun resetTrackers() { //.. }\r\n}\r\n```"
      },
      {
        "user": "tonihei",
        "created_at": "2020-02-11T09:47:17Z",
        "body": "In case you are using ExoPlayer 2.11, you can use add `PlaybackStatsListener` to retrieve `PlaybackStats` for each playlist item that has a method called `getTotalPlayTimeMs()`. Sounds as if you are trying to calculate this value. "
      },
      {
        "user": "VivekBhalodiya",
        "created_at": "2020-02-11T11:05:47Z",
        "body": "God bless `PlaybackStatsListener`\r\n`getTotalPlayTimeMs()` This is what exactly I've been looking for.\r\nThank you @tonihei  and @kim-vde  for your support. Really appreciate your time. "
      }
    ]
  },
  {
    "number": 6939,
    "title": "How to stream single URL content into two surfaces?It should be sync in both.",
    "created_at": "2020-01-31T08:07:49Z",
    "closed_at": "2020-03-12T18:11:00Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6939",
    "body": "\r\nRequirement:\r\nPlay same video content(one URL) into multiple or two surfaces using single Exo  player instance.\r\nBoth the surfaces should sync in video playing.\r\nHow can i achieve using exo player?Is there any limitations on this?\r\n\r\nIt is very similar to switching surfaces but here rendering into multiple surfaces the same content.\r\nPlease advice on feasibility or performance side effects.\r\nKindly suggest on this.\r\n\r\nRegards,\r\nRK\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6939/comments",
    "author": "iamradhakrishna",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2020-01-31T17:35:59Z",
        "body": "This is quite difficult to achieve because a `MediaCodec` instance is tied to a single `Surface`. If I remember correctly, the solution is to render it to a texture, which you can then render to multiple places, but it's quite complicated to get this right."
      }
    ]
  },
  {
    "number": 6933,
    "title": "How to get to know when user clicks any of the play back controls which is managerd by playerControlView?",
    "created_at": "2020-01-30T08:15:27Z",
    "closed_at": "2020-01-30T12:49:15Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6933",
    "body": "I want to report events to when user clicked on any of the playback controls. I am using Player Control view managed by exo player for all playback functionalities. I am not sure how to get a callback when user clicked on any playback control?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6933/comments",
    "author": "ajay-aravind",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2020-01-30T12:49:15Z",
        "body": "Depending on what you're trying to do, you could try setting a `ControlDispatcher` via `PlayerView.setControlDispatcher`. The methods of this component are called whenever an operation is performed on the player as a result of a UI interaction. Note that if you do set a `ControlDispatcher`, then it's also responsible for actually performing the operations. Hence your implementation should probably report what you want to report, and then call through to an instance of the `DefaultControlDispatcher` implementation.\r\n\r\nIf the suggestion above doesn't give you the granularity you need, and you really do want to report events for every click and know the specific control that was clicked, then this is not something supported by the library. You'd probably need to fork the UI components and use them as the starting point for your own custom implementation if you this functionality is important to you."
      },
      {
        "user": "ajay-aravind",
        "created_at": "2020-01-30T13:16:14Z",
        "body": "so, there is no way from the library to know if the play/forward/backward is clicked?"
      },
      {
        "user": "ojw28",
        "created_at": "2020-01-30T13:30:24Z",
        "body": "No; this is not something we support out of the box."
      },
      {
        "user": "tonihei",
        "created_at": "2020-01-30T14:09:25Z",
        "body": "Not sure if you aware, but you get events for all these user interactions by adding an `EventListener` to the `Player`. This should already cover most of the required events:\r\n```\r\nplayer.addEventListener(new Player.EventListener() {\r\n  boolean previousPlayWhenReady = false;\r\n  int previousWindowIndex = 0;\r\n\r\n  @Override\r\n  public void onPlayerStateChanged(boolean playWhenReady, int state) {\r\n    if (previousPlayWhenReady == false && playWhenReady == true) {  \r\n      // Play clicked.\r\n    }\r\n    else if (previousPlayWhenReady == true && playWhenReady == false) {\r\n      // Pause clicked.\r\n    }\r\n    previousPlayWhenReady = playWhenReady;\r\n  }\r\n \r\n  @Override\r\n  public void onPositionDiscontinuity(@Player.DiscontinuityReason int reason) {\r\n    if (reason == DISCONTINUITY_REASON_SEEK\r\n        && previousWindowIndex + 1 == player.getCurrentWindowIndex()) {\r\n      // Next clicked.\r\n    }\r\n    if (reason == DISCONTINUITY_REASON_SEEK\r\n        && previousWindowIndex - 1 == player.getCurrentWindowIndex()) {\r\n      // Previous clicked.\r\n    }\r\n    previousWindowIndex = player.getCurrrentWindowIndex();\r\n  }\r\n\r\n  @Override\r\n  public void onTimelineChanged(Timeline timeline, int reason) {\r\n    previousWindowIndex = player.getCurrrentWindowIndex();\r\n  }\r\n});\r\n```\r\n\r\nThe only potential problem is that the same events are triggered if you call `player.setPlayWhenReady(...)`, `player.next()` or `player.previous()` in code without UI interaction."
      }
    ]
  },
  {
    "number": 6918,
    "title": "Player restart live dash stream after it ends",
    "created_at": "2020-01-27T14:59:25Z",
    "closed_at": "2020-01-27T18:07:24Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6918",
    "body": "Hello, I've been testing exoplayer to play live dash streams. So far I can play them without any problem, execept when the live event ends and manifest file changes to a different one. I managed to keep a track of manifest urls but it seems exoplayer just loads first live event and neglets to keep updating infos contained on new manifest file. I am not familiar with java but I already tried these lines on PlayerActivity.java\r\n`     player.seekTo(0);\r\n      player.setPlayWhenReady(true);`\r\n\r\nSo, lets say a live event has 30min duration. Exoplayer plays it until it ends and when it ends it pauses and when I click play it start the same event but not the new one that is already started and changed on manifest file. My solution would be restart the stream once it ends its 30min and then gets to read new manifest file and imediatelly plays new live event.\r\n\r\nI've set my manifest files headers with php to no-cache. Is this the right approach? I would like to have a little help here on how to do this.\r\n\r\nThanks in advance.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6918/comments",
    "author": "abellybeer",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2020-01-27T15:07:00Z",
        "body": "It's not a valid manifest transformation to replace one manifest file with another at the same URL. If they're different events they should have different URLs."
      },
      {
        "user": "abellybeer",
        "created_at": "2020-01-27T15:11:39Z",
        "body": "Hey @ojw28! Thanks for your answer! So the best approach for this would be having a static manifest.mpd URL that redirects to different manifest.mpd accordinly to live events?\r\n So when a live event ends, exoplayer will try to download static manifest.mpd that will redirect him to a dinamyc manifest.mpd\r\n\r\nIs that how I should do?\r\n"
      },
      {
        "user": "ojw28",
        "created_at": "2020-01-27T16:01:53Z",
        "body": "Two separate live events are two separate pieces of media. You need to re-prepare the player with the new piece of media, which should also have a different URL. Where you get the URLs from is up to you as a service provider to resolve. Typically you'd provide a service that your application can query to obtain the live event URLs to play."
      },
      {
        "user": "abellybeer",
        "created_at": "2020-01-27T17:00:05Z",
        "body": "So, it will be better if I load media.exolist.json externally? Because I can put new links there everytime they update. But my question is, once I open one live event, will exoplayer know that particular stream name had his manifest.mpd changed to a different one? This is what I am struggling to solve.\r\nI want exoplayer to know when theres a new url to load a keep streaming without stop."
      },
      {
        "user": "ojw28",
        "created_at": "2020-01-27T17:17:16Z",
        "body": "`media.exolist.json` is just something our demo app uses. It's not part of the ExoPlayer library, and I wouldn't expect a real application to be using it.\r\n\r\n> But my question is, once I open one live event, will exoplayer know that particular stream name had his manifest.mpd changed to a different one?\r\n\r\nI don't really understand what this means. If you have a service that's providing multiple live events, you almost certainly need a server that your app can query to obtain the playback URLs and associated metadata for each event. This logic will be specific to your service and application.\r\n\r\nOnce you have a URL of a live event that you wish to play, at that point you should use ExoPlayer to play it. When you want to start playing a different live event, you should re-prepare the player for that event."
      },
      {
        "user": "abellybeer",
        "created_at": "2020-01-27T17:39:15Z",
        "body": "Ok, I understand your point. How do I re-prepare my player for next live event without having to close stream and reopening it? Once my live event ends, it shows \"Playback failed\" on screen so I need to reopen stream and then it starts new live event.\r\n"
      },
      {
        "user": "ojw28",
        "created_at": "2020-01-27T17:42:26Z",
        "body": "If the live event is ending with a valid DASH manifest transformation then the player should transition to the ended state (rather than failing). If playback is failing then it's likely that the DASH live stream isn't ending in a compliant way.\r\n\r\nWhen you want to start playing a new live event you should build a corresponding `MediaSource` and pass it to the player, just the same as the way you start playing the first live event.\r\n\r\nIf you want seamless transitions then you should really just have one DASH live stream that's continually updating to contain all of the content."
      },
      {
        "user": "abellybeer",
        "created_at": "2020-01-27T18:02:39Z",
        "body": "My DASH manifest changes its baseURL parameter when theres a new live event coming. Also, when I tried watching one live event and then forcing my php to send a DASH manifest from another live event, I noticed exoplayer gets confused with start time and current time. It throws playback failed and I have to move the time bar and then it updates all the info from new DASH manifest and start playing it normally.\r\nIt is possible to flush all this data and reload it again? Maybe a trigger that reloads all that data once the streams stops playing and restarts it."
      },
      {
        "user": "ojw28",
        "created_at": "2020-01-27T18:07:24Z",
        "body": "> My DASH manifest changes its baseURL parameter when theres a new live event coming.\r\n\r\nI don't understand how this is compliant with the DASH specification. It's not valid just to do an arbitrary non-compliant manifest transformation and expect the player to figure out what you meant.\r\n\r\nAs per my previous responses, if it's a separate live event then it should probably be a separate manifest with a separate URL. You should \"flush\" the player by re-preparing it with a new `MediaSource` for the new live event. Alternatively, if this is a continuous live stream where one event is ending and the next is immediately starting, then you should start a new `Period` as a dynamic update within the existing DASH manifest.\r\n\r\nClosing, since this is not an ExoPlayer issue."
      }
    ]
  },
  {
    "number": 6900,
    "title": "Add or remove mediasources dynamically in Exoplayer",
    "created_at": "2020-01-22T10:04:27Z",
    "closed_at": "2020-01-22T15:57:22Z",
    "labels": [
      "duplicate",
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6900",
    "body": "I want in every play Exoplayer, add or remove dynamically one or more mediaSource in this code:\r\n\r\n`\r\nMergingMediaSource mediaSource = new MergingMediaSource(mediaSource1, mediaSource2, mediaSource3, mediaSource4);\r\n`\r\nI want change it by user and play exoplayer again without exit activity and release exoplayer.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6900/comments",
    "author": "mrj976",
    "comments": [
      {
        "user": "icbaker",
        "created_at": "2020-01-22T15:57:22Z",
        "body": "This seems to be a duplicate of #6898, which you seemed to suggest was resolved so I closed it. I'll re-open that one, let's continue the discussion there."
      }
    ]
  },
  {
    "number": 6890,
    "title": "CryptoException: Unknown Error with DASH+PlayReady",
    "created_at": "2020-01-18T10:23:05Z",
    "closed_at": "2020-05-07T09:35:11Z",
    "labels": [
      "question",
      "bug: device specific"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6890",
    "body": "### Issue description\r\nIn case of specific DRM-protected live DASH streams, after some seconds playback aborts with below Crypto exception.\r\n\r\n```\r\ncom.google.android.exoplayer2.ExoPlaybackException: android.media.MediaCodec$CryptoException: Unknown Error\r\n        at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.feedInputBuffer(MediaCodecRenderer.java:1025)\r\n        at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.render(MediaCodecRenderer.java:664)\r\n```\r\n\r\n### Reproduction steps\r\nThe exception only occurs on low-end FireTV models right after loading the stream.\r\n\r\n### Link to test content\r\n### A full bug report captured from the device\r\n<sent via email>\r\n\r\n### Version of ExoPlayer being used:  2.9.6\r\n(not Amazon's fork)\r\n\r\n### Device(s) and version(s) of Android being used\r\nFireTV Stick Generation 2 - FireOS 5.2.6.2 (Android 5.1)\r\n\r\nThanks for your help in advance!\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6890/comments",
    "author": "icetronics",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2020-01-20T11:32:46Z",
        "body": "This will probably need to be investigated by Amazon. It might be worth checking whether it's reproducible using their fork before reporting it, in case they have some workaround for a known issue.\r\n\r\nIf you want us to have a look anyway, please provide a full bug report, as requested in the issue template."
      },
      {
        "user": "icetronics",
        "created_at": "2020-01-20T11:36:12Z",
        "body": "Hi @andrewlewis, thanks for getting back. Have you had a chance to peek at the log I sent to the dev.exoplayer email address? "
      },
      {
        "user": "andrewlewis",
        "created_at": "2020-01-20T11:39:52Z",
        "body": "Hm, I don't think we received them. Could you try sending the bug report again? Here are the instructions for reference:\r\n\r\n> Capture a full bug report using \"adb bugreport\". Output from \"adb logcat\" or a\r\n> log snippet is NOT sufficient. Please attach the captured bug report as a file.\r\n> If you don't wish to post it publicly, please submit the issue, then email the\r\n> bug report to dev.exoplayer@gmail.com using a subject in the format\r\n> \"Issue #1234\", where \"#1234\" should be replaced with your issue number."
      },
      {
        "user": "icetronics",
        "created_at": "2020-01-20T13:17:41Z",
        "body": "Sent again to given address. Please check."
      },
      {
        "user": "andrewlewis",
        "created_at": "2020-01-20T14:14:12Z",
        "body": "Thanks for resending. The messages went into spam for some reason.\r\n\r\nIn the provided bug report I can't see the `CryptoException` in the logging. Please could you take the bug report just after reproducing the problem?"
      },
      {
        "user": "icetronics",
        "created_at": "2020-01-21T15:26:11Z",
        "body": "Sorry about that, now it has been corrected, I just resent it. Thank you"
      },
      {
        "user": "icetronics",
        "created_at": "2020-01-27T15:22:36Z",
        "body": "Hi @andrewlewis - did you maybe have a chance to peek at it? Thanks"
      },
      {
        "user": "icetronics",
        "created_at": "2020-02-15T20:08:33Z",
        "body": "@andrewlewis or @ojw28 - could you please give me any pointers what could be wrong? Thanks in advance"
      },
      {
        "user": "ojw28",
        "created_at": "2020-02-16T13:06:41Z",
        "body": "I think @andrewlewis was right above - You'll need to ask Amazon to take a look at this. In particular, you should probably ask them what this means and why it could happen:\r\n```\r\nE Playready25: TZCMD_PLAYREADY_HANDLE_CONTENT_AESCTR_DECRYPT handle = 1745 Error: ffff0006\r\n```"
      }
    ]
  },
  {
    "number": 6889,
    "title": "Looping Mp4 video seamlessly ",
    "created_at": "2020-01-18T01:05:18Z",
    "closed_at": "2020-01-21T04:14:25Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6889",
    "body": "I am trying to loop small videos that are 15 seconds to 1:00 min long. The player is set to repeat the video that is selected. The video itself loop works fine, but the audio drops for a split second at the beginning of the loop. For example a video of waves crashing across the beach, the video loops perfectly but the audio stops and you witness a pause in the sound then it goes back fine alone with the video. Videos are in 1080p Mp4, I have been trying to find the issue here but all the posts seem to be a little different than what I am looking for, if a fix or issue has been addressed already, just point me in the right direction to read over the fix. ",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6889/comments",
    "author": "jopolot",
    "comments": [
      {
        "user": "jopolot",
        "created_at": "2020-01-20T01:25:47Z",
        "body": "I don't think this can be resolved due to the way MP4s are compressed. Upon reading as much research as possible on this, I don't think it can be accomplished with out using two players simultaneously or, editing player to start at a certain frame for every video, which would then cause an issue between the video part on the beginning frame and ending frame, for now I am going to use different formats that don't include using MP4 or MP3s and test my results."
      },
      {
        "user": "andrewlewis",
        "created_at": "2020-01-20T10:29:51Z",
        "body": "If you are authoring the streams to play, I think it should be possible to get this to work with MP4. As a starting point you could try disabling video and checking whether the audio-only playback loops gaplessly. If it doesn't then you you might need to add gapless metadata to the audio track (an edit list)."
      },
      {
        "user": "jopolot",
        "created_at": "2020-01-21T04:14:25Z",
        "body": "No streams, these are local videos, that are being looped seamlessly like a fan for white noise, or waves on the beach. It has worked in other formats, MP4 format with audio seems to be the issue, MP4 without audio loops seamlessly fine. Thanks for the help and feedback, but since I do not think the issue is related to the player, I will close. "
      }
    ]
  },
  {
    "number": 6876,
    "title": "exoplayer 2.9.6 not work with androidx",
    "created_at": "2020-01-15T12:14:53Z",
    "closed_at": "2020-02-06T02:07:25Z",
    "labels": [
      "question",
      "need more info",
      "stale",
      "closed-by-bot"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6876",
    "body": "Hi ,\r\ni have android application support androidx .\r\n I already tried to \r\n implementation 'com.google.android.exoplayer:exoplayer:2.9.6'  \r\nin my app , but every time get exoplayer 2.10.3 \r\nthis is problem for me because my code of exoplayer was in version 2.9.6  and i cannot upgrade code to 2.10.3 \r\nplease support me to get 2.9.6 as my request .\r\nbest regards ",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6876/comments",
    "author": "FOUADFAISAL",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2020-01-15T13:33:08Z",
        "body": "> I already tried to\r\n> implementation 'com.google.android.exoplayer:exoplayer:2.9.6'\r\n> in my app , but every time get exoplayer 2.10.3\r\n\r\nAre you saying that despite depending on 2.9.6 you end up getting version 2.10.3? If so: I wonder whether dependency resolution is causing the newer version to be picked up. Is there an indirect dependency on 2.10.3 from elsewhere in your project or one of its dependencies?\r\n\r\nRegarding AndroidX support, it's a bit unclear what problem you're facing. #6804 may help, but if not please provide some more details."
      },
      {
        "user": "google-oss-bot",
        "created_at": "2020-01-30T02:07:07Z",
        "body": "<!-- event: mark-stale -->\nHey @FOUADFAISAL. We need more information to resolve this issue but there hasn't been an update in 14 days. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2020-02-06T02:07:24Z",
        "body": "<!-- event: close-stale -->\nSince there haven't been any recent updates here, I am going to close this issue.\n\n@FOUADFAISAL if you're still experiencing this problem and want to continue the discussion just leave a comment here and we are happy to re-open this."
      }
    ]
  },
  {
    "number": 6868,
    "title": "Does leanback extension provide any advantages over direct player implementation for Activity responsible for Playback?",
    "created_at": "2020-01-13T13:37:30Z",
    "closed_at": "2020-01-13T13:42:51Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6868",
    "body": "### [REQUIRED] Question\r\nHi, \r\nWe have an exoplayer implementation that is already running our streaming mobile app.\r\nNow that we are expanding our scope to androidTV, we are looking at the leanback extension.\r\nIs there any developmental advantage/method that LeanbackPlayerAdapter provides over a plain implementation of exoplayer?\r\nCurrently, we are not using SurfaceHolderGlueHost/PlaybackGlueHost/VideoSurfaceView. Instead, we are directly using PlayerView. Can this cause any complications while porting to androidTV?\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6868/comments",
    "author": "Debayudh",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2020-01-13T13:42:51Z",
        "body": "The leanback extension is an optional component for connecting ExoPlayer to the leanback UI components. If you want to use the leanback UI components for your app's TV UI, then you should use it. If you don't want to use them, then you shouldn't. It doesn't do provide any additional or hidden benefits."
      }
    ]
  },
  {
    "number": 6850,
    "title": "Adding Time Interval.(ConcatenatingMediaSource)",
    "created_at": "2020-01-08T12:17:01Z",
    "closed_at": "2020-02-02T02:06:59Z",
    "labels": [
      "question",
      "need more info",
      "stale",
      "closed-by-bot"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6850",
    "body": "Is there any method to add a time interval between every item in ConcatenatingMediaSource's playlist?\r\nI'd appreciate it if receiving some tips.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6850/comments",
    "author": "ShengjieGeng",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2020-01-08T12:54:00Z",
        "body": "`SilenceMediaSource` can be used to insert gaps (see #5735), but you need to add these into the concatenation yourself."
      },
      {
        "user": "marcbaechinger",
        "created_at": "2020-01-10T15:02:12Z",
        "body": "Let us know whether this solves your problem. As @andrewlewis mentioned you need to add SilenceMediaSources to the concatenating media source. It also appears as an additional window in between the actual media tracks."
      },
      {
        "user": "google-oss-bot",
        "created_at": "2020-01-25T02:06:50Z",
        "body": "<!-- event: mark-stale -->\nHey @ShengjieGeng. We need more information to resolve this issue but there hasn't been an update in 14 days. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2020-02-02T02:06:59Z",
        "body": "<!-- event: close-stale -->\nSince there haven't been any recent updates here, I am going to close this issue.\n\n@ShengjieGeng if you're still experiencing this problem and want to continue the discussion just leave a comment here and we are happy to re-open this."
      }
    ]
  },
  {
    "number": 6847,
    "title": "Blank screen while switching video from portrait to landscape full screen for DRM enabled videos in DASH format",
    "created_at": "2020-01-08T07:37:27Z",
    "closed_at": "2020-01-09T10:22:32Z",
    "labels": [
      "question",
      "documentation candidate"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6847",
    "body": "Issue description:\r\nWhile switching a video from portrait to landscape mode a blank black screen is visible for a sec before showing the video frame.This happens while switching from landscape to portrait also.This is occuring only for the videos which are DRM protected.This is seen only in few devices.It appears in the exoplayer demo app as well.\r\n\r\nReproduction steps:\r\n1.In the exoplayer demo app play the video with DASH+DRM\r\n2.Enable auto rotate option in settings.\r\n3.Rotate the phone to landscape.\r\n4.A blank screen is shown for a sec before the video frame shows up.\r\n5.Switch to portrait again and see the same blank screen\r\n\r\nLink to test content\r\nYou can check any drm enabled video from the demo app for dash stream.\r\n\r\nVersion of ExoPlayer being used\r\n2.9.0\r\n\r\nDevice(s) and version(s) of Android being used\r\n1.Mi Note 7 Pro Android version:9.0--Issue arises\r\n2.Asus Zenfone Max Pro M2. Android version:8.0--Issue arises\r\n3.Real Me 2 Pro. Android version 9.0--No issue\r\n4.Lenovo K5 note. Android Version 6.0--Issue Arises\r\n5.Samsung Galaxy J2 Pro. Andorid version 6.0--No Issue\r\n6.Mi A2. Android Version 9.0--No issue\r\n7.Redmi Note 3. Android Version 6.0--No issue \r\n\r\nCould you please check into this issue.\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6847/comments",
    "author": "meenukrishnamurthy",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2020-01-08T07:45:10Z",
        "body": "This is a limitation in the underlying platform. The fact that the output path is secure means that the video buffers aren't available to be composited into the rotation animation when the display orientation changes, so for the duration of the animation the surface appears as though it is black. You will observe the issue in all applications that play DRM protected content."
      },
      {
        "user": "meenukrishnamurthy",
        "created_at": "2020-01-08T07:49:02Z",
        "body": "Can you be more specific as to which underlying platform the issue arises.Because i dont see this issue in all the devices."
      },
      {
        "user": "ojw28",
        "created_at": "2020-01-08T08:01:47Z",
        "body": "As above:\r\n\r\n> The fact that the output path is secure means that the video buffers aren't available to be composited into the rotation animation when the display orientation changes, so for the duration of the animation the surface appears as though it is black.\r\n\r\nI'm not sure why you don't see the issue on all devices, but my best guess would be that your content doesn't require a secure output path in the license policy, and that the devices where you don't see the issue only support L3 Widevine. If that's the case then you could try forcing L3 Widevine on all devices, to see if that resolves the problem.\r\n\r\nAlternatively, is it possible the devices where you don't see the issue simply don't animate orientation changes?"
      },
      {
        "user": "meenukrishnamurthy",
        "created_at": "2020-01-09T07:07:45Z",
        "body": "Thanks a lot @ojw28 . Forcing to L3 on all devices worked for me."
      }
    ]
  },
  {
    "number": 6840,
    "title": "How to save application specific information with download? ",
    "created_at": "2020-01-07T06:47:47Z",
    "closed_at": "2020-01-29T02:07:04Z",
    "labels": [
      "question",
      "need more info",
      "stale",
      "closed-by-bot"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6840",
    "body": "is the `byte[]  data` in downloadrequest  is the only way to save application specific data with download request? I wonder how to save if there is any application specific data like Objects.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6840/comments",
    "author": "ajay-aravind",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2020-01-07T11:59:30Z",
        "body": "Yes, the data field of type byte[] is the only application defined field which is persisted. \r\n\r\nYou could actually store everything which you can transform from and to a byte array. I'd recommend though to only store small amount of data like that. Probably a key which you then can use for another storage mechanism to look up object data for the given key."
      },
      {
        "user": "ajay-aravind",
        "created_at": "2020-01-07T12:46:32Z",
        "body": "while my notification is updating every 250ms , I don't think it is a good idea to fetch data a from a table every 250ms is a good idea."
      },
      {
        "user": "marcbaechinger",
        "created_at": "2020-01-07T20:02:48Z",
        "body": "I actually can't see a reason for posting a notification every 250ms and if you do, how is this related to storing custom app data with a download request? I think you could just keep that data in memory.\r\n\r\nCan you give a little bit more details about your use case? "
      },
      {
        "user": "google-oss-bot",
        "created_at": "2020-01-22T02:07:00Z",
        "body": "<!-- event: mark-stale -->\nHey @ajay-aravind. We need more information to resolve this issue but there hasn't been an update in 14 days. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2020-01-29T02:07:04Z",
        "body": "<!-- event: close-stale -->\nSince there haven't been any recent updates here, I am going to close this issue.\n\n@ajay-aravind if you're still experiencing this problem and want to continue the discussion just leave a comment here and we are happy to re-open this."
      }
    ]
  },
  {
    "number": 6838,
    "title": "How to manually specify duration for stream?",
    "created_at": "2020-01-06T15:34:15Z",
    "closed_at": "2020-01-06T20:18:01Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6838",
    "body": "When filing a question:\r\n-----------------------\r\nFill out the sections below, leaving the headers but replacing the content. If\r\nyou're unable to provide certain information, please explain why in the relevant\r\nsection. We may close issues if they do not include sufficient information.\r\n\r\n### [REQUIRED] Searched documentation and issues\r\n\"Timeline\" class documentation\r\n\r\n### [REQUIRED] Question\r\nIs there a way to manually set the duration for a stream to enable seeking?  I am streaming a growing file, an http mpeg2 stream from a DVR with apparently an unspecified duration.  I know what the duration should be at any given time and could dynamically set a duration if there is a mechanism to do so.  There appears to be no way to modify the current Timeline.Window.  I am using the SimpleExoPlayer with an ExtractorMediaSource.\r\n\r\n### A full bug report captured from the device\r\nNA\r\n\r\n### Link to test content\r\nNA, server only streams locally\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6838/comments",
    "author": "cncb-gh",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2020-01-06T19:46:49Z",
        "body": "You are right that you can not change the timeline as it is an immutable object. The timeline is provided by the media source. When the information of the timeline changes the media source creates a new timeline and then notifies the player about the new timeline.\r\n\r\nI think there is no other way to do that than providing your custom `CompositeMediaSource` which wraps a `ProgressiveMediaSource`. When the child media source calls the `onChildSourceInfoRefreshed`, you can wrap the timeline passed to `onChildSourceInfoRefreshed` with a `ForwardingTimeline` and override `getWindow(int windowIndex, Window window, long defaultPositionProjectionUs)` to set the duration of the window to the duration you know.\r\n\r\nYou can look into `ExtractorMediaSource` to see an example of such a wrapper. It actually already wraps a `ProgressiveMediaSource` and you can do it in a similar way."
      },
      {
        "user": "cncb-gh",
        "created_at": "2020-01-06T20:18:00Z",
        "body": "I will try that.  Thanks very much for your help."
      }
    ]
  },
  {
    "number": 6835,
    "title": "how to use pinch gesture to enlarge the width and height of the player",
    "created_at": "2020-01-06T06:57:00Z",
    "closed_at": "2020-02-06T16:10:27Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6835",
    "body": "I want  my player height and width dynamically increase and decrease based on the user pinching the \r\nview .\r\nHow can I achieve it in the latest exoplayer view",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6835/comments",
    "author": "Sathish-Kumar-Kanagaraj",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2020-01-06T10:59:09Z",
        "body": "The `PlayerView` is a layout view (`FrameLayout`). So this sounds like a general Android developer question which is best asked on StackOverflow. We can not support you in Android UI development here in this issue tracker, I'm afraid.\r\n\r\nIf you have a specific questions about ExoPlayer components not behaving as expected or not correctly,  please narrow down your question accordingly. We are happy to help in this case."
      },
      {
        "user": "Sathish-Kumar-Kanagaraj",
        "created_at": "2020-01-06T11:09:41Z",
        "body": "Okay,\r\nSo now my question is shall we able to change the video size  width and height to full screen based on the mobile screen size \r\nI have seen a method called onVideoSizeChanged in EventLogger Class of Exoplayer\r\nShall we make use of it to change the player height and width dynamically"
      },
      {
        "user": "marcbaechinger",
        "created_at": "2020-01-06T11:15:42Z",
        "body": "The video size can change dynamically in a adaptive stream. I don't think you want to change the UI according to the video size. When the video size changes the quality of the video changes rather than the UI should adapt."
      },
      {
        "user": "marcbaechinger",
        "created_at": "2020-02-06T16:10:27Z",
        "body": "Closing this issue due to inactivity. Please reopen if required."
      }
    ]
  },
  {
    "number": 6831,
    "title": "problem of ExoPlayer with more than locally 2 GB encrypted files ",
    "created_at": "2020-01-05T10:49:42Z",
    "closed_at": "2020-01-08T09:58:37Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6831",
    "body": "Hi, At first my deepest thank goes to your team. \r\nThere is a problem while using ExoPlayer for playing encrypted files. we can play less than 2GB encrypted files but there is a problem for more than 2GB encrypted files and we couldn't play these files. \r\nIs there any solution to solve this problem?\r\n\r\nnote: \r\n- we using custom data source! code is at the bottom.\r\n- we encrypt files ate users' devices (locally)\r\n- we do not change format file in an encryption process\r\n- we secretKey and IvParameterSpec size is 16 byte\r\n- we have no change in size of files before or after of encryption (for example 2.54GB file not change size in before or after of encryption)\r\n\r\nerror : \r\n```\r\nSource error.\r\ncom.google.android.exoplayer2.source.UnrecognizedInputFormatException: None of the available extractors (MatroskaExtractor, FragmentedMp4Extractor, Mp4Extractor, Mp3Extractor, AdtsExtractor, Ac3Extractor, TsExtractor, FlvExtractor, OggExtractor, PsExtractor, WavExtractor) could read the stream.\r\n```\r\n\r\nencrypt info : \r\n```\r\n    public static final String AES_ALGORITHM = \"AES\";\r\n    public static final String AES_TRANSFORMATION = \"AES/CTR/NoPadding\";\r\n```\r\n\r\nencrypt code : \r\n```\r\n            SecretKeySpec secretKey = new SecretKeySpec(keys, AES_ALGORITHM);\r\n            Cipher cipher = Cipher.getInstance(AES_TRANSFORMATION);\r\n            cipher.init(cipherMode, secretKey, iv);\r\n\r\n            FileInputStream inputStream = new FileInputStream(inputFile);\r\n            byte[] inputBytes = new byte[1024*1024];\r\n\r\n            System.out.println(\"Start\");\r\n            int bytesRead;\r\n            FileOutputStream fileOutputStream = new FileOutputStream(outputFile);\r\n\r\n            CipherOutputStream cipherOutputStream = new CipherOutputStream(fileOutputStream, \r\n            cipher);\r\n            while ((bytesRead = inputStream.read(inputBytes, 0, bufferSize)) != -1) {\r\n                cipherOutputStream.write(inputBytes , 0  , bytesRead);\r\n            }\r\n            inputStream.close();\r\n            cipherOutputStream.close();\r\n            if (inputFile.exists()) {\r\n                inputFile.delete();\r\n            }\r\n           System.out.println(\"END\");\r\n```\r\n\r\nplayer : \r\n```\r\n                   DefaultBandwidthMeter bandwidthMeter = new DefaultBandwidthMeter();\r\n                    dataSourceFactory = new EncryptedFileDataSourceFactory(cipher, key, \r\n                     iv, bandwidthMeter);\r\n                    ExtractorsFactory extractorsFactory = new DefaultExtractorsFactory();\r\n                    videoSource = new ProgressiveMediaSource.Factory(dataSourceFactory , \r\n                    extractorsFactory).createMediaSource(uri);\r\n```\r\n\r\nEncryptedFileDataSourceFactory : \r\n```\r\npublic class EncryptedFileDataSourceFactory implements DataSource.Factory {\r\n\r\n    private Cipher mCipher;\r\n    private SecretKeySpec mSecretKeySpec;\r\n    private IvParameterSpec mIvParameterSpec;\r\n    private TransferListener mTransferListener;\r\n\r\n    public EncryptedFileDataSourceFactory(Cipher cipher, SecretKeySpec secretKeySpec, IvParameterSpec ivParameterSpec , TransferListener listener) {\r\n        this.mCipher = cipher;\r\n        this.mSecretKeySpec = secretKeySpec;\r\n        this.mIvParameterSpec = ivParameterSpec;\r\n        this.mTransferListener = listener;\r\n    }\r\n\r\n    @Override\r\n    public EncryptedFileDataSource createDataSource() {\r\n        return new EncryptedFileDataSource(mCipher , mSecretKeySpec , mIvParameterSpec , mTransferListener);\r\n    }\r\n\r\n}\r\n```\r\n\r\nEncryptedFileDataSource : \r\n```\r\npublic final class EncryptedFileDataSource implements DataSource {\r\n\r\n    private final TransferListener mTransferListener;\r\n    private StreamingCipherInputStream mInputStream;\r\n    private Uri mUri;\r\n    private long mBytesRemaining;\r\n    private boolean mOpened;\r\n    private Cipher mCipher;\r\n    private SecretKeySpec mSecretKeySpec;\r\n    private IvParameterSpec mIvParameterSpec;\r\n    DataSpec dataSpec;\r\n\r\n    public EncryptedFileDataSource(Cipher cipher, SecretKeySpec secretKeySpec, IvParameterSpec ivParameterSpec, TransferListener listener) {\r\n        mCipher = cipher;\r\n        mSecretKeySpec = secretKeySpec;\r\n        mIvParameterSpec = ivParameterSpec;\r\n        mTransferListener = listener;\r\n    }\r\n\r\n    @Override\r\n    public void addTransferListener(TransferListener transferListener) {\r\n\r\n    }\r\n\r\n    @Override\r\n    public long open(DataSpec dataSpec) throws EncryptedFileDataSourceException {\r\n        // if we're open, we shouldn't need to open again, fast-fail\r\n        if (mOpened) {\r\n            return mBytesRemaining;\r\n        }\r\n        // #getUri is part of the contract...\r\n        this.dataSpec = dataSpec;\r\n        mUri = dataSpec.uri;\r\n        // put all our throwable work in a single block, wrap the error in a custom Exception\r\n        try {\r\n            setupInputStream();\r\n            skipToPosition(dataSpec);\r\n            computeBytesRemaining(dataSpec);\r\n        } catch (IOException e) {\r\n            throw new EncryptedFileDataSourceException(e);\r\n        }\r\n        // if we made it this far, we're open\r\n        mOpened = true;\r\n        // notify\r\n        if (mTransferListener != null) {\r\n            mTransferListener.onTransferStart(this, dataSpec, false);\r\n        }\r\n        // report\r\n        return mBytesRemaining;\r\n    }\r\n\r\n    private void setupInputStream() throws FileNotFoundException {\r\n        File encryptedFile = new File(mUri.getPath());\r\n        FileInputStream fileInputStream = new FileInputStream(encryptedFile);\r\n        mInputStream = new StreamingCipherInputStream(fileInputStream, mCipher, mSecretKeySpec, mIvParameterSpec);\r\n    }\r\n\r\n    private void skipToPosition(DataSpec dataSpec) throws IOException {\r\n        mInputStream.forceSkip(dataSpec.position);\r\n    }\r\n\r\n    private void computeBytesRemaining(DataSpec dataSpec) throws IOException {\r\n        if (dataSpec.length != C.LENGTH_UNSET) {\r\n            mBytesRemaining = dataSpec.length;\r\n        } else {\r\n            mBytesRemaining = mInputStream.available();\r\n            if (mBytesRemaining == Integer.MAX_VALUE) {\r\n                mBytesRemaining = C.LENGTH_UNSET;\r\n            }\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public int read(byte[] buffer, int offset, int readLength) throws EncryptedFileDataSourceException {\r\n        // fast-fail if there's 0 quantity requested or we think we've already processed everything\r\n        if (readLength == 0) {\r\n            return 0;\r\n        } else if (mBytesRemaining == 0) {\r\n            return C.RESULT_END_OF_INPUT;\r\n        }\r\n        // constrain the read length and try to read from the cipher input stream\r\n        int bytesToRead = getBytesToRead(readLength);\r\n        int bytesRead;\r\n        try {\r\n            bytesRead = mInputStream.read(buffer, offset, bytesToRead);\r\n        } catch (IOException e) {\r\n            throw new EncryptedFileDataSourceException(e);\r\n        }\r\n        // if we get a -1 that means we failed to read - we're either going to EOF error or broadcast EOF\r\n        if (bytesRead == -1) {\r\n            if (mBytesRemaining != C.LENGTH_UNSET) {\r\n                throw new EncryptedFileDataSourceException(new EOFException());\r\n            }\r\n            return C.RESULT_END_OF_INPUT;\r\n        }\r\n        // we can't decrement bytes remaining if it's just a flag representation (as opposed to a mutable numeric quantity)\r\n        if (mBytesRemaining != C.LENGTH_UNSET) {\r\n            mBytesRemaining -= bytesRead;\r\n        }\r\n        // notify\r\n        if (mTransferListener != null) {\r\n            mTransferListener.onBytesTransferred(this, dataSpec, false, bytesRead);\r\n        }\r\n        // report\r\n        return bytesRead;\r\n    }\r\n\r\n    private int getBytesToRead(int bytesToRead) {\r\n        if (mBytesRemaining == C.LENGTH_UNSET) {\r\n            return bytesToRead;\r\n        }\r\n        return (int) Math.min(mBytesRemaining, bytesToRead);\r\n    }\r\n\r\n    @Override\r\n    public Uri getUri() {\r\n        return mUri;\r\n    }\r\n\r\n    @Override\r\n    public void close() throws EncryptedFileDataSourceException {\r\n        mUri = null;\r\n        try {\r\n            if (mInputStream != null) {\r\n                mInputStream.close();\r\n            }\r\n        } catch (IOException e) {\r\n            throw new EncryptedFileDataSourceException(e);\r\n        } finally {\r\n            mInputStream = null;\r\n            if (mOpened) {\r\n                mOpened = false;\r\n                if (mTransferListener != null) {\r\n                    mTransferListener.onTransferEnd(this, dataSpec, false);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nStreamingCipherInputStream : \r\n```\r\nclass StreamingCipherInputStream extends CipherInputStream {\r\n\r\n    private static final int AES_BLOCK_SIZE = 16;\r\n\r\n    private InputStream mUpstream;\r\n    private Cipher mCipher;\r\n    private SecretKeySpec mSecretKeySpec;\r\n    private IvParameterSpec mIvParameterSpec;\r\n\r\n    public StreamingCipherInputStream(InputStream inputStream, Cipher cipher, SecretKeySpec secretKeySpec, IvParameterSpec ivParameterSpec) {\r\n        super(inputStream, cipher);\r\n        mUpstream = inputStream;\r\n        mCipher = cipher;\r\n        mSecretKeySpec = secretKeySpec;\r\n        mIvParameterSpec = ivParameterSpec;\r\n    }\r\n\r\n    @Override\r\n    public int read(byte[] b, int off, int len) throws IOException {\r\n        return super.read(b, off, len);\r\n    }\r\n\r\n    public long forceSkip(long bytesToSkip) throws IOException {\r\n        long skipped = mUpstream.skip(bytesToSkip);\r\n        try {\r\n            int skip = (int) (bytesToSkip % AES_BLOCK_SIZE);\r\n            long blockOffset = bytesToSkip - skip;\r\n            long numberOfBlocks = blockOffset / AES_BLOCK_SIZE;\r\n            // from here to the next inline comment, i don't understand\r\n            BigInteger ivForOffsetAsBigInteger = new BigInteger(1, mIvParameterSpec.getIV()).add(BigInteger.valueOf(numberOfBlocks));\r\n            byte[] ivForOffsetByteArray = ivForOffsetAsBigInteger.toByteArray();\r\n            IvParameterSpec computedIvParameterSpecForOffset;\r\n            if (ivForOffsetByteArray.length < AES_BLOCK_SIZE) {\r\n                byte[] resizedIvForOffsetByteArray = new byte[AES_BLOCK_SIZE];\r\n                System.arraycopy(ivForOffsetByteArray, 0, resizedIvForOffsetByteArray, AES_BLOCK_SIZE - ivForOffsetByteArray.length, ivForOffsetByteArray.length);\r\n                computedIvParameterSpecForOffset = new IvParameterSpec(resizedIvForOffsetByteArray);\r\n            } else {\r\n                computedIvParameterSpecForOffset = new IvParameterSpec(ivForOffsetByteArray, ivForOffsetByteArray.length - AES_BLOCK_SIZE, AES_BLOCK_SIZE);\r\n            }\r\n            mCipher.init(Cipher.ENCRYPT_MODE, mSecretKeySpec, computedIvParameterSpecForOffset);\r\n            byte[] skipBuffer = new byte[skip];\r\n            // i get that we need to update, but i don't get how we're able to take the shortcut from here to the previous comment\r\n            mCipher.update(skipBuffer, 0, skip, skipBuffer);\r\n            Arrays.fill(skipBuffer, (byte) 0);\r\n        } catch (Exception e) {\r\n            return 0;\r\n        }\r\n        return skipped;\r\n    }\r\n\r\n    // We need to return the available bytes from the upstream.\r\n    // In this implementation we're front loading it, but it's possible the value might change during the lifetime\r\n    // of this instance, and reference to the stream should be retained and queried for available bytes instead\r\n    @Override\r\n    public int available() throws IOException {\r\n        return mUpstream.available();\r\n    }\r\n\r\n}\r\n\r\n```",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6831/comments",
    "author": "Navidhp",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2020-01-06T20:02:36Z",
        "body": "The error says that none of the extractors recognizes the sample format of the input. \r\n\r\nI don't understand why the size of the file becoming larger than 2GB should make a difference. Specifically because the extractors try to recognize the format at the very begin.\r\n\r\nI'd verify whether the encryption process works as expected for large files.  Are there any other exceptions in the logcat? If you do a bug report right after the problem occurs and upload here, I can look into this as well. "
      },
      {
        "user": "Navidhp",
        "created_at": "2020-01-07T06:34:44Z",
        "body": "@marcbaechinger only exception in logcat this :\r\n```\r\n01-07 10:59:08.978 12497-12552/co.ayeneh.filmgardi E/Surface: getSlotFromBufferLocked: unknown buffer: 0xaab09500\r\n01-07 10:59:08.978 12497-12651/co.ayeneh.filmgardi E/ExoPlayerImplInternal: Source error.\r\n    com.google.android.exoplayer2.source.UnrecognizedInputFormatException: None of the available extractors (MatroskaExtractor, FragmentedMp4Extractor, Mp4Extractor, Mp3Extractor, AdtsExtractor, Ac3Extractor, TsExtractor, FlvExtractor, OggExtractor, PsExtractor, WavExtractor, AmrExtractor, Ac4Extractor) could read the stream.\r\n        at com.google.android.exoplayer2.source.ProgressiveMediaPeriod$ExtractorHolder.selectExtractor(ProgressiveMediaPeriod.java:1059)\r\n        at com.google.android.exoplayer2.source.ProgressiveMediaPeriod$ExtractingLoadable.load(ProgressiveMediaPeriod.java:947)\r\n        at com.google.android.exoplayer2.upstream.Loader$LoadTask.run(Loader.java:381)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1113)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:588)\r\n        at java.lang.Thread.run(Thread.java:818)\r\n```"
      },
      {
        "user": "ojw28",
        "created_at": "2020-01-07T17:34:54Z",
        "body": "If you decrypt the entire file and then try playing that, does that work correctly? If so then the issue lies somewhere within your own encryption or decryption code, and as such is not an ExoPlayer issue."
      },
      {
        "user": "Navidhp",
        "created_at": "2020-01-07T17:42:25Z",
        "body": "@ojw28 yes when I decrypt file correctly oky and play but encrypt again file not play"
      },
      {
        "user": "ojw28",
        "created_at": "2020-01-07T17:52:50Z",
        "body": "This is not an ExoPlayer issue, in that case. You'll need to debug your custom components, unfortunately. I didn't spot anything obviously wrong with the code pasted above, but the most likely candidates are probably:\r\n\r\n* `StreamingCipherInputStream.forceSkip`. You currently assume that `mUpstream.skip(bytesToSkip)` is going to skip the full amount, but I can't see a hard guarantee anywhere that this will always be the case, and you don't check the return value. You should check the return value to see if the requested number of bytes are always successfully skipped.\r\n* `StreamingCipherInputStream.available`. Perhaps something breaks once this starts returning `Integer.MAX_VALUE`, which I think happens once your files exceed 2GB? You could try hardcoding the known length of one of your test files in `computeBytesRemaining` as an experiment. If that \"fixes\" playback then some part of your code is not able to cope with the `Integer.MAX_VALUE` case.\r\n"
      },
      {
        "user": "Navidhp",
        "created_at": "2020-01-08T09:58:36Z",
        "body": "@ojw28 \r\nHi,\r\nAt first, I appreciate your advice and it was perfectly useful for me to solve the problem. \r\nIt's worth mentioning that maximum value of files with more than 2GB was more than maximum value of integer. so it was the reason of the problem in our component. "
      },
      {
        "user": "ojw28",
        "created_at": "2020-01-09T10:07:40Z",
        "body": "Glad to hear you solved the issue!"
      }
    ]
  },
  {
    "number": 6825,
    "title": "getCurrentPosition() returning values greater than getDuration()",
    "created_at": "2020-01-03T09:09:24Z",
    "closed_at": "2020-01-09T13:50:42Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6825",
    "body": "Playing an audio via exoplayer returns getCurrentPostion() value greater than getDuration() when the audio is about to finish. The getDuration() value does not change but the getCurrentPosition() keeps increasing and goes past getDuration() value as well. This happens also in the playerNotificationManager where the see the time going past getDuration(). This should not happen and the getCurrentPosition() should never be greater than getDuration().\r\n\r\nD/DurationTime: 1684323\r\nD/ProgressTime: 1689893\r\nD/DurationTime: 1684323\r\nD/ProgressTime: 1690899\r\nD/DurationTime: 1684323\r\nD/ProgressTime: 1691903\r\nD/DurationTime: 1684323\r\n\r\nversion 2.9.6\r\n\r\nAll simulators and devices.\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6825/comments",
    "author": "vishal-i4gs",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2020-01-03T16:22:02Z",
        "body": "This can happen in some cases. For example if the media incorrectly specifies its own duration. To understand your specific case, we'd need you to provide a media sample for which you observe this happening."
      },
      {
        "user": "vishal-i4gs",
        "created_at": "2020-01-04T15:21:44Z",
        "body": "I am not sure whether its because of the media sample because I keep seeing different logs each time I test. One thing I observe is that the duration doesn't change at any point but definitely the amount getCurrentPosition() is greater than the getDuration() changes at every trial. Sometimes the getCurrentPosition() is 2 seconds more, sometimes  its 3 and sometimes its even 5.\r\n\r\nNote : I did test that audio on chrome browser audio player and it feels fine, the progress doesn't go beyond the duration."
      },
      {
        "user": "ojw28",
        "created_at": "2020-01-05T14:06:56Z",
        "body": "As per my previous response, we need a media sample to understand your specific case."
      },
      {
        "user": "vishal-i4gs",
        "created_at": "2020-01-06T05:03:24Z",
        "body": "I am sorry @ojw28 I believe there might be some issue with the audio as well as you said. Unfortunately I cannot share the audio url because its proprietary but I believe there might some issues with the audio. I will get back in a while on this. Thanks"
      },
      {
        "user": "ojw28",
        "created_at": "2020-01-09T13:50:42Z",
        "body": "Closing for now. Please reply here if you require more assistance, and we can re-open the issue."
      }
    ]
  },
  {
    "number": 6822,
    "title": "resume playing RTMP stream from Paused state, time of lag is getting longer",
    "created_at": "2020-01-02T08:02:27Z",
    "closed_at": "2020-01-08T06:18:46Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6822",
    "body": "In a live mode, I use  mInternalPlayer.setPlayWhenReady(false) to pause  the video stream for a long time, and I resume to play it by  mInternalPlayer.setPlayWhenReady(true). I find the playing video lagging the real live stream longer. \r\n\r\n**Because of live stream, users only want to chase the live stream while resuming to play, I guess there must be some cache logic behind exoplayer, if skipping the cache or deleting the cache, it may be work. Is there a way to do this? Any suggestions would be greatly appreciated** ",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6822/comments",
    "author": "caprice",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2020-01-06T11:13:25Z",
        "body": "ExoPlayer does not cache by default. If you do not have a `CachingDataSource` in place there is no caching applied."
      },
      {
        "user": "caprice",
        "created_at": "2020-01-08T06:26:33Z",
        "body": "@marcbaechinger Thanks for your replies. There is no doubt that exoplayer has buffering cache in memory. At last, I found the latest live stream can be caught up by using player.seekTo(0) when resume to play in live mode"
      }
    ]
  },
  {
    "number": 6819,
    "title": "it doesn't work on Samsung J7",
    "created_at": "2020-01-01T13:24:02Z",
    "closed_at": "2020-01-02T09:54:11Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6819",
    "body": "this library couldn't play video and audio formats on Samsung J7",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6819/comments",
    "author": "pishguy",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2020-01-02T09:54:11Z",
        "body": "Closing due to lack of useful information. Please fill out the issue template properly if you wish for us to provide assistance."
      }
    ]
  },
  {
    "number": 6811,
    "title": "How to improve playback start time of aes128 encrypted HLS & MPD-DASH playback",
    "created_at": "2019-12-27T03:36:42Z",
    "closed_at": "2020-01-05T14:34:40Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6811",
    "body": "\r\n### [REQUIRED] Searched documentation and issues\r\nNo references found\r\n\r\n### [REQUIRED] How can we improve playback start time of aes128 encrypted HLS playback.\r\nWe have kept DEFAULT_BUFFER_FOR_PLAYBACK_MS less than the hls chunk size so that playback starts immediately. However we see for AES128 files playback starts with a delay of ~1s compared to unencrypted hls chunks.\r\n\r\nFor MPD DASH, is there any optimisation option similar to setAllowChunklessPreparation (for hls) or anything else? \r\n\r\nIs there anyway to optimize the playback start time for Dash and AES128 streams? \r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6811/comments",
    "author": "krackjack234",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2020-01-02T19:01:22Z",
        "body": "> However we see for AES128 files playback starts with a delay of ~1s compared to unencrypted hls chunks.\r\n\r\nAES-128 will typically add an extra round trip before playback can start (to obtain the key). So it's unsurprising that latency would be higher. The size of delay will depend on network and server latency.\r\n\r\n> For MPD DASH, is there any optimisation option similar to setAllowChunklessPreparation (for hls) or anything else?\r\n\r\nThe optimization that `setAllowChunklessPreparation` enables for HLS is something that you get \"for free\" in the DASH case, without needing any configuration.\r\n\r\n> Is there anyway to optimize the playback start time for Dash and AES128 streams?\r\n\r\nDASH startup latency should be pretty fast. For HLS I'd expect latency to be somewhat higher simply due to the way that HLS works. In particular because the player has to request the master playlist and then make a subsequent request for a media playlist, where-as the equivalent in DASH is a single request for the manifest.\r\n\r\nFor AES-128 encrypted HLS, there are a few options for removing the key request from the critical path when starting playback, however both are changes to the content rather than the player.\r\n\r\n1. You could not encrypt the first few segments of the media (i.e. the first `EXT-X-KEY` tag would appear a few segments into the media playlist). This would remove the key request from the critical path when starting playback _from the beginning of the media only_.\r\n1. You could use `data://` URIs to embed keys directly into the `EXT-X-KEY` tags within the media playlists. Note that the practicality and security implications of this approach likely depend on the specifics of your architecture, so that's something you'd need to evaluate."
      },
      {
        "user": "krackjack234",
        "created_at": "2020-01-04T13:46:51Z",
        "body": "Thanks @ojw28 "
      }
    ]
  },
  {
    "number": 6803,
    "title": "How to set unable auto play video in webview after add lib?",
    "created_at": "2019-12-26T03:08:19Z",
    "closed_at": "2019-12-27T14:52:18Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6803",
    "body": "Hi guys,\r\nWhen i add ExoPlayer library to my app, my WebView auto play video. But i don't want like that, do you know how to set unable auto play video in webview after add lib?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6803/comments",
    "author": "bk-ducle",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2019-12-27T12:46:49Z",
        "body": "Can you elaborate a little bit on how you think adding the dependency to ExoPlayer does change the behaviour of your webview?\r\n\r\nI currently understand the only thing you change in your app is adding a dependency in your gradle file like so:\r\n\r\n```\r\nimplementation 'com.google.android.exoplayer:exoplayer-core:2.11.1'\r\n```\r\n\r\nI can not see why adding only this line would have an impact on the behaviour of a video playing in a webview which uses HTML/JS to play. \r\n\r\nCan you please confirm this is the only thing you are changing? If this is the case and you are still seeing the behaviour in the webview changes, can you please send a test fixture which does exhibit the behaviour so we can look into this."
      },
      {
        "user": "bk-ducle",
        "created_at": "2019-12-27T14:52:14Z",
        "body": "In my project, my webview show page facebook, i run javascript to find video, but not play it. I add lib implementation 'com.google.android.exoplayer:exoplayer-core:2.11.1', webview change(auto play video). I try remove the lib, the webview be normal.\r\n\r\nBut when i test again in my new  project, only have webview and implement lib. it ok. So i think problem not about lib, it from another some thing else.\r\nThank you. "
      }
    ]
  },
  {
    "number": 6794,
    "title": "Feedback during Fast Forward and Rewind",
    "created_at": "2019-12-20T14:54:44Z",
    "closed_at": "2020-01-10T14:57:58Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6794",
    "body": "Hi,\r\n\r\nwe want to improve the experience when doing Fast Forward or Rewind, and if possible when seeking.\r\n\r\nOur current implementation, is keeping the playback while the user is keeping the remote control buttons pressed for Fast Forward or Rewind and then seeking to that position when the user releases the button.\r\n\r\nWe would like to provide feedback when doing Fast Forward or Rewind, like playing video x32 or x64, so the user knows when the playback will continue after releasing the button or display thumbnails to provide that feedback.\r\nCurrently we don't have any custom source of thumbnails, and don't know if that is doable for live (we need this feature for live and on demand)\r\nMaybe possible to use a profile with key frames for that?\r\n\r\nAny suggestion will be welcome, if there is a recommended way to do that using Exoplayer or any other way.\r\n\r\nOur media streams are currently SS and DASH and the lowest bitrate is 500000.\r\nOur application is working on Android Tv devices.\r\n\r\nThanks!!",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6794/comments",
    "author": "alfonsoramosa",
    "comments": [
      {
        "user": "alfonsoramosa",
        "created_at": "2020-01-02T12:41:47Z",
        "body": "Hi all,\r\n\r\nI will really appreciate any kind of feedback or clue on how to handle Fast Forward and Rewind and provide some feedback to the user on the content current position while doing it"
      },
      {
        "user": "andrewlewis",
        "created_at": "2020-01-10T14:57:58Z",
        "body": "> Maybe possible to use a profile with key frames for that?\r\n\r\nIf \"profile with key frames\" refers to a special keyframe-only 'track' provided by the container or streaming standard, I think we don't support this out of the box (see also #474).\r\n\r\n> we want to improve the experience when doing Fast Forward or Rewind, and if possible when seeking.\r\n\r\nIf your streams have frequent keyframes you may be able to get a better user experience with some changes at the app level as follows:\r\n- When the user starts seeking, issue a sequence of seeks to create the impression of fast-forwarding or rewinding, using seek parameters to specify a sync point (e.g., `SeekParameters.PREVIOUS_SYNC` to avoid showing a preview frame later than the actual exact seek position) to make the seek operations complete more quickly.\r\n- As an additional refinement to make this smoother you can suppress calls to seek while a seek is pending in the player, by setting a flag in your app just before you call seek, not calling seek while the flag is set, and clearing the flag in `onRenderedFirstFrame`, plus also `onSeekProcessed` if the seek position is equal to the seek position that was requested (this case doesn't result in a new first frame rendered notification; and you can get the seek position that was last requested by querying the player position in `onSeekProcessed`).\r\n- I found it was also worth setting `playWhenReady` to false while you are issuing these seek operations to avoid restarting playback at each position, then restoring it when returning to normal playback.\r\n- To get this working really well there are probably other refinements especially to caching and/or load control (to avoid loading then throwing away data). I haven't looked into doing that in detail so will leave it for you to investigate if you go down this route.\r\n\r\nFor completeness, an alternative approach that is probably much more efficient is to show thumbnail previews where you're serving those thumbnails separately from the media stream (this is not really ExoPlayer-related though)."
      }
    ]
  },
  {
    "number": 6791,
    "title": "Play local m3u8 with local media content",
    "created_at": "2019-12-19T16:42:11Z",
    "closed_at": "2020-01-17T21:20:41Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6791",
    "body": "Hi, I want to play a local .m3u8 files that have a link to a local video file. The local video file is saved in asset folder.\r\n\r\nThis is my m3u8:\r\n```\r\n#EXTM3U\r\n#EXT-X-TARGETDURATION:10\r\n#EXT-X-ALLOW-CACHE:YES\r\n#EXT-X-PLAYLIST-TYPE:VOD\r\n#EXT-X-VERSION:3\r\n#EXT-X-MEDIA-SEQUENCE:1\r\n#EXTINF:10.000,\r\nasset:///android_asset/content_1.mp4\r\n#EXT-X-ENDLIST\r\n```\r\nWhen i try to play the content I have the error:\r\n\r\nE/ExoPlayerImplInternal: Source error.\r\n    com.google.android.exoplayer2.upstream.Loader$UnexpectedLoaderException: Unexpected NullPointerException: Attempt to invoke virtual method 'int com.google.android.exoplayer2.metadata.Metadata.length()' on a null object reference\r\n\r\nWhat is my mistake?\r\nThanks!",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6791/comments",
    "author": "andrea157",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2019-12-19T16:52:54Z",
        "body": "Please can you provide at least a complete stack trace, rather than just the top line? More generally, why are you trying to do this? Just play the MP4 file directly and keep things simple.\r\n\r\nThanks."
      },
      {
        "user": "andrea157",
        "created_at": "2019-12-19T18:19:44Z",
        "body": "Yes sorry,\r\n\r\nI would like to use the m3u8 to manage the selection of multi bitrate, multi track audio and multi track subtitles in a single file as I already do for online content. Do you think it's not possible and is it better to use MergingMediaSource and create a mediasource with all my tracks?\r\n\r\nhere it is:\r\n\r\n```\r\n2019-12-19 17:39:48.838 10356-10407/com.xxx.yyyy E/LoadTask: Unexpected exception loading stream\r\n    java.lang.NullPointerException: Attempt to invoke virtual method 'int com.google.android.exoplayer2.metadata.Metadata.length()' on a null object reference\r\n        at com.google.android.exoplayer2.source.hls.DefaultHlsExtractorFactory.createFragmentedMp4Extractor(DefaultHlsExtractorFactory.java:276)\r\n        at com.google.android.exoplayer2.source.hls.DefaultHlsExtractorFactory.createExtractorByFileExtension(DefaultHlsExtractorFactory.java:212)\r\n        at com.google.android.exoplayer2.source.hls.DefaultHlsExtractorFactory.createExtractor(DefaultHlsExtractorFactory.java:114)\r\n        at com.google.android.exoplayer2.source.hls.HlsMediaChunk.prepareExtraction(HlsMediaChunk.java:379)\r\n        at com.google.android.exoplayer2.source.hls.HlsMediaChunk.feedDataToExtractor(HlsMediaChunk.java:350)\r\n        at com.google.android.exoplayer2.source.hls.HlsMediaChunk.loadMedia(HlsMediaChunk.java:325)\r\n        at com.google.android.exoplayer2.source.hls.HlsMediaChunk.load(HlsMediaChunk.java:301)\r\n        at com.google.android.exoplayer2.upstream.Loader$LoadTask.run(Loader.java:394)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)\r\n        at java.lang.Thread.run(Thread.java:764)\r\n2019-12-19 17:39:48.844 10356-10405/com.xxx.yyyy E/ExoPlayerImplInternal: Source error.\r\n    com.google.android.exoplayer2.upstream.Loader$UnexpectedLoaderException: Unexpected NullPointerException: Attempt to invoke virtual method 'int com.google.android.exoplayer2.metadata.Metadata.length()' on a null object reference\r\n        at com.google.android.exoplayer2.upstream.Loader$LoadTask.run(Loader.java:416)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)\r\n        at java.lang.Thread.run(Thread.java:764)\r\n     Caused by: java.lang.NullPointerException: Attempt to invoke virtual method 'int com.google.android.exoplayer2.metadata.Metadata.length()' on a null object reference\r\n        at com.google.android.exoplayer2.source.hls.DefaultHlsExtractorFactory.createFragmentedMp4Extractor(DefaultHlsExtractorFactory.java:276)\r\n        at com.google.android.exoplayer2.source.hls.DefaultHlsExtractorFactory.createExtractorByFileExtension(DefaultHlsExtractorFactory.java:212)\r\n        at com.google.android.exoplayer2.source.hls.DefaultHlsExtractorFactory.createExtractor(DefaultHlsExtractorFactory.java:114)\r\n        at com.google.android.exoplayer2.source.hls.HlsMediaChunk.prepareExtraction(HlsMediaChunk.java:379)\r\n        at com.google.android.exoplayer2.source.hls.HlsMediaChunk.feedDataToExtractor(HlsMediaChunk.java:350)\r\n        at com.google.android.exoplayer2.source.hls.HlsMediaChunk.loadMedia(HlsMediaChunk.java:325)\r\n        at com.google.android.exoplayer2.source.hls.HlsMediaChunk.load(HlsMediaChunk.java:301)\r\n        at com.google.android.exoplayer2.upstream.Loader$LoadTask.run(Loader.java:394)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167) \r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641) \r\n        at java.lang.Thread.run(Thread.java:764)\r\n```"
      },
      {
        "user": "ojw28",
        "created_at": "2019-12-19T18:36:12Z",
        "body": "The specific `NullPointerException` wont occur in 2.11.0 because there's now a check for it. I doubt that's sufficient to make your approach work though.\r\n\r\n> I would like to use the m3u8 to manage the selection of multi bitrate, multi track audio and multi track subtitles in a single file as I already do for online content.\r\n\r\nI assume you're using HLS for streamed content. Is that correct? It should be possible for you to play HLS content locally in the same way, so there's nothing particularly wrong with the principle of what you're trying to do. I would question whether the HLS playlist you've provided is actually a valid HLS playlist though. It looks a bit like an invalid HLS playlist created by editing a valid one, putting a link to a single (non-fragmented?) MP4 into it, and hoping that works. If you want to play HLS content then you need to ensure that the content you've created complies with the HLS spec."
      },
      {
        "user": "andrea157",
        "created_at": "2019-12-22T21:34:20Z",
        "body": "Hi, thanks for your support, I understand my mistake.\r\nNow I have rewrite my m3u8: \r\n\r\n> #EXTM3U\r\n#EXT-X-STREAM-INF:PROGRAM-ID=1,BANDWIDTH=852000,RESOLUTION=854x480\r\n480_out.m3u8\r\n#EXT-X-STREAM-INF:PROGRAM-ID=1,BANDWIDTH=852000,RESOLUTION=1280x720\r\n720_out.m3u8\r\n\r\nand 480_out.m3u8 (720_out is similar) is:\r\n\r\n> #EXTM3U\r\n#EXT-X-VERSION:3\r\n#EXT-X-TARGETDURATION:9\r\n#EXT-X-MEDIA-SEQUENCE:0\r\n#EXTINF:9.080000,\r\n480_out0.ts\r\n#EXTINF:2.120000,\r\n480_out1.ts\r\n...\r\n#EXTINF:1.440000,\r\n480_out13.ts\r\n#EXT-X-ENDLIST\r\n\r\nNow the content is correctly played and I can select the quality track but I have another issue, when I do a seek back I have this error:\r\n\r\n```\r\n2019-12-22 22:26:12.233 4422-4914/com.xxx.yyyE/ExoPlayerImplInternal: Source error.\r\n    com.google.android.exoplayer2.source.UnrecognizedInputFormatException: Input does not start with the #EXTM3U header.\r\n        at com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParser.parse(HlsPlaylistParser.java:197)\r\n        at com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParser.parse(HlsPlaylistParser.java:60)\r\n        at com.google.android.exoplayer2.upstream.ParsingLoadable.load(ParsingLoadable.java:172)\r\n        at com.google.android.exoplayer2.upstream.Loader$LoadTask.run(Loader.java:394)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)\r\n        at java.lang.Thread.run(Thread.java:764)\r\n```\r\n\r\nCan you help me?\r\nThanks"
      },
      {
        "user": "ojw28",
        "created_at": "2019-12-22T22:55:25Z",
        "body": "The error is:\r\n```\r\nInput does not start with the #EXTM3U header.\r\n```\r\nOne of your playlist files doesn't start with the `#EXTM3U` line, so the media is still not correctly formatted."
      }
    ]
  },
  {
    "number": 6786,
    "title": "Exoplayer and RTMPS videos",
    "created_at": "2019-12-19T09:40:18Z",
    "closed_at": "2020-01-11T02:06:53Z",
    "labels": [
      "question",
      "need more info",
      "stale",
      "closed-by-bot"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6786",
    "body": "Hi.\r\nI updated to 2.11.0 version and I'm trying to show rtmps videos but I have this error:\r\n\r\n2019-12-19 10:34:53.996 31719-32028/it.telecomitalia.videolibrary E/ExoPlayerImplInternal: Source error.\r\n    net.butterflytv.rtmp_client.RtmpClient$RtmpIOException: RTMP error: -10\r\n        at net.butterflytv.rtmp_client.RtmpClient.open(RtmpClient.java:222)\r\n        at com.google.android.exoplayer2.ext.rtmp.RtmpDataSource.open(RtmpDataSource.java:49)\r\n        at com.google.android.exoplayer2.upstream.StatsDataSource.open(StatsDataSource.java:83)\r\n        at com.google.android.exoplayer2.source.ProgressiveMediaPeriod$ExtractingLoadable.load(ProgressiveMediaPeriod.java:961)\r\n        at com.google.android.exoplayer2.upstream.Loader$LoadTask.run(Loader.java:391)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)\r\n        at java.lang.Thread.run(Thread.java:764)\r\n\r\nMy code is:\r\n\r\n`MediaSource mediaSource; RtmpDataSourceFactory rtmpFactory = new RtmpDataSourceFactory();\r\n mediaSource = new ProgressiveMediaSource.Factory(rtmpFactory).createMediaSource(Uri.parse(videoUrl));\r\nmediaSource.addEventListener(mainHandler, mediaSourceEventListener);\r\nplayer.prepare(mediaSource,true,false);`\r\n\r\nCould you help me? Is there a workaround to play RTMPS videos?\r\n\r\nThanks",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6786/comments",
    "author": "XanderSan",
    "comments": [
      {
        "user": "Samrobbo",
        "created_at": "2019-12-20T10:17:28Z",
        "body": "Hi @XanderSan,\r\n\r\nCan I get a link to the media you are trying to play please? If you do not wish to share publicly, email it to dev.exoplayer@gmail.com, making sure to quote \"Issue #6786\" as the title.\r\n\r\nThanks :)"
      },
      {
        "user": "XanderSan",
        "created_at": "2019-12-20T11:07:37Z",
        "body": "Thanks for your support.\r\nI'll try to schedule this work in January 2020 because I need to call permission to do it and in this moment is not possible."
      },
      {
        "user": "umangsaini",
        "created_at": "2019-12-20T12:29:23Z",
        "body": "For RTMPS please refer to the this issue #5354.\r\n\r\nFor RTMP links, you may try playing links from issue #6187, to confirm if there is any issue with your project. I am able to play RTMP streams with latest v2.11.0 Demo app and extensions enabled."
      },
      {
        "user": "google-oss-bot",
        "created_at": "2020-01-04T02:06:33Z",
        "body": "<!-- event: mark-stale -->\nHey @XanderSan. We need more information to resolve this issue but there hasn't been an update in 14 days. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2020-01-11T02:06:52Z",
        "body": "<!-- event: close-stale -->\nSince there haven't been any recent updates here, I am going to close this issue.\n\n@XanderSan if you're still experiencing this problem and want to continue the discussion just leave a comment here and we are happy to re-open this."
      }
    ]
  },
  {
    "number": 6782,
    "title": "Can you play fragmented mp4?",
    "created_at": "2019-12-18T13:27:07Z",
    "closed_at": "2019-12-22T20:15:09Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6782",
    "body": "Hello, I'm trying to play a fragmented mp4 file on my player.\r\nThis is how I set the source:\r\n```\r\nFile fragmentedFile = new File(\"/media\", \"testfile.mp4\");\r\nDataSource.Factory dataSourceFactory = new DefaultDataSourceFactory(context, Util.getUserAgent(context, \"MyUserAgent\"));\r\nMediaSource videoSource = new ProgressiveMediaSource.Factory(dataSourceFactory).createMediaSource(Uri.fromFile(fragmentedFile));\r\nsimpleExoPlayer.setPlayWhenReady(true);\r\nsimpleExoPlayer.prepare(videoSource);\r\n```\r\nAnd this is the error I get:\r\n```\r\nE/ExoPlayerImplInternal: Source error.\r\n    com.google.android.exoplayer2.source.UnrecognizedInputFormatException: None of the available extractors (MatroskaExtractor, FragmentedMp4Extractor, Mp4Extractor, Mp3Extractor, AdtsExtractor, Ac3Extractor, TsExtractor, FlvExtractor, OggExtractor, PsExtractor, WavExtractor, AmrExtractor, Ac4Extractor) could read the stream.\r\n        at com.google.android.exoplayer2.source.ProgressiveMediaPeriod$ExtractorHolder.selectExtractor(ProgressiveMediaPeriod.java:1074)\r\n        at com.google.android.exoplayer2.source.ProgressiveMediaPeriod$ExtractingLoadable.load(ProgressiveMediaPeriod.java:952)\r\n        at com.google.android.exoplayer2.upstream.Loader$LoadTask.run(Loader.java:394)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)\r\n        at java.lang.Thread.run(Thread.java:914)\r\n```\r\nVideo format: mp4\r\nVideo codec: H264 MPEG-4 AVC\r\nAudio codec: MPEG AAC\r\n\r\nIt seems strange to me that it can't play fragmented videos and I know that the video has no problems (For example, it works fine on VLC).\r\n\r\nI tried\r\n```\r\nDefaultExtractorsFactory extractorsFactory = new DefaultExtractorsFactory().setFragmentedMp4ExtractorFlags(FragmentedMp4Extractor.FLAG_WORKAROUND_IGNORE_EDIT_LISTS);\r\n```\r\nbut same error.\r\nAm I missing something or you cannot play fragmented videos with exoplayer?\r\nThanks",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6782/comments",
    "author": "ilpelatodijavascript",
    "comments": [
      {
        "user": "Samrobbo",
        "created_at": "2019-12-18T15:43:03Z",
        "body": "Hi, \r\n\r\nIs it possible for you to provide us with a link to the test content, so that I can reproduce the issue.\r\n(feel free to send to dev.exoplayer@gmail.com with Issue #6782 as the title if you do not with to share publicly)\r\n\r\nThanks"
      },
      {
        "user": "ojw28",
        "created_at": "2019-12-19T12:34:07Z",
        "body": "> Am I missing something or you cannot play fragmented videos with exoplayer?\r\n\r\nWe do support fragmented MP4. Please provide a link to the test content, or send it to us as requested above, so that we can have a look.\r\n\r\n> I know that the video has no problems (For example, it works fine on VLC).\r\n\r\nThis does not necessarily mean the video has no problem. All it means is that VLC can play it. Those two things are not the same."
      },
      {
        "user": "ilpelatodijavascript",
        "created_at": "2019-12-19T18:04:07Z",
        "body": "I sent an email"
      },
      {
        "user": "ojw28",
        "created_at": "2019-12-19T18:23:12Z",
        "body": "It's unclear from your email what you're trying to do, but it sounds more complicated than just playing a fragmented MP4 file. You mention that the file plays fine once it's fully copied, which suggests there's no issue with ExoPlayer's FMP4 support.\r\n\r\nNote that it's generally not valid to give ExoPlayer a File URI to play if the file is still incomplete or being modified. That sounds very uncontrolled in general. I think you should rethink your approach of whatever it is that you're trying to accomplish."
      },
      {
        "user": "ilpelatodijavascript",
        "created_at": "2019-12-21T12:54:49Z",
        "body": "After some tests I've found out that the video plays fine untill the end of the fragment, so, at the beginning, it only shows 3/4 seconds, but if you set the video on loop it plays fine for 3/4 more seconds and so on.\r\nSo I tried to put the player position back to the last position before restarting the video, however it always goes back to the beginning of it.\r\nIt seems strange to me because the media is listed as a seeakable media (it's an mp4).\r\nHere is my code:\r\n````\r\nDataSource.Factory dataSourceFactory = new DefaultDataSourceFactory(context, Util.getUserAgent(context, \"UA\"));\r\nMediaSource videoSource = new ProgressiveMediaSource.Factory(dataSourceFactory).createMediaSource(Uri.fromFile(rFile));\r\nsimpleExoPlayer.setPlayWhenReady(true);\r\nsimpleExoPlayer.prepare(videoSource, false, true);\r\nsimpleExoPlayer.addListener(new Player.EventListener() {\r\n    @Override\r\n    public void onIsPlayingChanged(boolean isPlaying) {\r\n        if(!isPlaying){\r\n            //Player Stopped!\r\n            long latestPos = simpleExoPlayer.getContentPosition();\r\n            //Seeking to latestPos\r\n            simpleExoPlayer.seekTo(latestPos);\r\n            simpleExoPlayer.setPlayWhenReady(true);\r\n        }\r\n    }\r\n});\r\n````\r\n\r\nAlso, seekToDefaultPosition(); seeks at the beginning because it thinks it's a normal video"
      },
      {
        "user": "ojw28",
        "created_at": "2019-12-21T13:32:53Z",
        "body": "As per my previous response:\r\n\r\n> Note that it's generally not valid to give ExoPlayer a File URI to play if the file is still incomplete or being modified. That sounds very uncontrolled in general. I think you should rethink your approach of whatever it is that you're trying to accomplish.\r\n\r\nIf you want to play media that's still being modified, you should implement a custom `DataSource` that's able to do the right thing (e.g. indicate that the length of the media is still unknown, block until more media is available before returning, and know when the end of the media has been reached). The problem with trying to do this just by writing and reading a file is that the player doesn't have sufficient information to know what's going on (e.g. it has no way of knowing whether the file length might change, and it has no way of knowing when the writing side has stopped writing)."
      }
    ]
  },
  {
    "number": 6780,
    "title": "Supporting rendering a playlist overlay on top of the player.",
    "created_at": "2019-12-18T12:11:02Z",
    "closed_at": "2019-12-20T15:47:40Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6780",
    "body": "Before filing a question:\r\n-----------------------\r\n### [REQUIRED] \r\nSearched documentation and issues but didnt get the answer\r\n\r\n### [REQUIRED] Question\r\nDoes exoplayer UI support rendering a playlist overlayed on top of player?\r\n\r\nCan we draw a playlist (with asset cards) using **exoplayer.ui** class and let exoplayer control playback of any selected asset? ",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6780/comments",
    "author": "krackjack234",
    "comments": [
      {
        "user": "Samrobbo",
        "created_at": "2019-12-18T15:52:20Z",
        "body": "Hi,\r\n\r\nCurrently, this functionality does not exist. It would be a RecyclerView with an item for each window from what I know.\r\n\r\nThis isn't actually possible with core ExoPlayer at the moment, as the player does not have all the meta data. \r\n\r\nWe are planning to extend some of our functionality, which would make it easier to do, however there is no set timeline as to when this will be done.\r\n\r\n"
      },
      {
        "user": "ojw28",
        "created_at": "2019-12-19T13:39:34Z",
        "body": "I don't really understand what this issue is tracking. It's possible to build this kind of UI today in application code, and it's not the job of the library to implement application UI to this extent. Please could you clarify?"
      },
      {
        "user": "Samrobbo",
        "created_at": "2019-12-20T15:47:40Z",
        "body": "I must have misunderstood what the current capabilities are. In that case, happy to close. "
      }
    ]
  },
  {
    "number": 6762,
    "title": "Is it possible to buffer the individual parts of the video?",
    "created_at": "2019-12-13T09:40:20Z",
    "closed_at": "2020-01-07T02:16:16Z",
    "labels": [
      "question",
      "need more info",
      "stale",
      "closed-by-bot"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6762",
    "body": "Is it possible to buffer the individual parts of the video? For example, I have a video that lasts 50 seconds. Can I buffer 0-2, 10-12 and 20-22 seconds? If the current position position has changed by 3 seconds, then 3-5, 13-15 and 23-25 and so on.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6762/comments",
    "author": "AlbertKobyakov",
    "comments": [
      {
        "user": "Samrobbo",
        "created_at": "2019-12-16T13:32:42Z",
        "body": "Hi, trying to get some context here. \r\n\r\nWhat is it you're trying to achieve? Why should the player not buffer all of the upcoming media?"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2019-12-31T02:06:25Z",
        "body": "<!-- event: mark-stale -->\nHey @AlbertKobyakov. We need more information to resolve this issue but there hasn't been an update in 14 days. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2020-01-07T02:16:15Z",
        "body": "<!-- event: close-stale -->\nSince there haven't been any recent updates here, I am going to close this issue.\n\n@AlbertKobyakov if you're still experiencing this problem and want to continue the discussion just leave a comment here and we are happy to re-open this."
      }
    ]
  },
  {
    "number": 6759,
    "title": "How to get BufferInfo in ExoPlayer 2?",
    "created_at": "2019-12-12T14:27:12Z",
    "closed_at": "2019-12-12T19:01:21Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6759",
    "body": "Hi,\r\n**BufferInfo** was available in ExoPlayer 1 in the **processOutputBuffer** method, But in curently veresion bufferInfo not exist in **processOutputBuffer**\r\nIn version 1 I had access to **BufferInfo** by extending **MediaCodecAudioRenderer** Class and implementing **processOutputBuffer**\r\nAs you can see below\r\n\r\nVersion 1:\r\n```\r\n@Override\r\nprotected boolean processOutputBuffer(long positionUs,\r\n                                      long elapsedRealtimeUs,\r\n                                      MediaCodec codec,\r\n                                      ByteBuffer buffer,\r\n                                      MediaCodec.BufferInfo bufferInfo, //TODO: BufferInfo\r\n                                      int bufferIndex,\r\n                                      boolean shouldSkip)\r\n        throws com.google.android.exoplayer.ExoPlaybackException {\r\n\r\n    //using bufferInfo\r\n\r\n    return super.processOutputBuffer(positionUs,\r\n            elapsedRealtimeUs,\r\n            codec,\r\n            buffer,\r\n            bufferInfo,\r\n            bufferIndex,\r\n            shouldSkip);\r\n}\r\n```\r\nLast Version:\r\n```\r\n    protected boolean processOutputBuffer(long positionUs,\r\n                                          long elapsedRealtimeUs,\r\n                                          MediaCodec codec,\r\n                                          ByteBuffer buffer,\r\n                                          int bufferIndex,\r\n                                          int bufferFlags,\r\n                                          long bufferPresentationTimeUs,\r\n                                          boolean isDecodeOnlyBuffer,\r\n                                          boolean isLastBuffer,\r\n                                          Format format) throws ExoPlaybackException {\r\n\r\n        return super.processOutputBuffer(positionUs,\r\n                elapsedRealtimeUs,\r\n                codec,\r\n                buffer,\r\n                bufferIndex,\r\n                bufferFlags,\r\n                bufferPresentationTimeUs,\r\n                isDecodeOnlyBuffer,\r\n                isLastBuffer,\r\n                format);\r\n    }\r\n```\r\nAs you can see there is no **BufferInfo** inside **processOutputBuffer** method in the last version\r\nI need to get BufferInfo for read '**size**' and '**offset**' and '**presentationTimeUs**', How to do this in the latest version?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6759/comments",
    "author": "saleh-gholamian",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2019-12-12T19:01:21Z",
        "body": "All the information is still there. It's just in slightly different places:\r\n* `bufferFlags` in V2 is the same as `bufferInfo.flags` in V1\r\n* `bufferPresentationTimeUs` in V2 is the same as `bufferInfo.presentationTimeUs` in V1\r\n* `buffer.position()` in V2 is the same as `bufferInfo.offset` in V1\r\n* `buffer.limit() - buffer.position()` in V2 is the same as `bufferInfo.size` in V1"
      },
      {
        "user": "saleh-gholamian",
        "created_at": "2019-12-13T08:54:39Z",
        "body": "> All the information is still there. It's just in slightly different places:\r\n\r\n    bufferFlags in V2 is the same as bufferInfo.flags in V1\r\n    bufferPresentationTimeUs in V2 is the same as bufferInfo.presentationTimeUs in V1\r\n    buffer.position() in V2 is the same as bufferInfo.offset in V1\r\n    buffer.limit() - buffer.position() in V2 is the same as bufferInfo.size in V1\r\n\r\nVery Thanks"
      }
    ]
  },
  {
    "number": 6736,
    "title": "why exoplayer takes 30 to 40 seconds to stream video from url (firebase)....?",
    "created_at": "2019-12-07T09:49:11Z",
    "closed_at": "2020-01-01T02:06:28Z",
    "labels": [
      "question",
      "need more info",
      "stale",
      "closed-by-bot"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6736",
    "body": "   //Minimum Video you want to buffer while Playing\r\n    public static final int MIN_BUFFER_DURATION = 1000;\r\n    //Max Video you want to buffer during PlayBack\r\n    public static final int MAX_BUFFER_DURATION = 2000;\r\n    //Min Video you want to buffer before start Playing it\r\n    public static final int MIN_PLAYBACK_START_BUFFER = 1000;\r\n    //Min video You want to buffer when user resumes video\r\n    public static final int MIN_PLAYBACK_RESUME_BUFFER = 1000;\r\n\r\n playerView = (PlayerView)findViewById(R.id.player_view);\r\n\r\n        LoadControl loadControl = new DefaultLoadControl.Builder()\r\n                .setAllocator(new DefaultAllocator(true, 16))\r\n                .setBufferDurationsMs(MIN_BUFFER_DURATION,\r\n                        MAX_BUFFER_DURATION,\r\n                        MIN_PLAYBACK_START_BUFFER,\r\n                        MIN_PLAYBACK_RESUME_BUFFER)\r\n                .setTargetBufferBytes(-1)\r\n                .setPrioritizeTimeOverSizeThresholds(true).createDefaultLoadControl();\r\n        TrackSelector trackSelector = new DefaultTrackSelector();\r\n\r\n        SimpleExoPlayer player = ExoPlayerFactory.newSimpleInstance(context,trackSelector,loadControl);\r\n        playerView.setPlayer(player);\r\n        // Produces DataSource instances through which media data is loaded.\r\n        DataSource.Factory dataSourceFactory = new DefaultDataSourceFactory(context,\r\n                Util.getUserAgent(context, \"Appsta\"));\r\n        // This is the MediaSource representing the media to be played.\r\n        MediaSource videoSource = new ProgressiveMediaSource.Factory(dataSourceFactory)\r\n                .createMediaSource(Uri.parse(K.videoUrl));\r\n      // Prepare the player with the source.\r\n        player.prepare(videoSource);\r\n\r\n\r\n        player.setPlayWhenReady(true);*/",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6736/comments",
    "author": "AshpakSk",
    "comments": [
      {
        "user": "giladna",
        "created_at": "2019-12-09T14:47:31Z",
        "body": "@AshpakSk \r\n\r\nyou should check in charles  what is the bottleneck\r\n1) dns \r\n2) handshake\r\n3) ssl\r\n4) latency\r\n\r\nonce you have the input you can try fix the problematic component\r\nA proven solution that can speed up the playback is using okhttp as http layer and not Connection URL\r\nthis will allow you to open a connection to the server where urls are hosted before the playback starts\r\nso the network overhead will be minimal once you try to play some media and playback will start faster."
      },
      {
        "user": "christosts",
        "created_at": "2019-12-09T14:59:42Z",
        "body": "Hi @AshpakSk ,\r\n\r\nAs @giladna points, inspecting the network/transport delays will help understanding where the possible cause of delay is.\r\n\r\nTo help you further, can you please share a link to your content, the ExoPlayer version and the device you are working on (if it is a specific device)? If you cannot share any of this information in public, you can send it over email to dev.exoplayer@gmail.com using the subject \"Issue #6736\"\r\n"
      },
      {
        "user": "AshpakSk",
        "created_at": "2019-12-09T16:08:47Z",
        "body": "thanks for your response @giladna i will try."
      },
      {
        "user": "google-oss-bot",
        "created_at": "2019-12-24T02:06:41Z",
        "body": "<!-- event: mark-stale -->\nHey @AshpakSk. We need more information to resolve this issue but there hasn't been an update in 14 days. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2020-01-01T02:06:27Z",
        "body": "<!-- event: close-stale -->\nSince there haven't been any recent updates here, I am going to close this issue.\n\n@AshpakSk if you're still experiencing this problem and want to continue the discussion just leave a comment here and we are happy to re-open this."
      }
    ]
  },
  {
    "number": 6727,
    "title": "How to show the subtitles at the beginning?",
    "created_at": "2019-12-05T07:52:11Z",
    "closed_at": "2019-12-06T00:46:25Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6727",
    "body": "@kim-vde \r\n\r\nHello.\r\n\r\nOnce I try to show the subtitles at the beginning, I got some problems in the following code,\r\n\r\n\r\nMy code is \r\n```\r\n        int textRenderer = Utils.getRendererIndex(simpleExoPlayer, C.TRACK_TYPE_TEXT);\r\n        final TrackGroupArray textTracks = trackSelector.getCurrentMappedTrackInfo()\r\n                .getTrackGroups(textRenderer);\r\n\r\n        List<String> availableLanguages = new ArrayList<>(textTracks.length);\r\n        trackSelector.setPreferredTextLanguage(captionLanguage);\r\n```\r\n\r\nIn this code, the problem is where getCurrentMappedTrackInfo() is ***null***. \r\n\r\nI want to receive events on onCues(List\\<Cue\\> cues) as soon as the player begins.\r\nPlease let me know how to show the subtitles at the beginning. \r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6727/comments",
    "author": "tuxxon",
    "comments": [
      {
        "user": "kim-vde",
        "created_at": "2019-12-05T15:44:29Z",
        "body": "The mapped track info is only available after the player has been prepared. Even in this case, the information is not directly available and you need to use `Player.EventListener.onTracksChanged()` to make sure `getCurrentMappedTrackInfo()` is not null.\r\n\r\nAlso, the preferred language should ideally be selected before the player is prepared.\r\n\r\nTherefore, you should:\r\n1) select the preferred language,\r\n2) call `player.prepare()`,\r\n3) retrieve the mapped track info though a listener.\r\n\r\nIf it is not possible because you need the available languages to select the preferred language, you can set the preferred language later but it is less performent as the player may already have loaded the subtitles in another language. You also need to make sure that the player does not start playing in another language before you set the preferred language."
      },
      {
        "user": "tuxxon",
        "created_at": "2019-12-06T00:46:25Z",
        "body": "I am appreciated for your comment and gonna try this."
      }
    ]
  },
  {
    "number": 6718,
    "title": "Where is the code that hide a subtitle since being elapsed a given time?",
    "created_at": "2019-12-02T14:41:37Z",
    "closed_at": "2019-12-03T01:54:30Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6718",
    "body": "### Problem.\r\n  I have searched Cue.java, Subtitle.java, SimpleExoPlayer.java and so on  for the codes that hide a subtitle since being elapsed a given time. But I couldn't at this moment.\r\n\r\nPlease Let me know where the codes are.\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6718/comments",
    "author": "tuxxon",
    "comments": [
      {
        "user": "kim-vde",
        "created_at": "2019-12-02T16:33:08Z",
        "body": "The display of cues is based on events, as you can see in class `Subtitle`. A cue disappears when a new event (containing an empty cue or another cue to display) starts.\r\n\r\nThe display of subtitles is handled in `SubtitleView`. If you want to implement your own display, you will need to write a new class that implements interface `TextOutput`.\r\n\r\nDoes that answer your question? If not, could you be more specific about what you are looking for exactly and about what you want to achieve?"
      },
      {
        "user": "tuxxon",
        "created_at": "2019-12-03T01:54:30Z",
        "body": "Thank you for your commenting. \r\n\r\nWith your comment when I have checked out ***onCues()*** including ***cues.size(), player.getCurrentPostion()***, I got an empty cue and current position.\r\n\r\nI am really appreciated for this.\r\n"
      }
    ]
  },
  {
    "number": 6710,
    "title": "Exoplayer releases itself when in background",
    "created_at": "2019-11-29T09:55:01Z",
    "closed_at": "2019-11-30T15:26:17Z",
    "labels": [
      "question",
      "need more info"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6710",
    "body": "#6386 # [REQUIRED] Searched documentation and issues\r\n\r\nTried searching on Google but didn't find anything relevant.\r\n\r\n### [REQUIRED] Question\r\nI have an app that can play videos. I use a single instance of exoplayer that i initialize in a service so that the user can listen and control the video in background. The problem is that when a video is playing, the user goes into background and then pauses the player for 1-2 minutes exoplayer releases itself. So when the app comes back to the foreground all i have is a black screen playerView with no video in it.\r\n\r\n### A full bug report captured from the device\r\n```\r\n2019-11-29 10:26:51.715 23697-26444/app  D/FA: Application backgrounded\r\n2019-11-29 10:26:51.738 23697-26444/app  D/FA: Logging event (FE): app_background(_ab), Bundle[{ga_event_origin(_o)=auto}]\r\n2019-11-29 10:28:13.053 23697-23697/app  I/ExoPlayerImpl: Release 192e8c2 [ExoPlayerLib/2.10.4] [HWSTK-HF, STK-LX1, HUAWEI, 28] [goog.exo.core, goog.exo.ui, goog.exo.hls]\r\n2019-11-29 10:28:13.080 23697-26655/app  D/android.media.AudioTrack: [HSM] AudioTrace stop() uid: 10308, pid: 23697\r\n2019-11-29 10:28:13.084 23697-25116/app W/ACodec: forcing OMX state to Idle when received shutdown in ExecutingState\r\n2019-11-29 10:28:13.136 23697-25115/app  D/SurfaceUtils: disconnecting from surface 0x723f653010, reason disconnectFromSurface\r\n2019-11-29 10:28:13.167 23697-25127/app  W/ACodec: forcing OMX state to Idle when received shutdown in ExecutingState\r\n```\r\n\r\nAs you can see i backgrounded the video and then pause it. After 1.5 minutes without touching the phone  exoplayer released itself. \r\nI can see how this could be done on purpose to free some resources but is there any way to override this?\r\n\r\nThis is what happens when i bring the app to the foreground:\r\n```\r\n2019-11-29 10:58:47.192 23697-23697/app D/ZrHung.AppEyeUiProbe: notify runnable to start.\r\n2019-11-29 10:58:47.192 23697-23750/app D/ZrHung.AppEyeUiProbe: restart watching\r\n2019-11-29 10:58:47.220 23697-27978/app D/FA: Setting user property (FE): _sid, 1575021527\r\n2019-11-29 10:58:47.278 23697-23768/app D/mali_winsys: EGLint new_window_surface(egl_winsys_display *, void *, EGLSurface, EGLConfig, egl_winsys_surface **, EGLBoolean) returns 0x3000\r\n2019-11-29 10:58:47.289 23697-23697/app I/ExoPlayerImpl: Init aaeb70c [ExoPlayerLib/2.10.4] [HWSTK-HF, STK-LX1, HUAWEI, 28]\r\n2019-11-29 10:58:47.296 23697-27978/app D/FA: Logging event (FE): session_start(_s), Bundle[{ga_event_origin(_o)=auto, ga_session_id(_sid)=1575021527}]\r\n2019-11-29 10:58:47.330 23697-27978/app D/FA: Logging event (FE): app_start, Bundle[{method=app_start, ga_event_origin(_o)=app, ga_screen_class(_sc)=MainActivity, ga_screen_id(_si)=5911828178843061323}]\r\n2019-11-29 10:58:47.454 23697-23697/app I/ViewRootImpl: jank_removeInvalidNode all the node in jank list is out of time\r\n2019-11-29 10:58:47.465 23697-23697/app W/InputMethodManager: startInputReason = 1\r\n2019-11-29 10:58:47.500 23697-27978/app D/FA: Connected to remote service\r\n```\r\n\r\nI'm pretty new at this so i don't really understand what all this means or if it's useful at all.\r\nThanks in advance for your time!\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6710/comments",
    "author": "Cosminnv",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2019-11-30T15:10:16Z",
        "body": "I don't think ExoPlayer does release itself automatically after a given time. But probably the service does release the player when it is destroyed, which would be the correct behaviour of the service.\r\n\r\nWith the available information that sounds like you may call stopForeground(boolean) when the user pauses the player. With this the service is not running in the foreground anymore and the system may remove/destroy the service after a given amount of time (the 2 minutes you are reporting seems reasonable). \r\n\r\nIf this is the case then the service is behaving correctly and according to what the recommendation is for having the player in a foreground service. If you want to override this, then you should not call stopForeground(boolean) for your service.\r\n\r\nMy recommendation would be to remove the service from the foreground as you do, but then. When the app comes to foreground again you have to restart the service and then resume playback from where it was paused.\r\n\r\nAside: is there a specific reason why you have the player in a service for playing a video? Usually this is required for audio, when playback should continue when the player is in background. In case of video you could have the player living in the activity instead."
      },
      {
        "user": "Cosminnv",
        "created_at": "2019-11-30T15:26:17Z",
        "body": "Hi, thanks for the reply.\r\n\r\nYou're right, i do call stopForeground when the player is paused ,but i only do that because i want the user to be able to swipe the notification away without killing the video ( kinda like spotify does). I'll try to do it like you recommended.\r\n\r\nAlso, i kinda need the player to be in a service because i have video of a guy talking. So you can watch him while he is speaking but you can also only listen to him.\r\n\r\nI think i got everything i needed, thank you very much!"
      }
    ]
  },
  {
    "number": 6707,
    "title": "Library source does not match the bytecode for class ImaAdsLoader",
    "created_at": "2019-11-28T03:24:52Z",
    "closed_at": "2019-11-29T16:45:30Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6707",
    "body": "While displaying ads with IMA extension and the ProgressiveMediaSource, I am getting the following error. The app crashed just after the preroll ad completes.\r\nOn navigating to the class ImaAdsLoader I get the error \"Library source does not match the bytecode for class ImaAdsLoader\"\r\n`\r\njava.lang.NoSuchMethodError: No virtual method getAdGroupIndexAfterPositionUs(J)I in class Lcom/google/android/exoplayer2/source/ads/AdPlaybackState; or its super classes (declaration of 'com.google.android.exoplayer2.source.ads.AdPlaybackState' appears in /data/app/com.example.exomedia-pEwo-P6MjYGRL3PeKbTLiw==/base.apk)\r\n        at com.google.android.exoplayer2.ext.ima.ImaAdsLoader.getContentProgress(ImaAdsLoader.java:758)\r\n        at com.google.ads.interactivemedia.v3.internal.iu.a(IMASDK:4)\r\n        at com.google.ads.interactivemedia.v3.internal.jh.handleMessage(IMASDK:27)\r\n        at android.os.Handler.dispatchMessage(Handler.java:102)\r\n        at android.os.Looper.loop(Looper.java:193)\r\n        at android.app.ActivityThread.main(ActivityThread.java:6692)\r\n        at java.lang.reflect.Method.invoke(Native Method)\r\n        at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:493)\r\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:858)\r\n`\r\nSteps to reproduce : \r\n    Use the following dependencies \r\n\r\n`    implementation 'com.google.android.exoplayer:exoplayer-core:2.10.7'\r\n    implementation 'com.google.android.exoplayer:exoplayer-ui:2.10.7'\r\n    implementation 'com.google.android.exoplayer:extension-ima:2.9.6'\r\n`\r\n\r\nAnd initiate the playback with the following code:\r\n\r\n`     player=ExoPlayerFactory.newSimpleInstance(this,DefaultTrackSelector())\r\n        player_view.player=player\r\n        adsLoader?.setPlayer(player)\r\n\r\n\r\n        val dataSourceFactory = DefaultDataSourceFactory(\r\n            this,\r\n            \"ExoDemo\")\r\n\r\n        val mediaSource:MediaSource=ProgressiveMediaSource.Factory(dataSourceFactory)\r\n            .createMediaSource(Uri.parse(resources.getString(R.string.media_url_mp4)))\r\n\r\n        val adsMediaSource = AdsMediaSource(mediaSource, dataSourceFactory, adsLoader, player_view)\r\n\r\n\r\n        player?.prepare(adsMediaSource)\r\n        player?.setPlayWhenReady(true)`\r\n\r\n\r\nThe works without any error with the following versions of the libraries and using ExtractorMediaSource:\r\n\r\n`    implementation 'com.google.android.exoplayer:exoplayer-core:2.9.6'\r\n    implementation 'com.google.android.exoplayer:exoplayer-ui:2.9.6'\r\n    implementation 'com.google.android.exoplayer:extension-ima:2.9.6'\r\n`\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6707/comments",
    "author": "droidmonktutorials",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2019-11-28T08:41:50Z",
        "body": "Does the error go away if you use the same version number for all the modules?"
      },
      {
        "user": "droidmonktutorials",
        "created_at": "2019-11-28T15:44:58Z",
        "body": "Yes it works, and I have realized that if I want to use _exoplayer-core:2.10.7_ then I can clone the ExoPlayer repository and depend on the module locally. \r\nBut it would have been great if we could use the latest version of exoplayer_core with extension_ima without cloning the repository. Is that not possible?"
      },
      {
        "user": "andrewlewis",
        "created_at": "2019-11-29T08:00:53Z",
        "body": "It shouldn't be necessary to clone the sources. It looks like the maven repository has both exoplayer-core:2.10.7 and extension-ima:2.10.7. Could you give some more details on what goes wrong if you try to depend on those?"
      },
      {
        "user": "droidmonktutorials",
        "created_at": "2019-11-29T15:59:38Z",
        "body": "My bad, it works. I am extremely sorry."
      }
    ]
  },
  {
    "number": 6690,
    "title": "Specific use-case of HLS streaming",
    "created_at": "2019-11-25T12:28:38Z",
    "closed_at": "2020-02-06T16:41:38Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6690",
    "body": "### [REQUIRED] Searched documentation and issues\r\nI have searched almost every medium blog I could find on the topic of HLS streaming and downloading.\r\nI also went through the issues.\r\n\r\n### [REQUIRED] Question\r\nI want to stream HLS content, by loading content into the cache and from the cache into the buffer.\r\nBy manually setting the load controller's max buffer to 10min I'll allocate too much (RAM) memory.\r\nI don't want to use the downloader because I want to be able to adaptively stream into the cache.\r\n\r\nAt all times I want to have: \r\n-    10min of cached content\r\n-    30s of buffered content\r\n\r\nI need advice from where to start such implementation or if it is possible to make something like this.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6690/comments",
    "author": "Arthas19",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2020-02-06T16:40:59Z",
        "body": "Sorry, I missed that totally. Please accept my apologies.\r\n\r\nFor the 30 seconds of buffered content you can use the `DefaultLoadControl` as you suggest.\r\n\r\nFor caching you could use a `CacheDataSource`. But with HLS there is the difficulty that there may be various adaptive stream defined in the HLS manifest. So you need to restrict playback to a single quality to make sure the player only uses that quality. This makes sure that the `CacheDataSource' caches what the player requests for download if you play again. That's what the `Downloader` does so I recommend using it.\r\n\r\n>  I want to be able to adaptively stream into the cache\r\n\r\nYou need a way to make sure that the player adapts in the very same way each time. Naturally, the cache can only cache what has been downloaded at a first playback. If a second playback adapts differently it does not work.\r\n\r\nThe only way I know to make sure that the player 'adapts' in the very same way each time, is restricting adaption to a single stream quality. That#s what the Downloader does.\r\n\r\n\r\n\r\n"
      },
      {
        "user": "marcbaechinger",
        "created_at": "2020-02-06T16:41:38Z",
        "body": "Sorry again for letting this issue slip through.\r\n\r\nI close now. Feel free to reopen in case you haven't solved your problem yet and you think we can help some further."
      }
    ]
  },
  {
    "number": 6683,
    "title": "BehindLiveWindowException",
    "created_at": "2019-11-21T19:10:20Z",
    "closed_at": "2019-11-22T10:24:04Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6683",
    "body": "Hi I have problems with playing a live stream. With a poor connection at some point ExoPlayer throws a \"BehindLiveWindowException\" exception. I tried to edit the \"HlsChunkSource\" class on line 292 in the library\r\n\r\n```\r\nif (chunkMediaSequence < mediaPlaylist.mediaSequence) {\r\n      fatalError = new BehindLiveWindowException();\r\n      return;\r\n    }\r\n\r\n```\r\nwith\r\n\r\n```\r\n  if (chunkMediaSequence <mediaPlaylist.mediaSequence) {\r\n       chunkMediaSequence = mediaPlaylist.mediaSequence + 2;\r\n     }\r\n\r\n```\r\nit is a very stupid test I know, but in this way the player does not freeze anymore but goes on until it retrieves a valid chunk.\r\n\r\nI wanted to know what problems this change can give, if there is a better way to write this change or if a way to force ExoPlayer to look for a new valid chunk is already in liberia.\r\n\r\nThanks",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6683/comments",
    "author": "andrea157",
    "comments": [
      {
        "user": "AquilesCanta",
        "created_at": "2019-11-22T10:24:04Z",
        "body": "It's a design decision that falling behind the live window has to be handed by the application. \r\n\r\nThe proposed approach is not ideal, because:\r\n- The Renderer will perceive a discontinuity.\r\n- It doesn't handle the case where one track is falling behind, but another one isn't. In which case you'll perceive a bit of a disruption in playback.\r\n\r\nI'd suggest you try preventing the BLWE instead of reacting to it. There's plenty of material about it in this issue tracker. Please have a look around. You can start with #4723."
      }
    ]
  },
  {
    "number": 6660,
    "title": "Black Screen  Player.STATE_ENDED",
    "created_at": "2019-11-16T02:45:16Z",
    "closed_at": "2019-12-10T02:05:50Z",
    "labels": [
      "question",
      "need more info",
      "stale",
      "closed-by-bot"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6660",
    "body": "Black screen problem:\r\nWhen my play completion status is: STATE_ENDED,\r\nAt this point, I press the Home button to return to the home page. When I return to this page again, the player changes from the last frame to a black screen. How can I solve this problem? I want to display the last frame when I return to the page! thanks",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6660/comments",
    "author": "longxuewei",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2019-11-17T13:20:28Z",
        "body": "Can you please shed some more light on what you mean with \"pressing the home screen and returning to the home page\"? Does this mean you are putting the app into background and return to the Android launcher?\r\n\r\nIf this is the case you need to store the current position and then recreate the ExoPlayer instance when the app comes to foreground again. Then you start the player at the stored position."
      },
      {
        "user": "google-oss-bot",
        "created_at": "2019-12-02T02:05:52Z",
        "body": "<!-- event: mark-stale -->\nHey @longxuewei. We need more information to resolve this issue but there hasn't been an update in 14 days. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2019-12-10T02:05:49Z",
        "body": "<!-- event: close-stale -->\nSince there haven't been any recent updates here, I am going to close this issue.\n\n@longxuewei if you're still experiencing this problem and want to continue the discussion just leave a comment here and we are happy to re-open this."
      }
    ]
  },
  {
    "number": 6651,
    "title": "PlayerNotificationManager not cancellable ",
    "created_at": "2019-11-14T09:06:30Z",
    "closed_at": "2019-11-24T15:02:15Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6651",
    "body": "I am using PlayerNotificationManager and attaching it to Exoplayer.\r\nI want to make the notification as cancellable when the video/audio is paused.\r\n\r\nI am using stopForeground(false) when my video is paused but still the notification is non cancellable.\r\n\r\n```\r\n  class MediaConsumptionService : Service(), Player.EventListener {\r\n\r\n    private var player: SimpleExoPlayer? = null\r\n    var image: Bitmap? = null\r\n    private lateinit var playerNotificationManager: PlayerNotificationManager\r\n\r\n    private val NOTIFICATION_CHANNEL_ID = \"playback_channel\"\r\n    private val NOTIFICATION_ID = 2\r\n    private var additionalJson: String? = null\r\n    private var trackId = 0L\r\n    private var trackTitle = \"\"\r\n    private var trackThumbUrl = \"\"\r\n\r\n    override fun onBind(intent: Intent?): IBinder? {\r\n        return null\r\n    }\r\n\r\n    override fun onCreate() {\r\n        super.onCreate()\r\n    }\r\n\r\n    override fun onStartCommand(intent: Intent?, flags: Int, startId: Int): Int {\r\n\r\n        player = VideoPlayer.getInstance().player\r\n        player?.addListener(this)\r\n        val context = this\r\n\r\n        val bundle = intent?.extras\r\n        if (bundle != null) {\r\n            trackId = bundle.getLong(MVConstants.PLAYBACK_TRACK_ID, 0)\r\n            trackTitle = bundle.getString(MVConstants.PLAYBACK_TRACK_TITLE, \"\")\r\n            trackThumbUrl = bundle.getString(MVConstants.PLAYBACK_TRACK_THUMB, \"\")\r\n            additionalJson = bundle.getString(MVConstants.MEDIA_JSON, \"\")\r\n            Glide.with(context)\r\n                    .asBitmap()\r\n                    .load(trackThumbUrl)\r\n                    .into(object : CustomTarget<Bitmap>() {\r\n\r\n                        override fun onLoadFailed(errorDrawable: Drawable?) {\r\n                            super.onLoadFailed(errorDrawable)\r\n                            addNotificationToPlayer()\r\n                        }\r\n\r\n                        override fun onResourceReady(resource: Bitmap, transition:\r\n                        Transition<in Bitmap>?) {\r\n                            image = resource\r\n                            addNotificationToPlayer()\r\n                        }\r\n\r\n                        override fun onLoadCleared(placeholder: Drawable?) {\r\n                        }\r\n                    })\r\n\r\n        }\r\n\r\n\r\n        return START_NOT_STICKY\r\n    }\r\n\r\n    private fun addNotificationToPlayer() {\r\n        if (player != null) {\r\n\r\n            playerNotificationManager = createWithNotificationChannel(\r\n                    this,\r\n                    NOTIFICATION_CHANNEL_ID,\r\n                    R.string.playback_channel_name,\r\n                    0,\r\n                    NOTIFICATION_ID,\r\n                    object : MediaDescriptionAdapter {\r\n\r\n                        override fun createCurrentContentIntent(player: Player?): PendingIntent? {\r\n                            val intent = VideoPlayer.getInstance().mediaSessionIntent\r\n                            intent.putExtra(MVConstants.MEDIA_JSON, additionalJson)\r\n                            intent.putExtra(MVConstants.PLAYBACK_TRACK_ID, trackId)\r\n                            intent.putExtra(MVConstants.FROM_NOTIFICATION, true)\r\n                            return PendingIntent.getActivity(applicationContext,\r\n                                    2, intent, PendingIntent.FLAG_UPDATE_CURRENT)\r\n                        }\r\n\r\n                        override fun getCurrentContentText(player: Player?): String? {\r\n                            return \"\"\r\n                        }\r\n\r\n                        override fun getCurrentContentTitle(player: Player?): String {\r\n                            return trackTitle\r\n                        }\r\n\r\n                        override fun getCurrentLargeIcon(player: Player?, callback:\r\n                        BitmapCallback?): Bitmap? {\r\n                            return image\r\n\r\n                        }\r\n                    },\r\n                    object : NotificationListener {\r\n\r\n                        override fun onNotificationPosted(notificationId: Int,\r\n                                                          notification: Notification?,\r\n                                                          ongoing: Boolean) {\r\n                            super.onNotificationPosted(notificationId, notification, ongoing)\r\n                            startForeground(notificationId, notification)\r\n                        }\r\n\r\n                        override fun onNotificationCancelled(notificationId: Int,\r\n                                                             dismissedByUser: Boolean) {\r\n                            super.onNotificationCancelled(notificationId, dismissedByUser)\r\n                            stopSelf()\r\n                        }\r\n                    }\r\n            )\r\n            // omit skip previous and next actions\r\n            playerNotificationManager.setUseNavigationActions(false);\r\n            // omit fast forward action by setting the increment to zero\r\n            playerNotificationManager.setFastForwardIncrementMs(0);\r\n            // omit rewind action by setting the increment to zero\r\n            playerNotificationManager.setRewindIncrementMs(0);\r\n\r\n            playerNotificationManager.setSmallIcon(R.drawable.ico_notification_wings)\r\n\r\n            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {\r\n                playerNotificationManager.setColor(ResourceUtils.getColor(R.color.mva_blue))\r\n            }\r\n\r\n            //assign the player to it\r\n            playerNotificationManager.setPlayer(player)\r\n        }\r\n    }\r\n\r\n    override fun onTaskRemoved(rootIntent: Intent) {\r\n        stopService()\r\n        super.onTaskRemoved(rootIntent)\r\n    }\r\n\r\n    /**\r\n     * Stop service and release the video player\r\n     * This is only executed if we remove the app from tasks or memory is low\r\n     */\r\n    private fun stopService() {\r\n        stopSelf()\r\n        VideoPlayer.getInstance().release()\r\n    }\r\n\r\n    override fun onTrimMemory(level: Int) {\r\n        stopService()\r\n        super.onTrimMemory(level)\r\n    }\r\n\r\n    override fun onPlayerStateChanged(playWhenReady: Boolean, playbackState: Int) {\r\n        super.onPlayerStateChanged(playWhenReady, playbackState)\r\n        when (playbackState) {\r\n            Player.STATE_BUFFERING -> {\r\n\r\n            }\r\n            Player.STATE_READY -> {\r\n                val videoPlaying = player?.playWhenReady ?: false\r\n                if (!videoPlaying) {\r\n                    **stopForeground(false)**\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    override fun onDestroy() {\r\n        if (::playerNotificationManager.isInitialized) {\r\n            playerNotificationManager.setPlayer(null)\r\n        }\r\n        //save the last played position for that track\r\n        if (player != null) {\r\n            PreferenceManager.putLong(\"$trackId\",\r\n                    player?.currentPosition ?: 0)\r\n            player?.removeListener(this)\r\n        }\r\n        super.onDestroy()\r\n    }\r\n\r\n\r\n}\r\n```\r\n\r\nMy minimum SDK is 16. I have also tried minimum SDK 21 but still does not works.\r\nMy Target SDK is 28.\r\nI have checked quite a few forums but could not find a solution.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6651/comments",
    "author": "harshmittal29",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2019-11-14T10:39:06Z",
        "body": "I think you do not need your own event listener. You can remove your `onPlayerStateChanged` and just do:\r\n\r\n```\r\npublic void onNotificationPosted(int notificationId,\r\n   Notification notification,\r\n   ongoing: Boolean) {\r\n  if (!ongoing) {\r\n    stopForeground(false)\r\n  } else {\r\n    startForeground(notificationId, notification)\r\n  }\r\n}\r\n```"
      },
      {
        "user": "goldy1992",
        "created_at": "2019-11-23T17:13:48Z",
        "body": "@marcbaechinger I had that same issue and I can confirm four solution **fixes the issue**."
      },
      {
        "user": "harshmittal29",
        "created_at": "2019-11-24T15:02:15Z",
        "body": "@marcbaechinger This fixes the issue. Thanks a lot. "
      }
    ]
  },
  {
    "number": 6644,
    "title": "Buffering behaviour on pausing & resuming a live stream",
    "created_at": "2019-11-12T16:22:59Z",
    "closed_at": "2019-12-09T16:59:07Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6644",
    "body": "### [REQUIRED] Searched documentation and issues\r\nI checked the documentation and existing related questions.\r\n\r\n### [REQUIRED] Question\r\nMy intention is to add the ability to pause a live stream to our player. The stream could be paused for a predefined maximum time, after which play-out would resume from the buffer.\r\n\r\nI configured ExoPlayer's LoadControl with a minBufferMs and maxBufferMs of, in this case, 30s. \r\n\r\n```\r\nDefaultLoadControl.Builder defaultLoadControlBuilder = new DefaultLoadControl.Builder();\r\n                    defaultLoadControlBuilder.setAllocator(allocator);\r\n                    defaultLoadControlBuilder.setBufferDurationsMs(30000, 30000, 2500, 5000);\r\n                    defaultLoadControlBuilder.setTargetBufferBytes(-1);\r\n                    defaultLoadControlBuilder.setPrioritizeTimeOverSizeThresholds(true);\r\n                    DefaultLoadControl defaultLoadControl = defaultLoadControlBuilder.createDefaultLoadControl();\r\n```\r\n\r\nI would expect the player to have a 30s buffer at all time, so when pausing the live stream for at most 30s, the player would stream from one end of the buffer, while buffering live chunks at the other end. \r\n\r\nHowever, when streaming from the buffer after resuming the player, at one point the totalBufferedDuration length seems to drop and a BehindLiveWindowException is thrown.\r\nA log of buffer duration and player position would look like this (a log line is written every two seconds, triggered by the onTimeLineChanged event):\r\n\r\n1. When starting the live stream, the buffered duration increases as expected:\r\n\r\n```\r\nbufferedPosition: 2143, totalBufferedDuration: 159, currentPosition: 1984\r\nbufferedPosition: 1519, totalBufferedDuration: 1519, currentPosition: 0\r\nbufferedPosition: 5989, totalBufferedDuration: 8247, currentPosition: -2258\r\nbufferedPosition: 9628, totalBufferedDuration: 10715, currentPosition: -1087\r\nbufferedPosition: 11984, totalBufferedDuration: 12942, currentPosition: -959\r\nbufferedPosition: 13119, totalBufferedDuration: 14043, currentPosition: -924\r\nbufferedPosition: 13994, totalBufferedDuration: 14987, currentPosition: -994\r\nbufferedPosition: 14668, totalBufferedDuration: 15669, currentPosition: -1001\r\nbufferedPosition: 14623, totalBufferedDuration: 15619, currentPosition: -996\r\nbufferedPosition: 14799, totalBufferedDuration: 15531, currentPosition: -732\r\nbufferedPosition: 16793, totalBufferedDuration: 17686, currentPosition: -893\r\nbufferedPosition: 17748, totalBufferedDuration: 18729, currentPosition: -981\r\nbufferedPosition: 17583, totalBufferedDuration: 18553, currentPosition: -970\r\nbufferedPosition: 17759, totalBufferedDuration: 18722, currentPosition: -963\r\n```\r\n\r\n2. Then, if I pause the player, the totalBufferedDuration increases to the 30s I set, while the bufferPosition moves to the front of the buffer, as expected:\r\n\r\n```\r\nbufferedPosition: 18473, totalBufferedDuration: 20730, currentPosition: -2257\r\nbufferedPosition: 17989, totalBufferedDuration: 22251, currentPosition: -4262\r\nbufferedPosition: 20783, totalBufferedDuration: 27050, currentPosition: -6267\r\nbufferedPosition: 20799, totalBufferedDuration: 29050, currentPosition: -8251\r\nbufferedPosition: 19994, totalBufferedDuration: 30251, currentPosition: -10257\r\nbufferedPosition: 17989, totalBufferedDuration: 30251, currentPosition: -12262\r\nbufferedPosition: 15984, totalBufferedDuration: 30251, currentPosition: -14267\r\nbufferedPosition: 14000, totalBufferedDuration: 30251, currentPosition: -16251\r\nbufferedPosition: 11994, totalBufferedDuration: 30251, currentPosition: -18257\r\nbufferedPosition: 9989, totalBufferedDuration: 30251, currentPosition: -20262\r\nbufferedPosition: 7984, totalBufferedDuration: 30251, currentPosition: -22267\r\nbufferedPosition: 6000, totalBufferedDuration: 30251, currentPosition: -24251\r\nbufferedPosition: 3994, totalBufferedDuration: 30251, currentPosition: -26257\r\n```\r\n\r\n3. Next, while the player resumes the bufferedPosition remains in the front of the buffer, and the \r\ntotalBufferedDuration remains somewhat constant around 30s:\r\n\r\n```\r\nbufferedPosition: 2679, totalBufferedDuration: 30004, currentPosition: -27326\r\nbufferedPosition: 2153, totalBufferedDuration: 29422, currentPosition: -27269\r\nbufferedPosition: 2468, totalBufferedDuration: 29835, currentPosition: -27367\r\nbufferedPosition: 2143, totalBufferedDuration: 29595, currentPosition: -27453\r\nbufferedPosition: 2000, totalBufferedDuration: 29420, currentPosition: -27420\r\nbufferedPosition: 773, totalBufferedDuration: 28166, currentPosition: -27393\r\nbufferedPosition: 1428, totalBufferedDuration: 28793, currentPosition: -27366\r\nbufferedPosition: 1863, totalBufferedDuration: 29247, currentPosition: -27384\r\nbufferedPosition: 1979, totalBufferedDuration: 29277, currentPosition: -27299\r\nbufferedPosition: 1994, totalBufferedDuration: 29346, currentPosition: -27352\r\nbufferedPosition: 1428, totalBufferedDuration: 28739, currentPosition: -27311\r\nbufferedPosition: 1143, totalBufferedDuration: 28328, currentPosition: -27185\r\nbufferedPosition: -247, totalBufferedDuration: 28774, currentPosition: -29021\r\nbufferedPosition: 1433, totalBufferedDuration: 28676, currentPosition: -27243\r\nbufferedPosition: 1989, totalBufferedDuration: 29276, currentPosition: -27288\r\nbufferedPosition: 2243, totalBufferedDuration: 29578, currentPosition: -27335\r\n```\r\n\r\n4. This is the expected behaviour. It typically holds for a few minutes, after which the buffer totalBufferedDuration steeply drops below zero:\r\n\r\n```\r\nbufferedPosition: -11, totalBufferedDuration: 28902, currentPosition: -28914\r\nbufferedPosition: -277, totalBufferedDuration: 28635, currentPosition: -28912\r\nbufferedPosition: -561, totalBufferedDuration: 28317, currentPosition: -28878\r\nbufferedPosition: -1367, totalBufferedDuration: 27491, currentPosition: -28859\r\nbufferedPosition: -2011, totalBufferedDuration: 26881, currentPosition: -28892\r\nbufferedPosition: -2737, totalBufferedDuration: 24568, currentPosition: -27305\r\nbufferedPosition: -4241, totalBufferedDuration: 24322, currentPosition: -28563\r\nbufferedPosition: -6006, totalBufferedDuration: 22856, currentPosition: -28862\r\nbufferedPosition: -8011, totalBufferedDuration: 20842, currentPosition: -28853\r\nbufferedPosition: -10016, totalBufferedDuration: 18619, currentPosition: -28635\r\nbufferedPosition: -12000, totalBufferedDuration: 16558, currentPosition: -28558\r\nbufferedPosition: -14006, totalBufferedDuration: 14845, currentPosition: -28851\r\nbufferedPosition: -16011, totalBufferedDuration: 12835, currentPosition: -28847\r\nbufferedPosition: -18016, totalBufferedDuration: 10840, currentPosition: -28856\r\nbufferedPosition: -20000, totalBufferedDuration: 8586, currentPosition: -28586\r\nbufferedPosition: -22006, totalBufferedDuration: 5911, currentPosition: -27917\r\nbufferedPosition: -24011, totalBufferedDuration: 4604, currentPosition: -28615\r\nbufferedPosition: -26016, totalBufferedDuration: 2635, currentPosition: -28651\r\nbufferedPosition: -28000, totalBufferedDuration: 829, currentPosition: -28829\r\n``` \r\n\r\n5. Finally, a BehindLiveWindowException is thrown and the player is re-initialized, continuing live play-out.\r\n\r\nSo my question is what triggers this buffer behavior, and how can I fix it to get the desired result?\r\n\r\nI was not sure how the bufferPosition could drop this far below zero, but I guess this value is just (totalBufferedDuration - currentPosition). So a gap between the buffer and live position is created, logically triggering the BehindLiveWindowException.\r\n\r\nA visualization of the buffer timeline (my interpretation at least) would look like this:\r\n\r\n```\r\n(b = bufferPosition; l= live position; [] is the buffer)\r\n__[b--------]l_________\r\n___[b--------]l________\r\n____[b--------]l_______\r\n_____[b--------]l______\r\n______[b--------]l_____\r\n...\r\n__[b--------]l_________\r\n___[b--------]l________\r\n_____[b-------]l_______\r\n______[b------]_l______\r\n_______[b_----]__l_____\r\n...\r\n__________[b]________l_ => BehindLiveWindowException\r\n```\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6644/comments",
    "author": "tvanlaerhoven",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2019-11-13T11:45:27Z",
        "body": "It seems like the player has fallen behind the live window before step 4. So when the player resumes, there is no way to load data to further maintain the buffer.\r\n\r\nAt 4 it then  just plays out the rest of the buffer (totalBufferedDuration is decreasing) and then when the buffer is empty it throws because it is behind the live window and can't continue loading data from where it wants to. The chunks on the server are not available anymore so there is no way to fill the gap between the end of the buffer and the chunks available on the server.\r\n\r\nThis seems to work as it should. \r\n\r\n> My intention is to add the ability to pause a live stream to our player. The stream could be \r\n> paused for a predefined maximum time, after which play-out would resume from the buffer.\r\n\r\nAs soon as the currentPosition is farther behind than the duration of the live window, the player falls behind the live window if it wants start to load again."
      },
      {
        "user": "tvanlaerhoven",
        "created_at": "2019-11-13T14:44:22Z",
        "body": "> It seems like the player has fallen behind the live window before step 4. So when the player resumes, there is no way to load data to further maintain the buffer.\r\n\r\nWhen resuming, the player can keep on streaming for several minutes. I also see it continuing to buffer. So it's not just playing the buffer it has creating while paused, the buffer is still being filled after resuming.\r\n\r\nIs the \"live window\" determined by the stream server's manifest, or can this be set client-side? The manifest indicates a timeShiftBufferDepth of PT30S.\r\n\r\nIn addition, I've set the LoadControl's targetBufferSize to a large number (200Mb) to make sure it can fit the 3mins buffer and `DefaultLoadControl.shouldContinueLoading ` always returns `true`. During the paused state, the `totalBytesAllocated` keeps correctly increasing. It is only after resuming that the buffer size decreases. I am using the DefaultAllocator, but I do not see the mechanism that triggers this.\r\n"
      },
      {
        "user": "marcbaechinger",
        "created_at": "2019-11-13T16:25:44Z",
        "body": "I guess after resuming, the player is very close to be behind the live window. It's kind of living on the edge :)\r\n\r\nLike here:\r\n```\r\nbufferedPosition: 1143, totalBufferedDuration: 28328, currentPosition: -27185\r\nbufferedPosition: -247, totalBufferedDuration: 28774, currentPosition: -29021\r\nbufferedPosition: 1433, totalBufferedDuration: 28676, currentPosition: -27243\r\n```\r\nMy understanding is the following: Let's say the currentPosition is at -29000 (it's 29 seconds behind the live edge) and we have a full buffer of 29500, the buffered position results in being 500. If now downloading data is slower than real time for any reason (totalBufferedDuration decreases), while the position is constantly -29000, the buffered position falls below zero. Buffer and live window do not overlap anymore, because the live window advances at real time the nexts bytes which need to be downloaded may fall behind the live window and the buffer is played out. Does this make sense?\r\n\r\nThe live window is defined by the server and it is declared in the manifest. It is the duration of media from the live edge, which is kept on the server for downloading before being removed. Chunks which are not in the declared live window, can't be downloaded anymore.\r\n\r\n\r\n\r\n\r\n"
      }
    ]
  },
  {
    "number": 6637,
    "title": "Can i build ffmpeg extension on Windows OS?",
    "created_at": "2019-11-11T04:40:58Z",
    "closed_at": "2019-11-11T06:03:33Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6637",
    "body": "If yes, where i can find the references of it?\r\n\r\nThank you.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6637/comments",
    "author": "grahaisw",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2019-11-11T06:03:33Z",
        "body": "Please see #3127, which suggests it should be possible using Windows PowerShell."
      },
      {
        "user": "grahaisw",
        "created_at": "2019-11-11T06:37:37Z",
        "body": "Thank you so much for your information."
      }
    ]
  },
  {
    "number": 6634,
    "title": "DefaultLoadControl - Mismatch in Constructor and Builder behaviour ",
    "created_at": "2019-11-10T14:52:33Z",
    "closed_at": "2020-01-11T02:06:55Z",
    "labels": [
      "question",
      "need more info",
      "stale",
      "closed-by-bot"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6634",
    "body": "\r\n### [REQUIRED] Issue description\r\n\r\nI have a LoadControl Settings Object which enable the app to configure the LoadControl via Builder API.\r\n\r\nThe Issue is with the\r\n      int minBufferAudioMs,\r\n      int minBufferVideoMs\r\n\r\n public static final int DEFAULT_MIN_BUFFER_MS = 15000;\r\n public static final int DEFAULT_MAX_BUFFER_MS = 50000;\r\n\r\nthe Definition in the constructor is : \r\n        /* minBufferAudioMs= */ DEFAULT_MIN_BUFFER_MS,\r\n        /* minBufferVideoMs= */ DEFAULT_MAX_BUFFER_MS,\r\n\r\nBut in the builder when using the setBufferDurationsMs\r\nthese values are not exposed for set\r\n\r\n      this.minBufferAudioMs = minBufferMs;\r\n      this.minBufferVideoMs = minBufferMs;\r\n\r\n\r\nthis behaviour is not constant VS. the Constructor here the api sets them both to min!\r\n\r\n\r\nas a result:\r\n\r\nwhen creating DefaultLoadControl with Builder API (the Default works fine)\r\n\r\n            return new DefaultLoadControl.Builder().\r\n                    setBufferDurationsMs(\r\n                            DEFAULT_MIN_BUFFER_MS,\r\n                            DEFAULT_MAX_BUFFER_MS,\r\n                            DEFAULT_BUFFER_FOR_PLAYBACK_MS,\r\n                            DEFAULT_BUFFER_FOR_PLAYBACK_AFTER_REBUFFER_MS).\r\n                   setBackBuffer(DEFAULT_BACK_BUFFER_DURATION_MS, DEFAULT_RETAIN_BACK_BUFFER_FROM_KEYFRAME).createDefaultLoadControl();\r\n\r\nthe result will be that the minBufferAudioMs will take same value as minBufferVideoMs\r\n\r\n I have a dash stream with several bitrates one of them is  0.09 mbps video bitrate and 0.06 mbps for audio\r\n\r\nif I select the lowest  0.09 video track using track selector after 38 sec video stuck since the Exo is not downloading any chunks anymore\r\n\r\n### [REQUIRED] Reproduction steps\r\ncreate the DefaultLoadControl Via the code I shared here\r\nplay the stream (I will send url + lic to Exo mail)\r\nswitch to track with 0.09 mbps you can see that progress is not passing 38 sec due to cuenks are not downloaded\r\n\r\n\r\nIn Demo:\r\n\r\n    DefaultBandwidthMeter dbm = new DefaultBandwidthMeter.Builder(this).build();\r\n      DefaultLoadControl dlc = new DefaultLoadControl.Builder().\r\n          setBufferDurationsMs(\r\n              DEFAULT_MIN_BUFFER_MS,\r\n              DEFAULT_MAX_BUFFER_MS,\r\n              DEFAULT_BUFFER_FOR_PLAYBACK_MS,\r\n              DEFAULT_BUFFER_FOR_PLAYBACK_AFTER_REBUFFER_MS).\r\n          setBackBuffer(DEFAULT_BACK_BUFFER_DURATION_MS, DEFAULT_RETAIN_BACK_BUFFER_FROM_KEYFRAME).createDefaultLoadControl();\r\n      player =\r\n          ExoPlayerFactory.newSimpleInstance(\r\n              /* context= */ this, renderersFactory, trackSelector, dlc, drmSessionManager, dbm);\r\n\r\n\r\n\r\n### [REQUIRED] Link to test content\r\nsending in mail demo entry\r\n\r\n\r\n\r\n### [REQUIRED] Version of ExoPlayer being used\r\n2.6.10\r\n### [REQUIRED] Device(s) and version(s) of Android being used\r\nPixel 3 Android 10\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6634/comments",
    "author": "giladna",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2019-11-11T04:52:14Z",
        "body": "This is intentional. Note that `DEFAULT_MIN_BUFFER_MS` is documented to say:\r\n\r\n> This value is only applied to playbacks without video.\r\n\r\nAnd `DEFAULT_MAX_BUFFER_MS` is documented to say:\r\n\r\n> this is also the default minimum duration of media that the player will attempt to ensure is buffered.\r\n\r\nIf you call `setBufferDurationsMs` it's assumed that you know what you're doing, and so both are set to the same value.\r\n\r\nI'm not sure what the issue is you're seeing where playback gets stuck, but I don't think it's related to the way you're setting up the `DefaultLoadControl`. The stream provided returns a HTTP 403 error for me, so we're unable to reproduce the problem. Please provide a working test stream if you want us to take a look.\r\n\r\nMarking as \"need more information\" because we need a working test stream to investigate further.\r\n\r\n@tonihei - As an aside, do you think it's worth adding a second `setBufferDurationsMs` method that takes separate minimums for audio and video?"
      },
      {
        "user": "giladna",
        "created_at": "2019-11-11T07:24:30Z",
        "body": "@ojw28  thanks\r\nIt is customer stream I am not sure I can change the geo block definition\r\nIt is working from my end I will send logs and charles capture on the demo app "
      },
      {
        "user": "ojw28",
        "created_at": "2019-11-11T07:27:39Z",
        "body": "What GEO does the stream work in? We may be able to proxy."
      },
      {
        "user": "giladna",
        "created_at": "2019-11-12T05:07:12Z",
        "body": "> What GEO does the stream work in? We may be able to proxy.\r\n\r\nHi\r\nI have sent more information via mail\r\nIt should work for India\r\nThanks"
      },
      {
        "user": "giladna",
        "created_at": "2019-11-14T07:45:12Z",
        "body": "@tonihei @ojw28 \r\n\r\ncould you give it a look please?"
      },
      {
        "user": "giladna",
        "created_at": "2019-11-14T15:30:43Z",
        "body": "@ojw28  media is expired \r\nI will resend it "
      },
      {
        "user": "ojw28",
        "created_at": "2019-12-20T19:11:50Z",
        "body": "Sorry for the delayed response. I tried to VPN via both of the suggested countries, but neither of them worked. I see HTTP 404 in both cases."
      },
      {
        "user": "google-oss-bot",
        "created_at": "2020-01-04T02:06:36Z",
        "body": "<!-- event: mark-stale -->\nHey @giladna. We need more information to resolve this issue but there hasn't been an update in 14 days. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2020-01-11T02:06:54Z",
        "body": "<!-- event: close-stale -->\nSince there haven't been any recent updates here, I am going to close this issue.\n\n@giladna if you're still experiencing this problem and want to continue the discussion just leave a comment here and we are happy to re-open this."
      }
    ]
  },
  {
    "number": 6616,
    "title": "Is there a way to fetch current real timestamp of video frame when playing rtmp stream? ",
    "created_at": "2019-11-05T09:34:06Z",
    "closed_at": "2019-11-28T02:05:46Z",
    "labels": [
      "question",
      "need more info",
      "stale",
      "closed-by-bot"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6616",
    "body": "As title mentioned, I intent to do some sync work when playing  rtmp stream, but there is no public api like getRtmpVideoTimestamp() or video frame listener to watch the real timestamp of current video frame.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6616/comments",
    "author": "caprice",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2019-11-05T14:16:12Z",
        "body": "You could try setting a `VideoFrameMetadataListener` (see #5860 and possibly also the discussion in #6576) to get the presentation timestamp of the frame about to be rendered.\r\n\r\nI'm not sure if RTMP has a special notion of video timestamp that is different though (if so, please provide some more details), and whether this can be used to achieve the 'sync work' you refer to."
      },
      {
        "user": "google-oss-bot",
        "created_at": "2019-11-20T02:06:15Z",
        "body": "<!-- event: mark-stale -->\nHey @caprice. We need more information to resolve this issue but there hasn't been an update in 14 days. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2019-11-28T02:05:45Z",
        "body": "<!-- event: close-stale -->\nSince there haven't been any recent updates here, I am going to close this issue.\n\n@caprice if you're still experiencing this problem and want to continue the discussion just leave a comment here and we are happy to re-open this."
      }
    ]
  },
  {
    "number": 6611,
    "title": "What is the dummysurface? ",
    "created_at": "2019-11-02T04:38:37Z",
    "closed_at": "2019-11-05T09:02:25Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6611",
    "body": "I want to use one player for 2 surfaceview/textureview for render one video in 2 views at the same time. I wandering the dummysurface may help somethings. I don't know. Anyone help me, pls.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6611/comments",
    "author": "Slim1991",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2019-11-05T09:02:25Z",
        "body": "This sounds the same as #4640. Generally ExoPlayer uses `MediaCodec` to render video to a single `Surface`. To get the decoder output visible in two views, I'd try passing a surface created from a `SurfaceTexture` to the player, and then copying from the texture to the output views using OpenGL. I don't think `DummySurface` helps with this, though some of the code in its helper class `EGLSurfaceTexture` may be useful."
      },
      {
        "user": "Slim1991",
        "created_at": "2019-11-11T06:29:31Z",
        "body": "Can you give me some example codes, pls?"
      },
      {
        "user": "andrewlewis",
        "created_at": "2019-11-11T06:56:09Z",
        "body": "I'm afraid we don't have any code ready to share for this, and we don't have resources to write sample code for such a specialized use case. The information in my previous comment should be enough to get started but you will need to do some research yourself. Sorry not to be more helpful."
      }
    ]
  },
  {
    "number": 6592,
    "title": "Cannot play pure audio stream in flv format",
    "created_at": "2019-10-29T10:03:13Z",
    "closed_at": "2019-11-23T02:06:19Z",
    "labels": [
      "question",
      "need more info",
      "stale",
      "closed-by-bot"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6592",
    "body": "",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6592/comments",
    "author": "w4901",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2019-10-31T15:06:11Z",
        "body": "Please provide all the information requested in the issue template."
      },
      {
        "user": "google-oss-bot",
        "created_at": "2019-11-15T02:07:04Z",
        "body": "<!-- event: mark-stale -->\nHey @w4901. We need more information to resolve this issue but there hasn't been an update in 14 days. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2019-11-23T02:06:18Z",
        "body": "<!-- event: close-stale -->\nSince there haven't been any recent updates here, I am going to close this issue.\n\n@w4901 if you're still experiencing this problem and want to continue the discussion just leave a comment here and we are happy to re-open this."
      }
    ]
  },
  {
    "number": 6591,
    "title": "When playing audio in AAC format, calling getDuration() does not get the total duration.",
    "created_at": "2019-10-28T11:56:39Z",
    "closed_at": "2019-12-13T02:06:17Z",
    "labels": [
      "question",
      "need more info",
      "stale",
      "closed-by-bot"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6591",
    "body": "When playing AAC format audio, calling getDuration() does not get the total duration, and calling seekTo() is also invalid. The version is 2.9.4. How can I solve this problem?\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6591/comments",
    "author": "HQLIE2018",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2019-11-06T12:30:05Z",
        "body": "Please provide more detailed information as requested in the issue template. Especially example media and the expectations for the duration would be helpful to debug this any further."
      },
      {
        "user": "google-oss-bot",
        "created_at": "2019-11-21T02:06:25Z",
        "body": "<!-- event: mark-stale -->\nHey @HQLIE2018. We need more information to resolve this issue but there hasn't been an update in 14 days. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "HQLIE2018",
        "created_at": "2019-11-21T06:10:20Z",
        "body": "When I play AAC audio, the total duration always returns -9223372036854775807, and I tried several AAC audios."
      },
      {
        "user": "tonihei",
        "created_at": "2019-11-21T09:27:35Z",
        "body": "This value is `C.TIME_UNSET`, the placeholder value that tells you that the duration is (still) unknown. As said above, please provide us with example media if you want us to check if it's media related. Otherwise it sounds as if the duration is just not known yet at the point where you call `getDuration()`. Please listen to `EventListener.onTimelineChanged` to get informed about any updates to the media information."
      },
      {
        "user": "google-oss-bot",
        "created_at": "2019-12-06T02:05:50Z",
        "body": "<!-- event: mark-stale -->\nHey @HQLIE2018. We need more information to resolve this issue but there hasn't been an update in 14 days. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2019-12-13T02:06:16Z",
        "body": "<!-- event: close-stale -->\nSince there haven't been any recent updates here, I am going to close this issue.\n\n@HQLIE2018 if you're still experiencing this problem and want to continue the discussion just leave a comment here and we are happy to re-open this."
      }
    ]
  },
  {
    "number": 6586,
    "title": "How can I use SPDIF Passthrough in exoplayer",
    "created_at": "2019-10-26T03:30:45Z",
    "closed_at": "2019-11-26T08:56:18Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6586",
    "body": "   I read the issues #2148,  but I can't create this feature exactly.  My Android Projector support SPDIF Passthrough to amplifier, use Kodi player to verify this function. I need to force audio to pass through the SPDIF to the amplifier, not the HDMI.\r\n\r\n  I've tried many ways, but I can't always achieve this function, and there is little information on the Internet.I hope someone can tell me how to implement this function. Because I don't know much about audio and video development. So it's better to attach reference code. Thank you.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6586/comments",
    "author": "JiannaiJ",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2019-10-31T14:39:49Z",
        "body": "I'm not sure I fully understand what kind of feature you are trying to implement here. Could you describe that in more details? \r\n\r\nAssigning to @andrewlewis as he is likely to know more about this."
      },
      {
        "user": "andrewlewis",
        "created_at": "2019-11-11T06:00:33Z",
        "body": "Assuming the S/PDIF device appears as a separate output audio device in `AudioDeviceInfo`, this may be a duplicate of enhancement #1993."
      },
      {
        "user": "google-oss-bot",
        "created_at": "2019-11-26T02:05:46Z",
        "body": "<!-- event: mark-stale -->\nHey @SteveKin3. We need more information to resolve this issue but there hasn't been an update in 14 days. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      }
    ]
  },
  {
    "number": 6580,
    "title": "Error: ExoPlaybackException OutOfMemoryError when play .mkv local file.",
    "created_at": "2019-10-25T09:26:34Z",
    "closed_at": "2019-11-02T02:25:37Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6580",
    "body": "- ExoPlayer version: 2.10.6\r\n- OS: android 9.0\r\n\r\nHi Dev team, I play file mkv from local (size 3840*2160 - 30s - 679MB), when play to 10s -> OutOfMemoryError\r\n\r\n```\r\nLog: 019-10-25 16:11:57.109 9875-10049/net.vsmart.vphotos E/ExoPlayerImplInternal: Source error.\r\n    com.google.android.exoplayer2.upstream.Loader$UnexpectedLoaderException: Unexpected OutOfMemoryError: Failed to allocate a 65552 byte allocation with 58232 free bytes and 56KB until OOM, max allowed footprint 268435456, growth limit 268435456\r\n        at com.google.android.exoplayer2.upstream.Loader$LoadTask.run(Loader.java:424)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)\r\n        at java.lang.Thread.run(Thread.java:764)\r\n     Caused by: java.lang.OutOfMemoryError: Failed to allocate a 65552 byte allocation with 58232 free bytes and 56KB until OOM, max allowed footprint 268435456, growth limit 268435456\r\n        at com.google.android.exoplayer2.upstream.DefaultAllocator.allocate(DefaultAllocator.java:102)\r\n        at com.google.android.exoplayer2.source.SampleQueue.preAppend(SampleQueue.java:641)\r\n        at com.google.android.exoplayer2.source.SampleQueue.sampleData(SampleQueue.java:561)\r\n        at com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.readToOutput(MatroskaExtractor.java:1461)\r\n        at com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.writeSampleData(MatroskaExtractor.java:1363)\r\n        at com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.binaryElement(MatroskaExtractor.java:1161)\r\n        at com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$InnerEbmlProcessor.binaryElement(MatroskaExtractor.java:1628)\r\n        at com.google.android.exoplayer2.extractor.mkv.DefaultEbmlReader.read(DefaultEbmlReader.java:138)\r\n        at com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.read(MatroskaExtractor.java:440)\r\n        at com.google.android.exoplayer2.source.ProgressiveMediaPeriod$ExtractingLoadable.load(ProgressiveMediaPeriod.java:965)\r\n        at com.google.android.exoplayer2.upstream.Loader$LoadTask.run(Loader.java:394)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167) \r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641) \r\n```\r\n\r\nPlease help me re-check and resolve this issue. Thanks so much!",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6580/comments",
    "author": "BuiVanNam",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2019-10-31T15:05:27Z",
        "body": "> 30s - 679MB\r\n\r\nThat's 181 Mbps :)\r\n\r\nExoPlayer buffers up to a certain minimum buffer length by default irrespective of the memory usage. If you want ExoPlayer to stop buffering at the target memory usage, you can try to set `DefaultLoadControl.Builder.setPrioritizeTimeOverSizeThresholds(false)`."
      },
      {
        "user": "BuiVanNam",
        "created_at": "2019-11-02T02:24:55Z",
        "body": "Thanks so much!"
      }
    ]
  },
  {
    "number": 6579,
    "title": "onTimelineChanged() called after the 2nd renderered",
    "created_at": "2019-10-25T00:16:52Z",
    "closed_at": "2019-11-17T00:52:24Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6579",
    "body": "I am using exoplayer with ConcatenatingMediaSource to play 2 videos, output to SurfaceTexture.\r\nI found that when the onTimelineChanged() is called, the 2nd video is rendered already with 1 frame.  \r\nI am expecting onTimelineChanged() is called before any 2nd video frame rendered, any idae? thanks.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6579/comments",
    "author": "xiaos",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2019-10-25T00:20:52Z",
        "body": "The `onTimelineChanged` callback is issued when the media structure in the `Timeline` is updated. This is unrelated to the actual rendering process and more connected to the loading process. What are you trying to achieve with this callback? Maybe we can point out other callbacks that are better suited for what you are trying to do."
      },
      {
        "user": "xiaos",
        "created_at": "2019-10-25T03:58:13Z",
        "body": "thanks for yr reply.\r\n\r\ni output the video to surfaceTexture.\r\n\r\nin onFrameAvailable() \r\n\r\nI will process each frame, but i need to know when the video changed, to get the new video size for my processing.  \r\n\r\nthanks!"
      },
      {
        "user": "tonihei",
        "created_at": "2019-10-30T11:41:14Z",
        "body": "That sounds a bit like the problem described in #6576. Can you read through the discussion there to see if it helps?"
      },
      {
        "user": "xiaos",
        "created_at": "2019-11-01T11:14:24Z",
        "body": "I have sovled it by using the onVideoFormatChange in Renderer."
      }
    ]
  },
  {
    "number": 6565,
    "title": "What should be the ideal memory consumption of ExoPlayer when playing a certain video?",
    "created_at": "2019-10-19T06:50:59Z",
    "closed_at": "2019-10-23T11:15:14Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6565",
    "body": "### [REQUIRED] Searched documentation and issues\r\nI Googled \"ExoPlayer memory consumption/usage\" already and nothing useful appeared.\r\n\r\n### [REQUIRED] Question\r\nI want to know what is the ideal memory usage when playing a 1.6GB video stream with a data rate of 2150kbps and a total bitrate of 2295kbps. A user said that they can't play multiple video streams on my app. I'm suspecting that it might just be a device problem. I'm trying to find if my app is creating a memory leak of some sort (not really sure, but just want to know). LeakCanary is not showing a notification so I think it's really all right. Is there like a formula I could use to get an average memory usage of ExoPlayer.\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6565/comments",
    "author": "rickyManalo",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2019-10-21T12:29:27Z",
        "body": "If you want to see what typical memory consumption is like, I suggest you try playing something in the ExoPlayer demo app and simply attach the Android Studio profiler.\r\n\r\nIt's unclear why you're looking for memory leaks without any evidence of there being one."
      },
      {
        "user": "rickyManalo",
        "created_at": "2019-10-22T01:09:13Z",
        "body": "For research purposes, kinda like a bench mark. Ok, I'll try that."
      },
      {
        "user": "rickyManalo",
        "created_at": "2019-10-23T08:22:35Z",
        "body": "Just want to share my observation. After about 10 minutes of playing a DASH H264 720p 8000kbps using the demo app, the total memory usage got an average of 99MB. Closing PlayerActivity just made the memory usage go down to 93MB (93.1MB to be exact). \r\n\r\nOn my app, after playing a 1080p 1.6GB video stream with a data rate of 2150kbps and a total bitrate of 2295kbps for 10 minutes as well, the total memory usage got an average of 104MB. After closing the player, the total memory usage went to an average of 54MB. On my app, I call `playerView.setPlayer(null);` when releasing the player.\r\n\r\nI made another test on the demo app. The numbers went down by about 5MB. When I played another DASH H264 video, the total memory usage went down to 31MB then constantly increased after that."
      },
      {
        "user": "ojw28",
        "created_at": "2019-10-23T11:15:14Z",
        "body": "Thanks!"
      }
    ]
  },
  {
    "number": 6561,
    "title": "isPlaying API",
    "created_at": "2019-10-18T13:03:57Z",
    "closed_at": "2019-11-04T18:12:32Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6561",
    "body": "I have a question regarding isPlaying value while player is buffering.\r\n\r\nShould it be expected to get isPlaying = false in this condition?\r\n\r\ndoes it make sense to have value for suppress due to buffering?\r\n\r\n\r\n  @IntDef({PLAYBACK_SUPPRESSION_REASON_NONE, PLAYBACK_SUPPRESSION_REASON_AUDIO_FOCUS_LOSS})\r\n\r\n\r\n10x\r\nGilad",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6561/comments",
    "author": "giladna",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2019-10-18T14:39:39Z",
        "body": "Thanks for the suggestion. We considered this (and other variants thereof), but the playback suppression reason is essentially independent of the player state. You can lose audio focus and buffer at the same time and you can just lose focus but be ready for playback. Both may also change independently - one as a result of external changes (i.e. audio focus lost/regained) and one as a result of player-internal changes (change in duration of buffered data)."
      }
    ]
  },
  {
    "number": 6548,
    "title": "ExoPlayer re-render current frame when pause",
    "created_at": "2019-10-15T13:03:16Z",
    "closed_at": "2019-10-17T10:23:42Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6548",
    "body": "I am using exoplayer with surfaceTexture.\r\n\r\n        SimpleExoPlayer exoPlayer = ExoPlayerFactory.newSimpleInstance(this, new DefaultTrackSelector());\r\n        Surface surface = new Surface(surfaceTexture);\r\n\r\nFor each frame decoded, i will receive a callback in \r\npublic void onFrameAvailable(SurfaceTexture surfaceTexture) {\r\n}\r\n\r\nWhen i pause the player, i want to refresh my surfaceView with the current frame, by calling seekTo(exoPlayer.getPosition());  this is working when i am using MediaPlayer, but after I changed to exoplayer, i cannot seekTo the current position.\r\n\r\nI just want to let exoplayer send the current decoded frame to surface.  any suggestion?\r\n\r\nAny suggestion? ",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6548/comments",
    "author": "xiaos",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2019-10-16T09:14:54Z",
        "body": "`MediaCodec` doesn't provide a way to re-render the last frame (and even if ExoPlayer didn't treat seeking to the current position as a no-op, re-rendering the last frame can take a significant amount of time as the decoder will need to decode from the last keyframe to the current position).\r\n\r\nIf you have a setup for getting decoder output from the `SurfaceTexture` to a `SurfaceView`, I guess you might be copying output using a GL shader. But then I'm confused why you need to re-render the frame as it should still be present in the surface texture. If you could provide some more details about why you need to re-render the last frame we might be able to make some suggestions. Giving detailed guidance on this is outside the scope of this issue tracker, however."
      },
      {
        "user": "xiaos",
        "created_at": "2019-10-16T14:05:33Z",
        "body": "Thanks for your reply.\r\nI am using exoplayer to output video stream to surfacetexture, rendered by openGL on surfaceView.\r\nI am developing a video editor, allow user to add sticker on the video. user can move around the stiker on video.\r\n\r\nWhen the video is playing, there is no problem, because every frame, the surfaceview will be redraw.\r\nbut when user pause the video, and want to move around the sticker, i got problem.  \r\n\r\nWhen i am using MediaPlayer, when user move sticker, i will call mediaPlayers' seekTo() , then cause the screen redraw with the current video frame. But when switch to exoplayer, the seekTo() takes much more time, so cannot work. \r\n\r\nThanks."
      },
      {
        "user": "andrewlewis",
        "created_at": "2019-10-17T10:23:42Z",
        "body": "I think it's possible to composite your stickers as part of the operation that copies the video frame to the surface view. The decoder's output frame remains unmodified in the SurfaceTexture if you do this. (As a side effect this also lets you make changes to the sticker position more responsive on lower frame rate videos.)"
      },
      {
        "user": "xiaos",
        "created_at": "2019-10-17T14:21:12Z",
        "body": "I am not sure if the frame still in SurfaceTexture or not.  When pause the video and touch/move the sticker, i will call the below method in custom GlSurfaceView.\r\n\r\npublic void update(){\r\n queueEvent(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                surfaceTexture.updateTexImage();\r\n\r\n                requestRender();\r\n            }\r\n        });\r\n}\r\n\r\nBut the screen is black, only the sticker is redraw."
      },
      {
        "user": "xiaos",
        "created_at": "2019-10-17T14:29:11Z",
        "body": "Another way i can think of is using FBO, for each frame, render to fbo then to GlSurfaceView.\r\n\r\nSo when player is paused, i just using the FBO texture to render.  This should be working but just need an additional fbo texture."
      },
      {
        "user": "andrewlewis",
        "created_at": "2019-10-23T09:19:20Z",
        "body": "I'd probably try not calling `updateTexImage` each time you need to update the output. I think it should only be called once per `onFrameAvailable` callback from the `SurfaceTexture`. Having called `updateTexImage` once you should be able to copy from the texture multiple times."
      }
    ]
  },
  {
    "number": 6533,
    "title": "Custom build type fails provisioning for DRM",
    "created_at": "2019-10-11T12:08:26Z",
    "closed_at": "2019-10-18T09:07:43Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6533",
    "body": "### [REQUIRED] Searched documentation and issues\r\nexoplayer.dev\r\nGitHub issues\r\nVarious javadocs\r\n\r\n### [REQUIRED] Question\r\nI created a custom build type for my builds such that I can run DRM side-by-side with our market version for testing purposes, so I did the following in our `build.gradle.kts`:\r\n```\r\ncreate(\"custom\") {\r\n    applicationIdSuffix = \".custom\"\r\n    signingConfig = signingConfigs.getByName(\"debug\")\r\n    matchingFallbacks = listOf(\"debug\")\r\n}\r\n```\r\n\r\nThis somehow results in the app not being provisioned for DRM. If I change the `applicationIdSuffix` to `debug` or `release`, then everything works as expected.\r\n\r\nIs there any way to get the app provisioned for DRM with a build type not being debug or release?\r\n\r\n### A full bug report captured from the device\r\nN/A\r\n\r\n### Link to test content\r\nN/A\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6533/comments",
    "author": "kgrevehagen",
    "comments": [
      {
        "user": "kgrevehagen",
        "created_at": "2019-10-11T13:30:05Z",
        "body": "**Update:** I got it working by running the code that is in `executeProvisionRequest()` in the `HttpMediaDrmCallback`. I have a custom DrmMediaCallback, that's why this didn't run by default.\r\n\r\nSo, the question still remains, is this expected behavior, that it should not work without provisioning manually when we have something other than debug or release build type?\r\n\r\nAlso, are there other cases where the app/device might not be provisioned? I guess it's safe to have this provision request either way? I'm just afraid of having this code in production if I'm not sure when it will be called, if it will be called at all."
      },
      {
        "user": "ojw28",
        "created_at": "2019-10-18T08:18:09Z",
        "body": "It sounds like your `MediaDrmCallback` implementation just didn't implement provisioning correctly, and now you've fixed it so that it does? Your implementation is required to implement provisioning correctly.\r\n\r\nThe rules for when provisioning occurs are somewhat complicated, since they vary by device and Android version. On some devices provisioning wont ever be requested because they'll have been provisioned in the factory. On some devices a provisioning request only needs to occur once across all apps (i.e. once one app has provisioned the device, no further provisioning requests will occur either for that app or any other app). On some devices provisioning is per app.\r\n\r\nI suspect that your test device falls into the final category, that your app was broken for all build types, and that the device had already been provisioned for your normal build types by some previous version of your app. If you were to do a full factory reset of the test device and then install your normal build, with your custom `DrmMediaCallback` that did not implement provisioning correctly, then I suspect you will/would see failures in that case too. Does that make sense?"
      },
      {
        "user": "kgrevehagen",
        "created_at": "2019-10-18T09:07:43Z",
        "body": "This makes perfectly sense, thanks for explaining.\r\nSince I never needed to do provisioning, I thought I could get away with implementing it, but I guess all implementations should have it in place."
      }
    ]
  },
  {
    "number": 6507,
    "title": "Increasing HLS DVR size?",
    "created_at": "2019-10-03T20:15:13Z",
    "closed_at": "2019-10-04T17:15:28Z",
    "labels": [
      "duplicate",
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6507",
    "body": "Hey everyone,\r\n\r\nUsually I found out that ExoPlayer support HLS DVR or in other words rewind and forward live stream using HLS format, it's working great but the limit of the timeshift is only 1 minute, is it possible to increase it?\r\n\r\nAlready tried increasing the buffering and the cache size, but none helped.\r\nAny ideas?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6507/comments",
    "author": "developer244",
    "comments": [
      {
        "user": "AquilesCanta",
        "created_at": "2019-10-04T17:15:28Z",
        "body": "The seeking window contains whatever the media playlist advertises. So, you'll need to fix this on the server side, by extending the live window. We don't currently support recording live streams. Track #3877 for more info on downloading live streams."
      }
    ]
  },
  {
    "number": 6498,
    "title": "PlayerNotification - Update custom icon real time",
    "created_at": "2019-10-01T15:43:14Z",
    "closed_at": "2019-10-28T12:25:26Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6498",
    "body": "### [REQUIRED] Searched documentation and issues\r\nSearched PlayerNotificationManager documentation\r\n\r\n### [REQUIRED] Question\r\nHello.\r\nI created a custom action in the player notification. When i click on it i want to change icon.\r\nI tried something like this but it doesn't seem to work:\r\n\r\n\r\n```\r\nIntent intentPlayList = new Intent(\"playlist\").setPackage(context.getPackageName());\r\nPendingIntent pendingIntentPlayList = PendingIntent.getBroadcast(\r\n  context, instanceId, intentPlayList, PendingIntent.FLAG_CANCEL_CURRENT);\r\nNotificationCompat.Action playlist = new NotificationCompat.Action(\r\n  VideoPlayerFragment.playlist\r\n    ? R.drawable.playlist_video_icon_red\r\n    : R.drawable.playlist_video_icon ,\r\n  \"playlist\",\r\n  pendingIntentPlayList);\r\n```\r\n\r\nand then when i click it i call playerNotificationManager.invalidate() but the notification doesn't update.\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6498/comments",
    "author": "Cosminnv",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2019-10-02T10:07:46Z",
        "body": "You can not update the icon of an action. You need to have two actions each with a different icon and then swap the icons returned by `CustomActionProvider.getCustomActions(Player player)`.\r\n\r\nLet say we want to have a custom button for toggling the shuffle mode of the player. It needs two actions which are then swapped according to whether the shuffle mode is enabled or not:\r\n\r\n```\r\n  private class ActionReceiver implements PlayerNotificationManager.CustomActionReceiver {\r\n\r\n    private static final String CUSTOM_ACTION_NAME_SHUFFLE_OFF\r\n        = \"com.example.custom.action.shuffle_off\";\r\n    private static final String CUSTOM_ACTION_NAME_SHUFFLE_ON\r\n        = \"com.example.custom.action.shuffle_on\";\r\n\r\n    private final HashMap<String, NotificationCompat.Action> actionMap;\r\n\r\n    public ActionReceiver() {\r\n      actionMap = new HashMap<>();\r\n\r\n      Intent intentShuffleOn = new Intent(CUSTOM_ACTION_NAME_SHUFFLE_ON)\r\n          .setPackage(PlayerActivity.this.getPackageName());\r\n      PendingIntent pendingIntentShuffleOn = PendingIntent.getBroadcast(\r\n          PlayerActivity.this,\r\n          /* instanceId= */ 0,\r\n          intentShuffleOn,\r\n          PendingIntent.FLAG_CANCEL_CURRENT);\r\n      NotificationCompat.Action shuffleOnAction = new NotificationCompat.Action(\r\n          R.drawable.exo_controls_shuffle_on,\r\n          CUSTOM_ACTION_NAME_SHUFFLE_ON,\r\n          pendingIntentShuffleOn);\r\n      actionMap.put(CUSTOM_ACTION_NAME_SHUFFLE_ON, shuffleOnAction);\r\n\r\n      Intent intentShuffleOff = new Intent(CUSTOM_ACTION_NAME_SHUFFLE_OFF)\r\n          .setPackage(PlayerActivity.this.getPackageName());\r\n      PendingIntent pendingIntentShuffleOff = PendingIntent.getBroadcast(\r\n          PlayerActivity.this,\r\n          /* instanceId= */ 0,\r\n          intentShuffleOff,\r\n          PendingIntent.FLAG_CANCEL_CURRENT);\r\n      NotificationCompat.Action shuffleOffAction = new NotificationCompat.Action(\r\n          R.drawable.exo_controls_shuffle_off,\r\n          CUSTOM_ACTION_NAME_SHUFFLE_OFF,\r\n          pendingIntentShuffleOff);\r\n      actionMap.put(CUSTOM_ACTION_NAME_SHUFFLE_OFF, shuffleOffAction);\r\n\r\n    }\r\n\r\n    @Override\r\n    public Map<String, NotificationCompat.Action> createCustomActions(\r\n        Context context, int instanceId) {\r\n      return actionMap;\r\n    }\r\n\r\n    @Override\r\n    public List<String> getCustomActions(Player player) {\r\n      return Collections.singletonList(player.getShuffleModeEnabled()\r\n          ? CUSTOM_ACTION_NAME_SHUFFLE_ON\r\n          : CUSTOM_ACTION_NAME_SHUFFLE_OFF);\r\n    }\r\n\r\n    @Override\r\n    public void onCustomAction(Player player, String action, Intent intent) {\r\n      if (CUSTOM_ACTION_NAME_SHUFFLE_ON.equals(action)) {\r\n        player.setShuffleModeEnabled(/* shuffleModeEnabled= */ false);\r\n      } else {\r\n        player.setShuffleModeEnabled(/* shuffleModeEnabled= */ true);\r\n      }\r\n      playerNotificationManager.invalidate();\r\n    }\r\n  }\r\n```\r\n"
      },
      {
        "user": "marcbaechinger",
        "created_at": "2019-10-28T12:25:26Z",
        "body": "Closing due to lack of activity."
      }
    ]
  },
  {
    "number": 6497,
    "title": "Playback with adaptive video and adaptive audio",
    "created_at": "2019-10-01T13:06:46Z",
    "closed_at": "2019-10-02T12:07:32Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6497",
    "body": "I have been trying to find this information but only found one case here from 2 years ago and it's not clear the current status as it was closed.\r\n\r\nI'm playing a SS+PR stream with Exoplayer, both video and audio are adaptive with a few profiles each.\r\nVideo is adapting properly.\r\nAudio is not adapting at all, it stays in the same profile all the time.\r\n\r\nIs that a known limitation in Exoplayer? Any plan to improve that?\r\n\r\nIf so, what's the recommended way of handling that before is officialy added to Exoplayer?\r\nSelect one stream at the beginning of the playback and keep playing it? How can that be done?\r\n\r\nHow can that be handled when part of the audio profiles are stereo and part 5.1? Can 5.1 be played in a stereo device?\r\n\r\nWill it make any difference to use DASH instead of SS?\r\n\r\nAndroid Tv 7.1.1\r\nExoplayer 2.10.2\r\nStreams: Smooth Streaming + Playready\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6497/comments",
    "author": "alfonsoramosa",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2019-10-02T10:07:43Z",
        "body": "> Any plan to improve that?\r\n\r\nParallel adaptation of both video and audio is already tracked by #5111. We are currently running experiments to verify the impact on performance metrics before making this the default.\r\n\r\nIf you want to try it out yourself, you can use `DefaultTrackSelector.experimental_allowMultipleAdaptiveSelections()` to turn the feature on. Note that this is just an experimental flag so far and will be renamed or removed in future versions.\r\n\r\n> How can that be handled when part of the audio profiles are stereo and part 5.1? Can 5.1 be played in a stereo device?\r\n\r\nThe `DefaultTrackSelector` will never select tracks that are not supported by your device. So the 5.1. tracks will only be part of a selection if they can actually be played. Also, by default, we won't allow adaptation between different channel counts (i.e. stereo and 5.1) because there may be an audible discontinuity when we switch formats. But you can explicitly allow this by setting `DefaultTrackSelector.Parameters.allowAudioMixedChannelCountAdaptiveness` to true.\r\n\r\n> Will it make any difference to use DASH instead of SS?\r\n\r\nNo."
      }
    ]
  },
  {
    "number": 6479,
    "title": "Can we add an ad  after the video is ended by ima.",
    "created_at": "2019-09-27T11:33:09Z",
    "closed_at": "2019-11-11T06:33:07Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6479",
    "body": "### [REQUIRED] Question\r\nNow i can add an ad before the video is played.\r\nCan we add an ad after the video is ended. \r\nIf we can, What do I need to do about it?\r\n\r\n### A full bug report captured from the device\r\n\r\n\r\n### Link to test content\r\nIn case your question is related to a piece of media, which you are trying to\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6479/comments",
    "author": "lsgfly",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2019-09-27T13:30:12Z",
        "body": "If you want to play a postroll ad it should be included in the VMAP ad tag and will be played automatically.\r\n\r\nIf you are trying to do something different please describe it in more detail."
      },
      {
        "user": "lsgfly",
        "created_at": "2019-09-28T06:06:50Z",
        "body": "In the demo-ima, the ad always played before the video is played.\r\nHow should I change the code so that the advertisement can be played after the video ended?\r\n\r\n\r\n\r\n"
      },
      {
        "user": "andrewlewis",
        "created_at": "2019-11-11T06:33:07Z",
        "body": "Using a VMAP ad tag with a postroll is the only way to do this with the IMA extension at the moment, I'm afraid. We always play plain VAST ad tags as prerolls. Last time we discussed this limitation we decided not to give flexibility to choose where to play the ad because VMAP ad tags already support this use case."
      }
    ]
  },
  {
    "number": 6456,
    "title": "Can we set a default start index for ShuffleOrder  ",
    "created_at": "2019-09-23T06:09:33Z",
    "closed_at": "2019-09-23T13:42:52Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6456",
    "body": "We can create a custom ShuffleOrder but how can we set a default start index  \r\n\r\nI have 9 songs, a,b,c,d,e,f,g,h,i, I want to set a ShuffleOrder  of , c,a,b,d,g,f,h,i,e , \r\n\r\nThe current player status is RepeatAll, and the current song being played is, e, that is , index of 4,\r\n\r\nnow when the user selects Shuffle, the player can shuffle using the  ShuffleOrder  , how can we set the next song to start playing from c. that is the index of 2 , that is the starting index of the ShuffleOrder  \r\n\r\n\r\n<!-- DO NOT DELETE\r\nvalidate_template=true\r\ntemplate_path=.github/ISSUE_TEMPLATE/question.md\r\n-->\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6456/comments",
    "author": "pawaom",
    "comments": [
      {
        "user": "google-oss-bot",
        "created_at": "2019-09-23T06:09:34Z",
        "body": "This issue does not seem to follow the issue template. Make sure you provide all the required information."
      },
      {
        "user": "tonihei",
        "created_at": "2019-09-23T10:31:57Z",
        "body": "You can create a new ShuffleOrder with a custom ordering using the constructor that takes an `int[]`. That allows you to configure the order in any way you like. To make the player use this shuffle order, you can then set it in `ConcatenatingMediaSource.setShuffleOrder`. "
      }
    ]
  },
  {
    "number": 6448,
    "title": " Is it possible to download PDF files with CacheDataSourceFactory?",
    "created_at": "2019-09-19T19:15:57Z",
    "closed_at": "2019-09-24T08:19:46Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6448",
    "body": "For example, I have an application that caches audios and videos for offline studies, and would like to use the \"same logic\" for PDF files. It's possible?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6448/comments",
    "author": "matheusbrandao",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2019-09-23T11:12:02Z",
        "body": "The downloader for progressive files (like the one you'd use for an mp4 file) is not making any assumptions about the file contents. So, yes, downloading the PDF file into the ExoPlayer cache would work. \r\n\r\nThe question is - how do you plan to use it afterwards? The cache is build for playback and the only sensible way to read the contents of the file is to use a `CacheDataSource`. So unless you have a PDF reader/viewer that can use ExoPlayer's `DataSource` as an input, it's difficult to retrieve. You may be able to wrap the `CacheDataSource` with an `DataSourceInputStream` and I guess it may be possible to display the PDF using an `InputStream`. Note that we can't provide any more advice on customizations like that because it goes beyond media playback. "
      },
      {
        "user": "matheusbrandao",
        "created_at": "2019-09-23T18:29:16Z",
        "body": "Hey man. \r\n\r\nThat is exactly the point. I saw that it was possible to download, but did not know how to consume the content.\r\n\r\nBut thanks to your tip, I was able to do it with `DataSourceInputStream`. Thank you very much."
      }
    ]
  },
  {
    "number": 6447,
    "title": "Parsing Vast Tags With ImaAds extension.",
    "created_at": "2019-09-19T15:15:10Z",
    "closed_at": "2019-09-21T14:10:52Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6447",
    "body": "I am showing vast ads with Ima extension. i need to parse the vast xml to load some custom views on the player. how can i get the tags inside the VAST file?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6447/comments",
    "author": "RezaMortazavi",
    "comments": [
      {
        "user": "AquilesCanta",
        "created_at": "2019-09-20T19:35:51Z",
        "body": "@andrewlewis would you mind answering this?"
      },
      {
        "user": "RezaMortazavi",
        "created_at": "2019-09-21T11:58:47Z",
        "body": "Anyone?\r\n"
      },
      {
        "user": "andrewlewis",
        "created_at": "2019-09-21T14:10:52Z",
        "body": "I don't think the IMA SDK provides a way to get the contents of the ad tag XML. You'd probably need to load and parse the ad tag yourself.\r\n\r\nFor what it's worth, the IMA SDK does expose some ad metadata in the `Ad` instance passed to the `AdEventListener` for the LOADED event. You can supply one of these listeners when building the `ImaAdsLoader`. I'm not sure if this includes the information you need though."
      }
    ]
  },
  {
    "number": 6428,
    "title": "Play a specific portion of a video but display the whole video?",
    "created_at": "2019-09-13T20:07:19Z",
    "closed_at": "2019-11-17T00:56:06Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6428",
    "body": "## Searched documentation and issues\r\nI have looked at ClippingMediaSource.\r\n\r\n## Question\r\nI want to play a video from url. The whole video shows on the seek bar and player but it starts playing from a specific point and pauses at a specific point. The user can press play and continue watching the rest of the video. How can I achieve that?\r\n\r\n<!-- DO NOT DELETE\r\nvalidate_template=true\r\ntemplate_path=.github/ISSUE_TEMPLATE/question.md\r\n-->\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6428/comments",
    "author": "PranjalDesai",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2019-09-16T09:12:35Z",
        "body": "> it starts playing from a specific point \r\n\r\nYou can call `player.seekTo` before `player.prepare` to ensure the video starts from the desired position.\r\n\r\n> and pauses at a specific point.\r\n\r\nYou can send a message that gets triggered at this point and pauses the player:\r\n```\r\nplayer.createMessage((type, payload) -> player.setPlayWhenReady(false))\r\n  .setHandler(new Handler()).setPositionMs(pausePosition).send();\r\n```\r\n> The user can press play and continue watching the rest of the video.\r\n\r\nThat just works with the method above because the video is paused in the normal way.\r\n\r\n\r\n"
      },
      {
        "user": "PranjalDesai",
        "created_at": "2019-09-16T15:35:28Z",
        "body": "That works for a single video but if you have multiple videos being passed as ConcatenatingMediaSource than how do you handle starting point for each video?"
      },
      {
        "user": "tonihei",
        "created_at": "2019-09-16T15:45:03Z",
        "body": "That's unfortunately not yet supported but tracked by #6373. \r\n\r\nIf you need such a feature urgently, you can make it (mostly) work by writing a `MediaSource` wrapper that returns a `Timeline` wrapper that sets your start position as `windowDefaultStartPositionUs`."
      },
      {
        "user": "PranjalDesai",
        "created_at": "2019-09-16T16:00:23Z",
        "body": "Awesome thanks!"
      }
    ]
  },
  {
    "number": 6409,
    "title": "Changing ad source in runtime (Exoplayer IMA extension)",
    "created_at": "2019-09-09T08:42:52Z",
    "closed_at": "2020-06-23T15:27:43Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6409",
    "body": "### [REQUIRED] Searched documentation and issues   \r\nYes\r\n\r\n\r\n### [REQUIRED] Question\r\nis There a way to change Ad source XML  while the ad is running? For eg, if i created an ad source before the actual playback (using  `Uri adXMLUri =Uri.parse(AD_XML_URL)`, `imaAdsLoader = new ImaAdsLoader(this,adXMLUri )` and  `AdsMediaSource adsMediaSource = new AdsMediaSource( mediaSource, dataSourceFactory, imaAdsLoader,adViewProvider)` ),\r\nis there a way i could run them all again and change this `AD_XML_URL`  everytime the ad runs completely?will exoplayer be able to catch this change and update its ads/video stream and player ui accordingly? I also know there is some way to add  adEventListener , as discussed in #3322 , but i am unable to figure out how. would be great to get some insights for that too.\r\n\r\n### A full bug report captured from the device\r\nNot Applicable.\r\n\r\n### Link to test content\r\nNot Applicable.\r\n\r\n<!-- DO NOT DELETE\r\nvalidate_template=true\r\ntemplate_path=.github/ISSUE_TEMPLATE/question.md\r\n-->\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6409/comments",
    "author": "root-ansh",
    "comments": [
      {
        "user": "root-ansh",
        "created_at": "2019-09-14T11:50:55Z",
        "body": "Can i have an update on this? I would be very much grateful.\r\n@ojw28 , @andrewlewis "
      },
      {
        "user": "andrewlewis",
        "created_at": "2019-09-22T21:30:59Z",
        "body": "If you want to change the ad tag, currently you'd need to create a new `ImaAdsLoader` instance and re-prepare the player with a new source. That will interrupt playback, though, so it's probably better to make a VMAP ad tag that has all the ad breaks you need in it. Is that possible? Or if you're trying to achieve something else could you describe it in a bit more detail? Thanks.\r\n\r\n`ImaAdsLoader.Builder` lets you set an `AdEventListener`."
      },
      {
        "user": "root-ansh",
        "created_at": "2019-09-29T00:08:04Z",
        "body": "@andrewlewis  We need to change ads at fixed intervals. But These ads are not predefined, and would be fetched from the server at run time, just a few seconds before the the scheduled time.  \r\n\r\nI am  thinking of a solution in which we(The dev) will control ad playback .  Like, for eg if I need to show an ad a 20 seconds from the start of content, There will be callback that will aware some function  at 20th second, which will further stop the content , start the ad playback and then resume the content"
      },
      {
        "user": "root-ansh",
        "created_at": "2019-10-11T22:51:04Z",
        "body": "any update on this?  @andrewlewis"
      },
      {
        "user": "root-ansh",
        "created_at": "2019-10-11T23:15:59Z",
        "body": "You know, I am perfectly fine with `ImaAdLoader`'s current working and i can provide an empty vmap response like String with just the ad points, but i want to have a observer-publisher kind of functionality: The exoplayer should run the content and vmap as usual, but should fire an event for requesting vast tag (via an interface) from the observer (i.e the activity/fragment implementing such interface)    \r\n\r\nFrom what i could guess, exoplayer loads all the ads in vmap  at the start of playback only and just  runs those loaded ads when an adpoint comes."
      },
      {
        "user": "andrewlewis",
        "created_at": "2020-03-13T16:30:18Z",
        "body": "@root-ansh Sorry for the delayed response. My understanding is that in the VMAP specification your top level ad tag can point to other ad tags which are loaded just before playback reaches the corresponding cue point.\r\n\r\nIt sounds like you may be trying to implement this on the client rather than having an ad server that provides a VMAP ad tag as described. In that case you probably need to implement a custom `AdsLoader`, but I'm afraid we don't have detailed documentation on how to do that yet."
      },
      {
        "user": "andrewlewis",
        "created_at": "2020-06-23T15:27:43Z",
        "body": "#4680 will likely solve this request once we get round to it (and even if it doesn't, it will likely provide a good starting point for doing what's described here), so I will close this."
      }
    ]
  },
  {
    "number": 6389,
    "title": "How can I change default controller buttons programatically?",
    "created_at": "2019-09-04T13:05:59Z",
    "closed_at": "2019-09-04T15:35:53Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6389",
    "body": "The requirement is if I select a song it started playing and if I am selecting same song again it is paused. but I want the play/pause button in controller to get changed as well.\r\nI am not able to find any way to do it.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6389/comments",
    "author": "officialsachinverma",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2019-09-04T15:35:53Z",
        "body": "This is not something we support. It's not possible for us to write off-the-shelf UI components that also support all arbitrary customizations that developers want to make. For this type of feature, you probably need to implement your own UI component. Feel free to fork the ones from the ExoPlayer library as a starting point."
      }
    ]
  },
  {
    "number": 6382,
    "title": "ControlPlayerView above ViewPager with playerviews = Hide/Dismiss not working",
    "created_at": "2019-09-04T09:55:04Z",
    "closed_at": "2019-10-14T01:07:19Z",
    "labels": [
      "question",
      "need more info",
      "stale",
      "closed-by-bot"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6382",
    "body": "### [REQUIRED] Searched documentation and issues\r\nI search in some stackoverflow and questions in the ExoPlayer repo.\r\nI also browsed the ExoPlayer source code\r\n\r\n### [REQUIRED] Question\r\nHello\r\n\r\nFor my project I have some architecture constraints :\r\nMy exoplayer version is 2.8.4\r\n\r\nActivity code\r\n```\r\nclass Activity {\r\n\r\n\texoPlayerInstance: ExoPlayer\r\n\r\n\tcontrol.player = exoPlayerInstance\r\n\r\n\tpager.onCurrentPagerChanged { currentFragment ->\r\n\t\tcurrentFragment.playerView.player = exoPlayerInstance\r\n\t\tcurrentFragment.prepareNewMedia()\r\n\t}\r\n}\r\n```\r\nActivity layout\r\n```\r\n<Activity>\r\n\t<ViewPager as pager/>\r\n\t<PlayerControlView as control\r\n\t\theight=« match_parent »\r\n\t\twidth=« match_parent » \t\r\n\t/>\r\n</Activity>\r\n```\r\n\r\nLayout fragment in the viewpager\r\n```\r\n<Fragment>\r\n\t<PlayerView\r\n\t\tuseController:false\r\n\t/>\r\n</Fragment>\r\n```\r\n\r\nI also create the file exo_player_control_view.xml to override the control UI.\r\nTo sum up, I need to have a single `PlayerControlView` above my view pager with multiple fragments\r\n\r\nMy problem is the following : \r\n\r\nWhen I swipe the view pager, \r\nthe player control above is rightly updated with the new prepared media (thanks to the 'currentFragment.playerView.player = exoPlayerInstance’)\r\n\texo_duration, exo_progress, play/pause are ok\r\n\r\nBut when I tap on the current displayed player view, in the view pager, the controller doesn’t dismiss rightly such as the default behavior (5000ms show timeout)\r\n\r\nI tried to tweak some attributes in the xml/code :\r\nIn the playerControlView, When I put \r\n- `show_timeout:2000` -> the controller is dismissed after 2000ms but never be shown again after a screen tap\r\n- `show_timeout:0` -> the controller is always visible and cannot be hidden when I tap the screen\r\n\r\nIs it possible to link dynamically my `ControlPlayerView` instance and a set of `PlayerView` ?\r\n\r\n<!-- DO NOT DELETE\r\nvalidate_template=true\r\ntemplate_path=.github/ISSUE_TEMPLATE/question.md\r\n-->\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6382/comments",
    "author": "nbourdin",
    "comments": [
      {
        "user": "google-oss-bot",
        "created_at": "2019-09-04T09:55:05Z",
        "body": "This issue does not seem to follow the issue template. Make sure you provide all the required information."
      },
      {
        "user": "andrewlewis",
        "created_at": "2019-09-22T22:29:27Z",
        "body": "If you think it's a bug in ExoPlayer's widgets please could you provide a minimal sample project so we can reproduce the issue? Otherwise, I'm afraid we don't really have resources to debug issues with custom layouts. Thanks."
      },
      {
        "user": "google-oss-bot",
        "created_at": "2019-10-07T01:03:17Z",
        "body": "<!-- event: mark-stale -->\nHey @nbourdin. We need more information to resolve this issue but there hasn't been an update in 14 days. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2019-10-14T01:07:18Z",
        "body": "<!-- event: close-stale -->\nSince there haven't been any recent updates here, I am going to close this issue.\n\n@nbourdin if you're still experiencing this problem and want to continue the discussion just leave a comment here and we are happy to re-open this."
      }
    ]
  },
  {
    "number": 6377,
    "title": "已解决",
    "created_at": "2019-09-03T12:14:06Z",
    "closed_at": "2019-09-03T12:34:36Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6377",
    "body": "",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6377/comments",
    "author": "imfondof",
    "comments": [
      {
        "user": "google-oss-bot",
        "created_at": "2019-09-03T12:14:07Z",
        "body": "This issue does not have all the information required by the template.  Looks like you forgot to fill out some sections.  Please update the issue with more information."
      }
    ]
  },
  {
    "number": 6374,
    "title": "how to switch dynamically between hls and dash in exoPlayer ?",
    "created_at": "2019-09-03T05:46:44Z",
    "closed_at": "2019-09-03T08:47:59Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6374",
    "body": "hi , we have several server streams. Some servers have HLS and some others have DASH. can I write switch between HLS and DASH dynamically when a movie is played with a player ?\r\n\r\n```\r\nExoplayer Version : 2.10.3\r\n```\r\n<!-- DO NOT DELETE\r\nvalidate_template=true\r\ntemplate_path=.github/ISSUE_TEMPLATE/question.md\r\n-->\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6374/comments",
    "author": "Navidhp",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2019-09-03T08:47:59Z",
        "body": "You would have to re-prepare the player to switch from one to the other, which is not seamless. We do not support seamlessly switching between HLS and DASH."
      }
    ]
  },
  {
    "number": 6368,
    "title": "Custom derived values for timebar?",
    "created_at": "2019-09-01T09:26:43Z",
    "closed_at": "2019-09-02T12:07:14Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6368",
    "body": "Is there a way I can override some functions in PlayerControlView so that the timebar duration and progress are different? I have offsets in my mp3 files to denote start of a track. I have to calculate duration and progress relative to those offsets.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6368/comments",
    "author": "dexterleng",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2019-09-02T12:07:14Z",
        "body": "It's not a final class, so in theory you can extend it and override methods.\r\n\r\nWhether there's a method for the specific thing is that you want to do is a different question. It's somewhat unlikely; it's not possible for us to anticipate all of the types of customization that anyone would want to do. If you want to propose a method that you can override that'll enable what you need, please feel free to send a pull request to the `dev-v2` branch. You can also just fork the class into your own code-base and edit it directly, for cases where you need custom behavior."
      }
    ]
  },
  {
    "number": 6359,
    "title": "Can I use ClippingMediaSource on a ConcatenatingMediaSource?",
    "created_at": "2019-08-29T14:54:27Z",
    "closed_at": "2019-08-29T15:23:25Z",
    "labels": [
      "duplicate",
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6359",
    "body": "I have an audiobook but it is split into multiple mp3 files arbitrarily:\r\n\r\n```\r\n[ \"file01.mp3\", \"file02.mp3\" ]\r\n```\r\n\r\nThe chapters in the audiobook are represented by the file and the offset in milliseconds the chapter starts on:\r\n\r\n```\r\n[{ name: \"chapter one: something, file: \"file01.mp3\", offset: 0 },\r\n{ name: \"chapter two: something, file: \"file01.mp3\", offset: 900 },\r\n{ name: \"chapter three: something, file: \"file02.mp3\", offset: 10 },\r\n...]\r\n```\r\n\r\nIs it possible to use ConcatenatingMediaSource to put multiple files together and them trim the start and end with ClippingMediaSource so that it represents a chapter? This will allow me to use ConcatenatingMediaSource again to join all the ClippingMediaSources to represent the audiobook.\r\n\r\nThe documentation for ClippingMediaSource says that it only works with single-period. Does this mean no ConcatenatingMediaSource support?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6359/comments",
    "author": "dexterleng",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2019-08-29T15:23:25Z",
        "body": "Currently ClippingMediaSource supports only media sources with a single period. So the ConcatenatingMediaSource is not supported. See also #6234 around this topic.\r\n\r\nI mark this issue as a duplicate and close. Please comment on the other issue or reopen if you think it's required."
      },
      {
        "user": "dexterleng",
        "created_at": "2019-08-30T10:00:06Z",
        "body": "@marcbaechinger would it be possible to clip and then join them?\r\n\r\nFor example:\r\n\r\nfile01.mp3 is split into chapter1, chapter2 (first chunk),\r\n\r\nfile02.mp3 is split into chapter2 (second and last chunk), and chapter3.\r\n\r\nI would then join the two chunks to form chapter 2.\r\n"
      },
      {
        "user": "tonihei",
        "created_at": "2019-09-02T10:43:08Z",
        "body": "@dexterleng  That should be possible. However, note that the items are still treated separately in our UI for example. There is #4868 to improve support for this."
      }
    ]
  },
  {
    "number": 6354,
    "title": "Espresso with exoplayer",
    "created_at": "2019-08-29T09:35:07Z",
    "closed_at": "2019-09-25T09:40:30Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6354",
    "body": "\r\n\r\n\r\n### [REQUIRED] Searched documentation and issues\r\nSample app of exoplayer doesn't have espresso testing use cases.\r\n\r\n### [REQUIRED] Question\r\nI have been looking for a way to set up espresso in the same screen where the exoplayer is also integrated but not able to find a way to do it. Is there any IdlingResource and rule to for espresso with exoplayer ?\r\n\r\n### A full bug report captured from the device\r\nNot a bug\r\n\r\n### Link to test content\r\nSample app can be updated to demonstrate Espresso testing with exoplayer\r\n\r\n<!-- DO NOT DELETE\r\nvalidate_template=true\r\ntemplate_path=.github/ISSUE_TEMPLATE/question.md\r\n-->\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6354/comments",
    "author": "NayaneshGupte",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2019-08-29T09:53:17Z",
        "body": "The ExoPlayer library does not provide dedicated support for Espresso. \r\n\r\nI'm not too much into the details of Espresso but as far as I understand it should be possible to implement an `IdlingResource` which is for instance waiting for a given event passed to `Player.EventLogger` and then call `onTransitionToIdle`. For example if you want to play a video and when the state `Player.STATE_ENDED` is passed to onPlayerStateChanged, then you call `onTransitionToIdle` so the test can continue and assert some UI state."
      },
      {
        "user": "NayaneshGupte",
        "created_at": "2019-08-29T09:59:02Z",
        "body": "@marcbaechinger so does that mean performing test while player is in READY (Playing) state , espresso test can not continue ?"
      },
      {
        "user": "marcbaechinger",
        "created_at": "2019-08-30T14:54:11Z",
        "body": "Being not an Espresso expert, I assume the espresso test runs on a thread which is similar to the main thread in the app. As ExoPlayer has it's own playback thread, the player will not block that main thread when doing playback. In fact I believe you need to make sure that your test does not end and hence stop ExoPlayer while the player is doing playback.\r\n\r\nAs far as I understand this is exactly why you want such an IdleResource implementation. It will tell your test to wait until a certain event happens on which your code then calls onTransitionToIdle. After that call your test continues. Without this IdelResource your test would finish regardless of the state of the player."
      },
      {
        "user": "marcbaechinger",
        "created_at": "2019-09-25T09:40:30Z",
        "body": "closing due to inactivity."
      }
    ]
  },
  {
    "number": 6342,
    "title": "MediaSource reflected in MediaDrmCallback",
    "created_at": "2019-08-26T13:16:33Z",
    "closed_at": "2020-06-11T23:21:35Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6342",
    "body": "### Use case description\r\nTo my understanding, starting with version 2.11.0, `DrmSessionManager` will be injected into the `MediaSource`. To me, it makes perfect sense to reflect that in the `MediaDrmCallback` so we actually know what `MediaSource` we are making the key request to.\r\n\r\n### Proposed solution\r\nSomehow get the `MediaSource` into the parameter for `executeKeyRequest` in `MediaDrmCallback`.\r\n\r\n### Alternatives considered\r\nCustom implementation of `MediaDrmCallback` where we pass the same parameters as for the `MediaSource`(e.g. track id). This is not preferred, because then we would need as many `MediaDrmCallback` classes as `MediaSource`s and there might be more information in the already prepared `MediaSource`(e.g. we are resolving the url based on the track id), so this information is lost in this alternative.\r\n\r\n<!-- DO NOT DELETE\r\nvalidate_template=true\r\ntemplate_path=.github/ISSUE_TEMPLATE/feature_request.md\r\n-->\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6342/comments",
    "author": "kgrevehagen",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2019-08-27T08:48:04Z",
        "body": "@AquilesCanta Can you please comment on this?"
      },
      {
        "user": "AquilesCanta",
        "created_at": "2019-08-27T09:30:28Z",
        "body": "What information do you need in the MediaDrmCallback?\r\n\r\nMediaSource is an exoplayer core functional component. I strongly doubt you intend to call MediaSource methods from MediaDrmCallback, so I suppose you want to downcast it to retrieve some information.\r\n\r\nConsidering MediaDrmCallback is such a lightweight component, I don't see any issue with creating one per MediaSource. Please clarify this bit if you find any issue with it."
      },
      {
        "user": "kgrevehagen",
        "created_at": "2019-08-27T10:22:55Z",
        "body": "Your assumption is correct, I don't intend to call `MediaSource` methods from `MediaDrmCallback`, but instead retrieve information stored in them.\r\n\r\nIf you don't see it as a problem of creating one `MediaDrmCallback` per `MediaSource`, this won't be a problem after 2.11.0, I can then provide my `MediaDrmCallback` with whatever I want, and it is a one-to-one relationship between the two.\r\nBut, since `MediaDrmCallback` is part of `DefaultDrmSessionManager` it would mean that we also need one `DefaultDrmSessionManager` per `MediaSource`. Would this be a problem? \r\n\r\nThis is not possible in 2.10.4, but I guess it won't be useful to add this functionality if it can be solved like described in 2.11.0.\r\n\r\nFeel free to close this if the above is true, thanks so much for your answer!"
      },
      {
        "user": "ojw28",
        "created_at": "2020-06-11T23:21:35Z",
        "body": "In the general case, I think we want to keep the relationship between `MediaSource`, `DrmSessionManager` and key requests deliberately fuzzy. We have plans to allow sharing and reuse of `DrmSession` instances across multiple `MediaSource` instances that need the same keys. And also to start keeping `DrmSession` instances open for some period when they're not being used, in case they're needed again. In a world where these kind of features exist, it becomes increasingly unclear, or at least arbitrary, to which individual `MediaSource` a key request should be attributed back to.\r\n\r\nSo I don't think we can plumb `MediaSource` instances through to `MediaDrmCallback` inside the library. If you want to make the attribution clear then I agree with the approach suggested above, in which you build your components so that there's a 1:1:1 relationship between `MediaSource`, `DefaultDrmSessionManager` and `MediaDrmCallback`, which then makes attribution clear (and on a practical level, let's you build a `MediaDrmCallback` specific to the corresponding `MediaSource`. I don't see any issues with this approach."
      },
      {
        "user": "kgrevehagen",
        "created_at": "2020-06-18T08:07:03Z",
        "body": "Thanks for clearing up. I'm using this logic now, and it works seamlessly :) "
      }
    ]
  },
  {
    "number": 6337,
    "title": "Force DRM license request",
    "created_at": "2019-08-23T12:34:40Z",
    "closed_at": "2021-06-21T22:17:32Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6337",
    "body": "### Use case description\r\nIn order to fetch a DRM license from our license server, I need to supply a short-lived security token.\r\n\r\nWhen playing in a `ConcatenatingMediaSource`, the security token(which is retrieved along with other playback data when preparing a `MediaSource`) might have expired at the time the `DefaultDrmSession` tries to get the license key. In case of a 4xx error on the license key call, I need to refetch the security token and then retry the license key request.\r\n\r\n### Proposed solution\r\n- In `onDrmSessionManagerError` I can fetch a new security token and then force a new key request. The latter is afaik not possible, but would be helpful. The reason I want to do it in `onDrmSessionManagerError` is because it's most likely still in the clear lead and the music still plays.\r\n- With your expertise there might exist a better solution.\r\n\r\n### Alternatives considered\r\n- I can handle it in `onPlayerError`, but then I get a pause in playback, which is not good.\r\n- I can catch the exception in my implementation of `MediaDrmCallback` and do the retry there myself, but that feels kinda backwards.\r\n- Force a fetch of the license security token right before we request the license key, but this feels kinda backwards and makes double calls to our backend, which we don't want to do.\r\n\r\n<!-- DO NOT DELETE\r\nvalidate_template=true\r\ntemplate_path=.github/ISSUE_TEMPLATE/feature_request.md\r\n-->\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6337/comments",
    "author": "kgrevehagen",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2019-08-23T13:01:15Z",
        "body": "There are some ways to avoid this problem from occurring I think:\r\n- You can use a `ResolvingDataSource` to resolve your security token just in time for the license request. This way you don't load it in advance, but it can't expire either. \r\n- You can turn on `lazyPreparation` in the `ConcatenatingMediaSource` (in the long constructor) to only prepare the MediaSource when they are actually needed. That means they are not prepared long in advance, but only when we start pre-buffering the media. Be aware however that if you prepared a MediaSource once, it stays prepared and if you'd like to come back later, your keys mat have expired again."
      },
      {
        "user": "AquilesCanta",
        "created_at": "2019-08-23T13:20:16Z",
        "body": "Can't you generate the token at the moment MediaDrmCallback.executeKeyRequest is invoked?\r\n\r\nRetrial of licence requests is being tracked by #6334."
      },
      {
        "user": "kgrevehagen",
        "created_at": "2019-08-26T09:49:04Z",
        "body": "> * You can use a `ResolvingDataSource` to resolve your security token just in time for the license request. This way you don't load it in advance, but it can't expire either.\r\n\r\nAs far as I've understood, the `ResolvingDataSource` will still resolve when it is pre-buffering media(as opposed to when I create the `DataSource`). Or have I misunderstood? This means that if I pause playback right after it has been resolved(but before `executeKeyRequest` has been called), I can resume playback after it has expired, and when the next media source starts playing, my token would have been expired.\r\n\r\n> * You can turn on `lazyPreparation` in the `ConcatenatingMediaSource` (in the long constructor) to only prepare the MediaSource when they are actually needed. That means they are not prepared long in advance, but only when we start pre-buffering the media. Be aware however that if you prepared a MediaSource once, it stays prepared and if you'd like to come back later, your keys mat have expired again.\r\n\r\nLazy preparation seems for me to work similarly.\r\n\r\nMaybe you can clarify the difference between using a `ResolvingDataSource` with/without lazy preparation and just using a regular `DataSource` with/without lazy preparation?\r\n\r\n> Can't you generate the token at the moment MediaDrmCallback.executeKeyRequest is invoked?\r\n\r\nI can(this was what I tried to say in the third alternative solution), but this token is tied to the asset url, so it is fetched from backend(not generated on the client side) together with that. Fetching it again would be bad for obvious reasons(same call twice in a row even if it has not expired).\r\n\r\n> Retrial of licence requests is being tracked by #6334.\r\n\r\nThis would only retry or not retry the same request, as it would just call `executeKeyRequest` again(or not). But when `executeKeyRequest` is called again, I have no idea of why it failed or how many times it has failed. This information could help me to make the correct decision in `executeKeyRequest`(whether or not I should refetch my short-lived token or just retry with the same). Is this something you would consider implementing?"
      },
      {
        "user": "AquilesCanta",
        "created_at": "2019-08-30T13:21:50Z",
        "body": "> but this token is tied to the asset url, so it is fetched from backend(not generated on the client side) together with that. \r\n\r\nI don't really see the issue.\r\n\r\nLet's imagine you have a component with its own handler thread which is the TokenManager. Your media drm callback requests the token from the TokenManager each time it needs it.\r\n\r\nIf the TokenManager doesn't have a token or is renewing a token at the moment, the token request blocks the MediaDrmCallback from making the license request.\r\n\r\nIf the license request returns 4xx, then it notifies the TokenManager that it should invalidate the existing token. A later retry may be blocked until the TokenManager has a new token. You can then preemptively renew a token if you suspect it wont be valid in a shortly required license request.\r\n\r\nI think it's better for you to know (and act upon) the error as soon as it happens, instead of waiting until the retry call (that includes the error history) is made. \r\n\r\nPlease clarify why an approach similar to the suggest above wouldn't work. "
      },
      {
        "user": "google-oss-bot",
        "created_at": "2019-09-14T01:01:00Z",
        "body": "<!-- event: mark-stale -->\nHey @kgrevehagen. We need more information to resolve this issue but there hasn't been an update in 14 days. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "kgrevehagen",
        "created_at": "2019-09-16T10:27:20Z",
        "body": "If #4133 does what I think it does, this will no longer be an issue.\r\n\r\nCan you verify(and is it guaranteed) that `mediaDrmCallback.executeKeyRequest()` will be called very close to `mediaSource.prepare()` even though we e.g. pause right after it is prepared? If this is the case, my token will never expire by that time, and there is no need for special handling around that, which simplifies implementation a lot.\r\n\r\nAgain, this is only an issue when it prepares the next track while current is playing."
      },
      {
        "user": "AquilesCanta",
        "created_at": "2019-10-11T14:13:58Z",
        "body": "> Can you verify(and is it guaranteed) that mediaDrmCallback.executeKeyRequest() will be called very close to mediaSource.prepare() even though we e.g. pause right after it is prepared? \r\n\r\nNo, this is not correct, and I doubt this can be guaranteed in general. I don't think you should count on this happening. The reason is that the key acquisition information may be obtained when buffering starts, which does not necessarily happen close to mediaSource.prepare() (for example in the case of a concatenating media source, where the buffering position is before the item).\r\n\r\nWe will be working on prefetching keys soon: Please track #4133 for key pre-fetching. This doesn't mean we will be doing it during preparation, though, just whenever we load the key acquisition information (for example, the pssh box).\r\n\r\nIf you really need to load the keys during preparation, you will have to adapt your app to whatever media type you are using. Preparation works differently in DASH and HLS. And if you are playing DASH, the key acquisition information may be obtained from the manifest or the chunks, and you'll have to act accordingly.\r\n\r\nIs the original question answered?"
      },
      {
        "user": "ojw28",
        "created_at": "2021-06-21T22:17:53Z",
        "body": "Closing due to inactivity."
      }
    ]
  },
  {
    "number": 6317,
    "title": "Please remove",
    "created_at": "2019-08-19T14:38:12Z",
    "closed_at": "2019-08-19T14:46:17Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6317",
    "body": "Duplicate",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6317/comments",
    "author": "rafal-kobylko",
    "comments": [
      {
        "user": "google-oss-bot",
        "created_at": "2019-08-19T14:38:15Z",
        "body": "This issue does not seem to follow the issue template. Make sure you provide all the required information."
      }
    ]
  },
  {
    "number": 6316,
    "title": "Ima Ads Callback Listener",
    "created_at": "2019-08-19T13:16:25Z",
    "closed_at": "2019-08-21T09:44:36Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6316",
    "body": "Can i notice when the ad is finished or skipped ?\r\nIs there any callback listener for that? ",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6316/comments",
    "author": "RezaMortazavi",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2019-08-19T14:49:56Z",
        "body": "You can set an `AdEventListener` in `ImaAdsLoader.Builder`, which gets informed of ad related events."
      }
    ]
  },
  {
    "number": 6306,
    "title": "How to check if chunkless preparation is enabled. ",
    "created_at": "2019-08-16T13:47:20Z",
    "closed_at": "2019-08-16T14:20:36Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6306",
    "body": "i looked in docs but could not find.\r\nHow to check whether the chunkless preparation is happening after setting ```allowChunklessPreparation()``` to true.\r\n\r\n<!-- DO NOT DELETE\r\nvalidate_template=true\r\ntemplate_path=.github/ISSUE_TEMPLATE/question.md\r\n-->\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6306/comments",
    "author": "shubhamvashisht",
    "comments": [
      {
        "user": "AquilesCanta",
        "created_at": "2019-08-16T14:20:36Z",
        "body": "Assuming you are setting allowChunklessPreparation to true, chunkless preparation will occur if, and only if, the CODECS attribute in EXT-X-STREAM-INF tags is present. \r\n\r\nThere is no straightforward way of checking. If you really want to programmatically know whether chunkless preparation is happening, you can:\r\n- Inject a custom HlsDataSourceFactory so as to inject a custom DataSource for C.DATA_TYPE_MEDIA(_INITIALIZATION).\r\n- Wrap HlsMediaSource and HlsMediaPeriod to know when MediaPeriod.Callback#onPrepared is being called by HlsMediaPeriod.\r\n\r\nIf HTTP connections for C.DATA_TYPE_MEDIA are being opened before MediaPeriod.Callback#onPrepared is being called, then chunkless preparation is not working (you can also check whether the codecs attribute for the variants is populated. If it is, please report an issue!\r\n\r\nHope this helps!"
      }
    ]
  },
  {
    "number": 6304,
    "title": "Does Exo player support to set error time out?",
    "created_at": "2019-08-16T09:49:22Z",
    "closed_at": "2019-08-21T01:56:54Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6304",
    "body": "When exo player happend `timeout` or `socket timeout` exception, inner player will retry soon, the problem is how can I set the error retry time? Because inner player retry fastly.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6304/comments",
    "author": "VeiZhang",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2019-08-19T10:50:50Z",
        "body": "I'm not entirely sure what kind of timeout or delay you mean, but there are multiple ways to customize the loading behavior:\r\n- `DefaultHttpDataSourceFactory` allows you to set a `connectTimeoutMillis` and a `readTimeoutMillis` for the connection and reading timeout respectively. You can your customized data source factory in the `MediaSource` builders. \r\n- Every `MediaSource` builder allows you to set a `LoadErrorHandlingPolicy` to define how the player handles errors. You can for example specify the delay before a load is retried (or if it's retried at all)."
      },
      {
        "user": "VeiZhang",
        "created_at": "2019-08-20T10:39:49Z",
        "body": "@tonihei Thanks for your help. I found when playing error, exo player will retry to play more times, I want it retry once or don't retry.\r\nFollow your help, I find the way, maybe it can. I will try.\r\n```\r\nDefaultLoadErrorHandlingPolicy#minimumLoadableRetryCount\r\n```\r\n\r\n**Thanks again**"
      },
      {
        "user": "tonihei",
        "created_at": "2019-08-20T11:49:04Z",
        "body": "Please have a look at `LoadErrorHandlingPolicy.getRetryDelayMsFor`. If you return `C.TIME_UNSET` from this method, it stops retrying. Otherwise, you can also specify the number of time to retry with `minimumLoadableRetryCount`."
      },
      {
        "user": "VeiZhang",
        "created_at": "2019-08-21T01:56:54Z",
        "body": "@tonihei Thanks"
      }
    ]
  },
  {
    "number": 6302,
    "title": "Dynamically change ConcatenatingMediaSource",
    "created_at": "2019-08-16T03:32:22Z",
    "closed_at": "2019-09-05T09:59:42Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6302",
    "body": "I used ConcatenatingMediaSource to play a list of videos, but after I removed or added the ConcatenatingMediaSource, the actual playlist of the exoplayer did not change. I had to call exoPlayer.prepare again, but the playback would be stopped. How do I dynamically add or remove a playlist? Thank you.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6302/comments",
    "author": "3-BodyCoding",
    "comments": [
      {
        "user": "jakoss",
        "created_at": "2019-08-16T06:39:09Z",
        "body": "Just to be sure. You added new `ConcatenatingMediaSource` to existing `ConcatenatingMediaSource`? I don't think that's supported. You can add any single `MediaSource` to `ConcatenatingMediaSource`, but i'm not sure how nested `ConcatenatingMediaSource` could work"
      },
      {
        "user": "tonihei",
        "created_at": "2019-08-16T08:12:36Z",
        "body": "@Nekromancer  Nested `ConcatenatingMediaSource` are supported and it should work just fine. \r\n\r\n@AndroidJohnsonWang Can you clarify what you mean by \"the actual playlist of the exoplayer did not change\"? The way it's currently implemented means that all dynamic playlist changes are not immediately visible in the `Timeline` you get from the callback and `Player.getCurrentTimeline`. If you'd like to do something as a result of a playlist operation, you can pass in a `Runnable` as the last parameter to `addMediaSource` for example, which gets executed once the playlist operation has been done.\r\n\r\nNote that we are currently reworking our playlist API to integrate it better with the rest of the player. See the RFC in #6161. "
      },
      {
        "user": "3-BodyCoding",
        "created_at": "2019-08-16T10:58:09Z",
        "body": "@tonihei I've seen the new API documentation. I think the new exoplayer playlist API is better than the current API. Now, using exoPlayer.prepare(ConcatenatingMediaSource), it's not a good idea to change the ConcatenatingMediaSource.\r\nWhen is the new Api version updated? Thank you"
      },
      {
        "user": "tonihei",
        "created_at": "2019-08-16T11:19:27Z",
        "body": "The update should happen as part of the next major release (2.11.0), but we don;t have exact dates yet."
      },
      {
        "user": "tonihei",
        "created_at": "2019-09-05T09:59:42Z",
        "body": "Closing because the question was answered"
      }
    ]
  },
  {
    "number": 6292,
    "title": "Format language parameter returning 3 letters instead of 2",
    "created_at": "2019-08-13T10:49:16Z",
    "closed_at": "2019-08-13T11:03:50Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6292",
    "body": "I am creating my own Format object to sync my VTT file with the video\r\nThis is how I create a format object \r\n\r\n```\r\nFormat textFormat = Format.createTextContainerFormat(\"vtt\" + 1, \"English\",\r\n                            MimeTypes.APPLICATION_M3U8, MimeTypes.TEXT_VTT, null, -1, flag, C.ROLE_FLAG_CAPTION, \"en\");\r\n```\r\n\r\nI get following object in return after creation \r\n\r\n> Format(vtt1, Finnish, application/x-mpegURL, text/vtt, null, -1, eng, [-1, -1, -1.0], [-1, -1])\r\n\r\nHere the format language has changed from \"en\" to \"eng\". \r\n\r\nIt was returning 2 letters before recent update. Is it possible for me to get 2 letters instead of 3?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6292/comments",
    "author": "harshmittal29",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2019-08-13T11:03:47Z",
        "body": "The language gets normalized into a fixed format to be able to make language comparison (e.g. for track selection based on language preferences).\r\n\r\nWe recently changed our normalization from 3-letter codes to 2-letter codes because they are more common and better integrated into the rest of the Android system. That means 2.10.4 and above should have a 2-letter code again."
      }
    ]
  },
  {
    "number": 6288,
    "title": "Does Exo support audio channel ?",
    "created_at": "2019-08-13T07:58:06Z",
    "closed_at": "2019-08-22T08:51:15Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6288",
    "body": "I want to switch audio channel, left volume scalar, right volume scalar and stereo, but I don't found how to set it.\r\n**Does Exo support audio channel? If ok, how can I do?**",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6288/comments",
    "author": "VeiZhang",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2019-08-13T15:31:35Z",
        "body": "Swapping channels and modifying their volumes is not currently supported out of the box, but it's possible to implement it with your own audio processor, possibly based on the existing `ChannelMappingAudioProcessor`. See #2659 for more information. If that doesn't help, please provide some more details about what you're trying to do."
      },
      {
        "user": "VeiZhang",
        "created_at": "2019-08-16T09:44:45Z",
        "body": "@andrewlewis Thanks a lot, I'm trying."
      },
      {
        "user": "VeiZhang",
        "created_at": "2019-08-21T09:41:36Z",
        "body": "@andrewlewis Sorry, I had followed your tips, copy `ChannelMappingAudioProcessor`, but I met problems:\r\n```\r\njava.lang.ArrayStoreException: com.google.android.exoplayer2.audio.SilenceSkippingAudioProcessor \r\ncannot be stored in an array of type xxx.ChannelMappingAudioProcessor[]\r\n```\r\n\r\nI override DefaultRenderersFactory:\r\n```\r\nDefaultRenderersFactory renderersFactory = new DefaultRenderersFactory(mContext) {\r\n    @Override\r\n    protected AudioProcessor[] buildAudioProcessors() {\r\n        return new ChannelMappingAudioProcessor[0];\r\n    }\r\n}\r\n```\r\n\r\nAnd there is some important questions, I still don't know how ChannelMappingAudioProcessor works. How to set or get current audio channel."
      },
      {
        "user": "andrewlewis",
        "created_at": "2019-08-22T08:51:15Z",
        "body": "I'll submit a fix for the `ArrayStoreException` but for now you can just change your implementation to return an `AudioProcessor` array with a `ChannelMappingAudioProcessor` in it (instead of a `ChannelMappingAudioProcessor` array) to avoid this.\r\n\r\n`ChannelMappingAudioProcessor` will let you swap audio channels (e.g., switching left/right in a stereo stream) but it doesn't support changing volumes. See `ChannelMappingAudioProcessor.setChannelMap`. If you read #2659 there are some ideas about how to scale the audio samples if you need to control their volumes, but I'm afraid we don't have time to provide additional detailed guidance on that."
      }
    ]
  },
  {
    "number": 6269,
    "title": "Play button gets disabled after load error",
    "created_at": "2019-08-07T10:30:16Z",
    "closed_at": "2019-08-07T13:27:00Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6269",
    "body": "Play button gets disabled after getting error (load error) but I want the player gets paused instead of getting disabled or stuck and I can retry that by pressing play button, How can I do this?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6269/comments",
    "author": "aazam-nouri",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2019-08-07T13:27:00Z",
        "body": "The ExoPlayer demo app behaves exactly as you describe, so take a look at that. You should set a `PlaybackPreparer` via `PlayerView.setPlaybackPreparer` to handle the retry, as is done in the demo app's `PlayerActivity` class."
      }
    ]
  },
  {
    "number": 6262,
    "title": "Do you write component tests (ruby cucumber etc) for the project? ",
    "created_at": "2019-08-04T09:53:14Z",
    "closed_at": "2019-08-05T09:26:53Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6262",
    "body": "",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6262/comments",
    "author": "jbhovell",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2019-08-05T09:26:53Z",
        "body": "I think it would depend on exactly what your definition of a \"component test\" is. I would probably consider the tests covering ExoPlayer's extractors to be component tests. In any case, I'd suggest cloning the repository and having a look at the tests that are there."
      }
    ]
  },
  {
    "number": 6259,
    "title": "Is there a way to prefetch the video content based on device capacity without decoder initialisation?",
    "created_at": "2019-08-03T14:39:11Z",
    "closed_at": "2021-09-06T13:47:16Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6259",
    "body": "### [REQUIRED] Searched documentation and issues\r\nDid a search in Google and didn't find any relevant answere.\r\n\r\n### [REQUIRED] Question\r\n\r\nWe need to show video in Viewpage and whenever user switches the video we need to play it immediately. Hence currently I do prepare the video player, which is allocating decoder also and resulting in exceeding the allowed decoder count (  com.google.android.exoplayer2.mediacodec.MediaCodecRenderer$DecoderInitializationException: ).\r\n\r\nSo, can I still pre-download the video files based on the device capacity (like decoder, screen density, bandwidth, etc) and avoid decoder allocation.\r\n\r\n<!-- DO NOT DELETE\r\nvalidate_template=true\r\ntemplate_path=.github/ISSUE_TEMPLATE/question.md\r\n-->\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6259/comments",
    "author": "manishPatwari",
    "comments": [
      {
        "user": "google-oss-bot",
        "created_at": "2019-08-03T14:39:12Z",
        "body": "This issue does not seem to follow the issue template. Make sure you provide all the required information."
      },
      {
        "user": "manishPatwari",
        "created_at": "2019-08-05T19:55:44Z",
        "body": "@ojw28  Please help me with some solution."
      },
      {
        "user": "ojw28",
        "created_at": "2021-09-06T13:47:16Z",
        "body": "This is not currently supported, I'm afraid."
      }
    ]
  },
  {
    "number": 6258,
    "title": "how to show Video player notification when video is in background",
    "created_at": "2019-08-03T09:03:43Z",
    "closed_at": "2019-10-02T19:29:41Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6258",
    "body": "my video is playing in Exoplayer and when i click on home then the video is play like audio in notification. how can i do that using Exoplayer?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6258/comments",
    "author": "RavanaAbhi",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2019-08-05T13:02:51Z",
        "body": "You need to put the player inside an Android `Service` to ensure that it stays alive. When your activity goes into the background you should detach it from whatever UI component it's holding. So for example, if you're using `PlayerView`, you should call `playerView.setPlayer(null)`. When the activity comes back into the foreground, re-attach the UI component."
      }
    ]
  },
  {
    "number": 6232,
    "title": "Cached stream won't play in offline mode",
    "created_at": "2019-07-26T10:56:08Z",
    "closed_at": "2019-09-26T01:00:59Z",
    "labels": [
      "question",
      "need more info",
      "stale",
      "closed-by-bot"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6232",
    "body": "### Searched documentation and issues\r\nI have used the exoplayer demo application cache implementation with few changes of,\r\n\r\ni. Using LeastRecentlyUsedCacheEvictor\r\n\r\n`new SimpleCache(downloadContentDirectory, new LeastRecentlyUsedCacheEvictor(DEFAULT_MAX_CACHE_FILE_SIZE * 5));\r\n`\r\n\r\nii. And removed the DatabaseProvider. \r\n\r\niii. Applied CacheDataSink()\r\n\r\n                `new CacheDataSinkFactory(cache, DEFAULT_MAX_CACHE_FILE_SIZE * 5),`\r\n\r\niv. And the Modified download directory\r\n\r\n```\r\n      if (downloadDirectory == null) {\r\n            downloadDirectory = getExternalCacheDir();\r\n            if (downloadDirectory == null) {\r\n                downloadDirectory = getCacheDir();\r\n            }\r\n        }\r\n```\r\n\r\n\r\n### Questions\r\n\r\n**1. Is the expected behavior of this implementation would be like of cached stream playback would happen in offline as well Or It will only happen in online mode?** \r\n\r\n**2. If I want to make the playback of the cached stream to happen in offline as well what are the changes that I need to do?**\r\n\r\n**3. Also when I use NoOpCacheEvictor without the maxCacheSize, there are more than 10 .exo files of size 2mb are created, but when I use LeastRecentlyUsedCacheEvictor and CacheDataSinkFactory with each 10mb It creates only two .exo files with each of 5mb size are created. How can I make sure that each stream cache .exo file got created only once and entire cache won't exceed the max cache size?**\r\n\r\nApologies, I am newB to the caching implementation.\r\n\r\nThank you for the amazing work.\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6232/comments",
    "author": "srikanthsunkari",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2019-07-31T08:32:47Z",
        "body": "When you are using a CacheDataSource your app will read data from the cache in offline and online mode. The CacheDataSource is not aware of a network state. It just checks whether the data is available in the cache and reads from it when available. If no data is available loading data is delegated to the wrapped upstream datasource.\r\n\r\nSo if it works in online mode then you don't need to apply changes to support offline. "
      },
      {
        "user": "srikanthsunkari",
        "created_at": "2019-07-31T13:59:53Z",
        "body": "Thanks for the reply @marcbaechinger \r\n> When you are using a CacheDataSource your app will read data from the cache in offline and online mode. The CacheDataSource is not aware of a network state. It just checks whether the data is available in the cache and reads from it when available. If no data is available loading data is delegated to the wrapped upstream datasource.\r\n\r\nyou are absolutely right, I assumed the same, that It should also stream in offline when there is a cache available using CacheDataSource.\r\n\r\n>So if it works in online mode then you don't need to apply changes to support offline.\r\n\r\nI didn't do any specific changes to support in offline mode but I am unable to play offline mode ?"
      },
      {
        "user": "marcbaechinger",
        "created_at": "2019-09-03T10:25:18Z",
        "body": "Is this still an issue or can we close this?"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2019-09-18T01:00:55Z",
        "body": "<!-- event: mark-stale -->\nHey @srikanthsunkari. We need more information to resolve this issue but there hasn't been an update in 14 days. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2019-09-26T01:00:59Z",
        "body": "<!-- event: close-stale -->\nSince there haven't been any recent updates here, I am going to close this issue.\n\n@srikanthsunkari if you're still experiencing this problem and want to continue the discussion just leave a comment here and we are happy to re-open this."
      }
    ]
  },
  {
    "number": 6230,
    "title": "Subtitles are positioned at the centre of the screen",
    "created_at": "2019-07-26T10:17:27Z",
    "closed_at": "2019-07-26T12:34:45Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6230",
    "body": "\r\n### [REQUIRED] Searched documentation and issues\r\nGone through the TtmlDecoder.java file code in Exoplayer.\r\n\r\n### [REQUIRED] Question\r\nTTML subtitles are position at center of the screen when tested in Exoplayer. But when tested in other players like VisualOn subtitles are positioned at the bottom of the screen.\r\n \r\n### A full bug report captured from the device\r\nIn case your question refers to a problem you are seeing in your app, capture a\r\nfull bug report using \"adb bugreport\". Please attach the captured bug report as\r\na file. If you don't wish to post it publicly, please submit the issue, then\r\nemail the bug report to dev.exoplayer@gmail.com using a subject in the format\r\n\"Issue #1234\", where \"#1234\" should be replaced with your issue number.\r\n\r\n### Link to test content\r\n<styling>\r\n  <style xml:id=\"s0\" tts:fontFamily=\"proportionalSansSerif\" tts:fontSize=\"4%\" tts:textAlign=\"center\" \t=\"after\" tts:backgroundColor=\"transparent\" tts:color=\"white\" tts:textOutline=\"black 2px 0px\" />\r\n</styling>\r\n<layout>\r\n  <region xml:id=\"imageRegion\" tts:origin=\"0% 0%\" tts:extent=\"100% 100%\" >\r\n  </region>\r\n</layout>\r\n\r\n<!-- DO NOT DELETE\r\nvalidate_template=true\r\ntemplate_path=.github/ISSUE_TEMPLATE/question.md\r\n-->\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6230/comments",
    "author": "himaswetha",
    "comments": [
      {
        "user": "google-oss-bot",
        "created_at": "2019-07-26T10:17:29Z",
        "body": "This issue does not have all the information required by the template.  Looks like you forgot to fill out some sections.  Please update the issue with more information."
      },
      {
        "user": "himaswetha",
        "created_at": "2019-07-26T12:34:45Z",
        "body": "Sorry This issue is fixed with latest version of Exoplayer. Thanks,"
      }
    ]
  },
  {
    "number": 6219,
    "title": "java.net.SocketTimeoutException",
    "created_at": "2019-07-24T04:09:28Z",
    "closed_at": "2019-07-24T15:04:58Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6219",
    "body": "when I play dash files,sometimes the exoplayer case error k=like \"java.net.SocketTimeoutException\",how do i resolve this problem,thank you,the log like this:\r\n07-24 00:19:31.216 E/EventLogger(32179): com.google.android.exoplayer2.upstream.HttpDataSource$HttpDataSourceException: java.net.SocketTimeoutException\r\n07-24 00:19:31.216 E/EventLogger(32179): \tat com.google.android.exoplayer2.ext.okhttp.OkHttpDataSource.read(OkHttpDataSource.java:214)\r\n07-24 00:19:31.216 E/EventLogger(32179): \tat com.google.android.exoplayer2.extractor.DefaultExtractorInput.readFromDataSource(DefaultExtractorInput.java:257)\r\n07-24 00:19:31.216 E/EventLogger(32179): \tat com.google.android.exoplayer2.extractor.DefaultExtractorInput.read(DefaultExtractorInput.java:59)\r\n07-24 00:19:31.216 E/EventLogger(32179): \tat com.google.android.exoplayer2.extractor.DefaultTrackOutput.sampleData(DefaultTrackOutput.java:484)\r\n07-24 00:19:31.216 E/EventLogger(32179): \tat com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper$BindingTrackOutput.sampleData(ChunkExtractorWrapper.java:179)\r\n07-24 00:19:31.216 E/EventLogger(32179): \tat com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.readSample(FragmentedMp4Extractor.java:1111)\r\n07-24 00:19:31.216 E/EventLogger(32179): \tat com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.read(FragmentedMp4Extractor.java:260)\r\n07-24 00:19:31.216 E/EventLogger(32179): \tat com.google.android.exoplayer2.source.chunk.ContainerMediaChunk.load(ContainerMediaChunk.java:112)\r\n07-24 00:19:31.216 E/EventLogger(32179): \tat com.google.android.exoplayer2.upstream.Loader$LoadTask.run(Loader.java:295)\r\n07-24 00:19:31.216 E/EventLogger(32179): \tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1113)\r\n07-24 00:19:31.216 E/EventLogger(32179): \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:588)\r\n07-24 00:19:31.216 E/EventLogger(32179): \tat java.lang.Thread.run(Thread.java:818)\r\n07-24 00:19:31.216 E/EventLogger(32179): Caused by: java.net.SocketTimeoutException\r\n07-24 00:19:31.216 E/EventLogger(32179): \tat java.net.PlainSocketImpl.read(PlainSocketImpl.java:484)\r\n07-24 00:19:31.216 E/EventLogger(32179): \tat java.net.PlainSocketImpl.-wrap0(PlainSocketImpl.java)\r\n07-24 00:19:31.216 E/EventLogger(32179): \tat java.net.PlainSocketImpl$PlainSocketInputStream.read(PlainSocketImpl.java:237)\r\n07-24 00:19:31.216 E/EventLogger(32179): \tat okio.Okio$2.read(Okio.java:140)\r\n07-24 00:19:31.216 E/EventLogger(32179): \tat okio.AsyncTimeout$2.read(AsyncTimeout.java:237)\r\n07-24 00:19:31.216 E/EventLogger(32179): \tat okio.RealBufferedSource.read(RealBufferedSource.java:47)\r\n07-24 00:19:31.216 E/EventLogger(32179): \tat okhttp3.internal.http1.Http1Codec$AbstractSource.read(Http1Codec.java:363)\r\n07-24 00:19:31.216 E/EventLogger(32179): \tat okhttp3.internal.http1.Http1Codec$FixedLengthSource.read(Http1Codec.java:407)\r\n07-24 00:19:31.216 E/EventLogger(32179): \tat okio.RealBufferedSource$1.read(RealBufferedSource.java:440)\r\n07-24 00:19:31.216 E/EventLogger(32179): \tat com.google.android.exoplayer2.ext.okhttp.OkHttpDataSource.readInternal(OkHttpDataSource.java:366)\r\n07-24 00:19:31.216 E/EventLogger(32179): \tat com.google.android.exoplayer2.ext.okhttp.OkHttpDataSource.read(OkHttpDataSource.java:212)\r\n07-24 00:19:31.216 E/EventLogger(32179): \t... 11 more",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6219/comments",
    "author": "CNXiDaDa",
    "comments": [
      {
        "user": "erdemguven",
        "created_at": "2019-07-24T15:04:58Z",
        "body": "SocketTimeoutException happens when the server doesn't return data in a certain time. You need better connection with the server."
      }
    ]
  },
  {
    "number": 6206,
    "title": "Downloading media with recycle view demo using exoplayer",
    "created_at": "2019-07-19T17:22:07Z",
    "closed_at": "2019-07-22T17:14:06Z",
    "labels": [
      "question",
      "need more info"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6206",
    "body": "Please send us recycle view demo with downloading media with 2.10.3 .\r\n\r\n\r\nI am very confuse about Downloading media. how to use downloading media concept inside adapter?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6206/comments",
    "author": "Bhoomishah1990",
    "comments": [
      {
        "user": "AquilesCanta",
        "created_at": "2019-07-22T17:14:06Z",
        "body": "Sorry, you'll have to narrow down your question for us to help you, not sure whether the confusion comes from a specific part of the Download API or from RecyclerView. You might want to try your luck in Stack Overflow or a similar general Q&A site. "
      }
    ]
  },
  {
    "number": 6205,
    "title": "Change CurrentContentText",
    "created_at": "2019-07-19T13:49:30Z",
    "closed_at": "2019-09-03T10:24:10Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6205",
    "body": "Hi! is possible change contenttext dinamically in function of hour of system? I have a radio app, and I need set text in different hours, is possible? thanks\r\n\r\n<!-- DO NOT DELETE\r\nvalidate_template=true\r\ntemplate_path=.github/ISSUE_TEMPLATE/question.md\r\n-->\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6205/comments",
    "author": "aecdrianc",
    "comments": [
      {
        "user": "google-oss-bot",
        "created_at": "2019-07-19T13:49:31Z",
        "body": "This issue does not seem to follow the issue template. Make sure you provide all the required information."
      },
      {
        "user": "marcbaechinger",
        "created_at": "2019-07-22T17:15:12Z",
        "body": "You can trigger updating the notification by calling `playerNotificationManager.invalidate()`. So in the moment you want to update the notification you call invalidate and make sure that `MediaDescriptionAdapter.getCurrentContentText(Player player)` returns the string you want to have included in the notification as content text.\r\n\r\nYou need to start a timer or similar yourself to invalidate at the moment you need to.\r\n\r\n"
      },
      {
        "user": "marcbaechinger",
        "created_at": "2019-09-03T10:24:10Z",
        "body": "Closing due to inactivity."
      }
    ]
  },
  {
    "number": 6202,
    "title": "Android6.0 车机其他应用使用cpu过高时，exoplayer出现underrun卡顿",
    "created_at": "2019-07-19T08:13:29Z",
    "closed_at": "2019-07-22T16:39:33Z",
    "labels": [
      "duplicate",
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6202",
    "body": "您好，我是一名中国安卓开发者，我想知道EXOplayer频繁出现卡顿 underrun，如何解决？可能跟其他应用占有cpu使用率过高导致。希望您能帮助我。非常感谢\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6202/comments",
    "author": "Programmer-Jared",
    "comments": [
      {
        "user": "AquilesCanta",
        "created_at": "2019-07-22T16:39:33Z",
        "body": "Duplicate of #6193."
      }
    ]
  },
  {
    "number": 6193,
    "title": "How to solve music catton problem when underruns appear in playing audio",
    "created_at": "2019-07-17T08:06:26Z",
    "closed_at": "2019-08-14T01:00:53Z",
    "labels": [
      "question",
      "need more info",
      "stale",
      "closed-by-bot"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6193",
    "body": "When I used exoplayer to play url, in m4a format, on a low-end device, and when other applications were using too much CPU, underrun appeared on my app player. How do I avoid underun? I tried to enlarge the buffer size, but I felt that this was not the root of the problem. I hope you can help me as soon as possible. thank you Otherwise, I would abandon exoplayer and use Mediaplayer. Very urgent. Please help me.\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6193/comments",
    "author": "Programmer-Jared",
    "comments": [
      {
        "user": "AquilesCanta",
        "created_at": "2019-07-22T16:45:22Z",
        "body": "Could you please provide:\r\n- Sample content that reproduces the issue.\r\n- A bugreport captured shortly after reproducing the issue.\r\n- A precise description of the steps you take to reproduce the issue.\r\n\r\nThanks!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2019-08-06T01:00:53Z",
        "body": "<!-- event: mark-stale -->\nHey @chendongxu2016. We need more information to resolve this issue but there hasn't been an update in 14 days. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2019-08-14T01:00:52Z",
        "body": "<!-- event: close-stale -->\nSince there haven't been any recent updates here, I am going to close this issue.\n\n@chendongxu2016 if you're still experiencing this problem and want to continue the discussion just leave a comment here and we are happy to re-open this."
      }
    ]
  },
  {
    "number": 6175,
    "title": "Load all Clipping MediaSource parts",
    "created_at": "2019-07-12T07:37:41Z",
    "closed_at": "2019-11-13T11:38:18Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6175",
    "body": "Good day. I have a URL with mp4 video. I cut it using the ClippingMediaSource, how can I load all the parts at once, so that at any moment of the switch not to wait for buffering?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6175/comments",
    "author": "BelousAlex",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2019-10-11T13:26:26Z",
        "body": "Sorry for the delay responding to this. I'm not sure I quite follow what you're doing. Are you then adding the `ClippingMediaSource` instances to a `ConcatenatingMediaSource`? If so, the player should start to per-buffer the next item before the current one ends.\r\n\r\nPlease clarify your use case and provide more concrete information. Thanks!"
      },
      {
        "user": "ojw28",
        "created_at": "2019-11-13T11:38:18Z",
        "body": "Closing due to lack of follow up."
      }
    ]
  },
  {
    "number": 6174,
    "title": "How to dynamically add bytes data to Exoplayer MediaSource to continue playing downloaded bytes seamlessly",
    "created_at": "2019-07-12T07:03:14Z",
    "closed_at": "2019-09-14T21:07:53Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6174",
    "body": "### [REQUIRED] Searched documentation and issues\r\nSearched on stackoverflow.com and GitHub for Exoplayer repository. But I did not get the correct solution.\r\n\r\n### [REQUIRED] Question\r\nHow to dynamically add media chunks to Exoplayers MediaSource to continue playing the downloaded chunks seamlessly?\r\n\r\nI would like  to know if there is any way to load streaming bytes of a large video file ( small chunk of data) into Exo-Player as it downloads. I am downloading the large video file from an external server using our middle ware. I don't want to wait for the complete video to download and load the media data for playback.\r\nWould help a lot if you have any ideas and suggestions or even point me in the right direction.\r\nThanks in advance.\r\n\r\n### A full bug report captured from the device\r\nNA\r\n\r\n### Link to test content\r\nContent can be any format (mostly HEVC, MP4 etc) that is being streamed by a STB box.\r\n\r\n<!-- DO NOT DELETE\r\nvalidate_template=true\r\ntemplate_path=.github/ISSUE_TEMPLATE/question.md\r\n-->\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6174/comments",
    "author": "arasan81",
    "comments": [
      {
        "user": "arasan81",
        "created_at": "2019-07-12T07:22:21Z",
        "body": "Please check the format now."
      },
      {
        "user": "arasan81",
        "created_at": "2019-08-05T06:34:31Z",
        "body": "Hi @ojw28 ,\r\nAny update for this query?\r\n"
      },
      {
        "user": "ojw28",
        "created_at": "2019-08-05T09:31:50Z",
        "body": "ExoPlayer supports streaming playbacks by default. In other words, if you provide a URL to ExoPlayer, it'll start playback having only downloaded a small portion of the media and then request data as it's needed from the server.\r\n\r\nIf you want to implement something similar but where data is requested from a non-standard source (i.e. from your middleware rather than over HTTP), then you'll need to implement your own custom `DataSource` that knows how to load data from your middleware, and inject that into the player. There are lots of example `DataSource` implementations in the library, so taking a look at those should be sufficient to help you get started."
      }
    ]
  },
  {
    "number": 6173,
    "title": "Real-time preview of video frames, drop the B frame before decode.",
    "created_at": "2019-07-12T03:00:20Z",
    "closed_at": "2019-07-14T19:01:54Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6173",
    "body": "### [REQUIRED] Question\r\nI want to optimize the seek operation to real-time preview the video frame on the seekbar.\r\nNow in the MetadataQueue, there is a flag(`BUFFER_FLAG_KEY_FRAME`) indicates the video packet is or not KEY_FRAME, I want to know the video packet whether is the B frame.\r\nSo I can drop the B frame before decode. \r\n\r\n<!-- DO NOT DELETE\r\nvalidate_template=true\r\ntemplate_path=.github/ISSUE_TEMPLATE/question.md\r\n-->\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6173/comments",
    "author": "Romantic-LiXuefeng",
    "comments": [
      {
        "user": "google-oss-bot",
        "created_at": "2019-07-12T03:00:22Z",
        "body": "This issue does not seem to follow the issue template. Make sure you provide all the required information."
      },
      {
        "user": "ojw28",
        "created_at": "2019-07-14T19:01:54Z",
        "body": "This is not a feature we support, sorry."
      }
    ]
  },
  {
    "number": 6171,
    "title": "Audio Playback seems to give me 1 frame at a time. Is there a way to get more?",
    "created_at": "2019-07-11T17:05:42Z",
    "closed_at": "2019-07-14T19:03:30Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6171",
    "body": "We are using custom audio processor to decode an mkv with 8 audio tracks. The queueInput method is called with samples. \r\n\r\nDespite the fact that load control is set to:\r\n\tloadControlBuilder.setBufferDurationsMs(DefaultLoadControl.DEFAULT_MIN_BUFFER_MS*3,\r\n\t\t\t\tDefaultLoadControl.DEFAULT_MAX_BUFFER_MS*3,\r\n\t\t\t\tDefaultLoadControl.DEFAULT_BUFFER_FOR_PLAYBACK_MS*3,\r\n\t\t\t   DefaultLoadControl.DEFAULT_BUFFER_FOR_PLAYBACK_AFTER_REBUFFER_MS*3);\r\n\r\nwe receive audio frame by frame. Is there a way to change that?\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6171/comments",
    "author": "ericatfelix",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2019-07-14T19:03:30Z",
        "body": "The buffer parameters that you refer to only affect the _total_ size of the buffer, not the granularity of the samples within it. There's no support in the library for changing the latter, sorry."
      }
    ]
  },
  {
    "number": 6164,
    "title": "RTMP extension dependency: Dependent libraries not downloaded?",
    "created_at": "2019-07-11T03:01:03Z",
    "closed_at": "2019-07-14T14:20:11Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6164",
    "body": "依赖了 implementation 'com.google.android.exoplayer:extension-rtmp:2.9.6'\r\n但是没有自动下载 rtmp的依赖库。\r\n请问如何解决",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6164/comments",
    "author": "guodongAndroid",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2019-07-11T18:03:51Z",
        "body": "This should just work (i.e. gradle should be pulling the dependent libraries in automatically). Please could you be more specific about what error you're seeing?"
      },
      {
        "user": "guodongAndroid",
        "created_at": "2019-07-12T01:31:44Z",
        "body": "The program can be compiled normally without errors.\r\nThe following method solved my problem.\r\n```groovy\r\nimplementation('com.google.android.exoplayer:extension-rtmp:2.9.6') {\r\n    exclude group: 'net.butterflytv.utils', module: 'rtmp-client'\r\n}\r\nimplementation 'net.butterflytv.utils:rtmp-client:3.0.1'\r\n```\r\n\r\ngradle plugin version:\r\n``` groovy\r\nclasspath 'com.android.tools.build:gradle:3.4.2'\r\n```\r\n\r\nkotlin-gradle-plugin version:\r\n```groovy\r\nclasspath \"org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.31\"\r\n```"
      }
    ]
  },
  {
    "number": 6147,
    "title": "Is there a single API which provides information like this \"HEVC 1080p 24fps 10Mbps\"?",
    "created_at": "2019-07-09T07:14:00Z",
    "closed_at": "2019-07-09T07:25:46Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6147",
    "body": "**Searched**\r\nI searched something like DebugTextViewHelper, bitrate information getting by passing BandwidthMeter. However, it is quite bothered to embed a text view for below-mentioned parameters as a beginner. So, I hope I could find a single tool to show information the way like DebugTextViewHelper.\r\n\r\n**Question**\r\nIs there a single API which provides information (encodec, resolution, fps, bitrate) like this \"HEVC 1080p 24fps 10Mbps\" on a textview during the stream playing?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6147/comments",
    "author": "wsw2435",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2019-07-09T07:25:46Z",
        "body": "This is something you'd need to build yourself."
      }
    ]
  },
  {
    "number": 6145,
    "title": "Is there a single API which provides information like this \"HEVC 1080p 24fps 10Mbps\"",
    "created_at": "2019-07-09T04:06:34Z",
    "closed_at": "2019-07-09T07:12:19Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6145",
    "body": "### [REQUIRED] Searched documentation and issues\r\nI searched something like DebugTextViewHelper, bitrate information getting by passing BandwidthMeter. However, it is quite bothered to embed a text view for below-mentioned parameters. So, I hope I could find a single tool to shows information like DebugTextViewHelper.\r\n\r\n### [REQUIRED] Question\r\nIs there a single API which provides information (encodec, resolution, fps, bitrate) like this \"HEVC 1080p 24fps 10Mbps\" on a textview during the stream playing?\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6145/comments",
    "author": "wsw2435",
    "comments": [
      {
        "user": "google-oss-bot",
        "created_at": "2019-07-09T04:06:35Z",
        "body": "This issue does not seem to follow the issue template. Make sure you provide all the required information."
      }
    ]
  },
  {
    "number": 6143,
    "title": "Correct order of tracks related events",
    "created_at": "2019-07-08T19:25:10Z",
    "closed_at": "2019-07-09T11:00:28Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6143",
    "body": "### [REQUIRED] Searched documentation and issues\r\nSource code + Issues \r\n\r\n### [REQUIRED] Question\r\nIs there any possible scenario where onDownstreamFormatChanged() triggered before onTracksChanged() ? We are using exo 2.4.1 and we have some wrappers around this events. Also we kind of \"rely\" on the order this events dispatched (first onTracksChanged then onDownstreamFormatChanged)\r\nJust want to know if on your side onDownstreamFormatChanged will always be called after onTracksChanged\r\n### A full bug report captured from the device\r\nNo\r\n\r\n### Link to test content\r\nI do not believe that it is content related.\r\n\r\n<!-- DO NOT DELETE\r\nvalidate_template=true\r\ntemplate_path=.github/ISSUE_TEMPLATE/question.md\r\n-->\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6143/comments",
    "author": "AfanasievAnton",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2019-07-09T08:08:26Z",
        "body": "Yes, that is guaranteed for the start of the playback. \r\n\r\nNote that further onTracksChanged and onDownstreamFormatChanged events can happen independently and in any order."
      }
    ]
  },
  {
    "number": 6118,
    "title": "Audio focus is permanently lost",
    "created_at": "2019-07-02T07:26:48Z",
    "closed_at": "2019-07-31T18:34:31Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6118",
    "body": "### [REQUIRED] Use case description\r\nI need a player that plays the video silently, it never holds the audio focus, just plays the video without sound.\r\n\r\n<!-- DO NOT DELETE\r\nvalidate_template=true\r\ntemplate_path=.github/ISSUE_TEMPLATE/feature_request.md\r\n-->\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6118/comments",
    "author": "Tumbler0809",
    "comments": [
      {
        "user": "google-oss-bot",
        "created_at": "2019-07-02T07:26:48Z",
        "body": "This issue does not seem to follow the issue template. Make sure you provide all the required information."
      },
      {
        "user": "tonihei",
        "created_at": "2019-07-02T08:12:28Z",
        "body": "The audio focus is not requested unless you explicitly use `SimpleExoPlayer.setAudioAttributed` to set the audio attributes. Could that be the problem? If not, please describe the question in more details following the issue template."
      },
      {
        "user": "Tumbler0809",
        "created_at": "2019-07-09T09:42:37Z",
        "body": "The SimpleExoPlayer.setAudioAttributed method is not called\r\n\r\nAudioManager.isMusicActive() returns true when playing a mute video，I want it to return false，Because I don't use audio resources. I just want to play a video screen.\r\n\r\n"
      },
      {
        "user": "tonihei",
        "created_at": "2019-07-09T09:55:10Z",
        "body": "This means that either something else in the system is playing audio, or the video actually contains  audio data and ExoPlayer is playing it.\r\n\r\nIf your video contains audio data and you just set the volume to zero, it would be better to turn off audio completely. There are two ways to do this:\r\n1. [preferred] Remove the audio renderers by overriding `DefaultRenderersFactory.buildAudioRenderers` with an empty method.\r\n2. Or disable audio tracks with `DefaultTrackSelector.ParametersBuilder.setRendererDisabled` using the audio renderer index."
      },
      {
        "user": "Tumbler0809",
        "created_at": "2019-07-09T10:00:52Z",
        "body": "yes,the video actually contains audio data and ExoPlayer is playing it,I will try the method you provided, thank you"
      }
    ]
  },
  {
    "number": 6115,
    "title": "How force use IOMX on Android 4.4 (how use flint in turbo jet engine)",
    "created_at": "2019-07-01T12:55:40Z",
    "closed_at": "2019-07-01T15:18:21Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6115",
    "body": "I want try to use IOMX instead MediaCodec. Its possible?\r\nMy device is android 4.4 amlogic cpu stb.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6115/comments",
    "author": "nshutov",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2019-07-01T13:04:02Z",
        "body": "As you're probably aware, ExoPlayer's core library uses the public Java `MediaCodec` API rather than interfacing with OMX directly.\r\n\r\nIf you want to integrate with a different API (e.g., via the NDK) you can try to do that via a custom renderer implementation, but I'm afraid we don't have resources to provide support on that. Out of interest, what use case requires direct integration with OMX?"
      },
      {
        "user": "nshutov",
        "created_at": "2019-07-01T15:18:21Z",
        "body": ">Out of interest, what use case requires direct integration with OMX?\r\n\r\nNo real use case, just experiment\r\n\r\nThanks for answer"
      }
    ]
  },
  {
    "number": 6104,
    "title": "HLS support for OPUS",
    "created_at": "2019-06-28T01:14:18Z",
    "closed_at": "2019-06-28T08:40:57Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6104",
    "body": "### [REQUIRED] Use case description\r\nMusic streaming platform which supports adaptive bitrate streaming for poor network condition. While Opus performs exceptionally well at low bitrates, Opus inside HLS is not really a standardized payload\r\n\r\n### Proposed solution\r\nI don't have any\r\n\r\n### Alternatives considered\r\n.m4a format works well for us at > 128k, but at 64k (which is our target) it performs poorly when compared to opus. I believe there was a time when SoundCloud replace their legacy 128k mp3 which 64k opus (for streaming) which prove that this is 100% possible\r\n\r\n<!-- DO NOT DELETE\r\nvalidate_template=true\r\ntemplate_path=.github/ISSUE_TEMPLATE/feature_request.md\r\n-->\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6104/comments",
    "author": "nlgtuankiet",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2019-06-28T08:40:57Z",
        "body": "We don't have any plans (or see any particular demand) for this. This will likely remain true for as long as it's not part of the HLS specification. We support Opus carried in DASH adaptive streams, which may be a satisfactory alternative for you."
      }
    ]
  },
  {
    "number": 6098,
    "title": "How to measure HLS live stream latency",
    "created_at": "2019-06-27T04:20:50Z",
    "closed_at": "2019-06-27T06:39:10Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6098",
    "body": "Hello,\r\nI'm working on a live stream application with Exoplayer v2.9.5. I need to calculate LiveStream Latency by System.currentTimeMillis() - the value of #EXT-X-PROGRAM-DATE-TIME tag in HlsMediaPlaylist. I had HlsMediaPlaylist but I can't get the value of #EXT-X-PROGRAM-DATE-TIME tag. Ex: 2010-02-19T14:54:23.031+08:00. Please tell me how to get the value of #EXT-X-PROGRAM-DATE-TIME tag by Exo library.\r\n\r\n<!-- DO NOT DELETE\r\nvalidate_template=true\r\ntemplate_path=.github/ISSUE_TEMPLATE/question.md\r\n-->\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6098/comments",
    "author": "minhbnt-1512",
    "comments": [
      {
        "user": "google-oss-bot",
        "created_at": "2019-06-27T04:20:51Z",
        "body": "This issue does not seem to follow the issue template. Make sure you provide all the required information."
      }
    ]
  },
  {
    "number": 6092,
    "title": "Is there a way to preload new mediasource without ConcatenatingMediaSource?",
    "created_at": "2019-06-26T06:54:49Z",
    "closed_at": "2019-07-19T01:00:57Z",
    "labels": [
      "question",
      "need more info",
      "stale",
      "closed-by-bot"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6092",
    "body": "### [REQUIRED] Searched documentation and issues\r\nI'm already using `ConcatenatingMediaSource`\r\n\r\n### [REQUIRED] Question\r\nI want to preload new MediaSource without `ConcatenatingMediaSource`,\r\nthere is no callback for completion of current `MediaSource`.\r\n`onPositionDiscontinuity` only works when next `MediaSource` starts.\r\n\r\n1. Can I get a callback when the current video ends?\r\n2. If not, Is there a way to preload new MediaSource without ConcatenatingMediaSource?\r\n\r\n<!-- DO NOT DELETE\r\nvalidate_template=true\r\ntemplate_path=.github/ISSUE_TEMPLATE/question.md\r\n-->\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6092/comments",
    "author": "mansurrrr",
    "comments": [
      {
        "user": "google-oss-bot",
        "created_at": "2019-06-26T06:54:50Z",
        "body": "This issue does not seem to follow the issue template. Make sure you provide all the required information."
      },
      {
        "user": "jakoss",
        "created_at": "2019-06-26T09:00:54Z",
        "body": "As of 1 point - you can listen to `onPlayerStateChanged(boolean playWhenReady, int playbackState)` if `playbackState == STATE_ENDED`.\r\n\r\nAs of 2 - i think you could just create second player and start buffering in it, but i never tried this."
      },
      {
        "user": "tonihei",
        "created_at": "2019-06-26T09:10:15Z",
        "body": "Can you explain what you are trying to achieve exactly? What is it that prevents you from using ConcatenatingMediaSource? That might help to better understand what this is about and what alternatives ways there could be.\r\n\r\nIn case your goal is to pause the current video at the end without automatically continuing to the next video, this is a duplicate of #5660."
      },
      {
        "user": "google-oss-bot",
        "created_at": "2019-07-11T01:00:51Z",
        "body": "<!-- event: mark-stale -->\nHey @mansurrrr. We need more information to resolve this issue but there hasn't been an update in 14 days. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2019-07-19T01:00:56Z",
        "body": "<!-- event: close-stale -->\nSince there haven't been any recent updates here, I am going to close this issue.\n\n@mansurrrr if you're still experiencing this problem and want to continue the discussion just leave a comment here and we are happy to re-open this."
      }
    ]
  },
  {
    "number": 6089,
    "title": "Disable log: \"video render this buffer\"",
    "created_at": "2019-06-25T01:36:09Z",
    "closed_at": "2019-09-03T08:36:54Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6089",
    "body": "Is it possible to disable the message that constantly appears in logcat?\r\n\r\n\"I / ACodec: video render this buffer -1213007312 ok\"",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6089/comments",
    "author": "GerlanStanley",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2019-06-25T07:44:03Z",
        "body": "I don't think this log statement comes from ExoPlayer. ACodec seems to be a part of the media framework of Android. There is not much you can do on ExoPlayer side to avoid this statement."
      },
      {
        "user": "marcbaechinger",
        "created_at": "2019-09-03T08:36:54Z",
        "body": "Closing due to inactivity."
      }
    ]
  },
  {
    "number": 6059,
    "title": "DRM error on Client side AD inserted Widevine protected DASH VOD stream ",
    "created_at": "2019-06-18T19:20:11Z",
    "closed_at": "2019-06-19T02:03:22Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6059",
    "body": "Our player uses BuyDRM as a DRM service provider. \r\nDRM server requires the player to send the certain token to fetch DRM license. Token has a TTL = 500 sec which is controlled by the DRM service provider as well.\r\nGiven: A player Playing AdsMediaSource (Stream which has pre-roll, mid-roll, post-roll)\r\nDuring the transition from AdBreak to the actual content ExoPlayer acquires the license.\r\nMy MediaDrmCallback instance gets invoked and there are two ways to go:\r\n\r\n1. Try to re-fetch the license key from the server. Likely gets filed since TTL of the token is expired and the server cannot provide the LicenseKey;\r\n2. Cache the old key. Which throws an exception MediaDrm$MediaDrmStateException: Failed to handle key response: General DRM error. \r\n\r\nWhat is the correct behavior would be in this case from the Player perspective?\r\n\r\nSteps to reproduce. \r\nGiven:\r\n1. Widevine protected Dash stream. \r\n2. Wrap it with AdsMediaSource which will have pre-roll, mid-roll, post-roll;\r\nWhen:\r\nPlay content, wait for ads, wait for the transition from Ads to Content. \r\nThen:\r\nExoPlayer calls MediaDrmCallback to refetch the key.\r\n\r\nWhat is the right behavior or implementation would be on the player side? \r\n\r\n<!-- DO NOT DELETE\r\nvalidate_template=true\r\ntemplate_path=.github/ISSUE_TEMPLATE/bug.md\r\n-->\r\n\r\n\r\n<!-- DO NOT DELETE\r\nvalidate_template=true\r\ntemplate_path=.github/ISSUE_TEMPLATE/question.md\r\n-->\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6059/comments",
    "author": "bkodirov",
    "comments": [
      {
        "user": "google-oss-bot",
        "created_at": "2019-06-18T19:20:20Z",
        "body": "This issue does not seem to follow the issue template. Make sure you provide all the required information."
      },
      {
        "user": "bkodirov",
        "created_at": "2019-06-19T02:03:34Z",
        "body": "Implementation issue"
      }
    ]
  },
  {
    "number": 6057,
    "title": "Getting informed about user actions",
    "created_at": "2019-06-18T12:58:46Z",
    "closed_at": "2019-06-18T18:45:03Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6057",
    "body": "### Searched documentation and issues\r\nOfficial ExoPlayer documentation and source code of `MediaControllerCompat`, `MediaSessionConnector`, `MediaSession` classes.\r\n\r\n### Question\r\nIs it possible to get notified about user actions? I'm using `ExoPlayer` and `MediaSessionConnector` for handling MediaSession, so I'm not able to register `MediaSession.Callback`, that would have solved my problem, because it can be registered only once and it is done inside of `MediaSessionConnector` class.\r\n\r\nI would like to be informed about user actions like \"PLAY\", \"PAUSE\", \"SKIP TO NEXT\", \"SKIP TO PREVIOUS\" etc. The only way to do it, I have found, is to register `MediaControllerCompat.Callback`, that has `onPlaybackStateChanged` method. The problem is that after testing it, I have found that only states that are dispatched to this method are `STATE_NONE`, `STATE_PAUSED`, `STATE_PLAYING` and `STATE_BUFFERING`. There are other states like `STATE_SKIPPING_TO_PREVIOUS`, `STATE_SKIPPING_TO_NEXT` I would like to be notified about, but it never happens. \r\n\r\n<!-- DO NOT DELETE\r\nvalidate_template=true\r\ntemplate_path=.github/ISSUE_TEMPLATE/question.md\r\n-->\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6057/comments",
    "author": "Kamil-H",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2019-06-18T15:10:48Z",
        "body": "Do you need to be aware of skip to next/previous in the app which has access to the `SimpleExoPlayer` instance or does it need to be reported to external client via `MediaControllerCompat.Callback`? From your comment above I understand it's the app (because the `MediaSession.Callback` would help which is in the app).\r\n\r\nIf it's the app, you can \r\n\r\n1) add a listener by using `player.addListener(EventListener)`. When the player transitions from one item to the next, the `onPositionDiscontinuity(int reason)` is called with `reason==DISCONTINUITY_REASON_PERIOD_TRANSITION`. This will be called if the user does skip as well as when playback automatically transitions to the next period in the timeline. In the callback method you can use `player.getCurrentWindowIndex()` to check whats the new item.\r\n\r\n2) Another option is just provide your own ControlDispatcher with connector.setControlDispatcher() and intercept dispatchSeekTo() calls.\r\n\r\nIf you need to know about this in a `MediaControllerCompat.Callback`, you are right that the `STATE_SKIPPING_TO_PREVIOUS, STATE_SKIPPING_TO_NEXT` states are not published by the connector. \r\n\r\nI see two options:\r\n\r\n1) If you are using a `TimelineQueueNavigator` the `PlaybackStateCompat` has a method `getActiveQueueItemId()` which returns the current window index.\r\n\r\n2) If the active item changes `MediaControllerCompat.Callback.onMetadataChanged(MediaMetadataCompat metadata)` is called with a new metadata object when the player transitions to the next or previous item.\r\n\r\nLet me know if one of these options help."
      },
      {
        "user": "Kamil-H",
        "created_at": "2019-06-18T17:02:07Z",
        "body": "Thank you @marcbaechinger for quick replay. \r\nI need this data for statistics purpose. I would like to get to know how users use my app and eventually improve some part of content/app.\r\nTo be more specific, I'm using ExoPlayer in `MediaBrowserServiceCompat`, I have access to both `ExoPlayer` and `MediaControllerCompat.Callback`.\r\nCurrently I'm using something you also mentioned: `MediaControllerCompat.Callback.onMetadataChanged` to detect that media item has been changed and it works pretty well. Unfortunately I don't see an option to distinguish skipping by user and the fact that one media has been finished and another started playing and this is something crucial in my case."
      },
      {
        "user": "marcbaechinger",
        "created_at": "2019-06-18T18:17:17Z",
        "body": "I think in this case it's best to register an `EventListener` with `player.addListener(eventListener)`.\r\n\r\nThe player will call `onPositionDiscontinuity(int reason)` and pass a reason. If it's a seek by the user (skip is a seek) the reason is `Player.DISCONTINUITY_REASON_SEEK`. If playback transitioned automatically the reason is `Player.DISCONTINUITY_REASON_PERIOD_TRANSITION`.\r\n\r\nYou may also want to look into `AnalyticsListener` if you want to collect other events. You can add it by using `SimpleExoPlayer.addAnalyticsListener(AnalyticsListener)`."
      },
      {
        "user": "Kamil-H",
        "created_at": "2019-06-18T18:38:40Z",
        "body": "I was able to play with `onPositionDiscontinuity(int reason)` a little bit and it seem like it will solve my problem. \r\nThank you!  "
      },
      {
        "user": "marcbaechinger",
        "created_at": "2019-06-18T18:45:03Z",
        "body": "Great to hear. I'm closing this issue. Please re-open if needed."
      }
    ]
  },
  {
    "number": 6050,
    "title": "Multi-Period Dash MPD with alternating video codecs (avc3, avc1)",
    "created_at": "2019-06-17T16:36:32Z",
    "closed_at": "2019-07-11T01:00:52Z",
    "labels": [
      "question",
      "need more info",
      "stale",
      "closed-by-bot"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6050",
    "body": "Does ExoPlayer support live multi-period DASH manifests with alternating video codecs?\r\n\r\nSpecifically, the first period is avc3, second is avc1, and so on.\r\n\r\nOur live stream breaks at the period boundaries, and we are trying to determine if the breakage is due to the changing video codecs.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6050/comments",
    "author": "hyunsang123",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2019-06-18T07:48:35Z",
        "body": "This should work AFAIK. \r\nCan you provide us with a test stream so we can reproduce?"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2019-07-03T01:00:55Z",
        "body": "<!-- event: mark-stale -->\nHey @hyunsang123. We need more information to resolve this issue but there hasn't been an update in 14 days. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2019-07-11T01:00:52Z",
        "body": "<!-- event: close-stale -->\nSince there haven't been any recent updates here, I am going to close this issue.\n\n@hyunsang123 if you're still experiencing this problem and want to continue the discussion just leave a comment here and we are happy to re-open this."
      }
    ]
  },
  {
    "number": 6048,
    "title": "Play video and audio from different urls",
    "created_at": "2019-06-17T13:31:20Z",
    "closed_at": "2019-06-17T14:16:05Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6048",
    "body": "found an answer",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6048/comments",
    "author": "Sosh671",
    "comments": [
      {
        "user": "google-oss-bot",
        "created_at": "2019-06-17T13:31:22Z",
        "body": "This issue does not have all the information required by the template.  Looks like you forgot to fill out some sections.  Please update the issue with more information."
      }
    ]
  },
  {
    "number": 6044,
    "title": "i got this error when merge video source and subtitle",
    "created_at": "2019-06-17T06:18:57Z",
    "closed_at": "2019-07-11T01:00:53Z",
    "labels": [
      "question",
      "need more info",
      "stale",
      "closed-by-bot"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6044",
    "body": "```\r\ncom.google.android.exoplayer2.source.UnrecognizedInputFormatException: None of the available extractors (MatroskaExtractor, FragmentedMp4Extractor, Mp4Extractor, Mp3Extractor, AdtsExtractor, Ac3Extractor, TsExtractor, FlvExtractor, OggExtractor, PsExtractor, WavExtractor) could read the stream.\r\n        at com.google.android.exoplayer2.source.ExtractorMediaPeriod$ExtractorHolder.selectExtractor(ExtractorMediaPeriod.java:924)\r\n        at com.google.android.exoplayer2.source.ExtractorMediaPeriod$ExtractingLoadable.load(ExtractorMediaPeriod.java:846)\r\n        at com.google.android.exoplayer2.upstream.Loader$LoadTask.run(Loader.java:308)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)\r\n        at java.lang.Thread.run(Thread.java:764)\r\n```",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6044/comments",
    "author": "ardinh",
    "comments": [
      {
        "user": "google-oss-bot",
        "created_at": "2019-06-17T06:18:58Z",
        "body": "This issue does not have all the information required by the template.  Looks like you forgot to fill out some sections.  Please update the issue with more information."
      },
      {
        "user": "ardinh",
        "created_at": "2019-06-17T06:20:59Z",
        "body": "```\r\nprivate void buildMediaSource(Uri mUri, Uri srtUri) {\r\n        // Measures bandwidth during playback. Can be null if not required.\r\n        DefaultBandwidthMeter bandwidthMeter = new DefaultBandwidthMeter();\r\n        // Produces DataSource instances through which media data is loaded.\r\n        DataSource.Factory dataSourceFactory = new DefaultDataSourceFactory(this,\r\n                Util.getUserAgent(this, getString(R.string.app_name)), bandwidthMeter);\r\n        // This is the MediaSource representing the media to be played.\r\n        MediaSource videoSource = new ExtractorMediaSource.Factory(dataSourceFactory)\r\n                .createMediaSource(mUri);\r\n\r\n        //prepare subtitle\r\n        Format subtitleFormat = Format.createTextSampleFormat(null, MimeTypes.TEXT_VTT, null, Format.NO_VALUE, Format.NO_VALUE, \"en\", null, Format.OFFSET_SAMPLE_RELATIVE);\r\n\r\n        MediaSource subtitleSource =new SingleSampleMediaSource(srtUri, dataSourceFactory, subtitleFormat, C.TIME_UNSET);\r\n\r\n        MergingMediaSource mergedSource = new MergingMediaSource(videoSource, subtitleSource);\r\n        // Prepare the player with the source.\r\n        player.prepare(mergedSource);\r\n        player.setPlayWhenReady(true);\r\n        player.addListener(this);\r\n    }\r\n```\r\nand here the code"
      },
      {
        "user": "marcbaechinger",
        "created_at": "2019-06-17T10:30:29Z",
        "body": "Your code looks ok at a first sight. Seems like the `ProgressiveMediaSource` does not find an extractor for the given media file though. \r\n\r\nCan you provide uris to the media and subtitle files? If you don't wish to post it publicly, please submit the issue, then email the the uris to dev.exoplayer@gmail.com using a subject in the format \"Issue #6044\"."
      },
      {
        "user": "ardinh",
        "created_at": "2019-06-18T03:06:52Z",
        "body": "ok thanks"
      },
      {
        "user": "ardinh",
        "created_at": "2019-06-18T03:07:42Z",
        "body": "but now i have new error when read the subtitle file\r\n\r\n com.google.android.exoplayer2.ParserException: org.xmlpull.v1.XmlPullParserException: Unexpected token (position:TEXT \r\n    \r\n    00:00:00.020 -...@4783:28 in java.io.InputStreamReader@4c109b6) \r\n        at com.google.android.exoplayer2.source.dash.manifest.DashManifestParser.parse(DashManifestParser.java:105)\r\n        at com.google.android.exoplayer2.source.dash.manifest.DashManifestParser.parse(DashManifestParser.java:58)\r\n        at com.google.android.exoplayer2.upstream.ParsingLoadable.load(ParsingLoadable.java:158)\r\n        at com.google.android.exoplayer2.upstream.Loader$LoadTask.run(Loader.java:379)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)\r\n        at java.lang.Thread.run(Thread.java:764)\r\n     Caused by: org.xmlpull.v1.XmlPullParserException: Unexpected token (position:TEXT \r\n    \r\n    00:00:00.020 -...@4783:28 in java.io.InputStreamReader@4c109b6) \r\n        at org.kxml2.io.KXmlParser.next(KXmlParser.java:440)\r\n        at org.kxml2.io.KXmlParser.next(KXmlParser.java:321)\r\n        at com.google.android.exoplayer2.source.dash.manifest.DashManifestParser.parse(DashManifestParser.java:98)"
      },
      {
        "user": "marcbaechinger",
        "created_at": "2019-06-18T08:35:51Z",
        "body": "Seems like the XML parser does not like your XML of the DASH manifest. Are you sure it's DASH and that the manifest is valid and well-formed XML?\r\n\r\nAs mentioned above you can send me uris to the media/subtitle in case you want me to look into this more closely. "
      },
      {
        "user": "ojw28",
        "created_at": "2019-06-18T10:07:40Z",
        "body": "Note: It's unclear how or why `DashManifestParser` is involved, because the code snippet above isn't using `DashMediaSource`."
      },
      {
        "user": "google-oss-bot",
        "created_at": "2019-07-03T01:00:56Z",
        "body": "<!-- event: mark-stale -->\nHey @ardinh. We need more information to resolve this issue but there hasn't been an update in 14 days. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "google-oss-bot",
        "created_at": "2019-07-11T01:00:53Z",
        "body": "<!-- event: close-stale -->\nSince there haven't been any recent updates here, I am going to close this issue.\n\n@ardinh if you're still experiencing this problem and want to continue the discussion just leave a comment here and we are happy to re-open this."
      }
    ]
  },
  {
    "number": 6028,
    "title": "Does Exoplayer work out the best hardware supported stream?",
    "created_at": "2019-06-13T15:57:55Z",
    "closed_at": "2019-07-03T16:14:17Z",
    "labels": [
      "question",
      "documentation candidate"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6028",
    "body": "Hi,\r\n\r\nI'm using an external plugin for a Unity project (AvPro) and we're using HLS streaming to play 360 video. The stream contains a 4k version, 1080p version, etc.\r\n\r\nProbably a bit of a beginner question but on older devices that can't decode 4k video, does the exoplayer manage to exclude that quality of stream from being used and revert instead to a lower quality version? Finding it difficult to find anything that determines if we have to manage that in any fashion?\r\n\r\nThanks,",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6028/comments",
    "author": "LukasRoper",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2019-06-14T16:01:21Z",
        "body": "Yes, that's handled automatically. If you are using HLS (or any other adaptive streaming format), the player selects the quality based on device capabilities and measured network speed (if applicable)."
      },
      {
        "user": "tonihei",
        "created_at": "2019-07-03T16:14:17Z",
        "body": "Closing because the question was probably answered."
      }
    ]
  },
  {
    "number": 6027,
    "title": "Mixing content from two stream urls",
    "created_at": "2019-06-13T12:30:20Z",
    "closed_at": "2019-06-21T17:55:10Z",
    "labels": [
      "question",
      "need more info"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6027",
    "body": "### Content description\r\nI have two dash streams with different languages. I am using MergingMediaSource for these two DashMediaSource. ExoPlayer provides me two languages and many video resolutions. Lets say, ExoPlayer will start with language A, I will change language to B, but ExoPlayer is still streaming video from A stream and audio from B stream.\r\n\r\n### Link to test content\r\nSent to email\r\n\r\n### Version of ExoPlayer being used\r\n2.9.6\r\n\r\n### Device(s) and version(s) of Android being used\r\n5.0 - 9.0\r\n\r\n<!-- DO NOT DELETE\r\nvalidate_template=true\r\ntemplate_path=.github/ISSUE_TEMPLATE/content_not_playing.md\r\n-->\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6027/comments",
    "author": "ThomasCZ",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2019-06-13T12:44:19Z",
        "body": "Can you describe what the expected behaviour is? You can freely select any video or audio stream from the merged sources and if both have the same content, it shouldn't be a problem to mix the video from one with the audio of the other?\r\n\r\nAs a more general point, if you control the content creation, it would make much more sense to put both audio languages in one manifest to avoid the merging process."
      }
    ]
  },
  {
    "number": 6024,
    "title": "Add a way to set proxy for the individual media streams",
    "created_at": "2019-06-12T13:05:11Z",
    "closed_at": "2019-06-21T18:42:07Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6024",
    "body": "my content is delivered from the gateway at a particular port and not on HTTP port. I need to configure the player to contact a proxy server running in the gw . my understanding is that currently there is no mechanism to do that. Can this be added ?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6024/comments",
    "author": "mvenkat3272",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2019-06-14T15:17:42Z",
        "body": "It's slightly unclear from your question what the requirements are exactly, but ExoPlayer already handles all URIs including HTTP ports and also follows server redirects. This is happening by default without any further configuration required.\r\n\r\nIn case you need to change the URI for each request dynamically (e.g. to insert to port into an existing URI), you can use a `ResolvingDataSource` which will be added in 2.10.2, or implement one yourself similar to the example in #5779."
      }
    ]
  },
  {
    "number": 6020,
    "title": "Player currentPosition is 0 on PlayerNotificationManager.onNotificationCancelled",
    "created_at": "2019-06-11T17:57:38Z",
    "closed_at": "2019-06-19T19:13:48Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6020",
    "body": "### [REQUIRED] Issue description\r\n\r\nThe currentPosition is 0 on dismissing the player from the PlayerNotificationManager with method onNotificationCancelled. Also in the EventListener.onPlayerStateChanged the currentPosition is 0.\r\n\r\n### [REQUIRED] Reproduction steps\r\n\r\n1. Start the ExoPlayer with PlayerNotificationManager\r\n2. Release the player from the notification\r\n3. Check the currentPosition of the player on dismissing the notification and releasing the player.\r\n\r\n###  [REQUIRED] Link to test content\r\n\r\n-\r\n\r\n### [REQUIRED] A full bug report captured from the device\r\n\r\n-\r\n\r\n### Version of ExoPlayer being used\r\nExoPlayer version 2.10.1\r\n\r\n### Device(s) and version(s) of Android being used\r\nAndroid API 28\r\n\r\n<!-- DO NOT DELETE\r\nvalidate_template=true\r\ntemplate_path=.github/ISSUE_TEMPLATE/bug.md\r\n-->\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6020/comments",
    "author": "AleksandarKovachev",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2019-06-12T20:27:20Z",
        "body": "The `PlayerNotificationManager` uses roughly `Player.add/removeEventListener` and setters methods of the player which is passed to `PlayerNotificationManager.setPlayer(player)`. These do not affect the playback position. Besides this no other methods are called, which potentially could affect the position of the player.\r\n\r\nI added the `PlayerNotificationManager` to `PlayerActivity` of the demo app. Then I paused at 0:20, dismissed the notification and then continued playback at 0:20 in the player activity. The playback position has not been reset to 0.\r\n\r\nCan you provide some code around what you do in `onNotificationCancelled` of your notification listener. I don't exactly understand what you mean with step 2 and 3?"
      },
      {
        "user": "AleksandarKovachev",
        "created_at": "2019-06-17T14:20:02Z",
        "body": "I am running the player in foreground service. In the foreground service, I have EventListener and in the EventListener.onPlayerStateChanged I am saving the currentPosition in shared preferences. When I am dismissing the PlayerNotification (clicking the stop button) while still playing, the method EventListener.onPlayerStateChanged is called with 0 currentPosition."
      },
      {
        "user": "marcbaechinger",
        "created_at": "2019-06-18T18:31:47Z",
        "body": "When the `PlayerNotificationManager` receives the `ACTION_STOP` action, it calls `controlDispatcher.dispatchStop(player, /* reset= */ true)`. This resets the player, which means the position is reset to 0. \r\n\r\nYou can intercept this call by using your own `ControlDispatcher`. Something like this:\r\n\r\n```\r\nplayerNotificationManager.setControlDispatcher(new DefaultControlDispatcher() {\r\n      @Override\r\n      public boolean dispatchStop(Player player, boolean reset) {\r\n        // store current position to shared preferences now.\r\n        return super.dispatchStop(player, reset);\r\n      }\r\n});\r\n```"
      },
      {
        "user": "AleksandarKovachev",
        "created_at": "2019-06-19T19:13:48Z",
        "body": "Perfect! This helped me a lot. Thank you!"
      }
    ]
  },
  {
    "number": 6018,
    "title": "playback aes 128 ctr  MinuteTimer.mp4   stream",
    "created_at": "2019-06-11T09:32:49Z",
    "closed_at": "2019-06-14T10:22:44Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6018",
    "body": "Hi team..I want to play an encrypted stream(aes 128 ctr).\r\none time I try to use AesCipherDataSource class to do that but I got an error\r\nhow can I decrypt and play that..?  \r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6018/comments",
    "author": "mehdirouhandeh",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2019-06-14T10:22:44Z",
        "body": "Please fill out the issue template and provide all the requested information when filing an issue."
      }
    ]
  },
  {
    "number": 6013,
    "title": "How to set default video quality to higher one?",
    "created_at": "2019-06-10T04:55:23Z",
    "closed_at": "2019-07-03T16:13:50Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6013",
    "body": "I've searched many places, but I couldn't really get the right answer for me..\r\n\r\nSo my player have a custom button to \"set High quality bitrate\", and when the user click that button, I find the highest bitrate within the `currentMappedTrackInfo` and override that index via `setSelectionOverride(RENDERER_TYPE_VIDEO, trackGroups, override)`. (As I understood, default value is \"Auto\" and video plays as the user device's bandwidth goes)\r\n\r\nIt works all fine and pretty easy.\r\n\r\nBut now I want to set High quality bitrate as a default bitrate, basically I want to initialize the player with higher bitrate. As you can see, for now, I'm overriding selection after initializing the video..... How can I initialize the player with higher bitrate...?  \r\n\r\n(Feels like the solutions would be setting minimum bitrate as higher value....)\r\n\r\n\r\nThank you !!",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6013/comments",
    "author": "BROUDING",
    "comments": [
      {
        "user": "Navidhp",
        "created_at": "2019-06-10T07:30:46Z",
        "body": "@BROUDING i have problem like you but i solved like this , when run this your player ready and manifest has been loaded : \r\n\r\n`MappingTrackSelector.MappedTrackInfo` `mappedTrackInfo=trackSelector.getCurrentMappedTrackInfo();`\r\n        `if (mappedTrackInfo != null) {`\r\n            `TrackGroupArray trackGroupArray;`\r\n           ` for (int i = 0; i < mappedTrackInfo.getTrackGroups(indexVideoRendered).length; i++) {`\r\n                `trackGroupArray = mappedTrackInfo.getTrackGroups(i);`\r\n                `for (int j = 0; j < trackGroupArray.get(i).length; j++) {`\r\n                  `if(i == trackGroupArray.get(i).length - 1) {`\r\n                   `DefaultTrackSelector.Parameters newParameters = \r\n           trackSelector.buildUponParameters().setMaxVideoBitrate(trackGroupArray.get(i).getFormat(j).bitrate).build();`\r\n                  ` trackSelector.setParameters(newParameters);`\r\n                  `       }`\r\n               `      }`\r\n          `       }`\r\n       `     }`\r\n\r\n\r\nsorry for my bad english"
      },
      {
        "user": "tonihei",
        "created_at": "2019-06-14T09:33:05Z",
        "body": "We have a parameter in the `DefaultTrackSelector` called `forceHighestSupportedBitrate` which selects the highest supported bitrate for audio and video in all cases. Is that what you are looking for? Note that it will then always play the highest supported bitrate independent of the bandwidth; that is, it won't switch down automatically if the network isn't fast enough."
      },
      {
        "user": "tonihei",
        "created_at": "2019-07-03T16:13:50Z",
        "body": "Closing because the question was probably answered."
      }
    ]
  },
  {
    "number": 6000,
    "title": "Exoplayer play one url until the last few seconds,this url doesn't play anymore",
    "created_at": "2019-06-06T02:17:29Z",
    "closed_at": "2019-06-06T02:36:00Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/6000",
    "body": "### [REQUIRED] when play one url until the last few seconds by exoplayer,this url doesn't play anymore\r\nHello,I have a problem using EXOplayer!\r\nWhen I play the url, play until the last few seconds,occasional error:\r\nDetail log information：\r\n=====================\r\n \"com. Google. Android. Exoplayer2. Upstream. FileDataSource $FileDataSourceException: Java. IO. FileNotFoundException: : open failed: ENOENT (No to the file or directory)\"\r\n=====================\r\n\r\nTest environment: \r\nandroid6.0, android 5.0 has this problem.\r\n\r\nI need your help. Thank you.\r\n\r\n<!-- DO NOT DELETE\r\nvalidate_template=true\r\ntemplate_path=.github/ISSUE_TEMPLATE/question.md\r\n-->\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/6000/comments",
    "author": "Programmer-Jared",
    "comments": [
      {
        "user": "google-oss-bot",
        "created_at": "2019-06-06T02:17:31Z",
        "body": "This issue does not seem to follow the issue template. Make sure you provide all the required information."
      }
    ]
  },
  {
    "number": 5979,
    "title": "Segments failing to load when phone time out of sync",
    "created_at": "2019-05-31T19:35:13Z",
    "closed_at": "2019-05-31T21:10:47Z",
    "labels": [
      "question",
      "bad media"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5979",
    "body": "I've been using Exoplayer for a while for Dash broadcasts. Recently I noticed that my personal device stopped loading streams. When I looked through logs I noticed that I was getting a 410 from the server because the segments that were being loaded had already been removed. On other devices I didn't have this problem.\r\n\r\nAs I dug deeper into the issue I noticed that my personal device's System time was out of sync by about 4 minutes. When I fixed this the streams suddenly started loading again. From what I can tell the server that I'm loading segments from deletes them after ~2-4 minutes so it would occasionally start playing the streams but it was rare that they hadn't already been cleaned up.\r\n\r\n### [REQUIRED] Searched documentation and issues\r\n\r\nI've been looking through the DashMediaSource file and in `processManifest` it looks like several variables are set to be relative to `getNowUnixTimeUs()` which uses System time for dynamic streams (as is my case)\r\n\r\n      long liveStreamDurationUs = getNowUnixTimeUs() - C.msToUs(manifest.availabilityStartTimeMs);\r\n\r\n### [REQUIRED] Question\r\n\r\nAside from informing the user that their System time has drifted is there anything I can do to mitigate this issue?\r\n\r\nNote: this is a 3rd party app I'm working on. I do not have control over the server side.\r\n\r\n<!-- DO NOT DELETE\r\nvalidate_template=true\r\ntemplate_path=.github/ISSUE_TEMPLATE/question.md\r\n-->\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5979/comments",
    "author": "oseparovic",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2019-05-31T21:10:47Z",
        "body": "DASH manifests that require the client to have an accurate clock should include a `UTCTiming` element, so that the client can synchronize itself with the server. If a `UTCTiming` element is included then ExoPlayer will not rely on the device clock.\r\n\r\nMarking as \"bad content\" on the assumption that there is no `UTCTiming` element. You should request that the third party fix this. The only other option I can think of would be to obtain an accurate time via some other mechanism in application code (e.g. by querying a time server)."
      },
      {
        "user": "oseparovic",
        "created_at": "2019-05-31T23:48:29Z",
        "body": "Ah that makes sense. Thank you for the suggestion!"
      }
    ]
  },
  {
    "number": 5964,
    "title": "java.lang.NoSuchMethodError: No direct method <init>(...) in HlsMediaSource",
    "created_at": "2019-05-29T14:30:08Z",
    "closed_at": "2019-05-30T09:03:09Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5964",
    "body": "I'm getting following error when ever I try to play the video using exoplayer in android device. I have updated the exoplayer to latest version 2.9.6 but still I'm getting following error. \r\n\r\njava.lang.NoSuchMethodError: No direct method <init>(Landroid/net/Uri;Lcom/google/android/exoplayer2/upstream/DataSource$Factory;Landroid/os/Handler;Lcom/google/android/exoplayer2/source/AdaptiveMediaSourceEventListener;)V in class Lcom/google/android/exoplayer2/source/hls/HlsMediaSource; or its super classes (declaration of 'com.google.android.exoplayer2.source.hls.HlsMediaSource' appears in /data/app/com.roh.rohmobile-2/base.apk:classes2.dex)\r\n\r\nI'm unable to resolve it please help me.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5964/comments",
    "author": "praneethkumar16",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2019-05-29T18:08:19Z",
        "body": "Please properly fill out the issue template (including attaching a full bug report - there is possibly useful information either side of the small log snippet you've included here)."
      },
      {
        "user": "praneethkumar16",
        "created_at": "2019-05-30T08:28:13Z",
        "body": "> Please properly fill out the issue template (including attaching a full bug report - there is possibly useful information either side of the small log snippet you've included here).\r\n\r\n**Here is the full stack trace:**\r\n\r\n  --------- beginning of crash\r\n```\r\n E/AndroidRuntime: FATAL EXCEPTION: main\r\n    Process: com.roh.rohmobile, PID: 22703\r\n    java.lang.NoSuchMethodError: No direct method <init>(Landroid/net/Uri;Lcom/google/android/exoplayer2/upstream/DataSource$Factory;Landroid/os/Handler;Lcom/google/android/exoplayer2/source/AdaptiveMediaSourceEventListener;)V in class Lcom/google/android/exoplayer2/source/hls/HlsMediaSource; or its super classes (declaration of 'com.google.android.exoplayer2.source.hls.HlsMediaSource' appears in base.apk!classes2.dex)\r\n        at com.ooyala.android.player.exoplayer.BaseExoPlayer.buildMediaSource(BaseExoPlayer.java:203)\r\n        at com.ooyala.android.player.exoplayer.ExoStreamPlayer.preparePlayer(ExoStreamPlayer.java:280)\r\n        at com.ooyala.android.player.exoplayer.ExoStreamPlayer.initializePlayer(ExoStreamPlayer.java:170)\r\n        at com.ooyala.android.player.exoplayer.ExoStreamPlayer.init(ExoStreamPlayer.java:122)\r\n        at com.ooyala.android.player.MoviePlayer.init(MoviePlayer.java:53)\r\n        at com.ooyala.android.OoyalaPlayerContextSwitcher.createAndInitPlayer(OoyalaPlayerContextSwitcher.java:107)\r\n        at com.ooyala.android.OoyalaPlayer.prepareContent(OoyalaPlayer.java:1650)\r\n        at com.ooyala.android.OoyalaPlayerContextSwitcher.processExitAdModes(OoyalaPlayerContextSwitcher.java:182)\r\n        at com.ooyala.android.OoyalaPlayerContextSwitcher.processAdModes(OoyalaPlayerContextSwitcher.java:162)\r\n        at com.ooyala.android.OoyalaPlayerContextSwitcher.startVideoWorkflow(OoyalaPlayerContextSwitcher.java:61)\r\n        at com.ooyala.android.OoyalaPlayer.onCurrentItemChangeComplete(OoyalaPlayer.java:845)\r\n        at com.ooyala.android.OoyalaPlayer.access$200(OoyalaPlayer.java:83)\r\n        at com.ooyala.android.OoyalaPlayer$1$1.run(OoyalaPlayer.java:556)\r\n        at android.os.Handler.handleCallback(Handler.java:873)\r\n        at android.os.Handler.dispatchMessage(Handler.java:99)\r\n        at android.os.Looper.loop(Looper.java:193)\r\n        at android.app.ActivityThread.main(ActivityThread.java:6923)\r\n        at java.lang.reflect.Method.invoke(Native Method)\r\n        at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:493)\r\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:870)\r\n```\r\nI'm using this way to initialise the media source \r\n`MediaSource videoSource = new HlsMediaSource(mp4VideoUri, dataSourceFactory, 1, null, null);` "
      },
      {
        "user": "ojw28",
        "created_at": "2019-05-30T09:03:09Z",
        "body": "`com.ooyala.android.player.exoplayer` is a fork of ExoPlayer. You need to report your issue to Ooyala."
      },
      {
        "user": "praneethkumar16",
        "created_at": "2019-05-30T09:05:23Z",
        "body": "> I'm getting following error when ever I try to play the video using exoplayer in android device. I have updated the exoplayer to latest version 2.9.6 but still I'm getting following error.\r\n> \r\n> java.lang.NoSuchMethodError: No direct method (Landroid/net/Uri;Lcom/google/android/exoplayer2/upstream/DataSource$Factory;Landroid/os/Handler;Lcom/google/android/exoplayer2/source/AdaptiveMediaSourceEventListener;)V in class Lcom/google/android/exoplayer2/source/hls/HlsMediaSource; or its super classes (declaration of 'com.google.android.exoplayer2.source.hls.HlsMediaSource' appears in /data/app/com.roh.rohmobile-2/base.apk:classes2.dex)\r\n> \r\n> I'm unable to resolve it please help me.\r\n\r\nWhy did you close the issue with out solving it?"
      },
      {
        "user": "ojw28",
        "created_at": "2019-05-30T09:09:37Z",
        "body": "It's not an ExoPlayer issue. It's an issue in Ooyala's fork of ExoPlayer, as per my response above."
      }
    ]
  },
  {
    "number": 5961,
    "title": "Trying to access downloaded segment data of a dash stream before it is plays. ",
    "created_at": "2019-05-29T08:46:40Z",
    "closed_at": "2019-06-06T16:35:30Z",
    "labels": [
      "question",
      "need more info"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5961",
    "body": "Exoplayer question: \r\nTrying to access downloaded segment data\r\n\r\n### [REQUIRED] Searched documentation and issues\r\nGithub issues\r\n\r\n### [REQUIRED] Question\r\nI need to access data  for DASH stream that resembles the entire segment after it is downloaded but before it is played. \r\nIn onChunkLoadCompleted, I am able to get the uri and bytes read but not the data. \r\nSo tried to expose the buffer from read() method in StatsDataSource to onChunkLoadCompleted, but not sure if I am getting the correct data/ the entire segment. \r\nCan someone please let me know how to access the entire segment data or if I should look somewhere else?\r\n\r\nThanks\r\n<!-- DO NOT DELETE\r\nvalidate_template=true\r\ntemplate_path=.github/ISSUE_TEMPLATE/question.md\r\n-->",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5961/comments",
    "author": "sr1990",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2019-05-29T12:04:53Z",
        "body": "> I need to access data for DASH stream that resembles the entire segment after it is downloaded but before it is played.\r\n\r\nExoPlayer starts playing the segment before it's fully downloaded, so this is not possible.\r\n\r\nIt's unclear what you're trying to do here. Please could you phrase it more in terms of what feature you're trying to implement, and why accessing the data in this way is necessary to support that feature."
      },
      {
        "user": "sr1990",
        "created_at": "2019-06-06T16:35:30Z",
        "body": "I wanted to access the entire segments (compressed sample) to do something similar to bug #5913. I will take a look at SampleQueue and get back to you if I have any questions. \r\nThanks for your time. Closing for now.  "
      },
      {
        "user": "ChetanTayal138",
        "created_at": "2019-06-08T17:41:20Z",
        "body": "> I wanted to access the entire segments (compressed sample) to do something similar to bug #5913. I will take a look at SampleQueue and get back to you if I have any questions.\r\n> Thanks for your time. Closing for now.\r\n\r\nHello , have you been able to make any sort of progress on this? I am trying to achieve something similar and it would be really helpful if you could send me in the right direction. Thanks"
      }
    ]
  },
  {
    "number": 5956,
    "title": "onVideoInputFormatChanged vs onDownstreamFormatChanged",
    "created_at": "2019-05-28T13:14:39Z",
    "closed_at": "2019-05-30T13:39:08Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5956",
    "body": "Just wanted to know the difference between onDownstreamFormatChanged and onVideoInputFormatChanged. On my project Im trying to get bitrate from format but bitrate on format from onVideoInputFormatChanged is always -1 but the one from onDownstreamFormatChanged contains a valid bitrate. ",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5956/comments",
    "author": "andresdiez",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2019-05-28T14:26:27Z",
        "body": "I think the bitrate should be set correctly in most cases, as of 2.9.0. What version are you using?\r\n\r\nThe difference is the reporting component. Data flows from a `MediaSource` to `Renderer`s in ExoPlayer. `onDownstreamFormatChanged` is reported by the `MediaSource`. `onVideoInputFormatChanged` is reported by the video `Renderer`. There is also `onAudioInputFormatChanged` which is reported by the audio `Renderer`.\r\n\r\nNote that in the case of muxed media, there may be one `onDownstreamFormatChanged` (for audio+video muxed into a single stream), where-as there would be two corresponding events from the `Renderer`s (`onVideoInputFormatChanged` and `onAudioInputFormatChanged`), which receive the individual components of the stream after demuxing.\r\n\r\nFor your use case, using `onDownstreamFormatChanged` is probably easier."
      },
      {
        "user": "AfanasievAnton",
        "created_at": "2019-05-28T16:03:14Z",
        "body": "Isn`t it more safe to extract current bitrate from onTrackChanged() by getting the selected format from the renderer that we are interested?\r\nAnd if no, what is the main difference, between this two approaches?\r\n\r\nThanks"
      },
      {
        "user": "andresdiez",
        "created_at": "2019-05-28T16:05:38Z",
        "body": "ojw28 we are using r2.4.1"
      },
      {
        "user": "ojw28",
        "created_at": "2019-05-29T22:05:58Z",
        "body": "> Isn`t it more safe to extract current bitrate from onTrackChanged() by getting the selected format from the renderer that we are interested?\r\n\r\nI'm not really sure exactly what you mean by this, but it seems preferable get everything you need through a single event (which I think is what `onDownstreamFormatChanged` will give you), rather than having to query the tracks and the renderers and tie the data back together."
      }
    ]
  },
  {
    "number": 5954,
    "title": "Allow to dismiss notification with stopforeground(false) destroying service",
    "created_at": "2019-05-27T18:11:40Z",
    "closed_at": "2019-05-29T11:14:42Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5954",
    "body": "### Issue description\r\nI added a listener to the player and inside onPlayerStateChanged() i call stopforeground(false) when playWhenReady is false to allow users to dismiss the notification\r\n` mPlayer.addListener(new Player.EventListener() {\r\n\r\n            @Override\r\n            public void onPlayerStateChanged(boolean playWhenReady, int playbackState) {\r\n                if (playWhenReady) {\r\n                    ContextWrapper contextWrapper = new ContextWrapper(mContext);\r\n                    contextWrapper.startService(mIntent);\r\n                    startForeground(mNotificationId, mNotification);\r\n                } else {\r\n                    stopForeground(false);\r\n                }\r\n            }\r\n        }`\r\n\r\nThe dismiss notification is working correctly, but if a use the back button to navigate to the launcher or lock the phone, after a while with the playback paused, the service is destroyed and this appears on the logs\r\n```\r\n 2019-05-27 14:59:12.928 13863-14904/com.android.voyce V/FA: Inactivity, disconnecting from the service\r\n2019-05-27 15:02:11.525 13863-13863/com.android.voyce I/ExoPlayerImpl: Release c274b39 [ExoPlayerLib/2.10.1] [dreamlte, SM-G950F, samsung, 28] [goog.exo.core, goog.exo.ui, goog.exo.mediasession]\r\n2019-05-27 15:02:11.538 13863-14549/com.android.voyce I/ACodec: [OMX.SEC.mp3.dec] signalFlush\r\n2019-05-27 15:02:11.539 13863-14549/com.android.voyce I/ACodec: [OMX.SEC.mp3.dec] ExecutingState flushing now (codec owns 10/10 input, 0/5 output).\r\n2019-05-27 15:02:11.549 13863-14549/com.android.voyce I/ACodec: [OMX.SEC.mp3.dec] Now Flushing\r\n2019-05-27 15:02:11.556 13863-14549/com.android.voyce I/ACodec: [OMX.SEC.mp3.dec] FlushingState onOMXEvent(0,1,0)\r\n2019-05-27 15:02:11.556 13863-14549/com.android.voyce I/ACodec: [OMX.SEC.mp3.dec] FlushingState onOMXEvent(0,1,1)\r\n2019-05-27 15:02:11.559 13863-14549/com.android.voyce I/ACodec: [OMX.SEC.mp3.dec] Now Executing\r\n2019-05-27 15:02:11.571 13863-14549/com.android.voyce I/ACodec: [OMX.SEC.mp3.dec] Now Executing->Idle\r\n2019-05-27 15:02:11.590 13863-14549/com.android.voyce I/ACodec: [OMX.SEC.mp3.dec] Now Idle->Loaded\r\n2019-05-27 15:02:11.590 13863-14549/com.android.voyce I/ACodec: [OMX.SEC.mp3.dec] Now Loaded\r\n2019-05-27 15:02:11.591 13863-14549/com.android.voyce I/ACodec:  [OMX.SEC.mp3.dec] Now kWhatShutdownCompleted event : 8544\r\n2019-05-27 15:02:11.598 13863-14549/com.android.voyce I/ACodec:  [OMX.SEC.mp3.dec] Now uninitialized\r\n2019-05-27 15:02:11.604 13863-14549/com.android.voyce I/ACodec:  [] Now kWhatShutdownCompleted event : 8544\r\n2019-05-27 15:02:11.604 13863-14549/com.android.voyce I/MediaCodec: Codec shutdown complete\r\n2019-05-27 15:02:11.731 13863-14075/com.android.voyce W/m.android.voyc: Accessing hidden method Ldalvik/system/CloseGuard;->close()V (light greylist, linking) \r\n```\r\n\r\nthis is my NotificationListener code \r\n\r\n```\r\nnew PlayerNotificationManager.NotificationListener() {\r\n                    @Override\r\n                    public void onNotificationCancelled(int notificationId, boolean dismissedByUser) {\r\n                        if (dismissedByUser) {\r\n                            stopSelf();\r\n                        }\r\n                    }\r\n\r\n                    @Override\r\n                    public void onNotificationPosted(int notificationId, Notification notification, boolean ongoing) {\r\n                        mNotification = notification;\r\n                        mNotificationId = notificationId;\r\n                        if (ongoing) {\r\n                            startForeground(notificationId, notification);\r\n                        }\r\n                    }\r\n                }\r\n```\r\n\r\n### Reproduction steps\r\nI create the service with \r\n```\r\n mPlayerServiceIntent = new Intent(this, AudioPlayerService.class);\r\n        bindService(mPlayerServiceIntent, mPlayerServiceConnection, BIND_AUTO_CREATE);\r\n```\r\n\r\non the activity on create, then when the user chooses a song (a simple mp3 url from firebasestorage) then i call `Util.startForegroundService(this, mPlayerServiceIntent);`\r\n\r\nthen i pause the playback and exits the app with the back button, the notification with the paused state stays for a while, then it is destroyed as i mentioned above.\r\n\r\n### Version of ExoPlayer being used\r\nVersion 2.10.1 \r\n\r\n### Device(s) and version(s) of Android being used\r\nSamsung s8, api 28.\r\n\r\n<!-- DO NOT DELETE\r\nvalidate_template=true\r\ntemplate_path=.github/ISSUE_TEMPLATE/bug.md\r\n-->\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5954/comments",
    "author": "Joaomon7eiro",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2019-05-28T08:16:36Z",
        "body": "This behaviour seems to be working as intended to me. If you call `stopForeground(false)` the service is not in foreground anymore. Then you put the app into the background with the back button. From this moment on the service needs to be in the foreground, or the system may terminate the service, which is what happens according to the log statements you added.\r\n\r\nSeems like all the resources are nicely released. That's it exactly how it is designed to work.\r\n\r\nIf you want the notification to stay you need to call `startForeground(int, Notification)` again in the moment when the app goes to background. But I think it would maybe make sense to just leave it as is, because if the user pauses playback and leaves the app this may actually indicate the user does not want to play anymore.\r\n\r\nSo if I got your question right this behaviour seems to be as designed. \r\n"
      },
      {
        "user": "Joaomon7eiro",
        "created_at": "2019-05-28T11:57:56Z",
        "body": "Thank you so much for answering. I wanted to keep the notification when user presses the back button and still allow it to dismiss the notification outside of my app. Is it possible? The behavior that i wanted is to allow the users to pause the playback and move to other apps, and the notification persists so the user can resume playback using the notification."
      },
      {
        "user": "marcbaechinger",
        "created_at": "2019-05-28T17:02:13Z",
        "body": "I think you already implemented it according to best practices. \r\n\r\nThe service is kept in foreground, if the app goes to background when the player is playing (playWhenReady = true), then your service is in foreground still. The user can then \r\n\r\n1) Pause with the button in the notification. This would remove the service from foreground and the system kills the service and remove the notification after a given time.\r\n\r\n2) When paused, the notification can be dismissed, which gives you the chance to `stopSelf` the service.\r\n\r\nThat's how you already implemented it. Not removing the service from the foreground when not doing playback is not a 'good citizen' behavior."
      },
      {
        "user": "Joaomon7eiro",
        "created_at": "2019-05-28T17:08:35Z",
        "body": "Okay, I will leave the way it is implemented right now. Thanks again!"
      }
    ]
  },
  {
    "number": 5945,
    "title": "How to pause and resume Exoplayer in a Recyclerview?",
    "created_at": "2019-05-25T19:22:41Z",
    "closed_at": "2019-09-03T08:35:06Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5945",
    "body": "What are the recommended practices for pausing and resuming exoplayer since there are no onPause and onResume methods in an adapter?\r\n\r\n<!-- DO NOT DELETE\r\nvalidate_template=true\r\ntemplate_path=.github/ISSUE_TEMPLATE/question.md\r\n-->\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5945/comments",
    "author": "Vitor238",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2019-05-28T08:39:48Z",
        "body": "The precise behaviour when to start playback is probably up to the app. Personally I would not auto-play in a recycler view but let the user scroll the player view into the visible area and then manually start playback via controls.\r\n\r\nIf the user does not pause again and starts scrolling, I'd make sure you pause the player when the player view leaves the visible area. \r\n\r\nFinally, you should release the player as normally when the fragment or the activity in which the recycler view lives has it's lifecycle methods like onPause/onStop called."
      },
      {
        "user": "marcbaechinger",
        "created_at": "2019-09-03T08:35:06Z",
        "body": "Closing due to inactivity."
      }
    ]
  },
  {
    "number": 5941,
    "title": "HD content playback not working anymore - Error decrypting data: requested key has not been loaded",
    "created_at": "2019-05-24T10:19:11Z",
    "closed_at": "2019-06-22T00:00:49Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5941",
    "body": "Hello, \r\n\r\n### [REQUIRED] Issue description\r\nI'm having an issue while playing newly encrypted HD content on our device.\r\nDepending on the content, it is played only for 6 to 16 seconds and then I get this exception :\r\n\r\n> \r\n> 05-24 09:34:23.857   670  7547 E WVCdm   : PolicyEngine::CanDecrypt Key 'A12516B7E203579B87C9B43F7871E3BD' not in license.\r\n> 05-24 09:34:23.857   670  7547 E WVCdm   : Decrypt error result in session sid48 during encrypted block: 5\r\n> 05-24 09:34:23.863  1751  7813 E ExoPlayerImplInternal: Playback error.\r\n> 05-24 09:34:23.863  1751  7813 E ExoPlayerImplInternal: com.google.android.exoplayer2.ExoPlaybackException\r\n> 05-24 09:34:23.863  1751  7813 E ExoPlayerImplInternal: \tat com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.feedInputBuffer(MediaCodecRenderer.java:765)\r\n> 05-24 09:34:23.863  1751  7813 E ExoPlayerImplInternal: \tat com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.render(MediaCodecRenderer.java:568)\r\n> 05-24 09:34:23.863  1751  7813 E ExoPlayerImplInternal: \tat com.google.android.exoplayer2.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:522)\r\n> 05-24 09:34:23.863  1751  7813 E ExoPlayerImplInternal: \tat com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:305)\r\n> 05-24 09:34:23.863  1751  7813 E ExoPlayerImplInternal: \tat android.os.Handler.dispatchMessage(Handler.java:98)\r\n> 05-24 09:34:23.863  1751  7813 E ExoPlayerImplInternal: \tat android.os.Looper.loop(Looper.java:148)\r\n> 05-24 09:34:23.863  1751  7813 E ExoPlayerImplInternal: \tat android.os.HandlerThread.run(HandlerThread.java:61)\r\n> 05-24 09:34:23.863  1751  7813 E ExoPlayerImplInternal: Caused by: android.media.MediaCodec$CryptoException: Error decrypting data: requested key has not been loaded\r\n> 05-24 09:34:23.863  1751  7813 E ExoPlayerImplInternal: \tat android.media.MediaCodec.native_queueSecureInputBuffer(Native Method)\r\n> 05-24 09:34:23.863  1751  7813 E ExoPlayerImplInternal: \tat android.media.MediaCodec.queueSecureInputBuffer(MediaCodec.java:2292)\r\n> 05-24 09:34:23.863  1751  7813 E ExoPlayerImplInternal: \tat com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.feedInputBuffer(MediaCodecRenderer.java:756)\r\n> 05-24 09:34:23.863  1751  7813 E ExoPlayerImplInternal: \t... 6 more\r\n> 05-24 09:34:23.866  1751  1751 D EventLogger: droppedFrames [5.63, 9]\r\n> 05-24 09:34:23.927   670   670 I OMX-VDEC-1080P: omx_vdec::component_deinit() complete\r\n> 05-24 09:34:23.933   670   670 I OMX-VDEC-1080P: Exit OMX vdec Destructor: fd=47\r\n> 05-24 09:34:23.934   670   670 I OMX-VDEC-1080P: Video slvp perflock released\r\n> 05-24 09:34:23.952   670  1326 I WVCdm   : CdmEngine::CloseSession\r\n> 05-24 09:34:23.955  1751  1751 D EventLogger: videoDisabled [5.72]\r\n> 05-24 09:34:23.970  1751  1751 D EventLogger: audioDisabled [5.74]\r\n> 05-24 09:34:23.979  1751  1751 E player_activity: An unknown playback error occurred class android.media.MediaCodec$CryptoException\r\n> 05-24 09:34:23.982  1751  1751 I config  : GradingExperience enabled : true\r\n> 05-24 09:34:23.987  1751  1751 E EventLogger: playerFailed [5.75]\r\n> 05-24 09:34:23.987  1751  1751 E EventLogger: com.google.android.exoplayer2.ExoPlaybackException\r\n> 05-24 09:34:23.987  1751  1751 E EventLogger: \tat com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.feedInputBuffer(MediaCodecRenderer.java:765)\r\n> 05-24 09:34:23.987  1751  1751 E EventLogger: \tat com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.render(MediaCodecRenderer.java:568)\r\n> 05-24 09:34:23.987  1751  1751 E EventLogger: \tat com.google.android.exoplayer2.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:522)\r\n> 05-24 09:34:23.987  1751  1751 E EventLogger: \tat com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:305)\r\n> 05-24 09:34:23.987  1751  1751 E EventLogger: \tat android.os.Handler.dispatchMessage(Handler.java:98)\r\n> 05-24 09:34:23.987  1751  1751 E EventLogger: \tat android.os.Looper.loop(Looper.java:148)\r\n> 05-24 09:34:23.987  1751  1751 E EventLogger: \tat android.os.HandlerThread.run(HandlerThread.java:61)\r\n> 05-24 09:34:23.987  1751  1751 E EventLogger: Caused by: android.media.MediaCodec$CryptoException: Error decrypting data: requested key has not been loaded\r\n> 05-24 09:34:23.987  1751  1751 E EventLogger: \tat android.media.MediaCodec.native_queueSecureInputBuffer(Native Method)\r\n> 05-24 09:34:23.987  1751  1751 E EventLogger: \tat android.media.MediaCodec.queueSecureInputBuffer(MediaCodec.java:2292)\r\n> 05-24 09:34:23.987  1751  1751 E EventLogger: \tat com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.feedInputBuffer(MediaCodecRenderer.java:756)\r\n> 05-24 09:34:23.987  1751  1751 E EventLogger: \t... 6 more\r\n> 05-24 09:34:23.987  1751  1751 D EventLogger: state [5.75, true, I]\r\n\r\nThe thing is that if I try to play older HD encrypted content ont this same device it works perfectly.\r\nAlso, when I play the same content but in SD on another device, it works.\r\nWe work only with offline licenses.\r\n\r\n### [REQUIRED] Reproduction steps\r\nThis issue is reproduced on ExoPlayer 2.7.3\r\n\r\n### [REQUIRED] Link to test content\r\nI can't link the content as this is critical.\r\n\r\n### [REQUIRED] A full bug report captured from the device\r\nHere are the only logs I have when this error occurs : ```\r\n\r\n\r\n> \r\n> 05-24 09:34:23.857   670  7547 E WVCdm   : PolicyEngine::CanDecrypt Key 'A12516B7E203579B87C9B43F7871E3BD' not in license.\r\n> 05-24 09:34:23.857   670  7547 E WVCdm   : Decrypt error result in session sid48 during encrypted block: 5\r\n> 05-24 09:34:23.863  1751  7813 E ExoPlayerImplInternal: Playback error.\r\n> 05-24 09:34:23.863  1751  7813 E ExoPlayerImplInternal: com.google.android.exoplayer2.ExoPlaybackException\r\n> 05-24 09:34:23.863  1751  7813 E ExoPlayerImplInternal: \tat com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.feedInputBuffer(MediaCodecRenderer.java:765)\r\n> 05-24 09:34:23.863  1751  7813 E ExoPlayerImplInternal: \tat com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.render(MediaCodecRenderer.java:568)\r\n> 05-24 09:34:23.863  1751  7813 E ExoPlayerImplInternal: \tat com.google.android.exoplayer2.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:522)\r\n> 05-24 09:34:23.863  1751  7813 E ExoPlayerImplInternal: \tat com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:305)\r\n> 05-24 09:34:23.863  1751  7813 E ExoPlayerImplInternal: \tat android.os.Handler.dispatchMessage(Handler.java:98)\r\n> 05-24 09:34:23.863  1751  7813 E ExoPlayerImplInternal: \tat android.os.Looper.loop(Looper.java:148)\r\n> 05-24 09:34:23.863  1751  7813 E ExoPlayerImplInternal: \tat android.os.HandlerThread.run(HandlerThread.java:61)\r\n> 05-24 09:34:23.863  1751  7813 E ExoPlayerImplInternal: Caused by: android.media.MediaCodec$CryptoException: Error decrypting data: requested key has not been loaded\r\n> 05-24 09:34:23.863  1751  7813 E ExoPlayerImplInternal: \tat android.media.MediaCodec.native_queueSecureInputBuffer(Native Method)\r\n> 05-24 09:34:23.863  1751  7813 E ExoPlayerImplInternal: \tat android.media.MediaCodec.queueSecureInputBuffer(MediaCodec.java:2292)\r\n> 05-24 09:34:23.863  1751  7813 E ExoPlayerImplInternal: \tat com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.feedInputBuffer(MediaCodecRenderer.java:756)\r\n> 05-24 09:34:23.863  1751  7813 E ExoPlayerImplInternal: \t... 6 more\r\n> 05-24 09:34:23.866  1751  1751 D EventLogger: droppedFrames [5.63, 9]\r\n> 05-24 09:34:23.927   670   670 I OMX-VDEC-1080P: omx_vdec::component_deinit() complete\r\n> 05-24 09:34:23.933   670   670 I OMX-VDEC-1080P: Exit OMX vdec Destructor: fd=47\r\n> 05-24 09:34:23.934   670   670 I OMX-VDEC-1080P: Video slvp perflock released\r\n> 05-24 09:34:23.952   670  1326 I WVCdm   : CdmEngine::CloseSession\r\n> 05-24 09:34:23.955  1751  1751 D EventLogger: videoDisabled [5.72]\r\n> 05-24 09:34:23.970  1751  1751 D EventLogger: audioDisabled [5.74]\r\n> 05-24 09:34:23.979  1751  1751 E player_activity: An unknown playback error occurred class android.media.MediaCodec$CryptoException\r\n> 05-24 09:34:23.982  1751  1751 I config  : GradingExperience enabled : true\r\n> 05-24 09:34:23.987  1751  1751 E EventLogger: playerFailed [5.75]\r\n> 05-24 09:34:23.987  1751  1751 E EventLogger: com.google.android.exoplayer2.ExoPlaybackException\r\n> 05-24 09:34:23.987  1751  1751 E EventLogger: \tat com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.feedInputBuffer(MediaCodecRenderer.java:765)\r\n> 05-24 09:34:23.987  1751  1751 E EventLogger: \tat com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.render(MediaCodecRenderer.java:568)\r\n> 05-24 09:34:23.987  1751  1751 E EventLogger: \tat com.google.android.exoplayer2.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:522)\r\n> 05-24 09:34:23.987  1751  1751 E EventLogger: \tat com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:305)\r\n> 05-24 09:34:23.987  1751  1751 E EventLogger: \tat android.os.Handler.dispatchMessage(Handler.java:98)\r\n> 05-24 09:34:23.987  1751  1751 E EventLogger: \tat android.os.Looper.loop(Looper.java:148)\r\n> 05-24 09:34:23.987  1751  1751 E EventLogger: \tat android.os.HandlerThread.run(HandlerThread.java:61)\r\n> 05-24 09:34:23.987  1751  1751 E EventLogger: Caused by: android.media.MediaCodec$CryptoException: Error decrypting data: requested key has not been loaded\r\n> 05-24 09:34:23.987  1751  1751 E EventLogger: \tat android.media.MediaCodec.native_queueSecureInputBuffer(Native Method)\r\n> 05-24 09:34:23.987  1751  1751 E EventLogger: \tat android.media.MediaCodec.queueSecureInputBuffer(MediaCodec.java:2292)\r\n> 05-24 09:34:23.987  1751  1751 E EventLogger: \tat com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.feedInputBuffer(MediaCodecRenderer.java:756)\r\n> 05-24 09:34:23.987  1751  1751 E EventLogger: \t... 6 more\r\n> 05-24 09:34:23.987  1751  1751 D EventLogger: state [5.75, true, I]\r\n\r\n### [REQUIRED] Version of ExoPlayer being used\r\nExoPlayer 2.7.3\r\n\r\n### [REQUIRED] Device(s) and version(s) of Android being used\r\nSD version working on a Samsung Galaxy S4 Android 5.1.\r\nHD version not working on a Android 6 custom device.\r\n\r\n<!-- DO NOT DELETE\r\nvalidate_template=true\r\ntemplate_path=.github/ISSUE_TEMPLATE/bug.md\r\n-->\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5941/comments",
    "author": "DarioOl",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2019-05-24T10:23:15Z",
        "body": "It seems unlikely this is an ExoPlayer issue. The underlying platform is saying that the key required for decryption isn't in the license response you received, which points to a content encryption or license configuration issue.\r\n\r\n> 05-24 09:34:23.857 670 7547 E WVCdm : PolicyEngine::CanDecrypt Key 'A12516B7E203579B87C9B43F7871E3BD' not in license.\r\n"
      },
      {
        "user": "DarioOl",
        "created_at": "2019-05-24T10:31:58Z",
        "body": "@ojw28 Thanks for the quick answer, what I can't understand is that after comparing the two emitted licenses (old HD content working and new HD content not working) the only difference is in the pssh_data that do not contain any \"key_id\": [] but we have it in the supported_tracks field :\r\n\r\n```\r\n    \"supported_tracks\": [\r\n        {\r\n            \"key_id\": \"key id for HD track\",\r\n            \"type\": \"HD\"\r\n        }\r\n    ]\r\n```"
      },
      {
        "user": "ojw28",
        "created_at": "2019-05-28T14:33:16Z",
        "body": "The obvious question is whether everything just works if you revert back to however you used to be generating the content. Perhaps the CDM (or the specification itself) requires `key_id` to be set."
      },
      {
        "user": "ojw28",
        "created_at": "2019-06-22T00:00:49Z",
        "body": "Closing on the assumption `key_id` should be set."
      }
    ]
  },
  {
    "number": 5937,
    "title": "How to specify texture resolution when using MSG_SET_SURFACE",
    "created_at": "2019-05-23T23:48:15Z",
    "closed_at": "2019-05-28T20:46:52Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5937",
    "body": "### [REQUIRED] Searched documentation and issues\r\nThere are numerous issues about selecting quality/resolution from multi-track streams - none are applicable to this question which is about scaling.  My particular use case is an on-disk file.\r\n\r\n#5406 is very similar to my question, however the suggestion to use `SurfaceView` or `TextureView` is not applicable.\r\n\r\nI've tried using `SurfaceTexture.setDefaultBufferSize(int, int)`, however it did not work.  The documentation does state, \"The image producer may override the buffer size, in which case the producer-set buffer size will be used, not the default size set by this method\", but I was unable to figure out _how_ this is done in order to intervene.\r\n\r\n### [REQUIRED] Question\r\nI'm using ExoPlayer with Unity as such:\r\n\r\n1. A texture is created with `GLES20.glBindTexture(TextureHandle.GL_TEXTURE_EXTERNAL_OES, videoTextureId)`\r\n2. A `Surface` is created from a `SurfaceTexture` that is created from the above.  This is supplied to ExoPlayer via `MSG_SET_SURFACE`.\r\n3. In Unity, a `Texture2D` is created using the pointer that was returned by `glBindTexture`\r\n\r\nThe texture resolution ends up being identical to the source video resolution.  Is it possible for me to specify a resolution anywhere in the ExoPlayer render pipeline, such that I end up with a texture of the target size, scaled in a filtered manner from the source material?\r\n\r\nObviously, I can take the texture produced by ExoPlayer and run it through a filtered scaling algorithm, then pass that to Unity, however I can see this as being potentially redundant or otherwise inefficient.\r\n\r\n<!-- DO NOT DELETE\r\nvalidate_template=true\r\ntemplate_path=.github/ISSUE_TEMPLATE/question.md\r\n-->\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5937/comments",
    "author": "M-Pixel",
    "comments": [
      {
        "user": "erdemguven",
        "created_at": "2019-05-28T19:37:40Z",
        "body": "As mentioned in #5406 ExoPlayer will decode video in its original resolution. You need to scale it after it's drawn to the texture."
      }
    ]
  },
  {
    "number": 5925,
    "title": "Is there a way to know whether an IMA ad being played is Pre-roll, Mid-roll, Post-roll?",
    "created_at": "2019-05-21T15:09:29Z",
    "closed_at": "2019-07-25T16:55:05Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5925",
    "body": "### Content Description\r\n\r\nI would like to find out if there is a way to know if the ad currently being played is Pre-roll, Mid-roll or Post-roll. I can't seem to find a listener that exposes this information.\r\nI am currently using the IMA ads event listener on the `ImaAdsLoader`:\r\n\r\n```\r\nimaAdsLoader.addCallback(VideoAdPlayer.VideoAdPlayerCallback);\r\n```\r\n### ExoPlayer Version\r\n2.9.2\r\n\r\n<!-- DO NOT DELETE\r\nvalidate_template=true\r\ntemplate_path=.github/ISSUE_TEMPLATE/question.md\r\n-->\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5925/comments",
    "author": "rs146",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2019-06-19T06:49:58Z",
        "body": "Sorry for being slow to reply. The easiest way is probably via the player API: if `player.isPlayingAd()` returns true, you can get the ad group time via `player.getCurrentTimeline().getAdGroupTimeUs(player.getCurrentAdGroupIndex())`; a returned value of 0 means a preroll is playing, `C.TIME_END_OF_SOURCE` means a postroll is playing and any other value indicates a midroll."
      },
      {
        "user": "rs146",
        "created_at": "2019-07-25T15:23:52Z",
        "body": "Hi @andrewlewis ,\r\nI can't see a method called `getAdGroupTimeUs()` in the `Timeline`. How can I access this? I've upgraded ExoPlayer to the latest version as well but this method does not exist.\r\n\r\n "
      },
      {
        "user": "andrewlewis",
        "created_at": "2019-07-25T16:55:05Z",
        "body": "Sorry, please try: `player.getCurrentTimeline().getPeriod(player.getCurrentPeriodIndex(), new Timeline.Period()).getAdGroupTimeUs(player.getCurrentAdGroupIndex())` -- the method is on `Timeline.Period` not `Timeline`."
      },
      {
        "user": "rs146",
        "created_at": "2019-07-25T18:03:02Z",
        "body": "Hi @andrewlewis,\r\n\r\nThis works for pre-roll and mid-roll ads. However with post roll ads, it crashes with the following stack trace. (I'm using DASH with widevine DRM).\r\n\r\n```\r\nCaused by: java.lang.ArrayIndexOutOfBoundsException: length=3; index=-1\r\n        at com.google.android.exoplayer2.Timeline$Period.getAdGroupTimeUs(Timeline.java:402)\r\n```\r\n\r\nTo produce this crash I'm using the following code:\r\n```\r\nTimeline timeline = playerView.getPlayer().getCurrentTimeline();\r\nTimeline.Period period = timeline.getPeriod(playerView.getPlayer().getCurrentPeriodIndex(), new Timeline.Period());\r\n\r\nlong adGroupTime = period.getAdGroupTimeUs(playerView.getPlayer().getCurrentAdGroupIndex());\r\n```"
      },
      {
        "user": "andrewlewis",
        "created_at": "2019-07-26T08:38:38Z",
        "body": "Are you sure `player.isPlayingAd()` returned true at the moment you run that code?\r\n\r\nI tried to reproduce using one of the sample ad tags with a postroll in the demo app, but the ad group index was correct and the associated ad group time was `C.TIME_END_OF_SOURCE` as expected."
      },
      {
        "user": "rs146",
        "created_at": "2019-07-26T13:58:24Z",
        "body": "Hi @andrewlewis,\r\n\r\nYes - you are correct. I need to use something like this to determine if the player is playing an ad:\r\n\r\n```\r\npublic void onPositionDiscontinuity(int reason) {\r\n        if (reason != DISCONTINUITY_REASON_SEEK) {\r\n            adIsPlayingState.onNext(player.isPlayingAd());\r\n        }\r\n    }\r\n```\r\nThe only problem with this is that is does not fire for pre-rolls which is why I have used the `VideoAdPlayer.VideoAdPlayerCallback#onPlay()` to determine if an ad is playing (as it fires the event for Preroll, Midroll and Postroll ads). When we use the `VideoAdPlayer.VideoAdPlayerCallback#onPlay()` to determine if an ad is playing, then we experience this crash."
      }
    ]
  },
  {
    "number": 5919,
    "title": "Allow ExoPlayer to use MediaPlayer internally",
    "created_at": "2019-05-20T22:01:45Z",
    "closed_at": "2019-05-23T02:55:55Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5919",
    "body": "### [REQUIRED] Searched documentation and issues\r\nI have realized that ExoPlayer does not support flac by default. After searching I have found the extra extension for flac playback. My issue with the extension is that even though it has an APACHE license, the components that it uses have licenses that would require me to release my commercial project's source which I do not want.\r\n\r\n### [REQUIRED] Question\r\nSince MediaPlayer already has support for flac, I have decided to use it for flac playback. Is it possible for ExoPlayer to internally use MediaPlayer for flac playback? Is there any extension that allows ExoPlayer to use MediaPlayer internally?\r\n\r\nThanks for your time.\r\n\r\n<!-- DO NOT DELETE\r\nvalidate_template=true\r\ntemplate_path=.github/ISSUE_TEMPLATE/question.md\r\n-->\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5919/comments",
    "author": "jackjohnsonn",
    "comments": [
      {
        "user": "jackjohnsonn",
        "created_at": "2019-05-20T23:18:59Z",
        "body": "I have also realized that the end result of the extension is a 1MB file which is too large."
      },
      {
        "user": "andrewlewis",
        "created_at": "2019-05-21T09:35:56Z",
        "body": "We thought about implementing this kind of fallback to MediaPlayer in the context of using audio offload before Android Q, but it's unclear that it's worth the extra complication and it seems infeasible to make the fallback invisible to apps. For example, there is no way to switch between player implementations while keeping the same AudioTrack for playlist use cases, and various ExoPlayer features wouldn't be supported when using AudioTrack (e.g., playback parameters adjustment before Android M).\r\n\r\nI think FLAC should be available via MediaCodec from Android O. I wonder if making an APK split based on API version is an option, so you'd only ship the extension for devices running earlier versions. That might mitigate the problem of APK size increase."
      },
      {
        "user": "ojw28",
        "created_at": "2019-05-21T10:47:22Z",
        "body": "An in-between option would be to have a wrapper around `MediaPlayer` that implements our `Player` interface. It wouldn't achieve transparent fallback because you'd still have to pick which player to use, but it would let you switch easily between the two at the app layer, and use both with ExoPlayer's standard UI widgets and other components that operate on a `Player`. You could use `ExoPlayer` for FLAC on Android O and above, and `MediaPlayer` on earlier API versions, and then drop the `MediaPlayer` wrapper with minimal effort when it's finally no longer required.\r\n\r\nI don't think we have any plans to implement a wrapper ourselves, but it's something you could do in your app code, if you were sufficiently motivated to do so."
      },
      {
        "user": "jackjohnsonn",
        "created_at": "2019-05-21T13:16:53Z",
        "body": "Thank you so much for the detailed information, @andrewlewis @ojw28\r\n\r\nI was actually hoping the newer APIs would have support for FLAC by default and that I would not have to ship the FLAC compiled extension with their APKs. So, I ran my project on an Android Pie emulator, without the FLAC extension. I have received the same error like the one on the other APIs:\r\n\r\nUnrecognizedInputFormatException: None of the available extractors (MatroskaExtractor, FragmentedMp4Extractor, Mp4Extractor, Mp3Extractor, AdtsExtractor, Ac3Extractor, TsExtractor, FlvExtractor, OggExtractor, PsExtractor, WavExtractor, AmrExtractor, Ac4Extractor) could read the stream.\r\n\r\nI can only play the FLAC files, if I add the compiled FLAC extension which is the case for other APIs. Am I missing something? \r\n\r\nCould not ExoPlayer just use a JAVA FLAC decoder library instead of relying on a compiled source?\r\n\r\nDoes the ExoPlayer FLAC extension here use the libFLAC/libFLAC++ libraries only making it BSD licensed or does it use the extras making it GPL licensed, instead.\r\n\r\nThanks a lot for your time.\r\n"
      },
      {
        "user": "andrewlewis",
        "created_at": "2019-05-21T14:00:23Z",
        "body": "Regarding Android O and later support for FLAC: I think there is support for decoding FLAC sample data, so it should work without the extension if you can mux your FLAC streams into a Matroska container for example, but for reading .flac files the FLAC extension is still needed.\r\n\r\nA MediaExtractor wrapper may be a more feasible option to investigate, as we can control rendering in that case. We used to provide one but it had issues (e.g., #38, #47, #51, #247), however, maybe we should revisit this for FLAC specifically."
      },
      {
        "user": "jackjohnsonn",
        "created_at": "2019-05-23T02:55:55Z",
        "body": "Thanks for the information, andrewlewis. I have realized that ExoPlayer is also missing support for MIDI and some specific files. So, I am going to start a request issue for a MediaPlayer wrapper for ExoPlayer and hope for the best. Maybe you guys will consider it in the future."
      }
    ]
  },
  {
    "number": 5913,
    "title": "What is the right way to access dash segments, make some changes to it, and replace back the new segments in the buffer?",
    "created_at": "2019-05-20T08:09:40Z",
    "closed_at": "2019-05-21T11:53:10Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5913",
    "body": "### [REQUIRED] Searched documentation and issues\r\nTried searching a lot on StackOverflow and also the issues under github/exoplayer.\r\n\r\n### [REQUIRED] Question\r\nAny tips on how to proceed so that I can access the dash segments in real-time, make some changes(something like Super Resolution) and replace the segments back in the buffer. Which class/method should I focus upon?\r\n\r\n<!-- DO NOT DELETE\r\nvalidate_template=true\r\ntemplate_path=.github/ISSUE_TEMPLATE/question.md\r\n-->\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5913/comments",
    "author": "GaureeshA",
    "comments": [
      {
        "user": "erdemguven",
        "created_at": "2019-05-20T20:00:27Z",
        "body": "What kind of changes you want to do? "
      },
      {
        "user": "GaureeshA",
        "created_at": "2019-05-21T05:26:54Z",
        "body": "I have a Deep Learning model on the client side. I need to fetch segments while the video is playing from the buffer, perform super resolution, replace these new segments back in the buffer so that new frames are displayed."
      },
      {
        "user": "ojw28",
        "created_at": "2019-05-21T11:53:10Z",
        "body": "I don't really understand what \"super resolution\" is, but this level of customization is beyond what we can provide detailed guidance on, sorry. Depending on whether \"super resolution\" is performed on compressed or decompressed samples, you should take a look at the the components under `DashMediaPeriod` or `MediaCodecVideoRenderer` respectively."
      },
      {
        "user": "ojw28",
        "created_at": "2019-05-29T15:37:34Z",
        "body": "Clarification on terminology:\r\n* compressed sample == a media sample before it's fed through the decoder (i.e. as it's stored in the container)\r\n* decompressed sample == a sample after it's been fed through the decoder (i.e. a video frame ready for display, or a PCM audio sample)"
      },
      {
        "user": "GaureeshA",
        "created_at": "2019-05-30T09:05:23Z",
        "body": "Thank you! We are most probably looking for the compressed form. As you mentioned about \"DashMediaPeriod\", where can I find the bytes of the compressed sample so that I can save it locally and make some changes to it. I can find the class called \"Chunk\", but how do I access the bytes? Thanks again."
      },
      {
        "user": "ojw28",
        "created_at": "2019-06-03T09:39:31Z",
        "body": "This level of customization is not something we provide an API for, and goes beyond what we're reasonably able to provide advice on through this issue tracker. You should probably take a look at `SampleQueue` as a starting point."
      }
    ]
  },
  {
    "number": 5905,
    "title": "How to cast to other devices?",
    "created_at": "2019-05-18T02:02:14Z",
    "closed_at": "2019-06-19T06:45:19Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5905",
    "body": "Hello, I would like my application, using Exoplayer, to transmit devices like Roku, Smart TV and other decoders besides chromecast.\r\n\r\nCurrently, the exoplayer Cast extension supports transmitting only to chromecast. My audience prefers smart tv.\r\n\r\nIs there a way to get it?\r\n\r\n\r\n<!-- DO NOT DELETE\r\nvalidate_template=true\r\ntemplate_path=.github/ISSUE_TEMPLATE/question.md\r\n-->\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5905/comments",
    "author": "aleeherasimiuk",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2019-05-20T08:04:34Z",
        "body": "We don't currently have any integrations with other Cast-like SDKs."
      }
    ]
  },
  {
    "number": 5903,
    "title": "Playback with Security level 1 & HDCP",
    "created_at": "2019-05-17T08:09:53Z",
    "closed_at": "2019-06-04T15:18:18Z",
    "labels": [
      "question",
      "need more info"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5903",
    "body": "I tried to play content with security level 1 and HDCP V1, but it does not work on some devices like Samsung S9+, Nexus 5.\r\nNexus 5 could not play at all.\r\nBut especially on S9+, it works well if the audio track was not encrypted and only the video track was encrypted. \r\nAre these device-dependent issues?\r\n\r\nThe exoplayer version is 2.9.3\r\nAnd the error log like below.\r\n```\r\ncom.pallycon.exoplayersample.simple E/ExoPlayerImplInternal: Playback error. \r\ncom.google.android.exoplayer2.ExoPlaybackException: android.media.MediaCodec$CryptoException: Operation not supported in this configuration \r\nat com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.feedInputBuffer(MediaCodecRenderer.java:1110) \r\nat com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.render(MediaCodecRenderer.java:653) \r\nat com.google.android.exoplayer2.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:575) \r\nat com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:326) \r\nat android.os.Handler.dispatchMessage(Handler.java:102) \r\nat android.os.Looper.loop(Looper.java:214) \r\nat android.os.HandlerThread.run(HandlerThread.java:65) \r\nCaused by: android.media.MediaCodec$CryptoException: Operation not supported in this configuration \r\nat android.media.MediaCodec.native_queueSecureInputBuffer(Native Method) \r\nat android.media.MediaCodec.queueSecureInputBuffer(MediaCodec.java:2608) \r\nat com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.feedInputBuffer(MediaCodecRenderer.java:1101) \r\nat com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.render(MediaCodecRenderer.java:653) \r\nat com.google.android.exoplayer2.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:575) \r\nat com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:326) \r\nat android.os.Handler.dispatchMessage(Handler.java:102) \r\nat android.os.Looper.loop(Looper.java:214) \r\nat android.os.HandlerThread.run(HandlerThread.java:65) \r\n2019-05-10 16:30:15.297 22132-22132/com.pallycon.exoplayersample.simple E/@@# error: 1 \r\n2019-05-10 16:30:15.297 22132-22132/com.pallycon.exoplayersample.simple E/@@# errorString =: android.media.MediaCodec$CryptoException: Operation not supported in this configuration\r\n```",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5903/comments",
    "author": "Jason239",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2019-05-17T08:44:19Z",
        "body": "> Nexus 5 could not play at all.\r\n> But especially on S9+, it works well if the audio track was not encrypted and only the video track was encrypted.\r\n\r\nTo clarify, is it the case that on both Nexus 5 and Samsung Galaxy S9+ you find that L1 DRM playback fails if the audio track is encrypted but succeeds if the audio track is not encrypted? I'm not sure about the level of support for audio encryption but perhaps @ojw28 can comment on this.\r\n\r\nThere may be more relevant logging before the snippet you provided, so please attach a full bug report. Capture a full bug report using \"adb bugreport\". Output from \"adb logcat\" or a log snippet is NOT sufficient. Please attach the captured bug report as a file. If you don't wish to post it publicly, please submit the issue, then email the bug report to dev.exoplayer@gmail.com using a subject in the format \"Issue #5903\"."
      },
      {
        "user": "ojw28",
        "created_at": "2019-05-17T10:32:07Z",
        "body": "Are you using separate keys for audio and video? I don't think you should be configuring the license for audio to be L1 and to require HDCP, because there's no such thing as an L1 audio output path. If you're doing that, you most likely need to use a separate key for audio that only requires L3."
      }
    ]
  },
  {
    "number": 5902,
    "title": "Playback begins but listener never receives `READY` state (IMA 3.11.2, 2.10.0)",
    "created_at": "2019-05-17T05:53:53Z",
    "closed_at": "2019-09-29T22:23:48Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5902",
    "body": "### [REQUIRED] Issue description\r\nWhen using ExoPlayer 2.10.0 with the IMA extension (and a local dependency on IMA 3.11.2), sometimes the player will begin playback but never emit an `onPlayerStateChanged(.., READY)` event.\r\nThis seems to occur for content with unplayable ads. but I can not find a guaranteed way to replicate it.\r\nThis issue could not be reproduced on ExoPlayer 2.9.6 with IMA 3.10.9.\r\n\r\nWe are currently driving some UI/events on this `READY` event (for e.g. hiding a spinner, starting some metrics).\r\n\r\n### [REQUIRED] Reproduction steps\r\n- Play content with IMA ads, seemingly with a format the player does not support so they are skipped\r\n- Check for READY event, this will intermittently not fire\r\n\r\n### [REQUIRED] Link to test content\r\nUnable to provide, as it's tied to IMA and DRMd content specifically. If required I can try to work something out.\r\n\r\n### [REQUIRED] A full bug report captured from the device\r\nWill email to dev.exoplayer@gmail.com\r\n\r\n### [REQUIRED] Version of ExoPlayer being used\r\n2.10.0\r\n\r\n### [REQUIRED] Device(s) and version(s) of Android being used\r\nFor the bug report, Android Q beta3, but has also been seen on P.\r\n\r\n<!-- DO NOT DELETE\r\nvalidate_template=true\r\ntemplate_path=.github/ISSUE_TEMPLATE/bug.md\r\n-->\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5902/comments",
    "author": "dbrain",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2019-05-17T13:46:25Z",
        "body": "It would be useful if you could set `ImaAdsLoader.DEBUG` to true then reproduce the issue, take a bug report and send it over. This enables some logging that shows what the IMA API is doing.\r\n\r\nYou mention that this issue is tied to DRM content. Just to clarify, can you not reproduce it when playing clear content? That sounds strange. If you can share the ad tag via email anyway that would be helpful."
      },
      {
        "user": "dbrain",
        "created_at": "2019-05-20T02:28:04Z",
        "body": "@andrewlewis I've emailed the new bugreport with `ImaAdsLoader.DEBUG = true` and the ad tag in the same thread as the previous bugreport.\r\n\r\nSorry, I didn't word the `Link to test content` section great. I don't believe it's tied to DRM content, I was just mentioning that our content is DRM protected, in case that's related somehow, and that getting test content for you would be a bit of a hassle (but can if required). We don't really have any clear content to test with, but I can try to fudge it if that's helpful."
      },
      {
        "user": "google-oss-bot",
        "created_at": "2019-06-24T16:18:46Z",
        "body": "<!-- event: mark-stale -->\nHey @dbrain. We need more information to resolve this issue but there hasn't been an update in 14 days. I'm marking the issue as stale and if there are no new updates in the next 7 days I will close it automatically.\n\nIf you have more information that will help us get to the bottom of this, just add a comment!"
      },
      {
        "user": "ojw28",
        "created_at": "2019-06-24T16:39:00Z",
        "body": "Please disregard the comment from @google-oss-bot ."
      },
      {
        "user": "dbrain",
        "created_at": "2019-07-05T10:31:26Z",
        "body": "I've been digging a bit. This seems to be occurring when `ImaAdsLoader.onPositionDiscontinuity` is called (via `ExoPlayerImpl.seekTo` `notifyListeners` call) before `ImaAdsLoader.onTimelineChanged`. In this scenario `ImaAdsLoader.onPositionDiscontinuity` tries to `getPeriod` from the `ImaAdsLoader.timeline` which is null throwing an exception and preventing other listeners receiving the `onPositionDiscontinuity` call. Presumably somewhere in this call chain whatever emits the `READY` is being missed due to the exception.\r\n\r\nOur player calls `seekTo()` after receiving `CONTENT_RESUME_REQUESTED` from the `AdEventListener` to resume playback (from a previous session) after the first ad has played. Digging into why/if this is required on our side, but it seems `CONTENT_RESUME_REQUESTED` is firing before `ImaAdsLoader` has seen a timeline change.\r\n\r\nNot sure of the exact flow of events yet and how incorrect it is, but `ImaAdsLoader` could potentially try to be safer about the null possibility of `timeline` in `onPositionDiscontinuity` to avoid the exception, or notifying the listeners could log and skip listeners on exception rather than bubbling.\r\n\r\nUnsure what happened in 2.10.0 that caused this behaviour change, looks like we have seen the error in the past and ignored it, so potentially it's something as basic as the order of the listeners changing slightly so the exception is thrown before it's hit the important listener that drives the `READY` state change.\r\n\r\nStill digging but thought this might be helpful."
      },
      {
        "user": "tonihei",
        "created_at": "2019-07-05T10:50:42Z",
        "body": "Seems related to #5831 which is also caused by seeking before the first ad event arrives."
      },
      {
        "user": "dbrain",
        "created_at": "2019-07-05T12:32:26Z",
        "body": "Definitely seems related. The fix over there to change the order of listeners likely changed the behaviour for us in this scenario.\r\n\r\nThat being said the issue (NPE) presented itself in earlier versions, it just never effected the operation of the player in any noticeable way until 2.10.\r\n\r\nI'll dig into it a bit more over the next few days. Unsure if our seek call on content resume is timed incorrectly/necessary at all now (think it was a workaround for another issue), or if the `ImaAdsLoader` should be more error tolerant. Maybe a bit of both."
      },
      {
        "user": "dbrain",
        "created_at": "2019-07-06T11:16:00Z",
        "body": "So I think the issue is `CONTENT_RESUME_REQUESTED` is sometimes firing near instantly (before `onTimelineChanged` has fired) which is triggering our `seekTo` and triggering `ImaAdsLoader.onPositionDiscontinuity()` before it has a timeline causing an NPE.\r\n\r\nI'm pretty sure I can remove our code triggering the `seekTo`, which should prevent this issue for us. It was originally added as we showed some UI when the user was resuming playback to choose to start again or continue playing from where they left off, and showing it while the ad was playing didn't make sense (or work). We've since rejigged how resume works.\r\n\r\nI guess there's a larger question about if `notifyListeners` should die if one of the listeners is busted, or if `ImaAdsLoader.onPositionDiscontinuity` should be safer around how it uses potentially null variables (`timeline`).\r\n\r\n"
      },
      {
        "user": "andrewlewis",
        "created_at": "2019-09-27T11:15:11Z",
        "body": "@dbrain Sorry for the delay. Removing the call to `seekTo` sounds like a good idea -- did you try this, and do you still have any issues? It shouldn't be necessary to seek the player to restore state (if you seek before preparation we should play the right ad(s) if needed, and the timeline tracks the ad resume position for background/resume during an ad).\r\n\r\nSetting that aside, I think a couple of issues related to behavior at the start of playback with `ImaAdsLoader` were fixed recently, so if you still have problems it would be helpful if you could try to reproduce them on the development branch. Thanks."
      },
      {
        "user": "dbrain",
        "created_at": "2019-09-29T22:23:48Z",
        "body": "@andrewlewis Sorry, I also meant to respond to this. The issue went away when we removed the no longer needed code. It was originally added to support asking the user if they wanted to resume watching or restart while we perform the default action. When ads were added it became a bit awkward, as we didn't want to kick off a seek/show a snackbar mid ad etc so it was tied to the first `CONTENT_RESUME_REQUESTED`, which apparently sometimes fired before the player was ready.\r\n\r\nClosing this as the issue is no longer reproducible. Thanks!"
      }
    ]
  },
  {
    "number": 5899,
    "title": "in which callback i should release exoplayer when my app is deleted from opened app tray",
    "created_at": "2019-05-16T09:58:00Z",
    "closed_at": "2019-05-16T10:36:58Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5899",
    "body": "in which callback i should release exoplayer when my app is deleted from opened app stack tray.\r\ni need to play media if my app is in background but in opened app list . i have played from activity. so what is best way to play and release in this scenario. and i need to remove notification if my app is deleted from recently opened app tray?\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5899/comments",
    "author": "geeta4",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2019-05-16T10:36:58Z",
        "body": "I don't think you get a callback when the app is deleted from the app stack tray.\r\n\r\nPlease bear in mind we are a small team, and are unable to answer such a large volume of questions. Most of these questions are general Android development questions (i.e. they'd apply equally regardless of which media player you're using. Please direct such questions to StackOverflow. Thanks."
      }
    ]
  },
  {
    "number": 5897,
    "title": "playing media from ui and pushed notification using Playernotificationmanager with customactionreciever when app is in background then player will work all time and notification action will work all time",
    "created_at": "2019-05-16T08:54:42Z",
    "closed_at": "2019-05-16T10:38:37Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5897",
    "body": "Playing media from activity and pushed notification using Playernotificationmanager with customactionreciever. When app is in background then player will work all time and notification action will work all time. Is there will be any issue with playing media from notification after any time. Do i need service to work notification interaction all time? and what to do if i want to remove notification when app is deleted from recently opened app stack?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5897/comments",
    "author": "geeta4",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2019-05-16T10:38:37Z",
        "body": "If you want to play media in the background then you should use a `Service`. If you only need foreground playback, you do not.\r\n\r\nPlease bear in mind we are a small team, and are unable to answer such a large volume of questions. Most of these questions are general Android development questions (i.e. they'd apply equally regardless of which media player you're using. Please direct such questions to StackOverflow. Thanks."
      }
    ]
  },
  {
    "number": 5892,
    "title": "can you help to make a proof of concept",
    "created_at": "2019-05-15T17:44:07Z",
    "closed_at": "2019-05-15T18:03:51Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5892",
    "body": "I am not trying to be annoying or anything by opening another issue and **really respect and appreciate the work done by software developers**. and is I said in my last post in #5877  I am just **asking for proof of concept**. I just want you to give me a response. and even you said NO I can understand that because you're busy. I mean you are developing a piece of software used by millions of users. you work could not get more important than that \r\n\r\n<!-- DO NOT DELETE\r\nvalidate_template=true\r\ntemplate_path=.github/ISSUE_TEMPLATE/question.md\r\n-->\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5892/comments",
    "author": "rtx2080tix",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2019-05-15T18:03:51Z",
        "body": "This is outside the scope of this issue tracker, sorry."
      },
      {
        "user": "rtx2080tix",
        "created_at": "2019-05-15T18:51:51Z",
        "body": "\r\n\r\n\r\n\r\n> This is outside the scope of this issue tracker, sorry.\r\n\r\n\r\nthat is unfortunate but fine. I can understand why you want the issue tracker to be organised and to stay relevant and on topic. and to be honest I was expecting something like that because I was getting a bit out of the scope of this issue tracker. but I just want to give it a try. and finally, thank you for the response "
      }
    ]
  },
  {
    "number": 5884,
    "title": "\"cannot resolve symbol: util\" in ExoPlayer 2.6.1 - previously worked fine",
    "created_at": "2019-05-13T21:37:25Z",
    "closed_at": "2019-05-15T15:17:36Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5884",
    "body": "Since a few days ago, our projects that use ExoPlayer 2.6.1 no longer compile. Android Studio now gives a `cannot resolve symbol: util` error even though they have previously compiled without problems.\r\n\r\n**Steps to reproduce:**\r\n\r\n1. Create a new project in Android Studio.\r\n2. Add ExoPlayer 2.6.1 as a build dependency by putting `implementation 'com.google.android.exoplayer:exoplayer:2.6.1'` in the `build.gradle` file for the application module.\r\n3. Create a new Java class and import the `com.google.android.exoplayer2.util.Util` package.\r\n\r\n**Expected behavior:**\r\n\r\nGradle should sync and the app should compile.\r\n\r\n**Actual behavior:**\r\n\r\nAndroid Studio throws up a `cannot find symbol: util` error. Changing the Gradle import to\r\n\r\n```\r\nimplementation 'com.google.android.exoplayer:exoplayer-core:2.6.1'\r\nimplementation 'com.google.android.exoplayer:exoplayer-hls:2.6.1'\r\n\r\n```\r\nresolves the problem.\r\n\r\nAs I mentioned earlier, our projects that use ExoPlayer 2.6.1 previously worked without any issues. The repository shows that ExoPlayer 2.6.1 does have a `util` folder. Has there been a change in the Gradle package?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5884/comments",
    "author": "ixfd64",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2019-05-14T09:07:43Z",
        "body": "That sounds odd indeed. Since you haven't changed the ExoPlayer version it seems to me that it can't be a problem caused by ExoPlayer as there is no change of it.\r\n\r\nDid you change something else like updated Android Studio or Gradle Version of you project?\r\nWhat versions of Android Studio and gradle are you using?\r\n\r\nIn general I'd recommend to use the most recent version of everything, like ExoPlayer, Android Studio and Gradle."
      },
      {
        "user": "ixfd64",
        "created_at": "2019-05-14T18:56:24Z",
        "body": "Thanks for your response. After further investigation, I found that the issue appears to be caused by an incompatibility with Gradle. The error went away after I downgraded back to an earlier Gradle version.\r\n\r\nFor the record, later ExoPlayer versions don't seem to have this problem."
      },
      {
        "user": "voghDev",
        "created_at": "2019-05-29T12:39:11Z",
        "body": "I'm having the same error. As @ixfd64 said, I could workaround it by downgrading Gradle Android plugin from `3.4.0` to `3.2.0` and gradle-wrapper.properties from `5.1.1` to `4.10.1`. This is the last configuration that worked\r\n\r\n*build.gradle*\r\n```\r\nbuildscript {\r\n    repositories {\r\n        google()\r\n        jcenter()\r\n    }\r\n    dependencies {\r\n        classpath 'com.android.tools.build:gradle:3.2.0'\r\n        // ...\r\n    }\r\n}\r\n```\r\n\r\n*gradle-wrapper.properties*\r\n`distributionUrl=https\\://services.gradle.org/distributions/gradle-4.10.1-all.zip`\r\n\r\n*app/build.gradle*\r\n`implementation 'com.google.android.exoplayer:exoplayer:r2.5.3'`\r\n\r\nAfter downgrading Gradle, exoplayer versions `r2.5.2`, `r2.5.3`, `r2.5.4` seem to work fine, but none of them works with Gradle `3.4.0` - gradle-wrapper `5.1.1`.\r\nHas anyone found a way to make it work after upgrading Gradle?\r\n\r\nThanks in advance!"
      },
      {
        "user": "cpienovi",
        "created_at": "2019-06-21T16:47:27Z",
        "body": "I'm facing the exact same issue as @voghDev and couldn't find any solution other than downgrading Gradle version"
      },
      {
        "user": "voghDev",
        "created_at": "2019-06-24T06:03:16Z",
        "body": "@ixfd64 could you please provide some extra information such as the versions of Gradle, gradle-wrapper, Android Studio you're using, so @marcbaechinger or anyone who is reviewing this can do a deeper research? :) thx"
      },
      {
        "user": "ixfd64",
        "created_at": "2019-06-24T22:05:19Z",
        "body": "I'm using the following versions:\r\n\r\nAndroid Studio 3.4\r\nGradle plug-in 2.3.3 (downgraded from latest)\r\nGradle 4.1 (downgraded from latest)\r\n"
      }
    ]
  },
  {
    "number": 5880,
    "title": "Downloading same videos independently ",
    "created_at": "2019-05-13T10:06:23Z",
    "closed_at": "2019-05-13T10:54:53Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5880",
    "body": "### Searched documentation and issues\r\nChecked CacheKeyFactory documentation, searched for similar questions.\r\n\r\n### Question\r\nDue to constraints on our testing environment we have several assets pointing to exactly the same Dash manifest url. We want these assets to be downloaded / deleted independently.  Currently, each DataSpec is saved to cache with key = dataspec.url.toString(). Therefore, when we try to download asset with the same url, it completes immediately. Things get even worse when we remove one of the assets: cached data is wiped out and is no longer available for another asset.  \r\nCould you suggest workaround for that? Tried to introduce custom cache key factory, but this solution does not work because some operations which use Cache might be executed in parallel (downloading, removal, playback from cache). Thanks in advance.\r\n \r\n\r\n```\r\nclass StateFullCacheKeyFactory : CacheKeyFactory {\r\n\r\n    private var downloadId: String? = null\r\n\r\n    fun setDownloadId(downloadId: String) {\r\n        this.downloadId = downloadId\r\n    }\r\n\r\n    override fun buildCacheKey(dataSpec: DataSpec): String {\r\n        val originalKey = if (dataSpec.key != null) {\r\n            dataSpec.key\r\n        } else {\r\n            dataSpec.uri.toString()\r\n        }\r\n        return if (downloadId == null) originalKey!! else \"$originalKey&$downloadId\"\r\n    }\r\n}\r\n\r\n```\r\n\r\n<!-- DO NOT DELETE\r\nvalidate_template=true\r\ntemplate_path=.github/ISSUE_TEMPLATE/question.md\r\n-->\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5880/comments",
    "author": "bychkovdmitry",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2019-05-13T10:54:53Z",
        "body": "> Due to constraints on our testing environment we have several assets pointing to exactly the same Dash manifest url\r\n\r\nI think you just need to fix your testing environment, because this sounds kinda broken. By definition (from Wikipedia):\r\n\r\n> A Uniform Resource Identifier (URI) is a string of characters that **unambiguously** identifies a particular resource"
      }
    ]
  },
  {
    "number": 5877,
    "title": "how exoplayer use or talk to hardware composer",
    "created_at": "2019-05-13T04:43:16Z",
    "closed_at": "2019-05-13T08:08:13Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5877",
    "body": "### Searched documentation and issues\r\nI have an android tv but it has a problem the contrast and the gama setting  apply only when viewing video using exoplayer framework that mean youtube and Netflix and even exoplayer demo on play store but anything that doesn't use exoplayer fretwork have a bit of a pale color that is solid and fixer that doesn't change no matter what gama setting I choose I know what you think I should contact the manufacturer about my problem to fix the problem for me but they did not respond and if you can't patch your system to fix the problem and I don't have root access I should patch the apps (the open source of course) and **compile them myself** I have been trying to fixing the problem and doing my research for a whole week so this is what I found\r\n \r\nwhen I enable the (disable hardware overlays) (setting from developer options) the hardware overlay aka hardware composer\r\nanything uses exoplayer will display a black screen and would  not show the video output that means the exoplayer user the hardware composer \r\nwhen  using any app what use exoplayer framework  **dumpsys SurfaceFlinger**\r\n\r\n`SurfaceView - com.google.android.you[...]s.youtube.tv.activity.MainActivity#1\r\n 4294967294 |  Device |    0    0 1280  720 |    0.0    0.0 1920.0 1080.0\r\n com.google.android.youtube.tv/com.go[...]s.youtube.tv.activity.MainActivity#0\r\n ------21015 |   Client |    0    0 1280  720 |    0.0    0.0 1920.0 1080.0\r\nh/w composer state:\r\nh/w composer enabled\r\nVideo Composer\r\nVSC[0]: type = dvo(2), layer=0xafbc16d8\r\nconnected: 1`\r\nand the logcat out put is \r\n`OMX_VDEC: consumer-usage: hwc, usage=0x900, adaptive=1\r\n-------------------------------------OMX_VDEC: update port mode: RAW_ANB -> DVO_ANB\r\nOMX_VDEC: get-usage: 0xc400030`\r\nbut when using anything that doesn't use explayre framework such as vlc the **dumpsys SurfaceFlinger is \r\n`SurfaceView - org.videolan.vlc/org.v[...].vlc.gui.video.VideoPlayerActivity#1\r\n 4294967294 |     Client |    0    0 1280  720 |    0.0    0.0 1920.0 1080.0\r\nh/w composer state:\r\nh/w composer enabled\r\nVideo Composer\r\n VSC[0]: type = none(0),`\r\nand the logcat is \r\n`OMX_VDEC: update port mode: RAW -> RAW`\r\nand I even found in the logcat this when running vlc that further proves my theory\r\n`OMX_GRALLOC: lock YCbCr`\r\nit is a loked color space \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n###  Question\r\nsince I can't patch the system and I don't have root access and the manufacturer did not respond to me my only option to patch the apps to behave like exoplayer os their colors will be correct. I know it is not the most efficient option to compile and patch the apps but it is better than nothing I need to use hardwear composer because it is the only layer that has color effects apply on it so my Question is **how exoplayer use hardwear composer** os I can mimic the behavior on other apps\r\n\r\n<!-- DO NOT DELETE\r\nvalidate_template=true\r\ntemplate_path=.github/ISSUE_TEMPLATE/question.md\r\n-->\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5877/comments",
    "author": "rtx2080tix",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2019-05-13T08:08:13Z",
        "body": "ExoPlayer is built on Android media framework components and doesn't have any special access to hardware compositing. When using `MediaCodecVideoRenderer`, we configure a `MediaCodec` to render to the surface provided by the app, which normally comes from a `SurfaceView`. Any app can in principle implement the same kind of decoding/rendering setup."
      },
      {
        "user": "rtx2080tix",
        "created_at": "2019-05-14T00:51:14Z",
        "body": "thank you for your response I know a bit about programming. but can you help me to learn how to implement in other apps . if I asked you to help implement it in vlc that would be wrong because you don't know how vlc work to render the video and I looked at their code and it looked different from exoplayer code and I know to programmers can write the same functionality using two different ways to phrasing their code or using  different libraries so I need you to help me to implement it a simple program like one of the sample programs for beginners in android development that play video source over http (probably a Big Buck Bunny video) and test if the implementation of mimicking exoplayer behavior had made any difference if it made any different it will be a **proof of concept** and that I am on the right way and if I am on the right way my work here is done and I will try to implement in on every open source app I use and I know it will be hard because it is not just copying the code and  pasting and compiling it but it will be worth the effort if I am on the right way so **can you help me to do a proof of concept** please"
      }
    ]
  },
  {
    "number": 5874,
    "title": "Pause / Resume a single download",
    "created_at": "2019-05-12T03:04:05Z",
    "closed_at": "2019-05-12T20:38:01Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5874",
    "body": "I have searched on the docs and the examples, and can't find a way to pause and resume a single download only all the downloads. Is there a way to do this, or is not supported yet? If not, is going to be supported anytime soon.\r\n\r\nThanks.\r\n\r\n<!-- DO NOT DELETE\r\nvalidate_template=true\r\ntemplate_path=.github/ISSUE_TEMPLATE/question.md\r\n-->\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5874/comments",
    "author": "mv03790",
    "comments": [
      {
        "user": "google-oss-bot",
        "created_at": "2019-05-12T03:04:06Z",
        "body": "This issue does not seem to follow the issue template. Make sure you provide all the required information."
      },
      {
        "user": "mv03790",
        "created_at": "2019-05-12T03:39:43Z",
        "body": "Sorry, as I see in the code and tested, stopping a download is like pausing it, it doesn't remove the downloaded progress, and can be restarted by clearing the stopreason;\r\n\r\nPlease close this."
      }
    ]
  },
  {
    "number": 5871,
    "title": "Is there an eventListener for subtitles?",
    "created_at": "2019-05-10T12:30:37Z",
    "closed_at": "2019-05-12T20:38:30Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5871",
    "body": "I figured how to load subtitle and merge with `MediaSource`.\r\n\r\nBut I'm wondering if there is an eventListner for loading subtitles.\r\nHere's how I load subtitle\r\n\r\n```\r\nSingleSampleMediaSource.Factory(DefaultHttpDataSourceFactory(\"ua\"))\r\n   .createMediaSource(Uri.parse( subtitleUri ), vttFormat, C.TIME_UNSET)\r\n```\r\n\r\nHow can I set the loadFailedListener....?\r\n\r\n\r\nThank you !",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5871/comments",
    "author": "BROUDING",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2019-05-10T19:47:15Z",
        "body": "There is another `createMediaSource` method which offers two additional parameters which are a `Handler` and a `MediaSourceEventListener`. Is this what you are looking for?\r\n\r\n```\r\npublic SingleSampleMediaSource createMediaSource(\r\n        Uri uri,\r\n        Format format,\r\n        long durationUs,\r\n        @Nullable Handler eventHandler,\r\n        @Nullable MediaSourceEventListener eventListener) \r\n```"
      },
      {
        "user": "BROUDING",
        "created_at": "2019-05-11T01:15:05Z",
        "body": "That should work, thank you!"
      }
    ]
  },
  {
    "number": 5864,
    "title": "Dash with \"Unmatched track of type\" Problem",
    "created_at": "2019-05-10T03:55:16Z",
    "closed_at": "2019-05-15T09:20:05Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5864",
    "body": "Hi,\r\n\r\nSorry for poor English.\r\n\r\n### Content description\r\nI play video use DASH and DRM.\r\nCan play the movie normally.\r\nbut when i turn on the HTTP CACHE ,\r\ncan't play video with error log \r\n`BaseMediaChunkOutput :Unmatched track of type:  1 ` or\r\n`BaseMediaChunkOutput :Unmatched track of type:  2` .\r\nI see the EventLogger onLoadCompleted , the mpd and chunk nothing strange.\r\nWhy will this heppend, please for help,thanks.\r\n\r\n### Version of ExoPlayer being used\r\nVersion of ExoPlayer is 2.9.6 \r\n\r\n### Device(s) and version(s) of Android being used\r\nLg g6 running Android 8.0.0\r\n\r\n<!-- DO NOT DELETE\r\nvalidate_template=true\r\ntemplate_path=.github/ISSUE_TEMPLATE/content_not_playing.md\r\n-->\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5864/comments",
    "author": "wow5109",
    "comments": [
      {
        "user": "google-oss-bot",
        "created_at": "2019-05-10T03:55:17Z",
        "body": "This issue does not seem to follow the issue template. Make sure you provide all the required information."
      },
      {
        "user": "marcbaechinger",
        "created_at": "2019-05-10T17:26:20Z",
        "body": "You are mentioning HTTP CACHE. Do you mean you are using a CacheDataSource wrapped around your data source?\r\n\r\nCan you provide us with a content url and a bug report which has been taken right after the problem occurs? This way we can look into the logs ourself.\r\n"
      },
      {
        "user": "wow5109",
        "created_at": "2019-05-15T02:37:08Z",
        "body": "@marcbaechinger \r\ni email to telecom carrier , they change the CDN setting,\r\nthen solve my problem .\r\nThanks for reply."
      }
    ]
  },
  {
    "number": 5849,
    "title": "Not playing media of specific index in ConcatenatedMediaSource",
    "created_at": "2019-05-08T09:55:36Z",
    "closed_at": "2019-05-15T21:03:50Z",
    "labels": [
      "question",
      "need more info"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5849",
    "body": "always playing from 0 index not given index\r\n\r\n```\r\n  int length = mediaMetaDataArrayList.size();\r\n            MediaSource[] mediaSources = new MediaSource[length];\r\n            for (int i = 0; i < length; i++) {\r\n                MediaMetaData mediaMetaData = mediaMetaDataArrayList.get(i);\r\n                mediaSources[i] = new ExtractorMediaSource(\r\n                        Uri.parse(mediaMetaData.getMediaUrl()), // file audio ada di folder assets\r\n                        new DefaultDataSourceFactory(AppController.getInstance(), userAgent),\r\n                        new DefaultExtractorsFactory(),\r\n                        null,\r\n                        null\r\n                );\r\n            }\r\n\r\n            concatenatingMediaSource = new ConcatenatingMediaSource(mediaSources);\r\n\r\n            simpleExoPlayer.prepare(concatenatingMediaSource);\r\n\r\n simpleExoPlayer.seekTo(currentIndex,currentSeekPos);\r\n```",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5849/comments",
    "author": "geeta4",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2019-05-08T16:24:21Z",
        "body": "The code seems about right. I'd use the `ExtractorMediaSource.Factory` to create the media source instead of calling the constructor directly. However, I don't think this causes the issue. I'd be surprised if this is a bug in ExoPlayer though. \r\n\r\nThe code snippet does not tell what's the value of `currentIndex` and `currentSeekPos`. Can you double check what the values of these variables are. Maybe try using a hardcoded value if in doubt like \r\n\r\n```\r\nsimpleExoPlayer.seekTo(length - 1,  C.TIME_UNSET);\r\n```"
      },
      {
        "user": "ojw28",
        "created_at": "2019-05-15T21:03:49Z",
        "body": "Closing due to lack of follow-up."
      }
    ]
  },
  {
    "number": 5843,
    "title": "Updated concatenatingMediaSource is not called ",
    "created_at": "2019-05-07T07:32:10Z",
    "closed_at": "2019-06-17T14:12:02Z",
    "labels": [
      "question",
      "need more info"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5843",
    "body": " \r\nI am trying to add  a media file to play next after the current song that is being played\r\n\r\nthe first  concatenatingMediaSource  already contains few media files like [a,b,c,d,e,f]\r\n\r\ncurrently say file 'c'  is playing\r\n\r\nso now for example if I want to add a new file (g) , to play after the current file c , \r\n\r\nfor that I am using this \r\n\r\n```\r\nmediaSource = new ExtractorMediaSource.\r\n   Factory(dataSourceFactory).createMediaSource(Uri.parse(song._path));\r\nconcatenatingMediaSource.addMediaSource(playnextid,mediaSource,() -> Log.d(\"\", \r\n   String.valueOf(player.getCurrentWindowIndex())));\r\n```\r\nhowever the file is not added to that position  \r\n\r\nso when we press next it should play file(g)  but instead it plays (d) as it was originally supposed to be in the old  concatenatingMediaSource \r\n\r\n(i tried adding player.prepare(concatenatingMediaSource)) again after the song was added but the player stopped and restarted with same old (concatenatingMediaSource)\r\n\r\nthe question really is how to update concatenatingMediaSource in runtime without having to prepare new concatenatingMediaSource and restarting the player again \r\n\r\n \r\n\r\n<!-- DO NOT DELETE\r\nvalidate_template=true\r\ntemplate_path=.github/ISSUE_TEMPLATE/question.md\r\n-->\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5843/comments",
    "author": "pawaom",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2019-05-07T17:04:20Z",
        "body": "I'd also expect this to work, and you are right that you don't need to call prepare again. Once the player is prepared with a `ConcatenatingMediaSource` you can just add media sources as you did. \r\n\r\nMay I kindly ask you to review your code again or provide a little but more information what you are doing?"
      },
      {
        "user": "marcbaechinger",
        "created_at": "2019-06-17T14:12:02Z",
        "body": "Closing due to inactivity. Please reopen if needed."
      }
    ]
  },
  {
    "number": 5835,
    "title": "tv android5.1 not playing",
    "created_at": "2019-05-06T02:18:05Z",
    "closed_at": "2019-06-17T14:09:38Z",
    "labels": [
      "question",
      "need more info"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5835",
    "body": " in Android TV, The cache bar is loaded，but video not playing. But this video normal playing on phones and tablets.\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5835/comments",
    "author": "parks1234",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2019-05-07T16:38:48Z",
        "body": "Can you please provide us with a sample stream url and some more information around the device you are using? "
      },
      {
        "user": "marcbaechinger",
        "created_at": "2019-06-17T14:09:38Z",
        "body": "Closing due to inactivity. Please reopen if you have provided more info."
      }
    ]
  },
  {
    "number": 5834,
    "title": "Want to show video time reverse counter on exoplayer in android",
    "created_at": "2019-05-05T20:05:25Z",
    "closed_at": "2019-05-14T11:48:36Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5834",
    "body": "I'm creating social media application using exoplayer in android, and I want to play the video by showing a reverse counter of remaining time on play.  ",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5834/comments",
    "author": "ganeshgarad",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2019-05-14T11:48:36Z",
        "body": "You can query the player for its duration and current playback position, and you can build your own UI to display one minus the other. So there's nothing stopping you from implementing this yourself. Doing so falls outside the scope of this issue tracker, however."
      }
    ]
  },
  {
    "number": 5824,
    "title": "Get video url as soon as new video plays in playlist android",
    "created_at": "2019-05-03T10:44:05Z",
    "closed_at": "2019-05-06T00:59:11Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5824",
    "body": "I'm creating an analytics sdk which requires to collect stream details using exoplayer listeners. \r\nIn a playlist scenario I want to get the video url of the video currently playing. As soon as a next video starts in a playlist I need a callback which gives information of the new stream url.\r\n\r\nPlease let me know if there is a way to get this stream url without having the app to pass the array of playlist urls to my sdk.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5824/comments",
    "author": "akanksha-hegde",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2019-05-03T10:49:22Z",
        "body": "The easiest way is to set the tag of each `MediaSource` in the playlist to the stream url. There is a `setTag` method on all `MediaSource` builder classes for that.\r\n\r\nYou will get a `onPositionDiscontinuity` callback with reason `DISCONTINUITY_REASON_PERIOD_TRANSITION` every time the player automatically transitions from one content to the next. You can check the `player.getCurrentTag()` in this callback to get the tag of the currently playing item. This would be the stream url if you set it as the tag as described above."
      }
    ]
  },
  {
    "number": 5817,
    "title": "FFmpeg transcoding",
    "created_at": "2019-04-30T04:30:30Z",
    "closed_at": "2019-04-30T07:33:17Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5817",
    "body": "### [REQUIRED] Searched documentation and issues\r\nDid not find any post related to transcoding in documentation or issues.\r\n\r\n### [REQUIRED] Question\r\nI am trying to implement playback audio transcoding using the FFmpeg extension: my goal would be to read a video with DTS audio and transcode to AC3 audio (thanks Sonos). This would allow me to keep a 5.1 format instead of downscaling to PCM.\r\n\r\nI compiled ffmpeg by adding --enable-encoder=ac3 and try to update FFmpegAudioRenderer.getOutputFormat by:\r\n- setting encoding to ENCODE_AC3\r\n- setting the mime type accordingly\r\n\r\nBut this does not work: video playback does not start. Is this even possible? If yes, what am I doing wrong?\r\n\r\nThanks\r\n\r\n<!-- DO NOT DELETE\r\nvalidate_template=true\r\ntemplate_path=.github/ISSUE_TEMPLATE/question.md\r\n-->\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5817/comments",
    "author": "nbonamy",
    "comments": [
      {
        "user": "google-oss-bot",
        "created_at": "2019-04-30T04:30:30Z",
        "body": "This issue does not seem to follow the issue template. Make sure you provide all the required information."
      },
      {
        "user": "andrewlewis",
        "created_at": "2019-04-30T07:33:17Z",
        "body": "I'm afraid it's not possible as things stand. The ffmpeg extension is designed for decoding to PCM only (not encoding)."
      },
      {
        "user": "nbonamy",
        "created_at": "2019-05-01T20:40:43Z",
        "body": "@andrewlewis Is it a big change? If anyone can give some high level guidelines I can try my luck on it."
      },
      {
        "user": "andrewlewis",
        "created_at": "2019-05-02T17:21:06Z",
        "body": "At a high level I think you'll need a custom audio renderer that can output the AC-3 encoded data to the DefaultAudioSink (FfmpegAudioRenderer is designed to output PCM always, but you can probably use it as a starting point). For the transcoding part I'd start by forking the native part of the FFmpeg extension and figure out how to use FFmpeg's encoding APIs to process the PCM output that is currently generated in there. It's not in scope for this tracker to go into more detail I'm afraid."
      }
    ]
  },
  {
    "number": 5803,
    "title": "How Can Get Subtitle Text in Every Frame",
    "created_at": "2019-04-25T09:01:13Z",
    "closed_at": "2019-04-28T21:25:36Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5803",
    "body": "Hello\r\ni prepare a subtitle view and show my subtitle in exoplayer.\r\nnow i want to get subtitle text in ever frame and show it in a Text View How Can i do That?\r\nThanks",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5803/comments",
    "author": "moradi-morteza",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2019-04-28T21:25:36Z",
        "body": "You can use `SimpleExoPlayer.addTextOutput` to register a listener that will receive an event whenever the subtitle text changes.\r\n\r\n"
      }
    ]
  },
  {
    "number": 5798,
    "title": "How to remove PlayerNotificationManager when playlist arrive some track ?",
    "created_at": "2019-04-24T13:20:49Z",
    "closed_at": "2019-05-21T09:09:13Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5798",
    "body": "I have some mediasource in ConcatenatingMediaSource that are non playable and I update my Player view to show a button. I want to remove notification of my service for these item. I detect these non playable mediasource in the onPlayerError listener. \r\n\r\n```@Override\r\n        public void onPlayerError(ExoPlaybackException error) {\r\n\r\n            switch (error.type) {\r\n                case ExoPlaybackException.TYPE_SOURCE:\r\n                    String myError=error.getSourceException().getMessage();\r\n                    if (myError.contains(\"Response code: 404\") ||\r\n                            myError.contains(\"pdf\") ||\r\n                            myError.contains(\"None of the available extractors (MatroskaExtractor, FragmentedMp4Extractor, Mp4Extractor, Mp3Extractor, AdtsExtractor, Ac3Extractor, TsExtractor, FlvExtractor, OggExtractor, PsExtractor, WavExtractor, AmrExtractor) could read the stream.\")) {\r\n                        isDocument = true;\r\n                        Intent intent=new Intent(BaseExoWithServiceActivity.this,PlayerService.class);\r\n                        intent.putExtra(ACTION_SHOW_NOTIFICATION,2);\r\n                        startService(intent);\r\n                        updateButtonVisibilities(true);\r\n                        return;\r\n                    } \r\n            }\r\n        }\r\n```\r\nAnd in the PlayerService I write it :\r\n```\r\n   @Override\r\n    public int onStartCommand(Intent intent, int flags, int startId) {\r\n        if (intent != null) {\r\n            int action = intent.getIntExtra(ACTION_SHOW_NOTIFICATION, -1);\r\n            switch (action) {\r\n                case 2:\r\n                    Log.e(TAG,\"stop case\");\r\n                    stopForeground(true);\r\n                    stopSelf();\r\n                    break;\r\n                default:\r\n                    Log.e(TAG, \"default\");\r\n                    break;\r\n\r\n            }\r\n        }\r\n        return START_NOT_STICKY;\r\n    }\r\n```\r\nBut in some times this solution didn't work. ",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5798/comments",
    "author": "makazemi",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2019-04-24T14:53:23Z",
        "body": "You are saying it does sometimes not work. Do you mean that the notification is not always removed? I actually think calling `stopForeground(true)` seems about right to remove the notification. \r\n\r\nTo make the PlayerNotificationManager remove the notification, you can in case 2) call `playerNotificationManager.setPlayer(null)` which will make the manager remove the notification and call `NotificationListener.onNotificationCancelled`.\r\n\r\n```\r\n@Override\r\n    public int onStartCommand(Intent intent, int flags, int startId) {\r\n        if (intent != null) {\r\n            int action = intent.getIntExtra(ACTION_SHOW_NOTIFICATION, -1);\r\n            switch (action) {\r\n                case 2:\r\n                    Log.e(TAG,\"stop case\");\r\n                    playerNotificationManager.setPlayer(null);\r\n                    break;\r\n                default:\r\n                    Log.e(TAG, \"default\");\r\n                    break;\r\n\r\n            }\r\n        }\r\n        return START_NOT_STICKY;\r\n    }\r\n\r\nnew PlayerNotificationManager.NotificationListener() {\r\n  @Override\r\n  public void onNotificationCancelled(int notificationId, boolean dismissedByUser) {\r\n     stopForeground(false);\r\n     stopSelf();\r\n  }\r\n};\r\n\r\n```"
      },
      {
        "user": "marcbaechinger",
        "created_at": "2019-05-21T09:09:13Z",
        "body": "Closing issue due to inactivity."
      },
      {
        "user": "adam-hurwitz",
        "created_at": "2019-06-07T01:54:39Z",
        "body": "In addition to `playerNotificationManager.setPlayer(null)` in `onStartCommand(...)` the  `SimpleExoPlayer` instance needs to be set to false `player.playWhenReady = false` in order to stop playing.\r\n\r\n    override fun onStartCommand(intent: Intent?, flags: Int, startId: Int): Int {\r\n        intent?.let {\r\n            when (it.getStringExtra(PLAYER_KEY)) {\r\n                PAUSE.name -> player.playWhenReady = false\r\n                PLAY.name -> player.playWhenReady = true\r\n                STOP.name -> {\r\n                    player.playWhenReady = false\r\n                    playerNotificationManager.setPlayer(null)\r\n                }\r\n            }"
      }
    ]
  },
  {
    "number": 5791,
    "title": "playlist with PagedList(AAC)",
    "created_at": "2019-04-23T08:07:28Z",
    "closed_at": "2019-04-30T10:45:01Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5791",
    "body": "\r\n### [REQUIRED] Searched documentation and issues\r\nI found playlist feature can be implemented using ConcatenatingMediaSource class which be added MediaSource instance.\r\n\r\n\r\n### [REQUIRED] Question\r\nHi, I'm implementing playlist feature that has about 700 songs.\r\nI've implemented using ConcatenatingMediaSource instance.\r\nBut it require to instantiate HlsMediaSource instance about 700 times at once to add there .\r\n\r\nI use PageList class(AAC) to show playlist in view. \r\nIs there any way to use the pageList to exoplayer playlist feature.\r\n\r\nIs any advice in this scenario?\r\n\r\n<!-- DO NOT DELETE\r\nvalidate_template=true\r\ntemplate_path=.github/ISSUE_TEMPLATE/question.md\r\n-->\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5791/comments",
    "author": "simpler23",
    "comments": [
      {
        "user": "AquilesCanta",
        "created_at": "2019-04-25T10:35:52Z",
        "body": "@tonihei can you provide advise here?"
      },
      {
        "user": "tonihei",
        "created_at": "2019-04-25T14:59:12Z",
        "body": "I think the easiest solution is to create all 700 MediaSources and set the `useLazyPreparation` parameter is the constructor to `true`. This causes the source to not prepare all HLS sources at once but only if they are actually needed. This way the index in the playlist can also stay the same as the index in your PagedList and you don't need any extra logic. "
      },
      {
        "user": "simpler23",
        "created_at": "2019-04-26T14:38:14Z",
        "body": "Thank you for sharing your tip!\r\nBut I worry about instantiating 700 objects at once that might not be used.\r\nIs it fine in memory perspective?"
      },
      {
        "user": "tonihei",
        "created_at": "2019-04-29T09:06:11Z",
        "body": "That shouldn't be an issue. I just tested creating 700 HlsMediaSource and they use up only 233 KB  of memory."
      },
      {
        "user": "tonihei",
        "created_at": "2019-04-30T10:44:59Z",
        "body": "Closing, because the question has been answered."
      },
      {
        "user": "simpler23",
        "created_at": "2019-05-01T10:52:54Z",
        "body": "Thank you for the answers!!"
      }
    ]
  },
  {
    "number": 5790,
    "title": "Video Not pausing after focus change",
    "created_at": "2019-04-23T05:38:06Z",
    "closed_at": "2019-05-02T07:48:57Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5790",
    "body": "I'm using this library in recycler view for social media which contain image and video post. But when focus change on video it is not stopping or continuously playing in background. Application need to stop video when focus not on this video. \r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5790/comments",
    "author": "ganeshgarad",
    "comments": [
      {
        "user": "nitinglobal",
        "created_at": "2019-04-23T08:31:20Z",
        "body": "@ganeshgarad  which lib  version you are using ? from 2.9.0 exoplayer can handle the focus automatically with small piece of code where you need to set the audio attribute."
      },
      {
        "user": "ganeshgarad",
        "created_at": "2019-04-23T10:10:00Z",
        "body": "2.9.2"
      },
      {
        "user": "ojw28",
        "created_at": "2019-04-23T11:16:25Z",
        "body": "It's unclear what this question is about. What type of focus are you talking about? If you're talking about UI focus (e.g. the view holding the video is scrolled so it's no longer visible), then you need to handle this yourself (i.e. by detecting when the player should be stopped, and calling appropriate methods on the player to stop it)."
      }
    ]
  },
  {
    "number": 5783,
    "title": "Correctly detect pause event when using PlayerControlView",
    "created_at": "2019-04-19T11:15:16Z",
    "closed_at": "2019-05-06T00:12:56Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5783",
    "body": "### [REQUIRED] Searched documentation and issues\r\n- Searched all issues, but did not find the answer. #2627  #3397\r\n\r\n\r\n### [REQUIRED] Question\r\nDescribe your question in detail.\r\n\r\n<!-- DO NOT DELETE\r\nvalidate_template=true\r\ntemplate_path=.github/ISSUE_TEMPLATE/question.md\r\n-->\r\n\r\nWhen Using PlayerControlView How to properly detect Pause event?\r\n        Can we intercept play, pause, rewind, fastforward, previous, next and seek before and then pass/call the default behaviour?\r\n\r\n When using Player.EventListener onPlayerStateChanged to detect pause, **Pause is also triggered when rewind, ff, next, previous and seek**\r\n\r\n    case Player.STATE_READY:\r\n        status = playWhenReady ? PlaybackStatus.PLAYING : PlaybackStatus.PAUSED;\r\n\r\n         if (status.equals(PlaybackStatus.PAUSED)) {\r\n            //Timber.d(\"PPPPPPAAAAAAUUUUUUSSSSSSEEEEEE\");\r\n         }\r\n         break; \r\n\r\nAlso there is no way to add clickListeners on exo controller UI components for `exo_rew, exo_ff, exo_play, exo_pause` etc... If I override it, then I loose the default behavior and click events does not work.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5783/comments",
    "author": "rinav",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2019-04-23T16:43:23Z",
        "body": "Does this do what you need:\r\n```\r\nplayerView.setControlDispatcher(new DefaultControlDispatcher() {\r\n  @Override\r\n  public boolean dispatchSetPlayWhenReady(Player player, boolean playWhenReady) {\r\n    // You can modify this code to call through to the player or not.\r\n    player.setPlayWhenReady(playWhenReady);\r\n    // Return true if you called through to the player, and false otherwise.\r\n    return true;\r\n  }\r\n});\r\n```\r\nNote you can also override other methods in `DefaultControlDispatcher` to intercept other types of calls on the player."
      }
    ]
  },
  {
    "number": 5781,
    "title": "Different Location played by two Players with one position provided",
    "created_at": "2019-04-19T08:15:11Z",
    "closed_at": "2019-04-24T11:09:26Z",
    "labels": [
      "question",
      "need more info"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5781",
    "body": "Hello.\r\n\r\nI am using Version 2.9.4, the latest version and I am running 2 players (A and B player). The scenario is simple; A player runs and a certain event happens, then the position of A player with an additional value, for instance, 100ms, ( that is, \"next position\" = current A's position + 100ms) is provided to B player. B player is in Pause state till the next position is arrived by A player. When the A player arrives at the position, B player do the \"seek to the position & start\".  I am using the default Seek Parameter. \r\n\r\nWhen doing this test, I recognize B player is playing always a little bit lagged frame, comparing to the frame A player was showing at \"the next position\". The amount of lagging time is about 100 ~ 200ms. Is there something I need to do to compensate the current position of A or B player? Do I have to put an additional time (position in ms) to B player? Please help me out.\r\n\r\nThanks\r\nTasik",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5781/comments",
    "author": "AlphaCircle",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2019-04-23T17:06:44Z",
        "body": "I think you'd need to provide a small demo app (shared as source on GitHub) for us to be able to reproduce the problem and assist further."
      },
      {
        "user": "AlphaCircle",
        "created_at": "2019-04-24T11:09:26Z",
        "body": "Hello ojw28\r\nI dug out this application and found that there is mistake in the media file. So I asked the person to regenerate the file with the supporting audio sampling and bit rate. This is not an issue of Exoplayer. \r\n\r\nThanks for your support.\r\n\r\n"
      }
    ]
  },
  {
    "number": 5777,
    "title": "Long Delay happens after seek",
    "created_at": "2019-04-18T09:32:09Z",
    "closed_at": "2019-05-16T11:20:29Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5777",
    "body": "### [REQUIRED] Searched documentation and issues\r\nTell us where you’ve already looked for an answer to your question. It’s\r\nimportant for us to know this so that we can improve our documentation.\r\n\r\n### [REQUIRED] Question\r\nDescribe your question in detail.\r\n\r\n<!-- DO NOT DELETE\r\nvalidate_template=true\r\ntemplate_path=.github/ISSUE_TEMPLATE/question.md\r\n-->\r\nHello\r\nI have one issue of slow play of exoplayer after seek operation. I am running 2 players. One player runs and pause in certain place, then the second player seeks to the place of the file the 1st one paused and start play from the place. I am playing the local file in a local storage, not from network.\r\n\r\nRoughly it works fine. But one issue happens. The 2nd exoplayer gets slow at the 2nd and/ or 3rd frame and them get back to normal speed. Specifically the video has, for instance, 60 fps, then one frame time is roughly 17 ~ 20 ms. The 2nd exoplayer shows the 1st frame after seek fast but the 2nd or 3rd frame is shown after  roughly 200 ~ 300 ms, and then it comes to normal speed of 17 ~ 20ms. When I look at the buffering, no problem. It has already has the buffered data of 2nd and 3rd frame. But why it gets slow at 2nd or 3rd frame? It is related to codec? With various buffing time, that seems not related to this issue. \r\n\r\nThe video image seems paused a little bit and runs normal again. It is annoying. Please help me out to find the reason.\r\n\r\nThanks.\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5777/comments",
    "author": "AlphaCircle",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2019-04-18T09:36:21Z",
        "body": "Is the fact there are two players relevant, or does the issue also happen when seeking with one player?"
      },
      {
        "user": "AlphaCircle",
        "created_at": "2019-04-19T04:51:38Z",
        "body": "First of all, I am using the version 2.9.4.\r\n\r\nThat happens in either way. For instance, 1) A player (current player) --> B player (later player) or 2) B player (current player) --> A player (later player).  In 1) case, B player shows the slow frames. In 2) case, A player shows the slow frames. When I look at the issue of #2533, which is similar question to mine, I thought that might be related to Surface operation. But I don't see why the surface of later player gets slow. \r\n\r\nWhen I give a delay between 1st rendering of later player and its start, I realized that the later player goes into Ready in Pause after 1st rendering callback. In this case, I keep the current player still running before the later player fires to start.\r\n\r\nThanks\r\nTasik"
      },
      {
        "user": "ojw28",
        "created_at": "2019-04-23T17:04:43Z",
        "body": "A few more questions:\r\n* What about if you only have one player, and you perform a seek?\r\n* Does disabling audio help. Obviously there will be no audio if you do this. The question is whether it fixes the issue affecting the rendering of the 2nd and 3rd frames. You can disable audio with the following, where `trackSelector` is a `DefaultTrackSelector` instance:\r\n\r\n```\r\nDefaultTrackSelector.ParametersBuilder parameters =\r\n    trackSelector.getParameters().buildUpon();\r\nfor (int i = 0; i < player.getRendererCount(); i++) {\r\n  if (player.getRendererType(i) == C.TRACK_TYPE_AUDIO) {\r\n    parameters.setRendererDisabled(i, true);\r\n  }\r\n}\r\ntrackSelector.setParameters(parameters);\r\n```"
      },
      {
        "user": "ojw28",
        "created_at": "2019-05-16T11:20:29Z",
        "body": "Closing due to lack of follow-up."
      }
    ]
  },
  {
    "number": 5774,
    "title": "Audio caching",
    "created_at": "2019-04-17T13:40:37Z",
    "closed_at": "2019-05-06T00:03:29Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5774",
    "body": "Can this player save audio into the local storage after dowload?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5774/comments",
    "author": "P1NG2WIN",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2019-04-18T08:34:00Z",
        "body": "Yes."
      }
    ]
  },
  {
    "number": 5770,
    "title": "How to detect a media already is downloaded?",
    "created_at": "2019-04-16T20:48:17Z",
    "closed_at": "2019-05-16T11:20:37Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5770",
    "body": "I am using DownloadTracker and DemoDownloadService class of demo app for downloading feature in my app. I want to detect if a media already is downloaded, prevent downloading again it.In the demo app exist a isDownloaded method but when a file already is exist, didn't detect and again download the media. how to implement it ? ",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5770/comments",
    "author": "makazemi",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2019-04-17T13:44:18Z",
        "body": "You should probably wait until `2.10`, which is fairly close to release now (approx 1 or 2 weeks) and improves download functionality significantly. This includes having the library keep track of downloads, so application code doesn't have to.\r\n\r\nYou can have a play around with the `dev-v2` branch if you want to see what the current state is."
      },
      {
        "user": "bychkovdmitry",
        "created_at": "2019-04-29T17:08:48Z",
        "body": "Can we expect 2.10 release this week? Really looking forward to this release. Thanks."
      },
      {
        "user": "makazemi",
        "created_at": "2019-05-11T13:21:47Z",
        "body": "@ojw28 : Before 2.10 version, I asked this question #5640. Now I use of new version of exoplayer. The onDownloadChanged of DownloadManger listener only be called three or four times. In the first two times, PercentDownloaded is zero and only in the one before the last and last time PercentDownloaded  has non zero value. So My progress bar don't update. I try for large file but no difference. I want put this comment on #5640 question but this was closed."
      },
      {
        "user": "makazemi",
        "created_at": "2019-05-11T18:30:39Z",
        "body": "@ojw28 : If user manually delete .exo downloaded file, isDownloaded method of 2.10 version can't detect it. How to detect it?"
      },
      {
        "user": "ojw28",
        "created_at": "2019-05-13T13:25:39Z",
        "body": "> Now I use of new version of exoplayer. The onDownloadChanged of DownloadManger listener only be called three or four times. In the first two times, PercentDownloaded is zero and only in the one before the last and last time PercentDownloaded has non zero value. So My progress bar don't update. I try for large file but no difference. I want put this comment on #5640 question but this was closed.\r\n\r\nProgress updates do not trigger `onDownloadChanged` because progress is changing continuously. Instead, you should poll the progress at whatever rate you want. `DownloadService` contains an example of doing this, which is how the notifications update with progress in the ExoPlayer demo app, so please take a look at that if it's unclear what to do.\r\n\r\nNote this is analogous to playback position advancing during a playback. We don't continually fire events for that either, but instead application code can poll the current position at whatever rate it wants.\r\n\r\n> If user manually delete .exo downloaded file, isDownloaded method of 2.10 version can't detect it. How to detect it?\r\n\r\nWe think it's very unlikely that users will do this in practice, and so do not think that it's important to handle this case."
      }
    ]
  },
  {
    "number": 5769,
    "title": "Stop trying to access AudioTrack.getLatency",
    "created_at": "2019-04-16T09:08:48Z",
    "closed_at": "2019-04-16T10:14:22Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5769",
    "body": " I use veridex to scan the apk,find in exoplayer is in greylist-max-p  \r\nReflection greylist-max-p Landroid/media/AudioTrack;->getLatency use(s):\r\n       Lcom/google/android/exoplayer2/audio/AudioTrackPositionTracker;-><init>(Lcom/google/android/exoplayer2/audio/AudioTrackPositionTracker$Listener;)V\r\n\r\n public AudioTrackPositionTracker(Listener listener) {\r\n    this.listener = Assertions.checkNotNull(listener);\r\n    if (Util.SDK_INT >= 18) {\r\n      try {\r\n        getLatencyMethod = AudioTrack.class.getMethod(\"getLatency\", (Class<?>[]) null);//this line\r\n      } catch (NoSuchMethodException e) {\r\n        // There's no guarantee this method exists. Do nothing.\r\n      }\r\n    }\r\n    playheadOffsets = new long[MAX_PLAYHEAD_OFFSET_COUNT];\r\n  }\r\ncan remove this ?..",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5769/comments",
    "author": "SewizChow",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2019-04-16T09:45:19Z",
        "body": "@andrewlewis - I think we should just stop trying to access getLatency on Q and above. It should be fine to rely on `AudioTrack.getTimestamp`. If it's not for certain use cases then (a) we should file platform bugs, and (b) I doubt getLatency is of much help for those use cases either."
      },
      {
        "user": "andrewlewis",
        "created_at": "2019-04-16T10:14:22Z",
        "body": "It seems to be quite common for devices not to provide an `AudioTimestamp` when beginning audio playback from a cold start. For example, we may not have a timestamp for hundreds of milliseconds when starting playout to a Bluetooth audio device. We don't currently have a good alternative to using the method.\r\n\r\n`getLatency` will remain hidden but accessible to apps when Q launches (though it's restricted in Q preview -- see #5763 and [Internal: b/112561552]). The framework team are considering making it public and improving the way it works in the future (see [Internal: b/130237544]). I'll therefore close this issue as I don't think any action is required on the ExoPlayer side for now."
      },
      {
        "user": "SewizChow",
        "created_at": "2019-04-16T12:07:04Z",
        "body": "> considering\r\n\r\nthanks.."
      }
    ]
  },
  {
    "number": 5761,
    "title": "exoplayer throws excepton when i set seekbar outside of buffered part",
    "created_at": "2019-04-12T09:53:16Z",
    "closed_at": "2019-05-05T18:20:37Z",
    "labels": [
      "question",
      "need more info"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5761",
    "body": "hi \r\nI m using exoplayer to play a video from sd card .and there is a problem .it seems that exoplayer is buffering the video from sd card and if I use seek bar to move forward to the not buffered parts, the video stops buffering and throws an exception :\r\n\r\nhere is my code\r\n\r\n```\r\nprivate PlayerView playerView;\r\n    SimpleExoPlayer player;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n        playerView=(PlayerView)findViewById(R.id.ff);\r\n\r\n    }\r\n@Override\r\n    protected void onStart() {\r\n        super.onStart();\r\n        player=ExoPlayerFactory.newSimpleInstance(this,new DefaultTrackSelector());\r\n        playerView.setPlayer(player);\r\n\r\n        DefaultDataSourceFactory dataSourceFactory=new DefaultDataSourceFactory(this,Util.getUserAgent(this,\"exoplayer\"));\r\n        ExtractorMediaSource mediaSource=new ExtractorMediaSource.Factory(dataSourceFactory).createMediaSource(Uri.parse(Environment.getExternalStorageDirectory().toString()+\"/gh.mp4\"));\r\n        player.prepare(mediaSource);\r\n        player.setPlayWhenReady(true);\r\n    }\r\n\r\n    @Override\r\n    protected void onStop() {\r\n        super.onStop();\r\n        playerView.setPlayer(null);\r\n        player.release();\r\n        playerView=null;\r\n\r\n\r\n    }\r\n```\r\n\r\nand here is my exceptions\r\n\r\n```\r\nE/ExoPlayerImplInternal: Source error.\r\ncom.google.android.exoplayer2.upstream.FileDataSource$FileDataSourceException: java.io.EOFException\r\n    at com.google.android.exoplayer2.upstream.FileDataSource.open(FileDataSource.java:70)\r\n    at com.google.android.exoplayer2.upstream.DefaultDataSource.open(DefaultDataSource.java:147)\r\n    at com.google.android.exoplayer2.source.ExtractorMediaPeriod$ExtractingLoadable.load(ExtractorMediaPeriod.java:844)\r\n    at com.google.android.exoplayer2.upstream.Loader$LoadTask.run(Loader.java:320)\r\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)\r\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)\r\n    at java.lang.Thread.run(Thread.java:784)\r\n Caused by: java.io.EOFException\r\n    at com.google.android.exoplayer2.upstream.FileDataSource.open(FileDataSource.java:67)\r\n    at com.google.android.exoplayer2.upstream.DefaultDataSource.open(DefaultDataSource.java:147) \r\n    at com.google.android.exoplayer2.source.ExtractorMediaPeriod$ExtractingLoadable.load(ExtractorMediaPeriod.java:844) \r\n    at com.google.android.exoplayer2.upstream.Loader$LoadTask.run(Loader.java:320) \r\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162) \r\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636) \r\n    at java.lang.Thread.run(Thread.java:784)\r\n```\r\n\r\ni played a 60 sec video and bcuz it buffered fast there isnt a problem but if i try to play for example 6 min video it happens.\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5761/comments",
    "author": "roninshahi",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2019-04-12T09:56:37Z",
        "body": "This is not something we've seen before, and I'm pretty sure it doesn't happen in the general case. It's most likely an issue specific to the piece of media you're trying to play, probably because it's malformed. Please provide us with a link to some content that reproduces the issue."
      },
      {
        "user": "ojw28",
        "created_at": "2019-05-05T18:20:37Z",
        "body": "Closing due to lack of required information (i.e. a link to some content that reproduces the issue). Please respond here if you're able to provide this information, and we'll reopen the issue."
      }
    ]
  },
  {
    "number": 5742,
    "title": "Where can I get the GOP (keyframe interval) in DASH streaming.",
    "created_at": "2019-04-08T09:57:21Z",
    "closed_at": "2019-04-11T07:07:46Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5742",
    "body": "I want to know the GOP size when I do DASH. When looking at MediaLoadData, I could not find any similar thing to GOP-related information. Can you let me know where I can get that information? \r\n\r\n<!-- DO NOT DELETE\r\nvalidate_template=true\r\ntemplate_path=.github/ISSUE_TEMPLATE/question.md\r\n-->\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5742/comments",
    "author": "AlphaCircle",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2019-04-08T10:26:10Z",
        "body": "There is no way to get this information. Please can you describe a valid use case for needing this; because I can't really think of one. Note also that there's no requirement that GOP size is fixed in DASH content."
      }
    ]
  },
  {
    "number": 5728,
    "title": "No metadata when playing m4a files",
    "created_at": "2019-04-04T16:46:15Z",
    "closed_at": "2019-04-05T18:57:54Z",
    "labels": [
      "question",
      "need more info"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5728",
    "body": "Question:\r\nI have searched the current issue here, and found nothing about m4a metadata.\r\n\r\nI was able play mp3 files and see the embedded bitmap on the PlayerView. But when playing m4a files, only sound are being play. I know the m4a file do have valid metadata. \r\nI am using DefaultDataSourceFactory and DefaultRenderersFactory. Not sure if I am not doing it right or there are issue with extracting metadata from m4a files.\r\n\r\nExoplayer version 2.9.6 lib\r\n\r\n\r\n<!-- DO NOT DELETE\r\nvalidate_template=true\r\ntemplate_path=.github/ISSUE_TEMPLATE/question.md\r\n-->\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5728/comments",
    "author": "opaquewarellc",
    "comments": [
      {
        "user": "google-oss-bot",
        "created_at": "2019-04-04T16:46:16Z",
        "body": "This issue does not seem to follow the issue template. Make sure you provide all the required information."
      },
      {
        "user": "andrewlewis",
        "created_at": "2019-04-05T10:05:20Z",
        "body": "It looks like we support getting cover art stored in a `covr` metadata element in M4A. Can you describe exactly how the cover art is stored in the files you're trying to play? Or share the media here or via email to `dev.exoplayer@gmail.com` with subject \"Issue #5728\"?\r\n\r\nNote: it's possible that this is fixed in the development branch where we now parse `meta` elements outside `udta`."
      },
      {
        "user": "opaquewarellc",
        "created_at": "2019-04-05T18:57:54Z",
        "body": "I was able to play the same m4a file in Google Play music app with the cover art shown.\r\nBut I have other m4a files that do works with the current Exoplayer lib. So I have decided it is not worth the time to find the root cause of this issue at the moment. Perhaps I'll re-visit this later. \r\nThanks,"
      }
    ]
  },
  {
    "number": 5727,
    "title": "Question: How to override the video track selection for multiple videos",
    "created_at": "2019-04-04T14:00:08Z",
    "closed_at": "2019-04-12T16:54:58Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5727",
    "body": "Can you change the resolution of all the videos that are playing in the player without having to create a new instance of the player?\r\n\r\nExoplayer version 2.9.4\r\n\r\nTo make the exchange of quality I am using this method\r\n\r\n```\r\nprivate fun applySelection() {\r\n        val trackInfo = trackSelector.currentMappedTrackInfo ?: return\r\n        val trackGroups = trackInfo.getTrackGroups(videoRendererIndex)\r\n\r\n        val parametersBuilder = trackSelector.buildUponParameters()\r\n        parametersBuilder.setRendererDisabled(videoRendererIndex, false)\r\n\r\n        if (overridePlayer != null) {\r\n            parametersBuilder.setSelectionOverride(videoRendererIndex, trackGroups, overridePlayer)\r\n        } else {\r\n            parametersBuilder.clearSelectionOverrides(videoRendererIndex)\r\n        }\r\n\r\n        trackSelector.setParameters(parametersBuilder)\r\n}\r\n```",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5727/comments",
    "author": "DionataFerraz",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2019-04-07T15:56:48Z",
        "body": "Selection overrides only apply to content that has the same set of tracks that you've set the override for. Or more precisely, a video track override will only apply to content where the `trackGroups` assigned to the video renderer are the same as those that you've set the override for. If you start playing content that has a different set of tracks, you'll need to set a new override for the new `trackGroups` (note: there is no requirement that you create a new instance of the player to do this).\r\n\r\nIf possible, try using constraint based track selection rather than specific track overrides when playing multiple videos. For example if you're trying to impose a maximum quality, use `parametersBuilder.setMaxVideoSize` or `parametersBuilder.setMaxVideoBitrate`. Constraints are a lot more flexible than specific overrides, and apply naturally over multiple videos. Setting minimum qualities via constraints is currently not possible; adding this functionality is tracked by #4511."
      },
      {
        "user": "DionataFerraz",
        "created_at": "2019-04-11T19:54:02Z",
        "body": "Solved with that\r\nOBS: it was not me that did\r\n```\r\nimport com.google.android.exoplayer2.source.TrackGroup\r\nimport com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection\r\nimport com.google.android.exoplayer2.trackselection.TrackSelection\r\nimport com.google.android.exoplayer2.upstream.BandwidthMeter\r\nimport com.google.android.exoplayer2.util.Clock\r\n\r\ntypealias SelectedIndex = () -> Int?\r\n\r\nclass FixedAdaptiveTrackSelection(\r\n    group: TrackGroup,\r\n    tracks: IntArray,\r\n    bandwidth: BandwidthMeter,\r\n    minDurationForQualityIncreaseMs: Long,\r\n    maxDurationForQualityDecreaseMs: Long,\r\n    minDurationToRetainAfterDiscardMs: Long,\r\n    bandwidthFraction: Float,\r\n    bufferedFractionToLiveEdgeForQualityIncrease: Float,\r\n    minTimeBetweenBufferReevaluationMs: Long,\r\n    clock: Clock,\r\n    private var selectedIndexFunction: SelectedIndex?\r\n) : AdaptiveTrackSelection(\r\n    group,\r\n    tracks,\r\n    bandwidth,\r\n    minDurationForQualityIncreaseMs,\r\n    maxDurationForQualityDecreaseMs,\r\n    minDurationToRetainAfterDiscardMs,\r\n    bandwidthFraction,\r\n    bufferedFractionToLiveEdgeForQualityIncrease,\r\n    minTimeBetweenBufferReevaluationMs,\r\n    clock\r\n) {\r\n\r\n    class Factory : TrackSelection.Factory {\r\n\r\n        private var bandwidthMeter: BandwidthMeter? = null\r\n        private var minDurationForQualityIncreaseMs: Int? = null\r\n        private var maxDurationForQualityDecreaseMs: Int? = null\r\n        private var minDurationToRetainAfterDiscardMs: Int? = null\r\n        private var bandwidthFraction: Float? = null\r\n        private var bufferedFractionToLiveEdgeForQualityIncrease: Float? = null\r\n        private var minTimeBetweenBufferReevaluationMs: Long? = null\r\n        private var clock: Clock\r\n        private var selectedIndex: SelectedIndex? = null\r\n\r\n        constructor(selectedIndex: SelectedIndex?) : this(\r\n            AdaptiveTrackSelection.DEFAULT_MIN_DURATION_FOR_QUALITY_INCREASE_MS,\r\n            DEFAULT_MAX_DURATION_FOR_QUALITY_DECREASE_MS,\r\n            DEFAULT_MIN_DURATION_TO_RETAIN_AFTER_DISCARD_MS,\r\n            DEFAULT_BANDWIDTH_FRACTION,\r\n            DEFAULT_BUFFERED_FRACTION_TO_LIVE_EDGE_FOR_QUALITY_INCREASE,\r\n            DEFAULT_MIN_TIME_BETWEEN_BUFFER_REEVALUTATION_MS,\r\n            Clock.DEFAULT,\r\n            selectedIndex\r\n        )\r\n\r\n        constructor(\r\n            minDurationForQualityIncreaseMs: Int,\r\n            maxDurationForQualityDecreaseMs: Int,\r\n            minDurationToRetainAfterDiscardMs: Int,\r\n            bandwidthFraction: Float,\r\n            bufferedFractionToLiveEdgeForQualityIncrease: Float,\r\n            minTimeBetweenBufferReevaluationMs: Long,\r\n            clock: Clock,\r\n            selectedIndex: SelectedIndex?\r\n        ) {\r\n            this.minDurationForQualityIncreaseMs = minDurationForQualityIncreaseMs\r\n            this.maxDurationForQualityDecreaseMs = maxDurationForQualityDecreaseMs\r\n            this.minDurationToRetainAfterDiscardMs = minDurationToRetainAfterDiscardMs\r\n            this.bandwidthFraction = bandwidthFraction\r\n            this.bufferedFractionToLiveEdgeForQualityIncrease = bufferedFractionToLiveEdgeForQualityIncrease\r\n            this.minTimeBetweenBufferReevaluationMs = minTimeBetweenBufferReevaluationMs\r\n            this.clock = clock\r\n            this.selectedIndex = selectedIndex\r\n        }\r\n\r\n        override fun createTrackSelection(group: TrackGroup, bandwidth: BandwidthMeter, vararg tracks: Int): FixedAdaptiveTrackSelection {\r\n            var meter = bandwidth\r\n            if (bandwidthMeter != null) {\r\n                meter = bandwidthMeter as BandwidthMeter\r\n            }\r\n            return FixedAdaptiveTrackSelection(\r\n                group,\r\n                tracks,\r\n                meter,\r\n                minDurationForQualityIncreaseMs?.toLong() ?: 0,\r\n                maxDurationForQualityDecreaseMs?.toLong() ?: 0,\r\n                minDurationToRetainAfterDiscardMs?.toLong() ?: 0,\r\n                bandwidthFraction ?: 0F,\r\n                bufferedFractionToLiveEdgeForQualityIncrease ?: 0F,\r\n                minTimeBetweenBufferReevaluationMs ?: 0,\r\n                clock,\r\n                selectedIndex)\r\n        }\r\n\r\n    }\r\n\r\n    override fun getSelectedIndex(): Int {\r\n        return selectedIndexFunction?.invoke() ?: super.getSelectedIndex()\r\n    }\r\n\r\n}\r\n```\r\n\r\n\r\n```\r\nval trackSelector: DefaultTrackSelector by lazy {\r\n        DefaultTrackSelector(FixedAdaptiveTrackSelection.Factory(::getSelectedQualityIndex)).apply {\r\n            parameters = trackSelectorParameters\r\n        }\r\n }\r\n```\r\n"
      }
    ]
  },
  {
    "number": 5720,
    "title": "Exoplayer error ",
    "created_at": "2019-04-03T07:51:27Z",
    "closed_at": "2019-05-05T18:32:50Z",
    "labels": [
      "question",
      "need more info"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5720",
    "body": "Hello, I have some questions.\r\nWhen does the following error occur?\r\nHow can I fix it?\r\nIs this a problem with device? or OS? or Firmware?\r\n(using exoplayer version 2.9.2, supported widevine drm)\r\n\r\n1.Operation not supported in this configuration.\r\n```\r\nandroid.media.MediaCodec$CryptoException: Operation not supported in this configuration\r\n\tat android.media.MediaCodec.native_queueSecureInputBuffer(Native Method)\r\n\tat android.media.MediaCodec.queueSecureInputBuffer(MediaCodec.java:2532)\r\n\tat com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.feedInputBuffer(SourceFile:1016)\r\n\tat com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.render(SourceFile:664)\r\n\tat com.google.android.exoplayer2.ExoPlayerImplInternal.doSomeWork(SourceFile:4536)\r\n\tat com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(SourceFile:4536)\r\n\tat android.os.Handler.dispatchMessage(Handler.java:101)\r\n\tat android.os.Looper.loop(Looper.java:164)\r\n\tat android.os.HandlerThread.run(HandlerThread.java:65)\r\n```\r\n\r\n2.Error decrypting data: unspecified error\r\n```\r\nandroid.media.MediaCodec$CryptoException: Error decrypting data: unspecified error\r\n\tat android.media.MediaCodec.native_queueSecureInputBuffer(Native Method)\r\n\tat android.media.MediaCodec.queueSecureInputBuffer(MediaCodec.java:2493)\r\n\tat com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.feedInputBuffer(SourceFile:1016)\r\n\tat com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.render(SourceFile:664)\r\n\tat com.google.android.exoplayer2.ExoPlayerImplInternal.doSomeWork(SourceFile:4536)\r\n\tat com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(SourceFile:4536)\r\n\tat android.os.Handler.dispatchMessage(Handler.java:98)\r\n\tat android.os.Looper.loop(Looper.java:154)\r\n\tat android.os.HandlerThread.run(HandlerThread.java:61)\r\n```\r\n\r\n3.Error decrypting data\r\n```\r\nandroid.media.MediaCodec$CryptoException: Error decrypting data.\r\n\tat android.media.MediaCodec.native_queueSecureInputBuffer(Native Method)\r\n\tat android.media.MediaCodec.queueSecureInputBuffer(MediaCodec.java:956)\r\n\tat com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.feedInputBuffer(SourceFile:1016)\r\n\tat com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.render(SourceFile:664)\r\n\tat com.google.android.exoplayer2.ExoPlayerImplInternal.doSomeWork(SourceFile:4536)\r\n\tat com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(SourceFile:4536)\r\n\tat android.os.Handler.dispatchMessage(Handler.java:98)\r\n\tat android.os.Looper.loop(Looper.java:135)\r\n\tat android.os.HandlerThread.run(HandlerThread.java:61)\r\n```\r\n\r\n4.\r\n```\r\nandroid.media.MediaCodec$CryptoException: Error decrypting data: requested key has not been loaded\r\n\tat android.media.MediaCodec.native_queueSecureInputBuffer(Native Method)\r\n\tat android.media.MediaCodec.queueSecureInputBuffer(MediaCodec.java:2478)\r\n\tat com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.feedInputBuffer(SourceFile:1016)\r\n\tat com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.render(SourceFile:664)\r\n\tat com.google.android.exoplayer2.ExoPlayerImplInternal.doSomeWork(SourceFile:4536)\r\n\tat com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(SourceFile:4536)\r\n\tat android.os.Handler.dispatchMessage(Handler.java:98)\r\n\tat android.os.Looper.loop(Looper.java:154)\r\n\tat android.os.HandlerThread.run(HandlerThread.java:61)\r\n```\r\n\r\n5.This error occur when the security level of the device is L1, but operated L3.\r\nif force down security level L1 to L3, this error not occur.\r\n\r\n```\r\ncom.google.android.exoplayer2.drm.DrmSession$DrmSessionException: android.media.MediaDrm$MediaDrmStateException: Failed to handle key response: DRM vendor-defined error: -2902\r\n\tat com.google.android.exoplayer2.drm.DefaultDrmSession.onError(SourceFile:443)\r\n\tat com.google.android.exoplayer2.drm.DefaultDrmSession.onKeysError(SourceFile:438)\r\n\tat com.google.android.exoplayer2.drm.DefaultDrmSession.onKeyResponse(SourceFile:2423)\r\n\tat com.google.android.exoplayer2.drm.DefaultDrmSession.access$100(SourceFile:2423)\r\n\tat com.google.android.exoplayer2.drm.DefaultDrmSession$PostResponseHandler.handleMessage(SourceFile:473)\r\n\tat android.os.Handler.dispatchMessage(Handler.java:102)\r\n\tat android.os.Looper.loop(Looper.java:154)\r\n\tat android.os.HandlerThread.run(HandlerThread.java:61)\r\nCaused by: android.media.MediaDrm$MediaDrmStateException: Failed to handle key response: DRM vendor-defined error: -2902\r\n\tat android.media.MediaDrm.provideKeyResponse(Native Method)\r\n\tat com.google.android.exoplayer2.drm.FrameworkMediaDrm.provideKeyResponse(SourceFile:157)\r\n\tat com.google.android.exoplayer2.drm.DefaultDrmSession.onKeyResponse(SourceFile:2413)\r\n\tat com.google.android.exoplayer2.drm.DefaultDrmSession.access$100(SourceFile:2413)\r\n\t... 4 more\r\nandroid.media.MediaDrm$MediaDrmStateException: Failed to handle key response: DRM vendor-defined error: -2902\r\n\tat android.media.MediaDrm.provideKeyResponse(Native Method)\r\n\tat com.google.android.exoplayer2.drm.FrameworkMediaDrm.provideKeyResponse(SourceFile:157)\r\n\tat com.google.android.exoplayer2.drm.DefaultDrmSession.onKeyResponse(SourceFile:2413)\r\n\tat com.google.android.exoplayer2.drm.DefaultDrmSession.access$100(SourceFile:2413)\r\n\tat com.google.android.exoplayer2.drm.DefaultDrmSession$PostResponseHandler.handleMessage(SourceFile:473)\r\n\tat android.os.Handler.dispatchMessage(Handler.java:102)\r\n\tat android.os.Looper.loop(Looper.java:154)\r\n\tat android.os.HandlerThread.run(HandlerThread.java:61)\r\n```\r\n\r\n6.\r\n```\r\ncom.google.android.exoplayer2.drm.DrmSession$DrmSessionException: android.media.MediaDrm$MediaDrmStateException: Failed to handle key response: General DRM error\r\n    at com.google.android.exoplayer2.drm.DefaultDrmSession.onError(SourceFile:443)\r\n    at com.google.android.exoplayer2.drm.DefaultDrmSession.onKeysError(SourceFile:438)\r\n    at com.google.android.exoplayer2.drm.DefaultDrmSession.onKeyResponse(SourceFile:2423)\r\n    at com.google.android.exoplayer2.drm.DefaultDrmSession.access$100(SourceFile:2423)\r\n    at com.google.android.exoplayer2.drm.DefaultDrmSession$PostResponseHandler.handleMessage(SourceFile:473)\r\n    at android.os.Handler.dispatchMessage(Handler.java:105)\r\n    at android.os.Looper.loop(Looper.java:164)\r\n    at android.os.HandlerThread.run(HandlerThread.java:65)\r\nCaused by: android.media.MediaDrm$MediaDrmStateException: Failed to handle key response: General DRM error\r\n    at android.media.MediaDrm.provideKeyResponse(Native Method)\r\n    at com.google.android.exoplayer2.drm.FrameworkMediaDrm.provideKeyResponse(SourceFile:157)\r\n    at com.google.android.exoplayer2.drm.DefaultDrmSession.onKeyResponse(SourceFile:2413)\r\n    at com.google.android.exoplayer2.drm.DefaultDrmSession.access$100(SourceFile:2413)\r\n    ... 4 more\r\nandroid.media.MediaDrm$MediaDrmStateException: Failed to handle key response: General DRM error\r\n    at android.media.MediaDrm.provideKeyResponse(Native Method)\r\n    at com.google.android.exoplayer2.drm.FrameworkMediaDrm.provideKeyResponse(SourceFile:157)\r\n    at com.google.android.exoplayer2.drm.DefaultDrmSession.onKeyResponse(SourceFile:2413)\r\n    at com.google.android.exoplayer2.drm.DefaultDrmSession.access$100(SourceFile:2413)\r\n    at com.google.android.exoplayer2.drm.DefaultDrmSession$PostResponseHandler.handleMessage(SourceFile:473)\r\n    at android.os.Handler.dispatchMessage(Handler.java:105)\r\n    at android.os.Looper.loop(Looper.java:164)\r\n    at android.os.HandlerThread.run(HandlerThread.java:65)\r\n```\r\n\r\n7.\r\n```\r\ncom.google.android.exoplayer2.drm.DrmSession$DrmSessionException: android.media.MediaDrm$MediaDrmStateException: Failed to restore keys: General DRM error\r\n        at com.google.android.exoplayer2.drm.DefaultDrmSession.onError(SourceFile:443)\r\n        at com.google.android.exoplayer2.drm.DefaultDrmSession.restoreKeys(SourceFile:371)\r\n        at com.google.android.exoplayer2.drm.DefaultDrmSession.doLicense(SourceFile:328)\r\n        at com.google.android.exoplayer2.drm.DefaultDrmSession.acquire(SourceFile:164)\r\n        at com.google.android.exoplayer2.drm.DefaultDrmSessionManager.acquireSession(SourceFile:559)\r\n        at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.onInputFormatChanged(SourceFile:1075)\r\n        at com.google.android.exoplayer2.video.MediaCodecVideoRenderer.onInputFormatChanged(SourceFile:552)\r\n        at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.render(SourceFile:647)\r\n        at com.google.android.exoplayer2.ExoPlayerImplInternal.doSomeWork(SourceFile:4536)\r\n        at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(SourceFile:4536)\r\n        at android.os.Handler.dispatchMessage(Handler.java:102)\r\n        at android.os.Looper.loop(Looper.java:214)\r\n        at android.os.HandlerThread.run(HandlerThread.java:65)\r\nCaused by: android.media.MediaDrm$MediaDrmStateException: Failed to restore keys: General DRM error\r\n        at android.media.MediaDrm.restoreKeys(Native Method)\r\n        at com.google.android.exoplayer2.drm.FrameworkMediaDrm.restoreKeys(SourceFile:183)\r\n        at com.google.android.exoplayer2.drm.DefaultDrmSession.restoreKeys(SourceFile:367)\r\n        ... 10 more\r\nandroid.media.MediaDrm$MediaDrmStateException: Failed to restore keys: General DRM error\r\n        at android.media.MediaDrm.restoreKeys(Native Method)\r\n        at com.google.android.exoplayer2.drm.FrameworkMediaDrm.restoreKeys(SourceFile:183)\r\n        at com.google.android.exoplayer2.drm.DefaultDrmSession.restoreKeys(SourceFile:367)\r\n        at com.google.android.exoplayer2.drm.DefaultDrmSession.doLicense(SourceFile:328)\r\n        at com.google.android.exoplayer2.drm.DefaultDrmSession.acquire(SourceFile:164)\r\n        at com.google.android.exoplayer2.drm.DefaultDrmSessionManager.acquireSession(SourceFile:559)\r\n        at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.onInputFormatChanged(SourceFile:1075)\r\n        at com.google.android.exoplayer2.video.MediaCodecVideoRenderer.onInputFormatChanged(SourceFile:552)\r\n        at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.render(SourceFile:647)\r\n        at com.google.android.exoplayer2.ExoPlayerImplInternal.doSomeWork(SourceFile:4536)\r\n        at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(SourceFile:4536)\r\n        at android.os.Handler.dispatchMessage(Handler.java:102)\r\n        at android.os.Looper.loop(Looper.java:214)\r\n        at android.os.HandlerThread.run(HandlerThread.java:65)\r\n```\r\n\r\ntoo many devices, os and error..\r\nI have not experienced this error, and it is an error from users.\r\nPlz help me.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5720/comments",
    "author": "SophiaKP",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2019-04-05T09:32:07Z",
        "body": "To start investigating this we need more information. Are you able to get full bug reports from these error cases? If that's not possible, could you share some information about the content you are trying to play and what devices seem to be affected?"
      },
      {
        "user": "andrewlewis",
        "created_at": "2019-05-05T18:32:50Z",
        "body": "Closing due to lack of activity."
      },
      {
        "user": "eyalpartner",
        "created_at": "2019-05-06T13:12:38Z",
        "body": "_**I can also reproduce:**_\r\n**Log:**\r\n E MediaDrm-JNI: Illegal state exception: Failed to handle key response: DRM vendor-defined error: -2965 (-2965)\r\n05-06 15:09:32.675 20625 10275 E ExoPlayerImplInternal: Renderer error.\r\n05-06 15:09:32.675 20625 10275 E ExoPlayerImplInternal: com.google.android.exoplayer2.ExoPlaybackException\r\n05-06 15:09:32.675 20625 10275 E ExoPlayerImplInternal: \tat com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.shouldWaitForKeys(MediaCodecRenderer.java:775)\r\n05-06 15:09:32.675 20625 10275 E ExoPlayerImplInternal: \tat com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.feedInputBuffer(MediaCodecRenderer.java:716)\r\n05-06 15:09:32.675 20625 10275 E ExoPlayerImplInternal: \tat com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.render(MediaCodecRenderer.java:551)\r\n05-06 15:09:32.675 20625 10275 E ExoPlayerImplInternal: \tat com.google.android.exoplayer2.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:578)\r\n05-06 15:09:32.675 20625 10275 E ExoPlayerImplInternal: \tat com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:350)\r\n05-06 15:09:32.675 20625 10275 E ExoPlayerImplInternal: \tat android.os.Handler.dispatchMessage(Handler.java:98)\r\n05-06 15:09:32.675 20625 10275 E ExoPlayerImplInternal: \tat android.os.Looper.loop(Looper.java:154)\r\n05-06 15:09:32.675 20625 10275 E ExoPlayerImplInternal: \tat android.os.HandlerThread.run(HandlerThread.java:61)\r\n05-06 15:09:32.675 20625 10275 E ExoPlayerImplInternal: Caused by: com.google.android.exoplayer2.drm.DrmSession$DrmSessionException: android.media.MediaDrm$MediaDrmStateException: Failed to handle key response: DRM vendor-defined error: -2965\r\n05-06 15:09:32.675 20625 10275 E ExoPlayerImplInternal: \tat com.google.android.exoplayer2.drm.DefaultDrmSessionManager.onError(DefaultDrmSessionManager.java:610)\r\n05-06 15:09:32.675 20625 10275 E ExoPlayerImplInternal: \tat com.google.android.exoplayer2.drm.DefaultDrmSessionManager.onKeysError(DefaultDrmSessionManager.java:605)\r\n05-06 15:09:32.675 20625 10275 E ExoPlayerImplInternal: \tat com.google.android.exoplayer2.drm.DefaultDrmSessionManager.onKeyResponse(DefaultDrmSessionManager.java:597)\r\n05-06 15:09:32.675 20625 10275 E ExoPlayerImplInternal: \tat com.google.android.exoplayer2.drm.DefaultDrmSessionManager.access$900(DefaultDrmSessionManager.java:51)\r\n05-06 15:09:32.675 20625 10275 E ExoPlayerImplInternal: \tat com.google.android.exoplayer2.drm.DefaultDrmSessionManager$PostResponseHandler.handleMessage(DefaultDrmSessionManager.java:685)\r\n05-06 15:09:32.675 20625 10275 E ExoPlayerImplInternal: \tat android.os.Handler.dispatchMessage(Handler.java:102)\r\n05-06 15:09:32.675 20625 10275 E ExoPlayerImplInternal: \t... 2 more\r\n05-06 15:09:32.675 20625 10275 E ExoPlayerImplInternal: Caused by: android.media.MediaDrm$MediaDrmStateException: Failed to handle key response: DRM vendor-defined error: -2965\r\n05-06 15:09:32.675 20625 10275 E ExoPlayerImplInternal: \tat android.media.MediaDrm.provideKeyResponse(Native Method)\r\n05-06 15:09:32.675 20625 10275 E ExoPlayerImplInternal: \tat com.google.android.exoplayer2.drm.FrameworkMediaDrm.provideKeyResponse(FrameworkMediaDrm.java:106)\r\n05-06 15:09:32.675 20625 10275 E ExoPlayerImplInternal: \tat com.google.android.exoplayer2.drm.DefaultDrmSessionManager.onKeyResponse(DefaultDrmSessionManager.java:581)\r\n05-06 15:09:32.675 20625 10275 E ExoPlayerImplInternal: \t... 5 more\r\n05-06 15:09:32.677   208  5936 D BerlinOmxComponentImpl: setState() line 903: OMX.Marvell.video_decoder.hevc.secure, state change, OMX_StateExecuting(3) -> OMX_StateIdle(2)\r\n05-06 15:09:32.677   208  5936 D BerlinOmxAmpVideoDecoder: Function stop(), Line 1742, Function Enter\r\n05-06 15:09:32.678 20625 20625 D MetricManager: Destroying player state manager\r\n05-06 15:09:32.679 20625 20625 D MetricManager: Player is stopped\r\n05-06 15:09:32.679 20625 20625 E IFSExoPlayer2Pipe: \u001b[0;34m[\u001b[0;34m(main)IFSExoPlayer2Pipe.java:2129->onPlayerError]\u001b[0;32m[android]\u001b[0;0m \u001b[1;31mIFS_ERROR: onPlayerError rendererIndex:0 type: 1 log:com.google.android.exoplayer2.ExoPlaybackException\r\n05-06 15:09:32.679 20625 20625 E IFSExoPlayer2Pipe: IFSExoPlayer2Pipe.java:2129->onPlayerError\r\n05-06 15:09:32.679 20625 20625 E IFSExoPlayer2Pipe: ExoPlayerImpl.java:504->handleEvent\r\n05-06 15:09:32.679 20625 20625 E IFSExoPlayer2Pipe: ExoPlayerImpl.java:103->handleMessage\r\n05-06 15:09:32.679 20625 20625 E IFSExoPlayer2Pipe: Handler.java:102->dispatchMessage\r\n05-06 15:09:32.679 20625 20625 E IFSExoPlayer2Pipe: Looper.java:154->loop\r\n05-06 15:09:32.679 20625 20625 E IFSExoPlayer2Pipe: ActivityThread.java:6077->main\r\n05-06 15:09:32.679 20625 20625 E IFSExoPlayer2Pipe: Method.java:-2->invoke\r\n05-06 15:09:32.679 20625 20625 E IFSExoPlayer2Pipe: ZygoteInit.java:865->run\r\n05-06 15:09:32.679 20625 20625 E IFSExoPlayer2Pipe: ZygoteInit.java:755->main\r\n05-06 15:09:32.679 20625 20625 E IFSExoPlayer2Pipe: \u001b[0;0m\r\n05-06 15:09:32.680 20625 20625 W IFSExoPlayer2Pipe: \u001b[0;34m[\u001b[0;34m(main)IFSExoPlayer2Pipe.java:2162->onPlayerError]\u001b[0;32m[android]\u001b[0;0m \u001b[1;33munknown error exception\u001b[0;0m\r\n\r\n**Details:**\r\nThis error occur when the security level of the device is L1 with exoplayer ver 2.8.4 \r\nContent: HEVC +DASH\r\nAndroid 7\r\nIf full adb logcat is needed please tell me, I have it"
      },
      {
        "user": "andrewlewis",
        "created_at": "2019-05-06T15:44:28Z",
        "body": "@eyalpartner Please file a new issue and include all the information requested in the new issue template, especially a full bug report captured with `adb bugreport`."
      },
      {
        "user": "eyalpartner",
        "created_at": "2019-05-07T12:00:28Z",
        "body": "Thanks, I have created #5845"
      }
    ]
  },
  {
    "number": 5715,
    "title": "How to verify the checksum of downloaded widevine encrypted MPD DASH",
    "created_at": "2019-04-02T07:34:53Z",
    "closed_at": "2019-04-04T13:40:38Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5715",
    "body": "I have sucessfully downloaded the encrypted widevine DASH video, now i need to verify the checksum i.e video is downloaded sucessfully or not.\r\n\r\nCan anyone please suggest me a way to verify it.\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5715/comments",
    "author": "kushalgupta0565",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2019-04-04T13:40:38Z",
        "body": "Please see #2711. It's not safe to assume that the representation of cached data matches the original files on the server. You may still be able to do some processing if you can operate on data read back from the cache using `CacheDataSource`."
      },
      {
        "user": "ojw28",
        "created_at": "2019-04-11T16:52:29Z",
        "body": "As a general point, it seems unnecessary to do this. If you're downloading over https there's no reason to expect that a download would be corrupt (and if you're not downloading over https, you probably should be)."
      }
    ]
  },
  {
    "number": 5713,
    "title": "File name is too long to play",
    "created_at": "2019-04-02T03:31:45Z",
    "closed_at": "2019-05-05T18:21:10Z",
    "labels": [
      "question",
      "need more info"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5713",
    "body": "```\r\n2019-04-02 10:52:55.234 8562-8671/{packagename} E/ExoPlayerImplInternal: Source error.\r\n    com.google.android.exoplayer2.upstream.FileDataSource$FileDataSourceException: java.io.FileNotFoundException: /data/user/0/{packagename}/cache/splash/YWRtaW5fYWRfc3BsYXNoXzFjNjAyODhjYjhjNDExZTE5Yzc2ZDRkZmJjMjJhNGMwLm1wNF8xNTU0MTEwMzQxM3.mp4: open failed: ENOENT (No such file or directory)\r\n        at com.google.android.exoplayer2.upstream.FileDataSource.open(FileDataSource.java:73)\r\n        at com.google.android.exoplayer2.upstream.DefaultDataSource.open(DefaultDataSource.java:250)\r\n        at com.google.android.exoplayer2.upstream.StatsDataSource.open(StatsDataSource.java:83)\r\n        at com.google.android.exoplayer2.source.ExtractorMediaPeriod$ExtractingLoadable.load(ExtractorMediaPeriod.java:885)\r\n        at com.google.android.exoplayer2.upstream.Loader$LoadTask.run(Loader.java:381)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)\r\n        at java.lang.Thread.run(Thread.java:764)\r\n     Caused by: java.io.FileNotFoundException: /data/user/0/{packagename}/cache/splash/YWRtaW5fYWRfc3BsYXNoXzFjNjAyODhjYjhjNDExZTE5Yzc2ZDRkZmJjMjJhNGMwLm1wNF8xNTU0MTEwMzQxM3.mp4: open failed: ENOENT (No such file or directory)\r\n        at libcore.io.IoBridge.open(IoBridge.java:485)\r\n        at java.io.RandomAccessFile.<init>(RandomAccessFile.java:288)\r\n        at java.io.RandomAccessFile.<init>(RandomAccessFile.java:151)\r\n        at com.google.android.exoplayer2.upstream.FileDataSource.open(FileDataSource.java:65)\r\n        at com.google.android.exoplayer2.upstream.DefaultDataSource.open(DefaultDataSource.java:250) \r\n        at com.google.android.exoplayer2.upstream.StatsDataSource.open(StatsDataSource.java:83) \r\n        at com.google.android.exoplayer2.source.ExtractorMediaPeriod$ExtractingLoadable.load(ExtractorMediaPeriod.java:885) \r\n        at com.google.android.exoplayer2.upstream.Loader$LoadTask.run(Loader.java:381) \r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167) \r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641) \r\n        at java.lang.Thread.run(Thread.java:764) \r\n     Caused by: android.system.ErrnoException: open failed: ENOENT (No such file or directory)\r\n        at libcore.io.Linux.open(Native Method)\r\n        at libcore.io.BlockGuardOs.open(BlockGuardOs.java:210)\r\n        at libcore.io.IoBridge.open(IoBridge.java:471)\r\n        at java.io.RandomAccessFile.<init>(RandomAccessFile.java:288) \r\n        at java.io.RandomAccessFile.<init>(RandomAccessFile.java:151) \r\n        at com.google.android.exoplayer2.upstream.FileDataSource.open(FileDataSource.java:65) \r\n        at com.google.android.exoplayer2.upstream.DefaultDataSource.open(DefaultDataSource.java:250) \r\n        at com.google.android.exoplayer2.upstream.StatsDataSource.open(StatsDataSource.java:83) \r\n        at com.google.android.exoplayer2.source.ExtractorMediaPeriod$ExtractingLoadable.load(ExtractorMediaPeriod.java:885) \r\n        at com.google.android.exoplayer2.upstream.Loader$LoadTask.run(Loader.java:381) \r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167) \r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641) \r\n        at java.lang.Thread.run(Thread.java:764)\r\n\r\n```\r\n `YWRtaW5fYWRfc3BsYXNoXzFjNjAyODhjYjhjNDExZTE5Yzc2ZDRkZmJjMjJhNGMwLm1wNF8xNTU0MTEwMzQxM3.mp4` \r\nRename\r\n` 1234.mp4` \r\n\r\neverything is normal\r\n\r\nfilename No change sometimes success.\r\n\r\nplease help me，Thank you！\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5713/comments",
    "author": "kouxinhong",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2019-04-05T20:34:17Z",
        "body": "Is the `{packagename}` part of the file path a result of you manually censoring the logcat, or was that actually part of the path the file that was trying to be read?\r\n\r\nIf it's actually part of the path then that looks like a problem with the file path that your code is providing to ExoPlayer. If it's manual censoring then that's not the problem, however in this case I doubt it's an ExoPlayer issue. It's more likely to be a limitation of the underlying file system, or else the file really isn't there.\r\n\r\nIt should also be noted that I think the Android platform is allowed to delete files from your cache directory, so I'm not sure that the file not being found is necessarily unexpected. If you want a guarantee that it wont be deleted, then shouldn't you be putting the file somewhere else?"
      },
      {
        "user": "ojw28",
        "created_at": "2019-05-05T18:21:10Z",
        "body": "Closing due to lack of response."
      }
    ]
  },
  {
    "number": 5709,
    "title": "playback encrypted multicast video",
    "created_at": "2019-04-01T09:49:49Z",
    "closed_at": "2019-04-05T09:34:29Z",
    "labels": [
      "question",
      "need more info"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5709",
    "body": "### Question\r\nHello, i am new to Exoplayer. I just tried playback a clear multicast video stream successfully and would like to explore if i can play encrypted multicast video also.\r\nWould anyone suggest a way where can i get & modify/decrypt the ts packets by some external library?\r\n\r\n<!-- DO NOT DELETE\r\nvalidate_template=true\r\ntemplate_path=.github/ISSUE_TEMPLATE/question.md\r\n-->\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5709/comments",
    "author": "kenodevel",
    "comments": [
      {
        "user": "google-oss-bot",
        "created_at": "2019-04-01T09:49:50Z",
        "body": "This issue does not seem to follow the issue template. Make sure you provide all the required information."
      },
      {
        "user": "andrewlewis",
        "created_at": "2019-04-01T12:56:16Z",
        "body": "I don't think there are enough details about what you're trying to do for us to help here. Depending on how the input is encrypted, you may be able to use a custom `DataSource` (like `AesCipherDataSource`) or a custom `TsPayloadReader.Factory` to achieve the result you are aiming for."
      },
      {
        "user": "kenodevel",
        "created_at": "2019-04-02T04:12:37Z",
        "body": "I would like to decrypt the video/audio payload inside those TS packet"
      },
      {
        "user": "andrewlewis",
        "created_at": "2019-04-05T09:34:29Z",
        "body": "Please try the suggestion in my previous comment. We can't help further unless you provide detailed information about what is needed, so I will close this for now. If you discover some ExoPlayer limitation that prevents you doing what you need to do please describe it here and I'll reopen the issue."
      },
      {
        "user": "kenodevel",
        "created_at": "2019-04-11T07:26:34Z",
        "body": "Thanks, i try to create a custom DataSource and i can touch those raw bytes from multicast. It seems i can only modify the data inside the read method. Is there anyway to drop some unwanted ts packet?"
      },
      {
        "user": "kenodevel",
        "created_at": "2019-04-12T07:33:52Z",
        "body": "I think i solved my problem as i overlook the \"the call will block until at least one byte of data has been read and the number of bytes read is returned\" of read."
      }
    ]
  },
  {
    "number": 5707,
    "title": "Delete device cert to test executeProvisionRequest",
    "created_at": "2019-04-01T05:44:06Z",
    "closed_at": "2019-04-05T20:35:05Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5707",
    "body": "### Question\r\nI am trying to proxy executeProvisionRequest and for testing purposes i need to make this callback happen all the time. The call only seems to be happening once per device - also on some devices its already present and this call doesn't happen.\r\n\r\nIs there a way to delete the device cert? \r\n\r\n\r\n<!-- DO NOT DELETE\r\nvalidate_template=true\r\ntemplate_path=.github/ISSUE_TEMPLATE/question.md\r\n-->\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5707/comments",
    "author": "simhavenkat",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2019-04-01T08:05:07Z",
        "body": "I'm not aware of a way to force reprovisioning, or if it is even theoretically possible for devices where provisioning happens at the factory like for Widevine L1. @ojw28 and @AquilesCanta will be able to confirm or correct this.\r\n\r\nIf you really need this for testing, perhaps you can inject fake/mock components to simulate getting EVENT_PROVISION_REQUIRED every time."
      },
      {
        "user": "andrewlewis",
        "created_at": "2019-04-01T13:09:53Z",
        "body": "@ojw28 mentioned there's a file one can delete to clear provisioning data on rooted devices (this doesn't work for factory-provisioned devices though). Hopefully he can provide some more details here :)"
      },
      {
        "user": "ojw28",
        "created_at": "2019-04-01T15:49:50Z",
        "body": "If you have a rooted device and want to force re-provisioning for testing purposes, you can delete the files under `/data/mediadrm/`. This should force re-provisioning. Note that, to the best of my knowledge, factory-provisioned devices don't need provisioning. So those devices wont generate provisioning requests no matter what you do."
      }
    ]
  },
  {
    "number": 5689,
    "title": "IMA force skippable",
    "created_at": "2019-03-27T08:41:18Z",
    "closed_at": "2019-03-27T13:10:17Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5689",
    "body": "### [REQUIRED] Searched documentation and issues\r\nHi there,\r\nI'm using exoplayer-ima in our application. I have searched exoplayer documents, issues and FAQs and IMA respective documents but I haven't found a way to force the skip button in IMA overlay to appear.\r\n\r\n### [REQUIRED] Question\r\nSo my question is:\r\n1. Is there a way to force the skip button to appear for ads tag that does not have this enabled?\r\n2. Otherwise is there a way to check if the ads tag is skippable? We plan to add our own button in the case the ads tag does not have it.\r\n\r\nBest regards,\r\nThuan\r\n<!-- DO NOT DELETE\r\nvalidate_template=true\r\ntemplate_path=.github/ISSUE_TEMPLATE/question.md\r\n-->\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5689/comments",
    "author": "thuantran",
    "comments": [
      {
        "user": "thuantran",
        "created_at": "2019-03-27T09:22:16Z",
        "body": "Issue edited"
      },
      {
        "user": "marcbaechinger",
        "created_at": "2019-03-27T11:35:01Z",
        "body": "Thanks for your question. \r\n\r\nI'm actually not sure whether I can give you an answer here. While I could do that from a technical point of view, I think I should not comment on this just because I'm not entirely sure whether this is something which violates IMA policies. \r\n\r\nFor 1) I'm pretty sure that if an ad tag does not declare an ad to be skippable, then the ad must not be skipped by the user as per definition in the ad tag. I think what you should do is define the ad tag accordingly so that the ad is skippable. That would make your life much easier.\r\n\r\nFor 2) I think to know about policies that an app is not allowed to have a custom overlay on top of an ad. Your custom button you are mentioning would imo be some kind of such a custom overlay. \r\n\r\nI guess that's not the answer you wanted to hear. Sorry about that :( Can you convince me that this is something which is fine to do according to IMA policy?"
      },
      {
        "user": "thuantran",
        "created_at": "2019-03-27T13:10:20Z",
        "body": "Hi Marc,\r\n\r\nThis is a request from our biz side, so I'm looking into the technical feasibility of it. But as you said, that explains why I couldn't find any document on it. Can you point me to the specific policy disallowing such practice, that would be helpful.\r\n\r\nI will get back here after checking it with the team if it's legitimate usage.\r\n\r\nBest regards,\r\nThuan"
      },
      {
        "user": "ojw28",
        "created_at": "2019-03-27T13:12:39Z",
        "body": "> For 1) I'm pretty sure that if an ad tag does not declare an ad to be skippable, then the ad must not be skipped by the user as per definition in the ad tag. I think what you should do is define the ad tag accordingly so that the ad is skippable. That would make your life much easier.\r\n\r\nI agree with that interpretation. If the ad isn't skippable, it shouldn't be skipped. If you only want skippable ads then you need to make sure that your ad campaign only contains skippable ads.\r\n\r\n> Can you point me to the specific policy disallowing such practice, that would be helpful.\r\n\r\nI don't think that's the right way of looking at it. Common sense would suggest that it's not OK to skip a non-skippable ad, so that should be the default understanding unless you can find a specific policy allowing such practice."
      },
      {
        "user": "thuantran",
        "created_at": "2019-03-27T13:18:08Z",
        "body": "That's what I told the biz side as well. But any public document would be better evidence to the issue at hand and appreciated. Can you point me to any?"
      },
      {
        "user": "ojw28",
        "created_at": "2019-03-27T13:22:41Z",
        "body": "Nope, sorry. If your biz side wants only skippable ads, it seems fairly obvious they can and should make sure their ad campaign contains only skippable ads?\r\n\r\nWhy would it be OK to take an advertiser's ad that they haven't designed to be skippable, and unilaterally decide to make it skippable? It's pretty obviously not the right thing to do."
      },
      {
        "user": "thuantran",
        "created_at": "2019-03-27T13:28:59Z",
        "body": "The problem is they can't because we got ads tag from a partner, which might or might not send us skippable ads.\r\n\r\nOur management find it user alienating to have long non-skippable ads. For now they haven't been able to work it out with our partner thus forcing the tech team to find a solution. \r\n\r\nAs I said if there's a document for that it would be easier to tell the biz team to find alternative approach such as working directly with DFP or any SSP to set skippable ads.\r\n\r\nI'm in a bind here as the tech guy you see, help on this is appreciated."
      },
      {
        "user": "ojw28",
        "created_at": "2019-03-27T13:43:52Z",
        "body": "Your management shouldn't be trying to unilaterally ignore the wishes of the ads being served via the partner. I'd suggest you point your management to this thread."
      }
    ]
  },
  {
    "number": 5684,
    "title": "Handling of saiz box with no samples",
    "created_at": "2019-03-26T12:25:31Z",
    "closed_at": "2019-05-05T18:22:03Z",
    "labels": [
      "question",
      "need more info"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5684",
    "body": "### [REQUIRED] Issue description\r\nFragmentedMp4Extractor function parseSaiz() throws a ParserException if the 'saiz' sample count does not match the TrackFragment sample count.\r\n\r\nISO 14496-12 says that the number of samples \"must be the same as, or less than\" than the number of samples in the track. If the value is less than the number of samples, then \"auxiliary information is supplied for the initial samples, and the remaining samples have no associated auxiliary information.\"\r\n\r\nWhy does ExoPlayer require the sample count in the 'saiz' box matches the number of samples?\r\n\r\n<!-- DO NOT DELETE\r\nvalidate_template=true\r\ntemplate_path=.github/ISSUE_TEMPLATE/bug.md\r\n-->\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5684/comments",
    "author": "PaulRutland",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2019-03-27T21:10:54Z",
        "body": "Can you please comment on this, Olly?"
      },
      {
        "user": "ojw28",
        "created_at": "2019-03-27T23:09:13Z",
        "body": "It looks like our code is assuming that the auxiliary information referenced by the `saiz` is encryption information, for which it probably doesn't make sense for there to be fewer samples than the number of samples in the track.\r\n\r\nFrom the spec it looks like it would be valid to have `saiz` atoms referencing arbitrary auxiliary information. So we should probably be checking the auxiliary information type and skipping the atom if it's not the type we're looking for. Given this hasn't come up before, I suspect usage of `saiz` to reference other auxiliary information must be very rare.\r\n\r\n@PaulRutland - Do you have a stream for which this is problematic? If so, could you please provide it."
      },
      {
        "user": "ojw28",
        "created_at": "2019-04-05T20:21:51Z",
        "body": "@PaulRutland - Please can you update this?"
      },
      {
        "user": "ojw28",
        "created_at": "2019-05-05T18:22:03Z",
        "body": "Closing due to lack of requested test stream. If you're able to provide one then please respond with it here, and we'll reopen the issue."
      }
    ]
  },
  {
    "number": 5670,
    "title": "Android Architecture Framework connect to default android DB",
    "created_at": "2019-03-23T02:47:26Z",
    "closed_at": "2019-03-23T10:14:31Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5670",
    "body": "Could you please let me know how to connect, retrieve, update and delete data to android default database table like \"ContactsContract.Contacts\" using android architecture component using Room and Livedata.\r\n\r\nPresently I am using getLoaderManager() with CursorLoader, which is deprecated. I want to update my working code with android architecture components and AndroidX.\r\n\r\nA simple example will be very useful.\r\nThank you.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5670/comments",
    "author": "Avijit-Bose",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2019-03-23T10:14:31Z",
        "body": "This has nothing to do with ExoPlayer."
      }
    ]
  },
  {
    "number": 5655,
    "title": "SimpleExoPlayer.prepare(com.google.android.exoplayer2.source.MediaSource)' on a null object reference",
    "created_at": "2019-03-20T11:10:24Z",
    "closed_at": "2019-03-20T12:38:35Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5655",
    "body": "### [REQUIRED] Searched documentation and issues\r\nnull\r\n\r\n### [REQUIRED] Question\r\nwhen I init the  SimpleExoPlayer player.the method SimpleExoPlayer.prepare()  will  return a null \r\nobject reference.My uri has no problem,Whyyyyyyyy?\r\n\r\nprivate void initPlayer() {\r\n        if (player!=null) {\r\n            player = ExoPlayerFactory.newSimpleInstance(\r\n                    getActivity(), new DefaultRenderersFactory(getActivity()), new DefaultTrackSelector(), new DefaultLoadControl());\r\n            playerView.setPlayer(player);\r\n            player.setPlayWhenReady(playWhenReady);\r\n            player.seekTo(currentWindow, playbackPosition);\r\n        }\r\n        //创建wav文件\r\n        Uri uri=Uri.parse(Environment.getExternalStorageDirectory()+\"/msc/test.wav\");\r\n        DefaultDataSourceFactory dataSourceFactory = new DefaultDataSourceFactory(getActivity(), Util.getUserAgent(getContext(),\"MyApplication\"));\r\n        MediaSource mediaSource=new ExtractorMediaSource.Factory(\r\n                dataSourceFactory).createMediaSource(uri);\r\n        if (mediaSource!=null) {\r\n            player.prepare(mediaSource, false, true);\r\n        }else {\r\n            showTip(\"mediaSource   null\");\r\n        }\r\n\r\n\r\n    }\r\n\r\n<!-- DO NOT DELETE\r\nvalidate_template=true\r\ntemplate_path=.github/ISSUE_TEMPLATE/question.md\r\n-->\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5655/comments",
    "author": "huang122124",
    "comments": [
      {
        "user": "google-oss-bot",
        "created_at": "2019-03-20T11:10:25Z",
        "body": "This issue does not have all the information required by the template.  Looks like you forgot to fill out some sections.  Please update the issue with more information."
      },
      {
        "user": "huang122124",
        "created_at": "2019-03-20T11:11:49Z",
        "body": "My ExoPlayer version is 2.9.3   Android 8.0    XiaoMi PAD 4"
      },
      {
        "user": "tonihei",
        "created_at": "2019-03-20T12:38:35Z",
        "body": "You should probably check for `player==null` on the second line in your snippet. \r\n\r\nBut please be advised that we do not intent to give generic programming advice. Closing this issue for this reason."
      },
      {
        "user": "huang122124",
        "created_at": "2019-03-20T12:46:13Z",
        "body": "Thank you"
      }
    ]
  },
  {
    "number": 5652,
    "title": "VTT caption file download",
    "created_at": "2019-03-19T13:14:25Z",
    "closed_at": "2019-03-20T13:06:33Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5652",
    "body": "### [REQUIRED] Searched documentation and issues\r\nI been looking every where but not success finding appropriated solution\r\n\r\n### [REQUIRED] Question\r\nexoplayer r2.4.  In a hls stream with multiple vtt captions files why exoplayer loads the same file after seek back to the beginning of the stream. ie content start playback from 0 position and plays for 3 minutes and 3 .vtt files download for that period, then a user interaction set the content back to 0 and content resume and plays for the same 3 minutes and download the same files again. Is there a way to make exoplayer cache the already  downloaded vtt files?\r\n\r\n<!-- DO NOT DELETE\r\nvalidate_template=true\r\ntemplate_path=.github/ISSUE_TEMPLATE/question.md\r\n-->\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5652/comments",
    "author": "andresdiez",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2019-03-20T12:50:39Z",
        "body": "That's possible using a `new CacheDataSourceFactory(new SimpleCache(fileDir, evictor), normalDataSource)` as the data source factory for your `MediaSource`. Please also have a look at similar questions on this issue tracker and other websites."
      },
      {
        "user": "andresdiez",
        "created_at": "2019-03-20T13:06:33Z",
        "body": "That work, thank you."
      }
    ]
  },
  {
    "number": 5648,
    "title": "need help with stream from .json file, advertising and cast to chromecast",
    "created_at": "2019-03-18T20:01:38Z",
    "closed_at": "2019-03-19T10:14:33Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5648",
    "body": "Hello, I need help in developing an application. \r\n3 in 1 to get all 3 demos in one Demo/IMA/Cast in one app.\r\nI want to build an application that Streams are broadcast from a .json playlist, as in the ExoPlayer demo, and support ads like admob / IMA, and want that application will be able to cast to chromecast. \r\nPlease help me with my problem and show examples if they exist some.\r\nI tried to build ExoPlayer from the demo, but I failed.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5648/comments",
    "author": "MehmanDadashov",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2019-03-19T10:14:33Z",
        "body": "Unfortunately, we can't help you build your own app and this issue tracker is for specific bugs and questions around ExoPlayer only. \r\n\r\nWe already have the demo apps you mentioned with all the functionality and if you need help for particular issues which fall into generic Android development, please use platforms such as StackOverflow or similar to get help from others."
      }
    ]
  },
  {
    "number": 5644,
    "title": "PlayerControlView updatePlayPauseButton not in ui thread(crash)",
    "created_at": "2019-03-18T13:42:01Z",
    "closed_at": "2019-03-19T07:25:58Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5644",
    "body": "```java\r\nversion:\r\ncom.google.android.exoplayer:exoplayer:2.9.6\r\n```\r\n```java\r\ndevice:xiaomi max,huawei ...\r\nmore than 5 device\r\n```\r\n\r\n\r\n```java\r\nsimpleExoPlayer.setAudioAttributes(audioAttributes,true)\r\nlet exo handle audiofocus\r\n```\r\n```java\r\nwhen audio lost focus\r\nexpected:  not crash\r\nobserved:  crash  ( Only the original thread that created a view hierarchy can touch its views.)\r\n```\r\n```java\r\ninfo\r\nAudioFocusListener  call back in LocalIOWorker thread ,it change view in LocalIOWorker thread direct\r\n```",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5644/comments",
    "author": "shoyu666",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2019-03-18T14:01:31Z",
        "body": "This is still omitting quite a lot from the issue template.\r\n\r\nBesides that, it sounds as if you are calling setAudioAttributes on the wrong thread. Please check if can see \"Player is accessed on the wrong thread.\" warnings in the logcat to know where these calls are coming from."
      },
      {
        "user": "shoyu666",
        "created_at": "2019-03-19T02:37:28Z",
        "body": "```java\r\nthanks for you reply\r\nit seem: we have multi exoplayer instance in project\r\nother people init exoplayer in 'LocalIOWorker ' thread without bind any view,\r\nand my exoplayer init in main thread bind a controll view\r\nwhen Focus occur,my exoplayer will callback in 'LocalIOWorker  ' not in main thread。\r\ni will Keep on understanding    thanks very much\r\n\r\n```\r\n\r\n"
      },
      {
        "user": "nitinglobal",
        "created_at": "2019-04-22T19:58:16Z",
        "body": "I am also facing the same issue , I have implemented the audio focus for audio and integrated the audioattributes for video in version 2.9.6 when i play audio and try to play video then same crash i get. May i know how i can fix this issue,i am creating and executing all commands of exoplayer on single application thread only."
      }
    ]
  },
  {
    "number": 5640,
    "title": "how to track percentage of progressing download of each downloading file in EXOPlayer library ?",
    "created_at": "2019-03-17T17:10:52Z",
    "closed_at": "2019-04-05T20:54:32Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5640",
    "body": "I am working on a media player app. I'm using ExoPlayer library. I have a playlist of videos, and I want to download videos simultaneously. I done it by using available demo app of exoplayer library on GitHub. I want to show progress of each downloading in the UI. For this job I get help from DownloadNotificationUtil.buildProgressNotification method.\r\n`   @Override\r\n    protected Notification getForegroundNotification(TaskState[] taskStates) {\r\n\r\n        float totalPercentage = 0;\r\n        int downloadTaskCount = 0;\r\n        boolean allDownloadPercentagesUnknown = true;\r\n        boolean haveDownloadedBytes = false;\r\n        boolean haveDownloadTasks = false;\r\n        boolean haveRemoveTasks = false;\r\n        for (TaskState taskState : taskStates) {\r\n            if (taskState.state != TaskState.STATE_STARTED\r\n                    && taskState.state != TaskState.STATE_COMPLETED) {\r\n                continue;\r\n            }\r\n            if (taskState.action.isRemoveAction) {\r\n                haveRemoveTasks = true;\r\n                continue;\r\n            }\r\n            haveDownloadTasks = true;\r\n            if (taskState.downloadPercentage != C.PERCENTAGE_UNSET) {\r\n                allDownloadPercentagesUnknown = false;\r\n                totalPercentage += taskState.downloadPercentage;\r\n            }\r\n            haveDownloadedBytes |= taskState.downloadedBytes > 0;\r\n            downloadTaskCount++;\r\n        }\r\n\r\n        int progress = 0;\r\n        boolean indeterminate = true;\r\n        if (haveDownloadTasks) {\r\n            progress = (int) (totalPercentage / downloadTaskCount);\r\n            indeterminate = allDownloadPercentagesUnknown && haveDownloadedBytes;\r\n\r\n            Log.e(TAG,\"notifi \"+progress);\r\n            sendIntent(progress);\r\n        }\r\n        return DownloadNotificationUtil.buildProgressNotification(\r\n                this,\r\n                R.drawable.exo_icon_play,\r\n                DOWNLOAD_CHANNEL_ID,\r\n                null,\r\n                null,\r\n                taskStates);\r\n    }`\r\nNow,I can track the progress downloading. But I still have a problem. I can't understand which item is downloading to update it's progress bar in the UI. Is there a Identical id of each download to recognize it? For example Android Download Manager has a download ID for each downloading file. But I don't know , how to handle this problem. This is MediaDownloadService:\r\n\r\n```\r\npublic class MediaDownloadService extends DownloadService {\r\npublic static String TAG=\"MediaDownloadService\";\r\nprivate static final int FOREGROUND_NOTIFICATION_ID = 1;\r\npublic MediaDownloadService() {\r\n    super(\r\n            DOWNLOAD_NOTIFICATION_ID,\r\n            DEFAULT_FOREGROUND_NOTIFICATION_UPDATE_INTERVAL,\r\n            DOWNLOAD_CHANNEL_ID,\r\n            R.string.download_channel_name);\r\n}\r\n@Override\r\nprotected DownloadManager getDownloadManager() {\r\n    return ((MyApplication) getApplication()).getDownloadManager();\r\n}\r\n\r\n@Nullable\r\n@Override\r\nprotected Scheduler getScheduler() {\r\n    return null;\r\n}\r\n\r\n@Override\r\nprotected Notification getForegroundNotification(TaskState[] taskStates) {\r\n\r\n    float totalPercentage = 0;\r\n    int downloadTaskCount = 0;\r\n    boolean allDownloadPercentagesUnknown = true;\r\n    boolean haveDownloadedBytes = false;\r\n    boolean haveDownloadTasks = false;\r\n    boolean haveRemoveTasks = false;\r\n    for (TaskState taskState : taskStates) {\r\n        if (taskState.state != TaskState.STATE_STARTED\r\n                && taskState.state != TaskState.STATE_COMPLETED) {\r\n            continue;\r\n        }\r\n        if (taskState.action.isRemoveAction) {\r\n            haveRemoveTasks = true;\r\n            continue;\r\n        }\r\n        haveDownloadTasks = true;\r\n        if (taskState.downloadPercentage != C.PERCENTAGE_UNSET) {\r\n            allDownloadPercentagesUnknown = false;\r\n            totalPercentage += taskState.downloadPercentage;\r\n        }\r\n        haveDownloadedBytes |= taskState.downloadedBytes > 0;\r\n        downloadTaskCount++;\r\n    }\r\n\r\n    int progress = 0;\r\n    boolean indeterminate = true;\r\n    if (haveDownloadTasks) {\r\n        progress = (int) (totalPercentage / downloadTaskCount);\r\n        indeterminate = allDownloadPercentagesUnknown && haveDownloadedBytes;\r\n\r\n        Log.e(TAG,\"notifi \"+progress);\r\n        sendIntent(progress);\r\n    }\r\n    return DownloadNotificationUtil.buildProgressNotification(\r\n            this,\r\n            R.drawable.exo_icon_play,\r\n            DOWNLOAD_CHANNEL_ID,\r\n            null,\r\n            null,\r\n            taskStates);\r\n}\r\n\r\nprivate void sendIntent(int progress){\r\n    Intent intent = new Intent(ConstantUtil.MESSAGE_PROGRESS);\r\n    intent.putExtra(\"progress\",progress);\r\n    LocalBroadcastManager.getInstance(MediaDownloadService.this).sendBroadcast(intent);\r\n}\r\n\r\n@Override\r\nprotected void onTaskStateChanged(TaskState taskState) {\r\n    if (taskState.action.isRemoveAction) {\r\n        return;\r\n    }\r\n\r\n    Notification notification = null;\r\n    if (taskState.state == TaskState.STATE_COMPLETED) {\r\n        Log.e(TAG,\"STATE_COMPLETED\");\r\n        notification =\r\n                DownloadNotificationUtil.buildDownloadCompletedNotification(\r\n                        /* context= */ this,\r\n                        R.drawable.exo_controls_play,\r\n                        DOWNLOAD_CHANNEL_ID,\r\n                        /* contentIntent= */ null,\r\n                        Util.fromUtf8Bytes(taskState.action.data));\r\n    } else if (taskState.state == TaskState.STATE_FAILED) {\r\n        Log.e(TAG,\"STATE_FAILED\");\r\n        notification =\r\n                DownloadNotificationUtil.buildDownloadFailedNotification(\r\n                        /* context= */ this,\r\n                        R.drawable.exo_controls_play,\r\n                        DOWNLOAD_CHANNEL_ID,\r\n                        /* contentIntent= */ null,\r\n                        Util.fromUtf8Bytes(taskState.action.data));\r\n    }\r\n    int notificationId = FOREGROUND_NOTIFICATION_ID + 1 + taskState.taskId;\r\n    NotificationUtil.setNotification(this, notificationId, notification);\r\n  }\r\n}\r\n```\r\nThis is DownloadTracker class:\r\n```\r\npublic class DownloadTracker implements DownloadManager.Listener {\r\n\r\n    /** Listens for changes in the tracked downloads. */\r\n    public interface Listener {\r\n\r\n        /** Called when the tracked downloads changed. */\r\n        void onDownloadsChanged();\r\n    }\r\n\r\n    private static final String TAG = \"DownloadTracker\";\r\n\r\n    private final Context context;\r\n    private final DataSource.Factory dataSourceFactory;\r\n    private final TrackNameProvider trackNameProvider;\r\n    private final CopyOnWriteArraySet<Listener> listeners;\r\n    private  Listener onDownloadsChanged;\r\n    private final HashMap<Uri, DownloadAction> trackedDownloadStates;\r\n    private final ActionFile actionFile;\r\n    private final Handler actionFileWriteHandler;\r\n\r\n    public DownloadTracker(\r\n            Context context,\r\n            DataSource.Factory dataSourceFactory,\r\n            File actionFile,\r\n            DownloadAction.Deserializer... deserializers) {\r\n        this.context = context.getApplicationContext();\r\n        this.dataSourceFactory = dataSourceFactory;\r\n        this.actionFile = new ActionFile(actionFile);\r\n        trackNameProvider = new DefaultTrackNameProvider(context.getResources());\r\n        listeners = new CopyOnWriteArraySet<>();\r\n        trackedDownloadStates = new HashMap<>();\r\n        HandlerThread actionFileWriteThread = new HandlerThread(\"DownloadTracker\");\r\n        actionFileWriteThread.start();\r\n        actionFileWriteHandler = new Handler(actionFileWriteThread.getLooper());\r\n        loadTrackedActions(\r\n                deserializers.length > 0 ? deserializers : DownloadAction.getDefaultDeserializers());\r\n    }\r\n\r\n\r\n\r\n    public void addListener(Listener listener) {\r\n        listeners.add(listener);\r\n    }\r\n\r\n    public void removeListener(Listener listener) {\r\n        listeners.remove(listener);\r\n    }\r\n\r\n    public boolean isDownloaded(Uri uri) {\r\n        return trackedDownloadStates.containsKey(uri);\r\n    }\r\n\r\n    @SuppressWarnings(\"unchecked\")\r\n    public List<StreamKey> getOfflineStreamKeys(Uri uri) {\r\n        if (!trackedDownloadStates.containsKey(uri)) {\r\n            return Collections.emptyList();\r\n        }\r\n        return trackedDownloadStates.get(uri).getKeys();\r\n    }\r\n\r\n    public int toggleDownload(Activity activity, String name, Uri uri, String extension) {\r\n        if (isDownloaded(uri)) {\r\n            Log.e(TAG,\"isDownloaded\");\r\n            DownloadAction removeAction =\r\n                    getDownloadHelper(uri, extension).getRemoveAction(Util.getUtf8Bytes(name));\r\n            startServiceWithAction(removeAction);\r\n            return -1;\r\n        } else {\r\n            StartDownloadDialogHelper helper =\r\n                    new StartDownloadDialogHelper(activity, getDownloadHelper(uri, extension), name);\r\n            helper.prepare();\r\n            return helper.getTaskId();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onInitialized(DownloadManager downloadManager) {\r\n        // Do nothing.\r\n    }\r\n\r\n    @Override\r\n    public void onTaskStateChanged(DownloadManager downloadManager, TaskState taskState) {\r\n\r\n        DownloadAction action = taskState.action;\r\n        Uri uri = action.uri;\r\n        if ((action.isRemoveAction && taskState.state == TaskState.STATE_COMPLETED)\r\n                || (!action.isRemoveAction && taskState.state == TaskState.STATE_FAILED)) {\r\n            // A download has been removed, or has failed. Stop tracking it.\r\n            if (trackedDownloadStates.remove(uri) != null) {\r\n\r\n\r\n                handleTrackedDownloadStatesChanged();\r\n            }\r\n        }   \r\n\r\n    }\r\n\r\n    @Override\r\n    public void onIdle(DownloadManager downloadManager) {\r\n        // Do nothing.\r\n    }\r\n\r\n    // Internal methods\r\n\r\n    private void loadTrackedActions(DownloadAction.Deserializer[] deserializers) {\r\n        try {\r\n            DownloadAction[] allActions = actionFile.load(deserializers);\r\n            for (DownloadAction action : allActions) {\r\n                trackedDownloadStates.put(action.uri, action);\r\n            }\r\n        } catch (IOException e) {\r\n            Log.e(TAG, \"Failed to load tracked actions\", e);\r\n        }\r\n    }\r\n\r\n    private void handleTrackedDownloadStatesChanged() {\r\n        for (Listener listener : listeners) {\r\n            listener.onDownloadsChanged();\r\n        }\r\n        final DownloadAction[] actions = trackedDownloadStates.values().toArray(new DownloadAction[0]);\r\n        Log.e(TAG,\"actions: \"+actions.toString());\r\n        actionFileWriteHandler.post(\r\n                () -> {\r\n                    try {\r\n                        actionFile.store(actions);\r\n                    } catch (IOException e) {\r\n                        Log.e(TAG, \"Failed to store tracked actions\", e);\r\n                    }\r\n                });\r\n    }\r\n\r\n    private void startDownload(DownloadAction action) {\r\n        if (trackedDownloadStates.containsKey(action.uri)) {\r\n            // This content is already being downloaded. Do nothing.\r\n            Log.e(TAG,\"download already exsit\");\r\n            return;\r\n        }\r\n        trackedDownloadStates.put(action.uri, action);\r\n        handleTrackedDownloadStatesChanged();\r\n        startServiceWithAction(action);\r\n    }\r\n\r\n    private void startServiceWithAction(DownloadAction action) {\r\n\r\n        DownloadService.startWithAction(context, MediaDownloadService.class, action, false);\r\n    }\r\n\r\n    private DownloadHelper getDownloadHelper(Uri uri, String extension) {\r\n        int type = Util.inferContentType(uri, extension);\r\n        switch (type) {\r\n            case C.TYPE_DASH:\r\n                return new DashDownloadHelper(uri, dataSourceFactory);\r\n            case C.TYPE_SS:\r\n                return new SsDownloadHelper(uri, dataSourceFactory);\r\n            case C.TYPE_HLS:\r\n                return new HlsDownloadHelper(uri, dataSourceFactory);\r\n            case C.TYPE_OTHER:\r\n                return new ProgressiveDownloadHelper(uri);\r\n            default:\r\n                throw new IllegalStateException(\"Unsupported type: \" + type);\r\n        }\r\n    }\r\n\r\n    private final class StartDownloadDialogHelper\r\n            implements DownloadHelper.Callback, DialogInterface.OnClickListener {\r\n\r\n        private final DownloadHelper downloadHelper;\r\n        private final String name;\r\n\r\n        private final AlertDialog.Builder builder;\r\n        private final View dialogView;\r\n        private final List<TrackKey> trackKeys;\r\n        private final ArrayAdapter<String> trackTitles;\r\n        private final ListView representationList;\r\n        private int taskId;\r\n\r\n        public StartDownloadDialogHelper(\r\n                Activity activity, DownloadHelper downloadHelper, String name) {\r\n            this.downloadHelper = downloadHelper;\r\n            this.name = name;\r\n            builder =\r\n                    new AlertDialog.Builder(activity)\r\n                            .setTitle(R.string.exo_download_description)\r\n                            .setPositiveButton(android.R.string.ok, this)\r\n                            .setNegativeButton(android.R.string.cancel, null);\r\n\r\n            // Inflate with the builder's context to ensure the correct style is used.\r\n            LayoutInflater dialogInflater = LayoutInflater.from(builder.getContext());\r\n            dialogView = dialogInflater.inflate(R.layout.start_download_dialog, null);\r\n\r\n            trackKeys = new ArrayList<>();\r\n            trackTitles =\r\n                    new ArrayAdapter<>(\r\n                            builder.getContext(), android.R.layout.simple_list_item_multiple_choice);\r\n            representationList = dialogView.findViewById(R.id.representation_list);\r\n            representationList.setChoiceMode(ListView.CHOICE_MODE_MULTIPLE);\r\n            representationList.setAdapter(trackTitles);\r\n        }\r\n\r\n        public void prepare() {\r\n            downloadHelper.prepare(this);\r\n\r\n        }\r\n\r\n        @Override\r\n        public void onPrepared(DownloadHelper helper) {\r\n\r\n            for (int i = 0; i < downloadHelper.getPeriodCount(); i++) {\r\n                TrackGroupArray trackGroups = downloadHelper.getTrackGroups(i);\r\n                for (int j = 0; j < trackGroups.length; j++) {\r\n                    TrackGroup trackGroup = trackGroups.get(j);\r\n                    for (int k = 0; k < trackGroup.length; k++) {\r\n                        trackKeys.add(new TrackKey(i, j, k));\r\n                        trackTitles.add(trackNameProvider.getTrackName(trackGroup.getFormat(k)));\r\n                    }\r\n                }\r\n            }\r\n            if (!trackKeys.isEmpty()) {\r\n                builder.setView(dialogView);\r\n            }\r\n            builder.create().show();\r\n        }\r\n\r\n        @Override\r\n        public void onPrepareError(DownloadHelper helper, IOException e) {\r\n            Toast.makeText(\r\n                    context.getApplicationContext(), R.string.download_start_error, Toast.LENGTH_LONG)\r\n                    .show();\r\n            Log.e(TAG, \"Failed to start download\", e);\r\n        }\r\n\r\n        @Override\r\n        public void onClick(DialogInterface dialog, int which) {\r\n            ArrayList<TrackKey> selectedTrackKeys = new ArrayList<>();\r\n            for (int i = 0; i < representationList.getChildCount(); i++) {\r\n                if (representationList.isItemChecked(i)) {\r\n                    selectedTrackKeys.add(trackKeys.get(i));\r\n                }\r\n            }\r\n            if (!selectedTrackKeys.isEmpty() || trackKeys.isEmpty()) {\r\n                // We have selected keys, or we're dealing with single stream content.\r\n                DownloadAction downloadAction =\r\n                        downloadHelper.getDownloadAction(Util.getUtf8Bytes(name), selectedTrackKeys);\r\n                taskId=MyApplication.getInstance().getDownloadManager().handleAction(downloadAction);\r\n\r\n                startDownload(downloadAction);\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n```\r\nIn my Fragment/Activity:\r\n```\r\n/* this method will be called when user click on download button of each item */\r\n    @Override\r\n            public void onDownloadClick(LectureList lecture) {\r\n                Log.e(TAG,\"onClickDownload\");\r\ndownloadTracker.toggleDownload(this,lecture.getTitle_lecture(),\r\n                        Uri.parse(lecture.getUrlPath()),lecture.getExtension());\r\n            }\r\n```\r\nAnd here is my broadcast receiver:\r\n```\r\nprivate BroadcastReceiver broadcastReceiver = new BroadcastReceiver() {\r\n    @Override\r\n    public void onReceive(Context context, Intent intent) {\r\n        Log.e(TAG,\"onRecive download\");\r\n\r\n        if(intent.getAction().equals(MESSAGE_PROGRESS)){\r\n            int progress=intent.getLongExtra(\"progress\",0);\r\n        }\r\n    }\r\n};\r\n```\r\nI am using ExoPlayer 2.9.6.\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5640/comments",
    "author": "makazemi",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2019-03-18T13:25:05Z",
        "body": "We are currently improving tracking of downloads, so that this task should become easier in the upcoming release.\r\n\r\n@erdemguven  Can you comment on how the notifications can be identified in the current version?"
      },
      {
        "user": "makazemi",
        "created_at": "2019-03-18T14:57:44Z",
        "body": "@tonihei Good. I'm waiting for new version. I have a small question. Are downloaded .exo files encrypted and there is no way to play them? I want to play downloaded video only on my app. Do I need to re-encrypt these again? "
      },
      {
        "user": "sravan1213",
        "created_at": "2019-03-20T17:38:22Z",
        "body": "@makazemi SimpleCache supports encryption.\r\n`SimpleCache(File cacheDir, CacheEvictor evictor, byte[] secretKey, boolean encrypt)`\r\n Hope this is helpful"
      },
      {
        "user": "makazemi",
        "created_at": "2019-03-21T08:37:45Z",
        "body": "@sravan1213  Thanks a lot my friend."
      }
    ]
  },
  {
    "number": 5637,
    "title": "How can I getCurrentPosition only Audio Track exclude Video Track",
    "created_at": "2019-03-15T08:50:43Z",
    "closed_at": "2019-03-15T11:47:47Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5637",
    "body": "### Searched documentation and issues\r\nalready looked for an answer to your question. \r\n\r\n### Question\r\n\r\n default result getCurrentPosition \r\n```java\r\n2019-03-15 14:31:00.643 25338-25338/cn.findpiano.findandroidusbmanager D/findandroidusbmanager: ready to play !!!\r\n2019-03-15 14:31:00.644 25338-25338/cn.findpiano.findandroidusbmanager D/findandroidusbmanager: current = 0\r\n2019-03-15 14:31:00.774 25338-25338/cn.findpiano.findandroidusbmanager I/chatty: uid=10081(cn.findpiano.findandroidusbmanager) identical 8 lines\r\n2019-03-15 14:31:00.785 25338-25338/cn.findpiano.findandroidusbmanager D/findandroidusbmanager: current = 0\r\n2019-03-15 14:31:00.796 25338-25338/cn.findpiano.findandroidusbmanager D/findandroidusbmanager: current = 0\r\n2019-03-15 14:31:00.808 25338-25338/cn.findpiano.findandroidusbmanager D/findandroidusbmanager: current = 0\r\n2019-03-15 14:31:00.821 25338-25338/cn.findpiano.findandroidusbmanager D/findandroidusbmanager: current = 53\r\n2019-03-15 14:31:00.832 25338-25338/cn.findpiano.findandroidusbmanager D/findandroidusbmanager: current = 65\r\n2019-03-15 14:31:00.843 25338-25338/cn.findpiano.findandroidusbmanager D/findandroidusbmanager: current = 65\r\n2019-03-15 14:31:00.853 25338-25338/cn.findpiano.findandroidusbmanager D/findandroidusbmanager: current = 87\r\n2019-03-15 14:31:00.864 25338-25338/cn.findpiano.findandroidusbmanager D/findandroidusbmanager: current = 87\r\n2019-03-15 14:31:00.877 25338-25338/cn.findpiano.findandroidusbmanager D/findandroidusbmanager: current = 110\r\n2019-03-15 14:31:00.889 25338-25338/cn.findpiano.findandroidusbmanager D/findandroidusbmanager: current = 121\r\n2019-03-15 14:31:00.901 25338-25338/cn.findpiano.findandroidusbmanager D/findandroidusbmanager: current = 131\r\n2019-03-15 14:31:00.913 25338-25338/cn.findpiano.findandroidusbmanager D/findandroidusbmanager: current = 131\r\n2019-03-15 14:31:00.924 25338-25338/cn.findpiano.findandroidusbmanager D/findandroidusbmanager: current = 150\r\n2019-03-15 14:31:00.935 25338-25338/cn.findpiano.findandroidusbmanager D/findandroidusbmanager: current = 159\r\n2019-03-15 14:31:00.946 25338-25338/cn.findpiano.findandroidusbmanager D/findandroidusbmanager: current = 180\r\n2019-03-15 14:31:00.957 25338-25338/cn.findpiano.findandroidusbmanager D/findandroidusbmanager: current = 180\r\n2019-03-15 14:31:00.968 25338-25338/cn.findpiano.findandroidusbmanager D/findandroidusbmanager: current = 192\r\n2019-03-15 14:31:00.979 25338-25338/cn.findpiano.findandroidusbmanager D/findandroidusbmanager: current = 204\r\n2019-03-15 14:31:00.994 25338-25338/cn.findpiano.findandroidusbmanager D/findandroidusbmanager: current = 225\r\n2019-03-15 14:31:01.006 25338-25338/cn.findpiano.findandroidusbmanager D/findandroidusbmanager: current = 235\r\n2019-03-15 14:31:01.018 25338-25338/cn.findpiano.findandroidusbmanager D/findandroidusbmanager: current = 246\r\n2019-03-15 14:31:01.029 25338-25338/cn.findpiano.findandroidusbmanager D/findandroidusbmanager: current = 256\r\n2019-03-15 14:31:01.043 25338-25338/cn.findpiano.findandroidusbmanager D/findandroidusbmanager: current = 267\r\n2019-03-15 14:31:01.054 25338-25338/cn.findpiano.findandroidusbmanager D/findandroidusbmanager: current = 289\r\n2019-03-15 14:31:01.065 25338-25338/cn.findpiano.findandroidusbmanager D/findandroidusbmanager: current = 300\r\n```\r\n\r\n override buildVideoRenderers function do nothing, and setRendererDisabled(0, true). result is good\r\n```java\r\n2019-03-15 16:48:17.442 14600-14600/cn.findpiano.findandroidusbmanager D/findandroidusbmanager: duration = 20587!!!\r\n2019-03-15 16:48:17.442 14600-14600/cn.findpiano.findandroidusbmanager D/findandroidusbmanager: start playing !!!\r\n2019-03-15 16:48:17.451 14600-14600/cn.findpiano.findandroidusbmanager D/findandroidusbmanager: current = 0\r\n2019-03-15 16:48:17.469 14600-14600/cn.findpiano.findandroidusbmanager D/findandroidusbmanager: current = 22\r\n2019-03-15 16:48:17.485 14600-14600/cn.findpiano.findandroidusbmanager D/findandroidusbmanager: current = 41\r\n2019-03-15 16:48:17.497 14600-14600/cn.findpiano.findandroidusbmanager D/findandroidusbmanager: current = 52\r\n2019-03-15 16:48:17.508 14600-14600/cn.findpiano.findandroidusbmanager D/findandroidusbmanager: current = 63\r\n2019-03-15 16:48:17.518 14600-14600/cn.findpiano.findandroidusbmanager D/findandroidusbmanager: current = 74\r\n2019-03-15 16:48:17.534 14600-14600/cn.findpiano.findandroidusbmanager D/findandroidusbmanager: current = 84\r\n2019-03-15 16:48:17.545 14600-14600/cn.findpiano.findandroidusbmanager D/findandroidusbmanager: current = 95\r\n2019-03-15 16:48:17.556 14600-14600/cn.findpiano.findandroidusbmanager D/findandroidusbmanager: current = 106\r\n2019-03-15 16:48:17.567 14600-14600/cn.findpiano.findandroidusbmanager D/findandroidusbmanager: current = 117\r\n2019-03-15 16:48:17.578 14600-14600/cn.findpiano.findandroidusbmanager D/findandroidusbmanager: current = 126\r\n2019-03-15 16:48:17.589 14600-14600/cn.findpiano.findandroidusbmanager D/findandroidusbmanager: current = 136\r\n2019-03-15 16:48:17.600 14600-14600/cn.findpiano.findandroidusbmanager D/findandroidusbmanager: current = 157\r\n2019-03-15 16:48:17.611 14600-14600/cn.findpiano.findandroidusbmanager D/findandroidusbmanager: current = 168\r\n2019-03-15 16:48:17.623 14600-14600/cn.findpiano.findandroidusbmanager D/findandroidusbmanager: current = 179\r\n2019-03-15 16:48:17.634 14600-14600/cn.findpiano.findandroidusbmanager D/findandroidusbmanager: current = 190\r\n2019-03-15 16:48:17.645 14600-14600/cn.findpiano.findandroidusbmanager D/findandroidusbmanager: current = 201\r\n2019-03-15 16:48:17.655 14600-14600/cn.findpiano.findandroidusbmanager D/findandroidusbmanager: current = 212\r\n2019-03-15 16:48:17.666 14600-14600/cn.findpiano.findandroidusbmanager D/findandroidusbmanager: current = 212\r\n2019-03-15 16:48:17.677 14600-14600/cn.findpiano.findandroidusbmanager D/findandroidusbmanager: current = 233\r\n2019-03-15 16:48:17.689 14600-14600/cn.findpiano.findandroidusbmanager D/findandroidusbmanager: current = 245\r\n2019-03-15 16:48:17.700 14600-14600/cn.findpiano.findandroidusbmanager D/findandroidusbmanager: current = 256\r\n2019-03-15 16:48:17.711 14600-14600/cn.findpiano.findandroidusbmanager D/findandroidusbmanager: current = 267\r\n2019-03-15 16:48:17.723 14600-14600/cn.findpiano.findandroidusbmanager D/findandroidusbmanager: current = 277\r\n2019-03-15 16:48:17.734 14600-14600/cn.findpiano.findandroidusbmanager D/findandroidusbmanager: current = 288\r\n2019-03-15 16:48:17.744 14600-14600/cn.findpiano.findandroidusbmanager D/findandroidusbmanager: current = 298\r\n```\r\n\r\n how can i get just audio position with all track???\r\n\r\n<!-- DO NOT DELETE\r\nvalidate_template=true\r\ntemplate_path=.github/ISSUE_TEMPLATE/bug.md\r\n-->\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5637/comments",
    "author": "imcloud",
    "comments": [
      {
        "user": "google-oss-bot",
        "created_at": "2019-03-15T08:50:44Z",
        "body": "This issue does not seem to follow the issue template. Make sure you provide all the required information."
      },
      {
        "user": "imcloud",
        "created_at": "2019-03-15T09:41:19Z",
        "body": "if has video track,  when begin always lost 100ms "
      },
      {
        "user": "imcloud",
        "created_at": "2019-03-15T11:49:40Z",
        "body": "getCurrentPosition not accurate in every ExtractorMediaSource"
      }
    ]
  },
  {
    "number": 5631,
    "title": "IMA - time between two ads",
    "created_at": "2019-03-14T08:15:32Z",
    "closed_at": "2019-03-14T08:30:07Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5631",
    "body": "Ads server are providing VASTs for ad breaks. I am merging many VASTs into one VMAP and using it as response (_buildForAdsResponse_). When I jump to position behind the first ad break, ad is played. Immediately after the first ad is completed, I will jump to position behind the second ad break and the second ad is played. How can I specify a minimum time between two ads to be played? It means, I do not want to play two ads more often than, lets say, five minutes. Thanks!\r\n\r\n<!-- DO NOT DELETE\r\nvalidate_template=true\r\ntemplate_path=.github/ISSUE_TEMPLATE/question.md\r\n-->\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5631/comments",
    "author": "ThomasCZ",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2019-03-14T08:30:07Z",
        "body": "This is not currently supported with ImaAdsLoader I'm afraid.\r\n\r\nIn case you want to experiment/investigate further: you could try calling AdsManager.discardAdBreak right after an ad break loads if you've played an ad more recently than a certain threshold. The IMA extension uses preloading, and the behavior of this API may not be well defined when preloading is enabled, but I think it's worth a try if you are keen to get this behavior. I'm afraid we can't provide more detailed guidance here. If you do try it it would be good if you could post your findings here."
      }
    ]
  },
  {
    "number": 5627,
    "title": "Custom Load Error message: available or not?",
    "created_at": "2019-03-13T11:54:46Z",
    "closed_at": "2019-03-31T20:27:14Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5627",
    "body": "### Searched documentation and issues\r\nI have been looking around the web, offical Android Dev. website, Medium, in this repository Issue category and in the Source code.\r\n\r\n### Question\r\nI am working with the ExoPlayer error handling. I found that when my Server response is an exception of type \"InvalidResponseCodeException\" I am not able to find the server message, just the default http status message (in the LoadErrorHandlingPolicy custom class as well as for the player listener onPlayerError() method). I am wondering if is there a way to get it or it is a feature not yet implemented.\r\n\r\n<!-- DO NOT DELETE\r\nvalidate_template=true\r\ntemplate_path=.github/ISSUE_TEMPLATE/question.md\r\n-->\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5627/comments",
    "author": "JonathanImperato",
    "comments": [
      {
        "user": "AquilesCanta",
        "created_at": "2019-03-13T12:11:38Z",
        "body": "It should be available through InvalidResponseCodeException#responseMessage. Is that empty? If so, are you sure the server is providing a non-empty response body? Have you tried different HTTP DataSources?"
      },
      {
        "user": "JonathanImperato",
        "created_at": "2019-03-13T13:24:00Z",
        "body": "> It should be available through InvalidResponseCodeException#responseMessage. Is that empty? If so, are you sure the server is providing a non-empty response body? Have you tried different HTTP DataSources?\r\n\r\nInvalidResponseCodeException#responseMessage prints the default http status message such as 401 Unauthorized, not the server message (eg. For 401: You are not authorized)..."
      },
      {
        "user": "AquilesCanta",
        "created_at": "2019-03-13T13:34:05Z",
        "body": "Oh right, the responseMessage doesn't contain the response body. I can confirm this is not provided out of the box. I don't think reading the response body for an error is something we want to add to any default implementation.\r\n\r\nCan you explain the usecase for this?"
      },
      {
        "user": "JonathanImperato",
        "created_at": "2019-03-13T13:49:01Z",
        "body": "> Oh right, the responseMessage doesn't contain the response body. I can confirm this is not provided out of the box. I don't think reading the response body for an error is something we want to add to any default implementation.\r\n> \r\n> Can you explain the usecase for this?\r\n\r\nIt is usefull because we don't want to keep this messages inside the app, these are messages that may change over time and mostly they are translated.\r\nFor example we are handling error 429 \"Too many requests\", when ExoPlayer reaches this error it will show an AlertDialog with the wanted information.\r\nWe want to have this message customizable on the Server side.\r\nI hope it is a little bit more clear."
      },
      {
        "user": "AquilesCanta",
        "created_at": "2019-03-28T10:52:57Z",
        "body": "The easiest way I can think of implementing the provision of the error's response body is including it in the InvalidResponseCodeException. However, it's probably not ideal to block until we read the response body, before we throw the exception. So, we might also want to add a per-implementation flag that enables populating the response body for this case.\r\n\r\n@JonathanImperato, I see slim chances of us adding this any time soon. You might want to think of using your own DataSource implementation that does this for you. It shouldn't be hard, if you part from an existing implementation.\r\n\r\n@ojw28, can you think of a better way of providing the response body of a non-2xx response?"
      },
      {
        "user": "amozoss",
        "created_at": "2019-03-29T21:38:12Z",
        "body": "Not ideal, but if you can have the server return the error in a header, you can get the error message that way. I have a custom header called `X-Client-Error`, which I am able to access.\r\n``` \r\n @Override\r\n    public void onPlayerError(ExoPlaybackException error) {\r\n      String message = \"Unknown\";\r\n      switch (error.type) {\r\n        case ExoPlaybackException.TYPE_SOURCE:\r\n          message = \"TYPE_SOURCE: \" + error.getSourceException().getMessage();\r\n          if (error.getSourceException() instanceof HttpDataSource.InvalidResponseCodeException) {\r\n            HttpDataSource.InvalidResponseCodeException invalidResponseCodeException = (HttpDataSource.InvalidResponseCodeException) error.getSourceException();\r\n            List<String> strings = invalidResponseCodeException.headerFields.get(\"X-Client-Error\");\r\n            if (strings.size() > 0) {\r\n              message +=  \"\\n\" + strings.get(0);\r\n            }\r\n          }\r\n          break;\r\n...\r\n```"
      },
      {
        "user": "JonathanImperato",
        "created_at": "2019-03-30T07:24:03Z",
        "body": "> Not ideal, but if you can have the server return the error in a header, you can get the error message that way. I have a custom header called `X-Client-Error`, which I am able to access.\r\n> \r\n> ```\r\n>  @Override\r\n>     public void onPlayerError(ExoPlaybackException error) {\r\n>       String message = \"Unknown\";\r\n>       switch (error.type) {\r\n>         case ExoPlaybackException.TYPE_SOURCE:\r\n>           message = \"TYPE_SOURCE: \" + error.getSourceException().getMessage();\r\n>           if (error.getSourceException() instanceof HttpDataSource.InvalidResponseCodeException) {\r\n>             HttpDataSource.InvalidResponseCodeException invalidResponseCodeException = (HttpDataSource.InvalidResponseCodeException) error.getSourceException();\r\n>             List<String> strings = invalidResponseCodeException.headerFields.get(\"X-Client-Error\");\r\n>             if (strings.size() > 0) {\r\n>               message +=  \"\\n\" + strings.get(0);\r\n>             }\r\n>           }\r\n>           break;\r\n> ...\r\n> ```\r\n\r\nYes, it is what I am doing right now, but instead of a string I pass a serialized json."
      },
      {
        "user": "ojw28",
        "created_at": "2019-03-31T20:24:43Z",
        "body": "Pretty much all apps that I've seen will include the strings (and translations) as resources inside the app. I don't understand why it would be particularly important to enable these messages to be changed on the server side. Typically an error code has a well defined meaning, and the strings inside the app will reflect that. I understand that the exact wording may be tweaked from release to release, but I'd expect any string that was included in a previous release to still make sense. I also don't understand why translation is important here. Android already provides a resources mechanism that supports translations.\r\n\r\nI don't think it's important that we go out of our way to support this use case. Putting content into a response header as described above is one way of achieving what's being requested, for those who really want to do this."
      }
    ]
  },
  {
    "number": 5622,
    "title": "Getting HLS livestream in sync across devices ",
    "created_at": "2019-03-12T15:25:13Z",
    "closed_at": "2019-03-25T09:12:12Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5622",
    "body": "Hi guys,\r\n\r\nWe are currently using ExoPlayer for one of our applications, which is very similar to the HQ Trivia app, and we use HLS as the streaming protocol.\r\n\r\nDue to the nature of the game, we are trying to keep all the viewers of this stream to have the same latency, basically to keep them in sync.\r\n\r\nWe noticed that with the current backend configuration the latency is somewhere between 6 and 10 seconds. Based on this fact, we assumed that it would be safe to “force” the player to play at a bigger delay (15 seconds, further off the live edge), this way achieving the same (constant) delay across all the devices.\r\n\r\nWe’re using EXT-X-PROGRAM-DATE-TIME tag to get the server time of the currently playing content and we also have a master clock with the current time (NTP). We’re constantly comparing the 2 clocks to check the current latency. We’re pausing the player until it reaches the desired delay, then we’re resuming the playback.\r\n\r\n\r\nThe problem with this solution is that the latency might get worse (accumulating delay) over time and we don’t have other choice than restarting the playback and redo the steps described above if the delay gets too big (steps over a specified threshold). Before restarting the player we’re also trying to slightly increase the playback speed until it reaches the specified delay.\r\n\r\nThe exoPlayer instance is setup with a DefaultLoadControl, DefaultRenderersFactory, DefaultTrackSelector and the media source uses a DefaultDataSourceFactory.\r\n\r\nThe server-side configuration is as follows:\r\ncupertinoChunkDurationTarget: 2000 (default: 10000)\r\ncupertinoMaxChunkCount: 31 (default: 10)\r\ncupertinoPlaylistChunkCount: 15 (default: 3)\r\n\r\nMy first question would be if this is even achievable with a protocol like HLS? Why is the player drifting away accumulating more and more delay?\r\nIs there a better setup for the exoPlayer instance considering our specific use case?\r\nIs there a better way to achieve a constant playback delay across all the playing devices? How important are the parameters on the server side in trying to achieve such a behaviour?\r\n\r\nI would really appreciate any kind of help because I have reached a dead-end. :)\r\n\r\nThanks,\r\nSergiu\r\n\r\n<!-- DO NOT DELETE\r\nvalidate_template=true\r\ntemplate_path=.github/ISSUE_TEMPLATE/question.md\r\n-->\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5622/comments",
    "author": "sergiupuhalschi",
    "comments": [
      {
        "user": "google-oss-bot",
        "created_at": "2019-03-12T15:25:18Z",
        "body": "This issue does not seem to follow the issue template. Make sure you provide all the required information."
      },
      {
        "user": "tonihei",
        "created_at": "2019-03-18T13:02:28Z",
        "body": "The playback clock is mostly determined by the position of the audio track and not the real time on the device. Ideally, these two are in sync, but I think there may be a slight drift over time. @andrewlewis may be able to comment further if that is a potential issue. There may also be issues with buffering, where one player needs to buffer longer than another one before playback can be started or restarted, introducing some delay. \r\n\r\nIn general, adjusting playback speed to control the synchronization sounds like a good idea and should probably even out all differences without requiring to pause the playback.\r\n\r\nAlso, I think the server configuration is probably irrelevant for the player timing. "
      },
      {
        "user": "sergiupuhalschi",
        "created_at": "2019-03-18T13:30:54Z",
        "body": "@tonihei  What do you mean the playback clock is mostly determined by the position of the audio track? Also, do you know if the player takes into consideration the EXT-X-PROGRAM-DATE-TIME and makes some default playback adjustments based on it?\r\n\r\nYou're right about the playback speed adjusting to control the synchronization, I didn't specify it, but already have it implemented, so that we pause the player only when the difference between players is too big.\r\n\r\nThanks for your reply."
      },
      {
        "user": "tonihei",
        "created_at": "2019-03-18T13:48:09Z",
        "body": "> What do you mean the playback clock is mostly determined by the position of the audio track? \r\n\r\nThe player needs to ensure audio and video play in sync to each other. Video frames can be shown at any point in time because are basically independent pictures, whereas audio samples need to be played in a timed continuous fashion to make them audible in the right way. That's way ExoPlayer lets the system audio track play the audio samples and adjusts the timing of the video frames to the reported timestamps of the currently playing audio. \r\n\r\n> do you know if the player takes into consideration the EXT-X-PROGRAM-DATE-TIME and makes some default playback adjustments based on it\r\n\r\nI think we only use these tags to set up the media with the right timestamps relative to each other and also to correctly define a live window (if applicable), but these tags are not used to influence the actual playback."
      },
      {
        "user": "tonihei",
        "created_at": "2019-03-25T09:12:12Z",
        "body": "Closing the issue for issue for now because we received no further follow-up question."
      }
    ]
  },
  {
    "number": 5621,
    "title": "Prebuffer next MediaSource in dynamic ConcatenatingMediaSource",
    "created_at": "2019-03-12T13:13:17Z",
    "closed_at": "2019-03-14T08:33:21Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5621",
    "body": "### [REQUIRED] Searched documentation and issues\r\n> You can call any of these methods before and after playback has started, no matter which item is currently playing. Access to these methods is thread-safe. And you can also rest assured that ExoPlayer pre-buffers the next playlist items to ensure gapless playback.\r\n\r\nI've found only this general description about prebuffering on Medium, want to get into more details.\r\n\r\n### [REQUIRED] Question\r\nI compose a playlist dynamically with ConcatenatingMediaSource and want to ensure that the next MediaSource is prebuffered after it's added with addMediaSource().\r\n\r\nFor example, there is 1 source in ConcatenatingMediaSource that is currently playing. I add a second one with addMediaSource().\r\n\r\nWhen a player will start to prebuffer it?\r\n\r\n- Immediately after adding? \r\n- Or should I call SimpleExoPlayer.prepare() after adding without reseting position/state?- \r\n- How about default caching behavior, if the currently playing MediaSource is not buffered to the end at the moment, will the added MediaSource will start buffering after adding?\r\n\r\n<!-- DO NOT DELETE\r\nvalidate_template=true\r\ntemplate_path=.github/ISSUE_TEMPLATE/question.md\r\n-->\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5621/comments",
    "author": "nicolausYes",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2019-03-12T18:49:33Z",
        "body": "The player will start buffering as soon as its needed. So when it gets towards the end of the first window (MediaSource), the player notices that there is a second item and starts filling the buffers for this item. \r\n\r\nTo answer your questions concretely:\r\n\r\nQ1) It does not necessarily start immediately after adding. Given the first item is eg. 5 minutes before the end and you add a second media source, the player will just wait until playback is close to the end and then start loading for the second item.\r\n\r\nQ2) You do need to call prepare() only once with the ConcatenatingMediaSource. After you have done this you can add and remove media sources as you wish. No need to call prepare again.\r\n\r\nQ3) In this case the player would buffer to the end of the first item first and then continuing to buffer for the second item as soon as it's indicated to do so.\r\n\r\n"
      },
      {
        "user": "nicolausYes",
        "created_at": "2019-03-12T19:57:34Z",
        "body": "@marcbaechinger so prebuffering of the next MediaSource roughly depends on a playback position of a currently playing MediaSource.\r\n\r\nIs there a way to force prebuffer of the next MediaSource? \r\nFor example, if the first MediaSource playing somewhere in the middle, I want to have the next MediaSource to be prebuffered if the user decides to play the Next track."
      },
      {
        "user": "marcbaechinger",
        "created_at": "2019-03-12T21:13:46Z",
        "body": "No, that's currently not possible. There is #3327 which is the enhancement tracking bug for this feature. AFAIK we haven't started with this though."
      },
      {
        "user": "nicolausYes",
        "created_at": "2019-03-14T08:33:21Z",
        "body": "#3327 is exactly what I'm talking about. Will follow updates there, thanks. Closed."
      }
    ]
  },
  {
    "number": 5608,
    "title": "Url streaming (http streaming) requested twice during song playing ",
    "created_at": "2019-03-07T07:18:44Z",
    "closed_at": "2019-03-07T10:59:38Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5608",
    "body": "\r\n**[REQUIRED] Issue description**\r\nPlaying music (streaming) with low bandwidth cause streaming stutter and playback state throw buffering frequently, till here its normal.\r\nBut after a few seconds, seems that the url is requested again and forces music to restart in the middle of song playing.\r\n\r\nBut I'm wondering why its not happens on Youtube, Google Play Videos and others platforms that use ExoPlayer as well.\r\n\r\nOn my streaming server, I'm using ffmpeg with node-fluent-ffmpeg to transcode songs on fly and offers a better experience of streaming to my users. Is this behavior caused by my server or is it possible prevent a url request while ExoPlayer is buffering the song?\r\n\r\nI really really appreciate any help because I'm a couple months struggling with this.\r\n\r\n**[REQUIRED] Version of ExoPlayer being used**\r\n2.9.2\r\n\r\n<!-- DO NOT DELETE\r\nvalidate_template=true\r\ntemplate_path=.github/ISSUE_TEMPLATE/question.md\r\n-->\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5608/comments",
    "author": "ithustle",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2019-03-07T10:59:38Z",
        "body": "The URL will generally be requested a second time if the first request fails for some reason. For example because it times out or because there's a connection drop (which is of course more likely to happen in a low bandwidth scenario). An additional request is typically also made if the user performs a seek, since the player needs to start requesting data from a different position in the stream.\r\n\r\nIn the normal case the player will make a subsequent request with a Range header, to request data from the byte offset that it needs. So in the case that a request fails, it'll set the Range header to request data from the point it got to before the failure. In the seek case, it'll set the Range header to request data from the byte offset corresponding to the seek time.\r\n\r\nIf you're seeing the song restarting in the middle then it's likely that your server is not correctly handling range requests, which would be a server side issue."
      },
      {
        "user": "ithustle",
        "created_at": "2019-03-07T11:03:16Z",
        "body": "@ojw28 many thanks."
      }
    ]
  },
  {
    "number": 5607,
    "title": "How to get the current actual bitrate?",
    "created_at": "2019-03-07T05:41:37Z",
    "closed_at": "2019-03-07T12:42:35Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5607",
    "body": "I can get the BandwidthEstimate by onBandwidthSample function，but how do I get the current actual bitrate\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5607/comments",
    "author": "coderain1",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2019-03-07T11:04:27Z",
        "body": "There are quite a few of things \"current actual bitrate\" could mean here. Please provide more details about exactly what you mean, and what your use case for needing this functionality is."
      },
      {
        "user": "coderain1",
        "created_at": "2019-03-07T12:33:53Z",
        "body": "I want to show real time Internet speeds when the player plays video; For example, when playing video of HLS type, the result seen from the log printed in Charles and Android studio is that each time a ts file is downloaded, the onBandWidthSample method will be called to inform the caller of the calculated network speed. If the current network speed is slow or each ts file is large, the caller will not be notified of the onBandWidthSample method for a long time."
      },
      {
        "user": "ojw28",
        "created_at": "2019-03-07T12:42:35Z",
        "body": "We only update our bitrate estimate at the end of each chunk request. You can see where this happens in `DefaultBandwidthMeter`, which only updates the estimate in `onTransferEnd`.\r\n\r\nWe don't support more frequent updates, and nor do we plan to do so. However if you wanted to implement it yourself, you could do so by writing your own `BandwidthMeter` implementation, in which you could update the bitrate estimate in `onBytesTransferred`, which is called frequently as each chunk request progresses. You could then inject an instance of your custom implementation when creating the player."
      },
      {
        "user": "coderain1",
        "created_at": "2019-03-08T03:10:21Z",
        "body": "Thanks for your solution"
      }
    ]
  },
  {
    "number": 5605,
    "title": "Does Exoplayer support playing videos via POST Method?",
    "created_at": "2019-03-07T02:25:27Z",
    "closed_at": "2019-03-07T03:01:55Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5605",
    "body": "Does Exoplayer support playing videos via POST Method?\r\n\r\n<!-- DO NOT DELETE\r\nvalidate_template=true\r\ntemplate_path=.github/ISSUE_TEMPLATE/question.md\r\n-->\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5605/comments",
    "author": "sh3r1",
    "comments": [
      {
        "user": "google-oss-bot",
        "created_at": "2019-03-07T02:25:34Z",
        "body": "This issue does not seem to follow the issue template. Make sure you provide all the required information."
      },
      {
        "user": "sh3r1",
        "created_at": "2019-03-07T03:01:55Z",
        "body": "Solved it by Using OkHttp."
      }
    ]
  },
  {
    "number": 5602,
    "title": "ConcateningMedia, RepeatOne and next / previous",
    "created_at": "2019-03-06T13:22:36Z",
    "closed_at": "2019-03-06T13:30:11Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5602",
    "body": "I have a question regarding REPEAT_ONE mode, ConcateningMedia and using SimpleExoPlayer.next(), previous() and related methods.\r\n\r\nFrom my understanding, REPEAT_ONE should function by endlessly looping same MediaSource. From what I see in the source code of Timeline.getNextWindowIndex, it should return currentWindowIndex when repeat mode is REPEAT_ONE. But this isn't the case. Instead using simpleExoPlayer.next() moves to next window index and plays next MediaSource. \r\n\r\nIn short, I have a ConcateningMedia with MediaSourceA, MediaSourceB and MediaSourceC.\r\nWhen I set REPEAT_ONE and play MediaSourceA, I expect getPreviousWindowIndex() and getNextWindowIndex() to return same values as getCurrentWindowIndex() and that calling next() replays MediaSourceA. Instead, MediaSourceB is played.\r\n \r\nIs this expected behavior? \r\n\r\n<!-- DO NOT DELETE\r\nvalidate_template=true\r\ntemplate_path=.github/ISSUE_TEMPLATE/question.md\r\n-->\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5602/comments",
    "author": "tomislavturcic",
    "comments": [
      {
        "user": "google-oss-bot",
        "created_at": "2019-03-06T13:22:37Z",
        "body": "This issue does not seem to follow the issue template. Make sure you provide all the required information."
      },
      {
        "user": "tonihei",
        "created_at": "2019-03-06T13:28:15Z",
        "body": "Yes, that is expected behaviour. \r\n\r\nThe idea is that you can have UI elements which let you skip to the next and previous item (using `player.next()` and `player.previous()` even though you have REPEAT_ONE enabled. The current item is still repeated endlessly without any interaction. The `getNextWindowIndex()` and `getPreviousWindowIndex()` methods return matching values to tell you which window index will be played when calling `next()` or `previous()`."
      },
      {
        "user": "tomislavturcic",
        "created_at": "2019-03-06T13:30:11Z",
        "body": "Ok, thanks for clarification!"
      },
      {
        "user": "tonihei",
        "created_at": "2019-03-06T13:30:57Z",
        "body": "If you'd like to know the next item the player will play automatically, you can use `player.getCurrentTimeline().getNextWindowIndex(windowIndex, repeatMode, shuffleMode)` to query any transition under different repeat and shuffle mode conditions."
      },
      {
        "user": "ojw28",
        "created_at": "2020-11-24T15:50:53Z",
        "body": "`Player` Javadoc will be improved to more explicitly explain this behavior in a future release. Removing the `documentation candidate` label as these changes have been made internally."
      }
    ]
  },
  {
    "number": 5582,
    "title": "playback problems after upgrade",
    "created_at": "2019-02-28T07:55:52Z",
    "closed_at": "2019-05-05T18:44:20Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5582",
    "body": "Hello, \r\n\r\n[REQUIRED] Issue description\r\nI updated the ExiPlayer library version to 2.8.4 as the last one, about which the Gradle informs,\r\n from 2.4.4 for playing live HLS streams. After that, I began to receive complaints from users of some devices, mainly from TV set-top boxes. \r\n\r\nThe user of device H96Pro reported a problem:\r\nCouldn't create decoder for OMX.amlogic.avc.decoder.awesome.\r\nThe user of device X92 reported a problem:\r\nVideo freezing or black screen, but sound plays\r\nThe user of device Nokia 6, Android 9 reported a problem :\r\ninstant application crash\r\n\r\nI do not see any errors in the Crashlytics and Android Vitals regarding the errors of the ExoPlayer.\r\nI can't reproduce it on my devices Samsung Galaxy S9, Sony Z3 Compact.\r\n\r\nI collect feedback from users and ask them questions and will update this topic\r\n[REQUIRED] Reproduction steps\r\n\r\nRun app on the X92, Beelink GT1 Ultimate devices, play HLS after showing Interstitial ad.\r\n\r\n[REQUIRED] Version of ExoPlayer being used\r\n2.8.4\r\nGradle:\r\nimplementation 'com.google.android.exoplayer:exoplayer:2.8.4'\r\nProguard rules:\r\n-keep class com.google.android.exoplayer.** {*;}\r\n-keep class com.google.android.exoplayer2.** {*;}\r\n\r\n<!-- DO NOT DELETE\r\nvalidate_template=true\r\ntemplate_path=.github/ISSUE_TEMPLATE/bug.md\r\n-->",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5582/comments",
    "author": "AntonAndev",
    "comments": [
      {
        "user": "google-oss-bot",
        "created_at": "2019-02-28T07:55:53Z",
        "body": "This issue does not seem to follow the issue template. Make sure you provide all the required information."
      },
      {
        "user": "AntonAndev",
        "created_at": "2019-02-28T11:23:42Z",
        "body": "With help from 2 users with devices X92 and Beelink GT1 Ultimate we have found following:\r\nthis problem with video codec occurs after showing Admob interstitial ads if we close ads by tapping back button. **There is some problem with ExoPlayer reinitialization**. Before showing ad OnPause() and OnStop() are called. We destroy ExoPlayer. After showing ad we recreate ExoPlayer in the OnResume() method:\r\n```\r\n@Override\r\n    public void onStart() {\r\n        super.onStart();\r\n        if (Util.SDK_INT > 23) {\r\n            initExoPlayer();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onPause() {\r\n        super.onPause();\r\n        if (Util.SDK_INT <= 23) {\r\n            if (mFullScreen && !adWasShown) {\r\n                setFullScreen();\r\n            }\r\n            simpleExoPlayerView.setVisibility(View.INVISIBLE);\r\n            releaseExoPlayer();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onResume() {\r\n        super.onResume();\r\n if ((Util.SDK_INT <= 23 || exoPlayer == null)) {\r\n            initExoPlayer();\r\n        }\r\n}\r\n @Override\r\n    protected void onStop() {\r\n        super.onStop();\r\n\r\n        if (Util.SDK_INT > 23) {\r\n            if (mFullScreen  && !adWasShown) {\r\n                setFullScreen();\r\n            }\r\n            simpleExoPlayerView.setVisibility(View.INVISIBLE);\r\n            releaseExoPlayer();\r\n        }\r\n}\r\n\r\n private void releaseExoPlayer() {\r\n        if (exoPlayer != null) {\r\n            exoPlayer.stop();\r\n            exoPlayer.release();\r\n            exoPlayer = null;\r\n            trackSelector = null;\r\n            dataSourceFactory = null;\r\n            bandwidthMeter = null;\r\n            mainHandler = null;\r\n        }\r\n    }\r\n\r\nprivate void initExoPlayer() {\r\n\r\n        if (exoPlayer == null) {\r\n            mainHandler = new Handler();\r\n            bandwidthMeter = new DefaultBandwidthMeter();\r\n\r\n            dataSourceFactory = new DefaultDataSourceFactory(this, Util.getUserAgent(this, userAgent), bandwidthMeter);\r\n\r\n            TrackSelection.Factory adaptiveTrackSelectionFactory = new AdaptiveTrackSelection.Factory(bandwidthMeter);\r\n            trackSelector = new DefaultTrackSelector(adaptiveTrackSelectionFactory);\r\n\r\n            exoPlayer = ExoPlayerFactory.newSimpleInstance(context, trackSelector);\r\n            //exoPlayer.addListener(this);\r\n            // 2.8.4\r\n            exoPlayer.addListener(new PlayerEventListener());\r\n            simpleExoPlayerView.setPlayer(exoPlayer);\r\n        }\r\n    }\r\n```"
      },
      {
        "user": "andrewlewis",
        "created_at": "2019-02-28T11:39:56Z",
        "body": "It sounds like resources may not be getting released before the app resumes. I'll follow up with the AdMob team to check how they release resources.\r\n\r\nIf you can get the output of `adb bugreport` just after the error that might help confirm this is what's going on. You could also try introducing a pause before trying to initialize the player as a workaround."
      },
      {
        "user": "AntonAndev",
        "created_at": "2019-02-28T11:48:17Z",
        "body": "Hello Andrew. One user also found an interesting moment. If he closes ad by pressing Back button, he has codec issue, if he close ad by pressing X button, no problem with codec"
      },
      {
        "user": "AntonAndev",
        "created_at": "2019-02-28T12:18:58Z",
        "body": "Also it depends on type of ad which was displayed."
      },
      {
        "user": "JeanCarlosChavarriaHughes",
        "created_at": "2019-03-01T06:41:23Z",
        "body": "@Andevity  curious about the codec issue. Can you please provide the full stack trace or debug logs of the codec issue) ?. Some time ago I remember to have seem a similar issue in FireTV (No the same Exo player core but very similar)."
      },
      {
        "user": "andrewlewis",
        "created_at": "2019-03-01T08:26:05Z",
        "body": "@Andevity The workaround suggestion from the AdMob team is to post player initialization to the main thread, instead of doing it directly in the lifecycle method. (After closing the ad various cleanup tasks have been queued on the main thread and posting will ensure player initialization happens after they've run.)"
      },
      {
        "user": "AntonAndev",
        "created_at": "2019-03-01T10:51:46Z",
        "body": "@andrewlewis I did it as in the example project. I am afraid to do something wrong. Could you please provide an example how to initialise and to destroy?"
      },
      {
        "user": "andrewlewis",
        "created_at": "2019-03-04T17:03:07Z",
        "body": "I think the suggestion is to do something like:\r\n\r\n```\r\n  @Override\r\n  public void onResume() {\r\n    super.onResume();\r\n    new Handler().post(this::initializePlayer);\r\n  }\r\n```\r\n\r\n... instead of calling initializePlayer directly. The hypothesis is that somehow AdMob's cleanup tasks end up being queued on main thread after your `onResume` lifecycle method is queued. For the record, properly fixing the issue by having the ad player releasing synchronously on the main thread is tracked by [internal: b/127281295]."
      },
      {
        "user": "AntonAndev",
        "created_at": "2019-03-05T16:49:37Z",
        "body": "Hello, I tried to add Handler, send new version to the user with Beelink GT1 Ultimate device, he said about same error with codec. How can we get all dump from user device?"
      },
      {
        "user": "andrewlewis",
        "created_at": "2019-03-07T13:59:47Z",
        "body": "@Andevity If you can reproduce this on a device with debugging enabled, the output of `adb bugreport` just after seeing the error may help us confirm what's going on."
      },
      {
        "user": "andrewlewis",
        "created_at": "2019-05-05T18:44:20Z",
        "body": "Closing as this seems to be an AdMob issue rather than an ExoPlayer issue. If you can provide a bug report we can take a look anyway."
      }
    ]
  },
  {
    "number": 5570,
    "title": "How to add custom own video ads (mp4) in ImaAdsLoader?",
    "created_at": "2019-02-26T19:14:25Z",
    "closed_at": "2019-03-11T07:56:41Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5570",
    "body": "I am trying to add my own video url ads of mp4 or any format (e.g lenght of 10 to 20sec) in Exo Player.\r\nIMA ads is working and trying with custom video url. \r\nI was trying the code from many  git issues but not able to implement it.\r\nPlease suggest some example code. i am trying to implement in DashMediaSource. ",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5570/comments",
    "author": "raikk",
    "comments": [
      {
        "user": "AquilesCanta",
        "created_at": "2019-02-27T19:28:07Z",
        "body": "@andrewlewis, would you kindly look into this?"
      },
      {
        "user": "andrewlewis",
        "created_at": "2019-03-11T07:56:41Z",
        "body": "It sounds like you need to produce a VAST/VMAP ad tag that refers to your ads, but we aren't in a position to give guidance on authoring ad tags on this issue tracker I'm afraid."
      },
      {
        "user": "raikk",
        "created_at": "2019-03-12T17:20:11Z",
        "body": "Thanks @andrewlewis . i got some idea for my solution. I need to convert mp4 to VAST/VMAP format for my own ads and needs ads server like revive-ads server. But Free Revive-ads server does not support to convert VAST. we need to use commercial plugin for VAST ad tag.  "
      }
    ]
  },
  {
    "number": 5567,
    "title": "Does ExoPlayer support changing volume and brightness by swiping edges of screen?",
    "created_at": "2019-02-26T09:30:57Z",
    "closed_at": "2019-02-28T11:48:26Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5567",
    "body": "I want to change volume by swiping the screen right side up and down and also change brightness by swiping the left side. does ExoPlayer support that?\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5567/comments",
    "author": "aazam-nouri",
    "comments": [
      {
        "user": "AquilesCanta",
        "created_at": "2019-02-28T11:48:26Z",
        "body": "Not out of the box. For the volume, you can use Player#setVolume. For brightness, you'll have to do some research. Someone has already asked about this in #2450. Good luck!"
      }
    ]
  },
  {
    "number": 5560,
    "title": "PlayerActivity.java gives a NullPointerException,why ?",
    "created_at": "2019-02-23T13:48:23Z",
    "closed_at": "2019-02-23T21:06:55Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5560",
    "body": "### Here is my PlayerActivity.java code that I use in my app\r\n\r\n ```\r\npackage com.demotxt.myapp.myapplication.activities;\r\n\r\nimport android.app.AlertDialog;\r\nimport android.content.Context;\r\nimport android.net.Uri;\r\nimport android.os.Build;\r\nimport android.support.v7.app.AppCompatActivity;\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.util.Log;\r\nimport android.util.Pair;\r\nimport android.view.View;\r\nimport android.view.WindowManager;\r\nimport android.widget.Button;\r\nimport android.widget.LinearLayout;\r\n\r\nimport com.demotxt.myapp.myapplication.R;\r\nimport com.google.android.exoplayer2.C;\r\nimport com.google.android.exoplayer2.DefaultRenderersFactory;\r\nimport com.google.android.exoplayer2.ExoPlayerFactory;\r\nimport com.google.android.exoplayer2.RenderersFactory;\r\nimport com.google.android.exoplayer2.SimpleExoPlayer;\r\nimport com.google.android.exoplayer2.drm.DefaultDrmSessionManager;\r\nimport com.google.android.exoplayer2.drm.DrmSessionManager;\r\nimport com.google.android.exoplayer2.drm.FrameworkMediaCrypto;\r\nimport com.google.android.exoplayer2.drm.FrameworkMediaDrm;\r\nimport com.google.android.exoplayer2.drm.HttpMediaDrmCallback;\r\nimport com.google.android.exoplayer2.drm.UnsupportedDrmException;\r\nimport com.google.android.exoplayer2.source.ExtractorMediaSource;\r\nimport com.google.android.exoplayer2.source.TrackGroupArray;\r\nimport com.google.android.exoplayer2.source.hls.HlsMediaSource;\r\nimport com.google.android.exoplayer2.drm.DefaultDrmSessionManager;\r\nimport com.google.android.exoplayer2.trackselection.DefaultTrackSelector;\r\nimport com.google.android.exoplayer2.trackselection.MappingTrackSelector;\r\nimport com.google.android.exoplayer2.ui.PlayerView;\r\nimport com.google.android.exoplayer2.ui.TrackSelectionView;\r\nimport com.google.android.exoplayer2.upstream.DataSource;\r\nimport com.google.android.exoplayer2.upstream.DefaultBandwidthMeter;\r\nimport com.google.android.exoplayer2.upstream.DefaultDataSourceFactory;\r\nimport com.google.android.exoplayer2.upstream.DefaultHttpDataSourceFactory;\r\nimport com.google.android.exoplayer2.upstream.HttpDataSource;\r\nimport com.google.android.exoplayer2.util.Util;\r\n\r\nimport java.util.EventListener;\r\nimport java.util.HashMap;\r\nimport java.util.UUID;\r\n\r\npublic class PlayerActivity extends AppCompatActivity {\r\n    private PlayerView playerView;\r\n    private SimpleExoPlayer player;\r\n    private DataSource.Factory dataSourceFactory;\r\n    private FrameworkMediaDrm mediaDrm;\r\n    private static final DefaultBandwidthMeter BANDWIDTH_METER = new DefaultBandwidthMeter();\r\n    public static final String DRM_SCHEME_EXTRA = \"anime_drm_scheme\";\r\n    public static final String DRM_LICENSE_URL_EXTRA = \"anime_drm_license_url\";\r\n    public static final String DRM_KEY_REQUEST_PROPERTIES_EXTRA = \"drm_key_request_properties\";\r\n    public static final String DRM_MULTI_SESSION_EXTRA = \"drm_multi_session\";\r\n    private static final String DRM_SCHEME_UUID_EXTRA = \"drm_scheme_uuid\";\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_player);\r\n        getSupportActionBar().hide();\r\n        playerView = findViewById(R.id.player_view);\r\n        getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,\r\n                WindowManager.LayoutParams.FLAG_FULLSCREEN);\r\n\r\n\r\n    }\r\n    private void initializePlayer () {\r\n        String link = getIntent().getExtras().getString(\"anime_link\");\r\n        Uri myUri = Uri.parse(link);\r\n\r\n        DefaultDrmSessionManager<FrameworkMediaCrypto> drmSessionManager = null;\r\n        if (getIntent().hasExtra(DRM_SCHEME_EXTRA) || getIntent().hasExtra(DRM_SCHEME_UUID_EXTRA)) {\r\n            String drmLicenseUrl = getIntent().getStringExtra(DRM_LICENSE_URL_EXTRA);\r\n            String[] keyRequestPropertiesArray =\r\n                    getIntent().getStringArrayExtra(DRM_KEY_REQUEST_PROPERTIES_EXTRA);\r\n            boolean multiSession = getIntent().getBooleanExtra(DRM_MULTI_SESSION_EXTRA, false);\r\n            int errorStringId = R.string.error_drm_unknown;\r\n            if (Util.SDK_INT < 18) {\r\n                errorStringId = R.string.error_drm_not_supported;\r\n            } else {\r\n                try {\r\n                    String drmSchemeExtra = getIntent().hasExtra(DRM_SCHEME_EXTRA) ? DRM_SCHEME_EXTRA\r\n                            : DRM_SCHEME_UUID_EXTRA;\r\n                    UUID drmSchemeUuid = Util.getDrmUuid(getIntent().getStringExtra(drmSchemeExtra));\r\n                    if (drmSchemeUuid == null) {\r\n                        errorStringId = R.string.error_drm_unsupported_scheme;\r\n                    } else {\r\n                        drmSessionManager =\r\n                                buildDrmSessionManagerV18(\r\n                                        drmSchemeUuid, drmLicenseUrl, keyRequestPropertiesArray, multiSession);\r\n                    }\r\n                } catch (UnsupportedDrmException e) {\r\n                    errorStringId = e.reason == UnsupportedDrmException.REASON_UNSUPPORTED_SCHEME\r\n                            ? R.string.error_drm_unsupported_scheme : R.string.error_drm_unknown;\r\n                }\r\n            }\r\n            if (drmSessionManager == null) {\r\n                finish();\r\n                return;\r\n            }\r\n        }\r\n\r\n        DefaultRenderersFactory renderersFactory = new DefaultRenderersFactory(this);\r\n        player = ExoPlayerFactory.newSimpleInstance(renderersFactory, null, drmSessionManager);\r\n        playerView.setPlayer(player);\r\n\r\n\r\n        DefaultDataSourceFactory dataSourceFactory=new DefaultDataSourceFactory(this,\r\n                Util.getUserAgent(this,\"Exoplayer\"));\r\n\r\n        HlsMediaSource mediaSource=new HlsMediaSource.Factory(dataSourceFactory)\r\n                .createMediaSource(myUri); //Stream link\r\n\r\n\r\n        player.prepare(mediaSource);\r\n        player.setPlayWhenReady(true);\r\n    }\r\n    private HttpDataSource.Factory buildHttpDataSourceFactory(boolean useBandwidthMeter) {\r\n        return buildHttpDataSourceFactory(useBandwidthMeter ? BANDWIDTH_METER : null);\r\n    }\r\n\r\n    private HttpDataSource.Factory buildHttpDataSourceFactory(DefaultBandwidthMeter bandwidthMeter) {\r\n        return new DefaultHttpDataSourceFactory(\"Exoplayer\", bandwidthMeter);\r\n    }\r\n\r\n    private DefaultDrmSessionManager<FrameworkMediaCrypto> buildDrmSessionManagerV18(\r\n            UUID uuid, String licenseUrl, String[] keyRequestPropertiesArray, boolean multiSession)\r\n            throws UnsupportedDrmException {\r\n        if (Util.SDK_INT < 18) {\r\n            return null;\r\n        }\r\n        HttpMediaDrmCallback drmCallback = new HttpMediaDrmCallback(licenseUrl,\r\n                buildHttpDataSourceFactory(false));\r\n        if (keyRequestPropertiesArray != null) {\r\n            for (int i = 0; i < keyRequestPropertiesArray.length - 1; i += 2) {\r\n                drmCallback.setKeyRequestProperty(keyRequestPropertiesArray[i],\r\n                        keyRequestPropertiesArray[i + 1]);\r\n            }\r\n        }\r\n        releaseMediaDrm();\r\n        mediaDrm = FrameworkMediaDrm.newInstance(uuid);\r\n        return new DefaultDrmSessionManager<>(uuid, mediaDrm, drmCallback, null, multiSession);\r\n    }\r\n\r\n    private void releaseMediaDrm() {\r\n        if (mediaDrm != null) {\r\n            mediaDrm.release();\r\n            mediaDrm = null;\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onStart() {\r\n        super.onStart();\r\n        if (Util.SDK_INT > 23) {\r\n            initializePlayer();\r\n    }\r\n    }\r\n    @Override\r\n    protected void onStop() {\r\n        super.onStop();\r\n        playerView.setPlayer(null);\r\n        player.release();\r\n        player = null;\r\n    }\r\n\r\n\r\n\r\n}\r\n```\r\n\r\n### \r\nAnd this is the debug info \r\n\r\n\r\n```    Process: com.demotxt.myapp.myapplication, PID: 9255\r\n    java.lang.RuntimeException: Unable to start activity ComponentInfo{com.demotxt.myapp.myapplication/com.demotxt.myapp.myapplication.activities.PlayerActivity}: java.lang.NullPointerException\r\n        at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2927)\r\n        at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2988)\r\n        at android.app.ActivityThread.-wrap14(ActivityThread.java)\r\n        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1631)\r\n        at android.os.Handler.dispatchMessage(Handler.java:102)\r\n        at android.os.Looper.loop(Looper.java:154)\r\n        at android.app.ActivityThread.main(ActivityThread.java:6682)\r\n        at java.lang.reflect.Method.invoke(Native Method)\r\n        at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1520)\r\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1410)\r\n     Caused by: java.lang.NullPointerException\r\n        at com.google.android.exoplayer2.util.Assertions.checkNotNull(Assertions.java:110)\r\n        at com.google.android.exoplayer2.ExoPlayerImpl.<init>(ExoPlayerImpl.java:89)\r\n        at com.google.android.exoplayer2.SimpleExoPlayer.createExoPlayerImpl(SimpleExoPlayer.java:923)\r\n        at com.google.android.exoplayer2.SimpleExoPlayer.<init>(SimpleExoPlayer.java:182)\r\n        at com.google.android.exoplayer2.SimpleExoPlayer.<init>(SimpleExoPlayer.java:131)\r\n        at com.google.android.exoplayer2.SimpleExoPlayer.<init>(SimpleExoPlayer.java:108)\r\n        at com.google.android.exoplayer2.ExoPlayerFactory.newSimpleInstance(ExoPlayerFactory.java:176)\r\n        at com.google.android.exoplayer2.ExoPlayerFactory.newSimpleInstance(ExoPlayerFactory.java:145)\r\n        at com.demotxt.myapp.myapplication.activities.PlayerActivity.initializePlayer(PlayerActivity.java:108)\r\n        at com.demotxt.myapp.myapplication.activities.PlayerActivity.onStart(PlayerActivity.java:160)\r\n        at android.app.Instrumentation.callActivityOnStart(Instrumentation.java:1256)\r\n        at android.app.Activity.performStart(Activity.java:6959)\r\n        at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2890)\r\n        at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2988) \r\n        at android.app.ActivityThread.-wrap14(ActivityThread.java) \r\n        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1631) \r\n        at android.os.Handler.dispatchMessage(Handler.java:102) \r\n        at android.os.Looper.loop(Looper.java:154) \r\n        at android.app.ActivityThread.main(ActivityThread.java:6682) \r\n        at java.lang.reflect.Method.invoke(Native Method) \r\n        at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1520) \r\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1410)\r\n```\r\n\r\n\r\n**Most probably I've made a mistake in \"renderersFactory\" part  but I couldn't solve it,what kind of changes I have to make in my code ?**\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5560/comments",
    "author": "efkann",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2019-02-23T21:06:55Z",
        "body": "It looks like you might be passing null instead of a `TrackSelector` (although I'm not sure which version of the library you're using). Please take a look at how the demo app creates the player."
      }
    ]
  },
  {
    "number": 5558,
    "title": "When to play hls stream? After ts has been downloaded or playing during downloading",
    "created_at": "2019-02-22T10:35:25Z",
    "closed_at": "2019-03-11T07:43:46Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5558",
    "body": "Hi, I wonder to know when a ts file will be extracted and played by the exoplayer. as i know the hls.js will extract and play ts after the file downloads from server,  but I see the log \r\n\r\n```\r\n02-22 18:11:52.253 30427-30712/com.google.android.exoplayer2.demo I/ExtendedACodec: Decoder will be in frame by frame mode\r\n```\r\nWhat does the log mean ? ",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5558/comments",
    "author": "sl950313",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2019-02-25T08:35:05Z",
        "body": "During playback of HLS streams we extract data from media segments while they're downloading. That log line is probably not relevant to this."
      },
      {
        "user": "sl950313",
        "created_at": "2019-02-26T02:17:40Z",
        "body": "> During playback of HLS streams we extract data from media segments while they're downloading. That log line is probably not relevant to this.\r\n\r\nThank you for help. But what does media segments mean? not frame by frame?"
      },
      {
        "user": "andrewlewis",
        "created_at": "2019-03-11T07:43:46Z",
        "body": "They're pieces of media (typically a few seconds long). As the log line above doesn't seem to indicate a problem I will close this issue. If your issue isn't actually resolved, please could you rephrase what the problem is? Thanks."
      }
    ]
  },
  {
    "number": 5551,
    "title": "How to do try and catch error when try to play media source.",
    "created_at": "2019-02-21T09:54:50Z",
    "closed_at": "2019-03-19T10:10:33Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5551",
    "body": "Hi there, if I allow to user to play music with shuffle the problem that i facing right now is that the exoplayer crash my apps when try to play the media source which are not have inside Concatenating media source. The question is that, is there way try and catch if file not found so that exoplayer wouldn’t crash my apps. My exoplayer version : 2.8.4",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5551/comments",
    "author": "hafiz013",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2019-02-21T10:27:10Z",
        "body": "Please see #4343, which seems related. When you say it crashes the app, is there an uncaught error, or just a call to `onPlayerError`?"
      },
      {
        "user": "hafiz013",
        "created_at": "2019-02-22T03:10:44Z",
        "body": "but it doesn't not go to on Player Error straight away crash my apps."
      },
      {
        "user": "andrewlewis",
        "created_at": "2019-02-23T21:17:15Z",
        "body": "@hafiz013 Please could you provide a full bug report (`adb bugreport`) taken just after the crash?"
      },
      {
        "user": "hafiz013",
        "created_at": "2019-02-26T07:09:58Z",
        "body": "` com.google.android.exoplayer2.IllegalSeekPositionException\r\n        at com.google.android.exoplayer2.ExoPlayerImpl.seekTo(ExoPlayerImpl.java:272)\r\n        at com.google.android.exoplayer2.SimpleExoPlayer.seekTo(SimpleExoPlayer.java:747)`\r\n\r\nand this is my sample of my code:\r\n\r\n` musicPlayer.setShuffleModeEnabled(true);\r\n                        musicPlayer.seekTo(musicPlayer.getNextWindowIndex(), C.TIME_UNSET);`\r\n\r\nIt begin crash when i start to shuffle. After that, when I reload again and click shuffle mode everything ok and not crash. Do you know what is problem with that and how to do try and catch error."
      },
      {
        "user": "tonihei",
        "created_at": "2019-02-27T10:39:16Z",
        "body": "`player.getNextWindowIndex()` may return `C.INDEX_UNSET` if the current window is the last one. I guess that is what is happening here. If you attempt to seek to `C.INDEX_UNSET` it will throw an `IllegalSeekPositionException`."
      },
      {
        "user": "hafiz013",
        "created_at": "2019-02-28T10:08:30Z",
        "body": "that's why exoplayer do not have exception try n error at least avoid the apps crashing."
      },
      {
        "user": "tonihei",
        "created_at": "2019-02-28T10:15:45Z",
        "body": "I don't understand what you are trying to say. Throwing an exception is the usually the right thing if the application code calls a method with invalid parameters."
      },
      {
        "user": "hafiz013",
        "created_at": "2019-03-01T07:18:23Z",
        "body": "what I mean is that if I call method with invalid parameters there is must exception so that this exoplayer could not make apps crash. This crash happen for starting only the rest follow same steps it is not crash anymore."
      },
      {
        "user": "tonihei",
        "created_at": "2019-03-01T09:06:47Z",
        "body": "Are you saying that `player.getNextWindowIndex()` is `C.INDEX_UNSET` but it shouldn't? Or that `player.getNextWindowIndex()` is not `C.INDEX_UNSET` and `seekTo` still throws? \r\n\r\nIn any case, it would be good if you can provide more detailed reproduction steps so that we can better understand the problem."
      },
      {
        "user": "hafiz013",
        "created_at": "2019-03-01T09:42:35Z",
        "body": "step to reproduce the error:\r\n1) When first time install the apps and i try to open the music with shuffle mode it is straight away crash by using this function :  \r\n`musicPlayer.setShuffleModeEnabled(true); musicPlayer.seekTo(musicPlayer.getNextWindowIndex(), C.TIME_UNSET);`\r\n2) Then i reload and open the apps again, I do same things which is click shuffle mode but this time no more crash happen.\r\n\r\nFor your info, music playlist I use concatenate media source and i use the same function above. So is there way if that function is call and got error not give change to the apps crash but somewhere it can hold it or throw it crash.  "
      },
      {
        "user": "tonihei",
        "created_at": "2019-03-01T09:48:03Z",
        "body": "I still think you are calling `seekTo` while `getNextWindowIndex` is still unset. For example because you haven't called `player.prepare` yet or the the current window is the last one after enabling the shuffling mode. Please ensure that there actually is a next window before trying to seek to it. "
      },
      {
        "user": "tonihei",
        "created_at": "2019-03-19T10:10:31Z",
        "body": "Closing due to lack of new information. And the question was probably answered."
      },
      {
        "user": "hafiz013",
        "created_at": "2019-03-21T04:23:24Z",
        "body": "Don't close my case, how to check the the current window is the last one after enabling the shuffling mode?"
      },
      {
        "user": "tonihei",
        "created_at": "2019-03-21T08:48:42Z",
        "body": "You should be able the check if `player.getNextWindowIndex() == C.INDEX_UNSET`. As documented, this means that the current window is the last one."
      },
      {
        "user": "hafiz013",
        "created_at": "2019-04-01T06:50:06Z",
        "body": "so in this case what should i do? \r\n\r\n`if(!musicPlayer.getShuffleModeEnabled()){\r\n                        musicPlayer.setShuffleModeEnabled(true);\r\n                        musicPlayer.seekTo(musicPlayer.getNextWindowIndex(), C.TIME_UNSET);\r\n                    }` .  \r\n\r\nonly this code make it crash apps.  Only can setup C.TIME_UNSET."
      },
      {
        "user": "hafiz013",
        "created_at": "2019-04-29T04:41:46Z",
        "body": "Still does not work , error code :\r\n\r\n`com.google.android.exoplayer2.IllegalSeekPositionException\r\n        at com.google.android.exoplayer2.ExoPlayerImpl.seekTo(ExoPlayerImpl.java:272)\r\n        at com.google.android.exoplayer2.SimpleExoPlayer.seekTo(SimpleExoPlayer.java:747)`\r\n\r\nMy implement code use u suggested : \r\n\r\n` if(!musicPlayer.getShuffleModeEnabled()){\r\n                        musicPlayer.setShuffleModeEnabled(true);\r\n                    }\r\n\r\n                    if (musicPlayer.getNextWindowIndex() == C.INDEX_UNSET){  // if last one\r\n                        musicPlayer.seekTo(musicPlayer.getNextWindowIndex(), C.INDEX_UNSET);\r\n                    }\r\n\r\n                    if (!playCurrentMusic){\r\n                        musicPlayer.setPlayWhenReady(true);\r\n                    }`\r\n"
      }
    ]
  },
  {
    "number": 5543,
    "title": "how to play next and previous file",
    "created_at": "2019-02-20T13:23:02Z",
    "closed_at": "2019-03-06T09:24:16Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5543",
    "body": " I have implemented  swipe listener on exoplayer \r\n\r\nwhile play pause can be implemented with player.setPlayWhenReady , but how can we play next and previous file \r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5543/comments",
    "author": "pawaom",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2019-02-20T14:26:10Z",
        "body": "If you're playing a playlist with `ConcatenatingMediaSource`, please try using `player.next()` and `player.previous()`."
      }
    ]
  },
  {
    "number": 5525,
    "title": "Make DefaultRenderersFactory subclass-friendly",
    "created_at": "2019-02-18T08:28:23Z",
    "closed_at": "2019-02-18T12:28:19Z",
    "labels": [
      "question",
      "cla: yes"
    ],
    "url": "https://github.com/google/ExoPlayer/pull/5525",
    "body": "Change the `private` fields to `protected` so that subclasses can use them. \r\n\r\nAn alternative might can be adding protected/public getters, but that seems to be an overkill.\r\n\r\nCurrently our workaround is having our own copies of private allowedVideoJoiningTimeMs and playClearSamplesWithoutKeys.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5525/comments",
    "author": "noamtamim",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2019-02-18T10:47:37Z",
        "body": "Could you clarify where you need `allowedVideoJoiningTimeMs` and `playClearSamplesWithoutKeys`. They're already passed to the methods that should need them (e.g. `allowedVideoJoiningTimeMs` is passed to `buildVideoRenderers`). If you're overriding `createRenderers` directly then perhaps at that point you should just be forking the whole class?"
      },
      {
        "user": "noamtamim",
        "created_at": "2019-02-18T12:28:19Z",
        "body": "@ojw28 you're right, we missed the fact that `allowedVideoJoiningTimeMs` and `playClearSamplesWithoutKeys` are passed to `buildVideoRenderers`.\r\n"
      }
    ]
  },
  {
    "number": 5521,
    "title": "Playlist has been refreshing when player is paused",
    "created_at": "2019-02-16T03:14:23Z",
    "closed_at": "2019-02-18T08:57:21Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5521",
    "body": "### question description\r\nWhen playing live video of m3u8.  Playlist has been refreshing when player is paused.\r\nCan I stop refresh the playlist when player is paused by blocking the execution of loadPlaylistImmediately.\r\nThen when player is started, I continue to execute the method.\r\n\r\n### Reproduction steps\r\n1. play live video.\r\n2. pause the player \r\n\r\n### Version of ExoPlayer being used\r\n2.8.2\r\n\r\n### Device(s) and version(s) of Android being used\r\nVIVO X20",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5521/comments",
    "author": "lsgfly",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2019-02-18T08:57:21Z",
        "body": "It's working as intended that the playlist is refreshed when the player is paused. The player needs to do this to update the seekable window, detect if a live stream ends, and so on. If you want to avoid this you can stop rather than pause, and then re-prepare the player when you want to resume playback."
      }
    ]
  },
  {
    "number": 5517,
    "title": "Playing a 360 mp4 video ",
    "created_at": "2019-02-14T17:16:55Z",
    "closed_at": "2019-02-21T15:59:52Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5517",
    "body": "I have a question, I tried getting a 360 (mp4) video to play with Exoplayer (v2.9.0) and I couldn’t get it to work. \r\n\r\nThe sample in the sample app works great. If I use that file it plays nicely. I noticed it is a .ts file which I tried converting my own .mp4 to .ts but it still failed.\r\n\r\nWhere could I find some information on how to make the setup for this to work? Or is this not meant to be supported yet? \r\n\r\nThe error I'm getting is : \r\n\r\n```\r\n02-14 10:42:52.018 20838-20838 I/art: Late-enabling -Xcheck:jni\r\n02-14 10:42:52.074 20838-20838 W/System: ClassLoader referenced unknown path: /data/app/com.srkt.exoplayerbeta-2/lib/arm\r\n02-14 10:42:52.079 20838-20844 I/art: Debugger is no longer active\r\n02-14 10:42:52.113 20838-20838 W/art: Before Android 4.1, method android.graphics.PorterDuffColorFilter android.support.graphics.drawable.VectorDrawableCompat.updateTintFilter(android.graphics.PorterDuffColorFilter, android.content.res.ColorStateList, android.graphics.PorterDuff$Mode) would have incorrectly overridden the package-private method in android.graphics.drawable.Drawable\r\n02-14 10:42:52.140 20838-20838 I/art: Rejecting re-init on previously-failed class java.lang.Class<android.support.v4.view.ViewCompat$OnUnhandledKeyEventListenerWrapper>\r\n02-14 10:42:52.140 20838-20838 I/art: Rejecting re-init on previously-failed class java.lang.Class<android.support.v4.view.ViewCompat$OnUnhandledKeyEventListenerWrapper>\r\n02-14 10:42:52.204 20838-20851 D/OpenGLRenderer: Use EGL_SWAP_BEHAVIOR_PRESERVED: true\r\n02-14 10:42:52.262 20838-20851 I/Adreno-EGL: <qeglDrvAPI_eglInitialize:379>: QUALCOMM Build: 10/21/15, 369a2ea, I96aee987eb\r\n02-14 10:42:52.265 20838-20851 I/OpenGLRenderer: Initialized EGL, version 1.4\r\n02-14 10:42:56.576 20838-20838 I/ExoPlayerImpl: Init 6799f0e [ExoPlayerLib/2.9.0] [hammerhead, Nexus 5, LGE, 23]\r\n02-14 10:42:56.638 20838-20865 W/VideoCapabilities: Unrecognized profile 2130706433 for video/avc\r\n02-14 10:42:56.661 20838-20865 I/VideoCapabilities: Unsupported profile 4 for video/mp4v-es\r\n02-14 10:42:56.666 20838-20865 D/MediaCodecInfo: NoSupport [sizeAndRate.support, 5760x2880x-1.0] [OMX.qcom.video.decoder.avc, video/avc] [hammerhead, Nexus 5, LGE, 23]\r\n02-14 10:42:56.666 20838-20865 D/MediaCodecInfo: NoSupport [sizeAndRate.support, 5760x2880x-1.0] [OMX.qcom.video.decoder.avc, video/avc] [hammerhead, Nexus 5, LGE, 23]\r\n02-14 10:42:56.702 20838-20874 I/OMXClient: Using client-side OMX mux.\r\n02-14 10:42:56.844 20838-20873 I/MediaCodec: [OMX.qcom.video.decoder.avc] setting surface generation to 21338113\r\n02-14 10:42:56.846 20838-20874 E/ACodec: [OMX.qcom.video.decoder.avc] configureCodec returning error -1010\r\n02-14 10:42:56.846 20838-20874 E/ACodec: signalError(omxError 0x80001001, internalError -1010)\r\n02-14 10:42:56.846 20838-20873 E/MediaCodec: Codec reported err 0xfffffc0e, actionCode 0, while in state 3\r\n02-14 10:42:56.847 20838-20865 E/MediaCodec: configure failed with err 0xfffffc0e, resetting...\r\n02-14 10:42:56.853 20838-20874 I/OMXClient: Using client-side OMX mux.\r\n02-14 10:42:56.926 20838-20865 W/MediaCodecRenderer: Failed to initialize decoder: OMX.qcom.video.decoder.avc\r\n    android.media.MediaCodec$CodecException: Error 0xfffffc0e\r\n        at android.media.MediaCodec.native_configure(Native Method)\r\n        at android.media.MediaCodec.configure(MediaCodec.java:1778)\r\n        at com.google.android.exoplayer2.video.MediaCodecVideoRenderer.configureCodec(MediaCodecVideoRenderer.java:483)\r\n        at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.initCodec(MediaCodecRenderer.java:791)\r\n        at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.initCodecWithFallback(MediaCodecRenderer.java:731)\r\n        at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.maybeInitCodec(MediaCodecRenderer.java:460)\r\n        at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.reinitializeCodec(MediaCodecRenderer.java:1247)\r\n        at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.onInputFormatChanged(MediaCodecRenderer.java:1097)\r\n        at com.google.android.exoplayer2.video.MediaCodecVideoRenderer.onInputFormatChanged(MediaCodecVideoRenderer.java:552)\r\n        at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.render(MediaCodecRenderer.java:633)\r\n        at com.google.android.exoplayer2.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:530)\r\n        at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:303)\r\n        at android.os.Handler.dispatchMessage(Handler.java:98)\r\n        at android.os.Looper.loop(Looper.java:148)\r\n        at android.os.HandlerThread.run(HandlerThread.java:61)\r\n02-14 10:42:56.928 20838-20865 E/ExoPlayerImplInternal: Playback error.\r\n    com.google.android.exoplayer2.ExoPlaybackException: com.google.android.exoplayer2.mediacodec.MediaCodecRenderer$DecoderInitializationException: Decoder init failed: OMX.qcom.video.decoder.avc, Format(1, null, null, video/avc, null, -1, null, [5760, 2880, -1.0], [-1, -1])\r\n        at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.maybeInitCodec(MediaCodecRenderer.java:465)\r\n        at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.reinitializeCodec(MediaCodecRenderer.java:1247)\r\n        at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.onInputFormatChanged(MediaCodecRenderer.java:1097)\r\n        at com.google.android.exoplayer2.video.MediaCodecVideoRenderer.onInputFormatChanged(MediaCodecVideoRenderer.java:552)\r\n        at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.render(MediaCodecRenderer.java:633)\r\n        at com.google.android.exoplayer2.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:530)\r\n        at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:303)\r\n        at android.os.Handler.dispatchMessage(Handler.java:98)\r\n        at android.os.Looper.loop(Looper.java:148)\r\n        at android.os.HandlerThread.run(HandlerThread.java:61)\r\n     Caused by: com.google.android.exoplayer2.mediacodec.MediaCodecRenderer$DecoderInitializationException: Decoder init failed: OMX.qcom.video.decoder.avc, Format(1, null, null, video/avc, null, -1, null, [5760, 2880, -1.0], [-1, -1])\r\n        at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.initCodecWithFallback(MediaCodecRenderer.java:739)\r\n        at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.maybeInitCodec(MediaCodecRenderer.java:460)\r\n        at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.reinitializeCodec(MediaCodecRenderer.java:1247) \r\n        at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.onInputFormatChanged(MediaCodecRenderer.java:1097) \r\n        at com.google.android.exoplayer2.video.MediaCodecVideoRenderer.onInputFormatChanged(MediaCodecVideoRenderer.java:552) \r\n        at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.render(MediaCodecRenderer.java:633) \r\n        at com.google.android.exoplayer2.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:530) \r\n        at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:303) \r\n        at android.os.Handler.dispatchMessage(Handler.java:98) \r\n        at android.os.Looper.loop(Looper.java:148) \r\n        at android.os.HandlerThread.run(HandlerThread.java:61) \r\n     Caused by: android.media.MediaCodec$CodecException: Error 0xfffffc0e\r\n        at android.media.MediaCodec.native_configure(Native Method)\r\n        at android.media.MediaCodec.configure(MediaCodec.java:1778)\r\n        at com.google.android.exoplayer2.video.MediaCodecVideoRenderer.configureCodec(MediaCodecVideoRenderer.java:483)\r\n        at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.initCodec(MediaCodecRenderer.java:791)\r\n        at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.initCodecWithFallback(MediaCodecRenderer.java:731)\r\n        at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.maybeInitCodec(MediaCodecRenderer.java:460) \r\n        at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.reinitializeCodec(MediaCodecRenderer.java:1247) \r\n        at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.onInputFormatChanged(MediaCodecRenderer.java:1097) \r\n        at com.google.android.exoplayer2.video.MediaCodecVideoRenderer.onInputFormatChanged(MediaCodecVideoRenderer.java:552) \r\n        at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.render(MediaCodecRenderer.java:633) \r\n        at com.google.android.exoplayer2.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:530) \r\n        at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:303) \r\n        at android.os.Handler.dispatchMessage(Handler.java:98) \r\n        at android.os.Looper.loop(Looper.java:148) \r\n        at android.os.HandlerThread.run(HandlerThread.java:61) \r\n02-14 10:56:54.490 20838-20838 I/ExoPlayerImpl: Release 6799f0e [ExoPlayerLib/2.9.0] [hammerhead, Nexus 5, LGE, 23] [goog.exo.core, goog.exo.ui]\r\n02-14 10:56:54.839 20838-20838 W/ExoPlayerImplInternal: Ignoring messages sent after release.\r\n```\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5517/comments",
    "author": "sergexte",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2019-02-20T10:48:46Z",
        "body": "`D/MediaCodecInfo: NoSupport [sizeAndRate.support, 5760x2880x-1.0] [OMX.qcom.video.decoder.avc, video/avc] [hammerhead, Nexus 5, LGE, 23]` suggests that the video is too big to be decoded on this device. You could try producing a lower resolution video and see if that is playable."
      }
    ]
  },
  {
    "number": 5492,
    "title": "Demo crash on open",
    "created_at": "2019-02-10T05:29:38Z",
    "closed_at": "2019-02-11T18:08:46Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5492",
    "body": "### Issue description\r\nProcess: com.google.android.exoplayer2.demo crashes on open\r\n\r\n### Reproduction steps\r\n1. Upgrade build tools to 3.3.1\r\n2. Sync\r\n3. Run the demo on your phone\r\n\r\n### Link to test content\r\nNot available\r\n\r\n### Version of ExoPlayer being used\r\nBranch dev-v2\r\n\r\n### Device(s) and version(s) of Android being used\r\nMotorola Moto Z Play Droid - Motorola XT1635-01(Android 8.0.0, API 26)\r\ncom.android.tools.build:gradle:3.3.1\r\n\r\n### A full bug report captured from the device\r\n`2019-02-10 00:20:44.578 19903-19903/? I/zygote: Late-enabling -Xcheck:jni\r\n2019-02-10 00:20:44.864 19903-19903/com.google.android.exoplayer2.demo I/InstantRun: starting instant run server: is main process\r\n2019-02-10 00:20:45.051 19903-19903/com.google.android.exoplayer2.demo E/SQLiteLog: (1) no such column: manual_stop_reason\r\n2019-02-10 00:20:45.052 19903-19903/com.google.android.exoplayer2.demo D/AndroidRuntime: Shutting down VM\r\n2019-02-10 00:20:45.060 19903-19903/com.google.android.exoplayer2.demo E/AndroidRuntime: FATAL EXCEPTION: main\r\n    Process: com.google.android.exoplayer2.demo, PID: 19903\r\n    java.lang.RuntimeException: Unable to start activity ComponentInfo{com.google.android.exoplayer2.demo/com.google.android.exoplayer2.demo.SampleChooserActivity}: android.database.sqlite.SQLiteException: no such column: manual_stop_reason (code 1): , while compiling: SELECT id, title, subtitle, cache_key, state, download_percentage, downloaded_bytes, total_bytes, failure_reason, stop_flags, not_met_requirements, manual_stop_reason, start_time_ms, update_time_ms, stream_keys, custom_metadata FROM ExoPlayerDownloads ORDER BY start_time_ms ASC\r\n        at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2895)\r\n        at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2974)\r\n        at android.app.ActivityThread.-wrap11(Unknown Source:0)\r\n        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1666)\r\n        at android.os.Handler.dispatchMessage(Handler.java:105)\r\n        at android.os.Looper.loop(Looper.java:164)\r\n        at android.app.ActivityThread.main(ActivityThread.java:6695)\r\n        at java.lang.reflect.Method.invoke(Native Method)\r\n        at com.android.internal.os.Zygote$MethodAndArgsCaller.run(Zygote.java:240)\r\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:772)\r\n     Caused by: android.database.sqlite.SQLiteException: no such column: manual_stop_reason (code 1): , while compiling: SELECT id, title, subtitle, cache_key, state, download_percentage, downloaded_bytes, total_bytes, failure_reason, stop_flags, not_met_requirements, manual_stop_reason, start_time_ms, update_time_ms, stream_keys, custom_metadata FROM ExoPlayerDownloads ORDER BY start_time_ms ASC\r\n        at android.database.sqlite.SQLiteConnection.nativePrepareStatement(Native Method)\r\n        at android.database.sqlite.SQLiteConnection.acquirePreparedStatement(SQLiteConnection.java:889)\r\n        at android.database.sqlite.SQLiteConnection.prepare(SQLiteConnection.java:500)\r\n        at android.database.sqlite.SQLiteSession.prepare(SQLiteSession.java:588)\r\n        at android.database.sqlite.SQLiteProgram.<init>(SQLiteProgram.java:58)\r\n        at android.database.sqlite.SQLiteQuery.<init>(SQLiteQuery.java:37)\r\n        at android.database.sqlite.SQLiteDirectCursorDriver.query(SQLiteDirectCursorDriver.java:44)\r\n        at android.database.sqlite.SQLiteDatabase.rawQueryWithFactory(SQLiteDatabase.java:1318)\r\n        at android.database.sqlite.SQLiteDatabase.queryWithFactory(SQLiteDatabase.java:1165)\r\n        at android.database.sqlite.SQLiteDatabase.query(SQLiteDatabase.java:1036)\r\n        at android.database.sqlite.SQLiteDatabase.query(SQLiteDatabase.java:1204)\r\n        at com.google.android.exoplayer2.offline.DefaultDownloadIndex.getCursor(DefaultDownloadIndex.java:246)\r\n        at com.google.android.exoplayer2.offline.DefaultDownloadIndex.getDownloadStates(DefaultDownloadIndex.java:182)\r\n        at com.google.android.exoplayer2.demo.DownloadTracker.loadTrackedActions(DownloadTracker.java:173)\r\n        at com.google.android.exoplayer2.demo.DownloadTracker.<init>(DownloadTracker.java:100)\r\n        at com.google.android.exoplayer2.demo.DemoApplication.initDownloadManager(DemoApplication.java:128)\r\n        at com.google.android.exoplayer2.demo.DemoApplication.getDownloadTracker(DemoApplication.java:101)\r\n        at com.google.android.exoplayer2.demo.SampleChooserActivity.onCreate(SampleChooserActivity.java:103)\r\n        at android.app.Activity.performCreate(Activity.java:6989)\r\n        at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1235)\r\n        at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2848)\r\n        at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2974) \r\n        at android.app.ActivityThread.-wrap11(Unknown Source:0) \r\n        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1666) \r\n        at android.os.Handler.dispatchMessage(Handler.java:105) \r\n        at android.os.Looper.loop(Looper.java:164)`\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5492/comments",
    "author": "KellzCodes",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2019-02-10T08:10:10Z",
        "body": "Please could you try uninstalling the demo app (`adb uninstall com.google.android.exoplayer2.demo`) then re-installing it?"
      }
    ]
  },
  {
    "number": 5484,
    "title": "[Question] CastPlayer state changes",
    "created_at": "2019-02-07T11:41:24Z",
    "closed_at": "2019-02-08T14:33:03Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5484",
    "body": "### Issue description\r\nI'm using the CastPlayer to stream audio to a ChromeCast device by `castPlayer.loadItem(...)`. This seems to work for just starting the player cause it almost instantly starts playing the audio on the CC device. Unfortunately I do not get any player status changes cause the player stays on `STATUS_IDLE`. \r\n\r\nFrom the docs I read \r\n\r\n> If no session is available, the player state will remain unchanged [...]\r\n\r\n but that seems to make no sense to me cause a session should be available if I'm able to play the audio, right?\r\n\r\nI need the the state change callback to then handle UI changes and other app behaviour.\r\n\r\n### Reproduction steps\r\nInstead of using the MediaRouteButton I am using a self made routing \"dialog\" (discover available devices and add them to a list in the apps drop down menu). On the users route selection I connect to the device via \r\n```\r\nMediaRouter router = MediaRouter.getInstance(getContext());\r\nrouter.selectRoute(chromecastDiscoveryResult.getRouteInfo());\r\n```\r\nChromecastDiscoveryResult is a class that holds some info about the discovered devices e.g. the MediaRouter.RouteInfo that's needed for selecting the devices.\r\n\r\n### Version of ExoPlayer being used\r\n2.9.3\r\n\r\n### Device(s) and version(s) of Android being used\r\nSamsung Galaxy A5 - Android 8.0\r\nHTC U11+ - Android 8.0\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5484/comments",
    "author": "CodeRedDev",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2019-02-08T14:33:02Z",
        "body": "There will be a new completely rewritten Cast extension soon (see #5486) and we won't investigate issues with the old one anymore. All things similar to what you describe will probably be fixed in the new version."
      }
    ]
  },
  {
    "number": 5481,
    "title": "[Question] Stop playing ads when user seeks back.",
    "created_at": "2019-02-06T14:02:43Z",
    "closed_at": "2019-02-07T06:06:05Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5481",
    "body": "We have implemented our own custom AdsLoader. Everything is working fine. I have a use case which i am not able to figure out whether it is achievable using AdPlaybackState.\r\n\r\nLets says I have 5 midroll ads Ad1, Ad2, Ad3, Ad4 and Ad5.\r\nwhen user seeks to a position between Ad4 and Ad5, Ad4 starts plays immediately as expected.\r\n\r\nnow when user seeks back before Ad4, from current postion i.e to a position between Ad3 and Ad4, Ad3 starts playing immediately. In this case I don't want the ad to start immediately.. (I dont want ads to be played when user seeks back. Ads should be played only during forward seek)\r\n\r\ncan we achieve this using AdPlaybackState.?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5481/comments",
    "author": "sravan1213",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2019-02-06T14:09:25Z",
        "body": "I think it should be possible: if your `AdsLoader` keeps a player listener you can be notified of the seek in `onPositionDiscontinuity` with reason `DISCONTINUITY_REASON_SEEK`, and mark any ads preceding the last ad before the seek position that are not already in the played/error states as skipped. After updating the `AdPlaybackState` those ads shouldn't be played any more. Please try this and let us know how you get on."
      },
      {
        "user": "sravan1213",
        "created_at": "2019-02-06T17:02:38Z",
        "body": "Thanks for the quick response. I've tried this but there is one problem I'm facing.\r\nHow can I mark them as unplayed ads if user seeks back again to a position before this ad. \r\n"
      },
      {
        "user": "sravan1213",
        "created_at": "2019-02-07T06:06:05Z",
        "body": "@andrewlewis I got this worked out. I am marking previous ads skipped as you suggested. When user seeks back I am changing the state of skipped ads to unPlayAds which are ahead of the current position."
      },
      {
        "user": "andrewlewis",
        "created_at": "2019-02-07T10:07:17Z",
        "body": "@sravan1213 Glad you got it worked out, but are you sure the approach of marking ads that were previously marked as skipped as unplayed works? I think there's a check that the ad whose state is changing is in the unavailable/available state. We are planning to add more flexibility for this soon."
      },
      {
        "user": "sravan1213",
        "created_at": "2019-02-07T13:56:42Z",
        "body": "@andrewlewis yes it is working as expected. I am not building the new state using `with` helper functions. I am saving initial state of adPlaybackState when I first build it. When user seek back again i am doing following hack for ads which are skipped earlier :).\r\n`adPlaybackState.adGroups[adGroup] = initialAdPlaybackState.adGroups[adGroup]`\r\n\r\nGood to hear that you are mode flexibility to `AdPlaybackState`"
      }
    ]
  },
  {
    "number": 5465,
    "title": "Question about debug log",
    "created_at": "2019-02-01T21:59:28Z",
    "closed_at": "2019-03-06T09:25:49Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5465",
    "body": "Hello,\r\nI'm using ExoPlayer 2.9.4.\r\nI'm trying to play smooth files.\r\n\r\nIt works using some smooth files manifests, and doesn't work using other smooth files manifest.\r\n\"Doesn't work\" means that I just have black screen.\r\n\r\nCould you please tell me how to monitor/debug what is wrong ? I would like to know if the manifest has been downloaded correctly, if the manifest parsing is ok, etc...\r\nI have tryed to add a listener using player.addListener but I don't get any info (except that onPlayerStateChanged is called 3 times with playbackState values 1, 2 and 3)\r\n\r\nThanks for help.\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5465/comments",
    "author": "ThorAsgardDev",
    "comments": [
      {
        "user": "ThorAsgardDev",
        "created_at": "2019-02-02T08:20:40Z",
        "body": "I have added a TransferListener on the DataSource. The manifest seems to be downloaded correctly, but no fragments are downloaded. Any idea where the problem comes from ? Or how to get info to know what is wrong ?"
      },
      {
        "user": "ThorAsgardDev",
        "created_at": "2019-02-02T23:57:01Z",
        "body": "It seems that the problem comes from DRM.\r\nFor smooth files that are using DRM all the renderers are marked as NO_UNSUPPORTED_DRM.\r\nI have tried to set the widevine level to 3 instead of 1 but the problem is still here.\r\nThese smooth manifest files contain a protectionheader tag.\r\n\r\nIs it normal that even using Widevine level 3 there are no renderer available ? I have tested on Samsung Galaxy S6 Android 7 and OnePlus 6T Android 9.\r\nTo solve this problem, is it correct to try to remove manually the protectionheader tag from the manifest before giving it to exoplayer (but keeping the drmSessionManager) ?\r\n"
      },
      {
        "user": "ojw28",
        "created_at": "2019-02-03T12:56:06Z",
        "body": "If these are SmoothStreaming streams then it's more likely they're using PlayReady DRM. Android devices (with the exception of AndroidTV) are not required to support PlayReady, and most do not."
      }
    ]
  },
  {
    "number": 5463,
    "title": "Question: Extension FFmpeg, Using Video soft decoders, drop frames seriously on some old devices!",
    "created_at": "2019-02-01T09:29:25Z",
    "closed_at": "2019-02-01T09:41:12Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5463",
    "body": "We extended the FFmpeg extension. Using the soft video decoder to robust the player.But there are decoding efficiency problems on some old tv devices, resulting in serious frame loss. \r\nMaybe this is not an issue of ExoPlayer,  but we hope you could give me some advice how to optimize.\r\nsuch as how to implements a neno-optimized FFmpeg decoder. If possible, help you could give a build script, so we could easily compile the dynamic library. Thanks!",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5463/comments",
    "author": "Romantic-LiXuefeng",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2019-02-01T09:41:12Z",
        "body": "One thing that might be helpful: you could look at how the vp9 extension uses OpenGL to do color-space conversion on software video decoder output frames. You may want to apply the same approach if you are not doing it already. We don't have time to provide more detailed guidance since, as you say, this is not an ExoPlayer issue, so I will close this."
      }
    ]
  },
  {
    "number": 5458,
    "title": "Using custom receiver in cast with exoplayer",
    "created_at": "2019-01-31T07:01:43Z",
    "closed_at": "2019-01-31T10:25:46Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5458",
    "body": "Hi i am having a question with regards to using cast with exoplayer.\r\nWe are planning to write a custom receiver for cast.The cast sdk mentions that we need to send the receiver app id from the sender app(android app).Where is this to be provided if we are using exoplayer cast extension.\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5458/comments",
    "author": "meenukrishnamurthy",
    "comments": [
      {
        "user": "AquilesCanta",
        "created_at": "2019-01-31T10:25:46Z",
        "body": "The app id is provided by the OptionsProvider, which is in turn defined in the AndroidManifest of your app. Have a look at AndroidManifest.xml in the demo app. You'll find a line like:\r\n\r\n```\r\n<meta-data android:name=\"com.google.android.gms.cast.framework.OPTIONS_PROVIDER_CLASS_NAME\"\r\n        android:value=\"com.google.android.exoplayer2.ext.cast.DefaultCastOptionsProvider\" />\r\n```\r\n\r\nAnd then in DefaultCastOptionsProvider there is\r\n\r\n```\r\n  @Override\r\n  public CastOptions getCastOptions(Context context) {\r\n    return new CastOptions.Builder()\r\n        .setReceiverApplicationId(CastMediaControlIntent.DEFAULT_MEDIA_RECEIVER_APPLICATION_ID)\r\n        .setStopReceiverApplicationWhenEndingSession(true).build();\r\n  }\r\n```\r\n\r\nYou can replace the id. It's worth mentioning we are releasing the initial version of our own receiver app in approximately 2 weeks. It would be great if you could help us test it once it's pushed to the public repo."
      },
      {
        "user": "meenukrishnamurthy",
        "created_at": "2019-01-31T10:53:05Z",
        "body": "Sure will do the needful."
      },
      {
        "user": "meenukrishnamurthy",
        "created_at": "2019-01-31T10:53:42Z",
        "body": "Thanks for the quick response."
      }
    ]
  },
  {
    "number": 5408,
    "title": "cache m3u8 ",
    "created_at": "2019-01-20T07:48:16Z",
    "closed_at": "2019-04-05T20:50:47Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5408",
    "body": "Cache the m3u8 file. The ts link in the m3u8 file is followed by a token. I want to remove the ts link after token as the key of the ts video streams cache.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5408/comments",
    "author": "coderain1",
    "comments": [
      {
        "user": "coderain1",
        "created_at": "2019-01-22T07:42:57Z",
        "body": "Each ts link in the m3u8 file will be followed by the information of a token. If the ts link with token is directly used as the key of the cache, the information of the later token will change, but the ts video will not change. In this way, the local ts cache will be invalidated and the ts video will be downloaded again. Therefore, to generate custom rules for the cached key, use the ts link with token removed as the cached key for this ts video."
      },
      {
        "user": "ojw28",
        "created_at": "2019-01-22T10:21:08Z",
        "body": "I do not understand if there's a question here, or what it is. Please clarify. Thanks."
      },
      {
        "user": "coderain1",
        "created_at": "2019-01-23T05:17:45Z",
        "body": "So, I would like to ask how to define the cache key of video for each ts in the local cache of m3u8 video；"
      },
      {
        "user": "ojw28",
        "created_at": "2019-03-06T18:10:30Z",
        "body": "You can use a `CacheKeyFactory` for that. @erdemguven can provide more information if needed."
      },
      {
        "user": "yangwuan55",
        "created_at": "2019-07-17T10:58:44Z",
        "body": "Can I make a hlsmediasource with a native m3u8 file?\r\nlike this:\r\n\r\n```\r\n\r\ncreateMediaSource(Uri.parse(\"/file/path.m3u8\"))\r\n\r\n```\r\n"
      }
    ]
  },
  {
    "number": 5395,
    "title": "Unused dependencies",
    "created_at": "2019-01-16T14:44:09Z",
    "closed_at": "2019-01-17T14:45:38Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5395",
    "body": "There are unused dependencies.\r\n\r\n- implementation 'com.android.support:support-v4:' + supportLibraryVersion\r\n- implementation 'com.android.support:customtabs:' + supportLibraryVersion\r\n\r\nPlease remove them and use this instead.\r\n\r\n- implementation 'com.android.support:support-annotations:' + supportLibraryVersion\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5395/comments",
    "author": "ThomasCZ",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2019-01-16T15:17:56Z",
        "body": "I assume this is about the IMA extension? I think both of the dependencies you refer to are pulled in indirectly anyway. See the dependency tree below, which is a snippet of the output from `./gradlew extension-ima:dependencies`. They're explicitly listed in our `build.gradle` file only to force the appropriate versions of these dependencies to be used when they are pulled in, which doesn't happen otherwise. I think this is a shortcoming/quirk of gradle. If we didn't list them I think they'd still be pulled in, but possibly incorrect versions would be used.\r\n```\r\nreleaseRuntimeClasspath - Resolved configuration for runtime for variant: release\r\n+--- com.google.ads.interactivemedia.v3:interactivemedia:3.10.2\r\n+--- project :library-core\r\n|    \\--- com.android.support:support-annotations:27.1.1\r\n+--- com.google.android.gms:play-services-ads:17.1.1\r\n|    +--- com.android.support:customtabs:26.1.0 -> 27.1.1     <-- CUSTOM TABS\r\n|    |    +--- com.android.support:support-compat:27.1.1\r\n|    |    |    +--- com.android.support:support-annotations:27.1.1\r\n|    |    |    \\--- android.arch.lifecycle:runtime:1.1.0\r\n|    |    |         +--- android.arch.lifecycle:common:1.1.0\r\n|    |    |         \\--- android.arch.core:common:1.1.0\r\n|    |    +--- com.android.support:support-annotations:27.1.1\r\n|    |    \\--- com.android.support:support-core-ui:27.1.1\r\n|    |         +--- com.android.support:support-annotations:27.1.1\r\n|    |         +--- com.android.support:support-compat:27.1.1 (*)\r\n|    |         \\--- com.android.support:support-core-utils:27.1.1\r\n|    |              +--- com.android.support:support-annotations:27.1.1\r\n|    |              \\--- com.android.support:support-compat:27.1.1 (*)\r\n|    +--- com.google.android.gms:play-services-ads-base:[17.1.1] -> 17.1.1\r\n|    +--- com.google.android.gms:play-services-ads-identifier:16.0.0\r\n|    |    \\--- com.google.android.gms:play-services-basement:16.0.1\r\n|    |         \\--- com.android.support:support-v4:26.1.0 -> 27.1.1     <-- SUPPORT-V4\r\n|    |              +--- com.android.support:support-compat:27.1.1 (*)\r\n|    |              +--- com.android.support:support-media-compat:27.1.1\r\n|    |              |    +--- com.android.support:support-annotations:27.1.1\r\n|    |              |    \\--- com.android.support:support-compat:27.1.1 (*)\r\n|    |              +--- com.android.support:support-core-utils:27.1.1 (*)\r\n|    |              +--- com.android.support:support-core-ui:27.1.1 (*)\r\n|    |              \\--- com.android.support:support-fragment:27.1.1\r\n|    |                   +--- com.android.support:support-compat:27.1.1 (*)\r\n|    |                   +--- com.android.support:support-core-ui:27.1.1 (*)\r\n|    |                   +--- com.android.support:support-core-utils:27.1.1 (*)\r\n|    |                   +--- com.android.support:support-annotations:27.1.1\r\n|    |                   +--- android.arch.lifecycle:livedata-core:1.1.0\r\n|    |                   |    +--- android.arch.lifecycle:common:1.1.0\r\n|    |                   |    +--- android.arch.core:common:1.1.0\r\n|    |                   |    \\--- android.arch.core:runtime:1.1.0\r\n|    |                   |         \\--- android.arch.core:common:1.1.0\r\n|    |                   \\--- android.arch.lifecycle:viewmodel:1.1.0\r\n|    +--- com.google.android.gms:play-services-ads-lite:[17.1.1] -> 17.1.1\r\n|    |    +--- com.google.android.gms:play-services-ads-base:[17.1.1] -> 17.1.1\r\n|    |    +--- com.google.android.gms:play-services-basement:16.0.1 (*)\r\n|    |    \\--- com.google.android.gms:play-services-measurement-sdk-api:16.0.3\r\n|    |         +--- com.google.android.gms:play-services-basement:16.0.1 (*)\r\n|    |         \\--- com.google.android.gms:play-services-measurement-base:[16.0.4] -> 16.0.4\r\n|    |              \\--- com.google.android.gms:play-services-basement:16.0.1 (*)\r\n|    +--- com.google.android.gms:play-services-basement:16.0.1 (*)\r\n|    \\--- com.google.android.gms:play-services-gass:[17.1.1] -> 17.1.1\r\n|         +--- com.google.android.gms:play-services-ads-base:[17.1.1] -> 17.1.1\r\n|         \\--- com.google.android.gms:play-services-basement:16.0.1 (*)\r\n+--- com.android.support:support-v4:27.1.1 (*)     <-- CUSTOM TABS. Forces correct version.\r\n\\--- com.android.support:customtabs:27.1.1 (*)     <-- SUPPORT-V4. Forces correct version.\r\n```"
      },
      {
        "user": "ojw28",
        "created_at": "2019-01-17T14:45:38Z",
        "body": "Closing as answered."
      }
    ]
  },
  {
    "number": 5373,
    "title": "with HLS, onVideoInputFormatChanged is called automatically and initializes format",
    "created_at": "2019-01-14T06:40:08Z",
    "closed_at": "2019-02-08T14:48:11Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5373",
    "body": "I'm using exoplayer 2.9.1v, and trying to change bitrate, width, height of player. \r\nLike demo app, I'm trying to set these parameters using `DefaultTrackSelector`. \r\nBut when to start player, `onVideoInputFormatChanged` is called and this initializes format (width, height, etc). \r\n\r\nbelow is my code which set format parameters via DefaultTrackSelector.\r\n```            \r\n           TrackSelection.Factory trackSelectionFactory = new AdaptiveTrackSelection.Factory();\r\n            DefaultTrackSelector trackSelector = new DefaultTrackSelector(trackSelectionFactory);\r\n            trackSelector.setParameters(\r\n                    trackSelector\r\n                            .buildUponParameters()\r\n                            .setMaxVideoSizeSd()\r\n                            .setMaxVideoBitrate(quality)\r\n                            .setMaxVideoSize(videoW, videoH)\r\n            );\r\n\r\n            player = ExoPlayerFactory.newSimpleInstance(context, trackSelector);\r\n            dataSourceFactory = new DefaultDataSourceFactory(context,\r\n                    Util.getUserAgent(context, \"yourApplicationName\"));\r\n            videoSource = new HlsMediaSource.Factory(dataSourceFactory)\r\n                    .createMediaSource(Uri.parse(mVideoItem.getVideo()));\r\n            player.addAnalyticsListener(this);\r\n            player.prepare(videoSource);\r\n```\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5373/comments",
    "author": "jy617lee",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2019-01-14T09:24:50Z",
        "body": "What you describe sounds as if everything is working as intended. Can you please elaborate a bit more what your actual problem is?"
      },
      {
        "user": "jy617lee",
        "created_at": "2019-01-14T09:41:09Z",
        "body": "Thank you for reply, @tonihei . \r\n\r\nFor example, I set videosize with `setMaxVideoSize(360, 180)` and call player.prepare. \r\n\r\nBut when player starts, `onVideoInputFormatChanged(Format format)` is called and `format.width` is 1280 and `format.height` is 720 which is diffrent from what I set with setMaxVideoSize()"
      },
      {
        "user": "tonihei",
        "created_at": "2019-01-14T09:45:13Z",
        "body": "Can you provide more details of your stream (either share it, or attach an `EventLogger` and paste the outputs here)? Might be that you don't have a format which is below this max video size or that the HLS formats don't contain the video size."
      },
      {
        "user": "tonihei",
        "created_at": "2019-02-08T14:48:11Z",
        "body": "Closing as we haven't received further input."
      }
    ]
  },
  {
    "number": 5371,
    "title": "Another SimpleCache instance uses the folder: Exception",
    "created_at": "2019-01-12T17:05:16Z",
    "closed_at": "2019-01-13T06:45:05Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5371",
    "body": "Hi \r\nI'm using ViewPager to load Music. So In Max, I'll have three ExoPlayer initialized, which is working perfectly fine If I won't make use of the cache.\r\n\r\nSo decided to do this.\r\n\r\n\r\n```\r\nimport com.google.android.exoplayer2.upstream.DataSource\r\nimport com.google.android.exoplayer2.upstream.DefaultBandwidthMeter\r\nimport com.google.android.exoplayer2.upstream.DefaultDataSourceFactory\r\nimport com.google.android.exoplayer2.upstream.DefaultHttpDataSourceFactory\r\nimport com.google.android.exoplayer2.upstream.FileDataSource\r\nimport com.google.android.exoplayer2.upstream.cache.CacheDataSink\r\nimport com.google.android.exoplayer2.upstream.cache.CacheDataSource\r\nimport com.google.android.exoplayer2.upstream.cache.LeastRecentlyUsedCacheEvictor\r\nimport com.google.android.exoplayer2.upstream.cache.SimpleCache\r\nimport com.google.android.exoplayer2.util.Util\r\nimport com.sports.R\r\nimport com.sports.utils.Log\r\n\r\nimport java.io.File\r\n\r\nclass CacheDataSourceFactory(private val context: Context, private val maxCacheSize: Long, private val maxFileSize: Long) : DataSource.Factory {\r\n    private val defaultDataSourceFactory: DefaultDataSourceFactory\r\n    companion object {\r\n        const val TAG = \"Cache\"\r\n    }\r\n\r\n    init {\r\n        val userAgent = Util.getUserAgent(context, context.getString(R.string.app_name))\r\n        val bandwidthMeter = DefaultBandwidthMeter()\r\n        defaultDataSourceFactory = DefaultDataSourceFactory(this.context,\r\n                bandwidthMeter,\r\n                DefaultHttpDataSourceFactory(userAgent, bandwidthMeter))\r\n    }\r\n\r\n    override fun createDataSource(): DataSource {\r\n        val evict = LeastRecentlyUsedCacheEvictor(maxCacheSize)\r\n        val simpleCache = SimpleCache(File(context.cacheDir, \"media\"), evict)\r\n        return CacheDataSource(simpleCache, defaultDataSourceFactory.createDataSource(),\r\n                FileDataSource(), CacheDataSink(simpleCache, maxFileSize),\r\n                 CacheDataSource.FLAG_IGNORE_CACHE_ON_ERROR, object: CacheDataSource.EventListener{\r\n            override fun onCachedBytesRead(cacheSizeBytes: Long, cachedBytesRead: Long) {\r\n                Log.d(TAG, \"onCachedBytesRead\")\r\n            }\r\n\r\n            override fun onCacheIgnored(reason: Int) {\r\n                Log.d(TAG, \"onCachedBytesRead\")\r\n            }\r\n\r\n        })\r\n    }\r\n}\r\n\r\n```\r\nAttaching cached data source to the player like this\r\n```\r\n\r\n\r\n override fun init(url: String, context: Context) {\r\n        audioPlayer = ExoPlayerFactory.newSimpleInstance(context)\r\n        audioPlayer?.prepare(buildMediaSource(Uri.parse(url),context))\r\n        audioPlayer?.playWhenReady = false\r\n        audioPlayer?.addListener(this)\r\n        lifecycleOwner.lifecycle.addObserver(this)\r\n    }\r\n\r\n    private fun buildMediaSource(uri: Uri,context: Context): MediaSource {\r\n        val cacheDataSourceFactory = CacheSingleton.getInstance(context, 100 * 1024 * 1024, 5 * 1024 * 1024)\r\n        return LoopingMediaSource(ExtractorMediaSource.Factory(\r\n                cacheDataSourceFactory).createMediaSource(uri))\r\n\r\n    }\r\n\r\n```\r\nSo endup in exception **Another SimpleCache instance uses the folder**. So I decided to make the cache singleton, that also didn't help me.\r\n\r\nHow Can I solve this?\r\n\r\nAny help, appricated !!!\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5371/comments",
    "author": "pollux-",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2019-01-12T22:10:18Z",
        "body": "The log message means what it says. If you're still seeing it, you're almost certainly still instantiating multiple instances."
      },
      {
        "user": "pollux-",
        "created_at": "2019-01-13T06:45:05Z",
        "body": "My Bad, I had made the **SimpleCache** singleton, now working !!\r\n\r\n```\r\nif (simpleCache == null) {\r\n            simpleCache = SimpleCache(File(context.cacheDir, \"media\"), evict)\r\n        }\r\n```"
      }
    ]
  },
  {
    "number": 5368,
    "title": "can we get update of current subtitle cue if captions are embeded in the mp4 ?",
    "created_at": "2019-01-11T11:33:37Z",
    "closed_at": "2019-03-06T09:24:56Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5368",
    "body": "can we get update of current subtitle cue if captions are embeded in the mp4 ?\r\n\r\nIf video has inbulit subtitles can we get the update of current subtitle cue ? \r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5368/comments",
    "author": "MuVen",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2019-01-11T17:55:39Z",
        "body": "It depends what track type is used for the captions. It should \"just work\" if it's one of the embedded track types we support, which I think are `tx3g`, `wvtt`, `stpp` and `c608`. I'd suggest trying to play the content in our demo app. If you can enable the caption there then you should see that it works fine. If the option to enable the caption isn't there then it's likely the embedded track is not one of our supported types."
      }
    ]
  },
  {
    "number": 5367,
    "title": "Exoplayer version update issue.",
    "created_at": "2019-01-11T07:31:02Z",
    "closed_at": "2019-01-11T09:04:52Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5367",
    "body": "Hi All,\r\ni am trying to update my exoplayer version from 2.7.3 to 2.9.3.\r\ni changed as below \r\n compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n        incremental false\r\n    }\r\n\r\ni am getting run time errors \r\nso many errors like this all over d activities ....\r\nError:(829, 28) The method compareTo(Object) of type new JsonRequest(){} must override or implement a supertype method\r\ni tried to implement Comparable and tried to override compareTo method again .. so of the activities are not allowing implemetation .. if i m anyhow try not usng that activities its crashing run time...",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5367/comments",
    "author": "pals-ric",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2019-01-11T09:04:52Z",
        "body": "It sounds like you are getting some compilation errors in your app but they look unrelated to ExoPlayer, and I don't understand the last part of your comment. Please ask on a general questions site like Stack Overflow."
      }
    ]
  },
  {
    "number": 5366,
    "title": "Player Crash in 2.9.1",
    "created_at": "2019-01-11T05:04:26Z",
    "closed_at": "2019-01-11T09:27:55Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5366",
    "body": "I have used version 2.9.0. Its working fine without having issue. After updated to 2.9.1 getting below crash with player.\r\n\r\nAndroid OS : 9.0.0\r\nExo player version : 2.9.1 \r\n\r\n`FATAL EXCEPTION: ExoPlayerHandlerThread\r\n    Process: xxx.xxx.dev, PID: 16508\r\n    java.lang.NoSuchFieldError: No field periodIndex of type I in class Lcom/google/android/exoplayer2/source/MediaSource$MediaPeriodId; or its superclasses (declaration of 'com.google.android.exoplayer2.source.MediaSource$MediaPeriodId' appears in /data/app/xxx.xxx.dev-yjAwVJPbRNtpPwWZ1UEPFQ==/split_lib_dependencies_apk.apk)\r\n        at tv.ustream.player.android.internal.mediaplayer.exo.ExoLoggingUtil.logMediaPeriodId(SourceFile:27)\r\n        at tv.ustream.player.android.internal.mediaplayer.exo.AndroidExoMediaPlayer.onMediaPeriodCreated(SourceFile:540)\r\n        at com.google.android.exoplayer2.source.MediaSourceEventListener$EventDispatcher.lambda$mediaPeriodCreated$0(MediaSourceEventListener.java:371)\r\n        at com.google.android.exoplayer2.source.-$$Lambda$MediaSourceEventListener$EventDispatcher$N-EOPAK5UK0--YMNjezq7UM3UNI.run(Unknown Source:6)\r\n        at android.os.Handler.handleCallback(Handler.java:898)\r\n        at android.os.Handler.dispatchMessage(Handler.java:107)\r\n        at android.os.Looper.loop(Looper.java:198)\r\n        at android.os.HandlerThread.run(HandlerThread.java:65)`",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5366/comments",
    "author": "HiteshDevganiya",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2019-01-11T09:27:55Z",
        "body": "See d51b98dd1f6290504b4be9d86d71e70ebe217513. Looks like you need to update `ExoLoggingUtil` to take into account that API change."
      }
    ]
  },
  {
    "number": 5363,
    "title": "Activity lifecycle onStop() delayed when Player goes into onPause() lifecycle",
    "created_at": "2019-01-10T18:55:42Z",
    "closed_at": "2019-01-10T18:58:34Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5363",
    "body": "Hello,\r\n\r\nI have a question regarding ExoPlayer's integration with the Activity lifecycle. When I press the back button on the Player (while it's playing), the PlayerActivity calls the `onPause()`, then `onStop()` and finally `onDestroy()` as expected.\r\nHowever, when I cause the PlayerActivity to go into the paused state (such as initiate a Voice search) and then allow it to go into the resumed state (by exiting the voice search), and then press the back button the Activity's `onStop()` and `onDestroy()` methods are not called - only `onPause()` is called.\r\nIs there a reason for this and if so, how can ensure that the PlayerActivity's `onStop()` and `onDestroy()` are called.\r\n\r\nThese are the logs I've obtained to help with this ticket:\r\n\r\n```\r\nNormal activity lifecycle for player:\r\n01-10 18:44:58.799 27817-27817/com.google.android.exoplayer2.demo D/PlayerActivity: onCreate()\r\n01-10 18:44:58.916 27817-27817/com.google.android.exoplayer2.demo D/PlayerActivity: onStart()\r\n01-10 18:44:58.917 27817-27817/com.google.android.exoplayer2.demo D/PlayerActivity: onResume()\r\nBack button pressed on PlayerActivity:\r\n01-10 18:45:14.768 27817-27817/com.google.android.exoplayer2.demo D/PlayerActivity: onPause()\r\n01-10 18:45:14.968 27817-27817/com.google.android.exoplayer2.demo D/PlayerActivity: onStop()\r\n01-10 18:45:14.968 27817-27817/com.google.android.exoplayer2.demo D/PlayerActivity: onDestroy()\r\nPlayerActivity destroyed.\r\n\r\nPlayer initiated second time:\r\n01-10 18:45:21.874 27817-27817/com.google.android.exoplayer2.demo D/PlayerActivity: onCreate()\r\n01-10 18:45:21.899 27817-27817/com.google.android.exoplayer2.demo D/PlayerActivity: onStart()\r\n01-10 18:45:21.899 27817-27817/com.google.android.exoplayer2.demo D/PlayerActivity: onResume()\r\nVoice control is initiated on TV remote - causes Activity to PAUSE state\r\n01-10 18:45:27.180 27817-27817/com.google.android.exoplayer2.demo D/PlayerActivity: onPause()\r\nVoice control finished causing Activity to RESUMED state\r\n01-10 18:45:29.414 27817-27817/com.google.android.exoplayer2.demo D/PlayerActivity: onResume()\r\nBack button pressed on PlayerActivity\r\n01-10 18:45:32.160 27817-27817/com.google.android.exoplayer2.demo D/PlayerActivity: onPause()\r\n// This is it - Activity’s onStop() and onDestroy() not called\r\n```",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5363/comments",
    "author": "rs146",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2019-01-10T18:58:34Z",
        "body": "I don't think this has anything to do with ExoPlayer. We don't have any control over when activity lifecycle methods are called. I think you'd be best off asking on StackOverflow, or on the Android issue tracker."
      },
      {
        "user": "rs146",
        "created_at": "2019-01-10T19:00:27Z",
        "body": "Sure - thanks. I thought so - but I thought it might be worth asking anyway."
      }
    ]
  },
  {
    "number": 5361,
    "title": "Start the video buffer only after the user has played in the video?",
    "created_at": "2019-01-10T13:22:15Z",
    "closed_at": "2019-01-15T00:37:25Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5361",
    "body": "Good Morning\r\nDo have any option to start the video buffer only after the user has played in the video?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5361/comments",
    "author": "DionataFerraz",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2019-01-10T14:27:15Z",
        "body": "The player always needs to buffer data to play the video. You can customize the size of the buffer in `DefaultLoadControl` if you like."
      },
      {
        "user": "DionataFerraz",
        "created_at": "2019-01-15T00:37:47Z",
        "body": "Thanks"
      }
    ]
  },
  {
    "number": 5357,
    "title": "How to extend the format of the individual media samples for exoplayer?",
    "created_at": "2019-01-10T08:01:42Z",
    "closed_at": "2019-01-14T08:18:28Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5357",
    "body": "My device supports the sample formats like rv40/cook,  and I built a new instance of extractor to demux the container into raw video data and audio data, but the exoplayer can not play it.\r\nIs there any solutions I can make exoplayer to play it? \r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5357/comments",
    "author": "ghost0906",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2019-01-10T09:22:44Z",
        "body": "It sounds like the device has a decoder that can handle these formats, accessible via `MediaCodec`. So at a high level you'll need to pass a factory for your custom `Extractor` when building your `ExtractorMediaSource`, then set the relevant decoder's supported MIME type when outputting a format from your extractor. You can register custom MIME types (see #4264). If this doesn't help please could you give a bit more information about what is not working? Thanks."
      }
    ]
  },
  {
    "number": 5356,
    "title": "Drop frame in exoplayer if player buffer size becomes greater than 200ms",
    "created_at": "2019-01-10T07:16:56Z",
    "closed_at": "2019-02-23T21:15:22Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5356",
    "body": "I am playing tcp stream on exoplayer to show the desktop screen on player.\r\nMy requirement is to drop frame or reduce player buffer if the buffer becomes greater than some given value say 300ms to reduce the latency in showing the desktop screen on player.\r\n\r\nI searched in the code ( MediaCodecRenderer )for input buffers but this class is storing the input buffer for decoder. I need the exact player buffer which i can reduce to drop one complete frame in exoplayer if buffers size becomes greater than some given value or some other way to drop the frame on the basis of player buffer size.\r\n\r\nPlease help  me with this.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5356/comments",
    "author": "Akansha-Yadav",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2019-01-15T13:51:23Z",
        "body": "You can reduce the amount of media that needs to be buffered for playback to start when building `DefaultLoadControl`. If the player falls too far behind the live edge can you just seek forwards?"
      },
      {
        "user": "Akansha-Yadav",
        "created_at": "2019-01-16T07:18:18Z",
        "body": "Thanks for the reply.\r\nI tried with the following configuration for DefaultLoadControl:\r\nminBufferMs= 1000\r\nmaxBufferMs= 1000\r\nbufferForPlaybackMs= 200\r\n\r\nBut still when i check for player.getBufferedPosition() - player.getCurrentPosition() after every one second, this value keep  on increasing and reaches to 1000,2000.....so on while running on default playback speed i.e. 1f\r\n\r\nwhen i make the playback speed following condition based:\r\n\r\nif (player.getBufferedPosition() - player.getCurrentPosition() > 100) {\r\n                player.setPlaybackParameters(new PlaybackParameters(1.25f, 1));\r\n            } else {\r\n                player.setPlaybackParameters(new PlaybackParameters(1f, 1));\r\n            }\r\n\r\nIt will increase, decrease and keeps repeating this cycle.\r\nMy understanding on this, whenever the buffer becomes greater than 100ms it will play the buffer at 1.25f ( fast speed than default ) and the buffer  decrease and playback speed will become 1f, this will again increase the buffer, and this cycle repeats.\r\n\r\nWhat i need is exoplayer will never keep the buffer more than given duration say 200ms.  If its buffer becomes greater than 200ms it will  drop the frame while  playing at default 1f speed.\r\n\r\nI also tried to seek the stream forward.  But no luck on this too. I was not able to seek the stream forward.\r\n\r\nStream Info: \r\nStream protocol= TCP\r\nFormat= mpegts\r\nExtension= ts"
      },
      {
        "user": "andrewlewis",
        "created_at": "2019-01-17T08:22:41Z",
        "body": "Does the buffer continue to increase while the player is in the ready state? If so it sounds like the source is producing data faster than realtime."
      },
      {
        "user": "andrewlewis",
        "created_at": "2019-02-11T18:17:56Z",
        "body": "@Akansha-Yadav Is there anything else to address here, or can the issue be closed?"
      }
    ]
  },
  {
    "number": 5352,
    "title": "Question: How to perform an analytics task on a poll?",
    "created_at": "2019-01-08T21:41:36Z",
    "closed_at": "2019-01-17T01:38:51Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5352",
    "body": "I am building an audio player service and I am looking to perform a given analytics task at a particular poll. Ex. report listening progress every 1s.\r\n\r\nI would like to leverage some sort of Exoplayer component for this such as `AnalyticsListener` in order to do this. However, it does not provide any way to get the current `EventTime` and since it is a listener only, it is not guaranteed to be called at any regular interval.\r\n\r\nI am familiar with how to report reading progress using a poll and I could dream up a similar situation for this use-case but I was hoping that I am missing something that exoplayer already provides.\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5352/comments",
    "author": "NathanSass",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2019-01-09T10:15:52Z",
        "body": "We don't provide a built-in way to do this, but you can easily create a Handler which calls a method in regular intervals to record the position:\r\n```\r\nhandler.post(() -> {\r\n  reportPosition(player.getCurrentPosition());\r\n  handler.postDelayed(this, 1000);\r\n});\r\n```\r\n\r\nBesides that, it would to interesting to know why you want to report the position every second? \r\nIf have two consecutive events, let's say at time=10 with position=200 and at time=20 with position=210, you already know that you played all the positions between 200 and 210 without any additional callbacks and events."
      },
      {
        "user": "NathanSass",
        "created_at": "2019-01-09T19:26:30Z",
        "body": "> We don't provide a built-in way to do this, but you can easily create a Handler which calls a method in regular intervals to record the position:\r\n\r\nUnfortunately there is no method on the `AnalyticsListener` where i could query the `EventTime`. Having one would solve my problem. In order to implement something similar to the code sample you provided, I would have to provide my `AnalyticsListener` with my player instance. This seems like a circular reference.\r\n\r\n> Besides that, it would to interesting to know why you want to report the position every second?\r\n\r\nWe want to report reading progress to the server every 15 seconds in order to keep the user's audiobook synced across multiple devices.\r\n\r\nWhat I want is `AnalyticsListener.getEventTime` but I see how this may compromise the integrity of the listener."
      },
      {
        "user": "tonihei",
        "created_at": "2019-01-10T09:21:49Z",
        "body": "> We want to report reading progress ... to keep the user's audiobook synced across multiple devices.\r\n\r\nWouldn't it be enough to sync for each reported position? You'll get a new event whenever something changes. So it should be enough to listen to `onPlayerStateChanged`, `onPositionDiscontinuity` and `onTimelineChnaged` to get a full picture of all position movements. \r\n\r\nIf you want to ensure that the last position is reported even if the user leaves the app, you may want add a player.stop call before player.release to ensure you get a final state change event.\r\n\r\n> This seems like a circular reference.\r\n\r\nThe proposed Handler is directly created after the player was created and is totally independent of the AnalyticsListener.\r\n\r\n> What I want is AnalyticsListener.getEventTime \r\n\r\nThat's unfortunately not possible because it's just a passive listener which gets events from the player."
      },
      {
        "user": "NathanSass",
        "created_at": "2019-01-17T01:38:51Z",
        "body": "> Wouldn't it be enough to sync for each reported position?\r\n\r\nYou would think so - but it depends on network conditions. So we want to be very careful and try to do it often in case the user looses connection (we support offline as well)\r\n\r\nI came up with a pretty good solution. But I just wanted to check with you all.\r\n"
      }
    ]
  },
  {
    "number": 5347,
    "title": "Fatal Exception: java.lang.NullPointerException: Attempt to invoke virtual method 'void com.google.android.exoplayer2.source.ads.AdsMediaSource$ComponentListener.release()' on a null object reference",
    "created_at": "2019-01-08T10:38:49Z",
    "closed_at": "2019-03-06T18:44:59Z",
    "labels": [
      "question",
      "need more info"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5347",
    "body": "Fatal Exception: java.lang.NullPointerException: Attempt to invoke virtual method 'void com.google.android.exoplayer2.source.ads.AdsMediaSource$ComponentListener.release()' on a null object reference\r\n\r\nWe are using exoplayer 2.7.1 version, observed the below crash at random scenarios. Please look into it.\r\nMediaSource Object creation :\r\n1)Mediasource mediaSource = buildMediaSource(uris, extensions);\r\n\r\n 2)private MediaSource buildMediaSource(Uri uri, String overrideExtension) {\r\n        int type = TextUtils.isEmpty(overrideExtension) ? Util.inferContentType(uri)\r\n                : Util.inferContentType(\".\" + overrideExtension);\r\n        switch (type) {\r\n            case C.TYPE_SS:\r\n                return new SsMediaSource(uri, buildDataSourceFactory(false),\r\n                        new DefaultSsChunkSource.Factory(mediaDataSourceFactory), mainHandler, eventLogger);\r\n            case C.TYPE_DASH:\r\n                return new DashMediaSource(uri, buildDataSourceFactory(false),\r\n                        new DefaultDashChunkSource.Factory(mediaDataSourceFactory), mainHandler, eventLogger);\r\n            case C.TYPE_HLS:\r\n                return new HlsMediaSource(uri, mediaDataSourceFactory, mainHandler, eventLogger);\r\n            case C.TYPE_OTHER:\r\n                return new ExtractorMediaSource(uri, mediaDataSourceFactory, new DefaultExtractorsFactory(),\r\n                        mainHandler, eventLogger);\r\n            default: {\r\n                throw new IllegalStateException(\"Unsupported type: \" + type);\r\n            }\r\n        }\r\n    }\r\n\r\n 3)mediaSourcewithAd = createAdsMediaSource(mediaSource, Uri.parse(adurl));\r\n 4)player.prepare(mediaSourcewithAd,false, false);\r\n\r\n\r\n\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5347/comments",
    "author": "Divya015",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2019-01-08T10:45:29Z",
        "body": "Are you releasing the `AdsMediaSource` yourself? I think that could cause this error, but it sounds strange that the issue would be seen only occasionally. See also the related discussion in #4974."
      },
      {
        "user": "Divya015",
        "created_at": "2019-01-11T06:06:37Z",
        "body": "I observed the crash in one scenario.\r\nScenario : We have player recommendations while playing any video, if i rigorously keep clicking on playable recommendation items observed the crash.\r\n\r\nFor each playable item click we release the player, create mediasource of new item and play.(releasing adsLoader before creating admediasource)\r\n\r\nIt is same as discussion #4974 due to prepareInternal -> resetInternal-> releaseMediaSource. \r\n\r\nHow can i address this issue? "
      },
      {
        "user": "andrewlewis",
        "created_at": "2019-02-12T14:26:23Z",
        "body": "@Divya015 When I looked at #4974 before I couldn't see a path that could allow this to happen. Could you make a minimal project that reproduces the issue using the latest version of ExoPlayer, and share a link to it here? Or if you can spot a sequence of events that causes this to happen please describe it. Thanks in advance."
      },
      {
        "user": "ojw28",
        "created_at": "2019-03-06T18:44:59Z",
        "body": "Closing due to lack of further information. We'll reopen the issue if further information is provided."
      }
    ]
  },
  {
    "number": 5343,
    "title": "after player become STATE_IDLE, player.prepare() causes endless buffering",
    "created_at": "2019-01-07T15:05:52Z",
    "closed_at": "2019-01-13T10:30:58Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5343",
    "body": "I'm using 2.9.1v now. \r\nAfter player become idle (onPlayerStateChanged of AnalyticsListener is called and playbackState equals STATE_IDLE), I call player.prepare(). \r\nBut this causes endles buffering.\r\n\r\nIs this bug or there's other proper way to re-prepare idle player?\r\n\r\n```\r\n   @Override\r\n    public void onPlayerStateChanged(AnalyticsListener.EventTime eventTime, boolean playWhenReady, int playbackState) {\r\n        Log.d(TAG, \"onPlayerStateChanged\");\r\n        switch (playbackState) {\r\n            case STATE_IDLE: {\r\n                Log.d(TAG, \"state = STATE_IDLE\");\r\n                player.prepare(videosource);\r\n                player.setPlayWhenReady(true);\r\n                player.getPlaybackState();\r\n                break;\r\n            }\r\n            case STATE_BUFFERING :{\r\n                Log.d(TAG, \"state = STATE_BUFFERING\");\r\n                break;\r\n            }\r\n        }\r\n    }\r\n```\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5343/comments",
    "author": "jy617lee",
    "comments": [
      {
        "user": "jy617lee",
        "created_at": "2019-01-08T14:28:12Z",
        "body": "additionally,\r\n1. I added player.release() before player.prepare()\r\n2. initialize new player in activity and start()\r\n\r\nbut neither of them works.. anyone can help?"
      },
      {
        "user": "tonihei",
        "created_at": "2019-01-08T14:55:34Z",
        "body": "This exact code works fine for me in our demo app. \r\n\r\nI assume you want to restart playback after it failed? If so, you may see \"constant buffering\" because your media can't be played and is constantly failing.\r\n\r\nThe way I tested this is:\r\n1. Enable airplane mode during playback\r\n2. Wait until the player fails, changes to IDLE and re-prepares\r\n3. Disable airplane mode again."
      },
      {
        "user": "jy617lee",
        "created_at": "2019-01-08T15:09:28Z",
        "body": "thank you @tonihei !!\r\n\r\nbut I don't want to restart playback after it failed. \r\nPlayer just normally plays the media at first, but after it goes to STATE_IDLE I cannot retrieve player. When I try to retrieve player after once player goes to STATE_IDLE, constant buffering comes even though media was played normally before it goes to STATE_IDLE. "
      },
      {
        "user": "tonihei",
        "created_at": "2019-01-08T15:12:12Z",
        "body": "The player only changes to STATE_IDLE if playback failed or you explicitly call `player.stop`. One of these two events must have happened."
      },
      {
        "user": "jy617lee",
        "created_at": "2019-01-13T04:44:52Z",
        "body": "thank you @tonihei \r\nIt was memory leak problem that makes player call STATE_IDLE!"
      }
    ]
  },
  {
    "number": 5339,
    "title": "Playing mp4 video from assets",
    "created_at": "2019-01-04T15:06:33Z",
    "closed_at": "2019-01-04T16:10:57Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5339",
    "body": "I'm trying to use a video that is inside the assets directory, but I always take an exception \r\n com.google.android.exoplayer2.upstream.HttpDataSource$HttpDataSourceException: Unable to connect to assets://vid.mp4\r\n```\r\nExtractorMediaSource.Factory(DefaultDataSourceFactory(context, BuildConfig.USER_AGENT_VALUE)).createMediaSource(Uri.parse(\"assets://vid.mp4\"))\r\n```",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5339/comments",
    "author": "DionataFerraz",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2019-01-04T15:08:19Z",
        "body": "Does `asset://...` work?"
      },
      {
        "user": "marcbaechinger",
        "created_at": "2019-01-04T15:18:24Z",
        "body": "Or you need to prefix your path with android_asset. So for your example it would be:\r\n\r\nfile:///android_asset/vid.mp4"
      },
      {
        "user": "DionataFerraz",
        "created_at": "2019-01-04T15:30:03Z",
        "body": "I've tried, but throws an exception that the file was not found\r\n    com.google.android.exoplayer2.upstream.AssetDataSource$AssetDataSourceException: java.io.FileNotFoundException: \r\n\r\npackage assets is inside the main, should it be somewhere else?\r\n\r\nI put the package assets in the singular and also did not work, it throws the same exception above\r\n\r\nI tried putting it in the package raw inside the res and it does not work either\r\n\r\ni try \r\n```\r\nExtractorMediaSource.Factory(DefaultDataSourceFactory(context, BuildConfig.USER_AGENT_VALUE))\r\n.createMediaSource(Uri.parse(\"android.resource://com.dionata.player.dev/raw/video.mp4\"))\r\n```\r\n"
      },
      {
        "user": "DionataFerraz",
        "created_at": "2019-01-04T15:33:06Z",
        "body": "if I try with the Android VideoView I can play the video using that path\r\n`android.resource://com.video.player.dev/raw/video`\r\n\r\nI'm using version 2.9.3"
      },
      {
        "user": "andrewlewis",
        "created_at": "2019-01-04T15:37:03Z",
        "body": "If it's stored as a resource rather than an asset then try `RawResourceDataSource.buildRawResourceUri(R.raw.video)`."
      },
      {
        "user": "DionataFerraz",
        "created_at": "2019-01-04T15:55:23Z",
        "body": "Thanks\r\nI did it here and it worked.\r\n```\r\nExtractorMediaSource.Factory(DefaultDataSourceFactory(context, BuildConfig.USER_AGENT_VALUE))\r\n                .createMediaSource(RawResourceDataSource.buildRawResourceUri(R.raw.videog))\r\n```\r\n\r\nThank you very much\r\n"
      }
    ]
  },
  {
    "number": 5337,
    "title": "Offline download for mulltiple users",
    "created_at": "2019-01-04T10:19:04Z",
    "closed_at": "2019-01-04T11:00:44Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5337",
    "body": "Hi, in my app i need to implement offline download for multiple users.I have used the code from your demo project.When i try to download the same video for multiple users its not happening.Can u help me out here.\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5337/comments",
    "author": "meenukrishnamurthy",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2019-01-04T11:00:44Z",
        "body": "ExoPlayer doesn't know anything about users, so I don't see how this falls inside the scope of this issue tracker. ExoPlayer provides caching and downloading components that you could choose to share or have separate instances of per user, but the whole concept of multiple users and how you would do that is entirely the responsibility of the application developer and application code."
      }
    ]
  },
  {
    "number": 5335,
    "title": "Buffering issues with HTTP but more reliable buffer with HTTPS",
    "created_at": "2019-01-04T02:49:14Z",
    "closed_at": "2019-01-25T10:10:41Z",
    "labels": [
      "question",
      "need more info"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5335",
    "body": "### Issue description\r\nI have a user who is having trouble with video streaming. I can't reproduce the issue on my side, but it seems with http:// links it'll buffer a bit and the video will play, but once the playback catches up the buffering progress, it won't buffer anymore. \r\n\r\nWe tried switching http:// to https:// and most videos will play fine and buffer correctly, but not foolproof. Occasionally you'll encounter a video that won't buffer correctly.\r\n\r\nIn his bug report there may be some interesting logs, but don't know for certain of what is causing it. Maybe you guys can help me?\r\n\r\n### Link to test content\r\nLinks in a separate email.\r\n\r\n### Version of ExoPlayer being used\r\n2.9.2\r\n\r\n### Device(s) and version(s) of Android being used\r\nNvidia Shield Android 8.0\r\n\r\n### A full bug report captured from the device\r\nBugReport in a separate email.\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5335/comments",
    "author": "marcochin",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2019-01-04T17:44:51Z",
        "body": "I can not reproduce this behaviour either. When playing the URLs you sent with the demo app it just runs fine. It actually never catches up with the buffered data.  I tried on a very slow network as well and there the player behaves as expected. After a long buffering phase it plays a bit, then falls into buffering state again. But the app is responsive all the time.\r\n\r\nWhat is the reported behaviour exactly? You wrote, \"but once the playback catches up the buffering progress, it won't buffer anymore.\" I understand it does not load data anymore after the initial buffering.\r\n\r\nThe bug report does not show any network specific problems, except for some CroNet things but I think that's not your app.\r\n\r\nDo you have a some more precise description of the faulty behaviour?\r\nDo you know whether your user is trying on a mobile network which might be slow or shaky?"
      }
    ]
  },
  {
    "number": 5318,
    "title": "How to get single Local video resource path with all downloaded chunks by Exo Downloader?",
    "created_at": "2018-12-28T06:38:38Z",
    "closed_at": "2018-12-29T12:15:51Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5318",
    "body": "I am trying to playback all cache downloaded contents which is dowloaded in .exo format in device memory.\r\n\r\nI need to get a local path of any previously downloaded video using exoplayer offline lib. I can not use the mediaSource instance used by the downloader because I need to play downloaded chunks in some other third party player which only accepts and understand local video resource file.\r\n\r\nAs I can see CacheDataSource read files from cache using the same Url as a key. CacheDataSource returns the data from cache if the file is caches/downloaded which can work easily on ExoPlayer. But problem is that I can not pass this mediaSource object to other player as they wont be able to understand that this needs to download from offline or online. So I would be required single local video path where all chunks are available.\r\n\r\nSo it is possible to achieve the same using Exo? or any further future plan.\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5318/comments",
    "author": "ashishbhandari",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2018-12-29T12:15:51Z",
        "body": "ExoPlayer's caching functionality does not support this use case (i.e. providing a single file path for a piece of downloaded content). We don't even make any strong guarantees about the format of cache files, or how many files a piece of content might be fragmented across.\r\n\r\nThe only officially supported way of reading cached data back is to do so through ExoPlayer's own components, such as `CacheDataSource`. Note that this does allow applications to do various things to expose the cached data to other processes. For example it would be possible to write a `ContentProvider` that allows another process to read the cached data. I'm not sure whether that would be sufficient for your use case.\r\n\r\nIf not, you'll most likely just have to write your own downloading functionality instead. Sorry!"
      }
    ]
  },
  {
    "number": 5310,
    "title": "ContainerMediaChunk created for same chunkIndex",
    "created_at": "2018-12-25T09:04:37Z",
    "closed_at": "2019-01-02T11:59:17Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5310",
    "body": "I am printing to Logcat the chunkIndex at the first line of ContainerMediaChunk constructor and i got this result:\r\n\r\n> 2018-12-25 10:58:03.702 27031-28049/com.google.android.exoplayer2.demo :chunkIndex= 0\r\n2018-12-25 10:58:03.704 27031-28049/com.google.android.exoplayer2.demo :chunkIndex= 0\r\n2018-12-25 10:58:04.574 27031-28049/com.google.android.exoplayer2.demo :chunkIndex= 1\r\n2018-12-25 10:58:05.245 27031-28049/com.google.android.exoplayer2.demo :chunkIndex= 2\r\n2018-12-25 10:58:05.247 27031-28049/com.google.android.exoplayer2.demo :chunkIndex= 1\r\n2018-12-25 10:58:06.289 27031-28049/com.google.android.exoplayer2.demo :chunkIndex= 3\r\n2018-12-25 10:58:07.527 27031-28049/com.google.android.exoplayer2.demo :chunkIndex= 4\r\n2018-12-25 10:58:07.529 27031-28049/com.google.android.exoplayer2.demo :chunkIndex= 2\r\n2018-12-25 10:58:08.323 27031-28049/com.google.android.exoplayer2.demo :chunkIndex= 5\r\n2018-12-25 10:58:09.354 27031-28049/com.google.android.exoplayer2.demo :chunkIndex= 6\r\n2018-12-25 10:58:09.357 27031-28049/com.google.android.exoplayer2.demo :chunkIndex= 3\r\n2018-12-25 10:58:10.553 27031-28049/com.google.android.exoplayer2.demo :chunkIndex= 7\r\n2018-12-25 10:58:11.379 27031-28049/com.google.android.exoplayer2.demo :chunkIndex= 8\r\n2018-12-25 10:58:11.381 27031-28049/com.google.android.exoplayer2.demo :chunkIndex= 4\r\n2018-12-25 10:58:12.666 27031-28049/com.google.android.exoplayer2.demo :chunkIndex= 9\r\n2018-12-25 10:58:13.767 27031-28049/com.google.android.exoplayer2.demo :chunkIndex= 10\r\n2018-12-25 10:58:13.771 27031-28049/com.google.android.exoplayer2.demo :chunkIndex= 5\r\n2018-12-25 10:58:14.486 27031-28049/com.google.android.exoplayer2.demo :chunkIndex= 11\r\n2018-12-25 10:58:15.288 27031-28049/com.google.android.exoplayer2.demo :chunkIndex= 12\r\n2018-12-25 10:58:15.291 27031-28049/com.google.android.exoplayer2.demo :chunkIndex= 6\r\n\r\n\r\nWhy chunkIndex decrease sometimes?\r\n\r\nThank you!",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5310/comments",
    "author": "ghost",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2018-12-25T10:08:40Z",
        "body": "You are probably seeing the chunks for audio and video being loaded in parallel. Note how each index appears exactly twice and they are never actually decreasing."
      },
      {
        "user": "ojw28",
        "created_at": "2019-01-02T11:59:17Z",
        "body": "Closing as answered."
      }
    ]
  },
  {
    "number": 5308,
    "title": "AudioTrack-JNI: audioTrack continuously zero data counter",
    "created_at": "2018-12-24T17:36:09Z",
    "closed_at": "2018-12-29T12:38:25Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5308",
    "body": "After migration from `v.2.8.4` to `v.2.9.3` playback of some mp3-files causes appearance of the following two lines in logcat repeatedly:\r\n\r\n```\r\n2018-12-24 18:20:00.368 20073-20531/de.halfbit.a3.debug I/AudioTrack-JNI: audioTrack continuously zero data counter >= 10, send pause/stop state to pg, counter: 0\r\n2018-12-24 18:20:00.428 20073-20531/de.halfbit.a3.debug I/AudioTrack-JNI: audioTrack send start state to pg\r\n```\r\n\r\nThere are no hearable issues with playback and no exceptions, just those two lines spamming the logcat output. Is this anything known? Is this anything to be fixed? Should I maybe apply some special configuration to ExoPlayer to get rid of those messages?\r\n\r\n[ExoPlayerLib/2.9.3] [HWFRD, FRD-L09, HUAWEI, 24]\r\nAndroid 7.0\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5308/comments",
    "author": "sergejsha",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2018-12-29T12:38:25Z",
        "body": "Given there are no audible issues, I doubt there's anything actually wrong here. It's likely just unintentional log spam. I can't find \"continuously zero data counter' or \"send start state to pg\" anywhere in AOSP Android, so it's likely it's something Huawei have added. There's nothing we can really do about it, if so. If you think the logging is coming from AOSP Android or anything under our control, please point us to where you think it's coming from, and we'll look at removing it.\r\n\r\nClosing on the assumption this is Huawei log spam and there's nothing actionable on our side."
      }
    ]
  },
  {
    "number": 5307,
    "title": "custom Aes128DataSource ",
    "created_at": "2018-12-24T15:32:59Z",
    "closed_at": "2018-12-28T12:50:21Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5307",
    "body": "Hello! how i can modify Aes128DataSource? i use verimatrix decoder in my httpDataSource and i think it's so hard to understand (i have HashMap in memory with uri key and encryption data object) . I wanna write my custom vmxDataSource with upstream http. \r\nMaybe you could tell me how it could be implemented? Thanks! ",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5307/comments",
    "author": "morkovkin",
    "comments": [
      {
        "user": "AquilesCanta",
        "created_at": "2018-12-28T12:50:21Z",
        "body": "Have you had a look at AesCipherDataSource? I think it should provide some guidance on what you want to achieve. Otherwise, it's not clear to me what you need to achieve.\r\n\r\nUnless you can narrow down your requirements, we can not help you anymore. You should probably try your luck in Stack Overflow. "
      },
      {
        "user": "morkovkin",
        "created_at": "2019-01-10T17:33:25Z",
        "body": "yes it is a good implementation! but I'm interested in the data source in this place.\r\n```\r\n  private static DataSource buildDataSource(DataSource dataSource, byte[] fullSegmentEncryptionKey,\r\n      byte[] encryptionIv) {\r\n    if (fullSegmentEncryptionKey != null) {\r\n      return new Aes128DataSource(dataSource, fullSegmentEncryptionKey, encryptionIv);\r\n    }\r\n    return dataSource;\r\n  }\r\n```\r\n\r\nhow i can change Aes128DataSource to for example MyAesImplementation? By analogy with AesCipherDataSource. But i don't have cryper like in AesCipher DataSource because i use custom creeper inside vmx library. Is it possible make some like Aes128DataSource and put in HlsChunkSource ? thanks! "
      },
      {
        "user": "ojw28",
        "created_at": "2019-01-10T18:34:06Z",
        "body": "Does what you're doing conform to the HLS specification? If not, I don't think the question falls within the scope of this issue tracker."
      },
      {
        "user": "morkovkin",
        "created_at": "2019-01-11T08:16:08Z",
        "body": "Yes what o wanna do conform to the HLS specification. Problem in aes key. I don't have key. Vmx library send request to server and take him after this i can use decrypt method. This method look like this \r\n```\r\nconst char * data = \"data\";\r\nunsigned long dataSize = sizeof(data);\r\nconst char * keyURL = \"key url\";\r\nunsigned char keyIV[16];\r\nmemset(keyIV, 0, 16);\r\nm_instance->Decrypt(data, dataSize, ViewRightWebClient::AES_128_CBC, keyURL,\r\nkeyIV);\r\n```\r\n\r\nI try write data source like Aes128DataSource to use this method. But after parsing I get an instance of a class which I cannot modify. I wanna write datasource like this \r\n\r\n```\r\n.....\r\n @Override\r\n  public long open(DataSpec dataSpec) throws IOException {\r\n    long dataLength = upstream.open(dataSpec);\r\n    Vmx.prepare(...)\r\n    return dataLength;\r\n  }\r\n\r\n  @Override\r\n  public int read(byte[] data, int offset, int readLength) throws IOException {\r\n    if (readLength == 0) {\r\n      return 0;\r\n    }\r\n    int read = upstream.read(data, offset, readLength);\r\n    if (read == C.RESULT_END_OF_INPUT) {\r\n      return C.RESULT_END_OF_INPUT;\r\n    }\r\n    cipher.updateInPlace(data, offset, read);\r\n\r\n     int dec = vmxService.decryptHLS(data, read, \"AES-128-CBC\", keyUri.toString(), iv)\r\n    return dec;\r\n  }\r\n...\r\n```\r\nHow i can do this? "
      },
      {
        "user": "ojw28",
        "created_at": "2019-01-13T00:20:25Z",
        "body": "I don't really see how this does conform to the HLS specification. If you need to replace `Aes128DataSource` your best option currently is probably to use ExoPlayer as source code, so that you can edit it directly."
      }
    ]
  },
  {
    "number": 5305,
    "title": "ffmpeg extension, but compile failed.",
    "created_at": "2018-12-24T11:45:43Z",
    "closed_at": "2018-12-24T11:57:05Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5305",
    "body": "I want to use the extension of ffmpeg.\r\nI did everything according README.md except the last step, cd \"${FFMPEG_EXT_PATH}\"/jni && \\\r\n${NDK_PATH}/ndk-build APP_ABI=\"armeabi-v7a arm64-v8a x86\" -j4. \r\nThe error message as below:\r\nmkdir: cannot create directory `/libs': Permission denied\r\n[armeabi] Prebuilt       : libavcodec.so <= ffmpeg/android-libs/armeabi/\r\n\r\nWho can help me ?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5305/comments",
    "author": "ghost0906",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2018-12-24T11:57:05Z",
        "body": "The `libs` directory should be under the ExoPlayer checkout in `extensions/ffmpeg/src/main/libs`. Please check you are running the command from the right place and have followed all of the steps in the readme carefully."
      },
      {
        "user": "ghost0906",
        "created_at": "2018-12-25T00:48:58Z",
        "body": "I tried all of the steps in the readme many times, but it still shows the same error:\r\nmkdir: cannot create directory `/libs': Permission denied\r\nmake: *** [/libs/armeabi-v7a] Error 1\r\nmake: *** Waiting for unfinished jobs....\r\n[armeabi-v7a] Prebuilt       : libavutil.so <= jni/ffmpeg/android-libs/armeabi-v7a/\r\n\r\nThe Exoplayer version is 2.6.0, I download the zip from the website and unzip it on my linux server.\r\nIs anything wrong with my project？ "
      },
      {
        "user": "andrewlewis",
        "created_at": "2019-01-02T10:43:57Z",
        "body": "I wonder if the shell used on your server is incompatible with the instructions. Could you try running `bash` first?"
      }
    ]
  },
  {
    "number": 5300,
    "title": "What would be a reliable way to explicily control the playerview with streaming services?",
    "created_at": "2018-12-22T20:03:36Z",
    "closed_at": "2018-12-29T11:36:17Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5300",
    "body": "I am developing an app that uses multiple streaming services like Spotify & Deezer. I am also giving a fallback option for the users that don't have an account to be able to play at least local stored music on their devices in offline mode, thus I am using ExoPlayer for that.\r\n\r\nAt the moment, I designed a ToolBar where the user is able to control the pause/resume state over the playback of content through streaming services(hardcoded), where my app is constantly notified over the current state of the remote player & I am able to notify back, but I would like to extend that by also being able to control the state(seeking, next, shuffle...) by using the already available PlayerView which works perfectly fine with the local music.\r\n\r\nThe issue, is that I don't which option would be a reliable and a good way of solving this issue. I thought about 2 several options:\r\n\r\nOne, would be to extend the Player class but that seems a bit overkill. I also thought about using findViewById method of PlayerView and do everything by myself.  \r\n\r\nBut, I am not sure which seems a good option overall and I hopefully ask for some guidance if that's possible on what path is most suitable for the current situation?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5300/comments",
    "author": "DomainFlag",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2018-12-29T11:36:17Z",
        "body": "I don't think just controlling the view would be enough, since `PlayerView` isn't a passive UI component. Wouldn't you also need to have the view control the playback of the streaming service for this to make sense (e.g. when the user presses the play button).\r\n\r\nEither way, `PlayerView` operates on a `Player` instance. So the only reliable way to do what you're trying to do is to implement the `Player` interface. Digging around using `findViewById` doesn't sound like a good idea to me.\r\n\r\nSo if I were you I'd see if it's possible to build one or more `Player` implementations that wrap the streaming services you're using. I'd then have all of the UI components (including your own custom UI components such as the tool bar) operate on a `Player`. This means you can easily redirect them from operating on a local `ExoPlayer` instance and the streaming services. If that's not possible then I'd probably not use `PlayerView` at all, and implement an entirely custom UI (possibly forking `PlayerView` as a starting point)."
      }
    ]
  },
  {
    "number": 5287,
    "title": "Video buffers ahead of time in demo app, but very slow buffer in my app (Jellybean)?",
    "created_at": "2018-12-21T02:16:59Z",
    "closed_at": "2019-01-21T23:39:51Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5287",
    "body": "So when an hls video or any video is playing, the video should buffer ahead of time and when playback position catches up to the buffer position the video should buffer some more. This is observed in the demo app with the same hls stream, but in my app once the the playback position catches the buffer position it doesn't buffer anymore/has slow buffer, making the video enter the buffering state frequently.\r\n\r\nFor example: With a 1 minute video, the demo app will buffer up to the 45 second mark before waiting for the playback position to catch up. In my app the video only buffers to the 10 second mark and once the playback pos reaches close to the 10 sec mark it doesnt buffer anymore.\r\n\r\nThis is happening on Google Nexus Jellybean 4.1.1. As I said this only happens in my app, the demo app seems to buffer correctly. \r\nAlso my app seems to buffer correctly on the Google Pixel.\r\n\r\nDoes anyone have clues as to why this may be happening?\r\n\r\nThis is how im creating the player.\r\n```\r\nmExoPlayer = ExoPlayerFactory.newSimpleInstance(mContext);\r\nmExoPlayer.addListener(mPlaybackEventListener);\r\nmExoPlayer.addVideoListener(mVideoListener);\r\n\r\nMediaSource mediaSource = MediaUtils.getMediaSource(mContext, mVideoSource);\r\nmExoPlayer.prepare(mediaSource);\r\nmExoPlayer.setPlayWhenReady(true);\r\n\r\npublic MediaSource getMediaSource(Context context, VideoSource videoSource){\r\n        String type = videoSource.getType();\r\n        switch (type) {\r\n            case VideoSource.TYPE_DASH:\r\n                return new DashMediaSource.Factory(buildDataSourceFactory(context))\r\n                        .createMediaSource(Uri.parse(videoSource.getUrl()));\r\n\r\n            case VideoSource.TYPE_SS:\r\n                return new SsMediaSource.Factory(buildDataSourceFactory(context))\r\n                        .createMediaSource(Uri.parse(videoSource.getUrl()));\r\n\r\n            case VideoSource.TYPE_HLS:\r\n                return new HlsMediaSource.Factory(buildDataSourceFactory(context))\r\n                        .setAllowChunklessPreparation(true)\r\n                        .createMediaSource(Uri.parse(videoSource.getUrl()));\r\n\r\n            case VideoSource.TYPE_OTHER: // Used for MP4 files\r\n                return new ExtractorMediaSource.Factory(buildDataSourceFactory(context))\r\n                        .createMediaSource(Uri.parse(videoSource.getUrl()));\r\n\r\n            default:\r\n                throw new IllegalStateException(\"Unsupported type: \" + type);\r\n        }\r\n\r\nprivate DataSource.Factory buildDataSourceFactory(Context context){\r\n        // Produces DataSource instances through which media data is downloaded.\r\n        return new DefaultDataSourceFactory(context, buildHttpDataSourceFactory(context));\r\n}\r\n\r\nprivate HttpDataSource.Factory buildHttpDataSourceFactory(Context context){\r\n        // Need HttpDataSourceFactory so we can have crossProtocolRedirect -> http to https and vice versa.\r\n        return new DefaultHttpDataSourceFactory(\r\n                context.getString(R.string.app_name),\r\n                DefaultHttpDataSource.DEFAULT_CONNECT_TIMEOUT_MILLIS,\r\n                DefaultHttpDataSource.DEFAULT_READ_TIMEOUT_MILLIS,\r\n                true);\r\n}\r\n```\r\n\r\n**EDIT:** I think how im creating the player is fine. There something in my app that is causing exoplayer to have reduced performance.\r\n\r\n### Version of ExoPlayer being used\r\n2.9.2\r\n\r\n### Device(s) and version(s) of Android being used\r\nGoogle Nexus Jellybean 4.1.1\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5287/comments",
    "author": "marcochin",
    "comments": [
      {
        "user": "erdemguven",
        "created_at": "2019-01-21T16:50:06Z",
        "body": "Sorry, we can't help with this as it doesn't happen on the demo app."
      }
    ]
  },
  {
    "number": 5282,
    "title": "How to create AudioProcessor to boost volume",
    "created_at": "2018-12-19T20:32:09Z",
    "closed_at": "2019-01-02T14:07:15Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5282",
    "body": "I read issues #3657 where @andrewlewis  is saying that to increase volume above normal limits  one should implement custom AudioProcessor.\r\n\r\nI've made couple of test, but not sure how to implement it, key problem is that input PCM data (16 bit PCM) into my AudioProcessor are already normalized to 16 bit range (so values are already in range 32768 - 32767) , so there is no space to increase amplitude more.\r\n\r\nI tried to change output encoding to PCM 32 bits to have some space for increase, but then got unhanded configuration exception \r\n\r\n(And generally it looks like only PCM 16 bit is supported.\r\nCustom AudioProcessors seem to be used before standard processors - especially SilenceSkippingAudioProcessor, which requires PCM 16 bit as it's input -  so I guess if I'll change resolution to 24 or 32 bits it'll not be working.)\r\n\r\nCan you provide bit more detailed advice how to implement AudioProcessor to boost volume? Or is there any other trick I can use? Any ideas are welcomed.\r\nThanks",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5282/comments",
    "author": "izderadicka",
    "comments": [
      {
        "user": "izderadicka",
        "created_at": "2018-12-23T18:25:08Z",
        "body": "I've made another attempt - now going to platform LoudnessEnhancer AudioEffect, which will be applied after exoplayer AudioProcessors.    I have simple code below plugged to player\r\n```kotlin\r\nprivate class VolumeBooster(enabled: Boolean): AudioListener {\r\n    var enabled: Boolean = false\r\n        set(value) {\r\n            field = value\r\n            this.booster?.apply {\r\n                enabled = value\r\n            }\r\n        }\r\n    private var booster: LoudnessEnhancer? = null\r\n    init {\r\n        this.enabled = enabled\r\n    }\r\n    override fun onAudioSessionId(audioSessionId: Int) {\r\n        Log.d(LOG_TAG, \"Audio session id is ${audioSessionId}, supported gain ${LoudnessEnhancer.PARAM_TARGET_GAIN_MB}\")\r\n        booster?.release()\r\n        booster = LoudnessEnhancer(audioSessionId)\r\n        booster?.apply {\r\n            this@VolumeBooster.enabled\r\n            setTargetGain(3000)\r\n        }\r\n\r\n    }\r\n\r\n}\r\n```\r\n\r\nand it's plugged to player like this:\r\n```kotlin\r\nvolumeBooster = VolumeBooster(boostEnabled)\r\nplayer.audioComponent?.addAudioListener(volumeBooster)\r\n```\r\n\r\nBut this also does not work - the result is that track in initially boosted for second or two (but not always) and  then volume returns to normal level.  Not sure why this is happening.\r\n\r\nSo I'd welcome any ideas, experiences in this area, as it's hard to find any reliable information. Thanks."
      },
      {
        "user": "izderadicka",
        "created_at": "2019-01-02T10:23:57Z",
        "body": "Any ideas anybody?  I'm stuck on what I described above. Thanks"
      },
      {
        "user": "andrewlewis",
        "created_at": "2019-01-02T11:04:51Z",
        "body": "Regarding using audio processing for this: #3657 is about amplifying quiet sources rather than increasing volume beyond \"normal limits\" so perhaps not relevant to what you're trying to do. I don't think the bit depth of the PCM audio is going to make a difference to the audio volume. If your audio is already at full volume I wonder if you can do a non-linear transformation that still boosts volume for quite sections, but this may cause distortion!\r\n\r\nFor the loudness enhancer approach: in the code snippet above does the new `LoudnessEnhancer` actually get stored in the field? I vaguely recall a problem when trying to use audio effects previously where the effect was getting garbage collected unless I kept a reference to it."
      },
      {
        "user": "izderadicka",
        "created_at": "2019-01-02T13:03:23Z",
        "body": "@andrewlewis - Thanks that might be it! I did not notice that I used local var instead of field. Will check."
      },
      {
        "user": "izderadicka",
        "created_at": "2019-01-02T14:07:15Z",
        "body": "@andrewlewis - this was it - thanks a million. What a stupid error, I indeed wantedit  to be field of my class, just put there val by mistake and was it. Poor `LoudnessEnhancer` got shredded. I updated the code above to correct one, if someone in future has similar question."
      }
    ]
  },
  {
    "number": 5281,
    "title": "MultiWindowTimeBar for PlayerNotificationManager",
    "created_at": "2018-12-19T17:15:03Z",
    "closed_at": "2018-12-20T13:55:06Z",
    "labels": [
      "duplicate",
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5281",
    "body": "Hi!\r\n\r\nI want to show all the mediaSources of a ConcatenatingMediaSource in a single timeBar as a notification. Do you plan to integrate this support for MultiWindowTimeBar in case of notifications via the PlayerNotificationManager? If not, how can I achieve this? \r\n\r\nThanks,\r\nTamas",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5281/comments",
    "author": "imecstamas",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2018-12-20T13:55:06Z",
        "body": "That's a duplicate of #4868. "
      },
      {
        "user": "marcbaechinger",
        "created_at": "2018-12-20T14:56:15Z",
        "body": "The options of UI elements you can put in notifications is quite limited. There is no way to put arbitrary UI elements in a notification as far as I know. Instead actions are defined which then are rendered by the system in the notifications as buttons."
      }
    ]
  },
  {
    "number": 5279,
    "title": "How to set scrubberDrawable in kotlin ?",
    "created_at": "2018-12-19T16:24:57Z",
    "closed_at": "2019-01-21T15:59:12Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5279",
    "body": "I want to custom scrubberDrawable with my icon, \r\nHow to change scrubberDrawable realtime ?\r\nThank for support",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5279/comments",
    "author": "hanhmh1203",
    "comments": [
      {
        "user": "erdemguven",
        "created_at": "2018-12-21T11:30:03Z",
        "body": "You can set scrubber_drawable attribute of the DefaultTimeBar when used in a layout XML file.\r\nCurrently it isn't possible to change the drawable on the fly but perhaps using a custom drable you can change the bitmap."
      }
    ]
  },
  {
    "number": 5278,
    "title": "Decode .ts file",
    "created_at": "2018-12-19T04:40:27Z",
    "closed_at": "2019-01-21T23:46:23Z",
    "labels": [
      "question",
      "need more info"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5278",
    "body": "My product have features to encode ts file.\r\nSo I will get encoded string on ts file.\r\nThen have to get decode key form http header.\r\nBefore , I put ts RequestProperty on MyDefaultHttpDataSource @Override open\r\nNow I need to get each ts response header for decode . \r\nAnd put decoded ts to player.\r\nHow to implement it.\r\nThanks",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5278/comments",
    "author": "PascalTang",
    "comments": [
      {
        "user": "erdemguven",
        "created_at": "2018-12-21T11:03:49Z",
        "body": "Please give more details, you can share some code as well.\r\nWhat kind of encryption do you use?"
      },
      {
        "user": "PascalTang",
        "created_at": "2018-12-22T01:40:47Z",
        "body": "```\r\npublic class ImageApi {\r\n    private BinaryFileCallback mCallback;\r\n    private String mUrl;\r\n    private String mReferer;\r\n\r\n    public ImageApi(String url , String referer , BinaryFileCallback callback) {\r\n        this.mUrl = url;\r\n        this.mReferer = referer;\r\n        this.mCallback = callback;\r\n    }\r\n\r\n    public void load() {\r\n        Map<String, String> headers = new HashMap<>();\r\n        headers.put(Constant.IMAGE_HEADER_KEY, mReferer);\r\n\r\n        StringRequest stringRequest = new StringRequest(Request.Method.GET, mUrl,\r\n                new Response.Listener<String>() {\r\n                    @Override\r\n                    public void onResponse(String response) {\r\n                        try {\r\n                            String[] datas = response.split(\"\\n\");\r\n\r\n                            byte[] iv = Base64.decode(datas[0], Base64.DEFAULT);\r\n\r\n                            byte[] binaryKey = Base64.decode(CipherClient.imageDecodeKey(), Base64.DEFAULT);\r\n\r\n                            byte[] data = EncodeUtility.decryptAESGetByteArr(binaryKey, iv , datas[1]);\r\n\r\n                            mCallback.loadComplete(data);\r\n\r\n                        } catch (Exception e) {\r\n                            e.printStackTrace();\r\n                            mCallback.networkError();\r\n                        }\r\n                    }\r\n                }, new Response.ErrorListener() {\r\n            @Override\r\n            public void onErrorResponse(VolleyError error) {\r\n                mCallback.networkError();\r\n            }\r\n        }) {\r\n            @Override\r\n            public Map<String, String> getHeaders() throws AuthFailureError {\r\n                return headers;\r\n            }\r\n\r\n            @Override\r\n            public byte[] getBody() throws AuthFailureError {\r\n                return \"Your JSON body\".toString().getBytes();\r\n            }\r\n        };\r\n\r\n        stringRequest.setRetryPolicy(new DefaultRetryPolicy(Constant.TIMEOUT, 1, 1.0f));\r\n        VolleyUtility.getInstance().addToRequestQueue(stringRequest);\r\n    }\r\n}\r\n```"
      },
      {
        "user": "PascalTang",
        "created_at": "2018-12-22T01:55:16Z",
        "body": "Like this .\r\nI will get response like \r\n\"Hf9yOm17dkRzlm3+IsLmMQ== vhYoWoyUR1rIZW7jnlvq00o2LjLe7Wv9+wqNkAsqyQMxqH0ccC3xdCA9U2aVLbo5SMy7Ucj/KSvtHyKi2hak0eQI7YyjuISE8MDBg4SVG5lOzdvcemosWVrV5yaMdypeOpRASR9Bl4Oad4bZmKKYjyOembseT93eKlBnnnHrZVx64e3Hmtu2Fcb5kzsmEQman+Uht8+4VMPA5PtdJi27ol+/s+OlN3Z1ROtBaIptGd63+w8qacQFa9UByXEYvNmWZuOwro28tfhyIk7pXc3qx5uIEeqNg9PvJ/tz3Wq1WPO/g+/l32IHJAtzIorbFQs19LIFkIjqbQeQJzIfXeD0UxfsVM8SIWt065BQdD5HhNCL0UlerNJrrA9P+IV1bNJWOAT1p5xFgoRASYVTtor/LYgt1y9f44dYkLDME0WaPWVrEA+UuAbsqzUeYkYiq0fxA1sna2ItJcrF17xjVbVqt3Y+hR4t8gcz9qr6BbzTG7OvmpG1h0Wk0ScbeSgK5NezxjI4R4E4K40GwXhm3H19KFlsny5zR4HbfONvkME3BKSs8wTfXO5HEFqQ4u0LERxpBTd5U6APuOWxKWQKWmR17+jEaubuADBX7OAg+CxrTnUriSPDPhvqptZg5dRvohdUo3NlnaPUuGMYnxrHyPmHHhundAtpnmrFIQJHeSdBqPVxTT2LYNkj+wf9VcJfNb+ti5k1m63FCafemWU0v2llmFdjgwLO+dmgA4TkJrZ4TpqLyAP+GX12kxcg+MxxCXaMqRRDFWpoMDrx8hqAVZEkp6ri0ZQc8X3H/8Tsxa7ucJ7g6qqRW1OVOOO4jZYelkYVvihgeCUJne5aiW5AUlcBE8ZFO/u2Q5M0QEdYMFxDwHFTX+WEA1oneeQ1gx/xMU7VwS11xh6iX5iN2IooRb6JOmJnAOKy4ESYrpCyvXw25UwULbAga3IfcZypF6icSaillls39BbHQIW4yo4u7aFccggbmBhpk/xNM0FTi8JKPyk4Amj6eZqTk2qPbaGLIQlLoGvbvmNIV7b0Eo1/RoBBdCmdZm1WgvMM2Fc/QpJRZGmjs3xSnjtPlIQOGxNRNc8xwAbr5ute4MFB/K+Ys64eF50aXce5ODxroSqJyH9YmyYz/LYMY8WyEK4nTgyZTRPIPxIAm3BmGa82T32j037KYi1DeOwQYnknYMPfuSmltZYAspgpiEgnt3ICddHj5rMoLZBCsgfqtyvCaReQIxHj5cz86ZHfSTTtE1CUWjUapuxCqkWbhEHQZx+EHc3lQJfyCHf1+E2pUEXYSAmmEWzh9+x4xrXXLl+RH4iZCrRPEvTN0iXOp3giAjpUmtkC7Pnmp/dcwP1r0HR40TMcrSm70qx/Mdfi/utlhB/4rL9wtgRa1fmyTSXBh+L+IkpdUH+8HLEc8yMZdivCOms2oY02Y8o4CHGvwrB5iaxBt6V\"\r\non Ts.\r\nThen  I have to decode it . Let it to be byte[] to get real ts file.\r\nI try to create new DefaultHttpDataSource.class open() to get inputStream.\r\nbut it is get m3u8 file.\r\nI would like to get each ts encode response and exchange to decoded.\r\nhave any easy way to do?"
      },
      {
        "user": "ojw28",
        "created_at": "2019-01-04T20:35:37Z",
        "body": "It's very unclear what this question is about. The code above doesn't look like it's related to ExoPlayer. Please more clearly describe exactly what you're trying to do."
      },
      {
        "user": "erdemguven",
        "created_at": "2019-01-21T23:46:23Z",
        "body": "Closing due to inactivity."
      }
    ]
  },
  {
    "number": 5272,
    "title": "How to remove half download cache/files?",
    "created_at": "2018-12-18T14:34:42Z",
    "closed_at": "2018-12-19T07:33:56Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5272",
    "body": "Is there any way to remove download cache/files when on going downloads are stopped. \r\nI am using `getDownloadManager().stopDownloads()` to stop the downloads.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5272/comments",
    "author": "karandeep26",
    "comments": [
      {
        "user": "erdemguven",
        "created_at": "2018-12-18T17:32:11Z",
        "body": "You can do something like this:\r\n```\r\n    for (DownloadState downloadState : downloadManager.getAllDownloadStates()) {\r\n      if (downloadState.downloadPercentage == 100) {\r\n        DownloadAction action = downloadState.action;\r\n        downloadManager.handleAction(\r\n            DownloadAction.createRemoveAction(action.type, action.uri, action.customCacheKey));\r\n      }\r\n    }\r\n```"
      }
    ]
  },
  {
    "number": 5267,
    "title": "How can I switch the video that I just add to the concatenatingmediasource while the exoplay is runing?",
    "created_at": "2018-12-18T01:41:52Z",
    "closed_at": "2019-01-18T17:49:34Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5267",
    "body": "How can I switch the video that I just add to the concatenatingmediasource while the exoplay is runing?\r\nCan make it whihout reprepare the player?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5267/comments",
    "author": "qjh5606",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2018-12-18T09:20:36Z",
        "body": "If I understand your question correctly, you just need to seek to the new window after it has been added.\r\nYou can use the `Runnable` in `addMediaSource` to run something immediately after the source has been added:\r\n```\r\nconcatenatingMediaSource.addMediaSource(\r\n    newIndex, newMediaSource, () -> player.seekToDefaultPosition(newIndex));\r\n```"
      },
      {
        "user": "qjh5606",
        "created_at": "2018-12-18T09:48:33Z",
        "body": "> If I understand your question correctly, you just need to seek to the new window after it has been added.\r\n> You can use the `Runnable` in `addMediaSource` to run something immediately after the source has been added:\r\n> \r\n> ```\r\n> concatenatingMediaSource.addMediaSource(\r\n>     newIndex, newMediaSource, () -> player.seekToDefaultPosition(newIndex));\r\n> ```\r\n\r\nThank you very much. It seems solve my problem."
      },
      {
        "user": "qjh5606",
        "created_at": "2018-12-20T01:05:44Z",
        "body": "@tonihei \r\nwhen I call the\r\n`concatenatingMediaSource.addMediaSource(\r\n    newIndex, newMediaSource, () -> player.seekToDefaultPosition(newIndex));`\r\non the `onPositionDiscontinuity` \r\n\r\nThe screen will be black for a short time then it start to play the MediaSource that I just added.\r\nHow can I fix the  black problem?\r\n\r\nHere's what I do on  onPositionDiscontinuity:\r\n\r\n` \r\nplayer.addListener(new Player.EventListener() {\r\n      @Override\r\n      public void onPositionDiscontinuity(int reason) {\r\n        int latestWindowIndex = player.getCurrentWindowIndex();\r\n        if (latestWindowIndex != lastWindowIndex) {\r\n          // item selected in playlist has changed, handle here\r\n          lastWindowIndex = latestWindowIndex;\r\n\r\n          String addString=null;\r\n          addString = new String(\"/storage/emulated/0/Download/3D_Rio_shark.MP4\");\r\n          MediaSource addMediaSource = buildMediaSource(Uri.parse(addString));\r\n\r\n          int Size = mediaSource.getSize();\r\n          mediaSource.addMediaSource(lastWindowIndex, addMediaSource, new Runnable() {\r\n            @Override\r\n            public void run() {\r\n              player.seekToDefaultPosition(lastWindowIndex);\r\n            }\r\n          });\r\n        }\r\n      }\r\n    });\r\n`\r\n\r\n\r\n\r\n"
      },
      {
        "user": "tonihei",
        "created_at": "2018-12-21T13:19:08Z",
        "body": "The black screen is visible because you seek to another source and the content needs to buffer first before we can continue playback. What would you expect to be visible during that time?"
      },
      {
        "user": "qjh5606",
        "created_at": "2018-12-21T13:26:56Z",
        "body": "@tonihei \r\nIt would be very nice if the screen render the previous MediaSource's last frame which make it seamless/gapless visually."
      },
      {
        "user": "tonihei",
        "created_at": "2018-12-21T14:03:32Z",
        "body": "> previous MediaSource's last frame\r\n\r\nIf you seek after receiving a `onPositionDiscontinuity` event, you are already in a new media source and the frame that could potentially be displayed is the first frame in the media source which is not going to be played, but that doesn't seem to make much sense.\r\n\r\nIf your intention is to play this new item after the previous one (which played before receiving the `onPositionDiscontinuity` event), then you should probably insert the new source after this item and just let playback proceed automatically? "
      },
      {
        "user": "tonihei",
        "created_at": "2018-12-21T14:24:44Z",
        "body": "Can you try setting the `keep_content_on_player_reset` property of the `PlayerView` to true (or call `PlayerView.setKeepContentOnPlayerReset(true)`). That may help to keep the previous frame visible. "
      },
      {
        "user": "tonihei",
        "created_at": "2018-12-21T14:31:41Z",
        "body": "Reopened to track improving documentation for this method. "
      },
      {
        "user": "tonihei",
        "created_at": "2019-01-18T17:49:34Z",
        "body": "Closing as docs have been improved."
      }
    ]
  },
  {
    "number": 5264,
    "title": "How to Determine if exoplayer is playing from cache or Network ",
    "created_at": "2018-12-17T10:16:05Z",
    "closed_at": "2019-01-02T13:00:01Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5264",
    "body": "\r\n### Question\r\nI use Simple Cache in my app to stream app.  I want to be able to know when exoplayer plays a song from cache or direct from the Network. I am trying to send events and would want to be able to track this. \r\nIs there already a listener that can tell me if  exoplayer is playing from Cache or Internet.\r\nThanks.\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5264/comments",
    "author": "mathemandy",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2018-12-17T10:47:32Z",
        "body": "You could add a `TransferListener` to the `CacheDataSource` and listen to the events in there. They contain a reference to the actual underlying data source which reads the data and a flag telling you whether the transfer is using a network connection."
      },
      {
        "user": "tonihei",
        "created_at": "2019-01-02T13:00:01Z",
        "body": "Closing as answered."
      }
    ]
  },
  {
    "number": 5262,
    "title": "How to combine Play and Pause buttons?",
    "created_at": "2018-12-15T11:04:21Z",
    "closed_at": "2019-02-05T16:56:13Z",
    "labels": [
      "question",
      "need more info"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5262",
    "body": "Is there any way to combine Play and Pause buttons to 1 button? Now after click on play/pause there is no ripple effect showing because button, which was clicked, is hiding at the moment of click. I'd like to have ripple effect and vectorAnimation like in YouTube. So, is there any good way to do it?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5262/comments",
    "author": "egprojects",
    "comments": [
      {
        "user": "erdemguven",
        "created_at": "2018-12-18T13:29:23Z",
        "body": "This issue looks like a general question about Android development. We’ll leave this issue open for ~2 weeks in case anyone wishes to answer it here, however we recommend asking such questions on Stack Overflow."
      },
      {
        "user": "ojw28",
        "created_at": "2018-12-18T17:07:38Z",
        "body": "I think this is specifically about `PlayerControlView`. In theory we could add logic in that class for an `exo_play_pause` button, which a custom layout could use instead of the separate `exo_play` and `exo_pause` buttons.\r\n\r\nIt's unclear to me whether that's sufficient though, because I don't know enough about how this type of animation works. If there were a single `exo_play_pause` button, how would you attach (and trigger) the animation?"
      },
      {
        "user": "erdemguven",
        "created_at": "2019-01-21T15:57:49Z",
        "body": "@egataullin2000 please respond to @ojw28's question: If there were a single exo_play_pause button, how would you attach (and trigger) the animation?"
      },
      {
        "user": "erdemguven",
        "created_at": "2019-02-05T16:56:13Z",
        "body": "Closing due to inactivity.\r\n"
      }
    ]
  },
  {
    "number": 5249,
    "title": "[question] Load and render samples as fast as possible",
    "created_at": "2018-12-12T17:51:35Z",
    "closed_at": "2019-01-13T00:36:55Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5249",
    "body": "I am exploring the possibility of leveraging ExoPlayer to do video transcoding for local video files. It would be cool to demux and decode using ExoPlayer internals then go on with components that I already have (to mux again and save to file).\r\n\r\nIt seems that\r\n- for audio we would need a custom `Renderer`? or some other component\r\n- for video we should just pass the appropriate `Surface`. This is not an issue.\r\n\r\nHowever, it's not clear to me how we should configure the player (or any other lower level component) to load and render audio/video samples as fast as possible, without dropping any. When my encoder consumes a video sample, for example, I would need to call something like `exoPlayer.loadNextFrame()`. How to do this?\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5249/comments",
    "author": "natario1",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2018-12-13T00:17:07Z",
        "body": "Do you actually want to decode and re-encode the media samples themselves? Or do you just want to change them from being in one container format to another?\r\n\r\nAlso, what type of media is the source content? Are they regular media files, or will you ever have to deal with adaptive (DASH/SS/HLS) input?"
      },
      {
        "user": "natario1",
        "created_at": "2018-12-13T09:20:14Z",
        "body": "Yes, I need to decode them too (will reencode and mux using MediaCodec and MediaMuxer). And source content will be regular media files, read from local disk. Is this possible?"
      },
      {
        "user": "tonihei",
        "created_at": "2018-12-13T09:37:43Z",
        "body": "Just for the part about \"load and render audio/video samples as fast as possible\":\r\nYou should be able to inject a `Clock` into `SimpleExoPlayer`. I think you need to subclass `SimpleExoPlayer` and call the protected constructor taking a `Clock` as argument to do that. If you use an `AutoAdvancingFakeClock` (which is in the testutils) you can run the internal player loops as fast as possible.\r\n\r\nNote that you most likely need a custom Renderer for audio and video (or a fork of our defaults) to get this to work correctly because the second argument of `Renderer.render(positionUs, realTimeUs)` is still the actual real-time and will probably cause our default renderers to drop most of the frames. [Untested]"
      },
      {
        "user": "ojw28",
        "created_at": "2018-12-13T11:40:17Z",
        "body": "`ExoPlayer` itself doesn't seem that well matched to what you're trying to do. In trying to use it you'll be pulling in a lot of logic related to playback (e.g. playing at a particular speed, as mentioned above) that you'll then be looking for ways to disable or fudge to do what you need.\r\n\r\nI'd be tempted to try and use `ExtractorMediaSource` directly from your own code (but nothing higher level than that)."
      }
    ]
  },
  {
    "number": 5244,
    "title": "Replacing requestProperty value while playing video",
    "created_at": "2018-12-11T16:31:30Z",
    "closed_at": "2018-12-18T20:14:38Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5244",
    "body": "I'm using ExoPlayer with custom HttpDataSource.\r\n\r\n```\r\npublic class CDAHttpDataSourceFactory extends HttpDataSource.BaseFactory {\r\n\r\n    private App _appCDA;\r\n    private final String _userAgent;\r\n    private final TransferListener<? super DataSource> _listener;\r\n    private final int _connectTimeoutMillis;\r\n    private final int _readTimeoutMillis;\r\n    private final boolean _allowCrossProtocolRedirects;\r\n\r\n    public CDAHttpDataSourceFactory(String userAgent,TransferListener<? super DataSource> listener) {\r\n        _appCDA = App.getInstance();\r\n\r\n        _userAgent = userAgent;\r\n        _listener = listener;\r\n        _connectTimeoutMillis = DefaultHttpDataSource.DEFAULT_CONNECT_TIMEOUT_MILLIS;\r\n        _readTimeoutMillis = DefaultHttpDataSource.DEFAULT_READ_TIMEOUT_MILLIS;\r\n        _allowCrossProtocolRedirects = false;\r\n    }\r\n\r\n\r\n    @Override\r\n    protected HttpDataSource createDataSourceInternal(HttpDataSource.RequestProperties defaultRequestProperties) {\r\n        defaultRequestProperties.set(\"userName\",_appCDA.AppContext.LoggedUser.userName);\r\n        defaultRequestProperties.set(\"token\", _appCDA.AppContext.LoggedUser.accessToken);\r\n        defaultRequestProperties.set(\"uuid\",_appCDA.AppContext.DeviceID);\r\n\r\n        return new DefaultHttpDataSource(_userAgent, null, _listener, _connectTimeoutMillis,\r\n                _readTimeoutMillis, _allowCrossProtocolRedirects, defaultRequestProperties);\r\n    }\r\n}\r\n```\r\n\r\n1. First question\r\n\r\nThe method createDataSourceInternal(...) is called when I initialize the class but, while playing my video, the property \"token\" may change and i need to replace its value with the new one.\r\n\r\nHow can I achieve this withouth pausing the video?\r\n\r\n2. Second question\r\n\r\nCan i print into logcat my request parameters?\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5244/comments",
    "author": "LolloVince",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2018-12-12T10:24:31Z",
        "body": "You can call `getDefaultRequestProperties` on the factory, and then just update those properties. Any changes you make should be picked up by all `DefaultHttpDataSource` instances that have been built by the factory."
      }
    ]
  },
  {
    "number": 5224,
    "title": "[Question] how to fetch uri for mediasource dynamically just before playing it",
    "created_at": "2018-12-09T15:40:04Z",
    "closed_at": "2018-12-10T09:59:48Z",
    "labels": [
      "duplicate",
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5224",
    "body": "Hi, \r\n\r\nI am trying to play a playlist using ConcatenatingMediaSource (everything is HLS audio stream). Problem is the way our legacy backend server system is constructed is that when a user wants to play a playlist, for each song it sends url which the app needs to hit to get the actual url that is valid only for the next 10 seconds. So if I have 5 songs, each 1 min long, then while calling player.prepare I can not pass actual urls for all the songs as songs 2 to 5 will become invalid buy the time exoplayer gets to playing those  songs.\r\n\r\nI have tried to look for a possible approach but no luck yet. Any help/suggestions would be highly appreciated. \r\n\r\nThanks! ",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5224/comments",
    "author": "mayankgrover",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2018-12-10T09:59:37Z",
        "body": "That sounds almost exactly like the question asked here: #3661.\r\n\r\nYou should probably provide the non-expiring urls to the playlist and use your own `DataSource` wrapper which resolves the url each time the player wants to load something. "
      },
      {
        "user": "mayankgrover",
        "created_at": "2018-12-10T10:28:51Z",
        "body": "Thanks @tonihei. you are correct, the use case sounds very similar. will give that solution a shot. Much appreciated. "
      }
    ]
  },
  {
    "number": 5221,
    "title": "[Question] How to crop video that goes beyond some aspect ratio bounds? ",
    "created_at": "2018-12-08T16:32:43Z",
    "closed_at": "2019-03-06T09:27:57Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5221",
    "body": "I have the requirement that videos should be cropped to not exceed some minimum aspect ratio (say 9:16) and some maximum aspect ratio (say 16:9).\r\n\r\nI am not familiar with the source and am wondering what is the efficient solution to this.\r\nAs I see it the first thing is to set `videoComponent.videoScalingMode = C.VIDEO_SCALING_MODE_SCALE_TO_FIT_WITH_CROPPING` which I have done.\r\n\r\nThe second thing would be hook into `AspectRatioFrameLayout` measuring, ideally, override the `setAspectRatio` method and apply my constraints. But the class is final. Tried to override the caller, which is the `ComponentListener` inside `PlayerView`, but there's no way to do that.\r\n\r\nIf this is the case, could `AspectRatioFrameLayout` be made non-final to support this simple use case?\r\n\r\nI guess there are other ways,\r\n\r\n- use a custom `SurfaceView` for example, but this requires dropping the `PlayerView`\r\n- add an external video ratio listener, get the ratio, then call `AspectRatioFrameLayout.setAspectRatio()` with the desired value. This is inelegant, it's not sure that this listener would be called after the player  `ComponentListener`, and in any case this means calling setAspectRatio() twice, which means two layouts.\r\n- work with `PlayerView.onMeasure` so it drives AspectRatioFrameLayout measuring? This shares most of the issues with previous idea, because we must wait for the ratio before eventually performing a new layout. This would also affect the player control view which is not what we want. \r\n\r\nAny help?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5221/comments",
    "author": "natario1",
    "comments": [
      {
        "user": "AndroidDeveloperLB",
        "created_at": "2018-12-09T11:16:10Z",
        "body": "Isn't this a good solution: `app:resize_mode=\"zoom\"` \r\n?"
      },
      {
        "user": "natario1",
        "created_at": "2018-12-09T11:35:00Z",
        "body": "@AndroidDeveloperLB if I had a fixed aspect ratio like 1:1, I could set the frame to that ratio and use `resize_mode=\"zoom\"`, I think?\r\n\r\nBut I have a minRatio and maxRatio, so the final aspect depends on the video. I want `AspectRatioFrameLayout` to take this coerced value directly instead of waiting for my call, because while waiting, it will draw the full video for a few frames and that is noticeable.\r\n\r\nI think that a non-final `AspectRatioFrameLayout` would not hurt the library. But there might be other ways to do what I want that I am missing."
      },
      {
        "user": "AndroidDeveloperLB",
        "created_at": "2018-12-09T11:42:45Z",
        "body": "I don't know. Thought maybe it could help you.\r\nMaybe given the aspect ratio that you got, and the limitations you want to apply, you could set the size of the SurfaceView to what it should be, and the \"zoom\" will suffice.\r\n\r\nIt's too bad there are only a few ways to set the scaling, and there is no way to overcome the need to use any kind of View (for example, to be used on Live Wallpaper app)."
      },
      {
        "user": "ojw28",
        "created_at": "2018-12-10T18:03:47Z",
        "body": "> Use a custom SurfaceView for example, but this requires dropping the PlayerView\r\n\r\nCurrently, I would suspect this is the best (only?) viable approach.\r\n\r\n> Could AspectRatioFrameLayout be made non-final to support this simple use case?\r\n\r\nWe could easily do this, but how would you use it with `PlayerView`? The only way I can think of would be to provide a custom `exo_player_view.xml` layout, which would be a copy of the one we provide but with the `AspectRatioFrameLayout` replaced with your extending class. That seems pretty awkward (and you'd probably want to keep your layout otherwise in sync with ours, which is easily forgotten and extra work). Do you see a simpler way? If there is a simpler way then let us know what it is, and we can go ahead and make `AspectRatioFrameLayout` non-final.\r\n\r\n> Tried to override the caller, which is the ComponentListener inside PlayerView, but there's no way to do that.\r\n\r\nIf there isn't a simpler way of using your extended `AspectRatioFrameLayout`, then making it possible to override the caller seems like a better approach. We could move the implementation of `PlayerView.ComponentListener.onVideoSizeChanged` into a protected method in `PlayerView`, and have `PlayerView.ComponentListener.onVideoSizeChanged` just call that protected method. You'd then be able to extend `PlayerView`, which is already non-final, and override the protected method. I don't think doing that in itself is quite sufficient, since your overriding implementation would need access to some variables (e.g. at least `contentFrame`). If you think this approach is the way to go, please figure out exactly what would be needed, and verify that it does indeed solve your use case end to end. With this information, I think we could make a supporting change (or, possibly easier, you could send us what needs to be done in the form of a pull request that edits `PlayerView`)."
      },
      {
        "user": "natario1",
        "created_at": "2018-12-10T18:28:19Z",
        "body": "Hey @ojw28 , right, I am already using a custom xml layout so that seemed straight forward to me.\r\n\r\nI would open the `AspectRatioFrameLayout` because\r\n- What I need is get into the measuring process, and `AspectRatioFrameLayout` seems to be the responsible component, not the player\r\n- Making it non-final would let us override onMeasure or any other method, giving us full control over the surface container\r\n- There's no reason for it to be final? Other than block people from messing with measuring, which is what I was trying to do. In this sense the fact that it is not straightforward (requires custom xml) might be a pro?\r\n\r\nIf you still prefer a `PlayerView` protected method, I will do some tests and get back to you!"
      },
      {
        "user": "ojw28",
        "created_at": "2018-12-10T19:20:20Z",
        "body": "I'm fine with either approach. I just want to make sure what we do actually solves your problem :). If making `AspectRatioFrameLayout` non-final is definitely enough for you, then we can just go ahead and do that."
      },
      {
        "user": "natario1",
        "created_at": "2018-12-11T19:15:32Z",
        "body": "The protected method might work as well @ojw28 , I have applied my constraints and measuring is working fine, however the image is distorted.\r\n\r\nI have checked that `VIDEO_SCALING_MODE_SCALE_TO_FIT_WITH_CROPPING` is set and the media codec video renderer is being used. Do you have any idea?\r\n\r\nFor example, if I force a 16:9 video to be 1:1, I see a 1:1 frame but most of the times it has the full image compressed horizontally. As if `VIDEO_SCALING_MODE_SCALE_TO_FIT_WITH_CROPPING` was not set.\r\n\r\n**Edit**: found the cause in MediaCodec docs.\r\n```\r\n* As of {@link android.os.Build.VERSION_CODES#N} release, this mode may not work if\r\n* the video is {@linkplain MediaFormat#KEY_ROTATION rotated} by 90 or 270 degrees.\r\n```\r\n\r\nNot sure if you want to add this to your docs."
      }
    ]
  },
  {
    "number": 5218,
    "title": "change exoplayer speed for certain duration of video in Android",
    "created_at": "2018-12-08T07:03:44Z",
    "closed_at": "2018-12-09T18:52:49Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5218",
    "body": " o change exoplayer speed we use player.setPlaybackParameters\r\n\r\nthis changes speed , but how can we set speed only for certain duration\r\n\r\nthe code that I have used is\r\n\r\n```\r\nplayerTimer.setCallback(new PlayerTimer.Callback() {\r\n            @Override\r\n            public void onTick(long timeMillis) {\r\n                if (player != null) {\r\n                    long position = player.getCurrentPosition();\r\n                    long duration = player.getDuration();\r\n                    speeder(position);\r\n\r\n                }\r\n            }\r\n        });\r\n```\r\nand\r\n\r\n```\r\npublic void speeder(long pos) {\r\n\r\n\r\n        if (player.getCurrentWindowIndex() == 1) {\r\n            if (pos >= 100000) &&\r\n            pos <= 200000){\r\n                PlaybackParameters playbackParameters = new PlaybackParameters(\r\n                        2.0f, 1.0f);\r\n                player.setPlaybackParameters(playbackParameters);\r\n            }\r\n                    else if (pos <= 100000) &&\r\n            pos >= 200000)\r\n            {\r\n                PlaybackParameters playbackParameters1 = new PlaybackParameters(\r\n                        1.0f, 1.0f);\r\n                player.setPlaybackParameters(playbackParameters1);\r\n            }\r\n        }\r\n    }\r\n```\r\nbut the speed doesnot change when its between 100000 and 200000",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5218/comments",
    "author": "pawaom",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2018-12-09T18:52:49Z",
        "body": "Calling `setPlaybackParameters` is the right thing to be doing. If you call it when you want playback to change speed, then that should work. So I'm guessing your code just doesn't do that correctly. I don't know what `PlayerTimer` is. I don't think it's part of the ExoPlayer codebase. One thing I would note is that I suspect it repeatedly calls `setPlaybackParameters` on every tick (whatever a tick is). You should probably just call it once each time you want a change in speed.\r\n\r\nClosing, since it seems the issue is with your application code, rather than there being any issue with the ExoPlayer library."
      },
      {
        "user": "tonihei",
        "created_at": "2018-12-10T09:40:09Z",
        "body": "You can also use something like this to let ExoPlayer handle the timing for you:\r\n```\r\nHandler handler = new Handler();\r\nplayer.createMessage(\r\n    (a,b,c) -> player.setPlaybackParameters(2.0f, 1.0f))\r\n  .setPosition(1, 100000).setHandler(handler).send();\r\nplayer.createMessage(\r\n    (a,b,c) -> player.setPlaybackParameters(1.0f, 1.0f))\r\n  .setPosition(1, 200000).setHandler(handler).send();\r\n```"
      }
    ]
  },
  {
    "number": 5192,
    "title": "[Question] Output multiple subtitle tracks simultaneously",
    "created_at": "2018-12-04T09:20:08Z",
    "closed_at": "2018-12-21T14:05:46Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5192",
    "body": "We have a use case where we want to be able to output multiple subtitle tracks at the same time (stacking). Is this possible with exoplayer, and how would be go about doing this if so?\r\n\r\nWe have a working implementation of doing this in an HTML5 player, and we're currently evaluating if we should use that in a webview or if we should use exoplayer instead.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5192/comments",
    "author": "Rhuagh",
    "comments": [
      {
        "user": "erdemguven",
        "created_at": "2018-12-05T17:09:30Z",
        "body": "It's possible but you need to modify some of the library classes. \r\nYou need to create multiple TextRenderers and TextViews.\r\nThere are couple of ways to enable multiple TextRenderers at the same time:\r\n- Tweak MappingTrackSelector.\r\n- Define a new track type (TRACK_TYPE_TEXT_SECONDARY) and make sure the content has this type.\r\n\r\nAlternative content side recommendation:\r\n- Merge text tracks."
      },
      {
        "user": "Rhuagh",
        "created_at": "2018-12-06T09:30:45Z",
        "body": "Can you show any number of cues simultaneously if you merge the text tracks, or is there a limitation (except for screen space)?"
      },
      {
        "user": "erdemguven",
        "created_at": "2018-12-09T22:04:02Z",
        "body": "There is no limit defined for the maximum number of cues to be displayed simultaneously."
      },
      {
        "user": "ojw28",
        "created_at": "2018-12-10T23:17:21Z",
        "body": "As a bit of extra context:\r\n\r\nThe use case that we've normally seen this question come up is around forced vs optional subtitles. For example if there's a sci-fi film where an alien says something in their alien language, the corresponding subtitle should _always_ be shown (assuming it's intended that the viewer understand what's being said). Where-as when a human says something in a human language, the corresponding caption/subtitle is probably optional depending on the user selection.\r\n\r\nI've seen it argued both ways whether the forced subtitles should be included in the optional caption/subtitle tracks. If they are then the player only ever needs to enable a single track (the user selection if there is one, or the track containing only the forced subtitles otherwise). If they aren't then the player needs to enable either one or two tracks, depending on user selection. I think our suggestion/preference is that they should always be included. It seems much simpler. If there's some other use case for which this suggestion/preference doesn't work well, it would be interesting to know what it is."
      },
      {
        "user": "Rhuagh",
        "created_at": "2018-12-11T07:39:50Z",
        "body": "That's a part of it, but we're basically building a frame accurate QA tool, that is used to verify that audio and subtitles are in sync with the video. One of the requirements is the ability to verify multiple audio/subtitle tracks simultaneously to save time."
      },
      {
        "user": "MuVen",
        "created_at": "2019-01-18T17:09:39Z",
        "body": "@ojw28 How can i force subtitles selected from the internal storage to be shown instead of captions displayed while aliens speak their language.\r\n\r\ncan you help me where to tweak in the code please ..."
      },
      {
        "user": "ojw28",
        "created_at": "2019-01-18T17:42:52Z",
        "body": "@MuVen - Off topic and already tracked in #5393. Please keep using that issue for your question."
      }
    ]
  },
  {
    "number": 5183,
    "title": "[Question] get notified when AdaptiveSelection change track",
    "created_at": "2018-12-02T17:06:58Z",
    "closed_at": "2018-12-03T09:31:46Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5183",
    "body": "I have question about how to get notified that video track is changed when using adaptive selection\r\nthanks",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5183/comments",
    "author": "oahmedazab",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2018-12-03T09:31:46Z",
        "body": "Please see #4971."
      },
      {
        "user": "oahmedazab",
        "created_at": "2018-12-03T11:38:15Z",
        "body": "Thank you 👍 "
      }
    ]
  },
  {
    "number": 5180,
    "title": "Player not switch to ENDED state when finish play HLS VOD",
    "created_at": "2018-12-02T06:46:53Z",
    "closed_at": "2019-05-29T14:53:03Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5180",
    "body": "### Issue description\r\nThe exoplayer play some shorts HLS VOD (under 10 mins) from our wowza server stuck buffering at the end of stream. Normally, exoplayer will change state to ENDED when get #EXT-X-ENDLIST tag. But, it don't do that, it just switch to BUFFERRING mode and not fire ENDED event. \r\n\r\n### Reproduction steps\r\nTry play link I will send you to test. On demo app, I just write some code to listen event when player change state, and it return buffer state when play to last second of VOD.\r\n\r\n### Link to test content\r\nI will send you, please check email.\r\n\r\n### Version of ExoPlayer being used\r\nExoplayer 2.9.1 and 2.8.4.\r\n\r\n### Device(s) and version(s) of Android being used\r\nAndroid TV 8.0.\r\n\r\n### A full bug report captured from the device\r\nNot provide.\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5180/comments",
    "author": "anhlevfx",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2018-12-03T11:24:01Z",
        "body": "Looks like the content is the same as the stream @AquilesCanta tested in the (off-topic) comments in #5005. I tested the stream and saw the same thing: the player transitions to the ENDED state as expected.\r\n\r\nCan you reproduce the issue in the (unmodified) demo app?"
      },
      {
        "user": "anhlevfx",
        "created_at": "2018-12-10T07:13:27Z",
        "body": "Hello, I test it again with the demo app and It worked, but the ads tag I use to tested is google sample ads tag. In the case I figure out  this issue I use another ads tag and I sent an email with more information for you. Please check it and let me know If you have new information"
      },
      {
        "user": "tonihei",
        "created_at": "2019-05-07T14:33:25Z",
        "body": "@andrewlewis Did you check the test data provided via email?"
      },
      {
        "user": "andrewlewis",
        "created_at": "2019-05-29T14:53:03Z",
        "body": "@anhlevfx Sorry for the delay looking at this. I tried to reproduce using the content and ad tag provided via email. The ad tag loads but eventually IMA arrives at an empty ad for the preroll so there is nothing to play. To see this please set `ImaAdsLoader.DEBUG` to true and look at the logging from the IMA SDK.\r\n\r\nRegarding the behavior when reaching the end of the stream, I think the problem is that the ad tag defines an ad at 600 seconds but the media is only ~ 280 seconds long. I suggest removing this ad break, moving it within the duration of the content or marking it as a postroll."
      }
    ]
  },
  {
    "number": 5175,
    "title": "[Question] Custom implementation for raw H.264 Annex B support",
    "created_at": "2018-11-29T23:45:12Z",
    "closed_at": "2018-12-04T19:49:45Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5175",
    "body": "#### Scenario\r\nWe are opening a web socket to our backend which is providing a raw H.264 stream. The backend is already splitting the stream into NAL units, so the messages we receive through the socket are already properly split at the NAL headers (0x00000001). What we are trying to do is create custom components that will enable ExoPlayer to play our stream.\r\n\r\n#### What We've Tried\r\nWe did some research and found that #3503 is similar to our situation. Following the advice there, we have successfully created a `DataSource` which wraps a web socket and is receiving the NAL units. We also created an `Extractor` that is modeled after the `Ac3Extractor` but uses an `H264Reader`, as suggested by the previously mentioned issue. Our `Extractor` is receiving the bytes from the `DataSource` and passing them to `H264Reader.consume(ParsableByteArray)`.\r\n\r\n#### Our Problem\r\nAfter finding the first SPS, PPS, and IDR NAL units, the player plays a single frame, but that is all. The `DataSource` and `Extractor` keep running and receiving bytes, but it seems the `H264Reader` is failing to work. Issue #3503 states there are \"...a few more details to work out, like how to set timing information on output samples.\" We believe our issue relates to these \"details\" but are unsure what these details are. We have tried calling `H264Reader.packetStarted(Long, Boolean)` but that doesn't seem to do anything, so we may be dong it incorrectly. What are these \"details\" and how should we go about implementing them?\r\n\r\nI can provide code samples as well as samples of our byte stream if that would be helpful. Looking forward to hearing back!",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5175/comments",
    "author": "TroyStopera",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2018-11-30T09:00:48Z",
        "body": "`packetStarted` sets the presentation timestamp for the next NAL unit started from `consume`. I don't think you get timing information in the Annex B bytestream, so you probably need to get frame timestamps from some other source (e.g., by assuming a constant frame rate). If you don't do this all the samples will end up with timestamp 0. If your stream doesn't have access unit delimiters you will need to set the `detectAccessUnits` flag to true at construction time.\r\n\r\nI think a good step to debugging this is to set a breakpoint at the call to `sampleMetadata` and check that the sample timestamps and sizes look correct."
      },
      {
        "user": "TroyStopera",
        "created_at": "2018-11-30T17:59:36Z",
        "body": "Thanks for the quick reply!\r\n\r\nI have tried what you suggested. At the breakpoint, the timestamp appears to be accurate, and the size of the NAL unit is correct as well. Our stream doesn't have access unit delimiters so I set `detectAccessUnits` to true. \r\n\r\nHowever, the video is still not playing. The `currentPosition` of the `ExoPlayer` instance is counting up correctly, but still only one frame is playing, then nothing else."
      },
      {
        "user": "andrewlewis",
        "created_at": "2018-11-30T18:04:00Z",
        "body": "In `MediaCodecRenderer.feedInputBuffer` you can check that the buffers are being queued to the decoder as expected, and in `MediaCodecVideoRenderer.processOutputBuffer` you can see how the output is being handled."
      },
      {
        "user": "TroyStopera",
        "created_at": "2018-12-04T19:49:45Z",
        "body": "I followed your advice and put some debug print statements in those methods. It turns out that we were using `H264Reader.packetStarted(Long, Boolean)` incorrectly. We were passing a timestamp, which was increased with each successive packet, but it turns out we needed to start at 0 rather than the actual timestamp of the video. Once we did this the video began playing correctly. \r\n##### For future people running into similar issues, make sure to start your first packet at 0. "
      },
      {
        "user": "tishion",
        "created_at": "2018-12-10T05:32:17Z",
        "body": "@TroyStopera  I have a question for implementation of Extractor, you said you used H264Reader but I don't know how to construct the H264Reader instance. Where to get the SeiReader?"
      },
      {
        "user": "TroyStopera",
        "created_at": "2019-02-22T04:15:38Z",
        "body": "@tishion Sorry for only just seeing this. I started by using reflection to get an instance (not my favorite, but it worked). I ended up, however, copying the code from `H264Reader`'s source and adapting it to my needs. Our stream has no SEI data, so in my custom implementation I just did away with the `SeiReader`."
      },
      {
        "user": "tishion",
        "created_at": "2019-02-22T05:44:52Z",
        "body": "@TroyStopera  thanks for replying. I finally gave up the extractor implementation. and I just construct the FLV stream with the raw H264 data and fill this stream to Exoplayer."
      }
    ]
  },
  {
    "number": 5168,
    "title": "the usage of CachedContentIndex ",
    "created_at": "2018-11-29T01:27:53Z",
    "closed_at": "2018-11-29T09:03:04Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5168",
    "body": "What is the role of CachedContentIndex? Why do we still need to do a mapping of id and key in it? What bugs might there be if we don't do this mapping?\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5168/comments",
    "author": "NgWaiKong",
    "comments": [
      {
        "user": "erdemguven",
        "created_at": "2018-11-29T09:03:04Z",
        "body": "Normally you don't need to use CachedContentIndex directly. It is used by SimpleCache. Nothing happens if you don't use it directly :)"
      },
      {
        "user": "NgWaiKong",
        "created_at": "2018-11-29T11:24:59Z",
        "body": "Excuse me, is this CacheContentIndex for performance optimization? I see that I will store a copy of the file \"cached_content_index.exi\", which seems to be optimized for performance."
      },
      {
        "user": "ojw28",
        "created_at": "2018-12-06T07:00:18Z",
        "body": "`CachedContentIndex` serves multiple roles:\r\n* Storing metadata associated with each key, such as the content length (of the entire piece of content; so this is different to the size of the cached file(s) unless the content is fully cached) and the URI after redirection. This metadata is used in `CacheDataSource`.\r\n* The mapping of id to key provides the ability to encrypt the content keys, although this is not enabled by default."
      },
      {
        "user": "NgWaiKong",
        "created_at": "2018-12-07T12:27:42Z",
        "body": "> `CachedContentIndex` serves multiple roles:\r\n> \r\n> * Storing metadata associated with each key, such as the content length (of the entire piece of content; so this is different to the size of the cached file(s) unless the content is fully cached) and the URI after redirection. This metadata is used in `CacheDataSource`.\r\n> * The mapping of id to key provides the ability to encrypt the content keys, although this is not enabled by default.\r\n\r\nActually, when the CacheSpan update triggers the  CachedContentIndex 's store( ) , and the function is time-consuming, and because the data stream is synchronized, which increases the time-consuming of data transfer throughout the playback process. Cached Content Index Store takes 10 ms to 50 ms (on Nexus 6) at a time. Are there any plans for optimization? Such as limiting the update time of store( )"
      },
      {
        "user": "ojw28",
        "created_at": "2018-12-09T03:38:53Z",
        "body": "Yes, we plan to reduce the cases where `store()` is called, and also optimize it to be faster for the remaining cases."
      }
    ]
  },
  {
    "number": 5167,
    "title": "Calling setPlayWhenReady(false) while Player is in Player.STATE_ENDED will send another Player.STATE_ENDED to onPlayerStateChanged callback",
    "created_at": "2018-11-29T00:01:04Z",
    "closed_at": "2018-11-29T00:07:13Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5167",
    "body": "### Issue description\r\nCalling `SimpleExoPlayer.setPlayWhenReady(false)` while the Player is in `Player.STATE_ENDED` state will trigger the `onPlayerStateChanged` callback again with another `Player.STATE_ENDED` state. \r\nIs this intentional behavior?\r\n\r\n### Reproduction steps\r\n1) Let a video play to the end so it hits the Player.STATE_ENDED state. \r\n2) Try to pause the video by calling SimpleExoPlayer.setPlayWhenReady(false).\r\n3) Player.STATE_ENDED is sent again in the onPlayerStateChanged callback.\r\n\r\n### Version of ExoPlayer being used\r\n2.9.1\r\n\r\n### Device(s) and version(s) of Android being used\r\nNvidia Shield, 8.0\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5167/comments",
    "author": "marcochin",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2018-11-29T00:07:13Z",
        "body": "`onPlayerStateChanged` is documented as:\r\n\r\n> Called when the value returned from either Player.getPlayWhenReady() or Player.getPlaybackState() changes.\r\n\r\nSo yes it is correct, provided `playWhenReady` was previously set to true, because the value returned from `getPlayWhenReady` changes."
      }
    ]
  },
  {
    "number": 5163,
    "title": "How to use use decode_mode, headers and secure_uri tags in Exoplayer?",
    "created_at": "2018-11-28T09:10:05Z",
    "closed_at": "2018-11-28T11:26:33Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5163",
    "body": "Hi,\r\n\r\nUsing latest version 2.9.1\r\n\r\nNow I want to play a url which is playing in MxPlayer if we pass these tags else not playing. I want to use that tags in ExoPlayer too, If possible please let me know.\r\n\r\nlike this:-\r\n```java\r\nintent.putExtra(\"decode_mode\", (byte) 2);\r\nintent.putExtra(\"headers\", new String[]{\"User-Agent\", this.userAgent, \"Extra-Header\", \"911\"});\r\nintent.putExtra(\"secure_uri\", true);\r\n```\r\nThanks.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5163/comments",
    "author": "jmimohsin",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2018-11-28T11:26:33Z",
        "body": "For selection of software vs hardware decoders see #3039. For most use cases it's preferable to leave this up to the platform.\r\n\r\n`DefaultHttpDataSourceFactory` allows for setting the user agent and custom HTTP headers (request properties) via its constructor and methods.\r\n\r\nThe current versions of ExoPlayer's provided UI components do not show the media URI."
      },
      {
        "user": "jmimohsin",
        "created_at": "2018-11-28T12:28:07Z",
        "body": "Thanks for help, Video is working but now no sound. I use this one too:-\r\n```kotlin\r\nval rf = DefaultRenderersFactory(this@SinglePlayerActivity, DefaultRenderersFactory.EXTENSION_RENDERER_MODE_PREFER)\r\nexoPlayer = ExoPlayerFactory.newSimpleInstance(this@SinglePlayerActivity, rf, trackSelector)\r\n```\r\n\r\nI am able to play video but sound is not coming now."
      },
      {
        "user": "andrewlewis",
        "created_at": "2018-11-28T13:05:05Z",
        "body": "Hard to say what's the cause without more information but you can probably remove `DefaultRenderersFactory.EXTENSION_RENDERER_MODE_PREFER` (unless you really do want to use extensions, in which case you'll need to build them by following the instructions in the READMEs)."
      },
      {
        "user": "jmimohsin",
        "created_at": "2018-11-28T17:29:30Z",
        "body": "Thanks for help."
      }
    ]
  },
  {
    "number": 5161,
    "title": "I am getting an id:1/8219 in subtitle track list other than the tracks i given",
    "created_at": "2018-11-28T06:46:12Z",
    "closed_at": "2018-12-18T20:12:01Z",
    "labels": [
      "question",
      "need more info"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5161",
    "body": "**Description**\r\n      when i pass the hls url to stream video data along with that i am sending subtitle uri's using Merging Media source but unfortunately i am getting a **id:1/8219** added in that subtitle track list ,while i am choosing it the subtitle is getting disable.But i also written functionality to disable subtitle option using None Option along with that getting this id:1/8219 unknown one added in the track list.Kindly help me with it.How can i remove this id:1/8219 from my subtitles track list.\r\n\r\n**Issue Reproduce Steps:**\r\n       I am using auto quality feature also,when the data streaming in auto is happening at 240p .At that point of time i am getting this subtitle id in the track list permanently for that video.\r\n\r\nI am Using Exoplayer Latest Version 2.9.0\r\n\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5161/comments",
    "author": "Sathish-Kumar-Kanagaraj",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2018-11-29T12:04:10Z",
        "body": "Are you sure this is a text track not a metadata track? Please could you play your stream with the demo app and provide the logcat output from `EventLogger` for `tracksChanged`, as this will show the IDs and formats of tracks?"
      },
      {
        "user": "ojw28",
        "created_at": "2018-12-18T20:12:01Z",
        "body": "Closing due to lack of follow up."
      }
    ]
  },
  {
    "number": 5160,
    "title": "Question: Fallback to TCP when QUIC is suddenly blocked",
    "created_at": "2018-11-27T16:52:59Z",
    "closed_at": "2018-11-30T10:55:10Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5160",
    "body": "I am using the Cronet ExoPlayer extension and I want to test the fallback from QUIC to TCP. For that, I am doing the 2 following cases:\r\n\r\n1. With a **rooted** phone, when the playback is started with QUIC, I am blocking udp with the following instruction:\r\n`iptables -A INPUT -p 17 --sport 443 -j REJECT`\r\nThat way, QUIC is blocked and it should fall back to TCP (same as YouTube native app is doing).\r\n\r\n2. With a **non-rooted** phone, I am playing a video with QUIC and **cellular data**, when half buffered, I am enabling WiFi and it is connecting to a network in which UDP is blocked. In this case, it should also fall back to TCP.\r\n\r\nIn both cases, the fallback is not happening, and I am getting an exception:\r\n`com.google.android.exoplayer2.ext.cronet.CronetDataSource$OpenException: org.chromium.net.impl.QuicExceptionImpl: Exception in CronetUrlRequest: net::ERR_QUIC_PROTOCOL_ERROR, ErrorCode=10, InternalErrorCode=-356, Retryable=false, QuicDetailedErrorCode=25`\r\n\r\n**Is there a way to make this work?** (should be, since YouTube native app is doing it)\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5160/comments",
    "author": "adrixgc",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2018-11-30T10:55:10Z",
        "body": "Did you enable HTTP/2 as well as QUIC? When I tried using your iptables command to block UDP, I found that playback continued with protocol `http/2+quic/39`. Anyway, I'm not sure how to check the fallback but maybe someone else can help, or you may get a better answer by posting this on a Cronet-related forum as it's not really related to the ExoPlayer library."
      },
      {
        "user": "adrixgc",
        "created_at": "2018-12-18T15:34:56Z",
        "body": "Yes, I enabled HTTP/2 as well as QUIC. When playback starts with QUIC and the iptables command is run, the playback stops (you can see the buffer decreasing) until onPlayerError is triggered (when it should fallback to TCP and keep the buffer). Did you manage to make it work?"
      }
    ]
  },
  {
    "number": 5159,
    "title": "Limit of ByteBuffer at queueInput (AudioProcessor)",
    "created_at": "2018-11-27T15:33:06Z",
    "closed_at": "2018-11-29T10:25:17Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5159",
    "body": "Hello!\r\nI currently using ExoPlayer v2.7.3 and try to write custom AudioProcessor. For my processing method i should know exactly how much samples of audio i will get before queueInput send me this amount of data, but i can't understand the way it generates.\r\n(I using MPEG-DASH streaming)\r\n\r\nFor ex.: If i play some video with two audio channels queueInput will return me 8192 bytes of data (4096 PCM16 values, so 2048 on one channel), but if i play video with six channels it return me 12288 bytes (6144 PCM16 values, so 1024 on one channel).\r\n\r\nHow get this value for one channel before queueInput will give me data? or how set default value for one channel at 1024 or 2048 samples?\r\n\r\nBest Regards!",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5159/comments",
    "author": "urbanovichwork",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2018-11-27T16:24:46Z",
        "body": "The input buffer's size is the size of the audio decoder output buffer written to the sink (if this is the first audio processor), or the size of output buffer from the preceding audio processor (otherwise). When using `MediaCodecAudioRenderer` I don't think there's a guarantee that the audio decoder output buffer will have a particular size.\r\n\r\nAudio processors can consume the input partially or fully without producing output. If you do that perhaps you can avoid making assumptions about the size of input buffers. Could you give a bit more detail about what you're trying to do?"
      },
      {
        "user": "andrewlewis",
        "created_at": "2018-11-27T16:34:28Z",
        "body": "To give a concrete example: let's say you want to process batches of 2048 samples (for example). You can make an internal buffer that's big enough to store up to 2047 samples, and then when you receive more input you can process anything that's in your internal buffer followed by anything that was input up to a multiple of 2048 samples, then store anything that remains in the internal buffer. When `queueEndOfStream` is called you need some way to handle any data that remains in the internal buffer."
      },
      {
        "user": "urbanovichwork",
        "created_at": "2018-11-29T10:20:57Z",
        "body": "> To give a concrete example: let's say you want to process batches of 2048 samples (for example). You can make an internal buffer that's big enough to store up to 2047 samples, and then when you receive more input you can process anything that's in your internal buffer followed by anything that was input up to a multiple of 2048 samples, then store anything that remains in the internal buffer. When `queueEndOfStream` is called you need some way to handle any data that remains in the internal buffer.\r\n\r\nThanks for advice, did it in this way and everything is good.\r\n\r\nActualy, i have one more question. Maybe you can help me with playing audio from ExoPlayer at specific AudioSource of Unity3D? Is it possible and maybe it covered somewhere?"
      },
      {
        "user": "andrewlewis",
        "created_at": "2018-11-29T10:25:17Z",
        "body": "I don't think this is covered anywhere and I haven't tried it, but I think it's in theory possible to create a custom `AudioSink` implementation that outputs to a Unity audio source instead of writing to a platform `AudioTrack`. If you try this and manage to get it to work it would be cool if you could let us know here. Thanks!"
      }
    ]
  },
  {
    "number": 5158,
    "title": "Video corruption when playing a live DASH stream",
    "created_at": "2018-11-27T12:19:29Z",
    "closed_at": "2018-11-30T10:10:38Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5158",
    "body": "### Issue description\r\nWhen playing a live DASH stream (coming from Azure Media Services), we see some corruption on the video. It does happen time to time, with some bitrates. To reproduce, it is needed to select a mid range bitrate and wait for a few minutes.\r\n\r\nPlease note that we don't experience such issue on PC (Edge/Chrome) using DASH, or iOS devices using HLS.\r\n\r\n### Reproduction steps\r\nIt can be reproduced with ExoPlayer demo app. Run the DASH stream provided and select a specific bitrate. For example 1280x720 @ 4 Mbps. Wait for a few minutes and observe the video.\r\nI will send you a video capture of the issue and a source URL to test.\r\n\r\n### Link to test content\r\nSent to dev.exoplayer@gmail.com\r\n\r\n### Version of ExoPlayer being used\r\n2.9.1\r\n\r\n### Device(s) and version(s) of Android being used\r\nIssue reproduced on several Android phones and set top boxes.\r\nReproduced for example on Android S9+. Android version 8.0.0\r\n\r\n### A full bug report captured from the device\r\nSent to dev.exoplayer@gmail.com\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5158/comments",
    "author": "xpouyat",
    "comments": [
      {
        "user": "xpouyat",
        "created_at": "2018-11-28T15:07:29Z",
        "body": "Here is the logcat output when video is corrupted. We see EventLogger: droppedFrames and signalFlush events.\r\n\r\n11-28 16:04:54.637 23725 23725 D EventLogger: timelineChanged [876.32, 502.16, window=0, period=0, periodCount=1, windowCount=1, reason=DYNAMIC\r\n11-28 16:04:54.637 23725 23725 D EventLogger:   period [?]\r\n11-28 16:04:54.637 23725 23725 D EventLogger:   window [536.00, true, true]\r\n11-28 16:04:54.637 23725 23725 D EventLogger: ]\r\n11-28 16:04:59.739 23725 23725 D EventLogger: timelineChanged [881.43, 501.18, window=0, period=0, periodCount=1, windowCount=1, reason=DYNAMIC\r\n11-28 16:04:59.739 23725 23725 D EventLogger:   period [?]\r\n11-28 16:04:59.740 23725 23725 D EventLogger:   window [535.91, true, true]\r\n11-28 16:04:59.740 23725 23725 D EventLogger: ]\r\n11-28 16:05:04.648 23725 23725 D EventLogger: timelineChanged [886.34, 502.17, window=0, period=0, periodCount=1, windowCount=1, reason=DYNAMIC\r\n11-28 16:05:04.648 23725 23725 D EventLogger:   period [?]\r\n11-28 16:05:04.648 23725 23725 D EventLogger:   window [536.00, true, true]\r\n11-28 16:05:04.648 23725 23725 D EventLogger: ]\r\n11-28 16:05:09.779 23725 23725 D EventLogger: timelineChanged [891.47, 501.30, window=0, period=0, periodCount=1, windowCount=1, reason=DYNAMIC\r\n11-28 16:05:09.779 23725 23725 D EventLogger:   period [?]\r\n11-28 16:05:09.779 23725 23725 D EventLogger:   window [536.00, true, true]\r\n11-28 16:05:09.779 23725 23725 D EventLogger: ]\r\n11-28 16:05:10.225 23725 23725 D EventLogger: droppedFrames [891.91, 501.75, window=0, period=0, 50]\r\n11-28 16:05:12.594 23725 23725 D EventLogger: droppedFrames [894.28, 504.11, window=0, period=0, 71]\r\n11-28 16:05:12.595 23725 14821 I ACodec  : [OMX.Exynos.avc.dec] signalFlush\r\n11-28 16:05:12.595 23725 14822 I ACodec  : [OMX.Exynos.avc.dec] ExecutingState flushing now (codec owns 1/5 input, 10/16 output).\r\n11-28 16:05:12.596 23725 14822 I ACodec  : [OMX.Exynos.avc.dec] Now Flushing\r\n11-28 16:05:12.600 23725 14822 I ACodec  : [OMX.Exynos.avc.dec] FlushingState onOMXEvent(0,1,0)\r\n11-28 16:05:12.626 23725 14822 I ACodec  : [OMX.Exynos.avc.dec] FlushingState onOMXEvent(0,1,1)\r\n11-28 16:05:12.626 23725 14822 I ACodec  : [OMX.Exynos.avc.dec] Now Executing\r\n11-28 16:05:14.634 23725 23725 D EventLogger: timelineChanged [896.32, 502.15, window=0, period=0, periodCount=1, windowCount=1, reason=DYNAMIC\r\n11-28 16:05:14.634 23725 23725 D EventLogger:   period [?]\r\n11-28 16:05:14.634 23725 23725 D EventLogger:   window [536.00, true, true]\r\n11-28 16:05:14.634 23725 23725 D EventLogger: ]\r\n11-28 16:05:14.856 23725 14821 I ACodec  : [OMX.Exynos.avc.dec] signalFlush\r\n11-28 16:05:14.857 23725 14822 I ACodec  : [OMX.Exynos.avc.dec] ExecutingState flushing now (codec owns 3/5 input, 8/16 output).\r\n11-28 16:05:14.859 23725 14822 I ACodec  : [OMX.Exynos.avc.dec] Now Flushing\r\n11-28 16:05:14.861 23725 14822 I ACodec  : [OMX.Exynos.avc.dec] FlushingState onOMXEvent(0,1,0)\r\n11-28 16:05:14.866 23725 14822 I ACodec  : [OMX.Exynos.avc.dec] FlushingState onOMXEvent(0,1,1)\r\n11-28 16:05:14.866 23725 14822 I ACodec  : [OMX.Exynos.avc.dec] Now Executing\r\n11-28 16:05:15.008 23725 23725 D EventLogger: droppedFrames [896.70, 502.53, window=0, period=0, 50]\r\n11-28 16:05:19.765 23725 23725 D EventLogger: timelineChanged [901.45, 501.29, window=0, period=0, periodCount=1, windowCount=1, reason=DYNAMIC\r\n11-28 16:05:19.766 23725 23725 D EventLogger:   period [?]\r\n11-28 16:05:19.766 23725 23725 D EventLogger:   window [536.00, true, true]\r\n11-28 16:05:19.766 23725 23725 D EventLogger: ]\r\n11-28 16:05:20.749 23725 14821 I ACodec  : [OMX.Exynos.avc.dec] signalFlush\r\n11-28 16:05:20.750 23725 14822 I ACodec  : [OMX.Exynos.avc.dec] ExecutingState flushing now (codec owns 0/5 input, 8/16 output).\r\n11-28 16:05:20.750 23725 23725 D EventLogger: droppedFrames [902.44, 502.27, window=0, period=0, 57]\r\n11-28 16:05:20.751 23725 14822 I ACodec  : [OMX.Exynos.avc.dec] Now Flushing\r\n11-28 16:05:20.755 23725 14822 I ACodec  : [OMX.Exynos.avc.dec] FlushingState onOMXEvent(0,1,0)\r\n11-28 16:05:20.760 23725 14822 I ACodec  : [OMX.Exynos.avc.dec] FlushingState onOMXEvent(0,1,1)\r\n11-28 16:05:20.761 23725 14822 I ACodec  : [OMX.Exynos.avc.dec] Now Executing\r\n11-28 16:05:24.670 23725 23725 D EventLogger: timelineChanged [906.36, 502.19, window=0, period=0, periodCount=1, windowCount=1, reason=DYNAMIC\r\n11-28 16:05:24.671 23725 23725 D EventLogger:   period [?]\r\n11-28 16:05:24.671 23725 23725 D EventLogger:   window [536.00, true, true]"
      },
      {
        "user": "xpouyat",
        "created_at": "2018-11-30T09:10:07Z",
        "body": "We have been able to mitigate the issue by disabling the “dynamic_sub_gop” feature in the Elemental live encoder."
      },
      {
        "user": "andrewlewis",
        "created_at": "2018-11-30T10:10:43Z",
        "body": "Thanks for the information!"
      }
    ]
  },
  {
    "number": 5157,
    "title": "Is DefaultLoadControl affects the Buffering of UdpDataSource?",
    "created_at": "2018-11-27T11:32:17Z",
    "closed_at": "2018-12-19T13:58:03Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5157",
    "body": "### Issue description\r\nI'm streaming media over UDP from an application that runs on the same device as the Exo Player. For PoC purposes I run FFMPEG and ExoPlayer in the same application.\r\n\r\nMy goal is to terminate FFMPEG and to see the video freezes immediately (or black screen, doesn't matter).\r\n\r\nHowever, I'm trying to modify the configuration of DefaultLoadControl but see no effect, meaning, the video keeps streaming ~1.5 seconds after I terminate the FFMPEG. Moreover, I have tried to change the size of the USP packets but it doesn't affect.\r\n\r\nFirst, is it possible to affect the buffering of a UDP stream?\r\nSeconds, if it is possible, could you explain how one can do it?\r\n\r\n### A full bug report captured from the device\r\n```\r\nprivate val uri = Uri.parse(\"udp://@127.0.0.1:5004\")\r\noverride fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.activity_video_player)\r\n        shouldAutoPlay = true\r\n        //m_textView = findViewById(R.id.textView)\r\n        //m_textView.setText(\"FFMPeg is ready for action\")\r\n        //m_textView.setY(700f)\r\n        var button = findViewById<Button>(R.id.start)\r\n        button.setX(300f)\r\n        m_ffmpeg = FFmpeg.getInstance(this)\r\n        try {\r\n            m_ffmpeg.loadBinary(object : FFmpegLoadBinaryResponseHandler {\r\n                override fun onFailure() {}\r\n\r\n                override fun onSuccess() {}\r\n\r\n                override fun onStart() {}\r\n\r\n                override fun onFinish() {\r\n\r\n                }\r\n            })\r\n            // Handle if FFmpeg is not supported by device\r\n        } catch (ex: FFmpegNotSupportedException) {\r\n\r\n        }\r\n\r\n        button.setOnClickListener(object : View.OnClickListener {\r\n            override fun onClick(v: View?) {\r\n                try {\r\n                    val fpath = Environment.getExternalStorageDirectory().toString() + \"/encoder_out_4_track1_dashinit.mp4\"\r\n                    val cmd = arrayOf(\"-re\", \"-i\", fpath, \"-c\", \"copy\", \"-f\", \"mpegts\", \"udp://127.0.0.1:5004?pkt_size=1316\")\r\n                    m_ffmpeg.execute(cmd, object : ExecuteBinaryResponseHandler() {\r\n\r\n                        override fun onStart() {\r\n\r\n                            m_start = System.currentTimeMillis()\r\n\r\n                            //m_textView.setText(\"FFMPeg Started\")\r\n                        }\r\n\r\n                        override fun onProgress(message: String?) {\r\n                            //m_textView.setText(\"FFMPeg in progress\")\r\n                        }\r\n\r\n                        override fun onFailure(message: String?) {\r\n                            //m_textView.setText(\"FFMPeg in failed \\n \" + message!!)\r\n                        }\r\n\r\n                        override fun onSuccess(message: String?) {\r\n                            // m_textView.setText(\"FFMPeg succeeded\")\r\n                        }\r\n\r\n                        override fun onFinish() {\r\n                            val tEnd = System.currentTimeMillis()\r\n                            val tDelta = tEnd - m_start\r\n                            val elapsedSeconds = tDelta / 1000.0\r\n\r\n                            //m_textView.setText(\"FFMPeg finished, elapsed = $elapsedSeconds\")\r\n                        }\r\n                    })\r\n                } catch (e: FFmpegCommandAlreadyRunningException) {\r\n                }\r\n            }\r\n        })\r\n        button = findViewById<Button>(R.id.stop)\r\n        button.setX(600f)\r\n        button.setOnClickListener(object : View.OnClickListener {\r\n            override fun onClick(v: View?) {\r\n                m_ffmpeg.killRunningProcesses()\r\n            }\r\n        })\r\n    }\r\n\r\nprivate fun initPlayer() {\r\n        // this part returns nullable object (doing lookup)\r\n        val simpleExoPlayerView = findViewById<SimpleExoPlayerView>(R.id.player_view)\r\n\r\n        // Default instances\r\n        val bandwidthMeter = DefaultBandwidthMeter()\r\n        val trackSelectionFactory = AdaptiveTrackSelection.Factory(bandwidthMeter)\r\n        val trackSelector = DefaultTrackSelector(trackSelectionFactory)\r\n\r\n        //val defaultLoadControl = DefaultLoadControl()\r\n        val defaultLoadControl = DefaultLoadControl(DefaultAllocator(true, C.DEFAULT_BUFFER_SEGMENT_SIZE),\r\n                75,\r\n                100,\r\n                50,\r\n                60)\r\n\r\n        // Here we setup UdpDataSource\r\n        // This part will probably need to setup TransferListener (might be implemented by this class itself\r\n        // This listener is pass as 2nd argument to DefaultDataSourceFactory as well as to UdpDataSource\r\n        val myDataSourceFactory = DefaultDataSourceFactory(this, null, { -> UdpDataSource(null) })\r\n\r\n        // Extractor factory & media source\r\n        val extractorsFactory = DefaultExtractorsFactory()\r\n        val mediaSource = ExtractorMediaSource(uri, myDataSourceFactory, extractorsFactory, null, null)\r\n\r\n        // Main initialization side-effects\r\n        simpleExoPlayerView.requestFocus()\r\n        var defaultRenderersFactory = DefaultRenderersFactory(this)\r\n        player = ExoPlayerFactory.newSimpleInstance(defaultRenderersFactory, trackSelector, defaultLoadControl)\r\n        player.prepare(mediaSource)\r\n        player.playWhenReady = shouldAutoPlay\r\n        simpleExoPlayerView.player = player\r\n    }\r\n```",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5157/comments",
    "author": "alex-tilkin",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2018-11-30T09:31:22Z",
        "body": "ExoPlayer isn't designed for ultra low latency so you probably won't be able to set up things so that the renderers are starved \"immediately\" when you disconnect the source, but I'd expect it to be possible to get less than 1.5 seconds' latency.\r\n\r\nI'd probably try the following (in order):\r\n- Reduce the packet size in `UdpDataSource`.\r\n- If you have an audio stream try disabling it.\r\n- Add logging when you write frames on the FFmpeg side, when the ExoPlayer `Extractor` writes the sample to the track output (via a call to `sampleMetadata`) and when the `Renderer` reads a buffer in `readSource`, so that you know when samples with particular timestamps are written/read by the components.\r\n- Try configuring the encoder to make every video frame a keyframe. This will affect quality/bitrate but still interesting to try to see if it affects latency."
      }
    ]
  },
  {
    "number": 5156,
    "title": "I want to change Uri ,When I was playing .m3u8 file.",
    "created_at": "2018-11-27T09:29:10Z",
    "closed_at": "2018-11-27T09:31:24Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5156",
    "body": "// I want to change uri to play other .m3u8 file when I was playing .m3u8 file.\r\n                            bandwidthMeter = new DefaultBandwidthMeter();\r\n                            videoTrackSelectionFactory = new AdaptiveTrackSelection.Factory(bandwidthMeter);\r\n                            trackSelector = new DefaultTrackSelector(videoTrackSelectionFactory);\r\n                            player = ExoPlayerFactory.newSimpleInstance(CourseDetailActivity.this, trackSelector);\r\n                            dataSourceFactory = new DefaultDataSourceFactory(MyApplication.getAppContext(),\r\n                                    Util.getUserAgent(MyApplication.getAppContext(), \"ExoPlayer\"), bandwidthMeter);\r\n                            hlsMediaSource = new HlsMediaSource.Factory(dataSourceFactory).\r\n                                    createMediaSource(Uri.parse(getHdModelResponses.get(0).getSrc() + \"&a=1.m3u8\"));\r\n                            concatenatedSource = new ConcatenatingMediaSource(hlsMediaSource);\r\n                            //MediaSource mediaSource = new ExtractorMediaSource.Factory(dataSourceFactory).createMediaSource();\r\n                            player.prepare(concatenatedSource);\r\n                            player.setPlayWhenReady(true);\r\n                            exoPlayView.setPlayer(player);\r\n//This code was playing a .m3u8 file.\r\n________________________________________________________________________________________________________\r\n\r\nhlsMediaSources = new HlsMediaSource.Factory(dataSourceFactory).\r\n                        createMediaSource(Uri.parse(getHdModelResponses.get(0).getSrc() + \"&a=1.m3u8\"));\r\n                if (concatenatedSource.getSize()>0){\r\n                    concatenatedSource.removeMediaSource(0);\r\n                }\r\n                concatenatedSource.addMediaSource(hlsMediaSources);\r\n// This code was change uri.But i had get an error.\r\n____________________________________________________________________________________________________________\r\n//error \r\nExoPlayerImplInternal: Source error.\r\ncom.google.android.exoplayer2.upstream.HttpDataSource$InvalidResponseCodeException: Response code: 404\r\n        at com.google.android.exoplayer2.upstream.DefaultHttpDataSource.open(DefaultHttpDataSource.java:300)\r\n        at com.google.android.exoplayer2.upstream.DefaultDataSource.open(DefaultDataSource.java:250)\r\n        at com.google.android.exoplayer2.upstream.StatsDataSource.open(StatsDataSource.java:83)\r\n        at com.google.android.exoplayer2.upstream.DataSourceInputStream.checkOpened(DataSourceInputStream.java:102)\r\n        at com.google.android.exoplayer2.upstream.DataSourceInputStream.open(DataSourceInputStream.java:65)\r\n        at com.google.android.exoplayer2.upstream.ParsingLoadable.load(ParsingLoadable.java:156)\r\n        at com.google.android.exoplayer2.upstream.Loader$LoadTask.run(Loader.java:381)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)\r\n        at java.lang.Thread.run(Thread.java:764)",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5156/comments",
    "author": "PreviousTlx",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2018-11-27T09:31:24Z",
        "body": "The server is returning HTTP status code 404 Not Found, so please check the URLs you're requesting."
      },
      {
        "user": "PreviousTlx",
        "created_at": "2018-11-27T09:34:42Z",
        "body": "I had check url,it was right .Because when i only play the change uri .It can work.However ,when i was change url.It not work."
      },
      {
        "user": "PreviousTlx",
        "created_at": "2018-11-27T09:47:02Z",
        "body": "Thanks .I had found my RxManager had a Bug."
      }
    ]
  },
  {
    "number": 5146,
    "title": "Is it possible to use exoplayer to stream an encrypted video locally in android?",
    "created_at": "2018-11-26T13:37:29Z",
    "closed_at": "2018-11-28T11:46:30Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5146",
    "body": "So after I allow users to download videos to their devices I will encrypt the videos with AES, now the problem comes when I want to read the encrypted video file. As exoplayer is well known for streaming online is it possible to use exoplayer to stream encrypted videos offline?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5146/comments",
    "author": "svidata",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2018-11-28T11:46:30Z",
        "body": "> So after I allow users to download videos to their devices I will encrypt the videos with AES\r\n\r\nIt sounds like you are encrypting the video yourself, and want to decrypt it in a streaming way (rather than decrypting the whole stream and passing the clear stream to ExoPlayer). Please have a look at `AesCipherDataSource`. Depending on how you encrypted the stream you may need to make a custom `DataSource` based on it."
      }
    ]
  },
  {
    "number": 5131,
    "title": "MediaSource identification",
    "created_at": "2018-11-21T22:02:21Z",
    "closed_at": "2018-11-21T22:13:31Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5131",
    "body": "Is there a way of identifiying a MediaSource? Im trying to get the title of the current track as an example.\r\nSo I thought i could solve my problem by giving each queued MediaSource a specific id so that I can find the corrisponding track data (Title, Url , Image... ) internally with that id. \r\nConcatinatingMediaSource.getMediaSource(0) returns me the current media source (I assume that) but I cant find a way of setting the media source apart from the others.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5131/comments",
    "author": "LowLevelSubmarine",
    "comments": [
      {
        "user": "LowLevelSubmarine",
        "created_at": "2018-11-21T22:13:31Z",
        "body": "For others: U can use the tag of the current window to identify a track ;)"
      },
      {
        "user": "ojw28",
        "created_at": "2018-11-22T01:08:15Z",
        "body": "Yes. the `Factory` classes for the various `MediaSource`s have `setTag(Object)` methods that allow you to set an arbitrary tag object (you could even put the metadata directly into the tag object, if it makes sense for your use case). You can then retrieve the tag associated with the currently playing source by calling `getCurrentTag` on the player."
      },
      {
        "user": "tonihei",
        "created_at": "2018-11-22T09:05:53Z",
        "body": "One further note: Please be aware that the tag is only available in the `Timeline` or from `getCurrentTag` if the media has been prepared. That means right after calling `player.prepare` or after adding a new source to the `ConcatenatingMediaSource`, this will still return null. That's not optimal and we should be probably fix this in the future."
      }
    ]
  },
  {
    "number": 5116,
    "title": "Why does PlayerControlView disappear in screen",
    "created_at": "2018-11-19T12:11:17Z",
    "closed_at": "2018-11-27T02:11:17Z",
    "labels": [
      "question",
      "need more info"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5116",
    "body": "### Issue description\r\nWe embed ExoPlayer into our app, and play online videos, sometimes the PlayerControlView may disappear. we look for the reason by hierarchy viewer, and find out that the measuredWidth and measuredHeight of PlayerControlView are 0, but the visibility is VISIBLE. We tried to change many different version, but this problem always exist.\r\n\r\n### Version of ExoPlayer being used\r\nr2.5.0, r2.5.4, 2.6.0, 2.7.3.\r\n\r\n### Device(s) and version(s) of Android being used\r\nXiaomi Redmi Note 4X, Android N\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5116/comments",
    "author": "JokerLi",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2018-11-19T15:30:36Z",
        "body": "The PlayerControlView consists of nested LinearLayouts which all have a layout_height attribute of wrap_content. So it will have the height of the contents contained in the layouts.\r\n\r\nWhen it disappears with a measuredHeight of 0, what's contained in the PlayerControlView when you look into the hierarchy viewer? Did you apply any customization of the content of the PlayerControlView? "
      },
      {
        "user": "JokerLi",
        "created_at": "2018-11-20T12:53:34Z",
        "body": "There are TextViews, ImageButtons and ImageViews in this PlayerControlView. And we didn't apply any  customization of content."
      },
      {
        "user": "JokerLi",
        "created_at": "2018-11-27T02:11:17Z",
        "body": "Nobody can solve this problem, so... i gived up. Thanks!"
      },
      {
        "user": "cnting",
        "created_at": "2019-01-16T06:54:10Z",
        "body": "@JokerLi try set `playerControlView.showTimeoutMs = -1`"
      },
      {
        "user": "christopherperry",
        "created_at": "2019-03-11T23:09:48Z",
        "body": "I'm experiencing the same issue. The controls display at first but as soon as the video starts to play they disappear, but the visibility is VISIBLE.\r\n\r\nFor anyone else having this problem, the issue was that the video resize mode made the view resize and push the controls down outside the visible drawing area of the view."
      }
    ]
  },
  {
    "number": 5112,
    "title": "Playing Partly Encrypted File.",
    "created_at": "2018-11-15T15:49:45Z",
    "closed_at": "2018-11-21T11:09:13Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5112",
    "body": "I find exoplayer can play fully aes encrypted mp4 file. \r\nI implement the FileDataSource Class to play a partly encrypted mp4 file, the file size is like 100mb, head part is decrypted, head size is 5mb. my code can play the file now, but seeking time to the head part will trap in a dead loop (open read close) loop.\r\nExoPlayer Version: 2.7.1\r\nDevice: Mi 8\r\nI think the problem is in try command in read func. I'm stuck with it, any suggestion?\r\n\r\n`public final class OriginDataSource implements DataSource {\r\n\r\n    /**\r\n     * Thrown when IOException is encountered during local file read operation.\r\n     */\r\n    public static class OriginDataSourceException extends IOException {\r\n\r\n        OriginDataSourceException(IOException cause) {\r\n            super(cause);\r\n        }\r\n\r\n    }\r\n\r\n    private final TransferListener listener;\r\n\r\n    private RandomAccessFile file;\r\n    private Uri uri;\r\n    private long bytesRemaining;\r\n    private boolean opened;\r\n    private byte[] head = new byte[App.size];\r\n    private ByteArrayInputStream bis;\r\n\r\n    private static final String HEXES = \"0123456789ABCDEF\";\r\n\r\n    private static String getHex(byte[] raw) {\r\n        final StringBuilder hex = new StringBuilder(2 * raw.length);\r\n        for (final byte b : raw) {\r\n            hex.append(HEXES.charAt((b & 0xF0) >> 4)).append(HEXES.charAt((b & 0x0F)));\r\n        }\r\n        return hex.toString();\r\n    }\r\n\r\n    OriginDataSource() {\r\n        this(null);\r\n    }\r\n\r\n    /**\r\n     * @param listener An optional listener.\r\n     */\r\n    private OriginDataSource(TransferListener listener) {\r\n        this.listener = listener;\r\n    }\r\n\r\n    @Override\r\n    public void addTransferListener(TransferListener transferListener) {\r\n\r\n    }\r\n\r\n    @Override\r\n    public long open(DataSpec dataSpec) throws OriginDataSourceException {\r\n        try {\r\n            uri = dataSpec.uri;\r\n            file = new RandomAccessFile(dataSpec.uri.getPath(), \"rw\");\r\n            try {\r\n                file.seek(0);\r\n                file.read(head);\r\n                Cipher cipher = Cipher.getInstance(App.algorithm);\r\n                cipher.init(Cipher.DECRYPT_MODE,\r\n                        new SecretKeySpec(App.keyValue.getBytes(), \"AES\"),\r\n                        new IvParameterSpec(App.ivValue.getBytes()));\r\n                byte[] s = cipher.update(head);\r\n                byte[] tail = new byte[App.size];\r\n                file.read(tail);\r\n                file.seek(0);\r\n                ByteArrayOutputStream bos = new ByteArrayOutputStream();\r\n                bos.write(s);\r\n                bos.write(tail);\r\n                bis = new ByteArrayInputStream(bos.toByteArray());\r\n                Log.e(\"Case Hex : \", getHex(s));\r\n                Log.e(\"Case Opening : \", \"True\");\r\n\r\n            } catch (Exception e) {\r\n                e.printStackTrace();\r\n            }\r\n            file.seek(dataSpec.position);\r\n            bytesRemaining = dataSpec.length == C.LENGTH_UNSET ? file.length() - dataSpec.position\r\n                    : dataSpec.length;\r\n            if (bytesRemaining < 0) {\r\n                throw new EOFException();\r\n            }\r\n        } catch (IOException e) {\r\n            throw new OriginDataSourceException(e);\r\n        }\r\n\r\n        opened = true;\r\n        if (listener != null) {\r\n            listener.onTransferStart(this, dataSpec,false);\r\n        }\r\n\r\n        return bytesRemaining;\r\n    }\r\n\r\n    @Override\r\n    public int read(byte[] buffer, int offset, int readLength) throws IOException {\r\n        if (readLength == 0) {\r\n            return 0;\r\n        } else if (bytesRemaining == 0) {\r\n            return C.RESULT_END_OF_INPUT;\r\n        } else {\r\n            int bytesRead;\r\n            try {\r\n                if (file.getFilePointer() < App.size ) {\r\n                    Log.e(\"In Enc : \",\"True\");\r\n                    bytesRead = bis.read(buffer, offset, (int) Math.min(bytesRemaining, readLength));\r\n                } else {\r\n                    Log.e(\"In Enc : \",\"False\");\r\n                    bytesRead = file.read(buffer, offset, (int) Math.min(bytesRemaining, readLength));\r\n                }\r\n            } catch (IOException e) {\r\n                throw new OriginDataSourceException(e);\r\n            }\r\n            if (bytesRead > 0) {\r\n                bytesRemaining -= bytesRead;\r\n                if (listener != null) {\r\n                    listener.onBytesTransferred(this, dataSpe,false,bytesRead);\r\n                }\r\n            }\r\n            return bytesRead;\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public Uri getUri() {\r\n        return uri;\r\n    }\r\n\r\n    @Override\r\n    public Map<String, List<String>> getResponseHeaders() {\r\n        return null;\r\n    }\r\n\r\n    @Override\r\n    public void close() throws OriginDataSourceException {\r\n        uri = null;\r\n        Log.e(\"Case Closing : \", \"True !\");\r\n        try {\r\n            bis.close();\r\n            if (file != null) {\r\n                file.close();\r\n            }\r\n        } catch (IOException e) {\r\n            throw new OriginDataSourceException(e);\r\n        } finally {\r\n            file = null;\r\n            if (opened) {\r\n                opened = false;\r\n                if (listener != null) {\r\n                    listener.onTransferEnd(this,dataSpe,false);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n`\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5112/comments",
    "author": "MickeyBadBad",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2018-11-15T16:06:30Z",
        "body": "Your code looks roughly right, but please be aware that we can't debug any custom app code in detail. I'd suggest to step through with a debugger to see why your code stopping or doing weird things. "
      },
      {
        "user": "tonihei",
        "created_at": "2018-11-21T11:09:13Z",
        "body": "Closing for now. Feel free to reopen if you have find a specific problem we should look into. "
      }
    ]
  },
  {
    "number": 5104,
    "title": "Downloading hls offline video without using download action",
    "created_at": "2018-11-14T13:57:31Z",
    "closed_at": "2018-11-21T11:07:24Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5104",
    "body": "I am using the latest version of exoplayer and i want to implement offline download fucntionality.I have checked your example in the demo app.You have used download action for selecting which stream has to be downloaded(i.e 1080p or 480p etc).Can it be done in any other way as i dont wish to use download action.In the youtube app also the have not used download action i guess because i have not seen any action file in their downloads folder in local storage.Can please provide me a solution for implementing offline download without using download action.\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5104/comments",
    "author": "meenukrishnamurthy",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2018-11-14T14:08:01Z",
        "body": "Videos can also be cached while playing the video just by using CacheDataSource. What exactly is the problem with using DownloadAction?"
      },
      {
        "user": "meenukrishnamurthy",
        "created_at": "2018-11-15T06:56:35Z",
        "body": "There is no problem actuallu.I just wanted to know the use of downlaod action.What is the purpose of using it."
      },
      {
        "user": "tonihei",
        "created_at": "2018-11-15T09:33:40Z",
        "body": "It's used to define what DownloadManager is supposed to do (e.g. download media, remove media, etc.). Please have a look at the demo app to see how it can be used."
      },
      {
        "user": "tonihei",
        "created_at": "2018-11-21T11:07:24Z",
        "body": "I'll close the issue because the question was answered. Feel free to reopen if that's not the case."
      }
    ]
  },
  {
    "number": 5084,
    "title": "Reverse Playback Support",
    "created_at": "2018-11-09T17:41:25Z",
    "closed_at": "2018-11-10T16:45:18Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5084",
    "body": "### Issue description\r\nMy application requires full reverse playback on media also i need a boomerang style video display in my application. Which in case requires a reverse playback therefore.\r\n\r\nOn IOS part i can implement that feature with ease because IOS AVPlayer support negative values on playback using Avplayer.rate parameter and it is a must have on my application.\r\n\r\n### Reproduction steps\r\nI have seen several branches implemented by other members of the community , but the implementations are either on 2.0 or 2.1 and cannot be easly back ported to the current version because of the massive api changes.\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5084/comments",
    "author": "keremkusmezer",
    "comments": [
      {
        "user": "AquilesCanta",
        "created_at": "2018-11-10T16:45:18Z",
        "body": "Please see #2191."
      }
    ]
  },
  {
    "number": 5073,
    "title": "Why does sample app dramatically change in every last one of releases?",
    "created_at": "2018-11-07T19:40:05Z",
    "closed_at": "2018-11-07T19:53:08Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5073",
    "body": "I know this is not an issue but this SDK is the hardest one to update. I have quitted updating the SDK since 1.5.9 because I always have guide with the sample app but it changes dramatically in each release. \r\n\r\nIt takes my whole day to update my code to avoid errors. Today I decided to update it once again to play Rtmp streams, but almost nothing resolved about exoplayer in my project. 😢 \r\n\r\nI wish I am following the wrong way, I looked at developer guide but I think if sample app changes that much I also need to update my code a lot.\r\n\r\nAny ideas, any guide which might make my work easier than ever will be very appreciated.\r\n\r\nKind regards.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5073/comments",
    "author": "nightwolf738",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2018-11-07T19:53:08Z",
        "body": "ExoPlayer 2 was a pretty big architectural change. I think it's more reasonable to consider it as a new API that was designed to replace the old one. This is reflected by the fact that the package name changed.\r\n\r\nFor ExoPlayer 2, we're trying to get better about breaking the API less frequently, particularly the parts of it that are used by the majority of use cases. We do still break things from time to time in the name of progress. In particular, if the API has a design issue that prevents us from fixing or implementing something, and the choice is just to \"not do that\" or break the API to unlock forward progress, we will most likely opt for the latter."
      }
    ]
  },
  {
    "number": 5048,
    "title": "onCustomAction in CustomActionReceiver is not getting called",
    "created_at": "2018-11-02T12:54:13Z",
    "closed_at": "2019-02-04T19:25:05Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5048",
    "body": "I am trying to have a notification bar for playing music using foreground service. To close the notification I want to use a custom \"close\" button. My code to create a playerNotificationManger is below..\r\n\r\n```\r\nprivate void setupNotiWithCustomAction(){\r\n        Intent intent = new Intent(context, MainActivity.class);\r\n        PendingIntent pendingIntent = PendingIntent.getActivity(context,0,intent,PendingIntent.FLAG_UPDATE_CURRENT);\r\n        PlayerNotificationManager notiWithCustom = new PlayerNotificationManager(context,PLAYBACK_CHANNEL_ID,\r\n                 PLAYBACK_NOTIFICATION_ID,new PlayerNotificationManager.MediaDescriptionAdapter() {\r\n            @Override\r\n            public String getCurrentContentTitle(Player player) {\r\n                return title;\r\n            }\r\n\r\n            @Nullable\r\n            @Override\r\n            public PendingIntent createCurrentContentIntent(Player player) {\r\n            return PendingIntent;\r\n            }\r\n\r\n            @Nullable\r\n            @Override\r\n            public Bitmap getCurrentLargeIcon(Player player, PlayerNotificationManager.BitmapCallback callback) {\r\n                // return icon\r\n                return null;\r\n            }\r\n        },new customAction());\r\n\r\n        notiWithCustom.setNotificationListener(new PlayerNotificationManager.NotificationListener() {\r\n            @Override\r\n            public void onNotificationStarted(int notificationId, Notification notification) {\r\n                startForeground(notificationId, notification);\r\n            }\r\n\r\n            @Override\r\n            public void onNotificationCancelled(int notificationId) {\r\n                stopForeground(true);\r\n                stopSelf();\r\n            }\r\n        });\r\n        notiWithCustom.setFastForwardIncrementMs(0);\r\n        notiWithCustom.setRewindIncrementMs(0);\r\n        notiWithCustom.setStopAction(null);\r\n        notiWithCustom.setPlayer(player);\r\n        notiWithCustom.setOngoing(false);\r\n        player.addListener(this);\r\n\r\n    }\r\n\r\n    private class customAction implements PlayerNotificationManager.CustomActionReceiver{\r\n        @Override\r\n        public Map<String, NotificationCompat.Action> createCustomActions(Context context) {\r\n            NotificationCompat.Action action = new NotificationCompat.Action(context.getResources().getIdentifier(\"music_clear\",\"drawable\",context.getPackageName()),\"closeBar\",null);\r\n            Map<String, NotificationCompat.Action> actionMap = new HashMap<>();\r\n            actionMap.put(\"closeBar\",action);\r\n            return actionMap;\r\n        }\r\n\r\n        @Override\r\n        public List<String> getCustomActions(Player player) {\r\n            List<String> customActions = new ArrayList<>();\r\n            customActions.add(\"closeBar\");\r\n            return customActions;\r\n        }\r\n\r\n        @Override\r\n        public void onCustomAction(Player player, String action, Intent intent) {\r\n            Log.d(\"audio>>\",\"action: \"+action);\r\n        }\r\n    }\r\n```\r\n\r\nNow, the close icon is shown on the notification bar but if I pressed, it does not do anything and \"onCustomAction\" is not also called. Even if I pass a pendingIntent while creating an Action instance, it does not call \"onCustomAction\". Can you please why is this happening? Thank you.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5048/comments",
    "author": "Sekhtech",
    "comments": [
      {
        "user": "odiggity25",
        "created_at": "2018-11-08T06:54:11Z",
        "body": "@Sekhtech I was stuck on this too. I ended up copying the same format the exoplayer code uses to build the PendingIntents for the PlaybackActions and it worked. Here it is (Kotlin): \r\n\r\n```\r\nobject : PlayerNotificationManager.CustomActionReceiver {\r\n                    override fun getCustomActions(player: Player?): MutableList<String> {\r\n                        return mutableListOf(stopAction)\r\n                    }\r\n\r\n                    override fun createCustomActions(context: Context?, instanceId: Int): MutableMap<String, NotificationCompat.Action> {\r\n                        return mutableMapOf(Pair(stopAction,\r\n                                NotificationCompat.Action(R.drawable.exo_icon_stop, \"Stop\",\r\n                                        PendingIntent.getBroadcast(context, 123, Intent(stopAction).setPackage(context?.packageName), PendingIntent.FLAG_CANCEL_CURRENT)\r\n                                        )\r\n                                ))\r\n                    }\r\n\r\n                    override fun onCustomAction(player: Player?, action: String?, intent: Intent?) {\r\n                        when (action) {\r\n                            stopAction -> stop(true)\r\n                        }\r\n                    }\r\n\r\n                }\r\n```"
      },
      {
        "user": "HardikChauhanSA",
        "created_at": "2018-12-18T09:24:45Z",
        "body": "@odiggity25 \r\n\r\nI have tried it your way, but I cannot get this working.\r\n\r\nWhat I want is I want to identify which of the action is clicked in a notification. \r\nHere is my code,\r\n```\r\nobject : PlayerNotificationManager.CustomActionReceiver {\r\n            override fun createCustomActions(context: Context?, instanceId: Int): MutableMap<String, \r\n    NotificationCompat.Action> {\r\n    //                return mutableMapOf()\r\n                val prevAction = Intent()\r\n                prevAction.putExtra(\"action\", actions[0])\r\n                val backwordAction = Intent()\r\n                backwordAction.putExtra(\"action\", actions[1])\r\n                val playAction = Intent()\r\n                playAction.putExtra(\"action\", actions[2])\r\n                val pauseAction = Intent()\r\n                pauseAction.putExtra(\"action\", actions[3])\r\n                val forwardAction = Intent()\r\n                forwardAction.putExtra(\"action\", actions[4])\r\n                val nextAction = Intent()\r\n                nextAction.putExtra(\"action\", actions[5])\r\n                return mutableMapOf(\r\n                        Pair(actions[0], NotificationCompat.Action(R.drawable.exo_icon_previous, actions[0],\r\n                                PendingIntent.getBroadcast(context, 0, Intent(prevAction).setPackage(context?.packageName), PendingIntent.FLAG_CANCEL_CURRENT))),\r\n                        Pair(actions[1], NotificationCompat.Action(R.drawable.exo_icon_rewind, actions[1],\r\n                                PendingIntent.getBroadcast(context, 0, Intent(backwordAction).setPackage(context?.packageName), PendingIntent.FLAG_CANCEL_CURRENT))),\r\n                        Pair(actions[2], NotificationCompat.Action(R.drawable.exo_icon_play, actions[2],\r\n                                PendingIntent.getBroadcast(context, 0, Intent(playAction).setPackage(context?.packageName), PendingIntent.FLAG_CANCEL_CURRENT))),\r\n                        Pair(actions[3], NotificationCompat.Action(R.drawable.exo_icon_pause, actions[3],\r\n                                PendingIntent.getBroadcast(context, 0, Intent(pauseAction).setPackage(context?.packageName), PendingIntent.FLAG_CANCEL_CURRENT))),\r\n                        Pair(actions[4], NotificationCompat.Action(R.drawable.exo_icon_fastforward, actions[4],\r\n                                PendingIntent.getBroadcast(context, 0, Intent(forwardAction).setPackage(context?.packageName), PendingIntent.FLAG_CANCEL_CURRENT))),\r\n                        Pair(actions[5], NotificationCompat.Action(R.drawable.exo_icon_next, actions[5],\r\n                                PendingIntent.getBroadcast(context, 0, Intent(nextAction).setPackage(context?.packageName), PendingIntent.FLAG_CANCEL_CURRENT)))\r\n                )\r\n            }\r\n\r\n            override fun getCustomActions(player: Player?): MutableList<String> {\r\n                return actions\r\n            }\r\n\r\n            override fun onCustomAction(player: Player?, action: String?, intent: Intent?) {\r\n                LogUtils.e(action ?: \"\")\r\n            }\r\n}\r\n```\r\n\r\nCan you please check and let me know what's wrong?"
      },
      {
        "user": "HardikChauhanSA",
        "created_at": "2018-12-20T05:03:59Z",
        "body": "Hello\r\n\r\nAnyone can please check this and let me know??"
      },
      {
        "user": "HardikChauhanSA",
        "created_at": "2018-12-21T11:47:43Z",
        "body": "Anyone to reply on this???"
      },
      {
        "user": "marcbaechinger",
        "created_at": "2019-01-10T17:55:16Z",
        "body": "Sorry for my late response. This looks about right. You need to:\r\n\r\n1. Create a PlayerNotificationManager.CustomActionReceiver and pass it to the constructor of the manager.\r\n2. CustomActionReceiver.createCustomActions(): needs to return all the actions you want to use. This looks fine with your code.\r\n3. CustomActionReceiver.getCustomActions(Player) returns a list with the name of the actions for which buttons should be added to the notifications. \r\n\r\nIf these things are in place CustomActionReceiver.onCustomAction(player, action, intent) where you can identify the action by the action parameter:\r\n\r\n```\r\nswitch (action) {\r\n  case \"my-action\":\r\n   // do something\r\n   break;\r\n  case \"...\":\r\n  doSomethingElse();\r\n  break;\r\n}\r\n```\r\n\r\n"
      },
      {
        "user": "dennykurniawan48",
        "created_at": "2019-03-22T05:35:13Z",
        "body": "@marcbaechinger I have follow your instruction to my code, but it still doesn't work, is there any additional step for this? Thanks."
      },
      {
        "user": "dennykurniawan48",
        "created_at": "2019-03-22T21:38:36Z",
        "body": "This is my custom action receiver class:\r\n```\r\n    private class customAction implements PlayerNotificationManager.CustomActionReceiver{\r\n        @Override\r\n        public Map<String, NotificationCompat.Action> createCustomActions(Context context, int instanceId) {\r\n            Intent intent = new Intent(\"Favourite\").setPackage(context.getPackageName());\r\n            PendingIntent pendingIntent = PendingIntent.getBroadcast(\r\n                    context, instanceId, intent, PendingIntent.FLAG_CANCEL_CURRENT);\r\n            \r\n            NotificationCompat.Action prev = new NotificationCompat.Action(\r\n                    R.mipmap.ic_prev,\r\n                    ACTION_PREVIOUS,\r\n                    pendingIntent\r\n            );\r\n\r\n            NotificationCompat.Action play = new NotificationCompat.Action(\r\n                    R.mipmap.ic_play,\r\n                    ACTION_PLAY,\r\n                    pendingIntent\r\n            );\r\n\r\n            NotificationCompat.Action pause = new NotificationCompat.Action(\r\n                    R.mipmap.ic_pause,\r\n                    ACTION_PAUSE,\r\n                    pendingIntent\r\n            );\r\n\r\n            NotificationCompat.Action next = new NotificationCompat.Action(\r\n                    R.mipmap.ic_next,\r\n                    ACTION_NEXT,\r\n                    pendingIntent\r\n            );\r\n\r\n            Map<String, NotificationCompat.Action> actionMap = new HashMap<>();\r\n            actionMap.put(ACTION_PREVIOUS, prev);\r\n            actionMap.put(ACTION_PLAY, play);\r\n            actionMap.put(ACTION_PAUSE, pause);\r\n            actionMap.put(ACTION_NEXT, next);\r\n            return actionMap;\r\n        }\r\n\r\n        @Override\r\n        public List<String> getCustomActions(Player player) {\r\n            List<String> customActions = new ArrayList<>();\r\n            customActions.add(ACTION_PREVIOUS);\r\n            if(player.getPlayWhenReady()) {\r\n                customActions.add(ACTION_PAUSE);\r\n            }else{\r\n                customActions.add(ACTION_PLAY);\r\n            }\r\n            customActions.add(ACTION_NEXT);\r\n            return customActions;\r\n        }\r\n\r\n        @Override\r\n        public void onCustomAction(Player player, String action, Intent intent) {\r\n            Log.d(\"test tag\", action);\r\n            Log.d(\"test tag2\", intent.getAction());\r\n            switch (action) {\r\n                case  ACTION_PLAY : {\r\n                    Log.d(\"test tag\", \"play\");\r\n                    controlDispatcher.dispatchSetPlayWhenReady(player, action.equals(ACTION_PLAY));\r\n                    break;\r\n                }case  ACTION_PAUSE : {\r\n                    Log.d(\"test tag\", \"pause\");\r\n                    controlDispatcher.dispatchSetPlayWhenReady(player, action.equals(ACTION_PLAY));\r\n                    break;\r\n                }case ACTION_NEXT : {\r\n                    Log.d(\"test tag\", \"next\");\r\n                    int nextWindowIndex = player.getNextWindowIndex();\r\n                    if (nextWindowIndex != C.INDEX_UNSET) {\r\n                        controlDispatcher.dispatchSeekTo(player, nextWindowIndex, C.TIME_UNSET);\r\n                    }\r\n                    break;\r\n                }case ACTION_PREVIOUS : {\r\n                    Log.d(\"test tag\", \"prev\");\r\n                    player.getCurrentTimeline().getWindow(player.getCurrentWindowIndex(), window);\r\n                    int previousWindowIndex = player.getPreviousWindowIndex();\r\n                    if (previousWindowIndex != C.INDEX_UNSET && (window.isDynamic && !window.isSeekable)) {\r\n                        controlDispatcher.dispatchSeekTo(player, previousWindowIndex, C.TIME_UNSET);\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n```\r\n\r\nand this is my player notification manager:\r\n```\r\n playerNotification = new PlayerNotificationManager(context, \"Test Play\", 40, new PlayerNotificationManager.MediaDescriptionAdapter() {\r\n            @Override\r\n            public String getCurrentContentTitle(Player player) {\r\n                return data.get(player.getCurrentWindowIndex()).getTitle();\r\n            }\r\n\r\n            @Nullable\r\n            @Override\r\n            public PendingIntent createCurrentContentIntent(Player player) {\r\n                Intent i = new Intent(context, MainActivity.class);\r\n                return PendingIntent.getActivity(context,0, i, PendingIntent.FLAG_UPDATE_CURRENT);\r\n            }\r\n\r\n            @Nullable\r\n            @Override\r\n            public String getCurrentContentText(Player player) {\r\n                return data.get(player.getCurrentWindowIndex()).getSubtitle();\r\n            }\r\n\r\n            @Nullable\r\n            @Override\r\n            public Bitmap getCurrentLargeIcon(Player player, PlayerNotificationManager.BitmapCallback callback) {\r\n                return getBitmap();\r\n            }\r\n        }, new customAction());\r\n```\r\nwhen I click button notification in my logcat, it show : \r\n\r\n> D/StatusBar: Clicked on button 2 for 0|com.mypackage.musiconlinestream|100|null|10039\r\n\r\nbut `onCustomAction` is not getting called, how do I fix this?, thanks."
      }
    ]
  },
  {
    "number": 5043,
    "title": "Have Exoplayer support get all list content Webvtt ?",
    "created_at": "2018-11-02T07:41:14Z",
    "closed_at": "2018-11-02T10:52:16Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5043",
    "body": "Hi. Please help me\r\nI using exoplayer version 4.7.1. \r\nI add webvtt subtitle. I want to... \r\nGet all webvtt list Cue when starting the player. I tried but don't success.\r\n\r\n```\r\nmSimpleExoPlayer.getTextComponent().addTextOutput(textOutput);\r\n TextOutput textOutput = new TextOutput() {\r\n        @Override\r\n        public void onCues(List<Cue> cues) {\r\n\r\n        }\r\n    };\r\n```\r\nNot working, text render when play video. don't get all.\r\n\r\n> Img 1\r\n> 00:00:05.000 --> 00:00:15.000\r\n> trailer-secretsofthethreekingdoms-logo.jpg#xywh=0,0,100,56\r\n> \r\n> Img 2\r\n> 00:00:15.000 --> 00:00:25.000\r\n> trailer-secretsofthethreekingdoms-logo.jpg#xywh=100,0,100,56\r\n> \r\n> Img 3\r\n> 00:00:25.000 --> 00:00:35.000\r\n> trailer-secretsofthethreekingdoms-logo.jpg#xywh=200,0,100,56\r\n> \r\n> Img 4\r\n> 00:00:35.000 --> 00:00:45.000\r\n> trailer-secretsofthethreekingdoms-logo.jpg#xywh=300,0,100,56\r\n> \r\n> Img 5\r\n> 00:00:45.000 --> 00:00:55.000\r\n> trailer-secretsofthethreekingdoms-logo.jpg#xywh=400,0,100,56\r\n> \r\n> Img 6\r\n> 00:00:55.000 --> 00:01:05.000\r\n> trailer-secretsofthethreekingdoms-logo.jpg#xywh=500,0,100,56\r\n> \r\n> Img 7\r\n> 00:01:05.000 --> 00:01:15.000\r\n> trailer-secretsofthethreekingdoms-logo.jpg#xywh=600,0,100,56\r\n> \r\n> Img 8\r\n> 00:01:15.000 --> 00:01:25.000\r\n> trailer-secretsofthethreekingdoms-logo.jpg#xywh=700,0,100,56\r\n> \r\n> Img 9\r\n> 00:01:25.000 --> 00:01:35.000\r\n> trailer-secretsofthethreekingdoms-logo.jpg#xywh=800,0,100,56\r\n> \r\n> Img 10\r\n> 00:01:35.000 --> 00:01:45.000\r\n> trailer-secretsofthethreekingdoms-logo.jpg#xywh=900,0,100,56\r\n> \r\n> Img 11\r\n> 00:01:45.000 --> 00:01:55.000\r\n> trailer-secretsofthethreekingdoms-logo.jpg#xywh=1000,0,100,56\r\n> \r\n> Img 12\r\n> 00:01:55.000 --> 00:02:05.000\r\n> trailer-secretsofthethreekingdoms-logo.jpg#xywh=1100,0,100,56\r\n> \r\n> Img 13\r\n> 00:02:05.000 --> 00:02:15.000\r\n> trailer-secretsofthethreekingdoms-logo.jpg#xywh=1200,0,100,56\r\n> \r\n> Img 14\r\n> 00:02:15.000 --> 00:02:25.000\r\n> trailer-secretsofthethreekingdoms-logo.jpg#xywh=1300,0,100,56\r\n> \r\n> Img 15\r\n> 00:02:25.000 --> 00:02:35.000\r\n> trailer-secretsofthethreekingdoms-logo.jpg#xywh=1400,0,100,56\r\n\r\nThanks",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5043/comments",
    "author": "sangnguyen-it",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2018-11-02T10:52:15Z",
        "body": "We don't support getting hold of the full list. We output the cues at the points in time at which they're supposed to be rendered. Sorry!"
      }
    ]
  },
  {
    "number": 5041,
    "title": "Audio out of sync problem",
    "created_at": "2018-11-02T02:36:17Z",
    "closed_at": "2018-11-02T08:23:03Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5041",
    "body": "Thank you for sharing video is network video MP4 format set infinite loop setLooping(integer.max_value) loop playing for 2 hours is ok but if it is more than 8 hours there is an audio out-of-sync problem  My English is not good enough to use the translation software",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5041/comments",
    "author": "nuoyan2",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2018-11-02T08:19:52Z",
        "body": "Are you using ExoPlayer 2.9.0? #4559 may be relevant. Please attach the MP4 if you want us to investigate further."
      },
      {
        "user": "nuoyan2",
        "created_at": "2018-11-02T08:22:40Z",
        "body": "是的 几个小时前找到了这个方法  ＃4559  现在已经不出现音频不同步问题了 感谢"
      },
      {
        "user": "nuoyan2",
        "created_at": "2018-11-02T08:23:03Z",
        "body": "Yes, I found this method a few hours ago, # 4559. Now there is no audio out-of-sync problem, thank you"
      }
    ]
  },
  {
    "number": 5025,
    "title": "Params of TrackOutput.ampleData(...) & TrackOutput.sampleMetadata(...) in Custom Extractor",
    "created_at": "2018-10-30T13:33:57Z",
    "closed_at": "2018-11-23T19:20:42Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5025",
    "body": "To achieve play surveillance camera video in ExoPlayer, I create two custom class respectively implements\r\nclass Extractor and Datasource.\r\nFor video:\r\nWhen I receive video frame and put the data in ParsableByteArray, I can transmit the data through\r\n```java\r\nTrackOutput.sampleData(data, data.length);\r\nTrackOutput.sampleMetadata(timeUs, keyFrame ? C.BUFFER_FLAG_KEY_FRAME : 0, data.length, 0, null);\r\n```\r\nthe above code is execute in method: `read(...)` in the custom `Extractor`.\r\nIt is OK to play video.\r\n\r\n`(Problem)` But, for audio, this method `read(...)` will no longer running after running several times. By debug the code, in my opinion, it may be the audio frame data and its length、offset or other params pass to `TrackOutput` that cause this problem.\r\nFor example:\r\n\r\nIf the audio used `G711A` or `G711U`, only if call method `sampleData(...)` by passing the real audio data and length (data arrays of ParsableByteArray I passed can not has any other spare data, and the offset is 0), the video and audio can be displayed.\r\nFor `AAC`, no matter what passed to method `sampleData(...)`, the video or audio can not been displayed. and the method `read(...)` will no longer running after running several times.\r\nPlease explain the param in these two method below. Especially the ParsableByteArray、length、size and offset\r\n```java\r\nTrackOutput.sampleDatasampleData(ParsableByteArray data, int length);\r\nTrackOutput.sampleMetadata(long timeUs, int flags, int size, int offset, CryptoData encryptionData);\r\n```\r\nThank you very much!",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5025/comments",
    "author": "SValence",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2018-10-30T13:39:05Z",
        "body": "This question is outside the scope of this issue tracker, as it relates to custom components. I'll leave it open for a few weeks in case anyone can provide an answer though!"
      }
    ]
  },
  {
    "number": 5023,
    "title": "Show live position on progress bar when player paused",
    "created_at": "2018-10-30T10:48:30Z",
    "closed_at": "2018-12-18T20:15:34Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5023",
    "body": "",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5023/comments",
    "author": "NazikSoft",
    "comments": [
      {
        "user": "NazikSoft",
        "created_at": "2018-10-30T10:51:14Z",
        "body": "Hi. How can I show live position on progress bar when I paused a player. Thanks"
      },
      {
        "user": "ojw28",
        "created_at": "2018-10-31T11:59:07Z",
        "body": "This should already happen for DASH / SS / HLS streams. For progressive live streams (e.g. MP3) this is not supported."
      },
      {
        "user": "NazikSoft",
        "created_at": "2018-10-31T14:00:10Z",
        "body": "I play a video stream (live tv), I guess it's HLS  stream. After pause, user play from last position, but I want show current live position on progressBar. Maybe I can get it from method player.seekToDefaultPosition()?"
      },
      {
        "user": "ojw28",
        "created_at": "2018-11-23T20:45:46Z",
        "body": "Calling `seekToDefaultPosition` will seek the player to the live edge. I don't understand what it means to show the \"current live position on progressBar\". The current live position is by definition the far right of the progress bar."
      },
      {
        "user": "ojw28",
        "created_at": "2018-12-18T20:15:34Z",
        "body": "Closing due to lack of clarification."
      }
    ]
  },
  {
    "number": 5021,
    "title": "getBitrateEstimate() works something wrong.",
    "created_at": "2018-10-30T05:04:47Z",
    "closed_at": "2018-11-19T15:25:05Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/5021",
    "body": "### Issue description\r\ni'm developing my app using Exoplayer.\r\nmost of all. it worked fine.\r\nbut i want to show current bitrate on my player information.\r\nSo i used DefaultBandwidthMeter.\r\nand i checked bitrate every 10 sec.\r\n\r\nDefaultBandwidthMeter BANDWIDTH_METER = new DefaultBandwidthMeter();\r\n\r\nclass BitrateTask extends TimerTask {\r\n    @Override\r\n    public void run() {\r\n      Log.d(\"COT\", \"send bitrate=\" + BANDWIDTH_METER.getBitrateEstimate());\r\n    }\r\n  }\r\n\r\nif it's not issue,  that times,  could you tell me how to get bitrate in this sample url?\r\n\r\n\r\n### Reproduction steps\r\nalways \r\n\r\n### Link to test content\r\ni will send you test url with issue number.\r\n\r\n### Version of ExoPlayer being used\r\n2.8.3\r\n\r\n### Device(s) and version(s) of Android being used\r\ndevice name : shaomi mibox 3\r\nandroid version : 8.0\r\n\r\n### A full bug report captured from the device\r\n\r\n2018-10-30 13:52:27.596 12865-12865/com.google.android.exoplayer2.demo D/EventLogger: downstreamFormatChanged [10.87, 9.81, window=0, period=0, id=5, mimeType=video/avc, bitrate=3000000, res=1280x720]\r\n2018-10-30 13:52:28.577 12865-13088/com.google.android.exoplayer2.demo D/COT: send bitrate=34817456\r\n2018-10-30 13:52:31.577 12865-13088/com.google.android.exoplayer2.demo D/COT: send bitrate=34817456\r\n**2018-10-30 13:52:32.467 12865-13075/com.google.android.exoplayer2.demo I/MediaCodecLogger: com.google.android.exoplayer2.demo.HW.video.avc.bitrateInKbps = 2584**\r\n2018-10-30 13:52:32.618 12865-13083/com.google.android.exoplayer2.demo I/MediaCodecLogger: com.google.android.exoplayer2.demo.SW.audio.mp4a.bitrateInKbps = 95\r\n**2018-10-30 13:52:34.577 12865-13088/com.google.android.exoplayer2.demo D/COT: send bitrate=34817456**\r\n2018-10-30 13:52:37.485 12865-13075/com.google.android.exoplayer2.demo I/MediaCodecLogger: com.google.android.exoplayer2.demo.HW.video.avc.bitrateInKbps = 2039\r\n2018-10-30 13:52:37.578 12865-13088/com.google.android.exoplayer2.demo D/COT: send bitrate=34817456\r\n2018-10-30 13:52:37.709 12865-13083/com.google.android.exoplayer2.demo I/MediaCodecLogger: com.google.android.exoplayer2.demo.SW.audio.mp4a.bitrateInKbps = 94\r\n2018-10-30 13:52:40.577 12865-13088/com.google.android.exoplayer2.demo D/COT: send bitrate=34817456\r\n2018-10-30 13:52:42.600 12865-13075/com.google.android.exoplayer2.demo I/MediaCodecLogger: com.google.android.exoplayer2.demo.HW.video.avc.bitrateInKbps = 2363\r\n2018-10-30 13:52:42.782 12865-13083/com.google.android.exoplayer2.demo I/MediaCodecLogger: com.google.android.exoplayer2.demo.SW.audio.mp4a.bitrateInKbps = 96\r\n2018-10-30 13:52:43.577 12865-13088/com.google.android.exoplayer2.demo D/COT: send bitrate=34817456\r\n2018-10-30 13:52:46.577 12865-13088/com.google.android.exoplayer2.demo D/COT: send bitrate=34817456\r\n2018-10-30 13:52:47.720 12865-13075/com.google.android.exoplayer2.demo I/MediaCodecLogger: com.google.android.exoplayer2.demo.HW.video.avc.bitrateInKbps = 3075\r\n2018-10-30 13:52:47.851 12865-13083/com.google.android.exoplayer2.demo I/MediaCodecLogger: com.google.android.exoplayer2.demo.SW.audio.mp4a.bitrateInKbps = 95\r\n2018-10-30 13:52:49.577 12865-13088/com.google.android.exoplayer2.demo D/COT: send bitrate=34817456\r\n2018-10-30 13:52:52.578 12865-13088/com.google.android.exoplayer2.demo D/COT: send bitrate=34817456\r\n2018-10-30 13:52:52.837 12865-13075/com.google.android.exoplayer2.demo I/MediaCodecLogger: com.google.android.exoplayer2.demo.HW.video.avc.bitrateInKbps = 1421\r\n2018-10-30 13:52:52.941 12865-13083/com.google.android.exoplayer2.demo I/MediaCodecLogger: com.google.android.exoplayer2.demo.SW.audio.mp4a.bitrateInKbps = 95\r\n2018-10-30 13:52:55.579 12865-13088/com.google.android.exoplayer2.demo D/COT: send bitrate=34817456\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/5021/comments",
    "author": "hereisclient",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2018-10-30T09:26:37Z",
        "body": "I think there is some confusion around the various bitrates here. \r\n\r\nThe logs look correct and sensible:\r\n - There is a video track with a variable bitrate around 3 Mbps (\"video.avc.bitrateInKbps = 2584\")\r\n - There is also an audio track with a bitrate of 95 kbps (\"audio.mp4a.bitrateInKbps = 95\")\r\n - And your bandwidth meter measured a network bitrate of around 34 Mbps (\"send bitrate=34817456\")\r\n\r\nIf that wasn't the question, please rephrase a bit to let us know where you see a problem."
      },
      {
        "user": "hereisclient",
        "created_at": "2018-10-30T11:18:06Z",
        "body": "i sent you test vod url serveral hours ago.\r\nplease could you test my url that i sent?\r\n\r\nif bandwidth value from getBitrateEstimate() is correct or not.\r\n\r\n \r\n"
      },
      {
        "user": "tonihei",
        "created_at": "2018-10-30T12:03:13Z",
        "body": "Checked your stream but everything works as I explained above. "
      },
      {
        "user": "hereisclient",
        "created_at": "2018-10-31T06:06:26Z",
        "body": "i just want to know  how i can estimate bitrate correctly.\r\nyou mean there is no solution to get right bitrate from test url by now? \r\ni really want know how to get right bitrate from exoplayer.\r\nbut actually , getBitrateEstimate() function doesn't work well.\r\n\r\nif you know the other way to get bitrate from exoplayer. please let me know about that.\r\nthis is a little important issue for me.\r\n\r\n"
      },
      {
        "user": "tonihei",
        "created_at": "2018-10-31T09:01:04Z",
        "body": "Which of the bitrates do you want to know? \r\n- If it's the network bitrate, `BandwidthMeter.getBitrateEstimate()` gives the best estimate you can get from the player. \r\n- If it's the average bitrate of the video or audio format, please listen to `AnalyticsListener.onDownstreamFormatChanged` to get the currently selected format. The Format contains a `bitrate` field which gives you the average bitrate of the format.\r\n- For more fine-grained information, you can also listen to `AnalyticsListener.onLoadStarted` and similar callbacks to get information about the individual media chunks being loaded."
      },
      {
        "user": "sridhard",
        "created_at": "2018-10-31T13:39:57Z",
        "body": "@tonihei \r\n\r\nI also face issues in bitrate/bandwidth. I have implemented the onBandwidthSample of DefaultBandwidthMeter. The elapsedMs in this callback is coming very low. Actual network speed is 2-3 Mbps. But the bitrate in  onBandwidthSample is 20-30Mbps.\r\n\r\nI have checked okHttpDataSource.java of exoplayer. In that I find that exoplayer is downloading the HTTP media synchronously as below:\r\n\r\n@Override\r\n  public long open(DataSpec dataSpec) throws HttpDataSourceException {\r\n    this.dataSpec = dataSpec;\r\n    this.bytesRead = 0;\r\n    this.bytesSkipped = 0;\r\n    transferInitializing(dataSpec);\r\n\r\n    Request request = makeRequest(dataSpec);\r\n    Response response;\r\n    ResponseBody responseBody;\r\n    try {\r\n      **_this.response = callFactory.newCall(request).execute();\r\n      response = this.response;_**\r\n      responseBody = Assertions.checkNotNull(response.body());\r\n      responseByteStream = responseBody.byteStream();\r\n    } catch (IOException e) {\r\n      throw new HttpDataSourceException(\r\n          \"Unable to connect to \" + dataSpec.uri, e, dataSpec, HttpDataSourceException.TYPE_OPEN);\r\n    }\r\n\r\nAfter the above codeblock okHttpDataSource is giving the transferStarted() indication.\r\n\r\nThis means that the startTime is captured after the execute() is success which may be after downloading the content. That is the reason for very low elapsedMs value. I am getting this value in the range of 10-50ms."
      },
      {
        "user": "tonihei",
        "created_at": "2018-10-31T13:45:32Z",
        "body": "@sridhard That may be an issue and we were planning to look at the accuracy of our estimates in the near future. But I think it's unrelated to original question above."
      },
      {
        "user": "hereisclient",
        "created_at": "2018-11-01T03:08:40Z",
        "body": "oh i really got it what you're trying to say .\r\n\r\nThere is a lot of bitrate.\r\n\r\nbut my need is to get real bitrate during exoplay is playing somecontent not network bandwidth.\r\nmy goal is just like below log.\r\n\r\n**2018-10-30 13:52:52.837 12865-13075/com.google.android.exoplayer2.demo I/MediaCodecLogger: com.google.android.exoplayer2.demo.HW.video.avc.bitrateInKbps = 1421\r\n2018-10-30 13:52:52.941 12865-13083/com.google.android.exoplayer2.demo I/MediaCodecLogger: com.google.android.exoplayer2.demo.SW.audio.mp4a.bitrateInKbps = 95**\r\n\r\nbecause smooth streaming bitrate is changing every time .\r\nit depands on real network bandwidth.\r\n\r\nIf it's the average bitrate of the video or audio format, please listen to AnalyticsListener.onDownstreamFormatChanged to get the currently selected format. The Format contains a bitrate field which gives you the average bitrate of the format.\r\nFor more fine-grained information, you can also listen to AnalyticsListener.onLoadStarted and similar callbacks to get information about the individual media chunks being loaded.\r\n\r\nbut two case of your examples , as far as i know,  i can use  mp4 format.   \r\nbecause mp4 contents has only  static bitrate.\r\nso in conclusion, \r\nmy question is \r\nhow can i get bitrate (just like mediacodec log) using adaptive streaming?\r\n\r\n\r\n\r\n\r\n"
      },
      {
        "user": "tonihei",
        "created_at": "2018-11-01T09:09:28Z",
        "body": "As I said above, for adaptive streaming, please listen to AnalyticsListener.onLoadStarted and/or AnalyticsListener.onLoadFinished to get information about the individual loaded chunks. This information includes the size and the media times of the chunk, so that you can calculate the bitrate from that. "
      },
      {
        "user": "tonihei",
        "created_at": "2018-11-19T15:25:05Z",
        "body": "I assume the question was answered. Closing the issue, but feel free to reopen if needed."
      }
    ]
  },
  {
    "number": 4990,
    "title": "export file(mp4 ,mp3) after download service completed",
    "created_at": "2018-10-22T09:51:51Z",
    "closed_at": "2018-10-22T20:12:05Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4990",
    "body": "i want export final file from stream cache or download service complete.is it impossible?\r\nif that isn't impossible, can i download a media file with other downloader and play that when download in progress and file not complete?\r\n\r\nthanks.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4990/comments",
    "author": "mupm1",
    "comments": [
      {
        "user": "erdemguven",
        "created_at": "2018-10-22T20:12:05Z",
        "body": "It isn't possible to export files from cache but you can use a custom DataSink with TeeDataSource to write the data to a file. You should handle cases where file end is streamed before the data preceding it.\r\n\r\nIf you externally download the file and try to play it during download, the file would be only played until the point where it was downloading when the playback started."
      },
      {
        "user": "natario1",
        "created_at": "2018-12-07T19:40:04Z",
        "body": "@erdemguven could you please tell me if my understanding is correct - one could write the custom `DataSink`,  pass it to a `DownloaderConstructorHelper` that is used to construct a `DownloadManager`, and request a download using the download service.\r\n\r\nIn this case, as I see,\r\n- There is no need to worry about data being streamed before the data preceding it\r\n- There is no need to use `TeeDataSource` as the downloader task is to pass data to the cache thus to our custom sink\r\n\r\nIs this correct? \r\n\r\nI'm also not sure if the data passed by the downloader to the cache sink is the actual buffer coming from the source, or if it is decoded/altered in any way. But I guess it's the source buffer.\r\n"
      }
    ]
  },
  {
    "number": 4985,
    "title": "Improve movie loading!",
    "created_at": "2018-10-19T16:29:15Z",
    "closed_at": "2018-10-19T17:35:37Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4985",
    "body": "My exoplayer loads the videos very slow, all the time stopping to load the video.\r\n\r\nhow do I improve buffering and upload videos without too many uploads.\r\n\r\nthank you",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4985/comments",
    "author": "admobwebmaster",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2018-10-19T17:35:37Z",
        "body": "This kind of bug report is completely unactionable by us, because it doesn't provide any useful information to help us reproduce the problem. Or even to determine whether the issue is client side or server side. Closing. If you want to file a new issue, please fill out the issue template properly."
      }
    ]
  },
  {
    "number": 4983,
    "title": "How to know if exoplayer detects any EXT-DISCONTINUITY tag in HLS stream",
    "created_at": "2018-10-19T13:24:08Z",
    "closed_at": "2018-10-22T14:15:35Z",
    "labels": [
      "question",
      "need more info"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4983",
    "body": "Is there a method which gets executed whenever exoplayer detects a ext-x-Discontinuity tag.\r\n\r\nHow can reset the player at the point where exoplayer detects ext-discontinuity tag. ",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4983/comments",
    "author": "anandsingh2903",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2018-10-19T20:51:30Z",
        "body": "I don't think there's a callback for this at the moment, though it shouldn't be necessary to reset the player when reaching a discontinuity. Over to @AquilesCanta to confirm/deny."
      },
      {
        "user": "anandsingh2903",
        "created_at": "2018-10-20T03:06:34Z",
        "body": "I get AudioTrack : Discontinuity Detected log in the exoplayer logs. Sometimes channel gets changed even though at that time also.. Audio changes immediately but the video changes after some seconds and sometimes player just gets stuck in buffering state even though when I seek forward or backward. Player starts playing changed video then. "
      },
      {
        "user": "AquilesCanta",
        "created_at": "2018-10-22T14:15:35Z",
        "body": "I cannot think of a way to do this using the public APIs, unfortunately. As @andrewlewis points out, this shouldn't be necessary unless there is a non-supported track change in the channels. We might be able to provide more assistance with a media sample with which we can reproduce ourselves. If you provide a media sample, we'll reopen the issue."
      }
    ]
  },
  {
    "number": 4982,
    "title": "Showing trackselector as 360p ,480p, 720p etc",
    "created_at": "2018-10-19T12:09:25Z",
    "closed_at": "2018-10-30T11:18:59Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4982",
    "body": "### Issue description\r\nI am using trackselector component in one of the app but i want to show the quality as 360p, 480p, 720p rather than the resolution\r\n\r\n### Version of ExoPlayer being used\r\n2.9.0",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4982/comments",
    "author": "Faiyyaz",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2018-10-19T12:26:12Z",
        "body": "You can use `TrackSelectionView.setTrackNameProvider` to set your own provider of track names. The custom track name provided can map the format values to whatever you like them to be. For your specific question, it's probably best to override DefaultTrackNameProvider and just replace `buildResolutionString`."
      },
      {
        "user": "tonihei",
        "created_at": "2018-10-30T11:18:59Z",
        "body": "Closing because the question was answered. Feel free to reopen if not."
      }
    ]
  },
  {
    "number": 4971,
    "title": "Getting the resolution(1080p,430p etc) when a video is played in \"AUTO\" in quality",
    "created_at": "2018-10-17T08:46:23Z",
    "closed_at": "2018-10-17T11:36:20Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4971",
    "body": "Is there a way in which we can show the resolution when auto is selected in quality.I just want to show if auto is selected the resolution its selecting to play the video\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4971/comments",
    "author": "meenukrishnamurthy",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2018-10-17T08:51:45Z",
        "body": "Please add a `VideoListener` to `SimpleExoPlayer.addVideoListener`. The callback `onVideoSizeChanged` notifies you when the currently displayed size changes. \r\n\r\nIf you need the `Format` object of the selected quality, please add an `AnalyticsListener` and listen to `onDownStreamFormatChanged` which is similar but gives you the `Format` object and selection reason and other data."
      },
      {
        "user": "meenukrishnamurthy",
        "created_at": "2018-10-17T09:23:21Z",
        "body": "I am actually using an older fork.Have added exoplayer as library in my app.There is no analytics listener in it.I just want to know which track is being selected while playing Auto.My video format is HLS"
      },
      {
        "user": "tonihei",
        "created_at": "2018-10-17T09:30:25Z",
        "body": "You can use `addVideoDebugListener` on older versions with the same callback. \r\n\r\nNote that for HLS specifically, the `Format` reported in `onDownStreamFormatChanged` may include both video and audio if they are muxed together. In this case you'll only get the actual video size when listening to `onVideoSizeChanged`. Depends on what information you need."
      },
      {
        "user": "meenukrishnamurthy",
        "created_at": "2018-10-17T11:36:20Z",
        "body": "thanks i used onVideoSizeChanged.Its working"
      }
    ]
  },
  {
    "number": 4959,
    "title": "Is it possible to download only specific .ts files of HLS playlist?",
    "created_at": "2018-10-15T17:07:32Z",
    "closed_at": "2018-10-16T23:44:09Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4959",
    "body": "For example this playlist:\r\n\r\n`#EXTM3U\r\n#EXT-X-VERSION:3\r\n#EXT-X-TARGETDURATION:13\r\n#ID3-EQUIV-TDTG:2018-10-10T20:51:50\r\n#EXT-X-PLAYLIST-TYPE:EVENT\r\n#EXT-X-MEDIA-SEQUENCE:0\r\n#EXTINF:12.500,\r\n0.ts\r\n#EXTINF:12.500,\r\n1.ts\r\n#EXTINF:12.500,\r\n2.ts\r\n#EXTINF:12.500,\r\n3.ts\r\n#EXTINF:12.500,\r\n4.ts\r\n#EXTINF:12.500,\r\n5.ts\r\n#EXTINF:12.500,\r\n6.ts\r\n#EXTINF:12.500,\r\n7.ts\r\n#EXTINF:12.500, ...\r\n1786.ts\r\n#EXTINF:6.500, \r\n1787.ts\r\n#EXT-X-ENDLIST\r\n`\r\n\r\nCan i download only from 100th to 400th?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4959/comments",
    "author": "AndreyAsadchy",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2018-10-16T23:44:09Z",
        "body": "Support for partially downloading an adaptive stream is tracked by #1497."
      }
    ]
  },
  {
    "number": 4956,
    "title": "Reset Exoplayer when AudioTrack Discontinuity is detected",
    "created_at": "2018-10-15T06:36:37Z",
    "closed_at": "2018-10-17T05:03:36Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4956",
    "body": "How can I reset the exoplayer whenever there's a audio track Discontinuity detected. ",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4956/comments",
    "author": "anandsingh2903",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2018-10-16T23:52:26Z",
        "body": "There isn't a way to listen for this event directly at the moment (you'd need a custom audio sink). Could you provide some more details about when you see the discontinuities and why the built-in behavior of resynchronizing is not sufficient? Thanks."
      },
      {
        "user": "anandsingh2903",
        "created_at": "2018-10-17T04:39:44Z",
        "body": "I think built in behavior is working correctly, it's just that maybe i am testing recorded feed and the player is getting stuck when the feed starts again from same loop. Now i am trying to test it on Live Feed. Will report if the issue exists in the live feed also."
      }
    ]
  },
  {
    "number": 4953,
    "title": "vp9 x86 build issue not x32 on x86_64 system",
    "created_at": "2018-10-14T03:57:31Z",
    "closed_at": "2018-10-19T20:59:05Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4953",
    "body": "My system is ubuntu 18.04 lts X86_64 \r\n\r\nwhile building the vp9 extension, armeabi, armeabi-v7a, mips  build is ok but in x86 it failing  \r\n`# ../../libvpx/configure --force-target=x86-android-gcc --sdk-path=/media/subhanjan/Driver/linux-ndk --disable-sse2 --disable-sse3 --disable-ssse3 --disable-sse4_1 --disable-avx --disable-avx2 --enable-pic --disable-examples --disable-docs --enable-realtime-only --disable-vp8 --disable-vp9-encoder --disable-webm-io --disable-libyuv --disable-runtime-cpu-detect --extra-cflags=     -isystem /media/subhanjan/Driver/linux-ndk/sysroot/usr/include/arm-linux-androideabi     -isystem /media/subhanjan/Driver/linux-ndk/sysroot/usr/include     \r\n  enabling vp9_decoder\r\nConfiguring for target 'x86-android-gcc'\r\n  enabling x86\r\ncheck_cpp\r\nBEGIN /tmp/vpx-conf-19416-17892.c\r\n     1\t#if !defined(__ILP32__) || !defined(__x86_64__)\r\n     2\t#error \"not x32\"\r\n     3\t#endif\r\nEND /tmp/vpx-conf-19416-17892.c\r\ngcc -E -o /tmp/vpx-conf-19416-17892.o /tmp/vpx-conf-19416-17892.c\r\n/tmp/vpx-conf-19416-17892.c:2:2: error: #error \"not x32\"\r\n #error \"not x32\"\r\n  ^~~~~\r\ncheck_cflags -mmmx\r\ncheck_cc -Werror -mmmx\r\nBEGIN /tmp/vpx-conf-19416-17892.c\r\n     1\tint x;\r\nEND /tmp/vpx-conf-19416-17892.c\r\ngcc -m32 -Werror -mmmx -c -o /tmp/vpx-conf-19416-17892.o /tmp/vpx-conf-19416-17892.c\r\n  enabling mmx\r\ncheck_cflags -msse\r\ncheck_cc -Werror -msse\r\nBEGIN /tmp/vpx-conf-19416-17892.c\r\n     1\tint x;\r\nEND /tmp/vpx-conf-19416-17892.c\r\ngcc -m32 -Werror -msse -c -o /tmp/vpx-conf-19416-17892.o /tmp/vpx-conf-19416-17892.c\r\n  enabling sse\r\n  using yasm\r\ncheck_cxxflags -DNDEBUG\r\ncheck_cxx -Werror -DNDEBUG\r\nBEGIN /tmp/vpx-conf-19416-17892.cc\r\n     1\tint x;\r\nEND /tmp/vpx-conf-19416-17892.cc\r\ng++ -m32 -Werror -DNDEBUG -c -o /tmp/vpx-conf-19416-17892.o /tmp/vpx-conf-19416-17892.cc\r\ncheck_cflags -DNDEBUG\r\ncheck_cc -Werror -DNDEBUG\r\nBEGIN /tmp/vpx-conf-19416-17892.c\r\n     1\tint x;\r\nEND /tmp/vpx-conf-19416-17892.c\r\ngcc -m32 -Werror -DNDEBUG -c -o /tmp/vpx-conf-19416-17892.o /tmp/vpx-conf-19416-17892.c\r\ncheck_cxxflags -O3\r\ncheck_cxx -Werror -O3\r\nBEGIN /tmp/vpx-conf-19416-17892.cc\r\n     1\tint x;\r\nEND /tmp/vpx-conf-19416-17892.cc\r\ng++ -m32 -DNDEBUG -Werror -O3 -c -o /tmp/vpx-conf-19416-17892.o /tmp/vpx-conf-19416-17892.cc\r\ncheck_cflags -O3\r\ncheck_cc -Werror -O3\r\nBEGIN /tmp/vpx-conf-19416-17892.c\r\n     1\tint x;\r\nEND /tmp/vpx-conf-19416-17892.c\r\ngcc -m32 -DNDEBUG -Werror -O3 -c -o /tmp/vpx-conf-19416-17892.o /tmp/vpx-conf-19416-17892.c\r\ncheck_cxxflags -fPIC\r\ncheck_cxx -Werror -fPIC\r\nBEGIN /tmp/vpx-conf-19416-17892.cc\r\n     1\tint x;\r\nEND /tmp/vpx-conf-19416-17892.cc\r\ng++ -m32 -DNDEBUG -O3 -Werror -fPIC -c -o /tmp/vpx-conf-19416-17892.o /tmp/vpx-conf-19416-17892.cc\r\ncheck_cflags -fPIC\r\ncheck_cc -Werror -fPIC\r\nBEGIN /tmp/vpx-conf-19416-17892.c\r\n     1\tint x;\r\nEND /tmp/vpx-conf-19416-17892.c\r\ngcc -m32 -DNDEBUG -O3 -Werror -fPIC -c -o /tmp/vpx-conf-19416-17892.o /tmp/vpx-conf-19416-17892.c\r\ncheck_cc\r\nBEGIN /tmp/vpx-conf-19416-17892.c\r\n     1\tunsigned int e = 'O'<<24 | '2'<<16 | 'B'<<8 | 'E';\r\nEND /tmp/vpx-conf-19416-17892.c\r\ngcc -m32 -DNDEBUG -O3 -fPIC -c -o /tmp/vpx-conf-19416-17892.o /tmp/vpx-conf-19416-17892.c\r\ncheck_cc\r\nBEGIN /tmp/vpx-conf-19416-17892.c\r\n     1\tstatic inline function() {}\r\nEND /tmp/vpx-conf-19416-17892.c\r\ngcc -m32 -DNDEBUG -O3 -fPIC -c -o /tmp/vpx-conf-19416-17892.o /tmp/vpx-conf-19416-17892.c\r\n/tmp/vpx-conf-19416-17892.c:1:15: warning: return type defaults to ‘int’ [-Wimplicit-int]\r\n static inline function() {}\r\n               ^~~~~~~~\r\ncheck_cxxflags -Wall\r\ncheck_cxx -Werror -Wall\r\nBEGIN /tmp/vpx-conf-19416-17892.cc\r\n     1\tint x;\r\nEND /tmp/vpx-conf-19416-17892.cc\r\ng++ -m32 -DNDEBUG -O3 -fPIC -Werror -Wall -c -o /tmp/vpx-conf-19416-17892.o /tmp/vpx-conf-19416-17892.cc\r\ncheck_cflags -Wall\r\ncheck_cc -Werror -Wall\r\nBEGIN /tmp/vpx-conf-19416-17892.c\r\n     1\tint x;\r\nEND /tmp/vpx-conf-19416-17892.c\r\ngcc -m32 -DNDEBUG -O3 -fPIC -Werror -Wall -c -o /tmp/vpx-conf-19416-17892.o /tmp/vpx-conf-19416-17892.c\r\ncheck_cxxflags -Wdeclaration-after-statement\r\ncheck_cxx -Werror -Wdeclaration-after-statement\r\nBEGIN /tmp/vpx-conf-19416-17892.cc\r\n     1\tint x;\r\nEND /tmp/vpx-conf-19416-17892.cc\r\ng++ -m32 -DNDEBUG -O3 -fPIC -Wall -Werror -Wdeclaration-after-statement -c -o /tmp/vpx-conf-19416-17892.o /tmp/vpx-conf-19416-17892.cc\r\ncc1plus: error: command line option ‘-Wdeclaration-after-statement’ is valid for C/ObjC but not for C++ [-Werror]\r\ncc1plus: all warnings being treated as errors\r\ncheck_cflags -Wdeclaration-after-statement\r\ncheck_cc -Werror -Wdeclaration-after-statement\r\nBEGIN /tmp/vpx-conf-19416-17892.c\r\n     1\tint x;\r\nEND /tmp/vpx-conf-19416-17892.c\r\ngcc -m32 -DNDEBUG -O3 -fPIC -Wall -Werror -Wdeclaration-after-statement -c -o /tmp/vpx-conf-19416-17892.o /tmp/vpx-conf-19416-17892.c\r\ncheck_cxxflags -Wdisabled-optimization\r\ncheck_cxx -Werror -Wdisabled-optimization\r\nBEGIN /tmp/vpx-conf-19416-17892.cc\r\n     1\tint x;\r\nEND /tmp/vpx-conf-19416-17892.cc\r\ng++ -m32 -DNDEBUG -O3 -fPIC -Wall -Werror -Wdisabled-optimization -c -o /tmp/vpx-conf-19416-17892.o /tmp/vpx-conf-19416-17892.cc\r\ncheck_cflags -Wdisabled-optimization\r\ncheck_cc -Werror -Wdisabled-optimization\r\nBEGIN /tmp/vpx-conf-19416-17892.c\r\n     1\tint x;\r\nEND /tmp/vpx-conf-19416-17892.c\r\ngcc -m32 -DNDEBUG -O3 -fPIC -Wall -Wdeclaration-after-statement -Werror -Wdisabled-optimization -c -o /tmp/vpx-conf-19416-17892.o /tmp/vpx-conf-19416-17892.c\r\ncheck_cxxflags -Wfloat-conversion\r\ncheck_cxx -Werror -Wfloat-conversion\r\nBEGIN /tmp/vpx-conf-19416-17892.cc\r\n     1\tint x;\r\nEND /tmp/vpx-conf-19416-17892.cc\r\ng++ -m32 -DNDEBUG -O3 -fPIC -Wall -Wdisabled-optimization -Werror -Wfloat-conversion -c -o /tmp/vpx-conf-19416-17892.o /tmp/vpx-conf-19416-17892.cc\r\ncheck_cflags -Wfloat-conversion\r\ncheck_cc -Werror -Wfloat-conversion\r\nBEGIN /tmp/vpx-conf-19416-17892.c\r\n     1\tint x;\r\nEND /tmp/vpx-conf-19416-17892.c\r\ngcc -m32 -DNDEBUG -O3 -fPIC -Wall -Wdeclaration-after-statement -Wdisabled-optimization -Werror -Wfloat-conversion -c -o /tmp/vpx-conf-19416-17892.o /tmp/vpx-conf-19416-17892.c\r\ncheck_cxxflags -Wparentheses-equality\r\ncheck_cxx -Werror -Wparentheses-equality\r\nBEGIN /tmp/vpx-conf-19416-17892.cc\r\n     1\tint x;\r\nEND /tmp/vpx-conf-19416-17892.cc\r\ng++ -m32 -DNDEBUG -O3 -fPIC -Wall -Wdisabled-optimization -Wfloat-conversion -Werror -Wparentheses-equality -c -o /tmp/vpx-conf-19416-17892.o /tmp/vpx-conf-19416-17892.cc\r\ng++: error: unrecognized command line option ‘-Wparentheses-equality’; did you mean ‘-Wparentheses’?\r\ncheck_cflags -Wparentheses-equality\r\ncheck_cc -Werror -Wparentheses-equality\r\nBEGIN /tmp/vpx-conf-19416-17892.c\r\n     1\tint x;\r\nEND /tmp/vpx-conf-19416-17892.c\r\ngcc -m32 -DNDEBUG -O3 -fPIC -Wall -Wdeclaration-after-statement -Wdisabled-optimization -Wfloat-conversion -Werror -Wparentheses-equality -c -o /tmp/vpx-conf-19416-17892.o /tmp/vpx-conf-19416-17892.c\r\ngcc: error: unrecognized command line option ‘-Wparentheses-equality’; did you mean ‘-Wparentheses’?\r\ncheck_cxxflags -Wpointer-arith\r\ncheck_cxx -Werror -Wpointer-arith\r\nBEGIN /tmp/vpx-conf-19416-17892.cc\r\n     1\tint x;\r\nEND /tmp/vpx-conf-19416-17892.cc\r\ng++ -m32 -DNDEBUG -O3 -fPIC -Wall -Wdisabled-optimization -Wfloat-conversion -Werror -Wpointer-arith -c -o /tmp/vpx-conf-19416-17892.o /tmp/vpx-conf-19416-17892.cc\r\ncheck_cflags -Wpointer-arith\r\ncheck_cc -Werror -Wpointer-arith\r\nBEGIN /tmp/vpx-conf-19416-17892.c\r\n     1\tint x;\r\nEND /tmp/vpx-conf-19416-17892.c\r\ngcc -m32 -DNDEBUG -O3 -fPIC -Wall -Wdeclaration-after-statement -Wdisabled-optimization -Wfloat-conversion -Werror -Wpointer-arith -c -o /tmp/vpx-conf-19416-17892.o /tmp/vpx-conf-19416-17892.c\r\ncheck_cxxflags -Wtype-limits\r\ncheck_cxx -Werror -Wtype-limits\r\nBEGIN /tmp/vpx-conf-19416-17892.cc\r\n     1\tint x;\r\nEND /tmp/vpx-conf-19416-17892.cc\r\ng++ -m32 -DNDEBUG -O3 -fPIC -Wall -Wdisabled-optimization -Wfloat-conversion -Wpointer-arith -Werror -Wtype-limits -c -o /tmp/vpx-conf-19416-17892.o /tmp/vpx-conf-19416-17892.cc\r\ncheck_cflags -Wtype-limits\r\ncheck_cc -Werror -Wtype-limits\r\nBEGIN /tmp/vpx-conf-19416-17892.c\r\n     1\tint x;\r\nEND /tmp/vpx-conf-19416-17892.c\r\ngcc -m32 -DNDEBUG -O3 -fPIC -Wall -Wdeclaration-after-statement -Wdisabled-optimization -Wfloat-conversion -Wpointer-arith -Werror -Wtype-limits -c -o /tmp/vpx-conf-19416-17892.o /tmp/vpx-conf-19416-17892.c\r\ncheck_cxxflags -Wcast-qual\r\ncheck_cxx -Werror -Wcast-qual\r\nBEGIN /tmp/vpx-conf-19416-17892.cc\r\n     1\tint x;\r\nEND /tmp/vpx-conf-19416-17892.cc\r\ng++ -m32 -DNDEBUG -O3 -fPIC -Wall -Wdisabled-optimization -Wfloat-conversion -Wpointer-arith -Wtype-limits -Werror -Wcast-qual -c -o /tmp/vpx-conf-19416-17892.o /tmp/vpx-conf-19416-17892.cc\r\ncheck_cflags -Wcast-qual\r\ncheck_cc -Werror -Wcast-qual\r\nBEGIN /tmp/vpx-conf-19416-17892.c\r\n     1\tint x;\r\nEND /tmp/vpx-conf-19416-17892.c\r\ngcc -m32 -DNDEBUG -O3 -fPIC -Wall -Wdeclaration-after-statement -Wdisabled-optimization -Wfloat-conversion -Wpointer-arith -Wtype-limits -Werror -Wcast-qual -c -o /tmp/vpx-conf-19416-17892.o /tmp/vpx-conf-19416-17892.c\r\ncheck_cxxflags -Wvla\r\ncheck_cxx -Werror -Wvla\r\nBEGIN /tmp/vpx-conf-19416-17892.cc\r\n     1\tint x;\r\nEND /tmp/vpx-conf-19416-17892.cc\r\ng++ -m32 -DNDEBUG -O3 -fPIC -Wall -Wdisabled-optimization -Wfloat-conversion -Wpointer-arith -Wtype-limits -Wcast-qual -Werror -Wvla -c -o /tmp/vpx-conf-19416-17892.o /tmp/vpx-conf-19416-17892.cc\r\ncheck_cflags -Wvla\r\ncheck_cc -Werror -Wvla\r\nBEGIN /tmp/vpx-conf-19416-17892.c\r\n     1\tint x;\r\nEND /tmp/vpx-conf-19416-17892.c\r\ngcc -m32 -DNDEBUG -O3 -fPIC -Wall -Wdeclaration-after-statement -Wdisabled-optimization -Wfloat-conversion -Wpointer-arith -Wtype-limits -Wcast-qual -Werror -Wvla -c -o /tmp/vpx-conf-19416-17892.o /tmp/vpx-conf-19416-17892.c\r\ncheck_cxxflags -Wimplicit-function-declaration\r\ncheck_cxx -Werror -Wimplicit-function-declaration\r\nBEGIN /tmp/vpx-conf-19416-17892.cc\r\n     1\tint x;\r\nEND /tmp/vpx-conf-19416-17892.cc\r\ng++ -m32 -DNDEBUG -O3 -fPIC -Wall -Wdisabled-optimization -Wfloat-conversion -Wpointer-arith -Wtype-limits -Wcast-qual -Wvla -Werror -Wimplicit-function-declaration -c -o /tmp/vpx-conf-19416-17892.o /tmp/vpx-conf-19416-17892.cc\r\ncc1plus: error: command line option ‘-Wimplicit-function-declaration’ is valid for C/ObjC but not for C++ [-Werror]\r\ncc1plus: all warnings being treated as errors\r\ncheck_cflags -Wimplicit-function-declaration\r\ncheck_cc -Werror -Wimplicit-function-declaration\r\nBEGIN /tmp/vpx-conf-19416-17892.c\r\n     1\tint x;\r\nEND /tmp/vpx-conf-19416-17892.c\r\ngcc -m32 -DNDEBUG -O3 -fPIC -Wall -Wdeclaration-after-statement -Wdisabled-optimization -Wfloat-conversion -Wpointer-arith -Wtype-limits -Wcast-qual -Wvla -Werror -Wimplicit-function-declaration -c -o /tmp/vpx-conf-19416-17892.o /tmp/vpx-conf-19416-17892.c\r\ncheck_cxxflags -Wuninitialized\r\ncheck_cxx -Werror -Wuninitialized\r\nBEGIN /tmp/vpx-conf-19416-17892.cc\r\n     1\tint x;\r\nEND /tmp/vpx-conf-19416-17892.cc\r\ng++ -m32 -DNDEBUG -O3 -fPIC -Wall -Wdisabled-optimization -Wfloat-conversion -Wpointer-arith -Wtype-limits -Wcast-qual -Wvla -Werror -Wuninitialized -c -o /tmp/vpx-conf-19416-17892.o /tmp/vpx-conf-19416-17892.cc\r\ncheck_cflags -Wuninitialized\r\ncheck_cc -Werror -Wuninitialized\r\nBEGIN /tmp/vpx-conf-19416-17892.c\r\n     1\tint x;\r\nEND /tmp/vpx-conf-19416-17892.c\r\ngcc -m32 -DNDEBUG -O3 -fPIC -Wall -Wdeclaration-after-statement -Wdisabled-optimization -Wfloat-conversion -Wpointer-arith -Wtype-limits -Wcast-qual -Wvla -Wimplicit-function-declaration -Werror -Wuninitialized -c -o /tmp/vpx-conf-19416-17892.o /tmp/vpx-conf-19416-17892.c\r\ncheck_cxxflags -Wunused\r\ncheck_cxx -Werror -Wunused\r\nBEGIN /tmp/vpx-conf-19416-17892.cc\r\n     1\tint x;\r\nEND /tmp/vpx-conf-19416-17892.cc\r\ng++ -m32 -DNDEBUG -O3 -fPIC -Wall -Wdisabled-optimization -Wfloat-conversion -Wpointer-arith -Wtype-limits -Wcast-qual -Wvla -Wuninitialized -Werror -Wunused -c -o /tmp/vpx-conf-19416-17892.o /tmp/vpx-conf-19416-17892.cc\r\ncheck_cflags -Wunused\r\ncheck_cc -Werror -Wunused\r\nBEGIN /tmp/vpx-conf-19416-17892.c\r\n     1\tint x;\r\nEND /tmp/vpx-conf-19416-17892.c\r\ngcc -m32 -DNDEBUG -O3 -fPIC -Wall -Wdeclaration-after-statement -Wdisabled-optimization -Wfloat-conversion -Wpointer-arith -Wtype-limits -Wcast-qual -Wvla -Wimplicit-function-declaration -Wuninitialized -Werror -Wunused -c -o /tmp/vpx-conf-19416-17892.o /tmp/vpx-conf-19416-17892.c\r\ncheck_cxxflags -Wextra\r\ncheck_cxx -Werror -Wextra\r\nBEGIN /tmp/vpx-conf-19416-17892.cc\r\n     1\tint x;\r\nEND /tmp/vpx-conf-19416-17892.cc\r\ng++ -m32 -DNDEBUG -O3 -fPIC -Wall -Wdisabled-optimization -Wfloat-conversion -Wpointer-arith -Wtype-limits -Wcast-qual -Wvla -Wuninitialized -Wunused -Werror -Wextra -c -o /tmp/vpx-conf-19416-17892.o /tmp/vpx-conf-19416-17892.cc\r\ncheck_cflags -Wextra\r\ncheck_cc -Werror -Wextra\r\nBEGIN /tmp/vpx-conf-19416-17892.c\r\n     1\tint x;\r\nEND /tmp/vpx-conf-19416-17892.c\r\ngcc -m32 -DNDEBUG -O3 -fPIC -Wall -Wdeclaration-after-statement -Wdisabled-optimization -Wfloat-conversion -Wpointer-arith -Wtype-limits -Wcast-qual -Wvla -Wimplicit-function-declaration -Wuninitialized -Wunused -Werror -Wextra -c -o /tmp/vpx-conf-19416-17892.o /tmp/vpx-conf-19416-17892.c\r\ncheck_cflags -Wundef\r\ncheck_cc -Werror -Wundef\r\nBEGIN /tmp/vpx-conf-19416-17892.c\r\n     1\tint x;\r\nEND /tmp/vpx-conf-19416-17892.c\r\ngcc -m32 -DNDEBUG -O3 -fPIC -Wall -Wdeclaration-after-statement -Wdisabled-optimization -Wfloat-conversion -Wpointer-arith -Wtype-limits -Wcast-qual -Wvla -Wimplicit-function-declaration -Wuninitialized -Wunused -Wextra -Werror -Wundef -c -o /tmp/vpx-conf-19416-17892.o /tmp/vpx-conf-19416-17892.c\r\ncheck_cflags -Wshorten-64-to-32\r\ncheck_cc -Werror -Wshorten-64-to-32\r\nBEGIN /tmp/vpx-conf-19416-17892.c\r\n     1\tint x;\r\nEND /tmp/vpx-conf-19416-17892.c\r\ngcc -m32 -DNDEBUG -O3 -fPIC -Wall -Wdeclaration-after-statement -Wdisabled-optimization -Wfloat-conversion -Wpointer-arith -Wtype-limits -Wcast-qual -Wvla -Wimplicit-function-declaration -Wuninitialized -Wunused -Wextra -Wundef -Werror -Wshorten-64-to-32 -c -o /tmp/vpx-conf-19416-17892.o /tmp/vpx-conf-19416-17892.c\r\ngcc: error: unrecognized command line option ‘-Wshorten-64-to-32’\r\n  enabling postproc\r\ncheck_cxxflags -isystem /media/subhanjan/Driver/linux-ndk/sysroot/usr/include/arm-linux-androideabi -isystem /media/subhanjan/Driver/linux-ndk/sysroot/usr/include\r\ncheck_cxx -Werror -isystem /media/subhanjan/Driver/linux-ndk/sysroot/usr/include/arm-linux-androideabi -isystem /media/subhanjan/Driver/linux-ndk/sysroot/usr/include\r\nBEGIN /tmp/vpx-conf-19416-17892.cc\r\n     1\tint x;\r\nEND /tmp/vpx-conf-19416-17892.cc\r\ng++ -m32 -DNDEBUG -O3 -fPIC -Wall -Wdisabled-optimization -Wfloat-conversion -Wpointer-arith -Wtype-limits -Wcast-qual -Wvla -Wuninitialized -Wunused -Wextra -Werror -isystem /media/subhanjan/Driver/linux-ndk/sysroot/usr/include/arm-linux-androideabi -isystem /media/subhanjan/Driver/linux-ndk/sysroot/usr/include -c -o /tmp/vpx-conf-19416-17892.o /tmp/vpx-conf-19416-17892.cc\r\ncheck_cflags -isystem /media/subhanjan/Driver/linux-ndk/sysroot/usr/include/arm-linux-androideabi -isystem /media/subhanjan/Driver/linux-ndk/sysroot/usr/include\r\ncheck_cc -Werror -isystem /media/subhanjan/Driver/linux-ndk/sysroot/usr/include/arm-linux-androideabi -isystem /media/subhanjan/Driver/linux-ndk/sysroot/usr/include\r\nBEGIN /tmp/vpx-conf-19416-17892.c\r\n     1\tint x;\r\nEND /tmp/vpx-conf-19416-17892.c\r\ngcc -m32 -DNDEBUG -O3 -fPIC -Wall -Wdeclaration-after-statement -Wdisabled-optimization -Wfloat-conversion -Wpointer-arith -Wtype-limits -Wcast-qual -Wvla -Wimplicit-function-declaration -Wuninitialized -Wunused -Wextra -Wundef -Werror -isystem /media/subhanjan/Driver/linux-ndk/sysroot/usr/include/arm-linux-androideabi -isystem /media/subhanjan/Driver/linux-ndk/sysroot/usr/include -c -o /tmp/vpx-conf-19416-17892.o /tmp/vpx-conf-19416-17892.c\r\ncheck_header stdio.h\r\ncheck_cpp\r\nBEGIN /tmp/vpx-conf-19416-17892.c\r\n     1\t#include \"stdio.h\"\r\n     2\tint x;\r\nEND /tmp/vpx-conf-19416-17892.c\r\ngcc -m32 -DNDEBUG -O3 -fPIC -Wall -Wdeclaration-after-statement -Wdisabled-optimization -Wfloat-conversion -Wpointer-arith -Wtype-limits -Wcast-qual -Wvla -Wimplicit-function-declaration -Wuninitialized -Wunused -Wextra -Wundef -isystem /media/subhanjan/Driver/linux-ndk/sysroot/usr/include/arm-linux-androideabi -isystem /media/subhanjan/Driver/linux-ndk/sysroot/usr/include -E -o /tmp/vpx-conf-19416-17892.o /tmp/vpx-conf-19416-17892.c\r\ncheck_ld\r\ncheck_cc\r\nBEGIN /tmp/vpx-conf-19416-17892.c\r\n     1\tint main(void) {return 0;}\r\nEND /tmp/vpx-conf-19416-17892.c\r\ngcc -m32 -DNDEBUG -O3 -fPIC -Wall -Wdeclaration-after-statement -Wdisabled-optimization -Wfloat-conversion -Wpointer-arith -Wtype-limits -Wcast-qual -Wvla -Wimplicit-function-declaration -Wuninitialized -Wunused -Wextra -Wundef -isystem /media/subhanjan/Driver/linux-ndk/sysroot/usr/include/arm-linux-androideabi -isystem /media/subhanjan/Driver/linux-ndk/sysroot/usr/include -c -o /tmp/vpx-conf-19416-17892.o /tmp/vpx-conf-19416-17892.c\r\ngcc -m32 -o /tmp/vpx-conf-19416-17892.x /tmp/vpx-conf-19416-17892.o\r\n/usr/bin/ld: cannot find Scrt1.o: No such file or directory\r\n/usr/bin/ld: cannot find crti.o: No such file or directory\r\n/usr/bin/ld: skipping incompatible /usr/lib/gcc/x86_64-linux-gnu/7/libgcc.a when searching for -lgcc\r\n/usr/bin/ld: cannot find -lgcc\r\n/usr/bin/ld: skipping incompatible /usr/lib/gcc/x86_64-linux-gnu/7/libgcc_s.so.1 when searching for libgcc_s.so.1\r\n/usr/bin/ld: cannot find libgcc_s.so.1\r\n/usr/bin/ld: skipping incompatible /usr/lib/gcc/x86_64-linux-gnu/7/libgcc.a when searching for -lgcc\r\n/usr/bin/ld: cannot find -lgcc\r\ncollect2: error: ld returned 1 exit status`\r\n\r\n\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4953/comments",
    "author": "SystemRestored",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2018-10-19T20:59:05Z",
        "body": "Please check your build tools/environment and NDK are set up correctly. I don't think this is an ExoPlayer issue so I recommend asking for help on a more general site like Stack Overflow."
      }
    ]
  },
  {
    "number": 4945,
    "title": "Disable forward seeking while enabling previous seek",
    "created_at": "2018-10-12T18:52:10Z",
    "closed_at": "2018-10-15T07:43:50Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4945",
    "body": "Hello,\r\n\r\nThank you for such an amazing library\r\n\r\nThough i have requirement which i am not able to see in the current version. The requirement is suppose i have watched the video till 1 min so i can seek to 0 min and watch it again but i cant take it from 1 min to 2min i.e i want to disable seeking beyond the time user viewed the video. So please help me how can i achieve it. Since i m not able to catch seek change listener",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4945/comments",
    "author": "Faiyyaz",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2018-10-12T19:13:36Z",
        "body": "All seek calls on the player originate from application code or ExoPlayer's UI components. ExoPlayer's UI components generally have `setControlDispatcher` methods that you can use to set a component capable of intercepting and modifying calls to the player. So you can implement a class like this:\r\n```\r\npublic class PositionLimitingControlDispatcher extends DefaultControlDispatcher {\r\n\r\n  private long maxPlayedPositionMs;\r\n\r\n  // Needs to be called from application code whenever a new playback starts.\r\n  public void reset() {\r\n    maxPlayedPositionMs = 0;\r\n  }\r\n\r\n  // Note: This implementation assumes single window content. You might need to do\r\n  // something more complicated, depending on your use case.\r\n  @Override\r\n  public boolean dispatchSeekTo(Player player, int windowIndex, long positionMs) {\r\n    maxPlayedPositionMs = Math.max(maxPlayedPositionMs, player.getCurrentPosition());\r\n    player.seekTo(windowIndex, Math.min(positionMs, maxPlayedPositionMs));\r\n    return true;\r\n  }\r\n\r\n}\r\n```\r\nthen create an instance, and pass it to any UI components you use. For example:\r\n```\r\nplayerView.setControlDispatcher(controlDispatcher);\r\n```\r\nFor any seek calls your application code makes directly, route them through the same `controlDispatcher` instance rather than making seek calls directly on the player."
      },
      {
        "user": "Faiyyaz",
        "created_at": "2018-10-13T04:34:08Z",
        "body": "Ok thanks a lot i will try this in some day and will get back to you"
      }
    ]
  },
  {
    "number": 4942,
    "title": "Disable buffer in Exoplayer for HLS",
    "created_at": "2018-10-12T11:40:28Z",
    "closed_at": "2018-10-15T10:37:28Z",
    "labels": [
      "question",
      "need more info"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4942",
    "body": "How can i disable buffer in Exoplayer for playing HLS. ",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4942/comments",
    "author": "anandsingh2903",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2018-10-12T11:42:47Z",
        "body": "What do you mean by \"disable buffer\"? You need a buffer to play the media."
      },
      {
        "user": "anandsingh2903",
        "created_at": "2018-10-12T12:22:20Z",
        "body": "I am playing HLS stream it is playing fine in Exoplayer but when I change the channel the server starts throwing new channel HLS stream but my exoplayer gets stuck on previous video and doesn't start playing new HLS data stream. "
      },
      {
        "user": "anandsingh2903",
        "created_at": "2018-10-12T12:24:32Z",
        "body": "What should i do in this case. I can see Discontinuity detected log in Exoplayer logs but the playlist.m3u8 which is coming from the network has ex-discontinuity tag. "
      },
      {
        "user": "tonihei",
        "created_at": "2018-10-12T12:41:34Z",
        "body": "I'm not an expert on how HLS playlists are supposed to look like in such a case. Maybe @AquilesCanta can advise further."
      },
      {
        "user": "anandsingh2903",
        "created_at": "2018-10-12T12:43:57Z",
        "body": "Thanks. I can share the code with you if needed. "
      },
      {
        "user": "AquilesCanta",
        "created_at": "2018-10-15T10:37:28Z",
        "body": "Can you provide a snapshot of a media playlist that includes a discontinuity along with its segments?\r\n\r\nOnce this is included, we will reopen the issue. We need to be able to reproduce ourselves to help you."
      }
    ]
  },
  {
    "number": 4937,
    "title": "Play video from .exo files",
    "created_at": "2018-10-11T17:17:24Z",
    "closed_at": "2018-10-30T11:15:46Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4937",
    "body": "How can I play a video from multiple .exo files that I download on a mobile phone.\r\nI have a list of 20 .exi files and an .exi file.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4937/comments",
    "author": "marcosmagno",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2018-10-12T09:37:16Z",
        "body": "These are not meant to be played directly. Please use a CacheDataSource with the same configuration (same uri etc.) as you used to save these files. "
      },
      {
        "user": "marcosmagno",
        "created_at": "2018-10-12T19:07:33Z",
        "body": "@tonihei I'm sending these files to other phones (via D2D). I can not play this list of .exo files on other phones that are without internet access? D2D clients need to have access to the internet?"
      },
      {
        "user": "tonihei",
        "created_at": "2018-10-15T09:01:13Z",
        "body": "You don't need internet access to play the files, but you do need the original uri in the media source and data source setup. This ensures the Cache finds the correct file. \r\nFor example:\r\n```\r\nnew ExtractorMediaSource.Factory(\r\n    new CacheDataSourceFactory(\r\n        cachePointingToTheCopiedFiles, \r\n        new DefaultDataSourceFactory(context, userAgent)))\r\n    .creatMediaSource(uriUsedForDownloadingTheFile);\r\n```\r\n\r\n@erdemguven may be able to provide further hints."
      },
      {
        "user": "tonihei",
        "created_at": "2018-10-30T11:15:44Z",
        "body": "I guess the question was answered, so closing the issue. Please reopen if that's not the case."
      },
      {
        "user": "marcosmagno",
        "created_at": "2019-04-12T16:37:59Z",
        "body": "Hello .... I could not make the video play from the .exo files. Look at my scenery:\r\n1 - I download the video via DASH. (OK)\r\n2 - Save the .exo files locally (OK)\r\n3 - Send the .exo files to other mobiles (via Wi-Fi connection (D2D)) (OK)\r\n4 - I want to play the .exo files on these phones (still can not)\r\n\r\n\r\nCodes:\r\n\r\n1 - Download do vídeo\r\n threadDownload = new Thread(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                File cacheDirectory = new File(getApplicationContext().getExternalCacheDir(), \"downloads\");\r\n                SimpleCache cache = new SimpleCache(cacheDirectory, new NoOpCacheEvictor());\r\n\r\n                //DefaultHttpDataSourceFactory factory = new DefaultHttpDataSourceFactory(\"ExoPlayer\", null);\r\n                DownloaderConstructorHelper constructorHelper =\r\n                        new DownloaderConstructorHelper(cache, manifestDataSourceFactory);\r\n\r\n                DashDownloader dashDownloader = new DashDownloader(uriRecv, constructorHelper);\r\n                try {\r\n                    dashDownloader.download(new Downloader.ProgressListener() {\r\n                        @Override\r\n                        public void onDownloadProgress(Downloader downloader, float downloadPercentage, long downloadedBytes) {\r\n\r\n                        }\r\n                    });\r\n                    dashDownloader.getDownloadPercentage();\r\n                }\r\n                catch (IOException e) {\r\n                    e.printStackTrace();\r\n                } catch (InterruptedException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n4 - Play video from .exo files\r\n\r\n//read up from the local system\r\n        File cacheDirectory = new File(getApplicationContext().getExternalCacheDir(), \"downloads\");\r\n        SimpleCache cache = new SimpleCache(cacheDirectory,  new NoOpCacheEvictor());\r\n\r\n        FileDataSourceFactory fileDataSource = new FileDataSourceFactory();\r\n        MediaSource mediaSource = new DashMediaSource(\r\n                Uri.parse(String.valueOf(uriRecv)),\r\n                new CacheDataSourceFactory(\r\n                        cache, fileDataSource, CacheDataSource.FLAG_BLOCK_ON_CACHE),\r\n                new DefaultDashChunkSource.Factory(new CacheDataSourceFactory(cache, fileDataSource, CacheDataSource.FLAG_BLOCK_ON_CACHE)),\r\n                null,\r\n                null\r\n        );\r\n\r\n        return mediaSource;\r\n\r\n------------------------------------------------------------------------------------------------------\r\nWith this code, the video shows only the first frame (the initial image of the video). Here's the LOG:\r\n------------------------------------------------------------------------------------------------------\r\n\r\n\r\n\r\nCom esse código, o video aparece apenas o primeiro frame (a imagem inicial do video). Segue o LOG:\r\n04-12 18:26:49.032 24089-24122/com.example.exoplayercodelab E/ExoPlayerImplInternal: Source error.\r\n    com.google.android.exoplayer2.upstream.FileDataSource$FileDataSourceException: java.io.FileNotFoundException: /BBB_2sec/x264/segment_7502.m4s: open failed: ENOENT (No such file or directory)\r\n        at com.google.android.exoplayer2.upstream.FileDataSource.open(FileDataSource.java:70)\r\n        at com.google.android.exoplayer2.upstream.TeeDataSource.open(TeeDataSource.java:45)\r\n        at com.google.android.exoplayer2.upstream.cache.CacheDataSource.openNextSource(CacheDataSource.java:401)\r\n        at com.google.android.exoplayer2.upstream.cache.CacheDataSource.open(CacheDataSource.java:242)\r\n        at com.google.android.exoplayer2.source.chunk.ContainerMediaChunk.load(ContainerMediaChunk.java:116)\r\n        at com.google.android.exoplayer2.upstream.Loader$LoadTask.run(Loader.java:320)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1113)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:588)\r\n        at java.lang.Thread.run(Thread.java:818)\r\n     Caused by: java.io.FileNotFoundException: /BBB_2sec/x264/segment_7502.m4s: open failed: ENOENT (No such file or directory)\r\n        at libcore.io.IoBridge.open(IoBridge.java:452)\r\n        at java.io.RandomAccessFile.<init>(RandomAccessFile.java:117)\r\n        at java.io.RandomAccessFile.<init>(RandomAccessFile.java:149)\r\n        at com.google.android.exoplayer2.upstream.FileDataSource.open(FileDataSource.java:62)\r\n        at com.google.android.exoplayer2.upstream.TeeDataSource.open(TeeDataSource.java:45) \r\n        at com.google.android.exoplayer2.upstream.cache.CacheDataSource.openNextSource(CacheDataSource.java:401) \r\n        at com.google.android.exoplayer2.upstream.cache.CacheDataSource.open(CacheDataSource.java:242) \r\n        at com.google.android.exoplayer2.source.chunk.ContainerMediaChunk.load(ContainerMediaChunk.java:116) \r\n        at com.google.android.exoplayer2.upstream.Loader$LoadTask.run(Loader.java:320) \r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1113) \r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:588) \r\n        at java.lang.Thread.run(Thread.java:818) \r\n     Caused by: android.system.ErrnoException: open failed: ENOENT (No such file or directory)\r\n        at libcore.io.Posix.open(Native Method)\r\n        at libcore.io.BlockGuardOs.open(BlockGuardOs.java:186)        "
      }
    ]
  },
  {
    "number": 4935,
    "title": "how to check current play video is finish",
    "created_at": "2018-10-11T09:00:17Z",
    "closed_at": "2018-10-11T09:23:22Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4935",
    "body": "hi dear developer, is there way to trace current video play is finish to play?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4935/comments",
    "author": "hafiz013",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2018-10-11T11:57:04Z",
        "body": "Check if `player.getPlaybackState` is `Player.STATE_ENDED`. You can listen to state changes with `EventListener.onPlayerStateChanged`."
      }
    ]
  },
  {
    "number": 4934,
    "title": "如何知道视频是否在播放状态",
    "created_at": "2018-10-11T07:23:33Z",
    "closed_at": "2018-10-30T11:13:08Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4934",
    "body": "如标题所示如何知道视频处于播放状态。\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4934/comments",
    "author": "supermoutant",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2018-10-11T10:10:42Z",
        "body": "请检查`player.getPlaybackState`以查看播放器是否准备就绪（`Player.STATE_READY`）和`player.getPlayWhenReady`以查看播放器是否在准备好时自动开始播放。"
      },
      {
        "user": "tonihei",
        "created_at": "2018-10-30T11:13:08Z",
        "body": "Closing, because question was answered."
      }
    ]
  },
  {
    "number": 4927,
    "title": "How to build .jar with the exoplayer module?",
    "created_at": "2018-10-10T05:57:55Z",
    "closed_at": "2018-10-10T22:31:15Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4927",
    "body": "I have a old  project which is developed with the ide Eclipse, The project just needs the hls,core,ui three libraries. How to build the .jar s? Hope to give me some help! \r\nI use the least release branch V2.9.0",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4927/comments",
    "author": "Romantic-LiXuefeng",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2018-10-10T22:31:15Z",
        "body": "> I have a old project which is developed with the ide Eclipse\r\n\r\nWe don't support this. You really need to be using Android Studio and aars at this point."
      }
    ]
  },
  {
    "number": 4923,
    "title": "Does ExoPlayer supports such kind of DASH streams?",
    "created_at": "2018-10-09T08:57:43Z",
    "closed_at": "2018-10-30T11:12:47Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4923",
    "body": "### Issue description\r\nIn demo app stream returns negative values for current position. Video is playing.\r\n\r\n### Reproduction steps\r\nJust setup provided stream to ExoPlayer demo app.\r\n### Link to test content\r\nProvided to dev.exoplayer@gmail.com\r\n\r\n### Version of ExoPlayer being used\r\n2.9.0, 2.8.1\r\n\r\n### Device(s) and version(s) of Android being used\r\nNokia 8, Android 8.1\r\n\r\n### A full bug report captured from the device\r\nSent to email\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4923/comments",
    "author": "PavelGP",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2018-10-11T14:44:16Z",
        "body": "This behaviour looks correct to me given the manifests you provided.\r\n\r\nNote that if the current playback position falls behind the start of the current available window, ExoPlayer keeps playing the already loaded media but shows a negative position. \r\n\r\nAlso note that you always end up in this situation because the initial manifest you provide currently has 74 periods with very small durations. The initial window starts 41 seconds from the end, that is roughly the 60th period. After reloading the manifest with the url in the \"Location\" field, all but the last period disappeared. So the playback ends up at around 36 seconds before the start of the remaining period. "
      },
      {
        "user": "tonihei",
        "created_at": "2018-10-30T11:12:47Z",
        "body": "Closing because the question was answered."
      }
    ]
  },
  {
    "number": 4913,
    "title": "Sound stop after a while when looping",
    "created_at": "2018-10-04T23:34:08Z",
    "closed_at": "2018-10-11T08:15:49Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4913",
    "body": "### Issue description\r\n\r\nUsing ExoPlayer 2.8.2 to play a local .m4a sound file in repeat mode, the sound stop after a while (typically a couple of hours). If playing several files simultaneously, each file stop at a different time. No error is reported in neither the player event listener nor the media source event listener.\r\n\r\nThe error occurs with both `player.setRepeatMode(Player.REPEAT_MODE_ALL);` or by using a LoopingMediaSource object.\r\n\r\nWhen the audio stop, the following lines appears in Logcat:\r\n    1536-1577/? I/AudioFlinger: BUFFER TIMEOUT: remove(4096) from active list on thread 0xf1203680\r\n    1430-1578/? W/audio_hw_generic: Not supplying enough data to HAL, expected position 942828484 , only wrote 934428960\r\n\r\ntoggling player.setPlayWhenReady(...) does not restore the playback.\r\n\r\nWe didn't notice this issue (and none of our users complain) with the previous version of ExoPlayer we were using: r2.4.1. Unfortunately it is not possible to roll back as an audio glitch was audible at the end of each loop.\r\n\r\n### Reproduction steps\r\n\r\nThe following code is running in a service:\r\n\r\n```\r\n...\r\ndataSourceFactory = new DefaultDataSourceFactory(context, Util.getUserAgent(context, \"XXXX\"), null);\r\nplayer = ExoPlayerFactory.newSimpleInstance(context, new DefaultTrackSelector());\r\nMediaSource audioSource = new ExtractorMediaSource.Factory(dataSourceFactory).createMediaSource(audioItem.getUri());\r\nplayer.setRepeatMode(Player.REPEAT_MODE_ALL);\r\nplayer.prepare(audioSource);\r\n...\r\nplayer.setPlayWhenReady(true);\r\n```\r\n\r\nWait until the sound stops\r\n\r\n### Link to test content\r\nSent by email\r\n\r\n### Version of ExoPlayer being used\r\n2.8.2\r\n\r\n### Device(s) and version(s) of Android being used\r\nPixel XL simulator with Android Oreo 8.1\r\nSome of our users complained about the same issue on different devices.\r\n\r\n### A full bug report captured from the device\r\nSent by email\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4913/comments",
    "author": "retameur",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2018-10-05T14:20:06Z",
        "body": "I couldn't see any obvious issues with the media or in the bug report.\r\n\r\nPlease could you try to reproduce this in the ExoPlayer demo app, but modified to set repeat mode, and on a physical device rather than using the emulator? If you can reproduce it please send the bug report. If not, that suggests there's something wrong with the service (perhaps a leak or not holding locks required to keep the device awake). Thanks."
      },
      {
        "user": "andrewlewis",
        "created_at": "2018-10-05T16:31:48Z",
        "body": "I think the issue here is that there's a discrepancy between the duration declared in the MP4 container metadata and the actual duration of audio after applying the iTunSMPB trimming for gapless playback. I think the actual duration is 18955260 us (this is the declared duration 19017142 us, which is the duration of audio before trimming, minus the duration of 2112 + 617 audio frames at 44.1 kHz, which are trimmed). This discrepancy causes the renderer position to drift slowly away from the expected position based on the durations of earlier loops, until the player stops loading because it permanently thinks it has enough data buffered, at which point audio runs out.\r\n\r\nIf you have control over the media you may be able to fix the issue by rewriting the duration in the container to take into account trimmed frames, or possibly switching to using edit lists to signal gapless trimming.\r\n\r\nThe next steps here are to verify the hypothesis by hardcoding the calculated duration and verifying that playback doesn't get stuck, then possibly altering the extractor to update the duration to compensate for audio frames trimmed based on iTunSMPB metadata."
      },
      {
        "user": "retameur",
        "created_at": "2018-10-10T17:53:38Z",
        "body": "I have been able to reproduce the bug with ExoPlayer Demo 2.8.4 (report sent by email). The playback stops after the same number of loops (which varies with each specific sound file) as in our app. Its 241 for the frogs.m4a file I've sent by email.\r\n\r\nWe have control over the media, but it is not a solution for us, as the same media are also used for iOS and the Web. And most of the current users have already downloaded the files.\r\n\r\nI'm not sure it is related to the iTunSMPB metatag. I've re-encoded the file twice using fdkaac:\r\n    - once with the --gapless-mode option set to 0 (iTunSMPB)\r\n    - once with the option set to 1: ISO standard (edts and sgpd)\r\nThe playback of both files fails simultaneously.\r\n\r\nAs for the steps you are suggesting verifying the hypothesis, I have no idea how to do so."
      },
      {
        "user": "retameur",
        "created_at": "2018-10-10T19:26:54Z",
        "body": "I have also tested with ExoPlayer demo 2.9.0 and the bug seems to be fixed now (if it still occurs, it is after way more loops). So problem solved. \r\n\r\nThanks for your help."
      },
      {
        "user": "tonihei",
        "created_at": "2018-10-11T08:15:49Z",
        "body": "Yes, it was fixed by a change in 2.9.0 which prevents the problem you describe. Still, if you want perfect gapless playback of the looped file, you should try to ensure the duration exactly matches the content."
      }
    ]
  },
  {
    "number": 4912,
    "title": "merging many ClippingMediaSource",
    "created_at": "2018-10-04T20:52:24Z",
    "closed_at": "2018-11-23T21:47:00Z",
    "labels": [
      "question",
      "need more info"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4912",
    "body": "### Issue description\r\nI have video and audio(webm and ogg). I have to make next structure:\r\nstart video part -> \"freeze frame(or one frame) part\" -> finish video part and sync them all with audio, like this:\r\n (duration)\r\naudio start == video start\r\naudio finish == video finish\r\nelse audio will play for \"one frame\"\r\n\r\n\r\nPROBLEM:\r\nWhen \"finish part\" start playing audio starts from \"start part\". For example:\r\nstart part play from 0 to 10 seconds,\r\nmiddle part play from 10 to 20 seconds\r\nfinish part play from 20 to 30 seconds but in my case it starts playing at  10 seconds (equal to \"clipAt\" see code )\r\n\r\nMy code:\r\n```\r\nlong clipAt = _;\r\nlong videoLength = _;\r\nlong audioLength = _;\r\n\r\n    MediaSource audioSource =  new ExtractorMediaSource(Uri.parse(audioURL),\r\n                    dataSourceFactory, extractorsFactory, null, null);\r\n\r\n    MediaSource videoSource = new ExtractorMediaSource(Uri.parse(videoURL),\r\n                    dataSourceFactory, extractorsFactory, null, null);\r\n\r\n    long a =  audioLength - (videoLength - clipAt);\r\n    MergingMediaSource start = new MergingMediaSource(\r\n                    new ClippingMediaSource(videoSource,0,clipAt),\r\n                    new ClippingMediaSource(audioSource,0,a));\r\n\r\n    MergingMediaSource finish= new MergingMediaSource(\r\n                  new ClippingMediaSource(videoSource,clipAt,C.TIME_END_OF_SOURCE),\r\n                  new ClippingMediaSource(audioSource,a,C.TIME_END_OF_SOURCE));\r\n\r\n  concatenatedSource.addMediaSource(start);\r\n  concatenatedSource.addMediaSource(finish);\r\n```\r\n\r\nI have also tried to create new video and audio MediaSource  for  finish part, but problem exists anyway!\r\nIf at first add audio media source to MergingMediaSource and then video -> audio play as expected. but video doesn't play(freezed).\r\n\r\n\r\n### Reproduction steps\r\nInvent stupid structure and kill all your day!\r\n\r\n### Link to test content\r\nI use webm with deleted audio track for video and ogg for audio\r\n\r\n### Version of ExoPlayer being used\r\n2.8.2\r\n\r\n### Device(s) and version(s) of Android being used\r\nxiaomi redmi note 4.\r\nAndroid 7.0\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4912/comments",
    "author": "ValeraC",
    "comments": [
      {
        "user": "AquilesCanta",
        "created_at": "2018-10-05T14:20:14Z",
        "body": "I don't understand the problem here. \r\n\r\nI think the best way to go is that you provide the sample media. I will then try the code you posted up here and reach back. If I notice anything weird, then we can diagnose as a bug. If I observe it's working as intended, then we can work on the issue description. Otherwise this consumes too much time doing guesswork. "
      },
      {
        "user": "AquilesCanta",
        "created_at": "2018-10-05T14:24:55Z",
        "body": "One extra thing to check is that the ogg audio you are using is seekable. If you play the ogg audio alone, can you seek in it? If not, you'll have to add metadata to enable seeking in the file."
      },
      {
        "user": "ojw28",
        "created_at": "2018-11-23T21:47:00Z",
        "body": "Closing due to lack of follow up."
      }
    ]
  },
  {
    "number": 4892,
    "title": "Exoplayer in Recyclerview ",
    "created_at": "2018-09-29T13:04:56Z",
    "closed_at": "2018-10-01T09:29:39Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4892",
    "body": "Can any one please help me in implementing Exoplayer with Recyclerview? Thank you",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4892/comments",
    "author": "sanketmthakare",
    "comments": [
      {
        "user": "AquilesCanta",
        "created_at": "2018-10-01T09:29:39Z",
        "body": "Hi @sanketmthakare, this question falls outside the scope of this issue tracker. I'd suggest you try your luck in a general Q&A, like stack overflow. Note that a quick search lead me to some useful material. Also do check out #867."
      }
    ]
  },
  {
    "number": 4888,
    "title": "Updating TrackSelector w/o ExoPlayer recreation",
    "created_at": "2018-09-28T05:28:58Z",
    "closed_at": "2018-10-03T18:45:13Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4888",
    "body": "Is it possible to reset or update a `TrackSelector` without creating a new instance of `ExoPlayer`? Or perhaps a way to update a `DefaultTrackSelector`’s  `TrackSelection.Factory`?\r\n\r\nI currently have a shared instance of ExoPlayer but have certain conditions prior to playback that may have a `DefaultTrackSelector` with specific implementation of the `TrackSelection.Factory`. It would be ideal if I did not have to recreate the ExoPlayer instance when this occurs.\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4888/comments",
    "author": "png6",
    "comments": [
      {
        "user": "erdemguven",
        "created_at": "2018-10-01T09:23:55Z",
        "body": "I think you can have a custom TrackSelection.Factory which would let you configure which type of TrackSelection to return."
      },
      {
        "user": "ojw28",
        "created_at": "2018-10-03T18:45:13Z",
        "body": "Closing as answered."
      }
    ]
  },
  {
    "number": 4880,
    "title": "Is it possible to play one ExoPlayer instance at two PlayerView at the same time?",
    "created_at": "2018-09-27T16:05:46Z",
    "closed_at": "2018-10-01T18:43:59Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4880",
    "body": "### Task description\r\nShow two views that play the same stream and are synchronized with each other\r\n\r\n### What I have currently achieved so far\r\nCreate 2 instances of ExoPlayer  with the same stream Uri and for each of them I set the respective PlayerView, the issue with this solution is that there is a small difference(best case) between 2 videos being played\r\n\r\n### Question\r\nIs it possible to use only one instance of the ExoPlayer for two different PlayerView (or maybe another way to have 2 Views that play the same stream synchronized)?\r\n\r\n#### UPDATE:\r\nI found this issue related to my question: #2855 Is there any update that this can be achieved more easily?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4880/comments",
    "author": "ShkurtiA",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2018-10-01T09:33:06Z",
        "body": "There is now easy way to do this, unfortunately. This is primarily due to platform limitations (specifically, that a decoder can only output to one surface).\r\n\r\nNote that your use case is slightly different to the one in the related issue you found. That issue was about playing different (albeit related) videos in a synchronized way. It sounds like you want to output the exact same video to two views.\r\n\r\nYou could opt to follow a similar approach as suggested in the related issue, however you'll be unnecessarily streaming the same content twice if you do this. An alternative and simpler approach would be to have the player output to a `SurfaceTexture`, and then having multiple views make use of the texture. It's definitely not straightforward, however, and figuring out exactly how to do this is beyond the scope of this issue tracker."
      },
      {
        "user": "ShkurtiA",
        "created_at": "2018-10-01T18:43:58Z",
        "body": "Ok thanks for you valuable feedback. I am closing it for now and maybe in the future I will comeback here again with some results"
      }
    ]
  },
  {
    "number": 4855,
    "title": "how to increase the simpleCache chunks space?",
    "created_at": "2018-09-21T12:53:42Z",
    "closed_at": "2018-09-21T13:28:05Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4855",
    "body": "By default, the space of simplecache is exactly 2MB, I want to increse it to more, how can I do it?? please help, thanks for your attention",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4855/comments",
    "author": "sajjadyousefnia",
    "comments": [
      {
        "user": "erdemguven",
        "created_at": "2018-09-21T13:28:05Z",
        "body": "Using `CacheDataSource(com.google.android.exoplayer2.upstream.cache.Cache, com.google.android.exoplayer2.upstream.DataSource, int, long)` constructor you can specify maxCacheFileSize. "
      }
    ]
  },
  {
    "number": 4852,
    "title": "Can I use android.support.v7.util.ListUpdateCallback to update current playlist in ExoPlayer ?",
    "created_at": "2018-09-21T09:09:43Z",
    "closed_at": "2018-10-15T08:11:10Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4852",
    "body": "Hi,\r\n\r\nI'm trying to reorder the current playlist from `ConcatenatingMediaSource mediaSources` instance. If we supposed that we have a `DiffUtil.DiffResult` instance between the current playlist and a new one, can we use the interface `android.support.v7.util.ListUpdateCallback` to apply the change to the current playlist like :\r\n```\r\ndiffResult.dispatchUpdatesTo(object : ListUpdateCallback {\r\n                        override fun onChanged(position: Int, count: Int, payload: Any?) {\r\n                            Timber.d(\"ListUpdateCallback.onChanged(position = $position, count = $count, payload = $payload)\")\r\n                        }\r\n\r\n                        override fun onMoved(fromPosition: Int, toPosition: Int) {\r\n                            Timber.d(\"ListUpdateCallback.onMoved(fromPosition = $fromPosition, toPosition = $toPosition)\")\r\n                            mediaSources.moveMediaSource(fromPosition, toPosition)\r\n                        }\r\n\r\n                        override fun onInserted(position: Int, count: Int) {\r\n                            Timber.d(\"ListUpdateCallback.onInserted(position = $position, count = $count)\")\r\n                        }\r\n\r\n                        override fun onRemoved(position: Int, count: Int) {\r\n                            Timber.d(\"ListUpdateCallback.onRemoved(position = $position, count = $count)\")\r\n                            removeInMediaSource(position, 0, count)\r\n                        }\r\n\r\n                        private fun removeInMediaSource(position: Int, removedCount: Int, count: Int) {\r\n                            if (removedCount >= count || mediaSources.size == position)\r\n                                return\r\n\r\n                            mediaSources.removeMediaSource(position) {\r\n                                removeInMediaSource(position, removedCount + 1, count)\r\n                            }\r\n                        }\r\n\r\n                    })\r\n``` \r\nIs this callback implementation correct ?\r\n\r\nI am interested only by the remove and move action on the playlist.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4852/comments",
    "author": "herintsoaRazaf",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2018-09-21T15:16:10Z",
        "body": "The overall approach looks fine. Were you running into issues with it? The `dev-v2` branch has range-based removal which will help simplify `removeInMediaSource` (see also #4542)."
      },
      {
        "user": "herintsoaRazaf",
        "created_at": "2018-09-21T15:33:38Z",
        "body": "I just ask if some of you have already use this kind of implementation before to change the playlist on ExoPlayer."
      }
    ]
  },
  {
    "number": 4850,
    "title": "Out of memory Exoplayer in Fragment inside Viewpager",
    "created_at": "2018-09-21T07:52:54Z",
    "closed_at": "2018-10-19T15:09:02Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4850",
    "body": "I have used Exoplayer to stream video online from internet. My player work inside fragmet inside viewpager. The crash happen when I played about 10 videos .\r\nHere is my logcat : \r\n`E/LoadTask: OutOfMemory error loading stream\r\n    java.lang.OutOfMemoryError: Failed to allocate a 65548 byte allocation with 22600 free bytes and 22KB until OOM\r\n        at com.android.okio.Segment.<init>(Segment.java:37)\r\n        at com.android.okio.SegmentPool.take(SegmentPool.java:48)\r\n        at com.android.okio.OkBuffer.writableSegment(OkBuffer.java:505)\r\n        at com.android.okio.Okio$2.read(Okio.java:114)\r\n        at com.android.okio.RealBufferedSource.read(RealBufferedSource.java:51)\r\n        at com.android.okhttp.internal.http.HttpConnection$FixedLengthSource.read(HttpConnection.java:469)\r\n        at com.android.okhttp.internal.Util.skipAll(Util.java:227)\r\n        at com.android.okhttp.internal.http.HttpConnection.discard(HttpConnection.java:239)\r\n        at com.android.okhttp.internal.http.HttpConnection$FixedLengthSource.close(HttpConnection.java:491)\r\n        at com.android.okio.RealBufferedSource.close(RealBufferedSource.java:204)\r\n        at com.android.okio.RealBufferedSource$1.close(RealBufferedSource.java:187)\r\n        at com.google.android.exoplayer2.upstream.DefaultHttpDataSource.close(DefaultHttpDataSource.java:279)\r\n        at com.google.android.exoplayer2.upstream.DefaultDataSource.close(DefaultDataSource.java:164)\r\n        at com.google.android.exoplayer2.util.Util.closeQuietly(Util.java:231)\r\n        at com.google.android.exoplayer2.source.ExtractorMediaPeriod$ExtractingLoadable.load(ExtractorMediaPeriod.java:867)\r\n        at com.google.android.exoplayer2.upstream.Loader$LoadTask.run(Loader.java:308)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\r\n        at java.lang.Thread.run(Thread.java:818)`\r\n\r\nHere is my config code : \r\n`  \r\nMediaSource mediaSource = new ExtractorMediaSource.Factory(new DefaultDataSourceFactory(getContext(), Util.getUserAgent(getContext(), getString(R.string.app_name)), (TransferListener<? super DataSource>) new DefaultBandwidthMeter()))\r\n                        .createMediaSource(Uri.parse(content.getUrl())); \r\n                TrackSelection.Factory videoTrackSelectionFactory =\r\n                        new AdaptiveTrackSelection.Factory(new DefaultBandwidthMeter());\r\n                trackSelector = new DefaultTrackSelector(videoTrackSelectionFactory);\r\n                player = ExoPlayerFactory.newSimpleInstance(getContext(), trackSelector);\r\n                playerView.setPlayer(player);\r\n                player.prepare(mediaSource);\r\n                player.setRepeatMode(Player.REPEAT_MODE_ONE);\r\n                player.setPlayWhenReady(false);`\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4850/comments",
    "author": "cinohub",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2018-09-21T08:38:00Z",
        "body": "> when I played about 10 videos\r\n\r\nAre these playing at the same time in multiple players? Please check your app's code to make sure you're releasing players when they aren't needed."
      },
      {
        "user": "cinohub",
        "created_at": "2018-09-21T09:35:01Z",
        "body": "> > when I played about 10 videos\r\n> \r\n> Are these playing at the same time in multiple players? Please check your app's code to make sure you're releasing players when they aren't needed.\r\n\r\n\r\nThanks for fast reply.\r\nI play video when setUserVisibleHint() method fire. and pause video when onPause() fire. \r\nHere is my code play and pause : \r\n`\r\n private void pausePlayer() {\r\n\r\n        if (player != null) {\r\n            player.setPlayWhenReady(false);\r\n            player.getPlaybackState();\r\n        }\r\n    }\r\n\r\n    private void startPlayer() {\r\n        if (player != null) {\r\n            player.seekTo(0);\r\n            player.setPlayWhenReady(true);\r\n            player.getPlaybackState();\r\n        }\r\n\r\n    }\r\n`\r\n\r\nDo you have any idea to release player when fragment not visible by user. I use fragment inside viewpager. Player auto play video when fragment visible, so it working about 10 video and crash with OOM. "
      },
      {
        "user": "andrewlewis",
        "created_at": "2018-09-21T15:10:55Z",
        "body": "You should probably be calling `player.release()` on any instances that aren't visible to the user. It may be better to have just one player instance for your app, and change its output view as needed."
      },
      {
        "user": "andrewlewis",
        "created_at": "2018-10-19T15:09:02Z",
        "body": "Closing as this seems like an app issue with using too many players at the same time."
      }
    ]
  },
  {
    "number": 4847,
    "title": "exo_play and exo_pause do not support \"?attr/selectableItemBackgroundBorderless\"",
    "created_at": "2018-09-20T18:51:37Z",
    "closed_at": "2018-09-21T15:38:01Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4847",
    "body": "### Issue description\r\nI'm trying to add as background `\"?attr/selectableItemBackgroundBorderless\"`\r\nBut it does not seem to work, what could be the reason?\r\n\r\n### Version of ExoPlayer being used\r\n`com.google.android.exoplayer:exoplayer:2.8.1\r\n`\r\n### Device(s) and version(s) of Android being used\r\nAndroid 7",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4847/comments",
    "author": "Angelk90",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2018-09-21T15:38:01Z",
        "body": "This issue looks like a general question about Android development. We recommend asking such questions on Stack Overflow, and are unfortunately unable to answer them here."
      }
    ]
  },
  {
    "number": 4846,
    "title": "Customize Quality selection Popup",
    "created_at": "2018-09-20T16:14:37Z",
    "closed_at": "2018-09-20T16:38:24Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4846",
    "body": "I am unable to customize quality selection popup. Could you please guide me how to do it. At least customize the quality selection text",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4846/comments",
    "author": "bhupalreddykokkanti",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2018-09-20T16:38:24Z",
        "body": "This issue looks like a general question about Android development. We recommend asking such questions on Stack Overflow, and are unfortunately unable to answer them here."
      }
    ]
  },
  {
    "number": 4843,
    "title": "How to seperate default time bar",
    "created_at": "2018-09-20T06:25:44Z",
    "closed_at": "2018-09-20T07:41:27Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4843",
    "body": "hi there, i am looking for default time bar separated even though i make media source ConcatenatingMediaSource. For example, like play music list supposed current bar show only time of current music play instead of combine them all together in on line timeba.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4843/comments",
    "author": "hafiz013",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2018-09-20T07:41:27Z",
        "body": "The default behavior is to show each song separately (one at a time). If you call `playerView.setShowMultiWindowTimeBar(true)` then the time bar will show the concatenation of the songs as if they were one long track, but see also #4727 for limitations of this."
      },
      {
        "user": "hafiz013",
        "created_at": "2018-09-25T09:47:48Z",
        "body": "so in that case how to play next media source programmatically in stead of next button from controller."
      },
      {
        "user": "andrewlewis",
        "created_at": "2018-09-25T10:08:25Z",
        "body": "Is this the same as #4863 or a different question? If you pass the player a concatenation it should advance automatically from one item to the next."
      },
      {
        "user": "hafiz013",
        "created_at": "2018-09-26T02:29:12Z",
        "body": "different question.playerView.setShowMultiWindowTimeBar(false) make time bar separated media source even though already concatenation. thank for info."
      }
    ]
  },
  {
    "number": 4836,
    "title": "VP9 ext crash from libvpx 1.7.0",
    "created_at": "2018-09-18T10:53:04Z",
    "closed_at": "2018-09-23T15:17:10Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4836",
    "body": "It seems libvpx 1.7.0 has more neon code added. There was error when I run config. By adding -mfloat-abi=softfp -mfpu=neon to cflag, I have managed to get the so file compiled. However, after the first frame is decoded, the sample app always crashes with: \r\n\r\ncom.google.android.exoplayer2.demo A/libc: Fatal signal 11 (SIGSEGV), code 1, fault addr 0x10 in tid 18160 (Thread-1825)\r\n\r\nMy ExoPlayer version is 2.8.2. The working libvpx is 1.6.2, which is from Jan 2017.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4836/comments",
    "author": "blueslabs",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2018-09-21T16:32:42Z",
        "body": "I think the errors that occur during configuration might not actually be problematic. What do you see if you just ignore the errors during configuration? I tried building with libvpx 1.7.0, ignoring the errors and playing a video with the vp9 extension and it worked."
      },
      {
        "user": "blueslabs",
        "created_at": "2018-09-22T18:53:46Z",
        "body": "Thanks! Did a clean build, it works now. -mfloat-abi=softfp -mfpu=neon is actually only required for the current master, otherwise build can fail. 1.7.0 can build without this."
      }
    ]
  },
  {
    "number": 4831,
    "title": "Getting frame rates and bitrate of a stream",
    "created_at": "2018-09-18T05:02:15Z",
    "closed_at": "2018-09-18T07:08:42Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4831",
    "body": "Always when I try to get the frame rate and bitrate of a TS MPEG-TS stream i get -1 as a result.\r\nSame method works fine on HLS\r\nAny suggestions?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4831/comments",
    "author": "developer244",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2018-09-18T07:08:42Z",
        "body": "The value -1 is `Format.NO_VALUE`, and indicates that the frame rate and bitrate are unknown. The information is likely just not available in the container (unlike with HLS)."
      }
    ]
  },
  {
    "number": 4830,
    "title": "Change time exo_rew and exo_ffwd",
    "created_at": "2018-09-17T20:25:51Z",
    "closed_at": "2018-09-18T07:38:07Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4830",
    "body": "### Issue description\r\nIs there any way to change the time of exo_rew and exo_ffwd?\r\n\r\nexo_rew allows you to go back 5 sec\r\nexo_ffwd allows you to go ahead of 15 sec\r\n\r\n### Version of ExoPlayer being used\r\n`com.google.android.exoplayer:exoplayer:2.8.1\r\n`\r\n### Device(s) and version(s) of Android being used\r\nAndroid 7",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4830/comments",
    "author": "Angelk90",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2018-09-18T07:38:07Z",
        "body": "The `rewind_increment` and `fastforward_increment` attributes on `PlayerControlView` (and `PlayerView`) let you set the duration of the seek applied when tapping those buttons."
      }
    ]
  },
  {
    "number": 4827,
    "title": "ExoPlayer's bug with Proguard",
    "created_at": "2018-09-17T10:09:33Z",
    "closed_at": "2018-09-17T19:23:51Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4827",
    "body": "### Issue description\r\nCurrently in my project I use ExoPlayer r2.4.4. Half year ago I tried to upgrade to 2.6.2 and got many complains from users, app crashes on some devices, mostly TV boxes were affected, but some mobile devices too. My app has 100K users daily and is running on very different devices. Because I did not know a reason and I decided to return back to 2.4.4. In this case Firebase Crashlytics do not report about exceptions from ExoPlayer. One of my user has H96 Pro+ device, this device has a this problem. I decided to repeat a problem with version 2.8.4. I sent to a user apk for testing. He said app crashed. And again I couldn't find exception in the Crashlytics. Because Proguard gave me some problems with RenderScript and Google Cast(TM) I decided to add ExoPlayer class to proguard-rules.pro file. And sent new apk to user. With such setting app doesn't crash.\r\n\r\n`-keep class com.google.android.exoplayer.** {*;}`\r\n\r\n### Reproduction steps\r\nRun app with ExoPlayer 2.8.4 on H96 Pro+ with Proguard enabled\r\n\r\n### Link to test content\r\nApp crashes when playing HLS\r\n\r\n### Version of ExoPlayer being used\r\n2.8.4\r\n\r\n### Device(s) and version(s) of Android being used\r\nH96 Pro+ and some other\r\n\r\n### A full bug report captured from the device\r\nCouldn't catch an exceptions on my test devices\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4827/comments",
    "author": "AntonAndev",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2018-09-17T16:42:24Z",
        "body": "In v2 the package name changed to `com.google.android.exoplayer2` (with a 2 on the end), so, given the proguard configuration made a difference, I wonder whether the problem is not in your direct usage of ExoPlayer but in another of your app's dependencies which bundles ExoPlayer v1.\r\n\r\nTo make progress on this, could you ask the user with the H96 Pro+ device to take a bug report after reproducing the error so we can see what the crash is?"
      },
      {
        "user": "AntonAndev",
        "created_at": "2018-09-17T19:09:14Z",
        "body": "Hello, I tried to comment \"-keep class com.google.android.exoplayer.** {*;}\" with Proguard enabled and sent new apk to the user, app doesn't crash... So I do not know what happened before."
      }
    ]
  },
  {
    "number": 4821,
    "title": "How to implement offline save video in .exo format and only playable by my app(like youtube app) ",
    "created_at": "2018-09-16T10:00:45Z",
    "closed_at": "2018-09-21T13:36:59Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4821",
    "body": "\r\ni am working on an android app which can download the video from server and store it in SD card in .exo format and plays it while the app is in offline mode. but i want the add one more functionality to my app.(like youtube app).",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4821/comments",
    "author": "sudhirs745",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2018-09-16T18:32:25Z",
        "body": "Please can you try and explain what you're trying to do more clearly? I don't understand the question."
      },
      {
        "user": "sudhirs745",
        "created_at": "2018-09-17T17:58:47Z",
        "body": "I'm working on an android app which can download the video from server and store it in SD card. and plays it while the app is in offline mode. but i want the add one more functionality to my app. now the videos downloaded by app can be played by any video player in the device. But i want to restrict that functionality.so the videos downloaded by my app can only playable by my app(like youtube app).\r\n\r\nI'm totally new to this functionality .. any ideas and approaches to achieve this ?"
      },
      {
        "user": "erdemguven",
        "created_at": "2018-09-21T13:36:59Z",
        "body": "To encrypt cached media files (exo files) you need to use AesCipherDataSink and AesCipherDataSource to encrypt and decrypt while you create your CacheDataSource. For an example you can check com.google.android.exoplayer2.upstream.cache.CacheDataSourceTest2#buildCacheDataSource code."
      }
    ]
  },
  {
    "number": 4812,
    "title": "How to get current video index",
    "created_at": "2018-09-14T02:31:02Z",
    "closed_at": "2018-09-14T09:00:58Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4812",
    "body": "Hi\r\nI feed  ConcatenatingMediaSource() to the player, it plays well but with few issue\r\n1. Onclick previous button same video restarts instead of playing previous one.\r\n2 When video ends and next video starts automatically, I am not able to find  current video index in any method.In ontrackchanged method, player.getCurrentWindowIndex does return only previous value. Please check code below and suggest answer to me.\r\n\r\n\r\n\r\n try {\r\n                MediaSource[] mediaSources = new MediaSource[vods.size()];\r\n                for (int initialVid = 0; initialVid < vods.size(); initialVid++) {\r\n\r\n                    if (StringUtils.isNotEmpty(vods.get(initialVid).getVideoUrl())) {\r\n                        String url = vods.get(initialVid).getVideoUrl();\r\n                        switch (vods.get(initialVid).getStreamFormat()) {\r\n                            case \"mp4\":\r\n                                mediaSources[initialVid] = buildMP4MediaSource(url);\r\n                                break;\r\n                            default:\r\n                                mediaSources[initialVid] = buildHLSMediaSource(url,vods.get(initialVid).getCcPath());\r\n                                break;\r\n                        }\r\n                    }\r\n                }\r\n                mediaSource = mediaSources.length == 1 ? mediaSources[0]\r\n                        : new ConcatenatingMediaSource(mediaSources);\r\n                playVideo();\r\n\r\n\r\n            }",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4812/comments",
    "author": "ummerakbar45",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2018-09-14T09:00:58Z",
        "body": "> Onclick previous button same video restarts instead of playing previous one.\r\n\r\nThis is by design unless you're near the start of the current video (I think it's within the first 3 seconds). This is fairly standard behavior for the back button. If you want something else you're able to build your own UI components that control the player in a different way.\r\n\r\n> In ontrackchanged method, player.getCurrentWindowIndex does return only previous value\r\n\r\nYou should call `getCurrentWindowIndex` from the `onPositionDiscontinuity` method instead, when `reason == DISCONTINUITY_REASON_PERIOD_TRANSITION`."
      }
    ]
  },
  {
    "number": 4809,
    "title": "Android and API version requirements for ExoPlayer v2",
    "created_at": "2018-09-12T16:00:12Z",
    "closed_at": "2018-09-12T16:19:50Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4809",
    "body": "I'm a Senior Software Engineer for Mersive Technologies. We are currently using ExoPlayer v1 for media playback in our Android-based hardware product. With the next revision of our product, we're running into a need to set the playback rate. My understanding is that this can be done via the StandaloneMediaClock for video playback, or via the MediaClock in AudioTrack (SetPlaybackParams). However, both of these require at least API 23 and thus Android 6. We're currently using Android 5.1.1 and API 22.\r\n\r\nAs a result, I'm looking into either upgrading our Android and API version, or moving to ExoPlayer v2, which appears to have the ability to set playback rate via the player interface. My question is what version of Android and API is required to run ExoPlayer v2?\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4809/comments",
    "author": "cwilcox-mersive",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2018-09-12T16:19:50Z",
        "body": "> My question is what version of Android and API is required to run ExoPlayer v2?\r\n\r\nUnless you're doing something unusual, the API level requirements are the same as V1 (i.e. API level 16 for audio/video playback)."
      }
    ]
  },
  {
    "number": 4802,
    "title": "Question: Analytics Listener Play Status + Detect Replay",
    "created_at": "2018-09-11T13:39:22Z",
    "closed_at": "2018-09-13T17:04:00Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4802",
    "body": "Using: Exoplayer 2.8.4\r\n\r\nI am trying to implement some tracking from our analytics team, and there are two tracking events that I'm having trouble finding a way to track through the Analytics Listener.\r\n\r\nFirstly, is it possible to detect replays if the video is set to loop when it completes? I tried to listen to:\r\n\r\n```\r\noverride fun onPlayerStateChanged(\r\n        eventTime: AnalyticsListener.EventTime?,\r\n        playWhenReady: Boolean,\r\n        playbackState: Int\r\n    )\r\n```\r\n\r\nbut it doesn't appear as though this event is fired with state ENDED (or anything for that matter) when the video replays.\r\n\r\nSecondly, we would like to track how far into a video a user has watched at certain intervals (e.g. 1s, 5s, 10s, 30s). Is it possible to receive callbacks at certain points in the media's playback? As far as I can see, there's no way to receive callbacks once every second or so. I was thinking that I could implement this via a timer that runs alongside the video, but the problem with that approach is that the second the video has to spend time buffering or the user has seeked, the timer will no longer be accurate to the actual video position.\r\n\r\nThanks",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4802/comments",
    "author": "ghost",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2018-09-11T13:50:27Z",
        "body": "For looping (\"replay\"), you should receive a `onPositionDiscontinuity` event with reason `DISCONTINUITY_REASON_PERIOD_TRANSITION`.\r\n\r\nFor the regular timer, you can either:\r\n- Call a Handler method in regular intervals (every x seconds in real time) and then check the current position with `player.getCurrentPosition()`.\r\n- Or send messages at pre-defined media positions. You can do that by calling `player.createMessage(messageHandler).setPosition(position).setHandler(appHandler).send()`. You may also want to add `setDeleteAfterDelivery(false)` to resend the message even if the user seeks back."
      },
      {
        "user": "ghost",
        "created_at": "2018-09-11T18:49:50Z",
        "body": "The replay check you mentioned does work, so thank you.\r\n\r\nI've done the below for play time tracking and it doesn't ever seem to fire back to the message target. In the below, `recordPlayTime` is never called.\r\n\r\n```\r\nprivate fun createMessageAtPosition(videoPlayer: SimpleExoPlayer, position: Int, handler: Handler) {\r\n        val positionInMilliseconds = position.toLong() * 1000\r\n        Log.v(TAG, \"createMessageAtPosition, Adding message at ${positionInMilliseconds}ms\")\r\n        videoPlayer.createMessage { _: Int, _: Any -> recordPlayTime(position) }\r\n            .setPosition(positionInMilliseconds)\r\n            .setDeleteAfterDelivery(false)\r\n            .setHandler(handler)\r\n            .send()\r\n    }\r\n\r\n    private fun recordPlayTime(position: Int) {\r\n        analyticsLogger.playTime(position)\r\n    }\r\n```\r\n"
      },
      {
        "user": "tonihei",
        "created_at": "2018-09-13T11:13:18Z",
        "body": "I just tried and added the following lines to our demo app:\r\n```\r\nplayer\r\n    .createMessage((type, payload) -> Log.d(\"POSITION\", \"message triggered at 5 seconds.\"))\r\n    .setPosition(5000)\r\n    .setDeleteAfterDelivery(false)\r\n    .setHandler(new Handler())\r\n    .send();\r\n```\r\nThis works fine and logs the message every time I play past the 5 second mark. Can you check what is different in your app? Especially whether the position is actually in milliseconds."
      },
      {
        "user": "ghost",
        "created_at": "2018-09-13T17:04:00Z",
        "body": "For some reason, this started working after I forced the handler to and message to be created on the main thread. Unsure of why exactly that worked, since technically the UI should only be created on the main thread. \r\n\r\nAlso worth noting: PlayerMessage.Target is missing nullity parameters and Kotlin incorrectly assumes these fields will be non-null, which caused a crash since payload is null\r\n\r\n```\r\npublic interface Target {\r\n    void handleMessage(int messageType, Object payload) throws ExoPlaybackException;\r\n  }\r\n```\r\n\r\nThank you for your help, closing."
      },
      {
        "user": "tonihei",
        "created_at": "2018-09-14T13:22:55Z",
        "body": "Thanks for noting the missing annotations! We'll add them to the PlayerMessage class."
      }
    ]
  },
  {
    "number": 4790,
    "title": "ExoPlayer drops last video frame of the segment on bitrate change",
    "created_at": "2018-09-07T19:06:01Z",
    "closed_at": "2018-11-05T08:41:32Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4790",
    "body": "Hello,\r\n\r\nBased on my debug on ExoPlayer 2.6.0, I see that the current NAL unit (Type: Access Unit) related information is written to SampleMetadatQueue (commitSample() function) when the next NAL unit (Type: Access Unit) is found. So basically, when we find the start of Next NAL unit, we know that the previous NAL unit has ended and we commit metadata for that NAL unit. Which generally works fine. \r\n\r\nBut during that bit-rate change, I see that following happens in HLSMediaChunk.java:\r\n\r\n```  \r\n    if (previousChunk != null) {\r\n      shouldSpliceIn = previousChunk.hlsUrl != hlsUrl;\r\n      previousExtractor = previousChunk.discontinuitySequenceNumber != discontinuitySequenceNumber\r\n          || shouldSpliceIn ? null : previousChunk.extractor;\r\n    } else {\r\n      shouldSpliceIn = false;\r\n    }\r\n    Pair<Extractor, Boolean> extractorData = extractorFactory.createExtractor(previousExtractor,\r\n        dataSpec.uri, trackFormat, muxedCaptionFormats, drmInitData, timestampAdjuster);\r\n```\r\n\r\nThis means, we create new extractor when the bitrate (hlsUrl) changes. This new extarctor ends up creating new objects for H264Reader and Sample reader and hence the old state is lost. Now when the first NAL unit of the new chunk (at new bit-rate) is found, we are not able to commit Metadata for last NAL unit of previous chunk (at old bit-rate). And hence the last frame is never read/decoded/displayed.\r\n\r\nThis can be reproduced by any multi-bitrate HLS stream. Can some one in ExoPlayer team take a look at this and validate if this is actually an issue?\r\n\r\nShalin\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4790/comments",
    "author": "shalin186",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2018-09-10T11:03:15Z",
        "body": "Interesting observation. Is it mandated anywhere in the HLS specification that a sample cannot be split across more than one segment, because I'm fairly confident we've seen streams that do this. If it's not mandated, I don't think we know that the last sample is complete in the case you describe, because it may be continued in the next segment of the bitrate we've moving away from. Hence it would be unsafe to output sample metadata for it, because this could lead to the decoder failing upon being provided with an incomplete sample.\r\n\r\nTo conclude, I think you're right, but I'm also not sure it's fixable. It seems like a fundamental problem with use of TS in HLS. If any of my observations or assumptions above are incorrect, and it can be fixed in a safe way, please let us know! It should be noted that using FMP4 streams, either in HLS or (better) DASH, solves the problem, because the FMP4 container makes it obvious where the end of each sample is."
      },
      {
        "user": "shalin186",
        "created_at": "2018-09-10T17:43:54Z",
        "body": "Hi ojw28,\r\n\r\nThanks for your detailed response. I now understand why it is done this way. I was not aware of HLS spec where it can allow sample to cross the segment boundary. In our case though, that's not going to happen since we support the hls streams created only by us (which won't have such situation). So in case, we know that the sample will not cross the segment bondary, how would you recommend I can fix this issue just for my individual case? I know you can't fix it in ExoPlayer repo but some pointers for my local fix would be appreciated.\r\n\r\nShalin"
      },
      {
        "user": "ojw28",
        "created_at": "2018-11-05T08:41:32Z",
        "body": "If you control the server side then I'd suggest you upgrade to using FMP4 segments, and get all of the other benefits that brings at the same time. FMP4 segments have been supported in HLS for a while now.\r\n\r\nFor a local fix, you could try something like modifying `TsExtractor` to execute some flushing logic when `read` is about to return `RESULT_END_OF_INPUT`, where the flushing logic causes any pending samples to be output."
      }
    ]
  },
  {
    "number": 4789,
    "title": "Disable seeking in Exoplayer",
    "created_at": "2018-09-07T18:01:41Z",
    "closed_at": "2018-09-11T08:06:48Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4789",
    "body": "How do I prevent my exoplayer from seeking videos ?\r\nHow do I disable my scrubber ?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4789/comments",
    "author": "shubham-arora-18",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2018-09-10T08:01:27Z",
        "body": "You can disable to scrubbing functionality by calling `DefaultTimeBar.setEnabled(false)`. If you also want to hide the scrubber, you can set its size to zero by using:\r\n```\r\napp:scrubber_enabled_size=\"0dp\"\r\napp:scrubber_disabled_size=\"0dp\"\r\napp:scrubber_dragged_size=\"0dp\"\r\n```"
      },
      {
        "user": "tonihei",
        "created_at": "2018-09-11T08:06:48Z",
        "body": "Closing, as I think the question has been answered. Feel free to reopen if not."
      }
    ]
  },
  {
    "number": 4785,
    "title": "how to use ClippingMediaSource to implement mid_roll?",
    "created_at": "2018-09-07T01:35:50Z",
    "closed_at": "2018-09-10T10:12:44Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4785",
    "body": "I use ClippingMediaSource to split the content video into two content videos. and then add a mid_roll ad between them.   Sample code like this:\r\n// pre_roll + content1 + mid_roll + content2\r\nClippingMediaSource content1 = \r\n                      new ClippingMediaSource(mediaSources[1], 0, 15000000);\r\nClippingMediaSource content2 =\r\n                     new ClippingMediaSource(mediaSources[1], 15000000, C.TIME_END_OF_SOURCE);\r\n mediaSource = new ConcatenatingMediaSource(\r\n                  mediaSources[0],      // pre_roll\r\n                  content1,                    // content1[0 ~ 15s]\r\n                  mediaSources[2],      // mid_roll\r\n                  content2);                  // content2[15s ~ end]\r\nBut I can't get the duration of the content video before splitting .Is there any api can get the duration? If not, hope give me some advices to implement this function.\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4785/comments",
    "author": "Romantic-LiXuefeng",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2018-09-07T13:26:53Z",
        "body": "You could sum up the durations of all content parts yourself. Listen to timeline updates (`eventListener.onTimelineChanged`) and wait until all the duration of all the content windows are known.\r\n\r\nWe are currently also working on a metadata retriever which can be used to load media information without playing the media. This will be part of a future release and is not yet available. As soon as this metadata retriever is available, you could also query the content (without clipping) to get its duration."
      },
      {
        "user": "tonihei",
        "created_at": "2018-09-07T13:29:33Z",
        "body": "Also note that inserting midrolls this way doesn't work well with our existing UI components. The preferred way to do this is still the custom `AdsLoader` as discussed in #4769."
      },
      {
        "user": "Romantic-LiXuefeng",
        "created_at": "2018-09-10T10:12:44Z",
        "body": "If the content video container formats are mp4 or mkv in the playlist, when call it's perpareChild()  it's first timeline with unkown duration.  it's duration become knowns until the video before it fully loaded and then load it's media information  . so i think wait until all the duration of all the content windows are known is not a right way."
      }
    ]
  },
  {
    "number": 4770,
    "title": "onPlayerError return error exception",
    "created_at": "2018-09-04T09:12:23Z",
    "closed_at": "2018-09-11T08:02:23Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4770",
    "body": "I use explayer 2.4.1, and some users(not all) report this error, I can not get the actual video file in user's phone, any one can help to give some suggestion about the exception? Why it happens and what should I do for this exception?\r\n\r\ncom.google.android.exoplayer2.e\r\n\tat com.google.android.exoplayer2.i.handleMessage(Unknown Source)\r\n\tat android.os.Handler.dispatchMessage(Handler.java:98)\r\n\tat android.os.Looper.loop(Looper.java:154)\r\n\tat android.os.HandlerThread.run(HandlerThread.java:61)\r\nCaused by: java.lang.IllegalStateException\r\n\tat android.media.MediaCodec.native_stop(Native Method)\r\n\tat android.media.MediaCodec.stop(MediaCodec.java:2007)\r\n\tat com.google.android.exoplayer2.e.b.C(Unknown Source)\r\n\tat com.google.android.exoplayer2.l.d.a(Unknown Source)\r\n\tat com.google.android.exoplayer2.l.d.a(Unknown Source)\r\n\tat com.google.android.exoplayer2.i.c(Unknown Source)\r\n\t... 4 more\r\njava.lang.IllegalStateException\r\n\tat android.media.MediaCodec.native_stop(Native Method)\r\n\tat android.media.MediaCodec.stop(MediaCodec.java:2007)\r\n\tat com.google.android.exoplayer2.e.b.C(Unknown Source)\r\n\tat com.google.android.exoplayer2.l.d.a(Unknown Source)\r\n\tat com.google.android.exoplayer2.l.d.a(Unknown Source)\r\n\tat com.google.android.exoplayer2.i.c(Unknown Source)\r\n\tat com.google.android.exoplayer2.i.handleMessage(Unknown Source)\r\n\tat android.os.Handler.dispatchMessage(Handler.java:98)\r\n\tat android.os.Looper.loop(Looper.java:154)\r\n\tat android.os.HandlerThread.run(HandlerThread.java:61)",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4770/comments",
    "author": "reallychenchi",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2018-09-04T10:39:59Z",
        "body": "I've seen this exception before when the user leaves the app and this is part of the final release of the player. That's probably a platform bug and we haven't found any negative effects yet. Also happens in our demo app. \r\n\r\nIf you think it happens in another situation, please try to get more reproduction info, bugreports etc. to allow us to better understand what's going on."
      },
      {
        "user": "tonihei",
        "created_at": "2018-09-11T08:02:23Z",
        "body": "Closing for now as no further information is available. If you get something new which isn't explained by the effect I described above, please feel free to reopen the issue."
      }
    ]
  },
  {
    "number": 4762,
    "title": "CENTER_CROP in TextureView",
    "created_at": "2018-09-02T05:23:40Z",
    "closed_at": "2018-09-12T15:41:52Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4762",
    "body": "When using SurfaceView          player.setVideoScalingMode(C.VIDEO_SCALING_MODE_SCALE_TO_FIT_WITH_CROPPING) is working as expected, unfortunately when I use TextureView by providing a surface_type in xml it is not working. Is this a bug or this is a expected behavior. ",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4762/comments",
    "author": "ArcherEmiya05",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2018-09-02T12:43:52Z",
        "body": "It's a platform limitation (or just expected platform behavior) that scaling mode only applies when using `SurfaceView`. If you're using `PlayerView`, you could try to see if `PlayerView.setResizeMode` does what you want. Valid values are the `AspectRatioFrameLayout.RESIZE_MODE_*` constants (we need to improve our Javadoc to make this more obvious). If you're using `TextureView` directly, you can look at `TextureView.setTransform`."
      },
      {
        "user": "AndroidDeveloperLB",
        "created_at": "2019-01-21T08:31:51Z",
        "body": "@ojw28 What is the transform matrix that should be used for centerCrop on TextureView?\r\n"
      }
    ]
  },
  {
    "number": 4755,
    "title": "adaptive playing with different video qualities in different uri",
    "created_at": "2018-08-30T19:56:06Z",
    "closed_at": "2018-08-31T11:21:07Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4755",
    "body": "i have searched the issues read the documents and even analysed the demo app but couldn't find any good solution \r\nas the title says i have made a player with the support different video qualities\r\ni found that in demo app the problem have solved with an only URI pointing to a file with *.mpd\r\nbut in my case different video qualities have different url which leads to different uri and media sources\r\n\r\nwhat should i do?\r\nshould i merge the different Media Sources?\r\n\r\n### Version of ExoPlayer being used\r\nExoPlayer v2.8.4\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4755/comments",
    "author": "Shorakie",
    "comments": [
      {
        "user": "AquilesCanta",
        "created_at": "2018-08-30T20:30:25Z",
        "body": "The should answer is: Use DASH, HLS or SmoothStreaming. If none of these is an option, you'll need to create your own media source, but it's not an easy task.\r\n\r\nPlease clarify, you have several URIs pointing to what?\r\n\r\nThis exact issue is what adaptive streaming aims to solve. Note that, in order for the content to be _synchronizable_ mid playback, you'll need it to be segmented, somehow. Not necessarily by having different files, but at least know at which points you can switch from one quality to the other. If you don't use one of the widely used adaptive streaming formats, you'll be reinventing the wheel, as far as I can see. Maybe if you constrain your usecase a bit, you could come up with a simpler solution."
      },
      {
        "user": "Shorakie",
        "created_at": "2018-08-30T20:51:18Z",
        "body": "different uris of a video pointing to different quality links\r\nlike there is a _RAMPAGE_ video with 3 **URL** for 3 Qualities (480, 720, 1080) on a server\r\n\r\nso in app i am building three **URI**s pointing to the 3 different urls\r\n\r\nalso i dont have access to server and cant change the streaming formats"
      },
      {
        "user": "Shorakie",
        "created_at": "2018-08-30T20:55:05Z",
        "body": "as far as i can see there is not such a streaming format and also the server is for just downloading not watching online\r\n\r\nso i think i have to customize something but dont know exactly what"
      },
      {
        "user": "AquilesCanta",
        "created_at": "2018-08-31T08:46:47Z",
        "body": "What you mention doesn't sound like a supported usecase to me.\r\n\r\nDo you need to make them dynamically adaptive? In other words, would you like the player to adapt mid-stream? If so, the first issue I see is segmentation of the media. If you knew where the switching points are, you could build a DASH manifest / HLS playlists that wrap the file, but it really depends on the media. We cannot help you with this.\r\n\r\nIf you want to have an idea of how to implement it, having a look at the adaptive streaming formats will give you an idea. I think you will have better luck asking about this in a general Q&A like stack overflow. Good luck!"
      }
    ]
  },
  {
    "number": 4754,
    "title": "Playing only local files when device becomes offline",
    "created_at": "2018-08-30T16:05:48Z",
    "closed_at": "2018-08-30T16:15:02Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4754",
    "body": "I'm migrating my music player app from MediaPlayer to ExoPlayer2. So far everything is working flawlessly. I'm initializing the player using a **DefaultLoadControl** and a **DefaultTrackSelector**. I'm using **ConcatenatingMediaSource** as media source, containing mp3 URLs and also local files. I would like to know the best way to make ExoPlayer play only the local files when the device is offline. Any **DefaultTrackSelector.Parameters** that I can use to support this? Or should I create another ConcatenatingMediaSource containing only the local files? I'm fairly new to ExoPlayer.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4754/comments",
    "author": "gbirk",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2018-08-30T16:15:02Z",
        "body": "Your second proposed solution should work best for now. If you can easily distinguish between remote and local files, please just add the local files to the ConcatenatingMediaSource and you should be fine.\r\n\r\nAutomatically skipping remote files when they fail to load is not supported yet. Issue #4343 is tracking a feature request to skip failing files. As soon as that is supported, the remote mp3s should be automatically skipped as they fail to load when offline."
      }
    ]
  },
  {
    "number": 4752,
    "title": "How does the ExoPlayer works when switching the SampleStream exposed from different MediaSource?",
    "created_at": "2018-08-30T06:25:09Z",
    "closed_at": "2018-08-30T10:07:01Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4752",
    "body": "I am Chinese with poor English. I am confused that when playing playlist with ConcatenatingMediaSource, how does the MediaCodecRenderer works between advance reading media period and advance playing media period?  \r\nI know that when the all renderers have read the end of streams, that is the SampleQueue is empty .\r\nat this time , need to advance the reading period.  My questions are: \r\n1. Hope you tell me what the mediacodec renderer do after renderer replace stream? \r\n2. When to advance the playing period?\r\nThanks very much! Hoping you can give more information how does ExoPlayer works on blog. @canatella @kiall @talklittle @andrewlewis @jcable ",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4752/comments",
    "author": "Romantic-LiXuefeng",
    "comments": [
      {
        "user": "AquilesCanta",
        "created_at": "2018-08-30T10:07:01Z",
        "body": "Hi @Romantic-LiXuefeng, this question falls outside the scope of this issue tracker, the questions are very broad. I think your best shot is adding some logging to the media codec renderers (and potentially ExoPlayerImplInternal) and running a few samples that show what you want to analyze. @andrewlewis and @ojw28 may be able to provide more guidance."
      },
      {
        "user": "Romantic-LiXuefeng",
        "created_at": "2018-08-31T03:08:15Z",
        "body": "Thanks a lot. By reading the source code,  I found the steps are that while player is playing playlist:\r\n1. When the player is playing the first media period, maybe the first media period is already fully \r\n    buffered. At this time, advance loading period pointer, to pointing the second media period, then \r\n   the load thread begins buffering to the SampleQueue under controlled by LoadControl.\r\n2. The renderers loops read from the first media period SampleQueue. When all renderers have read \r\n   end of stream of first media period, that means the first media  period  SampleQueue is empty. At \r\n   this time, advance reading period pointer, to pointing the second media period, and the renderers \r\n   may set final or replace stream,  then video renderer reads the format changed from second \r\n   SampleQueue.\r\n3. When video renderer reads the format changed, first judge the format is supported reconfigure \r\n    codec.\r\n    If true,  support reconfigure codec :\r\n    (1).codecReconfigurationState sets RECONFIGURATION_STATE_WRITE_PENDING, \r\n    (2) next loop sets RECONFIGURATION_STATE_QUEUE_PENDING and supply the all reconfiguration \r\n    data at the start of the buffer.(3).next loop, append the first frame in the new format to the buffer,\r\n    then feed into decoder.\r\n    If false, re-initialization codec:\r\n    (1).codecReinitializationState set REINITIALIZATION_STATE_SIGNAL_END_OF_STREAM, \r\n    and  set empty buffer with EOS flag to decoder. and then break the loop, the renderer will stop \r\n    reading from second SampleQueue.  (2). the decoder loops renderer the output buffers until read \r\n    the  output buffer with EOS flag,  indicates that the renderer have render to the  end.  \r\n   (3) re-initialization codec with new format.\r\n4. When all renderers  have rendered  to the  end.  then advance playing period pointer,  to pointing \r\n   the second media period. then update the renderers, maybe some renderer disable, or re-enable,\r\n   or nothing todo.  \r\n5. As of this date，the player begins playing the second period, the player state may buffering or \r\n   ready.\r\n@andrewlewis @ojw28  is the steps correct ? and is some steps missing?  \r\n Between advance reading period and advance playing period, whether the decoder just renderer \r\n output buffer ? If so, how to get the size of the MediaCodec input buffer and output buffer ? "
      }
    ]
  },
  {
    "number": 4745,
    "title": "m3u8 subtitles are not supported",
    "created_at": "2018-08-29T12:39:55Z",
    "closed_at": "2018-08-29T14:10:11Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4745",
    "body": "Hi,\r\nI am facing a problem with m3u8 links for displaying subtitles, are m3u8 links are not supported with v2.2.0.\r\nTrying to construct the media source like:\r\n\r\n\r\n```\r\nFormat englishSubsFormat = Format.createTextSampleFormat(null, MimeTypes.APPLICATION_M3U8, null, Format.NO_VALUE, Format.NO_VALUE, \"eng\", null);\r\n            MediaSource englishSubSource = new SingleSampleMediaSource(Uri.parse(englishSubtitleLink), mediaDataSourceFactory, englishSubsFormat, C.TIME_UNSET);\r\n            MergingMediaSource mergedSource = new MergingMediaSource(videoSource, englishSubSource);\r\n````\r\n\r\nEventLogger shows below logs,\r\n\r\n> Renderer:None [\r\n08-27 15:35:51.903 27269-27269/com.myplex.vodafonestaging D/EventLogger: Group:0 [\r\n[ ] Track:0, id=null, mimeType=application/x-mpegURL, language=English, supported=NO\r\n]\r\n\r\n\r\nPlease let me know if anything wrong with Format creation.\r\nNote: englishSubtitleLink is \"m3u8\" link.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4745/comments",
    "author": "srikanthsunkari",
    "comments": [
      {
        "user": "AquilesCanta",
        "created_at": "2018-08-29T14:10:11Z",
        "body": "Try replacing your single sample media source with an HlsMediaSource. \r\n\r\nThe only way to reproduce m3u8 files is to use HlsMediaSource. SingleSampleMediaSource is only used for media which is made up by a single sample. For example, subtitle files (example: vtt, srt, etc). Note that m3u8 files themselves are not subtitles, but may contain a list of subtitles.\r\n\r\nDepending on the type of `videoSource`, it might make more sense including subtitles as part of the original media. For example, if videoSource is an HlsMediaSource, then try referring to your subtitles m3u8 from an EXT-X-MEDIA. Please provide more context below (media links, for example), if this does not answer your question."
      },
      {
        "user": "srikanthsunkari",
        "created_at": "2018-08-30T08:06:20Z",
        "body": "Thank you @AquilesCanta, I am able to show subtitles with HlsMediaSource now.\r\n      \r\nThe subtitle hls source is different from the video source, though the video source is also an hls source and each language subtitle has its own m3u8 link. \r\n\r\nThough being able to show subtitles, constructing HlsMediaSource for a specific subtitle will not allow me to specify the format id or language code except track group index, whereas with SingleSameMediaSource expects format and we can specify the language code in Format. \r\n\r\n It would be great if there is a way to identify the Format belonging to a specific language using HlsMediaSource. Please let me know if I am missing anything here or is there any other way.\r\n\r\n"
      },
      {
        "user": "AquilesCanta",
        "created_at": "2018-08-30T09:59:14Z",
        "body": "No, there is no straightforward way to do it. I insist that the right way is to include the subtitles as part of the original master playlist (which would allow you to provide a language as well). You could potentially pass a custom playlist parser that injects the subtitle rendition client side. So, basically you could wrap the default playlist parser, and once the master playlist is parsed, you add your subtitle link to the `subtitles` field. Hope this helps."
      },
      {
        "user": "srikanthsunkari",
        "created_at": "2018-08-30T11:03:43Z",
        "body": "Thank you @AquilesCanta, It is not possible to include subtitles as part of an original master playlist. Well, for now, I get it managed with the positions of added subtitles. I will sure do look into constructing custom playlist parser for customizing.\r\nThank you again for the help."
      },
      {
        "user": "srikanthsunkari",
        "created_at": "2018-08-30T11:51:03Z",
        "body": "Hi @AquilesCanta, I observed playback is not in sync with the subtitles. I see that subtitles are displayed earlier than the usual point. Is this an issue with the subtitle link or am I missing anything? "
      },
      {
        "user": "srikanthsunkari",
        "created_at": "2018-08-30T13:18:44Z",
        "body": "Please let me know if any info is required from my end, or If it is required to raise a new Issue? If you feel that originally raised issue has closed."
      },
      {
        "user": "AquilesCanta",
        "created_at": "2018-08-30T13:40:01Z",
        "body": "> I observed playback is not in sync with the subtitles\r\n\r\nWhich approach are you using?\r\n\r\nI am going to assume the subtitles are webvtt. Then the files should start with\r\n\r\nWEBVTT\r\nX-TIMESTAMP-MAP=MPEGTS:XXXXXXX,LOCAL:00:00:00.000\r\n\r\nYou need to make sure is that the MPEGTS value equals the first PTS in the TS files. This is the way in which HLS ensures the subtitles are in sync. If this does not work for you, you can still go with the MergingMediaSource approach, combined with custom playlist tracker (in the HlsMediaSource of the subtitles playlist) that wraps the default one and injects the language to the getMasterPlaylist method. In this case you don't need a custom playlist parser, just a custom tracker."
      },
      {
        "user": "srikanthsunkari",
        "created_at": "2018-08-30T14:01:58Z",
        "body": "Yes, I am following the WEBVTT approach with MergingMediaSource and custom tracker.\r\nI don't see\r\n> WEBVTT\r\n>  X-TIMESTAMP-MAP=MPEGTS:XXXXXXX,LOCAL:00:00:00.000\r\n\r\n\r\nSample m3u8 file look like :\r\n\r\n> #EXTM3U\r\n> #EXT-X-VERSION:3\r\n> #EXT-X-TARGETDURATION:5859\r\n> #EXT-X-MEDIA-SEQUENCE:0\r\n> #EXT-X-PLAYLIST-TYPE:VOD\r\n> #EXTINF:5859\r\n> XYZ-cap_eng.vtt\r\n> #EXT-X-ENDLIST\r\n> \r\n\r\nVideo source and multiple m3u8 subtitles media source with MergingMediaSource\r\n\r\n```\r\n`               int mediaSourceArraySize = subtitles.values.size() + 1;\r\n                MediaSource[] mediaSourceArray = new MediaSource[mediaSourceArraySize];\r\n                int i = 0;\r\n                mediaSourceArray[i] = videoSource;\r\n                i++;\r\n                for (SubtitleItem subtitleItem :\r\n                        subtitles.values) {\r\n                    String mimeType = MimeTypes.APPLICATION_TTML;\r\n                    MediaSource subTitleSource;\r\n                    //builds HlsMediaSource similar to video source\r\n                    subTitleSource = buildMediaSource(Uri.parse(subtitleItem.link_sub),null);\r\n                    mediaSourceArray[i] = subTitleSource;\r\n                    i++;\r\n                }\r\n                MergingMediaSource mergedSource = new MergingMediaSource(mediaSourceArray);\r\n                player.prepare(mergedSource, true, false);\r\n            }\r\n`\r\n```\r\nBelow is first subtitle to be displayed:\r\n\r\n> \r\n> WEBVTT\r\n> \r\n> 00:00:31.398 --> 00:00:35.402\r\n> <i>I get to work before the sun comes up\r\n> </i>and I leave long after it's gone down.\r\n> \r\n\r\nWhereas it is displaying as soon as playback starts. "
      },
      {
        "user": "srikanthsunkari",
        "created_at": "2018-08-31T06:34:26Z",
        "body": "Hi @AquilesCanta, waiting for your reply on subtitles duration issue, Please let me know if in case you want me to raise a new issue."
      },
      {
        "user": "srikanthsunkari",
        "created_at": "2018-08-31T08:14:52Z",
        "body": "Raised new issue for playback sync with subtitles #4758 ."
      }
    ]
  },
  {
    "number": 4743,
    "title": "demo-cast error",
    "created_at": "2018-08-29T11:00:55Z",
    "closed_at": "2018-08-29T14:13:15Z",
    "labels": [
      "question",
      "need more info"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4743",
    "body": "Caused by: java.lang.RuntimeException: com.google.android.gms.dynamite.DynamiteModule$LoadingException: No acceptable module found. Local version is 0 and remote version is 0.\r\n        at com.google.android.gms.internal.cast.zze.zzf(Unknown Source)\r\n        at com.google.android.gms.internal.cast.zze.zza(Unknown Source)\r\n        at com.google.android.gms.cast.framework.CastContext.<init>(Unknown Source)\r\n        at com.google.android.gms.cast.framework.CastContext.getSharedInstance(Unknown Source)\r\n        at com.google.android.exoplayer2.castdemo.MainActivity.onCreate(MainActivity.java:66)\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4743/comments",
    "author": "986558210",
    "comments": [
      {
        "user": "AquilesCanta",
        "created_at": "2018-08-29T14:13:15Z",
        "body": "Please try updating Google Play Services on the device. If this does not fix your issue please fill all information requested in the issue template. If it does fix your issue, please let us know so we try adding a workaround to our cast demo app."
      },
      {
        "user": "986558210",
        "created_at": "2018-08-30T00:48:17Z",
        "body": "Oh, I see. I did not install the Google Play Service and I can`t install it because I`m in China.  Thank you."
      }
    ]
  },
  {
    "number": 4742,
    "title": "How do I encrypt content written to or read the cache?",
    "created_at": "2018-08-29T10:16:13Z",
    "closed_at": "2018-08-31T14:42:11Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4742",
    "body": "I want to encrypt the cached file, Pass in the password by SimpleCache method \"byte[]secretKey\"\r\nHowever, fragments of cached files can still be played normally on other players.\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4742/comments",
    "author": "qeadsw",
    "comments": [
      {
        "user": "AquilesCanta",
        "created_at": "2018-08-29T10:19:14Z",
        "body": "Please don't open duplicate issues and provide the requested information in #4740."
      },
      {
        "user": "qeadsw",
        "created_at": "2018-08-29T10:19:58Z",
        "body": "@AquilesCanta Then you point out the template"
      },
      {
        "user": "AquilesCanta",
        "created_at": "2018-08-29T10:21:49Z",
        "body": "The link is in the comment."
      },
      {
        "user": "ojw28",
        "created_at": "2018-08-31T08:31:45Z",
        "body": "I think that only encrypts the cache index, not the actual content. @erdemguven - Can you provide some information about how to encrypt the content as well?"
      },
      {
        "user": "ojw28",
        "created_at": "2018-08-31T14:42:11Z",
        "body": "Ignore; this was answered in #4740."
      }
    ]
  },
  {
    "number": 4736,
    "title": "My url previously on http than i was SSl so its https url and then i am facing below issue",
    "created_at": "2018-08-28T11:50:58Z",
    "closed_at": "2018-08-29T09:47:48Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4736",
    "body": "i just called all audio file from server put it in recyclerview than play it with exoplayer\r\n\r\n Source error.\r\n\r\n```                                                       com.google.android.exoplayer2.upstream.HttpDataSource$InvalidResponseCodeException: Response code: 302\r\n                                                           at com.google.android.exoplayer2.upstream.DefaultHttpDataSource.open(DefaultHttpDataSource.java:211)\r\n                                                           at com.google.android.exoplayer2.upstream.DefaultDataSource.open(DefaultDataSource.java:141)\r\n                                                           at com.google.android.exoplayer2.source.ExtractorMediaPeriod$ExtractingLoadable.load(ExtractorMediaPeriod.java:737)\r\n                                                           at com.google.android.exoplayer2.upstream.Loader$LoadTask.run(Loader.java:315)\r\n                                                           at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1133)\r\n                                                           at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:607)\r\n                                                           at java.lang.Thread.run(Thread.java:761)\r\n```",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4736/comments",
    "author": "anilsangani",
    "comments": [
      {
        "user": "AquilesCanta",
        "created_at": "2018-08-29T09:47:48Z",
        "body": "Is `allowCrossProtocolRedirects == true` in your `DefaultHttpDataSource`? If not, please set it to true. If it is true, then please file the full issue template and we will reopen the issue. Thanks!"
      },
      {
        "user": "anilsangani",
        "created_at": "2018-08-30T05:33:27Z",
        "body": "How to set allowCrossProtocolRedirects == true , i was trying many times but i didnt find any solution\r\nplease help me\r\n\r\n```java\r\n        renderersFactory = new DefaultRenderersFactory(getActivity());\r\n        bandwidthMeter = new DefaultBandwidthMeter();\r\n        trackSelectionFactory = new AdaptiveTrackSelection.Factory(bandwidthMeter);\r\n        trackSelector = new DefaultTrackSelector(trackSelectionFactory);\r\n        loadControl = new DefaultLoadControl();\r\n        player = ExoPlayerFactory.newSimpleInstance(renderersFactory, trackSelector, loadControl);\r\n        dataSourceFactory = new DefaultDataSourceFactory(getActivity(), \"ExoplayerDemo\");\r\n        extractorsFactory = new DefaultExtractorsFactory();`\r\n\r\n\r\nringtoneAdapter = new RingtoneAdapter1(ringtoneList, getActivity(), player, mediaSource, trackSelectionFactory, dataSourceFactory, extractorsFactory, mainHandler, renderersFactory, bandwidthMeter, loadControl, trackSelector, playeditem, Boolean.valueOf(false));\r\n\r\n\r\nmediaSource = new ExtractorMediaSource\r\n                            .Factory(dataSourceFactory)\r\n                            .setExtractorsFactory(extractorsFactory)\r\n                            .createMediaSource(Uri.parse(ringtoneList.get(position).getUrl()), mainHandler, null);\r\n                    player.seekTo(0);\r\n\r\n  player.setPlayWhenReady(true);\r\n                    player.prepare(mediaSource);\r\n```"
      },
      {
        "user": "AquilesCanta",
        "created_at": "2018-08-30T09:45:25Z",
        "body": "Instead of passing a DefaultDataSourceFactory to the ExtractorMediaSource builder, create a custom factory that sets allowCrossProtocolRedirects to true. You need to do basically the same that DefaultDataSourceFactory does, except you need to change the `DefaultDataSource` constructor that gets used in `DefaultDataSource#createDataSource()` to be `DefaultDataSource(Context context, String userAgent, boolean allowCrossProtocolRedirects)`. Hope this helps."
      },
      {
        "user": "anilsangani",
        "created_at": "2018-08-30T11:26:40Z",
        "body": "I dont understand please can you give more details"
      }
    ]
  },
  {
    "number": 4735,
    "title": "Dash Content with 4 Resolution",
    "created_at": "2018-08-28T05:54:23Z",
    "closed_at": "2018-08-29T09:44:01Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4735",
    "body": "I have a  Dash content that has a video with 4 different resolution. I'm playing the video like this:\r\n\r\n```\r\nDataSource.Factory dataSourceFactory =\r\n      new DefaultDataSourceFactory(this, Util.getUserAgent(this, \"yaramobile.com.app.viedotest\"));\r\n\r\n    Uri uri = Uri.parse(videoUrl);\r\n\r\n    DashMediaSource dashMediaSource = new DashMediaSource(uri, dataSourceFactory,\r\n      new DefaultDashChunkSource.Factory(dataSourceFactory), null, null);\r\n\r\n    BandwidthMeter bandwidthMeter = new DefaultBandwidthMeter();\r\n\r\n    TrackSelector trackSelector = new DefaultTrackSelector(new AdaptiveTrackSelection.Factory(bandwidthMeter));\r\n\r\n    player = ExoPlayerFactory.newSimpleInstance(this, trackSelector);\r\n\r\n    simpleExoPlayerView.setPlayer(player);\r\n    player.prepare(dashMediaSource);\r\n\r\n```\r\nI want to get all resolutions  and show it to the user\r\nBut I can't get 4 available qualities in `Exoplayer r2.5.3` Before I used `player.getTrackCount(0)` to get all qualities in `Exoplayer r1.5.8`.\r\nI am really confused and I got nothing with my searches.\r\nI really appreciate your help.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4735/comments",
    "author": "abbasiehsan1991",
    "comments": [
      {
        "user": "AquilesCanta",
        "created_at": "2018-08-29T09:44:01Z",
        "body": "The Demo app supports manual resolution selection. In the PlayerActivity, have a look at the Video button. When you press it, a list of resolutions will pop up. This is handled by the TrackSelectionView. Please have a look. Good luck!"
      }
    ]
  },
  {
    "number": 4734,
    "title": "Connection with Firebase is not stable",
    "created_at": "2018-08-27T18:11:26Z",
    "closed_at": "2018-08-27T18:25:51Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4734",
    "body": "Sometimes streaming with Exoplayer using FirebaseStorage gets an error and stuck in buffering.\r\n\r\nExoplayer 2.8.1\r\n\r\nLG K10\r\nAndroid M\r\n\r\n              E/ExoPlayerImplInternal: Source error.\r\n                         com.google.android.exoplayer2.k.r$e: Response code: 402\r\n                             at com.google.android.exoplayer2.k.o.a(DefaultHttpDataSource.java:211)\r\n                             at com.google.android.exoplayer2.k.m.a(DefaultDataSource.java:147)\r\n                             at com.google.android.exoplayer2.h.j$a.c(ExtractorMediaPeriod.java:848)\r\n                             at com.google.android.exoplayer2.k.s$b.run(Loader.java:317)\r\n                             at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1113)\r\n                             at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:588)\r\n                             at java.lang.Thread.run(Thread.java:818)\r\n\r\nIs this an error from the server itself?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4734/comments",
    "author": "ArcherEmiya05",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2018-08-27T18:25:51Z",
        "body": "A quick search for `firebase storage \"402\"` suggests to me that you're hitting a Firebase Storage quota limit. I'd suggest you investigate that. In any case, the root issue here is that the server is returning a HTTP status code 402. This is not an ExoPlayer issue, but rather that the server choosing not to serve the content."
      }
    ]
  },
  {
    "number": 4733,
    "title": "LoadErrorHandlingPolicy Merge Timeframe",
    "created_at": "2018-08-27T16:44:10Z",
    "closed_at": "2018-08-27T18:22:14Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4733",
    "body": "I am working on a project where I would like to utilize the new `LoadErrorHandlingPolicy` which is currently on the dev branch. Is there a timeframe for when this will be available in general releases?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4733/comments",
    "author": "RyanKingAccedo",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2018-08-27T18:22:14Z",
        "body": "We do not have a set timeframe, but most likely September or October."
      }
    ]
  },
  {
    "number": 4729,
    "title": "Get width & height of player?",
    "created_at": "2018-08-27T03:12:58Z",
    "closed_at": "2018-08-29T08:02:16Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4729",
    "body": "Does ExoPlayer have these methods, like getVideoHeight() & getVideoWidth() of MediaPlayer. Because I need something same to its while use ExoPlayer with other library. Thanks.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4729/comments",
    "author": "ttm-hoangcm",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2018-08-29T08:02:16Z",
        "body": "There are multiple ways of getting the video width and height, and being notified when it changes:\r\n* If you just want to query the current dimensions, you can use `SimpleExoPlayer.getVideoFormat`, and then look at its `width` and `height` fields. Note that the format may be null if it's not yet known.\r\n* To known when the video size becomes known or changes, you can use `AnalyticsListener.onVideoSizeChanged`. You can add an `AnalyticsListener` using `SimpleExoPlayer.addAnalyticsListener`.\r\n* To known when the video size becomes known or changes, you can also use `VideoListener.onVideoSizeChanged`. You can add an `VideoListener` using `SimpleExoPlayer.addVideoListener`."
      }
    ]
  },
  {
    "number": 4728,
    "title": "ExoPlayer STATE_ENDED not called after song is finished",
    "created_at": "2018-08-25T12:04:09Z",
    "closed_at": "2018-08-27T08:00:45Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4728",
    "body": "Here is my code snippet:\r\n```\r\n exoPlayer.addListener(new Player.DefaultEventListener() {\r\n            @Override\r\n            public void onTracksChanged(TrackGroupArray trackGroups, TrackSelectionArray trackSelections) {\r\n                super.onTracksChanged(trackGroups, trackSelections);\r\n                Log.i(TAG, \"onTracksChanged: Tracks changed.\");\r\n            }\r\n\r\n            @Override\r\n            public void onPlayerStateChanged(boolean playWhenReady, int playbackState) {\r\n                super.onPlayerStateChanged(playWhenReady, playbackState);\r\n                Log.i(TAG, \"onPlayerStateChanged: Player state changed: \" + playbackState);\r\n                for (Callback callback : callbacks) {\r\n                    callback.onPlayStateChanged(playbackState);\r\n                }\r\n                // 1: IDLE 2:BUFFERING 3:READY 4:ENDED\r\n                switch (playbackState) {\r\n                    case Player.STATE_ENDED:\r\n                        for (Callback callback : callbacks) {\r\n                        callback.onCompletion();\r\n                        }\r\n                        break;\r\n                    case Player.STATE_READY:\r\n                        for (Callback callback : callbacks) {\r\n                        callback.onPrepared();\r\n                        }\r\n                        break;\r\n                    case Player.STATE_BUFFERING:\r\n                        break;\r\n                    case Player.STATE_IDLE:\r\n                        break;\r\n\r\n                }\r\n            }});\r\n```\r\n\r\nonTrackChanged gets called but STATE_ENDED doesn't get called.\r\nI set the repeat mode to repeat all, if it's releavent\r\n```\r\n if (exoPlayer.getRepeatMode() == Player.REPEAT_MODE_OFF) {\r\n            exoPlayer.setRepeatMode(Player.REPEAT_MODE_ALL);\r\n        }\r\n```\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4728/comments",
    "author": "1mohammad7",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2018-08-27T08:00:45Z",
        "body": "`STATE_ENDED` means that the player has finished playing, which is not the case in your example because it's still playing something (due to the repeat mode).\r\n\r\nIf you're trying to detect when playback moves from one item in a playlist to the next, or when it restarts playback in the case that you're playing a single piece of media, then listen for `EventListener.onPositionDiscontinuity` with `reason = Player. DISCONTINUITY_REASON_PERIOD_TRANSITION`."
      }
    ]
  },
  {
    "number": 4718,
    "title": "404 file not found Error after switching bitrate in live stream",
    "created_at": "2018-08-23T13:54:26Z",
    "closed_at": "2018-08-27T08:06:58Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4718",
    "body": "Hi,\r\n\r\nWe are facing a strange behavior in exoplayer demo \r\nafter I switch the video bitrates in live stream few times we get 404 error\r\nthis error can be seen in the log below\r\n\"InvalidResponseCodeException: Response code: 404\"\r\n\r\ncould you please explain the behavior of the player which segments are downloaded and what is the strategy of downloading segments when changing the bitrate\r\nhow come the player ask unavailable segments?\r\nCan this be solved by changing the default load control?\r\n\r\nWill be glad to have some insight\r\n\r\nI will send live stream url  + charles logs for example via mail\r\n\r\n\r\n10x\r\nGilad.\r\n\r\n```\r\n2018-08-23 15:53:05.819 4206-4206/? I/art: Late-enabling -Xcheck:jni\r\n2018-08-23 15:53:05.849 4206-4214/? I/art: Debugger is no longer active\r\n2018-08-23 15:53:05.849 4206-4214/? I/art: Starting a blocking GC Instrumentation\r\n2018-08-23 15:53:05.877 4206-4206/? W/System: ClassLoader referenced unknown path: /data/app/com.google.android.exoplayer2.demo-2/lib/arm\r\n2018-08-23 15:53:06.006 4206-4226/? I/Adreno: QUALCOMM build                   : a5b4970, If5818605d9\r\n    Build Date                       : 10/12/16\r\n    OpenGL ES Shader Compiler Version: XE031.09.00.04\r\n    Local Branch                     : N24D\r\n    Remote Branch                    : \r\n    Remote Branch                    : \r\n    Reconstruct Branch               : \r\n2018-08-23 15:53:06.030 4206-4226/? I/OpenGLRenderer: Initialized EGL, version 1.4\r\n2018-08-23 15:53:06.031 4206-4226/? D/OpenGLRenderer: Swap behavior 1\r\n2018-08-23 15:53:10.033 4206-4206/com.google.android.exoplayer2.demo I/ExoPlayerImpl: Init fd477f6 [ExoPlayerLib/2.8.4] [shamu, Nexus 6, motorola, 25]\r\n2018-08-23 15:53:10.053 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: state [0.01, 0.00, window=0, true, BUFFERING]\r\n2018-08-23 15:53:10.061 4206-4239/com.google.android.exoplayer2.demo D/NetworkSecurityConfig: No Network Security Config specified, using platform default\r\n2018-08-23 15:53:10.205 4206-4226/com.google.android.exoplayer2.demo D/OpenGLRenderer: endAllActiveAnimators on 0xa1b37500 (ExpandableListView) with handle 0x934ec040\r\n2018-08-23 15:53:28.815 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: timelineChanged [18.77, 528.66, window=0, periodCount=1, windowCount=1, reason=PREPARED\r\n2018-08-23 15:53:28.815 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:   period [?]\r\n2018-08-23 15:53:28.815 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:   window [558.66, true, true]\r\n2018-08-23 15:53:28.815 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: ]\r\n2018-08-23 15:53:28.826 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: mediaPeriodCreated [18.78, 528.66, window=0, period=0]\r\n2018-08-23 15:53:28.834 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: loading [18.79, 528.66, window=0, period=0, true]\r\n2018-08-23 15:53:29.712 4206-4238/com.google.android.exoplayer2.demo W/VideoCapabilities: Unrecognized profile 2130706433 for video/avc\r\n2018-08-23 15:53:29.768 4206-4238/com.google.android.exoplayer2.demo I/VideoCapabilities: Unsupported profile 4 for video/mp4v-es\r\n2018-08-23 15:53:29.780 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: decoderEnabled [19.74, 528.66, window=0, period=0, video]\r\n2018-08-23 15:53:29.785 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: decoderEnabled [19.74, 528.66, window=0, period=0, audio]\r\n2018-08-23 15:53:29.785 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: tracksChanged [19.74, 528.66, window=0, period=0, \r\n2018-08-23 15:53:29.785 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:   Renderer:0 [\r\n2018-08-23 15:53:29.786 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:     Group:0, adaptive_supported=YES [\r\n2018-08-23 15:53:29.786 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:       [X] Track:0, id=0, mimeType=video/avc, bitrate=128000, res=256x144, supported=YES\r\n2018-08-23 15:53:29.786 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:       [X] Track:1, id=1, mimeType=video/avc, bitrate=627000, res=512x288, supported=YES\r\n2018-08-23 15:53:29.786 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:       [X] Track:2, id=2, mimeType=video/avc, bitrate=877000, res=640x360, supported=YES\r\n2018-08-23 15:53:29.786 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:       [X] Track:3, id=3, mimeType=video/avc, bitrate=1128000, res=896x504, supported=YES\r\n2018-08-23 15:53:29.786 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:     ]\r\n2018-08-23 15:53:29.786 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:   ]\r\n2018-08-23 15:53:29.786 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:   Renderer:1 [\r\n2018-08-23 15:53:29.786 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:     Group:0, adaptive_supported=N/A [\r\n2018-08-23 15:53:29.787 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:       [X] Track:0, id=1/15, mimeType=audio/mp4a-latm, channels=1, sample_rate=48000, supported=YES\r\n2018-08-23 15:53:29.787 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:     ]\r\n2018-08-23 15:53:29.787 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:   ]\r\n2018-08-23 15:53:29.787 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:   Renderer:2 [\r\n2018-08-23 15:53:29.787 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:     Group:0, adaptive_supported=N/A [\r\n2018-08-23 15:53:29.787 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:       [ ] Track:0, id=1/8219, mimeType=application/cea-608, supported=YES\r\n2018-08-23 15:53:29.787 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:     ]\r\n2018-08-23 15:53:29.787 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:   ]\r\n2018-08-23 15:53:29.787 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:   Renderer:3 [\r\n2018-08-23 15:53:29.787 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:     Group:0, adaptive_supported=N/A [\r\n2018-08-23 15:53:29.787 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:       [X] Track:0, id=1/21, mimeType=application/id3, supported=YES\r\n2018-08-23 15:53:29.787 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:     ]\r\n2018-08-23 15:53:29.787 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:   ]\r\n2018-08-23 15:53:29.787 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: ]\r\n2018-08-23 15:53:29.801 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: mediaPeriodReadingStarted [19.76, 528.66, window=0, period=0]\r\n2018-08-23 15:53:30.662 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: downstreamFormatChanged [20.62, 528.66, window=0, period=0, id=1, mimeType=null, bitrate=627000, res=512x288]\r\n2018-08-23 15:53:31.569 4206-4211/com.google.android.exoplayer2.demo I/art: Do partial code cache collection, code=27KB, data=30KB\r\n2018-08-23 15:53:31.570 4206-4211/com.google.android.exoplayer2.demo I/art: After code cache collection, code=27KB, data=30KB\r\n2018-08-23 15:53:31.570 4206-4211/com.google.android.exoplayer2.demo I/art: Increasing code cache capacity to 128KB\r\n2018-08-23 15:53:32.589 4206-4261/com.google.android.exoplayer2.demo I/OMXClient: MuxOMX ctor\r\n2018-08-23 15:53:32.619 4206-4261/com.google.android.exoplayer2.demo I/ACodec: codec does not support config priority (err -2147483648)\r\n2018-08-23 15:53:32.625 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: decoderInitialized [22.58, 528.66, window=0, period=0, audio, OMX.google.aac.decoder]\r\n2018-08-23 15:53:32.626 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: decoderInputFormatChanged [22.58, 528.66, window=0, period=0, audio, id=1/15, mimeType=audio/mp4a-latm, channels=2, sample_rate=48000]\r\n2018-08-23 15:53:32.631 4206-4265/com.google.android.exoplayer2.demo I/OMXClient: MuxOMX ctor\r\n2018-08-23 15:53:32.997 4206-4264/com.google.android.exoplayer2.demo I/MediaCodec: [OMX.qcom.video.decoder.avc] setting surface generation to 4306945\r\n2018-08-23 15:53:33.017 4206-4265/com.google.android.exoplayer2.demo D/SurfaceUtils: set up nativeWindow 0x8fd0e808 for 512x288, color 0x7fa30c04, rotation 0, usage 0x42002900\r\n2018-08-23 15:53:33.033 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: decoderInitialized [22.99, 528.66, window=0, period=0, video, OMX.qcom.video.decoder.avc]\r\n2018-08-23 15:53:33.035 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: decoderInputFormatChanged [22.99, 528.66, window=0, period=0, video, id=1/27, mimeType=video/avc, res=512x288]\r\n2018-08-23 15:53:33.064 4206-4265/com.google.android.exoplayer2.demo D/SurfaceUtils: set up nativeWindow 0x8fd0e808 for 512x288, color 0x7fa30c04, rotation 0, usage 0x42002900\r\n2018-08-23 15:53:34.233 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: videoSizeChanged [24.19, 528.66, window=0, period=0, 512, 288]\r\n2018-08-23 15:53:34.234 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: renderedFirstFrame [24.19, 528.66, window=0, period=0, Surface(name=null)/@0xd7419f2]\r\n2018-08-23 15:53:34.269 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: state [24.23, 528.66, window=0, period=0, true, READY]\r\n2018-08-23 15:53:34.312 4206-4238/com.google.android.exoplayer2.demo D/AudioTrack: Client defaulted notificationFrames to 6000 for frameCount 12000\r\n2018-08-23 15:53:34.313 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: audioSessionId [24.27, 528.66, window=0, period=0, 3025]\r\n2018-08-23 15:53:36.237 4206-4211/com.google.android.exoplayer2.demo I/art: Do partial code cache collection, code=57KB, data=62KB\r\n2018-08-23 15:53:36.243 4206-4211/com.google.android.exoplayer2.demo I/art: After code cache collection, code=57KB, data=62KB\r\n2018-08-23 15:53:36.244 4206-4211/com.google.android.exoplayer2.demo I/art: Increasing code cache capacity to 256KB\r\n2018-08-23 15:53:42.021 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: decoderDisabled [31.98, 536.18, window=0, period=0, video]\r\n2018-08-23 15:53:42.022 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: decoderEnabled [31.98, 536.18, window=0, period=0, video]\r\n2018-08-23 15:53:42.026 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: tracksChanged [31.98, 536.18, window=0, period=0, \r\n2018-08-23 15:53:42.026 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:   Renderer:0 [\r\n2018-08-23 15:53:42.026 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:     Group:0, adaptive_supported=YES [\r\n2018-08-23 15:53:42.027 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:       [ ] Track:0, id=0, mimeType=video/avc, bitrate=128000, res=256x144, supported=YES\r\n2018-08-23 15:53:42.027 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:       [ ] Track:1, id=1, mimeType=video/avc, bitrate=627000, res=512x288, supported=YES\r\n2018-08-23 15:53:42.027 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:       [ ] Track:2, id=2, mimeType=video/avc, bitrate=877000, res=640x360, supported=YES\r\n2018-08-23 15:53:42.027 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:       [X] Track:3, id=3, mimeType=video/avc, bitrate=1128000, res=896x504, supported=YES\r\n2018-08-23 15:53:42.027 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:     ]\r\n2018-08-23 15:53:42.027 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:   ]\r\n2018-08-23 15:53:42.027 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:   Renderer:1 [\r\n2018-08-23 15:53:42.027 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:     Group:0, adaptive_supported=N/A [\r\n2018-08-23 15:53:42.027 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:       [X] Track:0, id=1/15, mimeType=audio/mp4a-latm, channels=1, sample_rate=48000, supported=YES\r\n2018-08-23 15:53:42.028 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:     ]\r\n2018-08-23 15:53:42.028 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:   ]\r\n2018-08-23 15:53:42.028 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:   Renderer:2 [\r\n2018-08-23 15:53:42.028 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:     Group:0, adaptive_supported=N/A [\r\n2018-08-23 15:53:42.028 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:       [ ] Track:0, id=1/8219, mimeType=application/cea-608, supported=YES\r\n2018-08-23 15:53:42.028 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:     ]\r\n2018-08-23 15:53:42.028 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:   ]\r\n2018-08-23 15:53:42.028 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:   Renderer:3 [\r\n2018-08-23 15:53:42.028 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:     Group:0, adaptive_supported=N/A [\r\n2018-08-23 15:53:42.028 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:       [X] Track:0, id=1/21, mimeType=application/id3, supported=YES\r\n2018-08-23 15:53:42.028 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:     ]\r\n2018-08-23 15:53:42.028 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:   ]\r\n2018-08-23 15:53:42.028 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: ]\r\n2018-08-23 15:53:42.046 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: downstreamFormatChanged [32.00, 536.18, window=0, period=0, id=3, mimeType=null, bitrate=1128000, res=896x504]\r\n2018-08-23 15:53:42.054 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: state [32.01, 536.18, window=0, period=0, true, BUFFERING]\r\n2018-08-23 15:53:43.159 4206-4286/com.google.android.exoplayer2.demo I/OMXClient: MuxOMX ctor\r\n2018-08-23 15:53:43.171 4206-4286/com.google.android.exoplayer2.demo I/ACodec: codec does not support config priority (err -2147483648)\r\n2018-08-23 15:53:43.181 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: decoderInitialized [33.14, 536.18, window=0, period=0, audio, OMX.google.aac.decoder]\r\n2018-08-23 15:53:43.182 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: decoderInputFormatChanged [33.14, 536.18, window=0, period=0, audio, id=1/15, mimeType=audio/mp4a-latm, channels=2, sample_rate=48000]\r\n2018-08-23 15:53:43.331 4206-4290/com.google.android.exoplayer2.demo I/OMXClient: MuxOMX ctor\r\n2018-08-23 15:53:43.355 4206-4289/com.google.android.exoplayer2.demo I/MediaCodec: [OMX.qcom.video.decoder.avc] setting surface generation to 4306946\r\n2018-08-23 15:53:43.392 4206-4290/com.google.android.exoplayer2.demo D/SurfaceUtils: set up nativeWindow 0x8fd0e808 for 896x504, color 0x7fa30c04, rotation 0, usage 0x42002900\r\n2018-08-23 15:53:43.415 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: decoderInitialized [33.37, 536.18, window=0, period=0, video, OMX.qcom.video.decoder.avc]\r\n2018-08-23 15:53:43.415 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: decoderInputFormatChanged [33.37, 536.18, window=0, period=0, video, id=1/27, mimeType=video/avc, res=896x504]\r\n2018-08-23 15:53:43.441 4206-4290/com.google.android.exoplayer2.demo D/SurfaceUtils: set up nativeWindow 0x8fd0e808 for 896x512, color 0x7fa30c04, rotation 0, usage 0x42002900\r\n2018-08-23 15:53:44.213 4206-4238/com.google.android.exoplayer2.demo D/AudioTrack: Client defaulted notificationFrames to 6000 for frameCount 12000\r\n2018-08-23 15:53:44.396 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: videoSizeChanged [34.35, 536.18, window=0, period=0, 896, 504]\r\n2018-08-23 15:53:44.396 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: renderedFirstFrame [34.35, 536.18, window=0, period=0, Surface(name=null)/@0xd7419f2]\r\n2018-08-23 15:53:44.992 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: state [34.95, 536.18, window=0, period=0, true, READY]\r\n2018-08-23 15:53:45.560 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: timelineChanged [35.52, 526.70, window=0, period=0, periodCount=1, windowCount=1, reason=DYNAMIC\r\n2018-08-23 15:53:45.561 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:   period [?]\r\n2018-08-23 15:53:45.561 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:   window [580.00, true, true]\r\n2018-08-23 15:53:45.561 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: ]\r\n2018-08-23 15:53:49.999 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: decoderDisabled [39.96, 531.09, window=0, period=0, video]\r\n2018-08-23 15:53:49.999 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: decoderEnabled [39.96, 531.09, window=0, period=0, video]\r\n2018-08-23 15:53:50.000 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: tracksChanged [39.96, 531.09, window=0, period=0, \r\n2018-08-23 15:53:50.000 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:   Renderer:0 [\r\n2018-08-23 15:53:50.000 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:     Group:0, adaptive_supported=YES [\r\n2018-08-23 15:53:50.000 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:       [X] Track:0, id=0, mimeType=video/avc, bitrate=128000, res=256x144, supported=YES\r\n2018-08-23 15:53:50.000 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:       [ ] Track:1, id=1, mimeType=video/avc, bitrate=627000, res=512x288, supported=YES\r\n2018-08-23 15:53:50.000 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:       [ ] Track:2, id=2, mimeType=video/avc, bitrate=877000, res=640x360, supported=YES\r\n2018-08-23 15:53:50.000 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:       [ ] Track:3, id=3, mimeType=video/avc, bitrate=1128000, res=896x504, supported=YES\r\n2018-08-23 15:53:50.000 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:     ]\r\n2018-08-23 15:53:50.000 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:   ]\r\n2018-08-23 15:53:50.000 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:   Renderer:1 [\r\n2018-08-23 15:53:50.001 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:     Group:0, adaptive_supported=N/A [\r\n2018-08-23 15:53:50.001 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:       [X] Track:0, id=1/15, mimeType=audio/mp4a-latm, channels=1, sample_rate=48000, supported=YES\r\n2018-08-23 15:53:50.001 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:     ]\r\n2018-08-23 15:53:50.001 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:   ]\r\n2018-08-23 15:53:50.001 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:   Renderer:2 [\r\n2018-08-23 15:53:50.001 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:     Group:0, adaptive_supported=N/A [\r\n2018-08-23 15:53:50.001 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:       [ ] Track:0, id=1/8219, mimeType=application/cea-608, supported=YES\r\n2018-08-23 15:53:50.001 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:     ]\r\n2018-08-23 15:53:50.001 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:   ]\r\n2018-08-23 15:53:50.001 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:   Renderer:3 [\r\n2018-08-23 15:53:50.001 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:     Group:0, adaptive_supported=N/A [\r\n2018-08-23 15:53:50.001 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:       [X] Track:0, id=1/21, mimeType=application/id3, supported=YES\r\n2018-08-23 15:53:50.001 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:     ]\r\n2018-08-23 15:53:50.001 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:   ]\r\n2018-08-23 15:53:50.001 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: ]\r\n2018-08-23 15:53:50.007 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: state [39.97, 531.09, window=0, period=0, true, BUFFERING]\r\n2018-08-23 15:53:50.312 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: downstreamFormatChanged [40.27, 531.09, window=0, period=0, id=0, mimeType=null, bitrate=128000, res=256x144]\r\n2018-08-23 15:53:50.638 4206-4298/com.google.android.exoplayer2.demo I/OMXClient: MuxOMX ctor\r\n2018-08-23 15:53:50.648 4206-4298/com.google.android.exoplayer2.demo I/ACodec: codec does not support config priority (err -2147483648)\r\n2018-08-23 15:53:50.660 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: decoderInitialized [40.62, 531.09, window=0, period=0, audio, OMX.google.aac.decoder]\r\n2018-08-23 15:53:50.661 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: decoderInputFormatChanged [40.62, 531.09, window=0, period=0, audio, id=1/15, mimeType=audio/mp4a-latm, channels=1, sample_rate=48000]\r\n2018-08-23 15:53:50.674 4206-4302/com.google.android.exoplayer2.demo I/OMXClient: MuxOMX ctor\r\n2018-08-23 15:53:50.709 4206-4301/com.google.android.exoplayer2.demo I/MediaCodec: [OMX.qcom.video.decoder.avc] setting surface generation to 4306947\r\n2018-08-23 15:53:50.728 4206-4302/com.google.android.exoplayer2.demo D/SurfaceUtils: set up nativeWindow 0x8fd0e808 for 256x144, color 0x7fa30c04, rotation 0, usage 0x42002900\r\n2018-08-23 15:53:50.753 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: decoderInitialized [40.71, 531.09, window=0, period=0, video, OMX.qcom.video.decoder.avc]\r\n2018-08-23 15:53:50.753 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: decoderInputFormatChanged [40.71, 531.09, window=0, period=0, video, id=1/27, mimeType=video/avc, res=256x144]\r\n2018-08-23 15:53:50.773 4206-4302/com.google.android.exoplayer2.demo D/SurfaceUtils: set up nativeWindow 0x8fd0e808 for 256x144, color 0x7fa30c04, rotation 0, usage 0x42002900\r\n2018-08-23 15:53:50.875 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: videoSizeChanged [40.83, 531.09, window=0, period=0, 256, 144]\r\n2018-08-23 15:53:50.875 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: renderedFirstFrame [40.83, 531.09, window=0, period=0, Surface(name=null)/@0xd7419f2]\r\n2018-08-23 15:53:50.900 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: state [40.86, 531.09, window=0, period=0, true, READY]\r\n2018-08-23 15:53:51.081 4206-4238/com.google.android.exoplayer2.demo D/AudioTrack: Client defaulted notificationFrames to 6000 for frameCount 12000\r\n2018-08-23 15:53:51.206 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: timelineChanged [41.16, 530.92, window=0, period=0, periodCount=1, windowCount=1, reason=DYNAMIC\r\n2018-08-23 15:53:51.207 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:   period [?]\r\n2018-08-23 15:53:51.207 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:   window [568.45, true, true]\r\n2018-08-23 15:53:51.207 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: ]\r\n2018-08-23 15:53:55.518 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: decoderDisabled [45.48, 535.21, window=0, period=0, video]\r\n2018-08-23 15:53:55.531 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: decoderEnabled [45.49, 535.21, window=0, period=0, video]\r\n2018-08-23 15:53:55.532 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: tracksChanged [45.49, 535.21, window=0, period=0, \r\n2018-08-23 15:53:55.532 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:   Renderer:0 [\r\n2018-08-23 15:53:55.532 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:     Group:0, adaptive_supported=YES [\r\n2018-08-23 15:53:55.532 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:       [X] Track:0, id=0, mimeType=video/avc, bitrate=128000, res=256x144, supported=YES\r\n2018-08-23 15:53:55.533 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:       [ ] Track:1, id=1, mimeType=video/avc, bitrate=627000, res=512x288, supported=YES\r\n2018-08-23 15:53:55.533 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:       [ ] Track:2, id=2, mimeType=video/avc, bitrate=877000, res=640x360, supported=YES\r\n2018-08-23 15:53:55.533 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:       [X] Track:3, id=3, mimeType=video/avc, bitrate=1128000, res=896x504, supported=YES\r\n2018-08-23 15:53:55.533 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:     ]\r\n2018-08-23 15:53:55.535 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:   ]\r\n2018-08-23 15:53:55.535 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:   Renderer:1 [\r\n2018-08-23 15:53:55.535 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:     Group:0, adaptive_supported=N/A [\r\n2018-08-23 15:53:55.535 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:       [X] Track:0, id=1/15, mimeType=audio/mp4a-latm, channels=1, sample_rate=48000, supported=YES\r\n2018-08-23 15:53:55.535 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:     ]\r\n2018-08-23 15:53:55.535 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:   ]\r\n2018-08-23 15:53:55.535 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:   Renderer:2 [\r\n2018-08-23 15:53:55.535 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:     Group:0, adaptive_supported=N/A [\r\n2018-08-23 15:53:55.535 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:       [ ] Track:0, id=1/8219, mimeType=application/cea-608, supported=YES\r\n2018-08-23 15:53:55.535 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:     ]\r\n2018-08-23 15:53:55.535 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:   ]\r\n2018-08-23 15:53:55.535 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:   Renderer:3 [\r\n2018-08-23 15:53:55.536 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:     Group:0, adaptive_supported=N/A [\r\n2018-08-23 15:53:55.536 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:       [X] Track:0, id=1/21, mimeType=application/id3, supported=YES\r\n2018-08-23 15:53:55.536 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:     ]\r\n2018-08-23 15:53:55.536 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:   ]\r\n2018-08-23 15:53:55.536 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: ]\r\n2018-08-23 15:53:55.542 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: downstreamFormatChanged [45.50, 535.21, window=0, period=0, id=3, mimeType=null, bitrate=1128000, res=896x504]\r\n2018-08-23 15:53:55.542 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: state [45.50, 535.21, window=0, period=0, true, BUFFERING]\r\n2018-08-23 15:53:56.049 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: timelineChanged [46.01, 525.41, window=0, period=0, periodCount=1, windowCount=1, reason=DYNAMIC\r\n2018-08-23 15:53:56.049 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:   period [?]\r\n2018-08-23 15:53:56.049 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:   window [580.00, true, true]\r\n2018-08-23 15:53:56.049 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: ]\r\n2018-08-23 15:53:56.061 4206-4312/com.google.android.exoplayer2.demo I/OMXClient: MuxOMX ctor\r\n2018-08-23 15:53:56.069 4206-4312/com.google.android.exoplayer2.demo I/ACodec: codec does not support config priority (err -2147483648)\r\n2018-08-23 15:53:56.078 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: decoderInitialized [46.04, 525.41, window=0, period=0, audio, OMX.google.aac.decoder]\r\n2018-08-23 15:53:56.078 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: decoderInputFormatChanged [46.04, 525.41, window=0, period=0, audio, id=1/15, mimeType=audio/mp4a-latm, channels=2, sample_rate=48000]\r\n2018-08-23 15:53:56.212 4206-4317/com.google.android.exoplayer2.demo I/OMXClient: MuxOMX ctor\r\n2018-08-23 15:53:56.227 4206-4315/com.google.android.exoplayer2.demo I/MediaCodec: [OMX.qcom.video.decoder.avc] setting surface generation to 4306948\r\n2018-08-23 15:53:56.247 4206-4317/com.google.android.exoplayer2.demo D/SurfaceUtils: set up nativeWindow 0x8fd0e808 for 896x504, color 0x7fa30c04, rotation 0, usage 0x42002900\r\n2018-08-23 15:53:56.260 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: decoderInitialized [46.22, 525.41, window=0, period=0, video, OMX.qcom.video.decoder.avc]\r\n2018-08-23 15:53:56.260 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: decoderInputFormatChanged [46.22, 525.41, window=0, period=0, video, id=1/27, mimeType=video/avc, res=896x504]\r\n2018-08-23 15:53:56.424 4206-4317/com.google.android.exoplayer2.demo D/SurfaceUtils: set up nativeWindow 0x8fd0e808 for 896x512, color 0x7fa30c04, rotation 0, usage 0x42002900\r\n2018-08-23 15:53:56.952 4206-4238/com.google.android.exoplayer2.demo D/AudioTrack: Client defaulted notificationFrames to 6000 for frameCount 12000\r\n2018-08-23 15:53:57.049 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: videoSizeChanged [47.01, 525.41, window=0, period=0, 896, 504]\r\n2018-08-23 15:53:57.050 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: renderedFirstFrame [47.01, 525.41, window=0, period=0, Surface(name=null)/@0xd7419f2]\r\n2018-08-23 15:53:57.871 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: decoderDisabled [47.83, 525.41, window=0, period=0, video]\r\n2018-08-23 15:53:57.871 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: decoderEnabled [47.83, 525.41, window=0, period=0, video]\r\n2018-08-23 15:53:57.872 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: tracksChanged [47.83, 525.41, window=0, period=0, \r\n2018-08-23 15:53:57.873 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:   Renderer:0 [\r\n2018-08-23 15:53:57.876 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:     Group:0, adaptive_supported=YES [\r\n2018-08-23 15:53:57.876 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:       [ ] Track:0, id=0, mimeType=video/avc, bitrate=128000, res=256x144, supported=YES\r\n2018-08-23 15:53:57.876 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:       [ ] Track:1, id=1, mimeType=video/avc, bitrate=627000, res=512x288, supported=YES\r\n2018-08-23 15:53:57.876 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:       [ ] Track:2, id=2, mimeType=video/avc, bitrate=877000, res=640x360, supported=YES\r\n2018-08-23 15:53:57.877 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:       [X] Track:3, id=3, mimeType=video/avc, bitrate=1128000, res=896x504, supported=YES\r\n2018-08-23 15:53:57.877 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:     ]\r\n2018-08-23 15:53:57.877 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:   ]\r\n2018-08-23 15:53:57.877 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:   Renderer:1 [\r\n2018-08-23 15:53:57.877 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:     Group:0, adaptive_supported=N/A [\r\n2018-08-23 15:53:57.877 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:       [X] Track:0, id=1/15, mimeType=audio/mp4a-latm, channels=1, sample_rate=48000, supported=YES\r\n2018-08-23 15:53:57.877 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:     ]\r\n2018-08-23 15:53:57.877 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:   ]\r\n2018-08-23 15:53:57.877 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:   Renderer:2 [\r\n2018-08-23 15:53:57.878 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:     Group:0, adaptive_supported=N/A [\r\n2018-08-23 15:53:57.878 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:       [ ] Track:0, id=1/8219, mimeType=application/cea-608, supported=YES\r\n2018-08-23 15:53:57.879 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:     ]\r\n2018-08-23 15:53:57.879 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:   ]\r\n2018-08-23 15:53:57.879 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:   Renderer:3 [\r\n2018-08-23 15:53:57.879 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:     Group:0, adaptive_supported=N/A [\r\n2018-08-23 15:53:57.880 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:       [X] Track:0, id=1/21, mimeType=application/id3, supported=YES\r\n2018-08-23 15:53:57.880 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:     ]\r\n2018-08-23 15:53:57.880 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:   ]\r\n2018-08-23 15:53:57.880 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: ]\r\n2018-08-23 15:53:58.307 4206-4332/com.google.android.exoplayer2.demo I/OMXClient: MuxOMX ctor\r\n2018-08-23 15:53:58.314 4206-4332/com.google.android.exoplayer2.demo I/ACodec: codec does not support config priority (err -2147483648)\r\n2018-08-23 15:53:58.321 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: decoderInitialized [48.28, 525.41, window=0, period=0, audio, OMX.google.aac.decoder]\r\n2018-08-23 15:53:58.321 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: decoderInputFormatChanged [48.28, 525.41, window=0, period=0, audio, id=1/15, mimeType=audio/mp4a-latm, channels=2, sample_rate=48000]\r\n2018-08-23 15:53:58.390 4206-4340/com.google.android.exoplayer2.demo I/OMXClient: MuxOMX ctor\r\n2018-08-23 15:53:58.408 4206-4336/com.google.android.exoplayer2.demo I/MediaCodec: [OMX.qcom.video.decoder.avc] setting surface generation to 4306949\r\n2018-08-23 15:53:58.424 4206-4340/com.google.android.exoplayer2.demo D/SurfaceUtils: set up nativeWindow 0x8fd0e808 for 896x504, color 0x7fa30c04, rotation 0, usage 0x42002900\r\n2018-08-23 15:53:58.441 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: decoderInitialized [48.40, 525.41, window=0, period=0, video, OMX.qcom.video.decoder.avc]\r\n2018-08-23 15:53:58.442 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: decoderInputFormatChanged [48.40, 525.41, window=0, period=0, video, id=1/27, mimeType=video/avc, res=896x504]\r\n2018-08-23 15:53:58.606 4206-4340/com.google.android.exoplayer2.demo D/SurfaceUtils: set up nativeWindow 0x8fd0e808 for 896x512, color 0x7fa30c04, rotation 0, usage 0x42002900\r\n2018-08-23 15:53:58.941 4206-4238/com.google.android.exoplayer2.demo D/AudioTrack: Client defaulted notificationFrames to 6000 for frameCount 12000\r\n2018-08-23 15:53:59.229 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: videoSizeChanged [49.19, 525.41, window=0, period=0, 896, 504]\r\n2018-08-23 15:53:59.230 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: renderedFirstFrame [49.19, 525.41, window=0, period=0, Surface(name=null)/@0xd7419f2]\r\n2018-08-23 15:53:59.465 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: state [49.42, 525.41, window=0, period=0, true, READY]\r\n2018-08-23 15:54:05.879 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: decoderDisabled [55.84, 531.75, window=0, period=0, video]\r\n2018-08-23 15:54:05.896 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: decoderEnabled [55.85, 531.75, window=0, period=0, video]\r\n2018-08-23 15:54:05.897 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: tracksChanged [55.85, 531.75, window=0, period=0, \r\n2018-08-23 15:54:05.897 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:   Renderer:0 [\r\n2018-08-23 15:54:05.897 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:     Group:0, adaptive_supported=YES [\r\n2018-08-23 15:54:05.897 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:       [X] Track:0, id=0, mimeType=video/avc, bitrate=128000, res=256x144, supported=YES\r\n2018-08-23 15:54:05.897 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:       [ ] Track:1, id=1, mimeType=video/avc, bitrate=627000, res=512x288, supported=YES\r\n2018-08-23 15:54:05.897 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:       [ ] Track:2, id=2, mimeType=video/avc, bitrate=877000, res=640x360, supported=YES\r\n2018-08-23 15:54:05.898 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:       [ ] Track:3, id=3, mimeType=video/avc, bitrate=1128000, res=896x504, supported=YES\r\n2018-08-23 15:54:05.898 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:     ]\r\n2018-08-23 15:54:05.898 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:   ]\r\n2018-08-23 15:54:05.898 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:   Renderer:1 [\r\n2018-08-23 15:54:05.898 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:     Group:0, adaptive_supported=N/A [\r\n2018-08-23 15:54:05.898 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:       [X] Track:0, id=1/15, mimeType=audio/mp4a-latm, channels=1, sample_rate=48000, supported=YES\r\n2018-08-23 15:54:05.898 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:     ]\r\n2018-08-23 15:54:05.898 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:   ]\r\n2018-08-23 15:54:05.898 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:   Renderer:2 [\r\n2018-08-23 15:54:05.898 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:     Group:0, adaptive_supported=N/A [\r\n2018-08-23 15:54:05.898 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:       [ ] Track:0, id=1/8219, mimeType=application/cea-608, supported=YES\r\n2018-08-23 15:54:05.898 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:     ]\r\n2018-08-23 15:54:05.898 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:   ]\r\n2018-08-23 15:54:05.898 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:   Renderer:3 [\r\n2018-08-23 15:54:05.898 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:     Group:0, adaptive_supported=N/A [\r\n2018-08-23 15:54:05.898 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:       [X] Track:0, id=1/21, mimeType=application/id3, supported=YES\r\n2018-08-23 15:54:05.898 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:     ]\r\n2018-08-23 15:54:05.898 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:   ]\r\n2018-08-23 15:54:05.898 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: ]\r\n2018-08-23 15:54:05.904 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: downstreamFormatChanged [55.86, 531.75, window=0, period=0, id=0, mimeType=null, bitrate=128000, res=256x144]\r\n2018-08-23 15:54:05.905 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: state [55.86, 531.75, window=0, period=0, true, BUFFERING]\r\n2018-08-23 15:54:06.190 4206-4354/com.google.android.exoplayer2.demo I/OMXClient: MuxOMX ctor\r\n2018-08-23 15:54:06.198 4206-4354/com.google.android.exoplayer2.demo I/ACodec: codec does not support config priority (err -2147483648)\r\n2018-08-23 15:54:06.207 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: decoderInitialized [56.17, 531.75, window=0, period=0, audio, OMX.google.aac.decoder]\r\n2018-08-23 15:54:06.207 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: decoderInputFormatChanged [56.17, 531.75, window=0, period=0, audio, id=1/15, mimeType=audio/mp4a-latm, channels=1, sample_rate=48000]\r\n2018-08-23 15:54:06.223 4206-4358/com.google.android.exoplayer2.demo I/OMXClient: MuxOMX ctor\r\n2018-08-23 15:54:06.234 4206-4357/com.google.android.exoplayer2.demo I/MediaCodec: [OMX.qcom.video.decoder.avc] setting surface generation to 4306950\r\n2018-08-23 15:54:06.249 4206-4358/com.google.android.exoplayer2.demo D/SurfaceUtils: set up nativeWindow 0x8fd0e808 for 256x144, color 0x7fa30c04, rotation 0, usage 0x42002900\r\n2018-08-23 15:54:06.262 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: decoderInitialized [56.22, 531.75, window=0, period=0, video, OMX.qcom.video.decoder.avc]\r\n2018-08-23 15:54:06.263 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: decoderInputFormatChanged [56.22, 531.75, window=0, period=0, video, id=1/27, mimeType=video/avc, res=256x144]\r\n2018-08-23 15:54:06.283 4206-4358/com.google.android.exoplayer2.demo D/SurfaceUtils: set up nativeWindow 0x8fd0e808 for 256x144, color 0x7fa30c04, rotation 0, usage 0x42002900\r\n2018-08-23 15:54:06.377 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: videoSizeChanged [56.33, 531.75, window=0, period=0, 256, 144]\r\n2018-08-23 15:54:06.377 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: renderedFirstFrame [56.33, 531.75, window=0, period=0, Surface(name=null)/@0xd7419f2]\r\n2018-08-23 15:54:06.387 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: state [56.35, 531.75, window=0, period=0, true, READY]\r\n2018-08-23 15:54:06.528 4206-4238/com.google.android.exoplayer2.demo D/AudioTrack: Client defaulted notificationFrames to 6000 for frameCount 12000\r\n2018-08-23 15:54:11.871 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: decoderDisabled [61.83, 536.99, window=0, period=0, video]\r\n2018-08-23 15:54:11.871 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: decoderEnabled [61.83, 536.99, window=0, period=0, video]\r\n2018-08-23 15:54:11.872 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: tracksChanged [61.83, 536.99, window=0, period=0, \r\n2018-08-23 15:54:11.872 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:   Renderer:0 [\r\n2018-08-23 15:54:11.872 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:     Group:0, adaptive_supported=YES [\r\n2018-08-23 15:54:11.872 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:       [ ] Track:0, id=0, mimeType=video/avc, bitrate=128000, res=256x144, supported=YES\r\n2018-08-23 15:54:11.872 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:       [ ] Track:1, id=1, mimeType=video/avc, bitrate=627000, res=512x288, supported=YES\r\n2018-08-23 15:54:11.872 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:       [ ] Track:2, id=2, mimeType=video/avc, bitrate=877000, res=640x360, supported=YES\r\n2018-08-23 15:54:11.872 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:       [X] Track:3, id=3, mimeType=video/avc, bitrate=1128000, res=896x504, supported=YES\r\n2018-08-23 15:54:11.872 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:     ]\r\n2018-08-23 15:54:11.872 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:   ]\r\n2018-08-23 15:54:11.872 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:   Renderer:1 [\r\n2018-08-23 15:54:11.872 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:     Group:0, adaptive_supported=N/A [\r\n2018-08-23 15:54:11.872 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:       [X] Track:0, id=1/15, mimeType=audio/mp4a-latm, channels=1, sample_rate=48000, supported=YES\r\n2018-08-23 15:54:11.873 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:     ]\r\n2018-08-23 15:54:11.873 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:   ]\r\n2018-08-23 15:54:11.873 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:   Renderer:2 [\r\n2018-08-23 15:54:11.873 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:     Group:0, adaptive_supported=N/A [\r\n2018-08-23 15:54:11.873 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:       [ ] Track:0, id=1/8219, mimeType=application/cea-608, supported=YES\r\n2018-08-23 15:54:11.873 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:     ]\r\n2018-08-23 15:54:11.873 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:   ]\r\n2018-08-23 15:54:11.873 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:   Renderer:3 [\r\n2018-08-23 15:54:11.873 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:     Group:0, adaptive_supported=N/A [\r\n2018-08-23 15:54:11.873 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:       [X] Track:0, id=1/21, mimeType=application/id3, supported=YES\r\n2018-08-23 15:54:11.873 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:     ]\r\n2018-08-23 15:54:11.873 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:   ]\r\n2018-08-23 15:54:11.874 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: ]\r\n2018-08-23 15:54:11.881 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: downstreamFormatChanged [61.84, 536.99, window=0, period=0, id=3, mimeType=null, bitrate=1128000, res=896x504]\r\n2018-08-23 15:54:11.881 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: state [61.84, 536.99, window=0, period=0, true, BUFFERING]\r\n2018-08-23 15:54:12.156 4206-4368/com.google.android.exoplayer2.demo I/OMXClient: MuxOMX ctor\r\n2018-08-23 15:54:12.163 4206-4368/com.google.android.exoplayer2.demo I/ACodec: codec does not support config priority (err -2147483648)\r\n2018-08-23 15:54:12.169 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: decoderInitialized [62.13, 536.99, window=0, period=0, audio, OMX.google.aac.decoder]\r\n2018-08-23 15:54:12.170 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: decoderInputFormatChanged [62.13, 536.99, window=0, period=0, audio, id=1/15, mimeType=audio/mp4a-latm, channels=2, sample_rate=48000]\r\n2018-08-23 15:54:12.283 4206-4380/com.google.android.exoplayer2.demo I/OMXClient: MuxOMX ctor\r\n2018-08-23 15:54:12.300 4206-4378/com.google.android.exoplayer2.demo I/MediaCodec: [OMX.qcom.video.decoder.avc] setting surface generation to 4306951\r\n2018-08-23 15:54:12.319 4206-4380/com.google.android.exoplayer2.demo D/SurfaceUtils: set up nativeWindow 0x8fd0e808 for 896x504, color 0x7fa30c04, rotation 0, usage 0x42002900\r\n2018-08-23 15:54:12.332 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: decoderInitialized [62.29, 536.99, window=0, period=0, video, OMX.qcom.video.decoder.avc]\r\n2018-08-23 15:54:12.333 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: decoderInputFormatChanged [62.29, 536.99, window=0, period=0, video, id=1/27, mimeType=video/avc, res=896x504]\r\n2018-08-23 15:54:12.353 4206-4380/com.google.android.exoplayer2.demo D/SurfaceUtils: set up nativeWindow 0x8fd0e808 for 896x512, color 0x7fa30c04, rotation 0, usage 0x42002900\r\n2018-08-23 15:54:12.795 4206-4238/com.google.android.exoplayer2.demo D/AudioTrack: Client defaulted notificationFrames to 6000 for frameCount 12000\r\n2018-08-23 15:54:13.250 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: videoSizeChanged [63.21, 536.99, window=0, period=0, 896, 504]\r\n2018-08-23 15:54:13.251 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: renderedFirstFrame [63.21, 536.99, window=0, period=0, Surface(name=null)/@0xd7419f2]\r\n2018-08-23 15:54:13.608 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: state [63.57, 536.99, window=0, period=0, true, READY]\r\n2018-08-23 15:54:16.440 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: timelineChanged [66.40, 519.78, window=0, period=0, periodCount=1, windowCount=1, reason=DYNAMIC\r\n2018-08-23 15:54:16.440 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:   period [?]\r\n2018-08-23 15:54:16.440 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:   window [580.00, true, true]\r\n2018-08-23 15:54:16.441 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: ]\r\n2018-08-23 15:54:18.087 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: decoderDisabled [68.05, 521.38, window=0, period=0, video]\r\n2018-08-23 15:54:18.088 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: decoderEnabled [68.05, 521.38, window=0, period=0, video]\r\n2018-08-23 15:54:18.089 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: tracksChanged [68.05, 521.38, window=0, period=0, \r\n2018-08-23 15:54:18.089 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:   Renderer:0 [\r\n2018-08-23 15:54:18.089 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:     Group:0, adaptive_supported=YES [\r\n2018-08-23 15:54:18.089 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:       [X] Track:0, id=0, mimeType=video/avc, bitrate=128000, res=256x144, supported=YES\r\n2018-08-23 15:54:18.089 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:       [ ] Track:1, id=1, mimeType=video/avc, bitrate=627000, res=512x288, supported=YES\r\n2018-08-23 15:54:18.090 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:       [ ] Track:2, id=2, mimeType=video/avc, bitrate=877000, res=640x360, supported=YES\r\n2018-08-23 15:54:18.090 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:       [ ] Track:3, id=3, mimeType=video/avc, bitrate=1128000, res=896x504, supported=YES\r\n2018-08-23 15:54:18.090 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:     ]\r\n2018-08-23 15:54:18.090 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:   ]\r\n2018-08-23 15:54:18.090 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:   Renderer:1 [\r\n2018-08-23 15:54:18.090 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:     Group:0, adaptive_supported=N/A [\r\n2018-08-23 15:54:18.090 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:       [X] Track:0, id=1/15, mimeType=audio/mp4a-latm, channels=1, sample_rate=48000, supported=YES\r\n2018-08-23 15:54:18.090 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:     ]\r\n2018-08-23 15:54:18.090 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:   ]\r\n2018-08-23 15:54:18.090 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:   Renderer:2 [\r\n2018-08-23 15:54:18.090 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:     Group:0, adaptive_supported=N/A [\r\n2018-08-23 15:54:18.090 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:       [ ] Track:0, id=1/8219, mimeType=application/cea-608, supported=YES\r\n2018-08-23 15:54:18.091 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:     ]\r\n2018-08-23 15:54:18.091 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:   ]\r\n2018-08-23 15:54:18.091 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:   Renderer:3 [\r\n2018-08-23 15:54:18.091 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:     Group:0, adaptive_supported=N/A [\r\n2018-08-23 15:54:18.091 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:       [X] Track:0, id=1/21, mimeType=application/id3, supported=YES\r\n2018-08-23 15:54:18.091 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:     ]\r\n2018-08-23 15:54:18.091 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:   ]\r\n2018-08-23 15:54:18.091 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: ]\r\n2018-08-23 15:54:18.100 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: state [68.06, 521.38, window=0, period=0, true, BUFFERING]\r\n2018-08-23 15:54:18.113 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: downstreamFormatChanged [68.07, 521.38, window=0, period=0, id=0, mimeType=null, bitrate=128000, res=256x144]\r\n2018-08-23 15:54:19.901 4206-4238/com.google.android.exoplayer2.demo W/ChunkedTrackBlacklist: Blacklisting failed (cannot blacklist last enabled track): responseCode=404, format=Format(0, null, video/avc, 128000, null, [256, 144, -1.0], [-1, -1])\r\n2018-08-23 15:54:19.903 4206-4206/com.google.android.exoplayer2.demo E/EventLogger: internalError [69.86, 521.38, window=0, period=0, loadError]\r\n    com.google.android.exoplayer2.upstream.HttpDataSource$InvalidResponseCodeException: Response code: 404\r\n        at com.google.android.exoplayer2.upstream.DefaultHttpDataSource.open(DefaultHttpDataSource.java:211)\r\n        at com.google.android.exoplayer2.upstream.DefaultDataSource.open(DefaultDataSource.java:147)\r\n        at com.google.android.exoplayer2.upstream.cache.CacheDataSource.openNextSource(CacheDataSource.java:401)\r\n        at com.google.android.exoplayer2.upstream.cache.CacheDataSource.open(CacheDataSource.java:242)\r\n        at com.google.android.exoplayer2.source.hls.HlsMediaChunk.loadMedia(HlsMediaChunk.java:267)\r\n        at com.google.android.exoplayer2.source.hls.HlsMediaChunk.load(HlsMediaChunk.java:214)\r\n        at com.google.android.exoplayer2.upstream.Loader$LoadTask.run(Loader.java:320)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1133)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:607)\r\n        at java.lang.Thread.run(Thread.java:761)\r\n2018-08-23 15:54:22.816 4206-4238/com.google.android.exoplayer2.demo W/ChunkedTrackBlacklist: Blacklisting failed (cannot blacklist last enabled track): responseCode=404, format=Format(0, null, video/avc, 128000, null, [256, 144, -1.0], [-1, -1])\r\n2018-08-23 15:54:22.817 4206-4206/com.google.android.exoplayer2.demo E/EventLogger: internalError [72.78, 521.38, window=0, period=0, loadError]\r\n    com.google.android.exoplayer2.upstream.HttpDataSource$InvalidResponseCodeException: Response code: 404\r\n        at com.google.android.exoplayer2.upstream.DefaultHttpDataSource.open(DefaultHttpDataSource.java:211)\r\n        at com.google.android.exoplayer2.upstream.DefaultDataSource.open(DefaultDataSource.java:147)\r\n        at com.google.android.exoplayer2.upstream.cache.CacheDataSource.openNextSource(CacheDataSource.java:401)\r\n        at com.google.android.exoplayer2.upstream.cache.CacheDataSource.open(CacheDataSource.java:242)\r\n        at com.google.android.exoplayer2.source.hls.HlsMediaChunk.loadMedia(HlsMediaChunk.java:267)\r\n        at com.google.android.exoplayer2.source.hls.HlsMediaChunk.load(HlsMediaChunk.java:214)\r\n        at com.google.android.exoplayer2.upstream.Loader$LoadTask.run(Loader.java:320)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1133)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:607)\r\n        at java.lang.Thread.run(Thread.java:761)\r\n2018-08-23 15:54:23.831 4206-4206/com.google.android.exoplayer2.demo E/EventLogger: internalError [73.79, 521.38, window=0, loadError]\r\n    com.google.android.exoplayer2.upstream.HttpDataSource$InvalidResponseCodeException: Response code: 404\r\n        at com.google.android.exoplayer2.upstream.DefaultHttpDataSource.open(DefaultHttpDataSource.java:211)\r\n        at com.google.android.exoplayer2.upstream.DefaultDataSource.open(DefaultDataSource.java:147)\r\n        at com.google.android.exoplayer2.upstream.cache.CacheDataSource.openNextSource(CacheDataSource.java:401)\r\n        at com.google.android.exoplayer2.upstream.cache.CacheDataSource.open(CacheDataSource.java:242)\r\n        at com.google.android.exoplayer2.upstream.DataSourceInputStream.checkOpened(DataSourceInputStream.java:102)\r\n        at com.google.android.exoplayer2.upstream.DataSourceInputStream.open(DataSourceInputStream.java:65)\r\n        at com.google.android.exoplayer2.upstream.ParsingLoadable.load(ParsingLoadable.java:137)\r\n        at com.google.android.exoplayer2.upstream.Loader$LoadTask.run(Loader.java:320)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1133)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:607)\r\n        at java.lang.Thread.run(Thread.java:761)\r\n2018-08-23 15:54:24.128 4206-4206/com.google.android.exoplayer2.demo E/EventLogger: internalError [74.08, 521.38, window=0, loadError]\r\n    com.google.android.exoplayer2.upstream.HttpDataSource$InvalidResponseCodeException: Response code: 404\r\n        at com.google.android.exoplayer2.upstream.DefaultHttpDataSource.open(DefaultHttpDataSource.java:211)\r\n        at com.google.android.exoplayer2.upstream.DefaultDataSource.open(DefaultDataSource.java:147)\r\n        at com.google.android.exoplayer2.upstream.cache.CacheDataSource.openNextSource(CacheDataSource.java:401)\r\n        at com.google.android.exoplayer2.upstream.cache.CacheDataSource.open(CacheDataSource.java:242)\r\n        at com.google.android.exoplayer2.upstream.DataSourceInputStream.checkOpened(DataSourceInputStream.java:102)\r\n        at com.google.android.exoplayer2.upstream.DataSourceInputStream.open(DataSourceInputStream.java:65)\r\n        at com.google.android.exoplayer2.upstream.ParsingLoadable.load(ParsingLoadable.java:137)\r\n        at com.google.android.exoplayer2.upstream.Loader$LoadTask.run(Loader.java:320)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1133)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:607)\r\n        at java.lang.Thread.run(Thread.java:761)\r\n2018-08-23 15:54:25.171 4206-4238/com.google.android.exoplayer2.demo W/ChunkedTrackBlacklist: Blacklisting failed (cannot blacklist last enabled track): responseCode=404, format=Format(0, null, video/avc, 128000, null, [256, 144, -1.0], [-1, -1])\r\n2018-08-23 15:54:25.174 4206-4206/com.google.android.exoplayer2.demo E/EventLogger: internalError [75.13, 521.38, window=0, period=0, loadError]\r\n    com.google.android.exoplayer2.upstream.HttpDataSource$InvalidResponseCodeException: Response code: 404\r\n        at com.google.android.exoplayer2.upstream.DefaultHttpDataSource.open(DefaultHttpDataSource.java:211)\r\n        at com.google.android.exoplayer2.upstream.DefaultDataSource.open(DefaultDataSource.java:147)\r\n        at com.google.android.exoplayer2.upstream.cache.CacheDataSource.openNextSource(CacheDataSource.java:401)\r\n        at com.google.android.exoplayer2.upstream.cache.CacheDataSource.open(CacheDataSource.java:242)\r\n        at com.google.android.exoplayer2.source.hls.HlsMediaChunk.loadMedia(HlsMediaChunk.java:267)\r\n        at com.google.android.exoplayer2.source.hls.HlsMediaChunk.load(HlsMediaChunk.java:214)\r\n        at com.google.android.exoplayer2.upstream.Loader$LoadTask.run(Loader.java:320)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1133)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:607)\r\n        at java.lang.Thread.run(Thread.java:761)\r\n2018-08-23 15:54:25.200 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: timelineChanged [75.16, 501.38, window=0, period=0, periodCount=1, windowCount=1, reason=DYNAMIC\r\n2018-08-23 15:54:25.200 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:   period [?]\r\n2018-08-23 15:54:25.201 4206-4206/com.google.android.exoplayer2.demo D/EventLogger:   window [580.00, true, true]\r\n2018-08-23 15:54:25.201 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: ]\r\n2018-08-23 15:54:25.511 4206-4206/com.google.android.exoplayer2.demo E/EventLogger: internalError [75.47, 501.38, window=0, loadError]\r\n    com.google.android.exoplayer2.upstream.HttpDataSource$InvalidResponseCodeException: Response code: 404\r\n        at com.google.android.exoplayer2.upstream.DefaultHttpDataSource.open(DefaultHttpDataSource.java:211)\r\n        at com.google.android.exoplayer2.upstream.DefaultDataSource.open(DefaultDataSource.java:147)\r\n        at com.google.android.exoplayer2.upstream.cache.CacheDataSource.openNextSource(CacheDataSource.java:401)\r\n        at com.google.android.exoplayer2.upstream.cache.CacheDataSource.open(CacheDataSource.java:242)\r\n        at com.google.android.exoplayer2.upstream.DataSourceInputStream.checkOpened(DataSourceInputStream.java:102)\r\n        at com.google.android.exoplayer2.upstream.DataSourceInputStream.open(DataSourceInputStream.java:65)\r\n        at com.google.android.exoplayer2.upstream.ParsingLoadable.load(ParsingLoadable.java:137)\r\n        at com.google.android.exoplayer2.upstream.Loader$LoadTask.run(Loader.java:320)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1133)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:607)\r\n        at java.lang.Thread.run(Thread.java:761)\r\n2018-08-23 15:54:27.869 4206-4238/com.google.android.exoplayer2.demo W/ChunkedTrackBlacklist: Blacklisting failed (cannot blacklist last enabled track): responseCode=404, format=Format(0, null, video/avc, 128000, null, [256, 144, -1.0], [-1, -1])\r\n2018-08-23 15:54:27.872 4206-4206/com.google.android.exoplayer2.demo E/EventLogger: internalError [77.83, 501.38, window=0, period=0, loadError]\r\n    com.google.android.exoplayer2.upstream.HttpDataSource$InvalidResponseCodeException: Response code: 404\r\n        at com.google.android.exoplayer2.upstream.DefaultHttpDataSource.open(DefaultHttpDataSource.java:211)\r\n        at com.google.android.exoplayer2.upstream.DefaultDataSource.open(DefaultDataSource.java:147)\r\n        at com.google.android.exoplayer2.upstream.cache.CacheDataSource.openNextSource(CacheDataSource.java:401)\r\n        at com.google.android.exoplayer2.upstream.cache.CacheDataSource.open(CacheDataSource.java:242)\r\n        at com.google.android.exoplayer2.source.hls.HlsMediaChunk.loadMedia(HlsMediaChunk.java:267)\r\n        at com.google.android.exoplayer2.source.hls.HlsMediaChunk.load(HlsMediaChunk.java:214)\r\n        at com.google.android.exoplayer2.upstream.Loader$LoadTask.run(Loader.java:320)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1133)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:607)\r\n        at java.lang.Thread.run(Thread.java:761)\r\n2018-08-23 15:54:27.872 4206-4238/com.google.android.exoplayer2.demo E/ExoPlayerImplInternal: Source error.\r\n    com.google.android.exoplayer2.upstream.HttpDataSource$InvalidResponseCodeException: Response code: 404\r\n        at com.google.android.exoplayer2.upstream.DefaultHttpDataSource.open(DefaultHttpDataSource.java:211)\r\n        at com.google.android.exoplayer2.upstream.DefaultDataSource.open(DefaultDataSource.java:147)\r\n        at com.google.android.exoplayer2.upstream.cache.CacheDataSource.openNextSource(CacheDataSource.java:401)\r\n        at com.google.android.exoplayer2.upstream.cache.CacheDataSource.open(CacheDataSource.java:242)\r\n        at com.google.android.exoplayer2.source.hls.HlsMediaChunk.loadMedia(HlsMediaChunk.java:267)\r\n        at com.google.android.exoplayer2.source.hls.HlsMediaChunk.load(HlsMediaChunk.java:214)\r\n        at com.google.android.exoplayer2.upstream.Loader$LoadTask.run(Loader.java:320)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1133)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:607)\r\n        at java.lang.Thread.run(Thread.java:761)\r\n2018-08-23 15:54:27.874 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: decoderDisabled [77.83, 501.38, window=0, period=0, video]\r\n2018-08-23 15:54:27.899 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: decoderDisabled [77.86, 501.38, window=0, period=0, audio]\r\n2018-08-23 15:54:27.902 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: mediaPeriodReleased [77.86, 501.38, window=0, period=0]\r\n2018-08-23 15:54:27.907 4206-4206/com.google.android.exoplayer2.demo E/EventLogger: playerFailed [77.86, 501.38, window=0]\r\n    com.google.android.exoplayer2.ExoPlaybackException\r\n        at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:349)\r\n        at android.os.Handler.dispatchMessage(Handler.java:98)\r\n        at android.os.Looper.loop(Looper.java:154)\r\n        at android.os.HandlerThread.run(HandlerThread.java:61)\r\n     Caused by: com.google.android.exoplayer2.upstream.HttpDataSource$InvalidResponseCodeException: Response code: 404\r\n        at com.google.android.exoplayer2.upstream.DefaultHttpDataSource.open(DefaultHttpDataSource.java:211)\r\n        at com.google.android.exoplayer2.upstream.DefaultDataSource.open(DefaultDataSource.java:147)\r\n        at com.google.android.exoplayer2.upstream.cache.CacheDataSource.openNextSource(CacheDataSource.java:401)\r\n        at com.google.android.exoplayer2.upstream.cache.CacheDataSource.open(CacheDataSource.java:242)\r\n        at com.google.android.exoplayer2.source.hls.HlsMediaChunk.loadMedia(HlsMediaChunk.java:267)\r\n        at com.google.android.exoplayer2.source.hls.HlsMediaChunk.load(HlsMediaChunk.java:214)\r\n        at com.google.android.exoplayer2.upstream.Loader$LoadTask.run(Loader.java:320)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1133)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:607)\r\n        at java.lang.Thread.run(Thread.java:761)\r\n2018-08-23 15:54:27.924 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: loading [77.88, 501.38, window=0, false]\r\n2018-08-23 15:54:27.925 4206-4206/com.google.android.exoplayer2.demo D/EventLogger: state [77.88, 501.38, window=0, true, IDLE]\r\n```",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4718/comments",
    "author": "giladna",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2018-08-23T14:34:11Z",
        "body": "> could you please explain the behavior of the player which segments are downloaded and what is the strategy of downloading segments when changing the bitrate\r\n\r\nGiven you're selecting a specific format (i.e. disabling adaptive selection), we simply download the chunks listed in the media playlist for the selected format, from the current playback position. Your stream must declare a chunk in the media playlist that returns a 404 when requested.\r\n\r\n> how come the player ask unavailable segments?\r\n\r\nThe media playlist must be explicitly listing the chunk, and since you've disabled adaptive selection, the player cannot fall back to another format instead (which it will try and do if adaptive selection is not disabled).\r\n\r\n> Can this be solved by changing the default load control?\r\n\r\nIt's not related to the load control."
      },
      {
        "user": "giladna",
        "created_at": "2018-08-23T14:50:37Z",
        "body": "@ojw28 \r\nThanks!\r\n\r\nI would be great if you could reproduce this on latest Exo Demo app\r\n(Tell me if you haven't seen the url I have shared)\r\nand tell if this is the case here\r\n\r\n10x\r\nGilad.\r\n\r\n"
      },
      {
        "user": "giladna",
        "created_at": "2018-08-23T14:56:20Z",
        "body": "@ojw28 \r\n\r\nis it suggested for live to keep it adaptive for at least 2 bitrates\r\n\r\nthanks!"
      },
      {
        "user": "ojw28",
        "created_at": "2018-08-23T14:59:03Z",
        "body": "> is it suggested for live to keep it adaptive for at least 2 bitrates\r\n\r\nIt really depends on your use case. If you know that your serving infrastructure is always going to make segments available then it doesn't matter. If segments can 404, you'd ideally keep as many bitrates enabled as possible."
      }
    ]
  },
  {
    "number": 4714,
    "title": "Is it possible to get Dash stream sizes before starting a download?",
    "created_at": "2018-08-23T06:13:21Z",
    "closed_at": "2019-06-21T18:22:43Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4714",
    "body": "We are developing an app that among other things lets users download (Widevine-protected) Dash content to their devices for later playback offline. Since our video assets can reach a considerable  size we would like to prompt the user with the file sizes for each representation before starting a download, so the user can select the appropriate representation to download. The use case is as follows:\r\n\r\n> The user wants to download a video for later playback. They press the download button and is prompted with a selection dialog, where the different resolutions and their respective file size is displayed. The user decides that the highest available resolution takes up too much space, and selects the second highest resolution which is then downloaded to the device.\r\n\r\nWe have been able to get other information from the manifest such as resolution and bitrate, but not video duration or file size. If we knew the former we could (roughly) calculate the latter, but we have been unable to extract any of these two before starting the download. Is there a way to do this that we have missed and if that's not the case, are there plans to implement functionality like this in the future?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4714/comments",
    "author": "danha306",
    "comments": [
      {
        "user": "erdemguven",
        "created_at": "2018-09-24T13:21:47Z",
        "body": "There is a code in DashDownloader which calculates the whole download size using manifest only (If the segment sizes are defined in it). The code is only called when the download is started but we can make it accessible without downloading. Still it would work only if manifest has the necessary information.\r\n\r\nAlso DashManifest.durationMs contains the total duration of the video but again only if the it's defined in the manifest."
      },
      {
        "user": "ojw28",
        "created_at": "2019-06-21T18:22:43Z",
        "body": "`DashManifest.durationMs` combined with the representation bitrates seems sufficient for this use case. Closing on this basis, but please feel free to comment or clarify if you're still stuck!"
      }
    ]
  },
  {
    "number": 4713,
    "title": "I want to play two audio simultaneously using exoplayer. Non of media source working with this case. How i can achieve this?",
    "created_at": "2018-08-23T06:02:26Z",
    "closed_at": "2018-08-27T18:32:49Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4713",
    "body": "I have override buildAudioRenderers in DefaultRenderersFactory, and getMediaClock in MediaCodecAudioRenderer. Also I implement TrackSelector. In that way I can play all audio track simultaneously. But issue is i can only add upto 10-20 tracks after that Exoplyer stop working.\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4713/comments",
    "author": "lokeshdesai403",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2018-08-23T07:11:04Z",
        "body": "This is likely due to underlying platform limitations (e.g. on the amount of `AudioTrack` buffer space that the device can allocate). Your use case sounds quite unusual, but I think to do what you're trying to do, you probably need to do some mixing of the audio prior to it entering `AudioTrack`, so that you only have one `AudioTrack` instance. This is not something we support directly."
      },
      {
        "user": "lokeshdesai403",
        "created_at": "2018-08-23T11:54:08Z",
        "body": "If one audio is already playing using one AudioTrack instance. than for playing another audio file i have to make another instance. Isn't it?"
      },
      {
        "user": "ojw28",
        "created_at": "2018-08-27T18:32:49Z",
        "body": "There's nothing stopping you from mixing the audio yourself before it's fed into `AudioTrack`. Such an approach would let you play an arbitrarily large number of streams using a single `AudioTrack` instance. As above, this isn't something we support directly, so you'd need to figure out how to implement it yourself."
      }
    ]
  },
  {
    "number": 4709,
    "title": "How to use DownloadManager with multi directories ",
    "created_at": "2018-08-22T07:06:14Z",
    "closed_at": "2018-08-22T10:31:36Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4709",
    "body": "Hello! How i can use DownloadManager with multi directories ? For example i try download 2 hls media files (using queues from manager) to different directories. I would like to make a directory like this - \r\n\r\nDownloads\r\n-- mediafiles1\r\n---- cached_content_index1\r\n-- mediafiles2\r\n---- cached_content_index2\r\n-- ...\r\n-- mediafilesN\r\n---- cached_content_indexN\r\n-- actions\r\n-- tracked_actions\r\n\r\nI use DownloadManager like in example. But i can't found resolution to change cache from DownloaderConstructorHelper and don't recreate  DownloadManager. When i try to recreate new one new manager just lost download queues. My sqlite save states and local directories for media content. In theory i wanna play offline content just put offline media directory in cacheFactory and so on \r\n\r\n Сould you give an example how can this be done?  Thanks!",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4709/comments",
    "author": "morkovkin",
    "comments": [
      {
        "user": "erdemguven",
        "created_at": "2018-08-22T10:31:21Z",
        "body": "Currently this isn't supported. #4253 tracks this feature request.\r\n"
      }
    ]
  },
  {
    "number": 4706,
    "title": "Question: Exoplayer instance for video playback (and background audio) in Foreground service?",
    "created_at": "2018-08-22T03:07:45Z",
    "closed_at": "2018-08-27T18:33:01Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4706",
    "body": "Hi,\r\nI have used ExoPlayer before to play audio with background playback supported, meaning architecture was rather simple -> foreground service within which sat ExoPlayer instance.\r\n\r\n_Now Id like to add video playback._ and audio should still continue to play while in background\r\n\r\n**Is such architecture still viable when PlayerView.setPlayer wants the ExoPlayer instance directly?** \r\nI noticed Surface is Parcelable but newVideoComponent.setVideoTextureView((TextureView) surfaceView) wants the actual view and then extracts the surface from that.\r\n\r\nSo my question is: What is the recommended architecture for such (video only fg, audio fg and bg) playback? Should I just have a \"empty\" foreground service along side this to just keep app from getting killed in the background? Or is there a way to make it work via intents (parcelable arguments) to that given service, which would hold the reference to the player?\r\n\r\nThanks!",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4706/comments",
    "author": "ursusursus",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2018-08-22T12:17:47Z",
        "body": "> Is such architecture still viable when PlayerView.setPlayer wants the ExoPlayer instance directly?\r\n\r\nYes.\r\n\r\n> So my question is: What is the recommended architecture for such (video only fg, audio fg and bg) playback? Should I just have a \"empty\" foreground service along side this to just keep app from getting killed in the background?\r\n\r\nAssuming your service is in the same process, I'd recommend avoiding having to parcel everything. One simple solution is just to make the player static in the foreground service, and provide a static accessor to allow activities to get hold of it.\r\n\r\nIt is possible to put the service in a different process and do everything through intents / binding, but in that case I think you'd need to implement your own UI components, `setVideoSurface` directly on the player, and come up with a way of parceling player state."
      }
    ]
  },
  {
    "number": 4705,
    "title": "Can you cache a video without playing it? Instead of playing and caching at the same time.",
    "created_at": "2018-08-22T03:03:00Z",
    "closed_at": "2018-08-22T10:35:11Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4705",
    "body": "Can you cache a video without playing it? Instead of playing and caching at the same time.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4705/comments",
    "author": "qeadsw",
    "comments": [
      {
        "user": "erdemguven",
        "created_at": "2018-08-22T10:35:11Z",
        "body": "You can use DownloadManager to fully cache a video. Partial caching is only possible for progressive videos using CacheUtil.cache() method."
      }
    ]
  },
  {
    "number": 4704,
    "title": "Is there a function for reloading the cache information to refresh?",
    "created_at": "2018-08-22T02:05:46Z",
    "closed_at": "2018-08-22T10:38:25Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4704",
    "body": "When the cached information is loaded, the cached file is deleted for reasons such as cleaning up the garbage file, which means the cached information does not change.\r\nIs there any way to redo it? I have read some source code and found that the function SimpleCache. Initialize () is not exposed.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4704/comments",
    "author": "qeadsw",
    "comments": [
      {
        "user": "erdemguven",
        "created_at": "2018-08-22T10:38:25Z",
        "body": "SimpleCache updates itself automatically when it finds out a file is deleted. The only way to do it manually is releasing the cache instance and creating a new one."
      }
    ]
  },
  {
    "number": 4693,
    "title": "How to get Window tag?",
    "created_at": "2018-08-20T15:40:04Z",
    "closed_at": "2018-08-21T09:45:18Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4693",
    "body": "### Issue description\r\nWhen i try to get window tag, i always get `null`. Generally happens after i change media source\r\n### Reproduction steps\r\n\r\n\r\nI feed concatenating mediaSource to player\r\n```java\r\nprivate MediaSource createMediaSource(ExoVideo exoVideo) {\r\n    Utils utils = new Utils();\r\n    MediaSource[] playlist =\r\n        utils.getPlaylist(context, mediaDataSourceFactory, manifestDataSourceFactory);\r\n    Log.e(\"mcheck\", \"createMediaSource: size \" + playlist.length);\r\n    if (playlist.length == 1) return playlist[0];\r\n    ConcatenatingMediaSource concatenatingMediaSource = new ConcatenatingMediaSource(playlist);\r\n    return concatenatingMediaSource;\r\n  }\r\n```\r\nConcatenatingmediasource consists of several HLS MS where i put tags. Each of them checked to be non null.\r\n```java\r\n return new HlsMediaSource.Factory(mediaDataSourceFactory)\r\n            .setAllowChunklessPreparation(true)\r\n            .setTag(tag)\r\n            .createMediaSource(uri);\r\n```\r\n\r\nI check for tag in onTracksChanged()\r\n```java\r\n @Override @SuppressWarnings(\"ReferenceEquality\")\r\n    public void onTracksChanged(TrackGroupArray trackGroups, TrackSelectionArray trackSelections) {\r\n      Log.e(\"mcheck\", \"onTracksChanged: \");\r\n      if (timeline != null) {\r\n        Log.e(\"mcheck\", \"onTracksChanged: \" + timeline.getWindowCount());\r\n        if (timeline.getWindowCount() > 0) {\r\n          Log.e(\"mcheck\", \"onTracksChanged: \" + player.getCurrentTag());\r\n          Log.e(\"mcheck\", \"onTracksChanged:||||||||||||||||||||||||||||||||||||||||||||||||||\");\r\n          for (int i = 0; i < timeline.getWindowCount(); i++) {\r\n            Timeline.Window w = new Timeline.Window();\r\n            timeline.getWindow(i, w,true);\r\n            Log.e(\"mcheck\", \"onTracksAll: \" + i + \" \" + w.tag);\r\n          }\r\n          Timeline.Window w = new Timeline.Window();\r\n          timeline.getWindow(player.getCurrentWindowIndex(),w,true);\r\n          EventBus.getDefault().post(new PlayingAdEvent(player.isPlayingAd()));\r\n          playerCallback.onTrackEnded((String) w.tag,\r\n              player.getCurrentWindowIndex());\r\n        } else {\r\n\r\n        }\r\n      } else {\r\n        Log.e(\"mcheck\", \"onTracksChanged: timeline null\");\r\n      }\r\n    }\r\n  }\r\n```\r\n\r\nwhen this method i called i getting following log, where all tags are null\r\n```\r\n    onTracksChanged: \r\n    onTracksChanged: 23\r\n    onTracksChanged: null\r\n    onTracksChanged:||||||||||||||||||||||||||||||||||||||||||||||||||\r\n    onTracksAll: 0 null\r\n    onTracksAll: 1 null\r\n    onTracksAll: 2 null\r\n    onTracksAll: 3 null\r\n    onTracksAll: 4 null\r\n    onTracksAll: 5 null\r\n    onTracksAll: 6 null\r\n    onTracksAll: 7 null\r\n    onTracksAll: 8 null\r\n    onTracksAll: 9 null\r\n    onTracksAll: 10 null\r\n    onTracksAll: 11 null\r\n    onTracksAll: 12 null\r\n    onTracksAll: 13 null\r\n    onTracksAll: 14 null\r\n    onTracksAll: 15 null\r\n    onTracksAll: 16 null\r\n    onTracksAll: 17 null\r\n    onTracksAll: 18 null\r\n    onTracksAll: 19 null\r\n    onTracksAll: 20 null\r\n    onTracksAll: 21 null\r\n    onTracksAll: 22 null\r\n```\r\n### Version of ExoPlayer being used\r\nversion 2.8.2\r\n\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4693/comments",
    "author": "frakc",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2018-08-20T16:23:04Z",
        "body": "That's working as intended, but I agree it's not ideal. \r\n\r\nWhen the playlist is prepared, it spawns off the preparation of all the playlist elements. Only after each child element is prepared, you'll see the tag when using `window.tag` or `player.getCurrentTag()`. Before the child element is prepared, the window is just an empty shell without any information and unfortunately also without tag. Please listen to `onTimelineChanged` to see the updates happen. \r\n\r\nThe reason behind this behaviour is that there is no 1:1 relation between media source and windows because each media source can have multiple windows. That's why we can't assign a tag as long as we don't know more about the media structure."
      }
    ]
  },
  {
    "number": 4692,
    "title": "Does onTracksChanged gets called when video track changes due to ABR ?",
    "created_at": "2018-08-20T13:03:25Z",
    "closed_at": "2018-08-21T14:19:02Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4692",
    "body": "onTracksChanged is not getting called when video changes due to ABR. I tried getting updated track using `getCurrentTrackSelections`, but it is not returning updated list.\r\n\r\n`player.getVideoFormat()` is giving right format selected, but has incorrect values about bitrate.\r\nexample -  getting bitrate as -1, track id is wrong.\r\n\r\nWhat is the best way to get notified and get all track related info when video track changes.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4692/comments",
    "author": "sravan1213",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2018-08-21T13:57:11Z",
        "body": "`onTracksChanged` only gets called when the available tracks change, not when the adaptive selection changes. You should use `getVideoFormat`. You can also register an `AnalyticsListener` that overrides `onDecoderInputFormatChanged` to be notified when a change occurs.\r\n\r\nYou should see the bitrate and track id set correctly for DASH and SmoothStreaming adaptive playbacks. HLS we made some recent improvements in how this information is propagated, so you may have to try the `dev-v2` branch and/or wait for the 2.9.x release. Please give that a try and let us know if you're still not seeing the data you expect."
      },
      {
        "user": "tonihei",
        "created_at": "2018-08-21T14:05:56Z",
        "body": "Just to add to this, you may prefer to use `onVideoSizeChanged` which gives the selected video format specifically. That makes a difference if using HLS and `onDecoderInputFormatChanged` has a muxed audio and video format."
      },
      {
        "user": "sravan1213",
        "created_at": "2018-08-21T14:19:02Z",
        "body": "@ojw28 @tonihei thanks for the help.\r\nIt is working as expected in `dev-v2` for both HLS and DASH streams."
      }
    ]
  },
  {
    "number": 4686,
    "title": "Pause / resume ad on user action.",
    "created_at": "2018-08-20T09:27:33Z",
    "closed_at": "2018-08-20T09:43:51Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4686",
    "body": "I am using the IMA extension to show the ads. \r\nHowever I am not able to pause the ad on user action\r\nThe imaadsloader is initialized \r\n```\r\nimaAdsLoader = new ImaAdsLoader.Builder(context)\r\n        .setAdEventListener(new VLPlayerEvent(context, this))\r\n   .buildForAdTag(getAdTagUri(this.adTag));\r\n```\r\nAfter that I get the adsmanager\r\n\r\n ```\r\nimaAdsLoader.getAdsLoader().addAdsLoadedListener(new AdsLoader.AdsLoadedListener() {\r\n    @Override\r\n    public void onAdsManagerLoaded(AdsManagerLoadedEvent adsManagerLoadedEvent) {\r\n        adsManager = adsManagerLoadedEvent.getAdsManager();\r\n        adsManager.init();\r\n        adsManager.addAdEventListener(new AdEvent.AdEventListener() {\r\n            @Override\r\n            public void onAdEvent(AdEvent adEvent) {\r\n                switch (adEvent.getType()) {\r\n                    case LOADED:\r\n                        adsManager.start();\r\n                        break;\r\n                    case STARTED:\r\n                        break;\r\n\r\n                    case SKIPPED:\r\n\r\n                    case COMPLETED:\r\n                        break;\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n});\r\n```\r\n\r\nOn click of button I try to pause the ad using\r\n ```\r\nadsManager.pause();\r\n                imaAdsLoader.pauseAd();\r\n```\r\n\r\nbut none of the method seem to pause the ad. Is there anything I have missed out here?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4686/comments",
    "author": "wishy-viewlift",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2018-08-20T09:43:54Z",
        "body": "I think you should just be calling `setPlayWhenReady(false)` on the player to pause playback, as you would normally. You shouldn't need to interact directly with the ads manager or loader."
      }
    ]
  },
  {
    "number": 4683,
    "title": "RTSP Cannot play",
    "created_at": "2018-08-20T07:02:45Z",
    "closed_at": "2018-08-20T09:11:46Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4683",
    "body": "rtsp://184.72.239.149/vod/mp4:BigBuckBunny_175k.mov",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4683/comments",
    "author": "qeadsw",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2018-08-20T09:11:46Z",
        "body": "RTSP is not officially supported. Adding support is tracked by #55\r\n\r\n"
      }
    ]
  },
  {
    "number": 4672,
    "title": "Unable to overwrite the exo_playback_control_view.xml for PlayerView when merging layout resources.",
    "created_at": "2018-08-16T21:46:51Z",
    "closed_at": "2018-08-20T15:53:20Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4672",
    "body": "Here is my gradle properties:\r\n```\r\nandroid {\r\n    ...\r\n\r\n    sourceSets {\r\n        main {\r\n            res.srcDirs =\r\n                    [\r\n                            'src/main/res/layout/activities',\r\n                            'src/main/res/layout/fragments',\r\n                            'src/main/res/layout/widget',\r\n                            'src/main/res/layout',\r\n                            'src/main/res'\r\n                    ]\r\n        }\r\n    }\r\n}\r\n```\r\nI am using the 2.8.2v and the playback controller is located at the corresponding location: src/main/res/layout/exo_playback_control_view.xml\r\n\r\nThe issue is if I merging the layout resources then ExoPlayer can't find the resource(playback controller) but if I am not merging it works perfectly fine but main layout resource becomes less readable.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4672/comments",
    "author": "DomainFlag",
    "comments": [
      {
        "user": "erdemguven",
        "created_at": "2018-08-20T15:53:20Z",
        "body": "This issue looks like a general question about Android development. We recommend asking such questions on Stack Overflow, and are unfortunately unable to answer them here."
      }
    ]
  },
  {
    "number": 4668,
    "title": "How to create Two PlayerView in one Activity",
    "created_at": "2018-08-16T11:58:23Z",
    "closed_at": "2018-08-16T20:34:05Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4668",
    "body": "In my app, I want to create two PlayerView.\r\n1. Play video\r\n2. Play audio.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4668/comments",
    "author": "monxarat",
    "comments": [
      {
        "user": "erdemguven",
        "created_at": "2018-08-16T20:34:05Z",
        "body": "This issue looks like a general question about Android development. We recommend asking such questions on Stack Overflow, and are unfortunately unable to answer them here."
      }
    ]
  },
  {
    "number": 4658,
    "title": "Does ExoPlayer has any support to crop video?",
    "created_at": "2018-08-14T10:36:37Z",
    "closed_at": "2018-08-20T15:54:13Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4658",
    "body": "I want to display just only a quarter screen of the stream video. Is it possible with ExoPlayer?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4658/comments",
    "author": "ttm-hoangcm",
    "comments": [
      {
        "user": "erdemguven",
        "created_at": "2018-08-16T17:30:28Z",
        "body": "ExoPlayer can draw video into any Surface. The surface is set by the application via SimpleExoPlayer setVideoTextureView or any setVideoSurface* methods. You can apply cropping or any other transformation on the surface."
      }
    ]
  },
  {
    "number": 4657,
    "title": "Subtitle rendering in Exoplayer",
    "created_at": "2018-08-14T08:51:07Z",
    "closed_at": "2018-08-17T14:15:56Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4657",
    "body": "I developed a basic video player using Exoplayer and added subtitle support to my player using the following code\r\n\r\n`Format textFormat = Format.createTextSampleFormat(null, MimeTypes.APPLICATION_SUBRIP,\r\n            null, Format.NO_VALUE, Format.NO_VALUE, \"ar\", null);\r\n    Uri subtUri = Uri.parse(subtUrl);\r\n    MediaSource subtitleSource = new SingleSampleMediaSource(subtUri,dataSourceFactory, textFormat, C.TIME_UNSET);`\r\nNow what I want is that I should be able to translate subtitles to any language using google translate API. For this what I have done is I was creating an `AsyncTask `and was downloading the complete subtitle file from the URL and then `onPostExecute()` method I was passing that to google translate API for getting new subtitles.\r\n\r\nThis is the `AsyncTask `that I have created.\r\n```\r\nprivate class AsyncClass extends AsyncTask<String,Void,String>{\r\n\r\n        private String parseResponseFromServer(HttpResponse response) throws IllegalStateException, IOException {\r\n            // TODO Auto-generated method stub\r\n            BufferedReader reader=new BufferedReader(new InputStreamReader(response.getEntity().getContent()));\r\n            String line_read=null;\r\n            StringBuilder builder=new StringBuilder();\r\n            while((line_read=reader.readLine())!=null){\r\n                builder.append(line_read);\r\n                builder.append('\\n');\r\n             }\r\n\r\n            return builder.toString();\r\n        }\r\n\r\n\r\n        @Override\r\n        protected String doInBackground(String... url)\r\n        {\r\n\r\n            HttpClient client =new DefaultHttpClient();\r\n            HttpGet getreq =new HttpGet(url[0]);\r\n\r\n            HttpResponse resp= null;\r\n            try\r\n            {\r\n                resp = client.execute(getreq);\r\n                return parseResponseFromServer(resp);\r\n            } catch (IOException e)\r\n            {\r\n                e.printStackTrace();\r\n                return null;\r\n            }\r\n\r\n\r\n\r\n            //above line will pass the control to onPostExecute()\r\n        }\r\n\r\n        @Override\r\n        protected void onPostExecute(String result) {\r\n            // TODO Auto-generated method stub\r\n             try\r\n            {\r\n                saveFile(result);\r\n            } catch (FileNotFoundException e)\r\n            {\r\n                e.printStackTrace();\r\n            }\r\n            subtitleFile = result;\r\n            String newLanguage = \"fr\";\r\n            subtitleConverter subtitleConverter = new subtitleConverter();\r\n            subtitleConverter.execute(newLanguage);\r\n            //HERE the result will be the response from the server.\r\n\r\n        }\r\n    }\r\n```\r\nHere in background I am parsing the subtitle file from URL, saving it and then passing it to google translate. So what I want now is that instead of explicitly downloading subtitles, I should be able to get subtitle from the text renderer of subtitle and then there I can directly pass subtitle to my API and get the result.\r\n\r\nIs there any method by which I can get the content of the subtitles using the exoplayer because in first code exoplayer is playing video along with subtitles so somewhere it is getting those subtitle and rendering it I want to know how it is doing and how can I get to that part?\r\n\r\nYour help will be appreciated.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4657/comments",
    "author": "junaid24",
    "comments": [
      {
        "user": "erdemguven",
        "created_at": "2018-08-16T17:12:43Z",
        "body": "If you're using PlayerView, it adds PlayerView.ComponentListener as text output using TextComponent.addTextOutput() in setPlayer(). \r\nWhen PlayerView.ComponentListener.onCues is called it calls subtitleView.onCues(cues).\r\nCue class has text field. You can translate it and create a new Cue object with the translation and pass to subtitleView."
      },
      {
        "user": "junaid24",
        "created_at": "2018-08-17T10:16:37Z",
        "body": "Thank you mate. I am getting it now."
      },
      {
        "user": "junaid24",
        "created_at": "2018-08-24T10:05:36Z",
        "body": "Hi @erdemguven \r\nIn the above approach getting subtitles from subtitleView.onCues(cues) method of PlayerView class creates a new problem because this is happening just before subtitles are displayed on screen. Here  I am taking subtitles from there translating it and passing to subtitle View but that creates a synchronization issue between the audio and text(Subtitles are coming with a little delay).\r\nSo is there any method that I can get subtitle from the renderer itself before coming onto PlayerView so that the next subtitles which are about to come on screen I can translate them beforehand so there will be no synchronization isssues.\r\n"
      },
      {
        "user": "erdemguven",
        "created_at": "2018-08-24T12:04:37Z",
        "body": "One option:\r\n1. implement a wrapper SubtitleDecoder which wraps another SubtitleDecoder\r\n2. implement a custom SubtitleDecoderFactory which wraps SubtitleDecoderFactory.DEFAULT\r\n3. In your SubtitleDecoderFactory.createDecoder create your SubtitleDecoder which wraps whatever object SubtitleDecoderFactory.DEFAULT.createDecoder returns.\r\n4. In your SubtitleDecoder.dequeueOutputBuffer do the translation on the SubtitleOutputBuffer object returned by the wrapped SubtitleDecoder."
      }
    ]
  },
  {
    "number": 4651,
    "title": "Question: How to detect if the given dash stream has subtitles?",
    "created_at": "2018-08-13T12:39:42Z",
    "closed_at": "2018-09-24T12:49:26Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4651",
    "body": "I want to display my subtitles buttons dynamically depends if a the dash stream has subtitles or not. How can I detect this inside the Exoplayer?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4651/comments",
    "author": "userdimi",
    "comments": [
      {
        "user": "erdemguven",
        "created_at": "2018-08-16T11:36:59Z",
        "body": "You can check the ExoPlayer demo app to see how the subtitle (text) button is displayed dynamically:\r\ncom.google.android.exoplayer2.demo.PlayerActivity#updateButtonVisibilities"
      }
    ]
  },
  {
    "number": 4649,
    "title": "AnalyticsListener.onBandwidthEstimate() is not called",
    "created_at": "2018-08-13T09:52:06Z",
    "closed_at": "2018-10-15T08:12:52Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4649",
    "body": "### Issue description\r\nI've started using the new `AnalyticsListener`, with the hope of replacing multiple metrics-collection listener with a single one. Everything seems to work fine, except that `onBandwidthEstimate()` is never called.\r\n\r\n### Reproduction steps\r\nUsing the main demo app:\r\n1. In ExoPlayer's `EventLogger`, find `onBandwidthEstimate()` and replace the first line from `// Do nothing.` to something like `logd(\"onBandwidthEstimate\");`. \r\n2. Play any video. The text is never logged to logcat.\r\n\r\n### Link to test content\r\nUse any sample in the demo app.\r\n\r\n### Version of ExoPlayer being used\r\n2.8.3 (release-v2 at the time of writing).\r\n\r\n### Device(s) and version(s) of Android being used\r\nEmulator with Android 27.\r\n\r\n### A full bug report captured from the device\r\nNo relevant.\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4649/comments",
    "author": "noamtamim",
    "comments": [
      {
        "user": "noamtamim",
        "created_at": "2018-08-14T20:41:32Z",
        "body": "The same is true for other `AnalyticsListener` events. For example, `onViewportSizeChange()` and `onNetworkTypeChanged()`. For those two, `AnalyticsCollector` has `notifyViewportSizeChanged()` and `notifyNetworkTypeChanged()` respectively. These methods are currently only called from test code - they are probably meant to be called from an internal listener."
      },
      {
        "user": "erdemguven",
        "created_at": "2018-08-16T16:26:09Z",
        "body": "I can confirm that on dev-v2 branch they work fine. Btw, onNetworkTypeChanged was removed and onViewportSizeChange was renamed to onSurfaceSizeChanged."
      },
      {
        "user": "noamtamim",
        "created_at": "2018-08-17T07:41:21Z",
        "body": "Thanks @erdemguven. Any chance of getting it fixed in the 2.8.x series as well (probably without the rename). Assuming there's going to be a 2.8.4, of course. The update from ExoPlayer 2.x to 2.y is typically breaking APIs and changing things that require extensive QA on our side.\r\n\r\nAlternatively, if you can tell me how to capture `onViewportSizeChange` myself from a different source it will be great. `onBandwidthEstimate` is already available as `BandwidthMeter.EventListener.onBandwidthSample()`, so I have a workaround there."
      },
      {
        "user": "ojw28",
        "created_at": "2018-10-15T08:12:52Z",
        "body": "We don't have any plans to back-port the fix, sorry."
      },
      {
        "user": "noamtamim",
        "created_at": "2018-10-15T08:46:40Z",
        "body": "@ojw28 thanks, I asked two months ago :-)\r\nBy now we'll soon upgrade to 2.9.x anyway, so we're good. Thanks again."
      }
    ]
  },
  {
    "number": 4644,
    "title": "Back buffer implementation",
    "created_at": "2018-08-11T05:15:42Z",
    "closed_at": "2018-08-13T10:46:31Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4644",
    "body": "In ExoPlayer 2.8.2, there are two new interfaces `retainBackBufferFromKeyframe` and `getBackBufferDurationUs`, which, according to the comments in `LoadControl.java` and my experiments, retain `getBackBufferDurationUs` worth of buffer *behind* the playback position. I implemented my own `LoadControl` and returned `100*1000*1000`us for the call `getBackBufferDurationUs`. But, when I seek back in my video, why do I still significant (order of 1-2s) of rebuffering time? I have verified there's no new segment downloaded for the playback to start. So, the player definitely has these 'seemed' segments in its buffer. I am unable to figure out what ExoPlayer is doing for ~1s before switching the player back to playing state. Has any body played with this brand new interface? Please share any insights.\r\n\r\nThanks",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4644/comments",
    "author": "kanthicn1",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2018-08-13T10:46:30Z",
        "body": "If you're playing video and using frame-exact seeking (the default), one possible explanation for the 1--2 second pause is that the video decoder is decoding from the previous keyframe and this is taking some time. If you're using a large keyframe interval the decoder may need to process a lot of data before it can render the frame at the requested seek position. If you see that input is queued to the video decoder immediately after seeking but it takes a while for the first frame to be rendered this is probably what's going on. To avoid the pause, you could decrease the keyframe interval (GOP size) or set seek parameters that allow adjusting seeks to keyframes."
      },
      {
        "user": "kanthicn1",
        "created_at": "2018-08-13T14:19:19Z",
        "body": "This is a great tip for me. Thanks @andrewlewis. It would be great if you could tell me if there's a way I can see whether \"input is queued to the video decoder immediately after seeking\". Are there any callbacks or debug statements that I can look for?"
      },
      {
        "user": "andrewlewis",
        "created_at": "2018-08-15T09:57:51Z",
        "body": "@AndroidRocks I don't think there's a way to verify this based on existing logging but you could add some logging in `MediaCodecVideoRenderer.skipOutputBuffer` or set a breakpoint there, and see whether it is hit immediately after requesting a seek (versus after the pause, in which case something else is going on)."
      },
      {
        "user": "kanthicn1",
        "created_at": "2018-08-15T22:17:35Z",
        "body": "Thanks @andrewlewis . I added a debug and tracked this. Once the \"seek is processed\", i.e., my listeners have received the \"onSeekProcessed\" event, the debug statement from `skipOutputBuffer` starts. It is repeated several times and then the first frame is rendered very soon (< 20ms) after the last debug statement of `skipOutputBuffer` appears. So, what you said checks out that the player is spending most of the time decoding and discarding frames before it starts playback again. \r\n\r\nI have an additional question, if you don't mind. Shouldn't back-seek perform strictly better in a player with a non-zero (seek-duration+ delta) back buffer configured than a player that doesn't have any back buffer configured? The context of this question is : if I execute 30 back seeks on a video with ExoPlayer-with-backbuffer (let's call with withBB) and repeat this with 30 back seeks in Exoplayer-without-backbuffer (withoutBB), the average rebuffering time per seek is \"some times\"* worse in  withBB. The seek duration is always less than the BB duration. Under what circumstances of bandwidth and video can withoutBB perform better than withBB?\r\n\r\nThank you very much for your patience and insights!"
      },
      {
        "user": "andrewlewis",
        "created_at": "2018-08-16T08:41:20Z",
        "body": "Assuming seeking is always to the same frame: whether you hit the network or not you always have to decode up to the frame-exact seek destination, so I'd expect seeking to take the same or longer time without a back buffer.\r\n\r\nIf the seek destination was not always the same frame in your experiment, that might explain the surprising result: the cost of the decoding step depends on how many frames are between the preceding keyframe and the seek destination, so if you have to load from the network but then the seek destination is on a keyframe that could lead to an overall lower seek duration compared to the case where you don't load from the network but have to decode lots of frames to get to the seek destination. For the decoding step, in the best case you're seeking to a keyframe so the decoding has very low cost, and in the worst case you have to decode an entire group of pictures. The worst case with back buffer could take longer than the best case without a back buffer.\r\n\r\n[Aside: I guess another thing to bear in mind is that here I'm thinking about the time taken until the first frame gets rendered when seeking. If the user requested to seek while the player was ready and the seek was serviced from the back buffer, I'd expect the video renderer to be ready as soon as it has rendered the seek destination frame (the player's future buffered duration is now even longer than it was before the seek). If the seek can't be serviced from the back buffer we also need to wait until the player has enough media buffered to transition from the buffering to ready state.]"
      },
      {
        "user": "kanthicn1",
        "created_at": "2018-08-16T21:01:30Z",
        "body": "Thanks @andrewlewis. I can't guarantee that the seeks are to the same frame in both cases. But, from your answer what I take away is that my minimal sample set of 30 seeks is not making sure that \"on an average the seeks are to the same location\". I should probably execute many more seeks for the law of large numbers to kick in (and also make sure the video and throughput are the same to rule out decoding time differences because of content differences and download time differences).\r\n\r\nI really appreciate your help. Thank you."
      }
    ]
  },
  {
    "number": 4640,
    "title": "Show two player view with one stream in same time",
    "created_at": "2018-08-10T13:45:43Z",
    "closed_at": "2018-08-10T13:52:39Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4640",
    "body": "I need to transfer a exoplayer to a dialog and show it till dialog is showing and after dismiss remove it from dialog. i have done it with remove view from parent and add it to dialog view , but i need both in same time , for example i need to show video in main view with blur effect while dialog with same video is showing on screen. how can i do it , i don't want to add two player and request stream for both of them seperatly. it will consume network bandwidth. Any one has any idea ? Thanks in advanced.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4640/comments",
    "author": "AliKhoshraftar",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2018-08-10T13:52:39Z",
        "body": "I don't think the Android view system provides a way to show surface output in two views at the same time like this. It's possible to implement it yourself by passing the decoder a surface from a `SurfaceTexture` so it can render off-screen, then copying from there to two different output `SurfaceView`s using GLES. The blurring effect could also be applied as part of the copy shader for one of the videos."
      }
    ]
  },
  {
    "number": 4630,
    "title": "merging multiple videos",
    "created_at": "2018-08-09T07:40:52Z",
    "closed_at": "2018-09-25T15:26:49Z",
    "labels": [
      "question",
      "need more info"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4630",
    "body": "Hi, I am trying to merge multiple mp4 videos using mp4Parser but it is not succeed due to different sample rates. Is it possible using Exoplayer and how can I achieve it. Any guideline please.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4630/comments",
    "author": "lindathomaslinda",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2018-08-09T13:17:07Z",
        "body": "ExoPlayer doesn't support writing MP4 files so I'm not sure it can help with this, but there's not much information to go on. If you could describe what inputs you have and what output you're looking for in more detail that would be helpful."
      },
      {
        "user": "andrewlewis",
        "created_at": "2018-09-25T15:26:49Z",
        "body": "Closing due to inactivity."
      }
    ]
  },
  {
    "number": 4629,
    "title": "Add Player.isPlaying()",
    "created_at": "2018-08-08T18:08:08Z",
    "closed_at": "2018-08-14T09:03:58Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4629",
    "body": "Hi there geniuses,\r\n\r\n`Player.isPlayingAd()` is pretty hot and useful.\r\n\r\nCould you geniuses add `Player.isPlaying()`? Because `Player.getPlaybackState()` doesn't know if it's playing or not.\r\n\r\nI know you're all google's soldiers. So you must be very proud of `Player.isPlayingAd()`, right? But when you make some open source, could you geniuses temporarily forget about ads? And add that hotter `Player.isPlaying()`? I think it could be more hotter, more useful, more geniussy, more elegant, more brilliant.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4629/comments",
    "author": "ghost",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2018-08-09T07:40:28Z",
        "body": "`player.getPlaybackState() == Player.STATE_READY && player.getPlayWhenReady()` tells you whether the player is playing. I'm not sure if it's worth providing an `isPlaying()` method that returns this. Could you describe your use case for this function? Thanks."
      }
    ]
  },
  {
    "number": 4626,
    "title": "IllegalClippingException when using ClippingMediaSource(LoopingMediaSource(limitedLoops))",
    "created_at": "2018-08-08T10:23:38Z",
    "closed_at": "2018-08-10T10:05:51Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4626",
    "body": "Tested on r2.8.2.\r\nFollowing code will generate IllegalClippingException  when playing.\r\n\r\n```\r\nUri uri = Uri.fromFile(new File(TEST_MEDIA_FILE));\r\nExtractorMediaSource extractorMediaSource = new ExtractorMediaSource.Factory(new \r\n        DefaultDataSourceFactory(this, \"TEST APP\")).createMediaSource(uri);\r\nLoopingMediaSource loopingMediaSource = new LoopingMediaSource(extractorMediaSource, 3);\r\nClippingMediaSource clippingMediaSource = new ClippingMediaSource(loopingMediaSource, 0, C.TIME_END_OF_SOURCE);\r\nmPlayer.prepare(clippingMediaSource);\r\n```\r\n\r\nHowever, create looping media source with loop limit = INT_MAX will not generate the exception.\r\nWhat is more, using LoopingMediaSource to wrap a ClippingMediaSource will also avoid this issue.\r\n\r\nIs it a bug or some sort of limitation?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4626/comments",
    "author": "robin2046",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2018-08-08T10:29:13Z",
        "body": "The limitation is that `ClippingMediaSource` will only clip a single-period/window source, but looping results in a multi-period timeline. What result are you aiming for? In the code snippet you're trying to clip from zero to the end of the source, which is like not having a clip at all."
      },
      {
        "user": "robin2046",
        "created_at": "2018-08-09T00:53:10Z",
        "body": "Use limited clip still reproduces the error:\r\n\r\n```\r\n        Uri uri = Uri.fromFile(new File(TEST_MEDIA_FILE));\r\n        ExtractorMediaSource extractorMediaSource = new ExtractorMediaSource.Factory(new DefaultDataSourceFactory(this, \"TEST APP\")).createMediaSource(uri);\r\n        LoopingMediaSource loopingMediaSource = new LoopingMediaSource(extractorMediaSource, 3);\r\n        ClippingMediaSource clippingMediaSource = new ClippingMediaSource(loopingMediaSource, 0, 3000000);\r\n        mPlayer.prepare(clippingMediaSource);\r\n```\r\n\r\nI understand that I may/should not use ClipSource to wrap a LoopSource, which does not sound correct as you said. But maybe throw a illegal argument exception is better because I don't know the limitation of ClipSource(can not clip multi-period timeline) before you explained it.\r\n\r\nOne more question, why ClipSource(LoopSource(ExtractSource, INT_MAX)) is OK?"
      },
      {
        "user": "andrewlewis",
        "created_at": "2018-08-09T13:11:10Z",
        "body": "What are you actually trying to accomplish here? There's probably a way to do it using concatenation and clipping but it's not clear what result you're aiming for. If the goal is to loop some content until a certain duration and you know the content's duration, you could do this by looping the entire content `floor(total duration / content duration)` times then concatenating the result with a clip for the remainder.\r\n\r\nAt the time of creating the `ClippingMediaSource` we don't know the structure of the child source, so we can't throw an `IllegalArgumentException` from the constructor (if this is the suggestion).\r\n\r\nIt looks like `InfinitelyLoopingTimeline` doesn't declare multiple periods at the moment, which is why this works, I think. Setting a repeat mode on the player instead of using `LoopingMediaSource` may be a better way to loop indefinitely, depending on your use case."
      },
      {
        "user": "robin2046",
        "created_at": "2018-08-10T01:50:04Z",
        "body": "I use loop source to make the content playing for a limited loops.\r\nAnyway, thanks a lot for your explanation. They are all clear to me now.\r\nReally appreciate your great work."
      }
    ]
  },
  {
    "number": 4623,
    "title": "QA: how to add private DRM into ExoPlayer to play HLS encrypted stream?",
    "created_at": "2018-08-07T10:28:27Z",
    "closed_at": "2018-08-10T10:23:16Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4623",
    "body": "Hi,\r\nThis is a question instead of a issue report.\r\nI'm evaluating using ExoPlayer SDK in product. \r\nA typical feature is to play HLS encrypted stream with private DRM instead of using device Widevine or Playready.\r\nThis private DRM module provides:\r\n1. license management\r\n2. AES-128 decryption\r\n\r\nThe HLS encrypted  stream is standard AES-128 CBC mode which means the whole segment is encrypted and the decryption should happen (by private DRM) before demuxing while ExoPlayer is fully implemented based on MediaCodec and MediaDrm and decryption is done in the MediaCodec by device CDM.\r\n\r\nTo implement this feature based on ExoPlayer a possible solution is to extend some interfaces defined in ExoPlayer drm package and insert data decryption so data sent to demuxer\r\nand decoder is clear data.\r\n\r\nCould the ExoPlayer development team (or anybody who has related experience) give a hint which interfaces are designed for private DRM extension?\r\n\r\nBest regards,\r\nJianhua",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4623/comments",
    "author": "jzhoubupt",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2018-08-07T20:25:14Z",
        "body": "> Could the ExoPlayer development team (or anybody who has related experience) give a hint which interfaces are designed for private DRM extension?\r\n\r\nWe don't provide any interfaces designed to support custom full-segment decryption. Your best bet would be to look at how AES-128 full segment decryption is supported in the HLS module, see if you can find a way to adapt it to your needs, and if you manage to get that working, think about how it might be possible to inject the custom pieces. If that can be done by adding some very minimal hooks then we'd consider a pull request that adds them.\r\n\r\nI don't think this is something we're going to look at proactively supporting. The scheme you describe doesn't sound secure enough to satisfy many premium content providers (e.g. movie studios), even for SD playback. So even if the scheme is useful for you, it likely wont be useful for the majority of developers. The industry has already moved significantly away from full-segment encryption and toward sample encryption.\r\n\r\nAs an aside, we do support a way of implementing custom sample decryption, which can be done by providing an `ExoMediaDrm` implementation together with software decoders that incorporate a decryption step (although actually implementing this is definitely an advanced topic!)."
      },
      {
        "user": "jzhoubupt",
        "created_at": "2018-08-10T10:15:02Z",
        "body": "Thanks a lot for your confirmation.\r\nWill keep you update if get private DRM integration into ExoPlayer in a well modulized solution.\r\n\r\nFor this feature (full segment decryption) indeed there is security concern from the industry and i completely understand. However there are still lots of video streaming solution running on these private DRM systems on open devices so the market requirement for this feature support can't be ignored. That's why my department evaluate technical solution even we have support for Widevine and Playready.\r\n\r\nJianhua\r\n"
      }
    ]
  },
  {
    "number": 4620,
    "title": "video dimmed when opened in bottomsheet fragment",
    "created_at": "2018-08-07T01:36:59Z",
    "closed_at": "2018-08-07T09:13:51Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4620",
    "body": "Before filing an issue:\r\n-----------------------\r\nI Have searched existing issues, including issues that are closed but no luck.\r\n\r\n### Issue description\r\nI managed to setup a recyclerview of video list, my plan is to preview the video in \r\na bottom sheet fragment after long-click an item in the recyclerview video list.  almost done \r\nbut the screen is dimmed when playing in bottomsheet fragment.  \r\n\r\n\r\n### Version of ExoPlayer being used\r\nexoplayer:2.7.2\r\n\r\n### Device(s) and version(s) of Android being used\r\nHuaWei P7 customized version of Android 5.1.1\r\n\r\nHas anyone have done this before? or is it a bad experience previewing a video in a popup bottomsheet fragment ? \r\n\r\nTIA .\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4620/comments",
    "author": "kingofswing",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2018-08-07T09:13:51Z",
        "body": "I haven't heard of screen appearing dimmed before. It might be worth checking your layout in the Android Studio layout inspector to see if there's a translucent view on top.\r\n\r\nThis sounds like an app issue, which would be beyond the scope of this issue tracker to investigate. If you can reproduce the issue on a non-customized build in the ExoPlayer demo app please provide a full bug report and we can investigate further."
      },
      {
        "user": "kingofswing",
        "created_at": "2018-08-22T03:16:29Z",
        "body": "thank your for your quick replay. but found issue closed.  I mean I tried to get video played in bottom sheet fragment through normal steps. the point may be mask layer between the popup bottomsheet fragment and the recyclerview list.  if put some textview or input textbox or button, the layout is ok, but after exoplayerview put in layout of bottom sheet , when video starts to play, the video screen is mixed with the mask layer, so the screen is dimmed "
      },
      {
        "user": "abdurahmanadilovic",
        "created_at": "2018-09-13T12:49:03Z",
        "body": "@kingofswing how did you resolve this issue? I have the same issue in my app"
      },
      {
        "user": "kingofswing",
        "created_at": "2018-09-28T00:34:08Z",
        "body": "> \r\n> \r\n> @kingofswing how did you resolve this issue? I have the same issue in my app\r\n\r\nWhen I test my app using the old HUAWEI P7 (bought in 2015.2), the video screen is sure dimmed , It seems due to the mask layer.  but several weeks ago I bought a new phone, which is VIVO Y71, it's an customized Android 8.1 phone, with 3GB memory and 32GB storage, when tested , it is surprised to me that the video is normal , not dimmed this time.\r\n\r\nSorry for the later reply.\r\n"
      }
    ]
  },
  {
    "number": 4618,
    "title": "Saving Clipped Media Source",
    "created_at": "2018-08-06T08:27:23Z",
    "closed_at": "2018-08-06T11:06:47Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4618",
    "body": "I am having an issue when trying to save a video after using ClippingMediaSource. I want to be able to store the clip after it has been trimmed. Can this be done?\r\n\r\nIs ClippingMediaSource simply only to playback a section of the MediaSource or can it be used to trim a clip?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4618/comments",
    "author": "ntohill95",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2018-08-06T10:38:06Z",
        "body": "Could you elaborate on what you mean by saving/storing a video? As you say, `ClippingMediaSource` is intended for playing back part of another media source. If you want to cache the clip I think that should just work in the normal way with `CacheDataSource`."
      },
      {
        "user": "ntohill95",
        "created_at": "2018-08-06T10:41:56Z",
        "body": "I want to edit a video clip and save the new trimmed version to storage. Thank you for the quick response i will investigate CacheDataSource "
      },
      {
        "user": "andrewlewis",
        "created_at": "2018-08-06T11:06:47Z",
        "body": "I'm afraid ExoPlayer doesn't provide a way to save media streams to storage. For example, if you wanted to produce an MP3 file with the first thirty seconds removed, ExoPlayer does not support that. `CacheDataSource` will cache media in its own internal format, so it won't help with this."
      }
    ]
  },
  {
    "number": 4613,
    "title": "Order of execution of listeners",
    "created_at": "2018-08-02T23:43:17Z",
    "closed_at": "2018-08-16T20:57:30Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4613",
    "body": "Hi,\r\n\r\nI am using ExoPlayer 2.8.2 release and trying to implement a feature where I want to use the bandwidth measurement from the latest video segment download to influence the quality of the next segment. This is for Dash videos.\r\nI have extended trackSelection to `CustomTrackSelection` object. But, the problem on several occasions, by the time the `DefaultDashChunkSource` calls `updateSelectedTrack` function, the previous download end event hasn't been processed by my `listener` and I haven't had a chance to register the latest throughput sample. \r\nI guess what's happening is that the `onLoadCompleted` event is processed by `ChunkSampleStream` and it proceeds with the next download start _before_ my listener is invoked.\r\nIs there any way to get around this? Is there any way I can \"wait\" before downloading the next segment if my listener hasn't registered the download end event?\r\n\r\nThanks for your attention and help! I appreciate any pointers.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4613/comments",
    "author": "kanthicn1",
    "comments": [
      {
        "user": "erdemguven",
        "created_at": "2018-08-07T08:52:12Z",
        "body": "Why don't you use AdaptiveTrackSelection? It already selects tracks according to bandwidth measurement. "
      },
      {
        "user": "kanthicn1",
        "created_at": "2018-08-09T18:58:46Z",
        "body": "Fair enough @erdemguven . Sorry for not writing the complete problem. I don't want to use `AdaptiveTrackSelection` because I want to use my own track selection logic which doesn't quite agree with what `AdaptiveTrackSelection` is doing. Also, the `DefaultBandwidthMeter`, which is used by `AdaptiveTrackSelection`,  gives a  \"SlidingPercentile\" estimate of bandwidth while I want the last instantaneous value of the bandwidth measurement. \r\nOne approach that might actually work for my case is to use a different bandwidth meter instead of relying on throughput measurements from listeners.\r\n\r\n(a) implement `CustomBandwidthMeter` and pass that to the `buildDataSourceFactory` and `customTrackSelection`. -- this is so that my `CustomBandwidthMeter` can expose the last instantaneous measurement of bandwidth sample.\r\n(b) Query the `CustomBandwidthMeter` for the latest throughput sample from `CustomTrackSelection` and use it in my track selection logic.\r\n\r\nMy question is: in the above logic, is there a chance that I might not get the latest throughput sample due to race conditions in event processing? i.e., Is the `DataSourceFactory` guaranteed to update the bandwidth sample before `CustomTrackSelection` is called for picking the quality for the next segment to be loaded?"
      },
      {
        "user": "erdemguven",
        "created_at": "2018-08-16T20:49:57Z",
        "body": "@ojw28 could you look at this?"
      },
      {
        "user": "ojw28",
        "created_at": "2018-08-16T20:57:30Z",
        "body": "> My question is: in the above logic, is there a chance that I might not get the latest throughput sample due to race conditions in event processing? i.e., Is the DataSourceFactory guaranteed to update the bandwidth sample before CustomTrackSelection is called for picking the quality for the next segment to be loaded?\r\n\r\nThere is a guarantee, which is that the `TransferListener.onTransferEnd` call corresponding to a chunk will always be called before `TrackSelection.updateSelectedTrack` is called to pick the quality for the next chunk. Note that `DefaultBandwidthMeter` updates its bitrate estimate in `onTransferEnd`, and `AdaptiveTrackSelection` gets the bitrate estimate in `TrackSelection.updateSelectedTrack`. Hence it's guaranteed that the updated bitrate estimate is used.\r\n\r\nSo in short, as long as you follow the same model in your custom components (albeit changing the actual logic for estimating the bitrate and/or choosing the track), then you'll get the same guarantee, which I think is what you want."
      },
      {
        "user": "kanthicn1",
        "created_at": "2018-08-16T21:03:35Z",
        "body": "Perfect. Thanks @ojw28 and @erdemguven. "
      }
    ]
  },
  {
    "number": 4610,
    "title": "Play Widevine DRM video through ExoPlayer",
    "created_at": "2018-08-02T12:38:22Z",
    "closed_at": "2018-09-25T15:27:01Z",
    "labels": [
      "question",
      "need more info"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4610",
    "body": "I'm trying to play a video protected by DRM (Widevine) through ExoPlayer Android library. Currently, we are trying to play it through the code demo of that repository. \r\n\r\nOur video request needs a token to be added. But I don't know where to add it. We have added it in *drm_key_request_properties*:\r\n\r\n```\r\n{\r\n           \"name\": \"TEST DRM\",\r\n           \"uri\": \"URI_OF_VIDEO\",\r\n           \"drm_scheme\": \"widevine\",\r\n           \"drm_license_url\": \"URL_LICENSE\",\r\n           \"drm_key_request_properties\": {\r\n               \"Authorization\" : \"CORRECT_TOKEN\"\r\n            }\r\n   }\r\n```\r\n\r\nBut it's not working. Any idea of what can be happening?\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4610/comments",
    "author": "adrianlazaro8",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2018-08-06T10:52:06Z",
        "body": "Do you need to include a type in the authorization header value? Do you see any logging about the HTTP response?"
      },
      {
        "user": "andrewlewis",
        "created_at": "2018-09-25T15:27:01Z",
        "body": "Closing due to inactivity."
      }
    ]
  },
  {
    "number": 4609,
    "title": "Best way to insert a virtual freeze-frame into an ExoPlayer video?",
    "created_at": "2018-08-01T22:49:32Z",
    "closed_at": "2018-09-11T07:57:02Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4609",
    "body": "My overall usage of ExoPlayer is pretty simplistic, just playing back local videos, and I'm new to the library, and still coming to grips with how Sources/Timelines/Periods/etc all work together.\r\n\r\nI'd like to insert a virtual freeze-frame into an arbitrary video on the Android device.\r\n\r\nFor example, say I just loaded in a 1 minute clip and I want to insert a 10 second freeze frame at the 30 second mark and have the video (from the point of view of the UI/player bar) appear to now be a single 1 minute 10 second video with continuous playback, when played back the single frame at the 30 second mark in the original video plays for 10 seconds instead of for just a single frame period, but the UI bar scrubs over it at the same continuous rate as any other period of the video.\r\n\r\nA combination of ClippingMediaSource and ConcatinatingMediaSource seems like a decent fit for this, say by clipping the video to a StartSource, EndSource, and MidSource (which is the freeze-frame part).  \r\n\r\nThe way I've approached this problem thus far was to extract a bitmap image of the frame I want to freeze and either encode this into its own video (pretty heavy weight), or hack up the UI layer code to display it as an image over the player view while some correct-length, but dummy MidSource plays.   \r\n\r\nBoth of these are fairly messy executions and the frame extracted (using MediaMetadataRetriever.getFrameAtTime, even with OPTION_CLOSEST) doesn't always present a good match what exoplayer is actually displaying at that time, so it usually causes a bit of jumpiness as the sources are switched over while playing the ConcatinatingMediaSource.\r\n\r\nIs there a conceptually simpler way to do this that I'm missing by not yet being deeply versed in how ExoPlayer works?  Would a custom MediaSource with its own custom Timeline be a good fit for this? and if so, any general pointers on how to achieve this functionality without becoming an ExoPlayer expert first?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4609/comments",
    "author": "droidoit",
    "comments": [
      {
        "user": "erdemguven",
        "created_at": "2018-08-03T15:53:30Z",
        "body": "@tonihei could you look at this?"
      },
      {
        "user": "tonihei",
        "created_at": "2018-08-20T10:47:28Z",
        "body": "That's an interesting question and there seem to be multiple ways to address this:\r\n- If it's possible for you, the simplest way is probably the encode the video with the freeze frame. Either in the middle of the original video or as as a separate video which can be combined with the other videos as you describe. \r\n- Note that ExoPlayer has no native support for image display (although such a feature has been requested several times: e.g. #3434, #2874). You can add such a feature by adding a `Renderer` for images and then load your image with a `SingleSampleMediaSource`. Again, such a source can be concatenated into the clipped start and end source of the video.\r\n- If you are having issues finding the correct frame, you can try to use ExoPlayer's new metadata and frame retrieval classes which will be added in one of the next releases (unfortunately, not yet in dev-v2 branch).\r\n- You may also try to just the pause the player at the intended position and provide your own UI progress bar showing the additional duration."
      },
      {
        "user": "tonihei",
        "created_at": "2018-09-11T07:57:02Z",
        "body": "Closing the issue as the question is supposedly answered. If not, please feel free to reopen."
      }
    ]
  },
  {
    "number": 4590,
    "title": "AES-128 key external from manifest (set the URI/IV on player/mediaSource for decryption)",
    "created_at": "2018-07-27T11:56:32Z",
    "closed_at": "2018-07-30T06:45:55Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4590",
    "body": "Hello,\r\n\r\nI want to know if there is any way to set #EXT-X-KEY:METHOD=AES-128 params (URI and IV) outside the manifest file (for all the parts of the playlist). For now I am receiving an M3U8 file which contains the information for a playlist (master playlist, details below), but if someone finds a way to intercept that link, I think the encryption is not that useful anymore because all the data to download/decrypt the files are on the manifest. I know that HlsMediaSource has a class like Aes128DataSource used to decrypt the files, but it is used directly by HlsMediaSource and can/should not be used (create a new instance and set as a property) by the app separated. \r\n\r\nI searched and found this issues : #378  reported a few years ago and I was wondering if there is any updates or other methods on how I could secure the files on server, so that only the link to the HLS manifest URL would not be enough to play the stream (need an external extra key to be decoded).\r\n\r\n`\r\n#EXTM3U\r\n#EXT-X-STREAM-INF:PROGRAM-ID=1,BANDWIDTH=72000,CODECS=\"mp4a.40.5\"\r\n********.m3u8\r\n`\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4590/comments",
    "author": "VladTE",
    "comments": [
      {
        "user": "AquilesCanta",
        "created_at": "2018-07-30T06:45:55Z",
        "body": "Hi @VladTE, \r\n\r\n>EXT-X-KEY:METHOD=AES-128 params (URI and IV) outside the manifest file (for all the parts of the playlist)\r\n\r\nI don't know of any spec-compliant alternatives. Without discussing whether the intended approach is an effective security measure, you can implement your own HlsPlaylistParser and inject the information yourself, as if it were part of the original playlist. Also possible, you can implement your own HlsPlaylistTracker to achieve the same effect. The only difference is that it's a more complex interface to implement, but with more context to work with. The first suggestions should be enough. \r\n\r\n> other methods on how I could secure the files\r\n\r\nYou can use widevine.\r\n\r\nHope this helps!"
      }
    ]
  },
  {
    "number": 4580,
    "title": "  exoplayer autoplay not working using exoPlayer.setPlayWhenReady(true)",
    "created_at": "2018-07-26T09:45:52Z",
    "closed_at": "2018-07-26T15:25:47Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4580",
    "body": "Hi, I am developing an android app, and for playing videos, I am using Ex-player. But I was stuck into a problem that exoplayer doesn't start on its own. I have to click the play button then only it starts. Using the below given code : \r\n\r\n```\r\n\r\npublic class PlayerManager extends DefaultEventListener {\r\n\r\n  /**\r\n   * Listener for changes in the media queue playback position.\r\n   */\r\n  public interface QueuePositionListener {\r\n    /**\r\n     * Called when the currently played item of the media queue changes.\r\n     */\r\n    void onQueuePositionChanged(int previousIndex, int newIndex);\r\n\r\n  }\r\n  private static final String USER_AGENT = \"ExoPlayer\";\r\n  private static final DefaultBandwidthMeter BANDWIDTH_METER = new DefaultBandwidthMeter();\r\n  private static final DefaultHttpDataSourceFactory DATA_SOURCE_FACTORY =\r\n      new DefaultHttpDataSourceFactory(USER_AGENT, BANDWIDTH_METER);\r\n  private final PlayerView localPlayerView;\r\n  private final SimpleExoPlayer exoPlayer;\r\n  private final ArrayList<Uri> mediaQueue;\r\n  private final QueuePositionListener queuePositionListener;\r\n  private DynamicConcatenatingMediaSource dynamicConcatenatingMediaSource;\r\n  private boolean castMediaQueueCreationPending;\r\n  private int currentItemIndex;\r\n  private Player currentPlayer;\r\n  static boolean show = true;\r\n  ImageView exo_previous;\r\n  String mimetypes;\r\n  Uri contentUri;\r\n\r\n  /**\r\n   * @param queuePositionListener A {@link QueuePositionListener} for queue position changes.\r\n   * @param localPlayerView The {@link PlayerView} for local playback.\r\n   * @param context A {@link Context}.\r\n   * @param exo_previous\r\n   */\r\n  public static PlayerManager createPlayerManager(QueuePositionListener queuePositionListener,\r\n          PlayerView localPlayerView, Context context,ImageView exo_previous) {\r\n    PlayerManager playerManager =\r\n        new PlayerManager(\r\n            queuePositionListener, localPlayerView, context,exo_previous);\r\n\r\n    playerManager.init();\r\n\r\n    return playerManager;\r\n  }\r\n\r\n  private PlayerManager(\r\n          QueuePositionListener queuePositionListener,\r\n          final PlayerView localPlayerView,\r\n          final Context context, final ImageView exo_previous) {\r\n    this.queuePositionListener = queuePositionListener;\r\n    this.localPlayerView = localPlayerView;\r\n    this.exo_previous = exo_previous;\r\n    mediaQueue = new ArrayList<>();\r\n    currentItemIndex = C.INDEX_UNSET;\r\n\r\n    DefaultTrackSelector trackSelector = new DefaultTrackSelector(BANDWIDTH_METER);\r\n\r\n    RenderersFactory renderersFactory = new DefaultRenderersFactory(context, null);\r\n\r\n    exoPlayer = ExoPlayerFactory.newSimpleInstance(renderersFactory, trackSelector,new DefaultLoadControl());\r\n\r\n\r\n    exoPlayer.setPlayWhenReady(true);\r\n\r\n    localPlayerView.setPlayer(exoPlayer);\r\n\r\n    localPlayerView.getPlayer().setPlayWhenReady(true);\r\n\r\n    this.localPlayerView.setOnTouchListener(new View.OnTouchListener() {\r\n      @Override\r\n      public boolean onTouch(View view, MotionEvent motionEvent) {\r\n        if (motionEvent.getAction() == MotionEvent.ACTION_DOWN) {\r\n          if(show == false) {\r\n            localPlayerView.getPlayer().setPlayWhenReady(false);\r\n            exo_previous.setVisibility(View.VISIBLE);\r\n            show = true;\r\n          }else {\r\n            localPlayerView.getPlayer().setPlayWhenReady(true);\r\n            exo_previous.setVisibility(View.GONE);\r\n            show = false;\r\n          }\r\n          return true;\r\n        } else{\r\n          return false;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  public void addItem(Uri contentUri, String mimeTypes) {\r\n    this.contentUri = contentUri;\r\n    this.mimetypes = mimeTypes;\r\n    mediaQueue.add(contentUri);\r\n    if (currentPlayer == exoPlayer) {\r\n      dynamicConcatenatingMediaSource.addMediaSource(buildMediaSource(contentUri, mimeTypes));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Releases the manager and the players that it holds.\r\n   */\r\n  public void release() {\r\n    currentItemIndex = C.INDEX_UNSET;\r\n    mediaQueue.clear();\r\n    localPlayerView.setPlayer(null);\r\n    exoPlayer.release();\r\n  }\r\n\r\n  // Player.EventListener implementation.\r\n\r\n  @Override\r\n  public void onPlayerStateChanged(boolean playWhenReady, int playbackState) {\r\n    updateCurrentItemIndex();\r\n  }\r\n\r\n  @Override\r\n  public void onPositionDiscontinuity(@DiscontinuityReason int reason) {\r\n    updateCurrentItemIndex();\r\n  }\r\n\r\n  @Override\r\n  public void onTimelineChanged(\r\n          Timeline timeline, Object manifest, @TimelineChangeReason int reason) {\r\n    updateCurrentItemIndex();\r\n    if (timeline.isEmpty()) {\r\n      castMediaQueueCreationPending = true;\r\n    }\r\n  }\r\n\r\n  // Internal methods.\r\n\r\n  private void init() {\r\n    setCurrentPlayer(exoPlayer);\r\n  }\r\n\r\n  private void updateCurrentItemIndex() {\r\n    int playbackState = currentPlayer.getPlaybackState();\r\n    maybeSetCurrentItemAndNotify(\r\n        playbackState != Player.STATE_IDLE && playbackState != Player.STATE_ENDED\r\n        ? currentPlayer.getCurrentWindowIndex() : C.INDEX_UNSET);\r\n  }\r\n\r\n  private void setCurrentPlayer(Player currentPlayer) {\r\n\r\n    Log.e(\"hii\",\"hii\");\r\n    exoPlayer.setPlayWhenReady(true);\r\n    localPlayerView.setPlayer(exoPlayer);\r\n    localPlayerView.getPlayer().setPlayWhenReady(true);\r\n\r\n    // Player state management.\r\n    long playbackPositionMs = C.TIME_UNSET;\r\n    int windowIndex = C.INDEX_UNSET;\r\n\r\n    if (this.currentPlayer != null) {\r\n      int playbackState = this.currentPlayer.getPlaybackState();\r\n      if (playbackState != Player.STATE_ENDED) {\r\n        playbackPositionMs = this.currentPlayer.getCurrentPosition();\r\n        windowIndex = this.currentPlayer.getCurrentWindowIndex();\r\n        if (windowIndex != currentItemIndex) {\r\n          playbackPositionMs = C.TIME_UNSET;\r\n          windowIndex = currentItemIndex;\r\n        }\r\n      }\r\n      this.currentPlayer.stop(true);\r\n    } else {\r\n      // This is the initial setup. No need to save any state.\r\n    }\r\n\r\n    this.currentPlayer = currentPlayer;\r\n\r\n      if(localPlayerView.getPlayer().getPlayWhenReady()){\r\n        Log.e(\"hii\",String.valueOf(localPlayerView.getPlayer().getPlayWhenReady()));\r\n        exoPlayer.setPlayWhenReady(true);\r\n        localPlayerView.getPlayer().setPlayWhenReady(true);\r\n      }\r\n\r\n      dynamicConcatenatingMediaSource = new DynamicConcatenatingMediaSource();\r\n\r\n\r\n      for (int i = 0; i < mediaQueue.size(); i++) {\r\n        dynamicConcatenatingMediaSource.addMediaSource(buildMediaSource(contentUri,mimetypes));\r\n      }\r\n\r\n      Log.e(\"hii\",\"hii1\");\r\n\r\n      exoPlayer.prepare(dynamicConcatenatingMediaSource);\r\n\r\n    Log.e(\"hii\",\"hii2\");\r\n\r\n      localPlayerView.getPlayer().setPlayWhenReady(true);\r\n\r\n    Log.e(\"hii\",\"hii3\");\r\n\r\n      exoPlayer.setPlayWhenReady(true);\r\n\r\n    Log.e(\"hii\",\"hii4\");\r\n\r\n    // Playback transition.\r\n    if (windowIndex != C.INDEX_UNSET) {\r\n      setCurrentItem(windowIndex, playbackPositionMs, true);\r\n      Log.e(\"hii\",\"hii1\");\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Starts playback of the item at the given position.\r\n   *\r\n   * @param itemIndex The index of the item to play.\r\n   * @param positionMs The position at which playback should start.\r\n   * @param playWhenReady Whether the player should proceed when ready to do so.\r\n   */\r\n  private void setCurrentItem(int itemIndex, long positionMs, boolean playWhenReady) {\r\n    Log.e(\"hii\",\"hii1\");\r\n    maybeSetCurrentItemAndNotify(itemIndex);\r\n    if (castMediaQueueCreationPending) {\r\n      buildMediaQueueItem(contentUri,mimetypes);\r\n      castMediaQueueCreationPending = false;\r\n    } else {\r\n      currentPlayer.seekTo(itemIndex, positionMs);\r\n      currentPlayer.setPlayWhenReady(true);\r\n    }\r\n  }\r\n\r\n  private void maybeSetCurrentItemAndNotify(int currentItemIndex) {\r\n    if (this.currentItemIndex != currentItemIndex) {\r\n      int oldIndex = this.currentItemIndex;\r\n      this.currentItemIndex = currentItemIndex;\r\n      queuePositionListener.onQueuePositionChanged(oldIndex, currentItemIndex);\r\n    }\r\n  }\r\n\r\n  private static MediaSource buildMediaSource(Uri contentUri, String mimeTypes) {\r\n    Uri uri = Uri.parse(String.valueOf(contentUri));\r\n    switch (mimeTypes) {\r\n      case DemoUtil.MIME_TYPE_SS:\r\n        return new SsMediaSource.Factory(\r\n                new DefaultSsChunkSource.Factory(DATA_SOURCE_FACTORY), DATA_SOURCE_FACTORY)\r\n            .createMediaSource(uri);\r\n/*      case DemoUtil.MIME_TYPE_DASH:\r\n        return new DashMediaSource.Factory(\r\n                new DefaultDashChunkSource.Factory(DATA_SOURCE_FACTORY), DATA_SOURCE_FACTORY)\r\n            .createMediaSource(uri);*/\r\n      case DemoUtil.MIME_TYPE_HLS:\r\n        return new HlsMediaSource.Factory(DATA_SOURCE_FACTORY).createMediaSource(uri);\r\n      case DemoUtil.MIME_TYPE_VIDEO_MP4:\r\n        return new ExtractorMediaSource.Factory(DATA_SOURCE_FACTORY).createMediaSource(uri);\r\n      default: {\r\n        throw new IllegalStateException(\"Unsupported type: \" + mimeTypes);\r\n      }\r\n    }\r\n  }\r\n\r\n  private static MediaQueueItem buildMediaQueueItem(Uri contentUri, String mimetypes) {\r\n    MediaMetadata movieMetadata = new MediaMetadata(MediaMetadata.MEDIA_TYPE_MOVIE);\r\n//    movieMetadata.putString(MediaMetadata.KEY_TITLE, sample.name);\r\n    MediaInfo mediaInfo = new MediaInfo.Builder(String.valueOf(contentUri))\r\n        .setStreamType(MediaInfo.STREAM_TYPE_BUFFERED).setContentType(mimetypes)\r\n        .setMetadata(movieMetadata).build();\r\n    return new MediaQueueItem.Builder(mediaInfo).build();\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n```\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4580/comments",
    "author": "dolphylimitinf",
    "comments": [
      {
        "user": "AquilesCanta",
        "created_at": "2018-07-26T15:25:47Z",
        "body": "Hi @dolphylimitinf, debugging apps falls out of the scope of this issue tracker. You'd be better off asking in StackOverflow, or another general Q&A.\r\n\r\nAside (please don't expand your question below), something i'd check is the state of the Player when you add an item. If it's in ENDED state, then when you add an item you should also seek to make sure it goes back to READY/BUFFERING. \r\n\r\nIn other words, if the player is prepared with an empty ConcatenatingMediaSource, then it immediately transitions to ENDED. Adding anything will not play, because it's ended. In this case, you can just seek to window 0 (I suppose you want to start from the start of the queue). Good luck."
      }
    ]
  },
  {
    "number": 4579,
    "title": "QA: Any plan to add SAMPLE-AES support for HLS",
    "created_at": "2018-07-26T09:15:57Z",
    "closed_at": "2018-07-26T09:57:55Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4579",
    "body": "Thanks,\r\nWendong",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4579/comments",
    "author": "unext-wendong",
    "comments": [
      {
        "user": "AquilesCanta",
        "created_at": "2018-07-26T09:57:55Z",
        "body": "Unfortunately there are no plans to support it. The alternatives are full segment encryption and Widevine. Playready will be added soon.\r\n\r\nEDIT: Note that both Widevine and Playready require Content Decryption Module support."
      },
      {
        "user": "unext-wendong",
        "created_at": "2018-07-26T10:41:35Z",
        "body": "Thanks for the confirmation."
      }
    ]
  },
  {
    "number": 4578,
    "title": "Get the time we connect to a live stream",
    "created_at": "2018-07-26T07:31:13Z",
    "closed_at": "2018-07-26T15:30:47Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4578",
    "body": "How do I retrieve the time of the video that I connect to a live stream? \r\n\r\nLet's say I connect to a live stream on two different devices, both have connected to the live stream at different times, one connects 20 sec into a stream the other 40 seconds into the stream. I want to be able to show the different time on each device(actual time into the video). How do I achieve this?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4578/comments",
    "author": "rohangoqii",
    "comments": [
      {
        "user": "AquilesCanta",
        "created_at": "2018-07-26T15:30:47Z",
        "body": "What kind of stream are you playing? I think the only way to achieve this is to provide timing metadata in your stream. In HLS, this can be achieved with EXT-X-PROGRAM-DATE-TIME. In DASH, I think the equivalent is roughly availabilityStartTimeMs. \r\n\r\nIf the media does not signal that 20 or 40, I don't see a way for the player to know. Please comment below if this is not what you meant and I'll reopen."
      }
    ]
  },
  {
    "number": 4570,
    "title": "Subtitles Toggle",
    "created_at": "2018-07-25T03:49:31Z",
    "closed_at": "2018-07-25T10:00:47Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4570",
    "body": "I am using exoplayer 2.8.2. \r\n```\r\nif (object.getSubtitles().size() > 0) {\r\n            MediaSource[] mediaSources = new MediaSource[object.getSubtitles().size() + 1];\r\n            mediaSources[0] = videoMediaSource;\r\n            int i = 1;\r\n            for (String language : object.getSubtitles().keySet()) {\r\n                String subtitleUrl = object.getSubtitles().get(language).get(0).getSrc();\r\n                Format subtitleFormat = Format.createTextSampleFormat(null, MimeTypes.APPLICATION_SUBRIP, C.SELECTION_FLAG_DEFAULT, language);\r\n                mediaSources[i] = new SingleSampleMediaSource.Factory(new DefaultHttpDataSourceFactory(userAgent, BANDWIDTH_METER)).createMediaSource(Uri.parse(subtitleUrl), subtitleFormat, C.TIME_UNSET);\r\n                i++;\r\n            }\r\n            mMergedMediaSource = new MergingMediaSource(mediaSources);\r\n        }\r\n```\r\n\r\n\r\n```\r\nMappingTrackSelector.MappedTrackInfo mappedTrackInfo =mDefaultTrackSelector.getCurrentMappedTrackInfo();\r\nTrackGroupArray rendererTrackGroups = mappedTrackInfo == null ? null : mappedTrackInfo.getTrackGroups(SUBTITLE_TRACK_GROUP_INDEX);\r\nDefaultTrackSelector.SelectionOverride selectionOverride = new DefaultTrackSelector.SelectionOverride(SUBTITLE_TRACK_GROUP_INDEX, mCaptionsTrackIndex);\r\nmDefaultTrackSelector.setParameters(mDefaultTrackSelector.buildUponParameters().setSelectionOverride(SUBTITLE_TRACK_GROUP_INDEX, rendererTrackGroups, selectionOverride));\r\n```\r\n\r\nIn above code, SUBTITLE_TRACK_GROUP_INDEX is 2 which is track group number from trackselector for subtitles and mCaptionsTrackIndex is index within rendererTrackGroups which needs to be selected. The above code always shows english subtitles and not others in array.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4570/comments",
    "author": "vinayjoglekar",
    "comments": [
      {
        "user": "AquilesCanta",
        "created_at": "2018-07-25T10:00:47Z",
        "body": "Hi @vinayjoglekar, the issue tracker is not intended for general ExoPlayer Q&A, unfortunately. You'll have better luck in a general Q&A site like StackOverflow. Make sure you provide as much context (and examples) as possible in your questions in order to avoid luring people away with the required guesswork. \r\n\r\nLooks weird to me that you are creating a SelectionOverride with a constant track group, though. Remember that each subtitle will provide a different TrackGroup (this might explain the issue). Also strange that getTrackGroup gets passed a TRACK_GROUP_INDEX, when it should take a renderer index. Anyway, good luck!"
      }
    ]
  },
  {
    "number": 4566,
    "title": "ExoPlayer dash multistream support",
    "created_at": "2018-07-24T14:18:24Z",
    "closed_at": "2018-07-26T15:35:49Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4566",
    "body": "Does exoplayer supports multistreaming of few secured dash streams? \r\nFor example I have to implement screen with two or more video views with different streams.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4566/comments",
    "author": "deniotokiari",
    "comments": [
      {
        "user": "AquilesCanta",
        "created_at": "2018-07-26T15:35:49Z",
        "body": "I don't think ExoPlayer imposes any limitations in this sense. As far as I know, this depends on platform resource availability. The best way to know is to experiment around in, I think. You might encounter issues depending on the number of available decoders in the device."
      }
    ]
  },
  {
    "number": 4549,
    "title": "Support multiple tracks and at arbitrary insert points",
    "created_at": "2018-07-22T20:53:58Z",
    "closed_at": "2018-07-23T10:12:58Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4549",
    "body": "Hi. Just to confirm I dug through the code, issues, API and SO posts (caveat: my Java is weak) and I can't find if you support this feature.\r\n\r\nI wish to make a video editing tool where I can insert video and audio at any point in time, trim video and audio, and layer multiple audio tracks (see sketch). This has to happen in realtime so ffmpeg isn't an option. This is fairly straightforward to do in iOS via `AVMutableComposition` etc but appears not possible without low level work in Android. The files are to be read from the filesystem and I have control over their encoding ahead of time. I do not need to persist the final result to the filesystem.\r\n\r\nIf ExoPlayer can support this, I'd love to know. If not, consider this a feature request :)\r\n\r\nPotential workaround: I'm currently considering solutions involving concatenating 1second \"blank\" placeholder mp3 and mp4 files using `ConcatenatingMediaSource` to fill in the gaps. That doesn't solve the multitrack requirement though - especially as some video files will come with their own audio tracks - so any other thoughts here very much welcome!\r\n\r\nHere is a sketch to clarify. One video track from two videos with gap in middle, 2 audio tracks. \"audio3\" could, for instance, be the audio track from the video.\r\n\r\nThank you.\r\n\r\n```\r\n------------------------------------------------\r\n|                                              |\r\n|   [-- audio1.mp3 --]  [-- audio2.mp3 --]     |\r\n|                                              |\r\n| [------ audio3.mp3 --------------------]     |\r\n|                                              |\r\n|[----- video1.mp4 ----]   [-- video2.mp4 --]  |\r\n|                                              |\r\n------------------------------------------------\r\n```",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4549/comments",
    "author": "JofArnold",
    "comments": [
      {
        "user": "AquilesCanta",
        "created_at": "2018-07-23T10:12:58Z",
        "body": "Unfortunately, this is not something we support.\r\n\r\nIn terms of media composition, you should look at ClippingMediaSource, ConcatenatingMediaSource and MergingMediaSource. We don't support silence insertion. Our track architecture would not fit well in the described scenario. For example, for merging media sources, we enforce media period count matching. Finally, there are a few issues in this tracker about multi audio track synchronization. For example, #4261.\r\n\r\nI'd suggest you try to distill more fine-grained requests out of this. It's not perfectly clear what the feature is. I can see quite a few different lines of work. Admittedly, this escapes a bit the main aim of exoplayer, which is media streaming. Feel free to open new feature requests for more specific and well defined features."
      },
      {
        "user": "andrewlewis",
        "created_at": "2018-07-24T09:11:26Z",
        "body": "In addition to what @AquilesCanta said, here are some tips that might help setting this up. It's likely to end up being a lot of work, and we won't be able to provide much more detailed guidance at the moment I'm afraid.\r\n- To work around the limitations with merging media with start/end times that don't match up, you could set up a separate player for the audio streams.\r\n- Then you can synchronize the player positions by making the video-only player's renderer provide a media clock to its player that references the audio player's position (which will be used instead of a standalone realtime media clock).\r\n- It's possible to implement a custom media source that outputs silent raw audio if you need to insert that in the audio concatenation."
      },
      {
        "user": "JofArnold",
        "created_at": "2018-07-25T08:58:20Z",
        "body": "Thanks for the details. That makes sense. \r\n\r\nMy concern about running multiple concurrent media players was that I read there’s a limit to how many instances can run at the same time. Do you know if this is the case? I need to support back to 5.0 and I can imagine some devices of that era are quite memory limited, for instance.\r\n\r\nNote the players do not (and in fact should not) interact with the read of the OS with notifications and so forth. That may be a useful factor."
      },
      {
        "user": "andrewlewis",
        "created_at": "2018-07-25T09:34:56Z",
        "body": "> My concern about running multiple concurrent media players was that I read there’s a limit to how many instances can run at the same time. Do you know if this is the case? I need to support back to 5.0 and I can imagine some devices of that era are quite memory limited, for instance.\r\n\r\nYes. However, this is generally more of a problem when using multiple video decoders where hardware-accelerated codecs are used (see also #1286), whereas audio decoding will use software codecs. There is a limit on the total amount of audio track buffer size that can be allocated by all players, but I expect you won't encounter this with just a few players."
      }
    ]
  },
  {
    "number": 4547,
    "title": "getWindowIndex() sometime is delay",
    "created_at": "2018-07-22T15:50:48Z",
    "closed_at": "2018-07-23T09:44:13Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4547",
    "body": "//Version\r\n2.7.3\r\n\r\n//Description\r\nI'm using ClippingMediaSource and DynamicConcatenatingMediaSource to play multiple video clips, and i need to know the current index of window when onVideoSizeChanged callback, but i found sometime the index is not correct because onPositionDiscontinuity->DISCONTINUITY_REASON_PERIOD_TRANSITION is later than  onVideoSizeChanged.\r\nso i getWindowIndex() is an un correct index.\r\n\r\nMy question is how to get exact window index when onVideoSizeChanged?\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4547/comments",
    "author": "RuijiePan",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2018-07-23T08:28:45Z",
        "body": "What you describe is basically working as intended. The reason is that these two event (onVideoSizeChanged and onPositionDiscontinuity) belong to different listeners and our listeners are not synchronized to each other for various reasons.\r\n\r\nHowever, we recently added the `AnalyticsListener` class which combines all listeners we have in one place and gives additional information for each event (including which window they belong to). This new listener has been added in 2.8.0. The easiest way to use it is with `SimpleExoPlayer.addAnalyticsListener`. "
      },
      {
        "user": "RuijiePan",
        "created_at": "2018-07-23T09:43:51Z",
        "body": "It's work, thank you very much!"
      }
    ]
  },
  {
    "number": 4540,
    "title": "After an online mp4 cache is finished, how to export the cache file to a standard mp4 file.",
    "created_at": "2018-07-20T03:42:39Z",
    "closed_at": "2018-07-20T10:43:16Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4540",
    "body": "If the cache is complete what if I export a standard video file?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4540/comments",
    "author": "qeadsw",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2018-07-20T10:43:16Z",
        "body": "Our caching components are not designed for exporting video files, and we make no guarantee as to the format of the files on disk (e.g. we may write extra metadata into the files, and we may change the format over time). If you want this kind of functionality then you should implement your own code to download files."
      }
    ]
  },
  {
    "number": 4537,
    "title": "Exoplayer play with Using Retrofit",
    "created_at": "2018-07-19T13:02:33Z",
    "closed_at": "2018-07-22T19:53:16Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4537",
    "body": "Hi, \r\nI am facing the issue is the video streaming url in exoplayer 2.1.0 they play the video only the android version 7 and 8 but not play the video in the android lower version like 6,5,4.4..\r\nThe HLS Stream method i get the video properly in the nougat and oreo based device but not able to get the video but the duration of the video is display but the video is not playing.\r\nand my log cat is \r\n\r\nthe Logcat preview:\r\n\r\n\r\n```EventLogger: internalError [1.15, loadError]\r\n                                                                                      com.google.android.exoplayer2.upstream.HttpDataSource$InvalidResponseCodeException: Response code: 400\r\n                                                                                          at com.google.android.exoplayer2.upstream.DefaultHttpDataSource.open(DefaultHttpDataSource.java:212)\r\n                                                                                          at com.google.android.exoplayer2.upstream.DefaultDataSource.open(DefaultDataSource.java:123)\r\n                                                                                          at com.google.android.exoplayer2.source.hls.HlsMediaChunk.loadMedia(HlsMediaChunk.java:235)\r\n                                                                                          at com.google.android.exoplayer2.source.hls.HlsMediaChunk.load(HlsMediaChunk.java:187)\r\n                                                                                          at com.google.android.exoplayer2.upstream.Loader$LoadTask.run(Loader.java:295)\r\n                                                                                          at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:422)\r\n                                                                                          at java.util.concurrent.FutureTask.run(FutureTask.java:237)\r\n                                                                                          at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\r\n                                                                                          at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\r\n                                                                                          at java.lang.Thread.run(Thread.java:841)\r\n07-19 18:29:32.392 16661-16665/? E/mnl_linux: mtk_gps_sys_gps_mnl_callback: Get SV info success\r\n07-19 18:29:32.831 12166-12166/asianetmobiletvplus.asianetmobiletv.com E/EventLogger: internalError [1.68, loadError]\r\n                                                                                      com.google.android.exoplayer2.upstream.HttpDataSource$InvalidResponseCodeException: Response code: 400\r\n                                                                                          at com.google.android.exoplayer2.upstream.DefaultHttpDataSource.open(DefaultHttpDataSource.java:212)\r\n                                                                                          at com.google.android.exoplayer2.upstream.DefaultDataSource.open(DefaultDataSource.java:123)\r\n                                                                                          at com.google.android.exoplayer2.source.hls.HlsMediaChunk.loadMedia(HlsMediaChunk.java:235)\r\n                                                                                          at com.google.android.exoplayer2.source.hls.HlsMediaChunk.load(HlsMediaChunk.java:187)\r\n                                                                                          at com.google.android.exoplayer2.upstream.Loader$LoadTask.run(Loader.java:295)\r\n                                                                                          at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:422)\r\n                                                                                          at java.util.concurrent.FutureTask.run(FutureTask.java:237)\r\n                                                                                          at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\r\n                                                                                          at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\r\n                                                                                          at java.lang.Thread.run(Thread.java:841)\r\n07-19 18:29:33.392 16661-16665/? E/mnl_linux: mtk_gps_sys_gps_mnl_callback: Get SV info success\r\n07-19 18:29:34.384 12166-12166/asianetmobiletvplus.asianetmobiletv.com E/EventLogger: internalError [3.23, loadError]\r\n                                                                                      com.google.android.exoplayer2.upstream.HttpDataSource$InvalidResponseCodeException: Response code: 400\r\n                                                                                          at com.google.android.exoplayer2.upstream.DefaultHttpDataSource.open(DefaultHttpDataSource.java:212)\r\n                                                                                          at com.google.android.exoplayer2.upstream.DefaultDataSource.open(DefaultDataSource.java:123)\r\n                                                                                          at com.google.android.exoplayer2.source.hls.HlsMediaChunk.loadMedia(HlsMediaChunk.java:235)\r\n                                                                                          at com.google.android.exoplayer2.source.hls.HlsMediaChunk.load(HlsMediaChunk.java:187)\r\n                                                                                          at com.google.android.exoplayer2.upstream.Loader$LoadTask.run(Loader.java:295)\r\n                                                                                          at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:422)\r\n                                                                                          at java.util.concurrent.FutureTask.run(FutureTask.java:237)\r\n                                                                                          at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\r\n                                                                                          at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\r\n                                                                                          at java.lang.Thread.run(Thread.java:841)\r\n07-19 18:29:34.392 16661-16665/? E/mnl_linux: mtk_gps_sys_gps_mnl_callback: Get SV info success\r\n07-19 18:29:35.391 16661-16665/? E/mnl_linux: mtk_gps_sys_gps_mnl_callback: Get SV info success\r\n07-19 18:29:36.393 16661-16665/? E/mnl_linux: mtk_gps_sys_gps_mnl_callback: Get SV info success\r\n07-19 18:29:36.944 12166-16919/asianetmobiletvplus.asianetmobiletv.com E/ExoPlayerImplInternal: Source error.\r\n                                                                                                com.google.android.exoplayer2.upstream.HttpDataSource$InvalidResponseCodeException: Response code: 400\r\n                                                                                                    at com.google.android.exoplayer2.upstream.DefaultHttpDataSource.open(DefaultHttpDataSource.java:212)\r\n                                                                                                    at com.google.android.exoplayer2.upstream.DefaultDataSource.open(DefaultDataSource.java:123)\r\n                                                                                                    at com.google.android.exoplayer2.source.hls.HlsMediaChunk.loadMedia(HlsMediaChunk.java:235)\r\n                                                                                                    at com.google.android.exoplayer2.source.hls.HlsMediaChunk.load(HlsMediaChunk.java:187)\r\n                                                                                                    at com.google.android.exoplayer2.upstream.Loader$LoadTask.run(Loader.java:295)\r\n                                                                                                    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:422)\r\n                                                                                                    at java.util.concurrent.FutureTask.run(FutureTask.java:237)\r\n                                                                                                    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\r\n                                                                                                    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\r\n                                                                                                    at java.lang.Thread.run(Thread.java:841)\r\n07-19 18:29:36.947 12166-12166/asianetmobiletvplus.asianetmobiletv.com E/EventLogger: internalError [5.79, loadError]\r\n                                                                                      com.google.android.exoplayer2.upstream.HttpDataSource$InvalidResponseCodeException: Response code: 400\r\n                                                                                          at com.google.android.exoplayer2.upstream.DefaultHttpDataSource.open(DefaultHttpDataSource.java:212)\r\n                                                                                          at com.google.android.exoplayer2.upstream.DefaultDataSource.open(DefaultDataSource.java:123)\r\n                                                                                          at com.google.android.exoplayer2.source.hls.HlsMediaChunk.loadMedia(HlsMediaChunk.java:235)\r\n                                                                                          at com.google.android.exoplayer2.source.hls.HlsMediaChunk.load(HlsMediaChunk.java:187)\r\n                                                                                          at com.google.android.exoplayer2.upstream.Loader$LoadTask.run(Loader.java:295)\r\n                                                                                          at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:422)\r\n                                                                                          at java.util.concurrent.FutureTask.run(FutureTask.java:237)\r\n                                                                                          at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\r\n                                                                                          at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\r\n                                                                                          at java.lang.Thread.run(Thread.java:841)\r\n07-19 18:29:36.953 12166-12166/asianetmobiletvplus.asianetmobiletv.com E/EventLogger: playerFailed [5.80]\r\n                                                                                      com.google.android.exoplayer2.ExoPlaybackException\r\n                                                                                          at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:360)\r\n                                                                                          at android.os.Handler.dispatchMessage(Handler.java:106)\r\n                                                                                          at android.os.Looper.loop(Looper.java:193)\r\n                                                                                          at android.os.HandlerThread.run(HandlerThread.java:61)\r\n                                                                                          at com.google.android.exoplayer2.util.PriorityHandlerThread.run(PriorityHandlerThread.java:40)\r\n                                                                                       Caused by: com.google.android.exoplayer2.upstream.HttpDataSource$InvalidResponseCodeException: Response code: 400\r\n                                                                                          at com.google.android.exoplayer2.upstream.DefaultHttpDataSource.open(DefaultHttpDataSource.java:212)\r\n                                                                                          at com.google.android.exoplayer2.upstream.DefaultDataSource.open(DefaultDataSource.java:123)\r\n                                                                                          at com.google.android.exoplayer2.source.hls.HlsMediaChunk.loadMedia(HlsMediaChunk.java:235)\r\n                                                                                          at com.google.android.exoplayer2.source.hls.HlsMediaChunk.load(HlsMediaChunk.java:187)\r\n                                                                                          at com.google.android.exoplayer2.upstream.Loader$LoadTask.run(Loader.java:295)\r\n                                                                                          at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:422)\r\n                                                                                          at java.util.concurrent.FutureTask.run(FutureTask.java:237)\r\n                                                                                          at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\r\n                                                                                          at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\r\n                                                                                          at java.lang.Thread.run(Thread.java:841)\r\n07-19 18:29:37.394 16661-16665/? E/mnl_linux: mtk_gps_sys_gps_mnl_callback: Get SV info success\r\n07-19 18:29:38.395 16661-16665/? E/mnl_linux: mtk_gps_sys_gps_mnl_callback: Get SV info success\r\n```\r\n\r\n\r\nandroid device working:\r\nversion 8 - oreo\r\nversion 7 & 7.1 - nougat\r\n\r\nandroid device not working\r\nversion 6 - marshmallow\r\nversion 5 - lolipop\r\nversion 4.4 - kitkat",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4537/comments",
    "author": "mkarthick92",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2018-07-19T14:35:29Z",
        "body": "`InvalidResponseCodeException: Response code: 400` is a \"Bad Request\" response from the server. You need to figure out why your server is responding in that way. It doesn't look like an ExoPlayer issue."
      },
      {
        "user": "mkarthick92",
        "created_at": "2018-07-20T04:38:17Z",
        "body": "Hi ojw28,\r\nBut the video url play in vlc player and also they play in android version 7 & 8 devices"
      },
      {
        "user": "ojw28",
        "created_at": "2018-07-20T10:34:41Z",
        "body": "That doesn't necessarily mean it's an ExoPlayer issue. Most likely you see that samples in our demo app do not have this issue, which suggests the issue is specific to the server you're requesting content from. Perhaps it's responding with 400 based on the user agent or something, and ExoPlayer is setting a user agent that the server is failing to handle on those API levels.\r\n\r\nWe can take a quick look if you provide us with a working test stream. Without that there's nothing we can do to help. If you control the server you should also just look in your server logs to find out why the server is responding in the way that it is."
      },
      {
        "user": "ojw28",
        "created_at": "2018-07-22T19:53:16Z",
        "body": "Closing because we don't have a working test stream. Please respond here if you're able to provide one."
      }
    ]
  },
  {
    "number": 4536,
    "title": "Ask some questions about caching",
    "created_at": "2018-07-19T11:46:31Z",
    "closed_at": "2018-07-24T09:56:01Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4536",
    "body": "Can the file name and size be changed?    (0.0.1532000135393.v3.exo  2MB)\r\nI set a password but it didn't work, and I could still play it on another player.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4536/comments",
    "author": "qeadsw",
    "comments": [
      {
        "user": "erdemguven",
        "created_at": "2018-07-19T12:43:01Z",
        "body": "File names of cache files can not be changed. You can set the maximum cache file size while you create CacheDataSource.\r\n\r\nWe can look at the password problem, if you create a separate issue and providing all off the information asked on the issue template."
      }
    ]
  },
  {
    "number": 4531,
    "title": "EOFException, when I play mp4 file",
    "created_at": "2018-07-18T12:26:57Z",
    "closed_at": "2018-07-18T12:28:45Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4531",
    "body": "I am now creating a DataSource that can be decoded every 4096 bytes of video. So I implemented the following logic. The decryption logic has not yet been inserted. It was to see if the original video was driven from the following sources. However, the original video does not go back after coding as below.\r\n\r\n> \r\n> public class CustomDataSource implements DataSource {\r\n> \r\n>     private long fileLength;\r\n>     private ByteBuffer bb;\r\n>     ScatteringByteChannel sbc ;\r\n>     private long read;\r\n>     private ByteBuffer encBuffer;\r\n>     private Uri uri;\r\n>     private EnDecryptVideo enDecryptVideo;\r\n>     private DataSpec dataSpec;\r\n> \r\n>     public CustomDataSource(DataSpec dataSpec, EnDecryptVideo enDecryptVideo) {\r\n>         this.enDecryptVideo = enDecryptVideo;\r\n>         this.dataSpec = dataSpec;\r\n>     }\r\n>     @Override\r\n>     public long open(DataSpec dataSpec) throws IOException {\r\n>         FileInputStream ios = new FileInputStream(dataSpec.uri.getPath());\r\n>         fileLength = dataSpec.length;\r\n>         bb = ByteBuffer.allocate(4096);\r\n>         sbc = ios.getChannel();\r\n>         read = 0;\r\n>         uri = dataSpec.uri;\r\n> \r\n>         return fileLength;\r\n>     }\r\n> \r\n>     public int read() throws IOException {\r\n>         if(read == 0) {\r\n>             read = sbc.read(bb);\r\n>             encBuffer = ByteBuffer.wrap(bb.array());\r\n>         }\r\n> \r\n>         if(read > 0) {\r\n>             read-=1;\r\n>             return encBuffer.get();\r\n>         } else {\r\n>             return -1;\r\n>         }\r\n>     }\r\n> \r\n>     @Override\r\n>     public int read(byte[] b, int off, int len) throws IOException {\r\n>         if (b == null) {\r\n>             throw new NullPointerException();\r\n>         } else if (off < 0 || len < 0 || len > b.length - off) {\r\n>             throw new IndexOutOfBoundsException();\r\n>         } else if (len == 0) {\r\n>             return 0;\r\n>         }\r\n> \r\n>         int c = read();\r\n> \r\n>         if (c == -1) {\r\n>             return -1;\r\n>         }\r\n> \r\n>         b[off] = (byte) c;\r\n> \r\n>         int i = 1;\r\n> \r\n>         try {\r\n>             for (; i < len ; i++) {\r\n>                 c = read();\r\n>                 if (c == -1) {\r\n>                     break;\r\n>                 }\r\n>                 b[off + i] = (byte) c;\r\n>             }\r\n>         } catch (IOException ee) {\r\n>         }\r\n>         return i;\r\n>     }\r\n> \r\n>     @Override\r\n>     public Uri getUri() {\r\n>         return uri;\r\n>     }\r\n> \r\n>     @Override\r\n>     public void close() throws IOException {\r\n>         if(sbc != null) {\r\n>             sbc.close();\r\n>         }\r\n>         sbc = null;\r\n>     }\r\n> }\r\n> \r\n\r\nI need to adjust the buffer size because I have to decode every 4096 bytes. yes, I'm using my own logic. Errors will result in an EOFException dropping.\r\n\r\n> \r\n> 07-18 21:16:58.304 31271-31430/com.example.junburg.exoplayerpractice2 E/ExoPlayerImplInternal: Source error.\r\n>     java.io.EOFException\r\n>         at com.google.android.exoplayer2.extractor.DefaultExtractorInput.readFromDataSource(DefaultExtractorInput.java:265)\r\n>         at com.google.android.exoplayer2.extractor.DefaultExtractorInput.skipFully(DefaultExtractorInput.java:102)\r\n>         at com.google.android.exoplayer2.extractor.DefaultExtractorInput.skipFully(DefaultExtractorInput.java:110)\r\n>         at com.google.android.exoplayer2.extractor.mp4.Mp4Extractor.readAtomPayload(Mp4Extractor.java:349)\r\n>         at com.google.android.exoplayer2.extractor.mp4.Mp4Extractor.read(Mp4Extractor.java:186)\r\n>         at com.google.android.exoplayer2.source.ExtractorMediaPeriod$ExtractingLoadable.load(ExtractorMediaPeriod.java:860)\r\n>         at com.google.android.exoplayer2.upstream.Loader$LoadTask.run(Loader.java:317)\r\n>         at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1133)\r\n>         at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:607)\r\n>         at java.lang.Thread.run(Thread.java:762)\r\n\r\nSo, what is the problem, How can this logic work?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4531/comments",
    "author": "junburg",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2018-07-18T12:28:45Z",
        "body": "Debugging your own custom components is not within the scope of this issue tracker, sorry."
      }
    ]
  },
  {
    "number": 4529,
    "title": "I tried to monitor the online video rate, but there was no trigger.",
    "created_at": "2018-07-18T09:13:46Z",
    "closed_at": "2018-07-18T12:09:05Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4529",
    "body": "I'm using version 2.8.2. Maybe I'm too stupid. Could you please help me modify it and send it to me completely? Thank you very much.\r\n------------------------------------------------------------------------------------------------------------------------\r\n    \tDefaultBandwidthMeter.Builder builder = new DefaultBandwidthMeter.Builder();\r\n        builder.setEventListener(new Handler(), new BandwidthMeter.EventListener() {\r\n            @Override\r\n            public void onBandwidthSample(int elapsedMs, long bytes, long bitrate) {\r\n                Log.i(\"TAG\", \"onBandwidthSample: \" + elapsedMs + \"_\" + bytes + \"_\" + bitrate);\r\n            }\r\n        });\r\n        DefaultBandwidthMeter defaultBandwidthMeter = builder.build();\r\n        AdaptiveTrackSelection.Factory factory = new AdaptiveTrackSelection.Factory(defaultBandwidthMeter);\r\n\r\n        DataSource.Factory defaultDataSourceFactory = new DefaultDataSourceFactory(context, name, defaultBandwidthMeter);\r\n        ExtractorMediaSource.Factory emsf = new ExtractorMediaSource.Factory(defaultDataSourceFactory);\r\n        TrackSelector trackSelector = new DefaultTrackSelector(factory);\r\n        SimpleExoPlayer simpleExoPlayer = ExoPlayerFactory.newSimpleInstance(context, trackSelector);\r\n        simpleExoPlayer.setVideoSurfaceView(surfaceView);\r\n        Uri U = Uri.parse(urlmp4);\r\n        ExtractorMediaSource EMS = emsf.createMediaSource(U);\r\n        simpleExoPlayer.prepare(EMS);\r\n        simpleExoPlayer.setPlayWhenReady(true);",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4529/comments",
    "author": "qeadsw",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2018-07-18T09:27:29Z",
        "body": "The code looks fine, but you may get very infrequent bit-rate updates (possibly only at the end of playback, depending on the type of source).\r\n\r\nThe bandwidth meter is really designed for adaptive playback cases (DASH, SmoothStreaming, HLS), where bit-rate measurements can actually be used for something useful in the player (i.e. adapting to a different quality stream). When doing a DASH/SS/HLS playback you should see frequent bandwidth updates."
      },
      {
        "user": "qeadsw",
        "created_at": "2018-07-18T09:32:36Z",
        "body": "@ojw28 \r\n\r\nI want to get the video real-time network speed is there any relevant interface or method?"
      },
      {
        "user": "ojw28",
        "created_at": "2018-07-18T09:38:14Z",
        "body": "This isn't something we really support for non-adaptive playbacks. It's unclear what you'd actually do with that information."
      },
      {
        "user": "qeadsw",
        "created_at": "2018-07-18T09:48:08Z",
        "body": "@ojw28 \r\n\r\nI want to know the real-time data flow when playing,\r\nIs there a corresponding method?\r\n\r\nIn other words, I want to know the network resources of video in real time, and only for video."
      },
      {
        "user": "ojw28",
        "created_at": "2018-07-18T09:54:03Z",
        "body": "This question is already answered by my response above."
      }
    ]
  },
  {
    "number": 4526,
    "title": "How to reduce increasing latency for RTMP live stream",
    "created_at": "2018-07-17T15:16:21Z",
    "closed_at": "2018-07-27T08:44:55Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4526",
    "body": "I'm having issues with increasing latency over time when playing RTMP stream.\r\n\r\nThe problem occurs only when the stream needs to be buffered during playback. Every time this happens the latency increases. \r\n\r\nI'm aware this is not an issue with ExoPlayer itself, but maybe you could help me how to handle that? \r\n\r\nI know that LoadControl is responsible for buffer strategy but in overall I would like to get rid of this buffer. Not like totally but whenever we need to buffer we should skip all frames and start buffering the latest frames so that the latency will not increase.\r\n\r\nI could listen for `Player.STATE_BUFFERING` state and when this occurs call `player.seekToDefaultPosition()` but I'm not sure if this is the right approach.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4526/comments",
    "author": "AdamGrzybkowski",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2018-07-18T09:31:06Z",
        "body": "If the approach you mention works, then I'd probably suggest doing that. ExoPlayer doesn't skip forward to the live edge automatically."
      },
      {
        "user": "AdamGrzybkowski",
        "created_at": "2018-07-27T06:10:58Z",
        "body": "@ojw28 looks like this solution works fine, thanks :) You can close the issue"
      }
    ]
  },
  {
    "number": 4515,
    "title": "Bandwidth Listener",
    "created_at": "2018-07-15T17:46:33Z",
    "closed_at": "2018-07-16T07:58:18Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4515",
    "body": "@ojw28 \r\nQuestion: \r\nI'm interested in tracking the bitrate periodically when I play my dash source in exo player.\r\nWhat I'm currently doing to achieve this is, by creating a bandwidth listener class that implements BandwidthMeter.Eventlistener where I override the method onbandwidthsample method. \r\nThen I create a bandwidthmeter object for the player with the bandwidthListener.\r\n\r\nThe problem that I'm facing is, onbandwidthsample is never being called when the dash source is being played. Is this an issue? or am I doing something wrong here?\r\n\r\nCheck below for my code:\r\n\r\n```\r\nprivate class BandwidthListener implements BandwidthMeter.EventListener{\r\n        @Override\r\n        public void onBandwidthSample(int elapsedMs, long bytes, long bitrate){\r\n            Log.d(\"inside bandwidth:\", String.valueOf(bitrate));\r\n        }\r\n    }\r\n\r\nHandler mainHandler = new Handler();\r\nBandwidthListener bandwidthListener = new BandwidthListener();\r\nTrackSelection.Factory adaptiveTrackSelectionFactory =\r\n                    new AdaptiveTrackSelection.Factory(new DefaultBandwidthMeter(mainHandler, bandwidthListener));\r\nplayer = ExoPlayerFactory.newSimpleInstance(new DefaultRenderersFactory(this),\r\n                    new DefaultTrackSelector(adaptiveTrackSelectionFactory), new DefaultLoadControl());\r\n```\r\n \r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4515/comments",
    "author": "shri-hari93",
    "comments": [
      {
        "user": "sravan1213",
        "created_at": "2018-07-16T04:43:34Z",
        "body": "@shri-hari93 Are you passing same BandwidthMeter in you dataSourceFactory ??\r\n\r\nexample -\r\n `dataSourceFactory = new OkHttpDataSourceFactory(builder.build(), Util.getUserAgent(context,\"\"), bandwidthMeter);`\r\n\r\n\r\n`adaptiveTrackSelection = new AdaptiveTrackSelection.Factory(bandwidthMeter)`,"
      },
      {
        "user": "ojw28",
        "created_at": "2018-07-16T07:58:18Z",
        "body": "@sravan1213 is probably correct (you're probably not passing the same `BandwidthMeter` instance)."
      }
    ]
  },
  {
    "number": 4507,
    "title": "Decrypting HLS Video Encryption Key!",
    "created_at": "2018-07-12T19:37:48Z",
    "closed_at": "2018-07-13T16:35:38Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4507",
    "body": "I have passed a m3u8 playlist url to Exoplayer, The url will return the manifest file after proper authentication. Then the Exoplayer requests for Decryption Key, The decryption key will be provided again after proper user authentication, Its all fine, But my problem is the video decryption key which receives can be seen with any network analysis tool like fiddler. So i thought about Encrypting the video Decryption key and send it to app from server. So the HTTP response for video Decryption key is an Encrypted response! how can i decrypt this response and pass it to Exoplayer. I was thinking about giving a specific header tag for that HTTP response so that we can decrypt just that response and bypass all the responses. How can i achieve this! Or is there a better solution out there other than expensive DRMs.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4507/comments",
    "author": "blessonabraham",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2018-07-12T20:39:17Z",
        "body": "Why don't you just use https?"
      },
      {
        "user": "blessonabraham",
        "created_at": "2018-07-13T03:26:55Z",
        "body": "@ojw28 If my authorised user is a hacker, he can analyse his traffic even if its HTTPS. So by Encrypting the video decryption key, i can slow him down!\r\nPlease Help!"
      },
      {
        "user": "ojw28",
        "created_at": "2018-07-13T16:35:38Z",
        "body": "If you're really concerned about authorized users extracting the content then you need to use proper DRM with underlying platform support (on Android, you'd probably need to use Widevine).\r\n\r\nI don't think there's much point in preventing the specific attack you describe, since there are other attacks such a user could do instead, some of which are probably easier. For example they could make a small modification to Android to capture the decrypted but still compressed media being fed into the audio and video decoders, flash a device with the modified build, and extract the content that way.\r\n\r\nIt's worth thinking about how realistic the attack you describe (and the one I describe, and others) really are. It seems pretty unlikely to me that someone would go to such lengths. If you disagree, as above, I think your only real option is to use Widevine."
      }
    ]
  },
  {
    "number": 4498,
    "title": "How change hls stream source on the fly?",
    "created_at": "2018-07-11T07:15:45Z",
    "closed_at": "2018-07-13T17:10:35Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4498",
    "body": "Hello.\r\nMy application use ExoPlayer for hls video playback. Sometimes, my stream source works bad (can throw http error or can have long response time), as result playback can stuck for a short time.\r\n\r\nIn order to overcome this problem my backend provides several instances of the same stream hosted on the different servers. The structure of those instances (playlists, chunk lists, chunks) are absolutely equal.\r\n\r\nI’m aiming In case of errors to change those streams on the flight (e.g. take one chunk from server 1, the next one from server 2 and so on), without recreation of the ExoPlayer object. So, my questions are:\r\n\r\n1. Does ExoPlayer provides desired functionality (or at least part of it) out of the box?\r\n2. If not, which way can be better:\r\n- implement custom hls data source?\r\n- or better starts from ConcatenatingMediaSource?\r\n- something else?\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4498/comments",
    "author": "ghd3",
    "comments": [
      {
        "user": "AquilesCanta",
        "created_at": "2018-07-13T17:10:35Z",
        "body": "> Does ExoPlayer provides desired functionality (or at least part of it) out of the box?\r\n\r\nIt kind of does if you provide all your alternative variants in the master playlist and the server returns 404/410 for any of them. ExoPlayer will blacklist them and switch to a different one. Latency increases will probably be observed as decreases in the bandwidth. More info on network errors below.\r\n\r\n> or better starts from ConcatenatingMediaSource\r\n\r\nIs unrelated as far as I can see.\r\n\r\n> implement custom hls data source\r\n\r\nThis could help, but depending on how the load balancing works, could get messy. Have a look at HlsDataSourceFactory and DataSource to see what you can potentially do with them. If you have more specific questions do ask.\r\n\r\n> something else\r\n\r\nHave a look at providing all your available media playlist URLs in the master playlist and implement your own TrackSelection.Factory so that you pick a different media playlist when you notice an increase in latency, also potentially blacklisting specific network errors (this is being tracked by #2981).\r\n\r\nHope this helps. Let me know if you have specific questions."
      }
    ]
  },
  {
    "number": 4495,
    "title": "RandomTrackSelection",
    "created_at": "2018-07-10T13:37:45Z",
    "closed_at": "2018-07-10T13:38:40Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4495",
    "body": "\r\n### Issue description\r\nJust a small question. Is there any need in RandomTrackSelection? I mean what is the use-case you thought about when create this object?\r\n\r\n### Version of ExoPlayer being used\r\nexoplayer 2.8.3\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4495/comments",
    "author": "AntonAFA",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2018-07-10T13:38:40Z",
        "body": "It's for testing purposes only."
      }
    ]
  },
  {
    "number": 4494,
    "title": "How to show Multiple Notifications Download Progress for Multiple Downloads ?",
    "created_at": "2018-07-10T13:33:06Z",
    "closed_at": "2018-07-10T13:45:28Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4494",
    "body": "i am using ExoPlayer demo Download. but when i start multiple download tasks they shows the progress of download in one download notification. So how i can show multiple notification progress for multiple downloads in demo app ?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4494/comments",
    "author": "ZohaibGhafoor",
    "comments": [
      {
        "user": "erdemguven",
        "created_at": "2018-07-10T13:45:28Z",
        "body": "From DemoDownloadService.getForegroundNotification() you can return whatever notification you want. This can be a notification for only one of the downloads too. You need to create other notifications manually for the other downloads."
      }
    ]
  },
  {
    "number": 4490,
    "title": "IllegalStateException: Assertions.checkState When using same instance of SimpleCache",
    "created_at": "2018-07-10T07:59:00Z",
    "closed_at": "2018-07-10T09:06:39Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4490",
    "body": "Hi,\r\nI am getting the exception\r\n```\r\njava.lang.IllegalStateException\r\nat com.google.android.exoplayer2.util.Assertions.checkState(Assertions.java:81)\r\nat com.google.android.exoplayer2.upstream.cache.SimpleCache.getContentMetadata(SimpleCache.java:348)\r\nat com.google.android.exoplayer2.upstream.cache.SimpleCache.getContentLength(SimpleCache.java:335)\r\nat com.google.android.exoplayer2.upstream.cache.CacheUtil.getCached(CacheUtil.java:88)\r\n```\r\n when I'm trying to use the singleton instance of SimpleCache.\r\n```\r\ncompanion object DownloadCache {\r\n        private var downloadCache: Cache? = null\r\n        private var downloadDirectory: File? = null\r\n\r\n        @Synchronized\r\n        internal fun getDownloadCache(context: Context): Cache {\r\n            if (downloadCache == null) {\r\n                val downloadContentDirectory = File(getDownloadDirectory(context), \"cache\")\r\n                downloadCache = SimpleCache(downloadContentDirectory, NoOpCacheEvictor())\r\n            }\r\n            return downloadCache!!\r\n        }\r\n\r\n        private fun getDownloadDirectory(context: Context): File {\r\n            if (downloadDirectory == null) {\r\n                downloadDirectory = File(LogTrackUtil().getDir(context))\r\n                if (downloadDirectory == null) {\r\n                    downloadDirectory = context.filesDir\r\n                }\r\n            }\r\n            return downloadDirectory!!\r\n        }\r\n    }\r\n```\r\n\r\nI am checking the cached data for a particular URL.\r\nThe below code works perfectly for the first time but following calls to this code throws the exception.\r\n```\r\ndownloadCache = VideoPlayerUtil.getDownloadCache(mContext!!) as SimpleCache\r\nval uri = Uri.parse(mExercise?.fileUrl)\r\nval counters = CacheUtil.CachingCounters()\r\nCacheUtil.getCached(DataSpec(uri), downloadCache, counters)\r\n```\r\n\r\nWhat am I doing wrong?? Please help.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4490/comments",
    "author": "joecizac",
    "comments": [
      {
        "user": "erdemguven",
        "created_at": "2018-07-10T09:06:39Z",
        "body": "Probably, you're releasing your singleton instance of SimpleCache (using SimpleCache.release() method) at some point and then try to reuse it. That's why it's throwing that exception.\r\n\r\nAs you use a singleton, I think you can just remove the call to release(). Otherwise you need to recreate another SimpleCache instance after release() call."
      },
      {
        "user": "joecizac",
        "created_at": "2018-07-10T09:09:20Z",
        "body": "Oh such a silly mistake.\r\nThank you so much"
      }
    ]
  },
  {
    "number": 4486,
    "title": "Make errors more human readable for debugging purposes",
    "created_at": "2018-07-09T06:24:36Z",
    "closed_at": "2018-07-12T17:21:15Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4486",
    "body": "I have an application that works just fine and plays videos. I copy/pasted ExoPlayer to a new app, of course with different design, different layout resources, different logic, etc., and all of a sudden I get a cryptic message and it fails playing the video.\r\n\r\nThe same URL would be played nicely on the old app. So whatever the error is, it's related to the new app. But error messages are so cryptic and jibberish that it's almost impossible for me to find out the problem. I'm doing trial and error for 2 days now, changing everything from nesting in different layouts, up to changing configuration of ExoPlayer and no result. \r\n\r\nCan you please help developers by making errors more readable and more helpful by providing clear text on what's wrong and what we should do to make it work?\r\n\r\nHere's my logcat, and red lines (errors I guess) are specified at the end of line:\r\n\r\n```\r\nI/ExoPlayerImpl: Init dc6a5c8 [ExoPlayerLib/2.8.2] [generic_x86, Android SDK built for x86, Google, 27]\r\nD/SoftwareRenderer: setting dataspace on output surface to #104\r\nD/AudioTrack: Client defaulted notificationFrames to 6000 for frameCount 12000\r\nD/EGL_emulation: eglCreateContext: 0xb1065f40: maj 2 min 0 rcv 2\r\nD/EGL_emulation: eglMakeCurrent: 0xb1065f40: ver 2 0 (tinfo 0x945ffcd0)\r\nE/EGL_emulation: eglQueryContext 32c0  EGL_BAD_ATTRIBUTE // red line here\r\nE/EGL_emulation: tid 31097: eglQueryContext(1777): error 0x3004 (EGL_BAD_ATTRIBUTE) // red line here\r\nD/SurfaceUtils: connecting to surface 0x94306008, reason connectToSurface\r\nI/MediaCodec: [OMX.google.h264.decoder] setting surface generation to 31719426\r\nD/SurfaceUtils: disconnecting from surface 0x94306008, reason connectToSurface(reconnect)\r\nD/SurfaceUtils: connecting to surface 0x94306008, reason connectToSurface(reconnect)\r\nD/SurfaceUtils: disconnecting from surface 0x96e60008, reason disconnectFromSurface\r\nI/zygote: Do partial code cache collection, code=499KB, data=277KB\r\nI/zygote: After code cache collection, code=499KB, data=277KB\r\nI/zygote: Increasing code cache capacity to 2MB\r\nD/EGL_emulation: eglMakeCurrent: 0xa9405ea0: ver 2 0 (tinfo 0xa9403650)\r\nI/chatty: uid=10089(com.hamrahfarda.amoozeshyar) RenderThread identical 1 line\r\nD/EGL_emulation: eglMakeCurrent: 0xa9405ea0: ver 2 0 (tinfo 0xa9403650)\r\nI/OMXClient: Treble IOmx obtained\r\nD/SurfaceUtils: connecting to surface 0x96e6d008, reason connectToSurface\r\nI/MediaCodec: [OMX.google.h264.decoder] setting surface generation to 31719427\r\nD/SurfaceUtils: disconnecting from surface 0x96e6d008, reason connectToSurface(reconnect)\r\nD/SurfaceUtils: connecting to surface 0x96e6d008, reason connectToSurface(reconnect)\r\nE/ACodec: [OMX.google.h264.decoder] setPortMode on output to DynamicANWBuffer failed w/ err -1010 // red line here\r\nI/ACodec: codec does not support config priority (err -1010)\r\nI/OMXClient: Treble IOmx obtained\r\nI/ACodec: codec does not support config priority (err -2147483648)\r\nD/EGL_emulation: eglMakeCurrent: 0xa9405ea0: ver 2 0 (tinfo 0xa9403650)\r\nD/AudioTrack: Client defaulted notificationFrames to 6000 for frameCount 12000\r\nD/MediaCodec: [OMX.google.h264.decoder] setting dataspace on output surface to #104\r\nD/SoftwareRenderer: setting dataspace on output surface to #104\r\nD/EGL_emulation: eglMakeCurrent: 0xa9405ea0: ver 2 0 (tinfo 0xa9403650)\r\nI/chatty: uid=10089(com.hamrahfarda.amoozeshyar) RenderThread identical 4 lines\r\nD/EGL_emulation: eglMakeCurrent: 0xa9405ea0: ver 2 0 (tinfo 0xa9403650)\r\nD/EGL_emulation: eglMakeCurrent: 0xa9405ea0: ver 2 0 (tinfo 0xa9403650)\r\nI/chatty: uid=10089(com.hamrahfarda.amoozeshyar) RenderThread identical 23 lines\r\nD/EGL_emulation: eglMakeCurrent: 0xa9405ea0: ver 2 0 (tinfo 0xa9403650)\r\nD/AudioTrack: stop() called with 254976 frames delivered\r\nD/EGL_emulation: eglMakeCurrent: 0xa9405ea0: ver 2 0 (tinfo 0xa9403650)\r\nD/AudioTrack: stop() called with 254976 frames delivered\r\nD/EGL_emulation: eglMakeCurrent: 0xa9405ea0: ver 2 0 (tinfo 0xa9403650)\r\nD/EGL_emulation: eglMakeCurrent: 0xa9405ea0: ver 2 0 (tinfo 0xa9403650)\r\n```\r\nI read your template, and I tried to follow your guidelines, but no success. Can you help me figure out what the problem might be?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4486/comments",
    "author": "Nefcanto",
    "comments": [
      {
        "user": "botaydotcom",
        "created_at": "2018-07-09T08:44:08Z",
        "body": "Hi @nefcanto,\r\nIt seems to me you are trying the app on an emulator? Did you try the old app on the same emulator as well? If possible, can you try to run this on a real device to see if you encounter the same problem?\r\n\r\nIn any case, in the brief log section you provided, there was no error log from ExoPlayer, so I don't think we can change anything from our error logs here. Both red lines you highlight come from the underlying platform, and we have no authority over these logs unfortunately.\r\n\r\nIf you would like to get help in this case, please provide the required info from the bug template, including: the full bug report captured from the device, the device(s) and version(s) of Android used, and the link to the used test content. Thank you very much.\r\n "
      },
      {
        "user": "Nefcanto",
        "created_at": "2018-07-09T09:08:29Z",
        "body": "Yeah, I'm trying to run it on emulator. But the other app also works on emulator and it works fine. I thought those logs are related to your library. Thank you for your feedback and clarification. But however, it would be very helpful if you _wrap the underlying problems and provide more meaningful messages_. That's possible. That's what we do for example for database errors. We wrap it, we get the exceptions it throws, and we provide better explanation for most common exceptions.\r\n\r\nHowever, regarding this issue, let me try it first on a real device, and then I'll send the required info. I also appreciate your response."
      },
      {
        "user": "ojw28",
        "created_at": "2018-07-09T11:29:28Z",
        "body": "> But however, it would be very helpful if you wrap the underlying problems and provide more meaningful messages. That's possible.\r\n\r\nNot necessarily. It's only possible if the underlying platform provides enough information in whatever error it throws to us, such that we can map it onto something more meaningful. If the underlying platform just throws `IllegalStateException` with no explanation, then there's not much we can really do. It's unclear what error is thrown to us here, or what error we end up propagating to you (i.e. the application), because neither is shown in the log snippet."
      },
      {
        "user": "Nefcanto",
        "created_at": "2018-07-10T08:06:39Z",
        "body": "That's why I hate android and Google. Develop applications with Microsoft platform, and you understand what I mean. Errors are truly descriptive and guide developers towards solving them. Such a stupid platform Google has created. OK guys, thank you so much for clarification."
      }
    ]
  },
  {
    "number": 4481,
    "title": "Inputs in configuring mediacodec from exoplayer application",
    "created_at": "2018-07-08T03:15:48Z",
    "closed_at": "2018-07-09T10:14:37Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4481",
    "body": "I need to configure the video mediacodec using configure() API with a MediaFormat for video, from an exoplayer application. This is to expose a codec control to the user, so that the user can enable/disable a feature that our codec component provides. \r\n\r\nI want to use the exoplayer demo app and build upon it. Not seeing a configure API in the default APIs of MediaCodecVideoTrackRenderer.java which requires only the format to be input. configureCodec() API expects the codec instance as well, which is not available to the application. \r\n\r\nDoes this mean that I can extend MediaCodecVideoTrackRenderer and add this API, so that the extended class can call codec.configure() on the video codec instance created internally?\r\n\r\nOr can I extend and add an API to return the codec instance to the application?\r\n\r\nPlease let me know if this thought process is correct, or if any other suggestions?\r\nKindly excuse any simple misses, I am not well-versed at all in Android application development.\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4481/comments",
    "author": "resmi",
    "comments": [
      {
        "user": "botaydotcom",
        "created_at": "2018-07-09T10:14:37Z",
        "body": "Hi @resmi,\r\nSince you are using `MediaCodecVideoTrackRenderer`, are you using ExoPlayer V1? I think for V1, we are not adding anymore feature, so extending the class and adding this functionality yourself seems to be the correct choice, especially given `MediaCodecVideoTrackRenderer.configureCodec()` is designed as `protected` so that extended classes can add more functionalities as they want.\r\n\r\nIf you are using (or migrating to) ExoPlayver V2 (soon), the corresponding class will be `MediaCodecVideoRenderer`. I think for this specific case, it's also similar, and you should add this feature yourself. However, for V2, you can always file new request on the issue tracker to see if your specific feature is something that should be used by many developers, in which case we will probably add support directly in the library."
      }
    ]
  },
  {
    "number": 4478,
    "title": "How to improve network speed(Wifi) when playback?",
    "created_at": "2018-07-06T07:39:00Z",
    "closed_at": "2018-07-11T04:38:51Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4478",
    "body": "Hi, \r\nI try to exoplayer on Gvrf(GearVR Framework).\r\nbut, I found some network problem when playback.\r\nNetwork speed(Wifi) is decreasing when playback(56mb bit rate media).\r\nI also compare to android mediaplayer. but network speed being decrease when using exoplayer..\r\n\r\nSo, How can I improve this problem?\r\nI used mqtt protocol with node.js server.\r\n\r\nAnd media specification is \r\nformat : HEVC\r\nbit rate : 56.0mb\r\nFrame rate : 30 FPS\r\nresolution : 4096 * 2048\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4478/comments",
    "author": "ssorttang",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2018-07-06T15:41:36Z",
        "body": "I'm not entirely sure what you mean by \"network speed is decreasing\". Do you mean that the file loads slowly? Given the high bitrate I think you need a very fast connection to play that over network."
      },
      {
        "user": "ssorttang",
        "created_at": "2018-07-09T00:42:08Z",
        "body": "Sorry. My English is not good. \r\nActually, my application is doing communication with server every time.\r\nSo, I always checking network deviation between application and server.\r\nBut, Network deviation being increased after added Exoplayer. (eventhough not playback or loading)\r\nI did change media player to Exoplayer. So I want know that problem's reason"
      },
      {
        "user": "tonihei",
        "created_at": "2018-07-09T08:49:21Z",
        "body": "Are you checking the time difference between app and server? If yes, I don't think that is ExoPlayer related. It's probably an issue in your app with how you measure the difference.\r\n\r\n"
      }
    ]
  },
  {
    "number": 4474,
    "title": "Add method getQueueItems() in CastPlayer class [New Feature]",
    "created_at": "2018-07-05T09:45:37Z",
    "closed_at": "2018-07-05T10:40:16Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4474",
    "body": "Hi, it would be useful if the CastPlayer class has a method getQueueItems() as following :\r\n\r\n```\r\n  /**\r\n   * Returns the list of MediaQueueItem as an unmodifiable list\r\n   * @return The list of MediaQueueItem, or null if no cast session\r\n   */\r\n  public List<MediaQueueItem> getQueueItems() {\r\n    return isCastSessionAvailable() ? remoteMediaClient.getMediaStatus().getQueueItems() : null;\r\n  }\r\n\r\n```",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4474/comments",
    "author": "mrHerintsoaHasina",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2018-07-05T09:53:53Z",
        "body": "Please have a look at `CastPlayer.getItem(periodId)`. I think that should allow you to query all available queue items."
      },
      {
        "user": "mrHerintsoaHasina",
        "created_at": "2018-07-05T10:06:53Z",
        "body": "But how can we get the `periodId` of all the available queue items from the CastPlayer ?  "
      },
      {
        "user": "tonihei",
        "created_at": "2018-07-05T10:14:34Z",
        "body": "You can query the current `timeline` with `castPlayer.getCurrentTimeline()` or listen to updates with a `Player.EventListener` and wait for `onTimelineChanged(...)`. \r\nIn this timeline, you'll find as many periods as queue items. Check out `timeline.getPeriodCount()` and `timeline.getPeriod(periodIndex, new Period())`. The latter method gives you a `Period` object with further information about the period. `period.id` is the one you are looking for."
      },
      {
        "user": "mrHerintsoaHasina",
        "created_at": "2018-07-05T10:40:16Z",
        "body": "Thanks ! It is worked."
      }
    ]
  },
  {
    "number": 4462,
    "title": "Asking users questions: showing radio buttons over player",
    "created_at": "2018-07-03T07:33:21Z",
    "closed_at": "2018-07-03T08:19:18Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4462",
    "body": "Hi \r\n\r\nI am developing an app that let users to watch videos. some of these videos is exam videos so I need to ask users to answer questions given in radio button, checkbox or text field and displayed over player. \r\nCould anybody help me in \r\n1- Showing such radiobutton and checkbox over player.\r\n2- Get users' selections (what they selected from such checkbox and radiobuttons).\r\n\r\nThanks in advance.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4462/comments",
    "author": "halil-raso",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2018-07-03T08:19:18Z",
        "body": "That's more of a generic Android question. I'd suggest to ask that on StackOverflow or similar sites as this issue tracker is primarily for bugs, feature requests and ExoPlayer-specific questions."
      }
    ]
  },
  {
    "number": 4443,
    "title": "Adaptive track selection",
    "created_at": "2018-06-27T17:23:44Z",
    "closed_at": "2018-06-27T18:39:22Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4443",
    "body": "In class **DefaultTrackSelector** is method:\r\n\r\n```\r\nprivate static boolean isSupportedAdaptiveVideoTrack(\r\n      Format format,\r\n      @Nullable String mimeType,\r\n      int formatSupport,\r\n      int requiredAdaptiveSupport,\r\n      int maxVideoWidth,\r\n      int maxVideoHeight,\r\n      int maxVideoBitrate) {\r\n    return isSupported(formatSupport, false) && ((formatSupport & requiredAdaptiveSupport) != 0)\r\n        && (mimeType == null || Util.areEqual(format.sampleMimeType, mimeType))\r\n        && (format.width == Format.NO_VALUE || format.width <= maxVideoWidth)\r\n        && (format.height == Format.NO_VALUE || format.height <= maxVideoHeight)\r\n        && (format.bitrate == Format.NO_VALUE || format.bitrate <= maxVideoBitrate);\r\n  }\r\n```\r\n\r\nWhy there is ` isSupported(formatSupport, false)` with _false_ ? It does not respect params settings.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4443/comments",
    "author": "pstambrecht",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2018-06-27T17:31:34Z",
        "body": "Is this in relation to `setExceedRendererCapabilitiesIfNecessary`? The purpose of that parameter is not to completely disable capabilities checks. It's to enable trying to play _something_ in the case all available options are deemed to exceed capabilities, where that _something_ is the lowest quality stream that exceeds capabilities. That does not happen as part of trying to make an adaptive selection, and hence passing `false` when trying to make the adaptive selection is the right thing to do.\r\n\r\nI guess we could provide an option to completely disable capabilities checks, if that's what you're after. To be enabled at your own risk ;)."
      },
      {
        "user": "pstambrecht",
        "created_at": "2018-06-27T18:07:42Z",
        "body": "@ojw28 Yes, it is in relation to `setExceedRendererCapabilitiesIfNecessary` So am I right that it's a protection not to play unsupported streams? But when I change it to `true` it works fine. So this protection does not work properly."
      },
      {
        "user": "ojw28",
        "created_at": "2018-06-27T18:15:51Z",
        "body": "The default is `exceedRendererCapabilitiesIfNecessary = true`, so changing it to true wont do anything. The parameter only has an effect if _all_ streams exceed renderer capabilities. In this case, if `exceedRendererCapabilitiesIfNecessary = true`, we'll try and play the lowest quality stream (i.e. the one that exceeds the capabilities by the least amount), in case the device has under-reported what it's actually capable of and can actually play the stream. If `exceedRendererCapabilitiesIfNecessary = false` then we wont try and play any stream.\r\n\r\nThe reason we default to `true` is that in practice we do see devices under-reporting capabilities (it's also not possible for a device to always get this exactly right ahead of seeing the bit-stream anyway), and the worst that normally happens is that playback fails, which isn't really any worse from the user's perspective compared to not trying in the first place. If you change the value to `false` then we'll not try and do this.\r\n\r\nI think we need to improve the Javadoc here (and in particular more clearly surface what all the defaults are). It's still an open question whether there's actually a feature request here. Is there something you want to do that's not currently possible, or were you just clarifying what the API is for?"
      },
      {
        "user": "pstambrecht",
        "created_at": "2018-06-27T18:20:45Z",
        "body": "Ok, I understand this. But my question was why there is hardcoded `false`. Without any chance to change it."
      },
      {
        "user": "pstambrecht",
        "created_at": "2018-06-27T18:22:18Z",
        "body": "@ojw28 I think javadoc is fine. Maybe it's my fault :)"
      },
      {
        "user": "ojw28",
        "created_at": "2018-06-27T18:39:22Z",
        "body": "It could be better ;). I think I've answered the question (i.e. it's working as intended, the flag is used elsewhere). So will close this but endeavor to improve the Javadoc regardless."
      }
    ]
  },
  {
    "number": 4437,
    "title": "Using ExoPlayer's data sources in android.media.MediaPlayer",
    "created_at": "2018-06-27T07:06:01Z",
    "closed_at": "2018-06-27T07:22:40Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4437",
    "body": "Hi!\r\n\r\nIn standard MediaPlayer there is no option to change buffer size, so the idea is to use ExoPlayer's data source classes to be used with the android.media.MediaPlayer. It is for live streams mostly.\r\nFor example, saving data to a local file or RAM and then set this file/data in `mediaPlayer.setDatasource(fileDescriptior);`\r\nCould you , please, advice the most suitable way for this implementation?\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4437/comments",
    "author": "aarondib",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2018-06-27T07:22:39Z",
        "body": "This is more a question about MediaPlayer, but I'll do my best to answer anyway.\r\n\r\nIt's probably possible to wrap an ExoPlayer `DataSource` in an `android.media.MediaDataSource` and pass that to `setDataSource`, but this is only available from Android M. Also, this isn't going to give you control over the buffer size unless you've implemented the buffer you want to control inside the `DataSource`, so I'm not sure it will solve the problem.\r\n\r\nOne approach I've seen before is to start a local proxy server where you have control over loading data, then get MediaPlayer to connect to that. This has a few drawbacks though, not least that it's complicated, so I'd recommend against it if you have any other options."
      }
    ]
  },
  {
    "number": 4432,
    "title": "exo_play and seekbar related id's not getting reset after player.release()",
    "created_at": "2018-06-26T11:16:18Z",
    "closed_at": "2018-06-26T17:23:54Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4432",
    "body": "I am using ver 2.7. While playing the audio, if I `release` the player the play button with id `exo_play` and seekbar related id's `exo_position`, `exo_duration`, `exo_progress` does not get automatically reset. I was expecting them to change to `pause` and reset the values for seekbar related id's.\r\n\r\nIs there any workaround to this?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4432/comments",
    "author": "zishanj",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2018-06-26T15:42:58Z",
        "body": "Does it work if you call `stop()` and then `release()`?"
      }
    ]
  },
  {
    "number": 4427,
    "title": "Device reboots while recording video",
    "created_at": "2018-06-26T05:14:11Z",
    "closed_at": "2018-06-26T07:17:16Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4427",
    "body": "### Issue description\r\nI have used Exoplayer for recording videos. This is working fine for almost all the devices, but for a few of them (Samsung Galaxy S9+ being one of them) is experiencing reboot issue while the video is recorded. The device automatically restarts on its own. Since this is not an app-crash, this cannot be even recorded on Crashlytics. Had anyone faced the same issue - Any solution for this or any way to debug the exact issue using logs or any other medium??\r\n\r\n### Reproduction steps\r\nStart recording video using S9 or S9+. Wait for sometime and the device restarts on its own. Sometimes stopping the recording reboots the device.\r\n\r\n### Link to test content\r\nNo such link for now\r\n\r\n### Version of ExoPlayer being used\r\n2.8.0\r\n\r\n### Device(s) and version(s) of Android being used\r\nSamsung S9 and S9+ (Oreo)\r\n\r\n### A full bug report captured from the device\r\nSince the device reboots on a production build, I can't report a log. Please suggest how can the log can be captured.\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4427/comments",
    "author": "bhavna-nga",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2018-06-26T07:17:16Z",
        "body": "Could you clarify what you mean by \"recording videos\"? ExoPlayer doesn't support recording videos (only playback). If you are able to capture a bug report after the devices reboots that may have useful information. I suggest reporting this to Samsung directly.\r\n\r\nI'll close this for now but if you find that the issue is related to ExoPlayer then please provide more information and I'll reopen it."
      }
    ]
  },
  {
    "number": 4425,
    "title": "Gapless",
    "created_at": "2018-06-25T12:24:05Z",
    "closed_at": "2018-06-29T14:51:49Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4425",
    "body": "Hi\r\n\r\nNeed a simple confirmation\r\n1. For lossy format say MP3 will android framework will take care of removing gaps between files \r\n2. Do we need to design android player which will always skip last one second of MP3 songs\r\n3. Do we need hardware support to achieve gapless playback\r\n4. If we have long silence of 8 sec at end of file, who's responsibility to detect the silence android framework \r\n5. Does only lame tag in mp3 file will only supports gapless playback\r\n\r\nPlease clarify your justification in detail.\r\n\r\nThanks a lot",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4425/comments",
    "author": "dnpawate",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2018-06-26T18:19:46Z",
        "body": "1. ExoPlayer supports playing MP3s gaplessly if they have the required encoder delay/padding metadata stored in iTunes-style ID3 metadata or in a Xing header. In recent versions of ExoPlayer the encoder delay/padding are stripped by ExoPlayer in `TrimmingAudioProcessor`, so we don't rely on the media framework for this. (The media framework does support removing the silent samples via format keys set on `MediaCodec` but we don't take advantage of that as we need to support non-MediaCodec-based audio renderers too.)\r\n2. I'm not sure I understand the question. Please could you rephrase it?\r\n3. No special hardware support is needed.\r\n4. The number of encoder delay/padding samples to strip is normally signaled via extra information stored in the container, so it's up to the content producer to include that. I think standard tools like lame tend to include the required metadata. ExoPlayer doesn't support automatically working out how many samples to remove when concatenating audio streams (it does support skipping silence but this is intended for speeding up spoken content, and won't give perfectly seamless transitions between music tracks).\r\n5. See answer (1)."
      },
      {
        "user": "dnpawate",
        "created_at": "2018-06-29T14:15:50Z",
        "body": "Hi andrew,\r\n\r\nThank you for reply\r\n\r\n1. each gapless applications in playstore will they use exoplayer or android media framework \r\n2. even though gapless is enabled i see with most of the mp3 files do not skip silence\r\njust not able to figure out, why there are no seamless gapless operations\r\n\r\n\r\n"
      },
      {
        "user": "andrewlewis",
        "created_at": "2018-06-29T14:51:49Z",
        "body": "1. They could be using either. I think ExoPlayer and the Android media framework support the same types of gapless metadata. Apps can also do something completely custom, of course.\r\n2. You need to make sure the MP3s are authored with the correct metadata (an ID3 metadata comment or Xing header as mentioned above). If the metadata is present then gapless playback with `ConcatenatingMediaSource` should just work."
      }
    ]
  },
  {
    "number": 4424,
    "title": "addVideoListener in simpleExoPlayerView",
    "created_at": "2018-06-25T11:26:27Z",
    "closed_at": "2018-06-26T02:21:42Z",
    "labels": [
      "question",
      "need more info"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4424",
    "body": "i got error while <pre>simpleExoPlayerView.setPlayer(simpleExoPlayer)</pre> its show me this error in logcat\r\n\r\n<pre>\r\nNoSuchMethodError: No virtual method addVideoListener(Lcom/google/android/exoplayer2/SimpleExoPlayer$VideoListener;) \r\n</pre>\r\nso i adding \r\n<pre>\r\n<code>\r\nsimpleExoPlayer.addVideoListener(new VideoListener() {\r\n            @Override\r\n            public void onVideoSizeChanged(int width, int height, int unappliedRotationDegrees, float pixelWidthHeightRatio) {\r\n                Log.d(\"asdqwe\",String.format(\"play video listener video size changed\"));\r\n            }\r\n            @Override\r\n            public void onRenderedFirstFrame() {\r\n                Log.d(\"asdqwe\",String.format(\"play video listener render first frame\"));\r\n            }\r\n        });\r\n</code></pre>\r\nbut the error still appear, i read the doc and SimpleExoPlayer.VideoListener is deprecated so i'm using Video.VideoListener\r\n\r\nanyone can tell me where im wrong? and how to fix this?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4424/comments",
    "author": "jemjov41",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2018-06-25T16:36:44Z",
        "body": "Please try adding the exact same code into our demo application's `PlayerActivity`, and running that. If everything works there, this seems like an issue with your application's build setup rather than an issue with the ExoPlayer library.\r\n\r\nI wonder if your app is somehow pulling in multiple different versions of ExoPlayer."
      },
      {
        "user": "jemjov41",
        "created_at": "2018-06-26T02:14:18Z",
        "body": "im sorry its fully my fault im using version 2.5.2 and its not the new one so i update to the newest and its solve\r\n\r\nthanks"
      }
    ]
  },
  {
    "number": 4408,
    "title": "Crash reported pointing internal to player.",
    "created_at": "2018-06-22T10:41:18Z",
    "closed_at": "2018-07-11T12:36:18Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4408",
    "body": "Android: 7.0\r\nAndroid Build: 3.0.1\r\nManufacturer: Technicolor\r\nModel: STING\r\nThread: Thread-892-1414\r\nCrashReporter Key: b6cca6f9-594d-46e5-b72c-ca6aeec8ddef\r\nStart Date: 2018-06-21T16:25:11.413Z\r\nDate: 2018-06-21T16:38:23.324Z\r\nThis all are seen during HLS playback.\r\nExoplayer version -2.8.1\r\n-------------------------1st crash --------------------------\r\njava.lang.ArrayIndexOutOfBoundsException: length=10; index=-1\r\n\tat java.util.ArrayList.fastRemove(ArrayList.java:531)\r\n\tat java.util.ArrayList.remove(ArrayList.java:514)\r\n\tat com.google.android.exoplayer2.analytics.AnalyticsCollector$MediaPeriodQueueTracker.onMediaPeriodReleased(SourceFile:737)\r\n\tat com.google.android.exoplayer2.analytics.AnalyticsCollector.onMediaPeriodReleased(SourceFile:314)\r\n\tat com.google.android.exoplayer2.analytics.AnalyticsCollector.resetForNewMediaSource(SourceFile:166)\r\n\tat com.google.android.exoplayer2.SimpleExoPlayer.stop(SourceFile:781)\r\n\tat com.google.android.exoplayer2.SimpleExoPlayer.stop(SourceFile:772)\r\n\tat com.b.a.a.a(SourceFile:1148)\r\n\tat com.b.a.a.b(SourceFile:1221)\r\n\r\n-------------------------2nd crash --------------------------\r\njava.lang.IndexOutOfBoundsException: Index: 0, Size: -1\r\n\tat java.util.ArrayList.get(ArrayList.java:411)\r\n\tat com.google.android.exoplayer2.analytics.AnalyticsCollector$MediaPeriodQueueTracker.onMediaPeriodReleased(SourceFile:739)\r\n\tat com.google.android.exoplayer2.analytics.AnalyticsCollector.onMediaPeriodReleased(SourceFile:314)\r\n\tat com.google.android.exoplayer2.analytics.AnalyticsCollector.resetForNewMediaSource(SourceFile:166)\r\n\tat com.google.android.exoplayer2.SimpleExoPlayer.stop(SourceFile:781)\r\n\tat com.google.android.exoplayer2.SimpleExoPlayer.stop(SourceFile:772)\r\n\tat com.b.a.a.a(SourceFile:1148)\r\n\tat com.b.a.a.b(SourceFile:1221)\r\n-------------------------3rd crash --------------------------\r\n\tat com.google.android.exoplayer2.Timeline$1.getWindow(SourceFile:506)\r\n\tat com.google.android.exoplayer2.Timeline.getWindow(SourceFile:633)\r\n\tat com.google.android.exoplayer2.Timeline.getWindow(SourceFile:620)\r\n\tat com.b.a.a.s(SourceFile:902)\r\n\tat com.b.a.a.A(SourceFile:99)\r\n\tat com.b.a.a$9.run(SourceFile:940)\r\n\tat java.util.TimerThread.mainLoop(Timer.java:555)\r\n\tat java.util.TimerThread.run(Timer.java:505)\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4408/comments",
    "author": "getashok2003",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2018-06-22T13:23:58Z",
        "body": "That most likely happened because the player was accessed from different threads simultaneously. \r\n\r\nPlease note that all player methods must be called from the same thread. This must be the thread you created the player on (or the main thread if that thread doesn't have a Looper). We also recently added an option for #4278 to specify your own Looper to use for player access."
      },
      {
        "user": "tonihei",
        "created_at": "2018-07-11T12:36:18Z",
        "body": "Closing for now as the question is answered and the discussion in #4463 is used to track changes regarding this problem."
      }
    ]
  },
  {
    "number": 4402,
    "title": "how to get download progress and downloaded size in activity",
    "created_at": "2018-06-21T12:55:30Z",
    "closed_at": "2018-06-27T08:52:11Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4402",
    "body": "ExoPlayer v2.8.1\r\n\r\nhello,I'm using DownloadService and DownloadManager to download hls videos,may I ask\r\nhow to get download progress and downloaded size in activitys,I can get these in Downloadservice,\r\nbut you used startService and not bindService ,so how to get these in activitys expect broadcast.\r\n\r\nthanks\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4402/comments",
    "author": "RicardoJiang",
    "comments": [
      {
        "user": "erdemguven",
        "created_at": "2018-06-21T14:04:56Z",
        "body": "If you keep a reference to your DownloadManager in a static field (like com.google.android.exoplayer2.demo.DemoApplication#downloadManager) then you can access it from your activity. You can use DownloadManager.getTaskState() or getAllTaskStates() method to get the progress information. Note, you should be accessing DownloadManager from the same thread as DownloadService which is the main (UI) thread."
      }
    ]
  },
  {
    "number": 4393,
    "title": "How to put sliding gestures on player screen to control volume.",
    "created_at": "2018-06-19T10:54:41Z",
    "closed_at": "2018-06-19T16:39:42Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4393",
    "body": "I want to put a feature in exoplayer which will enable the user to slide up on player screen to increase volume and slide down to decrease volume. how can i achieve that?.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4393/comments",
    "author": "anandsingh2903",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2018-06-19T12:32:04Z",
        "body": "That's a very generic Android question and better asked on sites like StackOverflow or similar. \r\n\r\nFor setting the volume - there's `SimpleExoPlayer.setVolume` (and also `.getVolume`) to achieve that. "
      }
    ]
  },
  {
    "number": 4388,
    "title": "How to stop at a specific time?",
    "created_at": "2018-06-17T11:18:56Z",
    "closed_at": "2018-06-18T08:40:01Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4388",
    "body": "Hello.\r\nI want to make my users watch a specific span repeatedly.\r\nNow I implemented this with seekTo() and Handler().postDelayed methods.\r\nWhat my code do is\r\nseek to a start position, play a video, and stop after a specific time.\r\nHowever, this approach is not reliable when users' internet connection is bad.\r\nIt usually stops early because of downloading, buffering, or something.\r\nI want to know that is there any other approach I can do?\r\nOr should I add that feature to ExoPlayer?\r\nIf that's the case, please let me know how I can do, and where to start.\r\nAny tips would be greatly appreciated because I'm not familiar with the ExoPlayer library.\r\nThank you very much.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4388/comments",
    "author": "darkjun99",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2018-06-18T08:40:01Z",
        "body": "You can prepare the player with a `ClippingMediaSource` wrapping your content media source to play a portion of a stream between specified start/end points, and use `player.setRepeatMode(Player.REPEAT_MODE_ALL)` to loop the clip repeatedly."
      }
    ]
  },
  {
    "number": 4371,
    "title": "Unable to build ffmpeg extension for exoplayer",
    "created_at": "2018-06-12T09:41:00Z",
    "closed_at": "2018-06-12T14:08:19Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4371",
    "body": "i have tried building ffmpeg extension for exoplayer and i can't seem to build it correctly. The documentation is confusing as to which command i have to execute in what scenario. Please can anyone explain me step by step to how to build ffmpeg extension. I already am using exoplayer compiled project.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4371/comments",
    "author": "anandsingh2903",
    "comments": [
      {
        "user": "anandsingh2903",
        "created_at": "2018-06-12T12:50:13Z",
        "body": "I am getting error while building FFMPEG extension that gcc is unable to create a executable file while executing below command:\r\n\r\n\r\n./configure \\\r\n    --libdir=android-libs/armeabi-v7a \\\r\n    --arch=arm \\\r\n    --cpu=armv7-a \\\r\n    --cross-prefix=\"${NDK_PATH}/toolchains/arm-linux-androideabi-4.9/prebuilt/${HOST_PLATFORM}/bin/arm-linux-androideabi-\" \\\r\n    --sysroot=\"${NDK_PATH}/platforms/android-9/arch-arm/\" \\\r\n    --extra-cflags=\"-march=armv7-a -mfloat-abi=softfp\" \\\r\n    --extra-ldflags=\"-Wl,--fix-cortex-a8\" \\\r\n    --extra-ldexeflags=-pie \\\r\n    ${COMMON_OPTIONS}"
      },
      {
        "user": "AquilesCanta",
        "created_at": "2018-06-12T14:08:19Z",
        "body": "Hi @anandsingh2903, this falls outside the scope of this issue tracker. Please try a general Q&A site like stack overflow if you have any specific doubts."
      }
    ]
  },
  {
    "number": 4364,
    "title": "Blob file support",
    "created_at": "2018-06-09T16:59:38Z",
    "closed_at": "2018-06-11T21:22:46Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4364",
    "body": "@ojw28 , @andrewlewis , @tonihei, @AquilesCanta, @erdemguven:\r\nHi, I wanted to know the blob files are supported?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4364/comments",
    "author": "Angelk90",
    "comments": [
      {
        "user": "AquilesCanta",
        "created_at": "2018-06-11T21:22:46Z",
        "body": "We don't have any DataSource implementation on top of Blob, but it should be possible for you to build your own. Have a look at existing implementations like ByteArrayDataSource, for example."
      }
    ]
  },
  {
    "number": 4358,
    "title": "Question - Exoplayer Privacy Policy",
    "created_at": "2018-06-08T16:20:28Z",
    "closed_at": "2018-06-11T07:59:08Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4358",
    "body": "Hi.\r\n\r\nIs there a Privacy Policy that accompanies Exoplayer, or does it fall under the Google Privacy Policy?\r\n\r\nDoes Exoplayer feed back any usage information back to your Team or Google in general?\r\n\r\nThanks\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4358/comments",
    "author": "0c6a183d",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2018-06-11T07:59:08Z",
        "body": "> Is there a Privacy Policy that accompanies Exoplayer, or does it fall under the Google Privacy Policy?\r\n\r\nGoogle's open source projects are covered by the Google Privacy Policy.\r\n\r\n> Does Exoplayer feed back any usage information back to your Team or Google in general?\r\n\r\nExoPlayer does not send any information back to Google. You can of course inspect the source code to verify this.\r\n\r\nIf you're using any of the extension modules then note that some of these depend on external libraries, and so you'd need to check on what those libraries do with respect to both of your questions, if this is a concern."
      }
    ]
  },
  {
    "number": 4351,
    "title": "Pause player after switch page in ViewPager",
    "created_at": "2018-06-07T20:49:09Z",
    "closed_at": "2018-08-14T14:42:26Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4351",
    "body": "Hi\r\n\r\nI use simple exo player view as part of my recyclerView which contains video or photo.\r\nMy question: how i can stop video/recreate player after i switch page in PagerAdapter?\r\n\r\nI used this in onPageChangedListener, but it doesn't always work\r\n\r\n\r\n\r\n            _player.setPlayWhenReady(false);\r\n            _player.getPlaybackState();\r\n    \r\n\r\nThanks",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4351/comments",
    "author": "strikemansan",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2018-08-14T14:42:26Z",
        "body": "I don't really understand the question. In any case it's unclear whether this is an ExoPlayer question, as oppose to a general question about Android development. We (ExoPlayer) provide a player that can render into a `Surface`, and a few UI components to go along with it. How you integrate those components into your app's UI is probably beyond the scope of this issue tracker.\r\n"
      }
    ]
  },
  {
    "number": 4349,
    "title": "Play/Pause button icons after end of file reached",
    "created_at": "2018-06-06T22:42:23Z",
    "closed_at": "2018-06-07T20:21:20Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4349",
    "body": "Hi\r\nI have simple exo player view which show video. After video end's play button showing pause icon. How i can refresh play button after end of video in my DefaultEventListener?\r\n\r\nThanks\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4349/comments",
    "author": "strikemansan",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2018-06-06T22:52:28Z",
        "body": "We do this automatically as of 2.7.0, so it's likely you're using an older version. I'd suggest you update to a newer version to get this behavior."
      },
      {
        "user": "strikemansan",
        "created_at": "2018-06-06T23:07:45Z",
        "body": "@ojw28 Thanks for you reply"
      }
    ]
  },
  {
    "number": 4322,
    "title": "DashMediaSource.Factory  setMinLoadableRetryCount  - Unexpected results",
    "created_at": "2018-05-30T00:52:43Z",
    "closed_at": "2018-06-01T13:05:08Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4322",
    "body": "Hello.\r\n\r\nWhen using the setMinLoadableRetryCount, I have noticed the following two behaviors and wanted to check if it was java or Exoplayer design or bugs.\r\n\r\n1. When setting setMinLoadableRetryCount value 0 has no effect - the TCP connection is always retried twice - in effect, an 8000ms connect timeout (connectTimeoutMillis) always takes 16000ms to throw the exoplayer timeout source_error.\r\n\r\n2. As each TCP connection is retired, the TCP timeout increments by 1 second until 13 is reached which makes  the value in connectTimeoutMillis incorrect.\r\n\r\nFor example: setMinLoadableRetryCount(10) with connectTimeoutMillis:8000 takes ~122 seconds to timeout in Exoplayer, not ~88 as I would expect.\r\n\r\nI have captured the below packets on a firewall and viewed in wireshark, as you can see only the value of 1 and higher seem to have any effect and my connectTimeoutMillis:8000 creeps towards 13000 with each new packet....\r\nsetMinLoadableRetryCount(0)   =  2 TCP tries + 3 TCP-Retransmissions  (Initial connect try)\r\nsetMinLoadableRetryCount(1)   =  2 TCP tries + 3 TCP-Retransmissions  (Retry ~9 seconds later)\r\nsetMinLoadableRetryCount(2)   =  3 TCP tries + 3 TCP-Retransmissions  (Retry ~10 seconds later)\r\nsetMinLoadableRetryCount(3)   =  4 TCP tries + 3 TCP-Retransmissions  (Retry ~11 seconds later)\r\nsetMinLoadableRetryCount(4)   =  5 TCP tries + 3 TCP-Retransmissions  (Retry ~12 seconds later)\r\nsetMinLoadableRetryCount(5)   =  6 TCP tries + 3 TCP-Retransmissions  (Retry ~13 seconds later)\r\nsetMinLoadableRetryCount(6)   =  7 TCP tries + 3 TCP-Retransmissions  (Retry ~13 seconds later)\r\nsetMinLoadableRetryCount(7)   =  8 TCP tries + 3 TCP-Retransmissions  (Retry ~13 seconds later)\r\nsetMinLoadableRetryCount(8)   =  9 TCP tries + 3 TCP-Retransmissions  (Retry ~13 seconds later)\r\nsetMinLoadableRetryCount(9)   =  10 TCP tries + 3 TCP-Retransmissions  (Retry ~13 seconds later)\r\nsetMinLoadableRetryCount(10)  = 11 TCP tries + 3 TCP-Retransmissions  (Retry ~13 seconds later)\r\n\r\nThis is an audio only stream so buffering for 45-90 seconds while driving through a network black spot I  feel is acceptable hence the testing of high values...\r\n\r\nThanks for your help.\r\n\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4322/comments",
    "author": "0c6a183d",
    "comments": [
      {
        "user": "botaydotcom",
        "created_at": "2018-05-30T10:21:15Z",
        "body": "Hi @0c6a183d,\r\nI think in our retry logic, we have a back-off timeout in milliseconds before retrying, which is calculated as:\r\n```\r\n delayBeforeRetry = min((errorCount - 1) * 1000, 5000)\r\n```\r\nAdd 8000 millis from connectTimeoutMillis on top of that and you can arrive at the retry pattern you observed.\r\nI think there is a minor issue with minLoadableRetryCount = 0, which leads to it always retry once. I'm not sure this is something we will need to fix though, and it will be very low priority in our list."
      },
      {
        "user": "0c6a183d",
        "created_at": "2018-05-31T22:43:20Z",
        "body": "Hi. \r\n\r\nThanks for the reply and information.\r\n\r\nYou have stated that there is a bug in minLoadableRetryCount that is effectively _doubling_ the HTTP timeout value set by the developer.\r\n\r\nAre you saying it will _not_ be fixed, or that it is a low priority?\r\n\r\nThanks"
      },
      {
        "user": "ojw28",
        "created_at": "2018-06-01T13:05:08Z",
        "body": "I think you're conflating a few things together:\r\n\r\n* The HTTP timeout. I.e. For a particular connection attempt made by the network stack, how long will it wait before timing out.\r\n* The minimum number of retries. I.e. If the network stack says it's failed to connect, what's the minimum number of times we'll attempt to retry.\r\n* Back-off between retry attempts.\r\n\r\nAll three of these affect the total time that will elapse before a playback fails in the case that every HTTP connection attempt times out, so just setting the timeout to a particular value does not guarantee that's the time that will elapse before failure.\r\n\r\nThe mentioned \"bug\" is not related to the HTTP timeout value not working correctly. The bug is specifically about minLoadableRetryCount. In particular, if set to 0 then we'll always retry at least once, rather than 0 times. This is a low priority issue because (a) setting minLoadableRetryCount to 0 isn't sensible for an app that wants to deliver a robust playback experience, and probably virtually no-one is doing this, and (b) the value is a lower bound; the player is allowed to retry more than the specified number of times without violating the contract of the API.\r\n\r\nAs an additional point, the underlying network stack may do multiple retries in its own layer if the address being connected to resolves to multiple IP addresses, so even when an app uses `HttpUrlConnection` directly to make any network request, the specified timeout does not guarantee failure after only that period of time.\r\n\r\nIf you really have a hard limit at which you want the player to give up and fail (which seems strange), then I'd suggest you implement this yourself in the application layer (i.e. post a delayed message to yourself when the player starts buffering, and if it's the player is still buffering when that message is delivered back to you, give up)."
      },
      {
        "user": "0c6a183d",
        "created_at": "2018-06-01T13:41:08Z",
        "body": "@ojw28 - Thank you for your detailed reply. That has clarified things for me plus added some useful tips. Cheers."
      }
    ]
  },
  {
    "number": 4310,
    "title": "Proguard for r2.0.1",
    "created_at": "2018-05-28T15:02:25Z",
    "closed_at": "2018-07-06T21:11:33Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4310",
    "body": "I am using exo player version r2.0.1 but getting following error:\r\nWarning:Exception while processing task java.io.IOException: Can't write [/.../build/intermediates/transforms/proguard/user/release/jars/3/1f/main.jar] (Can't read [/home/pw/.android/build-cache/19b040b601e1ecad3e7b1996c52b38484ce7ffc8/output/jars/classes.jar(;;;;;;**.class)] (Duplicate zip entry [com/google/android/exoplayer2/l.class == classes.jar:com/google/android/exoplayer2/LoadControl.class]))\r\n\r\nPS: I could not find proguard for exoplayer r2.0.1 so I just use --dontwarn com.google.android.exoplayer2.**",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4310/comments",
    "author": "arushijain45",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2018-06-04T09:42:20Z",
        "body": "It looks like there are probably two versions of ExoPlayer in your binary. I'd suggest taking a look at what's causing that."
      }
    ]
  },
  {
    "number": 4307,
    "title": "API to get the Buffer lenghth",
    "created_at": "2018-05-28T10:17:05Z",
    "closed_at": "2018-06-06T17:48:00Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4307",
    "body": "\r\n\r\n### Issue description\r\nI am using getBufferedPosition() to get the buffer length .\r\nThe value returned by this API is  is too high when i seek. The value is around 1456324 ms \r\nIs this the right API to get the buffer length ? or is Someother calculation is required\r\n\r\n\r\n\r\n### Version of ExoPlayer being used\r\nExoplayer version is 2.8.1 and even we have the same issue in 2.7.1\r\n\r\n### Device(s) and version(s) of Android being used\r\nOn Android O Nexus P device\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4307/comments",
    "author": "rakesharyais",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2018-05-28T13:24:49Z",
        "body": "getBuffered**Position**() returns the position in the media up to which the player has buffered data. You probably want to subtract getCurrentPosition() to the get the length of the current buffer.\r\n\r\nNote that we are also planning to add an API to do this directly (which also works correctly for prebuffering in playlists). This is most likely part of the next release."
      }
    ]
  },
  {
    "number": 4301,
    "title": "Can Exoplayer record the time played of  every file in playlist? ",
    "created_at": "2018-05-25T14:52:13Z",
    "closed_at": "2018-06-05T18:52:47Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4301",
    "body": "### Issue description\r\nActually It's a question in mind for several days after searched issues for the answer but with no luck. It's about statistics of playlist. What I want is to record the video name, video duration , time played ( normal transition to the next one or press next button ) and save to backend.     \r\n\r\nI'm new to Exoplayer , and hope to use Exoplayer to do the job, any help or clue would be greatly appreciated! ",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4301/comments",
    "author": "kingofswing",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2018-05-25T15:46:52Z",
        "body": "ExoPlayer offers a number of listeners to get this kind of information - e.g. `Player.EventListener` or the more detailed `AnalyticsListener`. You can listen to `onPositionDiscontinuity` events to calculate the time played, and listen to `onTimelineChanged` to retrieve the duration as soon as known (or check `player.getCurrentDuration()`. You can also set and get a custom tag for each `MediaSource`  (in the builder). This would allow you to track the video name. \r\n\r\nBesides that, we are planning to providing a listener implementation which gives playback stats (such as \"total time played\", and much more). But that's still work in progress. \r\n\r\n"
      },
      {
        "user": "kingofswing",
        "created_at": "2018-05-26T09:24:01Z",
        "body": "Thanks for your quick reply, @tonihei , I’ll learn to how to make use of  these 2 listeners . "
      },
      {
        "user": "hafiz013",
        "created_at": "2018-08-17T08:18:32Z",
        "body": "question, how to get total time for each media source that play in exoplayer?"
      }
    ]
  },
  {
    "number": 4299,
    "title": "HLS + Widevine",
    "created_at": "2018-05-25T12:41:45Z",
    "closed_at": "2018-05-25T12:45:37Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4299",
    "body": "Where to get a HLS + Windvine Test link to verify it?\r\nI can not find it after a long time searching. Could someone help?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4299/comments",
    "author": "ccf1018",
    "comments": [
      {
        "user": "AquilesCanta",
        "created_at": "2018-05-25T12:45:37Z",
        "body": "Unfortunately, we do not have any HLS + Widevine samples we can disclose, and this is out of the scope of this issue tracker. If you do find a public sample, please let us know and we'll add it to our demo app."
      }
    ]
  },
  {
    "number": 4293,
    "title": "Is there some callback to notify N loop has been completed in a LoopingMediaSource?",
    "created_at": "2018-05-24T05:23:15Z",
    "closed_at": "2018-07-11T12:33:19Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4293",
    "body": "I tried to look into the source code of LoopingMediaSource but it does not seem to provide such capability.\r\nPlayer state change callbacks cannot fulfill this requirement either.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4293/comments",
    "author": "huangwei-dlb",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2018-05-24T08:14:58Z",
        "body": "Please have a look at `EventListener.onPositionDiscontinuity`. This method is called every time there is a discontinuity in the natural progress of the media. Most importantly, this also happens when transitioning to the next loop iteration. There is a `reason` parameter which should be set to `DISCONTINUITY_REASON_PERIOD_TRANSITION`. If you'd like to wait for N iterations, you can do the counting in there."
      },
      {
        "user": "huangwei-dlb",
        "created_at": "2018-05-24T09:19:18Z",
        "body": "@tonihei, Thanks a lot for this information. The event works exactly as you mentioned.\r\nHowever, it cannot help on my problem. Actually, I am trying to calculate the frame rate of the video. It normally not available from the video format information. So I put some statistics mechanism in the renderer, that is to count how many frames has been rendered since beginning. The statistic FPS sometimes has significant deviation when the video loops, especially when looping a clip of the video, because it is hard to find a correct timing to perform the calculation. Could you please advise what is the correct way to get the frame rate? I need this information to do something like video 're-sampling' later. Thanks a lot."
      },
      {
        "user": "tonihei",
        "created_at": "2018-05-24T10:24:34Z",
        "body": "Did you check `Format.frameRate`? This value may already contain the value you are looking for. \r\nBesides that, you should probably check the presentation timestamps of the frames in the renderer to know when (or rather in which interval) frames are rendered. For example, if you're using a MediaCodecRenderer you can listen to `onProcessedOutputBuffer(presentationTimeUs)` for this. Note that the presentation time is not guaranteed to start from zero."
      },
      {
        "user": "huangwei-dlb",
        "created_at": "2018-05-25T01:44:28Z",
        "body": "Yes I always check Format.frameRate, however, it is NO_VALUE most of the times. \r\nI will try to check the presentation timestamps as you suggested. \r\nThank you very much."
      },
      {
        "user": "tonihei",
        "created_at": "2018-07-11T12:33:19Z",
        "body": "Closing due to inactivity. If there are follow-up questions, feel free to reopen the issue."
      }
    ]
  },
  {
    "number": 4287,
    "title": "withMaxVideoBitrate does not exists anymore",
    "created_at": "2018-05-23T10:09:33Z",
    "closed_at": "2018-05-23T10:16:05Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4287",
    "body": "Hi, i've just updated to Exoplayer 2.8.0 and i get that the method from trackselector `withMaxVideoBitrate `does not exists, what is the alternative to this one?\r\n\r\nOccurrs the same with `withPreferredAudioLanguage `and `MappingTrackSelector.SelectionOverride`\r\n\r\n```\r\n        trackSelector.setParameters(trackSelector.getParameters()\r\n                .withMaxVideoBitrate(bitrate));\r\n```\r\n\r\nThanks!!",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4287/comments",
    "author": "billyjoker",
    "comments": [
      {
        "user": "botaydotcom",
        "created_at": "2018-05-23T10:16:05Z",
        "body": "Hi @billyjoker,\r\nI think in 2.8.0, you can use `DefaultTrackSelector.ParametersBuilder` for these functionalities.\r\nThe example in the doc was:\r\n```\r\ntrackSelector.setParameters(\r\n     trackSelector\r\n         .buildUponParameters()\r\n         .setMaxVideoSizeSd()\r\n         .setPreferredAudioLanguage(\"deu\"));\r\n```\r\nPlease check out our demo app for further details."
      }
    ]
  },
  {
    "number": 4285,
    "title": "Unable to play MIDI files",
    "created_at": "2018-05-23T00:59:05Z",
    "closed_at": "2018-05-29T09:24:38Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4285",
    "body": "I am trying to play a MIDI file using ExoPlayer, but it doesn't seem to be working: \r\n\r\n```\r\n05-22 17:57:20.676 E/ExoPlayerImplInternal: Source error.\r\n    com.google.android.exoplayer2.source.UnrecognizedInputFormatException: None of the available extractors (MatroskaExtractor, FragmentedMp4Extractor, Mp4Extractor, Mp3Extractor, AdtsExtractor, Ac3Extractor, TsExtractor, FlvExtractor, OggExtractor, PsExtractor, WavExtractor, AmrExtractor) could read the stream.\r\n        at com.google.android.exoplayer2.source.ExtractorMediaPeriod$ExtractorHolder.selectExtractor(ExtractorMediaPeriod.java:931)\r\n        at com.google.android.exoplayer2.source.ExtractorMediaPeriod$ExtractingLoadable.load(ExtractorMediaPeriod.java:853)\r\n        at com.google.android.exoplayer2.upstream.Loader$LoadTask.run(Loader.java:317)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1113)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:588)\r\n        at java.lang.Thread.run(Thread.java:818)\r\n```\r\nI understand that MIDI files may not be supported at the moment, but is there any plans to add support? If not, do you have any tips on how to write that functionality myself? It seems to work when I use the native Android MediaPlayer",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4285/comments",
    "author": "skywalkerdude",
    "comments": [
      {
        "user": "erdemguven",
        "created_at": "2018-05-29T09:24:38Z",
        "body": "It isn't supported and there is no plan to support it unfortunately. You can take a look at FlacDecoder or OpusDecoder which are extension audio decoders to write one for MIDI but be warned it isn't a simple thing. "
      },
      {
        "user": "Yazon2006",
        "created_at": "2018-07-27T13:11:46Z",
        "body": "@erdemguven It's not funny! Even MediaPlayer from Android SDK is able to play MIDI. I migrated to Exoplayer and now discovered that this new shiny thing is so dummy."
      }
    ]
  },
  {
    "number": 4259,
    "title": "Hello, I would like to create a new icon for your app :-) Free!!!",
    "created_at": "2018-05-15T13:57:40Z",
    "closed_at": "2018-05-15T15:15:04Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4259",
    "body": "Hello I am a graphic designer and I would like to collaborate on your project with the creation of a new icon that is more modern and personal for your app, without any cost, if you are interested you can write me what are the main functions of the app so I can take an inspiration and create your icon ... greetings.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4259/comments",
    "author": "richardbmx",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2018-05-15T15:15:04Z",
        "body": "Thanks for the offer, but we'll keep our current icon for now."
      }
    ]
  },
  {
    "number": 4235,
    "title": "Repackaging of PlayerNotificationManager",
    "created_at": "2018-05-10T11:24:28Z",
    "closed_at": "2018-05-11T14:03:45Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4235",
    "body": "Currently `PlayerNotificationManager` is packaged as a part of `core-ui` module. The fact is that `PlayerNotificationManager` is used inside a media service implementation, which is not a ui-module by its nature and which does not use any other `core-ui` classes either. Current packaging forces me to include whole player UI into my service library module, although only `PlayerNotificationManager` class is used from there.\r\n\r\nI quickly checked `PlayerNotificationManager` implementation and it appears to have no dependency on UI classes at all. Does it make sense to move `PlayerNotificationManager` into a separate module? This could be an extension module or `player-service` or similar. What do you think?\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4235/comments",
    "author": "sergejsha",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2018-05-11T03:23:13Z",
        "body": "It's in the UI module because it uses drawables and strings that are part of the UI module.\r\n"
      },
      {
        "user": "sergejsha",
        "created_at": "2018-05-11T08:49:27Z",
        "body": "Ah, you are right. How about restructuring it a bit, allowing separate usage of remote/service UI? Simplest option would be `exoplayer-ui -> exoplayer-service-ui`. Current users of `exoplayer-ui` won't see any difference. At the same time audio players with own UI could reference just `exoplayer-service-ui` module. I could also prepare a merge request for it if you would trust it."
      },
      {
        "user": "ojw28",
        "created_at": "2018-05-11T14:02:50Z",
        "body": "Your suggestion would work on a technical level, but it seems a little arbitrary in that it's optimal only for apps using the particular set of UI components that you're using. I could imagine someone else reporting an issue saying they're using only `PlaybackControlView`, and complaining that they have a transient dependency on `exoplayer-service-ui` that contains a class they don't need :).\r\n\r\nI don't think we're going to change anything here. I would expect that proguard and resource shrinking should (or could) be used to remove anything that you're not actually using, so it's unclear whether there's actually any impact on end users."
      }
    ]
  },
  {
    "number": 4232,
    "title": "Add custom IMA ad cue points",
    "created_at": "2018-05-10T07:00:37Z",
    "closed_at": "2018-06-06T15:03:48Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4232",
    "body": "Right now, the IMA extension only takes cue points from the VAST URL. A method should be added in the extension which allows developers to add custom cue points and show the same ad from the URL at user defined positions.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4232/comments",
    "author": "khat33b",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2018-05-22T08:48:45Z",
        "body": "It's possible to specify cue points and ad media yourself by implementing a custom `AdsLoader`, but the code in `ImaAdsLoader` expects ads loaded by IMA to be the only ads in the player timeline."
      },
      {
        "user": "khat33b",
        "created_at": "2018-05-23T05:31:51Z",
        "body": "It's possible to write a custom `AdsLoader ` but that would negate the whole point of using the IMA extension."
      },
      {
        "user": "andrewlewis",
        "created_at": "2018-06-01T07:36:58Z",
        "body": "Wouldn't it make more sense to add these cue points to the ad tag? It is possible to create an `ImaAdsLoader` using an ad tag provided by your app as a string using `ImaAdsLoader.Builder.buildForAdsResponse`, so perhaps you could try downloading the ad tag, inserting your extra ads and passing the result to that method."
      }
    ]
  },
  {
    "number": 4217,
    "title": "Question on achieving a low latency HLS live stream",
    "created_at": "2018-05-07T20:54:04Z",
    "closed_at": "2018-05-11T13:57:35Z",
    "labels": [
      "question",
      "need more info"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4217",
    "body": "I'm using Exoplayer to play HLS live streams with a 30 sec window and 2 second segments, and I'am trying to optimize for low latency.\r\n\r\nEverything works great using all the default settings for `LoadControl` and the default `HlsExtractorFactory`, with playback starting 3 segments before the end of the window as expected. \r\n\r\nThe issue i'm seeing is when I'm on a good connection, I often get into a very short buffering states (around a second) after playing the stream for a few seconds.\r\n\r\nThis happens even more frequently if I lower the resolution of my stream to the lowest possible, and stay on a fast internet connection.\r\n\r\nAfter debugging what's happening, it looks like the renderers are asking for the next segment, but the backend hasn't made that next segment available yet. Almost as if the renderer is ahead of the backend, and when asking for more, instead of just waiting and continuing playback (there's still buffered data to be played), it immediately sets the player state to `Player.STATE_BUFFERING`, until the new segment is available.\r\n\r\nIf I set the stream to start further back in the window, say 4-5 segments from the edge, the problem disappears completely, and my buffer sizes stay healthy, but I obviously loose in latency.\r\n\r\nI'm surprised by this behavior as it seems like a common case for live HLS live streams to try to be as close as possible to the edge of the window.\r\n\r\nI'm trying to understand why I'm getting this behavior, and wondering if I'm missing a configuration setting on the client, or if it's something that needs to be tweaked on the backend.\r\n\r\nThanks in advance!\r\n\r\n### Version of ExoPlayer being used\r\n2.7.3\r\n\r\n### Device(s) and version(s) of Android being used\r\nGoogle Pixel XL 2\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4217/comments",
    "author": "joaquim-verges",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2018-05-08T09:50:11Z",
        "body": "Can you provide us with a link to your test stream to ensure we can reproduce the issue? \r\n\r\nI tested another HLS live stream and manually set the start position to a few seconds to the end of the window. This also causes some buffering as soon as I reach the end of the  window. However, this is clearly caused by running out of media as the playlist update and prebuffering of the next segment doesn't happen fast enough. \r\n\r\nNote that our  `DefaultLoadControl` waits until it has 5 seconds of buffered media before continuing playback when in `STATE_BUFFERING`. This is the `bufferForPlaybackAfterRebufferMs` parameter.\r\nWhen I set this to zero, it continues playing immediately after getting new media. That allowed me to set the playback position to 1-2 seconds behind the live edge while still having a smooth playback with only the occasional small hick-up when loading didn't catch up fast enough. "
      },
      {
        "user": "joaquim-verges",
        "created_at": "2018-05-09T18:38:27Z",
        "body": "Thank you for the prompt reply @tonihei! That makes much more sense now, didn't think of reducing the `bufferForPlaybackAfterRebufferMs` value, it does help getting better latency on good connections.\r\n\r\nI'll play with the right value to balance between latency and good experience for slower connections.\r\n\r\nI'm also thinking of subclassing `DefaultLoadControl` to increase the `bufferForPlaybackAfterRebufferMs` value as I hit more buffer empties, to make the value more dynamic.\r\n\r\nSeems like something like this should work?\r\n\r\n```\r\n// bufferForPlaybackAfterRebufferUs == 1 sec initially\r\n\r\n@Override\r\npublic boolean shouldStartPlayback(long bufferedDurationUs, float playbackSpeed, boolean rebuffering) {\r\n\tboolean shouldStartPlayback = super.shouldStartPlayback(bufferedDurationUs, playbackSpeed, rebuffering);\r\n\tif (rebuffering) {\r\n\t\t// add new condition to start playback dependent on the rebuffer count \r\n\t\tshouldStartPlayback &= bufferedDurationUs >= bufferForPlaybackAfterRebufferUs * rebufferCount;\r\n                 // increment rebuffer count when we resume playback\r\n                if (shouldStartPlayback) {\r\n\t                rebufferCount++;\r\n                }\r\n\t}\r\n\treturn shouldStartPlayback;\r\n}\r\n```\r\n\r\nDoes this makes sense for a live stream rebuffer behavior to keep requiring more buffered data as we hit more hiccups? and is `DefaultLoadController.shouldStartPlayback` the right place to add this logic?\r\n\r\nThanks again for the precious help.\r\n\r\n"
      },
      {
        "user": "joaquim-verges",
        "created_at": "2018-05-11T05:46:17Z",
        "body": "Just wanted to post an update for my buffering issue. I was lucky enough to meet @AquilesCanta from your team at Google I/O, and after inspecting a stream that reproduced the issue, he pointed out that I had an incorrect `#EXT-X-TARGETDURATION` of 5 seconds, while my segments are only 2 seconds.\r\n\r\nThis was causing exoplayer to only load new segments every 5 seconds, which I believe was the main cause of my rebuffering issue.\r\n\r\nTo verify this, I recompiled the HLS module with a hardcoded value of 2 seconds for `targetDurationUs` when building new `HlsMediaPlaylist` objects, and indeed the issue is now completely gone! I'm getting great latency and smooth playback :)\r\n\r\nWanted to post this in case it helps other people, and say a huge thanks to @AquilesCanta for helping me debug the issue.\r\n\r\nCongrats on a great library, and keep up the good work!"
      },
      {
        "user": "AquilesCanta",
        "created_at": "2018-05-11T13:38:38Z",
        "body": "Great news, Joaquim! Nice meeting you. Feel free to reach out if you run into any more issues."
      },
      {
        "user": "tonihei",
        "created_at": "2018-05-11T13:57:35Z",
        "body": "Closing the issue then, as it seems the question was solved."
      }
    ]
  },
  {
    "number": 4215,
    "title": "Disable exo_prev imageview in first track of list",
    "created_at": "2018-05-07T09:11:25Z",
    "closed_at": "2018-05-07T14:57:33Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4215",
    "body": "when start playing (first) track of AudioList ,whay exo_prev ImageButton is Enable?\r\ni want change it but not work.\r\n version=2.7.3",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4215/comments",
    "author": "sn32247",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2018-05-07T14:57:33Z",
        "body": "It's enabled because tapping it seeks the user back to the start of the (first) track. If you don't like the behavior of our standard UI components, you should implement your own (possibly using the ones we provide as a starting point)."
      }
    ]
  },
  {
    "number": 4195,
    "title": "[Question] Parsing ID3 timestamp and exposing to application",
    "created_at": "2018-04-30T19:31:42Z",
    "closed_at": "2018-05-01T09:24:36Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4195",
    "body": "Hello,\r\n\r\nI'm attempting to create a software clock in an android device which needs to display the timestamp from metadata within the ID3 tag. We need a way to parse hls segments and the ID3 information which holds the source timestamp and then make this data available to some class responsible for displaying an on screen clock. \r\n\r\nIs this functionality available to me? I do not mind digging into the source to determine how to go about it, but would like some advice to make sure what I'm attempting is feasible. ",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4195/comments",
    "author": "ldelossa",
    "comments": [
      {
        "user": "AquilesCanta",
        "created_at": "2018-05-01T09:24:36Z",
        "body": "If your player has a metadata renderer, and the ID3 track is selected (in general, the default track selector does it by default, but you should check), then you can get the id3 data from all metadata outputs you've set. This is showcased in the demo app. If you play the HLS stream titled \"Apple 16x9 basic stream\", you will get logcat output similar to the following, which is a representation of an ID3 TXXX frame.  \r\n\r\n```\r\ncom.google.android.exoplayer2.demo D/EventLogger: metadata [5.13, 0.00, window=0, period=0, \r\ncom.google.android.exoplayer2.demo D/EventLogger:   TXXX: value= *** THIS IS Timed MetaData @ -- 00:00:00.0 *** \r\ncom.google.android.exoplayer2.demo D/EventLogger: ]\r\n```"
      }
    ]
  },
  {
    "number": 4181,
    "title": "Dummy Media Source",
    "created_at": "2018-04-25T07:47:44Z",
    "closed_at": "2018-04-28T07:02:19Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4181",
    "body": "### Issue description\r\nI am creating a certain audio player which combines a number of tracks to play using exo player.\r\nIn the project I have a requirement that there can be a certain \"blank\" period between tracks.\r\n\r\nFor example:\r\nPlaying track no. 1 and then a 10 second pause and then playing track no. 2\r\n\r\nI was wondering if there is any \"blank\" media source which I can configure with time and it will do nothing so I could concatenate all the tracks (and blanks) into one playback.\r\n\r\nThanks!\r\n\r\n### Version of ExoPlayer being used\r\n2.7.3\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4181/comments",
    "author": "Sybergoth",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2018-04-26T09:37:31Z",
        "body": "We don't provide such a component, however it would probably not be too difficult for you to implement one yourself."
      },
      {
        "user": "Sybergoth",
        "created_at": "2018-04-26T09:43:35Z",
        "body": "Hey, thanks for the reply.\r\n\r\nBefore I dive in to learn how a media source is structured and implement it, do you have any references about how to write a custom media source and how should I tackle this problem?"
      },
      {
        "user": "ojw28",
        "created_at": "2018-04-28T07:02:19Z",
        "body": "The Javadoc for the classes/interfaces that you need to implement should be your reference in the first instance."
      }
    ]
  },
  {
    "number": 4179,
    "title": "Get the actual playing mp4 file from DashPlaylist?",
    "created_at": "2018-04-24T19:58:40Z",
    "closed_at": "2018-04-28T06:17:27Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4179",
    "body": "### Issue description\r\nQuestion,\r\n\r\nWhere i can get the actual mp4 file playing in the player from my DashPlaylist?\r\n\r\nI can get all files that they are loaded from the MediaSourceEventListener\r\n\r\n```\r\noverride fun onLoadStarted(dataSpec: DataSpec?, dataType: Int, trackType: Int, trackFormat: Format?,\r\n                               trackSelectionReason: Int, trackSelectionData: Any?, mediaStartTimeMs: Long,\r\n                               mediaEndTimeMs: Long, elapsedRealtimeMs: Long) {\r\n    }\r\n```\r\n\r\nand also those who are completed (downloaded)\r\n\r\n```\r\noverride fun onLoadCompleted(dataSpec: DataSpec?, dataType: Int, trackType: Int, trackFormat: Format?,\r\n                                 trackSelectionReason: Int, trackSelectionData: Any?, mediaStartTimeMs: Long,\r\n                                 mediaEndTimeMs: Long, elapsedRealtimeMs: Long, loadDurationMs: Long,\r\n                                 bytesLoaded: Long) {\r\n    }\r\n```\r\n\r\nbut i need the actual one that the player is playing. How could i get that?\r\n\r\nThank you!\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4179/comments",
    "author": "jboisjo",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2018-04-25T10:00:40Z",
        "body": "I don't really understand the question. A few questions that might help to clarify things:\r\n\r\n* Are you playing on-demand DASH streams where each representation is a single segment, or do the DASH manifests define multiple segments (with different URLs) per representation?\r\n* It would be good to pose the question in terms of what you're trying to do and why, from a feature perspective. What are you actually going to do once you know which URLs are being played?"
      },
      {
        "user": "jboisjo",
        "created_at": "2018-04-25T13:13:36Z",
        "body": "Once i load initially the playlist, it downloads 3-4 chunks of 6 seconds like this.\r\n\r\n```\r\n04-25 09:03:59.371 26081-26081/“packagename” E/onLoadCompleted: …udp_audio_1_10_298385.mp4?m=1523493623\r\n04-25 09:03:59.596 26081-26081/“packagename” E/onLoadCompleted: …udp_video_1_3_298385.mp4?m=1523493623\r\n04-25 09:03:59.624 26081-26081/“packagename” E/onLoadCompleted: …udp_audio_1_10_298386.mp4?m=1523493623\r\n04-25 09:03:59.739 26081-26081/“packagename” E/onLoadCompleted: …udp_video_1_3_298386.mp4?m=1523493623\r\n04-25 09:03:59.765 26081-26081/“packagename” E/onLoadCompleted: …udp_audio_1_10_298387.mp4?m=1523493623\r\n04-25 09:03:59.856 26081-26081/“packagename” E/onLoadCompleted: …udp_video_1_3_298387.mp4?m=1523493623\r\n04-25 09:03:59.880 26081-26081/“packagename” E/onLoadCompleted: …udp_audio_1_10_298388.mp4?m=1523493623\r\n04-25 09:04:00.014 26081-26081/“packagename” E/onLoadCompleted: …udp_video_1_3_298388.mp4?m=1523493623\r\n04-25 09:04:00.040 26081-26081/“packagename” E/onLoadCompleted: …udp_audio_1_10_298389.mp4?m=1523493623\r\n04-25 09:04:00.129 26081-26081/“packagename” E/onLoadCompleted: …udp_video_1_3_298389.mp4?m=1523493623\r\n04-25 09:04:00.156 26081-26081/“packagename” E/onLoadCompleted: …udp_audio_1_10_298390.mp4?m=1523493623\r\n04-25 09:04:00.234 26081-26081/“packagename” E/onLoadCompleted: …udp_video_1_3_298390.mp4?m=1523493623\r\n```\r\n\r\nand then, after 20-25 seconds, it gets the other next 3 chunks.\r\n\r\nI want to know what chunk is currently display after it has been downloaded. \r\nWe're trying to fix an issue that sometimes, i'm getting a source error and need to know if the player can't find the chunk or the chunk hasn't been created from the source!\r\n\r\nThank you !"
      },
      {
        "user": "ojw28",
        "created_at": "2018-04-25T13:26:39Z",
        "body": "I don't understand what the difference between \"player can't find\" and \"hasn't been created\" is. Under what circumstances does the chunk exist but the player can't find it?\r\n\r\nI'm also confused about why the currently playing chunk is going to help you. If the player is failing it should give you an error that's descriptive enough to allow you to figure out what went wrong. Are you seeing an error, and if so what does the stack trace look like?"
      },
      {
        "user": "jboisjo",
        "created_at": "2018-04-25T14:41:47Z",
        "body": "Well maybe the chunk exist but it's corrupt for x reason so the player can't access it. That's what i'm trying to figure.\r\n\r\nThe error i'm getting it's always a 503 which is the segment doesn't exist but it's pretty random. \r\n\r\n"
      },
      {
        "user": "ojw28",
        "created_at": "2018-04-28T06:17:27Z",
        "body": "If you're seeing 503 errors then you already know what the issue is (i.e. your server providing a \"Service Unavailable\" response code). If the chunk were corrupt then you'd see a different failure (e.g. in ExoPlayer's `Extractor` or `Renderer` components)."
      }
    ]
  },
  {
    "number": 4176,
    "title": "How to instruct exoplayer to stop at a certain position in advance?",
    "created_at": "2018-04-24T14:44:33Z",
    "closed_at": "2018-05-10T00:27:15Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4176",
    "body": "Hi Exoplayer team,\r\nI am using Exoplayer 2 in my video player for playback and I am looking for a mechanism through which I can instruct exoplayer to stop at certain position in advance. Let me explain what exactly I am looking here.\r\nWe get a seamless HLS stream which has video content and ads content. Along with stream as a response from the server, we also get ads position for playing the  ads i.e. at which playhead position ads are present. We need these positions as we show different UI controls when ads are playing. So for example, I would have something like this as ads position in milliseconds.\r\n\r\nTimeInterval{start=TimePosition(532673), end=TimePosition(623094)}\r\n\r\nI have a scheduler which polls for `getCurrentPosition`. Everything seems to work perfectly fine apart from one issue. When I do a seek while the video is playing and if there is an ad interval in between those seeking positions, I am supposed to trigger the ads and once ads are completed, I seeked to the desired position. Here comes the problem, after the ads end,I see the first frame of content. Exoplayer gives positions as, \r\nTimePosition(622593) \r\nTimePosition(623138) \r\n\r\nWhat I am looking here is, if somehow I can pause/stop exoplayer at a certain position which in this case would be end=TimePosition(623094).\r\nI never want exoplayer to go beyond end=TimePosition(623094) in this case. Please suggest what can be the right solution here.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4176/comments",
    "author": "abhishekredspace",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2018-04-25T10:30:29Z",
        "body": "I understand the problem. I don't think we have a frame accurate solution to this currently, although it should be possible to do better than your polling approach. You can use an event based approach as follows:\r\n\r\n1. Define a component that will be called whenever a boundary between content and ad is reached:\r\n\r\n```\r\nPlayerMessage.Target boundaryHandler = new PlayerMessage.Target() {\r\n  @Override\r\n  public void handleMessage(int messageType, Object payload) {\r\n    long boundaryPositionMs = (long) payload;\r\n    // TODO: Implement your logic here.\r\n  }\r\n};\r\n```\r\n\r\n2. Ask the player to call your component whenever a boundary between content and ad is reached. For each boundary position, do:\r\n\r\n```\r\nplayer.createMessage(boundaryHandler)\r\n    .setHandler(mainHandler)\r\n    .setPosition(boundaryPositionMs)\r\n    .setPayload(boundaryPositionMs)\r\n    .setDeleteAfterDelivery(false)\r\n    .send();\r\n```\r\n\r\nYou should then see `handleMessage` invoked whenever a boundary is hit, and you can take appropriate action there. This wont be frame accurate, unfortunately, due to the way ExoPlayer works internally, but it should get you closer to what you need, and is definitely better than polling.\r\n\r\nThere are variations on the suggested approach above, where you only ask the player to call you back for a single position of interest, don't ask for message re-delivery etc, so you can play around with the idea.\r\n\r\nI think the \"proper\" solution to this would be to implement a variant of `AdsMediaSource` that operates on a single child `MediaSource` plus a list of known ad positions. That's a pretty involved change, however.\r\n\r\nLet us know how you get on with the approach above! We can probably turn this issue into an enhancement request for the \"proper\" solution, but I don't think we'll have time to look at it soon."
      }
    ]
  },
  {
    "number": 4155,
    "title": "DRM onDrmSessionManagerError JSON body response",
    "created_at": "2018-04-19T16:37:45Z",
    "closed_at": "2018-04-20T08:31:27Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4155",
    "body": "### Issue description\r\nI'm trying to get JSON body responce in `onDrmSessionManagerError` but there is no such info in `HttpDataSource.InvalidResponseCodeException` error. Could you please provide me info how can I get JSON body inside `DefaultDrmSessionManager.EventListener` `onDrmSessionManagerError` callback.\r\n \r\n### Version of ExoPlayer being used\r\ncom.google.android.exoplayer:exoplayer:2.6.1\r\n\r\nI'll appreciate a quick answer.\r\nThanks in advance.\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4155/comments",
    "author": "AlinaVoronkovaEpam",
    "comments": [
      {
        "user": "botaydotcom",
        "created_at": "2018-04-19T17:00:57Z",
        "body": "Hi @AlinaVoronkovaEpam,\r\nI'm not sure about your specific situation (are you using `DefaultHttpDataSource`, `CronetDataSource`, or `OkHttpDataSource` for the DRM callback?), but I don't think this is supported by default.\r\n\r\nOne thing you may try is to debug and step into the place where the `InvalidResponseCodeException` was thrown - probably from the `open(DataSpec)` method of one of these data source classes. Try to inspect the response at that point to see if you can get the expected JSON body response in that case.\r\n\r\nIf you can get your expected JSON body there, one option is to subclass/encapsulate whatever `HttpDataSource` you are using into a new `HttpDataSource` implementation, catch when the `InvalidResponseCodeException` was thrown, and try to read from the connection at that point. Then you can inject that custom `HttpDataSource` in the `HttpMediaDrmCallback` yourself."
      },
      {
        "user": "brol1dev",
        "created_at": "2018-04-20T00:53:46Z",
        "body": "@botaydotcom I'm working with @AlinaVoronkovaEpam on this one. I was able to read the JSON by subclassing `DefaultHttpDataSource`. but I see that `InvalidResponseCodeException` doesn't accept a body as part of its arguments, so what do you think is the right approach? I'm thinking we should subclass `InvalidResponseCodeException` (in reality its parent since `InvalidResponseCodeException` is final) to add an extra field that will contain the JSON and that way we can read it on our callback accordingly."
      },
      {
        "user": "brol1dev",
        "created_at": "2018-04-20T01:57:14Z",
        "body": "BTW I was able to finish the whole workflow. I ended up extending `HttpDataSourceException` and adding a new field which contains the JSON response body and we can read that right when the error happens.\r\n\r\nThanks for the help @botaydotcom 👍 "
      },
      {
        "user": "brol1dev",
        "created_at": "2018-04-20T01:59:04Z",
        "body": "To add more details if anyone else has the same problem. We extended `OoyalaDrmHttpDataSource` and on the `open(DataSpec dataSpec)` method when we identify there's an error, we just parse the `connection.getErrorStream()` object which contains the response body that for our case it's a JSON text."
      },
      {
        "user": "botaydotcom",
        "created_at": "2018-04-20T08:31:27Z",
        "body": "Cool, glad that you can resolve your problem!"
      },
      {
        "user": "AlinaVoronkovaEpam",
        "created_at": "2018-04-24T14:01:02Z",
        "body": "Thanks!"
      }
    ]
  },
  {
    "number": 4148,
    "title": "[Question] MediaCodecVideoRenderer - on what basis is the late frame threshold determined",
    "created_at": "2018-04-18T10:17:04Z",
    "closed_at": "2018-04-19T11:36:24Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4148",
    "body": "\r\nHi,\r\n\r\nWe are looking into some of the ExoPlayer implementation around the MediaCodec API.  I have noticed that the threshold for when a decoded frame is considered to have 'late' availability is 30ms ('earlyUs' variable)\r\n\r\nSo I have two questions:\r\n\r\n1.)How was the 30ms threshold derived\r\n2.)What would the likely impact be if it was increased - lets say, to 90ms.\r\n\r\nThe context to this question is that we are currently observing MediaCodec stalls when the decoder is reconfigured during a representation change (in which both bitrate and resolution and/or frame rate changes).  This is resulting in dropped frames for us and on some devices visible glitches.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4148/comments",
    "author": "KarlGallagher",
    "comments": [
      {
        "user": "botaydotcom",
        "created_at": "2018-04-18T10:31:37Z",
        "body": "Hi @karlg-arris,\r\n\r\n@ojw28 maybe able to answer this question better, but I believe the answers are:\r\n1) It's arbitrarily decided.\r\n2) It may reduce the number of frame drops, but the video quality is not improved (and maybe much worse). More video frames are shown but frames will be shown at non-constant rate. Moreover, increasing this threshold will also force the MediaCodec to render more frames when it already couldn't keep up in the first place, which leads to more CPU starving, and more subsequent late frames.\r\n\r\nSome very similar questions have been discussed on this issue: #3040 (you can search for 30ms further down the page)."
      },
      {
        "user": "KarlGallagher",
        "created_at": "2018-04-18T10:40:58Z",
        "body": "Hi @botaydotcom \r\n\r\nI read that thread previously.  It seems the concern there was around generally slow codecs or those that used significant system resources.\r\n\r\nThe example I am providing is based around a very specific stall immediately subsequent to a decoder reconfiguration on devices that otherwise do not exhibit decoder performance issues - e.g. dropped frames even at low bitrates (400kbps).\r\n\r\nGiven that use case might an increase in the threshold help more than hinder?"
      },
      {
        "user": "ojw28",
        "created_at": "2018-04-18T14:28:47Z",
        "body": "> Given that use case might an increase in the threshold help more than hinder?\r\n\r\nAm I right in saying that we're talking about comparing (a) rendering some frames late (possibly in rapid succession as we catch up to the audio),  vs (b) dropping the late frames (which likely allows the catch up to occur more quickly). Presumably \"help\" in this case means \"looks nicer to the user\". So I think to answer that question, you'd probably need to give it a try and see what it looks like."
      },
      {
        "user": "KarlGallagher",
        "created_at": "2018-04-19T06:47:42Z",
        "body": "@ojw28 Yes your assertion is correct.  I get your point, so this really depends on observable impact rather than simply reducing the amount of log traces about dropped frames.\r\n\r\nOn a final note - is it worth raising a bug against the apparent underlying cause (decoder stalls post reconfiguration) here? or is that something that is expected / well understood already?\r\n\r\nThanks,\r\nKarl."
      },
      {
        "user": "ojw28",
        "created_at": "2018-04-19T11:02:35Z",
        "body": "It really depends on how big the pause is, why the pause occurs, and (pragmatically) whether it's a device that the OEM is still delivering significant software updates to. The issue would need to be reported to the device manufacturer, but if you provide details here, including a full bugreport captured with \"adb bugreport\", we could take a quick look for anything unusual."
      },
      {
        "user": "KarlGallagher",
        "created_at": "2018-04-19T11:35:34Z",
        "body": "Thank you.\r\n\r\nMy questions have been answered. Thanks for taking the time out on this one."
      }
    ]
  },
  {
    "number": 4129,
    "title": "How to a delete a offline license ? ",
    "created_at": "2018-04-16T12:54:13Z",
    "closed_at": "2018-04-21T08:21:49Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4129",
    "body": "I use OfflineLicenseHelper to download the offline license, I store the offlineKeySetId in a local file . it works fine.  Now i want to delete the offline video  , I delete my local file which stores the keySetId.   Should  I have to do anything else to remove the license ?   And how can I do it ?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4129/comments",
    "author": "18795859305",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2018-04-21T08:21:49Z",
        "body": "It depends a bit on your security requirements and license policies. Deleting your local file doesn't remove the underlying license, so if someone had somehow gotten hold of the keySetId, they could still use it to access the license. It also doesn't communicate to your server that the offline license is no longer held, which may be required if you're trying to enforce policies such as \"content can only be downloaded on N devices at a time\".\r\n\r\nTo remove the license properly, you can pass the keySetId to `OfflineLicenseHelper.releaseLicense`. If I remember correctly (and you should probably validate behavior is really as described, because I'm going by memory):\r\n\r\n* That call should immediately render the license unusable.\r\n* The call will also notify the license server that the license is no longer held. The call fail (throw an exception) if this is not possible (e.g. due to lack of network connectivity). The license will be unusable either way.\r\n* If notifying the license server that the license is no longer being held is important to your use case, and if the call fails, then you can keep the keySetId and implement some retry logic for calling `releaseLicense` until it succeeds."
      }
    ]
  },
  {
    "number": 4107,
    "title": "Grabbing synchronized audio samples",
    "created_at": "2018-04-10T17:20:05Z",
    "closed_at": "2018-04-22T21:57:17Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4107",
    "body": "Is it possible to grab _synchronized_ audio samples from a running ExoPlayer instance, without having to modify the source code?\r\n\r\nCurrently I'm getting the decoded audio samples inside of `processOutputBuffer` in `MediaCodecAudioRenderer`, but these don't seem to be in sync with the video.  Also this has required me to essentially write my own renderer (and subsequently my own `AudioSink`, since `DefaultAudioSink` is a `final` class). I tried grabbing them from `handleBuffer` in `DefaultAudioSink` instead, but again it seems like the samples I get there (just before the `writeNonBlockingV21` call) are kind of decoupled from the sync logic.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4107/comments",
    "author": "kunaljathal",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2018-04-11T08:16:27Z",
        "body": "During normal playback we synchronize video to the audio playout position, so I think the request here is to get a stream of PCM audio data that's synchronized with playout position of the underlying `AudioTrack` (but please correct me if I've misunderstood).\r\n\r\nThe platform `AudioTrack` keeps a buffer of data internally, which introduces latency, so it's not sufficient to output data at the moment it's written to the track. Instead, I think you'll need to keep a buffer of audio that's been written to the track, then output data from your own buffer based on the current playout position.\r\n\r\nI'm afraid we don't have a built-in way to do this at the moment so some level of customization is necessary. There are lots of ways this could be done, but if you want to minimize the number of customized components I think it should be possible with only a custom `AudioProcessor` as follows.\r\n\r\n- Instantiate a `DefaultAudioSink`, passing in a custom `AudioProcessor`, and set up the player with a `MediaCodecAudioRenderer` outputting to this sink.\r\n- Each time the custom audio processor receives input, it should copy it to an output buffer, but also copy the bytes into an additional internal buffer. We are using it as a way to intercept the audio.\r\n- At the same time as populating its internal buffer, we can also check the current playout position via `AudioSink.getCurrentPositionUs`, as we have a reference to the sink. The position can be converted into a frame count, which in turns maps onto a byte offset in the internal buffer, which is the position up to which audio has been played out. You can handle this portion of the internal buffer however you want, then compact the buffer.\r\n- Note: all audio processor methods run on ExoPlayer's internal playback thread, so you may want to pass the data that's been output to an application thread."
      },
      {
        "user": "kunaljathal",
        "created_at": "2018-04-11T19:48:23Z",
        "body": "Okay, gotcha. A couple of preliminary clarifications:\r\n\r\n> Instantiate a `DefaultAudioSink`, passing in a custom `AudioProcessor`, and set up the player with a `MediaCodecAudioRenderer` outputting to this sink.\r\n\r\nI'm creating an instance of `SimpleExoPlayer` via `ExoPlayerFactory.newSimpleInstance`, so I'm assuming I can do what you're describing by simply overriding `DefaultRenderersFactory.buildAudioProcessors` (in the renderers factory that I pass to the constructor of `ExoPlayerFactory.newSimpleInstance`) with my custom `AudioProcessor`, right? Because this `AudioProcessor` then internally gets passed to the underlying `MediaCodecAudioRenderer`, which will then further pass it to it's `DefaultAudioSink`. Does this make sense?\r\n\r\n> At the same time as populating its internal buffer, we can also check the current playout position via `AudioSink.getCurrentPositionUs`, as we have a reference to the sink.\r\n\r\nI'm a bit confused here -- where's the reference? i.e. where in my custom `AudioProcessor` am I able to access the sink?"
      },
      {
        "user": "andrewlewis",
        "created_at": "2018-04-11T19:53:47Z",
        "body": "You need to instantiate the `DefaultAudioSink` yourself so that you can provide a reference to it to your custom audio processor. This means you need to instantiate the `MediaCodecAudioRenderer` yourself, passing in the sink. Overriding `buildAudioRenderers` from `DefaultRenderersFactory` is a good way to do that."
      },
      {
        "user": "kunaljathal",
        "created_at": "2018-04-14T00:46:58Z",
        "body": "Okay, gotcha. I think my final clarification is the following:\r\n\r\n>At the same time as populating its internal buffer, we can also check the current playout position via `AudioSink.getCurrentPositionUs`, as we have a reference to the sink. The position can be converted into a frame count, which in turns maps onto a byte offset in the internal buffer, which is the position up to which audio has been played out. You can handle this portion of the internal buffer however you want, then compact the buffer.\r\n\r\nDoes this imply that the buffer of data I'm getting in the `queueInput` call contains audio data, _a portion of which has already been played out_? Because, if I'm understanding correctly, what you're saying is that I can discard this portion, and collect the samples after it, which are representative of the samples that are about to be played out next (presumably soon after the `getOutputBuffer` call), and hence in sync with the video frames about to be played out next."
      },
      {
        "user": "andrewlewis",
        "created_at": "2018-04-16T11:02:10Z",
        "body": "The audio data just passed to `queueInput` has not been played out yet, as the `AudioTrack` is 'downstream' from the chain of audio processors. The audio data you've already buffered on previous invocations of `queueInput` may have been played out, though. The idea is to use `getCurrentPositionUs` to determine how many bytes of the input have been played out so far, which corresponds to a position in your internal buffer.\r\n\r\nAs the internal buffer can't grow indefinitely, when you determine that some of its audio has been played (based on the current position), you'll need to discard data up to there from your internal buffer, and update a stored offset for the start of the internal buffer. This offset should be reset on each call to `flush`.\r\n\r\nOne other caveat, which may not be relevant to your use case: speed/pitch/trim silence are applied after any custom `AudioProcessor`s at the moment, so the player position will reflect any offset/scaling applied for those."
      },
      {
        "user": "kunaljathal",
        "created_at": "2018-04-16T17:36:39Z",
        "body": "OK, I see. In the case of speed/pitch/trim etc applied _after_ the custom `AudioProcessor` -- is this factored into the position returned by `getCurrentPositionUs` ? To be clear, I'll be using ExoPlayer for streaming video most of the time i.e. the use case that's most relevant to me is interruptions in streaming -- in the case of network issues etc., if the video ends up momentarily lagging / pausing and resuming (i.e. buffering) for any reason, I would want to stop/re-play the audio at the correct positions, keeping it in sync with the video at all times. So if `getCurrentPositionUs` is going to incorporate all that, then that's enough for me."
      },
      {
        "user": "andrewlewis",
        "created_at": "2018-04-17T08:14:07Z",
        "body": "The position returned by `getCurrentPositionUs` will take into account playback parameters, buffering, pausing etc.. If you're not overriding the default playback speed it should work fine."
      },
      {
        "user": "kunaljathal",
        "created_at": "2018-06-11T13:30:39Z",
        "body": "Thanks, this worked. "
      }
    ]
  },
  {
    "number": 4102,
    "title": "Is BUFFER_FLAG_DECODE_ONLY officially supported by AndroidTV",
    "created_at": "2018-04-09T11:11:22Z",
    "closed_at": "2018-04-09T12:58:42Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4102",
    "body": "Hello,\r\nIn ExoPlayer this decoder flag BUFFER_FLAG_DECODE_ONLY is defined as (0x80000000). \r\n1. Is this flag officially supported by Google? \r\n2. Is there any policy to ensure that device manufacturers (especially AndroidTV) supports it? \r\n3. Is it tested in any test suite (e.g. CTS, GTS)?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4102/comments",
    "author": "mmbahaa",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2018-04-09T12:58:22Z",
        "body": "`BUFFER_FLAG_DECODE_ONLY` is specific to ExoPlayer and handled within the library. It's not fed to the underlying platform, and so there are no platform requirements."
      }
    ]
  },
  {
    "number": 4091,
    "title": "Click event on SimpleExoPlayerView gets propagated trough [Chromebook]",
    "created_at": "2018-04-06T11:46:49Z",
    "closed_at": "2019-01-23T23:17:00Z",
    "labels": [
      "question",
      "need more info"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4091",
    "body": "We are using ExoPlayer in Android app and it works as expected. The issue occurs when app is installed on Chromebook. \r\nWhen clicking on video, event is propagated and in our case new video is started. Expected behaviour would be to show video controls as on standard Android devices.\r\n\r\nSimpleExoPlayerView holder also has clickable parameter but that does not help either.\r\nDid anyone had similar experience or have some suggestion on how to fix this?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4091/comments",
    "author": "zarkooroz",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2018-12-18T20:18:53Z",
        "body": "Does this still reproduce? It sounds like a bug in ChromeOS support for Android apps, rather than an ExoPlayer bug. It's possible that they've fixed it by now. If not, I think it should probably be reported to the ChromeOS team?"
      },
      {
        "user": "ojw28",
        "created_at": "2019-01-23T23:17:00Z",
        "body": "Closing due to lack of update. As above, if this still reproduces then I think you should probably report the issue to the ChromeOS team."
      }
    ]
  },
  {
    "number": 4090,
    "title": "Recording live stream in mobile app using exoplayer",
    "created_at": "2018-04-06T11:17:22Z",
    "closed_at": "2018-04-06T11:22:46Z",
    "labels": [
      "duplicate",
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4090",
    "body": "Hello,\r\n\r\n Can I record live stream, store it in mobile sdcard and play it back afterwards when ever I want to play using exoplayer? If it is not possible with exoplayer, can you please suggest me the ways to accomplish that task. ",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4090/comments",
    "author": "RadhikaBalla",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2018-04-06T11:22:46Z",
        "body": "Seems to be the same request as #3877. We don't support this at the moment and I don't have any recommendations for alternatives I'm afraid. Please subscribe to that issue if you want to receive updates."
      }
    ]
  },
  {
    "number": 4087,
    "title": "Share a video that is streaming from API",
    "created_at": "2018-04-04T20:01:05Z",
    "closed_at": "2018-04-04T21:25:04Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4087",
    "body": "I have tried searching and I cannot find the answer anywhere and I really need to know whether or not ExoPlayer has the following functionality:\r\nI am making an API call which has HLS stream that the exo player is loading and playing. I need to implement a feature to share this video. I need to know whether I can get access to these files exoplayer has downloaded so that I can convert it to a .mp4 format and share it out to other social media apps? ",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4087/comments",
    "author": "priyakar",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2018-04-04T21:25:04Z",
        "body": "This is not something we support, sorry!"
      }
    ]
  },
  {
    "number": 4074,
    "title": "How to resolve DataSource length  in the the middle of the playback to enable seek",
    "created_at": "2018-04-03T14:00:42Z",
    "closed_at": "2018-04-06T15:42:14Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4074",
    "body": "Hello I do have specific question on how implement this behavior in exoplayer.\r\n\r\nI do have an application which is playing transcoded audio files - chapters of an audiobook ( live transcoding from any format to ogg+opus - so stream length is not know in advance - stream is chunk encoded HTTP response).\r\nTo enable best experience I use progressive download - I start to read transcoded file from server as quickly as possible and store it to local file and when some data are in that file I start the player. \r\nWhen whole file is downloaded I inform related components and I want to switch/restart playback  to exactly same place in the stream (ideally that no discontinuity is audible), but this time it should take into account known data length and enable to seek within whole file.\r\n\r\nI have been looking around a bit and get started with `CacheDataSource` - but it's actually doing slightly different thing -   it caches data as they are consumed by player - so download lasts almost as long as the  playback. Also it does not support by default caching of streams with unknown  length, but it can be changed with a flag. But it still will not enable to download it as quickly as possible.\r\n\r\nNow I created my own cache system and related `DataSource` -  which is backed by this cache. Basically it enables to write to cache item in a separate thread, while `DataSource` can consume it if there are some data and blocks to wait for more data, if they should still come.   Now when the download is complete I'd like to signal player to reload/reopen this `Datasource` from same position, but this time it'll also get total length of stream - so it should enable seek.  \r\nNow it works manually - if I reopen the Source with new prepare call (after download finished in the other thread) I can seek within it.\r\nBut how to make it smooth and automatic?\r\n\r\nI have been also looking at `DynamicConcatenatingMediaSource` -  here I suppose I could be able to replace currently playing item with new one - using same data source - but how to assure that it starts at exactly same position. I'm using MediaSession extension - so it has to play well with it too - ideally not to transmit change in metadata, but only change in `PlayState` - with current position, newly discovered total duration and seek actions enabled.\r\n\r\nI usually try to find things by myself,  but exoplayer is pretty complex beast, so I'm afraid I'd might get seriously lost while seek right solution . So any advice from experts is very much welcomed.   ",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4074/comments",
    "author": "izderadicka",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2018-04-06T15:42:14Z",
        "body": "#4062 probably addresses most of this: you should be able to use `CacheDataSource` for playback and a `Downloader` for downloading the media at the same time, as long the content gets split up into multiple files when cached. Please try that first and let us know if anything else comes up. Thanks!"
      }
    ]
  },
  {
    "number": 4070,
    "title": "Make Cache more extensible",
    "created_at": "2018-04-02T09:36:28Z",
    "closed_at": "2018-04-02T14:59:30Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4070",
    "body": "I'm trying to extend ExoPlayer's caching mechanism so that content for multiple keys can be stored in a single file. The goal is to be able to download HLS in a way that I obtain a result that can be played (and seeked through) in ExoPlayer and other players. In order to reach that goal, I'm hoping to modify ExoPlayer's cache so that all ts chunks of the HLS stream are stored sequentially in one file, so that the cache storage consists of the cache index file, the HLS m3u8 manifest and a single large ts file that contains all ts chunks. I would then be able to play the file in ExoPlayer with seek support (using the index structure from the cached m3u8 manifest) and in other players such as VLC (which supports seeking in ts files).\r\n\r\nNow, the problem is that although the Cache system is extensible, it seems to be limited to cases where a single original file is split to one or many cache files, not the other way round. I am hoping to modify the Cache system to be more extensible in that regard. I'd imagine this would work by not directly passing `File`s around, but some kind of `CacheFile` class that offers an abstraction to the underlying storage, so that it's possible to provide `OutputStream`s and `InputStream`s that are offset from the file start.\r\n\r\nAnother motivation for this change would be that AFAICT, the current caching system doesn't allow caching to external storage such as external SD cards on devices running Android 5 or newer. This is because access to these locations is only allowed via `Uri`s and the `ContentResolver`.\r\n\r\nI'm willing to invest some time into implementation and submitting a pull request if you could give me directions how a suitable implementation of such a change would look like.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4070/comments",
    "author": "FD-",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2018-04-02T14:59:30Z",
        "body": "I think this would require some fairly in depth changes. It's probably easier just to implement some other downloading component from scratch, to be honest, since I can't think of any easy way to adapt the existing caching mechanism for this use case. Due to the in depth nature of the changes that would be needed, it's unfortunately not something we can provide guidance on at this point. Sorry!"
      }
    ]
  },
  {
    "number": 4061,
    "title": "VIDEO FRAME PAUSE on 2.0x speed",
    "created_at": "2018-03-30T10:31:30Z",
    "closed_at": "2018-04-04T10:48:14Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4061",
    "body": "I am using  2.7.2 exoplayer library.\r\n\r\nIn PlayerActivity::initializePlayer(), add\r\nplayer.setPlaybackParameters(new PlaybackParameters(2.0f, 1.0f));\r\n\r\nThen build and install the demo app on a Google Pixel Phone with Android 7.1 and some other device also, run the demo app, and play a 1080p video, for example, Misc -> Screens 1080p (FMP4, H264, No Audio)\r\n\r\nplease help.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4061/comments",
    "author": "vishal105",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2018-04-04T10:48:14Z",
        "body": "This is probably just a case of the decoder not being able to keep up. By setting the speedup to 2 you're doubling the frame rate of the video. You can verify this by looking at the counters at the top of the screen in the demo app. The number labeled 'db' shows the number of buffers that were dropped due to being late.\r\n\r\nIf you find that something else is going on please provide more information and I'll reopen the issue."
      },
      {
        "user": "vishal105",
        "created_at": "2018-04-05T04:35:40Z",
        "body": "but Its happen in some devices not all devices. If any other method to set a speed playing in exoplayer  then suggest me.\r\nThanking You."
      },
      {
        "user": "andrewlewis",
        "created_at": "2018-04-05T10:37:48Z",
        "body": "Some devices can play video a higher frame rates. For example, this plays smoothly for me on a Pixel 2 but not on a Nexus 6P. You could try playing a lower resolution video, which should be less computationally expensive."
      }
    ]
  },
  {
    "number": 4031,
    "title": "Custom listener to show playback controls",
    "created_at": "2018-03-24T11:22:17Z",
    "closed_at": "2018-05-04T09:11:33Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4031",
    "body": "Hi. I want to to show playback controls only when onTouch event is fired. How to prevent control buttons being showed up when on long pressing, dragging etc.?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4031/comments",
    "author": "elnurvl",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2018-03-26T10:48:12Z",
        "body": "Our `PlayerView` class checks for `MotionEvent.ACTION_DOWN` to show the playback controls. \r\n\r\nIf you like to have a custom behavior, you could extend `PlayerView` and override `onTouchEvent(MotionEvent ev)`. In there, you can call `showController()` or `hideController()` to achieve your intended effect."
      },
      {
        "user": "elnurvl",
        "created_at": "2018-03-26T12:00:02Z",
        "body": "I use ExoPlayerFactory to make a player object. I am not sure if it is the correct way to make a player object with new statement. Can't I set onTouchListener after player object being created?"
      },
      {
        "user": "tonihei",
        "created_at": "2018-03-26T12:22:23Z",
        "body": "Yes, ExoPlayerFactory is the correct way to create the player. I think that's irrelevant for your problem though. For my suggestion, you'd need to overwrite `PlayerView` which is the UI component you may have put somewhere in your layout."
      },
      {
        "user": "elnurvl",
        "created_at": "2018-03-26T14:37:13Z",
        "body": "Sorry, I confused `PlayerView` with `ExoPlayer` object. So in this case I should create my own widget with custom `onTouchEvent` method and use it in my layout instead of standard `PlayerView`, right?"
      },
      {
        "user": "tonihei",
        "created_at": "2018-03-26T14:39:54Z",
        "body": "Sounds right."
      },
      {
        "user": "elnurvl",
        "created_at": "2018-03-26T14:49:45Z",
        "body": "Thank you. It would be more convenient to do customization if a method like setOnTouchListener are added to PlayerView class in the next releases."
      },
      {
        "user": "elnurvl",
        "created_at": "2018-05-02T20:54:07Z",
        "body": "@tonihei , I am trying to implement your solution to customize the event which is responsiple for showing playback controls. Unfortunately it is not working. Because `controller` variable is private and I cannot access it in my own `PlayerView`. I cannot use `super` either, because it checks for `MotionEvent.ACTION_DOWN` implicitly as you said. What I need is to fire the event when a user single taps on the player. Isn't it possible to achieve it in ExoPlayer without changing the library files?"
      },
      {
        "user": "tonihei",
        "created_at": "2018-05-03T09:34:55Z",
        "body": "You can change the visibility of the controller with `showController()` and `hideController()` and you can listen to its visibility with `setControllerVisibilityListener`. That means you don't actually need access to the `controller` variable to achieve your custom `onTouchEvent` handling.\r\n\r\nTo confirm that it's actually working, I tried to implement what you are trying to do with the following code.  Using this custom view, the playback controls are only shown or hidden for short taps. Dragging and long presses are filtered out.\r\n\r\n```\r\npublic final class CustomPlayerView\r\n    extends PlayerView implements PlayerControlView.VisibilityListener {\r\n\r\n  private static final float DRAG_THRESHOLD = 10;\r\n  private static final long LONG_PRESS_THRESHOLD_MS = 500;\r\n\r\n  private boolean controllerVisible;\r\n  private long tapStartTimeMs;\r\n  private float tapPositionX;\r\n  private float tapPositionY;\r\n\r\n  public CustomPlayerView(Context context) {\r\n    this(context, null);\r\n  }\r\n\r\n  public CustomPlayerView(Context context, AttributeSet attrs) {\r\n    this(context, attrs, 0);\r\n  }\r\n\r\n  public CustomPlayerView(Context context, AttributeSet attrs, int defStyleAttr) {\r\n    super(context, attrs, defStyleAttr);\r\n    setControllerVisibilityListener(this);\r\n  }\r\n\r\n  @Override\r\n  public boolean onTouchEvent(MotionEvent ev) {\r\n    switch (ev.getActionMasked()) {\r\n      case MotionEvent.ACTION_DOWN:\r\n        tapStartTimeMs = SystemClock.elapsedRealtime();\r\n        tapPositionX = ev.getX();\r\n        tapPositionY = ev.getY();\r\n        break;\r\n      case MotionEvent.ACTION_MOVE:\r\n        if (tapStartTimeMs != 0\r\n            && (Math.abs(ev.getX() - tapPositionX) > DRAG_THRESHOLD\r\n                || Math.abs(ev.getY() - tapPositionY) > DRAG_THRESHOLD)) {\r\n          tapStartTimeMs = 0;\r\n        }\r\n        break;\r\n      case MotionEvent.ACTION_UP:\r\n        if (tapStartTimeMs != 0) {\r\n          if (SystemClock.elapsedRealtime() - tapStartTimeMs < LONG_PRESS_THRESHOLD_MS) {\r\n            if (!controllerVisible) {\r\n              showController();\r\n            } else if (getControllerHideOnTouch()) {\r\n              hideController();\r\n            }\r\n          }\r\n          tapStartTimeMs = 0;\r\n        }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  @Override\r\n  public void onVisibilityChange(int visibility) {\r\n    controllerVisible = visibility == View.VISIBLE;\r\n  }\r\n}\r\n```"
      },
      {
        "user": "elnurvl",
        "created_at": "2018-05-03T16:44:57Z",
        "body": "Thank you! Exactly what I was looking for."
      }
    ]
  },
  {
    "number": 4023,
    "title": "Playback buffer value",
    "created_at": "2018-03-22T23:21:12Z",
    "closed_at": "2018-03-23T17:12:36Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/4023",
    "body": "I am writing a DASH video player using ExoPlayer demo app as the base for my application. How can I get the actual playback buffer size in seconds, without messing with the actual MediaSource and other  code libraries (and short of maintaining my own variable tracking media downloaded, played, paused and all that mess)? \r\nBy actual playback buffer size, I mean the 'total duration duration of the video chunks that's already buffered' - 'total duration of the video chunks that's been watched'. \r\nFor example, if the player has downloaded 60s worth of data and the renderer has already played 50s of this video, I want to know that there's 10 more seconds to go before the player might hit a re-buffer. I am trying to eventually get to a feature that minimizes re-buffering events.\r\nI want to do this with minimal changes to the existing code and achieve this with event listeners, as much as possible. I know if I write my own trackSelector, this is easy to obtain. But, can I get it at the app layer?\r\nThanks for any pointers.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/4023/comments",
    "author": "kanthicn1",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2018-03-23T09:23:11Z",
        "body": "`player.getBufferedPosition() - player.getCurrentPosition()` should give you what you want for most situations. \r\n\r\nThe only exception is when the player pre-buffers the following items in a playlist. In this case the calculation would only give you the buffered duration in the current playlist item. But, we are planning to fix this soon. "
      },
      {
        "user": "kanthicn1",
        "created_at": "2018-03-23T16:44:52Z",
        "body": "Thank you! This works perfectly for me right now. However, I want to understand the caveat in this solution that you mentioned. If the player pre-buffers the other items in the playlist, are you saying this method won't give me the buffer values of all the tracks? But, this method will always give me the correct buffer value of the track that is currently being played. Correct?"
      },
      {
        "user": "tonihei",
        "created_at": "2018-03-23T16:48:30Z",
        "body": "Yes, that's correct. We are currently adding a new method the interface `Player.getTotalBufferedDuration()` which returns the total duration of buffered media across all playlist items."
      },
      {
        "user": "kanthicn1",
        "created_at": "2018-03-23T17:12:36Z",
        "body": "Great!\r\nThanks again for your help."
      }
    ]
  },
  {
    "number": 3993,
    "title": "Making my own ABR algorithm in HLS",
    "created_at": "2018-03-15T11:20:15Z",
    "closed_at": "2018-03-19T10:29:12Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3993",
    "body": "Hello,\r\n\r\nI am making my own ABR algorithm class in HLS extended from BaseTrackSelection and I am facing with a problem. I need targetDuration in my class but there is no way I can get the information from the application level. Plus, I am making my own LoadController, and it needs bitrate information. In this case, is there simple way that I can pass these information to my class in application level?(like PlayerActivity) \r\n\r\nThank you ",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3993/comments",
    "author": "tedKim5178",
    "comments": [
      {
        "user": "AquilesCanta",
        "created_at": "2018-03-15T11:25:38Z",
        "body": "`Player.EventListener#onTimelineChanged`  includes the manifest as one of the arguments. An `HlsManifest` includes a media playlist as one of its fields. Finally, HlsMediaPlaylist contains targetDurationUs. Hope this helps."
      },
      {
        "user": "AquilesCanta",
        "created_at": "2018-03-15T11:31:54Z",
        "body": "Sorry, I missed the bitrate part. Could you clarify the usecase for the bitrate? You can use the media source event listener to get load events to retrieve certain information. The master playlist will also include useful information (also obtainable through onTimelineChanged)."
      },
      {
        "user": "tedKim5178",
        "created_at": "2018-03-18T06:16:48Z",
        "body": "Thanks for your reply. You solved my problem perfectly. Now I am using onTimelineChanged method to get targetDurationUs. Also, I found out onTrackSelected method in LoadControl. I can use this method to get bitrate. Thanks for your help!! Best Player ever!"
      }
    ]
  },
  {
    "number": 3992,
    "title": "Exoplayer sequence for interacting with Widevine License Proxy Server",
    "created_at": "2018-03-15T08:23:29Z",
    "closed_at": "2018-05-10T01:07:55Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3992",
    "body": "Hi, this is a question and not an issue.\r\n\r\nI am writing code to play a Widevine encrypted DASH content, through a Proxy License server which is used for authentication and authorization.\r\n\r\nI went through the Exoplayer demo application (where direct License server is used) and understood the following sequence:\r\n1. Create DrmSessionManager using the url of the Widevine License server.\r\n2. Associate this session manager with an instance of SimpleExoPlayer.\r\n3.  Then call player.prepare() and player.start().\r\n\r\nI wanted to understand how would this sequence change, in case of Proxy License Server, where the Application first obtains the license from the server and then sets the license explicitly to the ExoPlayer.\r\n\r\nI also wanted to understand:\r\n- how to obtain the drmInitData required to be passed in the mediaDrm.getKeyRequest().\r\n- how to set the License into ExoMediaDrm object.\r\n\r\nShould I extend DefaultDrmSessionManager, or should I extend DefaultDrmSession?\r\n\r\nDo we have any code samples for the same?\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3992/comments",
    "author": "shivaksk1",
    "comments": [
      {
        "user": "linhai326",
        "created_at": "2018-03-20T23:32:04Z",
        "body": "i think all you need to do is to override MediaDrmCallback.executeKeyRequest().\r\nin this function, you will send the request to your proxy server and receive the response and then return it.\r\nThe rest should be handled by exoplayer."
      }
    ]
  },
  {
    "number": 3982,
    "title": "MergingMediaSource merge two LoopingMediaSource",
    "created_at": "2018-03-13T18:46:43Z",
    "closed_at": "2018-03-13T21:08:17Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3982",
    "body": "### Issue description\r\nIs there option to merge two `LoopingMediaSources`? In my app I want to merge looped audio mediasource of different duration than looped video mediasource. How can I merge these two mediasources together?\r\n### Reproduction steps\r\nCreate video and audio `LoopedMediaSource`, try to merge it with `MergingMediaSource` - results with video and audio stopping at end of the video.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3982/comments",
    "author": "feelfreelinux",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2018-03-13T21:08:17Z",
        "body": "This is not supported.\r\n\r\nIt should be possible for you to achieve what you want with two separate player instances, one for audio and one for video, and a bit of co-ordination in your app code to start them both at the same time. You wont get completely accurate A/V sync with this approach, but the fact your audio is a different duration and loops implies you're not concerned about A/V sync anyway."
      }
    ]
  },
  {
    "number": 3980,
    "title": "How to listen video position",
    "created_at": "2018-03-13T09:19:08Z",
    "closed_at": "2018-03-26T11:07:56Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3980",
    "body": "I'm using ExoPlayer 2.7.0 and I would like to listen player position in order to take actions. I couldn't find specific method for it. Could you please suggest me a proper solution?\r\n\r\nThanks",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3980/comments",
    "author": "orhunkupeli7",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2018-03-13T09:42:53Z",
        "body": "You can query `player.getCurrentPosition()` as often as you like. The position is updated all the time, thus we can't send repeated updates in a callback. The progress bar in our UI module, for example, is updated by posting a message every 200ms."
      },
      {
        "user": "orhunkupeli7",
        "created_at": "2018-03-13T12:40:31Z",
        "body": "So, it is okay that to listen it with a handler."
      },
      {
        "user": "tonihei",
        "created_at": "2018-03-13T13:01:59Z",
        "body": "Yes, that's certainly possible."
      },
      {
        "user": "meikaiss",
        "created_at": "2018-03-15T03:48:49Z",
        "body": "Why not provide onProgressChangedListener?  handler is Very troublesome."
      },
      {
        "user": "tonihei",
        "created_at": "2018-03-15T09:17:08Z",
        "body": "The problem with a onProgressChangedListener is that the position changes about every 10 milliseconds. Sending such a huge amount of callbacks would use much more CPU time (and thus battery) than polling the progress infrequently. Most progress bars don't have a resolution which would allow you to show a 10ms difference either, thus it also wouldn't make sense for most purposes. \r\n\r\nAlso, using a handler is not that troublesome:\r\n```\r\npublic class ProgressTracker implements Runnable {\r\n  \r\n  private final Player player;\r\n  private final Handler handler;\r\n\r\n  public void ProgressTracker(Player player) {\r\n    this.player = player;\r\n    handler = new Handler();\r\n    handler.post(this);\r\n  }\r\n\r\n  public void run() {\r\n    long currentPosition = player.getCurrentPosition();\r\n    handler.postDelayed(this, 200 /* ms */);\r\n  }\r\n}\r\n"
      },
      {
        "user": "orhunkupeli7",
        "created_at": "2018-03-16T10:48:21Z",
        "body": "public class ProgressTracker implements Runnable {\r\n\r\n    private final Player player;\r\n    private final Handler handler;\r\n    private PositionListener positionListener;\r\n    private final static int DELAY_MS = 1000;\r\n\r\n    protected ProgressTracker(Player player, PositionListener positionListener) {\r\n        this.player = player;\r\n        this.positionListener = positionListener;\r\n        handler = new Handler();\r\n        handler.post(this);\r\n    }\r\n\r\n    public void run() {\r\n        int position = (int) player.getCurrentPosition();\r\n        Log.e(\"Position::\", String.valueOf(player.getCurrentPosition()));\r\n        positionListener.progress(position);\r\n        handler.postDelayed(this, DELAY_MS);\r\n    }\r\n\r\n    protected void purgeHandler() {\r\n        handler.removeCallbacks(this);\r\n    }\r\n}\r\n\r\nI did like that. However output of the log is:\r\n24358\r\n24358\r\n25088\r\n25088\r\n25357\r\n25368\r\n26088\r\n\r\nWhy there are duplicates how can I get rid of them"
      },
      {
        "user": "tonihei",
        "created_at": "2018-03-16T10:57:09Z",
        "body": "I guess because either the position hasn't changed (for example while buffering) or you have multiple active ProgressTrackers. \r\n\r\nIn general, please direct these more generic programming question to StackOverflow or similar sites. This issue tracker is primarily for answering ExoPlayer specific questions."
      },
      {
        "user": "orhunkupeli7",
        "created_at": "2018-03-16T11:05:26Z",
        "body": "thanks, sorry for inconvenience.\r\n"
      },
      {
        "user": "tonihei",
        "created_at": "2018-03-26T11:07:56Z",
        "body": "Closing because question seems to be answered. Feel free to reopen if not."
      }
    ]
  },
  {
    "number": 3978,
    "title": "Render video for further processing",
    "created_at": "2018-03-12T14:46:45Z",
    "closed_at": "2018-03-21T11:44:40Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3978",
    "body": "\r\n### Issue description\r\nIs it possible to use the new Clock in such a way that rendering is not related to realtime? I'd like to apply some further processing to the video frames, and keep them all. Once the processing is done for one frame, advance the Clock so that the next frame is rendered. If possible, could you advise me about what could go wrong, or where to pay attention?\r\n\r\n### Reproduction steps\r\nNA\r\n\r\n### Version of ExoPlayer being used\r\n2.7.0\r\n\r\n### Device(s) and version(s) of Android being used\r\nany\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3978/comments",
    "author": "b0g8",
    "comments": [
      {
        "user": "botaydotcom",
        "created_at": "2018-03-13T10:33:11Z",
        "body": "I think the Clock interface is mostly for facilitating testing, and in fact some of our tests use custom clock implementations that are advanced manually. It was not designed for your use case, but it might work.\r\n\r\nHowever. one problem I can think of for your approach is that in many places in ExoPlayer, we are still using `SystemClock`, and have not migrated to use the new interface yet. This is something that can be changed, but we don't have any plan to clean up this part anytime soon. Therefore, if you use your own Clock implementation, it may go out of sync with these components.\r\nSome other things you may need to pay attention to:\r\n- If you are working on a custom `Renderer` and extending from `MediaCodecVideoRenderer`, be aware that `MediaCodecVideoRenderer` will drop frames if they are late using a real time clock (`SystemClock`). \r\n- If you play any Audio stream at the same time, the `AudioTrack` from system will use real time. Therefore, a manual clock for Video stream will make Audio and Video out of sync quite soon.\r\n- Things like live streams (maybe not for your use case), will depend on real-time clock to work."
      },
      {
        "user": "andrewlewis",
        "created_at": "2018-03-13T15:36:59Z",
        "body": "One additional suggestion related to those points: if you are only rendering video you may be able to do this kind of batch processing easily by subclassing `MediaCodecVideoRenderer`, returning `this` from `getMediaClock`, and implementing `MediaClock` with `getPositionUs` returning the last rendered frame time (plus any additional offset required to make the next frame not too early) based on the presentation time passed to `onProcessedOutputBuffer`. (You can prevent frames from being dropped by overriding `shouldDropOutputBuffer` and `shouldDropBuffersToKeyframe` to return false, though frames shouldn't be late in this setup as you are advancing the player's position yourself.)"
      },
      {
        "user": "b0g8",
        "created_at": "2018-03-13T16:05:34Z",
        "body": "Audio is rendered too, but to a file, not to the AudioTrack. Should the getMediaClock for MediaCodecAudioRenderer just return false? Will audio sync to video renderer time?"
      },
      {
        "user": "andrewlewis",
        "created_at": "2018-03-13T16:35:17Z",
        "body": "Yes. You can only have one media clock at a time. The audio renderer doesn't do any synchronization when it processes output because it's providing the position.\r\n\r\nDepending on your requirements, you may want to limit how far your audio renderer can read ahead of the video renderer (or fall behind, I guess, though this seems unlikely to happen in practice). I think they should be kept roughly synchronized by upstream buffering control, which is uses the player position coming from your video renderer. You can just return `false` from `MediaCodecRenderer.processOutputBuffer` whenever you don't want to handle the provided buffer yet."
      },
      {
        "user": "b0g8",
        "created_at": "2018-03-14T14:23:44Z",
        "body": "Audio data is processed as well. It may take longer than processing the video data. In order to limit how far the audio renderer can fall behind the video renderer, should the video renderer get the position of the audio renderer, and decide whether to advance or not?"
      },
      {
        "user": "andrewlewis",
        "created_at": "2018-03-14T16:15:15Z",
        "body": "That sounds sensible and can't do any harm as long as you make sure the renderers can't get stuck not consuming any data. (Just to reiterate, the player can only have one enabled renderer that provides a media clock at a time. So you can't have both renderers provide positions in the \"normal\" way. I guess you'll just add a check at the start of `processOutputBuffer` for each renderer: one can use the player position and the other will directly check the last processed output buffer time of the other renderer.)"
      },
      {
        "user": "AquilesCanta",
        "created_at": "2018-03-21T10:58:10Z",
        "body": "@b0g8 can this be closed?"
      },
      {
        "user": "b0g8",
        "created_at": "2018-03-21T11:44:40Z",
        "body": "Very valuable information here, at least for me. Thanks."
      }
    ]
  },
  {
    "number": 3973,
    "title": "exoplayer updation",
    "created_at": "2018-03-12T06:57:56Z",
    "closed_at": "2018-03-12T08:58:43Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3973",
    "body": "I am facing resource error in track selection helper class once i included that class to my application . I rebuilded  and cleaned my project also but error is still there. I am trying to use that file but its saying that class is never used.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3973/comments",
    "author": "pals-ric",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2018-03-12T08:58:43Z",
        "body": "Sorry, this issue tracker isn't the right place to ask for this kind of help.\r\n\r\nPlease could you redirect questions like this to StackOverflow rather than this issue tracker? Thanks.\r\n"
      }
    ]
  },
  {
    "number": 3959,
    "title": "Wrong constructor in DefaultLoadControl",
    "created_at": "2018-03-07T15:09:08Z",
    "closed_at": "2018-03-07T15:17:15Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3959",
    "body": "### Issue description\r\nParameters passed in different order in DefaultLoadControl constructor with parameter DefaultAllocator.\r\nThe constructor  \r\n```\r\npublic DefaultLoadControl(DefaultAllocator allocator) {\r\n    this(\r\n        allocator,\r\n        DEFAULT_MIN_BUFFER_MS,\r\n        DEFAULT_MAX_BUFFER_MS,\r\n        DEFAULT_BUFFER_FOR_PLAYBACK_AFTER_REBUFFER_MS,\r\n        DEFAULT_BUFFER_FOR_PLAYBACK_MS,\r\n        DEFAULT_TARGET_BUFFER_BYTES,\r\n        DEFAULT_PRIORITIZE_TIME_OVER_SIZE_THRESHOLDS);\r\n  }\r\n```\r\nsets as 4th parameter `DEFAULT_BUFFER_FOR_PLAYBACK_AFTER_REBUFFER_MS` and as 5th parameter `DEFAULT_BUFFER_FOR_PLAYBACK_MS` . If you check the parameters of the constructor called with `this`\r\n```\r\npublic DefaultLoadControl(\r\n      DefaultAllocator allocator,\r\n      int minBufferMs,\r\n      int maxBufferMs,\r\n      int bufferForPlaybackMs,\r\n      int bufferForPlaybackAfterRebufferMs,\r\n      int targetBufferBytes,\r\n      boolean prioritizeTimeOverSizeThresholds) {\r\n    this(\r\n        allocator,\r\n        minBufferMs,\r\n        maxBufferMs,\r\n        bufferForPlaybackMs,\r\n        bufferForPlaybackAfterRebufferMs,\r\n        targetBufferBytes,\r\n        prioritizeTimeOverSizeThresholds,\r\n        null);\r\n  }\r\n```\r\nYou can see that the 4th parameter is `bufferForPlaybackMs` and the 5th is `bufferForPlaybackAfterRebufferMs`. Therefore, a different order of parameters. First constructor is wrong.\r\n\r\n\r\n### Version of ExoPlayer being used\r\n2.6.1\r\n\r\n### Device(s) and version(s) of Android being used\r\nAll\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3959/comments",
    "author": "adrixgc",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2018-03-07T15:17:15Z",
        "body": "It's fixed already (in 2.7.0)."
      }
    ]
  },
  {
    "number": 3950,
    "title": "[Question] Is it bad to create/maintain large number of Renderers for a SimpleExoPlayer?",
    "created_at": "2018-03-07T02:38:40Z",
    "closed_at": "2018-03-07T13:50:30Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3950",
    "body": "This is a question.\r\n\r\nMy use case is: I want to support different DRM types using a single SimpleExoPlayer instance. The way I do is: extend DefaultRendererFactory, and feed it with more than one DrmSessionManager (so an array of size from 0 to many DrmSessionManagers). For each of that DrmSessionManager (one will support one DRM types/scheme/license url), I create an array of Video renderers (and Audio renderers) for it. In case of supporting 3 Drm types, there will be 10 Renderers in total (1 (non DRM), 3 (DRM) for Video, same 4 for Audio, 1 for Text, 1 for Meta). (The exact number may varies, but you got the point).\r\n\r\nI read that creating Renderer is not expensive, I also acknowledge that the TrackSelector will pick the right Renderer for its track, so there will be no overlapped Renderers, but I wonder if maintaining a large number of Renderers using one SimpleExoPlayer instance is bad or not.\r\n\r\nThanks in advance.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3950/comments",
    "author": "eneim",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2018-03-07T10:20:08Z",
        "body": "It's definitely unorthodox, but I can't think of any reason this would be fundamentally problematic, so if it works then go for it ;).\r\n\r\nAnother approach that might be cleaner would be to implement a `DrmSessionManager` that supports multiple DRM schemes. I wonder whether it's feasible to do this by creating a `DrmSessionManager` implementation that wraps multiple other `DrmSessionManager`s and then delegates to the one that can handle the content. That approach would probably be a lot simpler, if it works."
      },
      {
        "user": "eneim",
        "created_at": "2018-03-07T12:39:14Z",
        "body": "@ojw28 Oh the composition of DrmSessionManager sounds even better.\r\n\r\nSorry to jumping in detail, I made a quick draft as below, do you think it would work? \r\n\r\nAdmit that I'm not super detailed in how Drm work, the order of methods calling and so on. What I concern is when many Managers involve, even if only one will support the incoming DrmInitData, I cannot make sure it will correctly behave.\r\n\r\n```java\r\npublic class CompositeDrmSessionManager<T extends ExoMediaCrypto> implements DrmSessionManager<T> {\r\n\r\n  private ArrayList<DrmSessionManager<T>> managers;\r\n\r\n  // This is to cache the pair of DrmInitData and the Manager that can acquire a session for it.\r\n  private Pair<DrmInitData, DrmSessionManager<T>> accepted;\r\n\r\n  /** This method should only be called when prepare the Player. */\r\n  public final void addDrmSessionManager(@NonNull DrmSessionManager<T> manager) {\r\n    if (accepted != null) {\r\n      throw new IllegalStateException(\"Cannot call this after canAcquireSession() is called\");\r\n    }\r\n\r\n    if (this.managers == null) this.managers = new ArrayList<>();\r\n    this.managers.add(ToroUtil.checkNotNull(manager));\r\n  }\r\n\r\n  /**\r\n   * This method should only be called when prepare the Player. Maybe for managing the managers to\r\n   * be add to final Player setup.\r\n   */\r\n  public final void removeDrmSessionManager(DrmSessionManager<T> manager) {\r\n    if (this.managers == null) this.managers = new ArrayList<>();\r\n    this.managers.remove(manager);\r\n  }\r\n\r\n  @Override public boolean canAcquireSession(DrmInitData drmInitData) {\r\n    if (managers == null) return false;\r\n    accepted = new Pair<>(null, null);\r\n    for (DrmSessionManager<T> manager : managers) {\r\n      if (manager.canAcquireSession(drmInitData)) {\r\n        accepted = Pair.create(drmInitData, manager);\r\n        break;\r\n      }\r\n    }\r\n\r\n    return accepted.second != null;\r\n  }\r\n\r\n  @Override public DrmSession<T> acquireSession(Looper playbackLooper, DrmInitData drmInitData) {\r\n    return accepted.second != null ? accepted.second.acquireSession(playbackLooper, drmInitData) : null;\r\n  }\r\n\r\n  @Override public void releaseSession(DrmSession<T> drmSession) {\r\n    if (accepted.second != null) accepted.second.releaseSession(drmSession);\r\n  }\r\n}\r\n```"
      },
      {
        "user": "ojw28",
        "created_at": "2018-03-07T13:41:09Z",
        "body": "Only scanned it briefly:\r\n\r\n* I think looping over the managers in `canAcquireSession` is the right approach.\r\n* I'd have thought you'd want to do the same thing in `acquireSession` as well. Relying on `canAcquireSession` having been called first looks unnecessary and error-prone.\r\n* I'm not sure you need the `accepted` member variable. What I do think you need is a `Map<DrmSession, DrmSessionManager>` that sessions you've returned from `acquireSession` back to the underlying manager from which they're obtained. In `releaseSession` you can use this map to find the corresponding manager to call through to. One caveat is that managers may issue the provide session multiple times. So you'll also need to reference count them to know when to remove an entry from the map. So you probably want `Map<DrmSession, Pair<Integer, DrmSessionManager>>`\r\n\r\nNote that if done right, this approach should be flexible enough to play content containing audio and video tracks encrypted with different schemes simultaneously."
      },
      {
        "user": "eneim",
        "created_at": "2018-03-07T13:50:30Z",
        "body": "@ojw28 Thanks for the comment. The last one about different schemes really makes sense to me. \r\nUsing Map was one of my first thought, though maybe keeping an 1 - 1 relationship is enough. But you are right, especially when it becomes more complicated. I think I would spend a bit more time on this Drm thing. Will close this issue for now."
      }
    ]
  },
  {
    "number": 3948,
    "title": "Best Practices Question",
    "created_at": "2018-03-06T22:42:46Z",
    "closed_at": "2018-03-15T09:59:42Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3948",
    "body": "\r\nWe have an application that cycles through potentially many videos and runs for days/weeks. In some instances the videos only play for 10 seconds. All the videos are always copied to the device before we ever play them.  In some cases more than one video is played at the same time.\r\n\r\nWe wanted to ask your advice on best practices for how to use the exoplayer components. Today we create/destroy an instance of PlayerView and SimpleExoPlayer as well as a datasourcefactory and mediasource.  Is what we are doing ok, or do you recommend creating and holding onto sufficient instances of everything for the number of concurrent videos we play (other than the MediaSource, which we have read should not be resused).\r\n\r\nThank you so much\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3948/comments",
    "author": "directable",
    "comments": [
      {
        "user": "botaydotcom",
        "created_at": "2018-03-13T11:06:30Z",
        "body": "Hi @directable ,\r\nI don't think there's any problem create/destroy/recreate player instances repeatedly, except maybe for performance - so if your app is running fine, not slow, janky etc..., that might not be an issue, and you can continue use your current approach if it works. In some cases (activity goes into background, onStop/onStart), it might even be advisable to destroy and recreate the player instance again.\r\nIf you play multiple online streams (although it seems it's not the case for your use-case) one thing I would recommend reusing is the `BandwidthMeter` instance, because it will help the new players to adapt to network condition faster. This is what we do in our Demo app.\r\n\r\nWith that being said, I think you can also use the same player instance to play different `MediaSource`s. At the moment, I think  there are only minor performance gain for doing that, but I have never done any performance comparison between these 2 setups (re-creating multiple players to play multiple streams repeatedly vs using the same player), or work on similar use case to comment on the actual result. You may need to try out and compare it yourself.\r\n\r\nIn the (near) future, we plan to add some features that will help to keep certain useful things when switching streams in one player (for example: keeping the system codecs instead of releasing/creating new ones). That might bring in a bigger performance gain, especially for local playback use-case."
      },
      {
        "user": "directable",
        "created_at": "2018-03-14T22:06:50Z",
        "body": "Thank you so much, this is very helpful. "
      }
    ]
  },
  {
    "number": 3947,
    "title": "HTTPS keep-alive HttpDataSource for all HTTPS requests (Dash/HLS streaming)",
    "created_at": "2018-03-06T17:52:37Z",
    "closed_at": "2018-03-07T14:17:41Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3947",
    "body": "Is it supported to pass/reuse one HTTPS keep-alive connected HttpDataSource for all HTTP requests issued for a series of different Dash/HLS live streaming sessions? For example, while zapping through a list of live channels which all are served from the same base url...",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3947/comments",
    "author": "hariszukanovic",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2018-03-07T10:43:36Z",
        "body": "I think the underlying network stack will reuse sockets underneath the hood in this case, without you having to do anything special."
      },
      {
        "user": "hariszukanovic",
        "created_at": "2018-03-07T13:43:51Z",
        "body": "It sounds right. keep-alive does seem to work at a lower level.\r\nHowever, when I zap, in the system I do see 3 connections active towards the same server.\r\nMy first guess would be they are different HTTP connections that are used for manifest, chunks and drm licence (all of them keep-alive but separate)\r\n\r\nI will try to test this by creating the same HttpDataSource object and use for all of 3."
      },
      {
        "user": "ojw28",
        "created_at": "2018-03-07T14:17:41Z",
        "body": "`DefaultHttpDataSource` instances can only be used by one thing at once (i.e. they cannot make multiple requests at the same time). So trying to share a single instance will almost certainly cause things to break. Also, the underlying network stack will reuse sockets across different `DefaultHttpDataSource` instances anyway.\r\n\r\nThere are probably 3 connections because the player is making three requests in parallel. If you really want to try and pipeline them all to use the same socket then I think you'd have to implement a custom `DataSource` whose `open` method blocks if a request is already in flight. That kind of `DataSource` would be safe for use by multiple components, although note some requests will end up being queued behind others."
      },
      {
        "user": "hariszukanovic",
        "created_at": "2018-03-07T17:15:14Z",
        "body": "Thanx for your responses so far...\r\n\r\nI'll leave out the DRM call at this point, to make it simpler... \r\nWhen not using DRM, I actually see only 2 connections towards the server. Also, I can confirm I see these 2 are keep-alive across a series of plays issued for different Dash URLs on the same server. \r\n\r\nMy complete intention is to somehow have both keep-alive using a single TCP connection to the server and see pipelining of HTTP requests on it, but we could live without the pipelining part, for now, I'm sure :)\r\nPerhaps I am trying to find some support for HTTP2 in Exo?\r\n\r\nIf I understand correctly, you have confirmed that to achieve this I need to use only 1 DataSource for all HTTP requests.\r\n\r\nNow, if I should create a DataSource that supports concurrency (like you described, with blocking), can you help understand if it would be usable as such in DashMediaSource, namely the DashMediaSource seems to insist on using separate manifestDataSourceFactory and chunkSourceFactory?\r\n\r\nThe manifestDataSourceFactory is actually @Nullable but seem not work at all if I send in null.\r\nTo begin with, I was hoping that it would use the chunkSourceFactory to fetch the manifest... but...\r\n\r\n`public Factory(\r\n        DashChunkSource.Factory chunkSourceFactory,\r\n        @Nullable DataSource.Factory manifestDataSourceFactory)`"
      },
      {
        "user": "hariszukanovic",
        "created_at": "2018-03-08T10:44:57Z",
        "body": "Did not see it was closed.\r\nThanx"
      },
      {
        "user": "ojw28",
        "created_at": "2018-03-08T13:06:29Z",
        "body": "You probably have demuxed audio and video chunks in your DASH content, in which case 2 connections is expected. Why would you want only one connection? I think you really want to be requesting audio and video in parallel.\r\n\r\nTo answer the questions near the end of your response, you'd just have to pass the same factory (or factories that provide the same DataSource instance) everywhere that needs one. We can't really provide further support on how to build this, unfortunately; it's not something we officially support."
      },
      {
        "user": "hariszukanovic",
        "created_at": "2018-03-08T18:41:08Z",
        "body": "Indeed. I have separate audio and video. Thank you for your answers"
      }
    ]
  },
  {
    "number": 3946,
    "title": "cannot resolve MediaSessionConnector",
    "created_at": "2018-03-06T17:44:51Z",
    "closed_at": "2018-03-06T17:47:07Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3946",
    "body": "I am using exoplayer v 2.6.1 but i am facing an issue that MediaSessionConnector is not working.\r\n\r\ngradle exoplayer import:\r\n    compile 'com.google.android.exoplayer:exoplayer:2.6.1'",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3946/comments",
    "author": "MohammadElKhatib",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2018-03-06T17:47:07Z",
        "body": "You need to also depend on `com.google.android.exoplayer:extension-mediasession:2.6.1`"
      },
      {
        "user": "MohammadElKhatib",
        "created_at": "2018-03-06T17:51:12Z",
        "body": "@ojw28 yes you are right this was not clear in installation.\r\nthank you"
      }
    ]
  },
  {
    "number": 3943,
    "title": "How to notice me when next video playback and get current playback file's URI at the same time ?",
    "created_at": "2018-03-05T14:42:24Z",
    "closed_at": "2018-03-07T13:27:43Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3943",
    "body": "I try to find a listener that can notice me when the next or previous video playback.\r\n\r\nfor example: \r\n\r\nI have a List of uri by using *DynamicConcatenatingMediaSource* to ExoPlayer, when I click \"next\" button or auto play the next video, I hope to know this event and to know the current playback video's uri.\r\n\r\n I try to find some useful information from Demo App,but nothing.\r\nplease help me~\r\n\r\n#### Version of ExoPlayer being used\r\n2.6.1\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3943/comments",
    "author": "yibeiliu",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2018-03-05T14:49:03Z",
        "body": "You can retrieve the `MediaSource` at each index in the playlist by calling `DynamicConcatenatingMediaSource.getMediaSource(index)`. Unfortunately, our media sources don't have a `.getUri()` method. To work around this you can keep a `Map<MediaSource, Uri>` or similar in your app to lookup the `Uri` from the `MediaSource`. \r\n"
      },
      {
        "user": "yibeiliu",
        "created_at": "2018-03-07T13:27:43Z",
        "body": "Thank a lot! \r\n\r\nI've solved the problem as you said！"
      }
    ]
  },
  {
    "number": 3932,
    "title": "How to render video into off-screen buffer",
    "created_at": "2018-03-03T12:46:06Z",
    "closed_at": "2018-03-06T08:13:07Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3932",
    "body": "I'm wondering if it's possible to do at all.\r\nI want to get decoded video frame and use it as OpenGL ES texture in a game, so I don't want it to be rendered into some 'ui' elements (SurfaceView, TextureView etc)\r\n\r\nIt seem a pair of Surface and SurfaceTexture would help me but it doesn't.\r\nHere is a code snippet (I try to do this in Xamarin.Android but it doesn't matter, any advice for 'native' Android would be appreciated).\r\n```\r\n            _bandwidthMeter = new DefaultBandwidthMeter();\r\n            var videoTrackSelectionFactory = new AdaptiveTrackSelection.Factory(_bandwidthMeter);\r\n            _trackSelector = new DefaultTrackSelector(videoTrackSelectionFactory);\r\n            _player = ExoPlayerFactory.NewSimpleInstance(Application.Context, _trackSelector);\r\n\r\n            // This is the MediaSource representing the media to be played.\r\n            DefaultBandwidthMeter bandwidthMeterA = new DefaultBandwidthMeter();\r\n            var dataSrcFacroty = new DefaultDataSourceFactory(Application.Context, \"blabla\", bandwidthMeterA);\r\n            var chunkSrcFactory = new DefaultDashChunkSource.Factory(dataSrcFacroty);\r\n\r\n            var mediaSource = new HlsMediaSource(_uri, dataSrcFacroty, 1, null, null);\r\n\r\n            _player.Prepare(mediaSource);\r\n            _player.PlayWhenReady = true;\r\n            \r\n            #int[] _textures = new int[1];\r\n            ...\r\n            GL.Enable(EnableCap.Texture2D);\r\n            GL.GenTextures(1, _textures);\r\n            GL.BindTexture(TextureTarget.Texture2D, _textures[0]);\r\n\r\n            GL.TexImage2D(\r\n                TextureTarget.Texture2D,\r\n                0,\r\n                PixelInternalFormat.Rgba,\r\n                Width,\r\n                Height,\r\n                0,\r\n                OpenTK.Graphics.ES20.PixelFormat.Rgb,\r\n                PixelType.UnsignedByte, \r\n                _data);\r\n\r\n            var st = new SurfaceTexture(_textures[0], true);\r\n            _surface = new Surface(st);\r\n           _payer.SetVideoSurface(_surface);\r\n\r\n            GL.BindTexture(TextureTarget.Texture2D, 0);\r\n```\r\n\r\nAlas, I don't see any changes in my texture.\r\nWhat I'm doing wrong?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3932/comments",
    "author": "Papirosnik",
    "comments": [
      {
        "user": "Papirosnik",
        "created_at": "2018-03-06T07:33:46Z",
        "body": "It seems I see my fault: texture target must be GlTextureExternalOES"
      },
      {
        "user": "andrewlewis",
        "created_at": "2018-03-06T08:13:07Z",
        "body": "Yes. The decoder outputs to an external texture, and to copy from there one can use a `samplerExternalOES` sampler. I'll close this for now but please feel free to reply if you have any other issues. Thanks."
      }
    ]
  },
  {
    "number": 3930,
    "title": "Failed to resolve: com.google.android.exoplayer:exoplayer-core:r2.7.0 ",
    "created_at": "2018-03-03T10:00:54Z",
    "closed_at": "2018-03-04T11:32:04Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3930",
    "body": "Android studio 3.0\r\ngradle version 4.1\r\n\r\nUnable to resolve 2.7.0 dependencies?\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3930/comments",
    "author": "0x410c",
    "comments": [
      {
        "user": "FD-",
        "created_at": "2018-03-03T15:22:37Z",
        "body": "I'm not a project member, but according to the release notes, version names no longer contain the r.\r\n`com.google.android.exoplayer:exoplayer-core:2.7.0` should work fine."
      },
      {
        "user": "0x410c",
        "created_at": "2018-03-04T11:25:28Z",
        "body": "thanks brother. worked perfectly. i think they should change git readme."
      },
      {
        "user": "ojw28",
        "created_at": "2018-03-04T11:32:04Z",
        "body": "Which readme? It looks like we've already removed all the \"r\"s from the readme."
      }
    ]
  },
  {
    "number": 3920,
    "title": "Getting The Body of an 403 response after an HttpDataSource.InvalidResponseCodeException",
    "created_at": "2018-02-28T16:24:29Z",
    "closed_at": "2018-02-28T18:34:32Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3920",
    "body": "Hi,\r\n\r\nWhen playing DASH + widevine content, when acquiring the license for the content, in some situations the license server answers with a status code 403 and in the body it sends the reason for the that status (example: When the content is being played on another Device with the same login).\r\n\r\nSince there are multiple reasons for the server to answer with 403, i need to parse the body to check the reason and show the appropriate error message to the user.\r\n\r\nIs there an easy way to get access the error stream from the connection used on DefaultHttpDataSource after getting an HttpDataSource.InvalidResponseCodeException? Or do i need to extend the DefaultHttpDataSourceFactory and the DefaultHttpDataSource classes and use them instead of the default ones  on the HttpDrmCallback?\r\n\r\nThanks in advance\r\n\r\nBRs\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3920/comments",
    "author": "jrocharodrigues",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2018-02-28T18:25:24Z",
        "body": "In another production system I've seen the license server will respond with a 200 in this case, with the reason for refusal in the body. You can then implement your own `MediaDrmCallback` that's like `HttpMediaDrmCallback`, but with some additional parsing of the response in `executeKeyRequest` that will parse any refusal reason from the response and, if there is one, throw a corresponding exception. This will eventually end up being propagated all the way to your player's `EventListener` if playback ends up failing.\r\n\r\nYou can do roughly the same thing in your case as well, except that you'll need to do a bit more work in your custom `MediaDrmCallback` implementation. In particular you wont be able to use `HttpDataSource` like `HttpMediaDrmCallback` does, because it doesn't provide access to the body in the case of a 403. So you'll need to access the network stack directly in your implementation."
      },
      {
        "user": "jrocharodrigues",
        "created_at": "2018-02-28T18:34:32Z",
        "body": "Thanks for the answer @ojw28 \r\nThat was the impression i had. \r\nI Will proceed with a custom HttpDataSource implementation.\r\n\r\nBrs"
      }
    ]
  },
  {
    "number": 3919,
    "title": "Force ExoPlayer to enter the buffering state",
    "created_at": "2018-02-28T14:42:24Z",
    "closed_at": "2018-03-01T16:02:19Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3919",
    "body": "How can I force ExoPlayer to enter the STATE_BUFFERING even if there's data that the renderers can render?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3919/comments",
    "author": "mmbahaa",
    "comments": [
      {
        "user": "erdemguven",
        "created_at": "2018-03-01T16:02:19Z",
        "body": "You can implement a custom LoadControl and return true from shouldContinueLoading() whenever you want the buffering to continue."
      },
      {
        "user": "mmbahaa",
        "created_at": "2018-03-01T20:47:51Z",
        "body": "I want to make the player get into BUFFERING state where it only passes when it has a specific amount of data, just like when shouldStartPlayback is called in the beginning but this time with rebuffering = true"
      },
      {
        "user": "ojw28",
        "created_at": "2018-03-01T23:29:34Z",
        "body": "As you've probably discovered, you can configure how much media is required to exit the buffering state using `shouldStartPlayback`. There is no way to force the player to re-enter the buffering state whilst the renderers can still render. That's just not something we support, sorry."
      },
      {
        "user": "mmbahaa",
        "created_at": "2018-03-02T10:24:32Z",
        "body": "Ok thanks for being that clear."
      }
    ]
  },
  {
    "number": 3910,
    "title": "Downgrading support-v4, play-services-ads library version in ima-extension",
    "created_at": "2018-02-27T07:47:29Z",
    "closed_at": "2018-02-27T09:41:31Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3910",
    "body": "Hi, \r\nI am trying to use extension-ima library 2.6.1 as dependency.\r\nIn the extension library, it has\r\ncom.android.support:support-v4 27.0.0 and\r\ncom.google.android.gms:play-services-ads 11.4.2 dependency.\r\n\r\nBut as I already have support-v4 23.4.0 and play-services-ads 8.4.0 dependency in my app,\r\nconflict occurs. But I don't want to update library version in my app for now.\r\n\r\nSo I want to resolve this conflict by force-downgrading library version in ima-extension to 23.4.0 and 8.4.0\r\n\r\nWould it affect ad playing logic when I downgrade these library version??\r\nIt seems to work well when I play ads using VAST tag.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3910/comments",
    "author": "EvanHong1",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2018-02-27T09:41:31Z",
        "body": "Looks like play-services-ads 8.4.0 is from December 2015 so won't include preloading. We haven't done any testing on that version but if you only want preroll VAST ad playback you might be fine."
      }
    ]
  },
  {
    "number": 3899,
    "title": "No config update for Formatter in DefaultTimeBar when config change?",
    "created_at": "2018-02-26T01:20:47Z",
    "closed_at": "2018-02-26T13:40:53Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3899",
    "body": "This is rather a question than a issue report, although if this is unexpected, it should be an issue.\r\n\r\nAs I see in the implementation of **DefaultTimeBar**, there is a **Formatter** in used, it is final, and initialized with default Locale. The concern is: when application's config change, this formatter is not updated, in fact, as it is a final member it will not be re-initialized on such event (I know creating one instance of this is expensive).\r\n\r\nThe questions/problems ares: \r\n\r\n- Latest Android version uses ``LocaleList.getDefault()`` (from Android 24) instead of ``Locale.getDefault()`` for modern devices. Should ExoPlayer follows this with a fallback for older API?\r\n\r\n- I see the formatter is used to update the content descriptions only, not impact the visual result. But as the concern, should the formatter also be updated following the application's config change? (in View class, there is ``onConfigurationChanged`` for this purpose, and a usage reference can be found in TextView implementation).\r\n\r\nIf the problems above are taken into account, and implemented by intent, it is fine :D. Otherwise I'm open for a PR.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3899/comments",
    "author": "eneim",
    "comments": [
      {
        "user": "erdemguven",
        "created_at": "2018-02-26T12:42:51Z",
        "body": "I guess the same questions apply to PlayerControlView."
      },
      {
        "user": "ojw28",
        "created_at": "2018-02-26T13:40:53Z",
        "body": "Activities are normally recreated if the locale changes, which makes this a non-issue. The app developer would have to explicitly disable activity recreation on locale change with `configChanges=locale` in their manifest for it to be a problem, which feels like something app developers wont (or shouldn't) be doing. The user would also have to change the device locale in the first place, which seems like an edge case.\r\n\r\nClosing, since I don't think this is a real issue in practice. Note also that if activity recreation is disabled for locale changes then other stuff in ExoPlayer's UI components will also end up being wrong (e.g. the content description strings may be in the wrong language)."
      }
    ]
  },
  {
    "number": 3894,
    "title": "Does ExoPlayer have the OnSeekCompleteListener?",
    "created_at": "2018-02-23T22:44:06Z",
    "closed_at": "2018-02-26T17:18:39Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3894",
    "body": "MediaPlayer class has the OnSeekCompleteListener.\r\n\r\nIf not, I can work around it by checking the current position got updated or not after seeking.\r\nFor the cleanliness of my code, I was looking for the OnSeekCompleteListener but could not find it.\r\n\r\nDoes ExoPlayer not have the listener or I am just not finding it?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3894/comments",
    "author": "jclova",
    "comments": [
      {
        "user": "ghost",
        "created_at": "2018-02-23T23:25:15Z",
        "body": "It's in Player.EventListener, there is a method called onSeekProcessed()."
      },
      {
        "user": "jclova",
        "created_at": "2018-02-26T17:18:39Z",
        "body": "Thank you so much. \r\nI was using the older version of ExoPlayer so I could not find it."
      }
    ]
  },
  {
    "number": 3889,
    "title": "Wrong segment of video getting played in HLS.",
    "created_at": "2018-02-23T04:15:58Z",
    "closed_at": "2018-02-28T12:55:30Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3889",
    "body": "**Issue Description :-**\r\nI am using CacheDataSourceFactory for disk caching the video chunks. Intermittently I am seeing wrong video chunks are getting played. If I remove caching layer its working fine.\r\n\r\n**Version of ExoPlayer being used:**\r\n2.6.1",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3889/comments",
    "author": "aatish1989",
    "comments": [
      {
        "user": "aatish1989",
        "created_at": "2018-02-23T04:19:32Z",
        "body": "Sometime I am playing same url in two different videos views. Can it be because of that?"
      },
      {
        "user": "ojw28",
        "created_at": "2018-02-25T17:19:16Z",
        "body": "We did fix a potential caching issue in `2.7.0`, so please try upgrading. Please also ensure you only have one `SimpleCache` instance pointing to a given cache directory. It's OK to have multiple `CacheDataSource` instances sharing the same `SimpleCache` instance, but it's not OK to have multiple `SimpleCache` instances accessing the same cache directory.\r\n\r\nWhen trying out these suggestions, please make sure you wipe the cache directory to clear anything that might have been incorrectly written to it previously."
      },
      {
        "user": "ojw28",
        "created_at": "2018-02-28T12:55:30Z",
        "body": "Closing for now. Please let us know if you're still able to reproduce, in which case please provide concrete reproduction steps that we can use (without them there's not much we can do to help). Thanks!"
      }
    ]
  },
  {
    "number": 3874,
    "title": "How to display ads of previous player",
    "created_at": "2018-02-21T11:40:09Z",
    "closed_at": "2018-02-21T13:10:15Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3874",
    "body": "Hi!\r\n\r\nMy app:\r\nI have an app that consists of a screen with a list of players with ads. (I am using RecyclerView).\r\nWhen the user scrolls the main screen and a video was playing, I display this video in a smaller player at the bottom of the screen (like youtube).\r\n\r\nTo display the smaller video, I create a new player and update it with content position of previous player.\r\n\r\nMy problem:\r\nWhen the user scrolls and an ads is playing, when updating the new player with content position of previous player, the ads starts to play from the beginning and not from the position that it had stopped in the other player. (I am reusing AdsLoader and )\r\n\r\nMy question:\r\nI would like to know if there is any way I can display ads from the position it stopped in previously player. \r\n\r\nCan someone help me, please?\r\n\r\nSome code:\r\n\r\n```\r\nMediaSource mediaSource = buildMediaSource(Uri.parse(url));\r\nString adTag = getAdsUrl();\r\n\r\n if (adTag != null) {\r\n    if (!reuseAds) {\r\n         releaseAdsLoader();\r\n         mAdsLoader = new ImaAdsLoader(context, Uri.parse(adTag));\r\n    }\r\n    mediaSource = new AdsMediaSource(mediaSource, new AdsMediaSourceFactory(), mAdsLoader, playerView.getOverlayFrameLayout(), null, null);\r\n}\r\n\r\nplayer.seekTo(position);\r\nplayer.setPlayWhenReady(true);\r\n\r\nplayer.prepare(mediaSource,false,false);\r\n```",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3874/comments",
    "author": "michelecorrea3",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2018-02-21T11:47:42Z",
        "body": "Are you definitely using exactly the same `ImaAdsLoader` instance when creating the `AdsMediaSource` that is played in the new player? It's also important that the old player is released before creating the new one. I think this should just work, as the situation is very similar to background/resuming a player while playing ads."
      },
      {
        "user": "michelecorrea3",
        "created_at": "2018-02-21T12:36:23Z",
        "body": "It was the same ImaAdsLoader, but I wasn't releasing the old player before creating the new one. I released and it worked! Thank you so much :)"
      },
      {
        "user": "andrewlewis",
        "created_at": "2018-02-21T13:10:15Z",
        "body": "Glad to hear it works!"
      }
    ]
  },
  {
    "number": 3864,
    "title": "(dev-v2, 2.7.0 candidate?!) Player seems to buffer the resource even without calling start (first time setPlayWhenReady set to true).",
    "created_at": "2018-02-18T11:42:28Z",
    "closed_at": "2018-02-18T17:34:42Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3864",
    "body": "I tried latest dev-v2 and notice the following log shown in console:\r\n\r\n```\r\nonPlayerStateChanged() called with: playWhenReady = [false], playbackState = [2]\r\nMyPlayer#play() <-- Client call, it will call Player#setPlayWhenReady with 'true'\r\nonPlayerStateChanged() called with: playWhenReady = [true], playbackState = [2]\r\nonPlayerStateChanged() called with: playWhenReady = [true], playbackState = [3]\r\n```\r\n\r\nWhen trying to comment out the MyPlayer#play(), the log is as below\r\n\r\n```\r\nonPlayerStateChanged() called with: playWhenReady = [false], playbackState = [2]\r\nMyPlayer#play() <-- client call, just do nothing (Player#setPlayWhenReady is commented out)\r\nonPlayerStateChanged() called with: playWhenReady = [false], playbackState = [3]\r\n```\r\n\r\nSo we can see that the player will also be ready to play even the Client doesn't request to.\r\n\r\nI suppose that Player will start buffering only when Player#setPlayWhenReady is called with 'true' (for at least once). I also doesn't see this on 2.6.1. Can someone enlighten me this change?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3864/comments",
    "author": "eneim",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2018-02-18T17:34:42Z",
        "body": "ExoPlayer has always behaved this way. Buffering starts as soon as you call `prepare`. It's never been the case that `setPlayWhenReady(true)` is required for buffering to start."
      }
    ]
  },
  {
    "number": 3850,
    "title": "Black screen Before video load",
    "created_at": "2018-02-14T17:38:49Z",
    "closed_at": "2018-03-21T15:27:01Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3850",
    "body": "While playing an m3u8 video through \"hls\" , video is taking more time to start.During this time a black overlay is seen until video starts.I tried to make surface view invisible, still when I am making surface view visible after playback started black screen is coming for a second.Is there any way to fix this",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3850/comments",
    "author": "Yadunath",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2018-02-15T15:30:52Z",
        "body": "How do you check when the video starts? The best way to ensure the player started rendering the actual video is to add a video debug listener and listen for `onRenderedFirstFrame`."
      },
      {
        "user": "tonihei",
        "created_at": "2018-03-21T15:27:01Z",
        "body": "Closing due to inactivity. Feel free to reopen if needed."
      },
      {
        "user": "prat-z",
        "created_at": "2018-04-03T10:07:21Z",
        "body": "This issue has also come up with me. In my case, the time between the initial onPlayerStateChanged(buffering state) to onRenderedFirstFrame takes 2.1 seconds, and from onRenderedFirstFrame to onPlayerStateChanged(ready state) takes another 800ms and then only the video starts to show up.\r\n\r\nBelow is the detailed log: \r\n`04-03 15:29:42.540 1866-1866/com.example.video.test V/simple_exo_test: onPlayerStateChanged playWhenReady = false playbackstate = buffering\r\n    onPlayerStateChanged playWhenReady = true playbackstate = buffering\r\n04-03 15:29:42.777 1866-1866/com.example.video.test V/simple_exo_test: onTimelineChanged\r\n04-03 15:29:42.790 1866-1866/com.example.video.test V/simple_exo_test: onLoadingChanged isLoading = true\r\n04-03 15:29:43.006 1866-1866/com.example.video.test V/simple_exo_test: onTracksChanged\r\n04-03 15:29:44.683 1866-1866/com.example.video.test V/simple_exo_test: onVideoSizeChanged\r\n04-03 15:29:44.684 1866-1866/com.example.video.test V/simple_exo_test: onRenderedFirstFrame\r\n04-03 15:29:45.447 1866-1866/com.example.video.test V/simple_exo_test: onPlayerStateChanged playWhenReady = true playbackstate = ready\r\n04-03 15:29:51.611 1866-1866/com.example.video.test V/simple_exo_test: onPlayerStateChanged playWhenReady = true playbackstate = buffering\r\n04-03 15:30:02.216 1866-1866/com.example.video.test V/simple_exo_test: onPlayerStateChanged playWhenReady = true playbackstate = ready\r\n04-03 15:30:04.103 1866-1866/com.example.video.test V/simple_exo_test: onVideoSizeChanged\r\n04-03 15:30:04.410 1866-1866/com.example.video.test V/simple_exo_test: onLoadingChanged isLoading = false\r\n04-03 15:30:09.458 1866-1866/com.example.video.test V/simple_exo_test: onPlayerStateChanged playWhenReady = true playbackstate = ended\r\n` "
      }
    ]
  },
  {
    "number": 3836,
    "title": "Is Exoplayer available for IOS ?",
    "created_at": "2018-02-12T18:20:29Z",
    "closed_at": "2018-02-16T16:31:18Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3836",
    "body": "Hi , thank you for this awesome library.\r\nis there a version for IOS please\r\nThank you",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3836/comments",
    "author": "satyres",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2018-02-13T15:34:06Z",
        "body": "I'm afraid that's not something we support. iOS libraries need to be written in Objective-C and that's why our Java library can't be ported easily even if we were to replace all platform specific calls."
      },
      {
        "user": "satyres",
        "created_at": "2018-02-14T19:17:15Z",
        "body": "@tonihei  :+1:  thank you so much for your answer.\r\ni hope there will be a version for IOS in the futur . it would be really nice.\r\nBest regards"
      },
      {
        "user": "tonihei",
        "created_at": "2018-02-16T16:31:18Z",
        "body": "Closing because question was answered."
      }
    ]
  },
  {
    "number": 3828,
    "title": "Provide a way to get title,singer,artist information with local mp3 or other container music file",
    "created_at": "2018-02-10T06:28:57Z",
    "closed_at": "2018-02-26T18:18:10Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3828",
    "body": "### Issue description\r\nI'm trying to extract track information such as title , singer and an artist from the local mp3 file.\r\nbut  how can I get the information in 'onTracksChanged' callback?  or other callback? \r\n\r\nCould you provide me with the information if such a thing is possible and how to do it?\r\n\r\nThank you!\r\n### Version of ExoPlayer being used\r\n2.6.1",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3828/comments",
    "author": "yibeiliu",
    "comments": [
      {
        "user": "AquilesCanta",
        "created_at": "2018-02-12T10:05:42Z",
        "body": "If this information is included in a metadata track like ID3, then you just need to add a `MetadataOutput` to `SimpleExoPlayer` or pass the output when creating the renderer if using `ExoPlayer` directly. The demo app has `EventLogger,` which implements `MetadataOutput`. You could use a similar approach for obtaining the metadata."
      },
      {
        "user": "AquilesCanta",
        "created_at": "2018-02-26T18:18:10Z",
        "body": "Closing due to lack of activity."
      }
    ]
  },
  {
    "number": 3827,
    "title": "Reason for buildDataSourceFactory in DemoApplication?",
    "created_at": "2018-02-09T19:10:10Z",
    "closed_at": "2018-02-10T20:59:38Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3827",
    "body": "In PlayerActivity there is a reference to DemoApplication where buildDataSourceFactory and buildHttpDataSourceFactory is implemented. Is there a reason for this?\r\n\r\nIf these two methods in PlayerActivity instead contained the default implementation and was protected, then the consuming app could extend PlayerActivity and override the two methods instead of modifying the Application class.\r\n\r\nThat would also make updates easier when an app wants to use a newer ExoPlayer version.\r\n\r\nWhat do you think?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3827/comments",
    "author": "clhols",
    "comments": [
      {
        "user": "AquilesCanta",
        "created_at": "2018-02-09T20:07:05Z",
        "body": "The reason behind this is that we have an internal implementation (and manifest) to override the used DataSource and add some small tweaks. Regarding marking them as protected, I don't think the demo app was conceived for being used as a dependency so I guess the straightforward approach would be downloading the source and modifying in-place, I am actually surprised it is not final. I will try to find any relevant historic reasons, but hopefully this answers your question."
      },
      {
        "user": "clhols",
        "created_at": "2018-02-10T20:59:38Z",
        "body": "I am not using the demo app as a dependency, but copied PlayerActivity and modified it. But I don't want PlayerActivity to ref the Application class in my app, so I have changed that. But when you release a new version of ExoPlayer with a modified version of PlayerActivity I either have to understand what has changed and merge it manually or I could extend PlayerActivity and have easier merges, but the private methods makes it a little harder. "
      }
    ]
  },
  {
    "number": 3809,
    "title": "ExoPlayer PIP of several videos / Video Overlays (for  sign language interpreter and more)",
    "created_at": "2018-02-06T15:53:21Z",
    "closed_at": "2018-05-10T01:06:05Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3809",
    "body": "Hi,\r\n\r\nWere looking for a way to play several videos at the same time at different places on the screen. (Picture In Picture).\r\nOur main objective to provide deaf users with a small video of a sign language interpreter in it.\r\nWe have yet to see anything close to that in ExoPlayer, it's important for us that this wont be done in the UI layer or outside the context of the played video. We want it to be included in the bandwidth calculations and to be in complete sync with main video stream (think about the interpreter having to sync his lips movement with the audio)\r\n\r\nThe closest thing we found was the MergingMediaSource but we didn't find an easy way to extend/modify/use it in this manner.   \r\n\r\nWe have full control over the video and the source code, we also have the resources to change/extend/add ExoPlayer elements. \r\n\r\nIf someone can please point us in the right \"long term\" direction for doing this\r\n\r\nThanks\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3809/comments",
    "author": "Shailevy",
    "comments": [
      {
        "user": "eneim",
        "created_at": "2018-02-07T02:21:52Z",
        "body": "@Shailevy sounds to be a good use case. Have you ever tried to use 2 SimpleExoPlayerView instances and succeed (in syncing them of course)?"
      },
      {
        "user": "Shailevy",
        "created_at": "2018-02-07T09:20:45Z",
        "body": "@eneim this isn't what were looking for for many reasons, were working on a video delivery platform and we have long-run aspirations. Building over such a solution is a bit \"hacky\", in one example we will need to deal with several instances of the same hardware decoder working in the same time. It wil be match better to work with a single video renderer  or at least to bake this as an ExoPlayer extenstion/feature/library for easy integration. \r\n\r\n\r\n"
      },
      {
        "user": "AquilesCanta",
        "created_at": "2018-02-07T11:20:48Z",
        "body": "Hi @Shailevy, this is not something ExoPlayer supports (nor is on the roadmap to be supported).\r\n\r\nIf you want to use a single decoder, while still being able to renderer to different surfaces, I suppose you will need to deliver the actual content along with the overlays in a single video, which later gets cropped and split into different surfaces. You could use a single custom video renderer which does this, using GL operations to do the cropping and moving around, and then conditionally overlaying the complementary content. It is not something trivial, but it is doable. The track selection part will need to be handled separately as well. "
      }
    ]
  },
  {
    "number": 3805,
    "title": "How to same Ad cuepoint multiple times during same playback session?",
    "created_at": "2018-02-06T08:24:09Z",
    "closed_at": "2018-02-06T08:58:15Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3805",
    "body": "\r\nAs Imaloader accepts Ad uri or Ad response and combined with media and play.During playback once Ad played it won't be play again.If i want to play that ad again if rach the point by rewind, how can i achieve that?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3805/comments",
    "author": "pokuri3",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2018-02-06T08:58:15Z",
        "body": "Once the user has viewed an ad group it is marked as played and won't be shown again. This is the intended behavior of the IMA SDK and I'm not aware of any ways to customize it.\r\n\r\nIf you want to work around this, you can probably handle requests to seek backwards by creating a new ads loader and media source, and re-preparing the player with the new media source. The new loader will see all ad groups as unplayed. This is a bit inefficient, though, as you'll be discarding the player state on every seek, and re-requesting the ad tag."
      }
    ]
  },
  {
    "number": 3785,
    "title": "Gvr SDK Unity and ExoPlayer",
    "created_at": "2018-02-02T06:54:51Z",
    "closed_at": "2018-02-02T08:43:12Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3785",
    "body": "I am working with GVR SDK, including ExoPlayer-r-1.5.11. I have problem with reproduce .mkv files with .AC3 codec. I know that I should to use fffmpeg extraction.\r\nFor now, I have:\r\n1) Unity Project with GVR SDK, who can see ExoPlayer-r-1.5.11 library (library-release.aar)\r\n2) I have ffmpeg extra librarty (extension-ffmpeg-release.aar)\r\nHow can I connect both library to Unity Projects?\r\nThx for any info.\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3785/comments",
    "author": "HennessyTennessy",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2018-02-02T08:43:12Z",
        "body": "If you're trying to decode AC-3 in software using the ffmpeg extension, you'll need to switch to ExoPlayer v2, as the extension depends on v2 functionality. Unfortunately, I think the GVR SDK only provides support for ExoPlayer v1.\r\n\r\nWe plan to publish an extension for using ExoPlayer v2 from Unity soon, though no promises if/when this will happen yet.\r\n\r\nFor what it's worth, once you're at the stage of being able to use ExoPlayer v2 from Unity, using the ffmpeg extension should be a simple case of copying the AARs for the core library and the extension in the Unity project's assets. Then `DefaultRenderersFactory` should be able to load and instantiate an `FfmpegAudioRenderer` (or you can pass this `Renderer` directly to `ExoPlayerFactory.newInstance` if you don't want to use `SimpleExoPlayer`)."
      },
      {
        "user": "HennessyTennessy",
        "created_at": "2018-02-02T10:07:15Z",
        "body": "Ahh. Thank much for quickly answer.\r\nYes, i tryied to copy library of ExoPlayer_v2 to Unity project with GVR SDK, and receive many errors in Log. Think that GVR SDK not support v2 too.\r\nSooo, as i understand, I have no way to use GVR SDK with .AC3 codec, and should create new own ExoPlayer_v2.plugin for Unity. Is it right?"
      },
      {
        "user": "andrewlewis",
        "created_at": "2018-02-02T10:15:00Z",
        "body": "Yes. Or wait for us to publish one (probably soon but no promises)."
      },
      {
        "user": "HennessyTennessy",
        "created_at": "2018-02-02T10:54:48Z",
        "body": "Okay:) Thank you)"
      }
    ]
  },
  {
    "number": 3773,
    "title": "DynamicConcatenatingMediaSource with no auto play",
    "created_at": "2018-01-30T22:27:17Z",
    "closed_at": "2018-02-01T16:34:20Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3773",
    "body": "### Issue description\r\nI am wondering if there's a way to have a DynamicConcatenatingMediaSource which does not automatically start the next track. \r\n\r\nI've followed the conversation on #2810. In which the suggestion was to simply not use a ConcatenatingMediaSource. However, in my use case, the user can toggle whether they want to \"auto play\", and I always want to be able to show the \"next track\" button. This happens to be the same behavior as Youtube.\r\n\r\nThe only other way I think it could be accomplished, is if I could smoothly (without affecting playback) swap my DynamicConcatenatingMediaSource for a singular MediaSource, and still be able to show the \"next track\" button as enabled. Is that possible?\r\n\r\n### Version of ExoPlayer being used\r\n2.6.1",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3773/comments",
    "author": "skyler-b",
    "comments": [
      {
        "user": "skyler-b",
        "created_at": "2018-01-30T22:28:06Z",
        "body": "@ojw28 you've fielded this question before, I was hoping you might have some advice, thanks in advance!"
      },
      {
        "user": "tonihei",
        "created_at": "2018-01-31T09:31:30Z",
        "body": "You could listen to `Player.EventListener.onPositionDiscontinuity` and check if the reason for the discontinuity is `DISCONTINUITY_REASON_PERIOD_TRANSITION`. This indicates that the source has transitioned to a new period (I assume your individual tracks contain one period only). In this case, call `player.setPlayWhenReady(false)` to pause playback.\r\n\r\nBe aware that this solution means that the player already switched to the next track but does not continue playing. \r\n\r\n"
      },
      {
        "user": "skyler-b",
        "created_at": "2018-01-31T16:39:20Z",
        "body": "Thanks @tonihei, ya I do know that trick, but unfortunately I need it to stop on the current one. For now I will just be using a single media source, and supplying my own \"next\" button, and my own auto-play, instead of using the built in ones. "
      },
      {
        "user": "tonihei",
        "created_at": "2018-02-01T10:02:04Z",
        "body": "There is actually another option which allows you to pause playback at the end of the current item.\r\n\r\nWe recently added the option to send messages at specified playback positions. _This feature is currently on the dev-branch but will be part of the next release._ With that, you can send a message at the end of each playlist item and pause the player in this message. By default, messages are sent on the playback thread which helps to ensure that the pause command reaches the playback loop in time before the transition to the next playlist item. Sending the message should look like this:\r\n```\r\nplayer\r\n    .createMessage((int messageType, Object payload) -> player.setPlayWhenReady(false))\r\n    .setPosition(itemIndex, durationMs)\r\n    .setDeleteAfterDelivery(false)\r\n    .send();\r\n```\r\nSetting `deleteAfterDelivery` to `false` ensures that the message is kept around and the player always pauses at the end of this item when it is played again. The best place to send this message is probably within `eventListener.onTimelineChanged` where you can check whether the duration of each window is available (`!= C.TIME_UNSET`).\r\n\r\nHowever, there are two caveats to this approach:\r\n\r\n1. Pausing the player is now done on a different thread. To prevent any parallel execution issue, you should synchronize access to the player (or live with the risk of getting a user-initiated pause or play command at exactly the same moment).\r\n2. The `eventListener.onPlayerStateChanged(/* playWhenready* / false, ...)` callback is now also delivered on another thread. This is more of a bug really because our documentation says otherwise. Until we fix this, you'll need to check in each event listener where this is relevant if it is called on the correct thread. For example, the ExoPlayer UI components try to update their buttons based on this change and they throw an exception if this is not done on the main application thread. So for this to work, I needed to adapt these listeners too."
      },
      {
        "user": "tonihei",
        "created_at": "2018-02-01T10:06:08Z",
        "body": "Marked as bug because of the possibility of getting listener callbacks which are not on the thread which created the player."
      },
      {
        "user": "tonihei",
        "created_at": "2018-02-01T12:28:22Z",
        "body": "We decided that we actually can't support access to the player from multiple threads because there is no way to fully synchronize this access from outside. This essentially means that the solution I proposed above is not valid. \r\n\r\nNevertheless, you can try to set a Handler to the message which ensures it's executed on your application thread:\r\n```\r\nplayer\r\n    .createMessage((int messageType, Object payload) -> player.setPlayWhenReady(false))\r\n    .setHandler(new Handler())\r\n    .setPosition(itemIndex, durationMs - SHORT_OFFSET)\r\n    .setDeleteAfterDelivery(false)\r\n    .send();\r\n```\r\nThis prevents any synchronization issues and problems caused by getting listener callbacks on the wrong thread. However, it now depends on the system how fast it can deliver this message back to the player. In the majority of cases, this will work (even without the offset I added above), but it's not 100% guaranteed.\r\n"
      },
      {
        "user": "skyler-b",
        "created_at": "2018-02-01T16:34:20Z",
        "body": "Thanks for the update - that messaging system sounds very interesting - I can already think of one other thing I would use it for. I'll take a look at that in the next release - thanks again!"
      }
    ]
  },
  {
    "number": 3768,
    "title": "ExoPlayer releaseSource and creating new player instance for playing random mp4 URL's on random Click",
    "created_at": "2018-01-30T06:54:48Z",
    "closed_at": "2018-02-01T13:40:31Z",
    "labels": [
      "question",
      "need more info"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3768",
    "body": "I have many list of URLs in a list view , trying to play video by clicking random URL's , i'm able to open the any(random position) URL  by selecting any random item in the list and i'm able to play next and previous videos but i'm not able to play the randomly selected second URL (and playing only the fist Selected Video) .\r\n****** please help me with example code Thank You.**\r\n**please check my below code:**\r\n\r\n**Initialize and set data and prepare player** \r\n\r\n        public void to_play_video(){\r\n        if (mExoPlayerView == null) {\r\n            if(mVideoSource!=null)\r\n                mVideoSource=null;\r\n            mExoPlayerView = (SimpleExoPlayerView) findViewById(R.id.exoplayer);\r\n            initFullscreenDialog();\r\n            initFullscreenButton();\r\n            String userAgent = Util.getUserAgent(VideoQsns_activity.this, getApplicationContext().getApplicationInfo().packageName);\r\n            DefaultHttpDataSourceFactory httpDataSourceFactory = new DefaultHttpDataSourceFactory(userAgent, null, DefaultHttpDataSource.DEFAULT_CONNECT_TIMEOUT_MILLIS, DefaultHttpDataSource.DEFAULT_READ_TIMEOUT_MILLIS, true);\r\n            DefaultDataSourceFactory dataSourceFactory = new DefaultDataSourceFactory(VideoQsns_activity.this, null, httpDataSourceFactory);\r\n            try{\r\n                if(mediaSources.length>0) {\r\n                    List<MediaSource> list = new ArrayList<MediaSource>(Arrays.<MediaSource>asList(mediaSources));\r\n                    list.removeAll(list);\r\n                    mediaSources = list.toArray(new MediaSource[0]);\r\n                }\r\n            }catch (Exception e){\r\n\r\n            }\r\n            mediaSources=new MediaSource[items.size()];\r\n            for (int i = 0; i < items.size(); i++) {\r\n                mediaSources[i] =  new ExtractorMediaSource(Uri.parse(items.get(i).getqsnurl()), dataSourceFactory, new DefaultExtractorsFactory(),\r\n                        null, new ExtractorMediaSource.EventListener() {\r\n                    @Override public void onLoadError(IOException error) {\r\n\r\n                    }\r\n                });\r\n\r\n            }\r\n        }\r\n        initExoPlayer();\r\n        if (mExoPlayerFullscreen) {\r\n            ((ViewGroup) mExoPlayerView.getParent()).removeView(mExoPlayerView);\r\n            mFullScreenDialog.addContentView(mExoPlayerView, new ViewGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT));\r\n            mFullScreenIcon.setImageDrawable(ContextCompat.getDrawable(VideoQsns_activity.this, R.drawable.ic_fullscreen_skrink));\r\n            mFullScreenDialog.show();\r\n        }\r\n        MediaSource mediaSource;\r\n            mediaSource = mediaSources.length == 1 ? mediaSources[0]\r\n                    : new ConcatenatingMediaSource(mediaSources);\r\n        mExoPlayerView.getPlayer().prepare(mediaSource);\r\n        mExoPlayerView.getPlayer().setPlayWhenReady(true);\r\n    }\r\n    private void initExoPlayer() {\r\n\r\n        BandwidthMeter bandwidthMeter = new DefaultBandwidthMeter();\r\n        TrackSelection.Factory videoTrackSelectionFactory = new AdaptiveTrackSelection.Factory(bandwidthMeter);\r\n        trackSelector = new DefaultTrackSelector(videoTrackSelectionFactory);\r\n        LoadControl loadControl = new DefaultLoadControl();\r\n        player = ExoPlayerFactory.newSimpleInstance(new DefaultRenderersFactory(this), trackSelector, loadControl);\r\n        mExoPlayerView.setPlayer(player);\r\n        mExoPlayerView.getPlayer().addListener(new Player.EventListener() {\r\n            @Override\r\n            public void onTimelineChanged(Timeline timeline, Object manifest) {\r\n            }\r\n            @Override\r\n            public void onTracksChanged(TrackGroupArray trackGroups, TrackSelectionArray trackSelections) {\r\n                currentIndex = mExoPlayerView.getPlayer().getCurrentWindowIndex();\r\n            }\r\n            @Override\r\n            public void onLoadingChanged(boolean isLoading) {\r\n            }\r\n            @Override\r\n            public void onPlayerStateChanged(boolean playWhenReady, int playbackState) {\r\n                switch(playbackState) {\r\n                    case Player.STATE_BUFFERING:\r\n                        break;\r\n                    case Player.STATE_ENDED:\r\n                        mExoPlayerView.getPlayer().stop();\r\n                        mExoPlayerView.getPlayer().seekTo(0);\r\n                        player.stop();\r\n                        player.seekTo(0);\r\n                        mExoPlayerView.getPlayer().setPlayWhenReady(true);\r\n                        player.setPlayWhenReady(true);\r\n                        break;\r\n                    case Player.STATE_IDLE:\r\n                        break;\r\n                    case Player.STATE_READY:\r\n                        break;\r\n                    case PlaybackStateCompat.STATE_SKIPPING_TO_NEXT:\r\n                        break;\r\n                    case PlaybackStateCompat.STATE_SKIPPING_TO_PREVIOUS:\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n            @Override\r\n            public void onRepeatModeChanged(int repeatMode) {\r\n            }\r\n            @Override\r\n            public void onPlayerError(ExoPlaybackException error) {\r\n            }\r\n            @Override\r\n            public void onPositionDiscontinuity() {\r\n                Log.e(\"-------------\",\"onPositionDiscontinuity\");\r\n                int latestWindowIndex = mExoPlayerView.getPlayer().getCurrentWindowIndex();\r\n                if (latestWindowIndex != lastWindowIndex) {\r\n                    // item selected in playlist has changed, handle here\r\n                    lastWindowIndex = latestWindowIndex;\r\n                    // ...\r\n                }\r\n            }\r\n            @Override\r\n            public void onPlaybackParametersChanged(PlaybackParameters playbackParameters) {\r\n            }\r\n        });\r\n\r\n\r\n**releasing player**\r\n\r\n    private void releasePlayer() {\r\n        Timeline timeline = mExoPlayerView.getPlayer().getCurrentTimeline();\r\n        if (mExoPlayerView.getPlayer() != null) {\r\n            if ( mExoPlayerView.getPlayer().getPlayWhenReady() &&  mExoPlayerView.getPlayer().getPlaybackState() != ExoPlayer.STATE_IDLE) {\r\n                mResumeWindow = mExoPlayerView.getPlayer().getCurrentWindowIndex();\r\n            }\r\n            mResumePosition=mExoPlayerView.getPlayer().getCurrentPosition();\r\n            shouldAutoPlay = mExoPlayerView.getPlayer().getPlayWhenReady();\r\n            mExoPlayerView.getPlayer().prepare(null);\r\n            mExoPlayerView.getPlayer().seekTo(0);\r\n            mExoPlayerView.getPlayer().removeListener((Player.EventListener) \r\n            mExoPlayerView.getPlayer());\r\n            mExoPlayerView.getPlayer().stop();\r\n            mExoPlayerView.getPlayer().release();\r\n            player.release();\r\n            mExoPlayerView=null;\r\n            player=null;\r\n        }\r\n    }\r\n\r\n****releasing releaseSource****\r\n\r\n    @Override\r\n    public void releaseSource() {\r\n\r\n        for (int i = 0; i < mediaSources.length; i++) {\r\n            try{\r\n                mediaSources[i].releaseSource();\r\n            }catch(Exception e){\r\n                Log.e(\"mediaSources\",\"------------\"+ mediaSources[i]);\r\n            }\r\n        }\r\n    }\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3768/comments",
    "author": "devramjava",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2018-01-31T09:30:08Z",
        "body": "Please could you clarify what the actual problem is that you're facing with the ExoPlayer library? Currently this reads like a request for help developing app code, which is unfortunately outside the scope of this issue tracker."
      },
      {
        "user": "devramjava",
        "created_at": "2018-01-31T13:46:59Z",
        "body": "i have listview and video player(exoplayer) when i select a list item i want play the mp4 URL for that particular  position (if we select the 1st one i will play the 1st mp4 URL in the array list , if i select any other position i want to play the perticular mp4 of the position )\r\nmy main problem is:\r\n1. im not able to releaseSource (on selecting any position in the listview , im able to play only one URL not changing to the other URL ) \r\n2. i tried to create a new instance for the exoplayer but i could not  make it.\r\n\r\nplease help thank you"
      },
      {
        "user": "ojw28",
        "created_at": "2018-02-01T13:40:31Z",
        "body": "You should just be able to build a new `MediaSource` and pass it to `player.prepare` each time the user selects a list item. This sounds more like a bug in your application code than an ExoPlayer issue. If you have a specific issue with the library itself, please let us know."
      },
      {
        "user": "devramjava",
        "created_at": "2018-02-05T06:32:17Z",
        "body": "thank you @ojw28 mistake in my application code and its solved now"
      }
    ]
  },
  {
    "number": 3766,
    "title": "Unable to play AES-256 encrypted MP4 audio files",
    "created_at": "2018-01-29T16:38:43Z",
    "closed_at": "2018-01-30T12:28:31Z",
    "labels": [
      "question",
      "wont fix: infeasible"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3766",
    "body": "Hi All,\r\nI am unable to play AES 256 encrypted mp4 files, with AES 128 it works fine, however it is giving \"UnRecognizedInputFormatException\". Please suggest, I am using \"PBKDF2WithHmacSHA1\" and CBC/PKCS5Padding.\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3766/comments",
    "author": "vikas3121",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2018-01-29T16:46:05Z",
        "body": "How are you playing AES 128 streams? I don't think we (intentionally) provide direct support for that. Are you using a custom `DataSource` component from somewhere outside of the core library? If not, could you provide an example AES 128 stream that plays successfully?"
      },
      {
        "user": "vikas3121",
        "created_at": "2018-01-30T08:43:45Z",
        "body": "I am using custom implementation of the Datasource, to play encrypted files on the fly using exo player. However I got stuck with AES 256, all the time exo player is not able to recognize the input. It took me some time to ply encrypted files by building custom datasource to play AES 128. Please suggest if AES 128 is safe enough to go with??"
      },
      {
        "user": "ojw28",
        "created_at": "2018-01-30T12:28:31Z",
        "body": "If ExoPlayer isn't recognizing the input then your custom `DataSource` isn't decrypting AES 256 media correctly. This isn't library code of an officially supported use case, so unfortunately you'll need to debug the problem yourself (e.g. try writing some comprehensive unit tests for your `DataSource` to validate it's really doing decryption correctly, even when requests are made to non-zero start positions).\r\n\r\nIt's up to you to decide what's \"safe\" enough for your use case. It really depends how high value your content is, how it's served (streaming vs from-disk), what attacks you're attempting to protect against and so on.\r\n\r\nClosing, since this is an issue with a custom component, not with the ExoPlayer library."
      },
      {
        "user": "merby04",
        "created_at": "2018-02-05T02:48:05Z",
        "body": "Can you explain me @vikas3121 how to implement it  ? I need it to play encrypted audio files... any refference ? \r\n\r\n"
      }
    ]
  },
  {
    "number": 3763,
    "title": "Key rotation questions",
    "created_at": "2018-01-28T14:31:39Z",
    "closed_at": "2018-04-22T21:59:45Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3763",
    "body": "Hi,\r\n\r\nWe are trying to play live DASH streams with key rotation, with signaling both in the manifest and media segments, using standard keyIDs (i.e withotu key hirerachy schemes). We have the following questions:\r\n\r\n1. Upon tune, the application reactively triggers a license request and gets a license with the current key and multiple future keys. The idea is that the application will not need to send future license requests if the keys are already included in an already acquired valid license.\r\nWhat we see is that the player triggers a license request each time the PSSH in the media segments changes. I guess this is the expected behavior, but have the following questions:\r\n  \r\n\r\n- Assuming the app knows which keyIDs are available within the valid license, is there a way for the app/player to control whether to request a license challenge ?\r\n-  Assuming the license challenge has already been generated for a non-required key, can the player/app decide to ignore it and filter out the license request? in this case, can the app return a dummy license response? this works for Shaka...\r\n-  We also noticed that if a new license is returned, then the old one is invalidated. For example, if a the initial license include key1, key2 and key3, and the new license includes only key2, then playback will fail when the content reaches key3. Is this the expected behavior?\r\n\r\n2. Questions regarding PSSH signaling:\r\n\r\n- We noticed that if PSSH exists in the MPD, then the player will not trigger license requests based on PSSHs from the media segments? is this the expected behaviour?\r\n- Is there a configuration that allows the player to ignore the PSSH from the MPD (Shaka has such configuration), or to act upon new PSSH from the media segments even if there is PSSH in the MPD?\r\n\r\nMany thanks,\r\nM\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3763/comments",
    "author": "meladc",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2018-02-02T11:34:20Z",
        "body": "Key rotation is really something that we're doing a pretty bad job of supporting currently. Unfortunately it'll take some time to resolve. It's made significantly more complicated by `MediaDrm.KeyStatus` and `MediaCrypto.setMediaDrmSession` only being available from Marshmallow onward. We need to decide to what extent we want to try and support key rotation on a best-effort basis prior to Marshmallow, or whether to focus on Marshmallow+ only.\r\n\r\nI'll try to answer your questions as best I can, given the above:\r\n\r\n> Assuming the app knows which keyIDs are available within the valid license, is there a way for the app/player to control whether to request a license challenge ?\r\n\r\nI don't think there's an easy way to do this at the moment, although if you're willing to go to the lengths of implementing your own `DrmSessionManager` then that would give you a huge amount of flexibility (probably enough to do both this and much more). You could of course fork the library provided implementation as a starting point.\r\n\r\n> Assuming the license challenge has already been generated for a non-required key, can the player/app decide to ignore it and filter out the license request? in this case, can the app return a dummy license response? this works for Shaka...\r\n\r\nDitto.\r\n\r\n> We also noticed that if a new license is returned, then the old one is invalidated. For example, if a the initial license include key1, key2 and key3, and the new license includes only key2, then playback will fail when the content reaches key3. Is this the expected behavior?\r\n\r\nI think we need to more properly investigate key rotation to answer this question.\r\n\r\n> We noticed that if PSSH exists in the MPD, then the player will not trigger license requests based on PSSHs from the media segments? is this the expected behaviour?\r\n\r\nThis is expected behaviour, although it could probably be changed trivially by modifying `FragmentedMp4Extractor.onMoofContainerAtomRead` to not ignore the media segment PSSH boxes in this case.\r\n\r\nWhy would it make sense to put a PSSH in the MPD if you're doing key rotation? Logically, wouldn't that PSSH be relevant to the whole duration of the period, since that's the level at which it's being defined? And if so, isn't that fundamentally at odds with key rotation?\r\n\r\nIf it does make sense, we can change the behavior of `FragmentedMp4Extractor` to match.\r\n\r\n> Is there a configuration that allows the player to ignore the PSSH from the MPD (Shaka has such configuration), or to act upon new PSSH from the media segments even if there is PSSH in the MPD?\r\n\r\nNo, although see above. Same question applies."
      },
      {
        "user": "ojw28",
        "created_at": "2018-04-22T21:59:45Z",
        "body": "Closing as answered."
      }
    ]
  },
  {
    "number": 3757,
    "title": "Create MediaSource from FileDescriptor",
    "created_at": "2018-01-26T13:01:26Z",
    "closed_at": "2018-02-07T19:32:53Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3757",
    "body": "I have an Android box which allows a HDMI input. I have been given some code that grabs the data stream from the HDMI input and writes an MPEG TS stream to a `FileDescriptor`. I wondered if I could pass this `FileDescriptor` into ExoPlayer as a `MediaSource` for playback? I couldn't see a way to do that in the current API. Old questions reference a `FrameworkSampleSource` that seems long since removed.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3757/comments",
    "author": "jmgirven",
    "comments": [
      {
        "user": "jmgirven",
        "created_at": "2018-02-07T18:16:21Z",
        "body": "Sorry to bug you guys, but I wondered if you had any idea on this?"
      },
      {
        "user": "AquilesCanta",
        "created_at": "2018-02-07T19:32:53Z",
        "body": "Since the content is TransportStream, the media source will be an ExtractorMediaSource. Your issue is going to be the DataSource which you pass to the media source.\r\n\r\nAs far as I know, there is no way to create a DataSource from a FileDescriptor directly. However, you might be able to emulate what the AssetDataSource does, which uses an InputStream to read the assets' data. So, you could create a FileInputStream and use that in a similar way to create a FileDescriptorDataSource (or equivalent). Note: we already count with a FileDataSource, but it uses a RandomAccessFile. I don't know whether synchronization is going to be an issue for you. Or maybe there is a simpler solution, but it is not possible to know with the provided information. Let us know if you manage to give it a try."
      },
      {
        "user": "rraallvv",
        "created_at": "2018-04-20T17:46:21Z",
        "body": "I have a similar use case, I have the file contents (only MP3 and MP4) in a non-seekable InputStream extracted on-the-fly from a compressed container. Has anyone managed to create a custom AssetDataSource-like wrapper for the InputStream?"
      }
    ]
  },
  {
    "number": 3756,
    "title": "[Question] Did \"DRM vender –2967\" error ever happen in ExoPlayer?",
    "created_at": "2018-01-26T08:13:21Z",
    "closed_at": "2018-03-15T21:16:29Z",
    "labels": [
      "question",
      "bug: in platform drm"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3756",
    "body": "This isn't an issue for Exoplayer. Just a question.\r\n\r\nI implemented an Android player by using mediacodec directly. Sometimes it throws \"DRM vender –2967\" when using widevine drm on Pixel and some Samsung devices. This is a serious error. The playback can not recover until the system is rebooted. It may trigger a system level error. \r\n\r\nI just want to know if \"DRM vender –2967\" error ever happened in ExoPlayer. Do you get any issue or feedback about this error?\r\n\r\nThanks",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3756/comments",
    "author": "ghost",
    "comments": [
      {
        "user": "botaydotcom",
        "created_at": "2018-01-26T10:56:16Z",
        "body": "Hi @ycinfinity ,\r\nI did a quick search on both Github issue list and internal issue list. There's one more report on DRM error -2967 happening with Widevine DRM on Pixel on our internal issue list ([Internal ref: 62486203]), although there is no mention of ExoPlayer on that bug.\r\n\r\n@wvpaf : Did you encounter any other report for this error?"
      },
      {
        "user": "ghost",
        "created_at": "2018-01-29T03:25:51Z",
        "body": "Hi, We can encounter this issue 2000 times a day from the android player of my company.  Then the user need to reboot the system. That's terrible.  Do you have any investigation on this error?"
      },
      {
        "user": "wvpaf",
        "created_at": "2018-01-29T22:44:04Z",
        "body": "@botaydotcom, the only other report the one you found, that report went cold after a few months and was closed due to inactivity and the fact we were unable to repro in house.\r\n\r\n@ycinfinity, it would be most helpful to have an ADB report from an affected device so we can better troubleshoot."
      },
      {
        "user": "ojw28",
        "created_at": "2018-01-30T13:16:40Z",
        "body": "Can you provide a full bug report captured with `adb bugreport`, rather than a snippet of logcat? Thanks."
      },
      {
        "user": "ghost",
        "created_at": "2018-02-01T05:36:57Z",
        "body": "@ojw28  @wvpaf  I'm trying to reproduce the issue and collect a more detailed log.  Could you give an email address for further communication?"
      },
      {
        "user": "ojw28",
        "created_at": "2018-02-01T12:27:41Z",
        "body": "Please use `dev.exoplayer@gmail.com`. Please also update this issue when you mail that address, so the right person knows to take a look. Thanks!"
      },
      {
        "user": "wvpaf",
        "created_at": "2018-02-27T21:48:40Z",
        "body": "Any luck with the full adb bugreport? "
      },
      {
        "user": "ghost",
        "created_at": "2018-03-01T02:57:26Z",
        "body": "Hi @wvpaf, I'm still trying to reproduce it in my own android phone to generate a full adb bugreport.\r\nThe error mostly happens in our user's client. It could be in a special situation. But I can't force the normal user to do the \"adb bugreport\". I will send the bugreport to you as soon as I reproduce the issue."
      },
      {
        "user": "ghost",
        "created_at": "2018-03-01T06:02:57Z",
        "body": "Hi @ojw28 @wvpaf , I reproduced it. And already sent the bugreport to dev.exoplayer@gmail.com.\r\n\r\nTopic: Bugreport for DRM vender –2967 Address: ycinfinity@hotmail.com"
      },
      {
        "user": "ghost",
        "created_at": "2018-03-08T08:31:57Z",
        "body": "@wvpaf , Any update about this issue? Do you need other information?"
      },
      {
        "user": "wvpaf",
        "created_at": "2018-03-08T21:53:21Z",
        "body": "@ycinfinity got the logs via email. thanks. \r\nthe team will take a look."
      },
      {
        "user": "wvpaf",
        "created_at": "2018-03-15T21:16:29Z",
        "body": "There is a fix for this has been checked into P. \r\nElse to workaround is reboot the device and/or stop and restart the mediaserver."
      },
      {
        "user": "ghost",
        "created_at": "2018-03-15T22:41:18Z",
        "body": "@wvpaf Thanks for fixing this issue. \r\n\r\nWhat do you mean \"stop and restart the mediaserver\"? \r\n\r\nDo you have a plan to fix this issue in the versions before Android P?  Rebooting the device and restarting the media server are not reasonable solutions for this issue.\r\n\r\n\r\n"
      }
    ]
  },
  {
    "number": 3755,
    "title": "[Question] Equivalent to Allocator.blockWhileTotalBytesAllocatedExceeds(int limit) in ExoPlayer 2?",
    "created_at": "2018-01-25T20:17:07Z",
    "closed_at": "2018-02-26T18:26:33Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3755",
    "body": "Is there an equivalent call or blocks of calls to replace Allocator.blockWhileTotalBytesAllocatedExceeds(int limit) in ExoPlayer 2?  Migrating from ExoPlayer 1.5 to Exoplayer2 but can't find a proper way to implement blockWhileTotalBytesAllocatedExceeds(int  #limit).\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3755/comments",
    "author": "kathylin",
    "comments": [
      {
        "user": "botaydotcom",
        "created_at": "2018-01-26T10:31:24Z",
        "body": "Hi @kathylin \r\nI don't think there's an equivalent call in ExoPlayerV2 for this purpose. Could you describe your use case: when do you need to call this?\r\nIf the use case is similar to our original `ExtractorSampleSource.ExtractingLoadable`, you can consider using an alternative, which we implemented for the V2 equivalent of `ExtractingLoadable` (please see: \r\n`ExtractorMediaPeriod.ExtractingLoadable`):\r\n\r\nIn this case, you can use a loading condition variable, which is checked on the loading thread (`ExtractingLoadable`), and prevents the `ExtractingLoadable` from advancing too far (it will block when the loading thread has advanced more than a given threshold). After the loading thread passes this threshold, it will post a callback `onContinueLoadingRequested` to allow the `LoadControl` to decide whether the loading thread can continue, and then block on the condition variable. When the `LoadControl` allows the `MediaPeriod` to continue, `MediaPerod.continueLoading()` method will being called, and in this method, you can re-open the loading condition variable and allow the loading thread to continue.\r\n"
      },
      {
        "user": "kathylin",
        "created_at": "2018-01-26T20:14:32Z",
        "body": "@botaydotcom, thanks for your reply.  Yes, we use `Allocator.blockWhileTotalBytesAllocatedExceeds(int limit)` similar to the original \r\n`ExtractorSampleSource.ExtractingLoadable`.  We will try your suggestion and see if we can get the migration working.  Thanks!"
      }
    ]
  },
  {
    "number": 3732,
    "title": "WebvttDecoder final and private :-(",
    "created_at": "2018-01-19T21:19:51Z",
    "closed_at": "2018-02-26T17:43:22Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3732",
    "body": "I would like to extend WebvttDecoder.\r\nUnfortunately it is final and private.\r\n\r\nIs there any particular reason for this?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3732/comments",
    "author": "toby78",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2018-01-21T18:46:23Z",
        "body": "What is your use case for needing to do this? I don't think we'll have any particular objection to doing this, but we'd like to understand the use case and make sure there's not a better way for achieving the same thing. Thanks.\r\n\r\nAside: It actually public already on the `dev-v2` branch, although it's still final."
      },
      {
        "user": "ojw28",
        "created_at": "2018-02-26T17:43:21Z",
        "body": "Closed due to lack of additional information."
      }
    ]
  },
  {
    "number": 3720,
    "title": "Video reload",
    "created_at": "2018-01-18T02:11:42Z",
    "closed_at": "2018-04-22T22:22:29Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3720",
    "body": "Why does video reload after rewind?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3720/comments",
    "author": "Gidex",
    "comments": [
      {
        "user": "AquilesCanta",
        "created_at": "2018-01-18T11:03:49Z",
        "body": "> Why does video reload after rewind?\r\n\r\nBecause ExoPlayer does not currently keep the buffered content for seeking back. Good news is that it is something that @ojw28 has been looking at. @ojw28, would you mind filling any gaps/pointing to the right resource?\r\n\r\nRelevant: #2882. "
      },
      {
        "user": "ojw28",
        "created_at": "2018-01-18T11:21:02Z",
        "body": "We do not cache persistently on disk by default, and we discard our in-memory buffer as we play over it. There are features in the dev branch that allow you to retain buffer after you've played it for a period of time, as described in #3583, however these features are not yet available in a release."
      }
    ]
  },
  {
    "number": 3713,
    "title": "Play multiple videos at the same time ？",
    "created_at": "2018-01-16T05:19:01Z",
    "closed_at": "2018-02-07T11:05:38Z",
    "labels": [
      "question",
      "need more info"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3713",
    "body": "Is there anyway to play 2 videos at same times?\r\nI have seen the api:\r\nvoid configure (MediaFormat format, \r\n                Surface surface, \r\n                MediaCrypto crypto, \r\n                int flags)\r\nCan I create two exoplayers and joint two surface to one surface?\r\nHowever,I want to play two video at only one surface.\r\nIs there any possible way? Please tell me.\r\nThanks u very much.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3713/comments",
    "author": "alordred",
    "comments": [
      {
        "user": "AquilesCanta",
        "created_at": "2018-01-17T14:08:24Z",
        "body": "Could you clarify what the expected behavior is? How would composition work?"
      },
      {
        "user": "AquilesCanta",
        "created_at": "2018-02-07T11:05:38Z",
        "body": "Closing due to lack of activity."
      }
    ]
  },
  {
    "number": 3711,
    "title": "[Question] Public Roadmap and 3.0?",
    "created_at": "2018-01-16T01:27:38Z",
    "closed_at": "2018-01-21T18:39:36Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3711",
    "body": "Hope the title is clear enough. Does the team have a list of what to do next (the Roadmap) and any idea for 3.0 yet? It may be easier for us to contribute in right direction.\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3711/comments",
    "author": "eneim",
    "comments": [
      {
        "user": "AquilesCanta",
        "created_at": "2018-01-17T14:06:28Z",
        "body": "There is no public roadmap. A good reason for this is that priorities sometimes change, and it is really hard to keep up to expectations. For the same reason we strongly avoid setting release timelines.\r\n\r\n> Does the team have a list of what to do next (the Roadmap) and any idea for 3.0 yet?\r\n\r\nExoPlayer 3 has not been discussed yet (AFAIK).\r\n\r\nAnything marked as enhancement in the issue tracker is an opportunity to contribute, specially if it doesn't involve API modifications (extension of the API is usually ok)."
      }
    ]
  },
  {
    "number": 3705,
    "title": "[Question] about reuse same SimpleExoPlayer instance for different MediaSource",
    "created_at": "2018-01-15T04:15:30Z",
    "closed_at": "2018-01-15T09:02:32Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3705",
    "body": "~~ignored all issue creation suggestion, this is a question ^^!~~.\r\n\r\nHope the title tells the background. The detail is:\r\n\r\n- In order to create a SimpleExoPlayer instance, I must provide a TrackSelector (in this case, a DefaultTrackSelector which in turn built on a **DefaultBandwidthMeter** (calling this is **Meter1**, here it is a \"BandwidthMeter\") to support adaptive track selection).\r\n\r\n- In order to build new MediaSource from Uri (taken from intent, or online stream), I need a DataSourceFactory (in this case, a DefaultDataSourceFactory and this also built on a **DefaultBandwidthMeter** - **Meter2**, also here it is a \"TransferListener\")\r\n\r\nThe questions are:\r\n\r\n- Should **Meter1** and **Meter2** be the same instance? As I suppose that it should use the information provided by TransferListener's functionality in DataSourceFactory for the Track selection judgement in DefaultTrackSelector?\r\n\r\n- When I want to reuse that SimpleExoPlayer instance for different MediaSource, should I reuse the DataSourceFactory above to create other MediaSource? I'm afraid that reusing it (and in turn, the DefaultBandwidthMeter) will cause the confusing between Track selection because DefaultBandwidthMeter is not-stateless, and an update on the load of an MediaSource using it may effect the **track selection** of another MediaSource also using it.\r\n\r\nThanks in advance. Also, an example showing how to re-use the ExoPlayer instance across MediaSource as well as configuration (DrmSessionManager, extension mode, etc) is highly expected.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3705/comments",
    "author": "eneim",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2018-01-15T09:02:32Z",
        "body": "> Should Meter1 and Meter2 be the same instance? As I suppose that it should use the information provided by TransferListener's functionality in DataSourceFactory for the Track selection judgement in DefaultTrackSelector?\r\n\r\nYes, correct. It's not ideal that you need to pass the bandwidth meter around in this way, in particular because it's quite easy to make the mistake of not passing the same instance. This is something that I think we're planning on addressing at some point.\r\n\r\n> When I want to reuse that SimpleExoPlayer instance for different MediaSource, should I reuse the DataSourceFactory above to create other MediaSource? I'm afraid that reusing it (and in turn, the DefaultBandwidthMeter) will cause the confusing between Track selection because DefaultBandwidthMeter is not-stateless, and an update on the load of an MediaSource using it may effect the track selection of another MediaSource also using it.\r\n\r\nIt's fine to re-use the `DataSourceFactory` (and `DefaultBandwidthMeter`) when playing through a sequence of videos. Note that this means the bandwidth estimate from the end of one playback is carried forward to the start of the next playback. We see this as desirable, compared to the alternative in which each playback starts with no bandwidth information. Note that the main demo app uses a single `DefaultBandwidthMeter` instance, which is why playbacks after the first one tend to start immediately in high quality (assuming you have a good WiFi connection), where-as the first one will tend to start in a lower quality and adapt up.\r\n\r\nAs an aside, the one case where confusion would arise is if you were to have two players using the same bandwidth meter whilst playing simultaneously."
      }
    ]
  },
  {
    "number": 3700,
    "title": "hide play pause button while buffering.",
    "created_at": "2018-01-12T13:15:49Z",
    "closed_at": "2018-01-15T08:28:10Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3700",
    "body": "how to hide play pause button while media is buffering and show when it is playing or in pause state ?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3700/comments",
    "author": "ZohaibGhafoor",
    "comments": [
      {
        "user": "bhoopendrayash",
        "created_at": "2018-01-12T13:23:01Z",
        "body": "  \r\n\r\nplayer.addListener(new ExoPlayer.EventListener() {\r\n            @Override\r\n            public void onTimelineChanged(Timeline timeline, Object manifest) {\r\n            }\r\n\r\n            @Override\r\n            public void onRepeatModeChanged(int repeatMode) {\r\n            }\r\n\r\n            @Override\r\n            public void onTracksChanged(TrackGroupArray trackGroups, TrackSelectionArray trackSelections) {\r\n            }\r\n\r\n            @Override\r\n            public void onLoadingChanged(boolean isLoading) {\r\n            }\r\n\r\n            @Override\r\n            public void onPlayerStateChanged(boolean playWhenReady, int playbackState) {\r\n                if (playWhenReady) {\r\n                    // player is now ready to play and it may have in below state\r\n                    switch (playbackState) {\r\n                        case ExoPlayer.STATE_IDLE:\r\n                            Play.setVisibility(View.GONE);\r\n                            break;\r\n                        case ExoPlayer.STATE_BUFFERING:\r\n                            progressBar.setVisibility(View.VISIBLE);\r\n                            break;\r\n                        case ExoPlayer.STATE_READY:\r\n                            Play.setVisibility(View.GONE);\r\n                            break;\r\n                        case ExoPlayer.STATE_ENDED:\r\n                            Play.setVisibility(View.GONE);\r\n                            \r\n                            break;\r\n                    }\r\n                } else {\r\n                    progressBar.setVisibility(View.GONE);\r\n                }\r\n            }\r\nJust add the ExoPlayer.EventListener on player where you can get all event related to player playback State .and also can customize simple exoplayer ui with costume controls "
      },
      {
        "user": "ZohaibGhafoor",
        "created_at": "2018-01-12T13:27:30Z",
        "body": "@bhoopendrayash here i am using exoplayer demo version and it is not working\r\n\r\n       `@Override\r\n        public void onPlayerStateChanged(boolean playWhenReady, int playbackState) {\r\n            if (playbackState == Player.STATE_ENDED) {\r\n                showControls();\r\n            }\r\n       \r\n            else if (playbackState == Player.STATE_BUFFERING) {\r\n                PlaybackControlView controlView = simpleExoPlayerView.findViewById(R.id.exo_controller);\r\n                controlView.findViewById(R.id.exo_play).setVisibility(View.GONE);\r\n                controlView.findViewById(R.id.exo_play).setVisibility(View.INVISIBLE);\r\n                controlView.findViewById(R.id.exo_pause).setVisibility(View.GONE);\r\n                controlView.findViewById(R.id.exo_pause).setVisibility(View.INVISIBLE);\r\n                showProgressBar();\r\n            } else {\r\n                hideProbressBar();\r\n            }\r\n    \r\n            updateButtonVisibilities();\r\n        }`"
      },
      {
        "user": "ojw28",
        "created_at": "2018-01-15T08:28:09Z",
        "body": "If you require custom UI behavior, you should look at creating your own views rather than relying on those provided by the library. Note that you can easily use the source code for the library provided views as a starting point, and modify them to change the behavior to match what you need."
      },
      {
        "user": "leeprohacker",
        "created_at": "2018-02-26T16:30:54Z",
        "body": "try and it is working     : \r\n\r\n_private void showProgressBarAndControlToggle(boolean isShow) {\r\n        if (isShow) {\r\n            progressBar.setVisibility(View.VISIBLE);\r\n            imgPlay.setImageResource(0);\r\n            imgPause.setImageResource(0);\r\n        } else {\r\n            progressBar.setVisibility(View.GONE);\r\n            imgPlay.setImageResource(R.drawable.ic_play_arrow_black_64dp);\r\n            imgPause.setImageResource(R.drawable.ic_pause_black_64dp);\r\n        }\r\n    }__"
      }
    ]
  },
  {
    "number": 3698,
    "title": "How to start dash or hls video from lowest resolution then it shoult change auto while running ?",
    "created_at": "2018-01-12T10:51:27Z",
    "closed_at": "2018-01-15T08:38:03Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3698",
    "body": "hls or dash video always try to start from highest resolution .how to start dash or hls video from lowest resolution like 140p 360p etc and then it should change it's resolution based on network automatically ?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3698/comments",
    "author": "ZohaibGhafoor",
    "comments": [
      {
        "user": "linhai326",
        "created_at": "2018-01-12T23:39:19Z",
        "body": "adaptiveTrackSelection.java:\r\nDEFAULT_MAX_INITIAL_BITRATE change this value to the lowest bitrate you have in your source."
      },
      {
        "user": "ojw28",
        "created_at": "2018-01-15T08:38:03Z",
        "body": "Format selection is, by default, based on an estimate of the currently available bandwidth. The component responsible for providing this estimate is `DefaultBandwidthMeter`.\r\n\r\nIf you re-use the same `DefaultBandwidthMeter` instance from one playback to the next, as is the case in our demo app, then the bandwidth estimate obtained from playing the previous video is used to make the initial format selection for the next one. When on a fast network this effectively causes the highest quality to be selected at the start of each playback (note: the player will still adapt down into a lower quality if bandwidth is subsequently reduced). This behavior is, in my opinion, preferable to resetting back to a lower quality and adapting up for every playback. If you'd prefer everything to be fully reset then you can do this by creating a new player for each playback, and instantiating a new `DefaultBandwidthMeter` to use for it, hence discarding any bandwidth information derived from the previous playback.\r\n\r\nAt the start of the *very first* playback, initial format selection is made using an assumed bitrate. This is what `DEFAULT_MAX_INITIAL_BITRATE` is, as referenced by @linhai326 above."
      }
    ]
  },
  {
    "number": 3688,
    "title": "Exoplayer DASH + Widevine my app",
    "created_at": "2018-01-09T12:11:09Z",
    "closed_at": "2018-01-13T13:50:07Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3688",
    "body": "Hello guys\r\nFriends have a project of my app and be running well with exoplayer but I wanted to integrate DASH + Widevine into my application and wanted to know if anyone could help?\r\n\r\nThank you",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3688/comments",
    "author": "admobwebmaster",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2018-01-13T13:50:07Z",
        "body": "This issue tracker is intended for more specific issues, questions and enhancement requests. For requests this general, you'd be best off asking elsewhere. If you have something specific that you're stuck with, please feel free to respond here and we'll do our best to help."
      }
    ]
  },
  {
    "number": 3686,
    "title": "ExoPlayer Decoder failed on Android Version 5.1",
    "created_at": "2018-01-09T08:16:25Z",
    "closed_at": "2018-01-09T13:49:18Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3686",
    "body": "### Issue description\r\nexo player is throwing exceptions and gives error code Error 0xfffffc0e while streaming video on my Moto E2 phone which has android version 5.1, Kernel version 3.4.42 and  Build number LPCS23. 13-56-5. also could not find documentation on the above error code.  \r\n\r\n### Reproduction steps\r\ninitialize player with given url (i will send you video URL in email)\r\ntry with Motorola e2 with version 5.1\r\nplayer will directly call onPlayerError() with following Exceptions in logcat\r\n\r\n### Version of ExoPlayer being used\r\n2.5.1\r\n\r\n### Device(s) and version(s) of Android being used\r\nMotorola E2, and version is 5.1\r\n\r\n### A full bug report captured from the device\r\n\r\n```\r\n onPlayerError: Error cause\r\n                                                                 com.google.android.exoplayer2.mediacodec.MediaCodecRenderer$DecoderInitializationException: Decoder init failed: OMX.qcom.video.decoder.avc, Format(1, null, video/avc, -1, null, [1920, 1080, -1.0], [-1, -1])\r\n                                                                     at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.maybeInitCodec(MediaCodecRenderer.java:382)\r\n                                                                     at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.onInputFormatChanged(MediaCodecRenderer.java:814)\r\n                                                                     at com.google.android.exoplayer2.video.MediaCodecVideoRenderer.onInputFormatChanged(MediaCodecVideoRenderer.java:432)\r\n                                                                     at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.render(MediaCodecRenderer.java:513)\r\n                                                                     at com.google.android.exoplayer2.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:564)\r\n                                                                     at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:340)\r\n                                                                     at android.os.Handler.dispatchMessage(Handler.java:98)\r\n                                                                     at android.os.Looper.loop(Looper.java:135)\r\n                                                                     at android.os.HandlerThread.run(HandlerThread.java:61)\r\n                                                                  Caused by: android.media.MediaCodec$CodecException: Error 0xfffffc0e\r\n                                                                     at android.media.MediaCodec.native_configure(Native Method)\r\n                                                                     at android.media.MediaCodec.configure(MediaCodec.java:584)\r\n                                                                     at com.google.android.exoplayer2.video.MediaCodecVideoRenderer.configureCodec(MediaCodecVideoRenderer.java:403)\r\n                                                                     at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.maybeInitCodec(MediaCodecRenderer.java:371)\r\n                                                                     at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.onInputFormatChanged(MediaCodecRenderer.java:814) \r\n                                                                     at com.google.android.exoplayer2.video.MediaCodecVideoRenderer.onInputFormatChanged(MediaCodecVideoRenderer.java:432) \r\n                                                                     at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.render(MediaCodecRenderer.java:513) \r\n                                                                     at com.google.android.exoplayer2.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:564) \r\n                                                                     at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:340) \r\n                                                                     at android.os.Handler.dispatchMessage(Handler.java:98) \r\n                                                                     at android.os.Looper.loop(Looper.java:135) \r\n                                                                     at android.os.HandlerThread.run(HandlerThread.java:61) \r\n01-09 13:44:59.699 27958-27958/com.lxltech.sc.participant D/LOG: onPlayerError: exception \r\n                                                                 com.google.android.exoplayer2.ExoPlaybackException\r\n                                                                     at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.throwDecoderInitError(MediaCodecRenderer.java:395)\r\n                                                                     at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.maybeInitCodec(MediaCodecRenderer.java:382)\r\n                                                                     at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.onInputFormatChanged(MediaCodecRenderer.java:814)\r\n                                                                     at com.google.android.exoplayer2.video.MediaCodecVideoRenderer.onInputFormatChanged(MediaCodecVideoRenderer.java:432)\r\n                                                                     at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.render(MediaCodecRenderer.java:513)\r\n                                                                     at com.google.android.exoplayer2.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:564)\r\n                                                                     at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:340)\r\n                                                                     at android.os.Handler.dispatchMessage(Handler.java:98)\r\n                                                                     at android.os.Looper.loop(Looper.java:135)\r\n                                                                     at android.os.HandlerThread.run(HandlerThread.java:61)\r\n                                                                  Caused by: com.google.android.exoplayer2.mediacodec.MediaCodecRenderer$DecoderInitializationException: Decoder init failed: OMX.qcom.video.decoder.avc, Format(1, null, video/avc, -1, null, [1920, 1080, -1.0], [-1, -1])\r\n                                                                     at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.maybeInitCodec(MediaCodecRenderer.java:382) \r\n                                                                     at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.onInputFormatChanged(MediaCodecRenderer.java:814) \r\n                                                                     at com.google.android.exoplayer2.video.MediaCodecVideoRenderer.onInputFormatChanged(MediaCodecVideoRenderer.java:432) \r\n                                                                     at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.render(MediaCodecRenderer.java:513) \r\n                                                                     at com.google.android.exoplayer2.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:564) \r\n                                                                     at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:340) \r\n                                                                     at android.os.Handler.dispatchMessage(Handler.java:98) \r\n                                                                     at android.os.Looper.loop(Looper.java:135) \r\n                                                                     at android.os.HandlerThread.run(HandlerThread.java:61) \r\n                                                                  Caused by: android.media.MediaCodec$CodecException: Error 0xfffffc0e\r\n                                                                     at android.media.MediaCodec.native_configure(Native Method)\r\n                                                                     at android.media.MediaCodec.configure(MediaCodec.java:584)\r\n                                                                     at com.google.android.exoplayer2.video.MediaCodecVideoRenderer.configureCodec(MediaCodecVideoRenderer.java:403)\r\n                                                                     at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.maybeInitCodec(MediaCodecRenderer.java:371)\r\n                                                                     at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.onInputFormatChanged(MediaCodecRenderer.java:814) \r\n                                                                     at com.google.android.exoplayer2.video.MediaCodecVideoRenderer.onInputFormatChanged(MediaCodecVideoRenderer.java:432) \r\n                                                                     at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.render(MediaCodecRenderer.java:513) \r\n                                                                     at com.google.android.exoplayer2.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:564) \r\n                                                                     at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:340) \r\n                                                                     at android.os.Handler.dispatchMessage(Handler.java:98) \r\n                                                                     at android.os.Looper.loop(Looper.java:135) \r\n                                                                     at android.os.HandlerThread.run(HandlerThread.java:61) \r\n01-09 13:44:59.699 27958-27958/com.lxltech.sc.participant D/LOG: onPlayerError: exception type 1\r\n```\r\n  \r\n  ",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3686/comments",
    "author": "kuldiep",
    "comments": [
      {
        "user": "kuldiep",
        "created_at": "2018-01-09T10:42:15Z",
        "body": "@ojw28 is it device specific issue or anything else ..i am confused? any solution for this?"
      },
      {
        "user": "ojw28",
        "created_at": "2018-01-09T11:25:39Z",
        "body": "It looks device specific, but i's hard to say without being provided with any content that reproduces the issue, as requested in the issue template. Please provide some so that we can reproduce the issue in our demo app."
      },
      {
        "user": "kuldiep",
        "created_at": "2018-01-09T11:39:23Z",
        "body": "@ojw28 i have updated issue with Reproduction steps...and will send URL in mail asap."
      },
      {
        "user": "kuldiep",
        "created_at": "2018-01-09T12:43:24Z",
        "body": "@ojw28 i have sent url in mail id given in template, please check it."
      },
      {
        "user": "ojw28",
        "created_at": "2018-01-09T13:49:18Z",
        "body": "It's probably just that this device is unable to play 1080p video (I'd expect playback of 720p video to succeed on this device). You can validate this theory by trying playback on the device using our demo app, and looking for the following in the logs:\r\n```\r\nsupported=NO_EXCEEDS_CAPABILITIES\r\n```\r\nThis indicates that the device is not capable of playing the stream, although we try anyway because some devices under report their true capabilities. If the stream really cant be played, a failure will occur such as the one above."
      }
    ]
  },
  {
    "number": 3685,
    "title": "I use exoplayer1.5.16 Demoplayer",
    "created_at": "2018-01-09T08:03:16Z",
    "closed_at": "2018-01-09T10:14:00Z",
    "labels": [
      "question",
      "need more info"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3685",
    "body": "this is my error \r\n`01-09 15:03:30.000: E/Unity(11656): OPENGL NATIVE PLUG-IN ERROR: GL_INVALID_ENUM: enum argument out of range\r\n\r\n01-09 15:03:30.000: E/Unity(11656): \r\n\r\n01-09 15:03:30.000: E/Unity(11656): (Filename: ./Runtime/GfxDevice/opengles/GfxDeviceGLES.cpp Line: 370)\r\n`\r\nthis is my code\r\n`private void preparePlayer(boolean playWhenReady) {\r\n\r\n        if (player == null) {\r\n\r\n            player = new DemoPlayer(getRendererBuilder());\r\n\r\n            player.addListener(this);\r\n\r\n            player.setCaptionListener(this);\r\n\r\n            player.setMetadataListener(this);\r\n\r\n            player.seekTo(0L);\r\n\r\n            playerNeedsPrepare = true;\r\n\r\n        }\r\n        if (playerNeedsPrepare) {\r\n\r\n            player.prepare();\r\n\r\n            playerNeedsPrepare = false;\r\n\r\n        }\r\n        player.setSurface(this.m_Surface);\r\n\r\n        player.setPlayWhenReady(playWhenReady);\r\n\r\n        LogUtil.d(player.getPlaybackState()+\"preparePlayer\");\r\n\r\n    }`\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3685/comments",
    "author": "wangjian199074",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2018-01-09T10:14:00Z",
        "body": "This error is not related to ExoPlayer (looks like a Unity error). Version 1.5.16 is also very old."
      }
    ]
  },
  {
    "number": 3680,
    "title": "Backward compatibility issue since version 2.5.x",
    "created_at": "2018-01-08T13:13:16Z",
    "closed_at": "2018-02-26T18:28:10Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3680",
    "body": "My app has dependency of my own library module published in maven repo, which includes Exoplayer r2.4.3 dependency.\r\nAnd when I try to update version to r2.5.0, Error occurs as below:\r\n```\r\njava.lang.NoSuchMethodError: No virtual method addListener(Lcom/google/android/exoplayer2/ExoPlayer$EventListener;)V in class Lcom/google/android/exoplayer2/SimpleExoPlayer; or its super classes (declaration of 'com.google.android.exoplayer2.SimpleExoPlayer'\r\n```\r\nSo It means there is backward compatibility issue since 2.5.x.\r\n\r\nAnd I need to add another dependency which has Exoplayer r2.0.3 dependency.(ex:Facebook Audience Network SDK)\r\nSo I want to resolve dependency conflict by forcing every module to use r2.4.3.\r\nBut how can I assure that r2.4.3 I'm using currently is backward compatible with r2.0.3\r\nwhen it is not in r2.5.0??\r\n\r\nIs there any way to know which version is the latest version that can assure backward compatibility??",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3680/comments",
    "author": "EvanHong1",
    "comments": [
      {
        "user": "EvanHong1",
        "created_at": "2018-01-11T11:32:09Z",
        "body": "Could anyone answer this?"
      },
      {
        "user": "ojw28",
        "created_at": "2018-01-15T08:53:30Z",
        "body": "We don't have a great answer for this, unfortunately, since we do not currently guarantee API stability even between minor versions.\r\n\r\nIn most cases ExoPlayer is intended to be used by apps directly, in which case this isn't a problem because the app developer can simply pick their preferred version. The problem arises when libraries depend on ExoPlayer. This forces an app using such a library to use the same version of ExoPlayer as the library uses. If an app wants to use two libraries, both of which depend on different versions of ExoPlayer, then that becomes tricky to resolve.\r\n\r\nWe recommend that library developers who wish to use ExoPlayer do so by building it directly into their library with an obfuscated package name, rather than having a dependency. This allows both the library and app to keep their own separate versions at the cost of increased binary size, but since ExoPlayer is small (particularly after proguarding) the increase isn't particularly large. The Google VR SDK is an example of a library that internalizes ExoPlayer in this way. The Facebook Audience Network SDK should probably do the same thing, so I'd suggest you raise an issue with the developers at Facebook requesting that they do this.\r\n\r\nWhether we revisit this in the future depends largely on how many libraries are using ExoPlayer, since this is the problematic case. We're aware that the solution isn't ideal, and so if we start seeing widespread usage by libraries we'll probably reconsider."
      }
    ]
  },
  {
    "number": 3669,
    "title": "IMA extenstion",
    "created_at": "2018-01-05T09:28:38Z",
    "closed_at": "2018-02-28T16:54:08Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3669",
    "body": "Hi,\r\n\r\nWanted to describe a scenario in IMA extention ads playback,\r\nthe VMAP I use contains preroll, several cue points as midrolls and postroll.\r\nUser watches preroll then seeks to the end  of the stream. In the current implementation what will happen is that the user will see all the ads that are configured in the vamp and that he did not watch, and only after that the postroll will be shown\r\nI think this behaviour should be configurable in some way.\r\n\r\nI beleive that displaying only the last relevant cuepoint to the position after seek is the user friendly behaviour.\r\nI do not see reason why we will display all the ads in the cue points in the VMAP till the postroll.\r\nI would preffer to show only the postroll. If user then seeks back he will get the next ad on its correct time offset when it comes.\r\n\r\n10x\r\nGilad,\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3669/comments",
    "author": "giladna",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2018-01-05T09:45:55Z",
        "body": "The intended behavior is as follows: when seeking after the last midroll before a postroll, the user should see the last midroll, then content will play to the end, then they will see the postroll. I think that's the same as the desired behavior you're describing. If there are two midrolls then a postroll and the user seeks after the second midroll, the first midroll should not be shown. (But if an ad break contains multiple ads in an ad pod, all the ads in the ad pod are shown as part of playing the ad break.)\r\n\r\nIt sounds like that's not consistent with what you're seeing. Could you provide a link to the ad tag you're trying to play (here or via email to `dev.exoplayer@gmail.com`) and we can take a look? As we're wrapping the IMA SDK we have limited control over rules concerning what ads to play, but if the behavior is not as described this sounds like it might be an IMA bug. Thanks!"
      },
      {
        "user": "andrewlewis",
        "created_at": "2018-01-05T09:49:34Z",
        "body": "The ExoPlayer demo app contains a sample ad tag \"VMAP pre-roll single ad, mid-roll standard pods with 5 ads every 10 seconds for 1:40, post-roll single ad\" that works correctly for me: after the preroll plays, seek after the final midroll and you should see that the content plays to the end from the seek position, then the postroll plays."
      },
      {
        "user": "giladna",
        "created_at": "2018-01-05T10:26:18Z",
        "body": "@andrewlewis \r\nThanks,\r\nWhat I see when seek to end \r\nI have 2 ads in each cuepoint when I seek to end  (using nexus 6p 8.1.0)\r\nthe ads indexs are mixed and I see both the last cuepoint and the post roll\r\nI think that the correct flow is to play only the post roll.\r\n\r\nsending you now the adtag.\r\n\r\nAnother issue in this adtag that it is dynamic\r\n\r\nin pre roll there are alwayes 2 ads you might get 2 short ads or one long with skip and one short\r\n\r\nif you get the long one and skip it will not play the second ad in the pod (bumper) if you wait till the the end it will play it.\r\n\r\nThanks gilad\r\n  "
      },
      {
        "user": "giladna",
        "created_at": "2018-01-08T19:42:42Z",
        "body": "@andrewlewis \r\nDid you get the mail?\r\n10x\r\nGilad."
      },
      {
        "user": "andrewlewis",
        "created_at": "2018-01-09T08:31:08Z",
        "body": "@giladna Yes, thanks. I'll take a look soon."
      },
      {
        "user": "andrewlewis",
        "created_at": "2018-01-12T17:00:04Z",
        "body": "Is the content longer than the last midroll position (~ 45 min)? I can't verify as the link from the email returns HTTP status 404. If not, perhaps that could explain the weird behavior. Otherwise, please provided an updated/working link to the content.\r\n\r\nI'm not sure exactly how to handle the content being shorter than the last midroll position, but it seems preferable to prepare the ad tag such that all ad breaks lie within the content if possible."
      },
      {
        "user": "giladna",
        "created_at": "2018-01-14T07:47:48Z",
        "body": "@andrewlewis \r\nThanks,\r\nIt might be possible that the m3u8 has geo blocking.\r\nThe video durationI have tested is 60 min so it is not that case.\r\n\r\nI am sending another m3u8 url to the ExoPlayer dev mail so you can test it with working stream.\r\n\r\nBR,\r\nGilad."
      },
      {
        "user": "giladna",
        "created_at": "2018-01-20T22:41:52Z",
        "body": "@andrewlewis \r\ndid you check it again?\r\n10x"
      },
      {
        "user": "andrewlewis",
        "created_at": "2018-02-02T09:24:42Z",
        "body": "@giladna I'm afraid not, but I haven't forgotten this and will try to get round to it soon."
      },
      {
        "user": "andrewlewis",
        "created_at": "2018-02-14T15:24:58Z",
        "body": "I tried to reproduce this using the ad tag and content provided via email but the ad groups seem to be empty and I only see a preroll and two midroll ad groups (no postroll). Please could you check the ad tag? Thanks."
      }
    ]
  },
  {
    "number": 3663,
    "title": "Wrapping DynamicConcatenatingMediaSource",
    "created_at": "2018-01-04T01:15:02Z",
    "closed_at": "2018-01-09T17:40:36Z",
    "labels": [
      "question",
      "need more info"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3663",
    "body": "I know that `DynamicConcatenatingMediaSource` is final, but according to this issue #3400 you should be able to use composition. However, when I try that, and using  \r\n\r\n`dcMediaSource.prepareSource(player, false) { source, timeline, manifest -> listener?.onSourceInfoRefreshed(source, timeline, manifest) }`\r\n\r\nThe media stays in buffering. Looking at the prepareSource for `DynamicConcatenatingMediaSource` it looks like it ignores isTopLevel.  Is this a bug? Is there anyway to wrap `DynamicConcatenatingMediaSource` ?\r\n\r\n  ",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3663/comments",
    "author": "ncapdevi",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2018-01-04T09:33:10Z",
        "body": "Can you give some more details on what you're trying to achieve? Issue #3400 was actually about wrapping an `ExtractorMediaSource` (which is then used as a single item in a concatenation).\r\n\r\nIn any case, if you use composition for any `MediaSource` you need to make sure to forward all method calls to the relevant inner instance. For the `prepareSource` call in particular you need to use `false` for `isTopLevelSource` because it no longer is the top level source, and in the listener override you need to make sure to call `listener.onSourceInfoRefeshed` with the outer source not the inner one (`dcMediaSource` instead of `source` in your example). That's the reason your're seeing the buffering, as the player waits for the callback of the outer source but only receives one from the inner source."
      },
      {
        "user": "ncapdevi",
        "created_at": "2018-01-04T20:03:17Z",
        "body": "@tonihei Thanks for the feedback and help.  As far as what I'm trying to achieve, at this point it's primarily exploratory.  But the overarching goal is that my audio only player will be pulling down new tracks, and caching them as it goes, and if for some reason it fails to pull down a new track (bad connection or server issues), it should grab a track from cache to continue seamless playback, while continuing this process (get a new track from server if possible, if not, move to the next cached track).  So in order to implement that, I'm diving into the DynamicMediaSource to explore how it works, and possible manage keeping track of what is/isn't being cached there as well as when tracks start/stop.\r\n\r\n   I tried following your advice and passing in the dcMediaSource, but still am getting stuck on Buffering with he following code\r\n\r\n```\r\nclass MyAppDynamicMediaSource(context: Context, private val eventHandler: ExtractorMediaSource.EventListener) : MediaSource {\r\n\r\n\r\n    private val datasourceFactory: DataSource.Factory = DefaultHttpDataSourceFactory(Util.getUserAgent(context, MyApp.getApplicationListener(context).appName))\r\n\r\n    private val extractorsFactory: ExtractorsFactory = DefaultExtractorsFactory()\r\n    private val dcMediaSource = DynamicConcatenatingMediaSource()\r\n\r\n    fun addNewSong(fileURL: String): MediaSource {\r\n        val extractorMediaSource = ExtractorMediaSource(Uri.parse(fileURL), datasourceFactory, extractorsFactory, null, eventHandler)\r\n        dcMediaSource.addMediaSource(extractorMediaSource)\r\n        return extractorMediaSource\r\n    }\r\n\r\n    override fun prepareSource(player: ExoPlayer?, isTopLevelSource: Boolean, listener: MediaSource.Listener?) {\r\n        dcMediaSource.prepareSource(player, false) { _, timeline, manifest -> listener?.onSourceInfoRefreshed(dcMediaSource, timeline, manifest) }\r\n    }\r\n\r\n    override fun createPeriod(id: MediaSource.MediaPeriodId?, allocator: Allocator?): MediaPeriod {\r\n        return dcMediaSource.createPeriod(id, allocator)\r\n    }\r\n\r\n    override fun releaseSource() {\r\n        dcMediaSource.releaseSource()\r\n    }\r\n\r\n    override fun releasePeriod(mediaPeriod: MediaPeriod?) {\r\n        dcMediaSource.releasePeriod(mediaPeriod)\r\n    }\r\n\r\n    override fun maybeThrowSourceInfoRefreshError() {\r\n        dcMediaSource.maybeThrowSourceInfoRefreshError()\r\n    }\r\n\r\n}\r\n```\r\n\r\nApologies if you aren't familiar with Kotlin, I can repost the code in Java if it helps at all. Any obvious things that I'm doing wrong that would prevent this from playing?"
      },
      {
        "user": "tonihei",
        "created_at": "2018-01-05T10:07:54Z",
        "body": "Code looks fine to me. \r\nJust to make sure: I assume you prepare the player with player.prepare(myAppDynamicMediaSource) and you never call any of the media source methods directly (apart from addNewSong of course).\r\n\r\nAnd to investigate the reason behind this buffering it would be helpful if you could use your media source  wrapper in the demo app and send a bug report or the logcat output of what happened when you are stuck in the buffering mode."
      },
      {
        "user": "ncapdevi",
        "created_at": "2018-01-05T22:13:20Z",
        "body": "Yes, I'm doing exactly as you had said. I'm able to successfully wrap the ExtractorMediaSource, but when wrapping this class, I get a onPlayerStateChanged call back for Idle, and for buffering, but then nothing else.  I'll try to get a version of it in the demo app to see if that helps at all."
      },
      {
        "user": "ncapdevi",
        "created_at": "2018-01-05T22:32:10Z",
        "body": "I receive the same issue with the DemoApp with the following conditions: On Branch dev-v2 (commit d9bee4d29c54eb12ca64b64e6f455add96d242ba). I have added this class\r\n\r\n```\r\npublic class DemoDynConMediaSource implements MediaSource {\r\n     DynamicConcatenatingMediaSource dcMediaSource = new DynamicConcatenatingMediaSource();\r\n\r\n    @Override\r\n    public void prepareSource(ExoPlayer player, boolean isTopLevelSource, final Listener listener){\r\n        dcMediaSource.prepareSource(player, false, new Listener() {\r\n            @Override\r\n            public void onSourceInfoRefreshed(MediaSource source, Timeline timeline, @Nullable Object manifest){\r\n                listener.onSourceInfoRefreshed(dcMediaSource,timeline,manifest);\r\n            }\r\n        });\r\n    }\r\n\r\n    @Override\r\n    public void maybeThrowSourceInfoRefreshError() throws IOException{\r\n        dcMediaSource.maybeThrowSourceInfoRefreshError();\r\n    }\r\n\r\n    @Override\r\n    public MediaPeriod createPeriod(MediaPeriodId id, Allocator allocator){\r\n        return dcMediaSource.createPeriod(id,allocator);\r\n    }\r\n\r\n    @Override\r\n    public void releasePeriod(MediaPeriod mediaPeriod){\r\n        dcMediaSource.releasePeriod(mediaPeriod);\r\n    }\r\n\r\n    @Override\r\n    public void releaseSource(){\r\n        dcMediaSource.releaseSource();\r\n    }\r\n}\r\n\r\n```\r\n\r\nAnd in PlayerActivity.java at line 360 adding\r\n\r\n```\r\n    DemoDynConMediaSource  dcMediaSource = new DemoDynConMediaSource();\r\n    dcMediaSource.dcMediaSource.addMediaSource(mediaSource);\r\n    player.prepare(dcMediaSource, !haveResumePosition, false);\r\n\r\n```\r\nThe only possible debug log info I see is\r\n\r\n```\r\n01-05 14:31:16.906 7314-7314/com.google.android.exoplayer2.demo D/EventLogger: state [0.07, true, I]\r\n01-05 14:31:16.924 7314-7314/com.google.android.exoplayer2.demo D/EventLogger: state [0.09, true, B]\r\n```\r\n\r\nIf I instead use the standard DynamicConcatenatingMediaSource at lines 360 in PlayerActivity.java it works just fine. The one difference I seem to notice is that `onSourceInfoRefreshed` in ExoPlayerImplInternal.java is called only once with the wrapper class, but with the standard DynamicConcatenatingMediaSource it is called 3 times\r\n\r\n\r\n\r\nPlease let me know if there's anything else I can do to help debug this.\r\n  "
      },
      {
        "user": "ncapdevi",
        "created_at": "2018-01-05T23:01:42Z",
        "body": "@tonihei  was finally able to solve it by changing line 22 in `DemoDynConMediaSource.java` from:\r\n`                listener.onSourceInfoRefreshed(dcMediaSource,timeline,manifest);`\r\n to:\r\n                `listener.onSourceInfoRefreshed(DemoDynConMediaSource.this,timeline,manifest);`\r\n\r\nMaybe you could help me understand why that makes sense in this case (but you don't do that for ExtractorMediaSource)?\r\n"
      },
      {
        "user": "tonihei",
        "created_at": "2018-01-09T17:40:36Z",
        "body": "That's actually what I meant in my first post - you need to use the outer wrapping media source and not the inner one for the listener. This is to ensure the player gets a callback from the media source passed into `player.prepare(mediaSource)`. So ` dcMediaSource` is of course still the wrong one, because you need to return your `DemoDynConMediaSource` as you found out yourself. Sorry for the confusion.\r\n\r\nI'll close the issue because it seems to be solved. Feel free to reopen if necessary. "
      },
      {
        "user": "ncapdevi",
        "created_at": "2018-01-09T17:42:22Z",
        "body": "Perfect, thank you for your help"
      }
    ]
  },
  {
    "number": 3637,
    "title": "Continue buffering while in pause",
    "created_at": "2017-12-24T16:44:31Z",
    "closed_at": "2018-01-04T18:18:57Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3637",
    "body": "Hi!\r\n\r\nCurrently when player is paused it stops to receive new data in buffer.\r\nIs it possible to continue buffering while player is in pause state?\r\n\r\nIf there is no other options, guess, I could use Cache feature to save data in separate thread and then use cached data to play when it is buffered enough while in pause. If it is the case, could you please explain should I use Downloader to save data in one thread and then use another Cache with the link to the same DataSpec or can I use the same Cache instance in another thread for playback?\r\n\r\nThanks!",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3637/comments",
    "author": "aarondib",
    "comments": [
      {
        "user": "erdemguven",
        "created_at": "2017-12-27T19:39:29Z",
        "body": "For the second part of the question, it's an error to create two Cache instances which store cache files on the same folder. It's OK to access to a single instance of Cache from different threads but there are issues with writing and reading the same content on the cache. In your case as long as you stop the downloader before player resumes it should be fine.  "
      },
      {
        "user": "ojw28",
        "created_at": "2018-01-02T21:00:04Z",
        "body": "For the first part of the question: We don't stop buffering when the player is paused. We stop buffering when the criteria for how much media should be buffered is reached, which is independent of whether the player is paused or not. You can customize how much media is buffered by instantiating a `DefaultLoadControl` using one of the constructors that allows specifying minimum and maximum buffer durations, and then passing that instance into a `ExoPlayerFactory` when instantiating the player. You can also implement your own `LoadControl` from scratch if that's easier.\r\n\r\nNote that `LoadControl` controls buffering in RAM, so there's only so far you can go before you'll end up with your process crashing with an out of memory error. If you want to buffer to disk then you should use the cache feature instead."
      },
      {
        "user": "aarondib",
        "created_at": "2018-01-04T18:18:57Z",
        "body": "Thanks for your replies! Very useful."
      }
    ]
  },
  {
    "number": 3621,
    "title": "Handling Corrupted HLS response",
    "created_at": "2017-12-20T18:33:40Z",
    "closed_at": "2018-01-09T14:48:25Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3621",
    "body": "As you may well know, hls consists file sequences and the tag value of the sequence must be incremented with 1 for every media. But what if it doesn't meet this requirement.\r\n\r\n`if (chunkMediaSequence < mediaPlaylist.mediaSequence) {\r\n      fatalError = new BehindLiveWindowException();\r\n      return;\r\n    }`\r\nin here HlsChunkSource.java line 279 it decides the type of exception in that situation and player freezes. By using onPlayerError(ExoPlaybackException error) method I can handle that and then \r\n\r\n`player.prepare(mediaSourceWithAds);\r\nplayer.setPlayWhenReady(true);`\r\n\r\ncall these two in order to make it continue to play. Am I doing it wrong or missing something? Or is there another way to handle that kind of situation?\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3621/comments",
    "author": "orhunkupeli7",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2017-12-21T09:10:34Z",
        "body": "That sounds like the right way to handle this at the moment.\r\n\r\nAssigning @AquilesCanta in case he has further/different suggestions for what to do in this case."
      },
      {
        "user": "AquilesCanta",
        "created_at": "2018-01-09T14:48:25Z",
        "body": "> As you may well know, hls consists file sequences and the tag value of the sequence must be incremented with 1 for every media. But what if it doesn't meet this requirement.\r\n\r\n`BehindLiveWindowException` is not specifically intended to handle non-spec-compliant media sequences. Its purpose is to signal that the media buffering has fallen behind what the server offers for downloading. If the media sequence is not increasing correctly, the behavior is undefined. You might observe any of the following three behaviors:\r\n\r\n- Long/endless buffering state.\r\n- `PlaylistResetException`.\r\n- `BehindLiveWindowException`.\r\n\r\nFor the last two, the suggested approach is showcased in the demo app's `PlayerActivity`. Have a look at `isBehindLiveWindow` method and its corresponding action (a similar approach can be used for `PlaylistResetException`). You will indeed need to re-prepare the player, but make sure you are not re-using any MediaSource instances. Maybe worth mentioning: playWhenReady state is persistent across player preparations. Another option is to prevent BehindLiveWindowExceptions by seeking or altering the playback speed before actually falling behind the live window. To detect this you will need to keep track of the buffering position, preventing it from becoming negative.\r\n\r\nHope this helps, feel free to reopen if your question is not answered."
      }
    ]
  },
  {
    "number": 3620,
    "title": "If there is no storage space available, index.exi file will be deleted",
    "created_at": "2017-12-20T11:48:49Z",
    "closed_at": "2017-12-21T07:31:51Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3620",
    "body": "### Question\r\n\r\n`CachedContentIndex.readFile` returns` false` when called with no storage space available.\r\nDoes that mean `CachedContentIndex.load` will erase` cached_content_index.exi`?\r\n\r\n```\r\n/** Loads the index file. */\r\npublic void load() {\r\n    if (!readFile()) {\r\n        atomicFile.delete();\r\n        ...\r\n\r\nprivate boolean readFile() {\r\n    ...\r\n    } catch (IOException e) {\r\n        return false;\r\n```\r\n\r\nIt is difficult to catch and recover an IoException, but I think it's overkill for download content to be lost just because of no storage space available.\r\n\r\nPlease tell me if there is a good way to avoid deleting the file. \r\n\r\n### ExoPlayer version\r\n`2.6.0`\r\n\r\nthanks.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3620/comments",
    "author": "YukiMatsumura",
    "comments": [
      {
        "user": "erdemguven",
        "created_at": "2017-12-20T19:49:23Z",
        "body": "In theory, reading shouldn't fail because of no storage space left. Is this something you have seen happened?"
      },
      {
        "user": "YukiMatsumura",
        "created_at": "2017-12-21T04:12:59Z",
        "body": "Thank you for a reply.\r\n\r\n>  Is this something you have seen happened?\r\n\r\nThe problem does not have happened. I confirmed the intention of the source code.\r\n\r\n> reading should not fail\r\n\r\nthanks.\r\nDue to the mechanism of backup/restoration of AtomicFile, I misunderstood that the storage operation is consumed even by the reading operation. \r\nWhen I checked it again, it did not seem to be a problem.\r\nI'm sorry to inconvenience you.\r\n\r\nMy question has been resolved. thanks you 😄 "
      }
    ]
  },
  {
    "number": 3619,
    "title": "How can we make the scrubber move when we drag the scrubber instead of clicking on the seek bar",
    "created_at": "2017-12-20T11:08:50Z",
    "closed_at": "2017-12-21T07:48:02Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3619",
    "body": "### Issue description\r\nScrubber in seek bar is not draggable on the click events are triggered when clicked on seek bar.\r\nHow can we change the position of video by dragging the seekbar\r\n\r\n### Reproduction steps\r\nPlay the video and try dragging the scrubber\r\n\r\n### Version of ExoPlayer being used\r\n4.1.0\r\n\r\n### Device(s) and version(s) of Android being used\r\nAll Android devices\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3619/comments",
    "author": "keshav1139",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2017-12-20T11:55:58Z",
        "body": "The scrubber is draggable for me in our demo app. Can you give more details on why you think it's not draggable? And how I could reproduce your issue?\r\n\r\nAlso there is no ExoPlayer 4.1.0  - our current release version is 2.6.0."
      },
      {
        "user": "keshav1139",
        "created_at": "2017-12-21T05:53:52Z",
        "body": "I am extremely sorry this is in exomedia and not exo player, please close the issue. Regret the inconvenience caused."
      }
    ]
  },
  {
    "number": 3616,
    "title": "ExoPlayer r2.6.0 - could not find dependency  \"com.google.android.exoplayer:exoplayer:r2.6.0\"",
    "created_at": "2017-12-20T03:44:08Z",
    "closed_at": "2017-12-22T17:00:06Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3616",
    "body": "Hi, I have wanted to update a exoplayer to newer version(from 2.5.4 to 2.6.0) .\r\nI used this dependency : \r\n   ` compile 'com.google.android.exoplayer:exoplayer:r2.6.0'`\r\n\r\nand I have got the message:\r\n\r\n`Could not find dependency \"com.google.android.exoplayer:exoplayer:r2.6.0\"`\r\n\r\nCan you please tell me is that the problem with your repo or I am using wrong dependency?\r\n\r\nThanks\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3616/comments",
    "author": "lazarvgd",
    "comments": [
      {
        "user": "eneim",
        "created_at": "2017-12-20T06:10:08Z",
        "body": "@lazarvgd Change \"r2.6.0\" --> \"2.6.0\" and you are done."
      }
    ]
  },
  {
    "number": 3614,
    "title": "ExoPlayer onStop event (or events)",
    "created_at": "2017-12-19T10:19:10Z",
    "closed_at": "2017-12-22T16:57:14Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3614",
    "body": "I am stopping my SimpleExoPlayer by calling `player.stop()`.\r\nWhich event or events in `Player.EventListener` would I get?\r\n\r\nI need to catch when playback is stopped (not paused)",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3614/comments",
    "author": "AAverin",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2017-12-19T10:29:54Z",
        "body": "`onPlayerStateChanged` should be called with `STATE_IDLE`."
      }
    ]
  },
  {
    "number": 3613,
    "title": "Question : How to handle ConcatenatingMediaSource playlist item error?",
    "created_at": "2017-12-19T10:08:54Z",
    "closed_at": "2017-12-22T16:57:39Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3613",
    "body": "I am using ConcatenatingMediaSource to play list of videos. \r\n\r\nI have 5 videos. So add these videos with help of ConcatenatingMediaSource.\r\nIf 5 videos have valid URL -> no problem it played perfectly.\r\n\r\n\r\n**My problem :**  \r\n\r\nIncase if one video invalid URL like 404 error. **onPlayerError(ExoPlaybackException error)** method called &\r\nPlayer stopped & other videos not playing.\r\n\r\nFor ex: If I give invalid url for 3rd video. It return error in 3rd video & my **4th, 5th videos not playing**\r\n\r\nBut I want to play the other videos incase it have any error.\r\n\r\n**My code;**\r\nIterate for loop & add videos using ConcatenatingMediaSource\r\n\r\n    MediaSource movieMediaSource = mMyExoPlayerMovie.getMediaSourceFromUrl(this, mMovieUrls.get(index));\r\n    concatenatingMediaSource.addMediaSource(index, movieMediaSource);\r\n\r\nPrepare code:\r\n\r\n        mExoPlayer.prepare(mediaSource);\r\n\r\nIf any more details let me know.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3613/comments",
    "author": "rranjithkumar100",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2017-12-19T10:26:40Z",
        "body": "Can you just re-prepare the player with a new concatenation that omits the missing items?\r\n\r\nThis seems to be similar to #3611."
      }
    ]
  },
  {
    "number": 3611,
    "title": "Broken Playlist",
    "created_at": "2017-12-18T14:36:16Z",
    "closed_at": "2017-12-22T16:51:29Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3611",
    "body": "While i have created a playlist i found that if any link of that playlist is not active then the whole playlist of that sample playlist does not work. If i had removed that broken link then that playlist was working but otherwise not. I had changed the position of that link - sometimes at the top, sometimes at the bottom, sometimes at the middle. The link was not working unless i moved the broken link removed from that playlist. \r\n\r\n\r\n\r\nAnd, on a separate topics - \r\nI am new to this coding thing. I was searching for a way to assign a picture for the name of the link. But i could not find a way anywhere. Can anyone please give me a direction how can i do this? \r\n\r\nThanks\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3611/comments",
    "author": "num47",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2017-12-19T10:01:36Z",
        "body": "Can you just handle the player error and update the playlist to remove the broken entry? Please could you describe with a bit more detail exactly what you're doing, what happens and what you expect to happen?"
      },
      {
        "user": "num47",
        "created_at": "2017-12-19T16:26:51Z",
        "body": "i had added various video link. user have to click on the name of the link to watch that video. So, every time they want to view a different link that need to go back to the video list and then choose a different video. Some people might not like this and would have wish to watch the videos by clicking the next button. So, i had made a different playlist for whose who want to watch those videos by clicking next button. But, as i was saying, if any link got broken then the whole playlist broke down. \r\n\r\nI am giving you an example of the playlist\r\n```\r\n[\r\n  {\r\n    \"name\": \"Sample Video\",\r\n    \"samples\": [\r\n    {\r\n        \"name\": \"Sample Video No.1\",\r\n        \"uri\": \"sample video link 1\"\r\n    },\r\n    {\r\n\t\t\"name\": \"Sample Video No.2\",\r\n\t\t\"uri\": \"sample video link 2\"\r\n\t},\r\n{\r\n\t\t\"name\": \"Sample Video No.3\",\r\n\t\t\"uri\": \"sample video link 3\"\r\n\t},\r\n    {\r\n        \"name\": \"Sample Video No.4\",\r\n        \"uri\": \"sample video link 4\"\r\n    },\r\n    {\r\n        \"name\": \"Sample Video No.5\",\r\n        \"uri\": \"sample video link 5\"\r\n    },\r\n    {\r\n        \"name\": \"Sample Playlist\",\r\n\"playlist\": [\r\n   {\r\n        \"uri\": \"sample video link 1\"\r\n    },\r\n{\r\n        \"uri\": \"sample video link 2\"\r\n    },\r\n{\r\n        \"uri\": \"sample video link 3\"\r\n    },\r\n{\r\n        \"uri\": \"sample video link 4\"\r\n    },\r\n{\r\n        \"uri\": \"sample video link 5\"\r\n\r\n    }\r\n]\r\n}\r\n   \r\n  ]\r\n }    \r\n]\r\n```\r\n\r\nAt first, i give the option to view the links separately so that viewer can choose as he/she wish. Then, i gave a playlist of the same video for those who wish to watch all the videos one by one. If they choose the playlist then they have a choice to go to the next video by pressing next button. "
      },
      {
        "user": "andrewlewis",
        "created_at": "2017-12-19T16:45:15Z",
        "body": "Can you just handle the player error and update the playlist to remove the broken entry?"
      },
      {
        "user": "num47",
        "created_at": "2017-12-20T11:36:28Z",
        "body": "Mate, as i was saying, i am really new to this coding thing. That might be possible but i have no idea what to edit - where to edit. "
      },
      {
        "user": "tonihei",
        "created_at": "2017-12-20T11:50:13Z",
        "body": "You should have a `player.prepare(mediaSource)` somewhere in your code which prepares and starts the player.  This `mediaSource` is most likely a `ConcatenatingMediaSource` or a `DynamicConcatenatingMediaSource` created before that. When these concatenated media sources are created, they use a list of single media sources (corresponding to the playlist).\r\n\r\nIn case one of your playlist items fails to play, you'll get a notification by a call to `eventListener.onPlayerError`. When this happens, you can re-prepare the player with a new call to `player.prepare(mediaSource)` and a newly created concatenated media source without the failing item. You can check `player.getCurrentWindowIndex()` in the error callback to find out the index of the failing item.\r\n\r\nDoes that help you to find the right places?"
      },
      {
        "user": "num47",
        "created_at": "2017-12-20T12:07:56Z",
        "body": "Thanks a lot tonihei. gonna try this. "
      }
    ]
  },
  {
    "number": 3585,
    "title": "Unable do play content after upgrading to ExoPlayer 2.6.0 from 1.2.X",
    "created_at": "2017-12-13T17:09:36Z",
    "closed_at": "2017-12-13T18:43:08Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3585",
    "body": "We were using ExoPlayer 1.2.X for a while now and decided to upgrade to 2.6.0, but our content won't play, returning some toasts:\r\n\r\n\"Media includes video tracks, but none are playable by this device\"\r\n\r\nand\r\n\r\n\"Media includes audio tracks, but none are playable by this device\"\r\n\r\nWe tried playing in several emulators from Android 6 to 8, and on a Samsung Galaxy S8+ running Android 7.0\r\n\r\nHow to reproduce the issue:\r\n\r\nPlayer Version: 2.6.0\r\nDevice: Pixel XL - API 24\r\n\r\n1 - Downloand ExoPlayer version 2.6.0 release.\r\n\r\n2 - Add the given media uri and drm_license_url using the drm_scheme \"widevine\" to the media.exolist.json.\r\n\r\n3 - Run the ExoPlayer and try to play the media.\r\n\r\nThe media uri, proxy url and bugreport file were sent to dev.exoplayer@gmail.com\r\n\r\nThank you in advance for the help!\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3585/comments",
    "author": "Lezherus",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-12-13T17:16:26Z",
        "body": "This happens because we're concluding from the manifest that the stream only supports PlayReady DRM. This is because the manifest contains ContentProtection elements for PlayReady, but not for Widevine. Adding ContentProtection elements for Widevine should resolve this issue."
      },
      {
        "user": "Lezherus",
        "created_at": "2017-12-13T18:10:25Z",
        "body": "@ojw28 Thank you for the prompt answer! But now I'm wondering, if that's the case, why does it works on 1.2.X? Did ExoPlayer use to support PlayeReady but now it doesn't?"
      },
      {
        "user": "ojw28",
        "created_at": "2017-12-13T18:43:08Z",
        "body": "Both V1 and V2 support PlayReady where supported by the underlying platform. PlayReady is only a requirement for AndroidTV devices, however. Most Android mobile devices don't provide support.\r\n\r\nThe reason V2 fails and V1 doesn't is just that V1 performs fewer checks prior to attempting to start playback. Which meant it was prone to try and play content in an unsupported DRM scheme and fail in an arbitrary way, but also that it was able to successfully play content in a supported DRM scheme even the scheme was missing from the manifest."
      },
      {
        "user": "Lezherus",
        "created_at": "2017-12-13T19:09:12Z",
        "body": "@ojw28 Thank you for the clarification. But we tried using another manifest with the widevine ContentProtection element included and it still doesn't works, but now it returns a different error.\r\n\r\nI e-mailed you the bugreport and new manifest link, could you take a look, please?"
      },
      {
        "user": "ojw28",
        "created_at": "2017-12-13T19:15:59Z",
        "body": "The updated manifest plays fine if you add the following line of JSON:\r\n```\r\n\"extension\": \"mpd\"\r\n```\r\nSo it looks like:\"\r\n```\r\n{\r\n\"name\": \"XXX\",\r\n\"uri\": \"XXX\",\r\n\"drm_scheme\": \"widevine\",\r\n\"drm_license_url\": \"XXX\"\r\n\"extension\": \"mpd\"\r\n},\r\n```\r\nThe demo app tries and automatically infer the content type from the extension, but in this case the extension is \"ism\" and the demo app infers that it's a SmoothStreaming stream. Adding the extra line explicitly tells the demo app what the content type is."
      },
      {
        "user": "Lezherus",
        "created_at": "2017-12-14T11:12:55Z",
        "body": "@ojw28 Indeed, it played fine, thank you very much for the help! I must admit that I'm impressed with how fast you guys reply to the issues, congratulations on the amazing job, and please keep it up!"
      }
    ]
  },
  {
    "number": 3583,
    "title": "Configure ExoPlayer To Keep Played Buffer",
    "created_at": "2017-12-13T04:31:19Z",
    "closed_at": "2017-12-13T09:54:57Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3583",
    "body": "### Issue description\r\nI searched all the documentation and previous issues and couldn't find a way to do this. What we'd like to be able to do is to specify how much of a buffer of previously played content ExoPlayer holds on to. So say you're playing a 2 hour MP3 file and you're 25 minutes in. If you skip back 10 seconds it would be nice to have that data still there and ready to play instantly. Currently what seems to happen is that the player re-buffers from the position you've seeked back to causing a pause in playback. In our case we'd probably set this to the equivalent of maybe 5 minutes of audio.\r\n\r\nThis would make for a better listener playback experience and probably result in significantly less data used for people that skip back a lot.\r\n\r\n### Reproduction steps\r\n- Stream a 2 hour MP3 up to 25 minutes\r\n- Seek back 10 seconds\r\n- The player pauses while it re-buffers this content\r\n\r\n### Version of ExoPlayer being used\r\nExoPlayer 2.5.4\r\n\r\n### Device(s) and version(s) of Android being used\r\nAll the devices we've tested on.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3583/comments",
    "author": "rustyshelf",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-12-13T09:54:57Z",
        "body": "On the dev-v2 branch we support specifying a back-buffer as part of `LoadControl`. Specifically, see `getBackBufferDurationUs` and `retainBackBufferFromKeyframe` (for an audio app you probably only care about the first one). If you otherwise want to use `DefaultLoadControl`, it should be possible to extend it and override just these methods."
      },
      {
        "user": "satyres",
        "created_at": "2018-01-15T22:33:04Z",
        "body": "@ojw28  Can you please explain more . Thanks\r\n@rustyshelf Did you find a solution for this problem , i need the same feature for a radio stream , to be able to back for 10 second or more.\r\nThank you so much for your help"
      },
      {
        "user": "rustyshelf",
        "created_at": "2018-01-15T23:26:22Z",
        "body": "@satyres the properties @ojw28 mentioned are in the development branch. Only he would be able to tell you when they are scheduled to go into a production build but they are all there as described."
      }
    ]
  },
  {
    "number": 3582,
    "title": "Soft decode and hard decode priority",
    "created_at": "2017-12-13T02:36:37Z",
    "closed_at": "2017-12-13T13:25:02Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3582",
    "body": " How to decode soft decode and how to choose soft and hard decode after soft decoding or hard decoding first",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3582/comments",
    "author": "yangchaojiang",
    "comments": [
      {
        "user": "AquilesCanta",
        "created_at": "2017-12-13T13:25:02Z",
        "body": "I am making quite a few assumptions, but you probably want to pass your custom MediaCodecSelector to MediaCodecVideoRenderer. If not, please try to explain your question and usecase in more detail."
      }
    ]
  },
  {
    "number": 3577,
    "title": "how to detect whether video contains audio track or not",
    "created_at": "2017-12-12T05:23:46Z",
    "closed_at": "2017-12-12T12:27:58Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3577",
    "body": "Hello ,\r\nI want to check if my video contains audio track or not. Based on that I want to add audio enable/disable functionality in my project\r\n\r\nI am using  com.google.android.exoplayer:exoplayer:2.6.0 dependency in android studio 3..0.0\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3577/comments",
    "author": "Bhoomi-Zalavadiya",
    "comments": [
      {
        "user": "AquilesCanta",
        "created_at": "2017-12-12T12:27:58Z",
        "body": "You can track the current tracks with Player#EventListener#OnTracksChanged and get the current ones with Player#getCurrentTrackGroups(). If you go through the track groups you can look for the type. If you additionally want to check if any of the audio tracks was selected, then Player#getCurrentTrackSelections() is the place to look at."
      }
    ]
  },
  {
    "number": 3564,
    "title": "How to reduce the downloaded chunk number in HLS mode?",
    "created_at": "2017-12-08T07:15:42Z",
    "closed_at": "2017-12-11T12:45:03Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3564",
    "body": "Hey, I am trying to reduce the buffer when I play a HLS stream,\r\nSo, I dont want to download so many chunks (.ts file) from sever.\r\nIs there any way to download only one chunk (.ts file) and store in buffer?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3564/comments",
    "author": "alordred",
    "comments": [
      {
        "user": "alordred",
        "created_at": "2017-12-08T08:09:11Z",
        "body": "And please tell me is there any possible way to play ts.File randomly.\r\nRandomly means can play 10.ts and then play 8.ts (every .ts file the I frame is the first frame)\r\nHow  can I play HLS chunks in reverse?"
      },
      {
        "user": "AquilesCanta",
        "created_at": "2017-12-11T12:45:03Z",
        "body": "> I am trying to reduce the buffer when I play a HLS stream\r\n\r\nYou can play around with different loading parameters in `DefaultLoadControl`. Particularly, to reduce the buffer size you can override the default `maxBufferMs`. Keep in mind that this could have negative effects like frequent buffering and more network usage time.\r\n\r\n> And please tell me is there any possible way to play ts.File randomly.\r\n\r\nNot in HLS. You could manually put every TS file in a DynamicConcatenatingMediaSource and shuffle the contents (using `Player#setShuffleModeEnabled`) but the container format is not ideal, as in-file seeking would not be possible (only to the start of files). Preparation time could also be suboptimal."
      }
    ]
  },
  {
    "number": 3563,
    "title": "[Question] How to get the startTime and endTime from TextRenderer.Output cues",
    "created_at": "2017-12-07T19:28:54Z",
    "closed_at": "2017-12-11T10:41:59Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3563",
    "body": "Hi there!\r\nI'm currently implementing the TextRenderer.Output to received the List of Cues for WebVtt captions, and then I'm displaying those captions in our custom caption view.\r\nThe problem is that WebvttCue class is package-private so we can't cast it, so that we can use the startTime and endTime.\r\nIs there a reason to keep that class as package-private? What alternative do I have?\r\n\r\nThanks!\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3563/comments",
    "author": "sergiomartinez4",
    "comments": [
      {
        "user": "botaydotcom",
        "created_at": "2017-12-08T10:35:39Z",
        "body": "Hi @sergiomartinez4 ,\r\nCould you explain your use-case clearer, and why do you need to get access to startTime and endTime in order to display these Cues in your custom view?\r\nBy design, the player will parse these time values from underlying stream, and perform calculations internally to find out when to display these subtitles with respect to other tracks (video/audio etc...). Then the TextRenderer will output the List<Cue> to be displayed at the right time, and the client application only needs to handle displaying these Cues immediately upon receiving them. Attempting to parse startTime and endTime, without understanding fully the timing model of the player, may lead to wrong presentation time.\r\n\r\nPlease elaborate more on your use case and the reasoning behind, and we can answer your question better. Thank you very much.\r\n\r\nWith that said, because of other changes, WebvttCue class has been made public in dev-v2 branch, and may be released as such in the future (I don't know when). However, unless it's really necessary, I don't think you should rely on that given the problem I described.\r\n\r\n"
      },
      {
        "user": "sergiomartinez4",
        "created_at": "2017-12-08T15:15:28Z",
        "body": "@botaydotcom thanks for the reply.\r\n\r\nThe real concern is not about when to display them, as we display them as soon as the onCues method is called, but it's about when to stop displaying the captions. A caption duration property in the Cue object will be enough for our purposes.\r\n\r\nWithout any sense of time, we can either just stop displaying one caption after the next one appears or we can set a default duration timeout (or a combination both). We could also adjust the duration depending on the length of the text and with this approach we can only hope to get a good approximation, but it wouldn't be the exact times as specified in the Webvtt document.\r\n\r\nHaving the public WebvttCue will make it easier with our current implementation, we only need to cast the Cue to WebvttCue and get the extra info, but If I'm missing something or there's an easier or better way to do it, I'm happy to try it out.\r\n\r\nBest!\r\n"
      },
      {
        "user": "botaydotcom",
        "created_at": "2017-12-08T15:31:03Z",
        "body": "Hi @sergiomartinez4 ,\r\nI think I understand your idea, but it is unfortunately it is not our intention behind `TextOutput` interface.\r\nThe idea with `TextOutput` is whenever the player sends a Cue list, the application should just take it and display as it is. If any of the cues are changed (some added, some removed etc...), the player will invoke that method again with a new Cue list reflecting the new state. So you don't need to time the display yourself or find out when to remove the displayed captions. The next time you receive a new list of cues, just remove everything and re-display the whole list accordingly (note that the list might be null if there's nothing to be displayed on the screen).\r\n\r\nI think an easy way to follow this is to check out `com.google.android.exoplayer2.ui.SubtitleView`, which follows this approach. Hope that help."
      },
      {
        "user": "sergiomartinez4",
        "created_at": "2017-12-08T20:11:43Z",
        "body": "@botaydotcom, removing the captions when getting empty cues did the trick. It makes sense now.\r\nThanks a lot for the help."
      },
      {
        "user": "botaydotcom",
        "created_at": "2017-12-11T10:41:58Z",
        "body": "Cool! Glad that it helps."
      }
    ]
  },
  {
    "number": 3560,
    "title": "Error when video track is missing",
    "created_at": "2017-12-07T11:07:13Z",
    "closed_at": "2017-12-15T20:45:46Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3560",
    "body": "### Issue description\r\nIn my product I have two possibilities: sometimes there's HLS and when it is not available I have several MP4 tracks. I'm using `MergingMediaSource` in order to pass all of the available tracks + subtitles. I have two questions:\r\n\r\n- When one of the tracks is missing (response code 404) the player fails, even though all the other tracks are available (it might be somehow related to #3140). Is there a way to ignore a missing track without a complete failure of the playback?\r\n- If both HLS and MP4 tracks are available is it ok to create a `MergingMediaSource` with all of them or is there a better way of taking care of this?\r\n\r\n### Version of ExoPlayer being used\r\n2.6.0\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3560/comments",
    "author": "pedromfmachado",
    "comments": [
      {
        "user": "botaydotcom",
        "created_at": "2017-12-08T12:30:55Z",
        "body": "Hi @pedromfmachado ,\r\nI think your case is a bit different than the one in #3140 . If a video track is selected for playback & it's missing, I think it's a real playback error - the player should not continue to play in such case, because there's no video output.\r\nSo in this case, I think a better solution for you would be to check the track URL beforehand to see if it's valid or not before sending it to the player. `MergingMediaSource` is not designed to handle automatically fall-back in the case when the track to be played is missing.\r\nAnother option you can do is to listen to such error (if the player reports), and do fall-back yourself by retrying with other tracks."
      },
      {
        "user": "ojw28",
        "created_at": "2017-12-15T20:45:46Z",
        "body": "`MergingMediaSource` is intended for legitimate merging of available content (e.g. a side-loaded subtitle or demuxed alternate audio track).\r\n\r\nFor fallback cases such as yours, you should do as described above: Either find a way of working out which URL is valid beforehand, or try to play one URL and if playback fails try the other as a separate playback attempt."
      }
    ]
  },
  {
    "number": 3555,
    "title": "The extension-cronet does not work with ./chromium-cronet/android/65.0.3286.0 version",
    "created_at": "2017-12-06T10:51:20Z",
    "closed_at": "2018-01-23T11:11:03Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3555",
    "body": "I used the latest branch dev-v2 with the commit fbfa43f5a3ef11f5da115c439092b521564fb4fa and followed extensions/cronet/README.md. After downloaded the related jars and libraries, compiling with cronet extension seems fine, but when I run the demo with this extension, I got the following errors:\r\n```\r\nInformation:Gradle tasks [:demo:assembleWithExtensionsDebug]\r\nError:com.android.builder.dexing.DexArchiveBuilderException: Failed to process /Users/gtxia/Research/ExoPlayer_V2/extensions/cronet/libs/cronet_impl_native_java.jar\r\nError:com.android.builder.dexing.DexArchiveBuilderException: Error while dexing org/chromium/base/process_launcher/ChildProcessServiceImpl.class\r\nError:com.android.dx.cf.code.SimException: invalid opcode ba (invokedynamic requires --min-sdk-version >= 26)\r\nError:Execution failed for task ':demo:transformClassesWithDexBuilderForWithExtensionsDebug'.\r\n> com.android.build.api.transform.TransformException: com.android.builder.dexing.DexArchiveBuilderException: com.android.builder.dexing.DexArchiveBuilderException: Failed to process /Users/gtxia/Research/ExoPlayer_V2/extensions/cronet/libs/cronet_impl_native_java.jar\r\nInformation:BUILD FAILED in 7s\r\n```\r\nSeems that the cronet version do not match the extension? ",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3555/comments",
    "author": "nelson-xia",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2018-01-02T16:09:47Z",
        "body": "This error message may appear if you use a Cronet version requiring Java 8 features and it's not enabled in your code. \r\n\r\nCan you make sure that both the gradle file of the ExoPlayer Cronet extension and the gradle file of your app have Java 8 features enabled?\r\nThe gradle files should contain \r\n```\r\nandroid {\r\n    ...\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n}\r\n```"
      },
      {
        "user": "ojw28",
        "created_at": "2018-01-02T20:19:02Z",
        "body": "Should we update `README.md` to document this?"
      },
      {
        "user": "tonihei",
        "created_at": "2018-01-03T09:09:07Z",
        "body": "Yes, that would make sense to avoid confusion about this point."
      },
      {
        "user": "tonihei",
        "created_at": "2018-01-23T11:11:03Z",
        "body": "Closing issue, because the question has been answered and the README.md has been updated."
      }
    ]
  },
  {
    "number": 3549,
    "title": "SimpleExoPlayerView suface black when convertFromTranslucent.",
    "created_at": "2017-12-05T10:59:36Z",
    "closed_at": "2017-12-05T13:28:28Z",
    "labels": [
      "question",
      "wont fix: infeasible"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3549",
    "body": "```\r\n public static void convertActivityFromTranslucent(Activity activity) {\r\n        try {\r\n            Method method = Activity.class.getDeclaredMethod(\"convertFromTranslucent\");\r\n            method.setAccessible(true);\r\n            method.invoke(activity);\r\n        } catch (Throwable t) {\r\n        }\r\n    }\r\n```\r\nwhen player playing,  call convertActivityFromTranslucent ,  the suface will black.\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3549/comments",
    "author": "Caij",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-12-05T13:28:28Z",
        "body": "You're using reflection to access a non-public API. This is not supported in general, and you should not do this*.\r\n\r\n\\* Granted, there are cases where pragmatically it can be useful to do this kind of thing. However you should do this at your own risk, and if something doesn't work it's up to you to find a way to resolve it. Anything you access in this way is also liable to stop working in future Android releases."
      },
      {
        "user": "andrewlewis",
        "created_at": "2017-12-05T13:34:27Z",
        "body": "Just to add to what Olly said: if you can find a way to do this with non-hidden APIs and it still doesn't work, it may be worth trying using `TextureView` (not `SurfaceView`)."
      }
    ]
  },
  {
    "number": 3529,
    "title": "[QUESTION] MONO/STEREO SOUND",
    "created_at": "2017-12-01T02:21:18Z",
    "closed_at": "2017-12-04T09:12:53Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3529",
    "body": "Hello,\r\n\r\nThanks for the great player.\r\n\r\nWe have a question.\r\n\r\nDoes Exoplayer support MONO and STEREO sound as well ?\r\n\r\nIn detail, \r\n1. If the VOD is based on MONO, ExoPlayer plays the VOD with MONO ?\r\n2. If the VOD is based on STEREO, ExoPlayer plays the VOD with STEREO ?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3529/comments",
    "author": "imeanyou2",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2017-12-01T08:53:34Z",
        "body": "The `AudioTrack` is configured to output with the number of channels specified in the input stream, so this should just work. Have you tried it?"
      }
    ]
  },
  {
    "number": 3523,
    "title": "[Question] Server side Ad insertion and duration of content",
    "created_at": "2017-11-30T06:55:08Z",
    "closed_at": "2017-12-06T13:25:50Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3523",
    "body": "**Description**\r\nWe have ads that are inserted on server side (SSAI), which cause that we have only one stream for content(with ads).\r\nRight now, if we've got a PREROLL with duration of 60 seconds and movie with duration of 10 min and 30 sec, we display (exo_position / exo_duration) time 1:01 / 11:30 - which basically means that we are in 1st second of movie and we've watched ad already.\r\nAlso on DefaultTimeBar(exo_progress) our position is appropriate to exo_position 1:01.\r\n\r\n**Questions**\r\n1. We'd like to not include ad time in displayed exo_position / exo_duration time,\r\n(in this particular example would be (exo_position / exo_duration) 0:01 / 10:00) is it possible?\r\n\r\n2. Also we'd like to ads duration does not effect DefaultTimeBar(exo_progress),\r\n(in this particular example it would be appropriate  to exo_position 0:01) is it possible?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3523/comments",
    "author": "nimdokai",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2017-11-30T08:36:12Z",
        "body": "One way to do this would be to subclass `DefaultTimeBar` and override `setPosition` etc. to take into account the preroll ad."
      },
      {
        "user": "nimdokai",
        "created_at": "2017-12-04T14:23:05Z",
        "body": "Thanks for respond. \r\nChanging `setPosition` or `SetDuration` affect my custom `TimeBar`, but it does not help with `exo_position` and `exo_duration Views` as those items are updated in `PlaybackControlView.updateProgress()`, does it mean it is also necessary to override `PlaybackControlView`?"
      },
      {
        "user": "andrewlewis",
        "created_at": "2017-12-04T14:36:28Z",
        "body": "Replacing `PlaybackControlView` would work. Another option that might require less code would be to wrap the `SimpleExoPlayer` instance you pass to `setPlayer`, delegating all methods to the real player but fixing up the position/duration to the values you need."
      },
      {
        "user": "nimdokai",
        "created_at": "2017-12-06T13:25:50Z",
        "body": "Wraping `SimpleExoPlayer` had some issues with `TimeBar`, scrolling cause 'jump' to correct position. \r\nI end up with replacing `PlaybackControlView` - I have added some code in `updateProgress()`, in `seekTo(int windowIndex, long positionMs)` I have changed `dispatchSeekTo()` argument `positionMs` to inculde Ads Time also I've created additional `Interface` to get information about ads and it works fine.\r\nThanks for help.\r\n"
      }
    ]
  },
  {
    "number": 3509,
    "title": "EventListener.onTimelineChanged howto get current window",
    "created_at": "2017-11-28T01:14:50Z",
    "closed_at": "2017-11-28T08:23:42Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3509",
    "body": "I'm using ExoPlayer 2.6.0 and made a simple Activity which creates a ConcatenatingMediaSource of some ExtractorMediaSource with http URL to Videos. All playing in endless loop without any issues.\r\n\r\nNow i want to get the current window+position when the video changes. So i implement the DefaultEventListener and override the onTimelineChanged method.\r\n\r\nIf i ask my player within this method using player.getCurrentPeriodIndex() and player.getCurrentWindowIndex() i do not get the right values.\r\nAre those values updated after the onTimelineChanged Event is fired? I also tried the onTracksChanged event, but with the same results.\r\n\r\nIs there another way to get the current window directly after a new video was loaded? I looked in the EventLogger from the sample, but i could not find the right spot for my needed information.\r\n\r\nIf i put a Handler with a periodic postDelayed runnable to poll the getCurrentPeriodIndex and getCurrentWindowIndex i get the right results.\r\n\r\nI'd rather not do the polling since i want to syncronise some players via network.\r\n\r\nI'm using an Android TV box running 6.0.1 my App Compile SDK is 26, target 26, min 23. Build Tools Version 26.0.2\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3509/comments",
    "author": "derlucas",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2017-11-28T08:02:55Z",
        "body": "`onPositionDiscontinuity` is called when playback transitions from one item to the next. You can get the new window index by calling `getCurrentWindowIndex`. Does that provide the information you need?"
      },
      {
        "user": "derlucas",
        "created_at": "2017-11-28T08:23:42Z",
        "body": "Thank you very much. This is exactly what i need. Maybe yesterday it was too late and i sat too long on the problem so i did not see this onPositionDiscontinuity description :)"
      }
    ]
  },
  {
    "number": 3508,
    "title": "Is MediaSource release supposed to be handled by user or internally?",
    "created_at": "2017-11-27T23:02:05Z",
    "closed_at": "2017-11-28T08:06:58Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3508",
    "body": "I'm receiving a stacktrace that's basically the same as #1914, which is caused by me releasing the MediaSource manually. Should I not be doing this? If so, then is this MediaSource released elsewhere automatically?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3508/comments",
    "author": "davidliu",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2017-11-28T08:06:58Z",
        "body": "Yes. The player's current source is released when you call `prepare` (with a new source), `stop` or `release` on the player. So once you've passed a source to `prepare` the player will take ownership and you shouldn't release it."
      }
    ]
  },
  {
    "number": 3499,
    "title": "Find out Format / Track what the player selects when is getting initialized",
    "created_at": "2017-11-24T19:49:46Z",
    "closed_at": "2017-11-24T20:30:11Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3499",
    "body": "Hello,\r\n\r\nIf I prepare the player with a media with multiple audio / subtitle  (multi language) the player selects one audio and one subtitle when startup but there is no possibility (or I can't find) to find out which one of the possible audio / subtitle has been selected.\r\n\r\nWhen the player loads I have the list of tracks by renderers and using them I can change the audio / subtitle using the track index, group id etc and results an override in the **DefaultTrackSelector** instance but the override is empty when I load the player.\r\n\r\nThe **SimpleExoPlayer** has a private array with the renderers, every renderer contains a **FormatHolder** which also would be useful but unfortunately since the renderers array is private I can't access this info (in debug worked).\r\n\r\nPlease provide a way to find out or the default selected track indexes or the formats what has the **id** field. Thank you",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3499/comments",
    "author": "zsoltbokor",
    "comments": [
      {
        "user": "zsoltbokor",
        "created_at": "2017-11-24T20:30:11Z",
        "body": "Format.selectionFlags is what I was looking for."
      },
      {
        "user": "ojw28",
        "created_at": "2017-11-27T11:44:54Z",
        "body": "I don't think it is. Those flags are specified statically in the media itself. They may guide selection, but definitely do not accurately represent what the current selection is. The main demo app's `EventLogger.onTracksChanged` method demonstrates printing all of the available tracks to logcat, marking those that are currently selected with an \"X\". You can use that as a starting point."
      }
    ]
  },
  {
    "number": 3490,
    "title": "Can't launch content playback again after error during playback",
    "created_at": "2017-11-22T13:20:01Z",
    "closed_at": "2018-01-02T18:32:26Z",
    "labels": [
      "question",
      "need more info"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3490",
    "body": "We're developing Live DASH Playback application with ExoPlayer.\r\nNow we're facing the following problem:\r\n\r\n### Issue description\r\nCan't relaunch the same content playback after it failed once.\r\nNeed to restart application to make it work.\r\n\r\n### Reproduction steps\r\n1. start live DASH content playback.\r\n2. wait about 30min for any error: \r\none of server related:\r\n```\r\n- Top bit not zero: -1\r\n- java.io.EOFException\r\n- Skipping atom with length > 2147483647 (unsupported).\r\n```\r\n3. Close activity containing SimpleExoPlayer object (SimpleExoPlayer#release is called)\r\n4. Launch the same content\r\n- Current result:\r\nOne of the above errors appear again and again (we are not able to play the content again)\r\n- Recovery:\r\nKill the whole application, after restart, playback starts again\r\n\r\nWe did not implement any cache. Is there any default ExoPlayer (or system) cache that should be cleared to prevent such errors?\r\n\r\nOnly clue I found is that after crash it throws errors like:\r\n```\r\nW/VideoCapabilities: Unrecognized profile 2130706433 for video/avc\r\nI/VideoCapabilities: Unsupported profile 4 for video/mp4v-es\r\n```\r\nwhen we try to launch the movie again. But i'm not sure if its related.\r\n\r\n### Link to test content\r\nDue to licence issues we can't provide our contents.\r\n\r\n### Version of ExoPlayer being used\r\n2.5.3\r\n\r\n### Device(s) and version(s) of Android being used\r\nTested on multiple devices with different OS versions\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3490/comments",
    "author": "t-ester",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-11-22T16:34:30Z",
        "body": "Sounds like you are not creating a new `MediaSource` instance and re-preparing the player after failure. You need to do this."
      },
      {
        "user": "t-ester",
        "created_at": "2017-11-22T21:01:09Z",
        "body": "After the failure the whole activity is closed and so the player instance (SimpleExoPlayer) is released. When going back to the activity new player instance is created but the error still occures. Wouldn't MediaSource item be recreated in this situation?"
      },
      {
        "user": "ojw28",
        "created_at": "2017-11-22T21:02:51Z",
        "body": "It's your code that will be creating the `MediaSource`. So it depends on what your code does."
      },
      {
        "user": "t-ester",
        "created_at": "2017-11-23T08:05:57Z",
        "body": "Every time I start new playback we create new activity and new player instance:\r\n```\r\nprivate SimpleExoPlayer player;\r\n...\r\nplayer = ExoPlayerFactory.newSimpleInstance(renderersFactory, trackSelector);\r\nMediaSource mediaSource = mediaSources.length == 1 ? mediaSources[0] : new ConcatenatingMediaSource(mediaSources);\r\nplayer.prepare(mediaSource, !haveResumePosition, false);\r\n```\r\n\r\nAnd after each failure we call this:\r\n`player.release();`\r\n\r\nThis code is basically a copy of demo application. There was nothing extra done on the player or on the media source.\r\nI assume that `player.release();` calls `releaseSource` on each mediaSource object.\r\nBut just to be sure I will call extra `releaseSource` on MediaSource after failure, before closing activity.\r\nWe'll see...\r\n"
      },
      {
        "user": "ojw28",
        "created_at": "2017-11-23T12:30:23Z",
        "body": "Is mediaSources[0] a new `MediaSource` instance each time? If the code is a copy of the demo application, can you reproduce the same issue in the demo application? If so then how? If not, that suggests there's a difference."
      },
      {
        "user": "t-ester",
        "created_at": "2017-11-23T13:01:41Z",
        "body": "`mediaSource.release()` didn't help.\r\n\r\n`mediaSource[0]` is new array created each time activity containing the player launches.\r\nIt is created with `MediaSource `objects are created with `MediaSourceHelper#buildMediaSource` method, based on uri.\r\n\r\nI will try to reproduce the same behavior on ExoPlayer demo. There is a lot changes to the code (regarding soundtracks/subtitles logic and dialog or ui) but the main functions like launching and releasing the player are the same like in demo.\r\nI've also created my own version of `HttpMediaDrmCallback` with only difference that `executeKeyRequest` is parsing array of bytes as json object to get \"license\" string."
      },
      {
        "user": "ojw28",
        "created_at": "2017-11-23T13:08:05Z",
        "body": "`MediaSourceHelper` is not part of ExoPlayer, so we have no idea what it does. Please ensure it creates a new `MediaSource` each time it's used."
      },
      {
        "user": "t-ester",
        "created_at": "2017-11-23T13:20:52Z",
        "body": "True, `MediaSourceHelper` is our code.\r\nBut it's basically wrapper to couple functions from example so `buildMediaSource` behaves the same as ExoPlayer demo - Yes it creates new `MediaSource` each time."
      },
      {
        "user": "ojw28",
        "created_at": "2017-11-28T19:24:56Z",
        "body": "* There's no way for us to reproduce this with the information provided, and neither is there a bug report captured shortly after encountering the issue (with `adb bugreport`, as requested in the issue template). We need at least one of these to make further progress.\r\n* It looks like the initial playback failure is caused by incorrectly packaged media, although again without any further information it's hard to be more specific."
      },
      {
        "user": "ojw28",
        "created_at": "2018-01-02T18:32:26Z",
        "body": "Closing due to lack of required information."
      }
    ]
  },
  {
    "number": 3488,
    "title": "Using live HLS streams, seek to a certain datetime",
    "created_at": "2017-11-21T16:08:20Z",
    "closed_at": "2017-11-28T19:21:34Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3488",
    "body": "Hello,\r\n\r\nI'm working on a radio application with Exoplayer v2.5.1. While reproducing live stream I'm implementing a song timeline where the user is able to \"timeshift\" to a already reproduced song. The timestamp when the song was played is known and my goal is to be able to seek to that timestamp in the player.\r\n\r\nI tried several methods having in mind that the current time is equivalent to the current player position and I have managed to reach a point where I can move to the start of a song but if I repeat the same steps several times it suddenly reproduce a different point in the stream.\r\n\r\nMy iOS college made this work because the iOS player has a function called seekToDate and I was wondering if Exoplayer support this functionality (I have been checking the documentation and I didn't find anything I could use to achieve it).\r\n\r\nThanks in advance. ",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3488/comments",
    "author": "Eyliss",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-11-23T19:07:13Z",
        "body": "I guess the HLS playlists include `EXT-X-PROGRAM-DATE-TIME` tags to facilitate this? If that's the case then yes, it should be possible to do this during playback.\r\n\r\nWhen seeking, you're required to pass a position relative to the start of the window of available content. For a live stream this is the position relative to when the live stream started, or relative to the oldest part of the stream that's still available in the case that segments are removed after a certain period of time. So to do what you're trying to do, you need to know the DateTime of the start of the current window so that you can apply the correct offset for the seek. You can do this by doing something like (disclaimer: completely untested):\r\n\r\n```\r\nTimeline timeline = player.getCurrentTimeline();\r\nif (timeline.isEmpty()) {\r\n  // Haven't got a non-empty timeline yet. Wait for onTimelineChanged() and try again\r\n} else {\r\n  long windowStartTimeMs = timeline.getWindow(0, new Timeline.Window()).windowStartTimeMs;\r\n  if (windowStartTimeMs == C.TIME_UNSET) {\r\n    // HLS playlist didn't have EXT-X-PROGRAM-DATE-TIME tag\r\n    // Hopefully doesn't apply for your content\r\n  } else {\r\n    long seekPositionInWindowMs = dateTimeSeekPositionMs - windowStartTimeMs;\r\n    // Should do some sanity checking here\r\n    // E.g. Make sure it's non-negative and less than window duration\r\n    player.seekTo(seekPositionInWindowMs);\r\n  }\r\n}\r\n```"
      }
    ]
  },
  {
    "number": 3471,
    "title": "Accurately detect switching media in playlist",
    "created_at": "2017-11-16T17:04:00Z",
    "closed_at": "2017-11-17T10:10:47Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3471",
    "body": "\r\n\r\n### Issue description\r\nI want to accurately detect switching to new media in a playlist. Can this be detected from the frame itself? Like embedding some information in the SurfaceTexture? Or count the releaseOutputBuffer? I don't see other way. Currently I am using onPositionDiscontinuity, but it is difficult to sync at frame level.\r\n\r\n### Version of ExoPlayer being used\r\n2.5.4\r\n\r\n### Device(s) and version(s) of Android being used\r\n7.0\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3471/comments",
    "author": "b0g8",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2017-11-17T10:10:47Z",
        "body": "There is information in `SurfaceTexture` to do this accurately:\r\n- `SurfaceTexture.getTimestamp` returns the release time associated with the texture set on the last call to `SurfaceTexture.updateTexImage`.\r\n- `MediaCodecVideoRenderer.renderOutputBufferV21` receives the original presentation timestamp of the output buffer and its release time, so you can override it to store a mapping from release time to original presentation timestamp.\r\n- This means that you can recover the original presentation time of a frame based on a release time returned by `SurfaceTexture.getTimestamp`, and when the first frame of the new period is rendered to the texture this should jump to its start time."
      }
    ]
  },
  {
    "number": 3464,
    "title": "Mp4 video track selection",
    "created_at": "2017-11-15T14:31:49Z",
    "closed_at": "2017-11-23T20:02:25Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3464",
    "body": "Hello,\r\nI was wondering about video track selection for mp4 format. In my case i have to expose to the user all available video formats (quality). I have a list of url that points to the mp4 files that i want to expose as a available tracks. How can i achive this? Should i make a custom implementation of the MediaSource? If not can you guide me what will be the best approach to achive that?\r\nThanks",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3464/comments",
    "author": "sviety",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-11-15T16:56:26Z",
        "body": "You should probably implement this outside of the player. There's no reason why the player needs to be involved in which file is selected for playback, given they're just regular mp4s.\r\n\r\nThe proper way to do this would be to use a proper adaptive streaming standard like DASH or HLS, which would then also allow adaptation between the available qualities during playback."
      },
      {
        "user": "sviety",
        "created_at": "2017-11-16T12:43:13Z",
        "body": "Thank you for your response @ojw28. Currently our system involve adaptive streaming, but some of our content is available only as a mp4 file. I will follow your suggestions about implementing itoutside of the player.\r\nThanks"
      }
    ]
  },
  {
    "number": 3458,
    "title": "show only a part of video in simpleExoPlayerView",
    "created_at": "2017-11-14T12:41:43Z",
    "closed_at": "2017-11-14T12:47:18Z",
    "labels": [
      "duplicate",
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3458",
    "body": "show only a part of video in simpleExoPlayerView\r\n\r\nnot show whole video \r\nvideo width is 960  and height is 540\r\n\r\nI want to show that part staring from left -350 to right 500\r\nand from tom 200-bottom 450\r\n\r\nmy xml code is \r\n\r\n```\r\n<com.google.android.exoplayer2.ui.SimpleExoPlayerView\r\n        android:id=\"@+id/player_view\"\r\n        android:focusable=\"true\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        app:use_controller=\"false\"\r\n        app:resize_mode=\"fit\"\r\n        app:surface_type=\"texture_view\"\r\n        android:rotation=\"90\"\r\n        android:layout_above=\"@+id/PlaybackControlViewa\"\r\n        android:layout_marginTop=\"10dp\" />\r\n\r\n\r\n\r\n```\r\n\r\nhow can this be done",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3458/comments",
    "author": "pawaom",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-11-14T12:47:18Z",
        "body": "Duplicate of #3432."
      },
      {
        "user": "pawaom",
        "created_at": "2017-11-14T12:48:59Z",
        "body": "yes it may be duplicate , but this question is in regards to simpleexoplayer, how can we set \r\n\r\nhow can  \r\n      Matrix matrix = new Matrix();\r\n        matrix.setScale(172, 400, 343, 637);\r\n        simpleexoplayer.setTransform(matrix); be done\r\n\r\nsimpleexoplayer.settransfrom()  doesnot work"
      },
      {
        "user": "ojw28",
        "created_at": "2017-11-14T12:52:49Z",
        "body": "Please don't file new issues for the same question. Just append your additional comment onto the existing one. Thanks."
      }
    ]
  },
  {
    "number": 3446,
    "title": "How to store DASH DRM video in exoplayer and play it in offline(No Internet) mode? How to achieve this, In case of storing and playing multiple videos in exoplayer?",
    "created_at": "2017-11-10T14:06:49Z",
    "closed_at": "2017-11-13T00:07:49Z",
    "labels": [
      "duplicate",
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3446",
    "body": "(no description supplied)",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3446/comments",
    "author": "dhanashreeborkar",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-11-13T00:07:49Z",
        "body": "This is tracked by #2643. Updates will be posted there when available."
      }
    ]
  },
  {
    "number": 3435,
    "title": "MediaCodec reporting the codec’s (avc1.640029) specific profile and level are not supported",
    "created_at": "2017-11-07T17:05:23Z",
    "closed_at": "2018-08-02T10:13:30Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3435",
    "body": "### Issue description\r\nSome high quality renditions that were playable in ExoPlayer version 1.5.9 are no longer playable in version 2.5.4, using the same device and conditions.\r\nExo Player 2+ bitrate filter logic is dependent on device codec capability.\r\nPrior to Exo Player 2, the bitrate filter logic is not based on the device codec and was just checking the resolution and frame rate compatibility.\r\nWhat is the best way to bypass the CODEC check in Exo Player 2+. is there any risk by doing this?\r\n\r\n### Reproduction steps\r\nUsing the ExoPlayer demo app for version 1.5.9 and the stream, the device can adapt between all 5 renditions.\r\nUsing the ExoPlayer demo app for version 2.5.4 and the stream, the device can't adapt between all 5 renditions. It only takes into account the H.264 Baseline Profile level 3.0 (avc1.66.30), marking the H.264 High Profile level 4.1 (avc1.640029) as NO_EXCEEDS_CAPABILITIES.\r\n\r\n### Version of ExoPlayer being used\r\nComparing versions 1.5.9 and 2.5.4.\r\n\r\n### Device(s) and version(s) of Android being used\r\nRandomly chosen devices which demonstrate the issue (adapting only on the two lowest 640x360 resolutions):\r\n-Nexus 5X API 25 Emulator Android: 7.1.1\r\n-Motorola (Moto G4) Android version: 6.0.1 screen res: 1080 x 1920\r\n-Sony Xperia Z5 Dual (E6633) Android version: 7.1.1 Screen-res: 1080 x 1920\r\n-Sony Xperia Z5 Compact (E5823) Android version: 5.1.1 Screen-res: 1280 x 720\r\n \r\nThese devices don't show the issue (adapt to 1280x720 rendition):\r\n-Nexus 5X API 26 Emulator Android: 8.0\r\n-LG G5 (LG-H850) Android: 7.0\r\n-Samsung SM-A520F Android version: 6.0.1\r\n\r\n### A full bug report captured from the device\r\nattached",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3435/comments",
    "author": "pradeep-vernekar",
    "comments": [
      {
        "user": "AquilesCanta",
        "created_at": "2018-04-05T17:27:13Z",
        "body": "> What is the best way to bypass the CODEC check in ExoPlayer 2+\r\n\r\nAs things are now, I think overriding MediaCodecVideoRenderer#supportsFormat is the most straightforward way. \r\n\r\n> is there any risk by doing this?\r\n\r\nYes. The codec check should be more accurate than the previous (resolution+framerate) approach. Nonetheless, it's been reported in the past that devices under-report format support. While this is inconvenient, it is usually more desirable than trying to play an unsupported format, which might fail in unexpected ways, like native crashes. Note that the DefaultTrackSelector has `exceedRendererCapabilitiesIfNecessary` enabled by default, which means that we try to play the track if not selecting the track would mean not having anything to play. In this specific case, the alternative tracks are selected instead.\r\n\r\nAlso, skipping the check altogether means drastically increasing the chances of exceeding the capabilities of the device with a track selection. I can imagine someone could build a codecs whitelist per device, for cases where the device under-advertises capabilities. Hopefully this approach would fill the codecs check gap. Does this answer your question?"
      },
      {
        "user": "AquilesCanta",
        "created_at": "2018-08-02T10:13:30Z",
        "body": "Closing due to inactivity."
      }
    ]
  },
  {
    "number": 3429,
    "title": "Question about caching",
    "created_at": "2017-11-05T13:43:47Z",
    "closed_at": "2017-11-05T16:50:06Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3429",
    "body": "Does exo player has a default caching mechanism even if I don't use CacheDataSource?\r\nAnd if it does can I disable it?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3429/comments",
    "author": "asidahan",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-11-05T16:50:06Z",
        "body": "Nope, it doesn't."
      }
    ]
  },
  {
    "number": 3427,
    "title": "AAC Error event not reflected in listeners",
    "created_at": "2017-11-05T11:16:01Z",
    "closed_at": "2017-11-05T16:49:14Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3427",
    "body": "Got this line in logcat\r\nSoftAAC2: AAC decoder returned error 16386, substituting silence\r\n\r\nBut for some reason either of these events were fired\r\n```\r\nExtractorMediaSource.EventListener.onLoadError\r\nPlayer.EventListener.onPlayerError\r\n\r\n```\r\nIs there another listener I should be listening to?\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3427/comments",
    "author": "pantos27",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-11-05T16:49:14Z",
        "body": "That warning is logged from platform code. I don't think ExoPlayer is informed by the platform when it happens, so has no way to propagate it to the application."
      }
    ]
  },
  {
    "number": 3412,
    "title": "Implementing abandonment rule in ExoPlayer",
    "created_at": "2017-11-01T06:57:59Z",
    "closed_at": "2018-06-06T20:20:16Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3412",
    "body": "I am trying to implement equivalent of \"AbandonRequestsRule\" (as the feature is called in dash.js player) in ExoPlayer. The aim is to keep tracking bandwidth measurements intermittently during a segment download and to abandon download at current quality, based on these intermediate bandwidth measurements. \r\nI am planning to implement this logic for HLS in hlsSampleStreamWrapper by the way of restarting the same chunk download but at a lower quality from onLoadCanceled method.\r\n\r\nI noticed that if I \"cancel\" a current load mid-way in HlsMediaChunk by calling \"closeQuitely\", the event generated is still onLoadCompleted. The player just skips playing the un-downloaded parts of the segment and the Loader moves on to loading the next segment. Isn't the expected behavior supposed to be trying to re-download the current segment because it was \"canceled\"? Any pointers on how I can force such a behavior?\r\n\r\nSince I am new to the code, I will appreciate any pointers.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3412/comments",
    "author": "kanthicn1",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2018-05-10T01:05:47Z",
        "body": "We do not support this currently, I'm afraid."
      }
    ]
  },
  {
    "number": 3405,
    "title": "Multiple ClippingMediaSource not working for m3u8 files ",
    "created_at": "2017-10-30T05:28:00Z",
    "closed_at": "2017-10-31T13:04:58Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3405",
    "body": "# Issue \r\n**When I use two or more ClippingMediaSource not working for m3u8. But working same code for MP4**\r\n\r\n### Reproduction steps\r\n\r\n**Bug : When I use Multiple ClippingMediaSource for m3u8 files not working**\r\n\r\nBut working in following cases\r\n\r\n1. Only one ClippingMediaSource with m3u8 - working\r\n2. Multiple ClippingMediaSource with mp4 - working \r\n\r\n\r\n        MediaSource movieMediaSource =getMediaSourceFromUrl(context, mLiveURL);\r\n            final long oneMinute = 60000000L;\r\n            ClippingMediaSource videoSource1 = new ClippingMediaSource(movieMediaSource, 0, oneMinute/2);\r\n\r\n            ClippingMediaSource videoSource2 = new ClippingMediaSource(movieMediaSource, oneMinute/2, oneMinute);\r\n  \r\n            ConcatenatingMediaSource concatenatingMediaSource = new ConcatenatingMediaSource(videoSource1,videoSource2);\r\n\r\n\r\n       public static MediaSource getMediaSourceFromUrl(Context context, String url) {\r\n        mBandwidthMeter = new DefaultBandwidthMeter();\r\n       //Produces DataSource instances through which media data is loaded.\r\n        DefaultDataSourceFactory dataSourceFactory = new DefaultDataSourceFactory(context, \r\n        Util.getUserAgent(context, \"MOD\"), mBandwidthMeter);\r\n       //Produces Extractor instances for parsing the media data.\r\n        ExtractorsFactory extractorsFactory = new DefaultExtractorsFactory();\r\n        MediaSource videoSource = null;\r\n        if (url != null && !url.isEmpty()) {\r\n            Log.d(TAG, \"getMediaSourceFromUrl: 11\");\r\n            if (url.contains(\".m3u8\")) {\r\n          //FOR LIVESTREAM LINK:\r\n                Uri mp4VideoUri = Uri.parse(url);\r\n                videoSource = new HlsMediaSource(mp4VideoUri, dataSourceFactory, null, null);\r\n        \r\n            } else if (url.contains(\".mp4\")) {\r\n         //FOR SD CARD SOURCE:\r\n                Uri mp4VideoUri = Uri.parse(url);\r\n                videoSource = new ExtractorMediaSource(mp4VideoUri, dataSourceFactory, extractorsFactory, null, null);\r\n              }\r\n           }\r\n            return videoSource;\r\n        }\r\n\r\n\r\n### Version of ExoPlayer being used\r\n2.5.4\r\n\r\n### Device(s) and version(s) of Android being used\r\nAndroid 5.1 & Android 7.0\r\n\r\n### A full bug report captured from the device\r\n\r\nLenova A6000+  & Nexus 6\r\n\r\n\r\n### Error Log\r\n\r\n> Internal runtime error.\r\n                                                                    java.lang.IllegalStateException at com.google.android.exoplayer2.util.Assertions.checkState(Assertions.java:79) at com.ajax.mod.controller.player.MyHlsMediaSource.prepareSource(MyHlsMediaSource.java:97)  at com.google.android.exoplayer2.source.ClippingMediaSource.prepareSource(ClippingMediaSource.java:89) at com.google.android.exoplayer2.source.ConcatenatingMediaSource.prepareSource(ConcatenatingMediaSource.java:78) at com.google.android.exoplayer2.ExoPlayerImplInternal.prepareInternal(ExoPlayerImplInternal.java:425)  at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:328) at android.os.Handler.dispatchMessage(Handler.java:98)\r\nat android.os.Looper.loop(Looper.java:154)\r\nat android.os.HandlerThread.run(HandlerThread.java:61)",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3405/comments",
    "author": "rranjithkumar100",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2017-10-30T09:12:04Z",
        "body": "The problem is that you can't re-use MediaSources. That means you need to create a new movieMediaSource for each ClippingMediaSource. "
      },
      {
        "user": "rranjithkumar100",
        "created_at": "2017-10-31T13:04:58Z",
        "body": "Yes you are right.. @tonihei \r\n\r\nProblem solved. I close this issue 👍 "
      }
    ]
  },
  {
    "number": 3394,
    "title": "Unable to stop segments download when live is paused and app in background ",
    "created_at": "2017-10-25T07:12:04Z",
    "closed_at": "2017-11-01T14:33:47Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3394",
    "body": "### Issue description\r\n\r\nWhen I watch a live HLS video and pause the playback, the player stops downloading segments after a while, but it keeps polling the inner manifest. This can be desirable because it keeps duration information up-to-date.\r\nWhen I stop the video and then play it again (calling `prepare()`) the main manifest is re-downloaded.\r\n\r\nHere is my problem: I need to be able to avoid re-downloading the main manifest when going in background and then resuming the application. This is because the main manifest has token based entitlement protection and such token may expire. Inner manifest on the other hand is protected with a long session and it does not share the same timing problem under normal situations.\r\n\r\nBecause of this, when going in background:\r\n- I can't use `stop()` because, as explained before, on resume I would have to trigger the download of the main manifest by calling `prepare()` again\r\n- I can't use `pause()` because during background inner manifest polling would never stop (not desirable for the user)\r\n\r\nConsider that I do not have control of the backend / video delivery / entitlement infrastructure.\r\nAlso, comparing to iOS, AVPlayer behaves like this (basically this is the expected behaviour):\r\n- when paused it keeps downloading both segments and inner manifest\r\n- when going in background it stops downloading everything\r\n- when resuming from background it can resume playback without re-downloading the main manifest\r\n\r\nWhat's the correct/suggested approach to achieve the same result with exoplayer ?\r\n\r\n### Reproduction steps\r\n\r\nThe behaviour can be observed using the official exoplayer demo application and opening the test content\r\n\r\n### Link to test content\r\nI sent the link to the test content by email with the reference to this issue.\r\n\r\n### Version of ExoPlayer being used\r\nWe are using `release-v2` branch at 1fdc11f2b30547392c6fe6d2485493837d8f41a2\r\n\r\n### Device(s) and version(s) of Android being used\r\nAny device will work, emulator included",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3394/comments",
    "author": "davibe",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-10-25T07:32:58Z",
        "body": "Relying on the player not re-downloading the master playlist for the service to work sounds extremely fragile. What would happen if iOS were updated to do this? Is there a documented guarantee anywhere that AVPlayer wont behave in this way?\r\n\r\nGiven there are entitlements involved, I'm guessing you must have some kind of relationship with whoever's managing the backend? If so then I'd suggest you talk to them and see what can be done on their side, because I think it's quite likely you'll run into trouble at some point in the future with the approach currently being pursued."
      },
      {
        "user": "AquilesCanta",
        "created_at": "2017-10-25T12:26:03Z",
        "body": "Is the main manifest the master playlist? If so, would it work injecting your own DataSource (see `HlsDataSourceFactory`) that caches the master playlist so that it is downloaded only once, the first time?"
      },
      {
        "user": "ojw28",
        "created_at": "2017-11-01T14:33:46Z",
        "body": "I don't really see this as a player issue, so closing."
      },
      {
        "user": "davibe",
        "created_at": "2017-11-04T14:57:01Z",
        "body": "thx for the suggestions. "
      }
    ]
  },
  {
    "number": 3352,
    "title": "[Question] Accessibility - DefaultTimeBar and readout text",
    "created_at": "2017-10-13T12:34:12Z",
    "closed_at": "2017-10-13T14:31:54Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3352",
    "body": "I have a problem with `DefaultTimeBar` (also with `SeekBar`) while accessibility mode ON.\r\n\r\nI have modified the readout text by using `host.setContentDescription(CharSequence contentDescription)` in `AccessibilityDelegateCompat.onPopulateAccessibilityEvent(View host, AccessibilityEvent event)`.\r\nEven though the text is set, it is always reading out actual position of the video - in example 'three-oh-five\".\r\nQuestion 1: Is it possible to change the read out text for `DefaultTimeBar`?\r\n\r\nSecondly, the read out text goes on, like \"three-oh-five three-oh-six three-oh-seven\" until the SeekBar is no longer visible or focused.\r\nQuestion 2: Is it possible to read out only once actual position?\r\n\r\nAbove problems occurs only for `DefaultTimeBar` and `SeekBar`. For other Views there is no such problem. I have also `TextView` for `@id/exo_position`, and it works fine. ",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3352/comments",
    "author": "nimdokai",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2017-10-13T14:31:54Z",
        "body": "For `DefaultTimeBar` we try to do approximately what `SeekBar` does with regard to accessibility. I think it's intentional that the playback position is read out repeatedly. If you need do to something different, I suggest forking this class and implementing whatever behavior you need there. If you have a concrete suggestion for an improvement, please send a pull request and we can consider it. Thanks!"
      }
    ]
  },
  {
    "number": 3350,
    "title": "How to check a video format whether is possible to render on a specific device?",
    "created_at": "2017-10-13T09:54:37Z",
    "closed_at": "2017-11-01T14:35:19Z",
    "labels": [
      "question",
      "need more info"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3350",
    "body": "Hi, ExoPlayer Developers.\r\nI see so many issues with \"device specific issue\" tag. Almost it can't render video because of device capabilities < video format. I and many developers are working with this issue.\r\nSo I have one question:\r\nIf I have a given video format (width, height, bitrate ...). Which helper functions to check it whether is possible render on a specific android device? And how to do that before I play my video?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3350/comments",
    "author": "hiepnm",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-10-13T16:18:32Z",
        "body": "A device not supporting playback of a certain (width, height, bitrate) because it exceeds the device's capabilities is different to a device specific issue. The first is expected, because every device has an upper bound on what it's capable of doing. The second is not expected. A good example of the second would be a broken platform decoder.\r\n\r\nBy default ExoPlayer already avoids selecting tracks that exceed the device's capabilities, unless such a track is the only option (e.g. a regular MP4 with only one video track to choose from). If a track that exceeds the device's capabilities is the only option we default to trying to play it, since the within-capabilities/exceeds-capabilities boundary is fuzzy in practice (there's no such thing as a hard limit on supported bitrate; it depends on many other factors such as how the bitrate varies through the media, what other apps are using CPU on the device, etc). If the device really can't handle it, playback will fail.\r\n\r\nIs there an actual concrete issue that you're hitting that you'd like us to look at?"
      }
    ]
  },
  {
    "number": 3338,
    "title": "Determin when video is stalled",
    "created_at": "2017-10-10T15:14:38Z",
    "closed_at": "2017-10-10T18:37:07Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3338",
    "body": "Hello! \r\nI wonder can i determine that video is stalled for buffering?\r\nI try check onPlayerStateChanged. But i don't see ability to get real state of player. I see that STATE_BUFFERING don't mean that player stop video.  \r\nI need to track how many times video is stalled for buffering,",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3338/comments",
    "author": "Anton111111",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2017-10-10T15:19:45Z",
        "body": "When the player state changes to STATE_BUFFERING is does exactly that - stop the video playback and buffer data only. Why do you think the player is still playing? "
      },
      {
        "user": "Anton111111",
        "created_at": "2017-10-10T15:23:05Z",
        "body": "I just write to the log state of the player. And I see that the video is playing, but STATE_BUFFERING sometimes appears in the log"
      },
      {
        "user": "tonihei",
        "created_at": "2017-10-10T15:35:19Z",
        "body": "You probably also see a change back to STATE_READY? That indicates the player continues playing. \r\n\r\nIf you like to look any further please also fill out the issue template describing how we can reproduce your problem exactly and also provide example media producing this problem."
      },
      {
        "user": "Anton111111",
        "created_at": "2017-10-10T15:40:26Z",
        "body": "Oh. It's not problem ;)  Only question."
      },
      {
        "user": "ojw28",
        "created_at": "2017-10-10T18:37:07Z",
        "body": "You should see that `STATE_BUFFERING` corresponds to periods of time during which the player is stalled buffering. The ExoPlayer demo app outputs state transitions to logcat, and I see them occurring as expected. You can view these state transitions using `adb logcat` during playback. To get just event transition lines, you can use `adb logcat | grep \"EventLogger: state\"`.\r\n\r\nIf you feel there's still a problem, please provide a log captured during usage of the ExoPlayer demo app, annotated with the point at which you think the reported state is incorrect. Thanks!"
      }
    ]
  },
  {
    "number": 3336,
    "title": "Get when next song will get play",
    "created_at": "2017-10-10T13:22:12Z",
    "closed_at": "2017-10-10T13:25:43Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3336",
    "body": "I want to get future timestamp when next song will get play. I am using\r\n  ` implementation 'com.google.android.exoplayer:exoplayer:r2.5.3'`",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3336/comments",
    "author": "raj9686",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2017-10-10T13:25:43Z",
        "body": "You can use player.getDuration() to get the duration of the current song. I suppose that's the timestamp you are looking for? If you'd like to know the remaining duration, you can also subtract player.getCurrentPosition()."
      },
      {
        "user": "raj9686",
        "created_at": "2017-10-11T05:48:35Z",
        "body": "CurrentPosition: 30779 \r\nTotal Duration :  30775\r\nHow this could be possible can you please explane"
      },
      {
        "user": "raj9686",
        "created_at": "2017-10-11T05:51:02Z",
        "body": "player.getDuration() - player.getCurrentPosition() != time, when next song will get play \r\ni tested it. Simply i just want to know when exact next song will get start to play.\r\n`long futureTimeStamp  = (System.currentTimeMillis()) + (player.getDuration() - player.getCurrentPosition());`\r\nBut its not same when next song get actually play."
      },
      {
        "user": "tonihei",
        "created_at": "2017-10-11T10:07:46Z",
        "body": "The most likely cause is that your media is reporting a slightly wrong duration. Can you check that this is the case?"
      }
    ]
  },
  {
    "number": 3333,
    "title": "Cookie in android",
    "created_at": "2017-10-10T11:10:17Z",
    "closed_at": "2017-10-10T12:05:58Z",
    "labels": [
      "duplicate",
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3333",
    "body": "How to set cookies for streaming videos, i mean where do i add them? headers?? or do we have some specific functions? we are using DefaultHttpDataSourceFactory so can i add as cookie in DefaultRequestProperties?\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3333/comments",
    "author": "Arunkarthicknallasami",
    "comments": [
      {
        "user": "AquilesCanta",
        "created_at": "2017-10-10T12:05:58Z",
        "body": "I think there are existing issues about this topic, like #3045. Please search in the issue tracker, or provide a  more context if your problem is not covered."
      },
      {
        "user": "Arunkarthicknallasami",
        "created_at": "2017-10-10T12:14:05Z",
        "body": "That issue that u pointed to actually didnt gave a solution, so can u help out? i just need to know whether adding a header key cookie will solve the issue?"
      }
    ]
  },
  {
    "number": 3299,
    "title": "Question : How to play one video between another video?",
    "created_at": "2017-09-26T12:50:26Z",
    "closed_at": "2017-09-27T07:22:08Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3299",
    "body": "My mainSource is movie (~2 hours)\r\n\r\nMy secondSource & thirdSource are video Ads (2 mins)\r\n\r\nI need to play first video advertisement after 30 mins movie played. And need to play second video advertisement after 60 mins movie played.\r\n\r\nI need play 3 videos in following sequence\r\n\r\nmain movie (first 30 min) --> 2 min first ads --> main movie (31-60 mins) --> 2 min second ads --> main movie (61- end)\r\n\r\nShall I use **ConcatenatingMediaSource** for this scenario? \r\n\r\n\r\nCurrently I am using **compile 'com.google.android.exoplayer:exoplayer:r2.5.1'**\r\n\r\n\r\nThank you for your valuable response. \r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3299/comments",
    "author": "rranjithkumar100",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2017-09-27T07:22:08Z",
        "body": "To play a clip from a longer `MediaSource`, pass it to `ClippingMediaSource`'s constructor along with the start/end times you want to play. Then `ConcatenatingMediaSource` can be used to join together the clips, so the source you pass to `prepare` will be a `ConcatenatingMediaSource` with `ClippingMediaSource`s for the movie clips and normal `MediaSource`s (e.g., `ExtractorMediaSource`s) for the ads.\r\n\r\nPlease note the caveat on #1988: to make playback seamless, you will need to ensure that the start point of each clip lies on a keyframe."
      }
    ]
  },
  {
    "number": 3298,
    "title": "Byte Range Request",
    "created_at": "2017-09-26T12:16:06Z",
    "closed_at": "2017-09-27T12:42:31Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3298",
    "body": "In ExoPlayer, player requests over HTTP by setting request range\r\n\r\ne.g. bytes=17654432-22314354 -> segment 1\r\n\r\nAfter segmenting video, bytes of each segment is defined\r\n\r\nCan I change the byte range request and be playback without any problem?\r\n\r\nSome example is below\r\n\r\nbytes=17654432-19354221 -> half of segment 1\r\n\r\nbytes=19354222-22314354 -> remainder half of segment 1\r\n\r\nThank you for read this\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3298/comments",
    "author": "soadri",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-09-27T09:09:04Z",
        "body": "As long as the requested data is loaded one way or another, there's no reason in that would prevent you from doing this, as long as you made the change correctly. Having said that, I don't understand why you would want to do this."
      },
      {
        "user": "soadri",
        "created_at": "2017-09-27T12:31:11Z",
        "body": "@ojw28 \r\n\r\nI want to confirm whether video can be played when player requests some range of bytes part of segment\r\n\r\nThank you for reply"
      }
    ]
  },
  {
    "number": 3296,
    "title": "Is exoplayer able to play video in reverse - question",
    "created_at": "2017-09-26T08:51:26Z",
    "closed_at": "2017-09-26T09:29:59Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3296",
    "body": "Hi, I am trying to make a feature in app, so user can play video in reverse order to seek to desired video position. So far, I have implemented the functionality to get player current position and decrease it by e.g. 10s. And it works fine but appearance is little bit choppy, so I am looking for feature to play video in reverse order(like we did in 90's with VHS).\r\nDose exoplayer support this or is there a way to achieve this?\r\n\r\nthanks\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3296/comments",
    "author": "lazarvgd",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2017-09-26T09:27:24Z",
        "body": "That's not something that can be done easily with a player, because video encodings make use of redundancies in the video frames and compress the data such that you need to decode the video in forward direction from a key frame to reconstruct the original frames. The choppy behaviour you see is the player constantly decoding everything from the last key frame to your requested position (which takes some time). The only way to do this is to re-encode your video in reverse order. "
      },
      {
        "user": "lazarvgd",
        "created_at": "2017-09-26T09:29:59Z",
        "body": "I thought that is much easier. Thank you, I will close this one."
      }
    ]
  },
  {
    "number": 3295,
    "title": "Offline license helper release and renew license",
    "created_at": "2017-09-26T07:22:05Z",
    "closed_at": "2017-09-26T10:10:34Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3295",
    "body": "I am playing offline drm videos in my application, i wanted to  handle renew and release license,should i need to handle from server side or from client side,renew license returning new byte array but release license not returning anything\r\n\r\n offlineLicenseHelper.release(offlineAssetKeyId);\r\n offlineLicenseHelper.renew(offlineAssetKeyId);",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3295/comments",
    "author": "skyshine999",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-09-26T09:38:04Z",
        "body": "The release method is documented not to return anything. What would you need/expect to be returned? We really can't help you if your issue reports do not fully describe the problem or question. Please clarify. Thanks."
      },
      {
        "user": "skyshine999",
        "created_at": "2017-09-26T10:04:36Z",
        "body": "Actually i wanted to know what exactly renew and release license doing, how i need to do handle these things\r\n"
      },
      {
        "user": "ojw28",
        "created_at": "2017-09-26T10:10:34Z",
        "body": "* Renew makes a license request to renew the offline license. This is useful if the offline licenses you issue are only valid for a limited period of time (e.g. 30 days). You might want to renew periodically (e.g. every 7 days), so that the user always has a fairly large period of remaining license validity (e.g. 30 - 7 = 23 days).\r\n* Release releases the license and makes it unusable on the device.\r\n* Both involve network requests: Renewal to extend the new extended license, and release because your server might need to know the license has been released, for example if your policy is to allow an offline license to be held by only one N user devices at once.\r\n* Both communicate license usage information back the the server. This is useful if your license has a short clock (e.g. 30 day validity, but only 2 days validity from the point at which the user starts watching), because it will tell the server whether the short clock was activated."
      }
    ]
  },
  {
    "number": 3287,
    "title": "Hide all video control tools except loading progress bar",
    "created_at": "2017-09-22T17:55:28Z",
    "closed_at": "2017-09-24T12:06:59Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3287",
    "body": "Ok! \r\nNot a bug, not an issue, just an individual request.\r\nI needed a hint on how to generally disable or hide the SEEKBAR and the Play/Pause controls.. I followed an already solved method here to disable the default control with:\r\n\r\n`app:useDefaultControls=\"false\"`\r\n\r\nbut using that also disable the buffering gif or is it called progressive \"loading\" gif? :)\r\nAll I need is like a code to disable the seek bar and play/pause functions or preferably hide them...\r\n\r\nNot interesting but...couldn't figure it out.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3287/comments",
    "author": "mokoshalb",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-09-24T12:06:59Z",
        "body": "I don't think this is an ExoPlayer question. If you're using ExoMedia, you'll need to ask the maintainers of that project."
      }
    ]
  },
  {
    "number": 3275,
    "title": "How to force rotation of video playback?",
    "created_at": "2017-09-20T09:52:57Z",
    "closed_at": "2018-01-02T19:57:50Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3275",
    "body": "Hello,\r\n\r\nFor our app, we want to play a landscape video on a portrait UI phone with 90° rotation on purpose. The phone's user interface will not be rotated during playback, so the 90° rotation is intended behaviour. But ExoPlayer will rotate the video based on the phone's orientation and the video's metadata automatically. There is no parameter that allows me to override the video rotation for playback.\r\n\r\nMy naive attempt was to use `android:rotation=\"90\"` for the `SimpleExoPlayerView`, but that results in a black view during playpack.\r\n\r\nSo what is the proper way to achieve this?\r\n\r\nThanks.\r\n\r\n[I did read #91 prior to this, but that other bug report is about a different topic - as far as I understood that issue, there it's about a video that contains rotation metadata which were used wrongly during playback.]",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3275/comments",
    "author": "hzulla",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2018-01-02T19:57:50Z",
        "body": "`SimpleExoPlayerView` doesn't support this use case directly, so you'll need to do a bit more work yourself.\r\n\r\nThe easiest approach is to use `TextureView` directly, by adding it to your layout and using `SimpleExoPlayer.setVideoTextureView`. Once using a `TextureView` you should be able to call `TextureView.setTransform` to set the desired rotation and transformation. You may need to listen to `SimpleExoPlayer.VideoInfoListener.onVideoSizeChanged` to get the video dimensions for calculating the transformation (see the source code for `SimpleExoPlayerView` for an example of how you can do this). If you need playback controls then you can add `PlaybackControlView` to your layout along with the `TextureView`."
      }
    ]
  },
  {
    "number": 3272,
    "title": "How to use exo_playback_control_view separately below the player and not over it",
    "created_at": "2017-09-18T10:33:39Z",
    "closed_at": "2017-09-18T17:37:20Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3272",
    "body": "How to use exo_playback_control_view separately below the player and not over it\r\n\r\nI have a Relative layout where I am showing the video using SimpleExoPlayerView and SimpleExoPlayer , \r\n\r\nI want to show the controls which are in the layout file of exo_playback_control_view separately  below the ExoPlayerView   and not over it as is the case in most players\r\n\r\n\r\nis there any way this can   achieved \r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3272/comments",
    "author": "pawaom",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-09-18T16:01:56Z",
        "body": "You should be able to:\r\n1. Disable playback controls in `SimpleExoPlayerView` by calling `simpleExoPlayerView.setUseController(false)`.\r\n1. Add a `com.google.android.exoplayer2.ui.PlaybackControlView` somewhere else in your layout, bind it to the player using `playbackControlView.setPlayer(player)`, and unbind it (if you need to) by calling `playbackControlView.setPlayer(null)`."
      }
    ]
  },
  {
    "number": 3269,
    "title": "HLS multiple streaming playing",
    "created_at": "2017-09-17T08:44:35Z",
    "closed_at": "2017-09-17T18:23:19Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3269",
    "body": "I know this this not Exoplayer fault but am confused,\r\nI have two mp4 files with two URLs I've implement simple app to play them and two buttons to select between them its working perfectly,\r\nBut when switching to HLS streaming every time I try to change source it give me an error\r\nmy function to do this \r\n```\r\n    private void initPlayer(String streamingURL) {\r\n        mediaDataSourceFactory = new DefaultDataSourceFactory(this, (TransferListener<? super DataSource>) bandwidthMeter,\r\n                new DefaultHttpDataSourceFactory(userAgent, (TransferListener<? super DataSource>) bandwidthMeter));\r\n        bandwidthMeter = new DefaultBandwidthMeter();\r\n        TrackSelection.Factory videoTrackSelectionFactory =\r\n                new AdaptiveTrackSelection.Factory(bandwidthMeter);\r\n        TrackSelector trackSelector =\r\n                new DefaultTrackSelector(videoTrackSelectionFactory);\r\n        // 2. Create a default LoadControl\r\n        LoadControl loadControl = new DefaultLoadControl();\r\n        // 3. Create the player\r\n        player = ExoPlayerFactory.newSimpleInstance(this, trackSelector, loadControl);\r\n        simpleExoPlayerView.requestFocus();\r\n\r\n        simpleExoPlayerView.setPlayer(player);\r\n        simpleExoPlayerView.setResizeMode(AspectRatioFrameLayout.RESIZE_MODE_FILL);\r\n        // Measures bandwidth during playback. Can be null if not required.\r\n        DefaultBandwidthMeter DefBandwidthMeter = new DefaultBandwidthMeter();\r\n        DataSource.Factory dataSourceFactory = new DefaultDataSourceFactory(this,\r\n                userAgent, DefBandwidthMeter);\r\n        // Produces Extractor instances for parsing the media data.\r\n        ExtractorsFactory extractorsFactory = new DefaultExtractorsFactory();\r\n\r\n        // This is the MediaSource representing the media to be played.\r\n        Uri streamingVideoUri;\r\n        streamingVideoUri = Uri.parse(streamingURL);\r\n       // MediaSource videoSource = new HlsMediaSource(streamingVideoUri,\r\n               // dataSourceFactory, extractorsFactory, null, null);\r\n        MediaSource videoSource = new HlsMediaSource(streamingVideoUri, mediaDataSourceFactory,handler,eventListener);\r\n\r\n        player.prepare(videoSource);\r\n        setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_SENSOR_LANDSCAPE);\r\n        // Prepare the player with the source.\r\n        player.setPlayWhenReady(true);\r\n    }\r\n```\r\n\r\nbutton to change source\r\n\r\n```\r\n        sdBtn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Toast.makeText(getApplicationContext(),streamingURLSD,Toast.LENGTH_SHORT).show();\r\n               player.release();\r\n                initPlayer(streamingURLSD);\r\n                if(bAutoplay){\r\n                    if(player!=null){\r\n                        player.setPlayWhenReady(true);\r\n                        bIsPlaying=true;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n```\r\n\r\nerror log\r\n\r\n```FATAL EXCEPTION: main\r\n                                                                 Process: iq.osamasw.hhls, PID: 28869\r\n                                                                 java.lang.NullPointerException\r\n                                                                     at com.google.android.exoplayer2.util.Assertions.checkNotNull(Assertions.java:107)\r\n                                                                     at com.google.android.exoplayer2.source.AdaptiveMediaSourceEventListener$EventDispatcher.<init>(AdaptiveMediaSourceEventListener.java:183)\r\n                                                                     at com.google.android.exoplayer2.source.AdaptiveMediaSourceEventListener$EventDispatcher.<init>(AdaptiveMediaSourceEventListener.java:178)\r\n                                                                     at com.google.android.exoplayer2.source.hls.HlsMediaSource.<init>(HlsMediaSource.java:73)\r\n                                                                     at com.google.android.exoplayer2.source.hls.HlsMediaSource.<init>(HlsMediaSource.java:63)\r\n                                                                     at com.google.android.exoplayer2.source.hls.HlsMediaSource.<init>(HlsMediaSource.java:56)\r\n                                                                     at iq.osamasw.hhls.PlayChannel.initPlayer(PlayChannel.java:300)\r\n                                                                     at iq.osamasw.hhls.PlayChannel.access$700(PlayChannel.java:58)\r\n                                                                     at iq.osamasw.hhls.PlayChannel$7.onClick(PlayChannel.java:215)\r\n                                                                     at android.view.View.performClick(View.java:6213)\r\n                                                                     at android.widget.TextView.performClick(TextView.java:11074)\r\n                                                                     at android.view.View$PerformClick.run(View.java:23645)\r\n                                                                     at android.os.Handler.handleCallback(Handler.java:751)\r\n                                                                     at android.os.Handler.dispatchMessage(Handler.java:95)\r\n                                                                     at android.os.Looper.loop(Looper.java:154)\r\n                                                                     at android.app.ActivityThread.main(ActivityThread.java:6692)\r\n                                                                     at java.lang.reflect.Method.invoke(Native Method)\r\n                                                                     at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1468)\r\n                                                                     at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1358)\r\n```",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3269/comments",
    "author": "hawkiq",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-09-17T18:23:19Z",
        "body": "If you look at `AdaptiveMediaSourceEventListener.java:183`, you should be able to deduce this failure is because you're passing a null handler and non-null eventListener when building the `HlsMediaSource`. If you're passing a non-null eventListener, the handler is not allowed to be null."
      }
    ]
  },
  {
    "number": 3267,
    "title": "Video 4K render black on the surface texture",
    "created_at": "2017-09-16T10:40:02Z",
    "closed_at": "2017-09-18T17:38:40Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3267",
    "body": "- I had tested source code from \"release-v2-surfacetexture-experiment\" branch, it is work well with video 2k, but with video 4k it can not play, show shake black screen.\r\n\r\n- I am testing on Amlogic setup box, Android 6.0.1 API 23\r\n\r\n- Can you help check this problem?\r\n\r\nThanks,",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3267/comments",
    "author": "DavidNguyen2017",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-09-18T10:02:44Z",
        "body": "That's an experiment, as opposed to being an officially supported branch. Do you have any issues using the proper release branch?"
      },
      {
        "user": "DavidNguyen2017",
        "created_at": "2017-09-18T10:15:43Z",
        "body": "Dear ojw28,\r\n\r\nThank you for your supporting,\r\n\r\nOn the release branch player work well with video 4k, but in the my project i want to use Exoplayer to play video 4k with gl surface view. So i want work around on this problem, but i do not have any ideas how to fix it. do you have any advise for me?\r\n\r\nThanks,\r\n"
      },
      {
        "user": "ojw28",
        "created_at": "2017-09-18T15:57:15Z",
        "body": "Unfortunately this falls beyond the scope of this issue tracker, as it's not something we're currently supporting. I suspect you're hitting a platform limitation. It might also be worth patching the changes in the experimental branch on top of the latest `release-v2` branch, in case some fixes made to V2 since the experimental branch was forked resolve the problem. Good luck!"
      }
    ]
  },
  {
    "number": 3264,
    "title": "How to use multicast - UdpDataSource？",
    "created_at": "2017-09-14T07:02:46Z",
    "closed_at": "2017-09-14T07:29:47Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3264",
    "body": "I read about issues#2029, but still did not solve.\r\nThis url(udp://@224.0.0.0:1234) can be played on the VLC player.\r\nMy device(Nexus9 android 7.1.1) supports udp.\r\n### My Code\r\n\r\n    @Override\r\n    protected void onCreate(@Nullable Bundle savedInstanceState) {\r\n        LOGGER.e(\"onCreate\");\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_exoplayer);\r\n        initView();\r\n        createTrackSelector();\r\n        createPlayer();\r\n        bindPlayer();\r\n        createMediaSource();\r\n    }\r\n\r\n    private void initView(){\r\n        this.simpleExoPlayerView = (SimpleExoPlayerView) findViewById(R.id.player_view);\r\n    }\r\n\r\n    /**1. Create a default TrackSelector.*/\r\n    private void createTrackSelector(){\r\n        BandwidthMeter bandwidthMeter = new DefaultBandwidthMeter();\r\n        TrackSelection.Factory videoTrackSelectionFactory = new AdaptiveTrackSelection.Factory(bandwidthMeter);\r\n        this.trackSelector = new DefaultTrackSelector(videoTrackSelectionFactory);\r\n    }\r\n\r\n    /**2. Create the player.*/\r\n    private void createPlayer(){\r\n        this.player = ExoPlayerFactory.newSimpleInstance(getApplicationContext(), trackSelector);\r\n    }\r\n\r\n    /**Bind the player to the view.*/\r\n    private void bindPlayer(){\r\n        simpleExoPlayerView.setPlayer(player);\r\n    }\r\n\r\n    private void createMediaSource() {\r\n        DefaultBandwidthMeter bandwidthMeter = new DefaultBandwidthMeter();\r\n        // Produces DataSource instances through which media data is loaded.\r\n        DefaultDataSource2.Factory dataSourceFactory = new DefaultDataSourceFactory(getApplicationContext(),\r\n                Util.getUserAgent(getApplicationContext(), getString(R.string.app_name)), bandwidthMeter);\r\n        // Produces Extractor instances for parsing the media data.\r\n        ExtractorsFactory extractorsFactory = new DefaultExtractorsFactory();\r\n        // This is the MediaSource representing the media to be played.\r\n        Uri uri = Uri.parse(\"udp://@224.0.0.0:1234\");\r\n        MediaSource videoSource = new ExtractorMediaSource(uri, dataSourceFactory, extractorsFactory, handler, this);\r\n        // Prepare the player with the source.\r\n        player.prepare(videoSource);\r\n        player.setPlayWhenReady(true);\r\n    }\r\n\r\n\r\n\r\n\r\n### class DefaultDataSource2\r\n\r\n    private static final String TAG = \"DefaultDataSource2\";\r\n\r\n    private static final String SCHEME_UDP = \"udp\";\r\n\r\n    private final Context context;\r\n    private final TransferListener<? super DataSource> listener;\r\n\r\n    private final DataSource baseDataSource;\r\n    private DataSource udpDataSource;\r\n\r\n    private DataSource dataSource;\r\n\r\n    public DefaultDataSource2(Context context, TransferListener<? super DataSource> listener,\r\n                             String userAgent, boolean allowCrossProtocolRedirects) {\r\n        this(context, listener, userAgent, DefaultHttpDataSource.DEFAULT_CONNECT_TIMEOUT_MILLIS,\r\n                DefaultHttpDataSource.DEFAULT_READ_TIMEOUT_MILLIS, allowCrossProtocolRedirects);\r\n    }\r\n\r\n    public DefaultDataSource2(Context context, TransferListener<? super DataSource> listener,\r\n                             String userAgent, int connectTimeoutMillis, int readTimeoutMillis,\r\n                             boolean allowCrossProtocolRedirects) {\r\n        this(context, listener,\r\n                new DefaultHttpDataSource(userAgent, null, listener, connectTimeoutMillis,\r\n                        readTimeoutMillis, allowCrossProtocolRedirects, null));\r\n    }\r\n\r\n    public DefaultDataSource2(Context context, TransferListener<? super DataSource> listener,\r\n                             DataSource baseDataSource) {\r\n        this.context = context.getApplicationContext();\r\n        this.listener = listener;\r\n        this.baseDataSource = Assertions.checkNotNull(baseDataSource);\r\n    }\r\n\r\n    @Override\r\n    public long open(DataSpec dataSpec) throws IOException {\r\n        Assertions.checkState(dataSource == null);\r\n        String scheme = dataSpec.uri.getScheme();\r\n        if(SCHEME_UDP.endsWith(scheme)){\r\n            dataSource = getUdpDataSource();\r\n        }\r\n        else {\r\n            dataSource = baseDataSource;\r\n        }\r\n        return dataSource.open(dataSpec);\r\n    }\r\n\r\n    @Override\r\n    public int read(byte[] buffer, int offset, int readLength) throws IOException {\r\n        return dataSource.read(buffer, offset, readLength);\r\n    }\r\n\r\n    @Override\r\n    public Uri getUri() {\r\n        return dataSource == null ? null : dataSource.getUri();\r\n    }\r\n\r\n    @Override\r\n    public void close() throws IOException {\r\n        if (dataSource != null) {\r\n            try {\r\n                dataSource.close();\r\n            } finally {\r\n                dataSource = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    private DataSource getUdpDataSource(){\r\n        if(udpDataSource == null){\r\n            udpDataSource = new UdpDataSource(listener);\r\n        }\r\n        return udpDataSource;\r\n    }\r\n\r\n\r\n\r\n### My Error hints\r\n\r\n  E/ExoPlayerImplInternal: Source error.\r\n                                                                   \r\n  com.google.android.exoplayer2.upstream.HttpDataSource$HttpDataSourceException: Unable to connect to udp://@224.0.0.0:1234\r\n                                                                       at \r\n  com.google.android.exoplayer2.upstream.DefaultHttpDataSource.open(DefaultHttpDataSource.java:194)\r\n                                                                       at \r\n  com.google.android.exoplayer2.upstream.DefaultDataSource.open(DefaultDataSource.java:137)\r\n                                                                       at \r\n  com.google.android.exoplayer2.source.ExtractorMediaPeriod$ExtractingLoadable.load(ExtractorMediaPeriod.java:692)\r\n                                                                       at \r\n  com.google.android.exoplayer2.upstream.Loader$LoadTask.run(Loader.java:315)\r\n                                                                       at \r\n  java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1133)\r\n                                                                       at \r\n  java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:607)\r\n                                                                       at java.lang.Thread.run(Thread.java:761)\r\n                                                                    Caused by: java.net.MalformedURLException: unknown \r\n  protocol: udp\r\n                                                                       at java.net.URL.<init>(URL.java:596)\r\n                                                                       at java.net.URL.<init>(URL.java:486)\r\n                                                                       at java.net.URL.<init>(URL.java:435)\r\n                                                                       at \r\n  \r\n  com.google.android.exoplayer2.upstream.DefaultHttpDataSource.makeConnection(DefaultHttpDataSource.java:341)\r\n                                                                       at \r\n  com.google.android.exoplayer2.upstream.DefaultHttpDataSource.open(DefaultHttpDataSource.java:192)\r\n                                                                       at \r\n  com.google.android.exoplayer2.upstream.DefaultDataSource.open(DefaultDataSource.java:137) \r\n                                                                       at \r\n  com.google.android.exoplayer2.source.ExtractorMediaPeriod$ExtractingLoadable.load(ExtractorMediaPeriod.java:692) \r\n                                                                       at \r\n  com.google.android.exoplayer2.upstream.Loader$LoadTask.run(Loader.java:315) \r\n                                                                       at \r\n  java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1133) \r\n                                                                       at \r\n  java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:607) \r\n                                                                       at java.lang.Thread.run(Thread.java:761) \r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3264/comments",
    "author": "Z1W3",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2017-09-14T07:29:47Z",
        "body": "It looks like you're passing an instance of `DefaultDataSourceFactory`, not a custom factory that returns a `UdpDataSource`. Please try implementing `DataSource.Factory` and returning an instance of your `DefaultDataSource2` from its `createDataSource` method."
      }
    ]
  },
  {
    "number": 3248,
    "title": "[Question]Is exoplayer support 7.1 AAC?",
    "created_at": "2017-09-07T09:23:52Z",
    "closed_at": "2017-09-07T09:39:34Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3248",
    "body": "I know exoplayer support 7.1 in EAC from issue #3161 . I wonder is exoplayer support 7.1 AAC?\r\nIf not, is that in road map?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3248/comments",
    "author": "xdestiny110",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2017-09-07T09:39:34Z",
        "body": "Yes, it should just work. For example, if you're playing this stream on an Android TV device the device will decode all eight channels and send them as PCM data over the HDMI connection. Or on a phone with stereo speakers the audio channels should be downmixed to stereo. Let us know if you have any problems."
      }
    ]
  },
  {
    "number": 3240,
    "title": "[Question]How to adjust volume separately in channel 7.1?",
    "created_at": "2017-09-06T02:51:44Z",
    "closed_at": "2017-09-06T07:50:55Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3240",
    "body": "I want to adjust volume of single audio channel such as LF or RF. Is there some API available? If not, could you give me a suggestion?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3240/comments",
    "author": "xdestiny110",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2017-09-06T07:50:55Z",
        "body": "We don't have a way to do this at the moment. #2659 tracks the enhancement."
      }
    ]
  },
  {
    "number": 3229,
    "title": "Different speed of audio playback on different devices",
    "created_at": "2017-09-01T05:59:25Z",
    "closed_at": "2017-09-05T20:09:59Z",
    "labels": [
      "question",
      "bug: device specific"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3229",
    "body": "At first, thanks a lot for such an amazing and flexible library! I'm writing because of an oddity, which I don't know how to explain or resolve.\r\n\r\n**When I play back audio on my HTC One, I noticed that it runs slightly faster than the video (with the same audio) on my laptop (= 1s faster after roughly one hour of playback).** At the start of the playback, the audio on the laptop and the phone is perfectly synchronized, but as said, after one hour of playback there is a quite notable difference.\r\nSurprisingly, I cannot reproduce this on a newer smartphone (Galaxy S7 Edge).\r\n\r\nAssuming that Exoplayer runs a bit faster than it should every now and then, I tried to fix this behavior by comparing the current position of Exoplayer with the time where it theoretically should be (using `System.currentTimeMillis()`), but surprisingly the difference here was always just a few ms, not explaining the audible difference. (On the Galaxy S7 Edge these occasional adjustments work perfectly fine to keep the measured difference below 5ms, and there is no audible difference.)\r\n\r\nFor me, the assumption would be that `System.currentTimeMillis()` does not return accurate results on my HTC One (runs too fast or too slow), as the difference between audio on the smartphone and audio on the laptop is easily noticeable, but somehow I can't believe this and I'm looking for any other possible explanation.\r\n\r\nOf course, any thoughts or input would be highly appreciated! **In general, it would also be interesting to know if Exoplayer ensures that after 10s of time elapsed it has played back exactly 10s**, or to understand how to ensure this myself in a more elegant way than comparing values from `System.currentTimeMillis()` with `getCurrentPosition()`.\r\n\r\nThanks a lot in advance!",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3229/comments",
    "author": "coffeeforyou",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-09-04T15:11:44Z",
        "body": "The underlying platform is responsible for playing the audio we feed to it, and for playing it at the correct rate. So it's likely that the HTC One platform implementation is just playing the audio very slightly faster than 1x speed. This wouldn't necessarily be related to any publicly accessible clock, although it is true that clocks on mobile devices tend to have some variance in them.\r\n\r\nIt's quite unclear whether this is actually a real issue for you, or just a hypothetical question. If it's a hypothetical question, I think we should just close this as a quirk of the HTC One. If it's posing a real issue, please describe what the use case is and why it's a problem."
      },
      {
        "user": "coffeeforyou",
        "created_at": "2017-09-05T20:05:34Z",
        "body": "Thanks a lot for the comprehensive answer! Actually, I don't know to which extent this could be an issue - it will depend on the number of devices which behave similarly to my HTC One, once I publish my app. I only have three devices to test on.\r\nMaybe, if you have any other ideas where I could search or what I could try out, I'd be happy to hear them. My latest unsuccessful attempt was to find the reason in the timestamps in the mp4 files I use. I will continue trying to find the root cause, and if I find it, I'll let you know, but I agree that this is most likely not an issue of Exoplayer. "
      },
      {
        "user": "ojw28",
        "created_at": "2017-09-05T20:09:56Z",
        "body": "When I ask whether it's a real issue, I guess what I'm really asking is whether your app really needs audio to play out at _exactly_ 1x speed (e.g. because you're synchronizing audio playback across multiple devices, or similar). If you're just doing media playback, a slightly off playback speed doesn't seem like a problem your users would notice.\r\n\r\nIf you are synchronizing audio across multiple devices then ExoPlayer is perhaps not the best tool (I'm not sure what is, however)."
      }
    ]
  },
  {
    "number": 3211,
    "title": "Can't play playready protected stream on Samsung S4 (\"this device does not support the required DRM scheme\")",
    "created_at": "2017-08-26T18:43:14Z",
    "closed_at": "2017-08-27T08:17:31Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3211",
    "body": "**Issue description**\r\nCan't play playready protected stream on Samsung S4, and got \"this device does not support the required DRM scheme\" message\r\n\r\n**Reproduction steps**\r\nJust tried to play stream super speed (PlayReady) on the demo application on samsung S4 \r\n\r\n**Link to test content**\r\nsuper speed (PlayReady) from the Exoplayer demo app\r\n\r\n**Version of ExoPlayer being used**\r\n2.5.1\r\n\r\n**Device(s) and version(s) of Android being used**\r\nSamsung s4, Version 4.4.2\r\nand Samsung core 2, Version 4.4.2\r\n\r\n\r\nCan you please help me with this issue?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3211/comments",
    "author": "casimero",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-08-27T08:17:31Z",
        "body": "The error message is correct. Only AndroidTV devices are required to support PlayReady. For Android mobile devices support is optional, and most do not support it."
      },
      {
        "user": "casimero",
        "created_at": "2017-08-27T11:33:40Z",
        "body": "thank you for your  replay\r\nbut there is many android apps like \"bein connect\" that use playready protected streams and works on samsung s4 and all devices with android API +18"
      },
      {
        "user": "Doolali",
        "created_at": "2017-08-27T11:37:45Z",
        "body": "ExoPlayer relies on native DRM support which for Android phone devices will be Widevine.\r\nThere are SDKs for PlayReady out there but they will also come with the hefty PlayReady licensing fees."
      },
      {
        "user": "ojw28",
        "created_at": "2017-08-27T12:00:57Z",
        "body": "It should also be noted that software SDKs may be significantly less secure than native DRM solutions."
      },
      {
        "user": "casimero",
        "created_at": "2017-08-27T12:23:54Z",
        "body": "@Doolali So all those SDKs are paid ? there is no free SDK ?\r\n@ojw28 thank you but unfortunately native solution  doesn't support playready for most of android devices"
      },
      {
        "user": "ojw28",
        "created_at": "2017-08-29T09:28:14Z",
        "body": "I do not know of any free SDKs that support PlayReady (that's not to say there definitely isn't one!). Widevine is very much the recommended route for targeting Android devices.\r\n\r\nNote that common encryption means it's possible to have the same content support multiple DRM schemes simultaneously; it's not the case that you'd need to generate two copies of the content to support both PlayReady and Widevine."
      },
      {
        "user": "casimero",
        "created_at": "2017-09-10T23:38:18Z",
        "body": "I made severals searchs\r\nIt seems that there is no public free SDK. (I found just one but unfortunately it throws a drm exception)\r\n\r\n"
      }
    ]
  },
  {
    "number": 3209,
    "title": "error playlist",
    "created_at": "2017-08-25T01:50:20Z",
    "closed_at": "2017-08-25T08:20:26Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3209",
    "body": "I have problem playlist with set seekTo method\r\nthe first I have 5 items for playlist\r\nand current play is position play index 3 of 5 items\r\nand then I want to new items that have 3 items after click and  clear old playlist and add new 3 items to playlist\r\nwhen I click back back to in old items 3 of 5 items can't not duplicate position play\r\n================Code============================\r\n    private fun exoPlayer(isplay: Boolean, mSourceMedia: ArrayList<Uri>) {\r\n        sourcesPlayList.clear()\r\n        for (url in mDataPlayList.indices) {\r\n            val source = buildMediaSource(mDataPlayList[url])\r\n            sourcesPlayList.add(source)\r\n        }\r\n        println(\"size playlist: ${sourcesPlayList.size} \")\r\n        try {\r\n            var mediaSource = if (sourcesPlayList.size == 1) sourcesPlayList[0] else ConcatenatingMediaSource(*sourcesPlayList.toTypedArray())\r\n            val haveResumePosition = resumeWindow == C.INDEX_UNSET\r\n            println(\"seekTo: $resumeWindow $resumePosition $haveResumePosition\")\r\n            if (!haveResumePosition) {\r\n                exoPlayer.seekTo(resumeWindow, resumePosition)\r\n            }\r\n            exoPlayer.prepare(mediaSource, !haveResumePosition, false)\r\n            isShowPlayButton = false\r\n            exoPlayer?.playWhenReady = isplay\r\n            mainHandler?.postDelayed(this, TIMER_TRACKING)\r\n            ibFullScreen.setOnClickListener {\r\n                startActivityForResult(buildIntent(this, resumePosition, resumeWindow, resources.getString(R.string.my_lesson_title), mSourceMedia), ConstantUtils.REQUEST_FULLSCREEN_VIDEO)\r\n            }\r\n        } catch (er: Exception) {\r\n            println(er.printStackTrace())\r\n        }\r\n    }",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3209/comments",
    "author": "sunry2ntkh",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2017-08-25T08:10:44Z",
        "body": "I'm not exactly sure if I understand your question correctly.\r\n\r\nWhat I think you are doing is to use a ConcatenatingMediaSource with 5 items. Then, you play this playlist up to item 3. And then, you like to set up a new playlist with 3 items. \r\nYour method to set up the player looks fine (and I think it's a copy of our demo app code). \r\nI'm not sure what you mean by \"can't duplicate position play\". Could you rephrase the question?"
      },
      {
        "user": "sunry2ntkh",
        "created_at": "2017-08-25T08:15:31Z",
        "body": "@tonihei Thank you for your answer! now I am already find the solution with that problem, It is error with the exoplayer initailize singleton pattern after that it not create new initialize it "
      }
    ]
  },
  {
    "number": 3207,
    "title": "Is video seeking working in Exoplayer v1 with live smoothstreaming ?",
    "created_at": "2017-08-24T16:44:17Z",
    "closed_at": "2017-08-24T16:54:09Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3207",
    "body": "Hello,\r\n\r\nIs Exoplayer v1 live video seeking working or do I have to upgrade to Exoplayer latest version? \r\nI've tested Exoplayer latest version demo and seeking in live video streams is working, but i would like to know if there is option to make Exoplayer v1 working, because migration is hard at this point.\r\n\r\nI am using PlayerControl.seekTo method but is not working in live streams, it is only working on VOD streams.\r\n\r\nMany thanks!\r\nJordi",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3207/comments",
    "author": "idroji5",
    "comments": [
      {
        "user": "AquilesCanta",
        "created_at": "2017-08-24T16:54:09Z",
        "body": "At this point we are only backporting bugfixes to V1, so unfortunately migration to V2 is the only option to get live seeking."
      },
      {
        "user": "idroji5",
        "created_at": "2017-08-24T16:59:08Z",
        "body": "Thanks, for your quick feedback"
      }
    ]
  },
  {
    "number": 3205,
    "title": "ExoPlayer.getDuration() doesn't work after preparing a DynamicConcatenatedMediaSource",
    "created_at": "2017-08-24T08:21:47Z",
    "closed_at": "2017-09-19T10:06:18Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3205",
    "body": "getDuration() returns TIME_UNSET until setPlayWhenReady(true) is called even when the first window is a fixed size. The various seekTo() methods similarly don't work even when the first window should be seekable. Suspect this is related to the use of DeferredTimeline.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3205/comments",
    "author": "keyboardr",
    "comments": [
      {
        "user": "tonihei",
        "created_at": "2017-08-24T10:37:41Z",
        "body": "Thanks for using a new issue :)\r\n\r\nYou're right that getDuration() will return TIME_UNSET first when the actual duration is not available yet. However, I suspect you get a second timeline update (listener.onTimelineChanged) soon after where everything is set correctly. setPlayWhenReady(true) shouldn't have any influence on this. Maybe that's just a coincidence because you call it soon after player.prepare(mediaSource)?\r\n\r\nAs further explanation: This behaviour is caused by the DeferredTimeline class you have mentioned (although you shouldn't bother about this one as it is internal only) and ensures that our timeline mirrors the playlist immediately even though we don't have all the information to play the media yet. \r\n\r\n\r\n"
      }
    ]
  },
  {
    "number": 3196,
    "title": "Widevine L1 audio cannot be played.",
    "created_at": "2017-08-21T03:50:36Z",
    "closed_at": "2017-08-21T08:26:14Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3196",
    "body": "Hi All, \r\n   White we test Exoplayer with customer asset, we found the Exoplayer cannot play L1 audio stream.\r\nThe logcat will show below. Could you show up what kind of this error and possible root cause ?\r\n\r\n08-17 15:25:15.915  5122 18201 E ExoPlayerImplInternal: Renderer error.\r\n08-17 15:25:15.915  5122 18201 E ExoPlayerImplInternal: com.google.android.exoplayer2.ExoPlaybackException\r\n08-17 15:25:15.915  5122 18201 E ExoPlayerImplInternal:         at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.feedInputBuffer(MediaCodecRenderer.java:708)\r\n08-17 15:25:15.915  5122 18201 E ExoPlayerImplInternal:         at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.render(MediaCodecRenderer.java:511)\r\n08-17 15:25:15.915  5122 18201 E ExoPlayerImplInternal:         at com.google.android.exoplayer2.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:479)\r\n08-17 15:25:15.915  5122 18201 E ExoPlayerImplInternal:         at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:308)\r\n08-17 15:25:15.915  5122 18201 E ExoPlayerImplInternal:         at android.os.Handler.dispatchMessage(Handler.java:98)\r\n08-17 15:25:15.915  5122 18201 E ExoPlayerImplInternal:         at android.os.Looper.loop(Looper.java:148)\r\n08-17 15:25:15.915  5122 18201 E ExoPlayerImplInternal:         at android.os.HandlerThread.run(HandlerThread.java:61)\r\n08-17 15:25:15.915  5122 18201 E ExoPlayerImplInternal: Caused by: android.media.MediaCodec$CryptoException: Unknown Error\r\n08-17 15:25:15.915  5122 18201 E ExoPlayerImplInternal:         at android.media.MediaCodec.native_queueSecureInputBuffer(Native Method)\r\n08-17 15:25:15.915  5122 18201 E ExoPlayerImplInternal:         at android.media.MediaCodec.queueSecureInputBuffer(MediaCodec.java:2292)\r\n08-17 15:25:15.915  5122 18201 E ExoPlayerImplInternal:         at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.feedInputBuffer(MediaCodecRenderer.java:699)\r\n08-17 15:25:15.915  5122 18201 E ExoPlayerImplInternal:         ... 6 more\r\n08-17 15:25:15.916  3639 18216 I OmxComponent: OMX_CommandStateSet 705 Cmd 0 nParam1 0x2\r\n08-17 15:25:15.916  3639 18216 I OmxComponent: STATE_SET:   OMX_StateExecuting => OMX_StateIdle : OMX.amlogic.avc.decoder.awesome.secure\r\n08-17 15:25:15.916  3639 18216 I OmxComponent: OMX.amlogic.avc.decoder.awesome.secure: flush input\r\n08-17 15:25:15.916  3639 18216 V AmlogicVideoDecoderAwesome: flushInput:490 >\r\n08-17 15:25:15.916  3639 18216 V OMX_WorkerPeer: hardware/amlogic/omx/omx_framework/WorkerPeer.cpp:flushInput:56 --------------------\r\n08-17 15:25:15.916  3639 18216 V AmlogicVideoDecoderAwesome: pause:198 >\r\n08-17 15:25:15.923  3639 18216 V AmlogicVideoDecoderAwesome: reset:238 >\r\n08-17 15:25:15.923  3639 18216 D AmlogicVideoDecoderAwesome: reset_1\r\n08-17 15:25:15.927  5122  5122 E EventLogger: playerFailed [4.29]\r\n\r\n\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3196/comments",
    "author": "rush0825",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-08-21T08:26:14Z",
        "body": "I don't think any Android devices support \"L1 audio\" at this point in time. So I don't think you should be requiring a secure output path in your license policy for audio."
      },
      {
        "user": "rush0825",
        "created_at": "2017-08-22T09:23:25Z",
        "body": "Could it possible to post the right L1 policy to reference ?\r\nBelow is our customer policy, is it right ?\r\n```javascript\r\n [{ \"track_type\": \"UHD2\",\r\n \"security_level\": 5,\r\n \"required_output_protection\": {\"hdcp\":\r\n \"HDCP_NONE\" }\r\n },\r\n { \"track_type\": \"UHD1\",\r\n \"security_level\": 5,\r\n \"required_output_protection\": {\"hdcp\":\r\n \"HDCP_NONE\" }\r\n },{ \"track_type\": \"HD\",\r\n \"security_level\": 5,\r\n \"required_output_protection\": {\"hdcp\":\r\n \"HDCP_NONE\" }\r\n },\r\n { \"track_type\": \"SD\",\r\n \"security_level\": 5\r\n },\r\n { \"track_type\": \"AUDIO\",\r\n \"security_level\": 1\r\n }]\r\n```"
      },
      {
        "user": "ojw28",
        "created_at": "2017-08-22T11:52:50Z",
        "body": "If you are a Widevine partner or have any contacts at Widevine you should reach out to them directly. If not, ping this again and I'll ask someone from Widevine to take a look."
      }
    ]
  },
  {
    "number": 3186,
    "title": "Performance issues with BT.709 color space",
    "created_at": "2017-08-17T14:16:38Z",
    "closed_at": "2017-09-04T16:44:13Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3186",
    "body": "### Issue description\r\nWe have a performance problem that arises with high bitrate H.264 Widevine-protected DASH content in combination with color space BT.709. On some phones this combination results in very choppy, borderline unwatchable videos. Converting the video to YUV420, while keeping the bitrate and other settings, provides smooth playback on the affected phones.\r\n\r\nOur hope is that there is a way of improving the other performance other than converting the videos, as that would take up a lot of time and storage on our part.\r\n\r\n### Reproduction steps\r\nThis can be reproduced by playing one of our media files on one of the affected phones.\r\n\r\n### Link to test content\r\nTest content mailed to dev.exoplayer@gmail.com.\r\n\r\n### Version of ExoPlayer being used\r\n2.4.0\r\n\r\n### Device(s) and version(s) of Android being used\r\nSeveral devices reported by users, but the ones we have on hand are:\r\nSamsung Galaxy A5 (2017) (Android 6.0.1)\r\nSony Experia Z5 Compact (Android 7.1)\r\n\r\n### A full bug report captured from the device\r\nBug report mailed to dev.exoplayer@gmail.com.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3186/comments",
    "author": "danha306",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-08-17T15:25:11Z",
        "body": "It seems unlikely we'd be able to do anything about this. The performance is probably in the decoder or underlying graphics pipeline in the platform."
      },
      {
        "user": "danha306",
        "created_at": "2017-08-17T15:31:25Z",
        "body": "That's pretty much in line with what we thought, but we figured we might as well ask in case there was something obvious that we had missed. Thank you for a quick response."
      }
    ]
  },
  {
    "number": 3179,
    "title": "how to implement tap to play in exoplayer",
    "created_at": "2017-08-16T13:09:40Z",
    "closed_at": "2017-08-16T13:11:50Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3179",
    "body": "This library very fine helpful to me but i want try from many time to implement tap top play in recycle view but not get proper output is it possible to implement to tap to play here in recycle view ?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3179/comments",
    "author": "mehulTank",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-08-16T13:11:50Z",
        "body": "ExoPlayer provides a method to play (e.g. `setPlayWhenReady(true)`. How you wire that up to UI is not really an ExoPlayer question, so I'd suggest you ask on StackOverflow.\r\n\r\n"
      }
    ]
  },
  {
    "number": 3177,
    "title": "skipping 10 sec forward of backward",
    "created_at": "2017-08-16T07:55:07Z",
    "closed_at": "2017-08-16T09:29:11Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3177",
    "body": "First of all I want to say sorry if this is duplicate question, I couldn't find the same or similar question.\r\n\r\nQuestion:\r\nIs there an option in exoplayer that allows skipping 10 seconds forward or backward? This feature is something like on YouTube when you press right or left arrow( J or L keys).\r\n\r\nThanks",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3177/comments",
    "author": "lazarvgd",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-08-16T08:00:55Z",
        "body": "`player.seekTo(player.getCurrentPosition() + 10000)` would seek forward 10 seconds (similar to seek backward)?"
      },
      {
        "user": "lazarvgd",
        "created_at": "2017-08-16T09:29:11Z",
        "body": "Thank you very much sir! :+1: "
      }
    ]
  },
  {
    "number": 3130,
    "title": "Exception when playing a corrupted Mp4 stream",
    "created_at": "2017-08-02T14:20:16Z",
    "closed_at": "2017-08-07T13:00:59Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3130",
    "body": "### Issue description\r\nExpolayer generated an exception on trying to play a corrupt mp4 stream. \r\n\r\nWhat we managed to find out before we lost the corrupted stream is that the corrupted stream somehow generates a state in which the mp4 extractor readAtomPayload method will call  input.skipFully with an atomPayloadSize of -8.  This in the end causes an exeception on the systemArrayCopy as it's source is set to -8. We traced back this was caused by the atomSize being 0 and atomHeaderBytesRead being 8.  \r\n\r\nFrom source we think easiest robustness enhancement around this would be  to do a check on the atomSize  as read in the readAtomHeader and return false which then should indicate an end of stream in case the size is invalid. We are however not sure though what the exact valid ranges should be for this mp4 atomSize . Is this minimum of 8 as expected by the (readAtomPayload )  implementation or is it even bigger by mp4 spec ?\r\n\r\n### Reproduction steps\r\nPlay the corrupted stream\r\n\r\n### Link to test content\r\nWe no longer have the corrupted stream sequence on which the original issue occurs\r\n\r\n### Version of ExoPlayer being used\r\n1.5.16\r\n\r\n### Device(s) and version(s) of Android being used\r\nCustom android 4.3 based device\r\n\r\n### A full bug report captured from the device\r\n\r\n4:19.119  1754  1777 E LoadTask: Unexpected exception loading stream\r\n08-02 12:54:19.119  1754  1777 E LoadTask: java.lang.ArrayIndexOutOfBoundsException: src.length=8192 srcPos=-8 dst.length=8192 dstPos=0 length=8\r\n08-02 12:54:19.119  1754  1777 E LoadTask:      at java.lang.System.arraycopy(Native Method)\r\n08-02 12:54:19.119  1754  1777 E LoadTask:      at com.google.android.exoplayer.extractor.DefaultExtractorInput.updatePeekBuffer(DefaultExtractorInput.java:213)\r\n08-02 12:54:19.119  1754  1777 E LoadTask:      at com.google.android.exoplayer.extractor.DefaultExtractorInput.skipFromPeekBuffer(DefaultExtractorInput.java:183)\r\n08-02 12:54:19.119  1754  1777 E LoadTask:      at com.google.android.exoplayer.extractor.DefaultExtractorInput.skipFully(DefaultExtractorInput.java:92)\r\n08-02 12:54:19.119  1754  1777 E LoadTask:      at com.google.android.exoplayer.extractor.DefaultExtractorInput.skipFully(DefaultExtractorInput.java:103)\r\n08-02 12:54:19.119  1754  1777 E LoadTask:      at com.google.android.exoplayer.extractor.mp4.Mp4Extractor.readAtomPayload(Mp4Extractor.java:240)\r\n08-02 12:54:19.119  1754  1777 E LoadTask:      at com.google.android.exoplayer.extractor.mp4.Mp4Extractor.read(Mp4Extractor.java:130)\r\n08-02 12:54:19.119  1754  1777 E LoadTask:      at com.google.android.exoplayer.extractor.ExtractorSampleSource$ExtractingLoadable.load(ExtractorSampleSource.java:835)\r\n08-02 12:54:19.119  1754  1777 E LoadTask:      at com.google.android.exoplayer.upstream.Loader$LoadTask.run(Loader.java:222)\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3130/comments",
    "author": "dbedev",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-08-02T14:24:05Z",
        "body": "What's wrong with the existing failure mode?"
      },
      {
        "user": "dbedev",
        "created_at": "2017-08-03T09:37:54Z",
        "body": "Not sure what would be considered right/wrong on this topic. I just started reading up on the failure handling for Exoplayer. What is the intended behavior ? Which kind of issues does the libary expect the app/ player level  to handle and which kind of issues will the library handle by itself ? And what level of information does exoplayer intend to give about encountered failures ?\r\n\r\nIf I read the code the for the \"Unexpected exception loading stream\" print  statement in Loader.java the the code comment states \"This should never happen, but handle it anyway.\"  \r\n\r\nAccording to the log it eventually does report a loadError towards the app, so will check on our app why it does not exit the playback because of this. \r\n\r\nFour our code we typically deal with java.lang.ArrayIndexOutOfBoundsException as being a programming error hence we would not want it to occur at all for our code.  So I was premature in assuming we should just avoid the exception. I guess from lib perspective it would be more generic to have some form of error reported back as it does now.  \r\n\r\nNot sure if it is very usefull to just have a loadError reported for both data validity as data availability issues though. \r\n\r\nAs the lib/player does seem to recover I agree  it seems more of a nice to have enhancement on error reporting than a really a bug.\r\n"
      },
      {
        "user": "ojw28",
        "created_at": "2017-08-03T10:15:22Z",
        "body": "The intended behavior is that playback fails and an error is propagated to the application (by the player invoking `EventListener.onPlayerError` on any registered listeners). The error will be an `ExoPlaybackException` and the `type` field will be set to `TYPE_SOURCE`, I think. This tells you the error was in loading/parsing as opposed to anything when rendering the media.\r\n\r\nCalling `getSourceException` on the exception allows you to get the underlying exception, which will be the `ArrayIndexOutOfBoundsException`. This isn't particularly helpful, but unless you think your network stack throws runtime exceptions, you can probably reasonably accurately state that whenever the cause is a runtime exception, it's probably going to be a parsing failure, which is indicative of malformed media."
      },
      {
        "user": "ojw28",
        "created_at": "2017-08-03T10:16:54Z",
        "body": "As a more fundamental question: How does you end up trying to play a corrupt MP4 in the first place? In any case where you control the content, you should never end up in such a position. If the user is sideloading content then you can't guarantee avoidance, but in this case showing a generic error for failures such as this seems adequate."
      },
      {
        "user": "dbedev",
        "created_at": "2017-08-07T12:52:16Z",
        "body": "Thank you for the information, will look what we can implement in our app part by adding some logic to the listener.\r\n\r\n\"Control the content\" still has many intermediate steps in our case so not sure if it does not fall in the side load category. In my experience so far a corrupt/ miss formed stream somehow seem to slip through eventually.  So would not consider it to be completely avoidable. \r\n\r\nIn this case for example the prime root suspect is the IT managed update that got executed over the weekend and most likely messed up one of the automated upload jobs that should normally take care of streams being correct. \r\n\r\nFor us the point is more that this kind of issue always gets pushed to the player device. Hence the question on how to accurately report the issue to user/tester from an app perspective as there is indeed nothing wrong at the player side in this case.\r\n\r\nAs such I still think it is a nice to have enhancement to get the library itself to tell the app what went wrong in stead of having to translate the encountered low level exception in the app.\r\n\r\n\r\n "
      },
      {
        "user": "ojw28",
        "created_at": "2017-08-07T13:00:59Z",
        "body": "It's not particularly feasible for the client to detect whether a stream is corrupt (and how) in the general case. It would be quite expensive and involve adding loads of sanity checks throughout the code base. This isn't a good trade-off. This is particularly true if the developer controls the serving-side. Running these kind of checks all of the time on every client just in case someone misconfigures something on the serving side doesn't seem like an appropriate trade-off, when there exists the alternative of ensuring there are sufficient serving side checks/tests in place to prevent this from happening.\r\n\r\nSo whilst I agree we should never crash when encountering malformed media, explicit stream sanity checking during playback and providing precise reasons for failure just doesn't seem like a good idea. Closing as a result; I think the existing exception gets you pretty close to being able to determine its a media issue in any case."
      }
    ]
  },
  {
    "number": 3124,
    "title": "Question: Is there a same function in v2 for onDownstreamFormatChanged(v1)",
    "created_at": "2017-08-01T03:08:45Z",
    "closed_at": "2017-08-02T02:46:00Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3124",
    "body": "I am upgrading a video app from v1 to v2,  there is a third party logic added in the method onDownstreamFormatChanged as below \r\nfor example in the DemoPlayer in v1:\r\n```\r\n@Override\r\n\tpublic void onDownstreamFormatChanged(int sourceId, Format format, int trigger, long mediaTimeMs) {\r\n\t\tif (infoListener == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (sourceId == TYPE_VIDEO) {\r\n\t\t\tvideoBitrate = format.bitrate;\r\n\t\t\tvideoFormat = format;\r\n\t\t\tinfoListener.onVideoFormatEnabled(format, trigger, mediaTimeMs);\r\n\t\t} else if (sourceId == TYPE_AUDIO) {\r\n\t\t\taudioBitrate = format.bitrate;\r\n\t\t\tinfoListener.onAudioFormatEnabled(format, trigger, mediaTimeMs);\r\n\t\t}\r\n\r\n\t\tif (videoBitrate > 0 && audioBitrate > 0) {\r\n\t\t\tAnalyticsManager.onBitrateChange(((audioBitrate + videoBitrate) / 1000));\r\n\t\t}\r\n\t}\r\n```\r\nas you can see there is a piece of code  AnalyticsManager.onBitrateChange(((audioBitrate + videoBitrate) / 1000));   is there function that i can add this code in the exoplayer v2?\r\n\r\nThanks in advance.\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3124/comments",
    "author": "jiafei1986",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-08-01T11:28:16Z",
        "body": "There is still an `onDownstreamFormatChanged` in V2 (and it's used in `EventLogger` in the demo app)."
      },
      {
        "user": "jiafei1986",
        "created_at": "2017-08-02T02:46:00Z",
        "body": "@ojw28 thank you, just found out it ."
      }
    ]
  },
  {
    "number": 3122,
    "title": "sync audio & video to common PCR clock",
    "created_at": "2017-07-31T10:14:14Z",
    "closed_at": "2017-08-07T16:30:14Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3122",
    "body": "I'm using ExoPlayer v1.5.11 and in current implementation of av sync, video follows audio and audio is free flow.\r\nI want to implement an avsync logic in ExoPlayer for broadcast usecase in which both audio & video follows a common PCR clock \r\n(say system clock). I have a restriction that i cannot drop audio frames as it would create audible artifacts.\r\n\r\nHere's what i have understood from code so far. ExoPlayer uses updatePositionUs() to update the media position & elapsedRealTimeUs parameters \r\nand passes these to the renderers via doSomeWork(). Audio pushes its frames to audioTrack which accumulates upto 32KB of audio frames and based \r\non audio position and some calculated delay video renders or drops the frames. Here audio has no inbuilt notion of timing. \r\n\r\nI'm having problem implementing a logic which will sync audio with system clock based on latency & PTS (let for the time being video follow audio)\r\n, it is not able to calculate correct delay after which i should call handlebuffer().\r\n\r\nSuppose a audio buffer comes into processOutputBuffer() of MediaCodecAudioTrackRenderer() with PTS 168922, and after calculations it finds out that \r\nits too early wrt elapsedRealtimeUs. So i don't send this frame to audiotrack yet and return. Now problem is that when it agains returns to same processOutputBuffer() second time,\r\nupdatePositionUs() in ExoplayerImpInternal.java has already been called and now i gain has a new elapsedRealtimeUs value. So in a way audio is losing its sense of timing.\r\n\r\nCan anyone guide me how to do it? Do i need to make 2 seperate audio & video clocks which will sync to common clock.\r\nAlso how to handle when it goes out of sync say after frame drop.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3122/comments",
    "author": "mansoorfarooqui",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-07-31T19:43:18Z",
        "body": "It's difficult to see how you can both not drop any audio and perform a re-synchronization at the same time. The only way I could see that working is by changing the playback speed temporarily to achieve re-synchronization (which is something you could look at doing).\r\n\r\nHow accurate does the synchronization really need to be?"
      },
      {
        "user": "mansoorfarooqui",
        "created_at": "2017-08-01T04:12:30Z",
        "body": "thanks for the prompt reply.\r\nI was also thinking on similar lines, when none of audio or video is master, we will have to drop frames to resync. I would consider changing playback speed, that sounds good.\r\n\r\nAlso can you confirm whether going with two internal clocks, one for audio & one for video is the right approach? Regarding accuracy, i should be able to play DVB TS streams or live TV without any noticible delay between audio & video. I'm in process of finalizing a strategy so it's essential for me to make sure i'm choosing the right path that why i need your expert help.\r\n\r\nIf you feel there is some better strategy, let me know i'm open to it as well."
      },
      {
        "user": "mansoorfarooqui",
        "created_at": "2017-08-03T17:42:54Z",
        "body": "Hi,\r\n\r\nI have been able to sync audio to PCR clock but i am not sure when should i render the first video frame. When video is using audio media positionUs, which is updated from android.media.audioTrack it's syncing well. But when i try to decouple this, even after considering audio track latency of 79ms, video is ahead of audio by few milli seconds.\r\nCan you please tell me how to render 1st video frame so that it's played in sync with audio?"
      },
      {
        "user": "ojw28",
        "created_at": "2017-08-04T07:17:43Z",
        "body": "I really don't understand enough about what your use case is to provide sensible guidance. What exactly are you trying to play (is there one stream, or two), how many players are you using (one or two), why do you need to sync against PCR, and what is the clock \"common\" with? It's quite unclear from the current description. Thanks."
      },
      {
        "user": "mansoorfarooqui",
        "created_at": "2017-08-07T06:01:31Z",
        "body": "Okay let me explain the strategy again and then you can comment whether that is a good idea or not.\r\n\r\nI'm using ExoPlayer in broadcast usecase to play AV streams. In current implementation, audio is free run and video follows audio using PositionUs but this is not suitable for broadcast. We want both audio & video to follow a common PCR clock [you can consider a system clock as reference for time being] and sync to this clock only.\r\n\r\nWhat i have done is made audio follow system clock instead of free run. Now i need to add some logic in video track renderer so that audio & video are in sync but not using PositionUs of audio track. It is the way it should be done or we will have to sync video to audio using this media position (positionUs) parameter only?"
      },
      {
        "user": "ojw28",
        "created_at": "2017-08-07T12:53:43Z",
        "body": "If you've made audio follow PCR somehow, then the audio renderer should be reporting the position correctly, and video should be following that correct position. You shouldn't need to make any changes to the video renderer. If the audio renderer is mis-reporting its position then you should fix that, after which you'd have `PCR <-- [follows] -- Audio <-- [follows] -- Video`."
      },
      {
        "user": "mansoorfarooqui",
        "created_at": "2017-08-07T15:45:20Z",
        "body": "yea after making audio follow PCR, it reports correct positionUs. I have tested on many streams and current implementation is working fine (where video is using PositionUs from audio track). I would like to know whether it is even possible to make video also independent (not following audio but PCR).\r\n\r\nI get stuck here, when i try to remove dependency of video on positionUs (audio), it goes out of sync. Even after considering audiotrack latency of around 79msec, i couldn't match audio & video sync as i don't exactly know when 1st frame of audio is actually rendered (coz i now don't have positionUs anymore). I hope you get my point.\r\nIf you feel doing above is not feasible then i will go with what i have already achieved and fine tune it, else please suggest how to do it.\r\n\r\nAlso, I get lost when i try to find from where exactly positionUs is fetched. It is calculated & updated based on getPosition() calls from ExoplayerImpInternal.java --> AudioTrack.java --> android.media.audioTrack --> all the way to AudioTrack.cpp in which it refers to proxy->getPosition() and this proxy has been created using track which was created by AudioFlinger().\r\n\r\nAfter this i have not been able to find where proxy->getPosition() goes. Any pointers would be helpful.\r\n"
      },
      {
        "user": "ojw28",
        "created_at": "2017-08-07T16:30:14Z",
        "body": "If audio is following PCR, and video is following audio, then video is already following PCR. What is the benefit of trying to have video follow PCR directly? You could probably inject a custom Renderer whose sole purpose is to act as a clock and have both audio and video renderers follow that (you'd need to make the audio renderer no longer implement MediaClock). It's unclear what the benefit is though, since it seems more convoluted and is otherwise equivalent. I think the way you're doing things currently is the best way.\r\n\r\nI think the audio timestamp code path that you're following probably disappears into proprietary SoC vendor code, which is typically proprietary / not open source. Which is probably why you can't find where it goes (I didn't confirm this theory, but it seems highly likely)."
      },
      {
        "user": "mansoorfarooqui",
        "created_at": "2017-08-07T18:47:12Z",
        "body": "Thanks for the help. Much appreciate that."
      }
    ]
  },
  {
    "number": 3118,
    "title": "how to use vp9 extension?",
    "created_at": "2017-07-28T05:00:51Z",
    "closed_at": "2017-07-28T11:44:09Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3118",
    "body": "\r\nWhat is best way to use vp9 extension。As we know the `SimpleExoPlayerView` class only can manage `TextureView` and `SurfaceView`.But vp9 use `VpxVideoSurfaceView `. ",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3118/comments",
    "author": "linyongsheng",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2017-07-28T11:44:09Z",
        "body": "The vp9 extension can be used with a plain `SurfaceView` but it's likely to be less efficient than configuring it with a `VpxVideoSurfaceView`, as the color space conversion is done in software rather than using a GL shader. After following the instructions to compile the vp9 extension in its readme, rendering to a `SurfaceView` from `LibvpxVideoRenderer` should just work in the demo app (for samples set to prefer extension renderers).\r\n\r\n`SimpleExoPlayer` does not work with `VpxVideoSurfaceView`. There are two main differences to be aware of if you want to switch to `VpxVideoSurfaceView`. Firstly, rather than passing a surface with `C.MSG_SET_SURFACE`, you pass the `VpxVideoSurfaceView` with `LibvpxVideoRenderer.MSG_SET_OUTPUT_BUFFER_RENDERER`. Secondly the `Surface` passed to `VideoRendererEventListener.onRenderedFirstFrame` will be null."
      }
    ]
  },
  {
    "number": 3102,
    "title": "MediaSource.releaseSource NPE",
    "created_at": "2017-07-26T10:14:57Z",
    "closed_at": "2017-07-31T13:40:42Z",
    "labels": [
      "question",
      "wont fix: infeasible"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3102",
    "body": "*** ISSUES THAT IGNORE THIS TEMPLATE WILL BE CLOSED WITHOUT INVESTIGATION ***\r\n\r\nBefore filing an issue:\r\n-----------------------\r\n1. I closed the wifi and release this player  2.Then open the wifi init player \r\n\r\n\r\nWhen reporting a bug:\r\n-----------------------\r\nAttempt to invoke interface method 'void com.google.android.exoplayer2.source.MediaSource.releaseSource()' on a null object reference\r\n07-26 18:03:21.132 8041-8574/com.abc.agency.teacher E/Tinker.UncaughtHandler: catch exception when loading tinker:java.lang.NullPointerException: Attempt to invoke interface method 'void com.google.android.exoplayer2.source.MediaSource.releaseSource()' on a null object reference\r\n                                                                                  at com.google.android.exoplayer2.source.ConcatenatingMediaSource.releaseSource(ConcatenatingMediaSource.java:103)\r\n                                                                                  at com.google.android.exoplayer2.ExoPlayerImplInternal.resetInternal(ExoPlayerImplInternal.java:724)\r\n                                                                                  at com.google.android.exoplayer2.ExoPlayerImplInternal.stopInternal(ExoPlayerImplInternal.java:684)\r\n\r\n### Issue description\r\nConcatenatingMediaSource release source thow NPE\r\n\r\n### Reproduction steps\r\nrelease player close wifi  and open wifi init player maybe  reappear\r\n\r\n### Version of ExoPlayer being used\r\n\r\ncompile 'com.google.android.exoplayer:exoplayer-core:r2.4.4'\r\n\r\n### Device(s) and version(s) of Android being used\r\nXiaomi 5\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3102/comments",
    "author": "zhaocheng19940105",
    "comments": [
      {
        "user": "zhaocheng19940105",
        "created_at": "2017-07-26T10:39:41Z",
        "body": "I think release player Need time to do synchronization problems "
      },
      {
        "user": "zhaocheng19940105",
        "created_at": "2017-07-26T10:40:15Z",
        "body": " for (int i = 0; i < mediaSources.length; i++) {\r\n      if (!duplicateFlags[i]) {\r\n        mediaSources[i].releaseSource();\r\n      }\r\n    }  \r\n this a npe in ConcatenatingMediaSource release"
      },
      {
        "user": "zhaocheng19940105",
        "created_at": "2017-07-26T10:43:33Z",
        "body": " ClippingMediaSource npe"
      },
      {
        "user": "ojw28",
        "created_at": "2017-07-31T13:40:42Z",
        "body": "I think this can only happen if you've passed null entries in the array of `MediaSource`s that you need to pass to the `ConcatenatingMediaSource` constructor. It's invalid to pass null entries, so you'll need to fix that in your code."
      }
    ]
  },
  {
    "number": 3095,
    "title": "Question: Disable the secure codec in exoplayer v2",
    "created_at": "2017-07-25T06:14:06Z",
    "closed_at": "2017-09-10T20:11:35Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3095",
    "body": "we are upgrading our app from exoplayer v1 to v2, we need to disable secure codec function in v1 for some device.  we can use the below code in v1.\r\nMediaCodecVideoTrackRenderer.setDisableSecureCodec();\r\n\r\nIs there a way that disables the secure codec in exoplayer v2.\r\nThanks.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3095/comments",
    "author": "jiafei1986",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-07-31T17:14:32Z",
        "body": "I don't think there was ever a setDisableSecureCodec method in ExoPlayer V1. Are you sure you didn't add it yourself (or alternatively, are you sure you're not using a non-official branch of ExoPlayer in which it was added)?\r\n\r\nIt's probably possible for you to achieve this functionality by implementing your own `MediaCodecSelector` and passing it to `MediaCodecVideoRenderer` via the constructor. You can implement your selector to return null from `getDecoderInfo` if `requiresSecureDecoder` is true, and call through to the default implementation otherwise. Does that achieve the desired result?"
      }
    ]
  },
  {
    "number": 3065,
    "title": "Change Subtitles Style",
    "created_at": "2017-07-14T13:19:49Z",
    "closed_at": "2017-07-16T07:11:56Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3065",
    "body": "am developing simple video player with vtt subtitles\r\nI want to change styles for captions by\r\n\r\n      private void configureSubtitleView() {\r\n        int defaultSubtitleColor = Color.argb(255, 218, 218, 218);\r\n        int outlineColor = Color.argb(255, 43, 43, 43);\r\n        Typeface subtitleTypeface = Typeface.createFromAsset(getAssets(), \"fonts/droid.ttf\");\r\n        CaptionStyleCompat style =\r\n                new CaptionStyleCompat(defaultSubtitleColor,\r\n                        Color.TRANSPARENT, Color.TRANSPARENT,\r\n                        CaptionStyleCompat.EDGE_TYPE_OUTLINE,\r\n                        outlineColor, subtitleTypeface);\r\n        subtitleLayout.setStyle(style);\r\n        subtitleLayout.setFractionalTextSize(SubtitleView.DEFAULT_TEXT_SIZE_FRACTION * fontScale);\r\n    }\r\n\r\nand call it in **onCreate** method, but nothing changed. is that an issue or I have missed something.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3065/comments",
    "author": "hawkiq",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-07-15T21:13:55Z",
        "body": "Does it help if you call `subtitleLayout.setApplyEmbeddedStyles(false)`?"
      },
      {
        "user": "hawkiq",
        "created_at": "2017-07-16T07:11:56Z",
        "body": "@ojw28 thanks for pointing me to disable default style which results to know that I have used SimpleExoPlayerView so to make changes to subtitles I must call\r\n\r\n     simpleExoPlayerView = (SimpleExoPlayerView) findViewById(R.id.PlayerView);\r\n     simpleExoPlayerView.getSubtitleView().setStyle(style);\r\n\r\nthanks."
      }
    ]
  },
  {
    "number": 3061,
    "title": "Question:How to set max bit rate in exoplayer v2",
    "created_at": "2017-07-13T15:52:23Z",
    "closed_at": "2017-07-14T02:24:03Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3061",
    "body": "I am now doing the video app of dash, there is a requirement to let the user choose video quality\r\nthere are 4 types (auto, high, medium,low),  the high, medium,low will be configed in the backend.\r\n\r\nI know there is a method in v1 DashRendererBuilder.setMaxBitrate(maxBitrate); but is there an easy way to set it in v2?\r\nThanks.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3061/comments",
    "author": "jiafei1986",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-07-13T16:36:58Z",
        "body": "We centralized everything to do with track selection in V2. Assuming you have a `DefaultTrackSelector` somewhere, you can set the maximum bitrate with:\r\n\r\n```\r\ntrackSelector.setParameters(\r\n    trackSelector.getParameters().withMaxVideoBitrate(maxBitrate));\r\n```\r\n\r\nYou should do this before calling `player.prepare` if you want this to affect the initial track selection."
      },
      {
        "user": "jiafei1986",
        "created_at": "2017-07-14T00:32:22Z",
        "body": "@ojw28 Thanks for your answer. so you mean it will not affect when the user changes the quality during the playback? is it a way to change it during playback?"
      },
      {
        "user": "jiafei1986",
        "created_at": "2017-07-14T02:24:03Z",
        "body": "@ojw28  I tested this method,  it also affects during playback, thank you very much. Great work!!!"
      },
      {
        "user": "jiafei1986",
        "created_at": "2017-07-29T01:13:10Z",
        "body": "@ojw28 when user select auto, what value should i set to this method?  is it 0? "
      },
      {
        "user": "ojw28",
        "created_at": "2017-07-31T17:35:13Z",
        "body": "Use `Integer.MAX_VALUE` :)."
      },
      {
        "user": "erenbakac",
        "created_at": "2017-10-12T13:15:59Z",
        "body": "Hi,\r\n\r\nHowever i set withMaxVideoBitrate value before player.prepare, player still changes video profiles to higher than i set. For example i set 600.000.  when i checked current video bitrate after i while i get 3.000.000.   \r\n\r\nThe stream has 500.000,900.000,1.500.000,3.000.000 video formats\r\n\r\n\r\n        int maxBitrate=600000;\r\n        player.seekToDefaultPosition();\r\n        trackSelector.getParameters().withMaxVideoBitrate(maxBitrate);\r\n        player.prepare(mediaSource, !haveResumePosition, false);\r\n\r\n"
      }
    ]
  },
  {
    "number": 3056,
    "title": "Question: how to switch on/off live edge in exoplayer v2",
    "created_at": "2017-07-13T06:09:18Z",
    "closed_at": "2017-07-31T23:44:57Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3056",
    "body": "I am doing a video app, There is a live stream for dash, and there is an option let the user watch live video or start over. for example, there is a match, the user can watch live or from the beginning.  in the exoplayer v1, there is parameter 'startAtLiveEdge' in class DashRendererBuilder that i can set.\r\nwhere can i set in exoplayer v2?\r\n\r\nThanks in advance! ",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3056/comments",
    "author": "jiafei1986",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-07-13T13:17:55Z",
        "body": "The player will default to the live edge, so I think you're only concerned with the case where the user wants to watch from the beginning. It should work to simply call `player.seekTo(0)` before preparing the player. Similarly, `player.seekToDefaultPosition()` will seek to the live edge. Both can be used before and during playback."
      }
    ]
  },
  {
    "number": 3052,
    "title": "Question: How to change loopcount using LoopMediaSource on the fly",
    "created_at": "2017-07-12T13:17:54Z",
    "closed_at": "2017-07-13T17:26:39Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3052",
    "body": "I'm currently using LoopingDataSource, Can I change the loop count while video is playing? \r\nFor example:\r\nThe initial loop count is set to 3, while the player is playing at the 2nd loop, I want to stop **looping play the video** , not stop the video immediately. That means after the 2nd loop, the player shouldn't proceed to the 3nd loop.\r\n  ",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3052/comments",
    "author": "michalliu",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-07-13T16:46:05Z",
        "body": "What's the actual use case? If you want repeat mode functionality that can be toggled on and off during playback, this is resolved in the `dev-v2` branch where there's a new `ExoPlayer.setRepeatMode` method. This will be the recommended way to control looping, except for fairly niche use cases, and will remove the need for you to use `LoopingMediaSource` if that's what you're trying to achieve."
      },
      {
        "user": "michalliu",
        "created_at": "2017-07-13T17:26:39Z",
        "body": "Thanks, setRepeatMode is exactly what I need. Hope the new version releasing soon."
      }
    ]
  },
  {
    "number": 3045,
    "title": "I can't set cookies for HLS stream, and server response 451 status code.",
    "created_at": "2017-07-10T19:55:13Z",
    "closed_at": "2017-07-13T10:56:06Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3045",
    "body": "Hello, I work with api which used cookies for auth to stream content, but I can't put this cookies to HLS stream, I found one method how I can do it, but it doesn't work for me.\r\nI added cookies to CookieStore.\r\n\r\nCan you help me handle this flow?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3045/comments",
    "author": "SvyatoslavLynda",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-07-10T21:39:43Z",
        "body": "You may just need to set a default cookie manager. PlayerActivity in the demo app has code that does this, so I'd suggest taking a look at that.\r\n\r\nBeyond that, there isn't sufficient information in this question for us to help. You'll have to properly describe how your authentication flow works if you require further assistance."
      },
      {
        "user": "SvyatoslavLynda",
        "created_at": "2017-07-11T06:12:19Z",
        "body": "Sorry my English is bad, but i try to describe my problem.\r\n\r\nYes I used default cookie manager for put my own cookies, but when I had try to play stream I had next \r\n```\r\nexception: E/ExoPlayerImplInternal: Source error.\r\n                                                                                           com.google.android.exoplayer2.upstream.HttpDataSource$InvalidResponseCodeException: Response code: 451\r\n                                                                                               at com.google.android.exoplayer2.ext.okhttp.OkHttpDataSource.open(OkHttpDataSource.java:165)\r\n                                                                                               at com.google.android.exoplayer2.upstream.DefaultDataSource.open(DefaultDataSource.java:123)\r\n                                                                                               at com.google.android.exoplayer2.upstream.DataSourceInputStream.checkOpened(DataSourceInputStream.java:102)\r\n                                                                                               at com.google.android.exoplayer2.upstream.DataSourceInputStream.open(DataSourceInputStream.java:65)\r\n                                                                                               at com.google.android.exoplayer2.upstream.ParsingLoadable.load(ParsingLoadable.java:114)\r\n                                                                                               at com.google.android.exoplayer2.upstream.Loader$LoadTask.run(Loader.java:295)\r\n                                                                                               at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\r\n                                                                                               at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\r\n                                                                                               at java.lang.Thread.run(Thread.java:818)\r\n```"
      },
      {
        "user": "ojw28",
        "created_at": "2017-07-11T11:12:17Z",
        "body": "It looks like you're using the okhttp extension. If you don't use that (i.e. use DefaultHttpDataSource), does it work in that case? I suspect okhttp uses a different cookie store somewhere else?\r\n\r\nIt's not possible to provide further guidance without a clear description of how your authentication flow works, how you're setting the cookies and so on. Saying you put your own cookies, without describing exactly how you're doing it, is not enough information. Thanks!"
      },
      {
        "user": "SvyatoslavLynda",
        "created_at": "2017-07-13T10:56:06Z",
        "body": "Sorry, problem has happened with server communicate."
      }
    ]
  },
  {
    "number": 3044,
    "title": "How do I implement a custom video renderer/decoder extension?",
    "created_at": "2017-07-10T19:25:53Z",
    "closed_at": "2017-07-31T23:45:18Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3044",
    "body": "### Issue description\r\nHi, I have a video decoder code that has a constructor and a function that receive an encoded frame and returns a decoded frame of yuv 420p format. I have a tester that runs my decoder on ubuntu and produces a raw video file using the decoder.\r\n \r\nI want to add my decoder as a custom decoder to Exoplayer. I understood that I have to write a class that implements the Renderer interface. Now there is not much documentation for this interface and it's not clear how to use it as a decoder. I looked at LibvpxVideoRenderer.java and MediaCodecRenderer as a reference. I see that they both use a function \"drainOutputBuffer\" that is not clear what's it purpose. \r\n I see that LibvpxVideoRenderer.java also has a function renderBuffer that is not clear to me as well what is it's purpose.\r\n\r\n### Version of ExoPlayer being used\r\nrelease-v2\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3044/comments",
    "author": "kamomil",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-07-10T21:51:47Z",
        "body": "Implementing a custom renderer is a hard thing to do. Looking at the VP9 extension is a good starting point. I'd suggest you start by taking a copy of the whole extension. Leave `LibvpxVideoRenderer` as it is, at least to start with, and see if you can replace just `VpxDecoder` and `VpxLibrary` with code that bridges onto the custom decoder you're trying to use. Provided you can do this, you shouldn't need to make many (or even any) changes to the `LibvpxVideoRenderer` class. If you get to the point where it's working, you can then go rename everything to make sense for whatever the decoder is that you're using :).\r\n\r\nWe'd be really interested to know if you manage to do this. If it turns out all parts of the VP9 extension are re-usable except for the decoder and library classes, we can look at promoting the shareable parts of that extension into the video package of the core library. For example `LibvpxVideoRenderer` would become `SimpleDecoderVideoRenderer`. We've done this already for audio, where we have a `SimpleDecoderAudioRenderer` that's used by three extensions. I think we've not done it for video only because we've only made one video extension, and so we've not been able to validate that the code is really is re-usable."
      }
    ]
  },
  {
    "number": 3042,
    "title": "Why don't DefaultBandwidthMeter's reported elapsedMs and EventLogger's reported loadDurationMs match? ",
    "created_at": "2017-07-10T12:37:28Z",
    "closed_at": "2017-07-10T12:45:10Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3042",
    "body": "Working in the demo application, I registered an event listener on the bandwidth meter, and then logged the provided elapsedMs values. I also logged the value of loadDurationMs provided to the event logger in onLoadCompleted.\r\n\r\nWhy don't these values match? The bandwidth listener's reported values seem to always be lower than those reported to the event logger, varying from about 50–100ms lower.\r\n\r\nHere's my event listener:\r\n\r\n```\r\npublic class BandwidthListener implements BandwidthMeter.EventListener {\r\n    private static final String TAG = \"BandwidthListener\";\r\n\r\n    @Override\r\n    public void onBandwidthSample(int elapsedMs, long bytes, long bitrate) {\r\n        Log.d(TAG, \"elapsedMs: \" + elapsedMs);\r\n        Log.d(TAG, \"bytes: \" + bytes);\r\n        Log.d(TAG, \"Sampled bitrate (Mb) = \" + (double) bytes * 8 / (double) elapsedMs / 1000);\r\n        Log.d(TAG, \"Estimated bitrate (Mb) = \" + bitrate / 1E6);\r\n    }\r\n}\r\n```\r\n\r\nThis is the code I have included in the EventLogger class:\r\n\r\n```\r\n  @Override\r\n  public void onLoadCompleted(DataSpec dataSpec, int dataType, int trackType, Format trackFormat,\r\n                              int trackSelectionReason, Object trackSelectionData, long mediaStartTimeMs,\r\n                              long mediaEndTimeMs, long elapsedRealtimeMs, long loadDurationMs, long bytesLoaded) {\r\n    Log.d(TAG, \"Load duration: \" + Long.toString(loadDurationMs));\r\n  }\r\n```",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3042/comments",
    "author": "emdash-ie",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-07-10T12:38:26Z",
        "body": "What type of media are you playing?"
      },
      {
        "user": "emdash-ie",
        "created_at": "2017-07-10T12:39:36Z",
        "body": "I'm playing the Google Play video in the YouTube DASH category in the demo app."
      },
      {
        "user": "ojw28",
        "created_at": "2017-07-10T12:45:10Z",
        "body": "For DASH streams audio and video are demuxed into separate streams, whose segments are downloaded in parallel. So if time is going from left to right in the diagram below, you might end up with loads overlapping as follows:\r\n```\r\n<---a1---><---a2---><---a3--->\r\n<------v1-------><-----v2---->\r\n```\r\nThe bandwidth estimate is updated whenever any load ends, so you'll get an updated estimate at the end of a1, then another at the end of v1 and so on. The period of time covered by the event at the end of v1 covers only the period of time between the end of a1 and the end of v1. Conversely, the `onLoadCompleted` corresponding to the end of v1 will report the period of time from the start of v1 to the end of v1.\r\n\r\nSo in short, you just shouldn't expect them to be the same."
      },
      {
        "user": "emdash-ie",
        "created_at": "2017-07-10T12:49:14Z",
        "body": "I see, thanks for the explanation – I appreciate it.\r\n\r\nI also have a DASH stream that only contains video tracks, and for that stream the times still differ by 10–40 ms. What's happening there?"
      },
      {
        "user": "ojw28",
        "created_at": "2017-07-10T12:53:28Z",
        "body": "I think that's a result of the thread that the timing is done on in the two cases. To start a load, the playback thread posts a message to a background thread that then does the load. When the load completes, the background thread posts a message back to the playback thread to say that it's finished. The timing for the bandwidth events is done directly on the background thread, where-as the timing for the loading events is done on the playback thread. So the playback thread timings are most likely slightly larger, since they also include the time taken to pass the two messages between the threads."
      },
      {
        "user": "emdash-ie",
        "created_at": "2017-07-10T12:55:17Z",
        "body": "I understand – thanks for your help."
      }
    ]
  },
  {
    "number": 3035,
    "title": "Update update Play Pause Button",
    "created_at": "2017-07-07T12:17:13Z",
    "closed_at": "2017-07-07T15:39:28Z",
    "labels": [
      "question",
      "wont fix: infeasible"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3035",
    "body": "play and pause button not updating when video finished...",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3035/comments",
    "author": "Kmphitech",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-07-07T15:39:28Z",
        "body": "This is working as intended. It doesn't really make sense to change to the \"play\" icon either, since playing something from the end doesn't do anything. The icon used reflects whether seeking back to a previous position in the media will cause playback to start or not. Note that you can toggle the icon whilst in the ended state and then seek backward, and the behavior you get is different to the behavior you get if you seek backward without toggling first.\r\n\r\nAs a final point, if you want different behavior it should be pretty easy to achieve by doing something in `onPlayerStateChanged` when the state changes to `STATE_ENDED`. Specifically, you can call `setPlayWhenReady(false)` to cause the icon to change. You could also call `seekToDefaultPosition()` to reset back to the start of the media, if that's where you'd want playback to resume from if the user toggles again."
      }
    ]
  },
  {
    "number": 3034,
    "title": "Seekbar",
    "created_at": "2017-07-07T10:27:16Z",
    "closed_at": "2017-07-10T08:58:00Z",
    "labels": [
      "question",
      "need more info"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3034",
    "body": "I want to change seekbar whenever i swipe the seekbar and whenever i use getduration() method the value of my audio file is negative.. so what can i do for get for total duration of my audio file?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3034/comments",
    "author": "Patelchir",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-07-07T17:20:39Z",
        "body": "I'm not sure what this question means. Please try rephrasing. Thanks!"
      },
      {
        "user": "Patelchir",
        "created_at": "2017-07-08T04:48:31Z",
        "body": "I want to say that i am streaming audio in exo player.. so how can i get streaming song total duration??? is it any method available in exoplayer?"
      },
      {
        "user": "AquilesCanta",
        "created_at": "2017-07-10T08:58:00Z",
        "body": "This is most likely a duplicate of #3004. If not, please update this thread with the file you are trying to play and explain exactly the expected and actual behavior."
      }
    ]
  },
  {
    "number": 3031,
    "title": "the input format and output format 's height and width are different",
    "created_at": "2017-07-06T01:58:32Z",
    "closed_at": "2017-07-19T20:20:30Z",
    "labels": [
      "question",
      "need more info"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3031",
    "body": "Hi team:\r\nI use ExoPlayer to play live stream in Tmall TV Box S1。The live stream is HTTP-FLV。I find some live stream the input format's width and height are different to output format's width and height。\r\nI change the code in class 'MediaCodecVideoRenderer' follow:\r\n```\r\nprotected void onOutputFormatChanged(MediaCodec codec, MediaFormat outputFormat) {\r\n    boolean hasCrop = outputFormat.containsKey(KEY_CROP_RIGHT)\r\n        && outputFormat.containsKey(KEY_CROP_LEFT) && outputFormat.containsKey(KEY_CROP_BOTTOM)\r\n        && outputFormat.containsKey(KEY_CROP_TOP);\r\n    currentWidth = hasCrop\r\n        ? outputFormat.getInteger(KEY_CROP_RIGHT) - outputFormat.getInteger(KEY_CROP_LEFT) + 1\r\n        : outputFormat.getInteger(MediaFormat.KEY_WIDTH);\r\n    currentHeight = hasCrop\r\n        ? outputFormat.getInteger(KEY_CROP_BOTTOM) - outputFormat.getInteger(KEY_CROP_TOP) + 1\r\n        : outputFormat.getInteger(MediaFormat.KEY_HEIGHT);\r\n    currentPixelWidthHeightRatio = pendingPixelWidthHeightRatio;\r\n    if (format != null) {\r\n        currentHeight = format.height;\r\n        currentWidth = format.width;\r\n    }\r\n.....\r\n}\r\n```\r\nis OK?\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3031/comments",
    "author": "linyongsheng",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-07-07T11:46:11Z",
        "body": "Is this an issue report, or is it a question? It's a little unclear what you're asking. If it's a question, can you try and phrase it more precisely, and provide a concrete example that we can use to reproduce what you're seeing? Thanks."
      },
      {
        "user": "ojw28",
        "created_at": "2017-07-19T20:20:30Z",
        "body": "Closing due to lack of information."
      }
    ]
  },
  {
    "number": 3029,
    "title": "External Subtitles VTT",
    "created_at": "2017-07-05T14:13:31Z",
    "closed_at": "2017-07-05T14:35:19Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3029",
    "body": "Hello,\r\nI've been using 2.4.3 version but I'm needing some examples to use multiple vtt external files in order to switch these subtitles. Are there some examples available to keep an eye on them?\r\n\r\nI tried to use MergingMediaSource but this only Works with 1 subtitle file.\r\n\r\nthnks!",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3029/comments",
    "author": "imarenco",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-07-05T14:35:19Z",
        "body": "You can merge as many subtitle files as you want using `MergingMediaSource`. Just pass an extra child `SingleSampleMediaSource` for each additional subtitle file. The `MergingMediaSource` constructor takes an arbitrarily large array..."
      },
      {
        "user": "imarenco",
        "created_at": "2017-07-05T14:37:50Z",
        "body": "Ok, but how I can switch the subtitles? @ojw28 "
      },
      {
        "user": "ojw28",
        "created_at": "2017-07-05T14:43:34Z",
        "body": "Through the normal track selection APIs (e.g. `DefaultTrackSelector`). If you create this kind of source in the demo app then there will be a button that allows you to select the subtitle, so that should serve as a pretty good starting point for you to work out how it's done."
      },
      {
        "user": "imarenco",
        "created_at": "2017-07-07T18:25:20Z",
        "body": "Hello I use DefaultTrackSelector but when I use getTrackGroup(C.TRACK_TYPE_TEXT) the size of group is 0. When I use the equal method with C.TRACK_TYPE_AUDIO the size of audio it's right.\r\n\r\nMappedTrackInfo mappedTrackInfo = trackSelector.getCurrentMappedTrackInfo();\r\nTrackGroupArray group =  mappedTrackInfo.getTrackGroups(C.TRACK_TYPE_TEXT);\r\n\r\nDo you know why that happens?\r\n@ojw28  @andrewlewis \r\n"
      },
      {
        "user": "ojw28",
        "created_at": "2017-07-10T08:47:31Z",
        "body": "`getTrackGroups` doens't expect a C.TRACK_TYPE constant as its argument, so that's definitely wrong. The Javadoc clearly indicates that you need to pass a renderer index. As per my previous response, you should spend some time looking at the demo app and use that as a starting point. "
      }
    ]
  },
  {
    "number": 3011,
    "title": "Error while compile VP9 extension",
    "created_at": "2017-07-02T08:41:04Z",
    "closed_at": "2017-07-05T10:44:19Z",
    "labels": [
      "question",
      "wont fix: infeasible"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3011",
    "body": "Hello,\r\n\r\nI have compile the VP9 but while I compiling it, I have received this error. Please tell me how to fix it:\r\n\r\n```\r\n~/ExoPlayer/extensions/vp9/src/main/jni/libvpx_android_configs/armeabi-v7a ~/ExoPlayer/extensions/vp9/src/main/jni\r\nbuild_android_configs: \r\nconfigure --target=armv7-android-gcc --sdk-path=/root/NDK --enable-neon --enable-neon-asm --disable-examples --disable-docs --enable-realtime-only --disable-vp8 --disable-vp9-encoder --disable-webm-io --disable-libyuv --disable-runtime-cpu-detect\r\n  disabling examples\r\n  disabling docs\r\n  enabling realtime_only\r\n  disabling vp8\r\n  disabling vp9_encoder\r\n  disabling webm_io\r\n  disabling libyuv\r\n  disabling runtime_cpu_detect\r\n  enabling vp9_decoder\r\nConfiguring for target 'armv7-android-gcc'\r\n  enabling armv7\r\nCreating makefiles for armv7-android-gcc libs\r\nCreating makefiles for armv7-android-gcc tools\r\n    [ASM CONVERSION] vpx_dsp/arm/idct16x16_add_neon.asm.S\r\n    [DEP] vpx_dsp/arm/idct16x16_add_neon.asm.S.d\r\n    [ASM CONVERSION] vpx_dsp/arm/idct16x16_1_add_neon.asm.S\r\n    [DEP] vpx_dsp/arm/idct16x16_1_add_neon.asm.S.d\r\n    [ASM CONVERSION] vpx_dsp/arm/idct8x8_add_neon.asm.S\r\n    [DEP] vpx_dsp/arm/idct8x8_add_neon.asm.S.d\r\n    [ASM CONVERSION] vpx_dsp/arm/idct8x8_1_add_neon.asm.S\r\n    [DEP] vpx_dsp/arm/idct8x8_1_add_neon.asm.S.d\r\n    [ASM CONVERSION] vpx_dsp/arm/idct4x4_add_neon.asm.S\r\n    [DEP] vpx_dsp/arm/idct4x4_add_neon.asm.S.d\r\n    [ASM CONVERSION] vpx_dsp/arm/idct4x4_1_add_neon.asm.S\r\n    [DEP] vpx_dsp/arm/idct4x4_1_add_neon.asm.S.d\r\n    [ASM CONVERSION] vpx_dsp/arm/idct_neon.asm.S\r\n    [DEP] vpx_dsp/arm/idct_neon.asm.S.d\r\n    [ASM CONVERSION] vpx_dsp/arm/save_reg_neon.asm.S\r\n    [DEP] vpx_dsp/arm/save_reg_neon.asm.S.d\r\n    [ASM CONVERSION] vpx_dsp/arm/loopfilter_4_neon.asm.S\r\n    [DEP] vpx_dsp/arm/loopfilter_4_neon.asm.S.d\r\n    [ASM CONVERSION] vpx_dsp/arm/loopfilter_8_neon.asm.S\r\n    [DEP] vpx_dsp/arm/loopfilter_8_neon.asm.S.d\r\n    [ASM CONVERSION] vpx_dsp/arm/loopfilter_16_neon.asm.S\r\n    [DEP] vpx_dsp/arm/loopfilter_16_neon.asm.S.d\r\n    [ASM CONVERSION] vpx_dsp/arm/vpx_convolve_avg_neon_asm.asm.S\r\n    [DEP] vpx_dsp/arm/vpx_convolve_avg_neon_asm.asm.S.d\r\n    [ASM CONVERSION] vpx_dsp/arm/vpx_convolve8_neon_asm.asm.S\r\n    [DEP] vpx_dsp/arm/vpx_convolve8_neon_asm.asm.S.d\r\n    [ASM CONVERSION] vpx_dsp/arm/vpx_convolve8_avg_neon_asm.asm.S\r\n    [DEP] vpx_dsp/arm/vpx_convolve8_avg_neon_asm.asm.S.d\r\n    [ASM CONVERSION] vpx_dsp/arm/vpx_convolve_copy_neon_asm.asm.S\r\n    [DEP] vpx_dsp/arm/vpx_convolve_copy_neon_asm.asm.S.d\r\n    [ASM CONVERSION] vpx_dsp/arm/intrapred_neon_asm.asm.S\r\n    [DEP] vpx_dsp/arm/intrapred_neon_asm.asm.S.d\r\n    [DEP] vpx_config.c.d\r\n    [DEP] vp9/decoder/vp9_dsubexp.c.d\r\n    [DEP] vp9/decoder/vp9_decoder.c.d\r\n    [DEP] vp9/decoder/vp9_dthread.c.d\r\n    [DEP] vp9/decoder/vp9_detokenize.c.d\r\n    [DEP] vp9/decoder/vp9_decodeframe.c.d\r\n    [DEP] vp9/decoder/vp9_decodemv.c.d\r\n    [DEP] vp9/vp9_dx_iface.c.d\r\n    [DEP] vp9/common/arm/neon/vp9_iht8x8_add_neon.c.d\r\n    [DEP] vp9/common/arm/neon/vp9_iht4x4_add_neon.c.d\r\n    [DEP] vp9/common/vp9_scan.c.d\r\n    [DEP] vp9/common/vp9_common_data.c.d\r\n    [DEP] vp9/common/vp9_reconintra.c.d\r\n    [DEP] vp9/common/vp9_reconinter.c.d\r\n    [DEP] vp9/common/vp9_quant_common.c.d\r\n    [DEP] vp9/common/vp9_mvref_common.c.d\r\n    [DEP] vp9/common/vp9_thread_common.c.d\r\n    [DEP] vp9/common/vp9_loopfilter.c.d\r\n    [DEP] vp9/common/vp9_tile_common.c.d\r\n    [DEP] vp9/common/vp9_seg_common.c.d\r\n    [DEP] vp9/common/vp9_scale.c.d\r\n    [DEP] vp9/common/vp9_rtcd.c.d\r\n    [DEP] vp9/common/vp9_pred_common.c.d\r\n    [DEP] vp9/common/vp9_filter.c.d\r\n    [DEP] vp9/common/vp9_idct.c.d\r\n    [DEP] vp9/common/vp9_frame_buffers.c.d\r\n    [DEP] vp9/common/vp9_entropymv.c.d\r\n    [DEP] vp9/common/vp9_entropymode.c.d\r\n    [DEP] vp9/common/vp9_entropy.c.d\r\n    [DEP] vp9/common/vp9_blockd.c.d\r\n    [DEP] vp9/common/vp9_alloccommon.c.d\r\n    [DEP] vpx_util/vpx_thread.c.d\r\n    [DEP] vpx_dsp/vpx_dsp_rtcd.c.d\r\n    [DEP] vpx_dsp/arm/idct32x32_add_neon.c.d\r\n    [DEP] vpx_dsp/arm/idct32x32_135_add_neon.c.d\r\n    [DEP] vpx_dsp/arm/idct32x32_34_add_neon.c.d\r\n    [DEP] vpx_dsp/arm/idct32x32_1_add_neon.c.d\r\n    [DEP] vpx_dsp/arm/idct16x16_neon.c.d\r\n    [DEP] vpx_dsp/inv_txfm.c.d\r\n    [DEP] vpx_dsp/loopfilter.c.d\r\n    [DEP] vpx_dsp/arm/vpx_convolve_neon.c.d\r\n    [DEP] vpx_dsp/vpx_convolve.c.d\r\n    [DEP] vpx_dsp/arm/intrapred_neon.c.d\r\n    [DEP] vpx_dsp/intrapred.c.d\r\n    [DEP] vpx_dsp/bitreader_buffer.c.d\r\n    [DEP] vpx_dsp/bitreader.c.d\r\n    [DEP] vpx_dsp/prob.c.d\r\n    [DEP] vpx_ports/arm_cpudetect.c.d\r\n    [DEP] vpx_scale/vpx_scale_rtcd.c.d\r\n    [DEP] vpx_scale/generic/gen_scalers.c.d\r\n    [DEP] vpx_scale/generic/yv12extend.c.d\r\n    [DEP] vpx_scale/generic/yv12config.c.d\r\n    [DEP] vpx_scale/generic/vpx_scale.c.d\r\n    [DEP] vpx_mem/vpx_mem.c.d\r\n    [DEP] vpx/src/vpx_image.c.d\r\n    [DEP] vpx/src/vpx_codec.c.d\r\n    [DEP] vpx/src/vpx_encoder.c.d\r\n    [DEP] vpx/src/vpx_decoder.c.d\r\n    [CREATE] libvpx_srcs.txt\r\n    [DEP] tools/tiny_ssim.c.d\r\nmake[1]: Nothing to be done for 'libvpx_srcs.txt'.\r\nmake: 'vpx_config.c' is up to date.\r\nmake: 'vpx_config.h' is up to date.\r\nmake: 'vpx_scale_rtcd.h' is up to date.\r\nMakefile:17: recipe for target 'vp8_rtcd.h' failed\r\nmake: 'vp9_rtcd.h' is up to date.\r\nmake: 'vpx_version.h' is up to date.\r\nmake: 'vpx_config.asm' is up to date.\r\nmake: 'vpx_dsp_rtcd.h' is up to date.\r\nmake: 'libvpx.ver' is up to date.\r\n~/ExoPlayer/extensions/vp9/src/main/jni\r\n~/ExoPlayer/extensions/vp9/src/main/jni/libvpx_android_configs/armeabi ~/ExoPlayer/extensions/vp9/src/main/jni\r\nbuild_android_configs: \r\nconfigure --target=armv7-android-gcc --sdk-path=/root/NDK --disable-neon --disable-neon-asm --disable-examples --disable-docs --enable-realtime-only --disable-vp8 --disable-vp9-encoder --disable-webm-io --disable-libyuv --disable-runtime-cpu-detect\r\n  disabling examples\r\n  disabling docs\r\n  enabling realtime_only\r\n  disabling vp8\r\n  disabling vp9_encoder\r\n  disabling webm_io\r\n  disabling libyuv\r\n  disabling runtime_cpu_detect\r\n  enabling vp9_decoder\r\nConfiguring for target 'armv7-android-gcc'\r\n  enabling armv7\r\nCreating makefiles for armv7-android-gcc libs\r\nCreating makefiles for armv7-android-gcc tools\r\n    [DEP] vpx_config.c.d\r\n    [DEP] vp9/decoder/vp9_dsubexp.c.d\r\n    [DEP] vp9/decoder/vp9_decoder.c.d\r\n    [DEP] vp9/decoder/vp9_dthread.c.d\r\n    [DEP] vp9/decoder/vp9_detokenize.c.d\r\n    [DEP] vp9/decoder/vp9_decodeframe.c.d\r\n    [DEP] vp9/decoder/vp9_decodemv.c.d\r\n    [DEP] vp9/vp9_dx_iface.c.d\r\n    [DEP] vp9/common/vp9_scan.c.d\r\n    [DEP] vp9/common/vp9_common_data.c.d\r\n    [DEP] vp9/common/vp9_reconintra.c.d\r\n    [DEP] vp9/common/vp9_reconinter.c.d\r\n    [DEP] vp9/common/vp9_quant_common.c.d\r\n    [DEP] vp9/common/vp9_mvref_common.c.d\r\n    [DEP] vp9/common/vp9_thread_common.c.d\r\n    [DEP] vp9/common/vp9_loopfilter.c.d\r\n    [DEP] vp9/common/vp9_tile_common.c.d\r\n    [DEP] vp9/common/vp9_seg_common.c.d\r\n    [DEP] vp9/common/vp9_scale.c.d\r\n    [DEP] vp9/common/vp9_rtcd.c.d\r\n    [DEP] vp9/common/vp9_pred_common.c.d\r\n    [DEP] vp9/common/vp9_filter.c.d\r\n    [DEP] vp9/common/vp9_idct.c.d\r\n    [DEP] vp9/common/vp9_frame_buffers.c.d\r\n    [DEP] vp9/common/vp9_entropymv.c.d\r\n    [DEP] vp9/common/vp9_entropymode.c.d\r\n    [DEP] vp9/common/vp9_entropy.c.d\r\n    [DEP] vp9/common/vp9_blockd.c.d\r\n    [DEP] vp9/common/vp9_alloccommon.c.d\r\n    [DEP] vpx_util/vpx_thread.c.d\r\n    [DEP] vpx_dsp/vpx_dsp_rtcd.c.d\r\n    [DEP] vpx_dsp/inv_txfm.c.d\r\n    [DEP] vpx_dsp/loopfilter.c.d\r\n    [DEP] vpx_dsp/vpx_convolve.c.d\r\n    [DEP] vpx_dsp/intrapred.c.d\r\n    [DEP] vpx_dsp/bitreader_buffer.c.d\r\n    [DEP] vpx_dsp/bitreader.c.d\r\n    [DEP] vpx_dsp/prob.c.d\r\n    [DEP] vpx_ports/arm_cpudetect.c.d\r\n    [DEP] vpx_scale/vpx_scale_rtcd.c.d\r\n    [DEP] vpx_scale/generic/gen_scalers.c.d\r\n    [DEP] vpx_scale/generic/yv12extend.c.d\r\n    [DEP] vpx_scale/generic/yv12config.c.d\r\n    [DEP] vpx_scale/generic/vpx_scale.c.d\r\n    [DEP] vpx_mem/vpx_mem.c.d\r\n    [DEP] vpx/src/vpx_image.c.d\r\n    [DEP] vpx/src/vpx_codec.c.d\r\n    [DEP] vpx/src/vpx_encoder.c.d\r\n    [DEP] vpx/src/vpx_decoder.c.d\r\n    [CREATE] libvpx_srcs.txt\r\n    [DEP] tools/tiny_ssim.c.d\r\nmake[1]: Nothing to be done for 'libvpx_srcs.txt'.\r\nmake: 'vpx_config.c' is up to date.\r\nmake: 'vpx_config.h' is up to date.\r\nmake: 'vpx_scale_rtcd.h' is up to date.\r\nMakefile:17: recipe for target 'vp8_rtcd.h' failed\r\nmake: 'vp9_rtcd.h' is up to date.\r\nmake: 'vpx_version.h' is up to date.\r\nmake: 'vpx_config.asm' is up to date.\r\nmake: 'vpx_dsp_rtcd.h' is up to date.\r\nmake: 'libvpx.ver' is up to date.\r\n~/ExoPlayer/extensions/vp9/src/main/jni\r\n~/ExoPlayer/extensions/vp9/src/main/jni/libvpx_android_configs/mips ~/ExoPlayer/extensions/vp9/src/main/jni\r\nbuild_android_configs: \r\nconfigure --force-target=mips32-android-gcc --sdk-path=/root/NDK --disable-examples --disable-docs --enable-realtime-only --disable-vp8 --disable-vp9-encoder --disable-webm-io --disable-libyuv --disable-runtime-cpu-detect\r\n  disabling examples\r\n  disabling docs\r\n  enabling realtime_only\r\n  disabling vp8\r\n  disabling vp9_encoder\r\n  disabling webm_io\r\n  disabling libyuv\r\n  disabling runtime_cpu_detect\r\n  enabling vp9_decoder\r\nConfiguring for target 'mips32-android-gcc'\r\n  enabling mips32\r\nCreating makefiles for mips32-android-gcc libs\r\nCreating makefiles for mips32-android-gcc tools\r\n    [DEP] vpx_config.c.d\r\n    [DEP] vp9/decoder/vp9_dsubexp.c.d\r\n    [DEP] vp9/decoder/vp9_decoder.c.d\r\n    [DEP] vp9/decoder/vp9_dthread.c.d\r\n    [DEP] vp9/decoder/vp9_detokenize.c.d\r\n    [DEP] vp9/decoder/vp9_decodeframe.c.d\r\n    [DEP] vp9/decoder/vp9_decodemv.c.d\r\n    [DEP] vp9/vp9_dx_iface.c.d\r\n    [DEP] vp9/common/vp9_scan.c.d\r\n    [DEP] vp9/common/vp9_common_data.c.d\r\n    [DEP] vp9/common/vp9_reconintra.c.d\r\n    [DEP] vp9/common/vp9_reconinter.c.d\r\n    [DEP] vp9/common/vp9_quant_common.c.d\r\n    [DEP] vp9/common/vp9_mvref_common.c.d\r\n    [DEP] vp9/common/vp9_thread_common.c.d\r\n    [DEP] vp9/common/vp9_loopfilter.c.d\r\n    [DEP] vp9/common/vp9_tile_common.c.d\r\n    [DEP] vp9/common/vp9_seg_common.c.d\r\n    [DEP] vp9/common/vp9_scale.c.d\r\n    [DEP] vp9/common/vp9_rtcd.c.d\r\n    [DEP] vp9/common/vp9_pred_common.c.d\r\n    [DEP] vp9/common/vp9_filter.c.d\r\n    [DEP] vp9/common/vp9_idct.c.d\r\n    [DEP] vp9/common/vp9_frame_buffers.c.d\r\n    [DEP] vp9/common/vp9_entropymv.c.d\r\n    [DEP] vp9/common/vp9_entropymode.c.d\r\n    [DEP] vp9/common/vp9_entropy.c.d\r\n    [DEP] vp9/common/vp9_blockd.c.d\r\n    [DEP] vp9/common/vp9_alloccommon.c.d\r\n    [DEP] vpx_util/vpx_thread.c.d\r\n    [DEP] vpx_dsp/vpx_dsp_rtcd.c.d\r\n    [DEP] vpx_dsp/inv_txfm.c.d\r\n    [DEP] vpx_dsp/loopfilter.c.d\r\n    [DEP] vpx_dsp/vpx_convolve.c.d\r\n    [DEP] vpx_dsp/intrapred.c.d\r\n    [DEP] vpx_dsp/bitreader_buffer.c.d\r\n    [DEP] vpx_dsp/bitreader.c.d\r\n    [DEP] vpx_dsp/prob.c.d\r\n    [DEP] vpx_scale/vpx_scale_rtcd.c.d\r\n    [DEP] vpx_scale/generic/gen_scalers.c.d\r\n    [DEP] vpx_scale/generic/yv12extend.c.d\r\n    [DEP] vpx_scale/generic/yv12config.c.d\r\n    [DEP] vpx_scale/generic/vpx_scale.c.d\r\n    [DEP] vpx_mem/vpx_mem.c.d\r\n    [DEP] vpx/src/vpx_image.c.d\r\n    [DEP] vpx/src/vpx_codec.c.d\r\n    [DEP] vpx/src/vpx_encoder.c.d\r\n    [DEP] vpx/src/vpx_decoder.c.d\r\n    [CREATE] libvpx_srcs.txt\r\n    [DEP] tools/tiny_ssim.c.d\r\nmake[1]: Nothing to be done for 'libvpx_srcs.txt'.\r\nmake: 'vpx_config.c' is up to date.\r\nmake: 'vpx_config.h' is up to date.\r\nmake: 'vpx_scale_rtcd.h' is up to date.\r\nMakefile:17: recipe for target 'vp8_rtcd.h' failed\r\nmake: 'vp9_rtcd.h' is up to date.\r\nmake: 'vpx_version.h' is up to date.\r\nmake: 'vpx_config.asm' is up to date.\r\nmake: 'vpx_dsp_rtcd.h' is up to date.\r\nmake: 'libvpx.ver' is up to date.\r\n~/ExoPlayer/extensions/vp9/src/main/jni\r\n~/ExoPlayer/extensions/vp9/src/main/jni/libvpx_android_configs/x86 ~/ExoPlayer/extensions/vp9/src/main/jni\r\nbuild_android_configs: \r\nconfigure --force-target=x86-android-gcc --sdk-path=/root/NDK --disable-sse2 --disable-sse3 --disable-ssse3 --disable-sse4_1 --disable-avx --disable-avx2 --enable-pic --disable-examples --disable-docs --enable-realtime-only --disable-vp8 --disable-vp9-encoder --disable-webm-io --disable-libyuv --disable-runtime-cpu-detect\r\n  enabling pic\r\n  disabling examples\r\n  disabling docs\r\n  enabling realtime_only\r\n  disabling vp8\r\n  disabling vp9_encoder\r\n  disabling webm_io\r\n  disabling libyuv\r\n  disabling runtime_cpu_detect\r\n  enabling vp9_decoder\r\nConfiguring for target 'x86-android-gcc'\r\n  enabling x86\r\n  enabling mmx\r\n  enabling sse\r\n  using nasm\r\n  enabling postproc\r\nUnable to invoke compiler: gcc  -m32 -DNDEBUG -O3 -fPIC -Wall -Wdeclaration-after-statement -Wdisabled-optimization -Wfloat-conversion -Wpointer-arith -Wtype-limits -Wcast-qual -Wvla -Wimplicit-function-declaration -Wuninitialized -Wunused -Wextra -Wundef\r\n\r\nConfiguration failed. This could reflect a misconfiguration of your\r\ntoolchains, improper options selected, or another problem. If you\r\ndon't see any useful error messages above, the next step is to look\r\nat the configure error log file (config.log) to determine what\r\nconfigure was trying to do when it died.\r\n```\r\n\r\nI have search the issue from open topic and closed topic too but I can't find the solution for this error. Please let me know how to solve it.\r\n\r\nThank you.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3011/comments",
    "author": "minhjirachi",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-07-03T10:36:55Z",
        "body": "This looks like an issue with your local setup. I was able to find some related threads by doing a regular internet search for \"Unable to invoke compiler: gcc\". Have you read through some of those, and did none of them help you to resolve the issue? Thanks!"
      },
      {
        "user": "andrewlewis",
        "created_at": "2017-07-03T14:18:51Z",
        "body": "There may also be information that would help diagnose this in `config.log`, as suggested in the error message."
      },
      {
        "user": "minhjirachi",
        "created_at": "2017-07-03T14:32:51Z",
        "body": "Hello,\r\n\r\nI have try some solution (not all). But it no help. If I remove the arch[3]=\"x86\" and shift up all architecture. The build was look pretty good and have no problem.\r\n\r\nHere is the content in the config.log:\r\n\r\n```\r\n# ../../libvpx/configure --force-target=x86-android-gcc --sdk-path=/root/NDK --disable-sse2 --disable-sse3 --disable-ssse3 --disable-sse4_1 --disable-avx --disable-avx2 --enable-pic --disable-examples --disable-docs --enable-realtime-only --disable-vp8 --disable-vp9-encoder --disable-webm-io --disable-libyuv --disable-runtime-cpu-detect\r\n  enabling vp9_decoder\r\nConfiguring for target 'x86-android-gcc'\r\n  enabling x86\r\ncheck_cpp\r\nBEGIN /tmp/vpx-conf-49464-10588.c\r\n     1\t#if !defined(__ILP32__) || !defined(__x86_64__)\r\n     2\t#error \"not x32\"\r\n     3\t#endif\r\nEND /tmp/vpx-conf-49464-10588.c\r\ngcc -E -o /tmp/vpx-conf-49464-10588.o /tmp/vpx-conf-49464-10588.c\r\n/tmp/vpx-conf-49464-10588.c:2:2: error: #error \"not x32\"\r\n #error \"not x32\"\r\n  ^\r\ncheck_cflags -mmmx\r\ncheck_cc -Werror -mmmx\r\nBEGIN /tmp/vpx-conf-49464-10588.c\r\n     1\tint x;\r\nEND /tmp/vpx-conf-49464-10588.c\r\ngcc -m32 -Werror -mmmx -c -o /tmp/vpx-conf-49464-10588.o /tmp/vpx-conf-49464-10588.c\r\n  enabling mmx\r\ncheck_cflags -msse\r\ncheck_cc -Werror -msse\r\nBEGIN /tmp/vpx-conf-49464-10588.c\r\n     1\tint x;\r\nEND /tmp/vpx-conf-49464-10588.c\r\ngcc -m32 -Werror -msse -c -o /tmp/vpx-conf-49464-10588.o /tmp/vpx-conf-49464-10588.c\r\n  enabling sse\r\n  using nasm\r\ncheck_asm_align\r\nBEGIN /tmp/vpx-conf-49464-10588.asm\r\n     1\tsection .rodata\r\n     2\talign 16\r\nEND /tmp/vpx-conf-49464-10588.asm\r\nnasm -Ox -f elf32 -o /tmp/vpx-conf-49464-10588.o /tmp/vpx-conf-49464-10588.asm\r\nBEGIN /tmp/vpx-conf-49464-10588.x\r\n     1\tThere are 5 section headers, starting at offset 0x40:\r\n     2\t\r\n     3\tSection Headers:\r\n     4\t  [Nr] Name              Type            Addr     Off    Size   ES Flg Lk Inf Al\r\n     5\t  [ 0]                   NULL            00000000 000000 000000 00      0   0  0\r\n     6\t  [ 1] .rodata           PROGBITS        00000000 000110 000000 00   A  0   0 16\r\n     7\t  [ 2] .shstrtab         STRTAB          00000000 000110 000023 00      0   0  1\r\n     8\t  [ 3] .symtab           SYMTAB          00000000 000140 000030 10      4   3  4\r\n     9\t  [ 4] .strtab           STRTAB          00000000 000170 00001f 00      0   0  1\r\n    10\tKey to Flags:\r\n    11\t  W (write), A (alloc), X (execute), M (merge), S (strings), I (info),\r\n    12\t  L (link order), O (extra OS processing required), G (group), T (TLS),\r\n    13\t  C (compressed), x (unknown), o (OS specific), E (exclude),\r\n    14\t  p (processor specific)\r\nEND /tmp/vpx-conf-49464-10588.x\r\ncheck_cxxflags -DNDEBUG\r\ncheck_cxx -Werror -DNDEBUG\r\nBEGIN /tmp/vpx-conf-49464-10588.cc\r\n     1\tint x;\r\nEND /tmp/vpx-conf-49464-10588.cc\r\ng++ -m32 -Werror -DNDEBUG -c -o /tmp/vpx-conf-49464-10588.o /tmp/vpx-conf-49464-10588.cc\r\ncheck_cflags -DNDEBUG\r\ncheck_cc -Werror -DNDEBUG\r\nBEGIN /tmp/vpx-conf-49464-10588.c\r\n     1\tint x;\r\nEND /tmp/vpx-conf-49464-10588.c\r\ngcc -m32 -Werror -DNDEBUG -c -o /tmp/vpx-conf-49464-10588.o /tmp/vpx-conf-49464-10588.c\r\ncheck_cxxflags -O3\r\ncheck_cxx -Werror -O3\r\nBEGIN /tmp/vpx-conf-49464-10588.cc\r\n     1\tint x;\r\nEND /tmp/vpx-conf-49464-10588.cc\r\ng++ -m32 -DNDEBUG -Werror -O3 -c -o /tmp/vpx-conf-49464-10588.o /tmp/vpx-conf-49464-10588.cc\r\ncheck_cflags -O3\r\ncheck_cc -Werror -O3\r\nBEGIN /tmp/vpx-conf-49464-10588.c\r\n     1\tint x;\r\nEND /tmp/vpx-conf-49464-10588.c\r\ngcc -m32 -DNDEBUG -Werror -O3 -c -o /tmp/vpx-conf-49464-10588.o /tmp/vpx-conf-49464-10588.c\r\ncheck_cxxflags -fPIC\r\ncheck_cxx -Werror -fPIC\r\nBEGIN /tmp/vpx-conf-49464-10588.cc\r\n     1\tint x;\r\nEND /tmp/vpx-conf-49464-10588.cc\r\ng++ -m32 -DNDEBUG -O3 -Werror -fPIC -c -o /tmp/vpx-conf-49464-10588.o /tmp/vpx-conf-49464-10588.cc\r\ncheck_cflags -fPIC\r\ncheck_cc -Werror -fPIC\r\nBEGIN /tmp/vpx-conf-49464-10588.c\r\n     1\tint x;\r\nEND /tmp/vpx-conf-49464-10588.c\r\ngcc -m32 -DNDEBUG -O3 -Werror -fPIC -c -o /tmp/vpx-conf-49464-10588.o /tmp/vpx-conf-49464-10588.c\r\ncheck_cc\r\nBEGIN /tmp/vpx-conf-49464-10588.c\r\n     1\tunsigned int e = 'O'<<24 | '2'<<16 | 'B'<<8 | 'E';\r\nEND /tmp/vpx-conf-49464-10588.c\r\ngcc -m32 -DNDEBUG -O3 -fPIC -c -o /tmp/vpx-conf-49464-10588.o /tmp/vpx-conf-49464-10588.c\r\ncheck_cc\r\nBEGIN /tmp/vpx-conf-49464-10588.c\r\n     1\tstatic inline function() {}\r\nEND /tmp/vpx-conf-49464-10588.c\r\ngcc -m32 -DNDEBUG -O3 -fPIC -c -o /tmp/vpx-conf-49464-10588.o /tmp/vpx-conf-49464-10588.c\r\ncheck_cxxflags -Wall\r\ncheck_cxx -Werror -Wall\r\nBEGIN /tmp/vpx-conf-49464-10588.cc\r\n     1\tint x;\r\nEND /tmp/vpx-conf-49464-10588.cc\r\ng++ -m32 -DNDEBUG -O3 -fPIC -Werror -Wall -c -o /tmp/vpx-conf-49464-10588.o /tmp/vpx-conf-49464-10588.cc\r\ncheck_cflags -Wall\r\ncheck_cc -Werror -Wall\r\nBEGIN /tmp/vpx-conf-49464-10588.c\r\n     1\tint x;\r\nEND /tmp/vpx-conf-49464-10588.c\r\ngcc -m32 -DNDEBUG -O3 -fPIC -Werror -Wall -c -o /tmp/vpx-conf-49464-10588.o /tmp/vpx-conf-49464-10588.c\r\ncheck_cxxflags -Wdeclaration-after-statement\r\ncheck_cxx -Werror -Wdeclaration-after-statement\r\nBEGIN /tmp/vpx-conf-49464-10588.cc\r\n     1\tint x;\r\nEND /tmp/vpx-conf-49464-10588.cc\r\ng++ -m32 -DNDEBUG -O3 -fPIC -Wall -Werror -Wdeclaration-after-statement -c -o /tmp/vpx-conf-49464-10588.o /tmp/vpx-conf-49464-10588.cc\r\ncc1plus: error: command line option ‘-Wdeclaration-after-statement’ is valid for C/ObjC but not for C++ [-Werror]\r\ncc1plus: all warnings being treated as errors\r\ncheck_cflags -Wdeclaration-after-statement\r\ncheck_cc -Werror -Wdeclaration-after-statement\r\nBEGIN /tmp/vpx-conf-49464-10588.c\r\n     1\tint x;\r\nEND /tmp/vpx-conf-49464-10588.c\r\ngcc -m32 -DNDEBUG -O3 -fPIC -Wall -Werror -Wdeclaration-after-statement -c -o /tmp/vpx-conf-49464-10588.o /tmp/vpx-conf-49464-10588.c\r\ncheck_cxxflags -Wdisabled-optimization\r\ncheck_cxx -Werror -Wdisabled-optimization\r\nBEGIN /tmp/vpx-conf-49464-10588.cc\r\n     1\tint x;\r\nEND /tmp/vpx-conf-49464-10588.cc\r\ng++ -m32 -DNDEBUG -O3 -fPIC -Wall -Werror -Wdisabled-optimization -c -o /tmp/vpx-conf-49464-10588.o /tmp/vpx-conf-49464-10588.cc\r\ncheck_cflags -Wdisabled-optimization\r\ncheck_cc -Werror -Wdisabled-optimization\r\nBEGIN /tmp/vpx-conf-49464-10588.c\r\n     1\tint x;\r\nEND /tmp/vpx-conf-49464-10588.c\r\ngcc -m32 -DNDEBUG -O3 -fPIC -Wall -Wdeclaration-after-statement -Werror -Wdisabled-optimization -c -o /tmp/vpx-conf-49464-10588.o /tmp/vpx-conf-49464-10588.c\r\ncheck_cxxflags -Wfloat-conversion\r\ncheck_cxx -Werror -Wfloat-conversion\r\nBEGIN /tmp/vpx-conf-49464-10588.cc\r\n     1\tint x;\r\nEND /tmp/vpx-conf-49464-10588.cc\r\ng++ -m32 -DNDEBUG -O3 -fPIC -Wall -Wdisabled-optimization -Werror -Wfloat-conversion -c -o /tmp/vpx-conf-49464-10588.o /tmp/vpx-conf-49464-10588.cc\r\ncheck_cflags -Wfloat-conversion\r\ncheck_cc -Werror -Wfloat-conversion\r\nBEGIN /tmp/vpx-conf-49464-10588.c\r\n     1\tint x;\r\nEND /tmp/vpx-conf-49464-10588.c\r\ngcc -m32 -DNDEBUG -O3 -fPIC -Wall -Wdeclaration-after-statement -Wdisabled-optimization -Werror -Wfloat-conversion -c -o /tmp/vpx-conf-49464-10588.o /tmp/vpx-conf-49464-10588.c\r\ncheck_cxxflags -Wpointer-arith\r\ncheck_cxx -Werror -Wpointer-arith\r\nBEGIN /tmp/vpx-conf-49464-10588.cc\r\n     1\tint x;\r\nEND /tmp/vpx-conf-49464-10588.cc\r\ng++ -m32 -DNDEBUG -O3 -fPIC -Wall -Wdisabled-optimization -Wfloat-conversion -Werror -Wpointer-arith -c -o /tmp/vpx-conf-49464-10588.o /tmp/vpx-conf-49464-10588.cc\r\ncheck_cflags -Wpointer-arith\r\ncheck_cc -Werror -Wpointer-arith\r\nBEGIN /tmp/vpx-conf-49464-10588.c\r\n     1\tint x;\r\nEND /tmp/vpx-conf-49464-10588.c\r\ngcc -m32 -DNDEBUG -O3 -fPIC -Wall -Wdeclaration-after-statement -Wdisabled-optimization -Wfloat-conversion -Werror -Wpointer-arith -c -o /tmp/vpx-conf-49464-10588.o /tmp/vpx-conf-49464-10588.c\r\ncheck_cxxflags -Wtype-limits\r\ncheck_cxx -Werror -Wtype-limits\r\nBEGIN /tmp/vpx-conf-49464-10588.cc\r\n     1\tint x;\r\nEND /tmp/vpx-conf-49464-10588.cc\r\ng++ -m32 -DNDEBUG -O3 -fPIC -Wall -Wdisabled-optimization -Wfloat-conversion -Wpointer-arith -Werror -Wtype-limits -c -o /tmp/vpx-conf-49464-10588.o /tmp/vpx-conf-49464-10588.cc\r\ncheck_cflags -Wtype-limits\r\ncheck_cc -Werror -Wtype-limits\r\nBEGIN /tmp/vpx-conf-49464-10588.c\r\n     1\tint x;\r\nEND /tmp/vpx-conf-49464-10588.c\r\ngcc -m32 -DNDEBUG -O3 -fPIC -Wall -Wdeclaration-after-statement -Wdisabled-optimization -Wfloat-conversion -Wpointer-arith -Werror -Wtype-limits -c -o /tmp/vpx-conf-49464-10588.o /tmp/vpx-conf-49464-10588.c\r\ncheck_cxxflags -Wcast-qual\r\ncheck_cxx -Werror -Wcast-qual\r\nBEGIN /tmp/vpx-conf-49464-10588.cc\r\n     1\tint x;\r\nEND /tmp/vpx-conf-49464-10588.cc\r\ng++ -m32 -DNDEBUG -O3 -fPIC -Wall -Wdisabled-optimization -Wfloat-conversion -Wpointer-arith -Wtype-limits -Werror -Wcast-qual -c -o /tmp/vpx-conf-49464-10588.o /tmp/vpx-conf-49464-10588.cc\r\ncheck_cflags -Wcast-qual\r\ncheck_cc -Werror -Wcast-qual\r\nBEGIN /tmp/vpx-conf-49464-10588.c\r\n     1\tint x;\r\nEND /tmp/vpx-conf-49464-10588.c\r\ngcc -m32 -DNDEBUG -O3 -fPIC -Wall -Wdeclaration-after-statement -Wdisabled-optimization -Wfloat-conversion -Wpointer-arith -Wtype-limits -Werror -Wcast-qual -c -o /tmp/vpx-conf-49464-10588.o /tmp/vpx-conf-49464-10588.c\r\ncheck_cxxflags -Wvla\r\ncheck_cxx -Werror -Wvla\r\nBEGIN /tmp/vpx-conf-49464-10588.cc\r\n     1\tint x;\r\nEND /tmp/vpx-conf-49464-10588.cc\r\ng++ -m32 -DNDEBUG -O3 -fPIC -Wall -Wdisabled-optimization -Wfloat-conversion -Wpointer-arith -Wtype-limits -Wcast-qual -Werror -Wvla -c -o /tmp/vpx-conf-49464-10588.o /tmp/vpx-conf-49464-10588.cc\r\ncheck_cflags -Wvla\r\ncheck_cc -Werror -Wvla\r\nBEGIN /tmp/vpx-conf-49464-10588.c\r\n     1\tint x;\r\nEND /tmp/vpx-conf-49464-10588.c\r\ngcc -m32 -DNDEBUG -O3 -fPIC -Wall -Wdeclaration-after-statement -Wdisabled-optimization -Wfloat-conversion -Wpointer-arith -Wtype-limits -Wcast-qual -Werror -Wvla -c -o /tmp/vpx-conf-49464-10588.o /tmp/vpx-conf-49464-10588.c\r\ncheck_cxxflags -Wimplicit-function-declaration\r\ncheck_cxx -Werror -Wimplicit-function-declaration\r\nBEGIN /tmp/vpx-conf-49464-10588.cc\r\n     1\tint x;\r\nEND /tmp/vpx-conf-49464-10588.cc\r\ng++ -m32 -DNDEBUG -O3 -fPIC -Wall -Wdisabled-optimization -Wfloat-conversion -Wpointer-arith -Wtype-limits -Wcast-qual -Wvla -Werror -Wimplicit-function-declaration -c -o /tmp/vpx-conf-49464-10588.o /tmp/vpx-conf-49464-10588.cc\r\ncc1plus: error: command line option ‘-Wimplicit-function-declaration’ is valid for C/ObjC but not for C++ [-Werror]\r\ncc1plus: all warnings being treated as errors\r\ncheck_cflags -Wimplicit-function-declaration\r\ncheck_cc -Werror -Wimplicit-function-declaration\r\nBEGIN /tmp/vpx-conf-49464-10588.c\r\n     1\tint x;\r\nEND /tmp/vpx-conf-49464-10588.c\r\ngcc -m32 -DNDEBUG -O3 -fPIC -Wall -Wdeclaration-after-statement -Wdisabled-optimization -Wfloat-conversion -Wpointer-arith -Wtype-limits -Wcast-qual -Wvla -Werror -Wimplicit-function-declaration -c -o /tmp/vpx-conf-49464-10588.o /tmp/vpx-conf-49464-10588.c\r\ncheck_cxxflags -Wuninitialized\r\ncheck_cxx -Werror -Wuninitialized\r\nBEGIN /tmp/vpx-conf-49464-10588.cc\r\n     1\tint x;\r\nEND /tmp/vpx-conf-49464-10588.cc\r\ng++ -m32 -DNDEBUG -O3 -fPIC -Wall -Wdisabled-optimization -Wfloat-conversion -Wpointer-arith -Wtype-limits -Wcast-qual -Wvla -Werror -Wuninitialized -c -o /tmp/vpx-conf-49464-10588.o /tmp/vpx-conf-49464-10588.cc\r\ncheck_cflags -Wuninitialized\r\ncheck_cc -Werror -Wuninitialized\r\nBEGIN /tmp/vpx-conf-49464-10588.c\r\n     1\tint x;\r\nEND /tmp/vpx-conf-49464-10588.c\r\ngcc -m32 -DNDEBUG -O3 -fPIC -Wall -Wdeclaration-after-statement -Wdisabled-optimization -Wfloat-conversion -Wpointer-arith -Wtype-limits -Wcast-qual -Wvla -Wimplicit-function-declaration -Werror -Wuninitialized -c -o /tmp/vpx-conf-49464-10588.o /tmp/vpx-conf-49464-10588.c\r\ncheck_cxxflags -Wunused\r\ncheck_cxx -Werror -Wunused\r\nBEGIN /tmp/vpx-conf-49464-10588.cc\r\n     1\tint x;\r\nEND /tmp/vpx-conf-49464-10588.cc\r\ng++ -m32 -DNDEBUG -O3 -fPIC -Wall -Wdisabled-optimization -Wfloat-conversion -Wpointer-arith -Wtype-limits -Wcast-qual -Wvla -Wuninitialized -Werror -Wunused -c -o /tmp/vpx-conf-49464-10588.o /tmp/vpx-conf-49464-10588.cc\r\ncheck_cflags -Wunused\r\ncheck_cc -Werror -Wunused\r\nBEGIN /tmp/vpx-conf-49464-10588.c\r\n     1\tint x;\r\nEND /tmp/vpx-conf-49464-10588.c\r\ngcc -m32 -DNDEBUG -O3 -fPIC -Wall -Wdeclaration-after-statement -Wdisabled-optimization -Wfloat-conversion -Wpointer-arith -Wtype-limits -Wcast-qual -Wvla -Wimplicit-function-declaration -Wuninitialized -Werror -Wunused -c -o /tmp/vpx-conf-49464-10588.o /tmp/vpx-conf-49464-10588.c\r\ncheck_cxxflags -Wextra\r\ncheck_cxx -Werror -Wextra\r\nBEGIN /tmp/vpx-conf-49464-10588.cc\r\n     1\tint x;\r\nEND /tmp/vpx-conf-49464-10588.cc\r\ng++ -m32 -DNDEBUG -O3 -fPIC -Wall -Wdisabled-optimization -Wfloat-conversion -Wpointer-arith -Wtype-limits -Wcast-qual -Wvla -Wuninitialized -Wunused -Werror -Wextra -c -o /tmp/vpx-conf-49464-10588.o /tmp/vpx-conf-49464-10588.cc\r\ncheck_cflags -Wextra\r\ncheck_cc -Werror -Wextra\r\nBEGIN /tmp/vpx-conf-49464-10588.c\r\n     1\tint x;\r\nEND /tmp/vpx-conf-49464-10588.c\r\ngcc -m32 -DNDEBUG -O3 -fPIC -Wall -Wdeclaration-after-statement -Wdisabled-optimization -Wfloat-conversion -Wpointer-arith -Wtype-limits -Wcast-qual -Wvla -Wimplicit-function-declaration -Wuninitialized -Wunused -Werror -Wextra -c -o /tmp/vpx-conf-49464-10588.o /tmp/vpx-conf-49464-10588.c\r\ncheck_cflags -Wundef\r\ncheck_cc -Werror -Wundef\r\nBEGIN /tmp/vpx-conf-49464-10588.c\r\n     1\tint x;\r\nEND /tmp/vpx-conf-49464-10588.c\r\ngcc -m32 -DNDEBUG -O3 -fPIC -Wall -Wdeclaration-after-statement -Wdisabled-optimization -Wfloat-conversion -Wpointer-arith -Wtype-limits -Wcast-qual -Wvla -Wimplicit-function-declaration -Wuninitialized -Wunused -Wextra -Werror -Wundef -c -o /tmp/vpx-conf-49464-10588.o /tmp/vpx-conf-49464-10588.c\r\ncheck_cflags -Wshorten-64-to-32\r\ncheck_cc -Werror -Wshorten-64-to-32\r\nBEGIN /tmp/vpx-conf-49464-10588.c\r\n     1\tint x;\r\nEND /tmp/vpx-conf-49464-10588.c\r\ngcc -m32 -DNDEBUG -O3 -fPIC -Wall -Wdeclaration-after-statement -Wdisabled-optimization -Wfloat-conversion -Wpointer-arith -Wtype-limits -Wcast-qual -Wvla -Wimplicit-function-declaration -Wuninitialized -Wunused -Wextra -Wundef -Werror -Wshorten-64-to-32 -c -o /tmp/vpx-conf-49464-10588.o /tmp/vpx-conf-49464-10588.c\r\ngcc: error: unrecognized command line option ‘-Wshorten-64-to-32’\r\n  enabling postproc\r\ncheck_header stdio.h\r\ncheck_cpp\r\nBEGIN /tmp/vpx-conf-49464-10588.c\r\n     1\t#include \"stdio.h\"\r\n     2\tint x;\r\nEND /tmp/vpx-conf-49464-10588.c\r\ngcc -m32 -DNDEBUG -O3 -fPIC -Wall -Wdeclaration-after-statement -Wdisabled-optimization -Wfloat-conversion -Wpointer-arith -Wtype-limits -Wcast-qual -Wvla -Wimplicit-function-declaration -Wuninitialized -Wunused -Wextra -Wundef -E -o /tmp/vpx-conf-49464-10588.o /tmp/vpx-conf-49464-10588.c\r\nIn file included from /usr/include/stdio.h:27:0,\r\n                 from /tmp/vpx-conf-49464-10588.c:1:\r\n/usr/include/features.h:374:25: fatal error: sys/cdefs.h: No such file or directory\r\n #  include <sys/cdefs.h>\r\n                         ^\r\ncompilation terminated.\r\n\r\n```\r\n\r\nThank you"
      },
      {
        "user": "minhjirachi",
        "created_at": "2017-07-03T14:56:21Z",
        "body": "I can see the problem that I missing the sys/cdefs.h.\r\n\r\nSo I will try to solve by myself. I haven't know that we have the log in there.\r\n\r\nThank you."
      },
      {
        "user": "minhjirachi",
        "created_at": "2017-07-05T10:42:22Z",
        "body": "I have solve this problem by installing the libc6-dev-i386 package.\r\n\r\nI don't know why the old OS do not allow me to install that package. So that I have to install the new one and everything were solved.\r\n\r\nPlease close this topic."
      }
    ]
  },
  {
    "number": 3006,
    "title": "Bitrate value is -1 for any HLS content",
    "created_at": "2017-06-30T13:27:15Z",
    "closed_at": "2017-07-13T16:17:30Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3006",
    "body": "### Issue description\r\nWhen I try to reproduce an HLS content the method player.getVideoFormat().bitrate in DebugTextViewHelper returns always -1.\r\n\r\n### Reproduction steps\r\n - Open Exoplayer 2.4.2 demo app\r\n - Select any HLS content for example \"Apple 4x3 basic stream\"\r\n - Log _player.getVideoFormat().bitrate_ in _private String getVideoString()_ method in _DebugTextViewHelper_ class\r\n- bitrate is always -1\r\n\r\n### Link to test content\r\nAny HLS content, for example \"Apple 4x3 basic stream\" in Exoplayer demo app\r\n\r\n### Version of ExoPlayer being used\r\nExoplayer 2.4.2\r\n\r\n### Device(s) and version(s) of Android being used\r\nNexus 5, Android 6.0.1\r\n\r\n### A full bug report captured from the device\r\nno logs\r\n\r\n### Info\r\nI have checked in _HlsPlaylistParser_ class and the bitrate value is correct.\r\nI'm continuing to study this case and I will add more info soon.\r\n\r\nThanks\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3006/comments",
    "author": "Gian84",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-07-03T10:39:13Z",
        "body": "The format you're seeing here is really only intended for internal use by the player (and for debugging purposes). It is correct to say that the bitrate is set to -1, but it's also correct to say this shouldn't really be a problem. Note that this format represents just the video component of the stream, after de-muxing and extraction from the container."
      },
      {
        "user": "Gian84",
        "created_at": "2017-07-13T16:17:30Z",
        "body": "So, it is not a bug.\r\nI had this doubt because other formats (DASH or SS) have this information in the same callback or in EventLogger.\r\n\r\nThank you for your answer."
      },
      {
        "user": "takn",
        "created_at": "2017-09-11T21:32:44Z",
        "body": "What should the proper way to access bitrate be?\r\n"
      }
    ]
  },
  {
    "number": 3005,
    "title": "Reduce time of connection life",
    "created_at": "2017-06-30T09:22:28Z",
    "closed_at": "2017-07-19T20:17:46Z",
    "labels": [
      "question",
      "need more info"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/3005",
    "body": "Hello. I didnt find place where I could ask question like google groups. We are using exoplayer version 2.0.4. How could we reduce connection life(for now it's living for 5 minutes)?\r\nAnd how we could reduce requests beatrate (for now we have 12 seconds per second)?\r\nThanks.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/3005/comments",
    "author": "bene25",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-06-30T16:31:27Z",
        "body": "There's not enough information here for us to help. What are you defining as connection life, and how are you measuring it? I don't understand what beatrate means, either. What type of media is being played?"
      },
      {
        "user": "ojw28",
        "created_at": "2017-07-19T20:17:46Z",
        "body": "Closing due to lack of information."
      }
    ]
  },
  {
    "number": 2999,
    "title": "Get YUV frames from HLS online url",
    "created_at": "2017-06-28T09:23:30Z",
    "closed_at": "2017-06-30T17:03:15Z",
    "labels": [
      "question",
      "need more info"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2999",
    "body": "\r\nAny option to get YUV frame buffer ?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2999/comments",
    "author": "nikhilkilivayil",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-06-30T17:03:15Z",
        "body": "We do not provide a direct API for this, but there are multiple approaches you could look into if you're trying to grab video frames in a particular format. For example you could use TextureView.getBitmap to get the current frame in a bitmap, at which point you could do your own conversion into a preferred format.\r\n\r\nWithout a proper description of the use case it's impossible to provide any solid guidance regarding whether what you're trying to do is feasible, and if so what the best approach would be. If you want to provide more information, please do so here and we'll re-open the issue. Thanks!"
      }
    ]
  },
  {
    "number": 2990,
    "title": "Background music during video playback",
    "created_at": "2017-06-23T12:55:20Z",
    "closed_at": "2017-06-26T17:05:34Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2990",
    "body": "\r\n\r\n### Issue description\r\nI want to implement background music during video playback. I thought of MergingMediaSource, but it seems it does not support this scenario.\r\nYou can have multiple AudioTrack run in parallel, the result is fine. \r\n\r\nSimilar issue is #2200 , but it is closed.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2990/comments",
    "author": "b0g8",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-06-26T17:05:34Z",
        "body": "The answer is the same as in #2200. If you need tight synchronization, you'll probably need to be mixing the audio prior to feeding it into a single AudioTrack instance. This is not a use case we currently support I'm afraid. If you don't need tight synchronization then you can just use two `ExoPlayer` instances (i.e. an extra one for the background music)."
      },
      {
        "user": "b0g8",
        "created_at": "2017-06-26T17:24:53Z",
        "body": "Thanks, I'm trying to use two instances, and share the clock."
      }
    ]
  },
  {
    "number": 2984,
    "title": "[Question] Reuse Flac Decoder for extra processing",
    "created_at": "2017-06-22T06:53:42Z",
    "closed_at": "2017-07-19T20:20:10Z",
    "labels": [
      "question",
      "need more info"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2984",
    "body": "Hi,\r\nI'm trying to apply extra processing to a flac file using the FlacDecoderJni provided with ExoPlayer Extension\r\n\r\nI've created a DataSpec, DataSource and finally a DefaultExtractorInput instances.\r\nI've also created an instance of decoderjni and set data using my DefaultExtractorInput instance.\r\nIt seems to work fine i also can get FlacStreamInfo, but when I check data in the output byte buffer, after calling method DecodeSample, I see that is full of zero.\r\nI've seen that the FlacDecoder constructor class use InitializationData instead of Extractor Input... But i don't understand what I have to pass as InitializationData.\r\nSomeone can help me? ",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2984/comments",
    "author": "Fed93",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-06-22T14:50:22Z",
        "body": "Can you just look at where that constructor is called by the ExoPlayer library, and trace back to where the data is coming from (right click -> Find Usages in Android Studio makes this really easy)? You should be able to answer your own question this way."
      },
      {
        "user": "Fed93",
        "created_at": "2017-06-22T15:22:26Z",
        "body": "Already done.\r\nIt's used in LibflacAudioRenderer in createDecoder method (com.google.android.exoplayer2.ext.flac.LibflacAudioRenderer#createDecoder)\r\nBut when i try to find usage of this method i see the popup with no usage found."
      },
      {
        "user": "ojw28",
        "created_at": "2017-06-22T15:31:16Z",
        "body": "You should receive a \"Do you want to find usages of the base method\" dialog when you try and find usage of that method. If you click Yes then you should find a usage (in SimpleDecoderAudioRenderer's maybeInitDecoder method)."
      },
      {
        "user": "Fed93",
        "created_at": "2017-06-23T12:25:17Z",
        "body": "I've found various method but are all private.\r\nAlso initializationData (variable of Format class used as argument in createDecoder method) used by FlacDecoder is created from SampleStreams in other private method when ExoPlayer load track before playing it.\r\nAfter this, i tried again to decode flac file using ExtractorInput, FlacStreamInfo is being read good but ByteBuffer is full of zero after calling decoderJni.decodeSample.\r\n\r\nI create ExtractorInput using this code\r\n`DataSpec spec = new DataSpec(filePath);`\r\n`FileDataSource source = new FileDataSource();`\r\n`source.open(spec);`\r\n`ExtractorInput input = new DefaultExtractorInput(source, 0, C.LENGTH_UNSET);`\r\n\r\nand then i set it to DecoderJni\r\n`decoderJni.setData(input);`\r\n\r\nThere's something wrong in here?"
      },
      {
        "user": "ojw28",
        "created_at": "2017-06-26T08:32:45Z",
        "body": "I'm having a hard time working out what you're doing, which is making it difficult to provide any int here. Let's say you start from the working ExoPlayer demo app. What is it exactly that you're trying to do, and at a high level what changes have you tried to make in order to achieve your goal? You appear to be hooking into the Flac extension at a very low level; certainly lower than we would envisage ever being necessary."
      },
      {
        "user": "Fed93",
        "created_at": "2017-06-26T08:56:00Z",
        "body": "I'm trying to analyze song in order to extrapolate bpm, key, peak and other information and show them and do some other stuff before song is played (for example applying some particular filter).\r\nTo do this I need a buffer with uncompressed data of the song. \r\nI've two different part in my app:\r\nOne is the basic player (based on ExoPlayer)\r\nWrited from zero without using ExoPlayer Demo App but only using documentation\r\nOne is the audio processor \r\nMy problem is that I need some library to decode Flac and I think Flac extension can help me"
      },
      {
        "user": "ojw28",
        "created_at": "2017-06-26T09:01:33Z",
        "body": "Ok. It sounds like there are two different things you need to do:\r\n1. Use the Flac extension in the normal way. I don't think there's any need for you to customize it, or understand what it's doing internally, or anything like that.\r\n1. Add processing to the decoded audio data. This is a completely separate topic, and should probably be done using an `AudioProcessor`. You can inject a custom processor by creating an extension of `DefaultRenderersFactory` and overriding `buildAudioProcessors` to instantiate your custom processor."
      },
      {
        "user": "Fed93",
        "created_at": "2017-06-26T09:19:39Z",
        "body": "For the first point your right... I don't need any customisations.\r\nFor the second point.. but creating an extension doesn't force me to use it by creating a SimpleExoPlayer instance?\r\nI create it by this way:  \r\n`TrackSelector trackSelector = new DefaultTrackSelector(new FixedTrackSelection.Factory());`\r\n`DefaultRenderersFactory renderersFactory = new DefaultRenderersFactory(mContext, null,\r\n                DefaultRenderersFactory.EXTENSION_RENDERER_MODE_PREFER);`\r\n`SimpleExoPlayer baseInstance = ExoPlayerFactory.newSimpleInstance(renderersFactory, trackSelector);`\r\n\r\nMy idea is to process audio before creating player and play music"
      },
      {
        "user": "ojw28",
        "created_at": "2017-06-26T10:36:10Z",
        "body": "I don't really understand what your question is. I think the only thing you need to change is the `DefaultRenderersFactory`, which you need to extend so that you can override `buildAudioProcessors` as explained above."
      },
      {
        "user": "ojw28",
        "created_at": "2017-07-19T20:20:10Z",
        "body": "Closing due to lack of updates. Regardless of whether there's still a question here, it seems beyond the scope of this issue tracker."
      },
      {
        "user": "Fed93",
        "created_at": "2017-07-26T11:36:39Z",
        "body": "Hi, sorry but i was away and without internet connection.\r\nI've solved without using Flac Extension but using an external java flac decoder.\r\nWhen app analyze a music file ExoPlayer isn't instantiated because i don't need it."
      }
    ]
  },
  {
    "number": 2969,
    "title": "UnrecognizedInputFormatException when play dash live stream in v2 ",
    "created_at": "2017-06-19T13:11:15Z",
    "closed_at": "2017-06-19T14:59:23Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2969",
    "body": "There is a live stream(dash with widevine),  it worked fine in exoplayer v1, but after upgrade to v2, it shows below error   \r\n```                                              com.google.android.exoplayer2.source.UnrecognizedInputFormatException: None of the available extractors (MatroskaExtractor, FragmentedMp4Extractor, Mp4Extractor, Mp3Extractor, AdtsExtractor, Ac3Extractor, TsExtractor, FlvExtractor, OggExtractor, PsExtractor, WavExtractor) could read the stream.\r\n                                                                       at com.google.android.exoplayer2.source.ExtractorMediaPeriod$ExtractorHolder.selectExtractor(ExtractorMediaPeriod.java:722)\r\n                                                                       at com.google.android.exoplayer2.source.ExtractorMediaPeriod$ExtractingLoadable.load(ExtractorMediaPeriod.java:645)\r\n                                                                       at com.google.android.exoplayer2.upstream.Loader$LoadTask.run(Loader.java:295)\r\n                                                                       at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1133)\r\n                                                                       at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:607)\r\n                                                                       at java.lang.Thread.run(Thread.java:761)\r\n06-19 22:23:13.812 2750-3372/com.test.player E/ExoPlayerImplInternal: Source error.\r\n                                                                             com.google.android.exoplayer2.source.UnrecognizedInputFormatException: None of the available extractors (MatroskaExtractor, FragmentedMp4Extractor, Mp4Extractor, Mp3Extractor, AdtsExtractor, Ac3Extractor, TsExtractor, FlvExtractor, OggExtractor, PsExtractor, WavExtractor) could read the stream.\r\n                                                                                 at com.google.android.exoplayer2.source.ExtractorMediaPeriod$ExtractorHolder.selectExtractor(ExtractorMediaPeriod.java:722)\r\n                                                                                 at com.google.android.exoplayer2.source.ExtractorMediaPeriod$ExtractingLoadable.load(ExtractorMediaPeriod.java:645)\r\n                                                                                 at com.google.android.exoplayer2.upstream.Loader$LoadTask.run(Loader.java:295)\r\n                                                                                 at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1133)\r\n                                                                                 at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:607)\r\n                                                                                 at java.lang.Thread.run(Thread.java:761)\r\n06-19 22:23:13.812 2750-2750/com.test.player E/playback error >>>: com.google.android.exoplayer2.ExoPlaybackException\r\n```\r\nShould I email you the MPD file?\r\nThanks.\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2969/comments",
    "author": "jiafei1986",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-06-19T13:46:21Z",
        "body": "You're trying to play a DASH stream using `ExtractorMediaSource`, where-as you should be using `DashMediaSource`."
      },
      {
        "user": "jiafei1986",
        "created_at": "2017-06-19T14:49:03Z",
        "body": "@ojw28 Thank you very very much, i just check the code, found the playback URL does not end with mpd, so the sample code will use ExtractorMediaSource,  now i force to use DashMediaSource, the problem fixed.  THANK YOU !!!!"
      }
    ]
  },
  {
    "number": 2961,
    "title": "Play live smoothstream video without manifest refreshing",
    "created_at": "2017-06-16T10:56:16Z",
    "closed_at": "2017-06-16T10:58:06Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2961",
    "body": "### Issue description\r\nIs it possible to play live smoothstream video without downloading manifest file every 5 seconds?\r\n\r\n### Reproduction steps\r\nPlay any SS live video.\r\n\r\n### Version of ExoPlayer being used\r\n2.2.0\r\n\r\n### Device(s) and version(s) of Android being used\r\nNexus player 7.1.2\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2961/comments",
    "author": "bivenik",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-06-16T10:58:06Z",
        "body": "This is already tracked by #855."
      }
    ]
  },
  {
    "number": 2958,
    "title": "Question on the meaning of drm_license_url field",
    "created_at": "2017-06-15T14:17:07Z",
    "closed_at": "2017-06-15T14:20:23Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2958",
    "body": "Hi,\r\nI have just a question / doubt about drm_license_url in media.exolist.json.\r\nI thought it was the override of licenseUrl. \r\n\r\nSo, _byte[] executeKeyRequest(UUID uuid, KeyRequest request)_ method in class _HttpMediaDrmCallback.java_ in my opinion should be edited as snippet below:\r\n\r\n_\\-    String url = request.getDefaultUrl();\r\n\\-    if (TextUtils.isEmpty(url)) {\r\n\\-      url = defaultUrl;\r\n\\-    }\r\n\\+      String url = defaultUrl;\r\n\\+      if (TextUtils.isEmpty(url)) {\r\n\\+          url = request.getDefaultUrl();\r\n\\+      }_\r\n\r\nCould you explain me the real meaning of it?\r\n\r\nThank you in advance",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2958/comments",
    "author": "Gian84",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-06-15T14:20:23Z",
        "body": "The code is correct how it is currently. drm_license_url is the URL to use if there isn't one specified in the `KeyRequest`."
      }
    ]
  },
  {
    "number": 2954,
    "title": "Players how to set up a proxy server?",
    "created_at": "2017-06-15T03:38:38Z",
    "closed_at": "2017-06-15T10:26:14Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2954",
    "body": "I want to set a socket or HTTP proxy,What do I do?\r\nthanks!",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2954/comments",
    "author": "LittleSunZ",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2017-06-15T08:06:01Z",
        "body": "ExoPlayer will generally request whatever URI you provide, and my understanding is that the system will use a proxy server if one is configured in Settings for the relevant network connection. If you're running a local proxy server you'd just pass a URI referring to localhost. If that doesn't answer your question please clarify what you're trying to do."
      },
      {
        "user": "ojw28",
        "created_at": "2017-06-15T10:26:14Z",
        "body": "This sounds outside the scope of this issue tracker."
      }
    ]
  },
  {
    "number": 2947,
    "title": "Filter out unwanted text tracks returned from MappedTrackInfo",
    "created_at": "2017-06-13T19:24:39Z",
    "closed_at": "2017-06-14T19:56:07Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2947",
    "body": "Hi,\r\nI'm wondering if there's a way to filter out tracks based on their mimeType so that they don't show up when I call `MappedTrackInfo.getTrackGroups(..)`.\r\nTo be more specific we have a DASH stream that provides both VTT and TTML subtitles for each language, but I only want get the ones for TTML so that it's more feasible to render available tracks in the UI.\r\n\r\nAlso, when it comes to selecting language for a text or audio track during playback, is it ok to use the `DefaultTrackSelector.setParameters(..)` approach? I´ve seen indication on this in other issues here but just want to verify this.\r\n\r\nIn Exoplayer 1.x this filtering was possible by injecting an instance of `TtmlParser()` into the `TextRenderer`, is there some equivalent in 2.x?\r\nI'm Currently using 2.4.1\r\n\r\nThanks\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2947/comments",
    "author": "jonhan",
    "comments": [
      {
        "user": "AquilesCanta",
        "created_at": "2017-06-14T09:13:59Z",
        "body": "> I'm wondering if there's a way to filter out tracks based on their mimeType so that they don't show up when I call MappedTrackInfo.getTrackGroups(..).\r\n\r\nIf this is just to prevent the selector from selecting the VTT streams, I don't think this is the best way. I can think of two ways of easily achieving this:\r\n- (Best way I can think of) Subclass DefaultTrackSelector and override selectTextTrack so that it prefers TTML over VTT.\r\n- Pass a SubtitleDecoderFactory that does not report support for WebVTT. This would be the answer to what you ask about specifically, I think.\r\n\r\n> is it ok to use the DefaultTrackSelector.setParameters(..) approach\r\n\r\nYes. It's the way to parametrize the default track selector. The other way is setting overrides (you can look into the demo app for more info on this).\r\n\r\nOut of curiosity, could you elaborate on why you prefer TTML subtitles? Please close the issue if this answers your question."
      },
      {
        "user": "jonhan",
        "created_at": "2017-06-14T19:55:23Z",
        "body": "Thanks for the answer! yes what I want to achieve is basically that TrackSelector never reports the VTT subtitles when I list available subtitles. I guess it could also be of interest to subclass DefaultTrackSelector to make sure that it selects the TTML subtitle if I select language using setParameters().\r\n\r\nRegarding our choice of TTML subtitles, I have just gotten instructions from our transcoding guy that one reason we should prefer them is that they have support for dynamic timing."
      }
    ]
  },
  {
    "number": 2946,
    "title": "Crossfade implementation question",
    "created_at": "2017-06-13T17:09:37Z",
    "closed_at": "2017-06-15T14:14:43Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2946",
    "body": "Hello,\r\n\r\nI want to implement a BPM matching Crossfade feature using Exoplayer. Basically I have a concept how it should work, but I'm not sure which Exoplayer classes to modify to achieve my goals.\r\n\r\nLet me please first write how I want to do this so you can understand the case.\r\nAs you probably know BPM Crossfade let to seamlessly switch from one song to another. Additionally it adjusts second song tempo to first song tempo during the crossfade.\r\nSo the plan is as follows:\r\n1. Load song A and B so they both starts to buffer.\r\n2. Decoded samples of song A and B are stored in buffers BF1 and BF2.\r\n3. There is a class called MUX which is a main buffer and contains both songs buffers BF1 and BF2. MUX provides audio samples to the Player. Samples provided to the Player are BF1 samples or mixed samples from BF1 and BF2 if there is a crossfade.\r\n4. If buffer reach the crossfade point then samples are send to Analyser class so it can analyse samples from both buffers and modify them for crossfade. Analyser sends modified samples to MUX which updated it's main buffer.\r\n5. When crossfade is finished load next song from playlist\r\n\r\nSo basically which class to extend to create class like MUX? Should it be some custom MediaSource? How can I access BF1 and BF2? \r\n\r\nI've also read somewhere that you don't anymore buffer songs that are not active. How can I overcome this as I want to manage second song buffer.\r\n\r\nI hope you can guide me a little bit. I decided to ask question here and not on StackOverflow as you have much deeper knowledge of ExoPlayer structure.\r\n\r\nThanks in advance for any help!",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2946/comments",
    "author": "marcin-adamczewski",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-06-15T14:14:43Z",
        "body": "This is quite far outside the scope of this issue tracker. We're unable to offer advice on this kind of large customization effort; we simply don't have enough time. Sorry."
      }
    ]
  },
  {
    "number": 2938,
    "title": "IMA Support",
    "created_at": "2017-06-12T17:23:50Z",
    "closed_at": "2017-06-12T18:27:47Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2938",
    "body": "Hi, I'm needing IMA extension support in stable reléase, could you please confirm me when will be available?.\r\n\r\nthanks!.\r\n\r\nRelated:\r\n#2617 ",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2938/comments",
    "author": "imarenco",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-06-12T18:27:47Z",
        "body": "We do not have an ETA at this moment, and still need to fix some behavior (e.g. how seeking interacts with ads in the timeline) before we can release to stable. Please follow #2617."
      },
      {
        "user": "ManojJangra",
        "created_at": "2017-06-20T11:43:12Z",
        "body": "Please guide way of using  IMA extension in the ExoPlayer in our app."
      },
      {
        "user": "ojw28",
        "created_at": "2017-06-20T12:41:06Z",
        "body": "It's not done yet, which is why #2617 is still open. Updates will appear there when available."
      }
    ]
  },
  {
    "number": 2934,
    "title": "Player Random playlist player",
    "created_at": "2017-06-12T07:19:34Z",
    "closed_at": "2017-08-04T22:59:50Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2934",
    "body": "Music player  playlist ,Order play use `ConcatenatingMediaSource` class ,\r\nWhat is random play?\r\n\r\nHow to achieve？",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2934/comments",
    "author": "HayDar-Android",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2017-06-12T07:22:05Z",
        "body": "Can you just shuffle the array of MediaSources before passing it to ConcatenatingMediaSource's constructor? Or do you need something different?"
      },
      {
        "user": "HayDar-Android",
        "created_at": "2017-06-12T07:25:12Z",
        "body": "@andrewlewis \r\nIs random in the playing process."
      },
      {
        "user": "HayDar-Android",
        "created_at": "2017-06-12T07:26:36Z",
        "body": "@andrewlewis \r\nAfter playing the next random one, rather than automatically the next one。"
      },
      {
        "user": "ojw28",
        "created_at": "2017-08-04T22:59:50Z",
        "body": "It's unclear what's being asked here. Closing due to lack of clarity."
      }
    ]
  },
  {
    "number": 2925,
    "title": "How to synchronize Exoplayer to HDMI output  ",
    "created_at": "2017-06-08T11:52:56Z",
    "closed_at": "2017-06-09T09:35:50Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2925",
    "body": "\r\nHi\r\n\r\nI am using the Exoplayer on Android STB which of course has a HDMI output ,at the AndroidTV OS I can synchronize the STB HDMI output to the TV HDMI input with a lot of resolution,interlace or progressive  and sample rate (HZ) options.\r\nFor the streaming to the STB I am using DASH+HEVC and alos DASH+AVC,\r\nThe encoding frame rate which I encoding is some times 1080p at 25fps and some time 50fps (for example sport shows) .\r\n\r\nThe Exoplayer output is synchronize to the STB  and working well just when I am streaming 25fps and the STB output is 1080P@25hz ,\r\nthe problem is when I play stream of 50fps it  is never synchronize to the STB output even when I configure the STB output to 1080i/p@50hz\r\nThe second problem- not all the TVs have 1080 25hz or 50hz so the STB can not synchronize  to the STB at this HZ so even at stream with 25fps I can not see good.\r\n\r\nMy Q :How can I synchronize the Exoplayer output to STB HDMI output  even if the stream fps is not the same to HZ STB output?\r\n\r\n\r\n\r\n\r\n### Version of ExoPlayer being used\r\nExoplayer 2.1.1\r\n\r\n\r\n### Device(s) and version(s) of Android being used\r\nAndroidTV version N\r\n\r\nThx \r\nErez\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2925/comments",
    "author": "ErezNe",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-06-08T13:31:51Z",
        "body": "This isn't something we support directly, and it's difficult to come up with a general purpose solution. It is possible to manually set the preferred refresh rate, if you want to set it to match the content being played. You can query the available rates using:\r\n```\r\nDisplay display = activity.getWindowManager().getDefaultDisplay();\r\nfloat[] refreshRates = display.getSupportedRefreshRates();\r\n```\r\nAnd set your preferred rate using:\r\n```\r\nWindow window = activity.getWindow();\r\nWindowManager.LayoutParams layoutParams = window.getAttributes();\r\nlayoutParams.preferredRefreshRate = refreshRates[preferredRateIndex];\r\nwindow.setAttributes(layoutParams);\r\n```\r\n\r\nNote that in practice, most people opt not to do this. TVs often handle mode changes in a very ugly way (e.g. screen flashing black for a while), and of course if you set the refresh rate to something like 24Hz, that means any playback control animations (or whatever) are all going to run at 24Hz too, which is going to look pretty janky. You can mitigate this to some extent by selecting the highest refresh rate that's a clean multiple of the content FPS (so if the content is 24fps you should probably prefer 48Hz to 24Hz, if both are available).\r\n\r\nNote that we do some frame release timestamp adjustments inside of the player to do a pretty decent job of mapping 24fps (and other fps values) onto the default 60Hz display refresh. In practice these adjustments do a pretty good job of minimizing the issue."
      },
      {
        "user": "ErezNe",
        "created_at": "2017-06-09T07:41:51Z",
        "body": "where can I change the  mapping of 24 fps with  60hz   to 25 fps witn 50hz?\r\nThx\r\nErez"
      },
      {
        "user": "ojw28",
        "created_at": "2017-06-09T09:35:50Z",
        "body": "You can look in the `Format`s of the selected tracks to see what their frame-rates are. Alternatively, if you control the serving side of whatever you're developing, you may well be able to deliver the frame-rate in some out-of-band metadata. You can then decide whether you want to switch, and switch as described above.\r\n\r\nThis is not something we support directly in the library, and so we're not in a position to provide detailed advice."
      },
      {
        "user": "ErezNe",
        "created_at": "2017-06-13T08:27:42Z",
        "body": "OK, understood but where the \"**frame release timestamp adjustment**\" mechanism is configured?\r\n\r\n\"Note that we do some **frame release timestamp adjustments** inside of the player to do a pretty decent job of mapping 24fps (and other fps values) onto the default 60Hz display refresh. In practice these adjustments do a pretty good job of minimizing the issue.\""
      },
      {
        "user": "ojw28",
        "created_at": "2017-06-13T09:04:08Z",
        "body": "In `VideoFrameReleaseTimeHelper`."
      },
      {
        "user": "ErezNe",
        "created_at": "2017-07-01T18:39:48Z",
        "body": "Hi  in VideoFrameReleaseTimeHelper() of VideoFrameReleaseTimeHelper.java file.\r\n\r\nin getDefaultFrameRefreshRate() I controlled window params I did the following changes: \r\n\r\nprivate static float getDefaultDisplayRefreshRate(Context context) {\r\n\r\nWindowManager manager =\r\n\r\n(WindowManager)context.getSystemService(Context.WINDOW_SERVICE);\r\n\r\nif(manager.getDefaultDisplay().getRefreshRate() &gt; 50){\r\n\r\nreturn 50;\r\n\r\n}\r\n\r\nif(manager.getDefaultDisplay().getRefreshRate() &lt; 24){\r\n\r\nreturn 24;\r\n\r\n}\r\n\r\nreturn manager.getDefaultDisplay().getRefreshRate();\r\n\r\n}\r\n\r\nAfter this changes my stream which  is 25fps  working fine with 25Hz display refresh and now also with 50HZ display refresh but not with any other display refresh like 60HZ or any display refresh which is not multiplication of complete number of 25 .\r\ncan you guide me how to make timestamp adjustments inside of the player to do mapping 25fps onto the  60Hz display refresh ?\r\nThx\r\n"
      },
      {
        "user": "ojw28",
        "created_at": "2017-07-03T11:06:25Z",
        "body": "I don't understand what the question is. What does it mean to \"work fine\" and \"not work fine\" in this context? Whenever the display refresh rate isn't a clean multiple of the source refresh rate, the player necessarily needs to display some frames for a greater period of time than others. For example a 2:3 pattern is common for playing 24fps content on 60Hz displays. ExoPlayer already contains logic in `VideoFrameReleaseTimeHelper` to do this in a the best way. You shouldn't need to be making any adjustments to the code for these use cases."
      },
      {
        "user": "ErezNe",
        "created_at": "2017-07-03T15:01:50Z",
        "body": "Hi\r\n\"Work fine\" I mean the video is playing smooth on the TV screen ,\"not work fine\" the video is not smooth and it looks like I have lost frames on the video stream,The best way to see it when on the video has running news bar or the movies credits is running .\r\nIs there a  logic in VideoFrameReleaseTimeHelper for playing **25fps** content on **60HZ?**\r\n\r\nErez"
      },
      {
        "user": "ojw28",
        "created_at": "2017-07-03T16:31:39Z",
        "body": "It's just not possible to perfectly map 25fps content onto 60Hz. The fact 60/25 isn't a clean multiple is a fundamental limitation.\r\n\r\nVideoFrameReleaseTimeHelper will cause 25fps content to be played in a 2:3 pattern (e.g. every other frame displayed for 2 display VSYNCs, with the ones in between displayed for 3 display VSYNCs). Periodically it's necessary to insert an extra 2 display VSYNC frame, since the 2:3 pattern still doesn't get you to 60Hz. I think this approach is more or less the best that can be done without actually changing the playback rate of the media. It's not particularly great for 25fps content. Although in practice we tend to see way more 24fps content, which can use a 2:3 pattern without the additional 2 display VSYNC frame insertion.\r\n\r\nSome other notes:\r\n- Some devices may do additional smoothing after frame release. This is particularly true of AndroidTV devices. This is not something we control, however.\r\n- AndroidTV devices may implement their own frame-rate conversion logic in tunneled mode (e.g. where they actually generate 30 of 60 frames to render by interpolation).\r\n- Regular Android decoders do not implement frame-rate conversion. Also, some purists would claim frame-rate conversion is fundamentally bad (because it results in rendering frames that the device has created, that aren't part of the original media).\r\n- Some devices support changing of the actual display rate, as already described above in this thread."
      }
    ]
  },
  {
    "number": 2922,
    "title": "ConcatenatingMediaSource ,a single seekbar",
    "created_at": "2017-06-08T07:12:52Z",
    "closed_at": "2017-06-08T07:19:59Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2922",
    "body": "dear author:\r\n    we hava two or more  mp4 url,and we use ConcatenatingMediaSource, we want it play sequent，and it work as we want, except seekbar,  seekbar will reset when play next.\r\n     my question is \r\n     a url mp4 file duration is 200,b url mp4 file duration is 300 and seekbar would be 500, not 200 change to 300,my english is poor ,Do I make myself clear。Look forward to your reply \r\n     ",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2922/comments",
    "author": "shoyu666",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2017-06-08T07:19:59Z",
        "body": "See #2122."
      },
      {
        "user": "shoyu666",
        "created_at": "2017-06-08T07:33:11Z",
        "body": "@andrewlewis \r\n    thanks \r\n   showMultiWindowTimeBar works fine"
      }
    ]
  },
  {
    "number": 2917,
    "title": "Intended uses of setSelectionOverride and setRendererDisabled [Question]",
    "created_at": "2017-06-07T19:07:40Z",
    "closed_at": "2017-06-07T21:41:23Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2917",
    "body": "I'm trying to understand the difference between these two \"options\".\r\n\r\nCurrently, my understanding is that `setRendererDisabled` is for disabling the renderer completely, regardless of the overrides.  `setSelectionOverrides` is for selecting a different track to be rendered by the renderer, French text track vs an English text track.\r\n\r\nIs this correct?\r\n\r\nI have seen instances, with a text track, that you just set and clear overrides to enable/disable them.  If I wanted to toggle the text track on and off, should I use `setRendererDisabled` or `setSelectionOverrides`?\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2917/comments",
    "author": "ghost",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-06-07T21:41:23Z",
        "body": "> Is this correct?\r\n\r\nYes :).\r\n\r\n> If I wanted to toggle the text track on and off, should I use setRendererDisabled or setSelectionOverrides?\r\n\r\nIf you're just playing a single video then I don't think it makes any difference.\r\n\r\nIt does make a difference if you're playing media that contains multiple periods. For example if you've concatenated multiple media items together using `ConcatenatingMediaSource`, or if you're playing a multi-period DASH stream. In these cases the available tracks can be different moving from period to period. Calling `setSelectionOverride` sets an override that's specific for a set of available tracks. So if you move to another period that has a different set of available tracks, the override wont apply. Disabling the renderer will apply across all periods."
      },
      {
        "user": "ghost",
        "created_at": "2017-06-08T14:06:13Z",
        "body": "I would like to note that  when using the overrides seems to provide a smoother playback experience.  Disabling a renderer causes the player to pause for a second and then resume."
      },
      {
        "user": "ojw28",
        "created_at": "2017-06-08T14:10:00Z",
        "body": "I do not see that issue in the demo app when disabling via the track selector. Are you sure? Please file an issue with specific reproduction steps in the demo app if so."
      }
    ]
  },
  {
    "number": 2914,
    "title": "Get NAME attritube of a track",
    "created_at": "2017-06-07T08:46:58Z",
    "closed_at": "2017-06-07T08:54:58Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2914",
    "body": "I have a HLS url with the content below:\r\n```java\r\n#EXTM3U\r\n#EXT-X-VERSION:3\r\n#EXT-X-STREAM-INF:BANDWIDTH=2196608,NAME=\"source\",CODECS=\"avc1.66.30\",RESOLUTION=640x360\r\nchunklist_w1690814161_b2196608_t64c291cmNl.m3u8\r\n#EXT-X-STREAM-INF:BANDWIDTH=596608,NAME=\"160p\",CODECS=\"avc1.66.30\",RESOLUTION=640x160\r\nchunklist_w1690814161_b596608_t64MTYwcA==.m3u8\r\n#EXT-X-STREAM-INF:BANDWIDTH=796608,NAME=\"240p\",CODECS=\"avc1.66.30\",RESOLUTION=640x240\r\nchunklist_w1690814161_b796608_t64MjQwcA==.m3u8\r\n#EXT-X-STREAM-INF:BANDWIDTH=1046608,NAME=\"360p\",CODECS=\"avc1.66.30\",RESOLUTION=640x360\r\nchunklist_w1690814161_b1046608_t64MzYwcA==.m3u8\r\n```\r\nIn the ExoPlayer demo app, with the Format object, we can get BANDWIDTH, CODECS, RESOLUTION attributes except the NAME attribute. How can I get the NAME attribute?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2914/comments",
    "author": "nguyenhoanglam",
    "comments": [
      {
        "user": "AquilesCanta",
        "created_at": "2017-06-07T08:54:58Z",
        "body": "Listen for `ExoPlayer#EventListener#onTimelineChanged`. The manifest argument should carry an `HlsManifest` object, which contains a reference to the master playlist and a snapshot of the media playlist. Playlists (master and media) carry all their tags in the field `tags`. You can map each `EXT-X-STREAM-INF` to a format using the rest of the attributes. Unfortunately there is no better way, as we don't directly support this attribute. As far as I know, it is not defined in the spec."
      }
    ]
  },
  {
    "number": 2911,
    "title": "Is there a way to check if the dash stream is live or not?",
    "created_at": "2017-06-07T00:22:01Z",
    "closed_at": "2017-06-07T12:21:22Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2911",
    "body": "Hi\r\nI am using the exoplayer2 to play both vod and live stream, Is there a listener that can get the manifest?  so i can check if the dash is live or not? I was looking in the playerActivity of demo app but can not found it. \r\n\r\nThanks\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2911/comments",
    "author": "jiafei1986",
    "comments": [
      {
        "user": "botondbutuza",
        "created_at": "2017-06-07T10:22:50Z",
        "body": "Not part of the Exo team, but `player.isCurrentWindowDynamic()` is the method you're looking for."
      },
      {
        "user": "jiafei1986",
        "created_at": "2017-06-08T00:10:59Z",
        "body": "@botondbutuza Thank you very much, I will try it. "
      }
    ]
  },
  {
    "number": 2908,
    "title": "The urgent ！The urgent ！ConcatenatingMediaSource automatically play the next event where to get?",
    "created_at": "2017-06-06T08:21:57Z",
    "closed_at": "2017-06-06T09:22:34Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2908",
    "body": "```\r\n extractorMediaSource = new ExtractorMediaSource[list.size()];\r\n for (int i = 0; i < list.size(); i++) {\r\n        extractorMediaSource[i] = new ExtractorMediaSource(Uri.parse(list.get(i).getMusicBean().getPath()), dataSourceFactory, extractorsFactory, null, null);\r\n}\r\n concatenatingMediaSource = new ConcatenatingMediaSource(extractorMediaSource);\r\nconcatenatingMediaSource.releaseSource();\r\nloopingMediaSource = new LoopingMediaSource(concatenatingMediaSource);\r\n mSimpleExoPlayer.prepare(loopingMediaSource);\r\n```\r\n\r\n\r\nI would like to know, `ConcatenatingMediaSource` automatically play the next event where to get?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2908/comments",
    "author": "HayDar-Android",
    "comments": [
      {
        "user": "HayDar-Android",
        "created_at": "2017-06-06T08:23:17Z",
        "body": "The urgent"
      },
      {
        "user": "andrewlewis",
        "created_at": "2017-06-06T09:06:37Z",
        "body": "I'm not sure what you're asking, but if you want to find out when the player starts playing the next playlist item you can use `onPositionDiscontinuity`. See #2053."
      },
      {
        "user": "HayDar-Android",
        "created_at": "2017-06-06T09:22:34Z",
        "body": "@andrewlewis thanks!"
      }
    ]
  },
  {
    "number": 2899,
    "title": "Stop video from looping",
    "created_at": "2017-06-02T15:10:07Z",
    "closed_at": "2017-06-02T15:21:28Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2899",
    "body": "Is there any way to stop a video from looping (e.g. after a button press)? Seems that  `onPlayerStateChanged` is not fired for `LoopingMediaSource` when a video ends (or at any other state other than the beginning). I don't want to interrupt during the playback. \r\n\r\n### Version of ExoPlayer being used\r\nCurrently testing on `2.2.0`, not sure if it's any different later on.\r\n\r\n### Device(s) and version(s) of Android being used\r\nGalaxy S7, 7.0.0\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2899/comments",
    "author": "radko93",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-06-02T15:13:05Z",
        "body": "In the `dev-v2` branch there's an `ExoPlayer.setRepeatMode` method that allows looping behavior to be toggled on and off. It's intended that you should use this rather than `LoopingMediaSource` except for certain niche use cases.\r\n\r\nWill that let you do what you want?"
      },
      {
        "user": "radko93",
        "created_at": "2017-06-02T15:21:28Z",
        "body": "Yeah, I missed this while searching the repo. Waiting for the release then, thanks!"
      }
    ]
  },
  {
    "number": 2898,
    "title": "Expose start and end points of ClippingMediaSource in UI, so that the user can adjust them",
    "created_at": "2017-06-02T11:51:06Z",
    "closed_at": "2017-06-02T11:58:52Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2898",
    "body": "*** ISSUES THAT IGNORE THIS TEMPLATE WILL BE CLOSED WITHOUT INVESTIGATION ***\r\n\r\n\r\n\r\n### Issue description\r\nI want to let the user chose the start and end points of videos in a playlist. For this, the full duration of videos should be loaded, and the user be able to drag trim in/out points. Then, at playback, these points should be taken into consideration.\r\n\r\nI did not find a built in way to achieve this, so now I'm relying on seeks and some hacks in the UI, but would be nice if it would be supported directly by ExoPlayer. \r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2898/comments",
    "author": "b0g8",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-06-02T11:58:52Z",
        "body": "This sounds niche enough for us to not support it directly. I'd suggest you implement your own UI components for this."
      }
    ]
  },
  {
    "number": 2894,
    "title": "Why ExoPlayer requires ACCESS_WIFI_STATE permission ?",
    "created_at": "2017-06-01T13:41:10Z",
    "closed_at": "2017-06-01T13:58:26Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2894",
    "body": "### Issue description\r\nI use a version of ExoPlayer (I have not checked is still required in more recent versions but I don't want to change my ExoPlayer version) where there is a ACCESS_WIFI_STATE permission in the ExoPlayer manifest.\r\n<uses-permission android:name=\"android.permission.ACCESS_WIFI_STATE\"/>\r\n\r\nThe problem is that it adds a permission to my project and will block the automatic updates on the store. So I would like to remove this permission. It seems that my project works properly but I would like to be sure that it will not induce problem.\r\n\r\nWhat is the purpose of this ACCESS_WIFI_STATE permission ? Can I remove it safely ?\r\n\r\n### Reproduction steps\r\nAdd ExoPlayer to a project. It adds a ACCESS_WIFI_STATE permission to the project which blocks the automatic updates on Google Play.\r\n\r\n### Link to test content\r\nNone.\r\n\r\n### Version of ExoPlayer being used\r\nVersion 1.x (I don't know exactly which one).\r\n\r\n### Device(s) and version(s) of Android being used\r\nAll.\r\n\r\n### A full bug report captured from the device\r\nN/A\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2894/comments",
    "author": "RegisAG",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-06-01T13:58:26Z",
        "body": "We removed this permission approximately 2 years ago. I don't think it was ever required, so likely it was added unintentionally and later removed. Obviously we can't fix versions going backward in time, so you should upgrade to either the latest 1.x or latest 2.x version if you a version with the permission removed.\r\n\r\nYou can probably remove it safely from the version you're using, yes."
      }
    ]
  },
  {
    "number": 2890,
    "title": "Set the volume of multiple MediaSource's in a MergingMediaSource",
    "created_at": "2017-05-31T17:19:21Z",
    "closed_at": "2017-05-31T19:04:37Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2890",
    "body": "Is it possible to have two `MediaSource`'s in a configuation like:\r\n\r\n```\r\nMediaSource audio = new ExtractorMediaSource(Uri.parse(\".../audio.mp3\")...);\r\nMediaSource video = new ExtractorMediaSource(Uri.parse(\".../video.mp4\")...);\r\nplayer.prepare(new LoopingMediaSource(new MergingMediaSource(video, audio)));\r\n```\r\n\r\nWhere both have an audio track playing at the same time, and you can set the volume of each independently? E.g. video at 50% and audio at 75% in the above example.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2890/comments",
    "author": "jmgirven",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-05-31T19:04:37Z",
        "body": "We do not support synchronized playback within a single player of multiple audio tracks. You'd have to do some quite in-depth customization to support that kind of use case, which is beyond the scope of this issue tracker."
      }
    ]
  },
  {
    "number": 2886,
    "title": "How to determine when a DASH media segment has been requested and received.",
    "created_at": "2017-05-30T10:14:13Z",
    "closed_at": "2017-05-31T08:59:23Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2886",
    "body": "Hi everyone. I'd like to determine at the end of the video how many segments i have requested and received\r\nThanks",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2886/comments",
    "author": "qlthd",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-05-31T08:59:23Z",
        "body": "`DashMediaSource` takes a `AdaptiveMediaSourceEventListener` argument through its constructor, which is invoked every time a load is started/stopped/canceled/completed. You should be able to do some counting in your listener implementation to figure this out."
      }
    ]
  },
  {
    "number": 2883,
    "title": "Audio visualization and buffer access crash",
    "created_at": "2017-05-29T19:23:52Z",
    "closed_at": "2017-05-29T21:36:16Z",
    "labels": [
      "question",
      "wont fix: infeasible"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2883",
    "body": "I have created AudioVisualizer based on issue #1449, by extending MediaCodecAudioRenderer and overriding processOutputBuffer() and everything works fine while audio is playing, but the problem shows up when songs are being changed, my app sometimes crashes on single line in my native c++ code that reads from ByteBuffer that I obtained in processOutputBuffer(), so **my question is how can I know if I should read from ByteBuffer that I receive** while the songs are being changed. I have seen in MediaCodec source code that there are calls to buffer.setAccessible(false), but it is colored red (because it cannot be resolved) and I also don't have that method available when I import java.nio.ByteBuffer.\r\n\r\nAlso, the buffer is only read, it is not manipulated in any other way, relevant samples are copied and cached elsewhere.\r\n\r\nThis is my overriden processOutputBuffer() method:\r\n\r\n```\r\n\r\n@Override\r\n    protected boolean processOutputBuffer( long positionUs, long elapsedRealtimeUs, MediaCodec codec, ByteBuffer buffer, int bufferIndex, int bufferFlags, long bufferPresentationTimeUs, boolean shouldSkip ) throws ExoPlaybackException\r\n    {\r\n        boolean fullyProcessed;\r\n\r\n\r\n\r\n\r\n            //Check whatever we can for info if we should send this buffer\r\n            if ( mEnabled && mOldBufferIndex != bufferIndex && !shouldSkip && mBufferReceiver != null && buffer != null && bufferFlags == 0 )\r\n            {\r\n                //Send buffer for visualization purposes\r\n                mBufferReceiver.processBuffer( buffer, buffer.limit(), bufferPresentationTimeUs, mPcmFrameSize, mOutputSampleRate, positionUs );\r\n\r\n                //Remember buffer that we used now, so we don't send same one again ( all buffers are processed in one run )\r\n                mOldBufferIndex = bufferIndex;\r\n            }\r\n        \r\n\r\n\r\n         \r\n        fullyProcessed = super.processOutputBuffer( positionUs,\r\n                elapsedRealtimeUs,\r\n                codec,\r\n                buffer,\r\n                bufferIndex,\r\n                bufferFlags,\r\n                bufferPresentationTimeUs,\r\n                shouldSkip );\r\n\r\n\r\n\r\n\r\n        return fullyProcessed;\r\n    }\r\n\r\n```",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2883/comments",
    "author": "kvecoman",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-05-29T21:36:16Z",
        "body": "As long as you're handling the buffer synchronously in your processBuffer call, I'm pretty sure you should always have access in `processOutputBuffer` (prior to `super.processOutputBuffer` being called). You could also take a look at how/when buffers are being fed into `AudioTrack` from the regular `processOutputBuffer` implementation. The buffers must be valid at those points.\r\n\r\nUnfortunately, since this is a customization rather than an issue with the library itself, we're unable to help further on this issue tracker."
      }
    ]
  },
  {
    "number": 2881,
    "title": "E-AC3 support for HLS, Smooth & DASH playback available?",
    "created_at": "2017-05-29T11:54:57Z",
    "closed_at": "2017-05-31T09:11:06Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2881",
    "body": "ExoPlayer Version 2.3 (Demo Player from Android PlayStore)\r\n\r\nThe player throws error saying \"Media includes audio track, but none are playable by this device\" when we try to play E-AC3 audio in HLS, Smooth or DASH. Is there a way to playback EAC3 using software decoding or pass through to TV? Where as it plays AC3 content fine in HLS, Smooth and DASH.\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2881/comments",
    "author": "nataraajc",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2017-05-31T09:11:06Z",
        "body": "E-AC-3 can be played via HDMI passthrough where the connected device advertises support. It is possible for a devices to advertise support AC-3 but not E-AC-3.\r\n\r\nSee #2148 for more information on passthrough and on-device decoding of these formats."
      }
    ]
  },
  {
    "number": 2878,
    "title": "Searched too many bytes when pressing the rewind button ",
    "created_at": "2017-05-28T13:59:38Z",
    "closed_at": "2017-05-29T21:27:00Z",
    "labels": [
      "question",
      "wont fix: infeasible"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2878",
    "body": "I have an implementation of exoplayer where it can play encrypted files offline.\r\nThe problem is when I press the rewind button I get this exception sometimes and playback stops:\r\n```\r\ncom.google.android.exoplayer2.ParserException: Searched too many bytes.\r\n    at com.google.android.exoplayer2.extractor.mp3.Mp3Extractor.synchronize(Mp3Extractor.java:229)\r\n    at com.google.android.exoplayer2.extractor.mp3.Mp3Extractor.read(Mp3Extractor.java:143)\r\n    at com.google.android.exoplayer2.source.ExtractorMediaPeriod$ExtractingLoadable.load(ExtractorMediaPeriod.java:635)\r\n    at com.google.android.exoplayer2.upstream.Loader$LoadTask.run(Loader.java:295)\r\n    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:390)\r\n    at java.util.concurrent.FutureTask.run(FutureTask.java:234)\r\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1080)\r\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:573)\r\n```\r\nI tried to investigate inside `Mp3Extractor` But all I can find is this snippet:\r\n    \r\n```\r\nif ((candidateSynchronizedHeaderData != 0\r\n      && (headerData & HEADER_MASK) != (candidateSynchronizedHeaderData & HEADER_MASK))\r\n      || (frameSize = MpegAudioHeader.getFrameSize(headerData)) == C.LENGTH_UNSET) {\r\n    // The header doesn't match the candidate header or is invalid. Try the next byte offset.\r\n    if (searchedBytes++ == searchLimitBytes) {\r\n      if (!sniffing) {\r\n        throw new ParserException(\"Searched too many bytes.\");\r\n      }\r\n      return false;\r\n    }\r\n    validFrameCount = 0;\r\n    candidateSynchronizedHeaderData = 0;\r\n    if (sniffing) {\r\n      input.resetPeekPosition();\r\n      input.advancePeekPosition(peekedId3Bytes + searchedBytes);\r\n    } else {\r\n      input.skipFully(1);\r\n    }\r\n  }\r\n```\r\n\r\n**Note**\r\nI'm using the code in this issue #2467 \r\n```\r\npublic final class EncryptedFileDataSource implements DataSource {\r\n    private final TransferListener<? super EncryptedFileDataSource> mTransferListener;\r\n    private StreamingCipherInputStream mInputStream;\r\n    private Uri mUri;\r\n    private long mBytesRemaining;\r\n    private boolean mOpened;\r\n    private Cipher mCipher;\r\n\r\n    public EncryptedFileDataSource(Cipher cipher, TransferListener<? super EncryptedFileDataSource> listener) {\r\n        mCipher = cipher;\r\n        mTransferListener = listener;\r\n    }\r\n\r\n    @Override\r\n    public long open(DataSpec dataSpec) throws EncryptedFileDataSourceException {\r\n        // if we're open, we shouldn't need to open again, fast-fail\r\n        if (mOpened) {\r\n            return mBytesRemaining;\r\n        }\r\n        // #getUri is part of the contract...\r\n        mUri = dataSpec.uri;\r\n        // put all our throwable work in a single block, wrap the error in a custom Exception\r\n        try {\r\n            setupInputStream();\r\n            skipToPosition(dataSpec);\r\n            computeBytesRemaining(dataSpec);\r\n        } catch (IOException e) {\r\n            throw new EncryptedFileDataSourceException(e);\r\n        }\r\n\r\n        // if we made it this far, we're open\r\n        mOpened = true;\r\n        // notify\r\n        if (mTransferListener != null) {\r\n            mTransferListener.onTransferStart(this, dataSpec);\r\n        }\r\n\r\n        // report\r\n        return mBytesRemaining;\r\n    }\r\n\r\n    private void setupInputStream() throws FileNotFoundException {\r\n        File encryptedFile = new File(mUri.getPath());\r\n        FileInputStream fileInputStream = new FileInputStream(encryptedFile);\r\n        mInputStream = new StreamingCipherInputStream(fileInputStream, mCipher);\r\n    }\r\n\r\n    private void skipToPosition(DataSpec dataSpec) throws IOException {\r\n        mInputStream.forceSkip(dataSpec.position);\r\n    }\r\n\r\n    private void computeBytesRemaining(DataSpec dataSpec) throws IOException {\r\n        if (dataSpec.length != C.LENGTH_UNSET) {\r\n            mBytesRemaining = dataSpec.length;\r\n        } else {\r\n            mBytesRemaining = mInputStream.available();\r\n            if (mBytesRemaining == Integer.MAX_VALUE) {\r\n                mBytesRemaining = C.LENGTH_UNSET;\r\n            }\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public int read(byte[] buffer, int offset, int readLength) throws EncryptedFileDataSourceException {\r\n        // fast-fail if there's 0 quantity requested or we think we've already processed everything\r\n        if (readLength == 0) {\r\n            return 0;\r\n        } else if (mBytesRemaining == 0) {\r\n            return C.RESULT_END_OF_INPUT;\r\n        }\r\n        // constrain the read length and try to read from the cipher input stream\r\n        int bytesToRead = getBytesToRead(readLength);\r\n        int bytesRead;\r\n        try {\r\n            bytesRead = mInputStream.read(buffer, offset, bytesToRead);\r\n        } catch (IOException e) {\r\n            throw new EncryptedFileDataSourceException(e);\r\n        }\r\n        // if we get a -1 that means we failed to read - we're either going to EOF error or broadcast EOF\r\n        if (bytesRead == -1) {\r\n            if (mBytesRemaining != C.LENGTH_UNSET) {\r\n                //throw new EncryptedFileDataSourceException(new EOFException());\r\n            }\r\n            return C.RESULT_END_OF_INPUT;\r\n        }\r\n        // we can't decrement bytes remaining if it's just a flag representation (as opposed to a mutable numeric quantity)\r\n        if (mBytesRemaining != C.LENGTH_UNSET) {\r\n            mBytesRemaining -= bytesRead;\r\n        }\r\n        // notify\r\n        if (mTransferListener != null) {\r\n            mTransferListener.onBytesTransferred(this, bytesRead);\r\n        }\r\n        // report\r\n        return bytesRead;\r\n    }\r\n\r\n    private int getBytesToRead(int bytesToRead) {\r\n        if (mBytesRemaining == C.LENGTH_UNSET) {\r\n            return bytesToRead;\r\n        }\r\n        return (int) Math.min(mBytesRemaining, bytesToRead);\r\n    }\r\n\r\n    @Override\r\n    public Uri getUri() {\r\n        return mUri;\r\n    }\r\n\r\n    @Override\r\n    public void close() throws EncryptedFileDataSourceException {\r\n        mUri = null;\r\n        try {\r\n            if (mInputStream != null) {\r\n                mInputStream.close();\r\n            }\r\n        } catch (IOException e) {\r\n            throw new EncryptedFileDataSourceException(e);\r\n        } finally {\r\n            mInputStream = null;\r\n            if (mOpened) {\r\n                mOpened = false;\r\n                if (mTransferListener != null) {\r\n                    mTransferListener.onTransferEnd(this);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public static final class EncryptedFileDataSourceException extends IOException {\r\n        public EncryptedFileDataSourceException(IOException cause) {\r\n            super(cause);\r\n        }\r\n    }\r\n}\r\n```",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2878/comments",
    "author": "rafaeladel",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-05-29T21:27:00Z",
        "body": "The error you're seeing suggests that the custom `DataSource` component you're using is not correctly handling requests for data at non-zero offsets. We're not able to assist in debugging custom components. Note that we do provide official components for encrypting/decrypting to/from disk (`AesCipherDataSource` and `AesCipherDataSink`).\r\n\r\nIf you're able to reproduce without use of the custom component, please file a new issue."
      }
    ]
  },
  {
    "number": 2874,
    "title": "Is it possible to play images? ",
    "created_at": "2017-05-27T08:03:58Z",
    "closed_at": "2017-05-29T21:46:31Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2874",
    "body": "I'm trying to show .jpeg images for 5 seconds, but they are just skipped when playing. Is it correct to use SingleSampleMediaSource for that purpose? How to do it right?\r\n\r\n```\r\nvoid setPlaylist(List<Track> playlist) {\r\n    MediaSource[] mediaSources = tracksToMediaSources(playlist);\r\n    MediaSource mediaSource = (mediaSources.length == 1)\r\n            ? mediaSources[0]\r\n            : new ConcatenatingMediaSource(mediaSources);\r\n    player.prepare(mediaSource);\r\n    player.setVideoTextureView(textureView);\r\n}\r\n\r\nprivate MediaSource[] tracksToMediaSources(List<Track> playlist) {\r\n    int playlistSize = playlist.size();\r\n    MediaSource[] mediaSources = new MediaSource[playlistSize];\r\n    for (int i = 0; i < playlistSize; ++i) {\r\n        Track track = playlist.get(i);\r\n        Uri trackUri = Uri.parse(track.getUrl());\r\n        switch (track.getType()) {\r\n            case VIDEO:\r\n                mediaSources[i] = new ExtractorMediaSource(trackUri, provideDataSourceFactory(), provideExtractorsFactory(), null, null);\r\n                break;\r\n            case IMAGE:\r\n//--???-->      mediaSources[i] = new SingleSampleMediaSource(trackUri, provideDataSourceFactory(), Format.createImageSampleFormat(null, \"image/jpeg\", null, Format.NO_VALUE, null, null, null), 5000);\r\n                break;\r\n        }\r\n    }\r\n    return mediaSources;\r\n}\r\n```",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2874/comments",
    "author": "mrblrrd",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-05-29T21:46:31Z",
        "body": "We do not provide any built in support for playback of images. You could potentially write your own custom renderer (e.g. `ImageRenderer extends BaseRenderer`) to provide direct support within the player, or just manage displaying of images yourself outside of the player."
      }
    ]
  },
  {
    "number": 2870,
    "title": "ExoPlayer v1 with gradle-3.5-all.zip",
    "created_at": "2017-05-26T12:18:17Z",
    "closed_at": "2017-05-29T06:47:08Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2870",
    "body": "*** ISSUES THAT IGNORE THIS TEMPLATE WILL BE CLOSED WITHOUT INVESTIGATION ***\r\n\r\nBefore filing an issue:\r\n-----------------------\r\n- I was using gradle-3.3-all-zip with ExoPlayer v1 working fine.\r\n\r\nWhen reporting a bug:\r\n-----------------------\r\n-When I tried to upgrade gradle-3.5-all, I couldn't the project on Android Studio\r\n\r\n### Issue description\r\nA problem occurred configuring project ':ExoPlayerSDK'.\r\n> Failed to notify project evaluation listener.\r\n  >org/gradle/api/internal/component/Usage\r\n\r\n### Reproduction steps\r\nJust try to run the sample app after upgrading the gradle wrapper above 3.3 (3.5 or 4-milestone)\r\n\r\n### Link to test content\r\nN/A\r\n\r\n### Version of ExoPlayer being used\r\nrelease-v1\r\n\r\n### Device(s) and version(s) of Android being used\r\nAndroid Studio 2.3.2\r\n\r\n### A full bug report captured from the device\r\n20:10:23.560 [DEBUG] [org.gradle.model.internal.registry.DefaultModelRegistry] Project :ExoPlayerSDK - Registering model element 'tasks.transformClassesWithDexForDebugAndroidTest' (hidden = false)\r\n20:10:23.567 [DEBUG] [org.gradle.model.internal.registry.DefaultModelRegistry] Project :ExoPlayerSDK - Registering model element 'tasks.packageDebugAndroidTest' (hidden = false)\r\n20:10:23.577 [DEBUG] [org.gradle.model.internal.registry.DefaultModelRegistry] Project :ExoPlayerSDK - Registering model element 'tasks.validateSigningDebugAndroidTest' (hidden = false)\r\n20:10:23.579 [DEBUG] [org.gradle.model.internal.registry.DefaultModelRegistry] Project :ExoPlayerSDK - Registering model element 'tasks.installDebugAndroidTest' (hidden = false)\r\n20:10:23.654 [DEBUG] [org.gradle.model.internal.registry.DefaultModelRegistry] Project :ExoPlayerSDK - Registering model element 'tasks.uninstallDebugAndroidTest' (hidden = false)\r\n20:10:23.675 [DEBUG] [org.gradle.model.internal.registry.DefaultModelRegistry] Project :ExoPlayerSDK - Registering model element 'tasks.androidSourcesJar' (hidden = false)\r\n20:10:23.684 [DEBUG] [org.gradle.model.internal.registry.DefaultModelRegistry] Project :ExoPlayerSDK - Registering model element 'tasks.androidJavadocs' (hidden = false)\r\n20:10:23.694 [DEBUG] [org.gradle.model.internal.registry.DefaultModelRegistry] Project :ExoPlayerSDK - Registering model element 'tasks.androidJavadocsJar' (hidden = false)\r\n20:10:23.720 [DEBUG] [org.gradle.model.internal.registry.DefaultModelRegistry] Project :ExoPlayerSDK - Registering model element 'tasks.uploadArchives' (hidden = false)\r\n20:10:23.724 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] \r\n20:10:23.724 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] FAILURE: Build failed with an exception.\r\n20:10:23.726 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] \r\n20:10:23.726 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] * What went wrong:\r\n20:10:23.726 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] A problem occurred configuring project ':ExoPlayerSDK'.\r\n20:10:23.726 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] > Failed to notify project evaluation listener.\r\n20:10:23.727 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]    > org/gradle/api/internal/component/Usage\r\n20:10:23.727 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] \r\n20:10:23.727 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] * Exception is:\r\n20:10:23.730 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] org.gradle.api.ProjectConfigurationException: A problem occurred configuring project ':ExoPlayerSDK'.\r\n20:10:23.730 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.configuration.project.LifecycleProjectEvaluator.addConfigurationFailure(LifecycleProjectEvaluator.java:94)\r\n20:10:23.730 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.configuration.project.LifecycleProjectEvaluator.notifyAfterEvaluate(LifecycleProjectEvaluator.java:89)\r\n20:10:23.730 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.configuration.project.LifecycleProjectEvaluator.doConfigure(LifecycleProjectEvaluator.java:76)\r\n20:10:23.730 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.configuration.project.LifecycleProjectEvaluator.access$000(LifecycleProjectEvaluator.java:33)\r\n20:10:23.731 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.configuration.project.LifecycleProjectEvaluator$1.execute(LifecycleProjectEvaluator.java:53)\r\n20:10:23.731 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.configuration.project.LifecycleProjectEvaluator$1.execute(LifecycleProjectEvaluator.java:50)\r\n20:10:23.732 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.internal.Transformers$4.transform(Transformers.java:169)\r\n20:10:23.733 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:106)\r\n20:10:23.734 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:61)\r\n20:10:23.739 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.configuration.project.LifecycleProjectEvaluator.evaluate(LifecycleProjectEvaluator.java:50)\r\n20:10:23.740 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.api.internal.project.DefaultProject.evaluate(DefaultProject.java:648)\r\n20:10:23.740 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.api.internal.project.DefaultProject.evaluate(DefaultProject.java:126)\r\n20:10:23.740 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.execution.TaskPathProjectEvaluator.configure(TaskPathProjectEvaluator.java:35)\r\n20:10:23.741 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.execution.TaskPathProjectEvaluator.configureHierarchy(TaskPathProjectEvaluator.java:62)\r\n20:10:23.743 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.configuration.DefaultBuildConfigurer.configure(DefaultBuildConfigurer.java:38)\r\n20:10:23.751 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.initialization.DefaultGradleLauncher$ConfigureBuildAction.execute(DefaultGradleLauncher.java:207)\r\n20:10:23.753 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.initialization.DefaultGradleLauncher$ConfigureBuildAction.execute(DefaultGradleLauncher.java:204)\r\n20:10:23.753 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.internal.Transformers$4.transform(Transformers.java:169)\r\n20:10:23.754 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:106)\r\n20:10:23.754 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:56)\r\n20:10:23.754 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.initialization.DefaultGradleLauncher.doBuildStages(DefaultGradleLauncher.java:146)\r\n20:10:23.754 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.initialization.DefaultGradleLauncher.doBuild(DefaultGradleLauncher.java:112)\r\n20:10:23.754 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.initialization.DefaultGradleLauncher.run(DefaultGradleLauncher.java:95)\r\n20:10:23.754 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.launcher.exec.GradleBuildController.run(GradleBuildController.java:66)\r\n20:10:23.754 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.tooling.internal.provider.ExecuteBuildActionRunner.run(ExecuteBuildActionRunner.java:28)\r\n20:10:23.754 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.launcher.exec.ChainingBuildActionRunner.run(ChainingBuildActionRunner.java:35)\r\n20:10:23.754 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.launcher.exec.InProcessBuildActionExecuter.execute(InProcessBuildActionExecuter.java:41)\r\n20:10:23.754 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.launcher.exec.InProcessBuildActionExecuter.execute(InProcessBuildActionExecuter.java:26)\r\n20:10:23.754 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.tooling.internal.provider.ContinuousBuildActionExecuter.execute(ContinuousBuildActionExecuter.java:75)\r\n20:10:23.755 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.tooling.internal.provider.ContinuousBuildActionExecuter.execute(ContinuousBuildActionExecuter.java:49)\r\n20:10:23.755 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.tooling.internal.provider.ServicesSetupBuildActionExecuter.execute(ServicesSetupBuildActionExecuter.java:49)\r\n20:10:23.755 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.tooling.internal.provider.ServicesSetupBuildActionExecuter.execute(ServicesSetupBuildActionExecuter.java:31)\r\n20:10:23.755 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.launcher.daemon.server.exec.ExecuteBuild.doBuild(ExecuteBuild.java:67)\r\n20:10:23.756 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:36)\r\n20:10:23.756 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:120)\r\n20:10:23.756 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.launcher.daemon.server.exec.WatchForDisconnection.execute(WatchForDisconnection.java:37)\r\n20:10:23.756 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:120)\r\n20:10:23.756 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.launcher.daemon.server.exec.ResetDeprecationLogger.execute(ResetDeprecationLogger.java:26)\r\n20:10:23.756 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:120)\r\n20:10:23.756 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.launcher.daemon.server.exec.RequestStopIfSingleUsedDaemon.execute(RequestStopIfSingleUsedDaemon.java:34)\r\n20:10:23.756 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:120)\r\n20:10:23.756 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.launcher.daemon.server.exec.ForwardClientInput$2.call(ForwardClientInput.java:74)\r\n20:10:23.756 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.launcher.daemon.server.exec.ForwardClientInput$2.call(ForwardClientInput.java:72)\r\n20:10:23.757 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.util.Swapper.swap(Swapper.java:38)\r\n20:10:23.757 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.launcher.daemon.server.exec.ForwardClientInput.execute(ForwardClientInput.java:72)\r\n20:10:23.757 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:120)\r\n20:10:23.757 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.launcher.daemon.server.exec.LogAndCheckHealth.execute(LogAndCheckHealth.java:55)\r\n20:10:23.757 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:120)\r\n20:10:23.757 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.launcher.daemon.server.exec.LogToClient.doBuild(LogToClient.java:60)\r\n20:10:23.757 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:36)\r\n20:10:23.757 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:120)\r\n20:10:23.757 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.launcher.daemon.server.exec.EstablishBuildEnvironment.doBuild(EstablishBuildEnvironment.java:72)\r\n20:10:23.758 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:36)\r\n20:10:23.758 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:120)\r\n20:10:23.758 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.launcher.daemon.server.exec.StartBuildOrRespondWithBusy$1.run(StartBuildOrRespondWithBusy.java:50)\r\n20:10:23.759 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.launcher.daemon.server.DaemonStateCoordinator$1.run(DaemonStateCoordinator.java:297)\r\n20:10:23.759 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63)\r\n20:10:23.761 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.internal.concurrent.StoppableExecutorImpl$1.run(StoppableExecutorImpl.java:46)\r\n20:10:23.763 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] Caused by: org.gradle.internal.event.ListenerNotificationException: Failed to notify project evaluation listener.\r\n20:10:23.764 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.internal.event.AbstractBroadcastDispatch.dispatch(AbstractBroadcastDispatch.java:86)\r\n20:10:23.767 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.internal.event.BroadcastDispatch$CompositeDispatch.dispatch(BroadcastDispatch.java:315)\r\n20:10:23.768 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.internal.event.BroadcastDispatch$CompositeDispatch.dispatch(BroadcastDispatch.java:225)\r\n20:10:23.770 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.internal.event.ListenerBroadcast.dispatch(ListenerBroadcast.java:138)\r\n20:10:23.770 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.internal.event.ListenerBroadcast.dispatch(ListenerBroadcast.java:35)\r\n20:10:23.771 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93)\r\n20:10:23.771 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at com.sun.proxy.$Proxy20.afterEvaluate(Unknown Source)\r\n20:10:23.771 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.configuration.project.LifecycleProjectEvaluator.notifyAfterEvaluate(LifecycleProjectEvaluator.java:82)\r\n20:10:23.774 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   ... 56 more\r\n20:10:23.774 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] Caused by: java.lang.NoClassDefFoundError: org/gradle/api/internal/component/Usage\r\n20:10:23.774 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at com.novoda.gradle.release.AndroidArtifacts.from(AndroidArtifacts.groovy:33)\r\n20:10:23.775 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at com.novoda.gradle.release.AndroidArtifacts$from$2.call(Unknown Source)\r\n20:10:23.775 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at com.novoda.gradle.release.ReleasePlugin$_attachArtifacts_closure1_closure3_closure4.doCall(ReleasePlugin.groovy:33)\r\n20:10:23.775 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.api.internal.ClosureBackedAction.execute(ClosureBackedAction.java:71)\r\n20:10:23.776 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.util.ConfigureUtil.configureTarget(ConfigureUtil.java:160)\r\n20:10:23.776 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.util.ConfigureUtil.configure(ConfigureUtil.java:106)\r\n20:10:23.776 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.util.ConfigureUtil$1.execute(ConfigureUtil.java:123)\r\n20:10:23.776 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.api.internal.AbstractPolymorphicDomainObjectContainer.create(AbstractPolymorphicDomainObjectContainer.java:62)\r\n20:10:23.776 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.api.internal.PolymorphicDomainObjectContainerConfigureDelegate._configure(PolymorphicDomainObjectContainerConfigureDelegate.java:45)\r\n20:10:23.776 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.internal.metaobject.ConfigureDelegate.invokeMethod(ConfigureDelegate.java:68)\r\n20:10:23.776 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at com.novoda.gradle.release.ReleasePlugin$_attachArtifacts_closure1_closure3.doCall(ReleasePlugin.groovy:24)\r\n20:10:23.777 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.api.internal.ClosureBackedAction.execute(ClosureBackedAction.java:71)\r\n20:10:23.780 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.util.ConfigureUtil.configureTarget(ConfigureUtil.java:160)\r\n20:10:23.780 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.util.ConfigureUtil.configureSelf(ConfigureUtil.java:148)\r\n20:10:23.780 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.api.internal.AbstractNamedDomainObjectContainer.configure(AbstractNamedDomainObjectContainer.java:79)\r\n20:10:23.781 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.api.internal.AbstractNamedDomainObjectContainer.configure(AbstractNamedDomainObjectContainer.java:34)\r\n20:10:23.782 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.util.ConfigureUtil.configure(ConfigureUtil.java:104)\r\n20:10:23.783 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.util.ConfigureUtil$1.execute(ConfigureUtil.java:123)\r\n20:10:23.784 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.api.publish.internal.DefaultPublishingExtension.publications(DefaultPublishingExtension.java:48)\r\n20:10:23.787 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.api.publish.internal.DefaultPublishingExtension_Decorated.publications(Unknown Source)\r\n20:10:23.787 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.internal.metaobject.BeanDynamicObject$MetaClassAdapter.invokeMethod(BeanDynamicObject.java:464)\r\n20:10:23.787 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.internal.metaobject.BeanDynamicObject.invokeMethod(BeanDynamicObject.java:176)\r\n20:10:23.787 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.internal.metaobject.CompositeDynamicObject.invokeMethod(CompositeDynamicObject.java:96)\r\n20:10:23.788 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.internal.metaobject.MixInClosurePropertiesAsMethodsDynamicObject.invokeMethod(MixInClosurePropertiesAsMethodsDynamicObject.java:30)\r\n20:10:23.788 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.internal.metaobject.ConfigureDelegate.invokeMethod(ConfigureDelegate.java:59)\r\n20:10:23.788 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at com.novoda.gradle.release.ReleasePlugin$_attachArtifacts_closure1.doCall(ReleasePlugin.groovy:23)\r\n20:10:23.788 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.api.internal.ClosureBackedAction.execute(ClosureBackedAction.java:71)\r\n20:10:23.789 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.util.ConfigureUtil.configureTarget(ConfigureUtil.java:160)\r\n20:10:23.789 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.util.ConfigureUtil.configure(ConfigureUtil.java:106)\r\n20:10:23.789 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.util.ConfigureUtil$1.execute(ConfigureUtil.java:123)\r\n20:10:23.789 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.internal.ImmutableActionSet$CompositeSet.execute(ImmutableActionSet.java:196)\r\n20:10:23.790 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.internal.MutableActionSet.execute(MutableActionSet.java:35)\r\n20:10:23.790 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.api.internal.plugins.ExtensionsStorage$DeferredConfigurableExtensionHolder.configureNow(ExtensionsStorage.java:211)\r\n20:10:23.790 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.api.internal.plugins.ExtensionsStorage$DeferredConfigurableExtensionHolder.get(ExtensionsStorage.java:190)\r\n20:10:23.790 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.api.internal.plugins.ExtensionsStorage.getAsMap(ExtensionsStorage.java:55)\r\n20:10:23.790 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.api.internal.plugins.DefaultConvention$ExtensionsDynamicObject.getProperties(DefaultConvention.java:260)\r\n20:10:23.790 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.internal.metaobject.CompositeDynamicObject.getProperties(CompositeDynamicObject.java:77)\r\n20:10:23.791 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.api.internal.project.DefaultProject$4.create(DefaultProject.java:978)\r\n20:10:23.791 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.api.internal.project.DefaultProject$4.create(DefaultProject.java:976)\r\n20:10:23.791 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.util.SingleMessageLogger.whileDisabled(SingleMessageLogger.java:217)\r\n20:10:23.791 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.api.internal.project.DefaultProject.getProperties(DefaultProject.java:976)\r\n20:10:23.797 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at com.android.build.gradle.AndroidGradleOptions.getExtraInstrumentationTestRunnerArgs(AndroidGradleOptions.java:123)\r\n20:10:23.797 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at com.android.build.gradle.internal.TaskManager.createConnectedTestForVariant(TaskManager.java:1657)\r\n20:10:23.798 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at com.android.build.gradle.internal.TaskManager.createAndroidTestVariantTasks(TaskManager.java:1456)\r\n20:10:23.798 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at com.android.build.gradle.internal.VariantManager.createTasksForVariantData(VariantManager.java:451)\r\n20:10:23.810 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at com.android.build.gradle.internal.VariantManager.lambda$createAndroidTasks$1(VariantManager.java:282)\r\n20:10:23.810 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at com.android.build.gradle.internal.VariantManager$$Lambda$1558/227977131.call(Unknown Source)\r\n20:10:23.810 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at com.android.builder.profile.ThreadRecorder.record(ThreadRecorder.java:81)\r\n20:10:23.810 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at com.android.build.gradle.internal.VariantManager.createAndroidTasks(VariantManager.java:278)\r\n20:10:23.811 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at com.android.build.gradle.BasePlugin.lambda$createAndroidTasks$6(BasePlugin.java:601)\r\n20:10:23.811 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at com.android.build.gradle.BasePlugin$$Lambda$1520/252386822.call(Unknown Source)\r\n20:10:23.811 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at com.android.builder.profile.ThreadRecorder.record(ThreadRecorder.java:81)\r\n20:10:23.811 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at com.android.build.gradle.BasePlugin.createAndroidTasks(BasePlugin.java:596)\r\n20:10:23.811 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at com.android.build.gradle.BasePlugin.lambda$null$4(BasePlugin.java:526)\r\n20:10:23.811 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at com.android.build.gradle.BasePlugin$$Lambda$1503/1507016141.call(Unknown Source)\r\n20:10:23.811 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at com.android.builder.profile.ThreadRecorder.record(ThreadRecorder.java:81)\r\n20:10:23.811 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at com.android.build.gradle.BasePlugin.lambda$createTasks$5(BasePlugin.java:522)\r\n20:10:23.812 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at com.android.build.gradle.BasePlugin$$Lambda$1502/1778675096.execute(Unknown Source)\r\n20:10:23.812 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.internal.event.BroadcastDispatch$ActionInvocationHandler.dispatch(BroadcastDispatch.java:89)\r\n20:10:23.812 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.internal.event.BroadcastDispatch$ActionInvocationHandler.dispatch(BroadcastDispatch.java:78)\r\n20:10:23.812 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.internal.event.AbstractBroadcastDispatch.dispatch(AbstractBroadcastDispatch.java:42)\r\n20:10:23.812 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.internal.event.BroadcastDispatch$SingletonDispatch.dispatch(BroadcastDispatch.java:221)\r\n20:10:23.812 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.internal.event.BroadcastDispatch$SingletonDispatch.dispatch(BroadcastDispatch.java:145)\r\n20:10:23.812 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   at org.gradle.internal.event.AbstractBroadcastDispatch.dispatch(AbstractBroadcastDispatch.java:58)\r\n20:10:23.813 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   ... 63 more\r\n20:10:23.815 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] Caused by: java.lang.ClassNotFoundException: org.gradle.api.internal.component.Usage\r\n20:10:23.816 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]   ... 127 more\r\n20:10:23.816 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] \r\n20:10:23.816 [LIFECYCLE] [org.gradle.internal.buildevents.BuildResultLogger] \r\n20:10:23.816 [LIFECYCLE] [org.gradle.internal.buildevents.BuildResultLogger] BUILD FAILED\r\n20:10:23.816 [LIFECYCLE] [org.gradle.internal.buildevents.BuildResultLogger] \r\n20:10:23.817 [LIFECYCLE] [org.gradle.internal.buildevents.BuildResultLogger] Total time: 2.65 secs\r\n20:10:23.856 [DEBUG] [org.gradle.cache.internal.LockOnDemandCrossProcessCacheAccess] Releasing file lock for task history cache (/Users/user1/Documents/sample1/.gradle/3.5/taskHistory)\r\n20:10:23.856 [DEBUG] [org.gradle.cache.internal.DefaultFileLockManager] Releasing lock on task history cache (/Users/user1/Documents/sample1/.gradle/3.5/taskHistory).\r\n20:10:23.865 [DEBUG] [org.gradle.api.internal.artifacts.ivyservice.resolveengine.store.CachedStoreFactory] Resolution result cache closed. Cache reads: 0, disk reads: 0 (avg: 0.0 secs, total: 0.0 secs)\r\n20:10:23.876 [DEBUG] [org.gradle.api.internal.artifacts.ivyservice.resolveengine.store.CachedStoreFactory] Resolution result cache closed. Cache reads: 0, disk reads: 10 (avg: 0.0 secs, total: 0.002 secs)\r\n20:10:23.876 [DEBUG] [org.gradle.api.internal.artifacts.ivyservice.resolveengine.store.ResolutionResultsStoreFactory] Deleted 2 resolution results binary files in 0.019 secs\r\n20:10:23.876 [DEBUG] [org.gradle.cache.internal.DefaultCacheAccess] Cache Plugin Resolution Cache (/Users/.gradle/caches/3.5/plugin-resolution) was closed 0 times.\r\n20:10:23.886 [DEBUG] [org.gradle.deployment.internal.DefaultDeploymentRegistry] Stopping 0 deployment handles\r\n20:10:23.888 [DEBUG] [org.gradle.deployment.internal.DefaultDeploymentRegistry] Stopped deployment handles\r\n20:10:23.888 [DEBUG] [org.gradle.workers.internal.WorkerDaemonManager] Stopping 0 worker daemon(s).\r\n20:10:23.888 [INFO] [org.gradle.workers.internal.WorkerDaemonManager] Stopped 0 worker daemon(s).\r\n20:10:23.888 [DEBUG] [org.gradle.cache.internal.DefaultCacheAccess] Cache Generated Gradle JARs cache (/Users/.gradle/caches/3.5/generated-gradle-jars) was closed 0 times.\r\n20:10:23.888 [DEBUG] [org.gradle.cache.internal.LockOnDemandCrossProcessCacheAccess] Releasing file lock for artifact cache (/Users/.gradle/caches/modules-2)\r\n20:10:23.888 [DEBUG] [org.gradle.cache.internal.btree.BTreePersistentIndexedCache] Closing cache artifact-at-repository.bin (/Users/.gradle/caches/modules-2/metadata-2.23/artifact-at-repository.bin)\r\n20:10:23.889 [DEBUG] [org.gradle.cache.internal.btree.BTreePersistentIndexedCache] Closing cache module-metadata.bin (/Users/.gradle/caches/modules-2/metadata-2.23/module-metadata.bin)\r\n20:10:23.890 [DEBUG] [org.gradle.cache.internal.btree.BTreePersistentIndexedCache] Closing cache module-versions.bin (/Users/.gradle/caches/modules-2/metadata-2.23/module-versions.bin)\r\n20:10:23.890 [DEBUG] [org.gradle.cache.internal.DefaultFileLockManager] Releasing lock on artifact cache (/Users/user1/.gradle/caches/modules-2).\r\n20:10:23.893 [DEBUG] [org.gradle.launcher.daemon.server.exec.ExecuteBuild] The daemon has finished executing the build.\r\n20:10:24.155 [DEBUG] [org.gradle.launcher.daemon.client.DaemonClientInputForwarder] Dispatching close input message: org.gradle.launcher.daemon.protocol.CloseInput@7169538\r\n20:10:24.155 [DEBUG] [org.gradle.launcher.daemon.client.DaemonClientConnection] thread 13: dispatching class org.gradle.launcher.daemon.protocol.CloseInput\r\n20:10:24.157 [INFO] [org.gradle.launcher.daemon.client.DaemonClient] Received result Failure[value=org.gradle.initialization.ReportedException: org.gradle.internal.exceptions.LocationAwareException: A problem occurred configuring project ':ExoPlayerSDK'.] from daemon DaemonInfo{pid=9612, address=[6d713ff7-a0f6-49f2-bf1d-cf20075bb5e6 port:52166, addresses:[/0:0:0:0:0:0:0:1, /127.0.0.1]], state=Idle, lastBusy=1495800097741, context=DefaultDaemonContext[uid=6b86d11d-9e69-48cf-aea3-39b177ac6ab8,javaHome=/Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home,daemonRegistryDir=/Users/.gradle/daemon,pid=9612,idleTimeout=10800000,daemonOpts=-Xmx3072m,-Dfile.encoding=UTF-8,-Duser.country=US,-Duser.language=en,-Duser.variant]} (build should be done).\r\n20:10:24.161 [DEBUG] [org.gradle.launcher.daemon.client.DaemonClientConnection] thread 1: dispatching class org.gradle.launcher.daemon.protocol.Finished\r\n20:10:24.168 [DEBUG] [org.gradle.launcher.daemon.client.DaemonClientConnection] thread 1: connection stop\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2870/comments",
    "author": "drayan85",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-05-26T16:04:30Z",
        "body": "If everything builds fine when you clone the `release-v1` branch, including the demo app, then this sounds a lot like a setup issue with the way you're configuring your project. This would be outside the scope of this issue tracker."
      },
      {
        "user": "drayan85",
        "created_at": "2017-05-29T06:47:08Z",
        "body": "problem was with classpath 'com.novoda:bintray-release:0.2.7' version and I have update to the latest version classpath 'com.novoda:bintray-release:0.5.0'. No more issue"
      }
    ]
  },
  {
    "number": 2868,
    "title": "Can I override simpleExoPlayerView buttons' actions?",
    "created_at": "2017-05-26T10:08:20Z",
    "closed_at": "2017-05-26T16:13:04Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2868",
    "body": "Hello guys, is it possible to override play, pause, prev, next buttons in **simpleexoplayerview** \r\nI created a custom layout for  **simpleexoplayerview** and changed some of the buttons' appereances.\r\n\r\n   ```\r\n     <ImageButton android:id=\"@id/exo_next\"\r\n            android:background=\"?selectableItemBackground\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            app:srcCompat=\"@drawable/ic_file_download_black_24dp\"/> \r\n```\r\n\r\nI just want to change prev and next button.\r\nI'm developing a simple podcast app and I want to change prev buttons as favorite and next button as download.\r\n\r\nusing exoplayer version 2.4.0",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2868/comments",
    "author": "LutfiTekin",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-05-26T16:13:04Z",
        "body": "If you want to make player controls that are substantially different to the default ones, then you should implement your own. Wiring a \"next\" button up to do something completely different than \"next\" doesn't sound like a great idea."
      }
    ]
  },
  {
    "number": 2857,
    "title": "show black screen before video played after activity resumed.",
    "created_at": "2017-05-23T04:25:52Z",
    "closed_at": "2017-06-06T15:43:35Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2857",
    "body": "\r\n### Issue description\r\nif resumed activity when playing video, the video will show black screen before continuing playing.\r\n\r\n### Reproduction steps\r\nas I test, it occurs in my app and offical demo app, i just test hls and mp4.and I init and release exoplayer\r\nas the offical demo doing.\r\n\r\n### Version of ExoPlayer being used\r\nr2.4.0\r\n\r\n### Device(s) and version(s) of Android being used\r\nI test in oneplus3, android 7.1.1; xiaomi max, android 6.0; xiaomi 4, android 7.1.1\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2857/comments",
    "author": "sschemer",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-06-06T15:43:35Z",
        "body": "This is expected because the underlying platform destroys the surface, and because we cannot draw into the new surface until after we've re-buffered and decoded the first frame at the current playback position. Sorry."
      }
    ]
  },
  {
    "number": 2855,
    "title": "Synchronizing Multiple ExoPlayers",
    "created_at": "2017-05-22T22:06:45Z",
    "closed_at": "2017-05-31T09:42:43Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2855",
    "body": "Hello,\r\n\r\nI'm working on using ExoPlayer for a custom VR video streaming application.  I want to be able to play media from multiple DASH sources to different SurfaceTextures, which will be put into an OpenGL shader to be warped and displayed in VR (I know how to do the OpenGL part already).  Each DASH source corresponds to a different tile or quadrant of the VR video.\r\n\r\nI've been able to play my tiles using separate SimpleExoPlayer instances, but there isn't a way to synchronize those so the tiles would be out of sync.  I've tried a couple things to get this working:\r\n\r\n- I setup a DashMediaSource and tried to read samples directly from the sample streams and put them into MediaCodec on my own.  I did this by creating a MediaPeriod from the DashMediaSource, and once it was prepared, I selected a track from it.  Whenever there is data available, I read it into the decoder and set the right flags.  This didn't work.  In fact, it was so bad that the phone would reset whenever I ran the code.  I think there might have been a problem with the initialization of the MediaCodec, but the debugger wasn't too useful, so after a week of trying to debug it, I gave up. (I can paste some code, if that idea has promise, and it's just a matter of debugging)\r\n- I tried modifying MediaCodecVideoRenderer to keep DecoderOutputBuffers around until I wanted to render them.  This also didn't work.\r\n\r\nWhat I want to know is, is there a way I can either synchronize SimpleExoPlayer (or ExoPlayer) instances?  If I can't do that, I'd like to be able to get a sample stream that I can put into a MediaCodec instance myself, and handle the playback and synchronization myself.\r\n\r\nThanks in advance for any help!\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2855/comments",
    "author": "jtabor",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-05-23T16:56:45Z",
        "body": "This is a pretty advanced use case :). We don't provide a way to synchronize SimpleExoPlayer (or ExoPlayer) instances. With a bit of work, however, you might manage to get all of the streams playing at once inside a single instance. You'll need to touch a few components, but at a high level you'll need to do something like:\r\n\r\n1. Inject a custom `RenderersFactory` instance that builds as many video renderers as you need. You can probably extend `DefaultRenderersFactory` to do this, then override `buildVideoRenderers` to build N instances of `MediaCodecVideoRenderer`. You can see the implementation in `DefaultRenderersFactory` to see how it builds a `MediaCodecVideoRenderer`, and copy that.\r\n1. If you have control over the source content, make it so that you have a single big manifest containing all of the adaptation sets that you need. You can then use `DashMediaSource` as normal. If this isn't possible, create all of the `DashMediaSource` instances and then merge them using `MergingMediaSource`.\r\n1. At this point the remaining work is to ensure the `TrackSelector` selects the correct track(s) for each of the video renderers. `DefaultTrackSelector` wont do anything like this for you, so you'll probably need to implement your own `TrackSelector` from scratch.\r\n\r\nOnce that's all wired up, it *might* \"just work\", although note that many devices only have a limited number of video decoders available (and for low end devices, the limit might be 1)."
      },
      {
        "user": "jtabor",
        "created_at": "2017-05-23T18:03:57Z",
        "body": "Thanks for the reply.  I'll try it out, and let you know so people can reference this later if they need to do the same thing.  (Unless it doesn't work, then I'll ask about that, hahaa).  \r\n\r\nAs far as decoders, we're targeting a Google Pixel, which I'm told has 8 decoders.\r\n"
      },
      {
        "user": "Endmaril",
        "created_at": "2017-05-24T12:49:44Z",
        "body": "Hi,\r\n\r\n@jtabor, you managed to instantiate several `SimpleExoplayer `then you should be able to instantiate one with several `MediaCodecVideoRenderer`.\r\n\r\nI am currently (for 2 months now) using the solution described by @ojw28 and it is working great on Samaung Galaxy S7 for now with up to 9 decoders instantiated at the same time (didn't test with more).\r\nUnfortunately I can't share the code for now, we may release it in a year or so which will be obviously too late for you sorry. But i thought it would be helpful to let you know that someone was able to make it work somehow.\r\n\r\nI'll try to help on the subject if I can."
      },
      {
        "user": "jtabor",
        "created_at": "2017-05-24T14:58:37Z",
        "body": "@Endmaril Thanks!  No worries about sharing the code! It's good to know that someone else got this working.  I'll try it out and see if I can get it working too."
      }
    ]
  },
  {
    "number": 2834,
    "title": "Improve video start time when using lower buffer size in LoadControl",
    "created_at": "2017-05-16T14:52:21Z",
    "closed_at": "2017-06-24T13:30:42Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2834",
    "body": "I'm upgrading from ExoPlayer r.1.5.9 to r.2.2.0 and wondering if I can use and suppy buffer size lower than default values. \r\n\r\n`LoadControl` implementation (`DefaultLoadControl`) has a `targetBufferSize` which is calculated when a track is selected and it is equal to sum of default values of renderers present in the selected track. In a typical track, there would be four renderers, video (12.5 MB, `DEFAULT_VIDEO_BUFFER_SIZE`), audio (3.375 MB, `DEFAULT_AUDIO_BUFFER_SIZE`), text (128 KB, `DEFAULT_TEXT_BUFFER_SIZE`), meta data (128 KB, `DEFAULT_METADATA_BUFFER_SIZE`) and equal to 16.125 MB. In the earlier exoplayer version, buffer size can be supplied through `HlsSampleSource` and it was around 3 MB which is four or five times lesser than current target buffer size and android memory monitor showed that the app with ExoPlayer 2.2.0 uses an extra memory of 5 to 10 MB.\r\n\r\n**Objective:**\r\nDecrease the memory usage of the app and bring it closer to exo player r1.5.9. \r\n\r\n**Questions:**\r\n1. Is it recommended to create a custom `LoadControl` to address the higher memory usage? \r\n2. If creating a custom `LoadControl` is recommended, then what could be a minimum buffer size that can be used that doesn't affect video start time (time required to see the first frame after clicking load button)?\r\n3. Does reducing buffer size affects/increases video start time? If so, what part of the exo player r2.2.0 should I address to decrease video start time.\r\n4. Does changing `DefaultAllocator` default buffer size from 64 KB to 256 KB has any affect on above scenario?\r\n\r\nI have tried to address the memory usage by creating a custom `LoadControl` that takes `targetBufferSize` which is closer to old exo player buffer size but I have noticed some delay in seeing the first frame after hitting load button. Also, there was no significant drop in memory usage. \r\n\r\n`DefaultAllocator` used is 256 KB\r\nPlease advice on recommended steps or documentation regarding `targetBufferSize` and `LoadControl`.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2834/comments",
    "author": "arjun-redspace",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-05-16T21:35:59Z",
        "body": "> Is it recommended to create a custom LoadControl to address the higher memory usage?\r\n\r\nIf you want non-default buffering policy, then yes this is the recommended way to do that. Note you can also configure DefaultLoadControl to some extent, by passing different values through one of its constructors.\r\n\r\n> If creating a custom LoadControl is recommended, then what could be a minimum buffer size that can be used that doesn't affect video start time (time required to see the first frame after clicking load button)?\r\n\r\nThe size of the buffer doesn't have any effect on start time, unless you make it so small that playback is essentially broken. The bare minimum size depends somewhat on the details of the media you're trying to play; I wouldn't recommend trying and push it too low.\r\n\r\n> Does reducing buffer size affects/increases video start time? If so, what part of the exo player r2.2.0 should I address to decrease video start time.\r\n\r\nAs above, the buffer size shouldn't have any effect on the video start time. LoadControl's `shouldStartPlaying` method can be tweaked to have playback start more aggressively. You can also tweak the parameters passed into `DefaultLoadControl`'s constructor to do this (e.g. making `bufferForPlaybackMs` and `bufferForPlaybackAfterRebufferMs` smaller than the default values allows playback to start earlier).\r\n\r\n> Does changing DefaultAllocator default buffer size from 64 KB to 256 KB has any affect on above scenario?\r\n\r\nNo."
      },
      {
        "user": "kedrovski",
        "created_at": "2017-06-23T11:14:23Z",
        "body": "One interesting moment, video start time increased since r.2.1.0 (black screen in start about 0.5sec). I noticed that this can be avoided by use `SurfaceView` instead `SimpleExoPlayerView` in layout. And in code using `player.setVideoSurfaceView(surfaceView);` instead `simpleExoPlayerView.setPlayer(player)`. Checked in r2.4.2."
      },
      {
        "user": "ojw28",
        "created_at": "2017-06-24T13:30:42Z",
        "body": "For what it's worth, I can't think of any technical reason why that would be the case (and I'm doubtful it is). What you're suggesting doing is basically what `SimpleExoPlayerView` does internally by itself anyway, so it's hard to see how one would be significantly slower or faster.\r\n\r\nClosing this issue, since the original questions have been answered. Thanks!"
      }
    ]
  },
  {
    "number": 2823,
    "title": "A more convenient access to certain lifecycle event ",
    "created_at": "2017-05-14T13:10:45Z",
    "closed_at": "2017-05-15T14:30:46Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2823",
    "body": "Hello,\r\n\r\nThis is a request for a small adjustment.\r\n\r\nIn the `LoadControl` interface lies a certain number of very useful methods related to the exoplayer lifecycle:\r\n\r\nonPrepared()\r\nonReleased()\r\nonStopped()\r\n\r\nHowever at this point, we can only pass one instance of a `LoadControl` implementation into the `ExoPlayerFactory`, and by default this implementation is `DefaultLoadControl`, a class marked as final.\r\n\r\nRight now, the only way I can access these callbacks in my project is by implementing my own `LoadControl` logic (that is copy pasting the DefaultLoadControl class and tweaking it a bit).\r\n\r\nI think these kind of callbacks deserve their own separate interface so they can be accessed more conveniently.\r\n\r\nThanks",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2823/comments",
    "author": "q-litzler",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-05-15T01:19:59Z",
        "body": "These aren't intended for general purpose use outside of the player. They're intended for the `LoadControl` specifically. Note also that they're invoked directly on the player's internal playback thread, which is normally not what you'd want if you're trying to implement some external logic.\r\n\r\nIt's likely that whatever you're trying to do would be better off done in some other way, for example using an `ExoPlayer.EventListener`. What is it that you're trying to do, and why are the existing event listener callbacks not sufficient?"
      },
      {
        "user": "q-litzler",
        "created_at": "2017-05-15T09:58:09Z",
        "body": "What I need is to know precisely when the player is done preparing its `MediaSource`. I would love if there was a dedicated method in `ExoPlayer.EventListener` for that, but that is not the case right now.\r\nThat's why I have been using the `LoadControl` interface, I know it's not meant to be used for this, but it's the only solution I could come up with. I'm not asking for a modification of the `LoadControl` interface, it's fine as it is.\r\nBut a similiar `onPrepared` callback in `ExoPlayer.EventListener` would be greatly appreciated.\r\n\r\nConsider this simple scenario: I want to display a player only when the source is 100% ready to be played (It is part of the advertisement experience of the app I'm working on) and I want the assurance that this callback will not be called several times over the course of the MediaSource lifecycle (like it would be if I were using the `onLoadingChanged` or `onPlayerStateChanged` methods for example)"
      },
      {
        "user": "ojw28",
        "created_at": "2017-05-15T14:30:46Z",
        "body": "I don't think `LoadControl.onPrepared` is called when you think it is. It's called as soon as the playback thread receives the `MediaSource` but before it's actually done anything with it. There will typically be zero buffer at the point when it's fired. So it doesn't seem at all correct for the use case you describe.\r\n\r\nIf you want to do something when the player is ready to be played then you should use `ExoPlayer.EventListener.onPlayerStateChanged`. The first call with `playbackState == ExoPLayer.STATE_READY` is the point at which the player is ready."
      },
      {
        "user": "q-litzler",
        "created_at": "2017-05-15T15:54:44Z",
        "body": "Ok, good to know. Thank you."
      }
    ]
  },
  {
    "number": 2819,
    "title": "Unable to load in the middle of playback. MP4",
    "created_at": "2017-05-12T12:32:34Z",
    "closed_at": "2017-05-12T23:06:16Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2819",
    "body": "I'm having trouble with a helpless error.\r\n\r\nMP4\r\nUnable to load in the middle of playback.\r\nSeek operation cannot load.\r\n\r\nNexus 5x Android 6.0\r\nXperia Z5 Compact SO-02H Android 6.0\r\nKFFOWI(Amazon Kindle) Android 5.1\r\nau AQUOS SERIE SHL25 Android 5.0\r\ndtab Compact d-02H Android 5.1\r\n...and Other Devices\r\n\r\nexoplayer error?\r\nokhttp3 error?\r\nOr is it an error on the video delivery side?\r\n\r\nBecause the video content is private, I send it if I can tell a destination.\r\n\r\n```\r\ndependencies {\r\n...\r\n    compile 'com.squareup.okio:okio:1.12.0'\r\n    compile 'com.squareup.okhttp3:okhttp:3.7.0'\r\n    compile 'com.google.android.exoplayer:exoplayer:r2.4.0'\r\n    compile 'com.google.android.exoplayer:extension-okhttp:r2.4.0'\r\n}\r\n```\r\n\r\nHelp me.\r\n\r\nThank you.\r\n\r\n```\r\ncom.google.android.exoplayer2.upstream.HttpDataSource$HttpDataSourceException: okhttp3.internal.http2.StreamResetException: stream was reset: PROTOCOL_ERROR\r\n    at com.google.android.exoplayer2.ext.okhttp.OkHttpDataSource.read(OkHttpDataSource.java:208)\r\n    at com.google.android.exoplayer2.upstream.DefaultDataSource.read(DefaultDataSource.java:128)\r\n    at com.google.android.exoplayer2.extractor.DefaultExtractorInput.readFromDataSource(DefaultExtractorInput.java:257)\r\n    at com.google.android.exoplayer2.extractor.DefaultExtractorInput.read(DefaultExtractorInput.java:59)\r\n    at com.google.android.exoplayer2.extractor.DefaultTrackOutput.sampleData(DefaultTrackOutput.java:484)\r\n    at com.google.android.exoplayer2.extractor.mp4.Mp4Extractor.readSample(Mp4Extractor.java:441)\r\n    at com.google.android.exoplayer2.extractor.mp4.Mp4Extractor.read(Mp4Extractor.java:152)\r\n    at com.google.android.exoplayer2.source.ExtractorMediaPeriod$ExtractingLoadable.load(ExtractorMediaPeriod.java:652)\r\n    at com.google.android.exoplayer2.upstream.Loader$LoadTask.run(Loader.java:295)\r\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1113)\r\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:588)\r\n    at java.lang.Thread.run(Thread.java:818)\r\nCaused by: okhttp3.internal.http2.StreamResetException: stream was reset: PROTOCOL_ERROR\r\n    at okhttp3.internal.http2.Http2Stream$FramingSource.checkNotClosed(Http2Stream.java:436)\r\n    at okhttp3.internal.http2.Http2Stream$FramingSource.read(Http2Stream.java:338)\r\n    at okio.ForwardingSource.read(ForwardingSource.java:35)\r\n    at okio.RealBufferedSource$1.read(RealBufferedSource.java:429)\r\n    at com.google.android.exoplayer2.ext.okhttp.OkHttpDataSource.readInternal(OkHttpDataSource.java:357)\r\n    at com.google.android.exoplayer2.ext.okhttp.OkHttpDataSource.read(OkHttpDataSource.java:206)\r\n\t... 11 more\r\n\r\ncom.google.android.exoplayer2.upstream.HttpDataSource$HttpDataSourceException: java.net.SocketTimeoutException: timeout\r\n    at com.google.android.exoplayer2.ext.okhttp.OkHttpDataSource.read(OkHttpDataSource.java:208)\r\n    at com.google.android.exoplayer2.upstream.DefaultDataSource.read(DefaultDataSource.java:128)\r\n    at com.google.android.exoplayer2.extractor.DefaultExtractorInput.readFromDataSource(DefaultExtractorInput.java:257)\r\n    at com.google.android.exoplayer2.extractor.DefaultExtractorInput.read(DefaultExtractorInput.java:59)\r\n    at com.google.android.exoplayer2.extractor.DefaultTrackOutput.sampleData(DefaultTrackOutput.java:484)\r\n    at com.google.android.exoplayer2.extractor.mp4.Mp4Extractor.readSample(Mp4Extractor.java:441)\r\n    at com.google.android.exoplayer2.extractor.mp4.Mp4Extractor.read(Mp4Extractor.java:152)\r\n    at com.google.android.exoplayer2.source.ExtractorMediaPeriod$ExtractingLoadable.load(ExtractorMediaPeriod.java:652)\r\n    at com.google.android.exoplayer2.upstream.Loader$LoadTask.run(Loader.java:295)\r\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1113)\r\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:588)\r\n    at java.lang.Thread.run(Thread.java:818)\r\nCaused by: java.net.SocketTimeoutException: timeout\r\n    at okhttp3.internal.http2.Http2Stream$StreamTimeout.newTimeoutException(Http2Stream.java:593)\r\n    at okhttp3.internal.http2.Http2Stream$StreamTimeout.exitAndThrowIfTimedOut(Http2Stream.java:601)\r\n    at okhttp3.internal.http2.Http2Stream$FramingSource.waitUntilReadable(Http2Stream.java:374)\r\n    at okhttp3.internal.http2.Http2Stream$FramingSource.read(Http2Stream.java:337)\r\n    at okio.ForwardingSource.read(ForwardingSource.java:35)\r\n    at okio.RealBufferedSource$1.read(RealBufferedSource.java:429)\r\n    at com.google.android.exoplayer2.ext.okhttp.OkHttpDataSource.readInternal(OkHttpDataSource.java:357)\r\n    at com.google.android.exoplayer2.ext.okhttp.OkHttpDataSource.read(OkHttpDataSource.java:206)\r\n\t... 11 more\r\n```",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2819/comments",
    "author": "c3stream",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-05-12T16:40:18Z",
        "body": "This looks like a networking error rather than anything ExoPlayer related. I'd suggest you try serving the content from a different server. If the issue doesn't reproduce there then it's likely a server side issue."
      },
      {
        "user": "c3stream",
        "created_at": "2017-05-13T02:41:52Z",
        "body": "@ojw28  Thank you."
      }
    ]
  },
  {
    "number": 2793,
    "title": "Problem with mp4 streaming",
    "created_at": "2017-05-09T09:12:58Z",
    "closed_at": "2017-05-09T13:47:06Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2793",
    "body": "hi, I want to play an mp4 via internet link in exoplayer But when I seek to any position in video it sems like that it's downloading whole video from beginning to that position. Is this problem related to exoplayer or it is from server? how can  I handle this problem?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2793/comments",
    "author": "hpanahiird",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-05-09T13:47:06Z",
        "body": "Most likely the server doesn't support range requests, in which case the player has no alternative but to do this. If that's the case, you should use a more appropriate server configuration."
      }
    ]
  },
  {
    "number": 2792,
    "title": "Enable and Disable Captioning ",
    "created_at": "2017-05-09T05:54:47Z",
    "closed_at": "2017-05-09T10:09:28Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2792",
    "body": "Hello,\r\n I was able to show subtitle, I was wondering how to provide enable and disable feature for closed captioning so that i can have a custom button in media controller which can toggle subtitle visibility.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2792/comments",
    "author": "Arunkarthicknallasami",
    "comments": [
      {
        "user": "AquilesCanta",
        "created_at": "2017-05-09T10:09:28Z",
        "body": "The demo app is a good place to start. If you play any content with subtitles there, you'll see a \"Text\" button on the top of the screen. You can modify that code a little bit to achieve what you are looking for."
      }
    ]
  },
  {
    "number": 2772,
    "title": "player local mp4 use large memory",
    "created_at": "2017-05-04T09:11:42Z",
    "closed_at": "2017-05-08T21:16:42Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2772",
    "body": "**Issue description**\r\n\r\nwhen I use the exoplayer2 play the local mp4 file.it use large memory\r\nif the file is 10M,it will use 20M memory\r\nif the file is 40M,it will use 40M memory,\r\nif the file is 120M,it will use 40M memory,\r\n\r\nwhy use so much memory?when I use videoview,it will use little memory\r\n\r\n**Reproduction steps**\r\n\r\nHandler mainHandler = new Handler(); \r\nBandwidthMeter bandwidthMeter = new DefaultBandwidthMeter(); \r\nTrackSelection.Factory videoTrackSelectionFactory = new AdaptiveTrackSelection.Factory(bandwidthMeter); \r\nTrackSelector trackSelector = new DefaultTrackSelector(videoTrackSelectionFactory);\r\n final LoadControl loadControl = new DefaultLoadControl(); \r\nplayer =ExoPlayerFactory.newSimpleInstance(this, trackSelector, loadControl); player_view.setPlayer(player);\r\n Uri mp4VideoUri = Uri.parse(\"file://\" + Environment.getExternalStorageDirectory().getPath() + \"/a.MP4\"); DefaultBandwidthMeter bandwidthMeter1 = new DefaultBandwidthMeter(); DataSource.Factory dataSourceFactory = new DefaultDataSourceFactory(this,Util.getUserAgent(this, \"yourApplicationName\"), bandwidthMeter1); \r\nExtractorsFactory extractorsFactory = new DefaultExtractorsFactory(); \r\nMediaSource videoSource = new ExtractorMediaSource(mp4VideoUri,dataSourceFactory, extractorsFactory, null, null); \r\nplayer.prepare(videoSource); \r\nplayer_view.setUseController(false);\r\n\r\n**Version of ExoPlayer being used**\r\n\r\nr2.3.0",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2772/comments",
    "author": "leach-chen",
    "comments": [
      {
        "user": "AquilesCanta",
        "created_at": "2017-05-04T09:30:43Z",
        "body": "You are ignoring part of the template. Read the template and include all the information required there. Of particular interest here is the media file."
      },
      {
        "user": "ojw28",
        "created_at": "2017-05-08T21:16:42Z",
        "body": "> why use so much memory?when I use videoview,it will use little memory\r\n\r\nVideoView and MediaPlayer both use similarly large amounts of memory. The difference is that the memory is allocated inside the media server process, where-as ExoPlayer allocates the memory inside your application process."
      }
    ]
  },
  {
    "number": 2764,
    "title": "Adding request headers to ExtractorMediaSource ",
    "created_at": "2017-05-03T13:20:53Z",
    "closed_at": "2017-05-06T10:25:35Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2764",
    "body": "Hello,\r\n I need to add request headers for playing video with exoplayer. I could see it was available with ExtractorSampleSource and I could not add the same with ExtractorMediaSource. Also i dont see  ExtractorSampleSource part of r2.3.1.  Kindly help",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2764/comments",
    "author": "Arunkarthicknallasami",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-05-04T17:37:49Z",
        "body": "We will try and document customization points such as this a little better. You can do what you want as follows:\r\n\r\n```\r\nDefaultHttpDataSourceFactory dataSourceFactory = new DefaultHttpDataSourceFactory(userAgent);\r\ndataSourceFactory.getDefaultRequestProperties().set(\"headerName\", \"headerValue\");\r\nreturn new ExtractorMediaSource(uri, dataSourceFactory, ...);\r\n```"
      },
      {
        "user": "Arunkarthicknallasami",
        "created_at": "2017-05-06T10:25:33Z",
        "body": "Thank you so much that helped a lot. :)"
      }
    ]
  },
  {
    "number": 2762,
    "title": "Get duration without preparing",
    "created_at": "2017-05-02T15:36:05Z",
    "closed_at": "2017-05-24T14:15:43Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2762",
    "body": "Is it possible to get the duration of a file without preparing the full player? Preparing each single file the user owns takes forever.\r\n\r\nSo far I was using MediaMetaDataRetriever but that does not handle files that can be handled by exo player extensions.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2762/comments",
    "author": "PaulWoitaschek",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-05-02T21:57:31Z",
        "body": "How would you expect this to work quickly, given at a bare minimum something has to parse some metadata out of each file to extract the duration? If you're dealing with local files, I think the normal solution to this would be to build an index (e.g. stored as a database), so that you only have to do it once."
      },
      {
        "user": "PaulWoitaschek",
        "created_at": "2017-05-03T04:35:09Z",
        "body": "Yes, this is done once. But it takes several minutes. And it's significantly slower than the extractor. \r\n\r\nIs just wondered if there is a quicker way to retrieve the meta data only.\r\n\r\nIn other threads and commits I read about ID3 tags, but i could not find the method where I can parse the metadata of a file.\r\nIs that possible?"
      },
      {
        "user": "PaulWoitaschek",
        "created_at": "2017-05-14T11:31:15Z",
        "body": "I was actually wrong. ExoPlayer is way faster than the MMR.\r\nHowever it would still be great to have a unified interface for getting the meta data, exo player parses."
      },
      {
        "user": "ojw28",
        "created_at": "2017-05-24T14:15:43Z",
        "body": "ID3 tag metadata defined at the start of a piece of media is always static. The duration of a piece of media may change during playback (for live streams). So I think it's appropriate that they're exposed separately."
      }
    ]
  },
  {
    "number": 2758,
    "title": "[Question] Closed Captions (CEA-608 & 708) support for B-Frames in H.264 ",
    "created_at": "2017-05-02T06:22:19Z",
    "closed_at": "2017-05-02T07:30:13Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2758",
    "body": "### Issue description\r\nI have a question about Closed Captions support. \r\nH.264 content that supports B Frames have frames decoding order different than presentation order.  It is expected that the CC (608 and 708) data present in them should be ordered on presentation timestamps. From the code in Exo2, it looks like this re-ordering is not supported. Any plans of adding this support? If I were to add the support, I guess a variant of InfoQueue and DataQueue, ie. OrderedInfoQueue & OrderedDataQueue in DefaultTrackOutput may be necessary that orders the samples on timestamps.  Or perhaps a OrderedTrackOutput. Your opinion?\r\n\r\n### Reproduction steps\r\nAny AVC content that supports B Frames and CC.\r\n\r\n### Link to test content\r\nCan't be shared as of now. Will check how it can be shared if necessary.\r\n\r\n### Version of ExoPlayer being used\r\n2.3.1\r\n\r\n### Device(s) and version(s) of Android being used\r\nAny. Not device specific.\r\n\r\n### A full bug report captured from the device\r\nNA\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2758/comments",
    "author": "peddisri",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-05-02T07:30:13Z",
        "body": "This is supported already (by the fact CeaDecoder uses a TreeSet). Trying to play some content of this form would presumably have allowed you to answer this question for yourself. If you're actually seeing captions being presented in the wrong order, please let us know."
      },
      {
        "user": "peddisri",
        "created_at": "2017-05-02T08:29:47Z",
        "body": "Thanks! My bad, I was looking at a higher level, not at CEADecoder level. This answers my question. "
      }
    ]
  },
  {
    "number": 2753,
    "title": "Synchronization issue with applying specific effects on HLS video stream using ExoPlayer",
    "created_at": "2017-04-28T20:25:13Z",
    "closed_at": "2017-05-24T14:22:34Z",
    "labels": [
      "question",
      "need more info"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2753",
    "body": "Hi,\r\n\r\nI am playing an HLS video stream in my android app using ExoPlayer. Everything works fine except for one particular scenario where I suppose it is a synchronization related artifact.\r\n\r\nSo in my app, I am trying to add some effect (e.g. zoom effect or some rotation effect) on the hls video stream at particular time instants. The video stream I have is 30fps.\r\nFor example, each of my HLS segment is 1 second long. And I want to apply such effects starting at HLS segment number 12 or at the starting of 12th second in the stream.\r\n\r\nSo what I do in my app is, I call getCurrentPosition(), which should return current playback position. I have placed this call inside OnDrawFrame(), which is called every time the screen is refreshed, which is roughly 60 times per second on my S7.\r\n\r\nSo in my app I have some thing like this:\r\nonDrawFrame(float v) { // called periodically every 0.016666666666667 seconds\r\n// check if current playback position has just crossed 12 seconds mark\r\n    if (player.getCurrentPosition() >= 12000) {\r\n        // code to apply new effects\r\n    }\r\n}\r\n\r\nThis code works fine for the most part. But I see that the new effect is either delayed or advanced by couple of frames. and not being applied right at the first frame of the 12th segment. This is not always the case but happens roughly 50% of the time. And I see a very quick flicker when this happens.\r\n\r\nAny suggestions on what I am missing here? How to make sure that the new effects I am applying are being applied exactly from the first frame of 12th segment?\r\n\r\nI see the same behavior on S6, S7 and Pixel.\r\n\r\nThanks a lot in advance.\r\n\r\nShalin",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2753/comments",
    "author": "shalin186",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2017-05-02T10:41:14Z",
        "body": "As general guidance, to get this to work well I think you'd need to have some code that decides whether to apply the effect based on the frame timestamp before the frame is rendered, rather than polling the player position. The player position is determined by the audio track, but video renderers may show frames (imperceptibly) late or early relative to this position.\r\n\r\nTo give more specific help it would be useful to know what renderer you're using (e.g., `MediaCodecVideoRenderer`) and how are the effects applied (e.g., using an pixel shader)."
      },
      {
        "user": "ojw28",
        "created_at": "2017-05-24T14:22:34Z",
        "body": "Closing due to lack of information."
      }
    ]
  },
  {
    "number": 2744,
    "title": "Error assembling ExoPlayer v2.4.0 with Google Play Services",
    "created_at": "2017-04-27T19:42:07Z",
    "closed_at": "2017-04-27T22:36:06Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2744",
    "body": "Errors assembling ExoPlayer v2.4.0 together with Google Play Services.\r\nConfiguration example:\r\n`compile 'com.google.android.gms:play-services-ads:10.2.0'`\r\n`compile 'com.google.android.exoplayer:exoplayer:r2.4.0'`\r\n\r\nI guess, the problem is that exoplayer uses \"com.android.support:support-annotations:25.3.1\"\r\nwhile play-services uses \"com.android.support:support-v4:24.0.0\", which are not compatible.\r\n\r\nError log assembling in Debug mode:\r\n`Error:Error converting bytecode to dex:`\r\n`Cause: com.android.dex.DexException: Multiple dex files define Landroid/support/v4/accessibilityservice/AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl;`\r\n`...`\r\n\r\nError log assembling in Release mode:\r\n`Warning:Exception while processing task java.io.IOException: Can't write`\r\n`[C:\\Users\\...\\app\\build\\intermediates\\transforms\\proguard\\release\\jars\\3\\1f\\main.jar]`\r\n`(Can't read [C:\\Users\\...\\.android\\build-cache\\7240ae15...6b07e16\\output\\jars\\classes.jar(;;;;;;**.class)]`\r\n`(Duplicate zip entry [android/support/a/a/ac.class == classes.jar:android/support/v4/app/NotificationCompat.class]))`\r\n\r\nRemoving play-services solves the issue.\r\n\r\nWith v2.3.1 there is no such issue.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2744/comments",
    "author": "aarondib",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-04-27T22:35:56Z",
        "body": "They are compatible, it's just that gradle isn't clever enough to figure it out. You can resolve the problem by amending your example to explicitly also depend on the most recent version of com.android.support:support-v4, like:\r\n\r\ncompile 'com.google.android.gms:play-services-ads:10.2.0'\r\ncompile 'com.google.android.exoplayer:exoplayer:r2.4.0'\r\ncompile 'com.android.support:support-v4:25.3.1'\r\n\r\nThe need to do this is a side effect of the modularization of the Android support library, and is necessary if you end up depending (directly or transitively) on both a pre-modularization version of the support library and one or more of the individual modules from a post-modularization version. In this scenario gradle doesn't have enough information to correctly resolve the dependencies.\r\n\r\nThe first modularized version was 24.2.0, so the workaround wont be necessary once play-services-ads updates to depend on a version greater than that."
      }
    ]
  },
  {
    "number": 2727,
    "title": "DRM Challenge",
    "created_at": "2017-04-25T18:42:49Z",
    "closed_at": "2017-08-05T00:06:38Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2727",
    "body": "it's possible to create a key Challenge  for play a protected video with DRM  , i'm workin with  \"theplatform\"  and i need to pass a Challenge and the documentations says that its create by client \r\n\r\n\"getWidevineLicense\": {\r\n    \"releasePid\": \"xxXXXxx\",\r\n    \"widevineChallenge\": \"Adlkejk=\"    \r\n  }",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2727/comments",
    "author": "steff-maya",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-08-05T00:06:38Z",
        "body": "There are examples of playing Widevine protected content in the demo app, so that should be a good starting point.\r\n\r\nIt's a little unclear what this question is about, however. There's not really enough information or context (e.g. a link to the content you're trying to play) for us to assist."
      }
    ]
  },
  {
    "number": 2721,
    "title": "Why discarding from chunks after a certain chunk instead of discarding a single chunk?",
    "created_at": "2017-04-24T19:55:23Z",
    "closed_at": "2017-04-24T21:20:05Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2721",
    "body": "In ExoPlayer, when network condition becomes better, TrackSelection finds the first chunk with lower quality in the buffer and calls discardUpstreamMediaChunks to discard all following chunks. It is possible that some chunks of good quality are also discarded.\r\n\r\nMy question is that why ExoPlayer does not check each chunk and only discard the ones with lower quality? Thanks.\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2721/comments",
    "author": "xushichang0",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-04-24T20:05:24Z",
        "body": "Because it's really hard to implement it properly, in a way that neither adds a whole bunch of complexity or makes things less efficient elsewhere.\r\n\r\nNote that this code isn't actually active in V2 at the moment (we actually never discard). There's a TODO in ChunkSampleStream to start applying the discard logic again, although in practice it's unclear whether it's that worthwhile. There's an argument to saying that if network conditions were poor and yet you've got a big enough buffer to be discarding from it, you should have probably been requesting a higher quality.\r\n"
      },
      {
        "user": "xushichang0",
        "created_at": "2017-04-24T21:03:51Z",
        "body": "Thanks for your response.\r\n\r\nCould you tell me more about the complexity of proper implementation? I notice the current implementation of ExoPlayer uses a rolling buffer to store the chunks. Is this the main cause why it can not discard a single chunk? Thanks."
      },
      {
        "user": "ojw28",
        "created_at": "2017-04-24T21:20:05Z",
        "body": "That's one reason. We could store each chunk in its own buffer, but there are negative implications to doing so (it's not possible to do this without incurring one of the following: less efficient packing of buffered media in memory, significant additional complexity, additional memory allocations).\r\n\r\nThere are a few other reasons as well. It's hard to provide an exhaustive list, but as an example (that I haven't thought through particularly carefully, so sorry if this makes no sense :)) suppose your buffering policy wants to place a limit on the size in bytes of buffered media. How would you enforce this limit if it were possible to have to replace chunks from the middle of the buffer? You'd need to (potentially) discard some chunks from the end of the buffer regardless of their quality in order to avoid violating the policy, which would require the discard logic to know about the details of the buffering policy, which would require dependencies between components that are currently unrelated, as well as additional complexity in components like `LoadControl`.\r\n\r\nSo yeah, there are lots of fairly nuanced trade-offs involved and it's likely not worth the additional complexity/cost.\r\n"
      }
    ]
  },
  {
    "number": 2711,
    "title": "How to get a file from cache?",
    "created_at": "2017-04-20T09:10:24Z",
    "closed_at": "2017-04-21T09:48:24Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2711",
    "body": "I use CacheDataSourceFactory to cache some video, but now I want to get the cached file and save to sdcard, What should I do ?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2711/comments",
    "author": "Charles-ljc",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-04-21T09:48:24Z",
        "body": "It's not correct to assume that we cache the media as a simple file. We may do things like fragment the media into multiple cache files, for example, so that the cache eviction policy can work with finer granularity than a whole piece of media. We may also arbitrarily change the on-disk cache format at any time.\r\n\r\nSo there is no direct files access. If you want to read the data from the cache you should do so by instantiating a CacheDataSource instance and then reading from it in the normal way (i.e. calling `open` with a `DataSpec` corresponding to the piece of media, calling `read` to read the data, then calling `close` when you're done). You could write the data into a file as you're reading it, if that's what you really want."
      }
    ]
  },
  {
    "number": 2700,
    "title": "S/PDIF Passthrough in exoplayer",
    "created_at": "2017-04-18T19:45:02Z",
    "closed_at": "2017-04-21T09:48:02Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2700",
    "body": "How can i enable S/PDIF passthrough, if i am using an android box \r\n**I enabled Ac3 support to the ff-mpeg in  Exoplayer but Its giving PCM output  in the S/PDIF** \r\nDevice :-  Himedia H8 and Q5 Android Box\r\nOS:- Android 5.1.1\r\nH8 CPU:- Rockchip Rk3368 ARM Cortex A53 Octa-Core 64 Bit Processor   &\r\nQ5 CPU:-Hisilicon Hi3798CV200 Quad core 64-bit high-performance ARM Cortex A53 CPU, 2.0GHz\r\nThese device has the build in support for Passthrough if i use normal Video View  it will give 5.1 output \r\nin the spdif .If i use the exoplayer it will give PCM stereo \r\nBuld in Renderer:- **RockFFPlayer** \r\n_Where do i start, please help !!!!_ ",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2700/comments",
    "author": "darwinvtomy",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2017-04-21T09:48:02Z",
        "body": "If the Android TV box is connected via HDMI, please read #2148. Otherwise, this is probably covered by the enhancement in #1741."
      },
      {
        "user": "darwinvtomy",
        "created_at": "2017-04-26T05:21:48Z",
        "body": "I followed your above comments and i got this error AudioTrack init failed: 0, Config(48000, 252, 20480)\r\ndoes it have anything to do with this line of code\r\n  private static final MediaCodecInfo PASSTHROUGH_DECODER_INFO =\r\n      MediaCodecInfo.newPassthroughInstance(\"**_OMX.google.raw.decoder_**\");\r\n"
      },
      {
        "user": "andrewlewis",
        "created_at": "2017-05-07T16:10:17Z",
        "body": "There's not nearly enough information here to investigate this. As requested in the issue template, we need a full bug report. Also, I don't know anything about RockFFPlayer, but if it's an ExoPlayer renderer then the issue probably lies there.\r\n\r\nIf you want to use ExoPlayer's HDMI passthrough support, please refer to #2148 as mentioned in my previous comment."
      },
      {
        "user": "arnoutvandervorst",
        "created_at": "2017-06-12T11:51:22Z",
        "body": "It actually works for me now with Shield Preview 5.2. The update seems to have added something which tells ExoPlayer it can passthrough...yay!"
      }
    ]
  },
  {
    "number": 2692,
    "title": "About reconfiguration initializationData",
    "created_at": "2017-04-16T18:36:35Z",
    "closed_at": "2017-04-17T16:45:27Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2692",
    "body": "I found the following code in MediaCodecRenderder \r\n\r\n``` Java\r\n// For adaptive reconfiguration OMX decoders expect all reconfiguration data to be supplied\r\n// at the start of the buffer that also contains the first frame in the new format.\r\nif (codecReconfigurationState == RECONFIGURATION_STATE_WRITE_PENDING) {\r\n    for (int i = 0; i < format.initializationData.size(); i++) {\r\n        byte[] data = format.initializationData.get(i);\r\n        buffer.data.put(data);\r\n    }\r\n    codecReconfigurationState = RECONFIGURATION_STATE_QUEUE_PENDING;\r\n}\r\n```\r\n\r\nit's clear to understand the code according to the comment. But I have a question that the code is just work round for ExoPlayer's custom Extractor cooperating with MediaCodec or there are some bugs with Android MediaExtractor and MediaCodec when I try to reconfigure it on some devices?\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2692/comments",
    "author": "cauchywei",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-04-17T16:45:27Z",
        "body": "It's just getting the data to be organized into buffers in the way that MediaCodec expects it. It's neither a workaround nor is it related to any known bugs."
      }
    ]
  },
  {
    "number": 2684,
    "title": "Specify start-end of a MediaSource",
    "created_at": "2017-04-13T20:56:55Z",
    "closed_at": "2017-04-17T19:19:39Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2684",
    "body": "I want to create a playlist containing several files. Some files contain chapter marks, so I want to treat them as separate tracks.\r\n\r\nIs it possible to specify multiple media sources for a single file so a single `ConcatenatingMediaSource` can represent the whole playlist?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2684/comments",
    "author": "PaulWoitaschek",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-04-17T19:19:39Z",
        "body": "It might be possible using multiple `ClippingMediaSource` instances and concatenating them together, but I doubt that would be a good/satisfactory solution. It's definitely less efficient to play, and depending on the type of the files you may not get seamless transitions at the chapter boundaries.\r\n\r\nA single file with chapter marks *is* a single file, and so it doesn't seem like a good idea to try and trick the player into treating it as multiple separate files. This sounds like a UI problem as much as anything. You could play it as a single file and have a UI that's aware of the chapter information, which would be a much better solution."
      }
    ]
  },
  {
    "number": 2679,
    "title": "[Question][HLS] How to use standalone HlsMediaSource to get current windows position of Live Playback",
    "created_at": "2017-04-12T20:23:53Z",
    "closed_at": "2017-04-25T09:07:40Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2679",
    "body": "### Issue description\r\nBefore starting playback or attaching exoplayer to MediaSource, I want to know what is the current end location of HLS.\r\nThe window is dynamic since it is live playback, I want to know beforehand where the end is so that I can start from some other location based on end location.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2679/comments",
    "author": "swinder0161",
    "comments": [
      {
        "user": "AquilesCanta",
        "created_at": "2017-04-25T09:07:40Z",
        "body": "> Before [...] attaching exoplayer to MediaSource\r\n\r\nBefore calling `prepare(MediaSource)`, ExoPlayer does not know what the stream looks like. In that case, you are on your own, unfortunately.\r\n\r\n> Before starting playback\r\n\r\nYou can prepare the player with playWhenReady == false, see what the window looks like (`ExoPlayer.EventListener#onTimelineChanged` will help), seek to the position you are interested in, and then set playWhenReady to true. This should work, from what I understood.\r\n\r\n> end location of HLS\r\n\r\nI assume you mean the live edge or the start of the window.\r\n"
      }
    ]
  },
  {
    "number": 2673,
    "title": "Can it be used as PlayerFragment?",
    "created_at": "2017-04-11T11:18:16Z",
    "closed_at": "2017-04-12T12:45:22Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2673",
    "body": "I tried the demo with PlayerActivity. Can I use it as PlayerFragment calling from the other fragment?\r\nIf so, can it also support fullscreen?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2673/comments",
    "author": "chaocharleswang",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-04-12T12:45:22Z",
        "body": "There's nothing stopping you from using ExoPlayer within a Fragment. We do not provide a demo that does this, but it shouldn't be any different than using any other component and/or library within a Fragment."
      }
    ]
  },
  {
    "number": 2658,
    "title": "Selecting multiple video tracks for a video renderer",
    "created_at": "2017-04-07T12:11:54Z",
    "closed_at": "2017-08-04T23:16:51Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2658",
    "body": "Hi,\r\n\r\nI know that DASH-SRD support is not provided and not planned, thus i'm currently trying to implement it in a decent way into exoplayer 2. The purpose of the implementation is to be able to playback a tiled video described with DASH-SRD.\r\n\r\nI am currently struggling to find a proper way to render the video. I'd like to avoid instantiating one renderer per tile because each of them will in turn instantiate a codec and things might get messy as stated in other issues (#273 for exemple for limitations on having too many codec instances).\r\nThe plan is to use a single renderer which is fed with several video tracks (one per tile) and manages the decoding and construction of the final frame.\r\n\r\nI would like to know if you have any advice on how to handle the selection of multiple video tracks for one renderer ?\r\n\r\nMy guess is by implementing my own version of a TrackSelector, which would select one track for each TrackGroup of type TRACK_TYPE_VIDEO but that means returning more tracks than the number of active renderers (several tracks are returned for only one video renderer), which doesn't seem to be the expected behavior of the track selector. Should I then grow the list of active renderers by adding my video renderers as many times as there are tiles in the video to make it comply with the framework expectations ?\r\n\r\nI would really appreciate to have your thoughts and some advice on the subjects.\r\nThanks.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2658/comments",
    "author": "Endmaril",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-08-04T23:16:51Z",
        "body": "Feeding multiple video streams into a single decoder isn't a valid thing to do. Video decoders are stateful, since decoding a frame often depends on the result of having decoded the frames that come before it. Decoders also re-order frames from decode order into presentation order. Hence there needs to be a 1:1 relationship between video streams and decoders.\r\n\r\nHence if you want to decode multiple video streams in parallel, there is no option but to instantiate multiple decoders. Given this, there's no reason not to use multiple renderers to do so. You're correct to say that you might hit issues such as there only being a limited number of decoder instances."
      }
    ]
  },
  {
    "number": 2652,
    "title": "In playlist, consecutive renderers getting data from SingleSampleMediaSource get the \"onStreamChanged\" callback too soon",
    "created_at": "2017-04-05T15:02:44Z",
    "closed_at": "2017-04-06T17:49:33Z",
    "labels": [
      "question",
      "wont fix: infeasible"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2652",
    "body": "### Issue description\r\nI have a playlist with several consecutive media, rendered by a custom renderer, getting data from SingleSampleMediaSource (read once the data, and display it for several seconds, according to parameters of SingleSampleMediaSource). The onStreamChanged callback is triggered several times during first media, with corresponding offsets(for each of them). The problem seem to arise in updatePeriods (ExoPlayerImplInternal.java), where renderer.replaceStream gets called for all media, while first media did not finish rendering.\r\n\r\nHandling all of them (the streams) in the renderer is difficult, since each data is quite large. Workarounds would include: do not set hasReadStreamToEnd, until the end of the current media being rendered, or introduce initial discontinuity for each (don't know how to do that)\r\n\r\nI would expect to get the callback for the next media after the current media is done rendering.\r\n\r\n### Reproduction steps\r\nNot that easy with the demo app. Anyway, code analysis of updatePeriods (ExoPlayerImplInternal.java) should reveal the issue.\r\n\r\n### Link to test content\r\nNA\r\n\r\n### Version of ExoPlayer being used\r\nRelease 2.2.0\r\n\r\n### Device(s) and version(s) of Android being used\r\nAndroid 4.3, Samsung Galaxy S3, 100% reproduction, does not seem device dependent.\r\n\r\n### A full bug report captured from the device\r\nNA\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2652/comments",
    "author": "b0g8",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-04-06T17:49:33Z",
        "body": "This is working as intended. Some renderer implementations are pipelined (i.e. have a certain amount of internal buffer). If we were to wait for the first piece of the media to fully play out before moving to the next, that would require completely emptying the renderer pipelines. This in turn would result in stuttering at the point of transition. It would also break gapless audio playback.\r\n\r\n> Handling all of them (the streams) in the renderer is difficult, since each data is quite large. Workarounds would include: do not set hasReadStreamToEnd, until the end of the current media being rendered, or introduce initial discontinuity for each (don't know how to do that)\r\n\r\nI'm not really sure what you mean by this. It's up to your renderer implementation to choose how far it reads ahead, since it's the thing that's reading from the sample stream. If you feel your renderer is reading too far ahead, just don't read anything else from the sample stream for a while."
      },
      {
        "user": "b0g8",
        "created_at": "2017-04-10T11:27:33Z",
        "body": "Thanks."
      }
    ]
  },
  {
    "number": 2647,
    "title": "Removing view does not remove ExoPlayer from layout",
    "created_at": "2017-04-04T16:08:19Z",
    "closed_at": "2017-04-11T11:29:37Z",
    "labels": [
      "question",
      "need more info"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2647",
    "body": "I am adding `SimpleExoPlayerView` programmatically during runtime and removing it later using `removeViewAt`. The problem is, it does not get completely removed from the layout. I have checked the debug and after `removeViewAt` it completely removes it from the memory, but it does not seems to refresh the layout automatically. If I use `removeAllViews`, then it removes all other views and refreshes the layout automatically, but the `SimpleExoPlayerView` remains there.\r\n\r\nHow to resolve it?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2647/comments",
    "author": "zishanj",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-04-04T16:50:15Z",
        "body": "Does the same issue occur if you add and remove a regular `Surface` instead of `SimpleExoPlayerView`? If so this is not an ExoPlayer issue, and so I'd recommend filing a bug on the Android issue tracker and/or asking on StackOverflow.\r\n\r\nAside: Please fill in the issue template properly. It's unclear whether this is device specific, for example. Thanks!"
      },
      {
        "user": "zishanj",
        "created_at": "2017-04-05T04:35:57Z",
        "body": "The only temporary solution that exists is to hide it.\r\n\r\nP.S This issue is not device specific."
      },
      {
        "user": "ojw28",
        "created_at": "2017-04-11T11:29:37Z",
        "body": "I made a minimal change to the demo app to test this. The change I made was to `PlayerActivity`. I stashed `rootView` as a member variable and modified `onClick` to remove the view using `rootView.removeViewAt(rootView.indexOfChild(simpleExoPlayerView));` if one of the buttons is pressed. I also gave `rootView` a bright background color so it's obvious when views above it have been removed properly.\r\n\r\nEverything works as expected when I do this, so closing the issue as not reproducible. It doesn't really sound like an ExoPlayer issue anyway. If you want us to investigate further you'll need to file a new issue that properly fills out the issue template, including clear reproduction steps as to how this can be reproduced in the demo app. If you cannot reproduce the issue by making minimal modifications to the demo app, it's likely a bug in your application code."
      }
    ]
  },
  {
    "number": 2645,
    "title": "How to retrieve bytes read online stream from Exoplayer after / before being played ?",
    "created_at": "2017-04-04T10:50:04Z",
    "closed_at": "2017-05-02T22:09:11Z",
    "labels": [
      "question",
      "need more info"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2645",
    "body": " Hi , First thank you for this awesome library.\r\nplease if you don't mind i want to know how can i retrieve bytes read from Explayer after / before being played ?\r\ni've looked at **ByteArrayDataSource** but i can't understand how to deal with it and how to use it with the player.\r\nKind regards",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2645/comments",
    "author": "satyres",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-04-06T17:42:14Z",
        "body": "What do you intend to do with the data once you've retrieved it?"
      },
      {
        "user": "satyres",
        "created_at": "2017-04-23T09:46:51Z",
        "body": "i want to record them for my personal use .\r\n "
      },
      {
        "user": "ojw28",
        "created_at": "2017-04-27T10:02:42Z",
        "body": "It's very unclear exactly what you're asking for. What do you actually intend to do with the data. What does \"personal use\" mean? If you just want to obtain the media file, why not download it directly using a normal http request?"
      },
      {
        "user": "satyres",
        "created_at": "2017-05-03T14:29:09Z",
        "body": "ok,for the AAC and MP3 it's easy , but HLS , RTSP streams how can i record them ?\r\nso the main idea is to obtain the bytes read before / after being played by the engine of Exoplayer.\r\nso how can i obtain the bytes to record them on my phone?\r\nThank you"
      }
    ]
  },
  {
    "number": 2642,
    "title": "Support for limiting/disabling buffering",
    "created_at": "2017-04-02T16:37:47Z",
    "closed_at": "2017-04-03T07:43:39Z",
    "labels": [
      "question",
      "need more info"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2642",
    "body": "Hello folks, I tried searching a lot, but couldn't find anything that let's me control the buffering. I was wondering if it's possible to either limit buffering or disable it as soon as the first frame has been grabbed to display a preview. This would be helpful for our users that are on slower data connection.\r\n\r\n### Version of ExoPlayer being used\r\nr2.3.1\r\n\r\n### Device(s) and version(s) of Android being used\r\nGoogle emulator\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2642/comments",
    "author": "saket",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-04-02T18:53:38Z",
        "body": "If you're trying to implement a preview, wouldn't it be a lot more efficient to extract the thumbnail on the server-side and just deliver it as an image to the client? It feels pretty heavy to be instantiating a video decoder and buffering the head of a video stream if that's the use case."
      },
      {
        "user": "saket",
        "created_at": "2017-04-03T07:43:39Z",
        "body": "I'm building a client for user submitted videos that are mostly hosted on imgur, gfycat, streamable, etc. so that won't be possible. But as you, I guess adding support for just getting the first frame would be heavy and not something that you'd want to do.\r\n\r\nI also realized yesterday that Exoplayer does indeed not buffer the entire video. So my question is void."
      }
    ]
  },
  {
    "number": 2641,
    "title": "Track extension and bitrate",
    "created_at": "2017-04-02T14:29:37Z",
    "closed_at": "2017-04-25T16:33:56Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2641",
    "body": "I write player and trying to get file extension, bitrate and sample rate. My question is why bitrate always returns -1 and how to get file extension?\r\nP.S. sample rate returns as expected.\r\n\r\n\r\n@Override\r\n            public void onAudioInputFormatChanged(Format format) {\r\n                StringBuilder builder = new StringBuilder();\r\n                builder.append(format.codecs);\r\n                builder.append(\", \");\r\n                builder.append(format.bitrate);\r\n                builder.append(\", \");\r\n                builder.append(format.sampleRate);\r\n                builder.append(\"Hz\");\r\n}",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2641/comments",
    "author": "Merseyside",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-04-02T18:56:08Z",
        "body": "- Given you have to tell ExoPlayer the URL (or file) that you want us to play, surely you know what the file extension is already (because you've given it to us)?\r\n- We only report bitrate if it's defined by the media. This is typically true in DASH, HLS and SmoothStreaming where bitrates are specified at the manifest level. It's typically not true for other media, in which case we set the value to -1 as indicated by the documentation."
      }
    ]
  },
  {
    "number": 2636,
    "title": "Question - how does the vp9 extension help?",
    "created_at": "2017-03-30T22:20:51Z",
    "closed_at": "2017-04-04T16:50:37Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2636",
    "body": "Did you run any benchmark on how it performs? \r\nDoes it only affect software decoding capabilities or does it affect hardware decoding capabilities as well? \r\nWill be helpful for us to have a better understanding of the benefit of using this extension. \r\n\r\nThanks",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2636/comments",
    "author": "ethanjyx",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-03-30T23:14:58Z",
        "body": "That's a complicated question to answer in practice. You're probably interested in performance relative to the VP9 decoder that the platform provides, but the platform decoder varies by device and there's nothing like a (working) platform API for querying how performant a platform decoder is. Performance of both the platform decoder and the one in the extension may be affected differently by things like thermal CPU throttling, what else your app is doing and other processes that are consuming CPU, so relative performance may vary at runtime. Furthermore, what \"performance\" means really depends on what you want to optimize for. If you're playing 10 second clips there's probably no point optimizing for power consumption. If you're playing full length movies, it's far more important. So it's a really messy topic in practice. We provide the extension as an option, and leave it up to you to evaluate whether it works well for you (e.g. by looking at analytics data gathered from your app, evaluating your priorities and so on).\r\n\r\nAs some general guidance:\r\n\r\n* One advantage of the extension is that you'll be running the exact same decoder software on all devices. This will better isolate you from variation (and possible bugs) in the different platform decoder implementations. If your requirements aren't particularly strenuous (e.g. short, low resolution videos) then performance probably isn't that important, in which case it may well make sense to use the extension just to eliminate this kind of potential variation between devices.\r\n* If a device provides a hardware VP9 decoder then it will probably consume less power than the extension decoder. This is particularly relevant for long duration content. You'd hope it would be more performant in terms of max resolution / frame-rate capability as well, but I'm not sure that's a given. There's no platform API to query whether a decoder is hardware based or not, since in practice the line is quite fuzzy, but if it's called \"OMX.google.vp9.decoder\" you can pretty safely assume it's a Google provided software decoder. If it's something else then it's probably provided by the system-on-chip vendor and is likely hardware accelerated in some way.\r\n* If the platform decoder is \"OMX.google.vp9.decoder\" then using the extension is likely to give better performance, particularly when running on older Android releases, simply because the extension will be using a more recent version of libvpx.\r\n* There is of course an overhead in terms of application size when bundling the extension, which is not incurred when relying on the platform decoder.\r\n\r\n@vigneshvg - Anything else to add (or anything I've said that's inaccurate :))?"
      }
    ]
  },
  {
    "number": 2628,
    "title": "Question: How to switch Audio Tracks in an HLS stream?",
    "created_at": "2017-03-30T05:30:42Z",
    "closed_at": "2017-03-30T09:35:41Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2628",
    "body": "We currently use ExoPlayer 1.5.7, but are considering a switch to ExoPlayer 2.2. So this question applies equally to both.\r\n\r\nWe have several different audio tracks in a stream - segregated by language and a couple other factors. What's the best way to switch between tracks? Can this be done on the fly or would the entire content need to be re-prepared?\r\n\r\nIn ExoPlayer 2, we noticed that `DefaultTrackSelector.selectAudioTrack()` gets called by `ExoPlayerImplInternal.handlePrepared()`. So perhaps track selection can only be done right after a prepare? And is the best solution to create our own TrackSelector? Or is there an existing one that could easily fit the bill?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2628/comments",
    "author": "sapanda",
    "comments": [
      {
        "user": "AquilesCanta",
        "created_at": "2017-03-30T09:35:41Z",
        "body": "As long as you are providing the alternative audio tracks demuxed (see #2014), you can either use a track selection override (have a look at the demo app for this) or set the according selection parameters to the default track selector:\r\n\r\n`selector.setParameters(selector.getParameters().withPreferredAudioLanguage(\"eng\");`\r\n\r\n> So perhaps track selection can only be done right after a prepare? \r\n\r\nIt can be done at any point. The demo app is a good example of this.\r\n\r\n> And is the best solution to create our own TrackSelector? Or is there an existing one that could easily fit the bill?\r\n\r\nUnless you are doing seriously complicating the DefaultTrackSelector should provide what you need. You can even subclass it to override a specific track type selection.\r\n\r\nHope this helps.\r\n"
      }
    ]
  },
  {
    "number": 2627,
    "title": "Handling default playback controls listener",
    "created_at": "2017-03-30T04:52:03Z",
    "closed_at": "2017-03-30T09:58:51Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2627",
    "body": "Is there any way to handle default playback controls listener so we can override it with some additional feature?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2627/comments",
    "author": "zishanj",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-03-30T09:58:51Z",
        "body": "It's unclear what this question means. Also, there's a limit to the amount of per-app customization guidance we can provide. Please ask such questions on StackOverflow. This tracker is more for actual bugs/issues."
      },
      {
        "user": "zishanj",
        "created_at": "2017-03-30T10:42:22Z",
        "body": "Actually I am using `SimpleExoPlayerView` which shows default controls. I want to handle the click events of those controls play, pause, forward etc. so I can override it to extend its functionality."
      }
    ]
  },
  {
    "number": 2616,
    "title": "Detect if LIVE content have video or not",
    "created_at": "2017-03-28T06:37:08Z",
    "closed_at": "2017-03-29T06:00:58Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2616",
    "body": "I am working on a project in which I am using same url to deliver both LIVE audio and audio/video content and format is in m3u8. Is there any possibility to detect whether the stream contains video content or not, so I can show layout accordingly? \r\n\r\nI am using `HlsMediaSource` class.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2616/comments",
    "author": "zishanj",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-03-28T10:49:08Z",
        "body": "You can probably use `ExoPlayer.isCurrentWindowDynamic` for this. Please give it a try!"
      },
      {
        "user": "ojw28",
        "created_at": "2017-03-28T10:52:01Z",
        "body": "Sorry, ignore the response above. I thought you were asking how to determine if the stream is live or not.\r\n\r\nThe ExoPlayer demo app lists the audio and video tracks (they're also logged by EventLogger). Take a look at what the demo app code does to achieve this, and it should be apparent how you can query the tracks and discover what's available."
      },
      {
        "user": "zishanj",
        "created_at": "2017-03-28T16:44:46Z",
        "body": "Thanks, I will give it a try and update here."
      },
      {
        "user": "zishanj",
        "created_at": "2017-03-29T06:00:58Z",
        "body": "I have checked the demo code and found that I have to use the `onTracksChanged` listener and check for the value of `MappingTrackSelector.MappedTrackInfo.RENDERER_SUPPORT_PLAYABLE_TRACKS`in `mappedTrackInfo.getTrackTypeRendererSupport(C.TRACK_TYPE_VIDEO)`. It works! :)\r\n\r\n"
      }
    ]
  },
  {
    "number": 2610,
    "title": "Live set max allowed latency",
    "created_at": "2017-03-26T23:13:52Z",
    "closed_at": "2017-03-27T09:39:13Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2610",
    "body": "Hi, I have a HLS live streaming for a radio station, which should always be close to the live edge, even after a stall (for example, because of internet disconnections or any connectivity issue). I'm looking for something similar to the `liveMaxLatencyDurationCount` option of `hls.js`. Is this available with ExoPlayer?\r\n\r\nThanks",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2610/comments",
    "author": "aletorrado",
    "comments": [
      {
        "user": "AquilesCanta",
        "created_at": "2017-03-27T09:39:13Z",
        "body": "Not supported. But it should be fairly easy to implement. An approach I can imagine is, on each `onTimelineChanged`, compare the current playback position with `liveEdge - liveMaxLatencyDurationCount`. If less, seek to, say, `liveEdge - liveMaxLatencyDurationCount / 2`. This is just an idea, though. Having small latency might incur into many seeks, so you should evaluate what is most appropriate for your app. Hope this helps!"
      },
      {
        "user": "duanyao",
        "created_at": "2017-03-28T11:35:46Z",
        "body": "You can also adjust playback speed instead of seek to catch up small latency."
      }
    ]
  },
  {
    "number": 2591,
    "title": "Detecting the DRM support before player initializing",
    "created_at": "2017-03-22T10:49:01Z",
    "closed_at": "2017-11-19T14:55:41Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2591",
    "body": "Hello,\r\n\r\nSearched for similar tickets but haven't found one.\r\nIs it possible to detect that a device doesn't support DRM playing before player initialization or playing a video? If it is do you have some plans about it? Or how can we do it by ourselves?\r\n\r\nThanks!",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2591/comments",
    "author": "evorotilova",
    "comments": [
      {
        "user": "richardissuperman",
        "created_at": "2017-03-23T02:15:55Z",
        "body": "different DRM has a unique UUID schema, you do something like what exoplayer does, use the uuid to init a MediaDrm object, if its not supported exceptions will be thrown\r\n```\r\npublic static FrameworkMediaDrm newInstance(UUID uuid) throws UnsupportedDrmException {\r\n    try {\r\n      return new FrameworkMediaDrm(uuid);\r\n    } catch (UnsupportedSchemeException e) {\r\n      throw new UnsupportedDrmException(UnsupportedDrmException.REASON_UNSUPPORTED_SCHEME, e);\r\n    } catch (Exception e) {\r\n      throw new UnsupportedDrmException(UnsupportedDrmException.REASON_INSTANTIATION_ERROR, e);\r\n    }\r\n  }\r\n```"
      }
    ]
  },
  {
    "number": 2585,
    "title": "ExoPlayerImplInternal: Renderer error when creating more than 15 files",
    "created_at": "2017-03-21T11:37:01Z",
    "closed_at": "2017-03-22T18:58:49Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2585",
    "body": "Hello\r\n\r\nI am using the ExoPlayer 2 to play a local audio files. My app builds several instances of SimpleExoPlayer, some of them are not working and I see the following exceptions:\r\n\r\n```\r\nE/ExoPlayerImplInternal: Renderer error.\r\n   com.google.android.exoplayer2.ExoPlaybackException \r\nat com.google.android.exoplayer2.audio.MediaCodecAudioRenderer.processOutputBuffer(MediaCodecAudioRenderer.java:339)\r\n    at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.drainOutputBuffer(MediaCodecRenderer.java:891)\r\n    at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.render(MediaCodecRenderer.java:484)\r\n    at com.google.android.exoplayer2.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:479)\r\n    at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:315)\r\n    at android.os.Handler.dispatchMessage(Handler.java:98)\r\n    at android.os.Looper.loop(Looper.java:136)\r\n    at android.os.HandlerThread.run(HandlerThread.java:61)\r\n\tat com.google.android.exoplayer2.util.PriorityHandlerThread.run(PriorityHandlerThread.java:40)\r\nCaused by: com.google.android.exoplayer2.audio.AudioTrack$InitializationException: AudioTrack init failed: 0, Config(44100, 12, 61440)\r\n    at com.google.android.exoplayer2.audio.AudioTrack.checkAudioTrackInitialized(AudioTrack.java:974)\r\n    at com.google.android.exoplayer2.audio.AudioTrack.initialize(AudioTrack.java:521)\r\n    at com.google.android.exoplayer2.audio.MediaCodecAudioRenderer.processOutputBuffer(MediaCodecAudioRenderer.java:332)\r\n    at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.drainOutputBuffer(MediaCodecRenderer.java:891) \r\n    at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.render(MediaCodecRenderer.java:484) \r\n    at com.google.android.exoplayer2.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:479) \r\n    at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:315) \r\n    at android.os.Handler.dispatchMessage(Handler.java:98) \r\n    at android.os.Looper.loop(Looper.java:136) \r\n    at android.os.HandlerThread.run(HandlerThread.java:61) \r\n    at com.google.android.exoplayer2.util.PriorityHandlerThread.run(PriorityHandlerThread.java:40) \r\n```\r\nI don't get these exceptions when I load 15 audio files or less. Is there a limit on the number of SimpleExoPlayer instances that can be made ?\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2585/comments",
    "author": "mcaquet",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2017-03-21T11:58:13Z",
        "body": "I think the limitation here is that you can only create a limited number of audio tracks at once (hence the code in our audio track wrapper that makes sure we've released one underlying `android.media.AudioTrack` instance before creating another). Each `SimpleExoPlayer` will use its own audio track."
      },
      {
        "user": "mcaquet",
        "created_at": "2017-03-21T14:03:32Z",
        "body": "Thanks, but why is there such limitation ? Shouldn't it be the app developer responsibility, making sure that the app doesn't run out of memory ? "
      },
      {
        "user": "ojw28",
        "created_at": "2017-03-22T18:58:49Z",
        "body": "The limited resource isn't in your app (or process). Hopefully it's fairly intuitive that audio playback requires allocation of some resources in the platform itself, and that such resources are finite. This is why there's a limit on the number of AudioTrack instances that an application can create.\r\n\r\nIf you need to play a large number of audio streams at once you probably need to be mixing them together in application space and sending the mixed audio to a single AudioTrack instance. This is not something ExoPlayer supports."
      }
    ]
  },
  {
    "number": 2584,
    "title": "MediaDrm.EVENT_KEY_EXPIRED  event happens for Widevine DRM content",
    "created_at": "2017-03-21T09:53:11Z",
    "closed_at": "2017-03-23T09:21:57Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2584",
    "body": "**Issue description**\r\n\r\nWe keep receiving MediaDrm.EVENT_KEY_EXPIRED event in StreamingSessionManager.java, line 451,  after onKeyResponse() called, which stops the codec from decoding.\r\n\r\nIs there any pattern and reason why this event will be fired from MediaDrm object?\r\n\r\nThanks\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2584/comments",
    "author": "richardissuperman",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-03-21T10:01:25Z",
        "body": "It means what it says (the keys have expired). What license and renewal durations are your licenses configured to use?"
      },
      {
        "user": "richardissuperman",
        "created_at": "2017-03-23T09:21:50Z",
        "body": "Hi @ojw28 i just confirmed with our content provider, they set the license key expiration to 7 sec.... sorry for the spammer you can just close this issue .thanks "
      }
    ]
  },
  {
    "number": 2580,
    "title": "Why ExoPlayer2 don't use MediaExtractor?",
    "created_at": "2017-03-20T13:49:06Z",
    "closed_at": "2017-03-20T13:54:41Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2580",
    "body": "When I try to learn ExoPlayer2 source code, I found that it do not using MediaExtractor + MediaCodec as usual rather than implement Mp4Extractor itself. There any problem with MediaExtractor ?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2580/comments",
    "author": "cauchywei",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-03-20T13:54:41Z",
        "body": "There are a few reasons:\r\n\r\n- MediaExtractor uses a threading model that's not well suited to ExoPlayer.\r\n- It also doesn't provide as much control over buffering as we'd like.\r\n- Implementation of the extractors under MediaExtractor varies between versions of Android.\r\n- Extractors under MediaExtractor lack some functionality that we're able to support in ExoPlayer extractors.\r\n\r\nImplementing our own extractors avoids all of the above. It also means that we can add new features to the extractors and have them work on all versions of Android, rather than adding them into the platform and have them work on new versions of Android only."
      },
      {
        "user": "cauchywei",
        "created_at": "2017-03-20T14:43:00Z",
        "body": "@ojw28 Thank your for your reply in time. "
      }
    ]
  },
  {
    "number": 2557,
    "title": "VP9 extension: Build fail No such file or directory: ../../libvpx",
    "created_at": "2017-03-15T04:18:08Z",
    "closed_at": "2017-03-15T17:44:33Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2557",
    "body": "PATH \r\nmake=E:\\Android\\android-ndk-r13b_x64\\prebuilt\\windows-x86_64\\bin\r\nthe LibVpx & LibYuv has been clone into jni directory\r\nRUN\r\n~~~\r\nEXOPLAYER_ROOT=\"E:/workspace/Android/ExoPlayer-release-v1\" \r\n~~~\r\nOK\r\n~~~\r\nVP9_EXT_PATH=\"${EXOPLAYER_ROOT}/extensions/vp9/src/main\"\r\n~~~\r\nOK\r\n~~~\r\nNDK_PATH=\"E:/Android/sdk/ndk-bundle\"\r\n~~~\r\nOK\r\n\r\ncd ${VP9_EXT_PATH}/jni && \\\r\n./generate_libvpx_android_configs.sh \"${NDK_PATH}\"\r\n~~~\r\n/cygdrive/e/workspace/Android/ExoPlayer-release-v1/extensions/vp9/src/main/jni/libvpx_android_configs/armeabi-v7a /cygdrive/e/workspace/Android/ExoPlayer-release-v1/extensions/vp9/src/main/jni\r\nbuild_android_configs:\r\nconfigure --target=armv7-android-gcc --sdk-path=E:/Android/android-ndk-r13b --enable-neon --enable-neon-asm --disable-examples --disable-docs --enable-realtime-only --disable-vp8 --disable-vp9-encoder --disable-webm-io --disable-libyuv --disable-runtime-cpu-detect\r\n../../libvpx/configure:行14: $'\\r': 未找到命令\r\n: No such file or directory: ../../libvpx\r\n~~~\r\n\r\nI use git mingW64,show \r\n~~~\r\n/e/workspace/Android/ExoPlayer-release-v2/extensions/vp9/src/main/jni/libvpx_android_configs/armeabi-v7a /e/workspace/Android/ExoPlayer-release-v2/extensions/vp9/src/main/jni\r\nbuild_android_configs:\r\nconfigure --target=armv7-android-gcc --sdk-path=E:/Android/sdk/ndk-bundle --enable-neon --enable-neon-asm --disable-examples --disable-docs --enable-realtime-only --disable-vp8 --disable-vp9-encoder --disable-webm-io --disable-libyuv --disable-runtime-cpu-detect\r\n  disabling examples\r\n  disabling docs\r\n  enabling realtime_only\r\n  disabling vp8\r\n  disabling vp9_encoder\r\n  disabling webm_io\r\n  disabling libyuv\r\n  disabling runtime_cpu_detect\r\n  enabling vp9_decoder\r\nConfiguring for target 'armv7-android-gcc'\r\n  enabling armv7\r\n  enabling media\r\nCreating makefiles for armv7-android-gcc libs\r\n/usr/bin/sh: line 1: D:/Program: No such file or directory\r\nmake: *** [makefile:17: libvpx_srcs.txt] Error 127\r\n~~~\r\n\r\nhow can i fix it,thanks",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2557/comments",
    "author": "Witype",
    "comments": [
      {
        "user": "vigneshvg",
        "created_at": "2017-03-15T17:12:57Z",
        "body": "I am not familiar with mingW64. I have no knowledge as to how to debug this, but my first guess is, it fails at \"D:/Program\". Is there any chance that you have a space in your directory name e.g. \"Program Files\" or some such? If so, can you please try it in a directory without spaces?"
      },
      {
        "user": "ojw28",
        "created_at": "2017-03-15T17:44:33Z",
        "body": "Closing on the assumption this is an issue with the development environment. I think we'd recommend using Linux of macOS, if possible."
      },
      {
        "user": "Witype",
        "created_at": "2017-03-16T01:02:31Z",
        "body": "yes , I use ubuntu 16.6 with command\r\nlibvpx(switch tag to v1.6.0) & libyuv has been clone into \"/home/witype/Android/ExoPlayer/extensions/vp9/src/main/jni\"\r\n~~~\r\nEXOPLAYER_ROOT=\"$(pwd)\"\r\n\r\nVP9_EXT_PATH=\"${EXOPLAYER_ROOT}/extensions/vp9/src/main\"\r\n\r\nNDK_PATH=\"/home/witype/Android/android-ndk-r13b\"\r\n\r\ncd ${VP9_EXT_PATH}/jni && \\\r\n./generate_libvpx_android_configs.sh \"${NDK_PATH}\"\r\n~~~\r\n\r\nshow message:\r\n~~~\r\n~/Android/ExoPlayer/extensions/vp9/src/main/jni/libvpx_android_configs/armeabi-v7a ~/Android/ExoPlayer/extensions/vp9/src/main/jni\r\nbuild_android_configs: \r\nconfigure --target=armv7-android-gcc --sdk-path=/home/witype/Android/android-ndk-r13b --enable-neon --enable-neon-asm --disable-examples --disable-docs --enable-realtime-only --disable-vp8 --disable-vp9-encoder --disable-webm-io --disable-libyuv --disable-runtime-cpu-detect\r\n./generate_libvpx_android_configs.sh: ../../libvpx/configure: /bin/sh^M: 解释器错误(Interpreter error:): 没有那个文件或目录(No such file or directory)\r\n~~~\r\n"
      }
    ]
  },
  {
    "number": 2555,
    "title": "Connection re-use for DASH/HLS/SmoothStreaming",
    "created_at": "2017-03-14T13:38:48Z",
    "closed_at": "2017-06-24T13:52:31Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2555",
    "body": "Hi,\r\n\r\nI am trying to find the reasons for some latency in videos over dash that we are playing.\r\nI can see on runtime that httpdatasource is always closing and opening connections, although the implementation uses okhttp.\r\nwhen checking with wireshark i actually see many 'fin ack' and 'syn - ack - syn' along the playback time.\r\nanyway to avoid this? i would like to use 1 connection which i thought okhttp should use and seem to be the used module but it seems to still work like i described.\r\n\r\nthanks.\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2555/comments",
    "author": "michaelstrigy",
    "comments": [
      {
        "user": "michaelstrigy",
        "created_at": "2017-03-14T13:52:23Z",
        "body": "Correction: ok http wasn't used, demo used defaultHttpDatasource i replaced it with OkHttpDatasource but still multiple syns.."
      },
      {
        "user": "ojw28",
        "created_at": "2017-03-14T13:57:02Z",
        "body": "Even DefaultHttpDataSource uses OkHttp under the hood on most recent versions of Android (because OkHttp is used in the platform as the default network stack). If I remember correctly the underlying network stack will try and hold connections open so they can be re-used for some period of time. Most likely the server you're requesting chunks from is closing the connections, in which case I think a change in server configuration would be required to allow them to be re-used."
      },
      {
        "user": "michaelstrigy",
        "created_at": "2017-03-14T14:01:00Z",
        "body": "thats the thing, when capturing network data, the fin is localy sent to the server and not sent by the server, meaning its initiated by exoplayer http module."
      },
      {
        "user": "ojw28",
        "created_at": "2017-03-14T14:07:36Z",
        "body": "I'm not an expert on TCP, but I think both sides need to send FIN when the connection terminates. Are you sure the client isn't sending FIN+ACK because it received a FIN from the server?"
      },
      {
        "user": "michaelstrigy",
        "created_at": "2017-03-14T14:14:17Z",
        "body": "it does seem we are sending fin ack to close a connection, the server then replies with a fin ack as well.\r\nI agree this is strange especially since the http version is 1.1 which should be persistent with 1 connection.. seems very strange, i will try to investigate further, if anyone has information, please share, thanks!"
      },
      {
        "user": "ojw28",
        "created_at": "2017-06-24T13:52:31Z",
        "body": "We did look at this (quite a long time prior to this issue being filed) and convinced ourselves that connections were being re-used correctly. I don't think we have solid enough evidence to warrant us spending time checking again at this point, although if you get to the point where you're convinced it's no longer working, please let us know.\r\n\r\nIt would also be a good idea to try with some of the test content in the demo app (i.e. not hosted on your servers) to help rule out the possibility this is caused by server-side behavior, which still feels like the most likely possibility to me at this point.\r\n\r\nClosing for now. Thanks!"
      }
    ]
  },
  {
    "number": 2554,
    "title": "java.util.NoSuchElementException",
    "created_at": "2017-03-13T21:11:31Z",
    "closed_at": "2017-03-16T12:19:22Z",
    "labels": [
      "question",
      "wont fix: infeasible"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2554",
    "body": "While investigating issue with live playback, I found that ExoPlayer v 2.2.0 fails with next exception:\r\n\r\n```\r\n03-10 10:40:17.770  6250  9327 E ExoPlayerImplInternal: Internal runtime error.\r\n03-10 10:40:17.770  6250  9327 E ExoPlayerImplInternal: java.util.NoSuchElementException\r\n03-10 10:40:17.770  6250  9327 E ExoPlayerImplInternal: \tat java.util.LinkedList.getLast(LinkedList.java:553)\r\n03-10 10:40:17.770  6250  9327 E ExoPlayerImplInternal: \tat com.quickplay.google.android.exoplayer.source.chunk.ChunkSampleStream.getNextLoadPositionUs(:341)\r\n03-10 10:40:17.770  6250  9327 E ExoPlayerImplInternal: \tat com.quickplay.google.android.exoplayer.source.CompositeSequenceableLoader.getNextLoadPositionUs(:35)\r\n03-10 10:40:17.770  6250  9327 E ExoPlayerImplInternal: \tat com.quickplay.google.android.exoplayer.source.dash.DashMediaPeriod.getNextLoadPositionUs(:179)\r\n03-10 10:40:17.770  6250  9327 E ExoPlayerImplInternal: \tat com.quickplay.google.android.exoplayer.ExoPlayerImplInternal.maybeContinueLoading(:1289)\r\n03-10 10:40:17.770  6250  9327 E ExoPlayerImplInternal: \tat com.quickplay.google.android.exoplayer.ExoPlayerImplInternal.handlePeriodPrepared(:1276)\r\n03-10 10:40:17.770  6250  9327 E ExoPlayerImplInternal: \tat com.quickplay.google.android.exoplayer.ExoPlayerImplInternal.handleMessage(:316)\r\n03-10 10:40:17.770  6250  9327 E ExoPlayerImplInternal: \tat android.os.Handler.dispatchMessage(Handler.java:98)\r\n03-10 10:40:17.770  6250  9327 E ExoPlayerImplInternal: \tat android.os.Looper.loop(Looper.java:158)\r\n03-10 10:40:17.770  6250  9327 E ExoPlayerImplInternal: \tat android.os.HandlerThread.run(HandlerThread.java:61)\r\n03-10 10:40:17.770  6250  9327 E ExoPlayerImplInternal: \tat com.quickplay.google.android.exoplayer.util.PriorityHandlerThread.run(:40)\r\n```\r\n\r\nIt is DASH / Widevine protected content.\r\nUnfortunately, I can not provide manifest url to test. It could be consequence of the malformed manifest as well. However, when I looked into the ExoPlayer code, I decided to rise a ticket because even though ExoPlayer should not fail at the specified place.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2554/comments",
    "author": "ChernyshovYuriy",
    "comments": [
      {
        "user": "ChernyshovYuriy",
        "created_at": "2017-03-14T12:34:53Z",
        "body": "Small update.\r\nWe found that there was stale manifest provided, could be a reason, because playback was triggered in \"frozen\" state, like infinite pause.\r\nAnywhere, I think it was a good stress test :-)\r\nDon't know if you have any idea how to protect failed code from NoSuchElementException."
      },
      {
        "user": "ChernyshovYuriy",
        "created_at": "2017-03-14T14:28:43Z",
        "body": "Btw, is the a way to detect stale manifest and throw appropriate exception?"
      },
      {
        "user": "ojw28",
        "created_at": "2017-03-16T12:19:22Z",
        "body": "It's quite difficult in general to detect stale manifest cases. It's also quite unclear to me how this particularly stack trace results from there being one.\r\n\r\nThe above aside, the player does not crash in this case. It fails gracefully, which is working as intended given the manifest was incorrect. I don't think we're inclined to spend any effort on throwing a more accurate exception for this case."
      }
    ]
  },
  {
    "number": 2530,
    "title": "Is is possible to give non overlapping KID's for widevine dash streams?",
    "created_at": "2017-03-05T16:43:30Z",
    "closed_at": "2017-03-13T15:30:55Z",
    "labels": [
      "question",
      "bug: in platform drm"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2530",
    "body": "Hi,\r\n\r\nfor widewine / chrome (not android) its impossible to decrypt data with different session-id's but same KID's.\r\n\r\nThe widevine request for both Video and Audio returns the same set of KID's:\r\nfist: 30303030303030303030303030303030\r\nlast: 30303030303030303030303030303037\r\n\r\nWould it be possible to give Video / Audio a set of non overlappink KID's?\r\n\r\nFor example:\r\nAudio:\r\nfist: 30303030303030303030303030303030\r\nlast: 30303030303030303030303030303037\r\n\r\nVideo:\r\nfist: 30303030303030303030303030303**1**30\r\nlast: 30303030303030303030303030303**1**37\r\n\r\nThanks!\r\n\r\nMarkus\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2530/comments",
    "author": "peak3d",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-03-13T09:55:37Z",
        "body": "@wvpaf - I'm not sure I understand this question. Do you?"
      },
      {
        "user": "peak3d",
        "created_at": "2017-03-13T15:30:55Z",
        "body": "@ojw28 we can close this issue, In the meantime I solved my issues / questions using other test media.\r\nThanks nevertheless for this great work (exo-player)"
      }
    ]
  },
  {
    "number": 2526,
    "title": "Sometime would pop up play error durng playing video ",
    "created_at": "2017-03-04T03:30:17Z",
    "closed_at": "2017-03-04T12:19:22Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2526",
    "body": "\r\ndescription：\r\n     [Youtube] Sometime would pop up play error durng playing Youtube video \r\n\r\n     Top Activity:(1)com.android.systemui.recents.RecentsActivity \r\n     (2)com.google.android.apps.photos.home.HomeActivity \r\n     (3)com.google.android.apps.youtube.app.WatchWhileActivity \r\n\r\n03-02 21:13:15.895 20414 29478 E Surface : getSlotFromBufferLocked: unknown buffer: 0x7f72033720\r\n03-02 21:13:15.895 20414 29478 W ACodec  : [OMX.qcom.video.decoder.avc] can not return buffer 15 to native window\r\n03-02 21:13:15.898   670  6191 I OMX-VDEC-1080P: omx_vdec::component_deinit() complete\r\n03-02 21:13:15.899   670  6191 I OMX-VDEC-1080P: Exit OMX vdec Destructor: fd=38\r\n03-02 21:13:15.900   670  6191 I OMX-VDEC-1080P: Video slvp perflock released\r\n03-02 21:13:15.915 20414 29471 E ExoPlayerImplInternal: Stop failed.\r\n03-02 21:13:15.915 20414 29471 E ExoPlayerImplInternal: java.lang.IllegalStateException\r\n03-02 21:13:15.915 20414 29471 E ExoPlayerImplInternal: \tat android.media.MediaCodec.native_stop(Native Method)\r\n03-02 21:13:15.915 20414 29471 E ExoPlayerImplInternal: \tat android.media.MediaCodec.stop(MediaCodec.java:2007)\r\n03-02 21:13:15.915 20414 29471 E ExoPlayerImplInternal: \tat hfp.p(SourceFile:485)\r\n03-02 21:13:15.915 20414 29471 E ExoPlayerImplInternal: \tat rmq.p(SourceFile:272)\r\n03-02 21:13:15.915 20414 29471 E ExoPlayerImplInternal: \tat hfp.k(SourceFile:447)\r\n03-02 21:13:15.915 20414 29471 E ExoPlayerImplInternal: \tat hgb.k(SourceFile:289)\r\n03-02 21:13:15.915 20414 29471 E ExoPlayerImplInternal: \tat rmq.k(SourceFile:192)\r\n03-02 21:13:15.915 20414 29471 E ExoPlayerImplInternal: \tat hfe.c(SourceFile:8231)\r\n03-02 21:13:15.915 20414 29471 E ExoPlayerImplInternal: \tat hfe.g(SourceFile:5560)\r\n03-02 21:13:15.915 20414 29471 E ExoPlayerImplInternal: \tat hfe.f(SourceFile:526)\r\n03-02 21:13:15.915 20414 29471 E ExoPlayerImplInternal: \tat hfe.handleMessage(SourceFile:245)\r\n03-02 21:13:15.915 20414 29471 E ExoPlayerImplInternal: \tat android.os.Handler.dispatchMessage(Handler.java:98)\r\n03-02 21:13:15.915 20414 29471 E ExoPlayerImplInternal: \tat android.os.Looper.loop(Looper.java:154)\r\n03-02 21:13:15.915 20414 29471 E ExoPlayerImplInternal: \tat android.os.HandlerThread.run(HandlerThread.java:61)\r\n03-02 21:13:15.915 20414 29471 E ExoPlayerImplInternal: \tat hru.run(SourceFile:40)\r\n\r\n[Step] \r\n    1. Launch Youtube. \r\n    2. play Youtube video. \r\n\r\nhappenedfrequency:Low\r\nAndroidReleaseVer:7.1.1\r\nhappenedtime:2017/03/02 21:13:14\r\n[Uploading log.zip…]()\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2526/comments",
    "author": "qiuxinyidian",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-03-04T12:19:22Z",
        "body": "YouTube issues should be reported to YouTube (via the built in send feedback feature)."
      }
    ]
  },
  {
    "number": 2504,
    "title": "Media Metadata tags",
    "created_at": "2017-02-26T12:42:32Z",
    "closed_at": "2017-02-27T10:28:10Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2504",
    "body": "First thanks to this awesome library . \r\n\r\nSecond simply : **how can i get** loaded media(MP3/OGG/..) **meta data**(Artist , name,track no ,year and .. ) ? \r\nWhat about audio file artwork graphic ?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2504/comments",
    "author": "thesiamak",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-02-27T10:28:08Z",
        "body": "If you're using the ExoPlayer V2 demo app then you should see metadata output to logcat with the log tag \"EventLogger\". It should be pretty easy for you to find where that happens in the demo app code, and then go from there.\r\n\r\nWe currently parse metadata for MP3 and MP4. I don't think we parse metadata for OGG yet. Please file a separate feature request if you're able to confirm that this is the case, linking or attaching media that you know to contain metadata that's not being output to \"EventLogger\". Thanks!"
      },
      {
        "user": "thesiamak",
        "created_at": "2017-02-27T12:11:26Z",
        "body": "At this time i just need MP3 metadatas .\r\nI was be able to get metadata via the method that demo app uses to(EventLogger) but obviously developers need a simpler way to get this information.\r\n\r\nThanks a lot for your help \r\n"
      },
      {
        "user": "ojw28",
        "created_at": "2017-02-27T12:43:17Z",
        "body": "I'm not sure developers do need a simpler way. It's pretty simple already, once you remove the parts that you don't need:\r\n\r\n```\r\nMappedTrackInfo mappedTrackInfo = trackSelector.getCurrentMappedTrackInfo();\r\nif (mappedTrackInfo != null) {\r\n  for (int rendererIndex = 0; rendererIndex < mappedTrackInfo.length; rendererIndex++) {\r\n    TrackSelection trackSelection = trackSelections.get(rendererIndex);\r\n    if (trackSelection != null) {\r\n      for (int selectionIndex = 0; selectionIndex < trackSelection.length(); selectionIndex++) {\r\n        Metadata metadata = trackSelection.getFormat(selectionIndex).metadata;\r\n        if (metadata != null) {\r\n          // Metadata!\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nI'm not convinced that it's possible to make it simpler without introducing assumptions that might be true in your simple use case, but that may not be true in the general case (e.g. the assumption that there's only one set of metadata in the media, rather than potentially multiple pieces of metadata attached to different tracks, which may or may not be selected)."
      },
      {
        "user": "thesiamak",
        "created_at": "2017-02-27T13:07:51Z",
        "body": "Now it's more clear! I was using a wrong and complicated method(Passing an interface to Logger) . I appreciate that.\r\nCould you please let me know how to get MP3 artwork graphic too ? Since i couldn't find appropriate field for that in meta data(It's displaying an empty field in Logcat) i was looking for a way to get selected tracks artwork(cover) url . The goal is to load image in an ImageView."
      },
      {
        "user": "ojw28",
        "created_at": "2017-02-27T13:10:25Z",
        "body": "`SimpleExoPlayerView` pulls the artwork out of the `Metadata` object to display it, so take a look at what that class does (specifically, look at `SimpleExoPlayerView.setArtworkFromMetadata`)."
      }
    ]
  },
  {
    "number": 2489,
    "title": "How do add multiple subtitle tracks and list/select them",
    "created_at": "2017-02-22T12:35:47Z",
    "closed_at": "2017-02-24T14:59:34Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2489",
    "body": "How do you list/select subtitle tracks in 2.2.0?  I'm using the `SimpleExoPlayer`.  When I supply multiple tracks, the first one will load and be active, but I'm not sure what happens to the second now how I can access it, I can't seem to see how to change or list the available tracks for a track type.\r\n\r\nIn exo 1.x I'm used to `player.setSelectedTrack(TYPE, INDEX)`\r\n\r\nI'm trying to sideload 2 subtitle files like so:\r\n```\r\nFormat englishSubs = Format.createTextSampleFormat(null, MimeTypes.APPLICATION_SUBRIP, null, Format.NO_VALUE, Format.NO_VALUE, \"eng\", null);\r\nFormat thaiSubs = Format.createTextSampleFormat(null, MimeTypes.APPLICATION_SUBRIP, null, Format.NO_VALUE, Format.NO_VALUE, \"thai\", null);\r\nMediaSource englishSubsSource = new SingleSampleMediaSource(Uri.parse(ENGLISH), new DefaultHttpDataSourceFactory(\"userAgent\"), englishSubs, C.TIME_UNSET);\r\nMediaSource thaiSubsSource = new SingleSampleMediaSource(Uri.parse(THAI), new DefaultHttpDataSourceFactory(\"userAgent\"), thaiSubs, C.TIME_UNSET);\r\nMergingMediaSource mergedSource = new MergingMediaSource(videoSource, englishSubsSource, thaiSubsSource);\r\n```",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2489/comments",
    "author": "tmho",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-02-22T13:46:03Z",
        "body": "If you modify the demo app to build your source, do you see both options listed under the \"Text\" button? If so, I suggest you try answering your own question by taking a look at how the demo app is doing it."
      },
      {
        "user": "tmho",
        "created_at": "2017-02-24T05:59:41Z",
        "body": "Is this on the right track?  I am able to changed the selected track with the following:\r\n\r\nrendererIndex = index of the tracks you want to select from\r\nindexOfTrackSelected = index which you'd like to chose\r\n\r\n```\r\ntrackGroups = trackSelector.getCurrentMappedTrackInfo().getTrackGroups(rendererIndex);\r\noverride = new MappingTrackSelector.SelectionOverride(new FixedTrackSelection.Factory(), indexOfTrackSelected, 0);\r\ntrackSelector.setSelectionOverride(rendererIndex, trackGroups, override);\r\n```\r\n\r\nI'm still not clear what `0` value in the `MappingTrackSelector.SelectionOverride(new FixedTrackSelection.Factory(), indexOfTrackSelected, 0)` represents"
      },
      {
        "user": "ojw28",
        "created_at": "2017-02-24T14:59:25Z",
        "body": "Yes. Pretty much! Tracks are arranged into groups. The `trackGroups` variable is an array of `TrackGroup` instances. Each `TrackGroup` may contain multiple individual tracks, each with its own format. A `TrackGroup` contains multiple individual tracks when it's possible to adapt between different quality streams of the same content. So for an adaptive video playback you'll typically see a `TrackGroup` containing multiple individual video tracks whose formats have different resolutions or bitrates. You don't generally expect to adapt between different text tracks, so a text `TrackGroup` will typically contain only a single track.\r\n\r\nSo to add comments to your block of code:\r\n\r\n```\r\ntrackGroups = trackSelector.getCurrentMappedTrackInfo().getTrackGroups(rendererIndex);\r\n// Look in trackGroups to locate the track you want to enable. You should end up with the\r\n// index of the group and the index of the individual track within the group.\r\nint trackGroupIndex = .....;\r\nint trackIndexWithinGroup = .....; // Probably 0.\r\n// Create the selection override\r\noverride = new MappingTrackSelector.SelectionOverride(\r\n    new FixedTrackSelection.Factory(), trackGroupIndex, trackIndexWithinGroup);\r\ntrackSelector.setSelectionOverride(rendererIndex, trackGroups, override);\r\n```"
      },
      {
        "user": "tmho",
        "created_at": "2017-02-27T00:53:36Z",
        "body": "great! thanks for the info :+1: "
      }
    ]
  },
  {
    "number": 2483,
    "title": "MediaSource for on-demand transcoded streams",
    "created_at": "2017-02-21T16:42:58Z",
    "closed_at": "2017-02-25T20:52:10Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2483",
    "body": "I have a HTTP server which can transcode video files to h264+aac / Matroska streams and deliver them live to the client. Using an `ExtractorMediaSource` I can play those streams just fine, but as expected the duration is unknown and seeking is not available.\r\n\r\nSaid server can also be queried for, amongst other stuff, the duration of the video files. For the transcoding, a query parameter accepting the start time is supported, and the server will deliver a stream from that time to the end of the source file.\r\n\r\nSo to support seeking I figured a custom `MediaSource` is due. What I currently have is a thin wrapper around `ExtractorMediaSource` which works like this:\r\n\r\n  * in `prepareSource` it queries the server about the stream duration and calls back to the source listener with a `new SinglePeriodTimeline(duration, true)`\r\n  * in `createPeriod` it instantiates the underlying `ExtractorMediaSource`, using the `positionUs` parameter to figure out the proper query parameter for the starting time and returns a MediaPeriod created by that source\r\n\r\nThis already gives me proper duration display, but seeking does not work: the `createPeriod` method is called only once, with `positionUs == 0`. An attempt to seek causes the playback to start from the beginning.\r\n\r\nObviously what I'm doing is not sufficient to communicate the specifics of my server to ExoPlayer, but honestly I'm a bit lost where to go from here. Is my `TimeLine` the problem, or passing through the `MediaPeriod`, both of them? \r\n\r\nPS: I could not dig out a mailing list / IRC channel for ExoPlayer, so please forgive I'm spamming the issue tracker with this.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2483/comments",
    "author": "waldheinz",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2017-02-22T12:05:27Z",
        "body": "`ExtractorMediaPeriod` normally maps a timestamp onto a byte offset in `ExtractorMediaPeriod.seekToUs` using its `seekMap`. I guess your Matroska stream will be missing a cues element, so this seek map will be unseekable. You can verify this by breakpointing in that method and seeing what happens when you try to seek.\r\n\r\nAs a next step I'd probably try making a wrapper `Extractor` around `MatroskaExtractor` which passes in your own `ExtractorOutput` wrapper. Pass a factory that instantiates this wrapper to `ExtractorMediaSource`. You can intercept the call to `seekMap` and pass a replacement seekable seek map to the extractor output. Then the other piece you would need is a `DataSource` that adds the right query string parameter based on the last seeking operation. (You might need to lazily open the underlying source when reading starts, as `Extractor.seek` is called after `DataSource.open`.) The wrapped `Extractor` sees the same data as if it were really seeking in a complete stream. I haven't tried any of this so it might not work. There may also be simpler ways to achieve the same thing. Hope this helps!"
      },
      {
        "user": "waldheinz",
        "created_at": "2017-02-23T15:53:32Z",
        "body": "@andrewlewis Thanks a bunch for your input, I actually got this to work. In addition to what you've said, there were two things to take care of:\r\n\r\n  * The `MatroskaExtractor` doesn't like it very much when it's `DataSource` is swapped out, throwing `ArrayIndexOutOfBounds` exceptions and all kind of other scary stuff while choking on the \"new\" bytes it did not expect to see. So I'm lazily creating a new `MatroskaExtractor` in my own `Extractor.read` method whenever a seek occured.\r\n  * Someone up in the pipeline seems to care about the timestamps contained in the Matroska stream, skipping output until a timestamp that is actually expected (or greater) comes by. I hacked my source to pass thru the timestamps from the source file instead of always starting at 0, so this problem is gone. I think this is the right thing to do anyway.\r\n\r\nI'm very grateful you helped me to solve my immediate problem, but if there is a cleaner way to accomplish this I'd still like to hear about it. :-)"
      },
      {
        "user": "andrewlewis",
        "created_at": "2017-02-24T10:24:46Z",
        "body": "Regarding recreating the `MatroskaExtractor` on every seek: is your wrapper correctly passing through the call to `seek(long, long)` before the new `DataSource` is read? That method resets some state in preparation for reading data from a different position, so it's important to call it. If you are calling that method but it's still failing I'd probably spend a while trying to debug what's going on, as it should work, assuming the server is providing valid data. From the extractor's perspective this looks like a 'normal' seek."
      },
      {
        "user": "waldheinz",
        "created_at": "2017-02-24T13:33:30Z",
        "body": "@andrewlewis You are right, I did not pass through the `seek` call, and doing so eliminates the need to re-create the `MatroskaExtractor`. Very nice!\r\n\r\nBut I just noticed something worse: Pausing the playback for too long (or re-starting the server, whatever causes the HTTP request to die) causes the playback to get stuck: The `DataSource` gets a `close` / `open` pair, which makes sense, but I don't see where I could get the proper \"time\" value from so I can build the proper query parameter for the server. The `DataSpec` passed into `DataSource.open` seems to carry only the byte-offset, but no time information. Is there some way to deal with that?"
      },
      {
        "user": "andrewlewis",
        "created_at": "2017-02-24T13:49:35Z",
        "body": "If an error occurs while loading data, `ExtractorMediaSource` will try to resume from the last read byte offset. Can you make your server support range requests and just reopen using whatever query parameter you used the last time?\r\n\r\nIf that's not feasible then you could just stop and restart the player at the current playback position (just seeking won't work as seeking to the current position is a no-op). This is a pretty bad solution, though, as it will interrupt playback, and it's inefficient."
      },
      {
        "user": "waldheinz",
        "created_at": "2017-02-25T20:52:10Z",
        "body": "The server does not cache the transcoded video and stops the transcoding process when the request dies. So I don't see how I could implement range requests. :-/\r\n\r\nIn the end I dropped the custom `MediaSource` approach. Now I'm simply providing the player with a fresh `ExtractorMediaSource` on seek and added the relevant state tracking to my UI code. It's not exactly elegant, but so much simpler, I couldn't resist. :-)\r\n\r\nThanks again for your input @andrewlewis , I greatly appreciate your effort!"
      }
    ]
  },
  {
    "number": 2473,
    "title": "Please change all methods and fields from private to protected",
    "created_at": "2017-02-19T20:05:34Z",
    "closed_at": "2017-02-19T20:51:17Z",
    "labels": [
      "question",
      "wont fix: infeasible"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2473",
    "body": "It will be very useful if all methods and fields would be of type protected. \r\nNow i need very small modification for proper handling dpad controlling of seekbar (with proper delay, small steps with linear increase etc..), and for that i should copy all classes which used for that (SimpleExoPlayerView and PlaybackControlView) for small modification... it is not so good for later updates ((",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2473/comments",
    "author": "bigexxx",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-02-19T20:51:17Z",
        "body": "Whilst it might be convenient for you in the short term if we were we to do this, it would effectively add *every* field and method to the public API, meaning that changing literally anything could potentially break developers when they go to upgrade from one version of ExoPlayer to the next. This is not a good idea, and is not something we'll be doing.\r\n\r\nIt sounds like you're fixing something that doesn't work properly currently. Why not just contribute a fix directly to the library if so?"
      }
    ]
  },
  {
    "number": 2472,
    "title": "How to export ConcatenatingMediaSource into single mp4",
    "created_at": "2017-02-19T17:07:13Z",
    "closed_at": "2017-02-19T20:52:58Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2472",
    "body": "Im using ConcatenatingMediaSource to playback multiple short mp4 in sequence (some of them coming from different sources). Is there a way to export the result into a single mp4 in sdcard for instance. I've tried to look for this information in the docs and issues but couldn't find anything. ",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2472/comments",
    "author": "redgetan",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-02-19T20:52:58Z",
        "body": "ExoPlayer is a library for media playback, not media generation, and hence this is not a supported feature."
      }
    ]
  },
  {
    "number": 2471,
    "title": "Subtitle usage sample",
    "created_at": "2017-02-18T15:42:44Z",
    "closed_at": "2017-02-22T11:13:50Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2471",
    "body": "Can anyone provide a complete and functional example of how to load subtitles, and srt subtitles are supported?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2471/comments",
    "author": "eseffair",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2017-02-20T10:46:56Z",
        "body": "Does #2017 help?"
      },
      {
        "user": "eseffair",
        "created_at": "2017-02-20T12:41:30Z",
        "body": "Hi @andrewlewis, I'm doing exactly that way, but I always get this exception...\r\n\r\n```\r\njava.lang.NullPointerException: Attempt to invoke interface method 'com.google.android.exoplayer2.upstream.DataSource com.google.android.exoplayer2.upstream.DataSource$Factory.createDataSource()' on a null object reference\r\n                                                                                      at com.google.android.exoplayer2.source.SingleSampleMediaPeriod.continueLoading(SingleSampleMediaPeriod.java:119)\r\n                                                                                      at com.google.android.exoplayer2.source.CompositeSequenceableLoader.continueLoading(CompositeSequenceableLoader.java:55)\r\n                                                                                      at com.google.android.exoplayer2.source.MergingMediaPeriod.continueLoading(MergingMediaPeriod.java:133)\r\n                                                                                      at com.google.android.exoplayer2.ExoPlayerImplInternal.maybeContinueLoading(ExoPlayerImplInternal.java:1299)\r\n                                                                                      at com.google.android.exoplayer2.ExoPlayerImplInternal.handlePeriodPrepared(ExoPlayerImplInternal.java:1276)\r\n                                                                                      at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:316)\r\n                                                                                      at android.os.Handler.dispatchMessage(Handler.java:98)\r\n                                                                                      at android.os.Looper.loop(Looper.java:135)\r\n                                                                                      at android.os.HandlerThread.run(HandlerThread.java:61)\r\n                                                                                      at com.google.android.exoplayer2.util.PriorityHandlerThread.run(PriorityHandlerThread.java:40)\r\n```"
      },
      {
        "user": "andrewlewis",
        "created_at": "2017-02-22T10:14:37Z",
        "body": "It looks like the `DataSourceFactory` you're passing to `SingleSampleMediaSource` is null. Please share the code you're using to construct the `MediaSource`s."
      },
      {
        "user": "eseffair",
        "created_at": "2017-02-22T11:13:50Z",
        "body": "Hi @andrewlewis, thank you, I realized my mistake."
      }
    ]
  },
  {
    "number": 2460,
    "title": "How to hide all control components?",
    "created_at": "2017-02-16T04:02:53Z",
    "closed_at": "2017-02-16T17:43:36Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2460",
    "body": "How to hide all controllers  (start button, pause, and so on) that they did not exist, and the screen will always full.\r\n\r\nI looked, there is simpleExoPlayerView.setUseController(true) method;\r\n\r\nBut it deactivate the player ...\r\n\r\n```\r\npublic void setUseController (boolean useController) {\r\n    this.useController = useController;\r\nif (useController) {\r\n      controller.setPlayer(player);\r\n    } else {\r\n      controller.hide();\r\n      controller.setPlayer(null);\r\n    }\r\n}\r\n```\r\nHow to hide or delete these components?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2460/comments",
    "author": "ghost",
    "comments": [
      {
        "user": "directable",
        "created_at": "2017-02-16T04:17:01Z",
        "body": "Have you tried just doing\r\nsimpleExoPlayerView.setUseController(false);\r\nsimpleExoPlayerView.hideController();\r\n\r\nsimpleExoPlayerView.setPlayer(playeryoucreated);\r\n"
      },
      {
        "user": "ghost",
        "created_at": "2017-02-16T04:20:53Z",
        "body": "this method is not - hideController()\r\nBut it works for me. Thank you!\r\n```\r\nsimpleExoPlayerView.setUseController(false);\r\nsimpleExoPlayerView.setPlayer(playeryoucreated);\r\n```\r\n"
      }
    ]
  },
  {
    "number": 2452,
    "title": "how to access <Role> tag",
    "created_at": "2017-02-14T11:03:48Z",
    "closed_at": "2017-03-15T19:07:24Z",
    "labels": [
      "question",
      "need more info"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2452",
    "body": "Hello,\r\n\r\n```\r\n<AdaptationSet id=\"0\" contentType=\"text\" lang=\"en\">\r\n      <Representation id=\"0\" bandwidth=\"256\" mimeType=\"text/vtt\">\r\n        <BaseURL>sub_org.vtt</BaseURL>\r\n      </Representation>\r\n    </AdaptationSet>\r\n    <AdaptationSet id=\"1\" contentType=\"text\" lang=\"tr\">\r\n      <Role schemeIdUri=\"urn:mpeg:dash:role:2011\" value=\"main\"/>\r\n      <Representation id=\"1\" bandwidth=\"256\" mimeType=\"text/vtt\">\r\n        <BaseURL>sub_tur.vtt</BaseURL>\r\n      </Representation>\r\n    </AdaptationSet>\r\n```\r\n\r\nAccording to lines above i can play subtitle file which has \"main\" value in the line starts with  `<Role>` tag  as default. This is ok. \r\n\r\nI need to have those values from `<Role>` tag for some reasons .  But i can't reach them when i parse .mpd file with DashManifestParser. Is there any way of having them? Thank you.\r\n\r\n \r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2452/comments",
    "author": "erenbakac",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-02-14T19:59:14Z",
        "body": "Please could you expand on what \"some reasons\" are? The \"main\" role is represented in the track's `Format.selectionFlags` as `C.SELECTION_FLAG_DEFAULT`. "
      },
      {
        "user": "ojw28",
        "created_at": "2017-03-15T19:07:24Z",
        "body": "Closing due to inactivity."
      }
    ]
  },
  {
    "number": 2451,
    "title": "Grab a frame of the video",
    "created_at": "2017-02-14T09:50:29Z",
    "closed_at": "2017-02-16T19:43:04Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2451",
    "body": "I want to grab a frame of the played video. I tried to work with `TextureView `(that have a `getBitmap()` method) making :\r\n\r\n`player.setVideoTextureView(textureView);`\r\n\r\nor \r\n\r\n```\r\n<com.google.android.exoplayer2.ui.SimpleExoPlayerView\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        app:surface_type=\"surface_view\"\r\n        app:resize_mode=\"fill\"/>\r\n```\r\n\r\nBut video is not anymore crop but fit `VideoView` and video is deformed.\r\n\r\nHow can I properly work with `TextureView` ?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2451/comments",
    "author": "thomas-le-bihan",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-02-14T19:55:57Z",
        "body": "The question seems quite confused (what does VideoView have to do with anything; isn't it unrelated to ExoPlayer?), so I'm not sure what you're asking. If you're trying to use TextureView shouldn't you have: `app:surface_type=\"texture_view\"`? You can then get the TextureView from the SimpleExoPlayerView and retrieve the Bitmap using:\r\n```\r\nTextureView textureView = (TextureView) simpleExoPlayerView.getVideoSurfaceView();\r\nBitmap bitmap = textureView.getBitmap();\r\n```"
      }
    ]
  },
  {
    "number": 2450,
    "title": "How to change brightness ",
    "created_at": "2017-02-14T08:58:48Z",
    "closed_at": "2017-02-14T19:51:45Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2450",
    "body": "How to change brightness without change system brightness ?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2450/comments",
    "author": "YounMario",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-02-14T19:51:45Z",
        "body": "This is not something we support directly. If you render to a `SurfaceView` then I'm not sure whether it's possible. If you render to a `TextureView` or via GL then it should be possible, but the implementation will not be ExoPlayer (or video) specific. You should probably seek help around applying effects to TextureView on StackOverflow or similar."
      }
    ]
  },
  {
    "number": 2440,
    "title": "HLS AAC output:application/id3，application/cea-608",
    "created_at": "2017-02-11T16:18:44Z",
    "closed_at": "2017-02-15T19:17:46Z",
    "labels": [
      "question",
      "need more info"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2440",
    "body": " codecName:null hasDecoder:false\r\n mimeType:application/id3 supportsFormat:0\r\n ######UNSUPPORTED_TYPE#######\r\n codecName:null hasDecoder:false\r\n mimeType:application/cea-608 supportsFormat:0\r\n ######UNSUPPORTED_TYPE#######\r\n Tracks [\r\n   Renderer:0 [\r\n     Group:0, adaptive_supported=N/A [\r\n       [X] Track:0, id=0, mimeType=video/avc, supported=YES\r\n     ]\r\n   ]\r\n   Renderer:1 [\r\n     Group:0, adaptive_supported=N/A [\r\n       [X] Track:0, id=null, mimeType=audio/mp4a-latm, channels=6, sample_rate=48000, supported=YES\r\n     ]\r\n   ]\r\n   Renderer:3 [\r\n     Group:0, adaptive_supported=N/A [\r\n       [ ] Track:0, id=null, mimeType=application/cea-608, supported=YES\r\n     ]\r\n   ]\r\n   Renderer:4 [\r\n     Group:0, adaptive_supported=N/A [\r\n       [X] Track:0, id=null, mimeType=application/id3, supported=YES\r\n     ]\r\n   ]\r\n ]",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2440/comments",
    "author": "vince090416",
    "comments": [
      {
        "user": "AquilesCanta",
        "created_at": "2017-02-11T18:34:56Z",
        "body": "I don't understand the question. Could you please clarify exactly what you are trying to do?\r\n\r\nHLS is an adaptive streaming protocol, not a compression format (like H264, for example). In other words, HLS is not something you decode. In exoplayer, FFmpeg can be used as an extension to decode, for example, a video stream in a certain compression format. This is particularly useful when the device does not include hardware support for decoding such format. Can you please provide more context? "
      },
      {
        "user": "ojw28",
        "created_at": "2017-02-15T19:17:46Z",
        "body": "Closing due to lack of clarity. There doesn't appear to be a description of a problem or a question in this issue."
      }
    ]
  },
  {
    "number": 2426,
    "title": "Question about multi-audio HLS audio variant data request",
    "created_at": "2017-02-07T09:14:41Z",
    "closed_at": "2017-02-07T10:05:16Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2426",
    "body": "With ExoPlayer 2.0.4, the array of HlsSampleStreamWrapper created in HlsMediaPeriod.buildAndPrepareSampleStreamWrappers() includes all the media variants, leading to a data request in DataChunk.load() for all media playlists, even if only one of them is in use during playback.\r\nCan you please provide information about why this behaviour has changed since ExoPlayer 1.5.8? In this case, a  media playlist data request is only performed when the associated audio track is selected during playback.\r\nThis can be reproduced with any multi-audio HLS content in any device.\r\nThank you,\r\n\r\nMoacir",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2426/comments",
    "author": "moacir69",
    "comments": [
      {
        "user": "AquilesCanta",
        "created_at": "2017-02-07T10:05:16Z",
        "body": "There are a few reasons:\r\n\r\n* There used to be only 3 sample stream wrappers. Each of them(if present) would download one chunk to prepare, and assume the others tracks had the same shape. Sometimes this is ok, if the only changing aspect is the language, for audio and text. This leads me to:\r\n* The codecs attribute is optional, and other information is not available in EXT-X-STREAM-INF or EXT-X-MEDIA. Particularly in older spec versions, like number of audio channels. This affects the decision of whether the format is supported by the device. After preparation, figuring these things out is too late.\r\n* Lastly, maybe less important, this change allowed us removing non-adaptive track groups and selecting two audio tracks at the same time.\r\n\r\nI hope this answers your question. "
      },
      {
        "user": "moacir69",
        "created_at": "2017-02-07T10:26:12Z",
        "body": "Thank you for the quick reply!\r\n\r\nMoacir"
      },
      {
        "user": "AquilesCanta",
        "created_at": "2017-02-07T10:28:46Z",
        "body": "We might do something about this in the not-so-remote future."
      },
      {
        "user": "moacir69",
        "created_at": "2017-02-08T18:18:57Z",
        "body": "OK, thanks.\r\n\r\nMoacir"
      }
    ]
  },
  {
    "number": 2410,
    "title": "MediaDrm getKeyRequest throws NotProvisionedException",
    "created_at": "2017-02-01T19:48:51Z",
    "closed_at": "2017-02-03T15:15:16Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2410",
    "body": "Dear colleagues,\r\n\r\nThis is a question, a request for advise.\r\nOur reporting system provide us with statistics about NotProvisionedException when getKeyRequest invoked. Based on the java documentation from the method:\r\n```\r\nNotProvisionedException if reprovisioning is needed, due to a problem with the certificate\r\n```\r\nBut what does \"reprovisioning\" means? Is provision data something that receive only once for device? How to do reprovisioning (other way then factory reset)?\r\n\r\nThanks in advance.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2410/comments",
    "author": "ChernyshovYuriy",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-02-03T15:15:16Z",
        "body": "Widevine L1 is typically factory provisioned, meaning provisioning wont ever need to happen. When using L3 (either because you've forced an L1 device to L3 or because the device only has L3) provisioning typically happens once. A factory reset should cause re-provisioning. If the device is rooted then you can also cause re-provisioning by doing:\r\n```\r\nadb shell rm -r /data/mediadrm/IDM1013\r\n```\r\nwhich will reset Widevine modular DRM back to its factory state."
      }
    ]
  },
  {
    "number": 2407,
    "title": "Font color of subtitle is not changing using CaptionStyleCompat",
    "created_at": "2017-02-01T10:46:36Z",
    "closed_at": "2017-02-01T12:19:48Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2407",
    "body": "My requirement is to change the font color of Closed caption sub title text. For fulfill requirement I am using\r\n```\r\ncaptionStyleCompat = new CaptionStyleCompat(Color.BLACK, Color.BLUE, Color.TRANSPARENT, CaptionStyleCompat.EDGE_TYPE_DROP_SHADOW, Color.GREEN, null);\r\n\r\nsimpleExoPlayerView.getSubtitleView().setStyle(captionStyleCompat);\r\n```\r\nAs per above method my subtitle font color should be black. but still it is default color that is white where as background color has been changed from black to blue.\r\nWhy font color is not changed to black from its default color? I am also changing different color of first and second parameter. All the time background has been changed but foreground has not been changed.\r\n\r\nAs per documentation there is no any method found to change the font color of subtitle text.\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2407/comments",
    "author": "shailesh2208",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-02-01T11:25:31Z",
        "body": "It depends a bit on the source media. If the media doesn't say anything about the caption style, then what you've done should work fine. If the media explicitly indicates a caption style, then anything it indicates takes priority by default. Given what you're seeing, I suspect the media has an explicit embedded caption style that specifies white text.\r\n\r\nYou can disable application of embedded caption styles and have ExoPlayer use only the style you provide by calling `simpleExoPlayerView.getSubtitleView().setApplyEmbeddedStyles(false)`. Please give that a try and let us know if it works. Thanks!"
      },
      {
        "user": "shailesh2208",
        "created_at": "2017-02-01T12:15:53Z",
        "body": "Hi ojw28,\r\nUsing `simpleExoPlayerView.getSubtitleView().setApplyEmbeddedStyles(false)` It is working now. Thank u so much for suggestion."
      }
    ]
  },
  {
    "number": 2384,
    "title": "[Question] What's the purpose of priorityTaskManager  & PriorityDataSource? How could I use it?",
    "created_at": "2017-01-28T04:21:38Z",
    "closed_at": "2017-01-29T22:42:24Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2384",
    "body": "Dear Developers:\r\n\r\nWhat's the purpose of **priorityTaskManager**  & **PriorityDataSource**?\r\n\r\nHow could I use it?\r\n\r\nI happen to see there two classes but it seems that they are not used for now.\r\n\r\nIs there anyone know for which purpose it intends? \r\n\r\nThanks in advance!",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2384/comments",
    "author": "WeiChungChang",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-01-29T22:42:24Z",
        "body": "If you were making a background service for downloading media, and also wanted to allow streaming of (different) media whilst downloads are in progress, then these components can be used to pause downloads whilst streaming is taking place so that the streaming playback can utilize all of the network. Describing this in detail isn't really possible in a concise way, but we plan to make use of these components in future changes that will start building out more fully featured download functionality."
      }
    ]
  },
  {
    "number": 2377,
    "title": "Switch video as HLS switch track quality",
    "created_at": "2017-01-26T00:32:56Z",
    "closed_at": "2017-01-26T11:50:48Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2377",
    "body": "Hello!\r\nI want to add several video streams together and render only one of them at a given time. It's mean i have two quality of video with mp4 format, i want switch them as HLS switch quality.\r\nPlease help me how to do it ?\r\nThanks you!",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2377/comments",
    "author": "doubleti",
    "comments": [
      {
        "user": "AquilesCanta",
        "created_at": "2017-01-26T11:50:48Z",
        "body": "My suggestion is to try DASH, SS or HLS. If your files are entire presentations (i.e. not chunked), this is not supported. You would have to create your own media source, choose the URL based on available bandwidth, solve ranged requests and splicing, etc. Basically, you need to reinvent adaptive streaming. If you choose to go down this path, have a look at the existing adaptive media sources."
      }
    ]
  },
  {
    "number": 2367,
    "title": "Audio Focus and android.media.AUDIO_BECOMING_NOISY control in Exoplayer ?",
    "created_at": "2017-01-24T06:16:13Z",
    "closed_at": "2017-01-24T10:50:30Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2367",
    "body": "How to implement audio focus and audio becoming noisy in Exoplayer, which used only for streaming Audio ?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2367/comments",
    "author": "bbincybbaby",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-01-24T10:50:30Z",
        "body": "Handling of audio focus is pretty much independent of the player, as far as I know. You listen to the broadcast, and then call whatever methods you want to change the state of the player (e.g. pausing it, stopping it, or whatever logic you require) when a broadcast event is received.\r\n\r\nThis is exactly the same as what you'd do if you were using MediaPlayer or any other third party player, also, so unless I've missed something I suggest you look for general tutorials on the issue."
      }
    ]
  },
  {
    "number": 2365,
    "title": "SimpleExoPlayer getWindow(windowIndex, window) throws IndexOutOfBoundsException",
    "created_at": "2017-01-23T12:17:53Z",
    "closed_at": "2017-01-23T13:15:04Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2365",
    "body": "- A description of the issue:\r\nTried to play broken stream and found that ExoPLayer crashed. I have only Crashlytics bug report and my code. My code:\r\n```\r\nif (player != null && player.getCurrentTimeline() != null) {\r\n            Timeline.Window window = new Timeline.Window();\r\n            player.getCurrentTimeline().getWindow(player.getCurrentWindowIndex(), window);\r\n            return window.windowStartTimeMs;\r\n        }\r\n```\r\nwhere **player** is SimpleExoPlayer class;\r\n- A link to content: streams are under VPN, and when crash happened it was broken stream which did not play.\r\n- The version of ExoPlayer being used: seems that this issue is related to ExoPLayer 2.1.1 and is not reprodeced on ExoPLayer 2.0.3, but I'm not sure.\r\n- The device(s) and version(s) of Android on which the issue can be reproduced: GT-I9300 android 4.3, SM-G920F android 6.0;\r\n- A bug report: from Crashlytics:\r\n```\r\nFatal Exception: java.lang.IndexOutOfBoundsException\t\r\ncom.google.android.exoplayer2.Timeline$1.getWindow (Timeline.java:107)\r\ncom.google.android.exoplayer2.Timeline.getWindow (Timeline.java:161)\r\ncom.google.android.exoplayer2.Timeline.getWindow (Timeline.java:148)\r\n```",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2365/comments",
    "author": "PavelGP",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-01-23T13:15:04Z",
        "body": "If the timeline is empty any index you pass to `getWindow()` will result in an out of bounds exception. You should check whether the timeline is empty before you query it, by calling `Timeline.isEmpty`."
      }
    ]
  },
  {
    "number": 2364,
    "title": "Adding ID3 Length tag support",
    "created_at": "2017-01-23T11:57:31Z",
    "closed_at": "2017-01-23T12:08:54Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2364",
    "body": "Hi. I know Exoplayer does not rely on ID3 Length tag but it is very useful that you implement this feature as an option for developers. I have a web server that converts opus to wav and then wav to mp3 on the fly to support all devices that are connecting to it. The problem is Exoplayer does not read ID3 Length and the web server just does not know the length of the generated mp3. So, the mp3 file will be served in http chunks but the audio length is added to ID3 length tag. So, if Exoplayer supports this tag (at least as a developer option) it is very helpful.\r\nthanks.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2364/comments",
    "author": "Behrouz-m",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-01-23T12:08:54Z",
        "body": "This isn't something we'll be supporting. You can add support in your own fork if you really need it. I suspect there are much better ways you could set this up on the server side that would avoid this problem."
      }
    ]
  },
  {
    "number": 2357,
    "title": "set equalizer",
    "created_at": "2017-01-22T16:10:22Z",
    "closed_at": "2017-01-23T18:28:38Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2357",
    "body": "Hello! I got following code to play mp3 tracks. What should i do to get audioSessionId correct? When i try with getAudioSessionId() and give result to equalizer constructor it says following:\r\nRuntimeException: Cannot initialize effect engine for type: 0bed4300-ddd6-11db-8f34-0002a5d5c51b Error: -3.\r\n\r\nMy code:\r\n```\r\n private void createPlayer(){\r\n        TrackSelector trackSelector = new DefaultTrackSelector();\r\n        LoadControl loadControl = new DefaultLoadControl();\r\n        player = ExoPlayerFactory.newSimpleInstance(context, trackSelector, loadControl);\r\n        player.addListener(this);\r\n    }\r\n\r\npublic void playTrack(Track track) {\r\n        createPlayer();\r\n        this.track = track;\r\n        this.url = track.getPath();\r\n        Uri builtUri = Uri.parse(url);\r\n        DataSource.Factory dataSourceFactory = new DefaultDataSourceFactory(context, Util.getUserAgent(context, \"yourApplicationName\"));\r\n        ExtractorsFactory extractorsFactory = new DefaultExtractorsFactory();\r\n        MediaSource streamSource = new ExtractorMediaSource(builtUri, dataSourceFactory, extractorsFactory, null, null);\r\n        isNotificated = false;\r\n        type = Player_Fragment.Type.MEMORY;\r\n        setVolumeMax();\r\n        player.prepare(streamSource);\r\n        player.setPlayWhenReady(true);\r\n}\r\n```",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2357/comments",
    "author": "Merseyside",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-01-23T09:27:21Z",
        "body": "The sample code you've provided lacks the very piece you're asking for help on (i.e. any handling of audioSessionId), which makes it quite difficult for us to help."
      },
      {
        "user": "Merseyside",
        "created_at": "2017-01-23T13:45:07Z",
        "body": "```\r\n@Override\r\n    public void onPlayerStateChanged(boolean playWhenReady, int playbackState) {\r\n        if (playbackState == ExoPlayer.STATE_ENDED){\r\n            if (isLooping){\r\n                playTrack(track);\r\n            }\r\n            else if (!isNotificated) myInterface.endOfTrack();\r\n        }\r\n        else if (playbackState == ExoPlayer.STATE_READY){\r\n            EqualizerEngine equalizerEngine = new EqualizerEngine(context);\r\n            PrintString.printLog(\"Equalizer\", player.getAudioSessionId() + \"\");\r\n            equalizerEngine.setEqualizers(player.getAudioSessionId());\r\n        }\r\n    }\r\n```\r\nthis override method, where i try to get audioSessionId, but it always equals zero"
      },
      {
        "user": "ojw28",
        "created_at": "2017-01-23T14:24:02Z",
        "body": "That means it hasn't been set yet. You can use `player.setAudioDebugListener` to listen for the ID being set (the ID will be passed via `onAudioSessionId` when it is)."
      },
      {
        "user": "Merseyside",
        "created_at": "2017-01-23T14:24:52Z",
        "body": "okay, i will try it. Thanks very muck"
      },
      {
        "user": "Merseyside",
        "created_at": "2017-01-23T18:20:00Z",
        "body": "It works, thanks)"
      }
    ]
  },
  {
    "number": 2354,
    "title": "Player stops after a few minutes",
    "created_at": "2017-01-21T13:44:10Z",
    "closed_at": "2017-01-21T14:01:15Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2354",
    "body": "I have player working with a url stream from internet ,when i start the player it works fine but when i turn off the device screen a few minutes later (5 to 7 minutes) it stops and doesn't recover until i turn on the screen. I need your help .\r\n\r\nSteps on the ExoPlayer demo :\r\n\r\n1-I went to SmoothStreaming -> SuperSpeed -> the player start fine \r\n2-I turn off the device screen\r\n3-After a few minutes the player stops without automatic recovery\r\n4-I turn on the device screen and the player recovers\r\n\r\nMy device : Nexus 5X \r\n\r\nThanks a lot for your time.\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2354/comments",
    "author": "Moussine89",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2017-01-21T14:01:15Z",
        "body": "Background/screen off playback has been discussed on this issue tracker several times before -- in future, please search for an answer in previous issues before filing a new one. In this case, I suggest reading #930, #1826, #2276 and #421."
      },
      {
        "user": "Moussine89",
        "created_at": "2017-01-21T16:14:52Z",
        "body": "Thanks a lot and forgive my ignorance im new here :)\r\n"
      }
    ]
  },
  {
    "number": 2349,
    "title": "ExoPlayer with MediaBrowserServiceCompat compability",
    "created_at": "2017-01-19T19:52:21Z",
    "closed_at": "2017-01-20T20:52:39Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2349",
    "body": "Hi, \r\n\r\nI read that ExoPlayer works well with `MediaBrowserServiceCompat`, but I'm having issues setting the player to the view.\r\n\r\nMy `ExoPlayer` instance is inside the `MediaBrowserServiceCompat` and I have to access this player inside the activity. Is there any way to use it without calling `setPlayer()` method or communicate with the activity?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2349/comments",
    "author": "GokhanArik",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-01-20T20:52:39Z",
        "body": "This doesn't sound like an ExoPlayer issue (I didn't even know what MediaBrowserServiceCompat was until I looked it up). I suggest you ask this question on StackOverflow."
      }
    ]
  },
  {
    "number": 2348,
    "title": "Manifest fetching while Live stream on Pause",
    "created_at": "2017-01-18T20:05:29Z",
    "closed_at": "2017-01-18T20:47:09Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2348",
    "body": "Dear colleagues,\r\n\r\nI am wondering whether it is work as designed when channel manifest fetching while Live stream is on Pause?\r\n\r\nTo detect such behaviour I simple log callback \"onTransferStart\" on the listener assigned to \"HttpDataSource\" implementation.\r\n\r\nRegards,",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2348/comments",
    "author": "ChernyshovYuriy",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-01-18T20:47:09Z",
        "body": "Yes, it is. Otherwise there's no way to track changes in the live window. If you really want the player to be torn down completely then you should stop (or release) the player and prepare it again when it's next required."
      }
    ]
  },
  {
    "number": 2343,
    "title": "When to call setSelectionOverride? ",
    "created_at": "2017-01-18T14:34:54Z",
    "closed_at": "2017-01-20T21:07:59Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2343",
    "body": "We are in the process of moving our app(s) to ExoPlayer 2 and I need to get a grip on how track selection works exactly (for HLS streams).\r\n\r\nFrom looking at your demo app I learned to use `DefaultTrackSelector.setSelectionOverride()` - however, I have few questions:\r\n\r\n* Is this the only/clearly preferred way of tuning the track selection (for HLS streams) or is there a way to \"front load\" the process? (With ExoPlayer 1, for example, we had our own `HLSRendererBuilder` where we could reverse the list of `Variant`s before the `Renderer` was even built).\r\n\r\n* Is `ExoPlayer.EventListener.onTracksChanged()` a good place to call `setSelectionOverride()`? I wasn't able to find any earlier place where I already had access to the tracks...\r\n\r\n* Is it correct/safe to call `DefaultTrackSelector.getCurrentMappedTrackInfo()` inside of `onTracksChanged()`? It seems to be because the tracks are set with `trackSelector.onSelectionActivated(trackInfo.info)` before calling `onTracksChanged` in `ExoPlayerImpl`, but I'd like be sure that there are no possible race conditions or other problems when doing something like this:\r\n\r\n```\r\n@Override\r\npublic void onTracksChanged(TrackGroupArray trackGroups, TrackSelectionArray trackSelections) {\r\n    Timber.d(\"onTracksChanged: %s\\n%s\", trackGroups, trackSelections);\r\n\r\n    int indexOfVideoRenderer = -1;\r\n    for (int i = 0; i < simpleExoPlayer.getRendererCount(); i++) {\r\n        if (simpleExoPlayer.getRendererType(i) == C.TRACK_TYPE_VIDEO) {\r\n            indexOfVideoRenderer = i;\r\n        }\r\n    }\r\n\r\n    TrackGroupArray trackGroupArray = trackSelector.getCurrentMappedTrackInfo().getTrackGroups(indexOfVideoRenderer);\r\n\r\n    Timber.d(\"index of video renderer = %d\", indexOfVideoRenderer);\r\n    for (int groupIndex = 0; groupIndex < trackGroupArray.length; groupIndex++) {\r\n        Timber.d(\"TrackGroup %d\", groupIndex);\r\n        for (int trackIndex = 0; trackIndex < trackGroupArray.get(groupIndex).length; trackIndex++) {\r\n            Timber.d(\"\\tTrack %d: %s (supported by video renderer = %s)\", trackIndex, trackGroupArray.get(groupIndex).getFormat(trackIndex), trackSelector.getCurrentMappedTrackInfo().getTrackFormatSupport(indexOfVideoRenderer, groupIndex, trackIndex));\r\n        }\r\n    }\r\n\r\n    trackSelector.setSelectionOverride(\r\n            indexOfVideoRenderer,\r\n            trackGroupArray,\r\n            new MappingTrackSelector.SelectionOverride(\r\n                    new FixedTrackSelection.Factory(),\r\n                    0,\r\n                    0\r\n            )\r\n    );\r\n}\r\n```\r\n\r\nI seemed to need `trackSelector.getCurrentMappedTrackInfo()` to check which groups/tracks are actual video tracks - is there a better way to build the `SelectionOverride` directly from the `TrackGroupArray` and `TrackSelectionArray` that are passed to `onTracksChanged()`?\r\n\r\n* And finally, I know that this has been discussed in other issues like #281 and more recently in #1848 but is there now a preferred way to force ExoPlayer to start with a particular track in an HLS stream? I tried doing so with something like this:\r\n\r\n```\r\ntrackSelector.setSelectionOverride(\r\n    indexOfVideoRenderer,\r\n    trackGroupArray,\r\n    new MappingTrackSelector.SelectionOverride(\r\n        new AdaptiveVideoTrackSelection.Factory(bandwidthMeter),\r\n        0,\r\n        trackGroupArray.get(0).length - 1, 0\r\n    )\r\n);\r\n```\r\n\r\nBut order of the track indices didn't seem to make a difference because of the `InitializationTrackSelection` in `HlsChunkSource`.\r\n\r\nSorry for my long and rambling post, but I hope my questions ultimately make sense!",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2343/comments",
    "author": "DavidMihola",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-01-18T15:34:47Z",
        "body": "> Is this the only/clearly preferred way of tuning the track selection (for HLS streams) or is there a way to \"front load\" the process? (With ExoPlayer 1, for example, we had our own HLSRendererBuilder where we could reverse the list of Variants before the Renderer was even built).\r\n\r\nIt's helpful to distinguish between synchronous and asynchronous track selection. By synchronous I mean the tracks are selected on the playback thread prior to media being buffered. By asynchronous I mean a message is passed to the application thread and a selection is then passed back to the playback thread. With asynchronous selection there's a small \"gap\" during which the wrong selection is being buffered, and so it's less efficient at the start of playback. For selection during playback (e.g. as a result of user interaction) asynchronous selection is fine.\r\n\r\nYour `HlsRendererBuilder` approach was synchronous. The asynchronous API in V1 was `ExoPlayer.setSelectedTrack`. In V2 `setSelectionOverride` is asynchronous. The synchronous API is `TrackSelector.selectTracks`, which is invoked directly on the playback thread. So you should customize what happens when `TrackSelector.selectTracks` is invoked to recreate what you had previously. It's a really complicated API to implement, and I doubt you'd want to implement it directly. Instead, it's probably sufficient for you to extend `DefaultTrackSelector` and override `selectVideoTrack` (and possibly `selectAudioTrack`). Alternatively, if you only need to specify constraints like a maximum video dimension, you can use the built in parameter functionality of `DefaultTrackSelector`. Do this prior to playback as below. The constraints you specify will then be applied during selection.\r\n\r\n```\r\ntrackSelector.setParameters(trackSelector.getParameters()\r\n    .withXXX()\r\n    .withYYY());\r\n```\r\n\r\n> Is ExoPlayer.EventListener.onTracksChanged() a good place to call setSelectionOverride()? I wasn't able to find any earlier place where I already had access to the tracks...\r\n\r\nAs above, it's preferable to use `setSelectionOverride` for changing tracks during playback only. Even during playback, it's still preferable to change tracks by replacing the `DefaultTrackSelector` parameters if this is sufficient for your needs.\r\n\r\n> Is it correct/safe to call DefaultTrackSelector.getCurrentMappedTrackInfo() inside of onTracksChanged()?\r\n\r\nYes.\r\n\r\n> And finally, I know that this has been discussed in other issues like #281 and more recently in #1848 but is there now a preferred way to force ExoPlayer to start with a particular track in an HLS stream?\r\n\r\nIt's easy to do this for DASH. I don't think it's possible to do this with HLS at this time. It's complicated in the HLS case by the fact we need to fetch a media chunk to determine what the tracks are."
      },
      {
        "user": "DavidMihola",
        "created_at": "2017-01-19T07:31:15Z",
        "body": "OK, we'll see how far we get with `Parameter`s first and try extending `DefaultTrackSelector` if we need to!\r\n\r\nThank you so much for your explanations!\r\n"
      },
      {
        "user": "DavidMihola",
        "created_at": "2017-01-19T08:17:07Z",
        "body": "Oh, one additional question if you don't mind...\r\n\r\nDoes the following make sense - I mean from the viewpoint of ExoPlayer architecture, and assuming you know the structure of the HLS playlists you are playing:\r\n\r\n```\r\npublic final class FixedTrackSelectionLastFactory implements TrackSelection.Factory {\r\n\r\n    private final int reason;\r\n    private final Object data;\r\n\r\n    public FixedTrackSelectionLastFactory() {\r\n        this.reason = C.SELECTION_REASON_UNKNOWN;\r\n        this.data = null;\r\n    }\r\n\r\n    /**\r\n     * @param reason A reason for the track selection.\r\n     * @param data   Optional data associated with the track selection.\r\n     */\r\n    public FixedTrackSelectionLastFactory(int reason, Object data) {\r\n        this.reason = reason;\r\n        this.data = data;\r\n    }\r\n\r\n    @Override\r\n    public FixedTrackSelection createTrackSelection(TrackGroup group, int... tracks) {\r\n        Assertions.checkArgument(tracks.length >= 1);\r\n        return new FixedTrackSelection(group, tracks[tracks.length - 1], reason, data);\r\n    }\r\n}\r\n```\r\n\r\nand\r\n\r\n```\r\ntrackSelector = new DefaultTrackSelector(new FixedTrackSelectionLastFactory());\r\n```\r\n\r\nExcept for the fact that `HLSChunkSource` still starts with the first track because of `InitializationTrackSelection` it seems to work..."
      },
      {
        "user": "ojw28",
        "created_at": "2017-01-20T21:07:59Z",
        "body": "The factory (`adaptiveVideoTrackSelectionFactory`) passed to the `DefaultTrackSelector` constructor is really intended to build an adaptive track selection containing all of the tracks provided to it, not select only one of them. If you want a fixed track selection you should probably pass null as the argument, which will force `DefaultTrackSelector` to make the \"best\" fixed selection whilst respecting the parameter constraints that you've set. Currently \"best\" means \"highest pixel count\". We should probably look at bitrate if the video resolution is unknown. If the behaviour isn't what you're looking for then you could override `DefaultTrackSelector.selectFixedVideoTrack` to do something different.\r\n\r\nNote 1: What you're doing will probably work fine, it's just not doing things in the way the API was intended to be used. It's also quite fragile to rely on the ordering of the tracks. I don't think we guarantee anywhere to preserve the ordering (although I can't think of a reason why we'd be likely to change it).\r\n\r\nNote 2: If you're making a track selection that doesn't contain the first track at all, and still see the first track being played out before adapting to your selection, I'd consider that a bug."
      },
      {
        "user": "ojw28",
        "created_at": "2017-01-20T21:23:24Z",
        "body": "I've filed #2353 to track the final note above. We'll merge a change to use bitrate as a tie-breaker for fixed track selection early next week."
      }
    ]
  },
  {
    "number": 2342,
    "title": "How to create MutliPeriod or MultiWindow Timeline from single media file?",
    "created_at": "2017-01-17T23:15:38Z",
    "closed_at": "2017-01-25T15:19:58Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2342",
    "body": "Is it possible to create MultiPeriod or MultiWindow Timeline from a single media file.\r\n\r\nFor example, if my media file is playing for 10 minutes then is it possible to create period/window for each 1 minute. It is like creating playlist from single media file consist of 10 playable windows.\r\n\r\nThanks, \r\n-Kuppa",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2342/comments",
    "author": "skuppa",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-01-18T10:28:56Z",
        "body": "I don't really see why you'd want to do this. If it's just to make the UI appear differently (i.e. as though the content consists of multiple pieces of media with << and >> skip buttons) then it seems more appropriate to customise the UI, not fake a structure for the media that's not really true."
      },
      {
        "user": "skuppa",
        "created_at": "2017-01-18T19:03:41Z",
        "body": "Thank you for responding my question.\r\n\r\nI am trying to index the big video with multiple chapters like DVD menu, and let user skip to next chapter or pick any chapter as per his needs."
      },
      {
        "user": "ojw28",
        "created_at": "2017-01-25T15:19:58Z",
        "body": "As above, I think you should implement this kind of thing in your own UI above the player. The timeline represents the structure of the media being played. Faking the structure of the media just because the default UI components use it isn't the right solution."
      },
      {
        "user": "skuppa",
        "created_at": "2017-02-08T19:33:27Z",
        "body": "Thanks for the suggestion.  Here is my use case, please advise me to the right direction..  I have video files that was shot in multiple angles and all video files have same timings.   I need to play video by switching the different angled's video file without any gaps.  My example as follows (I use second instead of microsecond):\r\n\r\n Assume, I have two video files.\r\nClip1_Angle1.mp4 (120 seconds)\r\nClip1_Angle2.mp4 (120 seconds)\r\n\r\nAnd I expect my player should be playing\r\nClip1_Angle1.mp4 (0-5s) -> Clip1_Angle2.mp4(6s-10s) -> Clip1_Angle1.mp4 (11-15s) -> Clip1_Angle2.mp4(16s-20s) ->...\r\n\r\nThanks,\r\n-Kuppa\r\n\r\n"
      },
      {
        "user": "andrewlewis",
        "created_at": "2017-02-10T13:53:48Z",
        "body": "@skuppa Can you use a ConcatenatingMediaSource joining several ClippingMediaSources, where each of those has the required start/end position and wraps an ExtractorMediaSource with the required URI? Note that for seamless video playback you'll need to ensure that the start time of every ClippingMediaSource is a keyframe (see #1988). It's fine to load the same URI more than once in different sources."
      },
      {
        "user": "skuppa",
        "created_at": "2017-02-10T21:34:54Z",
        "body": "Thank you Andrew.  This is really helps.  "
      }
    ]
  },
  {
    "number": 2337,
    "title": "Clear all EventListeners",
    "created_at": "2017-01-16T17:07:34Z",
    "closed_at": "2017-01-16T23:31:14Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2337",
    "body": "More of a question than an issue - I have one or two event listeners set on a SimpleExoPlayer, and I was wondering if it would be possible to remove all of them with one utility method, instead of having to retain instances of the listeners.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2337/comments",
    "author": "botondbutuza",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-01-16T23:31:14Z",
        "body": "This isn't supported, so you'll need to keep references to the instances so that you can pass them to the remove method. Having a method to clear all listeners may end up being more confusing than it is helpful, since components like `SimpleExoPlayerView` add themselves as listeners to the player, and it's quite likely that a developer calling such a method wont realize they're detaching the view from the player by doing so."
      },
      {
        "user": "botondbutuza",
        "created_at": "2017-01-17T09:29:43Z",
        "body": "That's a very good point, thank you for clarifying. :)"
      }
    ]
  },
  {
    "number": 2332,
    "title": "STATE_ENDED not detected r2.1.1",
    "created_at": "2017-01-16T05:25:40Z",
    "closed_at": "2017-01-16T14:14:18Z",
    "labels": [
      "question",
      "wont fix: infeasible"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2332",
    "body": "STATE_ENDED not detected. Video repeating , looping never stoped. if i remove \" exoplayerview.setPlayer(exoplayer);\" only audio playing not repeating \r\n\r\n\r\n ` BandwidthMeter defaultBandWidthMeter = new DefaultBandwidthMeter();\r\n        TrackSelection.Factory videoTrackSelectionFactory =\r\n                new AdaptiveVideoTrackSelection.Factory(defaultBandWidthMeter);\r\n        TrackSelector trackSelector = new DefaultTrackSelector(videoTrackSelectionFactory);\r\n        LoadControl loadControl = new DefaultLoadControl();\r\n        exoplayer = ExoPlayerFactory.newSimpleInstance(this, trackSelector, loadControl);\r\n        exoplayerview.setPlayer(exoplayer);\r\n       // exoplayer.setPlayWhenReady(true);\r\n        DataSource.Factory dataSourceFactory = new DefaultDataSourceFactory(\r\n                this,\r\n                Util.getUserAgent(this, getString(R.string.app_name)),\r\n                (DefaultBandwidthMeter) defaultBandWidthMeter\r\n        );\r\n        ExtractorsFactory extractorsFactory = new DefaultExtractorsFactory();\r\n        MediaSource videoSource = new ExtractorMediaSource(\r\n                Uri.parse(VIDEO_URL),\r\n                dataSourceFactory,\r\n                extractorsFactory,\r\n                null, null\r\n        );\r\n        LoopingMediaSource loopingSource = new LoopingMediaSource(videoSource);\r\n        exoplayer.prepare(loopingSource);\r\n\r\n\r\n        exoplayer.addListener(new ExoPlayer.EventListener() {\r\n\r\n            @Override\r\n            public void onLoadingChanged(boolean isLoading) {\r\n                Log.v(\"isLoading\",\"Listener-onLoadingChanged...\");\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onPlayerStateChanged(boolean playWhenReady, int playbackState) {\r\n                Log.v(\"playWhenReady\",\"Listener-onPlayerStateChanged...\");\r\n\r\n                switch(playbackState) {\r\n                    case ExoPlayer.STATE_BUFFERING:\r\n                        videoprogressBar.setVisibility(View.VISIBLE);\r\n                        exo_play.setVisibility(View.GONE);\r\n                        exo_pause.setVisibility(View.GONE);\r\n                        break;\r\n                    case ExoPlayer.STATE_ENDED:\r\n                        exoplayer.setPlayWhenReady(false);\r\n                        exoplayer.seekTo(0,0);\r\n                        Toast.makeText(VideoView_Activity.this, \"stoped\", Toast.LENGTH_LONG).show();\r\n                        Log.v(\"naagu\",\"Listener-onLoadingChanged...\");\r\n                        break;\r\n                    case ExoPlayer.STATE_IDLE:\r\n                        break;\r\n\r\n                    case ExoPlayer.STATE_READY:\r\n                        if (exoplayer.getPlayWhenReady()) {\r\n                            videoprogressBar.setVisibility(View.GONE);\r\n                        } else {\r\n\r\n                        }\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onTimelineChanged(Timeline timeline, Object manifest) {\r\n                Log.v(\"timeline\",\"Listener-onTimelineChanged...\");\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onTracksChanged(TrackGroupArray trackGroups, TrackSelectionArray trackSelections) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onPlayerError(ExoPlaybackException error) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onPositionDiscontinuity() {\r\n                Log.v(\"onPositionDiscontinuity\",\"Listener-onPositionDiscontinuity...\");\r\n\r\n            }\r\n        });\r\n        exoplayer.setPlayWhenReady(true);\r\n`",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2332/comments",
    "author": "Naguchennai",
    "comments": [
      {
        "user": "AquilesCanta",
        "created_at": "2017-01-16T10:13:42Z",
        "body": "This is working as intended. As you mention, you are using a LoopingMediaSource, so the player doesn't end because the media goes on \"_forever_\".\r\n\r\nCould you please clarify:\r\n>  if i remove \" exoplayerview.setPlayer(exoplayer);\" only audio playing not repeating\r\n\r\nIf you remove that line the player actually reaches ENDED state? Or it doesn't but the audio doesn't loop, as it would with the line."
      },
      {
        "user": "Naguchennai",
        "created_at": "2017-01-16T14:14:16Z",
        "body": "@AquilesCanta thank you my mistake "
      }
    ]
  },
  {
    "number": 2307,
    "title": "Reaches OOM",
    "created_at": "2017-01-08T23:22:46Z",
    "closed_at": "2017-01-13T17:29:13Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2307",
    "body": "Crashes on some devices with OutOfMemory while used internally by Firebase Ads.\r\n\r\nHere is the stacktrace from crashlytics:\r\n\r\n```\r\nFatal Exception: java.lang.OutOfMemoryError\r\n       at com.google.android.gms.ads.exoplayer1.upstream.g.a(:com.google.android.gms.DynamiteModulesA:51)\r\n       at com.google.android.gms.ads.exoplayer1.extractor.k.b(:com.google.android.gms.DynamiteModulesA:432)\r\n       at com.google.android.gms.ads.exoplayer1.extractor.c.a(:com.google.android.gms.DynamiteModulesA:2384)\r\n       at com.google.android.gms.ads.exoplayer1.extractor.mp4.f.b(:com.google.android.gms.DynamiteModulesA:311)\r\n       at com.google.android.gms.ads.exoplayer1.extractor.mp4.f.a(:com.google.android.gms.DynamiteModulesA:108)\r\n       at com.google.android.gms.ads.exoplayer1.extractor.h.c(:com.google.android.gms.DynamiteModulesA:615)\r\n       at com.google.android.gms.ads.exoplayer1.upstream.t.run(:com.google.android.gms.DynamiteModulesA:242)\r\n       at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:422)\r\n       at java.util.concurrent.FutureTask.run(FutureTask.java:237)\r\n       at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\r\n       at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\r\n       at java.lang.Thread.run(Thread.java:841)\r\n```\r\n\r\nHappens on android 4,5,6 all, frequecy is around 12-15 in a month.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2307/comments",
    "author": "ankush38u",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-01-09T10:27:08Z",
        "body": "The fact your app ran out or memory whilst using ExoPlayer doesn't in itself indicate an ExoPlayer issue. It's the sum of all memory used by your app that results in the OOM; the exact point at which the OOM occurs can be irrelevant, and your app is equally likely leaking memory elsewhere.\r\n\r\n12-15 also sounds like. . .barely anything, although without a baseline (e.g. number of playbacks / installs) it's impossible to say. . ."
      },
      {
        "user": "ojw28",
        "created_at": "2017-01-13T17:29:13Z",
        "body": "Closing because there's no evidence this is really an ExoPlayer leak."
      }
    ]
  },
  {
    "number": 2304,
    "title": "Customizing the TrackSelectors",
    "created_at": "2017-01-07T14:06:33Z",
    "closed_at": "2017-01-16T10:01:13Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2304",
    "body": "Hello @ojw28 \r\n\r\nIs there a way to remove some tracks of DASH file from Default track adapter but make them available in Track Selection Helper class so the user can choose to override  the default ones.\r\n\r\nSorry for raising this as an issue as I could not find any other straight way of doing it basing on bitrate of the track. And I am on very tight schedule.\r\n\r\nit would do me a lot of help if you can even provide me with some other source of getting it",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2304/comments",
    "author": "ram992",
    "comments": [
      {
        "user": "ram992",
        "created_at": "2017-01-09T07:26:07Z",
        "body": "any help on this question"
      },
      {
        "user": "ram992",
        "created_at": "2017-01-15T17:59:37Z",
        "body": "Sorry for being rude but any help for this question"
      },
      {
        "user": "AquilesCanta",
        "created_at": "2017-01-16T10:01:13Z",
        "body": "From what I understand, you want to avoid adapting into a specific subset of the available representations. Have you looked into the TrackSelector hierarchy? This is one of the things you can do with it. I'd also suggest trying stack overflow or a similar Q&A."
      },
      {
        "user": "ram992",
        "created_at": "2017-01-16T12:00:11Z",
        "body": "Hello @AquilesCanta I have solved it after reading the classes (cause I got some time) sorry for bugging you guys.\r\nI am posting here the solution (it's very simple) you can refer it to any other person if needed.\r\n\r\n\r\n private static boolean isSupportedAdaptiveVideoTrack(Format format, String mimeType,\r\n      int formatSupport, int requiredAdaptiveSupport, int maxVideoWidth, int maxVideoHeight) {\r\n    return isSupported(formatSupport) && ((formatSupport & requiredAdaptiveSupport) != 0)\r\n        && (mimeType == null || Util.areEqual(format.sampleMimeType, mimeType))\r\n        && (format.width == Format.NO_VALUE || format.width <= maxVideoWidth)\r\n        && (format.height == Format.NO_VALUE || format.height <= maxVideoHeight)\r\n            &&(format.bitrate < 3000000);\r\n  }\r\nthis method is in DefaultTrackSelector.java class\r\nextra param  &&(format.bitrate < 3000000);\r\n\r\nThanks for your reply"
      }
    ]
  },
  {
    "number": 2286,
    "title": "SimpleExoPlayer.setVideoListener() causes rendering issues r2.1.1",
    "created_at": "2017-01-03T14:12:35Z",
    "closed_at": "2017-01-04T10:51:19Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2286",
    "body": "Setting SimpleExoPlayer.VideoListener() causes rendering issues (SimpleExoPlayerView does not show any frames). audio plays fine and even the VideoListener's are invoked properly. Am I missing something here?\r\nFollowing code illustrates the problem.\r\n\r\n```\r\n   private void playStream(final Uri mediaUrl) {\r\n        Log.d(LOGTAG, \"Now playing: \" + mediaUrl);\r\n        mUrl.setText(mediaUrl.toString());\r\n        // Measures bandwidth during playback. Can be null if not required.\r\n        DefaultBandwidthMeter bandwidthMeter = new DefaultBandwidthMeter();\r\n        // Produces DataSource instances through which media data is loaded.\r\n        DataSource.Factory dataSourceFactory = new DefaultDataSourceFactory(this, Util.getUserAgent(this, \"yourApplicationName\"), bandwidthMeter);\r\n        // Produces Extractor instances for parsing the media data.\r\n        ExtractorsFactory extractorsFactory = new DefaultExtractorsFactory();\r\n        // This is the MediaSource representing the media to be played.\r\n        MediaSource videoSource;\r\n        if(mediaUrl.getLastPathSegment().contains(\".m3u8\"))\r\n            videoSource = new HlsMediaSource(mediaUrl,dataSourceFactory, 10, null, null);\r\n        else\r\n            videoSource = new ExtractorMediaSource(mediaUrl,dataSourceFactory, extractorsFactory, null, null);\r\n        // Following listener breaks rendering\r\n        player.setVideoListener(new SimpleExoPlayer.VideoListener() {\r\n            @Override\r\n            public void onVideoSizeChanged(int width, int height, int unappliedRotationDegrees, float pixelWidthHeightRatio) {\r\n                Log.e(LOGTAG, \"onVideoSizeChanged: \" + width + \":\" +height);\r\n            }\r\n\r\n            @Override\r\n            public void onRenderedFirstFrame() {\r\n                Log.e(LOGTAG, \"onRenderedFirstFrame \");\r\n            }\r\n        });\r\n        // Prepare the player with the source.\r\n        player.prepare(videoSource);\r\n        player.setPlayWhenReady(true);\r\n    }\r\n```\r\nReplacing setVideoListener() with setVideoDebugListener() solves the issue.\r\nTested on Nexus 9 running 7.0",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2286/comments",
    "author": "pilzflorian",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-01-03T14:54:45Z",
        "body": "SimpleExoPlayerView registers itself as the video listener, so when you set it you're replacing SimpleExoPlayerView as the listener. Hence SimpleExoPlayerView doesn't receive the events that it needs.\r\n\r\nWhy do you need to register a video listener when also using SimpleExoPlayerView?"
      },
      {
        "user": "pilzflorian",
        "created_at": "2017-01-04T10:51:19Z",
        "body": "Thank you so much for clarification, I will create my own SurfaceView and Controller instances. \r\nI need the information for gathering QOS statistics.\r\nI'll close this, thanks again for the quick response!"
      },
      {
        "user": "ojw28",
        "created_at": "2017-01-04T10:55:10Z",
        "body": "You should use `setVideoDebugListener` to gather QOS statistics, and let the view use `setVideoListener`."
      }
    ]
  },
  {
    "number": 2282,
    "title": "fast forward",
    "created_at": "2017-01-02T16:15:33Z",
    "closed_at": "2017-01-25T15:32:28Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2282",
    "body": "As i understood, Exoplayer does not support fast forward/rewind playback. Do you think to support it in the future? ",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2282/comments",
    "author": "AntonAFA",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-01-25T15:32:28Z",
        "body": "We don't have plans to support FF/RW, no. We may decided to implement it for HLS/DASH specifically in the case that trick play streams are provided in the playlist/manifest, but we don't have any immediate plans."
      }
    ]
  },
  {
    "number": 2270,
    "title": "Is it possible to play .amr files?",
    "created_at": "2016-12-28T18:31:24Z",
    "closed_at": "2016-12-29T10:20:37Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2270",
    "body": "",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2270/comments",
    "author": "githubdoramon",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2016-12-29T10:20:37Z",
        "body": "No. ExoPlayer does support extraction of AMR tracks in ISO BMFF containers, though."
      }
    ]
  },
  {
    "number": 2241,
    "title": "Track selection in a HLS stream",
    "created_at": "2016-12-21T11:01:46Z",
    "closed_at": "2017-01-30T20:57:46Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2241",
    "body": "   \r\nHello, I have a question. I configured a HLS stream on media server with 2 tracks:\r\n1. For high bitrate video and audio\r\n2. For low bitrate only audio\r\n\r\nNow my app uses ExoPlayer library 2.1.0. Track selection doesn't work, app uses only first track, in bad network conditions app goes to buffering or error state and doesn't select a second track. Tried the same stream in my iOS app with AVPlayer class, it selects second track successfully. What is wrong with usage of SimpleExoPlayer in my app?\r\n\r\n```\r\nprivate static final DefaultBandwidthMeter BANDWIDTH_METER = new DefaultBandwidthMeter();\r\nprivate DefaultTrackSelector trackSelector;\r\nprivate DataSource.Factory dataSourceFactory;\r\nprivate Handler mainHandler;\r\n```\r\n\r\n```\r\n@Override\r\nprotected void onCreate(Bundle savedInstanceState) {      \r\n// some other code  \r\n       dataSourceFactory = new DefaultDataSourceFactory(this, Util.getUserAgent(this, userAgent), BANDWIDTH_METER);\r\n       mainHandler = new Handler();\r\n}\r\n```\r\n```\r\nprivate void initExoPlayer() {\r\n        if (exoPlayer == null) {\r\n            TrackSelection.Factory videoTrackSelectionFactory = new AdaptiveVideoTrackSelection.Factory(BANDWIDTH_METER);\r\n            trackSelector = new DefaultTrackSelector(videoTrackSelectionFactory);\r\n            exoPlayer = ExoPlayerFactory.newSimpleInstance(context, trackSelector, new DefaultLoadControl());\r\n            simpleExoPlayerView.setPlayer(exoPlayer);\r\n            exoPlayer.addListener(this);\r\n        }\r\n}\r\n\r\nprivate void releaseExoPlayer() {\r\n        if (exoPlayer != null) {\r\n            exoPlayer.stop();\r\n            exoPlayer.release();\r\n            exoPlayer = null;\r\n            trackSelector = null;\r\n        }\r\n}\r\n\r\npublic void PlayExoStream(String URL, String type) {\r\n        initExoPlayer();\r\n        Uri url = Uri.parse(URL);\r\n        MediaSource videoSource = null;\r\n        if (type.equals(\"m3u8\")) {\r\n            videoSource = new HlsMediaSource(url, dataSourceFactory, mainHandler, null);\r\n        }\r\n        else if (type.equals(\"dash\")){\r\n            videoSource = new DashMediaSource(url, dataSourceFactory, new DefaultDashChunkSource.Factory(dataSourceFactory), mainHandler, null);\r\n        }\r\n        if (videoSource != null) {\r\n            exoPlayer.prepare(videoSource);\r\n            exoPlayer.setPlayWhenReady(true);\r\n        }\r\n}\r\n```\r\n\r\n```\r\n    @Override\r\n    public void onTracksChanged(TrackGroupArray trackGroups, TrackSelectionArray trackSelections) {\r\n\r\n        MappingTrackSelector.MappedTrackInfo mappedTrackInfo = trackSelector.getCurrentMappedTrackInfo();\r\n        if (mappedTrackInfo != null) {\r\n            if (mappedTrackInfo.getTrackTypeRendererSupport(C.TRACK_TYPE_VIDEO)\r\n                    == MappingTrackSelector.MappedTrackInfo.RENDERER_SUPPORT_UNSUPPORTED_TRACKS) {\r\n                Toast.makeText(MainActivity.this, \"Unsupported\", Toast.LENGTH_SHORT).show();\r\n            }\r\n            if (mappedTrackInfo.getTrackTypeRendererSupport(C.TRACK_TYPE_AUDIO)\r\n                    == MappingTrackSelector.MappedTrackInfo.RENDERER_SUPPORT_UNSUPPORTED_TRACKS) {\r\n                Toast.makeText(MainActivity.this, \"Unsupported\", Toast.LENGTH_SHORT).show();\r\n            }\r\n        }\r\n    }\r\n```",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2241/comments",
    "author": "AntonAndev",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-01-03T15:46:50Z",
        "body": "We don't support adaptation between audio+video and audio only tracks, sorry. This is mainly because DASH and SmoothStreaming do not have the same kind of concept due to the fact that audio and video tracks are de-muxed. To support this kind of adaptation for HLS only would require our HLS implementation to deviate significantly from the code that we use for DASH and SmoothStreaming, and this is not something we're keen on doing.\r\n\r\nAs an aside, I don't really understand *why* adaptation to audio only is part of the HLS spec. In most cases I'd argue that buffering is preferable to the video disappearing. For the minority of cases where it's not, it seems simpler just to include an extremely low bitrate video track than to require players to handle the video track disappearing."
      },
      {
        "user": "AntonAndev",
        "created_at": "2017-01-03T16:33:03Z",
        "body": "Ok, thank you. I have an app for Android and for iOS. On iOS Apple requires to add \"audio only\" track to support low bandwidth. It is simply cheaper than encoding all TV channels to very low bitrate video version."
      },
      {
        "user": "ojw28",
        "created_at": "2017-01-03T16:57:41Z",
        "body": "I guess the reasoning behind my last paragraph is that it wouldn't even be necessary to encode the TV stream. You could just encode a thumbnail as a very low bitrate video track. Each segment could probably just have a single key-frame. That key-frame could even just be solid black. Seems like it would have been easier. Unfortunately it's just not how things are :). Oh well!"
      },
      {
        "user": "AntonAndev",
        "created_at": "2017-01-03T17:30:39Z",
        "body": "Thanks for the help :)"
      }
    ]
  },
  {
    "number": 2227,
    "title": "How to play downloaded file through exoplayer v2",
    "created_at": "2016-12-19T12:48:30Z",
    "closed_at": "2016-12-19T15:20:45Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2227",
    "body": "in exoplayer v1 we have extractrenderbuilder  to play downloaded files ,in v2 i couldn't able to find",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2227/comments",
    "author": "skyshine999",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-12-19T15:20:45Z",
        "body": "`ExtractorMediaSource` is probably what you're looking for. Note also that `ExtractorRendererBuilder` was never part of the ExoPlayer library. It was part of the demo app only."
      }
    ]
  },
  {
    "number": 2220,
    "title": "Custom TrackSelection Helper Class",
    "created_at": "2016-12-17T21:52:34Z",
    "closed_at": "2017-01-04T10:56:49Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2220",
    "body": "Hello,\r\n\r\nCan I get some help on how to Customize the TrackSelection Helper Class,\r\ncause I want to show the quality selection not as a popup/dialog but as a part of mediaController,\r\n\r\nFor now I have modified my mediaController class( and layout ) to call the track selection helper class on the click of image on the controller itself , but it displays the tracks in checkedList (android default one).\r\n\r\nI have searched the web for this kind of implementation, but I could not find one, I guess that it is very easy as there is no question regarding this thing. \r\n\r\nFew more details : I want to fill the tracks in a grid kind of layout  and also want the random adaptation feature, \r\n\r\nSo I have started a new Issue (rather a question)  to know the answer ",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2220/comments",
    "author": "ram992",
    "comments": [
      {
        "user": "ram992",
        "created_at": "2017-01-04T09:21:33Z",
        "body": "Hello any help on this one"
      },
      {
        "user": "ojw28",
        "created_at": "2017-01-04T10:56:49Z",
        "body": "This is a question about building Android user interfaces. It's not particularly ExoPlayer specific, and falls outside the scope of this issue tracker. Sorry."
      }
    ]
  },
  {
    "number": 2218,
    "title": "seekTo Nearest keyframe",
    "created_at": "2016-12-17T13:24:25Z",
    "closed_at": "2016-12-18T16:32:04Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2218",
    "body": "i know that exoplayer's seekTo takes playback to the exact position , and because it takes sometime to process exact seek, i want to know how is it possible to seek to nearest keyframe ?\r\nI am asking this because i want to show the user a quick preview of where he is seeking the video .",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2218/comments",
    "author": "rafiip",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-12-18T16:32:04Z",
        "body": "This is not something we support, sorry."
      }
    ]
  },
  {
    "number": 2217,
    "title": "Audio won't play on some devices",
    "created_at": "2016-12-17T01:06:41Z",
    "closed_at": "2016-12-18T16:52:54Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2217",
    "body": "*** PLEASE DO NOT IGNORE THIS ISSUE TEMPLATE ***\r\n\r\nWe recently updated our apps using Exoplayer to play 3 simultaneous audio tracks. The apps work as expected on all our test devices, and for most users.\r\n\r\nHowever, since releasing the updates yesterday, we've received two reports from users who say the audio does not play since they installed the update. One user is using a Samsung S4 (SPH-L720T) and Android 5.0.1. The other user is using an LG G3 (LG-D855) with Android 5.0. \r\n\r\nWe are not able to reproduce the issue on any of our test devices. I'll email you a link to the app.\r\n\r\nWe are using Exoplayer 2.0.4. ",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2217/comments",
    "author": "boywithk9",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-12-18T16:52:54Z",
        "body": "We're unable to offer support debugging individual applications, sorry. If you uncover a specific ExoPlayer issue during your own debugging, please provide detailed repo steps, ideally with our demo app or a modification of it to which you can make the source code available."
      }
    ]
  },
  {
    "number": 2215,
    "title": "DrmToday with exoplayer ",
    "created_at": "2016-12-16T17:28:19Z",
    "closed_at": "2016-12-18T16:54:31Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2215",
    "body": "Hello\r\ni can't read video with drmtoday \r\n\r\nwhat should i put on drmKeyRequestProperties?\r\n\r\ni try with is but it's not working \r\n\r\n ArrayList<String> drmKeyRequestPropertiesList = new ArrayList<>();\r\n                JSONObject js=new JSONObject ();\r\n                try {\r\n                    js.put(\"userId\", \"12345\");\r\n                    js.put(\"sessionId\", \"12345\");\r\n                    js.put(\"merchant\", \"afrostream\");\r\n                }catch ( Exception ee)\r\n                {\r\n                    ee.printStackTrace();\r\n                }\r\n  drmKeyRequestPropertiesList.add(\"dt-custom-data\");\r\n\r\n               drmKeyRequestPropertiesList.add(js.toString());\r\ndrmKeyRequestProperties = drmKeyRequestPropertiesList.toArray(new String[0]);\r\n\r\n\r\n\r\n                Sample smp=new UriSample( name,  drmSchemeUuid,  drmLicenseUrl,          drmKeyRequestProperties,  false,uri,extension) ;\r\n                Intent nb=smp.buildIntent(getApplicationContext());\r\n                startActivity(nb);",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2215/comments",
    "author": "afrostreambahri",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-12-18T16:54:31Z",
        "body": "We're not particularly familiar with DrmToday. I'd suggest asking them for assistance on this, since what properties to set is dependent on what their requirements, not on ExoPlayer."
      }
    ]
  },
  {
    "number": 2212,
    "title": "Intercepting audio for playback externally",
    "created_at": "2016-12-16T15:28:59Z",
    "closed_at": "2017-01-05T21:27:58Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2212",
    "body": "Hi,\r\n\r\nQuestion...\r\n\r\nIs there a way to intercept/grab decoded audio frames/chunks such that they do not get passed onto AudioTrack?  Essentially I am looking to take the decoded audio and be in control of playback myself after some manipulation.\r\n\r\nI am using ExoPlayer v2.1.x currently.\r\n\r\nThanks!",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2212/comments",
    "author": "SteUK",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-01-05T21:27:58Z",
        "body": "You should implement your own audio renderer and use it instead of `MediaCodecAudioRenderer` (or extend MediaCodecAudioRenderer if it's possible to adjust it to meet your use case).\r\n\r\nIf you're using `SimpleExoPlayer` then the way to pass a custom renderer is to extend `SimpleExoPlayer` and override `buildAudioRenderers` to add your own renderer rather than the ones that are added by default. If you're using `ExoPlayer` directly (via `ExoPlayerFactory.newInstance`) then you just inject it when you create the player instance."
      }
    ]
  },
  {
    "number": 2203,
    "title": "ExoPlayer v2. Display multiple videos on one screen android device.",
    "created_at": "2016-12-15T03:29:07Z",
    "closed_at": "2016-12-15T10:24:52Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2203",
    "body": "I met one problem screen multiplayer on 1 device with Exoplayer and I don't know how to do this . So i need a help. plz teach me how to do it or a example.\r\nThanks for support.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2203/comments",
    "author": "leodaddydev",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-12-15T10:24:52Z",
        "body": "StackOverflow is a more appropriate place to ask general questions. This tracker is for issues and feature requests."
      },
      {
        "user": "leodaddydev",
        "created_at": "2016-12-16T10:05:42Z",
        "body": "OK. Thanks ojw28 . i'll try in StackOverflow."
      }
    ]
  },
  {
    "number": 2200,
    "title": "Exoplayer 2 - play multiple sounds/audio simultaneously (using MergingMediaSource?)",
    "created_at": "2016-12-14T18:50:08Z",
    "closed_at": "2017-03-22T20:13:18Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2200",
    "body": "I'm using in my app several instances of `SimpleExoPlayer` to play audio file (Wav file). I want play all these files simultaneously. Now there is some small gap between these files. Is it possible to have only one instance of `SimpleExoPlayer` with more sounds files? \r\n\r\nI tried use `MergingMediaSource` but it's now working. It's playing only one Wav file (not all).\r\n\r\nCode:\r\n\r\n            MediaSource ms = new MergingMediaSource(audioSources.toArray(new MediaSource[audioSources.size()]));\r\n            mMediaPlayerTracker1.addListener(myExoPlayerEventListener);\r\n            mMediaPlayerTracker1.prepare(ms);\r\n\r\n            //Adding MediaSource to the ArrayList\r\n            audioSources.add(new ExtractorMediaSource(\r\n                        Uri.fromFile(new File(path)), mediaDataSourceFactory, defaultExtractorsFactory,\r\n                        mainHandler, exoEventListener));\r\n\r\nThanks for help or advice!",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2200/comments",
    "author": "Pepa112",
    "comments": [
      {
        "user": "nashxena",
        "created_at": "2017-03-08T10:48:18Z",
        "body": "Any thing on this? I have a similar problem. Thanks for any suggestions/clues here."
      },
      {
        "user": "ojw28",
        "created_at": "2017-03-22T20:13:18Z",
        "body": "To achieve this you'd probably need to be mixing the audio prior to feeding it into a single AudioTrack instance. This is not a use case we currently support, sorry!"
      },
      {
        "user": "xdestiny110",
        "created_at": "2017-06-30T03:05:31Z",
        "body": "I have achieve this. I generate an audio file that contain 4 audio tracks. Then I override `buildAudioRenderers` in `DefaultRenderersFactory`, and `getMediaClock` in `MediaCodecAudioRenderer`. Also I implement `TrackSelector`. In that way I can play all audio track simultaneously."
      }
    ]
  },
  {
    "number": 2192,
    "title": "Switching seamlessly between videos",
    "created_at": "2016-12-13T15:49:34Z",
    "closed_at": "2017-05-24T14:19:07Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2192",
    "body": "Hi,\r\n\r\nI am trying to add a pretty simple ability to the exoplayer2 but can't seem to find any information on the subject.\r\nThe target is to be able to load several video streams together (all of which are createded and managed by me) and render only one of them at a given time. that mean to manage several parallel buffers and renderers and display the frame of one of them (seamlesly switching) while changing sources dynamically according to an internal logic. currently I can't seem to find a direction to follow:\r\nshould i add a new media source?\r\nshould i change the track selector?\r\nor is the solutions in another place?\r\n\r\nThanks!",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2192/comments",
    "author": "michaelstrigy",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-05-24T14:19:07Z",
        "body": "I'm not sure I'd describe that as a simple use case. Sounds pretty complicated to me ;). It's not something we support directly. It likely is possible to customize ExoPlayer for this use case, but we're unable to provide guidance; sorry."
      }
    ]
  },
  {
    "number": 2185,
    "title": "[Question] Is the HLS package part of the public API?",
    "created_at": "2016-12-12T17:01:10Z",
    "closed_at": "2016-12-12T17:08:15Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2185",
    "body": "I'm sorry, this is not really an issue, but a question.\r\n\r\nI am currently in the need of implementing an HLS \"parser\" and I was wondering if I could consider that the classes in the `com.google.android.exoplayer2.source.hls` and `com.google.android.exoplayer2.source.hls.playlist` were part of the \"public API\" of ExoPlayer.  \r\n\r\nBy that I mean, that I can trust that my code can depend on it, and it should not break when new versions are released (except of course major versions).",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2185/comments",
    "author": "BoD",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-12-12T17:08:15Z",
        "body": "- Anything that's public is by definition part of the public API.\r\n- We don't guarantee not to break the public API between versions (minor or major). We do of course don't break the public API just for the sake of it, either ;).\r\n- Where we do make breaking changes, you can expect them to be in the form of compilation errors (e.g. a change to a method signature means your code no longer compiles). So they should be immediately obvious on upgrading and fairly easy for you to resolve.\r\n- You can expect for us not to silently break things (e.g. leave a method signature unchanged but completely change what each variable means). So if you upgrade and your code does still compile, you can reasonably assume the APIs on which you depend were unchanged. Of course, this does not guarantee no bugs were introduced in the new version. We recommend thoroughly testing your application following taking of an upgrade."
      },
      {
        "user": "BoD",
        "created_at": "2016-12-12T17:10:05Z",
        "body": "Thanks a lot :)"
      }
    ]
  },
  {
    "number": 2177,
    "title": "BDN (PNG+XML) subtitles",
    "created_at": "2016-12-10T13:28:30Z",
    "closed_at": "2016-12-11T23:15:56Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2177",
    "body": "I am currently using exoplayer with an application to play DRM encrypted movies with subtitles. Some movies have SRT subtitles, which I managed to integrate successfully in the DashRendererBuilder class using the following code in the buildRenderers method:\r\n```java\r\n          MediaFormat mediaFormat = MediaFormat.createTextFormat(\"0\", MimeTypes.APPLICATION_SUBRIP, MediaFormat.NO_VALUE, C.MATCH_LONGEST_US, null);\r\n          Uri uri = Uri.parse(getSRTURI());\r\n          DataSource textDataSource = new DefaultUriDataSource(context, bandwidthMeter, userAgent);\r\n          SingleSampleSource textSampleSource = new SingleSampleSource(uri, textDataSource, mediaFormat);\r\n          TrackRenderer textRenderer = new TextTrackRenderer(textSampleSource, player, player.getMainHandler().getLooper());\r\n```\r\nHowever, other movies have BDN subtitles, which consist of PNG and XML files. Is there a way to integrate such subtitles in exoplayer?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2177/comments",
    "author": "sarahachem",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-12-11T23:15:56Z",
        "body": "We do not support bitmap subtitles. Support for them is tracked by #179 (I'm not sure whether BDN is another variant of bitmap subtitle format, but I think we can use the same issue for tracking)."
      }
    ]
  },
  {
    "number": 2174,
    "title": "setting request properties for DefaultHttpDataSource.",
    "created_at": "2016-12-09T09:57:21Z",
    "closed_at": "2016-12-11T20:33:36Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2174",
    "body": " I need to send custom headers to our server while streaming media URL. and I have seen this one. #2166 \r\n\r\nthen I implement my own HttpDataSource.Factory to generating instances of DefaultHttpDataSource like the follow code.\r\n\r\n**does it work?**\r\n\r\n```\r\nprivate static class VHttpDataSourceFactory implements HttpDataSource.Factory {\r\n\r\n        private final String userAgent;\r\n        private final TransferListener<? super DataSource> listener;\r\n        private final int connectTimeoutMillis;\r\n        private final int readTimeoutMillis;\r\n        private final boolean allowCrossProtocolRedirects;\r\n        private Map<String, String> mHeaders = null;\r\n        /**\r\n         * Constructs a DefaultHttpDataSourceFactory. Sets {@link\r\n         * DefaultHttpDataSource#DEFAULT_CONNECT_TIMEOUT_MILLIS} as the connection timeout, {@link\r\n         * DefaultHttpDataSource#DEFAULT_READ_TIMEOUT_MILLIS} as the read timeout and disables\r\n         * cross-protocol redirects.\r\n         *\r\n         * @param userAgent The User-Agent string that should be used.\r\n         */\r\n        public VHttpDataSourceFactory(String userAgent) {\r\n            this(userAgent, null);\r\n        }\r\n\r\n        /**\r\n         * Constructs a DefaultHttpDataSourceFactory. Sets {@link\r\n         * DefaultHttpDataSource#DEFAULT_CONNECT_TIMEOUT_MILLIS} as the connection timeout, {@link\r\n         * DefaultHttpDataSource#DEFAULT_READ_TIMEOUT_MILLIS} as the read timeout and disables\r\n         * cross-protocol redirects.\r\n         *\r\n         * @param userAgent The User-Agent string that should be used.\r\n         * @param listener An optional listener.\r\n         * @see #VHttpDataSourceFactory(String, TransferListener, int, int, boolean)\r\n         */\r\n        public VHttpDataSourceFactory(\r\n                String userAgent, TransferListener<? super DataSource> listener) {\r\n            this(userAgent, listener, DefaultHttpDataSource.DEFAULT_CONNECT_TIMEOUT_MILLIS,\r\n                    DefaultHttpDataSource.DEFAULT_READ_TIMEOUT_MILLIS, false);\r\n        }\r\n\r\n        /**\r\n         * @param userAgent The User-Agent string that should be used.\r\n         * @param listener An optional listener.\r\n         * @param connectTimeoutMillis The connection timeout that should be used when requesting remote\r\n         *     data, in milliseconds. A timeout of zero is interpreted as an infinite timeout.\r\n         * @param readTimeoutMillis The read timeout that should be used when requesting remote data, in\r\n         *     milliseconds. A timeout of zero is interpreted as an infinite timeout.\r\n         * @param allowCrossProtocolRedirects Whether cross-protocol redirects (i.e. redirects from HTTP\r\n         *     to HTTPS and vice versa) are enabled.\r\n         */\r\n        public VHttpDataSourceFactory(String userAgent,\r\n                                            TransferListener<? super DataSource> listener, int connectTimeoutMillis,\r\n                                            int readTimeoutMillis, boolean allowCrossProtocolRedirects) {\r\n            this.userAgent = userAgent;\r\n            this.listener = listener;\r\n            this.connectTimeoutMillis = connectTimeoutMillis;\r\n            this.readTimeoutMillis = readTimeoutMillis;\r\n            this.allowCrossProtocolRedirects = allowCrossProtocolRedirects;\r\n        }\r\n\r\n        public void setHeader(Map<String, String> header) {\r\n            this.mHeaders = header;\r\n        }\r\n\r\n        @Override\r\n        public DefaultHttpDataSource createDataSource() {\r\n            DefaultHttpDataSource defaultHttpDataSource = new DefaultHttpDataSource(userAgent, null, listener, connectTimeoutMillis,\r\n                    readTimeoutMillis, allowCrossProtocolRedirects);\r\n            if (mHeaders != null) {\r\n                for (Map.Entry<String, String> entry : mHeaders.entrySet()) {\r\n                    defaultHttpDataSource.setRequestProperty(entry.getKey(), entry.getValue());\r\n                }\r\n            }\r\n            return  defaultHttpDataSource;\r\n        }\r\n    }`\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2174/comments",
    "author": "ghost",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-12-11T20:33:36Z",
        "body": "It looks like it should work. It's unclear what the question is here? If you've written some code, it's your responsibility to test whether it works (and debug it if not). The purpose of this tracker is not for us to do it for you. #2166 is tracking making this easier; until then you'll have to do something similar to the code you've written above."
      }
    ]
  },
  {
    "number": 2173,
    "title": "[HLS switch variants] catch the first rendered frame of a new variant",
    "created_at": "2016-12-09T06:59:23Z",
    "closed_at": "2016-12-16T09:13:56Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2173",
    "body": "I'm currently playing with the ExoPlayer r2.0.4.\r\nI noticed that in the HLS implementation, it supports adaptive video track selection. The demo application can seamlessly switching between variants in the HLS master playlist.\r\nWhile, now I wish I could catch the first frame output by decoder from a new variant and synchronically do some operation when the very frame is rendered onto the screen.\r\nDoes ExoPlayer support this behavior? \r\nI already customized the trackSelection a little bit so that I can arbitrarily switch between self generated variants (all variants have the same format).\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2173/comments",
    "author": "optimus1130",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-12-11T23:13:24Z",
        "body": "Please can you clarify exactly what your use case is? What operation do you want to do, exactly, and how synchronous does it really need to be?"
      },
      {
        "user": "optimus1130",
        "created_at": "2016-12-14T02:36:18Z",
        "body": "Thank you. My language is limited, but l'll try my best to clarify my use case:\r\nIn my application, the codec output frames are rendered onto an OpenGL shape.  Also, here is a camera in the OpenGL world to \"see\" the object. What I want is to know from which variant the new frame comes so that I can adjust camera position according the frame source when a frame form a new source (or, using the variable name used in ExoPlayer, a new video variant) is rendered onto the OpenGL shape. \r\nWhat I already have is: \r\nI can seamlessly switch between variants. \r\nThe problem is:\r\nI still can't catch the first frame that comes from a new variant each time when the variant change happens. Since all video variants have a same format, the onOutputFormatChanged method in MediaCodecVideoRenderer.java is never called. \r\n "
      },
      {
        "user": "ojw28",
        "created_at": "2016-12-15T11:28:27Z",
        "body": "Is onInputFormatChanged called on MediaCodecVideoRenderer? The format on the input side of the decoder has quite a bit of extra data in it, so that's more likely.\r\n\r\nIf it is then the listener will see an invocation of onVideoInputFormatChanged, which might be good enough. If it's too early, you could do something like:\r\n1. Set a flag in onInputFormatChanged\r\n2. When an input buffer is queued, if the flag is set, clear it and record the timestamp of that buffer. This will be the timestamp of the first buffer after the format switch.\r\n3. When an output buffer is rendered, look at its timestamp. If it matches the timestamp recorded in the previous step then it's the first buffer after the format switch. Generate an event and do what you want in response to it."
      },
      {
        "user": "optimus1130",
        "created_at": "2016-12-16T03:04:33Z",
        "body": "Thank you so much!! I got it done yesterday using exactly the same strategy."
      }
    ]
  },
  {
    "number": 2171,
    "title": "keeping buffer at the specified position",
    "created_at": "2016-12-08T21:43:45Z",
    "closed_at": "2016-12-11T21:57:13Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2171",
    "body": "Hi,\r\nI am using latest version of exoplayer and i'm trying to play a local video through it .\r\ni'm trying to play specified video between 2 given points in a loop , and since i want to make that loop seamless , i would like to keep buffer at start point ( not start point of the default video but the given one ).\r\ni will appreciate if you point me to the right direction since i almost lost my mind to it .",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2171/comments",
    "author": "rafiip",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-12-11T21:57:13Z",
        "body": "We already support seamless looping in ExoPlayer V2. So I think all you need is the ability to play a section of a video (rather than the whole thing), which you could then loop. The ability to play a section of a video is tracked by #1988, so please follow that issue."
      }
    ]
  },
  {
    "number": 2154,
    "title": "Retrieving current playback video and audio formats",
    "created_at": "2016-12-05T11:21:17Z",
    "closed_at": "2016-12-11T20:39:00Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2154",
    "body": "Hello, I want to retrieve data about currently active tracks(Format).\r\n\r\nWhen i am implementing TrackSelector.EventListener interface i have an \r\nonTrackSelectionsChanged() method which is triggered each time the track selection is changed.\r\nThere i am trying to get the formats by player.getVideoFormat and player.getAudioFormat().\r\nBut when i am trying to get the format it is null. At least the one i am changing. As i understand, this happens because the onVideoDisabled() of the VideoRendererEventListener happens first. Is it a bug or it is me, who doing something wrong?\r\nAnother question, is there any way to get the current TextFormat?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2154/comments",
    "author": "AntonAFA",
    "comments": [
      {
        "user": "gvidda",
        "created_at": "2016-12-08T09:03:28Z",
        "body": "In Exo2 you can listen to AdaptiveMediaSourceEventListener.onDownStreamFormatChanged() event and check the trackType and save those trackFormat depending on the type. Then you always have the current Format for video/audio/text."
      },
      {
        "user": "AntonAFA",
        "created_at": "2016-12-11T10:16:08Z",
        "body": "thank you for your help."
      }
    ]
  },
  {
    "number": 2141,
    "title": "ExoPlayer 2.0 scaling video view",
    "created_at": "2016-12-01T17:11:56Z",
    "closed_at": "2018-01-02T20:48:58Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2141",
    "body": "Hi) i have an issue with scaling video view using ExoPlayer 2.0. I found that scaling can be reached through AspectRatioFrameLayout object using setAspectRatio() method. Yes, it helps but a little bit((\r\nIs there any else approach to do scaling? I know that we need to use TextureView instead of Surface View when we do that kind of things, but i can find out how((\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2141/comments",
    "author": "YuriyRashkevych94",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2018-01-02T20:48:58Z",
        "body": "Closing because it's unclear what the question is."
      }
    ]
  },
  {
    "number": 2126,
    "title": "How to get MPEG-TS bitrate?",
    "created_at": "2016-11-29T16:55:09Z",
    "closed_at": "2016-12-12T22:26:19Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2126",
    "body": "EventLogger.onLoadCompleted works like a charm for hls sources but not for mpeg-ts.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2126/comments",
    "author": "catbaxter",
    "comments": [
      {
        "user": "AquilesCanta",
        "created_at": "2016-12-12T22:26:19Z",
        "body": "I am going to assume that by mpeg-ts you mean a raw ts file using an extractor media source. This makes sense considering onLoadCompleted implements an AdaptiveMediaSourceEventListener method which only applies for adaptive media. Even if it did, I don't think onLoadCompleted would provide any generally useful information as it doesn't handle the download throttling done by extractor media source. You should also clarify if you are looking for the download bandwidth or the TS flie bitrate (as defined by the PCR, for example). I assume the first. You can have a look at BandwidthMeter and see how it's done. I hope this provides some insight. You should try asking this kind of questions in a general Q&A exchange. The issue tracker is reserved for bug reports and feature requests, mainly."
      }
    ]
  },
  {
    "number": 2125,
    "title": "[Question] Exoplayer allows devices to play ABR variants above screen resolution",
    "created_at": "2016-11-29T15:22:35Z",
    "closed_at": "2016-11-29T15:44:29Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2125",
    "body": "Why does Exoplayer allow devices to jump up to an ABR variant that has video dimensions above the device's screen resolution?\r\n\r\nFor example, when using Exoplayer 2.0.3 with Dash-Widevine VOD content, the Samsung Tab SM-T330NU that we were testing has a screen resolution of 1280x800, yet the player allowed it to go up to 1920x1080 variants that resulted in dropped frames and poor video playback.  \r\n\r\nWe limited this in the code, but why would this not be the default?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2125/comments",
    "author": "mlondon1",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-11-29T15:36:33Z",
        "body": "It's quite complicated in practice because there are quite a lot of cases where you would want to exceed the display resolution. For example if two resolutions are available, one of which is far less than the display resolution and the other of which is a little bit larger. As another example, all use cases involving UIs that don't fit the video (e.g. UIs that clip instead, 360 video, VR). Conversely, in many other situations you probably want to constrain to something below the resolution of the display. For example any UI where the video is windowed, when streaming over a metered mobile network and so on. Whether the orientation of the application may change is also relevant.\r\n\r\nGiven these complexities, we leave it to the application to decide what the right thing to do is. You can pretty trivially constrain to the display viewport using `DefaultTrackSelector`."
      },
      {
        "user": "ojw28",
        "created_at": "2016-11-29T15:39:26Z",
        "body": "Specifically, use `DefaultTrackSelector.getParameters` to get the current parameters. Then call methods like `Parameters.withViewportSizeFromContext`, `Parameters.withMaxVideoSize`, `Paramaters.withExceedVideoConstraintsIfNecessary` to configure the behavior to be to your liking. Then pass the resulting parameters back to the selector via `DefaultTrackSelector.setParameters`."
      },
      {
        "user": "mlondon1",
        "created_at": "2016-11-29T15:44:29Z",
        "body": "Thanks for the answer"
      }
    ]
  },
  {
    "number": 2119,
    "title": "DASH live stream",
    "created_at": "2016-11-29T09:35:18Z",
    "closed_at": "2016-11-29T10:17:00Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2119",
    "body": "Someone can tell me,whether the ExoPlayer has supported DASH live stream? Thanks",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2119/comments",
    "author": "Reaper213cheng",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-11-29T10:17:00Z",
        "body": "Yes"
      },
      {
        "user": "Reaper213cheng",
        "created_at": "2016-11-30T02:36:05Z",
        "body": "Thanks. I have another issue. \r\nI try to use nginx-rtmp-module to product the MPD for DASH live-streaming,but the ExoPlayer is not working with the mpd.If you meet this question before ?Thanks"
      },
      {
        "user": "ojw28",
        "created_at": "2016-11-30T13:19:29Z",
        "body": "If you have an issue, please file a new issue including all of the information in the issue template. We cannot efficiently investigate or answer questions without the requested information. Thanks!"
      }
    ]
  },
  {
    "number": 2112,
    "title": "Asking about customizing subtitle style in exoplayer V2",
    "created_at": "2016-11-26T16:03:52Z",
    "closed_at": "2016-11-27T17:45:28Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2112",
    "body": "I'm using exoplayer for my application and I need to make a customize subtitle.\r\nHow can I make customized subtitle?\r\nI tried to use SubtitleView but the activity crash.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2112/comments",
    "author": "alimohammed",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-11-27T17:45:28Z",
        "body": "SubtitleView supports a bunch of style customisation options, and is what you should be using. Closing this issue because it doesn't contain a concrete question or a detailed description of an issue."
      }
    ]
  },
  {
    "number": 2109,
    "title": "Is Exoplayer a solution for bug in Android media player that causes dropped audio?",
    "created_at": "2016-11-26T02:51:40Z",
    "closed_at": "2016-11-27T17:43:20Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2109",
    "body": "We have an app that plays 3 simultaneous audio tracks using the native Android mediaplayer. From time to time, we receive reports from users that one or two of the tracks drop or fail to play. No error appears in the event logs. In most cases, restarting the device fixes the issue, but some users report being unable to correct the issue by any means (restarting, deleting/reinstalling app). \r\n\r\nIs this potentially an issue that would be corrected by using Exoplayer instead?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2109/comments",
    "author": "boywithk9",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-11-27T17:43:20Z",
        "body": "Without any information about the underlying cause of the issue to which you refer, it's impossible to say. Sorry!"
      }
    ]
  },
  {
    "number": 2100,
    "title": "Adaptive Audio",
    "created_at": "2016-11-23T14:37:21Z",
    "closed_at": "2016-11-23T17:35:18Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2100",
    "body": "Dear ExoPlayer team,\r\nI have probably \"obvious to answer\" question.\r\nDoes ExoPlayer v1 and v2 supports adaptive audio stream the same way it does for video in case of HLS and DASH? I assume it does, but I need to be 100% sure.\r\nIf it does, how algorithm correlates with video adaption, because obviously audio bitrate is much less then video ones?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2100/comments",
    "author": "ChernyshovYuriy",
    "comments": [
      {
        "user": "ChernyshovYuriy",
        "created_at": "2016-11-23T15:53:27Z",
        "body": "Quick investigation DefaultDashTrackSelector.java from v1 and DefaultTrackSelector.java from v2 shows that Audio adaptive stream is not supported by default. Client of ExoPlayer have to implement it in its own.\r\nPlease confirm / or un-confirm my statement."
      },
      {
        "user": "ojw28",
        "created_at": "2016-11-23T17:31:14Z",
        "body": "We keep audio fixed and adapt the video only. It would be possible (but more complicated) to adapt both at once. In V2 you could do this through implementing a custom `TrackSelection`. We may support this directly at some point, since being able to adapt audio at the same time as video is pretty important for countries where low bandwidth connections are common. We don't have any short term plans, however."
      },
      {
        "user": "ChernyshovYuriy",
        "created_at": "2016-11-23T17:32:34Z",
        "body": "Thanks for info."
      }
    ]
  },
  {
    "number": 2090,
    "title": "Where to listern video current position change.",
    "created_at": "2016-11-21T12:19:37Z",
    "closed_at": "2016-11-21T12:29:57Z",
    "labels": [
      "question",
      "wont fix: infeasible"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2090",
    "body": "In demo I can see a handler postDelayed(updateProgressAction), This is not elegant, and easy to get wrong.\r\n\r\nWhere to listern progress changed in any listener?",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2090/comments",
    "author": "lipangit",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-11-21T12:29:57Z",
        "body": "Well, someone has to be posting (or similar) to generate position updates. You're effectively stating that this code should be implemented by ExoPlayer rather than in client code, however logically it's the client that knows the points at which it wants a position update, which may be non-periodic, periodic, periodic at different rates for different pieces of the client etc. Hence it makes sense for the client to be in charge of generating any events that it needs. It's really not that hard or error prone to trigger an event at periodic intervals. The application developer is free to implement it in whatever way they want, if they think some alternative approach is clearer ;).\r\n\r\nNote also that ExoPlayer V2 does a lot more for you than V1 does, so if you're looking for an easier API you should probably think about migrating."
      },
      {
        "user": "lipangit",
        "created_at": "2016-11-21T12:49:59Z",
        "body": "I am on branch r2.0.4, I will getCurrentPosition like you."
      },
      {
        "user": "stanmots",
        "created_at": "2017-04-21T16:49:56Z",
        "body": "> logically it's the client that knows the points at which it wants a position update\r\n\r\nWhat if the client just wants to listen to the video current position updates? Constantly checking `getCurrentPosition` (e.g. with the help of `Timer().scheduleAtFixedRate`) is a very inefficient solution. IMHO, it would be great if ExoPlayer had a specialized method for this, somethings like `setCurrentPositionListener` which the developers could use to get notified about the video position changes. \r\n\r\nSince the player manages its own `getCurrentPosition` property it already knows when to emit `onPositionChanged` events. The client can only use the polling technique for this."
      },
      {
        "user": "ojw28",
        "created_at": "2017-04-21T16:54:33Z",
        "body": "> Since the player manages its own getCurrentPosition property it already knows when to emit onPositionChanged events\r\n\r\nThe player updates its internal position at a very high rate, because this is required for media playback. I doubt you'd want to be spammed with an event every 10-20ms.\r\n\r\n> Constantly checking getCurrentPosition (e.g. with the help of Timer().scheduleAtFixedRate) is a very inefficient solution. \r\n\r\nI'm not really sure what this means. You should just query it at exactly the rate you want (e.g. every second). It's in no way inefficient (although I doubt `Timer` is the right thing to use here; `Handler.sendMessageDelayed` seems more appropriate)."
      },
      {
        "user": "stanmots",
        "created_at": "2017-04-21T17:23:04Z",
        "body": ">  I doubt you'd want to be spammed with an event every 10-20ms.\r\n\r\nThank you for the quick reply and the explanation. I could use RxJava's `throttle` method to set the required rate though. \r\n\r\n> I'm not really sure what this means. \r\n\r\nI said it is \"inefficient\" because I thought about the case when the player is stopped and the client continues polling the current position. So the developers also need to monitor the player's stopped states to cancel the timer or remove handler's delayed messages, right?\r\n\r\n> although I doubt Timer is the right thing to use here\r\n\r\n`Timer` was used just as an example. However, I'm curious, why do you think `Handler` is more appropriate here? Is it related to the code style or the performance?\r\n"
      },
      {
        "user": "ojw28",
        "created_at": "2017-04-21T23:42:18Z",
        "body": "> I could use RxJava's throttle method to set the required rate though.\r\n\r\nOk, but at this point your request is basically equivalent to asking that we poll you every 10-20ms so that you can ignore us 99% of the time. This is far less efficient than just posting something to yourself to perform updates at the rate you actually need.\r\n\r\n> I said it is \"inefficient\" because I thought about the case when the player is stopped and the client continues polling the current position. So the developers also need to monitor the player's stopped states to cancel the timer or remove handler's delayed messages, right?\r\n\r\nYou could do that, and it wouldn't be particularly hard, yes.\r\n\r\n> Timer was used just as an example. However, I'm curious, why do you think Handler is more appropriate here? Is it related to the code style or the performance?\r\n\r\nSearch \"Timer vs Handler Android\" or similar on Google, and you'll probably find that consensus is to use Handler. Aside from any pros/cons, Handler is the \"Android way\"."
      },
      {
        "user": "lipangit",
        "created_at": "2017-04-22T03:58:59Z",
        "body": " Onlookers :)"
      }
    ]
  },
  {
    "number": 2076,
    "title": "how do I use M2tsExtrator for exoplayer2",
    "created_at": "2016-11-16T15:38:32Z",
    "closed_at": "2016-11-16T15:58:26Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2076",
    "body": "Please search the existing issues before filing a new one, including issues that\r\nare closed. When filing a new issue please include all of the following, unless\r\nyou're certain that they're not useful for the particular issue being reported.\r\n\r\n- A description of the issue.\r\n- Steps describing how the issue can be reproduced, ideally in the ExoPlayer\r\n  demo app.\r\n- A link to content that reproduces the issue. If you don't wish to post it\r\n  publicly, please submit the issue, then email the link to\r\n  dev.exoplayer@gmail.com including the issue number in the subject line.\r\n- The version of ExoPlayer being used.\r\n- The device(s) and version(s) of Android on which the issue can be reproduced,\r\n  and how easily it reproduces. If possible, please test on multiple devices and\r\n  Android versions.\r\n- A bug report taken from the device just after the issue occurs, attached as a\r\n  file. A bug report can be captured using \"adb bugreport\". Output from \"adb\r\n  logcat\" or a log snippet is not sufficient.\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2076/comments",
    "author": "codesunshine",
    "comments": [
      {
        "user": "Avetri",
        "created_at": "2016-11-16T15:53:30Z",
        "body": "Is your issue related to the issue #1488 ?\n"
      },
      {
        "user": "AquilesCanta",
        "created_at": "2016-11-16T15:58:26Z",
        "body": "You can have a look at the Demo App to see how to instance a ExtractorMediaSource. Unfortunately, the issue tracker is not intended to be used for general general Q&A. If you are not able to play your media in the demo app (as Avetri says, #1488 is possibly related) you will need to provide all the information requested in the issue template. Make sure you don't create a duplicate, please.\n"
      }
    ]
  },
  {
    "number": 2071,
    "title": "Next Track",
    "created_at": "2016-11-15T17:16:01Z",
    "closed_at": "2016-11-16T21:44:58Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2071",
    "body": "it's possible handle my own ui for next track,  i used the same method next()  from PlaybackControlView but do not  work.i would like to start in the first position when press next button in the last track",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2071/comments",
    "author": "irenecs",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-11-16T21:44:58Z",
        "body": "Looking at what `PlaybackControlView` does is the right place to start. Beyond that, this is something you'll have to work out for yourself.\n"
      }
    ]
  },
  {
    "number": 2060,
    "title": "Interlaced Video is not Playing on Google-Pixel",
    "created_at": "2016-11-11T06:58:42Z",
    "closed_at": "2016-11-18T13:50:17Z",
    "labels": [
      "question",
      "need more info"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2060",
    "body": "Hello, is there any known bug with exo-palyer about not being able to play an Interlaced Video.\r\n\r\nI have checked on HTC 620 G (running android 4.4.2) on Vivo Max (running android 5.1.1)  \r\nand on Google Pixel\r\n\r\nThe Video format : res: 1920 X 1080 an interlaced video with 5mbps video bit rate.\r\nThe player is playing on the two devices but not on pixel.\r\n\r\nwhat I get is , the audio is playing but I cannot see any video. But when I am interacting with the player I am able to see the actual video till then No video appears on the player surface. once my interaction is done the surface is again blank\r\n\r\nI am using your Demo App, hard coding the url's in the JSON list in the assets folder.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2060/comments",
    "author": "ram992",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2016-11-11T08:39:28Z",
        "body": "I don't know of any specific issues around playing interlaced video on Pixel devices. We can take a look if you provide a URL to the problematic media.\n"
      },
      {
        "user": "ojw28",
        "created_at": "2016-11-18T13:50:17Z",
        "body": "Closing due to lack of required information. See also #2013 which may be relevant.\n"
      }
    ]
  },
  {
    "number": 2053,
    "title": "Playlist refresh UI",
    "created_at": "2016-11-09T20:16:37Z",
    "closed_at": "2016-11-09T23:10:35Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2053",
    "body": "onPlayerStateChanged it's not called when a playlist change from one song to another\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2053/comments",
    "author": "irenecs",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-11-09T20:29:05Z",
        "body": "Why would you expect it to change? One of the key selling points of playlist support in V2 is that we can perform transitions seamlessly, which means there wont be any changes to player state across the transition ;). You should probably be looking at `onPositionDiscontinuity` instead, which is invoked on seeks and also when transitioning from one song to the next.\n"
      },
      {
        "user": "irenecs",
        "created_at": "2016-11-09T20:35:18Z",
        "body": " i would like to refresh  my UI when the song on the playlist change \n"
      },
      {
        "user": "ojw28",
        "created_at": "2016-11-09T20:43:53Z",
        "body": "Yes. So use `onPositionDiscontinuity`. From there, you can use `ExoPlayer.getCurrentWindowIndex` to see the index of the track being played. If it's changed then you can refresh the UI accordingly.\n"
      },
      {
        "user": "irenecs",
        "created_at": "2016-11-09T23:07:27Z",
        "body": "Thx :)  \n"
      }
    ]
  },
  {
    "number": 2052,
    "title": "Merging media sources",
    "created_at": "2016-11-09T15:02:58Z",
    "closed_at": "2016-11-18T13:41:54Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2052",
    "body": "ExoPlayer version: 2.0.4\r\n\r\nHi,\r\n\r\nIs it possible to merge two audio media sources?\r\nMergingMediaSource class seems to not handle that because\r\nonly first audio media source is played.\r\n\r\nTo be more specific about my case I want to play some \"sound effects\"\r\n(which are separate .mp3 files) in specific time of some song (which is another .mp3 file or some url).\r\nOne idea to handle this may be to track ExoPlayer playback and play sound effects using another ExoPlayer instance at specific playback time of first ExoPlayer instance. \r\n\r\nIs it possible to handle this case out of the box using ExoPlayer?\r\nIf not, it would be nice to have such a feature that allows\r\nto merge a number of media sources with possibility to delay some of them, e.g.\r\n`new MergingMediaSource(songMediaSource(), soundEffectMediaSource().delay(10s), soundEffectMediaSource().delay(20s));`\r\nThis would allow to compose number of media sources in time as we want. Delaying media sources feature would also be helpful in ConcatenatingMediaSource so we can customise break time between songs in playlist.\r\n\r\nSummarising requested features:\r\n- merging different media sources\r\n- delaying media sources in timeline\r\n\r\nThis issue is partially related to #1828\r\n\r\nI look forward to your reply.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2052/comments",
    "author": "marcin-adamczewski",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-11-09T18:57:45Z",
        "body": "Merging two sources that expose audio tracks is possible in the sense that the merged source will expose all of the audio tracks provided by its children. However it is not possible to then have more than one of the audio tracks enabled at a time, which is what you're wanting to do. I'm not sure whether Android even provides a way to accurately synchronize two `AudioTrack` instances together. If not, you'd likely have to do something yourself to merge the audio track data before feeding it into a single `AudioTrack`.\n\nI don't think this is something we have any plans to support.\n"
      },
      {
        "user": "benjosantony",
        "created_at": "2017-05-18T13:44:59Z",
        "body": "@ojw28 As I understand from your comment it is not possible to have two audio tracks enabled at a time. But would it be possible to do this for a mix of audio and video source.\r\n\r\nSomething like this\r\n\r\n`MergingMediaSource(songMediaSource(), videoMediaSource().delay(10s));`\r\n\r\nThe idea is to be able to play **audio track** and to be able to playback **video** after a **delay**. "
      },
      {
        "user": "ojw28",
        "created_at": "2017-05-22T15:53:22Z",
        "body": "It's possible merge audio and video sources, yes. We don't provide any functionality for adding a delay to one of the sources, however. It might be possible for you to implement it yourself with a custom `MediaSource`, but we don't have the cycles to be able to provide guidance about how you might go about doing this; sorry."
      }
    ]
  },
  {
    "number": 2045,
    "title": "Audio artifacts/noises (and video stucks) if audio going through heavy processing",
    "created_at": "2016-11-07T12:38:40Z",
    "closed_at": "2016-11-07T13:30:18Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2045",
    "body": "To whom it concerns, \r\nI noticed that if I perform heavy audio processing (we're doing heavy post audio processing from native layer) in handleBuffer function in Audiotrack.java, it starts to produce audio artifacts/noises (and video stucks). \r\n\r\nAn easy way to reproduce the problem is that, just before this line in handleBuffer:\r\nbytesWritten = audioTrack.write(temporaryBuffer, temporaryBufferOffset, bytesToWrite);\r\nAdd these lines:\r\n\r\n```\r\nByteBuffer.wrap(temporaryBuffer).order(ByteOrder.LITTLE_ENDIAN).asShortBuffer().get(shorts);\r\n\t     for(int j = 0 ;j<40;j++){\r\n\t    \t for (int i=0;i<shorts.length;i++) {\r\n\t\t    \t  shorts[i] *=.9;\r\n\t\t      }\r\n\t     }\r\nbyte[] bytes = new byte[shorts.length * 2];        \r\nByteBuffer.wrap(bytes).order(ByteOrder.LITTLE_ENDIAN).asShortBuffer().put(shorts);\r\nbytesWritten = audioTrack.write(bytes, temporaryBufferOffset, bytesToWrite);\r\n```\r\n\r\nIf possible, can you please give me a pointer of what to do to avoid audio artifacts/noises with heavy audio processing? Or is this the right place to do heavy audio processing?\r\n\r\nThank you very much in advance, we've been stuck in here for several long days :)\r\n\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2045/comments",
    "author": "Kexiliu",
    "comments": [
      {
        "user": "Kexiliu",
        "created_at": "2016-11-07T13:26:46Z",
        "body": "An even easier way to trigger this issue is that:\n\nIn AudioTrack.java, handleBuffer function, right before this line:\n`bytesWritten = writeNonBlockingV21(audioTrack, buffer, bytesRemaining);`\n\nAdd:\n\n```\n      byte[] b = new byte[buffer.remaining()];\n      buffer.get(b, 0, b.length);\n      ByteBuffer bufferNew = ByteBuffer.wrap(b);\n      bufferNew.position(0);\n      bytesWritten = writeNonBlockingV21(audioTrack, bufferNew, bytesRemaining);\n```\n\nAll i did was to convert buffer to array, and convert it back to bytebuffer and write to audioTrack. When i run the app, I hear the audio noise and video is faster... Is this the right place to change audio bytebuffer?\n"
      },
      {
        "user": "ojw28",
        "created_at": "2016-11-07T13:30:18Z",
        "body": "This issue tracker is for issues with the library. We don't have bandwidth to debug your own customizations; sorry. It's your responsibility to make sure you implement customizations correctly and to resolve any issues with them.\n\nThat said:\n\nNote that there is no guarantee `audioTrack.write` will actually write all of the data passed to it. That's why it returns the number of bytes written. It's quite likely you're accidentally applying your processing multiple times to the same audio in the case that it doesn't fully consume the data. `handleBuffer` is documented in detail (in V2 at least) explaining the contract and that the same `ByteBuffer` might be passed multiple times in the case that the data is not fully consumed.\n\nIn the \"easier way\" described above, the code is invalid because it will always advance the position of `buffer` by `remaining()`, even though fewer bytes might be written to the underlying platform AudioTrack. If fewer bytes are written, you've advanced the position too far, since the contract of `handleBuffer` is that the position is advanced by the number of bytes that were written successfully.\n"
      }
    ]
  },
  {
    "number": 2042,
    "title": "start playing video with low bit-rate",
    "created_at": "2016-11-06T07:19:14Z",
    "closed_at": "2017-05-02T22:27:59Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2042",
    "body": "Hi,\r\n\r\nI have update ExoPlayer and facing some issue.\r\nIn older version, When i play video HLS link, It was start playing with low bit-rate (low quality).\r\nhow to start playing with low bit-rate in exoplayer 2 ?\r\n\r\nPlease provide me solution for same.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2042/comments",
    "author": "AlirezaGhanbarinia",
    "comments": [
      {
        "user": "dreich",
        "created_at": "2016-11-07T06:47:46Z",
        "body": "Hello!\n\nAnd I just wanted to ask whether ExoPlayer does automatically switch to the most appropriate track (bitrate) in HLS stream.\n"
      },
      {
        "user": "ojw28",
        "created_at": "2016-11-07T08:23:33Z",
        "body": "Yes, it does.\n"
      },
      {
        "user": "dreich",
        "created_at": "2016-11-07T08:30:18Z",
        "body": "Do these rows respond for auto switching? Is DefaultTrackSelector the class which is reponsible?\n\n> ```\n>         TrackSelection.Factory videoTrackSelectionFactory = new AdaptiveVideoTrackSelection.Factory(BANDWIDTH_METER);\n>         trackSelector = new DefaultTrackSelector(mainHandler, videoTrackSelectionFactory);\n>         trackSelector.addListener(this);\n>         trackSelector.addListener(eventLogger);\n>         player = ExoPlayerFactory.newSimpleInstance(this, trackSelector, new DefaultLoadControl());\n> ```\n\nShould I call any special method for enabling auto switching?\n"
      },
      {
        "user": "ojw28",
        "created_at": "2016-11-07T08:42:17Z",
        "body": "The `TrackSelector` creates track selections. For the adaptive video case the selections are produced by the `AdaptiveVideoTrackSelection.Factory` in the code above. As long as you have similar code to the code in the demo app (and above), it will be enabled by default.\n"
      },
      {
        "user": "shaikhmohsink",
        "created_at": "2016-12-13T07:37:16Z",
        "body": "Hi AlirezaGhanbarinia,\r\nWere you able to figure out a way to always start with the lowest bitrate?\r\nIf so please can you share the same.\r\n\r\nThanks,\r\nMohsin"
      },
      {
        "user": "slezadav",
        "created_at": "2017-03-10T09:09:53Z",
        "body": "You can use \r\n`TrackSelection.Factory videoTrackSelectionFactory = new AdaptiveVideoTrackSelection.Factory Factory(BandwidthMeter bandwidthMeter, int maxInitialBitrate,\r\n        int minDurationForQualityIncreaseMs, int maxDurationForQualityDecreaseMs,\r\n        int minDurationToRetainAfterDiscardMs, float bandwidthFraction)`\r\nand set the maxInitialBitrate value"
      }
    ]
  },
  {
    "number": 2037,
    "title": "Question: where does ExoPlayer account for sequence number variance in HLS streams?",
    "created_at": "2016-11-04T17:14:23Z",
    "closed_at": "2016-11-04T17:39:39Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2037",
    "body": "This is just a question, not a bug report. Hope that's OK.\r\n\r\nWhenever a new playlist is loaded (for a live HLS stream), the first segment is always given time 0 and the last segment is given the correct time for that window. But the next time a playlist is loaded, it would be nice if the first segment in the new window took the sequence into account such that its start time is not zero.\r\n\r\nBy \"sequence,\" I meant the value at EXT-X-MEDIA-SEQUENCE in the playlist.\r\n\r\nAs an example:\r\n\r\n1. Load m3u8 at time t.\r\n\r\n#EXT-X-TARGETDURATION:10\r\n#EXT-X-MEDIA-SEQUENCE: 1000\r\nsegment[0] has start time of 0\r\n\r\n2. Load m3u8 at time t+delta.\r\n\r\n#EXT-X-TARGETDURATION:10\r\n#EXT-X-MEDIA-SEQUENCE: 1001\r\nsegment[0] has start time of 10\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2037/comments",
    "author": "jglanfield",
    "comments": [
      {
        "user": "AquilesCanta",
        "created_at": "2016-11-04T17:39:39Z",
        "body": "Track #87. Something similar is done in that line of work.\n\nAs a note, what you suggest is not that easy. That I know of, there is no restriction over the duration of the chunks except that they are shorter than the target duration of the media playlist. So, multiplying is not an option. Not generally, at least. And this is assuming you load every playlist at the start of playback. Ideally, you wouldn't load a playlist until you need it, but even if not, you might be loading a playlist that has drifted from the other one. Note also that sequence numbers need not be aligned.\n\nTo sum up, wait for live window seeking support. We do something relatively similar to what you ask. Thanks for the suggestion!\n"
      },
      {
        "user": "jglanfield",
        "created_at": "2016-11-04T17:46:28Z",
        "body": "Yeah, the reason I asked is because I hacked together a quasi-solution for seeking live events, but I haven't been able to account for the sequence variance yet. My use-case is quite simple, so I'll probably just store the previous sequence somewhere and ensure that and future segments take that into account when computing their start time.\n"
      }
    ]
  },
  {
    "number": 2035,
    "title": "Audio artifacts during custom processing on audio bytebuffer",
    "created_at": "2016-11-04T13:32:23Z",
    "closed_at": "2016-11-06T16:51:34Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2035",
    "body": "Hello, (all following line numbers are based on the tip of this repo right now)\r\n\r\nI'm trying to do some custom processing on the audio part of a video stream (byte array/byte buffer with variable name \"temporaryBuffer\" at line 641 of com.google.android.exoplayer2.audio.AudioTrack), the output audio produces with mild artifacts, like \"broken audio\" with discontinuities (AV still sync at this moment). \r\n\r\nTo fix this audio issue, I changed the AudioTrack constructor param (buffersize), at line 457 of com.google.android.exoplayer2.audio.AudioTrack. Now audio is smooth but the video will stuck at a still picture: looks like video frame update is skipped at line 405 of com.google.android.exoplayer2.video.MediaCodecVideoRenderer, and earlyUS will increase over time.\r\n\r\nCould you give me some pointer to fix this, I guess either \r\n1. let me change audio (byte array/byte buffer) without causing artifacts, \r\nor \r\n2. maintain AV sync when audio buffersize is changed?\r\n\r\nThanks in advance!\r\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2035/comments",
    "author": "Kexiliu",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-11-06T16:51:34Z",
        "body": "Given (a) The underlying AudioTrack simply plays what it's given, and (b) ExoPlayer feeds regular audio data to the underlying AudioTrack correctly, any artifacts being introduced must be purely a result of the processing that you're performing on the buffers.\n\nThis is something you'll need to resolve for yourself, I'm afraid. There's no particular reason why you'd need to change the buffer size; it should be more than large enough already.\n"
      }
    ]
  },
  {
    "number": 2032,
    "title": "License lifetime handler",
    "created_at": "2016-11-03T20:44:02Z",
    "closed_at": "2016-11-24T20:31:27Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2032",
    "body": "Dear ExoPlayer team,\r\nI am facing an issue with ExoPlayer when License expired during playback or during period when playback is on pause.\r\nIn first case there is \"MediaCodec$CryptoException: Error decrypting data: requested key has not been loaded\".\r\nIn seconds one there is \"com.quickplay.google.android.exoplayer.drm.KeysExpiredException\".\r\nThis is a little bit user unfriendly behavior. User have to restart playback once again in order to trigger all the flow in the DrmSessionManager implementation.\r\nMy question is next - do I miss something in ExoPlayer in order to handle this situation?\r\nI was hoped to relay on \"HttpMediaDrmCallback\"and it's method \"executeKeyRequest\".\r\nI expected that this callback will be invoked once new license needed during playback, but I was wrong.\r\n\r\nAny thoughts about this issue?\r\nIn worst case, I have to keep track on License expiry date from application side by some kind of scheduler, but it would be much more convenient to relay on ExoPlayer.\r\n\r\nThanks in advance.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2032/comments",
    "author": "ChernyshovYuriy",
    "comments": [
      {
        "user": "ChernyshovYuriy",
        "created_at": "2016-11-04T14:01:58Z",
        "body": "Additional question that I have.\nCan keys be loaded (re-loaded) within the same session?\nFor instance, by implement some kind of timer that trigger \"doKeyRequest\" of the StreamingDrmSessionManager once license going to be expired during playback?\n"
      },
      {
        "user": "ChernyshovYuriy",
        "created_at": "2016-11-04T15:41:15Z",
        "body": "Ok, for those who interested - it is possible to re-load keys during playback for the same session, this is good news.\nNow, back to original question, will it be ever supported by ExoPlayer?\n"
      },
      {
        "user": "ghost",
        "created_at": "2016-11-04T18:15:17Z",
        "body": "This seems like a drm configuration problem rather than a fault with the player.   You should perhaps look at increasing the licence duration to something typically longer than an average viewing session or look at implementing the licence renewal feature offered by widevine \n"
      },
      {
        "user": "ChernyshovYuriy",
        "created_at": "2016-11-04T18:21:30Z",
        "body": "I could be agree to some degree, but it is more then possible that license duration can be several hours (in case of sport event streaming, for instance) and then instead of reload license during stream, in current implementation on ExoPlayer, a channel is simply fails to play.\nI am not saying that it is hard to implement, in fact, our own implementation of DrmSessionManager handles it well, but do you guys think that this is 100% a case that must be addressed from client side?\n"
      },
      {
        "user": "ojw28",
        "created_at": "2016-11-24T20:15:23Z",
        "body": "Is this for streaming? If so then I agree this sounds like a (server-side) configuration issue. You can configure a license policy in a way that will cause the `MediaDrm` session to generate an `EVENT_KEY_REQUIRED` periodically before the current keys expire. Each time this event is fired `StreamingDrmSessionManager` will perform a new request, which will then obtain keys valid further into the future.\r\n\r\nIt's quite common for services to issue keys that are valid for durations far _less_ than the duration of a typical viewing session, and rely on the behaviour described above to have the client periodically obtain fresh keys during playback. For example a movie service may configure their license policy so that keys are valid for 5 minutes, with `EVENT_KEY_REQUIRED` fired every minute. The client will obtain fresh keys every minute and hence the keys it currently has will always be valid for between 4 and 5 minutes into the future under normal operation. If a request fails it will retry a minute later, and it will get 3 further chances before the current keys finally expire and playback fails. This approach allows for an indefinitely long viewing session, whilst also allowing the service provider to revoke the client's access pretty quickly.\r\n\r\nIf you have a Widevine contact, you'd be best off reaching out to them to get more information about how to configure licenses in the way described above. I think \"renewal delay\" might be what you're looking for, but I'm not certain. Alternatively, it might be obvious now you know roughly what to look for ;)."
      }
    ]
  },
  {
    "number": 2026,
    "title": "Compose playlist into sections",
    "created_at": "2016-11-01T20:19:08Z",
    "closed_at": "2017-02-15T19:51:22Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2026",
    "body": "I have a question since i couldn't find anywhere for reliable info. I have an app that has a number of files to play. i need to compose all these into a playlist and perform specific actions on every track, thus things like flash the UI with certain sound files, set a background music for certain video files.\r\n\r\nThe direction i took was to get the index of the currently playing track and apply my logic. But didn't go well. so i have 2 questions:\r\n1. how can i both play a video and a background music?\r\n2. How can i compose a playlist in which i can divide into sessions where i perform specific actions taking into account user interactions like skip/next\r\n\r\nthanks.",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2026/comments",
    "author": "pkegashira",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-01-30T20:23:14Z",
        "body": "> But didn't go well.\r\n\r\nWhy not? I would expect this approach to work fine.\r\n\r\n> how can i both play a video and a background music?\r\n\r\nIf the video and background audio have the same duration then you can merge them with MergingMediaSource. If they have different durations then this is not something we support. You could use a separate player instance for the background music."
      },
      {
        "user": "ojw28",
        "created_at": "2017-02-15T19:51:22Z",
        "body": "Closing due to lack of clarification."
      }
    ]
  },
  {
    "number": 2019,
    "title": "alternative for InfoListener in ExoPlayer2",
    "created_at": "2016-10-31T09:14:16Z",
    "closed_at": "2016-11-06T16:32:39Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2019",
    "body": "what is the alternative for Info Listener in the new ExoPlayer 2 ?\r\nin the previous version we used InfoListener to detect quality of video by changing internet speed .\r\nI want to know is there an alternative in the new version?\r\nthanks ",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2019/comments",
    "author": "AlirezaGhanbarinia",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-10-31T10:44:25Z",
        "body": "`InfoListener` was never part of the ExoPlayer API. It was only defined in `DemoPlayer` in the demo app, not in the core library. In V2 the equivalent to copying `DemoPlayer` is to use `SimpleExoPlayer` directly, which is in the core library. It defines a bunch of listeners that you can register that provide equivalent functionality.\n"
      }
    ]
  },
  {
    "number": 2018,
    "title": "add custom media Controller ",
    "created_at": "2016-10-30T09:44:10Z",
    "closed_at": "2016-11-06T16:32:50Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2018",
    "body": "how to add custom media Controller to Exo player?\n\nin the previous version by using \"getPlayerControl\" function , we accessed to media controller and player seekbar , is there a function like this in the new version? \n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2018/comments",
    "author": "AlirezaGhanbarinia",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-10-30T13:48:24Z",
        "body": "We don't use or support `android.media.MediaController` in ExoPlayer V2. It was never an API that was particularly well suited for `ExoPlayer`. Even in V1 it was expected that most people would not use it, with `PlayerControl` documented to say:\n\n> This class is provided for convenience, however it is expected that most applications will implement their own player controls and therefore not require this class.\n\nIn V2 we've introduced our own UI components (`SimpleExoPlayerView` and `PlaybackControlView`). They will be really easy to customize from the next release (r2.0.5), and we'll hopefully have a chance to write a blog post detailing this.\n"
      },
      {
        "user": "cyberjaime45",
        "created_at": "2016-10-31T17:12:31Z",
        "body": "This is good news for me, @ojw28  when you do think r2.0.5 will be available? \n"
      }
    ]
  },
  {
    "number": 2015,
    "title": "FORMAT_EXCEEDS_CAPABILITIES for switching tracks",
    "created_at": "2016-10-28T21:38:34Z",
    "closed_at": "2016-10-30T18:06:51Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2015",
    "body": "Hi, \nStream has two tracks:\nvideo H264 - MPEG-4 AVC (part 10) (h264) + audio-tracks MPEG Audio layer 1/2 (mpga)\nAudio track is defined in exoplayer with flag FORMAT_EXCEEDS_CAPABILITIES.\nWhen playing stream by default - the audio is not played.\n\nUsing in TrackSelector.onTrackSelectionsChanged explicitly switch to the audio track by TrackSelector.setSelectionOverride () - the audio track begins playing.\n\nThe same approach when playing stream that contains only one audio track (radio) does not always work - audio track not allways plays.\nPrompt, in what could be the problem? Can I use tracks with flag FORMAT_EXCEEDS_CAPABILITIES for switching?\n- Exoplayer 2.0.4.\n- Devices on Amlogic S905 & S905X-H, Android 5.1\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2015/comments",
    "author": "luxband",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-10-30T18:06:51Z",
        "body": "`FORMAT_EXCEEDS_CAPABILITIES` indicates that the device has a decoder for the format, but this decoder indicates that it doesn't support the specific properties of the track. For audio this typically means the decoder doesn't support the sample rate + number of channels. For video this typically means the decoder doesn't support the resolution + frame-rate (and profile, in some cases).\n\nIf the device reports its capabilities accurately then attempting to enable a track labelled in this way is expected to fail. You can try and force enable it regardless if you think you know better, but as per the previous sentence, you should expect failure in absence of any other information you have.\n\nFor the sample stream that does work if you enable it regardless, I suggest you report the issue to Amlogic. If you're using the same streams as #2014, the issue is that the AudioCapabilities for their `audio/mpeg-L2` decoder does not claim to support `channels=1` and `sample_rate=48000`.\n"
      }
    ]
  },
  {
    "number": 2002,
    "title": "Post-processing of HLS encrytion key",
    "created_at": "2016-10-26T11:07:22Z",
    "closed_at": "2017-03-13T15:57:15Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/2002",
    "body": "Hi,\nI'm using exoplayer 2.0.3 with HLS media playlist with encrypted chunks using standard AES-128 encryption. Only difference is that URI provided for key in the media playlist doesn't lead to the final key, but to some intermediate key that is used for generation of the final key.\n\nIs it possible with Exoplayer API to intercept this key before it's used for decryption and modify it?\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/2002/comments",
    "author": "xbezdeka",
    "comments": [
      {
        "user": "xbezdeka",
        "created_at": "2016-11-05T15:31:46Z",
        "body": "Ok, for others struggling with this problem, I was able to do what I need by creating custom DataSource object working as a wrapper and monitoring underlying http communication. When open() method is called and Uri in dataspec matches the Uri for key request I intercept data in read() method and modify it accordingly.\n"
      },
      {
        "user": "AquilesCanta",
        "created_at": "2017-03-13T15:57:15Z",
        "body": "We have recently added an `HlsDataSourceFactory` interface. By implementing one, you can provide a custom `DataSource` for media chunks, playlists and keys. In your case @xbezdeka, it might make sense to take advantage of this to avoid matching the Uri yourself. Let me know if you run into any issues."
      }
    ]
  },
  {
    "number": 1959,
    "title": "How to get the current sound amplitude from exovideplayer?",
    "created_at": "2016-10-17T22:38:41Z",
    "closed_at": "2016-10-17T22:44:12Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1959",
    "body": "For the current project I'm working on, we want to display an animation based on the sound amplitude of video playing in exoplayer, which updates every 30 ms. Is there a way to grab the sound amplitude from exoplayer?\n\nOne way to do so is to grab the decibel out of the decompressed audio frames, or directly from the hardware. Are any of the two possible with ExoPlayer?\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1959/comments",
    "author": "qillura",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-10-17T22:44:12Z",
        "body": "This is not something we support.\n"
      },
      {
        "user": "ojw28",
        "created_at": "2016-10-17T22:45:35Z",
        "body": "Note: Depending on what exactly you mean by the decibel value, I'm not even sure that the question makes sense. What would you expect the reference point be?\n"
      },
      {
        "user": "qillura",
        "created_at": "2016-10-17T22:56:45Z",
        "body": "sorry clarifying my quesiton:\n\nFor the current project I'm working on, we want to display an animation based on the sound amplitude of video playing in exoplayer, which updates every 30 ms. Is there a way to grab the sound amplitude from exoplayer?\n\nOne way to do so is to grab the decibel out of the decompressed audio frames, or directly from the hardware. Are any of the two possible with ExoPlayer?\n"
      },
      {
        "user": "ojw28",
        "created_at": "2016-10-17T23:44:58Z",
        "body": "It's still unclear what you mean by decibel. That aside, this is not something we support directly. It would probably be possible for you to extend ExoPlayer's audio renderer and AudioTrack classes to add support for this, but this is not something we intend to support in the core library.\n"
      },
      {
        "user": "qillura",
        "created_at": "2016-10-17T23:46:15Z",
        "body": "Thanks a lot!\n"
      }
    ]
  },
  {
    "number": 1932,
    "title": "Recording of Stream Video from Exoplayer",
    "created_at": "2016-10-12T07:21:23Z",
    "closed_at": "2016-10-12T08:06:20Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1932",
    "body": "Hello All,\n\nI want to record video from Exoplayer. \n\nRight now am using Exoplayer for streaming, now with the stream i need to record that video into Android phone local storage. Please help me out how i can record video from streaming buffer.\n\nThanks\nAnshuman\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1932/comments",
    "author": "Anshumansharma12",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-10-12T08:06:20Z",
        "body": "This is not a feature supported by ExoPlayer, sorry! It's probably possible to do, but how is something you'd need to work out for yourself.\n"
      },
      {
        "user": "Anshumansharma12",
        "created_at": "2016-10-12T08:40:23Z",
        "body": "Is it possible that i can cache streaming video and play it again?\n"
      },
      {
        "user": "lbranimir",
        "created_at": "2017-04-13T15:22:34Z",
        "body": "Anshumansharma12, do you resolve that problem?"
      }
    ]
  },
  {
    "number": 1918,
    "title": "[Question] Reuse BOTH SimpleExoPlayerView and SimpleExoPlayer after STATE_ENDED",
    "created_at": "2016-10-09T04:40:11Z",
    "closed_at": "2016-10-09T12:48:11Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1918",
    "body": "Assuming that I have played a local Video, using those 2 components. After the player reaches STATE_ENDED, it seems that it is not trivial to restart the playback again. What should I do if I want to \"click to one button\" to restart the playback from all over again.\n\nThanks and pardon me if I'm missing some thing.\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1918/comments",
    "author": "eneim",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-10-09T12:44:42Z",
        "body": "I think it is trivial; just seek back to 0 (by calling seekTo(0)) and that's it? Note that the ExoPlayer demo app allows you to seek back after the state has transitioned to ended (with the player controls).\n"
      },
      {
        "user": "eneim",
        "created_at": "2016-10-09T12:48:11Z",
        "body": "@ojw28 I think I got the solution. Thanks a lot.\n"
      }
    ]
  },
  {
    "number": 1915,
    "title": "Logcat show error when come back the activity. ",
    "created_at": "2016-10-08T07:09:33Z",
    "closed_at": "2016-10-10T03:06:24Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1915",
    "body": "Reproduction step:\n1. Play a video with ExoPlayer at a activity, exoPlayer to show the video with surfaceView.\n2. Leave the activity at playing a video.\n3. After that,come back the activity, play the video continue, logcat show error.\n\nNote:\nThe surface view is destroy when i leave the activity, i create a new surface view when come back. The instance of exoPlayer is not destroy throughout the process.\n\nLog:\n\n```\n10-08 15:08:05.028 15837-6568/com.fxtv.threebears E/BufferQueueProducer: [SurfaceTexture-0-15837-11] queueBuffer: BufferQueue has been abandoned\n10-08 15:08:05.028 15837-6568/com.fxtv.threebears E/Surface: queueBuffer: error queuing buffer to SurfaceTexture, -19\n10-08 15:08:05.028 15837-6568/com.fxtv.threebears E/ACodec: queueBuffer failed in onOutputBufferDrained: -19\n10-08 15:08:05.028 15837-6568/com.fxtv.threebears E/ACodec: signalError(omxError 0x80001001, internalError -19)\n10-08 15:08:05.028 15837-6567/com.fxtv.threebears E/MediaCodec: Codec reported err 0xffffffed, actionCode 0, while in state 6\n10-08 15:08:05.036 15837-6529/com.fxtv.threebears E/ExoPlayerImplInternal: Internal runtime error.\n                                                                           java.lang.IllegalStateException\n                                                                               at android.media.MediaCodec.native_dequeueInputBuffer(Native Method)\n                                                                               at android.media.MediaCodec.dequeueInputBuffer(MediaCodec.java:2505)\n                                                                               at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.feedInputBuffer(MediaCodecRenderer.java:536)\n                                                                               at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.render(MediaCodecRenderer.java:478)\n                                                                               at com.google.android.exoplayer2.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:431)\n                                                                               at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:265)\n                                                                               at android.os.Handler.dispatchMessage(Handler.java:98)\n                                                                               at android.os.Looper.loop(Looper.java:154)\n                                                                               at android.os.HandlerThread.run(HandlerThread.java:61)\n                                                                               at com.google.android.exoplayer2.util.PriorityHandlerThread.run(PriorityHandlerThread.java:40)\n10-08 15:08:05.066 15837-6568/com.fxtv.threebears E/Surface: getSlotFromBufferLocked: unknown buffer: 0xc40db3a0\n10-08 15:08:05.066 15837-6568/com.fxtv.threebears W/ACodec: [OMX.qcom.video.decoder.avc] can not return buffer 38 to native window\n10-08 15:08:05.067 15837-6568/com.fxtv.threebears E/Surface: getSlotFromBufferLocked: unknown buffer: 0xc40daec0\n10-08 15:08:05.067 15837-6568/com.fxtv.threebears W/ACodec: [OMX.qcom.video.decoder.avc] can not return buffer 37 to native window\n10-08 15:08:05.067 15837-6568/com.fxtv.threebears E/Surface: getSlotFromBufferLocked: unknown buffer: 0xc40daf20\n10-08 15:08:05.067 15837-6568/com.fxtv.threebears W/ACodec: [OMX.qcom.video.decoder.avc] can not return buffer 36 to native window\n10-08 15:08:05.068 15837-6568/com.fxtv.threebears E/Surface: getSlotFromBufferLocked: unknown buffer: 0xc40da440\n10-08 15:08:05.068 15837-6568/com.fxtv.threebears W/ACodec: [OMX.qcom.video.decoder.avc] can not return buffer 35 to native window\n10-08 15:08:05.069 15837-6568/com.fxtv.threebears E/Surface: getSlotFromBufferLocked: unknown buffer: 0xc40db520\n10-08 15:08:05.069 15837-6568/com.fxtv.threebears W/ACodec: [OMX.qcom.video.decoder.avc] can not return buffer 32 to native window\n10-08 15:08:05.069 15837-6568/com.fxtv.threebears E/Surface: getSlotFromBufferLocked: unknown buffer: 0xc40db640\n10-08 15:08:05.069 15837-6568/com.fxtv.threebears W/ACodec: [OMX.qcom.video.decoder.avc] can not return buffer 31 to native window\n10-08 15:08:05.082 15837-15837/com.fxtv.threebears D/fxtv_MeasureHelper: doMeasure,default width size = 2560\n10-08 15:08:05.082 15837-15837/com.fxtv.threebears D/fxtv_MeasureHelper: doMeasure,default height size = 1440\n10-08 15:08:05.083 15837-15837/com.fxtv.threebears D/fxtv_MeasureHelper: doMeasure,result w=2560,h=1440\n10-08 15:08:05.084 15837-15837/com.fxtv.threebears D/fxtv_MeasureHelper: doMeasure,default width size = 2560\n10-08 15:08:05.085 15837-15837/com.fxtv.threebears D/fxtv_MeasureHelper: doMeasure,default height size = 1440\n10-08 15:08:05.085 15837-15837/com.fxtv.threebears D/fxtv_MeasureHelper: doMeasure,result w=2560,h=1440\n10-08 15:08:05.087 15837-6529/com.fxtv.threebears E/ExoPlayerImplInternal: Stop failed.\n                                                                           java.lang.IllegalStateException\n                                                                               at android.media.MediaCodec.native_stop(Native Method)\n                                                                               at android.media.MediaCodec.stop(MediaCodec.java:2005)\n                                                                               at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.releaseCodec(MediaCodecRenderer.java:441)\n                                                                               at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.onDisabled(MediaCodecRenderer.java:396)\n                                                                               at com.google.android.exoplayer2.video.MediaCodecVideoRenderer.onDisabled(MediaCodecVideoRenderer.java:275)\n                                                                               at com.google.android.exoplayer2.BaseRenderer.disable(BaseRenderer.java:136)\n                                                                               at com.google.android.exoplayer2.ExoPlayerImplInternal.resetInternal(ExoPlayerImplInternal.java:624)\n                                                                               at com.google.android.exoplayer2.ExoPlayerImplInternal.stopInternal(ExoPlayerImplInternal.java:600)\n                                                                               at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:317)\n                                                                               at android.os.Handler.dispatchMessage(Handler.java:98)\n                                                                               at android.os.Looper.loop(Looper.java:154)\n                                                                               at android.os.HandlerThread.run(HandlerThread.java:61)\n                                                                               at com.google.android.exoplayer2.util.PriorityHandlerThread.run(PriorityHandlerThread.java:40)\n\n```\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1915/comments",
    "author": "hardcattle",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-10-09T15:50:01Z",
        "body": "The logging is indicative of you not clearing the old `Surface` from the player when it's destroyed. It looks like an application error, in that you're most likely failing to do this.\n"
      },
      {
        "user": "hardcattle",
        "created_at": "2016-10-10T03:06:23Z",
        "body": "Thanks! I forget call the method of clearVideoSurface when it's destroyed.\n"
      }
    ]
  },
  {
    "number": 1892,
    "title": "Calculating size of SurfaceView",
    "created_at": "2016-10-04T16:15:29Z",
    "closed_at": "2016-10-04T18:55:37Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1892",
    "body": "Hello all, I am trying to add ExoPlayer 2.0.1 instead of MediaPlayer. With MediaPlayer in the onPrepared() method I use getVideoWidth() and getVideoHeight() to get width and height of video to calculate size of SurfaceView with correct aspect ratio. With ExoPlayer 2.0.1 library I am creating intance of SimpleExoPlayer:\n\n```\n            Handler mainHandler = new Handler();\n            BandwidthMeter bandwidthMeter = new DefaultBandwidthMeter();\n            TrackSelection.Factory videoTrackSelectionFactory =\n                    new AdaptiveVideoTrackSelection.Factory(bandwidthMeter);\n            TrackSelector trackSelector =\n                    new DefaultTrackSelector(mainHandler, videoTrackSelectionFactory);\n            LoadControl loadControl = new DefaultLoadControl();\n            exoPlayer = ExoPlayerFactory.newSimpleInstance(context, trackSelector, loadControl);\n            //simpleExoPlayerView.setPlayer(exoPlayer);\n            exoPlayer.setVideoSurfaceHolder(videoHolder);\n            exoPlayer.addListener(this);\n```\n\nI suppose I need to use this event to get width and height, but this event is not fired, why and what should I use? onPlayerStateChanged event is working.\n\n```\n    @Override\n    public void onVideoSizeChanged(int width, int height, int unappliedRotationDegrees,\n                                   float pixelWidthAspectRatio) {\n        appendLog(\"onVideoSizeChanged: \" +  String.valueOf(width) + \", \" + String.valueOf(height) + \", \" + String.valueOf(pixelWidthAspectRatio));\n    }\n```\n\nTried it on Android 6 on Sony Z3 Compact, LG Spirit.\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1892/comments",
    "author": "AntonAndev",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-10-04T18:50:20Z",
        "body": "Where in your code are you registering the listener? There should be a call to `SimpleExoPlayer.setVideoListener` somewhere?\n"
      },
      {
        "user": "AntonAndev",
        "created_at": "2016-10-04T18:55:32Z",
        "body": "oh yes, added it, now works, I was thinking addListener does it, thank you.\n"
      }
    ]
  },
  {
    "number": 1886,
    "title": "Keep buffer on SeekTo() or Playback from current position",
    "created_at": "2016-10-03T16:55:42Z",
    "closed_at": "2016-11-06T16:58:57Z",
    "labels": [
      "question",
      "need more info"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1886",
    "body": "I am trying to Playback few seconds from current position using 'Seekbar' touch, It cleared buffer data and start rebuffer from the current postion.\nSuppose user have buffered 80% and My video's current playing position at 40%. If I play back at 30% position by 'Seekbar' touch. It start buffering and playing from 30% even if the already buffered 80% of data.\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1886/comments",
    "author": "sonikasoni",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-10-03T22:33:39Z",
        "body": "It's very unclear what the question is here. Please clarify.\n"
      }
    ]
  },
  {
    "number": 1881,
    "title": "Sony Bravia 4k TV(5.1.1) Wrong Resolution Displayed when using DefaultHlsTrackSelector",
    "created_at": "2016-09-30T19:15:47Z",
    "closed_at": "2017-01-13T17:14:33Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1881",
    "body": "We have an HLS playlist with up to 720p formats.  When using the DefaultHlsTrackSelector, I can see that it ramps up as expected from a low resolution to 720p.  I can see this by stepping through the selection process(VideoFormatSelectorUtil) and also in onDownstreamFormatChanged.  However, the TextureView is displaying a much lower resolution and looks like it's 240p or something very low.  \n\nIf we use a custom HlsTrackSelector that selects only the 720p bitrate, the video displays as expected on the TextureView.\n\nOur HLS Stream is not the problem as the stream displays correctly on the Demo app.  And the BipBop Apple stream exhibits the same \"low-res\" problem when we load it in our app.\n\nAny ideas where I should look or what might be the problem here?   We don't see this problem on FireTV's, FireSticks, NexusPlayer, Shield TV or any Mobile devices which all share the same player code.  \n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1881/comments",
    "author": "JonWatson",
    "comments": [
      {
        "user": "AquilesCanta",
        "created_at": "2016-09-30T19:52:44Z",
        "body": "What are the chances of moving to version 2, where DefaultHlsTrackSelector does not exist? We are backporting bugfixes to v1. This is going to get more attention if you manage to reproduce it in v2. Please, give it a try and let me know.\n"
      },
      {
        "user": "JonWatson",
        "created_at": "2016-09-30T22:07:49Z",
        "body": "Seems like this is related to TextureView.  I switched to SurfaceView and the problem went away.  Unfortunately, that's not a solution for us.\n"
      },
      {
        "user": "ojw28",
        "created_at": "2016-10-03T12:04:56Z",
        "body": "I'm unsure about this (it sounds pretty strange). Why is SurfaceView not a solution for you? It generally gives better performance and smoother frame release.\n"
      },
      {
        "user": "AquilesCanta",
        "created_at": "2016-10-18T13:56:15Z",
        "body": "Any news about this? I cannot reproduce on a Sony Bravia TV.\n"
      },
      {
        "user": "ojw28",
        "created_at": "2017-01-13T17:14:42Z",
        "body": "Closing due to inactivity."
      }
    ]
  },
  {
    "number": 1880,
    "title": "Exoplayer 2 video aspect ratio question",
    "created_at": "2016-09-30T17:21:37Z",
    "closed_at": "2016-10-03T13:39:58Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1880",
    "body": "Hello. Trying to remake my PlayerActvity for the 2nd version of ExoPlayer.\nI've run into some problem about aspect ratio.\n\nIn previous version I used:\n\n```\n//    @Override\n//    public void onVideoSizeChanged(int width, int height, int unappliedRotationDegrees, float pixelWidthAspectRatio) {\n//        shutterView.setVisibility(View.GONE);\n//        videoFrame.setAspectRatio(\n//                height == 0 ? 1 : (width * pixelWidthAspectRatio) / height);\n//    }\n```\n\nfrom Demo app.\n\nIn 2nd version demo app there is no such method. And in result video 3:4 is stretched horizontally to 16:10 phone width.\n\nI also should say that I don't use SimpleExoPlayerView in layout because I need my own controls, exactly, one play/pause button.\n\nIn layout I have:\n\n```\n<com.google.android.exoplayer2.ui.AspectRatioFrameLayout android:id=\"@+id/player_view\"\n      android:focusable=\"true\"\n      android:layout_gravity=\"center\"\n      android:layout_width=\"match_parent\"\n      android:layout_height=\"match_parent\">\n\n        <SurfaceView android:id=\"@+id/surface_view\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:layout_gravity=\"center\"/>\n\n        <View android:id=\"@+id/shutter\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:background=\"@android:color/black\"/>\n\n  </com.google.android.exoplayer2.ui.AspectRatioFrameLayout>\n```\n\n(By the way I don't know whether there is need to have a shutter, don't know what it is.)\n\nPlease, help me to keep aspect ratio corresponding to video aspect.\n\nMaybe I should implement VideoRendererEventListener and it's method onVideoSizeChanged?\nI read here that AspectRatioFrameLayout should keep ratio itself.\n\nThank you.\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1880/comments",
    "author": "dreich",
    "comments": [
      {
        "user": "eneim",
        "created_at": "2016-10-03T13:15:22Z",
        "body": "Why don't you **_learn**_ how they implement the SimpleExoPlayerView and write your own?\n"
      },
      {
        "user": "ojw28",
        "created_at": "2016-10-03T13:39:58Z",
        "body": "Yeah. If you're going to implement your own solution, it seems reasonable that you should be able to start with `SimpleExoPlayerView` and modify it to your needs (or understand how it works and do the same thing).\n\nThe shutter is a black view that's made visible over the surface prior to anything having been drawn into it. It can help avoid rendering artifacts prior to the first frame being drawn.\n"
      }
    ]
  },
  {
    "number": 1877,
    "title": "addListener to Service class",
    "created_at": "2016-09-30T07:53:27Z",
    "closed_at": "2016-09-30T09:47:39Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1877",
    "body": "Hi all,\n\nI'm trying to implement a Service that runs in the background and log Video and Audio events. To do that I implements `AudioRendererEventListener` and `VideoRendererEventListener` in my Service class. Now I suppose I should associate this listeners to the service. How can I do that to make it work?\n\nThank you in advance.\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1877/comments",
    "author": "beakman",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-09-30T09:47:39Z",
        "body": "This sounds like a general programming question, not an ExoPlayer issue. Please ask such questions somewhere like stack overflow. Thanks!\n"
      }
    ]
  },
  {
    "number": 1871,
    "title": "Gradle exoplayer 2",
    "created_at": "2016-09-28T09:42:00Z",
    "closed_at": "2016-09-28T14:24:56Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1871",
    "body": "Sorry migth be a dummy question but what the compile line to add to gradle to update to 2.0.0, I've tried :\n\n`compile 'com.google.android.exoplayer:exoplayer:r2.0.0'`\n\n`compile 'com.google.android.exoplayer2:exoplayer:r2.0.0'`\n\nbut none makes gradle happy,\n\nRegards,\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1871/comments",
    "author": "grosalex",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-09-28T14:24:55Z",
        "body": "The first of those is correct, and works fine for me. Note that you need\n\n```\nrepositories {\n  jcenter()\n}\n```\n\nsomewhere in your gradle file(s) too.\n"
      },
      {
        "user": "ojw28",
        "created_at": "2016-09-28T14:26:31Z",
        "body": "NB - Updated response above to say jcenter rather than mavenCentral.\n"
      }
    ]
  },
  {
    "number": 1866,
    "title": "Setting Dash clock sync endpoint",
    "created_at": "2016-09-27T20:59:10Z",
    "closed_at": "2016-09-28T08:49:47Z",
    "labels": [
      "question",
      "wont fix: infeasible"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1866",
    "body": "Hi, I'm looking for any way to setup the Dash UTCTiming endpoint programatically (right now FFMPEG doesn't seem to support setting it in the manifest when using ISO Dash). Is that available with ExoPlayer2?\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1866/comments",
    "author": "aletorrado",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-09-28T08:49:47Z",
        "body": "This is not supported. I would have thought that if FFMPEG doesn't support adding UtcTiming elements, it probably doesn't support generating manifests that are formatted in such a way so as to require their presence. It wouldn't really make sense to do one without the other.\n\nIt sounds like you should be filing a feature request on FFMPEG in any case, or else manipulating the output of FFMPEG to manually insert the UtcTiming element yourself.\n"
      }
    ]
  },
  {
    "number": 1862,
    "title": "IllegalStateException when jump to the third party sharing module",
    "created_at": "2016-09-26T03:27:36Z",
    "closed_at": "2016-10-09T16:12:51Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1862",
    "body": "It occurs when I play multiple videos and want to share these videos via a third party social app(like facebook), then the activity is moved to background,  I get these logs. And when the activity is moved to foreground, these videos can not be played any more. Maybe you guys should check it.\n\n```\n09-26 11:28:39.687 32156-16175/com.aube.phone E/Surface: queueBuffer: error queuing buffer to SurfaceTexture, -19\n09-26 11:28:39.687 32156-16175/com.aube.phone E/ACodec: signalError(omxError 0x80001001, internalError -19)\n09-26 11:28:39.687 32156-16173/com.aube.phone E/MediaCodec: Codec reported err 0xffffffed, actionCode 0, while in state 6\n09-26 11:28:39.687 32156-15958/com.aube.phone E/ExoPlayerImplInternal: Internal runtime error.\n                                                                       java.lang.IllegalStateException\n                                                                           at android.media.MediaCodec.native_dequeueInputBuffer(Native Method)\n                                                                           at android.media.MediaCodec.dequeueInputBuffer(MediaCodec.java:986)\n                                                                           at com.google.android.exoplayer.MediaCodecTrackRenderer.feedInputBuffer(MediaCodecTrackRenderer.java:591)\n                                                                           at com.google.android.exoplayer.MediaCodecTrackRenderer.doSomeWork(MediaCodecTrackRenderer.java:529)\n                                                                           at com.google.android.exoplayer.SampleSourceTrackRenderer.doSomeWork(SampleSourceTrackRenderer.java:128)\n                                                                           at com.google.android.exoplayer.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:432)\n                                                                           at com.google.android.exoplayer.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:211)\n                                                                           at android.os.Handler.dispatchMessage(Handler.java:98)\n                                                                           at android.os.Looper.loop(Looper.java:159)\n                                                                           at android.os.HandlerThread.run(HandlerThread.java:61)\n                                                                           at com.google.android.exoplayer.util.PriorityHandlerThread.run(PriorityHandlerThread.java:40)\n09-26 11:28:39.707 32156-15952/com.aube.phone E/ExoPlayerImplInternal: Stop failed.\n                                                                       java.lang.IllegalStateException\n                                                                           at android.media.MediaCodec.native_stop(Native Method)\n                                                                           at android.media.MediaCodec.stop(MediaCodec.java:631)\n                                                                           at com.google.android.exoplayer.MediaCodecTrackRenderer.releaseCodec(MediaCodecTrackRenderer.java:485)\n                                                                           at com.google.android.exoplayer.MediaCodecTrackRenderer.onDisabled(MediaCodecTrackRenderer.java:447)\n                                                                           at com.google.android.exoplayer.MediaCodecVideoTrackRenderer.onDisabled(MediaCodecVideoTrackRenderer.java:289)\n                                                                           at com.google.android.exoplayer.TrackRenderer.disable(TrackRenderer.java:231)\n                                                                           at com.google.android.exoplayer.ExoPlayerImplInternal.ensureDisabled(ExoPlayerImplInternal.java:659)\n                                                                           at com.google.android.exoplayer.ExoPlayerImplInternal.stopAndDisable(ExoPlayerImplInternal.java:560)\n                                                                           at com.google.android.exoplayer.ExoPlayerImplInternal.resetInternal(ExoPlayerImplInternal.java:549)\n                                                                           at com.google.android.exoplayer.ExoPlayerImplInternal.stopInternal(ExoPlayerImplInternal.java:526)\n                                                                           at com.google.android.exoplayer.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:245)\n                                                                           at android.os.Handler.dispatchMessage(Handler.java:98)\n                                                                           at android.os.Looper.loop(Looper.java:159)\n                                                                           at android.os.HandlerThread.run(HandlerThread.java:61)\n                                                                           at com.google.android.exoplayer.util.PriorityHandlerThread.run(PriorityHandlerThread.java:40)\n```\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1862/comments",
    "author": "huyn",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-09-26T09:30:22Z",
        "body": "You're probably not detaching the `Surface` that the player is rendering to before it's destroyed. This results in the player trying to draw into a surface that's no longer valid, which may result in failure.\n\nPlease ensure you're listening to `surfaceDestroyed` and clearing the surface from the player in a blocking manner. You can refer to the V1 demo app for an example of this. In V2 `SimpleExoPlayer` manages this task for you, which makes things easier.\n"
      }
    ]
  },
  {
    "number": 1856,
    "title": "After AudioTrack.pause(), getCurrentPosition() continues to progress",
    "created_at": "2016-09-24T18:08:17Z",
    "closed_at": "2016-11-25T21:04:59Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1856",
    "body": "I have a requirement that I know the exact position of playback after the content has been \"paused\" - aka after setPlayWhenReady(false).\n\nI have tested this both with ExoPlayer1 and ExoPlayer2, but I have more logs and data for v1, so the data throughout is for v1, although the same exact behavior reproduces under v2.\n\nMy current scenario is that with exo playing, I call setPlayWhenReady(false). I need to know exactly when playback has actually been paused, and what the position of the player is at that point. So I implement an ExoPlayer.Listener that listens for onPlayWhenReadyCommitted() and checks if what was committed was a playWhenRead=true or false. \n\nIf I detect that playWhenReady = false was committed, I then query getCurrentPosition() on ExoPlayer. My assumption has been that at this point, playback has actually stopped, and getCurrentPosition() will return to me the position at which playback had stopped.\n\nHowever, it looks like this is not the case. Even though playWhenReady had been committed and pause() had been called on the AudioTrack, the next pumping of doSomeWork() by ExoPlayer will result in picking up a new position from the underlying AudioTrack - the AudioTrack that had previously been paused.\n\nFrom looking at logs and the behavior, it looks like AudioTrack requires one doSomeWork() iteration after calling pause() for it to report back the position that it had last flushed out from its buffers and has actually paused at. However, since this does require at least one additional doSomeWork() call AFTER playWhenReadyCommitted, this means there's no ExoPlayer API that exposes to the application when playback has actually paused and what the position is at that time.\n\nOf course we can talk about workarounds for this, like in our onPlayWhenReadyCommitted() callback, waiting for one second, which is the doSomeWork() interval in the playWhenReady = false state. But this has the potential to introduce noticeable application latency to the user if we have to block future user interactions on waiting for this second for the playback position to land on its final value. It also makes the assumption (which may or may not be valid - I don't know the specifics of of AudioTrack work) that we only are required to wait for one doSomeWork pump of AudioTrack, not potentially more than one.\n\nHere are some logs that demonstrate the problem (the logs of SamplePlayer logging the position were added for debugging purposes and are done on a background thread):\n\n09-17 14:01:45.050 14007 14032 I SamplePlayer: pause\n09-17 14:01:45.050 14007 14033 I AudioTrack: calling pause\n09-17 14:01:45.050 14007 14033 D AudioTrack: currentPositionUs = 45327534\n09-17 14:01:45.051 14007 14032 D SamplePlayer: playWhenReadyCommitted\n09-17 14:01:45.051 14007 14032 D SamplePlayer: triggerStateCallback for playbackState [4]; playWhenReady [false]\n09-17 14:01:45.051 14007 14032 D SamplePlayer: #0: playback paused. at position 45327\n09-17 14:01:45.055 14007 14033 D AudioTrack: currentPositionUs = 45327534\n09-17 14:01:45.055 14007 14033 D OMX.vendor.aac.decoder-MediaCodecAudioTrackRenderer: processOutputBuffer: positionUs = 45327534 elapsedRealtimeUs =  7269340000 bufferInfo.flags = 0 bufferIndex = 0 shouldSkip = false presentationTimeUs = 45975334\n09-17 14:01:45.055 14007 14033 D AudioTrack: handleBuffer : offset = 0 size = 4096 presentationTimeUs = 45975334\n09-17 14:01:45.102 14007 14032 D SamplePlayer: #1: playback paused. at position 45327\n09-17 14:01:45.153 14007 14032 D SamplePlayer: #2: playback paused. at position 45327\n09-17 14:01:45.204 14007 14032 D SamplePlayer: #3: playback paused. at position 45327\n09-17 14:01:45.256 14007 14032 D SamplePlayer: #4: playback paused. at position 45327\n09-17 14:01:45.307 14007 14032 D SamplePlayer: #5: playback paused. at position 45327\n09-17 14:01:45.358 14007 14032 D SamplePlayer: #6: playback paused. at position 45327\n09-17 14:01:45.409 14007 14032 D SamplePlayer: #7: playback paused. at position 45327\n09-17 14:01:45.460 14007 14032 D SamplePlayer: #8: playback paused. at position 45327\n09-17 14:01:45.512 14007 14032 D SamplePlayer: #9: playback paused. at position 45327\n09-17 14:01:45.564 14007 14032 D SamplePlayer: #10: playback paused. at position 45327\n09-17 14:01:45.615 14007 14032 D SamplePlayer: #11: playback paused. at position 45327\n09-17 14:01:45.666 14007 14032 D SamplePlayer: #12: playback paused. at position 45327\n09-17 14:01:45.718 14007 14032 D SamplePlayer: #13: playback paused. at position 45327\n09-17 14:01:45.769 14007 14032 D SamplePlayer: #14: playback paused. at position 45327\n09-17 14:01:45.820 14007 14032 D SamplePlayer: #15: playback paused. at position 45327\n09-17 14:01:45.871 14007 14032 D SamplePlayer: #16: playback paused. at position 45327\n09-17 14:01:45.924 14007 14032 D SamplePlayer: #17: playback paused. at position 45327\n09-17 14:01:45.975 14007 14032 D SamplePlayer: #18: playback paused. at position 45327\n09-17 14:01:46.026 14007 14032 D SamplePlayer: #19: playback paused. at position 45327\n09-17 14:01:46.056 14007 14033 D AudioTrack: currentPositionUs = 45359530\n09-17 14:01:46.057 14007 14033 D OMX.vendor.aac.decoder-MediaCodecAudioTrackRenderer: processOutputBuffer: positionUs = 45359530 elapsedRealtimeUs =  7270342000 bufferInfo.flags = 0 bufferIndex = 0 shouldSkip = false presentationTimeUs = 45975334\n09-17 14:01:46.057 14007 14033 D AudioTrack: handleBuffer : offset = 0 size = 4096 presentationTimeUs = 45975334\n09-17 14:01:46.058 14007 14033 D OMX.vendor.aac.decoder-MediaCodecAudioTrackRenderer: processOutputBuffer: positionUs = 45359530 elapsedRealtimeUs =  7270342000 bufferInfo.flags = 0 bufferIndex = 1 shouldSkip = false presentationTimeUs = 45998556\n09-17 14:01:46.058 14007 14033 D AudioTrack: handleBuffer : offset = 0 size = 4096 presentationTimeUs = 45998556\n09-17 14:01:46.077 14007 14032 D SamplePlayer: #20: playback paused. at position 45359\n09-17 14:01:46.129 14007 14032 D SamplePlayer: #21: playback paused. at position 45359\n\nI have reproduced this on multiple devices including a Nexus5 running 6.0.1\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1856/comments",
    "author": "jpearl",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-09-26T10:05:11Z",
        "body": "It's important to understand what you mean by \"exact position\". Some people understand this as the exact timestamp of the video frame that's currently displayed, however note that in general positions reported during playback are at a finer granularity than video frame and are based on audio time.\n\nPlease could you clarify exactly what your use case is? Thanks.\n"
      },
      {
        "user": "jpearl",
        "created_at": "2016-09-26T13:02:48Z",
        "body": "Absolutely. For my purposes, I care about the position value reported via ExoPlayer's getCurrentPosition() API. \n\nFor (unfortunate) reasons in our application layer dependency, when the user pauses, we have to report up the position that the user paused at. When the user resumes, our application layer dependency (so outside of our control), doesn't tell us strictly to \"resume playback\", but specifically tells us to \"start playback from position X\".\n\nSo in order to achieve a \"resume\", we're in essence told to play from the position we reported up after the \"pause\" (implemented as getCurrentPosition() in onPlayWhenReadyCommitted()).\n\nThe behavior above is causing problems on non-seekable content. If we're told to play from position X where X = getCurrentPosition() - 32ms (from the example above), we'll do a strict equality check on the current value of getCurrentPosition(), which will fail, we'll call seekTo(X), and because the content is non-seekable, it resets the position to 0.\n\nIn the logs above, the \"SamplePlayer\"/\"at position\" logs are logging the value of exo.getCurrentPosition()\n\nHope this clarifies.\n\nThanks\n"
      },
      {
        "user": "ojw28",
        "created_at": "2016-09-26T13:10:48Z",
        "body": "Got it, but note that even if we fixed things to behave in the way you expect, I'm not sure we'd want to guarantee that the seek call wouldn't re-buffer all of the currently buffered media. Why don't you just add a check that omits the call to seekTo if X is within ~100ms or so of the current position?\n"
      },
      {
        "user": "jpearl",
        "created_at": "2016-09-26T21:37:21Z",
        "body": "Sorry I should have mentioned - yes, we only conditionally call seek(), for the reason you mentioned of any overhead of rebuffering.\n\nAnd yes, adding a \"fudge factor\"/threshold in that conditional was the work around we were considering.\n\nin essence, changing:\n\n```\npublic void play(ExoPlayer exo, long position) {\n    if (exo.getPostition() != position) {\n        exo.seeTo(position);\n    }\n    exo.setPlayWhenReady(true);\n}\n```\n\nto:\n\n```\npublic void play(ExoPlayer exo, long position) {\n    if (Math.abs(exo.getPostition() - position) > SEEKING_THRESHOLD ) {\n        exo.seeTo(position);\n    }\n    exo.setPlayWhenReady(true);\n}\n```\n"
      },
      {
        "user": "ojw28",
        "created_at": "2016-09-27T11:27:54Z",
        "body": "I think you should just go with your fudge/workaround, and longer term try and resolve the constraints that are requiring you to seek instead of resume in the first place. In V2, we don't even have `onPlayWhenReadyCommitted` (although it's possible that it'll make a comeback).\n"
      },
      {
        "user": "peddisri",
        "created_at": "2016-09-27T15:37:39Z",
        "body": "This issue happens because Android AOSP AudioTrack's Pause API handles the command asynchronously. It posts a command to pause, and returns before the playback is actually paused. So, between issuing the command and actually pausing, its possible that some amount of audio data (may be couple of frames) are played out. This internally updates the playbackheadposition. So, before and after pause, there can be some slight increment in the current position.\n"
      },
      {
        "user": "ojw28",
        "created_at": "2016-11-25T21:04:59Z",
        "body": "Closing this as working as intended. The behaviour is only problematic for the original poster due to what sound like unfortunate design decisions. A fudge/workaround is known, and in the medium to long term these decisions can probably be undone ;)."
      }
    ]
  },
  {
    "number": 1848,
    "title": "How to change the rule with InitializationTrackSelection?",
    "created_at": "2016-09-22T17:20:46Z",
    "closed_at": "2017-03-16T11:42:23Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1848",
    "body": "In v2, there is an `InitializationTrackSelection` in `HlsChunkSource`, which will choose the first track in group.\n\n``` java\n   public InitializationTrackSelection(TrackGroup group, int[] tracks) {\n      super(group, tracks);\n      selectedIndex = indexOf(group.getFormat(0));\n    }\n```\n\nIf I want to choose the middle of the track with the decreasing bandwidth order in the beginning:\n\n``` java\n    public InitializationTrackSelection(TrackGroup group, int[] tracks) {\n      super(group, tracks);\n      selectedIndex = length / 2;\n    }\n```\n\nHow should I do in the preferred way?\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1848/comments",
    "author": "b95505017",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-03-16T11:42:23Z",
        "body": "HLS playbacks using ExoPlayer are no longer constrained to start with the track given by `InitializationTrackSelection` (this is true at least for the `dev-v2` branch and for all future releases (i.e. 2.3.0 onward). Playback will start using whatever track is selected by the `TrackSelection`, in line with behaviour for DASH and SmoothStreaming."
      }
    ]
  },
  {
    "number": 1835,
    "title": "Issues playing a local URI video recorded on Nexus 5X, Android 7.0",
    "created_at": "2016-09-19T11:52:08Z",
    "closed_at": "2016-09-22T10:20:50Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1835",
    "body": "This is a very strange issue as it only appears on Nexus 5X running Android 7.0. My best guess is it is related to having several `SurfaceView`s initialised at the same time.\n\nIn an essence, my app is a Camera app and I'm using ExoPlayer to preview videos after recording. After recording the video, I replace the video capture fragment (which contains the camera preview surface) with the video preview fragment. My video player fragment will init an instance of ExoPlayer and will attempt to start the playback using a local `ContentProvider` `Uri` object and `ExtractorRendererBuilder`. The video player fragment will also have its own SurfaceView to work with. Like I said, works fine on all the phones I've tested with apart from N5X on 7. This is what I get out of ordinary on that device:\n\n```\n09-19 10:52:49.053 2193-3352/W/VideoCapabilities: Unrecognized profile 2130706433 for video/avc\n09-19 10:52:49.091 2193-3352/I/VideoCapabilities: Unsupported profile 4 for video/mp4v-es\n```\n\nI've done a significant ammount of testing and noticed that what I see on my surface instead of the video playback, is the last frame of the Camera capture surface. I've checked my code and because my Camera surface is not created as part of the fragment lifecycle, it's also not destroyed at the point when the preview playback surface is created. So I end up with two `SurfaceView`s active and available. I've also checked that the correct (preview) surface is used when I start the playback in the preview fragment, and it is. Also the preview fragment is layered on top of the camera capture fragment. However I still see the last camera frame rather than the video playback. Just to triple check, I've removed all views from my camera preview container (to trigger distruction of the surface) before initialising my video preview fragment, and it finally worked as expected, as in the video was played correctly.\n\nI don't mind removing the views from my camera capture container, probably a good thing anyway, however I'm confused to why this behaviour is happening and why is it only on that specific device or OS level or both.\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1835/comments",
    "author": "vkislicins",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-09-22T10:20:50Z",
        "body": "I'm don't think we have a good answer to this question/problem. It sounds very application specific, to the extent that it may or may not be an issue with application code (although if it is, it's curious that the resulting behavior appears to be device/os specific).\n\nIn any case, we can't prioritise investigating the issue vs other stuff, so closing. It sounds like you have a solution to the problem. You could also investigate TextureView, which may behave better for your use case.\n"
      }
    ]
  },
  {
    "number": 1830,
    "title": "SuppressLint(\"HandlerLeak\")",
    "created_at": "2016-09-16T14:08:56Z",
    "closed_at": "2016-09-16T14:30:04Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1830",
    "body": "Dear colleagues,\n\nWhile ExoPlayer library is providing to us (clients) excellent ability to stream different media contents, I have to notice that there are a lot of inner non static classes being used, some of them has annotation similar to:\n`\nSuppressLint(\"HandlerLeak\")\n`\nWhat was a reason to suppress such warnings and use inner non static classes, opening a hole for the references leaks between inner and it's enclosing classes?\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1830/comments",
    "author": "ChernyshovYuriy",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-09-16T14:30:04Z",
        "body": "A lot of lint warnings are warnings rather than errors because it's not possible to identify the case they're warning about in a way that avoids false positives. If there were a way to identify this kind of leak without false positives then it would likely be made an error rather than a warning.\n\nIn the cases you mention we do not believe there are unintentional leaks. The explicit suppression of the warning via an annotation is an indication that someone thought about it and decided this to be the case. If you know of specific cases where you believe we're preventing objects from being garbage collected that should be eligible for collection, please file an issue including details of the specifics. Thanks!\n"
      }
    ]
  },
  {
    "number": 1819,
    "title": "Use SSLSocketFactory with DefaultHttpDataSource",
    "created_at": "2016-09-14T12:14:39Z",
    "closed_at": "2016-09-14T19:43:13Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1819",
    "body": "Hi Team,\n\nis there any way to set SSLSocketFactory  in DefaultHttpDataSource.\n\nWe want to use TrustManager - \nhttpsURLConnection.setSSLSocketFactory(sslSocketFactory);\n\nThanks in advance.\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1819/comments",
    "author": "rsatandroid",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-09-14T19:43:13Z",
        "body": "If you're trying to set it globally then you might have some luck calling the static method `HttpsURLConnection.setDefaultSSLSocketFactory()` prior to use of ExoPlayer? Calling the non-static variant is not something we expose, but it would be pretty straightforward for you to make your own `DataSource` implementation that does support this use case.\n"
      },
      {
        "user": "rsatandroid",
        "created_at": "2016-09-15T07:01:11Z",
        "body": "Thank you for your input and such a great library with wide range of capabilities.\n\nAs DefaultHttpDataSource uses HttpURLConnection internally so i think setting it on HttpsURLConnection will not help.\nI will go with my own DataSource implementation based on DefaultHttpDataSource.\n"
      }
    ]
  },
  {
    "number": 1806,
    "title": "IllegalStateException playing MP4 and DASH with specific resolution",
    "created_at": "2016-09-07T16:25:11Z",
    "closed_at": "2016-09-09T09:58:57Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1806",
    "body": "I have two instances of Exoplayer, first one plays a MP4 and when it finishes, it starts the second Exoplayer with the DASH content. The problem is that it crashes when the resolution of the MP4 is equal to the first representation of the DASH. In any other case, playback is fine. \nFor example:\nMP4=320x142 and first representation of DASH = 320x142 -> crashes\nMP4=480x270 and first representation of DASH = 320x142 -> works fine\n\nFirst player is using com.google.android.exoplayer.demo.player.ExtractorRendererBuilder and second player com.google.android.exoplayer.demo.player.DashRendererBuilder (from the demo project).\n\nThe process is: Exoplayer with DASH is prepared in order to get the license. If license is fine, it releases the surface, then Exoplayer with MP4 is created and MP4 playback starts. When it finishes, it is released and Exoplayer with DASH gets the surface and it starts the playback. In that moment I get this trace: \n\n```\n09-07 18:00:29.346 26658-28560/com.myapp E/ACodec: signalError(omxError 0x80001001, internalError -62)\n09-07 18:00:29.347 26658-28559/com.myapp E/MediaCodec: Codec reported err 0xffffffc2, actionCode 0, while in state 6\n09-07 18:00:29.352 26658-28560/com.myapp E/Surface: getSlotFromBufferLocked: unknown buffer: 0x8ffc7f50\n09-07 18:00:29.352 26658-28560/com.myapp E/ACodec: queueBuffer failed in onOutputBufferDrained: -22\n09-07 18:00:29.353 26658-28560/com.myapp E/ACodec: signalError(omxError 0x80001001, internalError -22)\n09-07 18:00:29.355 26658-28559/com.myapp E/MediaCodec: Codec reported err 0xffffffea, actionCode 0, while in state 0\n09-07 18:00:29.358 26658-27313/com.myapp E/ExoPlayerImplInternal: Internal runtime error.\n         java.lang.IllegalStateException\n             at android.media.MediaCodec.native_dequeueOutputBuffer(Native Method)\n             at android.media.MediaCodec.dequeueOutputBuffer(MediaCodec.java:2379)\n             at com.google.android.exoplayer.MediaCodecTrackRenderer.drainOutputBuffer(MediaCodecTrackRenderer.java:890)\n             at com.google.android.exoplayer.MediaCodecTrackRenderer.doSomeWork(MediaCodecTrackRenderer.java:512)\n             at com.google.android.exoplayer.SampleSourceTrackRenderer.doSomeWork(SampleSourceTrackRenderer.java:129)\n             at com.google.android.exoplayer.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:434)\n             at com.google.android.exoplayer.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:213)\n             at android.os.Handler.dispatchMessage(Handler.java:98)\n             at android.os.Looper.loop(Looper.java:148)\n             at android.os.HandlerThread.run(HandlerThread.java:61)\n             at com.google.android.exoplayer.util.PriorityHandlerThread.run(PriorityHandlerThread.java:40)\n```\n\nThis is failing only for some devices: i.e Nexus 6. Android version 6.0.1\nIt works on Samsung Galaxy S6. Android version 6.0.1\n\nIs there some problem switching between renderers? Does someone know why with different resolutions it woks fine on any device and with the same resolution it crashes on some devices?\n\nExoplayer version r1.5.9\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1806/comments",
    "author": "mromer",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-09-08T09:07:32Z",
        "body": "It's quite difficult to debug this kind of thing, since it's more likely than not that the issue is somewhere in your code (which we don't have :)). I'm not sure why the resolutions would be relevant I'm afraid.\n\nOne thing that can cause this kind of failure is when two decoders end up having a reference to the Surface at the same time, so you should definitely double check that this isn't the case. You must null out the Surface from one player (or release the player) before passing the Surface to the next player. If you're nulling out the Surface you must do so using a blocking message rather than a non-blocking one to ensure thread safety. Releasing the player is blocking as standard, so that approach would be fine.\n\nAs an aside, playlists in ExoPlayer 2.x will probably help you a lot with this use case.\n"
      },
      {
        "user": "mromer",
        "created_at": "2016-09-09T09:50:54Z",
        "body": "I can't reproduce the issue with the version r1.5.10\nThanks again for your help :)\n"
      }
    ]
  },
  {
    "number": 1795,
    "title": "How can i encapsulation Exoplayer to a View",
    "created_at": "2016-09-02T07:23:03Z",
    "closed_at": "2016-09-02T10:26:17Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1795",
    "body": "I try to encapsulation PlayerActivity to a View，but it is not fluent，can you help me ??\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1795/comments",
    "author": "orbatm",
    "comments": [
      {
        "user": "orbatm",
        "created_at": "2016-09-02T09:21:33Z",
        "body": "i find my problem,...i had put 2 ExoView in my layout ,and it will be unfluent...but why.?!.only one of them is playing..\n"
      },
      {
        "user": "ojw28",
        "created_at": "2016-09-02T10:26:17Z",
        "body": "Closing because question is vague and does not provide sufficient information for us to be able to help.\n"
      }
    ]
  },
  {
    "number": 1780,
    "title": "does the edge case of returning play back state as PREPARING instead of IDLE still hold true in DemoPlayer",
    "created_at": "2016-08-26T04:45:17Z",
    "closed_at": "2016-08-26T11:22:40Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1780",
    "body": "I noticed this edge case while getting play back state in DemoPlayer:\n    int playerState = player.getPlaybackState();\n    if (rendererBuildingState == RENDERER_BUILDING_STATE_BUILT && playerState == STATE_IDLE\n{\n      // This is an edge case where the renderers are built, but are still being passed to the\n      // player's playback thread.\n      return STATE_PREPARING;\n}\nDoes this edge case still hold true?\n\nThere is a case where I would need to call exoplayer.stop() after the renderers are built. Is it safe to set rendererBuildingState to RENDERER_BUILDING_STATE_IDLE so that I would get the correct playback state (ExoPlayer.STATE_IDLE in this case).\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1780/comments",
    "author": "keerthikorrapati",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-08-26T11:22:40Z",
        "body": "The case has gone away in ExoPlayer V2. It still applies as far as I'm aware in V1.\n"
      }
    ]
  },
  {
    "number": 1767,
    "title": "Don't You bother that ExoPlayer instantiates huge part of the extractors during 'sniffing'?",
    "created_at": "2016-08-23T15:04:38Z",
    "closed_at": "2016-08-23T16:13:17Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1767",
    "body": "Don't You bother that ExoPlayer instantiates huge part of the extractors during 'sniffing'?\n\nsniff() isn't a static method. So the player creates an instance of extractor to sniff.\nAnd than creates another one to play.\n\nThat instantiation is being repeated many time in the shot period before start playing. It causes high load on VM, CPU and memory in slow system with limited recources. \n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1767/comments",
    "author": "Avetri",
    "comments": [
      {
        "user": "Avetri",
        "created_at": "2016-08-23T15:09:47Z",
        "body": "UPD: All the extractors:\n\n<pre>\nfor (int i = 0; i < extractors.length; i++) {\n        try {\n          extractors[i] = DEFAULT_EXTRACTOR_CLASSES.get(i).newInstance();\n...\n</pre>\n"
      },
      {
        "user": "ojw28",
        "created_at": "2016-08-23T15:13:54Z",
        "body": "I wouldn't classify 11 as \"many\". Do you have any concrete numbers on what the overhead actually is? I really wouldn't expect it to be significant; there's nothing fundamentally expensive about the extractor classes from an instantiation point of view.\n\nAs an aside, note that you can pass just the extractors that you want to use to the constructor, if you know what type of media you're playing in advance.\n"
      },
      {
        "user": "Avetri",
        "created_at": "2016-08-23T15:40:08Z",
        "body": "Ok, I understand. Thanks.\nBut I still think that static sniff() would be more preferable.\n"
      },
      {
        "user": "ojw28",
        "created_at": "2016-08-23T16:13:17Z",
        "body": "Without numbers there's nothing to justify that claim. I suspect the instantiation overhead is negligible (certainly compared to something like inflating a view hierarchy or instantiating a decoder, both of which I'd expect to be at least an order of magnitude more expensive).\n\nNote also that it's non-trivial to simply make the sniff implementations static. Some of the sniff implementations require large parts of the extractors, so you'd end up making a whole bunch of stuff static (which you'd then end up having to instantiate again inside of a concrete extractor should the sniffing be successful).\n\nClosing for now. Feel free to reopen if you have concrete numbers showing a significant overhead.\n"
      }
    ]
  },
  {
    "number": 1740,
    "title": "Migration from MultiTrackChunkSource? (1.3.3 -> 1.5.9)",
    "created_at": "2016-08-11T15:42:48Z",
    "closed_at": "2016-08-16T22:12:30Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1740",
    "body": "Hello Everyone,\n\nWe've been using the ExoPlayer for over a year for an HLS Audio App but recently we have been having some issues with the playback pausing for no apparent reason. One thing we were looking at was updating to the latest version but then we noticed that MultiTrackChunkSource is gone. We've searched for migration instructions but have so far come up empty. Is there a clear upgrade path so we don't have to re-implement the whole thing from scratch?\n\n@ojw28 I can see that you've been very active on this subject, do you have any advice?\n\nThanks in advance!\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1740/comments",
    "author": "DancinDirk",
    "comments": [
      {
        "user": "AquilesCanta",
        "created_at": "2016-08-12T09:21:27Z",
        "body": "It shouldn't be too complicated moving to 1.5.9(or 1.5.10) if you the DemoApp as guide, I think. The interfaces haven't changed that much. Version 2 would be a different story. What is the complication specifically? HlsRendererBuilder contains most of the details related to HLS.\n"
      },
      {
        "user": "ojw28",
        "created_at": "2016-08-16T22:12:30Z",
        "body": "As per the answer above, it should be fairly straightforward if you look at the difference between the demo app going from the version you're upgrading from to the current version.\n"
      }
    ]
  },
  {
    "number": 1739,
    "title": "Record http stream ",
    "created_at": "2016-08-11T11:42:02Z",
    "closed_at": "2016-08-12T12:51:13Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1739",
    "body": "Hello i want to record http stream. \nAs am able to stream it into Exoplayer, i also want to record this stream into my phone local storage so please help me.\n\nThanks\nAnshuman\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1739/comments",
    "author": "Anshumansharma12",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2016-08-12T12:51:13Z",
        "body": "If this is for caching, please search the existing issues for more information. \n\nOtherwise, this doesn't really relate to ExoPlayer, so it's outside the scope of this issue tracker. I suggest asking on a more general forum like Stack Overflow or similar.\n"
      }
    ]
  },
  {
    "number": 1736,
    "title": "about udpdatasource demo",
    "created_at": "2016-08-11T09:47:27Z",
    "closed_at": "2016-08-16T22:04:33Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1736",
    "body": "Sorry, I'm a newbie for ExoPlayer,I need a demo to test  UDP over mpeg2TS (h264+aac,8M bitrate).\nI don't  know how to use udpdatasource, any one could  provide me a simple demo similar to demo-ext ? thinks.\nAny executable source code or suggestion are  appreciated.\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1736/comments",
    "author": "lcksk",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-08-16T22:04:33Z",
        "body": "Closing since this is neither an issue nor a feature request. Unfortunately we don't have time to answer questions of this type on the issue tracker, sorry.\n"
      }
    ]
  },
  {
    "number": 1735,
    "title": "Deterministic MPEG-DASH Representation Switch",
    "created_at": "2016-08-10T23:27:56Z",
    "closed_at": "2018-02-26T19:01:25Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1735",
    "body": "I've implemented a custom FormatEvaluator that correctly determines which format/representation  should be selected. However, I'd like it to be called more frequently than it is, and ideally, I'd like to signal a format change deterministically (i.e. you can call me, but I'd also like to call you). When a format change is signaled, I'd like it to switch as quickly as possible. By this I mean that--even if it's already buffered a lot of higher quality content--I'd like it to discard all of that content and make the switch.\n\nCan anyone recommend a general strategy to accomplish this with ExoPlayer?\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1735/comments",
    "author": "mikeswanson",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2018-02-26T19:01:25Z",
        "body": "To answer this (very old - sorry) question with respect to ExoPlayer V2:\r\n\r\n* In V2 implementing a custom `TrackSelection` is the mechanism by which you can provide your own adaptive format selection algorithm.\r\n* During loading, `TrackSelector.updateSelectedTrack` is already called at every point where changing the selected format would make any difference during loading. So I'm not sure there's any additional value in the \"I'd also like to call you\" part of this question. Unless of course you'd want a currently ongoing chunk fetch to be a canceled, which is not something we currently support\r\n* When not loading, `TrackSelector.evaluateQueueSize` is called frequently, and provides an opportunity for you to discard from the buffer in order for it to be re-loaded in a different quality. This method will also be called between loads during loading phases."
      }
    ]
  },
  {
    "number": 1711,
    "title": "Mpeg-Dash stream start offset",
    "created_at": "2016-08-02T11:21:01Z",
    "closed_at": "2016-08-02T18:19:22Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1711",
    "body": "Hi,\n\nIs there (r1.5.9) possibility to change start offset in dash live stream?\nVideo which is shown is behind ~40s of current time.\n\nThank you\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1711/comments",
    "author": "brystel",
    "comments": [
      {
        "user": "stelma",
        "created_at": "2016-08-02T13:54:28Z",
        "body": "I think that should be the live edge latency. I guess it should still be in the DashRendererBuilder as final static member.\n"
      },
      {
        "user": "AquilesCanta",
        "created_at": "2016-08-02T18:19:22Z",
        "body": "Yes, sorry I hadn't seen this. As @stelma says, there is a parameter for this in the DashChunkSource constructor. You could try changing the value you are using. You should try posting this kind of questions in a general Q&A site, as the issue tracker is preferably reserved for bug reporting and feature requests.\n"
      }
    ]
  },
  {
    "number": 1689,
    "title": "How to change the style of MediaController?",
    "created_at": "2016-07-21T08:35:55Z",
    "closed_at": "2016-07-21T09:08:25Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1689",
    "body": "How to change the style of MediaController?\nHow to write a custom controller with my own style?\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1689/comments",
    "author": "yumi0629",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-07-21T09:08:25Z",
        "body": "This question does not relate directly to ExoPlayer, since we don't implement player UI at this point in time. Please ask your question somewhere like StackOverflow instead.\n"
      }
    ]
  },
  {
    "number": 1673,
    "title": "MediaCodecAudioTrackRenderer doesn't support AC3 audio codec",
    "created_at": "2016-07-12T08:28:13Z",
    "closed_at": "2016-07-12T08:48:42Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1673",
    "body": "using ExtractorRendererBuilder class as an example any media with audio codec AC3 will throw the STATE_ENDED\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1673/comments",
    "author": "ElioTohm",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2016-07-12T08:47:38Z",
        "body": "If the device has a decoder for AC-3 MediaCodecAudioTrackRenderer will use it, but few devices support this.\n\nMediaCodecAudioTrackRenderer also supports passthrough of AC-3 audio if the device is running Android Lollipop (or later) and is connected to a receiver via HDMI. See also #722.\n"
      }
    ]
  },
  {
    "number": 1670,
    "title": "How to generate a thumbnail?",
    "created_at": "2016-07-11T16:49:42Z",
    "closed_at": "2016-07-12T07:09:51Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1670",
    "body": "ExoPlayer: 1.5.9\n\nAm trying to make a video thumbnail from Android framewoork's ThumbnailUtils.createVideoThumbnail() but it doesn't support mp4v-es2 format. Am using ExoPlayer to show the video so is there an API to generate one? If not how would I go about doing it? I'd like to show multiple clips and I did notice the multiple ExoPlayer instances limitation (4 currently). Could I use one ExoPlayer instance to render all the clip thumbnails?\n\nThanks! \n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1670/comments",
    "author": "Kisty",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2016-07-12T07:09:50Z",
        "body": "For capturing the current frame, see #418.\n\nYou can reuse the player by calling stop, seekTo and prepare, passing renderers reading the new source. Note that there are some caveats to using more than one platform video decoder at a time; see #1286.\n"
      }
    ]
  },
  {
    "number": 1665,
    "title": " How to provide a local Key to HLS for decrypting",
    "created_at": "2016-07-11T03:28:24Z",
    "closed_at": "2016-07-15T15:14:55Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1665",
    "body": "Hi:\n\nMy is developer from china. \nI have searched a list of questions, but did not find what I want.\n\nHow to provide a local Key to HLS for decrypting.\n\nI found HlsChunkSourcel class newEncryptionKeyChunk method provides for decrypting the block, which by default is downloaded from the network key.\n\nI want to use ByteArrayDataSource to provide a local Key, but I found newEncryptionKeyChunk is a private method, I can not override it to provide my key.\n\nHoping to get a reply, thank you\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1665/comments",
    "author": "biezhihua",
    "comments": [
      {
        "user": "biezhihua",
        "created_at": "2016-07-11T03:31:49Z",
        "body": "My English is very bad, please forgive me\n"
      },
      {
        "user": "ojw28",
        "created_at": "2016-07-15T15:14:55Z",
        "body": "This is not something we support, so you'll have to take ExoPlayer as source and modify it to your needs if you want to do this.\n"
      }
    ]
  },
  {
    "number": 1657,
    "title": "Switching streams takes time for short videos (10s) even on good quality network",
    "created_at": "2016-07-07T12:13:44Z",
    "closed_at": "2017-01-30T22:12:03Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1657",
    "body": "Hi,\n\nI have developed an app that records and plays short videos (10 secs max). \nBut what I have noticed is even for very good network speeds (50mbps) it takes atleast 12 secs before switching to a better quality stream (see the log below) which doesn't work for me as my videos are only 10s long. Even the demo player bahaves in the same manner, switching only after 12s. The minDurationForQualityIncreaseMs is also 1000ms to make the stream switch faster but it does n't help.\nWhat can I customise to make it switch better?\nSome of the values I use in DashRendererBuilder are as follows:\n\n```\nprivate static final int BUFFER_SEGMENT_SIZE = 64 * 1024;\n    private static final int VIDEO_BUFFER_SEGMENTS = 50;\n    private static final int AUDIO_BUFFER_SEGMENTS = 54;\n    private static final int TEXT_BUFFER_SEGMENTS = 2;\n    private static final int LIVE_EDGE_LATENCY_MS = 3000;\n\n    private static final int maxInitialBitrate = 800000;\n    private static final int  minDurationForQualityIncreaseMs = 1000;\n    private static final int maxDurationForQualityDecreaseMs = 3000;\n    private static final int minDurationToRetainAfterDiscardMs = 2000;\n    private static final float bandwidthFraction = 0.75F;\n```\n\n**Log**\n07-07 17:27:41.091 8567-8567/com.videoapp D/DemoPlayer: video size changed bandwidth 1056727\n07-07 17:27:41.261 8567-8567/com.videoapp D/DemoPlayer: video size changed bandwidth 12224000\n07-07 17:27:41.451 8567-8567/com.videoapp E/QuestViewingPlayer: video size changed to 320 \\* 142\n07-07 17:27:41.671 8567-8567/com.videoapp D/DemoPlayer: video size changed bandwidth 15677894\n07-07 17:27:41.711 8567-8567/com.videoapp D/DemoPlayer: video size changed bandwidth 15677894\n07-07 17:27:42.031 8567-8567/com.videoapp D/DemoPlayer: video size changed bandwidth 15677894\n07-07 17:27:42.111 8567-8567/com.videoapp D/DemoPlayer: video size changed bandwidth 15677894\n07-07 17:27:42.431 8567-8567/com.videoapp D/DemoPlayer: video size changed bandwidth 15677894\n07-07 17:27:44.531 8567-8567/com.videoapp D/DemoPlayer: video size changed bandwidth 41652712\n07-07 17:27:53.771 8567-8567/com.videoapp E/ViewingPlayer: video size changed to 1280*570\n07-07 17:27:57.831 8567-8567/com.videoapp D/DemoPlayer: video size changed bandwidth 41652712\n07-07 17:27:58.171 8567-8567/com.videoapp D/DemoPlayer: video size changed bandwidth 41652712\n07-07 17:28:03.161 8567-8567/com.videoapp D/DemoPlayer: video size changed bandwidth 37094796\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1657/comments",
    "author": "narayanaraoR",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-01-30T22:12:03Z",
        "body": "In ExoPlayer V2 you can implement your own `TrackSelection` and use it in place of `AdaptiveVideoTrackSelection`. In your implementation you can choose to switch quality faster if you wish to do so. You can configure ExoPlayer V2 to use your custom implementation by passing a `TrackSelection.Factory` to the `DefaultTrackSelector` constructor that instantiates instances of it."
      }
    ]
  },
  {
    "number": 1642,
    "title": "Problem in playing mpd URLs.",
    "created_at": "2016-06-30T10:56:06Z",
    "closed_at": "2016-07-01T00:13:03Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1642",
    "body": "I implemented the ExoPlayer by almost copying the same codes except that of the Sample.java file. Instead I am giving the URLs by fetching through the server.\nOne problem which I am facing is that some .mpd URLs are playing fine but few URLs are not playing at all. But the same URL is playing perfectly fine in the demo app.\nIn latter case, the logcat shows the following: preparing -> buffering -> com.google.android.exoplayer.ExoPlaybackException: java.io.EOFException -> idle\nThis exception is caused only for few URLs.\n\nHere is the code of Renderer\n\n`case Util.TYPE_DASH:\n                return new DashRendererBuilder(mContext, userAgent, url,\n                        new WidevineTestMediaDrmCallback(contentId, provider));`\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1642/comments",
    "author": "ghost",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-07-01T00:13:03Z",
        "body": "There isn't enough information provided to help us with this issue, sorry. If it's working in the demo app, I suggest you start there and try and figure out what you've done differently.\n"
      },
      {
        "user": "ghost",
        "created_at": "2016-07-01T08:45:09Z",
        "body": "Hi,\nProblem seems to be in the Caching part. Can you help me out with this.\n\nhere is the code which I used\n\n`Cache videoCache = new SimpleCache(context.getCacheDir(), new LeastRecentlyUsedCacheEvictor(1024 * 1024 * 10));\n            DataSource videoDataSource = new DefaultUriDataSource(context, bandwidthMeter, userAgent);\n            CacheDataSource videoCacheDataSource = new CacheDataSource(videoCache, videoDataSource, false, false);\n            ChunkSource videoChunkSource = new DashChunkSource(manifestFetcher,\n                    DefaultDashTrackSelector.newVideoInstance(context, true, filterHdContent),\n                    videoCacheDataSource, new AdaptiveEvaluator(bandwidthMeter, 4000000, 10000, 20000, 25000, 0.75F), LIVE_EDGE_LATENCY_MS,\n                    elapsedRealtimeOffset, mainHandler, player, DemoPlayer.TYPE_VIDEO);`\n\nI tried playing multiple URLs by clearing the cache and it worked fine. But without clearing the cache its not playing.\n"
      }
    ]
  },
  {
    "number": 1627,
    "title": "Verimatrix is also using the same kind of scheme like (HLS). Does it support verimatrix also!",
    "created_at": "2016-06-23T15:28:21Z",
    "closed_at": "2016-06-23T15:34:49Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1627",
    "body": "Please search the existing issues before filing a new one, including issues that\nare closed. When filing a new issue please include all of the following, unless\nyou're certain that they're not useful for the particular issue being reported.\n- A description of the issue.\n- Steps describing how the issue can be reproduced, ideally in the ExoPlayer\n  demo app.\n- A link to content that reproduces the issue. If you don't wish to post it\n  publicly, please submit the issue, then email the link to\n  dev.exoplayer@gmail.com including the issue number in the subject line.\n- The version of ExoPlayer being used.\n- The device(s) and version(s) of Android on which the issue can be reproduced,\n  and how easily it reproduces. If possible, please test on multiple devices and\n  Android versions.\n- A bug report taken from the device just after the issue occurs, attached as a\n  file. A bug report can be captured using \"adb bugreport\". Output from \"adb\n  logcat\" or a log snippet is not sufficient.\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1627/comments",
    "author": "rahoboth",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-06-23T15:34:49Z",
        "body": "We do not support Verimatrix. The industry as a whole is converging to fMP4 and Common Encryption, and this is what we'll be supporting going forward. We already provide support for DASH / SS with Widevine / PlayReady. Apple recently announced fMP4 and Common Encryption support as an enhancement to the HLS spec, and we'll look at supporting this in due course.\n"
      }
    ]
  },
  {
    "number": 1625,
    "title": "Xamarin.Android Exoplayer is not supporting the WAV format files",
    "created_at": "2016-06-23T13:02:23Z",
    "closed_at": "2016-06-23T13:05:42Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1625",
    "body": "I noticed that WAV Extractor is added recently to Exoplayer (java) but in Xamarin.Android Exoplayer library is not having that fix yet, correct?\n\nIf yes, can you please let me know when it will be added to Xamarin.Android Exoplayer library?\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1625/comments",
    "author": "sakthivelrajarethinam",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-06-23T13:05:42Z",
        "body": "We don't have anything to do with Xamarin.Android; you'll have to ask them directly.\n"
      }
    ]
  },
  {
    "number": 1622,
    "title": "Is it possible to use Widevine (WV) with Microsoft Smooth Streaming (MSS)?",
    "created_at": "2016-06-22T12:05:45Z",
    "closed_at": "2016-07-19T21:14:41Z",
    "labels": [
      "question",
      "bug: in platform drm"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1622",
    "body": "As I can see in the code of DemoPlayer there is support for MSS and PlayReady. Is it possible to use also Widevine for Smooth Streams? Do we need to change the MSS manifest to support WV as it is supported for DASH to use more DRM methods?\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1622/comments",
    "author": "tomaskukol",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-07-07T11:58:20Z",
        "body": "There's no obvious reason why this wouldn't work, but I don't think I've ever seen a SmoothStream/Widevine sample to know exactly what the manifest and chunks should look like.\n\n@wvpaf - Do we have any sample streams?\n"
      },
      {
        "user": "wvpaf",
        "created_at": "2016-07-19T21:13:33Z",
        "body": "Hi @tomaskukol , \n\nthere is no path for MSS and WV. MSS is proprietary and will not inter-operate with WV.\n"
      }
    ]
  },
  {
    "number": 1618,
    "title": "playing video with portrait black screen",
    "created_at": "2016-06-21T11:14:35Z",
    "closed_at": "2016-06-21T16:04:43Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1618",
    "body": "Hi, i'm developing a wrapped player from Exoplayer project and my problem is when i play videos with portrait orientation, i have a black screen but the audio is ok. If i change to landscape the video appears correctly and the playback is ok. What it could be happenning ? It occours with whatever kind of video format. Thanks!\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1618/comments",
    "author": "billyjoker",
    "comments": [
      {
        "user": "catbaxter",
        "created_at": "2016-06-21T11:23:08Z",
        "body": "Exoplayer demo application works in portrait mode flawlessly. Check it out. \n"
      },
      {
        "user": "billyjoker",
        "created_at": "2016-06-21T12:10:38Z",
        "body": "In fact i've checked that Exoplayer demo application works in portrait mode flawlessly... i've asked for a possible cause of my bug\n"
      },
      {
        "user": "catbaxter",
        "created_at": "2016-06-21T12:14:47Z",
        "body": "Nobody can answer without looking in your code and stream url. Insert stream url from demo app to your app and vice versa and compare.\n"
      },
      {
        "user": "Ood-Tsen",
        "created_at": "2016-06-21T12:57:57Z",
        "body": "1. Make sure surface is valid  before push to ExoPlayer\n2. Check surface resolution while the screen is black,\n   You may use this  command.\n\n#adb shell dumpsys SurfaceFlinger\n"
      },
      {
        "user": "billyjoker",
        "created_at": "2016-06-21T13:48:24Z",
        "body": "@Ood-Tsen i did as you said and the log says:\n\n```\nBuild configuration: [sf] [libui] [libgui]\nSync configuration: [using: EGL_ANDROID_native_fence_sync EGL_KHR_wait_sync]\nDispSync configuration: app phase 0 ns, sf phase 0 ns, present offset 3468000 ns (refresh 16666667 ns)\nVisible layers (count = 10)\n+ Layer 0xb6201000 (com.android.systemui.ImageWallpaper)\n  Region transparentRegion (this=0xb6201160, count=1)\n    [  0,   0,   0,   0]\n  Region visibleRegion (this=0xb6201008, count=1)\n    [  0,   0,   0,   0]\n      layerStack=   0, z=    21000, pos=(-360,0), size=(1440,1280), crop=( 360,   0,1080,1280), isOpaque=1, invalidate=0, alpha=0xff, flags=0x00000003, tr=[1.00, 0.00][0.00, 1.00]\n      client=0xb626ecc0\n      format= 2, activeBuffer=[1440x1280:1920,  3], queued-frames=0, mRefreshPending=0\n            mTexName=12 mCurrentTexture=0\n            mCurrentCrop=[0,0,0,0] mCurrentTransform=0\n            mAbandoned=0\n            -BufferQueue mMaxAcquiredBufferCount=1, mDequeueBufferCannotBlock=0, default-size=[1440x1280], default-format=2, transform-hint=00, FIFO(0)={}\n+ LayerDim 0xb6208000 (DimLayer)\n  Region transparentRegion (this=0xb6208160, count=1)\n    [  0,   0,   0,   0]\n  Region visibleRegion (this=0xb6208008, count=1)\n    [  0,   0,   0,   0]\n      layerStack=   0, z=    21009, pos=(-180,-320), size=(1080,1920), crop=(   0,   0,  -1,  -1), isOpaque=0, invalidate=0, alpha=0x00, flags=0x00000001, tr=[1.00, 0.00][0.00, 1.00]\n\n      client=0xb583d380\n      format= 0, activeBuffer=[   0x   0:   0,  0], queued-frames=0, mRefreshPending=0\n            mTexName=5 mCurrentTexture=-1\n            mCurrentCrop=[0,0,0,0] mCurrentTransform=0\n            mAbandoned=0\n            -BufferQueue mMaxAcquiredBufferCount=1, mDequeueBufferCannotBlock=0, default-size=[1080x1920], default-format=1, transform-hint=00, FIFO(0)={}\n+ LayerDim 0xb62a2000 (DimLayer)\n  Region transparentRegion (this=0xb62a2160, count=1)\n    [  0,   0,   0,   0]\n  Region visibleRegion (this=0xb62a2008, count=1)\n    [  0,   0,   0,   0]\n      layerStack=   0, z=    21049, pos=(-180,-320), size=(1080,1920), crop=(   0,   0,  -1,  -1), isOpaque=0, invalidate=0, alpha=0x00, flags=0x00000001, tr=[1.00, 0.00][0.00, 1.00]\n\n      client=0xb583d380\n      format= 0, activeBuffer=[   0x   0:   0,  0], queued-frames=0, mRefreshPending=0\n            mTexName=7 mCurrentTexture=-1\n            mCurrentCrop=[0,0,0,0] mCurrentTransform=0\n            mAbandoned=0\n            -BufferQueue mMaxAcquiredBufferCount=1, mDequeueBufferCannotBlock=0, default-size=[1080x1920], default-format=1, transform-hint=00, FIFO(0)={}\n+ Layer 0xb62b5000 (SurfaceView)\n  Region transparentRegion (this=0xb62b5160, count=1)\n    [  0,   0,   0,   0]\n  Region visibleRegion (this=0xb62b5008, count=1)\n    [  0, 415, 720, 1549]\n      layerStack=   0, z=    21055, pos=(0,415), size=( 720,1134), crop=(   0,   0, 720,1134), isOpaque=1, invalidate=0, alpha=0xff, flags=0x00000002, tr=[1.00, 0.00][0.00, 1.00]\n      client=0xb62a7200\n      format= 4, activeBuffer=[ 854x 480: 896,7FA30C03], queued-frames=0, mRefreshPending=0\n            mTexName=649 mCurrentTexture=3\n            mCurrentCrop=[0,0,854,480] mCurrentTransform=0\n            mAbandoned=0\n            -BufferQueue mMaxAcquiredBufferCount=1, mDequeueBufferCannotBlock=0, default-size=[720x1134], default-format=4, transform-hint=00, FIFO(0)={}\n             [00:0xb61ff480] state=DEQUEUED, 0xb6186290 [ 854x 480: 896,7FA30C03]\n             [01:0xb5842b00] state=DEQUEUED, 0xb583c2e0 [ 854x 480: 896,7FA30C03]\n             [02:0xb5842b80] state=FREE    , 0xb583c830 [ 854x 480: 896,7FA30C03]\n            >[03:0xb61ff080] state=ACQUIRED, 0xb6186330 [ 854x 480: 896,7FA30C03]\n             [04:0xb5842980] state=DEQUEUED, 0xb583c8d0 [ 854x 480: 896,7FA30C03]\n             [05:0xb61ff980] state=DEQUEUED, 0xb61861f0 [ 854x 480: 896,7FA30C03]\n             [06:0xb61ff400] state=FREE    , 0xb6186150 [ 854x 480: 896,7FA30C03]\n             [07:0xb5842100] state=DEQUEUED, 0xb583c880 [ 854x 480: 896,7FA30C03]\n             [08:0xb61ff100] state=DEQUEUED, 0xb61865b0 [ 854x 480: 896,7FA30C03]\n             [09:0xb5842700] state=FREE    , 0xb583c920 [ 854x 480: 896,7FA30C03]\n             [10:0xb5842780] state=DEQUEUED, 0xb583c970 [ 854x 480: 896,7FA30C03]\n             [11:0xb5842a80] state=DEQUEUED, 0xb583c150 [ 854x 480: 896,7FA30C03]\n             [12:0xb61ff580] state=DEQUEUED, 0xb61861a0 [ 854x 480: 896,7FA30C03]\n             [13:0xb5842180] state=DEQUEUED, 0xb583c0b0 [ 854x 480: 896,7FA30C03]\n+ Layer 0xb623d000 (com.devbrackets.android.exomediademo/com.devbrackets.android.exomediademo.ui.activity.VideoSimplePlayerActivity)\n  Region transparentRegion (this=0xb623d160, count=2)\n    [  0, 415, 720, 952]\n    [  0, 1280, 720, 1549]\n  Region visibleRegion (this=0xb623d008, count=1)\n    [  0,   0, 720, 1280]\n      layerStack=   0, z=    21060, pos=(0,0), size=( 720,1280), crop=(   0,   0, 720,1280), isOpaque=0, invalidate=0, alpha=0xff, flags=0x00000000, tr=[1.00, 0.00][0.00, 1.00]\n      client=0xb62a7200\n      format= 1, activeBuffer=[ 720x1280: 736,  1], queued-frames=0, mRefreshPending=0\n            mTexName=648 mCurrentTexture=2\n            mCurrentCrop=[0,0,0,0] mCurrentTransform=0\n            mAbandoned=0\n            -BufferQueue mMaxAcquiredBufferCount=1, mDequeueBufferCannotBlock=0, default-size=[720x1280], default-format=1, transform-hint=00, FIFO(0)={}\n             [00:0xb5842380] state=FREE    , 0xb583c1f0 [ 720x1280: 736,  1]\n             [01:0xb5842400] state=FREE    , 0xb583c290 [ 720x1280: 736,  1]\n            >[02:0xb5842480] state=ACQUIRED, 0xb583c330 [ 720x1280: 736,  1]\n+ Layer 0xb62a9000 (FocusedStackFrame)\n  Region transparentRegion (this=0xb62a9160, count=1)\n    [  0,   0,   0,   0]\n  Region visibleRegion (this=0xb62a9008, count=1)\n    [  0,   0,   0,   0]\n      layerStack=   0, z=    21061, pos=(0,0), size=(   1,   1), crop=(   0,   0,  -1,  -1), isOpaque=0, invalidate=0, alpha=0x4d, flags=0x00000001, tr=[1.00, 0.00][0.00, 1.00]\n      client=0xb583d380\n      format= 1, activeBuffer=[   0x   0:   0,  0], queued-frames=0, mRefreshPending=0\n            mTexName=3 mCurrentTexture=-1\n            mCurrentCrop=[0,0,0,0] mCurrentTransform=0\n            mAbandoned=0\n            -BufferQueue mMaxAcquiredBufferCount=1, mDequeueBufferCannotBlock=0, default-size=[1x1], default-format=1, transform-hint=00, FIFO(0)={}\n+ LayerDim 0xb6206000 (DimLayer)\n  Region transparentRegion (this=0xb6206160, count=1)\n    [  0,   0,   0,   0]\n  Region visibleRegion (this=0xb6206008, count=1)\n    [  0,   0,   0,   0]\n      layerStack=   0, z=   100999, pos=(-180,-320), size=(1080,1920), crop=(   0,   0,  -1,  -1), isOpaque=0, invalidate=0, alpha=0x00, flags=0x00000001, tr=[1.00, 0.00][0.00, 1.00]\n\n      client=0xb583d380\n      format= 0, activeBuffer=[   0x   0:   0,  0], queued-frames=0, mRefreshPending=0\n            mTexName=4 mCurrentTexture=-1\n            mCurrentCrop=[0,0,0,0] mCurrentTransform=0\n            mAbandoned=0\n            -BufferQueue mMaxAcquiredBufferCount=1, mDequeueBufferCannotBlock=0, default-size=[1080x1920], default-format=1, transform-hint=00, FIFO(0)={}\n+ LayerDim 0xb62a0000 (DimLayer)\n  Region transparentRegion (this=0xb62a0160, count=1)\n    [  0,   0,   0,   0]\n  Region visibleRegion (this=0xb62a0008, count=1)\n    [  0,   0,   0,   0]\n      layerStack=   0, z=   100999, pos=(-180,-320), size=(1080,1920), crop=(   0,   0,  -1,  -1), isOpaque=0, invalidate=0, alpha=0x00, flags=0x00000001, tr=[1.00, 0.00][0.00, 1.00]\n\n      client=0xb583d380\n      format= 0, activeBuffer=[   0x   0:   0,  0], queued-frames=0, mRefreshPending=0\n            mTexName=6 mCurrentTexture=-1\n            mCurrentCrop=[0,0,0,0] mCurrentTransform=0\n            mAbandoned=0\n            -BufferQueue mMaxAcquiredBufferCount=1, mDequeueBufferCannotBlock=0, default-size=[1080x1920], default-format=1, transform-hint=00, FIFO(0)={}\n+ Layer 0xb62c3000 (StatusBar)\n  Region transparentRegion (this=0xb62c3160, count=1)\n    [  0,   0,   0,   0]\n  Region visibleRegion (this=0xb62c3008, count=1)\n    [  0,   0, 720,  50]\n      layerStack=   0, z=   151000, pos=(0,0), size=( 720,  50), crop=(   0,   0, 720,  50), isOpaque=0, invalidate=0, alpha=0xff, flags=0x00000000, tr=[1.00, 0.00][0.00, 1.00]\n      client=0xb626ecc0\n      format= 1, activeBuffer=[ 720x  50: 736,  1], queued-frames=0, mRefreshPending=0\n            mTexName=10 mCurrentTexture=1\n            mCurrentCrop=[0,0,0,0] mCurrentTransform=0\n            mAbandoned=0\n            -BufferQueue mMaxAcquiredBufferCount=1, mDequeueBufferCannotBlock=0, default-size=[720x50], default-format=1, transform-hint=00, FIFO(0)={}\n             [00:0xb61ff600] state=FREE    , 0xb623f2e0 [ 720x  50: 736,  1]\n            >[01:0xb61ff680] state=ACQUIRED, 0xb62dd1f0 [ 720x  50: 736,  1]\n+ Layer 0xb6240000 (NavigationBar)\n  Region transparentRegion (this=0xb6240160, count=1)\n    [  0,   0,   0,   0]\n  Region visibleRegion (this=0xb6240008, count=1)\n    [  0, 1184, 720, 1280]\n      layerStack=   0, z=   201000, pos=(0,1184), size=( 720,  96), crop=(   0,   0, 720,  96), isOpaque=0, invalidate=0, alpha=0xff, flags=0x00000000, tr=[1.00, 0.00][0.00, 1.00]\n      client=0xb626ecc0\n      format= 1, activeBuffer=[ 720x  96: 736,  1], queued-frames=0, mRefreshPending=0\n            mTexName=45 mCurrentTexture=1\n            mCurrentCrop=[0,0,0,0] mCurrentTransform=0\n            mAbandoned=0\n            -BufferQueue mMaxAcquiredBufferCount=1, mDequeueBufferCannotBlock=0, default-size=[720x96], default-format=1, transform-hint=00, FIFO(0)={}\n             [00:0xb5842500] state=FREE    , 0xb6186dd0 [ 720x  96: 736,  1]\n            >[01:0xb61ff500] state=ACQUIRED, 0xb6186380 [ 720x  96: 736,  1]\n             [02:0xb5842080] state=FREE    , 0xb623ff60 [ 720x  96: 736,  1]\nDisplays (1 entries)\n+ DisplayDevice: Built-in Screen\n   type=0, hwcId=0, layerStack=0, ( 720x1280), ANativeWindow=0xb6174608, orient= 0 (type=00000000), flips=126563, isSecure=1, secureVis=0, powerMode=2, activeConfig=0, numLayers=4\n   v:[0,0,720,1280], f:[0,0,720,1280], s:[0,0,720,1280],transform:[[1.000,0.000,-0.000][0.000,1.000,-0.000][0.000,0.000,1.000]]\nmAbandoned=0\n-BufferQueue mMaxAcquiredBufferCount=1, mDequeueBufferCannotBlock=0, default-size=[720x1280], default-format=1, transform-hint=00, FIFO(0)={}\n>[00:0xb62ac280] state=ACQUIRED, 0xb6075b00 [ 720x1280: 736,  1]\n [01:0xb62ac400] state=FREE    , 0xb6075ba0 [ 720x1280: 736,  1]\nSurfaceFlinger global state:\nEGL implementation : 1.4\nEGL_QUALCOMM_shared_image EGL_KHR_image EGL_KHR_image_base EGL_QCOM_create_image EGL_KHR_lock_surface EGL_KHR_lock_surface2 EGL_KHR_fence_sync EGL_KHR_cl_eventEGL_IMG_context_priorit\ny EGL_KHR_gl_texture_2D_image EGL_KHR_gl_texture_cubemap_image EGL_KHR_gl_texture_3D_image EGL_KHR_gl_renderbuffer_image EGL_EXT_create_context_robustness EGL_ANDROID_blob_cache EGL_\nANDROID_framebuffer_target EGL_KHR_create_context EGL_KHR_wait_sync EGL_KHR_gl_colorspace EGL_ANDROID_image_crop EGL_ANDROID_recordable EGL_ANDROID_native_fence_sync EGL_ANDROID_imag\ne_native_buffer EGL_KHR_gl_colorspace\nGLES: Qualcomm, Adreno (TM) 320, OpenGL ES 3.0 V@84.0 AU@05.00.02.006.020 (CL@)\nGL_AMD_compressed_ATC_texture GL_AMD_performance_monitor GL_AMD_program_binary_Z400 GL_EXT_debug_label GL_EXT_debug_marker GL_EXT_discard_framebuffer GL_EXT_robustness GL_EXT_texture\n_format_BGRA8888 GL_EXT_texture_type_2_10_10_10_REV GL_NV_fence GL_OES_compressed_ETC1_RGB8_texture GL_OES_depth_texture GL_OES_depth24 GL_OES_EGL_image GL_OES_EGL_sync GL_OES_EGL_im\nage_external GL_OES_element_index_uint GL_OES_fbo_render_mipmap GL_OES_fragment_precision_high GL_OES_get_program_binary GL_OES_packed_depth_stencil GL_OES_depth_texture_cube_map GL_\nOES_rgb8_rgba8 GL_OES_standard_derivatives GL_OES_texture_3D GL_OES_texture_float GL_OES_texture_half_float GL_OES_texture_half_float_linear GL_OES_texture_npot GL_OES_vertex_half_fl\noat GL_OES_vertex_type_10_10_10_2 GL_OES_vertex_array_object GL_QCOM_alpha_test GL_QCOM_binning_control GL_QCOM_driver_control GL_QCOM_perfmon_global_mode GL_QCOM_extended_get GL_QCO\nM_extended_get2 GL_QCOM_tiled_rendering GL_QCOM_writeonly_rendering GL_EXT_sRGB GL_EXT_sRGB_write_control GL_EXT_texture_sRGB_decode GL_EXT_texture_filter_anisotropic GL_EXT_multisam\npled_render_to_texture GL_EXT_color_buffer_float GL_EXT_color_buffer_half_float GL_EXT_disjoint_timer_query\n  Region undefinedRegion (this=0xb60937ac, count=1)\n    [  0,   0, 720, 415]\n  orientation=0, isDisplayOn=1\n  last eglSwapBuffers() time: 274.683000 us\n  last transaction time     : 30.520000 us\n  transaction-flags         : 00000000\n  refresh-rate              : 59.999999 fps\n  x-dpi                     : 315.309998\n  y-dpi                     : 315.649994\n  gpu_to_cpu_unsupported    : 0\n  eglSwapBuffers time: 0.000000 us\n  transaction time: 0.000000 us\n  frame avg:            39.201 ms       (13 triggers)   (29 frames)\n  frame longest:        50.267 ms\n  compose avg:          2.244 ms        (0 triggers)    (30 composes)\n  compose longest:      4.731 ms\n  post avg:             0.349 ms        (0 triggers)    (30 posts)\n  post longest:         1.038 ms\n  render avg:           3.598 ms        (0 triggers)    (30 renders)\n  render longest:       5.799 ms\n  layers: (4:10)                (FocusedStackFrame (0xb62a9000): 0:660)* (DimLayer (0xb6206000): 0:368)* (DimLayer (0xb6208000): 0:4)* (DimLayer (0xb62a0000): 0:184)* (DimLayer (0xb6\n2a2000): 0:277)* (StatusBar (0xb62c3000): 0:10533) (com.android.systemui.ImageWallpaper (0xb6201000): 0:2084)* (NavigationBar (0xb6240000): 0:4075) (com.devbrackets.android.exomediad\nemo/com.devbrackets.android.exomediademo.ui.activity.VideoSimplePlayerActivity (0xb623d000): 0:168) (SurfaceView (0xb62b5000): 30:122)\n  triggers:             (rate: 753:41858)       (compose: 0:41) (post: 0:255)   (render: 6:364) (29:116174 frames)      (30:126582)\nVSYNC state: disabled\n  soft-vsync: disabled\n  triggers:             (rate: 0:2)     (10445 sw vsyncs)       (0 skipped)     (0:300314 vsyncs)   (1:348328)\n  numListeners=22,\n  events-delivered: 381763\n    0xb585b038: count=-1\n    0xb585b060: count=-1\n    0xb585b088: count=-1\n    0xb585b0b0: count=-1\n    0xb585b178: count=-1\n    0xb6038f60: count=-1\n    0xb618e1c8: count=-1\n    0xb618e308: count=-1\n    0xb618e330: count=-1\n    0xb618e358: count=-1\n    0xb618e3f8: count=-1\n    0xb618e470: count=-1\n    0xb618e4c0: count=-1\n    0xb618e5b0: count=-1\n    0xb618eb00: count=-1\n    0xb62c01f0: count=-1\n    0xb62c0290: count=-1\n    0xb62c0420: count=-1\n    0xb62c05b0: count=-1\n    0xb62c0600: count=-1\n    0xb62c0970: count=-1\n    0xb62c0dd0: count=-1\nh/w composer state:\n  h/w composer present and enabled\nHardware Composer state (version 01030000):\n  mDebugForceFakeVSync=0\n  Display[0] configurations (* current):\n    * 0: 720x1280, xdpi=315.309998, ydpi=315.649994, refresh=16666667\n  numHwLayers=5, flags=00000000\n    type   |  handle  | hint | flag | tr | blnd |   format    |     source crop (l,t,r,b)      |          frame         | name\n-----------+----------+------+------+----+------+-------------+--------------------------------+------------------------+------\n      GLES | b6186330 | 0000 | 0000 | 00 | 0100 | ? 7fa30c03  |    0.0,    0.0,  854.0,  366.1 |    0,  415,  720, 1280 | SurfaceView\n      GLES | b583c330 | 0000 | 0000 | 00 | 0105 | RGBA_8888   |    0.0,    0.0,  720.0, 1280.0 |    0,    0,  720, 1280 | com.devbrackets.android.exomediademo/com.devbrackets.android\n.exomediademo.ui.activity.VideoSimplePlayerActivity\n      GLES | b62dd1f0 | 0000 | 0000 | 00 | 0105 | RGBA_8888   |    0.0,    0.0,  720.0,   50.0 |    0,    0,  720,   50 | StatusBar\n      GLES | b6186380 | 0000 | 0000 | 00 | 0105 | RGBA_8888   |    0.0,    0.0,  720.0,   96.0 |    0, 1184,  720, 1280 | NavigationBar\n FB TARGET | b6075b00 | 0000 | 0000 | 00 | 0105 | RGBA_8888   |    0.0,    0.0,  720.0, 1280.0 |    0,    0,  720, 1280 | HWC_FRAMEBUFFER_TARGET\nQualcomm HWC state:\n  MDPVersion=440\n  DisplayPanel=9\nHWC Map for Dpy: \"PRIMARY\"\nCURR_FRAME: layerCount: 4 mdpCount: 0 fbCount: 4\nneedsFBRedraw:YES  pipesUsed: 0  MaxPipesPerMixer: 4\n ---------------------------------------------\n listIdx | cached? | mdpIndex | comptype  |  Z\n ---------------------------------------------\n       0 |     YES |       -1 |      GLES |  0\n       1 |     YES |       -1 |      GLES |  0\n       2 |     YES |       -1 |      GLES |  0\n       3 |     YES |       -1 |      GLES |  0\n\n\nOverlay State\n==========================\nCtrl(mdp_overlay) id=1 z=0 fg=0 alpha=255 mask=-1 flags=0x20000\n        src(msmfb_img) w=736 h=1280 format=13 MDP_RGBA_8888\n        src_rect(mdp_rect) x=0 y=0 w=720 h=1280\n        dst_rect(mdp_rect) x=0 y=0 w=720 h=1280\nData(msmfb_overlay_data) id=1\n        data(msmfb_data) offset=0 memid=20 id=0 flags=0x0 priv=0\nAttached to dpy=0\n\nCtrl(mdp_overlay) id=-1 z=0 fg=0 alpha=0 mask=0 flags=0x0\n        src(msmfb_img) w=0 h=0 format=0 MDP_RGB_565\n        src_rect(mdp_rect) x=0 y=0 w=0 h=0\n        dst_rect(mdp_rect) x=0 y=0 w=0 h=0\nData(msmfb_overlay_data) id=0\n        data(msmfb_data) offset=0 memid=-1 id=0 flags=0x0 priv=0\nAttached to dpy=0\n\nCtrl(mdp_overlay) id=-1 z=0 fg=1 alpha=255 mask=-1 flags=0x848000\n        src(msmfb_img) w=896 h=480 format=17 MDP_Y_CBCR_H2V2_TILE\n        src_rect(mdp_rect) x=0 y=0 w=854 h=366\n        dst_rect(mdp_rect) x=0 y=415 w=720 h=864\nData(msmfb_overlay_data) id=0\n        data(msmfb_data) offset=0 memid=-1 id=0 flags=0x0 priv=0\nAttached to dpy=0\n\nCtrl(mdp_overlay) id=-1 z=0 fg=0 alpha=0 mask=0 flags=0x0\n        src(msmfb_img) w=0 h=0 format=0 MDP_RGB_565\n        src_rect(mdp_rect) x=0 y=0 w=0 h=0\n        dst_rect(mdp_rect) x=0 y=0 w=0 h=0\nData(msmfb_overlay_data) id=0\n        data(msmfb_data) offset=0 memid=-1 id=0 flags=0x0 priv=0\nAttached to dpy=0\n\nPipes used=4\n\n\n================\nAllocated buffers:\n0xb583c0b0: unknown     |  854 ( 896) x  480 | 7FA30C03 | 0x82006900\n0xb583c150: unknown     |  854 ( 896) x  480 | 7FA30C03 | 0x82006900\n0xb583c1f0: 3680.00 KiB |  720 ( 736) x 1280 |        1 | 0x00000900\n0xb583c290: 3680.00 KiB |  720 ( 736) x 1280 |        1 | 0x00000900\n0xb583c2e0: unknown     |  854 ( 896) x  480 | 7FA30C03 | 0x82006900\n0xb583c330: 3680.00 KiB |  720 ( 736) x 1280 |        1 | 0x00000900\n0xb583c6a0: 7200.00 KiB | 1440 (1920) x 1280 |        3 | 0x00000900\n0xb583c830: unknown     |  854 ( 896) x  480 | 7FA30C03 | 0x82006900\n0xb583c880: unknown     |  854 ( 896) x  480 | 7FA30C03 | 0x82006900\n0xb583c8d0: unknown     |  854 ( 896) x  480 | 7FA30C03 | 0x82006900\n0xb583c920: unknown     |  854 ( 896) x  480 | 7FA30C03 | 0x82006900\n0xb583c970: unknown     |  854 ( 896) x  480 | 7FA30C03 | 0x82006900\n0xb6075b00: 3680.00 KiB |  720 ( 736) x 1280 |        1 | 0x00001a00\n0xb6075ba0: 3680.00 KiB |  720 ( 736) x 1280 |        1 | 0x00001a00\n0xb6186150: unknown     |  854 ( 896) x  480 | 7FA30C03 | 0x82006900\n0xb61861a0: unknown     |  854 ( 896) x  480 | 7FA30C03 | 0x82006900\n0xb61861f0: unknown     |  854 ( 896) x  480 | 7FA30C03 | 0x82006900\n0xb6186290: unknown     |  854 ( 896) x  480 | 7FA30C03 | 0x82006900\n0xb6186330: unknown     |  854 ( 896) x  480 | 7FA30C03 | 0x82006900\n0xb6186380:  276.00 KiB |  720 ( 736) x   96 |        1 | 0x00000900\n0xb61865b0: unknown     |  854 ( 896) x  480 | 7FA30C03 | 0x82006900\n0xb6186dd0:  276.00 KiB |  720 ( 736) x   96 |        1 | 0x00000900\n0xb623f2e0:  143.75 KiB |  720 ( 736) x   50 |        1 | 0x00000900\n0xb623ff60:  276.00 KiB |  720 ( 736) x   96 |        1 | 0x00000900\n0xb62dd1f0:  143.75 KiB |  720 ( 736) x   50 |        1 | 0x00000900\nTotal allocated (estimate): 26715.50 KB\n```\n"
      },
      {
        "user": "Ood-Tsen",
        "created_at": "2016-06-21T14:45:09Z",
        "body": "From the table\n type   |  handle  | hint | flag | tr | blnd |   format    |     source crop (l,t,r,b)      |          frame         | name\n-----------+----------+------+------+----+------+-------------+--------------------------------+------------------------+------\n      GLES | b6186330 | 0000 | 0000 | 00 | 0100 | ? 7fa30c03  |    0.0,    0.0,  854.0,  366.1 |    0,  415,  720, 1280 | SurfaceView\n1. The SurfaceView is in the 1st column,\n2. SourceCrop (left, top, right, bottom) = (0.0, 0.0,  854.0,  366.1) is not in integer. Rare.\n\nI believe SourceCrop  should be in integer in landscape mode.\n"
      },
      {
        "user": "billyjoker",
        "created_at": "2016-06-21T16:04:36Z",
        "body": "Thanks!! Finally i've figured out it was a scale problem!!\n"
      }
    ]
  },
  {
    "number": 1588,
    "title": "Not possible to use persistent licenses when using Android DRM Framework APIs",
    "created_at": "2016-06-10T11:14:02Z",
    "closed_at": "2016-06-21T21:34:32Z",
    "labels": [
      "question",
      "wont fix: infeasible",
      "bug: in platform drm"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1588",
    "body": "Currently it is not possible to use persistent licenses when using Android DRM Framework APIs in at least two devices:\n- In an Asus Nexus Player / Android N, there is the following error message in the logs when using MediaDrm.KEY_TYPE_OFFLINE in MediaDrm.getKeyRequest() to get a license challenge:\n\n```\n186-186/? E/PlayReadyDrmPlugin﹕ getKeyRequest failed since only streaming type is supported.\n```\n- In a Razer Forge / Android 5.1.1, there is the following error message in the logs when using MediaDrm.KEY_TYPE_OFFLINE in MediaDrm.getKeyRequest() to get a license challenge:\n\n```\n06-10 12:58:21.589 280-705/? E/PRMediaDrmPlugin﹕ KeyType is kKeyType_Offline.\n06-10 12:58:21.589 280-705/? D/PRClient﹕ getKeyRequest:: Session\n{ 0x01 0x00 0x00 0x01 }\n\n, initData size 11446, mime\n06-10 12:58:21.589 280-705/? D/PRClient﹕ findPlayReadyPssh starts, initData.size() = 11446\n06-10 12:58:21.589 280-705/? E/PRClient﹕ findPlayReadyPssh pssh not found\n06-10 12:58:21.589 280-705/? D/PRClient﹕ getKeyRequest:: drmHeaderLength = 11446\n06-10 12:58:21.589 280-705/? D/PRClient﹕ customData key index = -2\n06-10 12:58:21.589 280-705/? D/PRClient﹕ PRClient::createPRContext\n06-10 12:58:21.589 280-705/? D/PRClient﹕ createPRContext, app_ctx_id = 1\n06-10 12:58:21.589 280-705/? D/PlayReady﹕ playready_reinitialize starts!\n06-10 12:58:21.595 280-705/? D/PlayReady﹕ playready_reinitialize returns 0\n06-10 12:58:21.595 280-705/? D/PRClient﹕ createPRContext:: the playready_reinitialize succeeds, and returns = 0X00000000\n06-10 12:58:21.595 280-705/? D/PRClient﹕ getKeyRequest:: createPRContext succeeds and returns = 0x0\n06-10 12:58:21.595 280-705/? D/PlayReady﹕ playready_set_header starts!\n06-10 12:58:21.599 280-705/? D/PlayReady﹕ playready_set_header returned handle = 0\n06-10 12:58:21.600 280-705/? D/PRClient﹕ getKeyRequest:: playready_set_header succeeds and returns = 0x0\n06-10 12:58:21.600 280-705/? D/PlayReady﹕ playready_licacq_generate_challenge starts!\n06-10 12:58:21.603 445-451/? D/DrmLibTime﹕ got the req here! ret=0\n06-10 12:58:21.603 445-451/? D/DrmLibTime﹕ command id, time_cmd_id = 770\n06-10 12:58:21.603 445-451/? D/DrmLibTime﹕ time_getutcsec starts!\n06-10 12:58:21.603 445-451/? D/DrmLibTime﹕ QSEE Time Listener: time_getutcsec\n06-10 12:58:21.603 445-451/? D/DrmLibTime﹕ QSEE Time Listener: get_utc_seconds\n06-10 12:58:21.603 445-451/? D/DrmLibTime﹕ QSEE Time Listener: seconds: 1465556301\n06-10 12:58:21.603 445-451/? D/DrmLibTime﹕ QSEE Time Listener: nano seconds: 603418695\n06-10 12:58:21.603 445-451/? D/DrmLibTime﹕ time_getutcsec returns 0, sec = 1465556301; nsec = 603418695\n06-10 12:58:21.603 445-451/? D/DrmLibTime﹕ time_getutcsec finished!\n06-10 12:58:21.603 445-451/? D/DrmLibTime﹕ iotcl_continue_command finished! and return 0\n06-10 12:58:21.603 445-451/? D/DrmLibTime﹕ before calling ioctl to read the next time_cmd\n06-10 12:58:21.612 280-705/? E/PlayReady﹕ Error: playready_licacq_generate_challenge failed and returned -2147024774\n06-10 12:58:21.612 280-705/? D/PlayReady﹕ playready_licacq_generate_challenge returns -2147024774, the length of challenge = 7102\n06-10 12:58:21.612 280-705/? D/PRClient﹕ getKeyRequest:: playready_licacq_generate_challenge(1st) returned 0X8007007a BUFFERTOOSMALL, iLicenseQuerySizeLocal = 7102. Continue with good buffer size.\n06-10 12:58:21.613 280-705/? D/PlayReady﹕ playready_licacq_generate_challenge starts!\n--------- beginning of crash\n06-10 12:58:21.645 280-705/? A/libc﹕ Fatal signal 11 (SIGSEGV), code 1, fault addr 0xb5396000 in tid 705 (Binder_1)\n06-10 12:58:21.654 280-684/? A/libc﹕ Fatal signal 11 (SIGSEGV), code 1, fault addr 0x8 in tid 684 (FastMixer)\n06-10 12:58:21.753 270-270/? I/DEBUG﹕ *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\n06-10 12:58:21.753 270-270/? I/DEBUG﹕ Build fingerprint: 'razer/pearlyn/pearlyn:5.1.1/L-LMY48W-rzs-us-sf-bld2-11LO-02.18.PM/62:user/release-keys'\n06-10 12:58:21.753 270-270/? I/DEBUG﹕ Revision: '0'\n06-10 12:58:21.753 270-270/? I/DEBUG﹕ ABI: 'arm'\n06-10 12:58:21.753 647-725/? W/NativeCrashListener﹕ Couldn't find ProcessRecord for pid 280\n06-10 12:58:21.753 270-270/? I/DEBUG﹕ pid: 280, tid: 705, name: Binder_1 >>> /system/bin/mediaserver <<<\n06-10 12:58:21.753 270-270/? E/DEBUG﹕ AM write failure (32 / Broken pipe)\n06-10 12:58:21.753 270-270/? I/DEBUG﹕ signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 0xb5396000\n06-10 12:58:21.763 270-270/? I/DEBUG﹕ r0 b8d6b850 r1 b5395ffa r2 3932986c r3 00000008\n06-10 12:58:21.763 270-270/? I/DEBUG﹕ r4 00000000 r5 b8d2abb8 r6 b582bac4 r7 39366334\n06-10 12:58:21.763 270-270/? I/DEBUG﹕ r8 b535944a r9 b535954e sl b5342008 fp b5359408\n06-10 12:58:21.763 270-270/? I/DEBUG﹕ ip 00000000 sp b582ba38 lr b5376283 pc b6e659d6 cpsr 200f0030\n06-10 12:58:21.763 270-270/? I/DEBUG﹕ backtrace:\n06-10 12:58:21.763 270-270/? I/DEBUG﹕ #00 pc 000129d6 /system/lib/libc.so (__memcpy_base+81)\n06-10 12:58:21.763 270-270/? I/DEBUG﹕ #01 pc 0000227f /system/vendor/lib/libtzplayready.so (playready_licacq_generate_challenge+458)\n06-10 12:58:21.763 270-270/? I/DEBUG﹕ #02 pc 0000458b /system/vendor/lib/mediadrm/libprmediadrmplugin.so (android::PRClient::getKeyRequest(android::Vector<unsigned char> const&, android::Vector<unsigned char> const&, android::String8 const&, android::DrmPlugin::KeyType, android::KeyedVector<android::String8, android::String8> const&, android::Vector<unsigned char>&, android::String8&)+714)\n06-10 12:58:21.764 270-270/? I/DEBUG﹕ #03 pc 0000392d /system/vendor/lib/mediadrm/libprmediadrmplugin.so (android::PRMediaDrmPlugin::getKeyRequest(android::Vector<unsigned char> const&, android::Vector<unsigned char> const&, android::String8 const&, android::DrmPlugin::KeyType, android::KeyedVector<android::String8, android::String8> const&, android::Vector<unsigned char>&, android::String8&)+160)\n06-10 12:58:21.764 270-270/? I/DEBUG﹕ #04 pc 0003af93 /system/lib/libmediaplayerservice.so (android::Drm::getKeyRequest(android::Vector<unsigned char> const&, android::Vector<unsigned char> const&, android::String8 const&, android::DrmPlugin::KeyType, android::KeyedVector<android::String8, android::String8> const&, android::Vector<unsigned char>&, android::String8&)+54)\n06-10 12:58:21.764 270-270/? I/DEBUG﹕ #05 pc 00054979 /system/lib/libmedia.so (android::BnDrm::onTransact(unsigned int, android::Parcel const&, android::Parcel*, unsigned int)+588)\n06-10 12:58:21.764 270-270/? I/DEBUG﹕ #06 pc 0001a6cd /system/lib/libbinder.so (android::BBinder::transact(unsigned int, android::Parcel const&, android::Parcel*, unsigned int)+60)\n06-10 12:58:21.764 270-270/? I/DEBUG﹕ #07 pc 0001f77b /system/lib/libbinder.so (android::IPCThreadState::executeCommand(int)+582)\n06-10 12:58:21.764 270-270/? I/DEBUG﹕ #08 pc 0001f89f /system/lib/libbinder.so (android::IPCThreadState::getAndExecuteCommand()+38)\n06-10 12:58:21.764 270-270/? I/DEBUG﹕ #09 pc 0001f8e1 /system/lib/libbinder.so (android::IPCThreadState::joinThreadPool(bool)+48)\n06-10 12:58:21.764 270-270/? I/DEBUG﹕ #10 pc 00023a5f /system/lib/libbinder.so\n06-10 12:58:21.764 270-270/? I/DEBUG﹕ #11 pc 000104d5 /system/lib/libutils.so (android::Thread::_threadLoop(void*)+112)\n06-10 12:58:21.764 270-270/? I/DEBUG﹕ #12 pc 00010045 /system/lib/libutils.so\n06-10 12:58:21.764 270-270/? I/DEBUG﹕ #13 pc 00016173 /system/lib/libc.so (__pthread_start(void*)+30)\n06-10 12:58:21.764 270-270/? I/DEBUG﹕ #14 pc 0001409b /system/lib/libc.so (__start_thread+6)\n```\n\nCan you please investigate this issue?\nKind regards,\n\nMoacir\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1588/comments",
    "author": "moacir69",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-06-10T11:19:09Z",
        "body": "I suspect it's by design that PlayReady is only supported using `KEY_TYPE_STREAMING`. It seems questionable that you'd ever need support for `KEY_TYPE_OFFLINE` given AndroidTV devices are not really expected to have intermittent internet connectivity. Please could you clarify what the use case is?\n"
      },
      {
        "user": "moacir69",
        "created_at": "2016-06-10T11:35:31Z",
        "body": "Hi,\nDo you mean that KEY_TYPE_OFFLINE support is currently not implemented?\nIn this use-case, if you force stop the application you should be able to reuse the licenses in order t play a content when, for example, the device is in airplane mode and the content is already downloaded.\n"
      },
      {
        "user": "ojw28",
        "created_at": "2016-06-10T11:38:51Z",
        "body": "The first log snippet that you've posted pretty much says `KEY_TYPE_OFFLINE` isn't supported for PlayReady: \n\n> PlayReadyDrmPlugin﹕ getKeyRequest failed since only streaming type is supported\n\nMy assumption is that this is by design, since PlayReady is only supported on AndroidTV devices, and, well, why would an AndroidTV device ever be in airplane mode?\n"
      },
      {
        "user": "moacir69",
        "created_at": "2016-06-10T11:46:11Z",
        "body": "Sorry, I meant if you force-stop the application.\nThe environment is a secure video streaming SDK which allows to acquire content licenses through a payment method. If the licenses are not persistent, that will force an user to pay for a new license when the previously acquired one has not yet expired.\n"
      },
      {
        "user": "ojw28",
        "created_at": "2016-06-10T12:22:27Z",
        "body": "Given it appears that the PlayReady plugin only supports streaming type licenses, I doubt there's support for the model you're suggesting. It's likely that the Widevine plugin does support this model across all AndroidTV devices, but I'm not 100% certain. @wvpaf could confirm.\n\nThe model you're suggesting sounds pretty flaky in general, to be honest, since it sounds like the user has no way to recover the license if something goes wrong (if there were a way to do this, you could use it to solve the issue that you describe). All services I'm aware of use `KEY_TYPE_STREAMING` for AndroidTV, and have a server-side solution that knows what each user has purchased. If you have this information, then you can issue streaming licenses accordingly.\n"
      },
      {
        "user": "ojw28",
        "created_at": "2016-06-10T12:23:01Z",
        "body": "@wvpaf - Could you confirm that the above is correct? Thanks!\n"
      },
      {
        "user": "moacir69",
        "created_at": "2016-06-10T12:47:10Z",
        "body": "Hi,\nIndeed that is controlled by the server, but if for some reason there is no Internet connection, it will not be possible to watch a downloaded content which still has a valid license.\nThank you,\n\nMoacir\n"
      },
      {
        "user": "ojw28",
        "created_at": "2016-06-10T12:48:37Z",
        "body": "As noted above, lack of internet connectivity is not really a valid concern for AndroidTV devices.\n"
      },
      {
        "user": "wvpaf",
        "created_at": "2016-06-21T13:48:06Z",
        "body": "ojw28@ we will have to check with the implementers of the PlayReady on Android. However, I do believe you are correct the implementation is limited to Android TVs and does not have a use case for downloaded offline content.\n"
      },
      {
        "user": "wvpaf",
        "created_at": "2016-06-21T21:34:32Z",
        "body": "Verified. PlayReady is Android TV only, and there is no 'offline use' case.\n"
      },
      {
        "user": "moacir69",
        "created_at": "2016-06-22T09:07:08Z",
        "body": "Thank you for your feedback. There is a similar case, this time when using MediaDrm.KEY_TYPE_STREAMING, but I will report that in a different issue\n"
      }
    ]
  },
  {
    "number": 1571,
    "title": "Support Scalable Video Coding (SVC-DASH)?",
    "created_at": "2016-06-03T16:33:03Z",
    "closed_at": "2016-06-09T22:09:43Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1571",
    "body": "Does Exoplayer support Scalable Video Coding, or in the future?\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1571/comments",
    "author": "akamigishi",
    "comments": [
      {
        "user": "Ood-Tsen",
        "created_at": "2016-06-06T03:03:00Z",
        "body": "No ,\nI don't find any player on Android do support SVC.\n"
      },
      {
        "user": "ojw28",
        "created_at": "2016-06-09T22:09:43Z",
        "body": "@Ood-Tsen is correct. Note that since ExoPlayer uses Android's platform decoders, any support would likely rely on changes being made to the underlying platform, in addition to changes to ExoPlayer.\n"
      },
      {
        "user": "Ood-Tsen",
        "created_at": "2016-06-15T10:01:34Z",
        "body": "Basically, Scalable Video Coding (SVC) is multiple pass video decoding.\nIt require one pass to decode base layer and another pass to decode elementary layers for a single video frame. But in ExoPlayer,  it is only one pass. One video data in and one decoded data out. \n\nIt's not that simple to integrate SVC on ExoPlayer. Not only lack of video codec but also need to keep decoded base layer data for elementary layer decoding. \n"
      },
      {
        "user": "akamigishi",
        "created_at": "2016-06-16T19:36:00Z",
        "body": "Thank you very much Ood-Tsen and ojw28!\n"
      }
    ]
  },
  {
    "number": 1570,
    "title": "Get Bitrate in HLS streaming",
    "created_at": "2016-06-03T06:30:48Z",
    "closed_at": "2016-08-23T20:25:01Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1570",
    "body": "I am trying to get Bitrate information for HLS streaming. I found below method:\n\n@Override\n    public void onBandwidthSample(int elapsedMs, long bytes, long bitrateEstimate) {\n        Log.e(TAG, \"bandwidth [\" + getSessionTimeString() + \", \" + bytes + \", \"\n                + getTimeString(elapsedMs) + \", \" + bitrateEstimate + \"]\");\n    }\n\nIt gets called for DASH and others, but not for HLS. \nCould anyone help me in calculating Bitrate out of HLS videos?\n\nThanks.\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1570/comments",
    "author": "abhirav",
    "comments": [
      {
        "user": "iNdieboyjeff",
        "created_at": "2016-06-15T08:52:13Z",
        "body": "In onLoadCompleted() I do the following\n\n```\n      if (sourceId == TYPE_VIDEO) {\n            videoFormat = format;\n            mVideoBitrate = format.bitrate;\n        } else if (sourceId == TYPE_AUDIO) {\n            mAudioBitrate = format.bitrate;\n        }\n Log.d(\"ExoPlayer\", \"Using bitrate: \" + ((mAudioBitrate + mVideoBitrate)/1000) + \"kbps\" + (videoFormat != null ?  \" (\" + videoFormat.id + \", \" + videoFormat.codecs + \")\" : \"\"));\n```\n"
      }
    ]
  },
  {
    "number": 1558,
    "title": "Extracting files from CacheDataSource ",
    "created_at": "2016-05-29T13:59:06Z",
    "closed_at": "2016-08-23T20:10:17Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1558",
    "body": "is there a way to extract a file from the cache when using a CacheDataSource?\nor at least get a URI reference to it?\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1558/comments",
    "author": "pantos27",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-08-23T20:10:17Z",
        "body": "This is not something we support.\n"
      }
    ]
  },
  {
    "number": 1555,
    "title": "How often exoplayer will refresh the manifest file",
    "created_at": "2016-05-26T15:35:43Z",
    "closed_at": "2016-08-23T20:07:37Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1555",
    "body": "Hi,\nWe have this following manifest file. Send to email to dev.exoplayer with issue id as subject.\n\nIn the server, only once i can see exoplayer requesting for the manifest file. After that I can see only chunks are requested. I have given max age for *.mpd as 5s too.\n\nAlso, if we dont specify max age in http headers, will exoplayer use the UTC time specified in the manifest file?\n\n```\n <UTCTiming schemeIdUri=\"urn:mpeg:dash:utc:direct:2012\" value=\"2016-05-26T11:37:23.586Z\" />\n```\n\nWe are getting BehindLiveWindow exception. So we are checking what can be the issue.\n\nAlso how many chunks can be downloaded using this manifest? I couldn't make out and I can see player is playing it ~30 minutes then it freezes with BehindLiveWindowException. \n\nRegards,\nRandeep\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1555/comments",
    "author": "randeeppr",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-08-23T20:07:37Z",
        "body": "minimumUpdatePeriod in the manifest is set to 42 years, which indicates to the player that it doesn't need to refresh it. The way the manifest is setup, that's probably correct. SegmentTemplate is used, which means the player doesn't need to update the manifest to work out the location of segments as they come available. The UTCTiming element allows the player to synchronize its clock (approximately) with that of the server's.\n\nSo, I can't see anything obviously wrong. We'd need a working test stream to provide further assistance.\n"
      }
    ]
  },
  {
    "number": 1552,
    "title": "Exoplayer error list",
    "created_at": "2016-05-25T09:44:56Z",
    "closed_at": "2016-06-19T21:58:42Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1552",
    "body": "Hi,\nWe would like to know if there is a list of errors that the Exoplayer generates and passes to the client during streaming. IF yes would it be possible to get the full list and for each one some additional info in order to understand when they can happen?\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1552/comments",
    "author": "replystreaming",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-06-19T21:58:42Z",
        "body": "The injectable/extensible nature of ExoPlayer and the dependencies it has on the Android platform mean that it's not feasible to provide a single authoritative list of all errors.\n\nEach exception class should be documented sufficiently well for you to understand what that error is, however. If you're aware of specific exceptions that are being thrown where there's insufficient information to help you understand when they can happen, and in the unlikely event that the exception stack trace doesn't help you to resolve your uncertainty, then please let us know.\n"
      }
    ]
  },
  {
    "number": 1542,
    "title": "ExoPlayer fails to playback HEVC/AVC hybrid profile HLS v3 ",
    "created_at": "2016-05-19T04:50:09Z",
    "closed_at": "2017-01-30T21:55:06Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1542",
    "body": "Exoplayer version: 1.5.7\nDevice: nexus 10\nExoplayer works perfectly with AVC only or HEVC only playlists. However, following errors occurs when the playlist contains both AVC and HEVC.\n1. Audio stream doesn't work for some streams.\n2. message \"This device does not provide a decoder for application/id3\" appears for selecting a few streams.\n\nThe bug report and ftp connection for the test files will be sent to dev.exoplayer@gmail.com.\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1542/comments",
    "author": "wcsiu",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-05-24T10:41:15Z",
        "body": "How do you expect players to handle this type of playlist? I think most clients would pick either AVC or HEVC, rather than mixing the two during playback. On Andorid at least, it's not easy to support seamless switching between AVC and HEVC because they use completely different decoders.\n\nIf you do expect a client to pick either AVC or HEVC, then why not just have a separate playlist for each?\n"
      },
      {
        "user": "hoimingw",
        "created_at": "2016-05-26T03:59:36Z",
        "body": "Hi ojw28,\n\nThanks for your response. People might choose HEVC and AVC for high and low profiles, respectively. Decoder has to be reinitialized during stream switching, so why it makes difference for switching between HEVC/AVC and AVC/AVC?\n\nThanks,\n"
      },
      {
        "user": "ojw28",
        "created_at": "2016-05-26T06:54:43Z",
        "body": "Decoders on Android support seamless adaptive reconfiguration, but switching between AVC and HEVC would require releasing one decoder and acquiring another. The former is likely to be significantly smoother than the latter.\n\nI'm still not entirely convinced about the justification for mixing AVC and HEVC. If a device supports HEVC and if you're going to provide HEVC transcodes, then why would you serve the low quality variants in AVC when you could save a whole bunch of bandwidth by serving them using HEVC too?\n"
      },
      {
        "user": "hoimingw",
        "created_at": "2016-05-31T03:32:46Z",
        "body": "Hi ojw28,\n\nUnderstood. Thanks for the explanation.\n\nThanks,\nHoi Ming\n"
      }
    ]
  },
  {
    "number": 1530,
    "title": "How to stop video in recyclerview when scroll or replace fragment same facebook app. Thanks you",
    "created_at": "2016-05-14T06:24:44Z",
    "closed_at": "2016-05-16T08:59:10Z",
    "labels": [
      "question",
      "wont fix: infeasible"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1530",
    "body": "I wants to stop video same video in facebook app. Please help me.\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1530/comments",
    "author": "nguyenngan",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-05-16T08:59:10Z",
        "body": "We don't have any control over Facebook's application.\n"
      },
      {
        "user": "ghost",
        "created_at": "2016-05-18T07:33:09Z",
        "body": "when onAttachedToWindow init it. and onDetachedFromWindow release it..\nhope that can help u.\n"
      }
    ]
  },
  {
    "number": 1514,
    "title": "ssl issue with the demo player",
    "created_at": "2016-05-10T11:30:50Z",
    "closed_at": "2016-05-22T19:13:02Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1514",
    "body": "Hi,\n\nWe have enabled ssl on our widevine proxy. After that it is giving this error. Do we have to add CA certificate explicitly? Because other apps are working without issues with same certificate.\nWe are using ssl certificate from Godaddy. \n\n```\nE/ExoPlayerImplInternal( 2112): com.google.android.exoplayer.ExoPlaybackException: javax.net.ssl.SSLHandshakeException: java.security.cert.CertPathValidatorException: Trust anchor for certification path not found.\nE/ExoPlayerImplInternal( 2112):         at com.google.android.exoplayer.MediaCodecTrackRenderer.shouldWaitForKeys(MediaCodecTrackRenderer.java:694)\nE/ExoPlayerImplInternal( 2112):         at com.google.android.exoplayer.MediaCodecTrackRenderer.feedInputBuffer(MediaCodecTrackRenderer.java:644)\nE/ExoPlayerImplInternal( 2112):         at com.google.android.exoplayer.MediaCodecTrackRenderer.doSomeWork(MediaCodecTrackRenderer.java:473)\nE/ExoPlayerImplInternal( 2112):         at com.google.android.exoplayer.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:431)\nE/ExoPlayerImplInternal( 2112):         at com.google.android.exoplayer.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:213)\nE/ExoPlayerImplInternal( 2112):         at android.os.Handler.dispatchMessage(Handler.java:98)\nE/ExoPlayerImplInternal( 2112):         at android.os.Looper.loop(Looper.java:136)\nE/ExoPlayerImplInternal( 2112):         at android.os.HandlerThread.run(HandlerThread.java:61)\nE/ExoPlayerImplInternal( 2112):         at com.google.android.exoplayer.util.PriorityHandlerThread.run(PriorityHandlerThread.java:40)\nE/ExoPlayerImplInternal( 2112): Caused by: javax.net.ssl.SSLHandshakeException: java.security.cert.CertPathValidatorException: Trust anchor for certification path not found.\nE/ExoPlayerImplInternal( 2112):         at com.android.org.conscrypt.OpenSSLSocketImpl.startHandshake(OpenSSLSocketImpl.java:410)\nE/ExoPlayerImplInternal( 2112):         at com.android.okhttp.Connection.upgradeToTls(Connection.java:146)\nE/ExoPlayerImplInternal( 2112):         at com.android.okhttp.Connection.connect(Connection.java:107)\nE/ExoPlayerImplInternal( 2112):         at com.android.okhttp.internal.http.HttpEngine.connect(HttpEngine.java:294)\nE/ExoPlayerImplInternal( 2112):         at com.android.okhttp.internal.http.HttpEngine.sendSocketRequest(HttpEngine.java:255)\nE/ExoPlayerImplInternal( 2112):         at com.android.okhttp.internal.http.HttpEngine.sendRequest(HttpEngine.java:206)\nE/ExoPlayerImplInternal( 2112):         at com.android.okhttp.internal.http.HttpURLConnectionImpl.execute(HttpURLConnectionImpl.java:345)\nE/ExoPlayerImplInternal( 2112):         at com.android.okhttp.internal.http.HttpURLConnectionImpl.connect(HttpURLConnectionImpl.java:89)\nE/ExoPlayerImplInternal( 2112):         at com.android.okhttp.internal.http.HttpURLConnectionImpl.getOutputStream(HttpURLConnectionImpl.java:197)\nE/ExoPlayerImplInternal( 2112):         at com.android.okhttp.internal.http.HttpsURLConnectionImpl.getOutputStream(HttpsURLConnectionImpl.java:254)\nE/ExoPlayerImplInternal( 2112):         at com.google.android.exoplayer.util.Util.executePost(Util.java:692)\nE/ExoPlayerImplInternal( 2112):         at com.google.android.exoplayer.demo.WidevineTestMediaDrmCallback.executeKeyRequest(WidevineTestMediaDrmCallback.java:60)\nE/ExoPlayerImplInternal( 2112):         at com.google.android.exoplayer.drm.StreamingDrmSessionManager$PostRequestHandler.handleMessage(StreamingDrmSessionManager.java:505)\nE/ExoPlayerImplInternal( 2112):         at android.os.Handler.dispatchMessage(Handler.java:102)\nE/ExoPlayerImplInternal( 2112):         at android.os.Looper.loop(Looper.java:136)\nE/ExoPlayerImplInternal( 2112):         at android.os.HandlerThread.run(HandlerThread.java:61)\nE/ExoPlayerImplInternal( 2112): Caused by: java.security.cert.CertificateException: java.security.cert.CertPathValidatorException: Trust anchor for certification path not found.\nE/ExoPlayerImplInternal( 2112):         at com.android.org.conscrypt.TrustManagerImpl.checkTrusted(TrustManagerImpl.java:282)\nE/ExoPlayerImplInternal( 2112):         at com.android.org.conscrypt.TrustManagerImpl.checkServerTrusted(TrustManagerImpl.java:202)\nE/ExoPlayerImplInternal( 2112):         at com.android.org.conscrypt.OpenSSLSocketImpl.verifyCertificateChain(OpenSSLSocketImpl.java:612)\nE/ExoPlayerImplInternal( 2112):         at com.android.org.conscrypt.NativeCrypto.SSL_do_handshake(Native Method)\nE/ExoPlayerImplInternal( 2112):         at com.android.org.conscrypt.OpenSSLSocketImpl.startHandshake(OpenSSLSocketImpl.java:406)\nE/ExoPlayerImplInternal( 2112):         ... 15 more\nE/ExoPlayerImplInternal( 2112): Caused by: java.security.cert.CertPathValidatorException: Trust anchor for certification path not found.\nE/ExoPlayerImplInternal( 2112):         ... 20 more\n```\n\nPlease guide,\n\nRegards,\nRandeep\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1514/comments",
    "author": "randeeppr",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-05-10T16:05:51Z",
        "body": "Have you looked around for solutions to the exception (\"Trust anchor for certification path not found\")? It feels to me like something is wrong with your setup.\n"
      }
    ]
  },
  {
    "number": 1512,
    "title": "STATE_ENDED not called if the video renderer surface is null.",
    "created_at": "2016-05-09T19:08:29Z",
    "closed_at": "2016-05-10T22:14:01Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1512",
    "body": "I have this method below to show/hide the surface. \n\n```\npublic void setDisplay(boolean shouldShow) {\n    Surface surface = PlayerFragment.mPreview.getHolder().getSurface();\n\n    if (videoRenderer == null) {\n        return;\n    }\n\n    if (shouldShow) {\n        exoPlayer.sendMessage(\n                videoRenderer, MediaCodecVideoTrackRenderer.MSG_SET_SURFACE, surface);\n    } else {\n        exoPlayer.blockingSendMessage(\n                videoRenderer, MediaCodecVideoTrackRenderer.MSG_SET_SURFACE, null);\n    }\n}\n```\n\nIf shouldshow is false, the player continues to receive the STATE_READY, STATE_BUFFERING, and STATE_PREPARING callbacks. Once the player reaches the end however, the STATE_ENDED callback is not called. \n\nIf shouldshow is true, the player receives all of the callbacks including STATE_ENDED.\n\nIs there something else that needs to be set to get the STATE_ENDED callback when the surface is null? I am using a Nexus 6p on Android 6.0.1 with Exoplayer r1.5.7. \n\nThanks.\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1512/comments",
    "author": "spalmerin21",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-05-10T10:09:59Z",
        "body": "Do you need to actually unset the surface, or can you achieve what you're trying to achieve some other way? What's the use case exactly? Will the surface be hidden for a potentially extended period of time?Normally you should disable the video renderer in such cases, rather than leaving it enabled but without a surface.\n"
      },
      {
        "user": "ojw28",
        "created_at": "2016-05-10T22:14:01Z",
        "body": "Let's use #1520 to track this, since it's the same question but the issue contains more information.\n"
      }
    ]
  },
  {
    "number": 1503,
    "title": "How to know when ExoPlayer and all it's resources are released",
    "created_at": "2016-05-05T17:01:23Z",
    "closed_at": "2017-11-01T15:30:02Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1503",
    "body": "We've wrapped DemoPlayer and have written an API so that we can show videos in a ViewPager and provided continuous playback across orientation changes. When a page changes we release the necessary resources (AFAIK) and prepare a new DemoPlayer instance with the next video for playback.\n\nWe are having an issue where swiping quickly through the pages across many videos eventually produces a crash stemming from an OOM. \n\nHere is how we are releasing:\n\n``` java\ndemoPlayer.blockingClearSurface();\n\nif (mSurface != null) {\n    surface.release();\n}\n\ndemoPlayer.release();\n```\n\nAre any of these non-synchronous in any way? That would prevent us from doing proper cleanup before the next prepare because we expect that these calls are synchronous.\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1503/comments",
    "author": "cperry-gpsw",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2017-11-01T15:30:02Z",
        "body": "`Player.release` has an asynchronous part to it, but it should be fine to release one player and instantiate the next without having to worry about an overlap in resource allocation. The situation may be better in V2 than in V1, so if you're still using V1 that might be relevant. If it's still a problem with V2, please let us know.\r\n\r\nNote also that there's no need to release the player and instantiate a new one. You can just re-prepare the existing instance, which would be an easy way to avoid any uncertainty around resources not yet having been released."
      }
    ]
  },
  {
    "number": 1501,
    "title": "Question: Using existing components with multiple instances of Exoplayer",
    "created_at": "2016-05-05T12:18:38Z",
    "closed_at": "2016-05-06T12:54:20Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1501",
    "body": "I'm playing audio from MP3 files and I'm using two instances of Exoplayer, one to play and one to hold and prepare the next track for gapless playback.\n\nMy question is which of the Exoplayer components can be re-used and static and which needs to be recreated?\nSome of the components I'm using:\nOkHttpClient\nOkHttp3.CacheControl\nOkHttpDataSource\nExtractorSampleSource\nMp3Extractor\nMetadataTrackRenderer\nId3Parser\n\nThanks\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1501/comments",
    "author": "pantos27",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-05-06T12:47:04Z",
        "body": "I'm not sure about OkHttpCilent and OkHttp3.CacheControl, but for everything else you should be creating fresh instances (i.e. they should not be shared between players).\n"
      },
      {
        "user": "pantos27",
        "created_at": "2016-05-06T12:54:20Z",
        "body": "Ok, thanks.\n\nShould I ignore this log message then?\n_OMXMaster: A component of name 'OMX.qcom.audio.decoder.aac' already exists, ignoring this one._\n"
      },
      {
        "user": "pantos27",
        "created_at": "2016-05-06T12:54:49Z",
        "body": "oops.\nClosed by mistake\n"
      },
      {
        "user": "ojw28",
        "created_at": "2016-05-06T12:57:48Z",
        "body": "Yes, that message can be safely ignored (I'm not really sure why the platform prints that, but oh well!).\n"
      }
    ]
  },
  {
    "number": 1498,
    "title": "Android TV Exoplayer controls",
    "created_at": "2016-05-04T11:11:35Z",
    "closed_at": "2016-05-04T11:12:46Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1498",
    "body": "I couldn't find any example or tutorial for creating custom controlls for Exoplayer which would be functional on Android TV ( focusable with D-pad). Could someone give me hint how to do it ?\nThanks.\nDavid\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1498/comments",
    "author": "YuckFo",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-05-04T11:12:46Z",
        "body": "The ExoPlayer library does not provide UI components; you need to build those yourself and have them call in to ExoPlayer (e.g. to start/stop playback when your play/pause buttons are pressed).\n"
      }
    ]
  },
  {
    "number": 1483,
    "title": "Best way to get the playing time for MediaController",
    "created_at": "2016-04-28T09:23:01Z",
    "closed_at": "2016-09-09T21:04:53Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1483",
    "body": "Hi, I've implemented an early version of an RTSP client. I connect to an RTSP server and receive a TS stream. The RTSP client runs on a different thread and finally demoplayer has access to some information from this client.\n The RTSP server gives me information about duration of the program, but I can't get an straight way to put that duration into H264Reader or MpegAudioReader to create the format info including this duration. I think that if this info is provided MediaController would have access to the position.\nAll my options are going to mess up the current implementation. Can anybody think of a clean way to pass the duration parameter from my client to the Readers?\n\nThanks!\n\nOscar\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1483/comments",
    "author": "opatino",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-09-09T21:04:53Z",
        "body": "I think this is custom enough to be outside the scope of this issue tracker, sorry.\n"
      }
    ]
  },
  {
    "number": 1481,
    "title": "Can't suppurt flv format to seek",
    "created_at": "2016-04-28T08:15:50Z",
    "closed_at": "2016-04-28T08:52:46Z",
    "labels": [
      "question",
      "wont fix: infeasible"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1481",
    "body": "flvxtractor.java\n\nthe isSeekAble return false.\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1481/comments",
    "author": "mandagod",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-04-28T08:52:46Z",
        "body": "If you want to be able to seek, you should use a container format that's better designed for seeking (e.g. MP4). Not supporting seeking in containers that don't make seeking easy, such as FLV, is working as intended. See #860 for a little more detail.\n"
      },
      {
        "user": "mandagod",
        "created_at": "2016-05-04T10:00:39Z",
        "body": "@ojw28  Thanks.\n"
      }
    ]
  },
  {
    "number": 1480,
    "title": "Question: is it possible to read multiple video track/audio track at the same time?",
    "created_at": "2016-04-27T20:07:17Z",
    "closed_at": "2016-05-02T11:13:56Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1480",
    "body": "Since version 1.5.0, ExoPlayer supports multi-track.\nIs it possible to grab two video track at the same time? One would be drawn to the surface and another doesn't need to be. I just need to get the raw bytes. If so, would they be frame accurately synchronized?\n\nSame question for audio. Is it possible to grab two audio track at the same time? One would be playing but another doesn't need to be. I just need to get the raw bytes. If so, would they be frame accurately synchronized?\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1480/comments",
    "author": "jclova",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-05-02T11:13:56Z",
        "body": "It's probably possible to extend ExoPlayer to do this kind of thing, but it's beyond the scope of the library directly and of this issue tracker.\n"
      },
      {
        "user": "djdance",
        "created_at": "2016-05-09T12:17:50Z",
        "body": "why closed? i also need to know, Is it possible to grab two audio track at the same time? \nby default, using new multi-track feature, via 1 ExoPlayer instance?\n"
      }
    ]
  },
  {
    "number": 1475,
    "title": "Question: Why is the bandwidth fraction to find effective bandwidth different between DASH/SS & HLS",
    "created_at": "2016-04-26T14:52:44Z",
    "closed_at": "2016-05-02T11:56:14Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1475",
    "body": "I have a question.\n\nThe bandwidth meter gives an estimated bandwidth to HlsChunkSource & AdaptiveFormatEvaluator. I do understand the need of considering only a fraction of the estimated bandwidth due to inaccuracies in the estimated bandwidth. However, why is the fraction value different between HLS and SS/DASH?\n\nAdaptiveFormatEvaluator (used for DASH & SS) uses 0.75 as the default bandwidth fraction, whereas HlsChunkSource considers 0.8.  Is there a reasoning behind this decision or a side-effect of different implementations.\n\nI saw one of your comments on a different issue that in V2 of Exoplayer , you would start using FormatEvaluator for HLS too. This will unify the values eventually, am I right?.\n\nAnother related question is that if the user of bandwidth meter has to account for inaccuracies, won't it be good to handle it inside bandwidth meter itself? That way, anybody that uses Bandwidth meter gets the final bandwidth to be used for decision making and the decision making is consistent across all streaming formats.\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1475/comments",
    "author": "peddisri",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-05-02T11:56:14Z",
        "body": "- Yes, HLS will use FormatEvaluator in V2.\n- I suspect there isn't a really good reason behind the chosen values being different, however it should be noted that there are differences between DASH/SS and HLS that could require legitimately different fractions. Specifically (1) In DASH/SS audio is demuxed and will require some bandwidth of its own, where-as in HLS the audio is typically, but not always, muxed with the video (2) For HLS it's necessary to download overlapping chunks when switching qualities, where-as for DASH/SS this is not required.\n"
      },
      {
        "user": "peddisri",
        "created_at": "2016-05-02T16:30:14Z",
        "body": "Thanks @ojw28 . I guessed this reason - but was curious to know how were these specific numbers were decided? Did the team do some kind of stream analysis? Anyways, thanks for the answer.! Really appreciate it.\n"
      },
      {
        "user": "ojw28",
        "created_at": "2016-05-03T11:31:41Z",
        "body": "I don't think they've been fine tuned, if that's your question. In reality the optimal number is dependent on the serving side as well as the client. For example the cost of an edge cache miss on the serving side likely affects what the optimal number should be. So it's unlikely that a single best value exists, and if you have the time and the urge it's worth doing your own studies to try and find the best value for your specific use case.\n"
      },
      {
        "user": "peddisri",
        "created_at": "2016-05-09T17:45:32Z",
        "body": "@ojw28 Thanks for the response.\n"
      }
    ]
  },
  {
    "number": 1469,
    "title": "[Question] Tracking Playback in HLS",
    "created_at": "2016-04-25T14:30:04Z",
    "closed_at": "2016-04-28T09:12:05Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1469",
    "body": "Hello, \n\nThanks for the great lib. I am streaming HLS (m3u8 files) for an audio app I'm building. I need to be able to track how much of the audio has been listened to. I'm having a difficult time trying to figure out where to hook into the player to gather this information. Is this possible? If so, what class/listener should I look at? Thanks!\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1469/comments",
    "author": "donnfelker",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-04-25T14:37:01Z",
        "body": "What's wrong with `ExoPlayer.getCurrentPosition` and `ExoPlayer.getDuration`?\n"
      },
      {
        "user": "donnfelker",
        "created_at": "2016-04-27T22:05:28Z",
        "body": "Seems to me it's a PEBCAK error in this case (me). 😄   Thanks for the quick tip @ojw28, not sure why I didn't see that before (facepalm). \n"
      }
    ]
  },
  {
    "number": 1463,
    "title": "Handling onRenderersError and ExoPlayer.Listener errors",
    "created_at": "2016-04-22T14:14:35Z",
    "closed_at": "2016-04-25T09:30:53Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1463",
    "body": "My ExoPlayer wrapper class implements ExoPlayer.Listener and my Activity also implements this ExoPlayer.Listener. \n\nOn the \n`public void onError(Exception e)` \n\nof the activity, what instances of Exceptions should I try to reset and play the stream again? Only instances of ExoPlaybackException?\n\nAlso is the best way to retry\n`playerNeedsPrepare = true;`\n `preparePlayer(true);`\n\nThanks.\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1463/comments",
    "author": "j-t-h",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-04-25T09:30:53Z",
        "body": "`ExoPlayer.Listener` doesn't define an `onError(Exception e)` method, it defines `onPlayerError(ExoPlaybackException)`, so I'm a little unsure as to what question you're asking.\n\nIn general though, `onPlayerError(ExoPlaybackException)` will only be called for errors where the player has failed to recover internally, or doesn't think that it will be able to. So you shouldn't retry automatically in any case when this method is invoked. It's more appropriate to display a retry button to the user, to allow them to retry manually if they wish to do so.\n"
      },
      {
        "user": "j-t-h",
        "created_at": "2016-04-25T13:57:40Z",
        "body": "Sorry for the confusion. I have my activity that extends the ExoPlayer.Listener.\n\nReading early posts about the BehindLiveWindowException, although you stated that the source of the stream should be addressed, it was also said that retrying was the next best solution.\n\nIn the activity that contains the ExoPlayer object, my listener\n\n```\n@Override\npublic void onError(Exception e) {\n```\n\nI have \n\n```\nelse if (e instanceof ExoPlaybackException && e.getCause() instanceof BehindLiveWindowException) {\n     _playerNeedsPrepare = true;\n    preparePlayer(true);\n}\n```\n\nIs this acceptable or should I be doing something else?\n\nHere are some examples of the other exceptions I am seeing\n\nNon-fatal Exception:\n\n```\ncom.google.android.exoplayer.ExoPlaybackException: java.lang.IllegalStateException\n       at com.google.android.exoplayer.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:246)\n       at android.os.Handler.dispatchMessage(Handler.java:95)\n       at android.os.Looper.loop(Looper.java:137)\n       at android.os.HandlerThread.run(HandlerThread.java:60)\n       at com.google.android.exoplayer.util.PriorityHandlerThread.run(PriorityHandlerThread.java:40)\nCaused by java.lang.IllegalStateException\n       at android.media.MediaCodec.queueInputBuffer(MediaCodec.java)\n       at com.google.android.exoplayer.MediaCodecTrackRenderer.feedInputBuffer(MediaCodecTrackRenderer.java:672)\n       at com.google.android.exoplayer.MediaCodecTrackRenderer.doSomeWork(MediaCodecTrackRenderer.java:492)\n       at com.google.android.exoplayer.SampleSourceTrackRenderer.doSomeWork(SampleSourceTrackRenderer.java:129)\n       at com.google.android.exoplayer.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:431)\n       at com.google.android.exoplayer.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:213)\n       at android.os.Handler.dispatchMessage(Handler.java:95)\n       at android.os.Looper.loop(Looper.java:137)\n       at android.os.HandlerThread.run(HandlerThread.java:60)\n       at com.google.android.exoplayer.util.PriorityHandlerThread.run(PriorityHandlerThread.java:40)\n```\n\nNon-fatal Exception: \n\n```\ncom.google.android.exoplayer.ExoPlaybackException: java.lang.IllegalStateException: Buffer too small (176640 < 176699)\n       at com.google.android.exoplayer.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:246)\n       at android.os.Handler.dispatchMessage(Handler.java:95)\n       at android.os.Looper.loop(Looper.java:137)\n       at android.os.HandlerThread.run(HandlerThread.java:60)\n       at com.google.android.exoplayer.util.PriorityHandlerThread.run(PriorityHandlerThread.java:40)\nCaused by java.lang.IllegalStateException: Buffer too small (176640 < 176699)\n       at com.google.android.exoplayer.SampleHolder.createReplacementBuffer(SampleHolder.java:148)\n       at com.google.android.exoplayer.SampleHolder.ensureSpaceForWrite(SampleHolder.java:100)\n       at com.google.android.exoplayer.extractor.RollingSampleBuffer.readSample(RollingSampleBuffer.java:189)\n       at com.google.android.exoplayer.extractor.DefaultTrackOutput.getSample(DefaultTrackOutput.java:142)\n       at com.google.android.exoplayer.hls.HlsExtractorWrapper.getSample(HlsExtractorWrapper.java:201)\n       at com.google.android.exoplayer.hls.HlsSampleSource.readData(HlsSampleSource.java:338)\n       at com.google.android.exoplayer.SampleSourceTrackRenderer.readSource(SampleSourceTrackRenderer.java:209)\n       at com.google.android.exoplayer.MediaCodecTrackRenderer.feedInputBuffer(MediaCodecTrackRenderer.java:588)\n       at com.google.android.exoplayer.MediaCodecTrackRenderer.doSomeWork(MediaCodecTrackRenderer.java:492)\n       at com.google.android.exoplayer.SampleSourceTrackRenderer.doSomeWork(SampleSourceTrackRenderer.java:129)\n       at com.google.android.exoplayer.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:431)\n       at com.google.android.exoplayer.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:213)\n       at android.os.Handler.dispatchMessage(Handler.java:95)\n       at android.os.Looper.loop(Looper.java:137)\n       at android.os.HandlerThread.run(HandlerThread.java:60)\n       at com.google.android.exoplayer.util.PriorityHandlerThread.run(PriorityHandlerThread.java:40)\n```\n"
      },
      {
        "user": "ojw28",
        "created_at": "2016-04-25T14:08:21Z",
        "body": "- It can make sense to automatically retry for `BehindLiveWindowException` in the case that you know it's likely to occur with the source media due to the live window being too small. You'd probably want to put some kind of limit on it though; something like only allowing the automatic retry once every 30 seconds or something, so as to make sure you don't end up in an infinite cycle of retrying where the source media is completely broken.\n- The last of the stack traces you posted (buffer too small) is definitely not a recoverable exception. It's a bug where the decoder input buffer isn't large enough. Attempting to play the same piece of media again will result in exactly the same failure. You should file a separate issue for that, containing all information requested in the issue template (including a full bug report).\n- The first of the stack traces you posted should not really be considered recoverable. If that's happening mid-playback, it might be a device issue or an issue with the source media. It's not possible to tell with the information provided.\n"
      }
    ]
  },
  {
    "number": 1462,
    "title": "Support for different encryption keys for video and audio AdaptionSets",
    "created_at": "2016-04-22T13:51:58Z",
    "closed_at": "2016-04-25T14:37:29Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1462",
    "body": "Hi,\n\nThe latest security update from Widevine strongly advises that we need to use a distinct content encryption keys for video and audio tracks.\n\nFurthermore, after discussing directly, it appears that the Chrome CDM will enforce this configuration as mandatory at some point.\n\nI have tested such content against ExoPlayer 1.5.7 and it appears that the player will only currently generate 1 key request per streaming session, regardless of the fact that two different default keyIDs are specified for each AdaptionSet (in my case Audio and Video).\n\nSo my questions are \n1. Are my suppositions correct on this?\n2. Would you consider adding support for this use-case as an enhancement.  If Chrome forces this, we (and others) could potentially have no choice but to generate content that is not compatible with ExoPlayer...\n\nI will send a private mail with details on the content sample I am using to determine my findings.  \n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1462/comments",
    "author": "ghost",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-04-22T13:56:41Z",
        "body": "Use of distinct keys is not incompatible with having a single key request per session. What's supposed to happen is this:\n1. Player extracts pssh from arbitrary stream.\n2. Player makes single key request with pssh data.\n3. License server responds with _all_ of the keys that the user is entitled to for that content. So specifically, the response would include keys to play both the audio and video streams in this case.\n\nThe same approach is used today by many providers who use distinct keys for SD v.s. HD streams.\n"
      },
      {
        "user": "ojw28",
        "created_at": "2016-04-22T13:59:52Z",
        "body": "Note also that alternative approaches involving separate key requests are less efficient (more network requests) and more likely to result in playback failure (more chances to fail).\n"
      },
      {
        "user": "ghost",
        "created_at": "2016-04-22T14:11:12Z",
        "body": "Hi,\n\nThats the way key management seems to be done if you rely on Widevine cloud services to manage the encryption keys.   \n\nHowever, what you are suggesting (in my opinion) goes some way to actually mandating how a Non-Google provided key management system must actually work.   In our case, we support multipleDRMs and we expect to get (and handle) requests for a specific KeyID, not just \"give me all keys for a specific content instance\".\n\nBe aware that other DRMs (e.g. PlayReady) do not support the notion of the 'content_id' field as Widevine does    \n"
      },
      {
        "user": "ghost",
        "created_at": "2016-04-22T14:15:22Z",
        "body": "Note that the CENC spec only seems to define the KeyID as the signalling used to determine what encryption key to request/use  - it would be good that we can keep using a generic key management implementation, and not have to make Widevine specific alterations for this use-case \n"
      },
      {
        "user": "ojw28",
        "created_at": "2016-04-22T14:33:57Z",
        "body": "- I would argue that you should be implementing your key management system to return all keys when handling Widevine requests regardless, simply because it's more efficient and a better way of doing things. I doubt it's much work at all on the license server side to do this (i.e. if there's a content_id then use it and include the extra keys, if there isn't then don't). In which case a small amount of additional complexity seems well worth it. The generic version could require maintaining three DRM sessions simultaneously (SD, HD, Audio). In the case that PSSH data isn't in the manifest the generic case also requires either loading init chunks from all representations up front at the start of playback, or accepting that the first SD<->HD transition may not be seamless. Neither of these is ideal.\n- For the specific case of using different keys for audio and video, you can actually trivially achieve this already by using separate `StreamingDrmSessionManager`s for the audio and video renderers. Currently `DashRendererBuilder` in the demo app shares a single instance between both renderers, but you could create a separate instance for each to get the separate sessions. As above, I'd recommend you don't do this though (and it wont solve the SD/HD video issue). \n"
      },
      {
        "user": "ghost",
        "created_at": "2016-04-22T14:48:56Z",
        "body": "OK,\n\nI cede the point RE: efficiency.\n\nWe are only concerned with audio vs video for now so we will apply the suggested renderer configuration.\n\nThanks for the detailed explanations and helpful suggestions.\n"
      }
    ]
  },
  {
    "number": 1455,
    "title": "请问怎么播放本地视频文件啊？比如raw里面的文件",
    "created_at": "2016-04-21T10:01:53Z",
    "closed_at": "2016-04-21T17:21:50Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1455",
    "body": "请问怎么播放本地视频文件啊？比如raw里面的文件？\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1455/comments",
    "author": "snmm23",
    "comments": [
      {
        "user": "snmm23",
        "created_at": "2016-04-21T10:15:15Z",
        "body": "How can play local video ? For example raw\n"
      },
      {
        "user": "ojw28",
        "created_at": "2016-04-21T17:21:50Z",
        "body": "ExoPlayer correctly plays local file URIs of the form `file:///path/to/media/file.ext`. Beyond that, it's unclear what this issue is asking.\n"
      }
    ]
  },
  {
    "number": 1454,
    "title": "BufferDrained on switching to background",
    "created_at": "2016-04-19T16:25:31Z",
    "closed_at": "2016-04-20T15:54:59Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1454",
    "body": "When I switch application from foreground to background I get following error\n\n``` java\nE/BufferQueue: [unnamed-29079-0] queueBuffer: BufferQueue has been abandoned!\nE/Surface: queueBuffer: error queuing buffer to SurfaceTexture, -19\nE/ACodec: [OMX.MARVELL.VIDEO.HW.CODA7542DECODER] BaseState::onOutputBufferDrained returning error -19\nE/MediaCodec: Codec reported an error. (omx error 0x80001001, internalError -19)\nE/ExoPlayerImplInternal: Internal runtime error.\n                         java.lang.IllegalStateException\n                             at android.media.MediaCodec.releaseOutputBuffer(Native Method)\n                             at com.google.android.exoplayer.MediaCodecVideoTrackRenderer.renderOutputBuffer(MediaCodecVideoTrackRenderer.java:480)\n                             at com.google.android.exoplayer.MediaCodecVideoTrackRenderer.processOutputBuffer(MediaCodecVideoTrackRenderer.java:446)\n                             at com.google.android.exoplayer.MediaCodecTrackRenderer.drainOutputBuffer(MediaCodecTrackRenderer.java:914)\n                             at com.google.android.exoplayer.MediaCodecTrackRenderer.doSomeWork(MediaCodecTrackRenderer.java:512)\n                             at com.google.android.exoplayer.SampleSourceTrackRenderer.doSomeWork(SampleSourceTrackRenderer.java:129)\n                             at com.google.android.exoplayer.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:434)\n                             at com.google.android.exoplayer.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:213)\n                             at android.os.Handler.dispatchMessage(Handler.java:98)\n                             at android.os.Looper.loop(Looper.java:146)\n                             at android.os.HandlerThread.run(HandlerThread.java:61)\n                             at com.google.android.exoplayer.util.PriorityHandlerThread.run(PriorityHandlerThread.java:40)\nI/ACodec: [OMX.MARVELL.VIDEO.HW.CODA7542DECODER] Now Executing->Idle\nE/EventLogger: playerFailed [9.17]\n               com.google.android.exoplayer.ExoPlaybackException: java.lang.IllegalStateException\n                   at com.google.android.exoplayer.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:246)\n                   at android.os.Handler.dispatchMessage(Handler.java:98)\n                   at android.os.Looper.loop(Looper.java:146)\n                   at android.os.HandlerThread.run(HandlerThread.java:61)\n                   at com.google.android.exoplayer.util.PriorityHandlerThread.run(PriorityHandlerThread.java:40)\n                Caused by: java.lang.IllegalStateException\n                   at android.media.MediaCodec.releaseOutputBuffer(Native Method)\n                   at com.google.android.exoplayer.MediaCodecVideoTrackRenderer.renderOutputBuffer(MediaCodecVideoTrackRenderer.java:480)\n                   at com.google.android.exoplayer.MediaCodecVideoTrackRenderer.processOutputBuffer(MediaCodecVideoTrackRenderer.java:446)\n                   at com.google.android.exoplayer.MediaCodecTrackRenderer.drainOutputBuffer(MediaCodecTrackRenderer.java:914)\n                   at com.google.android.exoplayer.MediaCodecTrackRenderer.doSomeWork(MediaCodecTrackRenderer.java:512)\n                   at com.google.android.exoplayer.SampleSourceTrackRenderer.doSomeWork(SampleSourceTrackRenderer.java:129)\n                   at com.google.android.exoplayer.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:434)\n                   at com.google.android.exoplayer.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:213)\n                   at android.os.Handler.dispatchMessage(Handler.java:98) \n                   at android.os.Looper.loop(Looper.java:146) \n                   at android.os.HandlerThread.run(HandlerThread.java:61) \n                   at com.google.android.exoplayer.util.PriorityHandlerThread.run(PriorityHandlerThread.java:40) \n```\n\nIf i select             `player.setSelectedTrack(DemoPlayer.TYPE_VIDEO, -1);` , then i dont have this error. Unfortunatly its only help if it was set before `onPaused called`\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1454/comments",
    "author": "frakc",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-04-20T10:35:37Z",
        "body": "You're most likely trying to access surface after it's been destroyed. The ExoPlayer demo app does not suffer from these problems. I suggest you look at how it works. Specifically, look at how `PlayerActivity` implements `SurfaceHolder.Callback`, to ensure that the player doesn't try and use a surface after `surfaceDestroyed` is invoked.\n"
      },
      {
        "user": "olsisaqe",
        "created_at": "2016-04-20T11:05:00Z",
        "body": "I have a similar but not the same issue. Here is my log: \n\n`04-20 12:42:26.266 183-200/? E/Parcel: dup() failed in Parcel::read, i is 0, fds[i] is -1, fd_count is 1, error: Bad file descriptor\n04-20 12:42:26.267 183-200/? E/BufferQueueProducer: [<actvity reference>] queueBuffer: fence is NULL\n04-20 12:42:26.267 11278-11429/? E/Surface: queueBuffer: error queuing buffer to SurfaceTexture, -22`\n\nIn my case i can reproduce this only sometimes if I release the player, destory the surface and then recreate the player and the surface. If i do this at the begining it works, but after several times it gives me this error and the queueBuffer is blocked resulting in the screen being totally blocked and not redrawing anymore. \nIs it the same that I'm trying to access an destroyed surface? \n\nThanks\n"
      },
      {
        "user": "volser",
        "created_at": "2016-05-17T10:12:46Z",
        "body": "I have the same issue. My log:\n\n```\nE/BufferQueue: [unnamed-2053-10] queueBuffer: BufferQueue has been abandoned!\nE/Surface: queueBuffer: error queuing buffer to SurfaceTexture, -19\nE/MediaCodec: Codec reported an error. (omx error 0x80001001, internalError -19)\nE/ExoPlayerImplInternal: Internal runtime error.\n                                                                        java.lang.IllegalStateException\n                                                                            at android.media.MediaCodec.dequeueOutputBuffer(Native Method)\n                                                                            at com.google.android.exoplayer.MediaCodecTrackRenderer.drainOutputBuffer(MediaCodecTrackRenderer.java:889)\n                                                                            at com.google.android.exoplayer.MediaCodecTrackRenderer.doSomeWork(MediaCodecTrackRenderer.java:512)\n                                                                            at com.google.android.exoplayer.SampleSourceTrackRenderer.doSomeWork(SampleSourceTrackRenderer.java:129)\n                                                                            at com.google.android.exoplayer.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:434)\n                                                                            at com.google.android.exoplayer.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:213)\n                                                                            at android.os.Handler.dispatchMessage(Handler.java:98)\n                                                                            at android.os.Looper.loop(Looper.java:136)\n                                                                            at android.os.HandlerThread.run(HandlerThread.java:61)\n                                                                            at com.google.android.exoplayer.util.PriorityHandlerThread.run(PriorityHandlerThread.java:40)\nW/BufferQueue: [unnamed-2053-10] cancelBuffer: BufferQueue has been abandoned!\n```\n"
      },
      {
        "user": "saurabhkpatel",
        "created_at": "2016-07-23T18:56:24Z",
        "body": "@frakc : i have the same issue, how did you solve this? Can you please help me?\n"
      }
    ]
  },
  {
    "number": 1449,
    "title": "Rendering processed output buffer data as a waveform is always ahead of played audio",
    "created_at": "2016-04-16T21:54:12Z",
    "closed_at": "2016-04-17T15:47:30Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1449",
    "body": "I have extended the MediaCodecAudioTrackRenderer to get access to the output buffer to render the PCM data as a waveform.  The problem I am having is that the waveform seems to render faster than the audio being played. I assumed that once the output buffer was processed and discarded any rendering would be matched with the audio playback.  BTW: the player is using a uri datasource.  Code used is below:\n\n```\n@Override\nprotected boolean processOutputBuffer(long positionUs, long elapsedRealtimeUs, MediaCodec codec, ByteBuffer buffer, BufferInfo bufferInfo, int bufferIndex, boolean shouldSkip) throws ExoPlaybackException {\n    boolean processed = false;\n\n   //  Clone buffer \n    ByteBuffer bb = deepCopy(buffer);\n\n    processed = super.processOutputBuffer(positionUs,elapsedRealtimeUs,codec,buffer,bufferInfo, bufferIndex, shouldSkip);\n    if (processed & !shouldSkip)\n    {\n        // send data to be converted to shorts and then propogate a callback to render float data\n        transform(bb);\n        return true;\n    }\n    else\n    {\n        return false;\n    }\n}\n```\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1449/comments",
    "author": "m1c999",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-04-17T15:47:30Z",
        "body": "`MediaCodecAudioTrackRenderer.processOutputBuffer` feeds each output buffer into an `AudioTrack`, but note that an `AudioTrack` has its own audio buffer (at the platform level). So if that buffer is being kept full there will be a delay between an output buffer being processed and the corresponding audio actually being output from the device.\n\nTo do what you're wanting to do you would probably need to generate the data that you need for your visualization from each output buffer, then add that data to the back of a queue with the associated timestamp `bufferInfo.presentationTimeUs`. You could then pull items off the front of the queue and render them as `MediaCodecAudioTrackRenderer.getPositionUs()` reaches the associated timestamps.\n"
      },
      {
        "user": "m1c999",
        "created_at": "2016-04-17T16:06:47Z",
        "body": "Makes sense now.  Thanks for the pointers,  much appreciated.\n"
      }
    ]
  },
  {
    "number": 1442,
    "title": "is it possible to play DRM HLS in exoplayer?",
    "created_at": "2016-04-14T08:48:39Z",
    "closed_at": "2016-04-14T08:51:28Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1442",
    "body": "is it possible to play DRM HLS in exoplayer?\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1442/comments",
    "author": "chile-zhong",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-04-14T08:51:28Z",
        "body": "We support AES-128 with HLS in ExoPlayer. We do not currently support DRM schemes like PlayReady or Widevine with HLS. Widevine with DASH is the recommended solution for delivering DRM protected content to Android devices. PlayReady can also be used if you're targeting AndroidTV devices.\n"
      }
    ]
  },
  {
    "number": 1429,
    "title": "Only audio playing for encrypted dash(widevine modular drm) for HD(720p)",
    "created_at": "2016-04-09T09:11:19Z",
    "closed_at": "2016-09-09T21:54:54Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1429",
    "body": "Hi,\n\nI am using exoplayer(1.5.3) in android with videos encrypted in widevine Modular DRM.\nFor me all the live SD channels are playing fine.\nBut for live HD(720p) and VOD(720p) only audio is coming. \nWhat can be the reason.\n\nIn proxy, I have given the following configuration. \n\n```\nALLOWED_TRACK_TYPES = \"SD_HD\"\n    content_key_specs = [{ \"track_type\": \"HD\",\n                           \"security_level\": 1,\n                           \"required_output_protection\": {\"hdcp\": \"HDCP_NONE\" }\n                         },\n                         { \"track_type\": \"SD\",\n                           \"security_level\": 1,\n                           \"required_output_protection\": {\"cgms_flags\": \"COPY_FREE\" }\n                         },\n                         { \"track_type\": \"AUDIO\"}]\n    request = json.dumps({\"payload\": payload,\n                          \"content_id\": content_id,\n                          \"provider\": self.provider,\n                          \"allowed_track_types\": ALLOWED_TRACK_TYPES,\n                          \"use_policy_overrides_exclusively\": True,\n                          \"policy_overrides\": policy_overrides,\n                          \"content_key_specs\": content_key_specs\n                         ?\n```\n\nWe are playing the video on a settopbox and its not a level 1 device. Its software drm. Someone mentioned Exoplayer doesn't play HD tracks by default when device has security level 3. Do we have to do anything additional?\n\nRegards,\nRandeep\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1429/comments",
    "author": "randeeppr",
    "comments": [
      {
        "user": "ghost",
        "created_at": "2016-04-12T08:59:21Z",
        "body": "Hi,\n\nIn the ExoPlayer demo app  - DashRenderBuilder.java has a method 'filterHdContent'  this always returns true if device is not level 1 (Assuming here it's L3).  This causes the player to disregard the HD AdaptionSet in the mpd whilst parsing it.\n\nYou can set the filterHdContent to always return false if you want to play HD, however it is typical of content owners to require a L1 Widevine implementation for HD content.\n"
      }
    ]
  },
  {
    "number": 1415,
    "title": "Format.frameRate always returning -1",
    "created_at": "2016-04-05T17:43:11Z",
    "closed_at": "2016-04-05T18:03:38Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1415",
    "body": "public void onLoadCompleted(int sourceId, long bytesLoaded, int type, int trigger, Format format,\n                                long mediaStartTimeMs, long mediaEndTimeMs, long elapsedRealtimeMs, long loadDurationMs) ....\n\nand \n\npublic void onDownstreamFormatChanged(int sourceId, Format format, int trigger, long mediaTimeMs)\n\nThe format.frameRate is always returning -1.\n\nThis is the case for different types of content....HLS VoD, HLS Live, DASH....\n\nThe frameRate is a metric we are using for QoS.\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1415/comments",
    "author": "ssenanayake",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-04-05T17:54:47Z",
        "body": "It's not always -1 for DASH (as demonstrated if you simply modify the demo app to print the value). This callback is invoked without knowledge of what's being parsed from the data, so the frame rate needs to be indicated in the manifest (or equivalent) if it's to be set.\n"
      },
      {
        "user": "ssenanayake",
        "created_at": "2016-04-05T18:03:38Z",
        "body": "Thanks ojw28.\n"
      }
    ]
  },
  {
    "number": 1413,
    "title": "HLS AES",
    "created_at": "2016-04-04T19:28:09Z",
    "closed_at": "2016-04-07T20:30:57Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1413",
    "body": "I have been searching but couldn´t found how to use ExoPlayer for playing a HSL encoded with Sample-AES or AES-128.\n\nCan anyone point me in which direction to search?\n\nThanks in advance,\n\nRodrigo\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1413/comments",
    "author": "igo88",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-04-04T22:14:45Z",
        "body": "We don't support SAMPLE-AES. AES-128 should \"just work\".\n"
      },
      {
        "user": "igo88",
        "created_at": "2016-04-07T20:30:57Z",
        "body": "Thanks!!\n"
      }
    ]
  },
  {
    "number": 1406,
    "title": "how to delay chunk download in exoplayer-DASH",
    "created_at": "2016-03-31T09:34:22Z",
    "closed_at": "2016-04-04T14:16:52Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1406",
    "body": "I am working on DASH streaming in ExoPlayer. \nI want to delay(time varies) the download of next chunk , because i have enough buffer to play for next few seconds.\nHow can i achieve this? \n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1406/comments",
    "author": "RamkumarVooda",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-03-31T09:47:11Z",
        "body": "Why don't you trust the player to buffer chunks in a sensible way? Or to put it another way, why do you actually want to do this? Having enough buffer to play the next few seconds isn't a good reason in itself, and artificially keeping the buffer small significantly increases the probability of re-buffers or playback failures.\n"
      },
      {
        "user": "RamkumarVooda",
        "created_at": "2016-03-31T12:37:39Z",
        "body": "I am implementing an adaptive streaming algorithm in FormatEvaluator Class. So according to the algorithm i need to delay the download for some time only if the buffer is exceeding certain threshold.\n"
      },
      {
        "user": "ojw28",
        "created_at": "2016-04-04T10:46:37Z",
        "body": "`LoadControl` (and `DefaultLoadControl`) implements this functionality currently, so you should start there.\n"
      },
      {
        "user": "RamkumarVooda",
        "created_at": "2016-04-04T14:16:52Z",
        "body": "yes got it.\nThank you\n"
      }
    ]
  },
  {
    "number": 1403,
    "title": "Publish demo source jar",
    "created_at": "2016-03-30T20:26:08Z",
    "closed_at": "2016-03-31T09:32:07Z",
    "labels": [
      "question",
      "wont fix: infeasible"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1403",
    "body": "`DemoPlayer` is a great way to use `ExoPlayer` with the lowest barrier to entry. It currently is not published, I'd like to see it published so I could include it as a dependency without having to either do the git submodule thing, or copy paste into my project.\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1403/comments",
    "author": "cperry-gpsw",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-03-31T09:32:07Z",
        "body": "Depending on the sources of a demo project doesn't feel like the right thing for you to be doing. It might be the easiest thing to do, but that doesn't make it right, particularly given you're probably only interested in the DemoPlayer and Builder classes. Copying them into your own project is the best approach in my opinion.\n\nFor 2.x release of ExoPlayer we're working on substantially reducing the amount of code that you need in your application. Specifically, it's likely that all of the functionality that currently resides in the Builder classes will be merged into the core library, and much of the complexity in DemoPlayer will go away too. This should further reduce the barrier to entry.\n"
      }
    ]
  },
  {
    "number": 1396,
    "title": "ChunkSampleSource and lastPerformedBufferOperation delta",
    "created_at": "2016-03-24T18:45:48Z",
    "closed_at": "2016-03-28T21:58:57Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1396",
    "body": "Dear ExoPlayer devs,\nIn the ChunkSampleSource.java there is `lastPerformedBufferOperation` member field. It is using when calculating whether or not it is necessary to perform `doChunkOperation`.\nThe question is, how you calculate 2000 ms delta? Why it is not 1999 or 2999 ms? Could it be related to BehindLiveWindowException or stacking in buffering state?\n\nThanks in advance.\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1396/comments",
    "author": "ChernyshovYuriy",
    "comments": [
      {
        "user": "ChernyshovYuriy",
        "created_at": "2016-03-24T18:53:58Z",
        "body": "I am talking about:\n`(now - lastPerformedBufferOperation > 2000)`\n"
      },
      {
        "user": "ojw28",
        "created_at": "2016-03-28T21:58:57Z",
        "body": "The logic to which you refer allows re-evaluation of a previous format selection. This gives the player flexibility to change the evaluation should conditions have drastically changed since it was originally made. The constant controls the rate at which such re-evaluations are allowed to occur. The value was chosen fairly arbitrarily, however it's not particularly important and should have no impact on issues relating to BehindLiveWindowException or the player getting stuck in a buffering state.\n"
      }
    ]
  },
  {
    "number": 1384,
    "title": "I have a question that when I am changing the channel for live streaming then last channel is buffering?",
    "created_at": "2016-03-21T10:22:29Z",
    "closed_at": "2016-03-21T23:48:14Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1384",
    "body": "When I am changing the channel from 1 to 2 and within 2 sec I clicked on  the first channel then it is buffered. so it is playing old frame which is already played.So I am thinking that it is buffering.So How can clear the buffer  when I am changing channel.or When I am releasing the player.I didn't find anything to solve this issue.\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1384/comments",
    "author": "Hanumantha-Rao",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-03-21T23:48:14Z",
        "body": "There is insufficient information here to answer the question (i.e. the type of media being played), but unless you're seeing an actual issue or negative impact related to this question, I would suggest that you trust that the player is doing something sensible.\n"
      }
    ]
  },
  {
    "number": 1359,
    "title": "Audio capture for visualiser",
    "created_at": "2016-03-10T20:14:36Z",
    "closed_at": "2016-03-10T22:11:29Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1359",
    "body": "Hi, I am trying to understand how to capture the audio to render a waveform on an OpenGL canvas but cannot see an obvious way of achieving this.\n\nHowever, somebody suggested that it seems possible to implement by extending the\nMediaCodecAudioTrackRenderer class as it has a processOutputBuffer() method. This method seems like it would be the correct entry point to capture or even modify output audio data.\n\nCan anybody advise or point me in the right direction?  \n\nThis is not a defect - more of an enhancement which could be solved with documentation or comments\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1359/comments",
    "author": "m1c999",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-03-10T22:11:29Z",
        "body": "It sounds like you're on the right track already, but you'll have to figure it out for yourself or ask somewhere more appropriate like StackOverflow. Our team doesn't scale to help with this kind of request. It's also not in our remit to add documentation/comments to the codebase indicating how features that we don't support might be implemented.\n"
      }
    ]
  },
  {
    "number": 1354,
    "title": "How to download HLS to local ?",
    "created_at": "2016-03-10T03:33:18Z",
    "closed_at": "2016-03-10T22:12:24Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1354",
    "body": "How can i download HLS to local and play with ExoPlayer?\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1354/comments",
    "author": "chile-zhong",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-03-10T22:12:24Z",
        "body": "We do not currently support this functionality. You could build it yourself, but we're not in a position to be able to offer advice on how you might do this.\n"
      }
    ]
  },
  {
    "number": 1350,
    "title": "Growing latency for ExtractorSampleSource/DefaultUriDataSource",
    "created_at": "2016-03-09T16:34:42Z",
    "closed_at": "2016-03-09T23:02:35Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1350",
    "body": "Hello.\nCould you please answer a question:\nI'm playing flv over http using ExtractorSampleSource/DefaultUriDataSource. Sometimes I have video freeze due to buffering. So with time I have delay between real time elapsed and playback time.\nIs there some way to handle this buffering just like for live streams? My goal is to have video to be sync with real time elapsed.\nIs there's no component in player to do that - could you please suggest what class(if any) could be an example for me if I should implement such a mechanism myself?\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1350/comments",
    "author": "vuzya",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-03-09T23:02:35Z",
        "body": "We do not support this feature.\n"
      }
    ]
  },
  {
    "number": 1344,
    "title": "Counting buffer stalls",
    "created_at": "2016-03-07T12:50:42Z",
    "closed_at": "2016-03-07T15:30:14Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1344",
    "body": "I want my ExoPlayer app to count the number of buffer stalls during playback.\nI assume the condition for a buffer stall is:\nif (getBufferedPosition() - getCurrentPosition() < MIN_REBUFFER) { stallCount++ }\n\nHowever, I want this condition to be tested as long as the video is being played. Can you give me suggestions on where to test for this condition? I would like to obtain the final count at the end of playback and send it to a server.\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1344/comments",
    "author": "bayantaani",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-03-07T15:29:41Z",
        "body": "Just listen to `ExoPlayer.Listener.onPlayerStateChanged` and count the number of times the state changes to `playbackState=STATE_BUFFERING` with `playWhenReady=true`?\n"
      }
    ]
  },
  {
    "number": 1331,
    "title": "Incorrect track duration reported for some MP4 streams using mutliple timescale values",
    "created_at": "2016-03-02T14:52:36Z",
    "closed_at": "2016-03-06T21:21:51Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1331",
    "body": "First of all thanks to all for creating this library, it really accelerates android video stream application development. \n\nAs discovered the exoplayer (version 1.5.5 ) it does not seem to report the correct duration for some of my MP4 streams.\n\nSome investigation on my side shows the mp4 files the player is having issues with are using different timescale values for the audio and video tracks.  Not sure if this is completely compliant with the mp4 spec. So I can't really judge if this is problem with the files or a limitation/bug in the mp4 parser. \n\nAnyway traced it down to the \"extractor/mp4/AtomParsers.java\"    - \"parseTrak\" method.\n\nIn the \"parseTrak\" method it seems to use the timescale from the \"mvhd\" box together with the duration as reported in the \"tkhd\" box  which for my files with will result in a wrong duration in us for  the track in the container that is using a different timescale value then specified in the \"mvhd\" box.\n\nI'm not an expert in MP4 but assuming mp4 allows to use different timescales(as it is reported in mutliple places) it seems more logical to use the timescale from the \"mdhd\" box specific to a track instead of using the timescale value from the  \"mvhd\"  box for calculating the track duration in Us.\n\nFor my files to start working correctly it was sufficient to simply use \"mdhdData.first\" instead of \"movieTimescale\" variable to calculate “durationUs”.\n\nWill unfortunately not be allowed to share the videos having the issue thanks to content copyright :( .\n\nFound mp4 files in which the track duration in \"tkhd\" is related to the timescale of  \"mvhd\" and found files where the duration in \"tkhd\"  is related to the  \"mdhd\" so safer seems to be to either take it completely from mdhd or mvhd.\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1331/comments",
    "author": "dbedev",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-03-06T21:21:51Z",
        "body": "According to ISO 14496-16, the duration in the `trak` box is:\n\n> An integer that indicates the duration of this track (in the timescale indicated in the Movie Header Box).\n\nSo in this case I think that the extractor is doing the right thing and that the media is incorrect.\n"
      }
    ]
  },
  {
    "number": 1328,
    "title": "HLS parsing assumes manifest resolution is actual video resolution",
    "created_at": "2016-03-02T10:45:20Z",
    "closed_at": "2016-06-09T23:08:33Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1328",
    "body": "The `DefaultHlsTrackSelector` makes use of `VideoFormatSelectorUtil.selectVideoFormatsForDefaultDisplay` to filter which playlist variants it considers as playable by the device. As you follow the code through, it ends up making use of `isFormatPlayable` (with the `Format` being the one built from the playlist) which eventually ends up in `MediaCodecUtil.isSizeAndRateSupportedV21` or `MediaCodecUtil.isSizeSupportedV21` specifying the width and height defined within the playlist.\n\nThis seems to suggest that the code is assuming the playlist resolution is the actual video resolution that needs to be decoded. However, the HLS spec actually suggests something different:\n\n```\n      RESOLUTION\n\n      The value is a decimal-resolution describing the optimal pixel\n      resolution at which to display all the video in the Variant\n      Stream.\n```\n\nThis can lead to an issue where the manifest can correctly define a display resolution that includes potentially odd-valued heights, or widths. We originally found this when attempting to play a video via HLS where the manifest reported a resolution of `720x405` with the actual video having an actual resolution of `720x404`. The variant is being stripped because the `MediaCodecInfo` will report that it can't handle this resolution due to the `mWidthAlignment` or `mHeightAlignment` requirements. However, as mentioned earlier, this is a display resolution, not the actual video resolution.\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1328/comments",
    "author": "IanDBird",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-03-06T20:48:25Z",
        "body": "Under what condition(s) would the optimal pixel resolution to display a video be anything other than the actual pixel resolution of the video? Stretching 404 pixels onto 405 pixels sounds like a bad idea to me. It seems more likely that the manifest was off-by-one by mistake.\n"
      },
      {
        "user": "ojw28",
        "created_at": "2016-06-09T23:08:33Z",
        "body": "Closing.\n"
      }
    ]
  },
  {
    "number": 1327,
    "title": "HLS playback delay",
    "created_at": "2016-03-02T08:50:38Z",
    "closed_at": "2016-03-07T00:22:49Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1327",
    "body": "When i play HLS, the progress bar turn to blue means it has been  downloaded, but when i seek to the downloaded place, the player always delay a few seconds, why?\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1327/comments",
    "author": "chile-zhong",
    "comments": [
      {
        "user": "AquilesCanta",
        "created_at": "2016-03-02T17:06:01Z",
        "body": "One of the possible reasons is that the seek is frame accurate. This means that if we seek into a non iframe, we need to decode and discard buffers until we are able to decode the sought frame. However we have perceived some difference with the ExtractorSampleSource, so we will look into this. I cannot guarantee this will happen soon, though. Perhaps @ojw28 can provide some insight later. \n"
      },
      {
        "user": "ojw28",
        "created_at": "2016-03-07T00:22:49Z",
        "body": "For HLS playbacks, ExoPlayer will always re-buffer when a seek is performed. We may optimize this at some point in the future, but it's non-trivial. For DASH and SmoothStreaming optimizing seeks within the buffer is more straightforward, and ExoPlayer already optimizes for these cases.\n"
      }
    ]
  },
  {
    "number": 1319,
    "title": "[QUESTION] How to get pixelWidthAspectRatio parameter",
    "created_at": "2016-02-26T17:50:46Z",
    "closed_at": "2016-02-26T17:54:47Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1319",
    "body": "I need to implement a selection engine between ExoPlayer and MediaPlayer in my application.\nAs it turned out, some devices work best with MediaPlayer and some with ExoPlayer .\nFor the same aspect ratio I need to get the variable pixelWidthAspectRatio in MediaPlayer (like in ExoPlayer).\nHow ExoPlayer gets this variable?\nIs it possible to get it in a MediaPlayer?\nDoes anyone have any links to similar examples of implementation?\nI tried to trace the source code ExoPlayer, but could not completely understand.\nThank you for your help!\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1319/comments",
    "author": "Angels-group",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-02-26T17:54:47Z",
        "body": "I don't think MediaPlayer exposes a way for you to get at the pixel width aspect ratio.\n"
      },
      {
        "user": "Angels-group",
        "created_at": "2016-02-26T17:56:55Z",
        "body": "How this variable is obtained?\n"
      },
      {
        "user": "ojw28",
        "created_at": "2016-02-26T17:58:38Z",
        "body": "It's parsed out of the media stream by ExoPlayer's extractor implementations. You should be able to look through the ExoPlayer source code to find where it originates from in each of the extractors.\n"
      },
      {
        "user": "Angels-group",
        "created_at": "2016-02-26T18:00:18Z",
        "body": "This variable is located directly in the stream or calculated from a number of other variables?\n"
      },
      {
        "user": "ojw28",
        "created_at": "2016-02-26T18:01:27Z",
        "body": "It depends on the individual container format. Please look at the source code to answer this question yourself for whatever container you're interested in.\n"
      }
    ]
  },
  {
    "number": 1318,
    "title": "[QUESTION] Purpose of appending \".secure\" to codecName in MediaCodecUtil.java",
    "created_at": "2016-02-26T16:07:45Z",
    "closed_at": "2016-03-06T23:42:03Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1318",
    "body": "Hi,\n\nI am currently investigating playback issues with DRM (Widevine) protected content on the Samsung Galaxy Tab 3 (WIFI) device.\n\nI noticed that on devices running older versions of Android  - the getMediaCodecInfo method will append a \".secure\" to any codec mimeType that is indicated to support secure playback - (isSecurePlaybackSupported).\n\nIf I 'short circuit' this logic for this specific device (resulting in no suffix) - I can playback DRM protected content on this device.  However, I have a few questions around this:\n\n1.)What is the purpose of appending the \".secure\" prefix in the first place?  I notice these older devices do not return an explicit secure codec...\n\n2.)What are the consequences of not appending this suffix or indeed trying to 'downgrade' the codec to a 'non-secure' variant on ANY device/OS type  - Are we by-passing the secure video path implementation required for Widevine Security Level 1  for instance ?\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1318/comments",
    "author": "ghost",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-02-26T19:56:43Z",
        "body": "Good question. In older versions of Android secure decoders were not explicitly listed, and it was by convention that secure decoders were obtained by taking the regular decoder name and appending \".secure\".\n\nIn MediaCodecUtil we assume the existence of a secure H264 decoder on these older versions of Android. Note however that MediaCodecTrackRenderer will only attempt to instantiate a secure decoder if the MediaDrm implementation states that it requires one. If this is true, it really should imply that a secure H264 decoder really does exist, because it doesn't make any sense for a device to ship with a MediaDrm implementation that requires a secure decoder if no such decoder exists. Note that H264 was the only codec for which secure decoders were being supported at this point.\n\nMy hunch would be that on the affected device the MediaDrm is incorrectly claiming that it requires a secure decoder, when in reality it doesn't. If that's the case then the fix should be to override that, so that no attempt is ever made to instantiate the secure decoder. This should be pretty easy to do, if that's the issue.\n\nTo help debug the issue, could you please modify StreamingDrmSessionManager.requiresSecureDecoderComponent to include the following logging:\n\n```\nLog.e(\"DRM\", \"fingerprint=\" + android.os.Build.FINGERPRINT);\nLog.e(\"DRM\", \n    \"requiresSecureDecoder=\" + mediaCrypto.requiresSecureDecoderComponent(mimeType)\n    + \", securityLevel=\" + getPropertyString(\"securityLevel\")\n    + \", mimeType=\" + mimeType);\n```\n\nTry playing some DRM protected content on the affected device, and reply to this thread with the logging that gets output.\n"
      },
      {
        "user": "ojw28",
        "created_at": "2016-02-26T20:01:29Z",
        "body": "One other question - I assume you're not doing anything to deliberately lower the security level of the MediaDrm implementation (if you don't know what this means, the answer is no :)).\n"
      },
      {
        "user": "ojw28",
        "created_at": "2016-02-26T20:16:19Z",
        "body": "To answer your second question - You shouldn't do that. There are a number of scenarios where that will cause playbacks to fail unnecessarily. This is true in all cases where the keys require a secure path. It may also be true in cases where they don't, since device manufacturers are not required to support this combination/mode and there are no device certification tests to enforce behavior in this case. Please follow up as per above, and we can figure out a better solution for you :).\n"
      },
      {
        "user": "ghost",
        "created_at": "2016-02-27T17:22:34Z",
        "body": "Hi,\n\nThanks for the quick and detailed reply - you have supplied some really useful information.\n\nI now understand that I probably shouldn't try to subvert the DRM/secure codec implementation unless I can prove a OEM specific issue requires that.\n\nI will get the information you need in the next few days (weekends getting in the way of work!).\n\nOne point though,  It's my understanding that you are trying to see if there is an incompatibility between the security level reported by the device and the result of the requiresSecureDecoderComponent() method?  I can say that the security level reported is L1 (since I can see that information in my Widevine license proxy). However,  this device requires field provisioning (no factory set root of trust) therefore I am surprised that it is not L3  - maybe this is an indicator?  (or else my understanding is flawed)\n"
      },
      {
        "user": "ghost",
        "created_at": "2016-02-29T16:02:41Z",
        "body": "Hi,\n\nI have debugged further, I currently believe that this could be related to device and content compatibility.\nThe Youtube WV DASH content works perfectly on this device, however the content I have does not.  The difference is that the YouTube WV DASH content is:\n1. Not encrypted for the first few fragments\n2. Uses some other type of clear lead? e.g. specific NALs left in the clear?\n\nThe content I have mainly tried is 100% encrypted.  I have also tried leaving the first 2 fragments in the clear when I package some new content and can still see the issue (which is why I suspect the YouTube content leaves specific intra-coded frames in the clear...)\n\nUnfortunately I cannot currently expose a working Widevine license proxy to you - however I can provide the content and the encryption key if that would help?\n"
      },
      {
        "user": "ghost",
        "created_at": "2016-03-02T14:26:33Z",
        "body": "Hi,\n\nThe issue is specific to content encrypted as per CENC version  ISO/IEC DIS 23001-7 3rd Edition\nThis version specifies partially encrypted NAL units which Intel decoders won't play and some Qualcomm  decoders have issues with when changing from clear to encrypted streams.\n\nThe demo content used for ExoPlayer is all encrypted as per an older version on the spec which specifies that only the first 5 bytes of the NAL is encrypted.  This content seems to work on most devices I have tried thus far.\n\nYou can close this issue now.   Perhaps you should consider adding Widevine/CENC ISO/IEC DIS 23001-7 3rd Edition content you your list of test vectors?  I'm sure others will also be using this player with similar content as more vendors adopt the latest spec.\n\nI am onsite at Widevine next week so I will also ask them  about this.\n\nThanks for your help!\n"
      },
      {
        "user": "ojw28",
        "created_at": "2016-03-06T23:42:03Z",
        "body": "It appears that version of the spec was only released a month ago. It doesn't seem too surprising that software that shipped before the standard doesn't fully support it! Please follow up with Widevine directly regarding test vectors. They also have their own set of tests, so if this is something that's expected to be supported they should have tests covering this case.\n"
      }
    ]
  },
  {
    "number": 1314,
    "title": "[QUESTION] Mpeg-Dash",
    "created_at": "2016-02-26T04:24:19Z",
    "closed_at": "2016-03-04T11:13:48Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1314",
    "body": "Is there anyway to listen to an event for when the first frame has been rendered after selecting a new format. \nThe BaseChunkSampleSourceEventListener.onDownstreamFormatChanged. Is not accurate enough for what I need, I need to know exactly when a frame is being pushed to the Surface when a new format is loaded.\n\nThanks,\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1314/comments",
    "author": "Bigcheese-",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-02-26T09:44:07Z",
        "body": "There is no functionality to do this, sorry.\n"
      }
    ]
  },
  {
    "number": 1313,
    "title": "[QUESTION] SW \\ HW Decoding ",
    "created_at": "2016-02-25T20:39:16Z",
    "closed_at": "2016-03-04T11:13:34Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1313",
    "body": "Good day, dear ExoPlayer's developers! \n\nIs it possible to implement a selection HW \\ SW decoding using ExoPlayer?\nThe problem appeared on Android devices with the old processor.\nSome devices work well, some can not cope with the video stream.\nFor example, there are MX Player app. There the user the opportunity to select the decoder. At the same time, some Android devices are working perfectly with MX Player (on the other decoder).\nI compare the same video stream to ExoPlayer and MXPlayer.\n\nI'm sorry if the topic discussed. I could not find an answer to my question.\nI would be grateful if you help realize the selection the decoder.\n\nSorry for my english. Regards, Denis.\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1313/comments",
    "author": "Angels-group",
    "comments": [
      {
        "user": "AquilesCanta",
        "created_at": "2016-02-26T11:48:06Z",
        "body": "I am not perfectly sure what you want to do. But using your own `MediaCodecSelector` implementation should allow you to select the decoder you want.\n"
      }
    ]
  },
  {
    "number": 1305,
    "title": "Does EXOPlayer support x64 deviecs?",
    "created_at": "2016-02-24T07:23:53Z",
    "closed_at": "2016-02-24T10:02:46Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1305",
    "body": "02-24 02:10:55.907 21889-1454/com.google.android.exoplayer.demo E/ExoPlayerImplInternal: Internal track renderer error.\n                                                                                         com.google.android.exoplayer.ExoPlaybackException: com.google.android.exoplayer.MediaCodecTrackRenderer$DecoderInitializationException: Decoder init failed: OMX.ffmpeg.h264.decoder, MediaFormat(null, video/avc, -1, -1, 400, 300, -1, 1.0, -1, -1, null, -1, false, 1920, 1080)\n                                                                                             at com.google.android.exoplayer.MediaCodecTrackRenderer.notifyAndThrowDecoderInitError(MediaCodecTrackRenderer.java:388)\n                                                                                             at com.google.android.exoplayer.MediaCodecTrackRenderer.maybeInitCodec(MediaCodecTrackRenderer.java:374)\n.......\nHas any **Solution**？\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1305/comments",
    "author": "gongshoudao",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-02-24T10:02:46Z",
        "body": "Yes, ExoPlayer supports all device architectures. If you want further assistance please file an issue that contains all of the information requested in the issue template.\n"
      },
      {
        "user": "gongshoudao",
        "created_at": "2016-02-26T09:33:16Z",
        "body": "I use exoplayer to play .m3u8 files on x86 simulator，throw Internal track renderer error。How can i fix this use third-party like [vp9] which include jni method?\n@ojw28 \n"
      },
      {
        "user": "AquilesCanta",
        "created_at": "2016-02-26T11:41:39Z",
        "body": "@gongshoudao It is impossible to help you with that amount of information. Also, since the issue is closed, please file a new issue including all information requested in the issue template.\n"
      },
      {
        "user": "ojw28",
        "created_at": "2016-02-26T11:43:33Z",
        "body": "Simulators often don't fully implement the media stack that would be required on a real device. For media, it's better to test on real devices.\n"
      }
    ]
  },
  {
    "number": 1284,
    "title": "onPlayerError improvement",
    "created_at": "2016-02-19T04:15:00Z",
    "closed_at": "2016-02-19T15:24:02Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1284",
    "body": "Dear colleagues,\nI have an inquire about passing additional information with an error in ExoPlayer.\nI am talking about **StreamingDrmSessionManager.java** and it's method:\n`void onKeyResponse(Object response)`\nIn case of any error with License retrieving, our server returns important information with \"**Object response**\" and this causing exception in next line:\n`mediaDrm.provideKeyResponse(sessionId, (byte[]) response);`\nThat is OK. But, however, we loosing that information form client side.\nSo I am asking, whether it is possible to by-pass response with Exception, so it will be possible to get it in \"onPlayerError\" callback ?\n\nAs possible solution now, we inject custom listener into WidevineMediaDrmCallback.java and parse \n`byte[] executeKeyRequest(final UUID uuid, final MediaDrm.KeyRequest request)`\nresponse in order to intercept message.\n\nThanks a lot in advance.\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1284/comments",
    "author": "ChernyshovYuriy",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-02-19T12:02:46Z",
        "body": "You must be implementing `MediaDrmCallback`. You should have your implementation of `MediaDrmCallback.executeKeyRequest` check the response. If it's an error response this method should construct and throw an appropriate exception, which you can define yourself. Playback will then fail with this exception as the cause.\n\nTo provide more detail, the way I've seen this implemented elsewhere is for the license server to return a response whose body contains a status. For example:\n\n```\nStatus=X\n<data>\n```\n\nUpon obtaining the response, `MediaDrmCallback.executeKeyRequest` will parse the response and look at the status. If it's ok, it'll return `<data>`. If it's not ok, it'll construct and throw an appropriate exception. Note that the license server response is something you can design yourself, so you can put any information in there that you want to include in the exception.\n"
      },
      {
        "user": "ChernyshovYuriy",
        "created_at": "2016-02-19T12:43:19Z",
        "body": "Hi and thanks for the quick response.\n`MediaDrmCallback` is what I was talking about, in particular it's implementation in our project `class WidevineMediaDrmCallback implements MediaDrmCallback`.\nAccording to your suggestion I should intercept response and parse it. This is what I am doing, but I am not blocking farther execution and allow to return data from `byte[] executeKeyRequest(final UUID uuid, final MediaDrm.KeyRequest request)`.\nOk, thanks for the solution.\n"
      },
      {
        "user": "ChernyshovYuriy",
        "created_at": "2016-02-19T14:33:20Z",
        "body": "Oh, I forget important thing!\nIn both methods of the `MediaDrmCallback`:\n`byte[] executeKeyRequest(final UUID uuid, final MediaDrm.KeyRequest request)`\n`byte[] executeProvisionRequest(final UUID uuid, final MediaDrm.ProvisionRequest request)`\nwe must return bytes array.\nThis is the point. In case of success - we have no issues, but in case of any error we have to pass these bytes farther. And this will cause finally `void onPlayerError(final ExoPlaybackException error)`.\nAnd, in case we processing `executeKeyRequest` and detect an error - then there is double error in the side of ExoPlayerImpl. One is `onPlayerError` and another is custom License Error listener.\n\nAnd intention of my initial question was to prevent it. To process an error in single place, in `onPlayerError` callback. Does it make sense for you now?\n"
      },
      {
        "user": "ojw28",
        "created_at": "2016-02-19T14:35:14Z",
        "body": "You don't have to return a byte array. You should be throwing an exception, meaning you don't need to (i.e. can't) return anything.\n"
      },
      {
        "user": "ChernyshovYuriy",
        "created_at": "2016-02-19T14:39:53Z",
        "body": "Ok, let me try tis approach.\n"
      },
      {
        "user": "ChernyshovYuriy",
        "created_at": "2016-02-19T15:17:07Z",
        "body": "This approach works well, thanks a lot. I think question can be closed now :-)\n"
      },
      {
        "user": "ojw28",
        "created_at": "2016-02-19T15:24:02Z",
        "body": "Great!\n"
      }
    ]
  },
  {
    "number": 1272,
    "title": "ExoPlayer in APK for SDK < 4.1???",
    "created_at": "2016-02-16T21:36:02Z",
    "closed_at": "2016-02-16T21:57:34Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1272",
    "body": "What will happen if an application has ExoPlayer included, but the video playback is not enabled for < 4.1 devices? I have an Application that I am upgrading to use ExoPlayer, however the business wants to support devices below 4.1. \n\nAs long as I detect the SDK version before I try using ExoPlayer, will I be able to install the app on pre-4.1 devices?\n\nI would rather not have to have two branches based on ExoPlayer/ without ExoPlayer.\n\nThanks.\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1272/comments",
    "author": "j-t-h",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-02-16T21:57:34Z",
        "body": "Yes, you will still be able to install the app on devices running older versions of Android. The minimum API level on which your application will install is determined (only) by minSdkVersion as specified in your application's manifest. You're free to use APIs that are more recent than the specified minimum version, up to whatever you specify as the targetSdkVersion in the application manifest, but it's your responsibility to ensure that use of those APIs is correctly guarded with SDK version checks. As long as you do that everything should be fine.\n"
      }
    ]
  },
  {
    "number": 1269,
    "title": "Question: about exoplayer instead of webview default player",
    "created_at": "2016-02-16T01:51:43Z",
    "closed_at": "2016-02-16T16:49:01Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1269",
    "body": "Hi:\nI'm develop our own android app with HLS,DASH support and I would like to replace webview default player by exoplayer.  It's meaning create some android app with exoplayer library and then replace webview default player and then the HTML5 video player will call directly to ExoPlayer intent. The exoplayer app and webview app are same app. The behavior will same as iOS HTML5 player, video player still embedded in webview but just replaced by exoplayer. Is there a way I can do such that?\n\nthanks\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1269/comments",
    "author": "gary-noovo",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-02-16T16:49:01Z",
        "body": "I'm not sure I fully understand the question, but it falls outside the scope of this issue tracker. I'd suggest asking on StackOverflow.\n"
      }
    ]
  },
  {
    "number": 1267,
    "title": "Loading webvtt subtitle outside the HLS manifest",
    "created_at": "2016-02-15T13:51:30Z",
    "closed_at": "2016-02-16T20:59:51Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1267",
    "body": "Hi Team,\n\nWe were using exoplayer 1.4.2 version and subtitles were externally loading of type webvtt instead of manifest. But now when we are trying to migrate to 1.5.5 version of exoplayer we see lot of changes to the implementation. We implemented Sample source and exoplayercomponent , they seemed to be modified along with multitrackchunksource too. We loaded our external subtitles are extra renderers apart from Video and audio renderer. Please help us in this regard.\n\nThanks & Regards\nAmit Samal\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1267/comments",
    "author": "amitsamal",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-02-15T14:23:02Z",
        "body": "Sideloading subtitles in 1.5.5 is simpler than it was previously. As an example, if you have two WebVtt subtitles that you want to sideload, you can create a renderer like:\n\n```\n    SampleSource[] sampleSources = new SampleSource[2];\n    sources[0] = new SingleSampleSource(...);\n    sources[1] = new SingleSampleSource(...);\n    TrackRenderer textRenderer = new TextTrackRenderer(sampleSources, player,\n        player.getMainHandler().getLooper());\n```\n\nUse `ExoPlayer.getTrackCount`, `ExoPlayer.getTrackFormat`, `ExoPlayer.getSelectedTrack` and `ExoPlayer.setSelectedTrack` to query the available subtitles and switch between them.\n"
      }
    ]
  },
  {
    "number": 1262,
    "title": "Is there a method to limit the downloading bandwidth",
    "created_at": "2016-02-13T14:27:54Z",
    "closed_at": "2016-02-15T22:29:16Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1262",
    "body": "Guys, You know, Some new features need to limit the network bandwidth of exoplayer, is there a method to do some flow control?\n\nexpecting for quick reply,\nBest Regards,\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1262/comments",
    "author": "wbo4958",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-02-14T23:18:06Z",
        "body": "Is this in the context of HLS, DASH, or something else? Please could you provide a little more information about what you're trying to achieve? Thanks.\n"
      },
      {
        "user": "wbo4958",
        "created_at": "2016-02-15T12:53:36Z",
        "body": "Thx ojw28, It's  Extractor, I just want to limit the downloading speed. \n"
      },
      {
        "user": "ojw28",
        "created_at": "2016-02-15T12:57:46Z",
        "body": "I'm not really sure what you're trying to achieve. If you restrict the bandwidth to less than the bandwidth of the media then you'll end up with repeated re-buffers. If you restrict the bandwidth to more than the bandwidth of the media, then it's unclear what you're actually achieving?\n"
      },
      {
        "user": "wbo4958",
        "created_at": "2016-02-15T13:05:34Z",
        "body": "Hi ojw28,  You know, when I specify a mp3 URL to Exoplayer, Exoplayer will download the mp3 and cache to play, right? right now, some extra functions will use the whole internet bandwidth, so I need to \"pause\" the downloading procedure. \n"
      },
      {
        "user": "ojw28",
        "created_at": "2016-02-15T22:29:16Z",
        "body": "We don't support that, no. It's possible to extend ExoPlayer to add support for this yourself though. A nice approach would be to implement a `DataSource` that wraps another `DataSource`, calling through to its methods but blocking for as long as some flag is set. Note that you'd need to ensure sufficient synchronization around the flag.\n"
      }
    ]
  },
  {
    "number": 1261,
    "title": "Multi Track Source for MP4 files. (Non-Adaptive)",
    "created_at": "2016-02-13T06:33:03Z",
    "closed_at": "2016-02-14T23:21:50Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1261",
    "body": "I was hoping to create a feature that allowed the user to switch between different video urls (Think SD --> HD). However we are not using adaptive capabilities at the moment such as DASH.\nIs there a way to use a Multi Track Sample to send to the `MediaCodecVideoTrackRenderer` with multiple remote `.mp4` url files, and use the `getTrack()` methods to determine the possible urls given to the player?\n\nRight now I have a hack-ish attempt at just restarting the Exo Player when we want to switch urls and there is always a bit of a lag due to the startup cost.\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1261/comments",
    "author": "jpshelley",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-02-14T23:16:48Z",
        "body": "If you're just using normal MP4 files, it's hard to see how a player could do significantly better than what you're doing already. There's always going to be a cost when a user manually switches from one stream to another, unless you would have the player continually buffer twice as much data just in case the user switches (this is not something we support).\n"
      },
      {
        "user": "jpshelley",
        "created_at": "2016-02-14T23:19:01Z",
        "body": "@ojw28 Makes sense, I thought I'd ask just in case. Thanks.\n"
      }
    ]
  },
  {
    "number": 1255,
    "title": "Get duration of online mp3 file",
    "created_at": "2016-02-11T10:51:01Z",
    "closed_at": "2016-02-11T13:17:59Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1255",
    "body": "I wonder when it's safe to `getDuration()` of the audio track. I just need it once as fast as possible. \nWhen I try to get it immediately after `exoPlayer.prepare()` then I get `UNKNOWN_TIME`.\nDidn't find an example in demo project. \nLooks like I need to do it in listener when playback status changed to `ExoPlayer.STATE_READY`, but then there will be useless getDuration on each play/pause action.\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1255/comments",
    "author": "pavelkorolevxyz",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-02-11T12:15:41Z",
        "body": "If your code is going to have useless calls on each action, why don't you just have a boolean so that you only do it once?\n"
      },
      {
        "user": "pavelkorolevxyz",
        "created_at": "2016-02-11T12:35:51Z",
        "body": "It's okay, but thought there should be a cleaner way to call it once when player prepared, like in onPrepared() method of android default MediaPlayer. Thanks anyway.\n"
      }
    ]
  },
  {
    "number": 1248,
    "title": "Multiple ExoPlayer instances using one SurfaceHolder",
    "created_at": "2016-02-10T01:33:26Z",
    "closed_at": "2016-02-10T17:49:48Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1248",
    "body": "Is it possible to create more than one instance of `ExoPlayer` and use the same `SurfaceHolder`? I have the use case where I need one player for streaming content, and another for streaming client side ads. Only one player is supposed to play/show at a time, and they are directly on top of each other. Is there any way I can do this with just a single SurfaceHolder? I'm pretty sure it's only the `MediaCodec` api complaining with this error:\n\n`E/MediaCodec: native_window_api_connect returned an error: Invalid argument (-22)`\n`E/MediaCodec: configure failed with err 0xffffffea, resetting...`\n\nFollowed by an ExoPlayer exception:\n\n```\nE/ExoPlayerImplInternal: Internal track renderer error.\n    com.google.android.exoplayer.ExoPlaybackException: com.google.android.exoplayer.MediaCodecTrackRenderer$DecoderInitializationException: Decoder init failed: OMX.qcom.video.decoder.avc, MediaFormat(null, video/avc, -1, -1, 704, 396, -1, 1.0, -1, -1, null, -1, false, 1280, 720)\n    at com.google.android.exoplayer.MediaCodecTrackRenderer.notifyAndThrowDecoderInitError(MediaCodecTrackRenderer.java:388)\n    at com.google.android.exoplayer.MediaCodecTrackRenderer.maybeInitCodec(MediaCodecTrackRenderer.java:374)\n    at com.google.android.exoplayer.MediaCodecTrackRenderer.onInputFormatChanged(MediaCodecTrackRenderer.java:729)\n    at com.google.android.exoplayer.MediaCodecVideoTrackRenderer.onInputFormatChanged(MediaCodecVideoTrackRenderer.java:334)\n    at com.google.android.exoplayer.MediaCodecTrackRenderer.readFormat(MediaCodecTrackRenderer.java:496)\n    at com.google.android.exoplayer.MediaCodecTrackRenderer.doSomeWork(MediaCodecTrackRenderer.java:479)\n    at com.google.android.exoplayer.SampleSourceTrackRenderer.doSomeWork(SampleSourceTrackRenderer.java:129)\n    at com.google.android.exoplayer.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:431)\n    at com.google.android.exoplayer.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:213)\n    at android.os.Handler.dispatchMessage(Handler.java:98)\n    at android.os.Looper.loop(Looper.java:135)\n    at android.os.HandlerThread.run(HandlerThread.java:61)\n    at com.google.android.exoplayer.util.PriorityHandlerThread.run(PriorityHandlerThread.java:40)\n    Caused by: com.google.android.exoplayer.MediaCodecTrackRenderer$DecoderInitializationException: Decoder init failed: OMX.qcom.video.decoder.avc, MediaFormat(null, video/avc, -1, -1, 704, 396, -1, 1.0, -1, -1, null, -1, false, 1280, 720)\n    at com.google.android.exoplayer.MediaCodecTrackRenderer.maybeInitCodec(MediaCodecTrackRenderer.java:374) \n    at com.google.android.exoplayer.MediaCodecTrackRenderer.onInputFormatChanged(MediaCodecTrackRenderer.java:729) \n    at com.google.android.exoplayer.MediaCodecVideoTrackRenderer.onInputFormatChanged(MediaCodecVideoTrackRenderer.java:334) \n    at com.google.android.exoplayer.MediaCodecTrackRenderer.readFormat(MediaCodecTrackRenderer.java:496) \n    at com.google.android.exoplayer.MediaCodecTrackRenderer.doSomeWork(MediaCodecTrackRenderer.java:479) \n    at com.google.android.exoplayer.SampleSourceTrackRenderer.doSomeWork(SampleSourceTrackRenderer.java:129) \n    at com.google.android.exoplayer.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:431) \n    at com.google.android.exoplayer.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:213) \n    at android.os.Handler.dispatchMessage(Handler.java:98) \n    at android.os.Looper.loop(Looper.java:135) \n    at android.os.HandlerThread.run(HandlerThread.java:61) \n    at com.google.android.exoplayer.util.PriorityHandlerThread.run(PriorityHandlerThread.java:40) \n    Caused by: android.media.MediaCodec$CodecException: Error 0xffffffea\n    at android.media.MediaCodec.native_configure(Native Method)\n    at android.media.MediaCodec.configure(MediaCodec.java:580)\n    at com.google.android.exoplayer.MediaCodecVideoTrackRenderer.configureCodec(MediaCodecVideoTrackRenderer.java:328)\n    at com.google.android.exoplayer.MediaCodecTrackRenderer.maybeInitCodec(MediaCodecTrackRenderer.java:363)\n    at com.google.android.exoplayer.MediaCodecTrackRenderer.onInputFormatChanged(MediaCodecTrackRenderer.java:729) \n    at com.google.android.exoplayer.MediaCodecVideoTrackRenderer.onInputFormatChanged(MediaCodecVideoTrackRenderer.java:334) \n    at com.google.android.exoplayer.MediaCodecTrackRenderer.readFormat(MediaCodecTrackRenderer.java:496) \n    at com.google.android.exoplayer.MediaCodecTrackRenderer.doSomeWork(MediaCodecTrackRenderer.java:479) \n    at com.google.android.exoplayer.SampleSourceTrackRenderer.doSomeWork(SampleSourceTrackRenderer.java:129) \n    at com.google.android.exoplayer.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:431) \n    at com.google.android.exoplayer.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:213) \n    at android.os.Handler.dispatchMessage(Handler.java:98) \n    at android.os.Looper.loop(Looper.java:135) \n    at android.os.HandlerThread.run(HandlerThread.java:61) \n    at com.google.android.exoplayer.util.PriorityHandlerThread.run(PriorityHandlerThread.java:40)\n```\n\nHowever, when I use two separate `SurfaceHolder`'s, it doesn't complain. Has anyone had any similar issues? Or am I possibly doing something wrong?\n\nThanks.\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1248/comments",
    "author": "Viddi",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-02-10T10:34:11Z",
        "body": "ExoPlayer doesn't know anything about `SurfaceHolder`; it only knows about `Surface` directly.\n\nI haven't tried, but it should be possible to have multiple ExoPlayer instances render to the same `Surface`, provided only one of them is doing so at any point in time. When you want to switch player from A to B, you'll need to clear the surface from A using `ExoPlayer.blockingSendMessage` and attach it to B using `ExoPlayer.sendMessage`. Note that the first call needs to be blocking so that you can be sure A really doesn't have access to the surface before you give it to B.\n"
      },
      {
        "user": "Viddi",
        "created_at": "2016-02-10T17:49:48Z",
        "body": "You're right, this was happening because when I switched players, I was using `sendMessage` instead of `blockingSendMessage`, so the surface was still in use when it was trying to make the switch.\n\nThanks!\n"
      }
    ]
  },
  {
    "number": 1241,
    "title": "AES Encrypted offline file not playing",
    "created_at": "2016-02-08T13:19:35Z",
    "closed_at": "2016-02-08T19:08:25Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1241",
    "body": "I am palying an AES encrypted audio only file using ExoPlayer (I am using Cipher to encrypt file in encoding format AES-ECB). I am using ExtracterRendererBuilder and have created my own DataSource for playing these encrypted files. In read(..) method of my DataSource, I am reading data from CipherInputStream. But this leads to \"discontinuity detected\" error and no audio is playing. \n\nError: \n- AAC decoder returned error 0x4004, substituting silence\n- AudioTrack: Discontinuity detected [expected 4829751, got 4620769]  \n\nPlease suggest.\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1241/comments",
    "author": "naveenmishra",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-02-08T19:08:25Z",
        "body": "Most likely your custom components are not encrypting/decrypting correctly. Note that your DataSource needs to handle requests for data at arbitrary position offsets. A common source of errors when implementing this kind of thing is not accounting for padding added during encryption. You might like to try using `AES/CTR/NoPadding`, which is pretty well suited to this use case.\n"
      }
    ]
  },
  {
    "number": 1228,
    "title": "How I can get info about tracks?",
    "created_at": "2016-02-03T16:10:04Z",
    "closed_at": "2016-02-03T18:32:13Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1228",
    "body": "How I can get info about audio/subtitl tracks such as name of track, language, etc? I need this for user that want to select waht audio/subtitle track to play.\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1228/comments",
    "author": "personshelldon",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-02-03T18:32:13Z",
        "body": "Try using `ExoPlayer.getTrackCount` and `ExoPlayer.getTrackFormat`.\n"
      }
    ]
  },
  {
    "number": 1221,
    "title": "Question: Switching Outputs and Adaptative HLS ",
    "created_at": "2016-02-02T16:45:29Z",
    "closed_at": "2016-02-14T23:33:25Z",
    "labels": [
      "question",
      "need more info"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1221",
    "body": "Hi..\nI'm developing a SDK based on the Exoplayer and I would like to have an option to the user manually switch outputs during the playback ( progressive not HLS ). Is there a method to do that easily? Something like: setUrl() ?\n\nAnother question: How can I make sure that my adaptative hls is working? I mean, switching automatically from one output to another ( it doesn't seems to be doing that even with multiple outputs on my m3u8 file ).\n\nThanks \n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1221/comments",
    "author": "ThiagoMiranda",
    "comments": [
      {
        "user": "marcbaechinger",
        "created_at": "2016-02-08T18:14:26Z",
        "body": "I have seen adaptive bitrate selection working many times. It starts with the lowest quality and adapts if the bandwidth allows for it. It depends on network condition and the bitrate of the variants in the HLS. Also the variants are filtered to discard variants which can't be played on a given device. \n\nSo the number of variants available depends on the device and the point in time at which to switch up/down depends on network condition. Please check the sample in the ExoPlayer Demo app under 'HLS'. Try the sample 'Apple master playlist'. It starts with the lowest quality (on screen it is named 'Gear 1') and then switches to better quality ('Gear 4' in my case which is the highest quality). It's quite easy to spot the switches.\n\nCan you provide more information for the first question? What url would you like the user to set? Actually, there is only one relevant URL for HLS, the one of the playlist. All further urls to network resources are derived from the playlist. When you want to set a new playlist URL you have to start again and create a new instance. But this can not happen 'during playback' inmy understanding. \n"
      }
    ]
  },
  {
    "number": 1217,
    "title": "Video buffer underrun",
    "created_at": "2016-02-01T15:27:22Z",
    "closed_at": "2016-02-01T19:03:44Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1217",
    "body": "Hey,\n\nIt is possible to somehow detect video buffer underrun? I can see that there is a listener for audio:\n\n`MediaCodecAudioTrackRenderer.EventListener#onAudioTrackUnderrun()`\n\nBut I cannot find out how to get buffer underrun event for video. \n\nThank you.\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1217/comments",
    "author": "traninho",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-02-01T19:03:44Z",
        "body": "The closest analogy would be to look at dropped frames, which occur when the player ends up being late trying to render them. You can listen for dropped frames using `MediaCodecVideoTrackRenderer.EventListener.onDroppedFrames`. Note that if you don't want batched reporting, you need to set `maxDroppedFrameCountToNotify` to a suitably small value in the `MediaCodecVideoTrackRenderer` constructor.\n"
      }
    ]
  },
  {
    "number": 1208,
    "title": "Is there a state in EXO player like player is fast forwarding or rewinding?",
    "created_at": "2016-01-28T20:01:02Z",
    "closed_at": "2016-01-29T15:19:13Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1208",
    "body": "Hello,\n\nI want to know is there a specific state when we FF or Reverse the playback. I know that when we FF or Reverse the play back, it comes into the MediaCodecaudioTrackrenderer's \"SeekTo(position)\" function to adjust he play back. \n\nWhat I am doing is, calling player.SeekTo function to adjust it's position to couple of milliseconds but I am not doing FF, so I just want to differentiate when will it actually FF through which function?\n\nThanks\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1208/comments",
    "author": "joshimaulik",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-01-29T15:19:13Z",
        "body": "ExoPlayer doesn't have an API for fast-forward and rewind and so there isn't a corresponding state either. I'm not sure I understand your comment `when we FF or Reverse the playback`, since as above ExoPlayer doesn't have fast-forward and rewind APIs.\n"
      },
      {
        "user": "joshimaulik",
        "created_at": "2016-01-29T17:06:26Z",
        "body": "What I want to know is, when we fast forward on exo player, it goes multiple times into seekTo() function of mediacodecaudiotrackrenderer class. So is there any way to find out what was the last position of fast forward ? \n"
      },
      {
        "user": "ojw28",
        "created_at": "2016-02-01T17:47:20Z",
        "body": "There is no such thing as fast forward in ExoPlayer. As far as the player is concerned, it's just receiving lots of individual seek calls. You should probably implement your own playback controls that do have a concept of when the user is fast forwarding (i.e. user's finger is still dragging the control), and then use that.\n"
      },
      {
        "user": "joshimaulik",
        "created_at": "2016-02-01T19:42:11Z",
        "body": "okay, thank you!!\n"
      }
    ]
  },
  {
    "number": 1206,
    "title": "Set Maximum Buffer for Exo Player",
    "created_at": "2016-01-28T13:49:26Z",
    "closed_at": "2016-08-23T20:18:28Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1206",
    "body": "Hello, i would like to know is there a way to set Max Buffer beside SET_MIN_BUFFER from the factory class? so that i can only download the chunk for the next 3 seconds only. Or is there anyway using throtling ?\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1206/comments",
    "author": "davigun",
    "comments": [
      {
        "user": "RamkumarVooda",
        "created_at": "2016-03-10T16:12:23Z",
        "body": "Any solution for this..?\n\nAs far as i know we can set buffer size in class \"DashRendererBuilder\".\nBUFFER_SEGMENT_SIZE = 64 \\* 1024;\nVIDEO_BUFFER_SEGMENTS = 200;\n"
      },
      {
        "user": "ojw28",
        "created_at": "2016-06-19T22:14:13Z",
        "body": "The initial question states that there's a way to do this already, so it's unclear what the question is beyond asking whether there's a second way of doing the same thing? If that is the question then the answer is no, although in 2.x the setting of a buffering policy should become much simpler and less specific to the different types of playback that ExoPlayer supports.\n"
      },
      {
        "user": "ojw28",
        "created_at": "2016-08-23T20:18:28Z",
        "body": "Closing this. Note that in 2.x this becomes far more straightforward. Rather than the buffering configuration being set in separate places for DASH/HLS/SmoothStreaming/Other, it's now managed by a single LoadControl injected when creating the ExoPlayer instance.\n"
      }
    ]
  },
  {
    "number": 1205,
    "title": "Setting Custom http headers while playing mpd file",
    "created_at": "2016-01-28T12:59:55Z",
    "closed_at": "2016-02-26T09:59:27Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1205",
    "body": "Is there any way by which we can set the custom http header while playing the .mpd file using Exoplayer.\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1205/comments",
    "author": "jatin2225",
    "comments": [
      {
        "user": "b95505017",
        "created_at": "2016-01-28T15:11:03Z",
        "body": "Using OkHttp extension as your HTTP data source, then hook up your custom http header via Interceptor with OkHttpClient.\n"
      },
      {
        "user": "ojw28",
        "created_at": "2016-01-28T15:20:26Z",
        "body": "You can also use `HttpDataSource.setRequestProperty`.\n"
      },
      {
        "user": "jatin2225",
        "created_at": "2016-01-29T10:07:21Z",
        "body": "In the given Exoplayer example, DashRendererBuilder I did the following changes. But it didn't worked.\n\n```\npublic AsyncRendererBuilder(Context context, String userAgent, String url,\n    MediaDrmCallback drmCallback, ExoPlayerWrapper player) {\n  this.context = context;\n  this.userAgent = userAgent;\n  this.drmCallback = drmCallback;\n  this.player = player;\n  MediaPresentationDescriptionParser parser = new MediaPresentationDescriptionParser();\n  manifestDataSource = new DefaultUriDataSource(context, userAgent);\n  //manifestFetcher = new ManifestFetcher<>(url, manifestDataSource, parser);\n  HttpDataSource defaultHttpDataSource = new DefaultHttpDataSource(userAgent, null);\n  defaultHttpDataSource.setRequestProperty(\"X_CAMPAIGN_ID\", \"123456789\");\n  manifestFetcher = new ManifestFetcher<>(url, defaultHttpDataSource, parser);\n}\n```\n\nCan you suggest whether we are doing something wrong?\n"
      },
      {
        "user": "b95505017",
        "created_at": "2016-01-29T10:16:00Z",
        "body": "This block is only related to manifest fetching.\nThere are more data sources below, such as `DataSource videoDataSource`.\n"
      }
    ]
  },
  {
    "number": 1186,
    "title": "HLS - Handling low buffer and seek with no network connection",
    "created_at": "2016-01-25T22:22:33Z",
    "closed_at": "2016-01-26T00:21:03Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1186",
    "body": "I'm using ExoPlayer for audio only, HLS streams. As such, we can buffer quite a bit of audio which we want to continue playing even if the network drops or the device is put into airplane mode. In general that works fine, but there are a couple of no-network scenarios I'm trying to handle:\n1. Play through buffer \n2. Attempt to seek\n\nMy approach so far has been to register listeners with DefaultLoadControl and HlsSampleSource and to move my player into something similar to a buffering state when a load error is encountered. This solves the specific use cases I mentioned, but it doesn't give me very granular understanding of why loading failed. \n\nI realize that to some extent these are business / presentation layer concerns, but I'm wondering if there are recommended ways to address them in the context of ExoPlayer? For example, are there any ways to pause and resume loading? Is there a way to get a 'low buffer' warning before the loader kicks in? \n\nAny insights are greatly appreciated.\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1186/comments",
    "author": "jedhoffmann",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-01-25T22:56:29Z",
        "body": "I'm a little confused. Are you basically saying that you don't want playback to fail, ever, even if there's no network? Specifically, you'd rather the player enter an indefinite buffering state until network is restored?\n"
      },
      {
        "user": "jedhoffmann",
        "created_at": "2016-01-25T23:15:26Z",
        "body": "That is essentially how I have it coded right now, but it's clearly not ideal. Focusing just on the scenario of playing out the buffer with no network: is there a way you would recommend monitoring the buffers so that we can stop playback if they drop below a critical level and we don't have a network to load more?\n"
      },
      {
        "user": "ojw28",
        "created_at": "2016-01-25T23:26:07Z",
        "body": "You could probably stop the player from failing by passing a large value as minLoadableRetryCount to the HlsChunkSource constructor. You don't need to do anything special to have the player enter a buffering state when the buffer runs out; it'll do this automatically. So I think passing a large minLoadableRetryCount is all you'd need to do to achieve what you want.\n"
      },
      {
        "user": "jedhoffmann",
        "created_at": "2016-01-26T00:20:59Z",
        "body": "Thanks for the suggestion. It looks like that is doing the right thing for me. \n"
      }
    ]
  },
  {
    "number": 1182,
    "title": "Decrypting video on the fly",
    "created_at": "2016-01-25T07:06:07Z",
    "closed_at": "2016-04-25T15:10:56Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1182",
    "body": "Hello.\ni am trying to decrypt video on the fly, using okHttpDataSource + Interceptor for decrypting data. However, it breaks the bandwidth meter. It starts showing memory read speed instead of netword speed and video quality adjustment doesn't work, obviously. I wonder if there is a way to fix this issue.\n\nHere's my pplayer initialization code:\n\n``` java\n            OkHttpClient okHttpClient = new OkHttpClient();\n            okHttpClient.interceptors().add(new LoginInterceptor(cloudAccount));\n                okHttpClient.interceptors().add(new DecryptingInterceptor(new OnlineMediaDecryptor(cloudAccount.getMediaEncryptionKey(), mediaItem.getId())));\n            player = new Player(new DashRendererBuilder(this, userAgent, contentUrl,\n                    okHttpClient, new WidevineTestMediaDrmCallback(contentId)));\n```\n\nand interceptor class:\n\n``` java\npublic class DecryptingInterceptor implements Interceptor {\n\n    private final DecryptionStrategy decryptionStrategy;\n\n    public interface DecryptionStrategy {\n        byte[] decrypt(InputStream stream) throws Exception;\n    }\n\n    public DecryptingInterceptor(DecryptionStrategy decryptionStrategy) {\n        this.decryptionStrategy = decryptionStrategy;\n    }\n\n    @Override\n    public Response intercept(Chain chain) throws IOException {\n        Response response = chain.proceed(chain.request());\n        if (response.isSuccessful()) {\n            Response.Builder newResponse = response.newBuilder();\n            String contentType = response.header(\"Content-Type\");\n            if (TextUtils.isEmpty(contentType)) contentType = \"application/json\";\n            InputStream cryptedStream = response.body().byteStream();\n            byte[] decrypted = null;\n            if (decryptionStrategy != null) {\n                try {\n                    decrypted = decryptionStrategy.decrypt(cryptedStream);\n                    newResponse.body(ResponseBody.create(MediaType.parse(contentType), decrypted));\n                    return newResponse.build();\n                } catch (Exception e) {\n                    e.printStackTrace();\n                }\n            } else {\n                throw new IllegalArgumentException(\"No decryption strategy!\");\n            }\n        }\n        return response;\n    }\n}\n```\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1182/comments",
    "author": "j-garin",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-04-25T15:10:56Z",
        "body": "This question is about a custom extension to ExoPlayer, not part of the core library, and hence is beyond the scope of this issue tracker.\n"
      }
    ]
  },
  {
    "number": 1172,
    "title": "DASH video track quality is set to max by default",
    "created_at": "2016-01-21T10:30:03Z",
    "closed_at": "2016-01-21T14:03:21Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1172",
    "body": "hello.\n\nI am developing a player app using the demo app as reference and bumped into this issue. When launching player activity, selected video track is 1080p, not auto. and video tracks are listed in the following order:\n1080p\nauto\n720p\n480p\nWhat can be the cause? Any fix for this?\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1172/comments",
    "author": "j-garin",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-01-21T10:49:21Z",
        "body": "The only thing I can think of that would cause this is if your DASH manifest has the 1080p representation in its own adaptation set at the top, and then a second adaptation set containing 720p/480p. Is that correct, and is there a reason why all three aren't in the same adaptation set?\n"
      },
      {
        "user": "j-garin",
        "created_at": "2016-01-21T11:13:06Z",
        "body": "Indeed there are 2 adaptation sets in the mpd file, because there are 2 codecs. What is the good way to handle this and have 'auto' at track[0]?\n"
      },
      {
        "user": "ojw28",
        "created_at": "2016-01-21T11:16:26Z",
        "body": "What are the two codecs, out of interest? Is the 1080p representation H265, or something like that?\n"
      },
      {
        "user": "j-garin",
        "created_at": "2016-01-21T11:26:10Z",
        "body": "one is H.285 (for 1080p) and the other is H.264\n1080p hevc\n1080p h264\n  720p h264\n  480p h264\n"
      },
      {
        "user": "ojw28",
        "created_at": "2016-01-21T11:31:22Z",
        "body": "It's typically not possible to seamlessly adapt between different codecs. The auto track generated in this case is 720p and 480p only, and so it's pretty ambiguous whether the player should default to the H265 stream or to the two H264 streams (unless you have something in your manifest that indicates this somehow).\n\nI think from the delivery point of view, it would be more normal to have H265 streams in 1080p, 720p and 480p, and then H264 streams in 720p and 480p. You'd then get an auto H265 track that can switch between the three H265 representations and would be enabled by default on devices with H265 decoders, and a separate auto H264 track, which would be the default on devices without an H265 decoder.\n"
      },
      {
        "user": "j-garin",
        "created_at": "2016-01-21T13:04:57Z",
        "body": "that worked. thank you.\nalso i am experiencing difficulties with audio track selection. playback fails to incompatible track selection. is there a way to select audio track that is supported by the device automatically?\n"
      },
      {
        "user": "ojw28",
        "created_at": "2016-01-21T13:50:18Z",
        "body": "ExoPlayer should already select a compatible audio track. What tracks do you have in your manifest, and on what device, and what selection are you seeing?\n"
      },
      {
        "user": "j-garin",
        "created_at": "2016-01-21T14:03:21Z",
        "body": "It was the issue in mpd file. Sorry to have bothered you and thank you for your help.\n"
      },
      {
        "user": "jeprojects",
        "created_at": "2016-01-21T14:11:37Z",
        "body": "@ojw28 This is a great help. One question though, with the multiple resolutions (1080p, 720p, 480p) will mpeg dash (and exoplayer) change between them all seamlessly without buffering? \n\nOr does this only happen when you have multiple bitrates for the same resolution (example: 1080p 10mbit, 5mbit, 4mbit)\n"
      },
      {
        "user": "ojw28",
        "created_at": "2016-01-21T14:16:04Z",
        "body": "Yes, it's possible to switch resolution. On Jellybean and some KitKat devices there might be a slight (~50ms) freeze in the video across the resolution switch, but nothing worse than that. On newer devices it should be completely seamless. There's definitely no buffering involved.\n"
      }
    ]
  },
  {
    "number": 1168,
    "title": "Set Aspect Ratio of Frame",
    "created_at": "2016-01-20T06:52:21Z",
    "closed_at": "2016-01-20T11:16:36Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1168",
    "body": "I am having an issue. i am streaming a video from my server where the URL is at passedWorkoutObject.workoutMediaURL. The video plays fine, but I need to scale the frame to the right aspect ratio. onVideoSizeChanged is not called with this code below. How do I get the aspect ratio of the frame so I can scale my frame?\n\n```\n       player = ExoPlayer.Factory.newInstance(2);\n\n\n        Allocator allocator = new DefaultAllocator(BUFFER_SEGMENT_SIZE);\n        DataSource dataSource = new DefaultUriDataSource(this, null, versionName);\n\n        MediaPresentationDescriptionParser parser = new MediaPresentationDescriptionParser();\n        UriDataSource manifestDataSource = new DefaultUriDataSource(this, versionName);\n        ManifestFetcher<MediaPresentationDescription> manifestFetcher = new ManifestFetcher<>(passedWorkoutObject.workoutMediaURL, manifestDataSource, parser);\n        final DefaultBandwidthMeter bandwidthMeter = new DefaultBandwidthMeter();\n\n        ExtractorSampleSource sampleSource = new ExtractorSampleSource(\n        Uri.parse(passedWorkoutObject.workoutMediaURL), dataSource, allocator, BUFFER_SEGMENT_COUNT * BUFFER_SEGMENT_SIZE);\n\n\n        MediaCodecVideoTrackRenderer videoRenderer = new MediaCodecVideoTrackRenderer(\n                this, sampleSource, MediaCodec.VIDEO_SCALING_MODE_SCALE_TO_FIT, 100, null, new MediaCodecVideoTrackRenderer.EventListener() {\n            @Override\n            public void onDroppedFrames(int count, long elapsed) {\n\n            }\n\n            @Override\n            public void onVideoSizeChanged(int width, int height, int unappliedRotationDegrees, float pixelWidthHeightRatio) {\n                videoFrame.setAspectRatio(\n                        height == 0 ? 1 : (width * pixelWidthHeightRatio) / height);\n            }\n\n            @Override\n            public void onDrawnToSurface(Surface surface) {\n\n            }\n\n            @Override\n            public void onDecoderInitializationError(MediaCodecTrackRenderer.DecoderInitializationException e) {\n\n            }\n\n            @Override\n            public void onCryptoError(MediaCodec.CryptoException e) {\n\n            }\n\n            @Override\n            public void onDecoderInitialized(String decoderName, long elapsedRealtimeMs, long initializationDurationMs) {\n\n            }\n        }, 100);\n\n\n        MediaCodecAudioTrackRenderer audioRenderer = new MediaCodecAudioTrackRenderer(sampleSource);\n        player.prepare(videoRenderer, audioRenderer);\n\n        player.sendMessage(videoRenderer, MediaCodecVideoTrackRenderer.MSG_SET_SURFACE, surface);\n\n\n        player.setPlayWhenReady(true);\n        control = new PlayerControl(player);\n```\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1168/comments",
    "author": "sweatapp",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-01-20T08:19:52Z",
        "body": "If you want your listener to be invoked then you need to pass a something other than null as the value of `eventHandler` in the `MediaCodecVideoTrackRenderer` constructor.\n"
      },
      {
        "user": "sweatapp",
        "created_at": "2016-01-20T09:30:30Z",
        "body": "worked like a charm, thanks\nThe documentation should really be better on all of this. \n"
      },
      {
        "user": "ojw28",
        "created_at": "2016-01-20T11:16:36Z",
        "body": "Whilst I agree in general that we need more detailed documentation, the Javadoc seems pretty clear in this specific case:\n\n```\neventHandler - A handler to use when delivering events to eventListener. May be null if delivery of events is not required.\neventListener - A listener of events. May be null if delivery of events is not required.\n```\n\nChoosing to pass null implies that you're not interested in having your listener receive events.\n"
      }
    ]
  },
  {
    "number": 1165,
    "title": "use in fragment",
    "created_at": "2016-01-19T10:10:58Z",
    "closed_at": "2016-01-22T17:40:41Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1165",
    "body": "if i hide the fragment which the player depend on , the player is also could see ,how to resolve it?\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1165/comments",
    "author": "wu21731",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-01-21T19:44:44Z",
        "body": "I'm unsure as to what you're asking here. Please clarify. Thanks!\n"
      },
      {
        "user": "wu21731",
        "created_at": "2016-01-22T02:17:05Z",
        "body": "I have two fragments, A and B. I put a player in fragment A. put baiduMap in fragment B,  then I hide A, and show B, I can see the player in fragment B. \n"
      },
      {
        "user": "ojw28",
        "created_at": "2016-01-22T17:40:41Z",
        "body": "Please try explicitly hiding the SurfaceView itself. You could also try using TextureView, which will likely behave more as you expect.\n"
      }
    ]
  },
  {
    "number": 1164,
    "title": "problem with scrolling elements",
    "created_at": "2016-01-19T07:31:20Z",
    "closed_at": "2016-01-21T19:44:13Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1164",
    "body": "There is no problem when i use exo player in non scrolling elements. \nThe problem occures when i try to use exo in a list view or scroll view. When i play the video and then start scrolling , a black screen appears on other views of the activity, and also some layouts overlap with other views. can anybody help me on this issue ?\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1164/comments",
    "author": "MahdiTaghipour",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-01-21T19:44:13Z",
        "body": "Try using TextureView instead of SurfaceView. You'll most likely find that it performs better when subjected to animations like scrolling.\n"
      }
    ]
  },
  {
    "number": 1159,
    "title": "how to stop buffer?",
    "created_at": "2016-01-18T09:56:50Z",
    "closed_at": "2016-01-19T08:57:02Z",
    "labels": [
      "duplicate",
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1159",
    "body": "when the net changed to mobile net, i hope stop buffer,\nwhat can i do ?\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1159/comments",
    "author": "ghost",
    "comments": [
      {
        "user": "AquilesCanta",
        "created_at": "2016-01-18T11:09:23Z",
        "body": "Could you provide some more information? I am not sure I am understanding the issue.\n"
      },
      {
        "user": "AquilesCanta",
        "created_at": "2016-01-19T08:57:02Z",
        "body": "I assume this thread is supposed to be replaced by issues/1163. So I am going to close it.\n"
      }
    ]
  },
  {
    "number": 1147,
    "title": "Problem with migrating to r1.5.3",
    "created_at": "2016-01-15T08:54:35Z",
    "closed_at": "2016-01-15T20:34:09Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1147",
    "body": "Hi, everybody!\nCurrently I'm trying to migrate from `r1.5.2` to `r1.5.3` and I've encountered very unexpected behavior.\nWhen I'm updating version in `build.gradle` file first of all I get such exception:\n\n`Player is not abstract and does not override abstract method onAudioTrackUnderrun(int,long,long) in EventListener`\n\nOK, API has changed, I implement this method in my class, try again and then all classes of package `com.google.android.exoplayer` aren't available, as well as package itself. When I switch back to `r1.5.2` everything seems fine.\n\nCan anybody point me out where to search for solution? Thanks in advance!\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1147/comments",
    "author": "Unlimity",
    "comments": [
      {
        "user": "kientux",
        "created_at": "2016-01-15T08:59:11Z",
        "body": "You should checkout this github repository to see how they implement `Player`.\n"
      },
      {
        "user": "Unlimity",
        "created_at": "2016-01-15T09:03:59Z",
        "body": "`Player` is my class that implements all interfaces. And all is well in `r1.5.2`. It's not the case. After syncing gradle with `r1.5.3` `com.google.android.exoplayer` package becomes unavailable and gradle throws a lot of errors such as using methods of ExoPlayer classes which it can't find.\n"
      },
      {
        "user": "ojw28",
        "created_at": "2016-01-15T12:04:16Z",
        "body": "I think whatever IDE you're using is just not doing a good job of telling you what the actual problem is. There are probably a few small specific things, similar to the one you've already fixed, that are broken. What's the first compilation error when you try and build?\n"
      },
      {
        "user": "Unlimity",
        "created_at": "2016-01-15T12:10:22Z",
        "body": "I'm using Android Studio.\nFirst error I get listed in first message.\n"
      },
      {
        "user": "ojw28",
        "created_at": "2016-01-15T12:14:08Z",
        "body": "You've fixed the `onAudioTrackUnderrun` error though, right? Please paste the exact error you see in the gradle build output (not just red underlines, or whatever, that the UI might be showing you).\n"
      },
      {
        "user": "Unlimity",
        "created_at": "2016-01-15T12:23:22Z",
        "body": "`Error:(132, 44) error: method copyAsAdaptive in class MediaFormat cannot be applied to given types;\nrequired: String\nfound: no arguments\nreason: actual and formal argument lists differ in length`\n`Error:(175, 39) error: constructor Variant in class Variant cannot be applied to given types;\nrequired: String,Format\nfound: int,String,int,<null>,int,int\nreason: actual and formal argument lists differ in length`\n`Error:(372, 21) error: constructor TsChunk in class TsChunk cannot be applied to given types;\nrequired: DataSource,DataSpec,int,Format,long,long,int,int,HlsExtractorWrapper,byte[],byte[]\nfound: DataSource,DataSpec,int,Format,long,long,int,HlsExtractorWrapper,byte[],byte[]\nreason: actual and formal argument lists differ in length`\n\nAnd so on.\n"
      },
      {
        "user": "ojw28",
        "created_at": "2016-01-15T12:27:37Z",
        "body": "Right, so some methods have changed and you need to update your code to match the new method signatures. If you click on those errors, I think the IDE will land you somewhere in your own code where you're calling a method whose signature has changed. You'll need to adjust your code to match the new signatures.\n"
      },
      {
        "user": "andreimarinescu",
        "created_at": "2016-01-15T13:05:05Z",
        "body": "@Alviere regarding the fact that the ExoPlayer classes seem to be missing, I've had the same issue when upgrading to a new GMS library yesterday. Before Android Studio is able to complete the first build, the new library signatures seem to not be loaded in the IDE, and you'll get missing symbol messages.\n\nJust focus on the compile errors that Gradle is throwing (specifically the missing or changed methods) and once everything compiles correctly you'll regain the visibility of the library classes.\n"
      },
      {
        "user": "Unlimity",
        "created_at": "2016-01-15T13:46:37Z",
        "body": "@andreimarinescu @ojw28 Thanks for the hints! I'll try them as soon as I have time for this.\n"
      }
    ]
  },
  {
    "number": 1129,
    "title": "Caching .ts from hls",
    "created_at": "2016-01-11T04:25:43Z",
    "closed_at": "2016-01-13T17:09:27Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1129",
    "body": "I want to cache .ts files from hls. Where's the method should I look at to save downloaded bytes? I read the code of HlsChunkSource and TsChunk but still can't get it.\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1129/comments",
    "author": "kientux",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-01-13T17:09:27Z",
        "body": "ExoPlayer does not support this currently. Adding support is tracked by #420.\n"
      }
    ]
  },
  {
    "number": 1127,
    "title": "Exoplayer not Playing while Scrolling ",
    "created_at": "2016-01-11T00:41:16Z",
    "closed_at": "2016-05-22T19:39:28Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1127",
    "body": "how to playing while scroll ??\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1127/comments",
    "author": "BongJaeChoi",
    "comments": [
      {
        "user": "sbaar",
        "created_at": "2016-01-12T19:31:30Z",
        "body": "ExoPlayer works fine when scrolling for me. What scroll container are you using and what happens when you scroll?\n"
      },
      {
        "user": "ojw28",
        "created_at": "2016-05-22T19:39:28Z",
        "body": "Question is unclear. Closing.\n"
      }
    ]
  },
  {
    "number": 1122,
    "title": "How to get detail information from VideoChunk in DASH streaming",
    "created_at": "2016-01-07T20:00:10Z",
    "closed_at": "2016-01-12T23:02:48Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1122",
    "body": "I am playing MPEG DASH streaming using exo player. I need to extract the video chunks and need to know what information are there in video chunks e.g. how long that chunk is, format of that video chunk etc...\n\nI tried to log that information in DemoPlayer.java class's onLoadStarted(int sourceId, long length, int type, int trigger, Format format, long mediaStartTimeMs, long mediaEndTimeMs) method. But it gives me sourceID= 0 & 1, length=-1 and format=com.google.android.exoplayer.chunk.Format@36, @35 & @34. \n\nPlease let me know if I am looking at correct place or is there any other way to extract the chunk information.\n\nThanks in Advance\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1122/comments",
    "author": "joshimaulik",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-01-08T15:18:20Z",
        "body": "I think you're looking in the right place. The format object contains a bunch of additional information you can drill into. The start and end times should be set correctly. The actual size of the content in bytes in most likely unknown at the point when the load is started (this would be true unless it's explicitly specified in the manifest or in a SIDX box in the media), which is why it's not reported. You can use onLoadCompleted to retrieve the number of bytes that were loaded.\n\nSo I'm not really sure what you're missing...\n"
      },
      {
        "user": "joshimaulik",
        "created_at": "2016-01-08T19:29:01Z",
        "body": "Okay, let me check and verify in onLoadCompleted event.\n\nThank You,\n"
      },
      {
        "user": "joshimaulik",
        "created_at": "2016-01-12T23:02:46Z",
        "body": "I checked it today, and seems it gives me all the information which I needed, like how long the chunk is, type of the chunk, etc...\n\nThank You..\n"
      }
    ]
  },
  {
    "number": 1120,
    "title": "Offline video playback (non drm but encrypted)",
    "created_at": "2016-01-07T08:48:00Z",
    "closed_at": "2016-11-24T20:54:57Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1120",
    "body": "Hi Team,\n\nOur requirement is to play offline videos using exoplayer. The videos can be encrypted with any encryption format and downloaded on the user device. We need to decrypt it and then play it using exoplayer. We thought of decrypting the file and then using NanoHTTPD server to stream the bytes to exoplayer. Is it possible to do offline using this approach or any other technique you would recommend us for handling this scenario.\n\nThanks \nAmit Samal \n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1120/comments",
    "author": "amitsamal",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-01-08T15:22:19Z",
        "body": "The best approach is to create your own `DataSource` to perform the decryption. Your implementation should wrap another `DataSource` that can be used to read the still encrypted data (you'd probably wrap a `FileDataSource`, but there's no reason not to allow wrapping of arbitrary sources). The read method of your implementation should read encrypted data from the wrapped source, decrypt it, and return the decrypted data to the caller.\n"
      }
    ]
  },
  {
    "number": 1104,
    "title": "Why here need a sleep",
    "created_at": "2016-01-04T06:52:03Z",
    "closed_at": "2016-01-04T15:26:11Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1104",
    "body": "MediaCodecVideoTrackRenderer.java:430-445\n\n``` java\nif (earlyUs < 30000) {\n        if (earlyUs > 11000) {\n          // We're a little too early to render the frame. Sleep until the frame can be rendered.\n          // Note: The 11ms threshold was chosen fairly arbitrarily.\n          try {\n            // Subtracting 10000 rather than 11000 ensures the sleep time will be at least 1ms.\n            Thread.sleep((earlyUs - 10000) / 1000);\n            Log.d(\"WhatyMediaPlayer\",\"sleep\"+earlyUs);\n          } catch (InterruptedException e) {\n            Thread.currentThread().interrupt();\n          }\n        }\n        renderOutputBuffer(codec, bufferIndex);\n        consecutiveDroppedFrameCount = 0;\n        return true;\n }\n```\n\nthe sleep will block the player event loop,this can be problem in some situation,for example,when playing video in 4x speed,the player need to render 100 frame per seconds,this sleep will make too much time wasted on sleeping. Why not write in this way:\n\n``` java\nif (earlyUs < 10000) {\n        renderOutputBuffer(codec, bufferIndex);\n        consecutiveDroppedFrameCount = 0;\n        return true;\n }\n```\n\nthe RENDERING_INTERVAL_MS is 10ms,so we can still render the frame with 10ms accurate.I think this should be more smooth when playing video on poor performace device.\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1104/comments",
    "author": "vipjml",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-01-04T15:26:11Z",
        "body": "In practice there are issues with other things blocking the player event loop on quite a few older devices. This means that if you don't block when you're \"reasonably close\" to needing to release a video frame in the video renderer, something else can then end up blocking the player event loop that then causes the video frame release to end up being late. The net effect is that frame release is less smooth and there are more dropped frames if you do it as you suggest, rather than being smoother. This issue is significantly worse when playing DRM protected content, but to some extent applies to non-DRM protected content too.\n\nNote that the code you reference is only for older devices. Newer devices use a different code path that's much better suited for things like fast frame release.\n"
      }
    ]
  },
  {
    "number": 1091,
    "title": "Playing local aes128 encrypted mp4 file",
    "created_at": "2015-12-28T06:31:32Z",
    "closed_at": "2015-12-30T10:43:15Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1091",
    "body": "Hi,\nFirst, thanks for your awesome tool.\n\nActually, I'm trying to play an encrypted local mp4 file with the codes provided below.\nUnfortunately, its not working and Exo can not play the video.\nWould you please help me on this matter?\nAppreciate any help.\n\n,,,\n\n```\n Allocator allocator = new DefaultAllocator(BUFFER_SEGMENT_SIZE);\n\n// Build the video and audio renderers.\nDefaultBandwidthMeter bandwidthMeter = new DefaultBandwidthMeter(player.getMainHandler(), null);\nDataSource dataSource = new DefaultUriDataSource(context, bandwidthMeter, userAgent);\n\n\nAes128DataSource aes128DataSource = new Aes128DataSource(dataSource, AES_KEY, AES_IV);\n\n\nExtractorSampleSource sampleSource = new ExtractorSampleSource(uri, aes128DataSource, allocator, BUFFER_SEGMENT_COUNT * BUFFER_SEGMENT_SIZE);\nMediaCodecVideoTrackRenderer videoRenderer = new MediaCodecVideoTrackRenderer(context, sampleSource, MediaCodec.VIDEO_SCALING_MODE_SCALE_TO_FIT, 5000, player.getMainHandler(), player, 50);\nMediaCodecAudioTrackRenderer audioRenderer = new MediaCodecAudioTrackRenderer(sampleSource, null, true, player.getMainHandler(), player, AudioCapabilities.getCapabilities(context));\nTrackRenderer textRenderer = new TextTrackRenderer(sampleSource, player, player.getMainHandler().getLooper());\n\n// Invoke the callback.\nTrackRenderer[] renderers = new TrackRenderer[ClassExoPlayer.RENDERER_COUNT];\nrenderers[ClassExoPlayer.TYPE_VIDEO] = videoRenderer;\nrenderers[ClassExoPlayer.TYPE_AUDIO] = audioRenderer;\nrenderers[ClassExoPlayer.TYPE_TEXT] = textRenderer;\nplayer.onRenderers(renderers, bandwidthMeter);\n```\n\n,,,\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1091/comments",
    "author": "AlirezaGhanbarinia",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2015-12-30T10:43:15Z",
        "body": "`Aes128DataSource` is package private to the HLS package, and as such is not part of ExoPlayer's public API. It's intended for internal use only, and is not a fully functional `DataSource` implementation. See the comment at the top of that class:\n\n```\n * Note that this {@link DataSource} does not support being opened from arbitrary offsets. It is\n * designed specifically for reading whole files as defined in an HLS media playlist. For this\n * reason the implementation is private to the HLS package.\n```\n\nIf you wish to play something that you've encrypted, it's your responsibility to implement and use a `DataSource` that provides correctly decrypted data (including from arbitrary offsets).\n"
      }
    ]
  },
  {
    "number": 1073,
    "title": "How can I delay video in Exo Player",
    "created_at": "2015-12-17T20:18:32Z",
    "closed_at": "2016-04-25T14:42:48Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1073",
    "body": "Hello,\n\nI have a special requirement to delay video by 500ms in exo player.\n\nIf anyone of you have any idea please show me right direction to do it.\n\nThanks in Advance\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1073/comments",
    "author": "joshimaulik",
    "comments": [
      {
        "user": "Bastian35022",
        "created_at": "2015-12-18T12:10:31Z",
        "body": "Do you want to delay the video track relative to the audio track, or delay all tracks relative to the live edge (assuming you are playing live content)?\n"
      },
      {
        "user": "joshimaulik",
        "created_at": "2015-12-18T17:07:11Z",
        "body": "Yes, video track relative to audio track and vice versa. I am playing DASH stream\n"
      },
      {
        "user": "Bastian35022",
        "created_at": "2015-12-18T17:18:14Z",
        "body": "In the ExoPlayer, the video track rendering is timed based on the audio track position. You could try introducing the offset in member getPositionUs() of MediaCodecAudioTrackRenderer, by adding the offset to the return value. Might break a few things though (especially for larger offsets), i don't fully understand the timing mechanisms of the ExoPlayer in detail.\n"
      },
      {
        "user": "AquilesCanta",
        "created_at": "2015-12-18T17:23:32Z",
        "body": "I do not know which is the right direction. I can tell you that the MediaClock interface is used to provide timing information to the renderers. And something usually done, also, is to use the Audio track as \"time provider\", let us say. Perhaps, you could offset the time obtainment in the Video renderer to include an offset. Bastian's comment has just appeared. I would think twice before including the offset _in_ the Audio part, as it would affect anything that takes its timing from the audio, I guess. So, I would incline towards the Video itself. I will make some research. If something useful comes up (such as the realization of having said something incorrect), I will write back. As a first impression, I don't know if this is something completely trivial, I supposed that muxed contents could provide a difficult scenario.\n"
      },
      {
        "user": "Bastian35022",
        "created_at": "2015-12-18T17:44:02Z",
        "body": "I agree, doing this in the MediaCodecVideoTrackRenderer is the nicer solution. It even offers the interface FrameReleaseTimeHelper, which you can implement and set a corresponding class instance as frameReleaseTimeHelper. The delay must then be implemented in \"adjustReleaseTime\". It is a bit of work to implement this though.\n"
      },
      {
        "user": "joshimaulik",
        "created_at": "2015-12-18T19:15:17Z",
        "body": "I figure out the way to do this Audio & Video delay. For video, I changed the \"elapsedSinceStartOfLoopUs\" and added the offset. For Audio, I changed the buffer timestamp to delay it.\n\nThank you guys for your response and comments.\n"
      },
      {
        "user": "joshimaulik",
        "created_at": "2016-01-14T22:49:12Z",
        "body": "I am in quite a situation here, my audio and video delay are both working fine if I am rendering both audio and video.\nBut if I stops rendering the Video and only Audio renders at that time audio delay is not working. To make it work I tried to change  the handleBuffer(ByteBuffer buffer, int offset, int size, long presentationTimeUs) method in Audio Track.java class.\n\nI added & Subtracted offset to each of the different times like, bufferstarttime, startMediaTimeUs, presentationTimeUs but none of this is working. I also tried by adding an offset into GetPositionUs method but all this is changes the seek position that's it. They don't delay the audio\n\nAs per above comments if I do the change in MediaCodecVideoTrackRenderer, then also it won't be in effect because I am not rendering Video at all. \n"
      },
      {
        "user": "Bastian35022",
        "created_at": "2016-01-15T11:40:48Z",
        "body": "I thought you want to delay audio and video with respect to each other. If only audio is played, then what is the delay that you want to control?\n"
      },
      {
        "user": "joshimaulik",
        "created_at": "2016-01-15T17:09:01Z",
        "body": "Below are my use cases:\n\n1) I am playing MPEG DASH streaming on a tablet, in that case my Audio and Video both are played on one tablet and I can able to delay both of them by changing TimeStamps and releaseFrameTimings as per my comment. This is working fine\n\n2) I want to play MPEG DASH streaming in such a way, that the Video will render on the Monitor and Audio will render on the tablet. For this, what I did is, stop rendering the Video on the Tablet. But in that case when I hit the play button, Audio on the tablet is going ahead than the Video on the monitor. That's the reason I want to delay the audio by couple of milliseconds so that I can make both Audio and Video in sync.\n\nSorry for my less understanding language, but I hope you get an overall idea what I want to do and why I want to delay the audio.\n"
      },
      {
        "user": "ojw28",
        "created_at": "2016-01-15T20:36:06Z",
        "body": "- What's the use case for (1)?\n- I don't really understand (2). Are the two devices playing independently, or is the monitor connected to the tablet? If they're separate devices then what's the synchronization mechanism between the two?\n"
      },
      {
        "user": "joshimaulik",
        "created_at": "2016-01-18T22:06:51Z",
        "body": "1) use case for first point is I want to delay both audio and video on a tablet only.\n\n2)Yes, those are two devices independently. Two devices are working in this manner. On first device user will press the Play button, so that a message will go to the second device to play the video and as soon as second device started playing video it will send Audio TimeStamps (bufferinfo.PresentationTimeUs) to the first tablet and that tablet will receive those timestamps and adjust their position accordingly and will play the audio at that timestamps.\n"
      },
      {
        "user": "Bastian35022",
        "created_at": "2016-01-19T09:18:07Z",
        "body": "How about adjusting the timestamps that are exchanged between the tablets accordingly? That should steer the audio position and lead to the desired effect.\n"
      },
      {
        "user": "joshimaulik",
        "created_at": "2016-01-19T19:26:07Z",
        "body": "I did it. I exchanged the Timestamp (Bufferinfo.presentationTimeUs) which is used in ProcessOutputBuffer method of MediaCodecAudioTrackRenderer.java class. I multicast this timestamp from the second device (which is playing AV both) and receive it on first device (which is playing audio only), but when I do fast forward on second device, it's not adjusting the audio on first device instead it adjust only the progress bar timestamp.\n"
      },
      {
        "user": "Bastian35022",
        "created_at": "2016-01-19T21:05:21Z",
        "body": "If you use fast forward, the seekTo functions of the ExoPlayer and of the individual renderers are called (only on the device on which you do the fast forward). You also have to call these seekTo functions of the player on the other devices, with the same timestamp.\n"
      },
      {
        "user": "ojw28",
        "created_at": "2016-01-19T21:14:28Z",
        "body": "I still don't understand what the point of (1) is. I understand what it does, I just don't understand why you would want to do it. If you're playing only on the tablet and you're delaying both audio and video, isn't that more or less the same as delaying neither of them? What are you actually trying to achieve?\n\nFor (2) I think you'd find it easier if you were to make the video on the monitor render earlier rather than having the audio on the tablet render later.\n"
      },
      {
        "user": "joshimaulik",
        "created_at": "2016-01-19T22:15:15Z",
        "body": "@Bastian35022, I see that whenever we fast forward it's calling the seekTo function of MediaCodecAudioTrackRenderer then TrackRenderer and then SampleSourceTrackrenderer.java class. Thank you very much for your help.\n\nNow the same way I am calling the seekTo function, if I found a sudden jump in the Timestamp which I am receiving on first device, from MediaCodecAudioTrackRenderer class, but it crashes the app. Is there anyohter way or place where I can call this seekTo() function to sync the audio?\n"
      },
      {
        "user": "joshimaulik",
        "created_at": "2016-01-19T22:18:15Z",
        "body": "@ojw28, I want to delay the video & Audio for (1) point because, there is a bluetooth latency in android and this latency is different for different devices.\n\nfor (2), i can do that, but where I am stuck is if user FF the AV on monitor it should sync the audio on tablet which is not happening right now. For that i need to go with @Bastian35022 suggested way.\n"
      },
      {
        "user": "Bastian35022",
        "created_at": "2016-01-20T08:34:48Z",
        "body": "The seekTo function of which class to you call? It looks like you have to call at least `seekToInternal` in `ExoPlayerImplInternal`, or even further up the stack if that's more convenient. Then, `seekTo` is also called for all enabled renderers.\n"
      },
      {
        "user": "joshimaulik",
        "created_at": "2016-01-20T18:55:18Z",
        "body": "@Bastian35022, I called the player.seekTo() in player activity where I am receiving time stamps and when the difference between the two time stamps is greater than 2 seconds. And it seems it's working correctly and adjusting the audio chunks accordingly.\n\nThanks a lot for all your help guys...\n"
      }
    ]
  },
  {
    "number": 1062,
    "title": " Internal track renderer error",
    "created_at": "2015-12-15T13:19:37Z",
    "closed_at": "2015-12-16T13:34:52Z",
    "labels": [
      "question",
      "wont fix: infeasible"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1062",
    "body": "Hi,\n\nI'm getting this error while playing unencrypted video in android kitkat 4.2.\n\n```\nE/ExoPlayerImplInternal( 2098): Internal track renderer error.\nE/ExoPlayerImplInternal( 2098): com.google.android.exoplayer.ExoPlaybackException: com.google.android.exoplayer.BehindLiveWindowException\nE/ExoPlayerImplInternal( 2098):         at com.google.android.exoplayer.MediaCodecTrackRenderer.doSomeWork(MediaCodecTrackRenderer.java:455)\nE/ExoPlayerImplInternal( 2098):         at com.google.android.exoplayer.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:401)\nE/ExoPlayerImplInternal( 2098):         at com.google.android.exoplayer.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:203)\nE/ExoPlayerImplInternal( 2098):         at android.os.Handler.dispatchMessage(Handler.java:98)\nE/ExoPlayerImplInternal( 2098):         at android.os.Looper.loop(Looper.java:136)\nE/ExoPlayerImplInternal( 2098):         at android.os.HandlerThread.run(HandlerThread.java:61)\nE/ExoPlayerImplInternal( 2098):         at com.google.android.exoplayer.util.PriorityHandlerThread.run(PriorityHandlerThread.java:40)\nE/ExoPlayerImplInternal( 2098): Caused by: com.google.android.exoplayer.BehindLiveWindowException\nE/ExoPlayerImplInternal( 2098):         at com.google.android.exoplayer.dash.DashChunkSource.getChunkOperation(DashChunkSource.java:363)\nE/ExoPlayerImplInternal( 2098):         at com.google.android.exoplayer.chunk.ChunkSampleSource.updateLoadControl(ChunkSampleSource.java:544)\nE/ExoPlayerImplInternal( 2098):         at com.google.android.exoplayer.chunk.ChunkSampleSource.onLoadCompleted(ChunkSampleSource.java:462)\nE/ExoPlayerImplInternal( 2098):         at com.google.android.exoplayer.upstream.Loader$LoadTask.handleMessage(Loader.java:231)\nE/ExoPlayerImplInternal( 2098):         at android.os.Handler.dispatchMessage(Handler.java:102)\nE/ExoPlayerImplInternal( 2098):         ... 3 more\nI/Lukupplayer( 2098): maybeReportPlayerState()\n```\n\nI've mailed you the original source url in gmail to olly.exoplayer@gmail.com.\n\nRegards,\nRandeep\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1062/comments",
    "author": "randeeppr",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2015-12-16T11:57:41Z",
        "body": "In the manifest, `timeShiftBufferDepth` defines the window of media that the server makes available to be only 10 seconds long. `DashRendererBuilder` in the demo app tries to start playback 30 seconds behind live (defined by `LIVE_EDGE_LATENCY_MS`). This is 20 seconds behind the oldest media that's advertised as being available by the manifest. Hence playback fails within `BehindLiveWindowException`.\n\nA 10 second media window isn't really sufficient for acceptable streaming performance for mobile devices. Unless low latency is a critical requirement, it's generally much better for a mobile devices to be playing about ~30 seconds behind live. This allows the client to maintain 30 seconds of media in a local buffer, which then allows it to seamlessly survive temporary networking issues lasting less than this duration. To do this obviously requires `timeShiftBufferDepth` in excess of 30 seconds (I would expect at least 1 minute, and it's quite common to specify windows in the order of a couple of hours).\n\nIt appears that the server actually has a much larger window of available media than the 10 seconds advertised in the manifest. If I hardcode the window to be two minutes rather than parsing the value from the manifest, then playback works fine. So I think the fix is to reconfigure the manifest and/or server.\n"
      },
      {
        "user": "randeeppr",
        "created_at": "2015-12-16T13:14:32Z",
        "body": "@ojw28 \n\nI'll change the segment length to 30s. Also I'll change the max-age header to 30s.\n\nRegards,\nRandeep\n"
      },
      {
        "user": "randeeppr",
        "created_at": "2015-12-16T13:34:52Z",
        "body": "@ojw28 \n\nIts working now. Thanks a lot.\n\nRegards,\nRandeep\n"
      },
      {
        "user": "ishantsagar",
        "created_at": "2016-09-29T12:49:13Z",
        "body": "@randeeppr I am facing a similar issue with Live HLS videos, could you please guide me as how did you managed to overcome the issue, I don't have any control on the HLS manifest file.\n"
      },
      {
        "user": "randeeppr",
        "created_at": "2016-09-29T13:04:02Z",
        "body": "@ishantsagar what I remember is it worked when I changed max age.\n"
      },
      {
        "user": "ishantsagar",
        "created_at": "2016-09-30T06:07:42Z",
        "body": "@randeeppr Thanks for the response, I suppose this \"max age\" is something that I need to configure in the manifest file? Also I want to know how can I access the manifest file, as right now I only have a HLS url.\n"
      },
      {
        "user": "randeeppr",
        "created_at": "2016-10-06T09:09:26Z",
        "body": "@ishantsagar No. Its not to be configure in the manifest file but with the manifest file. It is the http header of the manifest file. In the origin server of the stream there will be provision to do it.\n"
      }
    ]
  },
  {
    "number": 1056,
    "title": "HLS: java.net.SocketTimeoutException: Read timed out",
    "created_at": "2015-12-14T06:44:22Z",
    "closed_at": "2016-01-04T15:19:00Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1056",
    "body": "I'm testing our streams with the newest player (not sure if we're also getting this on the old player).\n\nRandomly throughout the movie the player just dies. I get the below errors. Its always the same. It looks like a segment is failing, or is failing to download within a timeout period.\n\nMy question is: how can I see the segments that are being downloaded and how can I get http codes and other network information? Specifically, how can I get better debug information related to networking in exoplayer?\n\nThanks for what you're doing. HLS is our only option for what we do and without exoplayer, we'd be limited to few platforms.\n\n```\n12-13 23:02:15.012 19152-19152/com.vidangel E/EventLogger: internalError [34.21, loadError]\n                                                           com.google.android.exoplayer.upstream.HttpDataSource$HttpDataSourceException: java.net.SocketTimeoutException: Read timed out\n                                                               at com.google.android.exoplayer.upstream.DefaultHttpDataSource.read(DefaultHttpDataSource.java:260)\n                                                               at com.google.android.exoplayer.upstream.DefaultUriDataSource.read(DefaultUriDataSource.java:141)\n                                                               at com.google.android.exoplayer.upstream.DataSourceInputStream.read(DataSourceInputStream.java:77)\n                                                               at com.google.android.exoplayer.upstream.DataSourceInputStream.read(DataSourceInputStream.java:70)\n                                                               at javax.crypto.CipherInputStream.fillBuffer(CipherInputStream.java:99)\n                                                               at javax.crypto.CipherInputStream.read(CipherInputStream.java:155)\n                                                               at com.google.android.exoplayer.hls.Aes128DataSource.read(Aes128DataSource.java:101)\n                                                               at com.google.android.exoplayer.extractor.DefaultExtractorInput.readFully(DefaultExtractorInput.java:82)\n                                                               at com.google.android.exoplayer.extractor.ts.TsExtractor.read(TsExtractor.java:114)\n                                                               at com.google.android.exoplayer.hls.HlsExtractorWrapper.read(HlsExtractorWrapper.java:240)\n                                                               at com.google.android.exoplayer.hls.TsChunk.load(TsChunk.java:108)\n                                                               at com.google.android.exoplayer.upstream.Loader$LoadTask.run(Loader.java:209)\n                                                               at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:422)\n                                                               at java.util.concurrent.FutureTask.run(FutureTask.java:237)\n                                                               at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\n                                                               at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n                                                               at java.lang.Thread.run(Thread.java:818)\n                                                            Caused by: java.net.SocketTimeoutException: Read timed out\n                                                               at com.android.org.conscrypt.NativeCrypto.SSL_read(Native Method)\n                                                               at com.android.org.conscrypt.OpenSSLSocketImpl$SSLInputStream.read(OpenSSLSocketImpl.java:699)\n                                                               at com.android.okio.Okio$2.read(Okio.java:113)\n                                                               at com.android.okio.RealBufferedSource.read(RealBufferedSource.java:48)\n                                                               at com.android.okhttp.internal.http.HttpConnection$FixedLengthSource.read(HttpConnection.java:446)\n                                                               at com.android.okio.RealBufferedSource$1.read(RealBufferedSource.java:168)\n                                                               at com.google.android.exoplayer.upstream.DefaultHttpDataSource.readInternal(DefaultHttpDataSource.java:552)\n                                                               at com.google.android.exoplayer.upstream.DefaultHttpDataSource.read(DefaultHttpDataSource.java:258)\n                                                               at com.google.android.exoplayer.upstream.DefaultUriDataSource.read(DefaultUriDataSource.java:141) \n                                                               at com.google.android.exoplayer.upstream.DataSourceInputStream.read(DataSourceInputStream.java:77) \n                                                               at com.google.android.exoplayer.upstream.DataSourceInputStream.read(DataSourceInputStream.java:70) \n                                                               at javax.crypto.CipherInputStream.fillBuffer(CipherInputStream.java:99) \n                                                               at javax.crypto.CipherInputStream.read(CipherInputStream.java:155) \n                                                               at com.google.android.exoplayer.hls.Aes128DataSource.read(Aes128DataSource.java:101) \n                                                               at com.google.android.exoplayer.extractor.DefaultExtractorInput.readFully(DefaultExtractorInput.java:82) \n                                                               at com.google.android.exoplayer.extractor.ts.TsExtractor.read(TsExtractor.java:114) \n                                                               at com.google.android.exoplayer.hls.HlsExtractorWrapper.read(HlsExtractorWrapper.java:240) \n                                                               at com.google.android.exoplayer.hls.TsChunk.load(TsChunk.java:108) \n                                                               at com.google.android.exoplayer.upstream.Loader$LoadTask.run(Loader.java:209) \n                                                               at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:422) \n                                                               at java.util.concurrent.FutureTask.run(FutureTask.java:237) \n                                                               at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112) \n                                                               at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587) \n                                                               at java.lang.Thread.run(Thread.java:818) \n12-13 23:02:24.488 19152-19152/com.vidangel E/EventLogger: internalError [43.69, loadError]\n                                                           com.google.android.exoplayer.upstream.HttpDataSource$HttpDataSourceException: java.net.SocketTimeoutException: Read timed out\n                                                               at com.google.android.exoplayer.upstream.DefaultHttpDataSource.read(DefaultHttpDataSource.java:260)\n                                                               at com.google.android.exoplayer.upstream.DefaultUriDataSource.read(DefaultUriDataSource.java:141)\n                                                               at com.google.android.exoplayer.upstream.DataSourceInputStream.read(DataSourceInputStream.java:77)\n                                                               at com.google.android.exoplayer.upstream.DataSourceInputStream.read(DataSourceInputStream.java:70)\n                                                               at javax.crypto.CipherInputStream.fillBuffer(CipherInputStream.java:99)\n                                                               at javax.crypto.CipherInputStream.read(CipherInputStream.java:155)\n                                                               at com.google.android.exoplayer.hls.Aes128DataSource.read(Aes128DataSource.java:101)\n                                                               at com.google.android.exoplayer.extractor.DefaultExtractorInput.readFully(DefaultExtractorInput.java:82)\n                                                               at com.google.android.exoplayer.extractor.ts.TsExtractor.read(TsExtractor.java:114)\n                                                               at com.google.android.exoplayer.hls.HlsExtractorWrapper.read(HlsExtractorWrapper.java:240)\n                                                               at com.google.android.exoplayer.hls.TsChunk.load(TsChunk.java:108)\n                                                               at com.google.android.exoplayer.upstream.Loader$LoadTask.run(Loader.java:209)\n                                                               at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:422)\n                                                               at java.util.concurrent.FutureTask.run(FutureTask.java:237)\n                                                               at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\n                                                               at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n                                                               at java.lang.Thread.run(Thread.java:818)\n                                                            Caused by: java.net.SocketTimeoutException: Read timed out\n                                                               at com.android.org.conscrypt.NativeCrypto.SSL_read(Native Method)\n                                                               at com.android.org.conscrypt.OpenSSLSocketImpl$SSLInputStream.read(OpenSSLSocketImpl.java:699)\n                                                               at com.android.okio.Okio$2.read(Okio.java:113)\n                                                               at com.android.okio.RealBufferedSource.read(RealBufferedSource.java:48)\n                                                               at com.android.okhttp.internal.http.HttpConnection$FixedLengthSource.read(HttpConnection.java:446)\n                                                               at com.android.okio.RealBufferedSource$1.read(RealBufferedSource.java:168)\n                                                               at com.google.android.exoplayer.upstream.DefaultHttpDataSource.readInternal(DefaultHttpDataSource.java:552)\n                                                               at com.google.android.exoplayer.upstream.DefaultHttpDataSource.read(DefaultHttpDataSource.java:258)\n                                                               at com.google.android.exoplayer.upstream.DefaultUriDataSource.read(DefaultUriDataSource.java:141) \n                                                               at com.google.android.exoplayer.upstream.DataSourceInputStream.read(DataSourceInputStream.java:77) \n                                                               at com.google.android.exoplayer.upstream.DataSourceInputStream.read(DataSourceInputStream.java:70) \n                                                               at javax.crypto.CipherInputStream.fillBuffer(CipherInputStream.java:99) \n                                                               at javax.crypto.CipherInputStream.read(CipherInputStream.java:155) \n                                                               at com.google.android.exoplayer.hls.Aes128DataSource.read(Aes128DataSource.java:101) \n                                                               at com.google.android.exoplayer.extractor.DefaultExtractorInput.readFully(DefaultExtractorInput.java:82) \n                                                               at com.google.android.exoplayer.extractor.ts.TsExtractor.read(TsExtractor.java:114) \n                                                               at com.google.android.exoplayer.hls.HlsExtractorWrapper.read(HlsExtractorWrapper.java:240) \n                                                               at com.google.android.exoplayer.hls.TsChunk.load(TsChunk.java:108) \n                                                               at com.google.android.exoplayer.upstream.Loader$LoadTask.run(Loader.java:209) \n                                                               at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:422) \n                                                               at java.util.concurrent.FutureTask.run(FutureTask.java:237) \n                                                               at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112) \n                                                               at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587) \n                                                               at java.lang.Thread.run(Thread.java:818) \n12-13 23:02:24.967 612-1127/? W/ActivityManager: getRunningAppProcesses: caller 10053 does not hold REAL_GET_TASKS; limiting output\n12-13 23:02:26.881 1984-2069/? W/bt-att: gatt_ind_ack_timeout send ack now\n12-13 23:02:26.937 1984-2069/? E/bt-btif: indication/notif for unknown device, ignore\n12-13 23:02:26.937 1984-2069/? E/bt-btif: indication/notif for unknown device, ignore\n12-13 23:02:28.284 19152-19152/com.vidangel E/EventLogger: internalError [47.49, loadError]\n                                                           com.google.android.exoplayer.upstream.HttpDataSource$HttpDataSourceException: java.net.ProtocolException: unexpected end of stream\n                                                               at com.google.android.exoplayer.upstream.DefaultHttpDataSource.read(DefaultHttpDataSource.java:260)\n                                                               at com.google.android.exoplayer.upstream.DefaultUriDataSource.read(DefaultUriDataSource.java:141)\n                                                               at com.google.android.exoplayer.upstream.DataSourceInputStream.read(DataSourceInputStream.java:77)\n                                                               at com.google.android.exoplayer.upstream.DataSourceInputStream.read(DataSourceInputStream.java:70)\n                                                               at javax.crypto.CipherInputStream.fillBuffer(CipherInputStream.java:99)\n                                                               at javax.crypto.CipherInputStream.read(CipherInputStream.java:155)\n                                                               at com.google.android.exoplayer.hls.Aes128DataSource.read(Aes128DataSource.java:101)\n                                                               at com.google.android.exoplayer.extractor.DefaultExtractorInput.readFully(DefaultExtractorInput.java:82)\n                                                               at com.google.android.exoplayer.extractor.ts.TsExtractor.read(TsExtractor.java:114)\n                                                               at com.google.android.exoplayer.hls.HlsExtractorWrapper.read(HlsExtractorWrapper.java:240)\n                                                               at com.google.android.exoplayer.hls.TsChunk.load(TsChunk.java:108)\n                                                               at com.google.android.exoplayer.upstream.Loader$LoadTask.run(Loader.java:209)\n                                                               at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:422)\n                                                               at java.util.concurrent.FutureTask.run(FutureTask.java:237)\n                                                               at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\n                                                               at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n                                                               at java.lang.Thread.run(Thread.java:818)\n                                                            Caused by: java.net.ProtocolException: unexpected end of stream\n                                                               at com.android.okhttp.internal.http.HttpConnection$FixedLengthSource.read(HttpConnection.java:449)\n                                                               at com.android.okio.RealBufferedSource$1.read(RealBufferedSource.java:168)\n                                                               at com.google.android.exoplayer.upstream.DefaultHttpDataSource.readInternal(DefaultHttpDataSource.java:552)\n                                                               at com.google.android.exoplayer.upstream.DefaultHttpDataSource.read(DefaultHttpDataSource.java:258)\n                                                               at com.google.android.exoplayer.upstream.DefaultUriDataSource.read(DefaultUriDataSource.java:141) \n                                                               at com.google.android.exoplayer.upstream.DataSourceInputStream.read(DataSourceInputStream.java:77) \n                                                               at com.google.android.exoplayer.upstream.DataSourceInputStream.read(DataSourceInputStream.java:70) \n                                                               at javax.crypto.CipherInputStream.fillBuffer(CipherInputStream.java:99) \n                                                               at javax.crypto.CipherInputStream.read(CipherInputStream.java:155) \n                                                               at com.google.android.exoplayer.hls.Aes128DataSource.read(Aes128DataSource.java:101) \n                                                               at com.google.android.exoplayer.extractor.DefaultExtractorInput.readFully(DefaultExtractorInput.java:82) \n                                                               at com.google.android.exoplayer.extractor.ts.TsExtractor.read(TsExtractor.java:114) \n                                                               at com.google.android.exoplayer.hls.HlsExtractorWrapper.read(HlsExtractorWrapper.java:240) \n                                                               at com.google.android.exoplayer.hls.TsChunk.load(TsChunk.java:108) \n                                                               at com.google.android.exoplayer.upstream.Loader$LoadTask.run(Loader.java:209) \n                                                               at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:422) \n                                                               at java.util.concurrent.FutureTask.run(FutureTask.java:237) \n                                                               at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112) \n                                                               at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587) \n                                                               at java.lang.Thread.run(Thread.java:818) \n12-13 23:02:28.294 19152-2545/com.vidangel E/ExoPlayerImplInternal: Internal track renderer error.\n                                                                    com.google.android.exoplayer.ExoPlaybackException: com.google.android.exoplayer.upstream.HttpDataSource$HttpDataSourceException: java.net.ProtocolException: unexpected end of stream\n                                                                        at com.google.android.exoplayer.SampleSourceTrackRenderer.maybeThrowError(SampleSourceTrackRenderer.java:154)\n                                                                        at com.google.android.exoplayer.SampleSourceTrackRenderer.maybeThrowError(SampleSourceTrackRenderer.java:141)\n                                                                        at com.google.android.exoplayer.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:438)\n                                                                        at com.google.android.exoplayer.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:213)\n                                                                        at android.os.Handler.dispatchMessage(Handler.java:100)\n                                                                        at android.os.Looper.loop(Looper.java:135)\n                                                                        at android.os.HandlerThread.run(HandlerThread.java:61)\n                                                                        at com.google.android.exoplayer.util.PriorityHandlerThread.run(PriorityHandlerThread.java:40)\n                                                                     Caused by: com.google.android.exoplayer.upstream.HttpDataSource$HttpDataSourceException: java.net.ProtocolException: unexpected end of stream\n                                                                        at com.google.android.exoplayer.upstream.DefaultHttpDataSource.read(DefaultHttpDataSource.java:260)\n                                                                        at com.google.android.exoplayer.upstream.DefaultUriDataSource.read(DefaultUriDataSource.java:141)\n                                                                        at com.google.android.exoplayer.upstream.DataSourceInputStream.read(DataSourceInputStream.java:77)\n                                                                        at com.google.android.exoplayer.upstream.DataSourceInputStream.read(DataSourceInputStream.java:70)\n                                                                        at javax.crypto.CipherInputStream.fillBuffer(CipherInputStream.java:99)\n                                                                        at javax.crypto.CipherInputStream.read(CipherInputStream.java:155)\n                                                                        at com.google.android.exoplayer.hls.Aes128DataSource.read(Aes128DataSource.java:101)\n                                                                        at com.google.android.exoplayer.extractor.DefaultExtractorInput.readFully(DefaultExtractorInput.java:82)\n                                                                        at com.google.android.exoplayer.extractor.ts.TsExtractor.read(TsExtractor.java:114)\n                                                                        at com.google.android.exoplayer.hls.HlsExtractorWrapper.read(HlsExtractorWrapper.java:240)\n                                                                        at com.google.android.exoplayer.hls.TsChunk.load(TsChunk.java:108)\n                                                                        at com.google.android.exoplayer.upstream.Loader$LoadTask.run(Loader.java:209)\n                                                                        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:422)\n                                                                        at java.util.concurrent.FutureTask.run(FutureTask.java:237)\n                                                                        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\n                                                                        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n                                                                        at java.lang.Thread.run(Thread.java:818)\n                                                                     Caused by: java.net.ProtocolException: unexpected end of stream\n                                                                        at com.android.okhttp.internal.http.HttpConnection$FixedLengthSource.read(HttpConnection.java:449)\n                                                                        at com.android.okio.RealBufferedSource$1.read(RealBufferedSource.java:168)\n                                                                        at com.google.android.exoplayer.upstream.DefaultHttpDataSource.readInternal(DefaultHttpDataSource.java:552)\n                                                                        at com.google.android.exoplayer.upstream.DefaultHttpDataSource.read(DefaultHttpDataSource.java:258)\n                                                                        at com.google.android.exoplayer.upstream.DefaultUriDataSource.read(DefaultUriDataSource.java:141) \n                                                                        at com.google.android.exoplayer.upstream.DataSourceInputStream.read(DataSourceInputStream.java:77) \n                                                                        at com.google.android.exoplayer.upstream.DataSourceInputStream.read(DataSourceInputStream.java:70) \n                                                                        at javax.crypto.CipherInputStream.fillBuffer(CipherInputStream.java:99) \n                                                                        at javax.crypto.CipherInputStream.read(CipherInputStream.java:155) \n                                                                        at com.google.android.exoplayer.hls.Aes128DataSource.read(Aes128DataSource.java:101) \n                                                                        at com.google.android.exoplayer.extractor.DefaultExtractorInput.readFully(DefaultExtractorInput.java:82) \n                                                                        at com.google.android.exoplayer.extractor.ts.TsExtractor.read(TsExtractor.java:114) \n                                                                        at com.google.android.exoplayer.hls.HlsExtractorWrapper.read(HlsExtractorWrapper.java:240) \n                                                                        at com.google.android.exoplayer.hls.TsChunk.load(TsChunk.java:108) \n                                                                        at com.google.android.exoplayer.upstream.Loader$LoadTask.run(Loader.java:209) \n                                                                        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:422) \n                                                                        at java.util.concurrent.FutureTask.run(FutureTask.java:237) \n                                                                        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112) \n                                                                        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587) \n                                                                        at java.lang.Thread.run(Thread.java:818) \n12-13 23:02:28.306 13943-2592/? D/NvOsDebugPrintf: TVMR: TVMRFrameDelivery: 5180: Closing TVMR Frame Delivery Thread -------------\n12-13 23:02:28.307 19152-19152/com.vidangel E/EventLogger: playerFailed [47.51]\n                                                           com.google.android.exoplayer.ExoPlaybackException: com.google.android.exoplayer.upstream.HttpDataSource$HttpDataSourceException: java.net.ProtocolException: unexpected end of stream\n                                                               at com.google.android.exoplayer.SampleSourceTrackRenderer.maybeThrowError(SampleSourceTrackRenderer.java:154)\n                                                               at com.google.android.exoplayer.SampleSourceTrackRenderer.maybeThrowError(SampleSourceTrackRenderer.java:141)\n                                                               at com.google.android.exoplayer.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:438)\n                                                               at com.google.android.exoplayer.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:213)\n                                                               at android.os.Handler.dispatchMessage(Handler.java:100)\n                                                               at android.os.Looper.loop(Looper.java:135)\n                                                               at android.os.HandlerThread.run(HandlerThread.java:61)\n                                                               at com.google.android.exoplayer.util.PriorityHandlerThread.run(PriorityHandlerThread.java:40)\n                                                            Caused by: com.google.android.exoplayer.upstream.HttpDataSource$HttpDataSourceException: java.net.ProtocolException: unexpected end of stream\n                                                               at com.google.android.exoplayer.upstream.DefaultHttpDataSource.read(DefaultHttpDataSource.java:260)\n                                                               at com.google.android.exoplayer.upstream.DefaultUriDataSource.read(DefaultUriDataSource.java:141)\n                                                               at com.google.android.exoplayer.upstream.DataSourceInputStream.read(DataSourceInputStream.java:77)\n                                                               at com.google.android.exoplayer.upstream.DataSourceInputStream.read(DataSourceInputStream.java:70)\n                                                               at javax.crypto.CipherInputStream.fillBuffer(CipherInputStream.java:99)\n                                                               at javax.crypto.CipherInputStream.read(CipherInputStream.java:155)\n                                                               at com.google.android.exoplayer.hls.Aes128DataSource.read(Aes128DataSource.java:101)\n                                                               at com.google.android.exoplayer.extractor.DefaultExtractorInput.readFully(DefaultExtractorInput.java:82)\n                                                               at com.google.android.exoplayer.extractor.ts.TsExtractor.read(TsExtractor.java:114)\n                                                               at com.google.android.exoplayer.hls.HlsExtractorWrapper.read(HlsExtractorWrapper.java:240)\n                                                               at com.google.android.exoplayer.hls.TsChunk.load(TsChunk.java:108)\n                                                               at com.google.android.exoplayer.upstream.Loader$LoadTask.run(Loader.java:209)\n                                                               at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:422)\n                                                               at java.util.concurrent.FutureTask.run(FutureTask.java:237)\n                                                               at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\n                                                               at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n                                                               at java.lang.Thread.run(Thread.java:818)\n                                                            Caused by: java.net.ProtocolException: unexpected end of stream\n                                                               at com.android.okhttp.internal.http.HttpConnection$FixedLengthSource.read(HttpConnection.java:449)\n                                                               at com.android.okio.RealBufferedSource$1.read(RealBufferedSource.java:168)\n                                                               at com.google.android.exoplayer.upstream.DefaultHttpDataSource.readInternal(DefaultHttpDataSource.java:552)\n                                                               at com.google.android.exoplayer.upstream.DefaultHttpDataSource.read(DefaultHttpDataSource.java:258)\n                                                               at com.google.android.exoplayer.upstream.DefaultUriDataSource.read(DefaultUriDataSource.java:141) \n                                                               at com.google.android.exoplayer.upstream.DataSourceInputStream.read(DataSourceInputStream.java:77) \n                                                               at com.google.android.exoplayer.upstream.DataSourceInputStream.read(DataSourceInputStream.java:70) \n                                                               at javax.crypto.CipherInputStream.fillBuffer(CipherInputStream.java:99) \n                                                               at javax.crypto.CipherInputStream.read(CipherInputStream.java:155) \n                                                               at com.google.android.exoplayer.hls.Aes128DataSource.read(Aes128DataSource.java:101) \n                                                               at com.google.android.exoplayer.extractor.DefaultExtractorInput.readFully(DefaultExtractorInput.java:82) \n                                                               at com.google.android.exoplayer.extractor.ts.TsExtractor.read(TsExtractor.java:114) \n                                                               at com.google.android.exoplayer.hls.HlsExtractorWrapper.read(HlsExtractorWrapper.java:240) \n                                                               at com.google.android.exoplayer.hls.TsChunk.load(TsChunk.java:108) \n                                                               at com.google.android.exoplayer.upstream.Loader$LoadTask.run(Loader.java:209) \n                                                               at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:422) \n                                                               at java.util.concurrent.FutureTask.run(FutureTask.java:237) \n                                                               at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112) \n                                                               at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587) \n                                                               at java.lang.Thread.run(Thread.java:818) \n12-13 23:02:28.313 13943-2593/? D/NvOsDebugPrintf: TVMR: TVMRVPRFloorSizeSettingThread: 5147: Closing TVMRVPRFloorSizeSettingThread -------------\n12-13 23:02:28.318 13943-2588/? D/NvOsDebugPrintf: TVMR: NvMMLiteTVMRDecBlockClose: 6871: Done \n```\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1056/comments",
    "author": "jedashford",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2015-12-15T23:50:40Z",
        "body": "`HttpDataSourceException` contains a `dataSpec` field that tells you what data was requested. So look at that. In this case the status code will have been in the 2XX range. If the status code is outside of this range then you'd get an `InvalidResponseCodeException`, which has a `responseCode` field that tells you what the status code was.\n"
      },
      {
        "user": "jedashford",
        "created_at": "2015-12-16T01:55:35Z",
        "body": "@ojw28 Thank you. We'll go through further testing and see if we can track down the problem. We've been using this in all of our VidAngel Android platforms and think this one has been giving us trouble for a while. We're following the apple spec on HLS, but deviate on clip length. Due to the way we allow customers to customize streams, we have clip lengths from .2 sec through 9 sec. Could be the problem, but we've found success on all other platforms (iOS, desktop, Roku, etc.)\n"
      },
      {
        "user": "ojw28",
        "created_at": "2015-12-16T18:27:34Z",
        "body": "It's unlikely to be an issue with clip length. The root causes are all quite far down in the networking layer, below any layers in which media specific things are happening. I would guess there's a server-side issue. This part of the log is of particular interest:\n\n```\nCaused by: java.net.ProtocolException: unexpected end of stream\n  at com.android.okhttp.internal.http.HttpConnection$FixedLengthSource.read(HttpConnection.java:449)\n  at com.android.okio.RealBufferedSource$1.read(RealBufferedSource.java:168)\n```\n\nI think this is indicative of a server providing a `Content-Length` value in a response header that does not match the length of the response body (the body turns out to be shorter). If my understanding is correct, that kind of behavior is invalid from the server.\n"
      },
      {
        "user": "ojw28",
        "created_at": "2016-01-04T15:19:00Z",
        "body": "Closing as a probable server error.\n"
      },
      {
        "user": "jedashford",
        "created_at": "2016-02-01T02:31:21Z",
        "body": "@ojw28 still attempting to track this one down. Our Android customer base is growing any many get video stalls multiple times in a video session. How would you suggest I get access to HTTP logs. Specifically how can I see each network response and its headers? This is for HLS and all segments we're requesting. I don't see anything on the event logger that would give me that info. Any help here would be grateful. \n"
      }
    ]
  },
  {
    "number": 1046,
    "title": "Decoder init failed DTS",
    "created_at": "2015-12-11T05:04:02Z",
    "closed_at": "2015-12-16T19:19:50Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1046",
    "body": "Hi,\n\nI am getting the following error:\n\n``` js\ncom.google.android.exoplayer.ExoPlaybackException: com.google.android.exoplayer.MediaCodecTrackRenderer$DecoderInitializationException: Decoder init failed: [-49999], MediaFormat(1, audio/vnd.dts, -1, 16, -1, -1, -1, -1.0, 2, 48000, und, 0, false, -1, -1)\n```\n\nAm I correct in thinking that this is trying to access the hardware decoder on the device but failing (Nexus 6p) because hardware decode support doesn't exist?\n\nIf so, does exoplayer include software decoding support? Or do we need to fall back to our own?\n\nThanks for your help.\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1046/comments",
    "author": "jeprojects",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2015-12-11T12:27:27Z",
        "body": "Yes. That log line would be output when trying to create a decoder for audio/vnd.dts on a device with no decoder that supports it. Like most phones, Nexus 6P does not have a built-in DTS decoder. If possible, it is best to switch to a more widely supported format like AAC.\n\nNote that cf27b83 added a check that there is a decoder for the source MIME type, before the track is enabled. So, on an up to date version of ExoPlayer, you shouldn't see this error if the source MIME type is accurate, and the stream should play with no audio (unless other playable audio formats are present). Is this a DASH stream with an incorrect codecs attribute?\n"
      },
      {
        "user": "jeprojects",
        "created_at": "2015-12-11T15:53:37Z",
        "body": "Thanks @andrewlewis for your help.\n\nThis is the part in the mpd file\n\n``` js\n  <Representation id=\"5\" mimeType=\"audio/mp4\" codecs=\"mp4a.a9\" audioSamplingRate=\"48000\" startWithSAP=\"1\" bandwidth=\"1512297\">\n    <AudioChannelConfiguration schemeIdUri=\"urn:mpeg:dash:23003:3:audio_channel_configuration:2011\" value=\"2\"/>\n    <BaseURL>audio0_dashinit.mp4</BaseURL>\n    <SegmentBase indexRangeExact=\"true\" indexRange=\"893-1296\">\n      <Initialization range=\"0-892\"/>\n    </SegmentBase>\n   </Representation>\n```\n\nThis was automatically generated using mp4box.\n"
      },
      {
        "user": "andrewlewis",
        "created_at": "2015-12-11T16:09:36Z",
        "body": "You could try changing codecs=\"mp4a.a9\" to codecs=\"dtsc\" to make the codecs attribute consistent with the actual media format. That should hopefully give video-only playback, as no decoders will be found for the audio stream.\n"
      },
      {
        "user": "jeprojects",
        "created_at": "2015-12-13T07:44:09Z",
        "body": "Thanks again.\n\nThat did the trick.\n\nI am curious though, the one it selected was AAC, when there is AC3 available next in line.\n\n``` js\n  <AdaptationSet segmentAlignment=\"true\" group=\"2\" lang=\"und\" subsegmentAlignment=\"true\" subsegmentStartsWithSAP=\"1\">\n   <Representation id=\"6\" mimeType=\"audio/mp4\" codecs=\"ac-3\" audioSamplingRate=\"48000\" startWithSAP=\"1\" bandwidth=\"449268\">\n    <AudioChannelConfiguration schemeIdUri=\"urn:mpeg:dash:23003:3:audio_channel_configuration:2011\" value=\"2\"/>\n    <BaseURL>audio1_dashinit.mp4</BaseURL>\n    <SegmentBase indexRangeExact=\"true\" indexRange=\"869-1260\">\n      <Initialization range=\"0-868\"/>\n    </SegmentBase>\n   </Representation>\n  </AdaptationSet>\n  <AdaptationSet segmentAlignment=\"true\" group=\"2\" lang=\"und\" subsegmentAlignment=\"true\" subsegmentStartsWithSAP=\"1\">\n   <Representation id=\"7\" mimeType=\"audio/mp4\" codecs=\"mp4a.40.2\" audioSamplingRate=\"48000\" startWithSAP=\"1\" bandwidth=\"309860\">\n    <AudioChannelConfiguration schemeIdUri=\"urn:mpeg:dash:23003:3:audio_channel_configuration:2011\" value=\"2\"/>\n    <BaseURL>audio2_dashinit.mp4</BaseURL>\n    <SegmentBase indexRangeExact=\"true\" indexRange=\"900-1303\">\n      <Initialization range=\"0-899\"/>\n    </SegmentBase>\n   </Representation>\n  </AdaptationSet>\n```\n\nIs there something wrong with my configuration? Why would it skip ac3?\n"
      },
      {
        "user": "andrewlewis",
        "created_at": "2015-12-13T09:12:18Z",
        "body": "It could skip AC-3 for the same reason it skips DTS: MediaCodecAudioTrackRenderer only handles the track if the device has a decoder for the track's format, or if there is an HDMI connection that advertises support for playing the format via encoded audio passthrough (on Android L and above).\n"
      }
    ]
  },
  {
    "number": 1034,
    "title": "how to solve black screen problem when back to app",
    "created_at": "2015-12-08T12:20:35Z",
    "closed_at": "2016-09-09T21:52:39Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1034",
    "body": "I pressed the \"home\" button when playing \nand then get back to app,  the player will display black screen for seconds。。\nhow to fix it ?\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1034/comments",
    "author": "ghost",
    "comments": [
      {
        "user": "AquilesCanta",
        "created_at": "2015-12-08T14:33:52Z",
        "body": "I cannot recreate the issue. Can you provide some extra information?\n"
      },
      {
        "user": "lichangadd",
        "created_at": "2015-12-10T09:05:08Z",
        "body": "Get the same problem,then I debug into the code,this is caused by video tracker is release\nso I reinstance tracker in onSurfaceViewCreated，problem resolved\n\n```\n    public void surfaceCreated(SurfaceHolder holder) {\n\n        surfaceHolder = holder;\n\n        if (exoPlayer == null) {\n            exoPlayer = ExoPlayer.Factory.newInstance(2);\n            playerControl = new PlayerControl(exoPlayer);\n            allocator = new DefaultAllocator(BUFFER_SEGMENT_SIZE);\n            dataSource = new DefaultUriDataSource(getContext(), \"this is agent\");\n            exoPlayer.addListener(this);\n        }\n\n        if (videoRenderer != null) {\n            assemblyTrackRender(playlist.get(currentPlayingIndex));\n            exoPlayer.prepare(videoRenderer, audioRenderer);\n        }\n    }\n\n    private void assemblyTrackRender(TrainingResource resource) {\n        sampleSource = new ExtractorSampleSource(Uri.fromFile(new File(resource.getLocation())), dataSource, allocator, BUFFER_SEGMENT_COUNT * BUFFER_SEGMENT_SIZE);\n        videoRenderer = new MediaCodecVideoTrackRenderer(getContext(), sampleSource, MediaCodec.VIDEO_SCALING_MODE_SCALE_TO_FIT);\n        audioRenderer = new MediaCodecAudioTrackRenderer(sampleSource);\n\n        exoPlayer.sendMessage(videoRenderer, MediaCodecVideoTrackRenderer.MSG_SET_SURFACE, surfaceHolder.getSurface());\n    }\n```\n"
      }
    ]
  },
  {
    "number": 1032,
    "title": "How to use the setBackgrounded(boolean)?",
    "created_at": "2015-12-08T08:43:12Z",
    "closed_at": "2016-04-25T14:52:31Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1032",
    "body": " hello, i have one question about the DemoPlayer.  \n what's the functinality of setBackgrounded? \n in which case I should use TURE or FALSE? \n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1032/comments",
    "author": "ghost",
    "comments": [
      {
        "user": "ghost",
        "created_at": "2016-01-12T03:51:20Z",
        "body": "@ojw28  do u know the answer ? thx. \n"
      },
      {
        "user": "ojw28",
        "created_at": "2016-04-25T14:52:31Z",
        "body": "The backgrounding functionality in the demo app was only ever really a best effort; not a complete solution. We'll be removing it in the 2.x the release. Implementing proper background playback support requires, among other things, moving the player into an Android service. This is work that an application developer will need to undertake should they wish to obtain this functionality.\n"
      }
    ]
  },
  {
    "number": 1031,
    "title": "What means BUFFER_SEGMENT_SIZE and BUFFER_SEGMENTS in HlsRendererBuilder",
    "created_at": "2015-12-08T03:10:12Z",
    "closed_at": "2015-12-09T01:29:59Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1031",
    "body": "Hi,\nI use Exo for nDVR HLS. My stream server using token to protect content and each token only exist for 2 minutes. I got the error \"Response code 403\" after play for 3 minutes. I check in HlsChunkSource class. I see Exo read all segment from chunklist many times for 5s~ 10s and then don't read. When Exo play for 2 minutes, I see Exo read all segment again a get the error \" Response code 403\". I guess   afer Exo read all segment to load data to buffer, it doesn't keep connect to server. So when Exo request to server again for next data, it got the error because token was dead. I decrease the BUFFER_SEGMENT_SIZE = 8 \\* 1024 instead 64 \\* 1024 and the error doesn't happend.\n\nMy stream server using 2 bitrate 450000 and 600000 so I want to understand What means BUFFER_SEGMENT_SIZE  and BUFFER_SEGMENTS to config two parameters to my application working fine.\n\nThanks!\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1031/comments",
    "author": "tungds",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2015-12-08T15:01:35Z",
        "body": "Isn't it a design flaw that your server decides the token is dead in this case? Why does the token have such a short lifespan? Fill/drain (i.e. filling a buffer, then not requesting any data for a while whilst the buffer is draining, then filling again) is a legitimate buffering strategy. Tokens should remain valid for a long enough period of time to accommodate such a strategy.\n"
      },
      {
        "user": "ojw28",
        "created_at": "2015-12-08T15:04:27Z",
        "body": "To answer the question, the total buffer size (in bytes) is BUFFER_SEGMENT_SIZE multiplied by BUFFER_SEGMENTS. You're basically just making the buffer smaller by decreasing either of those values, which means the drain part of the fill/drain buffering cycle will be smaller; probably small enough such that the token doesn't become invalid. However the client will also have a smaller buffer if you do this, which makes re-buffering more likely to occur.\n"
      },
      {
        "user": "tungds",
        "created_at": "2015-12-09T01:29:36Z",
        "body": "Thank for clearly answer. I understand them.\n"
      }
    ]
  },
  {
    "number": 1020,
    "title": "Type of key",
    "created_at": "2015-12-02T12:50:32Z",
    "closed_at": "2015-12-03T17:16:17Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1020",
    "body": "I'm using Exoplayer for playing Widevine protected movies. Almost everything works fine, but I need to change the value of parameter keyType, which is requested in method getKeyRequest of MediaDrm class. \nI found that key is set to KEY_TYPE_STREAMING. This is in the StreamingDrmSessionManger class. I need to change value to MediaDrm.KEY_TYPE_OFFLINE. Is there any way how can I do it? I didn't find any method, where I can pass this value. Now I see only one option - download whole project and using it instead of compile 'com.google.android.exoplayer:exoplayer...' in my gradle file.\nIs there any other option?\nThank you.\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1020/comments",
    "author": "PetrSklenicka",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2015-12-03T17:16:17Z",
        "body": "If you're trying to implement offline drm playbacks, there's quite a lot more work to do than just changing the key type. You need to implement key release, add functionality to restore offline keys into MediaDrm sessions, and so on.\n\nWe're not supporting this case directly at this point in time, however if you need this functionality you can implement your own version of `DrmSessionManager` in your application code in order to achieve what you need.\n"
      },
      {
        "user": "PetrSklenicka",
        "created_at": "2015-12-03T20:15:18Z",
        "body": "Thank you for your response. I would like to ask some questions. \n1) Could you tell, please, if you are planning support of offline DRM playbacks in Exoplayer? If yes, do you know approximately when?\n2) Could you provide me some materials or examples, how can I do it? Because I don't have too much experience with this, I would like to know, how complicated is implementation of this feature. Maybe it will be better for me to wait until this feature will be standard part of Exoplayer (see 1. question).\n3) In my current implementation, I parse MPD file, download all video and audio segments, save them into the persistent storage of device and then I modify the location of segments in manifest to stored segments. This works fine, and now I only need to implement feature for acquiring offline type of DRM licence. Do you think that this is a correct approach?\n\nThank you in advance for you response and notes.\n"
      },
      {
        "user": "Woren",
        "created_at": "2016-05-17T08:26:15Z",
        "body": "Is there any new progress of this topic? We're facing the same problem. Will this feature (offline downloading / functionality in DrmSessionManager) be standard part of Exoplayer in the near feature?\nThank you for answer.\n"
      }
    ]
  },
  {
    "number": 1012,
    "title": "DASH representation varied (FormatEvaluator called) too frequently? ",
    "created_at": "2015-12-01T01:40:09Z",
    "closed_at": "2015-12-04T18:43:41Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1012",
    "body": "Hello,\n\nI was testing how often the AdaptiveEvaluator is called in DASH, i.e., how often the DASH representation is changed. I thought the format should be evaluated once a segment. But after I print a simple message to see how often AdaptiveEvaluator is called, I found the calling frequency of this method is irregular:\n\n11-30 20:20:03.814 3860-4076/com.google.android.exoplayer.demo V/DASHtest: Playback Position:\n11-30 20:20:05.305 3860-4076/com.google.android.exoplayer.demo V/DASHtest: Playback Position:\n11-30 20:20:06.306 3860-4076/com.google.android.exoplayer.demo V/DASHtest: Playback Position:\n11-30 20:20:07.037 3860-4076/com.google.android.exoplayer.demo V/DASHtest: Playback Position:\n11-30 20:20:07.747 3860-4076/com.google.android.exoplayer.demo V/DASHtest: Playback Position:\n11-30 20:20:08.328 3860-4076/com.google.android.exoplayer.demo V/DASHtest: Playback Position:\n11-30 20:20:09.009 3860-4076/com.google.android.exoplayer.demo V/DASHtest: Playback Position:\n11-30 20:20:10.360 3860-4076/com.google.android.exoplayer.demo V/DASHtest: Playback Position:\n11-30 20:20:11.081 3860-4076/com.google.android.exoplayer.demo V/DASHtest: Playback Position:\n11-30 20:20:11.561 3860-4076/com.google.android.exoplayer.demo V/DASHtest: Playback Position:\n11-30 20:20:13.593 3860-4076/com.google.android.exoplayer.demo V/DASHtest: Playback Position:\n11-30 20:20:14.234 3860-4076/com.google.android.exoplayer.demo V/DASHtest: Playback Position:\n11-30 20:20:14.874 3860-4076/com.google.android.exoplayer.demo V/DASHtest: Playback Position:\n\nDoes anyone know how frequent the DASH representation is evaluated and changed? Is there a way to configure this frequency (which part of the code?). \n\nAny ideas would be greatly appreciated. Thanks a lot.\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1012/comments",
    "author": "zyanub",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2015-12-01T07:40:15Z",
        "body": "For each stream, evaluation occurs before each segment load. Note that this is not the same as saying that evaluations will occur evenly once every segment duration, because each segment fetch may take more or less time, and segment fetches may be batched together. Evaluation may also occur every 2 seconds, in order to re-evaluate in case buffered media should be discarded in order to re-buffer at a higher quality. Note that most DASH playbacks have two streams (one for video, and a separate one for audio).\n"
      },
      {
        "user": "zyanub",
        "created_at": "2015-12-02T03:14:07Z",
        "body": "Thank you for the answers. I also found some cases where no segment is being downloaded and buffer size is fixed, but the format evaluation occurs. I think that's what you meant by \"re-evaluate to discard segments\". (like the below log, the next segment fixed at 80s for a while)\n\n```\n12-01 10:21:14.849 12935-13269/com.google.android.exoplayer.demo V/DASHtest: Playback Position:32485000; Next Segment Start Time:60000000; Bandwidth: 4447233; Requested Bitrate:3245900; Bufed chunk Bitrate:2070985\n12-01 10:21:19.493 12935-13269/com.google.android.exoplayer.demo V/DASHtest: Playback Position:37119000; Next Segment Start Time:70000000; Bandwidth: 6673129; Requested Bitrate:3792491; Bufed chunk Bitrate:2070985\n12-01 10:21:32.626 12935-13269/com.google.android.exoplayer.demo V/DASHtest: Playback Position:50259000; Next Segment Start Time:80000000; Bandwidth: 4070575; Requested Bitrate:3792491; Bufed chunk Bitrate:2884382\n12-01 10:21:34.678 12935-13269/com.google.android.exoplayer.demo V/DASHtest: Playback Position:52332000; Next Segment Start Time:80000000; Bandwidth: 4070575; Requested Bitrate:3792491; Bufed chunk Bitrate:2884382\n12-01 10:21:36.710 12935-13269/com.google.android.exoplayer.demo V/DASHtest: Playback Position:54367000; Next Segment Start Time:80000000; Bandwidth: 4070575; Requested Bitrate:3792491; Bufed chunk Bitrate:2884382\n```\n\nAlso, would you let me know where we can modify the way the player loads a segment (i.e., when/how often to send a HTTP request and start downloading) and the way the player plays a segment (e.g., I want to display some toast when the played segment is lower than a certain quality or print some statistics). Which class/method I should refer to? I am sorry if this is too obvious. I am really new to this and have been looking at the code, but no luck. Thanks a lot.\n"
      },
      {
        "user": "ojw28",
        "created_at": "2015-12-04T18:43:41Z",
        "body": "- Yes, that would be re-evaluation logic.\n- `DefaultLoadControl` co-ordinates how/when loads are allowed to proceed.\n"
      }
    ]
  },
  {
    "number": 1010,
    "title": "How can I increase the buffersize ? The amount of stream that is fetched ahead of the current location ?",
    "created_at": "2015-11-30T21:09:50Z",
    "closed_at": "2016-06-19T22:40:27Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1010",
    "body": "Working with a very volatile connection, I would like to configure the player to fetch ahead more than what the current fetch limit/size is. How can I go about doing it ?\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1010/comments",
    "author": "abhiguru",
    "comments": [
      {
        "user": "abhiguru",
        "created_at": "2015-12-08T21:06:40Z",
        "body": "For DASH it seems to be setting  the below consts in the DASHRendererBuilder\nprivate static final int BUFFER_SEGMENT_SIZE = 64 \\* 1024;\nprivate static final int VIDEO_BUFFER_SEGMENTS = 200;\n"
      },
      {
        "user": "ojw28",
        "created_at": "2016-06-19T22:40:27Z",
        "body": "As per above, you can modify the constants that you located in order to change the buffer size. Increasing the number of segments is normally better than increasing the segment sizes. The other renderer builders have similar constants.\n\nIn the 2.x release it will become easier to change the buffer size, and the approach will be the same regardless of playback type.\n"
      },
      {
        "user": "Behrouz-m",
        "created_at": "2017-01-05T08:44:19Z",
        "body": "Hi. Please tell me how to set buffer size in the 2.x release?"
      },
      {
        "user": "hellofishy",
        "created_at": "2017-02-23T20:52:33Z",
        "body": "^ bump"
      },
      {
        "user": "akashGitAgni",
        "created_at": "2017-03-27T05:42:11Z",
        "body": "For 2.x , Buffer size can be modified using LoadControl \r\n  `  DefaultLoadControl loadControl = new DefaultLoadControl(allocator, 30000, 45000, 1500,\r\n                DEFAULT_BUFFER_FOR_PLAYBACK_AFTER_REBUFFER_MS);`"
      }
    ]
  },
  {
    "number": 1009,
    "title": "Howto read from codec output buffers",
    "created_at": "2015-11-30T19:56:27Z",
    "closed_at": "2015-12-03T18:43:10Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1009",
    "body": "I am attempting to play the HLS sample filie BipPop.  I have added code to MediaCodecVideoTrackRenderer. \n\nThe following code can be called in processOutputBuffer or in renderOutputBufferV21 but gets the same buffer freed error regardless (and the video successfully plays despite the buffer supposedly being freed).\n\n```\nprivate Boolean customHack(MediaCodec codec, int bufferIndex) {\nByteBuffer buffer = codec.getOutputBuffer(bufferIndex);\nbyte[] data =  new byte[buffer.remaining()];\n    try {\n      buffer.get(data);\n    }catch(Exception e){\n      Log.e(\"Custom\", \"Error trying to get the buffer\",e);\n      return false;\n    }\n}\n```\n\nMy objective is post-decode modification of the buffer.  I can do this using the regular Android player with non HLS content, but in ExoPlayer, I get the BufferFreed problem.\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1009/comments",
    "author": "jadedResearcher",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2015-12-03T17:06:41Z",
        "body": "There are quite strict rules about calls to `getOutputBuffer`. Specifically, in the `MediaCodec` Javadoc, it says: \n\n_After calling this method, any ByteBuffer or Image object previously returned for the same output index MUST no longer be used._.\n\nIt's likely that your call to `getOutputBuffer` is causing an output buffer that ExoPlayer code already has a reference to to become invalid.\n\nIf you're modifying `processOutputBuffer` then you should read from the `buffer` argument that gets passed to it, rather than making any calls to `getOutputBuffer` yourself. Note also that you shouldn't rely on the position and limit of the buffer being set correctly. Use the `bufferInfo` argument to find out the offset and size of the data in the buffer. You can set the buffer position and limit using this information yourself, like:\n\n```\nbuffer.position(bufferInfo.offset);\nbuffer.limit(bufferInfo.offset + bufferInfo.size);\n```\n"
      },
      {
        "user": "jadedResearcher",
        "created_at": "2015-12-03T18:36:19Z",
        "body": "Thank you for response. I changed my code to use the buffer that is passed into the processOutputBuffer method directly, and it works unless I need to get the width and the height, which I use the bufferIndex to do as well.\n\nint h = codec.getOutputImage(bufferIndex).getHeight();\n\nIs there an alternate way to get the width and the height without running into this error?\n"
      },
      {
        "user": "ojw28",
        "created_at": "2015-12-03T18:39:35Z",
        "body": "MediaCodecVideoTrackRenderer already has `currentWidth` and `currentHeight` variables.\n"
      },
      {
        "user": "jadedResearcher",
        "created_at": "2015-12-03T18:42:27Z",
        "body": "I do in fact see that now, thank you so much, you have answered my question in full.\n"
      },
      {
        "user": "ojw28",
        "created_at": "2015-12-03T18:43:10Z",
        "body": "No worries; Glad you got it working!\n"
      },
      {
        "user": "nikhilkilivayil",
        "created_at": "2017-06-28T09:12:08Z",
        "body": "Can you post sample full source code? @ojw28 "
      }
    ]
  },
  {
    "number": 1002,
    "title": "Player doesn't work if audio-stream defined in PMT but there is no in TS.",
    "created_at": "2015-11-30T10:06:01Z",
    "closed_at": "2016-02-14T23:40:30Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/1002",
    "body": "Player doesn't work if audio-stream is defined in PMT but there is no in TS.\n\nIt can also happen if a defined stream has a wrong format.\n\nSuch stream was in task #986 .\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/1002/comments",
    "author": "Avetri",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2015-11-30T17:03:28Z",
        "body": "Isn't it a media error to define an audio stream if the stream doesn't contain any audio? The stream should just not be defined, in my opinion.\n"
      }
    ]
  },
  {
    "number": 977,
    "title": "how does getCurrentPosition() calculated ?",
    "created_at": "2015-11-23T14:26:25Z",
    "closed_at": "2015-11-23T21:45:14Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/977",
    "body": "I need to get the exact position when pausing, but ExoPlayer seems to return every time a slightly different value at that scope of time (2.456 sec is the current position when frame is starting at 2.333 sec, for example).\n\nDoes ExoPlayer takes into account FPS when calculating this value ?\n\nIt seems that when I paused I don't necessarily get the exact frame I need (When using 15 FPS - most of the times it's OK but sometimes I'm a frame behind or 1-2 frames ahead).\n\nIs there anyway to get ExoPlayer to take account of the FPS the video is having to calculate current position ?\n\nThanks in advance.\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/977/comments",
    "author": "eshkoliGilad",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2015-11-23T14:34:16Z",
        "body": "You're defining the exact position as the timestamp of the video frame being displayed, but in general that's not the case or what someone using the player would want. As an example, consider a case where there's video at a very low frame-rate (e.g. just a single frame at the start of the media) and also an audio track. It's unlikely that a user of the player would want the position to never update in that case.\n\nIf you need the exact frame position, you'll have to extend `MediaCodecVideoTrackRenderer` and override `processOutputBuffer`, like:\n\n```\n  @Override\n  protected boolean processOutputBuffer(long positionUs, long elapsedRealtimeUs,\n      ExoMediaCodec codec, ByteBuffer buffer, MediaCodec.BufferInfo bufferInfo, int bufferIndex,\n      boolean shouldSkip) {\n    boolean processed = super.processOutputBuffer(positionUs, elapsedRealtimeUs, codec, buffer,\n        bufferInfo, bufferIndex, shouldSkip);\n    if (!shouldSkip && processed) {\n      lastOutputBufferTimestamp = bufferInfo.presentationTimeUs;\n    }\n    return processed;\n  }\n```\n\nWhere `lastOutputBufferTimestamp` is the timestamp of the frame currently being displayed.\n"
      },
      {
        "user": "eshkoliGilad",
        "created_at": "2015-11-23T15:07:56Z",
        "body": "Thank you for the quick response.\n\nI tried it now, and it looks much better, but still sometimes the current visible frame after setPlayWhenReady(false) is one ahead than the time I receive in lastOutputBufferTimestamp.\nI print the time on the video frames when rendering and print the time returned by lastOutputBufferTimestamp and I see no match at some cases.\n\nAny idea why ?\n"
      },
      {
        "user": "ojw28",
        "created_at": "2015-11-23T15:59:01Z",
        "body": "Are you sure `lastOutputBufferTimestamp` isn't updated after you query it? I'm not sure what you mean when you say they're not matching. It's unclear exactly what you're printing, but if I understood correctly then both values should originate from `bufferInfo.presentationTimeUs`.\n"
      },
      {
        "user": "eshkoliGilad",
        "created_at": "2015-11-23T19:37:37Z",
        "body": "Again, thanks for the quick response.\n\nWhat I meant to say is that I stream a video already have the current time-stamp watermarked inside in every single frame with the current time-stamp of that frame. Now I need that precise time-stamp from ExoPlayer in order to show some overlay on top of video with content related to this particular frame .\n\nWhen I pause the video (in onStateChangd callback), I check for lastOutputBufferTimestamp and put its value in a TextView on top of the video.\n\nIn this state, I have the watermarked timestamp and the value in the TextView from lastOutputBufferTimestamp visible and comparable. 80% of the time it shows the same exact value and the overlay I put on top of video matches the frame perfectly, but on 20% of times when I pause I get in lastOutputBufferTimestamp the time of one earlier frame. So now the overlay I put does not match the correct frame.\n\nFor example, when frame is really 4.0 sec, when I print lastOutputBufferTimestamp value on pause state I get 3.9333 sec.\n\nDo you know what may be causing this irregularity/delay ?\n"
      },
      {
        "user": "eshkoliGilad",
        "created_at": "2015-11-23T20:18:16Z",
        "body": "@ojw28 \n\nSorry for the misunderstanding, I had a problem which was fixed now and it's working fine as it should. Thank you very much, this issue should be closed now.\n"
      },
      {
        "user": "TonyTangAndroid",
        "created_at": "2016-03-15T05:28:23Z",
        "body": "@eshkoliGilad I have came into a similar question as you raise here. ExoPlayer.getCurrentPosition() would not return the same value after it has been paused. The Current Position matters for my application because I use it to decide whether it should resume the playback or seek to the new position before continuing the playback. Could you please share how did you fix it? Should I add a range of difference like 50 ms?  This is a hacker way. I would prefer not to do it in this way.\n"
      }
    ]
  },
  {
    "number": 976,
    "title": "AudioTrack handleBuffer RESULT_POSITION_DISCONTINUITY has a problem",
    "created_at": "2015-11-23T09:23:13Z",
    "closed_at": "2015-11-24T13:04:26Z",
    "labels": [
      "question",
      "wont fix: infeasible"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/976",
    "body": "On AudioTrack ,  handleBuffer(ByteBuffer buffer, int offset, int size, long presentationTimeUs) should use startMediaTimeUs += Math.abs(bufferStartTime - expectedBufferStartTime);  rather than startMediaTimeUs += bufferStartTime - expectedBufferStartTime; ?\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/976/comments",
    "author": "zondaOf2012",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2015-11-23T10:48:10Z",
        "body": "I don't think so, no. The adjustment needs to be able to move both backward and forward.\n"
      },
      {
        "user": "ojw28",
        "created_at": "2015-11-23T10:48:42Z",
        "body": "Could you explain why you believe it should be different? Thanks.\n"
      },
      {
        "user": "ojw28",
        "created_at": "2015-11-23T10:59:06Z",
        "body": "Note that the HLS sample you provided under a related issue is a case of bad media, rather than a problem with the player.\n"
      },
      {
        "user": "zondaOf2012",
        "created_at": "2015-11-24T07:27:07Z",
        "body": "However, the same video source can play on the iOS platform . If use \"startMediaTimeUs += bufferStartTime - expectedBufferStartTime;\" , some \"DISCONTINUITY's video\"  will be stop play.\n"
      },
      {
        "user": "zondaOf2012",
        "created_at": "2015-11-24T07:36:07Z",
        "body": "In compatibility, in the hope that Exoplay is as good as MPMoviePlayerController.\n"
      },
      {
        "user": "ojw28",
        "created_at": "2015-11-24T13:04:26Z",
        "body": "The change you suggest is not correct, and whilst it might happen to work for the sample you provide, it will prevent correctly generated media from playing properly in some cases. The right solution here is to fix the source media.\n\nWe're not really aiming to play arbitrary bad media. I would also debate whether a player that can handle such media is better, since it encourages people to create bad media in the first place, which is not a good thing.\n"
      }
    ]
  },
  {
    "number": 968,
    "title": "Problem adapting between SD and HD Widevine content",
    "created_at": "2015-11-18T22:36:50Z",
    "closed_at": "2015-11-24T20:31:28Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/968",
    "body": "I have some DASH content that is Widevine protected. It's throwing an exception (`android.media.MediaCodec$CryptoException` with a full stack trace below) on adaption to a track that is protected with an HD key from a track that is protected with an SD key. Adaption between bitrates of the same resolution work fine. The same MPD behaves fine when using Shaka on Chrome browsers (both desktop and Android) which leads me to believe that this is an ExoPlayer issue (or how I'm using ExoPlayer).\n\nFrom what I can tell, on adaption from SD -> HD, Shaka is making a new license request for the HD track as soon as the first chunk of the HD track is done downloading. Then it's good to go and doesn't need to make a new license request when going from HD -> SD as it had the SD license from initial playback. Unless I'm missing it, it doesn't look like the provided ExoPlayer implementations handle this behavior.\n\nI tested a sample MPD from the ExoPlayer demo app (titled \"WV: HDCP not specified\") in my own implementation and it worked fine. It adapted back and forth from SD resolutions to HD resolutions. But it only made two license requests: one for the audio and one for the initial video (which I confirmed by removing the `audioRenderer` and it only made the one license request for video). Is this likely to have worked because the tracks contained in the sample MPD were only protected with an SD or an HD key?\n\nJust some notes about my environment, all the content is on demand (not live), we're not using key rotation, and we've tested on Nexus Player (Android 6.0), Nexus 5X (Android 6.0), Galaxy Tab A (Android 5.0.2), all of which I believe are Widevine level 1.\n\nStack trace for exception\n\n```\nInternal track renderer error.\ncom.google.android.exoplayer.ExoPlaybackException: android.media.MediaCodec$CryptoException: Error decrypting data: requested key has not been loaded\n    at com.google.android.exoplayer.MediaCodecTrackRenderer.feedInputBuffer(MediaCodecTrackRenderer.java:653)\n    at com.google.android.exoplayer.MediaCodecTrackRenderer.doSomeWork(MediaCodecTrackRenderer.java:460)\n    at com.google.android.exoplayer.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:431)\n    at com.google.android.exoplayer.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:213)\n    at android.os.Handler.dispatchMessage(Handler.java:98)\n    at android.os.Looper.loop(Looper.java:148)\n    at android.os.HandlerThread.run(HandlerThread.java:61)\n    at com.google.android.exoplayer.util.PriorityHandlerThread.run(PriorityHandlerThread.java:40)\n Caused by: android.media.MediaCodec$CryptoException: Error decrypting data: requested key has not been loaded\n    at android.media.MediaCodec.native_queueSecureInputBuffer(Native Method)\n    at android.media.MediaCodec.queueSecureInputBuffer(MediaCodec.java:2292)\n    at com.google.android.exoplayer.MediaCodecTrackRenderer.feedInputBuffer(MediaCodecTrackRenderer.java:644)\n    at com.google.android.exoplayer.MediaCodecTrackRenderer.doSomeWork(MediaCodecTrackRenderer.java:460) \n    at com.google.android.exoplayer.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:431) \n    at com.google.android.exoplayer.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:213) \n    at android.os.Handler.dispatchMessage(Handler.java:98) \n    at android.os.Looper.loop(Looper.java:148) \n    at android.os.HandlerThread.run(HandlerThread.java:61) \n    at com.google.android.exoplayer.util.PriorityHandlerThread.run(PriorityHandlerThread.java:40) \nonCryptoError\nandroid.media.MediaCodec$CryptoException: Error decrypting data: requested key has not been loaded\n    at android.media.MediaCodec.native_queueSecureInputBuffer(Native Method)\n    at android.media.MediaCodec.queueSecureInputBuffer(MediaCodec.java:2292)\n    at com.google.android.exoplayer.MediaCodecTrackRenderer.feedInputBuffer(MediaCodecTrackRenderer.java:644)\n    at com.google.android.exoplayer.MediaCodecTrackRenderer.doSomeWork(MediaCodecTrackRenderer.java:460)\n    at com.google.android.exoplayer.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:431)\n    at com.google.android.exoplayer.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:213)\n    at android.os.Handler.dispatchMessage(Handler.java:98)\n    at android.os.Looper.loop(Looper.java:148)\n    at android.os.HandlerThread.run(HandlerThread.java:61)\n    at com.google.android.exoplayer.util.PriorityHandlerThread.run(PriorityHandlerThread.java:40)\n```\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/968/comments",
    "author": "baseballbrad3",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2015-11-18T22:50:12Z",
        "body": "Widevine license requests include a content id (which is independent to the stream from which the data used to generate the request was obtained). The license server is expected to return all keys to which the user is entitled for the content id.\n\nSo regardless of which stream is used to make the initial license request, the license response should contain both HD and SD keys (assuming the user is is entitled to play both). Hence subsequent requests are unnecessary to allow adaptation between HD and SD. This is obviously a more efficient way of doing things than requiring additional license requests when quality switches occur.\n\nIt sounds a bit like an issue with the license server?\n"
      },
      {
        "user": "baseballbrad3",
        "created_at": "2015-11-18T23:15:45Z",
        "body": "Thinking back the our proxy implementation, it's entirely possible we're not returning all keys. Thanks for the info. I'll report back when I figure out what's going on with the license response.\n"
      },
      {
        "user": "baseballbrad3",
        "created_at": "2015-11-24T20:31:28Z",
        "body": "Our strategy has changed a bit and I'm unfortunately not going to be exploring this anymore. Hopefully anyone else that has the same issue got something from this question.\n"
      },
      {
        "user": "baseballbrad3",
        "created_at": "2015-12-02T16:17:59Z",
        "body": "I would like to provide an update. We ended up making a change to our Widevine proxy so that it returns all the keys and the crash was resolved. I hope this helps anyone in a similar situation.\n"
      },
      {
        "user": "ojw28",
        "created_at": "2015-12-02T16:18:52Z",
        "body": "Glad you fixed the issue; and thanks for sharing!\n"
      }
    ]
  },
  {
    "number": 967,
    "title": "Switching between encrypted streams",
    "created_at": "2015-11-18T12:49:19Z",
    "closed_at": "2015-11-26T12:15:28Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/967",
    "body": "Hello,\nI have encountered a problem while switching between encrypted HLS streams after upgrading to ExoPlayer 1.5.2 from 1.4.1, I am switching between streams as advised in question #931\nSwitching between non-encrypted streams is fine, also between encrypted and non-encrypted. But when switching between encrypted streams i get this exception\n\n``` java\n11-18 13:32:27.926 13748-13847/? E/LoadTask: Unexpected exception loading stream\n11-18 13:32:27.926 13748-13847/? E/LoadTask: java.lang.IllegalArgumentException\n11-18 13:32:27.926 13748-13847/? E/LoadTask:     at com.google.android.exoplayer.util.Assertions.checkArgument(Assertions.java:39)\n11-18 13:32:27.926 13748-13847/? E/LoadTask:     at com.google.android.exoplayer.util.ParsableByteArray.setPosition(ParsableByteArray.java:133)\n11-18 13:32:27.926 13748-13847/? E/LoadTask:     at com.google.android.exoplayer.util.ParsableByteArray.skipBytes(ParsableByteArray.java:145)\n11-18 13:32:27.926 13748-13847/? E/LoadTask:     at com.google.android.exoplayer.extractor.ts.TsExtractor.read(TsExtractor.java:141)\n11-18 13:32:27.926 13748-13847/? E/LoadTask:     at com.google.android.exoplayer.hls.HlsExtractorWrapper.read(HlsExtractorWrapper.java:240)\n11-18 13:32:27.926 13748-13847/? E/LoadTask:     at com.google.android.exoplayer.hls.TsChunk.load(TsChunk.java:108)\n11-18 13:32:27.926 13748-13847/? E/LoadTask:     at com.google.android.exoplayer.upstream.Loader$LoadTask.run(Loader.java:209)\n11-18 13:32:27.926 13748-13847/? E/LoadTask:     at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:390)\n11-18 13:32:27.926 13748-13847/? E/LoadTask:     at java.util.concurrent.FutureTask.run(FutureTask.java:234)\n11-18 13:32:27.926 13748-13847/? E/LoadTask:     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1080)\n11-18 13:32:27.926 13748-13847/? E/LoadTask:     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:573)\n11-18 13:32:27.926 13748-13847/? E/LoadTask:     at java.lang.Thread.run(Thread.java:841)\n```\n\nI have tried to track down the issue and found out that TS Extractor is trying to skip adaptation field longer than the size of tsPacket Buffer:\n\n``` java\n11-18 13:32:27.625 13748-13773/? E/null check: position: 5, bytes: 7, limit: 188\n11-18 13:32:27.625 13748-13773/? E/null check: position: 6, bytes: 1, limit: 9\n11-18 13:32:27.625 13748-13773/? E/null check: position: 9, bytes: 0, limit: 9\n11-18 13:32:27.625 13748-13748/? E/Status: preparing\n11-18 13:32:27.896 13748-13847/? E/null check: position: 5, bytes: 10, limit: 188\n11-18 13:32:27.926 13748-13847/? E/null check: position: 5, bytes: 185, limit: 188\n```\n\nwhere preparing is status of player after switching and bytes is the number if bytes extractor is trying to skip. This never happened while i was using version 1.4.1. Encryption is standard AES so it should be replicable with any encrypted HLS streams.\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/967/comments",
    "author": "SnowcatSVK",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2015-11-18T17:21:43Z",
        "body": "You're probably not fully rebuilding the renderers when you switch. You shouldn't re-use any objects that you used to build one set of renderers when building the next set, particularly things like DataSource instances. Is it possible that you are re-using them? If so, try not doing so.\n"
      },
      {
        "user": "SnowcatSVK",
        "created_at": "2015-11-19T08:05:25Z",
        "body": "Well, i am using DemoPlayer and HLSRendererBuilder from demo directory in project, these are the methods i am using for switching:\n\n``` java\nprivate HlsRendererBuilder createRenderer() {\n        String userAgent = Util.getUserAgent(this, \"ExoplayerTest\");\n        return new HlsRendererBuilder(this, userAgent, contentUri.toString());\n    }\n\n    private void preparePlayer() {\n        if (player == null) {\n            player = new DemoPlayer(createRenderer());\n            player.addListener(this);\n            player.setCaptionListener(this);\n            player.setMetadataListener(this);\n            playerNeedsPrepare = true;\n\n        }\n        if (playerNeedsPrepare) {\n            player.prepare();\n            playerNeedsPrepare = false;\n        }\n        player.setSurface(surfaceView.getHolder().getSurface());\n        player.setPlayWhenReady(true);\n    }\n\n    private void releasePlayer() {\n        if (player != null) {\n            //playerPosition = player.getCurrentPosition();\n            player.release();\n            player = null;\n\n        }\n    }\n```\n\nand this is the way i am using those methods: \n\n``` javascript\n    releasePlayer();\n    preparePlayer();\n```\n\nonly thing i am reusing is surfaceView, unless there is something in DemoPlayer and HLSRendererBuilder that i have missed, but that shouldn't be the case since it never happened with nonencrypted streams\n"
      },
      {
        "user": "ojw28",
        "created_at": "2015-11-19T16:53:35Z",
        "body": "If that's the case then the two playbacks should be completely independent to one another. It's pretty much equivalent to backing out of playback in the demo activity and selecting another sample. In which case I don't understand how one playback could affect the next (at a theoretical level)?\n\nCan you modify the demo app in some way to reproduce the issue? And if so, can you upload it to GitHub so that we can reproduce ourselves?\n"
      },
      {
        "user": "SnowcatSVK",
        "created_at": "2015-11-20T10:25:01Z",
        "body": "I have my whole project in private repository on GitHub, i can privately send you link to that repository so you can test it yourself\n"
      },
      {
        "user": "ojw28",
        "created_at": "2015-11-26T12:15:28Z",
        "body": "The issue is related to the way that you've made `HlsChunkSource.encryptionKeyUri`static in your branch. The breaks the assumption that the second playback is independent of the first, because state is being left lying around from the first playback in the static variable. If I null it out where the player is released, then the second playback works fine.\n\nSo the conclude - It looks like an issue with your local modifications. As a general style point, it's worth exploring solutions that don't require statics except in the specific case of singletons (which definitely isn't the case for this particular variable). I also noticed some interesting code in User.java where initSingletons re-initializes singletons potentially multiple times, which looks wrong to me.\n"
      },
      {
        "user": "SnowcatSVK",
        "created_at": "2015-11-27T08:44:44Z",
        "body": "Thank you very much for help, I must have left it there from the time when I was trying different solutions and forgot about it, shame I couldn't find it myself, as for User.java, this is a recycled class from an older project written by different developer, I have recycled it as it was working well with our API and I needed to get going fast with testing, this project was just for testing purposes, so I am completely rewriting it since all of the issues are resolved now.\n"
      }
    ]
  },
  {
    "number": 966,
    "title": "MPEGTS seeking capability",
    "created_at": "2015-11-17T21:19:12Z",
    "closed_at": "2016-05-22T22:59:36Z",
    "labels": [
      "question",
      "wont fix: infeasible"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/966",
    "body": "Hello...why isn't possible to seek a MPEGTS stream? MPEGTS is providing a great advantage for my application but the drawback is that I'm not able to seek. My case is that I'm streaming MP4 through UDP, and some packets might get dropped so instead of re-transmission I replace the dropped frame by an old frame but doing this is causing problem with Exoplayer(the video doesn't even play) unless I used MPEGTS container format where it distorts as expected but at least it continues playing.\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/966/comments",
    "author": "amoussawi",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2015-11-17T21:37:33Z",
        "body": "Unlike containers such as MP4, MPEG-TS doesn't contain an index structure to allow seeking (i.e. a structure that allows mapping from time->byteOffset). Hence seeking in an MPEG-TS stream requires the player to either download the whole stream, scan it and build an index itself, or to guess based on average bitrate assumptions. We've decided to only support seeking in container formats that are properly designed to support it, which MPEG-TS is not.\n\nAs an aside, note that seeking is possible in HLS, even though it uses MPEG-TS, because in HLS a separate media playlist is provided to serve as an index structure.\n\nIt seems strange to be using UDP for seekable streams. What's your use case exactly? Why don't you just use MP4 over TCP? It's not valid, in general and for any container format, to replace dropped frames with other frames taken from the stream.\n"
      },
      {
        "user": "amoussawi",
        "created_at": "2015-11-17T22:02:10Z",
        "body": "I will take a look into HLS if I could do a work around. \nWell it will only be possible to seek backward and not forward using a cache.\nI'm replacing frames because I cannot skip frames, and I guess this should be the case when live streaming, and my case is that I'm not using a media source from which to request the data at anytime, request happens only once and then data transmission starts through UDP until end of stream is reached.\n"
      },
      {
        "user": "Avetri",
        "created_at": "2016-05-23T10:08:47Z",
        "body": "Indexing of TS files there are In solutions like DVR. So, if somebody would be so interested, an indexer might help. \n"
      },
      {
        "user": "amoussawi",
        "created_at": "2016-05-23T11:20:48Z",
        "body": "Actually I already worked on it and used PCR value in the TS packet header for indexing. You can take a look at it on pull request #1274\n"
      },
      {
        "user": "ojw28",
        "created_at": "2018-08-06T13:39:05Z",
        "body": "Now supported in `dev-v2`."
      }
    ]
  },
  {
    "number": 960,
    "title": "Get current position in microseconds",
    "created_at": "2015-11-15T08:26:39Z",
    "closed_at": "2015-11-16T23:25:11Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/960",
    "body": "Is there a way to get the current position of player in microseonds, not just miliseconds ?\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/960/comments",
    "author": "eshkoliGilad",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2015-11-15T13:46:55Z",
        "body": "No. Why would microsecond level granularity be useful? Millisecond level granularity seems more than sufficient to me?\n"
      }
    ]
  },
  {
    "number": 956,
    "title": "CacheDataSource guarantees",
    "created_at": "2015-11-13T09:07:30Z",
    "closed_at": "2015-11-13T12:38:53Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/956",
    "body": "hello :-)\nif I integrated my datasource inside a cachedatasource...and let's say the range 0-8000 was read at first and it succeeded and then the range 3000-8000 was requested again...does the cachedatasource give any guarantee that the range 3000-8000 will be read from the cache not from the upstream datasource?\nanother question how BUFFER_SEGMENT_SIZE and BUFFER_SEGMENT_COUNT should be assigned?\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/956/comments",
    "author": "amoussawi",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2015-11-13T12:38:53Z",
        "body": "CacheDataSource currently only works for bounded range requests. Unless you're implementing VOD DASH this is probably not the type of request that the player is issuing, in which case CacheDataSource may not do any caching at all. There is an issue tracking making CacheDataSource more generally useful (#420).\n\nIn general, it's not feasible to make hard guarantees about when cache hits/misses occur. For example, the device might have no free space into which media can be cached. So you should always assume that a request might need to go to the network.\n"
      }
    ]
  },
  {
    "number": 935,
    "title": "ExtractorSampleSource same range multiple requests",
    "created_at": "2015-11-06T23:48:42Z",
    "closed_at": "2015-11-07T15:11:50Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/935",
    "body": "Hello :)\nIf a DataSource is opened and the requested range of data is read successfully, is it possible that the ExtractorSampleSource might request the same range of data again if an internal error related to the Extractor or whatever has occured? given I will be using only ExtractorSampleSource and not any other SampleSource with unknown implementation.\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/935/comments",
    "author": "amoussawi",
    "comments": [
      {
        "user": "amoussawi",
        "created_at": "2015-11-07T10:51:44Z",
        "body": "well after some debugging i found out that it does...at the beginning of streaming it opened the datasource with position=0 which is obvious and after reading from it the positionHolder.position=75477...but for the second loop(inside the ExtractorLoadable load() while-loop) it opened the datasource with position=37710 which is less than what was read at first...is it really normal? and if yes why it would do that, it looks like an inefficient use of resources?\n"
      },
      {
        "user": "ojw28",
        "created_at": "2015-11-07T15:11:50Z",
        "body": "We make no guarantees about what ranges of data we're going to read, or when we're going to read them. Note that it's partly dependent on both the container format and the layout of the media within it.\n\nThe specific case you mention is an inefficiency, and is a quirk that's necessary due to the way track selection works in ExoPlayer. We're aware of this. We will most likely be able to optimize this in the future, but this will be done as a bigger change around track selection.\n"
      }
    ]
  },
  {
    "number": 931,
    "title": "Changing streams ",
    "created_at": "2015-11-06T11:26:16Z",
    "closed_at": "2015-11-06T19:13:57Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/931",
    "body": "Hi there,\ni have one question regarding HLS, is there any way to change stream links withou creating completely new player and renderer?\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/931/comments",
    "author": "SnowcatSVK",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2015-11-06T19:13:57Z",
        "body": "You always need to build new renderers. You can optionally re-use the ExoPlayer by passing the new renderers to the existing ExoPlayer instance. This doesn't save much though, and there are some complexities around having to reset the playback position manually, so you may as well just instantiate a new one.\n"
      }
    ]
  },
  {
    "number": 930,
    "title": "Explayer and wakelock",
    "created_at": "2015-11-05T17:29:38Z",
    "closed_at": "2015-11-08T21:03:29Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/930",
    "body": "hi, \nI hava a question I use exoplayer for online audio streaming and i see by testing and this without aquiring wakelock and wifilock that the player   keeps playing for more than 20 min without touching the phone . does this mean that i dont need wakelock and wifilock when i use exoplayer\n\nps: tested on LG G2 (4.4.2) \n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/930/comments",
    "author": "diabloo",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2015-11-08T19:20:13Z",
        "body": "ExoPlayer does not acquire a WakeLock or WifiLock directly, but MediaCodecAudioTrackRenderer uses an AudioTrack which should keep the device awake while audio is playing (and for a few seconds after audio playback stops). If audio playback was continuous that might explain why the device stayed awake with the screen off.\n\nHowever, the device can sleep if audio playback is interrupted and it is not being kept awake by a WakeLock. This could happen if the player runs out of data and needs to rebuffer from the network, for example. So streaming apps that play audio when the screen is off should acquire a WakeLock and WifiLock during playback. It is important to release the locks if/when playback is finished so that the device can sleep.\n"
      },
      {
        "user": "diabloo",
        "created_at": "2015-11-08T21:03:09Z",
        "body": "Thank your for this clear answer \n"
      }
    ]
  },
  {
    "number": 924,
    "title": "Display Errorcodes",
    "created_at": "2015-11-04T16:12:01Z",
    "closed_at": "2015-11-05T07:49:28Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/924",
    "body": "I use the Exoplayer for a while and it's work fine. But for monitoring reasons I need to see the MediaPlayer native Errorcodes.\n\nSo is there any way to implement the MediaPlayer.OnErrorListener or have MediaCodec the same Errorcodes?\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/924/comments",
    "author": "boburger",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2015-11-05T03:16:50Z",
        "body": "ExoPlayer errors are unrelated to MediaPlayer error codes, so I'm not really sure what this means.\n"
      }
    ]
  },
  {
    "number": 921,
    "title": "Exoplayer declared permissions",
    "created_at": "2015-11-03T18:09:25Z",
    "closed_at": "2016-01-22T15:29:26Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/921",
    "body": "Hi,\nfirst ,thank you for this library  , i was  wondering if i can remove the wirte permission in exoplyer ,because i use it only for online audio streaming \n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/921/comments",
    "author": "diabloo",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2015-11-03T19:19:16Z",
        "body": "You can remove both READ_EXTERNAL_STORAGE and WRITE_EXTERNAL_STORAGE if you're only doing streaming over the network.\n\nWhen we first added these permissions to the manifest I don't think manifest merging existed, so the permissions were there for informational purposes only. Now manifest merging does exist I guess these permissions do get merged into your application when you pull in the ExoPlayer library.\n\nIs that correct? Do you think it would make more sense to comment these permissions out by default in the library manifest?\n"
      },
      {
        "user": "diabloo",
        "created_at": "2015-11-03T19:49:03Z",
        "body": "thank you for the response . yes I think it would be better to let the devlepper add permission in the manifaist . for my case it easier and faster  to use the Jcenter dependency witout downloading and linking the library . thank you for your time and for this library\n"
      },
      {
        "user": "ojw28",
        "created_at": "2016-01-22T15:29:26Z",
        "body": "This is fixed in the dev branch.\n"
      }
    ]
  },
  {
    "number": 918,
    "title": "How much data is used when streaming music ?",
    "created_at": "2015-11-03T14:33:40Z",
    "closed_at": "2015-11-03T15:43:11Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/918",
    "body": "Hi, I am streaming music from a cloud using `MediaPlayer`, untill now, playing a song of 3.4 MB will consume 3.4 MB on phone using Data.\n\nSwitching to exoplayer will help my app to use less data ? Thank you\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/918/comments",
    "author": "marianpavel",
    "comments": [
      {
        "user": "andreimarinescu",
        "created_at": "2015-11-03T14:37:37Z",
        "body": "Well, downloading a 3.4MB file will always consume at least 3.4MB of data. You might want to look at transcoding the files to an adaptive stream format such as DASH or HLS, this could give you more control over how much bandwith each client is consuming.\n\nAlso, ExoPlayer could enable you to control how much of that file you buffer, so if you have a lot of users not listening to the full file you don't download it all (this is probably not trivial but achievable).\n"
      }
    ]
  },
  {
    "number": 913,
    "title": "Adobe HTTP Dynamic Streaming (HDS)",
    "created_at": "2015-11-02T06:57:02Z",
    "closed_at": "2016-04-25T14:46:10Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/913",
    "body": "Hello,\n\nAre there any plans to support this streaming format? \n\nThanks.\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/913/comments",
    "author": "krok55",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2015-11-02T16:38:40Z",
        "body": "We already support DASH, SmoothStreaming and HLS, all of which provide similar functionality. We have no current plans to support Adobe HDS.\n"
      }
    ]
  },
  {
    "number": 875,
    "title": "UUID Smooth Streaming exception UnsupportedSchemeException",
    "created_at": "2015-10-17T11:34:45Z",
    "closed_at": "2015-10-20T10:38:07Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/875",
    "body": "Hi,\n\nI'm trying to play protected with \"Smooth Streaming \" content, but to try to parse the ProtectionHeader and get the UUID , an exception of \"schema not supported\" . Do not try to connect to the license server or anything.\n\nUUID is \"9a04f079-9840-4286-ab92-e65be0885f95\"\n\nThank you.\n\nException:\n\n```\ncom.google.android.exoplayer.drm.UnsupportedDrmException: android.media.UnsupportedSchemeException: Failed to instantiate drm object.\n        at com.google.android.exoplayer.drm.StreamingDrmSessionManager.<init>(StreamingDrmSessionManager.java:182)\n        at com.google.android.exoplayer.demo.player.SmoothStreamingRendererBuilder$AsyncRendererBuilder.onSingleManifest(SmoothStreamingRendererBuilder.java:154)\n        at com.google.android.exoplayer.demo.player.SmoothStreamingRendererBuilder$AsyncRendererBuilder.onSingleManifest(SmoothStreamingRendererBuilder.java:93)\n```\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/875/comments",
    "author": "funsecurity",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2015-10-17T15:50:44Z",
        "body": "Aside from AndroidTV devices, most Android devices don't provide platform support for PlayReady DRM (which is what this UUID corresponds to).\n"
      },
      {
        "user": "objectiveCarlo",
        "created_at": "2015-11-01T10:12:42Z",
        "body": "This sucks because our DRMs are in classic widevine (using widevine://) and PlayReady (UUID = 9a04f079-9840-4286-ab92-e65be0885f95) both are not working on exoplayer. \n\nDo you guys have any suggestions on how to do DRM support that will cover almost all android devices? \nThanks\n"
      },
      {
        "user": "ojw28",
        "created_at": "2015-11-02T16:41:16Z",
        "body": "If you want to cover almost all Android devices, you should use Widevine Classic (for older devices) and Widevine Modular (for newer ones). PlayReady is normally only supported on AndroidTV devices, as far as I know.\n"
      }
    ]
  },
  {
    "number": 872,
    "title": "Is it possible to use the ExtractorRendererBuilder from the Demo with Widevine protection ?",
    "created_at": "2015-10-16T09:36:21Z",
    "closed_at": "2016-03-22T17:20:00Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/872",
    "body": "Hello,\nI would like to make my own renderer able to read video (progressif download like wmv) content with Widevine protection. Is it possible with the ExoPlayer ?\n\nIf yes, can I have some help please ?\n\nRegards, Thanks in advance\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/872/comments",
    "author": "matt-hub",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2015-10-16T10:11:25Z",
        "body": "I'm unsure what the question is here, since ExtractorRendererBuilder isn't used for HLS, which uses HlsRendererBuilder. Is this about HLS or something else?\n\nEither way, we currently support Widevine only for DASH and SmoothStreaming with fragmented mp4 (and webm in the case of DASH).\n"
      }
    ]
  },
  {
    "number": 864,
    "title": "HLS : Is there a way to extract event date?",
    "created_at": "2015-10-13T11:19:25Z",
    "closed_at": "2017-01-13T17:17:42Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/864",
    "body": "For HLS content, is there a way to extract event date of a given trunk? Like a callback to implement or something like that.\nThx.\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/864/comments",
    "author": "rajyvan",
    "comments": [
      {
        "user": "crossle",
        "created_at": "2015-11-02T05:12:37Z",
        "body": "+1\n"
      },
      {
        "user": "ojw28",
        "created_at": "2017-01-13T17:17:42Z",
        "body": "I think it should be possible to query this from the player's Timeline in V2."
      },
      {
        "user": "rajyvan",
        "created_at": "2017-01-16T14:32:13Z",
        "body": "Ok nice ! ;)"
      }
    ]
  },
  {
    "number": 851,
    "title": "Get URL played by the player",
    "created_at": "2015-10-08T11:56:07Z",
    "closed_at": "2015-10-11T19:11:53Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/851",
    "body": "Hi,\n\nI'm using ExoPlayer to read some HLS streams. I was wondering : Can we retrieve the URL read by the player ?\n\nI'm asking this in case of a redirection : Let's assume, I tell the player to read an **URL A**. But this URL redirects the player to **URL B**. So the player is going to read **URL B**.\n\nI read the docs but I did not find a such property / method.\n\nThanks.\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/851/comments",
    "author": "tcacciatore",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2015-10-11T19:10:58Z",
        "body": "Taking the demo app as an example, in `HlsRendererBuilder.onSingleManifest`, you can read `manifest.baseUri` to get the URL after redirection (i.e. URL B). Hope that helps!\n"
      }
    ]
  },
  {
    "number": 843,
    "title": "Set quality in SmoothStreaming",
    "created_at": "2015-10-06T13:10:11Z",
    "closed_at": "2015-10-06T20:41:23Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/843",
    "body": "I am working on a VOD app and the video assets are Smooth Streaming. There is some way to change manually the start bitrate in order to put the highest available by default?\n\nThanks!\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/843/comments",
    "author": "juanpef",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2015-10-06T13:56:03Z",
        "body": "Yes. When you instantiate the components needed for playback, you'll build a `SmoothStreamingChunkSource` to generate video chunks. One of the objects passed to the constructor is a `FormatEvaluator`. You're probably passing an `AdaptiveEvaluator` for this argument at the moment. The solution is to create and inject your own `FormatEvaluator` implementation, probably based on the `AdaptiveEvaluator` implementation, that selects the initial format in a different way.\n"
      },
      {
        "user": "juanpef",
        "created_at": "2015-10-06T14:21:17Z",
        "body": "Thanks!\n"
      }
    ]
  },
  {
    "number": 841,
    "title": "ExoPlayer HLS Widevine Support",
    "created_at": "2015-10-05T13:25:20Z",
    "closed_at": "2015-10-05T13:56:38Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/841",
    "body": "Hi,\n   Just want to know if the Exoplayer1.42 supports Widevine DRM with HLS Streaming..?\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/841/comments",
    "author": "Amritpal33",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2015-10-05T13:56:38Z",
        "body": "We're only supporting DASH and SmoothStreaming with Widevine (and Playready where the device supports it - primarily on AndroidTV). For HLS, we're currently supporting AES-128 only.\n"
      }
    ]
  },
  {
    "number": 834,
    "title": "Exoplayer on Android M",
    "created_at": "2015-10-02T00:19:46Z",
    "closed_at": "2015-10-11T19:12:56Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/834",
    "body": "As you know, in android M we can handle permission in the app separately. I noticed one of the permissions in Exoplayer is WRITE_EXTERNAL_STORAGE. How do you guys suggest to handle this on M devices? Should we request for the permission when the app launches or right before the playback? What would happen if the permission is denied?\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/834/comments",
    "author": "gabrielsoroush",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2015-10-02T10:01:07Z",
        "body": "Unless you're doing something that involves caching/writing media to disk then you don't need the permission. If you do, it's up to you when you request it.\n"
      }
    ]
  },
  {
    "number": 821,
    "title": "save video after online stream(hls)",
    "created_at": "2015-09-28T06:27:30Z",
    "closed_at": "2016-04-25T14:46:38Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/821",
    "body": "Hi\nI want to write a android app with some features; After user see video online i want to save the video on device securely. it means I don't wan't user download it separately and use his/my bandwidth twice.\nwhich file i have to edit for this purpose? \n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/821/comments",
    "author": "siavashabdoli",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-04-25T14:46:38Z",
        "body": "This question is not about functionality supported directly by ExoPlayer, and therefore falls outside the scope of this issue tracker. Closing.\n"
      }
    ]
  },
  {
    "number": 813,
    "title": "Widevine license and Playback",
    "created_at": "2015-09-22T17:21:14Z",
    "closed_at": "2016-03-22T17:30:27Z",
    "labels": [
      "question",
      "wont fix: infeasible"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/813",
    "body": "Hi,\nWe are playing widevine modular drm encrypted dash videos using exoplayer. But what I have observed is every time we play the video, it sends the license request to the widevine proxy server. The license is giving for 72 hours or so. So it should request the license only after the current license is expired right? \nHow we can force exoplayer to check the validity of the current license and play the video?\nRegards,\nRandeep\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/813/comments",
    "author": "randeeppr",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2015-09-22T19:41:24Z",
        "body": "As I understand it, streaming licenses are only valid/usable for as long as the MediaDrm session into which they've been loaded remains open. ExoPlayer's StreamingDrmSessionManager keeps a MediaDrm session for the duration of the playback only. Starting a new playback will open a new session, and so it will be necessary to load the licenses again.\n\nWe have no plans to change this behavior. If you were particularly motivated to do something different, you'd need to implement your own DrmSessionManager that holds a MediaDrm session open for a longer period of time, and reuses it from one playback to the next. Note however that holding multiple sessions open is generally a bad idea, and will likely cause session instantiation to fail if you try to have too many sessions open at once.\n"
      }
    ]
  },
  {
    "number": 802,
    "title": "Right way to implement video playlist",
    "created_at": "2015-09-17T07:48:55Z",
    "closed_at": "2016-04-09T14:07:40Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/802",
    "body": "I'm reusing `DemoPlayer` from the demo app and I'd like to have playlist functionality for videos.\nSo in essence, enable the user to create a queue, etc.\n\nAs far as I understand the only way to get such functionality is by replacing the `RendererBuilder` instance which holds the URL to the video.\nWithout making any modifications to `DemoPlayer`, it seems that I have to release it and reconstruct it with a new `RendererBuilder`.\n\nAnother way might be to add a setter for `rendererBuilder`, but I noticed that `rendererBuilder` field in `DemoPlayer` is declared as `final`. I didn't dive in too deep to figure out why is it `final`, but instead decided to ask here first.\n\nSo what would be the best way to do this?\nThanks in advance! \n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/802/comments",
    "author": "Nimrodda",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2016-04-09T14:07:40Z",
        "body": "#1270 tracks adding playlist support.\n"
      }
    ]
  },
  {
    "number": 775,
    "title": "Dash HTTP 403 error when using uneven segment count for audio and video",
    "created_at": "2015-09-09T09:28:43Z",
    "closed_at": "2015-09-09T12:03:40Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/775",
    "body": "Hi,\nI've been trying to figure how to play dash when the number of segments is different between Audio and Video. \nFor example Audio has 4 segments and Video has only 3. \nThe current behaviour is for each segment to try and fetch both audio and video. \ni'm not sure where is best to change that behaviour. \n\nExample MPD file \n\n```\n<MPD xmlns=\"urn:mpeg:dash:schema:mpd:2011\" xmlns:mas=\"urn:marlin:mas:1-0:services:schemas:mpd\" xmlns:mspr=\"urn:microsoft:playready\" xmlns:cenc=\"urn:mpeg:cenc:2013\" profiles=\"urn:mpeg:dash:profile:isoff-live:2011\" type=\"static\" mediaPresentationDuration=\"PT8S\" minBufferTime=\"PT1.97S\">\n<Period>\n    <AdaptationSet mimeType=\"audio/mp4\" segmentAlignment=\"true\" startWithSAP=\"1\" lang=\"und\">\n        <SegmentTemplate duration=\"1968\" initialization=\"$RepresentationID$/init.mp4\" media=\"$RepresentationID$/seg-$Number$.m4f\" startNumber=\"0\" timescale=\"1000\"/>\n        <Representation audioSamplingRate=\"22050\" bandwidth=\"3613\" codecs=\"mp4a.40.2\" id=\"270k/audio/und\">\n            <AudioChannelConfiguration schemeIdUri=\"urn:mpeg:dash:23003:3:audio_channel_configuration:2011\" value=\"2\"/>\n        </Representation>\n    </AdaptationSet>\n    <AdaptationSet mimeType=\"video/mp4\" scanType=\"progressive\" segmentAlignment=\"true\" startWithSAP=\"1\">\n        <SegmentTemplate duration=\"1968\" initialization=\"$RepresentationID$/init.mp4\" media=\"$RepresentationID$/seg-$Number$.m4f\" startNumber=\"0\" timescale=\"1000\"/>\n        <Representation bandwidth=\"90869\" codecs=\"avc1.42c00d\" frameRate=\"30000/1001\" height=\"270\" id=\"270k/video/1\" width=\"360\"/>\n    </AdaptationSet>\n</Period>\n```\n\n</MPD>\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/775/comments",
    "author": "MaTriXy",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2015-09-09T10:06:39Z",
        "body": "The manifest indicates there are the same number of segments of audio and video, as far as I can see. Where is it indicating anything differently?\n"
      },
      {
        "user": "MaTriXy",
        "created_at": "2015-09-09T11:05:06Z",
        "body": "The transcoder is issuing a bad mpd then. \n"
      }
    ]
  },
  {
    "number": 762,
    "title": "Momentary freeze in camera-fed-GL-texture when loading clip in ExoPlayer",
    "created_at": "2015-09-06T10:50:21Z",
    "closed_at": "2015-10-11T19:19:44Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/762",
    "body": "I have a exoplayer and a camera being rendered to a gl texture. When I load a clip while the camera is visible I get a momentry freeze. Is there some way to lower the thread priority while the next clip is loading?\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/762/comments",
    "author": "rcvangemert",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2015-09-07T13:11:35Z",
        "body": "I doubt this is anything to do with thread priority. It's probably some unfortunate locking in the underlying media server when the decoder makes its memory allocation, or something like that.\n\nHave you managed to infer anything about what could be causing the momentary freeze?\n"
      },
      {
        "user": "rcvangemert",
        "created_at": "2015-09-07T21:26:07Z",
        "body": "I commented out each step in the initialization the freeze occured when I enabled the prepare statment.\n\nplayer.prepare(videoRenderer, audioRenderer);\n\nMy initialization sequence is-\n\n     player = ExoPlayer.Factory.newInstance(RENDERER_COUNT);\n     player.addListener(this);\n     Mp4Extractor extractor = new Mp4Extractor();\n     Allocator allocator = new DefaultAllocator(BUFFER_SEGMENT_SIZE);\n     DataSource dataSource = new DefaultUriDataSource(context, null, \"videoAssist\");\n     ExtractorSampleSource extractorSampleSource = new ExtractorSampleSource(\n         uri, dataSource, allocator, BUFFER_SEGMENT_COUNT \\* BUFFER_SEGMENT_SIZE, extractor);\n     videoRenderer = new MediaCodecVideoTrackRenderer(extractorSampleSource,\n                                                            MediaCodec.VIDEO_SCALING_MODE_SCALE_TO_FIT,\n                                                             0,\n                                                             handler,\n                                                             this,\n                                                             0);\n       audioRenderer = new AudioTrackRenderer(extractorSampleSource, audioMixer, profile);\n            \n       player.prepare(videoRenderer, audioRenderer); \n            \n       surfaceTexture = createSurfaceTexture();\n       surface = new Surface(surfaceTexture);\n       player.sendMessage(videoRenderer, MediaCodecVideoTrackRenderer.MSG_SET_SURFACE, surface);\n"
      },
      {
        "user": "rcvangemert",
        "created_at": "2015-09-08T04:41:24Z",
        "body": "I actualy have 2  exoplayers, camera and graphics pane. All use a opengl texture. when the camera is the primary source and a clip is loaded I get a camera freeze. When a exoplayer is the primary source and a clip is loaded on second exoplayer I get a exoplayer freeze. I know this is pushing things... but its so close to working well. In my case the exoplayer  can take its time to load a clip as other sources are being recorded.\n"
      },
      {
        "user": "ojw28",
        "created_at": "2015-09-09T10:28:23Z",
        "body": "You'll probably need to narrow it down further (i.e. which call within ExoPlayer's code, within prepare). My hunch would be that it occurs when the video decoder allocates the memory that it needs. This may lock something in the underlying media server, causing the camera to freeze.\n\nI'm just speculating, although if that is the issue then there's not much we can do about it.\n"
      },
      {
        "user": "rcvangemert",
        "created_at": "2015-09-09T10:39:45Z",
        "body": "Thanks.\n"
      },
      {
        "user": "ojw28",
        "created_at": "2015-10-11T19:19:44Z",
        "body": "I don't think there's anything actionable for us to do here, so closing. Please update if you managed to root cause the underlying issue. Thanks!\n"
      }
    ]
  },
  {
    "number": 757,
    "title": "Avoid the final modifier all together",
    "created_at": "2015-09-04T08:35:11Z",
    "closed_at": "2015-09-09T10:26:16Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/757",
    "body": "As you saw in my previous PR (that was accepted, thanks!) I had issues with final methods that I needed to override. While bumping ExoPlayer in our project I'm now experiencing more issues with added final modifiers. For instance, a test broke since we couldn't mock a certain class which had final methods. Therefore, again, unless there's a very good reason, I suggest removing any final modifiers to make it easier for consumers of the SDK to test their applications. I was able to solve my specific issue by a rather ugly workaround, so this is more of a general suggestion.\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/757/comments",
    "author": "pakerfeldt",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2015-09-04T10:41:04Z",
        "body": "It's a tricky one. From a developer's point of view and given a single version of the library, it's easiest for the developer if they can arbitrarily extend whatever they want as you suggest. In practice however, what we've seen both within Google's own app teams and externally, is that developers will extend and override things that were never intended to be extended or overridden, and use this ability to implement all kinds of strange things that we didn't intend to support in the way they're implementing them. This is problematic for a few reasons, including:\n- It tends to make upgrading to a newer version of the library more painful; because if we don't intend for something to be extended and overridden then we're less likely to guarantee that it's still there and working in the same way from one version to the next, or even that it will still be possible to achieve the same functionality by extension as you were able to achieve in an earlier version. We don't guarantee API stability between versions anyway, but these extension points are effectively parts of API that we haven't even thought about, so they're much more likely to change.\n- It encourages developers to implement features in their own code using extension, where often those features could and should be implemented more cleanly and in a more maintainable way within the library.\n\nIt's important to note that final could mean either \"we don't think it makes sense to extend this\" or (more likely) \"we haven't thought about whether it makes sense to extend this, and no-one has needed to yet\". We're happy to remove final modifiers on a case by case basis where there are valid reasons and if it looks sensible to do so, but I think that defaulting to final is the right thing to do. It forces us to actively think about whether each extension point is sensible, as well as whether or not we'd rather achieve what the app developer is trying to do directly in the library. It also forces app developers to think about whether there's a more suitable approach. A few things I've observed internally are that app developers tend to:\n- Use extension where composition would be a much better choice.\n- Mock things that really don't need mocking (e.g. immutable classes where it's trivial just to construct a real instance of the real class).\n"
      }
    ]
  },
  {
    "number": 740,
    "title": "Current position when playing a sequence of audio files",
    "created_at": "2015-08-26T08:55:32Z",
    "closed_at": "2016-04-25T14:44:16Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/740",
    "body": "I'm playing around with a sequence of gapless ogg files and how to implement a clean solution with the ExoPlayer.\nI've implemented a custom `SampleSource` which instantiates a `FrameworkSampleSource` for each file and forwards the necessary calls. Between each file the `FORMAT_READ` resets the codec in `MediaCodecAudioTrackRenderer`. This works and it plays without gaps.\n\nMy problem is that the current position which gets updated by the track renderer is wrong, since the `presentationTimeUs` restarts from 0 on every file change. This of course works as intended and I can fix it by updating the `timeUs` of each `SampleHolder` to hold the absolute position across all files, as it is done by all the `ChunkSource` implementations.\nBut I have problems calculating this absolute position on the device. I'm using the duration returned by the `MediaExtractor`, but I've samples where this duration is wrong or inaccurate so after some playback the current position information is totally wrong.\n\nIs there another way to get the correct absolute playback position from the `MediaCodecAudioTrackRenderer` without having to pass the correct absolute timestamp (across all files) to the decoder? Maybe it it easier to get access to `AudioTrack.getPlaybackHeadPosition()`, but I don't see a way without duplicating the renderer's implementation?\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/740/comments",
    "author": "th3hamm0r",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2016-04-25T14:44:16Z",
        "body": "This question is not about functionality supported directly by ExoPlayer, and therefore falls outside the scope of this issue tracker. Closing. We'll be supporting playlists more directly in the ExoPlayer 2.x release.\n"
      }
    ]
  },
  {
    "number": 712,
    "title": "Functionality to acquire DRM licenses before playback",
    "created_at": "2015-08-14T02:42:35Z",
    "closed_at": "2015-08-20T08:01:38Z",
    "labels": [
      "question",
      "wont fix: infeasible"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/712",
    "body": "This is more of a question. Now ExoPlayer tries to acquire licenses 'on-the-fly' or POST the playback has been initiated for both playready and widevine. Is there any plan to add functionality to acquire and may be store licenses before initiation of playback (PRE delivery)?\nThis feature is essential especially while subscribing to a music service, with pre-delivery the user need not wait for license acquisition for each song.\n\nThanks!\nDex\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/712/comments",
    "author": "dextergk",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2015-08-17T10:52:01Z",
        "body": "You could implement your own DrmSessionManager to do this kind of thing. It's not something we're planning to support directly.\n\nI'd be surprised if music services are using (or are required to use) full Widevine/PlayReady DRM, as opposed to simply relying on authentication + HTTPS to secure the data over the wire. Given there's no secure audio path, I'm not really sure what additional benefit full DRM gives you for the streaming case. For the offline case, you'd need to implement your own DrmSessionManager anyway.\n"
      },
      {
        "user": "dextergk",
        "created_at": "2015-08-20T08:01:38Z",
        "body": "Thanks for your reply!\n"
      }
    ]
  },
  {
    "number": 702,
    "title": "How to pause and resume player correctly",
    "created_at": "2015-08-10T07:35:11Z",
    "closed_at": "2015-08-11T09:11:31Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/702",
    "body": "I use demoplayer in my project but i am confused that how to pause and resume player correctly.In the Exoplayer Demo i found two way to pause/resume:\n\n> 1. player.setPlayWhenReady(playwhenready);\n> 2. player.selectTrack(DemoPlayer.TYPE_VIDEO, -1);\n>       player.selectTrack(DemoPlayer.TYPE_AUDIO, -1);\n>    1. use mediacontroller\n\nBut unfortunately,i found some issue:\n## The way setPlayWhenReady:\n1. when onPause i setPlayWhenReady(false),and  setPlayWhenReady(true) when onResume.It takes a long time until video comes out(?sorr for my poor english,hope you can understand me) and the surfaceview is black but the audio is fine.\n## The way selectTrack:\n\nwhen i want the video stop ,i selectTrack(DemoPlayer.TYPE_VIDEO, -1),it appearances stopped  but not actually . \n\nDid i do somthing wrong or miss something important?\n\nWaiting for your help,thank you in advance!\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/702/comments",
    "author": "AlanCheen",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2015-08-10T20:28:58Z",
        "body": "Is this for when your activity is paused because it's gone into the background? You should be fully releasing the player in that case, recording the position the playback got to, and then instantiating a fresh player and restoring the position when the activity comes back later.\n\nThe alternative requires holding onto a bunch of stuff, including a lot of memory, which isn't being a good citizen when your application isn't in the foreground.\n"
      },
      {
        "user": "AlanCheen",
        "created_at": "2015-08-11T03:34:54Z",
        "body": "Thanks for your reply.\nI use exoplayer in my fragment.\nI had tried what you say , but it takes about 10 seconds even worse when bad network. \nI think it is not a good citizen too because user can't see anything except a black frame.\n\nHere are some codes in my application:\n\n``` java\n\n@Override\n    public void onResume() {\n        super.onResume();\n        if (!bInPauseManually) {\n            resumeVideoAndAudio();\n        }\n        // The player will be prepared on receiving audio capabilities.\n        audioCapabilitiesReceiver.register();\n    }\n\nprivate void resumeVideoAndAudio() {\n        bClosableWhenPause = true;\n        if (player != null) {\n//            player.setPlayWhenReady(true);\n            player.seekTo(playerPosition);\n            player.selectTrack(DemoPlayer.TYPE_VIDEO, 0);\n            player.selectTrack(DemoPlayer.TYPE_AUDIO, 0);\n        }\n    }\n```\n\n``` java\n\n@Override\n    public void onPause() {\n        super.onPause();\n        pauseVideoAndAudio(false);\n        audioCapabilitiesReceiver.unregister();\n    }\n\nprivate void pauseVideoAndAudio(boolean closableWhenPause) {\n        bClosableWhenPause = closableWhenPause;\n        if (player != null) {\n//            player.setPlayWhenReady(false);\n            player.selectTrack(DemoPlayer.TYPE_VIDEO, -1);\n            player.selectTrack(DemoPlayer.TYPE_AUDIO, -1);\n            playerPosition = player.getCurrentPosition();\n        }\n    }\n```\n\nI have no idea how to do it better , would give me some advices?\nThank you in advance!\n"
      },
      {
        "user": "ojw28",
        "created_at": "2015-08-11T09:11:31Z",
        "body": "Being a good citizen means not consuming resources when your application isn't in the foreground. It doesn't mean optimizing your own app's experience at the cost of overall platform health. So it is the right thing to do to be releasing the player. As a point of reference, the YouTube application appears to do this correctly.\n"
      },
      {
        "user": "AlanCheen",
        "created_at": "2015-08-12T05:20:06Z",
        "body": "Thank you for your reply!\nNow i konw how to deal with it~\nEveryone like YouTube ,lol~~~\nThanks!\n"
      }
    ]
  },
  {
    "number": 680,
    "title": "Recommended DefaultAllocator values for rendering a local mp4 video file",
    "created_at": "2015-08-03T10:07:00Z",
    "closed_at": "2015-08-03T14:24:05Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/680",
    "body": "What are the best values to init the DefaultAllocator values when rendering a local mp4 file?\nMy considerations are quickest start-time and lowest memory allocation?\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/680/comments",
    "author": "dnutcracker",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2015-08-03T10:12:22Z",
        "body": "Start time doesn't really depend on DefaultAllocator values. Leaving the segment size at around 64K as in the demo app is probably sensible. You could reduce the number of segments (and hence the total buffer size) to reduce the memory allocation.\n\nYou need to be careful though; some MP4 files aren't particularly well interleaved, meaning there might be a few MBs containing only audio, then a few MBs containing only video and so on. If you make the buffer too small to handle this then I imagine you'll run into problems (possibly stalled playbacks).\n"
      },
      {
        "user": "dnutcracker",
        "created_at": "2015-08-03T10:36:06Z",
        "body": "Ok.\nIn my special case I'm dealing with starting ~9 videos simultaneously(!) using a rather small mp4 file (±1MB) - so I'm looking for the buffer size sweet spot.\nIndeed when trying values that were too small I've encountered a stalled playback...\n"
      },
      {
        "user": "dnutcracker",
        "created_at": "2015-08-03T10:39:46Z",
        "body": "Also - what is the use-case of using the initialAllocationCount in the DefaultAllocator?\n"
      },
      {
        "user": "ojw28",
        "created_at": "2015-08-03T10:42:59Z",
        "body": "If you know exactly what's being played then experiment to find the smallest value that doesn't cause any issues, and then add a bit of a margin. If you don't know exactly what's being played, or if you can't test all content, then you might want to make the margin a little bigger. You'll have to decide for yourself what you consider a safe margin to be. There are no theoretical right answers to the question, since it depends on the exact way that the content has been encoded, and there aren't (useful) theoretical upper bounds.\n\nIndividual allocations are made as required by DefaultAllocator. initialAllocationCount can be used to allocate a number of them up front as a single memory allocation. This approach can provide better performance than making each allocation individually when running on Dalvik and when you need a large buffer. For small buffers it probably doesn't make any difference.\n"
      },
      {
        "user": "dnutcracker",
        "created_at": "2015-08-03T13:03:49Z",
        "body": "Thanks, I appreciate the detailed answer.\n"
      },
      {
        "user": "ptran-gpfw",
        "created_at": "2015-10-14T23:36:08Z",
        "body": "@ojw28 Follow up question, re: commit 7f9b12982da435ee99e1c57afbf4e1c184059b69, do you have guidelines for BUFFER_SEGMENT_COUNT when implementing a RendererBuilder? I guess I'm asking what prompted the increase from 160 to 256?\n"
      }
    ]
  },
  {
    "number": 668,
    "title": "Exoplayer http source error",
    "created_at": "2015-07-28T05:51:27Z",
    "closed_at": "2015-08-03T09:13:42Z",
    "labels": [
      "question",
      "need more info"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/668",
    "body": "Hi,\n\nWe are playing a mpeg dash video using exoplayer. Its Widevine Modular DRM encrypted video.\n\nVideo is playing. But exoplayer is printing these errors in backend. And sometimes it goes to idle from buffering mode and not playing the video anymore. \n\nE/EventLogger( 4231): internalError [27.47, upstreamError]\nE/EventLogger( 4231): com.google.android.exoplayer.upstream.HttpDataSource$HttpDataSourceException: Unable to connect to htt4\nE/EventLogger( 4231):   at com.google.android.exoplayer.upstream.HttpDataSource.open(HttpDataSource.java:258)\nE/EventLogger( 4231):   at com.google.android.exoplayer.upstream.UriDataSource.open(UriDataSource.java:66)\nE/EventLogger( 4231):   at com.google.android.exoplayer.upstream.DataSourceStream.load(DataSourceStream.java:223)\nE/EventLogger( 4231):   at com.google.android.exoplayer.chunk.Chunk.load(Chunk.java:179)\nE/EventLogger( 4231):   at com.google.android.exoplayer.upstream.Loader$LoadTask.run(Loader.java:206)\nE/EventLogger( 4231):   at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:422)\nE/EventLogger( 4231):   at java.util.concurrent.FutureTask.run(FutureTask.java:237)\nE/EventLogger( 4231):   at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\nE/EventLogger( 4231):   at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\nE/EventLogger( 4231):   at java.lang.Thread.run(Thread.java:841)\nE/EventLogger( 4231): Caused by: java.net.SocketTimeoutException\nE/EventLogger( 4231):   at java.net.PlainSocketImpl.read(PlainSocketImpl.java:491)\nE/EventLogger( 4231):   at java.net.PlainSocketImpl.access$000(PlainSocketImpl.java:46)\nE/EventLogger( 4231):   at java.net.PlainSocketImpl$PlainSocketInputStream.read(PlainSocketImpl.java:240)\nE/EventLogger( 4231):   at java.io.InputStream.read(InputStream.java:162)\nE/EventLogger( 4231):   at java.io.BufferedInputStream.fillbuf(BufferedInputStream.java:142)\nE/EventLogger( 4231):   at java.io.BufferedInputStream.read(BufferedInputStream.java:227)\nE/EventLogger( 4231):   at com.android.okhttp.internal.Util.readAsciiLine(Util.java:316)\nE/EventLogger( 4231):   at com.android.okhttp.internal.http.RawHeaders.fromBytes(RawHeaders.java:308)\nE/EventLogger( 4231):   at com.android.okhttp.internal.http.HttpTransport.readResponseHeaders(HttpTransport.java:135)\nE/EventLogger( 4231):   at com.android.okhttp.internal.http.HttpEngine.readResponse(HttpEngine.java:644)\nE/EventLogger( 4231):   at com.android.okhttp.internal.http.HttpURLConnectionImpl.execute(HttpURLConnectionImpl.java:347)\nE/EventLogger( 4231):   at com.android.okhttp.internal.http.HttpURLConnectionImpl.getResponse(HttpURLConnectionImpl.java:296)\nE/EventLogger( 4231):   at com.android.okhttp.internal.http.HttpURLConnectionImpl.getResponseCode(HttpURLConnectionImpl.java)\nE/EventLogger( 4231):   at com.google.android.exoplayer.upstream.HttpDataSource.open(HttpDataSource.java:256)\nE/EventLogger( 4231):   ... 9 more\nD/DnsProxyListener( 1352): argv[0]=getaddrinfo\nD/DnsProxyListener( 1352): argv[1]=test.domain.com\nD/DnsProxyListener( 1352): argv[2]=^\nD/DnsProxyListener( 1352): argv[3]=1024\nD/DnsProxyListener( 1352): argv[4]=0\nD/DnsProxyListener( 1352): argv[5]=1\nD/DnsProxyListener( 1352): argv[6]=0\nD/DnsProxyListener( 1352): argv[7]=^\nD/DnsProxyListener( 1352): GetAddrInfoHandler for test.domain.com / [nullservice] / [nulliface] / 2\nD/DnsProxyListener( 1352): GetAddrInfoHandler, now for test.domain.com / (null) / (null)\n\nRegards,\nRandeep\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/668/comments",
    "author": "randeeppr",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2015-07-29T13:58:02Z",
        "body": "\"Unable to connect to htt4\" suggests you're connecting to a bad URL, presumably? You'll need to figure out where those URLs are coming from (it's likely that they originate either from the manifest or from the license server response).\n"
      },
      {
        "user": "randeeppr",
        "created_at": "2015-08-02T09:01:10Z",
        "body": "I think it was the issue with the streaming server. The network was slow so that sometimes exoplayer was not getting the requested data. Its working now. Thanks.\n"
      }
    ]
  },
  {
    "number": 649,
    "title": "Is it possible to play a mp4 video in loop using the ExtractorRendererBuilder",
    "created_at": "2015-07-23T15:44:54Z",
    "closed_at": "2015-07-27T11:20:16Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/649",
    "body": "Hi,\n\nI need to play short videos in loop from a server. I try to use the seek method to replay the video when the ExoPlayer.STATE_ENDED is reached but the video is play from the server again (no kind of cache).\nAre there specific parameters to be defined to play a video in loop without reload it from server again and again or I need to download the video before and play it from the local file system ?\n\nThank you in advance for your help.\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/649/comments",
    "author": "SilkSama",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2015-07-27T11:20:16Z",
        "body": "This is not currently supported as a built in feature. You could write your own DataSource implementation to cache the video data on disk the first time it's requested (and serve it from disk for subsequent requests). We have a related request that would add support to this directly to the library here: #420. You could alternatively just download the video first and play it from a local file uri as you suggest.\n"
      }
    ]
  },
  {
    "number": 637,
    "title": "Android API version 15",
    "created_at": "2015-07-21T03:53:07Z",
    "closed_at": "2015-07-21T16:45:10Z",
    "labels": [
      "question",
      "wont fix: infeasible"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/637",
    "body": "Build app using ExoPlayer library support only Android API version 16 and above. We would to like to support API version from 15 and found 'MediaCodecs' is the one causing issue.\n\nIs there any way to work around to support API version 15.\n\nthanks you in advance.\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/637/comments",
    "author": "drayan85",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2015-07-21T09:12:52Z",
        "body": "There is no easy way of doing this. The hard way is to write your own TrackRenderer implementations for audio and video, that bridge onto software decoders (e.g. ffmpeg) that you could then bundle inside your apk. The VP9 and Opus extensions are examples of this approach (and could be used if VP9 and Opus are acceptable codecs for your use case).\n"
      }
    ]
  },
  {
    "number": 633,
    "title": "Persistent DRM license",
    "created_at": "2015-07-18T00:15:45Z",
    "closed_at": "2015-07-20T09:47:18Z",
    "labels": [
      "question",
      "wont fix: infeasible"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/633",
    "body": "We are currently experimenting with ExoPlayer on our app for streaming, the currently setup is DASH+Widevine and it works perfectly. Now we want our users to be able to watch the content offline as well. This means we have to support persistent license and mpeg4+DRM. We are currently using Widevine for the license server. So our question is, does the exoplayer support persistent license? If yes, how can we acquire the persistent license? If no, is there any plan to support this?\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/633/comments",
    "author": "haitech",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2015-07-20T09:29:41Z",
        "body": "Android does support offline with Widevine via the MediaDrm interface. You'd need to implement your own DrmSessionManager that will be somewhat similar to StreamingDrmSessionManager, but will handle storage/retrieval of offline licenses. You'd also need to implement a downloader for obtaining the licenses and actually downloading the media, and you'd probably need a database to keep track of what's downloaded.\n\nWe don't provide out-of-the-box support for offline because the best approach generally requires tight integration with the rest of an application (e.g. using existing tables in an existing application database, using existing transfer logic to implement the media downloading and so on).\n"
      },
      {
        "user": "haitech",
        "created_at": "2015-07-20T09:47:18Z",
        "body": "@ojw28 thanks for quick reply. We already implemented the downloading part for the media, but not the license retrieval.\nGood to know that Android support the offline license, we will take a look into DrmSessionManager and implement our own\n"
      },
      {
        "user": "ojw28",
        "created_at": "2015-07-20T10:25:12Z",
        "body": "One caveat is the supported API levels. Google Play Movies has only adopted this approach from Lollypop onward due to issues found in earlier releases. You should probably try and build a minimal example and see how it works for you. If you have a contact at Widevine, it's worth asking them for guidance on what API levels are properly supported also.\n"
      },
      {
        "user": "haitech",
        "created_at": "2015-07-20T11:46:42Z",
        "body": "Aha, good to know. We will take a look into that and see what we decide to do. Hopefully one of our partners should have a contact at Widevine that can help us further with that, thanks you.\n"
      },
      {
        "user": "traninho",
        "created_at": "2016-04-22T10:40:07Z",
        "body": "Hi @haitech, has you managed the offline license acquisition somehow? I am trying to implement custom DrmSessionManager and based on StreamingSessionManager, I came up with this method to get KeyRequest:\n\n``` java\npublic MediaDrm.KeyRequest getKeyRequest(byte[] drmInitData) {\n    open();\n    try {\n        return mediaDrm.getKeyRequest(sessionId, drmInitData, \"video/mp4\", MediaDrm.KEY_TYPE_OFFLINE, null);\n    } catch (NotProvisionedException e) {\n        onError(e);\n    }\n    return null; \n}\n```\n\nBut I don't know where should I get drmInitData. Do you have a clue?\n"
      },
      {
        "user": "hakemcpu",
        "created_at": "2016-05-18T10:20:54Z",
        "body": "@traninho If you are building it based on the StreamingSessionManager you should find a variable named **schemeInitData.data** this is the value that you should be using and not passing the **drmInitData** as a parameter.\n"
      },
      {
        "user": "nitin02",
        "created_at": "2016-09-22T11:33:00Z",
        "body": "@ojw28 @hakemcpu \n\nFor licenses to be persisted, should playback happen at least once for a particular content/asset?\n\nFrom what I understand, widevine licenses are device specific, so there is no way to have a generic license that is compatible across many devices for the same content/asset. \n\nSo, there's no way to make licenses entirely offline without any playback?\n"
      },
      {
        "user": "ojw28",
        "created_at": "2016-09-22T11:43:30Z",
        "body": "There is no requirement to play anything. You need to perform a MediaDrm key request/response, but there's nothing that ties this to occurring as part of a playback.\n"
      },
      {
        "user": "nitin02",
        "created_at": "2016-09-22T12:58:24Z",
        "body": "The content is encrypted with CENC and hence a license response is needed for playback. So, is there a widevine license response that is generic enough to be playable irrespective of the device (for a particular content).\n"
      },
      {
        "user": "ojw28",
        "created_at": "2016-09-22T22:45:53Z",
        "body": "If you could create a single response that could be used to play the content on any device, then what would the addition of DRM actually achieve? The response could be easily captured and then used to play the content arbitrarily on any device, which seems like it would defeat the purpose.\n\nSo to answer your question: Yes, to play a piece of content offline the device needs to have made a license request and received the response. A response is tied to the device that generated the request. There is no requirement to actually play media to perform a license request. In a typical scenario an application will have to download the media for offline playback, and would make the license request as part of the process of downloading the media (probably as a first step).\n"
      }
    ]
  },
  {
    "number": 620,
    "title": "Support for AC3/EAC3 in HLS",
    "created_at": "2015-07-13T09:08:45Z",
    "closed_at": "2015-07-23T13:52:23Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/620",
    "body": "Hi,\n\nCurrently i notice that there is no audio heard  for AC3/EAC3 codecs in HLS.\n\nIs it  supported? If no, is there a plan to support.?\n\nThanks in Advance\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/620/comments",
    "author": "Srinidhikandi",
    "comments": [
      {
        "user": "andrewlewis",
        "created_at": "2015-07-14T09:05:45Z",
        "body": "Android L supports passthrough of encoded audio over HDMI to an A/V receiver that can decode the format. ExoPlayer supports this feature, but for HLS we only read AC-3 as per the ATSC A/52 specification, not DVB.\n\nSo AC-3 playback will only work if the device can output encoded data to an A/V receiver over HDMI, and for HLS the stream must be using the ATSC stream type.\n\nFor the relatively few devices that do include AC-3 decoders, we plan to add support for on-device decoding at some point.\n"
      }
    ]
  },
  {
    "number": 594,
    "title": "Question : UnexpectedLengthException was removed from HttpDataSource.",
    "created_at": "2015-07-02T15:33:35Z",
    "closed_at": "2015-07-03T10:58:52Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/594",
    "body": "I am unable to get the reason for removing UnExpectedLengthException from HttpDataSource Load method or not adding it in DefaultHtppDataSource load method. can i know  why was that removed , because i have seen earlier with ExoPlayer for Playready Clear streams i got that Exception , that was handled throuh retry.\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/594/comments",
    "author": "VishwanathPatil",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2015-07-02T22:17:13Z",
        "body": "Previously there were two cases where this error could occur.\n1. When the server doesn't support partial range requests. In this scenario ExoPlayer would make a request, have it fail part way through (for any reason), and then make a partial range request for the data it didn't receive. The server would provide a non-partial response whose length didn't match the expected length of the partial request, and so ExoPlayer would throw UnexpectedLengthException.\n2. The server is fairly badly broken. Specifically, the server cleanly closes the connection claiming to have served all of the response, when in fact it's served only part of it, or more data than it was supposed to.\n\nWe fixed (1) by correctly handling a non-partial response in this case. We removed the exception at the same time because it was adding unnecessary complexity, and because we don't expect (2) to ever happen. Hopefully you've experienced case (1) in the past, in which case we've fixed the underlying issue.\n\nIf you're seeing failures that you suspect are related to the removal of the exception then please let us know. It's probably a server issue if you are, however.\n"
      }
    ]
  },
  {
    "number": 590,
    "title": "sending message to a Handler on a dead thread",
    "created_at": "2015-06-30T16:06:32Z",
    "closed_at": "2015-07-03T11:00:38Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/590",
    "body": "Hi,\nI'm playing videos on `TextureView`s that are placed in `RecyclerView` so they are often started and stopped and I often see this error\n\n```\nW/MessageQueue﹕ Handler (com.google.android.exoplayer.upstream.Loader$LoadTask) {42b67fe0} sending message to a Handler on a dead thread\n    java.lang.RuntimeException: Handler (com.google.android.exoplayer.upstream.Loader$LoadTask) {42b67fe0} sending message to a Handler on a dead thread\n            at android.os.MessageQueue.enqueueMessage(MessageQueue.java:320)\n            at android.os.Handler.enqueueMessage(Handler.java:626)\n            at android.os.Handler.sendMessageAtTime(Handler.java:595)\n            at android.os.Handler.sendMessageDelayed(Handler.java:566)\n            at android.os.Handler.sendEmptyMessageDelayed(Handler.java:530)\n            at android.os.Handler.sendEmptyMessage(Handler.java:515)\n            at com.google.android.exoplayer.upstream.Loader$LoadTask.run(Loader.java:244)\n            at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:422)\n            at java.util.concurrent.FutureTask.run(FutureTask.java:237)\n            at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\n            at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n            at java.lang.Thread.run(Thread.java:841)\n```\n\nVideo does not play when I see this.\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/590/comments",
    "author": "osemen-remit",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2015-06-30T16:08:53Z",
        "body": "This only happens if you've called release() on the player (the warning in the logs is expected to occur sometimes when you do this).\n"
      }
    ]
  },
  {
    "number": 588,
    "title": "ADAPTIVE_MODE_ABRUPT results into video stutter when resolution switches",
    "created_at": "2015-06-30T00:57:52Z",
    "closed_at": "2015-06-30T08:59:22Z",
    "labels": [
      "question",
      "wont fix: infeasible"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/588",
    "body": "Branch: Master (1.3.3)\nTest stream: Apple master playlist advanced\n\nIssue: After around 9 secs (Duration of each chunk is around 9-10 secs) when the player switches the variant, we see that for around 2 seconds the video is not rendered - however audio continues to play - and then after 2 seconds video starts rendering. There are no frame drops and no skipped frames (from the logs).\n\nRoot cause: \nIn MediaCodecTrackRenderer, I put logs at queueInputBuffer for video track and I saw that before the resolution switch, the presentationTimeUs is around 9.9 sec\n\n**MediaCodecTrackRenderer: queueInputBuffer:bufferSize = 720 presentationTimeUs = 9943277**\n\nAnd then just after the resolution switch, the timestamp jumps to 11.9 sec.\n\n**MediaCodecTrackRenderer: queueInputBuffer:  bufferSize = 114939 presentationTimeUs = 11978600**\n\nNote: These logs are for video track only. I've filtered out the audio logs - so no confusion.\n\nIn case of Audio, since there is no adaptive mode, it continues to queue frames with contiguous time-stamps.\n\nSo clearly, the HLSSampleSource jumps 2 second ahead. This causes the video not render for 2 seconds due to A/V sync logic.\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/588/comments",
    "author": "srikieonline",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2015-06-30T08:57:28Z",
        "body": "Did you read the documentation for ADAPTIVE_MODE_ABRUPT? Specifically:\n\n`For this mode to perform seamless switches, the source content is required to have keyframes positioned at the start of each segment. If this is not the case a visual discontinuity may be experienced when switching from one variant to another.`\n\nApple's test streams don't position keyframes in this way (although content providers are highly encouraged to both do so and use ADAPTIVE_MODE_ABRUPT, since it will result in better switching performance).\n"
      }
    ]
  },
  {
    "number": 571,
    "title": "Frame rendering timing with MediaClock",
    "created_at": "2015-06-22T11:44:49Z",
    "closed_at": "2015-06-22T12:10:09Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/571",
    "body": "Considering the new implementation of MediaClock, the timing of frames rendered seems no longer to be handled by MediaCodecVideoTrackRendered but more by the the MediaCodecAudioTrackRenderer with the MediaClock implementation. Since I need to \"adjust\" the frame rate on my own in some of my cases (I know this is a bit unrelated to the general implementation), I wonder how can we manage playback speed/rendering timing now (currently it is ok to disable or distort the audio for me).\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/571/comments",
    "author": "Arqu",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2015-06-22T12:10:09Z",
        "body": "There hasn't been any functional change in terms of how timing is implemented. MediaCodecAudioTrackRenderer has always driven the timing. Previously it indicated this by returning true from isTimeSource. Now it does so by returning a clock instance from getMediaClock. This is solely a restructuring of the code, not a change in how it works.\n\nGiven your use cases are custom, you'll have to figure them out on your own!\n"
      },
      {
        "user": "Arqu",
        "created_at": "2015-06-22T12:19:51Z",
        "body": "Thanks managed to figure it out with getMediaClock and getPositionUs().\n"
      }
    ]
  },
  {
    "number": 549,
    "title": "will it support video list ,like youku.com?",
    "created_at": "2015-06-16T08:09:45Z",
    "closed_at": "2015-06-18T13:45:58Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/549",
    "body": "I haven't found the interface like (below code is from another player project):\n\n/**\n- Set the segments source url\n- @param segments the array path of the url e.g. Segmented video list\n- @param cacheDir e.g. getCacheDir().toString()\n  */</br>\n  public void setDataSegments(String[] uris, String cacheDir) {\n    _setDataSegmentsSource(uris, cacheDir);\n  }\n\nso current is maybe not supported , but will this be in schedual?\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/549/comments",
    "author": "nameryan",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2015-06-16T08:22:37Z",
        "body": "I don't understand what you're asking here.\n"
      },
      {
        "user": "nameryan",
        "created_at": "2015-06-16T08:36:22Z",
        "body": "sorry for my poor english first :cry: \n\nthe normal use of setDataSource maybe :\npublic final void setDataSource(String url, Map<String, String> headers)\nthe url in the params is one single url.\nin some situation, a video source can been seperate to several urls , one url after another url , all the urls make the full video.\nso there should be another setDataSource like :\npublic final void setDataSource(String urllist[], Map<String, String> headers)\nthe player will play the url list in order.\nwill exoplayer support url list ?\n"
      },
      {
        "user": "ojw28",
        "created_at": "2015-06-18T13:45:57Z",
        "body": "We don't have any plans to support playing a single video from multiple URLs. That's just an inefficient way to distribute media. For example you'd need to request the head of each of them separately before you could determine the duration of the video. Why would you not locate the whole video at a single URL?\n\nWe do eventually want to support seamless transition from one video to the next, which is different in the sense that the progress bar would show the progress of the current part only, not of the whole video.\n"
      }
    ]
  },
  {
    "number": 535,
    "title": "ExoPlayer SEEK event",
    "created_at": "2015-06-10T11:10:25Z",
    "closed_at": "2015-08-19T20:24:53Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/535",
    "body": "Hello! I am trying to detect a SEEK event in ExoPlayer, however I revised the demo app and perform several tests in order to check if it is informed to the event logger and I cannot see it.\n\nIs there any way that a SEEK in the ExoPlayer can be detected through any event?\n\nThe only thing I could observed is that the player enters the buffering state as soon as the seek begins.\n\nThank you so much\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/535/comments",
    "author": "agalera-nice",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2015-06-10T17:36:31Z",
        "body": "ExoPlayer will only seek when you tell it to, so you should know when seeks occur without having to listen to the player. Hence there is no event.\n\nIs your wish to have this just for convenience (i.e. because you want to register a bunch of things as listeners to the player, and see when seek gets called without having to track something else separately)?\n"
      },
      {
        "user": "agalera-nice",
        "created_at": "2015-06-11T07:18:41Z",
        "body": "I would like to listen to the seek event because we we're developing an analytics plugin where the only access to the player that we will have it's the player instance itself. So, we would not have access to any application code (Renders, etc..) and all the information we can get from the player will be obtained thanks to an ExoPlayer.Listener defined inside the plugin.\n\nIs there any chance you could include the seek event in the next releases? Otherwise, I think we can make some workaround to detect this situation\n\nThank you\n"
      },
      {
        "user": "Arqu",
        "created_at": "2015-06-11T07:30:45Z",
        "body": "If it helps you, you can just extend PlayerControl and override the seekTo function to insert your own callback something like:\n\n```\n@Override\n  public void seekTo(int timeMillis) {\n    callback.seekEvent(timeMillis);\n    super.seekTo(timeMillis);\n  }\n```\n"
      },
      {
        "user": "jpshelley",
        "created_at": "2015-06-12T19:00:09Z",
        "body": "@agalera-nice is this a public analytics project you are creating? I'm currently testing out different android players and need to perform some analysis of my own. Do you have recommendations for such tools?\n"
      },
      {
        "user": "ojw28",
        "created_at": "2015-08-19T20:24:53Z",
        "body": "The best solution as things stand would be for you to provide a thin wrapper around an ExoPlayer instance, which itself could implement ExoPlayer, and require that applications using your analytics project wrap their players and access them through the wrapper. You could then intercept the seek.\n\nWe may add a seek callback in the future, but have no immediate plans to do so.\n"
      }
    ]
  },
  {
    "number": 528,
    "title": "ANR during blockingSendMessage of MSG_SET_SURFACE",
    "created_at": "2015-06-09T06:35:41Z",
    "closed_at": "2015-06-17T10:02:36Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/528",
    "body": "In my app I am seeing ANR reports about 40% of the time when exiting video playback.\n\nThe main thread is waiting during the callback for TextureView’s SurfaceTextureListener\n`onSurfaceTextureDestroyed`.\n\nMy implementation for onSurfaceTextureDestroyed is similar to your demo PlayerActivity’s `surfaceDestroyed`.\nIt ends up performing a blocking sendMessage, i.e.\n\n```\n                mExoPlayer.blockingSendMessage(videoRenderer, MediaCodecVideoTrackRenderer.MSG_SET_SURFACE, surface);\n```\n\nHowever, in my app about 2 out of 5 times the blockingSendMessage never returns. I assume it has to do with the `wait()` in ExoPlayerImplInternal#`blockingSendMessage`:\n\n```\n  public synchronized void blockingSendMessage(ExoPlayerComponent target, int messageType,\n      Object message) {\n    if (released) {\n      Log.w(TAG, \"Sent message(\" + messageType + \") after release. Message ignored.\");\n      return;\n    }\n    int messageNumber = customMessagesSent++;\n    handler.obtainMessage(MSG_CUSTOM, messageType, 0, Pair.create(target, message)).sendToTarget();\n    while (customMessagesProcessed <= messageNumber) {\n      try {\n        wait();\n      } catch (InterruptedException e) {\n        Thread.currentThread().interrupt();\n      }\n    }\n  }\n```\n\nQ1) Why its getting stuck here?\n\nQ2) A more general question: onSurfaceTextureDestroyed is called on main thread. Should I therefore be calling the non-blocking version of pushSurface?\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/528/comments",
    "author": "trandroid",
    "comments": [
      {
        "user": "ptran-gpfw",
        "created_at": "2015-06-09T07:37:18Z",
        "body": "Also, I am creating ExoPlayer in `onStart()` and calling ExoPlayer `release()` in `onStop()`.\nI am not doing 'backgrounding' like what is done in DemoPlayer `setBackgrounded()`.\n"
      },
      {
        "user": "ojw28",
        "created_at": "2015-06-09T08:04:36Z",
        "body": "Being a \"good citizen\" in the Android ecosystem requires that you release the video decoder in onPause (or before), so ideally you should create the player in `onResume` and release it in `onPause`.\n\nIf you're seeing ANRs then you've probably implemented something that uses a different threading model to the rest of the player. The idea of the threading model is that nothing should block the player's internal playback thread for any significant period of time. Specifically, this thread should never be blocked on network or disk IO. If you look at how the standard components in ExoPlayer work, all network IO is delegated to background loading threads. These load data into a buffer, and the playback thread consumes from the read side of the buffer in a non-blocking way.\n\nProvided you continue to ensure this property in your own components, you shouldn't see any ANRs. Both release and blockingSendMessage will block on the playback thread, but the playback thread itself will be able to respond very quickly.\n"
      },
      {
        "user": "ptran-gpfw",
        "created_at": "2015-06-09T15:29:44Z",
        "body": "Thanks for the guidance on releasing decoder resource in onPause. It makes sense now that I think about it.\n\nAnother question, why is the blocking version of `pushSurface` called (in surfaceDestroy)?\n\nIt seems either a) the video decoder is released in onPause or b) the video track renderer is disabled in onPause. So it seems safer to call the non-blocking `pushSurface`.\n"
      },
      {
        "user": "ojw28",
        "created_at": "2015-06-09T15:32:32Z",
        "body": "If you look at the surfaceDestroyed documentation, you'll find this:\n\n\"After returning from this call, you should no longer try to access this surface. If you have a rendering thread that directly accesses the surface, you must ensure that thread is no longer touching the Surface before returning from this function.\"\n\nYou have to block to guarantee this property. There's nothing unsafe about blocking, providing guidance is followed.\n"
      },
      {
        "user": "ojw28",
        "created_at": "2015-06-17T10:02:36Z",
        "body": "Feel free to re-open if you have further questions. Thanks!\n"
      }
    ]
  },
  {
    "number": 482,
    "title": "Selectively creating renderers in ExtractorRendererBuilder",
    "created_at": "2015-05-22T01:07:10Z",
    "closed_at": "2015-06-04T17:19:54Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/482",
    "body": "Currently, in ExtractorRendererBuilder, both audio and video track renderers are created irrespective of whether the underlying container contains audio/video media data or not.\n\nAre there specific plans to enhance the design such that the app has the ability to create only the required renderer or disable a renderer that is not needed after prepare?.\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/482/comments",
    "author": "srikieonline",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2015-05-22T09:45:02Z",
        "body": "If you know up front that your media doesn't contain certain media types, you can pass null instead of creating renderers. In the case that you don't know up front, but it turns out to be the case that a certain track type isn't present, the renderer will simply transition to the IGNORED state at pretty much zero cost. So I don't think there's any need to enhance the design here.\n"
      },
      {
        "user": "ojw28",
        "created_at": "2015-05-22T09:46:32Z",
        "body": "Caveat - If you do avoid creating a video renderer, for example, then you do need to adjust the fourth parameter passed to ExtractorSampleSource to be 1 instead of 2. It's simpler just to create all of the renderers and allow them to transition to the IGNORED state, as is currently the case.\n"
      }
    ]
  },
  {
    "number": 467,
    "title": "Unable to connect to local mp4 file by ExtractorSampleSource",
    "created_at": "2015-05-18T21:34:34Z",
    "closed_at": "2015-05-19T13:34:30Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/467",
    "body": "Hello!\n\nI am updating the ExoPlayer to 1.3.1 and I am experiencing the issue with  the playback of the local MP4 files:\ncom.google.android.exoplayer.ExoPlaybackException: com.google.android.exoplayer.upstream.HttpDataSource$HttpDataSourceException: Unable to connect to /storage/emulated/0/Android/data/com.getvictorious.staging.eatyourkimchi/files/DCIM/Video/Video-20150518_142803.mp4\n\nI am passing the uri to the ExtractorSampleSource: \nExtractorSampleSource sampleSource = new ExtractorSampleSource(uri, dataSource, extractor, 2,\n                BUFFER_SIZE);\n\nPlease advise what could cause this exception.\n\nThank you in advance!\nEdward\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/467/comments",
    "author": "edwardfoux",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2015-05-18T22:01:19Z",
        "body": "What are you passing as the dataSource when you make your ExtractorSampleSource? You're either not passing the right thing, or you're not formatting your local URI correctly. Covering both points:\n- Use DefaultUriDataSource, which will work for both local and network URIs\n- Your URI should be formatted to start with file:///\n"
      },
      {
        "user": "ojw28",
        "created_at": "2015-05-19T13:34:30Z",
        "body": "Note: DefaultUriDataSource no longer requires file:// (on the dev branch). If you omit a scheme completely, we'll assume file://.\n"
      },
      {
        "user": "edwardfoux",
        "created_at": "2015-05-19T17:22:58Z",
        "body": "Thank you very much!\n"
      }
    ]
  },
  {
    "number": 457,
    "title": "Does ExoPlayer support the RTMP?",
    "created_at": "2015-05-14T04:21:24Z",
    "closed_at": "2015-06-13T15:32:12Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/457",
    "body": "If not, how to do it ? Thanks.\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/457/comments",
    "author": "jpxiong",
    "comments": [
      {
        "user": "chrisjenx",
        "created_at": "2015-05-15T20:45:28Z",
        "body": "+1\n"
      },
      {
        "user": "ojw28",
        "created_at": "2015-06-13T15:32:12Z",
        "body": "We don't support RTMP, sorry.\n"
      }
    ]
  },
  {
    "number": 456,
    "title": "Unable to play Big Buck Bunny(MP4) in the sample list on emulator",
    "created_at": "2015-05-13T21:29:24Z",
    "closed_at": "2015-05-15T06:03:02Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/456",
    "body": "Hello,\n\nIn the Sample Chooser list, I clicked on Misc->Big Buck Bunny (MP4) but it didn't play rather there was some exception message which is appended below. The emulator is NEXUS_5_API_21_x86 and IDE is Android Studio. The earlier version of ExoPlayer was able to play on the same emulator. Please check what is going wrong.\n\nThanks!\n\n05-14 02:46:00.628    1807-2304/com.google.android.exoplayer.demo E/ExoPlayerImplInternal﹕ Internal runtime error.\n    java.lang.IllegalStateException\n            at android.media.MediaCodec.native_dequeueOutputBuffer(Native Method)\n            at android.media.MediaCodec.dequeueOutputBuffer(MediaCodec.java:1033)\n            at com.google.android.exoplayer.MediaCodecTrackRenderer.drainOutputBuffer(MediaCodecTrackRenderer.java:819)\n            at com.google.android.exoplayer.MediaCodecTrackRenderer.doSomeWork(MediaCodecTrackRenderer.java:502)\n            at com.google.android.exoplayer.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:401)\n            at com.google.android.exoplayer.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:203)\n            at android.os.Handler.dispatchMessage(Handler.java:98)\n            at android.os.Looper.loop(Looper.java:135)\n            at android.os.HandlerThread.run(HandlerThread.java:61)\n            at com.google.android.exoplayer.util.PriorityHandlerThread.run(PriorityHandlerThread.java:40)\n05-14 02:46:00.639    1807-1807/com.google.android.exoplayer.demo E/EventLogger﹕ playerFailed [2.36]\n    com.google.android.exoplayer.ExoPlaybackException: java.lang.IllegalStateException\n            at com.google.android.exoplayer.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:236)\n            at android.os.Handler.dispatchMessage(Handler.java:98)\n            at android.os.Looper.loop(Looper.java:135)\n            at android.os.HandlerThread.run(HandlerThread.java:61)\n            at com.google.android.exoplayer.util.PriorityHandlerThread.run(PriorityHandlerThread.java:40)\n     Caused by: java.lang.IllegalStateException\n            at android.media.MediaCodec.native_dequeueOutputBuffer(Native Method)\n            at android.media.MediaCodec.dequeueOutputBuffer(MediaCodec.java:1033)\n            at com.google.android.exoplayer.MediaCodecTrackRenderer.drainOutputBuffer(MediaCodecTrackRenderer.java:819)\n            at com.google.android.exoplayer.MediaCodecTrackRenderer.doSomeWork(MediaCodecTrackRenderer.java:502)\n            at com.google.android.exoplayer.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:401)\n            at com.google.android.exoplayer.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:203)\n            at android.os.Handler.dispatchMessage(Handler.java:98)\n            at android.os.Looper.loop(Looper.java:135)\n            at android.os.HandlerThread.run(HandlerThread.java:61)\n            at com.google.android.exoplayer.util.PriorityHandlerThread.run(PriorityHandlerThread.java:40)\n05-14 02:46:00.694    1807-1876/com.google.android.exoplayer.demo W/EGL_emulation﹕ eglSurfaceAttrib not implemented\n05-14 02:46:00.694    1807-1876/com.google.android.exoplayer.demo W/OpenGLRenderer﹕ Failed to set EGL_SWAP_BEHAVIOR on surface 0xa5c43220, error=EGL_SUCCESS\n05-14 02:46:00.716    1807-1807/com.google.android.exoplayer.demo D/EventLogger﹕ state [2.44, true, I]\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/456/comments",
    "author": "devenkhari",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2015-05-13T21:33:33Z",
        "body": "If it runs on a real device (which it does) then the bug is in the emulator, not in ExoPlayer. You should file a bug there instead.\n"
      },
      {
        "user": "devenkhari",
        "created_at": "2015-05-13T21:53:52Z",
        "body": "Thanks for your prompt reply.\nI wonder how the earlier version which I built last week from dev branch was working on the same emulator.\n\nRegards\n"
      },
      {
        "user": "devenkhari",
        "created_at": "2015-05-15T06:03:01Z",
        "body": "Yes, it is working on devices. I checked it on  multiple devices.\n\nThanks for your response.\n\nRegards,\nDeven\n"
      }
    ]
  },
  {
    "number": 435,
    "title": "Getting estimated bitrate for HLS stream",
    "created_at": "2015-05-06T19:21:10Z",
    "closed_at": "2015-05-20T20:40:05Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/435",
    "body": "I'm in a situation where I need to get the bitrate for analytic purposes however I can't seen to find a working way.  The BandwidthMeter works for DASH streams but not HLS which is the format we are using.  Any help would be greatly appreciated.\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/435/comments",
    "author": "SemaphoreMetaphor",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2015-05-06T19:58:06Z",
        "body": "It definitely does on the dev branch. BandwidthMeter is used in the same way for HLS as it is for DASH.\n"
      },
      {
        "user": "SemaphoreMetaphor",
        "created_at": "2015-05-06T22:31:19Z",
        "body": "Odd because even in the demo bandwidth isn't being reported for HLS streams on master and dev.\n"
      },
      {
        "user": "ojw28",
        "created_at": "2015-05-06T22:35:12Z",
        "body": "You'll need to provide more information about exactly what you're doing and what you're not seeing that you expect to see.\n"
      },
      {
        "user": "SemaphoreMetaphor",
        "created_at": "2015-05-07T19:41:07Z",
        "body": "@ojw28 I guess a more appropriate question is, How should I be getting the bitrate for the HLS stream?\n"
      }
    ]
  },
  {
    "number": 428,
    "title": "setDataSource is failing in case of FileDescriptor of a MemoryFile",
    "created_at": "2015-05-05T04:14:21Z",
    "closed_at": "2015-06-26T14:21:18Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/428",
    "body": "Hi,\n\nI'm using a MemoryFile in DefaultRendererBuilder and passing its FileDescriptor to FrameworkSampleExtractor constructor. When mediaExtractor.setDataSource is called inside the prepare method of FrameworkSampleExtractory, it fails with an exception, \"Failed to instantiate extractor\".\n\nI'm basically creating this MemoryFile because I'm doing the decryption through my methods of the encrypted mp4. Is it the right thing to do or should I use the decryption provided by ExoPlayer. I tried it but couldn't make it work so I resorted to decrypt myself and I want to keep the decrypted content in memory, can not write into a file for security reasons.\n\nPlease help.\n\nThanks.\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/428/comments",
    "author": "devenkhari",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2015-05-05T11:30:26Z",
        "body": "You should use ExtractorSampleSource together with Mp4Extractor. When building your ExtractorSampleSource you'll need to pass a DataSource, which is where the data is requested from. You can implement a custom DataSource to perform whatever decryption you require.\n"
      },
      {
        "user": "devenkhari",
        "created_at": "2015-05-05T16:18:17Z",
        "body": "Thanks for your response. \nI can't see the classes that you have mentioned rather I can see DefaultSampleSource, FrameworkSampleExtractor and MP4Util etc. Am I working with wrong version?\n\nRegards\n"
      },
      {
        "user": "ojw28",
        "created_at": "2015-05-05T16:20:08Z",
        "body": "Use the dev branch. We'll be pushing all changes from dev -> master late this week or early next.\n"
      },
      {
        "user": "devenkhari",
        "created_at": "2015-05-05T16:55:41Z",
        "body": "Thanks! I will try that.\n"
      },
      {
        "user": "devenkhari",
        "created_at": "2015-05-06T07:53:03Z",
        "body": "I have made changes in FileDataSource as below (it's not using MemoryFile yet, I just wanted to run the save filed first):\npublic long open(DataSpec dataSpec) throws FileDataSourceException {\n    try {\n      uri = dataSpec.uri.toString();\n\n```\n    if(uri.contains(\".enc\")){\n        BVCrypto.Init(null);\n        try {\n            FileInputStream in = new FileInputStream(dataSpec.uri.getPath());\n            uri = uri.substring(0, uri.lastIndexOf(\".\"));\n            FileOutputStream out = new FileOutputStream(uri);\n            BVCrypto.decrypt(in, out);\n            out.close();\n        } catch (NoSuchAlgorithmException e) {\n            e.printStackTrace();\n        } catch (NoSuchPaddingException e) {\n            e.printStackTrace();\n        } catch (InvalidKeyException e) {\n            e.printStackTrace();\n        } catch (InvalidAlgorithmParameterException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n\n        file = new RandomAccessFile(uri, \"r\");\n    }else {\n        file = new RandomAccessFile(dataSpec.uri.getPath(), \"r\");\n    }\n```\n\n  .....\nThe problem is that this method is being called multiple times and it fails in some calls in the condition shown below:\n\n```\n  if (bytesRemaining < 0) {\n    throw new EOFException();\n  }\n```\n\nWhy is this method being called multiple times? Is this method the correct place to make my changes?\n\nRegards,\nDeven\n"
      },
      {
        "user": "devenkhari",
        "created_at": "2015-05-06T07:56:07Z",
        "body": "Some more details:\nThis method of FileDataSoruce is being called multiple time from the load method of ExtractorSample Source class.\n"
      },
      {
        "user": "devenkhari",
        "created_at": "2015-05-06T08:36:58Z",
        "body": "Sorry, load method is the member of ExtractingLoadable class\n"
      },
      {
        "user": "ojw28",
        "created_at": "2015-05-06T09:00:59Z",
        "body": "You're implementing the DataSource interface. A DataSource can be opened and closed multiple times to read ranges of the data, as specified by the DataSpec objects that are passed to DataSource.open. You'll need to spend some time familiarizing yourself with these two classes, and it's probably helpful to look at some of the implementations provided by the library to see how they're implemented.\n"
      }
    ]
  },
  {
    "number": 380,
    "title": "Switching video source while ExoPlayer is running",
    "created_at": "2015-04-02T15:04:29Z",
    "closed_at": "2016-06-09T23:45:51Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/380",
    "body": "I'm looking for the quickest way to change the video that is currently playing.\n\nIs it possible to replace the video source/videorenderer without stopping and re-preparing the ExoPlayer?\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/380/comments",
    "author": "dnutcracker",
    "comments": [
      {
        "user": "ngoclinh49",
        "created_at": "2015-04-05T14:02:52Z",
        "body": "ah, i has same issues, but i fixed, in class DemoPlayer.java remove final in variable   private final RendererBuilder rendererBuilder;\n"
      },
      {
        "user": "PrasadShirsath",
        "created_at": "2015-08-17T20:06:46Z",
        "body": "@ngoclinh49  can you share more about your solution to change video source? I'm facing same issue as @dnutcracker.\n"
      },
      {
        "user": "ojw28",
        "created_at": "2016-06-09T23:45:51Z",
        "body": "You should stop and re-prepare the player to switch the content.\n"
      }
    ]
  },
  {
    "number": 346,
    "title": "Preparing playback",
    "created_at": "2015-03-10T10:23:25Z",
    "closed_at": "2015-03-12T19:49:45Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/346",
    "body": "What would be the proper way of preparing `TrackRenderers` for playback while ExoPlayer is currently playing something completely different? Ideally I would like to build a set of renderers and have them buffer X number of segments/bytes/seconds and then be able to just switch over to these renderers at some point. Trying to manually call prepare on a ChunkDataSource seems to mess up the state and cause Internal runtime error in ExoPlayer when trying to play it back.\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/346/comments",
    "author": "pakerfeldt",
    "comments": [
      {
        "user": "pakerfeldt",
        "created_at": "2015-03-12T10:09:55Z",
        "body": "One path we're trying is to use the CacheDataSource and try to manually open and read from the source to cache data to disk. Does that seem reasonable? One problem we have with that is unfortunately the lack of support for unbounded requests. The manifests we're using doesn't specify indexRange or mediaRange so everything just bypasses the cache.\n"
      },
      {
        "user": "ojw28",
        "created_at": "2015-03-12T19:37:23Z",
        "body": "The caching layer isn't particularly flexible right now. It's very much designed for for the specific case where you (a) only make bounded requests, and (b) make range requests into few URLs. Unbounded requests aren't supported at all, and the caching layer wont handle each chunk being fetched from a separate URL in an efficient way. It's on our list of things to fix, but it's a pretty complex change, particularly to generalize in a way that doesn't degrade the case it's currently designed for. There's no ETA at the moment.\n"
      },
      {
        "user": "pakerfeldt",
        "created_at": "2015-03-12T19:46:15Z",
        "body": "I see. In our case we have one URL per segment. My current approach is to write our own CacheDataSource similar to what's already in there but tailored for our scenario. I think what's not perfectly clear to me yet is how to construct `DataSpec`s in the right way in order to prefetch some data. But I'll figure that out somehow. Actually I'm more posing the question to see if there's any better way to solve this or if my approach seems reasonable. Unless you have any more input in this regard you may close this issue.\n"
      },
      {
        "user": "ojw28",
        "created_at": "2015-03-12T19:48:43Z",
        "body": "That's probably the best way short of some pretty major restructuring, yes.\n"
      }
    ]
  },
  {
    "number": 345,
    "title": "How to support HLS manual switch video quality?",
    "created_at": "2015-03-10T08:14:01Z",
    "closed_at": "2015-03-25T23:55:40Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/345",
    "body": "1. Get many video quality from HLS master playlist\n2. Add manual switch video quality\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/345/comments",
    "author": "crossle",
    "comments": [
      {
        "user": "crossle",
        "created_at": "2015-03-24T07:23:35Z",
        "body": "How about this question?\n"
      },
      {
        "user": "ojw28",
        "created_at": "2015-03-24T17:53:24Z",
        "body": "This is something you'd have to do yourself. The code for selecting format is in HlsChunkSource (and is also controlled by the value of variantIndices passed to the constructor of that class). So you'd need to figure out how to modify that class to suit your needs.\n"
      }
    ]
  },
  {
    "number": 335,
    "title": "Duplicate Previous Video in SurfaceView ",
    "created_at": "2015-03-04T22:53:34Z",
    "closed_at": "2015-04-13T20:53:52Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/335",
    "body": "Hi I have an issue with the player when i try to update the source(renderer) sometimes the SurfaceView(Surface/SurfaceTexture) that i use to show the video and audio still shows the previous renderer element its a kind of weird issue because sometimes it replicates other times it works fine \n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/335/comments",
    "author": "AlejandroRuiz",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2015-03-11T01:24:56Z",
        "body": "I don't really understand the question. A SurfaceView will continue to display whatever was last drawn to it. What does it mean to update the renderer?\n"
      },
      {
        "user": "AlejandroRuiz",
        "created_at": "2015-03-11T01:37:11Z",
        "body": "Yes I'll detail it, I'm using a ListView every time that the cell appears on the screen I create a new TextureView and a new HlsRenderer and I set both new elements(renderer and surface) to the exoplayer but sometimes the surfaceview draw the previous video even if i create a new renderer and surface i tried working with a list of reused exoplayers(max 3) items and also with a singleton exoplayer with the same result, I was thinking that maybe could be a hardawre issue with the TextureView.\n"
      },
      {
        "user": "ojw28",
        "created_at": "2015-03-11T09:07:14Z",
        "body": "What calls are you making to set the new elements? And when you say it sometimes draws the previous video, do you mean just the final frame, or does it draw multiple frames? Without knowing more, I'd say it's likely to be an issue with your code.\n"
      },
      {
        "user": "stelma",
        "created_at": "2015-03-17T13:02:46Z",
        "body": "Could it be that your issues have to do with listview recycling, did you already look into that? Tried turning it off?\n"
      },
      {
        "user": "ojw28",
        "created_at": "2015-04-13T20:53:52Z",
        "body": "Closing due to inactivity.\n"
      }
    ]
  },
  {
    "number": 331,
    "title": "testing out ExoPlayer with an emulator",
    "created_at": "2015-03-01T07:51:48Z",
    "closed_at": "2015-03-25T23:56:20Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/331",
    "body": "Is there an emulator around capable of running ExoPlayer? The default emulator that comes with Android Studio shouts out \"playback error\" when running the videos from the demo app included in the repo. If the answer is \"no\", can anyone elaborate on why it is not possible? Thanks!\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/331/comments",
    "author": "orcaman",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2015-03-02T10:08:35Z",
        "body": "It's unlikely to be possible for secure drm protected playbacks. For all other playbacks (i.e. most playbacks) there's no fundamental limitation preventing it from working, although emulator support for video has traditionally been poor.\n"
      }
    ]
  },
  {
    "number": 319,
    "title": "Caching support for progressive mp3 streaming",
    "created_at": "2015-02-25T10:13:49Z",
    "closed_at": "2015-02-25T18:16:31Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/319",
    "body": "Is there any way we can cache the stream buffered by FrameworkSampleExtractor?\nOr can we use DataSource as source for FrameworkSampleExtractor?\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/319/comments",
    "author": "gitanuj",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2015-02-25T13:45:08Z",
        "body": "This is not currently possible using components provided by the library. Sorry.\n"
      }
    ]
  },
  {
    "number": 290,
    "title": "External subtitles for local videos",
    "created_at": "2015-02-12T11:17:15Z",
    "closed_at": "2015-02-13T01:35:17Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/290",
    "body": "Hello,\n\nI am trying to add subtitles for local video.\nSubtitles format which I need to support are MicroDVD (from .txt file) and SubRip (from .srt) file.\n\nHow can I attach one of this subtitle to video?\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/290/comments",
    "author": "brystel",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2015-02-13T01:35:10Z",
        "body": "We don't provide support for these formats currently, so it's something you'd have to add yourself.\n"
      }
    ]
  },
  {
    "number": 288,
    "title": "How to implement Closed Captioning support for HLS?",
    "created_at": "2015-02-11T07:16:04Z",
    "closed_at": "2015-02-13T01:39:17Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/288",
    "body": "Hi,\n\nI have to integrated the closed captioning support for our videos? what are the different ways to integrate that.?  I don't have idea right now,\n\nI have a .srt file . how to use with exoplayer ?\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/288/comments",
    "author": "sachinbhanot",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2015-02-13T01:39:17Z",
        "body": "We currently support EIA-608 captions for HLS. We'll be adding support for WebVTT captions soon.\n"
      },
      {
        "user": "Ood-Tsen",
        "created_at": "2015-04-27T12:17:39Z",
        "body": "Actually, \nHLS does not support webvtt yet.\nShall we open another issue for tracking ?\n"
      },
      {
        "user": "ojw28",
        "created_at": "2015-04-27T14:01:04Z",
        "body": "#151\n"
      },
      {
        "user": "sachinbhanot",
        "created_at": "2015-06-04T13:16:07Z",
        "body": "Is there any support come for closed caption using srt file?\n"
      }
    ]
  },
  {
    "number": 282,
    "title": "Problem providing key response to MediaDrm (Dash with Widevine)",
    "created_at": "2015-02-05T18:31:43Z",
    "closed_at": "2015-02-09T09:42:45Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/282",
    "body": "Hello everyone, \n\nI am experiencing the following issue when trying to play content with Dash and Widevine. (custom content and custom proxy widevine license server)\n\nThe exception it is raised in this line of code:\n\n```\nmediaDrm.provideKeyResponse(sessionId, (byte[]) response);\n```\n\n```\n02-05 19:24:29.037    5488-5488/com.google.android.exoplayer.demo E/EventLogger﹕ playerFailed [6.47]\n    com.google.android.exoplayer.ExoPlaybackException: android.media.MediaDrm$MediaDrmStateException: Failed to handle key response: DRM vendor-defined error: -2998\n            at com.google.android.exoplayer.MediaCodecTrackRenderer.maybeInitCodec(MediaCodecTrackRenderer.java:289)\n            at com.google.android.exoplayer.MediaCodecTrackRenderer.onInputFormatChanged(MediaCodecTrackRenderer.java:678)\n            at com.google.android.exoplayer.MediaCodecTrackRenderer.readFormat(MediaCodecTrackRenderer.java:465)\n            at com.google.android.exoplayer.MediaCodecTrackRenderer.doSomeWork(MediaCodecTrackRenderer.java:442)\n            at com.google.android.exoplayer.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:398)\n            at com.google.android.exoplayer.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:203)\n            at android.os.Handler.dispatchMessage(Handler.java:98)\n            at android.os.Looper.loop(Looper.java:135)\n            at android.os.HandlerThread.run(HandlerThread.java:61)\n            at com.google.android.exoplayer.util.PriorityHandlerThread.run(PriorityHandlerThread.java:40)\n     Caused by: android.media.MediaDrm$MediaDrmStateException: Failed to handle key response: DRM vendor-defined error: -2998\n            at android.media.MediaDrm.provideKeyResponse(Native Method)\n            at com.google.android.exoplayer.drm.StreamingDrmSessionManager.onKeyResponse(StreamingDrmSessionManager.java:287)\n            at com.google.android.exoplayer.drm.StreamingDrmSessionManager.access$700(StreamingDrmSessionManager.java:42)\n            at com.google.android.exoplayer.drm.StreamingDrmSessionManager$PostResponseHandler.handleMessage(StreamingDrmSessionManager.java:369)\n```\n\nFrom what I can see in the proxy (Charles) I setup in the middle, the license seems to be acquired correctly but for some reason the MediaDrm is failing to process it. Any hints? \n\nThis is the struct of the license server response:\n\n```\n{\n    \"status\": \"OK\",\n    \"license\": \"...\",\n    \"license_metadata\": {\n        \"content_id\": \"...\"\n    },\n    \"supported_tracks\": [{\n        \"type\": \"SD\"\n    }],\n    \"make\": \"LG\",\n    \"model\": \"Nexus 4\",\n    \"security_level\": 1,\n    \"internal_status\": 0,\n    \"session_state\": {\n        \"license_id\": {\n            \"request_id\": \"...\",\n            \"session_id\": \"...\",\n            \"purchase_id\": \"\",\n            \"type\": \"STREAMING\",\n            \"version\": 0\n        },\n        \"signing_key\": ...\",\n        \"keybox_system_id\": \n    }\n}\n```\n\nNot idea what this provideKeyResponse method is expecting in the response object. \n\nThanks and great project. Hopefully I can contribute my self as well in the future. \n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/282/comments",
    "author": "ghost",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2015-02-05T23:41:23Z",
        "body": "Do the Widevine GTS samples in the ExoPlayer demo app work for you? If so then that would suggest that the device itself is fine, and that your response isn't formatted in the way that the Widevine plugin expects.\n\nI'm not sure exactly what the expected format is. If the Widevine GTS samples do work, then I'd recommend attaching a debugger to the demo app and taking a look at the response data for that case. That may well give you enough to go on. If that fails, and if you have a contact at Widevine, you'd probably be best off asking them as a next step. If all else fails, let me know and I can do some more digging around.\n\nEither way, let me know how you get on!\n"
      },
      {
        "user": "ghost",
        "created_at": "2015-02-06T08:49:45Z",
        "body": "Thanks for the quick response! \n\nYeap the Widevine GTS samples are working correctly in the devices which I tested so it is not a problem with the device itself. I also thought as you and attached a debugger and a proxy to the demo app to figure out what they are providing in that method but the proxy (charles) hangs up every time I try to take a look to the response of the staging widevine proxy server they provide, and through the debugger the response when I try to read the InputStream in = new BufferedInputStream(urlConnection.getInputStream()); from the executePost method, gives me really weird values. \n\nI will keep investigating a bit further today and let you know my findings, also if I manage to figure out what exactly needs to be provided in that method we could add it as documentation for someone else trying to perform the same implementation as me. \n\nThanks again for the help and great job! \n"
      },
      {
        "user": "ghost",
        "created_at": "2015-02-09T09:40:26Z",
        "body": "Ok I finally manage to solve it (indeed was really simple to do). In the DemoUtil.java class in the method executePost the only thing needed in my case was parse the response (which was a JSON object as mentioned before), extract the license attribute and IMPORTANT, in my case the license key was encoded in Base64 so I just had to add this lines of code: \n\n```\nInputStream in = new BufferedInputStream(urlConnection.getInputStream());\n\nBufferedReader streamReader = new BufferedReader(new InputStreamReader(in, \"UTF-8\"));\nStringBuilder responseStrBuilder = new StringBuilder();\n\nString inputStr;\nwhile ((inputStr = streamReader.readLine()) != null)\n     responseStrBuilder.append(inputStr);\n\nJSONObject jsonObject = new JSONObject(responseStrBuilder.toString());\nString license = (String) jsonObject.get(\"license\");\n\nreturn Base64.decode(license, Base64.DEFAULT);\n```\n\n(btw don't mind about the checks, as this is only for demo purposes)\n\nSo in conclusion, to play widevine encrypted content just pass the license key (in our case Base64 encoded which required to decode first) to this byte[] response in order to playback the encrypted content. \n\n```\n// Provide the decoded Base64 license key.\nmediaDrm.provideKeyResponse(sessionId, (byte[]) response);\n```\n\nThanks again for the help and hopefully this can speed up some else work! \n"
      }
    ]
  },
  {
    "number": 280,
    "title": "Implement a mechanism to receive playback position updates for audio",
    "created_at": "2015-02-04T19:22:49Z",
    "closed_at": "2015-02-18T20:17:18Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/280",
    "body": "I have an audio player built on top of android.media.AudioTrack and a feature for which I have not found parity in ExoPlayer is the ability to register for playback position callbacks and the ability to set the notification period for the position callbacks. \n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/280/comments",
    "author": "jedhoffmann",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2015-02-04T19:49:46Z",
        "body": "Isn't it pretty straightforward to write this in your own application code, just by having something call ExoPlayer.getCurrentPosition at the desired rate?\n"
      },
      {
        "user": "ojw28",
        "created_at": "2015-02-18T20:17:18Z",
        "body": "Closing as per the answer above. I don't think this is something that the library needs to support directly.\n"
      }
    ]
  },
  {
    "number": 279,
    "title": "FrameworkSampleSource: How to get codec errors?",
    "created_at": "2015-02-04T09:18:07Z",
    "closed_at": "2015-02-10T00:42:22Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/279",
    "body": "I've integrated ExpPlayer into my app to play video using the FrameworkSampleSource. Some of my videos (e.g. M2TS videos) cannot be played by the FrameworkSampleSource, but I didn't get any errors on the listeners of ExoPlayer.\n\nWhen playing M2TS from a file I found out that an ExoPlaybackException is thrown in MediaCodecTrackRenderer in \"doPrepare\". I've changed this so the exeption is also reported via the EventListener.\n\nBut if I play the same video using an http streaming url the ExoPlaybackException exception is not raised. (The exception is raised later in the M2TSBuffer component) Also the position and the buffer position of the ExoPlayer are > 0. Here are the logs from logcat:\n\nW/M2TSExtractor﹕ Cannot get last PTS for Audio\nD/ExtendedUtils﹕ Try creating ExtendedExtractor\nE/QCExtractor﹕ ExtendedExtractor failed to instantiate extractor\nE/ExtendedExtractor﹕ Failed to instantiate extractor\nD/ExtendedUtils﹕ Couldn't create the extended extractor, return default one\nI/OMXClient﹕ Using client-side OMX mux.\nI/ACodec﹕ DRC Mode: Dynamic Buffer Mode\nI/NuCachedSource2﹕ new range: offset= 2736128\nI/NuCachedSource2﹕ ERROR_END_OF_STREAM\nE/M2TSBuffer﹕ failed(-1011) in readAt(33404928).\nE/M2TSBuffer﹕ mFinalStatus = -1011.\n\nIs it possible to trigger such errors using the FrameworkSampleSource? I would like to sent an Intent for an external app to play the video if such an error occurs.\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/279/comments",
    "author": "TheNetStriker",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2015-02-10T00:42:22Z",
        "body": "If the underlying MediaExtractor isn't propagating the error up into ExoPlayer code, there's no way for us to propagate it out of ExoPlayer. Sorry.\n\nWe're working on reducing our dependencies on MediaExtractor to avoid issues such as this one in the future.\n"
      },
      {
        "user": "TheNetStriker",
        "created_at": "2015-02-10T12:40:01Z",
        "body": "I've found a workarround to find out if the video was played or not. I'am simply setting a \"videoPlayed\" boolean when onVideoSizeChanged is called and then check this boolean in onPlayerStateChanged:\n\nif (playbackState == ExoPlayer.STATE_ENDED && !videoPlayed)\n            Toast.makeText(this, \"Video could not be played\", Toast.LENGTH_SHORT).show();\n"
      }
    ]
  },
  {
    "number": 277,
    "title": "Easy way of playing udp h264 encoded streaming",
    "created_at": "2015-02-03T23:26:17Z",
    "closed_at": "2017-06-24T13:06:45Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/277",
    "body": "I am wondering, if exoplayer can play out of the box x264 encoded live streams with hardware-acceleration? And if so, are there any examples targeting this case? To get the best possible latency, i need to go over plain udp streaming and i dont want to have any buffering. Can someone enlighten me? Thanks!\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/277/comments",
    "author": "Schizo",
    "comments": [
      {
        "user": "ihrthk",
        "created_at": "2015-02-12T06:23:52Z",
        "body": "keep concern...\n"
      },
      {
        "user": "Schizo",
        "created_at": "2015-02-12T07:15:18Z",
        "body": "what do you mean?\n"
      },
      {
        "user": "ihrthk",
        "created_at": "2015-02-12T07:19:49Z",
        "body": "I am chinese,english is poor. I mean what i will  stared at this issue.Becase i need a easy way to play h264.\n"
      },
      {
        "user": "Pitel",
        "created_at": "2015-03-23T14:20:41Z",
        "body": "I'm also interested in this use case. I want to play H.264 Annex B stream over UDP on Android.\n"
      },
      {
        "user": "rejhgadellaa",
        "created_at": "2015-10-15T19:08:33Z",
        "body": "+1\n"
      },
      {
        "user": "jeoliva",
        "created_at": "2015-10-15T21:49:13Z",
        "body": "I don't think that feature is supported right now. What you can do is implementing your own extractor for raw H.264. Out of curiosity, what is the interest behind playing a H.264 Annex B stream? playing what is coming from a video camera source? Take into account that raw H.264 doesn't contain timestamp information so playback will be always speeded up. \n"
      },
      {
        "user": "rejhgadellaa",
        "created_at": "2015-10-16T03:51:48Z",
        "body": "@jeoliva hmm not sure if I want it to be raw H.264 but my video experience is limited.. What I want is to be able to play a videostream from my computer to a tablet on the same LAN. I use ffmpeg to send the stream over udp (mpegts). VLC plays the stream but has too much latency for my case (~1sec), I need it to be below 500ms so I thought I'd give exoplayer a try and see if I can get that down?\n\nAnyway, I have no idea how to do this. If I add a sample (in the demo app) that points to udp://@:5000 it doesn't work.\n"
      },
      {
        "user": "ojw28",
        "created_at": "2017-06-24T13:06:45Z",
        "body": "It's unclear exactly what this request is. For us to investigate further, we'd need a sample stream/capture of the media that you're trying to play."
      }
    ]
  },
  {
    "number": 276,
    "title": "[HLS] Dropping frames constantly / freezing / low speed on seek",
    "created_at": "2015-02-02T22:59:38Z",
    "closed_at": "2015-02-09T16:25:54Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/276",
    "body": "Hello, we have implemented exo-player in our project and we are using HLS for VOD delivering,\nbut it drops frames frequently, also seeking is much slower than in androids native media player.\n\ntried tweaking parameters for MediaCodecVideoTrackRenderer (allowedJoiningTimeMs, maxDroppedFrameCountToNotify) but didn't get any results.\n\ncan anyone suggest anything?\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/276/comments",
    "author": "Guro",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2015-02-02T23:30:26Z",
        "body": "What do frequently and much slower mean in absolute terms? Are you using the dev or dev-hls branch with TYPE_HLS? On what device(s) do you see these issues?\n"
      },
      {
        "user": "Guro",
        "created_at": "2015-02-03T00:27:19Z",
        "body": "I'm using dev-hls branch and yes I'm using it with TYPE_HLS, device is Rockchip's set top box (RK3188) with android 4.4.2 on it.\n\nhere is the log of last 2 minutes of playing hls video:\n02-03 04:21:59.834    9455-9455/pkgname.debug D/PlayerActivity﹕ Dropped frames: 5\n02-03 04:22:01.144    9455-9455/pkgname.debug D/PlayerActivity﹕ Dropped frames: 5\n02-03 04:22:03.584    9455-9455/pkgname.debug D/PlayerActivity﹕ Dropped frames: 3\n02-03 04:22:06.204    9455-9455/pkgname.debug D/PlayerActivity﹕ Dropped frames: 5\n02-03 04:22:08.774    9455-9455/pkgname.debug D/PlayerActivity﹕ Dropped frames: 5\n02-03 04:22:09.044    9455-9455/pkgname.debug D/PlayerActivity﹕ Dropped frames: 5\n02-03 04:22:09.324    9455-9455/pkgname.debug D/PlayerActivity﹕ Dropped frames: 5\n02-03 04:22:09.764    9455-9455/pkgname.debug D/PlayerActivity﹕ Dropped frames: 5\n02-03 04:22:09.814    9455-9455/pkgname.debug D/PlayerActivity﹕ Dropped frames: 5\n02-03 04:22:10.574    9455-9455/pkgname.debug D/PlayerActivity﹕ Dropped frames: 5\n02-03 04:22:11.024    9455-9455/pkgname.debug D/PlayerActivity﹕ Dropped frames: 5\n02-03 04:22:11.054    9455-9455/pkgname.debug D/PlayerActivity﹕ Dropped frames: 5\n02-03 04:22:11.614    9455-9455/pkgname.debug D/PlayerActivity﹕ Dropped frames: 5\n02-03 04:22:11.644    9455-9455/pkgname.debug D/PlayerActivity﹕ Dropped frames: 5\n02-03 04:22:12.024    9455-9455/pkgname.debug D/PlayerActivity﹕ Dropped frames: 5\n02-03 04:22:12.674    9455-9455/pkgname.debug D/PlayerActivity﹕ Dropped frames: 5\n02-03 04:22:12.764    9455-9455/pkgname.debug D/PlayerActivity﹕ Dropped frames: 4\n02-03 04:22:37.114    9455-9455/pkgname.debug D/PlayerActivity﹕ Dropped frames: 5\n02-03 04:22:37.514    9455-9455/pkgname.debug D/PlayerActivity﹕ Dropped frames: 5\n02-03 04:22:37.884    9455-9455/pkgname.debug D/PlayerActivity﹕ Dropped frames: 5\n02-03 04:22:38.134    9455-9455/pkgname.debug D/PlayerActivity﹕ Dropped frames: 5\n02-03 04:22:38.644    9455-9455/pkgname.debug D/PlayerActivity﹕ Dropped frames: 5\n02-03 04:22:39.144    9455-9455/pkgname.debug D/PlayerActivity﹕ Dropped frames: 5\n02-03 04:22:39.174    9455-9455/pkgname.debug D/PlayerActivity﹕ Dropped frames: 5\n02-03 04:22:39.764    9455-9455/pkgname.debug D/PlayerActivity﹕ Dropped frames: 5\n02-03 04:22:40.144    9455-9455/pkgname.debug D/PlayerActivity﹕ Dropped frames: 5\n02-03 04:22:40.574    9455-9455/pkgname.debug D/PlayerActivity﹕ Dropped frames: 5\n02-03 04:22:40.934    9455-9455/pkgname.debug D/PlayerActivity﹕ Dropped frames: 5\n02-03 04:22:41.174    9455-9455/pkgname.debug D/PlayerActivity﹕ Dropped frames: 5\n02-03 04:22:41.644    9455-9455/pkgname.debug D/PlayerActivity﹕ Dropped frames: 5\n02-03 04:22:41.904    9455-9455/pkgname.debug D/PlayerActivity﹕ Dropped frames: 5\n02-03 04:22:42.304    9455-9455/pkgname.debug D/PlayerActivity﹕ Dropped frames: 5\n02-03 04:22:42.604    9455-9455/pkgname.debug D/PlayerActivity﹕ Dropped frames: 5\n02-03 04:22:44.524    9455-9455/pkgname.debug D/PlayerActivity﹕ Dropped frames: 5\n02-03 04:22:44.724    9455-9455/pkgname.debug D/PlayerActivity﹕ Dropped frames: 5\n02-03 04:22:45.094    9455-9455/pkgname.debug D/PlayerActivity﹕ Dropped frames: 5\n02-03 04:22:45.344    9455-9455/pkgname.debug D/PlayerActivity﹕ Dropped frames: 5\n02-03 04:22:45.564    9455-9455/pkgname.debug D/PlayerActivity﹕ Dropped frames: 5\n02-03 04:22:45.944    9455-9455/pkgname.debug D/PlayerActivity﹕ Dropped frames: 5\n02-03 04:22:46.174    9455-9455/pkgname.debug D/PlayerActivity﹕ Dropped frames: 5\n02-03 04:22:46.454    9455-9455/pkgname.debug D/PlayerActivity﹕ Dropped frames: 5\n02-03 04:22:46.834    9455-9455/pkgname.debug D/PlayerActivity﹕ Dropped frames: 5\n02-03 04:22:47.224    9455-9455/pkgname.debug D/PlayerActivity﹕ Dropped frames: 5\n02-03 04:22:47.464    9455-9455/pkgname.debug D/PlayerActivity﹕ Dropped frames: 5\n02-03 04:22:48.004    9455-9455/pkgname.debug D/PlayerActivity﹕ Dropped frames: 5\n02-03 04:22:48.234    9455-9455/pkgname.debug D/PlayerActivity﹕ Dropped frames: 5\n02-03 04:22:48.634    9455-9455/pkgname.debug D/PlayerActivity﹕ Dropped frames: 5\n02-03 04:22:49.094    9455-9455/pkgname.debug D/PlayerActivity﹕ Dropped frames: 5\n\nDropped frames occur often after seeking.\n\nThanks\n"
      },
      {
        "user": "Guro",
        "created_at": "2015-02-04T00:34:13Z",
        "body": "Increasing minBufferMs/minRebufferMs to 10000\nAlso Decresing maxDroppedFrameCountToNotify to 15 helped a little\n"
      },
      {
        "user": "Guro",
        "created_at": "2015-02-06T17:27:36Z",
        "body": "I think thats a problem #278 \n"
      },
      {
        "user": "ojw28",
        "created_at": "2015-02-09T16:25:54Z",
        "body": "Changing maxDroppedFrameCountToNotify does nothing except changing the rate that dropped frames are reported. It wont have made any difference to the actual user visible experience.\n\nProbably the same as #278, so let's use that issue for tracking\n"
      }
    ]
  },
  {
    "number": 257,
    "title": "[Discussion] Potential race between HlsSampleSource and TsChunk?",
    "created_at": "2015-01-22T05:49:40Z",
    "closed_at": "2015-01-23T03:22:27Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/257",
    "body": "This is not an issue, just some discussion about potential TsExtractor's race between HlsSampleSource and TsChunk.\n\nWhen I read the code related to how HlsSampleSource read the chunk data, it's noticed that reading-data from DataSource and getting-sample from Extractor are in two threads:\n- Reading data is in `TsChunk.load()`, which runs in a backgroud thread:\n\n``` java\n      while (bytesRead != -1 && !loadCanceled) {\n        bytesRead = extractor.read(dataSource);\n        if (bytesRead != -1) {\n          loadPosition += bytesRead;\n        }\n      }\n```\n- Getting sample is in `HlsSampleSource.readData()`, which runs in ExoPlayer's event loop. And other functions access the extractor, e.g. \n\n``` java\n    extractor.getSample(track, sampleHolder)\n    extractor.discardUntil(i, timeUs);\n```\n\nI don't see any protection of the two threads accessing extractor;\nAlthough there is `ConcurrentLinkedQueue` to protect the `SampleQueue.internalQueue` in TsExtractor, other members are not protected.\n\nThe question is, can we make sure there is no race accessing TsExtractor?\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/257/comments",
    "author": "mine260309",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2015-01-23T02:49:57Z",
        "body": "Can you be specific about which members you're concerned about? The members that are accessed from both threads are marked as volatile, SamplePool is protected with synchronization, and as you say the sample queues use ConcurrentLinkedQueue. I can't see anything not covered by these measures.\n\nThanks!\n"
      },
      {
        "user": "mine260309",
        "created_at": "2015-01-23T03:22:25Z",
        "body": "Thanks for your comment!\nIt did not notice SamplePool is protected with synchronization.\n\nThe reason I asked the question is because I was planning to add a member in SampleQueue and realized that it should be protected by mutex or synchronization.\nNow it's clear and I'll close the question.\n"
      }
    ]
  },
  {
    "number": 240,
    "title": "How I zoom in or moving scenes?",
    "created_at": "2015-01-16T03:42:16Z",
    "closed_at": "2015-01-18T04:49:34Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/240",
    "body": "",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/240/comments",
    "author": "ihrthk",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2015-01-18T04:49:34Z",
        "body": "ExoPlayer can draw video into any Surface. The surface is set by the application via MSG_SET_SURFACE to the MediaCodecVideoTrackRenderer. Beyond that, anything regarding translation of the Surface is up to the application developer, and is outside of the scope of ExoPlayer.\n\nDepending on how much control you need, SurfaceView might be good enough, or you might want to look at TextureView and SurfaceTexture.\n"
      }
    ]
  },
  {
    "number": 237,
    "title": "HLS Streaming?",
    "created_at": "2015-01-13T19:53:29Z",
    "closed_at": "2015-01-18T05:02:34Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/237",
    "body": "I have these ts chunks and a m3u8 file, for adaptive streaming.\n\nDoes ExoPlayer support this?, before i get into it to implement it in our app. Thanks\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/237/comments",
    "author": "encodi",
    "comments": [
      {
        "user": "mine260309",
        "created_at": "2015-01-14T02:13:05Z",
        "body": "If you use dev-hls branch, yes it supports. Though it's under development...\n"
      },
      {
        "user": "ojw28",
        "created_at": "2015-01-18T05:02:34Z",
        "body": "The answer above is correct. It's fairly stable at this point; and will be pushed to master relatively soon now.\n"
      }
    ]
  },
  {
    "number": 134,
    "title": "Reusing renderers",
    "created_at": "2014-11-11T19:07:17Z",
    "closed_at": "2014-11-12T18:44:30Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/134",
    "body": "I am wanting to have a listview with videos inside (similar to how the facebook app has an occasional video pop up in the list) I was trying to hold a reference to my renderers for each video so I don't have to build them again. However whenever I call exoPlayer.prepare with renderers that were attached previously after going through the idle and preparing states they go from a state buffering to ended over and over again until I destroy the app. Is it not possible to reuse renderers? Is this a bad practice? \n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/134/comments",
    "author": "nschwermann",
    "comments": [
      {
        "user": "ojw28",
        "created_at": "2014-11-12T07:48:48Z",
        "body": "By design you should create new ones each time, since calling stop() on the player will call release() on the renderers, which will generally prevent them from being reused. The design makes sense if creating renderers is cheap, in which case the ability to reuse renderers isn't particularly important. Have you observed that this is not the case, and/or do you have other reasons for wanting to reuse them?\n"
      },
      {
        "user": "nschwermann",
        "created_at": "2014-11-12T17:51:30Z",
        "body": "Yes creating them is fairly cheap, but currently the logic adapted from the demo is tied to the network request for the manifest which is slow even with http caching enabled.\n"
      },
      {
        "user": "ojw28",
        "created_at": "2014-11-12T18:44:30Z",
        "body": "I guess you'll need to decouple fetching the manifest and building the renderers then :).\n"
      }
    ]
  },
  {
    "number": 85,
    "title": "Load different video while playing",
    "created_at": "2014-10-21T09:17:29Z",
    "closed_at": "2016-04-09T14:13:44Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/google/ExoPlayer/issues/85",
    "body": "My question is how would I approach this. \nI would need to load different video while current video is playing. \n\nSince player is created from renderer and url is added to that renderer how would I do something like: \n\nIn PlayerControl method seekTo() I would need to call \nplayer.stop();\nplayer.loadUrl(); //new url depending on seek time//\nplayer.play();\n",
    "comments_url": "https://api.github.com/repos/google/ExoPlayer/issues/85/comments",
    "author": "samek",
    "comments": [
      {
        "user": "hansvdg",
        "created_at": "2014-12-06T21:41:29Z",
        "body": "I have a similar question, while playing how does one start the next stream while the first stream is still playing.\n\nFor example (when using HLS livestreams):\n- A player is created before the a stream is started, I want to reuse the player object (if possible)\n  The user has selected a livestream from the list, the app goes trough the setup steps\n- Setup renderer\n- Build renderer\n- Autoplay\n\nWhen selecting the next livestream, the video is stopped via\n- player.stop();\n  Then follow the same steps as before, but we receive a warning on the AAC decoder and the stream sometimes starts playing again, but it takes a lot of time to load (> 10 sec)\n\nThe message in the log is the following (from a Nexus 5):\nE/OMXMaster﹕ A component of name 'OMX.qcom.audio.decoder.aac' already exists, ignoring this one.\nI/SoftAAC2﹕ Reconfiguring decoder: 0->48000 Hz, 0->2 channels\n\nIs this approach the correct one or are other steps required?\n"
      },
      {
        "user": "ojw28",
        "created_at": "2014-12-12T17:51:06Z",
        "body": "As far as I know, the log message you refer too isn't actually an error (I'm not sure why OMXMaster is using the error log level to print that). I think the steps you describe are correct.\n\nWhen you say it \"sometimes\" starts again, are you saying that sometimes it doesn't? If so, could you provide more details about what goes wrong? I don't know why it would take longer to load the second stream than the first one.\n"
      },
      {
        "user": "hansvdg",
        "created_at": "2014-12-17T09:11:57Z",
        "body": "Yes sometimes it doesn't start. I will investigate some more and try to create a scenario which reproduces this.\n"
      },
      {
        "user": "hansvdg",
        "created_at": "2015-03-16T20:31:57Z",
        "body": "Since the previous comment a lot has changed in the library, on the current master branch I do not experience the issue mentioned above.\nIn the dev branch of December I was not able to create a reproducable scenario.\n"
      },
      {
        "user": "PrasadShirsath",
        "created_at": "2015-08-13T22:36:33Z",
        "body": "Anybody able to play different video while one is playing?\n"
      },
      {
        "user": "ghost",
        "created_at": "2015-12-08T12:26:26Z",
        "body": "why have no answer? ???\n"
      },
      {
        "user": "chile-zhong",
        "created_at": "2016-03-03T05:54:23Z",
        "body": "same question too, but dont know how to do ,any progress?\n"
      },
      {
        "user": "cmdkhh",
        "created_at": "2016-03-04T21:08:32Z",
        "body": "We have been able to play multiple videos at a time as well as play a video while we buffer another one to create a playlist. \nYour questions were a bit broad but if you have something specific I would be happy to help.\n"
      },
      {
        "user": "andrewlewis",
        "created_at": "2016-04-09T14:13:44Z",
        "body": "We are working on built-in support for playlists, tracked by #1270. The first comment in this issue will probably be addressed by that enhancement.\n"
      }
    ]
  }
]