[
  {
    "number": 4081,
    "title": "How to scan image before its pushed to the repository?",
    "created_at": "2023-08-03T15:36:23Z",
    "closed_at": "2024-03-07T19:42:39Z",
    "labels": [
      "priority:p3",
      "question"
    ],
    "url": "https://github.com/GoogleContainerTools/jib/issues/4081",
    "body": "**Description of the issue**:\r\n\r\nIs it possible to scan image using trivy for vulnerabilities before its pushed to the repository ? I have task inside azure devops pipeline:\r\n```\r\n\r\n- task: Maven@3\r\n        displayName: 'Create docker image and push'\r\n        inputs:\r\n          mavenPomFile: ${{ parameters.jibPomFile }}\r\n          goals: -Dmaven.repo.local=${{ parameters.mavenCache }} --batch-mode -Djacoco.skip=true -Djava.awt.headless=true com.google.cloud.tools:jib-maven-plugin:build\r\n```\r\n**pom.xml part**\r\n\r\n```\r\n               <plugin>\r\n                    <groupId>com.google.cloud.tools</groupId>\r\n                    <artifactId>jib-maven-plugin</artifactId>\r\n                    <version>${jib-maven-plugin.version}</version>\r\n                    <configuration>\r\n                        <from>\r\n                            <image>some-name/zulu-alpine:4563</image>\r\n                        </from>\r\n                        <to>some-name:${project.version}</to>\r\n                        <container>\r\n                            <jvmFlags>\r\n                                <jvmFlag>-server</jvmFlag>\r\n                                               ----------\r\n                            </jvmFlags>\r\n                        </container>\r\n                    </configuration>\r\n                </plugin>\r\n```\r\n\r\nand I want to run this this command on the image before its pushed: `trivy image --format template --template \"@$(System.DefaultWorkingDirectory)/Junit.tpl\" -o junit-report.xml $IMAGE`\r\n\r\nIs it possible to do this somehow?\r\n",
    "comments_url": "https://api.github.com/repos/GoogleContainerTools/jib/issues/4081/comments",
    "author": "ser789654",
    "comments": [
      {
        "user": "wwadge",
        "created_at": "2023-08-09T05:46:58Z",
        "body": "You might make it work using the jib local docker builds instead of the usual jib behaviour of pushing blobs of data straight to the registry -- there's no intermediate writing to disk, i.e. it's not doing the equivalent of docker build + docker push but more like a docker build+push to the registry.\r\n\r\n"
      },
      {
        "user": "jaapspiering",
        "created_at": "2023-09-14T15:19:40Z",
        "body": "If you want to build the Docker image and scan it before pushing, you can opt for building a TAR file instead by using `jib:buildTar`. The TAR file can be scanned by Trivy:\r\n\r\n`trivy image --input jib-image.tar`\r\n\r\n and you can then push the tar file, or do another `jib:build` which does push directly."
      },
      {
        "user": "burkedavison",
        "created_at": "2024-03-07T19:42:39Z",
        "body": "Closing as answered."
      }
    ]
  },
  {
    "number": 3814,
    "title": "Allow to prepend classpath entries before the default ones",
    "created_at": "2022-10-17T12:11:40Z",
    "closed_at": "2022-10-17T14:21:29Z",
    "labels": [
      "priority:p3",
      "question"
    ],
    "url": "https://github.com/GoogleContainerTools/jib/issues/3814",
    "body": "Right now there is the calculated classpath and the extraClasspathEntries, which goes **after** the calculated one.\r\n\r\nI'd like to be able to **prepend** classpath items before the calculated classpath, so that they have a higher priority for resolving classes/resources.\r\n",
    "comments_url": "https://api.github.com/repos/GoogleContainerTools/jib/issues/3814/comments",
    "author": "flozano",
    "comments": [
      {
        "user": "elefeint",
        "created_at": "2022-10-17T13:17:55Z",
        "body": "`extraClasspath` is already prepended to the calculated classpath. If you are observing different behavior, could you create a reproducible sample?"
      },
      {
        "user": "flozano",
        "created_at": "2022-10-17T14:21:29Z",
        "body": "I stand corrected, the classpath is built as you describe. Sorry for the confusion!"
      }
    ]
  },
  {
    "number": 3712,
    "title": "How do i resolve: jib not having access to dockerd on apple silicon?",
    "created_at": "2022-07-23T06:41:48Z",
    "closed_at": "2022-08-01T14:26:28Z",
    "labels": [
      "priority:p3",
      "question"
    ],
    "url": "https://github.com/GoogleContainerTools/jib/issues/3712",
    "body": "everything works on intel, but not on apple silicon\r\n\r\nthrows\r\n```sh\r\njibDockerBuild: Build to Docker daemon failed, perhaps you should make sure Docker is installed and you have correct privileges to run it\r\n```",
    "comments_url": "https://api.github.com/repos/GoogleContainerTools/jib/issues/3712/comments",
    "author": "nohallcaesars",
    "comments": [
      {
        "user": "elefeint",
        "created_at": "2022-07-25T13:16:24Z",
        "body": "Do you have Docker installed on the silicon machine?"
      },
      {
        "user": "nohallcaesars",
        "created_at": "2022-07-25T15:14:11Z",
        "body": "Yes, using docker isnt the issue, its getting to jib to work with it\r\n\r\n"
      },
      {
        "user": "elefeint",
        "created_at": "2022-07-26T19:17:44Z",
        "body": "Can you run `docker save`, `docker inspect` and `docker load` manually, with the same user/permissions that you use for Jib? Our team did not see issues when running Jib on M1 architecture. The most likely explanation is permissions (are you perhaps running docker commands with `sudo` but not jib commands?). \r\n"
      },
      {
        "user": "emmileaf",
        "created_at": "2022-07-29T14:50:36Z",
        "body": "It could also be worth checking that sufficient permissions are granted to any programmatically or manually created files/folders that you may be using for credentials (`htpasswd` files, for example). \r\n\r\nIn the case that permission changes do not resolve the problem, would you have a small code sample you could help provide us with for reproducing this issue? \r\n"
      },
      {
        "user": "nohallcaesars",
        "created_at": "2022-08-01T14:26:28Z",
        "body": "@elefeint  @emmileaf \r\n\r\nVery likely a permissions issue. thanks for your help\r\n\r\n"
      }
    ]
  },
  {
    "number": 3569,
    "title": "Build tarball with jib-cli",
    "created_at": "2022-01-27T08:04:28Z",
    "closed_at": "2022-01-27T16:53:51Z",
    "labels": [
      "priority:p3",
      "question",
      "area/jib-cli"
    ],
    "url": "https://github.com/GoogleContainerTools/jib/issues/3569",
    "body": "Hi,\r\n\r\nI want to know if it has a way to deliver tarball image with jib-cli command as we can do with maven or gradle.\r\n\r\nThanks. ",
    "comments_url": "https://api.github.com/repos/GoogleContainerTools/jib/issues/3569/comments",
    "author": "cagroi",
    "comments": [
      {
        "user": "mpeddada1",
        "created_at": "2022-01-27T16:53:51Z",
        "body": "Hi @cagroi, yes, you can do this with the help of these two commands: `--target=tar://path --name=<image-reference>`. Calling `jib --help` can provide more information on the usage. "
      }
    ]
  },
  {
    "number": 3346,
    "title": "Disable generating of the latest tag",
    "created_at": "2021-07-15T09:17:10Z",
    "closed_at": "2021-07-16T17:24:10Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/GoogleContainerTools/jib/issues/3346",
    "body": "**Environment**:\r\n- *Jib version:*\r\n- 3.1.2 \r\n- *Build tool:* <!-- Maven/Gradle, including version -->\r\n- Maven\r\n- *OS:* \r\nany\r\n\r\n**Description of the issue**:\r\nI am using Immutable AWS ECR repository and when I run `mvn clean install jib:build`\r\nit fails with an error that the latest tag already exists.\r\n\r\n**Expected behavior**:\r\nThe latest tag should not be created and pushed\r\n\r\n**Steps to reproduce**:\r\n<!-- Please provide a minimal and precise series of steps -->\r\n\r\n  1. Create an AWS ECR repository\r\n  2. Enable Immutability\r\n  3. run `mvn clean install jib:build`\r\n\r\n**`jib-maven-plugin` Configuration**: <!-- Delete this section if not used -->\r\n```xml\r\n<plugin>\r\n                <groupId>com.google.cloud.tools</groupId>\r\n                <artifactId>jib-maven-plugin</artifactId>\r\n                <version>3.1.2</version>\r\n                <configuration>\r\n                    <to>\r\n                        <image>${AWS_ACCOUNT_ID}.dkr.ecr.us-east-1.amazonaws.com/ecs-play</image>\r\n                        <tags>\r\n                            <tag>${env.IMAGE_TAG}</tag>\r\n                        </tags>\r\n                    </to>\r\n                </configuration>\r\n            </plugin>\r\n```\r\n\r\n**Log output**: <!-- If applicable, provide relevant log output -->\r\n\r\n**Additional Information**: <!-- Any additional information that may be helpful -->\r\n\r\n\r\n<!-- Thanks for contributing! -->\r\n",
    "comments_url": "https://api.github.com/repos/GoogleContainerTools/jib/issues/3346/comments",
    "author": "igor-dmitriev",
    "comments": [
      {
        "user": "zhumin8",
        "created_at": "2021-07-15T20:14:45Z",
        "body": "would use of `-Djib.to.image` property to setup a unique tag name do what you intend?"
      },
      {
        "user": "chanseokoh",
        "created_at": "2021-07-16T17:24:10Z",
        "body": "@igor-dmitriev set the tags in `<to><image>`.\r\n```xml\r\n<image>${AWS_ACCOUNT_ID}.dkr.ecr.us-east-1.amazonaws.com/ecs-play:${env.IMAGE_TAG}</image>\r\n```\r\nWhen you don't specify a tag in an image reference, `:latest` is implied, just like `docker push example.com/image` will push an image with the `:latest` tag. `<to><tags>` actually mean \"additional\" tags. (We regret the bad naming, sorry.)\r\n\r\nDuplicates: #2237 #3330 (and many more)"
      }
    ]
  },
  {
    "number": 3143,
    "title": "Recover generated images in multi-module project",
    "created_at": "2021-03-16T21:20:25Z",
    "closed_at": "2021-03-16T21:48:41Z",
    "labels": [
      "area/jib-maven-plugin",
      "question",
      "area/jib-gradle-plugin"
    ],
    "url": "https://github.com/GoogleContainerTools/jib/issues/3143",
    "body": "In a CI/CD pipeline I need to deploy Jib generated images to test environment after the build step. It is a multi-module maven project and not every module generates images.\r\n\r\nIs there a way to recover the names/tags of images generated by Jib after the build? Like I can with the image id in target/jib-image.id?",
    "comments_url": "https://api.github.com/repos/GoogleContainerTools/jib/issues/3143/comments",
    "author": "sergiopacezup",
    "comments": [
      {
        "user": "chanseokoh",
        "created_at": "2021-03-16T21:48:41Z",
        "body": "Jib generates `target/jib-image.json` (#2227), and I think this is what you want?"
      },
      {
        "user": "sergiopacezup",
        "created_at": "2021-03-16T21:53:29Z",
        "body": "Perfect!"
      }
    ]
  },
  {
    "number": 1828,
    "title": "Allow several jib configurations in gradle plugin",
    "created_at": "2019-07-05T09:20:30Z",
    "closed_at": "2024-10-03T22:18:46Z",
    "labels": [
      "question",
      "area/jib-gradle-plugin",
      "priority: p4"
    ],
    "url": "https://github.com/GoogleContainerTools/jib/issues/1828",
    "body": "**Description of the issue**:\r\nSometimes it is required to have several configurations in gradle depending on the lifecycle stage of the code deployed. Specifically I'd like to have two jib configurations that tag images differently and push them to different behavious.\r\n\r\n**Expected behavior**:\r\n\r\nI want to have a gradle configuration like so:\r\n```groovy\r\ntask jibProduction(type: JibTask)  {\r\n    to {\r\n        image = 'eu.gcr.io/project/production-image'\r\n    }\r\n}\r\n\r\ntask jibTesting(type: JibTask)  {\r\n    to {\r\n        image = 'eu.gcr.io/project/testing-image'\r\n    }\r\n}\r\n```\r\n\r\n**Steps to reproduce**:\r\n\r\nUse above gradle config closure.\r\n\r\n**Environment**: \r\nGradle 4.10\r\n\r\nKotlin DSL:   1.0-rc-3\r\nKotlin:       1.2.60\r\nGroovy:       2.4.15\r\nAnt:          Apache Ant(TM) version 1.9.11 compiled on March 23 2018\r\nJVM:          1.8.0_181 (Oracle Corporation 25.181-b13)\r\nOS:           Linux 5.1.12-300.fc30.x86_64 amd64\r\n\r\n**`jib-gradle-plugin` Configuration**:\r\nsee above\r\n\r\n**Log output**:\r\n`Cannot create a proxy class for abstract class 'JibTask'.`\r\n\r\n**Additional Information**:\r\nI also tried to create a JibExtension and use this to configure a jibTask.\r\n\r\nAny other alternative to achieve a similar result is also fine. For example, the same problem can be tackled with the appEngine gradle plugin using configuration files:\r\n\r\n```groovy\r\nappengine {\r\n    deploy {\r\n        projectId = 'my-app-engine-project'\r\n    }\r\n}\r\n\r\ntask appengineDeployProduction {\r\n    group = \"app engine standard environment\"\r\n    description = \"Deploys the app on the production environment.\"\r\n    doFirst {\r\n        copy{\r\n            from(\"src/main/webapp/WEB-INF/appengine-web\"){\r\n                include \"appengine-web-production.xml\"\r\n            }\r\n            into(\"src/main/webapp/WEB-INF\")\r\n            rename('appengine-web-production.xml', 'appengine-web.xml')\r\n        }\r\n    }\r\n    finalizedBy appengineDeploy\r\n}\r\n\r\ntask appengineDeployTesting {\r\n    group = \"app engine standard environment\"\r\n    description = \"Deploys the app on the testing environment.\"\r\n    doFirst {\r\n        copy{\r\n            from(\"src/main/webapp/WEB-INF/appengine-web\"){\r\n                include \"appengine-web-testing.xml\"\r\n            }\r\n            into(\"src/main/webapp/WEB-INF\")\r\n            rename('appengine-web-testing.xml', 'appengine-web.xml')\r\n        }\r\n    }\r\n    doLast {\r\n        appengine.deploy.projectId = \"my-app-engine-testing-project\"\r\n    }\r\n    finalizedBy appengineDeploy\r\n}\r\n```\r\n\r\n",
    "comments_url": "https://api.github.com/repos/GoogleContainerTools/jib/issues/1828/comments",
    "author": "johannespostler",
    "comments": [
      {
        "user": "chanseokoh",
        "created_at": "2019-07-08T19:38:33Z",
        "body": "Not sure if you will like it, but what if you use a property (for example, passing `-Pprod`)?\r\n\r\n```gradle\r\nif (project.hasProperty('prod')) {\r\n  jib.to.image = 'eu.gcr.io/project/production-image'\r\n} else {\r\n  jib.to.image = 'eu.gcr.io/project/testing-image'\r\n}\r\n```"
      },
      {
        "user": "johannespostler",
        "created_at": "2019-07-18T09:24:25Z",
        "body": "Hi Chanseok,\r\nWe tried this and combined it with settings this property in two distinct tasks (finalizedBy jib). However, it didn't work as Gradle expected to have the property during the configuration phase already. We hence came up with the following solution:\r\n\r\n```\r\ntask jibProduction {\r\n    doFirst {\r\n        jib.to.image = \"eu.gcr.io/project/image-prod\"\r\n    }\r\n    finalizedBy ':subproject:jib'\r\n}\r\ntask jibTesting {\r\n    doFirst {\r\n        jib.to.image = \"eu.gcr.io/project/image-testing\"\r\n    }\r\n    finalizedBy ':subproject:jib'\r\n}\r\n```\r\n\r\nThis works fine for us. Thanks for the help!\r\nI'm not sure as to whether to close the issue or not, as several gradle jib-tasks might still be useful im some cases?"
      },
      {
        "user": "salvianreynaldi",
        "created_at": "2023-05-15T10:00:36Z",
        "body": "we can create new `BuildDockerTask`, `BuildImageTask` and `BuildTarTask` tasks.\r\nHowever, integrations with other gradle plugins which assume the use of the default `jib` task will break though"
      }
    ]
  },
  {
    "number": 350,
    "title": "Consider renaming dockerContext task/goal.",
    "created_at": "2018-06-01T18:31:34Z",
    "closed_at": "2018-06-06T00:12:50Z",
    "labels": [
      "priority: p1",
      "question"
    ],
    "url": "https://github.com/GoogleContainerTools/jib/issues/350",
    "body": "generateDockerContext\r\nexportDockerContext\r\nexportDockerfile\r\n\r\nPlease vote for your preference.",
    "comments_url": "https://api.github.com/repos/GoogleContainerTools/jib/issues/350/comments",
    "author": "coollog",
    "comments": [
      {
        "user": "TadCordle",
        "created_at": "2018-06-04T14:13:45Z",
        "body": "+1 `exportDockerContext`"
      },
      {
        "user": "coollog",
        "created_at": "2018-06-05T18:05:45Z",
        "body": "`exportDockerContext` it is"
      }
    ]
  },
  {
    "number": 48,
    "title": "Support build to local Docker daemon directly.",
    "created_at": "2018-02-05T15:31:34Z",
    "closed_at": "2018-05-10T20:36:10Z",
    "labels": [
      "priority: p1",
      "question"
    ],
    "url": "https://github.com/GoogleContainerTools/jib/issues/48",
    "body": "Please upvote if you would like this feature to be added.",
    "comments_url": "https://api.github.com/repos/GoogleContainerTools/jib/issues/48/comments",
    "author": "coollog",
    "comments": [
      {
        "user": "TadCordle",
        "created_at": "2018-05-10T20:36:10Z",
        "body": "Implemented in #266."
      }
    ]
  }
]