[
  {
    "number": 4732,
    "title": "Global legend label item configuration options instead of callback",
    "created_at": "2017-09-09T21:21:03Z",
    "closed_at": "2022-11-07T20:06:58Z",
    "labels": [
      "type: enhancement",
      "help wanted"
    ],
    "url": "https://github.com/chartjs/Chart.js/issues/4732",
    "body": "The legend item interface currently allows for styling _legend items_ via a callback - but there is no way to define a global _legend item_ style.\r\n\r\nHerewith requesting that the following properties be added to the _legend label configuration_ (options.legend.labels) option:\r\n\r\n`fillStyle`, \r\n`lineCap`, \r\n`lineDash`, \r\n`lineDashOffset`, \r\n`lineJoin`, \r\n`lineWidth`, \r\n`pointStyle`,\r\n`strokeStyle`\r\n",
    "comments_url": "https://api.github.com/repos/chartjs/Chart.js/issues/4732/comments",
    "author": "wernerm",
    "comments": [
      {
        "user": "dangreen",
        "created_at": "2022-11-07T20:06:58Z",
        "body": "Hi. Due to Chart.js using canvas, we can't implement every requested feature cause this will bloat the code. You can try to implement this as external plugin."
      }
    ]
  },
  {
    "number": 4351,
    "title": "[Violation] Added non-passive event listener to a scroll-blocking 'touchmove' event. Consider marking event handler as 'passive' to make the page more responsive.",
    "created_at": "2017-06-08T08:12:26Z",
    "closed_at": "2017-06-08T10:46:00Z",
    "labels": [
      "type: bug",
      "status: duplicate",
      "help wanted"
    ],
    "url": "https://github.com/chartjs/Chart.js/issues/4351",
    "body": "## Expected Behavior\r\nChart.JS should be optimized for performance\r\n\r\n## Current Behavior\r\nChrome throws warning\r\n`[Violation] Added non-passive event listener to a scroll-blocking 'touchstart' event. Consider marking event handler as 'passive' to make the page more responsive.` on L#5755\r\n\r\n## Possible Solution\r\nChange \r\n`node.addEventListener(eventType, method);` to\r\n`node.addEventListener(eventType, method. {passive: true});`\r\n\r\n## Steps to Reproduce (for bugs)\r\n1. Create a chart and check the console.\r\n\r\n## Environment\r\n<!--- Include as many relevant details about the environment you experienced the bug in -->\r\n* Chart.js version: 2.6.0\r\n* Browser name and version: Chrome  58.0.3029.81",
    "comments_url": "https://api.github.com/repos/chartjs/Chart.js/issues/4351/comments",
    "author": "asimkt",
    "comments": [
      {
        "user": "etimberg",
        "created_at": "2017-06-08T10:46:00Z",
        "body": "Closing as duplicate of #4287. I'm happy to look at a PR fixing this."
      },
      {
        "user": "asimkt",
        "created_at": "2017-06-09T04:40:36Z",
        "body": "@etimberg Oh.. I've searched for the error message. I thought it's not been reported yet. Let me try to fix this."
      }
    ]
  },
  {
    "number": 4207,
    "title": "Bar chart : When width scaled down, Y axis labels overlap",
    "created_at": "2017-05-02T01:55:18Z",
    "closed_at": "2020-01-25T17:23:53Z",
    "labels": [
      "type: enhancement",
      "help wanted"
    ],
    "url": "https://github.com/chartjs/Chart.js/issues/4207",
    "body": "I have a div, and my canvas is inside the div. The div takes up 100vw of the screen.\r\n\r\nThe problem is that when scaling down my screen, the Y axis labels start to overlap each other at a certain point. How can I make the chart more scalable so that it never has issues with labels overlapping each other?",
    "comments_url": "https://api.github.com/repos/chartjs/Chart.js/issues/4207/comments",
    "author": "WyattKampel",
    "comments": [
      {
        "user": "etimberg",
        "created_at": "2017-05-02T11:17:26Z",
        "body": "@Frog8fly you could use the `ticks.callback` config option for the axis to remove certain labels. I'm happy to look at a PR that implements auto skipping for vertical axes. Right now it only exists for horizontal axes."
      },
      {
        "user": "etimberg",
        "created_at": "2020-01-25T17:23:52Z",
        "body": "Same resolution as #5156 "
      }
    ]
  },
  {
    "number": 4193,
    "title": "yAxis Tick Label Alignment",
    "created_at": "2017-04-27T14:38:38Z",
    "closed_at": "2020-10-12T14:22:13Z",
    "labels": [
      "type: enhancement",
      "help wanted"
    ],
    "url": "https://github.com/chartjs/Chart.js/issues/4193",
    "body": "I have a requirement to left align the yAxis tick labels. By default I see that they are right aligned tight to the graph.\r\n\r\nI have been trying to find a solution and have been unable to find one as yet. Is this even a possible configuration or am I stuck with the right aligned tick labels?\r\n\r\n",
    "comments_url": "https://api.github.com/repos/chartjs/Chart.js/issues/4193/comments",
    "author": "apiercy78",
    "comments": [
      {
        "user": "etimberg",
        "created_at": "2017-04-27T22:36:45Z",
        "body": "Changing this is not currently possible. It requires code changes inside the `draw` method of the axis"
      },
      {
        "user": "avichyz",
        "created_at": "2019-04-28T20:15:04Z",
        "body": "Help is still wanted on this matter - \r\nI added % to the axis displayed on the right of my chart and the tex is aligned to the left, looking bad"
      },
      {
        "user": "jakerainis",
        "created_at": "2019-05-08T22:03:59Z",
        "body": "Is this by any chance possible on the X-Axis? By default they're centered but I'd love to have the left aligned to the tick."
      },
      {
        "user": "raaaaay-c",
        "created_at": "2019-07-03T11:08:57Z",
        "body": "@apertureless  \r\ndo the following in \r\n```\r\nyAxes: [{\r\n\tticks: {\r\n          mirror: true,\r\n          padding: 50,\r\n       }\r\n     }]\r\n```"
      },
      {
        "user": "Nutties93",
        "created_at": "2019-07-04T02:24:38Z",
        "body": "Hi, I'm also facing this issue too. Is it possible to bring in some of the standard CSS styles to TICKS,LABELS,LEGENDS of chartjs? For example, \r\n1) Adding display: 'flex', justify-content:'space-evenly' to LEGEND itself. \r\n2) Left align Yaxis ticks instead of right."
      }
    ]
  },
  {
    "number": 4191,
    "title": "[FEATURE] Add tooltip textLabelColor callback",
    "created_at": "2017-04-27T09:48:24Z",
    "closed_at": "2017-05-28T12:39:29Z",
    "labels": [
      "type: enhancement",
      "help wanted"
    ],
    "url": "https://github.com/chartjs/Chart.js/issues/4191",
    "body": "## Expected Behavior\r\nI want to be able to apply data color (bar color) to tooltip label:\r\n```javascript\r\ntooltips: {\r\n  callbacks: {\r\n    textLabelColor: (tooltipItem, chartInstance) => {\r\n      return chartInstance.data.datasets[tooltipItem.datasetIndex].backgroundColor;\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n## Current Behavior\r\nThere is a callback called labelColor that can be used to set the color of the box that appears right before the label but not the text.\r\n",
    "comments_url": "https://api.github.com/repos/chartjs/Chart.js/issues/4191/comments",
    "author": "Elolawyn",
    "comments": [
      {
        "user": "etimberg",
        "created_at": "2017-04-27T11:25:29Z",
        "body": "Happy to look at a PR for this."
      }
    ]
  },
  {
    "number": 4103,
    "title": "Only allow integer steps on axis",
    "created_at": "2017-04-03T18:03:35Z",
    "closed_at": "2018-04-01T16:56:46Z",
    "labels": [
      "type: enhancement",
      "help wanted"
    ],
    "url": "https://github.com/chartjs/Chart.js/issues/4103",
    "body": "Is there an option to only allow integer values for the steps on a bar chart? So it never, for instance, has steps of \"0.5\" when the bar chart is showing \"things\" that cannot exist in quantities less than 1",
    "comments_url": "https://api.github.com/repos/chartjs/Chart.js/issues/4103/comments",
    "author": "blubberbo",
    "comments": [
      {
        "user": "littlee",
        "created_at": "2017-04-11T03:39:13Z",
        "body": "+1"
      },
      {
        "user": "oatto",
        "created_at": "2017-05-19T07:03:18Z",
        "body": "+1"
      }
    ]
  },
  {
    "number": 3877,
    "title": "Toggle individual bar visibility",
    "created_at": "2017-02-07T22:55:50Z",
    "closed_at": "2020-10-12T14:22:56Z",
    "labels": [
      "type: enhancement",
      "help wanted"
    ],
    "url": "https://github.com/chartjs/Chart.js/issues/3877",
    "body": "Is there an easy way to hide data in datasets for chart types like bar?\r\n\r\n`var meta = chartInstance.getDatasetMeta(datasetIndex);\r\nmeta.data[dataIndex].hidden = !meta.data[dataIndex].hidden;`\r\n\r\nseem to work for pie charts.",
    "comments_url": "https://api.github.com/repos/chartjs/Chart.js/issues/3877/comments",
    "author": "arumie",
    "comments": [
      {
        "user": "etimberg",
        "created_at": "2017-02-07T23:11:53Z",
        "body": "@arumie you can add `hidden: true` to the dataset in question and `update()` the chart"
      },
      {
        "user": "arumie",
        "created_at": "2017-02-07T23:15:33Z",
        "body": "@etimberg But doesn't that hide the whole dataset not individual bars of a dataset?"
      },
      {
        "user": "etimberg",
        "created_at": "2017-02-07T23:16:45Z",
        "body": "yes. there is no way to hide a single bar in a dataset. You could try setting the data to `NaN` and see what happens, but I think it will leave a gap in the chart"
      },
      {
        "user": "arumie",
        "created_at": "2017-02-07T23:25:12Z",
        "body": "@etimberg Yeah, it does. It kinda works if you just remove data and update the chart,, but that introduces some difficulty with the ordering when adding data again. Guess i just wanted to know if it was as easy as with pie charts instead.\r\n\r\nThank you for the quick answer! :-)"
      }
    ]
  },
  {
    "number": 3857,
    "title": "Toolstips slow performance in Chrome windows 10",
    "created_at": "2017-02-02T10:55:21Z",
    "closed_at": "2017-02-12T19:05:44Z",
    "labels": [
      "type: bug",
      "type: enhancement",
      "status: needs test case",
      "help wanted"
    ],
    "url": "https://github.com/chartjs/Chart.js/issues/3857",
    "body": "I have problems with the performance in Chrome (56.0.2924.87) on windows 10. When displaying maybe 10 charts in a page and hovering over a datapoint the tooltip animates very slowly from the last selected point to the new. It's so slow that you get bored and the cpu fan on my pc starts. The pc should be about twice as fast as my old mac. In Firefox on Windows and in Chrome on mac hoovering tooltips is fast and smooth. I have enabled gpu ignore in chrome because I saw a few issues, but it didn't help.  Anyone have an idea how to fix this issue?",
    "comments_url": "https://api.github.com/repos/chartjs/Chart.js/issues/3857/comments",
    "author": "kritollm",
    "comments": [
      {
        "user": "kritollm",
        "created_at": "2017-02-02T11:26:52Z",
        "body": "I fixed the issue by changing the parent container to another class. I'm using bulma as styling. "
      },
      {
        "user": "kritollm",
        "created_at": "2017-02-02T11:40:06Z",
        "body": "It didn't help. I will try to find the issue, it must be that chrome on my pc fires some events ofter than normal and Chart.js reacts to them and redraw. I just noticed that scrolling of the page is also very slow, but smooth in Firefox."
      },
      {
        "user": "etimberg",
        "created_at": "2017-02-02T12:26:49Z",
        "body": "Is this related to #3746? If so, could you try the PR in #3856 ?"
      },
      {
        "user": "kritollm",
        "created_at": "2017-02-02T12:46:57Z",
        "body": "Probably related, but it was slower when using the PR in #3856. I tried with only two charts in the page and it was fast in Chrome, so I think my problem is that the events is fired on all the charts. I don't know why that only happens in Chrome on Windows. I have logged onHover and onResize. OnHover only fire for the selected chart and only passes an array of active elements when I hover over a point. OnResize only fires when chart is inited/first paint or if I resize the window ;)."
      },
      {
        "user": "kritollm",
        "created_at": "2017-02-02T14:20:03Z",
        "body": "I have now logged the animations. There is only one animation, so the problem is that the requestAnimationFrame isn't triggered at normal rate. The skipFrames doesn't help because that only skips frames based on the time used to draw, not time spent between requestAnimationFrames. I think it's a chrome bug."
      },
      {
        "user": "etimberg",
        "created_at": "2017-02-12T19:05:44Z",
        "body": "Closing since this looks to be a bug in Chrome"
      }
    ]
  },
  {
    "number": 3827,
    "title": "Update to latest color lib and PR regex change back to upstream",
    "created_at": "2017-01-25T13:38:12Z",
    "closed_at": "2020-05-24T00:53:50Z",
    "labels": [
      "type: enhancement",
      "help wanted"
    ],
    "url": "https://github.com/chartjs/Chart.js/issues/3827",
    "body": "From the comments of #3823, we should try and update to the v1.0 color API and PR back our change to chartjs-color-string for the regex changes.",
    "comments_url": "https://api.github.com/repos/chartjs/Chart.js/issues/3827/comments",
    "author": "etimberg",
    "comments": [
      {
        "user": "Qix-",
        "created_at": "2017-01-25T15:24:18Z",
        "body": "TODO:\r\n\r\n- [ ] qix-/color-string#31\r\n- [ ] qix-/color-string#30\r\n- [ ] qix-/color#107\r\n\r\nAs well, need to update any usage of the color(-convert|-string) libraries within Chart.js :)"
      },
      {
        "user": "etimberg",
        "created_at": "2020-02-09T16:49:32Z",
        "body": "@kurkle I think we can close this given #7059 "
      },
      {
        "user": "etimberg",
        "created_at": "2020-05-24T00:53:50Z",
        "body": "Closing based on merging #7059 "
      }
    ]
  },
  {
    "number": 3788,
    "title": "[BUG] Importing using CommonJS doesn’t work",
    "created_at": "2017-01-12T20:31:49Z",
    "closed_at": "2017-01-22T15:32:00Z",
    "labels": [
      "type: bug",
      "help wanted"
    ],
    "url": "https://github.com/chartjs/Chart.js/issues/3788",
    "body": "## Expected Behavior\r\nAfter installing Chart.js via NPM (`npm install chart.js --save-dev`), to then be able to include it in scripts like this as per the documentation:\r\n\r\n```js\r\nvar Chart = require('src/chart.js');\r\n``` \r\n\r\n## Current Behavior\r\nAfter installing with NPM and adding `var Chart = require('src/chart.js');` in my script, I get the following error:\r\n\r\n> Module not found: Error: Can't resolve 'src/chart.js' in '/path/to/my/project/resources/assets/js/components'\r\n\r\n## Possible Solution\r\nNot sure, as `\"main\": \"src/chart.js\"` is in **package.json**\r\n\r\n## Steps to Reproduce (for bugs)\r\n1. Run `npm install chart.js --save-dev`.\r\n2. Add `var Chart = require('src/chart.js');` to a script as per documentation.\r\n\r\n## Environment\r\n* Chart.js version: ^2.4.0\r\n* Browser name and version: N/A\r\n* Link to your project: N/A\r\n",
    "comments_url": "https://api.github.com/repos/chartjs/Chart.js/issues/3788/comments",
    "author": "martinbean",
    "comments": [
      {
        "user": "Jareechang",
        "created_at": "2017-01-16T01:54:33Z",
        "body": "I think its suppose to be `var Chart = require('chart.js');`\r\n\r\ncan you give that a try @martinbean and see if that works for you ?"
      },
      {
        "user": "etimberg",
        "created_at": "2017-01-22T15:32:00Z",
        "body": "Docs updated in #3815 "
      }
    ]
  },
  {
    "number": 3676,
    "title": "Incorrect document for Interaction Modes",
    "created_at": "2016-12-05T03:16:53Z",
    "closed_at": "2016-12-18T00:01:40Z",
    "labels": [
      "type: bug",
      "help wanted",
      "type: documentation"
    ],
    "url": "https://github.com/chartjs/Chart.js/issues/3676",
    "body": "The document says:\r\n\r\n> 'x-axis' Behaves like 'index' mode with intersect = true.\r\n\r\nBut actually it behaves like 'index' mode with intersect = false.",
    "comments_url": "https://api.github.com/repos/chartjs/Chart.js/issues/3676/comments",
    "author": "weareoutman",
    "comments": [
      {
        "user": "etimberg",
        "created_at": "2016-12-18T00:01:40Z",
        "body": "Fixed in #3684 "
      }
    ]
  },
  {
    "number": 3606,
    "title": "Exception when clicking on a chart in version 2.4.0",
    "created_at": "2016-11-16T08:50:15Z",
    "closed_at": "2016-11-16T13:16:49Z",
    "labels": [
      "type: bug",
      "help wanted"
    ],
    "url": "https://github.com/chartjs/Chart.js/issues/3606",
    "body": "Hi all !\r\n\r\nWhen I click on a chart the following exception is raised:\r\n> core.umd.js:3376 TypeError: Cannot read property 'intersect' of undefined\r\n>     at Object.dataset (Chart.js:6252)\r\n>     at Chart.Controller.getDatasetAtEvent (Chart.js:4418)\r\n>     at UIChart.onCanvasClick (chart.ts:57)\r\n>     at _View_UIChart0._handle_click_3_0 (UIChart.ngfactory.js:63)\r\n>     at eval (core.umd.js:9602)\r\n>     at eval (platform-browser.umd.js:1716)\r\n>     at eval (platform-browser.umd.js:1829)\r\n>     at ZoneDelegate.invoke (zone.js:232)\r\n>     at Object.onInvoke (core.umd.js:6158)\r\n>     at ZoneDelegate.invoke (zone.js:231)\r\n\r\nIndeed it appears that no check is made with the parameter _**options**_ of function _**dataset**_:\r\n```\r\ndataset: function(chart, e, options) {\r\n   var position = helpers.getRelativePosition(e, chart.chart);\r\n   var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false);\r\n  ...\r\n}\r\n```\r\n**_Options_** is undefined because it is not input as parameter when calling **_dataset_**:\r\n```\r\ngetDatasetAtEvent: function(e) {\r\n     return Chart.Interaction.modes.dataset(this, e);\r\n},\r\n```\r\nSo one fix should be to check if options is defined like this:\r\n```\r\nvar items = options && options.intersect ? ...\r\n```\r\nWhat are you thinking about ?\r\n",
    "comments_url": "https://api.github.com/repos/chartjs/Chart.js/issues/3606/comments",
    "author": "Seb92130",
    "comments": [
      {
        "user": "etimberg",
        "created_at": "2016-11-16T12:19:48Z",
        "body": "I think it's fine to pass the options in `getDatasetAtEvent`. Feel free to PR this\n"
      },
      {
        "user": "Seb92130",
        "created_at": "2016-11-16T13:16:49Z",
        "body": "Fix proposed by ypkkhatri is the right one, so I will close this issue.\n"
      }
    ]
  },
  {
    "number": 3490,
    "title": "[BUG] Tick documentation is missing autoSkipPadding",
    "created_at": "2016-10-19T19:54:42Z",
    "closed_at": "2017-03-21T10:44:34Z",
    "labels": [
      "type: bug",
      "help wanted",
      "type: documentation"
    ],
    "url": "https://github.com/chartjs/Chart.js/issues/3490",
    "body": "Currently, there is an undocumented feature that will increase the padding between ticks when auto skip is enabled and it has been activated. \n## Current Behavior\n\nautoSkipPadding is not included in the documentation, but it is in the tests and in source where it is used in calculating where ticks should be drawn on the canvas.\n## Expected Behavior & Possible Solution\n\nThe tick documentation should have something like the following in the Scales documentation, under 'Ticks'\nautoSkipPadding: number - padding between ticks on the same axis when values have been skipped.\n## Environment\n- Chart.js version: 2.2.2\n## Notes\n\nIf this is accepted as a bug, I can submit a PR with a fix. :) Thanks\n",
    "comments_url": "https://api.github.com/repos/chartjs/Chart.js/issues/3490/comments",
    "author": "bretjb",
    "comments": [
      {
        "user": "etimberg",
        "created_at": "2016-10-19T23:10:53Z",
        "body": "@bretjb I would be happy to look at a PR for this\n"
      },
      {
        "user": "etimberg",
        "created_at": "2017-03-21T10:44:34Z",
        "body": "Fixed in #3751"
      }
    ]
  },
  {
    "number": 3341,
    "title": "doc typo",
    "created_at": "2016-09-21T07:44:09Z",
    "closed_at": "2016-09-24T15:59:49Z",
    "labels": [
      "type: bug",
      "help wanted",
      "type: documentation"
    ],
    "url": "https://github.com/chartjs/Chart.js/issues/3341",
    "body": "I think there is a documentation error for the scaleLabel:\n\nThe **grid line** configuration is nested under the scale configuration in the **scaleLabel** key.\n\ngrid line shoud be replaced with scale label.\n\nThanks for this awesome library!\n",
    "comments_url": "https://api.github.com/repos/chartjs/Chart.js/issues/3341/comments",
    "author": "delcon",
    "comments": [
      {
        "user": "etimberg",
        "created_at": "2016-09-21T18:16:10Z",
        "body": "thanks for reporting this @delcon \n"
      },
      {
        "user": "etimberg",
        "created_at": "2016-09-24T15:59:49Z",
        "body": "Fixed in #3360 \n"
      }
    ]
  },
  {
    "number": 3274,
    "title": "How to set custom y-axis range?",
    "created_at": "2016-09-07T18:22:43Z",
    "closed_at": "2017-03-21T10:44:46Z",
    "labels": [
      "type: bug",
      "help wanted",
      "type: documentation"
    ],
    "url": "https://github.com/chartjs/Chart.js/issues/3274",
    "body": "I like the fact that the chart looks at minimum and maximum values and scales the y-axis so that it just shows the minimum and maximum values.\n\nHowever, I have a situation where I'm drawing multiple charts.  They each have different data, and the min/max Y values will vary, but the domain of all them are related, and it would make more sense if I could determine the min/max of ALL the datasets, and then set the min/max of all of the charts to those values.  It will result in some charts showing points right at the bottom of the chart, but the consistency within the entire set of charts is more valuable.\n\nIt'll be easy enough to iterate through my datasets to determine the min/max values, but how do I set the charts to use those values?\n",
    "comments_url": "https://api.github.com/repos/chartjs/Chart.js/issues/3274/comments",
    "author": "davidmichaelkarr",
    "comments": [
      {
        "user": "davidmichaelkarr",
        "created_at": "2016-09-07T20:12:02Z",
        "body": "I thought I'd figured this out, but it looks like this will be more complicated to make it \"complete\".  I noticed the example for setting \"ticks: { min: N, max:N }\", but this results in an odd looking Y axis.  I think I have to somehow compute a reasonable step size.  What is a reasonable algorithm to compute that?\n"
      },
      {
        "user": "davidmichaelkarr",
        "created_at": "2016-09-07T20:23:11Z",
        "body": "I would think that since charts.js is computing a reasonable step size from the data, I should be able to just ask it to recompute a step size from the custom min/max value, instead of having to implement a similar algorithm to what the code is already doing.\n"
      },
      {
        "user": "davidmichaelkarr",
        "created_at": "2016-09-07T20:34:02Z",
        "body": "Note that I'm using charts.js from angular-chart.  I noticed the \"chart.update()\" method, but as I'm using angular-chart, I'm not creating the Chart objects in my javascript, they're created declaratively (by me, at least).  In any case, despite the fact that it seems like calling \"chart.update()\" is the thing to do here, I would think that it would be unnecessary.\n"
      },
      {
        "user": "etimberg",
        "created_at": "2016-09-07T22:31:31Z",
        "body": "@davidmichaelkarr using `ticks.min` and `ticks.max` is the way to do this. What looks odd about it?\n\nYou can use `ticks.stepSize` for a fixed step size\n"
      },
      {
        "user": "davidmichaelkarr",
        "created_at": "2016-09-07T22:40:43Z",
        "body": "The problem is, it's just not that simple.  A simple-minded approach results in an unpleasing rendering.  I can't just determine the max Y value of my data and set the ticks.max to that.  The proper value to set \"ticks.max\" to is some value larger than that value, which apparently the charts engine usually computes properly so it renders cleanly.\n\nFor instance, let's say a dataset has values ranging from 0 to 480.  When I render that normally, it shows Y axis values of 0, 200, 400, and 600, which looks good.  Essentially, what I need to set \"ticks.max\" to is \"600\", not \"480\".  The effect would be the same as if I had added an additional fake data value of the \"max\" value, with an X axis value one plus the last value.  That would make the chart engine render it in a reasonable fashion (except for one of the data points being fake).\n"
      },
      {
        "user": "davidmichaelkarr",
        "created_at": "2016-09-07T22:45:30Z",
        "body": "Another way to look at is if I could set a \"pretend\" Y axis value, so the chart engine would render the chart with the provided data, but also using that pretend data point in the calculations for determining the Y axis labels.\n"
      },
      {
        "user": "etimberg",
        "created_at": "2016-09-07T22:52:16Z",
        "body": "Hmm, have you looked at `ticks.suggestedMin` and `ticks.suggestedMax`? They essentially change the data max and min before the auto fit algorithm runs\n"
      },
      {
        "user": "davidmichaelkarr",
        "created_at": "2016-09-07T22:58:11Z",
        "body": "Bingo!  That's exactly what I needed.  It would be useful to rephrase the statement in the docs about these two fields.  What it says now is confusing and doesn't say what you said here, which was exactly what I needed to know.\n"
      },
      {
        "user": "etimberg",
        "created_at": "2016-09-07T23:03:05Z",
        "body": "Ok, I'll retag this as a documentation bug.\n"
      },
      {
        "user": "etimberg",
        "created_at": "2017-03-21T10:44:46Z",
        "body": "Fixed in #3751"
      }
    ]
  },
  {
    "number": 3237,
    "title": "getElementAtEvent() returns array of single element, not single element",
    "created_at": "2016-08-31T19:02:14Z",
    "closed_at": "2017-03-21T10:45:22Z",
    "labels": [
      "type: bug",
      "help wanted",
      "type: documentation"
    ],
    "url": "https://github.com/chartjs/Chart.js/issues/3237",
    "body": "Contrary to the docs, getElementAtEvent() returns an array containing a single ChartElement. Observed while implementing custom click behavior on a pie chart.\n",
    "comments_url": "https://api.github.com/repos/chartjs/Chart.js/issues/3237/comments",
    "author": "jeffzap",
    "comments": [
      {
        "user": "Pikamander2",
        "created_at": "2016-09-05T08:43:48Z",
        "body": "Here are the relevant lines.\n\n```\n        // Get the single element that was clicked on\n        // @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n        getElementAtEvent: function(e) {\n            var me = this;\n            var eventPosition = helpers.getRelativePosition(e, me.chart);\n            var elementsArray = [];\n\n            helpers.each(me.data.datasets, function(dataset, datasetIndex) {\n                if (me.isDatasetVisible(datasetIndex)) {\n                    var meta = me.getDatasetMeta(datasetIndex);\n                    helpers.each(meta.data, function(element) {\n                        if (element.inRange(eventPosition.x, eventPosition.y)) {\n                            elementsArray.push(element);\n                            return elementsArray;\n                        }\n                    });\n                }\n            });\n\n            return elementsArray.slice(0, 1);\n        },\n```\n\n**return elementsArray.slice(0, 1)** could be replaced with something like **return elementsArray[0]**, but at this point that would probably cause backwards compatibility problems. It might be better just to change the documentation.\n\nThoughts, @etimberg?\n"
      },
      {
        "user": "etimberg",
        "created_at": "2016-09-05T11:57:22Z",
        "body": "@Pikamander2 it might cause other problems in the code that runs these functions. I would support changing the docs in this case\n"
      },
      {
        "user": "etimberg",
        "created_at": "2017-03-21T10:45:22Z",
        "body": "Fixed in #3751"
      }
    ]
  },
  {
    "number": 3189,
    "title": "Enhancement Request - Hide Legend Per-Dataset",
    "created_at": "2016-08-22T20:57:16Z",
    "closed_at": "2016-11-12T23:48:26Z",
    "labels": [
      "type: enhancement",
      "help wanted"
    ],
    "url": "https://github.com/chartjs/Chart.js/issues/3189",
    "body": "Current it is easy to remove the legend from charts via the global or chart level config options. However, it would be very useful for me to be able to remove the legend on a per-dataset level.\n\nCurrently:\n\n```\noptions: {\n    legend: {\n          display: false\n    }\n}\n```\n\nRequested API:\n\n```\nvar lineChartData = {\n    labels: [],\n    datasets: [{\n        label: '',\n        data: [],\n    }, {\n        data: []\n        legend: false,\n    }]\n}\n```\n",
    "comments_url": "https://api.github.com/repos/chartjs/Chart.js/issues/3189/comments",
    "author": "Kelderic",
    "comments": [
      {
        "user": "mcpohl",
        "created_at": "2016-09-13T10:14:38Z",
        "body": "hi, i had the same problem and developed the following patch to support a new dataset-attribute hiddenLegend: true|false\n\n```\n--- node_modules/chart.js/dist/Chart.js 2016-08-27 14:39:31.000000000 +0200\n+++ Chart.js    \n@@ -6293,6 +6293,7 @@\n                        lineWidth: dataset.borderWidth,\n                        strokeStyle: dataset.borderColor,\n                        pointStyle: dataset.pointStyle,\n+            hiddenLegend: dataset.hiddenLegend,\n\n                        // Below is extra data used for toggling the datasets\n                        datasetIndex: i\n@@ -6551,7 +6552,8 @@\n\n                // current position\n                var drawLegendBox = function(x, y, legendItem) {\n-                   if (isNaN(boxWidth) || boxWidth <= 0) {\n+\n+          if (isNaN(boxWidth) || boxWidth <= 0 || legendItem.hiddenLegend) {\n                        return;\n                    }\n\n@@ -6590,6 +6592,9 @@\n                    ctx.restore();\n                };\n                var fillText = function(x, y, legendItem, textWidth) {\n+\n+          if(legendItem.hiddenLegend) { return; }\n+\n                    ctx.fillText(legendItem.text, boxWidth + (fontSize / 2) + x, y);\n\n                    if (legendItem.hidden) {\n```\n"
      },
      {
        "user": "martinszy",
        "created_at": "2016-11-03T22:40:12Z",
        "body": "Hi I'm using 2.0.2 and I need this patch but it doesn't work:\n\n> $ patch Chart.js chartsjs.patch \n> patching file Chart.js\n> Hunk # 1 FAILED at 6293.\n> Hunk # 2 FAILED at 6551.\n> Hunk # 3 FAILED at 6590.\n> 3 out of 3 hunks FAILED -- saving rejects to file Chart.js.rej\n\nWhat version was the patch for @mcpohl ?\n"
      },
      {
        "user": "mcpohl",
        "created_at": "2016-11-04T10:23:00Z",
        "body": "the version was 2.2.2\n"
      },
      {
        "user": "BD-Kraemer",
        "created_at": "2017-09-15T11:52:05Z",
        "body": "I'm trying to use this feature on 2.7.0 but the legend item is still being displayed for the dataaset. Am I doing something wrong?\r\n\r\n```javascript\r\n datasets: [\r\n                    {\r\n                        label: 'Primary Line',\r\n                        data: [12, 19, 3, 2, 9],\r\n                        borderColor: 'rgb(0, 12, 192)',\r\n                        borderWidth: 2,\r\n                        hiddenLegend: true,\r\n                        \r\n                    }\r\n]\r\n```"
      },
      {
        "user": "megharajdeepak",
        "created_at": "2017-09-26T09:42:32Z",
        "body": "v2.7.0\r\n\r\nUnder options, add the following:\r\n```\r\noptions: {\r\n  legend: {\r\n    labels: {\r\n      filter: function(legendItem, chartData) {\r\n      \r\n        // return true or false based on legendItem's datasetIndex (legendItem.datasetIndex)\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nAngular\\Typescript:\r\n\r\n```\r\noptions: {\r\n  legend: {\r\n    labels: {\r\n      filter: (legendItem, chartData) => {\r\n      \r\n        // return true or false based on legendItem's datasetIndex (legendItem.datasetIndex)\r\n      }\r\n    }\r\n  }\r\n}\r\n```"
      },
      {
        "user": "mweimerskirch",
        "created_at": "2018-07-26T15:23:51Z",
        "body": "I had to use `legendItem.index` instead of `legendItem.datasetIndex` with version 2.7.2.\r\n\r\nHere's the code I used to hide items in the legend that had \"empty\" data:\r\n\r\n```\r\noptions: {\r\n            labels: {\r\n                filter: function (legendItem, chartData) {\r\n                    return chartData.datasets[0].data[legendItem.index] > 0;\r\n                },\r\n            },\r\n},\r\n```\r\n"
      },
      {
        "user": "cromartie1984",
        "created_at": "2019-01-20T13:31:16Z",
        "body": "i try this, but it does not work, weird"
      },
      {
        "user": "veavvari",
        "created_at": "2019-08-14T10:10:38Z",
        "body": "I tried this, but it is not working. Can anyone tell me how can I achieve this?\r\n"
      },
      {
        "user": "acetilholin",
        "created_at": "2019-09-05T13:25:56Z",
        "body": "```\r\n legend: {\r\n                display: true,\r\n                labels: {\r\n                    filter: function (legendItem, chartData) {\r\n                        return (chartData.datasets[legendItem.datasetIndex].label)\r\n                    },\r\n                }\r\n            },\r\n```\r\n\r\nRemove label from dataset you want to hide and this should do the magic.\r\n"
      },
      {
        "user": "fabalexsie",
        "created_at": "2024-07-22T17:22:18Z",
        "body": "Update for Chart.js 3.x: legend options have been placed inside \"plugins\"\r\n\r\n```javascript\r\noptions: {\r\n  plugins: {\r\n    legend: {\r\n      labels: {\r\n        filter: (legendItem, chartData) => {\r\n          return // true or false;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```"
      }
    ]
  },
  {
    "number": 3171,
    "title": "how to change datasets and scaleLabel name together and then update the chart?",
    "created_at": "2016-08-20T00:07:06Z",
    "closed_at": "2016-09-17T02:34:13Z",
    "labels": [
      "type: enhancement",
      "help wanted"
    ],
    "url": "https://github.com/chartjs/Chart.js/issues/3171",
    "body": "i can change the datasets and then update the chart, but i also need to change the name of the xaxes with the same change. is this possible? if yes how? or what else do i have to do to change the datasets and the xaxes labelString together?\n",
    "comments_url": "https://api.github.com/repos/chartjs/Chart.js/issues/3171/comments",
    "author": "olisch",
    "comments": [
      {
        "user": "etimberg",
        "created_at": "2016-08-22T01:20:03Z",
        "body": "@olisch this is possible but its not ideal. You'd need to lookup the scale in the `chartInstance.scales` map then change the correct stuff in the `options` object on the scale \n"
      },
      {
        "user": "olisch",
        "created_at": "2016-08-28T15:30:04Z",
        "body": "i know its not ideal, but the label just changes from 'days' to 'months' (and back) with a checkbox and the yaxes stays the same.\nyour solution sounds good. but as i am not that much into javascript, maybe you can point me more detailled in the direction of finding the scale in the map? i managed to replace the datasets only changing this word is missing...\nthank you for your help!\n"
      },
      {
        "user": "etimberg",
        "created_at": "2016-09-17T02:34:13Z",
        "body": "Closing as duplicate of #2060 \n\nTo get the scales you can look at the `chartInstance.scales` object. The keys will be string IDs and the objects will be the scale itself. `scale.options` is where you make changes\n"
      }
    ]
  },
  {
    "number": 3165,
    "title": "tooltip is not destroyed chart update",
    "created_at": "2016-08-18T19:37:48Z",
    "closed_at": "2017-10-28T08:20:36Z",
    "labels": [
      "type: bug",
      "help wanted"
    ],
    "url": "https://github.com/chartjs/Chart.js/issues/3165",
    "body": "Hi,\nif tolltip is shown with any hover/tooltip mode and for some reason chart redrawn (for example, data change and update call) then tooltip for old data will be still on chart until mouse move even if there is no datapoints under cursor's x.\n",
    "comments_url": "https://api.github.com/repos/chartjs/Chart.js/issues/3165/comments",
    "author": "defme",
    "comments": [
      {
        "user": "etimberg",
        "created_at": "2016-08-22T01:04:59Z",
        "body": "Should be reasonably easy to clear the tooltip on update. I feel like this might cause issues for other users if they update on mousemove and want the tooltip to remain. This would need to be an opt in feature\n"
      },
      {
        "user": "SimonDevelop",
        "created_at": "2016-09-16T09:09:11Z",
        "body": "I have the same problem, I update my chart line with MyLine.update();\nBut don't old tooltip of datapoints.\n"
      },
      {
        "user": "Goury",
        "created_at": "2017-04-26T11:05:33Z",
        "body": "Is there any way to just update the tooltip?"
      }
    ]
  },
  {
    "number": 3125,
    "title": "[ Core ] Charts choke handling datasets with Infinity datapoints",
    "created_at": "2016-08-10T09:42:37Z",
    "closed_at": "2016-09-24T16:19:54Z",
    "labels": [
      "type: bug",
      "help wanted"
    ],
    "url": "https://github.com/chartjs/Chart.js/issues/3125",
    "body": "Chart.js does not seem to gracefully handle Infinity datapoints (chart partially renders, or not at all).\n\nIt should be quite trivial to update `Chart.scale.getRightValue` to return NaN when given Infinity, and thus skip those problematic data points.\n",
    "comments_url": "https://api.github.com/repos/chartjs/Chart.js/issues/3125/comments",
    "author": "MatthieuRivaud",
    "comments": [
      {
        "user": "etimberg",
        "created_at": "2016-08-10T11:37:52Z",
        "body": "I agree that we should support this. 👍 \n"
      },
      {
        "user": "MatthieuRivaud",
        "created_at": "2016-08-11T07:45:47Z",
        "body": "Oh my, I've been beaten to it. Thanks, @bcongdon !\n"
      }
    ]
  },
  {
    "number": 3102,
    "title": "Add \"reverse\" option to Legend Configuration in documentation.",
    "created_at": "2016-08-05T17:51:24Z",
    "closed_at": "2016-08-10T00:13:13Z",
    "labels": [
      "type: bug",
      "help wanted",
      "type: documentation"
    ],
    "url": "https://github.com/chartjs/Chart.js/issues/3102",
    "body": "The Legend Configuration supports a `reverse`option which will reverse the order of the legend labels, but this is not documented.\nExample: \n`legend: {\n                reverse: true,\n                position: 'right'\n            }\n`\n",
    "comments_url": "https://api.github.com/repos/chartjs/Chart.js/issues/3102/comments",
    "author": "AMP3D",
    "comments": [
      {
        "user": "raskam",
        "created_at": "2016-09-22T15:44:52Z",
        "body": "Hi, the reverse option is misplaced in the docs. It should be in the \"Legend Configuration\" instead of \"Legend Label Configuration\".\n"
      },
      {
        "user": "panzarino",
        "created_at": "2016-09-23T00:14:13Z",
        "body": "Fixed in 88c69f5f8c842052c27347ca1a0e7ef00a69402c\n"
      }
    ]
  },
  {
    "number": 3090,
    "title": "`chartjs-hidden-iframe` tab order/focus issue",
    "created_at": "2016-08-04T10:54:30Z",
    "closed_at": "2016-08-10T03:00:50Z",
    "labels": [
      "type: bug",
      "help wanted"
    ],
    "url": "https://github.com/chartjs/Chart.js/issues/3090",
    "body": "I have a bunch of charts on the same page, and each one has a `chartjs-hidden-iframe` that takes focus when tabbing through the page. This breaks the tab order and is bad for accessibility.\n\nI'm running Chart.js v2.1.0\n",
    "comments_url": "https://api.github.com/repos/chartjs/Chart.js/issues/3090/comments",
    "author": "leetskills",
    "comments": [
      {
        "user": "etimberg",
        "created_at": "2016-08-04T10:57:25Z",
        "body": "I think we can simply add `tabIndex=\"-1\"` to the iframe when added\n"
      },
      {
        "user": "kapil959",
        "created_at": "2022-05-30T10:09:49Z",
        "body": "how to add tabindex attribute? Iframe is hidden"
      }
    ]
  },
  {
    "number": 2992,
    "title": "Having different colored labels",
    "created_at": "2016-07-19T03:34:48Z",
    "closed_at": "2016-09-17T01:55:25Z",
    "labels": [
      "type: enhancement",
      "help wanted"
    ],
    "url": "https://github.com/chartjs/Chart.js/issues/2992",
    "body": "My x-axis labels are a series of dates. I want to show weekends in a different color than weekdays, is this possible?\n",
    "comments_url": "https://api.github.com/repos/chartjs/Chart.js/issues/2992/comments",
    "author": "nishantroy",
    "comments": [
      {
        "user": "etimberg",
        "created_at": "2016-07-19T14:00:42Z",
        "body": "At the moment only the grid lines can be configured with an array of properties. We'd need to modify the core scale to support an array of tick font colors.\n"
      },
      {
        "user": "etimberg",
        "created_at": "2016-09-17T01:55:25Z",
        "body": "Closing as duplicate of #2442 \n"
      }
    ]
  },
  {
    "number": 2978,
    "title": "Chart.defaults.global.elements.rectange",
    "created_at": "2016-07-15T12:53:23Z",
    "closed_at": "2016-07-19T20:41:16Z",
    "labels": [
      "type: bug",
      "status: duplicate",
      "help wanted",
      "type: documentation"
    ],
    "url": "https://github.com/chartjs/Chart.js/issues/2978",
    "body": "There is a typo... \nIn the documentation, in the section : Chart Configuration -> Colors\n\n---\n\nRectangle Configuration\n\nRectangle elements are used to represent the bars in a bar chart. The global rectangle options are stored in Chart.defaults.global.elements.rectange.\n\n---\n\nI did cut and paste this and I got error. I then saw the missing \"l\" in rectangle.\n\nThanks\n",
    "comments_url": "https://api.github.com/repos/chartjs/Chart.js/issues/2978/comments",
    "author": "MarioGravel",
    "comments": [
      {
        "user": "theawesomenayak",
        "created_at": "2016-07-17T11:34:34Z",
        "body": "This already seems to be fixed in the code `01-Chart-Configuration.md`.\n\nMaybe the site needs to merge this documentation. @nnnick \n"
      },
      {
        "user": "panzarino",
        "created_at": "2016-07-19T20:41:16Z",
        "body": "This change has been performed and the docs are being deployed very soon.\n"
      }
    ]
  },
  {
    "number": 2944,
    "title": "Get the point coordinates in custom tooltip function",
    "created_at": "2016-07-08T17:57:09Z",
    "closed_at": "2016-10-19T11:31:01Z",
    "labels": [
      "type: enhancement",
      "help wanted"
    ],
    "url": "https://github.com/chartjs/Chart.js/issues/2944",
    "body": "When we use the custom tooltip function, we get x and y coordinates calculated given the the height and the width of the built-in tooltip system. Would it be possible to get the points x/y coordinates in the graph in order to be able to display easily a really custom tooltip?\n\nFor instance, I want mine to display always at the top of the point. Having coordinates calculated for the tooltip to be on the left is annoying and makes it pretty much impossible to calc the point position.\n\nThanks\n",
    "comments_url": "https://api.github.com/repos/chartjs/Chart.js/issues/2944/comments",
    "author": "julienfouilhe",
    "comments": [
      {
        "user": "etimberg",
        "created_at": "2016-07-08T18:29:22Z",
        "body": "I don't think this is too hard to add. I'd be happy to look at a PR for it.\n"
      },
      {
        "user": "alexchizhovcom",
        "created_at": "2016-07-12T12:13:59Z",
        "body": ":+1: Yes, it would be really great to have such an option, because its a pain to position custom tooltips :)\n"
      },
      {
        "user": "capgunmedia",
        "created_at": "2016-07-12T12:46:15Z",
        "body": "Relative is better. I think that's what you are asking. You also have to consider where the chart is, to populate the tool tip at one point. I always try to get tooltips to be relative to the viewport. If you restrict it to show up at the top, you may run into issues when that chart is aligned to the top of the viewport. Then relative to eachother, so they don't bump into eachother, when mousing over data that is side-by-side. Lots of math. :) \n"
      },
      {
        "user": "etimberg",
        "created_at": "2016-10-19T11:31:01Z",
        "body": "Fixed in #3472 see the new `caretX` and `caretY` properties\n"
      }
    ]
  },
  {
    "number": 2904,
    "title": "Enhancement: Native support for events",
    "created_at": "2016-07-04T04:12:07Z",
    "closed_at": "2016-12-30T22:09:12Z",
    "labels": [
      "type: enhancement",
      "help wanted"
    ],
    "url": "https://github.com/chartjs/Chart.js/issues/2904",
    "body": "Currently the only supported events are:\nChart:  Hover and click\nLegend: Click\n\nIt would be great to have native support for:\nChart:  mouseout\nLegend:  mouseout, hover\n\nThis should cover 90% of the most common interactions without 'out of the box' hacks.\nThank you so much for your great job guys.\n",
    "comments_url": "https://api.github.com/repos/chartjs/Chart.js/issues/2904/comments",
    "author": "Zeioth",
    "comments": [
      {
        "user": "etimberg",
        "created_at": "2016-07-04T13:40:35Z",
        "body": "Tied in with #2903 \n\nIf someone wants to implement this, please ping one of the maintainers to discuss design first. \n"
      },
      {
        "user": "etimberg",
        "created_at": "2016-12-30T22:09:12Z",
        "body": "Now that #3718 was merged, it is possible to write a plugin that handles events of any type. This makes it possible to do this."
      }
    ]
  },
  {
    "number": 2807,
    "title": "Canvas fallback",
    "created_at": "2016-06-19T03:47:20Z",
    "closed_at": "2016-10-16T13:25:29Z",
    "labels": [
      "type: bug",
      "help wanted"
    ],
    "url": "https://github.com/chartjs/Chart.js/issues/2807",
    "body": "If someone doesn't have canvas enabled there is JavaScript errors which can cause other working scripts not to work.  With the rise of canvas blocking it would be nice if chart Js had some fallback or even a way to alert the user canvas is disabled.  The reason canvas blocking is increasing is because it can be fingerprinted by browsers and is a privacy issue for some users.  Thanks for the great library and hope you can consider.\n",
    "comments_url": "https://api.github.com/repos/chartjs/Chart.js/issues/2807/comments",
    "author": "yonatoshi",
    "comments": [
      {
        "user": "etimberg",
        "created_at": "2016-06-28T02:22:44Z",
        "body": "I agree that we should gracefully handle this condition. I am happy to merge a PR that prevents a crash when the canvas does not exist.\n"
      },
      {
        "user": "simonbrunel",
        "created_at": "2016-10-15T18:57:52Z",
        "body": "@yonatoshi old post, but can you give more details about the JS errors and the way to disable canvas? what kind of fallback / alert are you thinking of?\n"
      },
      {
        "user": "etimberg",
        "created_at": "2016-10-16T13:25:29Z",
        "body": "Fixed in #3474\n"
      }
    ]
  },
  {
    "number": 2690,
    "title": "Option to make legend not visible if value is 0",
    "created_at": "2016-06-02T09:34:30Z",
    "closed_at": "2016-12-03T14:35:15Z",
    "labels": [
      "type: enhancement",
      "help wanted"
    ],
    "url": "https://github.com/chartjs/Chart.js/issues/2690",
    "body": "Is there a way for an option in the legend to make the label hidden if the value is not there or the value is 0? \n",
    "comments_url": "https://api.github.com/repos/chartjs/Chart.js/issues/2690/comments",
    "author": "the133448",
    "comments": [
      {
        "user": "etimberg",
        "created_at": "2016-06-02T13:32:17Z",
        "body": "this is not currently possible. tagging as an enhancement\n"
      },
      {
        "user": "etimberg",
        "created_at": "2016-12-03T14:35:15Z",
        "body": "This can be done using the filter option introduced in v2.4.\r\n\r\n```javascript\r\noptions: {\r\n  legend: {\r\n    labels: {\r\n      filter: function(legendItem, chartData) {\r\n        // if no data for this dataset, do not show the legend item.\r\n        return chartData[legendItem.datasetIndex].data.length;\r\n      }\r\n    }\r\n  }\r\n}\r\n```"
      }
    ]
  },
  {
    "number": 2526,
    "title": "destroy() not defined if config isn't given to Chart on construction",
    "created_at": "2016-05-12T09:44:18Z",
    "closed_at": "2016-06-23T01:46:07Z",
    "labels": [
      "type: bug",
      "help wanted"
    ],
    "url": "https://github.com/chartjs/Chart.js/issues/2526",
    "body": "I have discovered that the destroy() method of the Chart object isn't being added to the object prototype if the second \"config\" parameter to the Chart constructor isn't defined. While the documentation indeed doesn't indicate that the config parameter is optional, the library also doesn't otherwise obviously fail when you don't pass it--you just can't invoke destroy(). My workaround is to pass this minimal config object:\n\n```\n{\n    data:\n    {\n        datasets: []\n    }\n}\n```\n\nI believe the fact that a controller is never hooked up if config isn't passed is the root cause:\n\n```\nif (config) {\n    this.controller = new Chart.Controller(this);\n}\n```\n",
    "comments_url": "https://api.github.com/repos/chartjs/Chart.js/issues/2526/comments",
    "author": "sknick",
    "comments": [
      {
        "user": "etimberg",
        "created_at": "2016-05-12T23:01:50Z",
        "body": "@sknick I was thinking more about this. I believe that the reason for not going further if there is a config is that you won't know what type of chart to create. Maybe we can bail out earlier in this case and not do anything\n"
      },
      {
        "user": "sknick",
        "created_at": "2016-05-13T03:43:42Z",
        "body": "Ya, either bail or assume a default. I think \"bar\" is normally inferred by default when a config is given without a type, right? You could use that as a default.\n"
      }
    ]
  },
  {
    "number": 2483,
    "title": "Chart should have a reference to itself.",
    "created_at": "2016-05-07T05:58:32Z",
    "closed_at": "2016-06-03T00:25:53Z",
    "labels": [
      "type: enhancement",
      "help wanted"
    ],
    "url": "https://github.com/chartjs/Chart.js/issues/2483",
    "body": "When using `CommonJS` with ES6 modules syntax (Babel, TypeScript...) there is limited support for `import` statements.\n\nIt is only possible to load a reference to the `Chart` object as a whole:\n\n```\nimport * as Charts from 'chart.js';\n```\n\nThis is also possible:\n\n```\nimport {Controller, Element, Scale} from 'chart.js';\n```\n\nBut it will not allow to get a reference to `Charts` itself.\n\nIn order to get this possible:\n\n```\nimport {Chart, Controller, Element, Scale} from 'chart.js';\n```\n\n`Chart` should reference itself, so `Chart.Chart === Chart`\n\nin **core.js**, something like this:\n\n```\n\"use strict\";\n\nmodule.exports = function() {\n\n    //Occupy the global variable of Chart, and create a simple base class\n    var Chart = function(context, config) { /* ... */ }\n\n        Chart.Chart = Chart;\n    return Chart;\n};\n```\n",
    "comments_url": "https://api.github.com/repos/chartjs/Chart.js/issues/2483/comments",
    "author": "shlomiassaf",
    "comments": [
      {
        "user": "etimberg",
        "created_at": "2016-05-07T12:26:13Z",
        "body": "@shlomiassaf i'd be happy to merge a PR for this\n"
      }
    ]
  },
  {
    "number": 2481,
    "title": "[question] Chart returning Controller",
    "created_at": "2016-05-07T02:50:07Z",
    "closed_at": "2017-02-10T23:37:57Z",
    "labels": [
      "type: bug",
      "help wanted",
      "type: documentation"
    ],
    "url": "https://github.com/chartjs/Chart.js/issues/2481",
    "body": "Hi,\n\nWhat is the reason behind a `Chart` instantiation returning a `Controller` instance?\n\n```\nvar chartInstance = new Chart(...);\nchartInstance instanceof Chart.Controller === true\nchartInstance instanceof Chart === false\n```\n\nSince `Chart` has reference to it's controller (`chartInstance.controller`) I don't understand the logic behind it.\n\nThis was very confusing...\n",
    "comments_url": "https://api.github.com/repos/chartjs/Chart.js/issues/2481/comments",
    "author": "shlomiassaf",
    "comments": [
      {
        "user": "etimberg",
        "created_at": "2016-05-07T13:15:37Z",
        "body": "I agree this is confusing. It also makes detecting if an object is a chart instance harder. At a minimum we should document this but ideally we'd improve it.\n"
      },
      {
        "user": "shlomiassaf",
        "created_at": "2016-05-07T13:36:04Z",
        "body": "I assume changing it is a big thing because it will introduce breaking API change, what about setting a static Boolean value on the **Chart** class telling it to return the chart instance instead of the controller?\n\nThis is an opt-in method that will not break anything.\n"
      },
      {
        "user": "etimberg",
        "created_at": "2016-05-07T13:38:12Z",
        "body": "it would definitely break the API. It'd also increase the code size if proxied requests through to the controller. I'm ok with having something opt-in if it's going to be useful for a lot of users\n"
      }
    ]
  },
  {
    "number": 2431,
    "title": "Docs for adding mixed charts - Line and Bar",
    "created_at": "2016-05-02T11:32:18Z",
    "closed_at": "2016-08-10T00:13:13Z",
    "labels": [
      "type: bug",
      "help wanted",
      "type: documentation"
    ],
    "url": "https://github.com/chartjs/Chart.js/issues/2431",
    "body": "I'm unable to find out the docs in version 2 of Charts.js. \nAny idea how to go about adding mixed charts ?  ( A line and bar graph in the same chart)\n",
    "comments_url": "https://api.github.com/repos/chartjs/Chart.js/issues/2431/comments",
    "author": "thelostone-mc",
    "comments": [
      {
        "user": "etimberg",
        "created_at": "2016-05-02T11:56:11Z",
        "body": "@adityaanandmc you would do the following:\n\n``` javascript\nvar chartInstance = new Chart(ctx, {\n  data: {\n    datasets: [{\n      // Makes this dataset bars\n      type: 'bar',\n      data: []\n    }, {\n      // Makes this dataset a line\n      type: 'line'\n    }]\n  }\n});\n```\n"
      },
      {
        "user": "thelostone-mc",
        "created_at": "2016-05-03T18:36:08Z",
        "body": "@etimberg  That didn't seem to work for me!! -  It didn't display the bar graph, just the line graph\nThis instead did work : \n\n```\nvar chartInstance = new Chart(ctx, {\n  type: 'bar', // Setting this as the default\n  data: {\n    datasets: [{\n      // Makes this dataset bars by default\n      data: []\n    }, {\n      // Makes this dataset a line\n      type: 'line'\n    }]\n  }\n});\n```\n"
      }
    ]
  },
  {
    "number": 2417,
    "title": "Tooltip misplaced when we have both a line and a bar chart and line value is lower",
    "created_at": "2016-04-29T12:30:20Z",
    "closed_at": "2016-09-24T17:00:41Z",
    "labels": [
      "type: bug",
      "help wanted"
    ],
    "url": "https://github.com/chartjs/Chart.js/issues/2417",
    "body": "When we have a line and a bar chart in the same canvas, the tooltips are misplaced if the value of the line chart is lower than the value of the bar chart for an specific point.\n\nObs: If I click the chart legend to hide the bar chart so that it only displays the line, the problem disappears and the tooltips are placed in the right place.\n\nHere is the dataset I am using for this chart:\n\n```\nvar ChartData = {\n    labels: [\"First Goal\", \"Second Goal\", \"Third Goal\"],\n    datasets: [{\n        type: 'line',\n        label: 'Target',\n        data: [10, 20, 30],\n        backgroundColor: 'rgb(255, 0, 0)',\n        fill:false,\n        borderWidth: 2,\n        borderColor: 'rgb(255, 0, 0)',\n        radius:5,\n    pointHoverRadius: 5,\n        tension: 0\n     }, {\n        hidden: true,\n        type: 'bar',\n        label: 'Previous Month',\n        backgroundColor: \"rgba(127,255,127,0.5)\",\n        borderWidth: 0,\n        data: [9, 21, 31]\n    }, {\n        type: 'bar',\n        label: 'Current Month',\n        backgroundColor: \"rgba(0,153,0,1)\",\n        data: [20, 40, 15]\n    }]\n};\n```\n",
    "comments_url": "https://api.github.com/repos/chartjs/Chart.js/issues/2417/comments",
    "author": "caioaugustofr",
    "comments": [
      {
        "user": "etimberg",
        "created_at": "2016-04-29T12:48:32Z",
        "body": "Is this a duplicate of #2056?\n"
      },
      {
        "user": "etimberg",
        "created_at": "2016-09-24T17:00:41Z",
        "body": "I believe this is a duplicate of 2056 so I am closing in favour of the older issue\n"
      }
    ]
  },
  {
    "number": 2405,
    "title": "Bar chart with lines z-index issue",
    "created_at": "2016-04-28T13:26:48Z",
    "closed_at": "2016-04-28T14:19:02Z",
    "labels": [
      "type: bug",
      "status: duplicate",
      "help wanted"
    ],
    "url": "https://github.com/chartjs/Chart.js/issues/2405",
    "body": "Currently, the lines are hidden behind the bars. Is there a way to bring the lines to the front so I can hover the datapoints?\n",
    "comments_url": "https://api.github.com/repos/chartjs/Chart.js/issues/2405/comments",
    "author": "sergonius",
    "comments": [
      {
        "user": "etimberg",
        "created_at": "2016-04-28T14:19:02Z",
        "body": "Duplicate of #2399 \n"
      }
    ]
  },
  {
    "number": 2362,
    "title": "Multi-chart / multi-axis docs",
    "created_at": "2016-04-25T18:03:21Z",
    "closed_at": "2017-03-21T10:44:50Z",
    "labels": [
      "help wanted",
      "type: documentation"
    ],
    "url": "https://github.com/chartjs/Chart.js/issues/2362",
    "body": "We have samples for some multi-type / multi-axis charts, but we should add those to the main docs page.\n",
    "comments_url": "https://api.github.com/repos/chartjs/Chart.js/issues/2362/comments",
    "author": "derekperkins",
    "comments": [
      {
        "user": "etimberg",
        "created_at": "2017-03-21T10:44:50Z",
        "body": "Fixed in #3751"
      }
    ]
  },
  {
    "number": 2361,
    "title": "Bubblechart Docs",
    "created_at": "2016-04-25T18:00:54Z",
    "closed_at": "2016-05-19T01:18:18Z",
    "labels": [
      "help wanted",
      "type: documentation",
      "status: implement externally"
    ],
    "url": "https://github.com/chartjs/Chart.js/issues/2361",
    "body": "Add Bubblechart docs to the main site. There's already a sample, but no docs.\n",
    "comments_url": "https://api.github.com/repos/chartjs/Chart.js/issues/2361/comments",
    "author": "derekperkins",
    "comments": [
      {
        "user": "etimberg",
        "created_at": "2016-05-19T01:18:18Z",
        "body": "Done in #2594 \n"
      },
      {
        "user": "Spone",
        "created_at": "2016-05-26T18:04:16Z",
        "body": "Can you please update the website, now that the Bubblechart docs are merged?\n"
      }
    ]
  },
  {
    "number": 2325,
    "title": "Update documentation about extending chart types",
    "created_at": "2016-04-22T13:46:45Z",
    "closed_at": "2017-03-21T10:44:54Z",
    "labels": [
      "help wanted",
      "type: documentation"
    ],
    "url": "https://github.com/chartjs/Chart.js/issues/2325",
    "body": "This needs to be clearer. See #2321 for some idea what needs to be fixed. We should clarify how to create new types from existing types and how to modify existing types.\n",
    "comments_url": "https://api.github.com/repos/chartjs/Chart.js/issues/2325/comments",
    "author": "etimberg",
    "comments": [
      {
        "user": "JSoon",
        "created_at": "2016-04-26T02:47:09Z",
        "body": "Hey, friend, does v2 doc being completed? Cause i couldn't find the link in repository these days.\n"
      },
      {
        "user": "etimberg",
        "created_at": "2016-04-26T03:07:23Z",
        "body": "@JSoon the docs are better but not yet done. The doc files in the 'docs' folder are the most up-to-date at the moment \n"
      },
      {
        "user": "etimberg",
        "created_at": "2017-03-21T10:44:54Z",
        "body": "Fixed in #3751"
      }
    ]
  },
  {
    "number": 2136,
    "title": "Line Chart - hoverBorderColor possible?",
    "created_at": "2016-03-15T08:03:17Z",
    "closed_at": "2019-10-25T17:22:38Z",
    "labels": [
      "type: enhancement",
      "help wanted"
    ],
    "url": "https://github.com/chartjs/Chart.js/issues/2136",
    "body": "I noticed the bar chart has an option for `hoverBorderColor`, I was wondering if such a thing is possible for Line Charts as well?\n",
    "comments_url": "https://api.github.com/repos/chartjs/Chart.js/issues/2136/comments",
    "author": "alancwoo",
    "comments": [
      {
        "user": "etimberg",
        "created_at": "2016-03-15T13:31:40Z",
        "body": "@alancwoo  `pointHoverBorderColor` will change the hover color for points\n"
      },
      {
        "user": "alancwoo",
        "created_at": "2016-03-15T15:42:24Z",
        "body": "@etimberg I'm sorry I think my phrasing wasn't clear, I was wondering if the line itself could be changed on hover through an option, such that one could have a subdued line, and then when hovering over a point the whole line could change\n"
      },
      {
        "user": "etimberg",
        "created_at": "2016-03-15T16:42:25Z",
        "body": "Oh, sorry. I misunderstood. Currently we don't have that functionality.\n"
      },
      {
        "user": "mpj",
        "created_at": "2016-07-23T14:29:11Z",
        "body": "This would be really cool, I tried for ages to get it to work as the line graph was the first thing I played around with in the library. ;)\n"
      }
    ]
  },
  {
    "number": 2060,
    "title": "Will it ever be possible for the update function to update the options of the chart as well?",
    "created_at": "2016-02-26T09:30:24Z",
    "closed_at": "2016-11-25T12:20:00Z",
    "labels": [
      "type: enhancement",
      "help wanted"
    ],
    "url": "https://github.com/chartjs/Chart.js/issues/2060",
    "body": "Hi, \n\ni'm looking to switch between a regular bar chart and a stacked bar chart on the fly. At the moment this is only possible by destroying and re-creating the chart but this causes a flicker when doing so (as the chart is essentially being removed and put back onto the web page). I thought it would be much more efficient to be able to update the options seeing as we are only looking to toggle stacked and the title of the chart. Just wondering if this will ever be possible?\n\nThanks\n",
    "comments_url": "https://api.github.com/repos/chartjs/Chart.js/issues/2060/comments",
    "author": "dibsyjr1",
    "comments": [
      {
        "user": "etimberg",
        "created_at": "2016-02-26T14:10:55Z",
        "body": "@dibsyjr1 this is not currently supported in either version 1 or version 2. It should be possible, the most annoying thing would be the performance decrease caused by re-merging the config with the global config. \n"
      },
      {
        "user": "dibsyjr1",
        "created_at": "2016-02-26T14:47:25Z",
        "body": "Hi, thanks for the reply. \n\nI understand that it would cause a performance decrease. Was just thinking you could have a prototype method (hardUpdate for example) that people can choose to call as an alternative to the update function, which would as a result update the entire chart, including options. Kind of like how when update is called, render is subsequently called, but instead it'd be hardUpdate, calling update which in turn calls render (so hardUpdate would only contain the required code to update the options). Just so the functionality is there if someone were to require it without forcing the performance decrease on everyone who wanted to call update.\n\nThanks again :)\n"
      },
      {
        "user": "etimberg",
        "created_at": "2016-02-26T15:41:20Z",
        "body": "Yup, I think we can provide this functionality though it won't make the 2.0.0 release\n"
      },
      {
        "user": "dibsyjr1",
        "created_at": "2016-02-26T16:39:52Z",
        "body": "Okay that's cool, thanks very much\n"
      },
      {
        "user": "pavlus",
        "created_at": "2016-03-08T01:23:34Z",
        "body": "Why not just add another function for this? And don't use update() as God-function, but divide it by steps, or even remove it leaving something like updateConfig(), updateData() and render().\n"
      }
    ]
  },
  {
    "number": 1012,
    "title": "Offset angle radar chart",
    "created_at": "2015-03-20T17:08:33Z",
    "closed_at": "2016-07-19T02:26:07Z",
    "labels": [
      "type: enhancement",
      "help wanted"
    ],
    "url": "https://github.com/chartjs/Chart.js/issues/1012",
    "body": "Is it possible to give an offset angle for a radar chart, so that the first axis would not start at the top?\n",
    "comments_url": "https://api.github.com/repos/chartjs/Chart.js/issues/1012/comments",
    "author": "maikelbosschaert",
    "comments": [
      {
        "user": "etimberg",
        "created_at": "2015-12-25T02:21:28Z",
        "body": "This is not currently possible in v1.\nIn v2, this is easy to expose, as we can simply refactor the scale to take a start angle when generating point positions. As a result, targeting for v2.1\n"
      },
      {
        "user": "etimberg",
        "created_at": "2016-07-19T02:26:05Z",
        "body": "Done in #2984 \n"
      }
    ]
  },
  {
    "number": 882,
    "title": "width and height should allow percentages",
    "created_at": "2015-01-22T14:29:54Z",
    "closed_at": "2016-10-29T17:33:06Z",
    "labels": [
      "type: enhancement",
      "help wanted"
    ],
    "url": "https://github.com/chartjs/Chart.js/issues/882",
    "body": "Specifying a size physically doesn't allow for responsive design. Chart.js takes a value of 100% and turns it into px. It should instead take the width of the enclosing container and use that width.\n",
    "comments_url": "https://api.github.com/repos/chartjs/Chart.js/issues/882/comments",
    "author": "mschipperheyn",
    "comments": [
      {
        "user": "josx",
        "created_at": "2015-01-26T16:58:40Z",
        "body": "love this feature! Please!\n"
      },
      {
        "user": "bryceadams",
        "created_at": "2015-02-01T15:48:32Z",
        "body": "@mschipperheyn could also just style the canvas element after with `canvas { width: 100% !important; }`\n"
      },
      {
        "user": "etimberg",
        "created_at": "2015-12-24T23:22:01Z",
        "body": "Good work around from @bryceadams \nVersion 2 has better resizing that will resize the chart whenever the canvas container resizes.\n"
      },
      {
        "user": "simonbrunel",
        "created_at": "2016-10-02T19:14:04Z",
        "body": "@etimberg is this issue still valid in v2.4?\n"
      },
      {
        "user": "etimberg",
        "created_at": "2016-10-02T22:10:53Z",
        "body": "I think this will be addressed in v2.4 with the new resizing \n"
      },
      {
        "user": "simonbrunel",
        "created_at": "2016-10-29T17:33:06Z",
        "body": "The reported scenario is possible in v2 and should be stable in v2.4. When `responsive: true` the chart will fill the width of the parent container **whatever the initial width/height value**. If the canvas style defines `width: 50%`, that will be ignored and I don't think Chart.js will implement that soon though (too tricky to support all relative units, i.e. `%`, `em`, `vw`, etc.). Instead, you should wrap the chart in a container and let the layout engine do the job:\n\n``` javascript\n<div class=\"chart-wrapper\" style=\"height: 25vh; width: 50%\">\n    <canvas id=\"chart\"></canvas> //< `options: { responsive: true, maintainAspectRatio: false }`\n</div>\n```\n"
      }
    ]
  }
]