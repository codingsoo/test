[
  {
    "number": 2110,
    "title": "remove server ( node and express) from the boilerplate ",
    "created_at": "2018-01-17T17:08:00Z",
    "closed_at": "2018-01-17T22:42:12Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/react-boilerplate/react-boilerplate/issues/2110",
    "body": "how to remove server part  from the boilerplate without  braking the client side part?\r\ni just  wanting to remove the node-express part from the boilerplate",
    "comments_url": "https://api.github.com/repos/react-boilerplate/react-boilerplate/issues/2110/comments",
    "author": "naiduprakash",
    "comments": [
      {
        "user": "vineyardbovines",
        "created_at": "2018-01-17T22:42:12Z",
        "body": "Looks like this is a general question and not an issue. Please post questions to StackOverflow"
      },
      {
        "user": "lock[bot]",
        "created_at": "2018-05-29T03:18:47Z",
        "body": "This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.\n"
      }
    ]
  },
  {
    "number": 1617,
    "title": "How to create react website that use browser loading for page change instead of ajax.",
    "created_at": "2017-02-27T12:58:50Z",
    "closed_at": "2017-03-29T11:43:05Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/react-boilerplate/react-boilerplate/issues/1617",
    "body": "I am using __react__ for a while and it's perfect when it comes to create web application.\r\n\r\nWeb application use javacript routing and using webpack 2.0, it is very conveniant to download your application by small chuncks on page change.\r\n\r\n\r\nI wan't to reuse my react components to create a static web site, but I need to have the visual effect of a old school page reload.\r\n\r\nI have configured my __express__ server to delegate the routing to my application. I am using `react-router` for routing, but I have now replaced every `<Link>` into `<A>` in order to get the backend page load style.\r\n\r\nI have now a 2second  blank page for every page change, this is due to the time the application need for loading.\r\n\r\n- Is it possible to get a old school style page load using react ?\r\n- What would be the appropriate approach ?\r\n- I know we can achieve server side rendering, how hard would it be to change this on an existing application ?\r\n- Is there another way I haven't think about ?",
    "comments_url": "https://api.github.com/repos/react-boilerplate/react-boilerplate/issues/1617/comments",
    "author": "kopax",
    "comments": [
      {
        "user": "samit4me",
        "created_at": "2017-03-01T11:37:34Z",
        "body": "Not sure I understand what you are wanting or asking for! From what I can gather you want to achieve an **old school page reload** effect on each route change. If so, what do you actually mean by that?\r\n\r\nFor me that means, you click a link, you get navigated to a new page and everything is white until all assets are loaded, kinda like what you were describing. The only difference being that a classic HTML site might have smaller assets and will probably load faster. I am really struggling to think of a reason why you would want this or if you wanted a classic website, why choose react for NON Single Page Apps."
      },
      {
        "user": "mihir0x69",
        "created_at": "2017-03-29T11:43:04Z",
        "body": "Closing since the issue has become stale. Feel free to reopen."
      },
      {
        "user": "lock[bot]",
        "created_at": "2018-05-29T15:57:00Z",
        "body": "This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.\n"
      }
    ]
  },
  {
    "number": 1423,
    "title": "Trouble with images being saved to filesystem when ran via docker-compose",
    "created_at": "2017-01-09T14:57:13Z",
    "closed_at": "2017-01-21T14:41:03Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/react-boilerplate/react-boilerplate/issues/1423",
    "body": "The following piece of code (I checked, if this piece of code is not in the project, those 4 images are not saved):\r\n\r\n    import LogoImage from './images/logo.png';\r\n\r\nSaves 4 logo images to the root of my filesystem (filenames as random guid, no file extension), only when the client is ran via docker-compose:\r\n\r\n    client:\r\n        image: node\r\n        command: bash -c \"cd src && npm start\"\r\n        volumes:\r\n            - ../frontend:/src\r\n        ports:\r\n            - \"3000:3000\"\r\n\r\nWhen I run it locally via npm start, nothing is saved.\r\n\r\nIs there any possibility this is connected to the way this boilerplate is written or should I be going elsewhere with this issue?\r\n\r\nUpdate:\r\n\r\nTraced it all the way down to webpack config:\r\n\r\n```\r\n      test: /\\.(jpg|png|gif)$/,\r\n      loaders: [\r\n        'file-loader',\r\n        'image-webpack?{progressive:true, optimizationLevel: 7, interlaced: false, pngquant:{quality: \"65-90\", speed: 4}}',\r\n      ],\r\n```\r\n\r\nNamely, the image-webpack part.",
    "comments_url": "https://api.github.com/repos/react-boilerplate/react-boilerplate/issues/1423/comments",
    "author": "xtrinch",
    "comments": [
      {
        "user": "mxstbr",
        "created_at": "2017-01-21T14:41:03Z",
        "body": "Glad you figured it out!"
      },
      {
        "user": "lock[bot]",
        "created_at": "2018-05-29T20:05:28Z",
        "body": "This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.\n"
      }
    ]
  },
  {
    "number": 1382,
    "title": "Debug karma tests in WebStorm",
    "created_at": "2016-12-25T10:35:22Z",
    "closed_at": "2017-01-22T08:00:44Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/react-boilerplate/react-boilerplate/issues/1382",
    "body": "Hi\r\n\r\nIs anybody was successful to debug karma tests in WebStorm?\r\n\r\nI successfully run karma tests in WebStorm but breakpoints do not work in usual way. I mean debug which is described in docs/general/faq.md",
    "comments_url": "https://api.github.com/repos/react-boilerplate/react-boilerplate/issues/1382/comments",
    "author": "wer32",
    "comments": [
      {
        "user": "gihrig",
        "created_at": "2017-01-22T08:00:44Z",
        "body": "As the project has moved on beyond Karma/Mocha, and due to lack of interest. I'm closing this, but fee free to contribute if you have anything to offer."
      },
      {
        "user": "lock[bot]",
        "created_at": "2018-05-29T19:06:04Z",
        "body": "This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.\n"
      }
    ]
  },
  {
    "number": 1372,
    "title": "How to create npm package with component created with react-boilerplate",
    "created_at": "2016-12-21T10:34:02Z",
    "closed_at": "2017-01-24T10:24:49Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/react-boilerplate/react-boilerplate/issues/1372",
    "body": "I have worked on a bootstrap 4 library all made in styled components.\r\n\r\nI used the react-boilerplate 3.3.3 for that.\r\n\r\nI want to create a npm package to share this work and I  am now wondering because I am not yet familiar with all the webpack thing.\r\n\r\nWhat is the build step to create a npm package in order to share components made with react-boilerplate ?\r\n\r\nI know I will have some JS components files to import, does theses files needs to be compiled in ES5 right?",
    "comments_url": "https://api.github.com/repos/react-boilerplate/react-boilerplate/issues/1372/comments",
    "author": "kopax",
    "comments": [
      {
        "user": "HommeSauvage",
        "created_at": "2016-12-21T12:12:42Z",
        "body": "Some vendors don't compile and leave it for the implementor to do it, just like in #1370. This may allow some packagers to do tree shaking (in your case, it's bootstrap and it definitely needs this). But you can compile it too for the convenience of some developers.\r\n\r\nThanks for your work btw."
      },
      {
        "user": "kopax",
        "created_at": "2016-12-21T12:33:02Z",
        "body": "You're welcome :)\r\n\r\nSo I just reuse the webpack config from the boilerplate ? Does anyone as a sample for starting ?\r\n\r\nWould be super nice to have a tutorial to start sharing component out of the box."
      },
      {
        "user": "mihir0x69",
        "created_at": "2017-01-24T10:24:49Z",
        "body": "Feel free to reopen. Closing for now due to inactivity."
      },
      {
        "user": "lock[bot]",
        "created_at": "2018-05-29T19:05:54Z",
        "body": "This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.\n"
      }
    ]
  },
  {
    "number": 1359,
    "title": "[Discussion] Where do you recommend for the purposes of rendering performance",
    "created_at": "2016-12-16T19:43:45Z",
    "closed_at": "2016-12-17T14:59:06Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/react-boilerplate/react-boilerplate/issues/1359",
    "body": "Where do you recommend for the purposes of rendering performance\r\nA or B\r\nor both together for good performance\r\n\r\n```javascript\r\n// CODE A\r\nexport class LoginPage extends React.Component { // eslint-disable-line react/prefer-stateless-function\r\n  render() {\r\n    const { loading } = this.props;\r\n    const LoginNode = (\r\n      <Choose>\r\n        <When condition={loading}>\r\n          <Spinner />\r\n        </When>\r\n        <Otherwise>\r\n          <LoginForm {...this.props} />\r\n        </Otherwise>\r\n      </Choose>\r\n    );\r\n    return (\r\n      <GridWrapper>\r\n        <h1>User Login</h1>\r\n        {LoginNode}\r\n      </GridWrapper>\r\n    );\r\n  }\r\n}\r\n```\r\n\r\n```javascript\r\n// CODE B\r\nexport class LoginPage extends React.Component { // eslint-disable-line react/prefer-stateless-function\r\n  render() {\r\n    const { loading } = this.props;\r\n\r\n    return (\r\n      <GridWrapper>\r\n        <h1>User Login</h1>\r\n        <Choose>\r\n          <When condition={loading}>\r\n            <Spinner />\r\n          </When>\r\n          <Otherwise>\r\n            <LoginForm {...this.props} />\r\n          </Otherwise>\r\n        </Choose>\r\n      </GridWrapper>\r\n    );\r\n  }\r\n}\r\n\r\n```",
    "comments_url": "https://api.github.com/repos/react-boilerplate/react-boilerplate/issues/1359/comments",
    "author": "zamrq",
    "comments": [
      {
        "user": "mxstbr",
        "created_at": "2016-12-17T14:59:06Z",
        "body": "I don't think there's a difference in terms of performance here, at least definitely not noticeable.\r\n\r\nPlease ask those kind of general questions on StackOverflow the next time, you'll get a faster answer and we maintainers can focus on making `react-boilerplate` great!"
      },
      {
        "user": "lock[bot]",
        "created_at": "2018-05-29T22:05:40Z",
        "body": "This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.\n"
      }
    ]
  },
  {
    "number": 1356,
    "title": "Unexpected token: operator (>) on npm run build react-boilerplate v3.3.3",
    "created_at": "2016-12-16T18:13:14Z",
    "closed_at": "2016-12-16T18:21:21Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/react-boilerplate/react-boilerplate/issues/1356",
    "body": "I have been trying to build my project for quite a while now with `npm run build`\r\n\r\npackage.json snippet\r\n```\r\n\"prebuild\": \"npm run build:clean && npm run test\",\r\n    \"build\": \"cross-env NODE_ENV=production webpack --config internals/webpack/webpack.prod.babel.js --color -p --progress\",\r\n```\r\n\r\nWhen I try building the tests completes successfully however I get an error at the end:\r\n\r\n> ERROR in 0.48ab22465dd601878235.chunk.js from UglifyJs\r\n> SyntaxError: Unexpected token: operator (>) [0.48ab22465dd601878235.chunk.js:25875,38]\r\n> \r\n> ERROR in 1.87da2a5099491e2a5c15.chunk.js from UglifyJs\r\n> SyntaxError: Unexpected token: operator (>) [1.87da2a5099491e2a5c15.chunk.js:25522,38]\r\n> \r\n> ERROR in 2.cb9f761fa70767cc99df.chunk.js from UglifyJs\r\n> SyntaxError: Unexpected token: operator (>) [2.cb9f761fa70767cc99df.chunk.js:9065,38]\r\n\r\nI suspect this is coming from a node module i'm using and this is the exact line it's throwing the error from the chunk js file:\r\n\r\n`exports.location = (config, callback)=> {...code-block}`\r\n\r\nmy webpack.(base/prod).babel.js files remains unchanged.\r\n\r\nAny ideas?\r\n\r\nThanks a lot!!!\r\n\r\n",
    "comments_url": "https://api.github.com/repos/react-boilerplate/react-boilerplate/issues/1356/comments",
    "author": "IpaliboWhyte",
    "comments": [
      {
        "user": "mxstbr",
        "created_at": "2016-12-16T18:21:20Z",
        "body": "I think this is because we don't babelify `node_modules`, and whatever module that is doesn't transpile their source to ES5. That's their mistake, would you mind opening an issue on their repo?"
      },
      {
        "user": "lock[bot]",
        "created_at": "2018-05-29T22:05:44Z",
        "body": "This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.\n"
      }
    ]
  },
  {
    "number": 1332,
    "title": "Build speed improvements",
    "created_at": "2016-12-10T23:16:16Z",
    "closed_at": "2017-01-22T08:03:03Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/react-boilerplate/react-boilerplate/issues/1332",
    "body": "I use pc with intel i3 4gen, SSD with 500 read/write Mb/s. After I change some code into clean boilerplate, project rebuilds 1.5s. I think it's very long time. \r\nHow to accelerate this process?\r\n",
    "comments_url": "https://api.github.com/repos/react-boilerplate/react-boilerplate/issues/1332/comments",
    "author": "6pm",
    "comments": [
      {
        "user": "samit4me",
        "created_at": "2016-12-13T08:56:16Z",
        "body": "Hi @6pm thanks for the details, did you know of any setups that run faster, maybe we could take a look to find out how. I personally thought 1ish seconds is quite fast."
      },
      {
        "user": "gihrig",
        "created_at": "2017-01-22T08:03:03Z",
        "body": "Closing due to lack of interest, but faster test/build cycles are always appreciated 😁 "
      },
      {
        "user": "lock[bot]",
        "created_at": "2018-05-29T19:06:02Z",
        "body": "This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.\n"
      }
    ]
  },
  {
    "number": 1295,
    "title": "application loader",
    "created_at": "2016-12-01T04:22:59Z",
    "closed_at": "2017-01-24T10:40:33Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/react-boilerplate/react-boilerplate/issues/1295",
    "body": "I would like to know how you people handle graphically the loading time when the react app is bootstrapping.\r\nDid anyone got a way to do a `webpack.onload` equivalent ?",
    "comments_url": "https://api.github.com/repos/react-boilerplate/react-boilerplate/issues/1295/comments",
    "author": "kopax",
    "comments": [
      {
        "user": "lock[bot]",
        "created_at": "2018-05-29T19:05:52Z",
        "body": "This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.\n"
      }
    ]
  },
  {
    "number": 1288,
    "title": "Service worker caching wrong data because no cache parammeter",
    "created_at": "2016-11-29T21:08:51Z",
    "closed_at": "2018-02-16T21:46:50Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/react-boilerplate/react-boilerplate/issues/1288",
    "body": "## Issue Type\r\n\r\n- [ ] Problem ( I have a problem)\r\n## Description\r\n\r\nFirst let me describe my setup, which is probably wrong. \r\nI have a hapijs server, which has the following endpoints\r\n\r\n- `/` which serves the index.htm, currently not used - **requires auth**\r\n- `/login`  serves a login form, tat calls `/api/login`\r\n- `/{param*}` which servers the assets and statics - **requires auth**\r\n- `/api/login` allows to log in and sets a cookie\r\n- `/api/whatever` api methods and stuff. - **requires auth**\r\n\r\nThe expected flow is, hit any route, and if you are not loged in, you are redirected to `/login`, you log, the cookie is set, you are redirected to `/` and everything works from there. So the login flow is separated from the entire app. Probably it would be a good idea to include the login flow into the main app flow.\r\n\r\nI am having problems because the service worker is asking for resources to the server without the auth cookie, so the server is responding with the html of the login form. As a result the service worker caches all the resources as the same response. This is causing me several problems, one of them is that I can't navigate to any route because all routes end showing the same.\r\n\r\nOne partial solution is removing the auth requirment from the assets. I suppose that this is common, but if I can make it working with auth it will be just fine. But again, having the login in a regular form that is then redirected to the actual app seems like an awkard solution.\r\n\r\nIf anyone has a solution to my problem, or a login flow that can be easily integrated into this boilerplate I would be very grateful.\r\n\r\nRegards\r\n\r\n## Steps to reproduce\r\n\r\nJust make your server answer with a redirection to any service worker request.",
    "comments_url": "https://api.github.com/repos/react-boilerplate/react-boilerplate/issues/1288/comments",
    "author": "danielo515",
    "comments": [
      {
        "user": "vineyardbovines",
        "created_at": "2018-02-16T21:46:50Z",
        "body": "Closing due to inactivity"
      },
      {
        "user": "danielo515",
        "created_at": "2018-02-17T10:05:44Z",
        "body": "You have closed the issue because inactivity without providing a single response. What kind of activity were you expecting apart from the bug report itself? "
      },
      {
        "user": "vineyardbovines",
        "created_at": "2018-02-17T20:57:02Z",
        "body": "@danielo515 this issue is from over a year ago, the boilerplate has changed a lot since then. Since nobody replied, +1, or opened a PR based on this in that time, I closed it.\r\n\r\nYour issue also wasn't an actual 'issue' with the boilerplate, it was a request for help integrating a login flow- which you can find a lot on Stack Overflow."
      },
      {
        "user": "danielo515",
        "created_at": "2018-02-19T12:35:03Z",
        "body": "Hello @gretzky ,\r\nYes, this is an old issue, and probably the boilerplate has changed a lot since then. You can keep it closed. However:\r\n\r\n> it was a request for help integrating a login flow- which you can find a lot on Stack Overflow.\r\n\r\nIt is not about integrating the boilerplate with a login flow. The actual problem was that the default configuration of the service worker was caching error responses. Therefore, when good responses start to come in it required a page refresh to make them overwrite the already cached ones.\r\n\r\nRegards\r\n"
      },
      {
        "user": "lock[bot]",
        "created_at": "2018-05-29T00:05:25Z",
        "body": "This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.\n"
      }
    ]
  },
  {
    "number": 1259,
    "title": "Livereload from a remote machine?",
    "created_at": "2016-11-24T04:19:24Z",
    "closed_at": "2016-12-08T12:39:51Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/react-boilerplate/react-boilerplate/issues/1259",
    "body": "Hi there,\r\n\r\nMy development workflow is:\r\n\r\n1. A VM sitting on a box somewhere in my LAN runs `react-boilerplate`.\r\n2. From a Chromebook, I connect to that VM via SSH and edit files in Vim.\r\n3. When I need to see the site, I go to `192.168.0.1:3000` -- the IP of the host machine, which forwards the port over to the VM.\r\n\r\nIt's weird, but it does work. The only thing that doesn't quite work is livereload. I recognize this isn't strictly exclusive to React-boilerplate but I was wondering if anyone might have any tips or ideas as to how to get Livereload to work in this convoluted scenario.\r\n\r\n",
    "comments_url": "https://api.github.com/repos/react-boilerplate/react-boilerplate/issues/1259/comments",
    "author": "ezuk",
    "comments": [
      {
        "user": "samit4me",
        "created_at": "2016-11-26T06:46:44Z",
        "body": "Not sure I fully understand the setup, but I've previously worked in a VM and from memory live reload worked, but the VM had its own static IP which I could access or add a DNS entry to make it nicer."
      },
      {
        "user": "lock[bot]",
        "created_at": "2018-05-29T23:05:46Z",
        "body": "This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.\n"
      }
    ]
  },
  {
    "number": 1254,
    "title": "Dynamic page loading failed Error: [React Intl] Could not find required `intl` object. <IntlProvider> needs to exist in the component ancestry.",
    "created_at": "2016-11-21T10:02:26Z",
    "closed_at": "2016-11-26T05:00:48Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/react-boilerplate/react-boilerplate/issues/1254",
    "body": "I tried to remove all references to `react-intl` because there's not much use of it in my web app.\r\n\r\nYour docs simply said to remove `<IntlProvider>` from app.js but there's none already there. Figures that you seemed to move it all with `<LanguageProvider>` and thus from there remove all references to it, along with `i18n.js`.\r\n\r\nBut then I still get this error whenever I try to navigate to another route.\r\n\r\n```\r\nDynamic page loading failed Error: [React Intl] Could not find required `intl` object. <IntlProvider> needs to exist in the component ancestry.\r\n```\r\n\r\nWhy is that?",
    "comments_url": "https://api.github.com/repos/react-boilerplate/react-boilerplate/issues/1254/comments",
    "author": "angelosembrano",
    "comments": [
      {
        "user": "samit4me",
        "created_at": "2016-11-26T05:00:48Z",
        "body": "Closing this in favour of #1257 "
      },
      {
        "user": "lock[bot]",
        "created_at": "2018-05-29T23:06:22Z",
        "body": "This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.\n"
      }
    ]
  },
  {
    "number": 1217,
    "title": "Selectors not executing when I call them",
    "created_at": "2016-11-10T15:57:59Z",
    "closed_at": "2016-11-10T17:20:47Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/react-boilerplate/react-boilerplate/issues/1217",
    "body": "My selectors.js looks like this: \r\n\r\n```\r\nconst selectMyIntegrationsPageDomain = () => state => state.get('myIntegrationsPage');\r\n\r\nconst selectId = () => createSelector(\r\n  selectMyIntegrationsPageDomain(),\r\n  (myIntegrationsPageState) => myIntegrationsPageState.get('id')\r\n);\r\nexport {\r\n  selectMyIntegrationsPageDomain,\r\n  selectId,\r\n};\r\n```\r\n\r\nI use them in my container (index.js), in the mapStateToProps function, which looks like this:\r\n\r\n```\r\nfunction mapStateToProps(state) {\r\n  console.log(selectId());\r\n  return {\r\n    id: selectId(),\r\n  };\r\n}\r\n```\r\n\r\nWhere selectId is imported from selectors.js. The props validation fails (expecting string but got fun) and the console.log on the first line of the mapStateToProps-function prints out the function body of the selector function. \r\n\r\nWhat am I doing wrong? As far as I can see I'm using the functions exactly as in the boilerplate project...\r\n\r\nThanks. \r\n",
    "comments_url": "https://api.github.com/repos/react-boilerplate/react-boilerplate/issues/1217/comments",
    "author": "williamgranli",
    "comments": [
      {
        "user": "Dattaya",
        "created_at": "2016-11-10T17:20:08Z",
        "body": "You don't use `createStructuredSelector` that does everything automatically, that means you should pass `state` into `selectId` yourself: `selectId()(state)` also `selectId()` should be assigned to a variable somewhere otherwise nothing will be memoized due to recreation of a memoized selector each time state or props change.\n"
      },
      {
        "user": "lock[bot]",
        "created_at": "2018-05-30T00:06:08Z",
        "body": "This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.\n"
      }
    ]
  },
  {
    "number": 1104,
    "title": "Rails integration with react-boilerplate",
    "created_at": "2016-10-14T07:23:08Z",
    "closed_at": "2016-10-17T11:49:03Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/react-boilerplate/react-boilerplate/issues/1104",
    "body": "How can i integrate new rails application with this boilerplate do i need any third party lib for achieve this,or any suggestion   \n",
    "comments_url": "https://api.github.com/repos/react-boilerplate/react-boilerplate/issues/1104/comments",
    "author": "uzaif313",
    "comments": [
      {
        "user": "gihrig",
        "created_at": "2016-10-15T04:14:48Z",
        "body": "See #679\n"
      },
      {
        "user": "lock[bot]",
        "created_at": "2018-05-30T03:05:38Z",
        "body": "This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.\n"
      }
    ]
  },
  {
    "number": 1101,
    "title": "Is there a reason why in the sample project you use button for creating A Tag ?",
    "created_at": "2016-10-13T12:53:45Z",
    "closed_at": "2016-10-17T11:54:50Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/react-boilerplate/react-boilerplate/issues/1101",
    "body": "# React Boilerplate\n## Description\n\nI am trying to implement Pages routing. I have followed the example in your sample app, but it appear that you use button only. \n\nI was surprise to see that you can also render a A tag with Button if you don't use `props.handleRoute` , this is pretty confusing because the components name is Button.\n\nAlso, the A components doesn't seems to handle route, so I wanted to know if it's a common practice in react world or if it's just a personal proposition for the sample case ?\n",
    "comments_url": "https://api.github.com/repos/react-boilerplate/react-boilerplate/issues/1101/comments",
    "author": "kopax",
    "comments": [
      {
        "user": "mxstbr",
        "created_at": "2016-10-17T11:54:50Z",
        "body": "> if it's just a personal proposition for the sample case ?\n\nJust happened that way, it doesn't reflect any common practice at all. We'll be building a new, more complex example app with updated best practices built in as soon as I find a few free days to actually do it!\n"
      },
      {
        "user": "lock[bot]",
        "created_at": "2018-05-30T03:05:36Z",
        "body": "This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.\n"
      }
    ]
  },
  {
    "number": 1077,
    "title": "Sagas in app/containers/App folder",
    "created_at": "2016-10-05T15:39:55Z",
    "closed_at": "2016-10-11T14:27:20Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/react-boilerplate/react-boilerplate/issues/1077",
    "body": "I noticed that sagas get injected when you visit a specific route (and defined in the corresponding container). What should i do if I want a shared sagas file? For example, I want to integrate Firebase with authentication, but since authentication can happen anywhere, do I need to add the same logic to every sagas file of every container?\n\nI was thinking of placing a sagas file in the \"app/containers/App\", but I'm not sure how to makethat work.\n",
    "comments_url": "https://api.github.com/repos/react-boilerplate/react-boilerplate/issues/1077/comments",
    "author": "meilers",
    "comments": [
      {
        "user": "jshumakerpruitt",
        "created_at": "2016-10-06T03:44:38Z",
        "body": "You can import and run your appSaga directly in `store.js`\n\n```\n  import appSaga from 'containers/App/sagas';\n\n  ...\n\n  const store = createStore(\n    createReducer(),\n    undefined,\n    compose(...enhancers)\n  );\n\n  // Extensions\n\n  //run saga from 'containers/App/sagas' here\n  sagaMiddleware.run(appSaga);\n\n  store.runSaga = sagaMiddleware.run;\n  ...\n\n```\n"
      },
      {
        "user": "chaintng",
        "created_at": "2016-10-11T14:15:41Z",
        "body": "@meilers i think @jshumakerpruitt approach is a good call.\ncan i close this issue now ? do you still experience any issue ?\n"
      },
      {
        "user": "lock[bot]",
        "created_at": "2018-05-30T03:05:48Z",
        "body": "This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.\n"
      }
    ]
  },
  {
    "number": 996,
    "title": "Cannot load SCSS file from node_modules",
    "created_at": "2016-09-17T13:46:43Z",
    "closed_at": "2016-09-22T07:16:15Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/react-boilerplate/react-boilerplate/issues/996",
    "body": "Hi all,\nI'm facing with the issue with loading .scss file from react-image-gallery. My steps are:\n1. Install react-image-gallery\n2. Install sass-loader.\n3. Configure sass loader in webpack.base.babel.js. Below is my configuration:\n\n``` javascript\n/**\n * COMMON WEBPACK CONFIGURATION\n */\n\nconst path = require('path');\nconst webpack = require('webpack');\n\nmodule.exports = (options) => ({\n  entry: options.entry,\n  output: Object.assign({ // Compile into js/build.js\n    path: path.resolve(process.cwd(), 'build'),\n    publicPath: '/',\n  }, options.output), // Merge with env dependent settings\n  module: {\n    loaders: [{\n      test: /\\.js$/, // Transform all .js files required somewhere with Babel\n      loader: 'babel',\n      exclude: /node_modules/,\n      query: options.babelQuery,\n    }, {\n      // Transform our own .css files with PostCSS and CSS-modules\n      test: /\\.css$/,\n      exclude: /node_modules/,\n      loader: options.cssLoaders,\n    }, {\n        test: /\\.scss$/,\n        include: /node_modules/,\n        loaders: [\"style\", \"css?modules\", \"sass\"]\n      }, {\n      // Do not transform vendor's CSS with CSS-modules\n      // The point is that they remain in global scope.\n      // Since we require these CSS files in our JS or CSS files,\n      // they will be a part of our compilation either way.\n      // So, no need for ExtractTextPlugin here.\n      test: /\\.css$/,\n      include: /node_modules/,\n      loaders: ['style-loader', 'css-loader'],\n    }, {\n      test: /\\.(eot|svg|ttf|woff|woff2)$/,\n      loader: 'file-loader',\n    }, {\n      test: /\\.(jpg|png|gif)$/,\n      loaders: [\n        'file-loader',\n        'image-webpack?{progressive:true, optimizationLevel: 7, interlaced: false, pngquant:{quality: \"65-90\", speed: 4}}',\n      ],\n    }, {\n      test: /\\.html$/,\n      loader: 'html-loader',\n    }, {\n      test: /\\.json$/,\n      loader: 'json-loader',\n    }, {\n      test: /\\.(mp4|webm)$/,\n      loader: 'url-loader?limit=10000',\n    }, {\n      test: /\\.css$/,\n      loader: 'style!css?modules',\n      include: /flexboxgrid/,\n    }],\n  },\n  sassLoader: {\n    includePaths: [\n      path.resolve(__dirname, \"../../app/theme/\")\n    ]\n  },\n  plugins: options.plugins.concat([\n    new webpack.ProvidePlugin({\n      // make fetch available\n      fetch: 'exports?self.fetch!whatwg-fetch',\n    }),\n\n    // Always expose NODE_ENV to webpack, in order to use `process.env.NODE_ENV`\n    // inside your code for any environment checks; UglifyJS will automatically\n    // drop any unreachable code.\n    new webpack.DefinePlugin({\n      'process.env': {\n        NODE_ENV: JSON.stringify(process.env.NODE_ENV),\n      },\n    }),\n  ]),\n  postcss: () => options.postcssPlugins,\n  resolve: {\n    modules: ['app', 'node_modules'],\n    extensions: [\n      '',\n      '.js',\n      '.jsx',\n      '.css',\n      '.scss',\n      '.react.js'\n    ],\n    modulesDirectories: [\n      'node_modules',\n      path.resolve(__dirname, './node_modules')\n    ],\n    mainFields: [\n      'jsnext:main',\n      'main',\n    ],\n  },\n  devtool: options.devtool,\n  target: 'web', // Make web variables accessible to webpack, e.g. window\n  stats: false, // Don't show stats in the console\n  progress: true,\n});\n```\n\nAs you see, my scss loader is included node_modules directory, but it can't be compiled. Pls help me, thanks so much!\n",
    "comments_url": "https://api.github.com/repos/react-boilerplate/react-boilerplate/issues/996/comments",
    "author": "phuochau",
    "comments": [
      {
        "user": "mxstbr",
        "created_at": "2016-09-17T13:57:13Z",
        "body": "Is there an error message by chance?\n"
      },
      {
        "user": "phuochau",
        "created_at": "2016-09-17T13:59:22Z",
        "body": "@mxstbr the webpack built successfully. But the scss can't be loaded. I just made the test by upload css (compiled from scss) to amazon s3 and include it into index.html and it works. But with webpack, it doesn't work.\n"
      },
      {
        "user": "internetErik",
        "created_at": "2016-09-21T12:16:56Z",
        "body": "@phuochau Did you import the scss file somewhere in your app (in the javascript)?\n"
      },
      {
        "user": "phuochau",
        "created_at": "2016-09-22T07:12:24Z",
        "body": "@internetErik I made it already and it works. Just use below code to load the css in which component you want to use image-gallery.\n\n``` javascript\nrequire('react-image-gallery/styles/css/image-gallery.css');\n```\n\nThank you for all your helps.\n"
      },
      {
        "user": "phuochau",
        "created_at": "2016-09-22T07:15:08Z",
        "body": "It works but I hope all css,scss will be loaded automatically via webpack. @mxstbr pls help to close this issue and consider about my idea, thank you! :)\n"
      },
      {
        "user": "kalvinkrishna",
        "created_at": "2017-07-01T23:00:43Z",
        "body": "did you solve this issue?? i have same idea but not get it on sass"
      },
      {
        "user": "lock[bot]",
        "created_at": "2018-05-29T13:19:01Z",
        "body": "This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.\n"
      }
    ]
  },
  {
    "number": 961,
    "title": "Sagas not responding to dispatched actions",
    "created_at": "2016-09-07T01:37:32Z",
    "closed_at": "2016-09-10T13:04:55Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/react-boilerplate/react-boilerplate/issues/961",
    "body": "My watcher starts up but doesn't respond to `yield take(MY_ACTION)` no matter what I put in there.  I've tried every variation possible in my container/sagas.js and I'm sure there's nothing wrong with it. What could possibly be the issue?\n\nHere's my sagas.js which is fine. Console logs '1' but not '2'.\n\n```\nimport { take, call, put, fork } from 'redux-saga/effects';\nimport { LOAD_TOPICS } from './constants';\n\nexport function* watchLoadTopics() {\n  yield take(LOAD_TOPICS);\n  console.log('2');\n}\n\nexport function* topicListSaga() {\n    console.log('1');\n    yield fork(watchLoadTopics);\n}\n\nexport default [\n  topicListSaga,\n];\n```\n\nRedux responds to actions just fine, but it's like the saga isn't listening in. The routes.js file looks fine too. I'm wondering if there's a problem in store.js although I've barely touched it:\n\n```\n/**\n * Create the store with asynchronously loaded reducers\n */\n\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { fromJS } from 'immutable';\nimport { routerMiddleware } from 'react-router-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport createReducer from './reducers';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst devtools = window.devToolsExtension || (() => noop => noop);\n\nexport default function configureStore(initialState = {}, history) {\n  const middlewares = [\n    sagaMiddleware,\n    routerMiddleware(history),\n  ];\n\n  const enhancers = [\n    applyMiddleware(...middlewares),\n    devtools(),\n  ];\n\n  const store = createStore(\n    createReducer(),\n    fromJS(initialState),\n    compose(...enhancers)\n  );\n\n  // Create hook for async sagas\n  store.runSaga = sagaMiddleware.run;\n\n  if (module.hot) {\n    System.import('./reducers').then((reducerModule) => {\n      const createReducers = reducerModule.default;\n      const nextReducers = createReducers(store.asyncReducers);\n\n      store.replaceReducer(nextReducers);\n    });\n  }\n\n  store.asyncReducers = {};\n  return store;\n}\n```\n\nIs there anywhere else where redux is \"connected\" to redux-saga that I could be missing? Everything is pretty much default so it's strange that it's not working.\n\nHere is asyncInjectors.js but I'm pretty sure it's 100% default:\n\n```\nimport { conformsTo, isEmpty, isFunction, isObject, isString } from 'lodash';\nimport invariant from 'invariant';\nimport warning from 'warning';\nimport createReducer from 'reducers';\n\n/**\n * Validate the shape of redux store\n */\nexport function checkStore(store) {\n  const shape = {\n    dispatch: isFunction,\n    subscribe: isFunction,\n    getState: isFunction,\n    replaceReducer: isFunction,\n    runSaga: isFunction,\n    asyncReducers: isObject,\n  };\n  invariant(\n    conformsTo(store, shape),\n    '(app/utils...) asyncInjectors: Expected a valid redux store'\n  );\n}\n\n/**\n * Inject an asynchronously loaded reducer\n */\nexport function injectAsyncReducer(store, isValid) {\n  return function injectReducer(name, asyncReducer) {\n    if (!isValid) checkStore(store);\n\n    invariant(\n      isString(name) && !isEmpty(name) && isFunction(asyncReducer),\n      '(app/utils...) injectAsyncReducer: Expected `asyncReducer` to be a reducer function'\n    );\n\n    store.asyncReducers[name] = asyncReducer; // eslint-disable-line no-param-reassign\n    store.replaceReducer(createReducer(store.asyncReducers));\n  };\n}\n\n/**\n * Inject an asynchronously loaded saga\n */\nexport function injectAsyncSagas(store, isValid) {\n  return function injectSagas(sagas) {\n    if (!isValid) checkStore(store);\n\n    invariant(\n      Array.isArray(sagas),\n      '(app/utils...) injectAsyncSagas: Expected `sagas` to be an array of generator functions'\n    );\n\n    warning(\n      !isEmpty(sagas),\n      '(app/utils...) injectAsyncSagas: Received an empty `sagas` array'\n    );\n\n    sagas.map(store.runSaga);\n  };\n}\n\n/**\n * Helper for creating injectors\n */\nexport function getAsyncInjectors(store) {\n  checkStore(store);\n\n  return {\n    injectReducer: injectAsyncReducer(store, true),\n    injectSagas: injectAsyncSagas(store, true),\n  };\n}\n```\n\nI'm getting no errors or warnings. Any ideas?\n",
    "comments_url": "https://api.github.com/repos/react-boilerplate/react-boilerplate/issues/961/comments",
    "author": "scf4",
    "comments": [
      {
        "user": "mxstbr",
        "created_at": "2016-09-10T13:04:52Z",
        "body": "This should work and have your expected behaviour, I think?\n\n``` JS\nimport { take, call, put, fork } from 'redux-saga/effects';\nimport { LOAD_TOPICS } from './constants';\n\nexport function* watchLoadTopics() {\n  console.log('2');\n}\n\nexport function* topicListSaga() {\n    console.log('1');\n    yield fork(take, LOAD_TOPICS, watchLoadTopics);\n}\n\nexport default [\n  topicListSaga,\n];\n```\n"
      },
      {
        "user": "lock[bot]",
        "created_at": "2018-05-30T06:47:03Z",
        "body": "This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.\n"
      }
    ]
  },
  {
    "number": 939,
    "title": "using react-helmet with react-intl",
    "created_at": "2016-08-31T10:10:50Z",
    "closed_at": "2016-09-02T08:09:10Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/react-boilerplate/react-boilerplate/issues/939",
    "body": "Hi.\nI want to change page's title when locale has changed.\nDose anyone try to do this?\n",
    "comments_url": "https://api.github.com/repos/react-boilerplate/react-boilerplate/issues/939/comments",
    "author": "hieubq90",
    "comments": [
      {
        "user": "theotow",
        "created_at": "2016-09-01T11:03:51Z",
        "body": "It should be simple, just use the formatMessage method provided through the react context of react-intl\n\nadd react-intl to your file\n\n```\nimport { intlShape } from 'react-intl';\n\nComponentName.contextTypes = {\n   intl: intlShape\n}\n\n```\n\nin the render \n\n```\nrender () {\n   return (\n     <div>\n       <Helmet\n          title={this.context.intl.formatMessage(messages.yourmessage)\n        />\n     </div>\n   )\n}\n```\n\nthat should do the trick\n"
      },
      {
        "user": "justingreenberg",
        "created_at": "2016-09-16T08:24:56Z",
        "body": "nice... for helmet specifically i tend to create thin wrappers with `injectIntl` to inject instance, and then pass the defined messages as props from parent container\n\n``` js\nimport React from 'react'\nimport { injectIntl, intlShape } from 'react-intl'\n\nexport const HelmetIntl = ({\n  intl: { formatMessage },\n  messages: { title },\n  children, ...props\n}) =>\n  <div>\n    <Helmet title={formatMessage(title)} {...props} />\n    {React.Children.only(children) || null}\n  </div>\n\nHelmetIntl.propTypes = {\n  intl: intlShape.isRequired,\n  messages: React.PropTypes.shape({\n    title: React.PropTypes.string.isRequired,\n    children: React.PropTypes.node.isRequired\n  }).isRequired\n}\n\nexport default injectIntl(HelmetIntl)\n```\n"
      },
      {
        "user": "lock[bot]",
        "created_at": "2018-05-30T05:47:19Z",
        "body": "This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.\n"
      }
    ]
  },
  {
    "number": 915,
    "title": "Loading hangs (but not in incognito mode)?",
    "created_at": "2016-08-24T22:35:51Z",
    "closed_at": "2016-09-18T12:32:00Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/react-boilerplate/react-boilerplate/issues/915",
    "body": "When I'm trying to load any page, sometimes the page hangs and won't show anything, and stay stuck on \"Loading...\" for a very long time.\n\nInterestingly enough, it works fine in incognito mode, but never in regular mode of the browser.\n\nI'm using Chrome on OS X.\n",
    "comments_url": "https://api.github.com/repos/react-boilerplate/react-boilerplate/issues/915/comments",
    "author": "etodanik",
    "comments": [
      {
        "user": "gihrig",
        "created_at": "2016-08-25T00:07:31Z",
        "body": "> sometimes the page hangs and won't show anything, and stay stuck on \"Loading...\"\n> \n>  it works fine in incognito mode, but never in regular mode of the browser.\n\nDo you mean to say \"regular mode\" pages _always_ take a long time, or never load? \n\nChrome has recently made alterations that affect page caching (causing lots of trouble for me on an unrelated project). As a wild guess try clearing Chrome's cache for \"all time\".\n\nIf that doesn't help:\n1. Are you seeing this behavior in a fresh clone or a project you have added to?\n2. If it's an ongoing project, can you reproduce the behavior in a fresh clone?\n3. What version of react-boilerplate are you using? `dev` or `master` branch?\n4. Development or production mode?\n5. Is there any insight from Chrome Developer Tools Network page? e.g. difference between pages that hang and pages that load as expected?\n6. Can you try another browser, e.g. Safari or Firefox?\n7. What versions of Node, npm, OS X and Chrome?\n"
      },
      {
        "user": "mxstbr",
        "created_at": "2016-08-25T00:59:39Z",
        "body": "I'm can definitely open the page on Chrome for OS X, so this is highly likely something in your changes.\n"
      },
      {
        "user": "mxstbr",
        "created_at": "2016-09-18T12:32:00Z",
        "body": "Closing due to inactivity and high probability this isn't related to the boilerplate.\n"
      },
      {
        "user": "lock[bot]",
        "created_at": "2018-05-30T05:47:05Z",
        "body": "This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.\n"
      }
    ]
  },
  {
    "number": 898,
    "title": "Component className={props.className} css not working",
    "created_at": "2016-08-21T20:38:44Z",
    "closed_at": "2016-08-21T23:46:08Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/react-boilerplate/react-boilerplate/issues/898",
    "body": "Hello guys ! I'm currently facing a strange issue about why the css is not applied to my component, here is my code sample:\n\n```\n// InputComponent.js\nfunction Input(props) {\n  return (\n    <div className={styles.input}>\n      <input className={props.className} type={props.type} required={props.required} placeholder={props.placeholder} />\n    </div>\n  );\n}\n\n\n// InputComponent.css\n.input-lg { height:50px; } // Not working\n:global(.input-lg) { height: 50px; } // Working\n\n```\n\n```\n// FormComponent.js\n<Input className=\"input-lg\" type=\"email\" required placeholder=\"Adresse e-mail\"/>\n```\n\nAny ideas why I have to use ':global(.my_class_name)' to make the css applied to my component?\nIs it the fact that I generate the className using 'props' ?\n\nBest,\n",
    "comments_url": "https://api.github.com/repos/react-boilerplate/react-boilerplate/issues/898/comments",
    "author": "billyshena",
    "comments": [
      {
        "user": "mxstbr",
        "created_at": "2016-08-21T23:46:08Z",
        "body": "Please see the documentation about css modules, it will answer your question perfectly!\n"
      },
      {
        "user": "nicogreenarry",
        "created_at": "2016-08-28T03:45:09Z",
        "body": "Sweet! I had this question too.\n"
      },
      {
        "user": "lock[bot]",
        "created_at": "2018-05-30T07:46:53Z",
        "body": "This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.\n"
      }
    ]
  },
  {
    "number": 895,
    "title": "eslint errors airbnb in atom",
    "created_at": "2016-08-21T09:03:20Z",
    "closed_at": "2016-08-21T23:45:19Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/react-boilerplate/react-boilerplate/issues/895",
    "body": "i have folowing errors  after open any js-file\n\n```\nError: /Users/jt3k/Work/_playground/react-boilerplate/node_modules/eslint-config-airbnb/rules/react.js: Configuration for rule \"react/jsx-sort-props\" is invalid: Value \"data[\"0\"].shorthandLast\" has additional properties.\n\nReferenced from: airbnb Referenced from: /Users/jt3k/Work/_playground/react-boilerplate/package.json\nError: /Users/jt3k/Work/_playground/react-boilerplate/node_modules/eslint-config-airbnb/rules/react.js:\n    Configuration for rule \"react/jsx-sort-props\" is invalid:\n    Value \"data[\"0\"].shorthandLast\" has additional properties.\nReferenced from: airbnb\nReferenced from: /Users/jt3k/Work/_playground/react-boilerplate/package.json\n    at validateRuleOptions (/usr/local/lib/node_modules/eslint/lib/config/config-validator.js:115:15)\n    at /usr/local/lib/node_modules/eslint/lib/config/config-validator.js:162:13\n    at Array.forEach (native)\n    at Object.validate (/usr/local/lib/node_modules/eslint/lib/config/config-validator.js:161:35)\n    at load (/usr/local/lib/node_modules/eslint/lib/config/config-file.js:522:19)\n    at /usr/local/lib/node_modules/eslint/lib/config/config-file.js:391:36\n    at Array.reduceRight (native)\n    at applyExtends (/usr/local/lib/node_modules/eslint/lib/config/config-file.js:362:28)\n    at load (/usr/local/lib/node_modules/eslint/lib/config/config-file.js:529:22)\n    at /usr/local/lib/node_modules/eslint/lib/config/config-file.js:391:36\nClose All\nError: /Users/jt3k/Work/_playground/react-boilerplate/node_modules/eslint-config-airbnb/rules/react.js: Configuration for rule \"react/jsx-sort-props\" is invalid: Value \"data[\"0\"].shorthandLast\" has additional properties.\n\nReferenced from: airbnb Referenced from: /Users/jt3k/Work/_playground/react-boilerplate/package.json\nError: /Users/jt3k/Work/_playground/react-boilerplate/node_modules/eslint-config-airbnb/rules/react.js:\n    Configuration for rule \"react/jsx-sort-props\" is invalid:\n    Value \"data[\"0\"].shorthandLast\" has additional properties.\nReferenced from: airbnb\nReferenced from: /Users/jt3k/Work/_playground/react-boilerplate/package.json\n    at validateRuleOptions (/usr/local/lib/node_modules/eslint/lib/config/config-validator.js:115:15)\n    at /usr/local/lib/node_modules/eslint/lib/config/config-validator.js:162:13\n    at Array.forEach (native)\n    at Object.validate (/usr/local/lib/node_modules/eslint/lib/config/config-validator.js:161:35)\n    at load (/usr/local/lib/node_modules/eslint/lib/config/config-file.js:522:19)\n    at /usr/local/lib/node_modules/eslint/lib/config/config-file.js:391:36\n    at Array.reduceRight (native)\n    at applyExtends (/usr/local/lib/node_modules/eslint/lib/config/config-file.js:362:28)\n    at load (/usr/local/lib/node_modules/eslint/lib/config/config-file.js:529:22)\n    at /usr/local/lib/node_modules/eslint/lib/config/config-file.js:391:36\n```\n\nmay be let remove airbnb config?  its config make more problem for developers\n",
    "comments_url": "https://api.github.com/repos/react-boilerplate/react-boilerplate/issues/895/comments",
    "author": "jt3k",
    "comments": [
      {
        "user": "jt3k",
        "created_at": "2016-08-21T12:20:43Z",
        "body": "```\nnpm install -g eslint-config-pedant\n```\n\nand change `airbnb` to `pedant` in package.json  here\n\n```\n  \"eslintConfig\": {\n    \"parser\": \"babel-eslint\",\n    \"extends\": \"pedant\",\n    \"env\": {\n```\n\nfix this problem.\n"
      },
      {
        "user": "gihrig",
        "created_at": "2016-08-21T16:45:45Z",
        "body": "I use Atom with react-boilerplate and don't have this problem.\n\n> Note: If you installed ESLint globally (using the -g flag) then you must also install eslint-config-pedant globally.\n> \n> A globally-installed instance of ESLint can only use globally-installed ESLint plugins. A locally-installed ESLint can make use of both locally- and globally- installed ESLint plugins.\n\nThat `npm install -g eslint-config-pedant` works suggests that you have eslint installed globally. Is that right? If so, you probably need to `npm uninstall -g eslint`, or `npm install -g ...` all the eslint related packages used in react-boilerplate.\n\n> may be let remove airbnb config? its config make more problem for developers\n\nWhile linting style is a matter preference, this project has standardized on airbnb and I don't see that changing. Still, it's nice to have an example that shows how easy it is to change to pedant.\n\nThanks for sharing.\n"
      },
      {
        "user": "lock[bot]",
        "created_at": "2018-05-30T07:47:11Z",
        "body": "This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.\n"
      }
    ]
  },
  {
    "number": 755,
    "title": "antd on-demand loaded, couldn't find the component packaging",
    "created_at": "2016-07-20T04:00:23Z",
    "closed_at": "2016-08-26T06:22:35Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/react-boilerplate/react-boilerplate/issues/755",
    "body": "When can I use the antd components, debugging on-demand loaded antd (`import {DatePicker} from 'antd'`)Page load components, normal operation: `npm run start: production` Build out of the bag can't load components\nA browser error：Uncaught (in promise) ReferenceError: DatePicker is not defined\n\nI use the\n \"antd\": \"^1.6.5\"\n\"babel-plugin-antd\": \"^0.4.0\"\n\nHow can I solve this problem, thank you\npackage.json ：\n\n```\n{\n  \"name\": \"react-boilerplate\",\n  \"version\": \"3.0.0\",\n  \"description\": \"A highly scalable, offline-first foundation with the best DX and a focus on performance and best practices\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/mxstbr/react-boilerplate.git\"\n  },\n  \"engines\": {\n    \"npm\": \">=3\"\n  },\n  \"author\": \"Max Stoiber\",\n  \"license\": \"MIT\",\n  \"scripts\": {\n    \"analyze:clean\": \"rimraf stats.json\",\n    \"preanalyze\": \"npm run analyze:clean\",\n    \"analyze\": \"node ./internals/scripts/analyze.js\",\n    \"npmcheckversion\": \"node ./internals/scripts/npmcheckversion.js\",\n    \"preinstall\": \"npm run npmcheckversion\",\n    \"postinstall\": \"npm run build:dll\",\n    \"prebuild\": \"npm run build:clean\",\n    \"build\": \"cross-env NODE_ENV=production webpack --config internals/webpack/webpack.prod.babel.js --color -p\",\n    \"build:clean\": \"npm run test:clean && rimraf ./build\",\n    \"build:dll\": \"node ./internals/scripts/dependencies.js\",\n    \"start\": \"cross-env NODE_ENV=development node server\",\n    \"start:tunnel\": \"cross-env NODE_ENV=development ENABLE_TUNNEL=true node server\",\n    \"start:production\": \"npm run build && npm run start:prod\",\n    \"start:prod\": \"cross-env NODE_ENV=production node server\",\n    \"pagespeed\": \"node ./internals/scripts/pagespeed.js\",\n    \"presetup\": \"npm i chalk\",\n    \"setup\": \"node ./internals/scripts/setup.js\",\n    \"postsetup\": \"npm run build:dll\",\n    \"clean\": \"shjs ./internals/scripts/clean.js\",\n    \"clean:all\": \"npm run analyze:clean && npm run test:clean && npm run build:clean\",\n    \"generate\": \"plop --plopfile internals/generators/index.js\",\n    \"lint\": \"npm run lint:js && npm run lint:css\",\n    \"lint:eslint\": \"eslint --ignore-path .gitignore --ignore-pattern internals/scripts\",\n    \"lint:js\": \"npm run lint:eslint -- . \",\n    \"lint:css\": \"stylelint ./app/**/*.css\",\n    \"lint:staged\": \"lint-staged\",\n    \"pretest\": \"npm run test:clean && npm run lint\",\n    \"test:clean\": \"rimraf ./coverage\",\n    \"test\": \"cross-env NODE_ENV=test karma start internals/testing/karma.conf.js --single-run\",\n    \"test:watch\": \"npm run test -- --auto-watch --no-single-run\",\n    \"test:firefox\": \"npm run test -- --browsers Firefox\",\n    \"test:safari\": \"npm run test -- --browsers Safari\",\n    \"test:ie\": \"npm run test -- --browsers IE\",\n    \"coveralls\": \"cat ./coverage/lcov/lcov.info | coveralls\"\n  },\n  \"lint-staged\": {\n    \"lint:eslint\": \"*.js\",\n    \"stylelint\": \"*.css\"\n  },\n  \"pre-commit\": \"lint:staged\",\n  \"babel\": {\n    \"presets\": [\n      \"es2015-webpack\",\n      \"react\",\n      \"stage-0\"\n    ],\n    \"env\": {\n      \"production\": {\n        \"only\": [\n          \"app\"\n        ],\n        \"plugins\": [\n          \"transform-react-remove-prop-types\",\n          \"transform-react-constant-elements\",\n          \"transform-react-inline-elements\"\n        ]\n      }\n    },\n    \"plugins\": [[\"antd\"]]\n  },\n  \"eslintConfig\": {\n    \"parser\": \"babel-eslint\",\n    \"extends\": \"airbnb\",\n    \"env\": {\n      \"browser\": true,\n      \"node\": true,\n      \"mocha\": true\n    },\n    \"rules\": {\n      \"max-len\": 0\n    },\n    \"settings\": {\n      \"import/resolver\": {\n        \"webpack\": {\n          \"config\": \"./internals/webpack/webpack.test.babel.js\"\n        }\n      }\n    }\n  },\n  \"stylelint\": {\n    \"extends\": \"stylelint-config-standard\",\n    \"rules\": {\n      \"color-hex-case\": \"upper\",\n      \"string-quotes\": \"single\",\n      \"font-family-name-quotes\": \"always-where-recommended\",\n      \"selector-pseudo-class-no-unknown\": [\n        true,\n        {\n          \"ignorePseudoClasses\": [\n            \"global\"\n          ]\n        }\n      ],\n      \"indentation\": 2\n    }\n  },\n  \"dllPlugin\": {\n    \"path\": \"node_modules/react-boilerplate-dlls\",\n    \"exclude\": [\n      \"chalk\",\n      \"compression\",\n      \"cross-env\",\n      \"express\",\n      \"ip\",\n      \"minimist\",\n      \"sanitize.css\"\n    ],\n    \"include\": [\n      \"core-js\",\n      \"lodash\",\n      \"eventsource-polyfill\"\n    ]\n  },\n  \"dependencies\": {\n    \"antd\": \"^1.6.5\",\n    \"babel-polyfill\": \"6.9.1\",\n    \"chalk\": \"1.1.3\",\n    \"compression\": \"1.6.2\",\n    \"express\": \"4.14.0\",\n    \"fontfaceobserver\": \"2.0.1\",\n    \"history\": \"3.0.0\",\n    \"immutable\": \"3.8.1\",\n    \"ip\": \"1.1.3\",\n    \"minimist\": \"1.2.0\",\n    \"react\": \"15.2.1\",\n    \"react-dom\": \"15.2.1\",\n    \"react-helmet\": \"3.1.0\",\n    \"react-redux\": \"4.4.5\",\n    \"react-router\": \"2.5.2\",\n    \"react-router-redux\": \"4.0.5\",\n    \"react-router-scroll\": \"0.2.0\",\n    \"redux\": \"3.5.2\",\n    \"redux-immutable\": \"3.0.6\",\n    \"redux-saga\": \"0.11.0\",\n    \"reselect\": \"2.5.3\",\n    \"sanitize.css\": \"4.1.0\",\n    \"whatwg-fetch\": \"1.0.0\"\n  },\n  \"devDependencies\": {\n    \"babel-core\": \"6.10.4\",\n    \"babel-eslint\": \"6.1.2\",\n    \"babel-loader\": \"6.2.4\",\n    \"babel-plugin-antd\": \"^0.4.0\",\n    \"babel-plugin-react-transform\": \"2.0.2\",\n    \"babel-plugin-transform-react-constant-elements\": \"6.9.1\",\n    \"babel-plugin-transform-react-inline-elements\": \"6.8.0\",\n    \"babel-plugin-transform-react-remove-prop-types\": \"0.2.7\",\n    \"babel-preset-es2015\": \"6.9.0\",\n    \"babel-preset-es2015-webpack\": \"6.4.1\",\n    \"babel-preset-react\": \"6.11.1\",\n    \"babel-preset-react-hmre\": \"1.1.1\",\n    \"babel-preset-stage-0\": \"6.5.0\",\n    \"chai\": \"3.5.0\",\n    \"chai-enzyme\": \"0.5.0\",\n    \"cheerio\": \"0.20.0\",\n    \"coveralls\": \"2.11.11\",\n    \"cross-env\": \"1.0.8\",\n    \"css-loader\": \"0.23.1\",\n    \"enzyme\": \"2.4.1\",\n    \"eslint\": \"3.0.1\",\n    \"eslint-config-airbnb\": \"9.0.1\",\n    \"eslint-import-resolver-webpack\": \"0.3.2\",\n    \"eslint-plugin-import\": \"1.10.2\",\n    \"eslint-plugin-jsx-a11y\": \"2.0.0\",\n    \"eslint-plugin-react\": \"5.2.2\",\n    \"eventsource-polyfill\": \"0.9.6\",\n    \"expect\": \"1.20.2\",\n    \"expect-jsx\": \"2.6.0\",\n    \"exports-loader\": \"0.6.3\",\n    \"extract-text-webpack-plugin\": \"1.0.1\",\n    \"file-loader\": \"0.9.0\",\n    \"html-loader\": \"0.4.3\",\n    \"html-webpack-plugin\": \"2.22.0\",\n    \"image-webpack-loader\": \"2.0.0\",\n    \"imports-loader\": \"0.6.5\",\n    \"ip\": \"1.1.3\",\n    \"isparta\": \"4.0.0\",\n    \"isparta-loader\": \"2.0.0\",\n    \"json-loader\": \"0.5.4\",\n    \"karma\": \"1.1.1\",\n    \"karma-chrome-launcher\": \"1.0.1\",\n    \"karma-coverage\": \"1.1.0\",\n    \"karma-firefox-launcher\": \"1.0.0\",\n    \"karma-ie-launcher\": \"1.0.0\",\n    \"karma-mocha\": \"1.1.1\",\n    \"karma-mocha-reporter\": \"2.0.4\",\n    \"karma-safari-launcher\": \"1.0.0\",\n    \"karma-sourcemap-loader\": \"0.3.7\",\n    \"karma-webpack\": \"1.7.0\",\n    \"lint-staged\": \"2.0.2\",\n    \"lodash\": \"4.13.1\",\n    \"minimist\": \"1.2.0\",\n    \"mocha\": \"2.5.3\",\n    \"ngrok\": \"2.2.1\",\n    \"null-loader\": \"0.1.1\",\n    \"offline-plugin\": \"3.4.2\",\n    \"plop\": \"1.5.0\",\n    \"postcss-cssnext\": \"2.7.0\",\n    \"postcss-focus\": \"1.0.0\",\n    \"postcss-loader\": \"0.9.1\",\n    \"postcss-reporter\": \"1.4.1\",\n    \"pre-commit\": \"1.1.3\",\n    \"psi\": \"2.0.4\",\n    \"rimraf\": \"2.5.3\",\n    \"shelljs\": \"0.7.0\",\n    \"sinon\": \"2.0.0-pre\",\n    \"style-loader\": \"0.13.1\",\n    \"stylelint\": \"6.9.0\",\n    \"stylelint-config-standard\": \"10.0.0\",\n    \"url-loader\": \"0.5.7\",\n    \"webpack\": \"2.1.0-beta.15\",\n    \"webpack-dev-middleware\": \"1.6.1\",\n    \"webpack-hot-middleware\": \"2.12.1\"\n  }\n}\n\n```\n",
    "comments_url": "https://api.github.com/repos/react-boilerplate/react-boilerplate/issues/755/comments",
    "author": "fuxianwei",
    "comments": [
      {
        "user": "rog",
        "created_at": "2016-07-20T05:02:35Z",
        "body": "Maybe you need to specify the plugin on the babel production env options:\n\n```\n  \"babel\": {\n    \"presets\": [\n      \"es2015-webpack\",\n      \"react\",\n      \"stage-0\"\n    ],\n    \"env\": {\n      \"production\": {\n        \"only\": [\n          \"app\"\n        ],\n        \"plugins\": [\n          \"transform-react-remove-prop-types\",\n          \"transform-react-constant-elements\",\n          \"transform-react-inline-elements\",\n          \"antd\"\n        ]\n      }\n    },\n    \"plugins\": [[\"antd\"]]\n  },\n```\n"
      },
      {
        "user": "fuxianwei",
        "created_at": "2016-07-20T05:31:05Z",
        "body": "@rog Thank you for your reply\nBut when I added babel production env options build or not load components\n"
      },
      {
        "user": "yf-hk",
        "created_at": "2016-08-26T04:16:39Z",
        "body": "@fuxianwei Have you successfully added `antd` into your project finally? I'm also interested with using antd with this boilerplate\n"
      },
      {
        "user": "fuxianwei",
        "created_at": "2016-08-26T04:48:40Z",
        "body": "@andyhu Yes, already used, finally use the`babel-plugin-antd`, but `import Menu from 'antd/lib/menu';` directly into components\n"
      },
      {
        "user": "yf-hk",
        "created_at": "2016-08-26T05:55:16Z",
        "body": "@fuxianwei Thanks for sharing!\n"
      },
      {
        "user": "lock[bot]",
        "created_at": "2018-05-30T07:46:57Z",
        "body": "This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.\n"
      }
    ]
  },
  {
    "number": 738,
    "title": "move server folder into internals folder ",
    "created_at": "2016-07-18T09:16:40Z",
    "closed_at": "2016-07-19T07:37:18Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/react-boilerplate/react-boilerplate/issues/738",
    "body": "Hi, shouldn't the `server` folder get moved into the `internals` folder as it belongs to the build tool?\nI personally thought in the first moment it would be one of these fullstack boilerplate projects which simply stick their server code int the client or the other way round which I really don't appreciate much.\n",
    "comments_url": "https://api.github.com/repos/react-boilerplate/react-boilerplate/issues/738/comments",
    "author": "BraunreutherA",
    "comments": [
      {
        "user": "gihrig",
        "created_at": "2016-07-18T19:24:31Z",
        "body": "My feeling is that _server_ should remain where it is so developers understand its presence. It's intended to be replaced with a _real_ back-end server if that's what your project requires. #664 discusses that issue.\n"
      },
      {
        "user": "mxstbr",
        "created_at": "2016-07-19T07:37:18Z",
        "body": "As @gihrig correctly mentions, the `server` is exactly where it should be! It isn't an internal feature, many people will want to add an API, a database, etc.\n\nSee the discussion in #211:\n\n> I get the argument for keeping the root clean, but I'd balance it with the aim of making how the project works as self-evident as possible. More than that, if using the bundled server in production, I feel as though it has stopped being an internal feature and become a first-class element of the application.\n\n– @oliverturner \n"
      },
      {
        "user": "lock[bot]",
        "created_at": "2018-05-30T09:47:05Z",
        "body": "This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.\n"
      }
    ]
  },
  {
    "number": 729,
    "title": "Revisiting ducks",
    "created_at": "2016-07-15T09:40:21Z",
    "closed_at": "2016-07-19T07:39:50Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/react-boilerplate/react-boilerplate/issues/729",
    "body": "The way I understand it, the main reason that you don't like ducks is because of the somewhat weird exports structure. On the other hand, using them would provide the following benefits:\n- Less clutter: only 1 file vs 3/4/5 (if you count sagas and selectors)\n- Less boilerplate: no need to import constants\n- All the code regarding certain state is colocated, making it easy to understand how each part integrates with other parts\n  - For example, actions can see what the reducer expects, selectors can see how the reducer keeps state\n\nSo if the main argument is the export structure, how about making the exports explicit? Each duck should export at least the named exports `reducer` and `actions`. `reducer` is obvious, and `actions` is an object with all the actions the duck has.\n\nThis has the added advantage of being able to pass the actions object to react-redux's `connect` call without having to name them individually (so they don't exist outside the props scope) and without binding functions that are not actions.\n\nConstants that need sharing (for example, a LOGOUT action type) could be optionally exported under `constants`.\n\nSagas and/or selectors could be put in there as well, under `sagas` and `selectors`, or at least exported from it.\n\nThe file could be called `ducks.js`, or maybe `redux.js` because it isn't quite the same.\n",
    "comments_url": "https://api.github.com/repos/react-boilerplate/react-boilerplate/issues/729/comments",
    "author": "wmertens",
    "comments": [
      {
        "user": "mxstbr",
        "created_at": "2016-07-19T07:39:50Z",
        "body": "(Ducks also make it seem like actions:reducers are a many:1 relationship, where in reality it's a many:many relationship and should be treated as such.)\n\nI do agree that it's a useful pattern if the entire team knows what's up, so I won't keep anybody from doing it that way.\n\nImo this boilerplate has enough complexity as is, so I don't think including it by default is the way to go here. It'll just serve to confuse people, and it's another concept to explain.\n"
      },
      {
        "user": "tomascharad",
        "created_at": "2016-09-02T14:11:05Z",
        "body": "Interesting the many:1 relationship POV.\n"
      },
      {
        "user": "lock[bot]",
        "created_at": "2018-05-30T06:47:17Z",
        "body": "This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.\n"
      }
    ]
  },
  {
    "number": 701,
    "title": "heroku: Error R14 (Memory quota exceeded)",
    "created_at": "2016-07-12T12:49:25Z",
    "closed_at": "2016-09-18T12:28:01Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/react-boilerplate/react-boilerplate/issues/701",
    "body": "I **sometimes** get this error when I try to deploy to heroku \n\n```\nError R14 (Memory quota exceeded)\nProcess running mem=598M(116.8%)\n```\n\nSo that happens because heroku dynos max. memory size is 512M. I think there's a memory leak somewhere on the npm build command ?\n\nThanks,\n",
    "comments_url": "https://api.github.com/repos/react-boilerplate/react-boilerplate/issues/701/comments",
    "author": "kareemaly",
    "comments": [
      {
        "user": "mxstbr",
        "created_at": "2016-07-13T08:18:06Z",
        "body": "Not 100% sure what this could be about, how big is your application?\n"
      },
      {
        "user": "kareemaly",
        "created_at": "2016-07-13T10:31:35Z",
        "body": "@mxstbr I'm not sure, I have tested with larger applications with other boilerplates and didn't have this problem.\n\nI have commented out the offline plugin and the amount of memory used when I run `npm run build` decreased but still sometimes it fails on heroku\n"
      },
      {
        "user": "mxstbr",
        "created_at": "2016-07-13T10:37:01Z",
        "body": "That definitely shouldn't happen. Any idea how we can analyze this?\n"
      },
      {
        "user": "kareemaly",
        "created_at": "2016-07-13T11:04:36Z",
        "body": "I'm testing now on windows, I have cloned a fresh version of this repo, removed the `npm run test` from `prebuild`. And using windows memory resource monitor I can confirm that running `npm run build` takes up to 400MB with a fresh clone.\n"
      },
      {
        "user": "kareemaly",
        "created_at": "2016-07-13T11:08:49Z",
        "body": "@mxstbr I'll try removing some plugins and build, might find what is causing this memory leak.\n"
      },
      {
        "user": "mxstbr",
        "created_at": "2016-07-13T12:50:09Z",
        "body": "Thanks for digging in @kareem3d! Can't wait for your findings!\n"
      },
      {
        "user": "mxstbr",
        "created_at": "2016-09-18T12:28:01Z",
        "body": "Closing due to inactivity – if somebody else runs into this problem please let us know!\n"
      },
      {
        "user": "cykeromens",
        "created_at": "2016-12-21T09:05:33Z",
        "body": "I am experiencing the same issue,  Error R14 (Memory quota exceeded). What was the fix to this?\r\n"
      },
      {
        "user": "acqajar",
        "created_at": "2017-01-03T18:33:00Z",
        "body": "As am i...anyone know why this is happening?"
      },
      {
        "user": "cyrilchapon",
        "created_at": "2018-02-16T11:03:50Z",
        "body": "Same trouble here.\r\nBuilding a node.js app leads to same result."
      },
      {
        "user": "lock[bot]",
        "created_at": "2018-05-29T02:05:17Z",
        "body": "This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.\n"
      }
    ]
  },
  {
    "number": 697,
    "title": "Q: sanitize.css and styling of input elements",
    "created_at": "2016-07-11T11:28:51Z",
    "closed_at": "2016-07-13T08:50:30Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/react-boilerplate/react-boilerplate/issues/697",
    "body": "I'm not sure this is the right place to ask this question, please forgive me if it is not.\n\nAnyway, I'm trying to do a project with this boilerplate and while trying to create some simple forms for data I came upon the problem of styling for form input fields.\nAs I understand it sanitize.css remove all styling including all the styles from input boxes. This makes them become invisible unless you put a mouse cursor inside it. I guess this is good for using your own styles, but I just want them to look somewhat ordinary.\nBut... when styling them it seems that I need to put `!important` after some of the styles in order for them to do anything. This is annoying and it certainly doesn't feel like a good solution.\n\nMaybe I am doing things wrong? \nIs this how it should be done? \nShould I use separate styles for all elements (inputs, selected, buttons, etc) instead of doing in \"globally\" in the app?\n\nThis is what I need to put in my containers/App/styles.css in order to make the input elements to show up (including the clear button for search and the drop down indicator for select)\n\n```\nselect {\n  box-sizing: border-box !important;\n  border: 1px solid #ccc;\n  appearance: menulist !important;\n}\nselect::-ms-expand {\n    display: block !important;\n}\n\ninput[type=\"search\"] {\n    appearance: searchfield !important;\n    box-sizing: border-box !important;\n}\n\ninput::-webkit-textfield-decoration-container {\n    display: -webkit-box !important;\n    box-align: center !important;\n}\n\ninput[type=\"search\"]::-webkit-textfield-decoration-container {\n    direction: ltr !important;\n}\n\ninput[type=\"search\"]::-ms-clear {\n    display: block !important;\n}\n\ninput[type=\"search\"]::-webkit-search-cancel-button {\n    appearance: searchfield-cancel-button !important;\n    display: block !important;\n    box-flex: 0 !important;\n}\n\ninput[type=\"search\"]::-webkit-search-decoration {\n    appearance: searchfield-decoration !important;\n    display: block !important;\n    box-flex: 0 !important;\n}\n\ninput[type=\"search\"]::-webkit-search-results-decoration {\n    appearance: searchfield-results-decoration !important;\n    display: block !important;\n    box-flex: 0 !important;\n}\n\ninput[type=\"search\"]::-webkit-search-results-button {\n    appearance: searchfield-results-button !important;\n    display: block !important;\n    box-flex: 0 !important;\n}\n```\n",
    "comments_url": "https://api.github.com/repos/react-boilerplate/react-boilerplate/issues/697/comments",
    "author": "PatrLind",
    "comments": [
      {
        "user": "mxstbr",
        "created_at": "2016-07-13T08:50:29Z",
        "body": "What you're fundamentally missing here is the mental model of working with CSS modules and components. _You should (almost) never have a use case for global CSS._ Instead of using global styling for `input`, **create an `<Input />` component and give it the styling!**\n\nSomething like this:\n\n``` JS\nimport React from 'react';\n\nimport styles from './styles.css';\n\nfunction Input(props) {\n  return (\n    <input\n      className={styles.input}\n      value={props.value}\n      placeholder={props.placeholder}\n      type={props.type}\n    />\n  );\n}\n\nexport default Input;\n```\n\nNow put your styles in your `styles.css` file, but make them a class instead of global:\n\n``` CSS\n.input[type=\"search\"] {\n    appearance: searchfield;\n    box-sizing: border-box;\n}\n\n.input::-webkit-textfield-decoration-container {\n    display: -webkit-box;\n    box-align: center;\n}\n\n.input[type=\"search\"]::-webkit-textfield-decoration-container {\n    direction: ltr;\n}\n\n.input[type=\"search\"]::-ms-clear {\n    display: block;\n}\n\n.input[type=\"search\"]::-webkit-search-cancel-button {\n    appearance: searchfield-cancel-button;\n    display: block;\n    box-flex: 0;\n}\n\n.input[type=\"search\"]::-webkit-search-decoration {\n    appearance: searchfield-decoration;\n    display: block;\n    box-flex: 0;\n}\n\n.input[type=\"search\"]::-webkit-search-results-decoration {\n    appearance: searchfield-results-decoration;\n    display: block;\n    box-flex: 0;\n}\n\n.input[type=\"search\"]::-webkit-search-results-button {\n    appearance: searchfield-results-button;\n    display: block;\n    box-flex: 0;\n}\n```\n\nDone! Now simply use that component instead of doing `<input />` directly.\n\n---\n\nThe thing is, with components you could even go further and **make that `<Input />` component better than the standard input** with `propType` validation and by adding a label that's enforced to be clickable to focus the input for a11y:\n\n``` JS\nimport React from 'react';\n\nimport styles from './styles.css';\n\nfunction Input(props) {\n  return (\n    <label className={styles.label}>{props.label}\n      <input\n        className={styles.input}\n        value={props.value}\n        placeholder={props.placeholder}\n        type={props.type}\n      />\n    </label>\n  );\n}\n\nInput.propTypes {\n  label: React.PropTypes.string.isRequired,\n  value: React.PropTypes.string.isRequired,\n  type: React.PropTypes.string, // could possibly be oneOf\n};\n\nexport default Input;\n```\n\nAnd suddenly you have a consistent input field all across your application that'll always have good a11y, have readable labels, no global styles, etc.\n\nThat's the big benefit of components. By doing global styling you remove all of those benefits.\n\n_I'm not saying that this specific example of an Input component is exactly what you want, but I think it illustrates the point_\n\nI hope this answers the question!\n"
      },
      {
        "user": "lock[bot]",
        "created_at": "2018-05-30T09:47:23Z",
        "body": "This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.\n"
      }
    ]
  },
  {
    "number": 607,
    "title": "Partial index.html",
    "created_at": "2016-06-28T17:00:13Z",
    "closed_at": "2016-06-30T16:14:43Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/react-boilerplate/react-boilerplate/issues/607",
    "body": "Hi there,\n\nI'm trying to use react-boilerplate as part of a larger project (a WordPress plugin as it happens), and I wish to make it so that `index-input.hbs` is a partial HTML / Handlebars file, like so, rather than a full HTML page, so that I can include it inside an existing page via PHP:\n\n```\n<div class=\"inner-wrapper\">\n    <% for (var css in htmlWebpackPlugin.files.css) { %>\n        <link href=\"<%= htmlWebpackPlugin.files.css[css] %>\" rel=\"stylesheet\">\n    <% } %>\n\n    <% if (htmlWebpackPlugin.options.window) { %>\n        <script>\n          <% for (var varName in htmlWebpackPlugin.options.window) { %>\n            window['<%=varName%>'] = <%= JSON.stringify(htmlWebpackPlugin.options.window[varName]) %>;\n          <% } %>\n        </script>\n    <% } %>\n\n    <% for (var chunk in htmlWebpackPlugin.files.chunks) { %>\n        <script src=\"<%= htmlWebpackPlugin.files.chunks[chunk].entry %>\"></script>\n    <% } %>\n\n    <% if (htmlWebpackPlugin.options.devServer) { %>\n        <script src=\"<%= htmlWebpackPlugin.options.devServer%>/webpack-dev-server.js\"></script>\n    <% } %>\n    <input name=\"post_title\" class=\"form-control\" value=\"\" />\n    <div id=\"app\"></div>\n</div>\n```\n\nBy adding a handlebars loader, I am able to parse the template, and output to `index.html`, but I get the following console error:\n\n```\nmain.js:659Uncaught ReferenceError: reactBoilerplateDeps is not defined\n```\n\nLine 659 is:\n\n```\n    eval(\"module.exports = reactBoilerplateDeps;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9leHRlcm5hbCBcInJlYWN0Qm9pbGVycGxhdGVEZXBzXCI/ZTNhYiJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlYWN0Qm9pbGVycGxhdGVEZXBzO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIGV4dGVybmFsIFwicmVhY3RCb2lsZXJwbGF0ZURlcHNcIlxuLy8gbW9kdWxlIGlkID0gMFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\");\n```\n\nI'm not quite sure what's up actually.\n\nI've changed the TemplateContent function to as follows:\n\n```\n/**\n * We dynamically generate the HTML content in development so that the different\n * DLL Javascript files are loaded in script tags and available to our application.\n */\nfunction templateContent() {\n\n  const initial_html = fs.readFileSync(\n    path.resolve(process.cwd(), 'app/index-input.hbs')\n  ).toString();\n\n    const html = handlebars.compile(initial_html);\n\n  if (!dllPlugin) { return html; }\n\n  const doc = cheerio(html);\n  const body = doc.find('.inner-wrapper');\n  const dllNames = !dllPlugin.dlls ? ['reactBoilerplateDeps'] : Object.keys(dllPlugin.dlls);\n\n  dllNames.forEach(dllName => body.append(`<script data-dll='true' src='/${dllName}.dll.js'></script>`));\n\n  return doc.toString();\n}\n```\n",
    "comments_url": "https://api.github.com/repos/react-boilerplate/react-boilerplate/issues/607/comments",
    "author": "joneslloyd",
    "comments": [
      {
        "user": "mxstbr",
        "created_at": "2016-06-30T16:14:43Z",
        "body": "Hmm, hard to tell what the problem is to be honest, not sure there's much I can do here :sad: Hope you figure it out soon!\n"
      },
      {
        "user": "joneslloyd",
        "created_at": "2016-06-30T16:15:31Z",
        "body": "No problem - thanks for the response either way :)\n"
      },
      {
        "user": "ankitduseja",
        "created_at": "2017-07-20T11:45:07Z",
        "body": "@joneslloyd I am stuck at the same issue. Were you able to fix it?"
      },
      {
        "user": "joneslloyd",
        "created_at": "2017-07-20T11:47:15Z",
        "body": "Nope!"
      },
      {
        "user": "lock[bot]",
        "created_at": "2018-05-29T13:18:31Z",
        "body": "This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.\n"
      }
    ]
  },
  {
    "number": 605,
    "title": "saga task duplication",
    "created_at": "2016-06-28T03:47:52Z",
    "closed_at": "2016-06-29T13:06:14Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/react-boilerplate/react-boilerplate/issues/605",
    "body": "a redux-saga noob here. I noticed that when I enter a route of a container, the sagas behave as expected but If I re-enter the route again, a saga will run twice after dispatched once and as I repeat the re-entry the the number gets multiplied... It seems that `injectSagas` is not idempotent. when I ensure that `injectSagas` is run once, I don't see this behaviour.\n",
    "comments_url": "https://api.github.com/repos/react-boilerplate/react-boilerplate/issues/605/comments",
    "author": "salzhrani",
    "comments": [
      {
        "user": "abeaclark",
        "created_at": "2016-06-28T18:41:53Z",
        "body": "I also have this problem\n"
      },
      {
        "user": "mxstbr",
        "created_at": "2016-06-29T13:06:11Z",
        "body": "See the discussion (and eventual solution) in #390 for more information how to solve this.\n\nThe TL;DR is that you should use a `redux-saga` watcher and exit your sagas on `LOCATION_CHANGE`!\n"
      },
      {
        "user": "emragins",
        "created_at": "2016-09-05T06:00:45Z",
        "body": "Would it make sense to add this to the generator code? (I'm too much of a noob here to have an opinion)\n"
      },
      {
        "user": "Maxoos",
        "created_at": "2016-09-14T03:24:45Z",
        "body": "@mxstbr That solution works well, however, I need do something async while navigating away from the page and in that case it does not work too well:\n\n```\n      dispatch(postProperty());\n      dispatch(push(url));\n```\n"
      },
      {
        "user": "lock[bot]",
        "created_at": "2018-05-30T05:47:39Z",
        "body": "This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.\n"
      }
    ]
  },
  {
    "number": 596,
    "title": "Change output DIR and name",
    "created_at": "2016-06-23T17:26:22Z",
    "closed_at": "2016-06-23T18:51:27Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/react-boilerplate/react-boilerplate/issues/596",
    "body": "Hi there,\n\nIs there are way to change the output directory and filename for the app?\n\nI'm trying to use it as part of a WordPress plugin, and want to standardise filenames\n",
    "comments_url": "https://api.github.com/repos/react-boilerplate/react-boilerplate/issues/596/comments",
    "author": "joneslloyd",
    "comments": [
      {
        "user": "mxstbr",
        "created_at": "2016-06-23T17:36:51Z",
        "body": "I think what you're looking for is in `internals/webpack/webpack.base.babel.js`, specifically the `output` property. :+1:\n"
      },
      {
        "user": "joneslloyd",
        "created_at": "2016-06-23T18:00:12Z",
        "body": "Perfect, thanks!\n"
      },
      {
        "user": "lock[bot]",
        "created_at": "2018-05-30T10:47:31Z",
        "body": "This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.\n"
      }
    ]
  },
  {
    "number": 563,
    "title": "Rerun test when creating swop files by vim",
    "created_at": "2016-06-16T12:33:15Z",
    "closed_at": "2016-06-20T08:34:11Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/react-boilerplate/react-boilerplate/issues/563",
    "body": "if using --watch and open file with vim (after open file vim create swop file in same directory) \nfor example .index.js.swp\n\nKarma rerun test. How it disabled?\n",
    "comments_url": "https://api.github.com/repos/react-boilerplate/react-boilerplate/issues/563/comments",
    "author": "nfort",
    "comments": [
      {
        "user": "mxstbr",
        "created_at": "2016-06-20T08:34:11Z",
        "body": "I'm sorry, but I don't use Vim at all so I can't answer your question. :cry: You'll have to figure this one out yourself!\n"
      },
      {
        "user": "lock[bot]",
        "created_at": "2018-05-30T10:47:43Z",
        "body": "This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.\n"
      }
    ]
  },
  {
    "number": 531,
    "title": "Why not use providePlugins to add React in Webpack?",
    "created_at": "2016-06-11T14:37:45Z",
    "closed_at": "2016-06-13T12:03:35Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/react-boilerplate/react-boilerplate/issues/531",
    "body": "Just curious. It seems like we might as well streamline the modules and make React available to all templates and not have to have it in the import block. I mean the generators add it automatically, so it isn't a big deal... Mostly I figure there was a decision against it, because this thing is so well thought out. So curious if there was a reason.\n\n```\nnew webpack.ProvidePlugin({\n      // make fetch available\n      fetch: 'exports?self.fetch!whatwg-fetch',\n      React: 'react',\n});\n```\n\nI love this boilerplate so far. Thanks!\n",
    "comments_url": "https://api.github.com/repos/react-boilerplate/react-boilerplate/issues/531/comments",
    "author": "jupitercow",
    "comments": [
      {
        "user": "mxstbr",
        "created_at": "2016-06-13T12:03:35Z",
        "body": "With tree shaking, you might be getting rid of parts of React that you're not using! (especially if you're using imports like `import { Component, createComponent } from 'react'`) Admittedly, this isn't yet really happening due to the way React is built currently, but the team is aware of it and working towards a better way of doing things afaik.\n\nYou've also tightly coupled your components to your environment – sharing those components will be basically impossible and/or require a very diligent environment setup for the user.\n\nThis is why we don't do it generally in the boilerplate. That being said, if you're working on a side project on your own please go ahead and prefer it that way go ahead! _Nobody_ is going to keep you from doing it :grin:\n"
      },
      {
        "user": "jupitercow",
        "created_at": "2016-06-13T13:42:26Z",
        "body": "Thanks. Shareable components was exactly what I was looking for. A very good reason not to do it.\n"
      },
      {
        "user": "lock[bot]",
        "created_at": "2018-05-30T11:47:17Z",
        "body": "This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.\n"
      }
    ]
  },
  {
    "number": 460,
    "title": "Why do you suggest to put presentational stuff in the App container?",
    "created_at": "2016-06-03T17:37:40Z",
    "closed_at": "2016-06-04T13:15:56Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/react-boilerplate/react-boilerplate/issues/460",
    "body": "I'd like to know what's behind this decision.\n\nShouldn't we have an App component which get rendered by the App container?\n",
    "comments_url": "https://api.github.com/repos/react-boilerplate/react-boilerplate/issues/460/comments",
    "author": "FezVrasta",
    "comments": [
      {
        "user": "mxstbr",
        "created_at": "2016-06-04T13:15:56Z",
        "body": "Yes, but it was easier at the time to simply keep it in the App container for our small example!\n"
      },
      {
        "user": "FezVrasta",
        "created_at": "2016-06-04T13:58:17Z",
        "body": "I see, thanks as usual 🙂\n"
      },
      {
        "user": "mxstbr",
        "created_at": "2016-06-04T14:03:25Z",
        "body": "No worries, keep em coming!\n"
      },
      {
        "user": "lock[bot]",
        "created_at": "2018-05-30T12:47:13Z",
        "body": "This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.\n"
      }
    ]
  },
  {
    "number": 454,
    "title": "State variables.",
    "created_at": "2016-06-02T15:58:46Z",
    "closed_at": "2016-06-04T13:34:20Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/react-boilerplate/react-boilerplate/issues/454",
    "body": "Hello. As far as I understand, state is structured in some kind of substates. For example, in sample application there is async  `HomePage` reducer, which adds `home` variable to state (in addition to `global` and `route`). In this  `home` object only username is stored. When you are loading repositories,  you should load data and show spinner while loading (setting `state.global.loading` variable to `true`). \n\nI understand, that `loading` variable should be global for whole application. Because of it, you need to get access in one reducer to both `loading`and `userData.repositories` variables . That is why you handle `LOAD_REPOS` action on application level (in `App/reducer` not in `HomePage/reducer`). And that is why you have to keep HomePage specific info ( `userData.repositories` variable ) in `state.global`, not in `state.home`. Am I right?\n\nIf I am right, let us imagine, that I have some `BlogPage` container (generated by your generator), which adds `blogPage` section in state. I need to retrieve list of blogs from API and show spinner while I am loading it. For that purpose I need something like this:\n\n```\nfunction blogPageReducer(state = initialState, action) {\n  switch (action.type) {\n    case LOAD_BLOGS:\n          return  state.set('loading', true).\n            setIn(['blogData'],['blogs'],false);\n    case BLOGS_LOADED:\n          return state.setIn(['blogData', 'blogs'], action.blogs)\n                      .set('loading', false);\n    default:\n      return state;\n  }\n}\n```\n\n But as I understand, I can not do this, because I do not know, how to get access to `state.global.loading` variable from '`BlogPage/reducer`'. Only  `blogPage` object is passed in reducer function. That is why I also need to handle `LOAD_BLOGS` in `App/reducer` and add my `blogData` object (with list of blogs) in `state.global` object. Is it normal? How can I get access to `state.global.loading` from '`BlogPage/reducer`'? \n",
    "comments_url": "https://api.github.com/repos/react-boilerplate/react-boilerplate/issues/454/comments",
    "author": "Stalso",
    "comments": [
      {
        "user": "kunal-mandalia",
        "created_at": "2016-06-02T19:46:19Z",
        "body": "I've been fiddling around with this too...was able to get access to state values via the store e.g.\n\n`store.getState().get('global').get('currentUser') // returns false by default, as per app's initial state`\n\nNot sure if this is best practice (I'm sure someone out there can tell us). ~~So in your case if store isn't available, just import it.~~\n"
      },
      {
        "user": "tylerle",
        "created_at": "2016-06-03T20:26:49Z",
        "body": "@kunal-mandalia we don't have store from BlogPage/reducer? How can I get store object from BlogPage/reducer?\n"
      },
      {
        "user": "mxstbr",
        "created_at": "2016-06-04T13:34:20Z",
        "body": "The missing piece here is that with Redux, you can **react to an action with multiple reducers**.\n\nThat means in your `blogPageReducer` you handle the `LOAD_BLOGS` action with `setIn(['blogData'],['blogs'],false);`, and in the `appReducer` you handle the `LOAD_BLOGS` action with `state.set('loading', true)`! The same goes for the `BLOGS_LOADED` action.\n\nHope that answers the question, let me know if you have any more!\n"
      },
      {
        "user": "Stalso",
        "created_at": "2016-06-04T15:10:30Z",
        "body": "Thank you.  It answers the question.  But you hold your `repositories` array in `global` variable of state?  For simplicity? \n"
      },
      {
        "user": "mxstbr",
        "created_at": "2016-06-04T16:26:27Z",
        "body": "Yes, mostly for simplicity since this is a tiny example app!\n"
      },
      {
        "user": "Stalso",
        "created_at": "2016-06-04T16:29:13Z",
        "body": "Thank you Max.  Your template is cool.  I am. Net and Asp. Net developer,  who decided to learn something new,  and your template is awesome starting point \n"
      },
      {
        "user": "mxstbr",
        "created_at": "2016-06-04T16:36:10Z",
        "body": "Thanks, great to hear! Let me know how you get along!\n"
      },
      {
        "user": "Stalso",
        "created_at": "2016-06-04T16:45:37Z",
        "body": "It is is rather unusual for me.  All this node and especially react stuff is some kind of chaos for me,  after structured and rather static .Net world.  Also I am confused with the leak of normal debug (like we do it in  Visual Studio).  But this is funny.  Maybe someday (I believe in it)  Asp.Net Core will become the best backend and with React will become a future of Web \n"
      },
      {
        "user": "lock[bot]",
        "created_at": "2018-05-30T12:47:11Z",
        "body": "This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.\n"
      }
    ]
  },
  {
    "number": 389,
    "title": "Startup problem",
    "created_at": "2016-05-25T13:13:40Z",
    "closed_at": "2016-06-04T19:40:28Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/react-boilerplate/react-boilerplate/issues/389",
    "body": "Clone the repo\nnpm run setup - success\nnpm start\n\nError: no such file or directory\n   at MemoryFileSystem.readFileSync (C:\\Users\\oscar\\projects\\support-engine-ui\\node_modules\\memory-fs\\lib\\MemoryFileSystem.js:107:10)\n   at C:\\Users\\oscar\\projects\\support-engine-ui\\server\\middlewares\\frontendMiddleware.js:25:21\n   at Layer.handle [as handle_request](C:Usersoscarprojectssupport-engine-uinode_modulesexpresslibrouterlayer.js:95:5)\n   at next (C:\\Users\\oscar\\projects\\support-engine-ui\\node_modules\\express\\lib\\router\\route.js:131:13)\n   at Route.dispatch (C:\\Users\\oscar\\projects\\support-engine-ui\\node_modules\\express\\lib\\router\\route.js:112:3)\n   at Layer.handle [as handle_request](C:Usersoscarprojectssupport-engine-uinode_modulesexpresslibrouterlayer.js:95:5)\n   at C:\\Users\\oscar\\projects\\support-engine-ui\\node_modules\\express\\lib\\router\\index.js:277:22\n   at param (C:\\Users\\oscar\\projects\\support-engine-ui\\node_modules\\express\\lib\\router\\index.js:349:14)\n   at param (C:\\Users\\oscar\\projects\\support-engine-ui\\node_modules\\express\\lib\\router\\index.js:365:14)\n   at Function.process_params (C:\\Users\\oscar\\projects\\support-engine-ui\\node_modules\\express\\lib\\router\\index.js:410:3)\n   at next (C:\\Users\\oscar\\projects\\support-engine-ui\\node_modules\\express\\lib\\router\\index.js:271:10)\n   at middleware (C:\\Users\\oscar\\projects\\support-engine-ui\\node_modules\\webpack-hot-middleware\\middleware.js:39:48)\n   at Layer.handle [as handle_request](C:Usersoscarprojectssupport-engine-uinode_modulesexpresslibrouterlayer.js:95:5)\n   at trim_prefix (C:\\Users\\oscar\\projects\\support-engine-ui\\node_modules\\express\\lib\\router\\index.js:312:13)\n   at C:\\Users\\oscar\\projects\\support-engine-ui\\node_modules\\express\\lib\\router\\index.js:280:7\n   at Function.process_params (C:\\Users\\oscar\\projects\\support-engine-ui\\node_modules\\express\\lib\\router\\index.js:330:12)\n",
    "comments_url": "https://api.github.com/repos/react-boilerplate/react-boilerplate/issues/389/comments",
    "author": "clipsmm",
    "comments": [
      {
        "user": "mwksl",
        "created_at": "2016-05-26T22:00:16Z",
        "body": "@mitajunior try running `npm install` and see if that allows you to run the server. It looks like the project is looking for express to use as a server, but can't find it. I've had that issue on new instances of the boilerplate and that seems to fix it. Let me know if that works. \n"
      },
      {
        "user": "mxstbr",
        "created_at": "2016-05-27T18:34:06Z",
        "body": "It definitely looks like a problem in your environment, it works fine on my local machine. Closing for now, feel free to comment again if you run into more specific problems!\n"
      },
      {
        "user": "gkoberger",
        "created_at": "2016-06-04T19:14:40Z",
        "body": "@mxstbr I'm getting this same problem. Brand new OSX machine, and I followed the directions. Have you tried installing `react-boilerplate` recently?\n"
      },
      {
        "user": "mxstbr",
        "created_at": "2016-06-04T19:37:30Z",
        "body": "Oh damn, must've been on a stale version, that's happening for me! Reopening, thanks for commenting @gkoberger, fixing asap!\n"
      },
      {
        "user": "mxstbr",
        "created_at": "2016-06-04T19:40:31Z",
        "body": "Fixed, sorry for the troubles!\n"
      },
      {
        "user": "gkoberger",
        "created_at": "2016-06-05T23:21:25Z",
        "body": "Thanks @mxstbr!\n"
      },
      {
        "user": "lock[bot]",
        "created_at": "2018-05-30T12:47:07Z",
        "body": "This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.\n"
      }
    ]
  },
  {
    "number": 2793,
    "title": "Hot reloading updates?",
    "created_at": "2019-10-25T14:08:51Z",
    "closed_at": "2019-11-21T10:31:06Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/react-boilerplate/react-boilerplate/pull/2793",
    "body": "## React Boilerplate\r\n\r\nIn a few situations, hot reloading isn't working as expected.\r\n\r\nFor example, if you update one of the messages JSON files, the app reloads completely.\r\n\r\nThere's also been a lot of updates to the hot reloading tools lately, in particular to deal with Hooks.\r\n\r\nI thought I'd give a shot at updating the hot reloading setup but... TBH I have no idea what I'm doing here.\r\n\r\nCan anyone help?",
    "comments_url": "https://api.github.com/repos/react-boilerplate/react-boilerplate/issues/2793/comments",
    "author": "julienben",
    "comments": [
      {
        "user": "julienben",
        "created_at": "2019-10-25T14:09:42Z",
        "body": "One of my open questions is do we still need `webpack-hot-middleware`? I don't know where it fits with `react-hot-loader` also in the mix."
      },
      {
        "user": "vineyardbovines",
        "created_at": "2019-10-29T19:06:12Z",
        "body": "I'm so far out of the web game currently that I don't think I could even answer this question 😞 "
      },
      {
        "user": "Can-Sahin",
        "created_at": "2019-11-01T06:34:25Z",
        "body": "@julienben whats the problem here? Is there something not working. I can maybe help if you shortly what is not working right now with this pull request? \r\n\r\n(I spent some good time on hot loaders for typescript in the past so i can give it a a shot)"
      },
      {
        "user": "julienben",
        "created_at": "2019-11-17T13:33:20Z",
        "body": "I'll be honest I'm not sure exactly what's broken. It's just not behaving as you would expect it to (automatic reloading of sagas/reducers/components/language files).\r\n\r\nHot reloading is a bit of a mystery to me. I was hoping someone who has a global understanding of 1. how it works but also 2. how to set it up in a Webpack/React/Redux environment like ours could come in and take a look. "
      },
      {
        "user": "lock[bot]",
        "created_at": "2019-12-24T12:00:19Z",
        "body": "This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs."
      }
    ]
  },
  {
    "number": 1181,
    "title": "i18n select box not updated",
    "created_at": "2016-11-03T08:46:53Z",
    "closed_at": "2017-12-14T01:23:37Z",
    "labels": [
      "bug",
      "help wanted"
    ],
    "url": "https://github.com/react-boilerplate/react-boilerplate/issues/1181",
    "body": "Hi,\r\nI noticed that combo box for language selector is not updated.\r\n\r\n## How to reproduce\r\nSelect `de` for language and german language is not selected in the combo box although content is in german. \r\n\r\n## Other\r\nBtw, how can we put language in the URL so we can send it to someone to look in specific language? Thanks! Very nice boilerplate. ",
    "comments_url": "https://api.github.com/repos/react-boilerplate/react-boilerplate/issues/1181/comments",
    "author": "themre",
    "comments": [
      {
        "user": "mxstbr",
        "created_at": "2016-11-03T08:50:18Z",
        "body": "Arg, that slipped through with the v3.3 release! Would appreciate a PR fixing that.\n"
      },
      {
        "user": "gihrig",
        "created_at": "2016-11-03T16:18:08Z",
        "body": "Also, \n- language selection is lost on Not Found page\n- language selection lost when navigating via address bar\n\nShould the language selection be persisted via cookie? I see that Europe is kinda down on cookies, but is there a better way?\n"
      },
      {
        "user": "mxstbr",
        "created_at": "2016-11-03T16:20:30Z",
        "body": "> Should the language selection be persisted via cookie? I see that Europe is kinda down on cookies, but is there a better way?\n\nI don't quite understand why we would need to do this, it should be saved in the redux state?\n"
      },
      {
        "user": "gihrig",
        "created_at": "2016-11-03T21:24:10Z",
        "body": "> it should be saved in the redux state?\n\nThat sounds ideal, provided that the language selection persists across browser open/close or new tabs. Presently that is not the case. OTOH, I suppose persisting redux state may be beyond the scope of the boilerplate?\n\nAs an example: \n1. Open the home page at `localhost:3000`\n2. Select German language\n3. Open the Features page by editing the URL to `localhost:3000/features`\n\nThe Features page comes up in English.\n"
      },
      {
        "user": "vineyardbovines",
        "created_at": "2017-12-14T01:23:37Z",
        "body": "Closing due to inactivity"
      },
      {
        "user": "lock[bot]",
        "created_at": "2018-05-29T05:18:25Z",
        "body": "This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.\n"
      }
    ]
  },
  {
    "number": 1057,
    "title": "Sagas root template",
    "created_at": "2016-09-29T08:44:19Z",
    "closed_at": "2016-11-02T08:37:14Z",
    "labels": [
      "bug",
      "help wanted"
    ],
    "url": "https://github.com/react-boilerplate/react-boilerplate/issues/1057",
    "body": "Why you use this template in sagas\n\n``` js\nexport function* getReposWatcher() {\n  while (yield take(LOAD_REPOS)) {\n    yield call(getRepos);\n  }\n}\n```\n\ninstead takeEvery or takeLatest helpers?\n",
    "comments_url": "https://api.github.com/repos/react-boilerplate/react-boilerplate/issues/1057/comments",
    "author": "avdeev",
    "comments": [
      {
        "user": "mxstbr",
        "created_at": "2016-09-29T09:30:30Z",
        "body": "Good point, we should definitely be using `fork(takeLatest, LOAD_REPOS, yourSaga)`! (back when those were written that wasn't around, and `while()` was still the default pattern)\n\nWould appreciate a PR changing this!\n"
      },
      {
        "user": "vblazenka",
        "created_at": "2016-10-03T09:12:51Z",
        "body": "I currently have a large project using while(true) pattern, why would I change from while to fork(takeLatest, ..., ...) ? What are advantages?\n"
      },
      {
        "user": "avdeev",
        "created_at": "2016-10-03T18:10:56Z",
        "body": "@wedranb, \nIt's shorter, it's easier, it's a redux-saga style, easy to dispatch payload from action\n"
      },
      {
        "user": "pgdejardin",
        "created_at": "2016-10-18T15:56:08Z",
        "body": "I've switched some sagas functions with `fork(takeLatest, LOAD_REPOS, yourSaga)` and I've noticed that sometimes for one action dispatched (only one logged in redux-dev-tools), there's multiple call of `yourSaga` function.\n\nDoes anyone got this ? I think i've missed something somewhere but can't see where.\n"
      },
      {
        "user": "gkaran",
        "created_at": "2016-10-21T18:18:10Z",
        "body": "@pgdejardin I had this and it was because my sagas were injected twice. Keep that into your mind. An easy way around that is to check when the route changes and cancel your sagas then.\n\n``` js\nfunction* awesomeSaga() {\n  const s = yield fork(takeLatest, LOAD_REPOS, load_repos_saga);\n  yield take(LOCATION_CHANGE);\n  yield cancel(s);\n}\n```\n"
      },
      {
        "user": "avdeev",
        "created_at": "2016-10-25T07:33:30Z",
        "body": "@pgdejardin You may cancel saga at root\n\n``` js\nexport function* authWatcher() {\n  yield fork(takeLatest, AUTH, auth);\n}\n\nexport function* authRoot() {\n  const watcher = yield fork(authWatcher);\n\n  yield take(LOCATION_CHANGE);\n  yield cancel(watcher);\n}\n```\n"
      },
      {
        "user": "pgdejardin",
        "created_at": "2016-10-27T13:23:36Z",
        "body": "@avdeev @gkaran Oh yeah ! Tanks a lot !\n\nI knew it was something like that but I don't know why I didn't thought to cancel the preview watcher...\n\nThank you =)\n"
      },
      {
        "user": "mxstbr",
        "created_at": "2016-11-02T08:37:14Z",
        "body": "Fixed!\n"
      },
      {
        "user": "lock[bot]",
        "created_at": "2018-05-30T02:05:34Z",
        "body": "This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.\n"
      }
    ]
  },
  {
    "number": 1050,
    "title": "de.json not deleted after npm run clean",
    "created_at": "2016-09-28T13:07:04Z",
    "closed_at": "2016-10-02T07:28:03Z",
    "labels": [
      "bug",
      "help wanted"
    ],
    "url": "https://github.com/react-boilerplate/react-boilerplate/issues/1050",
    "body": "I just used `npm run clean` and  the file `/app/translations/de.json` is not being deleted, the `en.json` file is empty but the other one is still there, with the example app translations.\n\nProbably adding `rm('/app/translations/de.json');` to `/internals/scripts/clean.js` would fix it. I could open a pull request if necessary.\n\nCheers.\n",
    "comments_url": "https://api.github.com/repos/react-boilerplate/react-boilerplate/issues/1050/comments",
    "author": "rubenmoya",
    "comments": [
      {
        "user": "mxstbr",
        "created_at": "2016-09-28T14:26:29Z",
        "body": "Sounds reasonable, a PR would be appreciated!\n"
      },
      {
        "user": "chaintng",
        "created_at": "2016-10-02T07:28:03Z",
        "body": "Closed. The fix have already merged.\n"
      },
      {
        "user": "lock[bot]",
        "created_at": "2018-05-30T04:46:47Z",
        "body": "This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.\n"
      }
    ]
  },
  {
    "number": 975,
    "title": "eslint-config-airbnb latest throws lint errors",
    "created_at": "2016-09-11T00:42:15Z",
    "closed_at": "2016-09-12T18:55:34Z",
    "labels": [
      "help wanted",
      "PR welcome"
    ],
    "url": "https://github.com/react-boilerplate/react-boilerplate/issues/975",
    "body": "As mentioned in #974, updating eslint-config-airbnb to latest throws many lint errors.\n\nIt would wonderful if someone with the time could research and correct these errors and open a PR.\n\n  Node 6.4.0\nnpm 3.10.6\nMac OS 10.11.6\nChrome 53.0.2785.101 (64-bit)\n\n`eslint-config-airbnb    10.0.1  →  11.0.0`\n\nLint Errors:\n\n``` bash\n~/react-bp/app/components/A/index.js\n  11:5   error  Anchors must have content and the content must be accessible by a screen reader  jsx-a11y/anchor-has-content\n  22:9   error  'href' PropType is defined but prop is never used                                react/no-unused-prop-types\n  23:11  error  'target' PropType is defined but prop is never used                              react/no-unused-prop-types\n  24:13  error  'children' PropType is defined but prop is never used                            react/no-unused-prop-types\n\n~/react-bp/app/components/List/index.js\n  30:3  error  Prop type `array` is forbidden  react/forbid-prop-types\n\n~/react-bp/app/components/ListItem/index.js\n  17:3  error  Prop type `any` is forbidden  react/forbid-prop-types\n\n~/react-bp/app/components/Toggle/index.js\n  32:3  error  Prop type `array` is forbidden   react/forbid-prop-types\n  33:3  error  Prop type `object` is forbidden  react/forbid-prop-types\n\n~/react-bp/app/components/ToggleOption/index.js\n  18:3  error  Prop type `object` is forbidden  react/forbid-prop-types\n\n~/react-bp/app/containers/LanguageProvider/index.js\n  27:3  error  Prop type `object` is forbidden  react/forbid-prop-types\n\n~/react-bp/app/containers/RepoListItem/index.js\n  59:3  error  Prop type `object` is forbidden  react/forbid-prop-types\n\n~/react-bp/internals/templates/homePage/homePage.js\n  18:9  error  Expected 'this' to be used by class method 'render'  class-methods-use-this\n\n~/react-bp/internals/templates/languageProvider/languageProvider.js\n  27:3  error  Prop type `object` is forbidden  react/forbid-prop-types\n\n~/react-bp/internals/templates/notFoundPage/notFoundPage.js\n  18:9  error  Expected 'this' to be used by class method 'render'  class-methods-use-this\n\n\n\n```\n",
    "comments_url": "https://api.github.com/repos/react-boilerplate/react-boilerplate/issues/975/comments",
    "author": "gihrig",
    "comments": [
      {
        "user": "mxstbr",
        "created_at": "2016-09-12T18:29:42Z",
        "body": "Done by the amazing @peter-mouland in \n"
      },
      {
        "user": "lock[bot]",
        "created_at": "2018-05-30T06:46:47Z",
        "body": "This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.\n"
      }
    ]
  },
  {
    "number": 188,
    "title": "Branding",
    "created_at": "2016-02-22T03:48:29Z",
    "closed_at": "2016-03-11T09:43:09Z",
    "labels": [
      "enhancement",
      "help wanted"
    ],
    "url": "https://github.com/react-boilerplate/react-boilerplate/issues/188",
    "body": "The current \"Features\" section is way outdated. For v3 I think we should focus less on the modules being used, and more on the things that these modules enable. \n",
    "comments_url": "https://api.github.com/repos/react-boilerplate/react-boilerplate/issues/188/comments",
    "author": "mxstbr",
    "comments": [
      {
        "user": "mxstbr",
        "created_at": "2016-02-24T04:42:26Z",
        "body": "Some of the things this boilerplate does (well) or focusses on: (This ties into #161)\n- Developer Experience (Hot-reloading, performance focus with automatic code-splitting, PageSpeed Insights right from the CLI,...)\n- Generators (in the `npm run generate` sense of the word)\n- Offline Compatibility\n- Domain Driven Development (Component encapsulation)\n- Easily Testing\n- Highly Scalable\n- Takes care of a lot of details (hot-reloading reducers, code-splitting routes,...)\n"
      },
      {
        "user": "mxstbr",
        "created_at": "2016-02-26T04:09:30Z",
        "body": "Initial efforts at #196 by @oliverturner!\n"
      },
      {
        "user": "lock[bot]",
        "created_at": "2018-05-30T15:47:25Z",
        "body": "This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.\n"
      }
    ]
  },
  {
    "number": 161,
    "title": "Tagline",
    "created_at": "2016-02-12T14:54:53Z",
    "closed_at": "2016-04-06T11:52:06Z",
    "labels": [
      "help wanted",
      "discussion"
    ],
    "url": "https://github.com/react-boilerplate/react-boilerplate/issues/161",
    "body": "The tagline of this boilerplate up to v2 was\n\n> \"Quick setup for performance orientated, offline-first React.js applications featuring Redux, hot-reloading, PostCSS, react-router, ServiceWorker, AppCache, FontFaceObserver and Mocha\"\n\nThat's a nice, short description, which is reinforced in the README and other documentation. With v3 though, we've made some big changes and the above tagline doesn't really describe the focus of this boilerplate anymore. We need a new one.\n\n---\n\nThe main ideological change is that the boilerplate now focusses on being **the best foundation to start your big applications with**. We've adopted a new structure and made a few other improvements that help massive applications manage their scale:\n- We've added tools such as reselect, ImmutableJS and react-pure-render to help manage frontend performance for large-scale applications.\n- We've added improvements to the usability of the boilerplate itself, which includes remote testing with `npm run serve`, generating containers, components, routes etc. with `npm run generate`, etc.\n- We made the boilerplate bulletproof, fixing dozens of issues that can only be found with real world usage.\n- We've made the webpack configuration even better with chunking (code splitting) and more fixes.\n\n(see #123 for the full list of changes) \n\nI'm really not sure what the focus of our \"branding\" of v3 should be. What do you think?\n",
    "comments_url": "https://api.github.com/repos/react-boilerplate/react-boilerplate/issues/161/comments",
    "author": "mxstbr",
    "comments": [
      {
        "user": "mxstbr",
        "created_at": "2016-02-12T21:54:38Z",
        "body": "We should probably also highlight our focus on giving the users the best development experience possible with hot-reloading, generators etc. This boilerplate makes it easy and fast to build great applications, maybe that should be the main focus of the tagline?\n\nFirst possible idea:\n\n> Kickstart your new project with the best development experience, a highly scalable and solid foundation and a focus on performance and offline access.\n\nThat's not very catchy though...\n"
      },
      {
        "user": "willklein",
        "created_at": "2016-02-13T01:25:25Z",
        "body": "I love where this is going! Your bold description really caught my attention:\n\n> ...the best foundation to start your big applications with...\n\nI personally prefer something more succinct, the tagline doesn't need to over-sell. Maybe something like:\n- A foundation for big applications\n- A foundation for developers writing big applications\n- A performance-oriented, developer-friendly foundation for serious apps\n- Next-level developer experience for great applications\n\n:smile: \n"
      },
      {
        "user": "mxstbr",
        "created_at": "2016-02-13T01:39:53Z",
        "body": "We need to show people through the tagline why they should choose react-boilerplate over any of the other starter projects. It's the first (and maybe only) thing they see of it, before they see anything else.\n\nSaying \"A foundation for big applications\" is fair and probably the most honest tagline one could have, but does it really intrigue you enough to click on the link to it? I don't think so...\n"
      },
      {
        "user": "mxstbr",
        "created_at": "2016-02-28T15:35:02Z",
        "body": "What about this:\n\n<div align=\"center\"><strong>Start your next react project in seconds</strong></div>\n\n<div align=\"center\">A scalable foundation with the best DX and a focus on performance and best practices</div>\n"
      },
      {
        "user": "mxstbr",
        "created_at": "2016-03-08T07:16:33Z",
        "body": "Adding offline-first back in, slight wording change...\n\n<div align=\"center\"><strong>Start your next react project in seconds</strong></div>\n\n<div align=\"center\">A highly scalable, offline-first foundation with the best DX and a focus on performance and best practices</div>\n"
      },
      {
        "user": "oliverturner",
        "created_at": "2016-03-08T07:51:36Z",
        "body": "Liking it: punchy, succinct, appealing. \n"
      },
      {
        "user": "mxstbr",
        "created_at": "2016-03-11T10:11:27Z",
        "body": "I can't think of a way to make this better, if nobody has any suggestions I'll close this issue and add the tagline everywhere tomorrow!\n"
      },
      {
        "user": "oliverturner",
        "created_at": "2016-03-11T10:50:11Z",
        "body": "My only reservation is around the \"scalable\" statement: what makes it so? How is it _highly_ so? Can the value be more explicitly/clearly expressed?\nEverything else is good.\n"
      },
      {
        "user": "mxstbr",
        "created_at": "2016-03-11T11:01:16Z",
        "body": "Hmm, good point. It is _highly_ scalable because it _should_ be able to scale to a massively sized frontend. (i.e. 1000's of components and pages)\n\nThe scalability mostly refers to the architecture we chose, so maybe adding that in makes it better? It seems very long now though:\n\n> An offline-first foundation with a highly scalable architecture, the best DX and a focus on performance and best practices\n"
      },
      {
        "user": "oliverturner",
        "created_at": "2016-03-11T11:07:13Z",
        "body": "I guess my issue with \"scalable\" is that it's a term more often used in the context of infrastructure than architecture...\n\nWhat about \n\"An offline-first foundation for apps of any size, with a focus on DX, performance and best practice\"\n"
      },
      {
        "user": "mxstbr",
        "created_at": "2016-03-11T19:49:32Z",
        "body": "I kind of like the \"A highly scalable, offline first foundation...\" though, it has a really nice ring and sounds very appealing – though it might just be my non-native ears.\n"
      },
      {
        "user": "mxstbr",
        "created_at": "2016-04-06T11:52:06Z",
        "body": "Added to the README!\n"
      },
      {
        "user": "lock[bot]",
        "created_at": "2018-05-30T14:47:41Z",
        "body": "This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.\n"
      }
    ]
  },
  {
    "number": 44,
    "title": "Meteorjs Integration (Feature Request)",
    "created_at": "2015-12-27T11:03:41Z",
    "closed_at": "2015-12-31T18:19:17Z",
    "labels": [
      "enhancement",
      "help wanted",
      "discussion"
    ],
    "url": "https://github.com/react-boilerplate/react-boilerplate/issues/44",
    "body": "Has anyone tried to integrate meteorjs with this one ? \n",
    "comments_url": "https://api.github.com/repos/react-boilerplate/react-boilerplate/issues/44/comments",
    "author": "okpatil4u",
    "comments": [
      {
        "user": "mxstbr",
        "created_at": "2015-12-27T11:05:51Z",
        "body": "Good idea, I personally haven't but I'd love to see somebody try!\n"
      },
      {
        "user": "lock[bot]",
        "created_at": "2018-05-30T18:40:22Z",
        "body": "This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.\n"
      }
    ]
  },
  {
    "number": 39,
    "title": "Add PREREQUISITES.md",
    "created_at": "2015-12-25T17:16:16Z",
    "closed_at": "2015-12-26T10:04:41Z",
    "labels": [
      "enhancement",
      "help wanted"
    ],
    "url": "https://github.com/react-boilerplate/react-boilerplate/issues/39",
    "body": "Add `PREREQUISITES.md` for complete beginners, which explains/links to guide that explain how to install and use node, npm, git,...\n",
    "comments_url": "https://api.github.com/repos/react-boilerplate/react-boilerplate/issues/39/comments",
    "author": "mxstbr",
    "comments": [
      {
        "user": "mxstbr",
        "created_at": "2015-12-26T10:04:41Z",
        "body": "Actually ties into #14, going to close this and add it to there. \n"
      },
      {
        "user": "lock[bot]",
        "created_at": "2018-05-30T18:40:36Z",
        "body": "This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.\n"
      }
    ]
  },
  {
    "number": 30,
    "title": "The old version of the code persists quite long",
    "created_at": "2015-12-19T10:08:33Z",
    "closed_at": "2015-12-31T18:22:17Z",
    "labels": [
      "bug",
      "help wanted"
    ],
    "url": "https://github.com/react-boilerplate/react-boilerplate/issues/30",
    "body": "The old version of the app persists quite long because of AppCache + ServiceWorker. There should be some sort of forced-update mechanism, I have to research that.\n",
    "comments_url": "https://api.github.com/repos/react-boilerplate/react-boilerplate/issues/30/comments",
    "author": "mxstbr",
    "comments": [
      {
        "user": "lock[bot]",
        "created_at": "2018-05-30T18:40:18Z",
        "body": "This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.\n"
      }
    ]
  },
  {
    "number": 29,
    "title": "npm command for running a server that shows the built version",
    "created_at": "2015-12-19T08:31:40Z",
    "closed_at": "2015-12-21T07:49:27Z",
    "labels": [
      "enhancement",
      "help wanted"
    ],
    "url": "https://github.com/react-boilerplate/react-boilerplate/issues/29",
    "body": "That would be useful for browser testing of the app-to-be-deployed, could also run on `0.0.0.0` so the app can be tested on different devices in the local network.\n",
    "comments_url": "https://api.github.com/repos/react-boilerplate/react-boilerplate/issues/29/comments",
    "author": "mxstbr",
    "comments": [
      {
        "user": "lock[bot]",
        "created_at": "2018-05-30T18:40:42Z",
        "body": "This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.\n"
      }
    ]
  },
  {
    "number": 24,
    "title": "Migrate to Babel 6",
    "created_at": "2015-12-17T21:13:32Z",
    "closed_at": "2015-12-18T13:58:40Z",
    "labels": [
      "bug",
      "help wanted"
    ],
    "url": "https://github.com/react-boilerplate/react-boilerplate/issues/24",
    "body": "",
    "comments_url": "https://api.github.com/repos/react-boilerplate/react-boilerplate/issues/24/comments",
    "author": "mxstbr",
    "comments": [
      {
        "user": "lock[bot]",
        "created_at": "2018-05-30T18:40:46Z",
        "body": "This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.\n"
      }
    ]
  },
  {
    "number": 21,
    "title": "Find and remove all eslint errors",
    "created_at": "2015-12-17T13:40:26Z",
    "closed_at": "2015-12-17T16:09:26Z",
    "labels": [
      "bug",
      "help wanted"
    ],
    "url": "https://github.com/react-boilerplate/react-boilerplate/issues/21",
    "body": "There are a lot of `eslint` errors all around, should find and remove them.\n",
    "comments_url": "https://api.github.com/repos/react-boilerplate/react-boilerplate/issues/21/comments",
    "author": "mxstbr",
    "comments": [
      {
        "user": "lock[bot]",
        "created_at": "2018-05-30T18:40:50Z",
        "body": "This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.\n"
      }
    ]
  },
  {
    "number": 18,
    "title": "Name/Logo/Website",
    "created_at": "2015-12-17T10:23:16Z",
    "closed_at": "2016-01-26T16:21:26Z",
    "labels": [
      "enhancement",
      "help wanted"
    ],
    "url": "https://github.com/react-boilerplate/react-boilerplate/issues/18",
    "body": "Thinking about taking on a better name/adding a logo/making a website with collected documentation. Not sure the project is mature enough just yet, but it's on my roadmap. Any input appreciated!\n",
    "comments_url": "https://api.github.com/repos/react-boilerplate/react-boilerplate/issues/18/comments",
    "author": "mxstbr",
    "comments": [
      {
        "user": "mxstbr",
        "created_at": "2016-01-26T16:21:26Z",
        "body": "Split up into two smaller parts: #121 (Logo) and #122 (Website).\n"
      },
      {
        "user": "lock[bot]",
        "created_at": "2018-05-30T17:40:16Z",
        "body": "This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.\n"
      }
    ]
  },
  {
    "number": 16,
    "title": "Add the stylesheet to the index.html on build automatically",
    "created_at": "2015-12-17T09:46:27Z",
    "closed_at": "2015-12-17T12:28:54Z",
    "labels": [
      "bug",
      "help wanted"
    ],
    "url": "https://github.com/react-boilerplate/react-boilerplate/issues/16",
    "body": "Right now, before deploying you have to add this line to the index.html:\n\n``` HTML\n<link rel=\"stylesheet\" href=\"css/main.css\">\n```\n\nThat should be done automatically.\n",
    "comments_url": "https://api.github.com/repos/react-boilerplate/react-boilerplate/issues/16/comments",
    "author": "mxstbr",
    "comments": [
      {
        "user": "lock[bot]",
        "created_at": "2018-05-30T18:41:04Z",
        "body": "This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.\n"
      }
    ]
  },
  {
    "number": 15,
    "title": "Fix Open Sans @font-face",
    "created_at": "2015-12-17T09:41:30Z",
    "closed_at": "2015-12-17T12:41:14Z",
    "labels": [
      "bug",
      "help wanted",
      "beginner"
    ],
    "url": "https://github.com/react-boilerplate/react-boilerplate/issues/15",
    "body": "",
    "comments_url": "https://api.github.com/repos/react-boilerplate/react-boilerplate/issues/15/comments",
    "author": "mxstbr",
    "comments": [
      {
        "user": "lock[bot]",
        "created_at": "2018-05-30T18:41:02Z",
        "body": "This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.\n"
      }
    ]
  },
  {
    "number": 9,
    "title": "Cache CSS file with ServiceWorker",
    "created_at": "2015-12-16T22:21:34Z",
    "closed_at": "2015-12-17T14:45:48Z",
    "labels": [
      "bug",
      "help wanted",
      "beginner"
    ],
    "url": "https://github.com/react-boilerplate/react-boilerplate/issues/9",
    "body": "",
    "comments_url": "https://api.github.com/repos/react-boilerplate/react-boilerplate/issues/9/comments",
    "author": "mxstbr",
    "comments": [
      {
        "user": "lock[bot]",
        "created_at": "2018-05-30T18:40:58Z",
        "body": "This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.\n"
      }
    ]
  }
]