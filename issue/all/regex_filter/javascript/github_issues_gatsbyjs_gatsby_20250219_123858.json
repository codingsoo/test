[
  {
    "number": 23023,
    "title": "refactor(www): Make the dot-org sidebar into a function component",
    "created_at": "2020-04-11T00:59:28Z",
    "closed_at": "2020-04-18T00:34:22Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/gatsbyjs/gatsby/issues/23023",
    "body": "## Description\r\n\r\nTurn www/src/components/sidebar/sidebar.js into a function component.\r\n\r\n## Motivation\r\n\r\nThe sidebar performance is really slow: #21533. Changing it to a function component with hooks would let us reason about the state updates better, and would prevent gotchas that are present in class components.\r\n\r\nSidebar performance is also an issue for localization: #20587. We're going to have to add more functionality in order to make the sidebar localizable and it's easier to do that with an updated codebase.",
    "comments_url": "https://api.github.com/repos/gatsbyjs/gatsby/issues/23023/comments",
    "author": "tesseralis",
    "comments": [
      {
        "user": "Gerigot",
        "created_at": "2020-04-11T16:43:23Z",
        "body": "Hi, I'm interested in trying porting this from component class to a function component, I'm reading all the contributing guidelines.\r\nI'll open a pull request when and if I finish something."
      },
      {
        "user": "Gerigot",
        "created_at": "2020-04-14T18:47:40Z",
        "body": "I see that it has been done so I'll stop working on it. I'll check out the new version and see if I can find something "
      }
    ]
  },
  {
    "number": 20769,
    "title": "[docs] Use soft-line wraps for all markdown pages.",
    "created_at": "2020-01-22T02:35:22Z",
    "closed_at": "2020-01-28T00:15:17Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/gatsbyjs/gatsby/issues/20769",
    "body": "## Description\r\n\r\nThere are a couple of (mostly older) markdown pages that still use hard line wraps for paragraphs. This poses a problem for localization, since the lines will be split up and it will be a hassle to track.\r\n\r\nWe should convert these to use soft line wraps like most of the gatsby docs for easier readibily, maintainability, and translation.\r\n\r\n## Example\r\n\r\nFrom how-shadowing-works.md:\r\n\r\n```md\r\nShadowing is a powerful feature that allows theme users to override components,\r\nobjects, and anything else in a theme's `src` directory.\r\n```\r\n\r\nBut it should be:\r\n\r\n```md\r\nShadowing is a powerful feature that allows theme users to override components, objects, and anything else in a theme's `src` directory.\r\n```",
    "comments_url": "https://api.github.com/repos/gatsbyjs/gatsby/issues/20769/comments",
    "author": "tesseralis",
    "comments": [
      {
        "user": "dvrylc",
        "created_at": "2020-01-23T09:22:37Z",
        "body": "I can help with this! "
      }
    ]
  },
  {
    "number": 20631,
    "title": "Include details on blog post fields on gatsby-theme-blog",
    "created_at": "2020-01-15T21:37:59Z",
    "closed_at": "2020-01-17T04:27:38Z",
    "labels": [
      "help wanted",
      "type: documentation"
    ],
    "url": "https://github.com/gatsbyjs/gatsby/issues/20631",
    "body": "#  Summary\r\n\r\nWhen installing and using the gatsby-theme-blog, details past initial installation and configuration are absent. The user has to guess the fields or look through source code to find what blog post fields are available or even required for the theme to work.\r\n\r\nAppending information on the blog post fields to the existing readme files of gatsby-theme-blog-core and gatsby-theme-blog should help solve this issue.\r\n\r\n### Motivation\r\n\r\nWe should document this to ensure a smooth theme installation and usage and uphold a standard of giving users all the important information.\r\n\r\n### Draft the doc\r\n\r\n#### Blog Post Fields\r\n\r\nThe following are the defined blog post fields based on the node interface in the schema\r\n\r\n| Field    | Type     |\r\n| -------- | -------- |\r\n| id       | String   |\r\n| title    | String   |\r\n| body     | String   |\r\n| slug     | String   |\r\n| date     | Date     |\r\n| tags     | String[] |\r\n| keywords | String[] |\r\n| excerpt  | String   |\r\n",
    "comments_url": "https://api.github.com/repos/gatsbyjs/gatsby/issues/20631/comments",
    "author": "Phizzard",
    "comments": [
      {
        "user": "blainekasten",
        "created_at": "2020-01-16T20:20:26Z",
        "body": "Looks awesome, interested submitting a PR? ❤️ "
      },
      {
        "user": "Phizzard",
        "created_at": "2020-01-17T01:58:37Z",
        "body": "I have 2 separate PRs already submitted!\r\n\r\n- gatsby-theme-blog #20632 (Has 1 approval, waiting for 1 more)\r\n- gatsby-theme-blog-core #20633 (Has 0 approval, waiting for 2)\r\n"
      },
      {
        "user": "blainekasten",
        "created_at": "2020-01-17T04:28:29Z",
        "body": "MERGED AND THANK YOU!!"
      }
    ]
  },
  {
    "number": 19225,
    "title": "Command gatbsy develop with https option fails if no name is specified in package.json",
    "created_at": "2019-11-02T14:35:42Z",
    "closed_at": "2019-11-06T13:29:22Z",
    "labels": [
      "type: bug",
      "help wanted"
    ],
    "url": "https://github.com/gatsbyjs/gatsby/issues/19225",
    "body": "## Description\r\n\r\nThe command `gatbsy develop` with https option (-S) fails if no name is specified in the package.json file.\r\n\r\n### Steps to reproduce\r\n\r\n1. gatbsy new site\r\n2. remove \"name\" from package.json\r\n3. run `gatsby develop -S`\r\n\r\n### Expected result\r\n\r\nThe development server using https should start.\r\n\r\n### Actual result\r\n\r\nUncaught error.\r\n```\r\n ERROR \r\n\r\nUNHANDLED REJECTION Cannot read property 'replace' of undefined\r\n\r\n\r\n\r\n  TypeError: Cannot read property 'replace' of undefined\r\n\r\n  - develop.js:391 module.exports\r\n    .../[gatsby]/dist/commands/develop.js:391:42\r\n\r\n  - next_tick.js:68 process._tickCallback\r\n    internal/process/next_tick.js:68:7\r\n```\r\n\r\n### Environment\r\n\r\n```\r\n  System:\r\n    OS: Windows 10\r\n    CPU: (12) x64 Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz\r\n  Binaries:\r\n    npm: 6.4.1 - C:\\Program Files\\nodejs\\npm.CMD\r\n  Languages:\r\n    Python: 2.7.15 - /c/Python27/python\r\n  Browsers:\r\n    Edge: 44.18362.387.0\r\n  npmPackages:\r\n    gatsby: ^2.17.6 => 2.17.6 \r\n    gatsby-image: ^2.2.30 => 2.2.30 \r\n    gatsby-plugin-manifest: ^2.2.25 => 2.2.25 \r\n    gatsby-plugin-netlify: ^2.1.23 => 2.1.23 \r\n    gatsby-plugin-nprogress: ^2.1.12 => 2.1.12 \r\n    gatsby-plugin-offline: ^3.0.17 => 3.0.17 \r\n    gatsby-plugin-react-helmet: ^3.1.13 => 3.1.13 \r\n    gatsby-plugin-react-svg: ^2.1.2 => 2.1.2 \r\n    gatsby-plugin-robots-txt: ^1.5.0 => 1.5.0 \r\n    gatsby-plugin-sharp: ^2.2.34 => 2.2.34 \r\n    gatsby-plugin-sitemap: ^2.2.19 => 2.2.19 \r\n    gatsby-source-filesystem: ^2.1.35 => 2.1.35 \r\n    gatsby-transformer-sharp: ^2.3.1 => 2.3.1 \r\n```\r\n",
    "comments_url": "https://api.github.com/repos/gatsbyjs/gatsby/issues/19225/comments",
    "author": "janschloss",
    "comments": [
      {
        "user": "LekoArts",
        "created_at": "2019-11-05T10:12:41Z",
        "body": "Thanks for the issue! Would you be up for creating a PR fixing this problem?"
      }
    ]
  },
  {
    "number": 19036,
    "title": "Make website components used in MDX files globally available",
    "created_at": "2019-10-26T07:03:32Z",
    "closed_at": "2020-01-22T19:15:29Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/gatsbyjs/gatsby/issues/19036",
    "body": "## Summary\r\n\r\nMake website components used in MDX files globally available through gatsby-plugin-theme-ui.\r\n\r\n## Motivation\r\n\r\nThe only way to import components in MDX is to use relative paths, which breaks when pulling in content from translation repos.\r\n\r\n## Components to make global\r\n\r\n* LayerModel\r\n* HorizontalNavList\r\n* EmailCaptureForm\r\n* APIReference\r\n\r\nIn addition, there are several components imported in `contributing/docs-and-website-components.md` which are only ever used as a demonstration that they *can* be imported. This isn't as high priority. There's also the examples in the \"data-fetching\" page.\r\n\r\n## Already globally available\r\n\r\n* GuideList\r\n* EggheadEmbed\r\n\r\n## Related Issues\r\n\r\n* #19035 - This will create new components with GraphQL queries in them",
    "comments_url": "https://api.github.com/repos/gatsbyjs/gatsby/issues/19036/comments",
    "author": "tesseralis",
    "comments": [
      {
        "user": "Qovaros985",
        "created_at": "2019-11-18T18:48:33Z",
        "body": "@tesseralis, could I work on this issue?"
      },
      {
        "user": "tesseralis",
        "created_at": "2019-12-05T23:11:08Z",
        "body": "@Qovaros985 sure, go ahead if you still want to!"
      }
    ]
  },
  {
    "number": 18514,
    "title": "NO_COLOR does not work with Ink ",
    "created_at": "2019-10-11T13:35:45Z",
    "closed_at": "2019-10-22T13:35:33Z",
    "labels": [
      "type: bug",
      "help wanted"
    ],
    "url": "https://github.com/gatsbyjs/gatsby/issues/18514",
    "body": "Ink uses chalk internally which does a bunch of magic to figure out whether to render colours or not. \r\n\r\nIn /packages/gatsby-cli/src/reporter/index.js we try to set `FORCE_COLOR` to 0 but that is too late because chalk has already initialised and set colours to true. ",
    "comments_url": "https://api.github.com/repos/gatsbyjs/gatsby/issues/18514/comments",
    "author": "sidharthachatterjee",
    "comments": [
      {
        "user": "jmsv",
        "created_at": "2019-10-19T15:27:30Z",
        "body": "@sidharthachatterjee I think the PR referenced above should fix this, although not sure how to test. Do you have repro steps for attempting to disable colours?"
      },
      {
        "user": "jmsv",
        "created_at": "2019-10-19T15:32:50Z",
        "body": "nvm, didn't see the other PR :smile: will close"
      },
      {
        "user": "sidharthachatterjee",
        "created_at": "2019-10-22T13:55:20Z",
        "body": "@jmsv Sorry for missing your comment! \r\n\r\nFixed and published in `gatsby-cli@2.8.4` thanks to @Mrigank11 "
      }
    ]
  },
  {
    "number": 15748,
    "title": "[gatsby-plugin-sharp] Incorrect require path to cpu detection module.",
    "created_at": "2019-07-15T15:51:59Z",
    "closed_at": "2019-07-17T15:49:08Z",
    "labels": [
      "type: bug",
      "help wanted",
      "status: confirmed"
    ],
    "url": "https://github.com/gatsbyjs/gatsby/issues/15748",
    "body": "## Description\r\nWithin process-file.js, there's a `require` statement that's pointing to maybe an old path to where cpu-core-count.js should be. It should be changed to `gatsby/dist/utils/worker/cpu-core-count`. By default, sharp uses the number of CPUs it detects, but this logic could be different than what Gatsby defines as the number of CPUs in cpu-core-count.js.\r\n\r\n### Steps to reproduce\r\nThis doesn't really have a reproducible step, as it's just code that isn't being used due to a bad path with no caught error logged.\r\n\r\n### Expected result\r\nEither the error that happens due to the path being bad is caught and reported to screen, or the path is updated and cpu-core-count.js is used, allowing `sharp.concurrency` to be set to the value of cpuCoreCount from the cpu-core-count.js file.\r\n`sharp.concurrency` should then return the value from the cpu-core-count.js file once it's been set the first time.\r\n\r\n### Actual result\r\n`sharp.concurrency` returns the number of CPUs it detected after being failing to be set by cpu-core-count.js.\r\n\r\n### Environment\r\n*NOTE* While the packages don't list gatsby's sharp plugins, it's only because I removed those and added them back in as local plugins so I could experiment/test things out on them, which is how I discovered this bug.\r\n\r\n  System:\r\n    OS: macOS 10.14.5\r\n    CPU: (12) x64 Intel(R) Core(TM) i7-8850H CPU @ 2.60GHz\r\n    Shell: 5.3 - /bin/zsh\r\n  Binaries:\r\n    Node: 12.4.0 - ~/.nvm/versions/node/v12.4.0/bin/node\r\n    Yarn: 1.16.0 - /usr/local/bin/yarn\r\n    npm: 6.9.0 - ~/.nvm/versions/node/v12.4.0/bin/npm\r\n  Languages:\r\n    Python: 2.7.10 - /usr/bin/python\r\n  Browsers:\r\n    Chrome: 75.0.3770.100\r\n    Safari: 12.1.1\r\n  npmPackages:\r\n    gatsby: ^2.10.0 => 2.13.17 \r\n    gatsby-image: ^2.2.1 => 2.2.6 \r\n    gatsby-plugin-feed: ^2.3.0 => 2.3.4 \r\n    gatsby-plugin-manifest: ^2.2.0 => 2.2.3 \r\n    gatsby-plugin-netlify: ^2.1.0 => 2.1.2 \r\n    gatsby-plugin-netlify-cache: ^1.2.0 => 1.2.0 \r\n    gatsby-plugin-offline: ^2.2.0 => 2.2.3 \r\n    gatsby-plugin-react-helmet: ^3.1.0 => 3.1.2 \r\n    gatsby-plugin-sass: ^2.1.0 => 2.1.3 \r\n    gatsby-source-drupal: ^3.2.5 => 3.2.6 \r\n    gatsby-source-filesystem: ^2.1.0 => 2.1.5 \r\n    gatsby-transformer-json: ^2.2.0 => 2.2.2 \r\n",
    "comments_url": "https://api.github.com/repos/gatsbyjs/gatsby/issues/15748/comments",
    "author": "smurrayatwork",
    "comments": [
      {
        "user": "sidharthachatterjee",
        "created_at": "2019-07-16T00:24:35Z",
        "body": "Great catch @smurrayatwork \r\n\r\nWant to open a PR fixing this with the new path?"
      },
      {
        "user": "smurrayatwork",
        "created_at": "2019-07-17T14:13:10Z",
        "body": "@sidharthachatterjee What version of node should I be using for that PR?"
      }
    ]
  },
  {
    "number": 15305,
    "title": "feat(gatsby/schema): Allow defining child relationships through metadata",
    "created_at": "2019-07-02T10:19:38Z",
    "closed_at": "2019-07-18T08:46:14Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/gatsbyjs/gatsby/issues/15305",
    "body": "## Summary\r\n\r\nSchema customization allows defining all kind of types and fields, except for the fields created through child/parent relationships. Defining child convenience fields isn't a good thing to do on parent level, therefore it needs to be done from a child point of view and we currently don't have any backreference mechanism in place. This issue defines API that transformers can use to specify child/parent relationships on type level, rather than node level.\r\n\r\n### Basic example\r\n\r\n```\r\n// Generic parent children relationship\r\ntype SomeParent implements Node @infer {\r\n  id\r\n}\r\n\r\ntype SomeChild implements Node @infer @childOf(types: ['SomeParent']) {\r\n  id\r\n}\r\n\r\n// Mime type based relationships\r\n\r\n// File has all mimeTypes\r\ntype File implements Node @infer @mimeTypes {\r\n  id\r\n}\r\n\r\ntype SomeMarkdownType implements Node @infer @mimeTypes(types: ['text/markdown']) {\r\n  id\r\n}\r\n\r\ntype MarkdownRemark implements Node @infer @childOf(mimeTypes: ['text/markdown']) {\r\n  id\r\n}\r\n\r\ntype ImageSharp implements Node @infer @childOf(mimeTypes: ['image/jpeg']) {\r\n  id\r\n}\r\n```\r\n\r\n### Detailed explanation\r\n\r\nAdd `mimeTypes` extensions to types, that define possible mime types for that type.\r\n\r\nAdd `childOf` extension, that allows specifying that a type can be a child of either some type or a type with a particular mimeType. This allows for extensible parent/child relationship that aren't bound to `File`. We special case `File` to have all mimeTypes.\r\n\r\nWhen we create child convenient fields, we add them not only based on nodes, but also based on the above system. @infer/@dontInfer start affecting this, with @dontInfer only adding explicit children.\r\n",
    "comments_url": "https://api.github.com/repos/gatsbyjs/gatsby/issues/15305/comments",
    "author": "freiksenet",
    "comments": [
      {
        "user": "pauleveritt",
        "created_at": "2019-10-17T16:45:18Z",
        "body": "Should this work with deletion of the parent?\r\n\r\nI have a parent-child transformer working using:\r\n\r\n```javascript\r\n        createParentChildLink({\r\n            parent: node,\r\n            child: resourceNode\r\n        });\r\n```\r\n\r\nWhen I comment out that line, and add `@childOf(types: [\"Mdx\"])` on my type, my queries fail to grab the parent (and don't delete the child.)"
      }
    ]
  },
  {
    "number": 15287,
    "title": "chore(gatsby-source-filesystem): Deprecate multiple different versions of birth time on File ",
    "created_at": "2019-07-01T19:09:09Z",
    "closed_at": "2019-07-13T20:45:20Z",
    "labels": [
      "help wanted",
      "good first issue"
    ],
    "url": "https://github.com/gatsbyjs/gatsby/issues/15287",
    "body": "@pieh and I noticed that we have three different versions of birth time in File \r\n\r\n- birthTime\r\n- birthtime\r\n- birthtimeMs\r\n\r\nProbably want to clean this up at some point 😂 ",
    "comments_url": "https://api.github.com/repos/gatsbyjs/gatsby/issues/15287/comments",
    "author": "sidharthachatterjee",
    "comments": [
      {
        "user": "spences10",
        "created_at": "2019-07-01T20:06:04Z",
        "body": "What's the work involved in this @sidharthachatterjee? "
      },
      {
        "user": "KyleAMathews",
        "created_at": "2019-07-01T21:00:53Z",
        "body": "No one noticed before @pieh went and added that explorer sidebar!!! 😅 "
      },
      {
        "user": "sidharthachatterjee",
        "created_at": "2019-07-01T22:08:14Z",
        "body": "@spences10 We'll probably want to \r\n\r\n- mark two of them (birthtime and birthtimeMs likely) as deprecated in GraphQL and show a warning when they are used\r\n- update usage across this repo to `birthTime`"
      },
      {
        "user": "Simonpedro",
        "created_at": "2019-07-04T14:27:06Z",
        "body": "Hey there! I took a look at this and I decided to follow what @sidharthachatterjee mentioned.\r\nI searched for usages of `birthtime` and `birthtimeMs` in the codebase but I only found them in types declarations files, so I've updated them too."
      },
      {
        "user": "henricazottes",
        "created_at": "2020-06-24T09:25:29Z",
        "body": "We still have those on version `2.1.0`"
      }
    ]
  },
  {
    "number": 14952,
    "title": "Error in gatsby-source-shopify",
    "created_at": "2019-06-20T07:59:47Z",
    "closed_at": "2019-07-18T08:20:57Z",
    "labels": [
      "help wanted",
      "good first issue"
    ],
    "url": "https://github.com/gatsbyjs/gatsby/issues/14952",
    "body": "## Description\r\n\r\nI am getting the following error during `npm run develop`:\r\n\r\n```\r\ngatsby-source-shopify/<shop-name> starting to fetch data from Shopify\r\nerror\r\nerror an error occured while sourcing data\r\nerror - \r\n  message:   access denied\r\n  locations: \r\n    - \r\n      line:   4\r\n      column: 7\r\n  path: \r\n    - shop\r\n    - blogs\r\nerror query: \r\n  \"\"\"\r\n\r\n      query GetBlogs($first: Int!, $after: String) {\r\n        shop {\r\n          blogs(first: $first, after: $after) {\r\n            pageInfo {\r\n              hasNextPage\r\n            }\r\n            edges {\r\n              cursor\r\n              node {\r\n                id\r\n                title\r\n                url\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n  \"\"\"\r\nvariables: \r\n  first: 250\r\n  after: null\r\n```\r\n\r\n### Steps to reproduce\r\n\r\nCreate a Storefront API Access Token that doesn't have access to \"Read content like articles, blogs, and comments\" and try to run gatsby\r\n\r\n### Expected result\r\n\r\nSite builds with only the queries I provide and successfully builds.\r\n\r\n### Actual result\r\n\r\nUnknown query is running and erroring. No where in my site am I running this query so I wouldn't expect it to run. My site doesn't need blogs from Shopify. The error is expected, the fact that it is running is not.\r\n\r\n### Environment\r\n\r\n  System:\r\n    OS: Linux 4.15 Ubuntu 18.04.1 LTS (Bionic Beaver)\r\n    CPU: (8) x64 AMD EPYC 3251 8-Core Processor\r\n    Shell: 4.4.19 - /bin/bash\r\n  Binaries:\r\n    Node: 12.2.0 - ~/.nvm/versions/node/v12.2.0/bin/node\r\n    npm: 6.9.0 - ~/.nvm/versions/node/v12.2.0/bin/npm\r\n  npmPackages:\r\n    gatsby: ^2.9.4 => 2.9.4\r\n    gatsby-image: ^2.1.4 => 2.1.4\r\n    gatsby-plugin-manifest: ^2.1.1 => 2.1.1\r\n    gatsby-plugin-offline: ^2.1.3 => 2.1.3\r\n    gatsby-plugin-react-helmet: ^3.0.12 => 3.0.12\r\n    gatsby-plugin-sharp: ^2.1.5 => 2.1.5\r\n    gatsby-source-filesystem: ^2.0.39 => 2.0.39\r\n    gatsby-source-graphql: ^2.0.19 => 2.0.19\r\n    gatsby-source-shopify: ^2.0.32 => 2.0.32\r\n    gatsby-transformer-sharp: ^2.1.21 => 2.1.21\r\n  npmGlobalPackages:\r\n    gatsby-cli: 2.6.7\r\n",
    "comments_url": "https://api.github.com/repos/gatsbyjs/gatsby/issues/14952/comments",
    "author": "altano",
    "comments": [
      {
        "user": "freiksenet",
        "created_at": "2019-06-20T08:56:22Z",
        "body": "`gatsby-source-shopify` doesn't currently have any way to limit what it queries for, so your token should have rights to access everything that it's trying to fetch.\r\n\r\nIt's possible to add this as configuration to `gatsby-source-shopify`, it could be something like:\r\n\r\n```\r\nfetchCollections: [`ARTICLES`, `BLOGS`, `PRODUCTS`]\r\n```\r\n\r\nWe'd love a PR with this feature, I wonder if you would be interested in doing it :)\r\n\r\nThank you for using Gatsby! :purple_heart: :muscle: "
      },
      {
        "user": "altano",
        "created_at": "2019-06-20T16:52:48Z",
        "body": "Thanks for the reply but I’m curious, why is the plugin fetching anything? Isn’t it just a data access plugin that lets me make queries? Why does it need blog posts if I never make a query for blog posts?"
      },
      {
        "user": "freiksenet",
        "created_at": "2019-06-25T08:49:55Z",
        "body": "@altano Gatsby source plugins generally fetch all available data. We can't know what data is needed, because the data might become required due to some transformer plugins in later stages."
      },
      {
        "user": "martingtheodo",
        "created_at": "2019-06-28T13:07:50Z",
        "body": "> `gatsby-source-shopify` doesn't currently have any way to limit what it queries for, so your token should have rights to access everything that it's trying to fetch.\r\n> \r\n> It's possible to add this as configuration to `gatsby-source-shopify`, it could be something like:\r\n> \r\n> ```\r\n> fetchCollections: [`ARTICLES`, `BLOGS`, `PRODUCTS`]\r\n> ```\r\n> \r\n> We'd love a PR with this feature, I wonder if you would be interested in doing it :)\r\n> \r\n> Thank you for using Gatsby! 💜 💪\r\n\r\n@freiksenet I did it a try!\r\nWould you mind reviewing this PR ?\r\n\r\nThanks in advance"
      },
      {
        "user": "freiksenet",
        "created_at": "2019-07-18T08:20:57Z",
        "body": "@martingtheodo Thank you for this PR! Let's continue talking there, I'll be closing this issue."
      },
      {
        "user": "sidharthachatterjee",
        "created_at": "2019-08-09T21:39:31Z",
        "body": "Fix published in `gatsby-source-shopify@2.2.2` thanks to @martingtheodo "
      },
      {
        "user": "bhupendrasinghacme",
        "created_at": "2023-07-07T11:10:58Z",
        "body": "gatsby-source-shopify/<shop name> starting to fetch data from Shopify\r\n\r\n ERROR \r\n\r\n\r\nerror an error occurred while sourcing data\r\n\r\n\r\n ERROR \r\n\r\n- \r\n  message:    Field 'url' doesn't exist on type 'Blog'\r\n  locations: \r\n    - \r\n      line:   12\r\n      column: 11\r\n  path: \r\n    - query GetBlogs\r\n    - blogs\r\n    - edges\r\n    - node\r\n    - url\r\n  extensions: \r\n    code:      undefinedField\r\n    typeName:  Blog\r\n    fieldName: url\r\n\r\n\r\n ERROR \r\n\r\nquery: \r\n  \"\"\"\r\n\r\n      query GetBlogs($first: Int!, $after: String) {\r\n        blogs(first: $first, after: $after) {\r\n          pageInfo {\r\n            hasNextPage\r\n          }\r\n          edges {\r\n            cursor\r\n            node {\r\n              id\r\n              title\r\n              url\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n  \"\"\"\r\nvariables: \r\n  first: 250\r\n  after: null\r\n\r\nsuccess source and transform nodes - 6.774s\r\n\r\nplease help me to resolve this problem\r\n"
      }
    ]
  },
  {
    "number": 12158,
    "title": "Create page in contribution guide that lists the files/folders for major parts of the Gatsby code base",
    "created_at": "2019-02-27T22:02:30Z",
    "closed_at": "2021-05-04T07:54:13Z",
    "labels": [
      "help wanted",
      "type: documentation"
    ],
    "url": "https://github.com/gatsbyjs/gatsby/issues/12158",
    "body": "E.g.\r\n\r\n- actions\r\n- reducers\r\n- api-runners\r\n- build scripts\r\n- etc.",
    "comments_url": "https://api.github.com/repos/gatsbyjs/gatsby/issues/12158/comments",
    "author": "KyleAMathews",
    "comments": [
      {
        "user": "chrismgonzalez",
        "created_at": "2019-10-14T18:26:04Z",
        "body": "Looking into claiming this issue.  Is it still up for grabs?"
      },
      {
        "user": "marcysutton",
        "created_at": "2019-10-17T20:55:43Z",
        "body": "Yes it is! Based on the original issue title including \"contributing\", this seems partially related to #11946. We would definitely welcome a PR, and if you have any questions let us know!"
      },
      {
        "user": "haardikdharma10",
        "created_at": "2020-08-25T22:00:55Z",
        "body": "@marcysutton I'd like to take up this issue. Just a few questions. Do I need to edit the gatsby-style-guide.md file? If yes, how should I go about it? Unfortunately, the description of the issue looks a bit incomplete. Would be great if you can help me get started. Thanks!"
      }
    ]
  },
  {
    "number": 9077,
    "title": "[gatsby-transformer-javascript-frontmatter] Improve README and add peer dependencies",
    "created_at": "2018-10-13T01:28:42Z",
    "closed_at": "2018-10-15T10:42:29Z",
    "labels": [
      "help wanted",
      "good first issue"
    ],
    "url": "https://github.com/gatsbyjs/gatsby/issues/9077",
    "body": "Currently, `gatsby-transformer-javascript-frontmatter` doesn’t warn when `gatsby-source-filesystem` isn’t configured; instead, it just fails silently.\r\n\r\nTo fix this, we need to:\r\n\r\n- [ ] Improve the README by including the filesystem plugin in the install step\r\n- [ ] Add the filesystem config to the plugin config example\r\n- [ ] Add `gatsby-source-filesystem` to `peerDependencies` in `gatsby-transformer-javascript-frontmatter` to warn developers if they’ve left it out\r\n\r\nPlugin config example:\r\n\r\n```js\r\nmodule.exports = {\r\n  plugins: [\r\n    {\r\n      resolve: `gatsby-source-filesystem`,\r\n      options: {\r\n        name: `pages`,\r\n        path: `${__dirname}/src/pages/`\r\n      }\r\n    },\r\n    'gatsby-transformer-javascript-frontmatter'\r\n  ]\r\n}\r\n```\r\n\r\nThis would make a great first issue for someone!",
    "comments_url": "https://api.github.com/repos/gatsbyjs/gatsby/issues/9077/comments",
    "author": "jlengstorf",
    "comments": [
      {
        "user": "TylerBarnes",
        "created_at": "2018-10-13T04:27:41Z",
        "body": "@jlengstorf thanks for being so on top of things! I was actually aware of the gatsby-source-filesystem requirement and I'm able to query the frontmatter using the plugin. It's definitely a good idea to add what you've listed though.\r\n\r\nThe problem I'm having is that I can't figure out how to connect the queried data to pages that are using the javascript files that have frontmatter. I have pages that are generated by other source plugins and they're using a javascript template that has frontmatter. I can't figure out for the life of me how to actually use the frontmatter in a page though. I'm wanting to pass the frontmatter to page context in gatsby node but following the tutorials and reading the guides doesn't help me unfortunately."
      },
      {
        "user": "rfbotto",
        "created_at": "2018-10-13T09:36:05Z",
        "body": "I would like to tackle this one, if that's okay @jlengstorf :) "
      },
      {
        "user": "TylerBarnes",
        "created_at": "2018-10-15T18:06:25Z",
        "body": "This issue was opened based on my comment in another issue but this issue doesn't actually solve the problem I was having there. Should this be closed? Should I open a different issue?"
      },
      {
        "user": "jlengstorf",
        "created_at": "2018-10-20T17:01:22Z",
        "body": "@TylerBarnes I think it might be worth opening a new issue or asking @DSchau on Discord. This issue isn't really scoped for the problem you're describing, so we should get something open to capture it directly."
      },
      {
        "user": "TylerBarnes",
        "created_at": "2018-10-22T17:52:21Z",
        "body": "@jlengstorf thanks again for all the awesome support you guys are doing! I ended up learning how to use the context api and realized it makes much more sense for what I'm trying to do.\r\n\r\nA Gatsby example of using javascript frontmatter in combination with another source plugin still might be helpful for someone in the future though."
      },
      {
        "user": "jlengstorf",
        "created_at": "2018-10-22T19:50:05Z",
        "body": "@TylerBarnes could you share your final code with me? I'd love to see how you're using the Context API for page transitions."
      },
      {
        "user": "TylerBarnes",
        "created_at": "2018-10-22T20:13:57Z",
        "body": "@jlengstorf I spent a bunch of time on it over the weekend and I'm packaging up a demonstration plugin as a kind of working proof of concept. I'll post it up for you once I get something worth looking at."
      }
    ]
  },
  {
    "number": 8132,
    "title": "gatsby-plugin-manifest add .ico format",
    "created_at": "2018-09-13T19:45:21Z",
    "closed_at": "2019-01-16T17:16:52Z",
    "labels": [
      "help wanted",
      "stale?"
    ],
    "url": "https://github.com/gatsbyjs/gatsby/issues/8132",
    "body": "## Summary\r\n\r\nSince many favicons are in .ico formats, it would be cool for gatsby-plugin-manifest to support .ico formats too. \r\n\r\n### Basic example\r\nIn `gatsby-config.js` \r\n<pre>\r\n{\r\n        resolve: `gatsby-plugin-manifest`,\r\n        options: {\r\n          name: siteName,\r\n          short_name: siteName,\r\n          start_url: '/',\r\n          display: 'standalone',\r\n          background_color: '#ffffff',\r\n          theme_color: '#ffffff',\r\n          icon: 'src/assets/favicon.ico',\r\n        },\r\n} </pre>\r\n\r\n### Motivation\r\n\r\nFrom my understanding, this is how to set a favicon with this plugin. So I think it makes sense to support favicon's usual format. \r\n",
    "comments_url": "https://api.github.com/repos/gatsbyjs/gatsby/issues/8132/comments",
    "author": "sarahannnicholson",
    "comments": [
      {
        "user": "kakadiadarpan",
        "created_at": "2018-09-14T06:55:52Z",
        "body": "Hi @sarahannnicholson, we are currently using `sharp` to process all the images and unfortunately it doesn't have the support for `.ico` files. You can check lovell/sharp#1118 for more details.\r\n\r\nWould you be interested in working on this which will enable the support for `.ico` files?"
      },
      {
        "user": "sarahannnicholson",
        "created_at": "2018-09-14T16:44:52Z",
        "body": "Yeah I can give it a shot!"
      },
      {
        "user": "gatsbot[bot]",
        "created_at": "2019-01-05T17:06:04Z",
        "body": "Old issues will be closed after 30 days of inactivity. This issue has been quiet for 20 days and is being marked as stale. Reply here or add the label \"not stale\" to keep this issue open!"
      },
      {
        "user": "gatsbot[bot]",
        "created_at": "2019-01-16T17:16:52Z",
        "body": "This issue is being closed due to inactivity. Is this a mistake? Please re-open this issue or create a new issue."
      }
    ]
  },
  {
    "number": 8115,
    "title": "Plan for PageRenderer",
    "created_at": "2018-09-13T11:44:23Z",
    "closed_at": "2019-01-17T17:16:50Z",
    "labels": [
      "help wanted",
      "type: documentation",
      "stale?"
    ],
    "url": "https://github.com/gatsbyjs/gatsby/issues/8115",
    "body": "I'm building something similar to the Gatsbygram example, using a modal with a URL that renders the page below.\r\n\r\nI'm wondering: Will `PageRenderer` be the way to go in the future? How to use it then? I couldn't find any documentation for it in the v2 API reference.",
    "comments_url": "https://api.github.com/repos/gatsbyjs/gatsby/issues/8115/comments",
    "author": "Kadrian",
    "comments": [
      {
        "user": "pieh",
        "created_at": "2018-09-13T15:02:14Z",
        "body": "Would you be interested in creating docs for it? This is component publicly exported from `gatsby` package - so at least for v2, it's ok to use it."
      },
      {
        "user": "gatsbot[bot]",
        "created_at": "2019-01-05T17:06:03Z",
        "body": "Old issues will be closed after 30 days of inactivity. This issue has been quiet for 20 days and is being marked as stale. Reply here or add the label \"not stale\" to keep this issue open!"
      },
      {
        "user": "gatsbot[bot]",
        "created_at": "2019-01-17T17:16:50Z",
        "body": "This issue is being closed due to inactivity. Is this a mistake? Please re-open this issue or create a new issue."
      }
    ]
  },
  {
    "number": 8011,
    "title": "node-fetch needs to be listed as dependency in gatsby-source-graphql",
    "created_at": "2018-09-10T02:04:16Z",
    "closed_at": "2018-09-11T08:46:28Z",
    "labels": [
      "help wanted",
      "type: maintenance"
    ],
    "url": "https://github.com/gatsbyjs/gatsby/issues/8011",
    "body": "`node-fetch` is used in `gatsby-source-graphql`, but it's not listed in `dependencies`. This causes issues when adding/removing `node-fetch` manually.",
    "comments_url": "https://api.github.com/repos/gatsbyjs/gatsby/issues/8011/comments",
    "author": "maartenbusstra",
    "comments": [
      {
        "user": "pieh",
        "created_at": "2018-09-10T09:21:03Z",
        "body": "@busstram  would You be interested in opening PR updating package.json?\r\n\r\n/cc @freiksenet "
      },
      {
        "user": "kakadiadarpan",
        "created_at": "2018-09-10T09:39:53Z",
        "body": "Also, other missing dependencies are `uuid`, `invariant` and `crypto`"
      }
    ]
  },
  {
    "number": 7461,
    "title": "pulling contional data from csv file",
    "created_at": "2018-08-20T07:28:53Z",
    "closed_at": "2019-02-06T17:27:39Z",
    "labels": [
      "help wanted",
      "type: question or discussion",
      "stale?"
    ],
    "url": "https://github.com/gatsbyjs/gatsby/issues/7461",
    "body": "Hi, \r\nMy question is how to pull specific data from a csv file using gatsbyjs and graphql.\r\nBy specific i mean to say suppose i happen to have a data of a single car but there are variation to the car as \r\nMake : Hyndai\r\nModel : I20 \r\nVariants : Elite i20 Diesel Magna, Elite i20 Petrol Asta \r\nSuppose the variant changes by clicking a dropdown or button how can i pull out specific price and features of that variant model\r\n\r\nMy Stack : Graphql, gatsby, react and data from csv file. ",
    "comments_url": "https://api.github.com/repos/gatsbyjs/gatsby/issues/7461/comments",
    "author": "WinterSoilder",
    "comments": [
      {
        "user": "endymion1818",
        "created_at": "2018-10-30T09:15:28Z",
        "body": "Hi @WinterSoilder, if I'm right you want to split those 2 items in variants into 2 fields, then loop over them, is that correct?"
      },
      {
        "user": "gatsbot[bot]",
        "created_at": "2019-01-26T17:16:49Z",
        "body": "Old issues will be closed after 30 days of inactivity. This issue has been quiet for 20 days and is being marked as stale. Reply here or add the label \"not stale\" to keep this issue open!"
      }
    ]
  },
  {
    "number": 6431,
    "title": "[v1] stylus plugin use and import cannot work together",
    "created_at": "2018-07-13T14:38:18Z",
    "closed_at": "2018-09-08T05:39:18Z",
    "labels": [
      "type: bug",
      "help wanted"
    ],
    "url": "https://github.com/gatsbyjs/gatsby/issues/6431",
    "body": "## Description\r\n\r\nI'm using the following config:\r\n\r\n```js\r\n    {\r\n      resolve: 'gatsby-plugin-stylus',\r\n      options: {\r\n        use: [\r\n          ...\r\n        ],\r\n        import: [\r\n          ...\r\n        ],\r\n      },\r\n    },\r\n```\r\n\r\nThe plugins in `use` are not taking effect.\r\n\r\nIn fact, I did a config dump in the stylus plugin, and seems that the second `config.merge` for `import` overrides the first config merge for `use`:\r\n\r\n```js\r\n    config.merge(function (current) {\r\n      current.stylus = {\r\n        import: options.import\r\n      };\r\n      return current;\r\n    });\r\n```\r\n\r\nThe merge result is that fields in `stylus` got replaced, instead of merged.\r\n\r\n### Environment\r\n\r\n  System:\r\n    OS: macOS Sierra 10.12.6\r\n    CPU: x64 Intel(R) Core(TM) i7-7820HQ CPU @ 2.90GHz\r\n    Shell: 5.2 - /bin/zsh\r\n  Binaries:\r\n    Node: 8.11.3 - /usr/local/bin/node\r\n    npm: 5.6.0 - /usr/local/bin/npm\r\n  Browsers:\r\n    Chrome: 67.0.3396.99\r\n    Firefox: 60.0.2\r\n    Safari: 11.1.1\r\n  npmPackages:\r\n    gatsby: ^1.9.273 => 1.9.273 \r\n    gatsby-link: ^1.6.45 => 1.6.45 \r\n    gatsby-plugin-nprogress: ^1.0.14 => 1.0.14 \r\n    gatsby-plugin-preact: ^1.0.17 => 1.0.17 \r\n    gatsby-plugin-react-helmet: ^2.0.11 => 2.0.11 \r\n    gatsby-plugin-sharp: ^1.6.48 => 1.6.48 \r\n    gatsby-plugin-stylus: ^1.1.21 => 1.1.21 \r\n    gatsby-plugin-typography: ^1.7.19 => 1.7.19 \r\n    gatsby-remark-autolink-headers: ^1.4.19 => 1.4.19 \r\n    gatsby-remark-copy-linked-files: ^1.5.37 => 1.5.37 \r\n    gatsby-remark-images: ^1.5.67 => 1.5.67 \r\n    gatsby-remark-prismjs: ^2.0.4 => 2.0.4 \r\n    gatsby-transformer-remark: ^1.7.44 => 1.7.44 \r\n  npmGlobalPackages:\r\n    gatsby-cli: 1.1.58\r\n",
    "comments_url": "https://api.github.com/repos/gatsbyjs/gatsby/issues/6431/comments",
    "author": "breezewish",
    "comments": [
      {
        "user": "KyleAMathews",
        "created_at": "2018-09-08T05:39:18Z",
        "body": "Due to the high volume of issues, we're closing out older ones without recent activity. Please open a new issue if you need help!"
      }
    ]
  },
  {
    "number": 6329,
    "title": "[v2] `--https` should shell out to get Dev cert, otherwise it runs the rest of the command as elevated user (sudo)",
    "created_at": "2018-07-06T18:46:21Z",
    "closed_at": "2018-09-08T05:33:42Z",
    "labels": [
      "type: bug",
      "help wanted"
    ],
    "url": "https://github.com/gatsbyjs/gatsby/issues/6329",
    "body": "I think this is what's happening, but my permissions were all off for any files gatsby touched during the initial setup for the certs. I think we need to spawn a new process for this so the current one doesn't end up with sudo privileges ",
    "comments_url": "https://api.github.com/repos/gatsbyjs/gatsby/issues/6329/comments",
    "author": "jquense",
    "comments": [
      {
        "user": "KyleAMathews",
        "created_at": "2018-09-08T05:33:42Z",
        "body": "Due to the high volume of issues, we're closing out older ones without recent activity. Please open a new issue if you need help!"
      }
    ]
  },
  {
    "number": 6131,
    "title": "[v2] Footer on Mobile should be highlighted when tapped ",
    "created_at": "2018-06-24T14:20:56Z",
    "closed_at": "2019-02-06T17:27:40Z",
    "labels": [
      "help wanted",
      "stale?"
    ],
    "url": "https://github.com/gatsbyjs/gatsby/issues/6131",
    "body": "The Footer at the bottom Docs, Tutorial, etc..  needs to provide some sort of indication like v1 when tapped ",
    "comments_url": "https://api.github.com/repos/gatsbyjs/gatsby/issues/6131/comments",
    "author": "deadcoder0904",
    "comments": [
      {
        "user": "zebapy",
        "created_at": "2018-08-10T12:58:50Z",
        "body": "I could take this if no one else has"
      },
      {
        "user": "deadcoder0904",
        "created_at": "2018-08-10T13:26:41Z",
        "body": "@zebapy Take it. I think no one else has otherwise they would've pinged here."
      },
      {
        "user": "zebapy",
        "created_at": "2018-09-13T15:32:02Z",
        "body": "I have not gotten to this so anyone else can claim if they want"
      },
      {
        "user": "sadewole",
        "created_at": "2018-10-26T20:52:39Z",
        "body": "I'll work on it"
      },
      {
        "user": "gatsbot[bot]",
        "created_at": "2019-01-26T17:16:48Z",
        "body": "Old issues will be closed after 30 days of inactivity. This issue has been quiet for 20 days and is being marked as stale. Reply here or add the label \"not stale\" to keep this issue open!"
      }
    ]
  },
  {
    "number": 5928,
    "title": "[www/showcase] Add descriptions, creators, and dates added",
    "created_at": "2018-06-15T19:56:04Z",
    "closed_at": "2019-01-20T17:16:49Z",
    "labels": [
      "help wanted",
      "stale?",
      "type: maintenance"
    ],
    "url": "https://github.com/gatsbyjs/gatsby/issues/5928",
    "body": "Most sites have no descriptions, creators, or dates added fields.\r\n\r\nThe community can add these one-by-one, or someone could write a script to contact each person and ask them whomever initially added their site to the Awesome Gatsby list can now update their site's fields in the showcase.\r\n\r\n^^^ @kyleamathews' idea",
    "comments_url": "https://api.github.com/repos/gatsbyjs/gatsby/issues/5928/comments",
    "author": "shannonbux",
    "comments": [
      {
        "user": "fk",
        "created_at": "2018-07-24T22:49:27Z",
        "body": "Related, I added #6722 which focuses on getting the `date_added` field in for our current sites in `sites.yml` added."
      },
      {
        "user": "gatsbot[bot]",
        "created_at": "2019-01-09T17:06:38Z",
        "body": "Old issues will be closed after 30 days of inactivity. This issue has been quiet for 20 days and is being marked as stale. Reply here or add the label \"not stale\" to keep this issue open!"
      },
      {
        "user": "gatsbot[bot]",
        "created_at": "2019-01-20T17:16:49Z",
        "body": "This issue is being closed due to inactivity. Is this a mistake? Please re-open this issue or create a new issue."
      }
    ]
  },
  {
    "number": 5803,
    "title": "Gatsby develop should auto reload",
    "created_at": "2018-06-08T13:14:29Z",
    "closed_at": "2018-12-10T17:06:04Z",
    "labels": [
      "help wanted",
      "stale?"
    ],
    "url": "https://github.com/gatsbyjs/gatsby/issues/5803",
    "body": "The live reload works great for frontend changes, but ideally it should auto-reload server and npm install. Now I have to stop and restart the server each time I touch the config, node or install a package.\r\n\r\nNot a big deal, but kind of annoying.",
    "comments_url": "https://api.github.com/repos/gatsbyjs/gatsby/issues/5803/comments",
    "author": "Amanej",
    "comments": [
      {
        "user": "mquandalle",
        "created_at": "2018-06-11T20:28:49Z",
        "body": "For comparison, this works in Meteor."
      },
      {
        "user": "gatsbot[bot]",
        "created_at": "2018-11-29T17:06:01Z",
        "body": "Old issues will be closed after 30 days of inactivity. This issue has been quiet for 20 days and is being marked as stale. Reply here or add the label \"not stale\" to keep this issue open!"
      },
      {
        "user": "gatsbot[bot]",
        "created_at": "2018-12-10T17:06:03Z",
        "body": "This issue is being closed due to inactivity. Is this a mistake? Please re-open this issue or create a new issue."
      }
    ]
  },
  {
    "number": 5538,
    "title": "[gatsby-remark-smartypants] Triple dash not rendered",
    "created_at": "2018-05-24T10:58:37Z",
    "closed_at": "2018-06-11T12:34:41Z",
    "labels": [
      "help wanted",
      "type: documentation"
    ],
    "url": "https://github.com/gatsbyjs/gatsby/issues/5538",
    "body": "# Description\r\n\r\nWhen setting `dashes` to `oldSchool` or `inverted` three dashes will always render an HR to the DOM. _I don't see how this could ever work because three dashes are converted to a Horizontal Rule in standard Markdown and I'm guessing this will always take priority._\r\n\r\n### Steps to reproduce\r\n\r\n1. Add `gatsby-remark-smartypants`\r\n2. Use the following config:\r\n\r\n```\r\n{\r\n  resolve: `gatsby-remark-smartypants`,\r\n  options: {\r\n    dashes: `oldschool`, // Two dashes for an en-dash, three for an em-dash\r\n  },\r\n}\r\n```\r\n\r\n3. Type three dashes in a markdown document:\r\n\r\n```\r\n---\r\n```\r\n\r\n### Expected result\r\n\r\nAccording to the linked docs an em-dash should be rendered to the DOM.\r\n\r\n### Actual result\r\n\r\nAn HR is rendered to the DOM\r\n\r\n### Environment\r\n* Gatsby version (`npm list gatsby`): gatsby@1.9.261\r\n* gatsby-cli version (`gatsby --version`): gatsby-cli@1.1.52\r\n* Node.js version: 9.3.0\r\n* Operating System: OSX 10.11.6",
    "comments_url": "https://api.github.com/repos/gatsbyjs/gatsby/issues/5538/comments",
    "author": "Undistraction",
    "comments": [
      {
        "user": "m-allanson",
        "created_at": "2018-06-07T19:53:27Z",
        "body": "This sounds like we should update the docs?"
      },
      {
        "user": "Undistraction",
        "created_at": "2018-06-11T12:34:41Z",
        "body": "Just sat down to try and get to the bottom of this and it is working for me now. Not sure what changed but I'll reopen if it proves to be a problem again. "
      }
    ]
  },
  {
    "number": 5351,
    "title": "plugin: Post-build HTML Validation",
    "created_at": "2018-05-09T22:54:40Z",
    "closed_at": "2018-12-01T17:06:02Z",
    "labels": [
      "help wanted",
      "stale?"
    ],
    "url": "https://github.com/gatsbyjs/gatsby/issues/5351",
    "body": "## Summary\r\n\r\nHow about a plugin to run post-build that runs each page that has been built through an HTML validator and reports on any validation errors? Although it's harder to make these kind of errors nowadays thanks to the fact so much of the html is generated and editors are much better at flagging these errors early on, I think this might still be useful.\r\n\r\n### Motivation\r\n\r\nThere are two very good reasons to ensure HTML is valid:\r\n\r\n1. There are a wealth of subtle CSS errors that can be causes by invalid HTML given the variety in how browsers handle invalid markup.\r\n2. HTML validity is a signal used by Google in ranking a site.\r\n",
    "comments_url": "https://api.github.com/repos/gatsbyjs/gatsby/issues/5351/comments",
    "author": "Undistraction",
    "comments": [
      {
        "user": "m-allanson",
        "created_at": "2018-05-13T06:50:39Z",
        "body": "Good idea! Referencing the plugin wishlist at #1199 for anyone that might want to pick this up."
      },
      {
        "user": "gatsbot[bot]",
        "created_at": "2018-11-20T17:06:01Z",
        "body": "Old issues will be closed after 30 days of inactivity. This issue has been quiet for 20 days and is being marked as stale. Reply here or add the label \"not stale\" to keep this issue open!"
      },
      {
        "user": "gatsbot[bot]",
        "created_at": "2018-12-01T17:06:01Z",
        "body": "This issue is being closed due to inactivity. Is this a mistake? Please re-open this issue or create a new issue."
      }
    ]
  },
  {
    "number": 5195,
    "title": "[v2] Add alias to `pathContext` in runtime so it's deprecated (not just removed)",
    "created_at": "2018-04-30T15:54:48Z",
    "closed_at": "2018-05-15T14:41:17Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/gatsbyjs/gatsby/issues/5195",
    "body": "",
    "comments_url": "https://api.github.com/repos/gatsbyjs/gatsby/issues/5195/comments",
    "author": "KyleAMathews",
    "comments": [
      {
        "user": "pieh",
        "created_at": "2018-05-15T14:41:17Z",
        "body": "Closed with #5387"
      }
    ]
  },
  {
    "number": 4565,
    "title": "Windows build fails with special characters in path",
    "created_at": "2018-03-16T18:02:54Z",
    "closed_at": "2019-11-19T07:48:32Z",
    "labels": [
      "type: bug",
      "help wanted"
    ],
    "url": "https://github.com/gatsbyjs/gatsby/issues/4565",
    "body": "## Description\r\n\r\nBuilds will fail on Windows for paths that contain non-`[a-zA-Z0-9]` characters such as `ä`, `ö`, `ü`.\r\n\r\nRefs #3183 @anttti @LeKoArts \r\n\r\n### Steps to reproduce\r\n\r\n- On a Windows PC\r\n- Create a Gatsby project in a folder who's path contains characters like `ä`, `ö`, `ü`\r\n- Run `gatsby build`\r\n\r\n### Expected result\r\n\r\nThe site should build\r\n\r\n### Actual result\r\n\r\nThe site errors with:\r\n\r\n```\r\nerror UNHANDLED REJECTION\r\n\r\n  TypeError: Cannot read property 'jsonName' of undefined\r\n```\r\n\r\n### Environment\r\n\r\n* Operating System: Windows",
    "comments_url": "https://api.github.com/repos/gatsbyjs/gatsby/issues/4565/comments",
    "author": "m-allanson",
    "comments": [
      {
        "user": "KyleAMathews",
        "created_at": "2018-09-08T04:34:17Z",
        "body": "Due to the high volume of issues, we're closing out older ones without recent activity. Please open a new issue if you need help!"
      },
      {
        "user": "LekoArts",
        "created_at": "2018-09-08T06:05:14Z",
        "body": "@KyleAMathews Don’t understand why this one is closed... It’s still a bug at least 6 people had and it just wasn’t solved by anyone until now"
      },
      {
        "user": "KyleAMathews",
        "created_at": "2018-09-08T06:11:06Z",
        "body": "👍 cool — just closed 400 so might have closed a few that shouldn't have.\r\n"
      },
      {
        "user": "gatsbot[bot]",
        "created_at": "2019-01-03T17:06:02Z",
        "body": "Old issues will be closed after 30 days of inactivity. This issue has been quiet for 20 days and is being marked as stale. Reply here or add the label \"not stale\" to keep this issue open!"
      },
      {
        "user": "vladar",
        "created_at": "2019-10-29T12:42:39Z",
        "body": "I am seeing different issue related to GraphQL:\r\n\r\n```\r\nThe GraphQL query from C:/dev/sandbox/path-with-ä-ру/src/components/image.js failed.\r\n\r\nErrors:\r\n  Syntax Error: Cannot parse the unexpected character \"\\u0420\".\r\n\r\n  GraphQL request:1:27\r\n  1 | query cDevSandboxPathWithAРуSrcComponentsImageJs2969191536 {\r\n    |                           ^\r\n  2 |   placeholderImage: file(relativePath: {eq: \"gatsby-astronaut.png\"}) {\r\nPlugin:\r\n  none\r\nQuery:\r\n  query cDevSandboxPathWithAРуSrcComponentsImageJs2969191536 {\r\n    placeholderImage: file(relativePath: {eq: \"gatsby-astronaut.png\"}) {\r\n      childImageSharp {\r\n        fluid(maxWidth: 300) {\r\n          ...GatsbyImageSharpFluid\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  fragment GatsbyImageSharpFluid on ImageSharpFluid {\r\n    base64\r\n    aspectRatio\r\n    src\r\n    srcSet\r\n    sizes\r\n  }\r\n```"
      },
      {
        "user": "wardpeet",
        "created_at": "2019-11-15T14:40:44Z",
        "body": "Feels like we need to slugify the query name. Does that sound right @vladar ?"
      },
      {
        "user": "vladar",
        "created_at": "2019-11-15T15:28:26Z",
        "body": "Yep, do we use any library for this already? Or maybe you have one in mind?"
      },
      {
        "user": "vladar",
        "created_at": "2019-11-19T07:48:32Z",
        "body": "Should be fixed in gatsby `2.17.17`"
      }
    ]
  },
  {
    "number": 4360,
    "title": "Warn if context values passed to createPage are different types than others or empty",
    "created_at": "2018-03-05T02:08:22Z",
    "closed_at": "2019-02-10T17:27:35Z",
    "labels": [
      "help wanted",
      "stale?",
      "type: maintenance"
    ],
    "url": "https://github.com/gatsbyjs/gatsby/issues/4360",
    "body": "Someone creating pages could run into a mysterious GraphQL error if any of the pages context has missing information:\r\n\r\n```\r\nErrors:\r\nGraphQLError: Variable \"$slug\" of required type \"String!\" was not provided.\r\n```\r\n\r\nThis is hard for someone new to Gatsby to debug. We should check against this and warn.",
    "comments_url": "https://api.github.com/repos/gatsbyjs/gatsby/issues/4360/comments",
    "author": "KyleAMathews",
    "comments": [
      {
        "user": "mainframev",
        "created_at": "2018-05-07T15:08:10Z",
        "body": "yeah, right now have this issue, trying to fix, but without result :("
      },
      {
        "user": "BerlinaLI",
        "created_at": "2018-07-19T11:47:39Z",
        "body": "i encounter this issue and found out it is because i didnot write slug in graphql query in the create page function in  my gatsby node file\r\n"
      },
      {
        "user": "Jonqth",
        "created_at": "2018-09-04T14:23:09Z",
        "body": "Hi @KyleAMathews wanted to know if there's any update on this.\r\n\r\nI'm using a starter for dato, my request in `gatsby-node.js` work just fine with `gatsby develop` although the error is till log when building.\r\n\r\nWhen i try `gatsby build` the same exact error you mentioned pops up, as if there's no context provided to my request.\r\n\r\n__EDIT__: So, not so long after posting this i found that the problem came from overriding what `createPage()` does in `gatsby-node.js` by having my components inside `/pages` when for the `context`to be actually passed onto the template the component needs to be inside `/templates`"
      },
      {
        "user": "peterjaap",
        "created_at": "2018-11-10T12:31:49Z",
        "body": "@Jonqth thanks so much for that last edit. Finally fixed this issue after hours of hunting..!"
      },
      {
        "user": "gatsbot[bot]",
        "created_at": "2019-01-30T17:16:49Z",
        "body": "Old issues will be closed after 30 days of inactivity. This issue has been quiet for 20 days and is being marked as stale. Reply here or add the label \"not stale\" to keep this issue open!"
      },
      {
        "user": "gatsbot[bot]",
        "created_at": "2019-02-10T17:27:35Z",
        "body": "Hey again!\n\nIt’s been 30 days since anything happened on this issue, so our friendly neighborhood robot (that’s me!) is going to close it.\n\nPlease keep in mind that I’m only a robot, so if I’ve closed this issue in error, I’m `HUMAN_EMOTION_SORRY`. Please feel free to reopen this issue or create a new one if you need anything else.\n\nThanks again for being part of the Gatsby community!"
      },
      {
        "user": "alanshortis",
        "created_at": "2019-07-15T14:22:46Z",
        "body": "I have run into this error today - when creating pages from a folder of `.mdx` files, I was defining a component in `createPage` that lives in my `src/pages` folder. Moving my post component to `src/components` avoids it.\r\n\r\nAny reason this should be the case? It's not a big deal, but I'd prefer to have the component in my pages folder since it's creating pages.\r\n\r\nAll pages are created as expected, I just get this error."
      },
      {
        "user": "tianzhich",
        "created_at": "2019-07-21T17:02:47Z",
        "body": "I have run into this error when migrating from v1 to v2, the context values passed to createPage are same types and not null. \r\n\r\nAnyone have same problems? "
      },
      {
        "user": "whalesingswee",
        "created_at": "2019-08-04T14:45:26Z",
        "body": "@tianzhich I was able to fix the problem after moving my post to `/src/components` instead of using it inside `/src/pages` as @alanshortis  mentioned. Thanks!"
      },
      {
        "user": "tianzhich",
        "created_at": "2019-08-05T08:32:31Z",
        "body": "I solved in #15977 cause the difference between StaticQuery and page query.\r\n\r\nMaybe it could help someone."
      }
    ]
  },
  {
    "number": 3575,
    "title": "Add peerDependencies to every plugin",
    "created_at": "2018-01-18T01:54:48Z",
    "closed_at": "2018-01-23T16:56:55Z",
    "labels": [
      "help wanted",
      "good first issue"
    ],
    "url": "https://github.com/gatsbyjs/gatsby/issues/3575",
    "body": "Going forward, we'll be doing every so often major releases for Gatsby but individual plugins might not need upgraded as the APIs they depend on won't have changed. We should prepare for that now by adding a `peerDependencies` for Gatsby to every plugin. Then when there is a breaking change that affects the plugin or there's a new major release of Gatsby, we update the peerDependencies for the plugin.",
    "comments_url": "https://api.github.com/repos/gatsbyjs/gatsby/issues/3575/comments",
    "author": "KyleAMathews",
    "comments": [
      {
        "user": "tsriram",
        "created_at": "2018-01-21T05:57:05Z",
        "body": "If it's still not taken up by anyone, I'd like to take this up."
      },
      {
        "user": "KyleAMathews",
        "created_at": "2018-01-21T06:39:03Z",
        "body": "Nope, have at it!"
      },
      {
        "user": "tsriram",
        "created_at": "2018-01-21T06:48:43Z",
        "body": "Awesome! What version should be set as the peer dependency now - the latest one on npm v1.9.164?"
      },
      {
        "user": "KyleAMathews",
        "created_at": "2018-01-21T07:30:10Z",
        "body": "Just do `^1.0.0` to keep things simple."
      }
    ]
  },
  {
    "number": 2405,
    "title": "Output warning the graphql inference process drops fields due to type mis-matches",
    "created_at": "2017-10-09T21:38:21Z",
    "closed_at": "2018-04-15T09:15:04Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/gatsbyjs/gatsby/issues/2405",
    "body": "Users are surprised sometimes due to fields in their data being dropped due to mis-matched types. Instead of silently dropping data, we should output a warning about the data source (file(s), external API, etc) and any transformers involved and examples of the mis-matched data.\r\n\r\n#2404 is an example of an issue coming from the lack of this warning and there's been more in the past.\r\n\r\n/cc @danoc @jquense ",
    "comments_url": "https://api.github.com/repos/gatsbyjs/gatsby/issues/2405/comments",
    "author": "KyleAMathews",
    "comments": [
      {
        "user": "m-allanson",
        "created_at": "2018-04-13T16:23:56Z",
        "body": "Related: #3905"
      },
      {
        "user": "pieh",
        "created_at": "2018-04-15T09:15:04Z",
        "body": "Closed via #3905"
      }
    ]
  },
  {
    "number": 1975,
    "title": "Feature request: secure local Gatsby server option (https protocol)",
    "created_at": "2017-08-31T00:04:50Z",
    "closed_at": "2018-03-30T05:19:09Z",
    "labels": [
      "help wanted",
      "good first issue"
    ],
    "url": "https://github.com/gatsbyjs/gatsby/issues/1975",
    "body": "Feature request for local https protocol some API's don't accepts local http protocol returning URL's. It would be nice feature to have the option to a secure local Gatsby server.",
    "comments_url": "https://api.github.com/repos/gatsbyjs/gatsby/issues/1975/comments",
    "author": "syndia",
    "comments": [
      {
        "user": "KyleAMathews",
        "created_at": "2017-12-20T05:21:37Z",
        "body": "preact-cli has a nice implementation we could copy."
      },
      {
        "user": "KyleAMathews",
        "created_at": "2017-12-20T05:21:43Z",
        "body": "Would love a PR for this!"
      },
      {
        "user": "pwener",
        "created_at": "2017-12-22T18:09:32Z",
        "body": "Can I try, can you sign me?"
      },
      {
        "user": "KyleAMathews",
        "created_at": "2017-12-22T18:11:57Z",
        "body": "@pwener it's yours!"
      },
      {
        "user": "tsriram",
        "created_at": "2018-02-18T07:26:39Z",
        "body": "@pwener are you working on this? If not, I'll give it a try."
      },
      {
        "user": "tsriram",
        "created_at": "2018-03-30T05:19:08Z",
        "body": "Done in #4522 "
      }
    ]
  },
  {
    "number": 1144,
    "title": "[1.0] Can't use local plugins",
    "created_at": "2017-06-11T09:31:34Z",
    "closed_at": "2017-06-12T18:06:44Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/gatsbyjs/gatsby/issues/1144",
    "body": "There doesn't seem to be a way to use plugins that are stored in the project's repository itself.\r\n\r\n```js\r\n// gatsby-config.js\r\nmodule.exports = {\r\n  plugins: [\r\n    'gatsby-source-filesystem',\r\n    'gatsby-transformer-sharp',\r\n\r\n    // Let's try to load our own custom plugin\r\n    // Relative path?\r\n    './lib/my-gatsby-custom-plugin', // nope\r\n\r\n    // Relative path in an object?\r\n    { resolve: './lib/my-gatsby-custom-plugin' }, // nope\r\n\r\n    // Absolute paths?\r\n    require.resolve('./lib/my-gatsby-custom-plugin'), // nope\r\n    { resolve: require.resolve('./lib/my-gatsby-custom-plugin') }, // nope\r\n    '/absolute/path/to/plugin.js', // nope\r\n\r\n    // Paths that are directories?\r\n    '/absolute/path/to/plugin/', // nope\r\n    '/absolute/path/to/plugin', // nope\r\n    { resolve: '/absolute/path/to/plugin' }, // nope\r\n  ]\r\n}\r\n```\r\n\r\nCan I suggest this as a feature? Of course it needs a package.json as well, but that doesn't seem to be such a bad idea.",
    "comments_url": "https://api.github.com/repos/gatsbyjs/gatsby/issues/1144/comments",
    "author": "rstacruz",
    "comments": [
      {
        "user": "0x80",
        "created_at": "2017-06-11T19:53:40Z",
        "body": "This is being worked on already #1126 "
      },
      {
        "user": "KyleAMathews",
        "created_at": "2017-06-12T18:06:44Z",
        "body": "Would love your thoughts @rstacruz on the design in #1126! Closing this issue in favor of that one."
      }
    ]
  },
  {
    "number": 946,
    "title": "Trigger a full page reload when HMR fails",
    "created_at": "2017-05-09T18:52:19Z",
    "closed_at": "2017-12-17T17:42:53Z",
    "labels": [
      "help wanted",
      "stale?"
    ],
    "url": "https://github.com/gatsbyjs/gatsby/issues/946",
    "body": "It isn't obvious that HMR has failed unless you have your browser console open and know what to look for. We should copy create-react-app here.",
    "comments_url": "https://api.github.com/repos/gatsbyjs/gatsby/issues/946/comments",
    "author": "KyleAMathews",
    "comments": [
      {
        "user": "stale[bot]",
        "created_at": "2017-12-02T16:13:54Z",
        "body": "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
      },
      {
        "user": "stale[bot]",
        "created_at": "2017-12-17T17:42:51Z",
        "body": "This issue has been automatically closed due to inactivity.\n"
      }
    ]
  },
  {
    "number": 14,
    "title": "non-index pages are created as name-of-file.html/index.html",
    "created_at": "2015-07-29T19:56:17Z",
    "closed_at": "2015-09-04T16:53:50Z",
    "labels": [
      "type: bug",
      "help wanted"
    ],
    "url": "https://github.com/gatsbyjs/gatsby/issues/14",
    "body": "",
    "comments_url": "https://api.github.com/repos/gatsbyjs/gatsby/issues/14/comments",
    "author": "KyleAMathews",
    "comments": [
      {
        "user": "phlogisticfugu",
        "created_at": "2015-09-01T17:14:15Z",
        "body": "Just found gatsby, which looks pretty much what I'd wanted in a static site generator.\n\nLooks like this issue is still occurring.  To confirm, if there's a file:\n\npages/about.md\n\nthen should it build to:\n\npublic/about/index.html\nor\npublic/about.html\n?\n\nor should that maybe be configurable?\n"
      },
      {
        "user": "KyleAMathews",
        "created_at": "2015-09-01T17:36:49Z",
        "body": "Glad to hear!\n\nAnd yes... this bug needs fixed still. It shouldn't be too hard to fix just haven't taken the time yet.\n\nI think it'd be nice to default to building index files (`about.md` becomes `/about/index.html`) as aesthetically I prefer urls without `.html` at the end but definitely make it configurable.\n\nA PR to fix this would be great!\n"
      },
      {
        "user": "phlogisticfugu",
        "created_at": "2015-09-02T09:52:12Z",
        "body": "made a PR.\n\nfound that the usage of `about/index.html` came from the static-site-generator-webpack-plugin so that was not easily configurable.\n"
      },
      {
        "user": "KyleAMathews",
        "created_at": "2015-09-02T18:48:07Z",
        "body": "Oh interesting... that should be fixed. I'll open an issue on the static-site-generator plugin then.\n"
      }
    ]
  }
]